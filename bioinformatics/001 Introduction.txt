In this lecture series, we're going to look at the programming language called Python.
We're going to look at how to use it as a tool to solve mathematical problems,
and it really is very powerful.
We're also going to have a short look at vPython in this first lecture,
and then at the various modules that you install together with Python
to extend the capabilities of the programming language
specifically for mathematical problems.
So here we are on a Mac, and we've launched a browser for the internet,
and we've typed in www.python.org,
and this is the page that we'll land on.
Now, the first thing to do would be to go to the downloads page,
and you'll find for Windows, Mac OS, and versions to install.
The first thing that you are going to notice is that there are various versions here.
We have Python 3.4 and 2.7.6.
Now, depending on the Mac OS that you have, some form of Python might already be installed,
and you should check what that is.
Now, you've got to decide between these two.
Now, Python is a programming language.
When you download this, you'll be able to do a lot,
but the strength of Python really lies in the fact that people come together
and they write additional packages that expand on the capabilities of the programming language.
And many of these packages are written specifically then for various versions of Python.
And whereas 3.4 might be the newest and the shiniest version of Python,
some of the libraries that you want to use might not already have been developed for 3.4.
And it might be just wise and just a bit conservative just to stick with the 2.7.6.
When you do that, you have more of a surety that the extra packages that you want to install
to expand the capabilities of Python to be available to you.
So, personally, I go for 2.7, 2.7.5, 2.7.6.
There's a lot of other stuff on this website, really, the documentation.
That is where you can go to look at beginners guides, developers guides, some audio and visual talks.
And you can really learn a lot just from looking at this website and downloading the documentation.
Now, next time we're going to go to vpython.org and that's visual python.
And that's also a bit of an extension, a visual extension.
And really for developing nice little graphics and for physics perhaps.
Nice little arrows, round balls, any 3D environment really that you can create with visual python.
And very nice to use at times.
So, you get the Windows and Macintosh versions.
So, if you go onto Macintosh there, it'll tell me what I have to do.
I have to have 2.7.6.
I have to have vpython installed then and then also the active TCL 8.6.1.
And if you follow these, you will have vpython installed as well.
And in a bit I'll just show you what that adds.
Now, as far as the packages are concerned, if we go to this site, sourceforge.net,
the first thing or the first suggestion that I do have to expand the capabilities of python
is to install this numbers python, numerical python, numpy.
So, when you search for that, this is going to come up.
And there you go, search results for numpy.
That's numerical python.
You can click on that.
It's going to suggest what you should download.
But what I would rather say is just go to browse all files.
Anytime you use sourceforge.net, there is numpy again, numerical python.
And there you get all the versions.
You can see how many people have downloaded that day.
So, you can certainly see version 1.811 certainly has had more downloads of note.
Now, it's very difficult sometimes to get the correct package to install with your version of python.
It might very well be with the 2.7.6 that you might have to go to this 1.7 and install that.
When you start using these additional packages inside of python,
you might find that these things don't talk to each other and that you get all sorts of error.
And you might have to play around with what version of these extra packages you install.
Another package that you must install that I would suggest is really is matplotlib.
It's a library of plotting functions.
Just click on matplotlib and then usually 1.3.1, 1.3.0 would suffice as far as choosing which one to install.
You simply click on that.
The files open that you can download them.
Double click on them and follow the instructions to install.
Another of the packages is scientific python.
Again, don't go for these beta versions or release candidates.
Try for something stable.
So, in this instance, I would suggest 0.13.3.
The last one is symbolicpy.
And that is really a computer algebra system.
So, that expands python really into allowing you to do a CAS, computer algebra system type of equation.
So, those really are the expansions that I would suggest.
Now, if you've installed python on the Mac and on Windows and you've installed vpython, you're going to get these shells, what they are called, that you can do some of your coding in.
Now, if you install on any kind of Linux system, for instance Linux Mint, Ubuntu, when you use the software package managers, it makes it a lot easier in that you're going to install, it's going to choose for you which the correct versions to install of both python and the packages.
You are going to have to install separate programming to do your coding in.
And also, your shell is actually just going to be your terminal.
So, if you launch terminal and you type in the keyword python, it's going to start that.
Here on the Mac, if I just go to the launch pad and I go to the end here, you'll notice idle and vidle for python 2.7.
So, that's going to be the visual shell and this is just going to be the normal python shell.
So, if I click on that, there we go, a beautiful python shell into which I can just type code.
Now, we'll see shortly that you can just type in line by line code here as opposed to constructing a whole program that can run.
So, in the next video, we'll take it from here.
Thank you from here.
