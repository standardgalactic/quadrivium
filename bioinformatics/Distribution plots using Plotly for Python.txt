Another tutorial on Plotly using Python. So here we are in a Jupyter notebook. I'm going to
execute this first cell as per usual, importing my cascading style sheet so
that we have a bit of a better looking notebook here. So distribution plots. Let's start off by
just importing our Plotly library. As per usual, I'm importing iPlot because I want to plot right
inside of my notebook. And I've got to initialize this notebook mode. So let's do that. And then
I'm going to import the high-level graph objects as go. So import Plotly.graph underscore objs for
objects as go. But something new. I'm also going to import the figure factory as ff. Let's do that.
Let's create a bit of data for working with on this notebook. So I'm going to import the random
module. And I'm going to import NumPy using the standard abbreviation NP. And I'm also going to
seed the pseudo random number generator. So let's create three computer variables. I'm going to call
them age, salary, and binary gender. So for age, we're going to do a uniform distribution. So
NP.random.uniform. The low must be 21. The high, 75. And I want 1,000 data point values in that
uniform distribution in that domain from 21 through 75. Next, the salary I'm taking from a normal
distribution. And you see the three arguments here. LOC means the mean. Scale means the standard
deviation. And size is the number of values I want. So from a mean of 3,000 with a standard deviation of
1,000. I want 1,000 data point values from this normal distribution. And lastly, from the random
module, we're just going to do random.choices. And purely to keep things easy here and easy to explain
at least, we're going to stick with this binary distribution, binary values sample space for my
gender variable here. So only female and male. Just to make things easy. And 1,000 of those,
please. I'm going to import pandas because I just want to create a data frame. And here we have the
computer variable df. And I'm going to do a pandas.dataframe. And I created by key value pairs
for a with a Python dictionary. So I have age as my column header. And then the age variable that we
created there. Salary with salary and gender with a binary gender. And I'm just going to create two
sub data frames there. So if we look down the gender column, only include female. And down the
gender column, only include male. And I'm going to call those sub data frames, female and male.
So let's run that. And then just let's look at the first five rows. So we just call the head
function there, female.head. Our method there. And we have the first five rows. We see the age there.
And in the gender column, we'll only find females there. And we find the salary column there. So you
can see with these pandas data frames, they actually look like just flat spreadsheet kind
of files. And let's look at the last five rows of the male. And again, just to make sure the gender
column will only contain males. So let's create our first bare bones distribution plot. And the way
that we're going to do that is just create a computer variable called fig. And that is going to be ff for
our figure factory there dot. One of the methods there is the create dist plot. And it takes a couple
of arguments. The first one is hist data. And that's the data we want in this distribution plot. Now this
distribution plot is going to look like histograms, nothing other than a special kind of histogram. So
we've got to give it a list to work with. And what we're going to do is take the whole data frame,
go down the salary column. And we say the values in that and then to list the to list function there
we call on this on the values of the salary because we just want to create this this list to work with.
And you see it is there inside of the square brackets, the group labels, well, we're only going
to do one group here, and I'm just going to call it salary, salary distribution. And as with a histogram,
we have to have a bin size. And for each, we have to have its own bin size, but we only have one here.
So in our list, we'll only have 200. So that might not make a lot of sense until we actually see what
the distribution plot looks like. So let's run that. And there we have our distribution plot.
We have the nice histogram down the bottom here. And indeed, the bin size is 200. And we also see
this kernel estimate here, kernel density estimate, as it tries to draw this distribution line here.
And there is our group label. We only have, we're only plotting one thing, and that's the salary
distribution. So there we go. This is called the rug plot underneath. And each of these little vertical
lines is actually one of our salary values. And you can see the distribution. You can also see that
we took this from a normal distribution. And you can see the Gaussian type, or bell shaped,
at least that it attempts to take there. So let's just add a title. And we're going to do that by just
using one of the ways to do it, at least. And that is just to call fig layout dot update.
So I've created my figure just as above. And I'm going to update the layout. So just another way of
doing it instead of doing it via dictionary, as you've seen before. And I'm just going to add a
title. And that title is just going to be salary distribution. There we go. We've got a beautiful,
beautiful title up above. So that's not too much fun. Let's just create two data sets.
So now my hist data, I'm going to make a list of those. So there's just so many ways of doing things
in Plotly. And you might find that confusing to start off with, but it also creates a lot of power.
And you can find the way that works for you. So here, I'm going to take hist data,
create a computer variable. And I'm going to pass a list of values. The first list,
I'm going to take the female sub data frame, the salary column, the values in that column,
and then create a list of that. So the two lists there. And then same for the male. My group labels
are now going to be female salary and male salary. And now I'm going to create my fig. And let's
create this plot, the hist data. And I just passed the hist data there. So I'm not saying hist data
equals hist data, because these are just keywords, the normal standard keywords. So we actually don't
have to use them. And then group labels is going to be that list. And then my bin size, I want 200
and 200. So the same bin size for each, which means you can make the bin sizes different for each of
those. Let's do that. I plot. And now we can see we have male salary in orange there and female
salary in this bluish color. And you see the rug plot for each of those. Beautifully done. Let's change
the colors of this. So everything exactly the same. But I'm going to bring in a new argument to my
create this plot here. And colors. I'm going to do an RGB with with the opacity here and 0.8 and 0.8
for the opacity. You can see 20, 20, 20. So that's going to be very dark gray and 150, 150, 150. It's
like sort of a middle gray color. Let's run that and have a look. And there we go. You can see the light
color for male, the darker color for female there. And because we set the opacity, so you can actually
see the one shine through the other. Now, instead of this kernel density estimate plot here, we can
actually just use the data that comes out of that and create a mean and a standard deviation so that
we can create this normal distribution as instead of this kernel density estimate that we see there.
We again have our hist data, our group labels. We create this displot. We have the hist data, the group
labels, the bin sizes. But now the curve type is new. It's a new argument. And we're just going to
set it to normal. And here's just one other way that we can update this layout or create this layout.
So I'm going to call fig.layouts instead of the inverted in the quotation marks and the square
brackets. I'm just calling dot layout and dot update. And I'm passing this dictionary to it. So
key value pair, the title fitted. So just another way. It just makes it so powerful and easy to use.
You can use whatever way fits you. So now we can see this normal curve that it took from the data,
just doing the mean and the standard deviation so that we can draw this normal distribution here.
And you can see the two values there for male and female. So in case you want to omit some things,
there's three things here. That's our curve, our histogram and our rug plot. So we're going to
omit a few things. So we're going to say show histogram as being false and show the rug plot
also as false. Everything else exactly the same, except that we've added an x-axis inside of our
update to our layout here as a key value pair. The key being x-axis, the value being another dictionary
and that dictionary having two key value pairs, title being salary and the domain being a thousand to
five thousand. So we can even bring that in. And there we go. We just have these two very nice
smooth curves there. So you can see with this distribution plot, you can do so much and you
can well imagine some data that look beautifully if represented with these distribution plots.
I'll see you in the next tutorial.
