Let's have a look at tuples. Now tuples are also lists of values but instead of being enclosed in
square brackets they are closed in parentheses so these normal round brackets. Now tuples can
be heterogeneous in other words you'll see here I've put the numerical values integer values one
two three in here and a string hello but what they are is they are immutable. Immutable means
they cannot be changed once they have been created. So you have created the computer variable
called tup and once I've created that it cannot be changed. I cannot change a value as I could with
arrays and that's one of the big differences between arrays and tuples. Let's run this code
and we see our tuple there two three one two three and the word hello just to make sure the type of
it is a tuple and it found a 64-bit integer a 64-bit integer another 64-bit integer that would be
the one two three and then an ASCII string. Now we can look up the value and the type of each element
so let's go for i in one to the length of tuples so we can still the elements can still be counted
we're going to print new lines for each time there's this for loop and we're going to print out to the
screen the value of the tuple at index number now $i because the first time we're going to be at index
one the next time the for loop runs it's index two the next one and then we're going to use this tuple
and in square brackets it's index value so that would be exactly the same as arrays they are still
really just indexed starting from one and then we're just going to use the type of what that tuple
index and or at least the value of that index is going to be so quite a simple for loop there
and we clearly see the value of the tuple at index number one is one and the type is 64-bit integer
until we get to index number four and the value is hello and the type is an ASCII string.
Now another difference is we can actually name these indices. Now let's just run that let me just show
you what I mean now we have the values one one three five seven you see that I have enclosed them
in parentheses so this is going to be a tuple they're four tuples and I've given each of them a name
so in index position number one we have the value one and I'm calling it a so a is going to equal one
b is going to equal three c is going to equal five and the word seven which is just a normal computer
variable is going to be the number seven. So we run that line of code now I can say for i in each of
a b c seven so that actually is just an array of all of these names these computer variables that hold
these indexed values in the tuple for me and I can print them and there we see the values one three
five and seven. Now tuples can also be sliced so if I have tuple two here with all of these values
we just run that there is our values and we can use the index keyword end so what would be the last
element we can slice it from number two to number four so index two would be the three index three
would be the five index number four would hold the value seven. I can also reverse the order all these
kind of things that we just did with with arrays so end and steps of negative one to the first index
so that's just going to reverse the order for me but remember they are immutable so I can't use
something like tuple tuple two here tup two index number one I'm going to set that to the value five
that is going to give you this set index has no method matching set index
error here so you can't do that you cannot change it while once it has been created. Now the next thing
just to remember something else about tuples I can have these tuples inside of tuples so there's a
tuple one two three inside of the its parentheses but that is just one of some other tuples so it's
a tuples of tuples and you can see them there. At index number one though of tuple three is that
whole tuple one two three it makes up that whole index at index number one but I can well what you would
see then this this one two three would be index number one the one would be index two the two
would be index three and four would be this index but it has a sub index so if I say tup three four
index four that would be this three one hundred and one and from there I want index two so what we do
is we have these two sets of square brackets just the order in which it follows and that is going to
give us the value 100. I think that's about enough for of tuples in the next lesson in the next section
on this lesson we are going to have a look at dictionaries.
