so for 2022 you want to use julia you want to learn how to code in julia you've got a bunch
of projects maybe you're doing them in python some other language and you want to try out julia i'm
going to show you how to download and install julia well not really the install that's just
double clicking on your file that you downloaded and just following all the defaults no problem
but how to set up julia then so that you can use it from the command prompt
and or the terminal here in mac os i'm going to show you mac os and that's quite important to be
able to start julia just from your terminal window then how to set up different environments because
when you install julia you're going to have a base installation but i want you to set up different
environments for your different projects if you have a different environment a separate environment
that means you can install packages specific to that project in that environment and you don't
have this overcrowding of packages in your base installation and all sorts of problems with
dependencies when someone updates their package and you run into or potentially run into problems
so separate environments for your separate projects then i'm going to show you how to install a julia
kernel so that you can run julia inside of a jupyter notebook and then i'll also show you pluto
notebooks now pluto notebooks really famous at the moment for the use at an mit's data science courses
and in many other projects i'll show you how to set up pluto notebooks as well
and then lastly i'm going to show you how to set up visual studio code one of the extensions in the
marketplace for visual studio code is of course julia so here we are on the julia language home page
that's julialang.org and you can see very bold there there's the download button by the way there's also
excellent documentation there's a blog a community and some links to places that you can learn about julia
so we're going to go for downloads and hit that big download button and what you'll see on this
download julia page is usually two versions of julia the first one's the current stable release at the
time of recording this was done way back in 30th of november 2021 and so that's the current stable
release and you can always install that one it is stable if you work at some institution or company
though that requires you know some form of longer term support uh versions then you can go for the
lts release as you can see there in the bottom you can also see there's installers for windows mac os
both intel and the m series processors and then all sorts of installations for linux although i would
suggest that use a linux distribution that has julia built into you know its packages as well
yeah i'm on the mac os on an intel based the core i9 16-inch macbook pro so i'm going to choose
that one 64 but i'm going to download that file and then i'm just going to double click on it and
install it i'm going to follow all the prompts not change anything there's much to change engineer will
be installed and if you do this with windows most of the time go for the 64-bit installer unless you have
a real system go for the 64-bit installer download it double click it and install it accept all the
defaults and that is really all you need to do here i am in my applications folder in my finder and
there we see julia 1.7 i'm going to double click on that it was successfully installed and it just
starts julia and the ripple read evaluate print loop and if i type 2 plus 2 for instance there at
the julia prompt hit return i'm going to see the result of my code there which is 4 no problem whatsoever
you can see there if we hit the right square bracket key so let's hit right square bracket that
brings us into the package manager now the package manager is fantastic this is where we're going to
add all our packages but we can see there we in at v1.7 version 1.7 this is my base julia installation
and as i mentioned i don't like to put packages here at most i'll have one or two packages the one
on this system is pluto and i put that in my base installation because you know i want to use pluto
notebooks in a certain way but for now we're not going to install anything there i'm going to hit
the backspace key so i'm outside of my package manager and i'm just going to do exit the exit
function open close parentheses because it is a function and we're outside of julia and we can just
quit the terminal so there we go we see julia 1.7 there so what i want to do though is to set up julia
so that it runs from the terminal so that i don't have to come into my finder here double click
so if you're in windows you're going to get start and then you're going to go to julia and just open
it there that's not why how we want to use it we want to open a command prompt or we want to open a
terminal here in mac os and i just want to type julia and i want julia to start so here on a mac i've
got to add it to my path and in windows you've got to add it to environment variables so there you're
going to just click on open open your search or stop button and search for environment variables and
you'll see two sets and i just install it for your system you can see a new button there and what you
have to do when you do that new button is just to copy and paste the path to the actual executable julia
file on your windows system let me show you how that's done on the mac so i've opened my terminal here
on a mac and what we want to do is to export this file here let's go back to our finder if i right click on
julia 1-1.7 i'm going to say show package contents contents resources julia and there's the binary
folder bin so right there at the bottom we can see that whole path there if i right click on bin right
at the bottom there i can say copy bin as path name and that's going to copy this address to this
executable onto my clipboard what i want to do in my terminal is start a little program called nano and
that's a text editor and what i want to do is to edit this z or zsh as you can see at the top that's
the shell that's running inside of this terminal i've got to add this julia executable or the path to
the julia executable to this shell so what we're going to do i'm going to type sudosuperuserdo nano that's
my text editor and the file that i want i'm going to do a squiggly line a tilde key forward slash dot
i'm in my home directory and it's zsh or zsh rc and there we go it's going to ask me for my password
there we go and we can see this text editor nano text editor has opened this now the top part you'll
see there that's all about miniconda that's my installation for for python but i've added this
file here at the bottom this line of code i should say so i've put a little comment there hashtag
julia that's going to be ignored so this is what you want to add though export space space path equals
and then inside of a set of quotation marks i'm going to paste that path to the binary folder so my
instance it was slash this is a mac so it's forward slashes applications julia dash 1.7 dot app
contents resources julia bin colon dollar path so that's what you want to add and just make sure
that that really is that path to where your julia executable is at the bottom there you can see hold
down control and hit o and say yes to overwrite your file i've already done mine so i'm just going
to do control x to exit and that's it julia is now available from the command prompt no matter where i am
so if i type julia now julia is going to start right square bracket we can see i'm in my base
installation let's set exit to get out of julia and that's as simple as that it's a couple of
line of codes you've got to edit that file otherwise you'll have to go in your find and start julia that
way and that's not how we want to set it up specifically if we want to set up environments
that we can use for our different projects so now that we can run julia from the command prompt or the
terminal window we want to set up these environments now on my system i've got a folder in my documents
folder called julia and what i want to do inside of my terminal now you can do it inside of command
prompt as well remember that you'll just have to use backslashes instead of forward slashes but i want
to change directory and for that in a terminal there's a keyword called cd change directory so i want to go
to documents julia now i've already set that up so that folder exists on my system i'm going to hit
return and i can see i've gone from my home folder that's that little tilde there i'm now in the julia
folder which is inside of my documents folder so now that i'm in that sub folder i'm going to type
the following julia i don't want to just start julia i'm going to do a flag dash e and then inside of
single quotation marks i'm going to write some julia code i'm going to say using pkg
semi colon now that's a line of julia code and using means i'm importing a package the package
is called pkg that is the package manager which means i can now use one of the functions inside of
there and that's the generate function and i'm going to use a pair of parentheses and double quotation marks
marks and i'm going to say you tube demo that's going to be the name of my environment
and the flag is going to run that code the julia start julia run the the code and then exit out of
julia so let's run that and it was almost instantaneous it says generating project youtube demo
and now in this julia folder that's in my documents folder i now have a youtube demo folder
and inside of there there's a project.toml file that project.toml file holds a list of all the
packages that we install in this environment and there's also a sub folder called src and then
inside that sub folder there is already a julia file youtube youtube demo.jl so if we want to do
package development which is not what we're going to do here everything is already set up for you you've
already got that file as a name for your package so what we're going to do is we're just going to
change directory into this youtube demo file folder that we just created so there we can see i just cd'd
into that cd space youtube demo and we can see i'm in the youtube demo folder remember that's inside
of the julia folder which is inside of the documents folder which is inside of my my home folder if i now
type ls on a unix based system such such as a mac it's going to show me all the files and folders
on windows you'll have to type dir for directory and there it is the project.toml file and also the
src folder now that we've done that we can start julia with this environment and the way that we're
going to do that is to use flags again so i'm going to say julia dash dash project
equals dot now there are other ways to go about this but for me this is the preferred way so i've
got to be in this folder that contains the project.toml file that's very very important
so let's run this and now we've started julia again but i want to do this the right square
bracket and you can see i'm not in at v1.7 i'm not in my base installation i'm now in my youtube demo
environment i can type in st and that's short for status you can also write status and you'll see it's
an empty project in my package manager here which i got into by the right square bracket key
it's empty so let's add something i'm going to add i julia so just add inside the package manager
and then i and j is uppercase i julia and that is the package for jupyter notebooks so let's hit enter
return and that's going to install i julia for me and there we go it says one dependent dependency
successfully pre-compiled in one seconds 15 already pre-compiled let me hit the backspace key and
i'm outside of my package a manager now by the way let's let's go back in and hit st now and if i
do that i see i julia is right there so we have our environment and we've got our first package installed
in that environment and with that package we're going to run jupyter notebook so we're going to
open a jupyter notebook and it's going to run a julia kernel for us now in order to do that remember
we're still in this activated environment of ours i'm going to say using pkg so i'm now using that
means i'm importing that package now when you install julia some packages are already there they're part
of the base installation and one of them is pkg and by the way this is the same as the right arrow
bracket package manager that you can use but i'm using again using pkg because what i want to say is
pkg.build and then i want to let's build i want to build i julia so it's instead of set of quotation
marks instead of a set of parentheses so pkg.build it's a build as a function inside of the pkg package
and you can see there conda i julia so that's going to install what i need to be able to run jupyter
notebooks and when i open a jupyter notebook julia is going to be available as a kernel
so let's use i julia by the way everything's already been done on my system you know and i've
exited and come back you know all of those nice things i'm going to say using i julia
and that j should also be a capital using i julia and one of the functions in i julia is the notebook
function so open notebook open and close parentheses and there we go it's now going to open my default
browser and there we go it's now going to open my default browser and we can see there's the
project.toml file because we've added one package the i julia package there's now also going to be
a manifest.toml file whereas the project files is going to contain a list of all the packages that
i've installed the manifest is going to have some more information about dependencies and versions
etc and there's the src folder let's just go inside of that folder there's that youtube demo.jl file but
that's not what we want to do we want to start a new notebook so i'm going to say new and there we go
julia 1.7.0 so previously i had 1.6.3 installed on the system it's no longer available i'm just going
to hit 1.7.0 opens a new tab and the kernel has started i've now got a julia kernel so we can do
two plus two in the cell hold down shift hit return and there we go i have my input and i have my output
i have a julia kernel running inside of jupyter notebook and i can use a jupyter notebook to type my
julia code so now that we can run a julia kernel inside of a jupyter notebook i want to show you
pluto notebooks now pluto notebooks have been fantastic you know they run an active session
so if you change the value of a variable it changes in all the cells it's not this idea of sequential
execution and it is very good in another way as well it has an inbuilt package manager so you don't
have to be in an active environment or activate an environment you can just add your packages right
as code inside of the notebook and it's going to create an environment inside of that notebook and
do those installations for you you can also overwrite it though if you want to make use of
one of the environments that you've already created so here we are my youtube demo folder that's inside
of my julia folder which is inside of my document folder and remember if i type ls or dir on windows
there's my manifest file my project file and that src folder so what do i want to do here i want to type
julia and if i just type julia here remember right square bracket i'm in my base installation and this
is where i want to add pluto so that would be one of the very few packages that goes inside of my base
installation because i want to start pluto without worrying about an environment sometimes i just want to
use the inbuilt package manager so pluto for me would be one of the very few packages that goes
inside of my of my base installation so i've already done that if i were to type a st in the package
manager or you could write status you can see there's only one package there inside of my base
installation and that is pluto so i'm going to say using pluto when i'm back at the julia prompt
and now i'm going to use one of the functions called the run function so pluto.run you've
you've got to state pluto dot and open close parentheses there we go it's now also going to
open my default browser and it's going to start a pluto notebook for me there we go we've got a pluto
notebook you can open some sample notebooks a new notebook there's some notebooks that we've worked on
before so i'm going to right click on the new notebook and open it in a new tab it's something that i
like to do so that i just have this page open at all time so there we go we're now going to have a
new tab in our default browser here and it's going to start a new empty pluto notebook for us there's
our brand new notebook so if you go up here save notebook i'm going to click in there and you can
see because we started julia inside of our folder you know we already inside of the right folder here
if not you'll have to type all of this to get to the correct space or spot on your folder
system in your internal drive to get here so let's call this one pluto demo
dot jl so these are not ipymb files these are dot jl files and we can see well what i'm going to do
i'll show you this i'm just going to put src forward slash so that this is also in that source now you
don't have to do that i just want to keep everything there but we're not doing any package development
as you can see there you can just type in the right address for the folder system that you want
in where you want your file to be so i'm going to click choose and now the file exists there so two
ways for you to use pluto notebooks if i type using in a cell and i say a new a new package that's such
as pluto ui you see there's a little cloud and a downward facing arrow and if i hover over that
it's very tiny it says pluto ui vo.7.22 will be installed in the notebook when you run the cell
so i have not activated my environment here the environment lives inside of this pluto notebook so
if i share this notebook with someone else you know this environment lives inside of the notebook so
that's certainly one way to go about it and as soon as you execute this cell that package is going to
be installed for you in this notebook specific notebooks environment let's do something else
though i'm going to say using pkg there's already a little tick mark there because package is already
installed on my system it came with julia i'm going to hold down command or control hit return or enter
it's going to execute that line and open a new line for me below but remember in pluto notebooks you can
just use these little plus symbols there to add new cells so once that is done i'm now going to say
pkg.activate the activate function i'm going to open my parentheses and then immediately there's a
little comment that comes up so if we click on that it's going to say pkg.activate disables pluto's
built-in package manager and that means you can overwrite it you can activate one of your own
environments inside of this notebook and no longer use the inbuilt package manager so in my instance
remember that is going to be in forward slash users and then my name and then it was documents
documents and then julia and then youtube demo
and then project dot t-o-m-l so it's the project t-o-m-l file that we want to activate
so if i run the cell and i didn't make any mistakes in my typing it's going to activate
this environment so that's great the two ways that you can use environments with a pluto notebook
next up i'm going to show you visual studio code a fantastic coding environment becoming more and more
popular and you can type your julia code inside of vs code so here we have visual studio code from
microsoft just search for vs code and your favorite search engine is going to bring you
you know one of the first links will be this page from microsoft there's download in my instance
it's going to say mac if you're in a windows it's going to say windows and it's available for
linux as well download as easy as julia installation just double click on that downloaded file
accept all the defaults and install it and vs code is going to be available to you so i'm here in my
finder and then we can say visual studio code after i've installed it i can double click on that and
visual studio code is going to open up on the left hand side here now you're gonna you might see some
welcome messages etc mine's been installed for some time but these are the extensions button let's
click on extensions and in the marketplace there are hundreds of extensions and what you can do
is just search for julia and in my instance it's already installed there we go julia language support
so let me just come out of there i'll show you if i just come down here there's julia it's already
installed so you have to install that extension so i'm back in my terminal i'm in my youtube demo folder
remember ls or dir that's where my project file is what i'm going to type in now is code space dot
as simple as that and that's going to open via studio code for me and i'm already in this folder
you know everything is ready for me to go let's go back now to our extensions let's go down down
let's click on julia and let's go to this little gear icon again and say extension settings
when i scroll down now you'll see there's an executable path and again that's where my julia
executable is in that binary folder remember right at the beginning when we set it as a environment
variable or added it to our path and this time i'm just putting julia after the bin that's the
executable so i'm just telling via studio code this julia language support extension where my julia
executable is so please do the same and what that does it adds this little julia icon for me on the
left hand side when you use julia inside of vs code it's going to give you all sorts of information
about the active workspace some documentation and the plot navigator every time you create plots there's
going to be a list of these plots on the left hand side it's a very nice coding environment for julia
and there we go installing julia setting up different environments using it in a jupyter notebook in a
pluto notebook and also in vs code so i really hope you enjoyed that i hope you give a julia try in 2022
if you've already done so and you haven't used some of these environments to write your code in
give them a try it's a lot of fun
great
its
it
ur
and
ur
ur
ur
ur
ur
ur
