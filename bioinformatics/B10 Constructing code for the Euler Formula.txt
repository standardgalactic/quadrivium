so here we are in our applications folder we've clicked on the Python icon in applications and
here we find the IDLE that is where we're going to do our coding so let's double click on that
and this is what we are faced with now this part it's called the shell here is where we're going
to see our results and you can type Python code directly in here but you can't really build a
program so for that we're going to say file new file and this is where we actually are going to
do our coding now there are various programs that you can find on the internet where you can actually
do your coding write your code but this just comes standard in the installation that we've done now
now if you don't know any coding what I'm going to do is just use an example and we'll learn by this
example so what are we going to do we're going to employ oilers method and we're going to do get
some numerical solutions to this so first of all with all the oiler problems we do get initial values
and let's do the following if you put the it's like this noughts and crosses sign pound sign whatever
you want to call it if you put that you'll see it turns a different color yeah it's red anything in
that line after that will not be executed by the program it's this way you can leave little notes for
yourself so i'm going to write your constants so i'm now going to define my constants now you don't
have to put that pound sign and that little note for yourself we're just learning how to use this
so let's have let's have an initial value problem or let's um yeah let's do that we're going to say x
space equal space and one point you can say one point zero but you can just say one point so i'm
creating this variable called x and its value is one unlike c sharp or c plus plus i don't have to
tell python what data type this x is is a text is a numerical value what i do have to do is put this dot if
i just put one in python i think it's anything below the newest versions you have to put this dot
after it or the zero there just to tell it the program hey this we're going to do some floating
point or we're going to have decimals in our answer otherwise it's just going to cut off and give you
integers rounded off integers and that's not what you want so let's also suggest that y equals 1.0
and let's suggest that we're going to do a step size we'll call our step size h and that'll be
0.1 okay so immediately there's a decimal in there so python would know to treat this not as an integer
now let's let's just say what our function is the f of x and y now you can't really write the f of x
comma y that'll invoke all sorts of problems but remember the f of x and y that is your derivative
now let's be very old-fashioned go back to basic old algebra let's just call it m
you can call it whatever you want and we're going to suggest that our f of x or x and y or our slope
in other words let's make that three well i'm going to put the dot again because i want it to be treated
not as an integer times x times y so you don't need those spaces i put the spaces in it looks neater
so there's my differential equation the f of x and y equals three times x times y
i'm calling my step size h and i'm setting that now in order for this program to do anything
let's just um let's just tell it to do something let's say print x comma space y just put the spaces
in it looks nice you see print is now in a different color it shows you that that's an actual preserved
word that the program is going to use now you can't run a python program unless you've saved it
first so let's just say file save as and let's just call it boiler underscore one and it's just
in my documents folder it doesn't matter where you save it i've had one before so i'm just going to
replace once i've done that sort of the it disappears i suppose you could call it dot py maybe maybe that
will keep it to run this program you're going to say run run module or just the f5 or sometimes
depending on how your mac is set up you're going to press function f5 but let's just run the module
and there you go x was one comma that just leaves a little space and y was one and that's exactly what
we've done look at this x comma y prints one comma one now let's do something a bit more fun we've got
to do all the other values so for that we're going to use most people would know some kind of iteration
loop let's use the while statement so while x is less than 1.5 and you have to put the colon there
when you press enter you see things shift up that means that this part of the program
falls under this while loop so it's just going to run around and around and around that loop
until it's finished if i put it on the left hand side it will be outside of this while loop so remember
we'll look equations y equals y now of course this is how programming works i can't put a subscript
y of sub n plus one equals y sub n this is how programming works but okay i'll explain a bit more
now plus and then just in brackets it was h times n so there was h times most textbooks will have it as
capital a sub n which is just whatever the the value of our differential equations was let me just
carry on and x was x plus h so the way programming works it's just going to say y is now going to be a
new value and it starts off by taking the old value of y what it was up till now so up till now what was
y well y was one we put it under constants there plus h is our step size times m and as far as this
program knows m as it stands now the first time we go through this loop well m was three times one
three times one times one that was three so it's going to be 0.1 times 3 which is 0.3 it's going to
add that to the old y which was one so we're going to get 1.3 x is going to move on as well and you've
got to put the y before the x otherwise what's going to happen it's going to calculate m based on what the
new x is and remember in this equation for y n sub 1 equals y sub n y sub n plus h times this m refers to
the old the f of x sub n y sub n not the new x sub n so do that one first before we do the x equals x plus
h and now remember we have to give m a new value as well and it's a three dot remember i don't want
integers times x times y so it will now use new values of m
based on the new values of x and y that i have now so when it loops again through the while statement
m is now a new value which now becomes the old x sub n y sub n of this y sub n to make the new y sub n
plus one lastly i just wanted to print x comma y and this is going to keep on running so let's say
file save and let's hit the f5 key or function f5 and there you go look at that isn't that beautiful
so we have x values on this side y values on the side we have 1 1 1.1 1.3 1.2 see how the step size
just goes up and what happens to our y values so they're very rapidly without me having to do paper
calculations i've written this short program that reads just like english just like english it's just
about learning how to do things so remember if i just want to start off with just with my
variables and giving them constant values there's my differential equation i could have called
this f what whatever there is some obviously some characters that you can't have as variable names
so there is it's three times x times y that was my differential equation i print out my first x and
y my initial values there and then i do this loop to run through so that i get all the answers
and it's going to terminate once x gets up to 1.5 so it's going to keep on going to less than 1.5 it
still includes 1.5 there because as it enters x was 1.4 it then becomes 1.5 in the calculation
now when it gets there it's not smaller than 1.5 so it terminates so it's still going to include that
last 1.5 because as i said as you enter the loop x is still 1.4 you've got to put the y before the x
otherwise remember this m is being calculated based on the old must be based on the old x and y so before
i have this i don't want any new x contaminating the calculation of this m so i put y first and x
my new m now it'll have a new value prints those guns goes in the loop for new y sub n plus ones and uses
that old m which will now include the x sub n and y sub n from there
