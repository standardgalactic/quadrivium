So welcome to this new tutorial. We're going to look at line charts, something that you might
want to use quite often. So first cell, of course, we're going to just run our cascading style
sheet. There we have a header one and a header two setting up our plotting, plotly library. And
as per usual, we're going to import iPlot and initialize the notebook mode. So let's just do
that initialize the notebook mode. And then we're going to import plotly dot graph objects graph
underscore OBJS as GEO. And there we go. Let's create some data point values. I'm going to
create two computer variables. They're going to be days and sales and days going to go from
Monday through Sunday. And sales, I'm just going to have these seven values 11, 14, 11, 14, 10, 11, 10.
And that's it. Let's run that to execute. And we now have our two computer variables.
Let's just do a simple line chart. So to do a line chart, we're actually going to use the scatter.
So scatter is in scatter plots. So what we're going to pass is just these three arguments,
X being the days, Y being the sales, but the mode just being lines. So our data is trace.
And we're going to use this key value pair dictionary, Python dictionary here to do the
iPlot. And let's run that. And we see that we have the lines and we go from 11 up to 14,
down to 11, up to 14, down to 10, up to 11, and down to 10 for Sunday. So beautiful there.
What we can also do is just to fill up the area under this curve, under the lines that we have
here. So we're going to have fill and we're going to fill to zero X. So whatever the lowest line here
is, we're going to fill to there. The full color, I'm using a hex code in this instance. My mode is
still lines. And let's plot that. And we see it's just going to use the default color and it's going
to two zero, meaning this bottom line of the Y value has going to fill up everything below that.
Now, there are different line types that you can try. There's actually dash dot and dash dot.
So let's do mode as lines again. And the line, we're going to pass to that a dictionary because
it has these sub key words that it can use. So color, we're going to stick to this color.
The width, we're going to do a width of four and the type, we're just going to do a dash.
And what we're also going to do is just to lay out the X axis, key value pair, key being X
axis, the value being another dictionary with a key value pair zero line being false. We don't want
to have the zero line at the bottom. And there we go. We see this orange color. We see it's quite
thick with a four and everything is still there. We just change this line type. Now we can also add
some markers. So instead of the mode just being lines, we can have lines plus markers. And we're
going to give the size to these markers. So marker, marker, we're going to equal a dict with one of
the arguments being size and the size being 16. And this time I'm going to add a layout. The layout
I'm going to do as a, just as a Python dictionary here. So it's going to have a title and an X
axis. So the key value pair is title and the title sales for last week. But what you can see here,
I've got some HTML code in here. So I for italics and close to italics. So we can even do that as
far as title is concerned. And the X axis key is value is another dictionary with a key value pair,
the zero line being false again. And then for I plot, I'm just using this dictionary way to do it.
And as I say, mentioned before, there's so many ways to do things in plotly, which might make it
confusing initially, but actually makes it much more powerful. And you can actually choose, you
know, what works for you. So there we go, we've added the sales for last week. So we've got this
title, we can see the last week is in italics. And now we've added these markers that might give it a
bit more clarity as to what is going on here. Now we can also do some interpolation. These are just
straight lines. So let's do a spline interpolation. So what we've got here is mode, again, being lines
plus markers, the marker having a size, but the line, we're going to do one of its arguments there
being shape. And we're going to make the shape a spline. So let's run that. And there we go.
We can see instead of these straight lines, we have the spline curve in between these values.
We can also do vertical and then horizontal. So the shape is VH first, vertical and then
horizontal. So let's run that so that you can see. So what it will do from this value, it will go
vertical, vertically first, until we get to the level of the second one and then go horizontal.
So it's going to go vertical to the level of the next one and then go horizontal, as opposed to HV,
which is horizontal and then vertical. So now it's going to go vertical to this line of the second
one and horizontal, I mean, and then vertical up. So horizontal first and then vertical. So you can
play with those two. And there's actually a few more ways that you can go about this.
Filling of the gaps. So let's do that. Let's take the third value there for sales. Remember,
it's actually fourth because it's Python and it comes from zero. And we're just going to make that
value in the list being none. And if we were to plot this, we see that we have this gap.
So there was nothing for Thursday. And this gap there exists, this gap now. And we can actually
just fill in that gap by this connect gaps keyword in our scatter plot here and everything else being
exactly the same. What it'll do now is it'll just fill that gap beyond this data point, which does not
exist. It's none now. And it'll just fill that gap. So you can see line charts, quite a bit of fun
and quite a useful thing, something that we use quite often. And there we go. Line charts or line
plots. I'll see you in the next tutorial.
