Now every type in Julia is one of two types. It's either abstract or concrete type. Now at the bottom of the hierarchy that we spoke about we have the concrete types. And they are the ones that can hold an actual object. So something like real or any cannot really have a specific object.
You can't put an object in there. You've got to go right down to the bottom and those types are called concrete types and they can hold objects.
Now every type inherits something from its parent. That's a proper way to construct a programming language and Julia works phenomenally well in that regard.
Now the abstract types that cannot be instantiated and instantiate is just a fancy word. It just really means you can't create an instance of that type.
I can't say real X equals 43.58. I've got to go right down to the bottom. Float64 equals 3.46758.
Now these types, what they are, these objects, they hold space in memory.
Now a computer has a finite memory capacity and we place these values inside of memory so that it can interact with a processing unit and we can do all sorts of things.
But this allocation of space inside of memory, that is really dependent on what type this object is.
So something like an int 8 will hold much less memory than something much larger than say 64 but floating type value.
And we can find out what these minimum and maximums are by this type min and type max.
So let's have a look. What is the type min of int 8, 8-bit integer?
And we see it's negative 128 and the type max would be plus 128.
So quite a small bit of memory will be held for 8-bit integer values and for that reason I can't put big values in there.
I can't use something like negative 130 will not fit inside of an 8-bit integer memory allocated into, or space allocated into memory.
Let's go up, type max, type max 16. Let's have a look at that.
No, I should not have said that.
Int 16. Let's do that.
And there we go. We see it's 32,767.
So that's the maximum value and type min will be negative that.
So within that range of values I can place them inside of an 16-bit integer space inside of memory.
Thank you.
Thank you.
Thank you.
