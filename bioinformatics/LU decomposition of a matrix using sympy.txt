in this video i want to show you how very easy it is to do lu decomposition of a matrix
you might be given this as some problem exercises and you just want to check yourself whether your
lu decomposition is correct very easy to do in python and we're going to do it in simpy i've
already created a new notebook here and i've clicked on it at the top there and renamed it
l u decomposition so let's turn this very first cell into just a markdown cell remember that will
be escape m enter or return i'm going to put one hashtag or pound sign there and we'll call it
lu decomposition shift enter shift return and we have a beautiful title there now i want to create
a matrix to do my lu decomposition with so i've got to import some pi but i'm going to show you
something slightly different this time instead of importing and using an abbreviation and i have to
refer to that abbreviation i can import specific functions all on their own so that i can just
use them directly watch this from simpi import matrix as simple as that now i have not imported all of
simpi i've only imported the matrix function and i can now use it directly i'm not using an abbreviation
here to refer to it i can use it absolutely as is shift enter shift return and it is there now
let's create a matrix i'm going to call my matrix matrix a and i don't have to say s y m dot because
i haven't imported simpi i haven't created an abbreviation anyway so i can't use that but i can
use matrix directly matrix remember i've got to use parentheses here and i've got to use square brackets
and i've got to do row by row let's do a three by three matrix and our first row will have one
comma two comma three outside of my square brackets new square brackets for the new row let's make it
four five and six and let's make the last row let's make it something like ten eleven and nine as simple
as that i go to the end hit return enter for a new line and i'm going to say just hit a again because i
want this new matrix to be written to the screen now watch what's going to happen because we do not have
init printing initialized that latex printing i'm going to get something that looks well we can see
what's going on there we can see that it is a matrix but we don't have that pretty latex printing so let's
do that we're going to say from simpi import init printing as simple as that init printing so now that's
imported and i can refer to it directly
hitting the tab for auto completion there open close parentheses
shift and enter shift return let's print a now
and we see beautiful matrix there much better and that is why one of the many many reasons why i love
simpi so what is lu decomposition remember you take your matrix and you do your set of elementary row
operations on it except for swapping rows we don't do that so it is only a constant that you multiply out
by row or a constant multiple of a row plus another row or minus another row depending on how you were taught
and that is going to give you an upper triangular matrix remember where there are values on the main
diagonal and everything below that main diagonal is going to be a zero and an upper that's an upper
triangular and a lower triangular where everything is ones on the main diagonal and everything zeros above
that let's have a look i'm going to use a method on my matrix and that method and i'll show you now
what it is it's going to return three values to me and i've got to store each of those three values in
a separate computer variable name so i'm going to call that l comma u comma i'm not interested in the
last one so i'll just put an underscore because i'm not really interested in that and i'm going to say
a dot lu decomposition hit my tab key there autocomplete i see lu decomposition there open close
parentheses so i'm i'm using a and there's a lot of properties or things that we can do to a this
matrix one of the things is lu decomposition and because a was created as a matrix object
a simpi matrix object it has these properties it has these functions that i can apply to it
and i'm doing this with a dot notation so it's a dot lu decomposition and that's going to give me
three things it's going to return three things a lower triangular matrix the upper triangular matrix
and then just this term where it shows what rows were swapped but we're not swapping rows here we're
just keeping things simple and now let's look at the upper triangular form as i as you can see the
upper triangular i have my main diagonal which here is one negative three negative three everything
below that main diagonal is zeros so this is the upper triangular if you were just doing your two row
operations on it you would have gotten to this form let's look at the lower triangular matrix and we see
all ones so it's proper all ones on the main diagonal and everything above that is zero and if i say l
times u i'm going to get back exactly a i can even test for that i can say a equals equals l times u that double
equal sign asks a question is this true or false is the left hand side really equal to the right hand
side shift enter shift return and i get this boolean answer back which says true indeed l u decomposition
multiplying l by u in that order remember these things do not commute multiplication matrices do not
commute i'm going to get a back so this is how simple it is to do l u decomposition in simpy
