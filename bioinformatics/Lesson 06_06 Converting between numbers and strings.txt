Now let's convert strings into integers. You might have a situation where you are importing
some text and it is in a string format but what you are actually interested in is the
actual numerical value. And for that we can use this pass function. So I'm going to create
this computer variable called numb and I put this text in it and the semicolon just suppresses
the output. Now let's take a look just to make sure that this is indeed an ASCII string.
Now I'm going to create a new computer variable called val and I'm going to pass as an integer
this piece of string. Let's go for it. And now let's look at val. Indeed it is 1001 which now
looks a bit different and indeed we can check the type of it and it is now a 64-bit integer.
So that's wonderful. We can import a bit of text and we can convert it into a number.
Now let's go in the other direction. So we have this val underscore f floating point value
1001.123. Let's run that. And just to make sure it's a 64-bit float. And instead of pass
I now use string. And there's just this one type of string. So where we used the integer
before just to say what we want to pass it to here. We just say the string function and
we pass that argument. We're going to put this inside of a new computer variable called
str underscore f. Let's just do that. Let's print it to the screen and you can see the quotation
marks there. And just to make 100% sure. Let's check the type. It is now an ASCII string. So
we can go from string to numerical value and from a numerical value into a string. Sometimes
you're going to import text and it is going to have a matrix like this. 345212381021. Now it
is written like this because it might be so in the text file. With the Julia notebook because
we've used the carriage return here to go to a new line it's going to do this green color
which might make it look like a number but it's all inside of these quotation marks so it's
all just a string. Let me show you. There we go. You see the new line character there. So
this is we can well imagine we've just imported this from a text file. Now just make sure what
this file underscore data is. Indeed it's just a string. But imagine in your text file it was
typed by someone to represent a matrix. A three by four matrix. Now I can read that in as
as an actual matrix. Let's have a look. I'm going to use this readdlm function. It takes this argument
iobuffer which takes an argument this string. I'm going to put this inside of a computer variable
which I've called data. So let's look what data see what data looks like and indeed a three by four
array of 64-bit floating numbers two-dimensional. In other words there's rows and columns. Just to
make sure it is now an array of 64-bit floating point elements two-dimensional. So that's some common
use scenarios where you've imported text and you want to convert it to values or imported something
that looks like a matrix and you want to convert it to a real matrix or taking a number going the
other way and making a string out of it. In the next section of this lesson we're going to look at
finding and replacing characters and substrings inside of strings.
