Let's have a look at collecting values. Remember we used this before, we said for i in one
to five. What if I just said one to five, one colon five, it just gives me back this
one to five. If I look at, looked at the type of that, remember I called it a range, it's
just a range and it's very good just to iterate through things, but it is not the actual values
one, two, three, four, five. I can use list comprehension though to generate a list and
place it somewhere. So here, remember, I'm generating this array of values one to five. So I can
use this one to five, this range, this unit range, which I use as an iteration, but I can
generate something for it using list comprehension. There's another way of collecting though, and
that is called collecting, and it's just using the collect keyword. If I now say collect
one to five, I'm going to get the exact same thing, five element array of integers. So
instead of doing list comprehension, I can also use collect. And that's very good for
this kind of keyword. Yeah, I have permutations inside of this list of values, these square
brackets, you've heard me call it arrays now. So I have this array of values one, two, three,
three, and all the permutations is in what order can I place them. So I can execute that
and it tells me it's going to give me an array, but it didn't actually tell me what they are.
Yes, I've got to use list comprehension to get the actual list of things I've got to generate
it. But instead of using list comprehension, I'm just going to use the collect keyword here.
So collect that. And now I see all the orders 123, 132, 213, 231, or 312 and 321. So collect
is almost like list comprehension. I can also collect, generate and collect lists of values.
