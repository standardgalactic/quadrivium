Now, before we get to convolutional neural networks, I always think it's a good experience just to explain what a convolution or what the convolution operation is.
What does it mean to convolve, for instance, a matrix?
And a good way to cheat in the showing of it is just to use a very simple program like Microsoft Excel.
So we don't need R. I'm just going to use Excel, Microsoft Excel spreadsheet.
You can use any spreadsheet software, actually, just to demonstrate what it means to convolve a matrix.
I have here just one, two sheets here that I just want to show you in case you are not familiar with Excel.
I just wanted to show you two things.
We've got these columns here and I've got values here, one through ten.
And I've got my multiplier, one through ten.
And all I want to do is to multiply this value by this value.
The way that we go about that is one times ten.
But I put the equal sign in the front just to tell Excel that this is a formula and it should go out and it should do that multiplication.
Now, that's going to give us ten.
What we want to do instead is say equal.
For example, I want this value, so I click on it, times, which is Shift 8, and that value.
And you see the blue and the red, and you see those cells are colored blue and red.
And it says A2 and B2 because this is column A, row 2, column B, row 2, where those columns, column values and row values intersect.
That is the cell address.
And what Excel is really doing behind the scenes, it's not saying A2 times B2.
What it is saying is I'm in this particular cell.
For this A2, go two cells to the left, multiply, go one cell to the left.
So even though it says A2 and B2, that's really not what Excel is saving behind the scenes.
It is saving what is called an address, and it's just referencing those cells.
So it's just saying go two cells to the left and go one cell to the left.
And if I hit Enter or Return, we see it's a ten.
One times ten is ten.
But now I can go to the bottom here when the cell is selected, and the mouse changes, and I can drag all the way down.
And you can see what it's going to do there.
It's going to see two times ten and three times ten.
That is because we have this reference in this addressing.
It's just saying go two cells to the left and then one cell to the left of this particular one.
And this one, go two cells to the left, multiply by whatever is one cell to the left.
So it's just this reference to those values.
Now we can do something else if we just have this constant multiply here.
So I'm going to say equals, again this one, and it's going to count.
One, two, three, four to the left, times, and I'm going to hit this ten, which is this one to the left, but I'm going to do something different here.
On Windows, I'm going to hit F4.
Other operating systems, it might be something else.
And instead of saying D2 there, you see $D$2.
That fixes this cell.
So if I enter return, I'm still going to get ten.
But as I move down now, it shouldn't work.
You might think it won't work because it wants to move down one cell to the left of this one, but it doesn't.
It sticks to that ten.
That ten doesn't move because of these dollar signs that we have there.
So if I drag that all the way down, I'm going to get exactly the same values as we did there.
So that's this constant referencing by just fixing that address.
Fixing that address.
Let me hit F2 there.
You can see A2 times $D$2.
Let me hit Escape.
I'm going to go to this one.
Hit F2.
And you can see the blue and the red.
It is still saying goes 1, 2, 3, 4 cells to the left of Yim multiplied by this constant thing that doesn't move.
And the dollar in front of the D means the column doesn't move.
And the dollar in front of the 2 means the row 2 here doesn't, or this row here doesn't move.
So that is how we do this multiplication.
That's how we do this multiplication.
Let's just go there again.
Let's hit F2.
There we go, A3 times.
You see there, the A3 times there.
And just for argument's sake, let's go down there and hit F2.
And again, you can see this one came down, the 1, 2, 3, 4 to the left of where I am.
But this F10 stays stuck.
So in case you knew this, that was a waste of five minutes of your time.
And let's go to some product now, in case you don't know that.
Let's do this.
Some product means it's actually the other way around.
It should be product sum, but it's actually some product.
We're going to do product means multiplication.
So we're going to multiply all the values and then we're going to add them up.
So let's do the exact same thing.
I'm going to say 2 to the left times 1 to the left.
And that equals 50.
2 times 40 is 80.
3 times 30 is 90.
And then 80 again.
And then 50 again.
That's what I should get.
And that's indeed what happens.
We can see there, if I hit F2, it is those two that are multiplied by each other.
So it's the product of those.
And then I want to sum all of these.
And in Excel, it's very easy.
If they're all highlighted, I can come across to there and just say auto sum.
And it'll sum all those values.
50 plus 80 plus 90 plus 80 plus 50 gives 350.
But I can do it all in one go by this function called sum product.
So I'm going to say equals sum product.
It's going to double click it and accept it.
And I'm going to say take all of those.
So I highlight all of those, comma, and I'm going to highlight all of those.
So it's going to say one by one in this selection, multiply one by one in this one.
So element wise multiplication.
This element times this element.
This element times this element.
This element times this element.
This element times this.
And in the end, add all of them up.
Let's close the parentheses, hit return, and lo and behold,
350, no magic there.
So I just wanted you to know these two things before we go to this convolution.
So this is what it's all about.
What does it mean to convolve a matrix?
Because we've got a rank 2 tensor here, 6 by 6.
Another rank 2 tensor here, which is a matrix.
6 by 6, 6 by 6.
1, 2, 3, 4, 5, 6.
And 1, 2, 3, 4, 5, 6.
6 by 6.
And we're going to convolve that with this 3 by 3 kernel or filter or whatever textbook
you're reading or lecture you go to or videos that you watch.
It's this 3 by 3 matrix that we're going to multiply.
And what we do is we're going to multiply it by this first 3 by 3.
And if the stride is 1, we move this little window 1 up.
We're going to move it 1 up.
And do that element-wise multiplication and then adding all those values.
So some product as we saw before.
And then it moves slides on and slides on.
And now you can see why there can only be 4.
That's 1, 2, 3, 4.
It can't go anywhere else.
And then 1 down.
1, 2, 3, 4.
And then 1 down.
2, 3, 4.
And 1 down, which means we're 4 down now.
And 2, 3, 4.
And we end up with a 4 by 4 matrix.
That's how it works.
So let's just do that.
And I'm going to say equals some product.
And we're going to take these first 3 comma.
And then I'm going to take these 3.
But I'm going to hit F4, shift F4, whatever the case might be.
Because I'm constraining that to those.
This is not going to move.
And I hit, close the parentheses, hit return.
And then I'm going to slide it 1, 2, 3 across so that I have 4.
And then 4 down.
Let's leave it there.
4 down.
And we leave it there.
So what it's done is it's taken this little window and it's slid it across here.
As you know, that is the convolution operation.
Shifts it across.
When it gets there, for instance, it means, well, let's start with the first one.
It's going to be, you see it's 3 by 3 and 3 by 3.
So it's going to be product of 0 and minus 1, 0 and 0, 0 and 1.
And then 0 and minus 1.
And the next 0 and 0.
And then that 1 and that 1.
Multiply each of those and just sum all of them up.
And then we move across.
So that's why I wanted to show you the addressing, the relative addressing and then that fixed constant addressing and the sum product.
So it's element wise product and then the summation.
So what we have here is a very special filter or kernel in that I've got all negative 1s on this side, all 0s here and all 1s there.
It is something that will detect a vertical edge.
It will detect a vertical edge.
You kind of see there's negative 1s on this side, plus 1s on this side and there's 0 on here.
So what's going on here?
Imagine this thing that we're seeing here, the 6 by 6 matrix, is just a tiny, tiny little spot on a bigger picture,
maybe of the sun shining and reflecting off of a window and the windowsill is vertically down.
And somewhere in this picture there's this yellowy colour, maybe that's the windowsill reflecting a bit of the sun and then the very reflective glass of this sliding door reflecting the orange setting sun.
So somewhere along the line there is this vertical edge that you can clearly see.
So use your imagination.
It's a tiny, tiny bit of a picture and there's some vertical line where two colours are split.
You know, very distinctly here.
And the way that I've done this is I've just highlighted all of them and went to conditional formatting, colours and more rules and just accepted this value.
So it says it will take the lowest value and colour it this way and the highest value colour it this yellow and then everything in between shades like that.
That's all that happened here.
So that's just for demonstration purposes.
But if we go here now and I highlight all of these, let's do a bit of conditional formatting here.
So colour scales, more rules and let's just make this that colour up till that colour just to give it a bit of separation.
Now, remember again, this is part of a much bigger picture.
So this is going to be a tiny bit in this bigger picture, but you can clearly see this line down the middle.
So it's gone from this part of the picture and we've slid over it by this little, very remarkable, special little filter or kernel.
And what it has done is, it has demonstrated that there is this clear vertical edge.
That's how the convolutional neural network learns, initially at least, that there's a vertical edge here.
Now, remember, we can set how many of these 3x3 or 2x2 or 5x5 filters we're going to send across this.
And this is going to give us, eventually, the depth.
So we've come from 6x6, we're convolving with a 3x3, that's going to give us a 4x4, but I can convolve with another 3x3,
which is going to give us a 4x4x2 then.
I'm going to stack the next one behind this.
And then a 4x4, if I do another one, then it's going to be 4x4x3.
So it depends how many filters I go over here.
And now you might wonder, well, where did these special values come from?
Well, they're not special at all.
Well, they're special in the way that we created it to show this demonstration.
But remember, these are parameters that are going to be learned.
So that irrespective of where on the picture we are, you know, if it detects something up here,
if that same thing exists down here, it's going to detect it there as well.
That is the beauty of a convolutional neural network.
Now, those parameters, these six, nine values here, I should say, they are going to be learned.
They are parameters that as we go through epochs, mini-batches and epochs,
it's going to update these weights and we're going to learn what those are
so that these numbers are going to fluctuate and eventually settle on something that is being learned,
that is the learning process, finding these values.
Now, we cheated here because we, you know, we constructed this
because we know that this is the kind of filter that will detect an edge.
So let's do it this way around.
This definitely is going to detect some way on your image.
It's going to detect a horizontal edge.
So let's do this again.
I'm going to say some product.
Highlight that.
Double click, I should say.
Let's do the first three, comma, these.
I'm going to hit F4, shift F4 to constrain those.
And then I'm going to pass, I'm going to move this along one, two, three places.
So I have a four, one, two, three places, another four.
And again, let's just do this conditional formatting and go down to rules.
Let's click this, choose these same two colors we had before just to show that.
There we go.
And you can clearly see that a horizontal edge, I'm just highlighting it so that we don't have
to stare at the actual values.
We can stare at the colors.
And it irks me that we can't see the values there actually.
So let's just do that.
We can clearly see that it has learned that there is this horizontal edge there.
And that's how it learns.
Again, this is very special the way that we put it here, but it is.
Those are nine parameters and it has to be learned.
And that is how it learns.
Eventually it's going to settle on something like this, which learns that there is this
horizontal edge and there's proof of the fact that there is this horizontal edge there.
And that is the process of a convolution.
And it is these filters and we stack them up.
We can say to the neural network in this layer, give me a convolutional neural network.
Make it three by three.
Make the stride one.
Make it valid or same.
So we're going to do padding or no padding.
Don't worry, we'll get to all of those.
But it's going to move across the image.
It's going to slide across as I showed you.
It is nothing but a sum product that gets done every time.
Nothing but a sum product as it moves across, element by element, multiplication, then addition,
moves across, moves across, moves across, moves across, moves across.
And we end up with this four by four on this other side because it is constrained within that position.
And there you have it, the convolution operation, very easy to demonstrate here in Excel
or in any other spreadsheet software.
We are going through there.
