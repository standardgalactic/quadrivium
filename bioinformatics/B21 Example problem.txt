I want to do one more example using Python. So we have a system of equations here that we want to solve. It's going to be autonomous, a system of equations, two unknowns, therefore it is a plain autonomous system.
So you can ignore this bit if you don't want to code this in Python. So I'm just importing sympy as the abbreviation SYM. I'm initializing pretty printing. I'm stating the variable T and I'm equating it to the symbol T. I'm importing matplotlib.pyplot as the shortcut PLT.
And when I do print some graphs, I want it to happen in this notebook. So I'm using this magic symbol there, magic matplotlib in line, percentage matplotlib in line.
So imagine that I can immediately set my matrix of coefficients here as 5 and 1 and negative 2 and 3. You see I always put these dots in Python.
I really do math with floating point values, not integers most of the time. So it's just simple for me to state that.
So what we have in essence here is that dx dt or x prime equals 5x plus 1y and y prime of t or dy dt equals negative 2x plus 3y.
So that's where I then get my matrix of coefficients. Very easy for me with that to get my eigenvalues.
So I have two eigenvalues, 4 negative i and 4 plus i, where you're going to take the first one here, which means alpha equals 4 and beta is going to be negative 1.
Remember that. I can very easily get my eigenvectors. So for my eigenvalue 4 minus 1i, I have one eigenvector.
There it is. And for 4 plus i, I have one eigenvector and there's that eigenvector.
So I just want to construct matrix B1 and B2. Remember, let's just go along this.
You can use either this eigenvalue or this eigenvector or this eigenvalue and this eigenvector.
Let's use this one. So my alpha is 4. My beta is negative 1.
So I just need to construct of my k sub 1. This is my k sub 1 eigenvector.
I just want to construct its real parts and its imaginary parts.
Let's remember the real parts there is going to be that negative 5 and 1.
So there's that as a matrix and B2 as another matrix.
It's the imaginary bits. Let's put that there.
So that is the real parts of k sub 1, remember?
And this is the imaginary parts of k sub 1.
5 there and 0 there. There they are.
I'm just going to use a bunch. This is Simpi, computer algebra system.
I'm just going to use a bunch of symbols.
Alpha, beta, c sub 1, c sub 2, x sub 1, x sub 2, capital B sub 1, capital B sub 2.
Let's just execute all of them.
Nothing is going to happen. I just want to show you then there.
There's my b sub 1 and there's my b sub 2.
So my real parts and my imaginary parts.
So now I'm going to construct this equation.
Remember, c sub 1, x sub 1 on the one side.
We have c sub 1, c sub 1 on the other side.
Remember that is the exponent of alpha times t times.
And then this subtraction of b sub 1 times the cosine of alpha t minus b sub 2 times the sine of alpha t.
So if I were to quickly do that, very nice in Python I'm going to get.
And remember that most textbooks will have x sub 1 here and then later on just multiply it by c sub 1.
So there's my first one and remember the second one, x sub 2 times c sub 2.
That's going to be c sub 2 times the sine, the exponent, e to the power of alpha t.
So alpha was 4t.
And then we're going to have b sub 2 times the cosine of alpha t plus b sub 1 times the sine of alpha t.
Those you should just know and I can get that.
So I can very easily read off the x of t.
x of t is going to be this top part, c sub 1 times e to the power of 4t times half sine of t minus half sine
plus c sub 2 half sine of t plus half cosine of t times e to the power of 4t.
And then y is going to be these bottom two in row two.
That's going to be the y of 2.
So it's very easy to read it off of here.
Now I'm going to state initial values to my system.
Obviously I'm going to put, for instance, a particle at a certain point.
And at time 0, x is at negative 1, y is at 2.
So I can now, because I have initial value problem here, I can calculate the values of c sub 1 and c sub 2.
So for everywhere where I see a t, I'm just going to put a 0 in there, hence my 0s, hence my 0s.
I always put the dots.
I'm just so used to doing that.
Okay, and there we have negative half c sub 1 plus half c sub 2 equals negative 1.
I can do the same with the second equation that I have for y.
And I see that now I can solve.
I have two equations and two unknowns.
I can treat this as a matrix.
There's my matrix of coefficients.
Negative 1 half and 1 half.
And 1 and negative 1.
There they are.
And my matrix B is just my matrix of solutions.
Remember, ax equals b.
There's my b on this side.
It's a negative 1 and a 2.
So if I do that, now I just have to get the inverse of this matrix.
And if I get the inverse of this matrix S, and I have my matrix B.
And if I multiply the inverse of A times B, I'm going to get my solutions.
In other words, c sub 1 is 2.
I read it off there.
And c sub 2 is 0.
I read it off there.
There's my 0.
So here's my solutions.
X of t equals e to the power of 4t times the sine of t minus the cosine of t.
And y of t equals 2 times e to the power of 4t cosine of t.
So I'm just using c sub values for c sub 1 and c sub 2.
And just entering it into these two equations.
So I'm putting c sub 1 and c sub 2.
I'm just entering the values.
This is what I'm left behind.
Check it on paper.
It's easy to do.
And all I'm doing here is just to show you a little plot of what the set of solutions look like.
Just by running this time loop.
I'm setting.
I can't use t because remember t is now a symbol.
I can't use it as a variable.
So I'm using time.
I'm doing small little steps.
0.01.
My initial starting points being negative 1 and 2.
So I'm just running it through.
There's my two equations for x and y.
I'm using time every time.
And I'm increasing time by that.
So the only reason why I'm doing this is just a little point plot.
It's got nothing to do with how to solve this.
Remember, it's not a numerical solution.
This is an analytical solution to the system of autonomous equations.
Plain autonomous equations.
But here I'm just using this point plot format.
And I'm just plotting the solution.
And you see beautifully there is a solution.
And as time increases, we can carry on.
Let's make this 4.
And let's see what happens.
Oh, we see there's a curvature there.
Let's carry on.
Let's make it 10.
Let's go on to 10 points.
And we see that's taking an enormous amount of time.
So it's actually not helping us much there.
Let's make it a 7.
See what that does.
Takes an enormous amount of time.
We see that that is what the ensuing solution looks like.
Just depending on how far you zoom in,
you can see these enormous values here.
So that's probably way, way too far.
Let's just keep it at 1.
Let's just keep it at 1.
And we can see the set of solutions.
Let's send a 1.
