This text introduces a second video on anatomy using the Wolfram language within Mathematica, highlighting the concept of "computational essays." These are interactive documents combining code and narrative in Mathematica's notebook environment. The author explains how this format allows for dynamic storytelling through text, code, and results, similar to traditional essays but enriched with computational elements like graphs and images.

Accessing Mathematica can be done via an organization's site license or by purchasing a personal yearly license affordably. There are also free and paid online options available, such as the free Programming Lab on wilframcloud.com, where users can create notebooks without signing up. The platform offers robust documentation, including introductory materials authored by Stephen Wolfram himself.

The text demonstrates creating a new document in this environment, illustrating features like formatted sections, cells for organizing content, and built-in auto-completion for coding elements. It showcases how to insert plain text, code, and queries seamlessly within the notebook, emphasizing the interactivity and richness of computational essays through an example involving anatomical 3D plots using functions like "anatomy plot 3D."

The text describes how to create and navigate an interactive digital document using Mathematica, particularly focusing on anatomical studies. The author explains using keyboard shortcuts (shift + enter or return) to execute commands in the software, allowing them to visualize and manipulate 3D models such as a femur. They emphasize the flexibility of organizing content into collapsible sections within cells, enabling a narrative-driven approach to document creation.

This computational essay format is showcased through an example focused on the clavicle, serving as the first anatomical object for discussion in the document. The desktop version of Mathematica supports this by allowing users to expand and collapse information-rich cells with ease. This interactive document can include text, code, and executed results, making it a versatile tool for learning and presenting information across various subjects.

