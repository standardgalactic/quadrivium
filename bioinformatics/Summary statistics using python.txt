so we finally get to do some analysis we're going to do descriptive statistics or summary statistics
and what you're going to see is that the data hides the information that we require it hides
a story and we have to to tease that story that information out you're also going to be to i'm
going to repeat myself you're going to hear me say that human beings are very bad at looking at
rows and columns of data making any kind of sense of it we have to summarize it in some way so
in this video we're going to open our notebook we're going to connect to our data we're going
to import that we're going to inspect that data and then we're going to start summarizing the data
to try and get some information from that data to try to start to get a feel for what's going on
and that is our first step before we move on to really analyzing the data we first need that
in that that understanding of the data before we start to properly analyze it here we are in our
google colab descriptive statistics or summary statistics what is this all about well human
beings are very bad at staring at rows and columns of data and making any sense of it we can't just
stare at a at a spreadsheet file and maybe that spreadsheet file even goes off the screen so you
have to scroll both left and right and up and down just to see all those numbers there is a story
hidden inside of those data values there is information there we asked a research question
and the answer is locked away in that data and it is our duty to bring that hidden information that
story out of the data and we start that journey by summarizing the values that we do see in our data set
it's called summary statistics or descriptive statistics it's the first thing that we do
when we start to analyze data to start and start to get a sense of what is going on and we summarize all
those values we replace them with one or two values that that represent all of those values and that
single or two representative values give they give us a sense of what's really going on so let's start
off by just looking at the libraries that we are going to import you see panners there scipy
from scipy import stats that's a new one and then the google drive and just to show the tables in a
nice format so let's connect you see right up there remember we're going to hit the connect button or
when we run the first code cell it's going to connect anyway so let's give our internet connection
and google on the other side a chance to connect and we see everything is connected there so we can
start going so pandas we know almost everything we need to know about right now we've done pandas so
there's pandas as pd and then there's scipy that's scientific python that's a fantastic library it's got a
module called stats and it contains lots and lots and lots of statistical functions almost everything we are
going to need and so from scipy import stats let's do that we have to connect to our google drive so
from google.colab we're going to import drive and then as i said our data table so that we just have
nice tables that we can print to the screen let's import this data and see what it looks like
we're going to connect to our google drive remember we've imported drive now it has this mount function
so drive.mount and it's always forward slash g drive and that's as a string so you see the quotation
marks there and then we're going to cd into the g drive and then we're going to cd again into my
and i'm leaving that space there if there's a space i've got to escape the space with that little
backslash remember you don't need to do any of those if you put this inside of quotation marks also
i've shown you how to import the data from github all these files and if you save them in a different
folder structure on your g drive this will look different for you how you get to this data folder
and then the ls just lists what's whatever is in this data folder right here at the end
we've seen how to do this so let's just run that now remember we've got to log on so i'm going to log on
you know how to do that by now and we see all the files that are in this folder called data
and we are going to use this data.csv file here so i'm going to call it df that's my computer variable
name and you know by now we're using this read csv function inside of pandas and we're just going
to import this folder this data set i should say there we go let's print it to the screen
we can just say df because we imported this specific to google colab formatting we can see
the data and we've seen it before it's this mock little study of ours where patients were either in
an active or placebo group and we've we checked their cholesterol before and after and we see what
change they've been in their cholesterol so all just just random data there's nothing specific to it
it's not very realistic but it gives us something to work with and we don't have actual patient data
on here let's examine this data frame always important just to see that what you've imported
is what you expect the first thing that we're going to do is just call this shape attribute or
shape property on our data frame and that will tell us how many rows and how many columns we are so 200
rows and if our data is tidy that means every row is one participant in our study all their data is on
one row and there are 13 variables so we've got 13 statistical variables they'll all be of a
different statistical type data type which we've discussed and we've got 13 of those now we can also
look at these 13 by calling this dot columns attribute or dot columns property we see we have name date of
birth age their vocation what job they do do they smoke something about their smoking their heart rate
systolic blood pressure cholesterol before their lipids there's a survey question that they were asked
cholesterol after what the difference was between the two and what group they were in
and lastly let's have a quick look in our data frame are the data types what we expect them to be
name is indeed an object that's nominal categorical date of birth is a bit wrong because we have an object
there and that should be a date time object so that's a bit of a problem age is a 64 bit integer
that's a numerical variable that's fine vocation is an object that looks good smoke is an integer
and we might think that there is a problem we we saw it in the previous video in as much as
the values the sample space elements were zero one and two those are numerical variables but they
represent a nominal categorical variable so there's a problem there heart rate and systolic blood pressure
looks fine cholesterol before as a decimal value so float 64 that's fine the lipids that's fine the
survey question they could choose an answer between one and five and that is now represented as numerical
variables but we know it's ordinal categorical variables those those are not real numbers so we
have to watch out for that one cholesterol after looks fine delta looks fine and the group once again
is a nominal categorical variable so that looks fine one of the first summary statistics that we're going
to do is just to count certain things and the best data types to count of course is categorical variables
so let's look at counting let's start off with frequencies we have a group column we've seen that
before patients were either in the placebo group or they were in the treatment group so let's just see how the
data was collected by looking at the sample space elements all the different elements that could be
chosen from at random for each and every patient or participant in our study so if i say df.group
group is one of the columns that's going to return for me remember a panda series and a series has certain
functions and methods i should say and certain attributes or properties and we're going to call the
dot unique method and if we do that we see there were only two sample space elements for that categorical variable
active and control so that's a nominal categorical variable we can't put this in a natural order so it is nominal
now we want to know how many of our participants were in the active group and how many were in the control group
so we want to count that's the frequency that we're talking about
so to do that we're going to first call up the panda series df.group and then we're going to use this
method value underscore counts it's a method in other words a type of function so it's going to have the
open and close parentheses we're not passing any arguments there so value counts it's going to look
down that panda series which is our group column and it's going to see these two unique values and it's going
to count how many times each of those occur and our data set is neatly balanced we had 100 participants
in the control group and 100 participants in the active group now we might want to express it as
a frequency 100 in each group but we might also want to do a relative frequency a relative frequency
is something we express as part of a whole so you can well imagine that if the whole here is one
half of half of the participants would be in the control and other half would be in the active
group and to get those relative frequencies we're just going to do normalize use the normalize
argument here and we set it to true so it's still value underscore counts and we just say normalize
equals true so there we have 0.5 and 0.5 just as we suspected so this is relative to the whole now
we can also express this of course as a percentage by just making use of this broadcasting broadcasting
just means if i multiply this by some integer value or some number or if i added it it would be added or
multiplied to each individual value so if i multiply by 100 i'm going to get the percentages and in this
case it's very simple to see that 50 of people on the control group and 50 of people are in the active
group so that is a frequency and a relative frequency let's just do a little exercise so i want you to
go down the smoke column it indicates whether participants never smoked that's a zero so it was
captured as a zero and you can see that is why pan is at the moment thinks it's 64 but integers but it's
not it's nominal categorical variable because we're just using these numbers to represent something much
more real they never smoked or they are current smokers that's one or they have smoked before as a
number two so i want you to calculate the frequency with which each element appears
i hope you tried that let's have a look at the solution so i'm just going to call df.smoke that's going
to give me the panda series for that column and i'm going to use the value underscore counts method
and that's going to show us 88 people are non-smokers 85 people are smokers and 27 are
ex-smokers in our group and if we want to express this just an excellent bonus if we want to express
this as a fraction and then times 100 which gives us a percentage and i say ascending equals two
then we're just going to get this order an order of the percentage so the lowest was 13.5 percent those
were the x-smokers 42.5 percent were smokers and 44 percent are non-smokers so we could also say
ascending equals false there and then we'd get the descending order group frequencies are the second
thing that i want to show you we might not only want to count by a certain panda series but we want
to count a categorical variable by making by splitting the participants up into other groups
by the sample space element of some other categorical variable and look at this
i want to know here we see df survey and df group so df survey remember they will ask a survey question
if we watched the video on pandas before you'll know they could choose one two three four and five
i want to count that but i want to split it up as well by the group and that's called cross tabulation
so pandas has a function called cross tab and in cross tab i'm going to pass two panda series
and look at what the results are so the survey was the first one first argument in this cross tab
function so that will go down this first column patients or participants could either choose one
two three four five and then we see the second one goes across the columns here active and control
so in the active group 21 participants chose one in the survey and 17 in the control group chose one
in the active group 18 chose two and 32 in the control group chose two so you can see we're still
doing counting here but we've broken it up by this second the second argument that we give there so we've
broken it up into the sample space elements of this nominal categorical variable and we see active and
control if you swap those two around you were just going to see one two three four five at the top
and you're going to see active and control try that for yourself you'll just see the table just
transposes is what we call it so whatever way makes sense to you put them in those order but you can see
here in what order you put it what the effect of that is going to be so we can do these grouped
frequencies that is where we just group the numbers by the sample space element of another categorical
variable so we have to create a categorical variable if we had a numerical variable we'd have to create
bins out of those and then we can do this grouped frequencies we counting by certain groups now that
we know a little bit about frequencies and relative frequencies let's start discussing measures of
central tendency otherwise known as point estimates and i'm pretty sure everyone is quite aware of what
these are measures of central tendency or point estimates now these are single values that are
representative of the whole for numerical variables for numerical variables the first two at least
there's a point estimate that is of course a bit different than that the one that we know or most of us
know about is the mean or the average it's proper term is the arithmetic or arithmetic mean
and that is where we just add all the values and we divide by how many there are so that we get this
average so let's look at the average or the mean age of all the participants so if i just choose that
column so df dot age that's going to give me that panda series of that column and it has a dot mean
method remember before you would have noticed you might remember right in the beginning we changed this
to a numpy array first and then we used the dot mean method for numpy array but i told you pandas
pandas series like this also has a dot mean a dot mean method so if we do that for this panda series
we're going to see that the mean age or the average age of all the 200 participants was 53.07 years
let's look at the average heart rate and i've put this in because i just wanted to remind you of
the different notation to get a panda series and perhaps the more proper way to do that so df and
then square brackets and then we we use the column name the hr instead of the dot age so here i could
have also said df dot hr that would also work so just to remind you of the different notation and we see
that the average heart rate of our 200 participants was 74 about 75 let's round up beats per minute
now what if we wanted to get a bit more fancy we wanted more information from our data
and we're only interested in the average age of the smokers
and remember how we do that if you can't this will jog your memory you can watch that video again
or you can just start using it the more you write this code yourself the more you'll remember how
to do it and it'll just become second nature so i'm going to call df the data frame and then inside
of square brackets i'm going to pass this conditional df dot smoke so the that smoke column it's panda
series equals equals one so go down case by case and only if the smoke value is one in other words the
smokers are we going to have include that in what we're trying to achieve from that we want the age
column so pass that in square brackets and quotation and single quotes and then i have all the values
of the ages of only the people who are smokers and then i call the dot mean method on that
so if we look at our smokers they are about 56 years old on average let's contrast that because now we're
starting to to learn something about the data so let's look at all the people who've never smoked
they're non-smokers so that would be indicated by zero so our conditional here our conditional here
would be df dot smoke equals equals zero and from there we want the age and if we run that we see
they're only 50 years old so definitely a difference between the 50 and the 56 but is that of statistical
significance how do we do that what kind of test do we do so how do we discover this and what about
the third group of the ex-smokers do we have to include them now we're certainly going to reveal
all of these things how do we know what tests to do what how how do we decide is this significant how
do we decide that there is a statistically significant difference between 50 and 56 and we'll certainly get
to all of these now i want to just introduce you to the group by method because instead of going
through each and every one of those sample space elements and if they're more like the survey column
in which there were five it's going to take you a long time to do so this is a much easier way to do it
the group by method so i'm going to call df my data frame and a data frame has a method called group by
and you tell it by what statistical variable which of the columns you want to group by so i'm going
to say by the smoke so it's going to make three separate groups ones with zero ones with one and
ones with two from that once you've done that grouping i'm interested in the ages and then i want
the mean so dot the dot mean method and if you look at this it makes so much sense the way that this is
constructed and now we can see the 50 years old on average for the non-smokers 56 for the current
smokers and 53 for the ex-smokers so do you think there's a statistically significant difference here
i'll show you just how to do that in a later video so very very easy to do i want to remind you that
there are more arguments to this dot mean method for instance if you have cells i'm going to call
them cells but if there are some participants for which the age was not collected you could say skip
in a is true but that is by default i think it's set to true so if there are empty values it's just going
to be ignored and then sometimes i mentioned that right in the beginning it's very weird sometimes how
data is collected so instead of 43 someone is going to write 43 they're going to write it out in words
so you could also use this argument numeric underscore only equals true if you do that
all these other values that are not numbers will also be just ignored now that's it for the mean
play around with the data and see what other mean values you can calculate the next mean i just want
to make you aware of we don't use it that often that's the geometric mean and that is where we add
we multiply all the numeric variables and then we take the nth root where n is the number of cases you
have so we would have had to take the 200th root now we all know the square root that's just the second
root but we'll have to take the 200th root after multiplying all the ages and that is available as a
function called g mean geometric mean but that's in the stats module of scipy so we from scipy we did
import stats so now we can just say stats dot and the function that we're interested in is g mean
and what do we pass we pass the panda series which is the age df dot age and now we get the geometric mean
as i say it's not something we use often but i wanted to show you that it exists
now we move on to the median it won't make much sense to us now why you would use the median but
many people would know that we use the mean if the data is nicely distributed as a bell-shaped curve
so most of the values are punched in the middle and as it gets away from the mean fewer and fewer and
fewer and fewer cases are known so that's the famous or the familiar bell-shaped curve and then we use
the median but we don't always find this distribution of values sometimes all the values are
bunched at the lower end or at the upper end and sometimes we have values bunched in the middle but
there are outliers far away under these circumstances we're going to do the median and we're going to
talk all about that in a later video where i show you how do you decide when these values are so
weird that you can't use the mean and that also means there's a whole set of statistical tests that
you can't use and we have to go on to other types of tests and then it becomes very important for now
let's see how to do the median and the one that i've got here is i want to know the median heart rate
of all the patients who's who are 50 years or older so we know how to do that with a conditional so we call
df and then our df.h which is our pandas series for that column and older than 50 from that i want
the heart rate and then the dot median method as simple as that and by the way what is the median
well you just put all the values in ascending or descending order and you take the middle one so
that's very nice if you have an odd number of values say you have five values you just place them
in ascending or descending order and you take the third one the third one will have two values that are
lower than it and two values that will be higher than it it's easy if it's an even number say you
had four numbers you would take the middle two and you just take the mean of those middle two and if
you take the mean think about it two two values will then be lower than it and two values will be
higher than it so the median is quite quite easy so here's a little exercise for you you can stare at
it before you go get yourself a drink or take a break but do come back so calculate the median age of
the of the participants who smoke and have a heart rate of more than 70 now that's a bit of a contrived
question but you can well imagine if you do a research if you do research there's very specific
participants from your data that you want to draw out so this is exactly what you're going to do so
first of all just a reminder of all the columns that we do have so we do have smoke there and we have
heart rate so think about how to construct this good are you back let's have a look at the solution
i'm going to use the dot loc remember the dot loc the location and because i want both of these
things to be true i'm going to use the ampersand and i'm putting each of my conditionals inside of
parentheses so it's df dot smoke equals equals one so only include them and df dot heart rate more
than 70 that's exactly what my question said and because we're using loc we are using this row comma
column idea so it's going to go down all these rows comma the column that we're interested in is the age
column and then we call dot median on that the median method because that's what we want and we can see
the median age of patients who had a heart rate of more than 70 and who were smokers was 58 very simple
now we get to this to this measure of central tendency or this point estimate that we can use
for discrete data or for categorical data we can also use it for numerical but continuous numerical
remember we're only capturing because our devices can only capture a certain accuracy but in reality
those values go off with infinitely many decimal points so mode really for discrete data or categorical
data and that's just where we just want to know which value occurs most commonly that will be the
mode for that variable now we don't have a dot mode method so instead we just use value counts so if we want
to see from our smoke column what of our three categories of smokers occurred most commonly we
could just look at this by default we're going to have this ascending equals false but you could also
set it to true but we have this and we see 88 85 and 27 and that is because the sort was also set to true
it is going to sort them so we see 88 were non-smokers 85 were current smokers and 27 so the mode of smoking
was zero non-smokers is the mode of the smoke variable let's move on to measures of dispersion or
measures of spread we've had point estimates now we take we represent something by a single value
just a single value but we might also be interested in how spread out that data is and that's measures
of dispersion let's have a look at that the first one we're going to talk about is actually
two things and that's standard deviation and variance because they go hand in hand
now we can think of the standard deviation as just the average difference between each value
and the mean for that variable so we have the mean sitting somewhere in the middle and if we just
look at the difference between a specific value in the mean we'll just subtract one from the other
and we're going to get either a positive value or negative value depending on whether that value is
larger than the mean or higher than the mean and of course we're going to have both of those scenarios
and if we add all of those up the negatives and the positives by design we're going to get back to
zero so we have to do something to calculate this average because as i said if standard deviation is
this average difference we've got to add all these differences and divide it by how many there are
we actually divide by one minus how many there are because we're dealing with a sample
but that's not important for us right now so what how do we get every value to be positive well one
way in mathematics to do that of course is just to square because any value squared will be a positive
value so we square all the differences and then we divide by how many there are but that that thing
gives us the variance that's what we call the variance but if you think about squaring it if the
unit was you are so many years old now you're talking about years squared what is a years squared what kind
of unit is that and to get back to the units that we are dealing with we just take the square root
again of this value and that turns the variance into the standard deviation so let's have a look
at the standard deviation we again going to calculate the standard deviation of the ages here
but i'm going to use this group by method of a data frame so data frame dot group by group by the
three smokers please the three groups of smokers and i want the standard deviation of the ages now we
remembered what the averages were for those and now we have the standard deviation we see it's
actually quite quite close to each other but now we can express the median plus minus the mean mean i
should say the mean or average plus minus 12 the mean or average plus minus 12 the mean or average plus
minus for two that's about 13 that's the plus minus so that's one standard deviation away from the mean
would be 12 years let's just have a quick look at the variance then and if you squared those values
12 squared is about 144 and that's how you see how we get to these values it really is just the square
or the standard deviation is the square root of the variance let's have a look at the range
the range is very simply the difference between the minimum and the maximum value
so we're going to call df.age once again that gives us our panda series and we're just going to call
dot min for the minimum and very simply we're going to call dot max for the maximum there's really
nothing about it in the range then it's just the difference between the maximum and the minimum so i'm
going to take the maximum i'm going to subtract from that the minimum and that gives me the range of
that function so the youngest participant was 30 the oldest was 75 that gives us a range of 45
the quantiles is the last one we're going to look at and remember where we said that the median we
were going to just put them all in order and split it right down the middle well we needn't just split
down the middle we can split at any if we think about all the values representing 100 of the whole
i can split it at 25 so the 25 of the values or quarter of the values are less than this value
and three quarters are more than this value so as long as i put them in ascending or descending order
i can take any percentage split i want from 0 to 100 100 of course will be the max because 100 of
values will be less than the maximum and the zero the zeroth quantile will be the minimum because
there's no values less than the minimum value but we can be as peculiar as we want we want the 90th
percentile and we'll call that quantile a percentile if we express it as a percentage but we also express
it just as a fraction and then we talk about quantiles and they are a very famous or not famous
but well used set of quantiles and that's the quartiles and so we have the first quartile the second
quartile and the third quartile the first quartile as the name would represent is the 25th percentile
so that 25 or 0.25 of the values are less than and three quarters are more than the second quartile is
nothing than the median because i'm just dividing the the data set into two so half of the values will
be less than and half of the values will be more than in the third quartile i think you get the picture
so how do we do this well we use the dot quantile method so again here i've got age and i'm saying
dot quantile and i pass as a list all the quantiles that i want and these are actually the quartiles
because 0.25 is the lower quarter 0.5 is just the median the second quartile and 0.75 or 75 percent
that's the third quartile and there we go i'm going to get these values the age of 43 would mean a quarter
of people are younger than 43 and three quarters of of the people are older than 43 54 was our median
we saw that and 64 is our third quartile so we can get very specific we want we want the 95th percentile
there so quantile we're only going to pass a single value there 0.95 i want a group by the smokers
and i want to see what the 95th percentile is what that age is for the three different smoking groups and
we see 72 73 and 71.7 as simple as that you'll also see many times if we do express something as a
median we don't want the standard deviation plus minus but we actually want the interquartile range
and in those instances we'll just subtract the third quartile value from that we'll we'll subtract
the first quartile so it's df.h.quantile 0.75 minus df.h.quantile 0.25 so i'm just subtracting
those two from each other and i hope i've really whet your appetite and i showed you just how easy
it is to do summary statistics and many papers that you'll read only summarize the data it'll just be a
simple study that just case series or case control series and we just want to describe the data some
audit of the type of thing that we are seeing just describing the data and i've shown you almost
all of the descriptive statistics that you are going to use in your own analysis so go through this
notebook go through this video again and start typing and seeing what happens and then if it doesn't if it
gets stuck read the pandas documentation just google the problem you are going to find the answer that's
the beauty of python there's such a huge community and there's so much help out there or just simply
leave a comment down below if you've got a question and i'll answer that for you most importantly get
your hands on a data set download this one and start typing some code i hope you enjoy it
you
