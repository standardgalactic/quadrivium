So let's import our data file. The function that we're going to use is readTable and you see the
parentheses there and the argument that it takes. The argument takes the name of the comma separated
file with the file extension. For us it was ccs.csv. It's got to go in these quotation marks
and because I'm not putting in the file path there it's got to be in the same folder in Julia
box as this Julia file so I can use it directly. I'm going to place the content of this data frame
if I say readTable. Julia is going to convert a data frame. ReadTable is a function that's part of
the data frames package so we're going to create this data frame from this comma separated value
file and I'm going to place it in this computer variable that I'm just going to call df. df or
data frame you can call it whatever you want. You see the semicolon after this function that is just
to suppress any output to the screen so we won't see the whole data set appear on screen. So if I
execute that it's going to take a bit just read that file of ours it's got quite a few lines of
data entry there and it now lives in data frame and the type of data df is a data frame. Now I can use
this head function. Head it's also part of the data frames package and the argument that I pass is the
name of my data frame which is df and it's just going to print to the screen the first few rows.
So if I do that there we have I can beautifully see on the left hand side here we have an index.
That is what the data frames package adds all on its own. It's just an index so it knows what row it's
talking about. We see our patient ID there. Now we know on a separate piece of paper well away from
our data collection what patient number 16 or who patient number 16 is it was never captured as part
of our data and data analysis. Category one remember A was for minor infections B for major infections
category two there. Remember we had our little code our secret code for what refers to male what refers
to female. Variable one was our age to which we added mentally a value of five years and we've got
to subtract five from each of these entries. We had our variable two and variable three.
So if I just wanted to look at the first few rows I call the head function I could also call the tail
function which is going to give me the last few rows. Another way just to look at these column headers
remember these will be my variables and the data point values for each of these variables is just to
call the show cols the show columns. Now look what that does. There's a few things we can learn from
this. First of all we had six columns and there they are column one two three four five six and we see
that there are we have a list of the names of those. There was patient ID category one category two var one
var two var three. A good thing that it does here tells me what data type it finds in that column.
So patient ID was a 64-bit integer and category one was a UTF-8 string. A string in other words we
automatically know that here we're going to deal with a categorical data type and if we know it's a
categorical data type that limits us to certain types of proportional statistical analysis we can
do. For instance Fisher's exact test or using a chi-squared test for proportions there. So string
tells us what data type we have. Another string for cat1 remember that was male and female. Then we had
64-bit floats which means it's decimal point value so we're talking numerical data here and I know
immediately I can do use some parametric or non-parametric tests for numerical data types
there. So that helps a lot in making helping us in our decision what statistical tests we can do
on that on the data points in that in that variable. And missing is very important. Now we set up our data
data and it's good to set your data up that you never have any missing values but missing values do
occur. Julia handles missing values with the data type NA and it causes havoc. You will not be able to
calculate a mean of a list of numbers if one or two of them are missing and have an NA type in them.
There's a special way that we have to deal with that. Fortunately for us here we see we have no
missing values in any of those columns of values. So that's it. We've imported our CSV file and it lives
as a data frame now and we had a good look at it. In the next section we're going to change all our
coded values. We're going to look at changing the variable names we had cat1, cat2, var1, 2 and 3
and changing those coded values into minor and major infections into male and female.
ookf Vijay
matrix
you
we're going to look at what however you want to change the code of characters or even
we're going to look at what you can change the code of than five other areas and we're not
going to say it and we're going to investigate that. We just put them into the solution a hundred and
over a time
you
can't
