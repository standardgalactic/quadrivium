The text outlines methods for finding and replacing characters or substrings within strings using specific functions. It covers:

1. **Finding Characters/Strings**:
   - The `in` function checks if a character exists in a string, returning true or false.
   - The `contains` function verifies the presence of a substring within another string, with its arguments ordered differently from those in `search`.
   - The `search` function identifies substrings or characters and returns their index positions. It can also search using an array to find the first matching character.

2. **Regular Expressions**:
   - Regular expressions (regex) enable complex searches by matching patterns, such as finding sequences starting with a specific character followed by any sequence of characters.

3. **Replacing Substrings/Characters**:
   - The `replace` function substitutes specified substrings within a string, like changing "fairly" to "very."
   - It notes that strings are often immutable in many programming languages, meaning modifications result in new strings rather than altering the original.

The text emphasizes the importance of handling string immutability by creating new instances for any modifications.

