Finally, we get there. We're going to take two groups and we're going to compare their
means and we're going to work out a p-value. We're going to use a t-test, students t-test
at that. It's going to be phenomenally exciting to do. Once you've done your first one, there's
such a sense of accomplishment really. Small things, but it makes you happy. First of all,
just my style sheet. We're going to import that. Let's set up our Python environment.
Now, most definitely, we're going to use pandas because we're going to import our data set,
our spreadsheet from SciPy. We're going to import stats because it's within that stats that we're
going to find our t-test. Matplotlib, always seaborne, always filter warnings from warnings.
I want to draw my plots right inside of this web page, playing around with seaborne,
a bit and I execute my filter warnings to ignore. That's the standard for doing t-tests. There we go.
Comparing the mean of two groups.
Now, when we talk about t-tests, we're going to compare two groups to each other
and we want to find out whether a variable for them
differs in any statistically significant way. Now, these two groups,
the two groups are of nominal categorical type. So, group A and group B, group 1 and group 2,
you can't say, or group with appendicitis, group without. Group with hypertension, group without.
Test samples with test samples without. You know, the two groups itself,
the data type of the two groups, just the two groups when you look at them,
they're categorical and nominal at that. You can't say group 2 is more than group 1. You can't say that
group B is less than group A. I mean, these things, there's no order to them because I could have called
them group yellow and group blue. So, the two groups here are categorical, nominal categorical type.
That's when you do t-tests. When we just compare numerical values to numerical values,
that would be regression analysis. That's something else. Now, the variable that we're testing,
in this instance, we're going to go for white cell count. Those are ratio type numerical data. So,
the actual variables in the two groups, the groups are nominal categorical. The variable inside of each
group that we're going to look at is ratio type, so there's an absolute zero, numerical.
And that tells us we can do t-tests. Let's go. So, we're going to import our mock data. Remember,
we're going to give it a computer variable name. The computer variables can hold an object. That
object is going to be a pandas data frame. And we're going to execute the code pd, which is our
abbreviation for pandas up top. We're going to call the read underscore csv method. And then in
parentheses, in quotation marks, the file that lives within the same folder in our computer. If I go to
my main notebook here, we see we're busy with the comparing means. And it's inside my desktop in a
folder called healthcare research lectures. So, that's where this mooc.moc lives. So, I can refer
to it directly because this this python notebook file and this spreadsheet file live in the same
folder or directory on my computer. Let's see. Let's going to import that. Let's see if it has imported
correctly and just execute that code indeed. I've asked for the last three. Patient number 148, 14950.
It looks like my data set imported absolutely correctly. Now, creating the two groups. As I say,
one way to do it is by this group by method. More powerful, but to keep things simple in this,
keep things logical in this lecture series, I'm just creating two new data frames. The one I'm going
to call appendix.neg, appendix underscore neg, appendix underscore pos. It comes from the data
data frame. And remember how to do this. So, take that data frame, take this column
and ask the question. In that column, data, open and close square brackets, open and close
quotation marks, histo. So, look in that column, look at each row. And if the result is true,
and the question I ask here, is there no in that row, yes, if that is true,
then put it inside of this new data frame. And for pos, we want for this column
inside of this. So, look where to put the square brackets, look at the repeat of the name,
look how to reference the column name. If there is yes in a particular row, and it's going to run
through all the rows from top to bottom. If there is a yes, so this equals equals, ask the question,
is it true? Yes, it is true, then we're going to put it inside of that. If it was false, so anything
other than yes, it would return a false value, and it would not put it inside of this new data frame.
So, I've created two new data frames. Let's just describe them. We see the appendix neg,
let's just, I just want to sell all output toggle. So, it just hides all of these before we actually
execute them. Appendix underscore neg, white cell count. So, I'm just looking at this data frame,
which contains all the cases which did not have a histological proof of appendicitis on the resection
specimen. Dot describe method, empty parentheses there, round brackets, and I see the 29 with a mean white
cell count. I'm looking at white cell counts of 11. Standard deviation of 5. Minimum was 4. Maximum was 26.
High white cell count. Let's look at describing just the data for these patients with appendicitis.
There were 118. See, their white cell count was 14.6, and those were 11. Can I do a test to say,
to see whether there's a statistical significant difference between those? Can I do that? Indeed,
of course I can. Now, it's easy to look at the describe values there, but we can also just plot the
two values next to each other. Sometimes, or almost always, it's better for human beings to look at a
plot. Now, the plot I'm going to use is the violin plot, but I'm also going to show you the box plot.
Both of these plots are types of seaborne plots. So, I've commented these two lines,
the matplotlib.py plot. Now, CNS works on top of, it extends matplotlib, but within this
violin plot method, which is inside the seaborne module, it's actually got all of these things
built in, so you don't actually have to do them. That's why I've commented them out. But you've got to
be careful. It's not always the case. Sometimes you have to do these two. Certainly for violin plots,
you don't. Now, what arguments does the violin plot method take? It takes one, then a comma,
it takes another one, then a comma, seems to be another one there, another argument, and a comma,
carries on, there's another argument, and the last argument. Now, some of these have defaults,
and you can leave them out. Definitely the inner, you don't have to put in, you can leave it out
completely. You can leave out color completely. These are just ones I'm playing with. But let's
run through the ones I have used. First argument that must be there is the actual values you want
in your violin plot. So I'm asking it for the complete. Now, I'm not referencing, I want to draw,
actually want to draw two violin plots next to each other. So I'm not referencing the values from the
individual data frames that I created, but the original data frame. So it's data, and the white
cell column, and I'm using this drop NAE, open and close brackets there, method. So in case there are
values that are not numerical, not a number, I just drop them from the analysis. Now that white cell count,
obviously there's white cell counts in there for patients with and without appendicitis. But the
beauty about the violin plot is that I can say group by, and it can reference another column in my
data set. And whatever it finds there, of course here is just going to find yes and no. But you might
have a column that contains all sorts of others, and then you'll have more than two plots. There's just
going to be two violin plots here, just because there's just yes and no in this column. So I'm going to
take all the white cell count, but I'm going to split it into different plots, based on what is in the
Histo plot. So that's very powerful, right there. And again, I'm just using the drop NA because, well, in this
instance, drop NA is really superfluous, because let's just take it out. Really, that's just confusing the
picture. Because Histo just says yes and no, there are no numerical values, and we might get something,
something weird going on there. Fortunately, Seaborn is clever enough to sort that out for you, that tiny little mistake. So let's just use,
lose that, leave that out. Think about these two first arguments, though. They are very powerful. We're going to
reference two different types of columns. We're going to group it by the second column, and we're going to take the
values from this column for each of these two groups. Very clever. NA equals points, that is just making my plots a bit more
pretty, because it's going to plot the individual data points on the plot as well, but you can definitely leave that out.
Names are important. The names go in a list. Remember, a list you create by giving it just these square brackets, and so the
first one's going to be no appendicitis, the second one appendicitis. Just checking which order you put them, because you
might put the wrong name to the wrong violin plot. And this color you can definitely leave out. This is the code for
purple and green. Oh, don't matter. Let's run this. Beautiful two violin plots next to each other. So as I said, just be careful,
you can do the describe, and you could see that obviously this one had a lower median than that. So I've labeled them correctly.
But there's my no appendicitis. I can see a beautiful kernel density estimate there. I can see the actual data
points there. So that was that inner equals points. So it's not really necessary. But you can see that the median was lower
for the no appendicitis than for the appendicitis. Beautiful graph that you can get there from these arguments.
You might prefer boxplot. You might want to send in your research article. Again, boxplot as part of SNS. You need to do
these two. Again, the arguments. The data that you want is the white cell count. Drop in A. The group by, you want it all
again to be grouped by. Let's take away that little error there. Data equals histo. So look in the histo column and make
difference. So again, there's just yes and no. But if there was a maybe in there, I would have three
plots. The names. It's just these that you want underneath. Again, there is a list. And a list by that. And again, I'm
going for this color. But I actually did some colors up when I started this sheet, playing around with the
default values with seaborn. So I needn't to put that. But there we go. And you can decide which is best. I like violin
plots. It looks like there's a bit more information to get from a violin plot. But boxplots are the
standard. Again, so this would be the interquartile range. One and a half times the interquartile range. So
anything outside of this would be statistical outliers. And it'll mark those for you with these little
spots there. But certainly, there's the first quartile, the median, the third quartile, etc. Beautiful. And it
actually gives a name there. It came, we made the decision based on the histo plot. No appendicitis
appendicitis. Now, we've done the dot describe function for the white cell in the column. We
know that 29 values, negative 100 and positive. But we want an answer now. We want to know is there
a difference between the white cell count between these two groups. So what are the steps that we run
through? So you've got to have this in your mind. This is what you're going to do every time. Eventually,
this will become second nature. And all you want to do is just write the code and get your results. But
let's run through these steps. Step one, you have a burning question. Is there a difference between
an admission white cell count between patients with and without acute appendicitis on histological
evaluation? Because eventually you want to say, can I use white cell count as a discriminator to make a
decision? That would be one of the first steps in doing that. So that's your burning question. Step
two, do a literature review. This question might be out there, you might learn from what has been
published before, how people went about it, how to construct your research. Very important to go search
for previously published articles pertaining to this question you have. Get ethical approval if required.
You might deal with things that you don't need it for. Step, decide on the variables to be collected to
answer your question. Now, I need to know, do they have appendicitis or not? The only patients that I
really have, because this is data, this is an event that's already happened. So I'm going to have to get this
from the patient files. And I don't know who didn't have the only discriminating thing I can really have
is to look at the operative specimen was sent away for analysis and it will say on the histology either
there was or was not. So I need to look at my histological results. And then I need to go to the lab
and for all those patients, draw the first white cell count, the white cell count that was done on the
admission. So those would be the variables I collect, so that I can form my two groups and the actual numerical
values I want to compare between the two groups. I've got to decide to answer my question, what data do I want to
collect? Now I'm going to set my hypothesis. So this in step six must happen before any data collection. Now
unfortunately, we already have it there, but I've got to do something for these lectures. So imagine we haven't
collected any data, okay? Our null hypothesis is that there is no difference between the admission
white cell count in those with and without histological proven acute appendicitis. And our
alternate hypothesis or our test hypothesis is that there is a difference. You can make an argument that
we could go for a one-tail test here. We could say, look, the white cell count is going to be more in
those with. But that's a very dangerous thing to do because it might very well be that acute appendicitis
leads to overwhelming sepsis. The immune system can't keep up and those patients will actually have a
lower white cell count. How do you know? You know, you don't make wild guesses and estimates like that
in clinical research. Stay safe with a two-tailed test. We say there is going to be a difference. Hypothesis
stated. Done. By my hypothesis, I'm going to do a two-tailed t-test. Done. I cannot go back and
change that. That is set in stone. I'm going to decide on an alpha value. That's my risk of making a
type 1 error. Or, more practically, that is my cut-off for statistical significance. I'm going to choose an
alpha value of 0.05. So a p-value of less than 0.05 will be clinically significant. But that is actually
my risk of making a type 1 error that is falsely rejecting the null hypothesis.
This means we will have to construct a t-distribution. So that's what the computer is going to do, t-distribution.
Because remember, we don't know what the larger patient population parameter is, the standard deviation is
for white cell count. We don't know that. We only have our own data. So it's going to calculate the
two means. It's going to calculate the difference between the two means. And it's going to convert that
into a t-statistic, which will then be plotted somewhere on the x-axis on this beautifully normally
distributed bell curve. And it will work out the area under the curve for that and tell us where this
falls. It's going to be split on both sides, remember, because this is a two-tailed test. We collect our
data. Done. Now we have got to choose an appropriate statistical test. Now we are comparing two categorical
groups with each other, but the variable itself is ratio-type numerical. So I can use a t-test for that.
Am I going to use a parametric or non-parametric t-test? That would be question number one. And
how do we do that? Well, we need to know whether our samples, our white cell counts for the two
groups, do they come from a normally distributed population parameter? Q-Q plot to the rescue.
Remember, that comes from the stats sub-module, not from SNS. That's why I had to import from
sci-pi. I said from sci-pi import the stats sub-module. Now you've got to be careful when
something is a sub-module, when you import it like that, you actually have to reference the
whole thing. So stats dot, I want the prob plot, the Q-Q plot, probability plot inside of the
stats sub-module, so you have to do that. If I said from sci-pi, let me just write that
out to make it abundantly clear. If I said, and I'm just going to comment the line out, if
I said from sci-pi dot stats import prob plot, if I can only spell prob plot, then I could have
just said, I could have used prob plot directly, because prob plot is a method, whereas the
stats module is a sub-module. I can't use stats on its own, I have to use one of the things
inside of stats. Okay, so that's the difference. I said from sci-pi import stats, stats is a sub-module,
so if I want to use anything inside of, and this is something you have to get used to, inside of
stats, I have to still now say stats dot prob plot, because I initially just said from sci-pi
import stats. Open and close there, what does it take? It takes three arguments, remember,
the data I want, I want appendix neg, remember that was one of the new data frames I made,
just with the negative patients, I want the white cell column in there, drop NAs, I want that red line
to be a straight line, a normal distribution, and what plot? Well, please use matplot.
matplotlib to do this plot for me, remember, that just means it doesn't give you all sorts
of numerical values, it just draws the plot directly, but you don't need that semicolon really.
Let's run that, and look at that. That's an 0.97, that's very close to a normal distribution.
I'm going to make a judgement call and say that's good enough for me. I think that my sample
of appendix negative white cell counts came from a patient, a population parameter which was normally
distributed. So I think I can use the student's details. Let's just look at the other one.
The other group would be the appendix positive white cell counts. Let's do their probability plot.
And look at that, there were more of those, and we actually get a 0.989. So even a better
QQ plot there. So I think that white cell count comes from a normally distributed, that's a
normally distributed parameter in the population. I can use a parametric t-test. A parametric t-test.
But that's a judgement call. There really isn't any hard and fast cut-offs. Now I'm not done yet.
There are various kinds of t-tests, parametric t-tests. I now just have to say, I have to now
look at the difference in variance between the two groups. So I'm going to say appendix,
the white cell count column, just do for me var, that is variance, 26. And for the positive
group, that is 21. Because there are t-tests for equal variance, and the mathematics behind
it pulls the variance of the two groups, and there's the non-equal variance t-test, and
it doesn't pull the variance. It's very technical stuff. We needn't be concerned about that.
You've just got to, in the context of the type of values that we're dealing with, 21, 26,
it's really close to each other. I'm going to make a judgement call and say, it's equal
variance. These two variances are close enough to each other. I'm going to use the t-test
for assuming equal variances. It's actually assuming equal variances in the population, but
all we have is our sample. Okay, let's carry on. Lastly, one more thing. Are these groups
independent or not? So dependent groups would be if I have sets of identical twins, or if
I ran a trial with an intervention and I had the same patients, I do a test on them, I do
an intervention, and then that exact same patients I do that same test again. So it's that exact
same patient in each group. Those groups will be dependent. These groups are totally independent.
These two sets of patients with and without dependent sizes have nothing to do with each
other. So I need to know about equal variance, and I need to know about dependence. So this
is independent two groups. I'm going to use the test for equal variances. This is how I'm
going to construct it. It's called stats.ttest underscore ind, and that stands for independent.
Here it is, in all its glory. Now the stats dot, because it's part of stats, I've got to refer to
stats.ttest underscore ind gives you back two values. It returns two values. Therefore, I have to give it
two computer variables. This is a strange thing to do. It's the first time you're going to see it. I have to use
two computer variables separated by a comma. It's going to give me back the t-statistic and the p-value.
It gives me back two results. You can call it whatever you want. I call it t underscore
stat and p underscore val, whatever I want. Equals. There we go.
stats dot t-test ind. Okay, there's also one for dependent. t-test independent is what we do, and here are the arguments that you have to do.
You have to tell it the two groups. So these type of t-tests and t-tests are for two groups.
ANOVA is analysis of variance. That's for more than two groups. We only have two groups here.
You can put them in any order. There's my first group, the white cell count values. There's my second group. I'm using the safety net of dropping the NA for both of them.
But it's an appendix negative data frame, the white cell count column, appendix positive data frame, and the white cell count column.
And then I say equal underscore var. That's the other argument. Equals.
Let's just redo that. Equal underscore var equals true. Now that is the default, so I needn't have put it in.
If I decided 21, 26, or too far apart, I would have said equal underscore var equals false. It will do a different type of test.
And all I want, it's going to return two values for me, which I've called that as computer variable one. That's computer variable two.
And I'm just asking it to print to the screen p-value. Let's look. What do you think it's going to be?
Boom. 0.019. There is a, my alpha value is 0.05. So I'm going to say my report. The p-value is less than 0.05.
There's a statistically significant difference in admission white cell count between patients with and without, with and without appendicitis.
Just to show you the t-stat that had worked out as well, it was negative 3.16. That just depends on the order in which I put these two.
Beautiful. We've done our first t-test and we've gotten a result.
Okay. For fun, let's just do something else. Let's do two t-tests for unequal variances.
As I said, exactly the same. I'm just using two new computer variables so it's not to confuse it with those two.
So I've just given it two new names. Exactly the same here. All I've done is I said equal var equals false.
And as I say, this is just for fun. This is not so in this. It's also called this welch t-test or welch welch welch aspen test.
It's an unpool t-test for unequal variances. I just want to show you the difference.
That's a p-value of 0.0049 and that was 0.0019. So see there is a difference.
The mathematics behind it is slightly different. So you've got to make that judgment call.
All right. There's a difference between those two now. Surely they're both lower than 0.05.
But you can well imagine a situation where it's just going to just be over or just be under.
And that is where ethics come in. You've got to be ethical about your results.
Just to be even more, what I should say there is state your variance in your publication so people can decide,
people who read your research can decide was it right to use an equal or unequal variance t-test.
Don't hide that from your readers. That's unethical research.
Okay. Now imagine I decided that those two QQ plots were not showing me that it was not from them.
That's not so in this case. I'm only using this as an example.
The test that you would do there is called the Man-Whitney U-test.
The Man-Whitney U-test in Python is for independent groups.
And the Man-Whitney Wilcoxon rank sums test is for dependent groups.
So just remember, sometimes those two get confused in Python.
This one, Wilcoxon one, is for the dependent groups.
And the Man-Whitney U is for unpaired, independent groups.
It also gives you back two values.
So you have to say t-stat u and p-value, whatever you want to call the two.
The first one is going to be the t-statistic.
That is how it converts the difference in means that you get.
Remember that there is a mean white cell count for one group, where mean white cell count for the other group.
You subtract one from the other.
In which order you want, you're going to get either positive or negative results.
That's going to convert it to a spot on the x-axis of our normally distributed bell curve.
That's the t-stat.
P-value is the one we're interested in.
You can call those two whatever you want, but you have to put two, separated by a comma.
And it's stats dot Man-Whitney U.
Now the Man-Whitney U, all it takes is the two sets of values, separated by a comma.
So it was from this data frame, the white cell count, safety net, drop na.
From this data frame, the white cell count values, again safety net, drop that.
Now, by convention in Python, the Man-Whitney U test is going to give you back a one-sided t-test.
And you have to multiply it by two.
And this is where ethics comes in again.
You really have to be ethical about your research.
If you do this, do not now, post hoc, try and change your hypothesis.
We said two-tail, we can't change it now.
Now that gave us back the two-tail t-test.
But here we have to, we have to, we have to multiply our value by two.
Because it only gives us back, this test Man-Whitney U gives us a one-tail value back.
So let's multiply that by two and we get 0.014.
So it's slightly different from the ones we've had before.
So there you go, our first t-test.
Wonderful.
