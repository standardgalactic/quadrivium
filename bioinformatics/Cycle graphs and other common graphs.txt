There we go. It's late afternoon. I'm here in Abigail's office. I was going to go jog,
but if you watch the playlist on linear algebra, you know that I've taken a tumble in my last run,
and I'm just not there yet. So I thought, okay, let's just make this video in graph theory. What
I want to show you in this video is just some of the common graphs that you will come across
when you start studying graph theory. It might be some of the first graphs that you see in a
textbook, and we're going to go into Mathematica, and I'll show you how easy it is to do that. I
might show you one extra function that you haven't seen before just to make life a little bit more
interesting. Let's go to Mathematica, and let's go have a look. So here we are in Mathematica,
and let's just have a look at some of these graphs that you might come across commonly in your
textbooks or in class as you start learning about graph theory. The first one we're going to look
at is just the cycle graph. Let's do cycle, cycle, and then G. We see cycle graph there,
and let's have one with five vertices. Shift-Enter, Shift-Return. There we go, and you can see what
a cycle graph is all about, is that every vertex is connected to two other vertices, and they in turn
connected to the one that they've just been connected to, and the next one, such that you
can you can just follow along, you can walk along this graph, you can imagine, and just end up where
you were before. Now let's have a quick look at something. I want to show you the table function,
uppercase T-A, table, and the table function does a few things. It's going to create this list of
elements. I'm going to say n comma, and then I'm going to say n again, n goes from 1 to 10 in steps
of 1. Let's just see what that creates. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10. It's clear to see what this
table function does. You give it some expression, and this instance was this n, and then you iterate
over this variable in the expression n. I could have called it x and x, or i and i, it doesn't
matter, and you just give it this recipe. You go from 1, start at 1, end at 10, and go in steps of 1.
Let's try this again. You'll see in a moment why I want to show you this table function. Let's do n
squared. I'm going to hold down control or command and hit 6, and that gives me the superscript. So it's
n squared. I'm going to hit the right arrow key just so that I move down. And again, and then in
curly braces, let's do n going from 1 to 5. Let's do this in steps of 1. So n is going to go be 1,
then 2, then 3, then 4, then 5. And in each instance, it is going to be squared. So 1 squared is 1,
2 squared is 4, 3 squared is 9, 4 squared is 16, and 5 squared is 25. So let's just do this.
Let's have a table of cycle graphs, cycle graphs, and let's make it, it's going to be different.
Let's just say i, and I'm going to let i go from 1 to 5 in steps of 1. So it's going to have cycle
graph with 1 vertex, cycle graph with 2 vertices, cycle graph with 3 vertices. Let's see what happens.
Remember just to close the square brackets that we have there. And there we have,
there's a cycle graph according to the Wolfram language with 1 vertex and it just has a loop.
With 2 vertices, we'll see that there are 2 edges here, 3 just goes around this triangle, 4 and 5.
So it shows me 5 elements in this list. See that it's inside of curly braces. And it just shows me
these 5 different cycle graphs. And that's beautiful. So that's what a cycle graph is all about.
Let's do the next one and that's a null graph. A null graph is just a graph without any edges.
Without any edges. So let's make a graph, just a normal graph. Let's create some vertices,
1, 2 and 3. Just 1, 2 and 3. And then for the edge set, we have an empty set. That's just like
set notation with an empty set. Open, close curly braces with nothing in. And let's just do vertex
labels and we'll make that the name. And we close out square brackets and there we go. We see 1,
2 and 3, but there's no edges between them. That is a null graph. Null graph just means there are no
edges between our vertices. Let's do a complete graph. Let's have a look at what a complete graph is.
But then this time around, let's use table again. Always have to start with an uppercase table.
Let's do complete graph. Let's do complete. I'm going to down. There we go. Complete graph,
autocomplete. And let's do n this time. It's fine. And I'm going to say n goes to from 1 to
5 and steps of 1. Let's look at what all these complete graphs look like with 1 vertex, 2 vertices,
3 vertices, 4 vertices and 5 vertices. And there we go. There's 1 with 1. It's just the vertex. 2.
You see they're connected. And here you see 3. But you can see every vertex is connected to every other
vertex. With 4 it becomes more clear. There are 3. There are 3 edges to every vertex. That one has 3.
That one has 3. That one has 3. That one has 3. Look at this. 5 vertices and we see 10 edges there.
But every vertex with 4 edges. Every vertex is connected to every other vertex. None of them
are missing. And we actually have this little theorem. Let me just copy it from my other screen.
I'm just going to paste it there. And we see that the number of edges of a complete graph is the number
of vertices times 1 less than all the vertices divided by 2. Why is this so? Well, look at this one with
the 10. It starts with 5 vertices. Every 5 vertex can then connect to 4 others. So that's the 5 times the 4.
But an edge has 2 vertices. So we just have to divide by 2 in the end. And that gives me 10.
And I can show you that. I'm going to do edge count. Let's scroll down. There we go.
Edge count of a complete graph with 5 vertices. 5 vertices. Close my square bracket. Close my square
bracket. Again, every function with its arguments you have to close with a square bracket. And lo and
behold, it is 10. Just as advertised. 10. Shall we do one more? Let's do one more. I want to show
you the utility graph. Now, utility graph is something that's saved on the Wolfram servers.
It is something that will be downloaded. And because it's data, we have this function called
graph data. Graph data. And I'm just going to pass it a specific name. And because it's a string,
it goes inside of quotation marks. And I'm going to say utility graph. There it goes. It finds it.
Utility graph. I'm going to hold down shift, enter, shift, return. And it's going to download
this from the Wolfram servers. You say initializing graph data indices. You see it going there. It's
downloaded. It's installed. The first time you run this, it might take some time. So what is this utility?
Well, you can think of the utilities being something like water, electricity, and gas. And there you
have your water, your electricity, and gas. And here you have three houses. And each one of these houses
has to be connected to each of these three utilities. Hence, utility graph. You can see that's quite easy,
quite an easy concept there. And it's going to help us later, just to get to some other concepts
and graph. We might come back to this utility graph. But now at least you've seen a utility graph.
I want to take you back to the cycle graph. Let's do this cycle graph. And let's make the cycle graph
in four vertices, with four vertices. There you see. Now, can I change this into a complete graph? What we
see is missing is the edge between these two and these two vertices. Now, I can create the complement of
the cycle graph. And the complement will just take away the edges that are there and put the ones in
that are not there, such that all in all, we would have a complete graph. So let's have a look. Let's
have a look at that. I'm going to say graph complement. Here we go. Graph complement of the complete,
or let's make it the cycle graph, I should say. Cycle, cycle graph and with four vertices. Let's have a
look at that. And lo and behold, there you do see it. You still see those same four vertices. And now
it's just these two edges that were not there, should this have been a complete graph. And they are put in
and the ones that were there originally, they are simply, they are simply taken away. So there you've seen
a few of the common graphs, as I mentioned, that you would find in your textbooks as you start
learning about this graph theory. Start playing around with them. You've seen the table function
now. Try to do something with the table function, quite a bit of fun. But then use the table function
as well to create some of these graphs and have them have one, two, three, four, five, etc. vertices.
Have some fun.
