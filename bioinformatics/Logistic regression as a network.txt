My name is Jean Klopper and I'm a surgeon really on a mission to introduce healthcare professionals
and everyone interested really in solving healthcare problems to the world of deep
neural networks. Now if this is the first video that you see please go back and start the series
from the beginning else this doesn't really make sense there's a playlist on youtube one video
follows the rest so in case this is the first one that you see please start at the beginning it will
really mean a lot more to you of course if you've been following along let's continue our very
exciting journey as we move towards well this is actually our last step i would i would think
before we really get into deep neural networks now up till now we've really only looked at
a target variable that is of a numerical a continuous numerical type so we're just trying
to predict a single value in many cases though we want to predict something that is a category
variable something such as the patient has a disease doesn't have a disease in the financial
world we might say this is a fraudulent transaction or it's not a fraudulent transaction we might have
a CT scan with nodules in in the chest and it might you know we might have to classify that CT scan as
that nodule on the CT scan is malignant or benign these are categorical outcomes the examples that i've
mentioned have a sample space of only two so those are binary or dichotomous problems but we can really
model something with a thousand elements in the sample space of our target value now this just
introduces a slight complexity to the problem but believe me it is easily solved and you actually
already know how to solve it so again this is a document that's available on our pubs you can download it
i'll put it on github as well so you can look at these our files again if you just stumble across
this don't worry about the code as we start developing these as we as we move into real
proper deep neural networks you'll pick up how to code in this environment called the r program
language very very quickly i use the r programming language specifically because it is so easy to teach
which is what i do face to face as well statistical learning machine learning biostatistics just using
r and r studio and although the main language for deep neural networks is python once you understand
things in r it's very easy to pick up python and continue your work there so no problem at all
don't worry about the coding though you will definitely pick it up as we go so this is the document
on our pubs you can read that if you don't want to listen to this video and watch this video you can
just read the document so what we have here at the top you see a categorical target variable and we can
express this as zero one zero one and two depending on how many elements there are now in in the sample
space of our target variable so if we have a binary outcome like yes or no we're just going to use zero
and one and depending how you set up the problem you can decide which is going to be zero and which is going
to be one now an easy way to solve this problem is just what we call the sigmoid function that you
can see here there we have it it says take any input plug it in there so if i plug the value negative
three in there it'll be one over one plus e which is euler's number to the power minus negative three and
that will give you a value let me show you some code of what the sigmoid function actually looks like
there we go no matter what input we give to the sigmoid function you see as i hover over here
you see negative three point seven six negative three point six all the way up it doesn't matter
where i go look at the values they are always going to be between zero and one they are constrained
between zero and one and following what we are trying to achieve still trying to get these values
for our parameters beta sub zero beta sub one that that really hasn't changed we still after that
so this little z we can still see that as a problem that we set up here i've got a problem
with four feature variables x1 to x4 and i still have my beta zero plus beta one beta two beta three
beta four and i can just call that my z and plug that into the z here so in the end we have equation
three here which says sigmoid of z is one over one plus e to the power negative that very familiar thing
that we've watched in all the videos up till now that should be very familiar with you very familiar
for you now here's the network that we also saw in a previous video i have values plugged in here for
my feature variables x1 x2 x3 x4 i plug those values in i multiply them by these parameters which we call
weights beta one beta two beta three beta four so that i get values in my hidden layer here this is a
hidden layer here this is a hidden layer of nodes or neurons and they are just a multiplication of
the weight and my input variable say for instance the values in row one of a spreadsheet and i add all
of that together and i also add the bias node and now i get z and there is z just plugged in there and i
plug it into the sigma function right there and now it gives me y hat the predicted value which remember
if my output my target variable only has zero and ones in it zero and one zero one zero one zero one
for all the rows i'm going to get a value here for my predicted which is going to be constrained
between zero and one sure it's going to have some decimal values but it is constrained between zero and
one exactly where i want it because now i have a target variable that is really within range of this
zero and one of my ground truth target value so let's look at an example i'm going to import this
logistic regression csv spreadsheet file and here we have it nicely expressed on the screen we see x sub
one x sub two x sub three and x sub four those are my four feature variables and you see the target
variables so for the first patient here we have 15.5 110 2.5 52.6 you can imagine these are variables for
some blood results or you know whatever the case might be and the outcome the target variable is
a one and there's another one a one a one a one there's zero zero and you can go through click on
all of these run through this whole data set of 150 entries now fortunately for us in r there is the glm
function generalized linear models i can plug in all my values y being predicted by that dot means it's just
the shorthand for x sub one x sub two x sub three and x sub four it's uses a logistic regression model
here with a binary outcome and if we look down here at the estimate column we see there are our beta values
there's beta sub zero negative 13.8 beta sub one beta sub two beta sub three beta sub four so if i plug in
this first patient's values 15.5 110 2.5 if i plug that in to my function one over one plus e to the power
that i get a solution of 0.619 now we can create a simple cutoff remember that's my y hat now my predicted
value for the target variable now the this patient was a 1.0 and what we can very simply do is say let's
have a cutoff here let's go back to the graph let's have a cutoff of right there and we say that
everything above so you see it's 0.5 there on the y-axis anything above that 0.5 we'll see as a one as
it is going to one anyway so 0.5 and up we'll see as a one and less than 0.5 we'll see as a zero
and we can code for that and we'll do that in the when we create the neural networks so 0.619
that's above 0.05 so the prediction here will be for one lo and behold that first patient did have
a target value of one so the error made in this first step when we set up our loss function and
our cost function as we did before so that we can do a back propagation to update these beta values
in this instance it's going to be spot on now this as we created it here is not a
neural network we've just used plain simple old logistic regression but as you can see
it is absolutely correct it predicted a one and it really is a one so there we have it i think that
was the last piece of the puzzle that we required just before we move on to to proper neural networks
uh once again i plead with you to tell people about this video series about these publications
on rpub i'll put some stuff out on linkedin as well so follow me on twitter connect with me on
on linkedin look at these rpubs these files are available on github subscribe on youtube if you
really are interested in developing your knowledge around deep neural networks so that you can learn to
solve problems in your domain let everyone know about these videos let's let's start a community
where at least the from one point of view the medical professionals get involved and we don't
just leave these to these problems to computer scientists we have the domain knowledge and it is
really our duty to get involved with this just as an aside just the excuse of course all the noise
i've spoken to it about it before there's a neuroscience center being built right outside my window here
and in my office and it's early in the morning even before even before working hours i come in early
but the noise or is already going as they hammer away nothing i can do about that i hope you enjoyed
this video and in the next one i hope that we get started on proper deep neural networks
because throughout the video of the operation next week
we're gonna have to have one round of
so you don't have to check in the right button
this gentleman right here
this gentleman right here
yeah
yeah
yeah
