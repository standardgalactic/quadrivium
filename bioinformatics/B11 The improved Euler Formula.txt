So now that we know how to do an easy thing like Euler's formula, let's go to improved Euler's,
remember, which is a predictor-corrected method. I know what the slope is at a certain point.
I predict what the slope would have been through my Euler's method. I take both of those, add them
together and divide by two, so I now have an average slope between what I was and what I was
going to be and then move to a new point. Now to write code for that, if you haven't
coded before, can be a bit daunting. You're going to easily get confused. Let's just remind ourselves,
we're going to step through. Our next x-value is going to be our old x-value plus h and our new y-value
is going to be our old y-value plus the step size times the average of the slope at that point
and the predicted slope as if you have used Euler's equation. And Euler's equation for the future
is going to be x sub n plus 1 plus this usually written as y-star n sub 1 where that y-star
is just the normal next y you would have gotten through the normal Euler's equation. So let's
use Euler's formula. Let's use y' equals 2xy as an example. So you're going to have a few
iterative steps, n 0, n 1, n 2, n 3. As n gets bigger, you can have x-value and a y-value.
Do this on paper. See the steps that you go through to get here. And every step you take,
write it down on a piece of paper because each step you take is going to be a line in your code.
So let's say for instance this was 1, 1. Remember in this coding I don't use f of, I don't use
the f of x sub n, y sub n, I just use and I don't use a sub n, I just use n. So now we're
going to have this value m, which is 2 times xy, which is this 2 times 1 times 1, which
is 2. And so my first step would have been x equals 1, my second step would be y equals
1, my third step would have been m equals 2 times x times y. Now what do I have to do
for the next one? The next one is here, my next n sub 1, so now I'm at n sub 1, that's the old one,
plus my step size. We said our step size here was 0.1, that makes that 1.1. The next step,
I need to do this, but I can't do this unless I have this and that. This one is easy because it is the previous n.
After that interruption, we're still here. We have to figure out what to put in here and I have got this new
variable here, y sub star, y underscore star is what I'm going to call it in the coding, which is this. So if I just
plug this into there, let's just do that. If we have, we're just going to carry on to that. So here we're
going to have this, y sub n plus h times, now this is the previous, the previous n. So that would just be
n there. So that is what I have to plug in there. So I have to figure out what this, I have to figure out what
this is, I call it y star. So what is it? What is that value? So I've got to take the previous y sub n, which
is that one. And I've got to add to that h time, that's 0.1 times that, which is 0.2 then, plus 0.2. So that gives me 1.2. So here I've got to plug in 1.1 and 1.2. So that's the steps I'm going through. Write it down in words, every step you go through.
This now, I have to get, and I'll call that m star.
m sub star. And I have to calculate m sub star by saying 2 times 1.1 times 1.2. Give me m star. Now I can add this and this divided by 2,
multiplied by 2, multiplied by h, add it to the previous y, which is that one, and that will give me the next y
eventually. But in order to get to that, I had to do two things. I had to calculate y star by doing this. And I know it comes
from the previous y, which is that one, and h times the previous m, which is there. And then I had to calculate
this new m star, which is 2 times 1.1 times 1.2. Drop that down. And then calculate this. I'm writing it all down as
lines. Everything I do, I'm writing down in words as lines, which now gives me a new y, which I put in there. And
lastly, I have to do a new m, which is now going to be 2 times this, times this new one, and I'm going to
jot it down there. And now this process is to loop again. So I've got to start all over again for this 2 here. This
one's easy. This is going to be 1.2, and I have to, if you've written it down, each as a line, you'll go
through that exact same lines again. And those lines, of course, are going to be, first of all, well, we've
gotten that. We have to get this y star. We get this y star by saying the previous y plus h times the previous
y, which is then you'll say the steps stay exactly the same. And that's why I get this m, which is m, which is now
there. I get that. So I have y star. Now I need m star, which is now going to be this. Two times that one, and the
m star one. And that gives me that. And now I have to get the new y sub m, which I'm going to put there by taking the
average of those two times h plus the previous y, which is then you'll say the steps stay exactly the
same. And that's why I can use a computer program, because I can just loop that until my x value reaches
a certain number. So that'll give me a certain amount of iterations. Let's have a look at the code for that.
So here we are again in Python. I'm going to double click there, file, and I've already done this. Let's
have a look at the code. So my constants I'm dealing with, my initial value, I'm setting the variable x equal
to one. Remembering to put the dot so that I don't get integer results. y is equal to one. This will be my
initial values. x sub zero and y sub zero. Making my step size. Well, let's start off by making that step
size 0.1. My equation is that the f of x and y, x sub n and y sub n equals two times x sub n times y sub n.
And I'm just going to print that x and y. Now, just to get the ball rolling with my initial values. Now, while x is
less than 1.5, so we're going to keep on, we're going to add the step size to x. Right there, we're going to add
the step size to x. And it's going to keep on going through this loop until we reach this, until we go
into the loop with x still being less than 1.5. So we have that. Remember the next step. As I said, I have to
now develop y sub y star and I've written it as y underscore star underscore certainly allowed in a
variable name. And that equals y plus h times the previous m. Now I need to develop m star, which is
this 2 times x, which is now, remember, x sub n plus 1, I've already added the step size there, times y star, this
predicted future y value. Now that I've gotten those two, I can just simply say y, my new y is my old y, which
the first time we go through this loop would have still been that one, times h time, and I'm adding m and m star, and I'm
dividing them by 2. Now I'm also doing the new m to complete my row there, which is now going to be 2 times the
new x and the new y. I print that x and y, and I loop through this again. Now x is still less than 1.5. So it being
1.1 at the moment, as we go into the loop, we go onto x being 1.2 now. I develop my y star, which would have been as
if I had done well as equation completely, develop my m star again, my new y, my new m, my new differential equation,
and I print x and y again. Let's save that, file save, and we're going to hit f5 or function f5, and there we go.
Look at that. So we have for x and y, we have 1 and 1, 1.1, 1.232, and off we go until 3.45. So there I have a beautiful
little program. Now this can be done in many more ways. I can make what is called a class and have a method in that
class and just call the method, all sorts of things, ways to do this. This is certainly not the only way.
Sit with the code and sit with the examples in your textbook and see if you can come up with your own code.
