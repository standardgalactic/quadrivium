In this video, I want to talk to you about the creation of scatter plots using plotly
inside of R. So I'm going to use RStudio for this. You can see that I've already opened
a new R markdown file. And to save some time so you don't have to go through the pain of
watching me type, I've already typed in everything so we can just run. We can see the yaml up
the top here. The title is going to be scatter plots using plotly for R created by me and
it's going to be exported as an HTML document in the end. Our first code chunk here, which
is just the standard setup, except for a few things. I've already saved this file to a folder
on my computer. And I'm just going to set the working directory to the get working directory
here. So it's going to find out what directory this folder is in and it's going to set that
as the working directory. We're going to import two libraries, plotly and dplyr. So we can
just run that code cell and that should execute no problem. Then I'm also going to introduce
a bit of CSS, a cascading style sheet. So I want my headers, h1, h2 and h3 to be colored
in a certain way. So I'm going to say style, that's those open and close HTML containers there,
style and close style. And in the opening one, I'm going to say type equals text forward slash
CSS, cascading style sheets. And all I'm going to do is just use this hexadecimal values to
just refer to the color of each of the headings. That's all we're going to do. And I also want
a nice little logo, my research group's logo to appear. So it's going to start with a bang
there or exclamation mark and open and close square brackets because I don't want any text
there. I just want the image. And that is the logo image there. And it lives, this PNG file
lives in the same directory or folder as this R markdown file. And that's why I could say get
the working directory of this file and then set the working directory. So I don't have to
refer to the address on my computer's hard drive where this file is located. I can just use it as
such. Two hashtags. That means we're going to have a heading two and I'm going to call it
introduction. Just the introduction. You can read up about that. Heading two is going to be creating
simulated data. So what we're going to do here is to set the seed one, two, three, so that all these
random numbers, the random numbers that are going to be generated will be the same every time you run
them. And I'm going to create a couple of computer variables. I've got age here, WCC. So for instance,
for white cell count, CRP, C-reactive protein, SPP, systolic blood pressure, and group. So my age is
going to be from a random uniform distribution. I want 200, minimum age 15, maximum age 85.
For white cell count, I actually want to round this to a single digit. So I'm using round.
And then the second argument is digit. The first argument is what I want. I want 200 values
from a normal distribution with a mean of 15 and a standard deviation of 4. We're going to make the
CRP run off of the white cell count. So there's a bit of a correlation there. So I'm just saying
take white cell count and add to that. Remember, there'll be 200 values in that white cell count
variable. And I'm going to add 200 values to that. It's from uniform, minus two, max 10. And I divide
that by 10. So I could have just put here 0.2 and 1. That will be exactly the same. So I'm adding these
that there's some correlation. SPP is to surround, random uniform, no digits between 70 and 180.
And then I'm just going to sample with replacement from these two string vectors here, or the string
vector here with the two elements, treatment group and control group. I want 200 of those replacements
true. And then I'm going to create a data frame with these columns, age, white cell count, CRP,
SPP, and group. And they're going to hold the values that are inside of these computer variables.
Let's run that and look at the first six rows. Very beautiful there. Age should have rounded that,
shouldn't I? White cell count, CRP, SPP, and group. So let's create a scatter plot. In the introduction
there, what I was going to say is a scatter plot takes an x-axis and a y-axis. Those are two variables.
And for each individual, each row, it'll take two values, create a little pair, and we plot that on an
x-y-axis. It's as simple as that. So I'm going to create my first plot. I'm going to call it P1.
You can call it what you want within the limits of what you can name computer variables.
Plot underscore ly. That's from Plotly. I'm going to use the format of passing a data frame to Plotly.
So I'm going to say data equals DF. And then I've got to use these little tildes to refer to each of
the columns. So my x is going to be the white cell count. The y is going to be CRP. The type I want is
scatter. The mode I want is markers. So with a scatter plot you can actually do lines as well. So it can
go from point to point just the lines. You can actually leave the markers away and just have
lines. So mode you can say markers. Markers plus lines you could write. Only lines. But here we just
want markers. We just want the dots. And something specific about the marker. I want to pass it a list,
but only one argument in the list. And that size being 12. So it's just a fair size for these dots
in my scatter plot to be. And then we're going to pipe this. So percent greater than percent.
Because I want to add a layout. My layout is going to have three arguments. Title, x-axis,
x-axis and y-axis. x-axis is going to be a correlation between white cell count and CRP.
And on my x-axis I want to pass more than one argument. So I'm going to hide that inside of a list.
So the title equals white cell count and 0 line equals false. That is the actual black line that
is drawn on the x-axis and y-axis. I just want them not to be shown. So then I'm just going to call
P1. Let's have a look at that. And there we go. I've created the C-reactive protein to be correlated
to white cell count. We did that. We created 200 more values up here. And we just added them
element-wise so that there's this bit of correlation. And look at that. I have a lovely plot. As per
usual, I can zoom in, pan around, go home. I can save it as a PNG right here. I can open it up in
Plotly. When I hover over each of these, this one for instance would have a 20.8 white cell count and a
CRP of 2.8. When I hover over these, I can actually see. So that is very good. Now we do have a group
variable. So we might as well group by that. So let's have a look at that. Everything is the same.
I'm going to call a P2 so that I have different plots saved separately. The data is still the data
frame, still white cell count and CRP. But now I want to color by group. That has nothing to do with
the physical color on the screen. It just says, take whatever you find inside the group. See what
the sample, the sample is all about, the sample space. So the unique values. And we know if we go
back up, we said treatment group and we said control group. So it's going to find two and it's going to
color them differently. I'm actually going to specify the colors and I'm passing it this string vector.
So I'm going to say deep sky blue, which is one of the recognized colors and orange.
The type is again scatter. The mode is markers. And the marker has this list size of 12.
The layout after creating this pipeline is exactly the same. And let's have a look at what
R did for us here with Plotly. A beautiful graph with a deep sky blue and orange. And now we can see
control group one and control group two. And as per usual, I can just click on one of them to take
them away. Click on the other one. Now they're both away. I only want to look at the treatment group.
Take that away. I only want to look at the control group. I want to look at both of them. Is that not
the most fantastic thing you've ever seen? So let's add a third variable as a color scale. So we know
that we had, we said color equals group here, Plotly and R, clever enough to understand that that's a
categorical variable. But now we're passing it a numerical variable, age. So it knows to create a color
scale. So that's the only difference we've introduced there. And let's have a look at this.
A third variable. Now the dots are colored by the age, the younger patients being dark blue. And the
older they get, the lighter colored gets. This might be very, very useful. We can even bring in a fourth
one or just stick with three and not use this color, but just use the size of the actual dots.
So now we actually have four variables that we're going to add. Now, is that useful? Should
you really do it? Is it easy just to look at it and figure out what's going on? Probably not. This
is probably overdoing it, but I want to show you the power of using Plotly inside of R. So everything
exactly the same. P4 this time. Data is data frame. X is white cell count. Y is CRP. The color
is age. Now the size of the dots I'm going to play around with. So I'm going to take the
SPP, the systolic blood pressure, and I'm going to divide each element by 10. And I'm going to
round it to zero digits. So you've got to know that around about 10, this is 12. So you have to
know in your mind what it's going to look like. So this is around about 10. Now some of the systolic
blood pressures are quite high to the 180. So you don't want those huge dots. And that's why
I divided by 10. It sort of makes sense in the scale of 10 being a fair size. Between 10
and 20 really is what you want for the size of the markers. And I'm going to round that
after I've divided by 10. I just want to round to zero digits. Everything else being exactly
the same. Let's have a look. And there you go. A beautiful plot. So now we have four variables
in this one plot for every patient. So hover over there. I see this patient at a white cell
count of 23.8 and a CRP of 3.2. I can sort of see on the color scale how old they were.
And then by the size of this dot, I kind of know their blood pressure was on the highest
side because it's one of the larger dots. So quite a bit of information hidden there.
And you can well imagine that if you have a real data set not simulated as here, there might
be a lot of information in there. You might learn something from this plot, but it's probably
there we're doing it a little bit. There you go. Scatter plots using Plotly for R.
more.
