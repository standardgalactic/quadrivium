so let's find out a bit more about types now there is a keyword called type of type of and
let's do that let's see what the type of three is the line of code executes the cell that executes
and we say we see it as a 64-bit integer a 64-bit integer now let's do type of 3.0
that'll indicate something else that is a floating point a 64-bit floating point let's carry on let's
look at something else what is the type of pi we had here in our example and we see that's a math
construct pi a constructor with one method so that's a bit odd but we certainly will get into
that the same is going to go for something like a fraction here let's do that type of type of
three over four and remember we hold down the shift key and hit to return on a mac or hold down
the shift key and hit the enter key on windows and linux and we see it says rational there of type
integer 64 also constructed with one method let's carry on what about values such as this type of
now we are going to get to strings anytime you write some text that has got to go into quotation
marks and it's got to be double quotation marks in julia julia makes use of double quotation marks
so if we just typed in the word julia there and we see that as an ascii string a constructor with two
methods so you can play around with this type in all sorts of things you want all sorts of values
and julia will tell you what type that is now before we sign off i want to tell you about super types
and subtypes i mentioned that this is a hierarchical system and we can find out what a type's parent is
and what its children are so let's look at float 64 what is the super type what is the super type of
float 60 of a float 64 and for that we can write super
and we put float remember when we said 3.0 it said float 64 float 64 and we execute that and we see
its parent called its super type is floating point so that means floating point must have
more than one child one than more than one child so float 64 will just be one of the children so let's
look what the parent is of our floating point then and this is how you can play around so that you can
learn more about the the structure that's going on here so let's say floating point and we execute that
and we see well that's part of the real numbers let's see what the let's see what the parent of real is
and we see that the parent of real is number let's see what the parent of number is number
and we see the parent of number is any now any is as high as it gets any is like the
old great great great great great grandfather of all of the types in in in julia so from any it goes
all the way down so if you don't declare the type of objects that a variable will hold it's going to
default to any and then as you execute the code julia will figure out what type of object this is and
it will it will it will put it into a bucket that holds that kind of object and that bucket is actually
just a space in memory now just as we had the parents there we can also very quickly look at
all the children so i can look at what what subtypes we have here so let's type in subtypes
subtypes and let's put in any now of course any is going to have quite a few and it it won't be able
to list all of them here but you can see you can see this these little dot dot dot there so it means
it's just showing us this the start and the end of this whole long list of children that any has
but let's look at number specifically because number we saw that any was the parent of number
so let's look at the children of number itself so subtypes of number let's see what kind of children
it has we see it is it only has four complex dual four dual and real let's look at the real well let's
look at complex first of all so subtypes and let's look at complex and we see well that just stands all
on its own so complex the uh stands on uh stands on uh on its own there as far as the bottom kind of
of this hierarchical tree is concerned let's look at real subtypes of real let's have a look at that
and we see we get fixed point floating point integers and we see these others let's go down floating
point so let's say subtype subtype of floating point floating point see what i did there i typed
in f l o a and i hit the tab key and it shows me what it can do to finish that word or for me code
completion and i just used my up and down arrow keys to the bottom one that selected i hit tab
i hit enter or return and that finishes the line off for me and i see we get big floats float 16s float
60 32s and float 64 and let's look at integer then just as an example as well let's see the subtypes of
integer integer and we see we get big integer booleum char that is says that means character
a single character a b c signed and unsigned so you can play around with this hierarchical tree
and you can figure out quite a few things how these types are put together
