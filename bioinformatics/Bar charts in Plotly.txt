In this first video I want to talk to you about bar charts. I'm here in my Jupyter notebook inside
of Microsoft Edge, my web browser. I have navigated to the folder that contains the files that I want
to work with and in my case it's in my OneDrive file. I've created a folder called YouTube and
inside of that data visualization with PlotKey for Python. I have a style sheet, a cascading style
sheet that will be uploaded to GitHub so that you can use that as well. I have a Python cheat sheet,
a PDF which I'll also download. You can get that from the PlotKey website. There's a style template
which I just always save just to open up and it's got the bare bones of which I want to work with.
But here's the file we're looking for, the simple bar chart. Let's open that up.
And there you go. Everything is ready. You'll see the first cell that I have here is just the
import of the cascading style sheet. It's ipython.core.display and from that I import HTML.
I reference the file, this cascading style sheet file and that lives in the same folder as this
notebook. And I just use the HTML function there, open the CSS file in read mode and we read it.
And if I execute that, you'd see that I have this new style. I have my H1 color of the text here being
blue, the H2 being this nice orange, etc. Just styles the notebook for me. So let's have a look at the
simple bar chart. Now, first of all, I want to set up my PlotKey library. And what we're going to use
here is called notebook mode. So I don't want to have these files uploaded to the PlotKey website
to live in the cloud. I just want to use them locally. So I'm going to use the notebook mode.
So from PlotKey.offline, I'm going to import iPlot and init notebook mode, as you can see here.
And I'm just going to call this function init notebook mode. So if we run this,
that'll just import this iPlot and initializing this notebook mode and initialize this notebook
mode. So what do we actually want to import from PlotKey? Well, we're going to start off with these
high level charts. So bar charts, charts, scatter charts, etc. These are high level and I can just
use them as is. So I can say import plotly dot graph objects. So graph underscore objs as go as go.
Let's do that. So let's start off with a very bare bones chart. The first thing we want to set up is
just what is called the trace. We call it trace here as just a computer variable. But that just creates
on top of the figure that we are creating this blank figure. We're going to put on these elements
and it's just the norm or to call them trace. So go. Remember, that's my graph objects dot bar.
So immediately the arguments here are specifically for a bar chart. That's why we call this high level
chart. I don't have to design every single little element. Most of it's already designed inside of this
bar object and I just have to pass some arguments to it. And I'm going to pass x arguments for the x
axis and y arguments for the y axis. So what is a bar chart for? A bar chart is for categorical variables.
So anything that is not necessarily a number, although numbers can also be categorical variables, but
they are not numerical and as such as the difference between them are not set and standard. So I could
call January, February, March one, two and three for the first, second and third months of the year.
But that does not make them numerical variables. They are still in that instance categorical variables.
So bar charts are for categorical variables. So my x axis here, I'm going to have the categories
January, February and March. And on my y axis, I'm going to have numerical values.
So how many things, whatever the situation might be in my instance here, I'm going to use use,
you'll see later on, I'm going to call them sales. So in January, there were 10 unit sales in February
11 and in March 14. So those are numerical values on the y axis categorical variables on the x axis.
Now I'm going to introduce a second computer variable, I'm going to call it data, and I'm going
to pass into that a list. So it goes inside of square brackets, I'm going to pass a list of all the
traces. These are these elements that go on top of my blank figure. And in this case, I only have
one trace, but I've got to put that inside of these square brackets. I'm referencing trace here as a
list element, an element inside of this list. Third computer variable that I use here is this fig. Now
these are just standard. They're used in plotly all the time. So might as well stick with those. And I'm going
to call another graph object called a figure. That's a blank canvas, a blank figure. And figure
with a capital F, as you can see there, it takes a couple of arguments. In this instance, we're only
going to use one argument. And that's the data argument, as you can see here. And we're going to
set that equal to data, which is this data, which contains a list of trace. And the trace is a bar.
So it just builds one thing on top of the other. So inside of this data that I'm referencing,
there's a list. And the first element in the list is trace. And in trace is this element called a bar
chart. Finally, I'm going to call iPlot, remember, which we imported up here. iPlot,
that's for plotting directly in the notebook, not using online mode, not going to the cloud. And I'm
going to plot this figure, FIG, fig that I've created. Let's hold down shift and hit enter or return.
And there you go, your first beautiful, your first very beautiful plot chart.
So again, we can see the x axis here, January, February, March. And we can see the y axis,
the values that we put in 10, 11 and 14. Now I'm going to use my mouse on the left hand side.
Look what happens when I hover over the text, over this element, the elements on this blank figure.
So the go dot figure was this blank background. And I put these elements on top of it,
which is on a high level was a bar chart. I hover over it. And you see that January at the bottom,
it gets highlighted and the number 10 at the top gets highlighted. That's very nice. I really like
that because if I give a presentation and I don't use PowerPoint for presentations, I'm not a PowerPoint
user fan. Well, I mean, you've got to use it sometime, but I try to stick with my Jupyter notebooks.
And it's very nice to have this interactive plots as you do your presentations. And look what happened
at the top here as well. I get quite a few little buttons here to press. And that I really find very
useful because I can download this plot as a PNG file directly on my hard drive. And I can put that
inside of a hard copy if I were writing a report and it's got to go inside of a Word document, etc.
I can just do that. I can save this for editing in Chart Studio. That's online in your Plotly online
account. You can zoom, you can pan, you can select a box and we're going to see all of these because
they become very useful. I can zoom in, I can zoom out and out even further and out even further. I can
just go back home and that just resets everything for me. I can show the closest data on hover. So if I do
this, you're only going to see January being 10, February 11, March 14. And if I click that, you see
the highlight happens at the bottom on the x-axis instead of on top at the at the top there. And
then I can just open Plotly the website itself. So very nice, especially this download as PNG file.
So that is fantastic. So let's add a little title because you can see at the top my chart has no
title. So I'm going to introduce a new variable called layout and this layout is going to be a
Python dictionary. So it goes inside of curly braces and it has the key value pair. So the key
colon the value. The key is title and these go inside of quotation marks. So the title that's the key
and the value for the dictionary for this key is sales for first quarter. Now I'm going to redo my
fig from up here. It's still going to have the trace. It's still going to have the data. All I'm
changing is this fig. So go dot figure, my data still is the data from our first one, but the layout
is now this dictionary called layout. So this data and layout, these are the argument names and the
argument values. Well, we gave the computer variables the exactly the same name. Don't worry, there won't
be any confusion for Python. It'll understand plotly this plotly figure will understand what's going
on. So data just refers to the data that I created with a trace list and layout this layout refers to
this layout. So let's plot this shift enter shift return. And now at the top, I have sales for first
quarter. So a beautiful title now on the top of my figure. What about some axis labels? Now, with these
categories that we put in January, February, March, it's easy to see that these are months, but I might
want to specify that. And more importantly, I want to specify what's on this y axis. Because what is one
two, three, four, you know, you need to you need to know what these are. So I'm going to just change my layout
computer variable. So going to be a Python dictionary, title is still going to be first quarter elements.
Now the x axis, that's the key, it holds a value, but the value is another dictionary. And that dictionary
is again, a key and value pair. So the title is going to be months. And the same for y axis, the key
is y axis, the value is another dictionary. And that dictionary contains a key value pair, the key being
title and the value being units. Now I'm going to do something different. Remember, up here,
we just said data equals data and layout equals layout. But we're going to do something a bit
different here. So instead of creating a blank figure, I'm just going to pass everything as a
Python dictionary. So here we have I plot. And inside of that, there's this dictionary. And the
dictionary is just a key key value pair comma another key value pair. So data is just data,
still the data from upstairs. And the layout is just this new layout. So let's shift and enter shift
and return. And now we can see that we have months here as our x axis title and units as our y axis
title. So that's how many units were sold in January, February and March. So see the difference here
between the two. So I did not invoke the figure, the go dot figure object here, I just passed everything
to I plot as a dictionary. And sometimes it gets confusing, because there's many ways in plotly to
do something, you'll see more ways as we carry on. So so when it comes to the layout, and such, I try
to stick with these just to stick with the Python dictionaries, when you stick with the dictionaries,
it becomes slightly less confusing. And you can, you can find something that's just, you know,
stuck in your mind, and it works for you and just carry on with that. So I like just use for layout
and then plotting just the this dictionary way of doing things, although you don't have to stick with
it. As we could see here, here, we created this blank figure, and we pass these arguments to it. But
I can also just use it as pass to I plot just a dictionary. And, and as I say, there are many things
I can do with this x axis, this x axis being a key, and the value pair, there are many more things than
just the title. And we'll see some of them just in this in this tutorial. So it just it lessens the
confusion, confusion for me, but look at the website, the plotly website, and you might find other ways.
And we'll look at some of these in future videos. But still, I stick with this, but look, look what
what works for you. So let's just rotate these labels at the bottom, you know, January, February,
March, quite, quite small here. So they fit in with this big chart that we have here. But sometimes
you have long categorical variable names here, data point values here. And, and we've all seen plots
where these names actually, you know, start printing on top of each other. And the easiest way to get
rid of that is of obviously to shorten the data point values, these the your sample space values,
but sometimes it's not possible. And you just want to rotate them. And look at this. And that's the
reason why I like these dictionaries, because look at this, I have layout again, which is a dictionary
key value pair, here's another key value pair. But now I have two elements here in this value side of
the x axis being the key and the value being another dictionary. And inside of that dictionary,
there are two key value pairs title is months, and the tick angle is minus 20. I don't put that inside
of quotation marks because it's not this is just a value numerical value. So I'm going to say minus 20.
And that rotates at negative 20 degrees. And my y axis is still all the same. So let's run that.
And if we scroll down, we see we have this negative 20 degree from from the horizontal,
it's tilted down negative 20 degrees. So if you have these long words and sentences there, you know,
they can all fit in because of that angle. Now let's color these bars. The blue is fantastic. I
like this color, but you are free to do what you want. So I'm going to just change my trace here.
It's still a bar high level bar chart. I still have the x axis values being categorical January,
February, March. I still have my y values being numerical 10, 11, 14. But now I'm going to change
the marker. I'm going to introduce this marker. And again, it's a dictionary, but this is another way
just to do a dictionary. So I'm going to call this dict here. And the first thing I want to pass is color.
And the color is going to be a list. And this list refers to the elements as you pass them on the x
axis. So I have one, two, three elements, January, February, March. I've got to pass three colors here.
And I'm going to use this format. Note that I have these quotation marks. They can be single
or double. They're single in this instance. But it's RGBA. RGBA means I can, I can also pass a
fourth value here, which would be transparency. Zero being fully transparent, one being completely
opaque and anything in between. So it's red, green, and blue channel, and then opacity.
So RGBA and then parentheses 255. That's maximum on the red. Zero for blue, green and zero for blue,
and full, full opaqueness. So value of one there. The second one is 204, 204, 204. So that's going
to be this light gray. And it's going to be totally opaque. And again, totally opaque. So January is
going to be this red color. And March and April is going to be this light gray color. And the data is
still the trace. Now I can't just use the ones I used up before because data referred to to a
different trace. And I've changed the trace here. So I've just got to do data equals trace again as a
list element. And then the layout exactly the same. And I'm passing this dictionary to I plot.
Nothing new there. And now you can see these beautiful colors because I can now have January
being this red and the other colors being this light gray. Fantastic. Now why is this one red and these
ones gray? Well, I might want to indicate to my audience why this was done. So I can actually
change this hover text. Remember, if I hit this one, show closest data on hover, it's going to do both
the x-axis and y-axis in one little tooltip there, January or hover text at January 10. And if I do
that, it's just going to highlight them separately. Now hover text means I can individualize
every element that I hover over to have its own text. So we've had marker, we've seen that. So
introducing a new argument here to the bar to bar here text. And I've got to do it individually. So
the red was going to be below target, above target and above target. Everything else is the same.
Let's run that. And now if I hover, I see this extra text appear in this hover. So that was,
I put a 10 and that's below target and that one was above target and that one is above target.
So you can see you can build in this beautiful narrative here because you can put a lot of
information in this text if you really want to draw attention to what's happening here to inform your
audience. So that's fantastic. So let's move things up just with a grouped bar chart. And now I want to
have two sets of elements on here. And so I've changed my computer variable to trace zero and trace
one. And with a bar chart, be careful now because we want the same sort of space for both. I've got
January, February, March and January, February, March. And I've got my Y values 10, 11, 14 as before. And
the second Y is 12, 13, 17. But now I'm going to add a name because I need to tell Plotly that these two
things are separate. So I'm going to say name equals last year and this name equals this year.
So you can well imagine that I'm just going to take this year's data and compare it to last year's
data. That might be interesting. And now look how data has changed. I'm now passing two elements to
this list. Still got to be a list, still inside of square brackets. I've got trace zero and trace one.
The layout is going to be exactly the same, but I'm introducing this new key value pair of bar mode
and the bar the bar mode that I want you to use here is group. So what it's going to do,
it's going to group January and January, February and February, March and March. Hence, they've got
to be the same. And then I'm still going to use this dictionary to pass to I plot. And now they've
been grouped. And we see last year in blue and this year in orange, that will be the default colors.
And you see that they are indeed grouped. So I've got this year and last year, this year and last year,
this year and last year, a beautiful way just to do that. Now we need to group them like this. We can
stack them as well. And yeah, I have exactly the same thing. But instead of bar mode being group,
I've made bar mode being stacked as the key value pair here. And if we run that, we see that now we
now have this stacked version of it. But if I hover, you know, you can still see that this year is 12.
And last year was 10. You don't have to go to the x axis in your mind and your audience have to
mentally try and see where is that top and subtract from the 10 to see that it actually gets to 12.
No, no. Plotly makes it brilliantly easy with your hover. You can give a beautiful presentation
just to hover over these and explain. So that's our first tutorial on Plotly,
my all time favorite library for plotting inside of Python, but inside of other languages as well.
And a nice introduction for you. Start playing with this and we'll carry on with this playlist on
YouTube. And I'll introduce you to a lot more plotting using Plotly for Python. Before you do
go there, please subscribe to this channel for all the information that I'm trying to get you hit that
notification button, the little bell there to let you know when new videos are uploaded. Thanks a lot.
