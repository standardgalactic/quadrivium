I want to take some time in this lecture to really motivate for the use of Python as opposed to any
other software package out there to do our statistical analysis. Python is a computer
programming language. You can use it to write standalone programs, you can use it to develop
websites, you can use it to do mathematical analysis and specifically statistical analysis.
There really is so much that you can do with Python. Above all of that Python is an easy language,
it is really one of the languages that is very easy to start off with and from there you can
build to any other language as well. So why Python? Number one it's free of charge, you don't have to
spend a penny to get Python. If you have a Mac computer it's already installed. If you install
some of the Linux distributions it's already there. Now we are going to install a specific piece of
software called Anaconda which includes Python and includes a lot of other things that we're going
to use but Python is free. It's also open so there's many many developers out in the world who extend the
Python language. Write what we call modules that we add to the base Python installation and that allow us
to do so much more. It allows you to collaborate with other people. Here we're using the ipython notebook.
It is a development environment where we actually write our code right inside of a browser and we're
going to look into this specifically in an upcoming lecture. But you can share these with others,
you can work together. And there you see the libraries modules and packages. Really these many many
developers out there develop all these things and they make the coding so much more powerful and so
much easier. Now why would you use something else? What are the problems with using something else? Well
number one there's expense. Many of the packages that you can use, software that you use to do statistical
analysis is prohibitively expense. Unfortunately so. You might be in an organization or in a university where
you do have a license to use these products but once you move out of there you're on your own and you
have to spend a lot of money. Now many of these software packages are developed in-house by some
corporation and they have a small number of salary developers who develop that product and that as
opposed to the large number of people who really develop Python. Lastly I just want to say something about
the limitations. Remember if you buy a package out there it can do one thing it might be able to do
it quite well and there are software languages computer languages and software tools out there that are free
but that's all they're going to do for you statistical analysis. With Python learning how to use Python
just for your statistical analysis enables you to know so much more. You know a computer programming language that can do so much
more than just statistical analysis. You never know when you want to expand your skill set and do other things.
Probably you'll be able to do it in Python so why not go for that. So how do you get Python? As I said the base Python
is installed on many computers but we're going to install IPython. Specifically you can go to this website
IPython.org. I've opened it for you. This is what it looks like. You can learn a lot about the IPython
development environment. When you click on install there this is the page that you're going to get to
and we want to move down to I'm getting started with Python. There are two very good distributions here. One is
called canopy from in thought one anaconda from Continuum software. I'm going to use the anaconda
package here program here to install. If you click on that this is where you go. If you just go back to
my IPython notebook I've written a line of code there and within my development environment you see this
live web page exactly the same as the web page here. So I can even write code in Python to display
active live web pages within my code. That's wonderful. Let's go to the proper page though.
You'll see there choose your installer. Now it has noticed that I'm on a Mac computer here so it's
going to go there but you can install the Windows version or a Linux version. Next choice is you really
want to go for Python 3.4. It defaults here to 2.7 but some of the coding syntax we're going to use
is for use only in 3.4 so go for the newest version. There's also the in some of these installations
like Windows a 64-bit and a 32-bit version for older computers just check what you're using. Most
modern computers 64-bit will be okay. So go for the operating system of your choice. Go for Python 3.4
and most probably 64 but if your computer is a bit old go for the 32-bit version. You're going to click on
that it'll download to your hard drive and you can simply install that. A little bit different for
Linux. You actually have to write this bash command in your terminal when you navigate to the downloads
folder where this was downloaded. Usually people who use Linux should have no problem with that. For
macOS and Linux you just for macOS and Windows I should say you can just double click on that installer file
and you will have a working version of IPython. The beauty of that is that you're going to have a lot of
packages pre-installed. Here I'm in this live web page in my code and you can see all these packages
that do come installed with with IPython, with your Python. Remember I said many developers work on these
packages and it's already installed when you do. You see all these ones marked as true. When you install
the IPython as an anaconda or Enthoughts canopy here you're going to get these libraries and there's
only one or two that are actually missing here and I'll show you how to install that that we might use
down the line are going to use down the line in this lecture series. How do you run it now that it's
installed? Well somewhere on your system will be this launcher button. You're just going to double
click on that. It might be hidden somewhere under your applications folder. It might default to your
system toolbar down the bottom somewhere just search for launcher you will be able to see it. The
alternative way as I see here in macOS and in Linux just search for your terminal computer program
terminal or on Windows just search for command prompt the program called command prompt and in there
once it opens you simply going to type IPython notebook and hit enter or return whichever the case may be
as simple as it really is as simple as that. And here you can see that is the terminal program
into which I've just typed IPython notebook here at the top in which I've typed IPython there at the top.
I don't use this launcher button. This launcher button doesn't always work for all systems. It's easiest just
to go to term your terminal program just search for it on your computer system on Windows on Linux or on the
macOS or the command prompt program. You can just search for that inside of your Windows operating
system and simply type at the command prompt just type IPython notebook the space in between hit enter
and this is what will launch. This is what will launch and these are all the lectures we're going to go
through. You can navigate a bit there to the folder structure that you want don't worry about that now
you're going to open a new notebook and that is where you're going to do your development and write
simple lines of code and execute them and do your statistical analysis. You're going to enjoy it.
You're going to enjoy Python. It's a wonderful computer programming language. It is so easy to use
and doing it this way with the IPython notebook inside of a web page. Inside of a web page is phenomenal
and you can share it with all your collaborators.
