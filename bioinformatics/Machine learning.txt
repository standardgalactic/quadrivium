In this video I want to show you how easy it is to do machine learning in Mathematica.
What I've set up here is just a file that I'm going to import.
I'm setting my notebook directory as the active directory because my machine learning file,
which is a comma separated value file, lives right inside of the same folder as the notebook.
And let me show you what this file is all about.
There we go. We see that we've got one, two, three, four, five, six, seven, eight predictors,
eight predictor variables and an outcome all living inside of a data set.
Now just to tell you what this data set is all about, it is eight clinical features here
and I'm predicting whether a patient has appendicitis or not.
Some of you might recognize this as the modified Alvarado scoring system
where we look at migration of pain, anorexia, nausea and vomiting,
right lower quadrant pain, rebound tenderness, heart rate, temperature and white cell count.
We can see these last three have been normalized.
And we use those eight predictors to predict whether a patient has appendicitis.
So we're going to go through two machine learning algorithms just to predict this outcome.
First of all, let's just look at how many patients are in our data set.
We see there are 200.
Now I want to divide this into a training data set, which I'll use to train my models
and then a test data set so that I can just check the accuracy of my model.
So there are 200 values and I want to at random select 80% of these.
So I'm going to use this comparative variable, which I call 80%.
And this is going to be 0.8 times the length of the data.
Now it's 200, so that was always going to be quite easy.
So I'm going to select 160 of these, but I want to do it at random.
I don't want to select the first 160 as my training set and then the last 40 as my test set.
So just to be sure, that means we're going to have 40 there inside of the test set.
Now the way that I'm going to show you here to select at random 160 rows is a bit laborious.
I'm going to stick to it though, just to show you the thought process here.
All I want you to do here is just to create a table.
That's a one list from first patient to the last patient, 200.
And I'm going to use this as the address for the rows in my data set.
So from these, I want to extract 160 of these at random and I don't want any repeats.
I don't want to select patient 88 twice.
I'm going to do random rows.
So we're going to be my computer variable and I want a random sample.
The range is 1 to 200.
Choose out of that 160 for me.
I could have just put 200 there and 160 there.
But I'll leave these computer variables just to show you what it's all about.
So I've got 160 of these values here chosen at random.
Totally at random.
Now, random rows select.
What I'm going to do here, I'm going to just execute that so you can see the difference.
All I'm going to do, I'm going to go from a list to a list of lists.
I need to do that and I'll show you why I need to do that in a moment.
So I'm just using table random rows and I'm just iterating from 1 till 160.
So I can just get all of these into a list of lists.
So each one of these becomes its own little list.
The reason why I want to do that is because I want all the row values that were not selected.
Of those 200, there were 40 that were not selected and I need them.
And I'm going to use the delete command for that.
And I have to pass all rows, the list.
And from that I subtract these, but I must subtract the list of lists.
Because I'm just referencing their position, not the actual values.
And that's why I had to create this list of lists.
And if I do that, I'm left with the other 40 that were not selected at random.
Which now means I can do my training data set and my test data set.
So my training set is going to be data and I reference those 160 randomly selected rows.
And then the test set is the other 40.
And there we go.
I've got my training data set and my test data set.
I'm not done yet.
Because this test data set, if I want to use a classifier measurement to test the accuracy and other properties,
it has to be in a different format than this.
And this is the format.
I'm just going to execute this so that you can see.
It's got to be lists of lists.
And it's got to be in a format where I have for every row of those 40,
I have my eight predictors there, eight predictor values, the arrow, and then the outcome.
Eight predictor values, arrow, and the outcome.
And the way I do that is just to create a little table.
And inside of that I'm going to create a list which iterates through every row of every column.
So column one, two, three, four, five, eight columns, arrow, and then the outcome which was column number nine.
And I want to go through all 40 and it goes from one to 40 of that set.
So it's got to be in this format.
So let's look at the random forest.
I'm going to use a computer variable called random forest model.
It's going to be a classification problem.
I'm setting this up as a classification problem, not as a regression problem.
I just want to have an outcome of zero or one.
Zero does not have appendicitis, one does.
I'm going to pass my training data set, but I've got to tell Mathematica which one of those columns is the outcome.
So the histo column, that last column nine, is the outcome.
And the method that I'm going to use is random forest.
Let's execute that.
And I now have a classifier function object here.
To use it though, I need a classifier measurement.
I'm going to call that RF model CM for classifier measurement of my RF model.
And as arguments, I pass the model that I've just created.
And then this test, data test model.
In other words, this.
And that is why I had to get the training, the test set, I had to get into this format.
So I pass that.
I pass that as an argument and I now have a classifier measurement object.
Let's look at the properties that exist for this.
I can look at accuracy, accuracy rejection plot, class rejection plot.
So first of all, what we want is the accuracy.
And I get an accuracy of 92.5%.
So very good.
Let's have a look at where it went wrong.
And this is the confusion matrix plot.
There we go.
So my RF model CM, my classifier measurement.
Let's have a look.
I have here, when the predicted was not appendicitis.
I have 0 here.
So let's have a look.
So this is 0 and 0 here and 1 at the bottom.
So I have none of those cases.
If it predicted a 1, the outcome was 1 and 17.
If I predicted a 0, 20 of those were indeed 0.
And if I predicted 1, indeed the actual class was 1 in all 3 of those.
So 1 and 0 is 3 were incorrectly then.
So down here is my predicted class.
On the left is my actual class.
So if we predicted a 1, 3 of those were actually a 0.
So we have the confusion matrix there.
I just want to show you this little manipulate function,
which I can just go through all of the properties in a little table.
Just remember always to put the definitions,
save definitions as 2 so that it can get executed every time.
So it's quite a neat little thing to do.
Quite a handy little manipulate function to write here
because it makes life easier.
If you just want to iterate through all of those,
we can see all of the properties here.
There was my accuracy.
And if I go to the confusion matrix plot, we see it's there.
So I can just click on any of those through this little manipulate command.
Let's do one more, a linear regression model.
I'm going to call it RLR model.
Classify again my training data set.
Telling Mathematica that the histo column is the outcome.
And this time I'm going to use logistic regression.
Same story.
I'm going to do a classifier measurement.
I'm going to pass the model that I've just created.
And the data test model.
Remember how we modified that.
Now I have a classifier measurement object.
And once again I can iterate through all of the properties.
And now I see I've got an accuracy with my linear regression model of 97.5%.
That's indeed very good.
And let's look at the confusion matrix.
And look at that.
There was only one mistake made.
If the predicted class was the patient had appendicitis.
Actually the patient didn't.
So in 18 of these it was predicted that the patient has appendicitis.
And indeed the patient did have.
In 22 here patients were predicted not to have appendicitis.
And the actual class was not appendicitis.
Let's have a look one more very quickly.
A sport vector machine model.
Exactly the same thing is going to happen here.
First I do just a classification and then a classifier measurement.
Passing those same arguments.
I'm using this neat little manipulate.
And we see there was an accuracy just of 100%.
So no mistakes were made there in this model.
One last thing I wanted to show you.
Just some feature extractions.
I'm going to create this computer variable called data feature.
And it is all the rows and the columns.
So all I'm cutting out here was that last outcome column.
I don't want that outcome column.
I only want all the predictor columns.
We're going to create a computable computer variable called FE.
And that's my feature extraction.
And I use the feature extraction function.
And I pass this data feature.
In other words that was my only my eight columns in my eight predictor variables.
So I'm going to create a new random forest model here.
I'm going to call it random forest model TE.
Again classify.
Passing the training data set.
I'm telling Mathematica that histology is indeed my outcome.
The method is random forest but I'm using a feature extractor.
So that's one more argument that I can pass.
And the feature extractor is this FE that we've just created here.
If we now look at just creating a classifier measurement and we look at accuracy we see 92.5.
And if we go back to our model there the accuracy was 92.5.
So in this instance it didn't really improve anything.
So that's a quick look at how easy it is to do machine learning with Mathematica.
