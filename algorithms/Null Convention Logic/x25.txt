which will assert a DATA value in a given data wavefront. Figure 5.14 shows
several examples of multi-value variables; the illegal states are not shown.

For a data wavefront, each variable asserts exactly one DATA value. Com-
pleteness of the data wavefront is exactly one DATA value per variable. For
a NULL wavefront all asserted DATA values return to NULL, and complete-
ness for a NULL wavefront is all NULL values across all variables.

Logical variable
Place meanings Variable
TRUE FALSE meanings
Place
#1
#2
Value
N
N
NULL
Value
D
N
TRUE
Value
N
Numeric base 2 variable (binary)
Place meanings
Variable
0 1 meanings
Place
#1
#2
Value
N
N
NULL
Value
D
Value
N
D
General three value variable
Place meanings Variable
Animal Vegetable Mineral meanings
Place
#1
#2
#3
Value
N
N
N
NULL
Value
D
N
N
Animal
Value
N
D
N
Vegetable
Value
N
N
D
Mineral
Numeric base 4 variable (quaternary)
Place meanings Variable
0 1 2 3 meanings
Place
#1
#2
#3
#4
Value
N
N
N
N
NULL
Value
D
N
N
N
Value
N
D
N
N
Value
N
N
D
N
Value
N
N
N
D
D
FALSE
N
Process meaning variable
Place meanings Variable
TRUE FALSE
meanings
Place
#1
#2
Value
N
N
NULL
Value
D
N
TRUE
Value
N
D
FALSE
Value
D
D
Illegal
Figure 5.13 two-value variable formed from two places.

Figure 5.14 Multi-place variables.

ASSOCIATION EXPRESSION 75

THE INVOCATION MODEL
Pure Association Operators Are Threshold Operators The NULL value,
meaning ‘not data’, cannot enter into the formation and resolution of a data
name. There is only one data value called DATA, so there can be no combi-
nation of different data values. At the most primitive level of name formation,
at a single place of association, the only possible names that can form are
combinations of DATA values. The only discriminable property available
when combining DATA values is how many DATA values are present. There-
fore pure association primitive operations can be naturally viewed as thresh-
old operations. The fundamental question of each operator is whether suffi cient
DATA values are present to completely form its name. If suffi cient DATA
values are present, then the operator asserts its DATA value. If suffi cient
DATA values are not present, then the operator does not assert its DATA
value.

A threshold operator will be represented with the graphic symbol shown
in Figure 5.15. The symbol expresses the directionality of the operator and the
number in the operator indicates the threshold of the operator. The lines
entering the rounded part of the operator indicates the number of input
values. The operator shown is a 2 of 2 operator. The value transform rules for
the operator are shown in Figure 5.16.

Forming Names and Asserting Results An example of a pure association
expression is shown in Figure 5.17a. Its input is a three-value variable X and
a two-value variable Y. Its output is a four-value variable Z. It adds a binary
digit to a trinary digit and outputs a quaternary digit. For a data wavefront
presented to the input, there will be exactly one place of the X variable assert-
ing DATA and one place of the Y variable asserting DATA. A name formed
by the two variables comprises exactly two DATA values. There are six form-
able names and the inputs are associated with the 2 of 2 operators such that
each possible name is formed as the input of an operator. This rank of opera-
tors is the expression’s internal representation of the formable names and the
expression of its search to recognize a presented name. A presented name is
recognized by one of the operators asserting a DATA value. For input names
that assert an identical output behavior, the name recognitions are collected
to a single place in the structure with a threshold 1 operator. For instance, the
DD[D]
DN[-]
NN[N]
ND[-]
transition to
NULL value
transition to
data value
no value transform
rule for formed name
Input
Output
Figure 5.15 Threshold operator.

Figure 5.16 Value transform rules for 2 of 2 operator.


input names 02 and 11 assert the same output behavior and are collected into
the single behavior of quaternary value 2.

It will be noticed that the names 01 and 10 are explicitly recognized. In the
corresponding pure value expression shown in Figure 5.17b there is no way to
tell 01 from 10. They are a single name. But in the pure association expression
the 0s and 1s for each variable come from different places in the structure.

01 and 10 can be differentiated so the formed names must be individually
recognized.

The output expresses the completeness criterion and maintains the mono-
tonic completeness behavior of the input. When one output value becomes
DATA, the input is completely DATA and the output is the correct resolution
