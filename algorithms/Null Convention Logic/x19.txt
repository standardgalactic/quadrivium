which asserts only one at a time of two or more possible values.

If all possibilities occur—all thengs associate and all values interact
equally all the time—then there is no differentness. If no possibilities occur,
thengs never associate and values never transform, then there is also no
differentness.

5.2.5 Differentness as Ongoing Behavior
Imagine that the thengs, the values, the shaking bag, and a set of value trans-
form rules is all there is. There is no meta observer, no meta context, no meta
metric of space or time, no meta reference frame. There are only the values
forming names and resolving according to value transform rules. The expressed
differentnesses can only be appreciated by the expression itself.

A name forms from an initial set of values that transforms to one or more
values different from the initial set of values. Then a new name forms and
transforms into new different values that form new unique names, and so on.

Differentness is appreciated by transforming into new differentnesses, which
are appreciated by transforming into new differentnesses, and so on. The
expressed process can continue as long as there are different values and value
transform rules to support it.

At some point values might reappear in the expression, forming names
previously formed and the expression can become cyclic. Consider the follow-
ing cyclic expression:
PURE VALUE EXPRESSION 57

THE INVOCATION MODEL
AB[CD], ST[XY], CY[AT], XD[SB]
Beginning with the values A, B, S, and T the names AB and ST will form
resolving to C, D, X, and Y. The names CY and XD will form resolving to A,
B, S, and T. This cycle will continue indefi nitely. From the point of view of
the expression there is differentness, and the differentness is being appreci-
ated. But the differentness does not extend beyond itself and cannot be appre-
ciated beyond itself.

An extreme case of isolation is the value transform rule AB[AB]. The result
values are identical to the name-forming values and immediately reform the
name. Whether this formed name is constantly resolving, not resolving at all,
or whether it even exists cannot be appreciated, even by itself.

Static values that do not participate in the formation of any name and never
transform, or values that spontaneously cease and become with no encompass-
ing relationship, do not extend beyond themselves and cannot be appreciated
in a greater context. There is no such thing as a static differentness or an
isolated differentness. Differentness cannot stand on its own; it must be
appreciated.

The whole point of differentness is that its appreciation abets ongoing
behavior. Process is the continual extended appreciation of differentness. Dif-
ferentness continually appreciating itself. The only important thing is to not
become isolated (an isolated cycle) and to not become extinct (cease being
appreciated). Each differentness must extend beyond itself to appreciate and
to be appreciated. A value transform rule, as the most primitive expression of
process, extends beyond itself by asserting at least one result value that is not
in its name.

One might suggest that if a value or a behavior exists, it exists whether it
participates or not, so one should pursue the truth and consider it. From a
meta view one might observe the differences among static values or the behav-
ior of spontaneously becoming and ceasing values or the behavior of self-
sustaining cycles, but there is no meta view and there is no meta observer.

There are only the thengs, the values, and the value transform rules. There is
no question of truth: of what really is or what really happens. There is only
the question of what can be appreciated with the resources at hand. What
cannot be appreciated cannot be considered.

5.2.6 Roman Numerals
The introduction to pure value expression begins with the system of roman
numerals without the subtractive principle (9 is VIIII instead of IX). In a
place-value number system, values are reused at each place of association
(digit place) in a number. The magnitude of a value is expressed by the value
and by its place of association in relation to other values of the number. In
the roman number system the magnitude of a value is unique. While the values
of roman numbers are generally presented in a certain order of association

for convenient reading, without the subtractive principle, the order is not sig-
nifi cant to their meaning. All differentiation is expressed by unique values.

The magnitude of the number is determined solely by the values present.

There is no differentiation in terms of association relationship. MMV is equal
to MVM and VMM.

The expression of roman numeral addition is a set of value transform
rules:
IIIII [V]
VV [X]
XXXXX [L]
LL [C]
CCCCC [D]
DD [M]
Given two roman numbers these rules will reduce them to a minimal single
number representation. The numbers 1978 and 22 are used as examples:
MDCCCCLXXVIII + XXII = MM
Assume thengs that can assert the roman numerals and that the value
transform rules are embodied in the thengs. The thengs recognize a formed
name and spontaneously transform their values in response. One can just
throw the two numbers into a shaking bag as in Figure 5.2. The fi ve Is will
form the name IIIII, invoke the rule IIIII[V], and transform into a V. There
are then two Vs that will transform to an X. The fi ve Xs will transform to an
L, the two Ls to a C, the fi ve Cs to a D, and fi nally the two Ds to an M. What
remain are two Ms. There is no transform rule with the name MM, so no more
names can be formed and the addition is completed. Names form, values
transform, and eventually the sum appears.

X
X
X
C
C
C
C
I
I
I
I
D
M
X
I
Figure 5.2 Roman numeral addition in shaking bag.

PURE VALUE EXPRESSION 59

THE INVOCATION MODEL
5.2.7 Expressional Completeness
The expression itself cannot determine when its resolution is completed. The
only way to determine the progress of the resolution is to open the bag and
count the values. Roman numeral arithmetic was never intended to behave
autonomously in a shaking bag. Integral to the system was the assumption of
a trained human able to discern value states, to manipulate the values with
well defi ned procedures, to resolve all the ambiguities, and to determine when
the resolution was done. None of this human expressivity is embodied in the
pure value expression above.

If a coordinating human is not available, the expression itself must be
enhanced to express the appropriate coordination behavior. There must be a
completeness of expression that eliminates the ambiguities of behavior. This
can be expressed with more values and more value transform rules.

To determine completeness of resolution there must be a progression of
name formation and resolution such that there is a necessarily last name
formed and appreciated. With the present form of the expression there might
not even be a fi rst name formed. VI + XII = XVIII with no names formed and
resolved at all. There must be a completeness of behavior at each stage of
name formation and resolution to ensure that every name in the progression
is formed and appreciated in an orderly progression with a guaranteed last
appreciation. Completeness of behavior fi rst requires a completeness of
representation at each stage of resolution.

The fi rst question of an addition is, How many Is are present in the bag?
The process must count the Is and somehow determine that it has considered
all the Is and has not missed any Is in the bag. This is quite impossible with
just thengs, values, and value transform rules unless the number of Is to be
counted can be pre-expressed.

The number of Is to be counted cannot be pre-expressed unless the number
of Is is constant. This can be arranged with zero placeholder symbols so that
there can be a constant number of each value in each number. Since each
numeral value expresses a different magnitude, there must be a unique zero
or placeholder value associated with each numeral value. The corresponding
lower case letter will be used as the zero value for each numeral value as
shown in Table 5.1.

In a minimal Roman number it is possible to have zero to four Is. The zero
value i is used such that there is always exactly four of I and/or i in a number:
iiii, Iiii, IIii, IIIi, IIII. When two numbers are added, there will always be
exactly eight of I and/or i. The criterion for completeness can now be pre
expressed in the value transform rule names. The name of each rule, shown
in Table 5.2, is exactly eight values. Each name is a symbol string but this does
not imply any position dependency of the symbol values. The name IIIiiiii
means that there is three of I and fi ve of i in no particular order.

A rule will be invoked only when its name is completely formed by all eight
values. This requirement of completeness of name formation is the mechanism
of behavior coordination.


The V or v is the carry to the V, v addition. There are one each of V and/or
v in the two numbers, and there will always be a carry value of V or v. So
there will always be exactly three of V and/or v present. The names of the
value transform rules, shown in Table 5.3, requires 3 of V and/or v. The carry
value from the I resolution must be present before the V, v name can form
and resolve. Because of the completeness requirement the V, v addition occurs
strictly after the I, i addition is completed. The carry values express the neces-
sary progression of name formations and resolutions.

There will be four X, x’s in each roman number. So adding two numbers
will involve eight values, and the carry value will make exactly nine values to
form the X, x addition names, as shown in Table 5.4. Again, the X, x addition
will occur strictly after the V, v addition.

The remaining rule sets, shown in Table 5.5 can be similarly derived except
for M, m, which poses a diffi culty because it does not have an inherent
Table 5.1 Roman numeral values with their associated
zero values
Numeral Value
