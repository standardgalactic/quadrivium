6.7 FIFTEEN AVAILABLE DATA VALUES:
PURE VALUE EXPRESSION
With 15 values the process can be fully differentiated in terms of value. The
expression becomes a pure value expression. There is no longer a need to
isolate the input from the output so no association operator needs to be
involved. Given the mapping of the symbols to the process on the left of Figure
6.22, the pure value expression of the process is just the set of value transform
rules shown on the right. The value transform rule names are not ordered. IL
is also LI.

B
A
Q
K
P
O
N
M
L
J
I
J
K
L
J
K
L
A
B
X
X RESULT
Figure 6.21 Mapping of nine values onto baseline process.

FIFTEEN AVAILABLE DATA VALUES: PURE VALUE EXPRESSION 97

ALONG THE SPECTRUM
6.8 THREE AVAILABLE DATA VALUES
With only three values available, shown in Figure 6.23, the two input meanings
can be differentiated with one variable each, and the result meanings can be
expressed with two variables. The three-value expression will have the same
form as the four-value expression but the operators will be simpler.

Three values are an optimal number for this process in that no value dif-
ferentiation is wasted. With four values there were several names that could
be formed that were not used. With six values there were even more unused
names. With three values all possible value combinations for both the input
names and the results are used. This is the only example on the internal spec-
trum that exhibits fully effi cient value differentiation.

6.9 TWO AVAILABLE DATA VALUES
With only two values available, it becomes necessary to encode each input
with two values and each result with four values as shown in Figure 6.24. The
left shows the mapping with the letters of the previous examples, and the right
table shows the mapping with the more familiar 1 and 0.

Figure 6.25 shows the complete two-value expression of the example process
with Boolean operators. Since the input name 0000 outputs all default values
0000, it does not need to be explicitly recognized. The default values from all
the other recognition operators will output the default values when 0000 is
presented. With NULL convention coordination every operator will transition
IL[0]
JL[1]
KL[2]
IM[3]
JM[4]
KM[5]
IN[6]
JN[7]
KN[9]
I
J
K
L
M
N
Figure 6.22 Mapping of 15 values onto the baseline process.

LL
JL
LK
LJ
KL
KK
KJ
JK
JJ
J
K
L
J
K
L
A
B
XY
Figure 6.23 Mapping of three values onto baseline process.


JIII
IIJI
IJJJ
IJJI
IJIJ
IJII
IIJJ
IIIJ
IIII
II
IJ
JI
II
IJ
JI
AB
CD
WXYZ
1000
0010
0111
0110
0101
0100
0011
0001
0000
AB
CD
WXYZ
Figure 6.24 Mapping of two values onto baseline process.

twice for 54 transitions. With timed coordination there will be 13 transitions
per input. All four inverters will transition, two fi rst rank recognitions will
transition, and one fi nal recognition will transition. There will be two transi-
tions each to assert X, Y, and Z. With two values there is a 50% chance that
each operator will be in the appropriate state and not transition, so the transi-
tions for a timed expression will 50% of 13 or 6.5 transitions. The transitioning
of the clock is not considered.

If the rank of recognition gates had four inputs each, then each name could
be recognized directly, and the fi rst rank of gates could be eliminated. Again,
with operators with more value differentiation, less association differentiation
is needed.

C D
A B
00 10 -> 0110
01 10 -> 0111
10 10 -> 1000
AB CD -> WXYZ
00 01 -> 0011
01 01 -> 0100
10 01 -> 0101
00 00 -> 0000
01 00 -> 0001
10 00 -> 0010
W
Y
X
Z
Recognize input name
Generate appreciation behavior
Figure 6.25 Two-value expression.

TWO AVAILABLE DATA VALUES 99

ALONG THE SPECTRUM
6.10 ONE AVAILABLE DATA VALUE
With only one data value to express data meanings an expression becomes a
pure association expression expressed in NULL Convention Logic. There is
no differentiation in terms of value. All differentiation is in terms of associa-
tion. The pure association expression that directly implements the behavior
of the process is shown in Figure 6.26. The places in the expression are labeled
with the symbols of the 15-value mapping to show the correspondence of the
expressions.

The 15-value example is the pure value expression at one end of the spec-
trum and the one-value example is the pure association expression at the other
end of the spectrum. The two expressions are exact duals and both directly
express the example process defi ned by Figure 6.1.

6.11 SUMMARY
Several examples of the expression of a baseline process at various points on
the spectrum of differentiation have been presented. The fi rst example was
limited to four data values and four operators with the bulk of the differentia-
tion in terms of association relationships. The basic methods of name recogni-
tion and appreciation generation were discussed in the context of this expression.

A
B
C
X
Y
Z
A
B
C
AX
BX
CX
AY
