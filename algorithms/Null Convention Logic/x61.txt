which can be expressed with a set of value transform rules as a pure value
expression. While the mapping expression might be the essence of binary digit
addition, it is not the essence of numeric addition. Binary addition is just one
specifi c form of numeric addition. Numbers can be expressed and added with
any radix.

Can the essence of numeric addition be referentially expressed. Since
numbers are indefi nitely extensible in precision and range, their addition
cannot be expressed as a symbolic mapping; their addition, however, can be
expressed as a symbolic process that iterates over a sequence of digits of
whatever radix from the beginning of the number to the end of the number.

The strategy of iteration can vary. An iteration might directly map one, two,
or more digits per iteration. The radix can vary. There is a range of possible
referential expressions, all equally expressive and no one expression more
essential than any other. Symbolic expression of the essence of numeric addi-
tion eludes capture.

11.4.2 A Chosen Standard
The best that can be done is to choose a form of expression that most conve-
niently embodies some essence and invest in it as a standard. The criterion
of convenience might be some familiarity, or minimality, or maximality, and
so on.

Originator Familiarity A standard form might be chosen because it is famil-
iar and convenient to an originator of expressions and is easily mappable to
autonomous and other forms of expression. An originator might fi nd it most
convenient to express radix 10 numbers. It is easy to translate any radix to
another radix that might be required for autonomous expression such as radix
2. There might simply be a mapping between names familiar to an originator
and names familiar to an autonomous expression. For example, a cell expres-
sion knows nothing of the human names adenosine, cytosine, guanine, and
thymine, but components of the cell understand perfectly how to recognize
and interact with the real values corresponding to the human names. Program-
ming languages are attempts at a standard form of expression based on math-
ematical language or on human language that is easily mappable to a
conventional computer.

Expressional Minimality A standard form of expression might be based on
some criterion of minimality. A Turing machine, for instance, is based on
minimal value differentiation. The pure forms of expression at each end of
the spectrum are minimal forms of expression. A pure value expression has
minimal association differentiation. A pure association expression has minimal
value differentiation.


An expression encoded in the middle of the spectrum does not provide the
same minimal directness of expression. It can posses arbitrary proportionali-
ties of value differentiation and association differentiation. The continual un-
encoding and re-encoding is an added complication that is not present with
the pure forms of expression. A pure form of expression can easily be mapped
to an encoded expression in the middle of the spectrum, but an encoded
expression may not be as easily mappable to a pure form of expression.

Expressional Maximality The referential expression with the fi nest
granularity of hierarchical and lateral structure of boundaries expressing
a maximum of distributed and concurrent behavior offers the most fl exibi-
lity of partitioning and mapping to the greatest range of other forms of refer-
ential and autonomous expression. A pure value expression has maximal
value differentiation. A pure association expression has maximal association
differentiation.

Sequentiality Sequentiality is widely considered a standard form of process
expression that is universally familiar and optimally convenient. There are
many motivations for sequentiality. There is the imperative of the algorithm.

There is the supposed unruly behavior of concurrent functions. There is the
fact that input and output boundaries are inherently sequential: that every
boundary within an expression sequentially iterates over successive presenta-
tions of input and assertions of output.

Some consider that conditional sequential iteration that expands through
time to accommodate to circumstances is a key factor of sequential expression
that makes it superior to other forms of expression and mandates that all
expression be strictly sequential. But sequential iteration can occur in the midst
of concurrent behavior. Natural expressions that are expressed internally with
massive concurrency iterate to accommodate to circumstances. The iteration
of individual association expressions can occur in a concurrently behaving
association structure of many association expressions. Conditional sequential
iteration is a fundamental behavior present in all forms of process expression,
but this does not imply that all expression must be strictly sequential.

Sequentiality might be considered a standard form of expression because
any expression can be mapped to a sequential expression, providing a conve-
nient universal form of expression through which all other forms of expression
can be mapped and compared. But the fact that all other forms of expression
can be mapped to a sequence does not mean that a sequence can be conve-
niently mapped to other forms of expression or that sequential expressions
can be conveniently compared. The variability of sequence and the arbitrari-
ness of memory mapping make sequential expression far too opaque to be a
standard of comparison or to be a standard of expression conveniently map-
pable to other forms of expression.

While sequentiality is an inherent behavior in all forms of process expres-
sion, while strictly sequential expression has been a standard of original
ARCHETYPAL REFERENTIAL EXPRESSION 191

REFERENTIAL AND AUTONOMOUS PROCESS EXPRESSION
process expression for several centuries, strict sequentiality is nevertheless not
an optimal standard for original expression.

11.4.3 Point of View
A referential expression like any other expression must assume a point of
view. There is no single point of view that encompasses all other points of
view, and there is no inherent rationale for choosing one point of view as a
standard. In fact differing points of view pose the greatest barrier to archetypal
expression. Points of view are not always mappable among themselves. The
reference frame expression of the eagle landing cannot be mapped into an
instance of a real eagle landing. The expression of the real eagle landing
cannot be mapped into a reference frame expression.

A point of view can focus attention on aspects that are important and ignore
aspects that are not important, and what is important from one view may not
be what is important from another view. From the point of view of mathemat-
ics, the behavior of a particular process is important. Variety of expression is
unimportant. From the point of view of computer science, the variety of
expression is important.

It may be more important for an archetypal expression to incorporate
multiple points of view rather than to adopt a single point of view. The invoca-
tion model, for instance, incorporates two views of the expression of different-
ness: association differentiation and value differentiation.

11.4.4 Summary
A referential expression can be a general form that can be translated to a wide
range of other forms of referential expression and to a wide variety of auto-
nomous expressions, however, referential expression falls short of providing
a single archetypal expression that captures the fundamental essence of a
process that can be mapped to all possible forms of the process. This is because
there can be great variety of equally valid referential expressions and because
differing points of view do not map among themselves. There can also be a
great variety of symbolic expression of differentnesses and behaviors. Sym-
bolic differentness can be expressed with colors, with symbols, with molecules,
with sounds, with graphics, and so on.

There is no philosophically essential form or standard form of referential
expression. All that can be done is to choose a convenient form of expression
and invest in it as a standard form.

11.5 REFERENTIAL OF AUTONOMOUS
Can an association expression create a symbolic process expression of itself
or of a another equally complex association expression?

11.5.1 The Internal Expression
The internal structure of an association expression and its value memories are
unique to itself. No other expression needs to appreciate the internal expres-
sion. Other expressions only need to appreciate external behaviors among
themselves. The internal expression of an association expression is typically
inaccessible and inscrutable to another expression.

The internal expression of an association expression is the means of its
stride of appreciation, which cannot be suffi cient to fully appreciate its own
internal expression. An association expression is part association and part
referential expression. The problem is essentially to build an internal referen-
tial expression model that encompasses the internal referential expression
and the Association expression itself. The model referential expression must
be much larger than the internal referential capacity of the association
expression.

Can the stride of appreciation of an association expression be suffi cient to
appreciate the internal expression of a much simpler association expression
such as an amoeba?
11.5.2 Sampling an Amoeba
A symbolic process expression is static, so it must embody a sampled instant
of the expression of the amoeba. When the symbolic expression is realized it
will continue the amoeba’s behavior from the instant of sampling. An amoeba
is an expression with ongoing dynamic behavior whose internal intermediate
memories are continually changing contents. Being also a generally concur-
rent expression, there is no predictable instant of reliable sampleability of the
complete extended state of the amoeba.

An observing expression has its own limitation. It must take a certain
amount of time to sample and appreciate the expression of the amoeba.

During this time the amoeba continues to behave and change. So, even if
there was a predictable instant of stability, another association expression
cannot instantaneously gather a complete sample of the amoeba. A sample
over a time interval of a single amoeba will result in a blurred referential
expression of the amoeba. Another approach might be to sample many
amoeba over time to build a referential expression of an average instant of a
typical amoeba.

Dynamically evolving association expressions are continually changing to
accommodate circumstances. Any sample of an amoeba expression will be in
midstride. It will be an expression without a clear beginning and without a
clear current state. The amoeba itself, being a product of billions of years of
continuous behavior, never had an initial state nor an instant of stable state.

How can it be expressed with a static expression that begins from a stable
initial state? How can a viable initial state be determined for an autonomous
expression from a “blurred” or “average instant” referential expression?
REFERENTIAL OF AUTONOMOUS 193

REFERENTIAL AND AUTONOMOUS PROCESS EXPRESSION
The notion of one association expression completely understanding
another commensurate association expression has fundamental problems
with accessibility and suffi ciency of resources. There is a fundamental problem
with time between the dynamic nature of an association expression, its limited
observation capabilities, and the static nature of a symbolic referential
expression.
