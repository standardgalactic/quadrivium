and interaction behaviors
interaction behaviors
Enables extended abstraction
Does not support abstraction in the
conventional sense

POINTS OF VIEW
10.4 FORMALISM VERSUS FORM
From the point of view of formalism, differentness is expressed with structures
of passive symbols. Association and interaction of the symbols is expressed
as a process manipulating the symbols within their structures. Some think
that understanding a process as a formal symbolic process is the important
thing and that understanding a specifi c form of expression is unnecessary. The
ultimate formalist expression of the eagle would be as a Turing machine
program.

To produce a formal expression of the eagle, the expression of the eagle
must fi rst be understood on its own terms. But, if one has achieved an under-
standing of the eagle on its own expressional terms, it is diffi cult to see how
binarizing, algorithmizing, sequentializing, and reducing it to a Turing machine
program can in any way enhance that understanding.

One aspect of the formal symbolic computation point of view is that it may
be possible to elucidate the symbolic computation of a process expression
without understanding the form of that expression. If the form of an expres-
sion is largely inaccessible, such as a brain or life, then focusing on symbolic
computations with similar behaviors might offer a path to understanding that
is otherwise unavailable. One might, for instance, focus in great precision on
the external spatial behavior of the eagle in the projected reference frame and
be able to determine the differential equations that the eagle must be solving
to perform its landing. But, if one looks inside the eagle, there is nothing like
a numeric differential equation solver. The notion that it is solving differential
equations does not help one in the least understand the actual symbolic com-
putations the eagle performs in its landing and how it performs them.

The formal symbolic view, in its extreme—that symbolic computation inde-
pendent of form of expression is the only valid path to understanding—is not
a fruitful point of view. Intrinsic form of expression cannot be ignored.

10.5 THIS PRIMITIVE—THAT PRIMITIVE
A point of view grows from a primitive concept. A theme of this book is the
consequences of choosing a primitive concept of expression: the notion of a
stateless primitive or the notion of a state holding primitive. Two choices of
primitivity leading to profoundly different points of view.

10.5.1 The Stateless Primitive
When stateless mappings are composed races and hazards produce incorrect
nondeterministic results before settling to a correct deterministic result. This
can be remedied by adding a timing interval to the expression that indicates
when the nondeterministic behavior is over and the expression has settled to
the correct result. The logical relationships of the functions become isolated

by the timing interval, so further composition must be in terms of the time
intervals instead of in terms of logical relationships. Time intervals cannot be
composed concurrently for the same reasons of races and hazards that the
stateless mappings cannot be composed. They must be composed synchro-
nously or sequentially. In the modern computer circuits are composed syn-
chronously, and operations are composed sequentially.

A sequence of operations cannot spontaneously sequence itself, so there
must be a notion of explicit sequence control to instantiate and un-instantiate
each operation in sequence. Data fl owing between operations must be parked
someplace while awaiting destination operations to get their turn in sequence,
so there must be a notion of an addressable memory.

There can be many valid sequences and many valid memory mappings. The
variability of expression does not provide a coherent characterization of
process that supports comparison and validation. For a coherent characteriza-
tion of behavior one must appeal to transitions in a state space. Between the
instantiation and un-instantiation of each sequential operation there exists a
static state that can be conveniently sampled and examined. The expected
behavior of the sequence of operations can be characterized in terms of suc-
cessive state transitions, and the behavior of any instance of the expression
can be validated by comparing the actual behavior of its state space to the
expected behavior of the state space.

The time interval, synchronous composition, sequential composition,
explicit control, addressable memory, and state space are all interlinked,
mutually supporting concepts that derive from the primitive notion of stateless
mapping. One cannot fi nd one’s way to a different view by incremental adjust-
ment of any of the concepts. One gets continually pulled back into the view
by the other interlinked concepts. For instance, if one attempts to consider
concurrency, then one is faced with the complexity of control and the inde-
terminacy of the state space. If one attempts to distribute memory, one is
confronted with the variability of sequence and the arbitrary mapping of
memory. Attempting to avoid the time interval leads back to races and
hazards.

A conceptual point of view can appear general, encompassing and ideally
suited within its own context. It can also make other conceptual views appear
less than ideal. Sequentiality appears straightforward and much simpler than
concurrency, but this is only if sequentiality and concurrency are looked at
from the point of view of sequentiality.

10.5.2 The State-Holding Primitive
If one starts over with state-holding primitives that understand how to behave
among themselves, then a quite different conceptual regime emerges.

A composition of state-holding primitives can cooperate in terms of logical
relationships to deterministically coordinate the fl ow of resolution from primi-
tive to primitive with no races and no hazards. This composition of logically
THIS PRIMITIVE—THAT PRIMITIVE 173

POINTS OF VIEW
determined behavior is indefi nitely extendable. Since there is no nondeter-
ministic behavior, there is no need of the concept of a time interval. Without
the time interval there is no need of synchronous sequentiality. Since the state
holding primitives interact directly in terms of logical relationships, there is
no need of explicit control. The state-holding behavior of the primitives main-
tains the fl ow of resolution in the association paths among the primitives.

There is no need for a notion of an addressable memory. Finally, since the
behavior of a network of primitives is completely determined and fully char-
acterized by logical relationships, there is no need of the notion of a state
space. Since the behavior of the individual primitives of a network is not syn-
chronized, there is no instant of reliable sampleability making the notion of a
state space meaningless anyway.

10.5.3 The Consequences
Table 10.2 contrasts the consequences of each point of primitive view. While
the concepts in the left column lists concepts that must be added to the concept
of the stateless primitive to make it work, the right column lists behaviors
integral to the composition behavior of state-holding primitives. The state-
holding primitive is suffi cient in itself. No further supporting concepts need to
be added.

One view of primitivity leads to a view of process expression that is a con-
trived scaffolding of interlinked mutually supporting ad hoc concepts that
makes process expression diffi cult, expensive, and unreliable. Within this view
concurrency is extra conceptual and is even more diffi cult, expensive, and
unreliable.

The other view of primitivity leads to a simple conceptual milieu. The single
concept of the state-holding primitive suffi ces. No other supporting concepts
are necessary to express arbitrarily complex processes. In this view the expres-
sion of concurrency is simple and reliable, while the expression of sequential-
ity is a complex, expensive, and unreliable special case of concurrency. The
state-holding primitive leads to the simpler, more encompassing, and unifying
point of view.

Table 10.2 Consequences of primitive beginnings
Concepts Necessary to Support
Behaviors Inherent to
Primitives with Stateless Behavior
Primitives with State-Holding Behavior
Time interval
Logical completeness
Synchronous composition
Distributed local behavior
Sequential composition
Concurrency
Explicit control
Cooperation
Addressable memory
Distributed content fl ow
Extended state space
Logical determinism

10.6 BIG THENGS—LITTLE THENGS
Both nature and humans compose expressions of increasing appreciation
stride. Humans begin with small thengs with small appreciation stride: a small
set of values and a small set of value transform rules such as binary variables
and Boolean logic functions. From such a well-defi ned kernel of behavior,
they compose very large association expressions with complex patterns of
behavior that accumulate appreciation stride through time.

Nature also begins with small thengs providing a small set of values and
value transform rules, such as elementary particles in the seething disorder of
a pure value expression. It composes the small thengs into big thengs with
very large sets of values and very large sets of value transform rules. With a
little more sense about the importance of time and economy of behavior,
nature composes these big thengs into small association expressions with
direct and immediate behaviors. Two exceptions are the brain and DNA,
which are very large association expressions.

10.6.1 Nature’s Big Thengs
Nature’s primitive behavior rules are continuous and undirected, but they
support the formation of persistent loci of collective behavior. Out of an
uncoordinated chaos of particles, the proton, the neuron and the electron
compose in continuous undirected behaviors to form 92 atoms. These 92
atoms are stable loci (new thengs) asserting 92 new values and a multitude of
new interaction rules. These new thengs with 92 values, still in a seething
chaos, associate with continuous undirected behavior to form larger stable
loci, molecules (new thengs), asserting innumerable newer values and inter-
action rules.

When atoms interact to form molecules, the interaction behavior of the
atoms within the molecule is continuous and undirected, but the value of each
atom is preserved. When molecules interact, molecular value is not preserved.

When two molecules interact, the interacting molecular values disappear, and
new molecular values appear. Because the atoms retain their identity, they
are a discrete unit of molecular change. Molecular interactions are, therefore,
discrete and directed. With molecules, pure value expression has emerged
from the continuous behavior of particles and atoms.

As these molecules become bigger and more complex, the possibility
of directed association emerges. Molecules with two ends that interact
differently allow the building of association structures, such as the cell mem-
brane, that can express a bounding association relationship of a pure value
