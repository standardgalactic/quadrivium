memory capacity of each association path in Figure 9.2 is increased by the
pipeline stages allowing the expression to be extended farther in time.

9.2 TIME–SPACE TRADE-OFF
Consider that there is just one AND operator, one OR operator, and one
NOT operator. The AND operator has to be used six times, the OR operator
three times, and the NOT operator four times. The behavior of the expression
must be extended in time to allow each resource to be reused multiple times.

One instantiation of each operator takes up less space than a fully populated
association expressions of Figure 9.1 and Figure 9.2. This is commonly called
a time–space trade-off. Space is being saved in terms of instantiated resources
by using rare resources over and over in time.

9.2.1 Reusing Operators
With each use of an operator, its asserted result is fed back and presented to
the input of the operator to which it associates. Figure 9.3 shows the feedback
expression for the binary full-adder. There is a new operator called Chain to
replicate in time the values that are replicated by fan-out in the association
expression.

C
X
Y
CARRY
SUM
OP4
OP8
OP7
OP3
OP1
OP2
OP10
FIRSTSUM
OP6
OP5
OP9
N
N
N
N
N
N
N
N
N
Figure 9.1 Association expression of binary full-adder.

C
X
Y
CARRY
SUM
OP4
OP8
OP7
OP3
OP1
OP2
OP10
OP6
OP5
OP9
FIRSTSUM
Pipeline stages
Figure 9.2 Association expression extended to strict sequence through time.


The feedback paths are pipeline paths forming rings. Each feedback path
corresponds to an internal association path in the association expression. Each
operator outputs only one result at a time that must be explicitly steered, in
sequence, through a fan- out steering structure (O1 through O4) to the proper
pipeline that associates through an input steering structure (I1 through I6) to
the input of an operator.

A sequence of commands controlling each steering structure is suffi cient to
realize the full adder expression. Each steering structure is controlled by an
individual sequence of steering commands, shown in Figure 9.4. Each output
goes to a specifi c path, and each input comes from a specifi c path. The Chain
operator output can be steered to an association pipeline as well as the Chain
pipeline, which replicates wavefronts.

The commands can reside in a ring attached to each steering structure,
as shown in Figure 9.5. Continually cycling in the ring, they will repeatedly
control the steering structures to resolve successively presented inputs.

In this case the feedback paths of the rings allow indefi nite repetition of
each command sequence, and hence the indefi nite repetition of the expression
as a whole continually resolving successively presented inputs on X, Y,
and C.

The expression is still a spontaneously fl owing pipeline structure coordi-
nated by completeness relations, but it is no longer purely a structure of data
fl ow. It is now a structure of data fl ow integrated with multiple command
N
N
O1
O2
O3
O4
I1
I4
I5
Chain
XYC
SUM
CARRY
I3
I2
I6
OP4
OP7
OP9
OP3
OP8
OP10
Y1
OP2
Y3
Firstsum1
OP5
Firstsum3
OP1
X2
X3
OP6
C2
C3
X1
Y2
C1
Firstsum2
X1
X2
X3
Y1
Y2
Y3
C1
C2
C3
Firstsum1
Firstsum2
Firstsum3
Chain
Firstsum
SUM
CARRY
OP4
OP3
OP10
OP7
OP8
OP9
OP1
OP2
OP6
OP5
Firstsum
Chain
Figure 9.3 Binary full-adder extended in time with pipeline feedback paths.

TIME–SPACE TRADE-OFF 153

INCIDENTAL TIME
fl ows. With the association expression of Figure 9.1, the data wavefronts coor-
dinated their own correctly behaving fl ow. The expression has been frag-
mented into separate components of data fl ow and control fl ow that must be
properly coordinated to correctly express the behavior of the process. The
association relationships are now expressed partly in terms of direct associa-
tion and partly in terms of command sequence. The expression of explicit
control has emerged.

I6
X
Chain
Chain
Y
Chain
Chain
C
Chain
Chain
Firstsum
Chain
Chain
O4
X1
Chain
X2
Chain
X3
-
Y1
Chain
Y2
Chain
Y3
-
C1
