able to the second rank of operators.
The second rank of operators will resolve the control input variable with the 3
values A, O, and X with the 4 value internal variable. The new output equations
are shown in Figure 4.11. Each equation is still a large sum of products, so the
equations have to be resolved in stages. In this instance sum partitioning is applied
to the sum terms. Terms or groups of terms (subsums) that map to 2NCL operators
are expressed individually and then the subsums are summed. Figure 4.11 shows the
chosen sum partitioning. Each subsum can be expressed with one of two possible
operators.
The equation sA þ sO þ sX maps to the generic form AB þ AC þ AD. The oper-
ator in the library that implements this specific equation is operator 17, a threshold 4
operator with a weight of three on the A input. This ensures that if B, C, and D
are independent, the operator will not respond to any combinations of B, C, or D
without A.
In this case, however, B, C, and D (A, O, X), being values of a single variable, are
mutually exclusive and combinations of them cannot occur. The 2 of 4 operator 10
implements the generic equation AB þ AC þ AD þ BC þ BD þ CD. Since B, C,
and D are mutually exclusive the terms BC, BD, and CD will never be presented
to the operator making its behavior in the expression identical to operator 17. So
either operator can be used in the expression. Which operator is used will depend
on the technology and implementation of the library. With a switching technology
such as CMOS, operator 17 will recognize fewer combinations than operator 10 and
will therefore be a simpler operator with fewer transistors. In a threshold-based tech-
nology operator 10 has simpler threshold relationships than operator 17 and could be
the more efficient operator. In drawing these example expressions the choice is often
purely aesthetic.
The other subsums have similar options. The output equation uO þ tO þ uX þ tX
with the generic equation AC þ BC þ AD þ BD is directly resolved by operator 28.
Again, the mutual exclusivity of the inputs allows 2 of 4 operator 10 to be used with
the generic equation AB þ AC þ AD þ BC þ BD þ CD. In this case A and B are
mutually exclusive and C and D are mutually exclusive, masking out terms AB
and CD.
The output subsums tA þ uA and vA þ vO with the generic equation AB þ AC is
directly resolved by operator 8 a threshold 3 operator with a weight of 2 on input
A. The 2 of 3 operator 5 resolves AB þ BC þ AC, but for both subsums B and C
are mutually exclusive and the BC term is masked.
The resulting 2NCL expressions are shown Figure 4.12b with the direct map
operators and in Figure 4.12a with the operators taking advantage of the mutual
exclusivity relationships. The result of the sum partitioned rank of operators is a 5
value internal variable, whose values are then collected through the threshold 1 oper-
ators into the 2 value output variable. Each operator of the second rank requires a
value from the internal variable and a value from the control variable, fulfilling
the completeness criterion and isolating orphan paths from the two variables.
70
2NCL COMBINATIONAL EXPRESSION

sA +sO + sX
tA + uA
vX
vA + vO
uO + tO + uX + tX
AB +AC + AD
AB + AC
AB + AC
AC + AD + BC + BD
AB
8. AB + AC
17. AB + AC + AD
28. AC + BC + AD + BD
B, C and D are mutually exclusive
B and C are mutually exclusive
A and B are mutually exclusive and
C and D are mutually exclusive
sA +sO + sX + tA + uA + vX
vA + vO + uO + tO + uX + tX
Z1
Z0
Output sum partitions
Generic equations
C
D
A
B
4
C
D
A
B
2
10. AB + AC + AD + BC + BD + CD
28
C
D
B
A
C
D
3
3
10. AB + AC + AD + BC + BD + CD
5. AB + BC + AC
A
B
2
A
B
C
3
A
B
C
2
C
D
A
B
2
3. AB
Output equations from internal variable
Figure 4.11
Effect of mutually exclusive inputs on operator behavior and operator selection.

vA + vO + uO + tO + uX + tX
Z1
2
2
2
2
s
t
u
v
A
O
X
2
2
2
Y
Z
0
0
1
0
1
X
C
2
3
1
2
2
2
2
s
t
u
v
A
O
X
2
2
2
2
1
1
Y
1
Z
0
0
1
0
1
X
C
2
2
2
2
2
s
t
u
v
A
O
X
3
3
2
1
1
Y
1
Z
0
0
1
0
1
X
C
4
28
3
3
sA +sO + sX + tA + uA + vX
Z0
a. Threshold technology efficient expression
c. Gate-optimized expression
b. Switching technology efficient expression
Figure 4.12
Final 2NCL expressions of logic unit.

There is one more point to be made about the possibility of optimization after
mapping the 2NCL operators from the Boolean equations. Two operators can be
eliminated by merging the lowest operators of the second rank of Figure 4.12b
with the threshold 1 operators shown in as Figure 4.12c. Presenting the output of
one operator to another operator with a weight equal to the threshold of the other
operator is identical to combining the operator outputs through a threshold 1 oper-
ator. This relationship is illustrated in Figure 4.13. While there are fewer operators in
the expression, it is not clear that creating a more complex operator to save a
threshold 1 operator would be superior in any technology. The threshold 1 operators
are very cheap, and the more complex operators are more expensive.
Structuring 2NCL combinational expressions in terms of progressively generated
internal variables is a straightforward way to ensure the fulfillment of completion
properties and orphan isolating properties of the combinational expression as a
whole. Each internal variable can form a completeness boundary that both propa-
gates progressive completeness through the expression and isolates orphan paths.
4.6
EXAMPLE 3: MINTERM CONSTRUCTION
Another approach is to construct the whole minterm of the input variables, which is
pure sum partitioning. A rank of M of M operators, with M equal to the number of
input variables, individually recognizes each product term. Each operator requires
an input from each input variable, fulfilling the completeness criterion and isolating
orphan paths. Only one operator will assert DATA for each input DATA wavefront,
producing a single large internal variable whose values are collected directly to the
values of the output variable or variables. The minterm approach is always safe,
reliable, and robust. The construction is simple, completeness is fulfilled, and
orphans are isolated. Figure 4.14 shows the minterm expression for the logic unit
of example 2 as well as a binary full adder and the binary-trinary-quaternary
adder of example 1.
The minterm form may actually be optimal in some cases if multiple variables
can be tapped off a single minterm. Consider the binary half adder with two input
variables and two output variables. Figure 4.15 shows the function maps and the
output equations for the binary half adder. There are two equations for the sum
and two equations for the carry. It is clear from inspection that the sum and carry
use the same set of product terms. Two approaches can be taken to generating the
output expressions. The first is to use the minterm of the common terms to generate
a four value internal variable from which values can be collected for both output
3
3
1
1
3
3
3
3
