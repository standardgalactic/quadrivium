projection leftward and downward is the bubble shadow propagating backward
through the pipeline and affecting wavefronts succeeding the delay wavefront.
The projection rightward and upward is the wavefront shadow propagating forward
through the pipeline and affecting the bubbles of wavefronts preceding the delay
wavefront.
Figure 11.1a shows the initial pipeline with 7 variable throughput cycles. The
long delay of cycle 4 will shadow one wavefront in cycles 5 and 3, two wavefronts
in cycles 6 and 2, and three wavefronts in cycles 7 and 1. If any of these shadowed
wavefronts were a long delay, then the long delays would shadow each other.
Figure 11.1b shows a 13 cycle pipeline with a buffer cycle between each variable
throughput cycle. Since the variable cycles are now farther apart, the delay shadow
covers more wavefronts in each variable cycle. The long delay shadow now covers
two wavefronts in the variable cycles 3 and 5 so that if either of the two wavefronts
were long delays they would be shadowed. It covers 4 wavefronts in cycles 2 and 6
and covers 6 wavefronts in cycles 1 and 7. With the single buffer cycles between
each variable cycle the shadow coverage is doubled, making it twice as likely
that the long delay in the middle cycle will shadow or be shadowed by a long
delay in another cycle. This is true for all cycles. It is twice as likely that any
long delay anywhere in the pipeline will be shadowed by another long delay some-
where else in the pipeline, lessening the effect of long delays on the throughput of
the pipeline.
Figure 11.1c shows a 19 cycle pipeline with two buffer cycles between each vari-
able cycle. The shadow coverage of the long delay is now three times larger for each
variable cycle than it was for the pipeline with no buffers, making it three times as
likely that long cycle delays will shadow each other.
This increase of shadow coverage is the mechanism of buffering that increases
pipeline throughput. As more buffers are added, the performance of the pipeline
will asymptotically approach the average behavior of individual cycles. The
shadow model also exhibits the exponential decrease of efficacy with the increase
of buffers between variable cycles as observed in simulation studies [23]:
One buffer provides 100% increase in shadow coverage.
A second buffer provides 50% additional increase in shadow coverage.
A third buffer provides 33.3% additional increase in shadow coverage.
A fourth buffer provides a 25% additional increase in shadow coverage, and so on.
11.1 ENHANCING THROUGHPUT
193

11.1.1
Buffer Structuring for Throughput
Is there an optimal placement of buffer cycles among variable throughput cycles?
The answer has to be the configuration that places the maximum collective distance
between variable cycles and maximizes the shadow coverage among them. It has
been shown by simulation that the inverted bowl configuration, placing all the buf-
fers in the middle of the pipelines, is superior to evenly distributing buffers among
variable throughput cycles [62]. Why this is so can be seen in the table of Figure 11.2
where the shadow coverage for three configurations of a pipeline with 6 variable
cycles and 5 buffer cycles is tallied.
In the table of Figure 11.2 A, B, C, D, E, and F are variable throughput cycles and
b represents a buffer cycle. The vertical columns show the shadow coverage of each
variable cycle for each other variable cycle. In the table of Figure 11.2a, variable
cycle A covers 2 wavefronts of cycle B, 4 wavefronts of cycle C, and so on.
Cycle B covers 2 wavefronts of cycle A, 2 wavefronts of cycle C, and 4 wavefronts
of cycle D. In the table of Figure 11.2b, A covers 1 wavefront of cycle C, 2 wave-
fronts of cycle C, 8 wavefronts of cycle D, and so on. It can be seen that the total
shadow coverage obtained from the 5 buffers is larger for the case of the buffers con-
centrated in the middle of the pipeline (160 for center grouped, 140 for distributed)
pipeline configuration
A b B b C b D b E b F
Shadow coverage for cycle A
0 2 4 6 8 10
Shadow coverage for cycle B
2 0 2 4 6 8
Shadow coverage for cycle C
4 2 0 2 4 6
Shadow coverage for cycle D
6 4 2 0 2 4
Shadow coverage for cycle E
8 6 4 2 0 2
Shadow coverage for cycle F
10 8 6 4 2 0
total shadow coverage
30 22 18 18 22 30 = 140
pipeline cycle
1 2 3 4 5 6 7 8 9 10 11
pipeline configuration
A B C b b b b b D E F
Shadow coverage for cycle A
0 1 2 8 9 10
Shadow coverage for cycle B
1 0 1 7 8 9
Shadow coverage for cycle C
2 1 0 6 7 8
Shadow coverage for cycle D
8 7 6 0 1 2
Shadow coverage for cycle E
9 8 7 1 0 1
Shadow coverage for cycle F
10 9 8 2 1 0
total shadow coverage
30 26 24 24 26 30 = 160
a. Distributed buffers
b. Center grouped buffers
pipeline cycle
1 2 3 4 5 6 7 8 9 10 11
pipeline configuration
b b A B C D E F b b b
Shadow coverage for cycle A
0 1 2 3 4 5
Shadow coverage for cycle B
1 0 1 2 3 4
Shadow coverage for cycle C
2 1 0 1 2 3
Shadow coverage for cycle D
3 2 1 0 1 2
Shadow coverage for cycle E
4 3 2 1 0 1
Shadow coverage for cycle F
5 4 3 2 1 0
total shadow coverage
15 11 9 9 11 15
=70
c. Edge grouped buffers
Figure 11.2
Shadow coverages for three buffer configurations.
194
PIPELINE BUFFERING

and that more long delays will shadow each other and reduce their effect on the
throughput.
It should be obvious to the reader that placing the buffers at the beginning or end
of the pipeline leaving the variable cycles all grouped together, as shown in Figure
11.2c, will have no effect at all on the throughput of the pipeline. This configuration
is equivalent to no buffering at all, and the shadow coverage is only 70.
11.1.2
Correlated Variable Cycle Behavior
A pipeline with correlated delay behavior may deliver higher throughput than one
with uncorrelated delay behavior [3]. Since the delay of a cycle is typically data
dependant and the distribution of the data is generally not controllable, it is unlikely
that the relationships of the long delays can be managed. But, if they by some chance
can be managed, then they can be placed in relationships to maximize mutual
shadowing.
This is the case for a pipeline in which for each waverfront the delay is the same
in all cycles; a slow waverfront is slow in all cycles and a fast wavefront is fast in all
cycles. For any consecutive long delay wavefronts, the slow cycles of the first wave-
front will shadow all but the last cycle delay of the long delays of the second wave-
front, greatly reducing the overall effect of long delays on the throughput. In
Figure 11.3 wavefront 3 and wavefront 5 have equally long delays through all
cycles of the pipeline. Wavefronts 4, 6, 7, and 8 all have fast cycles. Wavefront 3
effectively shadows almost all of the delays of wavefront 5. Since wavefront data
3 is two wavefronts away from wavefront data 5, only the delays from the last
r2
p2
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
delay from last
2 cycles of
wave 5 delay
delay from all
cycles of wave
3 delay
Figure 11.3
Correlated long pipeline delays shadowing each other.
11.1 ENHANCING THROUGHPUT
195

two cycles of wavefront 5 are unshadowed and have an effect on the throughput. The
bubble shadow of the last cycle of wave 3 is shown not shadowing the last two cycles
of wave 5. All the other delays of wavefront 5 are shadowed by the delays of wave-
front 3. Once the initial price is paid for the first unshadowed slow wavefront, suc-
cessive slow wavefronts will largely shadow each other.
11.1.3
Summary of Throughput Buffering
Buffering works by increasing the pipeline distance between variable delay cycles
and allowing long delays more opportunity to shadow each other lessening their
affect on the throughput. Buffering to improve throughput is only effective when
there is variability of delay behavior among the cycles. If the delay behavior of
all cycles of a pipeline is constant, then buffering will have no effect on the
throughput.
Whether or not two long delays shadow each other depends on the separation
slope between them. The separation slope is how many wavefronts apart they are
over how many cycles apart they are. If this ratio is less than 1.0, then they
shadow each other. If it is greater than or equal to 1.0, then they do not shadow
each other.
The farther apart long delays are in terms of wavefronts, the less likely they will
shadow. The farther apart long delays are in terms of cycles, the more likely they
will shadow. If long delays are rare, they will likely affect the throughput and not
shadow, so buffering will have little effect. As they become more frequent, they
will begin shadowing and lessen their collective effect on the throughput, so buffer-
ing will have a significant effect.
11.2
BUFFERING FOR CONSTANT RATE THROUGHPUT
How can the variable delay behavior of a logically determined pipeline be buffered
to interact with constant throughput behavior? The answer can be understood in
terms of a competition of intersecting shadows.
Figure 11.4 shows the baseline simulation configuration of a 10 cycle pipeline.
Cycle 1 is the input cycle for the pipeline and cycle 10 is the output cycle for the
pipeline, both of which must maintain a constant cycle period. They might represent
two clocked interfaces, for instance. The cycle period for both cycles must be iden-
tical, but they need not be in phase. If the constant cycle periods are not identical, the
pipeline between them will eventually either fill up and fail to provide a bubble for
the input cycle or empty and fail to provide a wavefront for the output cycle. Cycle 5
is the variable delay behavior cycle. This cycle can represent a pipeline of any length
with a variable delay behavior profile. Cycles 2, 3, 4, 6, 7, 8, and 9 are the buffer
cycles. Variable delays will be inserted into cycle 5 to be buffered to constant
delays into cycles 1 and 10. The periods of all the buffer cycles, and also initially
that of cycle 5, are 3 tics faster than the input and output cycles.
196
PIPELINE BUFFERING

The basic problem is to ensure that the input and output cycles never have to wait.
There must always be a bubble waiting to enter the input cycle, and there must
always be a wavefront waiting to enter the output cycle. The basic buffering strategy
is to keep a population of bubbles waiting to flow through the input cycle and to keep
a population of wavefronts waiting to flow through the output cycle. These popu-
lations will wax and wane with the varying delay behavior of the variable delay
cycle, but neither population must ever be depleted.
To effect the buffering a pipeline must be primed with a population of waiting
wavefronts. Normally this would be accomplished by just initializing data wave-
fronts in the pipeline. The simulation does not support initialization of wavefronts,
so the pipeline is primed with a long output delay at the beginning. The delay causes
wavefronts that flowed through the input to back up in the pipeline as shown in
Figure 11.4. After wave 5 passes through cycle 6, the pipeline is primed for buffering
with a population of waiting bubbles and a population of waiting wavefronts.
11.2.1
The Buffering Behavior
Waits are caused by shadows projected from the input and output cycles. To keep the
populations of bubbles and wavefronts waiting, the input and output cycle must pro-
ject dominating shadows into the pipeline. This means that the periods of the input
and output cycles must be greater than the periods of the buffer cycles. If the delays
of the buffer cycles were greater, they would project dominant shadows. These sha-
dows would cause the input and output cycles to wait, which is precisely what must
r2
p2
r1
p1
r3
p3
r4
