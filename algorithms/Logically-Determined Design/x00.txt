LOGICALLY DETERMINED DESIGN

LOGICALLY DETERMINED DESIGN
CLOCKLESS SYSTEM DESIGN WITH
NULL CONVENTION LOGICTM
Karl M. Fant
Theseus Research, Inc.
A JOHN WILEY & SONS, INC., PUBLICATION

Copyright # 2005 by John Wiley & Sons, Inc. All rights reserved.
Published by John Wiley & Sons, Inc., Hoboken, New Jersey.
Published simultaneously in Canada.

Fant, Karl M.
Logically determined design: clockless system design with NULL convention logicTM/Karl M. Fant.
p. cm.
“A Wiley-Interscience publication.”
Includes bibliographical references and index.
ISBN 0-471-68478-3
1. Asynchronous circuits–Design and construction. 2. Logic, Symbolic and mathematical.
3. Logic design. 4. Computer architecture. I. Title.
TK7868.A79F36 2005
621.381–dc22
2004050923
Printed in the United States of America

To Michelle, Lara, and Omi

&CONTENTS
Preface
xv
Acknowledgments
xvi
1. Trusting Logic
1
1.1
Mathematicianless Enlivenment of Logic Expression
1
1.2
Emulating the Mathematician
2
1.3
Supplementing the Expressivity of Boolean Logic
2
1.3.1
The Expressional Insufficiency of Boolean Logic
2
1.3.2
Supplementing the Logical Expression
3
1.3.3
Coordinating Combinational Expressions
3
1.3.4
The Complexity Burden of the Time Interval
4
1.3.5
Forms of Supplementation Other Than the Time Interval
4
1.3.6
The Complexity Burden of Asynchronous Design
5
1.3.7
The Cost of Supplementation
5
1.4
Defining a Sufficiently Expressive Logic
5
1.4.1
Logically Expressing Data Presentation Boundaries
6
1.4.2
Logically Recognizing Data Presentation Boundaries
6
1.4.3
Logically Coordinating the Flow of Data
8
1.4.4
Mathematicianless Completeness of Expression
9
1.5
The Logically Determined System
9
1.6
Trusting the Logic: A Methodology of Logical Confidence
10
1.7
Summary
10
1.8
Exercises
11
2. A Sufficiently Expressive Logic
13
2.1
Searching for a New Logic
13
2.1.1
Expressing Discrete Data Presentation Boundaries
13
2.1.2
Logically Recognizing Discrete Data Presentation
Boundaries
13
2.1.3
The Universality of the NULL Function
14
2.1.4
Bounding the Behavior of a Combinational Expression
14
2.1.5
Relationship of 4NCL to Boolean Logic
16
vii

2.2
Deriving a 3 Value Logic
16
2.2.1
Expressing 3NCL State-holding Behavior
17
2.2.2
3NCL Summary
18
2.3
Deriving a 2 Value Logic
18
2.3.1
The Data Differentiation Convention
19
2.3.2
2NCL as a Threshold Logic
20
2.3.3
2NCL in Relation to Boolean Logic
21
2.3.4
Subvariable Expressivity
22
2.3.5
Completeness at the Variable Level
22
2.3.6
The 2NCL Orphan Path
22
2.3.7
2NCL Summary
26
2.4
Compromising Logical Completeness
27
2.4.1
Moving Logically Determined Completeness
Boundaries Farther Apart
27
2.4.2
No Logically Determined Boundaries in Data Path
28
2.4.3
No Logically Determined Boundaries at All
29
2.5
Summary
30
3. The Structure of Logically Determined Systems
31
3.1
The Cycle
31
3.1.1
The Ring Oscillator
31
3.1.2
Oscillator Composition with Shared Completeness Path
32
3.1.3
Cycles and 2NCL Data Paths
34
3.1.4
Data Path Abstraction
35
3.1.5
Composition in Terms of Cycles
35
3.1.6
Composition in Terms of Registration Stages
36
3.2
Basic Pipeline Structures
36
3.2.1
Pipeline Fan-out
36
3.2.2
Pipeline Fan-in
37
3.2.3
The Pipeline Ring
37
3.2.4
Cycle Structure Example
38
3.3
Control Variables and Wavefront Steering
39
3.3.1
Steering Control Variables
39
3.3.2
Fan-out Wavefront Steering
39
3.3.3
Fan-in Wavefront Steering
44
3.3.4
Wavefront Steering Philosophy
47
3.3.5
Concurrent Pipelined Function Paths
50
3.4
The Logically Determined System
50
3.4.1
Managing Wavefront Interaction
51
3.4.2
A Simple Example System
51
3.5
Initialization
55
3.5.1
Initializing the System
55
3.5.2
Initializing Data Wavefronts
56
viii
CONTENTS

3.6 Testing
57
3.7 Summary
58
3.8 Exercises
58
4. 2NCL Combinational Expression
59
4.1
