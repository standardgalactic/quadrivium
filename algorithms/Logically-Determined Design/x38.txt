2
2
2
2
2
2
T F
1
1
1
2
1
1
s
s
ADD2
mode 2
mode 3
mode 4
mode 5
mode 6
mode 7
mode 8
mode 9
mode 10
mode 11
source 2
source 3
source 4
source 5
source 6
A
D
D
Data path
control path
Acknowledge path
Figure 6.3
A program counter register with several branch modes and several branch
address sources.
116
MEMORY ELEMENTS

model in that there are not multiple Reads between writes. Every Read is followed
by a Write. This allows a somewhat simpler control structure. There are 11 different
branch modes represented by an eleven value control variable. Three of these modes
are dependent on a condition code. Each decoded instruction will assert one mode
variable with one value asserted. There are six sources of branch addresses such
as memory, the register file and other registers, and two of these are added to the
address wavefront currently stored in the ring.
This is basically a ring register with a big fan-in structure. The primary issues for
this structure are completeness relationships in relation to the stored wavefront and
orphan paths in relation to the combinational ADD expressions.
Completeness Issues. The fan-in structure to the ring is a varying fan-in struc-
ture. The fan-in might include the stored wavefront, an external wavefront, or both
when the external wavefront is added to the stored wavefront. In this case the current
address wavefront stored in cycle S is always either used or consumed to make way
for a new address wavefront. So all of the selection registration stages will acknowl-
edge the registration stage S. For the three selections that use the stored wavefront, the
acknowledge is a normal wavefront flow acknowledge. For the four selections that do
not use the stored wavefront, the acknowledge overwrites the stored wavefront per-
forming a consume. A new wavefront will enter the ring and be stored in cycle S.
The selections that do not use the stored address wavefront must nevertheless
ensure that the wavefront is properly stored in cycle S before asserting the acknowl-
edge to consume it. To indicate the S storage is complete, the completion of the S
registration stage is presented as a spanning enable to the selection registration
stages that do not use the stored wavefront. This ensures that the current address
wavefront is stored in cycle S when an acknowledge is generated to overwrite
and consume it.
Orphan Issues. The ADD2 combinational expression is placed in the cycle
before storage cycle S to avoid wavefront propagation issues with the circulating
wavefront. If the ADD2 were in the path S, the whole combinational expression
would become an orphan path for the case of a consume cycle. Placed in the pre-
vious cycle of the ring, it is an always effective component of the data path and
hence is never an orphan path.
The ADD expressions in the fan-in structure are placed after the select regis-
tration stages to avoid orphan problems. If the ADDs were placed before the
select registration stages, they would be on orphan branch paths, and the whole
ADD expression would be an orphan path every time its registration stage is not
selected. Placed after the select registration stages, they are presented only with
effective wavefronts and are never orphan paths.
6.2.2
A Counter Register
The counter register illustrates a register with multiple output destinations. The
counter register counts down from a preloaded number and, with each count, outputs
6.2 COMPLEX FUNCTION REGISTERS
117

whether the count is equal to zero or not equal to zero. The initial count value can be
written from one source, and the current count value can be Read out to two desti-
nations. The counter register of Figure 6.4 illustrates the fan-out steering structure
for multiple output destinations.
The stored wavefront is steered to one of three destinations as well as consumed
for the Write operation. For the count operation, the stored wavefront number is
decremented and recirculated in the ring. The equal/not equal variable is presented
to an output path. For Read 1 and Read 2 the stored wavefront is steered to the appro-
priate output path and is recirculated without change.
6.3
THE CONSUME/PRODUCE REGISTER STRUCTURE
Another approach to implementing a register, somewhat more efficient in both
energy and hardware than circulating the wavefront in a ring, is to stop the wavefront
and sample it as desired. This involves an auto consume cycle with an inverted phase
relationship. For most cycles in a system the stable idle state is NULL, and an
occasional DATA wavefront flows through it. For the phase inverted cycle the
stable idle state is DATA, and an occasional NULL wavefront flows through it.
Figure 6.5 shows a stretched out graphic form of the register and a corresponding
2NCL expression for a data path of a single 4 value variable. The register consists of
a phase inverted storage/consume registration stage (SC) followed by a produce
registration stage (& and P), both coordinated by a 2 value control variable.
While there is a data path (S) between the storage/consume and produce registration
stages, it is not part of a cycle, and there is no direct coordinating interaction
between the two registration stages. The two registration stages do not form a
cycle. Instead, the single control variable spans the two registration stages and
1
S
w
r
s
1
source
registration
stage
1
W/C/R1/R2
2
2
2
2
2
2
1
S
U
B
1
1
1
1
C
= â‰ 
Data path
control path
Acknowledge path
W -> Write R1-> Read to 1
C -> Count R2-> Read to 2
Figure 6.4
Counter register with multiple output paths.
118
MEMORY ELEMENTS

coordinates their behavior. The control pipeline presents a sequence of Reads or
Writes one at a time. The NULL control wavefront ensures that each operation is
completed before the next operation is begun and that they never interfere.
Figure 6.6a shows the complete register structure and its input and output
pipelines. Figure 6.6b shows the Write control cycle. Notice that there are three
inversions in the phase-inverted Write control cycle. Figure 6.6c shows the Write
input cycle. Figure 6.6d shows the auto consume cycle of registration stage SC.
Figure 6.6e shows the Read/produce cycle.
&
W /R
S
1
S
P
C
I
O
S
2
2
2
2
1
1
2
2
1
3
3
3
3
R
W
1
2
2
2
2
2
2
2
2
1
1
&
S
P
C
I
O
Figure 6.5
Consume/produce register structure.
a. Data path cycles and control path cycle
b. Write control cycle
&
W/R
S
1
S
P
C
I
O
S
S
C
W/R
1
S
S
C
S
S
C
I
&
S
P
W/R
1
Figure 6.6
Cycle structure of the consume/produce register.
6.3 THE CONSUME/PRODUCE REGISTER STRUCTURE
119

A wavefront is captured and stably maintained on path S by the SC registration
stage. It is read by producing a new data wavefront and NULL wavefront from the
stored wavefront via the produce registration stage.
6.3.1
The Read Cycle
The Read wavefront is produced through the Boolean AND operators (&) via the
stable wavefront stored on path S and the Read control value. This is one of the
very few places in logically determined design where the Boolean AND operator
is useful and benign. In Figure 6.7a the register begins in a stable state with an
input data wavefront and waiting for a control variable wavefront. In Figure 6.7b
a control variable arrives with a Read value. This enables the DATA wavefront
values through the rank of AND operators, producing a DATA wavefront that
flows into the output pipeline. The data wavefront flows through registration stage
P, which requests NULL from the control registration stage W/R.
In Figure 6.7c the control variable NULL wavefront arrives and forces a NULL
