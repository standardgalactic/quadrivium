p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
waiting wavefronts
waiting bubbles
priming
delay
Figure 11.4
Baseline rate equalization buffer.
11.2 BUFFERING FOR CONSTANT RATE THROUGHPUT
197

not happen. So the buffer cycles must be strictly faster than the input and output
cycles. To this end the buffer cycle periods of the simulation are 3 tics faster than
the input and output cycles.
Wavefront shadows project forward into the pipeline from the input cycle caus-
ing bubbles to wait. Bubble shadows project backward into the pipeline from the
output cycle causing wavefronts to wait. Since the input and output cycle delays
are identical and greater than all the other delays in the pipeline, their shadows
encounter no compettion until they meet in the middle of the pipeline. By shadowing
each other, the delays exactly cancel. The projected shadows are shown in
Figure 11.5. The shadows are continually projected with every wavefront, but for
purposes of illustration a single shadow from each end canceling in the middle is
shown in the upper part of the diagram. Three consecutive intersecting shadows
from each end are shown in the lower part of the diagram.
Each shadow intersection accumulates delay isolation for the input and output
cycles. With each intersection it takes a longer delay to have an effect on the project-
ing cycle. This is explained in Section 10.4.3 of Chapter 10. Since the internal cycles
are 3 tics faster than the input and output cycles, the projected shadows cause the
bubbles and wavefronts in each cycle to wait 3 tics as they propagate through the
pipeline.
Consider the bubble shadows projected from cycle 10. Cycle 9 is covered by only
one shadow from cycle 10. Cycle 8 is covered by 2 shadows. Cycle 7 is covered by 3
r2
p2
r1
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
REGISTER PROGRESSION (SPACE)
WAVEFRONT PROGRESSION (TIME)
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
Bubble shadows
Wavefront shadows
Figure 11.5
Wavefront and bubble shadows projected into the pipeline.
198
PIPELINE BUFFERING

shadows, and so on. It would take 4 tics of additional delay in cycle 9 to affect
the delay of cycle 10. For cycle 8 it would require 7 tics of additional delay to over-
come the 3 tic wait of cycle 8 as well as the 3 tic wait of cycle 9 to affect the delay of
cycle 10. Cycle 7 would require 10 tics of additional delay to affect cycle 10, and so
on. These are the effects of the intersecting shadows. Cycle 5 sees a cascade of four 3
tic waits and, with its own 3 tic wait, would have to exhibit an additional delay of 16
tics to affect the delay of cycle 10.
The stage is now set to buffer the variable delays of cycle 5 and to clearly under-
stand the mechanism and its limitations. Intersecting shadows projected from cycle
5 continually compete with intersecting shadows projected from the input and output
cycles. If the input and output shadows always win, then the input and output cycles
will never be delayed. If cycle 5 shadows ever win, then there will be a delay in cycle
1 and cycle 10.
The score of this competition is kept by the waiting wavefronts and bubbles in the
pipeline. If, during a cycle 5 delay, all the wavefronts ahead of cycle 5 in the pipeline
are emptied and the delayed wavefront from cycle 5 does not get to cycle 10 in time,
then there will not be a wavefront to serve the next request of cycle 10. The wave-
front shadows projected from cycle 5 overcome the bubble shadows projected from
cycle10. If, during a cycle 5 delay, wavefronts flowing into the pipeline build up
behind cycle 5, all the bubbles are emptied out, and the delayed bubble from
cycle 5 does not get to cycle 1 in time, then there will not be a bubble to serve
the next request of cycle 1. The bubble shadows projected from cycle 5 overcome
the wavefront shadows projected from cycle 1. There must be enough wavefronts
and bubbles with a sufficient budget of waits to accommodate the worst case beha-
vior of the variable delays of cycle 5.
One way to understand the behavior is in terms of debits and credits to a wait
account. The account is initialized with a deposit of waits. This initial deposit of
waits depends on the number of buffer cycles, the number of wavefronts initialized
in the pipeline, the period of the buffer cycles, and the period of the input and output
cycles. The amount of wait maintained by each buffer cycle is the input–output
cycle period minus the buffer cycle period. Unlike buffering for throughput where
there is no advantage to making a buffer cycle faster than the slowest cycle of the
variable cycles, here there is an advantage to making the buffer cycles as fast as
possible. The faster a buffer cycle is in relation to the input–output cycles, the
more wait it can maintain. This is illustrated in Figure 11.6, which is configured
of buffer cycles whose period is 5 tics less than the input–output cycle periods.
In this case cycle 5 must exhibit a 26 tic delay to affect the output cycles.
If the pipeline buffering is balanced in terms of the number of waiting wavefronts
and waiting bubbles, then the behavior of the input and output buffering should be
symmetric and the buffering behavior can be characterized just in terms of the wait-
ing wavefronts. The number of wavefront cycles initialized times the amount of wait
maintained by each cycle will determine the initial wait account for the pipeline. The
baseline simulation is 4 wavefronts times 3 tics per wavefront for an initial account
of 12 tics of wait.
11.2 BUFFERING FOR CONSTANT RATE THROUGHPUT
199

11.2.2
The Competition
Figure 11.7 shows a series of cycle 5 wavefronts that illustrates the shadow compe-
tition and the wait account behavior. Cycle 5 is represented by p5 in the chart. The
first long delay of wavefront 7 in cycle 5 projects a wait shadow of 12 tics against the
input–output cycle shadows. This projected wait uses up all the bubble waits of
cycles 2, 3, and 4 and all the wavefront waits of cycles 6, 7, 8, and 9, it just fails
to overcome the shadows of the end cycles. The transaction value of this delay is
–12. Twelve tics of waits were withdrawn from the account.
With succeeding fast periods of cycle 5, bubbles and wavefronts rush through and
replenish the wait account. The period of these wavefronts in cycle 5 are 3 tics
shorter than the input–output cycles, and the transaction value for these cycles is
þ3. As each wavefront encounters the shadow from the output cycle and is
caused to wait, it redeposits 3 tics of wait in the account. The bubble shadow of
cycle 10 can be seen re-extending as wave 8 has to wait in cycles 9, wave 9 has
to wait in cycle 8, wave 10 has to wait in cycle 7, and wave 11 has to wait in
cycle 6. Finally, the shadows reach cycle 5, and although cycle 5 still has a fast
period, it is now shadowed and has to wait. Continued fast behavior of cycle 5
will not increase the wait account nor in any way affect the behavior of the pipeline.
The wait account is full again, and the shadows of the input–output cycles are re-
extended to the center of the pipeline and mutually shadow each other.
In the end, a delay in wavefront 15 in cycle 5 causes a cycle period 15 tics longer
than the end cycle period, which projects a wait shadow of 15 tics with a transaction
of 215 against the refilled wait account. This uses up all 12 wait tics, overdrawing
r2
p2
r1
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
Figure 11.6
Faster buffer cycles maintaining more wait.
200
PIPELINE BUFFERING

the account, and causes a 3 tic extension of the input–output cycle periods, delaying
them in time by 3 tics.
11.2.3
The Battle of Intersecting Shadows
Consecutive delay shadows from cycle 5 can intersect and gang up on the intersecting
shadows of the input–output cycles. This intersecting and ganging up is manifested
fested as consecutive negative transactions. Figure 11.8 shows several consecutive
delays in cycle 5, each of which causes a period of 6 tics greater than the input–
output cycle periods projecting a 6 tic wait shadow and a transaction to the account
of 26. No delay singly casts a sufficient shadow to reach an end cycle, but the shadows
accumulate by intersection. They finally overdraw the wait account and overcome the
input–output cycle shadows, causing delays in the input–output cycles.
Notice that once the wait account is overdrawn and a delay is caused in the
input–output cycles, the continued 23 transactions do not increase the delay of
the input–output cycles. There is no further increasing deficit applied to the
input–output cycles. When the wait account is empty, delays from cycle 5 simply
pass through the input–output cycles. When positive transactions occur, the wait
account begins refilling immediately.
11.2.4
The Standoff
While negative value transactions withdraw from the wait account until it is empty
and positive value transactions deposit to the wait account up to its limit; 0 value
r2
p2
r1
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
