Figure 3.21
Baseline fan-in steering structure, MUX.
a. Steering from AB or BC
b. Steering from A or AB or C
2
2
2
A
B
C
2
1
2
comb
exp
2
2
2
A
B
C
2
1
3
comb
exp
Figure 3.22
Multi-path fan-in to a combinational expression.
3.3 CONTROL VARIABLES AND WAVEFRONT STEERING
45

number of variables. But when a path can receive a different configuration of vari-
ables for each different instance, the determination of completeness must include a
specification of which configuration of variables is involved. Typically there is a
control variable that determines the configuration of variables, and that determining
variable can be used to condition the completeness relationships.
In the example the combinational expression can receive A or A and B or C and
cannot, on its own terms, determine which configuration is presented. The fan-in
control variable determines the configuration, and the fan-in control variable must
be used to condition the completeness behavior of the combinational expression.
The first inclination might be to simply extend the control variable into the com-
binational expression as in Figure 3.23 in the same manner that the control variable
was extended into the acknowledge path. This, however, does not work.
To understand what is incorrect and how to make it correct, one must consider the
cycle structures. Remember that every path in a system must be a path of a cycle,
that a cycle must have an odd number of inversions, and that signals presented to
a completeness path must be in the same monotonic transition phase. Figure 3.24
shows the cycle model for the fan-in structure corresponding to Figure 3.23. The
control value path has three branches. Branch y enables the source paths. Branch
x conditions the acknowledge paths, and branch z conditions the combinational
expression. If for each branch path one traces the closed path, the closed path will
be a cycle or it will not be a cycle. The closed paths for each branch of the control
variable are shown in Figure 3.24b, c, and d. The closed paths for branch paths x and
y form a cycle with a single inversion. The closed path for branch path z has two
inversions. Branch path z is not a path of a cycle.
The solution shown in Figure 3.25a is to pipeline the control variable one more
cycle before presenting it to the combinational expression of cycle D. Path z is
divided into two paths z1 and z2 by inserting a shared completeness path creating
2
2
2
A
B
C
2
1
3
comb
exp
Figure 3.23
Incorrect presentation of the control variable to the combinational expression.
46
THE STRUCTURE OF LOGICALLY DETERMINED SYSTEMS

a new cycle. The individual closed paths for z1 and z2, are now cycles, as shown in
Figure 3.25b and c. The correct fan-in structure is shown in Figure 3.26.
3.3.4
Wavefront Steering Philosophy
Logically determined systems are fan-out control oriented in contrast to the fan-in
control orientation of clocked Boolean systems. Figure 3.27 shows a fan-out to
2
3
2
2
2
A
B
C
D
2
a.
2
x
y
z
3
2
B
C
2
b.
y
2
B
C
2
c.
x
3
2
2
B
C
D
2
2
z
d.
Figure 3.24
The cyclic paths of the control variable.
2
3
2
2
3
A
B
C
D
2
a.
2
2
z1
z2
3
2
z1
2
D
2
2
z2
b.
c.
Figure 3.25
The control variable extended with a pipeline stage.
3.3 CONTROL VARIABLES AND WAVEFRONT STEERING
47

function units then a result fan-in structure. Wavefronts are steered from the source
registration stage to the selected function unit. The wavefront propagates only
through the data path of the selected function unit. The other two data paths
remain NULL and quiescent. Exiting the function unit, the wavefront flows through
the fan-in node with no interference from the other two paths, which remain NULL,
and the destination stage acknowledges the steering stages, which allow NULL to
pass resetting the selected function unit path. The destination stage receives the
NULL wavefront and acknowledges the data path and control path to allow the
next data wavefront, which will be steered by the next control wavefront.
2
2
2
A
B
C
2
2
3
comb
exp
Figure 3.26
A or AB or C fan-in structure with control variable pipelined to combinational
expression.
function unit
c
1
A or B or C
1
function unit
a
function unit
b
Figure 3.27
Fan-out (DEMUX) oriented function select control.
48
THE STRUCTURE OF LOGICALLY DETERMINED SYSTEMS

Figure 3.28 shows a postfunction fan-in oriented control structure. In this case the
wavefront from the source registration stage flows through all three function unit
data paths, and all three assert a wavefront to the fan-in structure. The fan-in control
selects one of the wavefronts to be allowed through to the destination registration
stage. The fan-in control acknowledges the source registration stage, which
allows a NULL wavefront to pass and flow through all three function unit data paths.
There are two reasons why not to use this structure for logically determined
system design. The first is that the paths through the unselected functions are inef-
fective data paths that are very long orphan paths. This violates the strategy of mini-
mizing and isolating orphan paths and compromises the logical determinability of
the system. In the fan-out select structure the orphan paths are isolated to the wire
branches from the source stage to the selection registration stages. The second is
that flowing wavefronts through the unselected functions is an unnecessary waste.
Two of the propagated wavefronts get thrown away.
In a logically determined system wavefronts are steered through effective data
paths, and there should only very rarely be circumstances where a propagated wave-
front is thrown away. One such circumstance might be with speculative resolution
where two results are purposely precomputed and a later one is selected while the
other is thrown away, such as in a carry select adder.
So in logically determined design it makes sense to pre-steer wavefronts at fan-
out and makes no sense to postselect wavefronts at fan-in. Clocked Boolean design
is just the opposite. Boolean logic functions will always output data regardless of
whether or not they received valid data. At a result fan-in node one data set must
be selected. Preselecting at fan-out is logically meaningless. One might preselect
to avoid data path switching and save power but all three functions will still
assert data into the fan-in node and one must be selected.
One might say that while clocked Boolean design is inherently MUX oriented,
logically determined design is inherently DEMUX oriented.
1
1
1
function unit
c
function unit
a
function unit
b
Figure 3.28
Fan-in (MUX) oriented function select control.
3.3 CONTROL VARIABLES AND WAVEFRONT STEERING
49

3.3.5
Concurrent Pipelined Function Paths
While one should always steer with fan-out select, there are circumstances where
fan-in select is necessary. For instance, if the function paths are pipelined, the exclu-
sivity of wavefronts arriving at the fan-in node is not preserved. Wavefronts can be
launched sequentially into multiple function paths and may arrive at the fan-in node
out of sequence. They must be resequenced into the fan-in node by a fan-in control
structure as shown in Figure 3.29. This can be accomplished by pipelining the fan-
out control to the fan-in control. The Nth fan-out control wavefront will steer the Nth
data wavefront into the function structure and the same Nth control wavefront will
steer the Nth data wavefront out of the function structure through the fan-in node.
The data wavefronts are correctly sequenced through the structure by the control
wavefronts. The structure supports opportunistic concurrent activity among the
functions units as well as the pipeline concurrency within the function units.
3.4
THE LOGICALLY DETERMINED SYSTEM
The purpose here is to give the reader an intuitive sense of the structure and behavior
of a logically determined system, which is quite different from the structure and
behavior of the familiar clocked synchronous system. At its most essential a logi-
cally determined system is a complex structure of coupled oscillators. At a higher
level of abstraction it is a structure of pipelines through which Information flows
