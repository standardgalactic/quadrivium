p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
delayed
delayed
Figure 11.7
Long delays in cycle 5.
11.2 BUFFERING FOR CONSTANT RATE THROUGHPUT
201

transactions do not affect the account at all. Figure 11.9 shows a sequence of delays
in cycle 5 with transaction values of 0. There is an initial long delay in wavefront 7
of cycle 5 with a transaction value of 212 that empties the wait account. It does not,
however, cause any delay in the input–output cycles. This wavefront is followed by
a sequence of wavefronts that passes through cycle 5 with the same period as the
input–output cycle periods, giving them a transaction value of 0. This series of
wavefronts cast a shadow with the same wait value as the input–output cycles
cast. These shadows meet and mutually shadow with no net effect on the behavior
of the pipeline. The wait account does not change. Finally, in wavefront 14 in cycle
5, a delay causing a period 3 tics longer than the input–output cycles presents a 23
transaction to the depleted wait account and causes a delay in the input–output
cycles.
11.2.5
Summary of Buffering for Constant Rate Throughput
If the input–output cycles must continually exhibit constant cycle periods, the wait
account must never be overdrawn, and the input–output shadows must never be
overcome. This depends on the behavior profile of the variable cycles in the pipeline
and the capacity of the buffering wait account. The behavior profile must not only
specify the statistical distribution of delays in the variable cycles but also the possi-
bilities of consecutive delays with negative transaction values that can accumulate to
deplete the wait account.
r2
p2
r1
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
delayed
delayed
delayed
delayed
delayed
delayed
Figure 11.8
Intersecting shadows from cycle 5 ganging up on the end cycle shadows.
202
PIPELINE BUFFERING

The drill, in a nutshell, is to ensure that the input–output cycles cast shadows into
the variable rate pipeline that are never challenged and overcome by any shadows
cast by the variable rate pipeline itself. The only way to guarantee this is to
ensure that no wavefronts in the variable rate pipeline have a cycle period greater
than the input–output cycles.
11.3
SUMMARY OF BUFFERING
The basic idea underlying throughput buffering is to get the variable cycles as far
apart as possible to maximize the shadow coverage of each cycle by the other
cycles. The basic idea underlying constant throughput buffering is to keep a popu-
lation of wavefronts and bubbles presented to the constant rate cycles so that they
never have to wait. Both of these buffering behaviors can be understood in terms
of shadows.
Both buffering tasks are accomplished by adding fast cycles to a pipeline. In the
case of throughput buffering, there is no advantage to making the buffer cycles any
faster than the fastest variable cycle. In the case of constant rate buffering, the faster
the buffer cycles are the better.
If there is no variable delay behavior of the cycles of a pipeline, then throughput
buffering can have no effect in either case. Constant rate buffering, on the other
hand, always requires a certain amount of buffering. There must be a population
of initialized wavefronts and the population must be maintained.
r2
p2
r1
p1
r3
p3
r4
p4
r5
p5
r6
p6
r7
p7
r8
p8
r9
p9
r10 p10 r11 p11
WAVE 1
WAVE 2
WAVE 3
WAVE 4
WAVE 5
WAVE 6
WAVE 7
WAVE 8
WAVE 9
WAVE 10
WAVE 11
WAVE 12
WAVE 13
WAVE 14
WAVE 15
WAVE 16
delayed
delayed
Figure 11.9
Delays with transactions values of 0.
11.3 SUMMARY OF BUFFERING
203

While adding buffers can increase the throughput of a pipeline, the buffers will
never decrease the throughput. One can add all the buffers one likes to a pipeline
and still not reduce the throughput. This will just increase the latency.
11.4
EXERCISES
11.1. Can making the NULL wavefront period of each cycle shorter than the DATA
wavefront period of each cycle increase the throughput of a pipeline? Explain
this in terms of shadows.
11.2. Define a procedure to determine the optimal buffering for a pipeline with
given profiles of cycle behavior.
204
PIPELINE BUFFERING

&CHAPTER 12
Ring Behavior
A pipeline can be closed by connecting the inputs to the outputs, as shown in
Figure 12.1 to form a pipeline ring. The behavior of a ring is determined by the
closed nature of its structure. There have been previous characterizations of ring
behavior [17,61]. This characterization does not differ from the literature in sub-
stance but differs in point of view which allows ring behavior to be much more
intuitively and easily understood.
12.1
THE PIPELINE RING
The throughput performance of the ring is the number of wavefronts flowing through
any cycle per unit time. A ring pipeline can exhibit four distinct throughput beha-
viors distinguished by how long it takes a wavefront or a bubble to flow around
the ring and by how long it takes all the wavefronts or bubbles in the ring to flow
through the cycle in the ring with the slowest period, which will be called the refer-
ence cycle. If all cycles in the ring have the same period, then any cycle can be taken
as the reference cycle. The throughput of a ring can be wavefront limited, bubble
limited, delay limited, or perfectly balanced.
2
2
1
1
1
1
2
2
2
2
2
2
Figure 12.1
Four cycle rings.
205
Logically Determined Design: Clockless System Design with NULL Convention LogicTM, by Karl M. Fant
ISBN 0-471-68478-3
Copyright # 2005 John Wiley & Sons, Inc.

A ring has a population of wavefronts and a population of bubbles. The funda-
mental question is, When a wavefront and a bubble flow through the reference
cycle, can either flow around the ring and rejoin its population before the entire
population flows through the reference cycle? This question can be answered in
terms of three periods derived from static delay components of the ring: the cycle
period, the population period, and the rejoin period.
The cycle period is the sum of the delays around a cycle path as shown in
Figure 12.2. For the examples of this chapter the 2 of 2 operator has a delay of
3 tics and the 1 of 2 operator with inverter has a delay of 1 tic. The cycle has a
period of 7 tics.
The wavefront population period is the time it takes for the population of wave-
fronts to flow through the reference cycle, and this is the number of wavefronts in the
ring times the cycle period of the reference cycle. The wavefront rejoin period is the
time it takes for a wavefront to flow around the ring with no waits, and this is the sum
of the delays in the data path of the ring shown in Figure 12.3. The wavefront rejoin
period for this 4 cycle ring is 4 � 3 ¼ 12 tics.
The bubble population period is the time it takes for the population of bubbles to
flow through the reference cycle, and this is the number of bubbles in the ring times
2
2
1
1
1
1
2
2
2
2
2
2
cycle path
Figure 12.2
Cycle path.
2
2
1
1
1
1
2
2
2
2
