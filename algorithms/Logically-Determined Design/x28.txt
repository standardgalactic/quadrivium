0
1
0
1
0
1
0
1
0
1
0
1
0
1
0
1
inversion
inversion
4
3
2
1
0
0
1
0
1
0
1
0
1
0
1
0
1
OR
0
1
1
0
0
1
2
3
AND
0
1
0
1
0
1
2
3
AND
0
1
0
1
0
1
2
3
OR
0
1
1
0
0
1
2
3
AND
0
1
0
1
0
1
2
3
AND
0
1
0
1
0
1
2
3
AND
0
1
0
1
0
1
2
3
AND
0
1
0
1
0
1
2
3
AND
0
1
0
1
0
1
2
3
OR
0
1
1
0
0
1
2
3
OR
0
1
1
0
0
1
2
3
OR
0
1
1
0
0
1
2
3
OR
0
1
1
0
0
1
2
3
OR
0
1
1
0
0
1
2
3
Figure 4.31
NCL clipper expression by direct substitution.

classes correspond to only one PN class. In this case the PN class, M5, for instance,
is self-complementary and provides both complementary functions to the NPN class
M5/M5.
A 2NCL expression of a Boolean function must explicitly express the resolution
of the 1 output and the 0 output of the Boolean function. To express the complete-
ness criterion the two output expressions must be complementary. These compli-
mentary output expression are the complementary expressions of an NPN class.
Consequently the complement of the Boolean function can be expressed by just con-
necting the 2NCL expression upside down. Since for 2NCL, variable inversion is
just a matter routing connections, both the turning upside down and the inverting
of the variables is a matter of properly connecting paths.
This is illustrated in Figure 4.32, showing that the OR expression is just the AND
expression upside down with paths crossed, and vice versa. Both the Boolean AND
and OR functions, members of the NPN class M3/M4, can be implemented with a
single 2NCL expression by properly connecting the input and output paths. The sig-
nificance of this is that any 2NCL expression of a Boolean function that expresses
the completeness criterion is inherently a representative expression of an NPN
class, and all the Boolean functions of the NPN class can be expressed simply by
properly connecting the representative 2NCL expression.
There is a direct correspondence between the NPN Boolean function classes and
2NCL expressions. Just two 2NCL expressions, the AND/OR expression and the
XOR expression, corresponding to the two NPN classes of two variable Boolean
functions M3/M4 and M5/M5 are sufficient to substitute for any two variable
Boolean function.
4.11.3
Mapping NPN Classes for Three-variable
Boolean Functions
Recall from Table 4.1 that the 256 three variable or less Boolean functions map into
14 NPN classes. One of these classes is a constant, and one is a single variable class,
two are two variable classes. This leaves 10 NPN classes of Boolean functions of
exactly three variables. This means that 12 NCL expressions derived from the
0
AND
1
0
1
2
3
0
OR
1
0
1
2
3
0
OR
1
0
1
0
1
2
3
0
AND
1
0
1
0
1
2
3
=
=
=
=
Figure 4.32
NPN function class M3/M4.
4.11 DIRECTLY MAPPING BOOLEAN COMBINATIONAL EXPRESSIONS
91

NPN classes can directly map to all 256 possible Boolean functions of three or fewer
variables.
Figure 4.33 shows the derivation of the 2NCL representative expression for NPN
class M10/M11. The 2NCL combinational expression of Figure 4.33b will map to
48 of the 218 three variable Boolean functions.
The operators of the clipper of Figure 4.31 can be grouped into three variable
Boolean functions of NP class M10 and NP class M11. Each of these can be directly
substituted with the representative expression of NPN class M10/M11 shown in
Figure 4.33. The entire clipper can be expressed with seven instances of a single
expression, as shown in Figure 4.34.
This may not be the most efficient 2NCL implementation of the clipper. It is simply
one of the most expedient implementations. The way it is shown looks like it uses 42
operators, though it is really just seven instances of a single library macro. The previous
expression of Figure 4.24 used only 16 operators but with 16 library macros.
