14
16
3 of 6
2 of 4
1 of 4
1 of 8
1 of 2
2
1 of 16
4 of 8
100,000
Figure 9.5
Switching cost of combination.
164
MULTI-VALUE NUMERIC DESIGN

9.1.7
Summary of Multi-path Numeric Representation
The bottom line is that 1 of 4 encoding seems to be a viable option for numeric rep-
resentation with multi-path encoding. It is clearly superior to 1 of 2 encoding for
transmission. The path resources for 1 of 2 and 1 of 4 are identical, and 1 of 4
requires half the switching energy. While 4 of 8 and 3 of 6 provide slightly better
performances for transmission, their combinational performance is abysmal. Con-
verting them to more efficient combinational codes is very expensive. The 2 of 4
code trails 1 of 4 in both categories. So the N/2 of N encodings are not in the com-
petition. The 1 of N . 4 codes fall below 1 of 2 and 1 of 4 in both categories, so that
leaves only 1 of 2 and 1 of 4 to consider.
While combining 1 of 4 variables is more costly in resources, it has, as shown in
Figure 9.5, a considerable advantage in terms of energy and also speed (fewer stages
of logic, fewer digits asserting a value, shorter addition carry chain). So it may be
well worthwhile to develop, in the context of 2NCL logically determined systems,
1 of 4 or quaternary arithmetic functions. To explore this possibility, a quaternary
1
10
100
1000
10,000
0
200
400
600
800
1000
1200
4 of 8
way off chart ->
2 of 4
1 of 4
1 of 8
1 of 2
2
3 of 6
1 of 16
100,000
Figure 9.6
Combined cost of numeric combination.
A
B
00 00
00 01
00 00
00 01
00 00
00 01
10 10
10 11
00
01
10
11
00 01 10 11
0
1
2
3
A
B
0
0
0
1
0
0
0
1
0
0
0
1
2
2
2
3
0
1
2
3
A
B
00
XOR 2 bit binary encoding
01
01 00
10 11
11 10
10 11 00 01
00
01
10
00 01 10 11
0
1
2
3
A
B
0
XOR Four rail encoding
1
1
0
2
3
3
2
2
3
0
1
0
1
2
A
B
00 01
01 01
10 11
11 11
10 11
11 11
10 11
11 11
00
01
10
11
00 01 10 11
0
1
2
3
A
B
0
1
1
1
2
3
3
3
2
3
3
3
2
3
3
3
0
1
2
3
11 10 01 00
A
NOT 2 bit binary encoding
00 01 10 11
0
1
2
3
A
3
2
1
0
Figure 9.7
Derivation of quaternary logic functions.
9.1 NUMERIC REPRESENTATION
165

ALU is presented and compared to a binary ALU with input and output conversions
between 1 of 4 and 1 of 2 encodings.
9.2
A QUATERNARY ALU
In this section a quaternary ALU is presented with an adder, logical operators, and
a 1 bit shift operator. The quaternary logic operators are derived in Figure 9.7 by
0
1
2
3
A
B
0
1
1
2
2
3
3
0
2
3
3
0
0
1
1
2
0
1
2
3
0
1
2
3
A
B
0
0
0
0
0
0
0
1
0
0
0
1
1
1
1
1
0
1
2
3
Figure 9.8
