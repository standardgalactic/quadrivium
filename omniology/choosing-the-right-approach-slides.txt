@onwebsecurity https://www.onwebsecurity.com
LEAD PENETRATION TESTER
Peter Mosmans
Choosing the Right Approach

Approach:
Where to start
Methodology:
The process itself
Approaches and Methodologies

Asset-centric
Methodologies are Based on Approach
Attacker-centric
Application-centric

Module Objectives
 Asset-centric Approach
 Attacker-centric Approach
 Application-centric Approach
 When to Use Which Approach

Scenario

Architect
Application Team
Interaction 
Designer
Front-end 
Developer
Back-end 
Developer
System 
Administrator

Asset-centric Approach

“If you don’t know WHAT to 
protect, how do you know you’re 
PROTECTING it ?”
Kurt Haase

Scenario
Email addresses
Account credentials
Server

 1. Create a list of assets
 
 

 1. Create a list of assets
 2. Draw assets, components and data flows
 

 1. Create a list of assets
 2. Draw assets, components and data flows
 3. For each element, check for threats

 Advantages
Centered around assets
Focused towards business impact
Well suited for risk assessments
“Natural fit”
 Disadvantages
Not centered around the application
Mapping assets to threats is difficult
Asset-centric Approach

 PASTA
 TRIKE

Attacker-centric Approach

 1. Create a list of threat actors
- Motive
- Means
- Opportunity
 2. Create list of threats

 Threat actor: Competitor
 Motive: Getting your business
 Financial and technical means: Limited
 Opportunity: Exploiting vulnerabilites

 Advantages
Makes threats and attacks visible
Movie-plot-threats brainstorming is FUN
 Disadvantages
Easy to miss technical threats
Unrealistic threats
Biased results
Attacker ‘thinking’ required
Attacker-centric Approach

Choose approach
based on skillset

Application-centric Approach

Application

Application Diagram

Spoofing
Tampering
Repudiation
Information Disclosure
Denial of Service
Elevation of Privileges
STRIDE

From Application to Threat Model
 1. Draw a diagram of the application
- For example a Data Flow Diagram
 2. List threats for each element
- STRIDE
- OWASP top 10
 3. Rank threats using classification model

 Advantages
Common understanding of application
Spread of knowledge
 Disadvantages
Documentation is necessary
Difficult to see ‘own’ vulnerabilities
Threats may sound abstract
Application-centric Approach

Architect
Application Team
Interaction 
Designer
Front-end 
developer
Back-end 
developer
System 
Administrator

Scenario: Choosing the Right Approach

 End goal: Generating list of threats
 1.  Asset-centric approach
- Translation from assets to threats 
+ Quantifying risk for management
 2. Attacker-centric approach
- Specialized knowledge necessary
+ Makes threats tangible
 3. Application-centric approach
- Blind spots
+ Most effective for application   
developers
Summary

Next Up…
Choosing the right methodology

