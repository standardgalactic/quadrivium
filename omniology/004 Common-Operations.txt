© 2019 MathByte Academy

Basic Operations
d[key]
à as an expression returns the value for specified key
à exception KeyError if key is not found
à assigns value to key
d[key] = value
à creates key if it does not exist already
sometimes want to avoid this KeyError exception, and return a default value if key is not found
d.get(key) à returns value if key is found, None if key is not found
d.get(key, default)
à returns value if key is found, default if key is not found
© 2019 MathByte Academy

Basic Operations
membership testing
à test if a key is present in the dictionary or not
key in d
key not in d
à True if key is in d, False if it is not
à True if key is not in d, False if it is
len(d)
number of items in dictionary
clearing out all items
d.clear()
à d is now empty
© 2019 MathByte Academy

Removing Elements from a Dictionary
del d[key]
à removes element with that key from d
à exception KeyError if key is not in d
sometimes we want to avoid this KeyError exception
d.pop(key)
à removes element with that key from d
à and returns the corresponding value
à returns default is key was not found
à exception KeyError if key is not in d
d.pop(key, default)
à removes element with that key from d
à and returns the corresponding value
© 2019 MathByte Academy

Another way to remove items…
Python 3.6+
à dictionary remains ordered in order of insertion
d.popitem()
prior Python 3.6
à removes an item from d 
à returns tuple (key, value)
à KeyError if dictionary is empty
à removes some item – no guarantee which one
>= Python 3.6
à removes last item – guaranteed
à last item is the last item inserted
last inserted à popped first
Last In First Out
à LIFO
à works like a stack
© 2019 MathByte Academy

Inserting keys with defaults
sometimes want to insert a key with a default value only if key does not exist
d = {'a': 1, 'b': 2}
if 'c' not in d:
d['c'] = 0
à combine this with returning the newly inserted (default) value, or existing value if already there
def insert_if_not_present(d, key, value):
if key not in d:
d[key] = value
return value
else:
return d[key]
instead…
result = d.setdefault(key, value)
© 2019 MathByte Academy

Code
© 2019 MathByte Academy

