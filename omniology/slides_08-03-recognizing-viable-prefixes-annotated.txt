Alex Aiken 
Compilers 
Recognizing Viable Prefixes 

Alex Aiken 
Recognizing VP 
1.
Add a dummy production S’  S to G 
2.
The NFA states are the items of G  
–
Including the extra production 
 
3.  For item E  a.Xb add transition 
E  a.Xb  X  E  aX.b 
 
4.  For item E  a.Xb and production X  g add  
E  a.Xb   e   X  .g 
 

Alex Aiken 
Recognizing VP 
5.  Every state is an accepting state 
 
6.  Start state is S’  .S 

Alex Aiken 
Recognizing VP 
 
 
S’  E  
E  T + E | T 
T  int * T | int | (E) 
 
 
 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
T  (E.) 
T  (E). 
( 
E 
) 
S’  E. 
E  . T+E 
E  T.+E 
E  T+.E 
E  T+E. 
S’  . E 
E . T 
E T. 
T int. 
T .int 
T  .int * T 
T  int * T. 
T  int *.T 
T  int.* T 
e 
e 
e 
e 
E 
e 
T 
e 
e 
e 
E 
+ 
e 
int 
int 
* 
T 
e 
e 
e 
e 
e 
T 
e 

Alex Aiken 
Recognizing VP 
S’  . E 

Alex Aiken 
Recognizing VP 
S’  . E 
S’  E. 
E 
E . T 
e 
E  . T+E 
e 

Alex Aiken 
Recognizing VP 
S’  E. 
E  . T+E 
S’  . E 
E . T 
T  .int * T 
e 
e 
E 
T  . (E) 
e 
T .int 
e 
e 
E T. 
T 

Alex Aiken 
Recognizing VP 
T  . (E) 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
E 
E  T.+E 
T 
e 
e 
e 
e 
e 
e 
T 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 
e 
e 
E  T+E. 
E 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 
e 
e 
E  T+E. 
E 
T int. 
int 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 
e 
e 
E  T+E. 
E 
T int. 
int 
T  int.* T 
int 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 
e 
e 
E  T+E. 
E 
T int. 
int 
T  int.* T 
int 
T  int *.T 
* 

Alex Aiken 
Recognizing VP 
T  . (E) 
T  (.E) 
( 
S’  E. 
E  . T+E 
S’  . E 
E . T 
E T. 
T .int 
T  .int * T 
e 
e 
e 
e 
E 
e 
e 
e 
e 
e 
e 
T 
E  T.+E 
T 
T  (E.) 
E 
T  (E). 
) 
E  T+.E 
+ 
e 
e 
E  T+E. 
E 
T int. 
int 
T  int.* T 
int 
T  int *.T 
* 
T  int * T. 
T 
e 
e 
e 

Recognizing VP 
S’ E       E  -E | id 
S’ E. 
E  .id 
E  .-E 
- 
e 
e 
E 
e 
e 
E  id. 
id 
E  -E. 
E 
E  -.E 
S’ .E 
S’ E. 
E  .id 
E  .-E 
- 
e 
e 
E 
e 
e 
E  id. 
id 
E 
E  -.E 
S’ .E 
E  .id 
E  .-E 
- 
e 
e 
e 
e 
E  id. 
id 
E  -E. 
E 
E  -.E 
S’ .E 
E  .id 
E  .-E 
- 
e 
e 
e 
e 
E  id. 
id 
E  -.E 
S’ .E 
Choose the correct NFA for the given grammar 

