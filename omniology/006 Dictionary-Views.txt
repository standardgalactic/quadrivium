© 2019 MathByte Academy

Dictionary Views
Three ways we may want to view the data in a dictionary
à keys only
à values only
à key/value pairs
à (key, value)
d.keys()
d.values()
d.items()
all are iterables
d = {'a': 1, 'b': 2, 'c': 3}
list(d.keys())
à ['a', 'b', 'c']
list(d.values())
à [1, 2, 3]
list(d.items())
à [('a', 1), ('b', 2), ('c', 3)]
Important: order of keys and values (and items) are the same
à the position of an item in one view corresponds to the same position in other views
à Python 3.6+: in addition, this order is same as dictionary (insertion) order
PEP 3106
© 2019 MathByte Academy

They’re dynamic…
more to it than just an iterable
these views are dynamic
à views reflect any changes in the dictionary
à but views are not updatable
d = {'a': 1, 'b': 2}
keys à 'a', 'b'
values à 1, 2
items à ('a', 1), ('b', 2)
d['a'] = 10
keys à 'a', 'b'
values à 10, 2
items à ('a', 10), ('b', 2)
del d['b']
d['c'] = 3
keys à 'a', 'c'
values à 10, 3
items à ('a', 10), ('c', 3)
keys = d.keys()
values = d.values()
items = d.items()
© 2019 MathByte Academy

More than just iterables…
The keys() view is more than an iterable
à behaves like a set
à union, intersection, difference of these key views – just like sets
The values() view does not behave like a set
à in general values are not unique
à in general values are not hashable
à makes sense: keys are unique and hashable
à required for sets
The items() view may behave like a set
à elements of items() are guaranteed unique (since keys are unique)
à if all values are hashable
à behaves like a set
à if one or more values unhashable
à does not behave like a set
© 2019 MathByte Academy

Set operations
We'll come back to sets and dictionary views in a later section
s1 = {'a', 'b', 'c'}
s2 = {'b', 'c', 'd'}
s1 | s2
union
à {'a', 'b', 'c', 'd'}
s1 & s2
intersection
à {'b', 'c'}
difference
s1 - s2
à {'a'}
Can manipulate keys() the same way
if dictionary values are all hashable
Same for items()
© 2019 MathByte Academy

Set Operations on Views
à dictionaries are now considered ordered (insertion order)
à sets are not ordered
d1.keys() and d2.keys() are ordered
but d1.keys() | d2.keys() is a set
à ordering of result is not guaranteed
© 2019 MathByte Academy

Code
© 2019 MathByte Academy

