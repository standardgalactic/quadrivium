@EltonStoneman |  blog.sixeyed.com
CONSULTANT & TRAINER
Elton Stoneman
Routing Incoming Traffic to 
Application Containers

Health
Configuration
Logs
Dependencies
Traffic

Health
Configuration
Logs
Dependencies
Traffic

:80
:8080
:5000
:443
:80

:80
:8080
:5000
:80
:443
:443
:80
www.apod.com
api.apod.com
*

•
Static configuration
•
Container DNS
•
Dynamic discovery
•
Container IP

Demo
Using Nginx as a container proxy
- Running Nginx in Docker
- Proxy configuration by DNS 
- Caching in the proxy layer

server {
server_name whoami.local;
location / {
proxy_pass          http://whoami;
proxy_set_header    Host $host;
add_header          X-Proxy $hostname;         
}
}
Nginx Configuration
Proxying content by container DNS

server_name image-gallery.local;
location = /api/image {
proxy_pass             http://iotd/image;
proxy_set_header       Host $host;
proxy_cache_valid      200  6h;
add_header             X-Cache $upstream_cache_status;
}
location / {
proxy_pass             http://image-gallery;
proxy_set_header       Host $host;
proxy_cache_valid      200  6h;
add_header             X-Proxy $hostname;         
add_header             X-Upstream $upstream_addr;
add_header             X-Cache $upstream_cache_status;
}        
image-gallery.local

web
access-log
image-of-the-day
whoami
whoami.local
/api
image-gallery.local
/

Demo
Using Traefik as a container proxy
- Running Traefik in Docker
- Connecting to the runtime API
- Configuring routing with labels

services:
traefik:
image: psdockerprod/traefik
command:
- "--providers.docker"
- "--providers.docker.exposedbydefault=false"
- "--providers.docker.network=m5"
- "--entrypoints.web.address=:80"
- "--entrypoints.web-secure.address=:443"
ports:
- "80:80"
- "443:443"
- "8080:8080"
volumes:
- /var/run/docker.sock:/var/run/docker.sock:ro
docker-compose.yml

services:
whoami:
image: psdockerprod/whoami
labels:
- "traefik.enable=true"
- "traefik.http.routers.whoami.rule=Host(`whoami.local`)"
Configuring Services with Labels
Running Traefik with an opt-in model

image-gallery:
image: psdockerprod/image-gallery:m4
labels:
- "traefik.enable=true"
- "traefik.http.routers.image-gallery.rule=Host(`image-gallery.local`)"
- "traefik.http.routers.image-gallery.middlewares=image-gallery-redirect@docker"
- "traefik.http.middlewares.image-gallery-redirect.redirectscheme.scheme=https"
- "traefik.http.routers.image-gallery-secure.rule=Host(`image-gallery.local`)"
- "traefik.http.routers.image-gallery-secure.entrypoints=web-secure"
- "traefik.http.routers.image-gallery-secure.tls=true"
docker-compose.yml

web
access-log
image-of-the-day
whoami
whoami.local
/api
image-gallery.local
/

ConfigMap
LoadBalancer
ServiceAccount
ClusterIP
Host: whoami.local
Service: whoami
Ingress

Demo
Using Nginx as an Ingress controller 
- Running Nginx in Kubernetes
- Deploying Ingress rules
- Configuring caching and rate-limiting

whoami.com
apod.com
api.apod.com

rules:
- host: whoami.local
http:
paths:
- pathType: Exact
path: /
backend:
serviceName: whoami-web
servicePort: 80
Ingress Rules
whoami-ingress.yaml
spec:
rules:
- host: api.apod.local
http:
paths:
- pathType: Exact
path: /image
backend:
serviceName: apod-api
servicePort: 80
apod-ingress.yaml

serviceAccountName: ingress-nginx
containers:
- name: controller
image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller
args:
- /nginx-ingress-controller
- --publish-service=ingress-nginx/ingress-nginx-controller
- --election-id=ingress-controller-leader
- --ingress-class=nginx
- --configmap=ingress-nginx/ingress-nginx-controller
nginx-ingress-controller.yaml

web
access-log
image-of-the-day
whoami
whoami.local
/api
image-gallery.local
/
cert-manager

Routing with a reverse proxy
- Single entrypoint for all apps
- Routing rules to target containers
- Caching, SSL termination, sticky sessions
Using Nginx and Traefik
- Proxy runs in a container
- Static or dynamic configuration
- Other options: HAProxy, Contour
Ingress in Kubernetes
- First-class modelling
- Decouples app and routing
Summary

Health
Configuration
Logs
Dependencies
Traffic

https://is.gd/yitezi

So…
- Please leave a rating
- Follow @EltonStoneman on Twitter
- Check out blog.sixeyed.com
- Watch my other courses 
We're Done!

