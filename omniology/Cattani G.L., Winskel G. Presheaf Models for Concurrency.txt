BRICS RS-96-35
Cattani & Winskel: Presheaf Models for Concurrency
BRICS
Basic Research in Computer Science
Presheaf Models for Concurrency
Gian Luca Cattani
Glynn Winskel
BRICS Report Series
RS-96-35
ISSN 0909-0878
October 1996

Copyright c
 1996, BRICS, Department of Computer Science
University of Aarhus. All rights reserved.
Reproduction of all or part of this work
is permitted for educational or research use
on condition that this copyright notice is
included in any copy.
See back inner page for a list of recent publications in the BRICS
Report Series. Copies may be obtained by contacting:
BRICS
Department of Computer Science
University of Aarhus
Ny Munkegade, building 540
DK - 8000 Aarhus C
Denmark
Telephone: +45 8942 3360
Telefax:
+45 8942 3255
Internet:
BRICS@brics.dk
BRICS publications are in general accessible through World Wide
Web and anonymous FTP:
http://www.brics.dk/
ftp://ftp.brics.dk/pub/BRICS

Presheaf
Mo
dels
for
Concurrency
Gian
Luca
Cattani
and
Glynn
Winsk
el
BRICS

,
Computer
Science
Departmen
t
Aarh
us
Univ
ersit
y
,
Denmark
Octob
er
		
Abstract
This
pap
er
studies
presheaf
mo
dels
for
concurren
t
computation.
An
aim
is
to
harness
the
general
mac
hinery
around
preshea
v
es
for
the
pur-
p
oses
of
pro
cess
calculi.
T
raditional
mo
dels
lik
e
sync
hronisation
trees
and
ev
en
t
structures
ha
v
e
b
een
sho
wn
to
em
b
ed
fully
and
faithfully
in
particu-
lar
presheaf
mo
dels
in
suc
h
a
w
a
y
that
bisim
ulation,
expressed
through
the
presence
of
a
span
of
op
en
maps,
is
conserv
ed.
As
is
sho
wn
in
the
w
ork
of
Jo
y
al
and
Mo
erdijk,
preshea
v
es
are
ric
h
in
constructions
whic
h
preserv
e
op
en
maps,
and
so
bisim
ulation,
b
y
argumen
ts
of
a
v
ery
general
nature.
This
pa-
p
er
con
tributes
similar
results
but
biased
to
w
ards
questions
of
bisim
ulation
in
pro
cess
calculi.
It
is
concerned
with
mo
delling
pro
cess
constructions
on
preshea
v
es,
sho
wing
these
preserv
e
op
en
maps,
and
with
transferring
suc
h
results
to
traditional
mo
dels
for
pro
cesses.
One
new
result
here
is
that
a
wide
range
of
left
Kan
extensions,
b
et
w
een
categories
of
preshea
v
es,
preserv
e
op
en
maps.
As
a
corollary
,
this
also
implies
that
an
y
colimit-preserving
functor
b
et
w
een
presheaf
categories
preserv
es
op
en
maps.
A
particular
left
Kan
ex-
tension
is
sho
wn
to
coincide
with
a
renemen
t
op
eration
on
ev
en
t
structures.
A
broad
class
of
presheaf
mo
dels
is
prop
osed
for
a
general
pro
cess
calculus.
General
argumen
ts
are
giv
en
for
wh
y
the
op
erations
of
a
presheaf
mo
del
preserv
e
op
en
maps
and
wh
y
for
sp
ecic
presheaf
mo
dels
the
op
erations
coincide
with
those
of
traditional
mo
dels.

Basic
Researc
h
in
Computer
Science,
Cen
tre
of
the
Danish
National
Researc
h
F
oundation.



In
tro
duction
The
pap
er
[]
presen
ted
an
abstract
view
of
bisim
ulation,
inspired
b
y
[],
applicable
to
mo
dels
for
concurrency
presen
ted
as
categories,
follo
wing
the
lines
of
[
].
A
cen
tral
idea
w
as
to
dene
bisim
ulation
through
a
span
of
op
en
maps
and
explore
its
consequences
o
v
er
mo
dels
for
concurrency
ranging
from
in
terlea
ving
mo
dels
lik
e
transition
systems
to
\indep
endence"
mo
dels
lik
e
lab
elled
ev
en
t
structures,
and
later
on
P
etri
nets
[0
],
in
whic
h
concurrency
or
parallelism
of
actions
is
expressed
b
y
some
relation
of
indep
endence.
This
pap
er
tak
es
up
the
suggestion
of
[
]
to
study
presheaf
mo
dels
for
concurren
t
computation.
There
are
sev
eral
reasons
for
doing
this.
One
reason
is
that,
once
one
passes
the
barrier
of
unfamiliarit
y
,
they
are
an
in
tu-
itiv
ely
app
ealing
mo
del
of
nondeterministic
computation.
Starting
with
a
category
of
path
ob
jects
(or
observ
ations)
in
whic
h
morphisms
stand
for
an
extension
of
one
path
b
y
another,
nondeterministic
computations
are
represen
ted
essen
tially
b
y
gluing
together
computation
paths
in
a
manner
reminiscien
t
of
the
w
a
y
a
p
o
w-
erdomain
is
built
from
a
domain
as
a
completion
of
its
nite
elemen
ts.
More
accurately
,
forming
preshea
v
es
is
equiv
alen
t
to
adjoining
all
colimits
to
a
category
,
whic
h
corresp
onds
to
more
than
just
adding
directed
colimits|the
reason
wh
y
nondeterministic
branc
hing
is
also
in
tro
duced.
As
w
as
argued
in
[]
presheaf
mo
dels
are
promising
generalisations
of
existing
mo
dels.
This
is
b
ecause
w
ell-kno
wn
mo
dels
lik
e
sync
hronisation
trees
and
lab
elled
ev
en
t
structures
em
b
ed
fully
and
faithfully
in
to
appropriate
presheaf
categories,
and,
for
general
reasons,
preshea
v
es
supp
ort
op
erations
suc
h
as
those
coming
from
Kan
extensions.
One
particular
Kan
extension,
resulting
in
a
functor
b
et
w
een
preshea
v
es
o
v
er
p
omsets,
w
as
adv
anced
as
a
go
o
d
candidate
for
an
op
eration
of
renemen
t
of
the
kind
prop
osed
for
ev
en
t
structures.
Here
it
is
sho
wn
that
this
Kan
extension
acts,
when
restricted
to
preshea
v
es
asso
ciated
with
ev
en
t
structures,
in
the
same
w
a
y
as
the
renemen
t
op
eration
in
[	].
T
o
highligh
t
the
gain
of
w
orking
at
a
more
abstract
lev
el
than
is
common
in
concurrency
theory
,
w
e
men
tion
an
imp
ortan
t
result
of
this
pap
er,
Lemma
,
whic
h
sho
ws
that
a
broad
class
of
op
erations,
obtained
as
left
Kan
extensions,
automatically
preserv
e
op
en
maps.
In
particular,
it
sp
ecialises
to
sho
w
that
the
renemen
t,
obtained
as
a
Kan
extension,
preserv
es
op
en
maps
and
so
bisim
ulation.
Lemma

can
also
b
e
read
as
sa
ying
that
an
y
colimit-preserving
functor
b
et
w
een
t
w
o
presheaf
categories
preserv
es
op
en
maps
(see
Corollary
).
One
p
oin
t
of
approac
hing
mo
dels
for
concurrency
as
categories
is
that
op
erations
fundamen
tal
to
pro
cess
calculi
app
ear
automatically
,
as
built
out
of
univ
ersal
con-
structions.
An
ob
vious
question
is
whether
these
univ
ersal
constructions
preserv
e
op
en
maps
and
therefore
bisim
ulation.
Our
approac
h
here
is
to
pro
v
e
that
op
er-


ations
on
preshea
v
es
preserv
e
op
en
maps
and
then,
through
results
lik
e
Lemma

and
Prop
osition
,
transfer
these
preserv
ation
prop
erties
to
concrete
mo
dels
lik
e
sync
hronisation
trees
and
ev
en
t
structures.

W
orking
with
preshea
v
es
also
a
v
oids
some
obstructions
to
a
treatmen
t
of
w
eak
bisim
ulation
on
indep
endence
mo
dels,
though
this
topic
is
not
dealt
with
here.
A
more
general,
and
probably
the
most
imp
ortan
t,
motiv
ation
for
presheaf
mo
d-
els
is
the
hop
e
they
giv
e
of
making
concurrency
less
separate
a
study
.
Through
presheaf
mo
dels
w
e
are
trying
to
bring
concurrency
theory
within
domain
theory
,
though
with
the
pro
viso
that
this
should
b
e
understo
o
d
lib
erally
enough
to
in-
clude
generalisations
of
domain
theory
lik
e
those
en
visaged
in
\axiomatic
domain
theory"
[,
].
The
pap
er
[]
is
a
further
step
in
this
programme.

T
raditional
mo
dels
W
e
fo
cus
on
three
traditional
mo
dels
for
concurrency:
transition
systems,
sync
hro-
nisation
trees
and
ev
en
t
structures
(see
[
]
for
more
bac
kground).
A
tr
ansition
system
is
a
structure
(S;
i;
L;
tr
an)
where

S
is
a
set
of
states
with
initial
state
i,

L
is
a
set
of
lab
els,

tr
an

S

L

S
is
the
tr
ansition
r
elation.
As
usual,
a
transition
(s;
a;
s
0
)
is
written
as
s
a
!
s
0
.
Let
T
0
=
(S
0
;
i
0
;
L
0
;
tr
an
0
)
and
T

=
(S

;
i

;
L

;
tr
an

)
b
e
transition
systems.
A
morphism
f
:
T
0
!
T

is
a
pair
f
=
(
;
)
where


:
S
0
!
S

,
suc
h
that

(i
0
)
=
i

,
and


:
L
0
!

L

,
a
partial
function

,
whic
h
together
satisfy
(s;
a;
s
0
)

tr
an
0
&
(a)
dened
)
(
(s);
(a);

(s
0
))

tr
an

;
and
(s;
a;
s
0
)

tr
an
0
&
(a)
undened
)

(s)
=

(s
0
):

The
pap
er
[
]
sho
ws
that
an
y
\P
-factorisable
functor"
preserv
es
op
en
maps
and
so
bisim
ula-
tion.
In
con
trast
w
e
aim
to
tak
e
adv
an
tage
of
the
preserv
ation
prop
erties
of
univ
ersal
construc-
tions,
a
strategy
prop
osed
in
the
conclusion
of
[
].

W
e
treat
partial
functions
in
the
same
w
a
y
as
in
[
]
using

to
represen
t
undened.


T
ransition
systems
with
morphisms
form
a
category
TS
in
whic
h
the
comp
osition
of
morphisms
is
dened
comp
onen
t
wise.
A
synchr
onisation
tr
e
e
is
a
transition
system
whose
graph
has
the
form
of
a
tree
with
ro
ot
the
initial
state.
W
e
write
ST
for
the
sub
category
of
sync
hronisation
trees.
T
ransition
systems
and
sync
hronisation
trees
are
often
called
\in
terlea
ving
mo
dels"
b
ecause
they
represen
t
parallel/concurren
t
comp
osition
b
y
nondeterministically
in
terlea
ving
the
actions
of
pro
cesses.
In
con
trast,
ev
en
t
structures
represen
t
a
class
of
\indep
endence
mo
dels"
(among
them
P
etri
nets)
in
whic
h
concurrency
is
represen
ted
directly
as
a
form
of
causal
indep
endence.
Dene
a
(lab
el
le
d)
event
structur
e
to
b
e
a
structure
(E
;
;
C
on
;
l
)
consisting
of
a
set
E
,
of
events
whic
h
are
partially
ordered
b
y
,
the
c
ausal
dep
endency
r
elation,
a
c
onsistency
r
elation
C
on
consisting
of
nite
subsets
of
ev
en
ts,
and
a
lab
el
ling
function
l
:
E
!
L,
whic
h
satisfy
fe
0
j
e
0

eg
is
nite;
feg

C
on
;
Y

X

C
on
)
Y

C
on;
X

C
on
&
e

e
0

X
)
X
[
feg

C
on;
for
all
ev
en
ts
e;
e
0
and
their
subsets
X
;
Y
.
Tw
o
ev
en
ts
e;
e
0

E
are
said
to
b
e
c
oncurr
ent
(causally
indep
enden
t)
i
(e

e
0
&
e
0

e
&
fe;
e
0
g

C
on):
A
set,
x,
of
ev
en
ts
in
E
is
said
to
b
e
a
c
ongur
ation
if
it
is
downwar
ds-close
d:
e;
e
0
:
e
0

e

x
)
e
0

x,
and
c
onsistent:
X
:
X
nite
&
X

x
)
X

C
on.
A
morphism
of
ev
en
t
structures
consists
of
(
;
)
:
E
!
E
0
;
where
E
=
(E
;
;
C
on;
l
);
E
0
=
(E
0
;

0
;
C
on
0
;
l
0
)
are
ev
en
t
structures,

:
E
!

E
0
is
a
partial
function
on
ev
en
ts,

:
L
!

L
0
is
a
partial
function
on
lab
elling
sets
suc
h
that
(i)
l
0


=


l
,
(ii)
If
x
is
a
conguration
of
E
,
then

x
is
a
conguration
of
E
0
and
if
for
e

;
e


x
their
images
are
b
oth
dened
with

(e

)
=

(e

),
then
e

=
e

.
Let
ES
b
e
the
category
of
ev
en
t
structures
with
morphisms,
as
ab
o
v
e,
comp
osed
comp
onen
t
wise.
The
denition
of
morphism
on
ev
en
t
structures
is
giv
en
rather
abruptly|see
[]
for
motiv
ation.


The
categories
TS
;
ST
and
ES
are
ric
h
in
categorical
constructions.
In
particular,
all
the
functors
pro
jecting
to
lab
elling
sets
in
Set

,
the
category
of
sets
with
partial
functions,
are
cobrations.
While
the
pro
jections
to
Set

asso
ciated
with
TS
and
ST
are
brations,
the
pro
jection
of
ES
is
not;
there
are
cartesian
liftings
of
total
functions
but
not
of
strictly
partial
functions.
The
categories
TS;
ST
and
ES
are
related
b
y
coreections:
the
inclusion
functor
ST
,
!
TS
has
a
righ
t
adjoin
t
unfolding
transition
systems
to
trees;
the
functor
ST
!
ES
iden
tifying
a
sync
hronisation
tree
with
an
ev
en
t
structure
has
a
righ
t
adjoin
t
serialising
an
ev
en
t
structure
to
a
sync
hronisation
tree.
The
coreections
cut
do
wn
to
coreections
b
et
w
een
the
bres.
Preserv
ation
prop
erties
of
adjoin
ts
help
in
relating
seman
tics
in
the
dieren
t
mo
dels.
W
e
normally
refer
to
a
bre
o
v
er
some
set
L,
b
y
adding
the
subscript
L
to
the
name
of
the
category
,
e.g.,
ES
L
stand
for
the
sub
category
of
those
ev
en
t
structures
whose
set
of
lab
els
is
L
and
whose
morphisms
(
;
)
alw
a
ys
ha
v
e

=
id
L
.
The
categories
of
mo
dels
ha
v
e
pro
ducts,
cen
tral
in
giving
seman
tics
to
parallel
comp
ositions.
Because
the
pro
jection
TS
!
Set

forms
a
bration,
pro
ducts
in
TS
are
expressible
as
pro
ducts
in
the
bre
o
v
er
the
pro
duct
of
their
lab
elling
sets
in
the
base
category
Set

.
Suc
h
a
decomp
osition
of
pro
duct
is
not
p
ossible
in
ES
b
ecause
there
are
not
cartesian
liftings
of
(partial)
pro
jections
lik
e
L


M
!

M
.
Constructions
in
the
categories
supp
ort
a
pro
cess
language
Pro
c
.
Its
syn
tax
is
giv
en
b
y
t
::=
nil
j
at
j
t
0

t

j
t
0

t

j
t


j
tfg
j
x
j
r
ec
x:t
where
a
is
a
lab
el,

is
a
subset
of
lab
els
and

is
a
total
function
from
lab
els
to
lab
els.
All
the
op
erations,
apart
from
prexing,
at,
ha
v
e
a
categorical
status,
as
b
eing
built
out
of
univ
ersal
constructions.
Most
simply
,
the
term
nil
denotes
the
initial
ob
ject,
t
0

t

the
pro
duct
of
those
ob
jects
denoted
b
y
t
0
;
t

,
and
recursiv
e
denitions
r
ec
x:t
are
treated
through
the
help
of
!
-colimits.
The
other
op
erations
mak
e
use
of
the
categories
b
eing
bred
o
v
er
Set

.
Restriction
t


is
dened
via
cartesian
lifting
o
v
er
an
inclusion
asso
ciated
with
,
and
relab
elling
tfg
via
co
cartesian
liftings
o
v
er
.
The
sum
of
t
w
o
pro
cesses
t
0

t

is
dened
b
y
a
bre
copro
duct
of
the
result
of
sending
them
o
v
er
a
union
of
their
lab
elling
sets
b
y
co
cartesian
liftings.
See
[
]
for
details.

Bisim
ulation
from
op
en
maps
A
(computation)
path
of
a
transition
system
with
lab
elling
set
L
is
reasonably
tak
en
to
b
e
a
nite
sequence
of
transitions
that
the
transition
system
can
p
erform.
It
tak
es
the
shap
e
of
a
string
of
lab
els
in
L.
Strings
L

form
a
(partial
order)
category
in
whic
h
a
morphism
represen
ts
the
extension
of
one
string
s
to
another


s
0
(s
is
an
initial
prex
of
s
0
).
It
is
con
v
enien
t
to
iden
tify
strings
L

with
the
sub
category
of
ST
consisting
of
those
sp
ecial
sync
hronisation
trees
consisting
of
a
single
branc
h.
T
o
tak
e
accoun
t
of
the
added
indep
endence
structure
of
ev
en
t
structures,
the
shap
e
of
their
computation
paths
is
tak
en
to
b
e
a
nite
p
omset.
The
category
P
om
L
is
tak
en
to
b
e
the
sub
category
of
ES
L
,
for
a
lab
elling
set
L,
consisting
of
those
nite
ev
en
t
structures
in
whic
h
all
nite
subsets
of
ev
en
ts
are
in
the
consistency
relation.
W
e
can
obtain
a
general
denition
of
bisim
ulation
from
op
en
maps,
whic
h
roughly
sp
eaking
are
morphisms
with
the
prop
ert
y
that
an
y
extension
of
a
computation
path
in
the
range
can
b
e
matc
hed
b
y
an
extension
in
its
domain.
Assume
a
category
of
mo
dels
M
(this
can
b
e
a
bre
in
an
y
of
the
categories
of
mo
dels
w
e
are
considering)
and
a
c
hoice
of
path
category
,
a
sub
category
P
,
!
M
consisting
of
path
ob
jects
(these
could
b
e
branc
hes,
or
p
omsets)
together
with
morphisms
expressing
ho
w
they
can
b
e
extended.
Whenev
er,
for
m
:
P
!
Q
a
morphism
in
P
,
a
\square"
P

m
/
p
X

f
Q
/
q
Y
in
M
comm
utes,
i.e.
q

m
=
f

p,
meaning
the
path
f

p
in
Y
can
b
e
extended
via
m
to
a
path
q
in
Y
,
then
there
is
a
morphism
p
0
suc
h
that
in
the
diagram
P

m
/
p
X

f
Q
?
p
0








/
q
Y
the
t
w
o
\triangles"
comm
ute,
i.e.
p
0

m
=
p
and
f

p
0
=
q
,
meaning
the
path
p
can
b
e
extended
via
m
to
a
path
p
0
in
X
whic
h
matc
hes
q
.
When
the
morphism
f
satises
this
condition
w
e
shall
sa
y
it
is
P
-op
en.
Tw
o
ob
jects
X

;
X

of
M
are
said
to
b
e
P
-bisimilar
i
there
is
a
sp
an
of
P
-op
en
morphisms
f

;
f

:
X
~
f

|
|
|
|
|
|
|
|
 
f

B
B
B
B
B
B
B
B
X

X

In
the
case
of
traditional
mo
dels
w
e
obtain
kno
wn
equiv
alences:
for
transition
systems
TS
L
or
sync
hronisation
trees
ST
L
,
L

-bisim
ulation
coincides
with
P
ark
and
Milner's
strong
bisim
ulation;
for
ev
en
t
structures
ES
L
,
P
om
L
bisim
ulation
coincides
with
strong
history-preserving
bisim
ulation
due
to
Bednarczyk
rening
ideas
of
v
an
Glabb
eek
and
Goltz,
Rabino
vitc
h
and
T
rakten
brot
[,
	,

].



Presheaf
mo
dels
Giv
en
a
path
category
P
w
e
can
build
the
category
b
P
of
preshea
v
es
o
v
er
P
.
The
ob
jects
of
b
P
consist
of
functors
P
op
!
Set,
to
the
category
of
sets.
The
morphisms
of
b
P
are
natural
transformations
b
et
w
een
functors.
In
tuitiv
ely
a
presheaf
F
:
P
op
!
Set
can
b
e
though
t
of
as
sp
ecifying
for
a
t
ypical
path
ob
ject
P
the
set
F
(P
)
of
paths
from
P
.
It
acts
on
a
morphism
m
:
P
!
Q
in
P
to
giv
e
a
function
F
(P
)
 
F
(Q)
:
F
(m)
sa
ying
ho
w
Q-paths
restrict
to
P
-paths.
A
mo
del,
lik
e
a
transition
system
or
a
lab
elled
ev
en
t
structure,
giv
es
rise
to
a
presheaf.
F
or
a
category
of
mo
dels
M
and
a
c
hoice
of
path
category
forming
a
sub
category
P
,
!
M
,
there
is
a
c
anonic
al
functor
from
the
category
of
mo
dels
M
to
the
category
of
preshea
v
es
b
P
.
The
functor,
M
!
b
P
;
tak
es
an
ob
ject
X
of
M
to
the
presheaf
M
( ;
X
)|more
in
tuitiv
ely
,
it
tak
es
the
mo
del
X
to
the
presheaf
whic
h
for
eac
h
path
ob
ject
P
yields
the
set
of
paths
M
(P
;
X
)
from
P
in
to
X
.
The
canonical
functor
tak
es
a
morphism
f
:
X
!
Y
in
M
to
the
natural
transformation,
M
( ;
f
)
:
M
( ;
X
)
!
M
( ;
Y
);
whose
comp
onen
t
at
an
ob
ject
P
of
P
is
the
function
M
(P
;
X
)
!
M
(P
;
Y
)
taking
p
to
f

p|in
tuitiv
ely
,
a
path
p
:
P
!
X
in
X
is
tak
en
to
a
path
f

p
:
P
!
Y
in
Y
.
As
remark
ed
in
[],
the
canonical
functors
are
full
and
faithful
em
b
eddings
for
sync
hronisation
trees
and
ev
en
t
structures
with
resp
ect
to
appropriate
path
cate-
gories.
Theorem

(i)
The
c
anonic
al
functor
fr
om
ST
L
to
c
L

is
ful
l,
faithful
and
dense.
(ii)
The
c
anonic
al
functor
fr
om
ES
L
to
\
P
om
L
is
ful
l,
faithful
and
dense.
In
the
situation
where
the
path
category
P
of
a
mo
del
M
has
an
initial
ob
ject
0,
a
r
o
ote
d
pr
eshe
af
is
a
presheaf
F
in
whic
h
F
(0)
is
a
singleton.
The
full
sub
category
of
ro
oted
preshea
v
es
of
c
L

is
equiv
alen
t
to
the
category
ST
L
.
In
fact,
it
is
not
hard
to
see
that
a
presheaf
X
in
c
L

corresp
onds
to
a
collection
of
sync
hronisation
trees
in
whic
h
the
set
of
\ro
ots"
corresp
onds
bijectiv
ely
to
the
set
X
(),
where

is
the
empt
y
string,
the
initial
ob
ject
in
L

.
While
the
canonical
functor
from
ES
L
alw
a
ys
yields
a
ro
oted
presheaf,
not
all
ro
oted
preshea
v
es
in
\
P
om
L
are
obtained
in
this
w
a
y
.
F
ull
sub
categories
of
ro
oted
preshea
v
es
pla
y
an
imp
ortan
t
role
in
our
approac
h.
Bisim
ulation
in
the
sub
categories
of
ro
oted
preshea
v
es
coincides
with
bisim
ulation
in
the
categories
of
concrete
mo
dels:

Prop
osition

(i)
Two
synchr
onisation
tr
e
es,
over
lab
el
ling
set
L,
ar
e
L

-bisimilar
(i.e.
str
ong
bisimilar)
i
their
c
orr
esp
onding
pr
eshe
aves,
under
the
c
anonic
al
emb
e
dding,

Alternativ
ely
,
one
can
restrict
to
surjectiv
e
op
en
maps
in
the
full
category
of
preshea
v
es
to
obtain
a
similar
corresp
ondence.


ar
e
r
elate
d
by
a
sp
an
of
op
en
maps
in
the
ful
l
sub
c
ate
gory
of
r
o
ote
d
pr
eshe
aves
of
c
L

.
(ii)
Two
event
structur
es,
over
lab
el
ling
set
L,
ar
e
P
om
L
-bisimilar
(i.e.
str
ong
history-pr
eserving
bisimilar)
i
their
c
orr
esp
onding
pr
eshe
aves,
under
the
c
anonic
al
emb
e
dding,
ar
e
r
elate
d
by
a
sp
an
of
op
en
maps
in
the
ful
l
sub-
c
ate
gory
of
r
o
ote
d
pr
eshe
aves
of
\
P
om
L
.
W
orking
with
categories
of
preshea
v
es
w
e
can
use
Kan
extensions
(see
[
],
v
ol.).
A
k
ey
result
of
this
pap
er
is
then
the
follo
wing
that
states
that
a
wide
class
of
left
Kan
extensions
preserv
e
op
en
maps,
th
us
making
them
a
p
o
w
erful
to
ol
in
sho
wing
op
erations
preserv
e
bisim
ulation:
Lemma

L
et
F
:
P
!
b
Q
b
e
a
functor
wher
e
P
;
Q
ar
e
smal
l
c
ate
gories.
The
left
Kan
extension
Lan
y
P
F
pr
eserves
op
en
maps:
If
h
is
a
P
-op
en
map
in
b
P
,
then
Lan
y
P
F
(h)
is
a
Q
-op
en
map
in
b
Q
.
Since
all
colimit-preserving
functors
G
from
a
presheaf
category
b
P
to
a
presheaf
category
b
Q
are
obtained
to
within
isomorphism
as
left
Kan
extensions
Lan
y
P
(G

y
P
),
w
e
deduce
the
follo
wing
general
preserv
ation
prop
ert
y:
Corollary

Assume
G
:
b
P
!
b
Q
is
a
c
olimit-pr
eserving
functor.
If
h
is
a
P
-op
en
map
in
b
P
,
then
G(h)
is
a
Q
-op
en
map
in
b
Q
.
In
the
case
of
a
functor
F
:
P
!
Q
b
et
w
een
small
categories
w
e
denote
b
y
F
!
the
left
Kan
extension
Lan
y
P
(y
Q

F
)
and
b
y
F

its
righ
t
adjoin
t
whic
h
acts
b
y
comp
osition
with
F
.
Lemma

L
et
F
:
P
!
Q
b
e
a
functor
b
etwe
en
smal
l
c
ate
gories.
L
et
F
!
a
F

b
e
the
adjunction
describ
e
d
ab
ove
b
etwe
en
b
P
and
b
Q.
Then
(i)
If
h
is
a
P
-op
en
map,
then
F
!
(h)
is
Q
-op
en
map.
(ii)
If
h
is
a
Q
-op
en
map,
then
F

(h)
is
P
-op
en
map.
If
P
and
Q
have
initial
obje
cts
then
F
!
pr
eserves
r
o
ote
d
pr
eshe
aves.
Mor
e
over,
if
F
pr
eserves
the
initial
obje
cts
then
F

pr
eserves
r
o
ote
d
pr
eshe
aves.
Th
us
w
e
ha
v
e
the
pleasing
situation
that
op
en
maps
and
bisim
ulation
are
preserv
ed
along
b
oth
the
directions
of
the
adjunction
F
!
a
F

.
As
will
b
e
seen,
Lemma

is
useful
in
sho
wing
that
bisim
ulation
is
a
congruence
with
resp
ect
to
the
op
erations
of
pro
cess
calculi.
Some
familiar
adjunctions
reap-
p
ear
as
sp
ecial
instances.
Supp
ose
that
F
ab
o
v
e
is
understo
o
d
as
the
functor
L

!
P
om
L
iden
tifying
a
string
with
a
(linear)
p
omset.
The
adjunction
F
!
a
F

extends,
via
the
canonical
em
b
eddings,
the
familiar
coreection
b
et
w
een
sync
hro-
nisation
trees
ST
L
and
ev
en
t
structures
ES
L
.
Lemma

implies
the
in
tuitiv
ely
clear
fact
that
bisim
ulation
is
preserv
ed
b
y
the
inclusion
of
sync
hronisation
trees
in
ev
en
t
structures,
and
that
the
righ
t
adjoin
t
serialising
an
ev
en
t
structure
to
a
sync
hronisation
tree
preserv
es
bisim
ulation.


T
o
illustrate
the
p
o
w
er
of
these
general
results
w
e
consider
a
form
of
renemen
t
on
ev
en
t
structures,
whic
h
arises
as
a
left
Kan
extension.
One
w
ell-kno
wn
op
eration
of
renemen
t
on
ev
en
t
structures
is
that
of
v
an
Glabb
eek
and
Goltz
(refer
to
[	
]
for
their
denition)
where
a
function

\rening"
lab
els
in
L
to
nite
p
omsets
o
v
er
M
is
extended
to
an
op
eration
R
(
)
on
ev
en
t
structures|roughly
,
a
cop
y
of
the
p
omset

(a)
is
plugged
in
for
eac
h
o
ccurrence
of
the
lab
el
a
and
the
p
omsets'
ev
en
ts
inherit
causal
dep
endency
and
conict
from
the
host
ev
en
t
structure.
Suc
h
a
rening
function

extends
in
the
same
w
a
y
to
a
functor
R
(
)
0
:
P
om
L
!
P
om
M
.
As
remark
ed
in
[],
the
functor
R
(
)
0
!
,
obtained
as
a
left
Kan
extension,
is
a
go
o
d
candidate
for
the
extension
of
this
renemen
t
to
preshea
v
es
including
those
corre-
sp
onding
to
ev
en
t
structures.
But
do
es
the
functor
R
(
)
0
!
act
lik
e
the
op
eration
of
renemen
t
R
(
)
on
ev
en
t
structures?
More
precisely
,
if
w
e
let
c
L
:
ES
L
!

d
P
om
L
and
c
M
:
ES
M
!

d
P
om
M
denote
the
canonical
em
b
eddings,
do
w
e
ha
v
e
R
(
)
0
!
(c
L
(E
))

=
c
M
(R
(
)(E
))
?
Y
es,
b
y
the
follo
wing
general
Lemma
(instan
tiate
R
(
)
for
F
and
read
P
om
L
for
P
L
,
ES
L
for
E
L
,
etc.
):
Notation:
F
or
an
y
category
C
,
w
e
denote
its
class
of
ob
jects
b
y
j
C
j.
Lemma

L
et
P
L
and
P
M
b
e
two
smal
l
c
ate
gories.
L
et
i
L
:
P
L
!
E
L
and
i
M
:
P
M
!
E
M
b
e
two
dense
ful
l
and
faithful
emb
e
ddings.
L
et
c
L
:
E
L
!
c
P
L
and
c
M
:
E
M
!
d
P
M
b
e
the
asso
ciate
d
c
anonic
al
emb
e
ddings.
Supp
ose
F
:
E
L
!
E
M
is
a
functor.
L
et
F
0
=
F

i
L
.
Then
Lan
y
L
(c
M

F
0
)

c
L
=
c
M

F
if
for
any
E

j
E
L
j
and
Q
g
!
F
E
,
ther
e
exist
P

j
P
L
j,
g
Q
:
Q
!
F
0
P
and
f
P
:
i
L
(P
)
!
E
with
g
=
F
f
P

g
Q
and
such
that
for
any
other
factorisation
g
=
F
f
P
0

g
0
Q
ther
e
exists
an

:
P
!
P
0
such
that
f
0
P


=
f
P
and
g
0
Q
=
F
P


g
Q
:
Q
/
q
!
q
Q
C
C
C
C
C
C
C
C

q
0
Q















F
(E
)
F
P
;
F
(f
P
)
w
w
w
w
w
w
w
w
w

F
()
F
P
0
D
F
(f
P
0
)
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
Remark:
The
\factorisation"
condition
of
the
lemma
implies
that
the
functor
F
:
E
L
!
E
M
preserv
es
the
canonical
colimits
asso
ciated
with
the
ob
jects
of
E
L
(whic
h
is
equiv
alen
t
to
the
conclusion
of
the
lemma).
The
\factorisation"
condition


can
b
e
w
eak
ened
to
a
necessary
condition
b
y
requiring
that
an
y
t
w
o
factorisations
are
connected
b
y
a
c
hain
of
morphisms
lik
e

ab
o
v
e.
As
a
left
Kan
extension,
the
op
eration
R
(
)
0
!
on
preshea
v
es
preserv
es
op
en
maps
and
so
bisim
ulation
b
y
Lemma
,
and
consequen
tly
so
do
es
renemen
t
R
(
)
on
ev
en
t
structures|an
example
where
w
e
transfer
abstract,
general
prop
erties
of
preshea
v
es
to
a
concrete
mo
del.

Presheaf
mo
dels
for
Pro
c
In
giving
a
presheaf
seman
tics
to
Pro
c
w
e
m
ust
address
a
minor
clumsiness.
T
erms
of
Pro
c
can
ha
v
e
dieren
t
lab
elling
sets,
whereas
the
presheaf
categories
up
to
no
w
ha
v
e
b
een
with
resp
ect
to
a
particular
lab
elling
set.
Ho
w
ev
er
w
e
can
\glue"
all
the
presheaf
categories
together
using
the
Grothendiec
k-bration
construction
(see
[],
v
ol.).
T
o
emphasise
its
generalit
y
,
w
e
giv
e
seman
tics
to
Pro
c
with
resp
ect
to
a
general
class
of
presheaf
mo
dels
dened
as
follo
ws.
A
pr
eshe
af
mo
del
for
Pro
c
consists
of
a
functor
from
Set

to
Cat,
the
category
of
small
categories,
whic
h
sends

:
L
!

M
to


:
P
L
!
P
M
suc
h
that:

F
or
eac
h
set
L,
the
category
P
L
has
an
initial
ob
ject;
the
functors

,
for

:
L
!

M
,
preserv
e
initial
ob
jects.

F
or
eac
h
set
L
and
elemen
t
a,
there
exists
a
pr
exing
functor
a( )
:
P
L
!
P
L[fag
.
A
pro
cess
with
lab
elling
set
L
is
to
denote
a
ro
oted
presheaf
o
v
er
P
L
.
Of
course,
there
are
further
conditions
that
one
could
exp
ect
a
presheaf
mo
del
to
satisfy
,
but
this
denition
suces
for
our
purp
oses.
Sometimes,
to
emphasise
o
v
er
whic
h
path
categories
w
e
are
taking
a
presheaf
mo
del
w
e
describ
e
a
presheaf
mo
del
as
a
pr
eshe
af
mo
del
on
(p
ath
c
ate
gories)
P
L
,
where
L
is
understo
o
d
to
range
o
v
er
sets.
.
The
Grothendiec
k
construction
Giv
en
a
presheaf
mo
del
on
P
L
,
w
e
can
glue
together
all
the
bres,
consisting
of
categories
of
ro
oted
preshea
v
es
o
v
er
P
L
,
to
form
a
bration
o
v
er
Set

whic
h
w
e
call
Gr
oth(
P
L
):
Obje
cts:
pairs
hX
;
Li
with
L

jSet

j
and
X
a
ro
oted
presheaf
o
v
er
P
L
,
A
rr
ows:
pairs
hf
;
i
:
hX
;
Li
!
hY
;
M
i
with

:
L
!

M
and
f
:
X
!



(Y
).
The
comp
osition
of
arro
ws
is
hg
;
i

hf
;
i
=
h



(g
)

f
;


i.
Clearly
the
pro
jection
hX
;
Li
!
L
is
the
ob
ject
part
of
a
functor

:
Gr
oth(
P
L
)
!
Set

:
In
tuitiv
ely
,
the
Grothendiec
k
construction
glues
the
v
arious
bres
together;
it
adds
arro
ws
b
et
w
een
	

preshea
v
es
(p
ossibly
o
v
er
dieren
t
bres),
to
allo
w
for
the
p
ossibilit
y
of
a
partial
relab
elling
of
actions.
Because
of
Lemma
,
for

:
L
!

M
w
e
ha
v
e
an
adjunction


!
a



b
et
w
een
presheaf
categories
b
P
L
and
b
P
M
whic
h
cuts
do
wn
to
an
adjunction
b
et
w
een
the
bres
of
ro
oted
preshea
v
es.
The
adjunctions
ensure
that
the
Grothendiec
k
bration
is
in
fact
a
bibration;
the
co
cartesian
lifting
of

with
resp
ect
to
X
is
(
X
;
)
:
X
!


!
(X
)
where

X
:
X
!





!
(X
)
is
the
comp
onen
t
of
the
unit
of
the
adjunction
at
X
.
By
Lemma
,
the
adjunctions
preserv
e
op
en
maps
across
the
bres.
Within
the
bres
the
pro
duct
and
copro
duct
preserv
e
op
en
maps|b
y
an
elemen
tary
argumen
t
in
the
case
of
pro
duct,
and
making
use
of
the
disjoin
tness
of
the
copro
duct
of
ro
oted
preshea
v
es.
Lemma

F
or

:
L
!

M
,
the
functors


!
and



pr
eserve
op
en
maps
in
the
br
es
of
Gr
oth(
P
L
).
Pr
o
duct
and
c
opr
o
duct
functors
within
the
br
es
of
Gr
oth(
P
L
)
pr
eserve
op
en
maps.
.
Seman
tic
Constructions
in
Gr
oth(
P
L
)
As
a
preliminary
to
giving
a
presheaf
seman
tics
to
Pro
c,
w
e
describ
e
the
main
constructions
in
v
olv
ed
and
sho
w
that
they
preserv
e
op
en
maps.
Pro
ducts:
The
category
Gr
oth(
P
L
)
has
pro
ducts.
Pro
duct
can
b
e
constructed
as
follo
ws.
Giv
en
hX
;
Li;
hY
;
M
i

jGr
oth(
P
L
)j.
Dene
hX
;
Li

hY
;
M
i
=
h
L

(X
)


M

(Y
);
L


M
i
where
L

L

 
L


M

M
!

M
are
the
pro
jections
of
the
pro
duct
in
Set

.
Because
the
pro
duct
in
Gr
oth(
P
L
)
decomp
oses
in
to
functors
preserving
op
en
maps
b
y
lemma
,
w
e
see
that:
Prop
osition

The
functor

pr
eserves
op
en
maps;
if
f
is
an
op
en
map
in
b
P
L
and
g
is
an
op
en
map
in
b
P
M
,
then
f

g
is
an
op
en
map
in
\
P
L

M
.
Sum:
Let
hX
;
Li;
hY
;
M
i

jGr
oth(
P
L
)j.
Dene
hX
;
Li

hY
;
M
i
=
hi
L
!
(X
)
+
i
M
!
(Y
);
L
[
M
i
where
L
i
L
!
L
[
M
i
M
 
M
are
the
injections
of
the
copro
duct
in
Set

.
Sum
is
built
up
from
op
en-map
preserving
functors
b
y
lemma
,
so:
Prop
osition
	
The
functor

pr
eserves
op
en
maps.
Remark:
This
sum
construction
is
not
the
copro
duct
b
ecause
of
the
c
hoice
of
lab
elling
set
for
the
sum.
It
can
b
e
sho
wn
that,
if
[i
L
;
i
M
]
:
L
+
M
!
L
[
M
,
the
0

mediating
map
from
the
copro
duct
of
sets,
then
hX
;
Li

hY
;
M
i

=
[i
L
;
i
M
]
!
(hX
;
Li
+
hY
;
M
i):
Restriction:
Let

b
e
a
set
and
let
hX
;
Li

jGr
oth(
P
L
)j.
Then
consider
the
inclusion
map
i
:

\
L
,
!
L
and
dene
the
restriction
of
X
to

\
L
to
b
e
hX
;
Li


=
h

i

(X
);

\
Li
:
By
lemma
,
restriction
preserv
es
op
en
maps:
Prop
osition
0
If
f
:
X
!
Y
is
an
op
en
map
in
the
br
e
over
L,
then
f


:
X


!
Y


is
op
en
in
the
br
e
over

\
L.
Relab
elling:
Let

:
L
!
M
b
e
total.
T
ak
e
hX
;
N
i
as
usual,
dene

N
:
N
!
M
[
N
with

N
(x)
=
(
(x)
if
x

L
x
otherwise
Consider
the
truncation
of

N
to
its
image
set,
i.e.

N
:
N
!

N
N
.
Dene
the
relab
elling
to
b
e
hX
;
N
i[]
=
h
N
!
(X
);

N
N
i
:
By
lemma
,
relab
elling
preserv
es
op
en
maps:
Prop
osition

If
f
:
X
!
Y
is
an
op
en
map
in
the
br
e
over
L,
then
f
[]
:
X
[]
!
Y
[]
is
op
en
in
the
br
e
over

N
N
.
Prexing:
Supp
ose
w
e
ha
v
e
a
lab
el
set
L
and
an
elemen
t
a.
By
taking
a
left
Kan
extension
w
e
extend
the
prexing
functors
to
a( )
:
b
P
L
!
b
P
L[fag
.
By
Lemma
:
Prop
osition

If
f
:
X
!
Y
is
op
en
in
the
br
e
over
L,
then
a(f
)
:
a(X
)
!
a(Y
)
is
op
en
in
the
br
e
over
L
[
fag.
Recursion:
Letting
F
:
Gr
oth(
P
L
)
!
Gr
oth(
P
L
)
b
e
a
functor,
dene
r
ec(F
)
to
b
e
the
colimit
lim
!
!
F
where
!
F
:
!
!
Gr
oth(
P
L
)
n
!
F
n
(h0;
;i):
Here
0
is
the
unique,
up
to
isomorphism,
ro
oted
presheaf
o
v
er
P
;
.
An
y
F
n
(h0;
;i)
consists
of
a
pair
hX
n
;
L
n
i
with
X
n

j
d
P
L
n
j,
and
w
e
can
express
the
colimit
as
a
pair
hX
;
Li,
where
L
is
the
colimit
in
Set

of
the
L
n
and
X
is
the
colimit
in
c
P
L
of
all
the
co
cartesian
liftings
of
the
X
n
.
All
our
term
constructors
are
con
tinous
with
resp
ect
to
!
-c
hains,
hence
r
ec(F
)
determines
a
xed
p
oin
t.
So
the
construction
ab
o
v
e
yields
a
denotation
for
a
recursiv
ely
dened
pro
cess
in
terms
of
an
!
-colimit
of
preshea
v
es
o
v
er
a
common


path
category
.
W
e
w
ould
lik
e
to
deduce
the
bisim
ulation
of
recursiv
e
pro
cesses
r
ec
x:t,
r
ec
y
:u
from
bisim
ulation
b
et
w
een
the
op
en
terms
t
and
u.
Suc
h
op
en
terms
giv
e
rise
to
endofunctors
on
Gr
oth(
P
L
).
Th
us,
w
e
start
b
y
extending
the
notion
of
op
en
map,
and
therefore
bisim
ulation,
to
functors.
Denition:
Let

b
e
a
natural
transformation
b
et
w
een
t
w
o
functors
whose
co
domain
Gr
oth(
P
L
).
W
e
sa
y

is
op
en
if
eac
h
of
its
comp
onen
ts
is
op
en
in
a
bre
c
P
L
.
W
e
consider
t
w
o
endofunctors
F
;
G
on
Gr
oth(
P
L
)
bisimilar
if
there
is
another
endofunctor
R
and
a
span
of
op
en
natural
transformations

:
R
:
!
F
and

:
R
:
!
G
relating
them.
Denition:
Let
F
b
e
an
endofunctor
of
Gr
oth(
P
L
).
Dene
!
F
:
!
!
Gr
oth(
P
L
)
as
follo
ws
!
F
(n)
=
F
n
(0)
and
!
F
(n

m)
=
F
n
(0
F
m n
(0)
)
where
0
F
m n
(0)
is
the
unique
arro
w
from
the
initial
ro
oted
presheaf
to
F
m n
(0).
Prop
osition

L
et
F
;
R
b
e
endofunctors
of
Gr
oth(
P
L
)
and
let

:
R
:
!
X
b
e
a
natur
al
tr
ansformation.
Then
ther
e
is
a
natur
al
tr
ansformation
!

:
!
R
:
!
!
F
.
Mor
e
over
if

is
op
en
and
X
pr
eserve
op
en
morphisms,
then
!

is
op
en.
Op
en
maps
are
preserv
ed
in
passing
to
the
colimit,
in
particular:
Prop
osition

L
et
!
F
;
!
R
:
!
!
b
P
and
!

:
!
R
:
!
!
F
,
b
e
as
ab
ove,
with
!

op
en,
then
the
arr
ow
lim
!
!

:
lim
!
!
R
!
lim
!
!
F
,
uniquely
determine
d
by
the
univer-
sal
pr
op
erty
of
the
c
olimit,
is
an
op
en
map
in
the
br
e
over
the
c
olimiting
lab
el
ling
set.
Consequen
tly
,
if
t
w
o
endofunctors
F
;
G
ranging
o
v
er
Gr
oth(
P
L
)
are
bisimilar
and
preserv
e
op
en
maps,
then
the
colimits
r
ec(F
);
r
ec(G)
are
bisimilar.
A
term
with
a
free
v
ariable,
built-up
from
the
constructions
of
this
section,
will
determine
an
endofunctor
on
Gr
oth(
P
L
)
wic
h
preserv
es
op
en
maps
b
y
this
section's
prop
ositions.
It
follo
ws
that
if
t
w
o
op
en
terms
t
and
u
are
bisimilar,
i.e.
induce
bisimilar
functors,
then
the
recursiv
e
denitions
r
ec
x:t
and
r
ec
y
:u
are
bisimilar.
.
Denotational
seman
tics
W
e
dene
the
denotational
seman
tics,
with
resp
ect
to
an
en
vironmen
t

:
V
ar
s
!
jGr
oth(
P
L
)j;
inductiv
ely
on
the
structure
of
the
terms
in
Pro
c.
Nil:
[
[Nil
]
]

=
the
unique,
up
to
isomorphism,
ro
oted
presheaf
o
v
er
P
;
.
V
ariables:
[
[
x]
]

=
(x)


Sum:
[
[
t


t

]
]

=
[
[
t

]
]


[
[t

]
]

Pr
o
duct:
[
[t


t

]
]

=
[
[t

]
]


[
[
t

]
]

R
estriction:
Let

b
e
a
set.
[
[
t


]
]

=
[
[
t

]
]



R
elab
el
ling:
Let

:
L
!
M
b
e
total.
[
[t

[]]
]

=
[
[
t

]
]

[]
Pr
exing:
Let
a
b
e
a
lab
el,
then
[
[
at]
]

=
a([
[
t]
]

)
R
e
cursion:
Let
t
b
e
an
y
term,
and
let
x
b
e
a
v
ariable
(p
ossibly
free
in
t).
Giv
en
an
y
en
vironmen
t

the
term
t
and
the
v
ariable
x
determine
an
endofunctor
t
x

:
Gr
oth(
P
L
)
!
Gr
oth(
P
L
)
X
!
[
[
t]
]
[X
=x]
Dene
[
[
r
ecx:t]
]

=
r
ec(t
x

)
All
of
the
constructions
of
Section
.,
those
used
in
giving
the
seman
tics
ab
o
v
e,
preserv
e
op
en
maps
and
so
bisim
ulation.
Hence,
w
e
can
deduce
that
for
an
y
presheaf
mo
del,
the
bisim
ulation
equiv
alence
asso
ciated
with
spans
of
op
en
maps
is
a
congruence
for
the
language
Pro
c.
.
Concrete
mo
dels
revisited
The
seman
tics
and
results
sp
ecialise
to
the
sp
ecic
presheaf
mo
dels
on
path
cat-
egories
L

and
P
om
L
for
sets
L;
as
prexing
functors
a( )
w
e
tak
e
the
ob
vious
prexing
of
strings
and
p
omsets
b
y
an
o
ccurrence
of
the
elemen
t
a.
W
e
can
no
w
transfer
the
results
from
the
presheaf
mo
dels
to
the
concrete
mo
dels
of
sync
hroni-
sation
trees
and
ev
en
t
structures
b
y
noting
that
the
canonical
em
b
eddings
b
et
w
een
bres
ST
L
!
c
L

and
ES
L
!
\
P
om
L
extend
to
full
and
faithful
em
b
eddings
from
ES
and
ST
to
presheaf
mo
dels
b
y
the
next
prop
osition.
W
e
giv
e
rst
some
notation
to
facilitate
its
reading.
Notation:
If
F
:
C
!
B
is
a
cobration
w
e
write
b
y

C
!
:
C
b
0
!
C
b
for
the
functor
that
pro
vides
us
with
the
co
cartesian
liftings
of
the
arro
w

:
b
0
!
b.
Hence
w
e
write

C
c
0
for
the
co
cartesian
arro
w
at
c
0
pro
jecting
to

.
F
or
an
y
other
f
:
c
0
!
c
w
e
write
f

C
for
the
unique
arro
w
suc
h
that
f
=
f

C


C
c
0
Prop
osition

L
et
F
:
C
!
B
and
G
:
D
!
B
b
e
two
c
obr
ations.
F
or
any
b

j
B
j,
let
C
b
and
D
b
b
e
the
br
es
over
b.
Supp
ose
that
for
any
b,
i
b
:
C
b
!
D
b
is
a
ful
l
and
faithful
emb
e
dding
and
that
for
any

:
b
0
!
b
the
fol
lowing
diagr
am
c
ommutes:
C
b
0
/
i
0
b


C
!
D
b
0


D
!
C
b
/
i
b
D
b


Then
ther
e
is
a
ful
l
and
faithful
emb
e
dding
i
:
C
!
D
such
that
for
any
obje
ct
c

j
C
b
j,
i(c)
=
i
b
(c)
and
for
any
f
:
c
0
!
c
with
F
(f
)
=
b
0

!
b,
i(f
)
=
i
b
(f

C
)


D
i
b
(c)
W
e
ha
v
e
stated
this
result
for
cobrations
(rather
than,
equiv
alen
tly
,
for
brations)
b
ecause
ev
en
t
structures
form
a
cobration
(and
not
a
bration)
o
v
er
Set

.
The
em
b
eddings
of
ev
en
t
structures
and
sync
hronisation
trees
in
the
resp
ectiv
e
presheaf
categories
satisfy
the
prop
ert
y
of
the
prop
osition
ab
o
v
e.
Hence,
sp
ecialising
to
the
case
of
ev
en
t
structures:
Corollary

Ther
e
emb
e
dding
c
:
ES
!
Gr
oth(P
om
L
),
given
in
Pr
op
osition

is
dense,
ful
l
and
faithful.
It
follo
ws
that
c
:
ES
!
Gr
oth(P
om
L
)
preserv
es
pro
ducts,
and
it
can
b
e
c
hec
k
ed
that
copro
ducts
are
preserv
ed,
to
o.
Prop
osition

The
emb
e
dding
of
c
:
ES
!
Gr
oth(P
om
L
)
pr
eserves
pr
o
ducts,
c
opr
o
ducts,
c
o
c
artesian
liftings,
and
c
artesian
liftings
of
inclusions.
A
denotational
seman
tics
of
Pro
c
in
ev
en
t
structures
ES
is
giv
en
in
[
].
Deno-
tations
are
built
up
in
the
same
w
a
y
as
in
section
.,
using
the
same
univ
ersal
constructions;
for
example
the
denotation
of
t


t

is
built
up
as
a
pro
duct
in
ES,
while
the
denotation
of
a
restriction
is
got
from
a
cartesian
lifting.
With
the
help
of
Prop
osition

w
e
can
sho
w
that
the
em
b
edding
c
preserv
es
the
seman
tics
of
Pro
c.
The
only
construction
needing
a
separate
treatmen
t
is
prexing.
W
e
can
pro
v
e
that
the
\standard"
ev
en
t-structures
seman
tics
of
Pro
c
in
[]|write
ES
[
[
t]
]
for
the
denotation
of
a
term
t
as
in
ev
en
t
structure,
coincides
with
that
in
the
presheaf
mo
del
on
P
om
L
|write
[
[
t]
]
for
the
denotation
of
a
term
t
in
preshea
v
es
o
v
er
p
omsets.
The
pro
of
is
straigh
tforw
ard
(but
for
some
tec
hnicalities
in
the
treatmen
t
of
recursion).
Theorem

L
et

:
V
ar
s
!
j
ES
j
b
e
an
envir
onment
function.
Then
for
any
term
t
of
Pro
c
c(ES
[
[t]
]

)

=
[
[
t]
]
c
:
By
prop
osition
(ii),
op
en
maps
and
bisim
ulation
coincide,
via
the
canonical
em-
b
eddings,
in
ES
L
and
the
bre
o
v
er
L
in
Gr
oth(P
om
L
).
Hence
w
e
can
transfer
the
congruence
prop
ert
y
deduced
for
the
presheaf
seman
tics
to
deduce,
in
particular,
that
strong
history-preserving
bisim
ulation
is
a
congruence
for
the
language
Pro
c.

Relations
with
domain
theory
One
hop
e
in
mo
ving
to
more
abstract
presheaf
mo
dels
is
to
b
e
able
to
relate
the
theory
of
concurrency
with
the
theory
of
domains,
though
this
has
to
b
e
understo
o
d
in
a
generalised
sense,
in
whic
h
domains
can
b
e
prop
er
categories,
not
just
complete
partial
orders.


Finitely
accessible
categories
[],
the
category-analogue
of
algebraic
complete
par-
tial
orders,
are
ob
vious
candidates
for
suc
h
generalised
domains;
roughly
a
nitely
accessible
category
has
a
\basis"
of
\nite"
(nitely
presen
table)
ob
jects
from
whic
h
ev
ery
ob
ject
is
obtainable
as
a
directed
colimit.
As
prop
osed
in
[],
one
can
view
the
presheaf
construction
on
the
basis
of
a
nitely
accessible
category
as
a
form
of
p
o
w
erdomain
construction.
In
[]
it
is
indicated
ho
w
the
bicategory
Prof
of
profunctors
(or
distributors,
in
the
terminology
of
[],
v
ol.)
pro
vides
a
frame-
w
ork
in
whic
h
one
can
solv
e
domain
equations
for
path
categories.
The
bicategory
of
profunctors,
or
equiv
alen
tly
,
the
category
where
the
ob
jects
are
presheaf
cate-
gories
and
the
morphisms
are
colimit-preserving
functors,
should
b
e
though
t
of
as
a
category
of
nondeterministic
domains.
The
framew
ork
in
[]
is
applied
to
giv
e
a
denotational
seman
tics
to
a
v
alue-passing
pro
cess
language
with
late
seman
tics.
More
recen
tly
Ian
Stark
and
the
authors
ha
v
e
b
een
com
bining
these
results
with
those
of
[
,
]
to
pro
duce
presheaf
mo
dels
for
the

-calculus
with
b
oth
early
and
late
seman
tics.
It
is
also
p
ossible
to
giv
e
a
presheaf
seman
tics
to
pro
cess
languages
whic
h
p
ermit
pro
cesses
to
b
e
passed,
and
not
just
discrete
v
alues
or
names,
though
in
this
case
w
e
do
not
y
et
ha
v
e
a
go
o
d
understanding
of
the
notion
of
bisim
ulation
induced
b
y
op
en
maps|in
the
other
cases
men
tioned
bisim
ulation
in
the
mo
del
coincides
with
a
traditional
op
erational
denition
and
is
w
ell
understo
o
d.
So
far
all
the
presheaf
mo
dels
coping
with
higher-order
features
are
based
on
an
\in
terlea
ving"
treatmen
t
of
concurrency
,
as
presen
tly
w
e
cannot
see
ho
w
to
com
bine
facilit
y
at
higher-order
with
indep
endence
of
the
kind
found
in
ev
en
t
structures
and
P
etri
nets.
References
[]
Ad
amek,
J.,
and
Rosic
ky
,
J.,
L
o
c
al
ly
Pr
esentable
and
A
c
c
essible
Cate
gories.
London
Mathematical
So
ciet
y
Lecture
Note
Series,
	.
Cam
bridge
Univ
ersit
y
Press,
		.
[]
Bednarczyk,
M.,
Her
e
ditary
history
pr
eserving
bisimulation
or
what
is
the
p
ower
of
the
futur
e
p
erfe
ct
in
pr
o
gr
am
lo
gics.
T
ec
hnical
rep
ort,
P
olish
Academ
y
of
Sciences,
Gdansk,
		.
[]
Borceux,
F.,
Handb
o
ok
of
Cate
goric
al
A
lgebr
a,
vol.,.
Encyclop
edia
of
Math-
ematics
and
its
Applications,
v
ol.0,.
Cam
bridge
Univ
ersit
y
Press,
		.
[]
Cheng,
A.,
and
Nielsen,
M.,
Op
en
Maps,
Behaviour
al
Equivalenc
es,
and
Con-
gruenc
es.
Rep
ort
Series
RS-	-,
BRICS,
Univ
ersit
y
of
Aarh
us.
Denmark,
Jan
uary
		.
[]
Fiore,
M.P
.,
Axiomatic
Domain
The
ory
in
Cate
gories
of
Partial
Maps.
Ph.D
Thesis.
Distinguished
Dissertations
in
Computer
Science,
Cam
bridge
Univ
er-
sit
y
Press,
		.


[]
Fiore,
M.P
.,
Moggi,
E.,
and
Sangiorgi,
D.,
A
F
ul
ly-A
bstr
act
Mo
del
for
the

-c
alculus
In
Pro
ceedings
of
the
Elev
en
th
Ann
ual
IEEE
Symp
osium
on
Logic
in
Computer
Science,
pages.
-.
IEEE
Computer
So
ciet
y
Press,
		.
[]
Jo
y
al,
A.,
and
Mo
erdijk,
I.,
A
c
ompleteness
the
or
em
for
op
en
maps.
In
Annals
of
Pure
and
Applied
Logic
0,
-,
		.
[]
Jo
y
al,
A.,
Nielsen,
M.,
and
Winsk
el,
G.,
Bisimulation
fr
om
op
en
maps.
In
LICS
'	
sp
ecial
issue
of
Information
and
Computation,
v
ol.,
pp.-,
		.
[	]
v
an
Glabb
eek,
R.J.,
and
Goltz,
U.,
Equivalenc
e
notions
for
c
oncurr
ent
sys-
tems
and
r
enement
of
actions.
In
Pro
ceedings
of
Mathematical
foundations
of
computer
science
		,
pp.{,
Lecture
Notes
in
Computer
Science
v
ol.	,
		.
[0]
Nielsen,
M.,
and
Winsk
el,
G.,
Petri
nets
and
bisimulations.
Theoretical
Computer
Science
,
pp.-,
		.
[]
Plotkin,
G.,
Algebraic
Completeness
and
Compactness
in
an
Enric
hed
Setting.
Handwritten
Notes,
		
[]
Rabino
vitc
h,
A.,
and
T
rakten
brot,
B.,
Behaviour
structur
es
and
nets.
F
un-
damen
ta
Informatica,
(),
pp.-0,
	.
[]
Stark,
I.,
A
F
ul
ly
A
bstr
act
Domain
Mo
del
for
the

-Calculus
In
Pro
ceedings
of
the
Elev
en
th
Ann
ual
IEEE
Symp
osium
on
Logic
in
Computer
Science,
pages.
-.
IEEE
Computer
So
ciet
y
Press,
		.
[]
Winsk
el,
G.,
A
Pr
eshe
af
Semantics
of
V
alue-Passing
Pr
o
c
esses.
In
Pro
ceed-
ings
of
the
Sev
en
th
In
ternational
Conference
on
Concurrency
Theory:
CON-
CUR'	,
pp.	{,
Lecture
Notes
in
Computer
Science
v
ol.	,
		.
[]
Winsk
el,
G.,
and
Nielsen,
M.,
Mo
dels
for
c
oncurr
ency.
In
the
Handb
o
ok
of
Logic
in
Computer
Science,
v
ol.IV
pp.{,
ed.
Abramsky
,
Gabba
y
and
Maibaum,
Oxford
Univ
ersit
y
Press,
		.
The
diagrams
in
this
article
w
ere
dra
wn
using
Kristoer
Rose
X
Y
-pic
pac
k
age.


Recent Publications in the BRICS Report Series
RS-96-35 Gian Luca Cattani and Glynn Winskel. Presheaf Models
for Concurrency.
October 1996.
16 pp. Presented at
the Annual Conference of the European Association for
Computer Science Logic, CSL ’96.
RS-96-34 John Hatcliff and Olivier Danvy. A Computational For-
malization for Partial Evaluation (Extended Version). Oc-
tober 1996. To appear in Mathematical Structures in Com-
puter Science.
RS-96-33 Jonathan F. Buss, Gudmund Skovbjerg Frandsen, and
Jeffrey Outlaw Shallit. The Computational Complexity of
Some Problems of Linear Algebra. September 1996. 39 pp.
RS-96-32 P. S. Thiagarajan.
Regular Trace Event Structures.
September 1996. 34 pp.
RS-96-31 Ian Stark. Names, Equations, Relations: Practical Ways
to Reason about ‘new’. September 1996. ii+22 pp.
RS-96-30 Arne Andersson, Peter Bro Miltersen, and Mikkel Tho-
rup. Fusion Trees can be Implemented with AC
0 Instruc-
tions only. September 1996. 8 pp.
RS-96-29 Lars Arge.
The I/O-Complexity of Ordered Binary-
Decision Diagram Manipulation. August 1996. 35 pp.
An extended abstract version appears in Staples, Eades,
Kato, and Moffat, editors, Algorithms and Computation:
6th International Symposium, ISAAC ’95 Proceedings,
LNCS 1004, 1995, pages 82–91.
RS-96-28 Lars Arge. The Buffer Tree: A New Technique for Optimal
I/O Algorithms. August 1996. 34 pp. This report is a
revised and extended version of the BRICS Report RS-
94-16. An extended abstract appears in Akl, Dehne, Sack,
and Santoro, editors, Algorithms and Data Structures:
4th Workshop, WADS ’95 Proceedings, LNCS 955, 1995,
pages 334–345.

