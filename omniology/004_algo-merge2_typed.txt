Tim	  Roughgarden	  
Introduc2on	  
Merge	  Sort	  
(Pseudocode)	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Merge	  Sort:	  Pseudocode	  
-­‐-­‐	  recursively	  sort	  1st	  half	  of	  the	  input	  array	  
-­‐-­‐	  recursively	  sort	  2nd	  half	  of	  the	  input	  array	  
-­‐-­‐	  merge	  two	  sorted	  sublists	  into	  one	  
	  	  	  	  [ignores	  base	  cases]	  

Tim	  Roughgarden	  
C	  =	  output	  [length	  =	  n]	  
A	  =	  1st	  sorted	  array	  [n/2]	  
B	  =	  2nd	  sorted	  array	  [n/2]	  
i	  =	  1	  
j	  =	  1	  
for	  k	  =	  1	  to	  n	  
	  if	  A(i)	  <	  B(j)	  
	  
	  C(k)	  =	  A(i)	  
	  
	  i++	  
	  else	  [B(j)	  <	  A(i)]	  
	  
	  C(k)	  =	  B(j)	  
	  
	  j++	  
end	  
Pseudocode	  for	  Merge:	  
(ignores	  end	  cases)	  

Tim	  Roughgarden	  
Merge	  Sort	  Running	  Time?	  
Key	  Ques2on	  :	  running	  2me	  of	  Merge	  Sort	  on	  array	  
of	  n	  numbers	  ?	  
[running	  2me	  ~	  #	  of	  lines	  of	  code	  executed]	  

Tim	  Roughgarden	  
C	  =	  output	  [length	  =	  n]	  
A	  =	  1st	  sorted	  array	  [n/2]	  
B	  =	  2nd	  sorted	  array	  [n/2]	  
i	  =	  1	  
j	  =	  1	  
for	  k	  =	  1	  to	  n	  
	  if	  A(i)	  <	  B(j)	  
	  
	  C(k)	  =	  A(i)	  
	  
	  i++	  
	  else	  [B(j)	  <	  A(i)]	  
	  
	  C(k)	  =	  B(j)	  
	  
	  j++	  
end	  
Pseudocode	  for	  Merge:	  
(ignores	  end	  cases)	  
2	  opera2ons	  

Tim	  Roughgarden	  
Running	  Time	  of	  Merge	  
Upshot	  :	  running	  2me	  of	  Merge	  on	  array	  of	  
m	  numbers	  is	  
(Since 	  	  	  	  	  	  	  	  	  	  	  	  	  )	  

Tim	  Roughgarden	  
Running	  Time	  of	  Merge	  Sort	  
Claim	  :	  Merge	  Sort	  requires	  
	  
	  
	  	  opera2ons	  	  
to	  sort	  n	  numbers.	  
Recall	  :	  	  =	  	  	  	  	  	  	  	  	  	  	  	  is	  the	  #	  
of	  2mes	  you	  divide	  by	  2	  
un2l	  you	  get	  down	  to	  1	  

