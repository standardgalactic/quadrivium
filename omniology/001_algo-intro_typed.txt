Introduc)on	  
Why	  Study	  
Algorithms?	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  
•  plays	  a	  key	  role	  in	  modern	  technological	  innova)on	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  
•  plays	  a	  key	  role	  in	  modern	  technological	  innova)on	  
–  “Everyone	  knows	  Moore’s	  Law	  –	  a	  predic)on	  made	  in	  1965	  by	  Intel	  co-­‐
founder	  Gordon	  Moore	  that	  the	  density	  of	  transistors	  in	  integrated	  
circuits	  would	  con)nue	  to	  double	  every	  1	  to	  2	  years….in	  many	  areas,	  
performance	  gains	  due	  to	  improvements	  in	  algorithms	  have	  vastly	  
exceeded	  even	  the	  drama)c	  performance	  gains	  due	  to	  increased	  
processor	  speed.”	  
•  Excerpt	  from	  Report	  to	  the	  President	  and	  Congress:	  Designing	  a	  Digital	  Future,	  
December	  2010	  (page	  71).	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  
•  plays	  a	  key	  role	  in	  modern	  technological	  innova)on	  
•  provides	  novel	  “lens”	  on	  processes	  outside	  of	  
computer	  science	  and	  technology	  
–  quantum	  mechanics,	  economic	  markets,	  evolu)on	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  
•  plays	  a	  key	  role	  in	  modern	  technological	  innova)on	  
•  provides	  novel	  “lens”	  on	  processes	  outside	  of	  
computer	  science	  and	  technology	  
•  challenging	  (i.e.,	  good	  for	  the	  brain!)	  

Tim	  Roughgarden	  
Why	  Study	  Algorithms?	  
•  important	  for	  all	  other	  branches	  of	  computer	  science	  
•  plays	  a	  key	  role	  in	  modern	  technological	  innova)on	  
•  provides	  novel	  “lens”	  on	  processes	  outside	  of	  
computer	  science	  and	  technology	  
•  challenging	  (i.e.,	  good	  for	  the	  brain!)	  
•  fun	  

Tim	  Roughgarden	  
Integer	  Mul)plica)on	  	  
	  Input	  :	  2	  n-­‐digit	  numbers	  x	  and	  y	  
Output	  :	  product	  x*y	  
“Primi)ve	  Opera)on”	  -­‐	  	  add	  or	  mul)ply	  2	  single-­‐digit	  
numbers	  	  

Tim	  Roughgarden	  
The	  Grade-­‐School	  Algorithm	  
Roughly	  n	  opera)ons	  per	  
row	  up	  to	  a	  constant	  
#	  of	  opera)ons	  overall	  ~	  constant*	  

Tim	  Roughgarden	  
The	  Algorithm	  Designer’s	  Mantra	  
“Perhaps	  the	  most	  important	  principle	  for	  the	  good	  
algorithm	  designer	  is	  to	  refuse	  to	  be	  content.”	  
	  -­‐Aho,	  Hopcro`,	  and	  Ullman,	  The	  Design	  and	  
	  Analysis	  of	  Computer	  Algorithms,	  1974	  	  
CAN	  WE	  DO	  BETTER	  ?	  
[	  than	  the	  “obvious”	  method]	  

Tim	  Roughgarden	  
A	  Recursive	  Algorithm	  
Write	  
	  
	  	  	  	  and	  	  
Where	  	  a,b,c,d	  are	  n/2-­‐digit	  numbers.	  
[example:	  a=56,	  b=78,	  c=12,	  d=34]	  
Then	  
Idea	  :	  recursively	  compute	  ac,	  ad,	  bc,	  bd,	  then	  
compute	  (*)	  in	  the	  obvious	  way	  

Tim	  Roughgarden	  
Karatsuba	  Mul)plica)on	  
1.  Recursively	  compute	  ac	  
2.  Recursively	  compute	  bd	  
3.  Recursively	  compute	  (a+b)(c+d)	  =	  ac+bd+ad+bc	  
Gauss’	  Trick	  :	  (3)	  –	  (1)	  –	  (2)	  =	  ad	  +	  bc	  
Upshot	  :	  Only	  need	  3	  recursive	  mul)plica)ons	  (and	  some	  addi)ons)	  
Q	  :	  which	  is	  the	  fastest	  algorithm	  ?	  

