Ke Huang
Ka-Veng Yuen
Bayesian 
Real-Time 
System 
Identification
From Centralized to Distributed 
Approach

Bayesian Real-Time System Identiﬁcation

Ke Huang · Ka-Veng Yuen 
Bayesian Real-Time System 
Identiﬁcation 
From Centralized to Distributed Approach

Ke Huang 
School of Civil Engineering 
Changsha University of Science 
and Technology 
Changsha, Hunan, China 
State Key Laboratory of Internet of Things 
for Smart City and Department of Civil 
and Environmental Engineering 
University of Macau 
Taipa, China 
Ka-Veng Yuen 
State Key Laboratory of Internet of Things 
for Smart City and Department of Civil 
and Environmental Engineering 
University of Macau 
Taipa, China 
ISBN 978-981-99-0592-8
ISBN 978-981-99-0593-5 (eBook) 
https://doi.org/10.1007/978-981-99-0593-5 
© The Editor(s) (if applicable) and The Author(s), under exclusive license to Springer Nature 
Singapore Pte Ltd. 2023 
This work is subject to copyright. All rights are solely and exclusively licensed by the Publisher, whether 
the whole or part of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse 
of illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and 
transmission or information storage and retrieval, electronic adaptation, computer software, or by similar 
or dissimilar methodology now known or hereafter developed. 
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication 
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant 
protective laws and regulations and therefore free for general use. 
The publisher, the authors, and the editors are safe to assume that the advice and information in this book 
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or 
the editors give a warranty, expressed or implied, with respect to the material contained herein or for any 
errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional 
claims in published maps and institutional afﬁliations. 
This Springer imprint is published by the registered company Springer Nature Singapore Pte Ltd. 
The registered company address is: 152 Beach Road, #21-01/04 Gateway East, Singapore 189721, 
Singapore

Preface 
System identiﬁcation aims at estimating the physical parameters associated with 
a mathematical model from measured data. It is applicable to virtually all areas of 
science and engineering. Any discipline concerned with mathematical modeling of its 
underlying system is a likely candidate for system identiﬁcation. This includes statis-
tical physics, information sciences, chemical engineering, electrical engineering, 
etc. Real-time system identiﬁcation provides comprehensive treatment for the chal-
lenging issue in dynamical systems: tracking time-varying systems. It is desirable for 
promptly acquiring information from the system for monitoring and control purposes. 
This book aims to provide novel identiﬁcation insights for dealing with some chal-
lenging identiﬁcation problems for time-varying dynamical systems. It offers two 
different perspectives to data processing for system identiﬁcation, namely, central-
ized and distributed, compared with conventional centralized approaches. Central-
ized identiﬁcation requires transmitting all measured data to a single processing 
unit. A number of methods for parameter estimation have been developed in this 
scope under different working conditions. Real-time model class selection is also 
considered and it is incorporated with parameter estimation for system identiﬁca-
tion purposes. Traditionally, there are two levels of system identiﬁcation problems, 
i.e., estimation of the uncertain parameters governed in the mathematical model 
and selection of an appropriate model class representing the underlying dynamical 
system. However, in terms of model class selection, there is no guarantee of satisfac-
tory modeling results since all the model class candidates may be unsuitable. A new 
third level of system identiﬁcation using self-calibratable model classes will be intro-
duced. The structure of the model classes can be adaptively modiﬁed. On the other 
hand, distributed identiﬁcation takes advantage of wireless sensing, data acquisition, 
and computational technology so that the computational workload can be outsourced 
and distributed to the sensor nodes. Then, the obtained local results are fused at the 
central station to provide the global interpretation of the underlying system. Methods 
are also developed based on the distributed identiﬁcation framework using data of 
different natures, including asynchronous data and multiple outlier corrupted data. 
This book presents the applications for Bayesian real-time system identiﬁcation 
to enrich practical engineering scenarios. Although the application context mainly
v

vi
Preface
focuses on civil engineering infrastructures, the presented theories and algorithms are 
widely applicable for general dynamical systems (such as mechanical systems and 
aerospace structures). This book provides sufﬁcient background to follow Bayesian 
methods for solving real-time system identiﬁcation problems in civil and other 
engineering disciplines. 
Changsha, China 
Taipa, China 
Ke Huang 
Ka-Veng Yuen 
Acknowledgements We would like to express our sincere thanks for the ﬁnancial support from 
the Science and Technology Development Fund of the Macao SAR Government, the Research 
Committee of the University of Macau, the Guangdong-Hong Kong-Macau Joint Laboratory 
Program (2020B1212030009) and National Natural Science Foundation of China. 
We are also grateful to Mr. Rajasekar Ganesan and Mr. Wayne Hu for their excellent advices 
throughout the entire book preparation process.

Contents 
1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1 
1.1 
Dynamical Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
1 
1.1.1 
Time-Invariant Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2 
1.1.2 
Time-Varying Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3 
1.2 
System Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4 
1.2.1 
Problems in System Identiﬁcation . . . . . . . . . . . . . . . . . . . . . .
5 
1.2.2 
Real-Time System Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . .
11 
1.2.3 
Bayesian System Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . .
14 
1.3 
Uncertainty . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
16 
1.4 
Organization of the Book . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
20 
2 
System Identiﬁcation Using Kalman Filter and Extended 
Kalman Filter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
25 
2.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
25 
2.2 
Standard Kalman Filter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
28 
2.2.1 
Derivation of the Discrete-Time Kalman Filter . . . . . . . . . . .
28 
2.3 
Applications to State Estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
33 
2.3.1 
Vehicle Tracking Problem . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
33 
2.3.2 
Sixty-Story Building . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
39 
2.4 
Extended Kalman Filter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
42 
2.4.1 
Derivation of the Extended Kalman Filter . . . . . . . . . . . . . . . .
43 
2.4.2 
Extended Kalman Filter with Fading Memory . . . . . . . . . . . .
47 
2.5 
Application to State Estimation and Model Parameter 
Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
50 
2.5.1 
Single-Degree-of-Freedom System . . . . . . . . . . . . . . . . . . . . .
50 
2.5.2 
Three-Pier Bridge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
53 
2.5.3 
Bouc-Wen Hysteresis System . . . . . . . . . . . . . . . . . . . . . . . . . .
57 
2.6 
Application to a Field Inspired Test Case: The Canton Tower . . . . .
63 
2.6.1 
Background Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
63 
2.6.2 
Identiﬁcation of Structural States and Model Parameters . . .
67
vii

viii
Contents
2.7 
Extended Readings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
68 
2.8 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
71 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
72 
3 
Real-Time Updating of Noise Parameters for System 
Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
75 
3.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
75 
3.2 
Real-Time Updating of Dynamical Systems and Noise 
Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
80 
3.2.1 
Updating of States and Model Parameters . . . . . . . . . . . . . . .
80 
3.2.2 
Updating of Noise Parameters . . . . . . . . . . . . . . . . . . . . . . . . .
82 
3.3 
Efﬁcient Numerical Optimization Scheme . . . . . . . . . . . . . . . . . . . . . .
84 
3.3.1 
Training Phase . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
84 
3.3.2 
Working Phase . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
85 
3.3.3 
Uncertainty Estimation of the Updated Noise 
Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
86 
3.4 
Applications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
88 
3.4.1 
Bouc-Wen Hysteresis System . . . . . . . . . . . . . . . . . . . . . . . . . .
88 
3.4.2 
Three-Pier Bridge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
97 
3.5 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
106 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
106 
4 
Outlier Detection for Real-Time System Identiﬁcation . . . . . . . . . . . . .
109 
4.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
109 
4.2 
Outlier Detection Using Probability of Outlier . . . . . . . . . . . . . . . . . .
119 
4.2.1 
Normalized Residual of Measurement . . . . . . . . . . . . . . . . . . .
119 
4.2.2 
Probability of Outlier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
121 
4.3 
Computational Efﬁciency Enhancement Techniques . . . . . . . . . . . . .
124 
4.3.1 
Moving Time Window . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
124 
4.3.2 
Efﬁcient Screening Criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . .
125 
4.4 
Outlier Detection for Time-Varying Dynamical Systems . . . . . . . . .
126 
4.4.1 
Training Stage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
126 
4.4.2 
Working Stage . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
127 
4.5 
Applications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
129 
4.5.1 
Outlier Generation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
129 
4.5.2 
Single-Degree-of-Freedom Oscillator . . . . . . . . . . . . . . . . . . .
129 
4.5.3 
Fourteen-Bay Truss . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
133 
4.6 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
142 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
146 
5 
Bayesian Model Class Selection and Self-Calibratable Model 
Classes for Real-Time System Identiﬁcation
. . . . . . . . . . . . . . . . . . . . . .
147 
5.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
147 
5.2 
Bayesian Real-Time Model Class Selection . . . . . . . . . . . . . . . . . . . .
152 
5.3 
Real-Time System Identiﬁcation Using Predeﬁned Model 
Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
155

Contents
ix
5.3.1 
Parametric Identiﬁcation with a Speciﬁed Model Class . . . .
155 
5.3.2 
Parametric Identiﬁcation Using Multiple Model Classes . . .
157 
5.3.3 
Parametric Identiﬁcation Using the Most Plausible 
Model Class . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
158 
5.3.4 
Predeﬁned Model Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
158 
5.4 
Self-Calibratable Model Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
160 
5.4.1 
Parameterization and Model Classes . . . . . . . . . . . . . . . . . . . .
161 
5.4.2 
Self-Calibrating Strategy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
162 
5.4.3 
Procedure of the Real-Time System Identiﬁcation 
with Self-Calibratable Model Classes . . . . . . . . . . . . . . . . . . .
165 
5.5 
Hierarchical Interhealable Model Classes . . . . . . . . . . . . . . . . . . . . . .
167 
5.5.1 
Hierarchical Model Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . .
167 
5.5.2 
Interhealing Mechanism . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
170 
5.5.3 
Triggering Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
171 
5.5.4 
Procedure of the Real-Time System Identiﬁcation 
Using Hierarchical Interhealable Model Classes . . . . . . . . . .
172 
5.6 
Applications to Bayesian Real-Time Model Class Selection 
for System Identiﬁcation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
174 
5.6.1 
Identiﬁcation of High-Rise Building with Predeﬁned 
Model Classes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
174 
5.6.2 
Identiﬁcation of Bouc-Wen Nonlinear Hysteresis 
System with Self-Calibratable Model Classes . . . . . . . . . . . .
180 
5.6.3 
Identiﬁcation of Three-Dimensional Truss Dome 
with Hierarchical Interhealable Model Classes . . . . . . . . . . .
189 
5.7 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
201 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
202 
6 
Online Distributed Identiﬁcation for Wireless Sensor Networks . . . . .
203 
6.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
203 
6.2 
Typical Architectures of Wireless Sensor Network . . . . . . . . . . . . . .
205 
6.2.1 
Centralized Networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
205 
6.2.2 
Decentralized Networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
206 
6.2.3 
Distributed Networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
207 
6.3 
Problem Formulations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
208 
6.4 
Compression and Extraction Technique at the Sensor Nodes . . . . . .
211 
6.4.1 
Compression and Extraction of the Updated State 
Vector . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
211 
6.4.2 
Compression and Extraction of the Covariance Matrix . . . . .
214 
6.5 
Bayesian Fusion at the Central Station . . . . . . . . . . . . . . . . . . . . . . . . .
216 
6.5.1 
The Product of Univariate Gaussian PDFs . . . . . . . . . . . . . . .
216 
6.5.2 
The Product of Multivariate Gaussian PDFs . . . . . . . . . . . . . .
219 
6.5.3 
Fusion of the Compressed Local Information . . . . . . . . . . . . .
223 
6.6 
Illustrative Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
228 
6.6.1 
Example 1: Forty-Story Building . . . . . . . . . . . . . . . . . . . . . . .
228 
6.6.2 
Example 2: Bridge with Two Piers . . . . . . . . . . . . . . . . . . . . . .
230

x
Contents
6.7 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
236 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
240 
7 
Online Distributed Identiﬁcation Handling Asynchronous Data 
and Multiple Outlier-Corrupted Data . . . . . . . . . . . . . . . . . . . . . . . . . . . .
241 
7.1 
Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
241 
7.2 
Online Distributed Identiﬁcation Framework . . . . . . . . . . . . . . . . . . .
247 
7.2.1 
Local Identiﬁcation at the Sensor Nodes . . . . . . . . . . . . . . . . .
247 
7.2.2 
Bayesian Fusion at the Central Station . . . . . . . . . . . . . . . . . .
249 
7.3 
Online Distributed Identiﬁcation Using Asynchronous Data . . . . . .
250 
7.4 
Application to Model Updating of a Sixteen-Bay Truss . . . . . . . . . .
254 
7.5 
Hierarchical Outlier Detection . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
257 
7.5.1 
Local Outlier Detection at the Sensor Nodes . . . . . . . . . . . . .
261 
7.5.2 
Global Outlier Detection at the Central Station . . . . . . . . . . .
263 
7.6 
Application to Model Updating of a Forty-Story Building . . . . . . . .
268 
7.7 
Concluding Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
273 
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
276

Nomenclature 
upper C
model class 
bold upper C
damping matrix 
bold italic f
excitation vector 
bold upper G
Kalman gain 
h
observation function 
bold upper H
(linearized) observation matrix 
i
time index at the sensor node 
upper I
time index at the central station 
upper J
objective function 
bold upper K
stiffness matrix 
bold upper M
mass matrix 
bold italic n
measurement noise vector 
upper N Subscript d
number of degrees of freedom (DOFs) 
upper N Subscript m
number of modes 
upper N Subscript o
number of observed DOFs 
upper N Subscript s
number of sensor nodes 
upper P
plausibility 
p
probability density function 
r
restoring force vector 
bold upper T
force distributing matrix 
bold italic y
augmented state vector 
bold italic y Subscript i vertical bar i minus 1
one-step-ahead predicted state vector 
bold italic y Subscript i vertical bar i
ﬁltered state vector 
bold italic z
observation vector 
bold italic z Subscript i vertical bar i minus 1
one-step-ahead predicted observation 
bold italic phi Subscript bold italic m
mode shape vector of the mth mode
bold upper Phi
modal matrix, b o ld upper  P h i  equals left bracket bold italic phi 1 comma bold italic phi 2 comma ellipsis comma bold italic phi Subscript upper N Sub Subscript m Subscript Baseline right bracket
lamda
fading vector 
bold italic theta
model parameter vector for identiﬁcation 
bold italic theta Subscript k
stiffness parameter vector for identiﬁcation
b old upper Sigma Subscript f
covariance matrix of process noise
xi

xii
Nomenclature
bold upper Sigma Subscript n
covariance matrix of measurement noise
bold upper Sigma Subscript y comma i vertical bar i minus 1
covariance matrix of the one-step-ahead predicted state vector
bold upper Sigma Subscript y comma i vertical bar i
covariance matrix of the ﬁltered state vector
bold upper Sigma Subscript z comma i vertical bar i minus 1
covariance matrix of the one-step-ahead predicted observation 
double struck upper R
set of real numbers

Chapter 1 
Introduction 
Abstract This chapter introduces the basis and fundamental concepts about system 
identiﬁcation. First, dynamical systems and their basic properties are introduced. 
System identiﬁcation is the problem of building mathematical models describing the 
behavior of a dynamical system based on the observations from the system. Tradi-
tionally, there are two levels of system identiﬁcation problems, i.e., estimation of 
the uncertain parameters governed in the mathematical model and selection of an 
appropriate model class representing the underlying dynamical system. In addition, 
one of the special features of this book is that it will introduce the new third level of 
system identiﬁcation using self-calibratable model classes. Real-time system identiﬁ-
cation is desirable for promptly acquiring information from the system for monitoring 
and control purposes. The Bayes’ theorem and system identiﬁcation using Bayesian 
methods are brieﬂy introduced. Finally, an overview of this book is given with outline 
of each chapter for the convenience of readers. This book introduces some recent 
developments in Bayesian real-time system identiﬁcation. It contains two different 
perspectives on data processing for system identiﬁcation, namely centralized and 
distributed. 
Keywords Bayesian inference · Dynamical system · Real-time estimation ·
System identiﬁcation · Time-varying system 
1.1 
Dynamical Systems 
A dynamical system can be represented by a mathematical model describing the time 
dependence behavior of a point in an ambient space (Katok and Hasselblatt 1995). 
At any given time instant, a dynamical system has a state that represents a point in 
its state space. In other words, the states of a system are the variables that provide a 
complete representation of the internal condition or status of the system at any given 
time instant. The mathematical model characterizes the link between actual physical 
systems and mathematically feasible solutions. Representative examples include the 
oscillation of a single pendulum, the location of a moving vehicle, the daily weather 
of a city and population growth, etc. Given a dynamical system, the values of outputs 
rely on not only the instantaneous and past values of the inputs but also the behavior
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_1 
1

2
1
Introduction
Fig. 1.1 A SDOF 
mass-spring-damper model 
f (t) 
k 
c 
m 
x t
Accelerometer 
of the system. One of the most commonly used examples for a dynamical system is 
the equation of motion of a mass-spring-damper model which consists of discrete 
mass nodes interconnected via springs and dampers. The mass-spring-damper model 
is well known in the studies of mechanical vibration for its simplicity and accurate 
imitation of natural behavior. Figure 1.1 shows a simple single-degree-of-freedom 
(SDOF) mass-spring-damper model. The mass node moves in response to the external 
force f applied to it. The derivation of the equation of motion for this SDOF mass-
spring-damper model can be easily done by examining the sum of the forces on the 
mass node and the equation of motion can be expressed as follows: 
m Modifying Above x With two  d ots
 left parenthesis t right parenthesis plus c ModifyingAbove x With dot left parenthesis t right parenthesis plus k x left parenthesis t right parenthesis equals f left parenthesis t right parenthesis
where x denotes the displacement vector of the node; m, c and k indicate the mass 
of the node, damping coefﬁcient and stiffness of the spring, respectively; f is the 
external force applied to the mass node. Equation (1.1) describes the behavior of 
the mass-spring-damper model in terms of its motion as a function of time. If an 
accelerometer is deployed on the mass node to observe its acceleration response, the 
input and output of this dynamical system are the external force f and the acceleration 
ModifyingAbove x With two dots (subject to some measurement error), respectively. 
1.1.1 
Time-Invariant Systems 
Time-invariant systems refer to the systems whose behavior and characteristics are 
ﬁxed over time (Oppenheim and Willsky 1997). This description is conceptually 
straightforward. For example, the SDOF mass-spring-damper system in Fig. 1.1 is 
time-invariant if the mass, damping and stiffness values m, c and k remain constant 
over time. The time-invariant property can be simply represented by using concept 
in signals. Speciﬁcally, a system is time-invariant if a time shift in the input signal 
leads to an identical time shift in the output signal (Cherniakov 2003). In particular, 
consider a system with time-dependent output y left parenthesis t right parenthesisand input f left parenthesis t right parenthesis. A time-invariant 
system will have system output y le ft parenthesis t plus delta right parenthesiswhen the input f lef t parenthesis t plus delta right parenthesisis applied to the 
system, where deltais an arbitrary time shift. In the perspective of mathematics, a system 
will be regarded as time-invariant if the relationship between inputs f left parenthesis t right parenthesisand outputs 
y left parenthesis t right parenthesisis constant with respect to time t: 
y left paren thesis t right pare
nthesis equals g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis equals g left parenthesis f left parenthesis t right parenthesis right parenthesis

1.1 Dynamical Systems
3
where g left parenthesis dot right parenthesisis the function describing the relationship between the input and output. 
Equation (1.2) implies that the system variation with time is identically equal to zero: 
StartFraction normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
Sta
rtFracti on normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
St
artFract ion normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
Star tFra
ct io n normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
St
artFract ion normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
Star tFra
ct io n normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
Sta
rtFraction normal d y left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction plus StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction equals StartFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential f left parenthesis t right parenthesis EndFraction StartFraction normal d f left parenthesis t right parenthesis Over normal d t EndFraction
where StartF raction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction identical to 0
Sta
rtFraction partial differential g left parenthesis f left parenthesis t right parenthesis comma t right parenthesis Over partial differential t EndFraction identical to 0. 
There are various applications of time-invariant systems, including electrical 
circuit analysis and design (Fontana et al. 2019), signal processing and control theory 
(Chen et al. 2006), digital ﬁlter design (Shmaliy 2010), image processing (Messner 
and Szu 1985) and mechanical engineering (Araújo 2019). In addition to the property 
of time invariance, the conventional and classical theory of dynamical system iden-
tiﬁcation often assumes that the system of interest is linear and classically damped. 
Linear time-invariant system theory has been developed as the fundamental materials 
of system identiﬁcation for decades and it arises in a wide variety of applications 
(Phillips et al. 2003). 
1.1.2 
Time-Varying Systems 
In practical applications, the model parameters in the system of interest are often 
not constant over time. For example, if the stiffness k of the spring in the SDOF 
dynamical system in Fig. 1.1 changes over time, e.g., stiffness degradation due to 
long service duration, the SDOF dynamical system will no longer be time-invariant 
but time-varying. 
Time-varying systems indicate that the behavior and characteristics of the systems 
change over time. It is obvious that a shift of the input signal for a time-varying system 
does not simply shift the output signal in time. On the contrary, the time-frequency 
content of the output can be completely changed. In other words, time-varying 
systems respond differently to the same input at different instants of time. This is 
the major difference between time-invariant and time-varying systems. Figure 1.2 is 
the schematic diagram depicting this difference between these two types of systems. 
Compared with time-invariant systems, it is much more challenging to identify time-
varying dynamical systems since the number of uncertain/unknown parameters in 
time-varying systems is typically substantially larger than that in the corresponding 
time-invariant systems.

4
1
Introduction
Time-invariant system 
Time-varying system 
Inputs
Outputs 
Fig. 1.2 Difference between time-invariant system and time-varying system 
1.2 
System Identiﬁcation 
System identiﬁcation is applicable to virtually all areas of science and engineering. 
Any discipline concerned with mathematical modeling of its underlying system 
is a likely candidate for system identiﬁcation. This includes electrical engineering 
(Kristinsson and Dumont 1992; Andrieu et al. 2004), mechanical engineering (Sirca 
and Adeli 2012; Noël and Kerschen 2017), astronomical engineering (Chiuso et al. 
2009; Shore et al. 2010), computer science (Yang and Sakai 2007; Tepljakov et al. 
2011), chemical engineering (Zheng and Hoo 2004; Vasquez et al. 2008), engi-
neering geology (Kijewski and Kareem 2003; Wang et al. 2016), aerospace engi-
neering (Cowan et al. 2001; Valasek and Chen 2003), robotics (Bemporad et al. 2005; 
Kozlowski 2012), economics (Heckman 2000), ecology (Wu et al. 2006), biology 
(Banga 2008), ﬁnance (Los 2006), sociology (Golding 1982) and many others (Zhang 
and Yin 2003). 
System identiﬁcation considers the problem of building mathematical models 
of dynamical systems using measurements of the input and output signals (or 
sometimes output-only measurements) of the system (Ljung 1987, 1998). A model 
refers to a mathematical relationship between inputs and outputs. In general, the 
models of dynamical systems are described by difference or differential equations, 
transfer functions and/or state-space equations, etc. The typical process of system 
identiﬁcation consists of: 
• Observing the input-output or output-only signals from the underlying dynamical 
system in the time- or frequency- domain; 
• Selecting a proper mathematical model for representing the dynamical system; 
• Applying an estimation method to obtain the estimated values of the uncertain 
parameters in the candidate mathematical model; 
• Utilizing the estimated model to evaluate whether the model is appropriate to 
represent the application requirements.

1.2 System Identiﬁcation
5
It is noticed that there are, traditionally, two levels of system identiﬁcation problems 
to be considered although they are strongly connected (Yuen 2010). The ﬁrst level is 
parametric identiﬁcation for a prescribed mathematical model with uncertain param-
eters. The second level is on the selection of a class of parametric models, namely 
model class hereafter, based on some observed input and output signals. However, 
in terms of model class selection, there is no guarantee of satisfactory modeling 
results since all the model class candidates may be unsuitable. In other words, a poor 
model class will still be chosen if there is no suitable model class among all the 
candidates. In Chap. 5, we will introduce a new level of system identiﬁcation using 
self-calibratable model classes. The structure of the model classes can be adaptively 
modiﬁed. As a result, even if one starts from some poor model class candidates, there 
is still possibility to end up with a satisfactory modeling result. This is one of the key 
features of this book. 
1.2.1 
Problems in System Identiﬁcation 
1.2.1.1
Parametric Identiﬁcation 
The ﬁrst level of system identiﬁcation is to identify the physical parameters governing 
the underlying dynamical system, e.g., stiffnesses of some structural elements or 
damping coefﬁcients of a dynamical system. These estimated parameters can be 
further utilized as indicators for analysis of the corresponding dynamical systems. 
For example, the estimated stiffnesses of some structural elements can indicate the 
integrity of the monitored structure and an abrupt change of an estimated stiff-
ness indicates possible damage of the corresponding structural member(s). However, 
abrupt changes may be simply due to statistical uncertainty (Yuen 2010). As a result, 
in addition to estimating the uncertain parameters governing the dynamical system, 
it is highly desired to quantify the associated uncertainty of the estimation results so 
that the abrupt changes of the parameters can be appropriately utilized to reﬂect the 
possible variations of the underlying dynamical system. On the other hand, the distri-
bution of the estimated parameters indicates the credibility level of the identiﬁcation 
results. 
Example. Parametric estimation using the classical least squares estimation. 
Consider a simple example drawn from physics. A helical spring was attached at 
one end to a ﬁxed point and was pulled horizontally by an external force upper F to the 
other end, as shown in Fig. 1.3. It was assumed that the spring had reached a state 
of equilibrium, which inferred that the length of the spring did not change anymore. 
Deﬁne x as the extension (positive) or compression (negative) of the spring. Then, 
the well-known Hooke’s law states that the extension or compression of the spring 
is proportional to the external force upper F (Rychlewski 1984):

6
1
Introduction
F 
k
x 
Fig. 1.3 Extension of a helical spring pulled by an external force 
up per 
F equals k x
where k is the parameter characterizing the stiffness of the spring, namely the stiff-
ness parameter or spring constant. It was assumed that the stiffness parameter k
was unknown and upper N experimental observations were obtained to estimate the value 
of k. Speciﬁcally, the input-output dataset left brace left parenthesis x Subscript n Baseline comma upper F Subscript n Baseline right parenthesis right brace, n eq uals 1  c o mma 2 comma ellipsis comma upper N, consisted 
of upper N independent pairs of measurements with different extensions of the spring 
and the corresponding magnitudes of the external forceperiodThe prediction error epsilonwas 
represented by a zero-mean discrete Gaussian white noise process: 
up er F S ubscr
ip t n Bas e l i n e 
equals k x Subscript n Baseline plus epsilon Subscript n Baseline comma n equals 1 comma 2 comma ellipsis comma upper N
The goal is to determine the value of the stiffness parameter for the model in Eq. (1.4) 
such that the data is best ﬁtted. The classical least squares estimation was used to 
identify the unknown parameter k (Sorenson 1970). The ﬁtness of the model to a data 
point was evaluated by its residual deﬁned as the difference between the observation 
and output value from the model: 
r S ubscr ipt n 
Ba seline e q u a ls
 upper F Subscript n Baseline minus k x Subscript n Baseline comma n equals 1 comma 2 comma ellipsis comma upper N

1.2 System Identiﬁcation
7
The optimal parameter value could be identiﬁed by minimizing the sum of the 
squared residuals (Bai 1994): 
M
od
ifying Abov
e 
k
 
With
 ca
re t equa ls a
rg
 
m
in U
nder script k
 Endscripts sigma summation Underscript n equals 1 Overscript upper N Endscripts r Subscript n Superscript 2 Baseline equals arg min Underscript k Endscripts sigma summation Underscript n equals 1 Overscript upper N Endscripts left parenthesis upper F Subscript n Baseline minus k x Subscript n Baseline right parenthesis squared
The analytical solution of Eq. (1.7) could be easily obtained as follows: 
M
od
i
fyi
ngAb ove k With caret equals StartFraction sigma summation Underscript n equals 1 Overscript upper N Endscripts upper F Subscript n Baseline x Subscript n Baseline Over sigma summation Underscript n equals 1 Overscript upper N Endscripts x Subscript n Superscript 2 Baseline EndFraction
Mod
ifyi ngAbo
ve k With caret equals StartFraction sigma summation Underscript n equals 1 Overscript upper N Endscripts upper F Subscript n Baseline x Subscript n Baseline Over sigma summation Underscript n equals 1 Overscript upper N Endscripts x Subscript n Superscript 2 Baseline EndFraction
This simple example gives the gist of parametric identiﬁcation. The uncertain 
stiffness parameter governed by Eq. (1.4) can be estimated by using least squares 
estimation based on Hooke’s law. 
1.2.1.2
Determination of a Mathematical Model Class 
The basis for parametric identiﬁcation is subject to an appropriate parametric model. 
Therefore, a crucial problem of system identiﬁcation is to determine a proper mathe-
matical model class to represent the underlying dynamical system for future predic-
tion. A model class consists of a set of predictive input-output models with adjustable 
parameters for a system (Beck 2010). The objective of model class selection is to 
improve the predictive capability of the models for dynamical systems design (Muto 
and Beck 2008). The conventional approach in system identiﬁcation is to select the 
optimal model in a speciﬁed class of models, e.g., a class of shear building models 
or a class of hysteretic models (Beck and Yuen 2004). Given a set of model class 
candidates, it is obvious that a more complicated model class with extra adjustable 
uncertain model parameters always ﬁts the measurements better than a simpler model 
class with fewer model parameters. In other words, if the selection criterion is based 
on the minimization of some prediction errors between the output data and the corre-
sponding predictive results of the optimal model in each class, the optimal model class 
will be the most complicated one (Beck and Yuen 2004). However, it is insufﬁcient 
to consider solely the data ﬁtting capability for model class selection because it often 
leads to unnecessarily complicated model classes with poor predictive capability. 
Example. Polynomial curve ﬁtting 
Consider the following input-output relationship: 
y S u bscript
 n  Baselin
e equals m inus  0.1 
x Subscri p t  n  S
uperscript 3 Baseline minus 0.3 x Subscript n Superscript 2 Baseline minus 0.2 x Subscript n Baseline plus 6 plus epsilon Subscript n Baseline comma n equals 1 comma 2 comma ellipsis comma upper N
A training dataset contained up pe r N equals 20 data points, in which x Subscript n, n eq uals 1  c o mma 2 comma ellipsis comma upper N, 
were generated uniformly from the interval left bracket minus 1 comma 1 right bracket and epsilon Subscript n, n equals 1  c o mma 2 comma ellipsis comma upper N, were

8
1
Introduction
Fig. 1.4 Training dataset 
generated by a zero-mean discrete Gaussian process with standard deviation sig ma
 Subscript epsilon Baseline equals 0.1. The relationship in Eq. (1.9) was used for data generation purpose only. The 
training dataset is shown in Fig. 1.4. 
Polynomials with different orders were utilized to ﬁt the dataset in Fig. 1.4 in the 
least-squares sense: 
f left parenth esis x righ t  p a r en thesis  equal s a S
ub script d Baseline x Su
perscript d Baseline plus a Subscript d minus 1 Baseline x Superscript d minus 1 Baseline plus midline horizontal ellipsis plus a 2 x squared plus a 1 x plus a 0 comma d equals 2 comma 5 comma 8 comma 10 comma 15 comma 19
where a 0 com m a  a  1 comma ellipsis comma a Subscript d Baseline are the coefﬁcients of the polynomial and they can be 
determined by using least squares estimation approach (Sorenson 1970). 
Figure 1.5 shows the ﬁtting results of the corresponding polynomial functions 
by using the training dataset. The red dashed lines represent the true input-output 
relationship; the dots represent the training data; the solid lines represent the ﬁtted 
polynomial functions; and the grey dashed lines represent the bounds of the 99.7% 
credible intervals. It is obvious to see that the polynomial functions with orders d equals 2
and d equals 5 were smooth curves. Their ﬁtting errors were larger than the remaining 
functions since they have less adjustable coefﬁcients than other polynomials with 
higher orders. In addition, the bounds of the credible intervals for the polynomial 
functions with orders d eq uals 2 and d eq uals 5 were wider than those of the remaining 
functions. Moreover, the curves of the polynomial functions with orders d eq uals 8, 
d equals 10 and d equals 15 were more ﬂuctuating than those of the aforementioned two

1.2 System Identiﬁcation
9
Fig. 1.5 Fitting results of the polynomial functions with different orders 
functions. However, the ﬁtting errors of these three functions were smaller than the 
functions with orders d equals 2 and d equals 5. Finally, the 19th order polynomial ﬂuctuated 
the most severely since there were 20 adjustable coefﬁcients in this function. These 
coefﬁcients could be determined uniquely by using the training dataset with 20 data 
points and the obtained ﬁtting curve passed through each of the data points. As a 
result, this polynomial function had the smallest ﬁtting error, namely zero. 
In order to evaluate the predictive capability of these obtained polynomial func-
tions, a testing dataset containing the same number of data points as the training 
dataset was utilized, in which x Subscript n and epsilon Subscript n, n equals 1  c o mma 2 comma ellipsis comma 20, were generated in the

10
1
Introduction
Fig. 1.6 Predictive results of the polynomial functions with different orders
same fashion as the training dataset. This testing dataset was not involved in the 
polynomial ﬁtting process and it was employed to examine the model generalization 
capability for new data. Figure 1.6 shows the estimation results of the polynomial 
functions with orders d equals 2 comma 5 comma 8 comma 10 comma 15 comma 19. The red dashed lines represent the true 
input-output relationship; the dots represent the testing data; the solid lines represent 
the predictive results from the corresponding polynomial functions; and the grey 
dashed lines represent the bounds of the 99.7% credible intervals. It is seen that 
the curves of the polynomial functions with orders d eq uals 2 and d eq uals 5 remained 
to be smooth and the corresponding estimation results were reliable. However, the

1.2 System Identiﬁcation
11
curves of the polynomial functions with orders d equals 8 and d equals 10 using the testing 
dataset were more ﬂuctuating than those using the training dataset. Finally, it is not 
surprising to observe that the performance of the polynomial functions with orders 
d equals 15 and d equals 19 was very poor since the estimation results were associated with 
extremely large estimation errors. These two polynomial functions were unneces-
sarily too complicated. Their coefﬁcients relied heavily on the details of the training 
data (including the noise) and were severely inﬂuenced by the errors in the dataset.
This example validates that a more complicated model class with more adjustable 
uncertain model parameters ﬁts the observations better than a simpler model class 
with fewer model parameters. In other words, the best ﬁtting model class is the most 
complicated one. However, it is insufﬁcient to consider solely the data ﬁtting capa-
bility for model class selection because it often leads to unnecessarily complicated 
model classes with poor predictive capability. If the model selection criterion is based 
on best ﬁtting, the resultant model may provide catastrophic prediction results. The 
reason is that the selected model depends too much on the details of the data and the 
measurement noise and modeling error have a substantial role in the data ﬁtting. As 
a result, in model class selection, it is necessary to penalize the model classes with 
complicated parameterization. This issue was ﬁrst pointed out by Jeffreys Harold 
who did pioneering work on the application of Bayesian methods (Jeffreys 1961). 
He pointed out that it is necessary to construct a quantitative expression of the well-
known Ockham’s razor (Sivia 1996). Ockham’s razor, also known as the principle 
of parsimony, is a problem-solving principle that entities should not be multiplied 
beyond necessity (Schaffer 2015). It is generally understood in the sense that with 
competing theories or explanations, the simpler one, for example a model class with 
fewer parameters, is to be preferred. 
Although model class selection provides a basis for selecting the most suitable 
model class, it does not guarantee a good model class to be selected. This is because 
it is possible that all the model class candidates are unsatisfactory. To resolve this 
problem, we will introduce the third level of system identiﬁcation, namely system 
identiﬁcation using self-calibratable model classes. The structures of these model 
classes can be modiﬁed. Therefore, even when one starts from poor model classes, 
there is still a possibility to obtain a satisfactory one. This will be introduced in 
Chap. 5. 
1.2.2 
Real-Time System Identiﬁcation 
Before we introduce real-time system identiﬁcation, let’s consider real-time systems. 
Real-time system was ﬁrst described by Martin James (Martin 1965) as a system 
controlling an environment by receiving data, processing data, and returning the 
results sufﬁciently quickly to affect the environment at that time. The term real-
time describes various operations in computing or other processes, which ensure the 
response time within a speciﬁed short time. In other words, there is no signiﬁcant 
delay in a real-time system.

12
1
Introduction
Real-time systems are online systems in nature. Strictly speaking, there is a slight 
difference between real-time systems and online systems in the sense of time latency 
between data acquisition and result reporting. In particular, there is no time lag for 
real-time systems so the systems receive data and respond immediately. However, 
online systems allow acceptably small time lag between data acquisition and result 
reporting, due to connection, loading and populating, etc. For example, when we 
move our computer mouse, the pointer is expected to react instantly and precisely 
follow our actions. This is a real-time system. When we add a photo to a website 
page, it takes some time, from a second to few minutes latency, to upload it. This is 
an online system. 
Pioneering works for system identiﬁcation relied on ofﬂine computing strategy 
(Ljung 1987). In general, ofﬂine system identiﬁcation methods require extensive 
input-output or output-only data to obtain the identiﬁcation results. Figure 1.7 is a 
typical schematic diagram of the ofﬂine system identiﬁcation. In ofﬂine estimation 
scheme, data is accumulated over a period of time and then the accumulated data 
is utilized to perform system identiﬁcation algorithms. There are some appealing 
features for ofﬂine system identiﬁcation methods. In general, the accuracy of the 
results from ofﬂine system identiﬁcation is higher than that from online identiﬁcation 
under the same conditions because ofﬂine methods can incorporate all available data 
to obtain the estimation results. Therefore, ofﬂine methods are more robust to small 
variations in systems. Furthermore, since there is typically no strict limitation about 
the computational time for ofﬂine calculation models, there are more ﬂexibilities 
in the development of ofﬂine system identiﬁcation algorithms. On the other hand, 
disadvantages of ofﬂine system identiﬁcation are obvious. Ofﬂine methods usually 
require extensive data and thereby induce heavy computational burden. In addition, 
ofﬂine models are not adaptive to potential changes in the underlying dynamical 
system and cannot provide real-time or timely updated parameter estimation. The 
reason is that the ofﬂine identiﬁed model will not change until a new batch of data 
is utilized to obtain the updated model. For example, when ofﬂine identiﬁcation 
methods are used to estimate the fundamental frequency of a structure, they often 
assume a single value of the fundamental frequency within the entire time period of 
measurements acquisition. 
Being a special case of real-time system, real-time system identiﬁcation refers 
to the incremental identiﬁcation process where data is acquired sequentially and 
utilized to update the estimation results at each time step. In other words, real-time 
system identiﬁcation implies that identiﬁcation is performed once a new data point
f1 f2 ... fN 
z1 z2 ... zN 
Computer
Identification 
results 
Input/output data 
Fig. 1.7 Schematic diagram of ofﬂine system identiﬁcation 

1.2 System Identiﬁcation
13
becomes available and the corresponding results are obtained within sufﬁcient small 
time duration. Real-time computing strategy is ideal for time-varying dynamical 
systems that receive data as a continuous ﬂow and are required to adapt to rapidly 
changing conditions. In addition, real-time system identiﬁcation is data efﬁcient. 
Data efﬁcient refers to the property that a data point is no longer required once 
it has been used for identiﬁcation. From the identiﬁcation perspective, there is no 
requirement to store the dataset for identiﬁcation purpose. This is especially important 
for systems with continuous data acquisition requirement such as global positioning 
systems and structural health monitoring systems. Nevertheless, there is usually other 
consideration for storing the data although it is not for the use in the identiﬁcation 
process in later time. 
The major difference between online and ofﬂine identiﬁcation methods is the 
chronological of data acquisition and data processing. In online algorithms, identiﬁ-
cation of system is implemented when a new data is available during the operation of 
the system, as shown in Fig. 1.8. In ofﬂine estimation strategy, it is required to ﬁrst 
collect all the input/output data and then to perform system identiﬁcation algorithms 
based on the entire dataset, as shown in Fig. 1.7. 
Recursive least squares estimation is a conventional real-time system identiﬁca-
tion method (Söderström et. al. 1978) and it has extensive applications in adaptive 
control systems and monitoring the process for diagnostic purposes. It is based on the 
classical least squares estimation theory proposed by Gauss (Gauss 1963). Recursive 
least squares estimation is capable to obtain real-time updated results in the situation 
that measurements are obtained sequentially. However, least squares approaches are 
intuitive but heuristic. Although probability was not involved in the development of 
least squares approaches, the nature of least squares is compatible to the Gaussian 
distribution. In other words, Gaussian distributions were assumed implicitly. In the 
subsequent decades, sophisticated approaches were expanded along the idea of mini-
mizing the squared discrepancies between the observed data and the value predicted 
by the model. Early methods require that the input signals are known (Chen et al. 
1992; Yang and Lin 2005; Yang et al. 2006; Houtzager et al. 2011), whereas current 
methods can handle unknown excitation situations (Yang and Huang 2007; Askari 
et al. 2016a, 2019; Ji et al.  2019). Traditional methods rely on determining the uncer-
tain parameters in a prescribed model class (Lin et al. 1990; Puttige and Anavatti 
2008), but now there are algorithms dealing with simultaneous model class selection
Identification 
results at time t-1 
ft-1 zt-1 
Identification 
results at time t 
ft
zt 
Identification 
results at time t+1 
ft+1 zt+1 
t
t-1
t+1 
Time 
Input/output data
Input/output data
Input/output data 
Fig. 1.8 Schematic diagram of online system identiﬁcation 

14
1
Introduction
and parametric identiﬁcation (Le Borgne et al. 2007; Bayrak et al. 2018). In addition, 
observations from sensing systems are typically assumed as regular noisy data and 
synchronous (Lin et al. 1990; Hann et al. 2009). However, measurements corrupted 
with outliers and asynchronism can be considered in real-time system identiﬁcation 
(Bar et al. 2003; Basu and Meckesheimer 2007; Angelov et al. 2011; Li et al.  2016; 
Ma et al. 2021; Cintuglu and Ishchenko 2021; Cavraro et al. 2022). 
In the twentieth century, the well-known Kalman ﬁlter (KF) was proposed and 
developed by Kalman (1960) and Kalman and Bucy (1961). The KF provides a linear, 
unbiased, and minimum error variance recursive algorithm to optimally estimate the 
unknown state of a dynamical system from noisy data recorded in the discrete time 
manner. It has been widely applied to various areas of industrial and technological 
applications in tracking systems (Kang et al. 2016), satellite navigation (Xiong et al. 
2009), missile guidance (Tang and Borrie 1984), and ﬂight control (Napolitano et al. 
1998), etc. Moreover, with the recent development of high-speed computers, the KF 
and its variates enable the handling of complicated real-time applications (Valasek 
and Chen 2003; Askari et al.  2016b; Lei et al. 2019). On the other hand, the H-inﬁnity 
ﬁlter (Jiang et al. 2016; Xiong et al. 2017) and particle ﬁlter (Chatzi and Smyth 2009; 
Park and Lee 2011; Cadini et al. 2019) were proposed to primarily tackle the problem 
of uncertain modeling errors and noise and highly nonlinear systems in real-time 
system identiﬁcation, respectively. Recent interest has arisen to perform real-time 
system identiﬁcation using machine learning algorithms (Sangkatsanee et al. 2011; 
Ahmad and Chen 2020; Verma et al. 2020; Wang et al. 2021). However, most, if 
not all, of the existing methods for real-time machine learning rely on an ofﬂine 
training process for implementing real-time estimation process (Mahrishi et al. 2020; 
Easwaran et al. 2022). 
1.2.3 
Bayesian System Identiﬁcation 
The Bayes’ theorem, named after Thomas Bayes, describes the probability of an 
event, based on prior knowledge of conditions that might be related to the event (Joyce 
2003). In the perspective of mathematics, the Bayes’ theorem is a classical statement 
of conditional probabilities. It is utilized to transform the available information into 
the required information involved in the problems to be resolved. 
Use upper D and bold italic thetato denote a set of observations and an uncertain parameter vector 
from a system, respectively. Based on the Bayes’ theorem, the updated/posterior 
probability density function (PDF) of the unknown parameters in the parameter 
vector bold italic thetacan be obtained as follows: 
p left paren thesis bold italic theta vertical bar upper D comma upper C right parenthesis equals StartFraction p left parenthesis upper D vertical bar bold italic theta comma upper C right parenthesis p left parenthesis bold italic theta vertical bar upper C right parenthesis Over p left parenthesis upper D vertical bar upper C right parenthesis EndFraction
p left 
parenthesis bold italic theta vertical bar upper D comma upper C right parenthesis equals StartFraction p left parenthesis upper D vertical bar bold italic theta comma upper C right parenthesis p left parenthesis bold italic theta vertical bar upper C right parenthesis Over p left parenthesis upper D vertical bar upper C right parenthesis EndFraction
where upper C is the class of probabilistic and physical models used for the description of 
the concerned problem; and p left parenthesis upper D vertical bar upper C right parenthesisacts as the normalizing constant such that the 
integration of the right-hand side over the parameter space bold upper Theta yields unity:

1.2 System Identiﬁcation
15
i
n
tegral Undersc
ript bold upper Theta Endscripts p left parenthesis bold italic theta vertical bar upper D comma upper C right parenthesis normal d bold italic theta equals StartFraction 1 Over p left parenthesis upper D vertical bar upper C right parenthesis EndFraction integral Underscript bold upper Theta Endscripts p left parenthesis upper D vertical bar bold italic theta comma upper C right parenthesis p left parenthesis bold italic theta vertical bar upper C right parenthesis normal d bold italic theta equals 1
integr
a
l
 Underscript bold upper
 Theta Endscripts p left parenthesis bold italic theta vertical bar upper D comma upper C right parenthesis normal d bold italic theta equals StartFraction 1 Over p left parenthesis upper D vertical bar upper C right parenthesis EndFraction integral Underscript bold upper Theta Endscripts p left parenthesis upper D vertical bar bold italic theta comma upper C right parenthesis p left parenthesis bold italic theta vertical bar upper C right parenthesis normal d bold italic theta equals 1
The prior distribution p left parenthesis bold italic theta vertical bar upper D right parenthesisrepresents the prior information of the parameters 
and it is based on previous knowledge or user’s judgement. When there is no prior 
information about the unknown parameters, the prior distribution can be taken as 
a constant. The likelihood function p left parenthesis upper D vertical bar bold italic theta comma upper C right parenthesisrepresents the contribution of the 
measured data in establishing the posterior PDF. It reﬂects how likely the measure-
ments are observed from the model with a particular set of parameters. The likelihood 
function can be constructed given the class of probabilistic and physical models of 
the problem and it plays the vital role in Bayesian updating. If a large amount of 
measurement is available, the likelihood function will be the dominant factor for the 
Bayesian inference (Yuen 2010). 
A conventional way to perform system identiﬁcation is to prescribe a parametric 
model for characterizing dynamical systems and then use the observations from the 
underlying system to estimate the values of the uncertain parameters in the para-
metric model. There are many approaches to determine the uncertain parameters 
in the prescribed model class. In the Bayesian approach, the uncertain parame-
ters are encapsulated in the posterior PDF which is a joint PDF conditioned on 
the model assumptions and the observed data. Then, they can be obtained by maxi-
mizing the posterior PDF from the Bayes’ theorem to obtain the maximum a poste-
riori estimation. On the other hand, the uncertain parameters can be determined by 
using other non-Bayesian approaches. In particular, they can be estimated by maxi-
mizing the likelihood function to obtain the maximum likelihood estimation which 
is equivalent to maximum a posteriori estimation subject to a uniform prior over 
the parameter space. Furthermore, least squares estimation is regarded as a feasible 
approach to obtain the uncertain parameters and it is equivalent to the maximum 
likelihood estimation when the Gaussian model is used for the combined prediction 
and measurement errors. 
Although system identiﬁcation is useful in many disciplines, there are several 
conceptual and computational difﬁculties. First, there is no true value of the uncer-
tain parameters since any prescribed model gives essentially only an approximation 
of the actual behavior of systems (Beck 2010). Therefore, it raises the question about 
the basis for the choice of a single model in a set of models corresponding to the 
estimated parameters and the future prediction based on the prescribed model class. 
Second, it is often encountered in parametric estimation that the estimation results 
are not unique, particularly large number of uncertain parameters. Although these 
models ﬁt the data equally well, they provide different future predictions. One feasible 
solution for resolving this issue is to preassign some parameters in the model class 
so that the remaining ones can be uniquely determined. However, it often leads to 
severely biased estimation results due to the subjectivity of the pre-assignment. The 
non-uniqueness issue was referred to as the problem of unidentiﬁability and it was 
well investigated by Beck and Katafygiotis (1998), Katafygiotis and Beck (1998) for  
modeling of structural dynamical systems in a probabilistic perspective. On the other

16
1
Introduction
hand, a maximum a posteriori estimate is typically unique by using regularization 
from the prior probability distribution. However, when the identiﬁcation problem is 
unidentiﬁable, there is more than one model with the maximum posterior distribu-
tion value and the corresponding predictions should not be ignored thereby. Finally, 
since there is no single model to be expected to give perfect estimation results, it is 
very important to quantify the uncertain estimation errors. This point will be further 
elaborated in Sect. 1.3. 
Bayesian inference is one of the most signiﬁcant applications of the Bayes’ 
theorem. It evaluates how the degree of belief should rationally change to account 
for the availability of related evidence and it is typically expressed as probability 
(Jeffreys 1973). Bayesian inference has found applications covering an extensive 
range of disciplines, including philosophy (Körding and Wolpert 2006), science 
(Trotta 2008; Sprenger and Hartmann 2019), engineering (Yuen 2010) and medicine 
(Goodman 1999). Bayesian inference provides a rigorous solution for system iden-
tiﬁcation using probabilistic logic (Beck 2010). In recent decades, Bayesian system 
identiﬁcation has attracted substantial attention and it has been applied to diverse 
areas of science and engineering (Peterka 1981; Ninness and Henriksen 2010; Green 
2015; Green et al. 2015; Huang et al. 2017). This book focuses on Bayesian system 
identiﬁcation methods for time-varying dynamical systems. Some recently devel-
oped real-time Bayesian methodologies are introduced to resolve the aforemen-
tioned critical issues encountered in time-varying dynamical system identiﬁcation. 
In particular, two different perspectives of data processing, namely centralized and 
distributed identiﬁcation, are provided. This book aims to provide novel identiﬁcation 
insights for dealing with some challenging identiﬁcation problems for time-varying 
dynamical systems. 
1.3 
Uncertainty 
In system identiﬁcation, information about the input signals is often unknown. In 
addition, the magnitude of vibration responses for typical dynamical systems, e.g., 
structures, vehicles and aircrafts, is usually small so that the measurement noise is 
not negligible. In general, uncertainty can be quantiﬁed by probability distributions 
which depend on the state of information about the likelihood of what the single 
true value of the uncertain quantity is (Begg et al. 2014). As a result, uncertainty 
quantiﬁcation can beneﬁt immensely from the use of Bayesian inference for system 
identiﬁcation problems (Yuen 2010). 
Regardless of the method used for system identiﬁcation, it is impossible to achieve 
identiﬁcation results with perfect precision from a given set of raw observations in 
practice. The ﬁnite amount of measurement is one of the core reasons. In general, 
there are two sources of identiﬁcation uncertainty. The ﬁrst source of identiﬁcation 
uncertainty, namely aleatoric uncertainty, is the inherent characteristics of the system. 
This type of uncertainty is inherently unavoidable, such as modeling error. In the 
real world, there exist many types of unmodeled mechanisms for complex physical

1.4 Organization of the Book
17
systems. One common approach is to treat them as random variables or random 
processes such that statistical moments or probability distribution can be utilized 
to describe the characterizations of these random variables and random processes 
(Yuen 2010). For example, the input excitation is commonly modeled as a broad-band 
stochastic process such as stationary Gaussian white noise. 
In addition to aleatoric uncertainty, there is also epistemic uncertainty arising 
from imperfect or unknown information (Wheeler et al. 2020). This second type of 
uncertainty, namely epistemic uncertainty, is the exogenous factors disturbing the 
systems, such as limited number of observations and measurement error. In practical 
applications, the amount of information from the measured data is ﬁnite in terms of 
measured DOFs, sampling frequency and time duration. The input excitation cannot 
be observed in some circumstances and it can be regarded as part of the uncertain 
properties to be determined. Moreover, measurement error is unavoidable due to 
imperfect nature of data acquisition systems including sensor, data transmission 
medium and digitizing hardware, etc. 
In general, the aleatoric uncertainty cannot be eliminated and its inﬂuence remains 
in the entire identiﬁcation process. However, in some situations, it can be reduced by 
utilizing some advanced modeling techniques. The conventional way for handling the 
aleatoric uncertainty is to keep it at a low level. Regarding the epistemic uncertainty, 
it has the same feature as the aleatoric uncertainty in the sense that it cannot be 
eliminated under a given set of data. The effective way is to reduce the adverse 
impact caused by the uncertain factors, such as increasing the amount of observed 
data and using high-precision equipment. By analyzing the identiﬁcation results, it is 
feasible to verify, reveal and reduce the potential modeling errors in the underlying 
dynamical system. 
1.4 
Organization of the Book 
There are seven chapters in this book and each chapter is written in a self-contained 
manner by including essential modeling, algorithms and illustrations. Connections 
among different chapters are given in the abstract of each chapter. This chapter 
gives the general introduction of system identiﬁcation and fundamental ideas of 
Bayesian inference. State-of-the-art applications of system identiﬁcation in different 
disciplines are presented. The sources of identiﬁcation uncertainty are elaborated. 
Chapter 2 introduces the well-known standard KF and the extended Kalman ﬁlter 
(EKF). The detailed derivations of the discrete-time KF and EKF are presented from 
the Bayesian perspective. By using the Bayes’ theorem, the conditional PDF for the 
prediction can be obtained in a recursive manner and the analytical solutions can be 
obtained. The standard KF keeps on tracking the estimated states of the system and the 
covariance matrix of the estimation results recursively, so it provides not only the state 
estimation but also the associated uncertainty in a real-time manner. Applications 
for a vehicle tracking system and a state estimation problem for a 60-story building 
are presented by using the KF algorithm for demonstration purpose. On the other

18
1
Introduction
hand, the nonlinear state space model for general nonlinear dynamical systems is 
introduced and it will be utilized in the EKF. By expanding the nonlinear equations 
using the Taylor series, the locally linearized state space model can be obtained 
and the procedures of the EKF algorithm are formulated in the same manner as the 
standard KF algorithm. The EKF with fading memory is also introduced to enhance 
the tracking capability of the EKF algorithm for time-varying systems. Applications 
to simultaneous states and model parameters estimation are presented. The EKF is 
the fundamental algorithm in this book. In the subsequent chapters, some recently 
developed methods will be introduced based on the EKF to resolve some critical 
issues in real-time system identiﬁcation. A brief introduction about the Bayesian 
ﬁltering technique for general situation is given as extended readings. 
Chapter 3 presents an online updating approach for noise parameter estimation 
in the EKF. One of the challenging issues in the application of the standard KF and 
the EKF is to prescribe the covariance matrices of the process noise and measure-
ment noise since inappropriate assignment of these noise covariance matrices leads 
to unreliable estimation and erroneous uncertainty estimation of the system state 
and model parameters. More seriously, improper assignment of the noise covariance 
matrices induces diverging estimation. A novel method introduced in this chapter 
can update the noise covariance matrices in the standard KF and the EKF in an online 
manner. The parameterization of the noise covariance matrices in the EKF is intro-
duced. Then, a Bayesian probabilistic algorithm for online estimation of the noise 
parameters is presented and the posterior PDF of the noise parameters is formu-
lated. In order to settle the optimization problem efﬁciently, an online estimation 
scheme integrating a heuristic stochastic local search method and a gradient method 
is presented. Applications on states and parameters estimation of a Bouc-Wen model 
of hysteresis and structural damage detection of a three-pier bridge are used for 
demonstration. 
Chapter 4 introduces a novel real-time methodology for outlier detection and 
removal in the measurements from time-varying dynamical systems. The probability 
of outlier of a data point is deﬁned and derived and the method utilizes this deﬁnition 
of outlier to assess the outlierness of each raw data point. The probability of outlier 
integrates the normalized residual, the measurement noise level and the size of the 
dataset and it provides a systematic and objective criterion to effectively detect the 
abnormal data points in the observations. Instead of using other adhoc judgement 
on outliers, this method provides an intuitive threshold 0.5 for outlier detection. 
Computationally efﬁcient techniques are introduced to alleviate the computational 
burden encountered in the identiﬁcation process using long-term monitoring data. 
The outlier detection algorithm can be embedded into the EKF. Therefore, it can 
not only remove the outliers in the measurements but also identify the time-varying 
system simultaneously. By excluding the outliers in the measurements, the algorithm 
ensures the stability and reliability of the estimation. A SDOF dynamical system and 
a three-pier bridge ﬁnite-element model are utilized to demonstrate the effectiveness 
of the method. 
In Chaps. 2, 3 and 4, the problem of parametric identiﬁcation was considered 
for a prescribed model class with uncertain parameters. However, selection of an

1.4 Organization of the Book
19
appropriate model class for parametric identiﬁcation is crucially important. Conven-
tional methods resolve the critical issue on the selection of a suitable model class in 
an ofﬂine manner. However, the behavior of the underlying dynamical system can 
be time-varying. Chapter 5 addresses the critical problem of system identiﬁcation 
for real-time selection of a suitable class of models and provides a scheme to adap-
tively reconﬁgure the model classes for real-time system identiﬁcation. The Bayes’ 
theorem is utilized to formulate the plausibilities of some given model classes. Then, 
model class selection will be conducted according to the plausibilities in the real-
time manner. The Bayesian model class selection approach is embedded into the 
EKF so this resultant algorithm provides simultaneous model class selection and 
parametric identiﬁcation in the real-time manner. Although the algorithm presented 
in this chapter is based on the EKF, the real-time model class selection component 
can be easily embedded into other ﬁltering tools. 
The aforementioned real-time model class selection method relies on the assump-
tion that there is at least one suitable prescribed model class candidate. However, this 
is not always the case in practice. In order to resolve this problem, we will introduce 
the new third level of system identiﬁcation, namely system identiﬁcation using self-
calibratable model classes. This strategy allows to adaptively reconﬁgure the model 
classes in the real-time manner. The time-varying model parameters can be traced 
via these self-calibratable model classes. 
Moreover, although Bayesian model class selection allows one to choose among 
some prescribed model classes, it is often encountered that the number of possible 
model classes for large dynamical systems is huge. A novel real-time method with 
hierarchical interhealable model classes is presented. The model classes are estab-
lished in a hierarchical manner so that the method requires only a small number of 
model classes and it is able to explore a large solution space. The modeling errors, 
including the estimation error in the states and model parameters and the deﬁcien-
cies of the parametric models for the hierarchical model classes, can be corrected 
adaptively according to the measurements and the results from the optimal model 
class. 
In the previous chapters, real-time system identiﬁcation problems have been 
considered under the centralized identiﬁcation framework. Centralized identiﬁca-
tion requires transmitting all measured data to a single central processing unit, where 
global identiﬁcation results are obtained. In Chaps. 6 and 7, novel real-time system 
identiﬁcation methods are established based on the distributed identiﬁcation frame-
work. Chapter 6 presents the online dual-rate distributed identiﬁcation approach for 
wireless sensor networks (WSNs). Distributed identiﬁcation allows an individual unit 
to obtain the local estimation using part of the data, and the obtained local estimation 
can then be used as a basis for global estimation. Filtering method using only raw 
observations collected at each sensor is introduced. The preliminary local identiﬁca-
tion results are then compressed before transmitting to the central station for fusion. 
At the central station, Bayesian fusion is developed to integrate the compressed 
local identiﬁcation results transmitted from the sensor nodes in order to obtain reli-
able global estimation. As a result, the large identiﬁcation uncertainty in the local 
identiﬁcation results can be substantially reduced. In addition to data compression,

20
1
Introduction
a dual-rate strategy for sampling and transmission/fusion is used to alleviate the 
data transmission burden so that online model updating can be realized efﬁciently 
for WSNs. Applications for states and model parameters estimation of a 40-story 
building and a three-pier bridge are utilized for demonstration. 
The online dual-rate distributed identiﬁcation framework is utilized in Chap. 7 to 
resolve two critical issues, i.e., asynchronous measurements and multiple outlier-
corrupted measurements. Due to unavoidable imperfection of data acquisition 
systems, the measurements among different channels are generally asynchronous. In 
the distributed identiﬁcation framework, since each sensor node uses only the data 
of its own, the local model identiﬁcation results are not affected by asynchronism 
among different sensor nodes. Then, these local model estimation results will be 
compressed and sent to the central station for fusion. Note that this method requires 
neither a model nor quantiﬁcation of the asynchronism. 
On the other hand, since the sensing systems for civil engineering structures are 
usually exposed to severe service environment, the measurements are inevitable to be 
corrupted with outliers. A hierarchical outlier detection approach is introduced. This 
method utilizes the method introduced in Chap. 4 to detect the local outliers according 
to the probability of outlier of the raw observations at the sensor nodes. However, 
after removing the outliers in the raw observations, there may still exist anomalies 
in the local estimation results due to segmental outliers, e.g., due to sensor bias. The 
method is able to detect the global outliers according to the probability of outlier of 
the local estimation results. The proposed methods can resolve the challenging prob-
lems of asynchronous measurements and multiple outlier-corrupted measurements 
effectively and achieve reliable identiﬁcation results for time-varying dynamical 
systems in an online manner. Two applications are the online model updating of the 
time-varying dynamical systems. 
References 
Ahmad T, Chen H (2020) A review on machine learning forecasting growth trends and their real-time 
applications in different energy systems. Sustain Cities Soc 54:102010 
Andrieu C, Doucet A, Singh SS, Tadic VB (2004) Particle methods for change detection, system 
identiﬁcation, and control. IEEE IJCNN 92(3):423–438 
Angelov P, Sadeghi-Tehran P, Ramezani R (2011) A real-time approach to autonomous novelty 
detection and object tracking in video stream. Int J Intell Syst 26(3):189–205 
Araújo JM (2019) Partial eigenvalue assignment in linear time-invariant systems using state-
derivative feedback and a left eigenvectors parametrization. Proc Inst Mech Eng I-J Syst 
233(8):1085–1089 
Askari M, Li J, Samali B (2016a) A compact self-adaptive recursive least square approach for 
real-time structural identiﬁcation with unknown inputs. Adv Struct Eng 19(7):1118–1129 
Askari M, Li J, Samali B (2016b) Application of Kalman ﬁltering methods to online real-time 
structural identiﬁcation: A comparison study. Int J Struct Stab Dyn 16(06):1550016 
Askari M, Yu Y, Zhang C, Samali B, Gu X (2019) Real-time tracking of structural stiffness reduction 
with unknown inputs, using self-adaptive recursive least-square and curvature-change techniques. 
Int J Struct Stab Dyn 19(10):1950123

References
21
Bai J (1994) Least squares estimation of a shift in linear processes. J Time Ser Anal 15(5):453–472 
Banga JR (2008) Optimization in computational systems biology. BMC Syst Biol 2(1):1–7 
Bar T, Ståhlberg A, Muszta A, Kubista M (2003) Kinetic outlier detection (KOD) in real-time PCR. 
Nucl Acids Res 31(17):e105–e105 
Basu S, Meckesheimer M (2007) Automatic outlier detection for time series: an application to 
sensor data. Knowl Inf Syst 11(2):137–154 
Bayrak ES, Wang T, Tulsyan A, Coufal M, Undey C (2018) Product attribute forecast: adaptive 
model selection using real-time machine learning. IFAC Papers Online 51(18):121–125 
Beck JL (2010) Bayesian system identiﬁcation based on probability logic. Struct Control Health 
17(7):825–847 
Beck JL, Katafygiotis LS (1998) Updating models and their uncertainties. I: Bayesian statistical 
framework. J Eng Mech 124:455–461 
Beck JL, Yuen KV (2004) Model selection using response measurements: Bayesian probabilistic 
approach. J Eng Mech 130(2):192–203 
Begg SH, Welsh M, Bratvold RB (2014) Uncertainty vs. variability: what’s the difference and why 
is it important? In: SPE hydrocarbon economics and evaluation symposium, pp 273–293 
Bemporad A, Garulli A, Paoletti S, Vicino A (2005) A bounded-error approach to piecewise afﬁne 
system identiﬁcation. IEEE Trans Automat Contr 50(10):1567–1580 
Cadini F, Sbarufatti C, Corbetta M, Cancelliere F, Giglio M (2019) Particle ﬁltering-based adaptive 
training of neural networks for real-time structural damage diagnosis and prognosis. Struct Control 
Health 26(12):e2451 
Cavraro G, Comden J, Dall’Anese E, Bernstein A (2022) Real-time distribution system state 
estimation with asynchronous measurements. IEEE Trans Smart Grid 13(5):3813–3822 
Chatzi EN, Smyth AW (2009) The unscented Kalman ﬁlter and particle ﬁlter methods for nonlinear 
structural system identiﬁcation with non-collocated heterogeneous sensing. Struct Control Health 
16(1):99–123 
Chen CW, Huang JK, Phan M, Juang JN (1992) Integrated system identiﬁcation and state estimation 
for control of ﬂexible space structures. J Guid Control Dyn 15(1):88–95 
Chen Y, Ahn HS, Xue D (2006) Robust controllability of interval fractional order linear time 
invariant systems. Signal Process 86(10):2794–2802 
Cherniakov M (2003) An introduction to parametric digital ﬁlters and oscillators. John Wiley & 
Sons 
Chiuso A, Muradore R, Marchetti E (2009) Dynamic calibration of adaptive optics systems: a 
system identiﬁcation approach. IEEE Trans Contr Syst Technol 18(3):705–713 
Cintuglu MH, Ishchenko D (2021) Real-Time asynchronous information processing in distributed 
power systems control. IEEE Trans Smart Grid 13(1):773–782 
Cowan TJ, Arena AS Jr, Gupta KK (2001) Accelerating computational ﬂuid dynamics based 
aeroelastic predictions using system identiﬁcation. J Aircraft 38(1):81–87 
Easwaran B, Hiran KK, Krishnan S, Doshi R (2022) Real-time applications of machine learning in 
cyber-physical systems. IGI global 
Fontana G, Grasso F, Luchetta A, Manetti S, Piccirilli MC, Reatti A (2019) A symbolic program 
for parameter identiﬁability analysis in systems modeled via equivalent linear time-invariant 
electrical circuits, with application to electromagnetic harvesters. Int J Numer Model El 
32(4):e2251 
Gauss CF (1963) Theory of the motion of the heavenly bodies moving about the sun in conic section. 
Dover, New York 
Golding R (1982) Freud, psychoanalysis, and sociology: some observations on the sociological 
analysis of the individual. Brit J Sociol 33(4):545–562 
Goodman SN (1999) Toward evidence-based medical statistics. 2: The Bayes factor. Ann Int Med 
130(12):1005–1013 
Green PL (2015) Bayesian system identiﬁcation of a nonlinear dynamical system using a novel 
variant of simulated annealing. Mech Syst Signal Process 52:133–146

22
1
Introduction
Green PL, Cross EJ, Worden K (2015) Bayesian system identiﬁcation of dynamical systems using 
highly informative training data. Mech Syst Signal Process 56:109–122 
Hann CE, Singh-Levett I, Deam BL, Mander JB, Chase JG (2009) Real-time system identiﬁcation 
of a nonlinear four-story steel frame structure—application to structural health monitoring. IEEE 
Sens J 9(11):1339–1346 
Heckman JJ (2000) Causal parameters and policy analysis in economics: a twentieth century 
retrospective. Q J Econ 115(1):45–97 
Houtzager I, Van Wingerden JW, Verhaegen M (2011) Recursive predictor-based subspace identi-
ﬁcation with application to the real-time closed-loop tracking of ﬂutter. IEEE Trans Contr Syst 
Technol 20(4):934–949 
Huang Y, Beck JL, Li H (2017) Bayesian system identiﬁcation based on hierarchical sparse Bayesian 
learning and Gibbs sampling with application to structural damage assessment. Comput Meth 
Appl Mech 318:382–411 
Jeffreys H (1961) Theory of probability, 3rd edn. Oxford Clarendon Press, Oxford, UK 
Jeffreys H (1973) Scientiﬁc inference. Cambridge University Press 
Ji J, Yang M, Jiang L, He J, Teng Z, Liu Y, Song H (2019) Output-only parameters identiﬁcation of 
earthquake-excited building structures with least squares and input modiﬁcation process. Appl 
Sci 9(4):696 
Jiang C, Zhang SB, Zhang QZ (2016) A new adaptive H-inﬁnity ﬁltering algorithm for the GPS/INS 
integrated navigation. Sensors 16(12):21–27 
Joyce J (2003) Bayes’ theorem. Zalta, Edward N 
Kalman RE (1960) A new approach to linear ﬁltering and prediction problems. J Basic Eng 82:35–45 
Kalman RE, Bucy RS (1961) New results in linear ﬁltering and prediction theory. J Basic Eng 
83:95–108 
Kang CH, Park CG, Song JW (2016) An adaptive complementary Kalman ﬁlter using fuzzy logic 
for a hybrid head tracker system. IEEE Trans Instr Meas 65(9):2163–2173 
Katafygiotis LS, Beck JL (1998) Updating models and their uncertainties. II: Model identiﬁability. 
J Eng Mech 124:463–467 
Katok A, Hasselblatt B (1995) Introduction to the modern theory of dynamical systems. Cambridge 
University Press 
Kijewski T, Kareem A (2003) Wavelet transforms for system identiﬁcation in civil engineering. 
Comput Aided Civ Inf 18(5):339–355 
Körding KP, Wolpert DM (2006) Bayesian decision theory in sensorimotor control. Trends Cogn 
Sci 10(7):319–326 
Kozlowski KR (2012) Modelling and identiﬁcation in robotics. Springer Science & Business Media 
Kristinsson K, Dumont GA (1992) System identiﬁcation and control using genetic algorithms. IEEE 
Trans Syst Man Cybernet 22(5):1033–1046 
Le Borgne YA, Santini S, Bontempi G (2007) Adaptive model selection for time series prediction 
in wireless sensor networks. Signal Process 87(12):3010–3020 
Lei Y, Xia D, Erazo K, Nagarajaiah S (2019) A novel unscented Kalman ﬁlter for recursive state-
input-system identiﬁcation of nonlinear systems. Mech Syst Signal Process 127:120–135 
Li L, Ding SX, Qiu J, Yang Y (2016) Real-time fault detection approach for nonlinear systems and 
its asynchronous T-S fuzzy observer-based implementation. IEEE T Cybernet 47(2):283–294 
Lin CC, Soong TT, Natke HG (1990) Real-time system identiﬁcation of degrading structures. J Eng 
Mech 116(10):2258–2274 
Ljung L (1987) System identiﬁcation: theory for the user. Prentice-Hall Inc., Englewood Cliffs, NJ 
Ljung L (1998) System identiﬁcation. Signal analysis & prediction. Birkhäuser, Boston, MA, pp 
163–173 
Los CA (2006) System identiﬁcation in noisy data environments: An application to six Asian stock 
markets. J Bank Financ 30(7):1997–2024 
Ma X, Wen C, Wen T (2021) An asynchronous and real-time update paradigm of federated learning 
for fault diagnosis. IEEE Trans Ind Inf 17(12):8531–8540

References
23
Mahrishi M, Hiran KK, Meena G, Sharma P (2020) Machine learning and deep learning in real-time 
applications. IGI global 
Martin J (1965) Programming real-time computer systems. Prentice-Hall Inc., NJ 
Messner RA, Szu HH (1985) An image processing architecture for real time generation of scale 
and rotation invariant patterns. Comput Graph Image Process 31(1):50–66 
Muto M, Beck JL (2008) Bayesian updating and model class selection for hysteretic structural 
models using stochastic simulation. J Vib Control 14(1–2):7–34 
Napolitano MR, Windon DA, Casanova JL, Innocenti M, Silvestri G (1998) Kalman ﬁlters and 
neural-network schemes for sensor validation in ﬂight control systems. IEEE Trans Contr Syst 
Technol 6(5):596–611 
Ninness B, Henriksen S (2010) Bayesian system identiﬁcation via Markov chain Monte Carlo 
techniques. Automatica 46(1):40–51 
Noël JP, Kerschen G (2017) Nonlinear system identiﬁcation in structural dynamics: 10 more years 
of progress. Mech Syst Signal Proc 83:2–35 
Oppenheim AV, Willsky AS (1997) Signals & systems (second edition). Prentice Hall 
Park CB, Lee SW (2011) Real-time 3D pointing gesture recognition for mobile robots with cascade 
HMM and particle ﬁlter. Image Vision Comput 29(1):51–63 
Peterka V (1981) Bayesian system identiﬁcation. Automatica 17(1):41–53 
Phillips CL, Parr JM, Riskin EA, Prabhakar T (2003) Signals, systems, and transforms. Prentice 
Hall, Upper Saddle River 
Puttige VR, Anavatti SG (2008) Real-time system identiﬁcation of unmanned aerial vehicles: a 
multi-network approach. J Comput 3(7):31–38 
Rychlewski J (1984) On Hooke’s law. J Appl Math Mech 48(3):303–314 
Sangkatsanee P, Wattanapongsakorn N, Charnsripinyo C (2011) Practical real-time intrusion 
detection using machine learning approaches. Comput Commun 34(18):2227–2235 
Schaffer J (2015) What not to multiply without necessity. Australas J Philos 93(4):644–664 
Shmaliy YS (2010) Linear optimal FIR estimation of discrete time-invariant state-space models. 
IEEE Trans Signal Proces 58(6):3086–3096 
Shore P, Cunningham C, DeBra D, Evans C, Hough J, Gilmozzi R, Kunzmann H, Morantza 
P, Tonnellier X (2010) Precision engineering for astronomy and gravity science. CIRP Ann 
59(2):694–716 
Sirca GF Jr, Adeli H (2012) System identiﬁcation in structural engineering. Sci Iran 19(6):1355– 
1364 
Sivia DS (1996) Data analysis: a Bayesian tutorial. Oxford Science Publications, Oxford, UK 
Söderström T, Ljung L, Gustavsson I (1978) A theoretical analysis of recursive identiﬁcation 
methods. Automatica 14(3):231–244 
Sorenson HW (1970) Least-squares estimation: from Gauss to Kalman. IEEE Spectr 7(7):63–68 
Sprenger J, Hartmann S (2019) Bayesian philosophy of science. Oxford University Press 
Tang YM, Borrie JA (1984) Missile guidance based on Kalman ﬁlter estimation of target maneuver. 
IEEE Trans Aerosp Electron Syst 6:736–741 
Tepljakov A, Petlenkov E, Belikov J (2011) FOMCOM: a MATLAB toolbox for fractional-order 
system identiﬁcation and control. Int J Microelectron Comput Sci 2(2):51–62 
Trotta R (2008) Bayes in the sky: Bayesian inference and model selection in cosmology. Contemp 
Phys 49(2):71–104 
Valasek J, Chen W (2003) Observer/Kalman ﬁlter identiﬁcation for online system identiﬁcation of 
aircraft. J Guid Control Dyn 26(2):347–353 
Vasquez JR, Perez RR, Moriano JS, Gonzalez JP (2008) System identiﬁcation of steam pressure in 
a ﬁre-tube boiler. Comput Chem Eng 32(12):2839–2848 
Verma C, Stoffová V, Illés Z, Tanwar S, Kumar N (2020) Machine learning-based student’s native 
place identiﬁcation for real-time. IEEE Access 8:130840–130854 
Wang Y, Alangari M, Hihath J, Das AK, Anantram MP (2021) A machine learning approach for 
accurate and real-time DNA sequence identiﬁcation. BMC Genom 22(1):1–10

24
1
Introduction
Wang Y, Cao Z, Li D (2016) Bayesian perspective on geotechnical variability and site characteri-
zation. Eng Geol 203:117–125 
Wheeler DM, Meenken E, Espig M, Shariﬁ M, Shah M, Finlay-Smits SC (2020) Uncertainty-what 
is it? Nutr Manage Farmed Landsc 33 
Wu MCK, David SV, Gallant JL (2006) Complete functional characterization of sensory neurons 
by system identiﬁcation. Annu Rev Neurosci 29:477–505 
Xiong K, Liu LD, Zhang HY (2009) Modiﬁed unscented Kalman ﬁltering and its application in 
autonomous satellite navigation. Aerosp Sci Technol 13(4–5):238–246 
Xiong R, Yu Q, Lin C (2017) A novel method to obtain the open circuit voltage for the state of charge 
of lithium ion batteries in electric vehicles by using H inﬁnity ﬁlter. Appl Energ 207:346–353 
Yang JM, Sakai H (2007) A new adaptive ﬁlter algorithm for system identiﬁcation using independent 
component analysis. IEICE Trans Fund Electron 90(8):1549–1554 
Yang JN, Huang H (2007) Sequential non-linear least-square estimation for damage identiﬁcation 
of structures with unknown inputs and unknown outputs. Int J Nonlin Mech 42(5):789–801 
Yang JN, Huang H, Lin S (2006) Sequential non-linear least-square estimation for damage 
identiﬁcation of structures. Int J Nonlin Mech 41(1):124–140 
Yang JN, Lin S (2005) Identiﬁcation of parametric variations of structures based on least squares 
estimation and adaptive tracking technique. J Eng Mech 131(3):290–298 
Yuen KV (2010) Bayesian methods for structural dynamics and civil engineering. John Wiley & 
Sons 
Zhang JF, Yin GG (2003) System identiﬁcation using binary sensors. IEEE Trans Automat Contr 
48(11):1892–1907 
Zheng D, Hoo KA (2004) System identiﬁcation and model-based control for distributed parameter 
systems. Comput Chem Eng 28(8):1361–1375

Chapter 2 
System Identiﬁcation Using Kalman 
Filter and Extended Kalman Filter 
Abstract This chapter presents the standard Kalman ﬁlter (KF) and the extended 
Kalman ﬁlter (EKF). The detailed derivations of the discrete-time KF and EKF are 
presented from a Bayesian perspective. In order to formulate the KF algorithm, the 
state space model of a linear dynamical system is introduced. By using the Bayes’ 
theorem, the conditional probability density function for prediction can be obtained 
in a recursive manner and the analytical solutions can be obtained. Applications 
for a vehicle tracking system and a structural state estimation problem are provided 
to demonstrate the state tracking capability of the KF algorithm. Afterwards, the 
nonlinear state space model for general nonlinear dynamical systems is introduced 
and it will be utilized in the EKF. By expanding the nonlinear equations using the 
Taylor series expansion, the locally linearized state space model can be obtained 
and the procedures of the EKF algorithm are formulated in the same manner as the 
standard KF algorithm. The EKF with fading memory is introduced to enhance the 
tracking capability for time-varying systems. Applications to simultaneous states 
and model parameters estimation are presented. The KF algorithm and its variants 
provide an effective and efﬁcient way for recursive estimation. More importantly, 
the EKF is the fundamental algorithm in this book. 
Keywords Bayesian inference · Extended Kalman ﬁlter · Fading memory ·
Kalman ﬁlter · Real-time estimation · Structural health monitoring 
2.1 
Introduction 
The Kalman ﬁlter (KF) was developed by Rudolf Emil Kalman in 1960 (Kalman 
1960) and it was proposed to formulate and solve the Wiener problem. Afterwards, 
the KF algorithm was implemented on the Apollo Project in 1961 to resolve the navi-
gation problem of spacecraft (Grewal and Andrews 2010). The KF uses a series of 
observations recorded over time and produces estimations of unknown state variables 
with the consideration of measurement noise. The KF is regarded as an optimal state 
estimator since it provides the state estimation results by minimizing the expected 
value of the mean squared error of the residual between the estimated and the actual 
values recursively. As a result, the KF algorithm and its variants have been applied
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_2 
25

26
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
to various technological applications, including guidance, navigation and aerospace 
engineering, vehicles control, audio signal processing, remote surveillance, telecom-
munications, weather forecasting and many other ﬁelds. Due to the limited space, we 
can only brieﬂy introduce some representative applications of the KF and its variants 
in the following. 
• Missile guidance 
Missile Guidance refers to the process that guides a missile to its intended target. The 
target accuracy of a missile is the utmost critical factor for the effectiveness in missile 
guidance. As a result, the guidance system aims to enhance the missile accuracy by 
improving its probability of guidance (Siouris 2004). By minimizing the distance 
between the missile and the target, the KF and the extended Kalman ﬁlter (EKF) are 
typically utilized to estimate the position and velocity of an attacking missile and 
the target using the observations from radars (Nesline and Zarchan 1981; Pan et al. 
2010). 
• Global positioning system navigation 
Global positioning system (GPS) is a satellite-based radionavigation system. It 
provides geolocation and time information to a GPS receiver nearly everywhere 
on the earth by using measurements of arrival time difference from several GPS 
satellites. The GPS receiver generally uses the KF and EKF to calculate the current 
position and velocity of the target (Qi and Moore 2002; Wang et al. 2006). In addi-
tion, the ephemeris information, which indicates the trajectory of naturally occurring 
astronomical objects and artiﬁcial satellites, is typically calculated by using the KF 
(Xu et al. 2012). 
• Guidance, navigation, and control of vehicles 
Guidance, navigation and control deal with the design of systems to control the move-
ment of vehicles, particularly, ships, aircrafts and spacecrafts positioned dynamically. 
Guidance refers to the determination of the desired trajectory linking the current posi-
tion of vehicles with a designated target; navigation refers to the determination of 
the location, velocity and attitude at a given time instant; and control refers to the 
application of the forces by ways of commanding accelerators, steers and thrusters, 
etc., to implement guidance commands while maintaining the stability of the vehi-
cles. The KF and EKF utilize the observed data from various measuring instruments 
including rate gyroscopes, accelerometer, compass, GPS, airspeed and barometric 
pressure, to estimate the position, velocity and angular orientation of the vehicles 
(Zarchan and Musoff 2000; Kendoul 2012). 
• Target tracking 
Target tracking refers to the process that utilizes multiple measurements from various 
types of sensors (e.g., radars, acoustic array and optical information) to determine 
the position and velocity of a remote target. The simplest tracking system is a single

2.1 Introduction
27
target tracking system in a clutterless environment, where only one target exists in 
an area of interest. When tracking is performed continuously in time, the estimated 
trajectory of the target is typically obtained by using the KF and EKF (Musicki et al. 
2007). In addition to single target tracking, multiple targets tracking can be utilized 
to track multiple targets at the same time in the same geographical area. Challenging 
problems, such as data association and multi-assignment issue, are usually encoun-
tered in the multiple targets tracking problem. Once the data association is resolved, 
the Kalman ﬁltering techniques can be utilized to determine the location of the target 
(Kreucher et al. 2005). 
• Medical imaging 
Medical imaging refers to the technique for imaging the interior of a body for clinical 
analysis and medical intervention. Electroencephalography and magnetoencephalog-
raphy are widely employed in brain imaging to reconstruct the position and wave-
form of the neuronal activity inside the brain from noisy sensing data, such as scalp 
potentials. The minimum norm estimation and its variants are typically utilized to 
determine the ﬁeld with certain prior structure from observations. Combining the 
dynamical prior and the observations leads to a spatio-temporal estimation problem, 
which can be resolved by using the KF and its variants (Galka et al. 2004; Lamus 
et al. 2012). 
• Structural health monitoring 
Structural health monitoring (SHM) refers to the process that evaluates the integrity 
of civil infrastructures by using periodically sampled response observations. The 
KF and EKF are common tools for the identiﬁcation of the structural states (i.e., 
displacement and velocity) and the unknown model parameters characterizing the 
structural systems (Hoshiya and Saito 1984; Koh and See 1994). It is worth noting 
that the concept and its theory of structural health monitoring can be widely employed 
in different disciplines of engineering, such as mechanical engineering, aeronautics 
and astronautics, electrical and electronic engineering and biomedical engineering. 
In other words, the KF and its variants can be used to perform health monitoring of 
mechanical, electrical and aerospace systems, etc. 
As the fundamental algorithms of this book, the standard KF and EKF in discrete 
time are introduced in this chapter because it is the commonly used form in practice. 
In Sect. 2.2, the essential recursive equations of the standard KF are derived in detail 
by using the Bayes’ theorem and two applications for state estimation are presented in 
Sect. 2.3. In Sect. 2.4, the essential recursive equations of the EKF are elaborated and 
the EKF with fading memory is introduced to enhance the tracking capability of the 
ﬁltering technique for time-varying systems. Three representative applications for 
simultaneous estimation of states and model parameters are presented in Sect. 2.5. 
Then, Sect. 2.6 presents a practical ﬁeld application of the EKF using the SHM 
data from the Canton Tower. Extended readings of the recursive Bayesian ﬁltering 
technique are brieﬂy introduced in Sect. 2.7. Finally, concluding remarks are given 
in Sect. 2.8.

28
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
2.2 
Standard Kalman Filter 
2.2.1 
Derivation of the Discrete-Time Kalman Filter 
Consider a linear dynamical system with uper N Subscript d degrees of freedom (DOFs) and equation 
of motion: 
bold upper M ModifyingAbove bo ld 
italic x With two dots left parenthesis t right parenthesis plus bold upper C ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bold italic x left parenthesis t right parenthesisdenotes the generalized coordinate vector of the system at time t; bold upper M, bold upper C
and bold upper K are the mass, damping and stiffness matrix of the system, respectively; bold italic f is 
the excitation applied to the system; and bold upper T is the inﬂuence matrix associated with the 
excitation bold italic f . The state vector at time t, bold italic u left parenthesis t right parenthesis, is deﬁned to include the displacement 
vector and the velocity vector: 
bold i
t
alic u l eft pa ren
thesis t right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T
Equation (2.1) can be converted to the following state-space representation: 
ModifyingAbove bold it ali
c u With dot left parenthesis t right parenthesis equals bold upper A Subscript u Baseline bold italic u left parenthesis t right parenthesis plus bold upper B Subscript u Baseline bold italic f left parenthesis t right parenthesis
where the matrices bold upper A Subscript u and bold upper B Subscript u are given by: 
bol d
 upper 
A Su
bscrip t u B
a
seline equals Start 2 By 2 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline bold upper K 2nd Column minus bold upper M Superscript negative 1 Baseline bold upper C EndMatrix
bol d
 upper B 
Subs
c
ript u Baseline equals StartBinomialOrMatrix bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript f Baseline Choose bold upper M Superscript negative 1 Baseline bold upper T EndBinomialOrMatrix
Hereafter, bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d and bold upper I Subscript upper N Sub Subscript d represent the up er N Subscript d Baseline times upper N Subscript d zero matrix and up er N Subscript d Baseline times upper N Subscript d identity 
matrix, respectively; up per N Subscript f denotes the number of excitations applied to the system, i.e., 
bo ld italic  f left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript f . By assuming that the excitation is constant within any time interval: 
bo ld it alic f l ef t paren thesis i norm
al  upper Del t a  
t plus xi right parenthesis equals bold italic f left parenthesis i normal upper Delta t right parenthesis comma for all xi element of left bracket 0 comma normal upper Delta t right parenthesis comma i equals 0 comma 1 comma 2 comma ellipsis
Equation (2.3) can be discretized to a difference equation: 
bold italic  u S ub s
cript i plus 1 Baseline equals bold upper A bold italic u Subscript i Baseline plus bold upper B bold italic f Subscript i
where bol d italic u Subscript i Baseline identical to bold italic u left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesis; the state transition matrix bold upper A is given as follows: 
bo ld upper A 
equals exp left parenthesis bold upper A Subscript u Baseline normal upper Delta t right parenthesis

2.2 Standard Kalman Filter
29
where normal upper Delta t is the sampling time step and the matrix exponential is given by the power 
series, i.e., exp left  pa
rent hesis bold upper X right parenthesis equals sigma summation Underscript n equals 0 Overscript normal infinity Endscripts bold upper X Superscript n Baseline divided by n factorial. It is worth noting that the matrix exponential can 
be calculated by using the function ‘expm’ in MATLAB® (Al-Mohy and Higham 
2010). The input-to-state matrix bold upper B is given by: 
bo ld up
e
r
 B  equal
s
 b
old upper A Subscript u Superscript negative 1 Baseline left parenthesis bold upper A minus bold upper I Subscript 2 upper N Sub Subscript d Subscript Baseline right parenthesis bold upper B Subscript u
The excitation bold italic f is modeled as zero-mean discrete Gaussian white noise with 
covariance matrix b old upper Sigma Subscript f : 
u
p
pe r
 
E lef t br
acket bold italic f Subscript i Baseline right bracket equals bold 0 Subscript upper N Sub Subscript f Subscript times 1
u
p
pe r E le
f
t
 b ra ck e t 
bold italic f S u b s
cript i Baseline bold italic f Subscript j Superscript normal upper T Baseline right bracket equals bold upper Sigma Subscript f Baseline delta Subscript i j Baseline comma i comma j equals 0 comma 1 comma 2 comma ellipsis
where bol d 0 Subscript upper N Sub Subscript f Subscript times 1 is the up pe r N Subscript f Baseline times 1 zero column vector; upper E left bracket period right bracket denotes the mathematical 
expectation; de l ta Subscript i j is the discrete-time unit impulse function (also known as the Dirac 
delta function) given by: 
de l t a
 Subsc ri pt
 i j  Ba se
line equals StartLayout Enlarged left brace 1st Row 1 comma i equals j 2nd Row 0 comma i not equals j EndLayout
It is assumed that discrete-time response measurements are observed at uper N 0 DOFs 
of the dynamical system. There is a difference between the measured responses and 
the actual responses due to the measurement noise. As a result, the noise-corrupted 
measurements can be expressed as follows: 
bold italic z  Subsc
ript i plus 1 Baseline equals bold upper H bold italic u Subscript i plus 1 Baseline plus bold italic n Subscript i plus 1
where bo ld upper H element of double struck upper R Superscript upper N 0 times 2 upper N Super Subscript d is the observation matrix; bold italic n Subscript i plus 1 refers to the measurement noise 
at the lef t parenthesis i plus 1 right parenthesis t h time step and bold italic n is modeled as Gaussian independent and identically 
distributed (i.i.d.) process with zero mean and covariance matrix bold upper Sigma Subscript n: 
upper E  left b
racket bold italic n Subscript i Baseline right bracket equals bold 0 Subscript upper N 0 times 1
u
p
per E 
l
e
f t br a ck
et bo ld italic n  S
ubscript i Baseline bold italic n Subscript j Superscript normal upper T Baseline right bracket equals bold upper Sigma Subscript n Baseline delta Subscript i j Baseline comma i comma j equals 0 comma 1 comma 2 comma ellipsis
In addition, the measurement noise bold italic n is assumed to be statistically independent 
to the excitation bold italic f : 
u
p
pe r E l
e
f
t bra ck et bo
ld it alic f Sub s c r
ipt i Baseline bold italic n Subscript j Superscript normal upper T Baseline right bracket equals bold 0 Subscript upper N Sub Subscript f Subscript times upper N 0 Baseline comma i comma j equals 0 comma 1 comma 2 comma ellipsis
First, a priori state estimation (which can also be referred to as the one-step-
ahead predicted state vector) can be obtained by computing the expected value of

30
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
bold italic u Subscript i plus 1 in Eq. (2.7) conditioned on the measurement dataset up to the i t h time step 
up er D Subsc r i p t  i Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i Baseline EndSet: 
StartLa you
t
 1st Ro
w
 1s
t
 Col umn bo ld i
t
alic u Subs cr ipt 
i
 p lus 
1
 vertic
al bar i 2nd Column identical to upper E left bracket bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals upper E left bracket bold upper A bold italic u Subscript i Baseline plus bold upper B bold italic f Subscript i Baseline vertical bar upper D Subscript i Baseline right bracket 3rd Row 1st Column Blank 2nd Column equals bold upper A upper E left bracket bold italic u Subscript i Baseline vertical bar upper D Subscript i Baseline right bracket plus bold upper B upper E left bracket bold italic f Subscript i Baseline vertical bar upper D Subscript i Baseline right bracket 4th Row 1st Column Blank 2nd Column equals bold upper A bold italic u Subscript i vertical bar i EndLayout
where bold italic u Subscript i vertical bar i is deﬁned as follows: 
bold italic u S u
bscript i vertical bar i Baseline identical to upper E left bracket bold italic u Subscript i Baseline vertical bar upper D Subscript i Baseline right bracket
Then, the prediction error between the actual state and the priori state estimation 
at the lef t parenthesis i plus 1 right parenthesis t h time step can be expressed as follows: 
bold italic epsilon 
Subscript i plus 1 Baseline equals bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i
Thus, the covariance matrix of the prediction error is readily obtained as follows:
StartLayo ut
 
1st Row
 1s
t Col
u
mn
 b
old u pper Sig
ma
 Subs cript u 
comma i
 
pl
u s
 1 v erti ca l bar i B
as
elin e id en ti cal to 
2nd Col
u
mn
 u
p
p
er E left
 
brac ke t
 b
o
l
d i talic 
e
psil on  
Subscri
p
t 
i
 
p
lus  1 Bas
el
ine  bold 
italic  eps il on  S ub
sc rip t i
 
plu s 1 Su
p
er sc
ri pt norm al  
u
ppe r T Ba
seline ver
t
ica
l  
bar  upper
 D
 Su bscrip
t i Bas
e
lin e ri
g
ht  b ra ck
e
t 2nd
 
Row
 1st
 C
olu mn equ
a
ls  2
n
d Col
u
mn uppe
r
 E  
l
eft  brack
et left
 
pa
renthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 3rd Row 1st Column equals 2nd Column upper E left bracket left parenthesis bold upper A bold italic u Subscript i Baseline plus bold upper B bold italic f Subscript i Baseline minus bold upper A bold italic u Subscript i vertical bar i Baseline right parenthesis left parenthesis bold upper A bold italic u Subscript i Baseline plus bold upper B bold italic f Subscript i Baseline minus bold upper A bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 4th Row 1st Column equals 2nd Column upper E left bracket left bracket bold upper A left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis plus bold upper B bold italic f Subscript i Baseline right bracket left bracket bold upper A left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis plus bold upper B bold italic f Subscript i Baseline right bracket Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 5th Row 1st Column equals 2nd Column upper E left bracket bold upper A left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper A Superscript normal upper T Baseline plus bold upper B bold italic f Subscript i Baseline bold italic f Subscript i Superscript normal upper T Baseline bold upper B Superscript normal upper T Baseline plus bold upper A left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis bold italic f Subscript i Superscript normal upper T Baseline bold upper B Superscript normal upper T Baseline plus bold upper B bold italic f Subscript i Baseline left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper A Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 6th Row 1st Column equals 2nd Column bold upper A upper E left bracket left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper A Superscript normal upper T plus bold upper B upper E left bracket bold italic f Subscript i Baseline bold italic f Subscript i Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper B Superscript normal upper T 7th Row 1st Column Blank 2nd Column plus bold upper A upper E left bracket left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis bold italic f Subscript i Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper B Superscript normal upper T plus bold upper B upper E left bracket bold italic f Subscript i Baseline left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper A Superscript normal upper T EndLayout
Since
l
eft  paren
thesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis
is uncorrelated with bo ld italic f Subscript i, Eq.  (2.20) can be further simpliﬁed as 
follows:
StartLayo ut 1
st
 Ro w 1st 
Co
lum n bold
 upper 
S
igm a Su
b
sc ri pt  u
 
comm
a
 i 
plus 1 ver tic al b ar  i 
2nd Column equals bold upper A upper E left bracket left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper A Superscript normal upper T Baseline plus bold upper B upper E left bracket bold italic f Subscript i Baseline bold italic f Subscript i Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket bold upper B Superscript normal upper T Baseline 2nd Row 1st Column Blank 2nd Column equals bold upper A bold upper Sigma Subscript u comma i vertical bar i Baseline bold upper A Superscript normal upper T Baseline plus bold upper B bold upper Sigma Subscript f Baseline bold upper B Superscript normal upper T EndLayout
where bold upper Sigma Subscript u comma i vertical bar i is deﬁned as follows: 
bol d ita lic ep
silon Subscript i Baseline equals bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i
StartLa you
t
 1st R
o
w 1s
t
 Co
lu
mn bold u
pp
er Sigma 
Subscri
p
t u comma i vertical bar i 2nd Column identical to upper E left bracket bold italic epsilon Subscript i Baseline bold italic epsilon Subscript i Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals upper E left bracket left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis left parenthesis bold italic u Subscript i Baseline minus bold italic u Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket EndLayout

2.2 Standard Kalman Filter
31
According to the Bayes’ theorem, the posterior probability density function (PDF) 
of bold italic u Subscript i plus 1 given the measurement dataset upper D Subscript i plus 1 up to the lef t parenthesis i plus 1 right parenthesis t h time step can be given 
as follows: 
StartLayout 1st Row 1st Column p le
ft  parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Column equals p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar bold italic z Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction EndLayout
StartLayout 1
st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Column equals p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar bold italic z Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction EndLayout
where p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesisis a normalizing constant such that the integral of the posterior 
PDF over the entire parameter space is unity; p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesisis the prior PDF of bold italic u Subscript i plus 1. 
Since the excitation follows the Gaussian distribution, the prior PDF of bold italic u Subscript i plus 1 given 
the measurement dataset uper D Subscript i also follows the Gaussian distribution with mean bold italic u Subscript i plus 1 vertical bar i
and covariance matrix bold upper Sigma Subscript u comma i plus 1 vertical bar i : 
StartLayout 1st Row 1st Column p
 le ft parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
St
artLa
y
out 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1st
 Row 1
st Colu
m
n p l eft pare
nt
hesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
The likelihood function p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesisreﬂects the contribution of the measure-
ment bold italic z Subscript i plus 1 in establishing the posterior PDF at the lef t parenthesis i plus 1 right parenthesis t h time step and it also 
follows the Gaussian distribution with mean bold upper H bold italic u Subscript i plus 1 and covariance matrix bold upper Sigma Subscript n: 
StartLayout 1st Row 1st Column p le
ft parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Column equals p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St artLa yout 1st Row 1st Column p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Column equals p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St art
L
ayout 1st Row 1st Column p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Column equals p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
StartLay out 1st Row 1
st  Colum n p left
 
parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Column equals p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
By substituting Eqs. (2.25) and (2.26) into Eq. (2.24), the posterior PDF of bold italic u Subscript i plus 1
given the measurement dataset upper D Subscript i plus 1 is obtained as: 
S
t
artL
ayout 
1
st 
R
ow 1
st C
o
l
u
mn p
 left pare
nthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S
t
artL
ayou
t
 1st Row 1 st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S tartLayout
 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St artLayout 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
StartLayout 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S
t
artL
ayou
t
 1st 
R
ow 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1st
 Row 1
st Colu
m
n p l eft pare
n
thesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1s
t Row 
1
s
t Col umn p l
ef
t  parenth esis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S tartLayout
 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St artLayout 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
StartLayout 1st Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
S
t
artL
ayou
t
 1s
t
 Row 1st Column p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St art
Layou t 1s
t Row 1s t Colum n p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St art
Layout 
1s
t Ro
w
 1st 
C
olumn p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
St art
Lay
o
ut 1
st Row 1 st Colum
n p
 
left paren
the
s
is b
old ital ic u Su bscript 
i 
plus
 1
 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column StartFraction p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic u Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 2nd Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic u Subscript i plus 1 Baseline minus bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 Baseline right parenthesis right bracket 4th Row 1st Column equals 2nd Column StartFraction left parenthesis 2 pi right parenthesis Superscript minus upper N Super Subscript d Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue Superscript negative one half Baseline Over p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis EndFraction exp left parenthesis minus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline minus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis 5th Row 1st Column Blank 2nd Column times exp left bracket minus one half bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold italic u Subscript i plus 1 Baseline plus bold italic u Subscript i plus 1 Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis right bracket EndLayout
As a result, the posteriori state estimation of bold italic u Subscript i plus 1 can be obtained by maximizing 
the posterior PDF p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesisin Eq. (2.27) or equivalently, by minimizing the

32
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
objective function: 
bold it ali c u Su bscr
ipt i  plus 1 
vertical bar i plus 1 Baseline equals arg min Underscript bold italic u Subscript i plus 1 Baseline Endscripts upper J left parenthesis bold italic u Subscript i plus 1 Baseline right parenthesis
where bold it ali c u
 
Subscript
 i plus 1 vertical bar i plus 1 Baseline identical to upper E left bracket bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right bracket
, and the objective function upper J left parenthesis bold italic u Subscript i plus 1 Baseline right parenthesisis deﬁned as 
the negative logarithm of the posterior PDF p left parenthesis bold italic u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis: 
StartLayou t  1st  Row 1st Colu
mn u pper J left parenthesis bold u Subscript i plus 1 Baseline right parenthesis identical to 2nd Column minus ln p left parenthesis bold u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 plus one half bold u Subscript i plus 1 Superscript upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold u Subscript i plus 1 3rd Row 1st Column Blank 2nd Column plus bold u Subscript i plus 1 Superscript upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold z Subscript i plus 1 Baseline right parenthesis EndLayout
Start
Lay
o
ut 1
st Row 1 st Colum
n u
p
per J
 left
 pa
r
enth
esis bol d u Sub script i
 p lus 
1
 Baseline right parenthesis identical to 2nd Column minus ln p left parenthesis bold u Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 plus one half bold u Subscript i plus 1 Superscript upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis bold u Subscript i plus 1 3rd Row 1st Column Blank 2nd Column plus bold u Subscript i plus 1 Superscript upper T Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold z Subscript i plus 1 Baseline right parenthesis EndLayout
where the constant kappa 0 is given by: 
Sta r
t
Lay out 1st Row 1st Column kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
S
t
artLayout 1st Row 1st Column kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
Star
tLayout 1s
t Row 1st Column kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
StartLayout 1s t Row 1st Col
umn kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
St art
Layou t 1s
t Row 1s t Colum n kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
St art
Layout 
1s t Ro
w 1st Column kappa 0 equals 2nd Column left parenthesis upper N Subscript d Baseline plus StartFraction upper N 0 Over 2 EndFraction right parenthesis ln left parenthesis 2 pi right parenthesis plus one half ln StartAbsoluteValue bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus one half ln StartAbsoluteValue bold upper Sigma Subscript n Baseline EndAbsoluteValue plus ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column plus one half bold italic u Subscript i plus 1 vertical bar i Superscript normal upper T Baseline bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i plus one half bold italic z Subscript i plus 1 Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 EndLayout
It is noticed that the constant kappa 0 does not depend on bold italic u Subscript i plus 1. The closed-form solution 
for the optimization problem formulated in Eq. (2.28) can be easily obtained as 
follows: 
bold it ali c
 
u Su
bscript i plus 1
 v e
rtic
al b
ar i plu s 1 Bas eline eq
ua ls l
e
ft parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis Superscript negative 1 Baseline left parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold italic z Subscript i plus 1 Baseline right parenthesis
To avoid computing the inverse of the matrix
l
eft 
parenthe sis bold
 u p
per Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis
, the Wood-
bury matrix identity (Henderson and Searle 1981) can be utilized: 
lef t parenth esis b old upp
e
r A plus bol
d upper B
 bold upper C bold upper D right parenthesis Superscript negative 1 Baseline equals bold upper A Superscript negative 1 Baseline minus bold upper A Superscript negative 1 Baseline bold upper B left parenthesis bold upper C Superscript negative 1 Baseline plus bold upper D bold upper A Superscript negative 1 Baseline bold upper B right parenthesis Superscript negative 1 Baseline bold upper D bold upper A Superscript negative 1
with bo l d up
per A equals bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 , bo ld upper B equals bold upper H Superscript normal upper T, bo l d up
per C equals bold upper Sigma Subscript n Superscript negative 1 and bo ld upper D equals bold upper H. Then, Eq. (2.31) can be rewritten 
as follows: 
bold it ali c u Subsc ript i
 
plus 1 vertica
l
 bar i plus 1 Baseline equals bold italic u Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold upper H bold italic u Subscript i plus 1 vertical bar i Baseline right parenthesis
where bold upper G Subscript i plus 1 is the Kalman gain matrix (Kalman 1960) given by: 
bold u pper G Su bsc
ript i plu s 1  Ba
seli
ne equals bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper H bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n Baseline right parenthesis Superscript negative 1
On the other hand, according to Eq. (2.27), it is noticed that bold italic u Subscript i plus 1 follows the multi-
variate Gaussian distribution with mean bold it alic u Subscript i plus 1 vertical bar i plus 1 given by Eq. (2.33) and covariance 
matrix given as follows:

2.3 Applications to State Estimation
33
StartLayout  
1
st R
ow 1st C olumn bo
ld  
uppe
r  Sigma Su b script u com
ma i plus 1 ver tical bar i plus
 
1
 2nd Column 
e
quals le
ft parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i Superscript negative 1 Baseline plus bold upper H Superscript normal upper T Baseline bold upper Sigma Subscript n Superscript negative 1 Baseline bold upper H right parenthesis Superscript negative 1 Baseline 2nd Row 1st Column Blank 2nd Column equals bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline minus bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript n Baseline plus bold upper H bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline right parenthesis Superscript negative 1 Baseline bold upper H bold upper Sigma Subscript u comma i plus 1 vertical bar i Baseline 3rd Row 1st Column Blank 2nd Column equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript Baseline minus bold upper G Subscript i plus 1 Baseline bold upper H right parenthesis bold upper Sigma Subscript u comma i plus 1 vertical bar i EndLayout
Equations (2.17), (2.21), and (2.33)–(2.35) constitute the essential recursive 
formulae of the standard KF. The derivation of the KF algorithm starts from a mathe-
matical description of a dynamical system. Then, the conditional PDF of the state for 
the dynamical system is established by obtaining the mean vector and its associated 
covariance matrix based on the Gaussian assumption. When a new measurement is 
available, the posterior PDF of the state can be obtained by using the Bayes’ theorem. 
The analytical solutions of the estimated state vector and its associated covariance 
matrix can be obtained by solving an optimization problem. The KF provides an 
estimation of the state for a dynamical system as a weighted average of the predicted 
and measured states from the system and the new observation, respectively. The 
weighting in the KF is calculated from the covariance matrices of the state estima-
tion and the measurements. Furthermore, it is worth noting that the KF provides the 
estimation of the state vector and its associated covariance matrix recursively over 
time by using the dynamical model of the system and the incoming measurements. 
As a result, the KF is feasible in real-time applications to cope with real-time data. 
In other words, the estimated state vector and its associated covariance matrix are 
updated per time step when a new observation arrives. 
In summary, the procedure of the standard KF algorithm is shown in Fig. 2.1. The  
algorithm starts with an arbitrary and admissible initial state vector bold italic u Subscript 0 vertical bar 0 and covari-
ance matrix bold upper Sigma Subscript u comma 0 vertical bar 0 . Then, the one-step-ahead predicted state vector and its associated 
covariance matrix can be obtained by using Eqs. (2.17) and (2.21), respectively. After 
calculating the Kalman gain matrix using Eq. (2.34), the updated state vector and 
its associated covariance matrix can be obtained by using Eqs. (2.33) and (2.35), 
respectively.
2.3 
Applications to State Estimation 
2.3.1 
Vehicle Tracking Problem 
The ﬁrst example uses the standard KF to resolve a simple vehicle tracking problem. 
Consider a car moving in a plane as shown in Fig. 2.2. This vehicle can apply 
accelerating input to turn maneuver. It has an on-board location sensor which can 
report the x and y coordinates of the vehicle.
The state vector of the vehicle tracking system is deﬁned as follows:

34
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Set initial values 
 and 
Compute the one-step-ahead predicted state vector 
by using Equation (2.17) 
Compute the covariance matrix 
by using Equation (2.21) 
Obtain the Kalman gain matrix 
by using Equation (2.34) 
Compute the updated state vector 
by using Equation (2.33) 
Compute the covariance matrix 
by using Equation (2.35) 
Fig. 2.1 Flow chart of the standard KF algorithm
bol d
 
italicxu Su bscript i Baseline i
den
tical to Start 1 By 1 Matrix 1st Row x Subscript i Baseline comma ModifyingAbove x With dot Subscript i Baseline comma StartLayout 1st Row ModifyingAbove x With two dots Subscript i Baseline comma y Subscript i Baseline comma ModifyingAbove y With dot Subscript i Baseline comma ModifyingAbove y With two dots Subscript i Baseline EndLayout EndMatrix Superscript normal upper T
where x Subscript i, ModifyingAbove x With dot Subscript i and ModifyingAbove x With two dots Subscript i indicate the position, velocity and acceleration of the vehicle 
in the x-direction at the i t h time step, respectively; y Subscript i, ModifyingAbove y With dot Subscript i and ModifyingAbove y With two dots Subscript i indicate the posi-
tion, velocity and acceleration of the vehicle in the y-direction at the i t h time step, 
respectively. Then, based on kinematics, the state-space representation of the vehicle 
tracking system can be expressed as follows: 
bold italic  u Su
bscript i plus 1 Baseline equals bold upper A bold italic u Subscript i Baseline plus bold upper B bold italic w Subscript i
The state transition matrix bold upper A is given by:

2.3 Applications to State Estimation
35
Fig. 2.2 A car moving in a plane
bo ld
 u
pper
 A eq
ua
l s S tart 6 B y
 6
 M
at
r i
x  
1 s
t
 Ro
w  
1 s
t
 Col umn 1 2
n d
 
C ol
umn
 n
o
r ma
l  
up
per 
Delta
 t
 3rd Column 0.5 normal upper Delta t squared 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column 0 2nd Column 1 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column 0 2nd Column 0 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 1 5th Column normal upper Delta t 6th Column 0.5 normal upper Delta t squared 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column 1 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column 0 6th Column 1 EndMatrix
where normal upper Delta t is the sampling time step; bo ld upper B equals bold upper I 6 is the inﬂuence matrix of the process 
noise; bold italic w Subscript i is the process noise at the i t h time step and it is modeled as zero-mean 
Gaussian i.i.d. with covariance matrix bold upper Sigma Subscript wgiven as follows:
bol d 
up
per
 Sigma
 
Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old upper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old upper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
o
l
d
 uper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old  up
p
e
r
 Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
ol
d
 
u
p
p
e
r
 
Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old upper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old upper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
bo
l
d
 
upper Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
old  up
p
e
r
 Sigma Subscript w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
b
ol
d 
up
per
 Sigma
 S
ubsc
r
ipt w Baseline equals Start 6 By 6 Matrix 1st Row 1st Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 2nd Column StartFraction normal upper Delta t cubed Over 2 EndFraction 3rd Column StartFraction normal upper Delta t squared Over 2 EndFraction 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column StartFraction normal upper Delta t cubed Over 2 EndFraction 2nd Column normal upper Delta t squared 3rd Column normal upper Delta t 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column StartFraction normal upper Delta t squared Over 2 EndFraction 2nd Column normal upper Delta t 3rd Column 1 4th Column 0 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t Superscript 4 Baseline Over 4 EndFraction 5th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 6th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t cubed Over 2 EndFraction 5th Column normal upper Delta t squared 6th Column normal upper Delta t 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column StartFraction normal upper Delta t squared Over 2 EndFraction 5th Column normal upper Delta t 6th Column 1 EndMatrix sigma Subscript w Superscript 2
where sigma Subscript w is the standard deviation of the process noise. The process noises in the 
x and y directions are assumed to be uncorrelated. On the other hand, the process 
noise is considered to be correlated among the state variables of position, velocity 
and acceleration. Then, the KF can be used to update the values of the state variables 
in the real-time manner.

36
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
It is assumed that the x and y coordinates of the vehicle were measured with an 
on-board location sensor with sampling time step normal upper Delta t. The measurement equation is 
given by: 
bol d ital ic z
 Subscript i Baseline equals bold upper H bold italic u Subscript i Baseline plus bold italic n Subscript i
where bol d italic z Subscript i Baseline element of double struck upper R squared is the measurement vector at the i t h time step; bold italic n Subscript i is the measurement 
noise at the i t h time step and it is modeled as zero-mean Gaussian i.i.d. process with 
covariance matrix bold upper Sigma Subscript n; and bold upper H is the observation matrix given as follows: 
bo l
d  u p p e r  
H  e q u a
l
s Start 2 By 6 Matrix 1st Row 1st Column 1 2nd Column 0 3rd Column 0 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 1 5th Column 0 6th Column 0 EndMatrix
The vehicle moved in a straight line in the x-direction with a constant velocity 
10 m/s. After moving 600 m in the x-direction, the vehicle turned right and trav-
elled along a semicircular path with radius 100 m using a constant angular velocity 
0.016 rad/s. Then, the vehicle turned left and traveled along another semicircular 
path with the same radius using the same constant angular velocity. The sampling 
time step was taken as nor mal  upper Delta t equals 1 normal sand the entire tracking duration was 462 normal s. The  
positions of the vehicle in the x and y directions were observed and the rms of the 
measurement noise was taken as 2% rms of the corresponding actual positions of the 
vehicle. The standard deviation of the acceleration was taken as sig ma Subscript w Baseline equals 0.02 normal m squared divided by normal s Superscript negative 4
and the covariance matrix for the measurement noise was taken as bol d upper Sigma Subscript n Baseline equals 3 bold upper I 2 normal m squared. 
The actual movement trajectory and the measurements of the vehicle are shown in 
Fig. 2.3.
The standard KF can be performed according to Eqs. (2.37) and (2.40) to esti-
mate the positions, velocities and accelerations of the vehicle. Figure 2.4 shows the 
comparison between the actual and estimated values of the vehicle position. It is 
observed that the standard KF tracked the positions of the vehicle quite well. Small 
deviations of the estimated values from the actual values of the vehicle position could 
be observed when the vehicle began the turning maneuver. The reason is that the esti-
mated values were obtained based on the data points at the current and previous time 
steps. Nevertheless, the estimated values approached the actual values of the vehicle 
position after more data points were acquired.
Figure 2.5 shows the estimation results of the velocities in the x and y direc-
tions of the vehicle. The dotted lines represent the estimated values; the solid lines 
represent the actual values; the dashed lines represent the bounds of the 99.7% cred-
ible intervals. The same line style will be employed in other later ﬁgures. When the 
vehicle moved along the straight line in the x-direction, the actual velocities in the x
and y directions were equal to 10 m/s and 0 m/s, respectively. Although the turning 
angular velocity was constant, the actual projections of the velocity on the x and 
y directions varied with the position. In Fig. 2.5, it is clearly seen that in the early 
stage of the ﬁltering the estimated velocities ﬂuctuated severely due to the inaccurate 
initial values and the lack of measurements. After acquiring more data points from

2.3 Applications to State Estimation
37
Fig. 2.3 Actual movement trajectory and the measurements of the vehicle
Fig. 2.4 Comparison between the actual and estimated values of the vehicle position

38
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
the on-board location sensor, the estimated velocities in the x and y directions agreed 
well with the corresponding actual values during the uniform rectilinear motion and 
the turning maneuver. Small time delay was observed when the sudden change of the 
x-directional velocity occurred. This was because the estimation was obtained based 
on the data points of the previous and current time steps. Nevertheless, the delay was 
slight and the estimated velocities in the x-direction were recovered promptly after 
acquiring some data points during the turning maneuver. 
Figure 2.6 shows the estimation results of the accelerations in the x and y directions 
of the vehicle. When the vehicle moved along a straight line in the x-direction with 
a constant velocity, the actual accelerations in the x and y directions were both 
zero. In addition, since the vehicle used constant angular velocity to turn maneuver, 
the actual angular acceleration and the projections of the acceleration in the x and y
directions were equal to zero. Again, in the early stage of identiﬁcation, the estimated 
accelerations were highly ﬂuctuating since only a limited amount of measured data 
was available. In Fig. 2.6, the actual and estimated accelerations in the x and y
directions showed decent agreement after acquiring more data points. Moreover, a 
small valley in the x-directional acceleration appeared to compromise the sudden 
drop of the velocity in the x-direction. In addition, the credible intervals provided 
reasonable uncertainty levels of the estimation results. As a result, it is concluded that
Fig. 2.5 Estimation results of the velocities of the vehicle 

2.3 Applications to State Estimation
39
Fig. 2.6 Estimation results of the accelerations of the vehicle 
the standard KF can provide accurate estimation results and reasonable uncertainty 
levels of the estimation results for the vehicle tracking system. 
2.3.2 
Sixty-Story Building 
The second example considers a 60-story shear building. It has uniformly distributed 
ﬂoor mass and interstory stiffness, and the stiffness-to-mass ratio was taken as 
1632 normal s Superscript negative 2. As a result, the fundamental frequency of the building was 0.1669 upper H z. 
The Rayleigh damping model was used, and the damping matrix was given by 
bo ld up per C equals alpha bold upper M plus beta bold upper K, where alpha equal s 0.0157 normal s Superscript negative 1 and beta equals  0.0048 normal s. As a result, the damping 
ratios for the ﬁrst two modes were 1.0 percent sign. 
The building was subjected to ground excitation modeled as zero-mean Gaussian 
white noise with spectral intensity up er S 0  equals  1.6 times 10 Superscript negative 5 Baseline normal m squared divided by normal s cubed. The force distribution 
matrix bold upper T in Eq. (2.1) for the ground excitation was given by: 
bo ld 
u
pper T eq u a ls bo
ld 
upper M Start 1 By 4 Matrix 1st Row 1st Column negative 1 comma 2nd Column negative 1 comma 3rd Column midline horizontal ellipsis comma 4th Column negative 1 EndMatrix Superscript normal upper T

40
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
The entire monitoring duration was 200 normal s and the sampling frequency was 200 upper H z. 
Acceleration responses of the 1st, 10th, 20th, 30th, 40th, 50th and 60th ﬂoors 
were observed and the rms of the measurement noise was taken as 5% rms of 
the corresponding noise-free response quantities. Figure 2.7 shows acceleration 
measurements of the 1st, 30th and 60th ﬂoors. 
The standard KF can then be implemented to update the structural displacement 
and velocity responses recursively. The initial values of the estimated state vector 
and the associated covariance matrix were given as follows: 
bold italic u
 Subscript 0 vertical bar 0 Baseline equals bold 0 Subscript 2 upper N Sub Subscript d times 1
bold up per Si
gma Subscript u comma 0 vertical bar 0 Baseline equals bold upper I Subscript 2 upper N Sub Subscript d
Figure 2.8 shows the comparisons between the actual displacement responses and 
the estimated displacement responses of the 10th, 30th and 60th ﬂoors. Figure 2.9 
shows the comparisons between the actual velocity responses and the estimated 
velocity responses of the 10th, 30th and 60th ﬂoors. The dotted lines represent the 
estimated values and the solid lines represent the actual values. It can be clearly seen
Fig. 2.7 Measurements at the 1st, 30th and 60th ﬂoors 

2.3 Applications to State Estimation
41
that the two sets of curves were virtually on top of each other. The standard KF is 
capable to provide accurate displacement and velocity estimation results. 
Figure 2.10 shows the log standard deviation time histories of the estimated 
displacement responses of the 1st, 30th and 60th ﬂoors. Figure 2.11 shows the log 
standard deviation time histories of the estimated velocity responses of the 1st, 30th 
and 60th ﬂoors. At the beginning of the ﬁlter propagating process, the standard devi-
ations of the estimated values were large due to the large prior uncertainty. However, 
as more data points have been acquired, the standard deviations of the estimated 
values decreased signiﬁcantly and converged rapidly to small and steady values. It 
implies that increasingly more conﬁdence of the estimation results can be obtained 
when more measurements are acquired. The inﬂuence of the initial values in the 
standard KF can soon be negligible after more observed data points are available. 
This veriﬁes that the standard KF can provide accurate state estimation results for 
the linear dynamical systems.
Fig. 2.8 Actual and estimated displacement responses of the 1st, 30th and 60th ﬂoors

42
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.9 Actual and estimated velocity responses of the 1st, 30th and 60th ﬂoors
2.4 
Extended Kalman Filter 
In the previous sections, we introduced the linear KF for the identiﬁcation of linear 
dynamical systems. However, it often occurs in practical applications that the dynam-
ical systems and the observation models are nonlinear. In this case, the standard KF 
is not applicable for state estimation. Therefore, it is necessary to explore the ﬁltering 
techniques applicable for nonlinear systems. Furthermore, if there are unknown 
system parameters for identiﬁcation, the problem will become nonlinear even for 
linear dynamical systems. This will be further elaborated afterwards. 
Popular choices of nonlinear ﬁltering include the EKF, unscented Kalman ﬁlter 
and particle ﬁlter. In this section, we will introduce the most widely used nonlinear 
ﬁltering technique, i.e., EKF. The core idea of the EKF is to use the Gaussian approx-
imation to ﬁnd an appropriate linear system representing the underlying nonlinear 
dynamical system and then the standard KF algorithm can be employed for state esti-
mation. In the EKF, the approximation is realized by using the Taylor series expansion 
to approximate the nonlinearities in the dynamical system and the observation model. 
In this book, we consider only the ﬁrst-order EKF, to which EKF is usually 
referred. The EKF is suitable for sightly nonlinear dynamical systems and other

2.4 Extended Kalman Filter
43
Fig. 2.10 Log standard deviation of the estimated displacement responses of the 1st, 30th and 60th 
ﬂoors
higher-order EKF can be considered to perform system identiﬁcation for highly 
nonlinear dynamical systems by reducing the linearization error. 
2.4.1 
Derivation of the Extended Kalman Filter 
Consider a general, possibly nonlinear, dynamical system with uper N Subscript d DOFs and 
equation of motion: 
bold upper M ModifyingAbove bold it al ic 
x With two dots left parenthesis t right parenthesis plus script upper R left parenthesis bold italic x left parenthesis t right parenthesis comma ModifyingAbove bold italic x With dot left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bold italic x left parenthesis t right parenthesisdenotes the generalized coordinate vector of the system at time t; bold upper M is the 
mass matrix; the function script upper R left parenthesis period comma period semicolon period right parenthesisrepresents the general linear/nonlinear restoring 
force governed by the possibly time-varying model parameters in bold italic theta left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript theta; bold italic f is 
the excitation applied to the system and bold upper T is the inﬂuence matrix associated with bold italic f . 
Deﬁne an augmented state vector given as follows: 
bold i
t
alic y l eft parenthesis  t 
right parenthesis identical to Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T Baseline comma 3rd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T

44
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.11 Log standard deviation of the estimated velocity responses of the 1st, 30th and 60th ﬂoors
Then, the dynamical system in Eq. (2.45) can be rewritten as: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where g left parenthesis period comma period semicolon period right parenthesisis the nonlinear state-space function that characterizes the dynamical 
system in Eq. (2.45). 
Equation (2.47) can be expanded in a Taylor series around the state bold italic y left parenthesis t right parenthesis equals bold italic y Superscript bold asteriskas 
follows: 
ModifyingAbove bo ld italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAb
o
ve  bold
 i talic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAbo v
e bold italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
where higher-order terms are neglected with the assumption that bold italic y is close to bold italic y Superscript bold asterisk. 
Then, Eq. (2.48) can be rewritten to the following equation: 
ModifyingAbove bold ital ic  y With dot
 left parenthesis t right parenthesis equals bold upper A Subscript y Baseline left parenthesis t right parenthesis bold italic y left parenthesis t right parenthesis plus bold upper B Subscript y Baseline bold italic f left parenthesis t right parenthesis plus bold italic delta Subscript y Baseline left parenthesis t right parenthesis
where the matrix bold upper A Subscript y is given by:

2.4 Extended Kalman Filter
45
StartLay out 1st Row 1st Column bold upper A Subscript y Baseline left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 3 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 3rd Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript theta Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic x EndFraction 2nd Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential ModifyingAbove bold italic x With dot EndFraction 3rd Column negative bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic theta EndFraction 3rd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 2nd Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 3rd Column minus eta bold upper I Subscript upper N Sub Subscript theta EndMatrix EndLayout
Sta
rtLa
yout 
1s
t 
Ro
w 1st 
Col
umn bol
d up er A Subscript y Baseline left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 3 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 3rd Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript theta Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic x EndFraction 2nd Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential ModifyingAbove bold italic x With dot EndFraction 3rd Column negative bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic theta EndFraction 3rd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 2nd Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 3rd Column minus eta bold upper I Subscript upper N Sub Subscript theta EndMatrix EndLayout
Star tLayo ut 1st Row 1st Column bold upper A Subscript y Baseline left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 3 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 3rd Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript theta Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic x EndFraction 2nd Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential ModifyingAbove bold italic x With dot EndFraction 3rd Column negative bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic theta EndFraction 3rd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 2nd Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 3rd Column minus eta bold upper I Subscript upper N Sub Subscript theta EndMatrix EndLayout
Start Layou t 1st Row 1st Column bold upper A Subscript y Baseline left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 3 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 3rd Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript theta Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic x EndFraction 2nd Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential ModifyingAbove bold italic x With dot EndFraction 3rd Column negative bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic theta EndFraction 3rd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 2nd Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 3rd Column minus eta bold upper I Subscript upper N Sub Subscript theta EndMatrix EndLayout
Sta
rtLayou
t 1st R
ow 1st
 C
o
lumn bold upper A Subscript y Baseline left parenthesis t right parenthesis 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 3 Matrix 1st Row 1st Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript d Baseline 2nd Column bold upper I Subscript upper N Sub Subscript d Baseline 3rd Column bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript theta Baseline 2nd Row 1st Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic x EndFraction 2nd Column minus bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential ModifyingAbove bold italic x With dot EndFraction 3rd Column negative bold upper M Superscript negative 1 Baseline StartFraction partial differential script upper R Over partial differential bold italic theta EndFraction 3rd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 2nd Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript d Baseline 3rd Column minus eta bold upper I Subscript upper N Sub Subscript theta EndMatrix EndLayout
where etais a small positive number to avoid singularity when calculating the inverse 
matrix of bold upper A Subscript y. The matrix bold upper B Subscript y is given by: 
Sta rt Layout 1st Row 1st Column bold upper B Subscript y 2nd Column equals StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 1 Matrix 1st Row bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript f Baseline 2nd Row minus bold upper M Superscript negative 1 Baseline bold upper T 3rd Row bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript f EndMatrix EndLayout
Sta
rtLa
yout 
1s
t 
Ro
w 1st Co
lumn b
old up er
 B
 
Subscript y 2nd Column equals StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline 2nd Row 1st Column Blank 2nd Column equals Start 3 By 1 Matrix 1st Row bold 0 Subscript upper N Sub Subscript d Subscript times upper N Sub Subscript f Baseline 2nd Row minus bold upper M Superscript negative 1 Baseline bold upper T 3rd Row bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript f EndMatrix EndLayout
and bold italic delta Subscript y Baseline left parenthesis t right parenthesisis the remainder term due to the local linear approximation given by: 
bold italic delt a Subscript y Baseline left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline minus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic y Superscript bold asterisk
bol
d it
alic de
lta Subscript y Baseline left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline minus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic y Superscript bold asterisk
By assuming that the excitation is constant within any time interval, i.e., 
bo ld it alic f l ef t parenthesis i normal upper Delta t plus xi right parenthesis equals bold italic f left parenthesis i normal upper Delta t right parenthesis, for all x i element of left bracket 0 comma normal upper Delta t right parenthesis, i equals 0 c o m m a 1 comma 2 comma ellipsis, Eq.  (2.49) can be discretized 
to the following difference equation: 
bold itali c y  Subs cr ip t i 
plus 1 Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i Baseline plus bold upper B Subscript i Baseline bold italic f Subscript i Baseline plus bold italic delta Subscript i
where bol d italic y Subscript i Baseline identical to bold italic y left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesisand normal upper Delta t is the sampling time step; bold upper A Subscript i, bold upper B Subscript i and bold italic delta Subscript i
are given by: 
bol d upp
e
r A 
S
ubscript i Baseline equals exp left parenthesis bold upper A Subscript y Baseline normal upper Delta t right parenthesis
bol d uppe
r
 
B S ubscript 
i
 B
aseline equals bold upper A Subscript y Superscript negative 1 Baseline left parenthesis bold upper A Subscript i Baseline minus bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline right parenthesis bold upper B Subscript y
bol d ital
i
c
 de lta Subsc
r
ipt i B
aseline equals bold upper A Subscript y Superscript negative 1 Baseline left parenthesis bold upper A Subscript i Baseline minus bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline right parenthesis bold italic delta Subscript y Baseline left parenthesis i normal upper Delta t right parenthesis
Discrete-time response measurements bold it a l i c  z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i plus 1 Baseline are acquired at uper N 0 DOFs: 
bold ita
l
ic z
 
Subscr
ipt i plus 1 Baseline equals h left parenthesis bold italic y Subscript i plus 1 Baseline right parenthesis plus bold italic n Subscript i plus 1
where h left parenthesis dot right parenthesisdeﬁnes the observation quantities; bold italic n Subscript i plus 1 represents the measurement noise 
at the lef t parenthesis i plus 1 right parenthesis t h time step and the measurement noise is modeled as Gaussian i.i.d. 
process with zero mean and covariance matrix bol d upper Sigma Subscript n Baseline element of double struck upper R Superscript upper N 0 times upper N 0. In the standard KF, the

46
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
measurement equation is a linear function given by Eq. (2.13). However, it is often 
encountered that the measurement equation in Eq. (2.57) is a nonlinear function of the 
state vector bold italic y Subscript i plus 1 in the EKF. For example, when the observation is the acceleration 
response and the structural parameters are included in the augmented state vector, 
the terms k x and c ModifyingAbove x With dot are nonlinear terms. As a result, the observation equation is in 
general a nonlinear function and the corresponding observation matrix can be written 
as follows: 
bold up per H Subscript i plus 1 Baseline equals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i plus 1
bol
d up
per H Su
bscript i plus 1 Baseline equals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i plus 1
On the other hand, if the displacement or velocity responses are observed, the 
observation equation will become a linear function given by: 
bold italic z Subscr
ipt i plus 1 Baseline equals bold upper H bold italic y Subscript i plus 1 Baseline plus bold italic n Subscript i plus 1
where the observation matrix bold upper H is a constant matrix. It is noticed that the state-space 
representation of the dynamical model in Eq. (2.53) and the observation equation in 
Eq. (2.57) are available. As a result, the EKF algorithm can be readily obtained by 
using the same procedure of the derivation of the standard KF. 
First, given the measurement dataset up er D Subsc r i p t  i Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i Baseline EndSet, the one-step-ahead 
predicted state vector bold italic y Subscript i plus 1 vertical bar i can be obtained by taking the expected value of 
Eq. (2.53): 
StartLa you
t
 1st Ro
w
 1st Colum n bo
ld italic y Subscript i plus 1 vertical bar i 2nd Column identical to upper E left bracket bold italic y Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals bold upper A Subscript i Baseline bold italic y Subscript i vertical bar i Baseline plus bold italic delta Subscript i EndLayout
The associated covariance matrix bold upper Sigma Subscript i plus 1 vertical bar i can be obtained as follows:
StartLa you
t 
1st R ow 1st C
ol
umn b old uppe
r Sigma
 
Subscript  i 
pl us 1 ve rti
c
al bar i 2nd Column identical to upper E left bracket left parenthesis bold italic y Subscript i plus 1 Baseline minus bold italic y Subscript i plus 1 vertical bar i Baseline right parenthesis left parenthesis bold italic y Subscript i plus 1 Baseline minus bold italic y Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals bold upper A Subscript i Baseline bold upper Sigma Subscript i vertical bar i Baseline bold upper A Subscript i Superscript normal upper T Baseline plus bold upper B Subscript i Baseline bold upper Sigma Subscript f Baseline bold upper B Subscript i Superscript normal upper T EndLayout
When a new data point bold italic z Subscript i plus 1 is available, the updated state vector bold italic y Subscript i plus 1 vertical bar i plus 1 and its 
associated covariance matrix bold upper Sigma Subscript i plus 1 vertical bar i plus 1 can be obtained by maximizing the conditional 
PDF p
 
left
 paren
thesis bold italic y Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
: 
bold ital ic y Subs cript 
i
 plus  1 
v
ertica
l 
bar i plus 1 Baseline equals bold italic y Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus h left parenthesis bold italic y Subscript i plus 1 vertical bar i Baseline right parenthesis right parenthesis
bold uppe r
 
Sigma Su bscript
 
i plus
 1 vertical bar i plus 1 Baseline equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline minus bold upper G Subscript i plus 1 Baseline bold upper H right parenthesis bold upper Sigma Subscript i plus 1 vertical bar i
where bold upper H is the observation matrix given by:

2.4 Extended Kalman Filter
47
bo ld  upper H equals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y Sub Subscript i plus 1 vertical bar i
bol
d up
per H e
quals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y Sub Subscript i plus 1 vertical bar i
and bold upper G Subscript i plus 1 is the Kalman gain matrix given as follows: 
bold u pper G Sub
script i  pl u s 
1 Ba
seline equals bold upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper H bold upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n Baseline right parenthesis Superscript negative 1
Equations (2.60)–(2.63) and (2.65) comprise the essential formulae of the EKF 
algorithm (Hoshiya and Saito 1984). The states and the model parameters of the 
system can be calculated recursively. In addition, the associated uncertainties can 
also be obtained since the covariance matrix of the updated state vector in Eq. (2.63) 
is given. Therefore, the EKF algorithm not only provides the recursive estimation 
results but also quantiﬁes the uncertainties of the estimation results in an online 
manner. However, the uncertainty quantiﬁcation relies on the prescribed values of
b old upper Sigma Subscript f and bold upper Sigma Subscript n. This issue will be elaborated and resolved in Chap. 3. 
Compared with other nonlinear ﬁlters, e.g., the unscented Kalman ﬁlter (Chatzi 
and Smyth 2009) and the particle ﬁlter (Andrieu et al. 2004), EKF has its superiority 
with signiﬁcantly less computation demand. On the other hand, the EKF algorithm 
is not applicable for highly nonlinear systems. This is because the EKF is based on 
local linear approximation and Gaussian approximation. 
2.4.2 
Extended Kalman Filter with Fading Memory 
There is an implementation issue when the EKF is utilized for the long-term identiﬁ-
cation of time-varying systems. After the EKF utilized substantial amount of data, the 
contribution of a new data point will have tiny contribution to the system parameters 
to be updated due to diminishing effect. As a result, the tracking capability (of system 
parameters) will be poor and there will be serious time delay to track the changes 
of the parameters. In order to resolve this problem, the fading memory is employed 
such that the contribution from the past data will be gradually downgraded. As a 
result, the tracking capability can be enhanced to track the change of the underlying 
system. In the following, the EKF with fading memory will be introduced. 
In order to construct the EKF with fading memory, the covariance matrix of the 
one-step-ahead predicted state vector in Eq. (2.61) is assumed to have the following 
form (Sorenson and Sacks 1971):
Modifyi ngA
b
ove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline equals lamda left parenthesis bold upper A Subscript i Baseline ModifyingAbove bold upper Sigma With quotation dash Subscript i vertical bar i Baseline bold upper A Subscript i Superscript normal upper T Baseline plus bold upper B Subscript i Baseline bold upper Sigma Subscript f Baseline bold upper B Subscript i Superscript normal upper T Baseline right parenthesisModif yin
gA bove bo ld 
u
p
per Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline equals lamda left parenthesis bold upper A Subscript i Baseline ModifyingAbove bold upper Sigma With quotation dash Subscript i vertical bar i Baseline bold upper A Subscript i Superscript normal upper T Baseline plus bold upper B Subscript i Baseline bold upper Sigma Subscript f Baseline bold upper B Subscript i Superscript normal upper T Baseline right parenthesis
where lamda greater than or equals 1 is known as the fading factor which is assigned to be not smaller than 
1; ModifyingAbove bold upper Sigma With quotation dash Subscript i vertical bar i and ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i indicate the covariance matrix of the updated state vector at the 
previous time step and the covariance matrix of the one-step-ahead predicated state 
vector at the current time step in the fading memory ﬁltering, respectively; bold upper A Subscript i and

48
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
bold upper B Subscript i are given as Eqs. (2.54) and (2.55), respectively; b old upper Sigma Subscript f is the covariance matrix 
of the process noise. Equation (2.66) infers that the contribution of the past data is 
discounted by enlarging the covariance matrix of the one-step-ahead predicted state 
vector at the current time step by the factor lamda. 
On the other hand, given the measurement dataset up er D Subsc r i p t  i Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i Baseline EndSet, the one-
step-ahead predicted state vector in the fading memory ﬁltering can be obtained in 
the same fashion as in the EFK: 
Modifyi ngAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline equals bold upper A Subscript i Baseline ModifyingAbove bold italic y With quotation dash Subscript i vertical bar i Baseline plus bold italic delta Subscript i Modif ying
Above bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline equals bold upper A Subscript i Baseline ModifyingAbove bold italic y With quotation dash Subscript i vertical bar i Baseline plus bold italic delta Subscript i
where ModifyingAbove bold italic y With quotation dash Subscript i vertical bar i is the updated state vector at the previous time step in the fading memory 
ﬁltering and bold italic delta Subscript i can be obtained by using Eq. (2.56). When a new data point bold italic z Subscript i plus 1 is 
available, the updated state estimation ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i plus 1 in the fading memory ﬁltering can 
be obtained by using the KF (Kalman 1960): 
Modifying Above bold italic y With quotation dash Subscript i plus 1 vertical bar i plus 1 Baseline equals ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus h left parenthesis ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline right parenthesis right parenthesisModifyi ngAbov
e
 bold  it
alic y With quotation dash Subscript i plus 1 vertical bar i plus 1 Baseline equals ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus h left parenthesis ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline right parenthesis right parenthesis
Modify
in
gAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i plus 1 Baseline equals ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus h left parenthesis ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i Baseline right parenthesis right parenthesis
where the Kalman gain matrix bold upper G Subscript i plus 1 is given by: 
bold upper G Subscript i plus 1 Baseline equals ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper H ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n Baseline right parenthesis Superscript negative 1 bold up per
 G Subscript i plus 1 Baseline equals ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper H ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n Baseline right parenthesis Superscript negative 1bold up per  G 
Subs
cript i plus 1 Baseline equals ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline left parenthesis bold upper H ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n Baseline right parenthesis Superscript negative 1
where bold upper H is the observation matrix given by Eq. (2.64). In addition, the covariance 
matrix of the updated state vector can be obtained as follows:
Modifying A
b
ove bold  upper 
Sigma With quotation dash Subscript i plus 1 vertical bar i plus 1 Baseline equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline minus bold upper G Subscript i plus 1 Baseline bold upper H right parenthesis ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i
Modify
ingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i plus 1 Baseline equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline minus bold upper G Subscript i plus 1 Baseline bold upper H right parenthesis ModifyingAbove bold upper Sigma With quotation dash Subscript i plus 1 vertical bar i
Equations (2.66)–(2.70) comprise the essential formulae of the EKF with fading 
memory. It is obvious to see that the one-step-ahead predicted state vector ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i
and the updated state estimation ModifyingAbove bold italic y With quotation dash Subscript i plus 1 vertical bar i plus 1 in Eqs. (2.67) and (2.68) are  the same as  
Eqs. (2.60) and (2.62), respectively. Moreover, compared Eqs. (2.66), (2.69), and 
(2.70) with Eqs. (2.61), (2.65), and (2.63), only the covariance matrix of the one-
step-ahead predicted state vector in Eq. (2.66) is different from the one in Eq. (2.61). 
As a result, the fading-memory EKF is identical to the EKF, except the covariance 
matrix of the one-step-ahead predicted state estimation. 
It is noticed that the fading factor lamdain Eq. (2.66) increases the uncertainty in 
the state estimation and this results in diluting the contribution of the past data. If 
lamda equals 1, the EKF with fading memory is equivalent to the EKF. In most applications, 
the fading factor is taken to be slightly larger than 1. On the other hand, the choice 
of lamdais constrained by the following tradeoff. A larger value of lamdaimplies larger 
state estimation uncertainty in the ﬁlter and will result in more ﬂuctuating estimation 
results and smaller delay of identiﬁcation. A smaller value of lamdaimplies smaller state 
estimation uncertainty in the ﬁlter and will result in more stable estimation results and 
larger delay of identiﬁcation. In this book, we take the fading factor as the following 
form (Sorenson and Sacks 1971):

2.4 Extended Kalman Filter
49
lamda 
equals 2 Superscript StartFraction 2 Over upper N Super Subscript lamda Superscript EndFraction
la
mda equals 2 Superscript StartFraction 2 Over upper N Super Subscript lamda Superscript EndFraction
where upper N Subscript lamdais the prescribed number of time steps and it denotes the half-life of the 
contribution of a data point. In other words, the contribution of a data point will be 
decreased by half after upper N Subscript lamdatime steps. 
The procedure of the EKF with fading memory is listed in Fig. 2.12. In the  
following chapters, we will employ the EKF with fading memory as the funda-
mental algorithm to resolve some critical issues encountered in real-time system 
identiﬁcation. When ‘EKF’ is mentioned in the subsequent content, it implies the 
EKF algorithm with a given fading factor. 
Set initial values 
, 
 and 
a fading factor 
Compute the one-step-ahead predicated state vector 
by using Equation (2.67) 
Compute the covariance matrix 
by using Equation (2.66) 
Obtain the Kalman gain matrix 
by using Equation (2.69) 
Compute the updated state vector 
by using Equation (2.68) 
Compute the covariance matrix 
by using Equation (2.70) 
Fig. 2.12 Flow chart of the EKF with fading memory

50
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
2.5 
Application to State Estimation and Model Parameter 
Identiﬁcation 
2.5.1 
Single-Degree-of-Freedom System 
Consider a single-degree-of-freedom (SDOF) system and its equation of motion 
given as follows: 
ModifyingAbov exx With tw
oxdots l ef t p
arenthesis t right parenthesis plus 2 normal zeta omega Subscript n Baseline ModifyingAbove x With dot left parenthesis t right parenthesis plus omega Subscript n Superscript 2 Baseline x left parenthesis t right parenthesis equals f left parenthesis t right parenthesis
where ome ga Subscr ipt n Baseline equals 0.7071 r a d divided by normal s and normal zeta equals 0.01 are the natural frequency and damping ratio 
of the oscillator, respectively; bold italic f is the input signal and it is modeled as a zero-mean 
Gaussian white noise with spectral intensity up er S 0  equals  1.0 times 10 Superscript negative 4 Baseline normal m squared divided by normal s cubed. 
In order to employ the EKF to update the natural frequency and damping ratio of 
the oscillator recursively, the augmented state vector bold italic y left parenthesis t right parenthesisincluding the displacement, 
velocity, natural frequency and damping ratio is deﬁned as follows: 
bold italic y left p arenthes
is t right parenthesis identical to left bracket x left parenthesis t right parenthesis comma ModifyingAbove x With dot left parenthesis t right parenthesis comma omega Subscript n Baseline comma normal zeta right bracket Superscript normal upper T
The state-space representation of Eq. (2.72) can be written as follows: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma f left parenthesis t right parenthesis semicolon omega Subscript n Baseline comma normal zeta right parenthesis
Then, Eq. (2.74) can be expanded using Taylor series around the state bold italic y left parenthesis t right parenthesis equals bold italic y Superscript asterisk: 
ModifyingAbove bo ld italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAb
o
ve  bold
 i talic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAbo v
e bold italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
where the higher-order terms are neglected with the assumption that bold italic y is close to bold italic y Superscript bold asterisk. 
Equation (2.75) can be discretized to the following equation: 
bold itali c y  Subs cr ip t i 
plus 1 Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i Baseline plus bold upper B Subscript i Baseline bold italic f Subscript i Baseline plus bold italic delta Subscript i
where bol d italic y Subscript i Baseline identical to bold italic y left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesis, and normal upper Delta t is the sampling time step; bold upper A Subscript i and bold upper B Subscript i are 
given by: 
bol d upp
e
r A 
S
ubscript i Baseline equals exp left parenthesis bold upper A Subscript y Baseline normal upper Delta t right parenthesis
bol d upper B Subsc
ript i Baseline equals bold upper A Subscript y Baseline left parenthesis bold upper A Subscript i Baseline minus bold upper I 4 right parenthesis bold upper B Subscript y
where the matrix bold upper A Subscript y is given by:

2.5 Application to State Estimation and Model Parameter Identiﬁcation
51
Sta rt Layout 1st Row 1st Column bold upper A Subscript y 2nd Column equals StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i Baseline 2nd Row 1st Column Blank 2nd Column equals Start 4 By 4 Matrix 1st Row 1st Column 0 2nd Column 1 3rd Column 0 4th Column 0 2nd Row 1st Column minus omega Subscript n Superscript 2 Baseline 2nd Column minus 2 normal zeta omega Subscript n Baseline 3rd Column minus 2 omega Subscript n Baseline x left parenthesis t right parenthesis minus 2 normal zeta ModifyingAbove x With dot left parenthesis t right parenthesis 4th Column minus 2 omega Subscript n Baseline ModifyingAbove x With dot left parenthesis t right parenthesis 3rd Row 1st Column 0 2nd Column 0 3rd Column negative eta 4th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column negative eta EndMatrix EndLayout
Sta
rtLa
yout 
1s
t 
Ro
w 
1s
t
 
C
o
l
umn 
bo ld upp er AxSubscript y 2nd Colu mn equ
a
l
s 
St
a
r
t
Fra
ct
io
n 
p
artial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i Baseline 2nd Row 1st Column Blank 2nd Column equals Start 4 By 4 Matrix 1st Row 1st Column 0 2nd Column 1 3rd Column 0 4th Column 0 2nd Row 1st Column minus omega Subscript n Superscript 2 Baseline 2nd Column minus 2 normal zeta omega Subscript n Baseline 3rd Column minus 2 omega Subscript n Baseline x left parenthesis t right parenthesis minus 2 normal zeta ModifyingAbove x With dot left parenthesis t right parenthesis 4th Column minus 2 omega Subscript n Baseline ModifyingAbove x With dot left parenthesis t right parenthesis 3rd Row 1st Column 0 2nd Column 0 3rd Column negative eta 4th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column negative eta EndMatrix EndLayout
where etais a small positive number to avoid singularity when calculating the inverse 
of bold upper A Subscript y. The matrix bold upper B Subscript y is given by: 
Sta rt Layout 1st Row 1st Column bold upper B Subscript y 2nd Column equals StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i Baseline 2nd Row 1st Column Blank 2nd Column equals Start 1 By 1 Matrix 1st Row 0 comma 1 comma 0 comma 0 EndMatrix Superscript normal upper T EndLayout
Sta
rtLa
yout 
1
s
t Row 1st 
Col
umn bold upper B Subscript y 2nd Column equals StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Subscript i Baseline 2nd Row 1st Column Blank 2nd Column equals Start 1 By 1 Matrix 1st Row 0 comma 1 comma 0 comma 0 EndMatrix Superscript normal upper T EndLayout
bold italic delta Subscript i is the remainder term due to the local linear approximation: 
bol d italic  delt
a
 Subscr ipt i  B
a
seline equals bold upper A Subscript y Baseline left parenthesis bold upper A Subscript i Baseline minus bold upper I 4 right parenthesis left parenthesis g vertical bar Subscript bold italic y equals bold italic y Sub Subscript i Subscript Baseline minus bold upper A Subscript y Baseline bold italic y Subscript i Baseline right parenthesis
The displacement and velocity responses of the oscillator were measured for 200 s 
with sampling time interval nor mal uppe r Delta t equals 0.005 normal s periodThe observation equation was given by: 
bol d itali c z 
Subscript i Baseline equals bold upper H bold italic y Subscript i Baseline plus bold italic n Subscript i
where bold upper H is the observation matrix given by: 
bo l
d  u p p e
r  H e
q
uals Start 2 By 4 Matrix 1st Row 1st Column 1 2nd Column 0 3rd Column 0 4th Column 0 2nd Row 1st Column 0 2nd Column 1 3rd Column 0 4th Column 0 EndMatrix
and bold italic n Subscript i is the measurement noise modeled as zero-mean Gaussian i.i.d. process with 
the covariance matrix bold upper Sigma Subscript n. The rms of the measurement noise was taken as 5% rms 
of the corresponding noise-free response quantities. 
The EKF can then be performed based on Eqs. (2.76) and (2.82). The initial values 
of the updated state vector and its associated covariance matrix were taken as: 
bold italic y Subscri
pt 0 vertical bar 0 Baseline equals left bracket 0 comma 0 comma 1 comma 1 right bracket Superscript normal upper T
bold uppe
r Sigma Subscript 0 vertical bar 0 Baseline equals bold upper I 4
Note that the initial condition in Eq. (2.84) was purposely assigned with large error. 
In addition, the fading factor lamdawas taken as 2 Superscript 1 divided by 1000. In other words, the data half-life 
was 2000 time steps or 10 s. Figures 2.13 and 2.14 show the estimation results of the 
natural frequency and the damping ratio in time histories, respectively. The dotted 
lines represent the estimated values; the solid lines represent the actual values; the

52
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
dashed lines represent the bounds of the 99.7% credible intervals. The same line style 
will be used to the later ﬁgures. It is seen that at the beginning of the ﬁlter propagating 
stage, the estimated natural frequency and damping ratio were highly ﬂuctuating due 
to the inaccurate initial values and the large prior uncertainty. When more data points 
were acquired, the estimated values approached the corresponding actual values. 
The 99.7% credible intervals provided reasonable estimation uncertainties for the 
identiﬁcation results. 
Figure 2.15 shows the comparison between the actual and estimated displace-
ment responses. Figure 2.16 shows the comparison between the actual and estimated 
velocity responses. At the early stage of identiﬁcation, the estimated displacement 
and velocity responses deviated apparently from the corresponding actual values. 
After acquiring more data points, the actual and estimated responses of the oscillator 
were virtually on top of each other. As a result, it is concluded that the EKF can 
provide accurate estimation results for both states and model parameters.
Fig. 2.13 Estimation result of the natural frequency

2.5 Application to State Estimation and Model Parameter Identiﬁcation
53
Fig. 2.14 Estimation result of the damping ratio
2.5.2 
Three-Pier Bridge 
In this illustrative example, a bridge with three piers is considered (shown in 
Fig. 2.17). The bridge has pin supports at its two ends (i.e., the 1st and 17th nodes) 
and the bottom of the three piers (i.e., the 19th, 21st and 23rd nodes). It has a span 
of 256 m, and the length of its three piers is 16 m. The deck is divided into 16 
components (each with 16 m) and the pier is divided into 2 components (each with 
8 m). The deck has uniform box cross-section with area 1.56 normal m squared and weak axis 
moment of inertia 2.02 normal m squared. The three piers have the same circular cross-section 
with area 1.57 normal m squared. The mass density is 3780 k g divided by normal m cubed and the modulus of elasticity is 
2  upper G upper P a. As a result, the ﬁrst ﬁve natural frequencies are 0.47, 0.53, 0.70, 0.89 and 
1.33 Hz. The damping matrix is given by bo ld up per C equals alpha bold upper M plus beta bold upper K, where alpha equa ls 0.063 normal s Superscript negative 1 and 
beta equal s 0.006 normal s, so the damping ratios for the ﬁrst two modes are 2%. The components 
of the bridge were separated into seven groups and the stiffness matrix was given by 
bo l d u
pper  K equ
al s sigma summation Underscript n equals 1 Overscript 7 Endscripts bold italic theta Subscript k Superscript left parenthesis n right parenthesis Baseline bold upper K Superscript left parenthesis n right parenthesis. Speciﬁcally, one stiffness parameter was assigned to every four 
components on the deck, and one stiffness parameter was assigned to each pier.
The bridge was subjected to horizontal and vertical ground excitations: 
bo ld it
a
lic f l eft p
are
nthesis t right parenthesis equals Start 1 By 2 Matrix 1st Row 1st Column f Subscript h Baseline left parenthesis t right parenthesis comma 2nd Column f Subscript v Baseline left parenthesis t right parenthesis EndMatrix Superscript normal upper T

54
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.15 Comparison between the actual and estimated displacement responses
where f Subscript h and f Subscript vare the horizontal and vertical excitations and they were modeled as 
zero-mean Gaussian white noises with spectral intensity upp er S Subscri pt h Baseline equals 5.0 times 10 Superscript negative 5 Baseline normal m squared divided by normal s cubed and 
upp er S S ubscrip t v Baseline equals 3.2 times 10 Superscript negative 5 Baseline normal m squared divided by normal s cubed, respectively. The entire monitoring period was 200 s and 
the sampling frequency was 250 upper H z. The horizontal accelerations of the 5th, 13th, 
20th and 22nd nodes and the vertical accelerations of the 9th, 18th, 20th and 22nd 
nodes were observed, so the number of observed DOFs was upp er N 0 equals 8. The rms of the 
measurement noise was taken as 5% rms of the corresponding noise-free acceleration 
responses. In addition, the bridge was undamaged in the ﬁrst 100 s. Then, sudden 
damages occurred on the deck linking the 5th node to the 9th node and the middle 
pier at the 100th s and the 150th s, respectively. The fading factor lamdawas taken as 
2 Superscript 1 divided by 1000, which implied that the data half-life was 2000 time steps or 8 s. 
The EKF can be implemented to update the structural states and the uncertain 
model parameters. Figures 2.18 and 2.19 show the estimation results of the stiff-
ness parameters and damping coefﬁcients, respectively. The estimation results ﬂuc-
tuated severely at the beginning of the monitoring period since the initial values 
were far from the actual values and the number of measurements were quite limited. 
After more measured data points were available, the estimated values approached the 
actual values. Moreover, the credible intervals were sufﬁcient to provide the proper 
uncertainty quantiﬁcation results.

2.5 Application to State Estimation and Model Parameter Identiﬁcation
55
Fig. 2.16 Comparison between the actual and estimated velocity responses
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17 
18 
19 
20 
21 
22 
23 
a
b 
c 
Fig. 2.17 Bridge model
Figure 2.20 shows the comparison of the actual and estimated responses for some 
representative DOFs (a, b and c shown in Fig. 2.17) in the ﬁrst 5 s. Figure 2.21 
shows the comparison of the actual and estimated responses in the remaining time 
period. In particular, the DOF marked as a is the rotational DOF of the 4th node; the 
DOF marked as b is the horizontal DOF of the 8th node and the DOF marked as c is 
the vertical DOF of the 11th node. The 45-degree line in each subplot of Figs. 2.20 
and 2.21 provides the reference of perfect match. It is obvious that the data points 
corresponding to the ﬁrst 5 s sparsely scattered from the 45-degree line. Again, this 
was caused by that the initial values were far from the actual values and the number of 
measurements was limited at the early stage of identiﬁcation. The remaining points

56
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.18 Estimation result of the stiffness parameters

2.5 Application to State Estimation and Model Parameter Identiﬁcation
57
Fig. 2.19 Estimation result of the damping coefﬁcients
were distributed along the line of perfect match after more measurements became 
available. Thus, it demonstrates that the estimated structural responses using the EKF 
achieved high accuracy.
2.5.3 
Bouc-Wen Hysteresis System 
This application is concerned with a Bouc-Wen hysteresis system with up er N Subscript d Baseline equals10 
DOFs shown in Fig. 2.22. The Bouc-Wen model of hysteresis is one of the most 
commonly used hysteretic models to describe nonlinear hysteretic systems in struc-
tural engineering (Vaiana et al. 2018). The governing equation of this nonlinear 
system is given by:
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic r left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
Modifyin gAbo ve r With dot Subsc ript n Baselin
e left pa r e n t hes
is t right parenthesis equals ModifyingAbove x With dot Subscript n Baseline minus mu StartAbsoluteValue ModifyingAbove x With dot Subscript n Baseline EndAbsoluteValue StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta minus 1 Baseline r Subscript n Baseline minus kappa ModifyingAbove x With dot Subscript n Baseline StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta Baseline comma n equals 1 comma 2 comma ellipsis comma 10

58
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.20 Comparison between the actual and estimated responses of the representative DOFs in 
the ﬁrst 5 s

2.5 Application to State Estimation and Model Parameter Identiﬁcation
59
Fig. 2.21 Comparison between the actual and estimated responses of the representative DOFs in 
the remaining time period

60
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
c1 
Bouc-Wen 
c2 
Bouc-Wen 
c3 
Bouc-Wen 
c4 
Bouc-Wen 
c5 
Bouc-Wen 
c6 
Bouc-Wen 
c7 
Bouc-Wen 
c8 
Bouc-Wen 
c9 
Bouc-Wen 
c10 
Bouc-Wen 
Fig. 2.22 Bouc-Wen hysteresis system
where ModifyingAbove bold italic x With two dots left parenthesis t right parenthesis, ModifyingAbove bold italic x With dot left parenthesis t right parenthesisand bold italic r left parenthesis t right parenthesisare the acceleration, velocity, and restoring force vector, 
respectively; bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, 
respectively; the stiffness and damping matrix are parameterized with possibly time-
varying parameters bold italic theta Subscript k Baseline left parenthesis t right parenthesisand bold italic theta Subscript c Baseline left parenthesis t right parenthesis, respectively; bold italic f is the excitation applied to the 
system and bold upper T is the inﬂuence matrix associated with the excitation bold italic f . The stiffness 
matrix bold upper K is parameterized as follows: 
bo ld
 
u
pper
 K equ
al s sig
ma summation Underscript n equals 1 Overscript 6 Endscripts bold italic theta Subscript k Superscript left parenthesis n right parenthesis Baseline bold upper K Superscript left parenthesis n right parenthesis
where bold upper K Superscript left parenthesis n right parenthesisis the n t h substructural stiffness matrix given by: 
bold upper K 
S
upe rscri
pt le
f
t parenthesis 1 right parenthesis Baseline equals theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline Start 2 By 2 Matrix 1st Row 1st Column k 2nd Column bold 0 Subscript 1 times 9 Baseline 2nd Row 1st Column Blank 2nd Column bold 0 Subscript 9 times 10 EndMatrix
bold upper K 
Su
pe
rsc
ri
pt left pa
renthesis  
n  r igh
t p
a
renthesis 
Baseline eq
ua
ls 
th
et a Su b s c r ip
t k Superscript left parenthesis n right parenthesis Baseline Start 3 By 3 Matrix 1st Row 1st Column Blank 2nd Column bold 0 Subscript left parenthesis n minus 2 right parenthesis times 10 Baseline 3rd Column Blank 2nd Row 1st Column bold 0 Subscript 2 times left parenthesis n minus 2 right parenthesis Baseline 2nd Column k Start 2 By 2 Matrix 1st Row 1st Column 1 2nd Column negative 1 2nd Row 1st Column negative 1 2nd Column 1 EndMatrix 3rd Column bold 0 Subscript 2 times left parenthesis 10 minus n right parenthesis Baseline 3rd Row 1st Column Blank 2nd Column bold 0 Subscript left parenthesis 10 minus n right parenthesis times 10 Baseline 3rd Column Blank EndMatrix comma n equals 2 comma ellipsis comma 5
bold upper K 
Su
pe
rscri
pt lef
t 
parent
hesis
 6
 r
ight pa
re
nt
he si
s 
B
a
s
e
li n e e
qu
a
l
s
 t he t a S u
b s
c
r
ipt  k S u p
e
r
s
cri p t le
f
t
 
p
are n t
he
sis 6 r
ig
ht
 p
arent
hesis 
Ba
seline StartBinomialOrMatrix bold 0 Subscript 4 times 10 Baseline Choose bold 0 Subscript 6 times 4 Baseline k Start 6 By 6 Matrix 1st Row 1st Column 1 2nd Column negative 1 3rd Column 0 4th Column 0 5th Column 0 6th Column 0 2nd Row 1st Column negative 1 2nd Column 2 3rd Column negative 1 4th Column 0 5th Column 0 6th Column 0 3rd Row 1st Column 0 2nd Column negative 1 3rd Column 2 4th Column negative 1 5th Column 0 6th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column negative 1 4th Column 2 5th Column negative 1 6th Column 0 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column negative 1 5th Column 2 6th Column negative 1 6th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column 0 5th Column negative 1 6th Column 1 EndMatrix EndBinomialOrMatrix
bold  
i
talic 
th e t a Sub
sc r i pt k 
Ba s e line 
eq u a ls le
ft  b racke
t
 theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 6 right parenthesis Baseline right bracket Superscript normal upper T
is used to interpret the integrity of the system. 
The actual stiffness of each spring was taken as k eq uals 2000 normal upper N divided by normal m. The Rayleigh 
damping model was used so the damping matrix was given by bo ld up per C equals alpha bold upper M plus beta bold upper K. The  
damping coefﬁcients were given by al pha equa ls 0.100 normal s Superscript negative 1 and be ta equal s 7.526  times 10 Superscript negative 4 Baseline normal s. The

2.5 Application to State Estimation and Model Parameter Identiﬁcation
61
characteristic parameters of the Bouc-Wen system were taken to be mu equals  1000 normal s squared divided by normal m squared, 
kappa equ als 1500 normal s squared divided by normal m squared and eta equals 2 period
The hysteresis system was subjected to a zero-mean Gaussian white noise with 
spectral intensity nor mal up per S 0  equals 5.0 times 10 Superscript negative 6 Baseline normal m squared divided by normal s cubed. The entire monitoring period was 300 s 
and the sampling time interval was nor mal upper Delta t equals 0.002 s. The measurements included the 
velocity responses of the 1st, 3rd, 5th, 8th and 10th DOFs. The measurement noise 
was modeled as zero-mean Gaussian i.i.d. process and the rms of the measurement 
noise was taken as 5% rms of the corresponding noise-free response quantities. In 
addition, the system was undamaged in the ﬁrst 150 normal s. Then, sudden damages with 
10% and 5% stiffness reduction occurred in the 1st and 2nd nonlinear springs at 
t eq uals  100 normal s and t eq uals  200 normal s, respectively. The fading factor lamdawas taken as 2 Superscript 1 divided by 1000, 
which implied that the data half-life was 2000 time steps or 4 s. 
The augmented state vector was deﬁned as follows: 
bold i
t
alic y l eft parenthesis t right  pa
renthesis identical to Start 1 By 4 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T Baseline comma 3rd Column bold italic r left parenthesis t right parenthesis Superscript normal upper T Baseline comma 4th Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T
where the uncertain model parameter vector bold italic theta left parenthesis t right parenthesiswas given by: 
bold it
a
lic 
th e ta  l ef t p
are
nthesis t right parenthesis equals Start 1 By 6 Matrix 1st Row 1st Column bold italic theta Subscript k Superscript normal upper T Baseline comma 2nd Column alpha comma 3rd Column beta comma 4th Column mu comma 5th Column kappa comma 6th Column eta EndMatrix Superscript normal upper T
The EKF can then be performed to update the responses and the uncertain model 
parameter vector of the hysteresis system. The estimation results of the stiffness 
parameters are shown in Fig. 2.23. It is seen that at the early stage of identiﬁcation, 
the estimated stiffness parameters ﬂuctuated violently since the initial values were 
far from the actual values. After the ﬁltering gained more measured data points, 
the estimated values approached the actual values and they were within the 99.7% 
credible intervals. The abrupt changes of the stiffness parameters could be tracked 
promptly. It is noticed that there was small time delay in tracking the abrupt changes 
of theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 2 right parenthesis , because the estimation results were obtained based on the previous 
and current time steps. Nevertheless, the time delay was acceptably small for the 
sudden changes of the stiffness parameters. Figure 2.24 shows the estimation results 
of the damping coefﬁcients and the characteristic parameters of the hysteresis system. 
Again, the estimated values severely ﬂuctuated at the beginning of the identiﬁcation 
period. With the accumulation of more data points, it is seen that the estimated values 
showed good agreement with the corresponding actual values and the associated 
estimation uncertainties could be well represented by the 99.7% credible intervals. 
As a result, it indicates that the EKF could achieve accurate estimation results for 
the model parameters of the Bouc-Wen hysteresis system.
On the other hand, Fig. 2.25 shows the actual versus the estimated values of the 
restoring forces of the ﬁrst 10 s for the 1st, 2nd, 5th and 10th nonlinear springs. 
Figure 2.26 shows the actual versus the estimated values of the restoring forces of 
the remaining time period for the 1st, 2nd, 5th and 10th nonlinear springs. The 45-
degree line in each subplot of Figs. 2.25 and 2.26 provides the reference of perfect 
match. In the ﬁrst 10 s, the estimated restoring forces in each subplot of Fig. 2.25

62
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.23 Estimation results of the stiffness parameters
deviated signiﬁcantly from the 45-degree line, because the initial values of the state 
vector were randomly selected from reasonable ranges. Moreover, the initial prior 
uncertainty was assigned to be large enough to cover a broad range of reasonable 
values of the state vector. After t equal s 10 normal s, the estimated restoring forces in each subplot 
of Fig. 2.26 showed good agreement with the actual restoring forces since the ﬁlter 
acquired more measured data points. As a result, it demonstrates that the EKF could 
provide accurate estimation results for both responses and model parameters.

2.6 Application to a Field Inspired Test Case: The Canton Tower
63
Fig. 2.24 Estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen hysteresis system
2.6 
Application to a Field Inspired Test Case: The Canton 
Tower 
2.6.1 
Background Information 
In this section, a SHM benchmark study is presented based on the full-scale measure-
ments of the Canton Tower by using the EKF. The Canton Tower located in 
Guangzhou, China, is a supertall tube-in-tube structure with a total height of 610 m. 
It consists of a 454 m high main tower and a 156 m high antenna mast (Ni et al.

64
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.25 Estimation results of the restoring forces of the 1st, 2nd, 5th and 10th nonlinear springs 
in the ﬁrst 10 s
2009, 2012; Chen et al. 2011). In addition, there are 37 ﬂoors connecting the inner 
tube and the outer tube. 
The reduced-order ﬁnite element model of the Canton Tower proposed in Chen 
et al. (2011) was utilized for SHM purpose. The schematic diagram of the reduced-
order ﬁnite element model for the Canton Tower is shown in Fig. 2.27. The entire 
structure has 37 segments and each segment is modeled as a linear elastic beam 
element. As a result, the tower can be modeled as a 3D cantilever beam with 37 
nodes. In addition, the axial deformation of each beam element in the reduced-order 
model is neglected so each node in Fig. 2.27 has ﬁve DOFs. Speciﬁcally, there are 
two horizontal translational DOFs and three rotational DOFs. Therefore, the total 
number of DOFs for the reduced-order ﬁnite element model of the Canton tower is 
185.
Twenty uni-axial accelerometers were deployed at eight locations of the tower to 
record the structural acceleration responses. The detailed illustration on the modular 
design of the SHM system devised for the Canton Tower can be found in Ni et al. 
(2009). In this section, we investigate the capability of the EKF in state and model

2.6 Application to a Field Inspired Test Case: The Canton Tower
65
Fig. 2.26 Estimation results of the restoring forces of the 1st, 2nd, 5th and 10th nonlinear springs 
in the remaining time period
parameter estimation for visualization of a real case test example for higher dimen-
sionality, so we utilized the synthetic acceleration measurements under ground 
excitation to implement online updating of the Canton tower model. 
The mass matrix was assumed to be ﬁxed and the stiffness matrix was parame-
terized with two stiffness parameters theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 2 right parenthesis . Speciﬁcally, theta 
Subscript k Superscript left parenthesis 1 right parenthesis
referred to the 
translational effect in the element stiffness matrix and theta 
Subscript k Superscript left parenthesis 2 right parenthesis
referred to the bending 
and rotational effect in the element stiffness matrix. Therefore, the parameterization 
for a typical element stiffness matrix can be expressed as follows:

66
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.27 The reduced-order 
ﬁnite element model of the 
Canton Tower
1 
2 
3 
35 
36 
37 
x 
y
z 
Vx 
Vy 
Mx 
Mz 
My 
bold upper 
K 
Sup
er
scr
ip
t e
 B
ase
lin
e 
lef
t 
par
en
th
es
is bol
d 
ita
lic theta 
Su
bsc
ript  k Bas
el
ine
 ri
ght pa
re
nth
esi
s equa
ls
KSt
art 10 By 
10
KMa
trix  1st R
ow
K1s
t Co lumn t
he
ta 
Subs cript 
k 
Sup
ersc ript l
ef
t p
arent
hesis 
1 
rig
ht p arenth
es
is 
Bas
eline 
no
rma
l u
pper K
 S
ubs
crip t 1 co
m
a 1
 Sup erscri
pt
Ke 
Base line 2
nd
KCo
lumn  theta
 S
ubs
crip t k Su
pe
rsc
ript 
left p
ar
ent
hes
is 1 r
ig
ht 
par
enthes
is
KBa
seli ne nor
ma
l u
pper  K Sub
sc
rip
t 1 comma 
2 
Sup
ersc ript e
 B
ase
line  3rd C
ol
umn
 thet
a Subs
cr
ipt
 k 
Supers
cr
ipt
 lef t pare
nt
he
si
s 2 right 
pa
ren
thes is Bas
el
ine
 nor mal up
pe
r K
 Sub script
 1
Kco
mma 3
 Super
sc
rip
t e Baseli
ne
K4t
h Co lumn t
he
ta 
Subs cript 
k 
Sup
ersc ript l
ef
t p
aren thesis
 2
Kri
ght p
arenth
es
is 
Base line n
or
mal
 up er K S
ub
scr
ipt 1 comm
a 
4 S
uper script
 e
KBa
selin
e 5th 
Co
lum
n th eta Su
bs
cri
pt k  Super
sc
rip
t le ft par
en
the
sis 2
 right pa
renthe
si
s B
asel ine no
rm
al 
uppe r K Su
bs
cri
pt 1 
comma 
5 
Sup
ersc ript e
 B
ase
line 
6th Co
lu
mn 
theta 
Su
bsc
ri
pt 
k 
Sup
er
scr
ipt
 l
eft
 p
are
nt
he
si
s 1 right parenthesis Baseline normal upper K Subscript 1 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 1 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 1 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 1 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 1 comma 10 Superscript e Baseline 2nd Row 1st Column Blank 2nd Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 2 comma 2 Superscript e Baseline 3rd Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 3 Superscript e Baseline 4th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 4 Superscript e Baseline 5th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 5 Superscript e Baseline 6th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 2 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 2 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 2 comma 10 Superscript e Baseline 3rd Row 1st Column Blank 2nd Column Blank 3rd Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 3 Superscript e Baseline 4th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 4 Superscript e Baseline 5th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 5 Superscript e Baseline 6th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 3 comma 10 Superscript e Baseline 4th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 4 Superscript e Baseline 5th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 5 Superscript e Baseline 6th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 4 comma 10 Superscript e Baseline 5th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column Blank 5th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 5 Superscript e Baseline 6th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 5 comma 10 Superscript e Baseline 6th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 6 comma 6 Superscript e Baseline 7th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 6 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 6 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 6 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 6 comma 10 Superscript e Baseline 7th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline normal upper K Subscript 7 comma 7 Superscript e Baseline 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 7 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 7 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 7 comma 10 Superscript e Baseline 8th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column s y m m e t r i c 5th Column Blank 6th Column Blank 7th Column Blank 8th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 8 comma 8 Superscript e Baseline 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 8 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 8 comma 10 Superscript e Baseline 9th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 8th Column Blank 9th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 9 comma 9 Superscript e Baseline 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 9 comma 10 Superscript e Baseline 10th Row 1st Column Blank 2nd Column Blank 3rd Column Blank 4th Column Blank 5th Column Blank 6th Column Blank 7th Column Blank 8th Column Blank 9th Column Blank 10th Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline normal upper K Subscript 10 comma 10 Superscript e EndMatrix
where nor
mal upper K Subscript m comma n Superscript e is the left parenthesis m comma n right parenthesis t h element of the nominal element stiffness matrix. 
The monitoring period was 50 s with the sampling time step 0.002 s. The ground 
excitation was modeled as a zero-mean Gaussian white noise with the spectral density 
5.0 times 1 0 Superscript negative 3 Baseline normal m squared divided by normal s cubed. The rms of the measurement noise was taken as 5% rms of the 
corresponding noise-free acceleration responses. The fading factor lamdawas taken as 
2 Superscript 1 divided by 1000, which implied that the data half-life was 4 s.

2.6 Application to a Field Inspired Test Case: The Canton Tower
67
2.6.2 
Identiﬁcation of Structural States and Model 
Parameters 
The augmented state vector is deﬁned as follows: 
bol d
 
ita
li c y Su
bs cript 
i
 Ba
seline identical to Start 1 By 3 Matrix 1st Row 1st Column bold italic x Subscript i Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot Subscript i Superscript normal upper T Baseline comma 3rd Column bold italic theta Subscript i Superscript normal upper T EndMatrix Superscript normal upper T
where bol d italic x Subscript i Baseline element of double struck upper R Superscript 185, Modi fyingAbove bold italic x With dot Subscript i Baseline element of double struck upper R Superscript 185 and bol d italic theta Subscript i Baseline element of double struck upper R squared indicate the displacement, velocity and the 
stiffness parameter vectors at the i t h time step, respectively. 
Then, EKF can be performed to update the displacement, velocity and stiffness 
parameters recursively. Figure 2.28 shows the identiﬁcation results of the stiffness 
parameters. The dotted lines represent the estimated values; the solid lines represent 
the nominal values; and the dashed lines represent the bounds of the 99.7% credible 
intervals. It is seen that at the early stage of identiﬁcation, the estimation results of the 
stiffness parameters ﬂuctuated severely due to the inaccurate initial values and large 
prior uncertainty. When the EKF gained more data points from the accelerometers, 
it is observed that a reasonable agreement could be found between the nominal 
and estimated values. In addition, the 99.7% credible intervals offered reasonable 
uncertainty levels for the estimated stiffness parameters. 
Fig. 2.28 Identiﬁcation results of the stiffness parameters

68
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
Fig. 2.29 Comparison of the nominal and estimated displacement responses
On the other hand, Figs. 2.29 and 2.30 present the nominal displacement and 
velocity responses versus the corresponding estimated values in time histories, 
respectively. The dotted lines represent the estimated values and the solid lines 
represent the nominal values. It is seen that the estimated values coincided well 
with the nominal values, so accurate estimation results for displacement and velocity 
responses could be achieved by the EKF. As a result, it is concluded that the EKF is 
capable for online tracking the optimal values of the states and model parameters. 
2.7 
Extended Readings 
In Sects. 2.2 and 2.4, the standard KF and the EKF are introduced by using the Bayes’ 
theorem. The standard KF is a special case of the Bayesian ﬁltering. In particular, the 
standard KF is the closed-form solution to the Bayesian ﬁltering equations for the 
ﬁltering models, where the dynamical model and the observation model are linear and 
Gaussian. In this section, we will brieﬂy introduce the Bayesian ﬁltering equations 
in a more general way (Jazwinski 1970).

2.7 Extended Readings
69
Fig. 2.30 Comparison of the nominal and estimated velocity responses
Consider a general discrete-time linear/nonlinear dynamical system described by 
the following equation: 
bold ita
l
ic y Su bscrip
t
 i plus 1 Baseline equals script upper G left parenthesis bold italic y Subscript i Baseline comma bold italic f Subscript i Baseline semicolon bold italic theta Subscript i Baseline right parenthesis
where i indicates the time index; bold italic y Subscript i is the state vector of the dynamical system; 
bold italic theta Subscript i is the model parameter vector characterizing the dynamical system; bo ld italic f Subscript i is the 
input vector of the system and script upper G left parenthesis dot right parenthesisdeﬁnes the governing equation of the underlying 
dynamical system. 
Then, it is assumed that the discrete-time observation equation of the dynamical 
system in Eq. (2.97) can be expressed as follows: 
bol d i
t
al
i
c z 
Subscript i Baseline equals h left parenthesis bold italic y Subscript i Baseline right parenthesis plus bold italic n Subscript i
where bold italic z Subscript i is the observed vector at the i t h time step; bold italic n Subscript i is the measurement noise 
vector modeled as zero-mean Gaussian i.i.d. process and h left parenthesis dot right parenthesisdeﬁnes the observa-
tion quantities. In addition, it is assumed that the measurement noise is statistically 
independent to the input.

70
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
In the Bayesian ﬁltering technique, the actual state vector is assumed to be an 
observed Markov process, so this implies that the actual state vector bold italic y Subscript i at the i t h
time step given the previous state vector bold italic y Subscript i minus 1 at the lef t parenthesis i minus 1 right parenthesis t h time step is independent 
of all earlier states: 
p
 
le
ft parent h e s i s bol
d
 it
a
li
c y Su
b
script i Baseline vertical bar bold italic y 0 comma bold italic y 1 comma ellipsis comma bold italic y Subscript i minus 1 Baseline right parenthesis equals p left parenthesis bold italic y Subscript i Baseline vertical bar bold italic y Subscript i minus 1 Baseline right parenthesis
In addition, the measurement vector is the observations of a hidden Markov model. 
Therefore, the measurement bold italic z Subscript i at the i t h time step is dependent only upon the current 
state bold italic y Subscript i and is conditionally independent of all other states given the current state: 
p
 
left parent h e s i s bold it
a
lic
 
z Sub
s
cript i Baseline vertical bar bold italic y 0 comma bold italic y 1 comma ellipsis comma bold italic y Subscript i minus 1 Baseline comma bold italic y Subscript i Baseline right parenthesis equals p left parenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline right parenthesis
Based on Eqs. (2.99) and (2.100), the PDF over all states
S
tartSet  b o l d italic 
y 0 comma bold italic y 1 comma ellipsis comma bold italic y Subscript i minus 1 Baseline comma bold italic y Subscript i Baseline EndSet
of the hidden Markov model can be obtained as follows: 
p
 
left pa r e n t hesis bold italic y  0  c omma bold
 
ita
l
ic
 
y 1
 com
m
a
 e
llipsi
s
 
c
omma b
o
ld italic y Subscript i minus 1 Baseline comma bold italic y Subscript i Baseline comma bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i minus 1 Baseline comma bold italic z Subscript i Baseline right parenthesis equals p left parenthesis bold italic y 0 right parenthesis product Underscript n equals 1 Overscript i Endscripts p left parenthesis bold italic y Subscript n Baseline vertical bar bold italic y Subscript n minus 1 Baseline right parenthesis p left parenthesis bold italic z Subscript n Baseline vertical bar bold italic y Subscript n Baseline right parenthesis
However, in order to realize real-time implementation, we need to calculate the 
PDF p
 
le
ft p
arenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i Baseline right parenthesis
associated with the current state conditioned on the measurements up 
to the current time step. This PDF can be obtained by marginalizing out the previous 
states and dividing by the PDF of the measurement dataset (Masreliez and Martin 
1977). First, the conditional PDF associated with the one-step-ahead predicted state 
vector is the integral of the products of the PDF associated with state transition from 
the lef t parenthesis i minus 1 right parenthesis t h time step to the i t h time step and the PDF associated with the previous 
state over all possible bold italic y Subscript i minus 1: 
S
t
ar
tLayou
t
 
1
s
t
 Row 1st 
Column
 
p left 
p
a
r
e
nt
hesis bold i
t
a
l
ic y
 Subsc
r
ip t i B
a
s
e
l
in
e vert
i
c
a
l ba
r uppe
r
 D  Sub
script i minus 1 Baseline right parenthesis 2nd Column equals integral p left parenthesis bold italic y Subscript i Baseline comma bold italic y Subscript i minus 1 Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i minus 1 Baseline 2nd Row 1st Column Blank 2nd Column equals integral p left parenthesis bold italic y Subscript i Baseline vertical bar bold italic y Subscript i minus 1 Baseline comma upper D Subscript i minus 1 Baseline right parenthesis p left parenthesis bold italic y Subscript i minus 1 Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i minus 1 Baseline 3rd Row 1st Column Blank 2nd Column equals integral p left parenthesis bold italic y Subscript i Baseline vertical bar bold italic y Subscript i minus 1 Baseline right parenthesis p left parenthesis bold italic y Subscript i minus 1 Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i minus 1 Baseline EndLayout
where the PDF p
 
le
ft par
enthesis bold italic y Subscript i Baseline vertical bar bold italic y Subscript i minus 1 Baseline right parenthesis
can be easily obtained based on the dynamical system 
equation in Eq. (2.97). The PDF p
 
le
ft par
enthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis
is a priori PDF of bold italic y Subscript i. Given the measure-
ment dataset up er D Subsc r i p t  i Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i minus 1 Baseline comma bold italic z Subscript i Baseline EndSetup to the i t h time step, the conditional PDF 
of the updated state vector can be obtained by using the Bayes’ theorem: 
p
 
le
ft p
a
re n
t
hesis 
b
o
l
d 
italic
 y Subscript i Baseline vertical bar upper D Subscript i Baseline right parenthesis equals StartFraction p left parenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline right parenthesis p left parenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis Over p left parenthesis bold italic z Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis EndFraction
p left paren
thesis bold italic y Subscript i Baseline vertical bar upper D Subscript i Baseline right parenthesis equals StartFraction p left parenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline right parenthesis p left parenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis Over p left parenthesis bold italic z Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis EndFraction

2.8 Concluding Remarks
71
where the denominator p left parenthesis bold italic z Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesisis a normalizing constant and it can be obtained 
in the similar fashion with Eq. (2.102): 
StartLayout 1
s
t
 
Row 1st
 Colum
n
 p  le
f
t
 
p
arenthesis bo
l
d
 
it
alic z
 
Su bsc
r
i
p
t
 i Bas
e
l
i
ne
 verti
c
al  b
ar upper D Subscript i minus 1 Baseline right parenthesis 2nd Column equals integral p left parenthesis bold italic z Subscript i Baseline comma bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i Baseline 2nd Row 1st Column Blank 2nd Column equals integral p left parenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline comma upper D Subscript i minus 1 Baseline right parenthesis p left parenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i Baseline 3rd Row 1st Column Blank 2nd Column equals integral p left parenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline right parenthesis p left parenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i minus 1 Baseline right parenthesis d bold italic y Subscript i Baseline EndLayout
On the other hand, the PDF p
 
left p
arenthesis bold italic z Subscript i Baseline vertical bar bold italic y Subscript i Baseline right parenthesis
can be obtained based on the measurement 
equation in Eq. (2.98) and the PDF of the measurement noise bold italic n Subscript i. 
As a result, the PDF p
 
le
ft p
arenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i Baseline right parenthesis
of the updated state vector can be readily obtained 
based on Eqs. (2.97), (2.98), (2.102), and (2.103). The PDF p
 
le
ft p
arenthesis bold italic y Subscript i Baseline vertical bar upper D Subscript i Baseline right parenthesis
is a posteriori 
PDF of bold italic y Subscript i. 
The Bayesian ﬁltering can be implemented in an online manner by utilizing 
Eq. (2.102) to calculate the priori PDF and Eq. (2.103) to calculate the posterior PDF 
recursively. It is noteworthy that analytical solutions for Eqs. (2.102) and (2.103) are  
available for a few cases. Speciﬁcally, when the system equation in Eq. (2.97) and the 
measurement equation in Eq. (2.98) are linear and the noise terms are independent 
and Gaussian, analytical solutions of Eqs. (2.102) and (2.103) can be represented 
by the standard KF. As a result, the derivation of the Bayesian ﬁltering proves that 
the standard Kalman ﬁlter is the optimal ﬁlter, when the system and measurement 
models are linear and associated with Gaussian noise terms. 
2.8 
Concluding Remarks 
This chapter introduced the standard Kalman ﬁlter (KF) and the extended Kalman 
ﬁlter (EKF). KF and its variants have been widely applied in numerous technological 
ﬁelds and they are considered as a popular tool. The detailed derivations of the 
standard KF and EKF are presented from a Bayesian perspective. The standard 
Kalman ﬁlter keeps tracking the estimated states of the system and the variances 
of the estimation results recursively, so it provides not only the state estimation 
but also the associated uncertainty in a real-time manner. Applications of the state 
estimation and the state-parameter estimation by using the standard KF and the 
EKF are presented, respectively. The results show that the standard KF and EKF 
have powerful tracking capabilities for the states in a dynamical system and they 
can achieve reasonable uncertainty quantiﬁcation results for the estimated states. 
However, there are some critical challenges in the applications of the standard KF 
and its variants. For example, the statistical information of the process noise and the 
measurement noise in the KF and its variants is required. In addition, it is well-known 
that the KF is sensitive to asynchronism among different measurement channels. In

72
2
System Identiﬁcation Using Kalman Filter and Extended Kalman Filter
the following chapters, we will introduce some recently developed methodologies for 
resolving those critical issues encountered in real-time system identiﬁcation using 
the EKF. 
References 
Al-Mohy AH, Higham NJ (2010) A new scaling and squaring algorithm for the matrix exponential. 
SIAM J Matrix Anal Appl 31(3):970–989 
Andrieu C, Doucet A, Singh SS, Tadic VB (2004) Particle methods for change detection, system 
identiﬁcation, and control. Proc IEEE 92(3):423–438 
Chatzi EN, Smyth AW (2009) The unscented Kalman ﬁlter and particle ﬁlter methods for nonlinear 
structural system identiﬁcation with non-collocated heterogeneous sensing. Struct Control Health 
Monit 16(1):99–123 
Chen WH, Lu ZR, Lin W, Chen SH, Ni YQ, Xia Y, Liao WY (2011) Theoretical and experimental 
modal analysis of the Guangzhou New TV Tower. Eng Struct 33(12):3628–3646 
Galka A, Yamashita O, Ozaki T, Biscay R, Valdés-Sosa P (2004) A solution to the dynamical inverse 
problem of EEG generation using spatiotemporal Kalman ﬁltering. Neuroimage 23(2):435–453 
Grewal MS, Andrews AP (2010) Applications of Kalman ﬁltering in aerospace 1960 to the present. 
IEEE Control Syst Mag 30(3):69–78 
Henderson HV, Searle SR (1981) On deriving the inverse of a sum of matrices. SIAM Rev 23(1):53– 
60 
Hoshiya M, Saito E (1984) Structural identiﬁcation by extended Kalman ﬁlter. J Eng Mech 
110(12):1757–1770 
Jazwinski AH (1970) Stochastic processes and ﬁltering theory. Academic Press 
Kalman RE (1960) A new approach to linear ﬁltering and prediction problems. J Fluids Eng 
82(1):35–45 
Kendoul F (2012) Survey of advances in guidance, navigation, and control of unmanned rotorcraft 
systems. J Field Robot 29(2):315–378 
Koh CG, See LM (1994) Identiﬁcation and uncertainty estimation of structural parameters. J Eng 
Mech 120(6):1219–1236 
Kreucher C, Kastella K, Hero AO (2005) Multitarget tracking using the joint multitarget probability 
density. IEEE Trans Aerosp Electron Syst 41(4):1396–1414 
Lamus C, Hämäläinen MS, Temereanca S, Brown EN, Purdon PL (2012) A spatiotemporal dynamic 
distributed solution to the MEG inverse problem. Neuroimage 63(2):894–909 
Masreliez C, Martin R (1977) Robust Bayesian estimation for the linear model and robustifying the 
Kalman ﬁlter. IEEE Trans Autom Control 22(3):361–371 
Musicki D, La Scala BF, Evans RJ (2007) Integrated track splitting ﬁlter-efﬁcient multi-scan single 
target tracking in clutter. IEEE Trans Aerosp Electron Syst 43(4):1409–1425 
Nesline FW, Zarchan P (1981) A new look at classical vs modern homing missile guidance. J Guid 
Control 4(1):78–85 
Ni YQ, Xia Y, Liao WY, Ko JM (2009) Technology innovation in developing the structural health 
monitoring system for Guangzhou New TV Tower. Struct Control Health Monit 16(1):73–98 
Ni YQ, Xia Y, Lin W, Chen WH, Ko JM (2012) SHM benchmark for high-rise structures: a reduced-
order ﬁnite element model and ﬁeld measurement data. Smart Struct Syst 10(4–5):411–426 
Pan S, Su H, Chu J, Wang H (2010) Applying a novel extended Kalman ﬁlter to missile-target 
interception with APN guidance law: a benchmark case study. Control Eng Pract 18(2):159–167 
Qi H, Moore JB (2002) Direct Kalman ﬁltering approach for GPS/INS integration. IEEE Trans 
Aerosp Electron Syst 38(2):687–693 
Siouris GM (2004) Missile guidance and control systems. Springer Science & Business Media 
Sorenson HW, Sacks JE (1971) Recursive fading memory ﬁltering. Inf Sci 3(2):101–119

References
73
Vaiana N, Sessa S, Marmo F, Rosati L (2018) A class of uniaxial phenomenological models for simu-
lating hysteretic phenomena in rate-independent mechanical systems and materials. Nonlinear 
Dyn 93(3):1647–1669 
Wang W, Liu ZY, Xie RR (2006) Quadratic extended Kalman ﬁlter approach for GPS/INS 
integration. Aerosp Sci Technol 10(8):709–713 
Xu H, Wang J, Zhan X (2012) Autonomous broadcast ephemeris improvement for GNSS using 
inter-satellite ranging measurements. Adv Space Res 49(6):1034–1044 
Zarchan P, Musoff H (2000) Fundamentals of Kalman ﬁltering: a practical approach. American 
Institute of Aeronautics and Astronautics Incorporated

Chapter 3 
Real-Time Updating of Noise Parameters 
for System Identiﬁcation 
Abstract This chapter presents the algorithm for real-time updating of the noise 
covariance matrices in the extended Kalman ﬁlter. This content is motivated from 
practical applications, in which the noise statistics of the Kalman ﬁlter or its variants 
are usually not known a priori. To address this issue, a Bayesian probabilistic algo-
rithm is developed to estimate the noise parameters which are utilized to parameterize 
the noise covariance matrices in the extended Kalman ﬁlter. A computationally efﬁ-
cient algorithm is then introduced to resolve the optimization problem formulated by 
using the Bayesian inference. The proposed method not only estimates the optimal 
noise parameters but also quantiﬁes the associated estimation uncertainty in a real-
time manner. This method does not impose any stationarity condition of the process 
noise and measurement noise. By removing the stationarity constraint in the extended 
Kalman ﬁlter, the proposed method enhances the applicability of the real-time system 
identiﬁcation algorithm for nonstationary circumstances generally encountered in 
practice. Examples using stationary/nonstationary response of linear/nonlinear time-
varying dynamical systems are presented to illustrate the practical aspects in real-time 
system identiﬁcation. 
Keywords Bayesian inference · Extended Kalman ﬁlter · Measurement noise ·
Noise covariance matrices · Nonstationary response · Process noise 
3.1 
Introduction 
The Kalman ﬁlter (KF) and extended Kalman ﬁlter (EKF) introduced in Chap. 2 
are attractive choices for state tracking, system identiﬁcation and control design 
for dynamical systems. However, when a KF or an EKF is implemented on a real 
system, it may not work. One of the primary causes for the failure of KF and EKF is 
the misspeciﬁcation of the covariance matrices of the process noise and the measure-
ment noise. Kalman (1960) indicated the problem of unknown noise statistical prop-
erties and the need of a method to tackle it. As a result, the performance of KF and 
EKF depends on the assignment of the covariance matrices of the process noise and 
measurement noise. Hence, in practice, the process noise and measurement noise 
covariance matrices of the KF and EKF are usually assumed known (Hoshiya and
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_3 
75

76
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
k1 
c1 
k2 
c2 
m1 
k3 
c3 
k4 
c4 
k5 
c5 
m2
m3
m4
m5
f (t) 
Fig. 3.1 Chain-like system 
Saito 1984; Koh and See 1994; Lin and Zhang 1994). However, in most practical 
situations, this assumption is difﬁcult to fulﬁll. Therefore, an ad hoc trial-and-error 
manner is often used to manually tune the covariance matrices of the process noise 
and the measurement noise (Azam et al. 2015). 
On the other hand, the covariance matrix of the ﬁltered state vector can be obtained 
by using the EKF. Note that the model parameters of the underlying dynamical system 
are included in the augmented state vector for the implementation of the EKF. There-
fore, a submatrix of the covariance matrix of the ﬁltered state vector, corresponding to 
the model parameters entries in the augmented state vector, represents the posterior 
uncertainty of the model parameters. In other words, the EKF allows for uncer-
tainty quantiﬁcation, in principle, for the updated model parameters. However, we 
will demonstrate that this can be realized only when the aforementioned covariance 
matrices can be accurately assigned or estimated. This justiﬁes the importance of the 
noise parameters estimation algorithm presented in this chapter. 
Example. Adhoc selection of the noise covariance matrices in EKF. 
Consider a 5-degree-of-freedom chain-like system depicted in Fig. 3.1. The  mass  
and spring constants are taken to be m 1  equa ls m 2 equ als m  3 eq ua ls m 4 equals m 5 equals 1.0 k gand 
k 1  equa ls k 2 equ als k  3 equa ls k 4 equals k 5 equals 5000 k upper N divided by normal m. The system was subjected to a stationary 
excitation bold italic f applied on the 5th degree of freedom (DOF) and this excitation is 
modeled as Gaussian with zero mean and covariance matrix b old upper Sigma Subscript f . The governing 
equation of the system is: 
bold upper M ModifyingAbove bo ld 
italic x With two dots left parenthesis t right parenthesis plus bold upper C ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bo ld italic x equals left bracket x 1 comma x 3 comma x 3 comma x 4 comma x 5 right bracket Superscript normal upper T is the nodal displacement vector; bo ld upper M equals m 1 bold upper I 5 is the 
mass matrix with bold upper I 5 being the 5 times 5 identity matrix; bold upper K is the stiffness matrix: 
bo ld uppe
r 
K equal
s th
et
a
 
S
ub s cri p
t  
k Ba s eli n e
 
k
 1 S tart
 
5
 
By 5  
Ma
trix 1s
t Row 1st Column 2 2nd Column negative 1 3rd Column 0 4th Column 0 5th Column 0 2nd Row 1st Column negative 1 2nd Column 2 3rd Column negative 1 4th Column 0 5th Column 0 3rd Row 1st Column 0 2nd Column negative 1 3rd Column 2 4th Column negative 1 5th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column negative 1 4th Column 2 5th Column negative 1 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column negative 1 5th Column 2 EndMatrix
As a result, the fundamental frequency of the system is 3.20 Hz. The damping 
matrix bold upper C is: 
bo ld up per 
C equals alpha bold upper M plus beta bold upper K

3.1 Introduction
77
where alpha equals 0.2998 normal s Superscript negative 1 and beta equal s 2.536  times 10 Superscript negative 4 Baseline normal s. The excitation distribution matrix 
bold upper T is: 
bo ld upper T equals l
eft bracket 0 comma 0 comma 0 comma 0 comma 1 right bracket Superscript normal upper T
Deﬁne the model parameter vector bold italic theta left parenthesis t right parenthesisand the augmented state vector bold italic y left parenthesis t right parenthesisas 
follows: 
bold italic th eta 
left parenthesis t right parenthesis identical to left bracket theta Subscript k Baseline comma alpha comma beta right bracket Superscript normal upper T
bold i
t
alic y l eft par enthesis  t right 
parenthesis identical to Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T 3rd Column comma bold italic theta left parenthesis t right parenthesis Superscript normal upper T Baseline EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript 13
Then, Eq. (3.1) can be converted to the following state-space representation: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where g left parenthesis period comma period semicolon period right parenthesisrepresents the nonlinear state-space function. 
The excitation bold italic f is a stationary zero-mean Gaussian white noise with spectral 
intensity up er S 0  equals 5.0 times 10 Superscript negative 5 normal m squared divided by normal s cubed. As a result, the covariance matrix of the input is 
a scalar n or mal up
per Sigma Subscript f Baseline equals sigma Subscript f Superscript 2 . It is assumed that discrete-time acceleration responses of all the 
DOFs are observed and thus the observation equation is given by: 
bol d i
t
al
i
c z Su
bs cript i  Ba se
line equals h left parenthesis bold italic y Subscript i Baseline right parenthesis plus bold italic n Subscript i Baseline comma i equals 1 comma 2 comma ellipsis
where bol d italic z Subscript i Baseline element of double struck upper R Superscript 5 is the noise-corrupted acceleration measurements at the ith time 
step; bol d italic y Subscript i Baseline equals bold italic y left parenthesis i normal upper Delta t right parenthesis, where normal upper Delta t is the sampling time step; h left parenthesis dot right parenthesisdeﬁnes the observation 
quantities; and bold italic n Subscript i represents the measurement noise at the i normal t normal h time step and the 
measurement noise is modeled as Gaussian independent and identically distributed 
(i.i.d.) process with zero mean and covariance matrix bol d uppe
r Sigma Subscript n Baseline equals sigma Subscript n Superscript 2 Baseline bold upper I 5. In particular, the 
rms of the measurement noise was taken to be 5% rms of the noise-free acceleration 
of the 5th node. The accelerations are measured with a sampling time step of 0.0025 normal s
for 100 normal s. 
By using the EKF introduced in Chap. 2, the augmented state vector can be esti-
mated recursively based on Eqs. (3.7) and (3.8). The derivation has been elaborated 
in detail in Chap. 2. It is noticed that the process noise covariance matrix in Eq. (2.66) 
and measurement noise covariance matrix in Eq. (2.69) need to be prescribed. In order 
to investigate the performance of the EKF with different noise covariance matrices, 
comparison using four representative sets of noise covariance matrices is presented. 
The representative sets of noise covariance matrices are listed in Table 3.1. The  
second and third columns refer to process noise covariance matrix and measurement 
noise covariance matrix, respectively. Case 1 refers to the situation with the actual 
noise covariance matrices. Case 2 refers to the situation that bold upper Sigma Subscript n is ﬁxed at its actual 
value with different value of n ormal upper Sigma Subscript f . Case 3 refers to the situation that n ormal upper Sigma Subscript f is ﬁxed at its

78
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Table 3.1 Selected noise 
covariance matrices for the 
EKF 
Case
n ormal upper Sigma Subscript f
bold upper Sigma Subscript n
1
0.126
2.62 times 10 Superscript negative 4 Baseline bold upper I 5
2
0.001
2.62 times 10 Superscript negative 4 Baseline bold upper I 5
3
0.126
2.62 times 10 Superscript negative 3 Baseline bold upper I 5
4
125.664
2.62 times 10 Superscript negative 4 Baseline bold upper I 5
actual value with different value of bold upper Sigma Subscript n. Case 4 refers to the situation that bold upper Sigma Subscript n is ﬁxed 
at its actual value with different value of n ormal upper Sigma Subscript f . 
The estimation results of the stiffness parameters and damping coefﬁcients by 
using the  EKF are  shown in Fig.  3.2. The dotted lines represent the estimated values; 
the solid lines represent the actual values and the dashed lines represent the bounds 
of the 99.7% credible intervals. First, since the actual noise covariance matrices are 
utilized in Case 1, correct inference including both the estimated model parameters 
and the credible intervals can be achieved. In Case 2, the estimated model parameters 
ﬂuctuate severely and are biased in the entire time histories. Compared with Case 1, 
there are substantial discrepancies in the obtained credible intervals in Case 3 when 
the measurement noise covariance matrix bold upper Sigma Subscript n is different from the actual value. In 
Case 4, using this set of noise covariance matrices results in divergent estimation 
results although the measurement noise covariance matrix is exact. 
Fig. 3.2 Estimation results of the stiffness parameter and damping coefﬁcients using the EKF

3.1 Introduction
79
It is concluded that ad hoc assignment of the noise covariance matrices in EKF 
may lead to bias estimation, unreliable uncertainty estimation and even divergence 
problems. As a result, it is highly desired to investigate the updating approach for 
noise covariance matrices in KF and EKF. 
The parameters in the noise covariance matrices are often treated as tuning param-
eters in state and parameter estimation/tracking. Therefore, previous investigations 
for the estimation of the unknown noise covariance matrices focused on ofﬂine esti-
mation of the covariance matrices in the case of the linear KF (Mehra 1970; Mohamed 
and Schwarz1999; Odelson et al. 2006b; Yuen et al. 2007). Some of the investigators 
claimed that their methods have the potential for online application and have been 
the starting point for the current work for online estimation of the noise covariance 
matrices. 
The methodologies for online estimating the noise covariance matrices can be 
classiﬁed into four categories, i.e., covariance matching (Myers and Tapley 1976; 
Odelson et al. 2006a), correlation techniques (Bèlanger 1974), maximum likeli-
hood methods (Dempster et al. 1977; Bavdekar et al. 2011) and Bayesian methods 
(Shumway and Stoffer 2000; Yuen et al. 2013; Yuen and Kuok 2016). Most of the 
existing works focused on the estimation of the process and measurement noise in 
the case of linear dynamical systems, and there is a very limited number of works that 
encompass real-time noise identiﬁcation in a nonlinear dynamical system context, 
which is important for structural health monitoring. 
In this chapter, a real-time updating approach for the covariance matrices of the 
process noise and measurement noise in EKF using output-only measurements is 
developed. The proposed method propagates simultaneously with the system identi-
ﬁcation for time-varying dynamical systems. This algorithm is established based on 
the Bayesian inference, so it provides not only the most probable values of the noise 
parameters characterizing the noise covariance matrices, but also the associated esti-
mation uncertainty. It avoids the possible divergence and instability problem caused 
by adhoc selection of the noise covariance matrices in the implementation of the KF 
and EKF. Moreover, reliable real-time uncertainty quantiﬁcation can be achieved 
due to the reliable estimation of the noise parameters. Uncertainty quantiﬁcation is 
important for many applications, such as damage detection and reliability analysis. 
In the next section, the simultaneous updating scheme for model parameters and 
noise parameters is presented in a real-time manner and the characterization of the 
process and measurement noise covariance matrices is introduced. The Bayesian 
probabilistic framework is presented for real-time updating of the noise parameters 
in EKF. A computationally efﬁcient algorithm for solving the optimization problem 
formulated in Sect. 3.2 is elaborated in Sect. 3.3. In Sect. 3.4, illustrative examples 
are presented in the application of system identiﬁcation for a ﬁve DOFs Bouc-Wen 
hysteretic system and a three-pier bridge. Finally, conclusion of the method will be 
given in Sect. 3.5.

80
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
3.2 
Real-Time Updating of Dynamical Systems and Noise 
Parameters 
3.2.1 
Updating of States and Model Parameters 
Consider the state-space equation of general linear/nonlinear dynamical systems with 
uper N Subscript d DOFs: 
ModifyingAbove bol d italic x 
With dot left parenthesis t right parenthesis equals script upper G left parenthesis bold italic x left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where bold it alic x left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript x is the state vector of the system; bold i ta lic theta left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript theta is the possibly 
time-varying model parameters vector and script upper G left parenthesis period comma period semicolon period right parenthesisis the governing equation of 
the underlying dynamical system. bold italic f is the excitation applied to the system and 
it is modeled as an up per N Subscript f -variate zero-mean Gaussian stochastic process. Deﬁne the 
augmented state vector bold i
t
alic y left pa ren thesis t right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript x Superscript plus upper N Super Subscript theta composed of the system 
state vector and unknown model parameter vector. Then, Eq. (3.9) can be expressed 
as the following augmented state-space equation: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
Equation (3.10) can be expanded in a Taylor series around the state bold italic y left parenthesis t right parenthesis equals bold italic y Superscript bold asteriskas 
follows: 
ModifyingAbove bo ld italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAb
o
ve  bold
 i talic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
Mod
ifyi
ngAbo v
e bold italic y With dot left parenthesis t right parenthesis equals g vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline plus StartFraction partial differential g Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline left parenthesis bold italic y minus bold italic y Superscript bold asterisk Baseline right parenthesis plus StartFraction partial differential g Over partial differential bold italic f EndFraction vertical bar Subscript bold italic y equals bold italic y Sub Superscript bold asterisk Baseline bold italic f
where higher-order terms are neglected with the assumption that bold italic y is close to bold italic y Superscript bold asterisk. 
Then, Eq. (3.11) can be discretized to the following equation: 
bold itali c y  Subs cr ip t i 
plus 1 Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i Baseline plus bold upper B Subscript i Baseline bold italic f Subscript i Baseline plus bold italic delta Subscript i
where bol d italic y Subscript i Baseline identical to bold italic y left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesis, and normal upper Delta t is the sampling time step; bold upper A Subscript i and bold upper B Subscript i
are the transitional and input-to-state matrices, respectively; and bold italic delta Subscript i is the remainder 
term due to the local linear approximation. Detailed derivation of Eq. (3.12) and bold upper A Subscript i, 
bold upper B Subscript i, bold italic delta Subscript i can be found in Chap. 2. The uncertain excitation bo ld italic f Subscript i at the ith time step is 
Gaussian with zero mean and covariance matrix b old upper Sigma Subscript f comma i. 
Discrete-time response measurements bold it a l i c  z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i plus 1 Baseline are observed at uper N 0 DOFs: 
bold ita
l
ic z
 
Subscr
ipt i plus 1 Baseline equals h left parenthesis bold italic y Subscript i plus 1 Baseline right parenthesis plus bold italic n Subscript i plus 1
where h left parenthesis dot right parenthesisdeﬁnes the observation quantities; bold italic n Subscript i plus 1 represents the measurement noise 
at the lef t parenthesis i plus 1 right parenthesis normal t normal h time step and bold italic n is modeled as Gaussian i.i.d. process with zero mean 
and covariance matrix bold up per Sigma Subscript n comma i plus 1 Baseline element of double struck upper R Superscript upper N 0 times upper N 0.

3.2 Real-Time Updating of Dynamical Systems and Noise Parameters
81
Given the measurement dataset up
er  D Subsc r i p t  i Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i Baseline EndSet, the one-step-ahead 
predicted state vector bold italic y Subscript i plus 1 vertical bar i and its covariance matrix bold upper Sigma Subscript i plus 1 vertical bar i can be obtained: 
bold it alic y Sub scri
pt i plus 1 vertical bar i Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i vertical bar i Baseline plus bold italic delta Subscript i
bold up per
 
Sigma S ubs
cr ipt i  plus 
1 
vertical bar i Baseline equals lamda left parenthesis bold upper A Subscript i Baseline bold upper Sigma Subscript i vertical bar i Baseline bold upper A Subscript i Baseline Superscript normal upper T Baseline plus bold upper B Subscript i Baseline bold upper Sigma Subscript f comma i Baseline bold upper B Subscript i Baseline Superscript normal upper T Baseline right parenthesis
where lamdais the fading factor introduced in Chap. 2. 
When a new measurement bold italic z Subscript i plus 1 is available, the updated state vector and its covari-
ance matrix can be obtained by Kalman ﬁlter (Kalman, 1960). The detailed derivation 
can be found in Chap. 2. The Kalman gain matrix can be obtained as: 
bold u pper G Subsc
ri
pt i plus 1  Base
li n e equa
ls b
old upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Subscript i plus 1 Baseline Superscript normal upper T Baseline left parenthesis bold upper H Subscript i plus 1 Baseline bold upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Subscript i plus 1 Baseline Superscript normal upper T Baseline plus bold upper Sigma Subscript n comma i plus 1 Baseline right parenthesis Superscript negative 1
where bold upper H Subscript i plus 1 is the observation matrix at the lef t parenthesis i plus 1 right parenthesis normal t normal h time step. Then, the updated 
state vector and its associated covariance matrix are readily obtained: 
bold ital ic y Subs cript 
i
 plus  1 
v
ertica
l 
bar i plus 1 Baseline equals bold italic y Subscript i plus 1 vertical bar i Baseline plus bold upper G Subscript i plus 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus h left parenthesis bold italic y Subscript i plus 1 vertical bar i Baseline right parenthesis right parenthesis
bold up per  
S
igma Sub script i p
l
us 1 v
ertical bar i plus 1 Baseline equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline minus bold upper G Subscript i plus 1 Baseline bold upper H Subscript i plus 1 Baseline right parenthesis bold upper Sigma Subscript i plus 1 vertical bar i
It is straightforward to notice that the accuracy of the updated state vector and 
its associated covariance matrix depends on the covariance matrix of the process 
noise b old upper Sigma Subscript f comma i in Eq. (3.15) and the covariance matrix of the measurement noise bold upper Sigma Subscript n comma i plus 1
in Eq. (3.16). Moreover, the posterior uncertainty of the model parameters can be 
represented by the submatrix of the covariance matrix of the updated state vector, 
corresponding to the model parameters included in the augmented state vector. Thus, 
the EKF allows for uncertainty quantiﬁcation of the updated model parameters. 
However, since the resultant posterior covariance matrix in Eq. (3.18) depends fully 
on the noise covariance matrices, which are usually prescribed by the user subjec-
tively in practice. As a result, the uncertainty quantiﬁcation results will be arbitrary 
due to the arbitrary assignment of the noise covariance matrices. For example, if both 
noise covariance matrices are scaled up by a factor of rho, the covariance matrices of 
predicted state vector and ﬁltered state vector will also be scaled up by the same 
factor of rhoaccording to Eqs. (3.15) and (3.18). Therefore, improper choice of these 
matrices will lead to erroneous uncertainty quantiﬁcation results.

82
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
3.2.2 
Updating of Noise Parameters 
3.2.2.1
Parameterization of Noise Covariance Matrices 
The covariance matrices of the process noise and measurement noise are parameter-
ized as follows:
b old u p per Sigma Su
bscript f comma i Baseline equals bold upper Sigma Subscript f comma i Baseline left parenthesis bold italic psi Subscript f comma i Baseline right parenthesis
bold up p er Sigma Subsc
ript n comma i plus 1 Baseline equals bold upper Sigma Subscript n comma i plus 1 Baseline left parenthesis bold italic psi Subscript n comma i plus 1 Baseline right parenthesis
where bold italic psi Subscript f comma i and bold italic psi Subscript n comma i plus 1 are the noise parameters of the covariance matrices b old upper Sigma Subscript f comma i and
bold upper Sigma Subscript n comma i plus 1, respectively. Then, the noise parameter vector bold italic psi Subscript i plus 1 can be deﬁned to group 
the noise parameters bold italic psi Subscript f comma i and bold italic psi Subscript n comma i plus 1: 
bold i
t
alic p
si Subscrip
t i plus 1
 Baseline identical to left bracket bold italic psi Subscript f comma i Baseline Superscript normal upper T Baseline comma bold italic psi Subscript n comma i plus 1 Baseline Superscript normal upper T Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript psi
where upper N Subscript psiindicates the number of parameters in the noise parameter vector bold italic psi Subscript i plus 1. It  
is noted that this parameterization does not require any stationarity condition of the 
process noise and the measurement noise. 
3.2.2.2
Posterior PDF of Noise Parameters 
By using the Bayes’ theorem, the posterior probability density function (PDF) of the 
noise parameter vector given the measurement data set upper D Subscript i plus 1 is given by: 
S
t
artL
ayout 
1
st
 
Row 
1st Column
 
p le ft pare
nthesis
 
bold italic p
s
i Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals 2nd Column p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar bold italic z Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis EndLayout
where kappa 0 is a normalizing constant such that the integral of the posterior PDF over 
the entire domain of bold italic psi Subscript i plus 1 yields unity; p left 
parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesisis the prior PDF of the noise 
parameter vector and p
 
left parenthe
sis bold italic z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis
is the likelihood function. 
By assuming that the noise covariance matrices are slowly time-varying, the prior 
PDF p left 
parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesiscan be approximated as the Gaussian distribution. The mean is 
taken as the estimation of the previous time step bold italic psi Subscript i vertical bar i and the covariance matrix is 
taken as the covariance matrix of the previous time step bold upper Sigma Subscript psi comma i vertical bar i . As a result, this prior 
PDF can be expressed as: 
p
 
left
 par
e
nthesis b
old italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis right bracket
p  left par
ent hesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis right bracket
p lef
t
 parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis right bracket
p 
l
eft p arenth
esis b
old i
t
alic psi Su
bs
cript i plus 1 Baseline vertical bar upper D Subscript i Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis right bracket

3.2 Real-Time Updating of Dynamical Systems and Noise Parameters
83
where lamda left parenthesis greater than or equals 1 right parenthesisis the fading factor used to dilute the contribution of the measurements 
in the past and to weigh more heavily the recent measurements. 
The likelihood function p
 
left parenthe
sis bold italic z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis
reﬂects the contribution of the measure-
ments bold italic z Subscript i plus 1 in establishing the posterior PDF at the lef t parenthesis i plus 1 right parenthesis normal t normal h time step and it is given 
by: 
S
t
artLayout 1st
 
Row 1st Column p left parenthesis bold z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S tartLayout
 1s t Row 1st Column p left parenthesis bold z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
St
artLa
y
out 1st Row 1st Column p left parenthesis bold z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1st
 Row 1
st Colu
m
n p l eft pare
nt
hesis bold z Subscript i plus 1 Baseline vertical bar bold italic psi Subscript i plus 1 Baseline comma upper D Subscript i Baseline right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
where bold italic z Subscript i plus 1 vertical bar i is the one-step-ahead predicted observation and it can be obtained by 
taking the expectation of Eq. (3.13): 
bold it ali
c
 z Subs
c
ript i plus  1 ver tical  bar 
i Baseline identical to upper E left bracket bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right bracket equals bold upper H bold italic y Subscript i plus 1 vertical bar i Baseline equals bold upper H upper A Subscript i Baseline bold italic y Subscript i vertical bar i Baseline plus bold upper H bold italic delta Subscript i
In addition, bold upper Sigma Subscript z comma i plus 1 vertical bar i is the covariance matrix of the one-step-ahead predicted 
observation and it can be obtained by using Eqs. (3.15) and (3.25):
StartLayo ut
 1
st Ro w 1st Co
lu
mn bo ld upper
 Sigma 
S
ubscript z com m a i plu
s 1 vertical  ba
r i B aseline  ident
ic al t o 2nd 
Column upper E left bracket left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript upper T Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column equals 2nd Column bold upper H bold upper Sigma Subscript y comma i plus 1 vertical bar i Baseline bold upper H Superscript upper T plus bold upper Sigma Subscript n comma i plus 1 3rd Row 1st Column equals 2nd Column lamda bold upper H upper A Subscript i Baseline bold upper Sigma Subscript y comma i vertical bar i Baseline bold upper A Subscript i Superscript upper T Baseline bold upper H Superscript upper T plus lamda bold upper H upper B Subscript i Baseline bold upper Sigma Subscript f comma i Baseline bold upper B Subscript i Superscript upper T Baseline bold upper H Superscript upper T plus bold upper Sigma Subscript n comma i plus 1 EndLayout
It is noticed that the noise parameters appear implicitly on the right-hand side of 
Eq. (3.24) through bold upper Sigma Subscript z comma i plus 1 vertical bar i . 
Then, the posterior PDF p
 
left
 paren
thesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
can be readily obtained by substituting 
Eqs. (3.23) and (3.24) into Eq. (3.22): 
S
t
artL
ayout 
1
st R
ow 1st Col
umn  p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals kappa 1 StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp 2nd Column left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
St art
L
ayout 1st Row 1st Column p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals kappa 1 StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp 2nd Column left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
St
a
rtLay out 1s
t Row 
1st C
o
lumn p left
 
parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals kappa 1 StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp 2nd Column left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1st
 Row 1
st Colu
m
n p l eft pare
nt
hesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals kappa 1 StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline exp 2nd Column left bracket minus StartFraction 1 Over 2 lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column minus one half left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
where the constant kap pa  1 equals
 kappa 0 left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript plus upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half
k
appa 1 eq
ual s kappa 0 left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript plus upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half
kappa 1 equals kappa 0 left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript psi Superscript plus upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue lamda bold upper Sigma Subscript psi comma i vertical bar i Baseline EndAbsoluteValue Superscript negative one half does not depend on the noise 
parameters in bold italic psi Subscript i plus 1. As a result, the objective function can be deﬁned as the negative 
algorithm of the posterior PDF without including the constant term: 
S
t
artL
a
y out 1
s
t Ro
w 1st 
C
olumn upper J left parenthesis bold italic psi Subscript i plus 1 Baseline right parenthesis 2nd Column identical to minus ln p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals one half left bracket ln StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus StartFraction 1 Over lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
ar
tLayout 1s
t Row 1st Column upper J left parenthesis bold italic psi Subscript i plus 1 Baseline right parenthesis 2nd Column identical to minus ln p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals one half left bracket ln StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus StartFraction 1 Over lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1
st Row
 1st 
C
olumn  upper
 
J
 
left parenthe
sis bo
ld ital
i
c psi  Subscri
pt
 i plus 1 Baseline right parenthesis 2nd Column identical to minus ln p left parenthesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals one half left bracket ln StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue plus StartFraction 1 Over lamda EndFraction left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript psi comma i vertical bar i Superscript negative 1 Baseline left parenthesis bold italic psi Subscript i plus 1 Baseline minus bold italic psi Subscript i vertical bar i Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column plus left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold z Subscript i plus 1 Baseline minus bold z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout

84
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
The updated noise parameter vector bold italic psi Subscript i plus 1 vertical bar i plus 1 can be obtained by maximizing the 
posterior PDF p
 
left
 paren
thesis bold italic psi Subscript i plus 1 Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
in Eq. (3.27), which is equivalent to minimizing the 
objective function in Eq. (3.28): 
bold ital ic psi  Sub
scrip
t
 
i pl
u
s 1 vertical bar i plus 1 Baseline equals arg min Underscript bold italic psi Subscript i plus 1 Baseline Endscripts upper J left parenthesis bold italic psi Subscript i plus 1 Baseline right parenthesis
It is obvious that there is no closed-form solution for the optimization problem 
in Eq. (3.29), so a computationally efﬁcient algorithm is desirable and it will be 
presented next. 
3.3 
Efﬁcient Numerical Optimization Scheme 
In this section, an efﬁcient numerical optimization scheme is proposed to resolve the 
optimization problem in Eq. (3.29). The optimization scheme consists of two phases, 
namely training phase and working phase. 
3.3.1 
Training Phase 
In the early stage of the ﬁlter propagating process, the initial condition and the 
prior distribution dominate the posterior PDF in Eq. (3.27) since only a limited 
amount of measured data is available. Moreover, due to the inaccuracy of the initial 
condition and the lack of information from the measurements, the posterior PDF of 
the noise parameter vector is associated with large uncertainty, so direct application 
of Newton’s gradient method in the training phase will lead to erroneous and possibly 
diverging estimation results. As a result, in order to handle this challenging numerical 
environment, a heuristic stochastic local search method is presented for the training 
phase. 
First, a candidate pool bold upper Theta Subscript i plus 1 is constructed to consist of upper N Subscript tau candidate parameter 
vectors for the lef t parenthesis i plus 1 right parenthesis normal t normal h time step:
Start L
a
yout 1st Ro
w
 
1
st Co lumn bol
d up p
e
r Theta Subsc
r
i
pt i p
lus 1 Ba seli n e  i dent ical to  2nd  C o l umn
 
left brace bold italic psi Subscript i plus 1 Baseline equals bold italic psi Subscript i vertical bar i Baseline right brace union 2nd Row 1st Column Blank 2nd Column left brace bold italic psi Subscript i plus 1 Baseline colon psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline equals left parenthesis 1 plus sigma Subscript tau Baseline xi Subscript m Superscript left parenthesis l right parenthesis Baseline right parenthesis psi Subscript i vertical bar i Superscript left parenthesis l right parenthesis Baseline comma m equals 1 comma ellipsis comma upper N Subscript tau Baseline minus 1 semicolon l equals 1 comma ellipsis comma upper N Subscript psi Baseline right brace EndLayout
where psi Su
bscript i plus 1 Superscript left parenthesis l right parenthesis and psi Su
bscript i vertical bar i Superscript left parenthesis l right parenthesis are the l normal t normal h component of the noise parameter vector bold italic psi Subscript i plus 1 and the 
updated noise parameter vector bold italic psi Subscript i vertical bar i , respectively. The variable sig ma Subscript tau Baseline equals 2 Superscript negative upper N controls the 
pace and precision of the estimation in the training phase. A larger value corresponds 
to larger step size, in the statistical sense, with lower estimation precision. xi Sub
script m Superscript left parenthesis l right parenthesis is the 
standard Gaussian random variable truncated to be larger than negative 1 divided by sigma Subscript tau. The candidate

3.3 Efﬁcient Numerical Optimization Scheme
85
parameter set bold upper Theta Subscript i plus 1 includes the updated noise parameter vector of the previous time 
step and upp er N Subscript tau Baseline minus 1 generated candidate parameter vectors in its neighborhood. 
The objective function u
p
per 
J left parenthesis bold italic psi Subscript i plus 1 Baseline right parenthesis
in Eq. (3.28) will then be evaluated for all these 
upper N Subscript tau candidates. The updated noise parameter vector at the lef t parenthesis i plus 1 right parenthesis normal t normal h time step is the 
parameter vector candidate which provides the minimum objective function value 
within the parameter candidate pool bold upper Theta Subscript i plus 1: 
bold ital ic ps
i Su
bscri pt i pl
u
s 1 
v
ertical bar i plus 1 Baseline equals arg min Underscript bold italic psi Subscript i plus 1 Baseline element of bold upper Theta Subscript i plus 1 Baseline Endscripts upper J left parenthesis bold italic psi Subscript i plus 1 Baseline right parenthesis
The training phase will be completed/terminated if the following two criteria are 
satisﬁed. First, it has been implemented for more than ten fundamental periods of the 
underlying dynamical systems. Second, the updated noise parameter vector remains 
identical for ten consecutive time steps. The termination criteria can be expressed as 
follows:
Sta rtLay
o
ut Enlarged l
e
ft brac e 1st Row  
i greater  t h a n or
 equals normal upper I normal upper N normal upper T left parenthesis 10 upper T Subscript p e r i o d Baseline divided by normal upper Delta t right parenthesis 2nd Row bold italic psi Subscript i plus j vertical bar i plus j Baseline equals bold italic psi Subscript i vertical bar i Baseline comma j equals 1 comma 2 comma ellipsis comma 10 EndLayout
where upper I upper N upper T takes the nearest integer toward zero and upper T Subscript p e r i o d is the fundamental period 
of the underlying dynamical system. Note that it is only required to have a rough 
estimation of upper T Subscript p e r i o d. 
The termination criteria ensure that sufﬁcient information has been gained from 
the data for the estimation of the state, the model parameters and the noise parameters. 
This training phase provides a robust strategy to obtain a preliminary solution of the 
noise parameter vector. At the end of this phase, the preliminary solution is within a 
sufﬁciently small neighborhood of the true optimal point of the posterior PDF. As a 
result, the posterior PDF can be well approximated by a Gaussian distribution. 
3.3.2 
Working Phase 
In the working phase, the gradient method is utilized to solve the optimization 
problem in Eq. (3.29). The updated noise parameter vector can be obtained by: 
bold it ali c psi S u bscript  i 
p
lus 
1
 vertical bar i plus 1 Baseline equals bold italic psi Subscript i vertical bar i Baseline minus bold upper Sigma Subscript psi comma i vertical bar i Baseline nabla upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis
where nab
l
a up
per J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis
is the gradient of the objective function evaluated at bol d italic psi Subscript i Baseline equals bold italic psi Subscript i vertical bar i . It  
can be computed numerically using the ﬁnite difference method and its l normal t normal h component 
is given by: 
S ta rtLa
yout
 
1st R
o
w 1s
t Column nabla upper J Superscript left parenthesis l right parenthesis Baseline left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis identical to 2nd Column StartFraction partial differential upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis Over partial differential psi Subscript i Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i Subscript equals bold italic psi Sub Subscript i vertical bar i 2nd Row 1st Column equals 2nd Column StartFraction 1 Over 2 normal upper Delta psi Subscript l Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis right bracket EndLayout
StartLa
y
out 1
st Row 1st Column nabla upper J Superscript left parenthesis l right parenthesis Baseline left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis identical to 2nd Column StartFraction partial differential upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis Over partial differential psi Subscript i Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i Subscript equals bold italic psi Sub Subscript i vertical bar i 2nd Row 1st Column equals 2nd Column StartFraction 1 Over 2 normal upper Delta psi Subscript l Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis right bracket EndLayout

86
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
S
tartLayout 1st Row 1st Column nabla upper J Superscript left parenthesis l right parenthesis Baseline left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis identical to 2nd Column StartFraction partial differential upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis Over partial differential psi Subscript i Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i Subscript equals bold italic psi Sub Subscript i vertical bar i 2nd Row 1st Column equals 2nd Column StartFraction 1 Over 2 normal upper Delta psi Subscript l Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis right bracket EndLayout
Star
t
L
a
yout 1 st 
R
ow 
1
st Co l umn
 n
abla upper J Superscript left parenthesis l right parenthesis Baseline left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis identical to 2nd Column StartFraction partial differential upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline right parenthesis Over partial differential psi Subscript i Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i Subscript equals bold italic psi Sub Subscript i vertical bar i 2nd Row 1st Column equals 2nd Column StartFraction 1 Over 2 normal upper Delta psi Subscript l Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i vertical bar i Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis right bracket EndLayout
where normal upper Delta bold italic psi Subscript l is a vector with all elements being zero expect the l normal t normal h element equal to 
a properly selected small step normal upper Delta psi Subscript l Baseline left parenthesis greater than 0 right parenthesis:
norm al up p e r  Del ta bold i t a l ic psi
 Subscript l Baseline equals left bracket 0 comma ellipsis comma 0 comma normal upper Delta psi Subscript l Baseline comma 0 comma ellipsis comma 0 right bracket Superscript normal upper T Baseline period
Since the information contained from one data point is limited, the estimated 
noise parameter vectors in two consecutive time steps are close to each other. There-
fore, Eq. (3.33) provides accurate solution for the optimization problem without any 
iteration. 
3.3.3 
Uncertainty Estimation of the Updated Noise 
Parameters 
By using the Bayesian inference, not only the optimal noise parameter vector bold ita lic psi Subscript i plus 1 vertical bar i plus 1
can be obtained but also the associated uncertainty can be quantiﬁed in the form of the 
covariance matrix bold upper Sigma Subscript psi comma i plus 1 vertical bar i plus 1 . This covariance matrix is required for the evaluation 
of the objective function in Eq. (3.28). For a large number of data points, it can be 
approximated by the inverse of the Hessian matrix of the objective function calculated 
at bold italic psi Subscript i plus 1 Baseline equals bold italic psi Subscript i plus 1 vertical bar i plus 1 (Yuen 2010):
bold upper S
i
gm
a
 Subscri
pt ps
i comma i plus 1 vertical bar i plus 1 Baseline equals left bracket script upper H Subscript upper J Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis right bracket Superscript negative 1
where sc
r
ipt uppe
r H Subscript upper J Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis
is the Hessian matrix of the objective function evaluated at 
bold italic psi Subscript i plus 1 Baseline equals bold italic psi Subscript i plus 1 vertical bar i plus 1 , and its diagonal elements are given by: 
StartLa
y
o
ut 1st R
o
w
 
1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
StartLa
you
t
 1s
t
 Row 1st
 Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
StartLa
you
t 
1st R ow 1st Col
u
mn Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
Star
tL
ayout
 
1st Row 
1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
StartLa
you
t 1st
 Row 1st Colum
n  Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
St
ar tLa
y
out 1st 
Row 1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
StartLa
you
t 1st
 Row 1st Colum
n  Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
St
ar
tL
a
yout 1st Row 1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
Sta
r
t
L
ayout 1st  Row
 
1st
 
Column B
lank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
Star
tL a
y
out 1st 
R
ow 
1
st Column  Bla
nk 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
Sta
r
tL a
y
out 1st R o w 1
s
t Co
l
umn Blan
k
 2n
d
 Column s c rip
t upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout
StartLa
yout 1st Row 1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus StartFraction normal upper Delta bold italic psi Sub Subscript l Subscript Over 2 EndFraction Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over normal upper Delta psi Subscript l Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over normal upper Delta psi Subscript l Baseline EndFraction right bracket 5th Row 1st Column Blank 2nd Column equals StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline right parenthesis minus 2 upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline right parenthesis Over left parenthesis normal upper Delta psi Subscript l Baseline right parenthesis squared EndFraction EndLayout

3.3 Efﬁcient Numerical Optimization Scheme
87
Moreover, the off-diagonal elements can be computed as follows: 
StartLay
o
u
t 1st Ro
w
 
1
st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
StartLay
out
 
1st
 
Row 1st 
Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
StartLa
you
t 
1st R ow 1st Col
u
mn Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
Start
La
yout 
1
st Row 1
st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
StartLa
you
t 1st
 Row 1st Colum
n Bla
nk  2n
d
 Column 
script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
StartLa
you
t 1st
 Row 1st Colum
n Bla
nk
 2
nd
 Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
Start
L
a
y
out 1st R o w 1s t  Col
u
mn 
B
lank 2nd C olum n  scr
ipt upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
Start
La y
o
ut 1st Ro w  1st  Colu
m
n B
l
ank 2nd C o lumn  scri
pt upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
Star
t
L
ayout 1st Row 1st Column Blank 2nd Column script upper H Subscript upper J Superscript left parenthesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
StartLay
o
u
t
 1st Row 1 st C o lumn
 
Bla
n
k 2nd Col u mn s c ript
 
up p
e
r H Subsc r ipt u pper
 
J S
u
perscript  left  pare
nt
hesis l comma l Super Superscript prime Superscript right parenthesis Baseline left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals left bracket StartFraction partial differential Over partial differential psi Subscript i plus 1 Superscript left parenthesis l prime right parenthesis Baseline EndFraction left parenthesis StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction right parenthesis right bracket Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript Baseline 3rd Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript plus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline minus StartFraction partial differential upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline right parenthesis Over partial differential psi Subscript i plus 1 Superscript left parenthesis l right parenthesis Baseline EndFraction vertical bar Subscript bold italic psi Sub Subscript i plus 1 Subscript equals bold italic psi Sub Subscript i plus 1 vertical bar i plus 1 Subscript minus normal upper Delta bold italic psi Sub Subscript l Sub Sub Superscript prime Sub Subscript Subscript Baseline right bracket 4th Row 1st Column Blank 2nd Column almost equals StartFraction 1 Over 2 normal upper Delta psi Subscript l prime Baseline EndFraction left bracket StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction 5th Row 1st Column Blank 2nd Column minus StartFraction upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis Over 2 normal upper Delta psi Subscript l Baseline EndFraction right bracket 6th Row 1st Column Blank 2nd Column equals StartFraction 1 Over 4 normal upper Delta psi Subscript l Baseline normal upper Delta psi Subscript l prime Baseline EndFraction left bracket upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline plus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis 7th Row 1st Column Blank 2nd Column minus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline plus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis plus upper J left parenthesis bold italic psi Subscript i plus 1 vertical bar i plus 1 Baseline minus normal upper Delta bold italic psi Subscript l Baseline minus normal upper Delta bold italic psi Subscript l Sub Superscript prime Subscript Baseline right parenthesis right bracket EndLayout
where normal upper Delta bold italic psi Subscript l and normal upper Delta bold italic psi Subscript l Sub Superscript prime are the vectors with zero elements except the l normal t normal h and l prime th
elements being normal upper Delta psi Subscript l and normal upper Delta psi Subscript l Sub Superscript prime , respectively. 
This approximation can be applied to both training and working phases. However, 
at the very beginning of the ﬁlter propagation process, the approximation in Eq. (3.36) 
may not be accurate due to the large uncertainty of the posterior PDF. This can 
be reﬂected in the violation of the positive-deﬁniteness condition for the resultant 
covariance matrix. This is because the updated state vector may be far from the true 
optimal value of the posterior PDF at the early stage of the estimation. As a result, it is 
necessary to examine whether the covariance matrix bold upper Sigma Subscript psi comma i plus 1 vertical bar i plus 1 of the updated noise 
parameter vector is positive-deﬁnite during the training phase. When the covariance 
matrix bold upper Sigma Subscript psi comma i plus 1 vertical bar i plus 1 does not satisfy the positive-deﬁnite condition, it will be replaced 
by the covariance matrix bold upper Sigma Subscript psi comma i vertical bar i of the previous time step. When the observations 
accumulate over time, the estimated noise parameters will approach the true optimal 
point of the posterior PDF and the posterior uncertainty will be reduced. As a result, 
Eq. (3.36) provides an accurate approximation of the covariance matrix. In this case, 
the positive-deﬁniteness condition is automatically fulﬁlled.

88
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
3.4 
Applications 
3.4.1 
Bouc-Wen Hysteresis System 
The ﬁrst example uses a Bouc-Wen system with up er N Subscript d Baseline equals 5 DOFs shown in Fig. 3.3. 
The governing equation of this nonlinear system is given by: 
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic r left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
Modifyin gAbo ve r With dot Subsc ript n Baselin
e left pa r e n t he
sis t right parenthesis equals ModifyingAbove x With dot Subscript n Baseline minus mu StartAbsoluteValue ModifyingAbove x With dot Subscript n Baseline EndAbsoluteValue StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta minus 1 Baseline r Subscript n Baseline minus kappa ModifyingAbove x With dot Subscript n Baseline StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta Baseline comma n equals 1 comma 2 comma ellipsis comma 5
where ModifyingAbove bold italic x With two dots left parenthesis t right parenthesis, ModifyingAbove bold italic x With dot left parenthesis t right parenthesisand bold italic r left parenthesis t right parenthesisare the acceleration, velocity, and restoring force vector, 
respectively; bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, 
respectively; the stiffness and damping matrix are parameterized with possibly time-
varying parameters bold italic theta Subscript k Baseline left parenthesis t right parenthesisand bold italic theta Subscript c Baseline left parenthesis t right parenthesis, respectively; bo ld italic f left parenthesis t right parenthesisis the excitation applied to the 
system and bold upper T is the inﬂuence matrix associated with the excitation bold italic f . The stiffness 
matrix bold upper K is parameterized as: 
St ar
t
L
ayou
t 1st 
Ro w 1st
 C
ol
umn bol
d uppe
r K e quals 2n
d Co
lumn si
gm a 
s
u
m
m
ation U
nd er
script
 n  eq uals 1 O
ve rs
cript 5
 E nd
s
c
r
i
pts bol
d it
alic t
he ta Subscrip
t k 
Supersc
ri pt
 l
e
f
t paren
th es
is n r
ig ht parenthe
si s B aseline
 b old
 
u
p
per K S
up er
script
 l eft
 p
arenthe
sis n right parenthesis 2nd Row 1st Column equals 2nd Column Start 5 By 5 Matrix 1st Row 1st Column theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline k 1 plus theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline k 2 2nd Column minus theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline k 2 3rd Column 0 4th Column 0 5th Column 0 2nd Row 1st Column minus theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline k 2 2nd Column theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline k 2 plus theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline k 3 3rd Column minus theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline k 3 4th Column 0 5th Column 0 3rd Row 1st Column 0 2nd Column minus theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline k 3 3rd Column theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline k 3 plus theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline k 4 4th Column minus theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline k 4 5th Column 0 4th Row 1st Column 0 2nd Column 0 3rd Column minus theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline k 4 4th Column theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline k 4 plus theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline k 5 5th Column minus theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline k 5 5th Row 1st Column 0 2nd Column 0 3rd Column 0 4th Column minus theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline k 5 5th Column theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline k 5 EndMatrix EndLayout
c1 
Bouc-Wen 
c2 
Bouc-Wen 
c3 
Bouc-Wen 
c4 
Bouc-Wen 
c5 
Bouc-Wen 
Fig. 3.3 Bouc-Wen hysteresis system 

3.4 Applications
89
where 
bold upper K Superscript left parenthesis n right parenthesis
is 
the
n normal t normal h
substructural 
stiffness 
matrix 
and
bold it
a
l
ic the
ta  S ubscr
ip t  k Bas
el i n e lef
t p a renth
e
sis t right parenthesis equals left bracket theta Subscript k Superscript left parenthesis 1 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 2 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 3 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 4 right parenthesis Baseline comma theta Subscript k Superscript left parenthesis 5 right parenthesis Baseline right bracket Superscript normal upper T
is used to represent the integrity of the system. The actual 
stiffnesses are taken as k S ubscrip t n Bas elin e  e q uals 2000 normal upper N divided by normal m comma n equals 1 comma ellipsis comma 5. Rayleigh damping was used 
so the damping matrix was given by bo ld upper C equals alpha bold upper M plus beta bold upper K, where the damping coefﬁcients 
were given by alpha equ als 0.38 normal s Superscript negative 1 and beta equa ls 8.02  times 10 Superscript negative 4 Baseline normal s. The characteristic parameters 
of the Bouc-Wen system were taken to be mu equals  1000 normal s squared divided by normal m squared, ka ppa equ als 1500 normal s squared divided by normal m squared and 
eta equals 2. In this example, sig ma Subscript tau Baseline equals 2 Superscript negative 8 and upp er N Subscript tau Baseline equals 20 were taken for the training phase. 
The measurements included the velocity responses of the 1st, 3rd and 5th DOFs. The 
entire monitoring period was 300 s and the sampling time interval was nor mal upper Delta t equals 0.002
s. 
The system was undamaged in the ﬁrst 170 normal s. Sudden damages occurred in all the 
ﬁve nonlinear springs. Speciﬁcally, 10% stiffness reduction of the ﬁrst two springs 
and 5% stiffness reduction of the other three springs occurred at t equals  170 normal s. 
The following three stationary scenarios of the process noise and measurement 
noise are investigated: 
Case 1. Stationary base excitation and stationary measurement noise 
Case 2. Nonstationary base excitation and stationary measurement noise 
Case 3. Nonstationary base excitation and nonstationary measurement noise 
3.4.1.1
Case 1. Stationary Base Excitation and Stationary 
Measurement Noise 
In the 1st case, the hysteresis system was subjected to stationary base excitation 
which was modeled as zero-mean Gaussian white noise with spectral intensity up er
 S 0  equal s 6.0 times 10 Superscript negative 3 Baseline normal m squared divided by normal s cubed. The rms of the measurement noise was taken to be 5% rms of the 
noise-free response of the 5th DOF. As a result, the noise parameter vector consisted 
of two parameters: 
bold i
t
alic ps i Subs
cri p
t
 i p
lus 1  Bas
eline
 eq
uals left bracket psi Subscript f comma i Baseline comma psi Subscript n comma i plus 1 Baseline right bracket Superscript normal upper T Baseline equals left bracket sigma Subscript f comma i Superscript 2 Baseline comma sigma Subscript n comma i plus 1 Superscript 2 Baseline right bracket Superscript normal upper T
The initial values of the noise parameter vector and the associated covariance 
matrix were taken as: 
bold italic psi
 Subscript 0 vertical bar 0 Baseline equals left bracket 1 comma 1 right bracket Superscript normal upper T
bold up per Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 2
bold
 upper Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 2
The estimation results of the stiffness parameters are ﬁrst shown in Fig. 3.4. 
The dotted lines represent the estimated values; the solid lines represent the actual 
values and the dashed lines represent the bounds of the 99.7% credible intervals. The 
same line style will be used to other later ﬁgures. The proposed method provided 
satisfactory estimation results of the stiffness parameters and the estimation results

90
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.4 Estimation results of the stiffness parameters of the Bouc-Wen system (Case 1)
were within the 99.7% credible intervals. Moreover, the abrupt change of the stiffness 
parameters could be well captured. Figure 3.5 shows the estimation results of the 
damping coefﬁcients and the characteristic parameters of the Bouc-Wen hysteresis 
system. It can be observed that the estimated values approached the actual values 
and were within the 99.7% credible intervals. 
Figure 3.6 shows the time histories of the estimation results of the noise param-
eters. The training phase was terminated at t equals 7.68 normal s shown by a vertical dashed 
line, which is larger than ten small-amplitude periods of the hysteresis system 
10 upper T  Su bscript p e r i o d Baseline almost equals 5 normal s. The fundamental period upper T Subscript p e r i o d could be estimated roughly from 
a simple Fourier spectrum of the system response. Since both the excitation and 
measurement noise were stationary in this case, the actual noise parameters remained 
constant throughout the entire monitoring duration. The estimation results at the 
early propagation stage were ﬂuctuating severely because the initial noise parame-
ters were far from the actual values. However, the estimation results approached the 
actual values with reasonable credible intervals after t equal s 20 normal s. In addition, after the 
abrupt drop of the stiffness parameters at t equals  170 normal s, the estimated noise parameter 
of the excitation psi Subscript f was slightly lower than the actual value. This was caused by the 
time delay of the estimation of the stiffness parameters. Due to the time delay, the 
identiﬁed stiffness parameters were larger than the actual decreasing values in this 
period of time. To compensate this error, the estimated process noise variance was

3.4 Applications
91
Fig. 3.5 Estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen system (Case 1)
lower than the actual value. Meanwhile, the estimated measurement noise param-
eter psi Subscript n was overestimated to maintain the total contribution by the process noise 
and measurement noise to the one-step-ahead predicted state vector and ﬁltered 
state vector. Nevertheless, these were recovered promptly after more data points of 
the damaged system were obtained. Moreover, the results show that the proposed 
approach provided reasonable quantiﬁcation of the posterior uncertainty. Except the 
short period around the sudden damage of the system, the 99.7% credible intervals 
were able to cover the actual values of the noise parameters in the entire monitoring 
duration.
3.4.1.2
Case 2. Nonstationary Base Excitation and Stationary 
Measurement Noise 
In Case 2, the hysteresis system was subjected to nonstationary base excitation, which 
was modeled as a modulated zero-mean Gaussian white noise process: 
bo ld ital ic  f left p
arenthesis t right parenthesis equals script upper W Subscript f Baseline left parenthesis t right parenthesis ModifyingAbove g With two dots left parenthesis t right parenthesis

92
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.6 Estimation results of the noise parameters of the Bouc-Wen system (Case 1)
where ModifyingAbove g With two dots is the stationary zero-mean Gaussian white noise with spectral intensity 
up er S 0 equa ls 6.0 times 10 Superscript negative 3 Baseline normal m squared divided by normal s cubed and s cr ipt upper W Subscript f Baseline left parenthesis t right parenthesisis the amplitude modulating function of excitation 
given by: 
s cr ipt u
p
p
e
r
 W S ubscr
ip t f Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr ipt up per W Subscript f Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr i
pt  uppe
r W Subscript f Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
where t S ubscri pt a Baseline equals 150 normal s and t S ubscr ipt b Baseline equals 20 normal s, so this modulating function reaches its maximum 
value at t equal s t S ubscri pt a Baseline plus t Subscript b Baseline equals 170 normal s: 
max 
Un
d er script t Ends cripts sc
ript upper W Subscript f Baseline left parenthesis t right parenthesis equals script upper W Subscript f Baseline left parenthesis t Subscript a Baseline plus t Subscript b Baseline right parenthesis equals 2
The rms of the measurement noise was taken to be 5% rms of the noise-free 
response of the 5th DOF. Therefore, the noise parameter vector consisted of two 
parameters: 
bold i
t
alic ps i Subs
cri p
t
 i p
lus 1  Bas
eline
 eq
uals left bracket psi Subscript f comma i Baseline comma psi Subscript n comma i plus 1 Baseline right bracket Superscript normal upper T Baseline equals left bracket sigma Subscript f comma i Superscript 2 Baseline comma sigma Subscript n comma i plus 1 Superscript 2 Baseline right bracket Superscript normal upper T

3.4 Applications
93
The initial values of the noise parameter vector and the associated covariance 
matrix were taken by using Eqs. (3.43) and (3.44), respectively. 
The estimation results of the stiffness parameters are shown in Fig. 3.7 and the 
estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen hysteresis system are shown in Fig. 3.8. The results show that the estimated 
stiffness parameters, damping coefﬁcients and characteristic parameters of the Bouc-
Wen system agreed well with the actual values and the estimation results were within 
the 99.7% credible intervals. The abrupt reduction of the stiffness parameters could 
be well captured. Acceptably small time delay of the estimation of the stiffness 
parameters was observed since the estimations were obtained by using the data at 
the current and previous time steps. 
Figure 3.9 shows the time histories of the estimation results of the noise parame-
ters. The training phase was terminated at t equals 8.91 normal s and this time instant was shown 
with a vertical dashed line in Fig. 3.9. The variation of the process noise parameter 
could be successfully tracked and the estimated measurement noise parameter agreed 
well with the actual value. It can be observed that there was time delay for tracking the 
peak value of the nonstationary process noise. This time lag was expected because 
the estimation was based on the data at the current and previous time steps, so it 
took time to fade out the effect of the previous data. Nevertheless, this delay was 
acceptably small and the overall estimation of psi Subscript f was very accurate. Moreover, the
Fig. 3.7 Estimation results of the stiffness parameters of the Bouc-Wen system (Case 2)

94
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.8 Estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen system (Case 2)
estimated noise parameter of the excitation psi Subscript f was slightly lower than the actual 
values when tracking the sudden change of the stiffness parameters. This was caused 
by the time delay of the estimation of the stiffness parameters. On the other hand, 
the estimated measurement noise parameter psi Subscript n was overestimated in this period of 
time to maintain the total contribution of the process noise and measurement noise 
to the one-step-ahead predicted state vector and ﬁltered state vector. Nevertheless, 
the overall estimated noise parameters were satisfactory.
3.4.1.3
Case 3. Nonstationary Base Excitation and Nonstationary 
Measurement Noise 
In Case 3, the proposed method is demonstrated with an application under 
nonstationary process noise and nonstationary measurement noise. The Bouc-Wen 
hysteresis system was subjected to nonstationary base excitation, which was modeled 
as a modulated zero-mean Gaussian white noise process by using Eqs. (3.45) and 
(3.46), where the parameters upper S 0, t Subscript a and t Subscript b were taken the same as Case 2. The 
measurement noise was modeled as:

3.4 Applications
95
Fig. 3.9 Estimation results of the noise parameters of the Bouc-Wen system (Case 2)
bold italic n lef
t parenthesis t right parenthesis equals script upper W Subscript n Baseline left parenthesis t right parenthesis bold italic n 0 left parenthesis t right parenthesis
where bold italic n 0 is an upper N 0-variate Gaussian i.i.d. process with zero mean and covariance 
matrix given by:
bold  upper
 Sigma
 Subscript n 0 Baseline equals sigma Subscript n 0 Superscript 2 Baseline bold upper I Subscript upper N 0
where sigma Subscript n 0 was taken as 5% rms of the noise-free response of the 5th DOF. The 
modulating function script upper W Subscript n Baseline left parenthesis t right parenthesiswas given by: 
script 
u
p
p
e
r W Subsc
ri pt n Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over 2 t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scri pt up er W Subscript n Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over 2 t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr i
pt  uppe
r W Subscript n Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over 2 t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
where t S ubscri pt a Baseline equals 150 normal s and t S ubscr ipt b Baseline equals 20 normal s. As a result, the noise parameter vector consisted of 
two parameters: 
bold i
t
alic ps i Subs
cri p
t
 i p
lus 1  Bas
eline
 eq
uals left bracket psi Subscript f comma i Baseline comma psi Subscript n comma i plus 1 Baseline right bracket Superscript normal upper T Baseline equals left bracket sigma Subscript f comma i Superscript 2 Baseline comma sigma Subscript n comma i plus 1 Superscript 2 Baseline right bracket Superscript normal upper T

96
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
The initial values of the noise parameter vector and the associated covariance 
matrix were taken by using Eqs. (3.43) and (3.44), respectively. 
The estimation results of the stiffness parameters are shown in Fig. 3.10 and the 
estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen system are shown in Fig. 3.11. The results show that the proposed method 
provided satisfactory estimation results of all the model parameters with reasonable 
credible intervals, indicating its applicability to nonstationary scenario without prior 
information. The abrupt reduction of the stiffness parameters could be well tracked 
with slight time delay. 
Figure 3.12 shows the time histories of the estimation results of the noise param-
eters. The training phase was terminated at t equals 1 1.33 normal s shown with a vertical dashed 
line. The variation of the process noise and measurement noise could be success-
fully tracked and the estimated values were within the 99.7% credible intervals. It 
is realized that the proposed method could track the time-varying noise parameters 
and provided reasonable credible intervals of the estimation. It is also observed that 
there was time delay for tracking the peak values of the nonstationary process noise 
and measurement noise. This was expected because the estimation was based on the 
data at the current and previous time steps, so it took time to fade out the effect of the
Fig. 3.10 Estimation results of the stiffness parameters (Case 3)

3.4 Applications
97
Fig. 3.11 Estimation results of the damping coefﬁcients and the characteristic parameters of the 
Bouc-Wen system (Case 3)
previous data. Nevertheless, this delay was acceptably small and the overall estima-
tion of psi Subscript f and psi Subscript n was very accurate. Again, the estimated process noise parameter 
psi Subscript f was slightly lower than the actual values during tracking the sudden change of the 
stiffness parameters, while the estimated measurement noise parameter psi Subscript n was over-
estimated in this period of time. This was caused by the time delay of the estimation 
of the stiffness parameters.
3.4.2 
Three-Pier Bridge 
A bridge with three piers is considered in this example (Fig. 3.13). The bridge has 
pin supports at its two ends (i.e., the 1st and 17th nodes) and the bottom of the three 
piers (i.e., the 19th, 21st and 23rd nodes). It has a span of 256 m, and the length of 
its three piers is 16 m. The deck is divided into 16 components (each with 16 m) and 
the pier is divided into 2 components (each with 8 m). The deck has uniform box

98
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.12 Estimation results of the noise parameters (Case 3)
cross-section with area 1.56 normal m squared and weak axis moment of inertia 4.02 normal m Superscript 4. The  three  
piers have the same circular cross-section with area 1.57 normal m squared. The mass density is 
3780 k g divided by normal m cubed and the modulus of elasticity is 2  upper G upper P a. As a result, the ﬁrst ﬁve natural 
frequencies are 0.47, 0.53, 0.70, 0.89 and 1.36 Hz. The damping matrix is given by 
bo ld  up per C equals alpha bold upper M plus beta bold upper K, where al ph a equa ls 0.063 normal s Superscript negative 1 and be ta  equal s 0.006 normal s, so the damping ratios 
for the ﬁrst two modes are 2%. The components of the bridge were separated into 
seven groups and the stiffness matrix was given by bo l d u
pper  K equ
al s sigma summation Underscript n equals 1 Overscript 7 Endscripts bold italic theta Subscript k Superscript left parenthesis n right parenthesis Baseline bold upper K Superscript left parenthesis n right parenthesis. Speciﬁcally, 
one stiffness parameter was assigned to every four components on the deck, and one 
stiffness parameter was assigned to each pier. 
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17 
18 
19 
20 
21 
22 
23 
Fig. 3.13 Bridge model

3.4 Applications
99
The entire monitoring period was 300 s and the sampling frequency was 400 upper H z. 
In this example, sig ma  Subscript tau Baseline equals 2 Superscript negative 8 and upp er  N Subscript tau Baseline equals 20 were taken for the training phase. The 
measurements included the horizontal and vertical acceleration responses of the 5th, 
9th, 13th, 18th, 20th and 22nd nodes, so the number of observed DOFs was up er N 0 equals 12. 
The rms of the measurement noise was taken as 5% rms of the noise-free horizontal 
acceleration of the 9th node. As a result, the covariance matrix of the measurement 
noise can be expressed as:
bold up per Si
gma Subs
cript n comma i plus 1 Baseline equals sigma Subscript n comma i plus 1 Superscript 2 Baseline bold upper I 12
Moreover, the bridge was undamaged during the ﬁrst 100 s. Then, sudden damage 
with 5% stiffness reduction occurred in the deck between the left support and the left 
pier at t equals  100 normal s. Afterwards, the same level of damage occurred in the right pier of 
the bridge at t equals  200 normal s. 
We consider two different scenarios of the excitations: 
Case 1. Nonstationary horizontal ground excitation 
Case 2. Stationary horizontal ground excitation and nonstationary vertical ground 
excitation 
3.4.2.1
Case 1. Nonstationary Horizontal Ground Excitation 
In the ﬁrst case, the bridge was subjected to nonstationary horizontal ground excita-
tion, which was modeled as a modulated zero-mean Gaussian white noise given as 
follows: 
bo ld ita lic f lef t parenthesis
 t right parenthesis equals f Subscript h Baseline left parenthesis t right parenthesis equals script upper W Subscript f Sub Subscript h Baseline left parenthesis t right parenthesis ModifyingAbove g With two dots Subscript h Baseline left parenthesis t right parenthesis
where ModifyingAbove g With two dots Subscript h is the horizontal ground acceleration modeled as zero-mean Gaussian white 
noise with spectral intensity up er S S ubscrip t h Baseline equals 5.0 times 10 Superscript negative 6 Baseline normal m squared divided by normal s cubed; s cript upper W Subscript f Sub Subscript h Baseline left parenthesis t right parenthesiswas the modulating 
function given by: 
s cript up
p
e
r
 
W Su bscri
pt  f Sub Subscript h Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr ipt up per W Subscript f Sub Subscript h Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr i
pt  uppe
r W Subscript f Sub Subscript h Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
where t S ubscri pt a Baseline equals 120 normal s and t S ubscr ipt b Baseline equals 20 normal s. As a result, the covariance matrix of the excitation 
can be expressed as:
n orma l uppe
r Sig
ma Subscript f comma i Baseline equals sigma Subscript f Sub Subscript h Subscript comma i Superscript 2
Therefore, the noise parameter vector consisted of two parameters: 
bold i
t
alic ps i Subs
cri p
t
 i p
lus 1 B a sel
ine e
qua
ls left bracket psi Subscript f comma i Baseline comma psi Subscript n comma i plus 1 Baseline right bracket Superscript normal upper T Baseline equals left bracket sigma Subscript f Sub Subscript h Subscript comma i Superscript 2 Baseline comma sigma Subscript n comma i plus 1 Superscript 2 Baseline right bracket Superscript normal upper T

100
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
The initial noise parameter vector and its associated covariance matrix were taken 
as: 
bold italic psi
 Subscript 0 vertical bar 0 Baseline equals left bracket 1 comma 1 right bracket Superscript normal upper T
bold up per Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 2
bold
 upper Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 2
The estimation results of the stiffness and damping coefﬁcients are shown in 
Figs. 3.14 and 3.15, respectively. The dotted lines represent the estimated values; the 
solid lines represent the actual values and the dashed lines represent the bounds of the 
99.7% credible intervals. The same line style will be used to other later ﬁgures. It can 
be observed that the estimated model parameters ﬂuctuated severely at the beginning 
of the ﬁlter propagating process because the initial values were far from the actual 
values. When more data points were acquired, the estimated model parameters were 
stable and approached the actual values and they were within the 99.7% credible 
intervals. In addition, a slight time delay for tracking abrupt changes of theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 7 right parenthesis
could be observed since the identiﬁcation results depend on the measurements at the 
current and previous time steps. Nevertheless, the time delay was acceptably small.
Figure 3.16 shows the estimation results of the noise parameters. The vertical 
dashed line in Fig. 3.16 represents the time instant t equals 21.32 normal swhen the training phase 
was terminated. It is not surprising that there was small time delay for the estimation 
result of the peak values of the nonstationary process noise. The parameters were 
estimated based on the current and previous data, so it took time to fade out the effect 
of the previous data. Nevertheless, this delay was acceptably small and the proposed 
method provided satisfactory estimation result of the process noise. In addition, the 
estimation result of the measurement noise was accurate and it was within the 99.7% 
credible intervals.
3.4.2.2
Case 2. Stationary Horizontal Ground Excitation 
and Nonstationary Vertical Ground Excitation 
In this case, the bridge was subjected to ground excitations in both horizontal and 
vertical directions: 
bo ld itali c f left parent
hesis t right parenthesis equals left bracket f Subscript h Baseline left parenthesis t right parenthesis comma f Subscript v Baseline left parenthesis t right parenthesis right bracket Superscript normal upper T
where the horizontal ground excitation bo ld italic f Subscript h was modeled as stationary zero-mean 
Gaussian white noise with spectral intensity upp er S 0  equals  5.0 times 10 Superscript negative 6 Baseline normal m squared divided by normal s cubed. The nonsta-
tionary vertical ground excitation bo ld italic f Subscript v was modeled as a modulated zero-mean 
Gaussian white noise given as: 
f Subscri pt v Baseline
 left parenthesis t right parenthesis equals script upper W Subscript f Sub Subscript v Baseline left parenthesis t right parenthesis ModifyingAbove g With two dots Subscript v Baseline left parenthesis t right parenthesis

3.4 Applications
101
Fig. 3.14 Estimation results of the stiffness parameters (Case 1)
where ModifyingAbove g With two dots Subscript v is the vertical ground acceleration modeled as zero-mean Gaussian white 
noise with spectral intensity upp er  S S ubscrip t v Baseline equals 5.0 times 10 Superscript negative 6 Baseline normal m squared divided by normal s cubed; s cript upper W Subscript f Sub Subscript v was the modulating 
function given by: 
s cript up
p
e
r
 
W Su bscri
pt  f Sub Subscript v Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr ipt up per W Subscript f Sub Subscript v Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
scr i
pt  uppe
r W Subscript f Sub Subscript v Baseline left parenthesis t right parenthesis equals StartLayout Enlarged left brace 1st Row 1st Column 1 2nd Column 0 less than t less than or equals t Subscript a Baseline 2nd Row 1st Column 1 plus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction exp left parenthesis 1 minus StartFraction t minus t Subscript a Baseline Over t Subscript b Baseline EndFraction right parenthesis 2nd Column t greater than t Subscript a EndLayout
where t S ubscri pt a Baseline equals 150 normal s and t S ubscr ipt b Baseline equals 10 normal s. Then the covariance matrix of the excitations can 
be expressed as:

102
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.15 Estimation results of the damping coefﬁcients (Case 1)
b old u
p
per 
Sigma
 S
u
bscr
ipt f
 
comma i Baseline equals Start 2 By 2 Matrix 1st Row 1st Column sigma Subscript f Sub Subscript h Subscript comma i Superscript 2 Baseline 2nd Column 0 2nd Row 1st Column 0 2nd Column sigma Subscript f Sub Subscript v Subscript comma i Superscript 2 EndMatrix
Therefore, the noise parameter vector consisted of three parameters: 
bold i
t
alic
 psi Su b scr
ipt i p l us 
1 Bas
eli
ne equals left bracket sigma Subscript f Sub Subscript h Subscript comma i Superscript 2 Baseline comma sigma Subscript f Sub Subscript v Subscript comma i Superscript 2 Baseline comma sigma Subscript n comma i plus 1 Superscript 2 Baseline right bracket Superscript normal upper T
The initial noise parameter vector and the associated covariance matrix were taken 
as: 
bold italic psi Su
bscript 0 vertical bar 0 Baseline equals left bracket 1 comma 1 comma 1 right bracket Superscript normal upper T
bold up per Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 3
bold
 upper Sigma Subscript psi comma 0 vertical bar 0 Baseline equals one ninth bold upper I 3

3.4 Applications
103
Fig. 3.16 Estimation results of the noise parameters (Case 1)
The estimation results of the stiffness parameters and damping coefﬁcients are 
ﬁrst shown in Figs. 3.17 and 3.18, respectively. It is observed that the presented 
approach provides satisfactory estimations for both stiffness parameters and damping 
coefﬁcients. Time delay for tracking the stiffness parameters was expected because 
the identiﬁcation results depended on the data at the current and previous time steps. 
As a result, it was inevitable for the existence of a time lag. Nevertheless, the time 
delay was acceptably small for tracking the sudden damage of the bridge.

104
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
Fig. 3.17 Estimation results of the stiffness parameters (Case 2)
Figure 3.19 shows the estimated noise parameters. Again, the vertical dashed 
lines represent the time instant t equals 2 2.14 normal s when the training phase was terminated. 
The proposed method performed satisfactorily in tracking the process noise in both 
horizontal and vertical directions. In addition, the measurement noise could also be 
estimated accurately. It is observed that there was small time delay for tracking the 
variations of the noise parameter of the vertical excitation. This time lag was expected 
because the estimation was based on the data at the current and previous time steps.

3.4 Applications
105
Fig. 3.18 Estimation results of the damping coefﬁcients (Case 2)
Fig. 3.19 Estimation results of the noise parameters (Case 2)

106
3
Real-Time Updating of Noise Parameters for System Identiﬁcation
3.5 
Concluding Remarks 
In this chapter, we introduced a real-time updating approach for the noise covariance 
matrices in the extended Kalman ﬁlter. The proposed approach utilizes the Bayesian 
probabilistic algorithm to formulate the posterior probability density function of the 
noise parameters which govern the noise covariance matrix in the extended Kalman 
ﬁlter. A two-phase numerical approach is presented to solve the optimization problem 
formulated by the Bayesian inference. The proposed method resolves the possible 
divergence problem due to adhoc selection of the noise covariance matrices in the 
ﬁlter. Moreover, reliable real-time uncertainty quantiﬁcation can be achieved due to 
the reliable estimation of the noise parameters. In addition, since the noise parameters 
are updated in a real-time manner for every time step, the proposed approach is 
applicable for both stationary and nonstationary responses. The proposed approach 
outperforms in real-time system identiﬁcation and uncertainty quantiﬁcation, and it 
has high potential for a wide range of applications. 
References 
Azam SE, Chatzi E, Papadimitriou C (2015) A dual Kalman ﬁlter approach for state estimation via 
output-only acceleration measurements. Mech Syst Signal Pr 60(2015):866–886 
Bavdekar VA, Deshpande AP, Patwardhan SC (2011) Identiﬁcation of process and measurement 
noise covariance for state and parameter estimation using extended Kalman ﬁlter. J Process Contr 
21(4):585–601 
Bèlanger PR (1974) Estimation of noise covariances for a linear time-varying stochastic process. 
Automatica 10:267–275 
Dempster AP, Laird NM, Rubin D (1977) Maximum likelihood from incomplete data via the EM 
algorithm. J R Stat Soc B 3:1–38 
Hoshiya M, Saito E (1984) Structural identiﬁcation by extended Kalman ﬁlter. J Eng Mech 
110(12):1757–1770 
Kalman RE (1960) A new approach to linear ﬁltering and prediction problems. J Fluids Eng 
82(1):35–45 
Koh CG, See LM (1994) Identiﬁcation and uncertainty estimation of structural parameters. J Eng 
Mech 120(6):1219–1236 
Lin JS, Zhang Y (1994) Nonlinear structural identiﬁcation using extended Kalman ﬁlter. Comput 
Struct 52(4):757–764 
Mehra RK (1970) On the identiﬁcation of variance and adaptive Kalman ﬁltering. IEEE T Automat 
Contr 15(2):175–184 
Mohamed AH, Schwarz KP (1999) Adaptive Kalman ﬁltering for INS/GPS. J Geodesy 73:193–203 
Myers KA, Tapley BD (1976) Adaptive sequential estimation with unknown noise statistics. IEEE 
Trans Automat Control 21:520–523 
Odelson BJ, Lutz A, Rawlings JB (2006) The autocovariance-least squares method for estimating 
covariances: application to model-based control of chemical reactors. IEEE Trans Control Syst 
Technol 14(3):532–540 
Odelson BJ, Rajamani MR, Rawlings JB (2006b) A new autocovariance least-squares method for 
estimating noise covariances. Automatica 42(2):303–308 
Shumway RH, Stoffer DS (2000) Time series analysis and its applications. Springer, New York

References
107
Yuen KV (2010) Bayesian Methods for Structural Dynamics and Civil Engineering. John Wiley & 
Sons 
Yuen KV, Hoi KI, Mok KM (2007) Selection of noise parameters for Kalman ﬁlter. Earthq Eng 
Struct D 6(1):49–56 
Yuen KV, Kuok SC (2016) Online updating and uncertainty quantiﬁcation using nonstationary 
output-only measurement. Mech Syst Signal Pr 66:62–77 
Yuen KV, Liang PF, Kuok SC (2013) Online estimation of noise parameters for Kalman ﬁlter. Struct 
Eng Mech 47(3):361–381

Chapter 4 
Outlier Detection for Real-Time System 
Identiﬁcation 
Abstract This chapter introduces an algorithm for detecting anomalous data in the 
measurements from time-varying systems. The probability of outlier of a data point 
is deﬁned and derived and this algorithm utilizes it to evaluate the outlierness of each 
data point. The probability of outlier integrates the normalized residual, the measure-
ment noise level and the size of the dataset, and provides a systematic and objective 
criterion to effectively screen the possibly abnormal data points in the observations. 
Instead of using other adhoc judgement on selecting outliers, the proposed method 
provides an intuitive threshold 0.5 for outlier detection. Computationally efﬁcient 
techniques are introduced to alleviate the heavy burden encountered in the identiﬁ-
cation using long-term monitoring data. The proposed outlier detection algorithm is 
embedded into the extended Kalman ﬁlter. Therefore, it can remove the outliers in the 
measurements and identify the time-varying systems simultaneously. By excluding 
the outliers in the measurements, the proposed algorithm ensures the stability and 
reliability of the estimation. Examples are presented to illustrate the practical aspects 
of detecting outliers in the measurements and identifying time-varying systems in a 
real-time manner. The algorithm presented in this chapter is suitable for centralized 
identiﬁcation while the algorithm presented in Chap. 7 is suitable for distributed 
identiﬁcation. 
Keywords Outlier detection · Probability of outlier · Intuitive threshold ·
Outliers · Structural health monitoring 
4.1 
Introduction 
In this chapter, we introduce an efﬁcient outlier removal algorithm for real-time 
system identiﬁcation. This context is highly demanded in practical situations, in 
which it is desired to perform data cleansing before evaluating the state of systems. 
The quality of data obtained from physical apparatuses is generally affected by noise, 
malfunction of instruments, and error in data transmission and transmission. On the 
other hand, human error, environmental disturbances, changes in system behavior 
and unmodeled mechanism of the concerned system may also seriously affect the 
data quality. The aforementioned factors lead to outliers in the dataset and further
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_4 
109

110
4
Outlier Detection for Real-Time System Identiﬁcation
degrade the decision-making process. As a result, it is crucially important to ensure 
the reliability and accuracy of the sensor data for system identiﬁcation. 
Outliers are also known as abnormalities, deviants, or anomalies in data mining 
and statistics literature. The classical deﬁnition of outliers was given by Hawkins 
(1980): ‘An outlier is an observation which deviates so much from the other obser-
vations as to arouse suspicions that it was generated by a different mechanism’. In 
system identiﬁcation, outliers can be considered as the measurements that deviate 
signiﬁcantly from the normal pattern of the observations. Outlier detection is the 
process to search the data points that do not follow the normal pattern of the sensing 
data. A successful outlier detection algorithm can enhance the data reliability and 
improve the robustness of data analysis. On the other hand, the detected outliers 
can be used as fault detection (Luo et al. 2005) and event reporting of interest 
(Krishnamachari and Iyengar 2004). 
In recent years, the topic about outlier detection has attracted much attention, and 
it has been widely researched in various disciplines, such as statistics (Rousseeuw 
and Hubert 2018), physics (Thaprasop et al. 2021), economy (Punzo et al. 2018), 
and information theory (Dong et al. 2019). There are two typical types of evaluation 
output for outlier detection algorithms, i.e., outlier score and binary label. Outlier 
score is used to quantify the level of outlierness for a data point, and to rank the data 
points in an order of their outlier tendency. Binary label is utilized to classify the 
data points into normal or abnormal. Outlier score can also be converted into binary 
label by imposing some thresholds on the outlier scores. Although a binary label 
contains less information than an outlier score, it is the ﬁnal decision necessary for 
the detection of the abnormal data in dataset. 
According to the concentration of the anomalous data points, outliers can be 
classiﬁed as isolated outliers and segmental outliers. Isolated outlier, also known as 
spike (Quiroga et al. 2004), is normally represented as an arbitrary change, and is 
extremely different from the rest of the data. Isolated outliers in the proﬁle often 
appear independently in time series, and they can be caused due to various sources, 
such as transient malfunction of sensing devices, human error, and/or sudden change 
of the system model. Segmental outliers last for a certain time period and change the 
historical pattern of the observations. Thus, segmental outlier detection can be used 
to detect the occurrence of the concerned events, such as air pollution (Ottosen and 
Kumar 2019), equipment failure (Li et al. 2009) and network intrusion (Zhang et al. 
2008). 
Note that the determination of an outlier usually requires subjective judgment. 
For example, a commonly used criterion is that a data point with absolute value of 
the deviation larger than 2.5 times of the standard deviation will be considered as an 
outlier. Therefore, the determination of the threshold is crucially important for outlier 
detection and efforts have been devoted (Zhang et al. 2010). Such threshold is usually 
user-speciﬁed and ﬁxed. A proper threshold is vital for an outlier detection method 
to achieve satisfactory performance. Speciﬁcally, if the threshold is selected to be 
too restrictive, the algorithm will miss many true outlier data points, resulting in high 
level of false negative. On the other hand, if the threshold is chosen to be too loosely, 
the detection results will conclude too many outlier data points, leading to high level

4.1 Introduction
111
of false positive. This trade-off can be quantiﬁed in terms of two commonly used 
indicators, namely masking and swamping. In the following, a widely-used outlier 
detection criterion is introduced and its performance under different conditions is 
evaluated. 
Example. Empirical rule for outlier detection. 
In this example, we investigate the performance of a simple and well-known empirical 
rule for outlier detection. First, let us brieﬂy introduce this empirical rule (also known 
as 68-95-99.7 rule) and its modiﬁcation for outlier detection. This empirical rule is 
often used as a simple test for outliers when the population is assumed to be Gaussian. 
For a Gaussian data set, 68%, 95% and 99.7% of the values lie within one, two, and 
three standard deviations from the mean, respectively: 
upper P left  parenthesis mu minus sigma less than or equals upper X less than or equals mu plus sigma right parenthesis almost equals 68.27 percent sign
upper P left parenthesis mu minu
s 2 sigma less than or equals upper X less than or equals mu plus 2 sigma right parenthesis almost equals 95.45 percent sign
upper P left parenthesis mu minus 3 sigma less than or equals upper X less than or equals mu plus 3 sigma right parenthesis almost equals 99.73 percent sign
where upper P left parenthesis dot right parenthesisdenotes the probability of the event in its argument; upper X is an observation 
from a Gaussian random variable; muis the mean of the distribution; and sigma is its 
standard deviation. Figure 4.1 shows the schematic diagram of Eq. (4.1). 
Fig. 4.1 Probability density function of a Gaussian distribution up per
 
X tilde script upper N left parenthesis mu comma sigma squared right parenthesis

112
4
Outlier Detection for Real-Time System Identiﬁcation
Then, the outlier detection criterion is given as follows: 
StartFraction StartAbsoluteValue epsilon EndAbsoluteValue Over sigma EndFraction greater than alpha
St a r
tFraction StartAbsoluteValue epsilon EndAbsoluteValue Over sigma EndFraction greater than alpha
where StartAbsoluteValue epsilon EndAbsoluteValueis the absolute value of the residual epsilon; sigma is the standard deviation; and 
alphais a threshold value. In the literature, the threshold value is often assigned to be 
alpha equals 2.5 as a moderately conservative choice (Leys et al. 2013). As a result, the outlier 
detection can be performed as follows. For a given sample set, one can compute the 
absolute normalized residuals and compare these with the prescribed threshold. For 
those points falling more than 2.5 standard deviations away from the model output, 
they will be considered as “likely outliers”. Next, we will evaluate the performance 
of the outlier detection criterion in Eq. (4.2) under three different scenarios. 
Case 1. Outlier detection using datasets with different sizes 
First, we investigate the relationship between the size of dataset and the threshold 
value. Let us compare the outlier detection results under two different sizes of dataset 
with up er N 1 equals 10 and upp er N 2 equals 1000 data points. In order to simplify the problem, it is 
assumed that these two datasets are generated from the same bivariate Gaussian 
distribution with zero mean and covariance matrix bold upper I 2, given by: 
bo ld 
i
talic x tild
e
 script upper N left parenthesis left bracket 0 comma 0 right bracket Superscript normal upper T Baseline comma bold upper I 2 right parenthesis
where bold upper I 2 is the 2 times 2 identity matrix. 
Note that there is no outlier in both cases but we applied the criterion in Eq. (4.2) 
for outlier detection to these two clean datasets. In this application, the same deﬁnite 
threshold alpha equals 2.5 is used. In other words, the data points with absolute normalized 
residuals larger than 2.5 are considered as outliers. Otherwise, they are identiﬁed 
as regular data points. Figures 4.2 and 4.3 show the outlier detection results of the 
two datasets for upp er N 1 equals 10 and upp er N 2 equals 1000, respectively. The circles represent the 
identiﬁed regular data points, and the dots represent the identiﬁed outliers. The dashed 
lines represent the bounds with plus and minus alpha. For the dataset with upp er N 1 equals 10, all  
the data points lie within the 2.5 standard deviations box so no outlier is identiﬁed. 
However, for the dataset with upp er N 2 equals 1000 data points, it is clearly seen that there are 
26 data points fall more than 2.5 standard deviations box. As a result, these 26 data 
points will be mistakenly detected as outlier. This simple example indicates that the 
threshold should be chosen according to the data size as it affects the size of the box. 
The threshold should be larger for more data points and there is no universal value 
which ﬁts for data of different sizes.
Case 2. Outlier detection using datasets with different noise levels 
In Case 2, we investigate the relationship between the level of measurement noise 
and the threshold value. 500 (i.e., up per N equals 500) noise-free points were generated by a 
bivariate Gaussian distribution with zero mean and covariance matrix bold upper I 2:

4.1 Introduction
113
Fig. 4.2 Outlier detection results for the dataset with up er N 1 equals 10 data points 
Fig. 4.3 Outlier detection results for the dataset with up er N 2 equals 1000 data points

114
4
Outlier Detection for Real-Time System Identiﬁcation
bo ld 
i
talic x tild
e
 script upper N left parenthesis left bracket 0 comma 0 right bracket Superscript normal upper T Baseline comma bold upper I 2 right parenthesis
Then, assume that these data points are observed through an imperfect instrument, 
and the observations are given by: 
bol d ita lic z 
Su bscript  i  B asel
ine equals bold italic x Subscript i Baseline plus bold italic n Subscript i Baseline comma i equals 1 comma 2 comma ellipsis comma 500
where bold italic z Subscript i is the ith measured data point; bold italic n Subscript i represents the measurement noise of the 
ith measured data point and bold italic n is modeled as zero-mean Gaussian independent and 
identically distributed (i.i.d.) process. 
Three different noise levels are considered in this case. In particular, the noise 
levels for the ﬁrst, second and third dataset are taken as 0.05, 0.25 and 0.5. Again, 
note that there is no outlier in these three datasets but we applied the criterion in 
Eq. (4.2) for outlier detection. 
By implementing the outlier detection criterion in Eq. (4.2) with the deﬁnite 
threshold alpha equals 2.5, the detected outliers in the datasets with different noise levels are 
shown in Figs.  4.4, 4.5 and 4.6. Again, the regular data points are marked as circles 
and the detected outliers are marked as dots. The dashed lines represent the bounds 
with plus and minus 2.5. It is seen that the number of the detected outliers in the 
datasets with 0.05, 0.25 and 0.5 noise level is 7, 12 and 25, respectively. Therefore, 
7, 12 and 25 data points are misclassiﬁed as outliers in the datasets with 0.05, 0.25, 
and 0.5 noise level, respectively. However, by utilizing a deﬁnite threshold alpha equals 2.5
to detect the outliers in the datasets with different noise levels, the number of the 
detected outliers grows with the increasing noise level. As a result, it is necessary to 
consider the measurement noise level for outlier detection. A larger threshold should 
be chosen for the dataset with higher measurement noise level.
Case 3. Outlier detection using different thresholds 
In Case 3, we investigate the outlier detection results using different thresholds alpha. 
Again, consider a two-dimensional dataset generated from the bivariate Gaussian 
distribution in Eq. (4.3), and the number of data points is taken as up per N equals 500. Five  
threshold values, namely 2, 2.4, 2.5, 2.6 and 3, are considered to detect the outliers 
in the dataset. 
Figures 4.7, 4.8, 4.9, 4.10 and 4.11 show the outlier detection results with different 
threshold values. The identiﬁed regular data points are marked as circles, and the 
detected outliers are marked as dots. The dashed lines represent the bounds with plus 
and minus 2, 2.4, 2.5, 2.6 and 3 in Figs. 4.7, 4.8, 4.9, 4.10 and 4.11, respectively. It 
is seen that the number of the detected outliers in Figs. 4.7, 4.8, 4.9, 4.10 and 4.11 is 
45, 18, 15, 12 and 6, respectively. As a result, the selection of the thresholds severely 
affects the outlier detection results, even though the differences of the thresholds 
are mild. It is observed that the difference between the outlier detection results 
using thresholds al pha equals 2 and al pha equals 3 is huge. Therefore, the outlier detection result 
using the criterion in Eq. (4.2) is very sensitive to the choice of the threshold. In 
addition, this threshold is usually assigned by the user based on prior information

4.1 Introduction
115
Fig. 4.4 Outlier detection results for the dataset with 0.05 noise level 
Fig. 4.5 Outlier detection results for the dataset with 0.25 noise level

116
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.6 Outlier detection results for the dataset with 0.5 noise level
or experience, and thus the decision-making processing concerning the exclusion 
criterion of abnormal data is unavoidably subjective. On the other hand, although 
an optimized level of the threshold can be obtained by some optimization methods, 
i.e., minimizing false positive and false negative (Japkowicz et al. 1995), it is usually 
computationally demanding and fails to provide prompt decisions for time-varying 
systems. Moreover, it requires a large dataset.
In conclusion, it is found that the number of detected outliers not only relies on 
the normalized residuals, but also is inﬂuenced by the size of the dataset and the 
noise level. On the other hand, a proper value of the threshold is crucial for outlier 
detection methods to achieve good performance. As a result, it is inappropriate to 
detect the outliers by simply considering the normalized residuals and a subjective 
assignment of the threshold. 
In this chapter, we introduce a novel outlier detection approach for real-time 
system identiﬁcation. The proposed outlier removal method is embedded into the 
extended Kalman ﬁlter (EKF), so simultaneous outlier detection and system iden-
tiﬁcation can be realized in a real-time manner. The proposed approach integrates 
the size of the dataset, the noise level and the normalized residual to obtain the 
probability of outlier for the evaluation of the outlierness of a data point. In the 
next section, the probability of outlier is deﬁned and elaborated. Two computational 
efﬁciency enhancement techniques are also introduced to release the memory and 
computational burden of the proposed method for long-term monitoring in Sect. 4.3. 
Section 4.4 summarizes the details of the proposed outlier detection algorithm. In

4.1 Introduction
117
Fig. 4.7 Outlier detection results using the threshold alpha equals 2
Fig. 4.8 Outlier detection results using the threshold alpha equals 2.4

118
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.9 Outlier detection results using the threshold alpha equals 2.5
Fig. 4.10 Outlier detection results using the threshold alpha equals 2.6

4.2 Outlier Detection Using Probability of Outlier
119
Fig. 4.11 Outlier detection results using the threshold alpha equals 3
Sect. 4.5, illustrative examples are presented for the outlier detection in application 
of damage identiﬁcation for a single-degree-of-freedom oscillator and a 14-bay truss. 
Finally, conclusion of the method will be given in Sect. 4.6. 
4.2 
Outlier Detection Using Probability of Outlier 
4.2.1 
Normalized Residual of Measurement 
Consider a dynamical system with uper N Subscript d degrees of freedom (DOFs) and equation of 
motion: 
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, respec-
tively; the stiffness and damping matrix are parameterized with possibly time-varying 
model parameters bold it
a
lic theta left pa ren thesis t right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold italic theta Subscript k Baseline left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column bold italic theta Subscript c Baseline left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript theta; bold italic f is the excitation applied to 
the system and bold upper T is the inﬂuence matrix associated with the excitation bold italic f . Deﬁne the 
augmented state vector bold i
t
alic y l eft parenthesis  t right parenthesis identical to Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T Baseline comma 3rd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript d plus upper N Super Subscript theta composed of the 
displacement, velocity and unknown model parameter vector. Then, Eq. (4.6) can be

120
4
Outlier Detection for Real-Time System Identiﬁcation
discretized and expressed as follows: 
bold itali c y  Subs cr ip t i 
plus 1 Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i Baseline plus bold upper B Subscript i Baseline bold italic f Subscript i Baseline plus bold italic delta Subscript i
where bol d italic y Subscript i Baseline identical to bold italic y left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesis, normal upper Delta t is the sampling time step; bold upper A Subscript i and bold upper B Subscript i are the 
transitional and input-to-state matrices, respectively; and bold italic delta Subscript i is the remainder term 
due to the local linearization approximation. Detailed derivation of Eq. (4.7) and bold upper A Subscript i, 
bold upper B Subscript i, bold italic delta Subscript i can be found in Chap. 2. 
Discrete-time response measurements bold it a l i c  z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i plus 1 Baseline are observed at uper N 0 DOFs: 
bold ita
l
ic z
 
Subscr
ipt i plus 1 Baseline equals h left parenthesis bold italic y Subscript i plus 1 Baseline right parenthesis plus bold italic n Subscript i plus 1
where h left parenthesis dot right parenthesisdeﬁnes the observation quantities; bold italic n Subscript i plus 1 represents the measurement noise 
at the (i + 1)th time step and the measurement noise is modeled as Gaussian i.i.d. 
process with zero mean and covariance matrix bol d upper Sigma Subscript n Baseline element of double struck upper R Superscript upper N 0 times upper N 0. Then, the one-step-
ahead predictor of the measurements bold italic z Subscript i plus 1 vertical bar i can be readily obtained by taking the 
expected value of Eq. (4.8): 
bold it alic z Subscr
ipt i plus 1 vertical bar i Baseline equals bold upper H Subscript i plus 1 Baseline bold italic y Subscript i plus 1 vertical bar i
where bold upper H Subscript i plus 1 is the observation matrix at the lef t parenthesis i plus 1 right parenthesisth time step; and bold italic y Subscript i plus 1 vertical bar i is the 
one-step-ahead predicted state vector. 
In this chapter, we consider the general situation that every channel of the measure-
ments is possibly polluted with outliers. Denote z Sub
script i plus 1 Superscript left parenthesis c right parenthesis to represent the cth component 
(channel) of the measurement bold italic z Subscript i plus 1 and z Sub
script i plus 1 vertical bar i Superscript left parenthesis c right parenthesis to represent the cthcomponent of the 
one-step-ahead predictor of the measurements bold italic z Subscript i plus 1 vertical bar i . The normalized residual for 
z Sub
script i plus 1 Superscript left parenthesis c right parenthesis can be deﬁned as (Myers and Tapley 1976):
epsil
on S ub
scrip
t i plus 1 
Superscript left parenthesis c right parenthesis Baseline equals StartFraction z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline Over sigma Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndFraction
epsilo
n Su
bscript i plus 1 Superscript left parenthesis c right parenthesis Baseline equals StartFraction z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline Over sigma Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndFraction
where sigma 
Subscript i plus 1 Superscript left parenthesis c right parenthesis is the standard deviation of the one-step-ahead predictor. For the regular 
measurement noise, the probability model is Gaussian, so the probability of a data 
point falling outside the interval
l
e
ft paren
the
sis 
minus St
art
Abs
oluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right parenthesis
is 
q Sub
scri pt i
 
p
lus 1 Su
per
scr
i
pt left parenthesis c right parenthesis Baseline equals 2 normal upper Phi left parenthesis minus StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right parenthesis
where normal upper Phi left parenthesis dot right parenthesisis the cumulative distribution function of the standard Gaussian random 
variable. The shaded area in Fig. 4.12 represents the probability q Sub
script i plus 1 Superscript left parenthesis c right parenthesis.

4.2 Outlier Detection Using Probability of Outlier
121
Fig. 4.12 Schematic diagram of the probability q Sub
script i plus 1 Superscript left parenthesis c right parenthesis
4.2.2 
Probability of Outlier 
In this subsection, the probability of a data point being regarded as an outlier is given. 
Consider a dataset German
 upper R Subscript i Superscript left parenthesis c right parenthesis
at the ith time step for the cth measurement channel including 
the absolute normalized residuals of the regular data points up to the ith time step: 
German
 u
p
per R Sub
s
cri pt i Su
pe
rsc ri pt left paren thesis c right p a r e n th
e
sis Baseline equals left brace StartAbsoluteValue epsilon Subscript j Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue colon z Subscript j Superscript left parenthesis c right parenthesis Baseline is a regular data point comma j equals 1 comma 2 comma ellipsis comma i right brace
The initial dataset German
 u pper  R 0 Su p e r s cript left parenthesis c right parenthesis Baseline comma c equals 1 comma 2 comma ellipsis comma upper N 0, is an empty set and the variable u
p
per N 
l
eft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket
is 
deﬁned to indicate the number of elements in German
 upper R Subscript i Superscript left parenthesis c right parenthesis . The variable kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis is then deﬁned 
to denote the number of previous regular data points in German
 upper R Subscript i Superscript left parenthesis c right parenthesis
with absolute normalized 
residual not smaller than that of the current time step: 
kappa 
Subs cri
p
t i pl
us  1 Su
perscrip
t l
eft  parenth
es is c ri ght par e n t h es
i
s Base
l
in
e equals bold script upper L left brace German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesis colon StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue less than or equals German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesis comma k equals 1 comma 2 comma ellipsis comma upper N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket right brace
where bold script upper L left brace upper X right braceindicates the length of the set upper X; and German
 u pper R Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesisis the kth element of 
the dataset German
 upper R Subscript i Superscript left parenthesis c right parenthesis . In other words, kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis counts the number of the absolute normal-
ized residuals of the previous regular data points in German
 upper R Subscript i Superscript left parenthesis c right parenthesis
falling outside the interval

122
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.13 Schematic diagram of the dataset German
 upper R Subscript i Superscript left parenthesis c right parenthesis
and the variable kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
. The schematic diagram of the dataset German
 upper R Subscript i Superscript left parenthesis c right parenthesis
and the variable kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis is 
shown in Fig. 4.13. 
In order to construct the model for the probability of outlier, we consider the 
probability that the Gaussian noise model does not generate as many large residual 
data points as occur. A random variable etais introduced to indicate the number 
of data points among the u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard Gaussian samples fall outside the 
interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
. Then, the probability that no point (i.e., eta equals 0) among 
the u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 regular data points up to the ith time step falls outside the interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
is considered. In other words, the probability that the residuals of 
all u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard Gaussian samples fall in the interval
l
e
ft paren
the
sis 
minus St
art
Abs
oluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right parenthesis
is 
evaluated and it is given by: 
upper P le
f
t parenth
esi
s 
e
ta eq
u
a
ls 
0 right parenthesis equals left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket plus 1
The probability that there is one point (i.e., eta equals 1) among the u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 regular 
data points up to the (i + 1)th time step falls outside the interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
is

4.2 Outlier Detection Using Probability of Outlier
123
given by: 
upper P le
f
t
 
parent
h
e
sis
 
eta equ
als 1
 
ri ght par
ent
he
s
is eq
u
a
ls left parenthesis upper N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 right parenthesis dot q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline dot left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket
Similarly, the probability that there are etapoints among the u
p
per N 
l
e
f t bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard 
Gaussian samples fall outside the interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
is given by: 
upper 
P
 
l
eft pa
r
e
nthe
s
i
s eta r
ight
 pa
r
en thesis 
equ
al
s
 Star
t
B
inomi
alOrMatrix upper N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 Choose eta EndBinomialOrMatrix dot q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline Superscript eta Baseline dot left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket plus 1 minus eta
where
S ta
r
t
Bi
nomialOrMatrix a Choose b EndBinomialOrMatrix equals StartFraction a factorial Over b factorial left parenthesis a minus b right parenthesis factorial EndFraction
StartBinomialOrMatrix a Choose b EndBinomialOrMatrix equals StartFraction a factorial Over b factorial left parenthesis a minus b right parenthesis factorial EndFraction is a binomial coefﬁcient. 
As a result, the probability of outlier can be considered as the probability to obtain 
a data point with very large residual. Then, it can be deﬁned that there are no more 
than kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis samples among u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard Gaussian samples fall outside the 
interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
. In other words, this probability is given as that the absolute 
normalized residuals of no more than kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis data points among u
p
per N 
l
e
f t bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard 
Gaussian samples are larger than
StartAbs
olu
teValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue: 
up
p
er P 
Sub
s
cri
p
t o Baseli
ne 
l
eft parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis identical to upper P left parenthesis eta less than or equals kappa Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis
It is noted that this random variable etafollows the binomial distribution with 
probability q Sub
script i plus 1 Superscript left parenthesis c right parenthesis under u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 trials. Therefore, the probability of outlier for z Sub
script i plus 1 Superscript left parenthesis c right parenthesis
is deﬁned as the probability that no more than kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis samples fall outside the interval
l
e
ft brack
et 
minu
s StartA
bso
lut
eValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue right bracket
among u
p
per N 
l
e
ft bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 standard Gaussian samples. This probability 
can be obtained by summing up the probabilities from eta equals 0 to eta equals
 kappa Subscript i plus 1 Superscript left parenthesis c right parenthesis: 
St
a
rtLay
out
 
1st Row 1st Column upper P Subscri pt  o  B as
e
line left 
par
e
nt
hesis 
z S
u
bsc
r
i
p
t i pl
u
s
 1 S
u
pe
rscri
pt 
lef
t parenth
esi
s 
c
 righ
t
 
paren
thesis Baseline right parenthesis equals 2nd Column upper P left parenthesis eta equals 0 right parenthesis plus upper P left parenthesis eta equals 1 right parenthesis plus upper P left parenthesis eta equals 2 right parenthesis plus midline horizontal ellipsis plus upper P left parenthesis eta equals kappa Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column sigma summation Underscript eta equals 0 Overscript kappa Subscript i plus 1 Superscript left parenthesis c right parenthesis Endscripts StartBinomialOrMatrix upper N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 Choose eta EndBinomialOrMatrix left parenthesis q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript eta Baseline left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket plus 1 minus eta EndLayout
As a result, the outlier detection criterion is given by: 
St
art
Lay
ou
t
 Enla
rge
d
 left b race 
1st Row  1s t Column
 B
l
ank 2
nd 
C
olumn u pper 
P Su bsc ri pt o Bas eline  left 
parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis greater than or equals 0.5 comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column upper P Subscript o Baseline left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis less than 0.5 comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point EndLayout

124
4
Outlier Detection for Real-Time System Identiﬁcation
It is intuitive to choose the outlier probability threshold as 0.5. When the proba-
bility of outlier is 0.5, it implies that this data point has equal probability of being 
a regular data point or an outlier. The data point with the probability of outlier 
up
p
er P 
Sub
s
cript o Baseline left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis greater than or equals 0.5 indicates that it is more likely for this data point being an outlier 
than being a regular data point. In addition, although a data point with probability 
of outlier slightly larger than 0.5 may not necessarily be an outlier, it is suggested 
to be removed from system identiﬁcation, and this can be explained as follows. If a 
regular point is mistakenly removed, the loss of information from one measured data 
point is minor. The consequence is only slight increase of the posterior uncertainty 
of the estimation. However, if an outlier is included as a regular data point in system 
identiﬁcation, it will possibly lead to misleading results. 
Although Eq. (4.18) is sufﬁcient for the classiﬁcation of outliers, it is noticed that 
the number of elements in the set German
 upper R Subscript i Superscript left parenthesis c right parenthesis
continually grows as observations accumulate. 
As a result, a memory burden will occur for determining the variable kappa 
Subscript i plus 1 Superscript left parenthesis c right parenthesis, especially 
for long-term monitoring (Mu and Yuen 2015). On the other hand, we will develop 
two bounds for fast outlier screening. As a result, it is not necessary to compute the 
probability of outlier for every observed data. In the next section, we will present 
these two computational efﬁciency enhancement techniques. 
4.3 
Computational Efﬁciency Enhancement Techniques 
4.3.1 
Moving Time Window 
In order to enhance the efﬁciency of the proposed outlier detection method, a moving 
time window including no more than upper N Subscript w i n data points is considered. Speciﬁcally, 
instead of considering the dataset German
 upper R Subscript i Superscript left parenthesis c right parenthesis
in Eq. (4.12), a reduced dataset 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis
is deﬁned 
to consist of only the most recent min
 
l
e
ft bra
c
e
 upper
 N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket comma upper N Subscript w i n Baseline right brace
elements in German
 upper R Subscript i Superscript left parenthesis c right parenthesis : 
Ge
rm
an u
p
er R
 ov
e
r
T
ilde 
S
u
bscri
p
t i Superscript left parenthesis c right parenthesis Baseline element of double struck upper R Superscript min left brace upper N left bracket German upper R Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket comma upper N Super Subscript w i n Superscript right brace
The symbol u
p
pe
r 
N le
f
t bracket German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket
is utilized to denote the number of elements in the reduced 
dataset of regular absolute normalized residuals 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis . As a result, the probability of 
outlier of a data point z Sub
script i plus 1 Superscript left parenthesis c right parenthesis are approximated as the probabilities of outlier depending 
only on the most recent min
 
l
e
ft bra
c
e
 upper
 N left bracket German upper R Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket comma upper N Subscript w i n Baseline right brace
regular data points:

4.3 Computational Efﬁciency Enhancement Techniques
125
up
p
er P 
Sub
s
cr
ipt
 o B
ase
l
ine 
le
ft
 p
a
r
en
th
esis
 
z
 Sub
sc
ri
pt
 
i
qplus
 1 
Sup
er script 
lef
t 
p
ar
en
thes
i
s
 c ri
ght parenthesis Baseline right parenthesis almost equals sigma summation Underscript eta equals 0 Overscript kappa overTilde Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline Endscripts StartBinomialOrMatrix upper N left bracket German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket plus 1 Choose eta EndBinomialOrMatrix left parenthesis q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript eta Baseline left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R overTilde Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket plus 1 minus eta
where 
kapp
a ov
erTilde Subscript i plus 1 Superscript left parenthesis c right parenthesis is the number of elements that are no less than
StartAbs
olu
teValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue in the reduced 
dataset 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis : 
kapp
a ov
erTi lde
 
Su
bs
crip
t i plu
s 1 Supe
rsc
rip t 
le
ft
 par
en thesis c right  p a r en
t
he
si
s Ba
s
el
ine equals bold script upper L left brace ModifyingAbove German upper R With tilde Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesis colon StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue less than or equals ModifyingAbove German upper R With tilde Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesis comma k equals 1 comma 2 comma ellipsis comma upper N left bracket ModifyingAbove German upper R With tilde Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket right brace
where 
Mo
di
fyin
gA bove German upper R With tilde Subscript i Superscript left parenthesis c right parenthesis Baseline left parenthesis k right parenthesisis the kth element of the dataset 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis . 
This moving time window technique is utilized to mitigate the memory burden in 
measurement storage for long-term monitoring because only the most recent upper N Subscript w i n
data points, instead of all data points in the history, will need to be stored and 
computed. In addition, it is suitable to consider the past data points in a reasonably 
short time window due to the possibly changing conditions in long-term monitoring. 
It is suggested to use a value of upper N Subscript w i n to cover approximately 100 fundamental periods 
of the underlying dynamical system. 
4.3.2 
Efﬁcient Screening Criteria 
It is obvious that computing the probability of outlier for every observed data point 
in each measurement channel induces a heavy computational burden. Therefore, 
efﬁcient screening criteria are introduced for fast screening. As a result, it is no 
longer necessary to compute the probability of outlier in Eq. (4.18). 
We develop two bounds of the absolute normalized residual
StartAbs
olu
teValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue, namely epsilon Subscript u and
epsilon Subscript l such that: 
St
art
La
yout Enl
arg
ed l eft brace
 1st  Ro w 1 st Colu
mn Blank
 2n
d C o lumn Start
Abso lut eV alue eps ilon Subscr
ipt i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue greater than or equals epsilon Subscript u Baseline comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue less than or equals epsilon Subscript l Baseline comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point EndLayout
In other words, an observation z Sub
script i plus 1 Superscript left parenthesis c right parenthesis will be recognized as a regular data point if its 
absolute normalized residual
StartAbs
olu
teValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue is not more than epsilon Subscript l. On the contrary, an observa-
tion z Sub
script i plus 1 Superscript left parenthesis c right parenthesis will be recognized as an outlier if its absolute normalized residual
StartAbs
olu
teValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue is 
larger than or equal to epsilon Subscript u. Note that these two bounds are not tight bounds but they 
can still enhance the computational efﬁciency by avoiding the computation of the 
probability of outlier for a large portion of data points.

126
4
Outlier Detection for Real-Time System Identiﬁcation
Next, we determine the value of epsilon Subscript l and epsilon Subscript u. First, epsilon Subscript l can be taken as a conservatively 
small value:
eps ilo
n Subscript l Baseline equals 2
This implies that any data point with prediction error within 2 standard deviations is 
immediately classiﬁed as a regular data point. 
On the other hand, to obtain epsilon Subscript u, we have the following inequality based on 
Eq. (4.21): 
up
p
er P 
Sub
s
c
r
ip t o Bas
eli
ne
 
le
ft
 par
e
n
the
s
i
s z Subsc
rip
t i pl us 
1 Superscript left parenthesis c right parenthesis Baseline right parenthesis greater than or equals left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R overTilde Super Subscript i Super Superscript left parenthesis c right parenthesis Superscript right bracket plus 1 Baseline greater than or equals left parenthesis 1 minus q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N Super Subscript w i n Superscript plus 1
As a result, up
p
er P 
Sub
s
cript o Baseline left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis greater than or equals 0.5 when
l
ef t paren
the
sis 1 min
us q Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis Superscript upper N Super Subscript w i n Superscript plus 1 Baseline greater than or equals 0.5. 
lef t bracket 1 min us 2 nor
mal upper Phi left parenthesis minus epsilon Subscript u Baseline right parenthesis right bracket Superscript upper N Super Subscript w i n Superscript plus 1 Baseline equals 0.5
Finally, the value epsilon Subscript u is readily obtained:
eps i lon 
Subscript u Baseline equals minus normal upper Phi Superscript negative 1 Baseline left brace one half minus StartFraction 1 Over 2 Superscript 1 plus StartFraction 1 Over upper N Super Subscript w i n Superscript plus 1 EndFraction Baseline EndFraction right brace
ep s
ilon Subscript u Baseline equals minus normal upper Phi Superscript negative 1 Baseline left brace one half minus StartFraction 1 Over 2 Superscript 1 plus StartFraction 1 Over upper N Super Subscript w i n Superscript plus 1 EndFraction Baseline EndFraction right brace
epsi
lon Subscript u Baseline equals minus normal upper Phi Superscript negative 1 Baseline left brace one half minus StartFraction 1 Over 2 Superscript 1 plus StartFraction 1 Over upper N Super Subscript w i n Superscript plus 1 EndFraction Baseline EndFraction right brace
epsil on
 
Subscript u Baseline equals minus normal upper Phi Superscript negative 1 Baseline left brace one half minus StartFraction 1 Over 2 Superscript 1 plus StartFraction 1 Over upper N Super Subscript w i n Superscript plus 1 EndFraction Baseline EndFraction right brace
where normal upper Phi Superscript negative 1 is the inverse of the standard Gaussian cumulative distribution function. 
For example, if a moving time window is assigned as upper  N Subscript w i n Baseline equals 10000, the bound epsilon Subscript u
will be 3.9787. 
As a result, the probability of outlier is calculated only for the data points 
with absolute normalized residual falling into the interval left parenthesis epsilon Subscript l Baseline comma epsilon Subscript u Baseline right parenthesis. These efﬁcient 
screening rules facilitate the outlier detection process by avoiding the computation 
of the probability of outlier for a large portion of data points. 
4.4 
Outlier Detection for Time-Varying Dynamical Systems 
4.4.1 
Training Stage 
Since the initial state vector bold italic y Subscript 0 vertical bar 0 in EKF is assigned arbitrarily, it is necessary to 
perform a short training stage for the outlier detection method to gain sufﬁcient 
information to learn about the state vector bold italic y. Moreover, the training stage is also 
utilized to obtain the initial value of the standard deviation of the prediction error 
sigma 
1 Supe rscript  l e f t parenthesis c right parenthesis Baseline comma c equals 1 comma 2 comma ellipsis comma upper N 0. It is suggested to implement EKF using the raw observations

4.4 Outlier Detection for Time-Varying Dynamical Systems
127
(i.e., without outlier screening) for roughly ten fundamental periods of the under-
lying dynamical system. This time window is ﬂexible and a rough estimation of 
the fundamental frequency can be easily obtained from the Fourier spectrum of the 
response for the dynamical system. 
For each measurement channel c equals 1  c o mma 2 comma ellipsis comma upper N 0: 
1. Calculate the absolute residuals
StartAbs
olut eValue 
z Sub
script i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue for each time step in the training 
stage, and sort them in the ascending order. 
2. The initial value sigma 
1 Superscript left parenthesis c right parenthesis
can be obtained as the 68th percentile value of the sorted 
absolute residuals. 
The reason to use the 68th percentile value of the sorted absolute residuals is that 
the interval left parenthesis negative sigma comma sigma right parenthesiscovers a probability of 0.68 (see Eq. 4.1) for the Gaussian 
distribution s
c
ri p t upper N left parenthesis 0 comma sigma squared right parenthesis
. This is a robust estimator of the standard deviation in the 
presence of outliers because the extreme values do not affect this estimator in contrast 
to the common deﬁnition of standard deviation. 
4.4.2 
Working Stage 
When the training stage is terminated, the proposed algorithm will enter into the 
working stage. Then, the time index is reset to i equals 0, so the ﬁrst data point to be 
examined is bold italic z Subscript i plus 1 Baseline equals bold italic z 1. 
For each measurement channel c equals 1  c o mma 2 comma ellipsis comma upper N 0: 
1. Set the initial reduced set of regular absolute normalized residuals 
Ge
rm
an u
per R overTilde Subscript 0 Superscript left parenthesis c right parenthesis
as an 
empty set; assign upper N Subscript w i n, epsilon Subscript l using Eq. (4.24), and calculate epsilon Subscript u using Eq. (4.27). 
2. Detect outliers according to the probability of outlier: 
(1) Calculate the one-step-ahead predictor bold italic z Subscript i plus 1 vertical bar i using Eq. (4.9) and the 
normalized residual epsil
on Subscript i plus 1 Superscript left parenthesis c right parenthesis using Eq. (4.10). 
(2) Determine whether or not the observation z Sub
script i plus 1 Superscript left parenthesis c right parenthesis is an outlier: 
(a) 
if
StartAbs
olu
teV a lue e
psilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue less than or equals epsilon Subscript l Superscript left parenthesis c right parenthesis , z Sub
script i plus 1 Superscript left parenthesis c right parenthesis will be classiﬁed as a regular data point. 
(b) if
StartAbs
olu
teV a lue e
psilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue greater than or equals epsilon Subscript u Superscript left parenthesis c right parenthesis , z Sub
script i plus 1 Superscript left parenthesis c right parenthesis will be classiﬁed as an outlier. 
(c) 
if epsil
o
n
 Subscri
pt 
l S u persc
ript left parenthesis c right parenthesis Baseline less than StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue less than epsilon Subscript u Superscript left parenthesis c right parenthesis , 
i.
calculate q Sub
script i plus 1 Superscript left parenthesis c right parenthesis using Eq. (4.11) and count 
kapp
a ov
erTilde Subscript i plus 1 Superscript left parenthesis c right parenthesis according to Eq. (4.22) based 
on the dataset 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis . 
ii. 
compute the probability of outlier up
p
er P 
Sub
script o Baseline left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis
using Eq. (4.21). If up
p
er P 
Sub
s
cr
ipt o Baseline left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline right parenthesis less than 0.5, z Sub
script i plus 1 Superscript left parenthesis c right parenthesis will be classiﬁed as a regular data point. Otherwise, it will be 
recognized as an outlier and will be discarded from the identiﬁcation process. 
3. According to the outlier detection result in Step 2,

128
4
Outlier Detection for Real-Time System Identiﬁcation
(1) Update the reduced set of regular absolute normalized residuals 
Ge
rm
an u
pper R overTilde Subscript i plus 1 Superscript left parenthesis c right parenthesis as 
follows: 
St
ar
tLay
out 1s
t 
Row Germa
n upper R
 o
ve
rTil
d
e Subsc
ript  i plu s 1 Supe
rs
cr
ipt 
le
f
t parenth
esi
s c
 
ri ght p
aren the si s Baseli ne eq uals StartL a
y ou
t 
Enla
r
g
ed left
 b
ra
ce 1
st
 
Row 1st C
olu
mn 
B
l
ank 2nd C
olumn Ge
rma
n
 u pper 
R ov erT il de Subsc ript i Superscri p
t  l
ef
t pa
r
e
nthesis
 c right parenthesis Baseline comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline union StartSet StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue EndSet comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point comma and upper N left bracket German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket less than upper N Subscript w i n Baseline 3rd Row 1st Column Blank 2nd Column German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline union StartSet StartAbsoluteValue epsilon Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue EndSet minus StartSet StartAbsoluteValue epsilon Subscript e a r l i e s t Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue EndSet comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point comma and upper N left bracket German upper R overTilde Subscript i Superscript left parenthesis c right parenthesis Baseline right bracket equals upper N Subscript w i n Baseline EndLayout EndLayout
where
StartAbs
oluteVal
ue epsilon Subscript e a r l i e s t Superscript left parenthesis c right parenthesis Baseline EndAbsoluteValue is the earliest element in the set 
Ge
rm
an u
per R overTilde Subscript i Superscript left parenthesis c right parenthesis . 
(2) Update the standard deviation sigma 
Subscript i plus 2 Superscript left parenthesis c right parenthesis as follows: 
StartL
ayou t 
1s
t Ro
w si
gma Su
bscr ip t i p
lus 2 S upe rscript left parenthesis c right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row 1st Column Blank 2nd Column StartLayout 1st Row StartLayout 1st Row sigma Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndLayout EndLayout comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript i plus 2 Superscript left parenthesis c right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point EndLayout EndLayout
/
StartLayout 1st Row sigma Subscript i plus 2 Superscript left parenthesis c right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row 1st Column Blank 2nd Column StartLayout 1st Row StartLayout 1st Row sigma Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndLayout EndLayout comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript i plus 2 Superscript left parenthesis c right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point EndLayout EndLayout
Start Lay
ou
t 1st  Ro
w 
sigma 
Sub
scr
ipt i pl
us 2  Supers
cript le
ft
 p arent
hesi s c  r ight par enthe sis Ba
seline equals StartLayout Enlarged left brace 1st Row 1st Column Blank 2nd Column StartLayout 1st Row StartLayout 1st Row sigma Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline EndLayout EndLayout comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is an outlier 2nd Row 1st Column Blank 2nd Column StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript i plus 2 Superscript left parenthesis c right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline minus z Subscript i plus 1 vertical bar i Superscript left parenthesis c right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript i plus 1 Superscript left parenthesis c right parenthesis Baseline is a regular data point EndLayout EndLayout
4. Remove the outliers from bold italic z Subscript i plus 1, and modify the observation matrix bold upper H Subscript i plus 1 and the 
noise covariance matrix bold upper Sigma Subscript n accordingly. 
5. Update the state vector and its associated covariance matrix: 
(1) If all components in bold italic z Subscript i plus 1 are classiﬁed as outliers, bold ital ic  y Subscript i plus 1 vertical bar i plus 1 Baseline equals bold italic y Subscript i plus 1 vertical bar i and
bold uppe r  Sigma Subscript i plus 1 vertical bar i plus 1 Baseline equals bold upper Sigma Subscript i plus 1 vertical bar i . 
(2) If not all components in bold italic z Subscript i plus 1 are classiﬁed as outliers, update the state vector 
bold italic y Subscript i plus 1 vertical bar i plus 1 and its associated covariance matrix bold upper Sigma Subscript i plus 1 vertical bar i plus 1 by using EKF with 
the measurements obtained from Step 4. 
6. Go back to Step 2 for the next time step. 
It is worth noting that if no outlier is found in raw measurements, the identiﬁcation 
results from the proposed outlier detection method will be identical to the conven-
tional EKF introduced in Chap. 2. On the other hand, if there are outliers in raw 
measurements, the proposed approach will serve as a safeguard to prevent the adverse 
impact caused by the outliers for the system identiﬁcation results.

4.5 Applications
129
4.5 
Applications 
4.5.1 
Outlier Generation 
In order to demonstrate the proposed method for its outlier removal capability, outlier 
generation is introduced based on the measurements from the time-varying dynamical 
system in this subsection. 
First, it is necessary to introduce two assumptions before presenting the speciﬁc 
outlier generation technique. It is assumed that all measurement channels from the 
sensor network are contaminated with outliers. The second assumption is that the 
inserted outliers are distributed randomly into the series, with all data points equally 
likely to be an outlier. 
Next, the outlier generation technique is described. The generation of outliers 
is controlled by two parameters, i.e., the outlier occurrence rate and the magnitude 
of outliers. The outlier occurrence rate controls the percentage of outliers in the 
measurements of each channel while the magnitude of outliers controls the degree of 
which the data point deviates from its actual value. In the following applications, the 
outlier occurrence rate is taken as ga mma equals 1 percent sign in the ﬁrst application, and it is taken as 
a random variable following the uniform distribution on the interval left bracket 0.5 percent sign comma 1 percent sign right bracket for 
multi-channel measurements in the second application. The magnitude of the outliers 
is taken from a uniform distribution within the interval left bracket s Subscript min Baseline comma s Subscript max Baseline right bracket, where s Subscript min and 
s Subscript max are the minimum and maximum value of the corresponding noise-free response 
quantities, respectively. Their particular values will be presented in the subsequent 
sections. Please note that the aforementioned information is known and used only in 
the data generation process. However, both the models and the parameter values are 
completely unknown throughout the entire identiﬁcation process. 
4.5.2 
Single-Degree-of-Freedom Oscillator 
In the ﬁrst application, a single DOF oscillator is considered. The mass, stiffness and 
damping coefﬁcients are given by m equ als 1 kg, k equals 1200 N/m and c equals 1.06 Ns/m, 
respectively. Two model parameters are introduced to parameterize this single DOF 
oscillator, i.e., the stiffness parameter theta Subscript k and the damping parameter theta Subscript c. The entire 
monitoring period was 600 s, and the sampling time step was taken as nor mal upper Delta t equals 0.005 s. 
The external excitation applied to the oscillator was a zero-mean stationary Gaussian 
white noise with spectral intensity up er  S 0  equals  1.5 times 10 Superscript negative 6 Baseline m squared divided by s cubed. The stiffness of the 
oscillator had two sudden decreases of 5% and 10% at the 200th s and 400th s, 
respectively. 
Acceleration measurement was acquired with measurement noise, which was 10% 
root mean square (rms) of the noise-free acceleration response of the oscillator. In 
addition, the measurement was polluted by outliers. Speciﬁcally, the outlier occur-
rence rate was taken as ga mma equals 1 percent sign, so the number of outliers in the measurement was

130
4
Outlier Detection for Real-Time System Identiﬁcation
1200. These outliers were randomly inserted into the measurements, in which all data 
points were equally likely to be an outlier. Moreover, the magnitude of the outliers 
varied and it was drawn from a uniform distribution ranging from the minimum to 
the maximum noise-free acceleration response of the oscillator. It is noted again that 
the outlier occurrence rate and the magnitude of the outliers were unknown in the 
entire identiﬁcation process. Figure 4.14 shows the outlier-corrupted acceleration 
measurements and the time interval [360, 380] s is magniﬁed in Fig. 4.15. 
In order to compare the performance of the conventional EKF and the proposed 
method, the estimation results by using the conventional EKF with the regular noisy 
measurements, i.e., the measurements without the outliers but with regular measure-
ment noise, are ﬁrst presented in Fig. 4.16. The upper subplot in Fig. 4.16 shows the 
estimated stiffness parameter and the lower subplot shows the estimated damping 
parameter. The dotted lines represent the estimated values; the solid lines represent 
the actual values and the dashed lines represent the bounds of the 95% credible 
interval. The same line style will be used to the later ﬁgures. It is observed that the 
estimated model parameters using the regular noisy measurements are close to the 
actual values and they are within the 95% credible intervals.
Then, the estimation results by using the conventional EKF with the outlier-
corrupted measurements are presented. The upper and lower subplots in Fig. 4.17 
show the estimation results of the stiffness parameter theta Subscript k and the damping parameter 
theta Subscript c, respectively. Since the measurements were contaminated with outliers, the esti-
mation results obtained by using the conventional EKF ﬂuctuated severely, and they
Fig. 4.14 Outlier-corrupted acceleration measurements of the oscillator

4.5 Applications
131
Fig. 4.15 Outlier-corrupted acceleration measurements of the oscillator in the time interval [360, 
380] s
deviated substantially from the actual values. In other words, the plain EKF failed to 
provide accurate tracking estimation and the detection of the stiffness reduction.
Figures 4.18 and 4.19 show the actual versus estimated values of the displacement 
and velocity responses of the oscillator, respectively. The 45-degree lines in Figs. 4.18 
and 4.19 provide the reference of perfect match. It is obvious that the deviations 
between the actual and estimated responses were large. Together with the structural 
parameter identiﬁcation results, it can be concluded that the conventional EKF is 
sensitive to anomalous data points in the measurements, and it is not capable to 
provide reliable estimation results in the presence of outliers.
Next, the estimated stiffness and damping parameters obtained by using the 
proposed method with the same set of outlier-corrupted measurements in Fig. 4.17 are 
presented. The upper and lower subplots in Fig. 4.20 show the estimation results of theta Subscript k
and theta Subscript c by using the proposed method, respectively. It is seen that the proposed method 
tracked the model parameters well, although there were outliers in the observations. 
It indicates that the proposed method provided substantially stable and accurate iden-
tiﬁcation results. In addition, the estimation results in Fig. 4.20 were very similar 
to those obtained by using the conventional EKF with regular noisy measurements 
in Fig. 4.16. This conﬁrms that the proposed method was capable for simultaneous 
outlier removal and time-varying system identiﬁcation.

132
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.16 Estimation results of theta Subscript k and theta Subscript c by using the conventional EKF with regular noisy 
measurements
In addition, we use 50 independent simulation runs to demonstrate the quantitative 
comparison between the conventional EKF and the proposed method using outlier-
corrupted measurements. Two indicators, namely root mean square error (RMSE) 
and mean absolute error (MAE), are utilized to quantify the error of the estimation 
results. Since the initial conditions of the 50 simulation runs were set randomly, the 
estimation results of the ﬁrst 10 s in each simulation were discarded from the compar-
ison. Table 4.1 shows the error statistics of the displacement x, velocity ModifyingAbove x With dot, stiffness 
parameter theta Subscript k and damping parameter theta Subscript c, by using the conventional EKF using regular 
noisy measurements (without inserting the outliers), conventional EKF using outlier-
corrupted measurements, and the proposed method using outlier-corrupted measure-
ments. The second to the fourth columns show the RMSE; the ﬁfth to the seventh 
columns show the MAE. It is obvious that the proposed method outperformed the 
conventional EKF in the presence of outliers by a large margin. Moreover, both RMSE 
and MAE obtained using the proposed method were close to those using the conven-
tional EKF with regular noisy measurements. In conclusion, it is conﬁrmed that the 
proposed method provided more accurate estimation results than the conventional 
EKF in the presence of outliers.
Finally, using these 50 simulation runs, the outlier detection performance of the 
proposed method is presented in Table 4.2. Two indicators, namely masking and

4.5 Applications
133
Fig. 4.17 Estimation results of theta Subscript k and theta Subscript c by using the conventional EKF with outlier-corrupted 
measurements
swamping, are introduced. In particular, swamping refers to regular data points being 
classiﬁed as anomalies while masking refers to anomalies being classiﬁed as regular 
data points. As a result, the masking rate is the average of the masking number 
divided by the actual number of outliers; and the swamping rate is the average of the 
swamping number divided by the actual number of regular data points. The masking 
and swamping rates lie within the interval left bracket 0 comma 100 percent sign right bracket, and low values for both rates 
indicate that an outlier detection method possesses low level of false alarm and high 
level of correct detection. Table 4.2 shows the masking and swamping rates based 
on the aforementioned 50 simulation runs, and these two rates were both very close 
to zero. As a result, it conﬁrms the good performance of the proposed method for 
simultaneous outlier detection and identiﬁcation of time-varying dynamical system 
in a real-time manner.
4.5.3 
Fourteen-Bay Truss 
A 14-bay truss is considered in this example. This truss is simply supported at its two 
ends (i.e., the 1st and 28th nodes). The length of each horizontal and vertical member

134
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.18 Actual versus estimated values of the displacement response by using the conventional 
EKF with outlier-corrupted measurements 
Fig. 4.19 Actual versus estimated values of the velocity response by using the conventional EKF 
with outlier-corrupted measurements

4.5 Applications
135
Fig. 4.20 Estimation results of theta Subscript k and theta Subscript c by using the proposed method
Table 4.1 Comparison of error statistics (SDOF oscillator) 
RMSE 
(conventional 
EKF using 
regular noisy 
measurements) 
RMSE 
(conventional 
EKF using 
outlier-corrupted 
measurements) 
RMSE 
(proposed 
method) 
MAE 
(conventional 
EKF using 
regular noisy 
measurements) 
MAE 
(conventional 
EKF using 
outlier-corrupted 
measurements) 
MAE 
(proposed 
method) 
x
4.12E-06
1.78E-04
5.16E-06
3.25E-06
1.28E-04
3.60E-06 
ModifyingAbove x With dot
3.26E-04
7.12E-03
3.72E-04
2.84E-04
5.04E-03
2.93E-04 
theta Subscript k
1.70E-02
1.46E-01
1.90E-02
1.00E-02
1.43E-01
1.20E-02 
theta Subscript c
1.93E-01
1.87E+00
2.46E-01
1.53E-01
1.77E+00
1.94E-01
Table 4.2 Outlier detection 
results of the proposed 
method (SDOF oscillator) 
Masking rate (%)
Swamping rate (%) 
0.02
0.31

136
4
Outlier Detection for Real-Time System Identiﬁcation
is 3 m and each member has uniform circular hollow cross section with area 1.0× 10–4 
m2. The mass density is 7860 kg/m3 and the modulus of elasticity is 2.0 × 109 Pa. As 
a result, the ﬁrst ﬁve natural frequencies are 0.43, 1.45, 2.10, 2.89 and 4.44 Hz. The 
damping matrix is given by bo ld up per C equals alpha bold upper M plus beta bold upper K, where alpha equa ls 0.083 s Superscript negative 1 and beta equal s 0.003 s, 
such that the damping ratios are 2% for the ﬁrst two modes. The members of the 
truss are separated into six groups and the group numbers are marked in parentheses 
in Fig. 4.21. The stiffness matrix is thereby given as bo l d u
pper  K equ
als sigma summation Underscript n equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis n right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis n right parenthesis bo
ld upper K equals sigma summation Underscript n equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis n right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis n right parenthesis. Therefore, 
the unknown model parameters consist of bold italic theta Subscript k and bold  italic theta Subscript c Baseline equals left bracket alpha comma beta right bracket Superscript normal upper T. 
The truss was subjected to ground motion with spectral density 1.2 × 10–4 m squared divided by s cubed
in horizontal and vertical directions. The sampling time interval was nor mal upper  Delta t equals 0.0025 s
and the entire monitoring period was 300 s. Horizontal acceleration responses of the 
13th, 14th, 17th, 22nd, 28th nodes, and vertical acceleration responses of the 2nd, 
5th, 6th, 9th, 10th, 19th, 26th nodes were observed using twelve accelerometers. The 
measurement noise was taken as 10% rms of the corresponding noise-free response 
quantities. In addition, these measurements were contaminated with outliers. The 
outlier occurrence rate for different channels of measurements was different and it 
was taken from a uniform distribution within the interval left bracket 0.5 percent sign comma 1 percent sign right bracket. Moreover, the 
magnitude of outliers in each measurement channel was generated according to a 
uniform distribution in the range of the minimum to the maximum noise-free response 
quantities of the corresponding channel. These variations allowed us to assess the 
capability of the proposed method for detecting outliers of different magnitude and 
identifying different number of outliers. Structural damage was also imposed during 
the monitoring duration. In particular, the ﬁrst damage of 5% stiffness reduction 
occurred in the elements of the ﬁrst group at t equals  100 s; and the second damage of 
5% stiffness reduction occurred in the elements of the sixth group at t equals  200 s. 
Figure 4.22 shows the outlier-corrupted vertical acceleration measurements of the 
6th node and the time interval [150, 160] s is magniﬁed in Fig. 4.23. Figure 4.24 
shows the outlier-corrupted horizontal acceleration measurements of the 17th node 
and the time interval [200, 210] s is magniﬁed in Fig. 4.25. It is worth noting that 
these outliers are not necessarily fall outside the range of the bulk of the data.
For comparison purpose, the estimation results obtained using the conventional 
EKF with regular noisy measurements (i.e., measurements without outliers) are ﬁrst 
presented. Figures 4.26 and 4.27 show the estimated stiffness and damping parame-
ters, respectively. Satisfactory agreement between estimation and actual values could
Fig. 4.21 14-bay truss model 

4.5 Applications
137
Fig. 4.22 Outlier-corrupted vertical acceleration measurements of the 6th node 
Fig. 4.23 Outlier-corrupted vertical acceleration measurements of the 6th node in the time interval 
[150, 160] s

138
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.24 Outlier-corrupted horizontal acceleration measurements of the 17th node 
Fig. 4.25 Outlier-corrupted horizontal acceleration measurements of the 17th node in the time 
interval [200, 210] s

4.5 Applications
139
be observed. The sudden damages could be tracked with reasonably small time delay. 
Then, the estimation results of the stiffness and damping parameters using the conven-
tional EKF with the outlier-corrupted measurements are presented in Figs. 4.28 and 
4.29 respectively. It is obvious that the estimation results deteriorated drastically and 
they highly ﬂuctuated. This indicates that the conventional EKF method was sensi-
tive to anomalous data points. Therefore, removing the outliers in the measurements 
is necessary to obtain reliable structural parameter estimation results. 
Next, we performed the identiﬁcation with our proposed method using the same 
set of outlier-corrupted measurements in Figs. 4.28 and 4.29. The estimation results 
of the stiffness and damping parameters are shown in Figs. 4.30 and 4.31, respec-
tively. The estimated values were close to the actual values and the ﬂuctuation was 
suppressed substantially although there were many outliers in all measurement chan-
nels. As a result, the two sudden drops of stiffness could be successfully tracked. By 
comparing Figs. 4.26 and 4.30, the estimation results by using the proposed method 
with outlier-corrupted data are comparable with those by using the conventional 
EKF with regular noisy measurements. This veriﬁed the outlier removal and model 
parameter tracking capability of the proposed method. In addition, slight time delay 
could be observed for tracking the abrupt change of theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 6 right parenthesis
in Fig. 4.30. The  
reason is that the estimations were obtained using the observed data at the current
Fig. 4.26 Estimation results of bold italic theta Subscript k by using the conventional EKF with regular noisy measurements

140
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.27 Estimation results of bold italic theta Subscript c by using the conventional EKF with regular noisy measurements
and previous time steps, and thus the existence of the time lag was expected. As a 
result, the proposed method is capable for outlier removal and tracking the unknown 
model parameters for time-varying dynamical systems.
The actual versus estimated structural responses of some typical DOFs (a, b, c 
and d depicted in Fig. 4.21) obtained by using the proposed method are presented 
in Fig. 4.32. The 45-degree line in each subplot provides the reference of perfect 
match. It is obvious that the proposed method provided accurate estimation results 
for the structural responses. On the other hand, the quantitative comparison among the 
conventional EKF using regular noisy measurements (without inserting the outliers), 
conventional EKF using outlier-corrupted measurements, and the proposed method 
using outlier-corrupted measurements, is presented in Table 4.3. The estimation 
accuracy was evaluated according to the RMSE and the MAE of the representa-
tive estimated quantities, over 50 independent simulation runs. The second to the 
fourth columns show the RMSE values; and the ﬁfth to the seventh columns show 
the MAE values. Since the initial conditions of the 50 simulation runs were randomly 
assigned, the estimation results of the ﬁrst 10 s in each simulation were discarded 
from the comparison. It is obvious that the proposed method provided much smaller 
estimation error than the conventional EKF in the presence of outliers. Moreover, the

4.5 Applications
141
Fig. 4.28 Estimation results of bold italic theta Subscript k by using the conventional EKF with outlier-corrupted measure-
ments
estimation errors of the proposed method were comparable with those of the conven-
tional EKF using regular noisy measurements. As a result, it can be concluded that 
the proposed method resolved the problems of the conventional EKF method when 
the observations were polluted with anomalous data points.
Finally, the outlier removal performance of the proposed method is presented 
quantitatively in Table 4.4. The ﬁrst column indicates the number of measurement 
channel and the second column indicates the location of the accelerometer. The third 
and fourth columns indicate the masking and swamping rates over 50 independent 
simulation runs, respectively. It can be observed that the proposed outlier detection 
method could successfully detect virtually all the outliers with very low level of 
swamping in all the measurement channels. In conclusion, the proposed method 
provided reliable outlier removal and system identiﬁcation results in a real-time 
manner.

142
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.29 Estimation results of bold italic theta Subscript c by using the conventional EKF with outlier-corrupted measure-
ments
4.6 
Concluding Remarks 
This chapter introduced an outlier detection approach for real-time system identiﬁca-
tion. This method incorporates the absolute normalized residual, the noise level, and 
the size of the dataset, and avoids the deﬁnite judgment criterion on the outlierness of 
a data point. It utilizes the binomial distribution model to construct the probability of 
a data point being an outlier. In order to enhance the computational efﬁciency of the 
method, two efﬁcient techniques are introduced, i.e., the moving time window and the 
efﬁcient screening criteria. The proposed approach was tested in the application of 
real-time damage detection. The estimation results demonstrated that the presented 
method performed well in handling different number and magnitude of outliers. 
Moreover, in contrast to the conventional EKF, which was severely degraded in the 
presence of outliers, the proposed method provided reliable and stable estimation 
results, by accurately removing the anomalous data points in the measurements.

4.6 Concluding Remarks
143
Fig. 4.30 Estimation results of bold italic theta Subscript k by using the proposed method 
Fig. 4.31 Estimation results of bold italic theta Subscript c by using the proposed method

144
4
Outlier Detection for Real-Time System Identiﬁcation
Fig. 4.32 Actual versus estimated structural responses by using the proposed method

4.6 Concluding Remarks
145
Table 4.3 Comparison of error statistics 
RMSE 
(conventional 
EKF using 
regular noisy 
measurements) 
RMSE 
(conventional 
EKF using 
outlier-corrupted 
measurements) 
RMSE 
(proposed 
method) 
MAE 
(conventional 
EKF using 
regular noisy 
measurements) 
MAE 
(conventional 
EKF using 
outlier-corrupted 
measurements) 
MAE 
(proposed 
method) 
x Subscript a
2.08E-05
4.60E-04
2.12E-05
1.64E-05
3.61E-04
1.67E-05 
x Subscript b
3.86E-06
7.98E-05
3.82E-06
2.89E-06
6.23E-05
2.89E-06 
x Subscript c
3.32E-05
7.29E-04
3.39E-05
2.61E-05
5.71E-04
2.66E-05 
x Subscript d
4.01E-06
8.30E-05
3.98E-06
2.99E-06
6.47E-05
3.02E-06 
ModifyingAbove x With dot Subscript a
7.05E-03
8.65E-02
6.68E-03
2.48E-03
4.90E-02
2.17E-03 
ModifyingAbove x With dot Subscript b
8.54E-03
1.25E-01
4.94E-03
4.85E-03
8.98E-02
3.84E-03 
ModifyingAbove x With dot Subscript c
1.22E-02
1.60E-01
5.38E-03
5.77E-03
1.05E-01
4.31E-03 
ModifyingAbove x With dot Subscript d
7.57E-03
1.16E-01
5.28E-03
4.98E-03
8.87E-02
4.26E-03 
theta 
Subscript k Superscript left parenthesis 1 right parenthesis
9.10E-03
1.39E-01
5.04E-03
4.86E-03
1.01E-01
4.02E-03 
theta 
Subscript k Superscript left parenthesis 2 right parenthesis
6.07E-03
9.43E-02
5.00E-03
3.48E-03
6.96E-02
3.09E-03 
theta 
Subscript k Superscript left parenthesis 3 right parenthesis
4.48E-03
9.31E-02
4.48E-03
3.37E-03
7.17E-02
3.42E-03 
theta 
Subscript k Superscript left parenthesis 4 right parenthesis
2.02E-05
4.02E-04
1.91E-05
1.58E-05
3.18E-04
1.51E-05 
theta 
Subscript k Superscript left parenthesis 5 right parenthesis
2.08E-05
4.60E-04
2.12E-05
1.64E-05
3.61E-04
1.67E-05 
theta 
Subscript k Superscript left parenthesis 6 right parenthesis
3.86E-06
7.98E-05
3.82E-06
2.89E-06
6.23E-05
2.89E-06 
alpha
3.32E-05
7.29E-04
3.39E-05
2.61E-05
5.71E-04
2.66E-05 
beta
4.01E-06
8.30E-05
3.98E-06
2.99E-06
6.47E-05
3.02E-06
Table 4.4 Outlier detection 
results of the proposed 
method 
Measurement 
channel 
Location
Masking rate 
(%) 
Swamping rate 
(%) 
1
2
0.00
0.10 
2
5
0.00
0.11 
3
6
0.00
0.08 
4
9
0.00
0.13 
5
10
0.00
0.11 
6
13
0.00
0.07 
7
14
0.01
0.14 
8
17
0.00
0.10 
9
19
0.00
0.11 
10
22
0.00
0.09 
11
26
0.00
0.07 
12
28
0.00
0.09

146
4
Outlier Detection for Real-Time System Identiﬁcation
References 
Dong Y, Hopkins S, Li J (2019) Quantum entropy scoring for fast robust mean estimation and 
improved outlier detection. Adv Neur In 32 
Hawkins DM (1980) Identiﬁcation of outliers. Chapman and Hall London 
Japkowicz N, Myers C, Gluck M (1995) A novelty detection approach to classiﬁcation. In: 
Proceedings of the 14th international conference on artiﬁcial intelligence, vol 1, pp 518–523 
Krishnamachari B, Iyengar S (2004) Distributed Bayesian algorithms for fault-tolerant event region 
detection in wireless sensor networks. IEEE Trans Comput 53(3):241–250 
Leys C, Ley C, Klein O, Bernard P, Licata L (2013) Detecting outliers: do not use standard deviation 
around the mean, use absolute deviation around the median. J Exp Soc Psychol 49(4):764–766 
Li X, Bowers CP, Schnier T (2009) Classiﬁcation of energy consumption in buildings with outlier 
detection. IEEE Trans Ind Electron 57(11):3639–3644 
Luo X, Dong M, Huang Y (2005) On distributed fault-tolerant detection in wireless sensor networks. 
IEEE Trans Comput 55(1):58–70 
Mu HQ, Yuen KV (2015) Novel outlier-resistant extended Kalman ﬁlter for robust online structural 
identiﬁcation. J Eng Mech 141(1):04014100 
Myers K, Tapley B (1976) Adaptive sequential estimation with unknown noise statistics. IEEE 
Trans Automat Control 21(4):520–523 
Ottosen TB, Kumar P (2019) Outlier detection and gap ﬁlling methodologies for low-cost air quality 
measurements. Environ Sci-Proc Imp 21(4):701–713 
Punzo A, Mazza A, Maruotti A (2018) Fitting insurance and economic data with outliers: a ﬂexible 
approach based on ﬁnite mixtures of contaminated gamma distributions. J Appl Stat 45(14):2563– 
2584 
Quiroga RQ, Nadasdy Z, Ben-Shaul Y (2004) Unsupervised spike detection and sorting with 
wavelets and superparamagnetic clustering. Neural Comput 16(8):1661–1687 
Rousseeuw PJ, Hubert M (2018) Anomaly detection by robust statistics. Wires Data Min Knowl 
Discov 8(2):e1236 
Thaprasop P, Zhou K, Steinheimer J, Herold C (2021) Unsupervised outlier detection in heavy-ion 
collisions. Phys Scripta 96(6):064003 
Zhang J, Zulkernine M, Haque A (2008) Random-forests-based network intrusion detection systems. 
IEEE Trans Syst Man Cybernet C 38(5):649–659 
Zhang Y, Meratnia N, Havinga P (2010) Outlier detection techniques for wireless sensor networks: 
a survey. IEEE Commun Surv Tutor 12(2):159–170

Chapter 5 
Bayesian Model Class Selection 
and Self-Calibratable Model Classes 
for Real-Time System Identiﬁcation 
Abstract This chapter introduces the Bayesian model class selection for real-time 
system identiﬁcation and an adaptive reconﬁguring strategy for the model classes. 
In addition to parametric estimation, another critical problem in system identiﬁca-
tion is to determine a suitable model class for describing the underlying dynam-
ical system. By utilizing the Bayes’ theorem to obtain the plausibilities of a set of 
model classes, model class selection can be performed accordingly. The proposed 
method provides simultaneous model class selection and parametric identiﬁcation 
in a real-time manner. On the other hand, although Bayesian model class selection 
allows for determination of the most suitable model class among a set of prescribed 
model class candidates, it does not guarantee a good model class to be selected. It 
is possible that all the prescribed model class candidates are inadequate. Thus, a 
new third level of system identiﬁcation is presented to resolve this problem by using 
self-calibratable model classes. This self-calibrating strategy can correct the deﬁ-
ciencies of the model classes and achieve reliable real-time identiﬁcation results for 
time-varying dynamical systems. On the other hand, the large number of prescribed 
model class candidates will hamper the performance of real-time system identiﬁ-
cation. In order to resolve this problem, a hierarchical strategy is proposed. It only 
requires a small number of model classes but a large solution space can be explored. 
Although the algorithms presented in this chapter are based on the EKF, the real-time 
model class selection component and the adaptive reconﬁguring strategy for model 
class selection can be easily embedded into other ﬁltering tools. 
Keywords Plausibility · Evidence · Bayesian inference · Real-time identiﬁcation ·
Self-calibration · Hierarchical model classes 
5.1 
Introduction 
In Chaps. 2, 3, and 4, the problem of real-time parametric identiﬁcation was consid-
ered for a prescribed model class with uncertain parameters. Determination of an 
appropriate model class for parametric identiﬁcation has not been illustrated in 
previous chapters for real-time system identiﬁcation. Model class selection concerns
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_5 
147

148
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
the problem on the selection of a suitable class of models for parametric identiﬁca-
tion. Given a set of model class candidates, it is intuitive that a more complicated 
model class with extra adjustable uncertain parameters always ﬁts the data better 
than a simpler one with fewer adjustable parameters. As a result, if the selection 
criterion is based on the minimization of the prediction errors between the output 
data and the corresponding predictive results of the optimal model among the model 
classes, the optimal model class will be the most complicated one. For instance, 
in modal identiﬁcation, using a twenty-mode model would always be better than 
using a ten-mode model since the former one would ﬁt the data better. However, the 
data ﬁtting improvement might be negligible (Beck and Yuen 2004). Therefore, it 
is insufﬁcient to consider solely the data ﬁtting capability for model class selection 
because it often leads to over-ﬁtted model classes. When an over-ﬁtted model class 
is used for future prediction, it is peculiarly prone to give poor predictive results. The 
reason is that the selected model depends too much on the details of the data and the 
measurement noise and modeling error have a substantial role in the data ﬁtting. As 
a result, in model class selection, it is necessary to penalize the model classes with 
complicated parameterization. This issue was ﬁrst pointed out by Jeffreys Harold 
who did pioneering work on the application of Bayesian methods (Jeffreys 1961). 
He pointed out that it is necessary to construct a quantitative expression of the well-
known Ockham’s razor (Sivia 1996). Ockham’s razor, also known as the principle 
of parsimony, is a problem-solving principle that entities should not be multiplied 
beyond necessity (Schaffer 2015). It is generally understood in the sense that with 
competing theories or explanations, the simpler one is to be preferred. 
Most, if not all, model selection methods are constructed based on an appropriate 
information criterion in which data are utilized to give each model class candidate a 
certain score. Then, a complete ranking of all the candidates can be achieved from 
the best to the worst. Well-known model class selection methods include the Akaike 
information criterion (AIC) (Akaike 1974), the Bayesian information criterion (BIC) 
(Schwarz 1978), the deviance information criterion (DIC) (Spiegelhalter et al. 2002) 
and the minimum description length (MDL) (Rissanen 1978). 
The AIC deals with the tradeoff between the goodness of ﬁt and the simplicity 
of the model class so it considers both the risks of underﬁtting and overﬁtting. The 
objective function for the AIC is given as follows (Akaike 1974): 
uppe
r
 J Subs
c
r ipt u p
p
er A upper I up
per C  Base
li ne left  p a r ent
hesis upper C Superscript left parenthesis m right parenthesis Baseline vertical bar upper D right parenthesis equals minus 2 ln p left parenthesis upper D vertical bar bold italic theta Superscript left parenthesis m right parenthesis Baseline comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis plus 2 upper N Superscript left parenthesis m right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where upper C Superscript left parenthesis m right parenthesisindicates the m t h model class among a set of uper N Subscript m model class candidates 
upper C Superscript left parenthesis 1 right parenthesis, upper C Superscript left parenthesis 2 right parenthesis, …,  upper C Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis; upper D is the input–output or output-only data; bold italic theta Superscript left parenthesis m right parenthesisis the uncertain 
parameter vector and it depends on the model class upper C Superscript left parenthesis m right parenthesis; ln p
 
left parenthesis upper D vertical bar bold italic theta comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
is the 
log-likelihood function of the model class upper C Superscript left parenthesis m right parenthesis; up per N Superscript left parenthesis m right parenthesis is the number of adjustable 
parameters in model class upper C Superscript left parenthesis m right parenthesis. The best model class is the one that minimizes the 
objective function in Eq. (5.1). The second term on the right hand side of Eq. (5.1) 
serves as a penalty that punishes the model classes for being too complicated in 
the sense of containing too many adjustable parameters. It is noticed that when the

5.1 Introduction
149
number of data points is large, the ﬁrst term on the right hand side of Eq. (5.1) will 
dominate. 
Later, Schwarz (1978) and Akaike (1978) developed the BIC which is given as 
follows: 
uppe
r
 J Subs
c
r ipt u p
p
er B upper I up
per C Basel in
e left pa r e n t hesi
s upper C Superscript left parenthesis m right parenthesis Baseline vertical bar upper D right parenthesis equals minus 2 ln p left parenthesis upper D vertical bar bold italic theta Superscript left parenthesis m right parenthesis Baseline comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis plus upper N Superscript left parenthesis m right parenthesis Baseline ln upper N comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where upper N is the sample size of the dataset upper D. The model class that minimizes the 
objective function in Eq. (5.2) is preferred. The penalty term in the BIC increases 
with the number of data points upper N. By using the BIC, a more complicated model class 
may be selected when more data is acquired. This is because it is less likely to have 
overﬁtting with more data. 
The DIC is a hierarchical modeling generalization of the AIC (Spiegelhalter et al. 
2002). The DIC criterion is deﬁned, analogously to the AIC, as follows: 
uppe
r
 J Subs
c
r ipt u p
p
er 
D upper I up
per C 
Ba seline l e f t  pa
renthesis upper C Superscript left parenthesis m right parenthesis Baseline vertical bar upper D right parenthesis equals minus 2 ln p left parenthesis upper D vertical bar ModifyingAbove bold italic theta With caret Superscript left parenthesis m right parenthesis Baseline comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis plus 2 upper N Subscript e Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where M
odify ing
A
bove bol
d italic theta With caret Superscript left parenthesis m right parenthesis Baseline identical to upper E left bracket bold italic theta Superscript left parenthesis m right parenthesis Baseline vertical bar upper D right bracket
and upper E left bracket dot right bracket denotes the mathematical expectation; uper N Subscript e is the 
effective number of adjustable parameters in model class upper C Superscript left parenthesis m right parenthesisand it is given by: 
up er 
N
 Subs c
r
ipt e Baseline e
quals u
p
per
 E left brac
k
et  minus 2  l n  p l
eft parenthesis upper D vertical bar bold italic theta Superscript left parenthesis m right parenthesis Baseline comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis right bracket plus 2 ln p left parenthesis upper D vertical bar ModifyingAbove bold italic theta With caret Superscript left parenthesis m right parenthesis Baseline comma upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
The factor uper N Subscript e can be considered as the mean deviance minus the deviance of the 
means (Spiegelhalter et al. 2002) and it acts as a penalty term for model complexity. 
The most suitable model class for the DIC is the one that minimizes the objective 
function in Eq. (5.3). 
The MDL principle was developed by Rissanen (1978) in the application of algo-
rithmic coding theory for computer science. It regards both data and model classes 
as codes. The crux of the MDL principle is to encode the dataset with the help of a 
model class. Therefore, the more the data is compressed by extracting redundancy 
from it, the more the underlying regularities in the data are uncovered (Grünwald 
et al. 2005). The code length is utilized to evaluate the generalization capability of 
a model class candidate. The model class that achieves the shortest description of 
the data is regarded as the best one. The objective function in the MDL principle is 
given by (Rissanen 1978): 
uppe
r
 J Subs
c
rip
t
 upper 
M u
p
per D
 upper L Baseline left parenthesis upper C Superscript left parenthesis m right parenthesis Baseline vertical bar upper D right parenthesis equals upper L left parenthesis upper D vertical bar upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis plus upper L left parenthesis upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
where u
p
per L left parenthesis upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
is the length, in bits, of the description for the model class candidate 
upper C Superscript left parenthesis m right parenthesis; u
p
per L left parenthesis upper D vertical bar upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
is the length, in bits, of the description of the data encoded with 
the help of the model class upper C Superscript left parenthesis m right parenthesis. The optimal model class is the one that minimizes

150
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
the objective function in Eq. (5.5). It is seen that the MDL principle still involves 
a tradeoff between two terms, i.e., a goodness-to-ﬁt term u
p
per L left parenthesis upper D vertical bar upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
and a penalty 
term u
p
per L left parenthesis upper C Superscript left parenthesis m right parenthesis Baseline right parenthesis
to punish the complicated model class (Grünwald 2007). In some 
special cases, the resulting selection mechanism in Eq. (5.5) coincides with the BIC 
in Eq. (5.2) (Claeskens and Hjort 2008). 
The main idea for conventional model class selection approaches is to introduce 
ad hoc penalty terms to suppress the complicated model classes. However, in some 
circumstances, such as insufﬁcient samples, ad hoc penalty terms cannot provide 
reliable model class selection results. 
The Bayesian approach to model class selection has been investigated by showing 
that the evidence for each model class candidate provided by the data leads to a 
quantitative expression of a principle of parsimony or Ockham’s razor (Beck and 
Yuen 2004; Yuen 2010b). According to the Bayes’ theorem, the model class selection 
criterion is rigorously derived without introducing any ad hoc penalty term and the 
Bayesian model class selection approach explicitly builds a tradeoff between the 
data ﬁtting capability and its information-theoretic complexity. Beck and Yuen (2004) 
developed the Bayesian model class selection approach for globally identiﬁable case. 
Afterwards, this method was extended to the general cases where the model may be 
unidentiﬁable (Ching et al. 2005). Bayesian model class selection provides a powerful 
and rigorous approach for model updating and system identiﬁcation and it has been 
widely used in many different disciplines (Yuen 2010a; Ley and Steel 2012; Mark  
et al. 2018). 
Although Bayesian model class selection has been widely applied in a wide range 
of applications, critical issues remain to be resolved. Conventional model class selec-
tion methods are conducted in an ofﬂine manner. In other words, the model class 
candidates are evaluated after the entire dataset is obtained. However, the behavior 
of the underlying dynamical system can be time-varying, e.g., due to damage, and 
ofﬂine model class assessment cannot adapt to substantial changes in the time-varying 
dynamical systems. In addition, there is no guarantee of good results when all the 
model class candidates are not suitable. In other words, if there is no suitable model 
class candidate, parameter estimation based on the selected model class will be unre-
liable. Furthermore, assessment of the large number of model class candidates will 
induce heavy computational burden. For example, consider a model class with 10 
uncertain parameters to be determined. Choices can be made on the inclusion of the 
terms with these ten parameters. As a result, it is required to evaluate 2 Su pers cript 10 Baseline minus 1 equals 1023
model class candidates. For practical problems, there are typically more uncertain 
parameters governed in the underlying systems and a ﬁner discretization is required. 
Therefore, it is inevitable to require exhaustive assessment for all possible model 
class candidates. On the other hand, a more severe situation in the real-time appli-
cation is that all model class candidates are evaluated at each time step. The large 
number of model class candidates hampers the methods to track the time-varying 
behavior of the dynamical systems, especially for large dynamical systems.

5.1 Introduction
151
Damage detection can beneﬁt from model class selection. The damage level of 
a substructure can be reﬂected through the reduction of the corresponding stiffness 
parameter. The stiffness matrix bold upper K of the underlying structure can be represented as 
a linear combination of uper N Subscript k substructural stiffness matrices: 
bold uppe
r 
K
 lef
t pare
nthesis bold italic theta Subscript k Baseline right parenthesis equals sigma summation Underscript s equals 1 Overscript upper N Subscript k Baseline Endscripts theta Subscript k comma s Baseline bold upper K Subscript s
where bold upper K Subscript s, s equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, is the prescribed stiffness matrix of the s t h substructure; 
theta Subscript k comma s, s equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, is the corresponding stiffness parameter and the vector bold italic theta Subscript k is 
deﬁned to include all the stiffness parameters: 
bold  
i
talic  thet a  S u bscri
pt k Base
line identical to left bracket theta Subscript k comma 1 Baseline comma theta Subscript k comma 2 Baseline comma ellipsis comma theta Subscript k comma upper N Sub Subscript k Subscript Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript k
The term theta Subscript k comma s Baseline bold upper K Subscript s, s eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, represents the stiffness contribution from 
the s t h substructure towards the global stiffness matrix bold upper K and the value of theta Subscript k comma s can 
be identiﬁed by using the observations of the structure. Reduction of theta Subscript k comma s indicates 
damage of the s t h substructure. For example, for a two-story building, its stiffness 
matrix can be given as follows: 
bold upper K lef t parent
hesis bold italic theta Subscript k Baseline right parenthesis equals theta Subscript k comma 1 Baseline bold upper K 1 plus theta Subscript k comma 2 Baseline bold upper K 2
where bold upper K 1 and bold upper K 2 are the stiffness matrix of the ﬁrst and second story, respectively, 
given by: 
bol d
 up er
 K
 
1 equals Start 2 By 2 Matrix 1st Row 1st Column k 1 2nd Column 0 2nd Row 1st Column 0 2nd Column 0 EndMatrix
bol d
 up er K
 2 e qu
a
ls Start 2 By 2 Matrix 1st Row 1st Column k 2 2nd Column minus k 2 2nd Row 1st Column minus k 2 2nd Column k 2 EndMatrix
where k 1 and k 2 are the stiffness of the ﬁrst and second story, respectively. Then, 5% 
reduction of theta Subscript k comma 1 indicates 5% stiffness loss in the ﬁrst story. 
This model-based parameterization is straightforward and widely used for system 
identiﬁcation. However, the success of the conventional model-based approaches 
relies highly on the appropriate parameterization in the prescribed model class. Inap-
propriate selection of the parameterization will induce misleading results. On one 
hand, it is desirable to partition more substructures, i.e., with large upper N Subscript k, since smaller 
portions of the structure will then have their designated stiffness parameters. As a 
result, damages might be detectable to a ﬁner structural level. However, if there are 
too many substructures and, hence, too many uncertain parameters, the identiﬁcation 
results will be highly ﬂuctuating or even unidentiﬁable. On the other hand, if uper N Subscript k is 
too small, each stiffness parameter will represent a large portion of the structure.

152
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
As a result, ﬁner damages will be diluted and they may not be detectable. Further-
more, even when such reduction contributes to noticeable stiffness reduction of the 
corresponding substructure, the damage location(s) cannot be obtained. Moreover, 
there will be large modeling errors in the description of the substructural stiffness 
matrices. For instance, consider a building. The model class with one stiffness param-
eter for each story is sufﬁcient to distinguish stiffness difference up to story level. 
However, unless there are large number of sensors, it is inevitable to encounter large 
estimation uncertainty or even unidentiﬁable situation. On the other hand, by using a 
model class which bundles a number of stories into a substructure, the identiﬁcation 
results will be less ﬂuctuating because there are less uncertain parameters. However, 
this parameterization induces additional modeling errors because the stiffness ratios 
between different stories in the same substructure are ﬁxed due to the establishment 
of the substructural stiffness matrices. Furthermore, individual story damage within 
a substructure is undetectable because the stiffness ratios between different stories 
in a substructure are ﬁxed. If an individual story is damaged, the stiffness of the 
entire substructure will be decreased (but diluted). However, it will be unable to 
determine which story in the substructure is damaged. Moreover, if the substruc-
ture is too large, individual damage in a story is insufﬁcient to induce noticeable 
reduction of the stiffness of the corresponding substructure. Therefore, it is crucially 
important but nontrivial to establish a model class with suitable complexity for iden-
tiﬁcation purpose. This is especially challenging for real-time identiﬁcation when 
multiple damages are possible during the monitoring period. In this situation, the 
most suitable model class varies from time to time. 
In this chapter, efﬁcient real-time identiﬁcation scheme combining Bayesian 
model class selection and parametric identiﬁcation is introduced. In Sect. 5.2, 
Bayesian real-time model class selection is introduced for the evaluation and selec-
tion of model classes. In Sect. 5.3, real-time system identiﬁcation for simulta-
neous model class selection and parametric identiﬁcation is introduced based on 
prescribed model classes. Then, Sect. 5.4 will present the novel third level of system 
identiﬁcation, namely system identiﬁcation using self-calibratable model classes. 
In Sect. 5.5, real-time system identiﬁcation using hierarchical interhealable model 
classes is introduced. Illustrative examples for damage detection using prescribed 
model classes, self-calibratable model classes and hierarchical interhealable model 
classes are presented in Sect. 5.6. Finally, concluding remarks are given in Sect. 5.7. 
5.2 
Bayesian Real-Time Model Class Selection 
Use upper D to denote the input–output or output-only data from a dynamical system. 
Given a set of uper N Subscript m model classes candidates upper C Super s c r i pt left parenthesis 1 right parenthesis Baseline comma upper C Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis, each model class 
represents a particular parameterization of the unknown model parameters for the 
underlying dynamical system. The goal of model class selection is to use upper D to 
determine the most plausible or suitable class of models describing the system among 
the given model classes upper C Super s c r i pt left parenthesis 1 right parenthesis Baseline comma upper C Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis(Yuen 2010a). Furthermore, real-time

5.2 Bayesian Real-Time Model Class Selection
153
model class selection aims to evaluate continuously the model class candidates at 
which the sampled observations are obtained. The dataset upper D Subscript i plus 1 can be obtained by 
grouping the ﬁrst i plus 1 data points: 
upper  D Subscri p t  i  plus 1 Bas
eline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i Baseline comma bold italic z Subscript i plus 1 Baseline EndSet
where bold italic z Subscript i plus 1 is the measurements at the lef t parenthesis i plus 1 right parenthesis t h time step. A set of uper N Subscript m model class 
candidates at the lef t parenthesis i plus 1 right parenthesis t h time step is considered: 
bold i
t
alic 
upper C Su
bscr i p t  i plus 1
 Ba
s
eline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline EndSet
where upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, is the  m t h model class candidate at the lef t parenthesis i plus 1 right parenthesis t h
time step. Since probability may be interpreted as a measure of plausibility based on 
speciﬁed information (Cox 1961), the probability of a class of models conditional 
on the dataset is required. By using the Bayes’ theorem, the plausibility of a class of 
models conditional on upper D Subscript i plus 1 can be obtained as (Yuen and Mu 2015): 
u
p
per P
 le
ft pare
n
th
e
s
is upper C Subs
cri
p
t
 
i plu
s 1
 Supe
rscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis Over p left parenthesis upper D Subscript i plus 1 Baseline right parenthesis EndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
upper P 
l
ef t paren t h e s is u
pper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis Over p left parenthesis upper D Subscript i plus 1 Baseline right parenthesis EndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where the denominator p left parenthesis upper D Subscript i plus 1 Baseline right parenthesisis given by the law of total probability: 
p left par
en
t
hesi
s
 
upper D Subscri
pt 
i
 
p
lus 1
 Ba
selin
e
 right parenthesis equals sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis
and u
p
per P
 le
ft pa
renthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis
is the prior plausibility of the m t h model class based on the dataset 
up to the i t h time step and it is given by: 
u
p
per P
 le
ft pa
r
ent
h
esis 
u
pper 
C
 
Su bscript  i  p lus
 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis equals upper P left parenthesis upper C Subscript i Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
Equation (5.15) indicates that the prior plausibility of a model class is equal to 
its posterior plausibility of the previous time step. In addition, the prior plausibilities 
for all model class candidates at the i t h time step are normalized as follows: 
si
g
ma s
u
m
matio
n U
nders
c
rip
t m equals 1 Overscript upper N Subscript m Baseline Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis equals 1
When no observation is available at the ﬁrst time step, uniform prior plausibilities 
are considered: 
u
p
per P
 
left 
p
arenthe
si s upper  C  1  Su
perscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by upper N Subscript m Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline

154
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
In other words, there is no preference on any model class before the ﬁrst measure-
ment is acquired. The factor p
 
left parenthesi
s b
old italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
in Eq. (5.13) is the  conditional 
evidence of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis based on dataset upper D Subscript i. It reﬂects how likely the data 
are obtained if the model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis is assumed and it plays an important role on 
model class selection. The plausibility u
p
per P
 le
ft pare
nthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
represents the relative plau-
sibility of upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis within the proposed set of uper N Subscript m model class candidates, conditional 
on the dataset up to the lef t parenthesis i plus 1 right parenthesis t h time step. By applying the Bayes’ theorem at the 
model class level, a set of model class candidates is chosen to represent the underlying 
dynamical system (Beck 2010). 
In the Bayesian real-time model class selection, the model class candidates are 
ranked according to the plausibilities u
p
per P
 le
ft pare
nthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
, m eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline. The  
most plausible class of models representing the system is the one which gives the 
largest value of this quantity. The Bayesian real-time model class selection approach 
provides rational and adaptive evaluation of the model class candidates. Moreover, 
robust parametric identiﬁcation results can be achieved according to the plausibilities 
and this will be demonstrated in the following section. 
On the other hand, in practice, computational problems may be encountered for 
direct calculation of the plausibilities. For example, the value of the conditional 
evidence may be of a small order of magnitude, so direct calculation of the plausi-
bilities in Eq. (5.13) will induce computational problem. To resolve this problem, 
log-evidence and log-prior plausibility can be given as follows: 
ln p
 
left parenthesi
s b
o
ld it a
l
ic z Subscript 
i p
l
u s  1  Base l
i
ne vertical bar u
ppe
r
 D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline right parenthesis comma ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline right parenthesis comma ellipsis comma ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline right parenthesis
ln u
p
per P
 le
ft pa
r
enthe s
i
s upp
er 
C Sub
s
c r i p t  i p l
u
s 1 Sup
ers
cript
 
left parenthesis 1 right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis comma ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis comma ellipsis comma ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis
Instead of taking the exponential of the sum of the log-evidence and log-prior plau-
sibility and then normalizing the plausibility, the maximum value of the sum of the 
log-evidence and log-prior plausibility is subtracted from the sum of the log-evidence 
and log-prior plausibility of each model class and then taking the exponential oper-
ator. This operation does not affect the relative plausibility among different model 
classes. As a result, the plausibility of a model class can be obtained as follows: 
S
t
artLa
you
t 1st R
o
w 
upp
e
r P  
l
eft parenthesis
 up
p
er C S
u
bscri
pt 
i plu
s
 1 
Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction exp left bracket ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis plus ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis minus upper M right bracket Over sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts exp left bracket ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis plus ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis minus upper M right bracket EndFraction comma 2nd Row m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline EndLayout
Star
tLay out
 
1st  
R
ow upper P left
 pa
r
enthe s
i
s upp
er 
C Sub
s
cri
pt 
i plus 1 S u p e rscr
ipt left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction exp left bracket ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis plus ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis minus upper M right bracket Over sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts exp left bracket ln p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis plus ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis minus upper M right bracket EndFraction comma 2nd Row m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline EndLayout
where upper M is the maximum value of the sum of the log-evidence and log-prior 
plausibility:

5.3 Real-Time System Identiﬁcation Using Predeﬁned Model Classes
155
up per M 
e
q
ual s
 
max Underscript
 m 
E
ndscr i
p
ts le
ft 
brace
 l
n p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis plus ln upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis right brace
5.3 
Real-Time System Identiﬁcation Using Predeﬁned 
Model Classes 
5.3.1 
Parametric Identiﬁcation with a Speciﬁed Model Class 
Consider a general, possibly nonlinear, dynamical system with uper N Subscript d degree-of-
freedoms (DOFs) and equation of motion: 
bold upper M ModifyingAbove bold itali c x W
ith two dots left parenthesis t right parenthesis plus script upper R left parenthesis bold italic x left parenthesis t right parenthesis comma ModifyingAbove bold italic x With dot left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis comma upper C right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bold italic x left parenthesis t right parenthesisdenotes the generalized coordinate vector of the system at time t; bold upper M is the 
mass matrix; the function script upper R left parenthesis period comma period semicolon period comma period right parenthesisrepresents the general linear/nonlinear restoring 
force governed by the possibly time-varying model parameters in bold italic theta left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript theta; upper C is 
the model class that speciﬁes the model parameterization; bold italic f is the excitation applied 
to the system and bold upper T is the inﬂuence matrix associated with bold italic f . Deﬁne the augmented 
state vector which is composed of the system state vector and the unknown model 
parameter vector as follows: 
bold i
t
alic y left pa ren thesis t 
right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold script x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript bold italic x Superscript plus upper N Super Subscript theta
where bold i talic x left parenthesis t right parenthesis element of double struck upper R Superscript upper N Super Subscript script x is the system state vector at time t. Then, the state-space 
representation of Eq. (5.22) can be expressed as follows: 
ModifyingAbove bold  italic y With
 dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis comma upper C right parenthesis
where g left parenthesis period comma period semicolon period comma period right parenthesisrepresents the nonlinear state-space function. By using Taylor series 
expansion, Eq. (5.24) can be discretized to the following equation: 
bold itali c y  Subs cr ip t i 
plus 1 Baseline equals bold upper A Subscript i Baseline bold italic y Subscript i Baseline plus bold upper B Subscript i Baseline bold italic f Subscript i Baseline plus bold italic delta Subscript i
where bol d italic y Subscript i Baseline identical to bold italic y left parenthesis i normal upper Delta t right parenthesis; bo ld  i ta lic f Subscript i Baseline identical to bold italic f left parenthesis i normal upper Delta t right parenthesis, and normal upper Delta t is the sampling time step; bold upper A Subscript i and bold upper B Subscript i are 
the transitional and input-to-state matrix, respectively; and bold italic delta Subscript i is the remainder term 
due to the local linear approximation. Detailed derivation of Eq. (5.25) and bold upper A Subscript i, bold upper B Subscript i
and bold italic delta Subscript i can be found in Chap. 2. 
Discrete-time response measurements bold italic z 1, bold italic z 2, …,  bold italic z Subscript i plus 1 are observed at uper N 0 DOFs: 
bold ita
l
ic z
 
Subscr
ipt i plus 1 Baseline equals h left parenthesis bold italic y Subscript i plus 1 Baseline right parenthesis plus bold italic n Subscript i plus 1

156
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
where h left parenthesis dot right parenthesisdeﬁnes the observation quantities; bold italic n Subscript i plus 1 represents the measurement noise 
at the lef t parenthesis i plus 1 right parenthesis t h time step and bold italic n is modeled as Gaussian independent and identically 
distributed (i.i.d.) process with zero mean and covariance matrix bol d upper Sigma Subscript n Baseline element of double struck upper R Superscript upper N 0 times upper N 0. 
Given the measurement dataset upper  D  Subscri p t  i  plus 1 Baseline equals StartSet bold italic z 1 comma bold italic z 2 comma ellipsis comma bold italic z Subscript i plus 1 Baseline EndSet, the updated state 
vector bold italic y Subscript i plus 1 vertical bar i plus 1 and its associated covariance matrix bold upper Sigma Subscript i plus 1 vertical bar i plus 1 can be obtained by 
using the extended Kalman ﬁlter (EKF) (Hoshiya and Saito 1985). The detailed 
derivation and implementation of the EKF can be found in Chap. 2. However, the 
implementation of the EKF has been mostly done by prescribing a model class upper C and 
the identiﬁcation results heavily rely on the prescribed model class. Therefore, the 
Bayesian real-time model class selection can be utilized as a rational and quantitative 
criterion to select the most suitable model class for reliable parametric identiﬁcation. 
Consider a set of uper N Subscript m model class candidates at the lef t parenthesis i plus 1 right parenthesis t h time step: 
bold i
t
alic 
upper C Su
bscr i p t  i plus 1
 Ba
s
eline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline EndSet
where upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, indicates a particular model parameterization for 
describing the dynamical system in Eq. (5.22). By using the Bayes’ theorem, the 
plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis can be given by using Eq. (5.13). In Eq. (5.13), the 
prior plausibility u
p
per P
 le
ft pa
renthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i Baseline right parenthesis
of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis is given as Eq. (5.15). Then, the 
crux to calculate the posterior plausibility in Eq. (5.13) is to derive the conditional 
evidence p
 
left parenthesi
s b
old italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
. 
The conditional evidence p
 
left parenthesi
s b
old italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
reﬂects the contribution of the current 
data point in establishing the plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis. It can be expressed as 
follows: 
S
t
artLayout 1st R
ow 
p
 left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline times 2nd Row exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S tartLayout
 1s t Row p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline times 2nd Row exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
St ar
tLa
y
out 1st Row p left parenthesis bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline times 2nd Row exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
S
t
artLa yout 1st
 Row p
 left p
a
renth esis bol
d 
italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N 0 Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript z comma i plus 1 vertical bar i Baseline EndAbsoluteValue Superscript negative one half Baseline times 2nd Row exp left bracket minus one half left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline bold upper Sigma Subscript z comma i plus 1 vertical bar i Superscript negative 1 Baseline left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis right bracket EndLayout
where bold italic z Subscript i plus 1 vertical bar i is the one-step-ahead predicted observation and it can be obtained by 
taking expectation of Eq. (5.26): 
StartLa you
t
 1st Ro
w
 1s
t
 Colum
n
 bold italic z Subscript i plus 1 vertical bar i 2nd Column identical to upper E left bracket bold italic z Subscript i plus 1 Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals h left parenthesis bold italic y Subscript i plus 1 vertical bar i Baseline right parenthesis EndLayout
where bold italic y Subscript i plus 1 vertical bar i is the one-step-ahead predicted state vector in the EKF (Hoshiya and 
Saito 1985). In addition, bold upper Sigma Subscript z comma i plus 1 vertical bar i is the covariance matrix of the one-step-ahead 
predicted observation and it can be obtained by using Eqs. (5.26) and (5.29):
StartLayo ut 
1s
t Row  1st Col
um
n bol d upper 
Sigma S
ubscript z comma i plus 1 vertical bar i 2nd Column identical to upper E left bracket left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals bold upper H bold upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n EndLayout

5.3 Real-Time System Identiﬁcation Using Predeﬁned Model Classes
157
StartLayou t 1 s t 
Row 1st Column bold upper Sigma Subscript z comma i plus 1 vertical bar i 2nd Column identical to upper E left bracket left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis left parenthesis bold italic z Subscript i plus 1 Baseline minus bold italic z Subscript i plus 1 vertical bar i Baseline right parenthesis Superscript normal upper T Baseline vertical bar upper D Subscript i Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals bold upper H bold upper Sigma Subscript i plus 1 vertical bar i Baseline bold upper H Superscript normal upper T Baseline plus bold upper Sigma Subscript n EndLayout
where bold upper H is the observation matrix given by: 
bo ld  upper H equals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y Sub Subscript i plus 1 vertical bar i
bol
d up
per H e
quals StartFraction partial differential h Over partial differential bold italic y EndFraction vertical bar Subscript bold italic y Sub Subscript i plus 1 vertical bar i
and bold upper Sigma Subscript i plus 1 vertical bar i is the covariance matrix of the one-step-ahead predicted state vector in 
the EKF (Hoshiya and Saito 1985). At each time step, the conditional evidence of 
each model class can be obtained by using Eq. (5.28) and then the plausibility of 
each model class can be updated by using Eq. (5.13). The plausibility in Eq. (5.13) 
quantiﬁes the performance of a model class considering data ﬁtting capability and 
robustness at each time step. The most plausible model class upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis is the one with 
the highest plausibility among a set of model class candidates with: 
upper 
C Su bscri
pt i
 plus
 1 S
up erscrip t  l e ft p
a
r
enthe
sis
 m Supe
r
 Superscript asterisk Superscript right parenthesis Baseline equals arg max Underscript StartLayout 1st Row upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline 2nd Row m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline EndLayout Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
where upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis is the most plausible model class at the lef t parenthesis i plus 1 right parenthesis t h time step and m Superscript asterisk is 
the time-dependent index of the most plausible model class. Based on the results 
of model class selection, robust parametric identiﬁcation results can be obtained by 
using multiple model classes or the most plausible model class. 
5.3.2 
Parametric Identiﬁcation Using Multiple Model Classes 
It often encounters that there is more than one model class with substantial plausibility 
for dynamical systems. As a result, in order to achieve robust parametric identiﬁcation 
results, multiple model classes can be utilized. The real-time system identiﬁcation 
results can be obtained as a weighted average of the estimation results from multiple 
model classes: 
M
o
dif
y
ingAb
ove bold i
tali c  y  With car
et S ubscri
p
t 
i 
p
lus 
1
 
Basel
ine
 left p
a
renthesi
s
 uppe
r C
 
Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline comma upper D Subscript i plus 1 Baseline right parenthesis equals sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis bold italic y Subscript i plus 1 vertical bar i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
where 
M
o
dif
y
ingAb
ove bold i
tali c  y  With car
et S ubscri
pt i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript m Superscript right parenthesis Baseline comma upper D Subscript i plus 1 Baseline right parenthesis
is the identiﬁcation results of the 
augmented state vector based on all the uper N Subscript m model classes at the lef t parenthesis i plus 1 right parenthesis t h time step; 
bold ita
l
ic y 
Sub
script i plus 1 vertical bar i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
, m eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, is the updated state vector from model class 
upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis at the lef t parenthesis i plus 1 right parenthesis t h time step and it is obtained by using the EKF; u
p
per P
 le
ft pare
nthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
is the plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis at the lef t parenthesis i plus 1 right parenthesis t h time step. Equation (5.33)

158
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
indicates that the parametric identiﬁcation by using multiple model classes is intrin-
sically a plausibility-weighted average of the parametric identiﬁcation results from 
a given set of model classes. 
The multi-model based real-time system identiﬁcation strategy is more robust 
than using a single prescribed model class because it utilizes the estimation from all 
model classes with properly assigned weightings (Yuen 2010b). 
5.3.3 
Parametric Identiﬁcation Using the Most Plausible 
Model Class 
The plausibilities of the underparameterized and overparameterized model classes 
will be close to zero so their contributions will be negligible to the identiﬁcation 
results in Eq. (5.33). In other words, if the plausibility u
p
per P 
lef
t paren
thesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
of the most 
plausible model class upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis is much larger than the plausibilities of the others, the 
parametric identiﬁcation results can be approximated from the most plausible model 
class upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis : 
S
t
art
L
ayout 
1st Row M
o
difyingAbo
v
e bold
 it
a
lic y Wit h ca
re
t
 
Subsc
rip
t i plu
s
 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals bold italic y Subscript i plus 1 vertical bar i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline right parenthesis 2nd Row m Superscript asterisk Baseline equals arg max Underscript m Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis EndLayout
On the other hand, the covariance matrix of the parametric identiﬁcation results 
using the most plausible model class upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis is given as follows:
S
t
art
L
ayout 
1st Row M
o
d ifyingAb
o
ve bol
d u
p
per Sigma  Wit
h 
c
a
ret S
ubs
cript i
 
plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals bold upper Sigma Subscript i plus 1 vertical bar i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline right parenthesis 2nd Row m Superscript asterisk Baseline equals arg max Underscript m Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis EndLayout
where bold upp
e
r Sig
ma 
Subscript i plus 1 vertical bar i plus 1 Baseline left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline right parenthesis
, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, is the covariance matrix of the updated 
state vector from model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis at the lef t parenthesis i plus 1 right parenthesis t h time step and it is obtained by 
using the EKF. Equations (5.34) and (5.35) imply that it is sufﬁcient to use the most 
plausible model class for real-time system identiﬁcation. 
5.3.4 
Predeﬁned Model Classes 
Consider the ﬁnest substructure conﬁguration for identiﬁcation. It has uper N Subscript k structural 
components and the component stiffness matrices are given by:

5.3 Real-Time System Identiﬁcation Using Predeﬁned Model Classes
159
bol
d uppe
r K  1  Supe
rsc
ript c Baseline comma bold upper K 2 Superscript c Baseline comma ellipsis comma bold upper K Subscript upper N Sub Subscript k Subscript Superscript c
where bol
d upper K Subscript n Superscript c Baseline element of double struck upper R Superscript upper N Super Subscript d Superscript times upper N Super Subscript d, n equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, is the component stiffness matrix of the n t h
ﬁnest substructure. For instance, consider a ten-story building. The ﬁnest substructure 
is considered as each story of the building and uper N Subscript k is taken as 10. 
A set of uper N Subscript m model class candidates is considered and each model class takes 
different groupings of the structural components into substructures. Speciﬁcally, for 
the m t h model class, there are up per 
N Subscript k Superscript left parenthesis m right parenthesis
substructures grouping the component stiffness 
matrices in Eq. (5.36) and the substructural stiffness matrices are given by: 
bold 
up per K 1
 S u p e r s cript 
l eft 
pa
renthesis m right parenthesis Baseline comma bold upper K 2 Superscript left parenthesis m right parenthesis Baseline comma ellipsis comma bold upper K Subscript upper N Sub Subscript k Sub Superscript left parenthesis m right parenthesis Subscript Superscript left parenthesis m right parenthesis
where bold 
upper K Subscript s Superscript left parenthesis m right parenthesis
, s equals 1  c o mma  2 c
omma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
, is the  s t h substructural stiffness matrix: 
bold 
up
p
e
r K Sub
sc
rip
t 
s Supersc r i p t  le ft p
a
renthesis m right parenthesis Baseline equals sigma summation Underscript n element of bold italic upper S Subscript s Superscript left parenthesis m right parenthesis Baseline Endscripts bold upper K Subscript n Superscript c Baseline comma s equals 1 comma 2 comma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
where bold 
italic upper S Subscript s Superscript left parenthesis m right parenthesis
, s eq uals 1  c o mma  2 c
omma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
, represents the membership vector for structural 
components of the s t h substructure in the m t h model class. For the ten-story building 
example, the simplest model class has only one substructure for all the ten stories, 
i.e., bold 
it
alic upp e r  S  1 Superscript left parenthesis m right parenthesis Baseline equals left bracket 1 comma 2 comma ellipsis comma 10 right bracket Superscript normal upper T and up per 
N 
Subscript k Superscript left parenthesis m right parenthesis Baseline equals 1. A slightly more complicated model class 
can be considered with two substructures: one for the ﬁrst story and the other for 
the remaining stories. In this case, bold 
it
alic upper S 1 Superscript left parenthesis m right parenthesis Baseline equals 1, bold 
it
alic upp e r  S  2 Superscript left parenthesis m right parenthesis Baseline equals left bracket 2 comma 3 comma ellipsis comma 10 right bracket Superscript normal upper T and up per 
N 
Su
bscript k Superscript left parenthesis m right parenthesis Baseline equals 2. As a result, bold 
italic upper S 1 Superscript left parenthesis m right parenthesis , bold 
italic upper S 2 Superscript left parenthesis m right parenthesis ,…, bold 
i tali
c upper S Subscript upper N Sub Subscript k Sub Superscript left parenthesis m right parenthesis Superscript left parenthesis m right parenthesis
form a mutually exclusive partition of the set 
StartS e t  1  comma 2 comma ellipsis comma upper N Subscript k Baseline EndSet. 
Then, the stiffness matrix of the m t h model class can be parameterized by using 
the substructural stiffness matrices: 
bold 
upper 
K
 
Su
p ersc
ri
pt l
eft pa
rent hesis
 
m
 r ight pa r e n t hes
is Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis equals sigma summation Underscript s equals 1 Overscript upper N Subscript k Superscript left parenthesis m right parenthesis Baseline Endscripts theta Subscript k comma s Superscript left parenthesis m right parenthesis Baseline bold upper K Subscript s Superscript left parenthesis m right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where bold 
upper 
K
 
Superscript left parenthesis m right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis element of double struck upper R Superscript upper N Super Subscript d Superscript times upper N Super Subscript d indicates the parametrized stiffness matrix of the m t h
model class and theta 
Subscript k comma s Superscript left parenthesis m right parenthesis is the stiffness parameter of the s t h substructure for the m t h
model class. The uncertain stiffness parameter vector for the m t h model class can 
be deﬁned by grouping the stiffness parameters of all the substructures in the m t h
model class: 
bold i
ta
l
i
c thet
a Su b s cript
 k S u p e r s c ript 
lef t pa
r
ent
h
es is m ri g h t  par
enthesis Baseline equals left bracket theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline comma theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline comma ellipsis comma theta Subscript k comma upper N Sub Subscript k Sub Superscript left parenthesis m right parenthesis Subscript Superscript left parenthesis m right parenthesis Baseline right bracket Superscript normal upper T Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
It is noted that bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, is time-dependent and the dependence of 
bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
on time is omitted for symbol simplicity.

160
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Given a set of uper N Subscript m prescribed model class candidates, the augmented state vector 
in Eq. (5.23) for  the  m t h model class can be obtained by grouping the state vector and 
the corresponding model parameter vector. Then, real-time parametric identiﬁcation 
for the m t h model class can be performed by using the EKF (Hoshiya and Saito 
1985). 
After obtaining the parametric identiﬁcation results at the lef t parenthesis i plus 1 right parenthesis t h time step, the 
conditional evidence of the m t h model class can be calculated by using Eq. (5.28). 
Then, by using the Bayes’ theorem, the plausibilities of these uper N Subscript m model class candi-
dates can be computed based on Eq. (5.13). Moreover, in order to realize robust 
parametric identiﬁcation, the real-time system identiﬁcation results are obtained by 
using all the uper N Subscript m model classes based on Eq. (5.33). In other words, the real-time 
identiﬁcation results are obtained by using the plausibility-weighted average of all 
the uper N Subscript m model classes. 
The procedure of the real-time system identiﬁcation using predeﬁned model 
classes can be summarized as follows: 
1. At the initial time step, i.e., i equals 0, set the initial conditions: 
(1) Deﬁne the structural component matrices bol
d upper K Subscript n Superscript c, n 
eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, in  
Eq. (5.37). 
(2) Deﬁne the substructural stiffness matrices bold 
upper K Subscript s Superscript left parenthesis m right parenthesis
, m eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, in  
Eq. (5.38) for all the uper N Subscript m model classes. 
(3) Set the initial state vector bold italic y Subscript 0 vertical bar 0 and the initial covariance matrix bold upper Sigma Subscript 0 vertical bar 0 . 
(4) Set the initial prior plausibilities as u
p
per P
 
left 
p
ar enthesis upper C 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by upper N Subscript m, m 
eq
uals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline. 
At each time step (i greater than or equals 0): 
2. Calculate the updated state vector bold italic y Subscript i vertical bar i and its associated covariance matrix bold upper Sigma Subscript i vertical bar i . 
3. Calculate the conditional evidence by using Eq. (5.28). 
4. Calculate the plausibilities of all the uper N Subscript m model classes by using Eq. (5.13). 
5. Obtain the real-time system identiﬁcation results using multiple model classes 
based on Eq. (5.33). 
6. Go back to Step 2 for the next time step. 
5.4 
Self-Calibratable Model Classes 
Although Bayesian model class selection provides a rational and quantitative basis 
for assessing the relative performance of the model classes, it requires that a good 
model class exists in the prescribed model class pool. This is more difﬁcult than 
intuition because it requires not only the fundamental understanding of the underlying 
dynamical system but also, more critically, the suitable complexity of a model class 
regarding the given measurement conﬁguration and target spatial resolution of the 
identiﬁcation results. Otherwise, reliable parametric identiﬁcation results cannot be 
achieved among the poor model class candidates. Therefore, in this section, we

5.4 Self-Calibratable Model Classes
161
present a self-calibrating strategy to adaptively reconﬁgure the model classes. This 
strategy starts with a few simple model class candidates. The model classes can 
be selected in a real-time manner and their parameterization structure can also be 
recalibrated adaptively (Yuen et al. 2019). Consequently, it does not require one or 
a few good model classes to be prescribed. 
5.4.1 
Parameterization and Model Classes 
In order to correct the discrepancy of the model class candidates, the ﬁnest substruc-
ture conﬁguration up to the component level is considered. The component stiffness 
matrices and the substructural stiffness matrices can be deﬁned by using Eqs. (5.36) 
and (5.37), respectively. Then, the self-calibrating strategy can be performed based 
on the parameterized stiffness matrices and up er N Subscript m Baseline plus 1 model class candidates are 
constructed in this strategy. In particular, consider the simplest model class with 
only one adjustable parameter as the baseline model class with the model class index 
m equals 0. Its stiffness matrix is parameterized as follows: 
bold 
upper 
K
 
Superscr
ipt left
 
parenthesis 0 right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline bold upper K 1 Superscript left parenthesis 0 right parenthesis
where theta 
Subscript k comma 1 Superscript left parenthesis 0 right parenthesis is the sole stiffness parameter of the baseline model class; and bold 
upper K 1 Superscript left parenthesis 0 right parenthesis
is the 
substructural stiffness matrix of the baseline model class: 
bold 
up
pe
r 
K
 1 S
upe
r
script left parenthesis 0 right parenthesis Baseline equals sigma summation Underscript n equals 1 Overscript upper N Subscript k Baseline Endscripts bold upper K Subscript n Superscript c
Equations (5.41) and (5.42) imply that the baseline model class is constructed with 
only one substructure. On the other hand, for each of the remaining uper N Subscript m model classes, 
the stiffness matrix for each model class is constructed by using up per 
N Subscript k Superscript left parenthesis m right parenthesis
substructural 
stiffness matrices associated with the uncertain stiffness parameters: 
bold 
upper 
K
 
Su
p ersc
ri
pt l
eft pa
rent hesis
 
m
 r ight pa r e n t hes
is Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis equals sigma summation Underscript s equals 1 Overscript upper N Subscript k Superscript left parenthesis m right parenthesis Baseline Endscripts theta Subscript k comma s Superscript left parenthesis m right parenthesis Baseline bold upper K Subscript s Superscript left parenthesis m right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where bold 
upper 
K
 
Superscript left parenthesis m right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis element of double struck upper R Superscript upper N Super Subscript d Superscript times upper N Super Subscript d indicates the parametrized stiffness matrix of the m t h
model class; bold 
upper K Subscript s Superscript left parenthesis m right parenthesis
is the s t h substructural stiffness matrix given by Eq. (5.38); theta 
Subscript k comma s Superscript left parenthesis m right parenthesis is 
the stiffness parameter of the s t h substructure for the m t h model class and the uncer-
tain stiffness parameter vector bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
for the m t h model class is deﬁned by grouping 
the stiffness parameters of all the substructures in the m t h model class, given as 
Eq. (5.40). It is noted that bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
, m eq uals 0 c o m m a  1 comma 2 comma ellipsis comma upper N Subscript m Baseline, is time-dependent and the 
dependence of bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
on time is omitted for symbol simplicity.

162
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
By utilizing Eq. (5.28), the conditional evidence for each model class candidate 
can be calculated and then the plausibilities of the up er N Subscript m Baseline plus 1 model classes can be 
obtained. The most plausible model class upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis at the lef t parenthesis i plus 1 right parenthesis t h time step is given by: 
upper 
C Su bscri
pt i
 plus
 1 S
up erscrip t  l e ft p
a
r
enthe
sis
 m Supe
r
 Superscript asterisk Superscript right parenthesis Baseline equals arg max Underscript StartLayout 1st Row upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline 2nd Row m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline EndLayout Endscripts upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
where m Superscript asteriskis the index of the most plausible model class and it is a time-dependent 
index due to the time-varying behavior of the dynamical system. Equation (5.44) 
indicates that upper 
C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis achieves the maximum plausibility among the up er N Subscript m Baseline plus 1 model 
classes. The real-time system identiﬁcation results are obtained by using the most 
plausible model class based on Eqs. (5.34) and (5.35). It is noted that if there is 
more than one model class achieving the same highest plausibility, evaluation of the 
plausibilities will continue until one model class outperforms the others with higher 
plausibility. 
5.4.2 
Self-Calibrating Strategy 
After constructing the model classes, the self-calibrating strategy can be implemented 
as follows. When the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis dominates the plausibility among the 
upper N Subscript m Baseline plus 1 model class candidates, it implies that the baseline model class is sufﬁcient for 
the underlying dynamical system. Meanwhile, other more complicated model classes 
provide only minor and possibly spurious improvement in data ﬁtting. Therefore, 
the baseline model class should be utilized to represent the underlying dynamical 
system due to the principle of parsimony. On the other hand, when a non-baseline 
model class achieves the highest plausibility, it implies that there are substantial 
differential changes of the substructures in the underlying dynamical system. The 
baseline model class is insufﬁcient and it underﬁts the measurements. As a result, 
calibration is triggered and all the model classes will be reconﬁgured to correct their 
deﬁciencies using the information from the most plausible model class. Then, the 
plausibilities of the calibrated model classes will be reset to uniform so that all the 
calibrated model classes will start with the same plausibility in the forthcoming time 
step. 
In addition, in order to achieve adaptiveness for damage tracking, a lower bound is 
imposed for the plausibilities, namely, upper P Subscript l. If the plausibility of a model class is lower 
than upper P Subscript l, it will be replaced by upper P Subscript l. The plausibilities of the remaining model classes 
will be normalized such that the total plausibilities of all model classes are equal to 
unity. This minimum plausibility can be taken as a sufﬁciently small positive value, 
say 0.0001. The reason for imposing this plausibility lower bound is as follows. 
If the proposed identiﬁcation method is used for long-term monitoring, it will be 
anticipated that the underlying structure is healthy for a very long period of time.

5.4 Self-Calibratable Model Classes
163
Then, the non-baseline model classes will all have inﬁnitesimal plausibilities, say 
10 Superscript negative 100 or even smaller. Then, when damage occurs, it will take long time for the 
plausibility of the suitable model class to increase. By introducing this plausibility 
lower bound, it can avoid long delay of the switching of the most plausible model 
class due to the time-varying behavior of the dynamical system. 
5.4.2.1
Triggering Conditions 
At the early stage of identiﬁcation, the results for model class selection are likely to be 
highly ﬂuctuating due to the inaccurate initial conditions and lack of measurements. 
Therefore, a short training stage should be performed before the self-calibrating 
strategy is activated. In the training stage, all these model classes will be evaluated 
according to their plausibilities without performing the self-calibrating strategy. The 
training stage takes roughly two small-amplitude fundamental periods of the nominal 
model. 
After the training stage, calibration of the model classes is activated according to 
the plausibilities. The following two criteria to trigger the calibration are given as: 
m Supe
rscript asterisk Baseline not equals 0
upper 
C Su bscript 
i
 
pl us j Su p e r s cri
pt left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline equals upper C Subscript i Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline comma j equals 1 comma 2 comma ellipsis comma upper N Subscript t Baseline
where uper N Subscript t is the prescribed number of time steps such that the non-baseline model 
class possesses the highest plausibility. The value of uper N Subscript t is again taken to cover roughly 
two small-amplitude fundamental periods of the nominal model. Equations (5.45) 
and (5.46) indicate that calibration will be triggered when a non-baseline model class 
dominates the plausibility for consecutive uper N Subscript t time steps. 
5.4.2.2
Self-Calibrating Mechanism 
If the triggering conditions in Eqs. (5.45) and (5.46) are satisﬁed, calibration will be 
triggered and the following operations will be performed to correct the deﬁciencies 
of the model class candidates. 
The component stiffness matrices are ﬁrst calibrated according to the model 
updating results from the most plausible model class. When the triggering conditions 
are satisﬁed at the i t h time step, the component stiffness matrices will be calibrated 
as follows: 
M
odi
fyin
gAb
ov e  b o ld
 up
per
 K With caret Subscript 1 Superscript c Baseline comma ModifyingAbove bold upper K With caret Subscript 2 Superscript c Baseline comma ellipsis comma ModifyingAbove bold upper K With caret Subscript upper N Sub Subscript k Subscript Superscript c
where M
odi
fy ingAbove bold upper K With caret Subscript n Superscript c Baseline element of double struck upper R Superscript upper N Super Subscript d Superscript times upper N Super Subscript d, n equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, is the calibrated component stiffness matrix 
of the n t h structural component and it is given by:

164
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
M
odi
fy ing
Above 
bold  up
pe
r K With c
a
ret Subscri p t  n  Su persc
r
ipt c Baseline equals ModifyingAbove theta With caret Subscript k comma s Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline bold upper K Subscript n Superscript c Baseline comma n element of bold italic upper S Subscript s Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline comma s equals 1 comma 2 comma ellipsis comma upper N Subscript k Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis
where M
odifyi
ngAbove theta With caret Subscript k comma s Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis
is the updated stiffness parameter of the s t h substructure in the most 
plausible model class; and bold i
talic upper S Subscript s Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis
, s equals 1  c o mma  2 co
mma ellipsis comma upper N Subscript k Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis
, represents the membership 
vector for the structural components of the s t h substructure in the most plausible 
model class. 
Then, the substructural stiffness matrices can be updated by utilizing the calibrated 
component stiffness matrices: 
M
odify
in gAb
ove b
ol d  u p p er
 K Wi
t h ca
re
t Subscript 1 Superscript left parenthesis m right parenthesis Baseline comma ModifyingAbove bold upper K With caret Subscript 2 Superscript left parenthesis m right parenthesis Baseline comma ellipsis comma ModifyingAbove bold upper K With caret Subscript upper N Sub Subscript k Sub Superscript left parenthesis m right parenthesis Subscript Superscript left parenthesis m right parenthesis
where m eq uals 0 c o m m a  1 comma 2 comma ellipsis comma upper N Subscript m Baseline and M
odify
ingAbove bold upper K With caret Subscript s Superscript left parenthesis m right parenthesis
, s eq uals 1  c o mma  2 c
omma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
, is the  s t h updated 
substructural stiffness matrix in the m t h model class, given by: 
M
odify
in
g
A
bove bo
ld
 
up
er
 K  With c a r e t  Su bscr
i
pt s Superscript left parenthesis m right parenthesis Baseline equals sigma summation Underscript n element of bold italic upper S Subscript s Superscript left parenthesis m right parenthesis Baseline Endscripts ModifyingAbove bold upper K With caret Subscript n Superscript c Baseline comma s equals 1 comma 2 comma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
where bold 
italic upper S Subscript s Superscript left parenthesis m right parenthesis
, s equals 1  c o mma  2 c
omma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
, represents the membership vector for the structural 
components of the s t h substructure in the m t h model class. Then, the stiffness matrix 
of the m t h model class can be parameterized by using the updated substructural 
stiffness matrices: 
M
odifyin
g Abov
e 
bold
 upper
 K W i
th ca
r
e
t Superscrip t  l e ft 
parenthesis m right parenthesis Baseline equals sigma summation Underscript s equals 1 Overscript upper N Subscript k Superscript left parenthesis m right parenthesis Baseline Endscripts theta Subscript k comma s Superscript left parenthesis m right parenthesis Baseline ModifyingAbove bold upper K With caret Subscript s Superscript left parenthesis m right parenthesis Baseline comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
For instance, after calibrating the component stiffness matrices and obtaining the 
updated substructural stiffness matrices, the stiffness matrix of the baseline model 
class is calibrated as follows: 
M
odifyingAbove
 bol
d upp
e
r K With caret Superscript left parenthesis 0 right parenthesis Baseline equals theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline ModifyingAbove bold upper K With caret Subscript 1 Superscript left parenthesis 0 right parenthesis
where M
odify
ingAbove bold upper K With caret Subscript 1 Superscript left parenthesis 0 right parenthesis
is the updated substructural stiffness matrix of the baseline model class, 
given by: 
M
odify
in
gA
bo
v
e bo
l
d u
p
per K With caret Subscript 1 Superscript left parenthesis 0 right parenthesis Baseline equals sigma summation Underscript n equals 1 Overscript upper N Subscript k Baseline Endscripts ModifyingAbove bold upper K With caret Subscript n Superscript c
After calibrating the stiffness matrices for all the model classes by using Eq. (5.51), 
the augmented state vector and its associated covariance matrix for all the model 
classes are reset as follows:

5.4 Self-Calibratable Model Classes
165
M
odify
ingAbove  
b
old ita
lic y Wi th ca
ret S
ubs
c
ri pt i plus 1  v e rti
cal bar i plus 1 Superscript left parenthesis m right parenthesis Baseline equals left bracket bold script x Subscript i plus 1 vertical bar i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis normal upper T Baseline comma bold 1 Subscript upper N Sub Subscript theta Subscript times 1 Superscript normal upper T Baseline right bracket Superscript normal upper T Baseline comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
M
odify
ingAbove  
b
old up
per Sigma With ca
ret Subs
cript i plus 1 vertical bar i plus 1 Superscript left parenthesis m right parenthesis Baseline equals Start 2 By 2 Matrix 1st Row 1st Column bold upper Sigma Subscript script x comma i plus 1 vertical bar i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline 2nd Column bold 0 Subscript upper N Sub Subscript script x Subscript times upper N Sub Subscript theta Subscript Baseline 2nd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript script x Subscript Baseline 2nd Column one ninth bold upper I Subscript upper N Sub Subscript theta Subscript Baseline EndMatrix comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
Modi
f
y
in gAbove bol d  u p per
 Sigma With caret Subscript i plus 1 vertical bar i plus 1 Superscript left parenthesis m right parenthesis Baseline equals Start 2 By 2 Matrix 1st Row 1st Column bold upper Sigma Subscript script x comma i plus 1 vertical bar i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline 2nd Column bold 0 Subscript upper N Sub Subscript script x Subscript times upper N Sub Subscript theta Subscript Baseline 2nd Row 1st Column bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript script x Subscript Baseline 2nd Column one ninth bold upper I Subscript upper N Sub Subscript theta Subscript Baseline EndMatrix comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
where M
odify
ingAbove bold italic y With caret Subscript i plus 1 vertical bar i plus 1 Superscript left parenthesis m right parenthesis and M
odify
ingAbove bold upper Sigma With caret Subscript i plus 1 vertical bar i plus 1 Superscript left parenthesis m right parenthesis are the calibrated augmented state vector and associated 
covariance matrix, respectively, and they serve as the calibrated prior mean and 
prior covariance matrix for the augmented state vector in the next propagation time 
step. bold s
cript x Subscript i plus 1 vertical bar i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis and bold u
pper Sigma Subscript script x comma i plus 1 vertical bar i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis are the state vector and associated covariance matrix 
of the most plausible model class, respectively. Equation (5.54) indicates that the 
augmented state vector is reset to the state vector of the most plausible model class 
and unity model parameters. Moreover, the submatrix in Eq. (5.55) corresponding 
to the model parameters is reset to 1 divided by 9 bold upper I Subscript upper N Sub Subscript theta. It is utilized to cover a sufﬁciently wide 
range for the parameters since it gives a standard deviation of 1 divided by 3 on the reset unity 
model parameters. 
Finally, the plausibilities for all the model classes are reset to uniform: 
u
p
per P
 le
ft pare
n
t
hesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction 1 Over upper N Subscript m Baseline plus 1 EndFraction comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
up er P 
le ft parenth e s i s  up
per C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis equals StartFraction 1 Over upper N Subscript m Baseline plus 1 EndFraction comma m equals 0 comma 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
Equation (5.56) indicates that in the self-calibrating strategy, after calibrating the 
stiffness matrices, all the up er N Subscript m Baseline plus 1 model classes will restart with the same plausibility 
for the forthcoming calculation. The EKF continues to propagate for the next time 
step. 
5.4.3 
Procedure of the Real-Time System Identiﬁcation 
with Self-Calibratable Model Classes 
5.4.3.1
Training Stage 
A short training stage is implemented for roughly two small-amplitude fundamental 
periods of the nominal model. This training stage is ﬂexible and a rough estimation of 
the small-amplitude fundamental frequency can be easily obtained from the Fourier 
spectrum of the response for the dynamical systems. 
1. At the initial time step, i.e., i equals 0, set the initial conditions: 
(1) Deﬁne the structural component matrices bol
d upper K Subscript n Superscript c, n 
eq uals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, in  
Eq. (5.36). 
(2) Deﬁne the substructural stiffness matrix bold 
upper K 1 Superscript left parenthesis 0 right parenthesis
for the baseline model class 
and the substructural stiffness matrices bold 
upper K Subscript s Superscript left parenthesis m right parenthesis
, s eq uals 1  c o mma  2 c
omma ellipsis comma upper N Subscript k Superscript left parenthesis m right parenthesis
, m eq
uals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, for the remaining uper N Subscript m model classes.

166
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
(3) Set the initial state vector and the initial covariance matrix. 
(4) Set the initial prior plausibilities as u
p
per P
 
left 
p
ar enthes is upper C 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by left parenthesis upper N Subscript m Baseline plus 1 right parenthesis, m eq
uals 0 c o m m a  1 comma 2 comma ellipsis comma upper N Subscript m Baseline. 
(5) Set the lower bound of the plausibility uper P Subscript l and the number of consecutive 
time steps upper N Subscript t. 
2. At the i t h (i greater than or equals 0) time step, calculate the conditional evidence by using Eq. (5.28) 
and the plausibility by using Eq. (5.13). If the plausibility of a model class is 
lower than upper P Subscript l, it will be replaced by upper P Subscript l. Then, normalize the plausibilities of the 
remaining model classes such that the sum of the plausibilities for all the model 
classes is equal to unity. 
3. The training stage will be terminated if it has been carried out for uper N Subscript t time steps. 
Otherwise, continue for the next time step from Step 2. 
5.4.3.2
Working Stage 
When the training stage is terminated, the proposed identiﬁcation process will enter 
into the working stage. 
1. At the i t h time step, calculate the conditional evidence by using Eq. (5.28) and the 
plausibility by using Eq. (5.13). If the plausibility of a model class is lower than 
upper P Subscript l, it will be replaced by upper P Subscript l. Then, normalize the plausibilities of the remaining 
model classes such that the sum of the plausibilities for all the model classes is 
equal to unity. 
2. Determine the most plausible model class and its system identiﬁcation results 
are regarded as the current identiﬁcation results. 
3. Check the triggering conditions of calibration in Eqs. (5.45) and (5.46). 
(1) If the triggering criteria are fulﬁlled, calibration is triggered with the 
following calibration procedures: 
(a) 
Calibrate the component stiffness matrices by using the model updating 
results from the most plausible model class based on Eq. (5.49). 
(b) Reconﬁgure the substructural stiffness matrices in all the Nm + 1 model 
classes by using Eq. (5.50). 
(c) 
Calibrate the augmented state vector and associated covariance matrix 
by using Eqs. (5.54) and (5.55), respectively. 
(d) Reset the plausibilities as a uniform distribution by using Eq. (5.56). 
(2) Otherwise, go back to Step 1 for the next time step.

5.5 Hierarchical Interhealable Model Classes
167
5.5 
Hierarchical Interhealable Model Classes 
For practical system identiﬁcation problems, there are usually a large number of 
uncertain parameters and ﬁner discretization of the model is desirable. Although 
the Bayesian model class selection allows to choose among some prescribed model 
classes, it often encounters that the number of possible model classes is large. In 
particular, for the Bayesian real-time model class selection, the plausibilities for 
all the model class candidates are evaluated at each time step so the computational 
demand grows drastically. The large number of model class candidates will hamper 
the application of the Bayesian real-time model class selection. Therefore, in this 
section, we present a hierarchical strategy for the Bayesian real-time model class 
selection. The model classes are established in a hierarchical manner so that the 
proposed strategy requires only a small number of model classes, yet being able to 
explore a large solution space (Yuen and Dong 2020). Consequently, the method 
can handle the situation with a large number of damage scenarios while it maintains 
relatively low computational cost. 
5.5.1 
Hierarchical Model Classes 
5.5.1.1
Model Classes and Parameterization in Hierarchical Level I 
Hierarchical Level I considers relatively coarser model classes and the resolution of 
these model classes is up to the substructure level. In Hierarchical Level I, the entire 
structure is divided into uper N Subscript upper I substructures. The substructural stiffness matrices are 
obtained in the same fashion as Eq. (5.38) by using the component stiffness matrices 
given by Eq. (5.36). 
For the Bayesian real-time model class selection, in order to determine the optimal 
model class, there are 2 Su perscript upper N Super Subscript upper I Baseline minus 1 possible model classes with these uper N Subscript upper I substructures to 
be evaluated at each time step. However, the large number of model class candidates 
will drastically deteriorate the real-time capability of system identiﬁcation. On the 
other hand, by using the hierarchical model classes, only up er N Subscript upper I Baseline plus 1 model classes are 
considered in Hierarchical Level I: 
bo ld
 ita l
i
c upp
er C Subsc
ript i plu
s 1 S u p e rscrip t 
upp
e
r I Baseline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis upper N Super Subscript upper I Superscript right parenthesis Baseline EndSet
where upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 0 c o m m a  1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline, is the  m t h model class at the lef t parenthesis i plus 1 right parenthesis t h time step 
in Hierarchical Level I and it is constructed based on a speciﬁed parameterization of 
the stiffness matrix for the underlying structures. As a result, the number of model 
classes to be evaluated in Hierarchical Level I grows only linearly with the number 
of substructures. In particular, the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis which includes only 
one stiffness parameter is introduced and the corresponding parameterization of the 
stiffness matrix can be expressed as follows:

168
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
bold 
upper 
K
 
Superscr
ipt 
le
f
t pa
ren
t
hesis 0 right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline sigma summation Underscript n equals 1 Overscript upper N Subscript c Baseline Endscripts bold upper K Subscript n Superscript c
where theta 
Subscript k comma 1 Superscript left parenthesis 0 right parenthesis is the sole stiffness parameter in the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis; bol
d upper K Subscript n Superscript c, 
n equals 1  c o mma 2 comma ellipsis comma upper N Subscript c Baseline, is the  n t h structural component stiffness matrix. For the remaining 
model classes in Hierarchical Level I, each model class has two stiffness parameters 
and the corresponding parameterization of the stiffness matrix is given by: 
bold 
upper 
K
 
Superscr
ipt left 
pa
renthesi
s m 
ri
g
ht  par
e nthes
is Ba
se l
in e left p a r e nth
esis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline bold upper K Subscript upper I Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline sigma summation Underscript StartLayout 1st Row s equals 1 2nd Row s not equals m EndLayout Overscript upper N Subscript upper I Baseline Endscripts bold upper K Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline
where bold 
upper K Subscript upper I Superscript left parenthesis m right parenthesis
, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript upper I Baseline, is the  m t h substructural stiffness matrix of the model 
classes in Hierarchical Level I and it is given by: 
bold 
up
p
e
r K Sub
scr
ip
t upper I  S u p ers
cript left parenthesis m right parenthesis Baseline equals sigma summation Underscript n element of bold italic upper S Superscript left parenthesis m right parenthesis Baseline Endscripts bold upper K Subscript n Superscript c Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline
where bold italic upper S Superscript left parenthesis m right parenthesisis the membership vector of the m t h substructure and bold italic upper S Superscript left parenthesis 1 right parenthesis, bold italic upper S Superscript left parenthesis 2 right parenthesis,…, bold italic upper S Superscript left parenthesis upper N Super Subscript upper I Superscript right parenthesis
form a mutually exclusive partition of the set StartS e t  1  comma 2 comma ellipsis comma upper N Subscript k Baseline EndSet. The stiffness parameter 
vector bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
for identiﬁcation in the model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis: 
bold i
ta
l
i
c thet
a Su b s cript
 k 
Sup
erscript left parenthesis m right parenthesis Baseline equals left bracket theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline comma theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline right bracket Superscript normal upper T
It is noted that bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
is time-dependent and the dependence of bold i
talic theta Subscript k Superscript left parenthesis m right parenthesis
on time is omitted 
for symbol simplicity. For Eq. (5.59), it is worth noting that the resolution of the 
model classes in Hierarchical Level I is up to the substructure level. Each model 
class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript upper I Baseline, in Hierarchical Level I (except the baseline model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis) has a designated stiffness parameter theta 
Subscript k comma 1 Superscript left parenthesis m right parenthesis for the m t h substructure. For 
example, consider a one hundred-story building with up er N Subscript upper I Baseline equals 10 substructures and each 
substructure includes ten stories of the building. In Hierarchical Level I, up er N Subscript upper I Baseline plus 1 equals 11
model classes are considered. Speciﬁcally, the baseline model class with the entire 
structure being the only substructure is established. For the remaining model classes 
in Hierarchical Level I, two parameters are utilized to describe the stiffness matrix 
of the structure. Each model class has one stiffness parameter for ten stories and 
the other stiffness parameter for the rest of the ninety stories. Those ten stories in 
different model classes are mutually exclusive. 
After constructing the model classes in Hierarchical Level I, their plausibilities 
will be evaluated by using Eq. (5.13). When the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis has the 
highest plausibility, it implies that the real-time system identiﬁcation in Hierarchical

5.5 Hierarchical Interhealable Model Classes
169
Level I is sufﬁcient for the underlying dynamical system. However, when a non-
baseline model class upper 
C Su bscr ipt i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline comma m Superscript asterisk Baseline not equals 0 dominates the plausibility, it implies that there 
are substantial modeling errors necessary to be corrected and the potential modeling 
errors can be roughly located in the m Superscript asterisk Baseline t h substructure. Then, the algorithm will shift 
to Hierarchical Level II. 
5.5.1.2
Model Classes and Parameterization in Hierarchical Level II 
In Hierarchical Level I, when a non-baseline model class upper 
C Su bsc ript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline left parenthesis m Superscript asterisk Baseline not equals 0 right parenthesisdominates 
the plausibility for uper N Subscript t consecutive time steps, model classes in Hierarchical Level II 
will be triggered to calibrate the stiffness matrices in a ﬁner level. 
Use up p er N Subscript upper I upper I to denote the number of structural components in the m Superscript asterisk Baseline t h substructure. 
The model classes in Hierarchical Level II focus on all the structural components in 
the m Superscript asterisk Baseline t h substructure and they are expressed as follows: 
bo l d  
ital i
c
 uppe
r C Subscript
 i 
plus 1 Sup
ers
c r i p t  upper I  u pp
er 
I
 Baseline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma upper N Super Subscript upper I upper I Superscript right parenthesis Baseline EndSet
where upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis is the baseline model class and its stiffness matrix is given by Eq. (5.58); 
upper C 
Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
, q equals 1  c o mma  2 comma ellipsis comma upper N Subscript upper I upper I Baseline, represents the q t h model class in Hierarchical Level II; 
m Superscript asteriskand q in its superscript represent the m Superscript asterisk Baseline t h substructure selected in Hierarchical 
Level I and the q t h component in the selected substructure, respectively. 
The component stiffness matrices in the m Superscript asterisk Baseline t h substructure can be expressed as 
follows: 
bol
d upper K
 Subs c r i p t s 
left  pa
renthesis 1 right parenthesis Superscript c Baseline comma bold upper K Subscript s left parenthesis 2 right parenthesis Superscript c Baseline comma ellipsis comma bold upper K Subscript s left parenthesis upper N Sub Subscript upper I upper I Subscript right parenthesis Superscript c
where s lef t parenthesis q right parenthesis equals bold italic upper S Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline left parenthesis q right parenthesis, q eq uals 1  c o mma  2 comma ellipsis comma upper N Subscript upper I upper I Baseline, represents the q t h element in the 
membership vector bold italic upper S Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis of the m Superscript asterisk Baseline t h substructure. In other words, bol
d upper K Subscript s left parenthesis q right parenthesis Superscript c, q eq
uals 1  c o mma  2 comma ellipsis comma upper N Subscript upper I upper I Baseline, represents the q t h component stiffness matrix in the m Superscript asterisk Baseline t h substruc-
ture. Then, the stiffness matrices for model classes upper C 
Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
, q equals 1  c o mma  2 comma ellipsis comma upper N Subscript upper I upper I Baseline, in  
Hierarchical Level II are given by: 
bold upp
er K Supe
r
s
cript left 
par
ent
hesis m Super Su
pers
cr
i
pt  ast
e risk Sup
ers
cr
ip t comma  q  r igh t  
parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline bold upper K Subscript s left parenthesis q right parenthesis Superscript c Baseline plus theta Subscript k comma 2 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline sigma summation Underscript StartLayout 1st Row n equals 1 2nd Row n not equals s left parenthesis q right parenthesis EndLayout Overscript upper N Subscript c Baseline Endscripts bold upper K Subscript n Superscript c Baseline comma q equals 1 comma 2 comma ellipsis comma upper N Subscript upper I upper I Baseline
where bold ital
ic theta Subscript k Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
is the stiffness parameter vector for identiﬁcation in model class upper C 
Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
and it is deﬁned as follows:

170
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
bold ital
i
c
 
theta Sub
scr
i p t k Supe
rsc
rip
t left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline equals left bracket theta Subscript k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline comma theta Subscript k comma 2 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline right bracket Superscript normal upper T
It is noticed that the resolution of the model classes in Hierarchical Level II is up to 
the structural component level and each model class upper C 
Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
, q equals 1  c o mma  2 comma ellipsis comma upper N Subscript upper I upper I Baseline, has a 
designated stiffness parameter theta Sub
script k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis
for the q t h component in the m Superscript asterisk Baseline t h substructure. 
The model classes in Hierarchical Level II will be evaluated according to their 
plausibilities by using Eq. (5.13). When a non-baseline model class upper C S
ubscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
domi-
nates the plausibility among all the up p e r N Subscript upper I upper I Baseline plus 1 model class candidates in Hierarchical 
Level II, it implies that there are substantial modeling errors required to be corrected. 
The potential modeling errors can be ﬁnely located in the s left parenthesis q Superscript asterisk Baseline right parenthesis t h structural compo-
nent. Then, the algorithm will shift to interhealing process to calibrate the modeling 
error in the stiffness matrix of the s left parenthesis q Superscript asterisk Baseline right parenthesis t h structural component. 
5.5.2 
Interhealing Mechanism 
When model class upper C S
ubscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
achieves the maximum plausibility among the up p e r N Subscript upper I upper I Baseline plus 1
model classes in Hierarchical Level II for uper N Subscript t consecutive time steps, interhealing 
mechanism is triggered to correct the modeling errors in the stiffness matrix of the 
s left parenthesis q Superscript asterisk Baseline right parenthesis t h structural component. 
According to the identiﬁcation results in model class upper C S
ubscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
in Hierarchical Level 
II, all the component stiffness matrices are calibrated as follows: 
M
odi
fyingAbov
e bold up
per
 K 
With 
caret Subscript s left parenthesis q Sub Superscript asterisk Subscript right parenthesis Superscript c Baseline equals ModifyingAbove theta With caret Subscript k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis Baseline bold upper K Subscript s left parenthesis q Sub Superscript asterisk Subscript right parenthesis Superscript c
M
odi
fy ing
Above bol
d u
ppe
r 
K With ca r e t  Subs cr i pt n Sup
erscript c Baseline equals ModifyingAbove theta With caret Subscript k comma 2 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis Baseline bold upper K Subscript n Superscript c Baseline comma n equals 1 comma 2 comma ellipsis comma upper N Subscript k Baseline ampersand n not equals s left parenthesis q Superscript asterisk Baseline right parenthesis
where M
odi
fyingAbove bold upper K With caret Subscript n Superscript c, n equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline, is the calibrated component stiffness matrix; M
odifyingA
bove theta With caret Subscript k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
and M
odifyingA
bove theta With caret Subscript k comma 2 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
are the updated stiffness parameters of model class upper C S
ubscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
. 
Then, the stiffness matrices in Hierarchical Level I and II can be updated based 
on the calibrated component stiffness matrices. In particular, the stiffness matrix of 
the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis can be updated by: 
M
odify
ingAbo
v
e
 bold up
pe
r 
K
 Wit
h
 ca
r
et Superscript left parenthesis 0 right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline sigma summation Underscript n equals 1 Overscript upper N Subscript k Baseline Endscripts ModifyingAbove bold upper K With caret Subscript n Superscript c
where M
odifyingAbove bold upper K With caret Superscript left parenthesis 0 right parenthesisis the updated stiffness matrix for the baseline model class. 
In Hierarchical Level I, the stiffness matrices for the non-baseline model classes 
are updated as follows:

5.5 Hierarchical Interhealable Model Classes
171
M
odify
ingAbo
v
e
 bold up
per K
 With
 c
aret Sup
ersc
ri
p
t left
 paren
t
hesis
 m  
ri ght par e n t h esi
s Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline ModifyingAbove bold upper K With caret Subscript upper I Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline sigma summation Underscript StartLayout 1st Row s equals 1 2nd Row s not equals m EndLayout Overscript upper N Subscript upper I Baseline Endscripts ModifyingAbove bold upper K With caret Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline
where M
odify
ingAbove bold upper K With caret Subscript upper I Superscript left parenthesis m right parenthesis
, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript upper I Baseline, is the  m t h updated substructural stiffness matrix of 
the model classes in Hierarchical Level I: 
M
odify
in
g
A
bove bo
l
d u
pp
er  K With  c a r et 
Subscript upper I Superscript left parenthesis m right parenthesis Baseline equals sigma summation Underscript n element of bold italic upper S Superscript left parenthesis m right parenthesis Baseline Endscripts ModifyingAbove bold upper K With caret Subscript n Superscript c Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline
In Hierarchical Level II, the stiffness matrices for the non-baseline model classes 
are updated as follows: 
M
odifying
Above bol
d
 
upper K Wit
h c
a
ret
 Superscript lef
t pa
re
n
th esis
 m Super 
S
upe
rs
cr ipt ast e r i s k S u p
erscript comma q right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline ModifyingAbove bold upper K With caret Subscript s left parenthesis q right parenthesis Superscript c Baseline plus theta Subscript k comma 2 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline sigma summation Underscript StartLayout 1st Row n equals 1 2nd Row n not equals s left parenthesis q right parenthesis EndLayout Overscript upper N Subscript c Baseline Endscripts ModifyingAbove bold upper K With caret Subscript n Superscript c Baseline comma q equals 1 comma 2 comma ellipsis comma upper N Subscript upper I upper I Baseline
After calibrating the component stiffness matrices and updating the stiffness 
matrices of the model classes in Hierarchical Level I and II, the algorithm will 
go back to Hierarchical Level II with the updated model classes. Then, the prior 
plausibilities in Hierarchical Level II will be reset to uniform as follows: 
u
p
per P
 le
f
t p
a
renthesi
s u
p
p
er C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline right parenthesis equals StartFraction 1 Over upper N Subscript upper I upper I Baseline plus 1 EndFraction comma q equals 1 comma 2 comma ellipsis comma upper N Subscript upper I upper I Baseline
up p e r P l
ef t paren t h e s is u
pper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals upper P left parenthesis upper C Subscript i plus 1 Superscript left parenthesis m Super Superscript asterisk Superscript comma q right parenthesis Baseline right parenthesis equals StartFraction 1 Over upper N Subscript upper I upper I Baseline plus 1 EndFraction comma q equals 1 comma 2 comma ellipsis comma upper N Subscript upper I upper I Baseline
Equation (5.72) implies that all the up p e r N Subscript upper I upper I Baseline plus 1 model classes in Hierarchical Level 
II will restart with the same plausibility for the calculation in the next time step. 
5.5.3 
Triggering Conditions 
The algorithm for real-time system identiﬁcation using hierarchical interhealable 
model classes has three different stages, i.e., Hierarchical Level I, Hierarchical Level 
II and interhealing process. Three types of transitions among the three stages are 
introduced and their triggering conditions are given as follows. 
The ﬁrst type of transition is from Hierarchical Level I to Hierarchical Level II 
and it is triggered when the following two criteria are satisﬁed: 
m Supe
rscript asterisk Baseline not equals 0

172
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
upper 
C Su bscript 
i
 
pl us j Su p e r s cri
pt left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline equals upper C Subscript i Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline comma j equals 1 comma 2 comma ellipsis comma upper N Subscript t Baseline
In other words, level up, i.e., the shift from Hierarchical Level I to Hierarchical Level 
II, will be triggered when a non-baseline model class upper 
C Subscript i Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis
achieves the maximum 
plausibility for uper N Subscript t consecutive time steps. 
The second type of transition is from Hierarchical Level II to interhealing and it 
is triggered when the following two criteria are satisﬁed: 
m Supe
rscript asterisk Baseline not equals 0
upper C S
ub sc
ript i plus
 
j
 S uperscr i p t  lef
t parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis Baseline equals upper C Subscript i Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis Baseline comma j equals 1 comma 2 comma ellipsis comma upper N Subscript t Baseline
Equations (5.75) and (5.76) indicate that interhealing will be triggered when a 
non-baseline model class upper C S
ubscript i Superscript left parenthesis m Super Superscript asterisk Superscript comma q Super Superscript asterisk Superscript right parenthesis
in Hierarchical Level II achieves the maximum 
plausibility for uper N Subscript t consecutive time steps. 
The third type of transition is from Hierarchical Level II back to Level I and it is 
triggered when the following criteria are satisﬁed: 
m Supe
rscript asterisk Baseline equals 0
upper 
C Su bscript 
i
 
pl us j Su p e r s cri
pt left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline equals upper C Subscript i Superscript left parenthesis m Super Superscript asterisk Superscript right parenthesis Baseline comma j equals 1 comma 2 comma ellipsis comma upper N Subscript t Baseline
In other words, level down, i.e., the shift from Hierarchical Level II back to Level I, 
will be triggered when the baseline model class in Hierarchical Level II is the most 
plausible and remains for uper N Subscript t consecutive time steps. 
5.5.4 
Procedure of the Real-Time System Identiﬁcation 
Using Hierarchical Interhealable Model Classes 
5.5.4.1
Training Stage 
A short training stage is implemented for roughly two fundamental periods of the 
nominal model. This training stage is ﬂexible and a rough estimation of the funda-
mental frequency can be easily obtained from the Fourier spectrum of the response 
for the dynamical systems. 
1. At the initial time step, i.e., i equals 0, set the initial conditions: 
(1) Deﬁne the structural component matrices bol
d upper K Subscript n Superscript c, n equals 1  c o mma 2 comma ellipsis comma upper N Subscript k Baseline.

5.5 Hierarchical Interhealable Model Classes
173
(2) Deﬁne the stiffness matrix of the baseline model class and the substructural 
stiffness matrices bold 
upper K Subscript upper I Superscript left parenthesis m right parenthesis
, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript upper I Baseline, for  the  uper N Subscript upper I non-baseline model 
classes in Hierarchical Level I. 
(3) Set the initial state vector and the initial covariance matrix. 
(4) Set the initial prior plausibilities as u
p
per P
 
left 
p
ar enthes is upper C 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by left parenthesis upper N Subscript upper I Baseline plus 1 right parenthesis, m eq
uals 0 c o m m a  1 comma 2 comma ellipsis comma upper N Subscript upper I Baseline. 
(5) Set the lower bound of the plausibility uper P Subscript l and the number of consecutive 
time steps upper N Subscript t. 
2. At the i t h (i greater than or equals 0) time step, calculate the conditional evidence by using Eq. (5.28) 
and the plausibility by using Eq. (5.13). If the plausibility of a model class is 
lower than upper P Subscript l, it will be replaced by upper P Subscript l. Then, normalize the plausibilities of the 
remaining model classes such that the sum of the plausibilities for all the model 
classes is equal to unity. 
3. Training stage will be terminated if it has been carried out for uper N Subscript t time steps. 
Otherwise, continue for the next time step from Step 2. 
5.5.4.2
Working Stage 
When the training stage is terminated, the proposed algorithm will enter into the 
working stage. 
1. At the i t h time step, calculate the conditional evidence of the model classes in 
Hierarchical Level I by using Eq. (5.28) and the plausibility by using Eq. (5.13). 
If the plausibility of a model class is lower than upper P Subscript l, it will be replaced by upper P Subscript l. 
Then, normalize the plausibilities of the remaining model classes such that the 
sum of the plausibilities for all the model classes is equal to unity. 
2. Determine the most plausible model class and its system identiﬁcation results 
are regarded as the current identiﬁcation results. 
3. Check the triggering conditions for level up in Eqs. (5.73) and (5.74). 
(1) If the triggering criteria for level up are fulﬁlled, shift to Hierarchical Level 
II (Step 4) for the next time step. 
(2) Otherwise, go back to Step 1 for the next time step. 
4. Construct the stiffness matrices of the model classes in Hierarchical Level II. 
5. Calculate the conditional evidence by using Eq. (5.28) and the plausibility by 
using Eq. (5.13). 
6. Check the triggering conditions for interhealing in Eqs. (5.75) and (5.76). 
(1) If the triggering criteria for interhealing are fulﬁlled: 
(a) 
Calibrate the component stiffness matrices by using the model updating 
results from the most plausible model class based on Eqs. (5.66) and 
(5.67).

174
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
(b) Reconﬁgure the substructural stiffness matrix of the baseline model 
class and the substructural stiffness matrices in all the non-baseline 
model classes in Hierarchical Level I and Hierarchical Level II. 
(c) 
Reset the plausibility of all the model classes in Hierarchical Level II 
as a uniform distribution by using Eq. (5.72). 
(2) Otherwise, go back to Step 5 for the next time step. 
7. Check the triggering conditions for level down in Eqs. (5.77) and (5.78). 
(1) If the triggering criteria for level down are fulﬁlled, go back to Step 1 for 
the next time step. 
(2) Otherwise, go back to Step 5 for the next time step. 
5.6 
Applications to Bayesian Real-Time Model Class 
Selection for System Identiﬁcation 
5.6.1 
Identiﬁcation of High-Rise Building with Predeﬁned 
Model Classes 
A ﬁfty-story building with degrading stiffness is considered. The building has 
uniformly distributed ﬂoor mass and interstory stiffness over its height. The stiffness 
to mass ratio is assumed to be 1600 s−2 and hence the fundamental frequency of the 
building is 0.198 Hz. Rayleigh damping model is considered, i.e., bo ld up per C equals alpha bold upper M plus beta bold upper K. 
The damping coefﬁcients are given by al ph a equals 0.019 s−1 and be ta  equals 0.004 s, so that 
the damping ratios are 1% for the ﬁrst two modes. The building was subjected to 
ground excitation modeled as zero-mean stationary Gaussian white noise with spec-
tral intensity up er  S 0  equals 6.0 times 10 Superscript negative 5 m2/s3. The entire monitoring duration was 200 s 
and the sampling frequency was 200 Hz. The measurements consisted of the ground 
excitation and the acceleration responses of the 1st–3rd, 5th, 8th, 10th, 15th, 20th, 
30th, 40th, and 50th ﬂoors. The measurement noise was modeled as Gaussian i.i.d. 
process with 5% rms of the corresponding noise-free quantities. During the moni-
toring duration, two structural damages occurred. At t equal s 80 normal s, the ﬁrst damage led to 
5% stiffness loss of the lowest story. At t equals  150 normal s, the second story had 8% stiffness 
loss. 
Five model class candidates bold i
t
alic 
upper C Su
bscript i 
plus 1 Bas
eline equa
ls 
StartSet upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis Baseline EndSet
are estab-
lished to represent different possible damage scenarios of the structure. Table 5.1 
shows the model class candidates with different parameterizations. The ﬁrst column 
indicates the stiffness parameters used for characterizing the stiffness matrix of the 
corresponding model class. The second column to the sixth column indicates the 
speciﬁc parameterization of the model class candidates upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis to upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis, respectively. 
The numbers in Table 5.1 refer to the stories which are represented by the corre-
sponding parameter of a model class. For example, the ﬁfth column indicates that

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
175
Table 5.1 Model class candidates with different parameterizations 
Model class
upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis
upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis
upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis
upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis
upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis
theta Subscript k comma 1
1–50
1
1
1
1 
theta Subscript k comma 2
–
2–5
2
2
2 
theta Subscript k comma 3
–
6–10
3–5
3
3 
theta Subscript k comma 4
–
11–50
6–10
4–5
4 
theta Subscript k comma 5
–
–
11–50
6–10
5 
theta Subscript k comma 6
–
–
–
11–50
6–10 
theta Subscript k comma 7
–
–
–
–
11–50 
there are six stiffness parameters in model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis used for describing the stiffness 
matrix of this building. Speciﬁcally, theta Subscript k comma 1, theta Subscript k comma 2 and theta Subscript k comma 3 correspond to the 1st, 2nd and 
3rd story, respectively; theta Subscript k comma 4, theta Subscript k comma 5 and theta Subscript k comma 6 correspond to the 4th to 5th, 6th to 10th 
and 11th to 50th story, respectively. As a result, it is obvious that model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis
was the simplest with only one stiffness parameter characterizing the stiffness matrix 
of the entire structure. On the other hand, model class upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis was the most compli-
cated and there were seven stiffness parameters governing the stiffness matrix of the 
entire structure. A uniform prior plausibility u
p
per P
 
left 
p
arenthesis upper C 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by 5, m equals 1 comma 2 comma 3 comma 4 comma 5, 
was utilized and it indicates that there was no prior preference on any model class 
candidate before the observations were acquired. 
Figures 5.1 and 5.2 show the log-plausibility ln u
p
per P
 le
ft pare
nthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
and plausibility 
u
p
per P
 le
ft pare
nthesis upper C Subscript i plus 1 Superscript left parenthesis m right parenthesis Baseline vertical bar upper D Subscript i plus 1 Baseline right parenthesis
of the ﬁve model classes in time histories, respectively. The two 
vertical dashed lines indicate the time instants when the structural damages occurred. 
It is seen that the plausibilities of the model class candidates started with the same 
initial value and they ﬂuctuated severely at the beginning of the identiﬁcation due to 
inaccurate initial values and lack of measurements. Before t equal s 80 normal s, model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis
outperformed other model classes since it was sufﬁcient to represent the undamaged 
structure. At t equal s 80 normal s, the damage of the ﬁrst story occurred. It is observed that the 
plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis decreased rapidly while model class upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis became 
the most plausible model class at t equals 82 .110 normal s. The reason for the switching of the 
most plausible model class could be interpreted as follows. At t eq ual s 80 normal s, the ﬁrst 
structural damage occurred. Since there was no designated stiffness parameter in 
model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis for the ﬁrst story, upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis was incapable to describe the damaged 
structure. Therefore, model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis underﬁtted the measurements after the ﬁrst 
structural damage occurred. On the other hand, model classes upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and 
upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis had the designated stiffness parameter for the ﬁrst story. However, compared 
with model classes upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis was the simplest model class. The 
penalty due to complicated parameterization hampered model classes upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis
and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis to become the most plausible model class. As a result, although upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, 
upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis had similar maximum likelihood values, the simplest model class upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis

176
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.1 Log-plausibility of the model classes
among them was the most suitable after the ﬁrst structural damage occurred. Small 
time delay of the switching of the most plausible model class was observed because 
the identiﬁcation results depended on the data points at the current and previous time 
steps. It was inevitable for the existence of a small time lag. Nevertheless, the time 
delay was acceptably small. 
Afterwards, at t equals  150 normal s, the second damage occurred at the third story. The plau-
sibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis descended quickly while model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis became the 
most plausible model class at t equals 155 .135 normal s. Since there were differential damages 
of the ﬁrst and third story, model classes without designated stiffness parameters for 
the ﬁrst and third story, namely upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, underﬁtted the measurements 
after the second damage occurred. Meanwhile, model classes upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis were 
capable to track the stiffness losses of the ﬁrst and third story. However, model class 
upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis was preferred and had the dominant plausibility almost equal to unity because 
it was simpler than model class upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis. 
Figures 5.3, 5.4, 5.5, 5.6, and 5.7 show the parametric identiﬁcation results of 
model classes upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis to upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis, respectively. The dotted lines represent the estimated 
values; the solid lines represent the actual values; and the dashed lines represent the 
bounds of the 99.7% credible intervals. Before the ﬁrst structural damage occurred, 
the estimated stiffness parameters in all the model classes were approximately equal 
to unity. After the stiffness of the ﬁrst story decreased at t equal s 80 normal s, no signiﬁcant 
change was observed for the estimated stiffness parameter in model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis. This  
is because there was only one stiffness parameter in upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis to characterize the stiffness

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
177
Fig. 5.2 Plausibility of the model classes
matrix of the entire structure and the estimation of the ﬁrst structural damage was 
diluted and undetectable. Therefore, model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis underﬁtted the measurements 
from the damaged structure, resulting in the rapid drop of its plausibility after t eq
ual s 80 normal s. In contrast, the parametric identiﬁcation results of model classes upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, 
upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis could successfully reﬂect the stiffness loss of the ﬁrst story through theta Subscript k comma 1. 
This veriﬁed the rapid increase of the plausibilities of upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis for a 
short time duration after the ﬁrst structural damage occurred. Afterwards, the second 
structural damage of 8% stiffness loss in the third story occurred at t equals  150 normal s.Itisseen 
that the parametric identiﬁcation results of model classes upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis could 
not accurately capture the stiffness loss in the third story because the stiffness loss was 
diluted in the estimation results due to the oversimpliﬁcation of the parameterization. 
On the other hand, model classes upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis were capable to track the two stiffness 
losses in the ﬁrst and third story. In addition, all the model classes could provide 
satisfactory estimation results for the damping coefﬁcients. Therefore, the parametric 
identiﬁcation results from model classes upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis veriﬁed 
that upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis, upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis and upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis were the most suitable model classes for the structure in 
the status of undamaged, 10% stiffness loss of the 1st story and 8% stiffness loss of 
the third story, respectively. The proposed method could select the most appropriate 
model class in a set of model class candidates to describe the different statuses of the 
structure. Since the frequency contents of time-varying dynamical systems changed 
over time, a single model class was insufﬁcient to represent the dynamical systems in

178
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.3 Parametric identiﬁcation results of model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis
their different statuses. The superiority of the proposed approach with simultaneous 
model class selection and parametric identiﬁcation could be conﬁrmed. 
In order to obtain robust parametric identiﬁcation results, the real-time multi-
model estimation formula in Eq. (5.33) were utilized. Figure 5.8 shows the robust 
parametric identiﬁcation results using all the ﬁve model classes. The dotted lines 
represent the estimated values by using multi-model estimation; the solid lines repre-
sent the actual values; and the dashed lines represent the bounds of the 99.7% credible 
intervals. It is seen that estimation results could successfully track the stiffness degra-
dations in the ﬁrst and third story and they approached the actual values. In addition, 
99.7% credible intervals could provide reasonable uncertainties for the identiﬁca-
tion results. Therefore, it is conﬁrmed that the proposed approach provided proper 
weightings from the plausibilities of the model classes. The multi-model estimation 
could provide robust parametric identiﬁcation results since multiple model classes 
were used with proper weightings. Moreover, comparing Fig. 5.8 with Figs. 5.3, 5.4, 
5.5, 5.6, and 5.7, it is seen that the estimation results based on multiple model classes 
were superior to these obtained by using only one model class in terms of accuracy 
and uncertainty.
Figures 5.9 and 5.10 show the actual versus the estimated values using multiple 
model classes of the displacement and velocity responses for the 1st, 10th, 20th, 30th, 
40th and 50th ﬂoor, respectively. The 45-degree line in each subplot of Figs. 5.9 and

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
179
Fig. 5.4 Parametric identiﬁcation results of model class upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis
5.10 provides the reference of perfect match. The state estimation results in the 
ﬁrst 5 s were excluded from the comparison to eliminate the effect of inaccurate 
initial conditions. It is seen that the estimated displacement and velocity responses 
in each subplot showed good agreement with the corresponding actual responses. 
On the other hand, in the ﬁrst subplot of Fig. 5.10, there were roughly 20 points 
giving discrepant estimation of the velocity of the ﬁrst story. These points were 
associated with the results obtained during the short time period immediately after 
the ﬁrst and second structural damage occurred. Nevertheless, the majority of the 
points were distributed along the line of perfect match, indicating that the proposed 
method provided satisfactory estimation for the structural responses. Therefore, the 
parametric identiﬁcation results including model parameters and structural states 
could achieve high accuracy by using the proposed approach.

180
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.5 Parametric identiﬁcation results of model class upper
 C Subscript i plus 1 Superscript left parenthesis 3 right parenthesis
5.6.2 
Identiﬁcation of Bouc-Wen Nonlinear Hysteresis 
System with Self-Calibratable Model Classes 
This application is concerned with a Bouc-Wen nonlinear hysteresis system with 
up er N Subscript d Baseline equals 5 DOFs shown in Fig. 5.11. The Bouc-Wen model of hysteresis is one of the 
most commonly used hysteretic models to describe nonlinear hysteresis systems in 
structural engineering. The governing equation of this nonlinear system is given by:
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic r left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where ModifyingAbove bold italic x With two dots left parenthesis t right parenthesis, ModifyingAbove bold italic x With dot left parenthesis t right parenthesisand bold italic r left parenthesis t right parenthesisare the acceleration, velocity, and restoring force vector, 
respectively; bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, 
respectively; the stiffness and damping matrices are parameterized with possibly 
time-varying parameters bold italic theta Subscript k Baseline left parenthesis t right parenthesisand bold italic theta Subscript c Baseline left parenthesis t right parenthesis, respectively; bold italic f is the excitation applied 
to the system and bold upper T is the inﬂuence matrix associated with the excitation bold italic f . The  
stiffness matrix bold upper K has the following form:

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
181
Fig. 5.6 Parametric identiﬁcation results of model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis
bo ld
 
u
pper
 K 
e
quals sigma summation Underscript n equals 1 Overscript 5 Endscripts bold upper K Subscript n Superscript c
where bol
d upper K Subscript n Superscript c, n equals 1  c o mma 2 comma ellipsis comma 5, is the  n t h component stiffness matrix given by: 
bol
d upp
er K 1 S
uper
s
cript c Baseline equals k Start 2 By 2 Matrix 1st Row 1st Column 1 2nd Column bold 0 Subscript 1 times 4 Baseline 2nd Row 1st Column Blank 2nd Column bold 0 Subscript 4 times 5 EndMatrix
bol
d uppe
r 
K S
ub
script n 
Superscr
i pt  c 
Ba s
e
line equa
ls k Star
t 
3 B
y 
3 Matr i x  1 st
 Row 1st Column Blank 2nd Column bold 0 Subscript left parenthesis n minus 2 right parenthesis times 5 Baseline 3rd Column Blank 2nd Row 1st Column bold 0 Subscript 2 times left parenthesis n minus 2 right parenthesis Baseline 2nd Column Start 2 By 2 Matrix 1st Row 1st Column 1 2nd Column negative 1 2nd Row 1st Column negative 1 2nd Column 1 EndMatrix 3rd Column bold 0 Subscript 2 times left parenthesis 5 minus n right parenthesis Baseline 3rd Row 1st Column Blank 2nd Column bold 0 Subscript left parenthesis 5 minus n right parenthesis times 5 Baseline 3rd Column Blank EndMatrix comma n equals 2 comma ellipsis comma 5
The damping matrix bold upper C is taken as: 
bo ld up per 
C equals alpha bold upper M plus beta bold upper K
where alphaand betaare the damping coefﬁcients. The restoring force vector bold italic r left parenthesis t right parenthesisis given 
by:

182
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.7 Parametric identiﬁcation results of model class upper
 C Subscript i plus 1 Superscript left parenthesis 5 right parenthesis
bold italic r left parenthesis t right paren
thesis equals left bracket r 1 left parenthesis t right parenthesis comma r 2 left parenthesis t right parenthesis comma r 3 left parenthesis t right parenthesis comma r 4 left parenthesis t right parenthesis comma r 5 left parenthesis t right parenthesis right bracket Superscript normal upper T
Modifyin gAbo ve r Withrdot Subsc ript n Baselin
e left pa r e n t he
sis t right parenthesis equals ModifyingAbove x With dot Subscript n Baseline minus mu StartAbsoluteValue ModifyingAbove x With dot Subscript n Baseline EndAbsoluteValue StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta minus 1 Baseline r Subscript n Baseline minus kappa ModifyingAbove x With dot Subscript n Baseline StartAbsoluteValue r Subscript n Baseline EndAbsoluteValue Superscript eta Baseline comma n equals 1 comma 2 comma ellipsis comma 5
where mu, kappaand etaare the characteristic parameters governing the shape and smooth-
ness of the hysteresis loops. For the undamaged structure, the actual stiffness of each 
nonlinear spring was taken as k equals 2000 normal upper N divided by normal m. The damping coefﬁcients were taken 
as al ph a equa ls 0.379 normal s Superscript negative 1 and be ta  equal s 8.019  times 10 Superscript negative 4 Baseline normal s. The characteristic parameters of the 
Bouc-Wen system were taken to be mu equals  1000 normal s squared divided by normal m squared, kappa equ als 1500 normal s squared divided by normal m squared and eta equals 2.

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
183
Fig. 5.8 Parametric identiﬁcation results using multiple model classes
The hysteresis system was subjected to a zero-mean Gaussian white noise with 
spectral intensity up er S 0  equals  6.0 times 10 Superscript negative 2 Baseline normal m squared divided by normal s cubed. The entire monitoring period was 350 s 
and the sampling time interval was nor ma l upper Delta t equals 0.002 s. The measurements consisted 
of the velocity responses of the 1st, 3rd and 5th DOFs. The measurement noise 
was modeled as zero-mean Gaussian i.i.d. process and the rms of the measurement 
noise was taken as 5% rms of the corresponding noise-free response quantities. In 
addition, the structure was undamaged in the ﬁrst 150 normal s. Then, sudden damage with 
5% stiffness reduction occurred in the 1st nonlinear spring at t equals  150 normal s. Afterwards, 
sudden damages with 5% and 2% stiffness reduction occurred in the 2nd and 4th

184
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.9 Actual versus estimated displacement responses using multiple model classes

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
185
Fig. 5.10 Actual versus estimated velocity responses using multiple model classes

186
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.11 Bouc-Wen nonlinear hysteresis system with 5 DOFs
nonlinear springs at t equals  250 normal s, respectively. The values up er P Subscript l Baseline equals 1 times 10 Superscript negative 4 and up er N Subscript t Baseline equals 500
were used for the lower bound of plausibility and two small-amplitude fundamental 
periods of the nominal model. 
Six model class candidates with different parameterizations of the stiffness matrix 
were considered. The baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was deﬁned as the simplest model 
class which used only one stiffness parameter to represent the stiffness matrix of the 
entire structure: 
Start
Layout
 
1
st Row 1
st Colum
n 
bold upp
er K
 
S
uper
scr
i
pt left parenthesis 0 right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline right parenthesis 2nd Column equals theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline bold upper K 1 Superscript left parenthesis 0 right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column equals theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline sigma summation Underscript n equals 1 Overscript 5 Endscripts bold upper K Subscript n Superscript c EndLayout
where theta 
Subscript k comma 1 Superscript left parenthesis 0 right parenthesis is the uncertain stiffness parameter in the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis. For  
the remaining model classes, two stiffness parameters were utilized in each model 
class to parameterize the stiffness matrix of the entire structure. Speciﬁcally, in model 
class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma 5, one stiffness parameter was assigned to the m t h spring 
and the other stiffness parameter was assigned to represent all other springs: 
Start
Layout
 
1
st Row 1
st C olumn
 b
old uppe
r K Super
sc
ript lef
t pa ren
th esis m r
ight
 
p
ar enth
e sis B
ase
li
ne  left p a r e n th
esis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis 2nd Column equals theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline bold upper K 1 Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline bold upper K 2 Superscript left parenthesis m right parenthesis Baseline 2nd Row 1st Column Blank 2nd Column equals theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline bold upper K Subscript m Superscript c Baseline plus theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline sigma summation Underscript StartLayout 1st Row n equals 1 2nd Row n not equals m EndLayout Overscript 5 Endscripts bold upper K Subscript n Superscript c Baseline comma m equals 1 comma 2 comma ellipsis comma 5 EndLayout
where bold i
ta
l
i
c thet
a Su b s cript
 k 
Superscript left parenthesis m right parenthesis Baseline equals left bracket theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline comma theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline right bracket Superscript normal upper T
, m equals 1  c o mma 2 comma ellipsis comma 5, is the uncertain stiffness parameter 
vector in model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma 5. In addition, there were two damping 
coefﬁcients and three characteristic parameters for the Bouc-Wen model in all the 
model classes. As a result, the uncertain model parameter vector of the baseline

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
187
model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was given by: 
bold it alic th
eta Supers cript left p arenth esis 
0 
right parenthesis Baseline equals left bracket theta Subscript k comma 1 Superscript left parenthesis 0 right parenthesis Baseline comma alpha Superscript left parenthesis 0 right parenthesis Baseline comma beta Superscript left parenthesis 0 right parenthesis Baseline comma mu Superscript left parenthesis 0 right parenthesis Baseline comma kappa Superscript left parenthesis 0 right parenthesis Baseline comma eta Superscript left parenthesis 0 right parenthesis Baseline right bracket Superscript normal upper T
Moreover, the uncertain model parameter vector of model class upper
 C Subscript i plus 1 Superscript left parenthesis m right parenthesis, m eq
uals 1  c o mma 2 comma ellipsis comma 5, was given by: 
bold it alic th
eta S u persc
ript  left p arenth esis m  right  pare
nth
es is Base l i n e  e
quals left bracket theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline comma theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline comma alpha Superscript left parenthesis m right parenthesis Baseline comma beta Superscript left parenthesis m right parenthesis Baseline comma mu Superscript left parenthesis m right parenthesis Baseline comma kappa Superscript left parenthesis m right parenthesis Baseline comma eta Superscript left parenthesis m right parenthesis Baseline right bracket Superscript normal upper T Baseline comma m equals 1 comma 2 comma ellipsis comma 5
Figure 5.12 shows the plausibilities of all the six model classes. In the early stage 
of identiﬁcation, the plausibilities of different model classes were ﬂuctuating severely 
due to inaccurate initial values and lack of measurements. After more observations 
were acquired, the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis achieved the highest plausibility. This 
implies that the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was sufﬁcient to represent the undamaged 
structure.
At t equals  150 normal s, the ﬁrst damage occurred in the ﬁrst nonlinear spring so the baseline 
model class was insufﬁcient to represent the damaged structure. However, model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis had a designated stiffness parameter for the ﬁrst spring so it outperformed 
all other model classes in data ﬁtting. Afterwards, model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis triggered the 
calibrations at t equals 152 .164 normal s and t equals 153 .256 normal s. Then, all the component stiffness 
matrices were calibrated by using the model identiﬁcation results of model class 
upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis. The six model classes were reconﬁgured and their plausibilities were reset to 
uniform for the calculation in the next time step. After the calibration, the stiffness 
loss of the ﬁrst spring was considered in the corresponding component stiffness 
matrix and the substructural stiffness matrices for all the model classes. As a result, 
the calibrated baseline model class achieved the highest plausibility in the time period 
left bracket 153.256 comma 250 right bracket s, since it was sufﬁcient for the damaged structure. 
At t equals  250 normal s, since the damages of the 2nd and 4th nonlinear springs occurred 
simultaneously, none of the model classes could match this damage pattern. It is 
observed that the plausibility of the baseline model class decreased rapidly after the 
sudden damages of the 2nd and 4th nonlinear springs occurred. Meanwhile, model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis triggered the calibrations at t equals 252 .038 normal s and t equals 255 .162 normal s and model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis triggered the calibration at t eq uals 253 .398 normal s. It is not surprising to run 
through a series of calibrations because none of the model class candidates could 
handle such damage pattern. After the three calibrations, the stiffness losses of the 
2nd and 4th nonlinear springs were incorporated in the corresponding component 
stiffness matrices and the substructural stiffness matrices for all the model classes. 
Then, the baseline model class served as the most plausible model class until the end 
of the monitoring period. It is seen that although there was no suitable model class 
candidate to represent the simultaneous stiffness losses of the 2nd and 4th springs, the 
self-calibrating mechanism could correct sequentially the modeling errors between 
the actual and the estimated models. When there were changes of the structural stiff-
nesses, the model class with more complicated parameterization to accommodate

188
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.12 Plausibility of the model classes of the Bouc-Wen model
the changes was selected. The most plausible model class then triggered calibra-
tion. After the calibration, the discrepancy between the actual stiffness and the esti-
mated stiffness could be corrected and the baseline model class was then sufﬁcient to 
represent the calibrated structural stiffness matrix. As a result, more reliable future 
prediction could be anticipated.

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
189
Figure 5.13 shows the identiﬁcation results of the stiffness parameters using the 
most plausible model class. The dotted lines represent the estimated values; the solid 
lines represent the actual values; and the dashed lines represent the bounds of the 
99.7% credible intervals. The same line style will be employed in the later ﬁgure. 
It is seen that in the early stage of identiﬁcation, the estimated stiffness parameters 
ﬂuctuated severely due to inaccurate initial values, lack of measurements and rapid 
switching of the most plausible model class. Afterwards, the estimated stiffness 
parameters agreed well with the actual values and the credible intervals provided 
reasonable estimation uncertainty. Moreover, it is observed that the credible intervals 
became much wider immediately after the calibration since the covariance matrix 
of the stiffness parameter vector was reset. The credible intervals narrowed down 
rapidly as the ﬁlter propagated. On the other hand, it is noticed that small time delay 
of parameter tracking was expected since the identiﬁcation results depended on the 
data points at the current and previous time steps. Figure 5.14 shows the identiﬁcation 
results of the damping coefﬁcients and characteristic parameters for the Bouc-Wen 
model. It is seen that the estimated values agreed well with the actual values and they 
were within the 99.7% credible intervals.
Figure 5.15 shows the actual values of the restoring forces versus the corre-
sponding estimated values obtained from the most plausible model class. The 45-
degree line in each subplot provides the reference of perfect match. The estimation 
results in the ﬁrst 5 s were excluded from the comparison in order to eliminate the 
effect of inaccurate initial conditions. It is observed that the majority of the points 
were distributed along the line of perfect match. As a result, the estimated structural 
responses by using the proposed approach achieved high accuracy.
5.6.3 
Identiﬁcation of Three-Dimensional Truss Dome 
with Hierarchical Interhealable Model Classes 
A three-dimensional truss dome (shown as Figs. 5.16 and 5.17) is considered in 
this example. The truss dome has 19 nodes and 42 bars. It spans 60 m in both x
and y directions and reaches the maximum height of 12 m. The mass density and 
cross-sectional area of each member are 7850 kg/m3 and 5000 mm2, respectively, 
and modulus of elasticity is 2.0 times 10 Superscript 11 Pa. Thus, the ﬁrst ﬁve natural frequencies 
of the space truss dome are 0.246, 1.403, 4.834, 5.449 and 7.724 Hz. Rayleigh 
damping model is utilized and the damping matrix is given by bo ld  up per C equals alpha bold upper M plus beta bold upper K, 
where alpha equa ls 0.053 normal s Superscript negative 1 and beta equal s 0.004 normal s, so that the damping ratios are 2% for the ﬁrst 
two modes.
The dome was subjected to horizontal and vertical ground motions which were 
modeled as zero-mean Gaussian white noise with spectral intensity 0.12 normal m squared divided by normal s cubed. The  
sampling time interval was nor mal uppe r Delta t equals 0.002 normal s and the entire monitoring period was 300 s. 
Triaxial acceleration responses of the 7th, 8th and 11th nodes were observed using 
three accelerometers whose locations were marked as triangles in Fig. 5.17. The

190
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.13 Identiﬁcation results of the stiffness parameters

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
191
Fig. 5.14 Identiﬁcation results of the damping coefﬁcients and characteristic parameters of the 
Bouc-Wen model

192
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.15 Actual versus estimated restoring forces using the most plausible model class

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
193
Fig. 5.16 Space truss dome 
Fig. 5.17 Space truss dome-plan view

194
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
rms of the measurement noise was taken as 5% rms of the corresponding noise-free 
response quantities. Structural damage was imposed during the monitoring duration. 
In particular, the space truss dome was undamaged in the ﬁrst 100 s. Then, the ﬁrst 
damage of 5% stiffness reduction occurred in the 31st element in substructure 1 at 
t equals  100 normal s; and the second damage of 5% stiffness reduction occurred in the 22nd 
and 40th elements in substructure 4 at t equals  200 normal s. The values up er P  Subscript l Baseline equals 1 times 10 Superscript negative 4 and 
up er N Subscript t Baseline equals 500 were used for the lower bound of plausibility and a quarter of fundamental 
period of the space truss dome. 
There were 42 components with the component stiffness matrices given by: 
bol
d uppe
r K  1  Supe
rs
cript c Baseline comma bold upper K 2 Superscript c Baseline comma ellipsis comma bold upper K 42 Superscript c
The 42 members of the space truss dome were separated into six substructures and 
the substructural numbers were marked in Fig. 5.17. Each substructure consisted of 
seven components. The number of model classes in Hierarchical Level I was taken 
as up er N  Subscript upper I Baseline plus 1 equals 7 and these model classes were denoted as: 
bo ld
 ita l
i
c upp
er C Subsc
ript i plu
s 1 S u p e rscrip
t u
p
per I Baseline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 6 right parenthesis Baseline EndSet
where the stiffness matrix of the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was given by: 
bold 
upper 
K
 
Superscr
ip
t 
l
eft 
par
e
nthesis 0 right parenthesis Baseline left parenthesis bold italic theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline right parenthesis equals theta Subscript k Superscript left parenthesis 0 right parenthesis Baseline sigma summation Underscript n equals 1 Overscript 42 Endscripts bold upper K Subscript n Superscript c
where theta 
Subscript k Superscript left parenthesis 0 right parenthesis
is the sole stiffness parameter in the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis. For  the  
remaining model classes upper
 C Subscri
pt i  p l u s 1 Su
perscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 6 right parenthesis in Hierarchical Level I, each model 
class had two stiffness parameters and its stiffness matrix was given by: 
bold 
upper 
K
 
Superscr
ipt left 
pa
renthesi
s m 
r
i
gh t pa
r enthe
sis B
as e
li ne left  p a r en
thesis bold italic theta Subscript k Superscript left parenthesis m right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis m right parenthesis Baseline bold upper K Subscript upper I Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis m right parenthesis Baseline sigma summation Underscript StartLayout 1st Row s equals 1 2nd Row s not equals m EndLayout Overscript 6 Endscripts bold upper K Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma m equals 1 comma 2 comma ellipsis comma 6
where bold 
upper K Subscript upper I Superscript left parenthesis m right parenthesis
, m eq uals 1  c o mma 2 comma ellipsis comma 6, is the  m t h substructural stiffness matrix given as 
follows: 
bold 
up
p
e
r K Sub
scr
ip
t upper I  S u p er
script left parenthesis m right parenthesis Baseline equals sigma summation Underscript n element of bold italic upper S Superscript left parenthesis m right parenthesis Baseline Endscripts bold upper K Subscript n Superscript c Baseline comma m equals 1 comma 2 comma ellipsis comma 6
where bold italic upper S Superscript left parenthesis m right parenthesis, m equals 1  c o mma 2 comma ellipsis comma 6, is the membership vector of the m t h substructure and 
bold italic upper S Superscript left parenthesis 1 right parenthesis, bold italic upper S Superscript left parenthesis 2 right parenthesis,…, bold italic upper S Superscript left parenthesis 6 right parenthesisform a mutually exclusive partition of the set StartS e t  1  comma 2 comma ellipsis comma 42 EndSet period

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
195
Fig. 5.18 Plausibility of the model classes in Hierarchical Level I
Figure 5.18 shows the plausibilities of the model classes in Hierarchical Level I. In 
particular, the ﬁrst subplot shows the plausibility of the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis and 
the remaining subplots show the plausibilities of model classes upper
 C Subscri
pt i  p l u s 1 Su
perscript left parenthesis 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 6 right parenthesis. 
The model classes in Hierarchical Level I started with the same prior plausibility 
u
p
per P
 
left 
p
arenthesi s upper C 1  S up erscript left parenthesis m right parenthesis Baseline vertical bar upper D 0 right parenthesis equals 1 divided by 7 comma m equals 0 comma 1 comma 2 comma ellipsis comma 6. Moreover, in the early stage of identiﬁca-
tion, the plausibilities of the model classes were ﬂuctuating severely due to inaccurate 
initial values and lack of observations. Afterwards, the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis

196
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
dominated the plausibility and it implies that upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was sufﬁcient to represent the 
undamaged structure. At t equals 100 s, the ﬁrst damage occurred in the 31st structural 
element which was located in substructure 1. The baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was 
incapable to represent the damaged structure so its plausibility decreased rapidly. 
Meanwhile, the plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis rose up and triggered level up to 
Hierarchical Level II at t equals 102.414 s.
In Hierarchical Level II, ﬁner model classes were considered and their resolution 
was up to the structural component level. The component stiffness matrices in model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis were bol
d upper K 1 Superscript c, bol
d upper K 7 Superscript c, bol
d upper K 13 Superscript c, bol
d upper K 19 Superscript c,bol
d upper K 25 Superscript c, bol
d upper K 31 Superscript c and bol
d upper K 37 Superscript c, so there were 8 model classes 
in Hierarchical Level II and they were denoted as follows: 
bo l d  
ital i
c
 uppe
r C Subscrip
t i plus 1 Su
pers c r i p t  upper I
 up
p
er I Baseline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 comma 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 comma 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 1 comma 7 right parenthesis Baseline EndSet
where the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was given as Eq. (5.58); model classes upper C
 Subscript i plus 1 Superscript left parenthesis 1 comma q right parenthesis , 
q equals 1  c o mma 2 comma ellipsis comma 7, were induced as model class upper
 C Subscript i plus 1 Superscript left parenthesis 1 right parenthesis in Hierarchical Level I triggered 
level up. The stiffness matrices for model classes upper C
 Subscript i plus 1 Superscript left parenthesis 1 comma q right parenthesis , q equals 1  c o mma 2 comma ellipsis comma 7, were given 
by: 
bold up
per K Su
p
e
rscript le
ft p arent
hesis 1 comma q
 rig
ht
 
pa rent
h esis Bas
eline
 l e
ft  parent h e s i s 
bold italic theta Subscript k Superscript left parenthesis 1 comma q right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis 1 comma q right parenthesis Baseline bold upper K Subscript s left parenthesis q right parenthesis Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis 1 comma q right parenthesis Baseline sigma summation Underscript StartLayout 1st Row n equals 1 2nd Row n not equals s left parenthesis q right parenthesis EndLayout Overscript 42 Endscripts bold upper K Subscript n Superscript left parenthesis m right parenthesis Baseline comma q equals 1 comma 2 comma ellipsis comma 7
where s left parenthesis q right parenthesis equals bold italic upper S Superscript left parenthesis 1 right parenthesis Baseline left parenthesis q right parenthesis, q equals 1  c o mma 2 comma ellipsis comma 7, and bold italic upper S Superscript left parenthesis 1 right parenthesiswas given as follows: 
bold i talic upper S Superscript le
ft parenthesis 1 right parenthesis Baseline equals left bracket 1 comma 7 comma 13 comma 19 comma 25 comma 31 comma 37 right bracket Superscript normal upper T
Figure 5.19 shows the plausibilities of the model classes in Hierarchical Level 
II. In particular, the ﬁrst subplot shows the plausibility of the baseline model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis and the remaining subplots show the plausibilities of model classes 
upper C
 Sub script i 
plus  1  S u perscrip
t left parenthesis 1 comma 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 1 comma 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 1 comma 7 right parenthesis . All the model class candidates in Hierarchical Level II 
started with the same prior plausibility 1/8. Afterwards, model class upper C
 Subscript i plus 1 Superscript left parenthesis 1 comma 6 right parenthesis achieved 
the maximum plausibility among the model classes in Hierarchical Level II and it 
triggered the interhealing process at t equals 103.514 s and t equals 105.202 s. In the inter-
healing process, the component stiffness matrix bol
d upper K 31 Superscript c was calibrated according to the 
model identiﬁcation results of model class upper C
 Subscript i plus 1 Superscript left parenthesis 1 comma 6 right parenthesis and it was utilized for calculation 
in the next time step. Afterwards, the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis triggered level down 
to Hierarchical Level I at t equals 106.432 s and it implies that the deﬁciencies of the 
model classes were successfully corrected.
At t equals 200 s, the second damage occurred in the 22nd and 40th structural elements 
which were located in substructure 4. It is seen that after the interhealing process 
for the ﬁrst structural damage, the updated baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis regained its

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
197
Fig. 5.19 Plausibility of the model classes in Hierarchical Level II related to the damage at t equals 100
s
dominating role to represent the structure until the plausibility of model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis
rose up. Model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis triggered level up to Hierarchical Level II at t equals 201.890
s. 
In Hierarchical Level II, ﬁner model classes were considered and their resolution 
was again up to the component level. The component stiffness matrices in model 
class upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma q right parenthesis , q equals 1  c o mma 2 comma ellipsis comma 7, were  bol
d upper K 4 Superscript c, bol
d upper K 10 Superscript c, bol
d upper K 16 Superscript c, bol
d upper K 22 Superscript c,bol
d upper K 28 Superscript c, bol
d upper K 34 Superscript c and bol
d upper K 40 Superscript c, so there

198
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
were 8 model classes in Hierarchical Level II and they were denoted as follows: 
bo l d  
ital i
c
 uppe
r C Subscrip
t i plus 1 Su
pers c r i p t  upper I
 up
p
er I Baseline equals StartSet upper C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 4 comma 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 4 comma 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 4 comma 7 right parenthesis Baseline EndSet
where the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis was given as Eq. (5.58); model classes upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma q right parenthesis , 
q equals 1  c o mma 2 comma ellipsis comma 7, were induced as model class upper
 C Subscript i plus 1 Superscript left parenthesis 4 right parenthesis in Hierarchical Level I triggered 
level up. The stiffness matrices for model classes upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma q right parenthesis , q equals 1  c o mma 2 comma ellipsis comma 7, were given 
by: 
bold up
per K Su
p
e
rscript le
ft p arent
hesis 4 comma q
 rig
ht
 
pa rent
h esis Bas
eline
 l e
ft  parent h e s i s 
bold italic theta Subscript k Superscript left parenthesis 4 comma q right parenthesis Baseline right parenthesis equals theta Subscript k comma 1 Superscript left parenthesis 4 comma q right parenthesis Baseline bold upper K Subscript s left parenthesis q right parenthesis Superscript left parenthesis m right parenthesis Baseline plus theta Subscript k comma 2 Superscript left parenthesis 4 comma q right parenthesis Baseline sigma summation Underscript StartLayout 1st Row n equals 1 2nd Row n not equals s left parenthesis q right parenthesis EndLayout Overscript 42 Endscripts bold upper K Subscript n Superscript left parenthesis m right parenthesis Baseline comma q equals 1 comma 2 comma ellipsis comma 7
where s left parenthesis q right parenthesis equals bold italic upper S Superscript left parenthesis 4 right parenthesis Baseline left parenthesis q right parenthesis, q equals 1  c o mma 2 comma ellipsis comma 7, and bold italic upper S Superscript left parenthesis 4 right parenthesiswas given as follows: 
bold i talic upper S Superscript lef
t parenthesis 4 right parenthesis Baseline equals left bracket 4 comma 10 comma 16 comma 22 comma 28 comma 34 comma 40 right bracket Superscript normal upper T
Figure 5.20 shows the plausibilities of the model classes in Hierarchical Level 
II. In particular, the ﬁrst subplot shows the plausibility of the baseline model 
class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis and the remaining subplots show the plausibilities of model classes 
upper C
 Sub script i 
plus  1  S u perscrip
t left parenthesis 4 comma 1 right parenthesis Baseline comma upper C Subscript i plus 1 Superscript left parenthesis 4 comma 2 right parenthesis Baseline comma ellipsis comma upper C Subscript i plus 1 Superscript left parenthesis 4 comma 7 right parenthesis . It is seen that model class upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma 7 right parenthesis ﬁrst achieved the maximum 
plausibility among all the model classes in Hierarchical Level II and it triggered the 
interhealing process at t equals 203.636 s. In the interhealing process, the component 
stiffness matrix bol
d upper K 40 Superscript c was calibrated according to the model identiﬁcation results of 
model class upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma 7 right parenthesis . Then, model class upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma 4 right parenthesis dominated the plausibility among all 
the model classes in Hierarchical Level II and triggered the interhealing process at 
t equals 204.804 s. In the interhealing process, the component stiffness matrix bol
d upper K 22 Superscript c was 
calibrated according to the model identiﬁcation results of model class upper C
 Subscript i plus 1 Superscript left parenthesis 4 comma 4 right parenthesis . After-
wards, the baseline model class upper
 C Subscript i plus 1 Superscript left parenthesis 0 right parenthesis triggered level down to Hierarchical Level 
I at  t eq uals 207.074 s and it implies that the deﬁciencies of the model classes were 
successfully corrected. The updated component stiffness matrices were then utilized 
to formulate the stiffness matrices of the model classes in Hierarchical Level I and the 
baseline model class resumed to be the most plausible until the end of the monitoring 
period.
Figure 5.21 shows the estimation results of the stiffness parameters using the most 
plausible model class. The dotted lines represent the estimated values; the solid lines 
represent the actual values; and the dashed lines represent the bounds of the 99.7% 
credible intervals. The same line style will be used to the later ﬁgure. It is noted 
that there were 42 stiffness parameter and each parameter could reﬂect the health 
condition of each bar element. However, only six representative stiffness parameters 
were shown due to space consideration and they were M
o
difyingAbove theta With caret Subscript k comma 6, M
o
difyingAbove theta With caret Subscript k comma 9, M
o
difyingAbove theta With caret Subscript k comma 22, M
o
difyingAbove theta With caret Subscript k comma 31, M
o
difyingAbove theta With caret Subscript k comma 32 and

5.6 Applications to Bayesian Real-Time Model Class Selection for System …
199
Fig. 5.20 Plausibility of the model classes in Hierarchical Level II related to the damage at t equals 200
s
M
o
difyingAbove theta With caret Subscript k comma 40 corresponding to the 6th, 9th, 22nd, 31st, 32nd and 40th element, respectively. 
The remaining 36 identiﬁcation results for the stiffness parameters were similar to 
M
o
difyingAbove theta With caret Subscript k comma 6, M
o
difyingAbove theta With caret Subscript k comma 9 and M
o
difyingAbove theta With caret Subscript k comma 32. It is clearly seen that the estimated stiffness parameters showed 
decent agreement with the actual values and the damages of the 22nd, 31st and 40th 
elements were successfully detected and accurately traced with small time delay. 
Figure 5.22 shows the estimation results of the damping coefﬁcients using the most

200
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
Fig. 5.21 Identiﬁcation results of the representative stiffness parameters using the most plausible 
model class
plausible model class. It is seen that the estimated values approached the actual values 
and the 99.7% credible intervals could indicate rational uncertainty level. 

5.7 Concluding Remarks
201
Fig. 5.22 Identiﬁcation results of the damping coefﬁcients using the most plausible model class 
5.7 
Concluding Remarks 
This chapter introduced the Bayesian real-time model class selection. In order to 
select the optimal model class for time-varying dynamical system, Bayesian model 
class selection is extended from the conventional ofﬂine implementation to the novel 
real-time implementation. By utilizing the Bayes’ theorem to formulate the plausibil-
ities of some given model classes, model class selection can be performed according 
the plausibilities in a real-time manner. The most plausible model class is less prone 
to noise so a more reliable future prediction can be anticipated. The proposed method 
provides simultaneous model class selection and parametric identiﬁcation in a real-
time manner. The Bayesian model class selection for real-time system identiﬁcation 
is ﬁrst conducted by utilizing some prescribed model classes and it is required to 
have at least one suitable prescribed model class. However, there is no guarantee of 
a good model class when all the model class candidates are not suitable. In order to 
resolve this problem, the novel third level of system identiﬁcation, namely system 
identiﬁcation using self-calibratable model classes, is proposed. It can reconﬁgure 
the model classes to adaptively correct their deﬁciencies. Moreover, an identiﬁcation 
approach based on hierarchical interhealable model classes is proposed to tackle the

202
5
Bayesian Model Class Selection and Self-Calibratable Model Classes …
problem of large number of model class candidates. The model classes are estab-
lished in a hierarchical manner so only a limited number of model classes is required, 
yet being able to explore a large solution space. The modeling errors including the 
errors in parameters and the deﬁciencies of the parametric models can be adaptively 
corrected. The proposed methods establish an innovative framework for real-time 
system identiﬁcation and this framework can be easily applied for other ﬁltering 
techniques. 
References 
Akaike H (1974) A new look at the statistical identiﬁcation model. IEEE Trans Autom Control 
19(6):716–723 
Akaike H (1978) A new look at the Bayes procedure. Biometrika 65(1):53–59 
Beck JL (2010) Bayesian system identiﬁcation based on probability logic. Struct Control Health 
Monit 17(7):825–847 
Beck JL, Yuen KV (2004) Model selection using response measurements: Bayesian probabilistic 
approach. J Eng Mech 130(2):192–203 
Ching J, Muto M, Beck JL (2005) Bayesian linear structural model updating using Gibbs sampler 
with modal data. In: Proceedings of the 9th international conference on structural safety and 
reliability, Rome, Italy 
Claeskens G, Hjort NL (2008) Model selection and model averaging. Cambridge Books 
Cox RT (1961) The algebra of probable inference. Johns Hopkins University Press, Baltimore 
Grünwald PD (2007) The minimum description length principle. MIT Press 
Grünwald PD, Myung IJ, Pitt MA (2005) Advances in minimum description length: theory and 
applications. MIT Press 
Hoshiya M, Saito E (1985) Structural identiﬁcation by extended Kalman ﬁlter. J Eng Mech 
110(15):1757–1770 
Jeffreys H (1961) Theory of probability, 3rd edn. Oxford Clarendon Press, Oxford, UK 
Ley E, Steel MF (2012) Mixtures of g-priors for Bayesian model averaging with economic 
applications. J Econ 171(2):251–266 
Mark C, Metzner C, Lautscham L, Strissel PL, Strick R, Fabry B (2018) Bayesian model selection 
for complex dynamic systems. Nat Commun 9(1):1–12 
Rissanen J (1978) Modeling by shortest data description. Automatica 14(5):465–471 
Schaffer J (2015) What not to multiply without necessity. Australas J Philos 93(4):644–664 
Schwarz G (1978) Estimating the dimension of a model. Ann Stat 6(2):461–464 
Sivia DS (1996) Data analysis: a Bayesian tutorial. Oxford Science Publications, Oxford, UK 
Spiegelhalter DJ, Best NG, Carlin BP, Van Der Linde A (2002) Bayesian measures of model 
complexity and ﬁt. J R Stat Soc B 64(4):583–639 
Yuen KV (2010a) Bayesian methods for structural dynamics and civil engineering. Wiley 
Yuen KV (2010b) Recent developments of Bayesian model class selection and applications in civil 
engineering. Struct Saf 32(5):338–346 
Yuen KV, Dong L (2020) Real-time system identiﬁcation using hierarchical interhealing model 
classes. Struct Control Health Monit 27(12):e2628 
Yuen KV, Mu HQ (2015) Real-time system identiﬁcation: an algorithm for simultaneous model 
class selection and parametric identiﬁcation. Comput-Aided Civ Inf 30(10):785–801 
Yuen KV, Kuok SC, Dong L (2019) Self-calibrating Bayesian real-time system identiﬁcation. 
Comput-Aided Civ Inf 34(9):806–821

Chapter 6 
Online Distributed Identiﬁcation 
for Wireless Sensor Networks 
Abstract This chapter introduces an online dual-rate distributed identiﬁcation 
framework for wireless sensor networks. Distributed identiﬁcation is a concept that 
allows an individual unit to obtain local estimation using part of the data, and the 
obtained local estimation can then be used as a basis for global estimation. In this 
chapter, typical architectures of wireless sensor networks will ﬁrst be introduced, 
including centralized, decentralized and distributed networks. Then, the online dual-
rate distributed identiﬁcation approach is introduced for wireless sensor networks. 
Filtering method using only raw observations collected at each sensor is introduced. 
The preliminary local identiﬁcation results are then compressed before transmitting 
to the central station for fusion. At the central station, Bayesian fusion is developed 
to integrate the compressed local identiﬁcation results transmitted from the sensor 
nodes in order to obtain reliable global estimation. As a result, the large identiﬁcation 
uncertainty in the local identiﬁcation results can be substantially reduced. In addi-
tion to data compression, a dual-rate strategy for sampling and transmission/fusion 
is used to alleviate the data transmission burden so that online model updating can 
be realized efﬁciently for wireless sensor networks. The computational framework 
in this chapter will be followed in the next chapter, where speciﬁc algorithms for 
handling asynchronous data and multiple outlier-corrupted data will be introduced. 
Keywords Distributed identiﬁcation · Online estimation · Bayesian fusion · Dual 
rate · Wireless sensor network 
6.1 
Introduction 
Chapters 3, 4 and 5 addressed some challenging issues in real-time system identiﬁca-
tion including both parametric identiﬁcation, model class selection and system iden-
tiﬁcation based of self-calibratable model classes, and they were introduced based on 
the centralized identiﬁcation framework. Centralized identiﬁcation requires transmit-
ting all measured data to a single central processing unit, where global identiﬁcation 
results are obtained. The architecture of centralized identiﬁcation is theoretically 
the simplest and it has the best performance when all sensors in the network are 
accurately aligned and synchronized. Therefore, conventional system identiﬁcation
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_6 
203

204
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
methods assume that observations from the sensing system are centrally acquired 
and processed. 
Wireless sensor network (WSN) is regarded as one of the most notable technolog-
ical innovations in the twenty-ﬁrst century and it becomes immensely widespread 
as a result of its advantages, such as convenient management, ease of installation 
and low deploying and maintaining cost. It is well-known that the basic feature for 
smart wireless sensors is the on-board microprocessor, which is used to process the 
observed data, make decisions, save data locally and transmit local results. Thus, 
identiﬁcation algorithms can be programmed and built into the microprocessor and 
parts of the computational tasks can be performed at the sensor nodes. In addition, 
extraneous local information can be discarded to reduce the amount of data to be 
transmitted to the central station. As a result, distributed identiﬁcation using WSNs 
can be realized in such a way that the raw response measurements are ﬁrst processed 
by the sensor nodes and then only some extracted features are transmitted to the 
central station for fusion and diagnosis (Spencer et al. 2004). 
The online dual-rate distributed identiﬁcation approach introduced in this chapter 
can realize reliable and efﬁcient updating for time-varying linear/nonlinear systems. 
This method distributes a substantial portion of the computational workload to each 
sensor node in the network and compresses the local estimation results. A Bayesian 
fusion algorithm is developed to integrate these local estimation results and a much 
lower rate than the sampling rate is utilized to fuse these local results for reducing 
the data transmission burden. As a result, the method provides not only the most 
probable values of the model parameters but also their associated uncertainties. 
In the next section, typical architectures of WSNs are introduced and their pros 
and cons will be discussed. As a result, readers can have better understanding of the 
functionality and attributes of the typical architectures of WSNs. In Sect. 6.3, the  
extended Kalman ﬁlter (EKF) using measurements from single sensor node is intro-
duced. In Sect. 6.4, the data compression and extraction approach at the sensor nodes 
is introduced, including data compression and extraction techniques for updated state 
vector and its associated covariance matrix. Section 6.5 presents the detailed deriva-
tions for the product of an arbitrary number of univariate Gaussian probability density 
functions (PDFs), and the product of an arbitrary number of multivariate Gaussian 
PDFs. A Bayesian fusion algorithm is built based on the results from the derivations 
to integrate the compressed local estimations transmitted from the sensor nodes to 
the central station. Section 6.6 presents two applications using a forty-story building 
and a bridge with two piers to structural health monitoring.

6.2 Typical Architectures of Wireless Sensor Network
205
6.2 
Typical Architectures of Wireless Sensor Network 
6.2.1 
Centralized Networks 
The centralized network architecture shown in Fig. 6.1 is the most intuitive and the 
most commonly used type of networks in system identiﬁcation. It is built around 
a single central/master server, which aggregates, stores and processes observations 
from all the local/slave sensor nodes. In other words, the local/slave nodes in the 
network are only responsible for recording and forwarding the raw measurement 
data to the central/master server without processing. 
Centralized networks hold the following advantages against decentralized and 
distributed networks: 
(1) Simple and rapid deployment. In principle, there is only one single central server 
in the network, and hence it is convenient to manage the conﬁguration of the 
network. 
(2) Minimal information loss. In centralized networks, all the raw observations are 
directly transmitted to the central server for computation and decision-making, 
and, therefore, it is straightforward to maintain the data integrity and achieve 
the minimum information loss. 
(3) High precision. Centralized networks permit to utilize the observations from all 
local nodes, and this contributes to obtaining high precision results. 
Although centralized networks possess competitive advantages, it encounters the 
following limitations:
(1) High processing cost. Only one single central unit handles all data processing 
tasks, leading to high processing cost for calculation and storage.
Central/Master Server 
Local/Slave node 
Fig. 6.1 Centralized network 

206
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
(2) Low network scalability. Centralized networks are difﬁcult to scale up because 
the capacity of the central server is limited and the trafﬁc cannot be inﬁnite. 
Factors, such as data transmission rate, data storage availability and power 
consumption, will affect severely the scalability of the networks. 
6.2.2 
Decentralized Networks 
In decentralized networks schematically shown in Fig. 6.2, the sensor nodes are 
grouped into clusters and each cluster has a single node assigned as the cluster head. 
Decentralized networks distribute measurement-processing workloads to multiple 
clusters. Each cluster head serves as a mini central unit that processes the observations 
from the nodes in its cluster, and every cluster makes its own decisions. In a given 
cluster, all nodes, except the cluster head, can only communicate with the cluster head, 
while the cluster head can communicate with all nodes in its cluster and other cluster 
heads subject to connectivity constraints. Decentralized networks follow essentially 
a peer-to-peer architecture. In other words, all clusters are peers with each other 
and no one cluster has supremacy over others. Therefore, the ﬁnal decisions of the 
network are the aggregate of the decisions from the individual clusters. 
Advantages for decentralized networks are listed as follows:
(1) Enhanced performance. Since every cluster head processes only observa-
tions from its cluster and makes its own decisions, data transmission demand
Cluster 
Cluster head 
Local node 
Fig. 6.2 Decentralized network 

6.2 Typical Architectures of Wireless Sensor Network
207
and computational requirement can be remarkably reduced. Thus, the power 
consumption is decreased, and thereby the lifespan of the sensor network is 
prolonged.
(2) High scalability. Decentralized networks are easy to scale, since their local nodes 
can be directly added to a cluster in order to increase its computing power. 
Limitations of decentralized networks are given as follows: 
(1) Complex conﬁguration. Local nodes are divided into several clusters, and 
thereby it is required much effort to ﬁnd the optimal cluster conﬁguration, which 
will be crucial for the quality of the ﬁnal estimations. 
(2) Higher maintenance costs. Decentralized networks require multiple cluster 
heads with advanced techniques to communicate the information instead of 
a single central server, leading to high maintenance costs. 
(3) Information loss. Since each cluster head utilizes only the measurement from its 
cluster with a limited number of local nodes, it is unavoidable that the informa-
tion from the entire data set cannot be fully utilized, as compared with centralized 
networks. 
6.2.3 
Distributed Networks 
Distributed networks, schematically shown in Fig. 6.3, maintain a single central 
node, but some computational workloads are distributed among several clusters. It 
is noticed that distributed networks are similar to the decentralized networks, in the 
sense that part of the computational workloads is distributed to multiple clusters. The 
primary difference between decentralized and distributed networks is the responsible 
unit for decision making. In decentralized networks, each cluster head makes its own 
decision from the data of its cluster and there is no single central node to make the 
ﬁnal decision. In contrast, in distributed networks, data processing is also shared to 
multiple clusters, but the decisions are still obtained in the central node by using 
information from all the cluster heads in the network.
Distributed networks are similar to the decentralized networks in the sense that 
they share some important characteristics, such as enhanced performance and high 
scalability. On the other hand, since distributed networks keep a central node, where 
information from all the clusters can be integrated, it is more ﬂexible and efﬁcient 
to characterize the global behavior of the system. 
According to the architecture of WSNs, system identiﬁcation using smart wire-
less sensors can be categorized into centralized, decentralized and distributed iden-
tiﬁcation. Centralized identiﬁcation possesses the simplest architecture and it has 
the best performance when all smart wireless sensors in the network are accurately 
aligned and synchronized. As a result, the majority of conventional system iden-
tiﬁcation algorithms have been developed according to the centralized framework, 
for example, Farrar and James (1997) and Sirca and Adeli (2012). On the other 
hand, WSNs enable rooms for new computing possibilities in terms of decentral-
ized and distributed system identiﬁcation. However, in the literature, most, if not

208
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Cluster 
Cluster head 
Local node 
Central node 
Fig. 6.3 Distributed network
all, existing decentralized and distributed identiﬁcation methods are performed in an 
ofﬂine manner, for example, Gao et al. (2006) and Wang et al. (2009). Compared 
with ofﬂine identiﬁcation methods, online techniques have wider applicability for 
time-varying systems tracking, so it is desirable to investigate the potential of online 
distributed identiﬁcation. Therefore, in this chapter, an efﬁcient online distributed 
system identiﬁcation method is introduced. It is based on Huang and Yuen (2019), 
but the presentation has been reorganized and substantially elaborated. It will be 
more convenient for the readers who want to apply the method to their applications. 
This method utilizes two strategies to realize efﬁcient online distributed estimation, 
namely data compression and dual-rate computing. Moreover, Bayesian fusion algo-
rithm is performed at the central station to integrate the local estimation results from 
the sensor nodes, so the method provides not only the fusion results but also their 
associated uncertainties. 
6.3 
Problem Formulations 
Consider a dynamical system with uper N Subscript d degrees of freedom (DOFs) and its equation 
of motion: 
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis

6.3 Problem Formulations
209
where bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, respec-
tively; the stiffness and damping matrix are parameterized with possibly time-varying 
model parameters bold it
a
lic theta left pa ren thesis t right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold italic theta Subscript k Baseline left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column bold italic theta Subscript c Baseline left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript theta; bo ld italic f left parenthesis t right parenthesisis the excitation applied to 
the system and bold upper T is the inﬂuence matrix associated with bold italic f . Deﬁne an augmented state 
vector bold i
t
alic y l eft parenthesis  t right parenthesis equals Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T Baseline comma 3rd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript d plus upper N Super Subscript theta composed of the displacement, 
velocity and unknown model parameter vector. Then, the state-space representation 
of the dynamical system is given as follows: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where g left parenthesis period comma period semicolon period right parenthesisrepresents the nonlinear state-space function that characterizes the 
underlying system. 
Discrete-time response measurements sampled at the sampling rate r Subscript s are acquired 
by uper N Subscript s disparate wireless sensor nodes and each wireless sensor node has uper N Subscript c channels 
of measurements at its location, e.g., strain, displacement, velocity and acceleration. 
The corresponding sampling time step is:
norm al upp
er Delta t Subscript s Baseline equals 1 divided by r Subscript s
The discrete-time measurement bold 
it
alic z Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript c for the sth sensor node is given by: 
bold 
it
alic z 
Su
b
script 
i Su pe rscript  l e ft pa renthes i s  s  ri
ght parenthesis Baseline equals h Superscript left parenthesis s right parenthesis Baseline left parenthesis bold italic y Subscript i Baseline right parenthesis plus bold italic n Subscript i Superscript left parenthesis s right parenthesis Baseline comma i equals 1 comma 2 comma ellipsis semicolon s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline
where bold 
it
al ic z Subscript i Superscript left parenthesis s right parenthesis Baseline identical to bold italic z Superscript left parenthesis s right parenthesis Baseline left parenthesis i normal upper Delta t Subscript s Baseline right parenthesisis the noise-corrupted measurement at the i t h time step; 
h Superscript left parenthesis s right parenthesis Baseline left parenthesis dot right parenthesisdeﬁnes the observation quantities for the s t h sensor node; bold 
italic n Subscript i Superscript left parenthesis s right parenthesis
represents the 
measurement noise of the s t h sensor node at the i t h time step and bold italic n Superscript left parenthesis s right parenthesisis modeled as 
Gaussian independent and identically distributed (i.i.d.) process with zero mean and 
covariance matrix bold 
up
per Sigma Subscript n Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript c Superscript times upper N Super Subscript c. 
In Chaps. 3, 4 and 5, Bayesian real-time system identiﬁcation methods were intro-
duced based on the centralized identiﬁcation framework, which implies that all the 
measurements
S
tartS
e
t
 bol d itali c  z  Subs cript i  S u p erscript left parenthesis s right parenthesis Baseline EndSet comma i equals 1 comma 2 comma ellipsis semicolon s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline, will be directly transmitted to 
the central station for processing. Compared with centralized identiﬁcation methods, 
distributed identiﬁcation processes directly the measurements observed at the corre-
sponding sensor node. In other words, each sensor node is assigned to execute online 
identiﬁcation algorithm with its own observed data and the local processing rate 
r Subscript s. In order to distinguish the notations in this chapter and Chaps. 3–5, the online 
identiﬁcation using EKF with the local measurements is brieﬂy revisited as follows. 
Given the measurement dataset of the s t h sensor node up to the lef t parenthesis i minus 1 right parenthesis t h time 
step upper
 D S u
b
scrip
t i minus
 1  S u p e rscrip
t l
eft parenthesis s right parenthesis Baseline equals StartSet bold italic z 1 Superscript left parenthesis s right parenthesis Baseline comma bold italic z 2 Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma bold italic z Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline EndSet
, the predicted state vector bold 
italic y Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis for the sth sensor 
node can be obtained as follows: 
bold 
italic  y 
S
ubscr
i
pt i ver
tic
a
l bar i
 min us 1 
Superscr ipt left
 pa
renthesis s right parenthesis Baseline identical to upper E left bracket bold italic y Subscript i Superscript left parenthesis s right parenthesis Baseline vertical bar upper D Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline right bracket equals bold upper A Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline bold italic y Subscript i minus 1 vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline plus bold italic delta Subscript i minus 1 Superscript left parenthesis s right parenthesis

210
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
where bold 
italic y  S u
b
scrip
t i
 minus 1
 ve
rtical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline identical to upper E left bracket bold italic y Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline vertical bar upper D Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline right bracket
; bold 
upper A Subscript i minus 1 Superscript left parenthesis s right parenthesis is the state-transition matrix; bold i
talic delta Subscript i minus 1 Superscript left parenthesis s right parenthesis is the 
remainder term due to the local linear approximation. Then, the covariance matrix 
of bold 
italic y Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis can be obtained as:
Start
Layout  1s
t 
Row 1
st
 Column
 bold
 u
pper 
Si
gma Sub
scrip
t i vertica
l b
a
r i
 
minus
 1 Super
script l eft pa
rent hesis s  r igh
t p
a
renthesis 2nd Column identical to upper E left bracket left parenthesis bold italic y Subscript i Superscript left parenthesis s right parenthesis Baseline minus bold italic y Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis left parenthesis bold italic y Subscript i Superscript left parenthesis s right parenthesis Baseline minus bold italic y Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline vertical bar upper D Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline right bracket 2nd Row 1st Column Blank 2nd Column equals lamda left parenthesis bold upper A Subscript i minus 1 Superscript left parenthesis s right parenthesis Baseline bold upper Sigma Subscript i minus 1 vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline bold upper A Subscript i minus 1 Superscript left parenthesis s right parenthesis upper T Baseline plus bold upper B Subscript i minus 1 Baseline bold upper Sigma Subscript f Baseline bold upper B Subscript i minus 1 Superscript upper T Baseline right parenthesis EndLayout
where lamdais the fading factor introduced in Chap. 2; bold upper B Subscript i minus 1 is the input-to-state matrix; 
and b old upper Sigma Subscript f is the covariance matrix of the excitation bold italic f . 
When a new measurement bold 
italic z Subscript i Superscript left parenthesis s right parenthesis
is available, the updated state vector and its covari-
ance matrix can be obtained by Kalman ﬁlter (Kalman 1960; Kalman and Bucy 
1961): 
bold 
ital ic y Su
bscrip t i ver
t
i
cal b
ar
 i Supe
rscrip
t 
left parenthesis s right parenthesis Baseline equals bold italic y Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline plus bold upper G Subscript i Superscript left parenthesis s right parenthesis Baseline left parenthesis bold z Subscript i Superscript left parenthesis s right parenthesis Baseline minus h Superscript left parenthesis s right parenthesis Baseline left parenthesis bold italic y Subscript i vertical bar i minus 1 Baseline right parenthesis right parenthesis
bold 
uppe r
 
Sigma Su bscript
 i  vert
i
c
al ba
r i S
uperscript left parenthesis s right parenthesis Baseline equals left parenthesis bold upper I Subscript 2 upper N Sub Subscript d Subscript plus upper N Sub Subscript theta Subscript Baseline minus bold upper G Subscript i Superscript left parenthesis s right parenthesis Baseline bold upper H Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis bold upper Sigma Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis
where bold 
upper H Subscript i Superscript left parenthesis s right parenthesis
is the observation matrix at the i t h time step for the s t h sensor node and 
bold 
upper G Subscript i Superscript left parenthesis s right parenthesis
is the Kalman gain at the i t h time step for the s t h sensor node given by: 
bold 
up
p er G 
Subscr ipt i
 S
up
erscr
i pt le
ft par enthe
si
s s  righ
t
 par
enthesis Baseline equals bold upper Sigma Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline bold upper H Subscript i Superscript left parenthesis s right parenthesis Baseline Superscript normal upper T Baseline left parenthesis bold upper H Subscript i Superscript left parenthesis s right parenthesis Baseline bold upper Sigma Subscript i vertical bar i minus 1 Superscript left parenthesis s right parenthesis Baseline bold upper H Subscript i Superscript left parenthesis s right parenthesis Baseline Superscript normal upper T Baseline plus bold upper Sigma Subscript n Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1
At each sensor node, Eqs. (6.5)–(6.9) can be used recursively with the measured 
data to obtain the preliminary local estimation of the state vector and its covariance 
matrix. 
It is obvious that the local estimation results will exhibit large uncertainty because 
of the limited information from the corresponding sensor node. Thus, fusion of the 
local estimation results is desirable for reliable global estimation and its reason-
able uncertainty level. In addition, direct transmission of local estimation results, 
including the updated state vectors bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis and associated covariance matrices bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis for all 
the sensor nodes, will lead to a heavy data transmission burden in the sensory system. 
It may easily exceed the bandwidth and power requirement limit of the network. 
Speciﬁcally, transmission of bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis involves left parenthesis  2 upper N Subscript d Baseline plus upper N Subscript theta Baseline right parenthesis left parenthesis 2 upper N Subscript d Baseline plus upper N Subscript theta Baseline plus 3 right parenthesis divided by 2
real numbers for each sensor node at each time step. For example, consider a system 
with 100 DOFs and 10 unknown model parameters. Then, the amount of data to be 
transmitted to the central station is left parenthesis  2 upper N S ubscript d Baseline plus upper N Subscript theta Baseline right parenthesis left parenthesis 2 upper N Subscript d Baseline plus upper N Subscript theta Baseline plus 3 right parenthesis divided by 2 equals 22365 for each 
sensor node at each time step. Therefore, it is desirable to perform data compression 
before transmission to the central station for fusion.

6.4 Compression and Extraction Technique at the Sensor Nodes
211
6.4 
Compression and Extraction Technique at the Sensor 
Nodes 
In this section, two efﬁcient strategies are employed to reduce the data transmission 
demand. First, instead of using the same rate as the sampling rate at the sensor nodes 
to fuse the local estimation results, it is proposed to use a much lower rate r Subscript c than 
the sampling rate for fusion at the central station. The local sampling rate r Subscript s can 
be determined based on the sensor network setup and its selection criteria are the 
same as conventional centralized identiﬁcation techniques. Typically, it is 200 Hz. 
On the other hand, the choice of r Subscript c at the central station is more ﬂexible with the 
consideration of the following tradeoff. A larger value of r Subscript c implies higher demand 
of transmission and fusion, while a smaller value of r Subscript c will result in larger delay of 
the identiﬁcation results. For typical applications of system identiﬁcation for civil 
engineering structures, it is suggested to be in the order of 1 s. Therefore, in the 
dual-rate strategy, for every r Subscript s Baseline divided by r Subscript c sampling time steps, the local identiﬁcation results 
will only be compressed and transmitted once to the central station. Note that the 
local index i runs much faster than the central index upper I, and i equals upper I r Subscript s Baseline divided by r Subscript c at the same 
physical time. Figure 6.4 shows the schematic diagram of the time index i at the 
sensor nodes and the time index upper I at the central station. The dashed arrows represent 
the time instant that the local identiﬁcation results are compressed and transmitted 
to the central station. This dual-rate computing strategy can signiﬁcantly alleviate 
the data transmission burden and achieve efﬁcient online updating. 
6.4.1 
Compression and Extraction of the Updated State 
Vector 
The second strategy for alleviating the data transmission burden is to compress the 
local estimation results and it is elaborated as follows. The locally updated state vector 
bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis in Eq. (6.5) contains three components, namely bold 
ital i
c
 y Sub
scri pt i vert
ical  bar i Su
per
script left parenthesis s right parenthesis Baseline equals left bracket bold italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline comma ModifyingAbove b o l d s y m b o l x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline right bracket Superscript upper T
, 
where bold 
italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis , Modify
ingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis represent the updated displacement, velocity and model 
parameter vector, respectively. In practice, the dimension of the updated state vector 
bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis is large for models with a large number of DOFs, since it includes three different
Fig. 6.4 Time indices at the sensor nodes and the central station 

212
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
types of components, i.e., updated displacement, velocity and model parameter 
vectors. 
In order to diminish the amount of data transmission, the locally updated displace-
ment and velocity vectors are projected to the space spanned by a limited number of 
the eigenvectors of the nominal model. The reason to use the nominal eigenvectors 
instead of the updated eigenvectors is that it can avoid solving eigenvalue problem 
at each node and at every time step. Moreover, the nominal eigenvectors can be 
pre-calculated and pre-stored at the central station and all sensor nodes. As a result, 
there is no need to transmit them between the central station and the sensor nodes. 
Furthermore, the updated eigenvectors at different nodes will generally be slightly 
different so using the updated eigenvectors for the projection basis will complicate 
the subsequent computation. Finally, although the updated and nominal eigenvectors 
are different, the difference can be compensated by the other eigenvectors. 
Use bol d italic phi Subscript m Baseline element of double struck upper R Superscript upper N Super Subscript d, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, to denote the mth eigenvector of the nominal 
model, and they are mass normalized, that is bol
d ita li c phi Subscript m Superscript normal upper T Baseline bold upper M bold italic phi Subscript m Baseline equals 1. In addition, they are 
bold upper M-orthogonal, that is bol
d ita lic phi Subscript m Superscript normal upper T Baseline bold upper M bold italic phi Subscript m Sub Superscript prime Baseline equals 0, if  m  not
 equals m Superscript prime. Then, the nominal eigen-matrix bold upper Phi
is deﬁned to integrate the ﬁrst uper N Subscript m nominal eigenvectors:
b o ld upper  P h i  ident i cal to l
eft bracket bold italic phi 1 comma bold italic phi 2 comma ellipsis comma bold italic phi Subscript upper N Sub Subscript m Subscript Baseline right bracket element of double struck upper R Superscript upper N Super Subscript d Superscript times upper N Super Subscript m
It is noted that bold upper Phi can be pre-calculated and pre-stored at all sensor nodes and the 
central station. Therefore, it is not required for transmission in the entire monitoring 
and identiﬁcation process. 
Approximation is realized by mathematical projections. In particular, the projec-
tion of the locally updated displacement and velocity vectors to the subspace spanned 
by the nominal eigenvectors can be obtained as follows:
S
tartL
ayou t  Enl
arge d left 
brac e 1st R o w bold
 i
talic x
 Subsc
ript  i ve
rtic al bar i
 Sup erscrip t  left p
ar
enthesi
s s right parenthesis Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts bold italic phi Subscript m Baseline u Subscript m comma i Superscript left parenthesis s right parenthesis Baseline plus bold italic epsilon Subscript u comma i Baseline equals bold upper Phi bold italic u Subscript i Superscript left parenthesis s right parenthesis Baseline plus bold italic epsilon Subscript u comma i Baseline 2nd Row ModifyingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript m Baseline Endscripts bold italic phi Subscript m Baseline v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline plus bold italic epsilon Subscript v comma i Baseline equals bold upper Phi bold italic v Subscript i Superscript left parenthesis s right parenthesis Baseline plus bold italic epsilon Subscript v comma i EndLayout
where u Sub
script m comma i Superscript left parenthesis s right parenthesis and v Subs
cript m comma i Superscript left parenthesis s right parenthesis, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript m Baseline, are the projected displacement and velocity 
coordinates, respectively; and the projected displacement and velocity vectors can be 
deﬁned by grouping the corresponding coordinates: bold 
it
a
l
ic u 
Subscript i
 Supe r s c r ipt le
ft pa
ren
th
esis s right parenthesis Baseline equals left bracket u Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline comma u Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma u Subscript upper N Sub Subscript m Subscript comma i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript m and bold i
ta
l
i
c v Su
bscr i p t i S
uper s c r i p t  left
 pare
nth
esis s right parenthesis Baseline equals left bracket v Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline comma v Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma v Subscript upper N Sub Subscript m Subscript comma i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript m. The last term in each of the sub-
equation in Eq. (6.11), bold italic epsilon Subscript u comma i and bold italic epsilon Subscript v comma i, are the projection error and they satisfy: 
Sta
rtLayou t 1st  R ow phi S u b s crip
t m
 Supers cript  u pper T B a s e line
 bold upper M bold italic epsilon Subscript u comma i Baseline equals 0 comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline 2nd Row phi Subscript m Superscript upper T Baseline bold upper M bold italic epsilon Subscript v comma i Baseline equals 0 comma m equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline EndLayout
Since the eigenvectors are M-orthonormal (Yuen 2012), the projected displace-
ment and velocity vectors are readily obtained as:

6.4 Compression and Extraction Technique at the Sensor Nodes
213
bold 
it
a
l
ic u
 
Subsc
rip
t i Superscript left parenthesis s right parenthesis Baseline equals left parenthesis bold upper Phi Superscript normal upper T Baseline bold upper M right parenthesis bold italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis
bold i
ta
l
i
c v 
S
ubscri
pt 
i Superscript left parenthesis s right parenthesis Baseline equals left parenthesis bold upper Phi Superscript normal upper T Baseline bold upper M right parenthesis ModifyingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis
The matrix bold upper Phi Superscript normal upper T Baseline bold upper M can be pre-calculated and pre-stored in all sensor nodes, so it is not 
required to be transmitted in the monitoring period. 
Therefore, only the projected displacement vector bold 
it
alic u Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript m, projected velocity 
vector bold i
ta
lic v Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript m and model parameter vector bold i
ta
lic theta Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript theta are required to be trans-
mitted to the central station. In other words, denote the compressed state vector to 
include the projected displacement, projected velocity and model parameter vector: 
bold 
it
a
l
ic q 
Su
bscript i 
Su
perscript 
le
ft p
arenthesis
 s right parenthesis Baseline identical to left bracket bold italic u Subscript i Superscript left parenthesis s right parenthesis Baseline Superscript normal upper T Baseline comma bold italic v Subscript i Superscript left parenthesis s right parenthesis Baseline Superscript normal upper T Baseline comma bold italic theta Subscript i Superscript left parenthesis s right parenthesis Baseline Superscript normal upper T Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript m plus upper N Super Subscript theta
Note that only bold 
italic q Subscript i Superscript left parenthesis s right parenthesis
of each sensor node will be transmitted to the central station. 
Since the number of signiﬁcant modes is far less than the number of DOFs for 
dynamical systems with a large number of DOFs (i.e., up pe r N Subscript m Baseline much less than upper N Subscript d), transmission 
of the compressed state vector bold 
italic q Subscript i Superscript left parenthesis s right parenthesis
requires only 2 up per N Subscript m plus upper N Subscript theta real numbers for each 
sensor node, compared with direct transmission of the updated state vector bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis with 
2 up per N Subscript d plus upper N Subscript theta real numbers. Furthermore, the growth of the dimension for bold 
italic q Subscript i Superscript left parenthesis s right parenthesis
versus 
the number of DOFs for the dynamical system is mild so this arrangement enhances 
the scalability and it is suitable for the systems with a large number of DOFs. 
On the other hand, after fusing the compressed state vectors
S
tartS
et  bold i
ta l i c  q  Subscri
p
t i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline EndSet
at the central station, the updated displacement and velocity vectors can be extracted 
from the fusion result of the compressed state vector. Denote the fusion result of the 
compressed state vector as: 
bo ld
 i t
a
li c 
q 
Subscrip
t 
upper I 
Su
pers
cript f Ba
seline equals left bracket bold italic u Subscript upper I Superscript f Baseline Superscript normal upper T Baseline comma bold italic v Subscript upper I Superscript f Baseline Superscript normal upper T Baseline comma bold italic theta Subscript upper I Superscript f Baseline Superscript normal upper T Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript m plus upper N Super Subscript theta
where bo ld
 italic u Subscript upper I Superscript f , bold
 italic v Subscript upper I Superscript f and bold
 italic theta Subscript upper I Superscript f indicate the fusion results of the projected displacement vector, 
projected velocity vector and model parameter vector, respectively; and upper I indicates 
the central computing index. Then, the updated displacement and velocity vectors 
can be extracted as follows:
S
tartL
ayou t  En la
rg
ed lef
t br a ce 1s
t 
Row bold italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline equals bold upper Phi bold italic u Subscript upper I Superscript f Baseline 2nd Row ModifyingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline equals bold upper Phi bold italic v Subscript upper I Superscript f EndLayout

214
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
6.4.2 
Compression and Extraction of the Covariance Matrix 
In addition to compressing the updated state vector bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis , it is even more important to 
compress the covariance matrix of the locally updated state vector. It is because there 
are many more components in the covariance matrix than the state vector. Further-
more, proper compression of the covariance matrix can facilitate the fusion process. 
In this subsection, we will present a method for the compression and extraction of 
the covariance matrix. 
According to Eqs. (6.13) and (6.10), the covariance matrices for the projected 
displacement vector bold 
italic u Subscript i Superscript left parenthesis s right parenthesis
and the projected velocity vector bold i
talic v Subscript i Superscript left parenthesis s right parenthesis
can be readily obtained 
as:
bold 
uppe r  Sigma Su
bscrip t u comma i
 Superscript left parenthesis s right parenthesis Baseline equals bold upper Phi Superscript normal upper T Baseline bold upper M bold upper Sigma Subscript x comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline bold upper M bold upper Phi element of double struck upper R Superscript upper N Super Subscript m Superscript times upper N Super Subscript m
bold 
uppe r  Sigma Su
bscript  v  comma i 
Superscript left parenthesis s right parenthesis Baseline equals bold upper Phi Superscript normal upper T Baseline bold upper M bold upper Sigma Subscript ModifyingAbove x With dot comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline bold upper M bold upper Phi element of double struck upper R Superscript upper N Super Subscript m Superscript times upper N Super Subscript m
where bold 
upper Sigma Subscript x comma i vertical bar i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript ModifyingAbove x With dot comma i vertical bar i Superscript left parenthesis s right parenthesis are the submatrices in bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis , corresponding to the covariance 
matrix for the updated displacement vector bold 
italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis and the updated velocity vector Modify
ingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis , 
respectively. 
6.4.2.1
Three Weighting Fusers 
In general, three different weighting fusers can be utilized to calculate the fusion 
results, namely matrix weights, vector weights and scalar weights (Sun 2004; Sun 
and Deng 2004; Deng et al. 2013). Matrix weights, which utilize the entire covari-
ance matrix of the locally updated state vector to calculate the fusion results, provide 
the optimal fusion results but the data transmission and computational demand are 
costly, and hence will hamper the real-time application of the method. In the present 
application, the entire compressed covariance matrices bold 
upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis, and the covari-
ance matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis for the updated model parameter vector bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis will be transmitted 
to the central station as weighting terms for calculating the fusion results. It is noted 
that bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis is the submatrix in bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis , corresponding to the covariance matrix for bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis . 
Therefore, considering the symmetry of the covariance matrix, the number of the 
transmitted data for matrix weights is upper N Subscript m Baseline left parenthesis upper N Subscript m Baseline plus 1 right parenthesis plus upper N Subscript theta Baseline left parenthesis upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 for each sensor 
node. 
Vector weights utilize only the variances in the diagonal of the covariance matrix 
to obtain the fusion results. They discard the information about the cross-covariance 
matrix and thereby provide the suboptimal fusion results. However, the transmitted 
data for the weighting terms in this case can be signiﬁcantly alleviated. Speciﬁcally, 
only the diagonal elements in bold 
upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis, bold 
upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis will be transmitted to the central 
station, so the number of the transmitted data for vector weights is 2 up per N Subscript m plus upper N Subscript theta for 
each sensor node.

6.4 Compression and Extraction Technique at the Sensor Nodes
215
Scalar weights use the trace of the covariance matrix to calculate the fusion results. 
In other words, the sum of the variances in the diagonal of the covariance matrix is 
utilized to obtain the fusion results. Scalar weights not only discard the information 
about the cross-covariance matrix, but also assign the same weight for the components 
in the locally updated state vector. Therefore, scalar weights provide the fusion results 
with the lowest accuracy, compared with matrix and vector weights. In the present 
application, the number of the transmitted data for scalar weights is only 3 for each 
sensor node, since only the traces of the matrix bold 
upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis, bold 
upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis are transmitted 
to the central station for the calculation of the fusion results. 
6.4.2.2
Mixed Vector–Matrix Weights for Data Fusion 
In order to balance the accuracy of the fusion results and the data transmission and 
computational burden, we proposed mixed vector–matrix weights for fusion in this 
chapter. Speciﬁcally, it is proposed to utilize only the variances for the displace-
ment and velocity responses. However, the fusion result of the model parameters is 
calculated by using the covariance matrix of the locally updated model parameters. 
Therefore, only the diagonal elements in bold 
upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis, and the upper triangular 
elements in bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis considering the symmetry of the covariance matrix, will be trans-
mitted as weighting terms to the central station. Then, the compressed weighting 
vector can be deﬁned as follows: 
bold i
ta
l
i
c w 
S
ubscr
ipt
 
i Supe
r
scrip
t l
e
f t
 
paren
thesi
s s 
right parenthesis Baseline identical to left bracket d i a g left parenthesis bold upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis comma d i a g left parenthesis bold upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis comma bold upper Xi left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket Superscript normal upper T
where d i a g left parenthesis bold upper Sigma right parenthesisgives the row vector with all diagonal elements in the matrix bold upper Sigma, 
and bold upper Xi left parenthesis bold upper Sigma right parenthesisgives the row vector grouping the upper triangular elements in bold upper Sigma. It is  
noted that if the entire covariance matrix bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis is utilized to calculate the fusion 
results, left parenthesis  2 upper N Subscript d Baseline plus upper N Subscript theta Baseline right parenthesis left parenthesis 2 upper N Subscript d Baseline plus upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 components are required to be transmitted for 
each sensor node. On the other hand, if the matrix weights
S
tartS
et bo ld up
per S igma 
Subsc
ript u comma i Superscript left parenthesis s right parenthesis Baseline comma bold upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis Baseline comma bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline EndSet
are 
used for obtaining the fusion results, upper N Subscript m Baseline left parenthesis upper N Subscript m Baseline plus 1 right parenthesis plus upper N Subscript theta Baseline left parenthesis upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 components are 
transmitted for each sensor node. However, in contrast to the compressed weighting 
vector bold i
talic w Subscript i Superscript left parenthesis s right parenthesis
in Eq. (6.20), there are only 2 up per N Subscript m plus upper N Subscript theta Baseline left parenthesis upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 components to be 
transmitted to the central station. For example, if up er N Subscript d Baseline equals 100, up er  N Subscript m Baseline equals upper N Subscript theta Baseline equals 5, then 
left parenthesis  2 upper N S ubscript d Baseline plus upper N Subscript theta Baseline right parenthesis left parenthesis 2 upper N Subscript d Baseline plus upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 equals 21115 and upper N Subscript m Baselin e left parenthesis upper N Subscript m Baseline plus 1 right parenthesis plus upper N Subscript theta Baseline left parenthesis upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 equals 45, 
but 2 up per N Subscript m plus upper N Subscript theta Baseline left parenthesis upper N Subscript theta Baseline plus 1 right parenthesis divided by 2 is only 25. 
Therefore, following the aforementioned procedure, the covariance matrix bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis is 
compressed to the weighting vector bold i
talic w Subscript i Superscript left parenthesis s right parenthesis . After fusion at the central station, the fused 
weighting vector bold
 italic w Subscript upper I Superscript f will be sent back to each sensor node. Then, the covariance 
matrices at the sensor nodes can be updated as follows:

216
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
bold 
uppe r 
Si
gma
 
Su
b
scri
pt 
i
 v
e
r
t
i
ca
l
 bar
 i 
S
upe
rs
c
r
i pt
 lef
t 
par
e
nthesis s right parenthesis Baseline equals Start 3 By 3 Matrix 1st Row 1st Column bold upper Phi bold upper Lamda left parenthesis bold italic w Subscript u comma upper I Superscript f Baseline right parenthesis bold upper Phi Superscript normal upper T Baseline 2nd Column bold 0 3rd Column bold 0 2nd Row 1st Column bold 0 2nd Column bold upper Phi bold upper Lamda left parenthesis bold italic w Subscript v comma upper I Superscript f Baseline right parenthesis bold upper Phi Superscript normal upper T Baseline 3rd Column bold 0 3rd Row 1st Column bold 0 2nd Column bold 0 3rd Column bold upper Sigma Subscript theta comma upper I Superscript f EndMatrix
where b
o
ld u
ppe
r Lamda left parenthesis bold italic w Subscript u comma upper I Superscript f Baseline right parenthesis
and b
o
ld u
ppe
r Lamda left parenthesis bold italic w Subscript v comma upper I Superscript f Baseline right parenthesis
indicate the diagonal matrix with its diagonal values 
being the corresponding components in the fused weighting vector bold
 italic w Subscript upper I Superscript f ; and b ol
d upper Sigma Subscript theta comma upper I Superscript f
indicates the fused covariance matrix of the model parameter vector. Note that the 
nominal eigenvectors are used in the compression and extraction, since transmission 
of the updated eigenvectors at each time step will induce tremendous transmission 
burden. It is worth noting that the usage of the nominal eigenvectors does not imply 
that the dynamical model is compatible with these nominal eigenvectors. Instead, 
the nominal eigenvectors are used only as the basis vectors to span the space of the 
state vectors. 
6.5 
Bayesian Fusion at the Central Station 
In this section, derivations of the product of an arbitrary number of univariate Gaus-
sian PDFs, and the product of an arbitrary number of multivariate Gaussian PDFs are 
ﬁrst presented. Then, direct fusion of the compressed information from the sensor 
nodes will be elaborated. 
6.5.1 
The Product of Univariate Gaussian PDFs 
Consider a univariate Gaussian PDF with mean muand standard deviation sigma: 
p left
 parenthesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma EndFraction exp left bracket minus StartFraction left parenthesis x minus mu right parenthesis squared Over 2 sigma squared EndFraction right bracket
√
p le
ft 
p
aren thesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma EndFraction exp left bracket minus StartFraction left parenthesis x minus mu right parenthesis squared Over 2 sigma squared EndFraction right bracket
p le
f
t parenthesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma EndFraction exp left bracket minus StartFraction left parenthesis x minus mu right parenthesis squared Over 2 sigma squared EndFraction right bracket
Then, the product of upper N univariate Gaussian PDFs p Subs c ript iot a  B a seline left parenthesis x right parenthesis comma iota equals 1 comma 2 comma ellipsis comma upper N, with 
mean mu Subscript iotaand standard deviation sigma Subscript iotais given as: 
S
t
artL
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
S
t a
r
tLay
out 1
s
t
 Ro
w
 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
St
a
r
tLay
out  1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
Start
L
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
S
t a
r
tLay
out 1
s
t Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout

6.5 Bayesian Fusion at the Central Station
217
Start
L
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
S
t a
r
tLay
out 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
Start
L
ayo u
t  
1
st R
ow 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
Start
L
ay out 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
St
a
r
tLay
out
 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
Start
L
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction left parenthesis x minus mu Subscript iota Baseline right parenthesis squared Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket 2nd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 3rd Row 1st Column Blank 2nd Column times exp left bracket minus one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x squared plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis x minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right bracket EndLayout
The exponent in Eq. (6.23) is a quadratic function in the random variable x, and 
thereby Eq. (6.23) can be rewritten as follows: 
S
t
artL
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S
t a
r
tLay
out 1
s
t
 Row 1
st
 C
olumn product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
St
a
r
tLay
out 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL
a
y
ou t
 1s
t Ro
w 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Sta
rtLa
yout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Lay
o
ut 
1st 
Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL a you
t 1s
t R
ow 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL a
yout
 1st
 Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Layout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S tar
tLay
out 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL
ay
ou
t 
1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S
t a
r
tLay
out 1
s
t
 Row 1
st
 C
o
lumn
 pro
duct Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Lay
o ut 
1st 
Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL a you
t 1s
t R
ow 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S tar
tLay
out 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartL
ay
ou
t 1st
 R
ow
 1s
t 
C
ol u
mn 
prod
uct Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Sta
rtLa
yout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Layout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S
tart
Layo
ut 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Layo
ut
 1
st 
Ro
w
 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
√
St
artL
ayou
t 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
La yout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
St artL
ay
out 
1s
t
xR o
w 1
st C
olumn product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
StartLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Sta
rtLa
yout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Layout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
S
tart
Layo
ut 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
Start
Layo
ut
 1st
 R
ow 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column times exp left bracket minus one half sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket 3rd Row 1st Column equals 2nd Column left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Over 2 EndFraction Baseline left parenthesis product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript negative 1 Baseline right parenthesis 4th Row 1st Column Blank 2nd Column times exp left bracket StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction dot sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver 2 sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket 5th Row 1st Column equals 2nd Column StartFraction s 0 Over StartRoot 2 pi EndRoot left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right parenthesis squared Over 2 left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline EndFraction right bracket EndLayout
where s 0 is a scaling factor given by: 
s 0  
equals StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0 equals StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
[
|
|
|
√
s 0 
equa
ls StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0 e
quals StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0
 equ als St
artF
ra
cti
on 
1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 
0 
eq
ua
l
s
 Sta
rtF
raction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0 eq
u
als 
Star
tFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0 e
quals StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0
 equ
als StartFraction 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
s 0 eq
ua
ls
 S
ta
rtF
rac
tion 1 Over left parenthesis 2 pi right parenthesis Superscript left parenthesis upper N minus 1 right parenthesis divided by 2 Baseline EndFraction StartRoot StartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative 1 Baseline Over product Underscript iota equals 1 Overscript upper N Endscripts sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot exp StartSet minus one half left bracket sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Superscript 2 Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction minus StartStartFraction left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis squared OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction right bracket EndSet
By comparing Eqs. (6.22) and (6.24), the following equations can be obtained: 
p
r
oduc
t Under
script iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals StartFraction s 0 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
√
produ
ct 
U
n
d
er scri
pt iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals StartFraction s 0 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
produc
t
 Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis equals StartFraction s 0 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
where 
mu S
ubs
crip
t p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction
mu Subscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction
mu 
Subs
cript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction
mu Sub
script p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction

218
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
and 
sig m
a  
S
ubsc
ript p Baseline equals left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half
sigma
 S ubscript p Baseline equals left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half
si
gma Subscript p Baseline equals left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction right parenthesis Superscript negative one half
As a result, according to Eq. (6.26), it can be concluded that the product of upper N
univariate Gaussian PDFs is a Gaussian function. However, this product is not a PDF, 
as it is not normalized. On the other hand, since s 0 in Eq. (6.26) is a scaling factor, 
the following equation can be obtained: 
p
r
oduc
t Under
script iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis proportional to StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
√
produ
ct 
U
n
d
er scri
pt iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis proportional to StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
produc
t
 Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis x right parenthesis proportional to StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
where mu Subscript p and sigma Subscript p are given as Eqs. (6.27) and (6.28), respectively. It is found that the 
product of upper N univariate Gaussian PDFs in Eq. (6.29) is proportional to a Gaussian 
PDF with mean value mu Subscript p and standard deviation sigma Subscript p. 
Example Consider three univariate Gaussian PDFs p 1xleft parenthesis x right parenthesis, p 2xleft parenthesis x right parenthesisand p 3xleft parenthesis x right parenthesiswith 
mean value mu 1 equals 0.2, mu 2 equals 0.5, mu 3  equals negative 0.6 and standard deviation sig ma  1 equals 2, 
sig ma  2 equals 1.6, sig ma  3 equals 1.1, respectively. Then, the normalized product of these three 
Gaussian PDFs is given by: 
kap pa 0 p 1 left paren
thesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
√
kappa
 0 
p
 
1
xl eft 
parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
kappa 
0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis equals StartFraction 1 Over StartRoot 2 pi EndRoot sigma Subscript p Baseline EndFraction exp left bracket minus StartFraction left parenthesis x minus mu Subscript p Baseline right parenthesis squared Over 2 sigma Subscript p Superscript 2 Baseline EndFraction right bracket
where kappa 0 is a normalizing constant, and 
mu S
ubs
crip
t p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Subscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu 
Subs
cript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Sub
sc
ript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Su bscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Su bs cript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Subscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Subscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Su bscript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Su bs cript p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
mu Su
b script p Baseline equals StartStartFraction sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction mu Subscript iota Baseline Over sigma Subscript iota Superscript 2 Baseline EndFraction OverOver sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndEndFraction equals StartStartFraction StartFraction 0.2 Over 2 squared EndFraction plus StartFraction 0.5 Over 1.6 squared EndFraction minus StartFraction 0.6 Over 1.1 squared EndFraction OverOver StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndEndFraction equals negative 0.17
sig m
a Subscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
/sig
ma S
ubscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
sigma 
S
ubscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
/
sigma Subscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
sig ma  Subscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
sigma  S ubscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
sigma
 Subscript p Baseline equals StartFraction 1 Over StartRoot sigma summation Underscript iota equals 1 Overscript 3 Endscripts StartFraction 1 Over sigma Subscript iota Superscript 2 Baseline EndFraction EndRoot EndFraction equals StartFraction 1 Over StartRoot StartFraction 1 Over 2 squared EndFraction plus StartFraction 1 Over 1.6 squared EndFraction plus StartFraction 1 Over 1.1 squared EndFraction EndRoot EndFraction equals 0.68
Therefore, the normalized product kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesisis a Gaussian PDF with 
mean mu S ubscript p Baseline equals negative 0.17 and standard deviation sig ma  Subscript p Baseline equals 0.68. Figure 6.5 presents the 
PDF p 1xleft parenthesis x right parenthesis, p 2xleft parenthesis x right parenthesis, p 3xleft parenthesis x right parenthesisand kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis. It is observed that the normal-
ized product kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesisconcentrates on a narrower range than any of the 
individual PDF p 1xleft parenthesis x right parenthesis, p 2xleft parenthesis x right parenthesisand p 3xleft parenthesis x right parenthesis.
Figure 6.6 presents the normalized product kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesisand the product 
p 1xleft parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesiswhich is calculated by direct multiplying the PDF p 1xleft parenthesis x right parenthesis, p 2xleft parenthesis x right parenthesis
and p 3xleft parenthesis x right parenthesis. It is obvious that the direct product result p 1xleft parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesisis no longer 
a PDF since it does not have the correct normalization.

6.5 Bayesian Fusion at the Central Station
219
Fig. 6.5 Probability density functions p 1xleft parenthesis x right parenthesis, p 2xleft parenthesis x right parenthesis, p 3xleft parenthesis x right parenthesisand kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis
6.5.2 
The Product of Multivariate Gaussian PDFs 
The multivariate Gaussian PDF of an n-variate random vector bo ld italic x  e q uals left parenthesis x 1 comma x 2 comma ellipsis comma x Subscript n Baseline right parenthesis Superscript upper T
is given as follows: 
p left parenthesis bold ita
l
ic x right parenthesis equals left parenthesis 2 pi right parenthesis Superscript negative n divided by 2 Baseline StartAbsoluteValue bold upper Sigma EndAbsoluteValue Superscript negative 1 divided by 2 Baseline exp left bracket minus one half left parenthesis bold italic x minus bold italic mu right parenthesis Superscript upper T Baseline bold upper Sigma Superscript negative 1 Baseline left parenthesis bold italic x minus bold italic mu right parenthesis right bracket
p lef t parenthesi s bo
l
d italic x right parenthesis equals left parenthesis 2 pi right parenthesis Superscript negative n divided by 2 Baseline StartAbsoluteValue bold upper Sigma EndAbsoluteValue Superscript negative 1 divided by 2 Baseline exp left bracket minus one half left parenthesis bold italic x minus bold italic mu right parenthesis Superscript upper T Baseline bold upper Sigma Superscript negative 1 Baseline left parenthesis bold italic x minus bold italic mu right parenthesis right bracket
where bold italic mu element of double struck upper R Superscript n is the mean vector and b old upper Sigma element of double struck upper R Superscript n times n is the covariance matrix. 
For ease of derivation, the Gaussian PDF in Eq. (6.30) is rewritten as: 
p left par
e
nthesis bold italic x right parenthesis equals exp left parenthesis minus one half bold italic x Superscript upper T Baseline bold upper Delta bold italic x plus bold italic delta Superscript upper T Baseline bold italic x minus bold italic zeta right parenthesis
p left parenth esi
s
 bold italic x right parenthesis equals exp left parenthesis minus one half bold italic x Superscript upper T Baseline bold upper Delta bold italic x plus bold italic delta Superscript upper T Baseline bold italic x minus bold italic zeta right parenthesis
where
b o ld u
pper Delta equals bold upper Sigma Superscript negative 1
bol d ita
lic delta equals bold upper Sigma Superscript negative 1 Baseline bold italic mu

220
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.6 Probability density functions p 1xleft parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesisand kap pa 0 p 1 left parenthesis x right parenthesis p 2 left parenthesis x right parenthesis p 3 left parenthesis x right parenthesis
bold italic zeta equals one half left parenthesis bold italic delta Superscript upper T Baseline bold upper Delta Superscript negative 1 Baseline bold italic delta minus ln StartAbsoluteValue bold upper Delta EndAbsoluteValue plus n ln 2 pi right parenthesis
b
o
ld italic zeta equals o
n
e half left parenthesis bold italic delta Superscript upper T Baseline bold upper Delta Superscript negative 1 Baseline bold italic delta minus ln StartAbsoluteValue bold upper Delta EndAbsoluteValue plus n ln 2 pi right parenthesis
Consider upper N independent n-variate Gaussian random variables with the following 
PDFs: 
p Subscri
p
t i ot
a
 
B
a
seline l e f t  p
arenthesis bold italic x right parenthesis equals script upper N left parenthesis bold italic mu Subscript iota Baseline comma bold upper Sigma Subscript iota Baseline right parenthesis comma iota equals 1 comma 2 comma ellipsis comma upper N
where bold italic mu Subscript iota Baseline element of double struck upper R Superscript n and bold upper Sigma Subscript iota Baseline element of double struck upper R Superscript n times n are the mean vector and covariance matrix for the iotath 
Gaussian PDF, respectively. Then, the product of these upper N Gaussian PDFs is: 
p
r
oduc
t Underscrip
t 
iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals exp left bracket minus one half bold italic x Superscript upper T Baseline left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Delta Subscript iota Baseline right parenthesis bold italic x plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Baseline right parenthesis Superscript upper T Baseline bold italic x minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic zeta Subscript iota Baseline right bracket
pr od
u c
t
 Un
de
r
sc r
i p
t
 iot
a 
equ
al s 
1
 
Over
scri
pt
 
upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals exp left bracket minus one half bold italic x Superscript upper T Baseline left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Delta Subscript iota Baseline right parenthesis bold italic x plus left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Baseline right parenthesis Superscript upper T Baseline bold italic x minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic zeta Subscript iota Baseline right bracket
where bold  upp
er Delta Subscript iota Baseline equals bold upper Sigma Subscript iota Superscript negative 1 , bold  ita
li c delta Subscript iota Baseline equals bold upper Sigma Subscript iota Superscript negative 1 Baseline bold italic mu Subscript iotaand 
s
i
gma 
summation Underscript iota equals 1 Overscript upper N Endscripts bold italic zeta Subscript iota Baseline equals one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue plus n upper N ln 2 pi right parenthesis
s
i g
m
a su
mma
t ion 
Un dersc
r
i
pt i
ota equals 1 Ov
e
rscript upper N Endscripts bold italic zeta Subscript iota Baseline equals one half left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue plus n upper N ln 2 pi right parenthesis

6.5 Bayesian Fusion at the Central Station
221
By denoting M o dif
yin gAbove bold upper Delta With quotation dash equals sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Delta Subscript iota, Mo di
fy
ingA
bove delta With quotation dash equals sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota and Mo d ify
ingA bove zeta With quotation dash equals sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic zeta Subscript iota, Eq.  (6.36) can be 
rewritten as: 
S
t
artL
ayout 1st 
R
ow 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayout
St artLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSta rtLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSt
artL ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutS
t
artL
a
yout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayout
St artLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSta rtLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSt
artL ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutStartLay out 1
s
t Ro
w
 1st  Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutS
t
art
L
ayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayout
St artLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSta rtLayout 1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayoutSt
artL ayout
 
1st Row 1st Column product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis 2nd Row 1st Column equals 2nd Column exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus ModifyingAbove b o l d s y m b o l zeta With quotation dash minus bold italic zeta Subscript upper N Baseline plus bold italic zeta Subscript upper N Baseline right parenthesis 3rd Row 1st Column equals 2nd Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove b o l d s y m b o l delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis EndLayout
where exp
 
left  parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesise
xp left parenthesis bold italic zeta Subscript upper N Baseline minus ModifyingAbove b o l d s y m b o l zeta With quotation dash right parenthesis
and bold italic zeta Subscript upper N are given by: 
Sta
r
tLay out 1st Row 1st Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout¯S
t
artL
a
yout 1st Row 1st Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout
S
tartLayout 1st Row 1st Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout
¯St
artLayout 1st Row 1st Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout ¯S
tartLayout 1st Row 1st Column exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout¯Star
t
L
ayou
t 1
s t Ro
w 1st
 
C
ol
umn exp left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout ¯S
tar tL
a
y
out 
1st Ro
w
 1st Column ex
p 
left parenthesis bold italic zeta Subscript upper N Baseline minus bold italic zeta overbar right parenthesis equals 2nd Column exp left brace one half left bracket bold italic delta overbar Superscript upper T Baseline bold upper Delta overbar Superscript negative 1 Baseline bold italic delta overbar minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold italic delta Subscript iota Superscript upper T Baseline bold upper Delta Subscript iota Superscript negative 1 Baseline bold italic delta Subscript iota Baseline 2nd Row 1st Column Blank 2nd Column minus left parenthesis ln StartAbsoluteValue bold upper Delta overbar EndAbsoluteValue minus sigma summation Underscript iota equals 1 Overscript upper N Endscripts ln StartAbsoluteValue bold upper Delta Subscript iota Baseline EndAbsoluteValue right parenthesis plus n left parenthesis 1 minus upper N right parenthesis ln 2 pi right bracket right brace EndLayout
bold  italic zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesis
b
old italic zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesis
bo
ld italic zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesisb
old italic zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesisbold i
talic zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesisb
ol d itali
c
 zeta Subscript upper N Baseline equals one half left parenthesis ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash Superscript negative 1 Baseline ModifyingAbove bold italic delta With quotation dash minus ln StartAbsoluteValue ModifyingAbove bold upper Delta With quotation dash EndAbsoluteValue plus n ln 2 pi right parenthesis
Observing Eqs. (6.31) and (6.38), it can be concluded that the product of upper N
multivariate Gaussian PDFs is also a Gaussian function over bold italic x. Again, it is noted 
that Eq. (6.38) is not a PDF, because it does not have the correct normalization. Then, 
a normalizing constant kappa 1 is considered, such that integrating the right-hand side over 
the parameter space yields unity: 
p
r
oduc
t Underscri
p
t
 iot
a equals 1 Ov
e
rscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis proportional to kappa 1 product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals kappa 1 exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis
pr oduct Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis proportional to kappa 1 product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals kappa 1 exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesispro duct Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis proportional to kappa 1 product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals kappa 1 exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesispr
oduc t Und
e
rscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis proportional to kappa 1 product Underscript iota equals 1 Overscript upper N Endscripts p Subscript iota Baseline left parenthesis bold italic x right parenthesis equals kappa 1 exp left parenthesis minus one half bold italic x Superscript upper T Baseline ModifyingAbove bold upper Delta With quotation dash bold italic x plus ModifyingAbove bold italic delta With quotation dash Superscript upper T Baseline bold italic x minus bold italic zeta Subscript upper N Baseline right parenthesis
Comparing Eqs. (6.31) and (6.41), it is concluded that after normalizing, the 
product of upper N multivariate Gaussian PDFs is a Gaussian PDF with mean vector bold italic mu Subscript p
and covariance matrix b old upper Sigma Subscript p given as follows: 
bol d
 i
t
ali
c mu
 
Subs
c
r
ipt
 p B
as el
ine equals left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline bold italic mu Subscript iota
b ol d
 u
p
per
 Sig
m
a Su
bscript p Baseline equals left parenthesis sigma summation Underscript iota equals 1 Overscript upper N Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline right parenthesis Superscript negative 1

222
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Example In this example, consider the PDFs of bivariate Gaussian random vectors 
given by: 
p Subscri
p
t i ot
a
 
B
a
seline left parenthesis bold italic x right parenthesis tilde script upper N left parenthesis bold italic mu Subscript iota Baseline comma bold upper Sigma Subscript iota Baseline right parenthesis comma iota equals 1 comma 2
where bol d italic mu 1 equals left bracket negative 0.6 comma negative 0.5 right bracket Superscript upper T and bol d italic mu 2 equals left bracket 2.6 comma 2 right bracket Superscript upper T, and the covariance matrices are 
given by:
bol d
 
uppe r Sig
ma 1
 eq
uals Start 2 By 2 Matrix 1st Row 1st Column 8.3 2nd Column negative 3.5 2nd Row 1st Column negative 3.5 2nd Column 2.7 EndMatrix
bol d
 upp er S
igm a 2
 equals Start 2 By 2 Matrix 1st Row 1st Column 4.3 2nd Column 4.3 2nd Row 1st Column 4.3 2nd Column 6.7 EndMatrix
By using Eqs. (6.41), (6.42) and (6.43), the normalized product of p 1 left parenthesis bold italic x right parenthesisand p 2 left parenthesis bold italic x right parenthesis
is given by: 
p 1 left parenthe
sis
 
b old italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis proportional to kappa 1 StartFraction exp left bracket minus one half left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis Superscript upper T Baseline bold upper Sigma Subscript p Superscript negative 1 Baseline left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis right bracket Over left parenthesis 2 pi right parenthesis Superscript negative 1 Baseline StartAbsoluteValue bold upper Sigma Subscript p Baseline EndAbsoluteValue Superscript negative 1 divided by 2 Baseline EndFraction
p
 
1 left
 paren
t
h
es is b
old italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis proportional to kappa 1 StartFraction exp left bracket minus one half left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis Superscript upper T Baseline bold upper Sigma Subscript p Superscript negative 1 Baseline left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis right bracket Over left parenthesis 2 pi right parenthesis Superscript negative 1 Baseline StartAbsoluteValue bold upper Sigma Subscript p Baseline EndAbsoluteValue Superscript negative 1 divided by 2 Baseline EndFraction
p 1 left p a
renthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis proportional to kappa 1 StartFraction exp left bracket minus one half left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis Superscript upper T Baseline bold upper Sigma Subscript p Superscript negative 1 Baseline left parenthesis bold italic x minus bold italic mu Subscript p Baseline right parenthesis right bracket Over left parenthesis 2 pi right parenthesis Superscript negative 1 Baseline StartAbsoluteValue bold upper Sigma Subscript p Baseline EndAbsoluteValue Superscript negative 1 divided by 2 Baseline EndFraction
where kappa 1 is a normalizing constant; and bold italic mu Subscript p and b old upper Sigma Subscript p are calculated as follows: 
Sta r
t L
a
you
t 1s
t
 Ro
w
 
1st
 Col
um n b
o
ld
 ita lic m
u Su
bsc
ript
 
p  Ba
seli
ne 
equ
als 2nd
 
Co
lumn  left
 par
ent
hesis sig
ma s
u
m
m ati
on U
nde
rsc
ript iot
a
 e
q
u
als 1
 Over
s
cript 2 Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline sigma summation Underscript iota equals 1 Overscript 2 Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline bold italic mu Subscript iota Baseline 2nd Row 1st Column equals 2nd Column left parenthesis Start 2 By 2 Matrix 1st Row 1st Column 8.3 2nd Column negative 3.5 2nd Row 1st Column negative 3.5 2nd Column 2.7 EndMatrix Superscript negative 1 Baseline plus Start 2 By 2 Matrix 1st Row 1st Column 4.3 2nd Column 4.3 2nd Row 1st Column 4.3 2nd Column 6.7 EndMatrix Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline 3rd Row 1st Column Blank 2nd Column times left parenthesis Start 2 By 2 Matrix 1st Row 1st Column 8.3 2nd Column negative 3.5 2nd Row 1st Column negative 3.5 2nd Column 2.7 EndMatrix Superscript negative 1 Baseline StartBinomialOrMatrix negative 0.6 Choose negative 0.5 EndBinomialOrMatrix plus Start 2 By 2 Matrix 1st Row 1st Column 4.3 2nd Column 4.3 2nd Row 1st Column 4.3 2nd Column 6.7 EndMatrix Superscript negative 1 Baseline StartBinomialOrMatrix 2.6 Choose 2 EndBinomialOrMatrix right parenthesis 4th Row 1st Column equals 2nd Column StartBinomialOrMatrix 0.51 Choose negative 0.67 EndBinomialOrMatrix EndLayout period
S ta r
t L
a
you
t 1s
t
 Row
 
1s
t Co lumn 
bold
 up
per 
S
i gma
 Sub
scr
ipt
 p Base
l
i ne e
quals 
2nd 
Colu
mn left parenthesis sigma summation Underscript iota equals 1 Overscript 2 Endscripts bold upper Sigma Subscript iota Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline 2nd Row 1st Column equals 2nd Column left parenthesis Start 2 By 2 Matrix 1st Row 1st Column 8.3 2nd Column negative 3.5 2nd Row 1st Column negative 3.5 2nd Column 2.7 EndMatrix Superscript negative 1 Baseline plus Start 2 By 2 Matrix 1st Row 1st Column 4.3 2nd Column 4.3 2nd Row 1st Column 4.3 2nd Column 6.7 EndMatrix Superscript negative 1 Baseline right parenthesis Superscript negative 1 Baseline 3rd Row 1st Column equals 2nd Column Start 2 By 2 Matrix 1st Row 1st Column 1.10 2nd Column 0.007 2nd Row 1st Column 0.07 2nd Column 0.80 EndMatrix EndLayout

6.5 Bayesian Fusion at the Central Station
223
Fig. 6.7 Probability density functions p 1 left parenthesis bold italic x right parenthesisand p 2 left parenthesis bold italic x right parenthesis
Figure 6.7 shows the PDFs p 1 left parenthesis bold italic x right parenthesis and p 2 left parenthesis bold italic x right parenthesis, and Fig. 6.8 shows the PDF 
kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis. It is clearly seen that the PDF kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis concentrates in a 
narrower range than any of the individual PDF p 1 left parenthesis bold italic x right parenthesisand p 2 left parenthesis bold italic x right parenthesis period
Figure 6.9 shows the contours that cover areas with 50%, 90% and 99% of prob-
abilities for the PDFs p 1 left parenthesis bold italic x right parenthesis, p 2 left parenthesis bold italic x right parenthesisand kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis, and the notation points “ 
”, 
“ 
” and “ ” represent the mean vectors of the PDFs p 1 left parenthesis bold italic x right parenthesis, p 2 left parenthesis bold italic x right parenthesisand kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis, 
respectively. It is observed that the contours of the PDF kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesisare more 
concentrated than the contours of the PDFs p 1 left parenthesis bold italic x right parenthesisand p 2 left parenthesis bold italic x right parenthesis, since the variances of 
the PDF kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesisare smaller than the PDFs p 1 left parenthesis bold italic x right parenthesisand p 2 left parenthesis bold italic x right parenthesis.
6.5.3 
Fusion of the Compressed Local Information 
It is recalled that a dual-rate strategy is utilized to mitigate the burden of data trans-
mission and management in the sensory system. Then, the fusion results of the 
compressed state vector bo ld
 italic q Subscript upper I Superscript f and the associated weighting vector bold
 italic w Subscript upper I Superscript f can be obtained 
by integrating the information from all local identiﬁcation results. Since it is far 
more efﬁcient to process directly the compressed data, only
S
tartS
et  bold i
ta l i c  q  Subscri
p
t i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline EndSet

224
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.8 Probability density function kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis
and
S
tartSe
t bold ita
li c  w  S ubscript 
i
 Superscript left parenthesis 1 right parenthesis Baseline comma bold italic w Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic w Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline EndSet
are required to be transmitted to the central station for 
fusion. 
According to the Bayes’ theorem, the posterior PDF of bo ld
 italic q Subscript upper I Superscript f at the upper Ith central time 
step given the data
S
tartS
et  bold i
ta l i c  q  Subscri
p
t i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline EndSet
transmitted from all sensor nodes in the 
network can be expressed as follows: 
p
 
le ft
 p arenth
es is bold
 i t a l i c  q Subsc
r
i
pt
 
u
p er
 
I
 
S
upers
cr ipt f B
as e l i n e  vertica
l 
bar  b
o
ld italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis equals StartFraction p left parenthesis bold italic q Subscript upper I Superscript f Baseline right parenthesis p left parenthesis bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis Over p left parenthesis bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis EndFraction
p
 
left 
pa renthes
is  b o l d  italic 
q
 
Subscript upper I Superscript f Baseline vertical bar bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis equals StartFraction p left parenthesis bold italic q Subscript upper I Superscript f Baseline right parenthesis p left parenthesis bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis Over p left parenthesis bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis EndFraction
where p
 
le ft
 
parenthesis bold italic q Subscript upper I Superscript f Baseline right parenthesis
is the prior PDF of bo ld
 italic q Subscript upper I Superscript f and this PDF can be treated as a constant 
when no prior information is available. By assuming that the data transmitted from 
two different sensor nodes are statistically independent, the likelihood function 
p
 
left 
pa renthes
is  b o l d  italic 
q 
Sub sc
r
ipt i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis
can then be expanded as the product of the conditional 
probability densities: 
p
 
left 
pa renthes
is  b o l d  italic 
q 
Sub sc
r
i
pt
 i
 
Supe
r
s
cript
 
left pa
r
e
nthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis equals product Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts p left parenthesis bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis

6.5 Bayesian Fusion at the Central Station
225
Fig. 6.9 Contours of the PDFs p 1 left parenthesis bold italic x right parenthesis, p 2 left parenthesis bold italic x right parenthesisand kap pa 1 p 1 left parenthesis bold italic x right parenthesis p 2 left parenthesis bold italic x right parenthesis
where each of the conditional probability density is given by: 
p
 
left 
p
arent he
s
i
s bold i talic  q Subscript i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction left parenthesis 2 upper N Super Subscript m Superscript plus upper N Super Subscript theta Superscript right parenthesis Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p
 left pa
ren
the
s is bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction left parenthesis 2 upper N Super Subscript m Superscript plus upper N Super Subscript theta Superscript right parenthesis Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p lef
t
 parenthesis bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction left parenthesis 2 upper N Super Subscript m Superscript plus upper N Super Subscript theta Superscript right parenthesis Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p
 
le ft
 p arenthe
s
is 
bold 
ita
lic 
q Su
bs cript i
 
Su
perscript left parenthesis s right parenthesis Baseline vertical bar bold italic q Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction left parenthesis 2 upper N Super Subscript m Superscript plus upper N Super Subscript theta Superscript right parenthesis Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic q Subscript upper I Superscript f Baseline minus bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
where bold 
upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis is the covariance matrix of the compressed state vector bold 
italic q Subscript i Superscript left parenthesis s right parenthesis , and it can 
be formed by using the transmitted weighting vector bold i
talic w Subscript i Superscript left parenthesis s right parenthesis
in Eq. (6.20):
bold 
uppe r 
Si
gma
 
S
u
bscri
pt 
w
 
c
o
m
m
a
 i Su
per
s
cr
i
p
t lef
t pare
nt
hes
i
s s right parenthesis Baseline equals Start 3 By 3 Matrix 1st Row 1st Column bold upper Lamda left parenthesis bold upper Sigma Subscript u comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis 2nd Column bold 0 3rd Column bold 0 2nd Row 1st Column bold 0 2nd Column bold upper Lamda left parenthesis bold upper Sigma Subscript v comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis 3rd Column bold 0 3rd Row 1st Column bold 0 2nd Column bold 0 3rd Column bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis EndMatrix
where bold upper Lamda left parenthesis bold upper Sigma right parenthesisgives a diagonal matrix with the elements being the diagonal elements 
of the matrix bold upper Sigma. It is noted that the matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis can be formed by using the last 
group of components in bold i
talic w Subscript i Superscript left parenthesis s right parenthesis
from the sensor nodes. 
As a result, the posterior PDF of bo ld
 italic q Subscript upper I Superscript f can be expressed as follows:

226
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
S
t
ar tL
ay out 1s
t Row 1st
 C o l u m n  Blank 2
n
d
 Column 
p 
le
ft parenthesis bold italic q Subscript upper I Superscript f Baseline vertical bar bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals kappa 0 exp left brace minus one half bold italic q Subscript upper I Superscript f upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic q Subscript upper I Superscript f Baseline plus left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript upper T Baseline bold italic q Subscript upper I Superscript f Baseline minus zeta right brace EndLayout
Star tL ay
ou
t 
1
st 
R
ow 1s
t C
olum
n Bl
an k
 2n
d
 Co
l
umn p
 le
ft p
arent
h
esi
s bo
ld  ita
li
c 
q 
Subscript upper I Superscript f Baseline vertical bar bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column Blank 2nd Column equals kappa 0 exp left brace minus one half bold italic q Subscript upper I Superscript f upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic q Subscript upper I Superscript f Baseline plus left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript upper T Baseline bold italic q Subscript upper I Superscript f Baseline minus zeta right brace EndLayout
where kappa 0 is a normalizing constant and it is immaterial to the posterior PDF; zeta is 
also a constant given by: 
StartLayout 1st Row 1st Column zeta equals 2nd Column one half left brace left parenthesis 2 upper N Subscript m Baseline plus upper N Subscript theta Baseline right parenthesis ln 2 pi minus sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts ln StartAbsoluteValue left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline EndAbsoluteValue 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left bracket left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript upper T Baseline bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline left bracket left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket right brace EndLayout
S
t
artLa yout 1st R ow 1s
t 
C
olum
n 
zeta
 
equal
s 2
nd Colu
mn
 o
n
e h
al
f lef
t b
race
 left
 
pa
renth
esi
s 
2 upp
er 
N Su
bscri
p
t 
m Baseline plus upper N Subscript theta Baseline right parenthesis ln 2 pi minus sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts ln StartAbsoluteValue left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline EndAbsoluteValue 2nd Row 1st Column Blank 2nd Column plus sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left bracket left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript upper T Baseline bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline left bracket left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold q Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket right brace EndLayout
Since the posterior PDF of bo ld
 italic q Subscript upper I Superscript f in Eq. (6.48) is the normalized product of upper N Subscript s Gaus-
sian PDFs, the posterior PDF p
 
le ft
 p arenth
es is bold
 i t a l i c  q Subsc
r
ipt upper I Superscript f Baseline vertical bar bold italic q Subscript i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic q Subscript i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic q Subscript i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis
is also a Gaussian PDF, 
based on the derivations in Sect. 6.5.2. Therefore, the fusion results of the compressed 
state vector bo ld
 italic q Subscript upper I Superscript f and its associated covariance matrix b ol
d upper Sigma Subscript w comma upper I Superscript f can be calculated by using 
Eqs. (6.42) and (6.43). 
On the other hand, the fusion result of the compressed state vector bo ld
 italic q Subscript upper I Superscript f can also 
be obtained by maximizing the posterior PDF and the closed-form solution for this 
optimization problem is given by: 
bo ld
 i t
a li
c
 q 
S
ubscr
ipt
 up
per 
I 
S
upe
r
scrip
t f
 Bas
eline
 
equals left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1 Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic q Subscript i Superscript left parenthesis s right parenthesis
Moreover, since the vector weights are utilized for computing the fusion results 
of the compressed displacement vector bo ld
 italic u Subscript upper I Superscript f and the compressed velocity vector bold
 italic v Subscript upper I Superscript f , 
calculation of bo ld
 italic u Subscript upper I Superscript f and bold
 italic v Subscript upper I Superscript f can be simpliﬁed as follows: 
u Su
bscr i
pt j
 com
ma up
per I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
u Subs
cript j comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
u Su
bscr
ipt j comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
u Subs
crip
t j comma u p p e r  I 
Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
v Su
bscript j
 min
us u
pper 
N Sub Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
v Subs
cript j minus upper N Sub Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
v Su
bscr
ipt j minus upper N Sub Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
v Subs
crip
t
 j  minu s upper N Su b  S u bscr
ipt m Subscript comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction q Subscript j comma i Superscript left parenthesis s right parenthesis Baseline Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
The fusion result for the model parameter vector bold
 italic theta Subscript upper I Superscript f is calculated as follows:

6.5 Bayesian Fusion at the Central Station
227
bold
 i t
a li
c
 th
e
ta Su
bsc
rip
t up
pe
r
 I 
S
upers
cri
pt f
 Basel
i
ne equals left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1 Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript i Superscript left parenthesis s right parenthesis
Moreover, the associated covariance matrix b ol
d upper Sigma Subscript w comma upper I Superscript f for bo ld
 italic q Subscript upper I Superscript f can be obtained and it is 
given by:
S ta
rtLa y
o ut
 
1st
 
Row 1
st 
Col
umn 
bo
ld
 up
p
e
r
 Sig
ma 
S
u
b
s
c
r
i
pt w
 co
m
ma
 
u
p pe
r I 
Su
per
s
cript f Baseline equals 2nd Column left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript w comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1 Baseline 2nd Row 1st Column equals 2nd Column Start 3 By 3 Matrix 1st Row 1st Column bold upper Lamda left parenthesis bold italic w Subscript u comma upper I Superscript f Baseline right parenthesis 2nd Column bold 0 3rd Column bold 0 2nd Row 1st Column bold 0 2nd Column bold upper Lamda left parenthesis bold italic w Subscript v comma upper I Superscript f Baseline right parenthesis 3rd Column bold 0 3rd Row 1st Column bold 0 2nd Column bold 0 3rd Column bold upper Sigma Subscript theta comma upper I Superscript f Baseline EndMatrix EndLayout
where bold
 italic w Subscript u comma upper I Superscript f and bold
 italic w Subscript v comma upper I Superscript f represent the fusion results of the compressed variance vectors 
for bo ld
 italic u Subscript upper I Superscript f and bold
 italic v Subscript upper I Superscript f , respectively, and they are given by: 
w Su
bscript  
u comma j comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
w Su
bscr
ipt u comma j comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
w Subs
crip
t u comma j  c o m ma 
upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals 1 comma 2 comma ellipsis comma upper N Subscript m Baseline
w Su
bscript v c o
mma j minus upper N Sub Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
w Su
bscr
ipt v comma j minus upper N Sub Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
w Subs
crip
t v comma  j minus  upp e r  N  Sub
 Subscript m Subscript comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over w Subscript j comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma j equals upper N Subscript m Baseline plus 1 comma upper N Subscript m Baseline plus 2 comma ellipsis comma 2 upper N Subscript m Baseline
Moreover, the fusion result of the covariance matrix for the model parameter vector 
bold
 italic theta Subscript upper I Superscript f can be obtained as:
b ol
d up p
e r 
S
igm
a
 Subs
cri
pt 
thet
a comma upper I Superscript f Baseline equals left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1
Comparing Eqs. (6.42) and (6.50), the obtained optimal fusion result in Eq. (6.50) 
utilizes the information from uper N Subscript s sensor nodes, and it is the same as the mean of the 
Gaussian PDF which is the normalized product of the uper N Subscript s Gaussian PDFs. Similarly, 
comparing Eqs. (6.43) and (6.54), the covariance matrix of the fusion result bo ld
 italic q Subscript upper I Superscript f is 
the covariance matrix of the Gaussian PDF which is the normalized product of uper N Subscript s
Gaussian PDFs. 
In addition, according to Eq. (6.50), the fusion result bo ld
 italic q Subscript upper I Superscript f is a weighted average 
of the compressed state vector from all sensor nodes in the network. It utilizes the 
information from all sensors to reduce the posterior uncertainty of the fusion results. 
Then, bo ld
 italic q Subscript upper I Superscript f and bold
 italic w Subscript upper I Superscript f are sent back to the sensor nodes to update the local estimation 
results.

228
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
6.6 
Illustrative Examples 
6.6.1 
Example 1: Forty-Story Building 
This ﬁrst application is concerned with a forty-story building shown in Fig. 6.10. The  
building has uniformly distributed ﬂoor mass and interstory stiffness over its height. 
The stiffness to mass ratio is assumed to be 1680 s−2, and hence the fundamental 
frequency of the building is 0.25 Hz. Rayleigh damping model is considered, i.e., bo ld
 upper C equals alpha bold upper M plus beta bold upper K, and the damping coefﬁcients are given by alpha equals 0.024 s−1 and beta equals 0.003 s, 
so that the damping ratios are 1% for the ﬁrst two modes. The number of substructures 
is up er  N Subscript k Baseline equals 8 and the stiffness matrix is parameterized by: bo ld
 u
pper
 K equ
als sigma summation Underscript l equals 1 Overscript 8 Endscripts theta Subscript k Superscript left parenthesis l right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis l right parenthesis bo
ld upper K equals sigma summation Underscript l equals 1 Overscript 8 Endscripts theta Subscript k Superscript left parenthesis l right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis l right parenthesis, where 
theta 
Subscript k Superscript left parenthesis l right parenthesis
and Mo
difyingAbove bold upper K With quotation dash Superscript left parenthesis l right parenthesisare the stiffness parameter and stiffness matrix of the lth substructure, 
respectively. Speciﬁcally, theta 
Subscript k Superscript left parenthesis 1 right parenthesis
corresponds to the lowest story; theta 
Subscript k Superscript left parenthesis 2 right parenthesis
corresponds to the 
second story; theta 
Subscript k Superscript left parenthesis 3 right parenthesis
corresponds to the third story; theta 
Subscript k Superscript left parenthesis 4 right parenthesis
corresponds to the fourth to ﬁfth 
stories; theta 
Subscript k Superscript left parenthesis 5 right parenthesis
corresponds to the sixth to tenth stories; theta 
Subscript k Superscript left parenthesis 6 right parenthesis , theta 
Subscript k Superscript left parenthesis 7 right parenthesis
and theta 
Subscript k Superscript left parenthesis 8 right parenthesis
correspond to 
every 10 stories for the rest of the structure. The stiffness matrix was parameterized 
based on the fact that the lower stories are more prone to damage due to larger shear 
forces. As a result, the number of uncertain model parameters is upp er N Subscript theta Baseline equals 10 including 
eight stiffness parameters and two damping parameters.
The building was subjected to ground excitation, modeled as zero-mean Gaussian 
white noise with spectral intensity upp er S 0  equals  1.6 times 10 Superscript negative 4 Baseline m squared divided by s cubed. The entire monitoring 
duration was 300 s. The sampling rate at the sensor nodes was r S ubscri pt s Baseline equals 250 Hz while the 
transmission/fusion rate at the central station was r S ubs cript c Baseline equals 1 Hz. In other words, each 
sensor node in the network compressed and forwarded the local estimation results 
to the central station only once a second. Sixteen wireless sensor nodes were placed 
on the 1st to 5th, 8th, 10th, 12th, 15th, 16th, 18th, 20th, 25th, 30th, 35th and 40th 
ﬂoor, and each sensor node was assigned to measure displacement and acceleration 
responses of the corresponding ﬂoor. The measurement noise was assumed to be 
zero-mean Gaussian i.i.d. and its rms was taken as 5% of the rms value of the 
corresponding noise-free response quantities. Figure 6.11 shows the displacement 
and acceleration time histories of the sensor node placed on the top ﬂoor. The structure 
was undamaged in the ﬁrst 100 s. Then, the ﬁrst damage occurred at the 100 th  s with 
8% stiffness reduction in the ﬁrst story and the second damage occurred at the 200 th  s
with 6% stiffness reduction in the second story. In addition, the number of signiﬁcant 
modes was taken to be upp er N Subscript m Baseline equals 5. As a result, the total number of transmitted data 
for the entire monitoring duration was upper N Sub script d i s comma t o t a l Baseline equals 408 comma 000 for the online dual-rate 
distributed identiﬁcation method and it was only 17% of that in the conventional 
centralized identiﬁcation approach, which sent only the measurements to the central 
station, upper N Sub script c e n comma t o t a l Baseline equals 2 comma 400 comma 000 with a single rate of  r equals  250 Hz period
Figure 6.12 refers to the typical local estimation result of the stiffness parameters 
at the wireless sensor node on the 40th ﬂoor. In other words, the estimated parameters 
utilized only the measurements from the sensor node placed on the 40th ﬂoor. The

6.6 Illustrative Examples
229
f 
Central station 
Fig. 6.10 Forty-story building
dotted lines represent the estimated values; the solid lines represent the actual values; 
and the dashed lines represent the bounds of the 99.7% credible intervals. It is obvious 
that the local estimation result is highly ﬂuctuating and exhibits large uncertainty. 
However, it is not surprising because the sensor node only processed the data observed 
by its own. Thus, fusing the local estimation results is necessary to obtain reliable 
identiﬁcation result.

230
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.11 Measurements at the 16th sensor node
Figure 6.13 shows the fusion result of the stiffness parameters at the central station. 
The dots represent the fusion values; the solid lines represent the actual values; and 
the dashed lines represent the bounds of the 99.7% credible intervals. It is seen that 
the fusion values approached the actual values and the fusion values have much 
smaller uncertainty than the local estimation result. Moreover, an acceptably short 
time delay was involved for tracking theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 2 right parenthesis
at the damage instant, since the 
estimation was obtained using the measurements at the current and previous time 
steps. Nevertheless, the delay was slight so that the damage could be identiﬁed almost 
simultaneously.
Figure 6.14 shows the comparison between the actual and fusion values for the 
displacements and velocities of the 10th, 20th, 30th and 40th ﬂoors. The 45-degree 
line in each subplot provides the reference of perfect match. It is seen that the points 
are distributed along the line of perfect match. It indicates that the estimated structural 
responses using the presented method achieve high accuracy.
6.6.2 
Example 2: Bridge with Two Piers 
A bridge with two piers is considered in this example (Fig. 6.15). This bridge has pin 
supports at its two ends (i.e., the 1st and 13th nodes) and the bottom of the two piers

6.6 Illustrative Examples
231
Fig. 6.12 Local estimation result of the stiffness parameters at the wireless sensor node placed on 
the 40th ﬂoor

232
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.13 Fusion result of the stiffness parameters at the central station (Forty-story building)

6.6 Illustrative Examples
233
Fig. 6.14 Actual versus fusion values of the structural responses (x 10, x 20, x 30, x 40, ModifyingAbove x With dot Subscript 10, ModifyingAbove x With dot Subscript 20, ModifyingAbove x With dot Subscript 30
and ModifyingAbove x With dot Subscript 40)

234
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
1
2
3
4
5
6
7
8
9
10
11
12
13
 
14 
15 
16 
17 
18 
19 
a 
b 
c 
Central station 
Sensor node 
Fig. 6.15 Bridge model 
(i.e., the 16th and 19th nodes). It has a span of 192 m, and the length of its two piers 
is 24 m. The deck is divided into 12 components (each with 16 m) and the pier is 
divided into 3 components (each with 8 m). The deck has uniform box cross-section 
with area 1.56 m squared and weak axis moment of inertia 4.02 m Superscript 4. The two piers have the 
same circular cross-section with area 0.5  m squared. The mass density is 3780 kg slash m cubed and 
the modulus of elasticity is 2  GPa. As a result, the ﬁrst ﬁve natural frequencies are 
0.32, 0.79, 0.97, 1.09 and 1.11 Hz. The damping matrix is given by bo ld up per C equals alpha bold upper M plus beta bold upper K, 
where alpha equa ls 0.057 s Superscript negative 1 and beta equal s 0.006 s, so the damping ratios for the ﬁrst two modes 
are 2%. The components of the bridge were separated into six groups and the stiffness 
matrix was given by bo l d u
pper  K equ
als sigma summation Underscript l equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis l right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis l right parenthesis bo
ld upper K equals sigma summation Underscript l equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis l right parenthesis Baseline ModifyingAbove bold upper K With quotation dash Superscript left parenthesis l right parenthesis. Speciﬁcally, one stiffness parameter was 
assigned to every three components on the deck, and one stiffness parameter was 
assigned to each pier. 
The bridge was subjected to horizontal ground excitation, which was modeled as 
zero-mean stationary Gaussian white noise with spectral intensity 6.0 times  10 Superscript negative 5 Baseline m squared divided by s cubed. 
The entire monitoring period was 300 s. The local sampling rate was r S ubscri pt s Baseline equals 500 Hz
while the transmission/fusion rate was r S ubs cript c Baseline equals 1 Hz. The measurements included the 
horizontal acceleration responses of the 2nd–12th, 14th, 15th, 17th and 18th nodes, 
and the strain on the surface of these 15 nodes. Figures 6.16 and 6.17 show the 
measurements of the wireless sensors placed at the 7th node and 18th node of the 
bridge, respectively. Therefore, the number of wireless sensor nodes was upp er N Subscript s Baseline equals 15
and each sensor node was assigned to measure up er N Subscript c Baseline equals 2 channels of measurements. 
The measurement noise was taken to be 5% rms of the corresponding noise-free 
response quantities. The bridge was undamaged during the ﬁrst 100 s. Then, sudden 
damage with 5% stiffness reduction occurred in the deck between the left support 
and the left pier at t equals  100 s. Afterwards, the same level of damage occurred in the 
right pier of the bridge at t equals  200 s. The number of signiﬁcant modes was taken 
to be up er N Subscript m Baseline equals 6. As a result, the online dual-rate distributed identiﬁcation approach 
required forwarding upper N Sub script d i s comma t o t a l Baseline equals 306 comma 000 amount of data, whereas the conventional 
centralized identiﬁcation with single sampling rate r equals  500 Hz required transmitting 
upper N Sub script c e n comma t o t a l Baseline equals 4 comma 500 comma 000 amount of data, which was about 15 times larger than that 
in the distributed identiﬁcation.

6.6 Illustrative Examples
235
Fig. 6.16 Measurements of the wireless sensor placed at the 7th node
Figures 6.18 and 6.19 show the typical local estimation result of the stiffness 
parameters at the 7th node on the deck and at the 18th node on the pier, respectively. 
The dotted lines represent the estimated values; the solid lines represent the actual 
values; and the dashed lines represent the bounds of the 99.7% credible intervals. It is 
obvious that the local estimation result ﬂuctuates severely and exhibits high level of 
estimation uncertainty due to the limited local information. As a result, it is necessary 
to fuse the local estimation results in order to obtain reliable global estimation.
Figure 6.20 shows the global estimation result of the stiffness parameters at the 
central station. The dots represent the fusion values; the solid lines represent the actual 
values; and the dashed lines represent the bounds of the 99.7% credible intervals. It is 
seen that decent agreement between fusion values and actual values can be achieved, 
and the two damages at the deck and pier can be tracked accurately. Moreover, it is 
not surprising that after fusing the local estimation results, the estimation uncertainty 
of the fusion values is dramatically reduced. Although time delay can be observed 
in the estimation results at the damage instants, it is reasonably small.

236
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.17 Measurements of the wireless sensor placed at the 18th node
Figure 6.21 shows the comparison between the actual and fusion values for the 
displacements and velocities of three different DOFs a, b and c depicted in Fig. 6.15. 
Speciﬁcally, a represents the rotational DOF of the 6th node; b represents the vertical 
DOF of the 12th node; c represents the horizontal DOF of the 15th node of the bridge. 
The 45-degree line in each subplot provides the reference of perfect match. It is seen 
that the fusion values are distributed along the line of perfect match and it veriﬁes 
that the online dual-rate distributed identiﬁcation approach provides satisfactory 
estimation of the structural responses.
6.7 
Concluding Remarks 
An online dual-rate distributed identiﬁcation approach is presented with applications 
to structural health monitoring. Compared with the centralized identiﬁcation frame-
work, which requires transmitting all measured data to a single central processing 
unit, distributed identiﬁcation processes individually the data at the sensor nodes to 
obtain preliminary estimation results and then fuses the local results at the central 
station. Furthermore, in addition to compressing the local estimation results at the

6.7 Concluding Remarks
237
Fig. 6.18 Local estimation result of the stiffness parameters at the 7th node
sensor nodes, a dual-rate strategy including a typical sampling rate at the sensor nodes 
and a much lower transmission/fusion rate at the central station is employed. This 
arrangement signiﬁcantly reduces the amount of data transmission in the sensory 
system and computational demand at the central station. The presented approach 
provides a very useful computing framework. Speciﬁc algorithms handling asyn-
chronous data and multiple outlier-corrupted data will be presented based on the 
distributed identiﬁcation framework in the next chapter.

238
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
Fig. 6.19 Local estimation result of the stiffness parameters at the 18th node
Fig. 6.20 Fusion result of the stiffness parameters at the central station

6.7 Concluding Remarks
239
Fig. 6.21 Actual versus fusion values of the structural responses (x Subscript a, x Subscript b, x Subscript c, ModifyingAbove x With dot Subscript a, ModifyingAbove x With dot Subscript b and ModifyingAbove x With dot Subscript c)

240
6
Online Distributed Identiﬁcation for Wireless Sensor Networks
References 
Deng Z, Zhang P, Qi W, Yuan G, Liu J (2013) The accuracy comparison of multisensor covariance 
intersection fuser and three weighting fusers. Inf Fusion 14(2):177–185 
Farrar CR, James III GH (1997) System identiﬁcation from ambient vibration measurements on a 
bridge. J Sound Vib 205(1):1–18 
Gao Y, Spencer BF Jr, Ruiz-Sandoval M (2006) Distributed computing strategy for structural health 
monitoring. Struct Control Health Monit 13(1):488–507 
Huang K, Yuen KV (2019) Online dual-rate decentralized structural identiﬁcation for wireless 
sensor networks. Struct Control Health Monit 26(11):e2453 
Kalman RE (1960) A new approach to linear ﬁltering and prediction problems. J Basic Eng 82(3):35– 
45 
Kalman RE, Bucy RS (1961) New results in linear ﬁltering and prediction theory. J Basic Eng 
83:95–108 
Sirca GF Jr, Adeli H (2012) System identiﬁcation in structural engineering. Sci Iran 19(6):1355– 
1364 
Spencer BF Jr, Ruiz-Sandoval ME, Kurata N (2004) Smart sensing technology: opportunities and 
challenges. Struct Control Health Monit 11(4):349–368 
Sun SL (2004) Multi-sensor optimal information fusion Kalman ﬁlters with applications. Aerosp 
Sci Technol 8(1):57–62 
Sun SL, Deng ZL (2004) Multi-sensor optimal information fusion Kalman ﬁlter. Automatica 
40(6):1017–1023 
Wang M, Cao J, Liu M, Chen B, Xu Y, Li J (2009) Design and implementation of distributed 
algorithms for WSN-based structural health monitoring. Int J Sens Netw 5(1):11–21 
Yuen KV (2012) Updating large models for mechanical systems using incomplete modal 
measurement. Mech Syst Signal Process 28:297–308

Chapter 7 
Online Distributed Identiﬁcation 
Handling Asynchronous Data 
and Multiple Outlier-Corrupted Data 
Abstract In this chapter, two novel methods are presented to handle two typical 
challenging problems in system identiﬁcation, including asynchronous measure-
ments and multiple outlier-corrupted measurements. These two methods are built 
based on the online dual-rate distributed identiﬁcation framework elaborated in 
Chap. 6. First, due to unavoidable imperfection of data acquisition systems, the 
measurements among different channels are generally asynchronous. Furthermore, 
since the sensing systems for civil engineering structures are usually exposed to 
severe service environment, the measurements are inevitable to be corrupted with 
outliers. Effective methods in an online manner are proposed to settle these chal-
lenging issues. Regarding the ﬁrst issue of asynchronous data, since each sensor node 
uses only the data of its own in the proposed distributed identiﬁcation method, the 
local model identiﬁcation results are not affected by asynchronism of different sensor 
nodes. The proposed approach utilizes directly asynchronous data for online system 
identiﬁcation. Regarding the second issue of outlier contamination, a hierarchical 
outlier detection approach is introduced. It detects the local outliers according to the 
outlier probability of the raw observations at the sensor nodes while it detects the 
global outliers according to the outlier probability of the local estimation results. The 
proposed methods can resolve the challenging problems of asynchronous measure-
ments and multiple outlier-corrupted measurements effectively and achieve reliable 
identiﬁcation results for time-varying dynamical systems in an online manner. 
Keywords Distributed identiﬁcation · Asynchronism · Multiple outliers · Online 
estimation · Bayesian fusion 
7.1 
Introduction 
Although wireless sensor networks (WSNs) have been widely applied for various 
ﬁelds, there are still some challenging issues in their implementation. One of the 
major problems is the asynchronous data from the sensor nodes in WSNs (Bai et al. 
2018). Data acquisition is a process that involves collecting information to under-
stand the electrical or physical phenomenon using sensors, measurement device, and 
computer. A typical data acquisition system is shown in Fig. 7.1. The accelerometers
© The Author(s), under exclusive license to Springer Nature Singapore Pte Ltd. 2023 
K. Huang and K.-V. Yuen, Bayesian Real-Time System Identiﬁcation, 
https://doi.org/10.1007/978-981-99-0593-5_7 
241

242
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
measure the structural acceleration response, generating analogue voltage signals 
which are transmitted to the data acquisition hardware. The resulting analogue data 
is then digitized and subsequently recorded in a computer. Synchronization requires 
not only data recording to be started at the same time among different sensor nodes, 
but also the recorded paces to be equal. Simply recording multiple data channels on 
the same computer does not guarantee that they are synchronized. A typical WSN 
conﬁguration for data acquisition is shown in Fig. 7.2. Each sensor node in the 
network is equipped with its own local clock, which is not necessarily synchronized 
with the clocks of the other sensor nodes. More seriously, perfectly synchronized 
clocks of sensor nodes do not guarantee synchronized data because the sensor nodes 
may start sampling at different time instants due to the random variation in the sensor 
board driver, low quality of crystals and jitter effects (Nagayama and Spencer 2007; 
Li et al. 2016). In addition, data channels of the same data acquisition unit are often 
synchronized but this may not be valid for channels of different units. For example, 
the three data channels of a smart wireless triaxial accelerometer are synchronized 
but they may be asynchronous with those measured from other smart wireless sensors 
in the network. Asynchronism generally leads to signiﬁcant error in system identiﬁ-
cation results (Zhu and Au 2017; Fu et al.  2021). Due to its importance, synchronism 
of wireless sensor nodes has been extensively studied over the last two decades. 
Pioneer works based on time synchronization protocols have been proposed for 
clock synchronization only (Su and Akyildiz 2005; He et al.  2005). Then, there have 
been increasing investigations on modeling and quantifying the time shift which is 
used to characterize the asynchronism, so as to realize synchronized measurements 
of sensor nodes for system identiﬁcation purpose (Lei et al. 2005; Maes et al. 2016; 
Dragos et al. 2018). However, existing methods based on asynchronous data of WSNs 
focused on system identiﬁcation in an ofﬂine manner. In the following example, the 
performance of extended Kalman ﬁlter (EKF) is evaluated by using asynchronous 
measurements. 
Example Performance of EKF with asynchronous measurements 
Consider a simple dynamical system with 2 degrees of freedom (DOFs) shown 
in Fig. 7.3. The mass and spring constants are taken to be m 1  equa ls  1.0 k gand k 1  e
quals  1000 k upper N divided by normal m, respectively. The equation of motion is given by:
Fig. 7.1 Typical data acquisition system

7.1 Introduction
243
Fig. 7.2 Typical WSN conﬁguration for data acquisition
Fig. 7.3 Dynamical system 
with 2 DOFs 
bold upper M ModifyingAbove bo ld 
italic x With two dots left parenthesis t right parenthesis plus bold upper C ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bo ld italic x equals left bracket x 1 comma x 2 right bracket Superscript normal upper T is the nodal displacement vector; bo ld upper M equals m 1 bold upper I 2 is the mass matrix 
with bold upper I 2 being the 2 times 2 identity matrix; and bold upper K is the stiffness matrix given by: 
bo ld uppe
r  K  eq
ua l
s
 theta Subscript i Baseline k 1 Start 2 By 2 Matrix 1st Row 1st Column 2 2nd Column negative 1 2nd Row 1st Column negative 1 2nd Column 1 EndMatrix
where theta Subscript i is the stiffness parameter at the i t h time step. For the actual structure, the ta Subscript i Baseline equals 1
and the fundamental frequency of the system is 3.11 Hz. The damping matrix bold upper C is: 
bo ld up per 
C equals alpha bold upper M plus beta bold upper K
where alpha equals 0.283 normal s Superscript negative 1 and beta equal s 2.828  times 10 Superscript negative 4 Baseline normal s. The excitation distribution matrix bold upper T
is:

244
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
bo l d upper 
T equals left bracket 0 comma 1 right bracket Superscript normal upper T
Deﬁne the model parameter vector bold italic theta left parenthesis t right parenthesisas follows: 
bold italic t heta  left paren
thesis t right parenthesis identical to left bracket theta Subscript i Baseline comma alpha Subscript i Baseline comma beta Subscript i Baseline right bracket Superscript normal upper T Baseline element of double struck upper R cubed
where alpha Subscript i and beta Subscript i are the values of the damping coefﬁcients alphaand betain Eq. (7.3) at the  
i t h time step. Then, the augmented state vector bold italic y left parenthesis t right parenthesisis readily obtained: 
bold i
t
alic y l eft par enthesis  t right
 parenthesis identical to Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T 3rd Column comma bold italic theta left parenthesis t right parenthesis Superscript normal upper T Baseline EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript 7
Then, Eq. (7.1) can be converted to the following state-space representation: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where g left parenthesis period comma period semicolon period right parenthesisrepresents the nonlinear state-space function. 
The excitation bold italic f is a stationary zero-mean Gaussian white noise with spectral 
intensity up er  S 0  equals 6.0 times 10 Superscript negative 3 normal m squared divided by normal s cubed. It is assumed that discrete-time acceleration 
responses of the two DOFs are observed and thus the observation equation is given 
by: 
bol d i
t
al
i
c z Sub sc ript i B a s
eline equals h left parenthesis bold italic y Subscript i Baseline right parenthesis plus bold italic n Subscript i Baseline comma i equals 1 comma 2 comma ellipsis
where bol d italic z Subscript i Baseline element of double struck upper R squared is the noise-corrupted acceleration measurements at the ith time 
step; bol d italic y Subscript i Baseline equals bold italic y left parenthesis i normal upper Delta t right parenthesis, bo ld  i ta lic f Subscript i Baseline equals bold italic f left parenthesis i normal upper Delta t right parenthesis, where normal upper Delta t is the sampling time step; h left parenthesis dot right parenthesisdeﬁnes 
the observation quantities; and bold italic n Subscript i represents the measurement noise at the ith time 
step. The measurement noise is modeled as Gaussian independent and identically 
distributed (i.i.d.) process with zero mean and the rms of the measurement noise 
was taken to be 5% rms of the corresponding noise-free acceleration responses. The 
accelerations are measured with a sampling time step of 0.0025 normal s for 100 normal s. 
Two measurement sets are utilized to demonstrate the performance of EKF with 
asynchronous measurements. In particular, Case 1 uses the ﬁrst measurement set, in 
which the measurement of the 2nd DOF has 0.0025 normal s time delay compared with the 
measurement of the 1st DOF; Case 2 uses the second measurement set, in which the 
measurement of the 2nd DOF has 0.0250 normal s time delay compared with the measure-
ment of the 1st DOF. It is noted that the excitation is unknown and the time delay of 
the measurements in Case 2 is 10 times that of the Case 1. 
Figure 7.4 shows the estimation results of the model parameters for the two cases 
and Fig. 7.5 shows the absolute estimation error (AEE) between the actual model 
parameters and the estimations for the two cases. It is obvious that EKF performs 
poorly on estimating the model parameters. Although asynchronism between the 
measurements of the 1st and 2nd DOFs in Case 1 is very small (only 0.0025 normal s), EKF 
provides biased estimations. In Case 2, the estimations are divergent due to the large 
asynchronism of the measurements. It is concluded that the performance of EKF is

7.1 Introduction
245
sensitive to asynchronous measurements. In addition, asynchronous measurements 
may induce divergence problems in EKF. 
On the other hand, another challenging issue for application of WSN is on the data 
quality for reliable subsequent analysis and system identiﬁcation. The quality of data 
acquired by WSNs is often affected by noise, error, and events (Zhang et al. 2010; 
Gupta et al. 2013; Mu and Yuen 2015; Aggarwal 2017). WSNs are battery powered 
so their performance deteriorates as power dwindles. As a result, it is desirable to 
perform data cleansing before the raw observations are used for system identiﬁcation. 
The purpose of outlier detection is to clear and ameliorate the observed data for 
reliable and robust estimation. Compared with traditional centralized identiﬁcation 
approaches in which the entire observations are transmitted to the central station for 
processing, outlier detection for distributed identiﬁcation with WSNs is substantially 
more complicated. Depending on the data used for outlier detection, outliers may be 
either local or global (Zhang et al. 2010; Huang and Yuen 2020). Speciﬁcally, if the 
outlierness of a data point is assessed by considering a subset of data, the outlier is 
deﬁned as a local outlier. On the other hand, if the outlierness is evaluated according 
to the entire dataset, the outlier is deﬁned as a global outlier. For example, consider 
a set of acceleration measurements shown in Fig. 7.6, observed from a dynamical
Fig. 7.4 Estimation results by using EKF with asynchronous measurements

246
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Fig. 7.5 Absolute estimation error by using EKF with asynchronous measurements
system with 2 DOFs. The time duration is 2 s with sampling frequency 100 Hz. Use 
bold italic z Superscript left parenthesis 1 right parenthesis and bold italic z Superscript left parenthesis 2 right parenthesis to represent the observations from the 1st and 2nd DOF, respectively. 
The solid lines indicate the regular noisy measurements; the asterisk indicates a local 
outlier and the dotted dash line indicates the global outlier. In the top subplot, the 
outlier in bold italic z Superscript left parenthesis 1 right parenthesiscan be detected by using only bold italic z Superscript left parenthesis 1 right parenthesis, so the outlier in bold italic z Superscript left parenthesis 1 right parenthesisis considered 
as a local outlier. In the bottom subplot, the anomaly in bold italic z Superscript left parenthesis 2 right parenthesiscannot be identiﬁed by 
using only bold italic z Superscript left parenthesis 2 right parenthesis, because bold italic z Superscript left parenthesis 2 right parenthesishas the same large error in the entire time histories. Thus, 
it is necessary to integrate the information from both bold italic z Superscript left parenthesis 1 right parenthesisand bold italic z Superscript left parenthesis 2 right parenthesisto recognize the 
abnormal data in bold italic z Superscript left parenthesis 2 right parenthesis. As a result, the outlier in bold italic z Superscript left parenthesis 2 right parenthesisis considered as a global outlier.
It is noticed that the real-time outlier detection method introduced in Chap. 4 can 
be employed for local outlier detection, as the outlier probability of the raw obser-
vations was assessed by using only data of the corresponding measurement channel. 
However, in distributed identiﬁcation, when sensors in the network are biased at the 
beginning of the monitoring period, the data observed by the biased sensors will have 
the same large error. The anomaly caused by the biased sensors cannot be detected 
by using only the information from the single measurement channel. As a result, 
additional treatment should be considered for removing the anomalous data due to 
biased sensors.

7.2 Online Distributed Identiﬁcation Framework
247
Fig. 7.6 Schematic diagram of local outlier and global outlier
In Chap. 6, an online distributed system identiﬁcation framework was introduced. 
In this framework, the raw observations are processed individually to obtain the 
preliminary identiﬁcation results at each sensor node. Then the preliminary local 
estimation results are compressed before transmitting to the central station, where 
Bayesian fusion algorithm is utilized to integrate the compressed local identiﬁcation 
results to obtain global estimation. In this chapter, algorithms for handling asyn-
chronous measurements and multiple-outlier corrupted measurements are developed 
based on this online distributed identiﬁcation framework. However, the data used for 
compression, transmission and fusion in the proposed algorithms are different from 
the ones in Chap. 6. As a result, the presentation for online dual-rate distributed 
identiﬁcation framework will be brieﬂy revisited and the transmitted data between 
the sensor nodes and the central station will be elaborated. 
7.2 
Online Distributed Identiﬁcation Framework 
7.2.1 
Local Identiﬁcation at the Sensor Nodes 
Consider a dynamical system with uper N Subscript d DOFs and its equation of motion:

248
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
bold upper M ModifyingAbove bold italic x Wi th  tw
o dots left parenthesis t right parenthesis plus bold upper C left bracket bold italic theta Subscript c Baseline left parenthesis t right parenthesis right bracket ModifyingAbove bold italic x With dot left parenthesis t right parenthesis plus bold upper K left bracket bold italic theta Subscript k Baseline left parenthesis t right parenthesis right bracket bold italic x left parenthesis t right parenthesis equals bold upper T bold italic f left parenthesis t right parenthesis
where bold upper M, bold upper C and bold upper K are the mass, damping and stiffness matrix of the system, respec-
tively; the stiffness and damping matrix are parameterized with possibly time-varying 
model parameters bold it
a
lic theta left pa ren thesis t right parenthesis identical to Start 1 By 2 Matrix 1st Row 1st Column bold italic theta Subscript k Baseline left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column bold italic theta Subscript c Baseline left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript theta; bold italic f is the excitation applied to the 
system and bold upper T is the inﬂuence matrix associated with bold italic f . Deﬁne an augmented state 
vector bold i
t
alic y l eft parenthesis  t right parenthesis equals Start 1 By 3 Matrix 1st Row 1st Column bold italic x left parenthesis t right parenthesis Superscript normal upper T Baseline comma 2nd Column ModifyingAbove bold italic x With dot left parenthesis t right parenthesis Superscript normal upper T Baseline comma 3rd Column bold italic theta left parenthesis t right parenthesis Superscript normal upper T EndMatrix Superscript normal upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript d plus upper N Super Subscript theta composed of the displacement, 
velocity and unknown model parameter vector. Then, the state-space representation 
of the dynamical system is given as follows: 
ModifyingAbove bold  italic y W
ith dot left parenthesis t right parenthesis equals g left parenthesis bold italic y left parenthesis t right parenthesis comma bold italic f left parenthesis t right parenthesis semicolon bold italic theta left parenthesis t right parenthesis right parenthesis
where g left pa r enthesis period comma period semicolon comma right parenthesisrepresents the nonlinear state-space function that characterizes the 
underlying dynamical system. 
Discrete-time response measurements sampled at the sampling rate rsSubscript s are acquired 
by uper N Subscript s disparate wireless sensor nodes and each wireless sensor node has uper N Subscript c channels 
of measurements at its location. The corresponding sampling time step is:
norm al upp
er Delta t Subscript s Baseline equals 1 divided by r Subscript s
The discrete-time measurement bold 
it
alic z Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript c for the s t h sensor node is given by: 
bold 
it
alicsz 
Su
b
script 
i Su pe rscript  l e ft sp arenthe s i s  s r
ight parenthesis Baseline equals h Superscript left parenthesis s right parenthesis Baseline left parenthesis bold italic y Subscript i Baseline right parenthesis plus bold italic n Subscript i Superscript left parenthesis s right parenthesis Baseline comma i equals 1 comma 2 comma ellipsis semicolon s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline
where bold 
it
al icsz Subscript i Superscript left parenthesis s right parenthesis Baseline identical to bold italic z Superscript left parenthesis s right parenthesis Baseline left parenthesis i normal upper Delta t Subscript s Baseline right parenthesisis the noise-corrupted measurement at the i t h time step; 
h Superscript left parenthesis s right parenthesis Baseline left parenthesis dot right parenthesisdeﬁnes the observation quantities for the s t h sensor node; bold 
italic n Subscript i Superscript left parenthesis s right parenthesis
represents the 
measurement noise of the s t h sensor node at the i t h time step and the measurement 
noise is modeled as Gaussian independent and identically distributed (i.i.d.) process 
with zero mean and covariance matrix bold 
up
per Sigma Subscript n Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript c Superscript times upper N Super Subscript c. 
By using the EKF, the locally updated state vector can be obtained recursively 
and it is denoted as: 
bold 
ital i
c
 ysSub
scri pt i vert
ical  bar i Su
per
scr
ipt left p
arenthesis s right parenthesis Baseline equals left bracket bold italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline comma ModifyingAbove bold italic x With bold dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis upper T Baseline right bracket Superscript upper T Baseline element of double struck upper R Superscript 2 upper N Super Subscript d plus upper N Super Subscript theta
where bold 
italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis , Modify
ingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis represent the updated displacement, velocity and model 
parameter vector, respectively. In addition, the associated covariance matrix for 
bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis is denoted as bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis , and bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis represents the submatrix in bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis corresponding 
to the covariance matrix of the updated model parameter vector bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis . The detailed 
description of the EKF with local measurements is presented in Chap. 6. 
It is obvious that the local identiﬁcation results at any sensor node possess large 
posterior uncertainty due to limited information provided by the local measurements 
only. In order to obtain reliable global estimation, it is necessary to fuse these local 
identiﬁcation results at the central station. However, if all the local identiﬁcation

7.2 Online Distributed Identiﬁcation Framework
249
results in bold 
italic y Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis are transmitted to the central station, a crucial transmission 
burden will arise. It easily exceeds the bandwidth and power requirement limit of the 
sensor network. Moreover, the displacement component bold 
italic x Subscript i vertical bar i Superscript left parenthesis s right parenthesis and the velocity compo-
nent Modify
ingAbove bold italic x With dot Subscript i vertical bar i Superscript left parenthesis s right parenthesis in the estimation results for different sensor nodes have to be synchronous 
for fusion. Considering the above issues, only the updated model parameter vector 
bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis and the compressed information of the associated covariance matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis will 
be transmitted to the central station for fusion. 
7.2.2 
Bayesian Fusion at the Central Station 
The fused model parameter vector bold
 italic theta Subscript upper I Superscript f and its associated covariance matrixb ol
d upper Sigma Subscript theta comma upper I Superscript f can be 
obtained at i equals upper I r Subscript s Baseline divided by r Subscript c to integrate the information from all local model identiﬁcation 
results. According to the Bayes’ theorem, the posterior probability density function 
(PDF) of the fused model parameter vector bold
 italic theta Subscript upper I Superscript f at the upper I t h central time step given 
the transmitted local model identiﬁcation results
S
tartSe
t bo ld itali
c th e t a  S ubscript 
i v
ertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline EndSet
from all the 
sensor nodes is expressed as: 
p
 
left
 p arenthe
sis bold ita
lic t h e t a  Subscrip
t u
p
pe
r
 
I Su
p
e
r
s
cript 
f Ba seline v
erti c a l  b ar bold i
tali c the
t
a Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis equals StartFraction p left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis p left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis Over p left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis EndFraction
p
 
left p
aren thesis b
old i t a l i c theta S
ubs
c
ript upper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis equals StartFraction p left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis p left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis Over p left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis EndFraction
where p
 
left
 
parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis
is the prior PDF of the fused model parameter vector and it can be 
treated as a constant when no prior information is available. Assuming that the data 
transmitted from different sensor nodes are statistically independent, the likelihood 
function p
 
left p
aren thesis b
old i t a l i c theta S
ubsc ript 
i
 vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis
can be expanded as the product of conditional 
PDFs: 
p
 
left p
aren thesis b
old i t a l i c theta S
ubsc ript 
i
 
ve
rt
i
cal 
b
a
r isSu
per
script 
l
e
ft parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis equals product Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts p left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis
where each of the conditional PDF is given by: 
p
 
left p
are
nthesis
 
b
old italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript theta Superscript Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p
 leftspa
renth
esi
s  bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript theta Superscript Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p lef
t
 parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript theta Superscript Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
p
 
left
 p arenthes
is 
bo l
d ita
lic t
heta
 Sub
sc ript i v
ert
ic
al bar i Superscript left parenthesis s right parenthesis Baseline vertical bar bold italic theta Subscript upper I Superscript f Baseline right parenthesis equals left parenthesis 2 pi right parenthesis Superscript minus StartFraction upper N Super Subscript theta Superscript Over 2 EndFraction Baseline StartAbsoluteValue bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue Superscript negative one half Baseline exp left bracket minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript normal upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket
Therefore, the posterior PDF of the fused model parameter vector bold
 italic theta Subscript upper I Superscript f is readily 
obtained as follows: 
S
t
artL
ay out 1st
 Row  1st Col
umn p  2 n d  Column l
eft
 parenthesis bold italic theta Subscript upper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket 3rd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus left parenthesis sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline bold italic theta Subscript upper I Superscript f Baseline minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis Superscript upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript upper I Superscript f Baseline right bracket EndLayout

250
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
StartL
a
yout 1st Row 1st Column p 2nd Column left parenthesis bold italic theta Subscript upper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket 3rd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus left parenthesis sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline bold italic theta Subscript upper I Superscript f Baseline minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis Superscript upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript upper I Superscript f Baseline right bracket EndLayout
St
ar
t
Lay
o
ut 1
st  Row 1st
 Co
lum
n p 2
nd Co
lumn
 lef
t parenthe
sis
 b
old it
a
lic theta Subscript upper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket 3rd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus left parenthesis sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline bold italic theta Subscript upper I Superscript f Baseline minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis Superscript upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript upper I Superscript f Baseline right bracket EndLayout
St
ar
t
Lay
o
ut 1st
 Row 1
st 
Colum
n p 2n
d Co
lumn l
eft par
e
n th
e
sis
 
bold 
italic
 the
ta Sub
script
 up
per 
I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket 3rd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus left parenthesis sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline bold italic theta Subscript upper I Superscript f Baseline minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis Superscript upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript upper I Superscript f Baseline right bracket EndLayout
S
t
artL
a
you
ts
1
st 
R
ows1s
t Col
umn 
p 2n
d
 
Column left parenthesis bold italic theta Subscript upper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis 2nd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline left parenthesis bold italic theta Subscript upper I Superscript f Baseline minus bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis right bracket 3rd Row 1st Column equals 2nd Column kappa 0 exp left bracket minus one half sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline 4th Row 1st Column Blank 2nd Column plus left parenthesis sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper T Baseline bold italic theta Subscript upper I Superscript f Baseline minus one half left parenthesis bold italic theta Subscript upper I Superscript f Baseline right parenthesis Superscript upper T Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript upper I Superscript f Baseline right bracket EndLayout
where kappa 0 is a normalizing constant. 
It can be observed from Eq. (7.17) that the fused model parameter vector 
bold
 italic theta Subscript upper I Superscript f is Gaussian. The fusion results can be obtained by maximizing the posterior 
PDF p
 
left
 p arenthe
sis bold ita
lic t h e t a  Subscrip
t u
pper I Superscript f Baseline vertical bar bold italic theta Subscript i vertical bar i Superscript left parenthesis 1 right parenthesis Baseline comma bold italic theta Subscript i vertical bar i Superscript left parenthesis 2 right parenthesis Baseline comma ellipsis comma bold italic theta Subscript i vertical bar i Superscript left parenthesis upper N Super Subscript s Superscript right parenthesis Baseline right parenthesis
and the closed-form solution for this optimization 
problem can be obtained as follows: 
bold
 i t
a li
c
sth
e
tasSu
bscri
pt 
uppe
rs
I
sSu
p
erscr
ipt f
 Bas
eline 
equ
als left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1 Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis
According to Eq. (7.18), the fused model parameter vector bold
 italic theta Subscript upper I Superscript f is a weighted 
average of the updated model parameter vector estimations from all sensor nodes. 
It utilizes the information from all sensors to reduce the posterior uncertainty. The 
associated covariance matrix of the fused model parameter vector bold
 italic theta Subscript upper I Superscript f is given by:
b ol
d up p
e rs
S
igm
a
 Subs
cript
 th
eta 
comma upper I Superscript f Baseline equals left bracket sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline right bracket Superscript negative 1
7.3 
Online Distributed Identiﬁcation Using Asynchronous 
Data 
The asynchronous measurement dataset of the sth sensor node up to the ith time step 
is given by: 
upper
 D Subscrip t
 
i plu
s xi left p arenthe
sis t right  p a r e nthesi
s Sub Supe
r
script left parenthesis s right parenthesis Superscript left parenthesis s right parenthesis Baseline equals StartSet bold italic z Subscript 1 plus xi left parenthesis t right parenthesis Sub Superscript left parenthesis s right parenthesis Subscript Superscript left parenthesis s right parenthesis Baseline comma bold italic z Subscript 2 plus xi left parenthesis t right parenthesis Sub Superscript left parenthesis s right parenthesis Subscript Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma bold italic z Subscript i plus xi left parenthesis t right parenthesis Sub Superscript left parenthesis s right parenthesis Subscript Superscript left parenthesis s right parenthesis Baseline EndSet
where xi left parenthesis t right parenthesis Superscript left parenthesis s right parenthesis is the unknown time shift for the recorded measurements of the s t h
sensor node. The schematic diagram of synchronous and asynchronous measure-
ments is shown in Fig. 7.7. The measurements from the 2nd sensor are synchronous 
with the unknown input, while the remaining measurements are asynchronous with

7.3 Online Distributed Identiﬁcation Using Asynchronous Data
251
Fig. 7.7 Schematic diagram of synchronous measurements and asynchronous measurements 
the unknown input. Given the measurements upper
 D Subscript i plus xi left parenthesis t right parenthesis Sub Superscript left parenthesis s right parenthesis Superscript left parenthesis s right parenthesis, the unknown state vector bold italic y left parenthesis t right parenthesis
in Eq. (7.10) can be estimated in an online manner by using EKF. In addition, EKF 
provides not only the estimation of the states and model parameters, but also their 
associated uncertainties. Each sensor node uses its own observed data. The processing 
time step of EKF is the same as the sampling time step normal upper Delta t Subscript s and the corresponding 
sampling rate is rsSubscript s. 
Compression and extraction of bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis will be elaborated next, so that the amount 
of the transmitted data can be substantially reduced. More importantly, the locally 
updated model parameters are insensitive to asynchronism because they use infor-
mation only from the measurements of the corresponding sensor node and the central 
station. The compression result and the locally updated model parameter vector bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis
will be transmitted with the transmission rate r Subscript c, which is much lower than the 
sampling rate rsSubscript s. As a result, the data transmission burden in WSN and the heavy 
computational demand at the central station can be signiﬁcantly mitigated. In other 
words, only for every rsSubscript s Baseline divided by r Subscript c sampling time step, the local model identiﬁcation results 
will be compressed and transmitted to the central station. The local index i runs 
much faster than the central index upper I. The schematic diagram of the time index i at 
the sensor nodes and the time index upper I at the central station was shown in Fig. 6.4. 
Based on the fact that the covariance matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis of the locally updated model 
parameter vector is real and symmetric, we propose to approximate it as follows:
Start
Layout  1stsRo
w 1st Column bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline almost equals 2nd Column bold upper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis Baseline 2nd Row 1st Column equals 2nd Column sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline bold upper W Subscript m Baseline EndLayout

252
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
St
ar
t
Layo
ut 1st
 Row 
1st Column bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline almost equals 2nd Column bold upper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis Baseline 2nd Row 1st Column equals 2nd Column sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline bold upper W Subscript m Baseline EndLayout
where bold upper W Subscript m indicates the m t h basis matrix; phisSu
bscript m comma i Superscript left parenthesis s right parenthesis is the corresponding compression 
coefﬁcient of the basis matrix bold upper W Subscript m and a compression coefﬁcient vector phisSu
bscript i Superscript left parenthesis s right parenthesis
is deﬁned 
to group all the coefﬁcients of the s t h sensor node at the i t h time step: 
phisSu
bs
c
r
iptsi 
Supe r s cript
 lef t  p a r e nthes
is s 
rig
ht par
enthesis Baseline identical to left bracket phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline comma phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline comma ellipsis comma phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline right bracket Superscript normal upper T Baseline element of double struck upper R Superscript upper N Super Subscript theta
The approximation in Eq. (7.21) is interpreted as follows. The size of a symmetric 
upper N Subscript theta Baseline times upper N Subscript theta real matrix is larger than upper N Subscript theta. However, considering the heavy data transfer 
requirements, the covariance matrices are desired to be compressed to certain extent. 
As a result, upper N Subscript theta terms are suggested to be used in Eq. (7.21), and in such a way the 
variances of different model parameters can be discriminated. In addition, there is no 
requirement to match the approximated matrices with the actual ones. An alternative 
choice for the basis matrix bold upper W Subscript m is given as follows: 
bol d upper W Su bs cript m  B a s eli
ne identical to bold italic w Subscript m Baseline left parenthesis bold italic w Subscript m Baseline right parenthesis Superscript upper T Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
where
S
tartSet  b o l d it
alic w 1 comma bold italic w 2 comma ellipsis comma bold italic w Subscript upper N Sub Subscript theta Subscript Baseline EndSet
is an orthonormal basis for double struck upper R Superscript upper N Super Subscript theta Superscript times upper N Super Subscript theta and it satisﬁes the 
following:
S
tartLayou t Enl a rged 
left brac e 1st  R ow 
l
eft parenthesis bold italic w Subscript m Baseline right parenthesis Superscript normal upper T Baseline bold italic w Subscript m Sub Superscript prime Subscript Baseline equals 0 comma m not equals m Superscript prime Baseline 2nd Row left parenthesis bold italic w Subscript m Baseline right parenthesis Superscript normal upper T Baseline bold italic w Subscript m Sub Superscript prime Subscript Baseline equals 1 comma m equals m Superscript prime EndLayout
Then, it is easy to show that the basis matrix is real and symmetric and according 
to Eq. (7.24), it satisﬁes:
StartL ayout Enlarg e d le
f
t bra ce 1s
t Row
 
bold upper W Subscript m Baseline bold upper W Subscript m Sub Superscript Sub Super Superscript prime Sub Superscript Subscript Baseline equals bold 0 Subscript upper N Sub Subscript theta Subscript times upper N Sub Subscript theta Subscript Baseline comma m not equals m Superscript Super Superscript prime Superscript Baseline 2nd Row bold upper W Subscript m Baseline bold upper W Subscript m Sub Superscript Sub Super Superscript prime Sub Superscript Subscript Baseline equals bold upper W Subscript m Baseline comma m equals m Superscript prime EndLayout
It is noteworthy that those basis matrices bold upper W Subscript m, m equals 1  c o mma 2 comma ellipsis comma upper N Subscript theta Baseline, in Eqs. (7.21) 
and (7.23) are time-independent. They can be precalculated and prestored at the 
sensor nodes and the central station without transmission in the entire identiﬁcation 
process. On the other hand, the compression coefﬁcient vector phisSu
bscript i Superscript left parenthesis s right parenthesis
is time-dependent 
in order to describe the variation of the covariance matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis . Based on Eq. (7.25), 
the components of phisSu
bscript i Superscript left parenthesis s right parenthesis
can be easily calculated by multiplying the corresponding 
basis matrix on both sides of Eq. (7.21) and taking the inner product on both sides: 
phisSu
bscr i pt m c
omma i  Superscr ip t left p a r e nth
esis s right parenthesis Baseline equals left angle bracket bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline comma bold upper W Subscript m Baseline right angle bracket Subscript upper F Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
where left angle bracket bold upper A comma bold upper B right angle bracket Subscript upper F indicates the Frobenius inner product of two real matrices bold upper A and bold upper B.

7.3 Online Distributed Identiﬁcation Using Asynchronous Data
253
In addition, the inverse of bold u
pper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis can be computed efﬁciently. Equation (7.21) can 
be rewritten as follows: 
StartL
ayout 1s
t 
R
ow 1
st Col
umn bo
l
d
 italic  u p p er S
i
gm
a Subs
cript 
thet
a 
c o m
ma
 i
 verti
cal b a r
 i
 Sup
ersc ript a
ster
i
s
k l e ft pare
nthesi
s 
s rig
h
t paren t h e s is B
ase
line e
quals 2nd Column sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline bold upper W Subscript m Baseline 2nd Row 1st Column equals 2nd Column left bracket bold italic w 1 comma bold italic w 2 comma ellipsis comma bold italic w Subscript upper N Sub Subscript theta Subscript Baseline right bracket Start 4 By 4 Matrix 1st Row 1st Column phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline 2nd Column 0 3rd Column midline horizontal ellipsis 4th Column 0 2nd Row 1st Column 0 2nd Column phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline 3rd Column midline horizontal ellipsis 4th Column 0 3rd Row 1st Column vertical ellipsis 2nd Column vertical ellipsis 3rd Column down right diagonal ellipsis 4th Column vertical ellipsis 4th Row 1st Column 0 2nd Column 0 3rd Column midline horizontal ellipsis 4th Column phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndMatrix left bracket bold italic w 1 comma bold italic w 2 comma ellipsis comma bold italic w Subscript upper N Sub Subscript theta Subscript Baseline right bracket Superscript upper T Baseline 3rd Row 1st Column equals 2nd Column script upper W bold upper Lamda script upper W Superscript upper T Baseline EndLayout
where bold upper Lamda is a diagonal matrix with the diagonal elements being the elements in phisSu
bscript i Superscript left parenthesis s right parenthesis ; 
sc r ipt uppe r  W  identi c al to le ft bracket bold italic w 1 comma bold italic w 2 comma ellipsis comma bold italic w Subscript upper N Sub Subscript theta Subscript Baseline right bracket element of double struck upper R Superscript upper N Super Subscript theta Superscript times upper N Super Subscript theta is an orthogonal matrix and it satisﬁes: 
scri pt up
per W Superscript negative 1 Baseline equals script upper W Superscript normal upper T
Therefore,
l
eftspa
renth
esis bold upper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1
can be obtained as follows:
S
tartLa
yout 
1st 
Row 1st C
olumn le
ft
 p
a
rent
hesis bold upper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline equals 2nd Column script upper W bold upper Lamda Superscript negative 1 Baseline script upper W Superscript negative 1 Baseline 2nd Row 1st Column equals 2nd Column script upper W bold upper Lamda Superscript negative 1 Baseline script upper W Superscript upper T Baseline 3rd Row 1st Column equals 2nd Column sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction bold upper W Subscript m Baseline EndLayout
StartL
ayou
t 
1st Row 1st Column left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript asterisk left parenthesis s right parenthesis Baseline right parenthesis Superscript negative 1 Baseline equals 2nd Column script upper W bold upper Lamda Superscript negative 1 Baseline script upper W Superscript negative 1 Baseline 2nd Row 1st Column equals 2nd Column script upper W bold upper Lamda Superscript negative 1 Baseline script upper W Superscript upper T Baseline 3rd Row 1st Column equals 2nd Column sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction bold upper W Subscript m Baseline EndLayout
Based on the framework of online dual-rate distributed identiﬁcation, only the 
locally updated model parameter vector bold i
tali c theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript theta and the compression coefﬁcient 
vector bold i
ta
li c phi Subscript i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript upper N Super Subscript theta are transmitted to the central station with transmission rate r Subscript c. 
Then, the fused model parameter vector bold
 italic theta Subscript upper I Superscript f and its associated covariance matrix
b ol
d upper Sigma Subscript theta comma upper I Superscript f can be obtained by using Eqs. (7.18) and (7.19), respectively. Moreover, the 
fusion results can be simpliﬁed as follows: 
bold
 i ta
li
c
 the
ta
 
Subsc
ript upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts sigma summation Underscript s overTilde equals 1 Overscript upper N Subscript s Baseline Endscripts StartStartFraction 1 OverOver phi Subscript m comma i Superscript left parenthesis s overTilde right parenthesis Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction bold upper W Subscript m Baseline bold italic theta Subscript i vertical bar i Superscript left parenthesis s overTilde right parenthesis
boldsit
ali
c th
eta 
Subscript upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts sigma summation Underscript s overTilde equals 1 Overscript upper N Subscript s Baseline Endscripts StartStartFraction 1 OverOver phi Subscript m comma i Superscript left parenthesis s overTilde right parenthesis Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction bold upper W Subscript m Baseline bold italic theta Subscript i vertical bar i Superscript left parenthesis s overTilde right parenthesis
bold i
tali
c theta S
ubs
cript upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts sigma summation Underscript s overTilde equals 1 Overscript upper N Subscript s Baseline Endscripts StartStartFraction 1 OverOver phi Subscript m comma i Superscript left parenthesis s overTilde right parenthesis Baseline sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction bold upper W Subscript m Baseline bold italic theta Subscript i vertical bar i Superscript left parenthesis s overTilde right parenthesis
b ol
d up pe
r 
S
igma
 S
u
bscript theta comma upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts left parenthesis StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right parenthesis bold upper W Subscript m
bold
supp
er Sigma Subscript theta comma upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts left parenthesis StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right parenthesis bold upper W Subscript m
bold u
pper
⎞S
igm
a Subscript theta comma upper I Superscript f Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts left parenthesis StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right parenthesis bold upper W Subscript m

254
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
It is worth noting that instead of computing the inverse of matrices in Eqs. (7.18) 
and (7.19), it is only required to calculate the reciprocals of scalars in Eqs. (7.30) 
and (7.31) for obtaining the fusion results. Thus, the expressions in Eqs. (7.30) and 
(7.31) are computationally more efﬁcient than Eqs. (7.18) and (7.19). 
It is noticed that Eq. (7.31) is in the  same  fashion as Eq.  (7.21). The fused 
compression coefﬁcient vector bold
 i ta lic phi Subscript upper I Superscript f Baseline element of double struck upper R Superscript upper N Super Subscript theta for characterizing b ol
d upper Sigma Subscript theta comma upper I Superscript f can be deﬁned 
as follows: 
phi 
Su bs
cr
i
pt upper I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phi 
Subs
cript upper I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phisSu
bscr
ip
t upper I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phi 
Subs
cript upper I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phisSu
bscr
i p t  u p
per I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phi 
Subs
cript upper I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
phisSu
bscrip
t 
up
pe
r I Superscript f Baseline identical to left bracket StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 1 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript 2 comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma ellipsis comma StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over phi Subscript upper N Sub Subscript theta Subscript comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction right bracket Superscript normal upper T
Then, it is only necessary to send back to the sensor nodes the fused model 
parameter vector bold
 i talic theta Subscript upper I Superscript f Baseline element of double struck upper R Superscript upper N Super Subscript theta and the fused compression coefﬁcient vector bold
 i talic phi Subscript upper I Superscript f Baseline element of double struck upper R Superscript upper N Super Subscript theta
for updating the estimations at the sensor nodes. 
The online distributed identiﬁcation approach with asynchronous measurements 
is available and the procedure can be summarized as follows: 
At the sensor nodes, 
S1. At the initial time step i equals 0, set the initial state vector bold 
italic y Subscript 0 vertical bar 0 Superscript left parenthesis s right parenthesis and the initial 
covariance matrix bold 
upper Sigma Subscript 0 vertical bar 0 Superscript left parenthesis s right parenthesis , s equals 1  c o mma 2 comma ellipsis comma upper N Subscript s Baseline. Calculate the basis matrices bold u pp
er W S u b s cript m Baseline comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline, for compression and extraction of the covariance matrix and they are 
prestored at all sensor nodes and the central station. 
S2. Compute the updated state vector bold 
italic y Subscript 0 vertical bar 0 Superscript left parenthesis s right parenthesis and its associated covariance matrix
bold 
upper Sigma Subscript i vertical bar i Superscript left parenthesis s right parenthesis using EKF. 
S3. If i is not an integer multiple of rsSubscript s Baseline divided by r Subscript c, go back to step S2 for the next time 
step. 
Otherwise, calculate the compression coefﬁcient vector bold i
talic phi Subscript i Superscript left parenthesis s right parenthesis
using Eq. (7.26). 
Then, transmit the local model identiﬁcation results bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold i
talic phi Subscript i Superscript left parenthesis s right parenthesis
to the central station 
and go to step C1. 
At the central station, 
C1. Calculate the fused model parameter vector bold
 italic theta Subscript upper I Superscript f and its associated covariance 
matrix b ol
d upper Sigma Subscript theta comma upper I Superscript f using Eqs. (7.30) and (7.31), respectively. 
C2. Transmit bold
 italic theta Subscript upper I Superscript f and bold
 italic phi Subscript upper I Superscript f back to all sensor nodes and update the corresponding 
values. Go to step S2 for the next time step. 
7.4 
Application to Model Updating of a Sixteen-Bay Truss 
In this example, we consider a 16-bay truss with 61 bar elements and it is shown in 
Fig. 7.8. These 61 elements have uniform cross section area no rmal uppe r A equals 0.0005 normal m squared. The  
length of each horizontal and vertical bar is 2  normal m. In addition, the mass density is 
rh o equal s 7850 k g divided by normal m cubed and the modulus of elasticity is no rmal u pper E  equals 2.0 times 10 Superscript 9 Baseline upper P a. As a result, 
the natural frequencies of the ﬁrst ﬁve modes are 2.188, 2.359, 5.233, 5.586 and

7.4 Application to Model Updating of a Sixteen-Bay Truss
255
Fig. 7.8 16-bay truss 
8.338 Hz. Rayleigh damping model is assumed with Rayleigh coefﬁcients al ph
a equa ls 0.428 normal s Superscript negative 1 and beta equal s 0.002 normal s, so that the damping ratios are 3 percent sign for the ﬁrst two modes. 
The stiffness matrix of the truss is parameterized as bo l d u
pper  K equ
al s sigma summation Underscript n equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis n right parenthesis Baseline bold upper K Subscript n, where bold upper K Subscript n
is the known substructural stiffness matrix of the nth substructure. Speciﬁcally, the 
members of the truss were separated into six groups. Herein, theta 
Subscript k Superscript left parenthesis 1 right parenthesis , theta 
Subscript k Superscript left parenthesis 2 right parenthesis , theta 
Subscript k Superscript left parenthesis 3 right parenthesis , theta 
Subscript k Superscript left parenthesis 4 right parenthesis , theta 
Subscript k Superscript left parenthesis 5 right parenthesis
and theta 
Subscript k Superscript left parenthesis 6 right parenthesis
correspond to the 1st–10th, 11th–20th, 21st–30th, 31st–40th, 41st–50th and 
51st–61st elements, respectively. 
The truss was subjected to ground excitations in both horizontal and vertical 
directions: 
bo ld itali c f left parent
hesis t right parenthesis equals left bracket f Subscript h Baseline left parenthesis t right parenthesis comma f Subscript v Baseline left parenthesis t right parenthesis right bracket Superscript normal upper T
where the horizontal ground excitation bo ld italic f Subscript h and the vertical ground excitation bo ld italic f Subscript v
were modeled as zero-mean Gaussian white noise with the same spectral intensity 
6.2 times 1 0 Superscript negative 2 Baseline normal m squared divided by normal s cubed. The entire monitoring period is no rmal u pper T equals 200 normal s. The sampling rate is 
rsS ubscrip t s Baseline equals 1000 upper H z while the transmission rate is r S ubs cript c Baseline equals 1 upper H z. Wireless sensors were placed 
at ten nodes and each sensor node was associated with two channels of response 
measurements, i.e., up er N Subscript c Baseline equals 2. The sensor placement conﬁguration is listed in Table 
7.1. The ﬁrst column is the sensor node number. The second column indicates the 
location of the sensor nodes. The third column indicates the direction of the accel-
eration measurement while the last column indicates the member of the axial strain 
measurement. For example, the 1st sensor node was allocated to the 2nd node of the 
truss and it measured the horizontal acceleration of the 2nd node and the axial strain 
of the member linking truss nodes 1 and 2. In addition, the rms of the measurement 
noise was taken to be 5 percent sign rms of the corresponding noise-free response quantities.
In the ﬁrst 100 normal s, the truss was undamaged. Then, theta 
Subscript k Superscript left parenthesis 2 right parenthesis
was decreased by 5 percent sign at 
t equals  100 normal s and theta 
Subscript k Superscript left parenthesis 6 right parenthesis
was decreased by 5 percent sign at t equals  150 normal s. In addition, it was assumed 
that the measurements between any two sensors were asynchronous. In other words, 
all sensor nodes had different time shifts. In particular, the time shifts were 0.032 normal s, 
0.010 normal s, 0.019 normal s, 0.018 normal s, 0.028 normal s, 0.005 normal s, 0.024 normal s, 0.001 normal s, 0.029 normal s and 0.022 normal s for the 
ten sensor nodes in the network. These values were relative to the unmeasured input 
signal but they were unknown in the entire identiﬁcation process. It is noticed that 
the maximum time shift difference was 0.031 normal s between the 1st and 8th sensor node. 
The estimation results of the stiffness parameters by using the conventional EKF 
are shown in Fig. 7.9. The time interval left bracket 130 comma 160 right bracket normal s is magniﬁed in Fig. 7.10. The  
dotted lines represent the estimated values; the solid lines represent the actual values 
and the dashed lines represent the bounds of the 99.7% credible intervals. It is not

256
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Table 7.1 Measurements of 
the sensor nodes 
Sensor node
Location
Acceleration 
channel 
Strain channel 
1
2
2 horizontal
Member 1–2 
2
5
5 horizontal
Member 5–7 
3
8
8 horizontal
Member 8–10 
4
11
11 horizontal
Member 11–13 
5
14
14 horizontal
Member 14–16 
6
18
18 horizontal
Member 18–20 
7
21
21 horizontal
Member 21–23 
8
24
24 horizontal
Member 24–26 
9
27
27 horizontal
Member 27–29 
10
30
30 horizontal
Member 30–32
surprising to observe that the estimated stiffness parameters using the conventional 
EKF swayed wildly and they were erroneous due to the asynchronous measure-
ments transmitted from the sensor nodes. This veriﬁed that identiﬁcation using the 
conventional EKF was seriously affected by asynchronism of the measurements.
Next, estimation results by using the proposed method with asynchronous 
measurements are presented. Figure 7.11 shows the estimation results of the stiffness 
parameters obtained by using the measurements of the 10th sensor node placed at 
the 30th node of the truss. It is seen that the local estimation results of the stiffness 
parameters exhibited large uncertainty and highly ﬂuctuated since only the infor-
mation measured at the 10th sensor node was utilized. As a result, it is necessary 
to fuse the local estimation results for reliable global estimation. Nevertheless, in 
principle, these results were not affected by asynchronism because they utilized only 
the measured data from the corresponding sensor node to obtain the local estimation 
results.
Figure 7.12 shows the fused estimation results of the stiffness parameters at the 
central station. It can be observed that the identiﬁcation results were substantially 
improved by the proposed approach. The identiﬁcation results ﬂuctuated at the early 
stage of estimation due to inaccurate initial conditions. Then, the stiffness parameter 
estimations were stable and accurate after acquiring more data points, and they were 
within the 99.7% credible intervals. The time delay in parameter tracking for theta 
Subscript k Superscript left parenthesis 2 right parenthesis
and theta 
Subscript k Superscript left parenthesis 6 right parenthesis
was expected since the identiﬁcation results depended on the measurements 
at the current and previous time steps. In the period immediately after the sudden 
damages, identiﬁcation was based on data before and after the damage. Therefore, it 
took time to dilute the contribution from the data associated with the structure before 
damage. On the other hand, in practice, since the locally updated model parameters 
used only data from the corresponding sensor node and the central station, they were 
not affected by asynchronism among different sensor nodes.

7.5 Hierarchical Outlier Detection
257
Fig. 7.9 Estimation results of stiffness parameters by using the conventional EKF with asyn-
chronous measurements
7.5 
Hierarchical Outlier Detection 
In this section, a hierarchical outlier detection approach is presented. It utilizes the 
online dual-rate distributed identiﬁcation framework introduced in Sect. 7.2 and the 
transmitted data between the sensor nodes and the central station is different from 
the one in Sect. 7.3. 
The locally updated state estimation can be obtained by using EKF with the 
recorded data at the corresponding sensor nodes and the local processing rate is

258
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Fig. 7.10 Estimation results of stiffness parameters in the time interval [130, 160] s by using the 
conventional EKF
rsSubscript s. Then, only the locally updated model parameter vector bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis and the diagonal 
elements in bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis are transmitted to the central station. The diagonal elements in
bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis is denoted as: 
bold i
ta
lic v 
S
ubscr
ipt i
 
Supers
cript left parenthesis s right parenthesis Baseline identical to d i a g left parenthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis element of double struck upper R Superscript upper N Super Subscript theta

7.5 Hierarchical Outlier Detection
259
Fig. 7.11 Estimation results of stiffness parameters at the 10th sensor node
where d i 
a
 gsle
ft pa
renthesis bold upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis
gives the vector with all diagonal elements in the matrix bold 
upper Sigma Subscript theta comma i vertical bar i Superscript left parenthesis s right parenthesis . 
Therefore, the locally updated model parameter vector bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis and the extracted variance 
vector bold i
talic v Subscript i Superscript left parenthesis s right parenthesis
will be transmitted to the central station for fusion. 
At the central station, a much smaller transmission/processing rate r Subscript c is used and 
only for every rsSubscript s Baseline divided by r Subscript c sampling time steps, the local estimation results bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis and bold i
talic v Subscript i Superscript left parenthesis s right parenthesis , 
s equals 1  c o mma 2 comma ellipsis comma upper N Subscript s Baseline, will be transmitted to the central station. Then, the fused model 
parameter vector bold
 italic theta Subscript upper I Superscript f and associated variance vector bold
 italic v Subscript upper I Superscript f can be obtained by integrating 
the information from all local estimation results. 
The components of the fused model parameter vector bold
 italic theta Subscript upper I Superscript f can be obtained by using 
Eq. (7.18): 
thet
a Su b
scri
pt m
 comma
 upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subscript m comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
thet
a Su
bscript m comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subs
cr ip t m com m a  u ppe
r I Superscript f Baseline equals StartStartFraction sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
where theta 
Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis , v Subs
cript m comma i Superscript left parenthesis s right parenthesis and thet
a Subscript m comma upper I Superscript f represent the m t h component of bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis , bold i
talic v Subscript i Superscript left parenthesis s right parenthesis
and bold
 italic theta Subscript upper I Superscript f , respec-
tively. Furthermore, the components of the associated variance vector bold
 italic v Subscript upper I Superscript f can be 
obtained by using Eq. (7.19):

260
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Fig. 7.12 Estimation results of stiffness parameters at the central station (Sixteen-bay truss)
v Su
bscr i
pt m comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Su
bscr
ipt m comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Subs
crip
t m comma u p p e r  I 
Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript s equals 1 Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
The detailed derivations of the fusion results were elaborated in Sect. 7.2. 
According to Eq. (7.35), the fused model parameter vector bold
 italic theta Subscript upper I Superscript f is the weighted average 
of the model parameter vector estimations from all sensor nodes. 
In the proposed hierarchical outlier detection method, the local outliers in the raw 
measurements of the sensor nodes are ﬁrst detected using the method in Chap. 4 and 
then the local estimation results can be obtained by using EKF. However, there may 
exist anomalies in the local estimation results due to segmental outliers, e.g., due 
to sensor bias. Therefore, global outlier detection will be conducted and the global 
outliers will be excluded from fusion in Eqs. (7.35) and (7.36). Finally, only bold
 italic theta Subscript upper I Superscript f and 
bold
 italic v Subscript upper I Superscript f will be sent back to the sensor nodes to update the local identiﬁcation results.

7.5 Hierarchical Outlier Detection
261
7.5.1 
Local Outlier Detection at the Sensor Nodes 
In Chap. 4, real-time outlier detection approach was introduced for simultaneous 
outlier cleansing in the raw measurements and time-varying dynamical system iden-
tiﬁcation. In this subsection, we use this approach to detect the local outliers in the 
measurements of each sensor node. In order to smoothen the presentation, some of 
the equations from Chap. 4 are revisited in this subsection. 
First, use z Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis to indicate the c t h component of the local measurement bold 
italic z Subscript i plus 1 Superscript left parenthesis s right parenthesis, 
s equals 1  c omma 2 comma ellipsis upper N Subscript s Baseline. Then, the normalized residual epsil
on Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis for z Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis, c equals 1  c o mma 2 comma ellipsis comma upper N Subscript c Baseline, 
can be deﬁned as follows:
epsil
on Sub sc
ript 
c com a i plu
s 1 Superscript left parenthesis s right parenthesis Baseline equals StartFraction z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline Over sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndFraction
epsilo
n Subs
cript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline equals StartFraction z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline Over sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndFraction
where sigma 
Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis is the standard deviation of the one-step-ahead predictor z Sub
script c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis . For  
the regular measurement noise, the probability model of epsil
on Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis is Gaussian, so the 
probability of a data point falling outside the interval
l
e
ft paren
thesi
s mi
nus Star
tAbso
lut
eValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue right parenthesis
is: 
q Sub
script  c c
o
m
ma i plu
s 1 S
upe
r
script left parenthesis s right parenthesis Baseline equals 2 normal upper Phi left parenthesis minus StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue right parenthesis
where normal upper Phi left parenthesis dot right parenthesisis the cumulative distribution function of the standard Gaussian random 
variable. 
Consider a dataset German
 upper R Subscript c comma i Superscript left parenthesis s right parenthesis for the c t h measurement channel of the sth sensor node 
including the absolute normalized residuals of the regular data points up to the i t h
time step: 
German
 up e
r R Subsc
ript
 c comma i
 Supe rsc ri pt left paren thesis s right p a r e n th
e
sis Baseline equals left brace StartAbsoluteValue epsilon Subscript c comma j Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue colon z Subscript c comma j Superscript left parenthesis s right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t comma j equals 1 comma 2 comma ellipsis comma i right brace
The initial dataset German
 upper R Subsc r i p t  c comma 0 Superscript left parenthesis s right parenthesis Baseline comma c equals 1 comma 2 comma ellipsis comma upper N 0, is an empty set and the variable 
u
p
persN 
lef
t bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket
is deﬁned to indicate the number of elements in German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis. The variable kappa 
Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis
is then deﬁned to denote the number of previous regular data points in German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis with 
absolute normalized residual not smaller than that of the current time step: 
kappa 
Subscr ipt
 
c comm
a i plus 
1 Supers
cript
 le ft paren
thesis s ri ght par e n t h es
i
s Base
lin
e 
equals bold script upper L left brace German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesis colon StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue less than or equals German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesis comma k equals 1 comma 2 comma ellipsis comma upper N left bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket right brace
where bold script upper L left brace upper X right braceindicates the length of the set upper X and German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesisis the kth element of 
the dataset German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis. In other words, kappa 
Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis counts the number of the absolute normal-
ized residuals of the previous regular data points in German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis falling outside the interval
l
e
ft brack
et mi
nus 
StartAbs
olute
Val
ue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue right bracket
.

262
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Then, the probability of outlier can be considered as the probability to obtain a data 
point with very large residual. It can be deﬁned that there are no more than kappa 
Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis
samples among u
p
persN 
lef
t
 bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket plus 1 standard Gaussian samples fall outside the interval
l
e
ft brack
et mi
nus 
StartAbs
olute
Val
ue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue comma StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue right bracket
. In other words, this probability is given as that the absolute 
normalized residuals of no more than kappa 
Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis data points among u
p
persN 
lef
t
 bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket plus 1 standard 
Gaussian samples are larger than
StartAbs
olute
Value epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue: 
up pe
r
 
P Sub
scrip
t
 o 
S
uperscript
 uppe
r
 L Baseline left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis identical to upper P left parenthesis eta less than or equals kappa Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis
It is noticed that the random variable etafollows the binomial distribution with prob-
ability q Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis under u
p
persN 
lef
t
 bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket plus 1 trials. Moreover, a moving time window including 
no more than upper N Subscript w i n data points is considered to mitigate the memory burden in 
measurement storage of the wireless sensor node for long-term monitoring. Then, 
the outlier probability can be obtained by summing up the probabilities from eta equals 0
to eta equals
 kappa Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis in this moving time window: 
up pe
r
 
P Sub
scrip
t
 o
 Su
pers
cript
 
uppe
r 
L B
a
s
el
in
esle
ft 
p
aren
th
es
is
 
z Sub
scrip
t c
 c ommasi 
plus 
1 
S
up
er
scri
pt 
l
eft p
arenthesis s right parenthesis Baseline right parenthesis almost equals sigma summation Underscript eta equals 0 Overscript kappa overTilde Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline Endscripts StartBinomialOrMatrix upper N left bracket German upper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket plus 1 Choose eta EndBinomialOrMatrix left parenthesis q Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript eta Baseline left parenthesis 1 minus q Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis Superscript upper N left bracket German upper R overTilde Super Subscript c comma i Super Superscript left parenthesis s right parenthesis Superscript right bracket plus 1 minus eta
where
Ge
rm
an u
pper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis
is 
a 
reduced 
dataset 
consisting 
of 
only 
the 
most 
recent 
min
 
l
e
ft bra
ce 
u
pper N
 left bracket German upper R Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket comma upper N Subscript w i n Baseline right brace
elements in German
 uper R Subscript c comma i Superscript left parenthesis s right parenthesis: 
Ge
rm
an u
pper  R o
ver
T
i
l
desSu
bsc
r
ipt c
 
comma i Superscript left parenthesis s right parenthesis Baseline element of double struck upper R Superscript min left brace upper N left bracket German upper R Super Subscript c comma i Super Superscript left parenthesis s right parenthesis Superscript right bracket comma upper N Super Subscript w i n Superscript right brace
The symbol u
p
pe
r 
Nsle
ft 
bracket German upper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket
is utilized to denote the number of elements (i.e., cardinality) 
in the reduced dataset of regular absolute normalized residuals 
Ge
rm
an u
pper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis. 
kapp
asov
erTilde Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis is the 
number of elements that are no less than
StartAbs
olute
Value epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue in the reduced dataset 
Ge
rm
an u
pper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis: 
kapp
asov
erTild e S
u
bs
cr
ipt 
c comma i
 pluss1 
Super
scr ip
t 
le
ft p
arenthesis s right  p a r en
t
he
si
ssBa
sel
in
e equals bold script upper L left brace ModifyingAbove German upper R With tilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesis colon StartAbsoluteValue epsilon Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue less than or equals ModifyingAbove German upper R With tilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesis comma k equals 1 comma 2 comma ellipsis comma upper N left bracket ModifyingAbove German upper R With tilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline right bracket right brace
where 
Mo
di
fyin
gAbove German upper R With tilde Subscript c comma i Superscript left parenthesis s right parenthesis Baseline left parenthesis k right parenthesisis the kth element of the dataset 
Ge
rm
an u
pper R overTilde Subscript c comma i Superscript left parenthesis s right parenthesis. 
As a result, the detection criteria for local outliers are given by:

7.5 Hierarchical Outlier Detection
263
S
ta
rt
La yo
u
t
 Enla
rged 
l
eft br
ace 1
st Row  1s t Column  upper P
 S ub
s
c
ript 
o Sup
e
rscript uppe
r L Ba sel in e left p arent hesis 
z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis greater than or equals 0.5 comma 2nd Column z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a l o c a l o u t l i e r 2nd Row 1st Column upper P Subscript o Superscript upper L Baseline left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis less than 0.5 comma 2nd Column z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t EndLayout
If z Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis is detected as a local outlier, it will be removed from the local identiﬁcation 
process. On the other hand, the standard deviation sigma 
Subscript c comma i plus 2 Superscript left parenthesis s right parenthesis will be updated as follows: 
sigma 
Subscr ip
t
 c 
com
ma i p
lus 2 
Super
script  le ft  paren thesis s right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a l o c a l o u t l i e r 2nd Row StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t EndLayout
/
sigma Subscript c comma i plus 2 Superscript left parenthesis s right parenthesis Baseline equals StartLayout Enlarged left brace 1st Row sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a l o c a l o u t l i e r 2nd Row StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t EndLayout
sigma 
S
ubscri pt c
 
comma 
i plu
s 2
 Supersc
ript l eft par
enthesis  s
 r
ightspa
renthe sis  B aseline equal s Star
tLayout Enlarged left brace 1st Row sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a l o c a l o u t l i e r 2nd Row StartRoot StartFraction 1 Over upper N Subscript w i n Baseline minus 1 EndFraction left bracket left parenthesis upper N Subscript w i n Baseline minus 2 right parenthesis left parenthesis sigma Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis squared plus left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared right bracket EndRoot comma z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t EndLayout
It is obvious that the outlier probability is calculated based on the information 
from the single measurement channel of the corresponding sensor node. As a result, 
if the outlierness of a data point exceeds the threshold 0.5, this data will be considered 
as a local outlier. However, when sensors in the network are biased at the beginning 
of the monitoring period, the data observed from the biased sensors will have the 
same large error. Therefore, the anomaly caused by the biased sensors cannot be 
detected by using only the information from the single measurement channel. Addi-
tional treatment should be considered for removing the anomalous data due to biased 
sensors. 
7.5.2 
Global Outlier Detection at the Central Station 
In this subsection, a global outlier detection approach is presented. This outlier 
detection problem regarding the transmitted local estimation results is substantially 
different from the local outlier detection problem which targets directly on the raw 
measurements at the sensor nodes. The data points for global outlier detection at the 
central station are the transmitted local estimation results:
bol d
 
itali
c scri pt l Su b s c r ipt
 
upper I Baseline equals StartSet script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline EndSet
where scrip
t 
l
 
Subscr
ipt uppersI 
S
uperscript left parenthesis s right parenthesis Baseline equals StartSet bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline comma bold italic v Subscript i Superscript left parenthesis s right parenthesis Baseline EndSet
and up per I equals i r Subscript s Baseline divided by r Subscript c. 
First, at the upper I t h central time step, a screening criterion for possible global outliers 
is introduced to form the suspicious dataset bold italic script l Subscript script upper S comma upper I and the remaining data points will 
form the initial regular dataset bold italic script l Subscript script upper R Baseline 0 comma upper I. In order to form the suspicious dataset bold italic script l Subscript script upper S comma upper I, 
a criterion based on the simpliﬁed Mahalanobis distance (MD) is utilized. Given 
the transmitted local estimation results, a simpliﬁed MD for bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis can be deﬁned as 
follows:

264
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
d
 
left p
are
n
thesis bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis equals StartRoot sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis theta Subscript m comma upper I Superscript f minus s Baseline minus theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared Over v Subscript m comma upper I Superscript f minus s Baseline plus v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndRoot comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline
[
|
|
|
√
d 
l
eft
 
pare nth
esis  boldsit
alic 
theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis equals StartRoot sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis theta Subscript m comma upper I Superscript f minus s Baseline minus theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared Over v Subscript m comma upper I Superscript f minus s Baseline plus v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndRoot comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline
d le ft 
pare nthesis 
bold
 i ta lic the t a  S ubs
cript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis equals StartRoot sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis theta Subscript m comma upper I Superscript f minus s Baseline minus theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis squared Over v Subscript m comma upper I Superscript f minus s Baseline plus v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndRoot comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline
where thet asS
ubscript m comma upper I Superscript f minus s refers to the m t h component of the fused model parameter vector bold  it
alic theta Subscript upper I Superscript f minus s
excluding the local estimation results from the s t h sensor node and it can be calculated 
by using Eq. (7.35) without including this data point: 
thet asS
ubsc r
ipt 
m comma
su pper 
I Super
script f minus s Baseline equals StartStartFraction sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta S
ubscript m comma upper I Superscript f minus s Baseline equals StartStartFraction sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
thet
a Subsc
ri pt m 
comma upper I Superscript f minus s Baseline equals StartStartFraction sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta S
ubsc
ri pt  m comm a  u p per
 I Superscript f minus s Baseline equals StartStartFraction sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
Furthermore, v Su bsc
ript m comma upper I Superscript f minus s is the associated variance of thet asS
ubscript m comma upper I Superscript f minus s obtained by using Eq. (7.36): 
v Su bsc
ript  
m comma upper I Superscript f minus s Baseline equals StartStartFraction 1 OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Su
bscript
sm  com
a upper I Superscript f minus s Baseline equals StartStartFraction 1 OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Subsc
ript
 m  c omma up p e r  I S
uperscript f minus s Baseline equals StartStartFraction 1 OverOver sigma summation Underscript StartLayout 1st Row s Superscript asterisk Baseline equals 1 2nd Row s Superscript asterisk Baseline not equals s EndLayout Overscript upper N Subscript s Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s Super Superscript asterisk Superscript right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
Then, the data points (local estimation results) with simpliﬁed MD larger than
/
Star
tRoo
t normal upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Subscript Sub Superscript 2 Subscript Superscript negative 1 Baseline left parenthesis 0.95 right parenthesis EndRootare classiﬁed as suspicious points, where norm
al u
pper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Superscript 2 Superscript negative 1 Baseline left parenthesis dot right parenthesisis the quantile func-
tion of the Chi-square distribution with upper N Subscript thetadegrees of freedom. The suspicious dataset
bold italic script l Subscript script upper S comma upper I can be obtained as follows:
bold i
ta
licssc
ript  l Subsc
r
i
pt 
s
cript 
upp
e
r S comma upper I Baseline equals left brace left bracket bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline comma bold italic v Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket colon normal d left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis greater than StartRoot normal upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Subscript Sub Superscript 2 Subscript Superscript negative 1 Baseline left parenthesis 0.95 right parenthesis EndRoot comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline right brace
/
bold
 ita
lic script l Subscri p t  s cri
p
t upper S comma upper I Baseline equals left brace left bracket bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline comma bold italic v Subscript i Superscript left parenthesis s right parenthesis Baseline right bracket colon normal d left parenthesis bold italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis greater than StartRoot normal upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Subscript Sub Superscript 2 Subscript Superscript negative 1 Baseline left parenthesis 0.95 right parenthesis EndRoot comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline right brace
This threshold
/
Star
tRo
t normal upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Subscript Sub Superscript 2 Subscript Superscript negative 1 Baseline left parenthesis 0.95 right parenthesis EndRootis chosen conservatively and it is only used to form 
the suspicious dataset bold italic script l Subscript script upper S comma upper I. After obtaining the suspicious dataset bold italic script l Subscript script upper S comma upper I, the initial 
regular dataset bold italic script l Subscript script upper R Baseline 0 comma upper I can be readily obtained by excluding the suspicious data points:
bold i t ali c  scr
ipt l Subscript script upper R Baseline 0 comma upper I Baseline equals bold italic script l Subscript upper I Baseline minus bold italic script l Subscript script upper S comma upper I
Then, the initial fusion results bold  i
talic theta Subscript upper I Superscript f Baseline 0
and bold  i
talic v Subscript upper I Superscript f Baseline 0
can be obtained by using Eqs. (7.35) 
and (7.36), respectively, using only data points in the initial regular dataset bold italic script l Subscript script upper R Baseline 0 comma upper I: 
thet a 
Subs c
r
ipt m
 c omma up
persI 
Superscript f Baseline 0 Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subscript m comma upper I Superscript f Baseline 0 Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
t
heta 
Su bscript
 m comma upper I Superscript f Baseline 0 Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subs
cr ip t m com m a  u ppe
r I Superscript f Baseline 0 Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline

7.5 Hierarchical Outlier Detection
265
v Su bs
crip t
 m comma upper I Superscript f Baseline 0 Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v
 Subs
cr ipt m c
omma upper I Superscript f Baseline 0 Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Subs
crip
t m comma u p p e r  I 
Superscript f Baseline 0 Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
In other words, Eqs. (7.53) and (7.54) are  the same as Eqs. (7.35) and (7.36), 
respectively, except that the suspicious data points are excluded for fusion. 
Next, each suspicious data point is considered and its outlier probability will be 
assessed. Denote the suspicious data points in the dataset bold italic script l Subscript script upper S comma upper I as follows:
scrip
t l S
u
bscript 
scri pt upper S
 
c
omma  upper I  S u per scri
pt left parenthesis n right parenthesis Baseline equals left bracket bold italic theta Subscript i vertical bar i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline comma bold italic v Subscript i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline right bracket comma n equals 1 comma 2 comma ellipsis comma upper N Superscript left parenthesis script upper S right parenthesis
where up per N Superscript left parenthesis script upper S right parenthesis indicates the number of data points (local estimation results) in the 
suspicious dataset bold italic script l Subscript script upper S comma upper I and
l
eftsbrac
ket bold itali
c
 theta Subscript i vertical bar i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline comma bold italic v Subscript i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline right bracket
is the data point in bold italic script l Subscript script upper S comma upper I. The residual vector 
is deﬁned as follows to indicate the difference between the suspicious data point and 
the initial fusion result: 
bold 
it
alic e Sub
scri pt up er
 
I Superscript left parenthesis n right parenthesis Baseline identical to bold italic theta Subscript i vertical bar i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline minus bold italic theta Subscript upper I Superscript f Baseline 0
It is obvious that the residual vector bold 
italic e Subscript upper I Superscript left parenthesis n right parenthesis
of the regular data point follows an 
upper N Subscript theta-variate zero-mean Gaussian distribution and the diagonal covariance matrix has 
variances from the vector bold ita
li
c v 
Su bs
cript i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus bold italic v Subscript upper I Superscript f Baseline 0 . Then, the contour of the residuals with the 
same probability density as bold 
italic e Subscript upper I Superscript left parenthesis n right parenthesis
is governed by the following equation: 
si
g
ma 
s
ummati
on 
Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e overTilde Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction
sigma su
mmat ion Un de
rscr
ip
t 
m
 eq
u
als 1
 Ov
erscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e overTilde Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction
sigma su
mmat ion Un de
rscr
ipt m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e overTilde Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction
where 
bold
 ita
lic e overTilde Subscript upper I Superscript left parenthesis n right parenthesis
represents the points on the contour in the residual space and e over
Tilde Subscript m comma upper I Superscript left parenthesis n right parenthesis is the mth 
component of 
bold
 ita
lic e overTilde Subscript upper I Superscript left parenthesis n right parenthesis . The space enclosed by this contour is a hyper-ellipsoid. Moreover, 
the residuals within the hyper-ellipsoid are associated with higher probability density 
values than outside. As a result, the probability of a data point falling inside the 
hyper-ellipsoid can be utilized to evaluate the outlierness of the suspicious data point
scrip
t l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis. 
The outlier probability for a suspicious data point scrip
t l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis can be deﬁned as the proba-
bility of this hyper-ellipsoid. Instead of integrating directly to obtain this probability, 
the outlier probability can be calculated as follows. 
It is noticed that the right-hand side of Eq. (7.57) is a constant:
norma
l 
up
pe
r
 De
l
ta Su
bsc
ript upper I Superscript left parenthesis n right parenthesis Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction
normal u
pper  Delta  S
ubsc
ript upper I Superscript left parenthesis n right parenthesis Baseline equals sigma summation Underscript m equals 1 Overscript upper N Subscript theta Baseline Endscripts StartFraction left parenthesis e Subscript m comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis squared Over v Subscript m comma i Superscript left parenthesis s Super Subscript n Superscript right parenthesis Baseline plus v Subscript m comma upper I Superscript f Baseline 0 Baseline EndFraction

266
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
It is observed that the constant norma
l upper Delta Subscript upper I Superscript left parenthesis n right parenthesis
in Eq. (7.58) is the sum of squares of upper N Subscript theta
independent Gaussian random variables, so it follows the Chi-square distribution 
with upper N Subscript theta degrees of freedom:
norma
l 
upper 
Del
ta Subscript upper I Superscript left parenthesis n right parenthesis Baseline tilde chi Subscript upper N Sub Subscript theta Superscript 2
As a result, the outlier probability for a data point scrip
t l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis is given by: 
up
e
r
 P Su
bsc
r
i pt o 
Su
p
erscr
i
p
t up per G B a s e l ine  lef
t parenthesis script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis identical to normal upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Subscript Sub Superscript 2 Subscript Baseline left parenthesis normal upper Delta Subscript upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis comma n equals 1 comma 2 comma ellipsis comma upper N Superscript left parenthesis script upper S right parenthesis
where norma
l upper Phi Subscript chi Sub Subscript upper N Sub Sub Subscript theta Sub Superscript 2 Baseline left parenthesis dot right parenthesisis the cumulative distribution function of the Chi-square distribution 
with upper N Subscript theta degrees of freedom. 
As a result, the detection criteria for global outliers are given by: 
S
ta
rt
Lay
o
u
t Enl
arg
e
d left
 brac
e 1s t R ow  1st Co lumn upp
er 
P
 
Subsc
rip
t
 o Sup erscr
ipt upp er  G Basel ine l eft pa
renthesis script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis greater than or equals 0.5 comma 2nd Column script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline i s normal a g l o b a l o u t l i e r 2nd Row 1st Column upper P Subscript o Superscript upper G Baseline left parenthesis script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis less than 0.5 comma 2nd Column script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline i s normal a r e g u l a r d a t a p o i n t EndLayout
According to Eq. (7.61), the data points with global outlier probability up
e
r
 P Su
bsc
ript o Superscript upper G Baseline left parenthesis script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis
smaller than 0.5 will be reclassiﬁed as regular data points and they will be included 
in the regular dataset bold italic script l Subscript script upper R comma upper I:
bold i talic s
c
ript 
l Su bscri
p
t
 scri
pt 
u
pper R co mma upp e r  I  Ba seli
ne equals bold italic script l Subscript script upper R Baseline 0 comma upper I Baseline union left brace script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline colon upper P Subscript o Superscript upper G Baseline left parenthesis script l Subscript script upper S comma upper I Superscript left parenthesis n right parenthesis Baseline right parenthesis less than 0.5 comma n equals 1 comma 2 comma ellipsis comma upper N Superscript left parenthesis script upper S right parenthesis Baseline right brace
Finally, the updated fusion results can be obtained by using Eqs. (7.53) and (7.54) 
with bold italic script l Subscript script upper R Baseline 0 comma upper I being replaced by bold italic script l Subscript script upper R comma upper I: 
thet
a Su b
s
cript
 m  comma
 upper
 I Superscript f Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subscript m comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
t
heta 
Su bscrip
t m comma upper I Superscript f Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
theta 
Subs
crip t m com m a  u ppe
r I Superscript f Baseline equals StartStartFraction sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction theta Subscript m comma i vertical bar i Superscript left parenthesis s right parenthesis Baseline Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Su
bscr i
pt m comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v
 Subs
cr ipt m 
comma upper I Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
v Subs
crip
t m comma u p p e r  I 
Superscript f Baseline equals StartStartFraction 1 OverOver sigma summation Underscript script l Subscript upper I Superscript left parenthesis s right parenthesis Baseline element of bold italic script l Subscript script upper R comma upper I Baseline Endscripts StartFraction 1 Over v Subscript m comma i Superscript left parenthesis s right parenthesis Baseline EndFraction EndEndFraction comma m equals 1 comma 2 comma ellipsis comma upper N Subscript theta Baseline
In other words, all the updated regular data points will be used to calculate the 
fusion results at the upper Ith central time step. 
The hierarchical outlier cleansing scheme including the local outlier detection and 
the global outlier detection is available and the procedure is summarized as follows:

7.5 Hierarchical Outlier Detection
267
Training stage 
A short training stage is required at each sensor node to provide initial estimation 
for the standard deviation of the prediction error sigma 
Subscript c comma 1 Superscript left parenthesis s right parenthesis. It is suggested to implement 
the training stage for roughly ten fundamental periods of the dynamical system. 
At the sensor nodes, 
S1. Implement local identiﬁcation using EKF. 
S2. Calculate the absolute residuals
StartAbs
oluteV aluesz 
Subscri
pt c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline minus z Subscript c comma i plus 1 vertical bar i Superscript left parenthesis s right parenthesis Baseline EndAbsoluteValue and sort them in ascending 
order. 
S3. The initial value sigma 
Subscript c comma 1 Superscript left parenthesis s right parenthesis is givenbythe 68th-percentile value of the sorted absolute 
residuals. 
Working stage 
After the training stage, the time index is restarted with i equals 0. 
At the sensor nodes, 
S1. Compute the normalized residual epsil
on Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis of the cth measurement channel using 
Eq. (7.37). 
S2. Local outlier detection: 
(a) 
Calculate the outlier probability up pe
r
 
P Sub
scrip
t o Superscript upper L Baseline left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis
for z Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis using Eq. (7.42). If 
up pe
r
 
P Sub
scrip
t
 o  Superscript upper L Baseline left parenthesis z Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis Baseline right parenthesis less than 0.5, z Sub
script c comma i plus 1 Superscript left parenthesis s right parenthesis is classiﬁed as a regular data point. Otherwise, it 
will be classiﬁed as an outlier and discarded from the identiﬁcation process. 
(b) Update the estimator sigma 
Subscript c comma i plus 1 Superscript left parenthesis s right parenthesis using Eq. (7.46). 
S3. If i is an integer multiple of rsSubscript s Baseline divided by r Subscript c, transmit the local estimation results bold i
talic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis
and bold i
talic v Subscript i Superscript left parenthesis s right parenthesis
to the central station. Otherwise, repeat the procedure from Step S1 for the 
next time step. 
At the central station, 
C1. Calculate the simpliﬁed MD n
o
rmal d
 le
f
t pa renthes i s  b old italic theta Subscript i vertical bar i Superscript left parenthesis s right parenthesis Baseline right parenthesis comma s equals 1 comma 2 comma ellipsis comma upper N Subscript s Baseline, using  Eq. (7.48) and 
obtain the suspicious dataset bold italic script l Subscript script upper S comma upper I and initial regular dataset bold italic script l Subscript script upper R Baseline 0 comma upper I. 
C2. Compute the initial fusion results bold  i
talic theta Subscript upper I Superscript f Baseline 0
and bold  i
talic v Subscript upper I Superscript f Baseline 0
by using Eqs. (7.53) and (7.54), 
respectively. 
C3. Compute norma
l upper Delta Subscript upper I Superscript left parenthesis n right parenthesis , n equals 1  c o mma  2 comma ellipsis comma upper N Superscript left parenthesis script upper S right parenthesis, according to Eq. (7.58) and up
e
r
 P Su
bsc
ript o Superscript upper G Baseline left parenthesis script l Subscript upper I comma script upper S Superscript left parenthesis n right parenthesis Baseline right parenthesis
according to Eq. (7.60). If up
e
r
 P Su
bsc
r
ipt o Superscript upper G Baseline left parenthesis script l Subscript upper I comma script upper S Superscript left parenthesis n right parenthesis Baseline right parenthesis less than 0.5, the data point scrip
t l Subscript upper I comma script upper S Superscript left parenthesis n right parenthesis will be reclassiﬁed 
as a regular point. 
C4. Update the regular dataset by using Equation (7.62) and calculate the updated 
fusion results by using Equation (7.63) and Equation (7.64). 
C5. Sent back the fusion results to the sensor nodes and continue for the next time 
step.

268
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
7.6 
Application to Model Updating of a Forty-Story 
Building 
A forty-story building shown in Fig. 7.13 is considered. It has uniformly distributed 
ﬂoor mass and interstory stiffness, and the stiffness-to-mass ratio was taken as 
2160 normal s Superscript negative 2. As a result, the fundamental frequency of the building is 0.2869 upper H z. 
The Rayleigh damping model was used, and the damping matrix was given by 
bo ld up per C equals alpha bold upper M plus beta bold upper K, where alpha equal s 0.0270 normal s Superscript negative 1 and beta equals  0.0028 normal s. As a result, the damping 
ratios for the ﬁrst two modes were 1.0 percent sign. The stiffness matrix was parameterized as 
bo l d u
pper  K equ
al s sigma summation Underscript n equals 1 Overscript 6 Endscripts theta Subscript k Superscript left parenthesis n right parenthesis Baseline bold upper K Superscript left parenthesis n right parenthesis, where theta 
Subscript k Superscript left parenthesis n right parenthesis
and bold upper K Superscript left parenthesis n right parenthesis are the stiffness parameter and stiffness 
matrix of the nth substructure, respectively. Speciﬁcally, theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 2 right parenthesis
were assigned 
to the 1 s t and 2 n d story, respectively; theta 
Subscript k Superscript left parenthesis 3 right parenthesis , theta 
Subscript k Superscript left parenthesis 4 right parenthesis , theta 
Subscript k Superscript left parenthesis 5 right parenthesis
and theta 
Subscript k Superscript left parenthesis 6 right parenthesis
were assigned to the 
3 r d–5 t h, 6 t h–10 t h, 11 t h–20 t h and 21 s t–40 t h stories, respectively. 
The building was subjected to ground excitation modeled as zero-mean Gaussian 
white noise with spectral intensity up er S 0  equals  1.6 times 10 Superscript negative 4 Baseline normal m squared divided by normal s cubed. The entire monitoring 
duration was 500 normal s. The sampling rate at the sensor nodes was rsS ubscri pt s Baseline equals 250 upper H z while the
Fig. 7.13 Forty-story 
building 

7.6 Application to Model Updating of a Forty-Story Building
269
transmission/processing rate at the central station was r S ubs cript c Baseline equals 1 upper H z. The building was 
undamaged in the ﬁrst 200 normal s. Then, 5 percent sign stiffness reduction occurred at the 200 t h normal s
and 350 t h normal s in the ﬁrst and second story, respectively. Sixteen wireless sensor nodes 
were placed on the 1 s t to 6 t h, 8 t h, 9 t h, 10 t h, 12 t h, 15 t h, 16 t h, 18 t h, 20 t h, 30 t h
and 40 t h ﬂoor and each sensor node was assigned to measure the displacement and 
acceleration responses of the corresponding ﬂoor. 
Two types of abnormal data, i.e., outliers and biases, were generated and they were 
the most commonly encountered anomalies in sensing systems for structural health 
monitoring (Fu et al. 2019). Speciﬁcally, the raw measurements were composed of 
regular noisy measurements, outliers and biases. The measurement noise level for 
the regular noisy measurements was taken as 5 percent sign rms of the corresponding noise-free 
response quantities. Moreover, the outlier occurrence rate, which controls the amount 
of outliers in the raw measurements, was taken as 1 percent sign for each measurement channel. 
The outliers were generated with the uniform distribution ranging from the minimum 
to the maximum values of the corresponding noise-free response quantities. On the 
other hand, the wireless sensor nodes placed on the 10 t h, 20 t h and 30 t h ﬂoor were 
biased at the beginning of the monitoring period. In particular, the displacement 
measurement channel of the 10 t h ﬂoor was biased and the bias level was 20 percent sign rms 
of the corresponding noise-free response quantity. The acceleration measurement 
channel of the 20th ﬂoor was biased and the bias level was 15 percent sign. In addition, both 
measurement channels of the 30 t h ﬂoor were biased and the bias level was 10 percent sign. It is  
noted that the information about the outlier occurrence rate, outlier distribution and 
biased sensors was unknown throughout the entire identiﬁcation process and it was 
used only for simulation purpose. 
The estimation results of the stiffness parameters obtained by using the conven-
tional EKF with multiple outlier-corrupted measurements are ﬁrst shown in Fig. 7.14. 
The time interval [360, 390] s is magniﬁed in Fig. 7.15. The dotted lines represent 
the estimated values; the solid lines represent the actual values and the dashed lines 
represent the bounds of the 99.7% credible intervals. The same line style will be used 
to the later ﬁgures. It is seen that the estimation results of the stiffness parameters 
ﬂuctuated severely and the credible intervals failed to represent the posterior uncer-
tainty. It illustrates that the outliers substantially affect the identiﬁcation results so 
detection and removal of the outliers are crucial.
Next, the performance of the local outlier detection is examined. Two well-known 
indicators, namely masking and swamping are used to assess the performance of local 
outlier detection and they are elaborated in Chap. 4. Table 7.2 shows the local outlier 
detection results. The ﬁrst column indicates the sensor node number. The second 
and third columns indicate the location of the sensor nodes and the corresponding 
measurement channels. The third and fourth columns show the average masking 
and swamping percentages, respectively, over 50 independent simulation runs. Note 
that the outlier detection results in the ﬁrst 10 normal s were excluded in order to eliminate 
the effect of the initial conditions. The results show that the local outlier detection 
approach can successfully detect virtually all the local outliers with very low level 
of swamping in all the measurement channels. It is also observed that the masking 
and swamping values of the biased sensor nodes placed on the 10th and 20th ﬂoors

270
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Fig. 7.14 Estimation results of stiffness parameters by using the conventional EKF
were slightly larger than others since the biased measurements were associated with 
large errors and were not detectable at the sensor node level. However, the masking 
and swamping values of the biased sensor node placed on the 30th ﬂoor were not 
affected by the biased measurements because the bias level was low.
Figure 7.16 shows the local estimation results of the stiffness parameters, using 
the measurements from the 16 t h sensor node placed on the 40 t h ﬂoor. At this sensor 
node, although there was no sensor bias, the measurements were contaminated with 
regular measurement noise and outliers. The local estimation results exhibited large 
posterior uncertainty and severely ﬂuctuated due to limited local information from 
the corresponding sensor node only, even though the local outliers had already been

7.6 Application to Model Updating of a Forty-Story Building
271
Fig. 7.15 Estimation results of stiffness parameters in the time interval [360, 390] s by using the 
conventional EKF
excluded from the identiﬁcation process. Therefore, it is not surprising to observe that 
fusing the local estimation results is indispensable. On the other hand, Fig. 7.17 shows 
the local estimation results of the stiffness parameters using the measurements from 
the 15 t h sensor node placed on the 30 t h ﬂoor. Note that there was 10 percent sign sensor bias for 
both measurement channels at this sensor node in addition to regular measurement 
noise and outliers. These local estimations results exhibited much higher ﬂuctuation. 
However, the sensor bias-induced outliers were not detectable at the sensor node level, 
because the displacement measurements of the 15th sensor node were associated with 
the same large error in the entire time histories caused by the sensor bias. As a result, 
it is necessary to perform global outlier detection at the central station.
At each central time step, the transmitted local estimation results were ﬁrst 
subjected to global outlier detection at the central station and the detection results are 
shown in Table 7.3. The ﬁrst and second columns indicate the sensor node number 
and the corresponding location. The third column indicates the detection rate of the 
global outliers. The detection rate is calculated as the average ratio between the 
number of detected global outliers and the total number of central time steps for a 
sensor node among 50 simulation runs. The average detection rates for the sensor 
nodes placed on the 10 t h, 20 t h and 30 t h ﬂoors were close to unity while the others

272
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Table 7.2 Local outlier detection results 
Sensor node
Location
Channel
Masking (%)
Swamping (%) 
1
1
Displacement
0.00
0.14 
Acceleration
0.00
0.20 
2
2
Displacement
0.00
0.45 
Acceleration
0.00
0.33 
3
3
Displacement
0.00
0.34 
Acceleration
0.00
0.24 
4
4
Displacement
0.00
0.31 
Acceleration
0.00
0.20 
5
5
Displacement
0.00
0.25 
Acceleration
0.00
0.18 
6
6
Displacement
0.00
0.24 
Acceleration
0.00
0.32 
7
8
Displacement
0.00
0.26 
Acceleration
0.00
0.30 
8
9
Displacement
0.00
0.20 
Acceleration
0.00
0.18 
9
10
Displacement
0.01
1.35 
Acceleration
0.00
1.20 
10
12
Displacement
0.00
0.17 
Acceleration
0.00
0.21 
11
15
Displacement
0.00
0.10 
Acceleration
0.00
0.15 
12
16
Displacement
0.00
0.11 
Acceleration
0.00
0.23 
13
18
Displacement
0.00
0.10 
Acceleration
0.00
0.18 
14
20
Displacement
0.00
1.27 
Acceleration
0.08
1.43 
15
30
Displacement
0.00
0.14 
Acceleration
0.00
0.17 
16
40
Displacement
0.00
0.13 
Acceleration
0.00
0.17

7.7 Concluding Remarks
273
Fig. 7.16 Estimation results of stiffness parameters at the 16th sensor node
were virtually zero. It illustrates that the proposed approach can successfully detect 
the biased sensor nodes by identifying the global outliers at the central station.
After removal of the global outliers, Bayesian fusion was performed to obtain the 
ﬁnal estimation. Figure 7.18 shows the fusion results of the stiffness parameters at the 
central station. The estimated stiffness parameters agreed well with the actual values 
within the 99.7% credible intervals and the large uncertainty in the local estimation 
results was signiﬁcantly reduced. In addition, there was small time lag in the tracking 
of the abrupt change of theta 
Subscript k Superscript left parenthesis 1 right parenthesis
and theta 
Subscript k Superscript left parenthesis 2 right parenthesis , since the estimation results were based on the 
measured data at the current and previous time steps. Nevertheless, the time delay 
was tolerably small.
7.7 
Concluding Remarks 
In this chapter, two effective methods for handling the typical challenging problems 
in system identiﬁcation, including asynchronous measurements and multiple outlier-
corrupted measurements, are presented. The proposed methods are established based 
on the online dual-rate distributed identiﬁcation framework introduced in Chap. 6.

274
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
Fig. 7.17 Estimation results of stiffness parameters at the 15th sensor node
The proposed approach regarding to handling asynchronous measurements provides 
a simple but reliable framework for online distributed system identiﬁcation using 
asynchronous data directly. It requires neither a model of asynchronism nor esti-
mation of the time shifts among different sensor nodes so additional computational 
cost to quantify the asynchronous time shifts can be avoided. On the other hand, 
the proposed hierarchical outlier detection method regarding to handling multiple 
outlier-corrupted measurements provides a comprehensive way to detect different 
types of outliers. The proposed approach detects the local outliers according to the 
outlier probability of the raw measurements at the sensor nodes while it detects the 
global outliers according to the outlier probability of the local estimation results. By

7.7 Concluding Remarks
275
Table 7.3 Global outlier 
detection results 
Sensor node
Location
Detection rate (%) 
1
1
0.40 
2
2
0.00 
3
3
0.00 
4
4
0.00 
5
5
0.00 
6
6
0.20 
7
8
0.60 
8
9
0.00 
9
10
97.20 
10
12
0.20 
11
15
0.20 
12
16
0.20 
13
18
0.00 
14
20
93.40 
15
30
91.60 
16
40
0.00
Fig. 7.18 Estimation results of stiffness parameters at the central station

276
7
Online Distributed Identiﬁcation Handling Asynchronous Data …
excluding both types of outliers, reliable system identiﬁcation results can be achieved 
for time-varying dynamical systems in an online manner. 
References 
Aggarwal CC (2017) Outlier analysis. Springer Cham 
Bai X, Wang Z, Sheng L, Wang Z (2018) Reliable data fusion of hierarchical wireless sensor 
networks with asynchronous measurement for greenhouse monitoring. IEEE Trans Control Syst 
Technol 27(3):1036–1046 
Dragos K, Theiler M, Magalhães F, Moutinho C, Smarsly K (2018) On-board data synchronization 
in wireless structural health monitoring systems based on phase locking. Struct Control Health 
Monit 25:e2248 
Fu Y, Mechitov K, Hoang T, Kim JR, Memon SA, Spencer BF Jr (2021) Efﬁcient and high-precision 
time synchronization for wireless monitoring of civil infrastructure subjected to sudden events. 
Struct Control Health Monit 28(1):e2643 
Fu Y, Peng C, Gomez F, Narazaki Y, Spencer BF Jr (2019) Sensor fault management techniques 
for wireless smart sensor networks in structural health monitoring. Struct Control Health Monit 
26(7):e2362 
Gupta M, Gao J, Aggarwal CC, Han J (2013) Outlier detection for temporal data: a survey. IEEE 
Trans Knowl Data Eng 26(9):2250–2267 
He T, Stankovic JA, Abdelzaher TF, Lu C (2005) A spatiotemporal communication protocol for 
wireless sensor networks. IEEE Trans Parallel Distrib Syst 16(10):995–1006 
Huang K, Yuen KV (2020) Hierarchical outlier detection approach for online distributed structural 
identiﬁcation. Struct Control Health Monit 27(11):e2623 
Lei Y, Kiremidjian AS, Nair KK, Lynch JP, Law KH (2005) Algorithms for time synchronization 
of wireless structural monitoring sensors. Earthq Eng Struct D 34:555–573 
Li J, Mechitov KA, Kim RE, Spencer BF Jr (2016) Efﬁcient time synchronization for structural 
health monitoring using wireless smart sensor networks. Struct Control Health Monit 23:470–486 
Maes K, Reynders E, Rezayat A, De RG, Lombaert G (2016) Ofﬂine synchronization of data 
acquisition systems using system identiﬁcation. J Sound Vib 381:264–272 
Mu HQ, Yuen KV (2015) Novel outlier-resistant extended Kalman ﬁlter for robust online structural 
identiﬁcation. J Eng Mech 141(1):04014100 
Nagayama T, Spencer BF Jr (2007) Structural health monitoring using smart sensors. University of 
Illinois at Urbana-Champaign, Newmark Structural Engineering Laboratory 
Su W, Akyildiz IF (2005) Time-diffusion synchronization protocol for wireless sensor networks. 
IEEE/ACM Trans Netw 13(2):384–397 
Zhang Y, Meratnia N, Havinga PJM (2010) Outlier detection techniques for wireless sensor 
networks: a survey. IEEE Commun Surv Tut 12(2):159–170 
Zhu YC, Au SK (2017) Spectral characteristics of asynchronous data in operational modal analysis. 
Struct Control Health Monit 24(11):e1981

