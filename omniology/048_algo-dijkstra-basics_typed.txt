Graph	  Primi*ves	  
Dijkstra’s	  Algorithm:	  
The	  Basics	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Single-­‐Source	  Shortest	  Paths	  
Length of path  
= sum of edge lengths 
Input: directed graph G=(V, E). (m=|E|, n=|V| ) 
•  each edge has non negative length le 
•  source vertex s 
 
Output: for each          , compute 
   L(v) := length of a shortest s-v path in G 
 
Assumption: 
1.  [for convenience] 
2.  [important] 
Path	  length	  =	  6	  

0,1,2,3	  
0,1,4,7	  
0,1,4,6	  
0,1,3,6	  
One	  of	  the	  following	  is	  the	  list	  of	  shortest-­‐path	  distances	  for	  the	  
nodes	  𝑠,𝑣,𝑤,𝑡,	  respec*vely.	  	  Which	  is	  it?	  
Source	  
vertex	  

Tim	  Roughgarden	  
Why	  Another	  Shortest-­‐Path	  Algorithm?	  
Question: doesn’t BFS already compute shortest paths in linear 
time? 
Answer: yes, IF le = 1 for every edge e. 
 
Question: why not just replace each edge e by directed path of le 
unit length edges: 
Answer: blows up graph too much 
 
Solution: Dijkstra’s shortest path algorithm. 
 
 

Tim	  Roughgarden	  
Dijkstra’s	  Algorithm	  
Ini*alize:	  
• 	  X	  =	  [s]	  	  	  	  [ver*ces	  processed	  so	  far]	  
• 	  A[s]	  =	  0	  	  [computed	  shortest	  path	  distances]	  
• 	  B[s]	  =	  empty	  path	  [computed	  shortest	  
paths]	  
Main	  Loop	  
• 	  while	  	  XǂV:
	  	  
	  -­‐need	  to	  grow	  	  
	  
	  
	  x	  by	  one	  node	  
Main	  Loop	  cont’d:	  
• 	  	  
	  
	  
	  
[call	  it	  (v*,	  w*)]	  
	  
• 	  add	  w*	  to	  X	  
• 	  set	  
• 	  set	  	  	  
	  
	    
This array 
only to help 
explanation! 
Already 
computed in 
earlier iteration 

Tim	  Roughgarden	  
Example	  
Dijkstra’s greedy 
score for (v, w): 
A[v] + lvw 

Tim	  Roughgarden	  
Non-­‐Example	  
Question: why not reduce computing shortest paths with negative 
edge lengths to the same problem with non negative lengths? (by 
adding large constant to edge lengths) 
 
Problem: doesn’t preserve shortest paths ! 
 
Also: Dijkstra’s algorithm incorrect on this graph ! 
(computes shortest s-t distance to be -2 rather than -4) 

