**kwargs

**kwargs
*args is used to scoop up variable amount of remaining positional arguments
**kwargs is used to scoop up a variable amount of remaining keyword arguments
→tuple
→dictionary
The parameter name args is arbitrary – * is the real performer here
The parameter name kwargs is arbitrary – ** is the real performer here
**kwargs can be specified even if the positional arguments have not been exhausted
No parameters can come after **kwargs
(unlike keyword-only arguments)

Example
def func(*, d, **kwargs):
# code
func(d=1, a=2, b=3)
→
d = 1
kwargs = {'a': 2, 'b': 3}
func(d=1)
→
d = 1
kwargs = {}

Example
def func(**kwargs):
# code
func(a=1, b=2, c=3)
→kwargs = {'a': 1, 'b': 2, 'c': 3}
func()
→
kwargs = {}
def func(*args, **kwargs):
# code
func(1, 2, a=10, b=20)
func()
→args = (1, 2)
kwargs = {'a': 10, 'b': 20}
→args = ()
kwargs = {}

Code

