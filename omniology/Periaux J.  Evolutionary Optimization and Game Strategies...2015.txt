
Intelligent Systems, Control and Automation: 
Science and Engineering
Volume 75
Series editor
Professor S.G. Tzafestas, National Technical University of Athens, Greece
Editorial Advisory Board
P. Antsaklis, University of Notre Dame, IN, USA
P. Borne, Ecole Centrale de Lille, France
R. Carelli, Universidad Nacional de San Juan, Argentina
T. Fukuda, Nagoya University, Japan
N.R.Gans, The University of Texas at Dallas, Richardson, TX, USA
F. Harashima, University of Tokyo, Japan
P. Martinet, Ecole Centrale de Nantes, France
S. Monaco, University La Sapienza, Rome, Italy
R.R. Negenborn Delft University of Technology, The Netherlands
A.M. Pascoal, Institute for Systems and Robotics, Lisbon, Portugal
G. Schmidt, Technical University of Munich, Germany
T.M.Sobh, University of Bridgeport, CT, USA
C. Tzafestas, National Technical University of Athens, Greece
K. Valavanis, University of Denver, Colorado, USA

Intelligent Systems, Control and Automation: Science and Engineering, the new 
name for the series formerly known as Microprocessor-Based and Intelligent Sys-
tems Engineering Bookseries, has published around thirty books on developments 
in this interesting field that borders on so many disciplines and has so many practi-
cal applications: human-like biomechanics, humanoid robotics, intelligent control 
of robotic systems, robot interaction with different kinds of environments, auto-
mation, computer and control engineering, but also neural networks, fuzzy logic, 
genetic algorithms, nonlinear dynamics and control, and of course theoretical me-
chanics. This wide range of topics, approaches, perspectives and applications is 
reflected in a large readership of researchers and practioners in various fields, as 
well as graduate students who want to learn more on a given subject.
As a reflection of the changing world of scientific progress, a change in series title 
has been effectuated. The topic has evolved over the years and the following title 
is felt to be a more accurate fit for the current content of the books that are being 
published.
The current Series Editor is Professor S. G. Tzafestas, National Technical Univer-
sity of Athens, Greece. He is assisted by an Editorial Advisory Board who help to 
select the most interesting and cutting edge manuscripts for the series. 
Springer and Professor Tzafestas welcome book ideas from authors. Potential 
authors who wish to submit a book proposal should contact Nathalie Jacobs, 
Publishing Editor, Springer (Dordrecht), e-mail: Nathalie.Jacobs@springer.com
Indexed by SCOPUS and Springerlink.
More information about this series at http://www.springer.com/series/6259
Photographer: Markku Pirttimaa

Jacques Periaux • Felipe Gonzalez 
Dong Seop Chris Lee
Evolutionary Optimization 
and Game Strategies for 
Advanced Multi-Disciplinary 
Design
Applications to Aeronautics and UAV Design
1  3

ISSN 2213-8986	
ISSN 2213-8994 (electronic)
Intelligent Systems, Control and Automation: Science and Engineering
ISBN 978-94-017-9519-7	
ISBN 978-94-017-9520-3 (eBook)
DOI 10.1007/978-94-017-9520-3
Library of Congress Control Number: 2014956391
Springer Dordrecht Heidelberg New York London
© Springer Science+Business Media B.V.  2015
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part 
of the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, 
recitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or 
information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar 
methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication 
does not imply, even in the absence of a specific statement, that such names are exempt from the relevant 
protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this book 
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the 
editors give a warranty, express or implied, with respect to the material contained herein or for any errors 
or omissions that may have been made.
Printed on acid-free paper
Springer is part of Springer Science+Business Media (www.springer.com)
Jacques Periaux
International Center
for Numerical Methods
Barcelona
Spain
Felipe Gonzalez
Science and Engineering Faculty
Queensland University of Technology
Brisbane
Queensland
Australia 
Dong Seop Chris Lee
DMC R&D Center
Samsung Electronics
Suwon
Kyonggi-do
Korea, Republic of (South Korea) 

“This book is dedicated to my son KiYoung 
Alexander Lee and my daughter JungBin 
Elisha Lee. Also to my parents SangJin Lee 
and YoungBok Kim whom I cannot thank 
enough for all the support and love you have 
given me.”
To my beloved late wife Chantal, and our 
uniquely talented and accomplished children 
Sébastien, Daphne, Virgile and Bergame, 
Jacques Periaux
This book is dedicated to my wife and 
parents for their kindness and devotion. 
Also to Ashleigh, Chloe, Leo and Louie. 
Felipe Gonzalez
“This book is dedicated to my wife Sun-
Hee Lee, our son KiYoung Alexander Lee 
and our daughter JungBin Elisha Lee who 
are my inspiration in everything I do and 
every choice I make, and also to my parents 
SangJin Lee and Young Bok Kim who always 
supported me in every endeavour.” 
Dong Seop Chris LEE

vii
Foreword
Ignorance more frequently begets confidence than does knowledge: it is those who know 
little, and not those who know much, who so positively assert that this or that problem will 
never be solved by science. 

–Charles Darwin
The German physicist Max Plank hypothesized that important scientific innova-
tions become accepted because their opponents gradually die out, not because they 
gradually win over opponents. Evolutionary algorithms certainly had no shortage 
of opponents in the optimization community when they were first introduced in the 
early 1990s. We now see that Evolutionary algorithms are a maturing technology 
well beyond the bleeding edge and in the realm of the practitioner.Evolutionary al-
gorithms for multi-disciplinary design optimization have been successfully applied 
in a variety of areas that include: industrial design by parameterization, network 
design by construction, scheduling, routing, database mining, control systems, time 
series prediction, artificial intelligence, molecular design and artificial life systems. 
The current wide- spread use of Evolutionary Algorithms is not a consequence of a 
high rate of mortality in the optimization community as Dr. Planck would suggest 
but a result of the dramatic increase in computational capacity and Information 
Technology implementation. This capacity has transformed what formerly was an 
interesting theoretical construct into a useful (engineering design) tool.
The issue at hand is not theoretical and conceptual development of Evolution-
ary Algorithms but developing the expertise for their implementation.The present 
volume by Felipe Gonzalez, Dong Seop Chris Lee, and Jacques Periaux is dedi-
cated to the development of this expertise. It describes the role that evolution based 
tools play with game theoretic strategy in the solution or set of solutions as well as 
multi-disciplinary optimization in a variety of applications. Although the applica-
tions focus on aerospace, the methods translate to other fields including surface 
and marine transport, UAV systems, biomedical engineering, financial engineer-
ing, communications, and artificial intelligence. This volume is directed towards 
entry level scientists, engineers, and technologists in industry and governmental 
agencies as well in the academy. Optimization is a contact, not a spectator, sport. 
Several aeronautical applications with increasing complexity are presented. These 

viii
Foreword
are accompanied by a series of “hands- on” test problems are which are proposed 
as exercises to the reader.
November, 2013	
William Fitzgibbon
College of Technology, University of Houston
Houston, USA

ix
Foreword
The present volume has three authors, the only one I know personally being Jacques 
Périaux. For me, Jacques Périaux is many persons in one: a former student, a per-
sonal friend, the co-author of many articles, and has been for many years the inspi-
ration of many of my own investigations.
Jacques Périaux is a most remarkable individual and scientist: during a long 
and remarkable career in Aeronautics and Aerospace industry in France at Dassault 
Aviation, Jacques Périaux has been actively involved in designing airplanes, and 
in closing the gap between Academia and Industry, firmly believing that engineers 
can learn from academics, and conversely. A constant attitude of Jacques Périaux 
has been to look at new methods developed in universities and research centers, in 
France and abroad, for their potential applicability to problems from Industry, quite 
often suggesting new problems to look at, and ideas to investigate. To give evidence 
of J. Périaux’s vision related to this book, let us mention the fact that, almost twenty 
years ago, he anticipated the power of evolution algorithms for the solution of those 
multi-objective and multi-physics design problems occurring in Aeronautics and 
Aerospace.
Jacques’ initiative in that direction met with some scepticism from a number of 
well-known members of the Computational Mechanics community, but time has 
proved that his vision was right. The good news is that Jacques Periaux has decided, 
with the help of two young collaborators, Felipe Gonzalez and Dong Seop Chris 
Lee, to publish a book (this one) about evolution algorithms, such as the genetic 
ones, multi-objective optimization, game theory, and more, about the solution of 
design problems from Aeronautics. The reader will find herein a wealth of methods, 
examples, convergence studies, and recipes. One of the main values of this book is 
that practitioners from areas other than Aeronautics will have no difficulty in adapt-
ing and implementing the various methods discussed here to the solutions of their 
specific problems. This book is not easy to read, deep thought being inherent to the 
topics it addresses, but its reading is facilitated by its excellent structure and the 
large number of very interesting real-life examples it considers. Those motivated 

x
Foreword
by sufficient drive will learn a lot about a unique combination of methodologies 
applied in a growing number of areas of Science and Engineering.
June, 2013	
Roland Glowinski
French National Academy of Technology
Jyväskylä
Finland

xi
Preface
Computer programs that “evolve” in ways that resemble natural selection can solve com-
plex problems even their creators do not fully understand…

John Holland, Scientific American, July 1992
John Holland of the University of Michigan is commonly regarded as the father of 
Genetic Algorithms. The story begins in 1993.
Genetic Algorithms belong to a larger class of algorithms called Evolutionary 
Algorithms that generate solutions to optimization problems using techniques in-
spired by natural evolution. John Holland of the University of Michigan is com-
monly regarded as the father of Genetic Algorithms. Holland perceived a con-
nection between biology and computation. Machines as well as animals could be 
trained to adapt to their environment over successive generations with the principles 
of evolution being the engines of the adaption. The genetic algorithm begins with 
a population having randomly generated characteristics. Population members are 
evaluated by some method and then merged to produce a child with traits that are a 
combination of its parent’s characteristics.
Our story, which begins in 1993, concerns the translation of Holland’s ideas from 
theoretical computational science to industrial design, in particular aeronautical de-
sign. Pierre Bohn, Director of “Division des Etudes Avancées” of Dassault Avia-
tion anticipated that Genetic Algorithms could be used to improve the performance 
of aero-engines and suggested that I investigate new evolution based optimization 
techniques called Genetic Algorithms. In the 90’s the Dassault Scientific Center 
became a hotbed of activity for development of Advanced Evolutionary Software, 
many of which are used in this book. In this stimulating environment a group of 
visitors, colleagues, post doctoral fellows and PhD students actively contributed to 
the effort. Included in the group are: Bertrand Mantel, CHEN Hong Quan, Mourad 
Sefrioui, Eric Whitney, TANG Zhili, ZHOU Chun Hua and Jun Feng WANG. Spe-
cial recognition is due to the late Bertrand Mantel, for his enthusiastic numerical 
experimentation in the area of robust Genetic Algorithms.
Murphy’s first law says that nothing is as easy as it first looks. The fact that 
Genetic Algorithms are simple to implement and frequently succeed at generating 
solutions of high fitness when applied to practical problems first led me to be-
lieve that further investigation would lead to a rapid completion of several existing 

xii
Preface
optimization methods proposed to those working in the area of Aerodynamic De-
sign. Despite the remarkable potential of Genetic Algorithms their application to 
design in industrial environments, for several reasons, proved more complicated 
than I had anticipated:
•	 Many aeronautical applications involve nonlinear Partial Differential Equations 
(PDEs) for the mathematical modeling of fluids, structures or waves. This makes 
the evaluation of a candidate solution in a detailed design expensive.
•	 The needs of aeronautical industries were moving very rapidly to automated 
multi-disciplinary design optimization (MDO) in the field of (green) digital air-
craft design and manufacturing;
•	 In order to account for uncertainties in flight conditions or geometrical param-
eters for maintaining reliable performance, robust stochastic optimization of 
real life problems was becoming a first priority that designers had to take into 
consideration.
In the time period between 1996 and 2006 Dassault Aviation launched several re-
search projects in collaboration with the Laboratoire Informatique Paris 6 (LIP6) 
and the Aerospace Engineering Department of the University of Sydney (USYD) 
from 1996 to 2005. The outcomes of these projects showed significant progress in 
both efficiency and quality and led to a new class of advanced evolutionary algo-
rithms for multi-objective optimization problems in aeronautics. Several new meth-
odologies were introduced including successively hierarchical topology, asynchro-
nous parallelism, game strategies and more recently hybridized game coalitions.
Over the course of the last ten years, Felipe Gonzalez, Dong Seop Chris Lee and 
I have given many seminars, workshop presentations and conference lectures on 
Genetic Algorithms within the context of aerodynamical design. On the basis of this 
activity we decided to create the present volume, whose raison d’être is to provide 
physicists, engineers and computer scientists with advanced evolutionary methods 
and tools useful to the numerical solution of multi-objective optimization problems 
in Aeronautical applications. In particular we wished to introduce entry level, neo-
phyte, scientists and engineers to Genetic Algorithms, thus providing them with not 
only computing guidelines but examples or test problems of increasing complexity 
and difficulty.
We hope to make the scientific and industrial community aware of the potential 
of both Evolutionary Algorithms and Game Theory. Evolutionary Algorithms form 
the basis for robust decision making software that searches solutions in hilly spaces. 
Game Theory offers mathematically well-defined strategies for solving multi-ob-
jective optimization problems. In an effort to optimize efficiency within the con-
text of industrial applications, we provide a detailed description of methodologies 
that combine game theoretical strategy with Evolutionary Algorithms. We conclude 
with an Appendix which offers the reader several practical, “hands-on” test prob-
lems together with descriptions of software and guidelines for capturing, presenting 
and discussing solutions. It is our expectation that these test problems will provide 
readers a pathway for solving their own optimization problems.

xiii
Preface
The applications of innovative advanced evolutionary tools are not limited strict-
ly to aeronautics. Applications may be found in complex multi-physics optimiza-
tion problems drawn from a wide variety of areas such as biomedical engineering, 
surface transport, energy, and green technologies, among others.
After an introductory chapter which outlines the requisite background we se-
quentially address the following topics:
•	 Requisite Background
•	 Evolutionary Methods
•	 Multi-objective Evolutionary Algorithms and Game Theory
•	 Advanced Evolutionary Algorithms
•	 Multi-disciplinary Design/Robust Design
•	 Introduction to Algorithms for Numerical Design and Optimization
•	 Single Objective Model Test Problems
•	 Multi-Objective Model Test Problems
•	 Multi -Disciplinary Design Optimization
•	 Robust Multi-Disciplinary Design Optimization
•	 Morphing Design Optimization
We provide a summarizing conclusion and then end with the aforementioned appen-
dix that contains the hands on optimization test problems with guidelines on how to 
apply the methods and tools that have been described in the text.
Most of the numerical experiments have been conducted in collaboration with 
my co-authors Dr. Felipe Gonzalez and Dr. Dong Seop Chris Lee, both of whom 
I met during their course of PhD study at the University of Sydney. Computations 
performed by two of my PhD students J. Leskinen and Ms. Wang Hong, at the Uni-
versity of Jyvaskyla have been useful in the presentation of some test problems of 
the Appendix which can be found in the Finnish Database http://www.jucri.jyu.fi. 
Several numerical experiments have been performed by accessing and using soft-
ware from many well-known scientists. We express our thanks to Frederic Hecht 
and Olivier Pironneau ( FreeFem++), A. Jameson ( Flow22), Mark Drela (XFOIL 
and MSES), Bijan Mohammadi (NSC2KE), and the Navy ( POFACET).
John Lennon and Paul McCarthy penned the phrase “I get by with a little help 
from my friends” in 1967. Continuing in this vein I would like to acknowledge 
and extend my warmest thanks to my friends and colleagues. First and foremost, 
J.L. Lions has continuously shown me at the University Paris 6 and later at Das-
sault Aviation along my career the critical role of Applied Mathematics in complex 
problems in Aeronautics Industry; Roland Glowinski provided a foreword to this 
book and over the course of forty years has provided mentorship, continuous en-
couragement, and inspiration. William Fitzgibbon has also provided a foreword and 
personal encouragement and guidance for proper word usage and syntax. Olivier 
Pironneau has been always present when needed in difficult moments of my life 
with high spirit and at important decisions of my scientific and industrial career.
This book would not have existed without the support and encouragement at 
Dassault Aviation received from CEOs of the company and many colleagues and 
friends of the Theoretical Aerodynamics Department . I am particularly indebted 

xiv
Preface
to my colleagues and friends, Pierre Perrier who taught me with talent and vision 
aerodynamics applied to the design of civil, military and space aircraft and also to 
Patrick Pinganeau and Bruno Stoufflet, Division of the Scientific Strategy Direc-
tors for their encouragement in the creation and animation of a Pole Scientifique at 
Dassault Aviation co-chaired with Olivier Pironneau, UPMC .
Different chapters of this book have been written at the following institutions: 
the University of Pierre et Marie Curie (UPMC), INRIA Rocquencourt and INRIA 
Sophia Antipolis, the University of Sydney, the University of Queensland, the Uni-
versity of Milano, the University of Jyvaskyla, the International Centre of Numeri-
cal Methods in Engineering (CIMNE), the University of Las Palmas de Gran Ca-
naria (CEANI and IUSIANI), the Von Karman Institute (VKI), the National Techni-
cal University of Athens (NTUA), The Kyoto Institute of Technology (KIT), Chiba 
University, the University of Houston and the Nanjing University of Aeronautics & 
Astronautics (NUAA). The authors express special thanks to V. Capasso, B. Chet-
verushkin, G. Ganascia, H. Deconink, J.-A. Desideri, W. Fitzgibbon, B. Galvan, 
K. Giannakoglou, R. Glowinski, GUO Xiaoping, JIN Quanyuan, H. Kawarada, Y. 
Kuznetsov, Y. Maday, K. Morinishi, E. Onate, K. Papailiou, K. Srinivas, R. Walker, 
G. Winter, N. Satofuka, T. Verstraete, and ZHA Rong, ZHAO Ning for their hospi-
tality and the facilities provided during many stays or educational courses. A special 
thanks to P. Neittaanmaki for his long and enjoyable hospitality at the Univ. of 
Jyvaskyla and for his continuous encouragement to complete the material of the 
book.
We would also to thank Eric J. Whitney, A. Abbas, J. Alonso, G. Auchmuty, 
W. Annicchiarico, R. Bank, T. Burczynski, G. Bugeda, M. Cerrolaza, C.A. Coello 
Coello, P. Cuesta, Damp, K.Deb, A. Dervieux, M. Galan+, N. Gauger, D. Gold-
berg, D. Greiner, M. Hafez, F. Hecht, C. Hirsch, H. Kawarada, H. Suito, W. Haase, 
M. Holst, R. Hoppe, A. Jameson, I. Kroo, Y. Kuznetsov, R. Makinen, G. Meurant, 
Z. Michalevich, K. Miettinen, T. Nguyen, S. Obayashi, P. Perrier, V. Pediroda, O. 
Pironneau, C. Poloni, Ning Qin, D. Quagliarella, M. Schoenauer, K. Srinivas, J. 
Toivanen whose collaboration through fruitful discussions were essential for many 
of the results presented in the book.
My motivation in Computational Multi- physics Design Optimization in Aero-
nautics has been stimulated for almost two decades by European Commission 
projects of DG Research Aeronautics coordinated by CIMNE. The recent series 
of EU-China projects with Aerochina, Aerochina2 and more recently GRAIN and 
GRAIN2 are examples of collaborative teams focused on new methods and tools 
for advanced design in Aeronautics. I am particularly grateful to Dr. D. Knoerzer, 
a colleague and friend, for his continuous interest shown in Computational Fluid 
Dynamics and Multi-disciplinary Design Optimization and also to Dr. L. Breslin, 
Head of Unit Aeronautics for his involvement in EU-China cooperation and his 
interest in numerical methods, particularly at the ECCOMAS 2004 Congress in 
Jyvaskyla, Finland.
We are grateful to Ms Kati Valpe, Ms Marja Leina Rantalainen and Ms Anu Pent-
tila, from the University of Jyvaskyla, for providing us with the beautiful picture 
of the front page of the book— Swans in a “high lift aerodynamic configuration” 

xv
Preface
during landing on a Finnish lake—and also for checking many figures and helping 
in many ways the completion of this book.
Finally, I would like personally to express my gratitude to Ms. Nathalie Jacobs, 
Springer Publishing Editor and her staff and also to Prof. E. Onate, CIMNE Director 
and Editor of the Series Lectures Notes in Numerical Methods in Engineering and 
Sciences for their understanding, patience and encouragement during the difficult 
2007–2008 period of personal tragedy and trauma.
Jacques Periaux and his co authors Felipe Gonzalez 
Jyvaskyla, Finland
and Donseop Chris Lee
April 2014	

xvii
Contents
1  Introduction..................................................................................................     1
1.1  Background...........................................................................................     3
1.2  Motivation.............................................................................................     6
1.3  Summary of Chapters............................................................................     7
References......................................................................................................     7
2  Evolutionary Methods.................................................................................     9
2.1  Overview...............................................................................................     9
2.2  Fundamentals of Evolutionary Algorithms (EAs).................................   10
2.3  Evolutionary Algorithms (EAs)............................................................   11
2.4  Benefits of EAs.....................................................................................   11
2.4.1  General Presentation of EAs Using Binary Coding..................   12
2.4.2  Description of a Simple EA......................................................   13
2.5  Mechanics of EAs.................................................................................   13
2.5.1  Representation of Individuals...................................................   13
2.6  Evolution Strategies (ESs)....................................................................   16
2.7  Application of EAs to Constrained Problems.......................................   17
2.8  Summary of Chapter.............................................................................   19
References......................................................................................................   20
3  Multi-Objective EAs And Game Theory...................................................   21
3.1  Generalities...........................................................................................   21
3.2  Definition of A Mult- Objective Problem.............................................   22
3.3  Cooperative Games: Pareto Optimality................................................   22
3.4  Competitive Games: Nash Equilibrium................................................   23
3.4.1  Definition of Nash Equilibrium................................................   24
3.4.2  Coupling Nash Games and GAs...............................................   24
3.4.3  Generalization to N Nash Players.............................................   26
3.5  Hierarchical Game: Stackelberg...........................................................   27
3.5.1  Coupling a Stackelberg Game with GAs..................................   28

3.6  Comparison of Analytical Solutions and Numerical Game 
Solutions for Solving a Two Mathematical Functions Mini-
misation Problem����������������������������������������������������������������������������������  28
3.6.1  Analytical Solution��������������������������������������������������������������������  29
3.6.2  Nash/Gas and Stackleberg/Gas Numerical Solutions���������������  30
3.7  Hybridized Games���������������������������������������������������������������������������������  32
3.7.1  Algorithms for HAPMOEA and Hybridized Games�����������������  34
3.8  Summary of Chapter 3��������������������������������������������������������������������������  38
References������������������������������������������������������������������������������������������������������  38
4  Advanced Techniques for Evolutionary Algorithms (EAs)����������������������  39
4.1  Generalities�������������������������������������������������������������������������������������������  39
4.2  Distributed and Parallel EAS����������������������������������������������������������������  39
4.3  Hierarchical EAS (HEAs)���������������������������������������������������������������������  41
4.4  Asynchronous Evolutionary Algorithmss (EAS)����������������������������������  42
4.5  Advanced Operators������������������������������������������������������������������������������  43
4.5.1  Covariance Matrix Adaptation (CMA)�������������������������������������  43
4.5.2  Pareto Tournament Selection����������������������������������������������������  44
4.6  Advanced Games�����������������������������������������������������������������������������������  45
4.6.1  Virtual And Real Nash-Games��������������������������������������������������  46
4.6.2  Nash-Game and Hierarchical Asynchronous Paral-
lel EAs (NASH-HAPEA)����������������������������������������������������������  47
4.6.3  Hybrid-Game Coupled with Single-Objective or 
Multi-Objective Evolutionary Algorithms��������������������������������  48
4.7  Meta Model Assisted EAS��������������������������������������������������������������������  49
4.8  Summary of Chapter�����������������������������������������������������������������������������  50
References������������������������������������������������������������������������������������������������������  51
5  Multidisciplinary Design Optimisation and Robust Design 
in Aerospace Systems�����������������������������������������������������������������������������������  53
5.1  Generalities�������������������������������������������������������������������������������������������  53
5.2  Conceptual, Preliminary and Detailed Design��������������������������������������  53
5.3  Multi-Disciplinary Design Analysis (MDA)  
and Optimisation�����������������������������������������������������������������������������������  54
5.3.1  Definition����������������������������������������������������������������������������������  54
5.3.2  Challenges and needs for MDO������������������������������������������������  54
5.3.3  MDO Application Using Gradient-Based Methods������������������  56
5.4  Approaches to MDO�����������������������������������������������������������������������������  56
5.4.1  Multi-Disciplinary Design Feasible (MDF)������������������������������  57
5.4.2  Individual Discipline Feasible (IDF)����������������������������������������  58
5.4.3  Collaborative Optimization (CO)����������������������������������������������  59
5.4.4  Criteria and Performance of MDO Implementations����������������  61
5.5  Uncertainty Based Robust Design��������������������������������������������������������  61
5.5.1  Robust/Uncertainty Method������������������������������������������������������  61
xviii
Contents

xix
Contents
5.5.2  From Single-Objective to Multi-Objective Design 
Optimisation Using the Robust Design Method���������������������  63
5.5.3  Robust Multi-Objective/Multi-Disciplinary Design 
Optimization����������������������������������������������������������������������������  65
5.6  Limitations of Traditional Optimisation Techniques for 
MDO and Robust Design��������������������������������������������������������������������  65
5.6.1  MDO Using Traditional Method and Evolutionary  
Algorithms������������������������������������������������������������������������������  65
5.6.2  Advantages and Drawbacks of Robust Design�����������������������  66
5.7  Summary of Chapter���������������������������������������������������������������������������  67
References����������������������������������������������������������������������������������������������������  67
6  A Framework for Numerical Design and Optimization Algorithms������  69
6.1  Overview���������������������������������������������������������������������������������������������  69
6.2  An Optimization Framework���������������������������������������������������������������  69
6.3  Implementation of the Framework������������������������������������������������������  71
6.4  Optimization Methodology�����������������������������������������������������������������  74
6.5  Optimization Algorithms���������������������������������������������������������������������  76
6.5.1  Overall Optimization Algorithm���������������������������������������������  76
6.5.2  A Generic Problem for Analysis Algorithm����������������������������  78
6.5.3  Single-Objective Design Optimization Algorithm������������������  80
6.5.4  Multi-Objective Design Optimization Algorithm�������������������  80
6.5.5  Optimization Algorithm with Multi-objective Hier-
archical Evolutionary Algorithms�������������������������������������������  80
6.5.6  Multi-Disciplinary Design Optimization Algorithm���������������  84
6.6  Robust Design Optimization���������������������������������������������������������������  86
6.7  Summary of Chapter���������������������������������������������������������������������������  86
References����������������������������������������������������������������������������������������������������  86
7  Single Objective Model Test Case Problems�������������������������������������������  89
7.1  Overview���������������������������������������������������������������������������������������������  89
7.2  Wing Reconstruction Using Hierarchial Asynchronous 
Parallel Multi-Objective Evolutionary Algorthms (HAP-
MOEA) and Nash-Evolutionary Algorithms��������������������������������������  89
7.3  Active Flow Control Bump Design Optimization�������������������������������  92
7.3.1  Suction Side SCB Design Optimization���������������������������������  95
7.3.2  Suction and Pressure Sides SCB Design Optimization����������  98
7.3.3  Double SCB Design using HAPMOEA����������������������������������  104
7.3.4  Double SCB Design using Hybridized Game�������������������������  106
7.4  Generic Aircraft Wing Aerofoil Section Design Optimization�����������  113
7.5  Summary of Chapter 7������������������������������������������������������������������������  118
References����������������������������������������������������������������������������������������������������  121

xx
8  Multi-Objective Optimization Model Test Case Problems....................   123
8.1  Overview.............................................................................................   123
8.2  Pareto Reconstruction: Two Airfoils at Two Different  
Design Points......................................................................................   123
8.3  Multi-Element Airfoil Reconstruction: Two- Dimensional 
Two Objective Aircraft High Lift System Design and Optimization..   128
8.4  Unmanned Combat Aerial Vehicle Configuration: Concep-
tual Design Optimisation.....................................................................   136
8.5  Unmanned Aerial Vehicle Mission Path Planning System 
(Hybridized Game/NSGA-II)..............................................................   146
8.5.1  Test 1: Start to Target to Start Position Trajectory 
Optimization............................................................................   150
8.5.2  Test 2: Start to Target to End Position Trajectory 
Optimization............................................................................   156
8.6  Unmanned Aerial Vehicle (Uav) Configuration: Detailed 
Design Optimisation............................................................................   159
8.6.1  Multi-Objective Design Optimisation of UCAV 
Using Hybridized Games........................................................   174
8.7  Aerostructural Optimisation of a Medium Alitude Long 
Endurance (Male) UAS.......................................................................   177
8.8  Aero-Electromagnetic Optimization of a UAS...................................   185
8.9  Summary of Chapter 8........................................................................   191
References....................................................................................................   193
9  Robust Multi-Objective and Multi-Disciplinary Model  
Optimization Test Cases............................................................................   195
9.1  Overview.............................................................................................   195
9.2  Robust Active Flow Control Design Optimization.............................   195
9.2.1  SCB Shape Design Optimisation at 45 % of the 
chord Boundary Layer Transition...........................................   196
9.2.2  Robust SCB Shape Design Optimization with 
Uncertainty Boundary Layer Transitions................................   199
9.3  Robust Multi-Objective Generic Aircraft Wing Optimization............   211
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization.............   218
9.5  Robust Aero-Electromagnetic Design Optimization of UAS.............   229
9.5.1  Robust Multi-Disciplinary Design Optimisation of 
UCAS Using HAPMOEA Software.......................................   231
9.5.2  Robust Multi-Disciplinary Design Optimization of 
UCAS Using Hybridized Games............................................   239
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV 
Design Optimization...........................................................................   252
9.7  Summary of Chapter...........................................................................   261
9.8  Appendix.............................................................................................   264
References....................................................................................................   264
Contents

xxi
10  Robust Airfoil Design Optimization with Morphing Techniques����������  265
10.1  Overview�������������������������������������������������������������������������������������������  265
10.2  Morphing Airfoil/Wing Design Mechanism: Leading and 
Trailing Edge Deformation���������������������������������������������������������������  266
10.2.1  Parameterization of Morphing Aerofoil/Wing: 
Leading and Trailing Edge Deformation����������������������������  266
10.2.2  Baseline Design������������������������������������������������������������������  266
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise 
Flight Conditions�������������������������������������������������������������������������������  267
10.3.1  Trailing Edge Deformation (TED) Design Optimisation����  267
10.3.2  Robust Leading and Trailing Edge Deformation 
(LTED) Design Optimization����������������������������������������������  271
10.4  Morphing Airfoil/Wing Design Optimization at Take-Off 
and Landing Conditions Using Moga and Hybridized 
Game with Moga�������������������������������������������������������������������������������  277
10.5  Conclusion and Future Research�������������������������������������������������������  284
10.6  Summary of Chapter 10��������������������������������������������������������������������  284
References����������������������������������������������������������������������������������������������������  284
Appendix: Two “Hands-On” Examples of Optimization Problems������������  285
A.1  Overview��������������������������������������������������������������������������������������������  285
A.2  Reconstruction of BI-NACA Using HAPEA and NASH-EA������������  285
A.2.1  Introduction���������������������������������������������������������������������������  285
A.2.2  Definition of the Test Case����������������������������������������������������  285
A.2.3  Optimization��������������������������������������������������������������������������  286
A.2.4  Software and Computer Facilities Needed for 
Solving the Inverse Problem�������������������������������������������������  290
A.2.5  A Step by Step Design Optimisation Procedure��������������������  291
A.2.6  Analysis and Synthesis of Results Obtained by 
HAPEA and Nash-EAs Software������������������������������������������  292
A.2.7  Conclusion�����������������������������������������������������������������������������  294
A.3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization����  295
A.3.1  Introduction���������������������������������������������������������������������������  295
A.3.2  Definition of the Test Case����������������������������������������������������  296
A.3.3  Optimization��������������������������������������������������������������������������  297
A.3.4  Software Needed for Solving the Optimization 
Problem and Computer Used������������������������������������������������  300
A.3.5  A Step-by-Step Design Optimization Procedure�������������������  301
A.3.6  Analysis and synthesis of results obtained by 
HAPMOEA software�������������������������������������������������������������  301
A.3.7  Conclusion�����������������������������������������������������������������������������  304
References����������������������������������������������������������������������������������������������������  305
Contents

1
Chapter 1
Introduction
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_1
The content of this book describes algorithms and applications of robust evolution-
ary methods for multi-objective and multi-disciplinary design problems in aeronau-
tics and UAV design. The chapters cover methods that couple robust evolutionary 
optimisers, parallel computing, asynchronous evaluation strategies, game theory 
and hierarchical topology of fidelity solvers that reduce the computational expense 
of multi-objective and multi-disciplinary design optimisation processes. The meth-
ods and framework described are applicable to single and multi-objective, inverse 
or direct, complex engineering problems that can be highly non-linear, multi-modal 
involved approximations, non-differentiable, with convex, non-convex or discon-
tinuous Pareto optimal fronts.
The goals of the authors include addressing real-world problems in engineering 
involving three types of complexities:
•	 Instead of a single optimal solution, a trade-off between conflicting objectives 
arises due to manufacturing, technical and human constraints. Without prefer-
ence information none of these trade-off solutions can be said to be better than 
the others.
•	 The search space for an optimal solution is often complex and can involve non-
linearities, multi-modal and traditional search methods which may often encoun-
ter difficulties or eventually fail.
•	 Real-world problems usually involve multiple disciplines.
A designer (or a team of designers) in an engineering company or a research in-
stitute is (are) usually presented with problems that involve several complexities, 
objectives and multi-physics; therefore a systematic approach, referred to as Mul-
tidisciplinary Design Optimisation (MDO), that accounts for these complexities is 
required. The traditional approach in aeronautical design and MDO has been the 
use of deterministic optimisers. These methods are efficient in finding local but not 
global optimal solutions if objective functions and constraints are differentiable. 
However, robust alternative numerical tools are required if a broader application of 
the optimiser is desired, or if the problem is multi-modal, involves approximations, 

2
1  Introduction
is non-differentiable or involves multiple objectives and strongly non-linear phys-
ics; as is usually the case in the design of complex systems in aeronautics.
A relatively recent technique for optimisation is the use of Evolutionary Algo-
rithms (EAs). EAs are based on Darwinian principles of evolution—the so-called 
survival of the fittest “, where populations of individuals evolve in a search space 
and adapt to the environment through the use of three different mechanisms such 
as mutation, crossover and selection. EAs require no derivatives or gradients of 
the objective function and have the capability of finding global optimum solutions 
amongst many local optima in hilly landscapes. They are easily executed using par-
allel computing techniques and can be adapted to arbitrary analysis codes without 
major modification. Another major advantage of EAs is that they can tackle multi-
objective problems directly. Together these characteristics provide EAs substantial 
advantages over conventional deterministic approaches.
The aim of this book is to illustrate, identify and develop robust methods and 
algorithms and their coupling with game strategies applicable to a wide variety of 
problems in aeronautics. The methods are implemented in a generic framework by 
integrating several components so that the designer or team of designers can focus 
on the problem itself. These methods and framework are developed to automatically 
evolve and refine a candidate design such as an airfoil, a nozzle, a wing or an aircraft 
shape by changing the design variables, which characterise what might be called an 
individual. At the end of the optimisation process, the optimal set of individuals re-
flects suitable designs from which the designer can select and progress into further 
detailed steps of the design procedure. The challenge is to make the concept genu-
inely useful in a generic sense and adapted to different design problems. The key to 
this is the way methods and framework integrate with different components of the 
optimizer and the choice to encode—the genotype—design variables, to treat con-
straints and select good fitness functions (for example, takeoff-weight, fuel-weight, 
and aerodynamic performance).
The content of this book aims:
•	 To illustrate and develop several methods and set up a framework that can be 
used to solve single, multi-objective, multi-disciplinary conceptual and pre-
liminary and detailed design optimisation problems related to manned and un-
manned aircraft systems (UAS). The family of problems that can be solved with 
these methods can be highly non-linear, multi-modal, involve approximations, 
be non-differentiable or involve multiple objectives and physics, with convex, 
non-convex or discontinuous Pareto optimal fronts;
•	 To illustrate how to develop a robust generic framework which assists the de-
signer in the task of multi-objective and multi-disciplinary design optimisation in 
aeronautics. This framework comprises a GUI using object-oriented principles, 
a series of robust multi-objective and multi-disciplinary design optimisation al-
gorithms coupled with games strategies and the coupling of several modules for 
parallel computing, post-processing, and aeronautical systems design;
•	 To illustrate the benefits and practicality of the methods for representative types 
of problems in aeronautical systems design. These optimisation problems fall 

3
1.1  Background
into the categories of single and aerodynamic multi-element based configura-
tion, multi-disciplinary and multi-objective wing design, and multidisciplinary 
and multi-objective civil aircraft and unmanned air vehicles (UAVs) design.
The book presents a literature survey, covering three main research areas, namely 
optimisation methods, multi-disciplinary design optimisation and evolutionary al-
gorithms combined with game strategies. Then, the main requirements and imple-
mentation of evolutionary methods and game strategies are described and math-
ematical test cases are considered. Finally, real-world applications to single, multi-
objective aerofoil, wing and aircraft design optimisation problems are presented, 
analysed and discussed.
The content of this book provides the reader advantages and flexibility to im-
plement evolutionary methods in terms of efficiency and quality dealing for solv-
ing multi-objective and multi-disciplinary design optimisation problems linked to 
several aircraft systems. In particular, practical applications to airfoil, wing and 
aircraft design using a combination of low-to-medium-to-high fidelity solvers are 
implemented and evaluated. Green challenges in the next decade driven by con-
tinued growth air transport—safe, secure, fast, affordable and environmentally 
friendly—need to extend these evolutionary approaches to more than ever complex 
systems with higher numbers of design variables, mature Design of Experiment 
(DOE) studies and advanced morphing design techniques using active devices and 
smart materials.
1.1  Background
In today’s world of advancing technology, engineers are faced with the problem 
of designing increasingly complicated multi = disciplinary systems. This is a dif-
ficult task, as these systems not only involve different kinds of physics, but also a 
large number of variables and a series of objectives and constraints. At the same 
time, engineers need to optimise and address several requirements which include 
the reduction of the time cycle spent on design and reducing the cost of research and 
development, while improving the performance, reliability, quality and safety of the 
product or process under consideration.
These complex interactions have generated a growing interest in the area of 
multi-objective and Multi-disciplinary Design Optimisation (MDO). In multi-ob-
jective optimisation the designer is interested not only in a single global optimal 
solution but in a set of solutions that represent a trade-off between the different 
objectives. MDO refers to an approach that formalises the design process account-
ing for the interaction amongst the different physics involved, while optimising for 
a number of objectives and constraints.
When applied to aeronautics, the necessity of optimisation and MDO is evident, 
when knowing that even a very small improvement in weight or a reduction in aero-
dynamic drag have a tremendous impact on the overall performance of the design.

4
1  Introduction
The application of MDO to the design and optimisation in aeronautics for in-
stance includes a number of disciplines (aerodynamics, structures, propulsion, aero-
acoustics, …) are present and interact. The task of the designer or team of designers 
is to develop a solution that conforms to all disciplines while guaranteeing the re-
quirements and constraints. When optimisation is intended, the different objectives 
(for example, aerodynamic performance, purchase price, take-off weight) need to 
be considered ( on a vector basis) in order to find an optimal solution or set of non-
dominated solutions.
A common approach for optimisation is the use of aggregating functions in which 
different weights are assigned to each objective. The problem with this approach is 
that the weight for each objective needs to be known in advance. Another approach 
is to compute or produce a set of solutions in what will be referred to in this book 
as a Pareto optimal front or surface. This Pareto optimal front represents the opti-
mal set of non-dominated solutions and the trade-off between the objectives and 
disciplines involved. The process of MDO involves the use of several analysis tools 
such as Computational Fluid Dynamics (CFD) software or Finite Element Analysis 
(FEA) and also optimisation tools. Analysis tools are under constant development 
and have reached a point where a confident application to aeronautical design in 
conjunction with MDO is possible [1–3]. However, there are limitations to their 
application within MDO at an industrial level, due to the computational expenses 
involved. A single 3-D high-fidelity Navier-Stokes CFD computation around an 
aircraft wing, for example, might take several hours on a supercomputer. There-
fore, the continuing challenge has been to develop methodologies such as Design 
of Experiments (DOE), approximation methods and variable fidelity models that 
combine and use different fidelity analysis tools during the design and optimisation 
process to minimise the computational expense.
While the area of traditional optimisation tools for a single discipline is quite 
mature, the area of robust optimisation tools and approaches for MDO is still in the 
initial stages of development [4–9]. A well-known approach in aeronautical design 
and MDO has been the use of traditional deterministic optimisers. These optimisers 
are efficient for finding optimal global solutions if the objective and constraints are 
differentiable. However, robust alternative numerical tools are required if a broader 
application of the optimiser is desired, or the problem is multi-modal, involves ap-
proximations, is non-differentiable or involves multiple objectives and physics; as is 
usually the case in the design of complex multi-disciplinary systems in aeronautics.
A relatively new technique for optimisation is the use of Evolutionary Algo-
rithms (EAs). EAs are based on Darwinian theories of evolution, where populations 
of individuals evolve over a search space and adapt to the environment through the 
use of different mechanisms such as mutation, crossover and selection. EAs require 
no derivatives or gradients of the objective function and have the capability of find-
ing global optimum solutions amongst many local optima. They are easily executed 
using parallel computing techniques and can be adapted to arbitrary analysis codes 
without major modification. Another major advantage of EAs is that they can tackle 
multi-objective problems directly. Together these characteristics give EAs substan-
tial advantages over more conventional deterministic approaches. Interest in EAs 

5
1.1  Background
for problems in engineering and aeronautics has grown substantially in the past fif-
teen years. These methods have been successfully applied to different aeronautical 
design problems including airframe, wing, aerofoil and rotor blade design [10–14].
The application of EAs for MDO problems is nevertheless limited. This is 
mainly because one of the drawbacks of EAs is that they are slow when compared 
to traditional deterministic methods, as they require a larger number of function 
evaluations to converge to an optimal solution. Hence the continuing challenge in 
evolutionary optimisation has been to reduce the number of function evaluations 
and the computational expense. To achieve this goal, several approaches have been 
proposed including a combination of variable fidelity models, parallelisation strate-
gies and hybridisation techniques [15–17] and using Nash or Stackelberg games 
scenario described in detail in Chap. 3.
The content of this book develops multi-objective multi-disciplinary evolution-
ary methods and a framework in which different aeronautical problems are de-
signed, analysed and optimised. The methods are based on a robust evolutionary 
optimiser, parallel computing, asynchronous evaluation and a hierarchical topology 
of fidelity solvers that reduce the computational expense for multi-objective and 
MDO problems. The methods are applicable to single and multi-objective, inverse 
or optimization of complex engineering problems that can be multi-modal, involve 
approximations, non-differentiable, with convex, non-convex or discontinuous Pa-
reto optimal fronts.
These evolutionary methods simplify significantly the task of a designer or a 
design team by integrating several components so that they can focus on the engi-
neering problem itself. The methods are developed in a sequence of steps consisting 
of: defining the requirements, formulating the methods, identifying several promis-
ing robust analysis and optimisation methods, creating algorithms and testing with 
mathematical functions and evaluating performances before solving practical real-
world problems in aeronautics.
The methods are implemented in a single framework that integrates a Graphi-
cal User Interface (GUI), a robust multi-objective evolutionary algorithm, a series 
of modules for mathematical test functions, aerofoil, nozzle, wing and aircraft/air-
frame design and optimisation, parallel computing, post-processing and a Design 
of Experiments (DOE) capability. The framework was developed in a way that 
different applications and modules could be easily developed and implemented. 
These modules include real-world applications using analysis tools with variable 
fidelities, benchmarking of mathematical test functions, DOE studies, and parallel 
computing implementations.
It should also be noted that although the development of software for MDO has 
been an active field of research, the common limitation is that these architectures 
are proprietary or developed by universities and industries with restrictions on their 
use, and are sometimes specialised and difficult to expand for other applications. 
The framework and methods described in this book have been developed from 
scratch by progressively selecting, evaluating and assembling different software 
components in order to obtain detailed insight into the complexities involved in 
multi-objective optimisation and the process of MDO.

6
1  Introduction
As detailed further in this book, the methods and framework have the following 
characteristics:
•	 Modularity: designed with purpose, the system uses object-oriented principles 
in a modular approach. When a new mathematical test case or a new aeronauti-
cal design and optimisation problem needs to be studied, the user only has to 
develop a few input/output files and lines of code.
•	 Scalability and Parallelisation: new and more complex analysis tools and design 
modules can be implemented. Also, studies in parallel computation can be per-
formed.
•	 Post-processing: simple intuitive tools for visualisation of intermediate or final 
results.
•	 Robustness: the framework uses a robust evolutionary tool for optimisation. The 
framework and its methods have been shown to be robust and have been success-
fully validated for different single and multi-objective mathematical test func-
tions as well as to a series of design and analysis tools.
•	 Equivalence of formulations: different multi-objective and multi-disciplinary 
analysis formulations are evaluated directly with evolutionary methods. There 
are no derivatives or transformations on the mathematical formulation of the 
problem that may introduce noise or require fine-tuning of the solution.
Of particular interest in this book is the application to Unmanned Aerial Vehicles 
(UAVs) and Unmanned Combat Aerial Vehicles (UCAV) systems. Robust tools 
for multi-disciplinary and multi-criteria analysis and optimisation are required as 
the need and complexity of the missions that these vehicles can achieve increases. 
UAVs are usually designed for cruising in single flight conditions while meeting 
other design constraints. The penalty for operating in off-design conditions can be 
significant. UAV aerodynamic performance might be improved if a multi-criteria 
multi-disciplinary optimisation can be developed which considers several design 
points.
1.2  Motivation
The methodology and software described in this book demonstrates the practical 
use of robust and efficient evolutionary algorithms (EAs) for multi-objective and 
multi-disciplinary design problems in aeronautics, and describes several applica-
tions for validating this task. The intention is not to exclude human interaction in 
the process, but rather to facilitate the other cumbersome exploration of the search 
space by exploiting these methods to find optimal solutions. Adequate engineering 
definitions and judgement of the problem are fundamental conditions provided by 
engineers; the aid and the benefit of computer evaluation present engineers with a 
broader exploration of design space and non-intuitive designs that could be out of 
their scope.

7
References
At an academic research and industrial level, the methods and framework provide 
scientists and engineers with a platform on which numerical analysis and optimisa-
tion tools can be implemented and complex engineering problems can be solved.
1.3  Summary of Chapters
This book considers several evolutionary methods, algorithms, games strategies 
and framework developed, implemented and tested, which can be used to evaluate, 
optimise and solve single, multi-objective, multi-disciplinary conceptual, prelimi-
nary and detailed design optimisation problems relation to aeronautics manned and 
unmanned aircraft systems.
The backbone of the book is organised as follows: Chapter 2 Provides an over-
view of Evolutionary Algorithms in multi-objective EAs and Game theory are 
considered Chap. 3. Chapter 4 describes a framework for numerical design and 
optimization algorithms this provides an indication of the complexities, coupling 
and performance of the methods with parallel computing evolutionary techniques 
and analysis tools. Real-world applications in aeronautics with increasing levels of 
complexity are discussed in Chaps. 5–10. Chapter 5 applies evolutionary methods 
to single objective aerodynamic shape optimisation problems. Chapter 6 is con-
cerned with the application of methods for multi-objective model numerical test 
cases. Chapters 7, 8 and 9 presents robust multi-objective and multidisiplinary 
numerical model test cases. Finally Chap. 10 introduces design optimization with 
Morphing techniques. An Appendix includes and discusses two (2) “hands-on” ex-
amples to help the reader to reproduce step-by-step numerical computations with 
optimization software.
References
1.	 Agarwal RK (1999) Computational fluid dynamics for whole body aircraft. Annu Rev Fluid 
Mech 31:125–169
2.	 Alexandrov N, Kodyalam S (1998) Initial results of an MDO Methods Evaluation Study. In 
Proceedings of the Seventh AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary 
Analysis and Optimization, St. Louis, Missouri, September 1998
3.	 Alexandrov NM, Lewis RM (2000) Analytical and computational properties of distributed ap-
proaches to MDO. In AIAA Paper 2000-4718. AIAA, September 2000
4.	
Alexandrov NM, Lewis RM, Gumbert CR, Green LL, Newman PA (2000) Optimization with 
variable-fidelity models applied to wing design. In Proceedings of the 38th Aerospace Sci-
ences Meeting and Exhibit, Reno, Nevada, January 2000. AIAA
5.	
Bartholomew P (1998) The role of MDO within Aerospace Design and Progress towards an 
MDO Capability. In Proceedings of Seventh AIAA/USAF/NASA/ISSMO Symposium on 
Multidisciplinary Analysis and Optimisation, St. Louis, Missouri, September 1998
6.	
Coello-Coello C, Van Veldhuizen DA, Lamont GB (2002) Evolutionary algorithms for solv-
ing multiobjective problems. Kluwer Academic Publishers, New York

8
1  Introduction
  7.	 Deb K (2003) Multi-objective optimization using evolutionary algorithms. Wiley, Greece
  8.	 Kim HJ, Rho OH (1997) Dual-point design of transonic airfoils using the hybrid inverse 
optimization method. J Aircr 34(5):612–618
  9.	 Mäkinen R, Neittaanmäki P, Périaux P, Toivanen J (1998) A genetic algorithm for multiobjec-
tive design optimization in aerodynamics and electromagnetics. In: Papailiou KD et al (ed) 
Computational fluid dynamics ’98, Proceedings of the ECCOMAS 98 Conference, vol 2, 
Wiley, Greece, pp 418–422
10.	 Mason WH, Knill DL, Giunta AA, Grossman B, Haftka RT, Watson LT (1998) Getting the 
full benefits of CFD in conceptual design. In Proceedings of the AIAA 16th Applied Aerody-
namics Conference, Albuquerque, New Mexico
11.	 Obayashi S (1998) Multidisciplinary design optimization of aircraft wing planform based 
on evolutionary algorithms. In Proceedings of the 1998 IEEE International Conference on 
Systems, Man, and Cybernetics, La Jolla, California, October 1998. IEEE
12.	 Oyama A, Liou M, Obayashi S (2002) Transonic axial-flow blade shape optimization using 
evolutionary algorithm and three-dimensional Navier-Stokes solver. In Proceedings of the 
9th AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimiza-
tion, Atlanta, Georgia, September 2002
13.	 Parmee IC, Watson AH (1999) Preliminary airframe design Using co-evolutionary multiob-
jective genetic algorithms. In: Proceedings of GECCO 1999, vol 2, pp 1657–1665. Morgan 
Kaufmann, San Francisco
14.	 Raymer D (2002) Enhancing aircraft conceptual design using multidisciplinary optimization. 
PhD thesis, KTH, Department of Aeronautics, FLYG 2002-2
15.	 Sobieszczanski-Sobieski J, Haftka RT (1996) Multidisciplinary aerospace design optimiza-
tion survey of recent developments. Technical Report 96-0711, NASA/American Institute of 
Aeronautics and Astronautics
16.	 Sobieszczanski-Sobieski J, Haftka RT (1997) Multidisciplinary aerospace design optimiza-
tion: survey of recent developments. Struct Optim 14:1–23
17.	 Thomas Z, Green A (1999) Multidisciplinary design optimization techniques: implications 
and opportunities for fluid dynamics research. In Proceedings of the 30th AIAA Fluid Dy-
namics Conference, Norfolk, VA, June 1999. AIAA Paper 1999-3798

9
Chapter 2
Evolutionary Methods
© Springer Science+Business Media B.V. 2015  
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_2
2.1  Overview
This chapter provides the reader with an overview of Evolutionary Algorithms. 
The idea of mimicking Evolution as an optimisation tool for engineering prob-
lems appeared in the late 50s and early 60s. The concept was to evolve a popula-
tion of candidate solutions to solve a problem, using operators inspired by natural 
selection. In the 60s, Rechenberg introduced “Evolution Strategies” (ESs) for 
airfoil design: this approach being continued by H. Schweffel [2]. Other computer 
scientists developed evolution inspired algorithms for optimisation and machine 
learning at the same period when electronic computers appeared for the first time. 
Genetic Algorithms (GAs) were invented by J. Holland in the late 60s and de-
veloped by Holland and his students (D. Goldberg among many others) at the 
University of Michigan to study within the computer the phenomenon of adap-
tation as it occurs in nature. Holland’s book [3] on “Adaptation in Natural and 
Artificial Systems” presented the genetic algorithm as an abstraction of biological 
Evolution, which was a major innovation due to the biological concept of popu-
lation, selection, crossover and mutation. The theoretical foundation of Genetic 
Algorithms (GAs) was built on the notion of “schemas” and “building blocks” 
which is explained in detail in many books devoted to Genetic Algorithms (c.f. 
D. Goldberg for instance [4]. In the last decade there has been widespread in-
teraction among researchers studying Evolutionary Computation methods, and 
the GAs, Evolution Strategies, Evolutionary Programming and other evolutionary 
approaches were finally unified in the late 90s under the umbrella named Evolu-
tionary Algorithms (EAs).

10
2  Evolutionary Methods
2.2  Fundamentals of Evolutionary Algorithms (EAs)
One of the emerging techniques for solving Multi-disciplinary Design Optimization 
(MDO) and Multi-disciplinary Optimization (MO) problems is Evolutionary Algo-
rithms (EAs). EAs are decision maker algorithms that mimic the natural principle 
“survival of the fittest” introduced by Charles Darwin’s famous book “Origin of 
Species” in 1859. Broadly speaking they operate simply through the iterated map-
ping of one population of solutions to another population of solutions. This Informa-
tion Technologies ( IT) based approach contrasted with existing conventional deter-
ministic search techniques such as the simplex method, conjugate gradient method 
and others, which proceed from one given sub-optimal solution to another, until an 
optimum solution is reached. Evolutionary algorithms are not deterministic, so that 
for identical problems and identical starting conditions, the evolution of the solu-
tion will not follow the same path on repeated simulations. It is for this reason that 
EAs fall into the category of stochastic (randomized) optimization methods. Some 
other stochastic methods that are used are the Monte-Carlo approach (MC), the 
directed random walk and simulated annealing (SA) However the process of evolu-
tion in EAs is of course not completely random (in particular during the selection 
procedure) because in this case the performance of the algorithm would be no better 
than simple guessing, and at worst would be equivalent to complete enumeration of 
the parameter search space. Evolutionary algorithms work by exploiting population 
statistics to some greater or lesser extent, so that when newer individual solutions 
or offspring are generated from parents, some will have inferior genetic charac-
teristics while others will have superior genetic characteristics. The general work-
ing Darwin principle of the iterated mapping then reduces to generate an offspring 
population, removing a certain number of “below average” evaluated individuals, 
and obtaining the subsequent population. This can be summarized as the repeated 
application of two GAs operators on the population, the variation operator (the gen-
eration of offspring) and the selection operator (the survival of the fittest) [4]. Some 
variant approaches to EAs in the literature only differ in the operation of these two 
operators. The origin of Evolutionary Algorithms for parameter optimization seems 
to have appeared independently in two separate streams, Genetic Algorithms (GAs) 
and Evolution Strategies (ESs).
Some of the advantages of EAs are that they require no derivatives (or gradients) 
of the objective function, have the capability of finding globally optimum solutions 
amongst many local optima, are easily run in parallel computers and can be adapted 
to arbitrary solver codes without major modification. Another major advantage of 
EAs is that they can tackle simultaneously multi-objective problems (by consider-
ing fitness vector and not the traditional weighted aggregation of several fitness 
criteria). It is shown in the sequel how this new feature is used intensively for the 
capture of Pareto, Nash or Stackelberg solutions using game strategies in multi-
criteria optimization problems.

11
2.4  Benefits of EAs
2.3  Evolutionary Algorithms (EAs)
Evolutionary Algorithms (EAs) are search procedures based on the mechanics of 
natural selection and Darwin’s principle: “survival of the fittest”. GAs, a particular 
class of EAs, were introduced by J. Holland [3] who explained the adaptive proce-
dure of natural systems and laid down the two main principles of GAs: the ability of 
a simple bit-string representation to encode complicated structures and the power of 
simple transformations to improve such structures. A few years later, D. Goldberg 
brought simple GAs to nonconvex optimization theory for a quantitative study of 
optima and introduced a decisive thrust in the GAs research field.
The simple Genetic Algorithm (GA) was founded on principles developed by 
J. Holland [3] in the late 60s, and a number of research topics both in theory and 
applications were developed. It is generally accepted, however, that modern GAs 
were placed on a strong foundation in optimization research by Goldberg [4]. Gold-
berg’s initial applications of the GAs were in real-world topics such as gas pipe-
line control. The original GAs technique revolved around a single binary string (in 
base 2) encoding of the DNA of chromosomes, which is the genetic material that 
each individual carries. The binary coded GAs’ variation operator is comprised of 
two parts, crossover and mutation. Crossover interchanges genetic portions of pa-
rental chromosomes while mutation involves the random switching of DNA letters 
in the chromosome. The selection operator has taken many forms, the most basic 
being the stochastic/deterministic fitness-proportionate (or roulette wheel) method. 
Genetic Algorithms have developed significantly in the past decade, and these de-
velopments are considered further throughout this chapter.
2.4  Benefits of EAs
One of the main advantages of EAs and GAs in particular is robustness: they are 
computationally simple and powerful in their search for improvement and are not 
limited by restrictive assumptions about the search space (continuity, existence of 
derivatives, uni-modality). Furthermore, they accommodate well to discontinuous 
environments (see in Chap. 3 the capture of discontinuous Pareto fronts). GAs are 
search procedures that use semi-random search but allow a wider exploration in the 
search space compared to classical optimization methods which are not so robust 
but work nicely in a narrow search domain problem.
How are EA different from traditional numerical optimization tools?
• EAs are indifferent to problem specifics: an example in shape airfoil optimiza-
tion is the value of the drag of an airfoil which represents the so-called fitness 
function;
• EA use codes of decision variables by adapting artificial DNA chromosomes 
or individuals rather than adapting the parameters themselves. In practice, the 
designer will encode the candidate solutions using binary coding GAs with fi-
nite–length string genotype;

12
2  Evolutionary Methods
•	 GAs process populations via evolving generations compared to point by point 
conventional methods which use local information and can be trapped frequently 
in a local minimum;
•	 GAs use randomized operators instead of strictly deterministic gradient infor-
mation.
2.4.1  General Presentation of EAs Using Binary Coding
GAs are different from the conventional search procedures encountered in engi-
neering optimisation. To understand the mechanism of GAs, consider a minimiza-
tion problem with a fitness function index J = f(x), where the design parameter is x. 
The first step of the optimisation process is to encode x as a finite-length string. The 
length of the binary string is chosen according to the required accuracy. For a binary 
string of length l = 8 bits, the lower bound xmin is mapped to 00000000 and the up-
per bound xmax is mapped to 11111111, with a linear mapping in between. Then for 
any given string the corresponding value x can be calculated according to: x = xmin 
+ 1/(2*l− 1). ( xmax—xmin).With this coding, the initial population is constituted of 
N individuals, and each of them is a potential solution to the optimization problem.
We must define now a set of EA operators that use the initial population and then 
create a new population at every generation. There are many EA operators, but the 
most frequently used are selection, crossover and mutation.
Selection consists in choosing solutions that are going to form a new generation. 
The main idea is that selection should depend on the value of the fitness function: 
the higher the fitness is, the higher the probability is for the individual to be chosen 
(akin to the concept of survival of the fittest). But his selection remains a probabil-
ity, which means not being a deterministic choice: even solutions with a compara-
tive low fitness may be chosen, and they may prove to be very good in the course 
of events (e.g. if the optimisation is trapped in a local minimum). Two well-known 
selection techniques are Roulette Wheel and Tournament (c.f. Goldberg [4]).
Reproduction is a process by which a string is copied in the following genera-
tion. It may be copied with no change, but it may also undergo a mutation, accord-
ing to a fixed mutation probability Pm. However filling up the next generation is 
achieved through the operator called crossover.
where/denotes the cutting site
First, two strings are randomly selected and sent to the mating pool. Second, a 
position along the two strings is selected according to a uniform random law. Fi-
nally, based on the crossover probability Pc, the paired strings exchange all genetic 
characters following the cross site. Clearly the crossover randomly exchanges 
  001 /
                      ’ 001
  
                             
 1 11/
              
    ’ 111
A
A
B
B
→
01110
10010
10010
01110

13
2.5  Mechanics of EAs
structured information between parents A and B to produce two offspring A’ and B’ 
which are expected to combine the best characters of their parents.
The third operator, called mutation, is a random alteration of a binary (0–1) bit 
at a string position, and is based on a mutation probability Pm. In the present case, 
a mutation means flipping a bit 0 into 1 and vice versa. The mutation operator en-
hances population diversity and enables the optimisation to get out of local minima 
of the search space.
2.4.2  Description of a Simple EA
For the optimization problem P dealing with the minimisation of a fitness function f 
(x), a simple binary coded GA can be run in the computer according to the following 
step by step procedure:
•	 Step 1. Generate randomly a population of N individuals,
•	 Step 2. Evaluate the fitness function of each individual phenotype,
•	 Step 3. Select a pair of parents with a probability of selection depending of the 
value of the fitness function. One individual can be selected several times,
•	 Step 4.Crossover the selected pair at a randomly selected cutting point with 
probability Pc to form new children,
•	 Step 5. Mutate the two offspring by flipping a bit with probability Pm,
•	 Step 6. Repeat steps 3,4,5 until a new population has been generated,
•	 Step 7. Go to step 2 until convergence.
Algorithm 1 Step by step procedure of a simple EA software
After several generations, one or several highly fitted individuals in the popu-
lation represent the solution of the problem P. The main parameters to adjust for 
convergence are the size N of the population, the length L of the bit string, the prob-
abilities Pc and Pm of crossover and mutation respectively.
In the sequel, examples of optimisation and inverse problems with the use of 
GAs are implemented step by step and results presented in the appendix of the book.
2.5  Mechanics of EAs
EAs share common elements: representation of individuals, fitness function, and 
an iterative selection based on fitness, recombination, mutation, elitism and the di-
lemma between the exploration and exploitation of the search space.
2.5.1  Representation of Individuals
There are many types of representations, the most common being binary and float-
ing point. The binary representation uses a bit string to represent an individual. With 

14
2  Evolutionary Methods
this representation, the real design variables are transformed into binary numbers 
that are concatenated to form a chromosome. This chromosome encodes the total 
number of design variables of the problem. In floating-point representation, a vector 
of real numbers characterizes an individual. In the case of an airfoil shape design, 
for example, design variables are control points for a Béziers or Spline curve that 
generates the aerodynamic shape. It has been reported by different researchers that 
real-coded EAs have outperformed binary-coded EAs in many applications. The 
explanation for this is that in a binary representation the variables are concatenated 
to represent an individual and this results in a big string length which is difficult to 
handle. Another problem is that the binary representation of real design parameters 
presents a difficulty with what is called “hamming cliffs” which is the discrepancy 
between the representation space and the problem space. As a consequence, it is 
difficult for a binary-coded EA to exploit the search in the vicinity of the current 
population. On the other hand, a real-code representation is conceptually closer to 
the real design space and the length of the string vector is equal to the number of 
design variables.
Fitness Function  Similar to the concept of survival of the fittest in nature, EAs 
use a fitness function to evaluate the performance in order to determine the quality 
of the vector string and to define whether the individual is a suitable candidate for 
the next generation. The fitness function is a critical aspect of EAs: a general rule 
is that it should reflect as closely as possible the desired physical behaviour of the 
solution. Examples of fitness functions in aeronautics can be, among others, drag 
minimization, aerodynamic performance or gross weight.
Evaluation of Fitness  Evaluation is the means by which each individual in the 
population is evaluated. This fitness could be in Aerospace Engineering an ana-
lytical function or a complex functional depending of linear or non-linear CFD 
or FEA analysis. For an optimization problem in aeronautics a standard way for 
evaluation can be an Euler or Navier-Stokes CFD analysis that evaluates the flow 
around the airfoil and provides a numerical estimate of lift and drag coefficients, or 
an aero-structural analysis that computes simultaneously aerodynamic performance 
and structural weight used to evaluate the fitness function of a candidate solution.
Selection  Selection is a procedure during which individuals compete and are 
selected to produce offspring for the next generation allowing candidates’ solutions 
to be selected by comparison of their fitness values. Several parent selection tech-
niques have been proposed, but their application is usually problem dependent [4, 
5]. A selection strategy currently used is the “fitness proportional selection”. In this 
case the selection probability of individuals is calculated by dividing their fitness 
values by the sum of all the other finesse values of individuals.
Parents can also be selected by Roulette Wheel selection [4] or Stochastic Uni-
versal Sampling [5]. An individual is selected by spinning the wheel, which is 
divided according to the selection probability. Tournament selection operates by 
choosing some individuals randomly from a population and selecting the best from 
this group to survive in the next generation. Its simplest form is binary selection, 
whereby two random pairs of individuals are selected from the population and the 

15
2.5  Mechanics of EAs
pair with higher fitness is copied to the mating pool or population. Another method 
for selection is ranking, whereby individuals are ranked by their fitness values. The 
best individual receives rank 1; the second receives rank 2 and so on. A selection 
probability is reassigned in accordance with the ranking order.
An appropriate level of selection pressure is critical for the success of the evolu-
tion. Too much pressure applied can generate a loss of diversity, and lead to prema-
ture convergence. This inadequate situation can be explained since the population is 
not infinite and some individuals who are comparatively highly fit but not optimal 
rapidly dominate the population. The basic idea is then to control the number of re-
productive opportunities that each individual has in order to prevent highly fit indi-
viduals taking over the population. On the other hand, if a low selection pressure is 
imposed, the search is ineffective and will require excessive time for convergence.
Recombination  Recombination, also known as crossover, is the procedure in 
which two or more parent individuals (or chromosomes) are combined to produce 
an offspring chromosome (individual). Recombination is necessary in cases when 
an offspring is to have multiple parents, since mutation by itself provides no mixing 
of the chromosomes.
Mutation and Adaptation  The importance of mutation is to keep diversity in 
the population and to expand the search to areas that cannot be represented by the 
current population. Different mutation operators have been proposed. A common 
method is uniform mutation, whereby a random number with probability p is added 
to each component of the individuals [4, 5]. In Gaussian mutation, a number from a 
Gaussian distribution with zero mean is added to each component of the individual 
vector.
Another approach developed by Hansen and Ostermeier [6, 7] uses Covariance 
Matrix Adaption (CMA) and a mutative strategy parameter control (MSC) that is 
applied to the adaptation of all parameters of an N-dimensional normal mutation 
distribution and provides a second-order estimation of the problem topology. Some 
of their results in [6, 7] confirm the efficiency of this approach in stochastic opti-
mization problems.
Elitism  Another important aspect of EAs is the use of an elitist strategy. As the evo-
lutionary procedure with EAs depends on stochastic operators, there is no guarantee 
that there would be a monotonic improvement in the fitness function value. With an 
elitist strategy best individuals are copied to the next generation without applying 
any evolutionary operators.
The Exploration—Exploitation Dilemma  Using EAs, a critical aspect is the bal-
ance between the exploration the search space areas and the exploitation of the 
learned knowledge to progress in the evolution. As these are conflicting objectives, 
EA researchers have developed different alternatives to balance these trade-offs. 
Therefore, when developing or selecting an EA it is important to test the algorithm 
to ensure a good balance between these two criteria and that it possesses capabilities 
for benchmarking different mathematical test functions to test its robustness and 
performance. An area that has shown promising results is using the concept of sub-

16
2  Evolutionary Methods
populations that explores and exploits different regions of the search space and is 
refined as the evolutions progresses.
2.6  Evolution Strategies (ESs)
Evolution Strategies (ESs) are used and explained in different chapters of the book. 
The first version of an ES software introduced by Rechenberg [8] used only two 
individuals, one parent and one offspring. Each individual was real coded; in op-
timization problems all design variables of a chromosome were assigned floating 
point values. The variation operator was applying a random mutation to each float-
ing point value in the parental chromosome to generate the offspring individual. 
The selection operator was entirely deterministic, and was simply the result of a 
competition between parent and offspring to determine which of the both remained. 
In the standard nomenclature this strategy is denoted as the ( 1 + 1) ES, the first 
digit indicating the number of parents, the ‘+’ indicating competition between par-
ents and offspring and the final digit indicating the number of offspring. From the 
very beginning ESs have been designed almost exclusively with real coding, as 
opposed to original GAs variants where real parameter optimisation is a piecewise 
interpretation of the binary chromosome string associated with each individual. An 
evolution strategy was therefore seen as a logical starting point for an evolutionary 
optimisation using real coded problem variables.
Further developments in ESs introduced multi-membered populations for both 
parents and offspring. The first algorithm of this type was the ( μ+1) ES software 
introduced by Schweffel [2]. This generalization was achieved by applying some 
variation operator to the parent population to produce a single offspring. The off-
spring is selected by determining whether it is better than the worst member of μ; 
in such a case it replaces the worst member μ. Both the (1 + 1) ES and the ( μ+1) ES 
approaches used deterministic control of the mutation size (variations applied to 
design variables) which were normally distributed when applied to real coded prob-
lems. Recent developments in both GAs and ESs have greatly modified both their 
variation and selection operators such that it is not clear whether such a nomen-
clature division is nowadays particularly justified. The main difference that exists 
between them today is still the predominance of adaptive mutations in ESs, which 
have made them very attractive for real coded optimisation, although GAs research 
has produced some related concepts.
A representative code of a canonical Evolution Strategy is illustrated in algo-
rithm 1. A population (
o
µ ) is initialized and then evaluated. Then for a number of 
generations ( g ) and as long as a stopping condition (maximum number of func-
tion evaluation or target fitness value) is not met, off springs (
1
+
g
λ
) go recursively 
through the procedure of recombination, mutation, evaluation and selection.
ESs and GAs have distinguishing features according to their evolution model-
ing and representation, but this classification has been blurred as the features of 
one method have been incorporated into other evolutionary methods. For instance, 

17
2.7  Application of EAs to Constrained Problems
some GAs applications and developments gave up the bit string for a floating-point 
representation, ESs used some form of crossover operators for reproduction and Ge-
netic Programming (GP) introduced by Koza [9] were also extended and is not only 
limited to evolution of finite state machines. As there is no longer clear separation 
between these methods, these evolutionary approaches were defined as “Evolution-
ary Computation” (EC) or “Evolution Algorithms” (EAs). Considering this general 
denomination, an EA software (including ESs, GAs and GP) can be defined as 
indicated below in Algorithm 2:
Initialise:  
( )
R
P
 
Evaluate:    ( )
I
R
P
  
g=0  
while stopping condition not met, 
    Recombine:  
( )
J
J
5
UHFR P
O
=
+
  
    Mutate:     
(
)

+ =
J
0
PXW

+
J
5
O
O
  
    Evaluate:   
(
)

+ =
J
I

+
J
0
O
O
  
    Select:    
(
)
O
P
P
+
=
+
VHO
J 
 (plus strategy) or,
               
( )
O
P
VHO
J
=
+
 (comma strategy) 
    g=g+1  
loop
LQLW
Algorithm 2: A canonical Evolution Strategy algorithm
2.7  Application of EAs to Constrained Problems
Engineering problems usually involve a number of constraints due to technical, 
manufacturing, human resources requirements and limitations. It is necessary to 
incorporate and satisfy those constraints in the optimization procedure to obtain a 
realistic design. EAs are unconstrained optimization procedures. Therefore some 
handling techniques have to be introduced to incorporate constraints into fitness 
functions.
Different approaches have been developed in order to satisfy design constraints 
[10]. The use of the penalty function is the most common approach and is based 
on adding penalties to the objective function [11]. When applying a penalty to an 
infeasible individual it is important to determine if it is penalized for simply being 
infeasible or penalized also by some amount due to its infeasibility and the number 
of constraints violated. As reported by different researchers [11, 12], penalties that 
are functions of the distance from feasibility perform better than those that are only 

18
2  Evolutionary Methods
a function of the number of violated constraints. Joines and Houck [13] describe 
static penalties and dynamic penalties. In static penalties, the user defines several 
levels of violation and a penalty coefficient is chosen for each so that the penalty 
coefficient increases as a higher level of violation is reached. The drawback of this 
approach is that it requires a high number of parameters. In dynamic penalties, the 
dynamic function increases as the optimization progresses through generations.
Other methods include annealing penalties that are similar to simulated anneal-
ing in which penalty coefficients are changed once the algorithm is trapped in a 
local optimum. The main problem with this approach is that it is sensitive to the 
values of its parameters and it is difficult to choose an appropriate cooling scheme. 
Adapting penalties work by modifying the penalty based on a feedback from the last 
k generations. The inconvenience with this approach is the selection of the number 
of generations to wait before it can be applied.
The Death penalty is the easiest way to handle constraints and works by reject-
ing infeasible individuals. The main drawback of this approach is the loss of genetic 
information that can be contained in the discarded individual. It can also be lengthy, 
especially in cases where it is difficult to approach the feasible region.
Within an EA these constraints and their treatment are specified by the designer 
and treated by the optimizer. They may take the form of simple upper and low-
er bounds on the object variables, but many more complicated constraints exist 
and then must be satisfied during the optimization procedure. Problems are often 
posed so that only certain combinations of object variables can be considered or 
their bounds are not simply ‘upper’ and ‘lower’ but also ‘not between’ and ‘not if’. 
Object variables merely represent the genotype (numerical representation) of the 
individual, and further constraints will probably exist on the phenotype (physical 
representation) of the individual as well. Such constraints may be imposed on a 
particular solution such as weight, geometry or some other physical characteristics 
which are undesirable. Quite often whether there has been an excursion from the 
phenotypic problem constraints or not, this situation can only be determined after 
the fitness function has been applied, and this may result in slowing overall perfor-
mance of the optimizer.
Two basic methods of handling constraints are considered in this study: the ‘re-
jection’ method and the ‘penalty’ method. The rejection method simply involves 
rejecting any individual that is not compliant with the constraints, by not allowing it 
an opportunity to contest insertion into the main population. The merit of the rejec-
tion method is that no penalty scheme needs to be devised for handling individuals 
that are out of bounds, and therefore only solutions that satisfy the constraints fully 
are admitted. The disadvantage with this approach is that individuals that are close 
to the boundary but not within it are rejected out of hand, even though they may 
contain useful genetic information.
The penalty method involves adding some penalty fitness to f  which (in the 
context of a minimization problem) reduces its fitness with respect to other indi-
viduals in the population, reducing the likelihood that it will be selected next time. 
For example, if a certain solution-dependent value ( s) must be less than a given 
value ( v) a penalty function can be constructed as follows:

19
2.8  Summary of Chapter

(2.1)
where f’ is the (possibly) penalized fitness, f is the original fitness and h (…) is the 
Heaviside function. The advantage of the penalty method is that individuals with 
good genetic material can be allowed to converge from outside the boundary to 
inside the boundary, if possible. In this volume, multi-objective fitnesses are penal-
ised by adding equal values of the penalty to each fitness value. This ensures that 
between two otherwise equal solutions, one which is penalized can never dominate 
one which is not. The disadvantage with the penalty method is of course that the 
penalty function needs to be devised with some care, especially considering the 
case there may be many functions to devise. In the example given, a question of 
weight to choose arises: should a more severe term such as 105( s—v)3 or a less 
severe term such as ¼|s—v| have been used instead. In these cases problem specific 
knowledge is required, so the user must make a ‘best guess’ of the penalty to apply, 
or run a number of cases to gain some experience with the particular case involved. 
Possibly the best compromise will be the use of both rejection and penalty methods 
together, so that rejection is used on solutions that are obviously not feasible and 
will not lead to further improvement, while penalties are applied to solutions that 
show promise, but exceed allowable limits by a small margin. These two methods 
are used throughout in chapters with applications, and they will be referred to as 
‘hard’ (rejection) and ‘soft’ (penalty) bounds respectively.
2.8  Summary of Chapter
This chapter reviews different basic concepts of EAs. It can be noticed that there 
are different methods, architectures and applications of optimization and multi-dis-
ciplinary design optimization methods for solving aeronautical design problems. 
However, further research and investigations into innovative methods such as hy-
bridized EAs with games are still required to master the industrial and academic 
challenges and future needs in Aeronautics and UAV Design. EAs are an alternative 
option to satisfy some of these needs, as EAs with their flexibility (no gradient 
of the objective function(s) required), their particularly adaptability and their easy 
parallelization, have been used for several multi-objective optimization and suc-
cessfully applied to different aeronautical conceptual design problems. Nonethe-
less, EAs face challenges in an industrial level in detailed design (complex and 
expensive mathematical modeling of the environment) due to the computational 
expense involved in optimization procedures and the fact that they require a larger 
number of function evaluations, compared to traditional deterministic techniques. 
Efficiency and quality design of such evolutionary optimizers coupled with game 
strategies are the two major targets developed in the following chapters.
(
) (
)
2
'
.
f
f
h s
v
s
v
=
+
−
−

20
2  Evolutionary Methods
References
  1.	 Mitchell M (1998) An Introduction to genetic algorithms. MIT Press, Cambridge. ISBN 978-
0-262-63185-3 pp. I–VIII, 1–208
  2.	 HP S (1975) Evolution strategie and numerische optimierung, PhD. Thesis. Technische Uni-
versität, Berlin
  3.	 Holland J. (1975) Adaption in natural and artificial systems. The University of Michigan 
Press, Michigan
  4.	 Goldberg D. (1989) Genetic algorithms in search, optimization and machine learning. Addi-
son-Wesley
  5.	 Michalewicz Z. (1992) Genetic algorithms + data structures = evolution programs. Artifical 
intelligence. Springer-Verlag
  6.	 Hansen N, Ostermeier A. (1996) adapting arbitrary normal mutation distributions in evolu-
tion strategies: The covariance matrix adaptation. In: Proceedings of the 1996 IEEE Interna-
tional Conference on Evolutionary Computation, pp 312-317
  7.	 Hansen N, Ostermeier A (2001) Completely derandomised self-adaption in evolution strate-
gies. Evolut Comput 9(2):159–195
  8.	 Rechenberg I (1973) Evolution Strategie: Optimierung technisher Systeme nach Principen 
der biologischen Evolution. Frommann-Holsboog, Stuttgart
  9.	 Koza JR (1992) Genetic programming: on the programming of computers by means of natu-
ral selection. The MIT Press, Cambridge
10.	 Kumar V (1992) Algorithms for constraint-satisfaction problems: a survey. AI Magazine 
13(1):32–44
11.	 Dasgupta D, Michalewicz Z. (1997) Evolutionary algorithms in engineering applications. 
Springer-Verlag
12.	 Richardson JT, Palmer MR, Liepins G, Hilliard M. (1989) Some guidelines for genetic al-
gorithms with penalty functions-incorporating problem specific knowledge into genetic al-
gorithms. In: Schaffer JD (ed) Proceedings of the Third International Conference on Genetic 
Algorithms, pp 191–197, George Mason University. Morgan Kaufmann.
13.	 Joines JA, Houck CR. (1994) On the use of non-stationary penalty functions to solve nonlin-
ear constrained optimization problems with GA’s. In: International Conference on Evolution-
ary Computation, pp 579–584

21
Chapter 3
Multi-Objective EAs And Game Theory
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_3
3.1  Generalities
The traditional way to address the problem of multiple objective optimization is to 
associate a scalar objective, generally obtained through some linear combination of 
weighted objectives. Such an approach may be of interest in some cases—particu-
larly if the weight of each criterion is known beforehand—but besides its ad hoc 
character, it has several drawbacks since there is a loss of information and a need to 
define the weights associated to each objective. Moreover, the behavior of the al-
gorithm is very sensitive and is biased by the values of these weights. Schaffer was 
the first to propose a Genetic Algorithm approach in 1985 for multiple objectives 
through his Vector Evaluated Genetic Algorithms (VEGA [1]), but it was biased to-
wards the extrema of each objective. Goldberg proposed a solution to this particular 
problem with both non-dominance Pareto-ranking and sharing, in order to distribute 
the solutions over the entire Pareto front [4]. All of these approaches are based on 
Pareto ranking and use either sharing or mating restrictions to ensure diversity. In 
the following, section we discuss a Pareto-based multi -objective algorithm inspired 
which is a cooperative approach which gives a whole set of non-dominated solu-
tions—the Pareto front.
Another non-cooperative multiple objective algorithm based on the notion of 
Nash equilibrium and hierarchical Stackelberg games. We also describe the con-
cept of hybridized games with Genetic Algorithms and presents some mathematical 
functions to evaluate performances of hybridized games.

22
3  Multi-Objective EAs And Game Theory
3.2  Definition of A Mult- Objective Problem
Engineering design problems often require a simultaneous optimization of insepa-
rable objectives and associated number of constraints. A multi-criteria optimization 
problem can be formulated as:

(3.1)
Subject to constraints:

(3.2)
where fi are the objective functions, N is the number of objectives and x is an N-
dimensional vector where its arguments are the decision variables and g h
j
k
,
 are 
equality and inequality constraints respectively.
There are many variants and developments of multi-objective approaches: these 
include the lexicographic approach, traditional aggregating functions, Pareto, Nash 
and Stackelberg game approaches [2, 3]. These concepts are extended and applied 
in combination with EAs in the following sections.
3.3  Cooperative Games: Pareto Optimality
The main interest of a Pareto based evolutionary algorithm is that the optimization 
procedure does not have to combine its objectives. It derives the fitness values of 
the candidate solutions directly from the comparison of their respective objective 
vectors.
A common way to represent the solution to a multi-objective problem is by the 
use of the concept of Pareto optimality or non-dominated individuals [4]. Figure 3.1 
shows the Pareto optimality concept for a problem with two conflicting objectives. 
A solution to a given multi-objective problem is the Pareto optimal set, found using 
a cooperative game which computes the set of non-dominated solutions. This spans 
the complete range of compromised designs between the two objectives. Most real 
world problems involve a number of inseparable objectives where there is no unique 
optimum, but a set of compromised individuals known as Pareto optimal (or non-
dominated) solutions. We use the Pareto optimality principle where a solution to a 
multi-objective problem is considered Pareto optimal if there are no other solutions 
that better satisfy all the objectives simultaneously. The objective of the optimiza-
tion is then to provide a set of Pareto optimal solutions that represent a trade-off of 
information amongst the objectives.
For a minimization problem, a vector x1 is said to be partially less than vector x2 
if and only if:

(3.3)
In this case the solution x1 dominates the solution x2.
:
( )
1
i
Minimise
f x
i
N
= …
( )
0
1
( )
0
1
,
j
k
g
x
j
M
h x
k
K
=
=
≤
=
…
…
1
2
1
2
:
(
)
(
)
:
(
)
(
).
i
i
i
i
i
i
f x
f x
and
f x
f x
∀
≤
∃
<

23
3.4  Competitive Games: Nash Equilibrium
As EAs consider multiple points simultaneously, they are capable of finding a 
number of solutions in a Pareto set. Pareto selection ranks the population and se-
lects the non-dominated individuals for the Pareto front. A comprehensive theory, 
literature review and implementation of Multi-objective EAs (MOEAs) including 
the NSGAII and VEGA algorithms is given by Deb in reference [3].
3.4  Competitive Games: Nash Equilibrium
When dealing with multiple objective optimization, Pareto GAs have now become 
a sort of standard in design environments. With the introduction of non-dominance 
Pareto-ranking and sharing (in order to distribute the solutions over the entire Pa-
reto front) the Pareto GAs are a very efficient way to find a wide range of solutions 
to a given problem. However, another multiple objective optimization approach, 
this time a non-cooperative one, was introduced by John F. Nash in the early 50s 
[5] this approach introduced the notion of Nash players and aimed at solving mul-
tiple objective optimization problems originating from Game Theory in Politics and 
Economics.
Fig. 3.1   Pareto optimality
 

24
3  Multi-Objective EAs And Game Theory
3.4.1  Definition of Nash Equilibrium
Nash optima define the solution of a non-cooperative multiple objective optimi-
zation approach first proposed by J. F. Nash [5]. Since it originated from Game 
Theory, the notion of a player is often used and we will use it in the sequel. During 
a Nash game, the two players choose their best strategies according to the one de-
cided by the other player to improve their own criteria (their gain). For an optimiza-
tion problem with n objectives, a Nash strategy is a symmetric game which consists 
in having n players, each optimizing its own criterion. However, each player has to 
optimize his criterion given that all the other criteria are fixed by the rest of the play-
ers. When no player can further improve his criterion, it means that the system has 
reached a state of equilibrium called Nash Equilibrium. For a set of two variables x 
and y, let E be the search space for the first criterion and F the search space for the 
second criterion.
A strategy pair ( , )
x y
E
F
∈
×
  is said to be a Nash equilibrium if and only if:

(3.4)

(3.5)
The definition of a Nash equilibrium may also be generalized to N players. In this 
case, a solution u
u
um
=
…
(
,
)
1
 with, u the total number of variables, is a Nash equi-
librium if and only if: ∀∀
i
vi
,
,
where fi  is the optimization criterion for player i.
With classical optimization approaches, Nash Equilibria are very difficult to 
find. It is generally easier to prove that a given solution is a Nash Equilibrium, but 
exhibiting such a solution may prove to be very hard. And it becomes almost impos-
sible if the criteria are non-differentiable functions. The next section will show that 
GAs offer an elegant alternative.
3.4.2  Coupling Nash Games and GAs
The approach that combines GAs with a Nash strategy was first presented in [6]. 
The merger can be achieved with two (2) players trying to optimize two (2) differ-
ent objectives. Of course, it is possible to consider n players optimizing n criteria, 
as presented in the previous section. But for the sake of clarity, we will restrict 
ourselves to n = 2.
Let s = XY be the string representing the potential solution for a bi-objective op-
timization problem. X corresponds to the subset of variables handled by Player-1, 
and optimized using criterion 1. Y corresponds to the subset of variables handled 
by Player-2 and optimized using criterion 2. Thus, as introduced by Nash theory, 
f
x y
f
x y
E
x E
E
( , )
inf
( , ),
=
∈
f
x y
f
x y
F
y F
F
( , )
inf
( , ).
=
∈
f u
u
u u
u
f u
u
v v
v
i
i
i
i
m
i
i
i
i
m
(
,
,
,
,
.,
)
(
,
,
,
,
.,
)
1
1
1
1
1
1
…
…
≤
…
…
−
+
−
+

25
3.4  Competitive Games: Nash Equilibrium
Player-1 optimizes s with respect to the first criterion by modifying X, while Y is 
fixed by Player-2. Symmetrically, Player-2 optimizes s with respect to the second 
criterion by modifying Y while X is fixed by Player-1.
Then the next step consists in creating two different populations, one for each 
player. Player-1’s optimization task is performed by population 1 whereas Player-2’s 
optimization task is performed by population 2. Let X k−1 be the best value found by 
Player-1 at generation k− 1, and Yk−1 the best value found by Player-2 at generation 
k − 1. At generation k, Player ~ 1 optimizes Xk while using Y k−1 in order to evaluate 
s (in this case, s = Xk Yk −1). At the same time, Player-2 optimizes Yk while using Xk 
− 1 (s = Xk−1 Yk). After running the optimization procedure, Player-1 sends the best 
value Xk to Player-2 who will use it at generation k + 1. Similarly, Player-2 sends 
the best value Xk to Player-1 who will use it at generation k + 1. Nash equilibrium 
is reached when neither Player-1 nor Player-2 can further improve their criteria.
The repartition of design variables between the players (i.e. which player should 
optimize which variable?), depends on the structure of the problem. If the problem 
has n criteria and n variables, it is straightforward that each player should optimize 
one different variable. However, for problems dealing with more optimization vari-
ables than criteria, players must share among themselves the variables. The reparti-
tion may be arbitrary, but in most real-life problems, the physics of the problem is 
likely to suggest a way to split those variables.
As described in Chap. 2, Genetic Algorithms possess robustness for the capture 
of the global solution of multi-modal optimization problems. On the other hand 
Nash games can be used for design under conflict and Stackelberg games for hier-
archical design. Therefore it is quite natural to combine the two approaches, a Nash 
Game with GAs or a Stackelberg game with GAs in order to solve multi-criteria de-
sign optimization problems either under conflict or with a hierarchy between them. 
The resulting decentralized optimization can be considered as a set of decision 
maker algorithms for real design in aerospace engineering well suited to distributed 
parallel computing environments.
In a Nash game, each player uses a GAs to improve his own criterion along gen-
erations constrained by strategies of the other player. In applications, design vari-
ables—with their territory—are geometrically split between players who exchange 
symmetrically their best strategies (best chromosomes) at each generation. Such a 
procedure is continued until no player can further improve its criterion. At this stage 
the system has reached the Nash equilibrium. One of the evident properties of Nash/
GAs is their inherent parallel structure during evolution.
A flow chart of a Nash-GAs is shown in Fig. 3.2. Let S = XY be the string rep-
resenting the potential solution for a dual objective optimization, where X corre-
sponds to the first criterion and Y to the second criterion. Player-1 optimizes X ( Y 
is fixed by Player 2) and Player 2 optimizes Y ( X is fixed by Player-1). Each player 
has his own GAs with population. Nash equilibrium is reached when neither player 
can further improve its criterion (see [6] for more details).

26
3  Multi-Objective EAs And Game Theory
3.4.3  Generalization to N Nash Players
The generalization of this approach to players derives naturally from the case with 
two (2) players. Let us consider players optimizing a set of function objectives. The 
optimization variables are distributed among the players, in such a way that each 
player handles a subset of the set of optimization variables. Let {AU????—X and 
Y??} be the optimization variables (each can consist of a set of several variables). 
The Nash GAs will then work by using different populations. The first population 
will optimize using criterion 1 while all the other variables will be fixed by players. 
Population 2 will optimize using criterion 2 while all the other variables are fixed 
by players, and so on. The different players still have to send each other information 
about their best (elitist) result after each generation (Fig. 3.3).
This setting may be compared to the so-called Island Model in Parallel Genetic 
Algorithms (PGAs) introduced by H. Muhlenbein et al. [7]) mimicking the ability 
of bird populations to survive on islands in comparison with mainlands. However, 
there is a fundamental difference in the sense that PGAs use the same criterion for 
each sub-population whereas Nash GAs use different criteria (thus introducing the 
notion of equilibrium).
The authors first developed Nash GAs with binary-coded GAs to solve com-
binatorial discrete problems. But for the examples presented, a version based on 
real-coded GAs was used. Therefore in the following sections, each player evolves 
by a real-coded GA, using a non-uniform mutation scheme. A distance-dependent 
mutation is also used, a technique allowing diversity to be maintained in small 
Fig. 3.2   Nash/ GA flowchart
 

27
3.5  Hierarchical Game: Stackelberg
populations. Instead of a fixed mutation rate, each offspring has its mutation rate 
adjusted after each mating. This mutation rate depends on the distance between the 
two parents (for more details, see [8]).
3.5  Hierarchical Game: Stackelberg
A Stackelberg equilibrium is the solution of a hierarchical game (also competitive 
game), which can be found in Loridan P. and Morgan J. [9]. A Stackelberg game has 
a non-symmetrical structure with completely different roles of players. For instance 
in the case of an optimization problem with two criteria, Nash and Stackelberg 
games are implemented with two players, each player is in charge of one criterion 
and chooses his best decision in a rational reaction set. The players associated to a 
Nash game have a symmetric role, while for a Stackelberg game, the leader-follow-
er roles of players are hierarchically defined.
A two-player Stackelberg equilibrium can be characterized as follows: Suppose 
A denotes the search space of first player—the leader, and B the search space of 
second player—the follower, then a strategy pair ( *, *)
x
y
A
B
∈
×
 is a Stackelberg 
equilibrium if and only if:

(3.6)
f
x
y
f
x y
A
x A
A
( *, *)
inf
( , *),
=
∈
Fig. 3.3   A coupled Nash- EAs algorithm
 

28
3  Multi-Objective EAs And Game Theory
where f A  denotes the gain of the first player, y *  is the solution of the following 
minimization problem with respect to the y decision variable:

(3.7)
where fB  denotes the gain of second player, and x  the design variable value re-
ceived by the first player.
3.5.1  Coupling a Stackelberg Game with GAs
The GA implementation of a Stackelberg game with two players is described in 
Fig. 3.4. Let denotes by S = XY, {AU: IT IS NOT CLEAR WHAT IS DENOTED BY 
WHAT.} X and Y are the strategy set of first player and second player respectively 
(the first player being the leader and the second player the follower. For each indi-
vidual x  frozen of the leader’s decision set, the follower searches the correspond-
ing Y *  to improve his gain. Once all individuals of the leader’s decision set have 
received the corresponding Y * values, then the leader changes X to improve his 
gain. This numerical procedure is repeated until the leader can no longer improve 
his gain, this means that such a system reaches a Stackelberg equilibrium. It will be 
noticed that the two GAs of the follower and the leader are respectively embedded.
3.6  Comparison of Analytical Solutions and Numerical 
Game Solutions for Solving a Two Mathematical 
Functions Minimisation Problem
Let us consider a game with 2 players A and player B, with the following objective 
functions:

(3.8)
f
x y
f
x y
with x frozen from leader
B
y B
B
( , )
inf
( , )
,
=
∈
f
x y
x
x
y
f
x y
y
x
y
A
B
( , )
(
)
(
)
( , )
(
)
(
)
.
=
−
+
−
=
−
+
−






1
3
2
2
2
2
Fig. 3.4   A Stackelberg—GAs flowchart
 

29
3.6  Comparison of Analytical Solutions and Numerical Game Solutions …
3.6.1  Analytical Solution
The mathematical definition of a Nash equilibrium described above is not very 
practical to use. One possible way to find a Nash equilibrium is to use the notion of 
rational reaction set. Let DA be the rational reaction set for A, and DB the rational 
reaction set for B.
An intuitive insight on rational reaction sets is that they are the set of the best solu-
tions a player can achieve in the face of different strategies of his opponent.
DA and DB can be built by finding the x and y values that satisfy the following 
equations:
The Nash Equilibrium is the intersection of the two rational reaction sets DA and DB.
If we go back to the example we have presented, the rational reaction set DA is 
the solution of the equation:
which gives
It follows that the rational reaction set DA is the line y = 2x −1. The second rational 
reaction set DB is defined by the solution of the equation:
Hence, the rational reaction DB is the line y
x
=
+ 3
2
.
,
 
 
,
( , ),
,
 
 
 
,
( , ).
A
A
A
B
B
B
D
x y
A
Bsuch as f
x y
f
x y
D
x y
A
B such as f
x y
f
x y
→
−
−
→
→
−
−
→


=
∈











×
≤






=
∈×
≤




D
x
f
x y
x
D
y
f
x y
y
A
A
B
B
=
∂
∂
=


=
∂
∂
=
















|
( , )
|
( , )
0
0 

.
∂
∂
=
f
x y
x
A( , )
0
∂
∂
=
⇔
−
+
−
=
⇔
=
−
f
x y
x
x
x
y
y
x
A( , )
(
)
(
)
.
0
2
1
2
0
2
1
∂
∂
=
f
x y
y
B( , )
,0
∂
∂
=
⇔
−
−
−
=
⇔
=
+
f
x y
y
y
x
y
y
x
B( , )
(
)
(
)
.
0
2
3
2
0
3
2

30
3  Multi-Objective EAs And Game Theory
Since the Nash Equilibrium is the intersection of the two rational sets, it can be 
determined by solving the system:
which means that the Nash Equilibrium is the point
3.6.2  Nash/Gas and Stackleberg/Gas Numerical Solutions
A similar numerical two-objective optimization is performed using the Nash/GAs 
approach.
Figure 3.5 shows the evolution of the best chromosome for the two populations. 
Population 1 which optimizes criterion fA converges towards 0.88. Population 2 
which optimizes criterion fB converges towards 0.88 as well. Both populations con-
verge after only 50 generations.
y
x
y
x
y
x
y
x
y
=
−
=
+



⇒
=
−
=



⇒
=
=






2
1
3
2
2
1
3
7
5
3
7
3
,
5
3
7
3
1 66
2 33










= 



.
.
.
Fig. 3.5   Computed Nash equilibrium
 

31
Those values seem to be different from the ones found analytically, but this is 
because the figure shows the optimization process on the objective space. We can 
easily check that:
The point 0 88
0 88
.
.



 is actually the point 
f
f
A
B
1 66
2 33
.
.
(
)
(
)



 in the plan of the criteria, which 
means that we actually find the right point 0 88
0 88
.
.



 in the plan ( x, y).
Note: if the objective functions fA and fB are permuted, with player A still han-
dling x and player B still handling y, then the Nash equilibrium is not a single point. 
The analytical solution yields the line x = y and the different runs of the algorithm 
converge towards different points on that line.
The analytical and differentiable functions selected above are still selected to 
compare solutions of multi-objective optimizations through Nash/GAs and Stackel-
berg/GAs approaches as follows:

(3.9)
The optimization problems are to minimize F1 and F2 in search space 
[
]
,
5,5
x y ∈−
 
using Nash/GAs and Stackelberg/GAs in a two-player game with which the global 
search space will be decomposed into two parts and each player takes one. With the 
Nash/GAs approach, the two players have a symmetrical role during the game, but 
a non-symmetrical nested role in the Stackelberg/GAs approach.
The analytical solutions for Nash and Stackelberg strategies could be calculated 
according to the mathematical definition of the game, and are shown in Table 3.1.
The numerical solutions are obtained using Nash/ GAs and Stackelberg/ GAs 
approaches, and shown on Table 3.1. It can be noticed that numerical solutions with 
GAs agree quite well with analytical solutions.
Figure 3.6 shows the solution trace during the GAs optimization procedure. In 
the case of a Stackelberg strategy, different leader definitions provide different op-
timal solutions, and these solutions are different from the Nash equilibrium. Finally 
Fig. 3.7 shows a comparison of convergence history of different optimization strate-
gies reached after twenty five (25) generations.
f
and f
A
B
5
3
7
3
0 88
5
3
7
3
0 88
,
.
,
.
.



=



=
F
f
x
x
y
F
f
y
x
y
x y
1
1
2
3
5
5
1
2
2
2
2
2
:
(
)
(
)
:
(
)
(
)
,
.
=
−
+
−
=
−
+
−
−
≤
≤



3.6  Comparison of Analytical Solutions and Numerical Game Solutions …

32
3  Multi-Objective EAs And Game Theory
3.7  Hybridized Games
The Hybrid-Game uses the concepts of Nash-game and Pareto optimality and hence 
it can simultaneously produce Nash-equilibrium and a set of Pareto non-dominated 
solutions. The reason for implementation of Nash-game is to speed up the search for 
one global solution or the capture of a Pareto Front. The elite design variables from 
a Nash-game are seeded to a Pareto-game at every generation. Each Nash-Player 
has its design criterion using his own optimisation strategy. The shape of hybrid 
Nash-HAPEA topology (Hierarchical Asynchronous Parallel Evolution Algorithm) 
is a top view of a trigonal pyramid as shown in Fig. 3.8. More details in this section 
can be found in Lee [10].
Fig. 3.6   Nash and Stackelberg Game solutions reaching equilibrium
 
Table 3.1   Analytical and numerical results: a comparison
Nash
Stackelberg
F1 leader
F2 leader
X
1.666625
1.399945
1.799998
Y
2.333309
2.200030
2.600001
F1
0.888857
0.800092
1.280001
F2
0.888943
1.280002
0.800004
Analytical result
X = 5/3
X = 1.4
X = 1.8
Y = 7/3
Y = 2.2
Y = 2.6
F1 = F2 = 8/9
F1 = 0.8
F1 = 1.28
F2 = 1.28
F2 = 0.8

33
3.7  Hybridized Games
Fig. 3.7   Comparison of convergence
 
Fig. 3.8   Hybridized games
 

34
3  Multi-Objective EAs And Game Theory
It can be seen that the optimiser consists of three Nash players with one Pareto 
player. Each Nash player is located in a symmetrical array at 60° (Line 1, Line2 and 
Line 3). Each Nash player can have two hierarchical sub-players. As an example, 
the problem considers 6 design variables (DV1 to DV6). The distributions of design 
variable are; Nash-Player1 (black circle) only considers black square design com-
ponents (DV1, DV4), and DV2 and DV5 are considered by Nash-Player 2 (blue 
circle). Nash-Player 3 considers DV3 and DV6. The Pareto player considers the 
whole design variable span (DV1 to DV6).
The Pareto-Player and multi-fidelity Nash sub-players are optional. For instance, 
the Pareto-Player will be used if the problem considers multi-objective or multi-
disciplinary design optimisation. However the Pareto-Player will not be used if the 
problem considers a reconstruction or inverse design optimisation problem since 
Pareto fronts are not required. The multi-fidelity Nash sub-players will be not used 
if the problem requires more than four Nash-Players.
The topology of hybrid Nash-HAPEA is flexible; if there are four Nash players 
then the shape will be a quadrangular pyramid.
3.7.1  Algorithms for HAPMOEA and Hybridized Games
The algorithms for HAPMOEA and Hybrid-Game are described on Figs. 3.9 and 
3.10 where it is assumed that the problem considers the fitness function f = min (x1, 
x2, x3). The validation of Hybrid-Game and HAPMOEA can be found in [10]. The 
reader will consult Chap. 4 for the definition of HAPMOEA.
6WHS 'HILQHSRSXODWLRQVL]HDQGQXPEHURIJHQHUDWLRQIRUKLHUDUFKLFDOWRSRORJ\QRGHWRQRGH
GLPHQVLRQRIGHFLVLRQYDULDEOHV[ [[DQGWKHLUGHVLJQERXQGVPRGHOTXDOLW\OD\HUQRGH
KLJKOD\HUQRGHQRGHLQWHUPHGLDWHOD\HUQRGHWRQRGHORZ
6WHS ,QLWLDOL]HVHYHQUDQGRPSRSXODWLRQVIRUQRGHWRQRGH
ZKLOHWHUPLQDWLRQFRQGLWLRQJHQHUDWLRQRUHODSVHGWLPHRUSUHGHILQHGILWQHVVYDOXH
6WHS *HQHUDWHRIIVSULQJXVLQJPXWDWLRQRUUHFRPELQDWLRQRSHUDWLRQV
6WHS (YDOXDWHRIIVSULQJFRUUHVSRQGLQJWRILWQHVVIXQFWLRQV
6WHS (YDOXDWHRIIVSULQJIRUHDFKQRGHLQWHUPVRIKLJKLQWHUPHGLDWHORZ
6WHS 6RUWHDFKSRSXODWLRQIRUHDFKQRGHEDVHGRQLWVILWQHVV
6WHS 5HSODFHEHVWLQGLYLGXDOLQWRQRQGRPLQDWHGSRSXODWLRQRIHDFKQRGH (QG
6WHS 'HVLJQDWHUHVXOWV3DUHWRRSWLPDOIURQWREWDLQHGDWQRGHRQWKHILUVWOD\HUSUHFLVHPRGHO
IRUPXOWLREMHFWLYHGHVLJQSUREOHPRWKHUZLVHSORWFRQYHUJHQFHRIRSWLPL]DWLRQEDVHGRQEHVWVRIDU
LQGLYLGXDO
6WHS  3RVWRSWLPL]DWLRQSURFHGXUHIRULQVWDQFHDQRSWLPL]DWLRQSUREOHPFRQVLGHULQJDHURG\QDP
LFZLQJGHVLJQWKHQ0DFKVZHHSZLOOEHSORWWHGFRUUHVSRQGLQJWRREMHFWLYH&'&/ RU/'
Fig. 3.9   Pseudo-code of HAPMOEA algorithm
 

35
Fig. 3.10   Flow chart code of HAPMOEA algorithm
 
3.7  Hybridized Games

36
3  Multi-Objective EAs And Game Theory
The HAPMOEA has eight (8) main steps as follows:
The hybrid Pareto-Nash method has eight main steps as shown in Figs. 3.11 and 
3.12:
Numerical examples of optimization problems using Hybridized Games are im-
plemented and discussed in Chap. 4.
6WHS 'HILQHSRSXODWLRQVL]HDQGQXPEHURIJHQHUDWLRQIRU1DVK3OD\HUV13OD\HU1
3OD\HU13OD\HUDQG3DUHWR3OD\HU33OD\HUGLPHQVLRQRIGHFLVLRQYDULDEOHV[[[
DQGWKHLUGHVLJQERXQGV6SOLWGHFLVLRQYDULDEOHVIRUHDFKSOD\HU13OD\HU [13OD\HU
[13OD\HU [33OD\HU[[[
6WHS ,QLWLDOL]HUDQGRPSRSXODWLRQIRUHDFKSOD\HU
ZKLOHWHUPLQDWLRQFRQGLWLRQJHQHUDWLRQRUHODSVHGWLPHRUSUHGHILQHGILWQHVVYDOXH
6WHS *HQHUDWHRIIVSULQJXVLQJPXWDWLRQRUUHFRPELQDWLRQRSHUDWRUV
6WHS (YDOXDWHRIIVSULQJFRUUHVSRQGLQJWRILWQHVVIXQFWLRQV
6WHS(YDOXDWHRIIVSULQJLQ1DVK*DPH
13OD\HUXVH[ZLWKGHVLJQYDULDEOHV[[IL[HGIRU13OD\HUDQG13OD\HU
13OD\HUXVH[ZLWKGHVLJQYDULDEOHV[[IL[HGIRU13OD\HUDQG13OD\HU
13OD\HUXVH[ZLWKGHVLJQYDULDEOHV[[IL[HGIRU13OD\HUDQG13OD\HU
6WHS (YDOXDWHRIIVSULQJIRU33OD\HU
LIWKHILUVWRIIVSULQJDWHDFKJHQHUDWLRQLVFRQVLGHUHG
HOVH
HQG
33OD\HUXVHHOLWHGHVLJQ[[[REWDLQHGE\1DVK*DPHDW6WHS
33OD\HUXVH[[[REWDLQHGE\PXWDWLRQRUUHFRPELQDWLRQRSHUDWRUDVGHIDXOW
6WHS 6RUWHDFKSRSXODWLRQIRUHDFKSOD\HUEDVHGRQLWVILWQHVV
6WHS 5HSODFHWKHQRQGRPLQDWHGLQGLYLGXDOLQWRWKHEHVWSRSXODWLRQIRU33OD\HU
6WHS 'HVLJQDWHUHVXOWV
33OD\HU3ORW3DUHWRRSWLPDOIURQWIRUPXOWLREMHFWLYHGHVLJQSUREOHPRWKHUZLVHSORWFRQYHU
JHQFHRIRSWLPL]DWLRQEDVHGRQEHVWVRIDULQGLYLGXDO
1DVK*DPHSORW1DVKHTXLOLEULXPREWDLQHGE\13OD\HU13OD\HU13OD\HU
6WHS 3RVWRSWLPL]DWLRQSURFHGXUHLIIRULQVWDQFHRSWLPL]DWLRQSUREOHPFRQVLGHUVDHURG\
QDPLFZLQJGHVLJQWKHQ0DFKVZHHSZLOOEHSORWWHGFRUUHVSRQGLQJWRREMHFWLYH&'&/RU
/'
Fig. 3.11   Pseudo-code for hybridized game algorithm
 

37
Fig. 3.12   Flow chart for hybridized game algorithm
 
3.7  Hybridized Games

38
3  Multi-Objective EAs And Game Theory
3.8  Summary of Chapter 3
This chapter shows simple examples how a multi-objective problem can be solved 
using different Game Strategies. The first section showed a cooperative Pareto 
game based multi-objective algorithm inspired by the Non-Dominated Sorting Ge-
netic Algorithm (NSGA) while the second section is focused on competitive Nash 
games. Solutions of a two-objective optimization model problem are computed us-
ing different Pareto, Nash and Stackelberg games and also game coalitions. The 
concept of hybridized game uses dynamically the concept of a Nash-game and Pa-
reto optimality and hence it can simultaneously produce Nash-equilibrium and a set 
of Pareto non-dominated solutions [10, 11]. The innovative idea for implementing a 
dynamic Nash-game during a Pareto optimization is driven by an accelerated search 
of global solutions.
References
  1.	 Schaffer JD (1985) Multiple objective optimization with vector evaluated genetic algorithms, 
pages 93.100. Lawrence Erlbaum Associates, Carnegie-Mellon
  2.	 Coello-Coello C, Van Veldhuizen Da, Lamont GB (2002) Evolutionary algorithms for solv-
ing multiobjective problems. Kluwer, New York
  3.	 Deb K. (2003) Multi-objective optimization using evolutionary algorithms. Wiley, Hoboken
  4.	 Pareto V (1896) Cours d’economie politique. Rouge, Lausanne
  5.	 Nash JF (1950) Equilibrium points in N-person games. Proc Natl Acad Sci U S A 36:46–49
  6.	 Sefrioui M, Periaux J (2000) Nash genetic algorithms: examples and applications. In Pro-
ceedings of the 2000 Congress on Evolutionary Computation CEC00, pages 509-516, La 
Jolla Marriott Hotel La Jolla, California, USA, 6–9 July 2000. IEEE Press
  7.	 Mühlenbein H, Schomisch M, Born J (1991) The parallel genetic algorithm as function opti-
miser. Parallel Comput 17(6–7):619–632
  8.	 Sefrioui M (1998) Algorithmes Evolutionnaires pour le Calcul Scientifique. Application 
à l’Electromagnétisme et à la Mécanique des Fluides Numériques. PhD thesis, University 
Pierre et Marie Curie, Paris
  9.	 Loridan P, Morgan JA (1989) Theoretical approximation scheme for stackelberg games. J 
Optim Theory Appl 61(1):95–110. Plenum Press, New York
10.	 Lee DS, Gonzalez LF, Periaux J (2010) UAS mission path planning system (MPPS) us-
ing hybrid-game coupled to multi-objective design optimizer. J Dyn Syst Measure Control. 
doi:10.1115/1.4001336
11.	 Lee DS (2006) Uncertainty based multi-objective and multidisciplinary design optimisation 
in aerospace engineering. PhD Thesis, School of Aerospace, Mechanical and Mechatronic 
Engineering, J07 University of Sydney, NSW, Australia

39
Chapter 4
Advanced Techniques for Evolutionary 
Algorithms (EAs)
© Springer Science+Business Media B.V. 2015 
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_4
4.1  Generalities
One of the main drawbacks of EAs is the CPU time needed due to many expensive 
fitness or objective function evaluations of candidate solutions. For this reason it 
is necessary to introduce advanced techniques. This chapter describes techniques 
including distributed and parallel EAs, hierarchical EAs, asynchronous EAs, ad-
vanced mutation operators as well as game strategies and hybridized games. All 
these techniques aim to increase diversity and speed up the search for optimal solu-
tions.
4.2  Distributed and Parallel EAS
EAs are particularly well suited to parallel computing, as candidate individuals 
or populations are sent to remote machines for evaluation. The most common ap-
proach for parallelisation is global Parallel EAs (PEAs). Such an approach consists 
of a well known master- slave implementation whereby the master controls the 
process and sends individuals to solver nodes where their fitness is evaluated by 
processors (slaves). The master collects the results and applies evolutionary opera-
tors to produce the next generation of EAs.
Instead of relying on a single large population, PEAs use a network of intercon-
nected small populations, thus defining a paradigm called the Island model intro-
duced by H. Muhlenbein [1]. Figure 4.1 shows such a model, with the yellow area 
corresponding to a node (or sub-population) and its connections to its neighbours. 
The idea is that each of these sub- Populations will evolve independently for a given 
period of time (or epoch). After each epoch, a period of migration and information 
exchange takes place, before the isolated computation resumes.
Figure 4.2 shows that this approach allows different subpopulations to explore 
different regions of the search space during the isolation stage. Yet, the most prom-

40
4  Advanced Techniques for Evolutionary Algorithms (EAs)
ising solutions are shared by the whole set of sub-populations in sending them to 
neighbours.
The main idea considers a number of small, interconnected, sub-populations in-
stead of a single large population; these sub-populations evolve independently on 
each node for a time or period called an “epoch”. After each epoch a period of mi-
gration and information can be exchanged between nodes, after which successive 
new periods of isolation occur.
With this approach sub-populations can explore different regions of the search 
space; by doing this the robustness of the PEAs improves and it is easier doing so 
to escape from local minima. Another common approach is to preserve the global 
population while parallelising the EA operators that are restricted to neighbouring 
individuals. This is considered an extension to the second approach and is catego-
rised as a cellular EA. Details on PEAs methods can be found in Veldhuizen et al. 
[2] and Cantu-Paz et al. [3, 4].
Fig. 4.2   Isolation and migration stages
 
Fig. 4.1   Parallel EAs
 

41
4.3  Hierarchical EAS (HEAs)
4.3  Hierarchical EAS (HEAs)
Hierarchical Genetic Algorithms (HGAs) or more generally, Hierarchical EAs 
(HEAs), are a particular approach developed by Sefrioui and Périaux [5]. This ap-
proach uses a hierarchical topology for the layout of the sub-populations. Figure 4.3 
illustrates this concept. The bottom layer can be entirely devoted to exploration, the 
intermediate layer is a compromise between exploitation and exploration and the 
top layer exploits refinement of solutions.
The main feature is the interaction between the multi-layers. The best solutions 
progress from the bottom layer to the top layer where they are refined. This circula-
tion of solutions up and down the “tree” works as a speed up procedure if each node 
can be handled by a different EAs where specific parameters can be tuned. In other 
words, the nodes of each layer have different tasks, defined by their associated EAs:
1.	 The top layer concentrates on refining solutions. This can be achieved by tuning 
the EAs in a way that proceeds with very small steps between successive cross-
over and mutation operations.
2.	 The intermediate layer is a compromise between exploitation and exploration.
3.	 The bottom layer is entirely devoted to exploration. That means that the EAs can 
use large mutations in the search space.
Fig. 4.3   Hierarchical multi-population/multi-fidelity topology
 

42
4  Advanced Techniques for Evolutionary Algorithms (EAs)
All the nodes of the bottom layer 3 can use a less accurate but fast model to compute 
the fitness function of the individuals of the sub-populations. Even though these 
solutions may be evaluated rather roughly, the hierarchical topology allows their 
genetic material information content to be used. As these solutions are sent up to the 
intermediate layer during the migration phase, they are re-evaluated using a more 
precise model to give a more accurate representation of the actual quality of the 
solution. However, the model used on layer 2 is also an approximate model, being 
chosen deliberately not too precise for the sake of speed. The procedure is repeated 
again by sending the solutions up to the top layer during the migration process. 
These solutions are re-evaluated with the model of the top layer 1, the most precise 
model that provides a genuinely accurate value for the fitness function.
For a practical numerical implementation, this hierarchical model is described 
below:
Layers
Description
First layer
Concentrates on refining solutions, which can be achieved by tuning the EA in 
a way that makes mutation take very small steps. This layer incorporates the 
most precise formulation of the high fidelity solver or the finest resolution
Second layer
Is a compromise between exploitation and exploration. This layer incorporates 
an intermediate approximation of the solver or the resolution
Third layer
Entirely devoted to exploration which means that the EAs can make a large 
steps in the search space. This layer includes a middle/low fidelity solver or a 
less precise resolution
Whitney et al. [6–8] tested the performance of a traditional EA, Hierarchical EA 
with one single model and a Hierarchical EA with multiple models, based on the 
computational expense needed. It was found that when compared to a traditional 
EA implementation with a single population evolutionary algorithm, the hierarchi-
cal approach can speed up three (3) times an evolutionary optimisation procedure.
Several examples demonstrating numerically the good performances of Hier-
archical EAs compared to EAs are presented in the sequel on simple optimization 
aerodynamic problems.
4.4  Asynchronous Evolutionary Algorithmss (EAS)
An asynchronous variant of the classical parallel EAs implementation was proposed 
by Whitney [6–8]. In this case the remote solvers do not need to run at the same 
speed (synchronous) or even on the same local network. Solver nodes can be added 
or deleted dynamically during the execution. This parallel implementation requires 
modifying the canonical Evolutionary Algorithms and Evolutionary Strategies 
which ordinarily evaluate entire populations simultaneously before proceeding with 
a new population. The distinctive method of an asynchronous approach is that it 
generates, based on an individual approach, only one candidate solution at a time 

43
4.5  Advanced Operators
and only re-incorporates one individual at a time, rather than an entire population 
at every generation as is usual with traditional EAs. Consequently, solutions can 
be generated and returned out of order. This allows the implementation of an asyn-
chronous fitness evaluation, giving the method its name. This is an extension of the 
work by Wakunda and Zell [9]. With an asynchronous approach there is no waiting 
time (or bottleneck) for individuals to return compared to the classical notion of 
generations since the buffer of the EAs or ESs is continuously updated by evaluated 
individuals. As soon as one solution has been evaluated, its genetic material is in-
corporated back into the buffer of the optimization procedure. Figure 4.4 illustrates 
this concept.
4.5  Advanced Operators
There are a number of advanced operators been developed. In this book, two tech-
niques are described but others are suggested [10, 1].
4.5.1  Covariance Matrix Adaptation (CMA)
One extension to the canonical Evolution Strategy described in Chapter 2 is the 
incorporation of the Covariance Matrix Adaptation (CMA) mutation model devel-
oped and extensively studied by Hansen and Ostermeier [12, 13]. This mutation 
model takes its inspiration in conventional optimisation techniques which work by 
Fig. 4.4   Parallel computing and asynchronous evaluation
 

44
4  Advanced Techniques for Evolutionary Algorithms (EAs)
developing a second-order model of the fitness function. Through information gath-
ered about the fitness landscape, learned through the selection procedure, a model 
of the covariance matrix is built up progressively. This then acts as a scaling metric 
on subsequent mutations. It also has the benefit of being de-randomized: the same 
mutation vector is applied to both object and strategy variables, and this has been 
shown to significantly accelerate the optimisation procedure. Hansen [12, 13] has 
shown that the original mutation mechanism used by the canonical ES has some 
drawbacks as the performance of this ES can depend on the permutation of the 
object variables, clearly an undesirable situation. The basis of Hansen and Oster-
meier’s method is that individuals no longer ‘carry’ the strategy variables them-
selves, and these are stored as a single set by the evolution algorithm itself [12, 13]. 
Details on the CMA method implementation are not provided here but can be found 
in Reference 17.
4.5.2  Pareto Tournament Selection
One desirable feature of optimization is the use of a suitable selection operator 
capable of handling single or multi-objective(s). One approach is to implement the 
on-the-fly selection operator by means of a Pareto tournament selection operator 
[10, 11, 14, 15].
Most Evolutionary Algorithms configured for multi-objective optimisation cur-
rently use the non-dominated sorting approach [11]. This is a straightforward way 
to adapt an algorithm that is designed as a single objective optimiser into a multi-
objective optimiser, and is used by many researchers [11]. The problem with sorting 
approaches is that the method is not a fully integrated one. Briefly, a sorting method 
works by computing the set of non-dominated solutions amongst a large statistical 
sampling (either a large population or previous data), and assigning these solutions 
a Rank1. Then ignoring these points, the procedure is repeated until a ‘second’ 
Pareto front is found, and this is assigned Rank2. This procedure continues until 
all points are ranked, and then the value of the rank is assigned to the individual 
as a new single objective fitness. An example of the ranking procedure is shown in 
Fig. 4.5.
A problem arises now on whether it is fair to assign individuals in the second 
rank numerically half the fitness of the first, and whether the third rank deserves a 
third of the fitness of the first. This poses a dilemma regarding the level of equality 
present amongst the solutions, as often solutions with excellent information may 
lie adjacent to, but not in, Rank1. To solve this ‘artificial scaling’ problem, it is 
possible to introduce scaling, sharing and niching schemes, however all of these 
require problem-specific parameters or knowledge, even in adaptive approaches. 
It is of course always better dealing with an algorithm that does not introduce such 
unnecessary parameters.
In the Pareto tournament approach, the operator requires no additional ‘tuning’ 
parameters, works seamlessly with the asynchronous selection buffer ( B), and is very 

45
easy to encode. Simply, to determine whether a new individual x is to be accepted 
into the main population, it is compared with the selection buffer by assembling a 
small subset of the buffer called the t tournament functions 
[
]
1
2
,
,
,
n
Q
q q
q
=
…
. Q is 
assembled by selecting individuals from the buffer, exclusively at random, until 
it is full. The next step is to ensure that the new individual is not dominated by 
any in the tournament. If this is the case, then it is immediately accepted, and is 
inserted according to the replacement rules. The only tuning parameter that needs 
to be determined in advance is the tournament size, a parameter that would exist 
in a single objective optimisation anyway. Selection of this parameter requires a 
small amount of problem specific knowledge, and should vary between 
12
Q
B
=
 
(strong selective pressure) and 
16
Q
B
=
 (weak selective pressure). EAs optimis-
ers are not overly sensitive to this value, provided the user errs on the side of weak 
selective pressure (smaller tournaments) in the absence of better information. The 
egalitarian approach to the tournament (by selecting individuals at random) ensures 
good diversity amongst the selected individuals: no niching or forced separation of 
individuals has been found necessary. It can also be seen that in the event the fit-
ness vectors have only one element (a single objective optimisation), this operator 
is simplified to a standard tournament selection operator. The above Pareto tourna-
ment concept is illustrated in Fig. 4.6.
4.6  Advanced Games
Complementary to the cooperative and non-cooperative games discussed in Chap. 3, 
other advanced approaches have also been considered and developed to provide the 
EA optimiser with a better efficiency.
Fig. 4.5   Pareto ranking process
 
4.6  Advanced Games

46
4  Advanced Techniques for Evolutionary Algorithms (EAs)
4.6.1  Virtual And Real Nash-Games
There exist two Nash-Game strategies: the first strategy is a virtual Nash-Game 
which considers a single global objective. The second strategy is a real Nash-Game 
which considers multi-objectives in terms of two or more objectives according to 
the physics of the problem.
In a virtual Nash-Game, a split of a single objective (one for each discipline) 
design problem into several simpler design problems is introduced. This results in a 
multi-objective design problem using several Nash-Players. Each Nash-Player aims 
to optimize its own design criterion and the sum of design domains for each Nash-
Player is equal to the search space of the original design problem. For instance, 
if the design problem considers a search space C which is split into A and B, i.e., 
C = A ∪ B. The global solution can be captured when a Nash-equilibrium occurs. 
The global solution consists of the elite design string of each Nash-Player. As it 
will be shown in Chap. 7, Virtual Nash-Games are very efficient for solving inverse 
design optimisation problems.
The concept of virtual Nash-Game can be integrated with an Evolutionary Algo-
rithm to accelerate an optimisation procedure [16]. The Nash-Equilibrium is a result 
of a game based on symmetric information exchanged between game players. Each 
player is in charge of one objective, has its own strategy set and its own criterion.
The real Nash-Game is an extended concept of the virtual Nash-Game. A Real 
Nash-Game aims to solve multi-objective/multi-disciplinary objectives: each Nash-
Player optimises one of the objectives or disciplines in a multi-disciplinary design 
optimisation (MDO) problem by using the same design space or part of search 
space C, i.e., C = A ∩ B or C = A ∪ B. If the problem for instance is an aero-struc-
tural multi-disciplinary design problem with two objective functions considering 
the design space C, i.e., fAerodynamics = min( C), fStructures = min( C), two Nash-Players 
1 ( P1) and 2 ( P2) can be employed to optimise fAerodynamics = min( C, fStructures( C*)) and 
fStructures = min( fAerodynamics ( C*), C) using strategy profiles fAerodynamics( C) and SStructures ( C). 
Fig. 4.6   The Pareto tournament selection procedure
 

47
4.6  Advanced Games
A Nash-Game splits one multi-disciplinary design optimisation to two single-
disciplinary design optimisations.
Both virtual and real Nash-Games have a common characteristic: the decompo-
sition of design problems with a split of the territory of design variables. They can 
also be coupled with other Game Strategies such as a combination of Global and 
Pareto-Games (Hybridized Games or Games coalition). Examples of application of 
a real Nash-Game can be found in Chaps. 7–9.
4.6.2  Nash-Game and Hierarchical Asynchronous Parallel EAs 
(NASH-HAPEA)
The competitive Nash-Game approach described in the previous chapter can also 
be combined with the HEAs or HAPEAs approach described earlier in this chap-
ter. This concept is implemented using one hierarchical EAs for each player, as 
illustrated in Fig. 4.7, whereby information is exchanged between the EAs after a 
migration period has occurred.
There are two migrations present when using the hierarchical EA-Nash scheme. 
The first one is a circulation of solutions up and down; the best solutions progress 
from the bottom layer to the top layer where they are refined and then a second Nash 
migration where information between players is exchanged after an epoch. The new 
variables for each player are updated on each node and on each hierarchical tree.
Fig. 4.7   A hierarchical Nash-Game
 

48
4  Advanced Techniques for Evolutionary Algorithms (EAs)
4.6.3  Hybrid-Game Coupled with Single-Objective or Multi-
Objective Evolutionary Algorithms
A Hybrid-Game is an advanced optimization method that uses the concepts of Nash-
game and Pareto optimality dynamically and hence it can simultaneously produce 
Nash-equilibrium and a set of Pareto non-dominated solutions [17]. The reason for 
implementing the Hybridized Nash/GAs strategy is to speed up the search of one 
or several global solutions when solving single-objective or multi-objective design 
problems. The elitist solution from each Nash-Player will be seeded to a single 
Player for single objective or to a Pareto-Player at every generation. This coalition 
based mechanism increases diversity of Pareto-Player search during the optimisa-
tion procedure. Each Nash-Player has its own design criterion and uses its own 
optimisation strategy.
Figure 4.8 shows an example of a possible topology for Hybrid-Games which 
consists of three Nash-Players and one Global/Pareto-Player. The Nash-Players 
choose their own strategy to improve their own objective. The Nash-Players seed/
update their elite designs to the buffer of the Global/Pareto-Player (Node 0). The to-
pology of Hybrid-Game is flexible; if there are four (4) Nash players then the shape 
will be a quadrangular pyramid.
Fig. 4.8   A Topological example of Hybrid -Game
 

49
4.7  Meta Model Assisted EAS
Figure 4.9 shows an example with an optimization problem considering six (6) 
design variables (DV1 to DV6). The distribution of design variables in this example 
are: the Nash-Player1 (black circle) only considers black square design components 
(DV1, DV4), DV2 and DV5 are considered by Nash-Player 2 (blue circle) while 
Nash-Player 3 considers DV3 and DV6. The Pareto-Player considers the whole 
design variable span (DV1 to DV6). It can be noticed that the sum of Nash-Players 
design variables is the same as the number of design variables for the Pareto-Player. 
This is because a set of elite designs (DV1 ~ DV6) obtained by Nash-Game will be 
seeded to the population of Pareto-Player. In this example, Nash-Game decomposes 
the problem into 3 simpler problems corresponding to Nash-Player 1, Nash-Player 
2 and Nash-Player 3 which play the roles of a speed-up maker of the Pareto-Player 
to capture the Pareto Front.
If the problem is a multi-objective design optimization, then the Hybridized 
Nash-Game will split the problem into several single-objective design problems. If 
the problem is a multi-disciplinary/multi-physics design problem then the Hybrid-
ized Nash-Game will split the problem into single discipline design problems.
4.7  Meta Model Assisted EAS
Meta model assisted EAs is another technique to accelerate the convergence of an 
EA. The use of high-fidelity analysis CFD and FEA software for aeronautical sys-
tem design is now a common practice at scientific and industrial levels. However, 
their use for optimisation and MDO is limited by the time and cost of performing a 
number of function evaluations during the optimization procedure. One alternative 
is to construct an approximate model. When compared to the full analysis using 
high-fidelity tools, the approximate model requires very little time to evaluate the 
Fig. 4.9   Topology of a Pareto-Nash Game coalition
 

50
4  Advanced Techniques for Evolutionary Algorithms (EAs)
objective function. Therefore, there are important savings in computational time. 
In order to build an approximation for optimisation, a series of steps have to be 
followed:
1.	 Define the experimental design sample using Latin Hypercube sampling or rect-
angular grids;
2.	 Define a model to represent the data (RSM, Kriging);
3.	 Fit the model to the observed data.
This optimization procedure is illustrated in Fig. 4.10. In this case the global opti-
miser is one of the Canonical GAs described in Chaps. 2, 3 or an efficient algorithm 
that incorporates advanced techniques described in this chapter.
Meta models with EAs are not described in detail in this chapter but can be found 
in References [18–22]
4.8  Summary of Chapter
EAs are computationally expensive therefore researchers have been develop-
ing advanced techniques to accelerate convergence and improve diversity. This 
chapter described briefly several techniques coupled to EAs including distributed 
Fig. 4.10   MDO using surrogate/approximate models
 

51
References
and parallel computing, hierarchical topology, asynchronous computing, game 
strategies, hybridized games coalition and meta models that assist an EA during an 
optimization procedure.
References
  1.	 Muhlenbein M (1991) Evolution in time and space––the parallel genetic algorithm. Found 
Genet Algorithm 1:316–337
  2.	 Veldhuizen DA van, Zydallis JB, Lamont GB (2003) Considerations in engineering parallel 
multiobjective evolutionary algorithms. IEEE Trans Evolut Comput 7(2):144–173
  3.	 Cantú-Paz E (1995) A summary of research on parallel genetic algorithms. Technical report 
95007, illinois genetic algorithms laboratory. University of Illinois, Urbana-Champaign
  4.	 Cantú-Paz E (2000) Efficient and accurate parallel genetic algorithms. Kluwer Academic 
Publisher, New York
  5.	 Sefrioui M, Périaux J (2000)A hierarchical genetic algorithm using multiple models for op-
timization. In: Proceedings of the Sixth International Conference Parallel Problem Solving 
from Nature (PPSN-VI), pp 879–888. Springer
  6.	 Whitney EJ, González L, Srinivas K, Périaux J (2002, July) Multi-criteria aerodynamic shape 
design problems in CFD using a modern evolutionary algorithm on distributed computers. In: 
Armfield S, Morgan P, Srinivas K (eds) Proceedings of the Second International Conference 
on Computational Fluid Dynamics (ICCFD2). Springer, Sydney, pp 597–602
  7.	 Whitney EJ, Sefrioui M, Srinivas K, Périaux J (2002, Feb) Advances in hierarchical, parallel 
evolutionary algorithms for aerodynamic shape optimisation. JSME Int J 45(1):23–28
  8.	 Whitney EJ, González LF, Srinivas K, Périaux J (2003) Adaptive evolution design without 
problem specific knowledge. In: Proceedings of Evolutionary Algorithms in Engineering and 
Computer Science (EUROGEN’03)
  9.	 Wakunda J, Zell A (2000) Median selection for parallel steady-state evolution strategies. In: 
Proceedings of the Sixth International Conference Parallel Problem Solving from Nature 
(PPSN-VI), Springer, pp 405–414
10.	 Deb K, (2003) Multi-objective optimization using evolutionary algorithms. Wiley West 
Sussex
11.	 Srinivas N, Deb K (1995) Multiobjective optimisation using non-dominated sorting in ge-
netic algorithms. Evolut Comput 2(3):221–248
12.	 Hansen N, Ostermeier A (1996) Adapting arbitrary normal mutation distributions in evolu-
tion strategies: the covariance matrix adaptation. In: Proceedings of the 1996 IEEE Interna-
tional Conference on Evolutionary Computation, pp 312-317
13.	 Hansen N, Ostermeier A (2001) Completely De-randomised self-adaption in evolution strate-
gies. Evolut Comput 9(2):159–195
14.	 Coello Coello CA, Van Veldhuizen DA, Lamont GB (2002) Evolutionary algorithms for 
solving multi-objective problems. Kluwer Academic Publishers, New York
15.	 Horn J, Nafpliotis N, Goldberg D (1994) A niched Pareto genetic algorithm for multiobjec-
tive optimization. In: Proceedings First IIIE Conference on Evolutionary Computation Sym-
posium on the theory of Computing
16.	 Periaux J, Lee DS, Gonzalez LF Fast reconstruction of aerodynamic shapes using evolution-
ary algorithms and virtual Nash strategies in a CFD design environment. J Comput Appl 
Mathemat 232(1):61–71
17.	 Lee DS, Gonzalez LF, Periaux J UAS mission path planning system (mpps) using hybrid-
game coupled to multi-objective design optimizer. J Dyn Syst, Meas Control—ASME, DS-
09-1135 132(4) 041005-1-11
18.	 Karakasis KM, Giannakoglou KC (2006) On the use of metamodel-assisted, multi-objective 
evolutionary algorithm. Optimization 38(8):941–957

52
4  Advanced Techniques for Evolutionary Algorithms (EAs)
19.	 Emmerich M, Giotis A, Özdemir M, Bäck T, Giannakoglou KC (2002) Metamodel-as-
sisted evolution strategies In: Parallel problem solving from nature VII. Springer, Berlin, 
pp 361–370
20.	 Giannakoglou KC, Kampolis IC (2010) Multilevel optimization algorithms based on 
metamodel-and fitness inheritance-assisted evolutionary algorithms. In: Computational in-
telligence in expensive optimization problems, adaptation learning and optimization, vol 2. 
pp 61–84
21.	 Asouti VG, Kampolis IC, Giannakoglou KC (2009) A grid-enabled asynchronous metamod-
el-assisted evolutionary algorithm for aerodynamic optimization. Genet Program Evol Mach 
10(4):373–389
22.	 Li M, Li G, Azarm S (2006) A Kriging Metamodel assisted multi-objective genetic algorithm 
for design optimization In: Proceedings of IDETC/CIE 2006, ASME 2006 International 
Design Engineering Technical Conferences and Computers and Information in Engineering 
Conference, DETC2006-99316, Philadelphia, Pennsylvania, September 10–13

Chapter 5
Multidisciplinary Design Optimisation 
and Robust Design in Aerospace Systems
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_5
5.1  Generalities
The evolution of aerospace systems has progressed rapidly and the type of problems 
that engineers are faced with is becoming more and more complex each year. The 
traditional phases of conceptual preliminary and detailed design have now been 
complemented with the need to integrate more than one discipline optimisation 
method as well as uncertainties in all phases of the design process. This chapter 
provides an overview of multi-disciplinary and robust design optimization tools.
5.2  Conceptual, Preliminary and Detailed Design
An aircraft design process can be divided into three major phases: conceptual, pre-
liminary and detailed design. All these phases can benefit from the application of 
optimisation methods.
In conceptual design, basic questions such as size, weight, configuration ar-
rangement and performance are answered. In this phase, a large number of possible 
alternatives are evaluated together with trade studies. In conceptual design, the de-
sign requirements are evaluated and studied to guide and evaluate different aircraft 
configurations. Conceptual design is a very fluid process and the configuration lay-
out is changed constantly to incorporate new concepts and re-evaluate potential im-
provements. Trade studies and sophistication of design are improved as the concept 
design progresses in time. As the level of complexity increases, the level of detail 
increases and new phases of the design are considered.
In preliminary Design, the level of understanding of the concept defined at the 
end of the conceptual design phase matures and the mathematical modelling of the 
outside surface of the aircraft is detailed with accuracy. Different experts in aero-
dynamics, control and structures perform complex analyses in their areas, usually 
53

54
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
with the aid of CFD and FEA codes. The use of sophisticated CAD tools, that ac-
curately model the aircraft geometry, are part of the preliminary design process, 
allowing different disciplines to work with a general configuration that follows the 
requirements validated in the conceptual design phase and allows for introduction 
of a new analysis of the current design phase. The final output of the preliminary 
design is an integrated proposal of the model for entering a full-scale development 
in the detailed design process.
Detailed Design includes specific details such as the proper location of holes 
for fasteners, and design of components such as hinges, brackets and racks. Some 
considerations on production design, whereby specialists determine how the aircraft 
will be fabricated, are also part of the detailed design. Actual structures are tested 
and a simulation of the control laws for the system is performed during this phase.
5.3  Multi-Disciplinary Design Analysis (MDA)  
and Optimisation
5.3.1  Definition
In aerospace engineering the designer is usually presented with a problem which 
involves not only a single objective but numerous objectives and complex multi-
physics. A systematic approach that accounts for the coupling between the disci-
plines and variables regarded as Multi-disciplinary Design Analysis (MDA) and as 
Multi-disciplinary Design Optimisation (MDO) when coupled with optimization 
techniques such as gradient based methods or Evolutionary Algorithms. In aircraft 
design, for example, multi-physics include aerodynamics, structures, propulsion, 
control among other disciplines.
These multi-physics are interrelated and interdisciplinary constraints must be 
satisfied to solve the optimization problem. The area of MDO has matured as a 
separate discipline now with different journals, specialised technical committees, 
conferences and publications devoted solely to the topic. The needs for, and benefits 
of MDO are clear, given that a small improvement in the performance of the aircraft 
can be significant. An MDO procedure also includes the evaluation of constraints 
on multiple disciplines from the early stages of the design, thus reducing the ex-
pense of re-designing an aircraft system [1].
5.3.2  Challenges and needs for MDO
The aircraft design industry has well understood the benefits of optimization and 
the use of MDO tools during the design process, but as traditional concepts are 
revised, new configurations are studied and market pressures and industrial require-
ments emerge, the need for developing alternative numerical methods tools and 
their application to current designs is becoming a requirement.

55
5.3  Multi-Disciplinary Design Analysis (MDA) and Optimisation
A comprehensive survey of MDO methods, their development and limitations 
is provided by Sobieski et al. [2]. The research classified the different methods 
and highlighted some important needs, including a multi-platform operation, the 
use of parallel computation to reduce computational expense and time design cycle 
and space visualisation as the designer might be interested in the optimum neigh-
bourhood rather than the optimum itself. In most of the methods described in the 
survey, the optimisation algorithms for MDO use traditional gradient methods for 
computing the solution, but as has been discussed, these methods have some limita-
tions. Sobieski and Hafka [3] evaluated some developments in multi-disciplinary 
aerospace design and optimization and identified several categories of problem for-
mulations and also two other main challenges for MDO, the computational expense 
and organisational (architectural) complexity.
Another survey by Giesing and Barthel [4] identified several industrial applica-
tions and summarized some of the needs for MDO. Most of the applications are 
related to detailed design; few applications are developed for conceptual or prelimi-
nary MDO studies. With respect to the classification of needs, their research also 
describes how an MDO framework should be flexible to accept whatever function 
is needed and should address the issue of low and high -fidelity models, but not to 
compromise the optimisation. It also points out the need for efficient models that 
describe the physics to keep computing time at a reasonable level. A critical aspect 
mentioned in the paper is the need for accurate realistic design by identification of 
constraints, mechanisms and underlying physics of the various disciplines involved.
An open issue on MDO studies is the fact that many high-fidelity analysers such 
as Euler, Navier-Stokes, CFD or FEA codes are too complex to couple to an MDO 
as many of them are not automated, robust or fast enough. Also, the need for ap-
proximation techniques such as Response Surface Modelling (RSM) or Design and 
Analysis of Computer Experiments (DACE) arises because of the computational 
expense of using an analysis code for all evaluations during the optimisation proce-
dure and also from the fact that some analysis codes cannot be directly integrated 
with MDO architecture.
Dealing with MDO framework architectures, there is a requirement for more ef-
ficient, robust flexible framework architectures and methods with industrial codes. 
These codes should be easily coupled and reconfigurable, and adaptable to com-
mercial solvers. One of the problems with current MDO architectures is that these 
are usually developed at universities and in industries with restrictions on their use, 
and sometimes they are specialized and difficult to expand for other applications.
On the topic of optimization tools for MDO, it is important to determine the pres-
ence of multi-modalities, non-linearities and multiple objectives that might cause 
a traditional deterministic method to fail. Despite of the use of existing automated 
differentiation [23] the computational cost of gradients and the presence of multiple 
disciplines is also an important factor. Therefore, the continuing challenge has been 
on developing and improving numerical optimization techniques and enhancing 
their speed and robustness for their efficient use within MDO. One of the emerging 
optimisation techniques for MDO is EAs, but they have found limited applications 
in MDO due to the computational burden associated with them.

56
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
Applications of EAs for MDO problems include the work by Giesing and Bar-
thelem [4] who presented a short discussion on supporting design space search 
methods such as Evolutionary Algorithms (EAs), and explained how they are gain-
ing popularity for MDO because they are simple to couple with analysis modules 
and do not incur the cost of computing derivatives.
5.3.3  MDO Application Using Gradient-Based Methods
There are a number of applications of MDO to aeronautical problems [5, 6]. Some 
requirements, benefits and drawbacks of MDO are described in several applications 
to aeronautical problems. Wakayama and Kroo [7] applied MDO for subsonic wing 
platform design; their results highlighted the importance of considering a flexible 
architecture coupled with appropriate detailed analysis for structural and aerody-
namic analysis to achieve realistic designs.
Bartholomew [1] explains the role of MDO within aerospace design and prog-
ress toward an MDO capability, based on lessons learned from research activities 
within the European community. The study stresses the importance of the incor-
poration of MDO in the design process at an industrial level. It also points out the 
requirement for an MDO framework to provide a flexible user interface definition 
and to monitor the MDO progress, and stresses the fact that the benefits of MDO 
provide means to avoid fragmentation with current recursive or intuitive methods 
that are time-consuming and limit the efficiency in the design.
The benefits of MDO, parallel computing and variable fidelity models for air-
craft design have been studied by Giunta et al [8]. In these studies the researchers 
compared the use of RSM and DACE techniques and obtained optimum realistic 
aircraft design configurations. Other applications of MDO in engineering are re-
lated to complex systems, such as ground vehicle design [9–11]. These studies, 
although not directly related to aircraft or aircraft component design, provide an 
indication of the complexities of the MDO procedure and the benefit of parallel 
computing when large space systems are analysed.
5.4  Approaches to MDO
The selection of the appropriate optimization architecture is of great importance for 
providing an efficient solution to MDO problems, as one MDO architecture may 
find a feasible solution without high computational expense while other solutions 
might be too slow or even fail [12, 13]. There are several approaches for MDO, the 
most common being: the Multi-disciplinary Design Feasible (MDF) method [14], 
the Individual Discipline Feasible (IDF) method [15], the Collaborative Optimiza-
tion (CO) method [16], the Concurrent Sub Space Optimisation with Response Sur-
faces (CSSO/RS) [17] and the Bi-Level Integrated System Synthesis with Response 
Surfaces (BLISS/RS) method [18]. This book develops algorithms and examples of 
the first two variants and a modified version of CO.

57
5.4  Approaches to MDO
5.4.1  Multi-Disciplinary Design Feasible (MDF)
This formulation has been extensively used in the field of optimisation and can be 
considered as the standard approach. It is also known as single-level optimisation or 
All-in-One (A-i-O). The MDF can be stated as:

(5.1)
where f is the objective function and g represents all systems and/or disciplinary 
constraints.
This method is illustrated below in Fig. 5.1.
In this approach the set of design variables x, z is evaluated by an integrated 
analysis. This analysis evaluates the coupled system of equations, guarantees inter-
disciplinary constraints and returns the objective function that is manipulated by the 
optimizer for the search of the optimal solution. To achieve a design that is physi-
cally feasible, this approach usually requires a computationally expensive iterative 
procedure during each integrated analysis call. As an example, the minimization of 
the drag of a wing in a two-discipline problem dealing with structures and aerody-
namics, may be considered. The design variables can be, for example, wing sweep, 
wing span and twist or taper. With an integrated approach the optimizer sends the 
values of these variables to an integral system of equations that represent the aero-
dynamics and structures analysis coupling.
These analyses are iteratively evaluated to conform and converge on each dis-
cipline to a consistent solution. The objective function and constraints are then 
evaluated and manipulated by the optimizer to improve the design. This approach is 
conceptually very simple. Once all disciplines are coupled to form a single multidis-
ciplinary analysis module, the same techniques that are used for a single-discipline 
(
)
(
)
(
)
(
)
Minimise: 
,
, ,
 
:  
,
, ,
0
f z y x y z
Subject to
g z y x y z
≤
Fig. 5.1   Multi-disciplinary design feasible ( MDF)
 

58
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
optimisation can be applied. The disadvantage of this approach is that the solution 
of a single system could be very expensive and does not enable the potential decou-
pling of the individual disciplines into analysis modules that can be run in parallel.
5.4.2  Individual Discipline Feasible (IDF)
This method belongs to the distributed analysis architectures and differs from the 
standard analysis by the way in which the different disciplines are decoupled. The 
disciplinary analyses are decoupled but the optimisation at the system level is kept 
to form a single-level decomposed optimisation problem. The subsystems are in-
dividually analysed and the optimization is performed for the system as a whole. 
Constraints that impose multi-disciplinary feasibility are introduced by using extra 
coupling variables. In this approach the disciplines are individually feasible but the 
complete system may not be feasible until the optimization procedure converges.
The IDF optimisation statement is:

(5.2)
where y’ are the auxiliary disciplinary input variables. The second constraint en-
sures multi-disciplinary feasibility when y is equal to y’. The IDF approach is illus-
trated in Fig. 5.2. The IDF approach is illustrated below in Fig. 5.2.
(
)
(
)
(
)
(
)
(
)
   Minimise: 
,
,
',
 
:  
,
,
',
0
         '
,
',
0
f z y x y z
Subject to
g z y x y z
y
y x y z
≤
−
=
Fig. 5.2   Individual discipline feasible ( IDF)
 

59
5.4  Approaches to MDO
In this case the design variables x, y, z are sent to each discipline; these variables 
are analysed by each discipline block (that is, aerodynamics-structures). These 
analyses return an evaluated solution that satisfies the governing equations and do-
main-specific constraints on each discipline, but that might not be interdisciplinary 
compatible.
The system-level optimizer is responsible for ensuring compatibility of the over-
all solution, guaranteeing satisfaction of interdisciplinary constraints and minimiz-
ing the objective function.
A distributed architecture has several organisational and computational advan-
tages over a traditional integral standard approach.
Computational advantages 
•	 A reduction in re-iteration and communication requirements;
•	 The use of parallel heterogeneous platforms to evaluate the different disciplinary 
analyses;
•	 Removal of iteration loops;
•	 A reduced level of disciplinary requirements.
Organisational advantages 
•	 Increased autonomy and disciplinary expertise in the design process;
•	 The benefits of being able to alter a part of the analysis without having to re-
formulate the whole problem.
•	 Resembles the division into areas of expertise in most design companies.
5.4.3  Collaborative Optimization (CO)
The CO approach is a two-level hierarchical scheme for MDO which decomposes 
and re-formulates the problem as a bi-level optimization, with the top level being 
the system optimizer that forces the multi-disciplinary variables or system level 
targets z to satisfy interdisciplinary compatibility constraints c while minimising the 
objective f. The problem is decomposed into the analysis and subspace optimizers 
that are integrated within each analysis block [19].
The system is optimised at the coordination level by determining the target val-
ues for subsystem responses and shared design variables with compatibility con-
straints that ensure multi-disciplinary feasibility. The optimization objective at each 
subsystem is to match as closely as possible these target values while satisfying 
local disciplinary constraints.
Through subspace optimization each block is given control over its own set of 
design variables and changed to satisfy its own domain-specific constraints. Spe-
cific knowledge of each of the other groups or design variables is not required. The 
objective of each subspace analysis is to agree upon the values of the interdisciplin-
ary variables with the other groups. Again, a system-level optimizer is used to en-
sure compatibility at the overall solution, guarantee satisfaction of interdisciplinary 
constraints and minimize the objective function.

60
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
Similar to the IDF approach, the multi-disciplinary feasibility in CO is reached at 
the end of the procedure. If the target values corresponding to the shared and state 
variables are z and y’ respectively, the system level optimisation can be written as:

(5.3)
where c represents the compatibility constraints, one for each subsystem, and takes 
the form:

(5.4)
where asterisks (*) indicate optimal subsystem values.
At the disciplinary level I th the subsystem optimization can be stated as:

(5.5)
where the objective ci is of the same form as the constraints at the global level. The 
CO approach is illustrated below in Fig. 5.3
(
)
(
)
(
)
*
*
Minimise: 
,
'
 
:  
, *,
',
,
',
0
=
i
i
f z y
Subject to
c z z
y y x
y z
(
)
(
)
(
)
2
2
*
*
*
'
,
',
−
+
−
i
i
i
i
c z
z
y
y x
y z
(
)
(
)
(
)
(
)
Minimise: 
,
,
',
,
',
0
 
:  
, ,
, ,
0
=
≤
i
i
i
i
c z z y y x y z
Subject to
g x z y x y z
Fig. 5.3   Collaborative optimization ( CO)
 

61
5.5  Uncertainty Based Robust Design
5.4.4  Criteria and Performance of MDO Implementations
Alexandrov and Lewis [20] classified different MDO implementations and identi-
fied several criteria to classify, analyse and evaluate approaches to MDO. They 
stated the distinction between formulating the MDO problem and solving the result-
ing computational problem. This technique involves two major elements: posing 
the problem formulation as a set of mathematical statements amenable to a solution 
and then defining a procedure algorithm to solve the problem once it is posed. As 
explained in the same paper, this distinction is crucial and is often blurred in presen-
tations of new MDO approaches. According to this research, the main attributes for 
an MDO formulation are consistency, well-posedness, equivalence of formulations, 
optimality conditions and sensibility to solutions, while algorithm considerations 
are on local convergence rates, global convergence properties and iterative cost. 
Their research also provides guidelines and poses several questions for new formu-
lations and analysis for MDO methods. Examples of these questions are: how is the 
original MDO problem formulated and does the formulation lead to an optimisation 
procedure that is not amenable to solution by existing optimisation algorithms
Another concern about the performance and solution of MDO problems is on the 
use of different fidelity analysis tools for MDO, due to the computational expense 
involved in the procedure. For this reason, continuing research has been devoted to 
developing MDO formulation and in combination with variable fidelity analysis, 
approximation techniques and Design of Experiments (DOE) theory [8]. Results in-
dicate that these are possible avenues for research, as they lower the computational 
expense while maintaining the robustness of the solution [8].
5.5  Uncertainty Based Robust Design
There are many engineering applications where some values of the design param-
eters cannot be provided accurately. These are related to geometry manufacturing 
accuracy (wingspan, length, angles) or operational conditions that vary due to the 
presence of fluctuations (Mach, angle of attack, air density and temperature). Un-
certainty based Robust Design is used to deal with uncertainties present during 
manufacturing or within the natural environment. It is on this premise that an ap-
proach taking account of uncertainties needs to be incorporated into the analysis 
for design of an aeronautical/aerospace design. In these circumstances, some of the 
input parameters need to be estimated by mean and variance values.
5.5.1  Robust/Uncertainty Method
The Robust Design method was pioneered by Taguchi and Chowdhury [21]. The 
method considers possible uncertainties in input parameters, manufacturing or 
operational constraints to improve quality of engineering productivity. In Robust 
Design an optimisation problem could be re-defined as:

62
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems

(5.6)
where 
1,
,
n
x
x
…
 represent design parameters and 
1,
,
n
m
x
x
+ …
 represent uncertainty 
parameters which can be distributed with mean and standard deviation.
In robust design optimisation the aim is to minimize the variability of the per-
formance under uncertain operating conditions. An optimization with uncertainty 
parameters can be defined fitness objectives associated with the statistical formulas; 
mean ( )
f
 and variance of function (
)
f
δ
 or standard deviation (
)
=
f
f
σ
δ
 for 
the sensitive analysis.

(5.7)

(5.8)
where K denotes the number of subintervals of variation flow conditions.
In aerodynamics for example, uncertainties at desired operating conditions can 
be described with the fluctuation on lift coefficient ( C l) at different free stream 
Mach numbers. Figure 5.4 for example shows the fluctuation on C l and compares 
the total drag distribution (physical performance) obtained by conventional meth-
1
1
/
 
(
,
,
,
,
,
)
n
n
m
Maximisation Minimisation f
f x
x
x
x
+
=
…
…
1
1
K
j
j
f
f
K
=
=
∑
(
)
2
1
1
1
K
j
j
f
f
f
f
K
σ
δ
=
=
=
−
−∑
Fig. 5.4   Drag distributions obtained by the conventional method ( Design-A) and Robust Design 
Method ( Design-B)
 

63
5.5  Uncertainty Based Robust Design
ods (Design-A) and by the robust design method (Design-B). Even though Design-
A produces lower drag coefficient at the design point (when the lift coefficient is 
0.78), Design-A fluctuates along the lift coefficients [C l = 0.5:0.8]. In other words, 
the conventional design optimization approach produces an over-optimised solu-
tion (Design-A) that has good performance at desired flight condition ( C l = 0.78) 
but with poor off-design characteristics (high sensitivity). Design-B obtained by the 
robust design has a stable performance (low sensitivity) over a range of C l condi-
tions without fluctuations.
The performance sensitivity obtained by the conventional and the robust de-
sign methods can also be compared using a Probability Density Function (PDF) 
as shown in Fig. 5.5. It can be seen that the robust design method produces a nar-
rower bell curve (lower standard deviation which means lower sensitivity and stable 
physical performance) when compared to a baseline design and the results obtained 
by a conventional method.
5.5.2  From Single-Objective to Multi-Objective Design 
Optimisation Using the Robust Design Method
A single objective problem can be converted to a Multi-Objective Design Optimisa-
tion when we consider Robust Design. The original single objective function can be 
modified using mean and variance to represent the model quality in terms of perfor-
mance and stability/sensitivity at a set of variable design conditions. For instance, 
when uncertainty is applied to single-objective problem such as minimisation of 
drag ( f = min (CD)).
Fig. 5.5   Sensitivity comparison obtained by the conventional method and robust design
 

64
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
The problem can be modified as robust uncertainty based multi-objective design 
optimisation problem as follows:
Given a single-Objective Design 
(
)
PLQ


'
6
I
&
DW 0
=
Apply Robust
Uncertainty Design
Techniques
Uncertainty based design optimization 
(
)

PLQ
'
I
&
=
and
(
)

PLQ
'
I
&
δ
=
1.	 Compute K, number of off-design conditions defined by the mean M∞ and 
the standard deviation of M ∞ which represents a vector of flight conditions 
,
,
i
M
M
M
M
ε
ε
∞
∞
∞
∞


∈
−
+

.
2.	 Split the single-objective/fitness function into the mean and variance or standard 
deviation of drag coefficient ( CD :  Eq. 5.9) and (
:
D
C
δ
 Eq. 5.10).

(5.9)

(5.10)
where K represents the number of uncertainty conditions.
The main role of robust design in this example is to improve CD quality; reduc-
tion of both magnitude of drag coefficient and drag coefficient sensitivity at uncer-
tain flight conditions by computing mean and variance of criteria. Additional details 
on the uncertainty based technique can be found in Chap. 6.
1
1
=
=
∑
K
D
Di
i
C
C
K
(
)
2
1
1
1
K
D
D
Di
D
i
C
C
C
C
K
σ
δ
=
=
=
−
−∑

65
5.6  Limitations of Traditional Optimisation Techniques for MDO and Robust Design
5.5.3  Robust Multi-Objective/Multi-Disciplinary Design 
Optimization
Multi-objective and Multi-disciplinary Design Optimisation problems can also be 
analysed using Robust Design optimisation techniques using variance to mean ratio 
(VMR). Considering such an approach the objective functions can take into account 
for instance both aerodynamic quality and structural weight quality if the design 
problem considers interdisciplinary aero-structural design problems− = = v with un-
certainty parameters. For instance, the aerodynamic quality fitness function can be 
defined as shown Eq. (5.11) which combine Eqs. 5.9 and 5.10;

(5.11)
and the structural quality function can be written as;

(5.12)
where W Wing represents the weight of wing.
5.6  Limitations of Traditional Optimisation Techniques 
for MDO and Robust Design
5.6.1  MDO Using Traditional Method and Evolutionary 
Algorithms
As discussed in the previous sections, most of the optimization methods used for 
Multi-disciplinary Design Optimisation (MDO) rely on traditional deterministic 
techniques. While the use of these methods is largely successful and efficient at 
finding optimal global solutions, problems still do arise. Gradient-based methods 
usually work best with uni-modal functions, but their effectiveness decreases with 
the presence of local optima or ridges in the fitness landscape. Moreover, the pres-
ence of numerical noise inhibits the application of many gradient-based optimiza-
tion techniques. The numerical noise causes an inaccurate calculation of gradients, 
which in turn slows or prevents convergence during optimisation [8, 22]. In 3-D 
aircraft design, for example, the problem of numerical noise is of special concern 
when an accurate solution is sought through a high-fidelity analysis but the compu-
tation of gradients is complex and a single aerodynamic or structural analysis might 
take several CPU hours on a supercomputer.
(
)
/
min
/


=




AerodynamicQuality
L D
f
L D
δ
min(
(
))
StructuralQuality
Wing
Wing
f
W
W
δ
=

66
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems
An emerging optimization technique for MDO is Evolutionary Algorithms 
(EAs); these techniques are robust in finding optimal solutions for single- and 
multi-objective problems, but have found limited applications to MDO due to the 
computational burden associated with them. The challenge is then to study, develop, 
apply and improve the speed and robustness of these methods so that confident ap-
plications and use within MDO is possible.
It is important to highlight that in this book the use of EAs will be restricted to 
conceptual and preliminary MDO studies where the number of variables is still 
relatively small, less than a hundred, and where the use of EAs is still of potential 
benefit. On a larger scale, the use of EAs can be extended for an increased number 
of variables and coupled with other techniques such as Games Strategies or Design 
of Experiments (DOE).
5.6.2  Advantages and Drawbacks of Robust Design
The advantages and drawbacks of using Robust Design are compared in Fig. 5.6. 
The Robust Design method significantly affects solution quality in terms of perfor-
mance and sensitivity. In other words, optimal solutions obtained by Robust Design 
have capabilities to produce higher performances and also maintain/improve its 
performance along the uncertain variation when compared to the baseline design. 
Design engineers will have available a better choice to solve real-world design after 
introducing Robust Design in their optimization procedures.
Even though the Robust Design method possesses significant benefits in several 
aspects, its counterpart balances considerable disadvantages: difficulty to define/
implement uncertainty design into complex multi-objective/multi-disciplinary op-
timisation, high computational cost due to the further iteration caused by a set of 
Fig. 5.6   Advantages and disadvantages of using Robust design
 

67
References
uncertain variation. The major drawback of Robust Design is difficult to find an ef-
ficient optimization method to overcome the above first and second disadvantages.
Subsequent chapters address the issue of computational expense when using 
EAs, MDO and Robust Design with coupled advanced techniques described in 
Chap. 4.
5.7  Summary of Chapter
This chapter described some of the concepts and techniques used in multi-disci-
plinary design optimization (MDO) and Robust/uncertainty based Design. Some of 
these techniques are used in subsequent chapters.
References
1.	 Bartholomew P (1998) The role of MDO within Aerospace Design and progress towards an 
MDO Ccapability. In Proceedings of Seventh AIAA/USAF/NASA/ISSMO Symposium on 
Multidisciplinary Analysis and Optimisation, St. Louis, Missouri. September 1998
2.	 Sobieszczanski-Sobieski J, Haftka RT (1996) Multidisciplinary aerospace design optimiza-
tion survey of recent developments. Technical Report 96–0711, NASA/American Institute of 
Aeronautics and Astronautics, 1996
3.	 Sobieszczanski-Sobieski J, Haftka RT (1997) Multidisciplinary aerospace design optimiza-
tion: survey of recent developments. Struct Optim 14:1–23
4.	 Giesing JP, Barthelem JF (1998) A summary of industry MDO applications and needs. In 
Proceedings of Seventh AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary 
Analysis and Optimisation. AIAA, St. Louis, Missouri, September 1998.
5.	 Blair M, LeClair S, Zweber J, Chemaly A (1997) Multidisciplinary design for uninhabited air 
vehicles. In 6th Workshop on Enabling Technologies Infrastructure for Collaborative Enter-
prises (WET-ICE ’97). AIAA, 1997
6.	 Gantois K, Morris AJ (2004) The multi-disciplinary design of a large-scale civil aircraft wing 
taking account of manufacturing costs. Struct Multidiscip Optim 28(1):31–46
7.	 Wakayama S, Kroo I (1995) Subsonic wing planform design using multidisciplinary optimi-
zation. AIAA J Aircr 12(4):746–753
8.	 Giunta AA, Balabanov V, Haim D, Grossman B, Mason WH, Haftka RT, Watson LT (1997) 
Multidisciplinary optimization of a supersonic transport using design of experiments theory 
and response surface modelling. Aeronautic J:347–356 query for volue det
9.	 Bennett J, Fenyes P, Haering W, Neal M (1998) Issues in industrial multidisciplinary optimi-
zation. In Proceedings of Seventh AIAA/USAF/NASA/ISSMO Symposium on Multidisci-
plinary Analysis and Optimization, St. Louis, Missouri, September 1998
10.	 Kodiyalam K, Yang RJ, Gu L, Tho C-H (2004) Large-scale, multidisciplinary optimization of 
a vehicle system in a scalable, high performance computing environment. Struct Multidiscip 
Optim 26:256–263
11.	 McAllister C, Simpson T, Hacker K, Lewis K (2002) Application of multidisciplinary design 
optimization to racecar design analysis. In Proceedings of the 9th AIAA/USAF/NASA/ISSMO 
Symposium on Multidisciplinary Analysis and Optimization, Atlanta, Georgia, September 2002
12.	 Braum R, Gage P, Kroo I, Sobieski I (1996) Implementation and performance issues in c.o. In 
Proceedings of Sixth AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analy-
sis and Optimization, Bellevue, Washington, September 4–6 1996. AIAA Paper No. 96–4017

68
13.	 Dulikravich GS, Dennis BH, Martin TJ, Egorov IN (2001) Multi-disciplinary analysis and 
design optimization. in invited lecture, mini-symposium on inverse problems—state of art 
and future trends, XXIV Brazilian Congress on Applied and Computational Mathematics, 
Belo Horizonte, Brazil, September 10–13, 2001
14.	 Alexandrov N, Kodyalam S (1998) Initial results of an MDO methods evaluation study. In 
Proceedings of the Seventh AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary 
Analysis and Optimization, St. Louis, Missouri, September 1998
15.	 Cramer EJ, Dennis JE, Frank PD, Lewis RM, Shubin GR (1994) Problem formulation for 
multidisciplinary optimization. SIAM J Optim 4:754–776
16.	 Braum R, Gage P, Kroo I, Sobieski I (1996) Implementation and performance issues in c.o. In 
Proceedings of Sixth AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analy-
sis and Optimization, Bellevue, Washington, September 4–6 1996. AIAA Paper No. 96–4017
17.	 Renaud G, Shi G (2002) Evaluation and implementation of multidisciplinary design opti-
mization (MDO) strategies. In Proceedings of the 23rd ICAS Congress, Toronto, Canada, 
September 2002
18.	 Kodiyalam K, Yang RJ, Gu L, C-H Tho (2004) Large-scale, multidisciplinary optimization of 
a vehicle system in a scalable, high performance computing environment. Struct Multidiscip 
Optim 26:256–263
19.	 Kroo I, Altus S, Braun R, Gage P, Sobieski I (1994) Multi-disciplinary optimization methods 
for aircraft preliminary design, AIAA 94–4325, Fifth AIAA/USAF/NASA/ISSMO Sympo-
sium on Multidisciplinary Analysis and Optimization, September 7–9, Panama City, Florida
20.	 Alexandrov NM, Lewis RM (2000) Analytical and computational properties of distributed 
approaches to MDO. In AIAA Paper 2000–4718. AIAA, September 2000
21.	 Taguchi G, Chowdhury S (2000) Robust engineering. McGraw-Hill, New York
22.	 Giunta A, Balabanov V, Burgee S, Grossman B, Haftka RT, Mason WH, Watson LT (1995) 
Variable-complexity multidisciplinary design optimization using parallel computers. In: 
Alturi SN, Yagawa G, Cruse TA (eds) Computational mechanics 95–theory and applica-
tions, Proc. of ICES ’95, International Conference on Computational Engineering Science, 
pp 489–494, Mauna Lani, Big Island, Hawaii, July 1995. Springer
23.	 Bartholomew-Biggs M, Brown S, Christianson B, Dixon L (2000) Automatic differentiation 
of algorithms. J Comput Appl Math 124(1–2):171–190
5  Multidisciplinary Design Optimisation and Robust Design in Aerospace Systems

69
Chapter 6
A Framework for Numerical Design and 
Optimization Algorithms
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_6
6.1  Overview
As described in previous chapters design and optimization in aeronautics are com-
plex tasks due to nonlinearity, multi-objective, multi-disciplinary considerations in-
volved in the optimization procedure. In order to handle the level of complexity of 
the design problem it is desirable to develop a framework. A framework facilitates 
integration of a series of design tools, graphical user interfaces, post-processing 
capabilities and other means to solve the design problem.
This chapter focuses on the requirements, development and implementation of 
a framework that uses evolutionary techniques and analysis tools in which differ-
ent multi-disciplinary and multi-objective problems in aeronautics can be analysed. 
Detailed pseudo-code and algorithms for the advanced techniques described in pre-
vious chapters are also presented.
6.2  An Optimization Framework
A framework for robust, practical and efficient optimization procedures needs to 
satisfy a series of requirements which can be subdivided into problem formulation, 
optimization methods, problem execution, architectural design and information ac-
cess [1–5].
Problem Formulation 
•	 The framework should allow the user to configure and reconfigure different MO 
and MDO formulations easily with low level programming.
•	 The framework should handle problem formulations that can be multi-objective, 
multi-modal, discontinuous, or dealing with noisy search spaces.

70
6  A Framework for Numerical Design and Optimization Algorithms
Optimization Methods 
•	 The framework should allow ease of integration of robust optimization methods.
•	 It should also allow integrating different discipline analysis with different opti-
mization methods and should provide schemes which involve sub-optimization 
within each design module.
Problem Execution 
•	 The framework should allow the execution and movement of data in an auto-
mated fashion;
•	 The framework should be able to execute multiple processes in parallel and on 
heterogeneous computers;
•	 A batch mode should be also implemented.
Implementation and Architectural Design 
•	 The framework should be developed using object-oriented principles;
•	 The framework should allow the user to incorporate legacy codes, which can be 
written in different programming languages, and proprietary software where the 
source code is not available;
•	 The framework should provide an easy to use and intuitive Graphics User Inter-
faces (GUI);
•	 The framework should be easily extended by developing new interfaces required 
to integrate new processes into a system;
•	 The framework should not impose unreasonable overhead on the optimization 
procedure;
•	 The framework should be based on standards.
Information Access 
•	 The framework should provide facilities for database management;
•	 The framework should provide capabilities to visualize intermediate and final 
result from the analysis or optimization;
•	 The framework should also allow capabilities for monitoring and viewing the 
status of an execution and its system status;
•	 It should be also a mechanism for fault tolerance.
With these requirements in mind a general scope for the framework can be identi-
fied. The framework explained in this chapter address these requirements to some 
extent. Figure 6.1 shows a representation of different components to satisfy these 
requirements. The framework has seven major constituents: a robust optimization 
tool, a problem formulation capability within each analysis module, some architec-
tural design considerations such as a Graphics User Interface, a Design of Experi-
ments (DOE) module, some analysis modules, and capabilities for parallel comput-
ing and post-processing. In the following sections and subsections each of these 
constituents is detailed.

71
6.3  Implementation of the Framework
6.3  Implementation of the Framework
Integrating all these components remains a complex task. This section considers a 
general formulation for MDO and multi-criteria problems with selection and de-
scription of an optimization tool, development of the architecture, a GUI and ca-
pabilities for pre- and post-processing. The DOE capability has been accounted 
for, but has been evaluated only for simple mathematical test cases. The following 
sub-sections detail how the requirements are satisfied.
Problem Formulation and Solution  There are mathematical and engineering opti-
mization problems that give difficulties or cannot be solved by traditional gradient 
based techniques. When these problems are formulated the search space can be 
multi-modal, non-convex or discontinuous, with multiple local minima and noise 
or problems where multiple solutions simultaneously, a Nash equilibrium point or 
a set of non-dominated solutions, are sought. Some problems in aeronautical and 
Unmanned Aerial Vehicle (UAV) design fall into this category.
Population based techniques are now well known as they can be suited to solve 
these type of problems. However one major drawback of Evolutionary Algorithm 
based optimizers is that they are slow in converging as they require a large number 
of function evaluations to find optimal solutions and have relatively poor perfor-
mance with an increasing number of discipline specific and interdisciplinary vari-
ables. Hence a continuing effort has been dedicated to developing robust and faster 
numerical techniques to solve complex problem formulations, overcome these chal-
lenges and facilitate the complex task of design and optimization in aeronautics.
Selection of a Robust Optimization Tool  A second consideration is the selection of 
an optimization tool that is appropriate for the problem to be solved. For many prob-
Fig. 6.1   A MDO framework
 

72
6  A Framework for Numerical Design and Optimization Algorithms
lems a traditional gradient based method, a canonical simple Genetic Algorithm 
(GAs) or Evolution Strategy (ES), will work nicely but more complex problems 
require more robust approaches. In this direction, advanced optimizers and algo-
rithms described in the previous chapter have to be used.
Architectural Design and Information Access  To satisfy the architectural design 
requirements the framework uses an object-oriented approach in C++. The ben-
efits of using object-oriented software are the ease of implementation and extension 
of software in a modular fashion by the use of classes and different methods. In 
an industrial and academic environment the need for a user-friendly application is 
required hence a simple GUI may be designed. There were many considerations 
and options for the GUI development, but knowledge in C++ and the use of object-
oriented principles have been the main considerations. In this book, the Fast Toolkit 
(FLTK.org) library is selected for this task. This toolkit provides a friendly and easy 
to use environment for different implementations. The GUI is simple and modular 
on its implementation and consists of five main modules. The main modules are: 
Design and Analysis, Design of Experiments, Post-processing and Parallel Process-
ing. A GUI facilitates development, extension and modifications of modules in a 
rather simple manner. The user has to create only a few subroutines within the cor-
responding module.
Design and Analysis Module  A design module allows the user to conduct a single 
design and optimization for different aeronautical applications and mathematical 
test cases. So far this module contains five sub-modules for aerofoil, multi-element 
aerofoil, nozzle, wing, aircraft and mathematical functions design or optimization. 
As designed the framework is flexible and provides for ease of implementation of 
other design modules. Modules currently under development are those for propel-
ler, cascade aerofoils and rotor blade design.
Development of Aeronautical Design Modules  Before implementing a sub-module 
it is necessary to develop a design module interface. This comprises a series of 
files written in C++ that allow communication between the GUI, analysis codes, 
the optimizer and the parallel processing capability. In the design of the interface a 
choice has to be made depending on whether the source code for the analysis tool 
was available or not. In the current implementations minimal modification to the 
source code was required. Ideally it is desirable to operate only through the input/
output files of the analysis tool. In the implementations considered, a design tem-
plate was used in conjunction with one or two additional files which contain the 
necessary linking subroutines allowing a rather fast implementation of the design 
modules. There are subroutines for aircraft, nozzle, wing and full aircraft configu-
ration design. Each of these options allows the designer to perform a single design 
analysis or a full optimization.
Aerofoil Design and Optimization Module  This module allows the user to perform 
a single analysis or a full airfoil optimization routine. Three different CFD codes 
and a combination of them can be used: A panel method (XFOIL) [6], an Euler + 
boundary layer (MSES) [7], an Euler Finite Element Analysis software (PUMI) [8] 
or Navier -Stokes flow analysis solver (NSC2KE [9]).

73
6.3  Implementation of the Framework
Wing Design and Optimization Module  This module allows the user to conduct a 
single analysis on a wing or an optimization study. These could be studies in one or 
several objectives or with multiple disciplines.
Aircraft Design and Optimization Module  This module allows the user to analyse 
and optimize different problems related to aircraft external configuration design. It 
can be used to design and optimize different subsonic, Unmanned Aerial Vehicles, 
transport or supersonic aircraft. Single or multi-criteria optimization studies can 
be performed. Comparison of different multi-criteria analysis such as Pareto opti-
mality and the Nash equilibrium approach are possible. The user can select from 
two different analysis codes: an object-oriented Aircraft Design and Analysis Soft-
ware (ADA) or the Flight Optimization System (FLOPS) software developed by 
A. McCullers at NASA Langley. ADA is conceptual design and analysis software 
written using object-oriented principles and is based on the formulation described 
in Raymer [10, 11]. FLOPS [12], a more robust solver, are a workstation-based 
code which has capabilities for conceptual and preliminary design and evaluation 
of advanced concepts. The sizing and synthesis analysis in FLOPS are multi-disci-
plinary in nature. It has a numerous modules and analysis capabilities for take-off, 
performance, structural, control, aerodynamics, noise and electromagnetic Radar 
Cross Section (RCS) freeware. This code is used in some universities as well as in 
aerospace firms and governmental institutions for MDO development and it allows 
an integral multi-disciplinary analysis for the entire aircraft mission and calculation 
of performance parameters such as range, endurance, take-off field length and land-
ing field length.
Multi-Element Airfoil Design and Optimization Module  Similar to the airfoil design 
module, it allows the designer to perform a single analysis or a full optimization, 
which the user can choose from an Euler or Navier-Stokes analysis.
Mathematical Test Functions Module  This module allows the user to design, and 
evaluate single, or multi-criteria mathematical test functions which give confidence 
in the robustness and performance of the optimization method before deciding on 
its application to real world problems. The current implementation includes mathe-
matical test functions for single or multiple criteria, constrained optimization, DOE 
and non-linear goal programming problems.
Robust Design Module  A robust design module allows the user to evaluate aerody-
namic quality, structural quality, and electromagnetic quality for a design model in 
terms of mean and standard deviation or variance in the MDO system. The module 
contains four sub-modules for airfoil, multi-element airfoils, wing, and aircraft opti-
mization. The module can be easily coupled to any optimizer for robust aeronauti-
cal, aero-structural or aero-structure-electromagnetic applications (cf. applications 
in the following chapters).
Parallel Computing Module  One of the drawbacks of EAs is slow convergence but 
this module allows the users to dynamically create, add or delete nodes on the paral-
lel implementation. Recent work on multi-criteria parallel evolutionary algorithms 

74
6  A Framework for Numerical Design and Optimization Algorithms
has allowed significant performance and robustness gains in global and parallel 
optimization [13–15]. The framework considers the implementation of a cluster of 
PCs, wherein the master carries on the optimization process while remote nodes 
compute the solver code. The message-passing model used is the Parallel Virtual 
Machine (PVM) [16].
Post Processing  The approach considered for post-processing is to use a combi-
nation of visualisation capabilities within each analysis software. Common to all 
design modules is the visualisation of the evolution progress of the fitness function, 
Nash Equilibria and Pareto fronts for multi-criteria problems. Post-processing tools 
on each analysis module include a top view of the wing plan forms and a general 3D 
view of the resulting aircraft configurations. Visualisation tools within each analy-
sis software module include the surface pressure coefficients distribution on the 
airfoil using an Euler with Boundary Layer effects flow solver or pressure or Mach 
contours using a Navier-Stokes flow solver.
Implementation of Different Legacy Codes  The framework also implements legacy 
codes in different programming languages C, C++, Fortran 90, and Fortran 77. The 
optimizer has been successfully coupled with the following aerodynamic and analy-
sis software: FLO22 [17] FLOPS, ADA, XFOIL, MSES, NSC2ke and PUMI. One 
of the benefits of using an Evolutionary optimizer is that EAs require no deriva-
tives of the objective function. The coupling of the algorithm with different analysis 
codes is achieved by simple function calls and input and output data files.
6.4  Optimization Methodology
The design optimization methodology used in the examples presented in the follow-
ing chapters can be summarised as:
•	 Problem Definition (Includes problem formulation, definition of the EA strategy, 
fitness function and constraints),
•	 Design Variables (includes definition and encoding of design variables),
•	 Implementation (includes the definition of analysis tools-software, design and 
optimization rationale and evaluation with EA Method),
•	 Numerical Results (includes optimization results and post-processing of com-
promised optimal solutions).
Problem Definition  A first step consists of problem definition or formulation. When 
the scientist or the technologist are considering the solution and optimization of a 
real -world engineering problem, usually they try to create a well-posed mathemati-
cal formulation which is representative of the problem at hand. The problem in fact 
is that there are several complexities involved in the procedure. Therefore some 
assumptions have to be made. This can be illustrated with a simple example: the 
shape of the design and optimization of an aircraft wing or a wing section; during 
the entire aircraft mission the wing is subject to numerous flight conditions which 

75
6.4  Optimization Methodology
are characterised by different Mach numbers, Reynolds numbers, angles of attack 
and other flight parameters. To obtain the optimum shape for this wing, the design 
has to exhibit good characteristics with regard to the aircraft payload, total mass, 
aerodynamic and structural performances. This is a complex task, therefore a sound 
solution to the problem is to make some assumptions and identify the main flight 
conditions, design parameters, constraints and then construct an optimization prob-
lem in order to improve performances.
A second step is the selection of an optimization strategy. As discussed in 
Chaps. 1 and 2, even though traditional gradient based methods are fast, the com-
plexity, nonlinearity and multi-objective characteristics of some problems may re-
quire the use of more robust optimizers. Also, the computational cost of a turbulent 
Navier-Stokes or Euler solution around a high lift device, 3D wing for example 
involves high computational expense, therefore it is also desirable to use parallel 
computations and a multi-fidelity approach. In these cases, an efficient and robust 
Parallel Multi-Objective EA (PMOEA) is used.
In this step the user also needs to specify a series of constraints, such as maximum 
and minimum thickness location, pitching moment and lower and upper bounds for 
the parameterized Bézier or Spline control points.
The objective or fitness function is specified by the end user of the optimizer. 
It can be referred to by many other names, such as the cost function and also pay-
off function. It may be purely mathematical, the result of some solution procedure 
(Computational Fluid Dynamics, Finite Element Analysis, etc.) or be the result of 
an experiment. Formally, the fitness function is simply defined as:

(6.2)
where x is the vector of object variables and f is the resulting vector of fitness val-
ues. Neither f nor x can be empty vectors. One vector of object variables is associ-
ated with each individual, so it is also possible to write: f = f (I).
Further, it can be applied to each member of a population, so it can be written 
as: μeval = f( μ). The distinction between problems in single and multiple objectives 
occurs here, with the fitness vector only having one element for a single objective 
problem.
Design Variables  The selection of an appropriate definition of design variables 
and geometric representation that accounts for the complexities of the design space 
is the third step. In aerofoil shape optimization, parameterizations with Bézier or 
Spline curves or a PARSEC representation can be used. In the Bézier curves repre-
sentation, for the design variables, a combination of mean line and thickness distri-
bution control points is used (see Sect. 8.3.1 for more details). Similar to the NACA 
series airfoils, the PARSEC parameterises upper and lower surface of the airfoil 
using polynomial in coordinates X, Z as:

(6.1)
( )
f
f x
=
6
1/2
1
.
n
n
n
Z
a X
−
=
= ∑

76
6  A Framework for Numerical Design and Optimization Algorithms
where an are real coefficients. The PARSEC aerofoils are defined by basic geomet-
ric parameters: leading edge radius ( rle), upper and lower crest locations including 
curvatures ( Xus, Zus, Zxxus, Xls, Zls, Zxxls), trailing edge ordinate ( Zte), thickness ( ΔZte) 
and directions and wedge angles ( αte, βte). These parameters can be expressed by the 
original coefficients an by solving a simple set of simultaneous equations.
Implementation  In this step it is recommended to develop an optimization algo-
rithm. An example of an optimization flow chart is illustrated in Fig. 6.2. Initially 
the design variables, design constraints, flow conditions and fitness functions are 
defined and then an initial population of wing geometries is generated at random. 
Then while the termination criteria has not been satisfied, the algorithm generates 
shapes, evaluates fitness, evolves by recombining and mutating individuals, sorting 
non-dominated solutions, computes Pareto fronts and updates non-dominated solu-
tions and proceeds with migration process if there are multiple (hierarchical popula-
tion or hybridized Nash-Player/Pareto Game populations). The termination criterion 
is satisfied when the prescribed number of function evaluations is reached or when 
the fitness value goes below a prescribed number. The last stage is designation of 
the result such as best-so-far individual, Pareto non-dominated solutions (Pareto-
front) and/or Nash-Equilibrium and termination of the optimization procedure.
The next step is to decide which type and fidelity of solver to use. A decision has 
to be made in order to compromise on the use of a higher fidelity solver, such as a 
Navier-Stokes solver/Finite Element Analysis which are computationally expensive 
but accurate, the use of lower fidelity models, such as Euler or panel or analytical 
methods, which are fast but could be unstable, or a combination of both. The struc-
tural properties can be computed with a combination of FEA and an analytical meth-
od. Another alternative is using a single model but defining different mesh densities.
Numerical Results  This refers to the importance of keeping track of the statistics of 
the evolution procedure, number of generations, Pareto fronts, Nash Equilibria, but 
without adding a major computational burden to the optimization procedure. These 
are for example plots for value of fitness function versus evolution procedure or a 
plot of the current non-dominated solutions and whole population. Equally impor-
tant is the post-processing of final solutions. This is related to what is interesting 
to the designer: these can be for example comparing shapes on the Pareto optimal 
front, comparing the Cp distribution over an airfoil, and/or comparison of aerody-
namic performance of the baseline geometry and optimal solutions.
6.5  Optimization Algorithms
6.5.1  Overall Optimization Algorithm
Figure 6.2 ( Algorithm 1) describes the general aerospace optimization problem and 
initially it defines:

77
Fig. 6.2   Overall algorithm for design optimization problems
 
6.5  Optimization Algorithms

78
6  A Framework for Numerical Design and Optimization Algorithms
•	 Number of run and termination criterion,
•	 Design variables, design bounds and fitness functions,
•	 Desired flow conditions,
•	 Hierarchical topology setup.
An initial population of airfoil/wing geometries which are pre -described in the 
hierarchical topology layers are randomly generated. The optimizer will run until 
the termination conditions are met. The algorithm generates candidate wing ge-
ometries to be evaluated with the computational model corresponding to the hier-
archical nodes (Sect. 4.3). The fitness values of a candidate solution are evaluated 
by Algorithm 2 and used by Algorithm 1. It is also at this stage where the evolu-
tion procedure (mutation, crossover and selection) occurs. If the problem considers 
multi-objective design problems, the algorithm computes the Pareto non-dominated 
solutions; otherwise it will only compute an updated progress (convergence) history 
showing the fitness values along the number of function evaluations. The algorithm 
will also perform best individual migration from one population to another.
The criterion for a satisfactory termination of the following parameters:
•	 A pre-described number of function evaluations is reached;
•	 The fitness value goes below a pre-defined number;
•	 CPU time goes over the pre-defined time.
The final stage is the designation of results such as ‘the best-so-far individual’ or 
‘non-dominated individuals’ on the Pareto fronts.
6.5.2  A Generic Problem for Analysis Algorithm
Figure 6.3 ( Algorithm 2) shows the flow chart of a generic problem for an analysis 
algorithm to compute the fitness values of random initial population and off-springs. 
The algorithm couples evolutionary optimizer HAPMOEA and analysis tools used 
in aerodynamics (Computational Fluid Dynamics (CFD)), in structure (Finite El-
ement Analysis (FEA)) and in electromagnetics (Radar Cross Section (RCS)). It 
can be easily modified to accommodate the purposes of any problems. These tools 
are chosen by the designer and linked to this algorithm. The analysis tool will run 
only one time for a single point design and several times for multi-points design 
problems. In addition, two or three inter-disciplinary (CFD, FEA or RCS) analysis 
tools will run for multi-disciplinary design optimization. The fitness functions will 
be formulated and computed in this algorithm and then the fitness values are trans-
ferred to the optimizer: these steps are described in Algorithm 1.
The figure illustrates an example for an airfoil or wing/airfoil sections and plan 
form shape analysis. The algorithm starts with collecting information for the in-
dividual from Algorithm 1 shown in Fig. 6.2 . This information includes design 
variables, flow conditions, size of fitness vectors, and the type of analysis depend-
ing on the hierarchical multi-population/multi-fidelity/multi-resolution in which an 
individual belongs to precise (node 0), intermediate (node 1 and 2) or less precise 
(node 3 to 6) models.

79
6.5  Optimization Algorithms
The shape of the airfoil is then created by using Bézier or spline curves. The 
wing geometry is generated based on wing design variables including sweep angles, 
taper ratios and the break/crank positions.
Analysis tools such as MSES (Euler and boundary layer effects) and NSC2ke 
(Navier stokes) will be run to compute the aerodynamic properties of airfoil if the 
Fig. 6.3   Algorithm 2: Generic aeronautical design optimization
 

80
6  A Framework for Numerical Design and Optimization Algorithms
problem considers the design optimization of airfoil. For a wing design optimiza-
tion, the wing is analysed by 3D aerodynamic analysis software: the FLO22 Euler 
solver with FRICTION and PANAIR software at the desired flow conditions.
These analysis tools are used to evaluate fitness functions which are then trans-
ferred to Algorithm 1.
The algorithm collects information of the fitness function parameters including
•	 Aerodynamic characteristics (
,
,
,
)
C
C
C
C
C
L
D
M
M
M
Pitching
Bending
Yawing
and
•	 And/or structural characteristics (
,
,
,
)
W
W
W
W
W
Wing
Rib
Skin
Spar
Penalty
and
•	 And/or manoeuvrability characteristics (
,
)
turning
turning
r
ω
•	 And/or RCS characteristics (
)
RCS
RCS
Mono
Bi
and
.
6.5.3  Single-Objective Design Optimization Algorithm
An example of a single objective optimization algorithm is shown on Fig. 6.4 ( Algo-
rithm 3) where the objective is the minimisation of the drag coefficient at a desired 
flight condition. The objective of an inverse design algorithm can be for example to 
minimise the deviation between pre-computed pressure distribution and candidate 
pressure distribution to capture the target aerofoil shape or wing aerofoil sections.
6.5.4  Multi-Objective Design Optimization Algorithm
Figure 6.5 shows an example of a multi-objective algorithm ( Algorithm 4). This al-
gorithm can be used for a multi-objective or multi-point aerodynamic shape design 
optimization for an Unmanned Aerial System (UAS).
6.5.5  Optimization Algorithm with Multi-objective Hierarchical 
Evolutionary Algorithms
Integrated with a hierarchical multi-objective evolutionary algorithm (HMOEA) 
(Sect. 4.3), this analysis takes the form illustrated in Fig. 6.6 ( Algorithm 5). As 
already described in Chap. 4, this algorithm uses a hierarchical approach with three 
levels, on the bottom level a coarse type analysis to direct the exploration, at the 
top level a more precise model that better describes the physics involved and at 
an intermediate level, a compromised balance between top and bottom layers is 
used. Initially the system will specify the design variables x, constraints gi, gij, and 
parameters, then it will generate random subpopulations of individuals μo at each 
layer, then it defines the number of subpopulations (nodes) i and number of hierar-
chical levels which for simplicity is equal to the number of analysis k. Once these 
initial populations are generated the algorithm will go through the steps described 
in the previous algorithms. The scheduler first determines whether given stopping 

81
6.5  Optimization Algorithms
conditions have been met, and if so the evolutionary loop is exited and the entire 
procedure is stopped. If no stopping conditions are met, the scheduler updates the 
asynchronous solver so that further progress can be made. Then the scheduler de-
termines whether or not candidate solutions which have been solved are ready for 
incorporation into the population. If such solutions exist, the incorporation routine 
is called and available candidates which now have had a fitness assigned are pro-
cessed; it receives the individual, ages the population and buffer, performs Pareto 
tournament selection, deletes the oldest from the buffer and if the acceptance is true 
it is inserted in the population which I subsequently sorted, it then updates the CMA 
parameters.
Finally, the scheduler determines whether it is possible to generate more can-
didates, by polling the asynchronous solver. If this is possible, then the generation 
routine is called and individuals are generated via the evolutionary operators, by do-
ing recombination, mutation via CMA, checking upper and lower bounds. During 
Fig. 6.4   Algorithm 3: Single-objective or inverse design optimization flowchart
 

82
6  A Framework for Numerical Design and Optimization Algorithms
evaluation, the optimizer will take output analysis ai and parameters p to guarantee 
satisfaction of constraints and compute the overall fitness function. If the problem 
is multi-objective the algorithm will find the non-dominated individuals and will 
calculate the Pareto fronts.
On a hierarchical topology with three levels, when the epoch is finished or the 
migration criteria is satisfied, the migration phase occurs:
Layer 1 gets best solutions from Layer 2 and re-evaluates them using analysis 
type one, Layer 2 gets random solutions from Layer 1 gets best solutions from 
Layer 3 and re-evaluates them using analysis type two, Layer 3 gets random solu-
tions from Layer 2 and re-evaluates them using analysis type three.
This process continues until a stopping condition is reached. These can be for 
example reaching a limited number of function evaluations, CPU time hours or a 
prescribed value on the fitness function.
Fig. 6.5   Algorithm 4: Multi-point/Multi-objective design optimization
 

83
6.5  Optimization Algorithms
'HILQH GHVLJQYDULDEOHV[ SDUDPHWHUV SDQGFRQVWUDLQWV
LM
L J
J
S
[
'HILQH
J




'HILQH QXPEHURIVXESRSXODWLRQV QRGHVL KLHUDUFKLFDOOHYHOVDQGLQWHJUDWHG DQDO\VLV
N
L
'HILQH
N


IRU DOOOHYHOVLQLWLDOL]HVXESRSXODWLRQV
N
Q
$QDO\VLV











/D\HU 8VHV7\SH LQWHJUDWHG DQDO\VLV


  $QDO\VLV
LQLW
/D\HU 8VHV7\SH LQWHJUDWHG DQDO\VLV







$QDO\VLV
LQLW
/D\HU  8VHV7\SH LQWHJUDWHG DQDO\VLV













$QDO\VLV
LQLW
ORRS
ZKLOH VWRSSLQJFRQGLWLRQQRWPHW
8SGDWHWKHDV\QFKURQRXVVROYHU
LI VROYHGLQGLYLGXDOV DUHDYDLODEOHLQFRUSRUDWHWKHP
$QHZLQGLYLGXDOLV UHFHLYHG ,QHZ
$JHSRSXODWLRQ )RUHDFK L LQ  ¶LBDJH  LBDJH 
$JHVHOHFWLRQEXIIHU )RUHDFK EL LQ% E¶LBDJH ELBDJH 
3HUIRUP WRXUQDPHQW VHOHFWLRQ
DFFHSW WRXUQDPHQW ,QHZE
'HOHWHROGHVW EL LQVHOHFWLRQEXIIHULQVHUW ,QHZ
LI DFFHSW WUXH
3HUIRUP UHSODFHPHQWLQ UHSODFH,QHZ 
6RUW
HQGLI
8SGDWH&0$SDUDPHWHUV UHIDOJ
LI QHZLQGLYLGXDOVFDQ EH SURYLGHGJHQHUDWHWKHP
[QHZGLVWȡ UHFRPELQHȝ
0XWDWHRIIVSULQJYLD&0$
IRUL «1 
]L  1
ORRS
[
 [ %']
6WRUH] LQ ,QHZ
HQGLI
IRUL «1
LI [¶L ! 8L RU [¶L ! /L UHWXUQ IDOVH
ORRS
UHWXUQ WUXH
(YDOXDWH FDQGLGDWHXVLQJVSHFLILFLQWHJUDWHG DQDO\VLVW\SH
L
J
0
J
$QDO\VLV
I



*HW
RXWSXW
DQDO\VLV
DL
SDUDPHWHUV
S
FKHFN
FRQVWUDLQWV
J
DQG
DGG
«SHQDOW\
SHQDOW\
I
J
0
J


LI 0XOWLREMHFWLYH &DOFXODWH3DUHWR IURQWV3DUHWR

J
0
3DUHWR
)URQW
3DUHWR
LI HSRFK FRPSOHWHG
6WDUWPLJUDWLRQ
L
J
L
J
L
J
L
$QDO\VLV
PLJ
N
N
N


/D\HU 5HFHLYH EHVWVROXWLRQV IURPOD\HUUHHYDOXDWHXVLQJ7\SH LQWHJUDWHG DQDO\VLV







$QDO\VLV
I
N
N
N
N
N
J
R
J
R
J
J
J
/D\HU 5HFHLYH UDQGRPVROXWLRQV IURPOD\HUDQGEHVWIURPOD\HUUHHYDOXDWHWKHPXVLQJW\SH 
LQWHJUDWHG DQDO\VLV






















$QDO\VLV
I
N
N
N
N
N
N
J
J
J
J
J
J
/D\HU 5HFHLYH UDQGRPVROXWLRQV IURPOD\HUUHHYDOXDWHVWKHP XVLQJW\SH LQWHJUDWHG DQDO\VLV





















$QDO\VLV
I
N
N
N
N
J
J
J
J
ORRS
Fig. 6.6  Algorithm 5: Hierarchical multi-objective evolutionary algorithm

84
6  A Framework for Numerical Design and Optimization Algorithms
6.5.6  Multi-Disciplinary Design Optimization Algorithm
Chapter 9 considers three main examples of multi-disciplinary design optimization 
but the reader can expand or use these examples for their own applications:
•	 Aerodynamic and Structural design optimization.
•	 Aerodynamic and Electromagnetic design optimization.
•	 Aerodynamic and Manoeuvrability (structural weight) and Electromagnetic de-
sign optimization.
For example, the first test case considers a multi-disciplinary design optimization 
problem for a Multi mission (MM) -UAV considered (Chaps. 9 and 10). The ob-
jectives can be to maximize the aerodynamic performance while minimising the 
wing structural weight where the wing structure is satisfied for a critical load. More 
Fig. 6.7   Algorithm 6: Multi-disciplinary design optimization
 

85
complex cases are shown in Chap. 10 in which three disciplines including aerody-
namics, manoeuvrability and electromagnetism at mono and bi-static radar systems 
are considered. Algorithm 6 shown in Fig. 6.7 illustrates the concept: the candidate 
geometry is analysed by the different disciplines (aerodynamics, structures, electro-
magnetics) after receiving the information from Algorithm 1.
Fig. 6.8   Algorithm 7: Uncertainty based design optimization
6.5  Optimization Algorithms

86
6  A Framework for Numerical Design and Optimization Algorithms
6.6  Robust Design Optimization
Figure 6.8 (Algorithm 7) considers improving the quality of a set of solutions by 
applying the concepts of the robust/uncertainty design method. The robust design 
method uses statistical information including mean and variance/standard devia-
tion associated to the objective fitness functions during optimization. The mean and 
variance standard deviation values represent the magnitude of performance and the 
performance sensitivity stability to the variable input parameters such as geometry, 
flight conditions, radar frequency, etc.
Uncertainties can be taken into account and implemented in a single or multi-
objective or multi-disciplinary design optimization; examples are presented and 
discussed in Chap. 9.
6.7  Summary of Chapter
This chapter described a generic framework for single objective, multi-objectives 
and multi-disciplinary design optimization using EAs. Simple example algorithms 
for a single objective, multi-objectives and MDO, and robust design problems and 
their implementation were introduced and proposed to the reader. Although quite 
simplistic for better understanding, these few examples provide an introduction to 
more complex examples described and detailed in following chapters.
References
  1.	 Bennett JA, Botkin ME, Koromilas C, Lust RV, Neal MO, Wang JT, Zwiers RI (1997) A 
multidisciplinary framework for preliminary vehicle analysis and design. In: Proceedings of 
the ICASE/NASA Langley workshop on multidisciplinary design optimization
  2.	 Booker J, Dennis JE, Frank PD, Serafini DB Jr, Torczon V, Trosset MW (1999) A rigorous 
framework for optimization of expensive functions by surrogates. Struct Optim 17(1):1–13
  3.	 Salas O, Townsend JC (1998) Framework requirements for MDO application development. 
In: Proceedings of seventh AIAA/USAF/NASA/ISSMO symposium on multidisciplinary 
analysis and optimisation, St. Louis, Missouri, September 1998
  4.	 Sankar MR, Amitay I, Mujumdar PM, Sudhakar K (2002) MDO framework development-A 
case study with an elementary model of airborne early warning system optimization. In: Pro-
ceedings of the 9th AIAA/USAF/NASA/ISSMO symposium on multidisciplinary analysis 
and optimization, Atlanta, Georgia, September 2002
  5.	 Weston RP, Townsend JC, Eidson TM, Gates RL (1994) A distributed computing environ-
ment for multidisciplinary design. In: Proceedings of fifth AIAA/USAF/NASA/ISSMO sym-
posium on multidisciplinary analysis and optimization, Panama City, Florida, September 7–9 
1994
  6.	 Drela M. 6.94 User guide. MIT Aero Astro
  7.	 Drela M A user’s guide to MSES V2.3
  8.	 Flores R, Ortega E PUMI: an explicit 3D unstructured finite element solver for the Euler 
equations. Technical report, CIMNE, Spain

87
  9.	 Mohammadi B Fluid Dynamics Computation with NSC2KE: an User-Guide Release 1.0, 
Institut National de Recherche en Informatique et en Automatique, N RT-0164
10.	 Raymer D Enhancing aircraft conceptual design using multidisciplinary optimization. PhD 
thesis, KTH, Department of Aeronautics, FLYG 2002-2
11.	 Raymer D Aircraft design: a conceptual approach, 3rd edn. American Institute of Aeronautics 
and Astronautics American Institute of Aeronautics and Astronautics
12.	 McCullers A FLOPS user’s guide, release 6.02, NASA Langley Research Center
13.	 Lee DS, Srinivas K, Gonzalez LF, Periaux J, Obayashi S. Robust multidisciplinary design op-
timisation using CFD & advanced evolutionary algorithms. In Hafez, MM, Oshima K, Kwak 
D (eds) Computation fluid dynamics review 2010. World Scientific Publishing Company, 
Incorporated, Singapore, pp 469–491. ISBN 978-981-4313-36-0
14.	 Lee DS, Gonzalez LF, Periaux J, Srinivas K Evolutionary optimisation methods with uncer-
tainty for modern multidisciplinary design in aeronautical engineering, notes on numerical 
fluid mechanics and multidisciplinary design (NNFM 100), 100 volumes NNFM and 40 
years numerical fluid mechanics, Chap. 3. Springer-Berlin, Heidelberg, pp 271–284 (ISBN 
978-3-540-70804-9)
15.	 Lee DS, Gonzalez LF, Periaux J UAS Mission Path Planning System (MPPS) using hybrid-
game coupled to multi-objective design optimizer. J Dyn Syst Meas Control 132(4). ASME, 
DS-09-1135 041005-1-11
16.	 Geist A, Beguelin A, Dongarra J, Jiang W, Manchek R, Sunderam V PVM: parallel virtual 
machine. A user’s guide and tutorial for networked parallel computing. Massachusetts Insti-
tute of Technology, USA
17.	 Jameson A, Caughey D, Newman P, Davis R A brief description of the Jameson Caughey 
NYU transonic swept-wing computer program FLO22, NASA Technical Memorandum, 
NASA TM X-73996
References

89
Chapter 7
Single Objective Model Test Case Problems
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_7
7.1  Overview
There are a number of engineering optimization problems that are single-objective 
or can be represented by a weighted sum if the weights are known in advance. In-
verse design including reconstruction problems are also another type of single-ob-
jective problems. This chapter illustrates the application of some of the techniques 
described in previous chapters to wing airfoil reconstruction design, active flow 
control bump design, and generic aircraft wing airfoil section design optimizations.
7.2  Wing Reconstruction Using Hierarchial 
Asynchronous Parallel Multi-Objective Evolutionary 
Algorthms (HAPMOEA) and Nash-Evolutionary 
Algorithms
Problem Definition  In this example, the pressure distribution of an ONERA M6 
wing is reconstructed using two different optimization methods: the first method 
considers Hierarchical Asynchronous Parallel Multi-Objective Evolutionary 
Algorithms (HAPMOEA) using three layers with seven populations as shown in 
Sect. 4.3. Each node (Node 0 ~ Node 6) of HAPMOEA will consider whole airfoil 
section design variables at root, crank and tip through different resolutions achieved 
with an Euler flow analysis solver. The second method is Nash-EAs using three 
Nash-Players with six (6) multi-fidelity sub-players and topology of Nash-EAs is 
shown in Sect. 4.6.2. Each Nash Player (NP 1 ~ NP 3) considers only airfoil sec-
tions at root or crank or tip but Nash players’ decisions are coupled via the nonlinear 
partial differential equations of the flow modelling in the computational domain 
around the wing.

90
7  Single Objective Model Test Case Problems
This problem concerns only one single-objective to minimize the deviation be-
tween pre-computed pressures on ONERA M6 wing and candidate solution pres-
sures distribution using Algorithm 3 shown in Sect. 6.5.4.
The fitness function is shown below in (7.1)

(7.1)
where n and m represent the number of span wise and chord wise sections respec-
tively.
In this problem, n and m consider twenty one (21) span wise sections and one 
hundred forty one (141) chord wise points respectively for the precise model in 
HAPMOEA and Nash-EAs optimizers. The stopping criterion is:

(7.2)
The optimization run will be stopped when the fitness value is lower than 0.0175 
and elapsed time is over fifty (50) h. For example, HAPMOEA will be terminated 
when the first layer (Node 0) reaches pressure deviation less than 0.0175. Nash-EAs 
will be terminated when all Nash-Players (NP1, NP2 and NP3) have a deviation 
value less than 0.0175. The flow conditions are shown on Table 7.1.
where Re is abbreviation for Reynolds number
Design Variables  The design variables, namely airfoil sections at root, crank and tip 
are considered with fixed external wing geometry. Each airfoil section has nineteen 
(19) control points and its design upper and lower bounds are shown in Fig. 7.1.
In total, fifty seven (57) design variables are considered for the reconstruction 
design problem.
The baseline wing geometry is described on Table 7.2 and Fig. 7.2.
Implementation  The Euler FLO22 flow analyser [5] is run to evaluate candidate 
solutions and the following specific parameters are considered for the HAPMOEA 
evolutionary optimizer using a hierarchical topology.
1st Layer
Population size of 5 and intermediate recombination with residual 1 × 10−6
2nd Layer
Population size of 20 and intermediate recombination with residual 1 × 10−5
3rd Layer
Population size of 30 and intermediate recombination with residual 1 × 10−4
(
)
Target
Candidate
1
1
1
min
ij
ij
n
m
i
j
f
abs
Cp
Cp
n
m
=
=














=
−




+
















∑∑
(
0.0175 ||
St
50
op 
)
elapsed
if f
time
h
≤
≥
Table 7.1   Flow conditions
Description
M∞
α
Re
Values
0.84
3.06°
11.72 × 106

91
7.2  Wing Reconstruction Using Hierarchial Asynchronous Parallel …
Table 7.2   The ONERA M6 wing configuration zz
Variables
AR
B
ΛIn
ΛOut
λIn
λOut
ΓOverall
Values
3.806
2.39
30°
30°
0.781
0.562
0°
Fig. 7.1   An airfoil section design bounds at root, crank and tip
 
Fig. 7.2   The ONERA M6 
wing geometry
 

92
7  Single Objective Model Test Case Problems
Numerical Results  Both methods HAPMOEA and Nash-EA are implemented on 
two 2.4 GHz processors. The optimization convergence history obtained by HAP-
MOEA and Nash-EAs are shown in Figs. 7.3 and 7.4. The HAPMOEA algorithm 
was allowed to run approximately 1600 function evaluations ( f Node 0 = 0.0171) and 
took 32 CPU hours. The Nash-EAs algorithm ran approximately 315 function eval-
uations (  f NP1-2-3 = 0.0166) and took eight (8) CPU hours which is 25 % of the com-
puting cost of HAPMOEA.
The optimal surface pressure distributions obtained by HAPMOEA and Nash-
EA software are compared to the target pressure distribution in Figs. 7.5 and 7.6.
It can be observed from the results that there is a good agreement between the 
ONERA M6 wing pressure (baseline) and the optimized pressure distributions ob-
tained by HAPMOEA and Nash-EAs optimizers. Even though Nash-EAs ran only 
25 % of HAPMOEA computational cost, the optimal design obtained by Nash-EAs 
generates lower surface pressure deviation.
7.3  Active Flow Control Bump Design Optimization
Classical challenges in most modern aircraft design technologies include the re-
duction of the Direct Operation Cost (DOC) by minimizing the drag during cruise 
and, maximizing the lift for take-off, landing and manoeuvring. Various missions 
Fig. 7.3   Convergence history obtained with the use of the HAPMOEA software optimizer
 

93
7.3  Active Flow Control Bump Design Optimization
Fig. 7.4   Convergence history obtained by the Nash-EAs software optimizer
 
Fig. 7.6   Pressure comparison between ONERA M6 and optimal wing obtained by Nash-EAs 
software
 
Fig. 7.5   Surface Pressure comparison between ONERA M6 and the optimal wing obtained by 
HAPMOEA software
 

94
7  Single Objective Model Test Case Problems
require the improvement of aerodynamic efficiency of the wing. For this reason, 
adaptive techniques are introduced such as deformable, flexible and active con-
trol. The section investigates one type of active flow control devices Shock Control 
Bump (SCB) [2, 6, 8, 7]. The use of SCB aims to reduce compressible effects on 
upper and lower surfaces of airfoil/wing that causes wave drag at transonic speeds.
In a transonic regime, the flow over a highly cambered wing causes shock waves 
where there is a large amount of gas property changes and the flow becomes irre-
versible. Through the shock, total pressure decreases and entropy increases which 
means there is a loss of energy and therefore an increment in wave drag. To resolve 
this problem, Ashill et al. [1] introduced the concept of a transonic bump named 
also Shock Control Bump (SCB) by adapting its geometry (shape and position) on 
an airfoil.
Figure 7.7 illustrates the concept and benefit of using a Shock Control Bump. 
The transonic flow over an airfoil without SCB accelerates to supersonic and the 
pressure forms a strong shock that leads a high Cd wave as shown in Fig. 7.7a. How-
ever the pressure difference over the SCB causes the supersonic flow to decelerate 
to subsonic Mach numbers by isentropic compression waves as shown in Fig. 7.7b. 
This airfoil- bump configuration leads to significant wave drag reduction.
It can be seen that applying a SCB on the suction side of airfoil will produce a 
slightly thicker thickness ratio ( t/c) which causes an increment of the viscous drag 
( Cd Viscous); however it is still beneficial due to a Cd Wave reduction especially when 
the Mach number is higher than the critical Mach number where the shock starts 
appearing.
As described on Fig. 7.8a, the typical design variables for SCB are length, height 
and peak position and, the SCB centre will be positioned where the shock occurs 
on the transonic airfoil design. The shape of SCB can be controlled by changing the 
values of design variables as shown in Fig. 7.8b.
This section will focus not only on the shape optimization of SCB on existing 
airfoil or wing airfoil sections using Evolutionary Algorithms (EAs) but also on the 
comparison of optimization performances between single population and hierarchi-
cal topology evolutionary approaches (cf. Chap. 4).
Fig. 7.7   a Pressure coefficient ( Cp) contours for the baseline design. b Pressure coefficient ( Cp) 
contours for the baseline design with SCB
 

95
7.3  Active Flow Control Bump Design Optimization
7.3.1  Suction Side SCB Design Optimization
Problem Definition  This test case considers a single objective optimization problem 
to minimize the total drag at a fixed lift condition by applying a SCB on the upper 
surface of the RAE 2822 airfoil operating at flow conditions M =  0.77, Cl = 0.524 
and Re = 17.93 × 106. Two optimization approaches are considered: the first test 
uses a single population approach while the second test implements multi-fidelity/
resolution based hierarchical populations with three levels. The fitness function is 
shown in (7.3).

(7.3)
where Cd Total = Cd Viscous + Cd Wave and U_SCB represents a set of design variables 
for SCB on the upper surface of RAE 2822. The problem considers only SCB ge-
ometry constraints.
Design Variables  The design upper-lower bounds for the SCB geometry are given 
on Table 7.3. The centre of the SCB will be placed at the shock where the flow 
speed transits from supersonic to subsonic regime.
(
_
)
min(
)
Total
f U
SCB
Cd
=
Fig. 7.8   a Design components of Shock Control Bump. b Geometries of SCB with various peak 
positions
 

96
7  Single Objective Model Test Case Problems
Implementation  The single population approach considers a population size of 
twenty (20) and computational grid of 36 × 213 points. The following conditions are 
for multi-resolution hierarchical populations are:
1st Layer
Population size of 10 and intermediate recombination using a computational 
grid of 36 × 213 points (Node 0)
2nd Layer
Population size of 20 and intermediate recombination using a computational 
grid of 24 × 131 points (Node 1, Node 2)
3rd Layer
Population size of 20 and intermediate recombination using a computational 
grid of 36 × 111 points (Node 3 ~ Node 6)
These grid conditions produce less than 5 % accuracy error compared to precise model at the 1st 
layer (Node 0)
Numerical Results  As illustrated in Fig. 7.9, the algorithm was allowed to run for 
24 h and for 2210 function evaluations using single population approach while the 
hierarchical topology approach was run for 24 h and 1381 of function evaluations. 
The convergence obtained by single population approach occurred at 815 function 
evaluations (9.0 h) while the hierarchical topology approach converged at 430 func-
tion evaluations after 7.4 h. More precisely, the multi-resolution hierarchical topol-
ogy approach saves 18 % of the CPU time when compared to the single population 
approach.
Table 7.4 compares the aerodynamic characteristics obtained by the baseline de-
sign RAE 2822 airfoil and the baseline design combined with an upper SCB. Even 
though the upper SCB increases viscous drag by 9 %, it saves the wave drag by 
71 % which leads 26 % of total drag reduction. This optimal SCB improves L/D by 
35.5 %.
Both single and hierarchical topology approaches capture the same shape of 
SCB as shown in Table 7.5. Figure 7.10 compares the geometry of the baseline 
design and baseline with optimal SCB.
Figure 7.11 compares drag distribution obtained by the baseline design and with 
upper SCB along Cl sweep [0.2:0.7] with fixed M ∞ = 0.77, Re = 17.93 × 106. It can 
be seen that the upper SCB causes a slightly higher total drag when Cl is lower than 
0.325. This is due to the fact that applying SCB increases the thickness of airfoil. 
However, the upper SCB starts to produce a lower total drag compared to the base-
line design when Cl is higher than 0.325. In addition, it can be noticed that applying 
SCB reduces the difference between maximum and minimum drag along lift coef-
ficient which means that the SCB reduces the drag sensitivity with variability of Cl.
Table 7.3   Shock Control Bump (SCB) design variables and bounds for SCB geometry
Bounds\Design 
Variables
SCBL (%c)
SCBH (%c)
SCBP (%SCBL)
Lower
15.0
0.35
50.0
Upper
30.0
0.65
70.0
SCBL, SCBH, SCBP represent SCB length, height, and peak position respectively. The peak posi-
tion of SCB is given in percentage of SCB length

97
7.3  Active Flow Control Bump Design Optimization
Table 7.4   Comparison of aerodynamic characteristics obtained by the clean and optimal aerofoils
Aerofoils
Cd Total
Cd Viscous
Cd Wave
L/D
Baseline
0.0160
0.0090
0.007
32.607
with SCB
0.0118 (− 26 %)
0.0098 (+ 9.0 %)
0.002 (− 71 %)
44.182 (+ 35.5 %)
Note: Cl Fixed = 0.524. The chosen baseline model is the RAE 2822 airfoil
Table 7.5   Optimal SCB design components
Design components
SCBL (%c)
SCBH (%c)
SCBP (%SCBL)
Optimal SCB
29.28
0.62
67.35
The optimal SCB design components obtained by single population and hierarchical approaches 
are the same
Fig. 7.9   Convergence history for SCB on the upper surface of the RAE 2822 airfoil
 
Fig. 7.10   Comparison of clean and optimal airfoil with upper SCB (Clean-airfoil represents RAE 
2822 airfoil and RAE 2822 with upper SCB is labelled as Optimal-airfoil)
 

98
7  Single Objective Model Test Case Problems
Figure 7.12 compares drag distribution obtained by the baseline design and with 
upper SCB along Mach sweep [0.55:0.85] with Cl = 0.524, Re = 17.93 × 106. It can 
be seen that the upper SCB starts to produce lower total drag when the Mach num-
ber is higher than 0.75 even though it generates slightly higher total drag when the 
Mach is lower than 0.75. In addition, it can be noticed that applying SCB reduces 
the interval between maximum and minimum drag along the Mach numbers which 
means that SCB reduces the drag sensitivity with variation of Mach number.
7.3.2  Suction and Pressure Sides SCB Design Optimization
Problem Definition  This test case considers a single objective optimization prob-
lem to minimize the total drag at a fixed lift condition by applying two (2) SCBs on 
the upper and lower surface of the RAE 2822 airfoil at flow conditions M ∞ = 0.8, 
Cl = 0.175 and Re = 18.63 × 106.
The RAE 2822 airfoil is considered as the baseline design (Fig. 7.13a). The prob-
lem considers the critical flow conditions; M∞ = 0.8, Cl = 0.175, Re = 18.63 × 106 
where two (2) shocks occur, one in the suction side and one in the pressure side of 
RAE 2822 airfoil as shown in Fig. 7.13b).
Fig. 7.11   Drag coefficient ( Cd) distribution obtained by baseline alone and with SCB at increas-
ing Cl with fixed M ∞ = 0.77, Re = 17.93 × 106
 

99
7.3  Active Flow Control Bump Design Optimization
It can be seen that the upper and lower sonic points occur at 70.6 % and 51.3 % 
of chord respectively. In the following subsections, double SCB design optimiza-
tion using HAPMOEA and Hybrid-Game are conducted to minimize the total drag 
( Cd Total). The aerodynamic analysis tool; MSES will run twice for each function 
evaluation; the first run will analyse the upper SCB and the second run will analyse 
both the upper and lower SCB.
The fitness function is the same as the one defined in (7.3). Two test cases are 
conducted using single population approach and multi-fidelity/resolution based hi-
erarchical populations with three levels to compare optimization performances. The 
problem considers only SCB geometry constraints.
Design Variables  Table 7.3 shows the design variable upper and lower bounds for 
defining the SCB geometry. Six (6) design variables are considered in total. The 
centre of both upper and lower SCBs will be placed at the shock position where the 
flow speed transits from supersonic to subsonic regime.
Implementation  The single population approach considers a population size of 20 
and computational grid of 36 × 213 points. The following conditions are used for 
multi-resolution hierarchical populations.
Fig. 7.12   Drag coefficient ( Cd) distribution obtained by clean and U-SCB aerofoil at increasing 
M ∞ with fixed Cl = 0.524, Re = 17.93 × 106
 

100
7  Single Objective Model Test Case Problems
1st Layer
Population size of 10 and intermediate recombination using a computational 
grid of 36 × 213 points (Node 0)
2nd Layer
Population size of 20 and intermediate recombination using a computational 
grid of 24 × 131 points (Node 1, Node 2)
3rd Layer
Population size of 20 and intermediate recombination using a computational 
grid of 24 × 111 points (Node 3 ~ Node 6)
These grid conditions produce less than 5 % accuracy error compared to precise model at the 1st 
layer (Node 0)
Numerical Results  The algorithm was allowed to run 3900 function evaluations 
(72 h) using the single approach while the hierarchical topology approach was run 
for 527 function evaluations (28 h) as shown in Fig. 7.14. The convergence obtained 
by single population approach occurs after 1700 function evaluations (31 h) while 
the hierarchical topology approach converged at 370 function evaluations after 
18  h. In other words, the multi-resolution hierarchical topology approach saves 
42 % computational time when compared to the single population approach.
Fig. 7.13   a Baseline design with RAE 2822 airfoil. b Pressure ratio ( P/P0) contours obtained by 
the baseline design
 

101
7.3  Active Flow Control Bump Design Optimization
Table 7.6 compares the aerodynamic characteristics obtained by the baseline de-
sign (RAE 2822 airfoil) and the baseline design with upper and lower SCBs. Even 
though the upper SCB increases 3 % of viscous drag, it saves the wave drag by 75 % 
which leads 33 % of total drag reduction. This optimal SCB improves L/D by 49 %.
Both single and hierarchical topology approaches capture similar SCB shapes 
with their design components described on Table 7.7. Figure 7.15 compares the 
Table 7.6   Comparison of aerodynamic characteristics obtained by clean and the optimal airfoils
Aerofoils
Cd Total
Cd Viscous
Cd Wave
L/D
Baseline
0.0192
0.0103
8.87 × 10–3
9.119
with SCB
0.0129 (− 33 %)
0.0106 (+ 3.0 %)
2.22 × 10–3 
(– 75 %)
13.587 
(+ 49.0 %)
Cl Fixed = 0.175. Baseline model represents RAE 2822 aerofoil
Table 7.7   Optimal SCB design components
SCBs
Single population
Hierarchical topology approach
SCBL (%c)
SCBH (%c)
SCBP (%SCBL)
SCBL (%c)
SCBH (%c)
SCBP 
(%SCBL)
Upper
29.21
0.62
66.95
29.94
0.63
67.50
Lower
29.81
0.64
67.50
29.88
0.64
67.35
Fig. 7.14   Convergence history for SCB on upper & lower surfaces of the RAE 2822 airfoil
 

102
7  Single Objective Model Test Case Problems
geometry of baseline design and with an optimal SCB shape obtained by the multi-
resolution hierarchical topology approach.
Figures 7.16a and b compare pressure distributions obtained by the baseline de-
sign (RAE 2822 airfoil), with upper SCB and also with upper—lower SCBs. It can 
be seen that applying SCB on the suction side of baseline design reduces 14 % of 
total drag (Fig. 7.13a) when compared to the baseline design, and it can be noticed 
also that both suction and pressure sides SCB reduce 22 % of total drag when com-
pared to the baseline design with only upper SCB.
Figure 7.17 compares drag distribution obtained by the baseline design and with 
upper & lower SCB along Cl sweep [0.1:0.6] with fixed M ∞ = 0.8, Re = 18.63 × 106. 
It can be seen that the upper & lower SCB produces lower drag at the range of Cl 
[0.1:0.6] even though SCB increases the thickness of aerofoil.
Figure 7.18 compares drag distribution obtained by the baseline design and with 
upper- lower SCB along Mach sweep [0.55:0.85] with Cl = 0.175, Re = 18.63 × 106. 
It can be seen that the upper—lower SCB starts to produce lower total drag when 
the Mach number is higher than 0.77 even though it causes slightly higher total drag 
when the Mach is lower than 0.77.
Fig. 7.16   a Comparison of pressure coefficients ( Cp) distribution obtained by baseline (RAE 
2822 airfoil) and with the optimized SCB (RAE 2822-USCB). b Comparison of pressure coef-
ficients ( Cp) distribution obtained by RAE 2822 airfoil with upper SCB (RAE 2822-USCB) and 
with upper and lower SCBs (RAE 2822-ULSCB)
 
Fig. 7.15   Comparison of clean and aerofoil with optimized SCB on upper and lower surfaces
 

103
7.3  Active Flow Control Bump Design Optimization
Fig. 7.17   Drag coefficients ( Cd) distribution obtained by clean and UL-SCB airfoils at increasing 
Cl with fixed M ∞ = 0.8, Re = 18.63 × 106
 
Fig. 7.18   Drag coefficients ( Cd) distribution obtained by clean and UL-SCB airfoils at increasing 
M ∞ with fixed Cl = 0.175, Re = 18.63 × 106
 

104
7  Single Objective Model Test Case Problems
7.3.3  Double SCB Design using HAPMOEA
Problem Definition  The problem considers a single-objective SCB design optimi-
zation using HAPMOEA to minimize the total drag defined in (7.6) at flow con-
ditions; M ∞ = 0.8, Cl = 0.175, Re = 18.63 × 106. Figure 7.19 shows the evaluation 
mechanism for HAPMOEA which consists of hierarchical multi-population (Node 
0 ~ Node 6) based on multi-resolution. Each individual will be analysed twice with 
the aerodynamic analysis tool to evaluate the double SCB design at different reso-
lution layers (precise, intermediate and coarse). The problem considers only SCB 
geometry constraints.
Implementation  The following conditions are for multi-resolution/population hier-
archical populations.
1st Layer
Population size of 10 and intermediate recombination using a computational grid 
of 36 × 213 points (Node 0)
2nd Layer
Population size of 20 and intermediate recombination using a computational grid 
of 24 × 131 points (Node 1, Node 2)
3rd Layer
Population size of 20 and intermediate recombination using a computational grid 
of 24 × 111 points (Node 3 ~ Node 6)
These grid conditions (2nd and 3rd layer) produce less than a 5 % accuracy error when compared 
to the precise model on the 1st layer (Node 0)
Numerical Results  As illustrated on Fig. 7.20, the algorithm was allowed to run for 
12 h and 1295 function evaluations ( f = 0.01285) using a single 4 × 2.8 GHz processor. 
Fig. 7.19   Evaluation mechanism with HAPMOEA software
 

105
7.3  Active Flow Control Bump Design Optimization
Table 7.8 compares the aerodynamic characteristics obtained by the baseline design 
(RAE 2822 airfoil) and baseline with added optimal SCB. It can be seen that the 
baseline design with optimal SCB can reduce wave drag by 75 % which leads to 
33 % of total drag. Such drag reduction improves 49 % of the lift to drag ratio (L/D).
Figure 7.21 compares the shape of baseline design and baseline with SCB ge-
ometry. The optimal SCBs obtained by HAPMOEA software are located between 
(0.5604, 0.0595) and (0.8506, 0.0270) on the suction side and between (0.3633, 
− 0.0591) and (0.6618, − 0.0287) on the pressure side. Design parameters for the 
optimal SCB are shown on Table 7.9.
Table 7.8   Aerodynamic characteristics obtained by HAPMOEA
SCB
Cd Total
Cd Wave
L/D
Baseline
0.01918
0.00886
9.13
with SCB
0.01285 (− 33 %)
0.00225 (− 75 %)
13.59 (+ 49 %)
Fig. 7.20   Convergence history obtained by HAPMOEA software
 
Fig. 7.21   Comparison between the baseline design and baseline with SCB geometries
 

106
7  Single Objective Model Test Case Problems
Figure 7.22 compares the Cp distributions obtained by the baseline design alone 
and the baseline combined with optimal SCB. It can be seen that both upper and 
lower SCB decelerates the supersonic flow and the position of the shock is moved 
towards the trailing edge. Using only an upper optimal SCB reduces the total drag 
by 14 % while applying both upper and lower optimal SCB produces 33 % lower 
total drag when compared to the baseline design.
7.3.4  Double SCB Design using Hybridized Game
Problem Definition  The problem considers a single-objective SCB design opti-
mization using Hybrid-Game (described in Sect.  4.6.3 Chap.  4) employing one 
Global-Player and two Nash-Players. Therefore the fitness function Eq.  (7.3) is 
decomposed in (7.4, 7.5 and 7.6) expressions due to Nash- Players:
Fig. 7.22   Pressure coefficient ( Cp) distributions obtained by the baseline design and with SCB
 
Table 7.9   Optimal SCB design parameters obtained by HAPMOEA
SCB
Length (%c)
Height (%c)
Peak position
Upper
29.02
0.603
83.8
Lower
29.85
0.643
84.8
Peak Position is in % of SCB length

107
7.3  Active Flow Control Bump Design Optimization

(7.4)

(7.5)

(7.6)
where U_SCB* and L_SCB* represent elite SCB designs obtained by Nash-Player 
1 and Nash-Player 2 respectively.
Figure 7.23 shows the evaluation mechanism for Hybridized Games with em-
ploys three players: one Global-Player and two Nash-Player 1 and Nash Player 2. 
The Global-Player runs the aerodynamic analysis tool twice since its optimization 
domain includes both upper and lower SCB. However, the analysis tool is run once 
for each Nash-Player 1 and 2 due to the Nash-Game decomposition characteristics. 
Nash-Player 1 (7.5) will only optimize a SCB on the suction side with an elite lower 
SCB obtained by Nash-Player 2 while Nash-Player 2 will optimize a SCB on the 
pressure side using an elite upper SCB design from Nash-Player 1 shown in (7.6). 
The elite designs obtained by Nash-Players are seeded in the Global-Player popula-
tion. This optimization mechanism allows a significant speed up of the optimization 
procedure used by the Global-Player.
Implementation  The conditions for Hybridized Games are:
Global Layer
Population size of ten (10) and intermediate recombination with a computa-
tional grid of 36 × 213 points
Nash-Player 1
Population size of ten (10) and intermediate recombination with a computa-
tional grid of 36 × 213 points
Nash-Player 2
Population size of ten(10) and intermediate recombination with a computa-
tional grid of 36 × 213 points
(
_
,
_
)
min(
)
GP
Total
f
U
SCB L
SCB
Cd
=
*
1(
_
,
_
)
min(
)
NP
Total
f
U
SCB L
SCB
Cd
=
*
2(
_
,
_
)
min(
)
NP
Total
f
U
SCB
L
SCB
Cd
=
Fig. 7.23   Evaluation mechanism using 
Hybridized Games
 

108
7  Single Objective Model Test Case Problems
Numerical Results  The algorithm is run for 1.15 h and 406 function evaluations 
to reach the same fitness function value ( f = 0.01282) with the first optimization 
method (Sect. 5.1) using a single 4 × 2.8 GHz processor. Figure 7.24 shows the 
convergence history obtained by Hybridized Games and also compares the compu-
tational cost obtained by HAPMOEA and Hybridized Games. The computational 
cost for Hybridized Game is only 9.5 % of HAPMOEA computation cost due to 
Nash-Game characteristics (decomposition of design problem) and evaluation 
mechanism. In other words, the use in parallel of Nash- Games linked to hierarchi-
cal topology improves the MOEA efficiency by 90 %. In addition, the Hybridized 
Games produces slightly better solution even though it has lower computational 
cost. Table 7.10 compares the aerodynamic characteristics obtained by the baseline 
design (RAE 2822) and baseline with optimal SCB. It can be seen that the baseline 
design with optimal SCB can reduce wave drag by 76 % which leads to 33 % of total 
drag. Such a drag reduction provides a 50 % increase of the lift to drag ratio (L/D).
Figure 7.25 compares the shape of the baseline design and the baseline coupled 
with a SCB geometry obtained by Hybridized Games. The optimal double SCBs are 
located between (0.5566, 0.0597) and (0.8543, 0.0263) on the suction side, and be-
Table 7.10   Aerodynamic characteristics obtained by Hybrid-Game
SCB
Cd Total
Cd Wave
L/D
Baseline
0.01918
0.00886
9.13
with SCB
0.01282 (− 33 %)
0.00214 (− 76 %)
13.65 (+ 50.0 %)
Fig. 7.24   Convergence history obtained by Hybridized -Games
 

109
7.3  Active Flow Control Bump Design Optimization
tween (0.3624, − 0.0591) and (0.6619, − 0.0287) on the pressure side of RAE 2822 
airfoil. The design parameters for optimal SCB are given on Table 7.11.
Figure 7.26 compares Cp contours obtained by the baseline design and baseline 
with optimal SCB. It can be seen that both upper and lower SCB decelerates the 
supersonic flow and the position of shock is moved towards the trailing edge when 
compared to the baseline design shown in Fig. 7.13b. Using only upper optimal 
SCB reduces the total drag by 14 % while applying both upper and lower optimal 
SCB produces 33 % lower total drag when compared to the baseline design.
Table 7.11   Optimal SCB design parameters obtained by Hybrid-Game
SCB
Length (%c)
Height (%c)
Peak position
Upper
29.77
0.644
84.8
Lower
29.94
0.643
84.8
Peak Position is in % of SCB length
Fig. 7.25   Comparison between the baseline design and baseline with SCB geometries
 
Fig. 7.26   Pressure ratio ( P/P0) contour obtained by Hybridized Games
 

110
7  Single Objective Model Test Case Problems
Figures 7.27a and b compare the total drag ( Cd Total) and wave drag ( Cd Wave) dis-
tributions obtained by the baseline design and baseline with the optimal SCB found 
by HAPMOEA software and Hybridized Game software. Flow conditions are: M ∞ 
Fig. 7.27   Total drag coefficients ( CdTotal—upper), wave drag coefficients ( CdWave—lower) vs. 
Mach numbers
 

111
7.3  Active Flow Control Bump Design Optimization
∈ [0.5:0.85] with Cl Fixed = 0.175, Re = 18.63 × 106. The optimal SCB provided by 
Hybridized Games perform solutions similar to HAPMOEA software and starts to 
produce lower total drag when Mach number is higher than 0.77. It should be no-
ticed from Fig. 7.27b is that the critical Mach number ( MC = 0.75) for the baseline 
design is extended to Mach number 0.77.
Figure 7.28 compares the total drag distribution obtained by the baseline design 
and baseline with the optimal SCB found by HAPMOEA software and Hybrid-
Games software for Cl ∈ [0.1:0.85] with M Fixed = 0.8, Re = 18.63 × 106. Both optimal 
SCB from HAPMOEA and Hybridized Game optimizers produce lower drag for a 
range of Cl values when compared to the baseline design. In addition, the optimal 
SCB obtained with Hybridized Games software has a slightly lower total drag when 
compared to the optimal SCB obtained with HAPMOEA software despite the Hy-
bridized Games used only 9.5 % of HAPMOEA computational cost.
This optimal double SCB configuration is also tested at five different flight con-
ditions to show the benefit of this configuration. The histogram shown in Fig. 7.29 
shows the comparison of total drag and the ratio of lift to drag (L/D) obtained by 
the baseline design and optimal double SCB from HAPMOEA and Hybrid-Game. 
It can be seen that the optimal double SCB at critical flight conditions reduces more 
total drag by 15–33 % and improves lift to drag ratio (L/D) by 18–49 % at normal 
flight conditions when compared to the baseline design.
Fig. 7.28   Total drag coefficient ( CdTotal) vs. lift coefficient ( Cl)
 

112
7  Single Objective Model Test Case Problems
To summarize the results of the optimization test case, the use of optimal SCB 
obtained by HAPMOEA software and Hybridized Games software is beneficial at 
both normal and critical flow conditions due to significant transonic drag reduction. 
In addition, Hybridized Games improve MOEA efficiency while generating high 
quality optimal solutions when compared to the HAPMOEA approach.
Fig. 7.29   Drag reduction ( upper) and lift to drag ratio ( lower) improvement at normal flow condi-
tions. Note: Condi represents i-th flow conditions: Cond1: M ∞ = 0.750, Cl = 0.690, Re = 18.63 × 106, 
Cond2: M ∞ = 0.760, Cl = 0.560, Re = 18.63 × 106 Cond3: M ∞ = 0.770, Cl = 0.430, Re = 18.63 × 106, 
Cond4: M ∞ = 0.785, Cl = 0.300, Re = 18.63 × 106 Cond5: M ∞ = 0.800, Cl = 0.175, Re = 18.63 × 106
    

113
7.4  Generic Aircraft Wing Aerofoil Section Design Optimization
7.4  Generic Aircraft Wing Aerofoil Section Design 
Optimization
Problem Definition  This test case considers the design and optimization of generic 
aircraft wing airfoil section geometries at one operating condition. The optimization 
initially considers a baseline wing design of generic commercial aircraft presented 
on Fig. 7.30. The baseline design is that of a generic wing similar to the Boeing 
737 [3, 4]. The wing specifications are obtained from the reference [3, 4]. The wing 
geometry parameters are indicated in Table 7.12. The aspect ratio L/D is 11.57, the 
inboard and outboard sweep angles are 34.04° and 21.38° respectively. The crank 
position 1 is where nacelle is located and crank 2 is assumed the middle of outboard. 
The coordinates of the baseline airfoil sections at four stations (root, crank1, crank2 
and tip) are obtained from reference [9]. These airfoils are used on a Boeing 737 
which has similar size and characteristics. Their airfoil sections are indicated in 
Fig. 7.31.
Fig. 7.30   Baseline wing geometry
        
Table 7.12   Baseline wing configurations
AR
b (m)
Crank1
Crank2
ΛR-C1
ΛC1-C2
ΛC2-T
λC1
λC2
λT
ΓOverall
11.57
34.32
28.12 %
64.06 %
34.03°
21.38°
21.38°
0.60
0.41
0.22
6

114
7  Single Objective Model Test Case Problems
A generic aircraft is a logistic long range aircraft. A mission profile for a generic 
aircraft is given on Fig. 7.32. The main objectives of the mission are: Initially, the 
generic aircraft climbs up to a desired altitude 41,000 ft then cruises at the flight 
conditions transit to M ∞∈0 7 0 82
. : .
. Its objective can maintain cruise altitude and 
cruise speed to have safe air traffic control and reduction of operating cost. Once the 
cruise is completed, it descends and lands at a pre-determined location.
The aircraft maximum take-off weight is approximately 79,002 kg with max 
payload of 20,240 kg. The minimum lift coefficient requires 0.691 (
.
)
min
CL
= 0 691  
(baseline design). The Breguet range Eq. 7.7 is considered to calculate the mini-
mum lift to drag ratio;

(7.7)
Initial
Initial
Final
Final
W
W
V
V
L
L
R
ln
R
ln
gSFC
D
W
TSFC
D
W
∞
∞








=
→
=
















         
Fig. 7.31   Baseline wing airfoil sections
Fig. 7.32   Mission profile for a generic aircraft
      

115
where:
R	
is the distance flown and
V∞	
is the velocity
SFC	
stands for Specific Fuel Consumption
TSFC	
stands for Thrust Specific Fuel Consumption ( TSFC = 1.07 × 10−4/s)
g	
is the acceleration of gravity ( g = 9.81 m/s2)
L/D	
is the lift to drag ratio which is obtained using aerodynamic analysis tool
WInitial 	  is the gross weight of aircraft at the start of cruise:
WFinal 	
the gross weight of aircraft at the end of cruise
The range of the baseline aircraft is 2728 nm which requires a minimum lift to 
drag ratio of 8.46. This minimum L/D ratio is applied in the optimization as one of 
inequality constraints;
This is a single objective problem where the fitness function is to maximise lift-to-
drag ratio (L/D). Results of this application are compared to the baseline design. 
The optimization for this test case is based on Algorithm 3 described in Sect. 6.5.4 
of Chap. 6. The fitness function and flight conditions are:

(7.8)
where a Penalty (2.4) and (2.5) in Chap. 2 is computed and added to the fitness func-
tion shown in (7.8) if the thickness ( t/c) is higher than 20 % and less than 10.0 % 
TSFC
FF
g
Thrust
=
×
=
×
×
=
×
−
1 28
9 81
117 3 10
1 07
10
3
4
.
.
.
.
/s
10% of
76902 kg where
2100 kg
Initial
MaxTO
Fuel
Fuel
W
W
W
W
=
−
=
=
W
W
W
Final
MaxTO
Fuel
=
−
=
85
61152
% of
kg
∴
=
×
×







=




−
 R
L
D
L
D
0 82
340
1 07
10
76902
61152
597
4
.
.
ln
km
L
D min
.
≥8 46
(
)
1
1
min 1/ (
/
)
f
L D
Penalty
=
+
min
at
0.82,
0.691
L
M
C
∞=
=
7.4  Generic Aircraft Wing Aerofoil Section Design Optimization

116
7  Single Objective Model Test Case Problems
of the chord and also if the ratio of lift to drag at flight conditions is lower than 
8.46. As a geometry constraint, the thickness ratio should be chosen in the interval 
10%
22%
t c
≤
≤
and as a performance constraint, the lift to drag ratio (L/D) should 
be 
min
8.46
L D
≥
.
Design Variables  Four airfoils at root, crank1, crank2 and tip section are shown 
on Figs. 7.33a, b, c, d. For the thickness design bounds, 25 % of chord is assigned 
for the upper thickness bounds (blue triangles) and 10 % for the lower bounds (red 
inverse triangles). For the mean line, the design bounds use 5 % of chord for upper 
(blue circles) and lower (red circles) bounds. The airfoils between wing sections are 
interpolated by the CFD FLO22 flow analyser.
The external wing geometry is fixed as shown in Fig. 7.31 and Table 7.12. Four 
airfoil sections including root, crank 1, crank 2 and tip are considered as design 
variables and there are eighty eight (88) design variables (eleven (11) mean line + 
eleven (11) thickness at each section) in total. The control points of mean and thick-
ness distribution are represented on Figs. 7.33a, b, c, d.
Implementation  The FLO22 and FRICTION solvers (cf./1/) are utilised and the fol-
lowing specific parameters are considered for HAPMOEA software.
1st Layer
Population size of 15 and intermediate recombination Computational grid of 
96 × 12 × 16 cells used by the FLO22 solver
2nd Layer
Population size of 40 and intermediate recombination Computational grid of 
82 × 12 × 16 cells used by the FLO22 solver
3rd Layer
Population size of 60 and intermediate recombination Computational grid of 
68 × 12 × 16 cells used by the FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 1100 function 
evaluations and took 150 h on a single 1.8 GHz processor. The evaluation conver-
gence history is shown in Fig. 7.34. It can be observed that the problem converged 
after 450 function evolutions.
The lift to drag ratio (L/D) of the optimal solution is compared to the baseline 
design in Table 7.13 where the optimal wing produces 23 % of the lift to drag ratio 
(L/D) improvement while reducing 19 % of the total drag.
The optimal airfoils are compared to the baseline design on Fig. 7.35. Airfoil 
sections: root, crank1, tip are thinner approximately by 10 % of the chord than the 
baseline aerofoils and negative cambers are observed from the root to crank2 sec-
tions while the airfoil at the tip section has a positive camber.
The pressure coefficients distribution is compared at 0, 20, 40, 60, 80 and 90 % 
of the span in Figs. 7.36a, b, c. It can be seen that the optimal wing has weaker 
shock from 20 ~ 90 % of the span when compared to the baseline design marked as 
blue circles.
Figures 7.37a and b show the comparisons of Mach distribution vs. the drag co-
efficient and lift to drag ratio obtained by the optimal wing and the baseline design 
respectively. The optimal wing produces lower drag coefficient and higher lift to 
drag ratio at all Mach range 0.75–0.85 when compared to the baseline. The base-

117
Fig. 7.33   a Root section mean line and thickness control points design envelope. b Crank1 section mean line and thickness 
control points design envelope. c Crank2 section mean line and thickness control points design envelope. d Tip section mean 
line and thickness control points design envelope
      
7.4  Generic Aircraft Wing Aerofoil Section Design Optimization

118
line design has a range of 5940 km while the optimal wing can fly the distance of 
7290 km (+ 23 %) at design point using same amount of fuel.
7.5  Summary of Chapter 7
This chapter is dedicated to applications of Evolutionary Algorithms to single-ob-
jective and inverse design problems in aeronautics.
Numerical results obtained by HAPEA and Hybridized Games-EAs software are 
compared in terms of computational efficiency and solution quality. These two op-
timization techniques offer alternative choices to the designer when solving airfoil 
space reconstruction/inverse design problems. It is seen that splitting the design 
space into Nash Players design territory can be high beneficial by reducing signifi-
cantly the computational expense of the optimization procedure.
Fig. 7.34   Optimization convergence history
      
Table 7.13   Comparison of the aerodynamic performances
Description
Baseline design
Optimal Solution
L/D
9.95
12.21 (+ 23 %)
CD Total
0.0694
0.0565 (− 19 %)
7  Single Objective Model Test Case Problems

119
Fig. 7.35   Airfoils sections of compromised solutions
     
7.5  Summary of Chapter 7

120
Fig. 7.36   a Comparison of pressure coefficient ( Cp) distribution at 0 and 20 % of span. b Com-
parison of pressure coefficient ( Cp) distribution at 40 and 60 % of span. c Comparison of pressure 
coefficient ( Cp) distribution at 40 and 60 % of span
           
7  Single Objective Model Test Case Problems

121
References
1.	  Ashill PR, Fulker J, Shires A (1992) A novel technique for controlling shock strength of lam-
inar-flow aerofoil sections. Proceedings 1st European Forum on Laminar Flow Technology, 
pp 175–183, Hamburg, Germany, DGLR, AAAF, RAeS, March 16–18
2.	  Bauer M, Peltzer I, Nitsche W, Gölling B (2010) Active flow control on an industry-relevant 
civil aircraft half model. In: Active flow control ii notes on numerical fluid mechanics and 
multidisciplinary design, vol 108. Springer, Berlin, pp 95–107
3.	  Boeing. Defence, Space & Security: P-8 A Poseidon. http://www.boeing.com/defense-space/
military/p8a/index.html. Accessed 17 Dec 2010
4.	  Boeing 737 Technical Specifications. http://www.b737.org.uk/techspecsdetailed.htm. Ac-
cessed 17 Dec 2010
5.	  Jameson A, Caughey D, Newman P, Davis RA (1976) Brief Description of the Jameson 
Caughey NYU Transonic Swept-Wing Computer Program FLO22, NASA Technical Memo-
randum, NASA TM X-73996
6.	  Lee DS, Periaux J, Srinivas K, Gonzalez LF, Onate E, Qin N (2010) Shock control bump de-
sign optimization on natural laminar aerofoil. In Kuzmin A (ed) computational fluid dynamics: 
Proceedings of the Sixth International Conference on computational fluid dynamics, ICCFD6, 
Springer, St Petersburg
7.	  Nübler K, Colliss SP, Lutz T, Babinsky H, Krämer E (2013) Numerical and experimental 
examination of shock control bump flow physics. High performance computing in science and 
engineering '12, pp 333–349
8.	  Patzold M, Lutz T, Kramer E, Wagner S (2006) Numerical optimization of finite shock control 
bumps, 44th AIAA Aerospace Sciences Meeting and Exhibit, Reno, Nevada, USA, 9-12 Janu-
ary
9.	  UIUC Airfoil Coordinates Database Version 2.0. http://www.ae.uiuc.edu/m-selig/ads/coord_
database.html. Accessed 17 Dec 2010 
Fig. 7.37   a Comparison of total drag coefficients (
)
CDTotal
 vs. Mach number. b Comparison of 
L/D vs. Mach number
        
References

123
Chapter 8
Multi-Objective Optimization Model Test Case 
Problems
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_8
8.1  Overview
In this chapter, applications solved by EAs software and advanced EAs software 
introduced in previous chapters and dealing with six (6) multi-objective design op-
timization problems are described. Different MOEAs are used and the efficiency of 
their optimizers are compared.
8.2  Pareto Reconstruction: Two Airfoils at Two Different 
Design Points
Problem Definition  A classic example in inverse airfoil design is to reconstruct 
shapes corresponding to prescribed surface pressure distribution. In this example, 
the problem is extended to reconstruct the pressure distribution at two design points 
for reconstructing two airfoil geometries.
Practical design engineers in aerodynamics often guess the appropriate pressure 
distribution to their problems, but do not always have tools for finding a feasible 
solution. This problem has been studied extensively by Jameson [1], Kim and Rho 
[2], and Obayashi [3, 4], Obayashi and Takanashi [5] and Zetina et al [6], Oyama 
et al. [7] among many others.
This case considers minimization of the difference of the surface pressure coef-
ficient distribution on a candidate airfoil with the prescribed pressure distribution 
over two airfoils (NACA0012 and RAE2822) operating at different design points. 
Flow conditions for the two points analyzed are:

(8.1)

(8.2)
(
)
6
Flow Condition 1: M
0.2,Re
2.7
10 ,
1.25
NACA0012
α
∞=
=
×
=
°
(
)
Flow Condition 2:M
RAE2822
6
= 0.75, Re = 9.0×10 , a = 1.25°
∞

8  Multi-Objective Optimization Model Test Case Problems
124
This reconstruction problem can be solved faster using a classical deterministic 
optimizer if the two objectives are sought independently. In this case, the goal is to 
find the Pareto in one single run and without having to choose weights in advance. 
This optimization procedure uses Algorithm 4 described in Sect. 6.5.5 of Chap. 6.
Design Variables  The airfoil geometry is represented by two (2) Bezier curves for 
the parameterization of the mean line and one (1) for the thickness distribution. The 
mean line–thickness distribution is defined by a standard spline method for repre-
senting airfoils [8], as it closely couples the representation with results; the mean 
line has a powerful effect on cruise lift coefficient and pitching moment, while the 
thickness distribution has a powerful effect on the cruise drag. Defined simply, the 
airfoil is obtained by perpendicular offset of the thickness distribution about the 
mean line.
For a given mean line point ( xm, ym) and matching thickness distribution height 
yt, upper and lower surface points can be obtained by (8.3) and (8.4):

(8.3)

(8.4)
where θ is the mean line angle at ( xm, ym). This is shown in Fig. 8.1. The x-posi-
tions of the Bezier control points are predefined in advance; y- positions remain 
unknowns. The only restrictions are that the first and last points are fixed to (0,0) 
and (1,0) to provide leading and trailing edges respectively, and that the first control 
point on the thickness distribution must be directly above the leading edge (i.e. 
(0,yc,1)) to provide a rounded geometry (Bezier curves are by definition always 
tangent to the extreme edges of their defining envelopes).
The vertical heights to range y c ∈ [0.01,0.1] offering a very wide range of pos-
sible geometries (theoretically spanning airfoils from 2 to 20 % thick) are bounded. 
,
sin ( )
u l
m
t
x
x
y
θ
=
±
,
cos( )
u l
m
t
y
y
y
θ
=
±
Fig. 8.1   Airfoil parameterization using two Bezier curves
 

125
8.2  Pareto Reconstruction: Two Airfoils at Two Different Design Points
The advantage of using single high-order Bezier curves for the representation rather 
than piecewise splines or others is their geometrical stability. A Bezier curve must 
by definition always be contained within the bounding envelope of control points. 
Furthermore, if the bounding envelope is not re-entrant, then the curve will also 
have this property. Also, Bezier curves do not ‘kink’ like a piecewise spline, and 
the defining equations are not stiff (ill-conditioned). Therefore, a small change in 
control point location will always result in a small change in surface representation. 
This mathematical property provides a favourable interface between the optimizer 
and the flow analyzer. For this case, four (4) evenly spaced interior (free) control 
points were considered for the mean line, and five (5) for the thickness distribution, 
giving a problem with nine (9) unknowns.
The fitness functions are the Root Mean Square Error (RMSE) of the surface 
pressure coefficients distribution between candidate shape (current) and target 
shape (objective 1) and surface pressure coefficients between candidate (current) 
and target –two (objective 2). The problem is solved when the positive value of the 
fitness decreases below a prescribed value.

(8.5)

(8.6)
In this case a flow solver needs to compute the aerodynamic drag. The MSES solver 
[9] evaluate candidate solutions, is based on a structured quadrilateral streamline 
mesh and coupled to an integral boundary layer with a multi-layer velocity profile 
representation.
Implementation  The problem was implemented using Alg. 4 in Sect.  6.5.5 of 
Chap. 6.
Details on the multi-fidelity–hierarchical tree are: (EA with CMA/Pareto tourna-
ment selection, asynchronous evaluation) on each node of the hierarchical tree with 
the following parameter settings for the EAs and CFD solver are:
1st Layer
Population size of 20 and intermediate recombination
using a computational grid of 215 × 36 cells
2nd Layer
Population size of 20 and intermediate recombination
using a computational grid of 165 × 27 cells
3rd Layer
Population size of 20 and intermediate recombination
using a computational grid of 151 × 24 cells
Numerical Results  This problem was run with 3000 function evaluations of the 
head node, and took approximately ten (10) hours on the cluster with twelve PC 
cores. Figure 8.2 shows the Pareto front captured for this test case. Figures 8.3 and 
8.4 show a comparison of the target geometries and Fig. 8.5 surface pressure dis-
min(
) :
(
) ,
arg
f
f
N
Cp
Cp
current
T
et one
i
N
1
1
2
1
1
=
−
−
=∑
min(
) :
(
) .
arg
f
f
N
Cp
Cp
current
T
et two
i
N
2
2
2
1
1
=
−
−
=∑

8  Multi-Objective Optimization Model Test Case Problems
126
tributions respectively. A good match of the computed and target surface pressure 
distribution was observed.
Comparisons of performances of the algorithm with an increasing number of 
computers are represented. The parallel environment used is the BORGS cluster 
of PCs. The message-passing model used is the Parallel Virtual Machine (PVM) 
[9]. Figure 8.6 shows the speed-up of the computation as the number of computers 
increases and also the comparison with a linear speed-up for reference purposes. 
Fig. 8.3   Target and computed geometries, multi-point airfoil design, Objective 1
 
Fig. 8.2   Pareto front for the multi-point airfoil design
 

127
8.2  Pareto Reconstruction: Two Airfoils at Two Different Design Points
Fig. 8.5   Target and computed pressure distribution for multi-point airfoil design
 
Fig. 8.4   Target and computed geometries, multi-point airfoil design, Objective 2
 

8  Multi-Objective Optimization Model Test Case Problems
128
With this reconstruction test case, it is clearly shown that the method benefits from 
the use of parallel computing strategies.
8.3  Multi-Element Airfoil Reconstruction: Two- 
Dimensional Two Objective Aircraft High Lift System 
Design and Optimization
Problem Definition  The use and development of Unmanned Aerial Vehicles for 
military and civil applications are rapidly increasing but there are difficulties in the 
design of these vehicles due to the varied and non-intuitive nature of the configura-
tions and missions that can be performed. Similar to their manned counterparts, the 
challenge is to develop trade-off studies of optimal configurations to produce a high 
performance aircraft that satisfy mission requirements.
In this example, the detailed design of a single element airfoil is considered 
for a small UAV application similar to the RQ-7A Shadow 200 Tactical UAV and 
uses the airfoil design module for this task. The aircraft maximum gross weight is 
approximately 320 lbs, it has a wingspan of approximately 12.8 ft, a mean chord 
Fig. 8.6   Computation speed-up of with an increasing number of computers and comparison with 
linear speed-up
 

129
8.3  Multi-Element Airfoil Reconstruction 
of approximately 2 ft, length of 11 ft, and a plan form shape without sweep. It 
is assumed that the aircraft is operating between a slow cruise 33.3 m/s and fast 
cruise 46.6 m/s approximately. This results in airframe, flight parameters and oper-
ating conditions indicated on Table 8.1. These conditions assume an aircraft at mid 
weight-cruise during and extended cruise phase at intermediate altitude.
Description
Flight condition one—slow cruise
Flight condition two—fast cruise
M∞
0.1025
0.141
Re
1.085 × 106
1.490 × 106
c l
1.18
0.6140
For the optimization, it is initially assumed that an existing air foil geometry is a 
operating at two suggested design points, and then a design and air foil that pre-
serves the original thickness while reducing the drag coefficient. The assumed 
baseline air -foil geometry is the NACA4415. This airfoil thickness is 15 % of the 
chord. Figures 8.7 and 8.8 show the pressure coefficient ( Cp) distribution and some 
Fig. 8.7   NACA 4415—Flight condition 2—Fast Cruise
 
Aerofoil section
NACA4415
b, ft
12.8
cr (approx.), ft
2.0
Length, ft
11.2
Cruising altitude, m
3000
Table 8.1   UAV data and 
operating conditions

8  Multi-Objective Optimization Model Test Case Problems
130
aerodynamic data for the two flight conditions considered. The combined polars for 
the NACA4415 airfoil are shown in Fig. 8.9. It is noted that both cruise points oper-
ate inside the invariant drag region of the airfoil; the low speed cruise condition giv-
ing approximately Cd = 0.016 and the high speed giving approximately Cd = 0.012.
The complexity, the non-linearity and multi-objective characteristics of this 
problem make it suitable to be solved with an EA optimizer. The computational 
cost for this problem is an important consideration due to the wide upper and lower 
bounds in the search space and dependency of the computing facilities used, in 
particular in industrial design environments. Therefore it is also desirable to use 
parallel computing and a multi-fidelity approach. In this case it is desired to use a 
multi-objective parallel EA (MOPEA) and to select the HAPEA approach which 
has all these capabilities; however, other EA approaches would perform similarly, 
such as NSGAII or VEGA [10, 11] for instance. This optimization uses Algorithm 
4 in Sect. 6.5.5 of Chap. 6.
Design Variables  The airfoil geometry is represented by two Bezier curves, one for 
the mean line and another for the thickness distribution. The mean line-thickness 
distribution is a standard method for representing airfoils [1], as it closely couples 
the representation with results; the mean line has a powerful effect on cruise lift 
coefficient and pitching moment, while the thickness distribution has a powerful 
effect on the cruise drag. In this case six (6) free control points are considered on the 
mean line and ten (10) free control points on the thickness distribution.
Fig. 8.8   NACA 4415—Flight condition 1—Slow Cruise
 

131
An individual as an object containing a vector of the sixteen (16) design vari-
ables is defined and a vector of strategy variances ( σ) and rotation angles ( α) for the 
evolution strategy:
The two fitness functions to be optimised are defined as minimization of drag (cd) 
at the two flight conditions:

(8.7)

(8.8)
There are three types of constraints: maximum thickness, maximum thickness loca-
tion and pitching moment (cm). The thickness and maximum thickness location of 
each airfoil must exceed 15 % (t/c ≥ 0.15) and be between 20 and 40 % of the chord, 
respectively. If a constraint on pitching moment is applied this must not be more 
severe than − 0.0660 (cm ≥ − 0.0660).
Implementation  The aerodynamic characteristics of the candidate airfoils are eval-
uated using the MSES [12] software. This solver is based on a structured quad-
(
)
1
2
6
1
2
10
1
2
1
2
1 /2
(
)
((
)
, ,
,
,
,
,
’, 
’
, 
’ ,  ,
,
, 
,  ,
(
) (
))
,
, 
.
N
N N
I
y y
y
y
y
y
x σ α
σ σ
σ
α α
α
−
=
=
…
…
…
…
( )
6
1
Min
  subject to Re
1.085 10 ,
1.184,
l
f
Cd
C
=
=
×
=
(
)
6
2
Min
subject to Re
1.490 10 ,
0.614.
l
f
Cd
C
=
=
×
=
Fig. 8.9   NACA 4415—Polar
 
8.3  Multi-Element Airfoil Reconstruction 

8  Multi-Objective Optimization Model Test Case Problems
132
rilateral streamline mesh and coupled to an integral boundary layer based on a 
multi-layer velocity profile representation. Details on MSES software can be found 
in Drela [12].
In designing a replacement airfoil for this UAV platform, the following design 
factors are considered:
•	 Maintain approximately the same Cl in order to not impinge upon the assisted 
launch and landing length.
•	 Maintain at least the current thickness, in order not to increase the weight of the 
wing.
•	 Decrease the drag at both cruise points, in a multi-objective optimization proce-
dure.
•	 Study the implication of constraining the pitching moment coefficient during the 
evolutionary optimization.
Details on the multi-fidelity–hierarchical tree are: (EA with CMA/Pareto tourna-
ment selection, Asynchronous Evaluation) on each node of the hierarchical tree 
with the following parameter settings for the EA and CFD solver:
The same parameter settings are used on the evolutionary optimisation algorithm 
for the two test cases considered:
1st Layer
Population size of 20 and intermediate recombination
with a computational grid of 215 × 36 cells
2nd Layer
Population size of 20 and intermediate recombination
with a computational grid of 165 × 27 cells
Numerical Results  This test case was run with 2000 function evaluations on the top 
level and took approximately 8 h in a cluster of 4 × 2.8 GHz processors. Figure 8.10 
and 8.11 shows the set of airfoils on the Pareto front. From this front, three airfoils 
are selected; objective one optimal, objective two optimal and compromise airfoils 
from the middle of the front. These geometries are shown and compared to the 
NACA 4415 airfoil in Fig. 8.12.
Fig. 8.10   The Ensemble of 
Pareto airfoils—constrained 
pitching moment coefficient 
( Cm)
 

133
Fig. 8.12   Pareto 01 Flight condition 1—constrained pitching moment coefficient ( C m)
 
Fig. 8.11   Comparison of selected geometries—constrained pitching moment coefficient ( Cm)
 
8.3  Multi-Element Airfoil Reconstruction 

8  Multi-Objective Optimization Model Test Case Problems
134
A multi-element airfoil is considered from the middle of the Pareto front for fur-
ther evaluation. Figures 8.13 and 8.14 show the Cp distribution for the two flight 
conditions. Figure 8.17 shows the comparative drag polars for Re = 1.480 × 106 and 
Fig. 8.15 that for Re = 1.085 × 10 6. But in this case a lower cm is obtained for both 
conditions. Table 8.2 summarizes the drag reduction at the two flight conditions for 
the two test cases considered.
To synthesize the results of this case, it is concluded that the evolved airfoils 
offer a significantly lower drag at both cruise conditions. The requirement of con-
straining the pitching moment during the evolution process is necessary to avoid 
obtaining an airfoil with lower drag for some flight conditions but with undesir-
able pitching moment characteristics. The results obtained show the capabilities 
of the method to find optimal solutions and classical aerodynamic shapes for flow 
drag. The importance of sound engineering judgement before, during and after the 
optimization must not be under-estimated: a proper definition of constraints before 
performing the evolutionary optimisation and the final results needs to be evaluated 
to obtain feasible designs.
Finally it is shown that, using the evolutionary approach and methods developed, 
allows the capture of the Nash equilibrium and complex Pareto fronts describing 
Fig. 8.13   Pareto 01 Flight Condition 2—constrained pitching moment coefficient ( Cm)
 

135
Fig. 8.15   Comparative Polars—Compromised airfoil and NACA 4415 Re = 1.085 × 106—con-
strained pitching moment coefficient ( Cm)
 
Fig. 8.14   Comparative Polars—Compromised airfoil and NACA 4415 Re = 1.490 × 106—
constrained pitching moment coefficient ( Cm)
 
8.3  Multi-Element Airfoil Reconstruction 

8  Multi-Objective Optimization Model Test Case Problems
136
trade-offs between the objectives for direct and inverse problems. The main advan-
tages of the method is that:
I.	  it can find globally optimum Pareto fronts,
II.	 it can be easily coupled with a pre-existing flow-solver without modification or 
differentiation,
III. it is well suited for parallel computing.
8.4  Unmanned Combat Aerial Vehicle Configuration: 
Conceptual Design Optimisation
Problem Definition  This test case considers the design and optimization of an 
Unmanned Combat Aerial Vehicles (UCAV) wing airfoil sections and plan form 
geometry operating at cruise regime and ingress conditions. UCAVs have the poten-
tial to reduce the risk of human life in combat operation, satisfy redundancy require-
ments and improve the effectiveness and efficiency of the mission. The missions for 
an UAV/UCAV can be categorized in terms of air-air, air-ground or both. Success-
ful completion of these missions requires a UAV/UCAV exhibit high survivability 
which can be achieved by the improvement of manoeuvrability and stealth. The 
manoeuvrability is directly related to aerodynamic performance of UAV/UCAV and 
can be improved by optimising the shapes for the wing aerofoil sections [13, 14] 
and wing plan form [15–18]. In terms of stealth, Radar Cross Section (RCS) must 
be considered and the minimisation of the visual signature, infrared heat signature, 
acoustic signature, radio transmission signature and radar echo signature can pro-
vide a low observable aircraft [19, 20]. In this section, the multi-objective design 
optimisation of the wing aerofoil sections and wing plan form shapes for the surviv-
ability of UAV/UCAV is investigated. The visual signature from the front view is 
only considered to achieve a low observability. The method couples the HAPMOEA 
optimizer with aerodynamic analysis tools for transonic aerofoil and wing design.
The type of vehicle considered in this section is Joint Unmanned Combat Air 
Vehicle (J-UCAV) [21] which is similar in shape to the Boeing X-45C, Dassault 
Aviation—PETIT DUC and Northrop Grumman X-47A/B [22, 23]. The baseline 
design is shown in Fig. 8.16.
The wing plan form shape is assumed to be an aero-diamond shape with jagged 
trailing edge. This is convenient for stealth purposes and deflecting radar echoes 
away from the source [24, 25]. The aircraft maximum gross weight is approxi-
Table 8.2   UAV Drag reduction at two operating conditions
Description
Flight condition 1
slow cruise
Flight condition 2
fast cruise
NACA 4415
0.01621
0.01173
Pareto 01
Constrained
0.01451 [− 10.48 %]
0.01090 [− 7.07 %]

137
8.4  Unmanned Combat Aerial Vehicle Configuration
mately 5190 lb (2,354 kg) and empty weight is 3249 lb (1473 kg). The wing design 
parameters for the baseline wing configuration are given in Fig. 8.17 and Table 8.3. 
The inboard and outboard sweep angles are 55°. Inboard and outboard taper ratios 
are 0.68. These identical sweep angles and taper ratios provide a plan form align-
ment such that the leading edge is parallel with trailing edge.
Table 8.3   Baseline UCAV wing configurations
AR
b
ΛR-C1
ΛC1-C2
ΛC2-T
λC1
λC2
λT
ΓOverall
1.65
18.2 m
55°
55°
55°
0.68
0.68
0.02
0°
Fig. 8.17   Baseline UCAV wing configurations
 
Fig. 8.16   Baseline UCAV
 

8  Multi-Objective Optimization Model Test Case Problems
138
It is assumed that the baseline design contains two types of airfoils as illustrated 
in Table 8.4 and Fig. 8.18; NACA 67–1015 and NACA 67–008 at the inboard and 
outboard sections.
The mission profile of the UCAV considers Reconnaissance, Intelligence, Sur-
veillance and Target Acquisition (RISTA) as illustrated in Fig. 8.19. Initially the 
UCAV climbs up to 40,000 ft (12,192 m) then cruises close to the target range at 
M∞ = 0.7 and then the flight conditions transit at M∞ = 0.8. It will perform a stealth 
ingress to the target point at M∞ = 0.9 and altitude = 250 ft (76 m) and then destroy 
the target or establish surveillance of the target range. The UCAV climbs back to 
40,000 ft and returns to a predetermined location.
Table 8.4   Baseline UCAV wing airfoil sections
Sections
Root
Crank1
Crank2
Tip
Aerofoils
NACA 67-1015
NACA 67-1015
NACA 67-088
NACA 67-088
Fig. 8.19   Mission profile for baseline UCAV
 
Fig. 8.18   Airfoil sections for baseline design
 

139
Two flight conditions including the cruise and ingress are investigated during 
optimization. These baseline flight conditions are given on Table 8.5. For the cruise/
ingress flight condition, the minimum lift coefficients are calculated to be 0.1914 
and 0.0215. These CL values are applied as inequality constraints. To achieve these 
lift coefficients for the baseline, it was found that the angle of attack should be at 
5.408° for flight condition 1 (cruise) and 0.5733° for flight condition 2 (ingress).
In addition, one of the factors for stealth and RCS geometry area is also consid-
ered. Radar cross section (σ) is most easily visualized as the product of three fac-
tors; {AU: “GEOMETRIC” BELOW??}

(8.9)
where the area of the target presented to the radar can be referred to geometric cross 
sections. Reflectivity refers to the fraction of the intercepted power that is reflected 
by the target, regardless of direction. Directivity is related to reflectivity but refers 
to the power scattered back in the direction of the transmitting radar.
In this test, the only factor considered is the frontal area of the model as the 
geometric cross section. The objectives are maximization of the lift to drag ratio 
(L/D) at cruise and ingress conditions and minimization of frontal area. The fitness 
function and flight conditions are:

(8.10)

(8.11)

(8.12)

(8.13)
(
) (
)
Geometirc
Reflectivity
Directivity
Cross Sections
σ


=
×
×




1
1
1
(
)
min
fitness f
Penalty
L D


=
+




at
0.7 and
5.408
M
α
∞=
=
°
2
2
1
(
)
min
fitness f
Penalty
L D


=
+




at
0.9 and
0.5733
M
α
∞=
=
°
(
)
(
)
3
min
/100
Frontal
fitness f
Area
Penalty
=
+
Penalty
Area
Area
Error
Visual
Frontal
Frontal
Area
=
+
×
Table 8.5   Flight conditions
Mission flight section
M∞
Altitude
L/D Baseline
Flight condition 1—Cruise
0.7
40,000 ft
16.565
Flight condition 2—Ingress
0.9
250 ft
4.729
8.4  Unmanned Combat Aerial Vehicle Configuration

8  Multi-Objective Optimization Model Test Case Problems
140
where ErrorArea  is the ratio of the frontal area error;
where Penalties (2.4) and (2.5) introduced in Chap. 2 are computed and added 
to fitness functions.
•	 if the thickness ratio ( t/c) at root and crank 1 sections are higher than 20 % and 
less than 10.0 % of the chord (
)
& 1
10%
20%
Root
C
t c
≥
≥
;
•	 if the ratios of lift to drag at cruise and ingress conditions are lower than 
16.565and 4.729 (
/
.
/
.
)
L D
L D
Cruise
Ingress
≤
≤
16 565
4 729
and
 then the multiple 
penalty (8.10 and 8.11) is applied.
•	 if the frontal area exceeds 23.28 (
.
)
AreaFrontal ≥23 28 . Then the multiple penalty 
(Eq. 8.13) is applied.
This optimization uses Algorithm 4 in sect. 6.5.5 of Chap. 6.
Design Variables  The airfoil geometry is represented using Bézier curves [8] with 
a combination of a mean line and thickness distribution as mentioned in Sect. 8.2. 
Four (4) airfoil sections are considered at root, crank 1, crank 2 and tip. Upper and 
lower bounds for mean and thickness control points at root, crank 1, crank 2 and tip 
sections are given in Figs. 8.20a, b, c.
The wing plan form shape is parameterized with variables described in Fig. 8.21 
where three sweep angles, three sectional wing wetted areas and three taper ratios 
are considered. These lead to the different span length and Aspect Ratio ( AR). The 
taper ratio at crank 2 will not be higher than the taper ratio at crank 1 i.e. (λC2 ≤ λC1).
The upper and lower bounds for the aerofoil design variables are illustrated in 
Figs. 8.20a, b, c. Seven control points are taken on the mean line and ten control 
points are taken for the thickness distribution respectively. For the wing planform 
design, six (6) design variables are considered three (3) trapper ratios and three 
sweep angles. To maintain the same wing wetted area as baseline design, crank po-
sitions are recalculated without washout and dihedral effects. Upper and lower wing 
design bounds are illustrated in Table 8.6 and Fig. 8.22. Fifty seven (57) variables 
are considered in total.
Implementation  The FLO22 + FRICTION solvers are utilised and the following 
specific parameters are considered for HAPMOEA.
1st Layer
Population size of 200 and intermediate recombination
Computational grid of 96 × 12 × 16 cells used by FLO22 solver
2nd Layer
Population size of 40 and intermediate recombination
Computational grid of 82 × 12 × 16 cells used by the FLO22 solver
3rd Layer
Population size of 60 and intermediate recombination
Computational grid of 68 × 12 × 16 cells used by the FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 1600 function 
evaluations and took 200 h on a single 1.8 GHz. The resulting Pareto set is shown 
in Fig. 8.23 where it can be seen that the shape of Pareto fronts formed is a linear 
function for objectives 1 and 2.

141
Fig. 8.20   a Root mean line 
and thickness control points. 
b Crank 1 mean and thick-
ness control points. c Crank 
2 and Tip mean and thickness 
control points
 
8.4  Unmanned Combat Aerial Vehicle Configuration

8  Multi-Objective Optimization Model Test Case Problems
142
Table 8.6   Wing plan form design variables
Variables
1
R
B
λ
−
1
2
B
B
λ
−
2
B
T
λ
−
1
R
B
−
Λ
Λ B
B
1
2
−
Λ B
T
2−
Lower bounds
0.6
80 (%
1
R
B
λ
−
)
0.002
45°
45°
45°
Upper bounds
0.9
100 (%
1
R
B
λ
−
)
0.1
65°
65°
65°
Fig. 8.22   Wing plan form shape corresponding to design variables
 
Fig. 8.21   UCAV air foil sections and plan form design variables
 

143
The lift to drag ratios of five Pareto members (1, 10, 19, 22 and 30) were selected 
and compared to the baseline design in Table 8.7 where it can be seen that Pareto 
members provide the improvement of aerodynamic performance. Pareto members 
10, 19 and 22 are selected for further evaluation since they produce higher ratios 
of lift to drag for both cruise and ingress conditions and contain lower frontal area 
by 14 % when compared to the baseline design; in other words, a reduction in RCS. 
The lift coefficient distribution of Pareto sets for cruise and ingress conditions are 
illustrated in Figs. 8.24a and b.
The wing plan form shapes corresponding to Pareto fronts are shown in Fig. 8.25 
where it can be seen that all Pareto members have a longer span compared to the 
baseline. The outcome is derived from an ignorance of the bending moment in the 
fitness function. In addition, their wing configurations are compared to the baseline 
design in Table 8.8. It can be seen that the aspect ratio of Pareto members (10, 
19 and 22) are 1.5 or 2 times the baseline design. The span length is increased by 
27 % when compared to the baseline design. Hence these modifications explain the 
Fig. 8.23   Pareto optimal fronts for UCAV wing airfoil sections/plan form
 
Table 8.7   Comparison of the aerodynamic performances
Description
Baseline
Pareto M1
Pareto M10
Pareto M19
Pareto M22
Pareto M30
L/D Cruise
16.565
31.849
27.477
26.775
25.462
12.871
L/D Ingress
4.729
63.879
57.250
61.032
60.104
7.764
Area Front
23.28
21.08
19.98
20.11
20.15
19.28
8.4  Unmanned Combat Aerial Vehicle Configuration

8  Multi-Objective Optimization Model Test Case Problems
144
Fig. 8.24   a Lift coefficient distribution-Cruise. b Lift coefficient distribution-Ingress
 

145
gap discrepancies in the lift distribution of cruise (Fig. 8.24a) and during ingress 
(Fig. 8.24b).
Figure 8.26 shows the shape of Pareto airfoil sections. It can be seen that clas-
sical aerodynamic shapes for transonic speeds have evolved, even considering that 
the optimization procedure is randomly started and the evolution algorithm had no 
problem specific knowledge of appropriate solution. The airfoil sections are com-
pared on Table 8.9 and Fig. 8.27 where it can be seen that the airfoils for the root and 
crank1 have less thickness ratio when compared to the baseline design, however for 
the crank 2 and tip, the thickness of the airfoil is higher and positive cambers are 
observed.
The span wise Cp distribution between the compromised solutions (Pareto mem-
bers 10, 19 and 22) and the baseline design for cruise and ingress conditions are 
compared in Figs. 8.28 and 8.29. Cp distributions are plotted at 0, 20, 40, 60, 80, 
90 % of the span where it can be seen that the compromised solutions are the super-
critical wings at ingress conditions. Top, front, side and three-dimensional views for 
optimal wing geometry (Pareto Member 22) are presented in Fig. 8.30. In addition, 
Table 8.8   Comparison of wing configurations
Description
Baseline
Pareto M1
Pareto M10
Pareto M19
Pareto M22
Pareto M30
AR
1.66
3.02
3.25
2.68
2.96
1.80
b
18.22
24.55
25.49
23.15
24.32
18.99
Fig. 8.25   Optimal wing plan form shapes
 
8.4  Unmanned Combat Aerial Vehicle Configuration

8  Multi-Objective Optimization Model Test Case Problems
146
their wing geometries are quite similar to the stealth fighters Boeing X-45C and 
Northrop Grumman X-47B, and F-117 Nighthawk as shown in References [26].
8.5  Unmanned Aerial Vehicle Mission Path Planning 
System (Hybridized Game/NSGA-II)
UAS mission path planning and EAs for mission path planning is an active field 
of research [26–33]. In this section, EAs are implemented to explore a path plan-
ning system of a generic national security stealth type of Unmanned Aerial Sys-
tem (UAS), or a civilian UAS that needs to fly through mountainous terrain dur-
ing for example a gas sensing, environmental or search and rescue mission. Two 
optimisation methods NSGA-II and Hybrid-Game (explained in Sect. 4.6) applied 
Table 8.9   Comparison of airfoil sections configurations
Description
Thick
Root
Camber
Root
Thick
C1
Camber
C1
Thick
C2-Tip
Camber
C2-Tip
Baseline
0.1499
0.0
0.1499
0.0
0.0799
0.0
Pareto M1
0.1402
0.0139
0.1085
0.0090
0.0855
0.0036
Pareto M10
0.1217
0.0121
0.1025
0.0111
0.0867
0.0038
Pareto M19
0.1201
0.0089
0.1032
0.0101
0.0890
0.0044
Pareto M22
0.1249
0.0118
0.1054
0.0075
0.0892
0.0033
Pareto M30
0.1246
0.0102
0.0979
0.0106
0.0823
0.0055
Fig. 8.26   Airfoil sections of the Pareto Front
 

147
to NSGA-II are implemented for a UAS Mission Path Planning System (AMPPS). 
Results obtained by NSGA-II and Hybridized Games are compared in terms of so-
lution quality and computational expense.
The terrain is represented by meshing three-dimensional surfaces with obstacles 
and altitude constraints. The example terrain is shown in Fig. 8.31 where there are 
obstacles in 90 % of the region where the UAS will be flying. The x and y distances 
are scaled down by 100 in x-axis and y-axis. The red square is the starting position 
and the blue square is the target position. This artificial terrain is randomly gener-
ated however it can be based on real geographical data.
For this application, a constraint of flying below 60 % of maximum altitude (sur-
face (Fig. 8.32): 180 m) is applied due to the possible existence of enemy radar 
or to the limitations in the sensing capabilities of the UAS or because the mission 
requires air sampling below a given altitude.
The generated z coordinates of the trajectories should be below this altitude con-
straint and should not be through obstacles in order to be considered as a collision-
free trajectory. Two terrains are considered in the applications: Test 1 (Fig. 8.33) and 
Test 2 (Fig. 8.33). The difference between them is on the return trajectory: Test 1 is 
a Target-Start while Test 2 is a Target-End.
Fig. 8.27   Air foils sections for the compromised solutions
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
148
Two applications are considered:
•	 Test case 1 considers minimization of two trajectories one from the start position 
(100, 100, 100) to the target position (1800, 1800, 100) and another one from the 
target to the start position (Fig. 8.32).
•	 Test case 2 considers minimization of two trajectories one from the start position 
(900, 100, 150) to the target position (1800, 1800, 100) and another one from the 
target to the end position (100, 900,150) (Fig. 8.33).
Fig. 8.28   a Comparison of Cp distributions at 0 and 20 % of span—Cruise. b Comparison of Cp 
distributions at 40 and 60 % of span—Cruise. c Comparison of Cp distributions at 80 and 90 % of 
span—Cruise
 

149
Fig. 8.29   a Comparison of Cp distributions at 0 and 20 % of span—Ingress. b Comparison of Cp 
distributions at 40 and 60 % of span—Ingress. c Comparison of Cp distributions at 80 and 90 % 
of span—Ingress
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
150
8.5.1  Test 1: Start to Target to Start Position Trajectory 
Optimization
Problem Definition  The test consists of minimizing the total length of the trajectory 
from the start position (100, 100, 100) to the target position (1800, 1800, 100) and 
Fig. 8.30   Top/side and 3D view for compromized solution (Pareto Member 22)
 
Start Position 
(100,100,100) 
Target Position 
(1800,1800,100) 
Fig. 8.31   Baseline terrain
 

151
back to the start position. The aim of the optimization is to find a set of collision-
free trajectories whose length is less than the straight line + 10 % of the length of this 
straight line. The minimum straight line distance for a trajectory between the start 
and target and back in this case is 4809 m. Therefore in this case, optimal trajecto-
ries should be less than 10 % of this value ( Pathmin+10% = 5289 m).
Fig. 8.32   Baseline terrain with altitude constraints (Test 1)
 
Fig. 8.33   Baseline terrain with altitude constraints (Test 2)
Target Position 
(1800,1800,100) 
Start Position 
(900,100,150) 
End Position 
(100,900,150) 
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
152
The multi-objective optimisation consists of finding the length of Pareto optimal 
collision-free trajectories from the start to the target position and back to the start 
position (Test 1: Sect. 8.5.4) or from the start to target and to end position (Test 2: 
Sect. 8.5.5) as expressed in (8.14).

(8.14)
where Penalty will be applied when the z-coordinates of trajectories is lower than 
the z-coordinates of obstacles or higher than the altitude constraints. The value of 
Penalty will be 10 % of straight distance (Figs. 8.38 and 8.35) times the number 
of trajectory coordinate points which are located at lower or higher than terrain or 
altitude constraints.
The minimum distance for a trajectory would be the straight line from the start 
position to the target position and back. However, there is a possibility of collision 
with obstacles when the UAV is flying as shown in Figs. 8.34 and 8.38.
The fitness functions are;

(8.15)

(8.16)
(
)
(
)
(
)
1
2
2
min
(
)
min
(
)
                          
min
(
)
S T
T
S
T
E
f
length Path
Penalty
f
length Path
Penalty
or
f
length Path
Penalty
−
−
−
=
+
=
+
=
+
f
length Path
Penalty
S T
1 =
+
−
min(
(
))
f
length Path
Penalty
T
S
2 =
+
−
min(
(
))
Collision1 
Collision2 
Collision3 
Fig. 8.34   Trajectory for minimum distance (Test 1)
 

153
Fig. 8.35   a Comparison of performance (time in minutes) between NSGA-II and Hybridized 
Games applied to NSGA-II. Note: AVG represents the average computational cost of NSGA-
II and Hybridized Games for five tests. b Comparison of performance (generations) between 
NSGA-II and Hybridized Games applied to NSGA-II software
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
154
where Altitude Radar is 60 % of maximum altitude in that terrain, µi is the number of 
individuals in total population ( Pop Total = 20) and Fµi is the fitness value of indi-
viduals in the population.
The stopping criteria is either when the number of feasible solutions ( Fµi ≤ Pathmin+10%) 
is equal to or greater than total population size, or when the optimization will be 
terminated if the elapsed time is more than 3 h
This test was run five times using both NSGA-II and Hybridized Games on NS-
GA-II to compare the computational cost and design quality. This optimization uses 
Algorithm 4 in Sect. 6.5.5 of Chap. 6.
Design Variables  The trajectory is generated by using Bézier spline curves in a 
three-dimensional environment since the Bézier functions are useful in defining 
shapes and surfaces without sharp corners. The Bézier spline curves are computed 
from a parametric mathematical function which uses the control points ( Pn) as 
parameters in terms of a three-dimensional Cartesian coordinate system i.e., ( x, 
y, z). The start, target, end positions are fixed and the middle control points are 
variables. The coordinates of a sequence of waypoints that define the trajectory are 
computed using (5), (6) and (7);

(8.17)

(8.18)

(8.19)
where n is the number of coordinate points in the trajectory and m represents the 
number of control points for the Bezier spline curve. The value of parameter t is 
between 0 and 1 i.e., t ∈ [0:1].
Results from simulations have shown that ten control points are sufficient to 
produce a detailed trajectory. The five coordinates of x-direction are fixed while 
five y and z coordinates are optimised for each trajectory. The range of y and z co-
ordinates is from 0 to 2000 and from 0 to 300 respectively. The trajectory from the 
start position to the target position will be marked as red lines while the blue line 
will represent the trajectory from the target to the start position.
10%
Subject to;
- 
z-coordinates
Stopping criteria;
and
or
3 hours
Radar
Obstacles
i
Total
i
min
Time
z coordinates
Altitude
Altitude
Pop
F
Path
Elapse
µ
µ
+
<
>
≥
≤
≥
X t
t
x
x
t x
x
i
j
i
j
j
m
i
n
( ) =
−
(
)
…
+
…
(
)




−
=
= ∑
∑
1
0
1
1
2
1
Y t
t
y
y
t y
y
i
j
i
j
j
m
i
n
( ) =
−
(
)
…
+
…
(
)




−
=
= ∑
∑
1
0
1
1
2
1
Z t
t
z
z
t z
z
i
j
i
j
j
m
i
n
( ) =
−
(
)
…
+
…
(
)




−
=
= ∑
∑
1
0
1
1
2
1

155
The trajectory is generated using ten (10) control points for Start-Target and 
Target-Start. The y and z-coordinates are design variables while the x-coordinates 
are fixed. Twenty (20) design variables are considered in total.
Numerical Results  The computational cost obtained by NSGA-II and Hybridized 
Games are compared in Figs. 8.35a (CPU time) and b (number of generations). It 
can be seen in the last column (AVG: average computational cost of five tests) in 
Fig. 8.35a that the Hybridized Games take 13.5 min while the computational cost 
of NSGA-II is 65.2 min for five tests (T1 ~ T5). In other words, Hybridized Games 
improve NSGA-II software efficiency by 80 % in this test case.
The trajectories (T1) obtained by NSGA-II are shown in Fig. 8.36 where the red 
lines represent the trajectory from the start position to the target position while the 
blue lines are for the trajectory from the target to the start position. The average 
distance of collision-free trajectories is 4989 m which is only 3.7 % higher than the 
minimum distance ( Pathmin).
Figure 8.37 shows that the trajectories (T4) obtained by Hybridized Games and 
the average distance of collision-free trajectories is 4980 m which is only 3.5 % 
higher than the minimum distance ( Pathmin).
However, trajectories (Fig. 8.37) obtained by Hybridized Games are not as di-
verse as the trajectories (Fig. 8.36) obtained from NSGA-II software, the compu-
tational cost of Hybrid Game is much lower and have shorter collision-free trajec-
tories. There is only 9 m difference between NSGA-II software and Hybridized 
Games however this difference could be as much as 900 m if the terrain is scaled 
down in x and y-axis by 100 %.
Fig. 8.36   Trajectories obtained by NSGA-II (T1)
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
156
8.5.2  Test 2: Start to Target to End Position Trajectory 
Optimization
Problem Definition 
•	 The test is to minimize the total trajectory length from the start position (900, 
100, 150) to a target position (1800, 1800, 100) and then to an end position (100, 
900,150). Test 2: The minimum straight line distance for a trajectory between 
the start to target and target to end point in this case is 3849 m; therefore in 
this case, optimal trajectories should be less than 10 % longer than this value 
( Path min+10% = 4233 m).
The fitness functions are;

(8.20)

(8.21)
where Pathmin is 3849 m and Pathmin+10% is 4233 m.
(
)
1
min
(
)
S T
f
length Path
Penalty
−
=
+
f
length Path
Penalty
T
E
2 =
+
−
min(
(
))
10%
Subject to;
Stopping criteria;
0.5
and
or
3hours
Radar
Obstacles
i
Total
i
min
Time
z
coordinates Altitude
z
coordinates Altitude
Pop
F
Path
Elapse
µ
µ
+
−
<
−
>
≥
×
≤
≥
Fig. 8.37   Trajectories obtained by Hybridized Games (T4)
 

157
The same stopping criteria are applied as the previous test case in Sect. 4.1, one 
difference condition is that the optimisation will stop if the population of the Pa-
reto Player ( µi) contains 10 of the collision-free members out of total population 
( PopTotal = 20). This test was run five times using both NSGA-II and Hybridized 
Games on NSGA-II to compare the computational cost and solution design quality. 
This optimisation uses Algorithm 4 in Sect. 6.5.5 of Chap. 6.
Design Variables  The trajectory is generated using ten (10) control points for Start-
Target and Target-End as shown in Fig. 8.33. The y and z-coordinates for each con-
trol points are considered as design variables, while the x-coordinates are fixed. 
Twenty design variables are considered in total. See sect. 8.5.4 for details.
Numerical Results  The computational cost obtained by NSGA-II software and 
Hybridized Games are compared in Figs. 8.39a (CPU time) and b (generations). It 
can be seen that the NSGA-II software failed to find ten collision-free path ways 
in Test 2 (T2) and Test 4 (T4) within a 3 h run in contrast to the Hybridized Games 
which successfully found the collision-free trajectories for five test cases (T1 ~ T5).
The shortest average distances of collision-free trajectories obtained by NSGA-
II (T3: 41  min, 521 generations) and Hybridized Games (T2: 2  min, 7 genera-
tions) are 3967 m 3924 m respectively. In addition, the distance of Nash-Game 
inside Hybridized Games (T2) is 3922 m. The population of NSGA-II (T3: blue 
diamonds) and Hybrid-Game (T2: red squares) including Nash-Equilibrium (green 
triangles) are compared in Fig. 8.40. It can be seen that Hybridized Games have a 
better convergence than NSGA-II. Three members of NSGA-II failed the condition 
( Fµi ≤ Pathmin + 10 %) from the start to target position while the entire population of 
Collision1 
Collision3 
Collision2 
Fig. 8.38   Trajectory for finding Minimum distance (Test 2)
 
8.5  Unmanned Aerial Vehicle Mission Path Planning System …

8  Multi-Objective Optimization Model Test Case Problems
158
Hybridized Games satisfied this condition. The computational cost of Hybridized-
Games (T2) is only 5 % of the minimum computational cost of NSGA-II (T5).
Figures 8.41 and 8.42 show the collision-free trajectories obtained by NSGA-II 
(T3: 17 members) and Hybrid-Game (T2: 20 members) respectively. Figure 8.41b 
and 8.42b show the trajectories on the top view where the return trajectories (T-E) 
of Hybridized Games are shorter than NSGA-II ones.
Fig. 8.39   a Comparison of performance (CPU time: mins) between NSGA-II software and 
Hybridized Games coupled to NSGA-II. b Comparison of performance (generations) between 
NSGA-II and Hybrid-Game coupled to NSGA-II
 

159
8.6  Unmanned Aerial Vehicle (Uav) Configuration
The reason why Hybridized Games have faster convergence than NSGA-II can 
be found in Test 1. For test case 1, NSGA-II (45.5 min) and Hybridized Games 
(3.4 min) are terminated after 560 and 13 generations respectively. The elite design 
obtained by Nash-Game and the population of Hybridized Games are compared in 
Fig. 8.43a where the elite design of Nash-Game dominates all individuals of Hybrid-
ized Games. The initial population distribution of Hybridized Games is similar to 
NSGA-II (Fig. 8.43b). However there is big difference between Hybridized Games 
(Fig. 8.44a) and NSGA-II (Fig. 8.44b) after the 10th generation: six members of 
Hybridized Games already have less than the distance of Pathmin + 10 % while none 
of NSGA-II members satisfy the distance conditions ( Fµi ≤ Pathmin + 10 %). This 
can be explained by the fact that the use of dynamic Nash-Game accelerates the 
searching speed of the Hybridized Games to capture the global solutions.
8.6  Unmanned Aerial Vehicle (Uav) Configuration: 
Detailed Design Optimisation
The type of vehicle addressed in this section is a generic Joint Unmanned Com-
bat Air Vehicle (J-UCAV) which is similar in shape to Northrop Grumman X-47B 
[34,35] as shown in Fig. 8.45.
The wing plan form shape is assumed as an arrow shape with jagged trailing 
edge. The aircraft maximum gross weight is approximately 46,396 lb (21,045 kg) 
and empty weight is 37,379 lb (16,955 kg). The wing design parameters for the 
Fig. 8.40   Comparison of Pareto front between NSGA-II, Hybridized Games coupled to NSGA-II 
and Nash-Games
 

8  Multi-Objective Optimization Model Test Case Problems
160
Fig. 8.41   a Trajectories obtained by NSGA-II (T3: 17 members). b Trajectories obtained by 
NSGA-II (T3)
 

161
Fig. 8.42   a Trajectories obtained by Hybridized Games on NSGA-II (T2: 20 members). b Trajec-
tories obtained by Hybridized Games coupled with NSGA-II (T2)
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
162
Fig. 8.43   a Population of Hybridized Games on NSGA-II at generation 0. b Population of 
NSGA-II at generation 0
 

163
Fig. 8.44   a Population of Hybridized Games on NSGA-II at generation 10. b Population of 
NSGA-II at generation 10
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
164
baseline wing are defined on Fig. 8.46 and Table 8.10. In this test case, the fuselage 
is assumed from 0 to 25 % of the half span. The crank positions are at 46.4 % and 
75.5 % of the half span. The inboard and outboard sweep angles are 55 degrees and 
29 degrees respectively. Inboard and outboard taper ratios are 20 % and 2 % of the 
root chord respectively.
Fig. 8.45   Baseline design in 
3D view
 
Fig. 8.46   The UCAV baseline configuration
 

165
It is assumed that the baseline design contains three types of airfoils at root, 
crank 1, crank 2 and tip section as shown in Fig. 8.46; NACA 66–021 and NACA 
67–1015 are at inboard and for outboard NACA 66–021 and NACA 67–008 are 
employed. These airfoils are shown in Fig. 8.47. The maximum thickness at root is 
21 % of the chord that is approximately 3 % thicker than X-47B due to increment of 
payload and fuel capacity.
The mission profile of UCAV includes eight (8) sectors: Reconnaissance, In-
telligence, Surveillance and Target Acquisition (RISTA) as illustrated in Fig. 8.48 
where it is divided into eight Sectors.
Where
Sector1: T/O & 
Climb
; Sector 2: start Cruise
Sector 3: transition 
dash
; Sector 4: Ingress
Sector 5: Target 
strike
;Sector 6: start; 
R-Cruise
Sector7: end 
R-Cruise
Sector 8: Decent & 
Land
where R-Cruise represents the returning cruise
Figure 8.49 shows the weight distribution along the mission profile (Sector 1~ Sec-
tor 8). The weight between Sector 4 and Sector 5 is significantly reduced since 80 % 
of ammunitions weight is used for target strike.
In this section, flight conditions for Sector 2 to Sector 4 are considered and 
minimum lift coefficients (
)
CLMinimum  are 0.296 and 0.04 for Sector 2 and Sector 4 
respectively as shown in Fig. 8.50. The baseline design produces 30 % higher lift 
Table 8.10   Baseline UCAV wing configurations
AR
b
Λ R C
−1
ΛC
C
1
2
−
ΛC
T
2−
1
C
λ
2
C
λ
T
λ
ΓOverall
4.377
18.9 m
55°
29°
29°
20
20
2
0°
Note: λ is given with respect to percentage of root chord length
Fig. 8.47   UCAV baseline air foil sections
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
166
coefficient at Sector 2 when compared to CLMinimum  while only 7 % higher at Sector 4. 
The aim of optimisation is the improvement of aerodynamic performances at Sector 
4 while maintaining aerodynamic performance at Sector 2.
Problem Definition  This test case considers the design optimisation of a UCAV 
wing airfoil sections and plan form geometry. The objectives are to maximize both 
Fig. 8.48   Mission profile for the J –UCAV baseline
 
Fig. 8.49   Weight distribution corresponding to Sectors
 

167
mean values of lift coefficient (
)
CL  and lift to drag ratio (
/
)
L D . Fitness functions 
and flight conditions are as follows;

(8.22)

(8.23)
at
Sector 2: 
0.7,
6.05
M
α
°
∞=
=
 and altitude 40,000 ft
Sector 4: 
0.9,
0.5
M
α
°
∞=
=
 and altitude 250 ft
where
and
C
C
C
L D
L D
L D
L
L
L
Mission
Mission
Mission
=
+
=
+
1
2
1
2
2
4
2
(
)
/
(
/
/
Mission4)
This optimisation uses Algorithm 4 in Sect. 6.5.5 of Chap. 6.
Design Variables  In this test case, the airfoil geometry is represented using Bezier 
splines with a combination of a mean line and thickness distribution as shown in 
Chap. 7. The upper and lower bounds for mean and thickness control points at root, 
crank 1, crank 2 and tip sections are given in Figs. 8.51a, b, c, d.
The wing plan form shape is parameterized with nine (9) design variables in-
cluding three (3) sectional areas, three (3) sweep angles and three (3) taper ratios 
described in Fig. 8.52. These will alter the span length ( b) and Aspect Ratio ( AR). 
fitness f
CL
(
)
min
/ (
)
1
1
=
(
)
fitness f
L D
(
)
min
/ (
/
)
2
1
=
(
)
Fig. 8.50   Minimum lift coefficient ( CL) required for Sector 2–Sector 4
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
168
Fig. 8.51   a Root mean and thickness control points. b Crank1 mean and thickness control points. 
c Crank 2 mean and thickness control points. d Tip mean and thickness control points
 

169
The taper ratio at crank 2 will not be higher than the taper ratio at crank 1 i.e., 
2
1
(
)
C
C
λ
λ
≤
.
The design variables are for the airfoil sections located at four (4) span wise 
stations as described in Figs. 8.51a, b, c, d. Lower design bounds of thickness dis-
tributions are the same as the baseline design to increase the fuel capacity, avionics 
and missile payloads. Eight (8) design variables that define wing configurations are 
considered (λC1, λC2, ΛR-C1, ΛC1-C2, ΛC2-T, S1, S2 and S3). The taper ratio (λT) at tip is 
fixed as 0.2 % of the root chord. Two crank positions ( C1 and C2) and wing span ( b) 
are recalculated without washout or dihedral effects. The upper and lower design 
bounds values are provided on Table 8.11. Seventy six (76) design variables are 
considered in total.
Implementation  The FLO22 and FRICTION CFD solvers are utilised and the fol-
lowing specific parameters are considered for HAPMOEA.
1st Layer
Population size of 15 and intermediate recombination
Computational grid of 96 × 12 × 16 cells used by FLO22 solver
2nd Layer
Population size of 20 and intermediate recombination
Computational grid of 68 × 12 × 16 cells used by FLO22 solver
3rd Layer
Population size of 30 and intermediate recombination
Computational grid of 48 × 12 × 16 cells used by FLO22 solver
Fig. 8.52   Wing plan form design variables
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
170
Numerical Results  The algorithm was allowed to run approximately 6666 function 
evaluations and took 200 h on two 2.4 GHz processors. The resulting Pareto set is 
shown in Fig. 8.53 where the black inverse triangle represents the best solution for 
fitness function 1. The blue triangle indicates the best solutions for the fitness func-
tion 2. Red squares represent compromised solutions. A convex Pareto front can be 
seen between the first and the second objective as shown in Section-A.
Table 8.12 compares the fitness values obtained by the baseline and Pareto mem-
bers (1, 5, 6 and 15). It can be seen that all non-dominated solutions produce higher 
CL  and L D
/
. A 17.5 % of CL  and 80 % L D
/
 improvement can be noticed when 
compared to the baseline design performances.
The wing plan form shapes corresponding to each member of the Pareto front 
are represented on Fig. 8.54 and Table 8.13. It can be noticed that all Pareto mem-
bers have a longer span when compared to the baseline design due to considering 
aerodynamics only for fitness 1 and fitness 2. The aspect ratio of Pareto members 
are twice higher compared to the one of the baseline design. There was more than 
40 % span length expansion while a reduction of 20 % taper ratios at crank 1 and 
Table 8.11   Wing planform design variables
Variables bounds
S1 (m2)
S2 (m2)
S3 (m2)
λC1
λC2
ΛR-C1
ΛC1-C2
ΛC2-T
Lower
50.46
10.09
5.05
0.15
0.15
49.5°
25°
25°
Upper
63.92
16.82
10.09
0.45
0.45
60.5°
35°
35°
Fig. 8.53   Pareto optimal front
 

171
Table 8.12   Comparison of objectives obtained by the baseline design and HAPMOEA software
Description
Baseline
ParetoM1 
(BO1)
ParetoM5 
(CS1)
ParetoM6 
(CS2)
ParetoM15 
(BO2)
1/ CL
12.232
9.890
(− 19 %)
10.056
(− 18 %)
10.096
(− 17 %)
10.562
(− 14 %)
1/
/
L D
0.410
0.095
(− 77 %)
0.079
(− 80 %)
0.078
(− 81 %)
0.068
(− 83 %)
Note: BO represents a Best Objective and CS indicates a Compromised Solution
Fig. 8.54   Optimal plan form shapes
 
Table 8.13   Comparison of wing configurations
Models
AR
B
λC1
λC2
ΛR-C1
ΛC1-C2
ΛC2-T
Baseline
4.45
18.9
19.7
19.7
55°
29°
29°
Pareto M1
8.74
26.89
15.3
15.3
56.9°
31.3°
29.8°
Pareto M5
8.38
27.18
15.8
15.8
58.6°
30.3°
29.8°
Pareto M6
8.34
26.81
15.9
15.9
58.5°
30.7°
29.8°
Pareto M15
7.49
25.68
16.7
16.7
59.8°
26.6°
29.7°
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
172
crank 2 sections. It can also be observed that there was higher leading edge sweep 
angle between root to crank 1 section. These wing configurations result in higher 
CL  and L D
/
.
The Sector sweep is plotted with lift and drag coefficient in Figs. 8.55a and b. The 
range of Sector sweep is 
0.7 : 0.9,
6.05: 0.5
M
α
∞=
=
 at an altitude = 40 000 250
,
:
. 
It can be observed that all Pareto members (1, 5, 6 and 15) produce higher CL when 
compared to the baseline and minimum CL requirement. Pareto member 1 (Best 
objective 1 for 1/ CL ) indicates higher lift coefficient along the sectors when com-
pared to other solutions while Pareto member 15 (Best objective 2 for 1/
/
L D ) has 
lower drag coefficient when Mach number is higher than 0.775. In addition, Pareto 
members (1, 5, 6 and 15) produce lower CD without fluctuation when compared to 
the baseline design as shown in Fig. 8.55b and Table 8.14. Table 8.14 compares the 
mean and variance of drag coefficient obtained from Pareto members (1, 5, 6 and 
15) and the baseline design. It can be concluded that all Pareto members produce 
lower drag coefficient with sensitivity/stability by more than 50 % at Sector 2 and 
Sector 4 conditions when compared to the baseline design.
Figure 8.55c compares the lift to drag ratio obtained by Pareto members (1, 5, 6 
and 15) and the baseline design along the Sector sweep. It can be seen that all Pareto 
members produce higher lift to drag ratios along the Sector sweep which means an 
extension of flight range.
Even though the multi-objective optimisation method found useful Pareto non-
dominated solutions and produced aerodynamic improvement in Sector 2 and Sec-
tor 4, there is a considerable fluctuation of lift to drag ratio (L/D) with Mach number 
ranging from 0.75 to 0.85 (transition points: Sector 2 to Sector 3 and Sector 3 to 
Sector 4) where a high dash flight is required. Therefore it is necessary to check the 
aerodynamic quality along the Sector conditions including Mach (
.
: .
)
M ∞= 0 75 0 85 , 
angle of attack (
4.662 :1.887)
i
α∞∈
 and altitude (
:
)
ATI
i
∞∈30062 10187 . This can 
be expressed in terms of mean and variance of lift to drag ratio (L/D): the mean 
value indicates the scalar of objective while the variance value can be interpreted 
as the stability or sensitivity of objective. Table 8.15 compares the quality of lift to 
drag ratio (L/D) obtained from the Pareto members (1, 5, 6 and 15) with the base-
line design. The variances of lift to drag ratio (L/D) obtained by Pareto members 
are higher than the baseline design. This means Pareto members are over-optimised 
solutions to maximise an aerodynamic performance at design conditions.
This fluctuation can lead to structural or control failure at transition points: Sec-
tor 2 to Sector 3 and Sector 3 to Sector 4. This fluctuation can be avoided by using 
an uncertainty robust design technique during optimization. However, particular 
care is required for deciding variability of flight conditions. For instance, the vari-
able operating conditions are considered between blue centre lines in Fig. 8.55c 
then the variance (Line-B) of the baseline is higher than Pareto member 1 (Line-A) 
even though the baseline is more stable (low variance) from Sector 2 to Sector 4 
conditions. The introduction of uncertainty with effective variability of operating 
conditions is implemented in the next application to produce stable solutions on 
both drag coefficient and lift to drag ratio. This test case will be considered with 
uncertainty design techniques implemented in Sect. 9.4 of Chap. 9.

173
Fig. 8.55   a Lift coefficient ( CL) vs. Sector sweep. b Drag coefficient ( CD) vs. Sector sweep. 
c Lift to drag ratio ( L/D) vs. Sector sweep
 
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
174
8.6.1  Multi-Objective Design Optimisation of UCAV Using 
Hybridized Games
Problem Definition  This test case considers the design optimisation of UCAV wing 
air foil sections and plan form geometry. The objectives consist of maximizing both 
mean values of lift coefficient (
)
CL  and lift to drag ratio (
/
)
L D  and maximising a 
manoeuvrability and range of a UCAV.
For a real world problem, Hybridized Games employs five (5) Nash-Players and 
one (1) Pareto-Player as shown on Table 8.16. The Pareto-Player of Hybridized 
Games solely considers all seventy six (76) design variables including air foil sec-
tions and wing plan form. Air foil sections at root, crank 1, crank 2 and tip are opti-
mized by Nash-Players 1–4 while Nash-Player 5 optimises wing plan form only. In 
other words, each Nash-Player from 1 to 4 will optimize seventeen (17) air foil de-
sign variables while Nash-Player 5 will consider 8 wing plan form design variables. 
In contrast, each node (Node 0- 6) of HAPMOEA will consider all seventy six (76) 
design variables including air foil sections and wing plan form.
Fitness functions for Pareto and Nash-Players are indicated in Table 8.17.
Table 8.15   Comparison of lift to drag ratio ( L/D) quality
Objective
Baseline
ParetoM1 
(BO1)
ParetoM5 
(CS1)
ParetoM6 
(CS2)
ParetoM15 
(BO2)
L D
/
10.525
27.62
30.03
31.05
33.222
/
L D
δ
8.25
23.53
42.08
50.19
127.10
Note: BO and CS represent the best objective and compromised solutions respectively
Table 8.14   Quality comparison of mean and variance drag coefficient ( CD)
Description
Baseline
ParetoM1 
(BO1)
ParetoM5 
(CS1)
ParetoM6 
(CS2)
ParetoM15 
(OB2)
CD
0.025
0.011
(− 56 %)
0.010
(− 60 %)
0.009
(− 64 %)
0.009
(− 64 %)
D
C
δ
5.49 × 10−5
1.49 × 10−5
1.54 × 10−5
1.56 ´ 10−5
(−81 %)
2.11 × 10−5
Table 8.16   Distribution of design variables for Hybridized Games and HAPMOEA
Design
variables
Hybridized games coupled with HAPMOEA
HAPMOEA
N-P1
N-P2
N-P3
N-P4
N-P5
P-Player
Air foil Root
√
√
√
Air foil Crank1
√
√
√
Air foil Crank2
√
√
√
Air foil Tip
√
√
√
Wing Plan form
√
√
√
N-Pi represents ith Nash-Player and P-Player the Pareto-Player

175
Flight conditions are:
Sector 2: M∞ = 0.7, α = 6.05° and altitude 40,000 ft
Sector 4: M∞ = 0.9, α = 0.5° and altitude 250 ft
This optimisation uses Algorithm 4 described in Sect. 6.5.5 of Chap. 6.
Design Variables  The airfoil geometry is represented using Bezier curves with a 
combination of a mean line and thickness distribution control points. Four (4) air 
foils at root, crank 1, crank 2 and tip sections are considered to optimize and the 
control points for air foil design are sixty eight (68: 4 sections × 17 control points). 
The wing plan form shape is parameterized by considering eight design variables 
including three wing sectional areas, three sweep angles and two taper ratios and 
upper and lower bounds values of these variables are described on Table 8.11. These 
lead to the different span length ( b) and Aspect Ratio ( AR).
Numerical Results  Both HAPMOEA and Hybridized Games are run on two 
2.4 GHz processors. The HAPMOEA algorithm was allowed to run approximately 
6667 function evaluations and took two hundred (200) CPU hours. The Hybrid-
Game (Hybrid Nash-HAPEA) algorithm was run approximately for 1300 function 
evaluations and took fifty (50) hours which represents 25 % computation cost of 
HAPMOEA. The Pareto fronts obtained by HAPMOEA and Hybridized Games are 
Table 8.17   Fitness functions for each player in Hybridized games
Player
Fitness function
Optimization criteria
Pareto-Player
f
C
PP
L
1
1
=
(
)
(
)
min
f
L D
PP2
1
=
(
)
(
)
min
.
Optimize wing plan form and airfoil sec-
tions at root, crank 1, crank 2 and tip to 
maximize CL  and L D
Nash-Player 1
f
C
NP
L
1
1
=
(
)
(
)
min
Maximize total wing CL  using design vari-
ables for air foil Root only, all other design 
variables are fixed
Nash-Player 2
f
C
NP
L
2
1
=
(
)
(
)
min
Maximize total wing CL  using design 
variables for air foil Crank 1 only, all other 
design variables are fixed
Nash-Player 3
f
C
NP
L
3
1
=
(
)
(
)
min
Maximize total wing CL  using design 
variables for air foil Crank 2 only, all other 
design variables are fixed
Nash-Player 4
f
C
NP
L
4
1
=
(
)
(
)
min
Maximize CL  using design variables for 
air foil Tip only, other design variables are 
fixed
Nash-Player 5
f
L D
NP5
1
=
(
)
(
)
min
Maximize total wing L D  using design 
variables for wing plan form only, all other 
design variables are fixed
Note: C
C
C
L D
L D
L D
L
L
L
Sector
Sector
Sector
Sector
=
+
(
)
=
+
(
)
1
2
1
2
2
4
2
4
and
/
/
/
8.6  Unmanned Aerial Vehicle (Uav) Configuration

8  Multi-Objective Optimization Model Test Case Problems
176
compared to the baseline design in Fig. 8.56. It can be seen that Hybridized Games 
produce much better solutions when compared to HAPMOEA solutions.
Table 8.18 compares the Pareto optimal solutions obtained by HAPMOEA soft-
ware and Hybridized Games. It can be seen that Hybridized Games software pro-
duces twice the value of the lift coefficient ( CL) while slightly better for inverse 
mean lift to drag ratio ( L/D) when compared to Pareto members obtained by HAP-
MOEA software.
Table 8.19 compares the quality of drag coefficient obtained by HAPMOEA 
software and Hybridized Games using the uncertainty mean and variance statistical 
formulas. It can be seen that Pareto members of Hybridized Games produce lower 
drag at [Sector 2:Sector 4] while Pareto members from HAPMOEA software pro-
duce stable drag.
Table 8.18   Comparison of fitness values obtained by HAPMOEA and Hybridized games
Objective
Baseline
design
HAPMOEA (200 h)
Hybrid-Game (50 h)
PM1
(BO1)
PM6
(CS)
PM15
(BO2)
PM1
(BO1)
PM6
(CS)
PM10
(BO2)
1/ (
)
CL
12.232
9.890
(− 19 %)
10.096
(− 17 %)
10.562
(− 14 %)
7.836
(− 36 %)
8.017
(− 34 %)
8.223
(− 32 %)
1/ (
/
)
L D
0.410
0.095
(− 77 %)
0.078
(− 81 %)
0.068
(− 83 %)
0.054
(− 87 %)
0.050
(− 88 %)
0.046
(− 89 %)
Note: BO represents the best objective solution and CS stands for the compromised solution
HAPMOEA
200 hours
Hybrid Nash-HAPEA
50 hours
HAPMOEA
200 hours
Hybrid Nash-HAPEA
50 hours
Fig. 8.56   Comparison of Pareto front obtained by Hybridized Games and HAPMOEA
 

177
The mission sweep is plotted with the lift coefficient and lift to drag ratio (L/D) 
as shown in Figs. 8.57a, b. The range of Sector sweep is M∞ ∈[0.7:0.9], α ∈[6.05°: 
0.5°] and altitude ( feet) ∈ [40,000: 250]. Pareto fronts obtained from HAPMOEA 
software and Hybridized Games software produce higher CL and L/D when com-
pared the baseline design. Pareto members from both optimisation techniques pro-
duce similar results for CL and L/D at Sector 2 however Pareto non-dominated 
solutions from Hybridized Games produce better CL and L/D at Sector 4.
The top, side, front and 3D view of trade off model from HAPMOEA soft-
ware (Pareto member 5) and Hybridized Games (Pareto member 6) are shown in 
Figs. 8.58a and b. Even though Hybridized Games spent less computational time 
when compared to HAPMOEA, both compromised solutions look geometrically 
similar.
8.7  Aerostructural Optimisation of a Medium Alitude 
Long Endurance (Male) UAS
Problem Definition  This problem considers the design optimisation of a MALE 
UAV wing similar to the one shown in Fig. 8.59. The two objectives are the maxi-
mization of the lift to drag ratio ( L/D), and the minimization of wing weight. The 
cruise Mach number and altitude are 0.3663 and 12680 m respectively and the wing 
area is set to 29.21 m2. The two fitness functions to be optimised are defined as 
maximization of lift to drag ratio ( L/D) and minimization of wing weight ( W). For 
penalty function in fitness function, (2.4) and (2.5) expressions defined in Chap. 2 
are applied. This optimization uses Algorithm 5 in Sect. 6.5.6, Chap. 6.

(8.24)

(8.25)
Design Variables  Design variables for the external and internal wing geometry were 
considered. Figure 8.60 illustrates the external geometry variables and Fig. 8.61 
illustrates the internal geometry variables.
f
L D
penalty
1
1
=
(
)
+




min
/
f
W
penalty
2 =
+
min(
)
Table 8.19   Comparison of total drag coefficient quality ( CDQuality ) obtained by HAPMOEA and 
Hybridized Games
Objec-
tive
Baseline
design
HAPMOEA (200 h)
Hybrid-Game (50 h)
PM1
(BO1)
PM6
(CS)
PM15
(BO2)
PM1
(BO1)
PM6
(CS)
PM10
(BO2)
CD
12.232
0.025
0.011
(− 56 %)
0.009
(− 64 %)
0.009
(− 64 %)
0.009
(− 64 %)
0.0089
(− 64 %)
D
C
δ
0.410
5.49 × 10−5
1.49 × 10−5
1.56 × 10−5
2.11 × 10−5
2.29 × 10−5
2.24 × 10−5
Note: Quality is represented by mean (performance) and variance (sensitivity/stability)
8.7  Aerostructural Optimisation of a Medium Alitude …

8  Multi-Objective Optimization Model Test Case Problems
178
Baseline
HYBRID GAME
HAPMOEA
Baseline
HYBRID GAME
HAPMOEA
Fig. 8.57   a Lift coefficient ( CL) vs. Sectors: Hybridized -Nash represents Hybridized -Games. b 
Lift to drag ratio ( L/D) vs. Sectors: Hybrid-Nash represents Hybridized Games
 

179
Fig. 8.58   a Pareto Member 5 obtained by HAPMOEA software. b Pareto Member 6 obtained by 
Hybridized Games software
 
Fig. 8.59   MALE UAV
 
8.7  Aerostructural Optimisation of a Medium Alitude …

8  Multi-Objective Optimization Model Test Case Problems
180
Fig. 8.60   External geometry variables
 
Fig. 8.61   Internal geometry variables
 

181
The following constraints, based on the baseline design, are considered:
•	 The pitching moment must not be greater than − 0.1768;
•	 The calculated coefficient of lift must be greater than 0.64;
•	 The thickness of each aerofoil must exceed 12 % ( t/c ≥ 0.12).
•	 No internal or external structural sections can buckle or fail due to excessive 
strains;
•	 The wing tip may not twist more than one (1°) degree;
•	 The wing may not deflect more than twenty per cent (20 %) of the span.
All the abovementioned constraints are applied by penalizing either or both fitness 
values via an exponential penalty method. In addition, any airfoil generated outside 
the thickness bounds of 10–15 % is rejected immediately before any analysis being 
performed on the wing.
Implementation  This optimization uses Algorithm 5 in Sect. 6.5.6 of Chap. 6. An 
aero-structural solver is developed integrating two analysis tools for FEA and CFD 
namely MSC. NASTRAN and the high order panel method PANAIR. The entire 
aero-structural program is controlled through a Mat lab® script file. This allows for 
an easy coupling of the different required programs since a continuous Mat lab® 
data structure can be utilized to define all the information passed between programs. 
Figure 8.62 illustrates the procedure.
Two approaches were compared, one using a single population approach and one 
using a hierarchical/multi-fidelity approach. Details on each approach are:
Single-Expensive –High Fidelity Approach  EA with CMA/Pareto tournament 
selection with a population size of 20 and a fine computational grid between 1904 
and 2992 aerodynamic panels.
Multi-fidelity- Hierarchical Approach 
1st Layer
Population size of 20 and intermediate recombination with a compu-
tational grid between 1904 and 2992 aerodynamic panels
2nd Layer
Population size of 40 and intermediate recombination with a compu-
tational grid between 1428 and 2244 aerodynamic panels
3rd Layer
Population size of 60 and intermediate recombination with a compu-
tational grid between 952 and 1496 aerodynamic panels
Numerical Results  The algorithm was run for 500 function evaluations in both cases 
and took approximately 36 h to compute on a cluster of three machines. Figure 8.63 
illustrates a well-distributed Pareto front in both cases. It can be seen that the use 
of a multi-fidelity (hierarchical) approach gives an overall lower front as compared 
to a single model approach. This problem demonstrates use of the framework for 
UAV wing design and optimisation. Results indicate a computational gain and bet-
ter results by using a hierarchical topology of fidelity models.
Figure 8.64 shows some of the wings in the Pareto front and Fig. 8.65 illustrates 
the airfoil geometries for each of these Pareto members. The designer will have the 
8.7  Aerostructural Optimisation of a Medium Alitude …

8  Multi-Objective Optimization Model Test Case Problems
182
flexibility to choose amongst these solutions depending on preference and objec-
tives of the design.
Figure 8.66 compares the coefficient of lift versus coefficient of drag for selected 
Pareto members and baseline/benchmark. A better performance of Pareto members 
can be observed.
Table 8.20 compares some of the aerodynamic and structural characteristics of 
the designs. Again benefits are clearly shown on the methodology as it produces 
optimal designs with higher L/D and lower structural weight.
Fig. 8.62   Aero-structural analysis
 

183
Fig. 8.63   Internal geometry variables
 
Fig. 8.64   Top views of selected Pareto members
 
8.7  Aerostructural Optimisation of a Medium Alitude …

8  Multi-Objective Optimization Model Test Case Problems
184
Fig. 8.65   Airfoil section of selected Pareto members
 
Fig. 8.66   Lift coefficient ( CL) vs. drag coefficient ( CD) for selected MALE Pareto members and 
Benchmark
 

185
8.8  Aero-Electromagnetic Optimization of a UAS
Problem Definition  This test case considers both mono and bi-static radar analysis 
to produce a stealth model targeting enemy aircraft and ground radar. The same 
flight conditions as shown on Table 8.5 of Chap. 8.5 are applied for the design and 
optimisation of a UCAV wing air foil sections and plan form geometry operating 
with a variability of Mach numbers. First and second objectives are minimization of 
the mono and bi-static RCS. A third fitness function evaluates aerodynamic stabil-
ity. The value of variance being normally quite small, there is little effect from mean 
value being log scaled. This optimization uses Algorithm 5 shown in Sect. 6.5.6 of 
Chap. 6. Fitness functions are defined in (8.26), (8.27) and (8.28):

(8.26)
where 
[0 :
]
3 :360
θ
°
°
°
=
 and 
[0 : 0 :
]
0
φ
°
°
°
=
 (Mono-static)

(8.27)
where Incident angles 
135, 
90
θ
φ
°
°
=
=
 at 
[0 :
]
3 :360
θ
°
°
°
=
, 
[0 : 0 :
]
0
φ
°
°
°
=
 
(Bi-static)

(8.28)
Design Variables  The design variables for the air foil sections at four span-wise 
stations are described in Figs. 8.20a, b, c. Two thickness constraints are considered 
as 20 and 80 %c for structural concern. For the wing plan form design, nine (9) 
design variables are considered including λR-B1, λB1-B2, λB2-T, ΛR-B1, ΛB1-B2 and ΛB2-T. 
The break point positions are recalculated without twist and dihedral factors by 
(
)
(
)
(
)
1
0
min ln
ln
exp(
)
exp(
)
q
Mono
i
i
i
f
RCS
RCS
RCS
θ
φ
=


=
=
+




∑
(
)
(
)
(
)
2
0
min ln
ln
exp(
)
exp(
)
q
Bi
i
i
i
f
RCS
RCS
RCS
θ
φ
=
=


=
+




∑
(
)
(
)
(
)
(
)
3
min
1 /
/
1
1
ln
ln 1/ (
/
)
L
D
f
L D
δ
=


−
−


+




Table 8.20   Aerodynamic and structural characteristics of the optimal designs
Pareto 3
Pareto 8
Pareto 23
Benchmark
Deflection (%)
16
17.3
13.8
12.5
Maximum strain
0.000396
0.00052
0.000485
0.000403
Mass (kg)
233.735
217.873
185.1
220.9
L/D
43.367
44.4
44.25
23.9
Mass penalty (kg)
40
0
0
0
Drag penalty
0.0027
0
0
0
8.8  Aero-Electromagnetic Optimization of a UAS

8  Multi-Objective Optimization Model Test Case Problems
186
obtaining inboard and outboard areas. The upper and lower design bounds values 
are given on Table 8.21.
Implementation  The Euler FLO22 solver (A. Jameson) is utilized and the following 
specific parameters are considered for the evolutionary optimiser using a hierarchi-
cal topology concept.
POFACETS [36] developed at the Naval Postgraduate School (NPS) is an im-
plementation of the physical optics approximation for predicting the radar cross 
section (RCS) of complex objects. It represents the constituent parts by triangular 
facets. POFACETS can calculate mono or bi static RCS of the object.
1st Layer
Population size of 15 and intermediate recombination
computational grid of 96 × 12 × 16 cells used by FLO22 solver
2nd Layer
Population size of 40 and intermediate recombination
computational grid of 82 × 12 × 16 cells used by FLO22 solver
3rd Layer
Population size of 60 and intermediate recombination
computational grid of 68 × 12 × 16 cells used by FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 1100 func-
tion evaluations and took 150 CPU hours on two single 1.8 GHz. The resulting 
Pareto set is shown in Fig. 8.67. Pareto Members 1, 5, 6 and 10 are compared to 
the quality of models in Table 8.22 where Pareto Member 1 made a 27 % reduction 
of mono-static RCS when compared to baseline while Pareto Member 10 reduces 
33 % of bi-static RCS. The shapes of Pareto Members 5 and 6 produce 25 % lower 
observability in both mono and bi-static radar systems. Pareto Members 5 and 6 
also produce up to 10 % better aerodynamic model quality. Pareto Members 5 and 6 
are selected for further evaluation.
Wing plan form shapes corresponding to the Pareto front are illustrated in 
Fig. 8.68 and the configuration of baseline is compared to Pareto Members 5 and 6 
in Table 8.23. The aspect ratios of Pareto Members 5 and 6 are increased about 20 
and 7 % increment at breakpoint 1 taper ratio while 23 % reduction at breakpoint 2 
taper ratio. It is also observed that there were similar sweep angles at inboard and 
outboard when compared to baseline.
Table 8.21   Wing plan form design variables
Variables
S1 ( ft2)
S2 ( ft2)
S3 ( ft2)
λR-B1
λB1-B2
λB2-T
ΛR-B1
ΛB1-B2
ΛB2-T
Lower 
bounds
66.88
54.07
58.87
0.6
80
(%lR-B1)
0.002
45°
45°
45°
Upper 
bounds
81.74
66.09
71.95
0.9
100
(%lR-B1)
0.1
65°
65°
65°

187
The airfoil sections are compared on Table 8.24 and Fig. 8.69 where it can be 
seen that air foil sections have less max-thickness compared to baseline design. The 
thickness ratio at root and break point1 is reduced by 3 % when compared to the 
baseline design while the camber at all sections is increased.
The span wise Cp distribution between compromised solutions and baseline de-
sign at standard design conditions as illustrated in Figs. 8.70.
Table 8.22   Comparison of objectives obtained by the baseline design and Pareto optimal solu-
tions (Pareto Members 1, 5, 6 and 10)
Description
Baseline
Pareto M1
Pareto M5
Pareto M6
Pareto M10
RCSMono
36.390
26.69
( − 27 %)
27.37
( − 25 %)
27.81
( − 24 %)
29.78
( − 18 %)
RCSBi
32.702
24.74
( − 24 %)
24.18
( − 26 %)
23.97
( − 27 %)
21.84
( − 33 %)
AQ
0.430
0.390
( − 9.3 %)
0.389
( − 9.5 %)
0.386
( − 10.2 %)
0.375
( − 12.8 %)
AQ represents aerodynamic quality (lower is better)
Fig. 8.67   Pareto optimal fronts for UCAV wing airfoil sections/plan form
 
8.8  Aero-Electromagnetic Optimization of a UAS

8  Multi-Objective Optimization Model Test Case Problems
188
Figures 8.71 and 8.72 show the comparison of bi-static RCS between Pareto 
Member 5, 6 and baseline in linear plot. The RCS of baseline peak at 27°, 147°, 
207° and 333° where the baseline produces higher RCS than Pareto Member 5 and 
6 marked with circles. Figure 8.73 show the comparison between Pareto Mem-
bers 5, 6, the non-dominated solution (Pareto Member 1) from mono-static test 
and baseline design. Pareto Members 5 and 6 produce similar value as mono-static 
compromised solution (Pareto Member 1) that is lower by 25 % when compared 
to baseline. Top, side and three-dimensional views for optimal wing geometries 
(Pareto member 5) are illustrated in Fig. 8.74. From a designer point of view, these 
Pareto Members can be applied to stealthy air battle or and reconnaissance of 
UCAVs.
Fig. 8.68   Optimal wing plan form shapes
 
Table 8.23   Comparison of wing configurations
Models
AR
B
λR-B1
λB1-B2
λB2-T
ΛR-B1
ΛB1-B2
ΛB2-T
Baseline
1.66
18.22
0.68
0.68
0.02
55°
55°
55°
ParetoM5
2.0
19.86
0.73
0.520
0.070
55.56°
54.75°
53.71°
ParetoM6
2.0
19.89
0.73
0.520
0.069
55.47°
54.78°
53.73°

189
Table 8.24   Comparison of airfoil sections configurations
Description
ThickRoot
CamberRoot
ThickBP1
CamberBP1
ThickBP2
CamberBP2
Thick Tip
CamberTip
Baseline
design
15 %
@50 %c
0.0
15 %
@50 %c
0.0
8 %
@45 %c
0.0
8 %
@45 %c
0.0
Pareto M5
12.30 %
@47 %c
0.04 %
@17.3 %c
12.05 %
@47.0 %c
0.07 %
@4.9 %c
6.31 %
@45.3 %c
0.02 %
@77.6 %c
6.25 %
@44.2 %c
− 0.02 %
@56.1 %c
Pareto M6
12.30 %
@46 %c
0.04 %
@18.9 %c
12.0 %
@47.0 %c
0.07 %
@70 %c
6.3 %
@45.3 %c
0.03 %
@77.3 %c
6.25 %
@44.2 %c
− 0.02 %
@54.0 %c
8.8  Aero-Electromagnetic Optimization of a UAS

8  Multi-Objective Optimization Model Test Case Problems
190
Fig. 8.69   Airfoils sections for the non-dominated solutions (Pareto Members 5 and 6)
 
Fig. 8.70   Pressure coefficient ( Cp) distribution along the span at standard design point
 

191
8.9  Summary of Chapter 8
This chapter introduced several applications using advanced EAs and MOEAS to 
solve multi-objective and multi-disciplinary problems in aeronautics. A detailed op-
timization mechanism coupled with flow solvers, a definition of design variables, 
fitness functions as well as analysis of optimized performance efficiency and design 
quality are implemented, results presented and discussed.
Fig. 8.71   RCS-Phi comparison between Pareto Member 5, 6 and baseline design. [solid: theta, 
dashed: phi phi = 0°, wave ( m) = 0.3]
 
Fig. 8.72   RCS-Theta (linear) comparison between Pareto Member 5, 6 and baseline design. 
[solid: theta, dashed: phi phi = 0°, wave (m) = 0.3]
 
8.9  Summary of Chapter 8

8  Multi-Objective Optimization Model Test Case Problems
192
Fig. 8.74   Top, side, front and 3D view for compromised solution (Pareto Member 5)
 
Fig. 8.73   Mono-static RCS-Theta comparison between Pareto Member 5, 6, Mono-Pareto mem-
ber 1 (Test1-mono) and baseline design
 

193
References
  1.	 Jameson A (2001) A perspective on computational algorithms for aerodynamic analysis and 
design. Prog Aerosp Sci 37(2):197–243(47)
  2.	 Kim HJ, Rho OH (1997) Dual-point design of transonic airfoils using the hybrid inverse 
optimization method. J Aircr 34(5):612–618
  3.	 Obayashi S (1997). Aerodynamic optimization with evolutionary algorithms. In: von Karman 
Institute for Fluid Dynamics-Lecture Series. Belgium.
  4.	 Obayashi S (1998). Multidisciplinary Design Optimization of Aircraft Wing Plan form Based 
on Evolutionary Algorithms. In: Proceedings of the 1998 IEEE International Conference on 
Systems, Man, and Cybernetics, La Jolla, California.
  5.	 Obayashi S, Takanashi S (1996) Genetic optimization of target pressure distributions for 
inverse design methods. AIAA J 34(5):881–886
  6.	 Zetina AM, Shinkyu J, Shigeru O (2013) Airfoil aerodynamic optimization for a high-altitude 
long-endurance aircraft using multi-objective genetic-algorithms. IEEE C Evol Computat: 
2314–2320
  7.	 Oyama A, Liou MS, Obayashi S (2002) Transonic axial-flow blade shape optimization using 
evolutionary algorithm and three-dimensional navier-stokes solver, 9th AIAA/ISSMO sym-
posium on multidisciplinary analysis and optimization, Georgia, Atlanta
  8.	 Abott H, Von Doenhoff AE. Theory of wing sections. Dover
  9.	 Geist A, Beguelin A, Dongarra J, Jiang W, Manchek R, Sunderam V. PVM: parallel virtual 
machine. A User’s guide and tutorial for networked parallel computing. Massachusetts Insti-
tute of Technology
10.	 Schaffer JD (1985) Multiple objective optimization with vector evaluated genetic algorithms. 
Lawrence Erlbaum Associates, Pittsburgh, pp 93–100
11.	 Srinivas N, Deb K (1994) Multi objective optimisation using non-dominated sorting in ge-
netic algorithms. Evolut Comput 2(3):221–248
12.	 Drela M (1993) A user’s guide to MSES V2.3.
13.	 Reneaux J (2004) Overview on drag reduction technologies for civil transport aircraft. EC-
COMAS 24–28 July
14.	 Wagner S, Sommerer A, Lutz A (2000) Numerical optimisation of adaptive transonic airfoils 
with variable camber. In: Proceedings 22nd ICAS Congress, number ICA2.111, Harrogate, 
United Kingdom, p 1–10
15.	 Quagliarella D, Vicini A (1999) Designing high-lift airfoils using genetic algorithms. In: 
Kaisa M, Marko M, Pekka N, Jacques P (eds) Proceedings of EUROGEN’99, University of 
Jyváskylä, Finland
16.	 Quagliarella D, Vicini A. A multiobjective approach to transonic wing design by means of 
genetic algorithms. In: NATO RTO AVT symposium on aerodynamic design and optimiza-
tion, number RTO-MP—35, Ottawa, Canada.
17.	 Chen HQ, Mantel B, Periaux J, Sefrioui M (1998) Solution of some non linear fluid dynamics 
problems by means of genetic algorithms. In: Chetverushkin B, Desideri J-A, Kuznetsov YA, 
Muzafarov KA, Periaux J, Pironneau O (eds) Experimentation, modeling and computation in 
flow, turbulence and combustion, vol 2. Computational methods in Applied Sciences. Wiley, 
Chichester
18.	 Gano S, Renaud J. Optimized unmanned aerial vehicle with wing morphing for extended 
range and endurance. 9th AIAA/ISSMO Symposium and Exhibit on multidisciplinary analy-
sis and optimization, Atlanta GA
19.	 Vickers M, Robert M (December 2001) Future warfare 20XX Wargame series: lessons 
learned report’, Center for Strategic and Budgetary Assessments (CSBA)
20.	 Warner CG (1999) Implementing Joint Vision 2010: A revolution in military affairs for stra-
tegic air campaigns. Air University Press, Maxwell Air Force Base
References

8  Multi-Objective Optimization Model Test Case Problems
194
21.	 Geer H, Bolkcom C. Unmanned aerial vehicles: background and Issues for Congress. CRC 
report for congress, Congressional Research Service, Library of Congress, Washington DC, 
USA.
22.	 Air-Attack. X-47 Pegasus Unmanned Combat Aerial Vehicle-Naval Version (UCAV-N), 
http://www.air-attack.com/page/28/X-47-Pegasus-UCAV-N.html
23.	 Directory of U.S. Military Rockets and Missiles: Northrop Grumman X-47 Pegasus http://
www.designation-systems.net/dusrm/app4/x-47.htm
24.	 Samli U, Cotuk N (2003) Shaping considerations in the RCS reduction. 81504 Pendik Istan-
bul Turkey, AFCEA
25.	 Stimon G Introduction to airborne radar. SciTech Publishing, Inc.
26.	 UCAVs Chapter 16 of 19 (1998) http://www.vectorsite.net/twuav_16.html
27.	 Kok J, Gonzalez LF (2013) N.A Kelson FPGA implementation of an evolutionary algorithm 
for autonomous unmanned aerial vehicle on-board path planning. IEEE Trans Evol Comput 
17(2):272–281
28.	 Gonzalez F, Narayan P, Castro MPG, Zeller L (2011) Development of an autonomous un-
manned aerial system to collect time-stamped samples from the atmosphere and localize 
potential pathogen sources. J Field Robot 28(6):961–976
29.	 Lee D, Gonzalez LF, Periaux J, UAS Mission Path Planning System, (MPPS) using hybrid-
game coupled to multi-objective optimizer. J Dyn Sys Meas and Control 132(4)
30.	 Bertola A, Gonzalez LF (February 2013) Adaptive dynamic path re-planning RRT algorithms 
with game theory for UAVs. In 15th Australian International Aerospace Congress (AIAC15), 
25-28, Melbourne Converntion Centre, Melbourne, VIC
31.	 Florent C, Gonzalez LF, Motta N (February 2013) Coordination of UAV path planning in 2D 
and 3D in environmental/bio sensing applications. In 15th Australian International Aerospace 
Congress (AIAC15), 25–28, Melbourne Convention Centre, Melbourne, VIC
32.	 Kok J, Bruggemann T, Gonzalez LF (2013) An evolutionary computation approach to three-
dimensional path planning for unmanned aerial vehicles with tactical and kinematic con-
straints. In Proceedings of the 15th Australian International Aerospace Congress, Melbourne 
Convention Centre, Melbourne, VIC.
33.	 Rappa G, Gonzalez LF, Kok J, Quagliotti F Hybrid game evolutionary algorithm for mission 
path planning of aerial survey tasks. In Grant I (Ed.) Proceedings of the 28th International 
Congress of the Aeronautical Sciences, Optimage Ltd., Brisbane Convention & Exhibition 
Centre, Brisbane, QLD, pp. 1–13.
34.	 Northrop Grumman-Defining The Future. X-47B UCAS, http://www.is.northropgrumman.
com/systems/nucasx47b.html
35.	 Global Security: Military X-47 (A/B) Pegasus UCAV http://www.globalsecurity.org/mili-
tary/systems/aircraft/x-47-specs.htm
36.	 Chatzigeorgiadis F, Jenn DC (2004) A MATLAB physical-optics RCS prediction code. IEEE 
Antennas Propag Mag 46(4):136–139

195
Chapter 9
Robust Multi-Objective and Multi-Disciplinary 
Model Optimization Test Cases
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_9
9.1  Overview
All previous chapters considered solutions of design optimisation ‘at fixed design’ 
conditions. However as discussed in Chap. 4, there are many situations in engineer-
ing where a design does not operate at ‘fixed design’ points due to uncertainties in 
values of manufacturing or operational parameters. In this chapter we illustrate the 
use of advanced EAs for five (5) robust design optimisation problems taking into 
account uncertainties.
9.2  Robust Active Flow Control Design Optimization
Active flow control is desirable to reduce drag at cruise tran-sonic conditions. In 
the following test cases the natural laminar flow RAE 5243 airfoil is selected as a 
baseline design. The airfoil has a maximum thickness of 0.14 at 41 % of the chord 
from the leading edge and a maximum camber of 0.0186 at 54.0 % of the chord. 
The baseline design is tested at flow conditions M∞ = 0.68, Cl = 0.82, Re = 19.0 × 106 
with a Boundary Layer Transition (BLT) at 45 % of the chord from the leading edge. 
Figure 9.1 shows the pressure coefficient ( Cp) contours. It can be seen that there is a 
strong normal shock on the suction side of the baseline design at 45 % of the chord 
BLT conditions.
The shock occurs at 60.0 % of chord for the BLT position at 45 % of the chord. 
This baseline design will be compared to two (2) SCB design optimisations; the first 
test case considers minimisation (Sect. 9.2.2) of total drag ( CdTotal) at flow condi-
tions M∞ = 0.68, Cl = 0.82, Re = 19.0 × 106 with Boundary Layer Transition (BLT) 
at 45 % of the chord. The second test case (Sect. 9.2.3) considers finding a robust 
Shock Control Bump (SCB) at flow conditions M∞ = 0.68 and Re = 19.0 × 106. Two 
uncertainty parameters, C l and three Boundary Layer Transi-tion (BLT) positions 
are considered i.e., Cl = [0.7, 0.82], BLT = [25 %c, 37.5 %c, 50 %c].

196
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
9.2.1  SCB Shape Design Optimisation at 45 % of the chord 
Boundary Layer Transition
Problem Definition  This test case considers a single objective SCB design opti-
misation on the upper surface of the RAE 5243 air foil to minimise the total drag 
at flow conditions M∞ = 0.68, Cl = 0.82, Re = 19.0 × 106 with BLT at 45 %c from the 
leading edge. This optimisation uses Algorithm 3 in Sect. 6.5.4 Chap. 6. The fitness 
function is shown in (9.1).
(
)
min(
)
min(
).
Total
Viscous
Wave
fitness f
Cd
Cd
Cd
=
=
+

 
                 (9.1)
Design Variables  The design variable bounds for the SCB geometry are shown 
on Table 9.1. The centre of the SCB (50 % of SCB length) is located at the shock 
Fig. 9.1   Pressure coefficient ( Cp) contour obtained by RAE 5243 airfoil
  
Design variables
Lower bound
Upper bound
SCBL
0
30
SCBH
0
5
SCBP
0
100
Peak position is in % of SCB length ( SCBL)
Table 9.1   Shock Control 
Bump (SCB) design vari-
ables and bounds for SCB 
geometry
 

197
9.2  Robust Active Flow Control Design Optimization
where the flow speed transits from supersonic to subsonic (60 % of chord). The 
SCB spans from approximately 45 % of the chord to 75 % of the chord if SCB 
length is assigned as 30 % of the chord.
The maximum length of SCB is limited to 30 %c since SCB will not be located 
over flap and aileron control surfaces which are located from 75 % of the chord to 
trailing edge (100 % of the chord).
Implementation  The optimization was computed using HAPMOEA optimizer 
coupled to MSES [1] flow analyzer at the following details on multi-resolution/
population hierarchical populations.
1st Layer
Population size of 15 and intermediate recombination
with a Computational grid of 36 × 16 cells
2nd Layer
Population size of 40 and intermediate recombination
with a Computational grid of 24 × 16 cells
3rd Layer
Population size of 60 and intermediate recombination
with a Computational grid of 36 × 16 cells
These grid conditions produce less than 5 % accuracy error compared to precise model at the 1st 
layer (Node 0)
Numerical Results  As illustrated in Fig. 9.2, the algorithm was allowed to run 24 h 
and for 6135 function evaluations using a single 4 × 2.8 GHz processor. Conver-
gence occurred after 1826 function evaluations which is equivalent to the CPU time 
of seven and half (7.5) hours.
Fig. 9.2   Convergence history for SCB design at 45 % of the chord BLT
  

198
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Table 9.2 compares the aerodynamic characteristics obtained by the baseline de-
sign (RAE 5243) and the baseline design with upper SCB. It can be seen that apply-
ing SCB on the upper surface of RAE 5243 aerofoil reduces the wave drag by 95 % 
which leads to 40 % total drag reduction. This optimal SCB improves L/D by 65 %.
The optimal shape of SCB is shown in Table  9.3. Figure  9.3 compares the 
geometry of the baseline design and baseline with optimal SCB. The baseline (RAE 
5243) design with optimal SCB has a maximum thickness of 0.14 ( t/cmax = 0.14) at 
41 %c from the leading edge while a maximum camber is 0.0215 at 63.1 %c. Adding 
the optimal SCB increases the maximum camber by 0.003, and the camber position 
is moved towards the trailing edge by 9 %c while keeping the same maximum thick-
ness as the baseline design.
Figure 9.4 shows the Cp contours obtained by the baseline design with optimal 
SCB. It can be seen that the strong shock on the baseline design shown in Fig. 9.1 
is now 95 % weaker by adding the SCB with optimal position and shape (Fig. 9.4).
Figures 9.5a and b compare total drag ( CdTotal) and wave drag ( CdWave) distribu-
tions obtained by the baseline design and one with the optimal SCB along the Mach 
range i.e. M∞ ∈ [0.5:0.75] with ClFixed = 0.82, Re = 19.0 × 106 with a BLT at 45 % of 
the chord. The baseline design with SCB starts to produce lower total drag when 
Mach number is higher than 0.67. By adding the optimal SCB, the baseline design 
reduces its total drag by 40 % and its wave drag by 95 % at the standard flight con-
dition marked with the dashed line shown in Fig. 9.5. The critical Mach number 
( MC = 0.64) for baseline design is extended to 0.66 due to the optimal SCB.
Figures 9.6a and b compare total drag distributions obtained by the baseline de-
sign and one with the optimal SCB for a Cl range i.e., Cl ∈ [0.1:1.1] with M∞ = 0.68, 
Fig. 9.3   Baseline design with the optimal SCB at 45 %c BLT
   
Aerofoil
CdTotal
CdWave
L/D
Baseline (RAE 5243)
0.01003
0.0032
81.72
with optimal SCB
0.00609 
(− 40 %)
0.00014 
(− 95 %)
134.56 
(+ 65 %)
Cl value is fixed to 0.82
Table 9.2   Aerodynamic 
characteristics obtained by 
the single-objective design 
approach
  
Variables
SCBL (%c)
SCBH (%c)
SCBP (%SCBL)
SCB
29.22
1.04
67.7
Peak position ( SCBP) is in % of SCB length. The SCB starts 
from x and y coordinates (0.4516, 0.0858) to (0.7440, 0.0475)
Table 9.3   Optimal SCB 
design parameters obtained 
by the single-objective design 
approach
 

199
9.2  Robust Active Flow Control Design Optimization
Re = 19.0 × 106 with a BLT at 45 %c. The baseline design with SCB starts to produce 
lower total drag when its Cl number is higher than 0.65. The critical Cl number 
( Clc = 0.25) for the baseline design is extended to 0.39 by applying optimal SCB on 
the suction side of the baseline design.
Even though good results were obtained by using a single-objective design 
approach at the standard flow conditions, the optimal SCB produces CdTotal fluctua-
tion at a range of Cl from 0.6 to 0.82 as shown in Figs. 9.6a and b. This optimal 
solution is an over-optimised solution which fails before reaching the standard 
flow/flight conditions. Such a fluctuation should be treated as uncertainty in the 
design parameters and the design engineer should take this into account during the 
optimisation. Therefore, it is necessary to use an uncertainty design technique to 
produce a set of solutions which have both low mean and sensitivity (no fluctuation 
and stable) CdTotal under the considered variable Cl numbers and BLT positions.
9.2.2  Robust SCB Shape Design Optimization with Uncertainty 
Boundary Layer Transitions
Problem Definition  This test case considers a robust multi-objective SCB design 
optimisation on the upper surface of the RAE 5243 airfoil to minimize mean and 
standard deviation of total drag (
,
)
Total
Total
Cd
Cd
σ
 at flow conditions M∞ = 0.68 and 
Re = 19.0 × 106. Two Cl and three Boundary Layer Transition (BLT) positions are 
Fig. 9.4   Pressure coefficient ( Cp) contour RAE 5243 with the optimal SCB at 45 %c BLT
  

200
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.5   Total drag coefficient ( CdTotal) a & wave drag coefficient ( CdWave) b vs. Mach at 45 %c 
BLT
  

201
9.2  Robust Active Flow Control Design Optimization
  
Fig. 9.6   Total drag coefficient ( CdTotal) a and wave drag coefficient ( CdWave) b vs. Cl at 45 % of 
the chord BLT

202
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
considered i.e., Cl  = [0.7, 0.82], BLT = [25 %c, 37.5 %c, 50 %c] which can be statis-
tically written as BLT  = 37.5 %c, σBLT  = 12.5 %c for uncertainty design parameters. 
The candidate SCB model will be evaluated at six flight conditions. The fitness 
functions including mean and standard deviation are shown in (9.2) and (9.3) 
respectively.

(9.2)

(9.3)
where n and m represent the number of boundary layer transition positions and Cl 
conditions respectively.
This optimisation uses Algorithm 6 in Sect. 6.5.7 of Chap. 6.
Design Variables  The design variable bounds for the SCB geometry were illus-
trated in Table 9.1. The centre of the SCB (50 % of SCBL) is located at the sonic 
point where the flow speed transits from supersonic to subsonic (58 % of the chord) 
at 37.5 %c BLT. The SCB is located approximately from 43 to 73 % of the chord if 
SCB length is assigned as 30 % of the chord.
Implementation  The optimisation was computed using a HAPMOEA optimizer 
coupled to an MSES flow analyser at the following details on multi-resolution/
population hierarchical populations.
1st Layer
Population size of 15 and intermediate recombination
with a computational grid of 36 × 16 cells
2nd Layer
Population size of 40 and intermediate recombination
with a computational grid of 24 × 16 cells
3rd Layer
Population size of 60 and intermediate recombination
with a computational grid of 36 × 16 cells
These grid conditions produce less than 5 % accuracy error compared to the precise model at the 
1st layer (Node 0)
Numerical Results  The algorithm was allowed to run 50 h and 2450 function evalu-
ations using a single 4 × 2.8 GHz processor. Pareto optimal solutions are shown in 
Fig. 9.7 and their sensitivity and per formance are compared to the baseline design 
(Sect. 9.2.1) and the optimal design from a single-objective approach (Sect. 9.2.2). 
It can be seen that all Pareto members dominate the baseline for the second fitness 
function (standard deviation of CdTotal  : 
Total
Cd
σ
) while Pareto Members 1–9 domi-
nate the baseline design in terms of mean and standard deviation of CdTotal. Pareto 
Members 1–3 dominate the optimal design from Sect. 102.2. Pareto Members 1 
and 4 are selected to compare aerodynamic performance to the baseline design and 
optimal solution from Sect. 9.2.2.
(
)
1
1
1
1
min
ij
n
m
Total
Total
i
j
f
Cd
Cd
n
m
=
=
=
=
×
∑∑
(
)
2
2
1
1
1
min(
)
1
ij
n
m
Total
Total
Total
i
j
f
Cd
Cd
Cd
n
m
=
=
=
=
−
×
−∑∑
σ

203
9.2  Robust Active Flow Control Design Optimization
Table  9.4 compares the aerodynamic characteristics obtained by the baseline 
design (RAE 5243 airfoil) and the baseline design with SCB obtained by Pareto 
members 1 and 4. It can be seen that applying the optimal SCB obtained by Pareto 
member 1 on the suction side of RAE 5243 airfoil reduces the mean total drag by 
24 %. This optimal SCB improves L/D by 32.0 %.
The mean and standard deviations obtained by the baseline design, single-ob-
jective and robust Pareto members can be compared using Cumulative Distribution 
Function (CDF) and Probability Density Function (PDF). Figure 9.8a shows the 
CDF obtained by the baseline design, the optimal from single-objective (marked as 
SO optimal) and the robust compromise Pareto solutions (marked as Robust CS). 
It can be seen that all the solutions obtained by single-objective and robust design 
Table 9.4   Comparison of fitness values obtained by the robust design approach
Aerofoil
Total
Cd
Total
Cd
σ
L D
Baseline
0.00935
0.00245
87.70
Single-Objective
0.00780 (− 17 %)
0.00219 (− 11 %)
105.13 (+ 20 %)
with PM1-SCB
0.00709 (− 24 %)
0.00185 (− 24 %)
115.66 (+ 32 %)
with PM2-SCB
0.00728 (− 22 %)
0.00158 (− 35 %)
112.64 (+ 28 %)
with PM3-SCB
0.00764 (− 18 %)
0.00145 (− 41 %)
107.33 (+ 22 %)
with PM4-SCB
0.00794 (− 15 %)
0.00126 (− 48 %)
103.27 (+ 18 %)
PMi represents Pareto optimal member obtained by robust design optimisation
Fig. 9.7   Pareto optimal front for robust SCB design at 45 % of the chord BLT (Remark: SO and 
CS represent the single-objective approach and compromised solutions respectively)
 

204
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
methods have lower mean total drag when compared to the baseline design. Pareto 
Member 1 reduces the mean total drag by 24 % when compared to the baseline 
while the optimal obtained by the single-objective approach reduces total drag by 
17 %. The standard deviation (sensitivity) can be represented by evaluating gradi-
ent of the lines to the CDF value of 0.5 or 1 (steep gradient means low sensitivity). 
Herein PDF is plotted in Fig. 9.8b to have a clear sensitivity comparison between 
the baseline design, single-objective, robust design method. It can be seen that all 
the solutions obtained by the single-objective and robust design methods have lower 
Fig. 9.8   a Mean total drag comparison using CDF. b Total drag sensitivity comparison using PDF
   

205
9.2  Robust Active Flow Control Design Optimization
sensitivity (narrow bell curve). Pareto Member 4 obtained by the robust design 
method has 48 % total drag sensitivity reduction when compared to the baseline 
design while the optimal obtained by single-objective approach reduces total drag 
by only 11 %. In other words, the robust design method has capabilities to produce 
a set of solutions which have better performance and sensitivity when compared to 
the single-objective optimization method.
For the detailed sensitivity analysis, the baseline design, the optimal solution 
obtained in Section V.A and Pareto members 1–3 are selected and their 
Total
Cd
 and 
Total
Cd
σ
 values in (9.2) and (9.3) respectively are recomputed at the variability 
of BLT  = 37.49 %c, σBLT  = 0.0729 %c; [25.0 %c− 50.0 %c] and the variability of 
Cl  = 0.761, σCl  = 0.0385, [0.7:0.82]. In total, five hundred non-uniformly distributed 
flight conditions (50 BLT positions × 10 Cl values) obtained by Latin Hypercube 
Sampling19 are considered.
Table  9.5 compares the aerodynamic characteristics obtained by the baseline 
design and the optimal solution obtained in Sect. 9.2.2 and Pareto Members 1–3. 
It can be seen that both optimal solutions produce lower total mean drag and drag 
sensitivity respect to five hundred uncertain design conditions (boundary layer tran-
sition location and lift coefficient). Applying the optimal SCB obtained by Pareto 
member 1 produces 26 % lower total drag while lowering the drag sensitivity by 
22 % when compared to the baseline design. The sensitivity obtained by the base-
line design and all solutions is more than two and half times lower due to increment 
of number of uncertainty design conditions from six to five hundred. In addition, 
Fig. 9.9 compares mean and standard deviation using CDF and PDF.
It can be noticed that 
Total
Cd
 and 
Total
Cd
σ
 behaviours obtained by the CDF and 
PDF (shown in Fig. 9.8) considering six uncertain flight conditions are similar to 
the 
Total
Cd
 and 
Total
Cd
σ
 obtained by the CDF and PDF (shown in Figs. 9.9a and b) 
considering five hundred flight conditions between the baseline design and Pareto 
Members 1–3. In other words, the simplified robust method with six uncertain flight 
conditions still produces both lower total mean drag and drag sensitivity with re-
spect to the variability of Boundary Layer Transition positions and lift coefficient.
The design parameters of the SCB obtained by Pareto Members 1–4 are shown 
in Table  9.6. It can be seen that the length and height of SCB are reduced by 
approximately 5 and 0.4 %c respectively when compared to the optimal solution 
Table 9.5   Comparison of mean and standard deviation of drag obtained by the baseline design, 
single-objective optimal solution and Pareto members 1 to 3 under considering five hundred uncer-
tainty flight conditions
Aerofoil
Total
Cd
Total
Cd
σ
L D
Baseline
0. 00919
0.000893
83.31
Optimal solution (Section V.A)
0.00705 (− 23 %)
0.000756 (− 15 %)
109.59 (+ 31 %)
Pareto Member 1
0.00678 ( − 26 %)
0.000696 ( − 22 %)
113.17 (+ 36 %)
Pareto Member 2
0.00720 (− 22 %)
0.000591 (− 34 %)
106.38 (+ 28 %)
Pareto Member 3
0.00757 (− 18 %)
0.000498 (− 44 %)
100.93 (+ 21 %)

206
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
from Sect. 9.2.2 (Table 9.3). Figure 9.10 compares the geometry of the baseline 
design and baseline with optimal SCBs. The baseline (RAE 5243) design with 
SCB obtained by Pareto Member 2 (highest SCB) has a maximum thickness 0.14 
( t/cmax = 0.14) at 41 %c from the leading edge while a maximum camber 0.0212 
at 63.0 %c. Adding a SCB obtained by Pareto Member 2 increases the maximum 
camber by 0.0026 and its position is moved towards the trailing edge by 9 %c while 
keeping the same maximum thickness as the baseline design.
Fig. 9.9   a Total mean drag comparison using CDF with five hundred uncertainty flight condi-
tions. b Standard deviation (Sensitivity) of total drag comparison using PDF with five hundred 
uncertainty flight conditions
  

207
9.2  Robust Active Flow Control Design Optimization
Figure 9.11 shows the pressure contour obtained by Pareto Member 1 at 45 % 
of the chord Boundary Layer Transition. It can be seen that the strong shock on the 
baseline design shown in Fig. 9.1 is 77 % weaker by adding SCB on the suction 
side. The SCB for Pareto Member 1 reduces the total drag by 35 % and improves 
the lift to drag ratio by 53 %.
Fig. 9.10   Baseline design with the optimal SCB at 45 %c BLT
  
Fig. 9.11   Pressure coefficient ( Cp) contours of the RAE 5243 airfoil with the PM1-SCB at 45 % 
of the chord BLT
   
Table 9.6   Pareto optimal SCB design parameters
Variables
SCBL (%c)
SCBH (%c)
SCBP (%SCBL)
PM1-SCB
25.93
0.76
69.3
PM2-SCB
27.12
0.85
76.2
PM3-SCB
26.45
0.75
81.3
PM4-SCB
25.56
0.69
84.9
Peak position is in % of SCB length. The PM1-SCB starts from x and y coordinates (0.4490, 
0.0859) to (0.7083, 0.0540)

208
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Figure 9.12a compares the total drag ( CdTotal) distributions obtained by the base-
line design, optimal solution from Sect. 5.1 and Pareto Members 1 and 4. The flight 
conditions are; M∞ ∈ [0.6:0.72] with ClFixed = 0.82, Re = 19.0 × 106 and the boundary 
layer transition at 45 % of the chord. It can be seen that all solutions obtained by 
single-objective and robust design methods have lower total drag when Mach num-
ber is higher than 0.67. The optimal solution from Sect. 9.2.2 produces lower total 
drag (− 40 %) at the Mach 0.68 and Pareto Members 1 and 4 reduce the total drag 
by 35 and 27 % respectively. Pareto Member 1 has lower drag compared to other 
solutions when Mach is lower than 0.6775 while Pareto Member 4 produces lower 
drag when Mach is higher than 0.685.
Figure 9.12b compares total drag ( CdTotal) distributions at the flow conditions; 
Cl ∈ [0.1:1.1] with MFixed = 0.68, Re = 19.0 × 106 and the boundary layer transition at 
45 % of the chord. Even though the optimal solution obtained by single-objective 
method produces lower total drag, Pareto Members 1–4 have a stable total drag 
distribution at Cl range [0.6:0.82] without fluctuation due to the stable wave drag. 
Figure 9.12c compares wave drag ( CdWave) distributions obtained by the baseline 
design, single-objective and robust design methods. It can be seen that Pareto Mem-
bers 1–4 produce stable wave drag when compared to the baseline design and the 
single-objective approach.
One thing should be noticed is that the critical lift coefficient numbers ( ClC) for 
the baseline design, optimal from single-objective and Pareto members obtained by 
robust design method are 0.3, 0.4 and 0.5 respectively.
Figure 9.13a compares the total drag distributions at a range of Mach i.e. M∞ ∈ 
[0.5:0.75] with ClFixed = 0.82, Re = 19.0 × 106 and the boundary layer transition at 
25 % of the chord. The optimal solution from Sect. 5.1, and Pareto members 1–4 
produce lower total drag compared to the baseline design when the Mach number 
is higher than 0.665. The optimal solution (Sect. 9.2.2), Pareto Members 1 and 4 
reduce the total drag by 25, 24 and 23 % respectively when compared to the baseline 
design. Pareto Member 1 has lower drag when Mach is lower than 0.6775 while 
Pareto Member 4 has lower drag when Mach is lower than 0.685.
Figure 9.13b compares total drag distributions at a range of Cl i.e., Cl ∈ [0.1:1.1] 
with MFixed = 0.68, Re = 19.0 × 106 and the boundary layer transition at 25 % of the 
chord. The optimal solution from Sect. 5.1 fluctuates at the range of Cl = [0.6: 0.82] 
while Pareto members 1 and 4 have a stable Cl distribution. Figure 9.13c compares 
wave drag ( CdWave) distributions obtained by the baseline design, single-objective 
and robust design methods. It can be clearly seen that Pareto Members 1–4 pro-
duce stable wave drag when compared to the baseline design and single-objective 
approach. It should be noticed that the critical lift coefficient numbers ( ClC) for the 
baseline design, optimal from single-objective and Pareto Members obtained by 
robust design method are 0.3, 0.4 and 0.5 respectively.
The baseline design with the optimal SCB obtained by the single-objective and 
robust design methods are also tested at six (6) normal flight conditions shown in 
Table 9.7.
The histogram shown in Fig. 9.14a compares the total drag obtained by the 
baseline design, the single-objective (Sect.  9.2.2) and the robust design ap-
proaches. It can be seen that the baseline design with the optimal SCB—robust 

209
9.2  Robust Active Flow Control Design Optimization
   
Fig. 9.12   a Total drag coefficient ( CdTotal) vs. Mach at 45 % of the chord BLT. b Total drag coeffi-
cient ( CdTotal) vs. C l at 45 %c BLT. c Wave drag coefficient CdWave vs. C l at 45 % of the chord BLT

210
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.13   a Total drag coefficient ( CdTotal) vs. Mach at 25 %c BLT. b Total drag coefficient ( CdTotal) 
vs. Cl at 25 % of the chord BLT. c Wave drag coefficient ( CdWave) vs. C l at 25 % of the chord BLT
  

211
Table 9.7   Six flight conditions
Conditions
M∞
Re
C l
XTrans—Upper
XTrans—Lower
Flight condition 1
0.69
11.7 × 106
0.54
0.51
0.54
Flight condition 2
0.69
11.7 × 106
0.69
0.51
0.54
Flight condition 3
0.70
11.7 × 106
0.38
0.51
0.54
Flight condition 4
0.70
11.7 × 106
0.50
0.51
0.54
Flight condition 5
0.73
11.7 × 106
0.22
0.51
0.54
Flight condition 6
0.73
11.7 × 106
0.34
0.51
0.54
9.3  Robust Multi-Objective Generic Aircraft Wing Optimization
design produces lower total drag when compared to the baseline design and the 
optimal SCB obtained by the single-objective method. The optimal SCB—Pa-
reto Member 1 reduces the total mean drag by 36 % while lowering the total drag 
sensitivity by 77 %. The optimal SCB obtained in Sect. 9.2.2 reduces the total 
mean drag and sensitivity by 9.5 and 48 % respectively even though it produces 
higher drag at the flight conditions 1, 3 and 5. Figure 9.14b compares the lift to 
drag ratio obtained by the baseline design, the optimal SCB from Sect. 9.2.2 and 
Pareto Member 1. It can be seen that Pareto Member 1 has the biggest lift to drag 
improvement at the flight condition 4.
One example (Cond 4) is shown in Fig. 9.15 where the pressure contours obtained 
by the baseline design and Pareto Member 1 are illustrated. Even though the SCB 
obtained by Pareto member 1 is optimized at the critical flight condition, the opti-
mal SCB—Pareto Member 1 reduces the wave drag ( CdWave = 0.0025) obtained by 
the baseline design by 99.5 % ( CdWave = 0.00001) and reduces the total drag by 40 % 
which leads to 65 % improvement of L/D when compared to the baseline design.
To summarize the design test cases (Sects. 9.2.2 and 9.2.3), the design engineer 
can choose one of the solutions (Pareto Members 1–4) obtained by robust multi-
objective design optimization due to two main reasons: the first reason is that 
even though the optimal solution from Sect. 9.2.2 produces lower total drag at the 
standard flight conditions (45 % of the chord Boundary Layer Transition), Pareto 
Members 1–4 have lower sensitivity (stable means no fluctuation) at the vari-
ability of Cl and boundary layer transition positions [25–50 % of the chord]. The 
second reason is that Pareto members 1–4 have a smaller SCB than the optimal 
solution obtained by the single-objective method. In other words, the manufacturer 
can reduce significantly the cost of the material and lower the modification on the 
manufacturing system.
9.3  Robust Multi-Objective Generic Aircraft Wing 
Optimization
Problem Definition  This test case considers the design and optimisation of wing 
airfoil sections of a generic aircraft using robust (uncertainty) design method 
(Sect.  6.5.7 Chap.  6). Instead of designing a wing at a single design point, an 

212
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
uncertainty method uses statistic formulations and designs aerodynamically stable 
models at off-design conditions. In this problem, five off-set Mach numbers are 
considered;
(
)
@
0.82
0.01581
or
[0.8, 0.81,
0.82,0.83,0.84]
0.691,
8.4
a
6.
nd
S
i
S
L
Min
Ms
M
and
M
M
M
L
C
D
σ
∞
∞
∞
=
=
∈
=
=
≥
Fig. 9.14   a Drag reduction obtained by the baseline design, the single-objective solution and 
robust Pareto member 1 (Remark: Robust PM1 represents Pareto Member 1 obtained by the robust 
design optimisation. Mean and STDEV represent the mean and standard deviation of CdTotal at six 
flight conditions). b Drag reduction obtained by the baseline design, the single-objective solution 
and robust Pareto Member 1
  

213
9.3  Robust Multi-Objective Generic Aircraft Wing Optimization
The problem considers two (2) objectives where the fitness functions are minimiza-
tion of discrete averaged (9.4) and variance (9.5) of the inverse of lift on drag:
(
)
(
)
(
)
(
)
(
)
(
)
2
1
2
1
2
2
2
2
1
1
1
min
1/
1
min
1
   
1/
/
1/ (
/
)
1
i
K
i
i
S
K
i
i
i
S
M
f
L D
Penalty
K
L D
M
f
L D
M
L D
L D
Penalty
K
M
δ
∞
=
∞
=


=
=
+








=










=
−
+


−


∑
∑

(9.5)
where the penalty term in Chap. 2.7 is computed and add to the fitness functions; if 
the thickness (t/c) is higher than 20 % and less than 10.0 % of the chord, the thick-
ness ratio should be 10 % ≤ t/c ≤ 20 %. If the ratio of lift to drag at flight conditions 
is lower than 8.46, the lift to drag ratio should be L/Dmin ≥ 8.46. If the mean and the 
variance of inverse lift to drag ratio are higher than 0.1008 then 
(
)
(
)
1
0.1008
L D ≤
 
and 3.0 × 10−4 
(
)
(
)
(
)
4
1
3.0 10
L D
δ
−
≤
×
.
Design Variables  The external wing geometry is fixed as shown in Fig. 7.40 and 
Table 7.12 Sect. 7.5.1 Chap. 7. Four aerofoil sections at root, crank 1, crank 2 and 
tip are considered as the design variables. There are eighty eight (88) design vari-
ables (11 mean line and 11 thickness at each section) in total. The control points of 
mean and thickness distribution are illustrated in Figs. 7.43a–d.
Implementation  FLO22 and FRICTION solvers are software utilised and the fol-
lowing specific parameters below are considered for the HAPMOEA optimizer. The 
grid sizes of model are changed from 82 to 68 for second layer and from 68 to 48 
for third layer to make a fast search.
(9.4)
Fig. 9.15   Cp contours comparison obtained by the baseline design ( left) and Pareto Member 1 
( right) at the flight condition 4
   

214
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
1st Layer
Population size of 10 and intermediate recombination with a computational 
grid of 96 × 12 × 16 cells on the FLO22 solver
2nd Layer
Population size of 40 and intermediate recombination with a computational 
grid of 68 × 12 × 16 cells on the FLO22 solver
3rd Layer
Population size of 60 and intermediate recombination with a computational 
grid of 48 × 12 × 16 cells on the FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 1200 function 
evaluations and took 150 h on two 1.8 GHz processors. The Pareto optimal fronts is 
shown in Fig. 9.16 where it can be seen that the baseline and single-objective result 
from Sect. 7.5.4 are computed in terms of mean and variance of inverse lift to drag 
ratio. The Pareto fronts are zoomed in Section-A. It can be seen that Pareto (non-
dominated) solutions produce lower mean and variance of inverse lift to drag ratio. 
Pareto members provide improvement of both aerodynamic efficiency and stability 
at variability of the flight conditions.
Five Pareto Members 2, 3, 4 and 5 are selected for further evaluation and Pareto 
member 4 and 5 are compared to the baseline and single-objective optimality from 
Sect. 7.5.4 Chap. 7. Pareto Members 4 and 5 produce 27 % improvement in mean
inverse lift to drag ratio 
(
)
(
)
1
 
L D
 with lower sensitivity 
(
)
(
)
(
)
1 L D
δ
. Table 9.8 
compares the drag coefficient at the standard design point. Pareto members 4 and 5 
produce 28 % lower drag when compared to the baseline design.
 
Section-A 
Fig. 9.16   Pareto optimal fronts for a generic aircraft wing with airfoil sections
   

215
Table 9.8   Comparison of the aerodynamic performance obtained by the baseline design, single-
objective solution and compromised solutions (Pareto members 4 and 5)
Description
Baseline
SO optimal
Pareto M4
Pareto M5
(
)
1 L D
0.1008
0.0824 (− 18 %)
0.0734 (− 27 %)
0.0735 (− 27 %)
(
)
(
)
1 L D
δ
3.0 × 10−4
2.4 × 10−4
2.078 × 10−4
2.075 × 10−4
@ MS
D
C
0.0695
0.0565 (− 18.7 %)
0.050 (− 28 %)
0.050 (− 28 %)
SO represents Single-Objective
9.3  Robust Multi-Objective Generic Aircraft Wing Optimization
The mean and standard deviations at a range of Mach ( M∞ = [0.8:0.01:0.84] or 
M ∞= 0 82
.
 and σ M∞ = 0.01581) obtained by the baseline design, single-objective 
and robust Pareto members can be compared using Cumulative Distribution Func-
tion (CDF) and Probability Density Function (PDF). Figure 9.17a shows the CDF 
obtained by the baseline design, the optimal from single-objective (marked as SO 
optimal) and the robust compromise Pareto solutions (marked as Robust CS). It can 
be seen that all solutions obtained by single-objective and robust design methods 
have lower mean inverse L/D when compared to the baseline design. Pareto Mem-
bers 4 and 5 improve the mean L/D by 27 % when compared to the baseline while 
the optimal obtained by the single-objective approach improves L/D by 18 %. The 
standard deviation (sensitivity) can be represented by evaluating the gradient of the 
line to the CDF value of 0.5 or 1 (steep gradient = low sensitivity). Herein PDF is 
plotted in Fig. 9.17b to have a clear sensitivity comparison between the baseline 
design, single-objective, robust design method. It can be seen that all solution ob-
tained by the single-objective and robust design methods have lower sensitivity 
(narrow bell curve). Pareto members 4 and 5 obtained by the robust design method 
has 17 % L/D sensitivity reduction when compared to the baseline design while the 
optimal obtained by single-objective approach reduces total drag by only 10 %. In 
other words, the robust design method has capabilities to produce a set of solutions 
which have better performance and sensitivity when compared to the single-objec-
tive optimisation method.
Figure 9.18 shows the set of airfoils non—dominated solutions or Pareto fronts. 
It can be seen that classical aerodynamic shapes have been evolved, even consider-
ing that the optimisation was started completely from random and the evolution 
algorithm had no problem specific knowledge of appropriate solution types for un-
certainty.
The airfoil sections characteristics for selected Pareto Members (4 and 5) are 
compared to the baseline design in Fig. 9.19 and Table 9.9. The airfoil sections 
of the selected Pareto Members 4 and 5 are 10 % thinner than the baseline design. 
Negative camber is observed at the crank 2 airfoil section.
Figures 9.20a, b, and c show the pressure coefficient distributions (0, 20, 40, 
60, 80 and 90 % of the span). It can be seen that the optimal wing has a pressure 
improvement at the leading edge marked with blue circles from 40 ~ 90 % of the 
span when compared to the baseline design. In the figures @ means at that design 
condition.

216
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Figures 9.21a and b compare the Mach sweeps on the drag coefficient and the 
lift to drag ratio obtained by uncertainty approach, single-objective (Sect. 7.5.4) and 
the baseline design. The two approaches including single-objective and uncertainty 
provide an improvement of the lift to drag ratio (L/D) when compared to the base-
line wing. The results obtained using the uncertainty concept demonstrate better 
aerodynamic performances at all Mach numbers with less sensitivity. Table 9.10 
compares the aerodynamic quality between Pareto members 4 and 5, single-ob-
jective solution and the baseline design. The Pareto members 4 and 5 are not only 
Fig. 9.17   a Mean inverse lift to drag ratio comparison using CDF. b Inverse lift to drag ratio (L/D) 
sensitivity comparison using PDF
   

217
stable at standard design point but also at other flight conditions when compared to 
the single optimal and baseline design. They also produce 8208 and 8196 km range 
( R) which have about 35 % range extension compared to the baseline and 12 % 
compared to the result obtained by the single-objective optimisation approach. The 
benefit of taking into account of uncertainty in the design is clearly demonstrated 
from the results.
9.3  Robust Multi-Objective Generic Aircraft Wing Optimization
Fig. 9.19   Comparison of Airfoils sections between Pareto members 4, 5 and the baseline
  
Fig. 9.18   Optimal airfoil sections
  

218
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
9.4  Robust Aero-Structural Generic Aircraft Wing 
Optimization
Aero-structural optimisation belongs to the class of MDO problems. Usually after 
the individual wing being evaluated by an aerodynamic analysis tool (FLO22 and 
FRICTION software), the sectional aerodynamic properties are converted to struc-
tural concentrated loads. In this chapter we use the PSEC code developed by one of 
the authors [2]. The aerodynamic loads are mapped to the wing structure as shown 
in Fig. 9.22a. The wing has two spars at 25 and 75 % of sectional chords while inter-
spar ribs are located at the middle (5, 15, 25, … 95 %) of each section. The wing 
skin is covered between the front and rear spars as shown in Fig. 9.22a and b.
The converted loads are checked under the structural constraints and applied to 
each structural component. The skin counteracts for the panel shear stress while 
the ribs counteract the torsion of wing due to the quarter cord lift force as shown in 
Fig. 9.23. This figure shows the spar counteracting to the bending moment.
The wing load-carrying structure (wing box) consists of the wing skin, spar and 
inter-spar ribs are considered with Aluminium Alloy 2024-T351: density ( )
ρ  is 
2,795 (Kg/m3), ultimate compressive strength (
ultimate
σ
) is 
6
2
(K
37.9
gf/
6
10
m ,
5
)
×
 
Young’s modulus (E) 
9
2
(K
7.52
gf
3 10
/m )
×
, and a safety factor 1.5. It is assumed 
the rib is a solid rectangular member. The thickness of structural components can 
be calculated as:
For the skin:
0
2
0
2
i
i
i
i
N
N
skin
skin
Bucklin
skin
skin
i
i
g
i
t
F
KE
b
W
W
t
A
=
=


=

→
=
=
⋅
⋅
⋅



∑
∑
ρ

(9.6)
where i represents the section number and b denotes the width of the structural sec-
tion. K is the panel buckling coefficient (NACA TN3781), E is the Young’s modulus 
and Ai is the section panel area.
Table 9.9   Comparison of airfoil sections configurations
Design description
Baseline design
Pareto M4
Pareto M5
Root
t c
15.4 @19
13.5 @26
13.47 @26
CamberRoot
0.3 @4.6
0.5 @1.3
0.5 @1.3
1
Crank
t c
12.5 @28
11.0 @33.2
11.0 @33.6
CamberBP1
0.7 @10.3
0.45 @74.2
0.44 @74.2
2
Crank
t c
10 @38
9.0 @39.4
8.7 @38.5
CamberBP2
1.44 @20.4
− 0.51 @15.7
− 0.51 @15.4
Tip
t c
10.8 @40.3
9.78 @39.7
9.80 @39.7
CamberTip
1.6 @21.2
0.55 @44.7
0.55 @46.2

219
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization
Fig. 9.20   a Comparison of pressure coefficient ( Cp) distributions at 0 and 20 % of span. b Com-
parison of pressure coefficient ( Cp) distributions at 40 and 60 % of span. c Comparison of pressure 
coefficient ( Cp) distributions at 80 and 90 % of span
   

220
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Baseline 
Aero-Uncertainty 
Pareto M4 and M5
Single Optimum 
Baseline 
Single Optimum 
Aero-Uncertainty 
Pareto M4 and M5
a
b
Fig. 9.21   a Comparison of total drag coefficient ( CDTotal) vs. Mach number. b Comparison of lift 
to drag ratio ( L/D) vs. Mach number
   
Table 9.10   Comparison of the aerodynamic performances
Description
Baseline
Single-objective
Pareto M4
Pareto M5
(
)
1 L D
0.0703
0.0582 (− 18 %)
0.0532 (− 24 %)
0.0533 (− 24 %)
(
)
(
)
1/
/
L D
δ
1.0 × 10−3
6.0 × 10−4
4.7 × 10−4
4.7 × 10−4

221
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization
For the rib:
4
2
0
0
and
·
· ·
(
)
i
i
i
i
N
N
i
i
rib
rib
rib
i
i
i
rib
T
W
W
t
c h
b t
=
=
=
=
=
∑
∑
τ
ρ
α

(9.7)
where i represents section number and b is width of structural section. α is a Torsion 
constants ( α = 0.333). ci and h
i4  represent airfoil sections chord length and mean 
airfoil section thickness shown in Fig. 9.24.
For the spar:
2
4
0
0
and
·
· ·
i
i
i
i
i
N
N
spar
shear buckle
spar
spar
spar
i
i
i
t
F
KE
W
W
t
c h
b
=
=


=
=
=




∑
∑ρ

(9.8)
Fig. 9.22   a Wing load carrying structure mapping. b Wing load carrying structure with skin, inter-
spar rib and spar
  

222
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.23   Loads on wing structure components (skin, ribs and spar)
  
Fig. 9.24   Computed wing box
   

223
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization
where i represents section number and b is the width of the structural section. K is 
the shear web buckling (NACA TN3781) and E the Young’s modulus.
The wing structure will be evaluated by the structure analysis code (PSEC) and 
then the weight of wing structure is calculated as:
2
2
2
2
wing
skin
rib
spar
W
W
W
W
Penalty
=
⋅
+
⋅
+
⋅
+
⋅

(9.9)
where a Penalty is applied when the section stress 
iσ  is lower than the ultimate 
compressive wing strength 
ultimate
σ
.
The structural weight of the baseline wing is computed and compared with the 
real structural weight obtained from reference [3] as shown in Table 9.11.
This structural estimation code (PSEC) [2] will be utilised in multi-disciplinary 
(aero-structures) design optimization to compute the structural weight of the can-
didate model.
Problem Definition  This test case considers the multi-disciplinary design optimisa-
tion of the wing plan form and airfoil sections shapes of a generic MM-UAS using 
the uncertainty method. The problem is a two-objective optimisation where the 
fitness functions are the maximization of aerodynamic performances and the struc-
tural quality. These two fitness functions are described in terms of discrete averaged 
aerodynamic performance and sensitivity, averaged wing weight and weight sensi-
tivity. The optimisation for this application is based on Algorithm 5 and Algorithm 
6 described in Sect. 6.5 of Chap. 6. The expression of fitness functions for the mean 
and variance are normalised using a logarithm scale as follows:
 
Aerodyanmic Quality
Performance
Performance
f
Average
Sensitivity
Penalty
=
+
+
	
(9.10)
(
)
(
)
(
)
(
)
1
2
2
1
2
2
2
1
1
 
1
ln
1/
1
     
 
1
ln
1/
/
1/ (
/
)
1
i
K
i
i
S
K
i
i
i
S
f
M
L D
K
M
Penalty
M
L D
L D
K
M
∞
=
∞
=
−
=






−
+
+




−




−




∑
∑
	
(9.11)
Table 9.11   Comparison of load carrying structural weight
Description
B737
PDCYL
PSEC
wing
W
(kg)
2,455.75
2,593.18 (+ 5.6 %)
2,687.03 (+ 9.4 %)
PDCYL [3] is empirical weight estimation methods and parts of the General Aircraft Synthesis 
Program (GASP)

224
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
 
Structural Quality
Weight
Weight
f
Average
Sensitivity
Penalty
=
+
+
	
(9.12)
(
)
2
2
2
2
1
1
1
ln
1
i
wing
K
i
wing
wing
i
S
f
W
M
W
W
K
M
∞
=
−
=
+




−




−






∑
The operating conditions are:
A penalty (cf. Chap. 2.7) as geometry and aerodynamic performance constraints, is 
computed and added to fitness functions:
•	 if the thickness ( t/c) of the aerofoil sections is higher than 20 % and less than 
10.0 %,
•	 if the ratio of lift to drag at flight conditions is lower than 8.46,
•	 if the aerodynamic quality ( AQ) is higher than 0.560,
•	 if the structural quality ( SQ) is lower than 3.8118 that is calculated by 2.644 of 
mean (
2.644)
wing
W
≤
 and 0.0374 of variance value 
(
)
(
0.0374)
wing
W
δ
≤
.
Design Variables  Four airfoil sections at root, crank 1, crank 2 and tip are consid-
ered and there are eighty eight (88) design variables (eleven (11) mean line control 
points, eleven (11) thickness control points at each section) for airfoil section design. 
The control points of mean and thickness distribution can be found in Sect. 7.5.1 
of Chap. 7. For the wing geometry design, five design variables including in and 
outboard sweep angles 
1
1
2
2
(
,
,
)
R C
C
C
C
T
−
−
−
Λ
Λ
Λ
, taper ratios at crank1 
1
(
)
C
λ
, crank2 
2
(
)
C
λ
 and tip (
)
Tλ  sections are considered and their design bounds are shown in 
Table 9.12. In total, ninety three (93) design variables are considered.
Implementation  FLO22 [4] and FRICTION solvers are utilised and the following 
specific parameters are considered for HAPMOEA software:
1st Layer
Population size of 10 and intermediate recombination with a Computational 
grid of 96 × 12 × 16 cells on the FLO22 solver
2nd Layer
Population size of 40 and intermediate recombination with a Computational 
grid of 68 × 12 × 16 cells on the FLO22 solver
3rd Layer
Population size of 60 and intermediate recombination with a Computational 
grid of 48 × 12 × 16 cells on the FLO22 solver
[
]
0.8,0.81,
0.82,0.83,0.84 and
0.691
S
i
S
L
M
M
C
∞∈
=
=
2
2
1
1
Whe e
(
) 
r
i
i
K
wing
Wing
i
S
M
W
W
K
M
∞
=
=
∑

225
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization
Numerical Results  The algorithm was allowed to run approximately 1100 function 
evaluations and took 150 h of CPU time on two 1.8 GHz processors. The resulting 
Pareto front is shown in Fig. 9.25. The Pareto front are zoomed in Section-A. It 
can be seen that Pareto (non-dominated) solutions produce better aerodynamic and 
structural quality when compared to the values obtained with the baseline design.
Pareto Members 1 (best solution for fitness 1), 5, 6 and 10 (best solution for fit-
ness 2) are selected and compared to the baseline design as shown in Table 9.13. 
Pareto Members 5 and 6 are selected for further evaluation as compromised solu-
tions. Pareto Members 5 and 6 produce improvement on aerodynamic quality by 
3 % and on structural quality by 14 %.
Figure 9.26 and Table 9.14 compare the wing geometry between Pareto Mem-
bers and the baseline design. It can be seen that overall aspect ratio and span length 
are increased by 18 and 8 % respectively. The taper ratios at crank 2 and tip are of 
very similar value to the baseline design while 6.6 % decrement of taper ratio is ob-
served at crank 1. For sweep angles, Pareto Members have 1–2 degrees swept back 
compared to the baseline design.
Fig. 9.25   Pareto optimal fronts for generic aircraft wing aerofoil sections
  
Variables
1
R C
−
Λ
1
2
2
,
C
C
C
T
−
−
Λ
Λ
1
C
λ
2
C
λ
Tλ
Lower
34°
19°
0.5
0.3
0.2
Upper
37°
23°
0.7
0.5
0.25
Table 9.12   Wing geometry 
design bounds

226
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Figure 9.27 shows the set of airfoils with the Pareto front. It can be seen that clas-
sical aerodynamic shapes have been evolved, even considering that the optimisation 
was started completely from random solutions and the evolution algorithm had no 
problem specific knowledge of appropriate types of solutions taking certainty into 
account.
The airfoil sections characteristics for the selected Pareto Members (5 and 6) are 
compared to the baseline design in Fig. 9.28 and on Table 9.15. The airfoil sections 
of selected Pareto Members 5 and 6 are 10 % thinner than those of the baseline 
design. Negative cambers are observed at crank 1 and crank 2 airfoil sections while 
positive cambers are found at root and tip airfoil sections.
Figures 9.29a, b and c compare the pressure coefficient distributions at 0, 20, 
40, 60, 80 and 90 % of the span between Pareto Members (1, 5, 6 and 10) and the 
baseline design. The optimal wings have a pressure improvement at the leading 
edge identified with blue circles from 40 ~ 90 % of the span when compared to the 
baseline design.
Figures  9.30a, b and c compare Mach sweeps with the drag coefficient, the 
lift to drag ratio (L/D) and the wing weight obtained from current optimization 
(AS-Uncertainty), aerodynamic uncertainty approach (Aero-Uncertainty) (see 
Sect. 8.5.2) and the baseline design. The two-uncertainty based aero-structure and 
uncertainty based aerodynamics provide an improvement of the lift to drag ratio 
Table 9.13   Comparison of the aerodynamic and structural quality
Description
Baseline
Pareto M1
Pareto M5
Pareto M6
Pareto M10
Fitness 1
(AQ)
0.556
0.537
(− 3.4 %)
0.5406
(− 2.7 %)
0.5408
(− 2.7 %)
0.543
(− 2.3 %)
Fitness 2
(SQ)
2.949
2.608
(− 11.5 %)
2.539
(− 14.0 %)
2.537
(− 14.0 %)
2.526
(− 14.3 %)
Fig. 9.26   Comparison of wing geometry between Pareto members and baseline design
   

227
when compared to the baseline wing. Both solutions from aero-structure and aero-
dynamic uncertainty indicating lower drag coefficients are observed from the Mach 
number 0.7–0.85 as shown in Fig. 9.30a. The lift to drag ratio (Fig. 9.30b) from 
current optimization using the aero-structure uncertainty concept provides better 
aerodynamic performance when Mach number is higher than 0.71 with higher lift 
to drag ratio from aerodynamic uncertainty at all Mach numbers with less sensitiv-
ity. However, the wing weights of the Aero-Uncertainty (Pareto member 4 and 5) 
are higher than the baseline design from Mach number 0.7–0.78 and after 0.835 
slightly lower from Mach 0.78–0.835 when compared to the baseline design. The 
lowest wing weight distributions with less weight sensitivity at all Mach numbers 
[0.7: 0.85] are achieved by the current solutions (Pareto Members 1, 5, 6 and 10).
Table 9.16 compares the aerodynamic and structural quality at Mach number 
0.75–0.85 between current solutions (Aero-Structure Uncertainty), Aero-Uncertain-
ty, and the baseline design. Pareto Members 4 and 5 from aerodynamic uncertainty 
optimization are higher in terms of aerodynamic quality while their wing weight 
9.4  Robust Aero-Structural Generic Aircraft Wing Optimization
Fig. 9.27   Optimal airfoil sections
   
Table 9.14   Comparison of wing specifications between Pareto Members (1, 5, 6 and 10) and 
baseline design
Specification
b (m)
AR
1
R C
−
Λ
1
C
T
−
Λ
1
C
λ
2
C
λ
Tλ
Baseline
34.32
11.57
34.03°
21.38°
0.60
0.41
0.22
ParetoM1
37.45
14.03
36.23°
22.55°
0.57
0.40
0.222
ParetoM5
36.84
13.58
36.04°
22.27°
0.56
0.42
0.222
ParetoM6
36.77
13.53
36.05°
22.25°
0.56
0.42
0.222
ParetoM10
36.92
13.64
36.08°
22.28°
0.56
0.418
0.222

228
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
distributions fluctuate when compared to the baseline design. Pareto Members 5 
and 6 from the current optimisation (Aero- Structure Uncertainty) produce not only 
better aerodynamic performance with stability but also a structurally light weight 
distribution with stable weight sensitivity at variability of flight conditions when 
compared to the baseline design and aerodynamic uncertainty solutions.
Fig. 9.28   Airfoil sections for compromised solutions
   
Table 9.15   Comparison of airfoil sections configurations
Design description
Baseline design
Pareto M5
Pareto M6
/
Root
t c
15.4 @19
13.89 @27.0
13.89 @27.0
CamberRoot
0.3 @4.6
0.54 @23.0
0.55 @21.0
1
/
Crank
t c
12.5 @28.0
11.4 @32.4
11.4 @32.4
CamberBP1
0.7 @10.3
− 0.33 @94.0
− 0.34 @94.0
2
/
Crank
t c
10.0 @38.0
8.64 @38.6
8.63 @38.4
CamberBP2
1.44 @20.4
− 0.44 @11.3
− 0.43 @11.1
/
Tip
t c
10.8 @40.3
9.6 @39.7
9.6 @39.5
CamberTip
1.6 @21.2
0.39 @31.9
0.37 @31.8

229
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
9.5  Robust Aero-Electromagnetic Design Optimization 
of UAS
Aero-electromagnetics design optimization is also an important problem for 
manned and unmanned (UAV and UCAV systems) aviation. This section considers 
two MDO test cases.
Fig. 9.29   a Comparison of pressure coefficients ( Cp) distribution at 0 and 20 % of span. b Com-
parison of pressure coefficients ( Cp) distribution at 40 and 60 % of span. c Comparison of pressure 
coefficients ( Cp) distribution at 80 and 90 % of span
  

230
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Baseline
Aero-Uncertainty 
Pareto M4 and M5
AS-Uncertainty 
Pareto Members 
(1, 5, 6 and 10) 
Baseline 
Aero-Uncertainty 
Pareto M4 and M5 
AS-Uncertainty 
Pareto Members 
(1, 5, 6 and 10) 
Baseline
Aero-Uncertainty 
Pareto M4 and M5 
AS-Uncertainty 
Pareto Members 
(1, 5, 6 and 10)
a
b
c
Fig. 9.30   a Comparison of total drag coefficients (
)
Total
D
C
 vs. Mach numbers. b Comparison of 
lift to drag ratios ( L/D) vs. Mach numbers. c Comparison of wing structure weights ( WWing) vs. 
Mach numbers
   

231
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
9.5.1  Robust Multi-Disciplinary Design Optimisation of UCAS 
Using HAPMOEA Software
Problem Definition  This test case considers the multi-disciplinary (aero-electro-
magnetics) design optimization of Joint-Unmanned Air Combat Systems (J-UCAS) 
as an extended work of Sect. 8.6 Chap. 8. Two (2) disciplines aerodynamics and 
electro-magnetics are considered to maximize the survivability of the UCAS when 
operating in a target strike mission. The first objective is to maximize the mean of 
lift to drag ratio in the aircraft Sector 3 while minimizing the second fitness func-
tion variance of lift to drag ratio (L/D) to reduce sensitivity/fluctuation as shown 
in Fig. 8.55c. A third fitness function considers Mono and Bi-static radar analysis 
at variable radar frequency to produce a stealth UCAS against enemy aircraft when 
operating at cruise (Sector 2) and the ground level radars when operating at ingress 
(Sector 4). The RCS quality (performance and stability) is expressed as one com-
bined statistical formula in terms of the mean and variance. This optimization uses 
the combination of Algorithms 5 and 6 as shown in Sect. 6.5 of Chap. 6.
The variability of flight conditions (end of Mission 2 to beginning of Sector 4) 
are:
[
]
0.75,0.775,
0.80,0.825,0.85 or
0.8 and
0.03952
i
S
M
M
M
M
∞
∞
∞
∈
=
=
=
σ
4.662,3.968,
3.275 ,2.581,1.887 or
3.275 and
1.0968
i
S
°
∞
∞
∞


∈
=
=
=


α
α
α
σα
[
]
30062,25093,
20125 ,15156,10187 or
20,124.6 and
7,856.2
i
S
ATI
ATI
ft
ATI
ATI
∞
∞
∞
∈
=
=
=
σ
where MS, αS and ATIS represents the standard design flight conditions: Mach num-
ber, angle of attack and altitude respectively.
The variability of RCS frequency for Mono and Bi-static analysis are:
[
]
1.0,1.25,
1.5
,1.75,2.0 or
1.5 and
0.3952
i
S
F
F
GHz
F
F
∞
∞
∞
∈
=
=
=
σ
Table 9.16   Comparison of the aerodynamic/structural quality
Description
Baseline
Aero-uncertainty
(Sect. 9.2)
Aero-structure
uncertainty
Pareto M4
Pareto M5
Pareto M5
Pareto M6
AQ
0.5213
0.4702
(− 9.8 %)
0.4705
(− 9.7 %)
0.4934
(− 5.3 %)
0.4941
(− 5.2 %)
SQ
2.8768
2.8082
(− 2.4 %)
2.8081
(− 2.4 %)
2.5111
(− 13.0 %)
2.5109
(− 13.0 %)
AQ and SQ represent aerodynamic and structural quality respectively

232
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
where FS represents the standard RCS design frequency.
The fitness functions—mean and variance—for this problem are defined as:
1
1
min
f
L D


=





(9.13)

(9.14)
(
)
(
)
2
2
2
2
2
1
1
1
1
,
where 
/
/
1
 
i
K
K
i
i
i
i
i
S
S
M
M
L
L
L D
L D
L D
K
D
D
K
M
M
δ
∞
∞
=
=


=
=
−


−


∑
∑
(
)
(
) (
)
3
min
1
2
Quality
mono
bi
mono
bi
f
RCS
RCS
RCS
RCS
RCS
=


=
+
+
+


δ
δ

(9.15)
where 
0 :3 :360
θ
°
°
°
= 


 and 
0 : 0 : 0
φ
°
°
°
= 


 (Mono-static case),
where incident angles are 
135 ,
90
θ
φ
°
°
=
=
 at 
0 :3 :360
θ
°
°
°
= 


,  
0 : 0 : 0
φ
°
°
°
= 


 
(Bi-static case)
Design Variables  Lower design bounds of airfoil thickness distributions are set as 
the same as the baseline design. Eight design variables that define wing configura-
tions are considered (λC1, λC2, LR−C1, LC1−C2, LC2−T, S1, S2 and S3). The taper ratio 
(λT) at tip is fixed as 0.2 % of the root chord. Two crank positions ( C1 and C2) and 
wing span ( b) are recalculated without washout or dihedral effects. Upper and lower 
design bounds are illustrated on Table 8.11 of Chap. 8. Seventy six (76) design vari-
ables are considered in total.
Implementation  FLO22 and FRICTION CFD solvers are utilised and the following 
specific parameters are considered for the HAPMOEA optimizer.
1st Layer
Population size of 15 and intermediate recombination with a computational 
grid of 96 × 12 × 16 cells used by FLO22 solver
2nd Layer
Population size of 20 and intermediate recombination with a computational 
grid of 68 × 12 × 16 cells used by FLO22 solver
3rd Layer
Population size of 30 and intermediate recombination with a computational 
grid of 48 × 12 × 16 cells used by FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 539 function 
evaluations and took 200 CPU hours on two 2.4 GHz processors. The resulting 
Pareto set is shown in Fig. 9.31 where the black inverse triangle (Pareto Member 1) 
represents the best solution for fitness function1. The red square (Pareto Member 
2
min
L
f
D
δ


=





233
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
10) represents the best solution for fitness function 2. The blue triangle (Pareto 
Member 10) indicates the best solution for the third fitness. The light blue square 
(Pareto member 8) indicates the compromised solution. It can be seen that all Pareto 
Members produce higher lift to drag ratio (L/D) with low sensitivity while their 
wing plan form shapes have low signature.
Table 9.17 compares the mean and variance of lift to drag ratio and RCS quality 
obtained by Pareto Members (1, 8, 10) and the baseline design. Pareto Member 
1(best  objective1) produces lower inverse lift to drag ratio (1
/
L D  ) by 46 % with 
35 % reduction of sensitivity 
(
)
(
/
)
L D
δ
 when compared to the baseline design. The 
sensitivity of Pareto Member 10 (best objective 2 and 3) is (67 %) for ( /
)
L D
δ
 with 
18 % for 1
/
L D . These results indicate that all Pareto Members produce higher 
aerodynamic performances with less sensitivity at the start of Sector 3 to end of 
Sector 3 where is fluctuation as shown in Fig. 8.56c. In addition all Pareto Members 
have lower RCS quality (more than 50 %) when compared to the baseline design. 
Pareto Member 8 is selected as a compromised solution for further evaluation.
The mean and standard deviations obtained by the baseline design and robust 
Pareto members can be compared using Cumulative Distribution Function (CDF) 
and Probability Density Function (PDF). Figure 9.32a shows the CDF obtained by 
the baseline design and the robust compromise Pareto Members (1, 8, 10). It can 
be seen that all solutions obtained by the robust design method have lower mean 
inverse lift to drag ratio when compared to the baseline design. Pareto member 1 
Fig. 9.31   Pareto optimal front
  

234
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Table 9.17   Comparison of the objectives obtained by the baseline design and Pareto optimal 
solutions
Objective
Baseline
ParetoM1 (BO1)
ParetoM8 (CS)
ParetoM10 
(BO2-BO3)
1
/
L D
0.095
0.051 (− 46 %)
0.063 (− 34 %)
0.078 (− 18 %)
(
/
)
L D
δ
8.25
5.35 (− 35 %)
2.91 (− 65 %)
2.73 (− 67 %)
Quality
RCS
80.58
37.29 (− 53 %)
36.67 (− 54 %)
33.62 (− 58 %)
BO represents a Best Objective and CS indicates a Compromised Solution
Fig. 9.32   a Mean inverse lift to drag ratio comparison using CDF. b Inverse lift to drag ratio 
sensitivity comparison using PDF
   

235
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
improves the mean L/D 46 % when compared to the baseline. The standard devia-
tion (sensitivity) can be represented by evaluating the gradient of the lines to the 
CDF value of 0.5 or 1 (steep gradient signifying low sensitivity). Herein PDF is 
plotted in Fig. 9.32b to have a clear sensitivity comparison between the baseline 
design, and robust design solutions. It can be seen that all solutions obtained by the 
robust design method have lower sensitivity (narrow bell curve). Pareto Member 
10 obtained by the robust design method has 67 % L/D sensitivity reduction when 
compared to the baseline design. In other words, the robust design method can pro-
duce a set of non-dominated solutions with better performance and sensitivity when 
compared to the baseline design.
Figure 9.33 and Table 9.18 compare the plan form shapes obtained by Pareto 
optimal front and the baseline design. It can be seen that the wing span of Pareto 
member 1 (best objective 1) is 17 % longer with a 35 % increment in aspect 
ratio when compared to the baseline design. Pareto Member 10 (best objective 
2 & 3) has 22 % decrement in aspect ratio and 13 % shorter wing span when com-
pared to the baseline design. However, the taper ratios at crank 1 and crank 2 for 
Pareto member 10 are higher by 47 and 37 % when compared to the baseline design. 
This is due to the fitness function 3 (RCS quality) which tried to produce an aero-
diamond plan form shape.
Figures 9.34, 9.35 and 9.36 compare the Sector sweep and the lift, drag coefficient 
and lift to drag ratio obtained from current Pareto members (1 ~ 10), Pareto member 
5 (denoted as AeroPM5) from previous test (Sect. 5.1) and the baseline design. The 
range of Sector sweep (Sector 2 to Sector 4) is 
[
]
0.7 : 0.9
M ∞=
, 
[
]
6.05: 0.5
α =
 and 
at 
[
]
altitude
40,000 : 250
=
.
Fig. 9.33   Pareto optimal plan form shapes
  

236
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Figure 9.34 shows that the current Pareto Members (1 and 2) and Aero PM5 
produce higher Cl along the Sector sweep when compared to the baseline design. 
Pareto Members (3–10) are slightly lower when compared to the baseline design 
while keeping a higher Cl instead of minimum Cl requirement.
Figure 9.35a and Table 9.19 compare the drag coefficient obtained by Pareto 
members (1–10), Aero PM5 and the baseline design. Aero PM5 produce lower drag 
when compared to the current Pareto Members and the baseline, whereas the cur-
rent Pareto Members have much lower drag sensitivity along the Sector sweep.
Mean and standard deviations obtained by the baseline design, multi-objective 
(Sect. 8.7.5 Chap. 8) and robust Pareto Members can be compared using Cumulative 
Distribution Function (CDF) and Probability Density Function (PDF). Figure 9.35b 
shows the CDF obtained by the baseline design, the optimal from multi-objective 
Table 9.18   Comparison of wing configurations
Models
AR
b
λC1
λC2
ΛR−C1
ΛC1−C2
ΛC2−T
Baseline
4.45
18.9
19.7
19.7
55
29
29
ParetoM1
(BO1)
6.02
(+ 35 %)
22.20
(+ 17 %)
18.1
(− 8 %)
18.1
(− 8 %)
58.0
31.2
30.9
ParetoM8
(CS)
4.30
(− 3 %)
18.32
(− 3 %)
22.4
(− 14 %)
22.4
(− 14 %)
56.3
30.0
29.2
ParetoM10
(BO2–BO3)
3.46
(− 22 %)
16.47
(− 13 %)
29.0
(+ 47 %)
27.0
(+ 37 %)
57.26
27.2
26.7
Fig. 9.34   Lift coefficient ( CL) vs. Sector sweep
   

237
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
Fig. 9.35   a Drag coefficient ( CD) vs. Sector sweep. b Mean drag coefficient comparison using 
CDF. c Drag coefficient sensitivity comparison using PDF
  

238
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
(marked as Aero-PM5) and the robust compromise Pareto solutions (marked as Ro-
bust PM). It can be seen that all solutions obtained by single-objective and robust 
design methods have lower mean total drag when compared to the baseline design. 
Pareto member 1 reduces the mean total drag by 52 % when compared to the base-
line while the optimal obtained by the multi-objective approach reduces total drag 
by 60 %. The standard deviation (sensitivity) can be represented by evaluating the 
gradient of the lines to the CDF value of 0.5 or 1 (steep gradient signifying low sen-
sitivity). Herein PDF is plotted in Fig. 9.35c to have a clear sensitivity comparison 
between the baseline design, multi-objective, robust design method. It can be seen 
that all solutions obtained by the multi-objective and robust design methods have 
lower sensitivity (narrow bell curve). Pareto Member 10 obtained by the robust 
design method has 93 % total drag sensitivity reduction when compared to the base-
line design while the optimal obtained by a multi-objective approach reduces total 
drag by only 72 %. In other words, the robust design method can produce a set of 
solutions which have a better performance and sensitivity when compared to the 
single-objective optimization method.
Table 9.19   Comparison of aerodynamic quality
Description
Baseline
AeroPM5
ParetoM1 
(BO1)
ParetoM8 (CS1)
ParetoM10
(BO2 & 3)
D
C
0.025
0.010 (− 60 %)
0.012 (− 52 %)
0.014 (− 44 %)
0.015 (− 40 %)
D
C
δ
5.49 × 10−5
1.54 × 10−5
7.917 × 10−6
6.48 × 10−6
3.83 × 10−6
Point-A 
Point-B 
Point-C 
Aero-PM5 
Best OB1 
Best OB2 & OB3 
Baseline 
Fig. 9.36   Lift to drag ratio ( L/D) vs. Sector sweep
  

239
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
Figure 9.36 compares the lift to drag ratio obtained by Pareto Members (1–10), 
Pareto Member 5 (AeroPM5) from the previous test and the baseline design. It can 
be seen that Pareto member 1 (best objective1) and AeroPM5 produce higher lift to 
drag ratios than the baseline design along the Sector sweep while Pareto Member 
10 produces lower sensitivity. It can be seen that one of the benefits of uncertainty 
design technique is that the maximum L/D point (Point-A) of AeroPM5 moves to 
the maximum L/D point (Point-B) of Pareto Member 1 (Best objective 1) and then 
the designs and solutions move to Point-C (maximum L/D) of Pareto Member 10 
(best objective 2 and 3) which corresponds to and reflects the variance.
Figure 9.37a compares the mono-static RCS analysis obtained by Pareto Mem-
bers (8 and 10), Pareto Member 5 (Aero PM5) from the previous test and the base-
line design at the standard design frequency (1.5 GHz). It can be seen that Pareto 
Members 8 and 10 produce 9 and 20 % lower RCS when compared to the baseline 
design while Aero PM5 produces almost the same RCS as the baseline design. Fig-
ure 9.37b illustrates a frequency sweep corresponding to mono-static RCS analysis. 
The variance value for Pareto Member 8 is lower while the baseline design value 
highly fluctuates at the standard design radar frequency (1.5 GHz).
Figure 9.38a compares the bi-static RCS analysis obtained by Pareto Members 
(8 and 10), Pareto Member 5 (Aero PM5) from the previous test and the base-
line design at the standard design frequency (1.5 GHz). Even though Aero PM5 
produces higher aerodynamic performance, its bi-static RCS indicates that it has 
17 % more chance to be detected by an enemy radar system when compared to the 
baseline design. Pareto Members 8 and 10 have 9 and 12 % lower signature when 
compared to the baseline design. Figure 9.38b compares the bi-static RCS at vari-
able frequencies and shows the lowest RCS variance is achieved by Pareto Member 
10 ( d RCSBI = 0.09).
To conclude with this test case, the method showed that by introducing another 
discipline and an uncertainty analysis it is possible to compute a set of useful Pareto 
non-dominated solutions that produces stable design and higher aerodynamic per-
formance with a low signature at variable flight conditions and radar frequencies. 
Pareto Members 8 and 10 can be selected as compromised solutions for further 
evaluation and are suitable for stealth strikes. Even though Pareto Member 10 pro-
duces similar aerodynamic performance at Sector2 condition when compared to the 
baseline design, it produces higher aerodynamic performance with less sensitivity 
at Sector 3 and Sector 4 conditions. Pareto Members 8 and 10 not only have a low 
signature at mono and bi-static radar system when compared to both baseline design 
and Pareto Member 5 from aerodynamic design optimization but also have low 
sensitivity at a set of variable radar frequencies.
9.5.2  Robust Multi-Disciplinary Design Optimization of UCAS 
Using Hybridized Games
Problem Definition  This test case considers the multi-disciplinary design optimi-
sation of UCAS when there is uncertainty in the operating conditions and robust 
design technique is required. This problem is selected to show the benefits of using 

240
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
the Hybridized Games (Nash and Pareto) method due to the addition of uncertainty 
which increases the computational cost considerably. The objectives are to maxi-
mize Aerodynamic Quality (AQ) while minimizing Electro-magnetic Quality (EQ) 
in order to maximize the survivability of the UCAS. AQ is defined by fitness func-
tions 1 (mean) and 2 (variance) that represent an aerodynamic performance and 
sensitivity corresponding to five (5) variability of flight conditions including Mach, 
Baseline 
AeroPM5 (-0.2%) 
ParetoM10 (-20%) 
ParetoM8 (-9%) 
Baseline 
(
Mono
RCS
δ
= 62.10)
AeroPM5 
(
Mono
RCS
δ
= 10.11) 
ParetoM8 
(
Mono
RCS
δ
= 0.11)
ParetoM10 
(
Mono
RCS
δ
= 0.48)
b
a
Fig. 9.37   a Mono-static RCS vs. Theta at standard design frequency. b Mono-static RCS vs. 
Mono-static radar frequency
  

241
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
angle of attacks and altitude. EQ is expressed using one normalized equation; fit-
ness functions 3 which represents the magnitude and sensitivity of Radar Cross 
Section (RCS) for a given UAS shape at five variability radar frequencies. UAS will 
have less chance to be detected by enemy radar systems if the value of EQ is low. 
In other words, UAS will be stealthier. The fitness functions for Pareto-Player and 
Nash-Players are indicated on Table 9.20.
Baseline 
AeroPM5 (+17%) 
ParetoM10 (-12%) 
ParetoM8 (-9%) 
Baseline 
(
Bi
RCS
δ
= 1.80)
AeroPM5 
(
Bi
RCS
δ
= 1.20) 
ParetoM8 
(
Bi
RCS
δ
= 0.18) 
ParetoM10 
(
Bi
RCS
δ
= 0.09)
a
b
Fig. 9.38   a Bi-static RCS vs. Theta at standard design frequency. b Bi-static RCS vs. Bi-static 
radar frequency
  

242
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
The possible uncertainty flight conditions (five (5) Mach numbers, angle of at-
tacks and altitudes) and five (5) radar frequencies are:
[
]
0.75,0.775,
0.80,0.825,0.85 or
0.8 and
0.03952
i
S
M
M
M
M
∞
∞
∞
∈
=
=
=
σ
4.662,3.968,
3.275 ,2.581,1.887 or
3.275 and
1.0968
i
S
°
∞
∞
∞


∈
=
=
=


α
α
α
σα
[
]
30062,25093,
20125 ,15156,10187 or
20,124.6 and
7,856.2
i
S
ALT
ALT
ft
ATI
ATI
∞
∞
∞
∈
=
=
=
σ
Table 9.20   Fitness functions for Hybrid-Game
Player
Fitness function
Optimisation criteria
PP
(
)
(
)
(
)
(
)
1_
2 _
3_
min 1
min
min(
)
PP
PP
PP
f
L D
f
L D
f
EQ
δ
=
=
=
Optimise wing plan form and airfoil sections at 
root, crank1, crank 2 and tip to maximize L D , 
and minimize (
)
L D
δ
 and EQ
NP1
f
AQ
NP
1
1
1
_
min(
)
=
Optimize root aerofoil section only to maximize 
AQ with fixed airfoil sections (crank 1, crank 2, 
tip) and wing plan form
NP2
1_
2
min(1
)
NP
f
AQ
=
Optimize crank 1 airfoil section only to maxi-
mize AQ with fixed airfoil sections (root, crank 
2, tip) and wing plan form
NP3
1_
3
min(1
)
NP
f
AQ
=
Optimize crank 2 airfoil section only to maxi-
mize AQ with fixed airfoil sections (root, crank 
1, tip) and wing plan form
NP4
1_
4
min(1
)
NP
f
AQ
=
Optimize tip airfoil section only to maximize 
AQ with fixed airfoil sections (root, crank 1, 
crank 2) and wing plan form
NP5
1_
5
min(
)
NP
f
EQ
=
Optimize wing plan form shape only to mini-
mize EQ with fixed airfoil sections (root, crank 
1, crank 2, tip)
(
)
(
)
(
)
&
&
0
&
0
&
/
and
1
  and
 
:
0 :3 :360
and
0 : 0 : 0
:
135 and
0
0 :3 :360
and
0 : 0
2
:
2
1
0
Mono
Bi
Mono
Bi
Mono
Bi
Mono
Bi
Mono
Bi
Mono
Bi
Mono
static
Bi
stat
L D
AQ
EQ
RCS
RCS
L D
RCS
RCS
RCS
RCS
RCS
R
ic
CS
θ
φ
θ
φ
θ
φ
δ
δ
δ
δ
δ
°
°
°
°
°
°
°
°
°
°
°
°
°
°




−
=
=




−
=
=
=
=
+
=


=
=

+

=
+



.

243
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
[
]
1.0,1.25,
1.5
,1.75,2.0 or
1.5 and
0.3952.
i
S
F
F
GHz
F
F
σ
∞
∞
∞
∈
=
=
=
Uncertainty flight conditions are taken from Sector 2.5 (middle of cruise) to Sec-
tor 3.5 (right after high transition dash and before target acquisition) as shown in 
Fig. 8.49, Chap. 8. The reader will observe critical changes between Sector 2 and 
Sector 4 where the Mach and altitude number changes from 0.7 to 0.9 and from 
41,000 to 250 ft respectively. In other words, the changes of flight conditions leads 
to critical change (fluctuation) in aerodynamic performances which may cause 
structural or flight control failure. In addition, the altitude change means that the 
enemy radar systems are also changed from Mono-static to Bi-static with higher 
radar frequencies. This is the reason that the range from Sector 2.5 to Sector 3.5 is 
chosen to prevent both aerodynamic and electromagnetic fluctuations.
The objective functions of Nash-Players (1–5) are defined using Variance to 
Mean Ratio (VMR) to minimize the number of Nash-Players. Otherwise, Hybrid-
ized Game will use ten (10) Nash-Players if the objective functions of AQ and EQ 
are defined by separated mean and variance formulas. VMR is a statistical formula 
to minimize variance value while maximizing mean value of objective.
The aerodynamic or electro-magnetic analysis tools used in this multi-dis-
ciplinary design optimisation will be determined by the objective of each player 
for Hybridized Games (Fig. 9.39a). It can be seen that Nash-Players (1–4) in the 
Hybridized Games approach use aerodynamic analysis tools only to maximise AQ 
while Nash-Player 5 in Hybridized Games uses electromagnetic analysis tool only 
to minimize EQ. Pareto-Player in Hybridized Games uses both aerodynamic and 
electromagnetic analysis tools for both AQ and EQ.
Fig. 9.39   a Evaluation mechanism of Hybridized Games. b Evaluation mechanism of the HAP-
MOEA optimizer
  

244
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
In contrast, the HAPMOEA optimizer uses simultaneously aerodynamic and elec-
tromagnetic analysis tools shown in Fig. 9.39b. This is explained by the fact that each 
node in the HAPMOEA optimizer considers both AQ and EQ through the multi-
fidelity model. Therefore Hybridized Games have more chance to evaluate candidates.
Design Variables  The Hybridized Game employs five (5) Nash-Players and one (1) 
Pareto-Player as shown on Table 9.21. The Pareto-Player of the Hybridized Game 
solely considers all seventy six (76) design variables for the shape of airfoil sections 
and wing plan form. Airfoil sections at root, crank 1, crank 2 and tip are optimized 
by Nash-Players 1–4 while Nash-Player 5 optimizes wing plan form only. In other 
words, each Nash-Player from 1 to 4 will optimize seventeen (17) airfoil design 
variables while Nash-Player 5 will consider eight (8) wing plan form design vari-
ables. In contrast, each node (Node 0–6) of the HAPMOEA optimizer will consider 
all seventy six (76) design variables including airfoil sections and wing plan form.
Numerical Results  Both HAPMOEA optimizer and Hybridized Games use two 
2.4 GHz processors. The HAPMOEA software was allowed to run approximately 
540 function evaluations and took two hundred (200) CPU hours while Hybridized 
Game algorithm ran approximately only 400 function evaluations and took sixty 
(60) CPU hours which is 30 % of the computation cost of HAPMOEA optimizer. 
Pareto fronts obtained by HAPMOEA and Hybridized Games are compared to the 
baseline design in Fig. 9.40.
It can be seen that Hybridized Game produces similar solutions when compared 
to HAPMOEA solutions. The black inverse triangle (Pareto Member 1) represents 
the best solution for fitness function1. The red square (Pareto Member 9) repre-
sents the best solution for fitness function 2. The blue triangle (Pareto Member 10) 
indicates the best solution for the third fitness. The green square (Pareto Member 
4 and 5) indicates the compromised solution for Hybridized Games. It can be seen 
all Pareto Members produce higher lift to drag ratio (fitness 1) with low sensitivity 
(fitness 2) and also their wing plan form shapes have lower EQ (fitness 3).
Table 9.22 compares the mean and variance of lift to drag ratio and RCS quality 
of Pareto Members (1, 8, 10) obtained by the HAPMOEA optimizer, Pareto Mem-
bers (1, 5, 9, 10) from Hybridized Games and the baseline design. Even though the 
Hybridized Games ran only 30 % of HAPMOEA computational time, it produces 
Table 9.21   Distributions of design variables
Design variables
Hybrid-game on HAPMOEA
HAPMOEA-L3
NP1
NP2
NP3
NP4
NP5
PP
AerofoilRoot
√
√
√
AerofoilCrank1
√
√
√
AerofoilCrank2
√
√
√
AerofoilTip
√
√
√
Wing
√
√
√
Design variable AirfoilRoot indicates airfoil at root section and NPi represents ith  Nash-Player and 
PP indicates the Pareto-Player

245
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
similar non-dominated solutions when compared to Pareto non-dominated solutions 
obtained by HAPMOEA software.
Figures 9.41a and b compare the wing plan form shape corresponding to Pareto 
non-dominated solutions obtained by HAPMOEA and Hybridized Games, and 
the baseline design. It can be seen that Hybridized Games software provides more 
variety on wing plan form shapes. This may be due to the evaluation mechanism of 
Hybridized Game that allows Pareto-Player and Nash-Player 5 to have a detailed 
design after running more function evaluations.
Fig. 9.40   Pareto non-dominated solutions obtained by HAPMOEA optimizer and Hybridized 
Games
   
Table 9.22   Comparison of fitness values obtained by HAPMOEA and Hybrid-Game
Objective
HAPMOEA (200 h)
Hybrid-game (60 h)
PM1
(BO1)
PM8
(CS)
PM10
(BO2&3)
PM1
(BO1)
PM5
(CS)
PM9
(BO2)
PM10
(BO3)
Fitness1
(
)
1
L D
0.051
(− 46 %)
0.063
(− 34 %)
0.078
(− 18 %)
0.051
(− 46 %)
0.068
(− 28 %)
0.084
(− 12 %)
0.085
(− 11 %)
Fitness2
(
)
L D
δ
5.35
(− 35 %)
2.91
(− 65 %)
2.73
(− 67 %)
4.94
(− 40 %)
4.10
(− 50 %)
2.07
(− 75 %)
2.17
(− 74 %)
Fitness3
EQ
37.29
(− 53 %)
36.67
(− 54 %)
33.62
(− 58 %)
41.74
(− 48 %)
35.48
(− 56 %)
32.89
(− 59 %)
32.69
(− 60 %)
The fitness values 1, 2 and 3 of Baseline model are 0.095, 8.25 and 80.58 respectively. BOi rep-
resents the best objective solution for ith  fitness function. CS indicates the compromized solution

246
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.41   a Wing plan form shapes obtained by HAPMOEA. b Wing plan form shapes obtained 
by Hybridized Games software
   

247
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
The Sector sweep is plotted with the lift and drag coefficient obtained by HAP-
MOEA, Hybrid-Game and the baseline design as shown in Figs. 9.42a and b. The 
range of sector sweep is M∞ ∈ [0.7:0.9], α ∈ [6.05°:0.5°] and altitude ( feet) \ 
[40,000:250]. It can be seen that the Hybridized Games software produces a set of 
comparable solutions to the HAPMOEA software even though Hybridized Games 
ran only 30 % of HAPMOEA CPU time. The best solution for objective 1 (BO1) 
from Hybridized Games has higher Cl values while Pareto Member 1 (BO1) from 
HAPMOEA software produces a lower drag along the sector sweep.
Table 9.23 compares the quality of drag coefficient obtained by HAPMOEA soft-
ware, Hybridized Games and the baseline design using the uncertainty mean and 
variance statistical formulas. It can be seen that Pareto Member 1 from HAPMOEA 
optimizer produces lower drag at [Sector2: Sector4] when compared to Hybridized 
Games while Pareto Member 9 from Hybridized Games produces a robust design 
with lower sensitivity in drag.
Figure 9.43 compares the lift to drag ratio (L/D) distribution obtained by Pareto 
Members (1, 8 and 10) from HAPMOEA, Pareto Members (1, 4, 5 and 10) from 
Hybrid Game and the baseline design. The Pareto Member 1 (BO1) from both 
HAPMOEA software and Hybridized Games is not only similarly distributed but 
also produces higher lift to drag (L/D) ratios than others along the Sector sweep 
while Pareto Member 9 (BO2) from Hybridized Game produces lower sensitivity 
in Mach, angle of attack and altitude. It can be seen that all Pareto solutions from 
HAPMOEA software and Hybridized Games have less fluctuation (stable motions) 
from Sector 2.5 to Sector 3.5 due to the consideration of uncertainty design during 
the optimization procedure.
Figure 9.44a compares the mono-static RCS obtained by Pareto Members 8 (CS) 
and 10 (BO3) from HAPMOEA, Pareto Members 5 (CS) and 10 (BO3) from Hy-
bridized Game and the baseline design at the standard design frequency 1.5 GHz. 
It can be observed that Pareto Members 8 and 10 from HAPMOEA produce 9 and 
20 % lower RCS while Pareto Members 5 and 10 from Hybridized Games produce 
13 and 26 % lower RCS when compared to the baseline design. Figure 9.44b illus-
trates a frequency sweep F∞i ∈ [1.0, 1.25, FS = 1.5 GHz, 1.75, 2.0] corresponding 
to mono-static RCS analysis. The variance value (0.024) for Pareto Member 5 (CS) 
from Hybridized Games is lower than others while the baseline design value highly 
fluctuates along the frequency sweep.
Figure 9.45a compares the bi-static RCS obtained by Pareto Members (8 (CS) 
and 10 (BO3)), Pareto Members (5 (CS) and 10 (BO3)) from Hybridized Games and 
the baseline design at the standard design frequency (1.5 GHz). It can be seen that 
Pareto Members 8 (CS) and 10 (BO3) from HAPMOEA produce 9 and 12 % lower 
RCS while Pareto Members 5 (CS) and 10 (BO3) computed with HAPMOEA pro-
duce 11 and 15 % lower RCS when compared to the baseline design. Figure 9.45b 
illustrates a frequency sweep F∞i∈[1.0,1.25,FS = 1.5 GHz, 1.75, 2.0] corresponding 
to bi-static RCS analysis. The variance value (0.09) for Pareto Member 10 (BO3) 
from HAPMOEA is lower than other Pareto Members.
The top, side, front and 3D views of the compromised model used by HAP-
MOEA software (Pareto Member 8) and Hybridized Games (Pareto Member 5) are 

248
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.42   a Lift coefficient ( Cl) vs. Sectors. b Drag coefficient ( CD) vs. Sectors
  

249
9.5  Robust Aero-Electromagnetic Design Optimization of UAS
Baseline
Hybrid Game BO2 & BO3
HAPMOEA BO1
Hybrid Game BO1
HAPMOEA    BO2 & BO3
HAPMOEA CS1
Hybrid Game CS1 & CS2
Baseline
Hybrid Game BO2 & BO3
Hybrid Game BO2 & BO3
HAPMOEA BO1
Hybrid Game BO1
HAPMOEA    BO2 & BO3
HAPMOEA CS1
Hybrid Game CS1 & CS2
Fig. 9.43   L/D vs. Sectors
  
shown in Figs. 9.46a and b respectively. Even though Hybridized Games spent less 
CPU time when compared to HAPMOEA, both compromised solutions are geo-
metrically similar.
Pareto Members 8 and 10 from HAPMOEA optimizer and Pareto Member 5 from 
Hybridized Games can be selected as compromised solutions for further evaluation 
and are suitable for this RISTA stealth mission: they have not only low observabil-
ity (stealth property) with mono and bi-static radar system when compared to the 
baseline design but also have low sensitivity at a set of variable radar frequencies.
Table 9.23   Comparison of drag coefficients quality obtained by HAPMOEA and Hybridized 
Games
Drag
Quality
HAPMOEA (200 h)
Hybrid-game (60 h)
PM1
(BO1)
PM8
(CS)
PM10
(BO2&3)
PM1
(BO1)
PM5
(CS)
PM9
(BO2)
PM10
(BO3)
D
C
0.012
(− 52 %)
0.014
(− 44 %)
0.015
(− 40 %)
0.013
(− 48 %)
0.015
(− 40 %)
0.014
(− 44 %)
0.015
(− 40 %)
D
C
δ
(× 10−6)
7.92
6.48
3.83
8.50
6.65
3.69
3.74
The 
D
C
 and 
D
C
δ
 of baseline model are 0.025 and 5.49 × 10−6  respectively. Quality is repre-
sented by mean (magnitude of performance) and variance (sensitivity/stability)

250
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
͢͞͡
͡
͢͡
ͣ͡
ͤ͡
ͥ͡
ͦ͡
ͧ͡
͡
ͧ͡
ͣ͢͡
ͩ͢͡
ͣͥ͡
ͤ͡͡
ͤͧ͡
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄͢
͹Ͳ΁;΀ͶͲ͞ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄͢
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
0RQR6WDWLF7KHWDGHJUHHV
0RQR5&6G%VP
%DVHOLQH
+$302($&6
+\EULG*DPH&6
+$302($%2
+\EULG*DPH%2
͢͞͡
͡
͢͡
ͣ͡
ͤ͡
ͥ͡
ͦ͡
ͧ͡
͡
ͧ͡
ͣ͢͡
ͩ͢͡
ͣͥ͡
ͤ͡͡
ͤͧ͡
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄͢
͹Ͳ΁;΀ͶͲ͞ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄͢
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
0RQR5&6G%VP
%DVHOLQH
+$302($&6
+\EULG*DPH&6
+$302($%2
+\EULG*DPH%2
ͣ͡
ͤ͡
ͥ͡
ͦ͡
ͧ͡
ͨ͡
ͩ͡
ͣ
ͦ
ͨ
͟
͢
ͦ
͟
͢
ͦ
ͣ
͟
͢
͢
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
0RQR5&6G%VP
0RQR6WDWLF5DGDU)UHTXHQF\*+]
%DVHOLQH
δ5&60212 
+\EULG*DPH&6
δ5&60212 
+$302($&6
δ5&60212 
+$302($%2
δ5&60212 
+\EULG*DPH%2
δ5&60212 
ͣ͡
ͤ͡
ͥ͡
ͦ͡
ͧ͡
ͨ͡
ͩ͡
ͣ
ͦ
ͨ
͟
͢
ͦ
͟
͢
ͦ
ͣ
͟
͢
͢
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
0RQR5&6G%VP
%DVHOLQH
δ5&60212 
+\EULG*DPH&6
δ5&60212 
+$302($&6
δ5&60212 
+$302($%2
δ5&60212 
+\EULG*DPH%2
δ5&60212 
a
b
Fig. 9.44   a RCSMono−Static at F∞ = 1.5 GHz. b RCSMono−Static sweep at F∞ ∈ [1.0, 1.25, FS = 1.5 GHz, 
1.75, 2.0]
  

251
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV Design Optimization
Fig. 9.45   a RCSBi−Static at F∞ = 1.5 GHz. b RCSBi−Static sweep at F∞ ∈ [1.0, 1.25, FS = 1.5 GHz, 1.75, 2.0]
  
ͥ͞͡
ͤ͞͡
ͣ͞͡
͢͞͡
͡
͢͡
ͣ͡
ͤ͡
ͥ͡
ͦ͡
͡
ͧ͡
ͣ͢͡
ͩ͢͡
ͣͥ͡
ͤ͡͡
ͤͧ͡
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͣ͗ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
%L6WDWLF7KHWDGHJUHHV
%L5&6G%VP
%DVHOLQH
+$302($&6
+\EULG*DPH&6
+\EULG*DPH%2
+$302($%2
ͥ͞͡
ͤ͞͡
ͣ͞͡
͢͞͡
͡
͢͡
ͣ͡
ͤ͡
ͥ͡
ͦ͡
͡
ͧ͡
ͣ͢͡
ͩ͢͡
ͣͥ͡
ͤ͡͡
ͤͧ͡
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͣ͗ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
%L5&6G%VP
%DVHOLQH
+$302($&6
+\EULG*DPH&6
+\EULG*DPH%2
+$302($%2
ͣ͡
ͣͦ
ͤ͡
ͤͦ
ͥ͡
ͥͦ
ͣ
ͦ
ͨ
͟
͢
ͦ
͟
͢
ͦ
ͣ
͟
͢
͢
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͣ͗ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
%L6WDWLF5DGDU)UHTXHQF\*+]
%L5&6G%VP
%DVHOLQH
δ5&6%, 
+$302($&6
δ5&6%, 
+$302($%2
δ5&6%, 
+\EULG*DPH&6
δ5&6%, 
+\EULG*DPH%2
δ5&6%, 
ͣ͡
ͣͦ
ͤ͡
ͤͦ
ͥ͡
ͥͦ
ͣ
ͦ
ͨ
͟
͢
ͦ
͟
͢
ͦ
ͣ
͟
͢
͢
ͳΒΤΖΝΚΟΖ
͹Ͳ΁;΀ͶͲ͞ʹ΄
͹Ͳ΁;΀ͶͲ͞ͳ΀ͣ͗ͳ΀ͤ
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ʹ΄
͹ΪΓΣΚΕ͑ͿΒΤΙ͞ͳ΀ͤ
%L5&6G%VP
%DVHOLQH
δ5&6%, 
+$302($&6
δ5&6%, 
+$302($%2
δ5&6%, 
+\EULG*DPH&6
δ5&6%, 
+\EULG*DPH%2
δ5&6%, 
a
b

252
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
9.6  Robust Multi-Disciplinary Aero-Electro-Structural 
UCAV Design Optimization
Problem Definition  This test case considers three performances of J-UCAS includ-
ing RCS, aerodynamics and manoeuvrability. The J-UCAS is divided into two 
assemblies including fuselage and wing as shown in Fig.  9.47. The fuselage at 
0–25 % of the half span consists of bulkheads and “longerons” while spars, ribs and 
skin are structured as a wing component. Three spars are applied: the front and rear 
spars are located at 25 and 75 % of the chord while the middle spar starts from the 
middle bulkhead to the spar that is right after crank 1. The inter-spar rib starts to 
Fig. 9.47   UCAS structural mapping
  
Fig. 9.46   a Pareto Member 8 computed with HAPMOEA software. b Pareto Member 5 computed 
with Hybridized Games

253
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV Design Optimization
locate after 25 % of the half span. The skin is only applied between front and rear 
spars.
The wing load-carrying structure (wing box) consists of the wing skin, spar 
and inter-spar ribs are considered with composites; density ( )
ρ  is 1310 (kg/m3), 
ultimate compressive strength of wing (
ultimate
σ
) is 15.703×106 (Kgf/m2), Young’s 
modulus (E) 15.6×109 (Kgf/m2), safety factor 4. The weight of wing is estimated 
by using same method in Chap. 8. There are two fixed weights including the engine 
(23,770 lb or 10,781 kg) and payload (45,000 lb or 2045 kg). It is assumed that the 
weight of fuselage is half of wing weight.
Manoeuvrability is also considered as one of the fitness functions. A J- UCAS 
is a design for both air-attack and ground-attack. In air-to-air combat, the fighter 
desires precision in high rate of turn with a small turn radius to survive. Inspecting 
manoeuvrability at instantaneous turn, it is necessary to look at the relationship 
between the load factor or g-loading ( n), turn rate (ω or ψ) and turning radius ( r) 
as shown in Fig. 9.48:
Fig. 9.48   Instantaneous turn
   

254
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
L
qC
n
W S
=

(9.16)
where q is the dynamic pressure 
2
1
,
2
q
V
ρ∞
∞


=




CL  is the lift coefficient 
,
cos( )
V
L
L
C
C
φ


=




W is the weight of UCAS (
),
UCAV
fuselage
wing
payload
W
W
W
W
=
+
+
fuselage
engine
structural
fuselage
W
W
W
−
=
+
1
2
structural
fuselage
wing
W
W
−
=
Wengine and Wpayload are fixed.
2
1
g n
V
ω
∞
−
=

(9.17)
where g is the gravity (g = 9.81m/s2)
 
.
V
r
∞
∴
= ω

(9.18)
Higher load factor ( n) and greater turn rate ( ω) produce smaller turning radius ( r). 
To improve a load factor, the weight of UCAS including 
structural
fuselage
W
−
 and 
wing
W
 
should be as low as possible while the lift coefficient (
)
V
L
C
 should be as high as 
possible. The structural wing weight is estimated by using the structural estimation 
code in Sect. 9.3.
Aerodynamic quality at the variability of flight conditions is expressed in terms 
of mean and variance of inverse lift to drag ratio (L/D) while the quality of ma-
noeuvrability is formulated by the mean and variance of the turning radius at 45 
bank angle. RCS quality at the variability of radar frequencies is in terms of mean 
and variance of mono and bi-static radar systems to produce stealth UCAS against 
enemy aircraft and ground level radars. In fact, the aerodynamic and manoeuvrability 
performances at cruise are maximised while their sensitivity is minimized. The 
values of mean and sensitivity of mono/bi-static RCS are minimized with the vari-
ability of radar frequencies.
Fitness functions are in conflict by the variability of input parameters: the fitness 1 
will look for high and stable lift to drag ratio that requires longer span which leads to 
heavier structural weight and high radar signature while fitness function 2 will look 
for high lift to maximize the manoeuvrability (instantaneous turning ratios) which 
requires UCAS lighter weight. The fitness function 3 will look for the low observable 
shape “aero-diamond” which can cause low cruise performance and manoeuvrability.
The optimization for this test case is based on the Algorithm described in Fig. 6.6 
of Chap. 6.

255
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV Design Optimization
The variability of flight conditions are:
[
]
0.78,0.79,
0.80,0.81,0.82 or
0.8 and
0.03952 and
4.3
i
S
S
M
M
M
M
σ
α
∞
∞
∞
∈
=
=
=
=

[
]
1.0,1.25,
1.5
,1.75,2.0 or
1.5 and
0.3952.
i
S
F
F
GHz
F
F
σ
∞
∞
∞
∈
=
=
=
The fitness functions for this problem are:
(
)
(
)
(
)
(
)
1
1
min
1
1
min
ln
1/
/
ln 1/ (
/
)
Quality
f
Aerodyanmic
Penalty
L D
L D
δ


=






−
−


=
+
+





(9.19)
2
min(
)
min(
)
Quality
f
Maneuverability
r
r
Penalty
δ
=
=
+
+

(9.20)
where r is the instantaneous turning radius at bank angle 45°.
(
)
(
) (
)
3
1
min
2
mono
bi
Quality
mono
bi
f
RCS
RCS
RCS
RCS
RCS
Penalty


=
=
+
+
+
+


δ
δ
where 
0 :3 :360
θ
°
°
°
= 


 and 
0 : 0 : 0
φ
°
°
°
= 


 (Mono-static);
where incident angles are 
135 ,
90
θ
φ
°
°
=
=
 at 
0 :3 :360
θ
°
°
°
= 


, 
0 : 0 : 0
φ
°
°
°
= 


 
(Bi-static);
in which penalties (Chap. 2.7) are computed and added to fitness functions in the 
following different situations:
•	 if the aerodynamic quality (AQ) is higher than 0.597 ( AQ ≥0 597
.
),
•	 if the manoeuvrability quality (MQ) is higher than 0.998 (MQ
km
≥0 998
.
),
•	 if the RCS quality (RQ) is higher than 43.63 dBsm ( RQ
dBsm
≥43 63
.
).
Design Variables  The design variables for the aerofoil sections are at four span 
wise stations as described in Figs. 8.51a–d. Lower design bounds of thickness dis-
tributions have 0 %c to provide more space for the payload including avionics and 
missiles. Eight design variables for wing plan form are λC1, λC2, LR−C1, LC1−C2, 
LC2−T, S1, S2 and S3. The taper ratio ( λT) at tip is fixed as 0.2 % of the root chord. 
Two crank positions (C1 and C2) and wing span ( b) are recalculated without wash-
out and dihedral effects. The upper and lower design bounds were illustrated in 
Table 8.11. Seventy six (76) design variables are considered in total.
Implementation  FLO22 and FRICTION solvers are utilised and the following spe-
cific parameters are considered for the HAPMOEA multi layer optimizer:

256
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.49   Pareto non-dominated solutions for multi-disciplinary design optimisation of UCAS
   
1st Layer
Population size of 10 and intermediate recombination
with a computational grid of 96 × 12 × 16 cells used by FLO22 solver
2nd Layer
Population size of 20 and intermediate recombination
with a computational grid of 68 × 12 × 16 cells used by FLO22 solver
3rd Layer
Population size of 30 and intermediate recombination
with a computational grid of 48 × 12 × 16 cells used by FLO22 solver
Numerical Results  The algorithm was allowed to run approximately 945 function 
evaluations and took 150 CPU hours on two 2.4 GHz processors. The resulting 
Pareto set is shown in Fig. 9.49 where the best solution (Pareto Member 1) for 
fitness function 1 is marked as a black inverse triangle and the blue triangle is the 
best solution (Pareto Member 3) for fitness function 2. The red square represents 
the best solution (Pareto Member 10) for fitness function 3. It can be seen that the 
baseline UCAS dominates Pareto Member 10 in the aspect of manoeuvrability qual-
ity as shown in Section-A and Section-C. However, all Pareto members dominate 
the baseline UCAS with respect to the quality of cruise aerodynamics and RCS in 
terms of performance and sensitivity.
The best solutions (Pareto Members 1, 3 and 10) and Pareto Member 4 are select-
ed to compare the aerodynamic, manoeuvrability and RCS quality to the baseline 

257
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV Design Optimization
Fig. 9.50   Pareto optimal wing plan form shapes
  
Table 9.24   Comparison of the objectives
Objective
Baseline
Pareto M1
Pareto M3
Pareto M4
Pareto M10
AQ
0.597
0.485 
(− 19 %)
0.503
(− 16 %)
0.521
(− 13 %)
0.566
(− 5 %)
MQ
0.998
0.822 
(− 18 %)
0.768
(− 23 %)
0.899
(− 10 %)
1.114
(+ 12 %)
RQ
43.63
36.77 (− 8 %)
35.86
(− 18 %)
31.68
(− 27 %)
29.83
(− 32 %)
UCAS on Table 9.24. All Pareto Members exhibited improved quality in aerody-
namic parameters. With regards to manoeuvrability quality, Pareto Member 10 is 
dominated by the baseline UCAS while Pareto Member 10 has 32 % less chance to 
be detected by an enemy radar system than the baseline UCAS. Pareto Member 4 is 
selected as a compromised solution for further evaluation since it made an improve-
ment at all aspects of aerodynamic, manoeuvrability and RCS quality.
The wing plan form shapes corresponding to the Pareto front are illustrated in 
Fig. 9.50. Pareto members 1–3 have longer span length than the baseline due to the 
fitness function 1 and 2. The Pareto Members 4–10 provide slightly shorter span 
and the plan form shapes of Pareto Members 5 and 10 are almost aero-diamond due 
to fitness function 3. The aero-diamond plan form shape is the most efficient shape 
against radar signature.

258
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
The wing configurations of best solutions (Pareto Members 1, 3 and 10) and com-
promised solution (Pareto Member 4) are compared to the baseline in Table 9.25. It 
can be seen that the best solutions for fitness 1 and 2 (Pareto Members 1 and 3) have 
higher aspect ratio and lower taper ratio at crank 1 and crank 2 than the baseline 
design while the compromised solution (Pareto Member 4) and best solution for fit-
ness 3 (Pareto Member 10) contain lower aspect ratio and higher taper ratio. Pareto 
Member 1 has very high sweep angle at inboard and slightly less sweep angle at 
outboard when compared to the baseline design.
The airfoil sections are compared in Table 9.26 and Fig. 9.51 where all Pareto 
Members have less thickness when compared to the baseline design. Pareto Mem-
bers 1, 3 and 4 have negative camber at crank 1 and tip section while Pareto Mem-
ber 10 has negative camber at crank 2 and tip.
Figure 9.52a, b, c compare the span wise Cp distributions between best solutions 
(Pareto Members 1, 3 and 10), compromised solution (Pareto Member 4) and 
the baseline design. Pareto Members 1 and 3 start to have leading edge pressure 
improvement at 40 % of the span while Pareto Members 4 and 10 improve pressure 
from 60 % of the span when compared to the baseline design.
Figure 9.53 shows the comparison of mono-static RCS at standard design fre-
quency (1.5 GHz) between Pareto member 4 (compromised solution), Pareto Mem-
ber 10 (best solution for fitness function 3) and the baseline design. Pareto Members 
4 and 10 produce 25 and 35 % lower mono-static radar signature respectively when 
compared to the baseline design. The RCS peak (black circles) of the baseline was 
found to be 3 and 177 degrees where the baseline produces higher RCS than Pareto 
Table 9.25   Comparison of wing configurations
Models
AR
b
λC1
λC2
ΛR−C1
ΛC1−C2
ΛC2−T
Baseline
4.45
18.9
19.7
19.7
55°
29°
29°
ParetoM1
7.56
25.20
15.1
15.1
59.40°
27.0°
26.60°
ParetoM3
7.48
25.32
16.7
16.7
50.34°
33.80°
29.76°
ParetoM4
3.75
17.81
28.0
28.0
51.70°
31.43°
29.80°
ParetoM10
3.37
16.42
36.5
21.6
51.70°
30.54°
27.11°
Table 9.26   Comparison of airfoil section configurations
Design
description
Baseline
(%c @%c)
Pareto M1
(%c @%c)
Pareto M3
(%c@%c)
Pareto M4
(%c @%c)
Pareto M10
(%c @%c)
ThickRoot
21 @45
20.0 @42.5
21.0 @41.3
19.6 @44.0
19.0 @41.6
CamberRoot
0.0
0.06 @37.3
0.03 @9.52
0.06 @84.1
0.11 @37.9
ThickC1
15 @50
10.5 @44.7
12.2 @49.4
12.6 @50.2
12.9 @50.5
CamberC1
0.0
− 0.16 @1.45
− 0.07 @14.7
− 0.09 @4.20
0.14 @2.20
ThickC2
8 @45
7.11 @45.3
6.60 @43.5
6.59 @42.3
6.30 @43.6
CamberC2
0.0
0.12 @76.1
0.05 @70.0
0.04 @5.41
− 0.07 @77.5
ThickTip
8 @45
6.02 @46.9
6.91 @46.9
6.33 @44.1
6.92 @44.0
CamberTip
0.0
− 0.04 @24.4
− 0.02 @17.0
− 0.01 @82.9
− 0.01 @75.4

259
9.6  Robust Multi-Disciplinary Aero-Electro-Structural UCAV Design Optimization
Members 4 and 10 marked with blue and red circles. Figure 9.54a and b com-
pare the bi-static RCS between Pareto Members 4, 10, and the baseline design. The 
results show that the current non-dominated solutions (Pareto member 4 and 10) 
produce lower observability by 17 and 20 % than the baseline design.
Figures 9.55a, b, c, d, e compares the aerodynamic performance and manoeu-
vrability (instantaneous turning radius) at the range of Mach numbers 0.7–0.85. The 
lift coefficient is compared in Fig. 9.55a. Pareto Member 3 (best solution for fitness 
2) indicates the highest lift coefficient along the Mach numbers. The lift distribution 
of Pareto Member 4 is slightly higher than the baseline lift curve from Mach 0.70 
to 0.76 while Pareto Member 3 shows highest lift coefficient. Figure 9.55b showing 
the drag coefficient distribution exhibits a common trend where all Pareto Members 
produce lower drag compared to the baseline design. Pareto member 1 shows the 
lowest drag along the Mach sweep. The comparison of lift to drag ratio is shown 
in Fig. 9.55c where Pareto Member 10 produces lower aerodynamic performance 
when Mach number is lower than 0.765 while Pareto Member 1 (best solution for 
fitness function 1) made the highest aerodynamic performance when compared to 
the other Pareto Members and baseline design. Figures 9.55d and 9.55e shows the 
comparison of manoeuvrability (instantaneous turn radius) at 45 bank angle. Pareto 
Fig. 9.51   Airfoil section shape comparison
 

260
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig. 9.52   a Pressure coefficients ( Cp) distribution at 0 and 20 % of span. b Pressure coefficients 
( Cp) distribution at 40 and 60 % of span. c Pressure coefficients ( Cp) distribution at 80 and 90 % 
of span
   

261
Member 3 made the smallest turning ratio which means it is superior when it com-
petes with the other solutions.
Top, side, front and three-dimensional view for compromised solution’s (Pareto 
Member 4) wing geometry are respectively shown in Fig. 9.56.
To conclude with this test case, it was demonstrated that all Pareto non-dominat-
ed solutions are better solutions with respect to aerodynamic performance, manoeu-
vrability and RCS signature. From the designer’s point of view, Pareto Member 4 
can be selected as J-UCAS prototype since it does not only produce higher cruise 
aerodynamic performance with higher manoeuvrability but also its shape provides 
low radar observability at mono and bi-static radar systems when compared to the 
baseline design.
9.7  Summary of Chapter
This chapter presents and analyses numerical experiments obtained from several ro-
bust multi-disciplinary design optimisation problems. The reader can easily observe 
through computation and optimization of these problems that as the complexity of 
the problem is increasing, the need of advanced EA methods is required.
Fig. 9.53   Mono-static radar signature comparison
Baseline 
Pareto M4 (-25%) 
Pareto M10 (-35%) 
 
9.7  Summary of Chapter

262
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
Fig.9.54   a Bi-static ( q) radar signature comparison. b Bi-static ( f) radar signature comparison
Baseline 
Pareto M4 (-17%) 
Pareto M10 (-20%) 
a
b
   

263
Fig. 9.55   a Lift coefficients ( Cl) vs. Mach numbers comparison between Pareto Members (1, 3, 
4 and 10) and baseline design. b Drag coefficients ( CD) vs. Mach numbers comparison between 
Pareto members (1, 3, 4 and 10) and baseline design. c Lift to drag ratio ( L/D) vs. Mach num-
bers comparison between Pareto Members (1, 3, 4 and 10) and baseline design. d Turning radius 
obtained by Pareto Members (1, 3, 4 and 10) and baseline design at the standard flight condition. 
e Turning radius vs. Mach numbers comparison between Pareto Members (1, 3, 4 and 10) and 
baseline design
BestOB2 
BestOB1 
ParetoM4 
Baseline 
BestOB3 
BestOB2 
BestOB1 
ParetoM4 
Baseline 
BestOB3 
BestOB2
BestOB1
ParetoM4
Baseline 
BestOB3
a
b
c
d
e
BestOB2 
BestOB1
ParetoM4
Baseline
BestOB3 
  
9.7  Summary of Chapter

264
9  Robust Multi-Objective and Multi-Disciplinary Model Optimization Test Cases
9.8  Appendix
Trade for $.39/100 shares Powerful online trading platform. Free demo and Unlim-
ited Shares!www.speedtrader.com
How to Buy Gold Physical Gold Shipped to Your Door Free Investor Kit. Since 
1960. Goldline.com/Buy-Gold
Merrill Edge Investing All Your Investment Needs Plus Banking Access From 
Merrill Edge.www.MerrillEdge.com
U.S. Oil & Gas Investment Monthly Income + Tax Benefits! $ 30k Minimum. 
IRA/401k Qualified. AmericanEnergyProperties.com
Market Timing with PWA Price Wave Analysis Works 2009 PWA 105 %, S&P 
500 19 %www.investmenttimingsoftware.com
References
1.	 Drela M. A user’s guide to MSES V 2.3. MIT
2.	 Lee DS, Periaux J, Gonzalez LF, Srinivas K, Onate E (2012) Robust multidisciplinary UAS 
design optimisation. Struct Multidiscip Optim 45(3):433–450
3.	 Hague D (January 1978) General aviation synthesis program (GASP), NASA
4.	 Jameson, Caughey D, Newman P, Davis R A brief description of the Jameson Caughey NYU 
Transonic Swept-Wing Computer Program FLO22, NASA Technical Memorandum, NASA 
TM X–73996
Fig. 9.56   Pareto Member 4 at top, side, front and 3D view
   

265
Chapter 10
Robust Airfoil Design Optimization with 
Morphing Techniques
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3_10
10.1  Overview
It is well known that morphing aircraft can change its shape for mission agility and 
control of flight. The main advantage of a morphing airfoil is its integrated shape 
control into an airfoil smart structure [1].
In this chapter, we describe and compare another technique, namely morphing 
design, with those discussed in previous chapters for single and multi- objective de-
sign optimization. This approach is based on the leading and trailing edge (LTED) 
deformation technique without taking into account a mechanism for actuation.
LTED morphing technology is simple and uses either a piezo or a hydraulic 
actuator. This approach can change significantly the shape of the wing or the airfoil 
and requires less modifications to the structure when compared to similar morph-
ing techniques. The LTED technology is still sensitive to uncertain flow conditions 
especially lift coefficient ( Cl) numbers and boundary layer transition positions ( xtr) 
which are directly related to the position/strength of shock on the suction/pressure 
side of the wing. Therefore it is critical to find suitable and reliable actuator posi-
tions and deformation angles using robust design methods.
This Chap. 10 also investigates the shape design optimization for morphing aero-
foil/wing to maximize the lift coefficient at take-off and landing conditions using 
Advanced Multi-Objective Genetic Algorithms (MOGA).

266
10  Robust Airfoil Design Optimization with Morphing Techniques
10.2  Morphing Airfoil/Wing Design Mechanism: Leading 
and Trailing Edge Deformation
10.2.1  Parameterization of Morphing Aerofoil/Wing: 
Leading and Trailing Edge Deformation
The Leading and Trailing Edge Deformation (LTED) morphing technique can be 
defined by four control parameters as shown in Fig. 10.1: the leading edge actuator 
position ( xLE), the trailing edge actuator position ( xTE), the deformation angle for 
leading edge ( θLE), and the deformation angle for trailing edge ( θTE).
Deformation angles comply with the right-hand rule. Figure 10.2 shows a mor-
phing technique mechanism consisting of four steps:
•	 Step 1: Find actuator positions for leading and trailing edges; xLE, yLE, xTE, yTE 
(marked as green crosses),
•	 Step 2: Deform leading edge by θLE,
•	 Step 3: Deform trailing edge by θTE,
•	 Step 4: Smooth sharp joint (marked as red circles shown in Fig. 10.2) using 
Bezier Spline Curves denoted by BSC1, BSC2, BSC3, and BSC4.
If the problem considers only trailing edge deformation then the morphing mecha-
nism will consist only of three following steps: Step1, Step 3 and Step 4.
10.2.2  Baseline Design
For the baseline design, a natural laminar flow airfoil RAE 5243 is selected as 
shown in Fig. 10.3. The baseline design has a maximum thickness ratio ( t/c) of 0.14 
at 41 % of the chord and a maximum camber of 0.018 at 54 % of the chord.
In the following Sects. 10.3 and 10.4, the shape of the baseline design will be 
adapted to control the transonic flow especially to maximize aerodynamic efficiency 
including lift to drag ratio ( L/D) at cruise conditions and fixed lift coefficient ( Cl).
Fig. 10.1   Control parameters for morphing techniques at fixed leading and trailing edge actuator 
positions
 

267
10.3  Morphing Airfoil/Wing Design Optimisation 
at Cruise Flight Conditions
10.3.1  Trailing Edge Deformation (TED) Design 
Optimisation
In this section, only TED Design Optimization is considered.
Problem Definition  This test case considers a single objective morphing air-
foil design optimization to minimize the total drag at a constant lift coefficient. 
This objective aims to maximize the lift to drag ratio ( L/D) allowing the aircraft 
Fig. 10.2   LTED morphing mechanism
 
Fig. 10.3   Baseline design (RAE 5243 airfoil) geometry (Note max t/c = 0.14 at 41 %c and max 
camber = 0.018 at 54 % of the chord)
 
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise Flight Conditions

268
10  Robust Airfoil Design Optimization with Morphing Techniques
to extend its flight range. The flow conditions are M∞ = 0.75, Cl∞ = 0.45819 and 
Re = 19.0 × 106. The fitness function for DMOGA is shown in (10.1).

(10.1)
subject to the constraint
Clmin = 0.45819
where CdTotal = CdVisous + CdWave
The constant lift coefficient is calculated using (10.2) which represents the mini-
mum lift coefficient of the aircraft in level flight.

(10.2)
where W is the weight force (m × g) of the aircraft, mass m = 77,564 kg and accelera-
tion of gravity g = 9.81 m/s2, ρ is the air density at 35,000 ft, ρ = 0.41 kg/s3, S is the 
wing area, S = 124.58 m2.
Design Variables  Upper and lower bounds values of design variables for trailing 
edge deformation (TED) are provided on Table  10.1. All Bezier Spline Curves 
(BSC) shown in Fig. 10.1, BSC3 and BSC4 have a constant length of 20 % of chord 
length. BSC3 and BSC4 have the same x-axis Bezier control points (starting, peak, 
finishing points). Therefore two (2) design parameters are considered in total.
Numerical Results  The algorithm was allowed to run one hour CPU time (as time 
stopping criterion) and 6,020 fitness function evaluations. Convergence occurred 
after 617 function evaluations as shown in Fig. 10.4.
Table 10.2 compares the aerodynamic characteristics obtained by the baseline 
design (RAE 5243 airfoil) and the optimal solution obtained by Distributed Multi-
objective GA (DMOGA) [2]. Even though applying optimal morphing configura-
tion slightly increases the wave drag, the viscous drag is reduced by 27.2 % which 
results in improving the lift to drag ratio (L/D) by 16.4 %.
Table 10.3 describes the optimal morphing (trailing deformation) configurations 
obtained by MOGA. Figure 10.5 compares the geometry of the baseline design and 
the baseline with the optimal morphing configurations. The optimal solution has 
the same maximum thickness ratio ( t/c) value 0.14 as the baseline design at 41 % 
of the chord, while the maximum camber is lowered by 1.2 % of the chord (max 
camber = 0.0066 at 29.0 %c).
Figure 10.6 compares the lift coefficient sweep obtained by the baseline design 
and the optimal morphing configuration at range of [0.1:0.8] with M∞ = 0.75 and 
Re = 19.0 × 106. Even though the optimal morphing solution produces lower total 
(
)
,
 
 
(
)
(
)
TE
TE
Total
f x
min Cd
min Cd v
Cd w
θ
=
=
+
2
  
2
/
min
C l
W
V S
ρ
=
Table 10.1   Design bounds for morphing air foil/wing using Trailing Edge Deformation (TED)
DVs
XTE
θTE
Lower bound
65.0
− 5.0°
Upper bound
75.0
+ 5.0°
DVs represents design variables: xTE is in the baseline chord length (% of the chord) [0:100] and 
deformation angle following the right-hand rule

269
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise Flight Conditions
Table 10.2   Aerodynamic characteristics obtained by TED design optimization
Aerofoil
CdViscous
CdWave
L/D
Baseline (RAE 5243)
0.0213
0.0074
15.93
With optimal SCB
0.0155 (− 27.2 %)
0.0088 (+ 19.0 %)
18.55 (+ 16.4 %)
CdViscous and CdWave represent viscous and wave drag respectively and the sum of them is the 
total drag of airfoil
Fig. 10.4   Convergence history for TED design optimisation
 
Fig. 10.5   Comparison of geometry obtained by baseline design and the optimal morphing con-
figurations obtained by DMOGA (max t/c = 0.14 at 41 %c and max camber = − 0.0066 at 29.0 %c)
 
Table 10.3   Optimal TED morphing configuration
Variables
XTE (%c)
θTE
Optimal TED
65.04
− 4.5195°

270
10  Robust Airfoil Design Optimization with Morphing Techniques
Fig. 10.6   CdTotal vs. Cl ( top) and CdWave vs. Cl ( bottom) sweep obtained by the baseline design 
and the optimal morphing configuration at range of [0.1:0.75] with M∞ = 0.75, Re = 19.0 × 106 and 
µxtr = 45 % of the chord
 

271
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise Flight Conditions
drag when the lift coefficient is lower than 0.55 (Fig. 10.6 top), it produces higher 
wave drag when the lift coefficient is higher than 0.38 (Fig. 10.6 bottom).
From the variations of Cd values with respect to Cl values on Fig. 10.6, it is nec-
essary to optimize the morphing configuration with uncertainty parameters in order 
to find the model which can produce lower and stable total drag. For uncertainty 
parameters, lift coefficients and boundary transition positions ( xtr) are considered 
since both are directly affecting the strength and shock position.
10.3.2  Robust Leading and Trailing Edge Deformation (LTED) 
Design Optimization
Problem Definition  This test case considers a robust multi-objective morphing 
airfoil design optimisation on the RAE 5243 airfoil to minimize the average and 
standard deviation of the total drag ( µ CdTotal, σ CdTotal) at flow conditions M∞ = 0.75 
and Re = 19.0 × 106.
Introducing uncertainties on operating flow conditions, two sets of ten values 
of lift coefficient ( Cl) and then of boundary layer transition positions ( xtr) are 
considered. Both uncertainty parameters; Cl and xtr can be statistically defined as 
µCl = 0.5558, σCl = 0.0611 in a range of Cl∞∈ [0.458, 0.648], and µxtr = 0.2565, 
σxtr = 0.1604 in a range of xtr∞ ∈ [0.0 %, 50.0 % of the chord]. The candidate morph-
ing airfoil/wing models will be evaluated at hundred flight conditions (10xtr × 10 Cl). 
The robust fitness functions are shown in (10.3) and (10.4) respectively.

(10.3)

(10.4)
where n and m represent the number of boundary layer transition positions and Cl 
conditions respectively.
This optimisation procedure uses the Algorithm 6 in Sect. 6.5.7 Chap. 6.
Design Variables  The lower and upper bounds of design variables for a morph-
ing geometry search space of leading and trailing edge deformation are given on 
Table 10.4. The length of all Bezier Spline Curves (BSC shown in Fig. 10.2): BSC1, 
BSC2, BSC3, and BSC4, are selected as additional design parameters to find more 
sophisticated morphing shapes. Finally eight design variables are considered in 
total.
Numerical Results  The algorithm was allowed to run twenty (20) CPU hours (with 
a selected time stopping criterion) and 600 function evaluations. Figure 10.7 com-
pares the Pareto optimal front obtained by Robust Optimization (RO-LTED with the 
baseline design and the optimal solution obtained in Sect. 10.3.1 denoted as Sin-
gle Objective Trailing Edge Deformation (SO-TED). It can be seen that all Pareto 
(
)
1
1
1
1
min
ij
n
m
Total
Total
i
j
f
Cd
Cd
n
m
µ
=
=
=
=
× ∑∑
(
)
(
)
2
2
1
1
1
min
1
ij
n
m
Total
Total
Total
i
j
f
Cd
Cd
Cd
n
m
σ
µ
=
=
=
=
−
×
−∑∑

272
10  Robust Airfoil Design Optimization with Morphing Techniques
optimal solutions in Zone-A dominate the baseline design and the optimal solution: 
SO-TED (obtained in Sect. 10.3.1) in both the mean total drag and total drag stan-
dard deviation. In Zone-B, the baseline design dominates SO-TED. Pareto members 
2 and 3 are selected as a compromised solution and denoted as RO-LTED.
Table 10.5 compares the fitness values obtained by the baseline design, the op-
timal solutions from Sect. 10.3.1 and the Pareto members 1 (best solution for the 
objective 1), 2 and 3 (compromised solutions), and 8 (best solution for the objective 
2). It can be seen that compromised solutions, Pareto Members 2 and 3 have better 
drag quality in terms of mean and standard deviation when compared to the baseline 
design, SO-TED and best solutions (Pareto Members 1 and 8).
It can be seen that the optimal solution obtained in Sect. 10.3.1 has higher mean 
total drag and higher total drag standard deviation by 5.3 and 73 % respectively when 
compared to the baseline design. Even though the best solutions (Pareto Members 1 
and 8) for objectives 1 and 2 have lower mean total drag and lower total drag stan-
dard deviation respectively, one of the compromised solutions Pareto Member 2 has 
Table 10.4   Design bounds for morphing airfoil using leading and trailing edge deformation
DVs
XLE
θLE
LBSC1
LBSC2
XTE
θTE
LBSC3
LBSC4
Lower
15.0
− 25.0°
10.0
10.0
65.0
− 5.0°
10.0
10.0
Upper
25.0
+ 10.0°
25.0
25.0
75.0
+ 35.0°
30.0
30.0
Note: DVs represents leading and trailing edge design variables. xLE, xTE are expressed with 
respect to the baseline chord length (%c) [0:100] and deformation angle follows the right-hand 
rule. LBSCi represents the length of the ith BSC in chord percentage (%)
Fig. 10.7   Pareto optimal front for robust LTED design optimisation
    

273
lower mean total drag and lower standard deviation of total drag when compared 
to the baseline design. The mean and standard deviations obtained by the baseline 
design, single-objective and robust Pareto members can also be compared using 
Cumulative Distribution Function (CDF) and Probability Density Function (PDF). 
Figure 10.8 shows that the robust optimal solution lowers mean total drag by 31 % 
when compared to the baseline design. The standard deviation (sensitivity) can be 
analysed by evaluating gradients of the lines to the CDF value of 0.5 or 1 (steeper 
gradient means lower sensitivity). The PDF plotted in Fig. 10.8 (bottom) shows 
sensitivity comparison between the baseline design, single-objective and robust op-
timal solutions. It can be seen that the solution (Pareto Member 2) obtained by the 
robust design method has lower sensitivity (narrower and taller bell curve). Pareto 
Member 2 obtained by the robust design method reduces the total drag sensitivity 
by 24 % while the optimal solution obtained in Sect. 4.3 (SO-TED) has higher total 
drag sensitivity by 73 % when compared to the baseline design. In other words, the 
robust design method has capabilities to produce a set of solutions, which have bet-
ter performance and sensitivity when compared to the single-objective optimization 
method.
The optimal morphing configurations (Pareto Member 2) for robust design op-
timisation are described in Table 10.6. Figure 10.9 compares the geometry of the 
baseline design and the baseline with the red-dot geometry of optimal morphing 
configurations. The optimal solution has the same maximum thickness ratio ( t/c) 
of 0.14 as the baseline design at 41 % of the chord, while the maximum camber is 
lowered by 0.6 %c (max camber = —0.006 at 17.4 %c).
Table 10.7 compares the aerodynamic characteristics obtained by the baseline 
design (RAE 5243) and the robust optimal solution (Pareto member 2) at the flight 
conditions of M∞ = 0.75, Cl∞ = 0.5558, Xtr = 25.65 % of the chord and Re = 19.0 × 106. 
The robust optimal solution reduces the viscous and wave drag by 43 and 26 % re-
spectively that results in improving the lift to drag ratio ( L/D) by 66 %.
Figure 10.10 shows pressure coefficient contours obtained by the baseline design 
and the robust optimal solution (Pareto member 2) at flight conditions of M∞ = 0.75, 
Cl∞ = 0.5558, Xtr = 25.65 %c and Re = 19.0 × 106. It can be seen that the position of 
shock is delayed and its strength is reduced.
Table 10.5   Comparison of fitness values obtained by the robust design approach
Aerofoil
µCd
σCd
µL/D
Baseline
3.93 × 10−2
6.40 × 10−3
14.14
SO-TED
4.14 × 10−2 (+ 5.3 %)
11.1 × 10−3 (+ 73.4 %)
13.42 (− 5.1 %)
BO1-PM1
2.55 × 10−2 (− 35.1 %)
6.07 × 10−3 (− 5.1 %)
21.79 (+ 54.1 %)
CS-PM2
2.71 × 10−2 (− 31.0 %)
4.84 × 10−3 (− 24.4 %)
20.51 (+ 45.0 %)
CS-PM3
3.02 × 10−2 (− 23.1 %)
4.16 × 10−3 (− 35.0 %)
18.40 (+ 30.1 %)
BO2-PM8
3.68 × 10−2 (− 6.4 %)
2.28 × 10−3 (− 64.3 %)
15.10 (+ 6.8 %)
PMi represents Pareto optimal member obtained by robust design optimization. BO i and CS 
denote the best solution for the ith objective and compromised solution
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise Flight Conditions

274
10  Robust Airfoil Design Optimization with Morphing Techniques
Fig. 10.8   Mean and standard deviation of total drag comparison using CFD ( top) and PDF 
( bottom)
     
Table 10.6   Optimal morphing (LTED) configurations for the robust design optimisation
DVs
XLE
θLE
LBSC1
LBSC2
XTE 
θTE
LBSC3
LBSC4
LTED
17.2
+ 6.5°
13.4
10.8
73.0
− 3.0°
21.5
25.3
Note: DVs represents leading and trailing edge design variables. XLE, XTE are expressed with 
respect to in the baseline chord length (%c) [0:100] and deformation angle follows the right-
hand rule. LBSCi represents the length of the ith BSC (%c)

275
Figure 10.11 compares the lift coefficient sweep obtained by the baseline design, 
the optimal solution obtained in Sect. 10.3.1 (SO-TED) and the robust optimal mor-
phing configuration (Pareto Member 2: RO-LTED) at range of Cl∞ ∈ [0.1:0.7] with 
M∞ = 0.75, Xtr = 25.65 %c and Re = 19.0 × 106. It can be seen that SO-TED produces 
lower total drag when Cl is lower than 5.5 while the robust optimal solution pro-
duces lower total drag for all Cl values.
Figure 10.12 compares the lift coefficient sweep obtained by the baseline de-
sign, the optimal solution obtained in Sect. 10.3.1 (SO-TED) and the robust optimal 
Fig. 10.9   Baseline design with the optimal LTED morphing configurations (max t/c = 0.14 at 
41 %c and max camber = − 0.006 at 17.4 %c)
    
Table 10.7   Aerodynamic characteristics obtained by LTED design optimisation
Aerofoil
CdViscous
CdWave
L/D
Baseline (RAE 5243)
0.0304
0.0078
14.498
With optimal SCB
0.0172 (− 43.4 %)
0.0058 (− 25.6 %)
24.070 (+ 66.0 %)
CdViscous and CdWave represent viscous and wave drag, and the sum of them is the total drag of 
airfoil
Fig. 10.10   Pressure ( CP) contours obtained by the baseline design and the robust optimal solu-
tion (Pareto member 2) at the flight conditions of M∞ = 0.75, Cl∞ = 0.5558, Xtr = 25.65 %c and 
Re = 19.0 × 106
     
10.3  Morphing Airfoil/Wing Design Optimisation at Cruise Flight Conditions

276
10  Robust Airfoil Design Optimization with Morphing Techniques
Fig. 10.11   CdTotal vs. Cl ( top) and CdWave vs. Cl ( bottom) sweep obtained by the baseline design 
and the optimal morphing configuration at Cl range of [0.1:0.7] with M∞ = 0.75, Re = 19.0 × 106 and 
µxtr = 25.65 % of the chord
     

277
morphing configuration (Pareto Member 2) at range of M∞ ∈ [0.5:0.75] with 
µCl = 0.5558, µxtr = 25.65 %c and Re = 19.0 × 106. It can be seen that SO-TED pro-
duces higher total drag when Mach number is higher than 0.748 when compared 
to the baseline design while the robust optimal solution produces lower total drag 
when Mach number is higher than 0.58.
In this section, a robust evolutionary optimization technique has been applied to 
the morphing wing/aerofoil design optimisation. An analytical research shows the 
benefits of coupling an optimization method with robust design techniques to pro-
duce stable and high performance solutions. The use of a LTED morphing technique 
on an existing airfoil, can reduce significantly the transonic drag which will save 
operating and manufacturing cost as well as emission reduction.
10.4  Morphing Airfoil/Wing Design Optimization 
at Take-Off and Landing Conditions Using Moga 
and Hybridized Game with Moga
Problem Definition  This test case considers a multi-objective optimization of a 
LTED morphing method with low/middle design complexity using MOGA and 
HMOGA. For the baseline design, a natural laminar flow around an airfoil RAE 
Fig. 10.12   CdTotal vs. Cl ( top) and CdWave vs. Cl ( bottom) sweep obtained by the baseline design 
and the optimal morphing configuration at Cl range of [0.1:0.7] with M∞ = 0.75, Re = 19.0 × 106 and 
µxtr = 25.65 % of the chord
     
10.4  Morphing Airfoil/Wing Design Optimization at Take-Off …

278
5243 is selected as shown in Fig. 10.3. Figure 10.13 shows the computational mesh 
of 14,301 vertices and 27,317 elements generated by by GiD software from CIMNE 
[3]. The mesh conditions on the suction and pressure sides of the airfoil are set 
by constant ratio. In other words, there will be the same mesh conditions around 
the airfoil even though the shape of the airfoil is changed. Figure 10.14 shows the 
pressure and Mach contour obtained by the baseline design at both the take-off 
( M∞=0.2, α = 15.0°) and landing ( M∞ = 0.12, α=17.18°) conditions.
The shape of the baseline design will be adapted to control the subsonic/transon-
ic flow especially to maximise the lift coefficient. For the optimization, the popula-
tion size of Pareto-Game and Nash-Game is set as twenty (20) and the probabilities 
of mutation and crossover are set as 1/n and 0.9 respectively (where n is the number 
of design variables). With the hybridized games approach, a Pareto-Game considers 
the total number ( n) of design variables as the sum of design variable numbers for 
Nash players. In other words, a Nash-Game will have higher mutation probability 
providing a better exploration when compared to a Pareto-Game. At a frequency of 
twenty (20) function evaluations, elite designs obtained by Nash-Game are seeded 
to Pareto-Game only if its fitness value dominates other fitness values in the Pare-
to’s buffer, a well known Darwinian “above average” strategy based on the concept 
of survival of the fittest.
The objectives of this optimization are to maximize lift coefficients ( Cl) at both 
the take-off ( M∞ = 0.2, α = 15.0°) and landing ( M∞ = 0.12, α = 17.18°) conditions. 
Hybrid-Game (HRMOGA) consists of three players; one Pareto-Player ( PP), two 
Nash-Players ( NP1 and NP2). The fitness functions for Pareto-Player ( f1 and f2) and 
Nash-Game ( fNP1 and fNP2) are shown in (10.5)—(10.8).

(10.5)

(10.6)
(
)
(
)
1
1
2
3
4
,
,
,
,
,
,
,
min 1
LE
LE
BSC
BSC
TE
TE
BSC
BSC
TakeOff
f
x
L
L
x
L
L
Cl
θ
θ
=
(
)
(
)
2
1
2
3
4
,
,
,
,
,
,
,
min 1
LE
LE
BSC
BSC
TE
TE
BSC
BSC
Landing
f
x
L
L
x
L
L
Cl
θ
θ
=
Fig. 10.13   Mesh conditions for the baseline design obtained by GiD software
    
10  Robust Airfoil Design Optimization with Morphing Techniques

279

(10.7)

(10.8)
where design variables with * are elite designs obtained by Nash-Play-
ers; 
*
*
*
*
1
2
,
,
,
LE
LE
BSC
BSC
x
L
L
θ
 are elite designs obtained by Nash-Player 1, and 
*
*
*
*
3
4
,
,
,
TE
TE
BSC
BSC
x
L
L
θ
 are elite designs from Nash-Player 2. The Pareto-Player will 
optimise both leading and trailing edge deformation parameters to maximize Cl at 
both the take-off and landing conditions. Simultaneously, Nash-Player 1 will op-
timize only leading edge deformation (LED) parameters with an elite design of 
(
)
(
)
*
*
*
*
1
1
2
3
4
,
,
,
,
,
,
,
min 1
NP
LE
LE
BSC
BSC
TE
TE
BSC
BSC
Landing
f
x
L
L
x
L
L
Cl
θ
θ
=
(
)
(
)
*
*
*
*
2
1
2
3
4
,
,
,
,
,
,
,
min 1
NP
LE
LE
BSC
BSC
TE
TE
BSC
BSC
Landing
f
x
L
L
x
L
L
Cl
θ
θ
=
Fig. 10.14   Cp contours obtained by the baseline design at the take-off ( top)—CpTake Off range 
[− 14:1.3] and landing ( bottom)—CpLanding range [− 15:2] conditions
    
10.4  Morphing Airfoil/Wing Design Optimization at Take-Off …

280
trailing edge deformation obtained by Nash-Player 2 at take-off conditions. Nash-
Player 2 optimises trailing edge deformation (TED) with elite design parameters 
for leading edge obtained by Nash-Player 1 at landing conditions. The stopping 
criterion is set by a pre-defined elapse time (25 CPU hours) for both RMOGA and 
HRMOGA optimization software.
Design Variables  The design variable bounds for a high complex morphing geome-
try are given in Table 10.8. To find a more sophisticated morphing shape, the lengths 
of all Bezier Spline Curves (BSC); BSC1, BSC2, BSC3, and BSC4, are considered 
as additional design parameters. In total, eight (8) design variables are considered.
The distribution of design variables for each player is shown in Table 10.9. The 
Nash-Players 1 and 2 consider only four (4) design variables for leading edge defor-
mation parameters ( XLE, θLE, LBSC1, LBSC2) and trailing edge deformation parameters 
( XTE, θTE, LBSC3, LBSC4) respectively while the Pareto-Player of HMOGA considers 
all eight design variables ( xLE, θLE, LBSC1, LBSC2, XTE, θTE, LBSC3, LBSC4).
Numerical Results  Two optimization algorithms, RMOGA and HRMOGA were 
allowed to run 25 hours of CPU time and 640 and 285 function evaluations respec-
tively using a single 4 × 2.8 GHz processor. Figure 10.15 compares the Pareto opti-
mal front obtained by RMOGA and HRMOGA software with the baseline design. 
It can be seen that both RMOGA and HRMOGA produce better solutions when 
compared to the baseline design. The Pareto optimal solutions obtained by the 
HRMOGA optimization software dominate the optimal solutions computed with 
RMOGA (without hybridization).
Figure 10.16 compares the convergence history obtained by RMOGA and HR-
MOGA software in terms of the normalised function evaluations and the best fitness 
value for Objective 1. Even though RMOGA software needs more computational 
time or more function evaluations to capture Pareto optimal solutions obtained by 
HRMOGA, two similar solutions (< 3.5 % fitness value difference) are selected to 
compare the computational efficiency: HRMOGA (67 function evaluations (5.8 
Table 10.8   Design bounds for morphing aerofoil/wing using leading and trailing edge deforma-
tion (LTED)
DVs
xLE
θLE
LBSC1
LBSC2
xTE
θTE
LBSC3
LBSC4
Lower
15.0
− 25.0°
10.0
10.0
65.0
− 5.0°
10.0
10.0
Upper
25.0
+ 10.0°
25.0
25.0
75.0
+ 35.0°
30.0
30.0
DVs represents leading and trailing edge design variables. XLE, XTE are expressed with respect 
to the baseline chord length (%c) [0:100] and deformation angle follows right-hand rule. LBSCi 
represents the length of the ith BSC (% of the chord)
Table 10.9   Pareto optimal SCB design parameters
Types
Hybridized MOGA (HMOGA)
MOGA
Pareto P
NashP1
NashP2
Leading edge
√
√
√
Trailing edge
√
√
√
Note: GP, NP1 and NP2 represent global player and Nash-Players 1 and 2 respectively
10  Robust Airfoil Design Optimization with Morphing Techniques

281
Fig. 10.15   Optimal Pareto fronts obtained by MOGA and HMOGA software
    
Fig. 10.16   Convergence history ( f1 vs. normalised function evaluation) obtained by RMOGA and 
HRMOGA software
    
10.4  Morphing Airfoil/Wing Design Optimization at Take-Off …

282
CPU hours) with fitness functions values f1 = 0.3292 and f2 = 0.3695) and RMOGA 
(560 function evaluations (22.0 CPU hours) with fitness functions values: f1 = 0.3390 
and f2 = 0.3816). It can be seen that the HRMOGA approach reduces the computa-
tional cost of the RMOGA run by 16.1 CPU hours. In other words, applying a Nash 
Game—Pareto Game coalition improves the optimization efficiency by 73 %!
Table 10.10 compares the fitness values obtained by RMOGA, HRMOGA soft-
ware and the baseline design (RAE 5243 airfoil) for Objectives 1 and 2. The optimal 
solutions obtained by RMOGA and HRMOGA software provide higher lift coef-
ficient for both take-off and landing conditions when compared to the baseline de-
sign. Pareto Member 5 (PM5) obtained by RMOGA, and Pareto Member 2 (PM2) 
obtained by HRMOGA are selected for further investigation.
The optimal morphing configurations obtained by RMOGA and HRMOGA 
optimization procedures are described in Table 10.11. Figure 10.17 compares the 
Table 10.10   Fitness values obtained by MOGA and hybridized MOGA software
Airfoil
1/ClTake Off
1/ClLanding
Baseline
0.5906
0.4589
RMOGA (PM5)
0.3433 (− 41.8 %)
0.3626 (− 21.0 %)
HRMOGA (PM1)
0.3282 (− 44.4 %)
0.3584 (− 22.0 %)
HRMOGA ( PM2)
0.3434 (− 41.8 %)
0.3406 (− 25.7 %)
PM i represents the ith Pareto member
Table 10.11   Optimal morphing (LTED) configurations for the robust design optimization
DVs
xLE
θLE
LBSC1
LBSC2
xTE
θTE
LBSC3
LBSC4
RMOGA
23.7
− 22.4° 
23.7
11.4
69.3
34.3°
26.2
15.4
HRMOGA
21.9
− 20.6°
12.3
21.4
66.0
34.4°
20.2
13.6
DVs represents leading and trailing edge design variables. XLE, XTE are expressed with respect 
to in the baseline chord length (%) [0 %:100 %] and deformation angle follows right-hand rule. 
LBSCi represents the length of the ith BSC (% of the chord)
Fig. 10.17   Baseline design with the optimal morphing configurations obtained by RMOGA soft-
ware (max t/c = 0.14 at 41 %c and max camber = 0.153 at 63.9 %c) and HRMOGA software (max 
t/c = 0.14 at 41 %c and max camber = 0.160 at 62.5 % of the chord)
    
10  Robust Airfoil Design Optimization with Morphing Techniques

283
geometry of the baseline design and the baseline coupled with the optimal morph-
ing configurations obtained by RMOGA and HRMOGA software. Optimal solu-
tions have the same maximum thickness ratio ( t/c) of 0.14 at 41 % of the chord as 
the baseline design while increasing the maximum camber; with RMOGA approach 
(max camber = 0.154 at 64.0 %c and c = 0.919) and with HRMOGA approach (max 
camber = 0. 160 at 62.5 %c and c = 0.920). Both optimal solutions have higher cam-
ber by 14 % of the chord and lower chord length by 8.0 %.
Figure 10.18 compares pressure contours obtained by the baseline design with 
the optimal morphing configurations (Pareto Member 2) obtained by the HRMOGA 
Fig. 10.18   Cp contours obtained by Pareto member 2 (PM2) at the take-off ( top)—CpTake Off range 
[− 14:1.3] and landing ( bottom)—CpLanding range [− 15:2] conditions
     
10.4  Morphing Airfoil/Wing Design Optimization at Take-Off …

284
optimization procedure at take-off and landing conditions. It can be seen that the 
optimal morphing configurations has a wider high pressure at the pressure side of 
the airfoil when compared to the baseline design shown in Fig. 10.14.
10.5  Conclusion and Future Research
This chapter discussed difficult multi-objective morphing design problems. It was 
shown that as the complexity of the problem is increased then the need of advanced 
EA methods is required.
Numerical results of this section show benefits of coupling an optimization 
method with robust design techniques to produce stable and high performance solu-
tions. The use of LTED-morphing techniques on an existing 2D airfoil can reduce 
significantly the transonic drag which will save operating and manufacturing cost 
as well as CO2 emission reduction and also maximize lift in the case of landing and 
take off conditions.
Future work will investigate the extension of robust morphing design optimiza-
tion using smart structures on 3D wings and study their impact on flight control.
10.6  Summary of Chapter 10
To summarize the morphing optimization test case implemented in Sect. 10.4.2 via 
Leading and Trailing Edge Deformation (LTED) morphing configurations on the 
baseline design, the RAE 5243 baseline airfoil is optimized using RMOGA and 
HRMOGA approaches. It is concluded from numerical experiments that morphing 
techniques are efficient for controlling the flow at both take-off and landing condi-
tions. The designer may choose the optimal morphing configurations (Pareto Mem-
ber 2) obtained by HRMOGA software (Sect. 10.4.2) since such a Game coalition 
approach can increase significantly the lift coefficient by 42 % at take-off conditions 
while improving 26 % of the lift coefficient at landing conditions.
References
1.	 Friswell MI, Inman D (2006) Morphing concepts for UAVs. 21st Bristol UAV systems confer-
ence
2.	 Lee DS, Bugeda G, Periaux J, Onate E (2011) Robust active shock control bump design optimi-
sation using parallel hybrid-game. In: 23rd international conference on parallel computational 
fluid dynamics, Barcelona Spain
3.	 GID Manual CIMNE. http://gid.cimne.upc.edu/support/manuals)
10  Robust Airfoil Design Optimization with Morphing Techniques

285
© Springer Science+Business Media B.V. 2015
J. Periaux et al., Evolutionary Optimization and Game Strategies for Advanced 
Multi-Disciplinary Design, Intelligent Systems, Control and Automation: Science 
and Engineering 75, DOI 10.1007/978-94-017-9520-3
Appendix: Two “Hands-On” Examples 
of Optimization Problems
A.1  Overview
In this Appendix the numerical implementation of multi-objective problems of in-
creasing complexity using a step-by-step optimization procedure is described in 
detail. However it is highly suggested that the reader consult Chaps. 6–10 before 
attempting to implement the hands-on examples. More detailed results of these 
“Hands-on” test cases can be obtained by contacting the authors (felipe.gonzalez@
qut.edu.au, jperiaux@gmail.com, ds.chris.lee@gmail.com).
A.2  Reconstruction of BI-NACA Using HAPEA 
and NASH-EA
A.2.1  Introduction
In this hands-on example, two different evolutionary optimisation methods de-
scribed in previous chapters are investigated; the first method is an EA with multi-
population/multi-fidelity Pareto optimality; Hierarchical Asynchronous Parallel 
Evolutionary Algorithm (HAPEA mentioned in Chap. 2). The second method is 
Nash strategy, named Nash-EA and described in Chap. 2. These optimisation meth-
ods are coupled to a pre/post processor GiD and aerodynamic analysis software 
PUMI for the reconstruction/inverse aerodynamic design problem.
A.2.2  Definition of the Test Case
Computational Domain  The baseline design is shown in Fig.  A.1 where two 
NACA0012 aerofoils are placed at a distance of 50 % of chord length of NACA0012.

286
This reconstruction design is a single-objective problem to capture the shape of 
the baseline design (BI-NACA0012).
Figure A.2 shows the unstructured mesh around BI-NACA0012 with 7785 nodes 
and 14,884 triangles. The mesh generation takes only 9 s.
Mathematical Modelling  The chord length of each NACA0012 aerofoil is one i.e. 
c = 1 m. The outer boundary of the computational domain size is 10 m.
Boundary Conditions  Upstream entrance: vx = v∞cos( α), vy = v∞sin( α), angle of 
attack α = 6.0°
Downstream exit: free boundary conditions
Aerofoil surface: no-slip condition
Flow Conditions  The baseline design is tested at the following flow conditions; 
Mach ( M∞) = 0.3, angle of attack (α) = 6.0° and Reynolds number (Re) = 1.0E + 6. 
The flow field is solved by PUMI software (see Sect. A.2.4) using an unstructured 
finite Euler analyser.
Figure A.3 shows the coefficient pressure ( Cp) distribution of the baseline design 
and the Mach contour is shown in Fig. A.4. They are automatically plotted by GiD.
A.2.3  Optimization
The objective is to minimize the pressure deviation between the baseline configu-
ration (BI-NACA0012) and the geometries of candidates. Both the computational 
efficiency and quality design obtained by HAPEA and Nash-EA are compared.
Appendix: Two “Hands-On” Examples of Optimization Problems
Fig. A.1   Baseline design (Bi-NACA0012)
 

287
Objective Functions  The optimization considers the minimization of pressure 
deviation between target (BI-NACA0012) and candidate geometry using HAPEA 
software and Nash-EA software (see A.2.4). Two different types of fitness functions 
are used:
HAPEA:
When using HAPEA software (see A.2.4), the fitness function is:

(A.1)
where n (and respectively—is the number of pressure positions for upper and lower 
aerofoils respectively. PT is the target pressure coefficient distribution while PC is 
the candidate pressure coefficient distribution.
NASH:
The optimisation problem consists of minimizing the pressure deviation between 
BI-NACA0012 and candidate using Nash-EA with two Nash-Players (NP1, NP2). 
The fitness function defined in (A.1) is now split into (A.2) for Nash Player 1) and 
(A.3) for Nash Player 2:

(A.2)
(
)
(
)
(
)
2
2
1
1
min
,
i
i
j
j
n
m
Deviation
Deviation
T
C
T
C
i
j
f
P
P
P
P
P
P
=
=
=
=
−
+
−
∑
∑
f
P
P
P
P
P
P
NP
Deviation
Deviation
T
C
i
n
T
C
i
i
j
j
1
2
1
=
(
)
=
−
(
) +
−
(
=∑
min
,
*
 
)
=∑
2
1
j
m
A.2  Reconstruction of BI-NACA Using HAPEA and NASH-EA
Fig. A.2   Computational domain and unstructured mesh around a BINACA 0012 obtained by GiD
 

288
Appendix: Two “Hands-On” Examples of Optimization Problems
Fig. A.3   The target Cp distribution obtained by PUMI software
 
Fig. A.4   Target mach contours computed with PUMI software
 

289

(A.3)
where n and m represent the number of points considered on the upper and lower 
aerofoils respectively. PT is the target Cp distribution while PCi
*  and PCj
*  are the 
Cp distributions obtained on elite airfoils from Nash-Player 1 and Nash-Player 2 
respectively.
Design Variables/Encoding  Design bounds for the reconstruction inverse problem 
are shown in Fig. A.5 where the normal triangles represent the upper thickness 
bounds (30 % of the baseline) while the inverse triangles are for lower thickness 
bounds (5 % of the baseline). The mean camber line design bounds are marked by 
upper half-filled and lower half-filled circles. The airfoil geometry is represented 
using Bezier curves with a combination of mean line and thickness distribution. 
Each airfoil contains eighteen (18) mean and thickness control points therefore, a 
total of thirty six (36) design variables is considered for the reconstruction of this 
BI-NACA0012 baseline airfoil.
Constraints  Geometry constraints are shown on Table A.1 and Table A.2.
Definition of the EA Strategy  Two optimization approaches are implemented: the 
first approach uses the HAPEA software using three (3) layers with seven (7) differ-
ent populations. Each node (Node 0 ~ Node 6) in HAPEA considers all of the airfoil 
f
P
P
P
P
P
P
NP
Deviation
Deviation
T
C
i
n
T
C
i
i
j
j
2
2
1
=
(
)
=
−
(
) +
−
(
=∑
min
,
*
 
)
=∑
2
1
j
m
A.2  Reconstruction of BI-NACA Using HAPEA and NASH-EA
Fig. A.5   Design bounds for NACA0012
 

290
Appendix: Two “Hands-On” Examples of Optimization Problems
design variables made of upper and lower airfoils with different time step sizes of 
the aerodynamic PUMI analysis tool (see Sect. A.2.4). The second approach uses 
the Hybridized EA using one Global-Player and two Nash-Players. The Global-
Player (GP) optimises upper and lower airfoil shapes (with thirty six (36) design 
variables) to minimise the pressure deviation between the target (shown in (A.1) 
and Fig. A.1) while Nash-Player 1 (NP1) and Nash-Player 2 (NP2) minimize the 
pressure deviation by optimising both the upper airfoil geometry (NP1: with eigh-
teen (18) design variables) and the lower airfoil shape (NP2: with eighteen (18) 
design variables).
Search Space  The search space for the Bi-NACA aerofoil shape can be found on 
Tables A.1 and A.2.
A.2.4  Software and Computer Facilities Needed for Solving the 
Inverse Problem
The software modules necessary to implement the above test case are:
•	 Structured/Unstructured Mesh Generator: GiD or FreeFem++  (in this example 
GiD is utilised) [1].
•	 Flow Analyser: Compressible Euler or Navier-Stokes solver—NSC2KE or 
PUMI (in this example, the PUMI (Euler) software is utilised) [2, 3].
•	 Optimizer: Simple EAs/GAs or MOEAs (in this example HAPEA and Hybrid-
ized EAs software are utilised).
•	 Pre/Post-Processor: GNUPLOT or GiD software (in this example GiD software 
is utilised) [4, 1].
•	 Computer used: two 2.4 GHz processors.
Table A.1   Mean camber line control points for upper and lower NACA0012 aerofoil (Remark: 
Mx represents a set of fixed mean camber x-coordinates while LMy and UMy are lower and upper 
bounds of mean camber y-coordinates)
Mx
0.01
0.025
0.05
0.10
0.30
0.45
0.70
0.85
0.95
LMy
− 0.01
− 0.01
− 0.01
− 0.01
− 0.01
− 0.01
− 0.01
− 0.01
− 0.01
UMy
0.01
0.01
0.01
0.01
0.01
0.01
0.01
0.01
0.01
Table A.2   Thickness control points for upper and lower NACA0012 aerofoil (Note: Tx repre-
sents a set of fixed thickness x-coordinates. LTy and UTy are lower and upper bounds of thickness 
y-coordinates.)
Tx
0.01
0.025
0.05
0.10
0.30
0.45
0.70
0.85
0.95
LTy
0.0238
0.021
0.0396
0.0554
0.0420
0.0490
0.0256
0.0143
0.0056
UTy
0.0472
0.055
0.0569
0.0748
0.0960
0.0892
0.0586
0.0328
0.0129

291
A.2.5  A Step by Step Design Optimisation Procedure
With HAPEA  The PUMI solver is utilised and the following specific parameters are 
considered for the evolutionary optimiser using a hierarchical topology (HAPEA) 
as shown in Fig. A.6.
1st Layer
Population size of 5 and intermediate recombination with tolerance residual 
1 × 10−6 of the PUMI solver
2nd Layer
Population size of 20 and intermediate recombination with tolerance residual 
1 × 10−5 of the PUMI solver
3rd Layer
Population size of 30 and intermediate recombination with tolerance residual 
1 × 10−4 of the PUMI solver
With NASH  This reconstruction design is a single-objective problem to capture the 
shape of the baseline design (BI-NACA0012) using Hybridized Games as shown in 
Algorithm 3 introduced in Sect. 6.5.4 and Fig. A.7.
The PUMI solver is utilized and the following specific parameters are consid-
ered for the evolutionary optimizer with two Nash-Players.
Nash Player 1: Population size of 20 (Upper airfoil) with residual 1 × 10−6.
Nash Player 2: Population size of 20 (Lower airfoil) with residual 1 × 10−6.
Fig. A.6   Sequential procedure of the HAPEA algorithm
 
A.2  Reconstruction of BI-NACA Using HAPEA and NASH-EA

292
Appendix: Two “Hands-On” Examples of Optimization Problems
A.2.6  Analysis and Synthesis of Results Obtained by HAPEA 
and Nash-EAs Software
The computational CPU cost in terms of function evaluations run with HAPEA and 
Nash-EAs is compared on two 2.4 GHz processors.
Results obtained with HAPEA  The HAPEA algorithm was allowed to run approxi-
mately 740 function evaluations and was stopped after 50 h of CPU as shown in 
Fig. A.8. The converged fitness value 1.1556 obtained by Node 0 ( fNode0 = 1.1556) 
in HAPEA indicates a difference of 0.77 % between the optimal solution and the 
target.
Figure A.9a compares the geometry of the baseline design to the optimal airfoils 
obtained by HAPEA and Mach contours are illustrated in Fig. A.9b; Cp distribution 
comparisons for upper and lower airfoils are shown in Fig. A.10. A good agreement 
is observed in the shapes and Mach numbers distribution between target and final 
geometries.
Fig. A.7   Sequential procedure of the Nash-Game algorithm
Define design variables x, parameters p, and constraints g: µ(x,p,g)
Define number of subpopulations (nodes) of hierarchical levels i and integrated analysis k: µi with Analysisk
for all levels initialise subpopulations (
)
0
6
0
2
0
1
0
0
,....,
,
,
µ
µ
µ
µ
Layer 1: Uses Type 1 integrated analysis:  
1
:
0
0
Analysis
init



µ
Layer 2: Uses Type 2 integrated analysis:  
2
:
0
2
,
0
1
Analysis
init




µ
µ
Layer 3: Uses Type 3 integrated analysis: 
(
)
3
0
6
0
5
0
4
0
3
:
,
,
,
Analysis
init
µ
µ
µ
µ
loop
while stopping condition not met, 
Update the asynchronous solver.
if solved individuals are available for 




6
2
1
0
,....,
,
,
µ
µ
µ
µ
: incorporate them.
A new individual is received:  Inew
Age population:  For each μi in μ: μ’i_age = μi_age + 1
Age selection buffer:  For each bi in B: b’i_age=bi_age   + 1
Perform tournament selection: tournament (Inew , b)
if tournament accept = true
Perform replacement in μ: replace (μ, Inew )
Delete dominated and oldest bi in selection buffer, insert Inew
Sort μ
endif
endif        
 

293
Results obtained with NASH-EAs  The Nash-EA algorithm was allowed to run 
approximately 2400 function evaluations and was stopped after 50  h CPU. 
Figure  A.11 compares the optimization progress achieved in generations with 
HAPEAs (Node 0) and Nash-EA. Even though the initial guess ( f = 3.32172) of 
Nash-EAs marked as a red circle is 23 % further when compared to the initial guess 
( f = 2.55915) of HAPEA, Nash-EA reached the HAPEA converged fitness value 
( f = 1.1556) after only 21.25 h and a better solution after 50 h. In addition, the con-
verged fitness value ( f = 0.78196) of Nash-EA indicates 0.43 % difference between 
the optimal airfoils and BI-NACA0012 configuration. The solution obtained by 
Nash-EAs is 32 % accurately closer to the baseline design when compared to the 
HAPEAs optimal solution.
Figure A.12a compares the airfoil geometries between the baseline design and an 
optimal solution from Nash-EAs; Mach contours are shown in Fig. A.12b. A good 
Cp agreement can be observed with the baseline design as shown in Fig. A.13.
Fig. A.9   Comparison of airfoil shape (a) and Mach contours (b) obtained by HAPEA software
Fig. A.8   Convergence history obtained by the HAPEA software
 
 
A.2  Reconstruction of BI-NACA Using HAPEA and NASH-EA

294
Appendix: Two “Hands-On” Examples of Optimization Problems
A.2.7  Conclusion
The numerical results for the shape reconstruction of a BI-NACA0012 configura-
tion clearly shows the benefits of coupling an EAs with Nash Games and illus-
trate the potential of the above evolutionary optimization methodology making this 
approach promising for solving the second complex “hands-on” test case optimiza-
tion problems.
Fig. A.10   Comparison of pressure distributions ( upper airfoil: left) and ( lower airfoil: right)
 
Fig. A.11   Optimization convergence speed-up obtained by Nash-EAs
 

295
A3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization
A.3  Unmanned Aerial Vehicle Design: Multi-Objective 
Optimization
A.3.1  Introduction
The use and development of Unmanned Aerial Vehicles for military and civilian 
applications are rapidly increasing despite many difficulties in the design of these 
vehicles because of the varied and non-intuitive nature of the configurations and 
Fig. A.12   Comparison of airfoil shape (a) and Mach contours (b)
 
Fig. A.13   Comparison of pressure distributions ( upper: left) and ( lower: right)
 

296
Appendix: Two “Hands-On” Examples of Optimization Problems
missions that can be implemented and performed. Similar to their manned coun-
terparts, the challenge is to develop trade-off studies of optimal configurations 
selected by the designer to produce high performance aircraft that satisfy mission 
requirements. In this test case, the detailed design of a single element airfoil is 
considered for a small UAV application similar to the RQ-7A Shadow 200 Tacti-
cal UAV and use the airfoil design module for this task. The aircraft maximum 
gross weight is approximately 320 lbs, it has a wingspan of approximately 12.8 ft, 
a mean chord of approximately 2 ft, length of 11 ft, and a plan form shape without 
sweep. It is assumed that the aircraft is operating between a slow cruise 33.3 m/s 
and fast cruise 46.6 m/s approximately. This results in the airframe, flight param-
eters and operating conditions indicated on Table A.3. These conditions assume 
an aircraft at mid-weight cruise during an extended cruise phase at intermediate 
altitude.
A.3.2  Definition of the Test Case
Computational Domain  The baseline design is shown in Fig. A.14. An existing 
airfoil geometry operating at two suggested design points is initially assumed, and 
then a design and airfoil that preserves the original thickness while reducing the 
drag coefficient. The assumed baseline geometry is the NACA4415 airfoil.
Mathematical Modelling  The chord length of the NACA4415 airfoil is one i.e. 
c = 1 m. Its airfoil thickness is 15 %.
Boundary Conditions  Upstream entrance: vx = v∞cos( α), vy = v∞sin( α),
Downstream exit: free boundary conditions
Airfoil surface: no-slip condition
Flow Conditions  The baseline design was tested at the following two flow 
conditions:
•	 Flight Condition One—Slow: Cruise Mach (M∞) = 0.1025, Cl = 1.18 and Reyn-
olds number (Re) = 1.085 × 10**6;
•	 Flight Condition Two—Fast: Cruise Mach (M∞) = 0.141, Cl = 0.6140 and Reyn-
olds number (Re) = 1.490 × 10**6. The flow field is solved by MSES software 
(using structured finite Euler analyser.
Airfoil section
NACA4415
Wingspan b, ft
12.8
Chord (approx), ft
2.0
Cruising altitude, m
3000
Table A.3   UAV data and 
operating conditions

297
Figures A.15 and A.16 show the pressure coefficient (Cp) distribution and some 
aerodynamic data for the two flight conditions considered. The combined polars for 
the NACA4415 aerofoil are shown in Fig. A.10. It is noticed that both cruise points 
operate inside the invariant drag region of the airfoil; the low speed cruise con-
dition giving approximately Cd = 0.016 and the high speed giving approximately 
Cd = 0.012.
A.3.3  Optimization
The objective is to minimize the drag at two flight conditions. Both the compu-
tational efficiency and quality design obtained by HAPMOEAs software are dis-
cussed and compared.
Objective Functions  The two fitness functions to be optimised are defined as mini-
misation of drag (cd) at the two flight conditions.

(A.3)

(A.4)
(
)
6
1
l
  
Re
1.08
mi
5 10 , C
1.184
n
d
f
c
=
×
=
=
(
)
2
6
l
 Re
1.490 10 , C
mi
0.6140
n
d
f
c
=
×
=
=
Fig. A.14   Cp distribution obtained by MSES for the NACA 4415 airfoil—Flight Condition 
Two—Fast Cruise
 
A3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization

298
Appendix: Two “Hands-On” Examples of Optimization Problems
Fig. A.15   Cp distribution obtained by MSES for the NACA 4415 airfoil—Flight Condition One—
Slow Cruise
Design Variables/Encoding  The airfoil geometry is represented by two Bezier 
curves, one for the mean line and one for the thickness distribution. The mean line-
thickness distribution is a standard method for representing airfoil geometries, as 
it closely couples the representation with the results; the mean line has a powerful 
effect on cruise lift coefficient and pitching moment, while the thickness distribu-
tion has a powerful effect on the cruise drag. In this case six (6) free control points 
are considered on the mean line and ten (10) free control points on the thickness 
distribution. An individual is defined as an object containing a vector of sixteen (16) 
problem variables.
Constraints  There are three types of constraints: maximum thickness, maximum 
thickness location and pitching moment (cm). The thickness and maximum thick-
ness location of each aerofoil must exceed 15 % ( t/c ≥ 0.15) and be between 20 and 
40 % chord, respectively. If a constraint on pitching moment is applied this must not 
be more severe than − 0.0660 (cm ≥ − 0.0660). When all constraints are considered 
they are added up and applied by equally penalizing both fitness values via a linear 
penalty method.
In designing a replacement airfoil for this UAV platform, the following design 
factors are considered:
•	 Maintain approximately the same Cl in order not to impinge upon the assisted 
launch and landing length;
 

299
'HILQH GHVLJQYDULDEOHV[͕SDUDPHWHUV SDQGFRQVWUDLQWV J͗µ[SJ
'HILQH QXPEHURIVXESRSXODWLRQVQRGHV RIKLHUDUFKLFDOOHYHOVL DQG LQWHJUDWHG
N͗µL
DQDO\VLV
$QDO\VLVN
IRU DOOOHYHOVLQLWLDOLVHVXESRSXODWLRQV (
)











µ
µ
µ
µ
/D\HU8VHV7\SHLQWHJUDWHGDQDO\VLV




$QDO\VLV
LQLW



µ
/D\HU8VHV7\SHLQWHJUDWHGDQDO\VLV







$QDO\VLV
LQLW




µ
µ
/D\HU8VHV7\SHLQWHJUDWHGDQDO\VLV
(
)













$QDO\VLV
LQLW
µ
µ
µ
µ
ORRS
ZKLOH VWRSSLQJFRQGLWLRQQRWPHW
8SGDWHWKHDV\QFKURQRXVVROYHU
LI VROYHGLQGLYLGXDOVDUHDYDLODEOH IRU











µ
µ
µ
µ
LQFRUSRUDWHWKHP
$QHZLQGLYLGXDOLVUHFHLYHG,QHZ
$JHSRSXODWLRQ)RUHDFKȝL LQȝ ȝ¶LBDJH  ȝLBDJH  
$JHVHOHFWLRQEXIIHU)RUHDFKEL LQ% E¶LBDJH ELBDJH  
3HUIRUPWRXUQDPHQWVHOHFWLRQWRXUQDPHQW ,QHZE
LI WRXUQDPHQW DFFHSW  WUXH
3HUIRUPUHSODFHPHQWLQȝ UHSODFHȝ,QHZ 
'HOHWHGRPLQDWHGDQGROGHVWEL LQVHOHFWLRQEXIIHULQVHUW,QHZ
6RUWȝ
HQGLI
HQGLI
ZLWK
8SGDWH&0$SDUDPHWHUVUHIDOJ
LI QHZLQGLYLGXDOVFDQEHSURYLGHGJHQHUDWHWKHP
[QHZGLVWȡ  UHFRPELQHȝ
0XWDWHRIIVSULQJYLD&0$
IRUL  «1
]L  1
ORRS
[
  [ %']
6WRUH] LQ,QHZ
HQGLI
(YDOXDWH FDQGLGDWHXVLQJVSHFLILFLQWHJUDWHGDQDO\VLVW\SH
L
$QDO\VLV
J
0
I
J







+
=
+
λ
λ
*HWRXWSXWDQDO\VLV DLSDUDPHWHUV SFKHFNFRQVWUDLQWVJ DQGDGGSHQDOW\
3HQDOW\
L
$QDO\VLV
J
0
I
J
+




+
=
+



λ
λ
LI HSRFKFRPSOHWHG
6WDUWPLJUDWLRQ
L
$QDO\VLV
N
J
L
N
J
L
PLJ
N
J
L







±
→
=
µ
µ
µ
Fig. A.16   NACA 4415—Polar
  
A3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization

300
Appendix: Two “Hands-On” Examples of Optimization Problems
•	 Maintain at least the current thickness, in order not to increase the weight of the 
wing;
•	 Lower the drag at both cruise points, in a multi-objective approach.
Definition of the EA Strategy  The complexity, non-linearity and multi-objective 
characteristics of this problem make it well suited to be solved with an EAs opti-
mizer. The computational CPU cost for this problem is an important consideration 
due to the wide upper and lower bounds in the search space and depends on the 
computing facilities used, in particular in industrial design environments. Therefore 
it is also worthy to use both parallel computing and multi-fidelity approaches. In 
this case it is desired to use a multi-objective parallel EAs (MOPEA) and select the 
HAPEAs approach which has all these capabilities but other EA approaches would 
perform well also like NSGAII or VEGA [5] for example.
A.3.4  Software Needed for Solving the Optimization Problem 
and Computer Used
The following software modules necessary to implement the test case are:
•	 The aerodynamic characteristics of the candidate aerofoils are evaluated us-
ing the MSES [6] software. This solver is based on a structured quadrilateral 
streamline mesh which is coupled to an integral boundary layer based on a 
multi-layer velocity profile representation. Details on MSES can be found in 
Drela [11].
/D\HU 5HFHLYHEHVWVROXWLRQVIURPOD\HUUHHYDOXDWHXVLQJ7\SH$QDO\VLV








$QDO\VLV
[
I
N
J
R
N
J
N
J
N
J










=






→
µ
µ
µ
µ
/D\HU 5HFHLYHUDQGRPVROXWLRQVIURPOD\HUDQGEHVWIURPOD\HUUHHYDOXDWHWKHP
XVLQJ7\SH $QDO\VLV

















$QDO\VLV
[
I
N
J
[
I
N
J
N
J
N
J
N
J
N
J










=




=






→
→
µ
µ
µ
µ
µ
µ
/D\HU 5HFHLYHUDQGRPVROXWLRQVIURPOD\HUUHHYDOXDWHVWKHPXVLQJ7\SH
$QDO\VLV










$QDO\VLV
[
I
N
J
N
J
N
J










=






→
µ
µ
µ
ORRS
Fig. A.16   (continued)

301
A.3.5  A Step-by-Step Design Optimization Procedure
With HAPMOEA  The MSES solver is utilized and the following specific param-
eters are considered for the evolutionary optimizer using a hierarchical topology 
(HAPMOEA) as shown in Fig. A.17.
1st Layer
Population size of 10 and intermediate recombination with tolerance residual 
1 × 10−6 of the MSES solver
2nd Layer
Population size of 15 and intermediate recombination with tolerance residual 
1 × 10−5 of the MSES solver
3rd Layer
Population size of 15 and intermediate recombination with tolerance residual 
1 × 10−4 of the MSES solver
A.3.6  Analysis and synthesis of results obtained by HAPMOEA 
software
This test case was allowed to run 2000 function evaluations on the top level and 
took approximately 8 h on a cluster of four 2.8 GHZ processors. Figure A.18 shows 
the set of airfoils in the Pareto front. From this front, three airfoils are selected: 
objective one optimal, objective two optimal and compromised airfoils from the 
middle of the front. These geometries are shown versus the NACA 4415 airfoil 
baseline in Fig. A.19.
A compromised airfoil is considered from the middle of the Pareto front for 
further evaluation. Figures A.20 and A.21 show the Cp distribution for the two 
flight conditions. Figures A.22 and A.23 show the comparative drag polars for 
Re = 1.480 × 106 that for Re = 1.085 × 10 6. But in this case a lower cm is obtained 
Fig. A.17   Sequential 
procedure of the HAPEAs 
algorithm
A3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization

302
Appendix: Two “Hands-On” Examples of Optimization Problems
Fig. A.19   Comparison of selected geometries—Cm constrained
Fig. A.18   The set of Pareto Airfoils—Cm constrained
 
 

303
Fig. A.20   Pareto member 01 flight condition one—Cm constrained
 
Fig. A.21   Pareto member 01 flight condition two—Cm constrained
 
A3  Unmanned Aerial Vehicle Design: Multi-Objective Optimization

304
Appendix: Two “Hands-On” Examples of Optimization Problems
for both conditions. Table A.4 summarizes the drag reduction at the two flight con-
ditions for the two test cases considered.
A.3.7  Conclusion
Concluding this test case, it is can noticed from the numerical experiments pre-
sented that evolved airfoils offer significantly lower drag at both cruise conditions. 
The requirement of constraining the pitching moment during the evolution process 
is necessary to avoid obtaining an airfoil with lower drag for some flight conditions 
but with undesirable pitching moment characteristics. The results obtained show 
the capabilities of the method to find optimal solutions and classical aerodynam-
ic shapes for flow drag reduction. However the importance of sound engineering 
judgement before, during and after the optimization cannot be under-emphasized: 
Table A.4   UAV drag reduction at two operating conditions
Description
Flight condition one
Flight condition two
Slow cruise
Fast cruise
NACA 4415
0.01621
0.01173
Pareto 01—Cm constrained
0.01451 [− 10.48 %]
0.01090 [− 7.07 %]
Fig. A.22   Comparative polars—compromised airfoil and NACA 4415 re = 1.490 × 10**6—Cm 
constrained
 

305
References
a proper definition of constraints before performing the evolutionary optimization 
and final results need to be evaluated to obtain feasible designs.
References
1.	 GiD Manual CIMNE. http://gid.cimne.upc.edu/support/manuals. Accessed 05 Nov 2010
2.	 Mohammadi B (1994) Fluid dynamics computation with NSC2KE: a user-guide: release. Re-
lease 1.0. Rt-0164, INRIA
3.	 Flores R, Ortega E (2005) PUMI: an Explicit 3D unstructured finite element solver for the 
Euler equations, Technical Report. CIMNE, Spain. 2005
4.	 Woo A (1992) Gnuplot quick reference (1992) http://www.gnuplot.info/docs_4.0/gpcard.pdf. 
Accessed 2 Feb 2014
5.	 Schaffer JD (1985) Multiple objective optimization with vector evaluated genetic algorithms. 
Lawrence Erlbaum, Pittsburgh, pp. 931–1000
6.	 Drela M (1993) A user’s guide to MSES V2.3, Feb. 1993

