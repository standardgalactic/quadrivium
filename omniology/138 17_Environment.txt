The
Environment

The shell maintains a set of information during a shell
session, known as the environment.  It's just a series of
key-value pairs that define properties like:
- Your home directory
- Your working directory
- The name of your shell
- The name of the logged in user
The Environment

Use the printenv command to view the
environment variables and their current values.  
Because there are quite a few values, it can
be useful to pipe the output to less.
Viewing The
Environment 
printenv
❯
printenv | less
❯

If we write out the name of an environment
variable prefixed with a dollar sign ($), the
shell will replace it with the actual value.
For example, echo $USER results in the USER
variable's value.
Parameter
Expansion
echo USER
❯
USER
echo $USER
❯
colt

To define a variable, use the syntax 
variable=value
Built-in variables are upper-cased, so it's a
common convention to lowercase custom
variables to prevent confusion.
Defining
Variables
color="purple"
❯
num=821
❯

We can define our own commands using the
alias keyword.  
In the example to the right, we are defining an
alias called ll which is equivalent to running 
ls -al. To execute it, we would simply run ll
Aliases
alias ll='ls -al'
❯

When we log in, the shell reads information from
startup files.  First, the shell reads from global config
files that effect the environment for all users.  Then,
the shell reads startup files for specific users. 
The specific files the shell reads from depends on the
type of session: login  vs. non-login shell sessions
For login sessions:
- /etc/profile - global config for all users
- ~/.bash_profile - user's personal config file
- ~/.bash_login - read if bash_profile isn't found
- ~/.profile - used if previous two aren't found
Startup Files

etc/bash.bashrc - global config for all users
~/.bashrc - specific settings for each user. This is
where we can define our own settings and
configuration
For non-login sessions (typical session when you
launch the terminal via the GUI):
Startup Files

