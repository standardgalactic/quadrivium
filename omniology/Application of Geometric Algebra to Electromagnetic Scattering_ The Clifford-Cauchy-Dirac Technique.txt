Andrew Seagar
Application of 
Geometric Algebra 
to Electromagnetic 
Scattering
The Clifford-Cauchy-Dirac Technique

Application of Geometric Algebra
to Electromagnetic Scattering

Andrew Seagar
Application of Geometric
Algebra to Electromagnetic
Scattering
The Clifford-Cauchy-Dirac Technique
123

Andrew Seagar
Gold Coast, QLD
Australia
ISBN 978-981-10-0088-1
ISBN 978-981-10-0089-8
(eBook)
DOI 10.1007/978-981-10-0089-8
Library of Congress Control Number: 2015954612
Springer Singapore Heidelberg New York Dordrecht London
© Springer Science+Business Media Singapore 2016
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part
of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations,
recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and transmission
or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar
methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this
publication does not imply, even in the absence of a speciﬁc statement, that such names are exempt from
the relevant protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this
book are believed to be true and accurate at the date of publication. Neither the publisher nor the
authors or the editors give a warranty, express or implied, with respect to the material contained herein or
for any errors or omissions that may have been made.
Printed on acid-free paper
Springer Science+Business Media Singapore Pte Ltd. is part of Springer Science+Business Media
(www.springer.com)

To Cathy

Preface
Electromagnetism immediately captured my interest when I was ﬁrst introduced to
it as a student at university. Complete mastery of one of the fundamental phe-
nomena of our physical world seemed within reach, as promised in the form of
Maxwell’s equations [1]1. However, the realisation of that promise was not as
straightforward as I might have ﬁrst imagined.
Exposure to electromagnetic theory in the period during and immediately fol-
lowing university, with its application to impedance imaging, left me with some
skills—largely restricted to two dimensions and quasi-static ﬁelds. I found the
conventional treatments at that time for fully three-dimensional time-varying ﬁelds
clumsy and unpalatable. I took that to reﬂect my own inadequacy in grasping the
methods rather than reﬂecting any inadequacy in the methods themselves. As it
turns out, I was mistaken.
The ﬁrst inkling that there might really be a simpler way came for me in 2002
with the paper of Axelsson, Grognard, Hogan and McIntosh [2]. At that time
I started to seriously follow the literature relating to the theory of monogenic
functions expressed in Clifford’s algebra [3, 4] based on his interpretation of
Hamilton’s quaternions [5] in terms of Grassmann’s extension theory [6, 7], and
applied through the Cauchy integral [8, 9] to provide a solution to Maxwell’s
equations, and thereby to electromagnetic problems.
Although much is written, there are only a few works which I consider essential.
First are the works of McIntosh [10, 11] providing a solid mathematical justiﬁcation
on the validity of the Cauchy integral in multiple dimensions for monogenic
functions in Lipschitz domains. Second is the paper of Axelsson, Grognard, Hogan
and McIntosh [2] giving the formulation of electromagnetic problems within the
Clifford–Cauchy framework. Third is the thesis of Axelsson containing many more
of the details [12].
Given that my background was in electrical engineering and the aforementioned
documents were written by mathematicians, they probably would have remained
1Section 617.
vii

forever beyond my understanding were it not that I had worked for many years with
one of the authors. With his support and guidance I was slowly able to master the
concepts and cast them, ﬁnally as this book, in a form by which they can be shared
with others having a background at a level similar to my own.
The works in the book follow ultimately back to Cauchy, Hamilton, Grassmann,
Maxwell and Clifford rather than conventionally to Green, Hamilton, Maxwell,
Gibbs [13] and Heaviside [14]2 (also [15, 16]). The differences from conventional
techniques are that (i) Hamilton’s quaternions are used in whole to construct
Clifford’s algebra rather than being stripped apart to deliver Gibbs’s vector calculus,
(ii) Clifford’s algebra is used instead of Gibbs’s vector calculus and (iii) integrals
are used involving Cauchy kernels instead of Green’s functions.
The ultimate outcome is an integral formulation which lends itself to a more
direct and efﬁcient solution than is conventionally the case. That leads by necessity
on any particular machine to either a faster solution for a given problem or the
ability to solve problems of greater complexity. On the basis of efﬁciency alone, the
new technique is destined in time to supplant at least some existing techniques.
The book is written with the intention that any who are interested can also come
to master, over a much shorter time-span than in my case, techniques which offer
simpler and more efﬁcient solutions to problems of electromagnetic scattering than
are currently in use.
During the development of the material and preparation of this work many
people have been of assistance in various ways, either consciously or unknowingly,
directly or indirectly. The various ways include the penetrating questions of stu-
dents, the sound advice and encouragement of colleagues and peers, the perceptive
counsel of elders and betters, the professional guidance of the editorial team, and
the stoic forbearance and unfaltering faith of my immediate family.
Gold Coast
Andrew Seagar
September 2015
2Sections 51 and 66.
viii
Preface

Contents
Part I
Preparation
1
History . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
1.1
Grassmann’s Outer Product . . . . . . . . . . . . . . . . . . . . . . . . . .
3
1.1.1
Evolution. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3
1.1.2
Outer Product. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4
1.1.3
Algebraic Properties . . . . . . . . . . . . . . . . . . . . . . . .
5
1.2
Three Kinds of Multiplication . . . . . . . . . . . . . . . . . . . . . . . .
7
1.2.1
Constraint Equations . . . . . . . . . . . . . . . . . . . . . . . .
7
1.2.2
Interdependence . . . . . . . . . . . . . . . . . . . . . . . . . . .
8
1.3
Complex Numbers and Quaternions . . . . . . . . . . . . . . . . . . . .
9
1.3.1
Quaternions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
1.3.2
Complex Numbers . . . . . . . . . . . . . . . . . . . . . . . . .
9
1.4
Clifford’s Algebra . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
1.5
Vector Calculus . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
10
1.6
Synchronicity. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
11
1.6.1
Notation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
12
1.7
Casting Physical Problems into Clifford Algebra . . . . . . . . . . .
13
1.8
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
14
2
Numbers and Arithmetic . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
17
2.1
Structure of Clifford Numbers . . . . . . . . . . . . . . . . . . . . . . . .
17
2.2
Notation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18
2.2.1
Units. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
18
2.2.2
Vectors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
19
2.2.3
Numbers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
20
2.3
Arithmetic Operators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
2.3.1
Inversion of Signs . . . . . . . . . . . . . . . . . . . . . . . . .
21
2.3.2
Addition and Subtraction. . . . . . . . . . . . . . . . . . . . .
22
2.3.3
Multiplication. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
22
2.3.4
Application . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
26
ix

2.4
Numerical Implementation. . . . . . . . . . . . . . . . . . . . . . . . . . .
28
2.4.1
Dimensional Recursion . . . . . . . . . . . . . . . . . . . . . .
28
2.4.2
Recursive Product. . . . . . . . . . . . . . . . . . . . . . . . . .
29
2.4.3
Machine Computation . . . . . . . . . . . . . . . . . . . . . . .
30
2.5
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
34
3
Geometry. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
37
3.1
Reﬂection, Projection and Rotation Operators . . . . . . . . . . . . .
37
3.2
Reﬂection and Projection . . . . . . . . . . . . . . . . . . . . . . . . . . .
38
3.2.1
Vectors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
38
3.2.2
Numerical Examples . . . . . . . . . . . . . . . . . . . . . . . .
40
3.2.3
Application to Bivector Fields . . . . . . . . . . . . . . . . .
43
3.3
Rotation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
44
3.3.1
Vectors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
44
3.3.2
Numerical Examples . . . . . . . . . . . . . . . . . . . . . . . .
46
3.3.3
Application to Bivector Fields . . . . . . . . . . . . . . . . .
48
3.4
Coordinate Systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
48
3.4.1
Afﬁne Geometry. . . . . . . . . . . . . . . . . . . . . . . . . . .
49
3.4.2
Banach Space . . . . . . . . . . . . . . . . . . . . . . . . . . . .
51
3.4.3
Transformations Between Coordinate Systems . . . . . .
51
3.4.4
Multi-Dimensional Axes . . . . . . . . . . . . . . . . . . . . .
53
3.5
Intersection by Projection . . . . . . . . . . . . . . . . . . . . . . . . . . .
54
3.5.1
Formulation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
54
3.5.2
Remarks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
57
3.6
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
57
4
Space and Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
59
4.1
Points in Space–Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
60
4.2
Transformation Between Frames . . . . . . . . . . . . . . . . . . . . . .
60
4.2.1
Related Frames . . . . . . . . . . . . . . . . . . . . . . . . . . .
61
4.2.2
Related Coordinates . . . . . . . . . . . . . . . . . . . . . . . .
62
4.3
Derivatives in Space–Time . . . . . . . . . . . . . . . . . . . . . . . . . .
63
4.4
Physical Units . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
66
4.5
Electromagnetic Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
66
4.6
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
67
5
Classical Electromagnetism. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
69
5.1
Time Domain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
70
5.1.1
Vector Calculus . . . . . . . . . . . . . . . . . . . . . . . . . . .
70
5.1.2
Clifford Algebra . . . . . . . . . . . . . . . . . . . . . . . . . . .
70
5.2
Splitting the Field. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
73
5.3
Frequency Domain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
75
5.4
Differential Operators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
76
5.4.1
Leibniz Product Rule . . . . . . . . . . . . . . . . . . . . . . .
78
5.5
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
81
x
Contents

Part II
Formulation
6
Scattering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
85
6.1
Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
86
6.2
Single Regions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
87
6.3
Multiple Regions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
88
6.3.1
Extreme Cases . . . . . . . . . . . . . . . . . . . . . . . . . . . .
88
6.3.2
Components of Solutions. . . . . . . . . . . . . . . . . . . . .
89
6.4
Boundary Conditions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
90
6.4.1
Perfect Reﬂection . . . . . . . . . . . . . . . . . . . . . . . . . .
91
6.4.2
Perfect Transmission. . . . . . . . . . . . . . . . . . . . . . . .
92
6.4.3
Partial Transmission and Reﬂection. . . . . . . . . . . . . .
93
6.5
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
96
7
Cauchy Integrals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
97
7.1
Boundary Theorem. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
97
7.2
Fundamental Solutions . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
98
7.2.1
Three Dimensions. . . . . . . . . . . . . . . . . . . . . . . . . .
99
7.3
Off the Boundary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
7.3.1
Reproducing Formula . . . . . . . . . . . . . . . . . . . . . . . 100
7.3.2
Cauchy Extension. . . . . . . . . . . . . . . . . . . . . . . . . . 102
7.4
On the Boundary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
7.4.1
Cauchy Integral . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
7.5
Example Application . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
7.5.1
Test Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104
7.5.2
Numerical Method . . . . . . . . . . . . . . . . . . . . . . . . . 105
7.5.3
Accuracy of Results . . . . . . . . . . . . . . . . . . . . . . . . 106
7.5.4
Practical Issues. . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
7.6
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107
8
Hardy Projections . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109
8.1
Perfect Reﬂection. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110
8.2
Perfect Transmission. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110
8.3
Partial Transmission and Reﬂection . . . . . . . . . . . . . . . . . . . . 111
8.4
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 112
9
Construction of Solutions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
9.1
Perfect Reﬂection. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113
9.2
Perfect Transmission. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115
9.3
Partial Transmission and Reﬂection . . . . . . . . . . . . . . . . . . . . 116
9.3.1
Construction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117
9.3.2
Solution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
9.3.3
Computational Effort. . . . . . . . . . . . . . . . . . . . . . . . 120
9.3.4
Joint Interface Function. . . . . . . . . . . . . . . . . . . . . . 122
9.4
Convergence and Speed . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
9.5
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123
Contents
xi

Part III
Demonstration
10
Examples. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127
10.1
Test Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128
10.2
Formulation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128
10.2.1
Dirac Operator . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129
10.2.2
Source. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129
10.2.3
Maxwell’s Equations. . . . . . . . . . . . . . . . . . . . . . . . 130
10.2.4
Fundamental Solution . . . . . . . . . . . . . . . . . . . . . . . 130
10.2.5
Bessel Potential . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
10.2.6
Electromagnetic Field . . . . . . . . . . . . . . . . . . . . . . . 131
10.2.7
Cauchy Kernel . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132
10.2.8
Cauchy Extension. . . . . . . . . . . . . . . . . . . . . . . . . . 132
10.2.9
Cauchy Integral . . . . . . . . . . . . . . . . . . . . . . . . . . . 133
10.2.10
Hardy Projections . . . . . . . . . . . . . . . . . . . . . . . . . . 133
10.3
Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134
10.4
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136
Part IV
Contemplation
11
Perspectives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
11.1
Genesis. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
11.2
Two and Three Dimensions. . . . . . . . . . . . . . . . . . . . . . . . . . 140
11.3
Multiple Scatterers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
11.4
Topology and Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142
11.5
Equivalent Circuits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
11.6
Electromagnetism. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
11.7
Beyond Electromagnetism . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
11.8
Exercises. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Appendix A: Reduce Code for Machine Computation. . . . . . . . . . . . . . 147
Appendix B: Electrical Properties of Materials. . . . . . . . . . . . . . . . . . . 153
Appendix C: C Code for One-Dimensional Solution . . . . . . . . . . . . . . . 157
References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169
Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173
xii
Contents

Nomenclature
¬
a
:
Involution

ea
Reversion
–
a
Clifford conjugation
V
Va
Grade

a  b
Dot product
y
ayb
Left inner product
x
axb
Right inner product
( , )
ða; bÞ
Scalar product
^
a ^ b
Wedge product, outer product
_
a _ b
Inner product
\
a \ b
Evolution, outer product, intersection of sets

a  b
Cross product
o
oa
Partial differential
Scalar
Partial differential operating towards the left
Scalar
D
Da
Differential operator
Generic
r
ra
Gradient operator
Vector
r
r  a
Divergence operator
Vector
r
r  a
Curl operator
Vector
a
Gradient operator
Clifford
D
Da
Hyperbolic Dirac operator
Clifford
D0
D0a
Dirac operator
Clifford
Dk
Dka
k-Dirac operator
Clifford
α; β
Magnetic and electric material contrast factors
Scalar
Γ
Reﬂection coefﬁcient
Scalar
δ
Dirac delta function
Scalar
δ
Point/dipole source
Clifford
ϵ; ϵ
Electric permittivity
Scalar
η; η0; η
Intrinsic impedances
Scalar
λ
Wavelength
Scalar
(continued)
xiii

(continued)
(continued)
μ; μ
Magnetic permeability
Scalar
ρ; ρk
Electric charge density; phasor
Scalar
ρs
Surface electric charge density
Scalar
σ
Negative of volume unit in three dimensions
Clifford
σ
Electrical conductivity
Scalar
dσ
Elemental measure of boundary
Scalar
Σ
Boundary or interface
Surface
τ
Transmission coefﬁcient
Scalar
φ
Phase of travelling wave
Scalar
φ; φk
Electric potential; phasor
Scalar
ω
Angular frequency
Scalar
Ω; Ω
Regions or objects
Volume
A; Ak
Magnetic potential; phasor
Clifford
A
Magnetic potential
Vector
A; B; C; D; Q
Quaternions
Quaternion
Bk
Bessel potential
Scalar
B, D
Magnetic and electric ﬂux densities
Clifford
B, D
Magnetic and electric ﬂux densities
Vector
c
Speed of light
Scalar
C
Cauchy extension
Clifford
CΣ; C
Σ
Cauchy integrals
Clifford
e;
Absolute unit
Scalar
e0
Primal time/frequency unit
Clifford
ep; eq; er; es. . .
Primal (vector) units
Clifford
e1; e2; e3
Primal (vector) units in three dimensions
Clifford
Ek
Cauchy kernel
Clifford
E; H; Ek; Hk
Electric and magnetic ﬁelds; phasors
Clifford
E, H
Electric and magnetic ﬁelds
Vector
EF; HF
Incident ﬁelds
Vector
E; H
Scattered and transmitted ﬁelds
Vector
f
Field, joint interface function
Clifford
f F
Incident ﬁeld
Clifford
f 
Scattered and transmitted ﬁelds
Clifford
F
Function in Minkowskian space–time
Clifford
Fk
Fundamental solution
Clifford
F; F k
Electromagnetic ﬁeld; phasor
Clifford
g
Boundary data vector
Clifford
Hk
Helmholtz operator
Scalar
i
Imaginary unit
Scalar
I
Identity operator
I
RQ; I
RQ
Images of axes
Line
I, J, K
Quaternion units
Quaternion
xiv
Nomenclature

(continued)
J; Jk
Electric current density; phasor
Clifford
J
Electric current density
Vector
Js
Surface electric current density
Vector
k; k
Wavenumber
Scalar
n
Unit normal vector
Clifford
n
Unit normal vector
Vector
O
Origin of axes
Point
OP; OP0; OQ; OQ0
Pairs of coordinate axes
Line
OP; OP
Unrelated axes
Line
P; P
Hardy projection operators
Clifford
P; Pk
Electromagnetic potential; phasor
Clifford
Q
Boundary data projection operators
Clifford
R; Rαβ
Space–time rescaling operator
Clifford
S; Sk
Electromagnetic source; phasor
Clifford
S; T
Space-like and time-like projection operators
Clifford
t
Time
Scalar
UðmÞ; VðmÞ; WðmÞ
Clifford numbers of dimension m
Clifford
x0; x1; x2; x3
Coordinates in Minkowskian space–time
Real
X0; X1; X2; X3
Basis vectors in Minkowskian space–time
Clifford
X; Y
Inertial frames of reference
^x; ^y;^z
Vector units in three dimensions
Vector
XðmÞ; YðmÞ; ZðmÞ
Clifford numbers of dimension m
Clifford
y0; y1; y2; y3
Coordinates in Minkowskian space–time
Real
Y0; Y1; Y2; Y3
Basis vectors in Minkowskian space–time
Clifford
Z
Characteristic impedances
Scalar
Nomenclature
xv

List of Figures
Figure 1.1
Evolution of generating element a, as speciﬁed
by measure of generation b. . . . . . . . . . . . . . . . . . . . . . . .
4
Figure 1.2
Evolution of parallelogram, as specified by measure
of generation c . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
4
Figure 1.3
Evolution of generating element a in two parts
a1; a2, as speciﬁed by measure of generation b in two
parts b1; b2. A ¼ a1\ b1, B ¼ a1\ b2, C ¼ a2 \ b1,
D ¼ a2 \ b2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
5
Figure 1.4
Demonstration that a\b ¼ a\ða1 þ bÞ using chain of
geometric and algebraic reasoning (arrows). . . . . . . . . . . . .
5
Figure 1.5
Parallelepipeds produced from vectors a; b; c in
different orders . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
6
Figure 2.1
Vectors a and b broken into components perpendicular
and parallel to one another . . . . . . . . . . . . . . . . . . . . . . . .
26
Figure 2.2
Torque (shaded) calculated from outer product of (a)
perpendicular component a? of force a ¼ F with whole
lever-arm b ¼ d, of (b) whole force a ¼ F with whole
lever-arm b ¼ d, and of (c) whole force a ¼ F with
perpendicular component b? of lever-arm b ¼ d . . . . . . . . .
27
Figure 2.3
Work (shaded) calculated from inner product of
(a) parallel component ak of force a ¼ F with whole
displacement b ¼ d, of (b) whole force a ¼ F with
whole displacement b ¼ d, and of (c) whole force
a ¼ F with parallel component bk of displacement
b ¼ d. The inner product with vector a is converted to
an outer product with rotated vector 0a . . . . . . . . . . . . . . . .
27
Figure 2.4
Work (shaded) calculated from inner product of
(a) parallel component ak of force a ¼ F with whole
displacement b ¼ d, of (b) whole force a ¼ F with
whole displacement b ¼ d, and of (c) whole force
a ¼ F with parallel component bk of displacement
b ¼ d. The inner product with vector b is converted
to an outer product with rotated vector b0 . . . . . . . . . . . . . .
28
xvii

Figure 3.1
Orthogonal components of vector u with respect
to the unit vector n, normal to the surface Σ . . . . . . . . . . . .
39
Figure 3.2
Reflections Ra ¼ nauna and Rb ¼ nbunb . . . . . . . . . . . . . . .
40
Figure 3.3
Complementary projections Q
a;b ¼ 1
2 ðI  Qa;bÞ . . . . . . . . . .
42
Figure 3.4
Geometrical interpretation of rotation operator Θ . . . . . . . . .
45
Figure 3.5
Rotation Θ ¼ R2R1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
47
Figure 3.6
Orthogonal coordinate axes OA; OA0 deﬁned
by projections A . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
49
Figure 3.7
Axes OP1; OP2 deﬁned by projections P1; P2
not suitable as coordinate axes. . . . . . . . . . . . . . . . . . . . . .
50
Figure 3.8
Non-orthogonal OP; OP0 coordinate axes deﬁned
by projections P . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
51
Figure 3.9
Components of function f in two different Cartesian
systems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
52
Figure 3.10
Axes defined by projection (a) one-dimensional
only (b) one and two-dimensional . . . . . . . . . . . . . . . . . . .
53
Figure 3.11
Intersection of lines by projection (a) 0\ξ\1,
(b) 1\ξ, (c) 1 	 ξ\0, (d) ξ 	  1 . . . . . . . . . . . . . . . . .
55
Figure 4.1
Lorentz transform between frame X ¼ fX0; X1g and
frame Y ¼ fY0; Y1g . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
64
Figure 5.1
Circular
region
Ω
with
boundary
Σ
containing
Clifford-valued function f . . . . . . . . . . . . . . . . . . . . . . . . .
79
Figure 6.1
Radiation from distant source H partially borne into
and scattered away from object Ω þ . . . . . . . . . . . . . . . . . .
86
Figure 6.2
One-dimensional scattering (a) of voltage vH
from discontinuity in characteristic impedance
Z on transmission line, and (b) of plane
electromagnetic wave wH from discontinuity
in intrinsic impedance η at planar surface . . . . . . . . . . . . . .
86
Figure 7.1
Region Ω þ enclosed by boundary Σ with normal n.
The boundary serves as an interface between the
interior Ω þ and the exterior Ω. Point r takes
any position whereas point s takes positions
only within and on the boundary . . . . . . . . . . . . . . . . . . . .
98
Figure 7.2
Fields generated by reproducing formula from
boundary traces of fields due to internal and external
sources δ and δ þ respectively . . . . . . . . . . . . . . . . . . . . .
102
Figure 7.3
Fields generated by Cauchy extension from function
f on boundary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
103
Figure 7.4
Dipole source δ þ enclosed by cubic surface.
The surface is subdivided into elements Σj . . . . . . . . . . . . .
105
Figure 7.5
Error in approximate field calculation of Cauchy
extension . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
106
xviii
List of Figures

Figure 8.1
Fields generated by Hardy projection from function
f on boundary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
110
Figure 8.2
Cauchy extensions and Hardy projections for partial
transmission and reflection . . . . . . . . . . . . . . . . . . . . . . . .
111
Figure 9.1
Solution f ¼ f  as sum of two components along
OP0 axis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
114
Figure 9.2
Solution f ¼ f  as sum of geometric series. . . . . . . . . . . . .
114
Figure 9.3
Solution f ¼ f þ as sum of two components along OP
axis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
115
Figure 9.4
Solution f ¼ f þ as sum of geometric series . . . . . . . . . . . .
116
Figure 9.5
Geometric construction for general solution. . . . . . . . . . . . .
117
Figure 9.6
General solution reduced with Γ ¼ 1 to case
of perfect reﬂection . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
118
Figure 9.7
General solution reduced with Γ ¼ 0 to case of perfect
transmission . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
119
Figure 9.8
Complementary images generated by linear
mappings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
119
Figure 9.9
General solution as geometric method . . . . . . . . . . . . . . . .
120
Figure 9.10
Geometric solution for joint interface function
f from initial estimate f1. . . . . . . . . . . . . . . . . . . . . . . . . .
122
Figure 10.1
Radiation from distant source F is transmitted
and reﬂected at surface Σ of scatterer Ω þ embedded
in free space Ω . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
128
Figure 10.2
Current sheet as source for electromagnetic field . . . . . . . . .
129
Figure 10.3
Convergence of iterative method for different
materials. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
134
Figure 11.1
Genesis of the Clifford-Cauchy-Dirac (CCD)
and conventional techniques . . . . . . . . . . . . . . . . . . . . . . .
140
Figure 11.2
Scattering from two objects (a) in parallel, (b) in
series.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
141
Figure 11.3
Three regions (a) with common three-way junction,
(b) treated as four regions with three-way junction
eliminated. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
142
Figure 11.4
Transformation of scattering problems into equivalent
graphs with links in (a) parallel, (b) series. Interfaces
(dotted) are replaced by links (solid lines), and regions
Ω are replaced by points (
) . . . . . . . . . . . . . . . . . . . . . . .
142
Figure 11.5
Collapse of scattering problems onto equivalent
circuits with components in (a) parallel, (b) series.
Interfaces (dotted) reduce to nodes (
), and regions
Ω reduce to components Z . . . . . . . . . . . . . . . . . . . . . . . .
143
List of Figures
xix

List of Tables
Table 1.1
Constraint equations for circular multiplication . . . . . . . . . . .
8
Table 1.2
Three circular multiplications . . . . . . . . . . . . . . . . . . . . . . .
8
Table 1.3
Verification of relationship between inner, central
and outer products . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
9
Table 1.4
Typescripts for different mathematical and geometric
entities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
13
Table 2.1
Examples of Clifford numbers . . . . . . . . . . . . . . . . . . . . . .
18
Table 2.2
Operations involving inversion of sign . . . . . . . . . . . . . . . .
21
Table 2.3
Periodic behaviour of reversion, involution and Clifford
conjugation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
21
Table 2.4
Constraint equations for seven different kinds
of Clifford multiplication . . . . . . . . . . . . . . . . . . . . . . . . . .
23
Table 2.5
Multiplication of two-dimensional Clifford numbers
a and b . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
24
Table 2.6
Recursive construction of Clifford numbers . . . . . . . . . . . . .
29
Table 2.7
Machine representation in tree structure of Clifford
numbers of dimension m from zero to four . . . . . . . . . . . . .
31
Table 2.8
Recursive multiplication of Clifford numbers in REDUCE
code . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
31
Table 2.9
Examples of machine computations on Clifford
numbers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
32
Table 2.10
Symbolic verification of Clifford product duality
relationship from first line of Eq. 2.12. . . . . . . . . . . . . . . . .
33
Table 3.1
Equivalent geometric and functional spaces . . . . . . . . . . . . .
49
Table 5.1
Notation for electromagnetic quantities
and operators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
71
Table 5.2
Electromagnetic quantities in the form of Clifford
variables, and quaternions (A; B; C; D) split into
their scalar (a, b, c, d) and vector (A, B, C, D)
components . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
73
xxi

Table 5.3
Electromagnetic phasors in the form of Clifford
variables, and quaternions (A; B; C; D) split into
their scalar (a, b, c, d) and vector (A, B, C, D)
components . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
75
Table 5.4
Differential operators in three or more dimensions . . . . . . . .
77
Table 6.1
Components of solution. . . . . . . . . . . . . . . . . . . . . . . . . . .
89
Table 6.2
Stages in construction of the Cauchy integral . . . . . . . . . . . .
90
Table 6.3
Three cases of electromagnetic boundary field problems
in the notation of vector calculus . . . . . . . . . . . . . . . . . . . .
90
Table 9.1
Computational procedure for updating estimate
of solution . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
121
Table 10.1
Integrals for the one-dimensional Cauchy extension . . . . . . .
132
Table 10.2
Rates of convergence and errors in solution after
50 iterations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
135
xxii
List of Tables

Part I
Preparation

Chapter 1
History
1.1 Grassmann’s Outer Product
1.1.1 Evolution
Grassmann describes an abstract operation called evolution, which he illustrates by
applying it in a particular form to generate higher-dimensional geometric objects
from lower-dimensional ones [6]. Figure1.1 shows the evolution of one vector a
(called the generating element)as speciﬁed by another vector b (called the measure
ofgeneration).Forthisgeometricapplicationtheoperationofevolutionistakenasthe
process of translation of the generating element a through a continuous sequence of
intermediate states along a locus having the same length and direction as the measure
of generation b. At each intermediate state the image of the generating element (the
broken arrow) is called an intermediate element of the continuous form.
Theresultoftheevolutionistakenasthewholecollectionofintermediateelements
into which the generating element is transformed during the operation. With an initial
generating element a and a measure of generation b, the result is the interior of the
parallelogram having sides coincident with the vectors a and b.
Grassmann’s term for the result of his abstract concept of evolution is the
extension. In the geometric application here the operation of evolution on a one-
dimensional object produces an extension which is a two-dimensional object. The
process can be repeated by taking the parallelogram as the generating element and
subjecting that to the operation of evolution as speciﬁed by a third vector c. As shown
in Fig.1.2 the result (the extension) in this case is the interior of a parallelepiped hav-
ing sides coincident with the vectors a, b and c.
The single application of evolution producing the parallelogram was originally
written by Grassmann as a ∩b, and the double application of evolution producing
the parallelepiped was written a ∩b ∩c. In this notation it is understood implicitly
that the operations are performed sequentially from left to right, so that a ∩b ∩c =
(a ∩b) ∩c.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_1
3

4
1
History
Fig. 1.1 Evolution of
generating element a, as
speciﬁed by measure of
generation b
Fig. 1.2 Evolution of
parallelogram, as speciﬁed
by measure of generation c
Grassmann’s deﬁnition of evolution for the geometric application essentially plays
the role of integration, with the vector a taking the role of integrand and the vector
b taking the role of the locus along which the integration is performed. In general for a
generating element a and a differential measure of generation b′ db the integral can be
written

b a ∩b′ db. In Grassmann’s more speciﬁc case where the vector functions a
and b′ are constant functions, the expression reduces to a ∩

b b′ db = a ∩b, where
b is the vector from start to end of the locus.
1.1.2 Outer Product
When the generating element a and the measure of generation b are each composed
by the addition of two linearly dependent parts, a1, a2 and b1, b2 respectively, then
the evolution a ∩b = (a1 + a2) ∩(b1 + b2) can be completed as shown in Fig.1.3
in four parts: (a1 ∩b1) + (a1 ∩b2) + (a2 ∩b1) + (a2 ∩b2).
Taking in turn a or b as whole gives the two relationships:
a ∩(b1 + b2) = (a ∩b1) + (a ∩b2)
(a1 + a2) ∩b = (a1 ∩b) + (a2 ∩b)
(1.1)
Apart from the symbols chosen, the relationships given in Eq.1.1 exhibit exactly the
distributive behaviour expected of a multiplication-like operation ∩over a addition-
like operation + from either left or right. It is therefore possible to identify from its
behaviour the evolution ∩as deﬁned in Figs.1.1 and 1.2 as some kind of geometric
multiplication. Grassmann called this geometric multiplication the outer product.
Today it is more common to write a ∧b instead of a ∩b and call this multiplication

1.1 Grassmann’s Outer Product
5
Fig. 1.3 Evolution of generating element a in two parts a1, a2, as speciﬁed by measure of generation
b in two parts b1, b2. A = a1 ∩b1, B = a1 ∩b2, C = a2 ∩b1, D = a2 ∩b2
either the outer product or the wedge product. At other times Grassmann also used
alternative notations for the outer product, namely a · b (which is now used for the
dot product) and [ab].
1.1.3 Algebraic Properties
Further algebraicproperties of theouter product canbedeterminedfromits geometric
deﬁnition taken together with its distributive properties.
A. Single Products
Figure1.4 shows through geometric and algebraic steps along the path indicated by
double ended arrows that a ∩b = a ∩(a1 + b).
The product of two vectors which are linearly dependent is therefore a ∩a1 = 0.
Choosing a1 = a then gives a ∩a = 0 for any vector a, so that 0 = (a + b) ∩(a +
b) = (a ∩a) + (a ∩b) + (b ∩a) + (b ∩b) = (a ∩b) + (b ∩a). This is possible
only if a ∩b = −b ∩a, which indicates that the outer product is anti-commutative.
Notice that the algebraic properties of the outer (wedge) product:
Fig. 1.4 Demonstration that
a ∩b = a ∩(a1 + b) using
chain of geometric and
algebraic reasoning (arrows)

6
1
History
 a ∩a = 0
a ∩b = −b ∩a
(1.2)
come not as an abstract algebraic deﬁnition, but by construction from the geomet-
ric operation it was intended to represent. In mathematical terminology, the vector
operations of addition and outer product form a ring which is neither commutative
nor unitary.
The anti-commutative property of the product means that geometrically the par-
allelogram a ∩b and the parallelepiped a ∩b ∩c play the roles of oriented areas
and oriented volumes respectively.
B. Double Products
The double product a ∩b ∩c = (a ∩b) ∩c produces a parallelepiped having sides
coincident with the three vectors a, b and c. Performing the same operation with the
samevectorsinadifferentorderproducesanotherparallelepipedwiththesameshape,
although possibly with a different sign. For example, (a ∩b) ∩c = −(b ∩a) ∩c
because the outer product of vectors is anti-commutative. The sign plays the role of
converting a left handed orientation into a right hand orientation.
Figure1.5 shows the parallelepipeds produced using the same three vectors in
different orders: (a ∩b) ∩c, (b ∩c) ∩a and (c ∩a) ∩b. The intermediate elements
of the continuous form, produced from the generating elements as they evolve over
the surfaces of the parallelepipeds, are indicated by broken arrows. The position
of these intermediate elements relative to one another deﬁnes the orientation of the
parallelepipeds. Note that this ‘orientation’ refers to the orientation of evolution (or
construction) of a parallelepiped rather than its physical orientation in space.
Making a rotation of the parallelepipeds around the axis AA′ to alter the physical
orientation by some ±120◦aligns the pictorial representation of the evolutional
orientation for all three. Observing that the alignment is possible conﬁrms that, in
addition to the shape, the sign (evolutional orientation) of the three parallelepipeds
is also the same. Combining the two observations gives:
(a ∩b) ∩c = (b ∩c) ∩a = (c ∩a) ∩b
(1.3)
The ability to interchange the vectors of the double product in this particular manner
without altering the result implies that the algebra of the outer product adheres to
Fig. 1.5 Parallelepipeds produced from vectors a, b, c in different orders

1.1 Grassmann’s Outer Product
7
some kind of associative property. Hypothesising that the associative property is of
the form:
(a ∩b) ∩c = a ∩(b ∩c)
(1.4)
and applying that property together with the anti-commutative property gives:
(a ∩b) ∩c →a ∩(b ∩c) →−a ∩(c ∩b) →−(a ∩c) ∩b →(c ∩a) ∩b
(1.5)
in agreement with observed geometrical behaviour. The hypothesis can therefore be
allowed to stand.
The chain of reasoning which veriﬁes the associative behaviour of the outer prod-
uct (Eq.1.5) involves terms of the form a ∩(b ∩c). The evolution represented by
these terms can be interpreted geometrically as a special case of a two-dimensional
integral,

b a ∩

c b′ ∩c′ dc db, in which the three vector functions a, b′ and c′ are
all constant functions. With this interpretation the measure of generation for the gen-
erating element a is seen as a two-dimensional oriented area b ∩c rather than, as in
the case of a single product a ∩b, a one-dimensional oriented path b.
1.2 Three Kinds of Multiplication
1.2.1 Constraint Equations
Grassmann called the Eq.1.2 which describe how vectors combine under outer multi-
plication the constraint equations for that particular kind of multiplication [17–20].1
Other kinds of multiplication adhere to other constraint equations.
Grassmann identiﬁed different classes of multiplication based on different sets of
constraint equations. Outer multiplication belongs to a class called circular multipli-
cation [17, 19]. Different kinds of circular multiplication adhere to one or more of
the constraint equations listed in Table1.1, where the vector units ep serve as a basis
in terms of which any vector a = a1e1 + a2e2 + · · · + amem may be expressed.
The outer product is generated by imposing the second and third constraint equa-
tions as shown in Table1.2. The inner product, symbolised for vectors by a dot in
contemporary notation, is generated by using the ﬁrst and second constraint equa-
tions. The product which Grassmann called central is generated by using the second
constraint equation alone [18, 20].
In the case of the inner and central products there is an arbitrary scale factor which
can be freely chosen. For the inner product the choice is plus one, and for the central
product the choice is minus one. The latter choice was made by Grassmann in order
to show that Hamilton’s quaternions [5] could be constructed from that particular
centralproduct[18,20].Cliffordlaterusedthesamenormalisation,formuchthesame
1There are typographical errors in the English translations which can be identiﬁed by referring to
the original documents.

8
1
History
Table 1.1 Constraint equations for circular multiplication
1
eres = eser
2
eres + eser = 0 and e2
1 = e2
2 = · · · = e2
m
3
e2
1 + e2
2 + · · · + e2
m = 0
Table 1.2 Three circular multiplications
Product
Constraint
equation
Unscaled
Scaled
Contemporary
notation
Inner
1 and 2
eres = 0
eres = 0
er · es = 0
erer = eses
e2
r = +1
er · er = +1
Central
2
eres = −eser
eres = −eser
eres = −eser
erer = eses
e2
r = −1
e2
r = −1
Outer
2 and 3
eres = −eser
eres = −eser
er ∧es =
−es ∧er
erer = 0
e2
r = 0
er ∧er = 0
reason in constructing an algebra [3] for the purpose of solving Maxwell’s quaternion
equations for electromagnetism [1].2 In retrospect, the constraint equations for the
central product and Clifford’s algebra are the same.
The choice e2
r = −1 for the central product made by Grassmann and adopted by
Clifford is not the only one followed. As a result, other conventions where e2
r = +1,
or where e2
r = +1 for some values of r and zero or −1 for other values of r, are also
used. Here, Grassmann’s and Clifford’s convention is followed.
1.2.2 Interdependence
Grassmann’s three kinds of circular multiplication: inner, central and outer, are not
independent. The central product can be expressed in terms of the other two:
ab = a ∧b −a · b
(1.6)
The relationship is veriﬁed in Table1.3 by substitution of the two cases er = es and
er ̸= es into Eq.1.6 and use of the equations in Table1.2.
The interdependence can be exploited to calculate the inner and outer products
from the central product:

a · b = −1
2(ab + ba)
a ∧b = + 1
2(ab −ba)
(1.7)
2Section 617.

1.3 Complex Numbers and Quaternions
9
Table 1.3 Veriﬁcation of relationship between inner, central and outer products
Case
Central
Outer
Inner
Outer–Inner
er = es
−1
0
1
−1
er ̸= es
er ∧es
er ∧es
0
er ∧es
1.3 Complex Numbers and Quaternions
1.3.1 Quaternions
Hamilton developed quaternions [5] as a generalisation of complex numbers. Quater-
nions Q are constructed as a linear combination of the elements from a set of
four quaternion units {1, I, J, K} weighted by constant coefﬁcients ξ, such as
Q = ξ01 + ξ1I + ξ2J + ξ3K. The quaternion units adhere to the constraint equa-
tions:
⎧
⎨
⎩
IJ = K
JK = I
KI = J
and IJK = −1
(1.8)
Note that these quaternion constraint equations simultaneously accommodate the
constraint equations I2 = −1 and IJ = −JI of Grassmann’s central multiplication.
1.3.2 Complex Numbers
Complex numbers are retrieved from quaternions by setting the coefﬁcients ξ3 =
ξ2 = 0. This can be veriﬁed by multiplying two such numbers u = v1 + wI and
z = x1 + yI:
uz = (v1 + wI)(x1 + yI) = vx1 + wyI2 + vyI + wxI
= (vx −wy)1 + (vy + wx)I
(1.9)
Noting that imaginary unit i follows the same constraint equation i2 = −1 as does
the quaternion unit I, it then follows, if the quaternion units 1 and I are replaced by
the real and imaginary units 1 and i respectively, that the exact same result represents
the product of two complex numbers.
1.4 Clifford’s Algebra
Clifford [3] constructed a set of quaternion units I1, J1, K1 from the vector units
e1, e2, e3 (or ι1, ι2, ι3 in his notation):

10
1
History
⎧
⎨
⎩
I1 = e2e3
J1 = e3e1
K1 = e1e2
(1.10)
with the multiplication being that of Grassmann’s central product. Hamilton’s rules
for quaternion units (Eq.1.8) then follow directly. With this construction the quater-
nion units can be interpreted as extensions of the second order, i.e. two-dimensional
oriented areas. However the construction is not unique, so neither is its interpretation.
Clifford realised that it is also possible to construct a second set of quaternions,
which adhere to Hamilton’s rules for quaternion units and which exhibit commuta-
tivity under central multiplication with the original set but do not interact with them
in any other way. Consider for example one such set:
⎧
⎨
⎩
I2 =
e0
J2 = −iσ
K2 = −ie0σ
(1.11)
wheree0 isafourthvectorunit,i istheimaginaryunit,andσ = −e1e2e3 fornotational
convenience. This particular set is worthy of note because it conforms in a direct
fashion to the vector calculus later developed by Gibbs [13]. Clifford himself made
a different choice [3], there not being at that time any need to conform.
Clifford constructed elements C of his algebra as quaternions:
C = A1 + BI2 + CJ2 + DK2
(1.12)
with quaternion coefﬁcients A, B, C, D of the form A = ξ01 + ξ1I1 + ξ2J1 + ξ3K1
for real or complex scalars ξ0 . . . ξ3. Because the quaternion units from the two sets do
not interact with one another, the algebra of these quaternion-quaternions has sixteen
independent units formed by the pairwise product of all elements in the two sets:
{1, I1, J1, K1} ∗{1, I2, J2, K2}
(1.13)
Clifford called this algebra a geometric algebra. Today this geometric algebra is
called a four-dimensional Clifford algebra.
1.5 Vector Calculus
The rules of Gibbs’s three-dimensional vector calculus [13] are based on two vector
products called the dot (·) and cross (×) products. These vector products can both
be calculated from the central product:

a · b = −1
2(ab + ba)
a × b = + 1
2(ab −ba)σ
(1.14)

1.5 Vector Calculus
11
where σ = −e1e2e3. Comparison of Eq.1.14 with Eq.1.7 shows the dot product as
identical to the inner product, and the cross product as closely related to the outer
(wedge) product:
a × b = (a ∧b)σ
(1.15)
Whereas the result of the outer product of two vectors is an oriented area, the result
of the cross product is the oriented normal to that area.
In three dimensions the central product can be expressed in terms of dot and cross
products:
ab = (a × b)σ −a · b
(1.16)
Putting b = a shows the central product square of a vector is minus the square of
its magnitude a = |a|:
a2 = aa = (a × a)σ −a · a = −a · a = −|a|2 = −a2
(1.17)
and the central product reciprocal of a vector is then:
1
a = a
a2 = −a
|a|2 = −a
a2
(1.18)
1.6 Synchronicity
A four-dimensional Clifford algebraic value C can be expressed in terms of compo-
nents which are either vector units (Grassmann), quaternions (Hamilton) or vectors
(Gibbs). The correspondence between these alternative expressions is formulated as:
C = A1 + BI2 + CJ2 + DK2
= A + Be0 −iCσ −iDe0σ
= (a + Aσ) + (b + Bσ)e0 −i(c + Cσ)σ −i(d + Dσ)e0σ
(1.19)
where A, B, C, D are quaternions based on one set of quaternion units {1, I1, J1, K1};
the quaternion units I2, J2, K2 are from an independent set; e0, e1, e2, e3 are vector
units; σ = −e1e2e3 is a notational convenience; A, B, C, D are Clifford vectors of
the form A = Axe1 + Aye2 + Aze3; and a, b, c, d are scalars.
The terms in parentheses are quaternions expressed in scalar plus vector form such
as A = a + Aσ. In this form a is the scalar part, the part Aσ = Axe2e3 + Aye3e1 +
Aze1e2 is an oriented area, and A = Axe1 + Aye2 + Aze3 is the vector part, normal
to the oriented area.
By setting various of the sixteen constant coefﬁcients to zero, a four-dimensional
Clifford value can be set to represent scalars, vectors, oriented areas and volumes,
quaternions and complex numbers. The central multiplication of Clifford values can

12
1
History
be used to produce central (also called Clifford), outer (wedge, ∧), inner (dot, ·) and
cross (×) products.
Clifford numbers and Clifford’s algebra embody in a single coherent form many
of the algebraic and geometric entities and operations commonly used.
1.6.1 Notation
Given that a Clifford number of four dimensions can represent a multitude of math-
ematical and geometric entities, a choice must be made regarding whether to adopt
different ways of writing the symbols representing each different entity or not. To
write a single Clifford number x as a real number, a complex number, a quaternion,
a full Clifford number, a vector, an oriented area, an oriented volume or an oriented
entity of the fourth dimension, all distinctly, requires some eight different ways of
expressing the same symbol.
Such a system is ﬂawed at the outset. The supposed clarity it is intended to bring
is lost immediately any two of these entities are added or multiplied together unless
additional special symbols are used for paired or triple combinations. One example
is the integrand of the Cauchy integral, being the product between two particular
vectors and a bivector (see Sect.7.3.1). The result is in the form of a sum of complex
scalar, oriented area, and oriented fourth-dimensional entity.
Should an extra special symbol be created? Ultimately the answer has to be no,
because the number of required symbols grows exponentially. The solution is simply
to use for this compound entity the single common symbolic expression for the most
general Clifford number with that many number of dimensions. With this approach
(really the only practical one) all entities are ultimately rendered using the same
typescript, and cannot be distinguished by sight alone.
For much of part II of the book a single typescript is adopted for mathematical and
geometric entities of all types. The nature of a particular symbol x must ultimately be
determined from the context in which it is found, locally only. Nevertheless, some of
the loosely standard conventions for particular types of entities are adopted in part I,
where it is important to provide a path to make the transition from speciﬁc historical
conventions to the convention of having no distinct typescripts.
In most of part I, real and complex scalars are rendered in lowercase italic script
x, as indicated in Table1.4. Quaternions are rendered in uppercase Fraktur script X,
except in the case of the four quaternion units which are rendered in uppercase bold
script X. In the early chapters where many different entities coexist, general Clifford
numbers are rendered in uppercase calligraphic script X.
Ordinary vectors as found in vector calculus are either lowercase bold script x or
uppercase bold script X to match with either the geometrical convention for a point
in space or the electromagnetic convention for a ﬁeld quantity. The corresponding
Clifford vectors x and ﬁelds X are not bold. Non-Clifford vector units carry a hat ˆx
and Clifford vector units take the form ex (see Sect.2.1). No special notation is used
for oriented areas, volumes or higher-dimensional entities.

1.6 Synchronicity
13
Table 1.4 Typescripts for different mathematical and geometric entities
Entity
Scripts
Real
abc . . . xyz
Complex
abc . . . xyz
Quaternion
ABC. . . XYZ
Quaternion unit
ABC . . . XYZ
Clifford
abc . . . xyz
ABC . . . XYZ
Vector
abc . . . xyz
ABC . . . XYZ
abc . . . xyz
ABC . . . XY Z
Vector unit
ˆaˆbˆc . . . ˆxˆyˆz
eaebec . . . exeyez
Oriented area
abc . . . xyz
Oriented volume
abc . . . xyz
Oriented
four-space
abc . . . xyz
Relativistic
frames
ABC . . . XYZ
A special symbol
is adopted in three dimensions only, to distinguish the vector
differential operator:
∇=
∂
∂x ˆx + ∂
∂y ˆy + ∂
∂z ˆz
(1.20)
in the context of Gibbs’s vector calculus from the Clifford vector differential operator:
=
∂
∂x e1 + ∂
∂y e2 + ∂
∂z e3
(1.21)
in the context of Clifford algebra. The distinction is important because the range of
multiplication operations which is supported by each is different. The conventional
vector operator ∇supports only scalar, dot and cross products, whereas the Clifford
vector operator
supports the full range of vector and Clifford multiplication and
all of the variants described in Sect.2.3.3. See Sect.5.4 for details.
1.7 Casting Physical Problems into Clifford Algebra
For the purpose of solving physical problems with Clifford’s algebra it is necessary
to cast whatever quantities are used to describe the physical phenomena involved,
and the way those quantities are observed to behave and interact with one another,
into a Clifford algebraic formulation.
For example, in the case of the phenomenon of electromagnetism, the quantities
of most interest are the sources (the current density J and the charge density ρ) and
the ﬁelds (the electric ﬁeld E and the magnetic ﬁeld H). In addition it is necessary
to include the physical properties of the materials (the electric permittivity ϵ and the
magnetic permeability μ) in those regions where the ﬁelds exist.

14
1
History
In order to reproduce Maxwell’s original equations [1]3 it is necessary to ensure
that the Clifford representation of the electromagnetic ﬁeld together with the Clifford
representation of the partial differential operators (div ∇·, curl ∇× and ∂
∂t ) form a
correctly matched pair. To adhere to physical behaviour it is necessary to ensure
this matched pair produces consistent results when viewed (or mapped) from one
moving frame of reference to another. Doing so properly incorporates Einstein’s laws
of special relativity [21]. See Chap.4 for details.
Customarily ρ, μ, ϵ and
∂
∂t are treated as scalars, and E, H, J, ∇· and ∇× are
treated as vectors. The former are candidates for any of the scalars a, b, c, d in
Eq.1.19, and the latter are candidates for the Clifford vectors A, B, C, D.
When encoded according to the phenomenological considerations the electro-
magnetic ﬁeld F is written in Clifford form as [22]:
F = √μ Hσ −i√ϵ Ee0
(1.22)
the sources are written:
S = √μ J +
i√ϵ ρe0
(1.23)
the differential operator is written:
D =
−i
ce0 ∂
∂t
(1.24)
and Maxwell’s equations are written:
DF = S
(1.25)
where σ = −e1e2e3, i2 = −1,
=
∂
∂x e1 + ∂
∂y e2 + ∂
∂z e3 and c is the speed of light.
See Sect.5.1.2 for details.
Once Maxwell’s equations are formulated in this manner they can be solved [2,
12] using the Cauchy integral [8]4 (also [9]5) in its multi-dimensional Cliffordian
form [10]. See part II for details.
1.8 Exercises
Q1. Using the algebraic properties of the outer product show that the two evolu-
tions below have the same value in spite of their obviously different geometric
shapes.
3Section 617.
4Equation 6.
5Section 6.9

1.8 Exercises
15
Q2. Show that the two evolutions below are equal by approximating one of them
with arbitrarily small parallelograms.
Q3. Calculate the outer, central and inner products for the two vectors a =
axe1 + aye2 + aze3 and b = bxe1 + bye2 + bze3. Write the individual terms
of each product in a 3 × 3 table such as shown below. Compare the three tables
and verify that ab = a ∧b −a · b.
central
b
ab
bxe1
bye2
bze3
axe1
a
aye2
aze3
outer
b
a ∧b
bxe1
bye2
bze3
axe1
a
aye2
aze3
inner
b
a · b
bxe1
bye2
bze3
axe1
a
aye2
aze3
Q4. Show that under central multiplication the vector units e1, e2 and e3 retain the
associative property of the outer product.
Q5. Using Eq.1.8 show for all quaternion units I, J, K that the constraints of Grass-
mann’s central multiplication apply.
Q6. Show that Hamilton’s constraint equations1.8 for quaternion units follow
directly from Clifford’s construction of quaternion units in Eq.1.10.
Q7. Show that σ 2 = 1, and that σ commutes with vector units e1, e2 and e3 but
anticommutes with vector unit e0.
Q8. Show that Hamilton’s constraint equations1.8 for quaternion units follow
directly from the construction of quaternion units in Eq.1.11.
Q9. Show that the two sets of quaternion units in Eqs.1.10 and 1.11 are commu-
tative.
Q10. Calculate all sixteen units of Clifford’s four-dimensional algebra.
Q11. Calculate the cross product in Cartesian components from Eq.1.15 and verify
from an independent source.
Q12. Substitute a =
=
∂
∂x e1 + ∂
∂y e2 + ∂
∂z e3 into Eq.1.15 to produce an expression
for curl. Expand and verify from an independent source.
Q13. Substitute a =
into Eq.1.16 to produce an expression for the Clifford product
b in terms of div and curl.
Q14. Show that the Clifford product ab =
=
2 produces, to within a multi-
plicative constant, the Laplacian.

16
1
History
Q15. SubstituteD andF intoEq.1.25andusethedistributivepropertytoexpandinto
four terms. Then expand the Clifford products
H and
E as in exercise 13.
Separate the result into a system of four equations, so that the terms of each
has as a common factor one of the quaternion units from the set {1, I2, J2, K2}.
Finally verify from an independent source that, to within multiplicative con-
stants, the four equations are the same as Maxwell’s equations.
A15. See Eqs.5.6 and 5.7.
Q16. Show that the Clifford product D2 = DD produces, to within a multiplicative
constant, the d’Alembertian (the scalar wave operator).

Chapter 2
Numbers and Arithmetic
2.1 Structure of Clifford Numbers
Clifford numbers are multi-dimensional entities which follow certain simple rules
for the arithmetic operations of addition and multiplication. Each Clifford number
is composed of several different components. Table2.1 gives examples of Clifford
numbers for dimensions from zero to three.
The number of components in any Clifford number depends on its dimension.
In general an m-dimensional Clifford number has 2m components. Of course, some
of these components may be of zero value. For problems in electromagnetism four-
dimensionalCliffordnumbersarerequired,providing24 = 16components.However
the electromagnetic ﬁeld has only six non-zero components, three for the electric part
of the ﬁeld and three for the magnetic part of the ﬁeld. The other ten components are
identically zero.
Each component in a Clifford number is made up from two parts: a coefﬁcient
and a unit.
The coefﬁcient is a numeric entity such as a real or complex number. In algebraic
calculations, when the value of the numeric coefﬁcient is unknown, a symbolic
variable which represents the value of the coefﬁcient is used instead. It is also possible
to use matrices and operators as coefﬁcients. For problems in electromagnetism two
types of coefﬁcients are used: complex numbers and partial differential operators.
When coefﬁcients combine in operations such as addition and multiplication they
behave according to the normal rules for entities of their own particular types.
The unit is a symbolic entity. By convention, the symbol is constructed from the
letter e with a subscript attached, either singly or as a product. Products of units
follow Clifford’s rules (constraint equations):
eres =
−1
when r = s
−eser
when r ̸= s
(2.1)
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_2
17

18
2
Numbers and Arithmetic
Table 2.1 Examples of Clifford numbers
dimension
grade
no. of components
0
1
2
3
0
1
2
3
all
0
3+4i
1
1
1
3+4i
+7e0
1
1
2
2
3+4i
+7e0 +πe1
+ie0e1
1
2
1
4
3
3+4i
+7e0 +πe1 +xe2 +ie0e1 +be0e2 +ce1e2 + 21.4e0e1e2
1
3
3
1
8
coeﬃcients
(3+4i)
7
π
x
i
b
c
21.4
units
e0
e1
e2
e0e1
e0e2
e1e2
e0e1e2
components
(3+4i)
7e0
π e1
xe2
ie0e1
be0e2
ce1e2
21.4e0e1e2
Arbitrarily complicated products of units can always be reduced to the form 
p ep
where no two subscripts p are the same.
Note that the product of units is not commutative. From this property it follows
that the product of Clifford numbers themselves is not commutative, irrespective
of the type of coefﬁcients. Coefﬁcients and units freely commute with one another,
and coefﬁcients may or may not commute amongst themselves depending on their
nature, e.g. numbers do but matrices don’t.
Components are classiﬁed into grades according to their units. Components with
no visible units, such as (3 + 4i) in Table2.1, fall into grade zero, denoted symbol-
ically by a large wedge with a superscript zero, i.e. 0. Components in grade zero
play the geometric role of scalars. Components containing a single visible e factor
(when reduced according to the rules of Eq.2.1) ep, fall into grade one: 1. These
components play the geometric role of vectors (oriented line segments). Components
with a pair of visible e factors, eres where r ̸= s, fall into grade two, 2, and play
the role of bivectors (oriented areas). Similarly, in 3 are components with units
eqeres which play the role of trivectors (oriented volumes). In general components
containing ℓdistinct units, such as ℓ
p=1 ep, fall into grade ℓand play the role of
ℓ-vectors.
A linear combination of all ℓ-vectors from all grades is called a multivector.
Clifford numbers are multivectors.
2.2 Notation
2.2.1 Units
The units in Clifford numbers are written in a variety of forms, in order to simply
the notation where possible.
The unit for grade zero 0, the grade which accommodates scalars, is variously
writtenas1,e∅where∅istheemptysetor,asinTable2.1,isleftunwritten.Grassmann
called this the absolute unit, and classiﬁed it as a unit of zeroth order. Note that the
absolute unit is strictly not a Clifford unit, and that when written as e∅does not follow
the rules 2.1 for products of Clifford units.

2.2 Notation
19
The units of ﬁrst order, those in grade one 1, the grade which accommodates
vectors, are written either as the symbol e with integer subscripts, for example e0,
e1, e2, or with lower case alphabetic subscripts, for example eq, er, es. The alpha-
betic subscripts are usually taken to represent integers although that is by no means
necessary. These units are referred to as primal units, being the basis from which
all units of higher order are generated. Note that the (ﬁrst order) primal (vector) unit
e0 ∈1 is not the same as the (zeroth order) absolute (scalar) unit e∅∈0.
Higher order units, for grades beyond 1, are either written directly as products of
primal units, for example e0e1, eres, eqe3e4, or written as the symbol e with uppercase
alphabetic subscripts, for example eA, eB, eS. The uppercase alphabetic subscripts
are taken to represent sets. These sets contain subscripts p for all of the primal units
ep which must be formed into a product to generate the units of higher order. For
example:
eA
where A = {0, 1, 2} ⇒eA = e0e1e2
eB
where B = {q,r, s} ⇒eB = eqeres
eS
where S = {A, B}
⇒eS = eAeB = e0e1e2eqeres
(2.2)
These higher order units are called evolved units, since the Clifford product which
generates them reduces to the outer product (as in Sect.1.2.2) and thereby to Grass-
mann’s process of evolution. The unit eS is an evolved unit composed of two factors
eA and eB. Units eA and eB are themselves both evolved units, each composed of
three factors. Those six factors are all in grade one (i.e. they are primal units), so
they contain no further factors apart from themselves and the absolute unit. Strictly
speaking that ﬁnal (trivial) factorisation means that primal units can also be consid-
ered as evolved from the absolute unit as generating element using themselves as the
measure of generation.
When units are expanded fully in primal form it is easy to identify the grade to
which they belong. When units are written in evolved form, the grade to which the
unit belongs is not always immediately apparent.
As sets, the subscripts of all evolved units contain also the empty (null) set ∅. The
evolved unit eS of Eq.2.2 could also be expanded as:
eS
where S = {A, B} ⇒eS = e∅eAeB = e∅e0e1e2eqeres
(2.3)
Although it is usually convenient to leave the absolute unit e∅= 1 unwritten, it is
importanttotaketheemptysetexplicitlyintoaccountwhenperformingsetoperations
on the subscripts of evolved units, as in Sect.2.3.3.
2.2.2 Vectors
The notation used here to write Clifford vectors takes the form of a summation over
a lowercase (integer) index of components:

20
2
Numbers and Arithmetic
x =

p
x pep
(2.4)
The x p are the coefﬁcients, and the ep are the units, all being primal units (from grade
one). The index p varies through some range of integers. For an m-dimensional vector
the index plays the role of m integers, one for each of the m units therein. Integer
values may well be chosen in the range from 0 to m −1 or from 1 to m, according
to preference.
For example, a four-dimensional Clifford vector can be written:
x =
3

p=0
x pep = x0e0 + x1e1 + x2e2 + x3e3 =
4

p=1
x′
pe′
p = x′
1e′
1 + x′
2e′
2 + x′
3e′
3 + x′
4e′
4
(2.5)
where x′
p = x p−1 and e′
p = ep−1.
For problems in electromagnetism the unit e0 is taken to represent the dimension
of time or frequency, and the units e1, e2, e3 are taken to represent the three orthogonal
dimensions of space.
2.2.3 Numbers
The notation used here to write Clifford numbers more general than vectors takes
the form of a summation over an uppercase (set) index of components:
x =

S
xSeS
(2.6)
The xS are the coefﬁcients, and the eS are units from all grades, being either ab-
solute, primal, or evolved. The index S varies through some range of sets. For an
m-dimensional number the index plays the role of 2m sets, one for each of the 2m
units in an m-dimensional Clifford number.
For example, a four-dimensional Clifford number can be written:
x =

S⊆{0,1,2,3}
xSeS = x∅e∅
+ x0e0 + x1e1 + x2e2 + x3e3
+ x0,1e0e1 + x0,2e0e2 + x0,3e0e3 + x1,2e1e2 + x1,3e1e3 + x2,3e2e3
+ x0,1,2e0e1e2 + x0,1,3e0e1e3 + x0,2,3e0e2e3 + x1,2,3e1e2e3
+ x0,1,2,3e0e1e2e3
(2.7)

2.2 Notation
21
where each of the ﬁve grades is written on a separate line on the right hand side. The
empty (null) set has been included explicitly in the expansion for grade zero, but left
unwritten for the other grades.
2.3 Arithmetic Operators
2.3.1 Inversion of Signs
For complex numbers it is possible to invert the sign of either the real or imaginary
components separately using the operations of negation and complex conjugation.
For Clifford numbers there are many more components and many more possibilities.
Table2.2 shows in addition to the operation of negation, three other operations on
Clifford numbers: involution, reversion and Clifford conjugation. All three of these
involve inverting the signs of some of the components according to a particular rule
or pattern based on the grade of the units in those components, as shown in Table2.3.
The operation of involution (denoted by the symbol ‘¬’) involves changing the
sign of every primal unit ep in every evolved unit eS. The effect is to multiply every
component containing a unit in grade ℓby the factor of ξ = (−1)ℓ. The overall effect
is to invert the sign of all odd numbered grades, as shown in Table2.3.
Table 2.2 Operations involving inversion of sign
Operation
f (x)
Deﬁnition
Effect on primal units
Effect on evolved
unit
Identity
x
x = 
S xSeS
eS = ℓ
p=1 ep = ξeS
ξ = 1
Negation
−x
−x
= 
S xS(−eS)
−eS = −ℓ
p=1 ep
= ξeS
ξ = −1
Involution
¬x
¬x = 
S xS
¬eS
¬eS = ℓ
p=1(−ep)
= ξeS
Change
sign
ξ = (−1)ℓ
Reversion
x
x = 
S xS 
eS

eS = ℓ
p=1 eℓ+1−p
= ξeS
Reverse
order
ξ = (−1)ℓ(ℓ−1)/2
Clifford
conjugation
x
x = 
S xSeS
eS = ℓ
p=1(−eℓ+1−p)
= ξeS
Reverse
order
Change
sign
ξ = (−1)ℓ(ℓ+1)/2
Table 2.3 Periodic behaviour
of reversion, involution and
Clifford conjugation
0
1
2
3
4
5
6
7
8
9 10 11
grade
involution
reversion
Cliﬀord
conjugation
+
+
+
+
+
+
−
−
−
−
−
−
+
+
+
+
+
+
−
−
−
−
−
−
+
+
+
−
−
−
−
−
−
+
+
+

22
2
Numbers and Arithmetic
The operation of reversion (denoted by the tilde symbol ‘’) involves reversing
the entire sequence of primal units ep in every evolved unit eS. Returning all of the
primal units to their original order then requires ℓ(ℓ−1)/2 exchanges of adjacent
pairs. The effect is to multiply every component containing a unit in grade ℓby the
factor of ξ = (−1)ℓ(ℓ−1)/2.
The operation of Clifford conjugation (denoted by the overbar symbol ‘ ’) in-
volves both involution and reversion, i.e. both changing the sign of every primal
unit ep and also reversing the order of the entire sequence of primal units. The ef-
fect is to multiply every component containing a unit in grade ℓby the factor of
ξ = (−1)ℓ(ℓ+1)/2.
2.3.2 Addition and Subtraction
Addition and subtraction of Clifford numbers is straightforward. The coefﬁcients of
components with matching units are simply added or subtracted according to the
normal rules for entities of their own particular types. For two Clifford numbers
a = 
S aSeS and b = 
S bSeS, the sum a + b = c is:
a + b =

S
aSeS
	
+

S
bSeS
	
=

S
(aS + bS)eS =

S
cSeS = c
(2.8)
and the difference a −b = c is:
a −b =

S
aSeS
	
−

S
bSeS
	
=

S
(aS −bS)eS =

S
cSeS = c
(2.9)
The index set S is taken to include all of the units in both a and b.
2.3.3 Multiplication
Real, complex and Clifford multiplications have zero, one and two constraint equa-
tionsrespectively.Eachtimemoreconstraintsareappliedanewkindofmultiplication
is created.
For Clifford numbers, in addition to the constraints on the primal units er, es as
in Eq.2.1, a whole new layer of constraints is applied at the level of the evolved
units eA, eB. Each different constraint (or set of constraints) leads to a different
multiplication.

2.3 Arithmetic Operators
23
All of these kinds of multiplication can be deﬁned in terms of a general uncon-
strained product operation (see [7]), as denoted here by the symbol ‘⋄’. For two
Clifford numbers a = 
A aAeA and b = 
B bBeB, the general product a ⋄b = c
is:
a ⋄b =

A
aAeA
	
⋄

B
bBeB
	
=

A

B
aAbB(eA ⋄eB) =

C
cCeC = c
(2.10)
The value of the product is determined by the conventional product of its coefﬁcients
cC = aAbB according to the normal rules for entities of their own particular types,
and the general product of the units eC = eA ⋄eB adhering to the constraint equations
for the particular kind of multiplication the general product operation ⋄is intended
to deliver.
Table2.4 shows seven different kinds of product, all distinguished by the way
they adhere to the general constraint equation:
eA ⋄eB =
 eAeB
when √
0
otherwise
(2.11)
The tick √is determined for each of the kinds of multiplication according to such
relationships as whether the unit eA contains all or none of the primal units ep found
in unit eB, and/or vice versa or not. The empty set ∅corresponding to the absolute
unit e∅= 1 is taken into account as part of the determination.
Table2.4 shows the constraint equations for the different kinds of multiplication
in set notation, and Table2.5 shows the result of applying the constraint equations to
a product of two-dimensional Clifford numbers.
Table 2.4 Constraint equations for seven different kinds of Clifford multiplication
Product
a ⋄b
Constraint equations
Excludes
B ∩A = ∅
Either includes B
⊇
⊂A
Vector
|B||A| = 1
Non-vector
|B||A| ̸= 1
Includes
B ⊇A
Includes
B ⊆A
Central
a b
√
√
√
√
√
Outer
a ∧b
√
√
√
Inner
a ∨b
√
√
√
√
Left inner
a ⌟b
√
√
√
Right inner
a ⌞b
√
√
√
Scalar
(a, b)
√
+
√
√
√
Dot
a · b
√
+
√
+
√

24
2
Numbers and Arithmetic
Table 2.5 Multiplication of two-dimensional Clifford numbers a and b
Set
Units
A
1
1
1
1
e0
e0
e0
e0
e1
e1
e1
e1
e0e1
e0e1
e0e1
e0e1
B
1
e0
e1
e0e1
1
e0
e1
e0e1
1
e0
e1
e0e1
1
e0
e1
e0e1
Product
a ⋄b
C
1
e0
e1
e0e1
e0
−1
e0e1
−e1
e1
−e0e1
−1
e0
e0e1
e1
−e0
−1
Central (Clifford) a b

A

B
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
√
Outer (wedge)
a ∧b 
A

B∩A=∅
√
√
√
√
√
√
√
√
√
Inner
a ∨b 
A

B⊇
⊂A
√
√
√
√
√
√
√
√
√
√
√
√
√
√
Left inner
a ⌟b

A

B⊇A
√
√
√
√
√
√
√
√
√
Right inner
a ⌞b

A

B⊆A
√
√
√
√
√
√
√
√
√
Scalar
(a, b) 
A

B=A
√
√
√
√
Dot
a · b

A∈∧1

B=A
√
√

2.3 Arithmetic Operators
25
The central product ab (Clifford multiplication, denoted by no visible symbol) is
the most general, with no constraint equations at the level of the evolved units. All of
the other products derived from the general product are contained within the central
product.
The outer product a ∧b (wedge product, denoted by the symbol ‘∧’) is con-
strained to produce non-zero values only when both factors eA, eB are composed of
units, none of which match any primal unit in the other.
The inner product a ∨b (denoted by the symbol ‘∨’) is constrained to produce
non-zero values only when either of the factors eA, eB is composed of units, all of
which match any unit in the other.
Grassmann called the outer and inner products by those names because they give
non-zero results only if the two factors eA, eB either lie completely outside the linear
span of the primal units contained in each other, or one lies completely inside the
linear span of the primal units contained in the other.
The left inner product a⌟b (denoted by the symbol ‘⌟’) is constrained to produce
non-zero values only when the leftmost of the factors eA, eB is composed of units,
all of which match any unit in the other.
The right inner product a⌞b (denoted by the symbol ‘⌞’) is constrained to produce
non-zero values only when the rightmost of the factors eA, eB is composed of units,
all of which match any unit in the other.
The scalar product (a, b) (denoted by the parenthesis-comma-parenthesis nota-
tion ‘( , )’ ) is constrained to produce non-zero values only when both of the factors
eA, eB are composed of units, all of which match any unit in the other.
For the three inner products, and for the scalar product, the conjugation can be
moved by substituting a′ = a or b′ = b, which then leads to a product of factors
eAeB = eA′eB or eAeB = eAeB′. For the scalar product the factor to which the
conjugation is applied is of little consequence since the result, always a scalar, is the
same in either case.
The dot product a · b (denoted by the symbol ‘·’) is constrained to produce non-
zero values only when both of the factors eA, eB are composed of the one and same
primal unit. For vectors a, b the value is given in terms of Clifford multiplication by
Eq.1.14, and for primal units er, es the value is given in Table1.2. The dot product
is a special case of the inner and scalar products, just for vectors.
The seven products listed in Table2.5 are not all independent. The left and right
inner products are deﬁned in terms of the outer and scalar products by the two duality
relationships:
(u ⌟x, y) = (x, u ∧y)
(x ⌞u, y) = (x, y ∧u)
(2.12)
These relationships hold for both the Hamilton, Maxwell, Grassmann, Clifford con-
vention e2
r = −1, and for the alternative convention e2
r = +1. For the alternative
convention the products in Table2.5 employing Clifford conjugation must be modi-
ﬁed so as to use reversion instead. It is important when reading published literature
relating to Clifford algebra to determine early which convention has been used so as
to avoid confusion.

26
2
Numbers and Arithmetic
For problems in electromagnetism as treated here it is the unconstrained Clifford
or central multiplication which is of primary importance. For problems in differential
geometry it is the outer and left inner products which play the major roles.
2.3.4 Application
Figure2.1 shows two Clifford vectors:
a = a∥+ a⊥= e1
b = b∥+ b⊥= 1
2e1 +
√
3
2 e2
(2.13)
which are each broken into two components, parallel (∥) and perpendicular (⊥) to
the other:

a∥= 1
4e1 +
√
3
4 e2
a⊥= 3
4e1 −
√
3
4 e2
and

b∥= 1
2e1
b⊥=
√
3
2 e2
(2.14)
The vector a∥is the component of a parallel to the direction of b, and the vector
a⊥is the component of a perpendicular to the direction of b. The vectors b∥and b⊥
behave in a similar way with respect to the direction of a.
By direct calculation the outer product:
a⊥∧b = a ∧b = a ∧b⊥
(2.15)
depends only on the perpendicular components of the two vectors. By contrast, the
inner product:
a∥∨b = a ∨b = a ∨b∥
(2.16)
depends only on the parallel components of the two vectors.
Fig. 2.1 Vectors a and b
broken into components
perpendicular and parallel to
one another
a
a⊥
a
b
b⊥
b

2.3 Arithmetic Operators
27
a
a⊥
b
a⊥∧b
a
b
a∧b
a
b
b⊥
a∧b⊥
(a)
(b)
(c)
Fig. 2.2 Torque (shaded) calculated from outer product of (a) perpendicular component a⊥of
force a = F with whole lever-arm b = d, of (b) whole force a = F with whole lever-arm b = d,
and of (c) whole force a = F with perpendicular component b⊥of lever-arm b = d
In the case that the vector a represents a force F applied to the tip of a lever-arm,
and the vector b represents the displacement d from the tip of the level-arm to its
pivot, then the geometrical interpretation shown in Fig.2.2b for the outer product
a ∧b = F ∧d, is the resulting torque as given in value by the area of the shaded
portion of the ﬁgure. Figure2.2a shows the case taking the perpendicular component
of force F with the whole of the displacement d, and Fig.2.2c shows the case taking
the whole force F with the perpendicular component of the displacement d. In all
cases the size of the shaded portion of the ﬁgures (i.e. the amount of torque) is the
same.
In the case that the vector a represents a force F applied to an object, and the
vector b represents the displacement d of that object under the inﬂuence of the force,
then the geometrical interpretation shown in Figs.2.3b and 2.4b for the inner product
a
a
a
b
a ∨b
a
a
b
a∨b
a
a
b
b
a∨b
(a)
(b)
(c)
Fig. 2.3 Work (shaded) calculated from inner product of (a) parallel component a∥of force a = F
with whole displacement b = d, of (b) whole force a = F with whole displacement b = d, and of
(c) whole force a = F with parallel component b∥of displacement b = d. The inner product with
vector a is converted to an outer product with rotated vector ′a

28
2
Numbers and Arithmetic
a
a
b
b
a ∨b
a
b
b
a∨b
a
b
b
b
(b )
a∨b
(a)
(b)
(c)
Fig. 2.4 Work (shaded) calculated from inner product of (a) parallel component a∥of force a = F
with whole displacement b = d, of (b) whole force a = F with whole displacement b = d, and of
(c) whole force a = F with parallel component b∥of displacement b = d. The inner product with
vector b is converted to an outer product with rotated vector b′
a∨b = F ∨d, is the resulting work as given in value by the area of the shaded portion
of the ﬁgures. Figures2.3a and 2.4a show the case taking the parallel component of
force F with the whole of the displacement d, and Figs.2.3c and 2.4c shows the case
taking the whole force F with the parallel component of the displacement d. In all
cases the size of the shaded portion of the ﬁgures (i.e. the amount of work) is the
same.
In Fig.2.3b the vector ′a is constructed by rotating the vector a by −90◦when
angles are measured in a positive sense through the smallest arc from a to b. This
converts the inner product of a and b into an evolution (outer product) of ′a and b.
Similar conversions have been made in Fig.2.3a, c.
In Fig.2.4b the vector b′ is constructed by rotating the vector b by +90◦. This
converts the inner product of a and b into an evolution (outer product) of a and b′.
Similar conversions have been made in Fig.2.4a, c.
The torque is a bivector and the work is a scalar. Calculating the central product
ab produces the torque in grade two of the result and produces the work in grade
zero of the result. Depending on the physical situation it may be one or other of these
components which is of most interest.
2.4 Numerical Implementation
2.4.1 Dimensional Recursion
A Clifford number Z of dimension m > 0 can be constructed by combining two
Clifford numbers X and Y of dimension m −1 with the unit em for dimension m:
Z(m) = X(m−1) + Y(m−1)em
(2.17)

2.4 Numerical Implementation
29
Table 2.6 Recursive construction of Clifford numbers
Dimension
Number
Involution of number
m
Z(m)
X(m−1) +
Y(m−1)em
¬
Z(m)
¬
X (m−1)
−¬
Y(m−1) em
m −1
Z(m−1)
X(m−2) +
Y(m−2)em−1
¬
Z(m−1)
¬
X (m−2)
−¬
Y(m−2) em−1
· · ·
· · ·
· · ·
· · ·
· · ·
2
Z(2)
X(1) + Y(1)e2
¬
Z(2)
¬
X (1) −¬
Y(1) e2
1
Z(1)
X(0) + Y(0)e1
¬
Z(1)
¬
X (0) −¬
Y(0) e1
0
Z(0)
x + iy
¬
Z(0)
x + iy
The process can be repeated for X and Y with unit em−1, and for all lower dimensions
down to Clifford numbers of dimension zero, as shown in Table2.6. At that level,
a Clifford number is simply constructed from a single complex number z = x + iy:
Z(0) = x + iy
(2.18)
Note that the involution operation (in the two rightmost columns) plays a role for
the primal units ep of Clifford numbers similar to the role the complex conjugate
operation plays for the imaginary unit i of complex numbers. However, the involution
does not operate on the imaginary unit i, so the involution of a zero-dimensional
Clifford number is the same as the original number. (This is similar to complex
numbers, where the complex conjugate of a real number is the same as the original
number).
2.4.2 Recursive Product
The product of Clifford numbers of any dimension can be recursively deﬁned in terms
of Clifford numbers of lower dimension, in a form similar to the (more familiar)
product of complex numbers. For complex numbers u = v + iw and z = x + iy the
product is:
uz = (v + iw)(x + iy) = [vx −wy] + i[vy + wx]
(2.19)
For m-dimensional Clifford numbers U(m) = V(m−1) + W(m−1)em and Z(m) =
X(m−1) + Y(m−1)em the product is:

30
2
Numbers and Arithmetic
U(m)Z(m) = (V(m−1) + W(m−1)em)(X(m−1) + Y(m−1)em)
= [V(m−1)X(m−1) + W(m−1)emY(m−1)em]
+ [V(m−1)Y(m−1)em + W(m−1)emX(m−1)]
(2.20)
Changing the order of emX(m−1) to X(m−1)em introduces minus signs in all odd grades
of X. The same effect can be achieved by applying the involution operator (as
described in Sect.2.3.1) so that:
em
¬
X (m−1)= X(m−1)em
(2.21)
Multiplying both sides from left and right by em now gives:
emem
¬
X (m−1) em = emX(m−1)emem
¬
X (m−1) em = emX(m−1)
(2.22)
Using this result for both emX(m−1) and emY(m−1) in Eq.2.20 gives:
U(m)Z(m) = [V(m−1)X(m−1) + W(m−1)
¬
Y(m−1) emem]
+ [V(m−1)Y(m−1)em + W(m−1)
¬
X (m−1) em]
= [V(m−1)X(m−1) −W(m−1)
¬
Y(m−1)]
+ [V(m−1)Y(m−1) + W(m−1)
¬
X (m−1)]em
(2.23)
Comparison of Eq.2.23 for the multiplication of Clifford numbers to the case for
multiplication of complex numbers (Eq.2.19) shows strong similarities. Structurally
the equations are the same, with the only added complication in the case of Clifford
multiplication being the need to apply the involution operation to some of the terms.
The simple form of Eq.2.23 can be exploited to develop simple (although recursive)
computer implementations of Clifford multiplication, as shown in Sect.2.4.3.
2.4.3 Machine Computation
Currently no computer languages exist which support generic data types for Clifford
numbers. In order to perform machine-based arithmetic operations with Clifford
numbers it is necessary both to design a suitable data construct which serves to
represent them, and to develop accompanying computer routines which serve to
operate on that construct.
The recursive representation of Clifford numbers described in Sect.2.4.1 exhibits
the form of a binary tree in which a number Z of dimension m > 0 consists of an
ordered pair of elements (numbers) X, Y each of dimension one lower, and each

2.4 Numerical Implementation
31
branch of the tree terminates at the lowest dimension m = 0 with a single element
(number) Z = a0, where a0 is a complex number:
Z := (X Y)
m > 0
(2.24)
Z := a0
m = 0
(2.25)
Substituting two elements in the form of Eq.2.25 into Eq.2.24 gives the representa-
tion of a Clifford number of dimension m = 1:
Z := (a0 a1)
X
Y
m = 1
(2.26)
where now both a0 and a1 are complex numbers. Similarly, substituting two elements
in the form of Eq.2.26 into Eq.2.24 gives the representation of a Clifford number of
dimension m = 2. Repeating the substitution recursively gives the representations
of Clifford numbers for successively higher dimensions. The representation in tree
structure of Clifford numbers Z of dimension m ≤4 is shown in Table2.7.
The tree structure contains only the coefﬁcients aS of the components of a Clif-
ford number. The units eS need never be recorded explicitly. They can always be
determined from the position of the coefﬁcients in the tree.
Multiplication as described in Sect.2.4.2, of Clifford numbers represented in the
tree structure, is only a little more complicated than multiplying two complex num-
Table 2.7 Machine representation in tree structure of Clifford numbers of dimension m from zero
to four
Z := a0
m = 0
Z := (a0 a1
X Y
)
m = 1
Z := ((a0 a1
  
) (a2 a3
  
)
X
Y
)
m = 2
Z := (((a0 a1)(a2 a3)



) ((a4 a5)(a6 a7)



)
X
Y
)
m = 3
Z := ((((a0 a1)(a2 a3))((a4 a5)(a6 a7))



) (((a8 a9)(a10 a11))((a12 a13)(a14 a15))



)
X
Y
)
m = 4
Table 2.8 Recursive multiplication of Clifford numbers in Reduce code
procedure cmulx(U,Z);
if tlist(U)=1 and tlist(Z)=1
then list(subx(cmulx(first(U),first(Z)),cmulx(second(U),invc(second(Z)))),
addx(cmulx(first(U),second(Z)),cmulx(second(U),invc(first(Z)))))
else if tlist(U)=0 and tlist(Z)=0
then U*Z else write "bad arguments to cmulx";

32
2
Numbers and Arithmetic
bers. By way of example Table2.8 shows a computer implementation “cmulx” of
Eq.2.23 in the Reduce programming language, for multiplying two Clifford num-
bers “U” and “Z” of equal but arbitrary dimension. This implementation invokes a
recursive call on itself, along with calls to companion routines “subx”, “addx” and
“invc”, as described in appendix A, for subtraction, addition and involution. The
actual multiplication is performed by the single Reduce expression “U*Z”.
Multiplying Clifford numbers of different dimensions is only slightly more com-
plicated. Routines to do so are listed in appendix A, along with brief descriptions of
the purpose of each routine.
Examples of machine computations on Clifford numbers with predominantly
integer coefﬁcients (for simplicity of reading) are shown in Table2.9. Note that
examples 2 and 5, of multiplication on one-dimensional Clifford numbers, behave
according to the same rules as complex multiplication. Note also that the routines
Table 2.9 Examples of machine computations on Clifford numbers
1: printcliff(cmulx(2,5));
10
2: printcliff(cmulx({1,2},{3,4}));
10*e(0)-5
3: u:={v,w};
u:={v,w}
4: z:={x,y};
z:={x,y}
5: printcliff(cmulx(u,z));
e(0)*(v*y+w*x)+v*x-w*y
6: printcliff(cmulx({{1,2},{3,4}},{{5,6},{7,8}}));
30*e(1)+24*e(0)*e(1)+12*e(0)-60
7: printcliff(cmulx({{{1,2},{3,4}},{{5,6},{7,8}}},
{{{9,10},{11,12}},{{13,14},{15,16}}}));
-38*e(2)-66*e(1)*e(2)+246*e(1)+204*e(0)*e(2)+192*e(0)*e(1)*e(2)
-152*e(0)*e(1)-220*e(0)-218
8: z:=cmulx({{{1,2},{3,4}},{{5,6},{7,8}}},
{{{9,10},{11,12}},{{13,14},{15,16}}});
z:={{{-218,-220},{246,-152}},{{-38,204},{-66,192}}}
9: printcliff(z);
-38*e(2)-66*e(1)*e(2)+246*e(1)+204*e(0)*e(2)+192*e(0)*e(1)*e(2)
-152*e(0)*e(1)-220*e(0)-218
10: dimc(z);
3
11: printcliff(invc(z));
38*e(2)-66*e(1)*e(2)-246*e(1)+204*e(0)*e(2)-192*e(0)*e(1)*e(2)
-152*e(0)*e(1)+220*e(0)-218
12: printcliff(gradec(z,0));
-218
13: printcliff(gradec(z,1));
-38*e(2)+246*e(1)-220*e(0)
14: printcliff(gradec(z,2));
-66*e(1)*e(2)+204*e(0)*e(2)-152*e(0)*e(1)
15: printcliff(gradec(z,3));
192*e(0)*e(1)*e(2)

2.4 Numerical Implementation
33
Table 2.10 Symbolic veriﬁcation of Clifford product duality relationship from ﬁrst line of Eq.2.12
1: m:=4;
m:=4
2: x:=makecliff(m,x);
x:={{{{x0,x1},{x2,x3}},{{x4,x5},{x6,x7}}},
{{{x8,x9},{x10,x11}},{{x12,x13},{x14,x15}}}}
3: y:=makecliff(m,y);
y:={{{{y0,y1},{y2,y3}},{{y4,y5},{y6,y7}}},
{{{y8,y9},{y10,y11}},{{y12,y13},{y14,y15}}}}
4: u:=makecliff(m,u);
u:={{{{u0,u1},{u2,u3}},{{u4,u5},{u6,u7}}},
{{{u8,u9},{u10,u11}},{{u12,u13},{u14,u15}}}}
5: lhs:=printcliff(skalar(left(u,x),y));
lhs:=u0*x0*y0+u0*x1*y1+u0*x10*y10+u0*x11*y11+u0*x12*y12+u0*x13*y13+
u0*x14*y14+u0*x15*y15+u0*x2*y2+u0*x3*y3+u0*x4*y4+u0*x5*y5+u0*x6*y6
+u0*x7*y7+u0*x8*y8+u0*x9*y9+u1*x1*y0+u1*x11*y10+u1*x13*y12+u1*x15*
y14+u1*x3*y2+u1*x5*y4+u1*x7*y6+u1*x9*y8+u10*x10*y0+u10*x11*y1-u10*
x14*y4-u10*x15*y5+u11*x11*y0-u11*x15*y4+u12*x12*y0+u12*x13*y1+u12*
x14*y2+u12*x15*y3+u13*x13*y0+u13*x15*y2+u14*x14*y0-u14*x15*y1+u15*
x15*y0+u2*x10*y8-u2*x11*y9+u2*x14*y12-u2*x15*y13+u2*x2*y0-u2*x3*y1+
u2*x6*y4-u2*x7*y5+u3*x11*y8+u3*x15*y12+u3*x3*y0+u3*x7*y4+u4*x12*y8
-u4*x13*y9-u4*x14*y10+u4*x15*y11+u4*x4*y0-u4*x5*y1-u4*x6*y2+u4*x7*
y3+u5*x13*y8-u5*x15*y10+u5*x5*y0-u5*x7*y2+u6*x14*y8+u6*x15*y9+u6*
x6*y0+u6*x7*y1+u7*x15*y8+u7*x7*y0-u8*x10*y2+u8*x11*y3-u8*x12*y4+u8
*x13*y5+u8*x14*y6-u8*x15*y7+u8*x8*y0-u8*x9*y1-u9*x11*y2-u9*x13*y4+
u9*x15*y6+u9*x9*y0
6: rhs:=printcliff(skalar(x,outer(u,y)));
rhs:=u0*x0*y0+u0*x1*y1+u0*x10*y10+u0*x11*y11+u0*x12*y12+u0*x13*y13+
u0*x14*y14+u0*x15*y15+u0*x2*y2+u0*x3*y3+u0*x4*y4+u0*x5*y5+u0*x6*y6
+u0*x7*y7+u0*x8*y8+u0*x9*y9+u1*x1*y0+u1*x11*y10+u1*x13*y12+u1*x15*
y14+u1*x3*y2+u1*x5*y4+u1*x7*y6+u1*x9*y8+u10*x10*y0+u10*x11*y1-u10*
x14*y4-u10*x15*y5+u11*x11*y0-u11*x15*y4+u12*x12*y0+u12*x13*y1+u12*
x14*y2+u12*x15*y3+u13*x13*y0+u13*x15*y2+u14*x14*y0-u14*x15*y1+u15*
x15*y0+u2*x10*y8-u2*x11*y9+u2*x14*y12-u2*x15*y13+u2*x2*y0-u2*x3*y1+
u2*x6*y4-u2*x7*y5+u3*x11*y8+u3*x15*y12+u3*x3*y0+u3*x7*y4+u4*x12*y8
-u4*x13*y9-u4*x14*y10+u4*x15*y11+u4*x4*y0-u4*x5*y1-u4*x6*y2+u4*x7*
y3+u5*x13*y8-u5*x15*y10+u5*x5*y0-u5*x7*y2+u6*x14*y8+u6*x15*y9+u6*
x6*y0+u6*x7*y1+u7*x15*y8+u7*x7*y0-u8*x10*y2+u8*x11*y3-u8*x12*y4+u8
*x13*y5+u8*x14*y6-u8*x15*y7+u8*x8*y0-u8*x9*y1-u9*x11*y2-u9*x13*y4+
u9*x15*y6+u9*x9*y0
7: lhs-rhs;
0
operate equally well with numeric entities (as in example 2) and symbolic entities
(as in example 5).
An example of machine computations to verify the ﬁrst of the duality relationships
from Eq.2.12 is shown in Table2.10. This example serves as quite a good check on
the implementation of some of the different kinds of products.

34
2
Numbers and Arithmetic
2.5 Exercises
Q1. Show that the operations of involution, reversion and Clifford conjugation are
all their own inverses.
Q2. Show that the application of any two of the operations of involution, reversion
and Clifford conjugation has the same effect as the one not used.
Q3. Calculate the involution, reversion and Clifford conjugation of the number
e1e3e3 by applying the effects described in Table2.2 on the primal units directly
and then rearranging them into their original order.
Q4. Show that reversing the order of the entire sequence of primal units ep in
every evolved unit eS in grade ℓhas the effect of multiplying by the factor of
ξ = (−1)ℓ(ℓ−1)/2.
Q5. Calculate the sum a + b of the two Clifford numbers a = 2 −1e1 and
b = 1 + 3e1 + 2e2 + 4e1e2.
A5. 3 + 2e1 + 2e2 + 4e1e2.
Q6. Calculate the difference a −b of the two Clifford numbers a = 2 −1e1 and
b = 1 + 3e1 + 2e2 + 4e1e2.
A6. 1 −4e1 −2e2 −4e1e2.
Q7. Calculate the central product ab of the two Clifford numbers a = 2 −1e1 and
b = 1 + 3e1 + 2e2 + 4e1e2.
A7. 5 + 5e1 + 8e2 + 6e1e2.
Q8. Calculate the outer product a ∧b of the two Clifford numbers a = 2 −1e1
and b = 1 + 3e1 + 2e2 + 4e1e2.
A8. 2 + 5e1 + 4e2 + 6e1e2.
Q9. Calculate the inner product a ∨b of the two Clifford numbers a = 2 −1e1
and b = 1 + 3e1 + 2e2 + 4e1e2.
A9. −1 + 7e1 + 8e1e2.
Q10. Calculate the left inner product a⌟b of the two Clifford numbers a = 2 −1e1
and b = 1 + 3e1 + 2e2 + 4e1e2.
A10. −1 + 6e1 + 8e1e2.
Q11. Calculate the right inner product a⌞b of the two Clifford numbers a = 2−1e1
and b = 1 + 3e1 + 2e2 + 4e1e2.
A11. −1 −1e1.
Q12. Calculate the scalar product (a, b) of the two Clifford numbers a = 2 −1e1
and b = 1 + 3e1 + 2e2 + 4e1e2.
A12. −1.
Q13. Calculate the dot product a · b of the two Clifford numbers a = 2 −1e1 and
b = 1 + 3e1 + 2e2 + 4e1e2.
A13. −3.
Q14. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the central product.
A14. Check your software against question 7.

2.5 Exercises
35
Q15. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the outer product.
A15. Check your software against question 8.
Q16. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the inner product.
A16. Check your software against question 9.
Q17. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the left inner product.
A17. Check your software against question 10.
Q18. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the right inner product.
A18. Check your software against question 11.
Q19. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the scalar product.
A19. Check your software against question 12.
Q20. Implement using a computer language of your choice, software to multiply
two arbitrary Clifford numbers using the dot product.
A20. Check your software against question 13.
Q21. Using your implementations from questions 16 to 19 to verify numerically or
symbolically the ﬁrst duality relationship from Eq.2.12 for dimension m = 4
as in Table2.10.
Q22. Using your implementations from questions 16 to 19 to verify numerically or
symbolically the second duality relationship from Eq.2.12 for dimensions m
from 3 to 5.

Chapter 3
Geometry
Clifford called the algebra he developed, based on Grassmann’s central product and
two sets of Hamilton’s quaternions, a geometric algebra [3]. Using Clifford’s algebra
geometric operations such as translation, reﬂection, projection and rotation can be
carried algebraically on geometric entities such as vectors and bivectors represented
in the form of Clifford numbers.
For the purposes of particular applications it is usual to embed a given problem into
whatever coordinate system seems most appropriate. In some cases it is convenient
to subdivide the surface of an object into a set of matching elements (tiles), and to
perform some of the calculations using a coordinate system local to each element.
The local results may subsequently be transformed into a common coordinate system
so that they can be used together to form a solution. This requires simple rigid body
transformations, i.e. translation and rotation.
In the Clifford framework translation of vectors and ﬁelds can be effected by
adding a constant vector to the independent variable, and rotation can be achieved
by employing a rotation operator constructed speciﬁcally for that purpose. Rotation
operators can be constructed from a pair of reﬂection operators.
In many problems it is useful to split vectors and ﬁelds into a mixture of differ-
ent complementary components (e.g. normal and tangential) by employing two or
more projection operators. In some cases it is appropriate to construct the projection
operators from a single reﬂection operator.
3.1 Reﬂection, Projection and Rotation Operators
Reﬂection and projection operators can be deﬁned in a general sense by the way that
they behave when applied repeatedly.
A reﬂection operator is deﬁned as any operator R which acts as its own inverse,
i.e. R2 = I.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_3
37

38
3
Geometry
A projection operator is deﬁned as any operator P which is idempotent. This
means only the ﬁrst of a sequence of ℓidentical operators can produce any effect. In
general for ℓ> 1, Pℓ= P, and in particular for ℓ= 2, P2 = P.
A rotation operator  is deﬁned in general as the sequential application of two
different reﬂection operators:  = R2R1.
In addition to these general deﬁnitions, it is useful to also deﬁne a pair of special
projection operators, P1 = Q+ and P2 = Q−, with particular properties. This pair of
projection operators is constructed from a single reﬂection operator R = Q according
to the relations:

Q+ = 1
2(I + Q)
Q−= 1
2(I −Q)
(3.1)
The change in notation from R’s and P’s to Q’s is made to emphasise these new
projection operators as being both derived from a single reﬂection operator, and to
emphasise they are a specially related pair rather than just two arbitrary and unrelated
projections operators.
From the way they are constructed the projection operators Q+ and Q−are
endowed with the following three properties:
⎧
⎪⎨
⎪⎩
(Q±)2
= Q±
idempotent
Q±Q∓
= 0
mutually exclusive
Q+ + Q−= I
complementary
(3.2)
The ﬁrst property ensures that Q+ and Q−are indeed both projection operators.
The second property is useful for splitting ﬁelds into two complementary compo-
nents. The third property is useful for reconstructing a ﬁeld from its complementary
components. Note that orthogonal components are indeed complementary, but com-
plementary components need not be orthogonal (see Sect.3.4.1).
Theabilitytosplitandreconstructﬁeldsinthiswayisusedhereformanypurposes,
as in Sects.3.2.1, 3.2.3, 3.4, 5.2 and Chap.8.
3.2 Reﬂection and Projection
3.2.1 Vectors
In the Clifford framework vectors and ﬁelds can be split into a combination of
components, normal and tangential to a speciﬁed surface , by employing two
projection operators such as described in Sect.3.1. For Clifford algebra the speciﬁc
form of the operators is deﬁned in terms of a vector u = un + ut and the unit
vector n normal to the surface . The vector u is shown in Fig.3.1, with un as the

3.2 Reﬂection and Projection
39
Fig. 3.1 Orthogonal
components of vector u with
respect to the unit vector n,
normal to the surface 
Σ
u
ut
un
n
component of u normal to  (parallel to n) and ut as the component of u tangential
to  (perpendicular to n).
The reﬂection operator is written as a product of three terms:
Ru = Qu = nun
(3.3)
and the pair of projection operators are written:

P1u = Q+u = 1
2(I + Q)u = 1
2(u + nun)
P2u = Q−u = 1
2(I −Q)u = 1
2(u −nun)
(3.4)
The action of the reﬂection operator can be determined by expanding the product 3.3
using the relationship 1.16 between Clifford multiplication and the vector dot and
cross products. Expanding ﬁrst the leftmost vector-vector product gives:
Qu = nun = [(n × u)σ −(n · u)]n = (n × u)σn −(n · u)n
= {(n × u)n}σ −(n · u)n
(3.5)
where the commutativity of σ with the primal vector units allows that nσ = σn.
Expanding now the remaining vector-vector product:
Qu = {(n × u) × nσ −(n × u) · n}σ −(n · u)n
(3.6)
The second term in the braces is zero because n × u is perpendicular to n, and the
ﬁrst term simpliﬁes after post multiplication since σ2 = 1. Therefore:
Qu = (n × u) × n −(n · u)n
(3.7)
The term (n · u)n is recognised from vector calculus as un, the component of u
parallel to n (albeit with a minus sign) and the term (n × u) × n is recognised as
ut, the component of u perpendicular to n. Rewriting Eq.3.7 in terms of parallel and
perpendicular components:
Q(ut + un) = ut −un
(3.8)

40
3
Geometry
now shows that the action of the reﬂection operator is to reverse that component
of vector u parallel to the unit vector n, while leaving the perpendicular component
unchanged. The geometric interpretation in terms of Fig.3.1 is that the vector u is
reﬂected in the surface  for which n is the normal vector. In terms of the surface
, un is the normal component of vector u and ut is the tangential component.
The action of the projection operators can be determined from that of the reﬂection
operator:

Q+u = 1
2(I + Q)u = 1
2(ut + un + ut −un) = ut = (n × u) × n
Q−u = 1
2(I −Q)u = 1
2(ut + un −ut + un) = un = (n · u)n
(3.9)
The projection operators Q+u and Q−u therefore split any Clifford vector u into
normal and tangential components with respect to the surface  for which n is the
normal vector.
3.2.2 Numerical Examples
A. Reﬂection
(a) Reﬂect the vector u = 3e1 + 3e2 in the y-axis.
• We need a unit vector perpendicular to the y-axis.
• Choose the unit vector na = 1e1 + 0e2.
• Then Ra(u) = nauna = e1(3e1 + 3e2)e1 = (−3 + 3e1e2)e1 = −3e1 + 3e2
• See Fig.3.2.
(b) Reﬂect the vector u = 3e1 + 3e2 in the line through the origin with slope 3/2.
• We need a unit vector perpendicular to the speciﬁed line.
• Choose the unit vector nb =
1
√
13(−3e1 + 2e2).
Fig. 3.2 Reﬂections
Ra = nauna and Rb = nbunb
e1
e2
u
na
nb
Ra(u)
Rb(u)

3.2 Reﬂection and Projection
41
• Then Rb(u) = nbunb
=
1
√
13(−3e1 + 2e2)(3e1 + 3e2)
1
√
13(−3e1 + 2e2)
=
1
13((9 −6) + (−9 −6)e1e2)(−3e1 + 2e2)
=
1
13(3 −15e1e2)(−3e1 + 2e2)
=
1
13((−9 + 30)e1 + (6 + 45)e2)
= 21
13e1 + 51
13e2
• See Fig.3.2.
(c) Reﬂect the vector u = 3e1 + 4e2 + 5e3 in the plane x + z = 0.
• We need a unit vector perpendicular to the plane.
• Choose the unit vector n =
1
√
2(e1 + e3).
• Then R(u) = nun
=
1
√
2(e1 + e3)(3e1 + 4e2 + 5e3) 1
√
2(e1 + e3)
= 1
2((−3 −5) + 4e1e2 −4e2e3 + (5 −3)e1e3)(e1 + e3)
= 1
2(−8 + 4e1e2 −4e2e3 + 2e1e3)(e1 + e3)
= 1
2(−8e1 + 4e2 −4e1e2e3 + 2e3 −8e3 + 4e1e2e3 + 4e2 −2e1)
= 1
2(−10e1 + 8e2 −6e3)
= −5e1 + 4e2 −3e3
B. Projection
(a) Project the vector u = 3e1 + 3e2 onto the y-axis, and onto a line through the
origin perpendicular to the y-axis.
• We need a unit vector perpendicular to the y-axis.
• Choose the unit vector na = 1e1 + 0e2.
• Then P1 = Q+
a (u) = 1
2[u + nauna]
= 1
2[3e1 + 3e2 + e1(3e1 + 3e2)e1] = 1
2[3e1 + 3e2 + (−3 + 3e1e2)e1]
= 1
2[3e1 + 3e2 −3e1 + 3e2]
= 3e2
• Also P2 = Q−
a (u) = 1
2[u −nauna]
= 1
2[3e1 + 3e2 −e1(3e1 + 3e2)e1] = 1
2[3e1 + 3e2 −(−3 + 3e1e2)e1]
= 1
2[3e1 + 3e2 + 3e1 −3e2]
= 3e1
• See Fig.3.3.
(b) Project the vector u = 3e1 + 3e2 onto the line through the origin with slope 3/2,
and onto a line through the origin perpendicular to the ﬁrst one.
• We need a unit vector perpendicular to the speciﬁed line.
• Choose the unit vector nb =
1
√
13(−3e1 + 2e2).

42
3
Geometry
Fig. 3.3 Complementary
projections
Q±
a,b = 1
2(I ± Qa,b)
e1
e2
u
na
nb
Q+
b (u)
Q−
b (u)
Q+
a (u)
Q−
a (u)
• Then P1 = Q+
b (u) = 1
2[u + nbunb]
= 1
2

3e1 + 3e2 +
1
√
13(−3e1 + 2e2)(3e1 + 3e2)
1
√
13(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 + 1
13((9 −6) + (−9 −6)e1e2)(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 + 1
13(3 −15e1e2)(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 + 1
13((−9 + 30)e1 + (6 + 45)e2)

= 1
2
	
3e1 + 3e2 + 21
13e1 + 51
13e2

= 30
13e1 + 45
13e2
• Also P2 = Q−
b (u) = 1
2[u −nbunb]
= 1
2

3e1 + 3e2 −
1
√
13(−3e1 + 2e2)(3e1 + 3e2)
1
√
13(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 −1
13((9 −6) + (−9 −6)e1e2)(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 −1
13(3 −15e1e2)(−3e1 + 2e2)

= 1
2
	
3e1 + 3e2 −1
13((−9 + 30)e1 + (6 + 45)e2)

= 1
2
	
3e1 + 3e2 −21
13e1 −51
13e2

=
9
13e1 −6
13e2
• See Fig.3.3.
(c) Project the vector u = 3e1 + 4e2 + 5e3 onto the plane x + z = 0, and onto a line
through the origin perpendicular to the plane.
• We need a unit vector perpendicular to the plane.
• Choose the unit vector n =
1
√
2(e1 + e3).
• Then P1 = Q+(u) = 1
2[u + nun] = 1
2[u + Q(u)]
= 1
2[(3e1 + 4e2 + 5e3) + (−5e1 + 4e2 −3e3)] = 1
2[−2e1 + 8e2 + 2e3]
= −e1 + 4e2 + e3
• Also P2 = Q−(u) = 1
2[u −nun] = 1
2[u −Q(u)]
= 1
2[(3e1 + 4e2 + 5e3) −(−5e1 + 4e2 −3e3)] = 1
2[8e1 + 8e3] = 4e1 + 4e3

3.2 Reﬂection and Projection
43
3.2.3 Application to Bivector Fields
The electromagnetic ﬁeld F is cast into the Clifford formalism as a bivector:
u = F = √μ Hσ −i√ϵ Ee0
(3.10)
where E and H are the electric and magnetic ﬁeld vectors (see Sects.1.7 and 5.1.2).
Applying the reﬂection operator R = Q gives:
Qu = nun
= √μ nHσn −i√ϵ nEe0n
= √μ (nHn)σ + i√ϵ (nEn)e0 = √μ (QH)σ + i√ϵ (QE)e0
(3.11)
Both the magnetic and electric parts of the ﬁeld are subject to the inﬂuence of the
operator, with the electric part subject also to a change of sign.
Applying the projection operators P1 = Q+ and P2 = Q−now gives:
Q+u = 1
2(I + Q)u = 1
2[√μ Hσ −i√ϵ Ee0 + √μ (QH)σ + i√ϵ (QE)e0]
= √μ 1
2(I + Q)Hσ −i√ϵ 1
2(I −Q)Ee0
= √μ (Q+H)σ −i√ϵ (Q−E)e0
= √μ (n × H) × nσ −i√ϵ (n · E)ne0
= √μ Htσ −i√ϵ Ene0
(3.12)
and:
Q−u = 1
2(I −Q)u = 1
2[√μ Hσ −i√ϵ Ee0 −√μ (QH)σ −i√ϵ (QE)e0]
= √μ 1
2(I −Q)Hσ −i√ϵ 1
2(I + Q)Ee0
= √μ (Q−H)σ −i√ϵ (Q+E)e0
= √μ (n · H)nσ −i√ϵ (n × E) × ne0
= √μ Hnσ −i√ϵ Ete0
(3.13)
The projection operators Q+ and Q−therefore split the Clifford representation of
the electromagnetic ﬁeld into one part containing tangential magnetic ﬁeld Ht paired
with normal electric ﬁeld En, and another part containing normal magnetic ﬁeld Hn
paired with tangential electric ﬁeld Et.
For some simple problems in electromagnetism the classical boundary conditions
can be written directly (see Sects.6.4.1 and 6.4.2) using either Q−u (the normal
component of the magnetic ﬁeld and the tangential component of the electric ﬁeld)
or Q+u (the tangential component of the magnetic ﬁeld and the normal component
of the electric ﬁeld). In more complicated problems (see Sect.6.4.3) it is necessary to
use a combination of both Q+ and Q−, and also the S and T space-like and time-like
projection operators as described in Sect.5.2.

44
3
Geometry
3.3 Rotation
A rotation operator  for any Clifford number u is written as a product of ﬁve terms:
u = R2R1u = n2n1un1n2
(3.14)
where n1 and n2 are Clifford unit vectors, and R1u = n1un1 and R2v = n2vn2 are
two different reﬂection operators.
The geometric behaviour of the operator  is not immediately clear from Eq.3.14.
However, after a closer inspection (in Sect.3.3.1) it becomes apparent that in general
 indeed does behave as a rotation operator, and in particular that:
• the rotation is in the plane spanned by the two vectors n1 and n2,
• the angle of rotation θ is twice the smallest angle φ between n1 and n2, and
• the direction of rotation is from n1 to n2 (covering angle φ) and beyond (by another
angle φ).
3.3.1 Vectors
The action of the rotation operator can be determined by expanding the product 3.14
using the relationship 1.16 between Clifford multiplication and the vector dot and
cross products. Expanding ﬁrst the left and rightmost vector-vector products, and
then continuing with any remaining vector-vector products gives:
u = n2n1un1n2
= [−(n2 · n1) + (n2 × n1)σ]u[−(n1 · n2) + (n1 × n2)σ]
= (n2 · n1)u(n1 · n2) −(n2 · n1)u(n1 × n2)σ −(n2 × n1)σu(n1 · n2)
+ (n2 × n1)σu(n1 × n2)σ
= (n1 · n2)u(n1 · n2) −(n1 · n2)u(n1 × n2)σ + (n1 × n2)u(n1 · n2)σ
−(n1 × n2)u(n1 × n2)
= (n1 · n2)u(n1 · n2) −(n1 · n2)[u(n1 × n2) −(n1 × n2)u]σ
−(n1 × n2)u(n1 × n2)
= (n1 · n2)u(n1 · n2) −2(n1 · n2)[u × (n1 × n2)]
−(n1 × n2)u(n1 × n2)
(3.15)
In order to verify that Eq.3.15 represents a rotation, consider now Fig.3.4. The vector
u is shown in a Cartesian coordinate system as the sum of two components:
u = v + w
(3.16)

3.3 Rotation
45
where the v component is the projection of u onto the xy plane z = 0, and the w
component is the projection of u onto the z-axis.
The Cartesian coordinate system has been set in space so that the plane z = 0
coincides with the plane spanned by the two unit vectors n1 and n2. Those unit vectors
are not shown to avoid making the diagram too cluttered. However, regardless of their
exact locations in the plane z = 0, their cross product stands perpendicular to the
plane as shown along the z-axis.
The ﬁrst term of Eq.3.15 can be interpreted as a vector in the same direction as
u but with length equal to that of u scaled by cos2 φ, where cos φ = n1 · n2. This
shorter version of u can alternatively be written as u cos2 φ (as in Fig.3.4) or as
(v + w) cos2 φ.
x
y
z
−(v−w) sin2 φ
n1×n2
u cos2 φ
u = v+w
+w
v = −u×(n1×n2)
1
sin φ
v
−w
v−w
(v−w) sin2 φ
Fig. 3.4 Geometrical interpretation of rotation operator 

46
3
Geometry
The second term of Eq.3.15 can be simpliﬁed by noting that u × (n1 × n2) =
(v +w)×(n1 ×n2). But w is parallel to n1 ×n2 and the cross product of two parallel
vectors is zero. This leaves u × (n1 × n2) = v × (n1 × n2), which represents a new
vector in the plane z = 0, perpendicular to v, with length equal to that of v scaled
by sin φ = |n1 × n2|. In Fig.3.4 this new vector has been rescaled and drawn as
v′ = −
1
sin φu × (n1 × n2). The rescaling matches the length of v′ with that of v, and
chooses an orientation so that v × v′ is in the same direction as n1 × n2. Together the
vectors v and v′ serve as an orthogonal basis for the plane z = 0.
The third term of Eq.3.15 represents a reversal of the component of vector u
parallel to n1 × n2, and at the same time (because n1 × n2 is not a unit vector) a
scaling of sin2 φ. The reversal of w →−w as shown in Fig.3.4 has the effect of
reﬂecting u = v + w in the plane z = 0 giving an image vector v −w. Scaling by
sin2 φ gives (v −w) sin2 φ, and then scaling by −1 gives −(v −w) sin2 φ, both as
shown.
Translating Eq.3.15 in terms of the geometrical interpretation of Fig.3.4 now
gives:
u = (v + w) cos2 φ + 2v′ cos φ sin φ −(v −w) sin2 φ
(3.17)
Projecting onto the plane z = 0 and onto the z-axis gives the same equation in two
orthogonal components:
v = v cos2 φ + 2v′ cos φ sin φ −v sin2 φ = v cos 2φ + v′ sin 2φ
w = w cos2 φ + w sin2 φ
= w
(3.18)
The ﬁrst equation shows that the operator  rotates the component of u in the plane
z = 0 by an angle θ = 2φ. The second equation shows that the operator  has no
effect on any component of u perpendicular to the plane z = 0. As a consequence,
all points on all planes parallel to the plane z = 0 are rotated by angle θ.
3.3.2 Numerical Examples
(a) Rotate the vector u = 3e1 + 3e2 through twice the smallest angle between the
unit vectors n1 = 1e1 + 0e2 and n2 =
1
√
13(−3e1 + 2e2), in the direction from n1 to
n2.
• The angle between the two vectors is 146.31◦.
• The rotation will be an angle of 2 × 146.31◦= 292.62◦.
• (u) = R2(R1(u)) = n2n1un1n2.
• First do inner reﬂection v = R1(u) = n1un1
= e1(3e1 + 3e2)e1 = (−3 + 3e1e2)e1 = −3e1 + 3e2

3.3 Rotation
47
Fig. 3.5 Rotation  = R2R1
146.31◦
292.62◦
Θ(u)= R2(v)
e1
e2
u
n1
n2
v = R1(u)
• Now do outer reﬂection R2(v) = n2vn2
=
1
√
13(−3e1 + 2e2)(−3e1 + 3e2)
1
√
13(−3e1 + 2e2)
=
1
13((−9 −6) + (−9 + 6)e1e2)(−3e1 + 2e2)
=
1
13(−15 −3e1e2)(−3e1 + 2e2)
=
1
13((45 + 6)e1 + (−30 + 9)e2)
= 51
13e1 −21
13e2
• See Fig.3.5.
(b) Rotate the vector u = 3e1 + 4e2 + 5e3 by 90◦around an axis through the origin
perpendicular to the plane x −z = 0, in a direction so that the point e1 + e3 maps
onto the positive y-axis (e2 direction).
• We need two unit vectors in the plane separated by 45◦.
• Choose the ﬁrst unit vector n1 =
1
√
2(e1 + e3).
• Choose the second unit vector n2 =
1
√
2[ 1
√
2(e1 + e3) + e2] = 1
2(e1 +
√
2e2 + e3).
• (u) = R2(R1(u)) = n2n1un1n2.
• First do inner reﬂection v = R1(u) = n1un1.
• Use result v = −5e1 + 4e2 −3e3 from example A(c) in Sect.3.2.2.
• Now do outer reﬂection R2(v) = n2vn2
= 1
2(e1 +
√
2e2 + e3)(−5e1 + 4e2 −3e3) × 1
2(e1 +
√
2e2 + e3)
= 1
4[(5 −4
√
2 + 3) + (4 + 5
√
2)e1e2 −(4 + 3
√
2)e2e3 + (5 −3)e1e3]
× (e1 +
√
2e2 + e3)
= 1
4[(8 −4
√
2) + (4 + 5
√
2)e1e2 −(4 + 3
√
2)e2e3 + 2e1e3](e1 +
√
2e2 + e3)
= 1
4[(8 −4
√
2 −4
√
2 −10 −2)e1 + (8
√
2 −8 + 4 + 5
√
2 + 4 + 3
√
2)e2
+(8 −4
√
2 −4
√
2 −6 + 2)e3 + (4 + 5
√
2 −4 + 3
√
2 −2
√
2)e1e2e3]
= −(1 + 2
√
2)e1 + 4
√
2e2 + (1 −2
√
2)e3

48
3
Geometry
3.3.3 Application to Bivector Fields
The electromagnetic ﬁeld F is cast into the Clifford formalism, as for Eq.3.10, in
terms of a bivector u = F = √μ Hσ −i√ϵ Ee0. Applying the rotation operator 
gives:
u = n2n1un1n2
= n2[√μ n1Hσn1 −i√ϵ n1Ee0n1]n2
= n2[√μ (n1Hn1)σ + i√ϵ (n1En1)e0]n2
= √μ n2(n1Hn1)σn2 + i√ϵ n2(n1En1)e0n2
= √μ (n2n1Hn1n2)σ −i√ϵ (n2n1En1n2)e0
= √μ (H)σ −i√ϵ (E)e0
(3.19)
Both the magnetic and electric parts of the ﬁeld are subject to the inﬂuence of the
operator. Note that the same effect can be achieved by ﬁrst applying the rotation
operator to the individual parts of the ﬁeld and then combining the results as an
electromagnetic bivector, or by assembling the ﬁeld as a ﬁrst step and then applying
the rotation to that bivector ﬁeld.
3.4 Coordinate Systems
Coordinate systems provide a representation of vectors (or functions) in terms of
several independent components which upon summation reconstruct the original
entity. For example, any vector can be represented in relation to a surface in terms of
its normal and tangential components, and any function of one real variable can be
represented in terms of its even and odd components. In both cases these components
can be created using a pair of suitable projection operators.
For problems in electromagnetism the behaviour of the ﬁeld on a boundary can
be portrayed by certain projection operators P+, P−(Hardy projection operators, see
Chap.8), and the boundary conditions can be formulated by certain other projection
operators Q+, Q−(boundary data projection operators, see Chap.6). General tools for
working directly with these operators help make much easier the task of formulating
electromagnetic ﬁeld problems in a clear, concise and efﬁcacious manner.
The tools for working with the boundary data projection operators inhabit normal
Euclidean space. However, the tools for working with the Hardy projection operators
inhabit the domain of Banach space. This space is a complete linear functional space
which has a norm, but not a scalar product. The equivalent geometric space which
operates with vectors rather than functions is the space of afﬁne geometry, as shown in
Table3.1. In afﬁne geometries and Banach spaces the concept of parallelism applies
but the concept of perpendicularity does not. In Euclidean geometries and Hilbert
spaces the concepts of parallelism and perpendicularity both apply. Many of the
ﬁgures in this book are drawn for Banach space using afﬁne geometry, but because
they are constructed in a Euclidean medium it appears that some of the angles may be
right angles. They aren’t. There are no right angles, even when they visually appear

3.4 Coordinate Systems
49
Table 3.1 Equivalent geometric and functional spaces
No scalar product
Scalar product
Vectors
Afﬁne geometry
Euclidean geometry
Functions
Banach space
Hilbert space
that way. There is nothing perpendicular to anything else. There are really no angles at
all. These ﬁgures can be subject to an arbitrary shear operation to apparently destroy
the constructs that look like right angles, and still remain valid.
3.4.1 Afﬁne Geometry
In a two-dimensional space of afﬁne geometry, vectors
x
y

=
a
b

can be represented
in terms of two components:
x
0

=
1 0
0 0
 a
b

and
0
y

=
0 0
0 1
 a
b

(3.20)
The matrices A+ =
1 0
0 0

= 1
2
	1 0
0 1

+
1
0
0 −1

and A−=
0 0
0 1

= 1
2
	1 0
0 1

−
1
0
0 −1

are projection operators created as in Sect.3.1 from a single reﬂection operator A =
1
0
0 −1

.
The projection operator A+ produces all points on the y = 0 axis OA :
x
y

=
a
0

as depicted in Fig.3.6. The projection operator A−produces all points on the x = 0
axis OA′ :
x
y

=
0
b

. The origin
0
0

lies at the intersection of both axes. Because
the two projections are complementary (A+ + A−= I) all points
x
y

=
a
b

can be
reconstructed from their two components.
The projections A+ and A−properly deﬁne two Cartesian coordinate axes
x
0

and
0
y

. The components of any point
x
y

=
a
b

can be obtained by projecting it onto the
two axes as in Eq.3.20.
Although all projection operators do produce axes, not all pairs of axes can serve
in the role of coordinate axes; only those produced from complementary projection
operators.Considerforexample,thetwoprojectionoperatorsP1 = 1
2
	1 0
0 1

+
1
0
0 −1

and P2 = 1
2
	1 0
0 1

−
0 1
1 0

. The projection operator P1
a
b

produces all points on the
Fig. 3.6 Orthogonal
coordinate axes OA, OA′
deﬁned by projections A±
O
A
A
A+
A−
a
b
a
b
A+ a
b
A−a
b

50
3
Geometry
Fig. 3.7 Axes OP1, OP2
deﬁned by projections P1, P2
not suitable as coordinate
axes
O
P1
P2
P1
P2
a
b
a
b
P1 a
b
P2 a
b
1
2
3a−b
b−a
sum
y = 0 axis OP1 :
x
y

=
a
0

as shown in Fig.3.7. P2
a
b

produces all points on the
y = −x axis OP2 :
x
y

= 1
2
a−b
b−a

through the origin at an apparent slope of −1 : 1.
Summing the two components of point
a
b

along the axes fails to reconstruct the
original point:
P1
a
b

+ P2
a
b

=
a
0

+ 1
2
a−b
b−a

̸=
a
b

(3.21)
Axes are identiﬁed as coordinate axes if the projection operators which produce
each axis map all points on that axis back onto themselves (A±A± = A±), and
map all points on other axes to the origin (A±A∓= 0). Axes are identiﬁed as
unsuitable for coordinate axes if the projections operators which produce each
axis map points on any other axes to anywhere other than the origin, for example
P1P2
a
b

= 1
2
1 −1
0
0
 a
b

̸=
0
0

.
Axes which do serve as pairs of coordinate axes are identiﬁed here, as for OA and
OA′ in Fig.3.6, by primed and unprimed versions of the same label.
Although it is common in Euclidean geometry to adopt coordinate axes which
are orthogonal, afﬁne geometry has no sense of othorgonality so it isn’t possible.
Fortunately, orthogonality between a pair of axes is not necessary for them to serve as
coordinate axes. Consider for example the two complementary projection operators
P+ = 1
2
	1 0
0 1

+
1 −2
0 −1

and P−= 1
2
	1 0
0 1

−
1 −2
0 −1

. The projection operator P+
produces all points on the y = 0 axis OP :
x
y

=
a−b
0

as depicted in Fig.3.8. P−
produces all points on the y = x axis OP′ :
x
y

=
b
b

through the origin at an apparent
slope of +1:1. The OP and OP′ axes are clearly not orthogonal. However summing
the two components of point
a
b

along the axes certainly does reconstruct the original
point:
P+ a
b

+ P−a
b

=
a−b
0

+
b
b

=
a
b

(3.22)

3.4 Coordinate Systems
51
Fig. 3.8 Non-orthogonal
OP, OP′ coordinate axes
deﬁned by projections P±
O
P
P
P +
P −
a
b
a
b
P + a
b
P −a
b
3.4.2 Banach Space
In a two-dimensional Banach space, functions f can be represented in terms of two
components:
fA = A+ f
and
fA′ = A−f
(3.23)
The operators A+ = 1
2(I+A) and A−= 1
2(I−A) are projection operators created as in
Sect.3.1 from a single reﬂection operator A. The projection operator A+ produces all
functions fA on the OA axis, and the projection operator A−produces all functions fA′
on the OA′ axis. The two axes can be interpreted as straight lines because all points on
eachaxismapbyprojectionontoasinglepoint.FortheOAaxisA−fA = A−A+ f = 0,
and for the OA′ axis A+ fA′ = A+A−f = 0. Were the axes not straight that would
not happen. The axes intersect at the origin O and, because the two projections are
complementary (A+ + A−= I), all functions f can be reconstructed from their two
components.
The geometry is drawn either as in Fig.3.6, or as in Fig.3.8 with P replaced by A,
and the vector
a
b

replaced by the function f . In terms of afﬁne geometry, there is no
distinction between the two ﬁgures because there is no concept of orthogonality and
no measure of angle. So the visually apparent angles between certain lines in both
of the ﬁgures cannot be 90◦or anything else. The reason these constructs appear to
be right angles is because we are forced to draw these afﬁne diagrams within the
Euclidean space that we, but not this particular geometry, inhabit.
The complementary projections A+ and A−properly deﬁne two Cartesian coor-
dinate axes OA and OA′ in Banach space.
The components of any function f can be obtained by projecting it onto the two
axes as in Eq.3.23.
3.4.3 Transformations Between Coordinate Systems
Figure3.9 shows two Cartesian systems in Banach space: the P-system with axes
OP and OP′, and the Q-system with axes OQ and OQ′. Both systems share the same
origin O.

52
3
Geometry
Fig. 3.9 Components of
function f in two different
Cartesian systems
f
P
P
Q
Q
P +f
P −f
Q+f
Q−f
O
P +
Q+
P −
Q−
fP
fP
fQ
fQ
The P-system is based on the Cauchy integral C and on the pair of Hardy
projectionoperatorsP+ andP−,asdescribedinChaps.7and8.TheQ-systemisbased
on the boundary data reﬂection operator Q and corresponding projection operators
Q+ and Q−, as described in Chap.6.
A function f can be represented in terms of Cartesian components in either the
P-system, or in the Q-system:
 f = fP + fP′ = P+ f + P−f
f = fQ + fQ′ = Q+ f + Q−f
(3.24)
The conversions from components fP, fP′ to components fQ, fQ′ are straightforward
projections:
 fQ = Q+ f = Q+( fP + fP′) = Q+ fP + Q+ fP′
fQ′ = Q−f = Q−( fP + fP′) = Q−fP + Q−fP′
(3.25)
or:
 fQ
fQ′

=
Q+ Q+
Q−Q−
  fP
fP′

(3.26)
Conversions from components fQ, fQ′ to components fP, fP′ are equally stra-
ightforward:
 fP = P+ f = P+( fQ + fQ′) = P+ fQ + P+ fQ′
fP′ = P−f = P−( fQ + fQ′) = P−fQ + P−fQ′
(3.27)
or:
 fP
fP′

=
P+ P+
P−P−
  fQ
fQ′

(3.28)

3.4 Coordinate Systems
53
Note that the conversions are projections rather than the rotations that would be
expected in a Euclidean space. Banach space lacks a scalar product, which means
that angles cannot be deﬁned and rotations are therefore not supported.
3.4.4 Multi-Dimensional Axes
Axes deﬁned by projection can represent single or multi-dimensional spaces. In
Fig.3.10a the axes OX, OY and OZ deﬁned by projections:
Px =
1 0 0
0 0 0
0 0 0

,
Py =
0 0 0
0 1 0
0 0 0

,
Pz =
0 0 0
0 0 0
0 0 1

(3.29)
each represent a single dimension in a three-dimensional space. Points on any one
of the axes are associated with single scalar values of coordinates.
The same three-dimensional space can be represented more compactly as in
Fig.3.10b by the two axes OXY and OZ as deﬁned by the projections:
Pxy =
1 0 0
0 1 0
0 0 0

,
Pz =
0 0 0
0 0 0
0 0 1

(3.30)
In the latter representation the points on the axis OXY are associated with values of
coordinates which are pairs of numbers rather than single numbers. Together the two
axes span three dimensions.
For the case of electromagnetism, points on the coordinate axes in Banach space
deﬁned by Hardy and boundary data projections are associated with values which are
N-tuples. Each component of these N-tuples takes the (Clifford) value of the ﬁeld at
one of N locations representing the boundary enclosing a region. That allows multi-
dimensional ﬁgures in Banach space to be drawn compactly on the two-dimensional
pages of this book.
Fig. 3.10 Axes deﬁned by
projection (a)
one-dimensional only (b)
one and two-dimensional
O
X
Y
Z
P
O
Z
P
XY
(3)
(4)
(5)
3
4
5
(5)
3
4
3
4
5
(a)
(b)

54
3
Geometry
3.5 Intersection by Projection
Physical problems of a linear nature often lead to a formulation in terms of a linear
system, such as a matrix equation Ax = b, for which the coefﬁcients A and data b
are known, and which must be inverted in some way to determine the unknown x.
Electromagnetism is a linear problem in that the solution for two sources is the
same as the sum of solutions for each of these sources separately, and some kind of
inversion is required when ﬁnding the ﬁeld x = F from the sources b = S.
The solution of a linear system in m variables can be interpreted geometrically
as the intersection of m non-parallel hyperplanes at a single point x, and can usually
be handled by any of the conventional direct or iterative techniques (e.g. Gaussian
elimination, Gauss-Seidel iteration, or variants and improvements thereof). These
techniques are general and take no speciﬁc account of the particular structure of any
given problem.
The problem of interest here is that of the scattering of electromagnetic radiation
from electrically non-conducting and conducting objects. For certain types of mate-
rials the formulation leads to two equations, each (as in Sects.9.1 and 9.2) giving
one vector as the projection of another.
The two equations represent two intersecting straight lines in Banach space. One
of the lines represents all electromagnetic ﬁelds on the surface of an object which are
consistent with Maxwell’s equations and the other line represents all electromagnetic
ﬁelds which are consistent with the boundary conditions. The solution for a particular
scattering problem with particular boundary conditions is found at the intersection
of the lines. Direct application of matrix methods does not work because projection
operators are always singular.
In order to solve the electromagnetic scattering problem as posed here, it therefore
makes sense to seek a solution as the intersection of lines, or planes, or hyperplanes
directly in terms of singular but known projection operators P1, P2 . . . Pm, rather than
in terms of a non-singular but unknown linear system Ax = b.
The method described in Sect.3.5.1 employs successive projections onto con-
straints, ﬁrst used by Kaczmarz [23, 24] for orthogonal projections, together with
Richardson extrapolation [25, 26] to sum an inﬁnite geometric series of vectors. Here
the projections are not orthogonal, but the approach is essentially the same.
3.5.1 Formulation
Consider the case shown in Fig.3.11 with two lines intersecting at a point x. A point
x0 on one of the lines is projected onto the other line according to projection P1, and
then from there back onto the original line at point x1 using projection P2:
x1 = P2P1x0
(3.31)

3.5 Intersection by Projection
55
x0
x1
x2
x
P1
P2
(a)
x2
x1
x0
x
P1
P2
(b)
x0
x1
x2
x
P1
P2
(c)
x0
x1
x2
x
P1
P2
(d)
Fig. 3.11 Intersection of lines by projection (a) 0 < ξ < 1, (b) 1 < ξ, (c) −1 ≤ξ < 0, (d) ξ ≤−1
It is important that the two projections are independent, i.e. P2P1 ̸= I. Repeating the
process gives another point x2:
x2 = P2P1x1
(3.32)
The two shaded triangles in each part of the ﬁgure are similar. Scaling the ﬁgures
by a factor ξ, according to the ratio of vectors (x2 −x1) : (x1 −x0) = ξ : 1, maps
the larger shaded triangle into the smaller one for Fig.3.11a, c, and maps the smaller
triangle into the larger one for Fig.3.11b, d. In Fig.3.11a, b the value of ξ is positive,
whereas in Fig.3.11c, d it is negative.
For Fig.3.11a the intersection is found by adding to vector x0, the vectors x1 −x0,
x2 −x1, x3 −x2, and so on. All of the vectors added from x2 −x1 and beyond stand in
the ratio, each to the previous, of ξ :1. The point x can therefore be found by writing
the inﬁnite sum of vectors as an inﬁnite geometric series:
x = x0 + (x1 −x0)[1 + ξ + ξ2 + · · · ]
(3.33)
The same result holds for Fig.3.11b, c, d without modiﬁcation. Scaling Eq.3.33 by
ξ and subtracting from the original eliminates the inﬁnite series and gives:

56
3
Geometry
(1 −ξ)x = (1 −ξ)x0 + (x1 −x0)
x = x0 + ν(x1 −x0)
(3.34)
where the value of ν is chosen such that ν(1 −ξ)x = x for any value of x. The
relationship:
(1 −ξ)(x1 −x0) = (x1 −x0) −(x2 −x1) = (2x1 −x0 −x2)
(x1 −x0) = ν(2x1 −x0 −x2)
(3.35)
between the three vectors x0, x1, x2 provides a means to obtain the value of ν.
In two-dimensional Euclidean space, where the vector x represents a point in the
real plane, the scalars ξ and ν are real numbers. In this situation, the norm ν∥z∥
induced by the scalar product (νz, z) = ν(z, z) can be used to convert the vector
Eq.3.35 into the scalar equation:
(x1 −x0, 2x1 −x0 −x2) = ν(2x1 −x0 −x2, 2x1 −x0 −x2)
(3.36)
The value of ν is obtained by scalar division and then the point of intersection is
found directly from Eq.3.34.
The value of ν is well deﬁned except in the case that the two lines are parallel.
Then ξ = 1 and it is not possible to ﬁnd a proper value of ν. Excepting that case, the
intersection can be found using Eq.3.34. Any starting point can be used, projecting
ﬁrst onto x0 using P2, and then onto x1 and x2.
In m Euclidean dimensions exactly the same method holds, with x as the point
of intersection between m hyperplanes. In this case point x0 on any hyperplane is
projected onto all hyperplanes in any chosen order before returning to the original
hyperplane:
x1 = Pm . . . P2P1x0
(3.37)
Point x2 is calculated from x1 using the previously chosen order of projections, then
ν from x0, x1, x2, and the intersection x from Eq.3.34. Point x0 can be obtained from
any arbitrary starting point by projecting onto the ﬁrst hyperplane using projection
Pm. If there is no particular reason for choosing one starting point as opposed to
another, the origin can be used.
For the case of electromagnetism, although the problem can be cast in a diagram
drawn in a two-dimensional afﬁne space, the solution is less straightforward than
for either two or m-dimensional Euclidean space. The reason is that the axes in
the diagram are themselves both N-dimensional, representing the electromagnetic
ﬁeld at N points on the surface of an object. Mapping from the vectorial difference
between one pair of N-dimensional points x0, x1 into the difference between another
pair x1, x2, along an axis embedded within the space, is achieved by scaling not
with a real number but with an N × N matrix. Equation3.35 is then a matrix-vector
equation with an N × N matrix ν and N-dimensional vectors xj. Simple real scalar
division is not sufﬁcient to recover the value of ν except in the special case where it

3.5 Intersection by Projection
57
is diagonal. Normally that happens only in trivial cases, and in general a sequence of
N +1 (rather than 1+1 = 2) pairs of projections are required to build from Eq.3.35
a square matrix-matrix equation. Solving that equation by matrix elimination then
gives the value for the matrix ν.
3.5.2 Remarks
The method described here relies solely on the ability to calculate the projection of
points onto hyperplanes. The projections can be in any direction, as long as the whole
set is independent. If the problem is such that the projections can be chosen freely,
natural choices would be along each of the coordinate axes, or in the direction of the
normal of the next hyperplane. In the case of electromagnetism the projections arise
as part of the formulation of the problem.
If the projections are chosen along coordinate axes, the resulting method is effec-
tively that of Gauss-Seidel. Normally with Gauss-Seidel it is anticipated that the
algorithm reaches the solution before point x2 is calculated, so Eq.3.34 is not used.
Convergence with the Gauss-Seidel iteration is not guaranteed, and the iteration
diverges in cases such as Fig.3.11b, d. Equation3.34 guarantees a solution in all
cases where the projections are independent, except where there is none (ξ = 1).
An alternative choice of projections is in the direction of the normal to the next
hyperplane. The method then takes into account the structure of the problem itself
and, unlike Gauss-Seidel, is independent of the structure of the coordinate system in
which the problem is expressed. However, if there is no unique solution projections in
the direction of the normal violate the condition that all projections be independent.
In that case Eq.3.34 is not valid, should not be used, and if used will give a spurious
result even when ξ ̸= 1.
For the case of electromagnetism, in the spirit of Gauss-Seidel, it is anticipated
that the iterated projections converge before point xN is calculated. Convergence
and speed of convergence are governed by the properties of the particular projec-
tions involved [27, 28], these being the boundary data projection operators Q± (see
Chap.6) and the Hardy projection operators P± (see Chap.8). Numerical values of
the convergence for certain test cases are given in Chap.10.
3.6 Exercises
Q1. Show that a projection operator Q+ constructed from a reﬂection operator Q
as in Eq.3.1 is idempotent.
A1. (Q+)2 = 1
4(I + Q)(I + Q) = 1
4(I + Q + Q + Q2) = 1
4(I + Q + Q + I) =
1
2(I + Q) = Q+.

58
3
Geometry
Q2. Show that a pair of projection operators Q+ and Q−constructed from a reﬂec-
tion operator Q as in Eq.3.1 are mutually exclusive.
A2. (Q+)(Q−) = 1
4(I + Q)(I −Q) = 1
4(I −Q + Q −Q2) = 1
4(I −I) = 0. Also
(Q−)(Q+) = 0.
Q3. Show that a pair of projection operators Q+ and Q−constructed from a reﬂec-
tion operator Q as in Eq.3.1 are complementary.
A3. Q+ + Q−= 1
2(I + Q) + 1
2(I −Q) = I.
Q4. Show that the rotation operator has no effect on scalars.
A4. For any scalar u ∈0, u = n2n1un1n2 = n2n1n1n2u = −n2n2u = u.
Q5. Show that the rotation operator has a distributive property over sums of Clifford
numbers.
A5. For any Clifford numbers u and v, (u+v) = n2n1(u+v)n1n2 = n2n1un1n2+
n2n1vn1n2 = u + v.
Q6. Show that the rotation operator has a distributive property over products of
Clifford numbers.
A6. For any Clifford numbers u and v, (uv) = n2n1(uv)n1n2 = (n2n1u)(vn1n2)
= (n2n1u)(n1n2n2n1)(vn1n2) = (n2n1un1n2)(n2n1vn1n2) = uv.
Q7. Verify that the operators A+ and A−in Sect.3.4.1 are projection operators, and
that the operator A+ −A−is a reﬂection operator.
Q8. Verify that the operators P1 and P2 in Sect.3.4.1 are projection operators, but
that the operator P1 −P2 is not a reﬂection operator.
Q9. Show that the sequence of two projection operators P2P1 in Sect.3.4.1 fails to
map all points to the origin.
Q10. Show that Eq.3.33 holds for the cases of Fig.3.11b, c.
Q11. By choosing the projections P1, P2 . . . Pm in Eq.3.37 along the coordinate axes
show that the method described mimics the Gauss-Seidel iteration.
Q12. Design and implement a numerical procedure to solve a linear system of equa-
tions with real coefﬁcients using orthogonal projections onto hyperplanes with
the geometrical method described in Sects.3.5 and 3.5.1.
Q13. Design and implement a numerical procedure to solve a linear system of equa-
tions with real coefﬁcients using projections along Cartesian coordinate axes
with the geometrical method described in Sects.3.5 and 3.5.1.

Chapter 4
Space and Time
Maxwell’s equations were developed before Einstein introduced space–time in his
theory of special relativity. Nevertheless, results derived by solving Maxwell’s equa-
tions must properly accommodate Einstein’s theory in order to conform with the
physical phenomena of electromagnetism observed in the static and moving real
world. Only in that way can applications be designed and built to operate according
to intent.
The need for that conformance puts a constraint on the way the derivative in
space–time is mathematically constructed. In the Heaviside form [14]1 of Maxwell’s
equations the derivative is calculated using a set of three separate partial differential
operators: two spatial (divergence and curl) and one temporal ( ∂
∂t ). In the Clifford
formulation all of these partial differential operators are combined into a single,
complete differential operator D. However, the need to meet Einstein’s theory and
observed physical behaviour means that only one of several possible mathematical
combinations makes any physical sense.
In the sections following the Minkowskian geometry of Einstein’s space–time is
introduced in the Clifford formalism by way of the Lorentz transformation. A generic
Clifford–Minkowskian differential operator is constructed and then constrained so as
to properly accommodate Einstein’s theory of special relativity. The result is veriﬁed
by calculating the electromagnetic ﬁeld observed in a moving frame from the ﬁeld
observed in a ﬁxed frame.
1Sections51 and 66.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_4
59

60
4
Space and Time
4.1 Points in Space–Time
The space–time of special (not general) relativity uses Minkowskian geometry with
one basis vector X0 to establish a coordinate x0 of time, and three basis vectors
X1, X2, X3 to establish three Cartesian coordinates x1, x2, x3 of space. Any point
X in Minkowskian space–time can be represented in terms of its coordinates with
respect to their basis vectors as:
X = X0x0 + X1x1 + X2x2 + X3x3
(4.1)
The coordinates are given by:
⎧
⎪⎪⎨
⎪⎪⎩
x0 = −(X, X0)
x1 =
(X, X1)
x2 =
(X, X2)
x3 =
(X, X3)
(4.2)
where (a, b) represents the scalar product of vectors a and b (see Sect.2.3.3).
Note that the temporal basis vector X0 does not behave the same as the spatial
basis vectors. The scalar product (X0, X0) produces the value negative one instead
of, as for the other basis vectors, a value of positive one.
The basis vectors of Minkowskian geometry can themselves be represented with
Clifford units as:
⎧
⎪⎪⎨
⎪⎪⎩
X0 = ie0
X1 = e1
X2 = e2
X3 = e3
(4.3)
The temporal basis vector incorporates the imaginary unit i to ensure that the
scalar product (X0, X0) = X0X0 = ie0 ie0 = i e0 ie0 = i(−e0) ie0, where a is the
Clifford (not complex) conjugate of a (see Sect.2.3.1), produces the negative value
as required.
4.2 Transformation Between Frames
Suppose now that the Clifford–Minkowskian frame X = {X0, X1, X2, X3} =
{ie0, e1, e2, e3} is ﬁxed in space at any chosen point, and a second Minkowskian
frame Y = {Y0, Y1, Y2, Y3} is passing through the same point at a constant velocity
with respect to X. In this case the two frames and their corresponding sets of coordi-
nates x0, x1, x2, x3 and y0, y1, y2, y3 are related by the Lorentz transformation. The
forward transform w = LuL is used when mapping from the coordinates in the X
frame to the coordinates in the Y frame. The inverse transform u = LwL is used
when mapping from the basis vectors in the X frame to the basis vectors in the Y
frame.

4.2 Transformation Between Frames
61
The Lorentz transformation and its inverse can be interpreted geometrically as
hyperbolic rotations, i.e. rotations through (opposite) angles of imaginary value.
If the motion of the Y frame is in the direction of the X1 basis vector then these
hyperbolic rotations dictate mappings between the X0 and X1 basis vectors of the X
frame and the Y0 and Y1 basis vectors of the Y frame.
The rotation (u) = LuL in the X0X1 plane is speciﬁed (as in Sect.3.3) by
Cliffordunitvectors,herenψ = n(ψ) = X0 cosh(ψ/2) + X1 sinh(ψ/2)forbothψ =
0 and ψ = a:
 n0 = ie0
= X0
na = ie0 cosh(a/2) + e1 sinh(a/2) = X0 cosh(a/2) + X1 sinh(a/2)
(4.4)
The amount of rotation is governed by the arbitrary constant a, which sets the mag-
nitude of the hyperbolic angle between the two vectors n0, na. The rotation itself
covers twice that angle, in a direction governed by the order in which the vectors are
applied. In the usual Clifford fashion, any vector u is rotated by a reﬂection R1(u)
of all components in the direction of one of the vectors (say na):
v = R1(u) = nauna
(4.5)
followed by a reﬂection R2(v) of all components in the direction of the other vector
(in this case n0):
w = (u) = R2(v) = n0vn0 = n0naunan0 = LuL
(4.6)
The transformation can be reversed by (re)applying the reﬂections in reverse order:
−1((u)) = LwL = nan0(n0naunan0)n0na = L(LuL)L = u
(4.7)
The ﬁnal equality is readily seen by noticing from Table2.2 that LL = LL = 1 when
L is a unit bivector, or by noticing that the square of a unit vector n is n2 = −1 from
Eq.1.17, or by noticing that the reﬂection of any object twice in the same direction
(such as n0n0vn0n0) recovers the original object.
4.2.1 Related Frames
Applying the inverse Lorentz transformation to the basis of the X frame gives the
basis of the moving frame Y as:
⎧
⎪⎪⎨
⎪⎪⎩
Y0 = L X0L = ie0 cosh a + e1 sinh a = X0 cosh a + X1 sinh a
Y1 = L X1L = ie0 sinh a + e1 cosh a = X0 sinh a + X1 cosh a
Y2 = L X2L = e2
= X2
Y3 = L X3L = e3
= X3
(4.8)

62
4
Space and Time
In the Y frame the location of the spatial origin OY, with spatial coordinates y1 =
y2 = y3 = 0, is given for any value y0 of the time coordinate by the space–time
vector:
OY = Y0y0 + Y10 + Y20 + Y30 = Y0y0
= (ie0 cosh a + e1 sinh a)y0 = (X0 cosh a + X1 sinh a)y0
(4.9)
The coordinates of the same location in space–time is seen as a different set of
coordinates in the X frame. The X frame coordinates are obtained by using the scalar
product to map the space–time vector OY onto the X frame:
⎧
⎪⎪⎨
⎪⎪⎩
x0 = −(OY, X0) = (cosh a)y0
x1 =
(OY, X1) = (sinh a)y0
x2 =
(OY, X2) = 0
x3 =
(OY, X3) = 0
(4.10)
The origin OY is moving in both space (along the X1 axis) and in time (along the X0
axis) at a constant velocity VX seen from the X frame as:
VX = dx1
dx0
= x1
x0
= tanh a
(4.11)
From the other viewpoint, the spatial origin OX of the X frame:
OX = X0x0 + X10 + X20 + X30 = X0x0 = ie0x0
(4.12)
with X frame coordinates x1 = x2 = x3 = 0, has coordinates as seen from the Y
frame:
⎧
⎪⎪⎨
⎪⎪⎩
y0 = −(OX, Y0) =
(cosh a)x0
y1 =
(OX, Y1) = −(sinh a)x0
y2 =
(OX, Y2) =
0
y3 =
(OX, Y3) =
0
(4.13)
The origin OX is moving in both space (along the Y1 axis) and in time (along the Y0
axis) at a constant velocity VY seen from the Y frame as:
VY = dy1
dy0
= y1
y0
= −tanh a
(4.14)
4.2.2 Related Coordinates
Any point P can be equally well expressed in terms of the coordinates x0, x1, x2, x3
of the X frame or the coordinates y0, y1, y2, y3 in the Y frame:

4.2 Transformation Between Frames
63
P =
 X = X0x0 + X1x1 + X2x2 + X3x3
Y = Y0y0 + Y1y1 + Y2y2 + Y3y3
(4.15)
If the point P = X is known in terms of its coordinates in the X frame, the forward
transform then produces the coordinates in the Y frame:
L XL = L(Y0y0 + Y1y1 + Y2y2 + Y3y3)L
= LY0Ly0 + LY1Ly1 + LY2Ly2 + LY3Ly3 = X0y0 + X1y1 + X2y2 + X3y3
(4.16)
so that:
⎧
⎪⎪⎨
⎪⎪⎩
y0 = −(L XL, X0)
y1 =
(L XL, X1)
y2 =
(L XL, X2)
y3 =
(L XL, X3)
(4.17)
4.3 Derivatives in Space–Time
Figure4.1 shows the temporal basis vectors X0, Y0 and spatial basis vectors X1, Y1
for two Minkowskian frames X = {X0, X1, X2, X3} and Y = {Y0, Y1, Y2, Y3}. The
values in parentheses are the coordinates of certain points along each of the four basis
vectors, in terms of the corresponding frame. The remaining spatial basis vectors and
corresponding coordinates are not shown since they play no consequential role in
the discussion.
The X frame is nominally ﬁxed, and the spatial origin of the Y frame is moving
in the positive X1 direction with a velocity VX = tanh a. The basis vectors in the Y
frame are then (as in Eq.4.8):
Y0 Y1
	 =X0 X1
	 
cosh a sinh a
sinh a cosh a

(4.18)
In terms of the Y frame the basis vectors of the X frame are by matrix inversion:
X0 X1
	 =Y0 Y1
	 
 cosh a −sinh a
−sinh a
cosh a

(4.19)
Any point P can equally well be expressed in terms of the coordinates x0, x1 of the
X frame, or the coordinates y0, y1 of the Y frame:
P =
X0x0 + X1x1 = Y0y0 + Y1y1
X0 X1
	 
x0
x1
 = Y0 Y1
	 
y0
y1

(4.20)

64
4
Space and Time
X0
X1
Y0
Y1
1
0
0
1
1
0
0
1
cosh
0
0
cosh
cosh
0
0
cosh
sinh
0
0
sinh
−sinh
0
0
−sinh
Fig. 4.1 Lorentz transform between frame X = {X0, X1} and frame Y = {Y0, Y1}
Substituting for X0, X1 from Eq.4.19 gives the transformation from coordinates in
the X frame to the Y frame:

y0
y1

=

cosh a −sinh a
−sinh a
cosh a
 
x0
x1

(4.21)
As the point P moves, the coordinates in both the X and Y frames change accordingly.
Differential changes in coordinates of the Y frame with respect to the coordinates of
the X frame are given by:
 ∂y0
∂x0
∂y0
∂x1
∂y1
∂x0
∂y1
∂x1

=

cosh a −sinh a
−sinh a
cosh a

(4.22)
When a function F is deﬁned in the vicinity of the point P, its partial derivatives can
be calculated with respect to the coordinates in either the X frame or the Y frame,
and then converted to the other frame by the chain rule for partial differentiation.

4.3 Derivatives in Space–Time
65
Utilising the partial derivatives for the Lorentz transformation as given by Eq.4.22
then leads to:
 ∂F
∂x0
∂F
∂x1

=
 ∂y0
∂x0
∂y1
∂x0
∂y0
∂x1
∂y1
∂x1
  ∂F
∂y0
∂F
∂y1

=

cosh a −sinh a
−sinh a
cosh a
T  ∂F
∂y0
∂F
∂y1

(4.23)
Rather than dealing always with partial differential operators it is more convenient
to construct from them a complete differential operator D which works equally well
and consistently in both the X frame and the Y frame. To work consistently the
result from the X frame must agree when converted into the Y frame and vice versa.
Speciﬁcally:
DF = X0a0 ∂F
∂x0 + X1a1 ∂F
∂x1 = Y0a0 ∂F
∂y0 + Y1a1 ∂F
∂y1
(4.24)
with the unknown constants a0 and a1 chosen to establish the equality:

X0 X1
	 
a0 0
0 a1
  ∂F
∂x0
∂F
∂x1

=

Y0 Y1
	 
a0 0
0 a1
  ∂F
∂y0
∂F
∂y1


X0 X1
	 
a0 0
0 a1
 
 cosh a −sinh a
−sinh a
cosh a
  ∂F
∂y0
∂F
∂y1

=

X0 X1
	 
cosh a sinh a
sinh a cosh a
 
a0 0
0 a1
  ∂F
∂y0
∂F
∂y1


 a0 cosh a −a0 sinh a
−a1 sinh a
a1 cosh a

=

(cosh a)a0 (sinh a)a1
(sinh a)a0 (cosh a)a1

a0 = −a1
(4.25)
The equality in the last line must be satisﬁed, except in the trivial case of zero
relative velocity VX, for which a = tanh−1 VX = 0. Here a value a1 = 1 is chosen
for simplicity, in which case a0 = −1. The differential operator is then given by:
D = −X0 ∂
∂x0 + X1 ∂
∂x1
(4.26)
Reintroducing the two dimensions left aside from the discussion until now, gives
the full form of the differential operator in the case of one time and three spatial
dimensions:
D = −X0 ∂
∂x0 + X1 ∂
∂x1 + X2 ∂
∂x2 + X3 ∂
∂x3
(4.27)
This differential operator plays the role of the gradient in Minkowskian space–time.
This form of differential operator is the one which must be used when casting the tem-
poral version of Maxwell’s equations in the form of Clifford algebra (see Sect.5.1.2).
The negative sign is mandatory, not optional. Failing to employ the negative sign vio-
lates Einstein’s theory of special relativity.

66
4
Space and Time
4.4 Physical Units
The Minkowskian geometry of space–time described in Sects.4.1 and 4.3 treats all of
the unit vectors in the frame X as if they are of the same kind. Speciﬁcally, as vectors
in a geometric space, they all have norms which represent some kind of distances.
More particularly, they all take the same kind of physical units.
In engineering it is customary to adopt different units: units of length (such as
metres) for the spatial basis vectors and units of time (such as seconds) for the
temporal basis vector. Consider therefore replacing the time-like coordinate x0 with
a rescaled variable tx:
x0 = c tx
(4.28)
for some scale factor c. It is now possible to adopt physical units of length for
coordinates x0, x1, x2, x3, and a unit of time for the variable tx, provided the scale
factor c has units of length/time = velocity.
In terms of the new (scaled) temporal variable tx, the velocity of the origin OY of
the moving frame Y (see Eq.4.11) is:
vx = dx1
dtx
= dx1
dx0
dx0
dtx
= c tanh a = c VX
(4.29)
with units of length/time. Since the hyperbolic tangent function takes no values
outside the range ±1, it is never possible from the X frame to observe another frame
Y moving at any velocity greater than c. Exactly the same is true of the X frame
when viewed from the Y frame.
The new time variable tx must also be incorporated into the space–time differential
operator D from Eq.4.27:
D = −X0 ∂
∂tx

dtx
dx0

+ X1 ∂
∂x1 + X2 ∂
∂x2 + X3 ∂
∂x3
= −1
c X0 ∂
∂tx + X1 ∂
∂x1 + X2 ∂
∂x2 + X3 ∂
∂x3
= −i
ce0 ∂
∂t + e1 ∂
∂x + e2 ∂
∂y + e3 ∂
∂z
(4.30)
where t = tx, x = x1, y = x2 and z = x3.
4.5 Electromagnetic Field
The differential operator D in Eq.4.27 or 4.30 accommodates Einstein’s theory of
specialrelativityforanyfunction F.Intheparticularcasewhere F = F istheelectro-
magnetic ﬁeld, the form of that ﬁeld F is ﬁxed by the additional requirement to repro-
duce Maxwell’s equations under the inﬂuence of the operator D. This is achieved
(see Sect.5.1.2) when the electromagnetic ﬁeld F is written in the X frame as:

4.5 Electromagnetic Field
67
F = √μHσ −i√ϵEe0 = −X1X2X3
√μH + X0
√ϵE
(4.31)
where H = X1Hx + X2Hy + X3Hz = Hxe1 + Hye2 + Hze3 is the magnetic ﬁeld in
the X frame and E = X1Ex + X2Ey + X3Ez = Exe1 + Eye2 + Eze3 is the electric
ﬁeld in the X frame.
The same ﬁeld viewed from the moving Y frame appears to have different values of
electric and magnetic ﬁelds. Electric ﬁelds, which arise naturally from ﬁxed charges
in the X frame, exhibit an aspect of magnetic behaviour in the Y frame, since in that
frame the charges appear to be moving. Similarly, magnetic ﬁelds, which arise from
moving charges in the X frame, exhibit an aspect of electric character in the Y frame.
The Lorentz transformation can be used to calculate the components of the ﬁeld
in the moving Y frame. The method is the same as used in Sect.4.2.2 for coordinates.
It is only necessary to note that any products of basis vectors in the Y frame map
into the corresponding products of basis vectors for the X frame, as in the case
LY0Y1L = LY0LLY1L = X0X1.
It is therefore possible to extract the components of the electric and magnetic ﬁelds
E′, H ′ in the Y frame using the Lorentz transformation, the basis vectors associated
with each component in the X frame and the scalar product as follows:
⎧
⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
√μH ′
x = −(LFL, X1X2X3X1) = √μHx
√μH ′
y = −(LFL, X1X2X3X2) = √μHy cosh a + √ϵEz sinh a
√μH ′
z = −(LFL, X1X2X3X3) = √μHz cosh a −√ϵEy sinh a
√ϵE′
x = −(LFL, X0X1)
= √ϵEx
√ϵE′
y = −(LFL, X0X2)
= √ϵEy cosh a −√μHz sinh a
√ϵE′
z = −(LFL, X0X3)
= √ϵEz cosh a + √μHy sinh a
(4.32)
The negative signs in the central column of Eq.4.32 come from different places. In
the equations for H ′ they come from the minus sign in Eq.4.31. In the equations for
E′ they appear in accordance with the negative scalar product of the basis vector X0,
as in Eq.4.2.
4.6 Exercises
Q1. With X = 3X0 + 4X1 verify that the scalar product −(X, X0) in Eq.4.2 recov-
ers the value of the coordinate x0.
Q2. With X = 3X0 + 4X1 verify that the scalar product (X, X1) in Eq.4.2 recovers
the value of the coordinate x1.
Q3. With X = 3X0 + 4X1 calculate the value of the norm ∥X∥= (X, X).
Q4. With X = 3X1 + 4X2 calculate the value of the norm ∥X∥= (X, X).
Q5. Show that ab = 
ab = ba for any two vectors a, b.
Q6. Check the electric and magnetic ﬁeld Lorentz mappings in Eq.4.32 against any
standard reference.

Chapter 5
Classical Electromagnetism
Electromagnetism is a physical phenomenon caused by electric charges, both static
and moving. Maxwell’s equations are a mathematical model based on experimental
observations of electromagnetic phenomena in the 19th century.
Maxwell’s equations can be written as a set of four ﬁrst order partial differential
equations with two coefﬁcients μ and ϵ (as in Eq.5.1). These coefﬁcients are governed
by the material properties of the regions in which the equations are observed to apply.
Although materials are composed of atoms they are typically treated for the pur-
poses of electromagnetism at a macroscopic level as being composed of some con-
tinuous substance. The corresponding continuous magnetic and electric material
properties μ and ϵ can be interpreted as convenient kinds of statistical and quantum
mechanical averages which mathematically represent at the macroscopic level the
underlying atomic construction of the material.
In those physical situations for which they are suited, Maxwell’s equations predict
very accurately many of the physical manifestations of electromagnetic behaviour.
Collectively, manifestations in this category are referred to under the name of Classi-
cal Electromagnetism. Other physical manifestations related to particular processes
at the atomic level or under unusual physical conditions are more accurately predicted
by the more detailed equations of Quantum Electrodynamics. Examples of behav-
iour outside the realm of classical electromagnetism include the quantum nature of
the photoelectric effect, the discrete spectral nature of radiation emitted from heated
material, materials in the form of plasma or not in a state of thermal equilibrium,
and situations involving general relativistic effects such as strong gravitation (black
holes).
Most of electrical engineering lies within the scope of classical electromagnetism.
In engineering practice it is not a serious limitation to restrict attention further to cases
where the coefﬁcients μ and ϵ are for the most part constant. Maxwell’s equations then
apply only to regions where the material properties take values which are uniform,
or where regions meet at interfaces at which the material properties jump abruptly
from one uniform value to another. When subject to these restrictions Maxwell’s
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_5
69

70
5
Classical Electromagnetism
equations are not suited for regions where the material properties vary continuously
with position.
The methods described herein are applied to Maxwell’s equations with constant
coefﬁcients, and relate to the phenomena encompassed by classical (non-quantum)
electromagnetism.
5.1 Time Domain
5.1.1 Vector Calculus
In the notation of vector calculus Maxwell’s equations are written [14, 29] as a system
of four ﬁrst order partial differential equations:
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
∇· (ϵE) = ρ
∇× H −∂(ϵE)
∂t
= J
∇× E + ∂(μH)
∂t
= 0
∇· (μH) = 0
(5.1)
where E and H are the electric and magnetic ﬁelds respectively, ρ and J are the charge
and current source densities respectively, and ϵ and μ are the electric permittivity and
magnetic permeability respectively. The divergence ∇· and the curl ∇× are partial
differential operators with respect to space which produce the average radial and
tangential variations of the ﬁelds on which they operate.
At interfaces where the material properties ϵ and μ jump abruptly from one uni-
form value to the other, provided that sources are absent, the normal components
of the electric and magnetic ﬂux densities D = ϵE and B = μH and the tangential
components of the ﬁelds E and H are continuous. In the case that sources are present
at the interface, there is a step change in the value of ﬂux density or ﬁeld proportional
to the strength of the source.
5.1.2 Clifford Algebra
Casting Maxwell’s equations into the framework of Clifford algebra involves ﬁrstly
creating Clifford entities as in Table5.1 equivalent to those used in vector calculus.
The symbols for the new variables are chosen sufﬁciently close to the form of the
originals so that they can be readily identiﬁed. The scalar forms are identical.
Secondly, the combined temporal and spatial differential operator D is constructed
in the form:
D = −i
ce0 ∂
∂t + e1 ∂
∂x + e2 ∂
∂y + e3 ∂
∂z =
−i
ce0 ∂
∂t
(5.2)

5.1 Time Domain
71
Table 5.1 Notation for electromagnetic quantities and operators
Type
Entity
Vector calculus
Clifford algebra
Scalar
Magnetic permeability μ
μ
Electric permittivity
ϵ
ϵ
Charge density
ρ
ρ
Electric potential
φ
φ
Temporal derivative
∂/∂t
∂/∂t
Vector
Magnetic ﬁeld
H
H
Electric ﬁeld
E
E
Current density
J
J
Magnetic potential
A
A
Divergence
∇·
·
Curl
∇×
×
so that, as in Chap.4, it adheres to Einstein’s theory of special relativity. Thirdly, the
electromagnetic ﬁeld F is constructed in the form:
F = √μHσ −i√ϵEe0
(5.3)
so that the Clifford product DF, when split into four independent quaternion compo-
nents, matches to within multiplicative constants the left hand side of Eq.5.1. Finally,
the source ﬁeld S is constructed in the form:
S = √μJ +
i√ϵρe0
(5.4)
so that its Clifford value, when split into quaternion components, matches to within
the same multiplicative constants as the ﬁeld, the right hand side of Eq.5.1.
The ﬁnal result for Maxwell’s equations in the framework of Clifford algebra is
the single ﬁrst order ordinary differential equation:
DF = S
(5.5)
Consistency of the result with the Eq.5.1 in vector form is a matter of expanding
Eq.5.5 using Clifford algebra and separating the independent components. Firstly
expanding Clifford products in the cross-dot form of Eq.1.16 gives:
DF = S
(
−i
c e0 ∂
∂t )(√μHσ −i√ϵEe0) =
√μ(−
· H +
× Hσ)σ −i√ϵ(−
· E +
× Eσ)e0 −i
c e0
√μ ∂H
∂t σ −1
c e0
√ϵ ∂E
∂t e0 =
−√μ
· Hσ + √μ
× H + i√ϵ
· Ee0 + i√ϵ
× Ee0σ + i√ϵμ ∂H
∂t e0σ −√μϵ ∂E
∂t = √μJ +
i√ϵ ρe0
(5.6)

72
5
Classical Electromagnetism
The equation then separates according to the quaternion units (1, I2 = e0, J2 =
−iσ, K2 = −ie0σ) as a result of their linear independence, giving:
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩
i√ϵ(ϵ
· E)e0
=
i√ϵ(ρ) e0
√μ(
× H −ϵ ∂E
∂t )
= √μ(J)
−√ϵ(
× E + μ ∂H
∂t )(−ie0σ) =
0
−i
√μ(μ
· H)(−iσ)
=
0
(5.7)
Reference to Eq.5.1 veriﬁes for constant values of μ and ϵ that each of these equa-
tions is a copy of one of Maxwell’s equations in its vector form, scaled outside the
parentheses on the left by a constant and on the right by a quaternion unit.
Applying the same differential operator D to a Clifford potential function:
P =
1
√μ A + i√ϵφe0
(5.8)
containing the vector magnetic potential A and the scalar electric potential φ repro-
duces the electromagnetic ﬁeld F:
DP = F
(
−i
c e0 ∂
∂t )( 1
√μ A + i√ϵφe0) =
1
√μ(−
· A +
× Aσ) + i√ϵ(
φ)e0 −i
c e0 1
√μ
∂A
∂t + 1
c e0
√ϵ ∂φ
∂t e0 =
−1
√μ
· A +
1
√μ
× Aσ + i√ϵ
φe0 + i√ϵ ∂A
∂t e0 −√μϵ ∂φ
∂t = √μHσ −i√ϵEe0
(5.9)
The equation separates according to the quaternion units (1, I2 = e0, J2 = −iσ,
K2 = −ie0σ) as a result of their linear independence, giving:
⎧
⎪⎪⎨
⎪⎪⎩
−i√ϵ(−
φ −∂A
∂t )e0
= −i√ϵ(E)e0
−1
√μ(
· A + 1
c2
∂φ
∂t )
=
0
i
√μ(
× A)(−iσ) =
i
√μ(μH) (−iσ)
(5.10)
The central equation is the Lorentz condition (cf. [29]), which determines the value
of the divergence of the magnetic vector potential. It appears here by necessity rather
than by choice, a result of already having required that the differential operator D
adhere to special relativity in the form of the Lorentz transformation (see Chap.4).
Reference to a standard text on electromagnetism [29] veriﬁes that the other two
equations are copies of the potential equations in their vector form, scaled on the left
by a constant and on the right by a quaternion unit.

5.1 Time Domain
73
Table 5.2 Electromagnetic quantities in the form of Clifford variables, and quaternions
(A, B, C, D) split into their scalar (a, b, c, d) and vector (A, B, C, D) components
Clifford
Quaternion
A
B
C
D
a
A
b
B
c
C
d
D
Operator
D =
−i
c e0 ∂
∂t
0
0
−i
c
∂
∂t
0
0
i
0
0
Field
F = √μHσ −i√ϵEe0
0
√μH
0
0
0
0
0
−√ϵE
Source
S = √μJ +
i√ϵρe0
0
0
i√ϵρ
0
0
i√μJ
0
0
Potential
P =
1
√μ A + i√ϵφe0
0
0
i√ϵφ
0
0
i
√μ A
0
0
Differentiating Eq.5.9 gives:
D2P = S
(5.11)
which is recognised as the wave equation for the electromagnetic potential in Clifford
form after noting that:
D2 = −(∇2 −1
c2 ∂2
∂t2 )
(5.12)
is the negative of the d’Alembertian operator.
Table5.2 summarises the different electromagnetic quantities expressed (see
Sect.1.6) as Clifford numbers on the left and as quaternions on the right. When
expressed in terms of Clifford algebra each quantity requires only one number. In
comparison each quantity requires two independent quaternions, with four indepen-
dent ones required to accommodate all of the quantities.
5.2 Splitting the Field
Splitting of single Clifford-valued electromagnetic ﬁeld equations such as Eqs.5.6
and 5.9, into four components according to quaternion units, as in Eqs.5.7 and 5.10,
is handled formally in the framework of Clifford algebra by introducing operators
speciﬁcally designed for that purpose. Here, two pairs of splitting operators are
required, to successively split the ﬁeld equations ﬁrst in half and then in half again.
In other sections, other splitting operators are used for other purposes.
Splitting operators can be constructed as projection operators from reﬂection
operators using the same method as in Sect.3.1, and as demonstrated in Sects.3.2.1
and 3.2.3. They are used there to split the ﬁeld there into normal and tangential
components.

74
5
Classical Electromagnetism
Here, the ﬁrst step is to deﬁne two reﬂection operators:
Mu = σuσ
(5.13)
Nu = e0ue0
(5.14)
From those, two pairs of projection operators are constructed:

S = 1
2(I + M)
space
T = 1
2(I −M)
time
(5.15)
and:

V = 1
2(I + N)
vector
W = 1
2(I −N)
bivector
(5.16)
Noting that σ2 = 1, σe0 = −e0σ and σep = epσ for p ̸= 0, and then applying the
projection operators in either order to a Clifford number u = C = (a + Aσ) + (b +
Bσ)e0 −i(c + Cσ)σ −i(d + Dσ)e0σ, gives:
⎧
⎪⎪⎨
⎪⎪⎩
T WC = WT C =
(b + Bσ)e0
SWC = W SC =
a + Aσ
T V C = V T C = −i(d + Dσ)e0σ
SV C = V SC = −i(c + Cσ)σ
(5.17)
The S and T operators split into space-like and time-like components (i.e. com-
ponents without and with unit e0 respectively). The V and W operators split into
components having spatial components which are from odd or even grades. For V
that is vectors and trivectors; for W scalars and bivectors.
The S, T splitting operators can also be combined usefully with the boundary
data projection (splitting) operators Q± as applied to the bivector electromagnetic
ﬁeld u = F = √μHσ −i√ϵEe0 in Sect.3.2.3. The various combinations provide
for the splitting of the normal and tangential components of the ﬁeld into their four
constituent parts:
⎧
⎪⎪⎨
⎪⎪⎩
T Q+F = Q+T F = −i√ϵ (n · E) ne0
SQ+F = Q+SF = √μ (n × H) × nσ
T Q−F = Q−T F = −i√ϵ (n × E) × ne0
SQ−F = Q−SF = √μ (n · H) nσ
(5.18)
These relationships come into play in Sect.6.4.3.

5.3 Frequency Domain
75
5.3 Frequency Domain
In cases for which an electromagnetic ﬁeld can be treated a sum of monochromatic
components (sinusoidal functions of time), each component can be treated separately
as a phasor and written:
F(r, t) = Fk(r)eiωt
(5.19)
as the product of a Clifford-valued magnitude Fk(r) and a complex signal of unit
amplitude eiωt which rotates in a positive angular direction in the complex plane
with angular frequency ω = 2π f > 0 and wavenumber k = ω/c. The magnitude of
the phasor Fk(r) remains constant in time t but varies with position r, whereas the
complex signal does the opposite.
For monochromatic ﬁelds, the complex signal can be eliminated and Maxwell’s
equations can be written in terms the magnitude of phasors alone. This is achieved
by expanding the product:
DFk(r)eiwt = (
−i
ce0 ∂
∂t )Fk(r)eiwt
=
Fk(r)eiwt −i
ce0Fk(r) ∂
∂t eiwt
=
Fk(r)eiwt −i
ce0Fk(r)(iω)eiwt = (
+ ke0)Fk(r)eiwt
(5.20)
The number of variables is effectively reduced from three space and one time, to
three space plus a ﬁxed parameter, the wavenumber k. The complex signal can be
eliminated from both sides.
Table5.3 reproduces the electromagnetic quantities given in Table5.2, converted
from temporal to phasor form in the same way as for the ﬁeld F in Eq.5.19. All
quantities with a subscript k are the magnitudes of phasors, with the exception of the
differential operator Dk.
In the monochromatic frequency domain Maxwell’s equations are written in pha-
sor form as:
DkFk = Sk
(5.21)
Table 5.3 Electromagnetic phasors in the form of Clifford variables, and quaternions (A, B, C, D)
split into their scalar (a, b, c, d) and vector (A, B, C, D) components
Clifford
Quaternion
A
B
C
D
a
A
b
B
c
C
d
D
Operator
Dk =
+ ke0
0
0
k
0
0
i
0
0
Field
Fk = √μHkσ −
i√ϵEke0
0
√μHk
0
0
0
0
0
−√ϵEk
Source
Sk = √μJk +
i√ϵρke0
0
0
i√ϵρk
0
0
i√μJk 0
0
Potential
Pk =
1
√μ Ak + i√ϵφke0
0
0
i√ϵφk
0
0
i
√μ Ak
0
0

76
5
Classical Electromagnetism
The method for the solution of Maxwell’s equations described herein is set in the
monochromatic frequency domain of Eq.5.21 rather than the time domain of Eq.5.5.
The method relies on the solution of the homogeneous form of Maxwell’s equations:
DkFk(r) = 0
(5.22)
for regions without sources, along with the solution of the inhomogeneous form:
DkFk(r) = δ(r −0)
(5.23)
for a point source Sk(r) = δ(r −0) at the origin r = |r| = 0. The two solutions
are incorporated into the boundary theorem [30] to produce the electromagnetic
(monogenic) Cauchy integral in three dimensions. Details are given in Chap.7.
Differentiating 5.21 a second time gives:
D2
kFk = (
+ ke0)(
+ ke0)Fk
= (
2 −k2)Fk
=

∂
∂x e1 + ∂
∂y e2 + ∂
∂z e3
	2
−k2

Fk =

−

∂2
∂x2 + ∂2
∂y2 + ∂2
∂z2
	
−k2	
Fk = −HkFk
(5.24)
where:
Hk = ∇2 + k2
(5.25)
is the Helmholtz operator, and:
∇2 =
∂2
∂x2 + ∂2
∂y2 + ∂2
∂z2
(5.26)
is the Laplacian operator.
The relationship between the operator Dk and the Helmholtz operator in Eq.5.24
is of importance because it plays a role in ﬁnding the solution of Eq.5.23, the ﬁeld
for a point source. For details see Sect.7.2.
5.4 Differential Operators
In the context of electromagnetism a variety of ﬁrst and second order ordinary and
partial differential operators are employed both in the time and frequency domains,
and additionally here in both vector and Clifford formalisms. Table5.4 lists the differ-
ential operators as applied in three-dimensional space with or without an additional
dimension of time or frequency.The names and symbols adopted for the different
operators varies according to source. The Clifford vector differential operator sym-
bolised here as D0 is referred to most widely as the Dirac operator [31] following
its introduction in a quantum mechanical setting [32, 33], although [30] it was intro-
duced by Hamilton almost one century earlier. The operator symbolised as Dk and

5.4 Differential Operators
77
Table 5.4 Differential operators in three or more dimensions
Symbol D
Deﬁnition Df
Operand f
Name
∇
∇f = ∂f
∂x ˆx + ∂f
∂y ˆy + ∂f
∂z ˆz
Scalar
Gradient
∇·
∇· f = ∂
∂x (ˆx · f ) + ∂
∂y (ˆy · f ) + ∂
∂z (ˆz · f )
Vector
Divergence
∇×
∇× f =
∂
∂x (ˆx × f ) + ∂
∂y (ˆy × f ) + ∂
∂z (ˆz × f )
Vector
Curl
f = ∂
∂x (e1 f ) + ∂
∂y (e2 f ) + ∂
∂z (e3 f )
Clifford
Gradienta
·
· f =
∂
∂x (e1 · f ) + ∂
∂y (e2 · f ) + ∂
∂z (e3 · f )
Clifford
Divergenceb
×
× f =
∂
∂x (e1 × f ) + ∂
∂y (e2 × f ) + ∂
∂z (e3 × f )
Clifford
Curlb
D0
D0 f = 
j
∂
∂x j (e j f )
Clifford
Dirac
Dk
Dk f = 
j
∂
∂x j (e j f ) + k(e0 f )
Clifford
k-Dirac
D
D f = 
j
∂
∂x j (e j f ) −i
c
∂
∂t (e0 f )
Clifford
Hyperbolic Dirac
∇2, −
2, −D2
0 ∇2 f = ∂2 f
∂x2 + ∂2 f
∂y2 + ∂2 f
∂z2
Scalar
Laplacian
Hk, −D2
k
Hk f = ∂2 f
∂x2 + ∂2 f
∂y2 + ∂2 f
∂z2 + k2 f
Scalar
Helmholtz
□2, −D2
□2 f = ∂2 f
∂x2 + ∂2 f
∂y2 + ∂2 f
∂z2 −1
c2
∂2 f
∂t2
Scalar
d’Alembertian
aOnly if the operand is a scalar
bOnly if the operand is a vector
variously referred to as the perturbed Dirac operator [34] or the k-Dirac operator [2],
reduces to the Dirac operator when k = 0.
The k-Dirac operator produces the derivative required when Maxwell’s equations
are expressed in terms of a monochromatic ﬁeld in the frequency domain. In the
time domain the corresponding operator D is referred to as the hyperbolic Dirac
operator [2].
A special symbol
is adopted in three dimensions only, to distinguish the vector
differential operator:
∇=
∂
∂x ˆx + ∂
∂y ˆy + ∂
∂z ˆz
(5.27)
in the context of Gibbs’s vector calculus [13] from the Cliffordian vector differential
operator:
=
∂
∂x e1 + ∂
∂y e2 + ∂
∂z e3
(5.28)
in the context of Clifford algebra. The distinction is important because the range of
multiplication operations which is supported by each is different.
The vector differential operator ∇supports operations on scalars by the scalar
multiplication of individual components, and operations on vectors by dot and cross
multiplications to produce the divergence (a scalar representing the average radial

78
5
Classical Electromagnetism
derivative) and the curl (a vector representing the average tangential derivative). The
Cliffordian differential operator
supports exactly the same operations. In addition,
the Cliffordian differential operator supports Clifford multiplication and all of the
variantsdescribedinSect.2.3.3.Foravector f = btheCliffordproduct
bproduces
both the curl and the divergence in the form:
b = (
× b)σ −
· b
(5.29)
as in Eq.1.16 of Sect.1.5.
The vector differential operators ∇and
are taken as applying only in three
dimensions. This is necessary because as deﬁned the vector cross product applies
strictly to three dimensions alone. In three dimensions the Dirac operator D0 and
the Cliffordian vector differential operator
appear identical. However, the Dirac
operator does not support the vector cross product, and that allows it to operate
properly in all dimensions without special cases.
5.4.1 Leibniz Product Rule
The Clifford algebra derivative of a product of a pair of functions can be cast in a
coordinate-free form in terms of the areal derivative deﬁned by Pompeiu [35, 36].
For two functions g and f at a point r in a region  enclosed by a boundary  the
derivative is given by [37]:
D(g| f )(r) = lim
↓r

 g(s)n(s) f (s) dσ(s)

 1 ds
(5.30)
where n(s) is the outward normal to the boundary of the region, s is a point on
the boundary, dσ(s) is the elemental measure of boundary, and ds is the elemental
measure of the interior. The limit indicates that the region shrinks onto the point r.
The coordinate-free derivative of a single function f can be calculated by setting
the function g = 1:
D(1| f )(r) = lim
↓r

 n(s) f (s) dσ(s)

 1 ds
(5.31)
When any particular coordinate system is chosen the Eqs.5.30 and 5.31 for the
coordinate-free derivative can be cast in terms of the basis vectors of the sys-
tem. For example, consider the case in two dimensions for Cartesian coordinates
with primal basis vectors e1, e2 and a circular region of radius r having nor-
mal n(s) = (cos θ)e1 + (sin θ)e2 as shown in Fig.5.1, and assume that the function
f (r) = f (x, y) = fxe1 + fye2 is represented by a Taylor series:

5.4 Differential Operators
79
Fig. 5.1 Circular region 
with boundary  containing
Clifford-valued function f
s
r
Ω
Σ
Δx
Δy
Δr
f
n = (cos θ)e1 + (sin θ)e2
Δx = Δr cos θ
Δy = Δr sin θ
f (s) = f (x + x, y + y) = ( fx + x ∂fx
∂x + y ∂fx
∂y )e1
+ ( fy + x ∂fy
∂x + y ∂fy
∂y )e2 + O(r2)
(5.32)
If the second and higher order derivatives are bounded and if the circular region is
small enough, then the ﬁrst few terms of the Taylor series are often a good approx-
imation to the value of the function. This is normally the case if the function f is
well behaved (i.e. does not contain a singularity).
Retaining the constant and linear terms only, the product n(s) f (s) gives:
nf = [(cos θ)e1 + (sin θ)e2]

fx + x ∂fx
∂x + y ∂fx
∂y
	
e1 +

fy + x ∂fy
∂x + y ∂fy
∂y
	
e2

=

(cos θ)

fy + x ∂fy
∂x + y ∂fy
∂y
	
−(sin θ)

fx + x ∂fx
∂x + y ∂fx
∂y
	
e1e2
−

(cos θ)

fx + x ∂fx
∂x + y ∂fx
∂y
	
+ (sin θ)

fy + x ∂fy
∂x + y ∂fy
∂y
	
(5.33)
So that:
D(1| f )(r) = lim
r→0

 nf dσ(s)

 1 ds
=
lim
r→0
 2π
θ=0 nf r dθ
π(r)2
= lim
r→0
1
πr
 2π
θ=0
r

(cos2 θ) ∂fy
∂x −(sin2 θ) ∂fx
∂y

e1e2
−r

(cos2 θ) ∂fx
∂x + (sin2 θ) ∂fy
∂y

dθ
(5.34)
where other terms containing cos θ, sin θ and sin 2θ have been omitted from Eq.5.34
because their integrals over the range from θ = 0 to 2π are known in advance to give
a result of zero. Evaluating the remaining integrals gives:
D(1| f )(r) = 1
π

π ∂fy
∂x −π ∂fx
∂y

e1e2 −

π ∂fx
∂x + π ∂fy
∂y

=
 ∂fy
∂x −∂fx
∂y

e1e2 −
 ∂fx
∂x + ∂fy
∂y

=

∂
∂x e1 + ∂
∂y e2
	
( fxe1 + fye2)
=

∂
∂x e1 + ∂
∂y e2
	
f
(5.35)

80
5
Classical Electromagnetism
It is recognised from Eq.5.35 that the derivative D(1| f ) is the same as the Clifford
product D0 f , where D0 is the Dirac operator. By similar reasoning, if the function g
is also well approximated by a Taylor series then D(g|1) is the same as the Clifford
product gD0, and furthermore:
D(g| f ) = D(g|1) f + gD(1| f )
(5.36)
Equation5.36 serves as the Leibniz rule for the Clifford differentiation of a product
of two Clifford-valued functions. Written in terms of the Dirac operator, the product
rule takes the form:
D(g| f ) = D0(g f ) =

p
∂
∂x p (gep f ) = (gD0) f + g(D0 f )
(5.37)
The Clifford product D0 f represents differentiation of the function f by applying the
differential operator D0 from the left hand side. The Clifford product gD0 represents
differentiation of the function g by applying the differential operator D0 from the
right hand side.
The key point to note here is that the primal unit ep which is part of the Dirac
operator D0 plays the role of the normal vector in Eq.5.30 and sits between the two
functions g and f . For example, in three dimensions:
D0(g f ) =
3

p=1
∂
∂x p (gep f )
=
∂
∂x1 (ge1 f ) +
∂
∂x2 (ge2 f ) +
∂
∂x3 (ge3 f )
=

∂g
∂x1 e1 f + ge1
∂f
∂x1
	
+

∂g
∂x2 e2 f + ge2
∂f
∂x2
	
+

∂g
∂x3 e3 f + ge3
∂f
∂x3
	
=

∂g
∂x1 e1 + ∂g
∂x2 e2 + ∂g
∂x3 e3
	
f + g

e1
∂f
∂x1 + e2
∂f
∂x2 + e3
∂f
∂x3
	
=

∂g
∂x1
e1 +
∂g
∂x2
e2 +
∂g
∂x3
e3
	
f + g

e1
∂f
∂x1 + e2
∂f
∂x2 + e3
∂f
∂x3
	
=

g

∂
∂x1
e1 +
∂
∂x2
e2 +
∂
∂x3
e3
	
f + g

e1 ∂
∂x1 + e2 ∂
∂x2 + e3 ∂
∂x3
	
f

=
D0g
f + gD0 f
= (gD0) f + g(D0 f )
(5.38)
Thereversedsymbols
∂
and
D0
areusedtemporarilytoemphasisethatthoseoperators
are applied from the right hand side onto operands further towards the left. Normally
the same operation is indicated by parentheses without reversing the symbols, as in
the last line of Eq.5.38.

5.5 Exercises
81
5.5 Exercises
Q1.
Show that −
2 with the minus sign is the same as the Laplacian +∇2 with
the plus sign.
Q2.
Show that D2P separates according to the independence of quaternion units
into wave equations for both the scalar electric and vector magnetic poten-
tials.
Q3.
Show that D2F separates according to the independence of quaternion units
into wave equations for both the electric and magnetic ﬁelds.
Q4.
Verify that σ2 = +1.
Q5.
Verify that σe0 = −e0σ.
Q6.
Verify that σep = epσ for p > 0.
Q7.
Verify that M and N in Eqs.5.13 and 5.14 are reﬂection operators.
Q8.
Show that the reﬂection operators M and N are commutative.
Q9.
Show that the projection operators S and T are each commutative with the
operators V and W.
Q10.
Show that the projection operators S and T are each commutative with the
boundary data projection operators Q+ and Q−.
Q11.
Verify that applying projection operators S, T, V and W to Eq.5.6 as in
Eq.5.17 produces Eq.5.7.
Q12.
Verify that applying projection operators S, T, V and W to Eq.5.9 as in
Eq.5.17 produces Eq.5.10.
Q13.
Verify that applying projection operators S, T, Q+ and Q−to the electro-
magnetic ﬁeld F = √μHσ −i√ϵEe0 produces Eq.5.18.
Q14.
Determine the relationship between the energy in an electromagnetic wave
and the scalar product of the electromagnetic ﬁeld (F, F∗), where F∗is the
complex conjugate of F.
Q15.
Show that any second order terms retained in the Taylor series 5.32 for use
in the product nf of Eq.5.33 have negligible effect as the region  shrinks
onto the point r.
Q16.
Starting with Eq.5.30, show in two dimensions using Cartesian coordinates
that the areal derivative D(g|1) is the same as the Clifford expression gD0.
Q17.
Starting with the areal derivative in Eq.5.30, using two Taylor series and
Cartesian coordinates in two dimensions, verify the product rule of Eq.5.36.

Part II
Formulation

Chapter 6
Scattering
Figure6.1 shows electromagnetic radiation from a distant source⋆which encounters
an object + having values of electric permittivity ϵ and magnetic permeability μ
different from the surrounding space, −. The radiation is in part excluded and
redirected away from the object and is in part admitted and borne into the object.
The wave f ⋆arriving from the source is called the incident wave. The excluded
component of the wave f −is called the scattered or reﬂected wave, and the admitted
component f + is called the transmitted wave. The term reﬂected is used more often
in cases where the overall shape of the scattered wave strongly resembles that of the
incident wave.
The scattering of electromagnetic radiation from various objects occurs frequently
in electrical engineering. In some cases, such as radar, the object may be an aeroplane
or a ship and exhibits the properties of a metallic conductor. In other cases, such
as optics or opto-electronics, the object may be a lens or a waveguide, and has
the properties of a lossless dielectric. In applications where it is intended to hide a
conducting object from detection by radar, a lossy dielectric may be used as a surface
layer to absorb the radiation admitted and to reduce the amount of, or eliminate, the
radiation scattered.
Inmostoftheseapplicationsthedifferentobjectsinvolvedhavematerialproperties
μ, ϵ which take constant and uniform values within well deﬁned regions of space, and
which change abruptly across interfaces formed where the boundaries of two such
regions meet. Within each and every of all such regions Maxwell’s equations apply in
the homogeneous form (DF = 0 in the time domain or DkFk = 0 in the frequency
domain) because the problem is posed in such a way that the sources (although not
their effects) are effectively excluded.
At interfaces between regions, Maxwell’s equations are replaced by simpler equa-
tions. These relate to one another the normal and tangential ﬁelds immediately on
either side of the interface, in terms of the values of the material properties on the
two sides.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_6
85

86
6
Scattering
Ω+
μ−,
−
μ+
+
transmitted wave
incident wave
scattered wave
distant source
Ω−
f
f +
f −
Fig. 6.1 Radiation from distant source ⋆partially borne into and scattered away from object +
In order to design systems which interact with electromagnetic ﬁelds in whatever
ways are deemed useful involves determining the scattered and admitted ﬁelds f −
and f +,fromknowledgeoftheincidentﬁeld f ⋆,thematerialpropertiesofallregions,
and a geometric speciﬁcation of their boundaries.
6.1 Examples
The simplest practical example of scattering in electrical engineering is that for a
transmission line where the characteristic impedance changes abruptly from one
value Z−to another Z+ as shown in Fig.6.2a. The amplitude of the reﬂected and
transmitted waves is governed by the reﬂection coefﬁcient  and the transmission
coefﬁcient τ:
⎧
⎪⎨
⎪⎩
 = Z+ −Z−
Z+ + Z−
τ =
2Z+
Z+ + Z−
(6.1)
For unguided waves propagating in three dimensions the corresponding case involves
a linearly polarised plane wave scattering from an inﬁnite planar surface per-
pendicular to the direction of motion, as shown in Fig.6.2b. In this case the
Z+
Z−
η+
η−
v
w
(a)
(b)
Fig. 6.2 One-dimensional scattering (a) of voltage v⋆from discontinuity in characteristic
impedance Z on transmission line, and (b) of plane electromagnetic wave w⋆from discontinu-
ity in intrinsic impedance η at planar surface

6.1 Examples
87
reﬂection and transmission coefﬁcients are governed by the material properties on
each side of the interface at the surface, expressed in the form of intrinsic impedances
η± = √μ±/ε± :
⎧
⎪⎪⎨
⎪⎪⎩
 = η+ −η−
η+ + η−
τ =
2η+
η+ + η−
(6.2)
Two special cases are of interest. Firstly is the case when η+/η−= 1. There is
no reﬂection ( = 0) and complete transmission (τ = 1). Secondly is the case when
η+/η−= 0. Then there is complete reﬂection ( = −1) and no transmission (τ = 0).
The negative sign indicates that the reﬂected wave is inverted.
Note in the deﬁnition of the intrinsic impedance that ε± = ϵ± −iσ±/ω is the
effective permittivity for a sinusoidal ﬁeld of angular frequency ω. This effective
permittivity contains an imaginary component which is related to the electrical con-
ductivity σ±. When the electrical conductivity is low then σ± ≪ωϵ± and displace-
ment current ﬂow dominates Ohmic current ﬂow. The conductive component can be
safely ignored and the effective permittivity ε± ≈ϵ± is no different from that for
a lossless dielectric. However, for a good conductor σ± ≫ωϵ± and Ohmic current
ﬂow dominates. In that case the conductive component cannot be ignored and the
effective permittivity ε± ≈−iσ±/ω must be used instead of ϵ±.
6.2 Single Regions
In two dimensions Cauchy showed [8]1 that the solution for a complex-valued func-
tion f (z) satisfying the homogeneous equation d f/dz = 0 within a closed boundary,
is given directly and explicitly in terms of the Cauchy integral of the trace (value) of
the function on the boundary. The method was later generalised in multiple dimen-
sions by McIntosh [10] for Clifford-valued functions f (r) satisfying the homoge-
neous equation Dk f = 0 within Lipschitz domains. This is exactly the case for the
monochromatic electromagnetic ﬁeld f = Fk in a region without sources.
In two dimensions the function f (z) is described as an analytic function of a
complex variable z. In the multi-dimensional case the function f (r) is described
either as a monogenic or as a k-monogenic function of a Clifford vector variable r.
The term monogenic without the k is used in the case of static ﬁelds, i.e. when k = 0.
The electromagnetic ﬁeld in a region without sources behaves like a k-
monogenic function of a Clifford variable, and is determined directly and explic-
itly from the multi-dimensional Cauchy integral of the trace of the ﬁeld on the
boundary of the region.
Details of the particular form of the Cauchy integral required in three dimensions
is given in Sect.7.3.2.
1Equation6.

88
6
Scattering
6.3 Multiple Regions
In the case where there are multiple regions with material properties taking different
values, solution of the scattering problem involves satisfying simultaneously two
conditions:
• Maxwell’s homogeneous equations within each and every region, and
• the boundary conditions which relate to one another the ﬁelds on adjacent sides
of all interfaces.
The ﬁrst condition is met by the imposition of Maxwell’s homogeneous equations in
the form of two projection operators called Hardy projections. The particular Hardy
projections required have been derived from the multi-dimensional Cauchy integral
by Axelsson [2] for the speciﬁc purpose of relating a joint function at the interface
to the ﬁelds immediately on either side. The Cauchy integral is described in Chap.7,
and the Hardy projections are described in Chap.8.
The second condition is met by imposing equations derived from the boundary
conditions, cast in the form of two boundary data projection operators. Each of the
two projection operators relates one half of the unknown ﬁeld on the boundary to one
half of the incident ﬁeld on the boundary. These operators are described in Sect.6.4.
6.3.1 Extreme Cases
Of all possible values for material properties, two cases stand out as at the opposite
extremes of a continuum. Both of these cases are of practical interest, and they are
both easier to solve than any other.
The ﬁrst case is that where all radiation is scattered. The electrical conductiv-
ity inside the object is effectively inﬁnite. This extreme value of material property
dominates the solution, and the values of the electric permittivity and magnetic per-
meability within the object play no role. The nett (total) electric and magnetic ﬁelds
on either side of the interface at the object’s surface (i.e. incident plus scattered out-
side, and transmitted inside) are wholly discontinuous, with those on the inside being
identically zero. Only two ﬁelds are involved, the incident ﬁeld and the scattered ﬁeld.
The context in which the ﬁrst case if of interest is for metallic objects, most
of which have a value of electric conductivity high enough to be taken as inﬁnite.
Applications are in the detection of distant objects by radar, and in the design of
antennas and systems of antennas.
The second case is that where the electrical conductivity inside the object is
at the other extreme, zero, and the electric permittivity and magnetic permeability
govern the solution. Their particular values inside are taken as equal to those outside.
The object is perfectly transparent to electromagnetic radiation, although it may be
possible to detect it using other means. The incident wave is neither scattered nor
absorbed in any way. The transmitted wave can in no way be distinguished from

6.3 Multiple Regions
89
what would be measured in the region occupied by the object should the object be
removed. The nett electric and magnetic ﬁelds on either side of the interface at the
object’s surface are wholly continuous, those immediately inside being identical to
those immediately outside. Again only two ﬁelds are involved, this time the incident
ﬁeld and the transmitted ﬁeld.
The application in which the second case is of interest is for the extension into the
far ﬁeld of a radiation pattern measured (perhaps only partially) near an antenna. In
this case the source is inside the object, and the object itself is deﬁned by the surface
over which the ﬁeld is measured. The values of electric permittivity and magnetic
permeability are everywhere the same.
In both of these cases each of the two conditions which govern the solution at the
surface of the object are represented by projection operators, and have a geometri-
cal interpretation as such. The solution itself has a geometrical interpretation as the
intersection of two straight lines, one for each condition, and can be found by alge-
braically implementing geometrical operations as in Sect.3.5. The full description
of these cases and their solutions are given in Sects.9.1 and 9.2.
Other cases, such as for lossless and lossy dielectrics, fall somewhere on the
continuum in between the two extremes. These cases are more complicated since
they require three ﬁelds to be matched on the interface at the object’s surface rather
than just two. The full description of these more general cases and their solution is
given in Sect.9.3. The geometrical interpretation of the solution is that of a vector
linking one line to another.
6.3.2 Components of Solutions
The components required in the construction of the solutions are listed in Table6.1.
The Hardy projection operators are more complicated than the boundary data projec-
tion operators because the Hardy projections require operations globally over entire
surfaces whereas the boundary data projections require operations only locally at
individual points.
Table 6.1 Components of solution
Component
Perfect reﬂection
Perfect
transmission
Partial transmission
and reﬂection
1a
Boundary conditions
Sect.6.4
Sect.6.4
Sect.6.4
1b
Boundary data projection
operators
Sect.6.4.1
Sect.6.4.2
Sect.6.4.3
2a
Maxwell’s equations
Sect.5.3
Sect.5.3
Sect.5.3
2b
Hardy projection operators
Sect.8.1
Sect.8.2
Sect.8.3
3a
Formulation
Sect.9.1
Sect.9.2
Sects.9.3, 9.3.1
3b
Solution
Sect.9.1
Sect.9.2
Sect.9.3.2

90
6
Scattering
Table 6.2 Stages in construction of the Cauchy integral
Stage
Context
Section
1
Boundary theorem
Fundamental theorem of calculus
Sect.7.1
2
Fundamental solution
Point source
Sect.7.2
3
Reproducing formula
In one region
Sect.7.3.1
4
Cauchy extension
Into two adjacent regions
Sect.7.3.2
5
Cauchy integral
On interface between regions
Sect.7.4.1
The Hardy projection operators are constructed from the Cauchy integral. That
integral is developed in stages from the boundary theorem as listed in Table6.2.
6.4 Boundary Conditions
Electromagnetic boundary ﬁeld problems fall naturally into three different cases, as
shown in Table6.3, according to the behaviour of the ﬁeld at the interface between
regions:
• perfect reﬂection,
• perfect transmission, or
• partial transmission and reﬂection.
Table 6.3 Three cases of electromagnetic boundary ﬁeld problems in the notation of vector
calculus
Case
Fields
Boundary conditions
Perfect reﬂectiona
ϵ+ = ∞, μ+ = 0
σ+ = ∞
Ω+
Ω−
f
f + =0
f −
ϵ−n · [E⋆+ E−] = ρs
n × [H⋆+ H−]
= Js
n × [E⋆+ E−]
= 0
μ−n · [H⋆+ H−] = 0
Perfect transmissiona
ϵ+ = ϵ−, μ+ = μ−
σ+ = σ−
Ω+
Ω−
f
f +
f −=0
n · E⋆−n · E+
= 0
n × H⋆−n × H+ = 0
n × E⋆−n × E+ = 0
n · H⋆−n · H+
= 0
Partial transmission
and reﬂection
Ω+
Ω−
f
f +
f −
ϵ−n · [E⋆+ E−] −ϵ+n · E+
= 0
n × [H⋆+ H−] −n × H+
= 0
n × [E⋆+ E−] −n × E+
= 0
μ−n · [H⋆+ H−] −μ+n · H+ = 0
aHere σ± is the electrical conductivity

6.4 Boundary Conditions
91
At the interface the normal n is in the same direction as the outward normal to the
boundary of the region +. In the case of perfect reﬂection, ρs and Js are respectively
the surface electric charge density and surface electric current density induced on
the interface.
The equations for the boundary conditions involving dot products arise from the
requirement (as embodied in by Gausses law) that the normal component of the ﬂux
density emerging on both sides of the interface is balanced by the surface charge
density present on the interface. Similarly, the equations for the boundary conditions
involving cross products arise from the requirement that the tangential component of
the ﬁeld circulating around both sides of a ﬁnite section of the interface is balanced by
the surface current density ﬂowing within the interface in a direction perpendicular
to that component of ﬁeld.
For electric ﬁelds the surface electric charge density ρs may take non-zero values
but the surface magnetic current density is identically zero. Contrarily, for magnetic
ﬁelds the surface magnetic charge density is identically zero while the surface electric
current density Js may be otherwise.
In the case of perfect reﬂection, the values of the surface electric charge and
current densities induced on the interface are indeed non-zero. In other cases, there
may be induced non-zero values of volumetric charge or current densities, but their
volumetric value at the interface is ﬁnite. Once integrated over the inﬁnitesimal
thickness of the interface their effect as a surface density vanishes.
6.4.1 Perfect Reﬂection
In the case of perfect reﬂection, the surface current density Js and charge density
ρs are not known at the outset. Attempting as part of the solution to use the ﬁrst
two equations in the upper section of Table6.3 introduces two new unknowns which
need to be eliminated. That can be achieved by the use of two suitable equations. The
simplest approach is to use the very same two equations, by discarding them entirely.
Once the solution is found the two equations so discarded can be used to calculate
the induced surface current and charge density, if those are indeed required.
Having eliminated the ﬁrst two equations now leaves only:
n × [E⋆+ E−] = 0
(6.3)
μ−n · [H⋆+ H−] = 0
(6.4)
A Clifford version of these equations is constructed by multiplying Eq.6.4 with
1/√μ−on the left and with nσ on the right, by multiplying Eq.6.3 with −i√ϵ−on
the left and by vector cross multiplying with ne0 on the right, and adding the two
results together:
[√μ−(n · H⋆)nσ −i√ϵ−(n × E⋆) × ne0] + [√μ−(n · H−)nσ −i√ϵ−(n × E−) × ne0] = 0
(6.5)

92
6
Scattering
All vectors have been replaced by their plain typeface Clifford equivalents, as in
Table5.1.
Reference to Eq.3.13 shows this Clifford-valued boundary condition can be
rewritten more compactly as:
Q−f ⋆+ Q−f −= 0
(6.6)
where Q−is one of the boundary projection operators as in Sects.3.2.1 and 3.2.3,
and where:
 f ⋆= √μ−H⋆σ −i√ϵ−E⋆e0
f −= √μ−H−σ −i√ϵ−E−e0
(6.7)
are the bivector Clifford forms of the electromagnetic ﬁelds, as in Sect.5.1.2 or 5.3.
Although there is now only one boundary Eq.6.6 it can be split at any time into
the two original components through the use of the space-like S and time-like T
projection operators described in Sect.5.2.
The value of the incident ﬁeld f ⋆is known, so that the equation:
g = −Q−f ⋆
(6.8)
can be calculated directly and taken as data for any particular problem. The boundary
condition (6.6) in Clifford form is then simply:
Q−f −= g
(6.9)
The equation can be read to state “certain components of the reﬂected ﬁeld on the
left match certain components of the incident ﬁeld on the right”. The solution based
on this boundary condition is described in Sect.9.1.
6.4.2 Perfect Transmission
Inthecaseofperfecttransmission,eithertheﬁrsttwoorthelasttwooftheequationsin
the middle section of Table6.3 can be used in the solution. If the last two are used, the
solution proceeds in much the same way as described for the case of perfect reﬂection
(see Sect.6.4.1) with the introduction of the Q−boundary projection operator. If the
ﬁrst two equations are used:
n · [E⋆−E+] = 0
(6.10)
n × [H⋆−H+] = 0
(6.11)
it is the boundary projection operator Q+ which must be introduced instead.
A Clifford version of the boundary conditions is constructed by multiplying
Eq.6.10 with −i√ϵ± on the left and with ne0 on the right, by multiplying Eq.6.11

6.4 Boundary Conditions
93
with √μ± on the left and by vector cross multiplying with nσ on the right, and adding
the two results together:
[√μ± (n × H⋆) × nσ −i√ϵ± (n · E⋆)ne0]
−[√μ± (n × H+) × nσ −i√ϵ± (n · E+)ne0] = 0
(6.12)
Here the material properties ϵ± = ϵ+ = ϵ−and μ± = μ+ = μ−are the same on both
sides of the interface.
Reference to Eq.3.12 shows this Clifford-valued boundary condition can be
rewritten more compactly as:
Q+ f ⋆−Q+ f + = 0
(6.13)
where Q+ is one of the projection operators as in Sects.3.2.1 and 3.2.3, and where:
 f ⋆= √μ± H⋆σ −i√ϵ± E⋆e0
f + = √μ± H+σ −i√ϵ± E+e0
(6.14)
are the bivector Clifford forms of the electromagnetic ﬁelds, as in Sect.5.1.2 or 5.3.
Although there is now only one boundary Eq.6.13 it can be split at any time into
the two original components through the use of the space-like S and time-like T
projection operators described in Sect.5.2.
The value of the incident ﬁeld f ⋆is known, so that the equation:
h = Q+ f ⋆
(6.15)
can be calculated directly and taken as data for any particular problem. The boundary
condition 6.13 in Clifford form is then simply:
Q+ f + = h
(6.16)
The equation can be read to state “certain components of the transmitted ﬁeld on the
left match certain components of the incident ﬁeld on the right”. The solution based
on this boundary condition is described in Sect.9.2.
6.4.3 Partial Transmission and Reﬂection
In the case that part of the electromagnetic wave is transmitted and part is reﬂected,
all four equations in the lower section of Table6.3:
⎧
⎪⎪⎨
⎪⎪⎩
ϵ−n · [ E⋆+ E−] −ϵ+n · E+ = 0
n × [ H⋆+ H−]
−n × H+ = 0
n × [ E⋆+ E−]
−n × E+ = 0
μ−n · [ H⋆+ H−] −μ+n · H+ = 0
(6.17)

94
6
Scattering
are used. As in Sects.6.4.1 and 6.4.2 the aim is to bind these into a single Clifford-
valued equation, without destroying any information, using the projection operators
Q−and Q+ along with bivector forms of all of the electromagnetic ﬁelds from
Eqs.6.7 and 6.14:
⎧
⎨
⎩
f ⋆= √μ−H⋆σ −i√ϵ−E⋆e0
f −= √μ−H−σ −i√ϵ−E−e0
f + = √μ+ H+σ −i√ϵ+ E+e0
(6.18)
With four vector style boundary conditions rather than two, it is now necessary to use
in conjunction with the Q± boundary projection operators two more, in particular
the space-like and time-like projection operators S and T described in Sect.5.2.
The procedure for constructing the Clifford version of the boundary conditions
follows the same steps of multiplying Eq.6.17 by certain values and adding with the
aim of combining all separate electric and magnetic ﬁeld components from Eq.6.17
into the Clifford forms of Eq.6.18.
Firstly multiply Eq.6.17 in the order listed by 1/i√ϵ−, √μ+, −i√ϵ+ and 1/√μ−
respectively on the left, and multiply (with cross product × as indicated) by
ne0, ×nσ, ×ne0 and nσ respectively on the right:
⎧
⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎩

−i√ϵ−(n · [E⋆+ E−]) ne0

−√ϵ+/ϵ−

−i√ϵ+(n · E+) ne0

= 0
√μ+/μ−
 √μ−(n × [H⋆+ H−]) × nσ

−

√μ+(n × H+) × nσ

= 0
√ϵ+/ϵ−

−i√ϵ−(n × [E⋆+ E−]) × ne0

−

−i√ϵ+(n × E+) × ne0

= 0

√μ−(n · [H⋆+ H−]) nσ

−√μ+/μ−

√μ+(n · H+) nσ

= 0
(6.19)
Introducing for notational convenience the contrast factors α, β, which are related
to the material properties by:
α = √μ+/μ−
β = √ϵ+/ϵ−
(6.20)
thenconvertingtoCliffordformalismwiththeuseofthe Q± operatorsasinSect.3.2.3
along with the S, T operators as in Sect.5.2 (see Eq.5.18) and the electromagnetic
ﬁelds in Eq.6.18, gives:
⎧
⎪⎪⎨
⎪⎪⎩
T Q+( f ⋆+ f −) −βT Q+ f + = 0
αSQ+( f ⋆+ f −) −
SQ+ f + = 0
βT Q−( f ⋆+ f −) −
T Q−f + = 0
SQ−( f ⋆+ f −) −αSQ−f + = 0
(6.21)
Using the commutativity of the Q−, Q+, S, T operators, then adding the upper and
lower pairs of equations leads to:
 Q+{(αS + T )( f ⋆+ f −) −(S + βT ) f +} = 0
Q−{(S + βT )( f ⋆+ f −) −(αS + T ) f +} = 0
(6.22)

6.4 Boundary Conditions
95
Introducing for notational convenience the space-time rescaling operator R(ν, ξ)
which has the properties:
⎧
⎨
⎩
R(ν, ξ)
= νS + ξT
R(ν, ξ)R(ν′, ξ′)
= R(νν′, ξξ′)
R(ν, ξ) + R(ν′, ξ′) = R(ν + ν′, ξ + ξ′)
(6.23)
and rewriting Q+ and Q−from their original deﬁnitions in terms of the reﬂection
operator Q (see Sect.3.2.1) then gives:
 1
2(I + Q){R(α, 1)( f ⋆+ f −) −R(1, β) f +} = 0
1
2(I −Q){R(1, β)( f ⋆+ f −) −R(α, 1) f +} = 0
(6.24)
Adding the two equations, utilising the commutativity of the Q and R operators
(because R is composed of S and T , and Q is composed of Q+ and Q−; all of which
are commutative) and the addition property of the R operator in Eq.6.23, gives:
1
2 R(α + 1, 1 + β)( f ⋆+ f −−f +) + 1
2 R(α −1, 1 −β)Q( f ⋆+ f −+ f +) = 0
(6.25)
Multiplying by the inverse of R(α + 1, 1 + β):
1
2
	
I + R
	
α−1
α+1, 1−β
1+β

Q

f ⋆+ 1
2
	
I + R
	
α−1
α+1, 1−β
1+β

Q

f −
−1
2
	
I −R
	
α−1
α+1, 1−β
1+β

Q

f + = 0
(6.26)
Equation6.26 plays the role of the Clifford-valued boundary condition for the case of
partial transmission and reﬂection in the same way that the simpler Eqs.6.6 and 6.13
play that role for the two cases of perfect reﬂection and transmission. Under the
appropriate conditions, both Eqs.6.6 and 6.13 are recovered from Eq.6.26.
For perfect transmission the material properties are the same on both sides of
the interface (α = β = 1). In this case α/β = η+/η−= 1 so that the coefﬁcient
of transmission τ (see Sect.6.1) takes the value 1, and the coefﬁcient of reﬂection
 takes the value zero. No ﬁeld is reﬂected ( f −= 0). The space-time rescaling
operator takes the value Rαβ = R
 α−1
α+1, 1−β
1+β

= 0. Substituting into Eq.6.26 and
then applying the operator Q+ and doubling retrieves Eq.6.13.
For perfect reﬂection from a good conductor no magnetic ﬂux can penetrate
(μ+ = 0) and the effective permittivity ε+ = ϵ+ −iσ+/ω is dominated by the
high value of electrical conductivity σ+ →∞. In this case α = 1/β = 0 and
α/β = η+/η−= 0 so that the coefﬁcient of reﬂection  = −1, and the coefﬁcient
of transmission τ = 0. No ﬁeld is transmitted ( f + = 0) and the negative sign on 
indicates that the reﬂected wave is inverted. The space-time rescaling operator takes
the value Rαβ = −1. Substituting into Eq.6.26 retrieves Eq.6.6 directly.

96
6
Scattering
The expression:
g = −1
2
	
I + R
	
α−1
α+1, 1−β
1+β

Q

f ⋆
(6.27)
can be calculated directly from the incident ﬁeld and taken as data for any particular
problem. The boundary condition in Clifford form, Eq.6.26, is then written more
compactly as:
1
2
	
I + R
	
α−1
α+1, 1−β
1+β

Q

f −−1
2
	
I −R
	
α−1
α+1, 1−β
1+β

Q

f + = g
(6.28)
The equation can be read to state “a linear combination of certain components of
the reﬂected and transmitted ﬁelds on the left matches certain components of the
incident ﬁeld on the right”.
6.5 Exercises
Q1. Show that the reﬂection coefﬁcient  can be calculated directly from the contrast
factors α, β in the form  = α−β
α+β .
Q2. Show that the transmission coefﬁcient τ can be calculated directly from the
contrast factors α, β in the form  =
2α
α+β .
Q3. Develop the Clifford-valued boundary condition for the case of perfect trans-
mission using the last two equations from the middle section of Table6.3.
Q4. By returning to the original deﬁnitions of the projection operators Q−, Q+ and
S, T , show that the ﬁrst pair commutes with the second pair.
Q5. Verify the behaviour of the operator R(ν, ξ) = νS + ξT under addition and
multiplication as listed in Eq.6.23.
Q6. By returning to the original deﬁnitions of the operators Q and R appearing in
Eq.6.24, show that the ﬁrst commutes with the second.
Q7. Show that by substituting the conditions f −= 0 and α = β = 1 in the boundary
condition 6.26 retrieves the boundary condition 6.13 for the case of perfect
transmission.
Q8. Show that by substituting the conditions f + = 0, α = 0 and β = ∞in the
boundary condition 6.26 retrieves the boundary condition 6.6 for the case of
perfect reﬂection.
Q9. Verify that α/β = η+/η−= c−/c+ where c± is the speed of propagation of
electromagnetic waves in the two regions ±.

Chapter 7
Cauchy Integrals
The Cauchy integral for bounded regions in multiple dimensions is created by com-
bining the boundary theorem with the fundamental solution for a point source in an
unbounded region. In the case of electromagnetism, the Cauchy integral gives the
solution to Maxwell’s homogeneous equation:
Dk f = 0
(7.1)
for the k-monogenic function f = Fk in single bounded regions where there are
no sources. For cases where there are two or more regions with different material
properties, other integral operators known as Hardy projections (cf. [38]) are used
instead. The Hardy projections are related to and deﬁned from the Cauchy integral
(see Chap.8).
7.1 Boundary Theorem
The boundary theorem is a statement of the fundamental theorem of integral calculus,
to the effect that the integral of a function f over a boundary is related to the integral
of the derivative Df of the function throughout the region enclosed [2, 30]. For
two Clifford-valued functions f and g deﬁned at points s on the boundary  with
outward unit normal vector n, and throughout the region + enclosed (see Fig.7.1),
the boundary theorem takes the form:


g(s)n(s) f (s) dσ(s) =

+[(gD)(s) f (s) + g(s)(Df )(s)] ds
(7.2)
Here ds represents the elemental measure of m-dimensional space within region +,
and dσ(s) represents the elemental measure of the (m −1)-dimensional boundary .
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_7
97

98
7
Cauchy Integrals
r
s∈Ω+
s∈Σ
Ω+
Ω−
Σ
n
Fig. 7.1 Region + enclosed by boundary  with normal n. The boundary serves as an interface
between the interior + and the exterior −. Point r takes any position whereas point s takes
positions only within and on the boundary
In two dimensions ds and dσ(s) play the role of area and distance respectively. In
three dimensions they play the role of volume and area instead. The normal vector
n is included in the integrand explicitly so that the elemental measure of boundary
dσ plays the role of a scalar.
The integrand in brackets on the right hand side takes the form of the Dirac
derivative of the product of the two functions, D0(g f ), expanded by the product rule
in Sect.5.4. Either function f or g can be set to unity to recover simpler forms with
one function only, and differentiation by D or multiplication by n from left or right.
7.2 Fundamental Solutions
Solutions for point sources in unbounded regions are called fundamental solutions.
For any differential operator D the fundamental solution f (r) satisﬁes the equation:
Df (r) = δ(r −0)
(7.3)
where δ is the Dirac delta function. From the behaviour of the Dirac delta function
the fundamental solution inherits the properties:
⎧
⎨
⎩
Df (r ̸= 0) = 0


Df (r) dr = 1
(7.4)
where dr is the elemental measure of space within a region  covering the origin.
Together, these properties are useful in collapsing integrals over regions down to
values at single points, as in Sect.7.3.1.
For the electromagnetic application here, the differential operators D of most
interest are the k-Dirac operator Dk =
+ ke0 and the Helmholtz operator Hk =
∇2 + k2. The relationship between these two operators D2
k = −Hk (see Sect.5.3)
also entails a relationship between the fundamental solutions of each. In particular, if

7.2 Fundamental Solutions
99
the fundamental solution of the k-Dirac operator is Fk and the fundamental solution
of the Helmholtz operator is Bk then starting with the former:
Dk Fk(r) = δ(r −0) = Hk Bk(r) = (−D2
k)Bk(r) = Dk(−Dk Bk)(r)
(7.5)
gives an expression from which it can be derived by the direct differentiation of the
latter:
Fk = −Dk Bk
(7.6)
The fundamental solution Bk of the Helmholtz operator is called the Bessel potential,
and can be written [34] for dimensions m > 1:
Bk(r) =
⎧
⎪⎪⎪⎨
⎪⎪⎪⎩

−1
2πr
∂
∂r
 m−1
2  1
2ik eikr

m odd

−1
2πr
∂
∂r
 m−2
2 
−i
4 H (1)
0 (kr)

m even
(7.7)
where H (1)
0 (kr) is the Hankel function of the ﬁrst kind of order zero, and r = |r|.
A complementary fundamental solution of the k-Dirac operator can be obtained
from the Bessel potential with negative wavenumber k:
Fk = −Dk B−k
(7.8)
since Hk = H−k. The two different solutions, Eqs.7.6 and 7.8, correspond in the
time domain to point sources for which the waves travel in opposite directions;
either away from or towards the source. The direction of travel can be determined
by reconstructing the full space-time electromagnetic ﬁeld F(r, t) from the phasor
Fk(r) and the complex signal eiωt as in Eq.5.19.
7.2.1 Three Dimensions
In three dimensions the fundamental solution of the Helmholtz operator is given
from Eq.7.7 with m = 3:
B±k(r) = −1
2πr
∂
∂r

± 1
2ik e±ikr

= −1
4πr e±ikr
(7.9)
When the complex signal eiωt is reintroduced for the complementary form of the
solution:
B−k(r)eiωt = −1
4πr ei(ωt−kr)
(7.10)

100
7
Cauchy Integrals
the phase of the corresponding travelling wave is:
φ = ωt −kr
(7.11)
A point of constant phase, for example a crest of the wave, travels at velocity dr/dt =
ω/k > 0 away from the source at r = 0. In contrast, the wave corresponding to
the fundamental solution B+k(r) has phase φ = ωt + kr and travels at velocity
dr/dt = −ω/k < 0, towards the source.
The fundamental solution for the k-Dirac operator for a waveform travelling away
from the source is given by differentiating Eq.7.9 according to Eq.7.8. Firstly using
both chain and product rules for differentiation until no longer possible:
Fk(r) = −(
+ ke0)(−1
4πr e−ikr) =
	
−1
r2 ( r)e−ikr + 1
r (−ik)e−ikr
r
+ ke0 1
r e−ikr
 1
4π
(7.12)
and then expanding
r = r/|r| = r/r = ˆr produces:
Fk(r) = ar + be0 =
	
−(1 + ikr)ˆr + kre0

 e−ikr
4πr2 = −
	
ˆr + ikr(ˆr + ie0)

 e−ikr
4πr2
(7.13)
7.3 Off the Boundary
7.3.1 Reproducing Formula
A k-monogenic function f (such as the electromagnetic ﬁeld Fk) at a point r
within a region + enclosed by a boundary  can be calculated from the boundary
theorem 7.2 provided that the value of the function is known at all points on the
boundary and the function g is chosen in a particular way. Firstly, putting:
Df =
f = D0 f = (Dk −ke0) f = −ke0 f
(7.14)
into the boundary theorem, gives:


g(s)n(s) f (s) dσ(s) =

+[(g
)(s) f (s) + g(s)(
f )(s)] ds
=

+(g(
−ke0))(s) f (s) ds
(7.15)
The function g(s) is chosen as:
g(s) = Ek(s −r)
(7.16)

7.3 Off the Boundary
101
where r is a ﬁxed point inside +, and Ek is deﬁned such that its behaves like a
fundamental solution under differentiation from the right by the operator
−ke0:
(Ek(
−ke0))(s) = δ(s −0)
(7.17)
In that case (g(
−ke0))(s) = δ(s −r) and the integral over + then collapses,
leaving:


Ek(s −r)n(s) f (s) dσ(s) = f (r)
; r ∈+
(7.18)
as the value of the function f at the ﬁxed point r.
Equation7.18 is called the reproducing formula [2], because it reproduces the
k-monogenic function f within + if its value is known on the boundary . As
the point r approaches the boundary the value of f approaches the value on the
boundary. The function Ek is called the Cauchy kernel. It can be obtained by noting
that it is related through the delta function to the fundamental solution Fk:
Ek(
−ke0) = δ = (
+ ke0)Fk
(7.19)
The latter is already known as Fk = ar + be0 with values of a, b as in Eq.7.13.
Expanding the right hand side of Eq.7.19 and invoking the anticommutative property
of Clifford units, gives:
(
+ ke0)(ar + be0) =
ar +
be0 + ke0ar + ke0be0
= ar
−be0
−arke0 + be0ke0 = (ar −be0)(
−ke0)
(7.20)
Replacing a, b with their values from Eq.7.13 now gives the Cauchy kernel:
Ek(r) = −
	
ˆr + ikr
	
ˆr −ie0


 e−ikr
4πr2 = −Fk(−r)
(7.21)
In cases where the function f is not k-monogenic or the point r is not within the
region +, the integral over + gives different values.
If the function f remains k-monogenic but the point r is placed in the region −
outside the boundary, the delta function δ(s −r) takes the value zero for all s ∈+,
and the integral over + collapses to zero:


Ek(s −r)n(s) f (s) dσ(s) = 0
; r ∈−
(7.22)
Alternatively, if the point r is placed exactly on a smooth part of the boundary (where
the tangent plane is unambiguous) the delta function behaves as if half inside +
and half inside −. In this case the integral collapses to one-half of the value within
+ immediately adjacent to the boundary:

102
7
Cauchy Integrals


Ek(s −r)n(s) f (s) dσ(s) = 1
2 f (r);
r ∈
(7.23)
If the function f is not k-monogenic (i.e. not consistent with an electromagnetic
ﬁeld) the values of f produced by the integral over + are k-monogenic but do
not approach the (non-monogenic) values on the boundary as r approaches . This
behaviour is useful when the function f on the boundary is a ﬁeld which has been
measured experimentally, and may be contaminated with some amount of largely
random error. Any error which is inconsistent with an electromagnetic ﬁeld is effec-
tively ﬁltered out and rejected by the reproducing formula. For example, if the near
ﬁeld radiation pattern of an antenna is measured and the ﬁnite precision of the mea-
surements introduces error, the operation of calculating either the closely adjacent
near ﬁeld or the far ﬁeld radiation pattern using Eq.7.18, as in Sect.7.5, serves to
attenuate the error.
7.3.2 Cauchy Extension
Figure7.2 shows electromagnetic ﬁelds generated by two point sources, δ+ within
−and δ−within +.
The reproducing formula regenerates the monogenic ﬁeld f + within the region
+, extending away from the source δ+, from the trace of the ﬁeld on the boundary.
However, the reproducing formula returns a value of zero in the region −where
the ﬁeld extending back towards the source is non-monogenic:


Ek(s −r)n+(s) f +(s) dσ(s) =
⎧
⎨
⎩
f +(r)
; r ∈+
1
2 f +(r)
; r ∈
0
; r ∈−
(7.24)
Similarly, with a reversed value of the normal n−= −n+, the reproducing formula
regenerates the monogenic ﬁeld f −within the region −, extending away from the
source δ−, from its trace on the boundary:
Fig. 7.2 Fields generated by
reproducing formula from
boundary traces of ﬁelds due
to internal and external
sources δ−and δ+
respectively
n+
n−
δ−
f +
Ω+
f −
Ω−
δ+

7.3 Off the Boundary
103
Fig. 7.3 Fields generated by
Cauchy extension from
function f on boundary
f
Ω+
Ω−
f + = Cf
+f −= −Cf
−f −= +Cf


Ek(s −r)n−(s) f −(s) dσ(s) =
⎧
⎨
⎩
0
; r ∈+
1
2 f −(r)
; r ∈
f −(r)
; r ∈−
(7.25)
A single formulation is created by subtracting Eq.7.25 from Eq.7.24:
(C f )(r) =


Ek(s −r)n(s) f (s) dσ(s) =
⎧
⎨
⎩
f +(r)
; r ∈+
1
2[ f +(r) −f −(r)]
; r ∈
−f −(r)
; r ∈−
(7.26)
where n = n+ = −n−and f = f + + f −. The operator C is called the Cauchy
extension [2], and the function f on the interface where the two regions share the
common boundary , is called the joint interface function.
The Cauchy extension, extends the interface function f deﬁned on the common
boundary into the regions on both sides (see Fig.7.3). Taking the direction of the
normal n = n+ to deﬁne + as the inside, the Cauchy extension extends the function
f inward as f +, and outward as minus f −.
The extensions do not approach the value f on the boundary as the point r
approaches . The ﬁelds f + and f −are usually discontinuous across the boundary,
both in value and derivative. It is possible to have continuity if neither + or −
extends to inﬁnity but is otherwise impossible unless both f + and f −are identically
zero.
7.4 On the Boundary
7.4.1 Cauchy Integral
For the special case of points r ∈ on the boundary, the Cauchy extension is used
to construct an additional integral operator:
(C f )(r) = 2 p.v.


Ek(s −r)n(s) f (s) dσ(s) = f +(r) −f −(r);
r ∈
(7.27)

104
7
Cauchy Integrals
where “p.v.” indicates that the Cauchy principal value of the integral is taken to
properly account for the singularity in the Cauchy kernel Ek at s = r. The operator
C is called the principal value Cauchy integral [2, 38].
For sources δ+ and δ−the principal value Cauchy integral operator C gives:
C( f + + f −) = f + −f −
(7.28)
For sources δ+ and −δ−the second ﬁeld is inverted so that:
C( f + −f −) = f + + f −
(7.29)
Together Eqs.7.28 and 7.29 show that applying the Cauchy integral twice to the
function at a point on the boundary returns the original value:
C2
 = I
(7.30)
As a consequence, this particular form of the Cauchy integral has the important
property of behaving like a reﬂection operator (see Sect.3.1). Although similar,
lacking the extra factor of two the Cauchy extension when evaluated on the boundary
is not a reﬂection operator.
The reﬂection property of the principal value Cauchy integral operator is exploited
to deﬁne the Hardy projection operators from the Cauchy integral in Chap.8, using
the same method as in Sect.3.1.
7.5 Example Application
The integral operators described in this chapter and in Chap.8 can be used in different
ways to solve different kinds of electromagnetic problems. The simplest problem of
practical interest involves the migration of a ﬁeld measured on one surface enclosing
a source, to another surface enclosing the ﬁrst. This situation is encountered when the
radiation pattern is measured for convenience at a particular distance from an antenna
and the objective is to calculate from that, the pattern which would be measured
on another surface some distance further away from the antenna. In this case the
reproducing formula is applied directly by numerical evaluation of the integral in
Eq.7.18. As long as the point r at which the ﬁeld is evaluated is not too close to the
surface, it is not necessary to adopt a particularly sophisticated numerical method.
7.5.1 Test Case
Figure7.4 shows a dipole source δ+ located at the centre of a cube with sides aligned
to a Cartesian coordinate system x, y, z. The source generates sinusoidal electric

7.5 Example Application
105
Fig. 7.4 Dipole source δ+
enclosed by cubic surface.
The surface is subdivided
into elements  j
y
z
θ
r
f =f +
Ω+
n
δ+
Σ
Σj
and magnetic ﬁelds written in vector notation E, H in spherical coordinates r, θ, φ
as [29]:

E(r, θ) =
Ih
4πr2 η

2
	
1 +
1
ikr

e−ikr(cos θ) ˆr +
	
1 + ikr +
1
ikr

e−ikr(sin θ) ˆθ

H(r, θ) =
Ih
4πr2 (1 −ikr)e−ikr(sin θ) ˆφ
(7.31)
The cube is completely transparent with material properties of electric permittivity,
permeability and conductivity the same on the inside and the outside. The ﬁeld
transmitted outside the cube is a completely continuous extension of the ﬁeld from
the dipole incident on the inner surface of the cube. There is no reﬂected ﬁeld.
The surface of the cube is identiﬁed by a boundary  with outward normal n. Note
that the outward normal to the boundary is directed towards the interior of the cube
as shown in Fig.7.4 so that the reproducing formula gives the value f = f + ̸= 0
at the point r in the region + some distance further from the source than is the
boundary .
This test case has been used as a standard by Chantaveerod [39, 40], with com-
parison to measured data [41–43].
7.5.2 Numerical Method
The ﬁeld f (r) can be calculated using the reproducing formula by subdividing the
surface into individual elements  j and summing the ﬁelds f j(r) from each element:
⎧
⎪⎪⎨
⎪⎪⎩
f j(r) =

 j
Ek(s −r)n(s) f (s) dσ(s)
f (r) =

j
f j(r)
(7.32)
If the ﬁeld is evaluated at points r sufﬁciently far from each element compared to
their size, and if in addition each element is made sufﬁciently small compared to
the wavelength λ of the ﬁeld, then the value of the Cauchy kernel and the ﬁeld each

106
7
Cauchy Integrals
take approximately uniform values Ek(s j −r) and f (s j) respectively over the whole
element, for some ﬁxed point s j.
In this case the whole integrand takes a constant value, and the ﬁeld produced by
a single element can be written:
f j(r) ≈Ek(s j −r)n(s j) f (s j)A j
(7.33)
where A j is the area of the element. The total ﬁeld is then calculated using the sum
in Eq.7.32.
The approximation is only good when the assumptions are honoured.
7.5.3 Accuracy of Results
Figure7.5 shows the RMS (root mean square) value

μ|H|2 + ϵ|E|2 of the ﬁeld
calculated for a dipole standing in free space (η = η0 = √μ0/ϵ0 ohms) with strength
Ih = 1 Ampère-metres and wavenumber k = 2π/λ = 1 per metre. The ﬁgure also
shows the error when taking values of f (s j) given by Eq.7.31 at the centre of each
of N = 6S2 elements on the surface of a cube one metre along each edge, and
calculating the total ﬁeld by the summation in Eq.7.32. The ﬁeld is calculated with
sampling S between 10 and 500 elements per edge (i.e. for N between 600 and
1,500,000 in total), and at points along the x-axis from 1 metre to 1000 metres away
from the centre of the cube.
Both absolute ﬁeld strength and error decrease in inverse proportion to distance.
From r = 10 to 100m both reduce by a factor of 10. As a consequence the relative
 1e-08
 1e-07
 1e-06
 1e-05
 1e-04
 0.001
 0.01
 0.1
 1
 10
 100
 1
 10
 100
 1000
value of field - RMS
distance from centre of cube - metres
S=10
S=20
S=50
S=100
S=200
S=500
dipole
error
Fig. 7.5 Error in approximate ﬁeld calculation of Cauchy extension

7.5 Example Application
107
error remains the same. However, relative error does decrease as the number of
elements increases, in inverse proportion. For example, from N = 6S2 = 600 to
60,000 elements the error decreases by a factor of 100.
If higher accuracy is required a more sophisticated numerical method than
described here should be used.
7.5.4 Practical Issues
The choice of programming language for generating the results shown in Sect.7.5.3
was C language. The Reduce algorithms described in Sect.2.4.3 and in appendix A
are slow, because they are executed by an interpreter rather than being compiled and
executed in machine code. Furthermore, the Reduce algorithms are overly general –
they operate for both symbolic and numeric entities and for combinations of Clifford
numbers of full generality in any number of dimensions. That is appropriate for
demonstrating and verifying algebraic results, but not for numerical calculations.
For calculations in electromagnetism all that is required are numerical operations
in four dimensions. Furthermore, the full generality of Clifford multiplication is not
required. For the integrand of the integrals in Sects.7.3 and 7.4, it is only necessary
to calculate the product of two bivectors and one vector. Many of the components
in these three terms are zero a priori, and it is wasteful to carry those parts of the
overall Clifford multiplication.
It is much more efﬁcient to construct special purpose four-dimensional hard-wired
code which deals only with the multiplication of the non-zero components in these
very particular three terms. No recursion need be used. Such code can be modelled
on a straightforward one line multiplication of complex numbers to give each of the
two components of that product explicitly in terms of all other components. The
behaviour of the code could be expressed loosely in words as “multiply all of these
components with all of those components and add them up with the correct sign and
put the result in that component”. Components that are known to be non-zero are not
used in the multiplications. However, results that are known to be zero (there is one
such grade 0 and grade 4 value) may be calculated as partial checks on the internal
consistency of the algorithm.
7.6 Exercises
Q1. Check that Df = 0 for D = Hk and f = B−k in two dimensions.
Q2. Check that

Df dx = 1 for D = Hk and f = B−k in two dimensions.
Q3. Check that Df = 0 for D = Hk and f = B−k in three dimensions.
Q4. Check that Df = 0 for D = Dk and f = Fk in three dimensions.

108
7
Cauchy Integrals
Q5. By introducing Hk B−k = Hk Bk into Eq.7.5 show that the fundamental solu-
tion of the k-Dirac operator can be calculated using the Bessel potential with
negative wavenumber.
Q6. Show
r = r/r by putting r =

r2x + r2y + r2z and expanding in Cartesian
coordinates.
Q7. Verify that
r = r
by putting r = rxe1 + rye2 + rze3 and expanding in
Cartesian coordinates.
Q8. Implement the numerical method described in Sect.7.5.2 for the test case
described in Sect.7.5.1 and reproduce the results shown in Fig.7.5.
Q9. Modify your implementation in question 8 to add random errors to the ﬁeld on
the surface of the cube. Investigate how well the reproducing formula elimi-
nates the error when calculating the ﬁeld away from the cube.
Q10. Develop a numerical method for the test case described in Sect.7.5.1 to repro-
duce the ﬁeld accurately in the region from zero to one metre from the surface
of the cube.

Chapter 8
Hardy Projections
Two projection operators called Hardy projections are constructed from the principal
value Cauchy integral C (cf. [2, 38]):

P+ = 1
2(I + C)
P−= 1
2(I −C)
(8.1)
The Hardy projections are the values approached by the Cauchy extension for a point
which approaches the boundary from either side. They serve the purpose of splitting
the joint interface function f = f + + f −into transmitted and reﬂected components,
f + and f −respectively:

P+ f = 1
2(( f + + f −) + ( f + −f −)) = f +
P−f = 1
2(( f + + f −) −( f + −f −)) = f −
(8.2)
which, as shown in Fig.8.1, are consistent with the traces on the boundary of elec-
tromagnetic ﬁelds in the two regions on either side.
The Hardy projections in Eq.8.2 serve to enforce Maxwell’s equations, which are
buried inside many layers deep; beneath the Cauchy integral (Sect.7.4.1) then the
Cauchy extension (Sect.7.3.2) then the reproducing formula (Sect.7.3.1) and then
the boundary theorem (Sect.7.1) as invoked with the electromagnetic ﬁeld and k-
Dirac operator (both from Maxwell’s equations in Sect.5.3) and the Cauchy kernel
(Sect.7.3.1, from the fundamental solution of the k-Dirac operator in three dimen-
sions in Sect.7.2.1).
Although there are two Hardy projections in Eq.8.2, they are not independent
because P+ + P−= I and either can be derived from the other. Which is of more
immediate use depends on the nature of the scattering and the boundary conditions
(as in Sect.6.4) which result. The cases of perfect reﬂection and perfect transmission
are straightforward because the material properties are the same everywhere the
ﬁeld is non-zero. In the case of partial transmission and reﬂection non-zero ﬁelds
occupy two regions with different values of material properties μ, ϵ. The wavenumber
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_8
109

110
8
Hardy Projections
Fig. 8.1 Fields generated by
Hardy projection from
function f on boundary
f
Ω+
Ω−
f + = P +f
f −= P −f
CΣf
k = 2π/λ = ω/c = ω√μϵ then takes different values on either side of the interface
where the two regions share a common boundary. It is necessary to construct Hardy
projections for each side of the interface from two different Cauchy integrals, one
for each of the different materials.
8.1 Perfect Reﬂection
In the case of perfect reﬂection there is no ﬁeld transmitted through the interface,
so that f + plays no role in the solution. Recalling for any projection operator that
P2 = P (see Sect.3.1) and applying the second Hardy projection to the reﬂected
component of the ﬁeld in Eq.8.2 leads to:
P−f −= f −
(8.3)
with f + eliminated. Equation8.3 is the form in which Maxwell’s equations are
honoured for perfect reﬂection. The solution based on this form is described in
Sect.9.1. It seeks to ﬁnd the reﬂected ﬁeld f −.
8.2 Perfect Transmission
In the case of perfect transmission there is no ﬁeld reﬂected from the interface, so
that f −plays no role in the solution. Applying the ﬁrst Hardy projection to the
transmitted component of the ﬁeld in Eq.8.2 leads to:
P+ f + = f +
(8.4)
with f −eliminated. Equation8.4 is the form in which Maxwell’s equations are
honoured for perfect transmission. The solution based on this form is described in
Sect.9.2. It seeks to ﬁnd the transmitted ﬁeld f +.

8.3 Partial Transmission and Reﬂection
111
8.3 Partial Transmission and Reﬂection
In the case of partial transmission and reﬂection, ﬁelds are both transmitted and
reﬂected so that f + and f −are both non-zero. With two regions having different
values of material properties, twice as many reﬂection and projection operators are
involved.
Firstly Cauchy extensions C+ and C−for are required for regions + and −
respectively. These are the same as in Sect.7.3.2 excepting that the value of k = k+ =
ω√μ+ϵ+ or k = k−= ω√μ−ϵ−is different for each. Although these extensions do
give values of functions on both sides of the interface, only the ones in Fig.8.2 on
the side with the same label, plus or minus, play a direct role in the solution.
From the two Cauchy extensions, two corresponding Cauchy integrals C+
 and
C−
 are constructed, as in Sect.7.4.1, and then four Hardy projections as in Eq.8.1:

P++ = 1
2(I + C+
)
P+−= 1
2(I −C+
)
and

P−+ = 1
2(I + C−
)
P−−= 1
2(I −C−
)
(8.5)
Two of these play an essential role: P++ as the boundary limit of C+ from within
region + with material properties μ+, ϵ+ and wavenumber k+, and P−−as the
boundary limit of C−from within region −with material properties μ−, ϵ−and
wavenumber k−. The other two projections P±∓are not essential for the solution.
For this case of partial transmission and reﬂection the equations which serve as
the forms which honour Maxwell’s equations are the new, region speciﬁc Hardy
projections taken directly as in Eq.8.2 without further simpliﬁcation:

P++ f = f +
P−−f = f −
(8.6)
Here the two projections are different than before, and the unknown joint interface
function f which splits into the transmitted and reﬂected ﬁelds under the operation
of the projections is no longer simply the sum of the two ﬁelds, f ̸= f + + f −. This
is because these two particular Hardy projections are not a complementary pair.
Rather than solving for the joint interface function f as a ﬁrst step and then cal-
culating the transmitted and reﬂected ﬁelds f ± from that using Eq.8.6, the approach
Fig. 8.2 Cauchy extensions
and Hardy projections for
partial transmission and
reﬂection
f =f ++f −
Ω+
Ω−
f + = C+f
f −= −C−f
f + = P ++f
f −= P −−f
µ+
+, k+
µ−
−, k−

112
8
Hardy Projections
described in Sect.9.3 seeks to ﬁnd the two ﬁelds f ± directly and simultaneously.
Once these are determined on the interface, the ﬁelds away from the interface can
be recovered from them by application of the two Cauchy extensions C±, and the
solution is effectively complete.
From the ﬁelds f ± it is also possible to calculate the joint interface function f ,
although that takes about as much work as does ﬁnding f ± in the ﬁrst instance, with
no real beneﬁt. Whereas f serves a mathematical role in the solution it corresponds
to no physical ﬁeld. See Sect.9.3.4 for details.
8.4 Exercises
Q1. Verify equation8.3 by applying the Hardy projection P−to the reﬂected ﬁeld
f −in Eq.8.2.
Q2. Verify equation8.4 by applying the Hardy projection P+ to the transmitted ﬁeld
f + in Eq.8.2.
Q3. Show that the two Hardy projections P++ and P−−are not complementary.

Chapter 9
Construction of Solutions
9.1 Perfect Reﬂection
The solution for the case of perfect reﬂection is governed by the boundary conditions
in Eq.6.9 and the Hardy projection of Eq.8.3:
 Q−f = g
P−f = f
(9.1)
where f = f −is the reﬂected ﬁeld.
Figure9.1 shows the solution f as the sum of two components P−g and P−Q+ f
along the OP′ axis in Banach space (see Sect.3.4.2). The two components are
obtained by splitting f ﬁrst into Q+ f and Q−f = g, and then projecting both of
these onto the OP′ axis:
f = P−g + P−Q+ f
(9.2)
The solution:
f = (I −P−Q+)−1P−g
(9.3)
is expanded as an inﬁnite binomial series:
ν = (1 −ξ)−1 =
∞

j=0
ξ j
(9.4)
where ξ = P−Q+ and 1 stands for the identity operation. The resulting expression:
f =
⎡
⎣
∞

j=0
(P−Q+) j
⎤
⎦P−g
(9.5)
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_9
113

114
9
Construction of Solutions
Fig. 9.1 Solution f = f −
as sum of two components
along OP′ axis
O
P
Q
P
Q
f
g
P −
P −g
Q−f
Q+f
P −Q+f
x1
Fig. 9.2 Solution f = f −
as sum of geometric series
P1
P1
x1
x2
x0, O
P
Q
P
Q
x
f
g
P2
is the same as the geometric solution, Eq.3.34, with x = f , x0 = 0, x1 = P−g and
ν = ∞
j=0(P−Q+) j, and with projections P1x = Q+x + g and P2x = P−x for any
x. In terms of the geometric solution, Fig.9.1 is relabelled as in Fig.9.2.
An equivalent solution is obtained by casting the series ∞
j=0(P−Q+) j into the
form:
ν = [1 + ξ + ξ2 + ξ3 + · · · ] = [1 · · · + ξ(1 + ξ(1 + ξ))]
(9.6)
Horner’s nested expansion [44–46] on the right hand side of Eq.9.6 involves fewer
operations and is more numerically stable than the series on the left [47]. This
approach has been successfully implemented for electromagnetic scattering by
Chantaveerod [40, 48].
Another approach is to use the method of alternating projections onto convex
sets [49]:
f =
∞
	
j=0
(P2P1) jx0
(9.7)
Here the staring point x0 = 0 is chosen, although other starting points can also be
used. There are two convex sets, in this case two straight lines. The space is Banach
and there is no scalar product, no angles, and the projections onto the sets/lines

9.1 Perfect Reﬂection
115
cannot therefore be orthogonal to them. The points on the lines themselves are
multi-dimensional; their dimension being the number of independent variables taken
to represent the electromagnetic ﬁeld over the surface of the scatterer.
9.2 Perfect Transmission
The solution for the case of perfect transmission is governed by the boundary con-
ditions in Eq.6.16, and the Hardy projection of Eq.8.4:
 Q+ f = h
P+ f = f
(9.8)
where f = f + is the transmitted ﬁeld.
Figure9.3 shows the solution f as the sum of two components P+h and P+Q−f
alongtheOP axisinBanachspace(seeSect.3.4.2).Thetwocomponentsareobtained
by splitting f ﬁrst into Q−f and Q+ f = h, and then projecting both of these onto
the OP axis:
f = P+h + P+Q−f
(9.9)
The solution:
f = (I −P+Q−)−1P+h
(9.10)
is expanded as an inﬁnite binomial series (see Eq.9.4). The resulting expression:
f =
⎡
⎣
∞

j=0
(P+Q−) j
⎤
⎦P+h
(9.11)
is the same as the geometric solution, Eq.3.34, with x = f , x0 = 0, x1 = P+h and
ν = ∞
j=0(P+Q−) j, and with projections P1x = Q−x + h and P2x = P+x for any
x. In terms of the geometric solution, Fig.9.3 is relabelled as in Fig.9.4.
Fig. 9.3 Solution f = f +
as sum of two components
along OP axis
x1
O
P
Q
P
Q
f
h
P +
P +h
Q+f
Q−f
P +Q−f

116
9
Construction of Solutions
Fig. 9.4 Solution f = f +
as sum of geometric series
P1
P1
x1
x2
O, x0
P
Q
P
Q
x
f
h
P2
An equivalent solution is obtained by casting the series ∞
j=0(P+Q−) j into the
form:
ν = [1 + ξ + ξ2 + ξ3 + · · · ] = [1 · · · + ξ(1 + ξ(1 + ξ))]
(9.12)
withξ = P+Q−.Horner’snestedexpansion[44,46]ontherighthandsideofEq.9.12
involves fewer operations and is more numerically stable than the series on the left
[47].
As with the perfect conductor, the method of alternating projections onto convex
sets [49] can also be used:
f =
∞
	
j=0
(P2P1) jx0
(9.13)
Here the staring point x0 = 0 is chosen, although other starting points can also be
used. There are two convex sets, in this case two straight lines. The space is Banach
and there is no scalar product, no angles, and the projections onto the sets/lines
cannot therefore be orthogonal to them. The points on the lines themselves are multi-
dimensional; their dimension being the number of independent variables taken to
represent the electromagnetic ﬁeld over the surface of the scatterer.
9.3 Partial Transmission and Reﬂection
The solution for the case of partial transmission and reﬂection is governed by the
boundary conditions in Eq.6.28 and by the Hardy projections in Eq.8.6:
⎧
⎨
⎩
1
2(I + Rαβ Q) f −−
1
2(I −Rαβ Q) f + = g
P++ f
=
f +
P−−f
=
f −
(9.14)

9.3 Partial Transmission and Reﬂection
117
where f is the joint interface function, f + is the transmitted ﬁeld, f −is the reﬂected
ﬁeld, and Rαβ = R
α−1
α+1, 1−β
1+β

is the space-time rescaling operator.
The two Hardy projections P±± are not complimentary so that the two axes they
deﬁne do not serve as a Cartesian coordinate system. The terms in parentheses on the
ﬁrst line of Eq.9.14 are not projection operators because Rαβ ̸= ±I for most values
of the contrast factors α and β. The space-time rescaling operator Rαβ is neither a
projection nor reﬂection operator, but is linear, so that:

Rαβ(ξx) = ξRαβ(x)
Rαβ(x + y) = Rαβ(x) + Rαβ(y)
(9.15)
As a notational convenience the product of the space-time rescaling operator Rαβ
with the boundary reﬂection operator Q is simply written RQ.
9.3.1 Construction
The geometric constructions of Sects.9.1 and 9.2 for the special cases of perfect
reﬂection and perfect transmission are generalised according to Eq.9.14 in the form
of Fig.9.5.
The axes OQ and OQ′ serve as a Cartesian coordinate system, whereas the axes
OP⊕and OP⊖do not. The lines I ⊕
RQ and I ⊖
RQ are the images of the axes OP⊖and OP⊕
under the mappings 1
2(I ± RQ). The images are indeed lines because the mappings
are linear, but do not serve as axes because the mappings are not projections.
P ⊕
P
f
f +
f −
Q
Q
IRQ
I⊕
RQ
O
a
b
g
1
2h
Q+
P ++
P −−
1
2(I+RQ)
1
2(I−RQ)
Fig. 9.5 Geometric construction for general solution

118
9
Construction of Solutions
Fig. 9.6 General solution
reduced with  = −1 to case
of perfect reﬂection
a, O, f +
P, P ⊕
Q, IRQ
Q−
P , P
Q , I⊕
RQ
f, f −
g
b
The general solution of Fig.9.5 reduces to the particular solutions of Sects.9.1
and 9.2 as the coefﬁcient of reﬂection −1 ≤ ≤0 approaches −1 and 0.
As  approaches −1, the axes OP⊕and OP⊖migrate onto the coordinate axes
OP and OP′. The transmitted ﬁeld f + retracts towards the origin along the OP⊕
axis taking f towards the OP⊖axis, and merging with it on the OP′ axis. One end
b of the boundary data vector g migrates with the I ⊕
RQ line onto the OQ′ axis, while
the other end a is driven to the origin along the I ⊖
RQ line by the retraction of f + to
the origin. The I ⊖
RQ line migrates onto the OQ axis.
The result in Fig.9.6 is identical to the special case in Fig.9.1 with the exception
that some of the vectors, points and axes are overloaded with a multiplicity of names
and interpretations.
As  approaches 0, the coordinate axes OP⊕and OP⊖again migrate onto the
coordinate axes OP and OP′. The reﬂected ﬁeld f −retracts towards the origin along
the OP⊖axis taking f towards the OP⊕axis, and merging with it on the OP axis.
One end a of the boundary data vector g migrates with the I ⊖
RQ line onto the OP axis,
while the other end b is driven to the origin along the I ⊕
RQ line by the retraction of
f −to the origin. The I ⊕
RQ line migrates onto the OP′ axis.
The result in Fig.9.7 is identical to the special case in Fig.9.3, again with the
exception that some of the vectors, points and axes are overloaded with a multiplicity
of names and interpretations.
The general case of Fig.9.5 covers the continuum of solutions between per-
fect reﬂection, with coefﬁcient of reﬂection  = −1, and perfect transmission, with
reﬂection coefﬁcient  = 0.
9.3.2 Solution
The solution in the general case is based on the method of alternating projections
onto convex sets. In this case it is the two Hardy projections P++ and P−−which

9.3 Partial Transmission and Reﬂection
119
b, O, f −
P, P ⊕,I RQ
Q
Q+
P , P
, I⊕
RQ
Q
2a, f, f +
a
g
h
Fig. 9.7 General solution reduced with  = 0 to case of perfect transmission
a
b
P ⊕
P
x
y
Q
Q
IRQ
I⊕
RQ
O
a
b
1
2(I+RQ)
1
2(I−RQ)
1
2(I+RQ)
1
2(I−RQ)
Fig. 9.8 Complementary images generated by linear mappings
are involved. The boundary data projections Q± are not involved; their place being
taken by the two linear mappings, 1
2(I ± RQ). The mappings are used to create two
complementary images a, a′ for every point x on the P⊕axis, and two complemen-
tary images b, b′ for every point y on the P⊖axis, as shown in Fig.9.8. The original
points can be reconstructed from their images; x = a + a′ and y = b + b′.
The solution is initiated using two arbitrary starting points f +
0 and f −
1 each on
one of the two axes P⊕and P⊖, notionally obtained in Fig.9.9 by projection from
a ﬁrst guess of the joint interface function f , not shown off the top of the ﬁgure.
The two starting points are not on an equal footing. One is taken as an older
estimate from which the other is derived. Each in turn is updated from the other.
Here, f +
0 is taken as the older estimate, and f −
1 is taken as the newer. The other order
can be used if desired.

120
9
Construction of Solutions
1
2
3
4
5
6
7
8
9
10
11
f +
0
f −
1
f +
2
f −
3
P ⊕
P
f +
f −
g
Q
Q
IRQ
I⊕
RQ
O
a
b
Fig. 9.9 General solution as geometric method
The projection to update the old f + from the new f −is:
f +
2n = P++

1
2(I + RQ) f −
2n−1 −g + 1
2(I + RQ) f +
2n−2

(9.16)
and the projection to update the (now) old f −from the new f + is:
f −
2n+1 = P−−

1
2(I −RQ) f +
2n + g + 1
2(I −RQ) f −
2n−1

(9.17)
One cycle of operations, using Eqs.9.16 and 9.17 with n = 1, is illustrated in Fig.9.9
and listed in Table9.1 with reference to the points labelled numerically in the ﬁgure.
The step from 1 to 2 (coming in this case from the initial estimate but normally from
the previous cycle) is used in the opposite sense to make the step from 5 to 6, and
the step from 3 to 4 is used in the opposite sense to make the step from 9 to 10.
9.3.3 Computational Effort
The computational procedure to calculate the transmitted and reﬂected ﬁelds at all
points on the interface is speciﬁed by Eqs.9.16 and 9.17 and listed in Table9.1.
The starting point can be chosen as any vector which gives an estimate of the joint
interface function f . A choice of zero is acceptable.
The computational effort is dominated by the Hardy projections, which require
an integral over the entire interface. If the interface is subdivided into N elements,
and the integral is evaluated as the sum of values calculated for each element, then

9.3 Partial Transmission and Reﬂection
121
Table 9.1 Computational procedure for updating estimate of solution
Update
Steps
Figure9.9
f +
2 :=
1
2(I + RQ) f −
1
3
→
4
−g
4
→
5
+ 1
2(I + RQ) f +
0
5
→
6
P++
6
→
7
f −
3 :=
1
2(I −RQ) f +
2
7
→
8
+g
8
→
9
+ 1
2(I −RQ) f −
1
9
→
10
P−−
10
→
11
The steps are shown graphically in Fig.9.9 with labels as given in the rightmost column
the computational effort is proportional to the number of elements N. If the solu-
tion is required at one point on each element then the total computational effort is
proportional to N × N = N 2. This effort needs to be repeated for every iteration.
Once the solution f ± has been obtained, calculating the ﬁeld at one point away
from the interface is performed using the Cauchy extension. Like the Hardy projec-
tion the Cauchy extension also requires an integral over the entire interface, with
computational effort proportional to N. In order to calculate a complete map of the
ﬁeld at N points on a surface away from the interface requires N 2 operations from
the Cauchy extension. This effort needs to be made only once.
Conventional techniques require some procedure equivalent to matrix inversion
or the solution of a linear system of size N. That entails computational effort propor-
tional to N 3. Accelerated techniques with higher speed but lower numerical stability
can be constructed. In principle the computational effort can be reduced to slightly
less than N 2.5 [50], although the algorithms are not practical [51] due to the very
large (unstated) constant of proportionality. Currently the lower bound on the com-
putational effort for any practical algorithm is about N 2.8 [52].
For some computational techniques, such as the Method of Moments [53–56], it is
necessary before matrix inversion to use a time consuming numerical double integral
to calculate the values of the individual matrix elements. For the iterative technique
here, there is no such need. That results in a faster solution. Furthermore, for the
iterative technique here the amount of memory storage required grows linearly with
the size of the problem N, because there is never any need to store the elements of
the matrix. In comparison, for the Method of Moments the matrix is stored, and the
storage grows N 2 as the square of the size of the problem. For a given computer the
Method of Moments is therefore always limited to solving smaller problems than the
technique described here.

122
9
Construction of Solutions
9.3.4 Joint Interface Function
The joint interface function f can be calculated from the values of the ﬁelds f ±,
as depicted in Fig.9.10. A ﬁrst estimate f1 of the joint interface function is reﬁned
using projections:
 P1(x) = (I −P++)(x) + f + = P−+(x) + f +
P2(x) = (I −P−−)(x) + f −= P+−(x) + f −
(9.18)
to provide successive approximations:
 f2n
= P1( f2n−1)
f2n+1 = P2( f2n)
(9.19)
as described in Sect.3.5. Any choice of initial estimate, such as f ± or zero, is
acceptable.
The projection P1(x) maps a point x in the direction parallel to OP⊕onto the line
through f and f +. The projection P2(x) maps a point x in the direction parallel to
OP⊖onto the line through f and f −.
Repeated applications of P1 and P2 provide successive approximations fn to the
solution f . The amount of computational effort in ﬁnding the value of f is similar
to that in ﬁrst ﬁnding f ±.
P ⊕
P
f
f +
f −
O
f1
f2
f3
f4
P1
P2
P1
P ++
P −−
Fig. 9.10 Geometric solution for joint interface function f from initial estimate f1

9.4 Convergence and Speed
123
9.4 Convergence and Speed
In all of the methods of Sects.9.1–9.3 the inﬁnite summations or products are termi-
nated at some ﬁnite value 0 < j < ∞, and the result obtained at that stage is taken
as the best estimate for the solution f ±. It is anticipated, as in Gauss-Seidel, that the
solution is attained to sufﬁcient accuracy before too many terms have been calcu-
lated. If the number of terms calculated exceeds the number of independent variables
N taken to represent the electromagnetic ﬁeld over the surface of the scatterer, then
none of these techniques is faster than a full matrix inversion.
Chantaveerod [48] demonstrates convergence in about 30 iterations for metal-
lic scatterers. The rate of convergence and accuracy for the method described in
Sect.9.3.2 is given in Sect.10.3 for a wide variety of materials. Typically 30–40 iter-
ations are sufﬁcient. Taking 40 as representative, the iterative technique is expected
to be faster than one based on matrix inversion when 40N 2 < N 2.8, or N > 100.
In most practical problems N exceeds 100 by a large margin. In most cases the
method here is therefore expected to be signiﬁcantly faster than techniques based on
straightforward matrix inversion.
9.5 Exercises
Q1. Verify that P1x = Q+x + g in Sect.9.1 is a projection operator by showing
that P2
1 = P1.
Q2. Verify that P1x = Q−x + h in Sect.9.2 is a projection operator by showing
that P2
1 = P1.
Q3. Show that the space-time scaling operator Rαβ is neither a projection nor
reﬂection operator.
Q4. Show that the space-time scaling operator Rαβ is linear, as in Eq.9.15.
Q5. Implementthemethodofsolutionforaperfectlytransmittingcubeasdescribed
in Sect.9.2 by either geometric series, Horner’s nested expansion, or alter-
nating projections. Check the solution for the transmitted ﬁeld against the
incident ﬁeld.
Q6. Implement the method of solution for a perfectly conducting cube as described
inSect.9.1byeithergeometricseries,Horner’snestedexpansion,oralternating
projections. Check the solution for the reﬂected ﬁeld against the measured data
from [41–43].
Q7. Implement the method of solution for a cube of arbitrary material properties
as described in Sect.9.3.2. Verify the solution against Exercises 5 and 6 in the
cases  = 0 and  = −1 for perfect transmission and reﬂection.
Q8. Show that the operator P1 in Eq.9.19 is indeed a projection operator, and that
it maps points onto the line through f and f +.
Q9. Show that the operator P2 in Eq.9.19 is indeed a projection operator, and that
it maps points onto the line through f and f −.
Q10. Redraw Fig.9.10 using f −as the initial estimate f1.

Part III
Demonstration

Chapter 10
Examples
The method described in Sect.9.3 solves the general scattering problem in three
dimensions for lossless and lossy dielectrics and conductors. Lossless dielectrics
and perfect conductors are special cases of the general solution.
The method is geometric in a Banach space of two dimensions, and can be cast into
afﬁne geometry in the plane as in Fig.9.9. One dimension of the solution relates to
the need to adhere to Maxwell’s equations of electromagnetism in regions of uniform
material properties without sources, cast in the form of Hardy projections. The other
dimension relates to the need to match the ﬁelds according to physical constraints
at the interfaces where the boundaries of different regions meet, cast in the form of
boundary data projection operators.
The method applies equally well from one to three spatial dimensions with appro-
priate selection of the Dirac operator and the Cauchy Kernel.
In the case of one spatial dimension, solutions relate to physical problems involv-
ing either transmission lines with discontinuities, or plane waves penetrating planar
barriers. These problems are taken here as useful test cases for the method. Solutions
are already known by independent means, which allows results to be checked rigor-
ously for accuracy. In addition part of the algebra, in particular the Cauchy integral,
can be carried analytically so that the Hardy projections reduce to formulae which
can be evaluated directly and without approximation. That makes the implementa-
tion efﬁcient and allows a thorough experimental study of the method under a wide
variety of different conditions.
A succinct description of the one-dimensional test problem is given in Sect.10.1.
The problem is fully formulated in Sect.10.2, drawing on the theory in part II. Results
from implementation of the solution are given in Sect.10.3.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_10
127

128
10
Examples
n
n
a
b
x
Ω−
Ω+
Ω−
f
f −
f +
f +
f −
f
Σa
Σb
μ0,
0
μ0
0
σ+, μ+
+
Fig. 10.1 Radiation from distant source ⋆is transmitted and reﬂected at surface  of scatterer +
embedded in free space −
10.1 Test Case
Figure10.1 shows a planar object + of ﬁnite thickness b −a ≥0 in one dimension,
x, and inﬁnite size in the two orthogonal dimensions, with uniform electrical conduc-
tivity σ+, permittivity ϵ+ and permeability μ+. The object is embedded in a region
of free space −with conductivity σ−= 0, permittivity ϵ−= ϵ0 and permeability
μ−=μ0.
A linearly polarised plane wave of electromagnetic radiation f ⋆from a distant
source ⋆strikes the surface  = a ∪b of the object + along the direction of
the normal to the surface, n. Part of the wave f + penetrates and is admitted into
the object, and part of the wave f −fails to penetrate and is scattered away from the
object. The total ﬁeld measured in free space −is constructed from the sum of the
incident plane wave f ⋆and the scattered (or reﬂected) wave f −. Inside the object
the total ﬁeld is constructed from the admitted (or transmitted) wave f + alone.
Tests involve varying the values of the quantities σ+, μ+ and ϵ+ to cover all types
of materials (as listed in TableB.1 in Appendix B) for a chosen value of thickness
b−a and angular frequency ω.
10.2 Formulation
Formulation of the one-dimensional problem involves deriving the Hardy projec-
tions, for use in the computational procedure listed in Table9.1. The process starts
by recasting the Dirac operator (Sect.5.4) into one dimension, and establishing a cur-
rent source which produces a plane wave of electromagnetic radiation. Maxwell’s
equations are written in Clifford form for this particular current source, and also for
a planar scalar point source. The one-dimensional version of the Bessel potential
(Eq.7.7) is used to construct the one-dimensional fundamental solution (Sect.7.2)
for the point source, from which the general ﬁeld solution for a homogeneous region
is obtained. The incident ﬁeld f ⋆is based on that solution.
The one-dimensional Cauchy kernel (Sect.7.3.1) is constructed from the funda-
mental solution. From that, closed form algebraic formulae are determined for the
Cauchy extension (Sect.7.3.2) for all regions in space away from the surface, and

10.2 Formulation
129
closed form algebraic formulae are developed for the Cauchy integral (Sect.7.4.1) at
all points on the surface. That gives directly the Hardy projections (Chap.8), which
are then used in the computational procedure listed in Table9.1.
10.2.1 Dirac Operator
With material properties and ﬁelds constant in two directions, derivatives in those
directions give zero value. The Dirac and k-Dirac operators (Sect.5.4) in this situation
can be written using only the components which produce non-zero values:
D =
∂
∂x e1 −i
c
∂
∂t e0
(10.1)
and:
Dk =
∂
∂x e1 + ke0
(10.2)
10.2.2 Source
A uniform sinusoidal current source Sk in the form of an inﬁnitesimally thin sheet Jy
Ampères per metre is established within the plane x =0 ﬂowing in the −y direction:
Sk = δ(x −0)[−Jye2]
(10.3)
as shown in Fig.10.2. This particular source is chosen in order to generate a planar
electromagnetic ﬁeld propagating away from the origin along the x axis in both
directions (see Sect.10.2.6).
x
y
z
Hz
Ey
Jy
Fig. 10.2 Current sheet as source for electromagnetic ﬁeld

130
10
Examples
10.2.3 Maxwell’s Equations
The electromagnetic ﬁeld Fk generated by the source satisﬁes Maxwell’s equations
(see Sect.5.3):
DkFk = Sk = δ(x−0)[−Jye2]
(10.4)
10.2.4 Fundamental Solution
The solution for the electromagnetic ﬁeld Fk is constructed here, as in Sect.7.2, from
the fundamental solution Fk for the scalar point source δ(x−0), under the inﬂuence
of the one-dimensional k-Dirac operator:
Dk Fk = δ(x−0)
(10.5)
Multiplying by −Jye2 and comparing to Eq.10.4 gives the electromagnetic ﬁeld in
terms of the fundamental solution:
Fk = Fk[−Jye2]
(10.6)
10.2.5 Bessel Potential
The fundamental solution Fk to the k-Dirac operator is itself constructed from either
of the two fundamental solutions B±k of the Helmholtz operator Hk = −D2
k:
[−D2
k]B±k = δ(x−0)
(10.7)
The Bessel potential B±k (see Sect.7.2) is given in one dimension by [57, 58]:
B±k(r) = ± 1
2ik e±ikr
(10.8)
where r=xe1 and r =|r|=|x|. Here, as in Sect.7.2.1, to obtain a ﬁeld ﬂowing away
from the source it is the solution with the negative wavenumber, −k, which is used.
Comparing Eqs.10.5 and 10.7 and using Eq.10.8 gives the fundamental solution
in one dimension:
Fk = −Dk B−k = −( ∂
∂x e1+ke0)

−1
2ik e−ik|x|
= −1
2(ˆr + ie0)e−ikr
(10.9)
where ˆr is a unit vector in the direction of r.

10.2 Formulation
131
10.2.6 Electromagnetic Field
Using the fundamental solution 10.9, the solution for the ﬁeld is obtained from
Eq.10.6 in terms of the current source:
Fk = −1
2(ˆr + ie0)e−ikr[−Jye2] = 1
2 Jy(ˆre2 + ie0e2)e−ikr
=
 1
2 Jy(+e3σ −ie2e0)e−ikx
x >0
1
2 Jy(−e3σ −ie2e0)e+ikx
x <0
(10.10)
Comparison to the general form for the electromagnetic ﬁeld (see Sect.5.3):
Fk = √μ(Hxe1+Hye2+Hze3)σ −i√ϵ(Exe1+Eye2+Eze3)e0
(10.11)
shows that here for the sheet current source in the one-dimensional problem Hx =
Hy = Ex = Ez =0 and Hz = ±
1
2√μ Jye±ikx and Ey =
1
2√ϵ Jye±ikx.
The ﬁrst line of Eq.10.10 is the Clifford-valued phasor of a plane wave 1
2 Jy(e3σ−
ie2e0)ei(ωt−kx) travelling in the positive x direction away from the origin. By applying
the right hand rule it is seen that the direction of the magnetic ﬁeld immediately on
the right hand side of the origin, +
1
2√μ Jye3, is consistent with the direction chosen
for the current source. Applying Poynting’s theorem P = E × H conﬁrms that the
electric and magnetic ﬁelds are consistent with propagation away from the origin.
Inspecting the exponent ωt −kx (as in Sect.7.2.1) shows that the velocity dx/dt is
positive.
The second line of Eq.10.10 is the Clifford-valued phasor of a plane wave
1
2 Jy(−e3σ −ie2e0)ei(ωt+kx) travelling in the negative x direction away from the ori-
gin. By applying the right hand rule it is seen that the direction of the magnetic ﬁeld
immediately on the left hand side of the origin, −
1
2√μ Jye3, is consistent with the
direction chosen for the current source. Applying Poynting’s theorem P = E × H
conﬁrms that the electric and magnetic ﬁelds are consistent with propagation away
from the origin. Inspecting the exponent ωt +kx shows that the velocity dx/dt is
negative.
For the test case here a sheet current source Jy = 2 Ampères per metre placed
some distance far to the left of the origin is taken as a source ⋆to establish the
incident electromagnetic plane wave f ⋆eiωt travelling in the positive x direction, as
in Fig.10.1:
f ⋆eiωt = (e3σ −ie2e0)ei(ωt−kx)
(10.12)

132
10
Examples
10.2.7 Cauchy Kernel
The Cauchy extension and Cauchy integral in one dimension follow the general
formulae of Sects.7.3.2 and 7.4.1, along with the one-dimensional Cauchy kernel
Ek, generated as in Sect.7.3.1 from the fundamental solution Fk:
Ek(r) = −Fk(−r) = −1
2(ˆr −ie0)e−ikr
(10.13)
10.2.8 Cauchy Extension
The Cauchy extension, from Sect.7.3.2:
C f (r /∈) =


Ek(s −r)n(s) f (s)dσ(s)
(10.14)
is separated into two components A, B, one for each part a, b of the boundary :
C f (x /∈) = A + B =

a
Ek((a −x)e1)n(a) f (a)dσ(a) +

b
Ek((b −x)e1)n(b) f (b)dσ(b)
(10.15)
The result of evaluating each of the two integrals A and B for points on either side of
the two interfaces at x = a and x = b is shown in Table10.1. Terms in the integrals
of the form

a 1dσ(a) represent the area of the interfaces. For convenience, the
whole problem is rescaled to reduce their values to unity.
Applying the integrals in Table10.1 to construct the Cauchy extension in the three
regions to the left, in the middle, and to the right of the object + in Fig.10.1, gives:
−f −(x) = −1
2 (1 + ie0e1)e−ik(a−x) f (a) + 1
2 (1 + ie0e1)e−ik(b−x) f (b)
; left
x <a <b
(10.16)
+ f +(x) = + 1
2 (1 −ie0e1)e−ik(x−a) f (a) + 1
2 (1 + ie0e1)e−ik(b−x) f (b)
; middle
a <x <b
(10.17)
−f −(x) = + 1
2 (1 −ie0e1)e−ik(x−a) f (a) −1
2 (1 −ie0e1)e−ik(x−b) f (b)
; right
a <b<x
(10.18)
Table 10.1 Integrals for the one-dimensional Cauchy extension
x < a
n = −e1
ˆr = +e1
x > a
n = −e1
ˆr = −e1
A =

a −1
2 (e1−ie0)e−ik(a−x)(−e1) f (a)dσ(a)
= −1
2 (1+ie0e1)e−ik(a−x) f (a)
A =

a −1
2 (−e1−ie0)e−ik(x−a)(−e1) f (a)dσ(a)
= + 1
2 (1−ie0e1)e−ik(x−a) f (a)
x < b
n = +e1
ˆr = +e1
x > b
n = +e1
ˆr = −e1
B =

b −1
2 (e1−ie0)e−ik(b−x)e1 f (b)dσ(b)
= + 1
2 (1+ie0e1)e−ik(b−x) f (b)
B =

b −1
2 (−e1−ie0)e−ik(x−b)e1 f (b)dσ(b)
= −1
2 (1−ie0e1)e−ik(x−b) f (b)

10.2 Formulation
133
Note that these expressions are purely algebraic and require no form of integration,
numerical or otherwise.
10.2.9 Cauchy Integral
The Cauchy integral (see Sect.7.4.1):
C f (r ∈) = 2 p.v.


Ek(s−r)n(s) f (s)dσ(s)
(10.19)
is constructed where necessary from the limiting values of the Cauchy extension for
two points approaching each interface a, b from opposite sides:
C f (a) = 2

b
Ek((b−a)e1)n(b) f (b)dσ(b) + 1
2

a
Ek

1
∞−1e1
	
n(a) f (a)dσ(a)
+ 1
2

a
Ek

1
1−∞e1
	
n(a) f (a)dσ(a)

= (1 + ie0e1)e−ik(b−a) f (b) −ie0e1 f (a)
(10.20)
and:
C f (b) = 2

a
Ek((a−b)e1)n(a) f (a)dσ(a) + 1
2

b
Ek

1
∞−1e1
	
n(b) f (b)dσ(b)
+ 1
2

b
Ek

1
1−∞e1
	
n(b) f (b)dσ(b)

= (1 −ie0e1)e−ik(b−a) f (a) + ie0e1 f (b)
(10.21)
In the expressions the terms
1
∞−1 and
1
1−∞represent respectively positive and
negative values inﬁnitesimally away from zero. The expressions which result are
fully resolved, carry no singularity, and properly account for the discontinuity in the
values of the ﬁeld at the interface.
10.2.10 Hardy Projections
The Hardy projections (see Chap.8) are calculated from the Cauchy integral:
P± f = 1
2(I ± C) f
(10.22)

134
10
Examples
This gives:

P+ f (a) = 1
2( f (a) + C f (a)) = 1
2((1 −ie0e1) f (a) + (1 + ie0e1)e−ik(b−a) f (b))
P−f (a) = 1
2( f (a) −C f (a)) = 1
2((1 + ie0e1) f (a) −(1 + ie0e1)e−ik(b−a) f (b))
(10.23)
and:

P+ f (b) = 1
2( f (b) + C f (b)) = 1
2((1 + ie0e1) f (b) + (1 −ie0e1)e−ik(b−a) f (a))
P−f (b) = 1
2( f (b) −C f (b)) = 1
2((1 −ie0e1) f (b) −(1 −ie0e1)e−ik(b−a) f (a))
(10.24)
The projections P++ and P−−associated with the regions + and −respectively
are obtained using the corresponding values of wavenumber k = k+ and k = k−,
within the Cauchy kernel Ek = Ek± inside the Cauchy integral C = C±
, as in
Sect.8.3.
Taking Eqs.10.23 and 10.24 with appropriate values of k± now provides all that
is required to implement the solution to the scattering problem via the computational
procedure listed in Table9.1.
10.3 Results
The computational procedure has been applied for the 36 materials listed in Table B.1
at an angular frequency of ω=4π ×109 Hz, for a scatter of thickness b−a equal to
ten wavelengths in free space. The materials are chosen to illustrate the full range of
values the permittivity and conductivity might well be expected to cover. For tests
under other conditions see [59].
 1e-16
 1e-14
 1e-12
 1e-10
 1e-08
 1e-06
 1e-04
 0.01
 1
 0
 10
 20
 30
 40
 50
RMS error
iteration
Fig. 10.3 Convergence of iterative method for different materials

10.3 Results
135
Table 10.2 Rates of convergence and errors in solution after 50 iterations
Material
Error g50
Rate g50/g49
Ethanol
5.398 × 10−4
0.891
Water
5.056 × 10−5
0.861
Gallium arsenide
2.153 × 10−6
0.794
Soda-lime glass
1.769 × 10−6
0.771
Silicon carbide
4.244 × 10−7
0.756
Sapphire
7.080 × 10−9
0.696
Acetone
5.124 × 10−9
0.695
Lead oxide glass
1.989 × 10−9
0.671
Germanium
9.115 × 10−10
0.680
Acetic acid
8.082 × 10−10
0.657
Sea water
5.596 × 10−10
0.690
Silicon
4.023 × 10−10
0.659
Diamond
3.891 × 10−10
0.649
PZT
3.999 × 10−11
0.694
Polystyrene
3.686 × 10−11
0.608
Pyrex
2.164 × 10−11
0.611
Polyethylene
1.270 × 10−11
0.603
Quartz (synthetic)
1.265 × 10−11
0.602
Quartz (natural)
1.265 × 10−11
0.602
Octane
1.688 × 10−12
0.588
Polypropylene
9.716 × 10−13
0.570
Silica glass
9.134 × 10−13
0.569
PET
1.548 × 10−13
0.542
Bismuth
8.749 × 10−14
0.511
Mercury
8.736 × 10−14
0.511
Graphite
8.713 × 10−14
0.510
Antimony
8.711 × 10−14
0.510
Arsenic
8.711 × 10−14
0.510
Gold
8.710 × 10−14
0.510
Copper
8.705 × 10−14
0.510
Silver
8.705 × 10−14
0.510
Aluminium
8.702 × 10−14
0.510
Platinum
8.689 × 10−14
0.510
Polycarbonate
3.679 × 10−14
0.515
PVC
3.310 × 10−14
0.511
Air
1.842 × 10−15
0.497

136
10
Examples
The procedure was implemented in the C programming language. The program-
ming code is listed in Appendix C.
Following the methodology adopted in [59], the results are given in Fig.10.3 in
terms of the RMS value of the difference g between the actual data g and that given
by the current estimates of the ﬁelds:
gn = ∥1
2(I +RQ) f −
2n+1 −1
2(I −RQ) f +
2n −g∥
(10.25)
The procedure is started with n = 1 using ﬁrst estimates of the ﬁelds f +
0 = f −
1 = 0,
and continued until ﬁfty iterations have been completed.
Asin[59],thealgorithmconvergeshereforalltypesofmaterials.Theconvergence
is linear, in the manner of a geometric series. For the materials tested, the rate of
convergence g50/g49 varies from the slowest value of 0.891 to the fastest value
of 0.497, as listed in Table10.2. The horizontal lines separating groups of materials
in the table correspond to the seven distinct empty bands separating clusters of traces
in Fig.10.3.
Faster convergence is typically observed for lower values of the contrast in per-
mittivity ϵ+/ϵ−, and for higher values of losses. Difﬁculties with other algorithms
have been observed when dielectric materials have low values of contrast [60, 61].
Here the algorithm performs in that case, for air with relative permittivity 1.0006,
the fastest of all.
When the contrast in permittivity is high and losses are low, as for ethanol and
water, slower convergence is typically observed. If there is sufﬁciently high loss, as
for lead zirconate titanate (PZT) with tan δ = 0.015, even a high value of contrast
(ϵ/ϵ0 = 1800) converges rapidly. When the same loss is attributed to ethanol and
water, they (i.e. the slightly modiﬁed materials) converge in 50 iterations with errors
of 8.080 × 10−10 and 6.110 ×10−10 respectively, and with rates of convergence
0.678 and 0.689. Introducing some loss effectively damps any resonance which may
otherwise slow down the solution.
10.4 Exercises
Q1. Replacing the one-dimensional Green’s function with the two-dimensional
Green’s function, modify the code in Appendix C to produce solutions for
problems with material properties constant in one dimension and waves prop-
agating perpendicular to that direction.
Q2. Replacing the one-dimensional Green’s function with the three-dimensional
Green’s function, modify the code in Appendix C to produce solutions for
problems with material properties which vary in any direction.

Part IV
Contemplation

Chapter 11
Perspectives
11.1 Genesis
Conventional techniques for solving problems involving electromagnetic scattering
and the technique described here, are both based on mathematics developed in the
nineteenth century as depicted in Fig.11.1. The conventional techniques, in the box
on the lower right, are linked by arrows to the individuals on whose work they rely.
Individuals whose work underlies the technique described in part II of this book, are
linked to the box on the lower left of the ﬁgure.
The conventional approach is to largely ignore the work of Cauchy, Grassmann
and Clifford. The alternative approach is to discard work of Green, Gibbs and Heav-
iside. Discarding the work of the latter group may seem somewhat sacrilegious, but
following it too religiously could also be an error of judgement.
During the nineteenth century, when all of these different mathematical tools
were being developed, there was discussion, at times heated, over which were the
best tools to use in the formal description and study of electromagnetic and other
physical phenomena. By the twentieth century the contest had largely been won by
vector calculus, as promoted by Gibbs and Heaviside. The adoption of that approach
must have at least in part been inﬂuenced in a Darwinian fashion, with all of the
proponents of the alternative having, by that time, departed. However, the selection
was based on the better ﬁtness of the individuals, and not necessarily the technique.
The name “Clifford-Cauchy-Dirac (CCD) technique” is adopted here as in [59],
for the more recently developed of the two approaches, with the intention of empha-
sising the fundamental distinction between them. The work of Cauchy and Clifford
are essential to the new method. It is the combination of the two which supports
generalisation of the Cauchy integral to multiple dimensions [10]. Dirac is included
for the use of the Dirac operator [31], which is effectively a modern form of the
quaternion operator ﬁrst used by Maxwell, discarded by Gibbs and Heaviside, and
reintroduced by Dirac in the twentieth century in a different context [32, 33].
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8_11
139

140
11
Perspectives
Cauchy
Green
Hamilton
Grassmann
Maxwell
Gibbs
Cliﬀord
Heaviside
1789
1800
1825
1850
1875
1900
1925
Cauchy kernel
single integral
Cliﬀord algebra
whole ﬁeld
all materials
Green’s function
double integral
vector calculus
combined ﬁeld
speciﬁc materials
Fig. 11.1 Genesis of the Clifford-Cauchy-Dirac (CCD) and conventional techniques
Techniques for solving scattering problems formulated in terms of Green’s func-
tions, double integrals, vector calculus and the combined ﬁeld (CFIE) approach lead
through implementation by the method of moments (MoM) to what promises to be a
general solution. Application of this approach to perfectly conducting objects works
well [62]. However, application to lossy conductors and dielectrics [63, 64] is for
some reason more difﬁcult. It appears that no single algorithm comes anywhere close
to covering all cases with adequate accuracy [60, 61, 65, 66].
The CCD method, formulated instead in terms of the Cauchy kernel, single inte-
grals, Clifford algebra and a whole ﬁeld approach, also promises a general solution.
For this alternative method, based on the results in Chap.10 and [59], the promise in
one dimension at least is properly honoured.
Currently, in three dimensions the new approach has only been veriﬁed for perfect
conductors [48]. The behaviour of the solution for that special case in both one and
three dimensions is effectively the same. An inference may be drawn that the general
method here also behaves the same in one and three dimensions for all other materials,
although that is yet to be veriﬁed.
11.2 Two and Three Dimensions
An implementation can be constructed for two or three dimensions using as a frame-
work the code in Appendix C. The overall structure of the algorithm remains the
same, being unaffected by the number of dimensions.
Three modiﬁcations are necessary:
• increase the number of elements (tiles) on the surface from 2 to N,
• replace the code for the one-dimensional Cauchy kernel by code for the two or
three-dimensional Cauchy kernel, and

11.2 Two and Three Dimensions
141
• recode routines which operate on ﬁelds over the zero-dimensional boundary of
a one-dimensional region to operate instead on ﬁelds over the one-dimensional
boundary of a two-dimensional region or over the two-dimensional boundary of a
three-dimensional region.
The ﬁrst two modiﬁcations are trivial.
For the third modiﬁcation, recoding the linear operators 1
2(I ± RQ) is straight-
forward because they operate locally, at isolated points. More effort is required to
recode the Hardy projections P±±, which operate globally, requiring a contribution
from the ﬁeld at every point on the surface to calculate the result at just one point.
Care must be taken to properly accommodate the integrable singularity at the point
where the result is to be determined.
11.3 Multiple Scatterers
The method for solving scattering problems in part II is formulated for the case where
there is only one scatterer. If there are multiple scatterers it is necessary to extend
and reformulate the problem accordingly. Figure11.2 shows two cases of particular
interest.
In Fig.11.2a a wave scatters from the surfaces of two objects in parallel, and in
Fig.11.2b the wave scatters from two objects in series. These two cases are entirely
analogous to series and parallel combinations of transmission lines. Parallel and
series combinations are the two fundamental means of construction by which any
arbitrary network of components (i.e. circuit) can be constructed. The shape of the
scatterers for any speciﬁc problem is irrelevant since the method used here automat-
ically incorporates that into the behaviour of the boundary data projection operators
and the Hardy projection operators.
The scattering problem for regions of different material properties, as in Fig.11.2,
has been demonstrated at zero frequency (wavenumber k = 0) in the case where the
electrical conductivity σ dominates the intrinsic impedance η [67]. In that work the
equations are treated as second order partial differential equations and conventional
methods used, not the methods described in part II. However the issue of dealing with
multiple scatterers of the type shown in Fig.11.2 has been successfully addressed.
Fig. 11.2 Scattering from
two objects (a) in parallel,
(b) in series
η0
η1
η2
η0
η1
η2
(a)
(b)

142
11
Perspectives
Fig. 11.3 Three regions (a)
with common three-way
junction, (b) treated as four
regions with three-way
junction eliminated
η0
η1
η2
η0
η1
η2
√η1η2
Ω
(a)
(b)
A third case of interest is shown in Fig.11.3a where three regions of different
material properties meet at a common point.
In principle this is simply the series and parallel combination of Fig.11.3b, where
the region ′ has shrunk in size arbitrarily close to zero. Provided that methods to
handle the parallel and series cases of Fig.11.2 can be constructed, it then follows
that all cases can be solved. See for example the ﬁgures in [67].
When multiple scatterers are involved the size of the linear system grows in
proportion to the total number of distinct interfaces where adjacent regions meet.
For example, in Fig.11.3a there are three interfaces; between η0 and η1, η0 and η2,
and η1 and η2. Although there is an extra region ′ in Fig.11.3b, there are still only
three interfaces. A different pair of Hardy projections is required for each interface.
11.4 Topology and Graphs
The complexity of a problem involving multiple scatterers can be determined by
examining the topological structure of the problem rather than its geometrical struc-
ture. The topological structure is obtained by replacing every region by a single point
and every interface by a link between a pair of these points. That produces a frame-
work of interconnected points, know in mathematical terminology as a graph (see
Fig.11.4).
The graph retains, as links, the connective relationships between regions of differ-
ent material properties. It does not retain the shapes of the original surfaces, regions
2
1
0
2
3
1
0
η0
η1
η2
η3
η0
η1
η2
Ω0
Ω1
Ω2
Ω0
Ω1
Ω2
Ω3
(a)
(b)
Fig. 11.4 Transformation of scattering problems into equivalent graphs with links in (a) parallel,
(b) series. Interfaces (dotted) are replaced by links (solid lines), and regions  are replaced by
points (o)

11.4 Topology and Graphs
143
Z2
Z1
Z0
Z0
Z1
Z2
Z3
Z1
Z1
η0
η1
η2
η3
η0
η1
η2
Ω0
Ω1
Ω2
Ω0
Ω1
Ω2
Ω3
(a)
(b)
Fig. 11.5 Collapse of scattering problems onto equivalent circuits with components in (a) parallel,
(b) series. Interfaces (dotted) reduce to nodes (o), and regions  reduce to components Z
or interfaces. For each link two equations are required, one for a wave travelling in
one direction and one for a wave travelling in the opposite direction. Each equation
is formulated in terms of Hardy projections. The number of equations required to
solve the full problem with multiple scatterers is governed by the number of links in
the equivalent graph. It is indifferent to the shapes of objects.
11.5 Equivalent Circuits
There is a direct one-to-one equivalence between the graph of a scattering problem
and an electrical circuit. Each point in the graph plays the role of component in the
circuit, and each link in the graph represents a wire connecting two components. The
effort required for the solution of the problem depends on the number of links in the
graph or the number of wires in the circuit.
In the case of a circuit, the equations at the nodes involve ﬁeld variables which
occupy only one dimension. For the scattering problem in three dimensions, the
equations at the nodes (interfaces) involve variables with the number of dimensions
equal to the number of elements employed to represent the interface. In terms of a
matrix representation, every equation leads to a block of rows and columns, with
non-zero entries only where rows and columns are coupled by a common node. In
circuits, these matrices are often quite sparse.
Some components have more than two terminals, as for Z1 in Fig.11.5a, and can
be represented in more than one equivalent form. See for example exercise 5.
11.6 Electromagnetism
Inthecaseofelectromagnetism,itseemsclearthatnotonlydoestheClifford-Cauchy-
Dirac technique provide a viable alternative method to conventional techniques,
it provides one which in many ways is superior. By comparing the fundamental

144
11
Perspectives
similarities and differences between the CCD technique and the Method of Moments
[53–56] it seems likely that the Clifford-Cauchy-Dirac technique offers very real
and signiﬁcant advantages in uniformity, complexity, speed, storage, stability, con-
sistency and accuracy. These advantages have yet to be demonstrated fully in three
dimensions.
11.7 Beyond Electromagnetism
The methods described in part II are focussed on solving particular kinds of phys-
ical problems involving the scattering of electromagnetic waves, using Maxwell’s
equations as a classical mathematical representation of that phenomenon. Maxwell’s
equations are in the form of certain ﬁrst order differential equations, which can be
further interpreted as square roots of the (second order) Laplace, Helmholtz and
wave equations. Given that these and similar equations are found to represent many
and varied physical phenomena, it seems likely that the method adopted here can
be recast and applied also to those other phenomena. This seems to be particularly
the case where elliptic operators are involved, at least in those situations where their
‘square roots’ can be shown to be properly deﬁned and well behaved (see [68–70]). It
should be possible develop methods of solution for these other physical phenomena
in a similar style as is done here for electromagnetism.
11.8 Exercises
Q1. Develop a method of solution for scattering from two objects in parallel as in
Fig.11.2a.
Q2. Develop a method of solution for scattering from two objects in series as in
Fig.11.2b.
Q3. Modifytheresultfromquestion1toaccommodatethecasedepictedinFig.11.3.
Q4. Using the results from question 2 and 3 develop a general solution for any
number of scatterers in any equivalent circuit.
Q5. Find the values of the impedances Z′
1 for which the circuit below is an electri-
cally identical replacement for the three impedances Z1 in Fig.11.5a.
Z1
Z1
Z1

11.8 Exercises
145
Q6. For a physical phenomenon of your choice as described by an elliptic operator,
develop a method of solution using the square root of that operator for a problem
involving multiple regions of different but uniform material properties meeting
at interfaces.

Appendix A
Reduce Code for Machine Computation
The source code listed here is taken verbatim from a working suite of computer rou-
tines. It operates on Clifford numbers with either numerical or symbolic coefﬁcients.
Translation to the Lisp language is relatively straightforward, since Reduce is built
on either standard Lisp or some later variant. However, the facility for symbolic
calculation is then lost. Translation to the C language takes more effort but can offer
advantages in terms of speed.
For the electromagnetic application, routines as general as these are wasteful. In
that case it is normally known that the terms in a product are either vectors or bivectors
of known dimension, and it is much more computationally efﬁcient to write a suite
of routines to cover those particular cases, never attempting to multiply components
which are known a priori to be zero.
The deﬁnitions of the products here are taken from Tables2.4 and 2.5. The Clifford
conjugations shown in those tables on one or other of the multiplicands for the inner-
style products are invoked as the ﬁrst operation within the computer routines. For
two arguments a, b these routines therefore behave as a ∨b, a ⌟b, a ⌞b, (a , b) and,
a · b respectively, without any need for prior conjugation.
At time of print the Reduce package can be obtained either as source or precom-
piled for computers running Windows or Linux operating systems from the website
http://sourceforge.net/projects/reduce-algebra/ﬁles/.
Algebraic Rules
%-------------------------------------------------------------------------
% algebraic rules
%-------------------------------------------------------------------------
algebraic;
operator e; noncom e; factor e;
clifrule:={e(˜j)ˆ2=>-1, e(˜j)*e(˜k)=>-e(k)*e(j) when ordp(j,k) and j neq k};
let clifrule;
%-------------------------------------------------------------------------
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8
147

148
Appendix A: Reduce Code for Machine Computation
Bit Operations
%-------------------------------------------------------------------------
% bit operations
%-------------------------------------------------------------------------
procedure andb(a,b);
% and least significant bits
if a=1 and b=1 then 1 else 0;
procedure orb(a,b);
% or least significant bits
if a=1 or b=1 then 1 else 0;
procedure lsb(x);
% get least significant bit
if evenp(x) then 0 else 1;
procedure rshift1(x);
% shift bits right, lose lsb
fix(x/2);
procedure nintersect(a,b);
% count number of bits in intersection
if a>0 and b>0
then nintersect(rshift1(a),rshift1(b))+andb(lsb(a),lsb(b)) else 0;
%-------------------------------------------------------------------------
List Operations
%-------------------------------------------------------------------------
% list operations
%-------------------------------------------------------------------------
procedure tlist(x);
% test if x is a list
if arglength(x)>0 and part(x,0)=list then 1 else 0;
procedure dimc(x);
% get dimension of Clifford number
if tlist(x)=1 then 1+dimc(first(x)) else 0;
procedure zeroc(n);
% make Clifford zero of dimension n;
if n>0 then list(zeroc(n-1),zeroc(n-1)) else 0;
procedure gradec(x,k);
% get grade k of Clifford number
if tlist(x)=1
then if k>0 then list(gradec(first(x),k),gradec(second(x),k-1))
else list(gradec(first(x),k),zeroc(dimc(second(x))))
else if k>0 then 0 else x;
%-------------------------------------------------------------------------
procedure addls(x,s);
% add scalar s to all coefficients of
if tlist(x)=1
%
Clifford number
then list(addls(first(x),s),addls(second(x),s)) else x+s;
procedure multls(x,s);
% post multiply Clifford number x by
if tlist(x)=1
%
scalar s
then list(multls(first(x),s),multls(second(x),s)) else x*s;
%-------------------------------------------------------------------------
Symbolic Operations
%-------------------------------------------------------------------------
% symbolic operations
%-------------------------------------------------------------------------
procedure makeindex(n);
% make Clifford index of dimension n
if n>0
then list(makeindex(n-1),addls(makeindex(n-1),2ˆ(n-1))) else 0;

Appendix A: Reduce Code for Machine Computation
149
procedure makecliffvar(n,x,i);
% make Clifford variable of dimension n
if n>0
then list(makecliffvar(n-1,x,first(i)),makecliffvar(n-1,x,second(i)))
else mkid(x,i);
procedure makecliff(n,x);
% make Clifford variable of dimension n
makecliffvar(n,x,makeindex(n)); % units are implicit
procedure makeunits(n);
% make Clifford units of dimension n
if n>0
then list(makeunits(n-1),multls(makeunits(n-1),e(n-1))) else 1;
procedure printclf(x,u);
% print Clifford number in algebraic form
if tlist(x)=1
then printclf(first(x),first(u))+printclf(second(x),second(u)) else x*u;
procedure printcliff(x);
% print Clifford number in algebraic form
printclf(x,makeunits(dimc(x)));
%-------------------------------------------------------------------------
Inversion of Signs
%-------------------------------------------------------------------------
% inversion of signs
%-------------------------------------------------------------------------
procedure negc(x);
% negative of Clifford number
if tlist(x)=1
then list(negc(first(x)),negc(second(x))) else -x;
procedure invc(x);
% involution of Clifford number
if tlist(x)=1
then list(invc(first(x)),ninvc(second(x))) else x;
procedure ninvc(x);
% negative of involution of Clifford
if tlist(x)=1
%
number
then list(ninvc(first(x)),invc(second(x))) else -x;
procedure revc(x);
% reversion of Clifford number
if tlist(x)=1
then list(revc(first(x)),cnjc(second(x))) else x;
procedure nrevc(x);
% negative of reversion of Clifford number
if tlist(x)=1
then list(nrevc(first(x)),ncnjc(second(x))) else -x;
procedure cnjc(x);
% conjugate of Clifford number
if tlist(x)=1
then list(cnjc(first(x)),nrevc(second(x))) else x;
procedure ncnjc(x);
% negative of conjugate of Clifford number
if tlist(x)=1
then list(ncnjc(first(x)),revc(second(x))) else -x;
%-------------------------------------------------------------------------
Addition and Subtraction
%-------------------------------------------------------------------------
% addition
%-------------------------------------------------------------------------

150
Appendix A: Reduce Code for Machine Computation
procedure addx(a,b);
% add two equal dimension Clifford numbers
if tlist(a)=1 and tlist(b)=1
then list(addx(first(a),first(b)),addx(second(a),second(b)))
else if tlist(a)=0 and tlist(b)=0
then a+b else write "bad arguments to addx";
procedure add2(a,b,na,nb);
% reduce to numbers of equal dimension
if na=nb then addx(a,b)
else if na>nb
then list(add2(first(a),b,na-1,nb),second(a))
else list(add2(a,first(b),na,nb-1),second(b));
procedure addc(a,b);
% add two Clifford numbers
add2(a,b,dimc(a),dimc(b));
%-------------------------------------------------------------------------
% subtraction
%-------------------------------------------------------------------------
procedure subx(a,b);
% subtract two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(first(a),first(b)),subx(second(a),second(b)))
else if tlist(a)=0 and tlist(b)=0
then a-b else write "bad arguments to subx";
procedure sub2(a,b,na,nb);
% reduce to numbers of equal dimension
if na=nb then subx(a,b)
else if na>nb
then list(sub2(first(a),b,na-1,nb),second(a))
else list(sub2(a,first(b),na,nb-1),negc(second(b)));
procedure subc(a,b);
% subtract two Clifford numbers
sub2(a,b,dimc(a),dimc(b));
%-------------------------------------------------------------------------
Products
%-------------------------------------------------------------------------
% central product
%-------------------------------------------------------------------------
procedure cmulx(a,b);
% central product for two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(cmulx(first(a),first(b)),cmulx(second(a),invc(second(b)))),
addx(cmulx(first(a),second(b)),cmulx(second(a),invc(first(b)))))
else if tlist(a)=0 and tlist(b)=0
then a*b else write "bad arguments to cmulx";
procedure cmul2(a,b,na,nb);
% reduce to numbers of equal dimension
if na=nb then cmulx(a,b)
else if na>nb
then list(cmul2(first(a),b,na-1,nb),
cmul2(second(a),invc(b),na-1,nb))
else list(cmul2(a,first(b),na,nb-1),
cmul2(a,second(b),na,nb-1));
procedure central(a,b);
% central product of two Clifford numbers
cmul2(a,b,dimc(a),dimc(b));
%-------------------------------------------------------------------------
% outer product
%-------------------------------------------------------------------------
procedure omulx(a,b,n,i,j);
% outer product for two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(omulx(first(a),first(b),n-1,i,j),
omulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),
addx(omulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
omulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if nintersect(i,j)=0

Appendix A: Reduce Code for Machine Computation
151
then a*b else 0
else write "bad arguments to omulx";
procedure omul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then omulx(a,b,na,i,j)
else if na>nb
then list(omul2(first(a),b,na-1,nb,i,j),
omul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(omul2(a,first(b),na,nb-1,i,j),
omul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
procedure outer(a,b);
% outer product of two Clifford numbers
omul2(a,b,dimc(a),dimc(b),0,0);
%-------------------------------------------------------------------------
% inner product
%-------------------------------------------------------------------------
procedure imulx(a,b,n,i,j);
% inner product for two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(imulx(first(a),first(b),n-1,i,j),
imulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),
addx(imulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
imulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if nintersect(i,j)=nintersect(i,i) or nintersect(i,j)=nintersect(j,j)
then a*b else 0
else write "bad arguments to imulx";
procedure imul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then imulx(a,b,na,i,j)
else if na>nb
then list(imul2(first(a),b,na-1,nb,i,j),
imul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(imul2(a,first(b),na,nb-1,i,j),
imul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
procedure inner(a,b);
% inner product of two Clifford numbers
imul2(cnjc(a),b,dimc(a),dimc(b),0,0);
%-------------------------------------------------------------------------
% left inner product
%-------------------------------------------------------------------------
procedure lmulx(a,b,n,i,j);
% left inner product for two equal
if tlist(a)=1 and tlist(b)=1
%
dimension Clifford numbers
then list(subx(lmulx(first(a),first(b),n-1,i,j),
lmulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),
addx(lmulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
lmulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if nintersect(i,i)=nintersect(i,j)
then a*b else 0
else write "bad arguments to lmulx";
procedure lmul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then lmulx(a,b,na,i,j)
else if na>nb
then list(lmul2(first(a),b,na-1,nb,i,j),
lmul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(lmul2(a,first(b),na,nb-1,i,j),
lmul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
procedure left(a,b);
% left inner product of two Clifford
lmul2(cnjc(a),b,dimc(a),dimc(b),0,0);
%
numbers
%-------------------------------------------------------------------------
% right inner product
%-------------------------------------------------------------------------
procedure rmulx(a,b,n,i,j);
% right inner product for two equal
if tlist(a)=1 and tlist(b)=1
%
dimension Clifford numbers
then list(subx(rmulx(first(a),first(b),n-1,i,j),
rmulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),

152
Appendix A: Reduce Code for Machine Computation
addx(rmulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
rmulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if nintersect(i,j)=nintersect(j,j)
then a*b else 0
else write "bad arguments to rmulx";
procedure rmul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then rmulx(a,b,na,i,j)
else if na>nb
then list(rmul2(first(a),b,na-1,nb,i,j),
rmul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(rmul2(a,first(b),na,nb-1,i,j),
rmul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
procedure right(a,b);
% right inner product of two Clifford
rmul2(a,cnjc(b),dimc(a),dimc(b),0,0);
%
numbers
%-------------------------------------------------------------------------
% scalar product
%-------------------------------------------------------------------------
procedure smulx(a,b,n,i,j);
% scalar product for two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(smulx(first(a),first(b),n-1,i,j),
smulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),
addx(smulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
smulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if i=j
then a*b else 0
else write "bad arguments to smulx";
procedure smul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then smulx(a,b,na,i,j)
else if na>nb
then list(smul2(first(a),b,na-1,nb,i,j),
smul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(smul2(a,first(b),na,nb-1,i,j),
smul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
% reserved word "scalar" cannot be used for name of procedure
procedure skalar(a,b);
% scalar product of two Clifford numbers
smul2(cnjc(a),b,dimc(a),dimc(b),0,0);
%-------------------------------------------------------------------------
% dot product
%-------------------------------------------------------------------------
procedure dmulx(a,b,n,i,j);
% dot product for two equal dimension
if tlist(a)=1 and tlist(b)=1
%
Clifford numbers
then list(subx(dmulx(first(a),first(b),n-1,i,j),
dmulx(second(a),invc(second(b)),n-1,2ˆ(n-1)+i,2ˆ(n-1)+j)),
addx(dmulx(first(a),second(b),n-1,i,2ˆ(n-1)+j),
dmulx(second(a),invc(first(b)),n-1,2ˆ(n-1)+i,j)))
else if tlist(a)=0 and tlist(b)=0
then if i=j and nintersect(i,i)=1
then a*b else 0
else write "bad arguments to dmulx";
procedure dmul2(a,b,na,nb,i,j); % reduce to numbers of equal dimension
if na=nb then dmulx(a,b,na,i,j)
else if na>nb
then list(dmul2(first(a),b,na-1,nb,i,j),
dmul2(second(a),invc(b),na-1,nb,2ˆ(na-1)+i,j))
else list(dmul2(a,first(b),na,nb-1,i,j),
dmul2(a,second(b),na,nb-1,i,2ˆ(nb-1)+j));
procedure dot(a,b);
% dot product of two Clifford numbers
dmul2(cnjc(a),b,dimc(a),dimc(b),0,0);
%-------------------------------------------------------------------------
end;
%-------------------------------------------------------------------------

Appendix B
Electrical Properties of Materials
TableB.1 lists the electrical properties of a selection of materials of different types.
They serve to illustrate the range of values these properties might well be expected
to cover. The values are quoted to the number of decimal places as appearing in the
sources.
Thepermittivityϵrelatestothequadraturephasecomponentofvoltageandcurrent
(electric ﬁeld and magnetic ﬁeld) arising from bound charge (in the valence band).
The loss tangent tan δ relates to the in-phase component of voltage and current for
bound charge in combination with the in-phase component of voltage and current
for free charge (in the conduction band). The conductivity σ relates to the in-phase
component of voltage and current for free charge alone. The conductivity and the loss
tangent both play the role of loss mechanisms. For good conductors the effects of
the free charge is dominant. For good insulators loss the effects of the bound charge
dominate.
The three quantities are treated as constant within narrow ranges of frequency
and temperature, but may take different values for markedly different frequencies or
temperatures.
The permittivity covers a range of values as different atomic mechanisms become
more or less signiﬁcant as the frequency varies. The values listed are measured at
microwave frequencies or lower, and are typically the highest values observed for
the particular materials.
Conductivity varies with temperature, particularly in the case of semiconductors.
The values listed are nominally at or close to room temperature. Conductivity is
also sensitive to the purity of the materials, again in the case of semiconductors and
also in the case of liquids (e.g. water) and crystalline solids (e.g. quartz). Naturally
occurring samples are likely to have higher conductivity, often signiﬁcantly so.
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8
153

154
Appendix B: Electrical Properties of Materials
Table B.1 Electrical properties of materials of different types
Type
Material
Formula
Permittivity ϵ/ϵ0
Loss tangent tan δ
Conductivity
σ/−1m−1
Reference
Air
1.0006
0
0
Metal
Silver
Ag
6.80 × 107
[71]
Copper
Cu
5.84 × 107
[72]
Gold
Au
4.5 × 107
[73]
Aluminium
Al
3.69 × 107
[72]
Platinum
Pt
9.43 × 106
[71]
Mercury
Hg
1.06 × 106
[72]
Semi-metal
Antimony
Sb
2.56 × 106
[72]
Arsenic
As
2.7 × 106
[73]
Graphite
C
1.82 × 106
[74]
Bismuth
Bi
9.35 × 105
[72]
Semiconductor
Germanium
Ge
16.3
2.23
[75]
Silicon
Si
11.7
4.25 × 10−4
[75]
Gallium arsenide
GaAs
12
1.27 × 10−6
[75]
Silicon carbide
SiC
10.2
[72]
H-C-O
Sea water
H2O + salts
81
5.3088
[29, 72]
Acetone
(CH3)2CO
21.01
6 × 10−6
[72, 76]
Water
H2O
80.2
5.5 × 10−6
[72, 73]
Acetic acid
CH3CO2H
6.20
1.12 × 10−6
[72, 76]
Ethanol
C2H6O
25.3
1.35 × 10−7
[72, 76]
Octane
C8H18
1.948
[72]
(continued)

Appendix B: Electrical Properties of Materials
155
Table B.1 (continued)
Type
Material
Formula
Permittivity ϵ/ϵ0
Loss tangent tan δ
Conductivity
σ/−1m−1
Reference
Air
1.0006
0
0
Glass
Silica
SiO2
3.81
0.00038
2.0 × 10−8
[71, 72]
Sodium borosilicate (pyrex)
5.07
0.019
[72]
Lead oxide (crystal)
6.9
[77]
Soda-lime (window)
7.5
[77]
Ceramic
Sapphire
Al2O3
11.5
0.0001
1 × 10−9
[71]
Quartz (natural)
SiO2
4.60
1.0 × 10−10
[72, 78]
Diamond
C
5.87
0.00020
1 × 10−11
[71–73]
Quartz (synthetic)
SiO2
4.60
1.2 × 10−17
[72, 78]
Lead zirconate titanate (PZT)
PbZrO3 + PbTiO3
1800
0.015
[71]
Polymer
Polyvinylchloride (PVC)
3.0
0.015
1.0 × 10−13
[71]
Polyethylenetere-phthalate (PET)
3.19
0.00852
2.79 × 10−15
[71]
Polycarbonate
2.97
0.00551
2.21 × 10−15
[71]
Polypropylene
2.3
0.000410
8.13 × 10−16
[71]
Polystyrene
2.58
4.41 × 10−16
[71]
Polyethylene
2.3
[77]

Appendix C
C Code for One-Dimensional Solution
The source code listed here is a verbatim copy of that used to create the results
given in Fig.10.3. Prior to compilation a header ﬁle should be created using the C
programming utility cproto or equivalent, as shown in the ﬁrst line of TableC.1. The
third line will generate a usage message with examples.
The fourth line in TableC.1 is an example of usage with use of the ﬁle operator
‘>’ on the UNIX command line to redirect the ASCII output into a plain text ﬁle
output.txt. In this case the material is gold, with material properties from left to
right: relative permeability μ/μ0 = 1, relative permittivity ϵ/ϵ0 = 1, loss tangent
tan δ = 0, electrical conductivity σ = 4.5×107 Siemens per metre, thickness x = 10
free space wavelengths, frequency f = 2×109 Hz. The text ﬁle produced is suitable
for plotting directly with a graphics utility such as gnuplot.
The parameters on the command line provide two methods for specifying the
lossy component of a material’s properties; either as tan δ, the loss tangent, or as σ,
the electrical conductivity. Within the program the losses are added together. When
only one is required, a value of zero can be used for the other. For the results in
Fig.10.3 both, where available, have been used because the tests are intended to
examine behaviour for the most extreme values which may be expected.
/*--------------------------------------------------------*/
/* one.c
Implementation of Cauchy-Clifford-Dirac technique
in one dimension.
*/
/*--------------------------------------------------------*/
/* structure for electromagnetic field
*/
/*--------------------------------------------------------*/
/* f = A.e3.sigma+i.B.e2.e0
*/
/*
A = +sqrt(mu)*Hz
*/
/*
B = -sqrt(epsilon)*Ey */
typedef struct xxx{
double A[2]; /* complex value of +sqrt(mu)*Hz
*/
double B[2]; /* complex value of -sqrt(epsilon)*Ey
*/
}field;
/* structure for electromagnetic field */
/*--------------------------------------------------------*/
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include "one.h"
/* header file with function prototypes */
/*--------------------------------------------------------*/
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8
157

158
Appendix C: C Code for One-Dimensional Solution
Table C.1 Compilation and
usage of C code
$ cproto one.c > one.h
$ cc –c one one.c –lm
$ one
$ one 1 1 0 4.5e7 10 2e9 > output.txt
/* real-valued routines */
/*--------------------------------------------------------*/
double velocity(omega,k)
double omega;
double k[2];
{
double v;
v=omega/k[0];
return(v);
}
/*--------------------------------------------------------*/
double wavelength(k)
double k[2];
{
double lambda;
lambda=2.0*M_PI/k[0];
return(lambda);
}
/*--------------------------------------------------------*/
double gain_dB(k)
double k[2];
{
double g;
g=20.0*k[1]/(log(10.0));
return(g);
}
/*--------------------------------------------------------*/
double contrast(k_minus,k_plus)
double k_minus[2],k_plus[2];
{
double r[2];
double g;
complex_divide(k_plus,k_minus,r);
g=complex_magnitude(r);
return(g);
}
/*--------------------------------------------------------*/
/* complex-valued routines */
/*--------------------------------------------------------*/
void complex_negate(x)
double x[2]; /* complex */
{
x[0]=-x[0];
x[1]=-x[1];
}
/*--------------------------------------------------------*/
double complex_magnitude(x)
double x[2]; /* complex */
{
double r;
r=sqrt(x[0]*x[0]+x[1]*x[1]);
return(r);
}
/*--------------------------------------------------------*/
void complex_add(a,b,x)

Appendix C: C Code for One-Dimensional Solution
159
double a[2],b[2],x[2]; /* complex */
{
x[0]=a[0]+b[0];
x[1]=a[1]+b[1];
}
/*--------------------------------------------------------*/
void complex_subtract(a,b,x)
double a[2],b[2],x[2]; /* complex */
{
x[0]=a[0]-b[0];
x[1]=a[1]-b[1];
}
/*--------------------------------------------------------*/
void complex_multiply(a,b,x)
double a[2],b[2],x[2]; /* complex */
{
x[0]=a[0]*b[0]-a[1]*b[1];
x[1]=a[1]*b[0]+a[0]*b[1];
}
/*--------------------------------------------------------*/
void complex_divide(a,b,x)
double a[2],b[2],x[2]; /* complex */
{
double r;
r=1.0/(b[0]*b[0]+b[1]*b[1]);
x[0]=r*(a[0]*b[0]+a[1]*b[1]);
x[1]=r*(a[1]*b[0]-a[0]*b[1]);
}
/*--------------------------------------------------------*/
void complex_sqrt(a,x)
double a[2],x[2]; /* complex */
{
double r,theta;
if(a[1]==0.0) /* real */
{
if(a[0]<0.0) /* negative */
{
x[0]=0.0;
x[1]=sqrt(-a[0]);
}
else /* non-negative */
{
x[0]=sqrt(a[0]);
x[1]=0.0;
}
}
else /* non-real */
{
r=sqrt(a[0]*a[0]+a[1]*a[1]);
if(a[1]>0.0) /* above real axis */
{
theta=0.5*atan2(a[1],a[0]);
}
else /* not above real axis */
{
theta=-0.5*atan2(-a[1],a[0]);
}
x[0]=r*cos(theta);
x[1]=r*sin(theta);
}
}
/*--------------------------------------------------------*/
void emikx(k,x,e)
/* eˆ(-ikx) */
double k[2],e[2]; /* complex */
double x;
{
double r,theta;

160
Appendix C: C Code for One-Dimensional Solution
theta=k[0]*x;
r=exp(k[1]*x);
e[0]= r*cos(theta);
e[1]=-r*sin(theta);
}
/*--------------------------------------------------------*/
void wavenumber(omega,sigma,mu,epsilon,k)
double omega,sigma,mu;
/* real */
double epsilon[2],k[2];
/* complex */
{
double x[2];
double wu;
wu=omega*mu;
x[0]=wu*omega*epsilon[0];
x[1]=wu*(omega*epsilon[1]-sigma);
complex_sqrt(x,k);
}
/*--------------------------------------------------------*/
void space_factor(mu_plus,mu_minus,s_scale)
double mu_minus,mu_plus; /* real */
double s_scale[2];
/* complex */
{
double x[2],y[2],a[2],b[2];
x[0]=mu_plus;
x[1]=0.0;
y[0]=mu_minus;
y[1]=0.0;
complex_sqrt(x,a);
complex_sqrt(y,b);
complex_subtract(a,b,x);
complex_add(a,b,y);
complex_divide(x,y,s_scale);
}
/*--------------------------------------------------------*/
void time_factor(omega,sigma_plus,sigma_minus,epsilon_plus,epsilon_minus,t_scale)
double omega,sigma_minus,sigma_plus;
/* real */
double epsilon_minus[2],epsilon_plus[2]; /* complex */
double t_scale[2];
/* complex */
{
double x[2],y[2],a[2],b[2];
x[0]=omega*epsilon_minus[0];
x[1]=omega*epsilon_minus[1]-sigma_minus;
y[0]=omega*epsilon_plus[0];
y[1]=omega*epsilon_plus[1]-sigma_plus;
complex_sqrt(x,a);
complex_sqrt(y,b);
complex_subtract(a,b,x);
complex_add(a,b,y);
complex_divide(x,y,t_scale);
}
/*--------------------------------------------------------*/
/* field conversion routines */
/* f = A.e3.sigma+i.B.e2.e0
*/
/*
A = +sqrt(mu)*Hz
*/
/*
B = -sqrt(epsilon)*Ey */
/*--------------------------------------------------------*/
void set_field(Hz,Ey,omega,sigma,mu,epsilon,f)
double Hz[2],Ey[2],epsilon[2]; /* complex */
double omega,sigma,mu;
/* real */
field f[1];
/* field at one point */
{
double x[2],y[2],a[2],b[2];
x[0]=mu;
x[1]=0.0;
y[0]=epsilon[0];
y[1]=epsilon[1]-sigma/omega;
complex_sqrt(x,a);

Appendix C: C Code for One-Dimensional Solution
161
complex_sqrt(y,b);
complex_negate(b);
complex_multiply(a,Hz,f[0].A);
complex_multiply(b,Ey,f[0].B);
}
/*--------------------------------------------------------*/
void get_field(f,omega,sigma,mu,epsilon,Hz,Ey)
field f[1];
/* field at one point */
double omega,sigma,mu,epsilon; /* real */
double Hz[2],Ey[2];
/* complex */
{
double x[2],y[2],a[2],b[2];
x[0]= mu;
x[1]= 0.0;
y[0]= epsilon;
y[1]=-sigma/omega;
complex_sqrt(x,a);
complex_sqrt(y,b);
complex_negate(b);
complex_divide(f[0].A,a,Hz);
complex_divide(f[0].B,b,Ey);
}
/*--------------------------------------------------------*/
/* single point field-valued routines */
/*--------------------------------------------------------*/
void complex_scale_field(s,a,x)
double s[2];
/* complex */
field a[1],x[1]; /* field at one point */
{
complex_multiply(s,a[0].A,x[0].A);
complex_multiply(s,a[0].B,x[0].B);
}
/*--------------------------------------------------------*/
void one_plus_ie0e1(f,x) /* x=[1+ie(0)e(1)]f */
field f[1],x[1];
/* field at one point */
{
x[0].A[0] = f[0].A[0] + f[0].B[0];
x[0].A[1] = f[0].A[1] + f[0].B[1];
x[0].B[0] = f[0].B[0] + f[0].A[0];
x[0].B[1] = f[0].B[1] + f[0].A[1];
}
/*--------------------------------------------------------*/
void one_minus_ie0e1(f,x) /* x=[1-ie(0)e(1)]f */
field f[1],x[1];
/* field at one point */
{
x[0].A[0] = f[0].A[0] - f[0].B[0];
x[0].A[1] = f[0].A[1] - f[0].B[1];
x[0].B[0] = f[0].B[0] - f[0].A[0];
x[0].B[1] = f[0].B[1] - f[0].A[1];
}
/*--------------------------------------------------------*/
void half_add_field(a,b,x) /* x=(a+b)/2 */
field a[1],b[1],x[1]; /* field at one point */
{
x[0].A[0] = 0.5*(a[0].A[0] + b[0].A[0]);
x[0].A[1] = 0.5*(a[0].A[1] + b[0].A[1]);
x[0].B[0] = 0.5*(a[0].B[0] + b[0].B[0]);
x[0].B[1] = 0.5*(a[0].B[1] + b[0].B[1]);
}
/*--------------------------------------------------------*/
void half_subtract_field(a,b,x) /* x=(a-b)/2 */
field a[1],b[1],x[1];
/* field at one point */
{
x[0].A[0] = 0.5*(a[0].A[0] - b[0].A[0]);
x[0].A[1] = 0.5*(a[0].A[1] - b[0].A[1]);
x[0].B[0] = 0.5*(a[0].B[0] - b[0].B[0]);
x[0].B[1] = 0.5*(a[0].B[1] - b[0].B[1]);
}
/*--------------------------------------------------------*/

162
Appendix C: C Code for One-Dimensional Solution
/* whole surface field-valued routines */
/*--------------------------------------------------------*/
void guess_zero(x) /* x=0 */
field x[2];
/* field over whole surface */
{
x[0].A[0] = 0.0;
x[0].A[1] = 0.0;
x[0].B[0] = 0.0;
x[0].B[1] = 0.0;
x[1].A[0] = 0.0;
x[1].A[1] = 0.0;
x[1].B[0] = 0.0;
x[1].B[1] = 0.0;
}
/*--------------------------------------------------------*/
void guess_f_minus(x) /* x=guess */
field x[2];
/* field over whole surface */
{
guess_zero(x);
}
/*--------------------------------------------------------*/
void guess_f_plus(x) /* x=guess */
field x[2];
/* field over whole surface */
{
guess_zero(x);
}
/*--------------------------------------------------------*/
double rms_field(x) /* RMS field over whole surface */
field x[2];
/* field over whole surface */
{
double f;
f = (x[0].A[0] * x[0].A[0]) + (x[0].A[1] * x[0].A[1])
+ (x[0].B[0] * x[0].B[0]) + (x[0].B[1] * x[0].B[1])
+ (x[1].A[0] * x[1].A[0]) + (x[1].A[1] * x[1].A[1])
+ (x[1].B[0] * x[1].B[0]) + (x[1].B[1] * x[1].B[1]);
f=sqrt(0.5*f);
return(f);
}
/*--------------------------------------------------------*/
void invert_whole_field(x) /* x=-x */
field x[2];
/* field over whole surface */
{
x[0].A[0] = -x[0].A[0];
x[0].A[1] = -x[0].A[1];
x[0].B[0] = -x[0].B[0];
x[0].B[1] = -x[0].B[1];
x[1].A[0] = -x[1].A[0];
x[1].A[1] = -x[1].A[1];
x[1].B[0] = -x[1].B[0];
x[1].B[1] = -x[1].B[1];
}
/*--------------------------------------------------------*/
void copy_whole_field(a,x) /* x=a */
field a[2],x[2];
/* field over whole surface */
{
x[0].A[0] = a[0].A[0];
x[0].A[1] = a[0].A[1];
x[0].B[0] = a[0].B[0];
x[0].B[1] = a[0].B[1];
x[1].A[0] = a[1].A[0];
x[1].A[1] = a[1].A[1];
x[1].B[0] = a[1].B[0];
x[1].B[1] = a[1].B[1];
}
/*--------------------------------------------------------*/
void add_whole_field(a,b,x) /* x=a+b */
field a[2],b[2],x[2];
/* field over whole surface */
{
x[0].A[0] = a[0].A[0] + b[0].A[0];
x[0].A[1] = a[0].A[1] + b[0].A[1];
x[0].B[0] = a[0].B[0] + b[0].B[0];
x[0].B[1] = a[0].B[1] + b[0].B[1];
x[1].A[0] = a[1].A[0] + b[1].A[0];
x[1].A[1] = a[1].A[1] + b[1].A[1];
x[1].B[0] = a[1].B[0] + b[1].B[0];
x[1].B[1] = a[1].B[1] + b[1].B[1];
}
/*--------------------------------------------------------*/
void subtract_whole_field(a,b,x) /* x=a-b */
field a[2],b[2],x[2]; /* field over whole surface */
{
x[0].A[0] = a[0].A[0] - b[0].A[0];

Appendix C: C Code for One-Dimensional Solution
163
x[0].A[1] = a[0].A[1] - b[0].A[1];
x[0].B[0] = a[0].B[0] - b[0].B[0];
x[0].B[1] = a[0].B[1] - b[0].B[1];
x[1].A[0] = a[1].A[0] - b[1].A[0];
x[1].A[1] = a[1].A[1] - b[1].A[1];
x[1].B[0] = a[1].B[0] - b[1].B[0];
x[1].B[1] = a[1].B[1] - b[1].B[1];
}
/*--------------------------------------------------------*/
/* whole field-valued operators */
/*--------------------------------------------------------*/
void source_field(Jy,xa,xb,omega,sigma,mu,epsilon,f_star)
double Jy[2],epsilon[2];
/* complex */
double xa,xb,omega,sigma,mu; /* real*/
field f_star[2];
/* field over whole surface */
{
double x[2],y[2],a[2],b[2],e[2],k[2],Hz[2],Ey[2];
x[0]= mu;
x[1]= 0.0;
y[0]= epsilon[0];
y[1]= epsilon[1]-sigma/omega;
complex_sqrt(x,a);
complex_sqrt(y,b);
a[0]=2.0*a[0];
a[1]=2.0*a[1];
b[0]=2.0*b[0];
b[1]=2.0*b[1];
complex_divide(Jy,a,x);
complex_divide(Jy,b,y);
wavenumber(omega,sigma,mu,epsilon,k);
emikx(k,xa,e);
complex_multiply(x,e,Hz);
complex_multiply(y,e,Ey);
set_field(Hz,Ey,omega,sigma,mu,epsilon,f_star);
emikx(k,xb,e);
complex_multiply(x,e,Hz);
complex_multiply(y,e,Ey);
set_field(Hz,Ey,omega,sigma,mu,epsilon,f_star+1);
}
/*--------------------------------------------------------*/
void RQ(f,s_scale,t_scale,x)
/* x=RQf */
field f[2],x[2];
/* field over whole surface */
double s_scale[2],t_scale[2]; /* complex */
{
complex_multiply(s_scale,f[0].A,x[0].A);
complex_multiply(t_scale,f[0].B,x[0].B);
complex_multiply(s_scale,f[1].A,x[1].A);
complex_multiply(t_scale,f[1].B,x[1].B);
}
/*--------------------------------------------------------*/
void half_I_plus_RQ(f,s_scale,t_scale,x) /* x=0.5*(I+RQ)f */
field f[2],x[2];
/* field over whole surface */
double s_scale[2],t_scale[2];
/* complex */
{
field RQf[2];
RQ(f,s_scale,t_scale,RQf);
half_add_field(f,RQf,x);
half_add_field(f+1,RQf+1,x+1);
}
/*--------------------------------------------------------*/
void half_I_minus_RQ(f,s_scale,t_scale,x) /* x=0.5*(I-RQ)f */
field f[2],x[2];
/* field over whole surface */
double s_scale[2],t_scale[2];
/* complex */
{
field RQf[2];
RQ(f,s_scale,t_scale,RQf);
half_subtract_field(f,RQf,x);
half_subtract_field(f+1,RQf+1,x+1);
}
/*--------------------------------------------------------*/
void boundary_data(f_star,s_scale,t_scale,g)
/* x=-0.5*(I+RQ)f_star */
field f_star[2],g[2];
/* field over whole surface */

164
Appendix C: C Code for One-Dimensional Solution
double s_scale[2],t_scale[2];
/* complex */
{
field RQf[2];
RQ(f_star,s_scale,t_scale,RQf);
half_add_field(f_star,RQf,g);
half_add_field(f_star+1,RQf+1,g+1);
invert_whole_field(g);
}
/*--------------------------------------------------------*/
void Pp(f,k,bma,x)
/* x=Pˆ(+)f */
field f[2],x[2]; /* field over whole surface */
double k[2];
/* complex */
double bma;
{
double e[2];
field fa[1],fb[1],ef[1];
emikx(k,bma,e);
one_minus_ie0e1(f,fa);
one_plus_ie0e1(f+1,fb);
complex_scale_field(e,fb,ef);
half_add_field(fa,ef,x);
one_plus_ie0e1(f+1,fb);
one_minus_ie0e1(f,fa);
complex_scale_field(e,fa,ef);
half_add_field(fb,ef,x+1);
}
/*--------------------------------------------------------*/
void Pm(f,k,bma,x)
/* x=Pˆ(-)f */
field f[2],x[2]; /* field over whole surface */
double k[2];
/* complex */
double bma;
{
double e[2];
field fa[1],fb[1],ef[1];
emikx(k,bma,e);
one_plus_ie0e1(f,fa);
one_plus_ie0e1(f+1,fb);
complex_scale_field(e,fb,ef);
half_subtract_field(fa,ef,x);
one_minus_ie0e1(f+1,fb);
one_minus_ie0e1(f,fa);
complex_scale_field(e,fa,ef);
half_subtract_field(fb,ef,x+1);
}
/*--------------------------------------------------------*/
/* whole-surface field-valued iterations */
/*--------------------------------------------------------*/
void f2_plus(f1_minus,f0_plus,s_scale,t_scale,g,k_plus,bma,x)
field f1_minus[2],f0_plus[2],g[2],x[2];
double bma;
double s_scale[2],t_scale[2],k_plus[2];
/* x = Pˆ(++)[0.5(I+RQ)f1ˆ(-)-g+0.5(I+RQ)f0ˆ(+)] */
{
field x1[2],x2[2],x3[2],x4[2];
half_I_plus_RQ(f1_minus,s_scale,t_scale,x1);
half_I_plus_RQ(f0_plus,s_scale,t_scale,x3);
subtract_whole_field(x1,g,x2);
add_whole_field(x2,x3,x4);
Pp(x4,k_plus,bma,x);
}
/*--------------------------------------------------------*/
void f3_minus(f2_plus,f1_minus,s_scale,t_scale,g,k_minus,bma,x)
field f2_plus[2],f1_minus[2],g[2],x[2];

Appendix C: C Code for One-Dimensional Solution
165
double bma;
double s_scale[2],t_scale[2],k_minus[2];
/* x = Pˆ(--)[0.5(I-RQ)f2ˆ(+)+g+0.5(I-RQ)f1ˆ(-)] */
{
field x1[2],x2[2],x3[2],x4[2];
half_I_minus_RQ(f2_plus,s_scale,t_scale,x1);
half_I_minus_RQ(f1_minus,s_scale,t_scale,x3);
add_whole_field(x1,g,x2);
add_whole_field(x2,x3,x4);
Pm(x4,k_minus,bma,x);
}
/*--------------------------------------------------------*/
/* single whole surface field-valued update */
/*--------------------------------------------------------*/
void update(f_minus,f_plus,s_scale,t_scale,g,k_minus,k_plus,bma,x_minus,x_plus)
field f_minus[2],f_plus[2],g[2],x_minus[2],x_plus[2];
double bma;
double s_scale[2],t_scale[2],k_minus[2],k_plus[2];
{
f2_plus(f_minus,f_plus,s_scale,t_scale,g,k_plus,bma,x_plus);
f3_minus(x_plus,f_minus,s_scale,t_scale,g,k_minus,bma,x_minus);
}
/*--------------------------------------------------------*/
static double err_old;
/*--------------------------------------------------------*/
double error(n,f_minus,f_plus,s_scale,t_scale,g)
int n;
double s_scale[2],t_scale[2];
field f_minus[2],f_plus[2],g[2];
{
field g_approx[2],g_error[2],a_approx[2],b_approx[2];
double err;
half_I_plus_RQ(f_minus,s_scale,t_scale,b_approx);
half_I_minus_RQ(f_plus,s_scale,t_scale,a_approx);
subtract_whole_field(b_approx,a_approx,g_approx);
subtract_whole_field(g_approx,g,g_error);
err=rms_field(g_error)/rms_field(g);
if(n==1) err_old=err;
printf("%d %e %e %e\n",n,err,err/err_old,pow(err,1.0/n));
err_old=err;
return(err);
}
/*--------------------------------------------------------*/
/* multiple whole surface field-valued update */
/*--------------------------------------------------------*/
void iterate(n,s_scale,t_scale,g,k_minus,k_plus,bma,x_minus,x_plus)
int n;
field g[2],x_minus[2],x_plus[2];
double bma;
double s_scale[2],t_scale[2],k_minus[2],k_plus[2];
{
field f_minus_old[2],f_plus_old[2],f_minus_new[2],f_plus_new[2];
double err,old_err;
int i;
guess_f_minus(f_minus_old);
guess_f_plus(f_plus_old);
old_err=error(1,f_minus_old,f_plus_old,s_scale,t_scale,g);
update(f_minus_old,f_plus_old,s_scale,t_scale,g,k_minus,k_plus,bma,f_minus_new,f_plus_new);
err=error(2,f_minus_new,f_plus_new,s_scale,t_scale,g);
for(i=3;i<=n;i++)
{
copy_whole_field(f_minus_new,f_minus_old);
copy_whole_field(f_plus_new,f_plus_old);
old_err=err;
update(f_minus_old,f_plus_old,s_scale,t_scale,g,k_minus,k_plus,bma,f_minus_new,f_plus_new);
err=error(i,f_minus_new,f_plus_new,s_scale,t_scale,g);
}

166
Appendix C: C Code for One-Dimensional Solution
copy_whole_field(f_minus_new,x_minus);
copy_whole_field(f_plus_new,x_plus);
printf("# %d error = %e, rate of convergence = %e\n",i-1,err,err/old_err);
printf("# dissipation, imag(k)/real(k) = %e\n",k_plus[1]/k_plus[0]);
printf("### %e %e %e %e\n",err/old_err,gain_dB(k_plus),contrast(k_minus,k_plus),k_plus[1]);
printf("\n\n");
}
/*--------------------------------------------------------*/
/* whole solution */
/*--------------------------------------------------------*/
void solve(a,b,omega,mu_minus,epsilon_minus,sigma_minus,mu_plus,epsilon_plus,sigma_plus)
double a,b;
/* real */
double omega;
/* real */
double mu_minus,mu_plus;
/* real */
double epsilon_minus[2],epsilon_plus[2]; /* complex */
double sigma_minus,sigma_plus;
/* real */
{
double k_minus[2],k_plus[2];
/* complex */
double t_scale[2],s_scale[2];
/* complex */
double Jy[2];
/* complex */
field g[2],f_star[2],f_minus[2],f_plus[2];
/* fields over whole surface */
double bma,lambda,v,gdB;
int n;
bma=b-a;
wavenumber(omega,sigma_minus,mu_minus,epsilon_minus,k_minus);
wavenumber(omega,sigma_plus,mu_plus,epsilon_plus,k_plus);
lambda=wavelength(k_minus);
v=velocity(omega,k_minus);
gdB=gain_dB(k_minus);
printf("# region (-): wavelength = %e m, velocity = %e m/s, gain = %e dB/m.\n",lambda,v,gdB);
lambda=wavelength(k_plus);
v=velocity(omega,k_plus);
gdB=gain_dB(k_plus);
printf("# region (+): wavelength = %e m, velocity = %e m/s, gain = %e dB/m.\n",lambda,v,gdB);
space_factor(mu_plus,mu_minus,s_scale);
time_factor(omega,sigma_plus,sigma_minus,epsilon_plus,epsilon_minus,t_scale);
Jy[0]=1.0;
Jy[1]=0.0;
source_field(Jy,a,b,omega,sigma_minus,mu_minus,epsilon_minus,f_star);
boundary_data(f_star,s_scale,t_scale,g);
n=50;
iterate(n,s_scale,t_scale,g,k_minus,k_plus,bma,f_minus,f_plus);
}
/*--------------------------------------------------------*/
#define MU0
(4.0e-7*M_PI)
#define C0
(299792458.0)
#define EPS0 (1.0/(MU0*C0*C0))
/*--------------------------------------------------------*/
void get_specifications(argc,argv,mu_plus,epsilon_plus,sigma_plus,b,omega)
int argc; char **argv;
double *mu_plus,epsilon_plus[2],*sigma_plus,*b,*omega;
{
double mu_mu0,eps_eps0,sigma,b_lambda0,f,tan_delta;
int i;
if(argc!=7)
{
printf("found
%d arguments:",argc-1);
for(i=1;i<argc;i++)
{
printf(" %s",argv[i]);
}
printf("\nrequire 6 arguments: ");
printf("mu/mu_0 epsilon/epsilon_0 tan(delta) sigma thickness/lambda_0 frequency\n");
printf("example (gold): one
1
1
0
4.5e7
10
2e9\n");
printf("
(diamond): one
1
5.87
0.0002
1e-11
10
2e9\n");

Appendix C: C Code for One-Dimensional Solution
167
printf("
(sea water): one
1
81
0
5.3088
10
2e9\n");
exit(0);
}
sscanf(argv[1],"%lf",&mu_mu0);
sscanf(argv[2],"%lf",&eps_eps0);
sscanf(argv[3],"%lf",&tan_delta);
sscanf(argv[4],"%lf",&sigma);
sscanf(argv[5],"%lf",&b_lambda0);
sscanf(argv[6],"%lf",&f);
(*mu_plus)=mu_mu0*MU0;
epsilon_plus[0]=eps_eps0*EPS0;
epsilon_plus[1]=-tan_delta*epsilon_plus[0];
(*sigma_plus)=sigma;
(*b)=b_lambda0*C0/f;
(*omega)=2.0*M_PI*f;
}
/*--------------------------------------------------------*/
int main(argc,argv)
int argc; char **argv;
{
double a,b,f;
/* real */
double omega;
/* real */
double mu_minus,mu_plus;
/* real */
double epsilon_minus[2],epsilon_plus[2]; /* complex */
double sigma_minus,sigma_plus;
/* real */
int i;
a=0.0;
/* metres
*/
mu_minus=MU0;
/* Henries per metre
*/
epsilon_minus[0]=EPS0; /* Farads per metre
*/
epsilon_minus[1]=0.0;
sigma_minus=0.0;
/* 1/(Ohms) per metre */
get_specifications(argc,argv,&mu_plus,epsilon_plus,&sigma_plus,&b,&omega);
f=omega/(2.0*M_PI);
printf("# frequency = %e Hz.\n",f);
printf("# region (-): rel. permeability %f\n",mu_minus/MU0);
printf("# region (-): rel. permittivity %f, loss tangent %e (bound+free charge).\n",
epsilon_minus[0]/EPS0,-epsilon_minus[1]/epsilon_minus[0]);
printf("# region (-): conductivity %e (1/ohm)/m, loss tangent %e (free charge).\n",
sigma_minus,sigma_minus/(omega*epsilon_minus[0]));
printf("# region (+): thickness %e m, %e wavelengths.\n",b,b*f/C0);
printf("# region (+): rel. permeability %f.\n",mu_plus/MU0);
printf("# region (+): rel. permittivity %f, loss tangent %e (bound+free charge).\n",
epsilon_plus[0]/EPS0,-epsilon_plus[1]/epsilon_plus[0]);
printf("# region (+): conductivity %e (1/ohm)/m, loss tangent %e (free charge).\n",
sigma_plus,sigma_plus/(omega*epsilon_plus[0]));
solve(a,b,omega,mu_minus,epsilon_minus,sigma_minus,mu_plus,epsilon_plus,sigma_plus);
return(0);
}
/*--------------------------------------------------------*/

References
1. Maxwell JC (1873) A treatise on electricity and magnetism, vol 2. Clarendon Press, Oxford
2. Axelsson A, Grognard R, Hogan J, McIntosh A (2001) Harmonic analysis of Dirac operators
on Lipschitz domains. In: Brackx F (ed) Clifford analysis and its applications. NATO science
series II, mathematics physics and chemistry, vol 25. Kluwer, Dordrecht, pp 231–246
3. Clifford WK (1878) Applications of Grassmann’s extensive algebra. Am J Math 1(4):350–358
4. Chisholm M (2002) Such silver currents: the story of William and Lucy Clifford 1845–1929.
Lutterworth Press, Cambridge
5. Sir William RH (1844) On quaternions; or on a new system of imaginaries in algebra. Philos
Mag J Sci 25:10–13
6. Grassmann H (1995) The extension theory of 1844. A new branch of mathematics: the aus-
dehnungslehre of 1844, and other works. Open Court, Chicago, pp 2–295 (translated by Lloyd
C. Kannenberg)
7. GrassmannH(2000)Extensiontheory.Historyofmathematics,vol19.AmericanMathematical
Society, Providence
8. Cauchy BA (1841) Résumé d’un mémoire sur la mécanique céleste et sur un nouveau calcul
appelé calcul des limites. In: Bachelier (ed) Exercices d’Analyse et de Physique Mathématique,
vol 2. Bachelier, Paris, pp 41–98
9. Smithies F (1997) Cauchy and the creation of complex function theory. Cambridge University
Press, Cambridge
10. McIntosh A (1989) Clifford algebras and the higher-dimensional Cauchy integral. In: Ciesielski
Z (ed) Approximation and function spaces., number 22 in BCP seriesBanach Center Publica-
tions, Warsaw, pp 253–267
11. McIntosh A (1996) Clifford algebras, Fourier theory, singular integrals and harmonic functions
on Lipschitz domains. In: Ryan J (ed) Clifford algebras in analysis and related topics. Studies
in advanced mathematics, vol 21. CRC Press, Boca Raton, pp 33–87
12. Andraes A (2002) Transmission problems for Dirac’s and Maxwell’s equations with Lipschitz
Interfaces. Ph.D. thesis, Australian National University, Canberra, Australia
13. Wilson EB (1901) Vector analysis: a text-book for the use of students of mathematics and
physics. Charles Scribner’s Sons, New York
14. Heaviside O (1893) Electromagnetic theory, vol 1. The Electrician Printing and Publishing
Company, London
15. Gill F (1925) Oliver Heaviside. Bell Syst Tech J 4:349–354
16. Unz H (1963) Oliver heaviside (1850–1925). IEEE Trans Educ 6(1):30–33
17. Grassmann H (1855) Sur les différents genres de multiplication. Journal für die reine und
angewandte Mathematik 49:123–141
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8
169

170
References
18. Grassmann H (1877) Der ort der Hamilton’schen quaternionen in der Ausdehnungslehre. Math
Ann 12:375–386
19. Grassmann H (1995) On the various types of multiplication. A new branch of mathematics:
the ausdehnungslehre of 1844, and other works. Open Court, Chicago, pp 451–468 (translated
by Lloyd C. Kannenberg)
20. Grassmann H (1995) The position of the Hamiltonian quaternions in extension theory. A new
branch of mathematics: the ausdehnungslehre of 1844, and other works. Open Court, Chicago,
pp 525–538 (translated by Lloyd C. Kannenberg)
21. Einstein A (1905) Zur elektrodynamik bewegter körper. Annalen der Physik 322:891–921
22. Seagar A (2012) Calculation of electromagnetic ﬁelds in three dimensions using the Cauchy
integral. IEEE Trans Mag 48(2):175–178
23. Kaczmarz S (1937) Angenäherte auﬂösung von systemen linearer gleichungen. Bulletin Inter-
national de l’Académie Polonaise des Sciences et des Lettres. Classe des Sciences Mathéma-
tiques et Naturelles. Serie A. Sciences Mathématiques 35:355–357
24. Kaczmarz S (1993) Approximate solutions of systems of linear equations. Int J Control
57(6):1269–1271
25. Richardson LF (1911) The approximate arithmetical solution by ﬁnite differences of physical
problems involving differential equations, with an application to the stresses in a masonry dam.
Philos Trans R Soc Lond A 210(459–470):307–357
26. Richardson LF, Arthur Gaunt J (1927) The deferred approach to the limit. Philos Trans R Soc
Lond A 226(636–646):299–361
27. Badea C, Grivaux S, Müller V (2010) The rate of convergence in the method of alternating
projections. Arxiv.Org. arXiv:1006.2047v1 [math.FA]
28. Badea C, Lyubich Y (2010) Geometric, spectral and asymptotic properties of averaged products
of projections in Banach spaces. Arxiv.Org. arXiv:1006.2052v2 [math.FA]
29. Ramo S, Whinnery JR, van Duzer T (1965) Fields and waves in communication electronics.
Wiley, New York
30. Hestenes D (1993) Differential forms in geometric calculus. In: Brackx F (ed) Clifford alge-
bras and their applications in mathematical physics. Fundamental theories of physics, vol 55.
Kluwer, Dordrecht, pp 269–285
31. Ryan J, Struppa D (1998) Dirac operators in analysis. Pitman research notes in mathematics,
vol 394. Longman, Harlow
32. Dirac PAM (1928) The quantum theory of the electron. Proc R Soc Ser A, Contain Pap Math
Phys Character 117(778):610–624
33. Dirac PAM (1930) A theory of electrons and protons. Proc R Soc Ser A, Contain Pap Math
Phys Character 126(801):360–365
34. McIntosh A, Mitrea M (1999) Clifford algebras and Maxwell’s equations in Lipschitz domains.
Math Methods Appl Sci 22(18):1599–1620
35. Pompeiu D (1912) Sur une class de fonctions d’une variable complexe. Rendiconti del Circolo
Matematico di Palermo 33(1):108–113
36. Pompeiu D (1913) Sur une class de fonctions d’une variable complexe et sur certaines équations
intégrales. Rendiconti del Circolo Matematico di Palermo 35(1):277–281
37. Mitrea M (1996) Hypercomplex variable techniques in harmonic analysis. In: Ryan John (ed)
Clifford algebras in analysis and related topics. Studies in advanced mathematics, vol 21. CRC
Press, Boca Raton, pp 103–128
38. Sprössig W (1998) On the treatment of classes of nonlinear boundary value and extension
problems by Clifford analytic methods. In: Ryan John, Struppa Daniele (eds) Dirac operators
in analysis. Pitman research notes in mathematics, vol 394. Longman, Harlow, pp 58–74
39. Chantaveerod A, Seagar AD, Angkaew T (2007) Calculation of electromagnetic ﬁeld with
integral equation based on Clifford algebra. Progress in electromagnetic research symposium
(PIERS’07). Prague, Czech Republic, pp 62–71. 27–30 Aug 2007
40. Chantaveerod A (2009) Analysis and applications of multi-dimensional cauchy integral equa-
tion based on clifford number to scattering and radiation of electromagnetic ﬁelds. Ph.D. thesis,
Chulalongkorn University, Bangkok, Thailand

References
171
41. Tsai LL, Dudley DG, Wilton DR (1974) Electromagnetic scattering by a three-dimensional
rectangular conducting box. J Appl Phys 45(10):4393–4400
42. McGahan RV (1985) Scattering experiments at the Ipswich electromagnetic measurements
facility: Backscatter from metal cubes. Technical Report RADC-TR-85-24, Rome Air Devel-
opment Center, Grifﬁss Air Force Base, US-NY
43. Yaghjian AD, McGahan RV (1985) Broadside radar cross section of the perfectly conducting
cube. IEEE Trans Antennas Propag 33(3):321–329
44. Horner WG (1819) A new method of solving numerical equations of all orders, by continuous
approximation. Philos Trans R Soc Lond 109:1308–1335
45. KnuthDE(1969)Theartofcomputerprogramming,seminumericalalgortihms,vol2.Addison-
Wesley, Reading
46. Quarteroni A, Sacco R, Saleri F (2000) Numerical mathematics. Texts in Applied Mathematics,
vol 37. Springer, New York
47. Wilkinson JH (1963) Rounding errors in algebraic processes., Notes on applied science No.
32Her Majesty’s Stationary Ofﬁce, London
48. Chantaveerod A, Seagar A (2009) Iterative solutions for electromagnetic ﬁelds at perfectly
reﬂective and transmissive interfaces using Clifford algebra and the multi-dimensional Cauchy
integral. IEEE Trans Antennas Propag 57(11):3489–3499
49. Badea C, Grivaux S, Müller V (2012) The rate of convergence in the method of alternating
projections. St. Petersbg Math J 23(3):413–434
50. Coppersmith D, Winograd S (1982) On the asymptotic complexity of matrix multiplication.
SIAM J Comput 11(3):472–492
51. Iliopoulos CS (1989) Worst-case complexity bounds on algorithms for computing the canonical
structure of ﬁnite Abelian groups and the Hermite and Smith normal forms of an integer matrix.
SIAM J Comput 18(4):658–669
52. Strassen V (1969) Gaussian elimination is not optimal. Numerische Mathematik 13(4):354–356
53. Harrington RF (1968) Field computation by moment methods. Macmillan, New York (reprinted
John Wiley 1993)
54. Harrington RF (1987) The method of moments in electromagnetics. J Electromagn Waves Appl
1(3):181–200
55. Davidson DB (2010) Computational electromagnetics for RF and microwave engineering, 2nd
edn. Cambridge University Press, Cambridge
56. Thomas R, Pär I, Anders B (2013) Computational electromagnetics. Texts in applied mathe-
matics, vol 51. Springer, New York
57. KomechAI,SchubinMA(1999)Elementsofthemoderntheoryofpartialdifferentialequations.
Springer, Berlin
58. Reutskiy SY (2006) The method of fundamental solutions for Helmholtz eigenvalue problems
in simply and multiply connected domains. Eng Anal Bound Elem 30(3):150–159
59. SeagarA,ChantaveerodA(2015)AnEMscatteringalgorithmforallmaterials.In:International
conference on electromagnetics in advanced applications (ICEAA’15). Turin, Italy, p 256–259.
7–11 Sept 2015
60. Ergül Ö, Gürel L (2007) Fast and accurate solutions of scattering problems involving dielectric
objects with moderate and low contrasts. In: Computational electromagnetics workshop, 2007.
Izmir, Turkey, pp 59–64. 30–31 Aug 2007
61. Ergül Ö, Gürel L (2007) Accurate solutions of scattering problems involving low-contrast
dielectric objects with surface integral equations. In: The second european conference on
antennas and propagation (EuCAP 2007). Edinburgh, pp 1–6. 11–16 Nov 2007
62. Rao SM, Wilton DR, Glisson AW (1982) Electromagnetic scattering by surfaces of arbitrary
shape. IEEE Trans Antennas Propag 30(3):409–418
63. Rao SM, Wilton DR (1990) E-ﬁeld, H-ﬁeld, and combined ﬁeld solution for arbitrarily shaped
three-dimensional dielectric bodies. Electromagnetics 10(4):407–421
64. Ylä-Oijala P, Taskinen M (2003) Calculation of CFIE impedance matrix elements with RWG
and n × RWG functions. IEEE Trans Antennas Propag 51(8):1837–1846

172
References
65. Lloyd TW, Song JM, Yang M (2005) Numerical study of surface integral formulations for
low-contrast objects. IEEE Antennas Wirel Propag Lett 4(1):482–485
66. Ylä-Oijala P (2008) Numerical analysis of combined ﬁeld integral equation formulations for
electromagnetic scattering by dielectric and composite objects. Prog Electromagn Res C 3:19–
43
67. Seagar AD, Grognard RJ-M (1991) Simulation of current ﬂow in piecewise constant media.
Australas Phys Eng Sci Med 14(4):204–212
68. Auscher P, Hofmann S, Lacey M, Lewis J, McIntosh A, Tchamitchian P (2001) The solution
of the Kato’s conjectures. Comptes Rendus de l’Académie des Sciences 332(7):601–606
69. Auscher P, Hofmann S, Lacey M, McIntosh A, Tchamitchian P (2002) The solution of the Kato
square root problem for second order elliptic operators on Rn. Ann Math 156(2):633–654
70. Tchamitchian P (2001) The solution of Kato’s conjecture (after Auscher, Hofmann, Lacey,
McIntosh and Tchamitchian). Journées Équations aux Dérivées Partielles, pp 1–14
71. MatWeb LLC. MatWeb material property data (2015). http://www.matweb.com. Accessed 11
Feb 2015
72. Lide DR (1997) CRC handbook of chemistry and physics, 78th edn. CRC Press, Boca Raton
73. Aylward GH, Findlay TJV (1971) SI chemical data. Wiley, Sydney
74. Kinchin GH (1953) The electrical properties of graphite. Proc R Soc Lond Ser A, Math Phys
Sci 217(1128):9–26
75. Grove AS (1967) Physics and technology of semiconductor devices. Wiley, New York
76. Washburn EW (1929) International critical tables of numerical data, physics, chemistry and
technology, vol 6. McGraw Hill, New York
77. Kaye GWC, Laby TH (1995) Tables of physical and chemical constants, 16th edn. Longman
Scientiﬁc & Technical, Essex
78. Jain H, Nowick AS (1982) Electrical conductivity of synthetic and natural quartz crystals. J
Appl Phys 53(1):477–484

Index
A
Absolute unit, 18
Accuracy, of integral off boundary, 106
Addition, 22
Afﬁne geometry, 49
Algebra, geometric, 10
Analytic function, 87
Angle, hyperbolic, 61
Angular frequency, 75
Areal derivative, 78
Arithmetic, 17
Arithmetic operator, 21
Axes
coordinate, 50
non-coordinate, 49
B
Banach space, 49, 51
Bessel potential, 99
in one dimension, 130
Binomial series, 113
Bivector
grade of, 18
splitting of, 43
Boundary condition, 90, 91
in Clifford form
partial transmission and reﬂection, 96
perfect reﬂection, 92
perfect transmission, 93
in vector form, 90
Boundary theorem, 97
C
Cauchy
extension, 102, 103
in one dimension, 132
integral, 87, 97, 103, 104
in one dimension, 133
kernel, 101
in one dimension, 132
Central product, 7, 11, 25
interdependence of, 8
Characteristic impedance, 86
Charge density, 13, 70
surface, 91
Circuit, equivalent, 143
Circular multiplication, 7, 8
Classical electromagnetism, 69
Clifford algebra, 9
electromagnetic potential in, 72
Maxwell’s equations in, 70, 71
Clifford conjugation, 21, 22
Clifford number, 17, 20
alternative expressions of, 11
four-dimensional, 11
Clifford vector, 11, 19
Coefﬁcient
of Clifford number, 17
of reﬂection, 86
of transmission, 86
Complementary image, 119
Complete, see Perfect
reﬂection, 87
transmission, 87
Complex
constraint equations, 9
number, 9
signal, 75
Components
number of, 17
of Clifford number, 17, 18
Computation, 30
© Springer Science+Business Media Singapore 2016
A. Seagar, Application of Geometric Algebra to Electromagnetic Scattering,
DOI 10.1007/978-981-10-0089-8
173

174
Index
example, 32, 33
Computational
effort for general solution, 120
procedure for general solution, 120
Conditions for solution, 88
Conductivity, electrical, 87, 95
Conductor, good, 87
Constraint equations, 7, 17
complex, 9
quaternion, 9
seven kinds, 23
Construction of general solution, 117
Conventions, 8, 17, 25
Convergence, 57, 123, 134–136
Coordinate axes, 50
transformation of, 51
Coordinate system
non-orthogonal, 51
orthogonal, 49
Coordinate systems, 48
Coordinates in space–time, 62
Cross product, 10
Cubic surface, 105
Curl, 14, 70, 77
Current
displacement, 87
Ohmic, 87
Current density, 13, 70
surface, 91
D
D’Alembertian, 73, 77
Delta function, Dirac, 98
Density
charge, 70
current, 70
Derivative
areal, 78
of product, 78
Pompeiu, 78
Dielectric, lossless, 87
Differential operator, 14, 76, 77
Clifford vector, 13, 77
curl, 77
Dirac, 77
divergence, 77
gradient, 77
Helmholtz, 77
hyperbolic Dirac, 77
k-Dirac, 77
Laplacian, 77
spatio-temporal, 63, 65, 66, 70
vector, 13, 77
Dimensional recursion, 28
Dipole source, 104, 105
Dirac
delta function, 98
derivative of product, 80
Dirac operator, 76
history, 76
hyperbolic, 77
in one dimension, 129
k-Dirac, 77
perturbed, 77
Displacement current, 87
Divergence, 14, 70, 77
Domain
frequency, 75
time, 70
Dot product, 10, 25
Duality, 25, 33
E
Effective permittivity, 87, 95
Electric
conductivity, 87, 95
ﬁeld, 13, 70
in moving frame, 67
ﬂux density, 70
permittivity, 13, 70
potential, scalar, 72
Electrodynamics, quantum, 69
Electromagnetic ﬁeld, 14, 71
from potential, 72
in Clifford algebra, 71
in moving frame, 66
in one dimension, 131
Lorentz transform of, 67
monochromatic, 75
Electromagnetic potential, in Clifford alge-
bra, 72
Electromagnetic quantities, 13
as Clifford and quaternion phasors, 75
as Clifford variables and quaternions, 73
Electromagnetic source, 14, 71, 85, 104
in Clifford algebra, 71
Electromagnetism, classical, 69
Element
generating, 3
intermediate, 3
of the continuous form, 3
Equivalent
circuit, 143
graph, 142

Index
175
Euclidean geometry, 49
Evolution, 3, 4
as integration, 4
result of, 3
Evolved unit, 19
Example, 32, 33, 40
in one dimension, 127
integral off boundary, 104
of scattering, 86
with bivector
projection, 43
rotation, 48
with vector
projection, 41
reﬂection, 40
rotation, 46
Extension, 3
F
Field, see Radiation, see Wave
electric, see Electric ﬁeld
electromagnetic, 71, see also Electro-
magnetic ﬁeld
magnetic, see Magnetic ﬁeld
splitting into components, 73
Flux density
electric, 70
magnetic, 70
Frames
in space–time, 60, 61
moving, 60
transformations between, 60
Frequency domain, 75
Function
analytic, 87
monogenic, 87
Fundamental
solution, 98
in one dimension, 130
of k-Dirac operator, 99, 100
of Helmholtz operator, 99
theorem of calculus, 97
G
General solution, 118
computational effort for, 120
computational procedure for, 120
construction of, 117
Generating element, 3
Generation, measure of, 3
Geometric
algebra, 10, 37
series, 55
Geometry, see Space
afﬁne, 48, 49
Euclidean, 49
Minkowskian, 59
Good conductor, 87
Grade
of bivector, 18
of Clifford number, 18
of scalar, 18
of trivector, 18
of vector, 18
zero, 18, 19
Gradient, 77
in space–time, 65
Graph, equivalent, 142
Grassmann, 3
H
Hankel function, 99
Hardy projections, 88, 109
in one dimension, 133
partial reﬂection, 111
partial transmission, 111
perfect reﬂection, 110
perfect transmission, 110
Helmholtz operator, 76
fundamental solution of, 99
Hilbert space, 49
History, 3
Hyperbolic
angle, 61
rotation, 61
tangent, 66
I
Imaginary unit, 9
Impedance
characteristic, 86
intrinsic, 87
Incident wave, 85
Inner product, 7, 25
interdependence of, 8
Integral off boundary
accuracy, 106
example, 104
numerical method, 105
practical issues, 107
test case, 104
Integral, Cauchy, 87, 97, 103
Interdependence

176
Index
central product, 8
inner product, 8
outer product, 8
Intermediate element, 3
Intersection
by projection, 54
of hyperplanes, 56
of lines, 54, 55
Intrinsic impedance, 87
Inversion of sign, 21
Involution, 21
J
Joint interface function, 103, 109, 117
solution for, 122
K
k-Dirac operator
fundamental solution of, 99, 100
L
Laplacian, 76, 77
Left inner product, 25
Length, units of, 66
Linear
mapping, 119
system, 54
solution of, 54
Lorentz
condition, 72
transformation, 59, 60, 64
of electromagnetic ﬁeld, 67
Lossless dielectric, 87
M
Machine computation, 30
example, 32, 33
representation of numbers, 31
Magnetic
ﬁeld, 13, 70
in moving frame, 67
ﬂux density, 70
permeability, 13, 70
vector potential, 72
Maxwell’s equations, 69
as phasors, 75
in Clifford algebra, 14, 70, 71
in vector notation, 70
monochromatic, 75
Measure of generation, 3
Monogenic function, 87
Moving frames, 60, see also Relativity, see
also Space–time
Multiplication, 22, 24, see also Product
circular, 7, 8
numerical, 31
recursive, 31
Multivector, 18
N
Negation, 21
Non-coordinate axes, 49
Non-orthogonal coordinates, 51
Norm, 48
Notation, 3, 5, 7, 10–12, 18, 94, 95
differential operator, 77
electromagnetic quantities, 71
special, 77
Number, 17, 20
coefﬁcient of, 17
component of, 17, 18
grade of, 18
recursive construction of, 28, 29
recursive product of, 29
representation of, 31
structure of, 17
as tree, 30, 31
unit of, 17
Numerical
example, see Example
implementation of product, 28
integral off boundary, 105
test case, 104, 127
O
Ohmic current, 87
One dimension
Bessel potential, 130
Cauchy extension, 132
Cauchy integral, 133
Cauchy kernel, 132
current source, 129
Dirac operator, 129
electromagnetic ﬁeld, 131
fundamental solution, 130
Hardy projections, 133
scattering test case, 128
Operator
arithmetic, 21
d’Alembertian, 73
differential, 76, 77
in space–time, 65

Index
177
Helmholtz, 76
Laplacian, 76
projection, 37, 38
reﬂection, 37, 39
rotation, 37, 38, 44
splitting, 73
Origin, velocity of
in other frame, 62
in space–time, 66
Orthogonal
components of vector, 39
coordinates, 49
Outer product, 3–5, 7, 25
algebraic properties of, 5
anti-commutativity of, 5
associativity of, 6
interdependence of, 8
P
Partial reﬂection, 93, 116
Hardy projections, 111
Partial transmission, 93, 116
Hardy projections, 111
Perfect reﬂection, 91, 95, 113
Hardy projections, 110
Perfect transmission, 92, 95, 115
Hardy projections, 110
Permeability, magnetic, 70
Permittivity
effective, 87, 95
electric, 13, 70
Phasor, 75
Physical units, 66
Points in space–time, 60
in multiple frames, 62, 63
moving, 64
Pompeiu’s derivative, 78
Potential
Bessel, 99, 130
electromagnetic, 72
scalar electric, 72
vector magnetic, 72
Poynting’s theorem, 131
Practical issues
computational effort, 120
convergence, 123, 134–136
integral off boundary, 107
machine computation, 30
speed, 123, 134, 135
Primal unit, 19
Product, see Multiplication
central, 7, 11, 25
cross, 10
dot, 10, 25
general, 23
inner, 7, 25
left, 25
right, 25
interdependence of, 8
of units, 17
outer, 3–5, 7, 25
recursive, 29
scalar, 25
vector, 10
wedge, 5
Projection, 38
Hardy, 109
of bivector, example, 43
of vector, 38
example, 41
Projection operator, 37, 38
special pair of, 38, 39
Q
Quantum electrodynamics, 69
Quaternion, 9
as scalar plus vector, 11
constraint equations, 9
scalar part of, 11
units, 9
vector part of, 11
R
Radiation, see Field, see Wave
scattering of, 85
Recursion, 28
Recursive
construction, 28, 29
multiplication, 31
product, 29
Reﬂected wave, 85
Reﬂection, 38
coefﬁcient, 86
complete, 87
of vector, 38
example, 40
operator, 37, 39
partial, 93, 116
perfect, 91, 95, 113
Related
coordinates, 62
frames, 61
Relativity, see Space–time

178
Index
special theory of, 59
Reproducing formula, 100, 101
Rescaling operator, space-time, 95, 117
Reversion, 21, 22
Right inner product, 25
Rotation
hyperbolic, 61
of bivector, example, 48
of vector, 44
example, 46
operator, 37, 38, 44
S
Scalar
electric potential, 72
grade of, 18
part of quaternion, 11
product, 25
Scale factor
central product, 7
inner product, 7
space–time, 66
Scattered wave, 85
Scattering, 85
cases of, 88, 90
example of, 86, 127
from multiple objects, 141, 142
multiple regions, 88
of radiation, 85, 86
in toto, 88
absence of, 88
Series
binomial, 113
geometric, 55
Sign, inversion of, 21
Solution, see General solution
conditions for, 88
fundamental, 98
general, 118
Source
dipole, 104
electromagnetic, 14
electromagnetic ﬁeld, 71
in one dimension, 129
of ﬁeld, 70
of radiation, 85
Space, see Geometry
Banach, 48, 49, 51
Euclidean, 48
Hilbert, 48, 49
Space–time, 59, see also Relativity
coordinates in, 62
derivatives in, 63
differential operator, 66
frames in, 61
gradient in, 65
points in, 60
rescaling operator, 95, 117
Spatial basis vector, 63
Spatio-temporal differential operator, 70
Special
relativity, theory of, 59
symbol, 13
Speed of convergence, 123, 134, 135
Splitting, 109
of bivector, 43
of vector, 38
the ﬁeld, 73
Splitting operator, 73
boundary data, 74
for even grades, 74
for odd grades, 74
space-like, 74
time-like, 74
Structure of Clifford numbers, 17
Subtraction, 22
System, linear, 54
T
Temporal basis vector, 63
Test case
scattering in one dimension, 128
integral off boundary, 104
Time
domain, 70
unit of, 66
Topology, 142
Transformation
between coordinate axes, 51
between frames, 60
Lorentz, 59, 60, 64
Transmission
coefﬁcient, 86
complete, 87
line, 86
partial, 93, 116
perfect, 92, 95, 115
Transmitted wave, 85
Tree structure, 30, 31
Trivector, grade of, 18
U
Unit, 18

Index
179
absolute, 18
evolved, 19
imaginary, 9
of Clifford number, 17
of grade one, 19
of grade zero, 18
of length, 66
of time, 66
physical, 66
primal, 19
product of, 17
quaternion, 9
V
Vector, 19
calculus, 10
Maxwell’s equations in, 70
Clifford, 11
grade of, 18
magnetic potential, 72
orthogonal components of, 39
part of quaternion, 11
product, 10
projection of, 38
reciprocal of, 11
reﬂection of, 38
rotation of, 44
spatial basis, 63
splitting of, 38
square of, 11
temporal basis, 63
Velocity
of origin in other frame, 62
of origin in space–time, 66
W
Wave, see Field, see Radiation
equation, 73
incident, 85
plane, 128
reﬂected, 85
scattered, 85
transmitted, 85
Wavenumber, 75
Wedge product, 5

