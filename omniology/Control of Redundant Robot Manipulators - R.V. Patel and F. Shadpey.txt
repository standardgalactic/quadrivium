Lecture Notes
in Control and Information Sciences
316
Editors: M. Thoma · M. Morari

R.V. Patel  F. Shadpey
Control of Redundant
Robot Manipulators
Theory and Experiments
With 94 Figures

Series Advisory Board
F. Allg¨ower · P. Fleming · P. Kokotovic · A.B. Kurzhanski ·
H. Kwakernaak · A. Rantzer · J.N. Tsitsiklis
Authors
Prof. R.V. Patel
University of Western Ontario
Department of Electrical & Computer Engineering
1151 Richmond Street North
London, Ontario
Canada N6A 5B9
Dr. F. Shadpey
Bombardier Inc.
Canadair Division
1800 Marcel Laurin
St. Laurent, Quebec
Canada H4R 1K2
ISSN 0170-8643
ISBN-10
3-540-25071-9 Springer Berlin Heidelberg New York
ISBN-13
978-3-540-25071-5 Springer Berlin Heidelberg New York
Library of Congress Control Number: 2005923294
This work is subject to copyright. All rights are reserved, whether the whole or part of the mate-
rial is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations, recitation,
broadcasting, reproduction on microﬁlm or in other ways, and storage in data banks. Duplication
of this publication or parts thereof is permitted only under the provisions of the German Copyright
Law of September 9, 1965, in its current version, and permission for use must always be obtained
from Springer-Verlag. Violations are liable to prosecution under German Copyright Law.
Springer is a part of Springer Science+Business Media
springeronline.com
© Springer-Verlag Berlin Heidelberg 2005
Printed in Germany
The use of general descriptive names, registered names, trademarks, etc. in this publication does
not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant
protective laws and regulations and therefore free for general use.
Typesetting: Data conversion by author.
Final processing by PTP-Berlin Protago-TEX-Production GmbH, Germany
Cover-Design: design & production GmbH, Heidelberg
Printed on acid-free paper
89/3141/Yu - 5 4 3 2 1 0

PREFACE 
PREFACE 
PREFACE 
PREFACE 
PREFACE 
PREFACE 
PREFACE
To Roshni and Krishna (RVP)
To Lida, Rouzbeh and Avesta (FS)

PREFACE 
PREFACE
This monograph is concerned with the position and force control of
redundant robot manipulators from both theoretical and experimental points
of view. Although position and force control of robot manipulators has
been an area of research interest for over three decades, most of the work
done to date has been for non-redundant manipulators. Moreover, while
both position control and force control problems have received consider-
able attention, the techniques for position control are significantly more
advanced and more successful than those for force control. There are sev-
eral reasons for this: First, the effectiveness and reliability of force control
depends on good models of the environment stiffness. Second, for stability,
servo rates much higher than for position control are needed, especially for
contact with stiff environments. Third, techniques that are based on track-
ing a desired force at the end-effector generally use Cartesian control
schemes that are computationally much more intensive and prone to insta-
bility in the neighborhood of workspace singularities. The fourth factor is
the significantly higher noise that is present in force and torque sensors than
in position sensors. While most commercial force sensors are supplied with
appropriate filters, the delay introduced by the filters can also affect the
accuracy and stability of force control schemes.
A large number of techniques have been developed and used for posi-
tion control such as Proportion-Derivative (PD) or Proprotional-Integral-
Derivative (PID) control, model-based control, e.g., inverse dynamics or
computed torque control, adaptive control, robust control, etc. Most of
these provide closed-loop stability and good tracking performance subject
to various constraints. Several of them can also be shown to have varying
degrees of robustness depending on the extent of the effect of unmodeled
dynamics or dynamic or kinematic uncertainties.
For force or complaint motion control, there are essentially two main
approaches: impedance control and hybrid control. Most techniques cur-
rently available are based on one or other of these approaches or a combina-
tion of the two, e.g., hybrid-impedance control. Impedance control does
Preface

VIII
Preface
not directly control the force of contact but instead attempts to adjust the
manipulator's impedance (modeled as a mass-spring-damper system) by
appropriate control schemes.  For pure position control, the manipulator is
required to have high stiffness and for contact with a stiff environment, the
manipulator’s stiffness needs to be low.  Hybrid control is based on the
decomposition of the control problem into two: one for the position-con-
trolled subspace and the other for the force-controlled subspace.  Hybrid
control works well when the two subspaces are orthgonal to each other.
This decomposition is possible in many practical applications.  However, if
the two subspaces are not orthogonal, then contradictory position and force
control requirements in a particular direction may make the closed-loop
system unstable.
From the point of view of experimental results, there have been numer-
ous papers where various position and, to a lesser extent, force control
schemes have been implemented for industrial as well as research manipu-
lators.  There have also been a number of attempts made to extend position
and force control schemes for non-redundant manipulators to redundant
manipulators.  These extensions are by no means trivial.  The main problem
has been to incorporate redundancy resolution within the control scheme to
exploit the extra degree(s) of freedom to meet some secondary task require-
ment(s).  With the exception of a couple of papers, these secondary tasks
have been postion based rather than force based.  One of the key issues is to
formulate redundancy resolution to address singularity avoidance while sat-
isfying primary as well as secondary tasks.  A number of redundancy reso-
lution schemes are available which resolve redundancy at the velocity or
acceleration level.  In order to formulate a secondary task involving force
control, it is necessary to resolve redundancy at the acceleration level.
However, this leads to the problem that undesirable or unstable motions can
arise due to self motion when the manipulator’s joint velocities are not
included in redundancy resolution.
While considerable work has been done on force and position control
of non-redundant manipulators, the situation for redundant manipulators is
very different.  This is probably because of the fact that there are very few
redundant manipulators available commercially and hardly any are used in
industry.  The complexity of redundancy resolution and manipulator
dynamics for a manipulator with seven or more degrees of freedom (DOF)
also makes the control problem much more difficult, especially from the
point of view of experimental implementation.  Most of the experimental
work done to illustrate algorithms for force and position control of redun-
dant manipulators has been based on planar 3-DOF manipulators.  The

Preface
IX
notable exceptions to this have been the work done at the Jet Propulsion
Laboratory using the 7-DOF Robotics Research Arm and the work pre-
sented in this monograph which uses an experimental 7-DOF isotropic
manipulator called REDIESTRO.
Acknowledgements
Much of the work described in the monograph was carried out as part
of a Strategic Technologies in Automation and Robotics (STEAR) project
on Trajectory Planning and Obstacle Avoidance (TPOA) funded by the
Canadian Space Agency through a contract with Bombardier Inc. The
work was performed in three phases. The phases involved a feasibility
study, development of methodologies for TPOA and their verification
through extensive simulations, and full-scale experimental implementations
on REDIESTRO. Several prespecified experimental strawman tasks were
also carried out as part of the verification process. Additional funding, in
particular for the design, construction and real-time control of REDI-
ESTRO, was provided by the Natural Sciences and Engineering Research
Council (NSERC) of Canada through research grants awarded to Professor
J. Angeles (McGill University) and Professor R.V. Patel.
The authors would like to acknowledge the help and contributions of
several colleagues with whom they have interacted or collaborated on vari-
ous aspects of the research described in this monograph. In particular,
thanks are due to Professor Jorge Angeles, Dr. Farzam Ranjbaran, Dr. Alan
Robins, Dr. Claude Tessier, Professor Mehrdad Moallem, Dr. Costas Bal-
afoutis, Dr. Zheng Lin, Dr. Haipeng Xie, and Mr. Iain Bryson. The authors
would also like to acknowledge the contributions of Professor Angeles and
Dr. Ranjbaran with regard to the REDIESTRO manipulator and the colli-
sion avoidance work described in Chapter 3.
R.V. Patel
F. Shadpey

PREFACE 
CONTENTS
Preface
VII
1. 
Introduction
1
1.1 Objectives of the Monograph. . . . . . . . .. . . . . . . . . . . . . . . . . . . . . 2
1.2 Monograph Outline. . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3
2. 
Redundant Manipulators: Kinematic Analysis 
and Redundancy Resolution.
7
2.1 Introduction . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
2.2 Kinematic Analysis of Redundant Manipulators. . . . . . . . . . . . . . 8
2.3 Redundancy Resolution. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
2.3.1 Redundancy Resolution at the Velocity Level. . . . . . . . . . 9
2.3.1.1 Exact Solution . . . . . . .. . . . . . . . . . . . . . . . . . . . 10
2.3.1.2 Approximate Solution. . . . . . . . . . . . . . . . . . . . . 13
2.3.1.3 Configuration Control. . . . . . . . . . . . . . . . . . . . . 15
2.3.1.4 Configuration Control (Alternatives for
Additional Tasks). . . . . .. . . . . . . . . . . . . . . . . . . . 16
2.3.2 Redundancy Resolution at the Acceleration Level . . . . . 18
2.4 Analytic Expression for Additional Tasks. . . . . . . . . . . . . . . . . . 20
2.4.1 Joint Limit Avoidance (JLA). . . . . . . . . . . . . . . . . . . . . . . 20
2.4.1.1 Definition of Terms and Feasibility Analysis . . 21
2.4.1.2 Description of the Algorithms. . . . . . . . . . . . . . . 23
2.4.1.3 Approach I: Using Inequality Constraints . . . . . 23
2.4.1.4 Approach II: Optimization Constraint. . . . . . . . . 24
2.4.1.5 Performance Evaluation and Comparison . . . . . 25
2.4.2 Static and Moving Obstacle Collision Avoidance. . . . . . . 28
2.4.2.1 Algorithm Description. . . . . . . . . . . . . . . . . . . . . 28
2.4.3 Posture Optimization (Task Compatibility). . . . . . . . . . . 31
2.5 Conclusions . . . . . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . 32
Contents

XII
Contents
3. 
Collision Avoidance for a 7-DOF Redundant Manipulator
35
3.1 Introduction . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
3.2 Primitive-Based Collision Avoidance. .. . . . . . . . . . . . . . . . . . . . 37
3.2.1 Cylinder-Cylinder Collision Detection. . . . . . . . . . . . . . . 38
3.2.1.1 Review of Line Geometry and Dual Vectors . . . 39
3.2.2 Cylinder-Sphere Collision Detection. . . . . . . . . . . . . . . . . 49
3.2.3 Sphere-Sphere Collision Detection. . . . . . . . . . . . . . . . . . 50
3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator. . . 51
3.3.1 Kinematics of REDIESTRO. . . . . . . . . . . . . . . . . . . . . . . 52
3.3.2 Main Task Tracking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53
3.3.2.1 Position Tracking. . . . . .. . . . . . . . . . . . . . . . . . . . 53
3.3.2.2 Orientation Tracking. . .. . . . . . . . . . . . . . . . . . . . 54
3.3.2.3 Simulation Results. . . . .. . . . . . . . . . . . . . . . . . . . 54
3.3.3 Additional Tasks. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
3.3.3.1 Joint Limit Avoidance. .. . . . . . . . . . . . . . . . . . . . 62
3.3.3.2 Stationary and Moving Obstacle Collision
Avoidance 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 62
3.4 Experimental Evaluation using a 7-DOF Redundant
Manipulator . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69
3.4.1 Hardware Demonstration. . . . . . . . . . . . . . . . . . . . . . . . . . 70
3.4.2 Case 1: Collision Avoidance with Stationary Spherical
Objects . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
3.4.3 Case 2: Collision Avoidance with a Moving Spherical
Object. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
3.4.4 Case 3: Passing Through a Triangular Opening. . . . . . . . 73
3.5 Conclusions . . . . . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . 73
4. 
Contact Force and Compliant Motion Control
79
4.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
4.2 Literature Review. . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . 81
4.2.1 Constrained Motion Approach. . . . . . . . . . . . . . . . . . . . . 81
4.2.2 Compliant Motion Control. . . . . . . . . . . . . . . . . . . . . . . . 85
4.3 Schemes for Compliant and Force Control of Redundant
Manipulators . . . . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . . 89
4.3.1 Configuration Control at the Acceleration Level. . . . . . . 91
4.3.2 Augmented Hybrid Impedance Control using the
Computed-Torque Algorithm. . .. . . . . . . . . . . . . . . . . . . . 92
4.3.2.1 Outer-loop design. . . . . . . . . . . . . . . . . . . . . . . . . 92
4.3.2.2 Inner-loop 
. . . . . . . . .. . . . . . . . . . . . . . . . . . . . 94
4.3.2.3 Simulation Results for a 3-DOF Planar Arm . . . 94

Contents
XIII
4.3.3 Augmented Hybrid Impedance Control with
Self-Motion Stabilization. . . . . . . . . . . . . . . . . . . . . . . . 102
4.3.3.1 Outer-Loop Design. . . . . . . . . . . . . . . . . . . . . . . 102
4.3.3.2 Inner-Loop Design. . . . . . . . . . . . . . . . . . . . . . . 104
4.3.3.3 Simulation Results on a 3-DOF Planar Arm . . 107
4.3.4 Adaptive Augmented Hybrid Impedance Control. . . . . . 108
4.3.4.1 Outer-Loop Design. . . . . . . . . . . . . . . . . . . . . . . 108
4.3.4.2 Inner-Loop Design. . . . .. . . . . . . . . . . . . . . . . . . 109
4.3.4.3 Simulation Results for a 3-DOF Planar Arm . . 113
4.4 Conclusions . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
5. 
Augmented Hybrid Impedance Control 
for a 7-DOF Redundant Manipulator
119
5.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119
5.2 Algorithm Extension. .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . 119
5.2.1 Task Planner and Trajectory Generator (TG). . . . . . . . . 120
5.2.2 AHIC module .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . 120
5.2.3 Redundancy Resolution (RR) module. . . . . . . . . . . . . . . 122
5.2.4 Forward Kinematics. . . . . . . . . .. . . . . . . . . . . . . . . . . . . 124
5.2.5 Linear Decoupling (Inverse Dynamics) Controller . . . . 126
5.3 Testing and Verification. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 126
5.4 Simulation Study. . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130
5.4.1 Description of the simulation environment. . . . . . . . . . . 130
5.4.2 Description of the sources of performance
degradation . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . 131
5.4.2.1 Kinematic instability due to resolving
redundancy at the acceleration level. . . . . . . . . . 132
5.4.2.2 Performance degradation due to the model
-based part of the controller. . . . . . . . . . . . . . . . 135
5.4.3 Modified AHIC Scheme. . . . . . .. . . . . . . . . . . . . . . . . . . 139
5.5 Conclusions . . . . . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . 144
6. 
Experimental Results for Contact Force 
and Complaint Motion Control
147
6.1 Introduction . . . . . . . .. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147
6.2 Preparation and Conduct of the Experiments. . . . . . . . . . . . . . . 148
6.2.1 Selection of Desired Impedances. . . . . . . . . . . . . . . . . . 148
6.2.1.1 Stability Analysis. . . . . . . . . . . . . . . . . . . . . . . . 149
6.2.1.2 Impedance-controlled Axis. . . . . . . . . . . . . . . . 150
6.2.1.3 Force-controlled Axis:. .. . . . . . . . . . . . . . . . . . . 152

XIV
Contents
6.2.2 Selection of PD Gains. . . . . . . . . . . . . . . . . . . . . . . . . . . 158
6.2.3 Selection of the Force Filter. . . .. . . . . . . . . . . . . . . . . . . 159
6.2.4 Effect of Kinematic Errors (Robustness Issue). . . . . . . . 159
6.3 Numerical Results for Strawman Tasks. . . . . . . . . . . . . . . . . . . 162
6.3.1 Strawman Task I (Surface Cleaning). . . . . . . . . . . . . . . . 163
6.3.2 Strawman Task II (Peg In The Hole). . . . . . . . . . . . . . . . 166
6.4 Conclusions . . . . . . . .. . . . . . . . . . . . . .. . . . . . . . . . . . . . . . . . . 175
7. 
Concluding Remarks
179
Appendix A 
Kinematic and Dynamic Parameters 
of REDIESTRO
185
Appendix B 
Trajectory Generation (Special Consideration
For Orientation
189
References
193
Index
203

CHAPTER  1
INTRODUCTION
The problem of position control of robot manipulators was addressed in
the 1970’s to develop control schemes capable of controlling a manipula-
tor’s motion in its workspace. In the 1980’s, extension of robotic applica-
tions to new non-conventional areas, such as space, underwater, hazardous
environments, and micro-robotics brought new challenges for robotics
researchers. The goal was to develop control schemes capable of control-
ling a robot in performing tasks that required: (1) interaction with its envi-
ronment; (2) dexterity comparable to that provided by the human arm.
Position control strategies were found to be inadequate in performing
tasks that needed interaction with a manipulator’s environment. Therefore,
developing control strategies capable of regulating interaction forces with
the environment became necessary. At the same time, new applications
required manipulators to work in cluttered and time-varying environments.
While most non-redundant manipulators possess enough degrees-of-free-
dom (DOFs) to perform their primary task(s), it is known that their limited
manipulability results in a reduction in the effective workspace due to
mechanical limits on joint articulation and presence of obstacles in the
workspace. This motivated researchers to study the role of kinematic redun-
dancy. Redundant manipulators possess more DOFs than those required to
perform the primary task(s). These additional DOFs can be used to fulfill
user defined additional task(s) such as joint limit avoidance and object col-
lision avoidance. Redundancy has been recognized as a characteristic of
major importance for manipulators in space applications. This fact is
reflected in the design of Canadarm-2 or the Space Station Remote Manip-
ulator System (SSRMS), a 7-DOF redundant arm, and also the Special-Pur-
pose Dextrous Manipulator (SPDM) [33], also known as Dextre, which
consists of two 7-DOF arms.
Finally, imprecise kinematic and dynamic modelling of a manipulator
and its environment puts severe restrictions on the performance of control
algorithms which are based on exact knowledge of the kinematic and
dynamic parameters. This has brought the challenge of developing adap-
1
Introduction
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 1–6, 2005.
© Springer-Verlag Berlin Heidelberg 2005

2
1 Introduction
tive/robust control algorithms which enable a manipulator to perform its
tasks without exact knowledge of such parameters.
1.1 Objectives of the Monograph
As mentioned in the previous section, various applications of manipu-
lators in space, underwater, and hazardous material handling have led to
considerable activity in the following research areas:
• Contact Force Control (CFC) and compliant motion control
• Redundant manipulators and Redundancy Resolution (RR)
• Adaptive and robust control
Position control strategies are inadequate for tasks involving interaction
with a compliant environment. Therefore, defining control schemes for
tasks which demand extensive contact with the environment (such as
assembly, grinding, deburring and surface cleaning) has been the subject of
significant research in the last decade. Different control schemes have been
proposed: Stiffness control [60], hybrid position-force control [56], imped-
ance control [30], Hybrid Impedance Control (HIC) [1], and robust HIC
[40].
Recently, free motion control of kinematically redundant manipulators
has been the subject of intensive research. The extra degrees of freedom
have been used to satisfy different additional tasks such as obstacle avoid-
ance [6],[14], mechanical joint limit avoidance, optimization of user-
defined objective functions, and minimization of joint velocities and accel-
eration [66]. Redundancy has been recognized as a major characteristic in
performing tasks that require dexterity comparable to that of the human
arm, e.g., in space applications such as for the SPDM which is intended for
use on the International Space Station. However, compliant motion control
of redundant manipulators has not attained the maturity level of their non-
redundant counterparts. There is not much work that addresses the problem
of redundancy resolution in a compliant motion control scheme. Gertz et al.
[23], Walker [91] and Lin et al. [39] have used a generalized inertia-
weighted inverse of the Jacobian to resolve redundancy in order to reduce
impact forces. However, these schemes are single-purpose algorithms, and
cannot be used to satisfy additional criteria. An extended impedance control
method is discussed in [2] and [51]; the former also includes an HIC
scheme.
Adaptive/robust compliant control has also been addressed in recent
years [27], [41], and [52]. However, there exists no unique framework for

1.2  Monograph Outline
3
an adaptive/robust compliant motion control scheme for redundant manipu-
lators which enjoys all the desirable characteristics of the methods pro-
posed for each individual area, e.g., existing compliant motion control
schemes are either not applicable to redundant manipulators or cannot take
full advantage of the redundant degrees of freedom. 
The main objective of this monograph is to address the three research
areas identified above for redundant manipulators. In this context, existing
schemes in each of the three areas are reviewed. Based on the results of this
review, a new redundancy resolution scheme at the acceleration level is
proposed. The feasibility of this scheme is first studied using simulations on
a 3-DOF planar arm. This scheme is then extended to the 3-D workspace of
a 7-DOF redundant manipulator. The performance of the extended scheme
with respect to collision avoidance for static and moving objects and avoid-
ance of joint limits is studied using both simulations and hardware experi-
ments on REDIESTRO (a REdundant, Dextrous, Isotropically Enhanced,
Seven Turning-pair RObot constructed in the Center for Intelligent
Machines at McGill University). Based on this redundancy resolution
scheme, an Augmented Hybrid Impedance Control (AHIC) scheme is pro-
posed. The AHIC scheme provides a unified framework for combining
compliant motion control, redundancy resolution and object avoidance, and
adaptive control in a single methodology. The feasibility of the proposed
AHIC scheme is studied by computer simulations and experiments on
REDIESTRO. The research described in this monograph has addressed the
following topics:
• Algorithm development
• Feasibility analysis on a simple redundant 3-DOF planar arm 
• Extension of the scheme to the 3D workspace of REDIESTRO
• Stability and trade-off analysis using simulations on a realistic
model of the arm and its hardware accessories
• Fine tuning of the control gains in the simulation
• Performing hardware experiments
1.2
Monograph Outline
Chapter 2:
REDUNDANT MANIPULATORS: KINEMATIC ANALYSIS
AND
REDUNDANCY RESOLUTION
This chapter introduces the kinematic analysis of redundant manipula-
tors. First, different redundancy resolution schemes are introduced and a

4
1 Introduction
comparison between them is performed. Next, the Configuration Control
approach at the acceleration level is described. This forms the basis of the
redundancy resolution scheme used in the AHIC strategy proposed in
Chapter 4. Finally analytical expressions of different additional tasks that
can be used by the redundancy resolution module are given and simulation
results for a 3-DOF planar arm are presented.
Chapter 3: COLLISION AVOIDANCE FOR A 7-DOF REDUNDANT MANIPULA-
TOR
This chapter describes the extension of the proposed algorithm for
redundancy resolution to the 3D workspace of a 7-DOF manipulator. First,
a new primitives-based collision avoidance scheme in 3D space is
described. The main focus is on developing the distance calculations and
collision detection between the primitives (cylinder and sphere) which are
used to model the arm and its environment. Next, the performance of the
proposed redundancy resolution scheme is evaluated by kinematic simula-
tion of a 7-DOF arm (REDIESTRO). At this stage, fine tuning of different
control variables is performed. The performance of the proposed scheme
with respect to joint limit avoidance (JLA), and static and moving object
collision avoidance (SOCA, MOCA) is evaluated experimentally using
REDIESTRO.
Chapter 4: CONTACT FORCE AND COMPLIANT MOTION CONTROL
This chapter begins with a literature review of existing contact force
and compliant motion control. Based on this review, a novel compliant and
force control scheme Augmented Hybrid Impedance Control (AHIC) is
presented. The feasibility of using AHIC to achieve position and force
tracking as well as resolving redundancy to perform additional tasks such
as JLA, SOCA, MOCA is evaluated by simulation on a 3-DOF planar arm.
In addition to the kinematic additional tasks described in Chapter 3, the
scheme is capable of incorporating dynamic additional tasks such as multi-
ple-point force control and minimization of joint torques to achieve a
desired interaction force with the environment.
Based on the problems encountered (e.g. uncontrolled self-motion and
lack of robustness with respect to model uncertainties) during simulations
using the AHIC scheme, two modified versions of the original AHIC
scheme are proposed. The first scheme aims to achieve self-motion stabili-
zation and also robustness to the manipulator’s model uncertainty, while
the second scheme introduces an adaptive version of the AHIC controller.
Stability and convergence analysis for these two schemes are given in

1.2  Monograph Outline
5
detail. Simulations on a 3-DOF planar arm are carried out to evaluate their
performance.
Chapter 5: AUGMENTED HYBRID IMPEDANCE CONTROL FOR A 7-DOF
REDUNDANT MANIPULATOR
In this chapter, extension of the AHIC scheme to the 3D workspace of
REDIESTRO is discussed. Different modules involved in the controller are
described. The first step is to extend the algorithm developed in Chapter 4
for the 2D workspace of a 3-DOF planar arm to the 3D workspace of a 7-
DOF arm. New issues such as orientation and torque control are discussed.
Considering the large amount of computation involved in the controller and
the limited processing power available, the next step is to develop control
software which is optimized both at the algorithm and code levels. A stabil-
ity analysis and a trade-off study are performed using a realistic model of
the arm and its hardware accessories. Potential sources of problems are
identified. These are categorized into two different groups: Kinematic
instability due to resolving redundancy at the acceleration level, and lack of
robustness with respect to the manipulator’s dynamic parameters. These
problems are successfully resolved by modification of the AHIC scheme.
Chapter 6: EXPERIMENTAL RESULTS FOR CONTACT FORCE AND COMPLIANT
MOTION CONTROL
The goal of this Chapter is to demonstrate and evaluate the feasibility
and performance of the proposed scheme by hardware demonstrations
using REDIESTRO. The first section describes the hardware of the arm
(e.g. actuators, sensors, etc.), and the control hardware (VME based con-
troller, I/O interface, etc.). The second section introduces the different soft-
ware modules involved in the operation, their role, and the communication
between different platforms. Before performing the final experimental
demonstrations, a detailed analysis is given to provide guidelines in the
selection of the desired impedances. A heuristic approach is presented
which enables the user to systematically select the impedance parameters
based on stability and tracking requirements. Different scenarios are con-
sidered and two strawman tasks - surface cleaning and peg-in-the-hole - are
performed. The selection is based on the ability to evaluate force and posi-
tion tracking and also robustness with respect to knowledge of the environ-
ment and kinematic errors. These strawman tasks have the essential
characteristics of the tasks that SPDM may be required to perform in space
- window cleaning and On-Orbit Replaceable Unit (ORU) insertion and
removal.

6
1 Introduction
Chapter 7: CONCLUDING REMARKS
Based on the proposed algorithms for contact force and compliant
motion control of redundant manipulators, general conclusions are drawn
concerning the research described in this monograph. Future avenues for
research in order to extend the current work are also suggested.

CHAPTER  2
REDUNDANT MANIPULATORS: KINEMATIC ANALYSIS AND REDUN-
DANCY RESOLUTION
2.1
Introduction
Particular attention has been devoted to the study of redundant manipula-
tors in the last 10-15 years. Redundancy has been recognized as a major
characteristic in performing tasks that require dexterity comparable to that
of the human arm, e.g., in space applications such as in the Special Purpose
Dexterous Manipulator (SPDM) of Canadarm-2 designed for the Interna-
tional Space Station. While most non-redundant manipulators possess
enough degrees-of-freedom (DOFs) to perform their main task(s), i.e., posi-
tion and/or orientation tracking, it is known that their limited manipulability
results in a reduction in the workspace due to mechanical limits on joint
articulation and presence of obstacles in the workspace. This has motivated
researchers to study the role of kinematic redundancy. Redundant manipu-
lators possess extra DOFs than those required to perform the main task(s).
These additional DOFs can be used to fulfill user-defined additional task(s).
The additional task(s) can be represented as kinematic functions. This not
only includes the kinematic functions which reflect some desirable kine-
matic characteristics of the manipulator such as posture control [13], joint
limiting [66], and obstacle avoidance [14], [6], but can also be extended to
include dynamic measures of performance by defining kinematic functions
as the configuration-dependent terms in the manipulator dynamic model,
e.g., impact force [39], inertia control [64], etc.
In this chapter, we first give an introduction to the kinematic analysis of
redundant manipulators. In the next section, we perform a review of exist-
ing methods for redundancy resolution. We also study the performance of
different redundancy resolution schemes from the following points of view:
• Robustness with respect to algorithmic and kinematic singularity
• Flexibility with respect to incorporation of different additional
tasks
2
Redundant Manipulators: Kinematic Analysis and 
Redundancy Resolution
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 7–33, 2005.
© Springer-Verlag Berlin Heidelberg 2005

8
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution
Based on this study, we select one methodology, the “configuration control”
approach [63], as the basis for resolving redundancy in the force and com-
pliant motion control schemes that we propose in this monograph for
redundant manipulators. We also introduce various choices for the addi-
tional tasks and their analytical representations. Simulation results for a 3-
DOF planar manipulator are given.
2.2 Kinematic Analysis of Redundant Manipulators
Definition: A manipulator is said to be redundant when the dimension of
the task space m is less than the dimension of the joint space n. Let us
denote the position and orientation of the end-effector along the axes of
interest in a fixed frame by the
vector X, and the joint positions by
the
vector q. In the case of a redundant manipulator,
is the degree of redundancy. The forward kinematic
function is defined as
(2.2.1)
The differential kinematics are given by
(2.2.2)
where
is related to the “twist”
(vector of linear and angular veloci-
ties) of the end-effector by:
(2.2.3)
where
is a matrix of appropriate dimensions (see [5] for details). The
second derivative of X is given by
(2.2.4)
where
is the
Jacobian of the end-effector. For a redundant
manipulator, equations (2.2.1), (2.2.2) and (2.2.4) represent under-deter-
mined systems of equations.
can be viewed as a linear transformation
mapping from
into
: The vector
is mapped into
.
Two fundamental subspaces associated with a linear transformation are its
null space and its range (Figure 2.1).
m
1
u


n
1
u


r
n
m
r
1
t


–
=
X
f q
 
=
X·
Jeq·
=
X·
TX
X·
HXTX
=
HX
X··
Jeq··
J·
eq·
+
=
Je
m
n
u


Je
Rn
Rm
q·
Rn

X·
Rm


2.3 Redundancy Resolution
9
The null space, denoted
, is the subspace of
defined by
(2.2.5)
The range denoted
, is a subspace of
defined by
(2.2.6)
Equation (2.2.5) underlies the mathematical basis for redundant manipula-
tors. For a redundant manipulator, the dimension of
is equal to
, where
is the rank of the matrix
. If
has full column rank,
then the dimension of
is equal to the degree of redundancy. The
joint velocities belonging to
, referred to as internal joint motion
and denoted by
, can be specified without affecting the task space veloc-
ities. Therefore, an infinite number of solutions exists for the inverse kine-
matics problem. This shows the major advantage of redundant
manipulators. Additional constraints can be satisfied while executing the
main task specified via positions and orientations of the end-effector. The
additional constraints can be incorporated using two different approaches -
global and local. Global approaches ([48], [35], and [84]) achieve optimal
behavior along the whole trajectory which ensures superior performance
over local methods. However, the computational burden of global algo-
rithms makes them unsuitable for real-time sensor-based robot control
applications. Hence, we will focus on local approaches.
2.3 Redundancy Resolution
A Cartesian controller generates commands expressed in Cartesian
space. In the case of controlling a redundant manipulator, these control
inputs should be projected into joint space. Depending on the application
requirements and choice of controller, redundancy can be resolved at posi-
tion, velocity, or acceleration level. In most control schemes, the control
input is expressed in form of a reference velocity or acceleration. There-
fore, in this section we will focus on the redundancy resolution schemes
proposed at velocity or acceleration levels.
 Je


Rn
 Je


q·
Rn Jeq·

^
0`
=
=
 Je


Rn
 Je


Jeq· q·
Rn`

^
=
 Je


n
m'
–


m'
Je
Je
 Je


 Je


q·


2.3.1
Redundancy Resolution at the Velocity Level
Solution of the inverse kinematic problem at the velocity level is of two
types - exact and approximate.
2.3.1.1
Exact Solution
Most of the methods are based on the pseudo-inverse of the matrix 
,
denoted by 
:
 
(2.3.1)
The pseudo inverse of 
 can be expressed as
(2.3.2)
where the 
’s, 
’s, and 
’s are obtained from the singular value decom-
position of 
 [25] and the 
’s are the non-zero singular values of 
.
Equation (2.3.1) represents the general form of a minimum 2-norm solution
to the following least-squares problem:
(2.3.3)
If 
 has full row rank, then its pseudo inverse is given by:
(2.3.4)
The ability of the pseudo-inverse to provide a meaningful solution in
the least-squares sense regardless of whether Equation (2.2.2) is under-
specified, square, or over-specified makes it the most attractive technique
in redundancy resolution. However, there are major drawbacks associated
with this solution. As pointed out in [43], the solution given by (2.3.1) does
not guarantee generation of joint motions which avoid singular configura-
tions - configurations in which 
 is no longer full rank. Near singular con-
figurations, the norm of the solution obtained by (2.3.1) becomes very
large. This can be seen from a mathematical point of view by (2.3.2), in
which the minimum singular value approaches zero (
) as a singu-
For a given 
, a solution 
is selected which exactly satisfies (2.2.2).
X·
q·
Je
Je†
q·
p
Je†X·
=
Je
Je†
1
Vi
-----vˆiuˆi
T
i
1
=
m'
¦
=
Vi
vˆi
uˆ i
Je
Vi
Je
minq·
Jeq·
X·
–
`
^
Je
Je†
Je
T JeJe
T

 1
–
=
Je
Vm'
0
o
10
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.3  Redundancy Resolution
11
lar configuration is approached, i.e., at a singular configuration, 
becomes rank deficient. Therefore, as we can see in Figure 2.1, there are
some velocities in task space which require large joint rates. 
Figure 2.1 Geometric representation of null space and range of 
Another problem with the pseudo-inverse approach is that the joint
motions generated by this approach do not preserve the repeatability and
cyclicity condition, i.e., a closed path in Cartesian space may not result in a
closed path in joint space [37]. The final difficulty is that the extra degrees
of freedom (when dim(q) > dim(x)) are not utilized to satisfy user-defined
additional tasks. To overcome this problem, a term denoted 
, belonging
to the null space of 
 is added to the right hand side of equation (2.3.1)
[19].
(2.3.5)
Obviously 
still satisfies (2.2.2). The term 
can be obtained by projec-
tion of an arbitrary n-dimensional vector 
 to the null space of the Jaco-
bian:
(2.3.6)
Je
q·
Rn

X·
Rm

 Je


 Je


Je
TX
0
=
Inaccessible region
Je
q·

Je
q·
q·
p
q·

+
=
q·
q·

-
q·

I
Je†Je
–

-
=

where 
 is selected as follows:
 
(2.3.7)
With this choice of the vector 
, the solution given by (2.3.5) acts as a
gradient optimization method which converges to a local minimum of the
cost function. The cost function can be selected to satisfy different objec-
tives, such as torque and acceleration minimization [66], singularity avoid-
ance [47], obstacle avoidance ([14], and [6]). 
The other alternative is presented in the so-called extended (aug-
mented) Jacobian methods [21], [61]. The Jacobian of the augmented task
is defined by:
(2.3.8)
where
is the extended Jacobian matrix, 
 and 
being the 
and 
 Jacobian matrices of the main and additional tasks respectively.
The velocity kinematics of the extended task are given by:
(2.3.9)
where 
 and 
 are the time derivatives of the task vectors of the
main, extended and additional tasks, X, Y and Z, respectively. As a result of
extending the kinematics at the velocity level, equation (2.3.9) is no longer
redundant. Therefore, redundancy resolution is achieved by solving equa-
tion (2.3.9) for the joint velocities. However, there are two major draw-
backs associated with this method [64]: 
(i) The dimension of the additional task should be equal to the degree of
redundancy which makes the approach not applicable for a wide class of
additional tasks, such as those additional tasks that are not active for all
time, e.g., obstacle avoidance in a cluttered environment. 
-
-
)
q
w
w)
q1
w
w)
qi
w
w)
qn
w
w)
T
=
=
=
...
...
-
JA
Je
Jc
=
JA
Je
Jc
m
n
u


r
n
u


Y·
X·
Z·
JAq·
=
=
X· Y·

Z·
12
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.3 Redundancy Resolution
13
(ii) The other problem is the occurrence of artificial singularities in
addition to the main task kinematic singularities. The extended Jacobian
becomes rank deficient if either of the matrices
or
is singular, or
there is a conflict between the main and additional tasks (which translates
into linear dependence of the rows of
and
). In practical applications,
the singularities of the end-effector are too complicated to determine a pri-
ori. Furthermore, the singularities of
are task dependent which makes
them hard to determine analytically. Therefore, the solution of (2.3.9) based
on the inverse of the extended Jacobian
may result in instability near a
singular configuration.
2.3.1.2
Approximate Solution
An alternative approach to dealing with the problem of artificial/kine-
matic singularities and large joint rates is to solve this problem for an
approximate solution. The idea is to replace the exact solution of a linear
equation, as in (2.2.2), with a solution which takes into account both the
accuracy and the norm of the solution at the same time. This method which
was originally referred to as the damped least-squares solution, has been
used in different forms for redundancy resolution [92], [47]. The least-
squares criterion for solving (2.2.2) is defined as follows:
(2.3.10)
where 
, the damping or singularity robustness factor, is used to specify
the relative importance of the norms of joint rates and the tracking accu-
racy. This is equivalent to replacing the original equation (2.2.2) by a new
augmented system of equations represented by:
(2.3.11)
and finding the least-squares solution for the new system of equations
(2.3.11) by solving the following consistent set of equations:
(2.3.12)
The least-squares solution is given by:
JA
Je
Jc
Je
Jc
Jc
JA
Jeq·
X·
–
2
O2 q· 2
+
O
Je
OI
q·
X·
0
=
Je
TJe
O2I
+

q·
Je
TX·
=

(2.3.13)
The practical significance of this solution is that it gives a unique solution
which most closely approximates the desired task velocity among all possi-
ble joint velocities which do not exceed . The singular value decomposition
(SVD) of the matrix in (2.3.13) is given by: 
(2.3.14)
where 
’s, 
’s, and 
’s are as in (2.3.2). By comparing the above SVD
with that in (2.3.2), we notice a close relationship. Setting 
, we
obtain the pseudo inverse solution from (2.3.14). Moreover, if the singular
values are much larger than the damping factor (which is likely to be true
far from singularities), then there is little difference between the two solu-
tions, since in this case:
(2.3.15)
On the other hand, if the singular values are of the order of 
 (or smaller),
the damping factor in the denominator tends to reduce the potentially high
norm joint rates. In all cases, the norm of joint rates will be bounded by:
(2.3.16)
Figure 2.2 shows the comparison between solutions obtained by the
two methods. As we can see, the two problems associated with the pseudo
inverse  discontinuity at singular configurations and large solution norms
near singularities, are modified in the damped least-squares solution. Based
on this, Seraji [63], [66], and Seraji and Colbaugh [65] proposed a general
framework for redundancy resolution, referred to as Configuration Control.
q· O
 
Je
TJe
O2I
+

 1
– Je
TX·
=
q· O
 
Je
TJe
O2
+

 1
– Je
T
Vi
Vi
2
O2
+
-------------------vˆiuˆ i
T
i
1
=
m'
¦
=
Vi
vˆi
uˆi
O
0
=
Vi
Vi
2
O2
+
-------------------
1
Vi
-----
|
O
q· O
 
1
2O
------ X·
d
14
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.3  Redundancy Resolution
15
Figure 2.2 Damped versus undamped least-square solution
2.3.1.3
Configuration Control
mented by the 
 additional task vector Z, and the augmented
task vector is defined by 
. The aug-
mented differential kinematics are given by:
(2.3.17)
where
(2.3.18)
is the augmented Jacobian matrix, Je and Jc being the 
 and 
Norm of the joint velocity
O
1 V
if V
0
z
e
0
if V
0
=
Vi
Vi
2
O2
+
-------------------
1
2O
------
least-squares (pseudo inverse)
Damped Least-Squares
Singular Value
Under Configuration Control, the 
 main task vector X is aug-
m
1
u


k
1
u


m
k
+


1
u
>
@
YT
XT ZT

>
@T
=
Y·
X·
Z·
=
JAq·
=
JA
Je
Jc
=
m
n
u


k
n
u


Jacobian matrices of the main and additional tasks respectively.

Seraji and Colbaugh [65] proposed a singularity robust and task priori-
tized formulation using the weighted damped least-squares method at the
velocity level. The solution is given by:
(2.3.19)
which minimizes the following cost function:
(2.3.20)
where 
, 
 and 
 are diagonal positive-defi-
nite weighting matrices that assign priority between the main, additional,
and singularity robustness tasks. 
 and 
are the
n- and k-dimensional vectors representing the residual velocity errors of the
main and additional tasks respectively. The superscript d denotes desired
trajectories for the tasks. Note that in contrast to the extended formulation
in (2.3.9), there is no restriction on the dimension(s) of the additional
task(s). Therefore, the joint velocity (2.3.19) gives a special solution that
minimizes the joint velocities when 
, i.e., there are not as many active
tasks as the degree-of-redundancy, and the best solution in the least-squares
sense when 
. In all cases the presence of 
 ensures the boundedness
of joint velocities.
2.3.1.4
Configuration Control (Alternatives for Additional Tasks)
Configuration control can serve as a general framework for resolving
redundancy. Any additional task represented as a kinematic function can be
incorporated in this scheme [66]. This not only includes the kinematic func-
tions which reflect some desirable kinematic characteristics of the manipu-
lator such as posture control, joint limiting, and obstacle avoidance, but can
also be extended to include dynamic measures of performance by defining
kinematic functions as the configuration-dependent terms in the manipula-
tor dynamic model, e.g., contact force, inertia control, etc. [64].
In this section, two general approaches for representing additional tasks
are formulated: 
(i) Inequality constraints: In many applications, the desired additional
task is formulated as a set of inequality constraints 
, where U is a
scalar kinematic function and C is a constant. A kinematic function is
q·
Je
TWeJe
Jc
TWcJc
Wv
+
+
>
@ 1
–
Je
TWeX d
·
Jc
TWcZ d·
+
>
@
=
b
E·
eT
=
WeE·
e
E·
cTWcE·
c
q· TWvq·
+
+
We m
m
u


Wc k
k
u


Wv n
n
u


E·
e
X·
X· d
–
=
E·
c
Z·
Z· d
–
=
k
r

k
r
!
Wv
U q
 
C
t
16
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.3 Redundancy Resolution
17
defined as:
(2.3.21)
If
, this task is inactive.
(ii) Kinematic optimization of a cost function
, can be incorpo-
rated in configuration control. Additional tasks can be formulated as the
following constrained optimization problem:
The solution to this problem can be obtained using Lagrange multipliers.
Let the augmented scalar objective function 
be defined as:
(2.3.22)
where 
 is the 
vector of Lagrange multipliers. The necessary con-
dition for optimiality can be written as:
(2.3.23)
(2.3.24)
Let 
 be a full rank 
 matrix whose columns span the r-dimen-
sional null space of the Jacobian 
. The definition of the null space of 
implies that
(2.3.25)
Pre-multiplying both sides of (2.3.23) by 
 yields the optimality condi-
tion:
(2.3.26)
Z
g q
 
U q
 
C; Z d
0;
=
Z· d
0;
=
Z·· d
0
=
–
=
=
Z
0
!
\ q
 
Minimize
\ q
 
q
subject to X
f q
 
–
0
=
\q q P



\q q P



\ q
 
PT X
f q
 
–


+
=
P
m
1
u


q
w
w \q
0
q
w
w\

q
w
wf
©
¹
§
·
T
P
Je
TP
=
=
=
P
w
w \q
0
X

f q
 
=
=
Ne
n
r
u


Je
Je
JeNe
0m
r
u
=
Ne
T
Ne
T
q
w
w\
0
=

 Therefore, the additional task is represented as
(2.3.27)
The Jacobian of the additional task is given by
(2.3.28)
2.3.2
Redundancy Resolution at the Acceleration Level
Dynamic control of redundant manipulators in task space, such as the
case of compliant control, requires the computation of joint accelerations.
Hence, redundancy resolution should be performed at the acceleration
level. The second-order differential kinematics are given in (2.2.4). We
rewrite the equation as:
(2.3.29)
Following the procedure in Section 2.3.1, a similar formulation for
can
be obtained to yield exact and approximate solutions. The pseudo-inverse
solution is given by:
(2.3.30)
where
is the pseudo inverse of the Jacobian matrix. Equation (2.3.30)
represents the general form of a minimum 2-norm solution to the following
least-squares problem:
(2.3.31)
The solutions which are aimed at minimizing the norm of the joint
acceleration vector have the shortcoming that they cannot control the joint
velocities belonging to the null-space of the end-effector Jacobian or the
augmented Jacobian. This may result in internal instability [31]. This prob-
lem can be attributed to the instability of the “zero dynamics” of (2.3.29)
under a solution of the form (2.3.30) [18]. An example demonstrating this
phenomenon is given in Section 4.3.3 . In order to show the source of this
Z
Ne
T
q
w
w\ and Z d
0;
=
Z· d
0;
=
Z·· d
0
=
=
Jc
q
w
wZ
q
w
w
Ne
T
q
w
w\
©
¹
§
·
=
=
X··
J·
eq·
–
Jeq··
=
q··
q··
P
Je† X··
J·
eq·
–


=
Je†
minq··
Jeq··
X·· J·
eq·
–


–
`
^
18
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.3  Redundancy Resolution
19
problem more clearly, consider a simple kinematic control loop for Carte-
sian control of a redundant manipulator (Figure 2.3). As we can see in Fig-
ure 2.3, the states of the system are 
 and 
. However, because of the
nature of Cartesian control in which the desired trajectory is specified in
task space, the terms
and 
 are calculated by applying the nonlinear
forward kinematic function to , and the linear transformation mapping 
to . Let us decompose  as follows:
(2.3.32)
where
(2.3.33)
Using the definition of null space, we can write:
(2.3.34)
This is equivalent to having an open-loop control for the null space compo-
nent of 
. The question that may be asked is why the pseudoinverse (or
configuration control) at the velocity level does not exhibit this phenome-
non. The reason is that, the pseudo-inverse solution at the velocity level
given by (2.3.1) results in a minimum-norm velocity solution. Therefore, it
does not have any null space component. From a mathematical point of
view, the pseudo-inverse of 
is a projector matrix on to 
. How-
ever, the pseudo-inverse solution at the acceleration level results in a mini-
mum-norm acceleration solution which does not guarantee the elimination
of the null space component of the velocity. 
A solution to this problem was proposed by Hsu et al. [32]. This
method requires the symbolic expression of the derivative of the pseudo-
inverse of the Jacobian matrix which demands a large amount of computa-
tion. A method which combines both computational efficiency with stabili-
zation of internal motion is proposed in Section 5.4.2.1. 
q
q·
X
X·
q
Je
q·
q·
q·
qP
·
q·

+
=
q·

 Je



q·
P
A Je



X·
Jeq·
Jeq·
P
Jeq·

+
Jeq·
P
0
+
Jeq·
P
=
=
=
=
q·
Je
A Je



2.4
Analytic Expression for Additional Tasks
The general strategies for defining additional tasks  inequality and
optimization tasks  were explained in Section 2.3.1.4. In this section, the
additional tasks most commonly encountered are formulated analytically
under configuration control. 
Figure 2.3 Kinematic control loop for a redundant manipulator
2.4.1
Joint Limit Avoidance (JLA)
Joint variables of actual mechanisms are obviously limited by mechan-
ical constraints. In actual implementations, if some joint variables com-
puted by the inverse kinematic module exceed their limits, these joints
would be fixed at their extreme values which would restrict movement in
certain directions in task space. In this section, we first introduce some rele-
vant terminology, based on which a feasibility analysis of using kinematic
redundancy resolution for joint limit avoidance will be presented. Then, we
shall use two different approaches for defining algorithms which solve the
problem of JLA. The performance of these algorithms will be analyzed by
using computer simulations.
q
q·
Redundancy
Resolution
+
+
+
-
Forward Kinematics
+
-
q··
+
-
X d
X·· d
X· d
X
X·
KP
KV
J·
e
Je
Je
³
³
q·

q·
P
20
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
21
2.4.1.1
Definition of Terms and Feasibility Analysis
The reachable workspace of a robot manipulator is defined by the geo-
metrical locus of the position and orientation (pose) of the end-effector,
, when the joint variables
,
, range between two
extreme values.
(2.4.1)
The volume of the reachable workspace is finite, connected and, therefore,
is entirely defined by its boundary surface. Obviously on this boundary,
some loss of mobility occurs. Therefore the Jacobian matrix becomes rank
deficient. The boundary of the reachable workspace can be found numeri-
cally by constrained optimization routines, or by applying an inverse kine-
matics algorithm [62]. As an example, in Figure 2.4, we show the reachable
workspace of a two-link manipulator (using an optimization based
approach).
In [8] the term “aspects” is used to denote the subspaces of the accessible
volume in joint space in which the solution of the inverse kinematic func-
tion of equation (2.2.1) is unique if n=m, or if n-m variables are fixed when
n>m. The boundaries of the aspects are defined by the singularities of the
Jacobian matrix Je. Therefore, the interior of each aspect is free from singu-
larities. Each aspect in joint space corresponds to a convex subspace of the
reachable workspace. In Figure 2.4.a, we show the accessible volume in
joint space and its corresponding image in task space (Figure 2.4.b). From
these plots, it is obvious that if the desired task trajectory lies inside two dif-
ferent aspects, the inverse kinematics of the manipulator fails to provide a
continuous joint trajectory between the initial and the final points. There-
fore, this trajectory is not practically realizable without re-configuration of
the manipulator at or near the singular configuration. In particular, it is easy
to see that for the two-link planar manipulator, with joint limits indicated in
Figure 2.4.a and the reachable workspace shown in Figure 2.4.b, we may
encounter the following possibilities (Figure 2.5):
x The path AB (the first letter indicates the initial point) is not realiz-
able.
x The path CE via the intermediate point D is not realizable.
x The same path CE via F is realizable.
y
m

q
n

n
m
t
qimin
qi
qimax
d
d
i=1,2,...,n

Figure 2.4 Reachable workspace of a 2-DOF manipulator in terms of 
a) joint limits, b) reachable workspace
x The path GH with initial joint position
is not realizable.
x The same path GH by the initial configuration
is realizable
Note that by “unrealizable” we mean that there exists no continuous
joint trajectory (that can be provided by the inverse kinematics) which
starts from the initial configuration and satisfies the task trajectory without
violating the joint limits. Thus, for realizing a task comprising motion from
an initial pose to a final one, several problems may be considered, and the
solutions for some of them may not be achievable by the redundancy reso-
lution module. For instance, task AB is not realizable, but tasks CE and GH
can be realized by means of a joint limit avoidance algorithm.
Although the analyzed example is concerned with a non-redundant
manipulator, the main concepts are applicable to redundant manipulators
under configuration control with the only difference being that, in the
redundant case, the augmented task consists of the main and additional
tasks which are usually not defined in the same coordinates. Therefore, the
geometrical interpretation of the aspects and reachable workspace will, in
general, be different in the case of redundant manipulators.
(b)
(a)
-50
0
50
-150
-100
-50
0
50
100
150
q1
q2
Accesible volume in joint space
qmax(1)
qmin(1)
qmin(2)
qmax(2)
( q2 > 0 )
( q2 < 0 )
( q2 > 0 )
-2
0
2
-3
-2
-1
0
1
2
3
Reachable workspace
2-axes manipulator
q2
0
!
q2
0

22
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
23
2.4.1.2
Description of the Algorithms
Under the configuration control approach, the criterion of joint limit
avoidance should be formulated as a kinematic constraint function. In the
following, we present two different approaches for this formulation:
x Using inequality constraints which become active only when one or
more of the limits are violated.
x Defining the secondary task as minimization of a desired cost func-
tion.
Figure 2.5 Feasibility of different trajectories for a 2-DOF manipulator
2.4.1.3
Approach I: Using Inequality Constraints
In this approach, the basic equations for the JLA algorithm are as fol-
lows. The joint limits are presented as a set of inequality constraints. If all
the computed values of the joint variables satisfy the inequalities, the
redundancy can be used for other tasks. However if one or more of these
inequalities are violated, the JLA secondary task should be activated. This
task is defined as follows:
-2
-1.5
-1
-0.5
0
0.5
1
1.5
2
-2
-1.5
-1
-0.5
0
0.5
1
1.5
2
g
p
p
p
____  positive aspect q2 > 0
-.-. negative aspect q2 < 0
   A
E
H
G
   C
  F
D
B

(2.4.2)
where qm replaces either the maximum or the minimum values of the joints
for i=1,2,...,n, and the corresponding constraint Jacobian Jc is defined by
the equation:
(2.4.3)
where ei is the ith column of the identity matrix. For smooth incorporation
of the inequality constraint into the inverse kinematics, it is desirable to
define a “buffer” region where the relative importance of the JLA task pro-
gressively increases. To define this buffer, the following scheme is used
[64]. When the inequality constraint is inactive, the corresponding weight
 is zero, and on entering the “buffer” region increases gradually to its
maximum value. Mathematically, we can formulate this weight selection
procedure (i.e. 
) as follows:
(2.4.4)
where W0 and
are user-defined constants representing the coefficient for
the weight and width of the buffer region respectively.
2.4.1.4
Approach II: Optimization Constraint
The basic idea in the second approach is to define a kinematic objective
function which is to be minimized. For joint limit avoidance, the following
function has been suggested:
Zi
gi q
 
qi
=
=
Z d
i
qmi
=
Jci
q
w
wZi
ei
T
=
=
Wci
qi
qimax
d
Wci
0
=
Wci
W0
4
------- 1
S
qimax qi
–
W
----------------------
©
¹
§
·
©
¹
§
·
cos
+
=
Wci
W0
2
-------
=
qi
qimax
W
–
d
qimax
W
–
qi
qimax
d
d
qi
qimax
!
if
if
if
W
24
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
25
(2.4.5)
where qc is the center position around which we wish to minimize the
movement and 
is the difference between the maximum and the mini-
mum values of the joints. Then, the redundancy resolution problem is to
define a joint trajectory which optimizes equation (2.4.5) subject to the end-
effector position.
In Klein [38], it is mentioned that although the quadratic form of equa-
tion (2.4.5) is the most used function for this purpose, a better function
which reflects the objective of joint limit avoidance has the form:
(2.4.6)
However, since the infinity norm is not a differentiable function, he pro-
posed to use some finite order p-norm (p > 2):
(2.4.7)
For most practical problems, p=6 gives good results. Note that in equation
(2.4.7), the different joints have the same importance in the objective func-
tion. As an alternative to this formulation, we can introduce a diagonal
weighting matrix. The new objective function has the following form:
(2.4.8)
where K is an
diagonal matrix. The Jacobian and the desired values
for this additional task are calculated as mentioned in and (2.3.28).
2.4.1.5
Performance Evaluation and Comparison
Based on these approaches, two algorithms were implemented. The
simulations were carried out on a three-link planar manipulator with link
lengths (0.75m, 0.75m, 0.5m), qmin=[-90 -60 -75] degrees and qmax=[45
75 45]. The reachable workspace and the desired trajectory are shown in
Figure 2.6.
) q
 
qi
qci
–
qi
'
-----------------
2
i
1
=
n
¦
=
q
'
)
max
qi
qci
–
qi
'
--------------------
q
qc
–
q
'
--------------
f
=
=
)
q
qc
–
q
'
--------------
p
=
)
K
q
qc
–
q
'
--------------
©
¹
§
·
p
=
n
n
u

Figure 2.6 Reachable workspace and desired trajectory for a 3-DOF 
planar arm
1- Inequality constraint approach: Figure 2.7a shows the joint variables
when the JLA provision was not activated. In this case, the third joint vio-
lates its minimum limit. In the second simulation, the JLA provision based
on the first approach has been used with the nominal selected values
W0=100, Wv=5, We=10, and the buffer region =5 (degrees). Figure 2.7b
shows that in this case, the third joint variable does not violate its limit.
Note that by adjusting W0, the discontinuity of the joint motion resulting
from the nature of the inequality constrained formulation, can be con-
trolled.
2- Optimization approach: The following simulation used the optimi-
zation based JLA (p=2). Figure 2.8(a) shows that the third joint variable
enters the buffer region. Figure 2.8(b) shows the results for p=4. As we can
see, in this case all joints stay far from their limits. Figure 2.9 shows the
third joint variable for different approaches. As we can see, for this special
case, both methods are successful in following the desired trajectory while
avoiding the joint limits. Obviously, the optimization method (p=4) has the
best performance, since, the joint values are kept from approaching the lim-
its. This is in contrast to the inequality approach in which the joints move
freely until coming close to the limits where the JLA becomes active and
-1.5
-1
-0.5
0
0.5
1
1.5
2
2.5
-1.5
-1
-0.5
0
0.5
1
1.5
W
26
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
27
prevents the manipulator from exceeding the joint limits. However, the
optimization approach is computationally expensive (especially when  the
number  of joints  increases) compared to the simple formulation of the ine-
quality constrained approach. Therefore, the inequality constrained
approach is preferable for real-time implementations.
Figure 2.7 Simulation results for JLA using the inequality constraint 
approach 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
-80
-60
-40
-20
0
20
40
Time (s)
Joint variables ( free motion )
q3
q1
q2
qmin(3)
deg
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
-80
-60
-40
-20
0
20
40
Time (s)
Joint variables (Inequality constraint)
q1
q3
qmin(3)
q2
Adjustable slope
deg
a) JLA inactive
  b) JLA active

2.4.2
Static and Moving Obstacle Collision Avoidance
In this section, an outline of an algorithm for the 2-D workspace of a
planar arm is given. The extension of the algorithm to a 3-D workspace and
simulation results are given in Chapter 3.
2.4.2.1
Algorithm Description
As in the JLA case, Static (and Moving) Obstacle Collision Avoidance
is achieved using an inequality constraint. The following steps are followed
[14]:
x Distance calculation
x Decision making (if there is a risk of collision for a link)
x Calculation of critical distance - the closest point on the link to the
object.
x Utilizing redundancy to inhibit the motion of the critical point
towards the object.
For the 2-D workspace, links are modeled by straight lines and the
objects are assumed to be circles. Each object is enclosed in a fictitious pro-
tection shield (represented by a circle) called the Surface of Influence
(SOI). The first step involves distance calculation to find the location of the
point Xc (called the critical point) on each link that is nearest to the obstacle
by the procedure indicated in Figure 2.10. This algorithm is executed for
each link and each obstacle. Then, if any of the critical distances
is less
than the SOI, this constraint becomes active. In this case, we define the fol-
lowing kinematic function as the additional task:
(2.4.9)
The derivative of the additional task is given below.
(2.4.10)
where 
is the time derivative of the object’s pose and is related to the
object’s Cartesian velocity through a linear mapping [5]. The desired values
for the active constraints are:
dci
Zi
gi q t


rO
dci
–
=
=
Z·
i
q
w
wgiq·
t
w
wgi
+
ui
T
q
w
wXciq·
X·
o
–
©
¹
¨
¸
§
·
–
=
=
X·
o
28
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
29
Figure 2.8 Simulation results for JLA using the optimization approach 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
-80
-60
-40
-20
0
20
40
Time (s)
Joint variables (Optimization Constraint P=2)
q3
q2
q1
(a) p=2
qmin(3)
 deg
(b) p=4
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
-80
-60
-40
-20
0
20
40
Time (s)
Joint variables (Optimization Constraint P=4)
q1
q2
q3
qmin(3)
 deg

Figure 2.9 Comparison between different JLA approaches 
Figure 2.10 Critical distance calculation
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
-80
-75
-70
-65
-60
-55
-50
-45
-40
Time (s)
Joint variable q3
Optimization method P=4
Opt. P=2
free motion
inequality constraint
qmin(3)
deg
SOI
ui
Xci
Xo
–

 dci
e
=
dci
Xci
Xo
–
=
Xci
Xi
Diei
+
=
Di
ei
T Xo
Xi
–


=
ei
Xi
1
+
Xi
–

 li
e
=
XO
dci
Ro
Xci
Xi
1
+
Li
Xi
Link i
30
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.4 Analytic Expression for Additional Tasks
31
(2.4.11)
Note that we still need to calculate the Jacobian of the active constraints
and its derivative. First, an intermediate term is defined as the Jacobian of
the critical point, i.e.,
(2.4.12)
Then the Jacobian and its derivative are calculated as:
(2.4.13)
(2.4.14)
2.4.3
Posture Optimization (Task Compatibility)
Compliant motion control and force control are mainly needed for tasks
involving heavy interaction with the environment. For this reason, an
appealing additional task is to position the arm in a posture which requires
minimum torque for a desired force in a certain direction. In this section, a
kinematic index for measuring task compatibility is introduced. In section
4.3.2, it is incorporated as an additional task in the Augmented Hybrid
Impedance Control (AHIC) scheme.
Similar to the manipulability ellipsoid introduced by Yoshikawa [97], a
force ellipsoid can be defined by:
, where Fe is the environ-
ment reaction force. The optimal direction for exerting the force is along
the major axis of the force ellipsoid which coincides with the eigenvector of
the matrix
corresponding to its largest eigenvalue (Figure 2.11.a).
The force transfer ratio along a certain direction is equal to the distance
from the center to the surface of the force ellipsoid along this vector - see
Figure 2.11.b where u is the unit vector along the desired direction and D is
the force transmission ratio along u. Since Du is a point on the surface of
the ellipsoid, it should satisfy the following equation:
(2.4.15)
which gives
. Hence, Chiu [13] proposed to maxi-
Zi
d
Z·
i
d
Z··
i
d
0
=
=
=
JXci
q
w
wXci
=
Jci
ui
T
–
JXci
=
J·
ci
z·
i
dci
------ui
TJXci
1
dci
------ X·
ci
X·
o
–

JXci
ui
TJ·
Xci
+
+
=
Fe
T JeJe
T

Fe
JeJe
T
Du

T JeJe
T

 Du


1
=
D
uT JeJe
T

u
>
@ 1 2
e
–
=

mize the following kinematic function (task compatibility index)
(2.4.16)
The desired value and the Jacobian for this additional task can be defined
according to the procedure in Section 2.3.1.4 in this chapter. Simulation
results are given in Section 4.3.2 .
Figure 2.11 a) Force ellipsoid, b) Force transfer ratio in direction u
2.5
Conclusions
In this chapter, the basic issues needed for the analysis of kinematically
redundant manipulators were presented. Different redundancy resolution
schemes were reviewed. Based on this review, configuration control at the
acceleration level was found to be the most suitable approach to be used in
a force and compliant motion control scheme for redundant manipulators.
However, most of the redundancy resolution schemes at the acceleration
level suffer from uncontrolled self-motion. In this section, the sources of
this problem were presented. Their solutions will be presented in Chapters
4 and 5. The formulation of the additional tasks to be used by the redun-
dancy resolution module were presented in this chapter. Joint limit avoid-
ance which is one of the most useful additional tasks was studied in detail.
I q
 
D2
=
1
Omax
------------------
1
Omin
-----------------
major axis
minor axis
u
D
(a)
(b)
32
2 Redundant Manipulators: Kinematic Analysis and Redundancy Resolution

2.5  Conclusions
33
The basic formulation of static and moving obstacle collision avoidance
task in 2D workspace was presented. We are now in a position to extend the
proposed redundancy resolution scheme to the 3D workspace of REDI-
ESTRO and evaluate the results by simulation and experiments.

CHAPTER  3
COLLISION AVOIDANCE FOR A 7-DOF REDUNDANT MANIPULATOR
3.1 Introduction
Collision detection and obstacle avoidance are two features that play an
important role in fully or partly autonomous operations of robotic manipu-
lators in cluttered environments. A compact and fast collision-avoidance
scheme would be particularly useful for robotic applications in space,
underwater, and hazardous environments. Collision avoidance for robot
manipulators can be divided into two categories: end-effector level and link
level. Much of the work reported to date has dealt with obstacle avoidance
as an off-line path planning problem, i.e., find a collision-free path for the
end-effector [7], [28], or by mapping the obstacle into joint space, find a
collision-free path in joint space [36], [11]. These methods are not applica-
ble to environments with moving objects. Moreover, for non-redundant
manipulators, tracking an end-effector trajectory while avoiding collisions
with obstacles at the link level, or self-collision avoidance, is often not
achievable. Kinematic redundancy has been recognized as a major charac-
teristic for operation of a robot in a cluttered environment [33]. For redun-
dant manipulators, a real-time collision avoidance approach has been
developed recently by Seraji and Bon [70] that formulates the problem as a
force-control problem so that the task of collision avoidance is solved pri-
marily by augmenting the manipulator control strategy.
To implement a real-time collision-avoidance scheme, three major
areas: redundancy resolution, robot and environment modeling, and dis-
tance calculation need to be investigated. Obviously, the accuracy with
which a robot arm and its environment are modeled is directly related to the
real-time control requirements. Greater detail in modeling results in higher
complexity when computing the critical distances between an obstacle and
the manipulator. Much of this computation can be avoided if the distance
measurements are obtained by a proximity sensing system such as the
“Sensor Skin” described in [68]. For situations where proximity sensors are
not available, a possible solution is to use simple geometric primitives to
3
Collision Avoidance for a 7-DOF Redundant 
Manipulator
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 35–78, 2005.
© Springer-Verlag Berlin Heidelberg 2005

36
3 Collision Avoidance for a 7-DOF Redundant Manipulator
represent the arm and its environment. Colbaugh et al. [14] addressed this
problem for a planar manipulator. The obstacles were represented by circles
surrounded by a Surface of Influence (SOI), and the links were modeled by
straight lines. A redundancy-resolution scheme was proposed to achieve
obstacle avoidance. This approach was extended to the 3-D workspace of a
7-DOF manipulator in [75], [71], [24]. In [75] and [71] the manipulator
links are represented by spheres and cylinders and the objects by spheres.
Although this method is convenient for spherical or bulky objects, it results
in major reduction of the workspace when dealing with slender objects.
Moreover, the method is not capable of dealing with tasks involving pass-
ing through an opening. Glass et al. [24] proposed a scheme that considered
an application to remote surface inspection. This application requires the
robot to pass through circular or rectangular openings for inspection of a
space structure, such as the International Space Station. However, they
made the restrictive assumption of having an infinite surface with one
opening which reduces the workspace of the robot. For instance, this
scheme does not permit an “elbow” to back into another opening. More-
over, the arm used in their experiment, the Robotics Research Corporation
7-DOF arm (RRC), is modeled as a series of four straight lines connecting
joints one, three, and five. The thickness of the links is considered via a
“buffer” region in the openings. This simplified model would not be appro-
priate for an arm with a more complex geometry such as the one used in the
research described in this paper. 
A simplified geometrical model for links of industrial manipulators rel-
evant to the study of collisions either with each other or with objects in the
workspace is the cylinder. Also, the cylinder is a very appropriate primitive
for modelling many objects in the workspace such as rods, mesh structures,
openings, etc., without much loss of the available workspace. 
In Section 2, we focus on the special cases of sphere-sphere, sphere-
cylinder, and cylinder-cylinder collision detection and distance calcula-
tions. Considering the importance of cylinder-cylinder collision detection
and also its complexity, a novel method of detecting collisions between two
cylinders using the notion of dual vectors and angles is presented. 
REDIESTRO (Figure 3.1), an isotropic redundant research arm was
selected for experimental verification of the collision avoidance system. Its
special architecture, resulting from kinematic isotropic design objectives
[57], represents a challenge for any collision-avoidance scheme: It has joint
offsets, bends in the links, and actuators that are large in relation to the size
of the links. It is felt that a successful demonstration of the collision-avoid-

3.2  Primitive-Based Collision Avoidance
37
ance scheme on such an arm provides confidence that the system can be
developed and applied to other more conventional (i.e., commercial) 7-
DOF manipulator designs. Section 3 extends the redundancy-resolution
module to the 3D workspace of REDIESTRO. It also describes the incorpo-
ration of different  additional  tasks into  the  redundancy-resolution mod-
ule. Simulation results to study the feasibility of the proposed scheme as
well as effects of different parameters are given. Section 4 presents the
experimental evaluation of the collision- avoidance scheme using REDI-
ESTRO.
Figure 3.1 Perspective view of REDIESTRO
3.2 Primitive-Based Collision Avoidance
Collision avoidance for stationary and moving objects is achieved by
introducing an inequality constraint (see section 2.4.2) as the additional
task in the configuration control scheme for redundancy resolution. The

idea is to model the links of the manipulator and the objects by primitives
such as spheres and cylinders. The major components of the proposed
scheme are outlined below:
• Collision detection/prediction: For those objects (sub-links) that
can potentially collide, determine the critical distance 
, i.e.,
the distance from a critical point of the arm to that of the object.
The critical points associated with the manipulator and the
obstacles are denoted by 
 and 
 with position vectors 
 and
, respectively.
• Critical direction detection: For any pair of critical points 
and 
, determine the critical direction, denoted by 
, a unit
vector directed from 
 to 
. 
• Redundancy resolution: Formulate an additional task and use
configuration control to inhibit the motion of the point 
towards 
 along 
. 
3.2.1
Cylinder-Cylinder Collision Detection
In order to determine the relative position of two cylinders, first the rel-
ative layout of their axes needs to be established. The axes of the cylinders
being directed lines in three dimensional space, we resort to the notion of
line geometry. Specifically, with the aid of dual unit vectors, (or line vec-
tors), and the dual angles between skew lines, we categorize the relative
placement of cylinders and thus determine the possibility and the nature of
collisions between the two cylinders in question. 
We consider each cylinder to be composed of three parts, the cylindri-
cal surface plus the two circular disks as the top and the bottom of the cylin-
der. Four points along the axis 
 of each cylinder 
 are of interest (see
Figure 3.2), namely, 
, 
, 
, and 
. The point 
is any point of refer-
ence along the line. The points 
and 
 with position vectors 
 and 
,
respectively, are the centers of the bottom and top of the cylinder, and 
 is
hij
Pi
c
Pj
c
pi
c
pj
c
Pi
c
Pj
c
uij
Pi
c
Pj
c
Pi
c
Pj
c
uij
Li
Ci
Pi Bi Ti
Hi
Pi
Bi
Ti
bi
ti
Hi
38
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2 Primitive-Based Collision Avoidance
39
the foot of the common normal of the two lines
and
on
. To avoid
ambiguity for the choice of the top and bottom of the cylinder, we can
always choose
and
in such away that the vector
points along
, with
, being a unit vector defining the direction of the cylinder axis
(see Figure 3.2). Each of
,
, and
, can alternatively be defined
through their line coordinates with respect to the reference point
,
namely,
(3.2.1)
(3.2.2)
(3.2.3)
It should be noted that for a given cylinder
, the scalars
and
are
known and fixed values.
3.2.1.1
Review of Line Geometry and Dual Vectors
A brief review of dual numbers, vectors, and their operations, relevant
to our problem is provided in this section. A more detailed discussion can
be found in [4], [90], [95]. A line
can be defined via the use of a dual
unit vector also called a line vector:
(3.2.4)
where
, and
, and
is the dual unity which has the
property that
. Here,
defines the direction of
, while
the
moment of
with respect to a self-understood point O, namely,
(3.2.5)
with p being the vector directed from O to an arbitrary point P of
.
Moreover, e and m are called the primal and dual parts of .
Li
Lj
Li
Bi
Ti
BiTi
ei
ei
Bi
Ti
Hi
Pi
bi
pi
biei
+
=
ti
pi
tiei
+
=
hi
pi
hiei
+
=
Ci
bi
ti
L
eˆ
e
Hm
+
=
eTe
1
=
eTm
0
=
H
0
z
H2
0
=
e
L
m
L
m
p
e
u
=
L
eˆ

Figure 3.2 Cylinder representation, basic notation. 
Now, let 
 and 
, be two lines. Their dual angle is defined as
(3.2.6)
where 
 is the projected angle between 
 and 
, and
is the distance
between 
 and 
. Furthermore, 
(3.2.7)
(3.2.8)
Hence, the dual angle 
uniquely determines the relative layout of the two
lines 
 and 
in space. Furthermore, the following relations that are in
exact analogy with real vectors can be verified:
(3.2.9)
(3.2.10)
Li
Lj
Xˆ
ij
Xij
Hhij
+
=
Xij
ei
ej
hij
Li
Lj
Xˆ
ij
sin
Xij
Hhij
Xij
cos
+
sin
=
Xˆ
ij
cos
Xij
cos
Hhij
Xij
sin
–
=
Xˆ
ij
Li
Lj
Xˆ
ij
cos
eˆi eˆj

=
Xˆ
ij
sin
eˆi
eˆj
u

 nˆ ij

=
40
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2  Primitive-Based Collision Avoidance
41
where 
 is the dual vector representing the line 
that coincides with
the common normal of 
 and 
, and with the same direction as that of the
vector from 
 to 
, namely 
, where 
(3.2.11)
and 
. 
Hence, 
equations 
(3.2.11)
uniquely determine the dual angle 
subtended by the two lines. Three
different possibilities for the layout of two distinct lines 
 and 
 exist as
explained below:
• (A) Non-Parallel and Non-Intersecting Lines:
 is a proper
dual number, i.e., 
, with 
, 1 and 
• (B) Intersecting Lines: 
is a real number, (its dual part is
zero), i.e., 
, with 
, 1 and 
. 
• (C) Parallel Lines: 
 is a pure dual number, (its primal part is
zero), i.e., 
, with 
, 1 and 
. 
Now, for two cylinders 
and 
 to collide, one of the three cases dis-
cussed below must occur:
• (1) Body-Body Collision: This situation  the most likely one 
is shown in Figure 3.3 , where two cylindrical bodies of an object
intersect.
• (2) Base-Body Collision: The cylindrical body of one cylinder
collides with one of the two circular disks of the other cylinder. 
• (3) Base-Base: One of the circular disks of one cylinder collides
with a circular disk of another cylinder. 
(A) CYLINDERS WITH NON-PARALLEL AND NON-INTERSECTING AXES
In order to characterize the types of possible collisions for two cylin-
ders whose major axes are represented by 
 and 
, that are non-parallel
nˆ ij
Nij
Li
Lj
Hi
Hj
nˆij
nij
Hn˜ij
+
=
nij
hj
hi
–
hj
hi
–
--------------------
=
n˜ij
nij
hi
u
nij
hj
u
=
=
Xˆ
ij
Li
Lj
Xˆ
ij
Xij
kS
z
k
0
=
hij
0
z
Xˆ
ij
Xij
kS
z
k
0
=
hij
0
=
Xˆ
ij
Xij
kS
=
k
0
=
hij
0
z
Ci
Cj
Li
Lj
and non-intersecting, the following steps are taken:

(a) First we need to determine the location of the points 
 along 
 and
 along 
, i.e, the feet of the common normal on the two lines. This can
be done by determining the scalars 
 and 
, as given below:
(3.2.12)
(3.2.13)
with 
 and 
.
(b) Now, if 
, then collision is not possible. 
(c) If 
, then collision is possible, as explained below:
• (A-1)1 If 
 and 
, then we have a body-body
collision and the critical points 
 and 
 on the axes are 
 and
, respectively (Figure 3.3), with the critical direction being
. 
• (A-2) If only one of the points 
 or 
lies outside of its
corresponding cylinder, then, we may or may not have a collision.
However, if the two cylinders collide, then this has to be in the
form of a base-body collision only, (Figure 3.4). As an example,
in order to determine the critical points and the critical direction,
we assume that 
 lies inside 
 with 
 lying outside 
. The
critical point 
 of 
 will thus be one of the two points 
 or
, whichever lies closer to
. Moreover, the critical point 
of the cylinder 
 is the projection of 
 on 
. If 
 is the
1. In this notation, the letter indicates the layout of the axes of the two 
cylinders and the number indicates the type of collision.
Hi
Li
Hj
Lj
hi
hj
hi
pi
pj
–


ej
Xij
ei
–
cos



2Xij
sin
------------------------------------------------------------
=
hj
pj
pi
–


ei
Xij
ej
–
cos



2Xij
sin
------------------------------------------------------------
=
hi
pi
hiei
+
=
hj
pj
hjej
+
=
hij
Ri
Rj
+


!
hij
Ri
Rj
+


d
bi
hi
ti
d
d
bj
hj
tj
d
d
Pi
c
Pj
c
Hi
Hj
nij
Hi
Hj
Hi
Ci
Hj
Cj
Pj
c
Cj
Bj
Tj
Hj
Pi
c
Ci
Pj
c
Li
pj
c
42
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2  Primitive-Based Collision Avoidance
43
position vector of 
, we have
(3.2.14)
 where 
 is the vector connecting 
 to 
. We thus consider that
a collision occurs, whenever the following inequality is satisfied 
 It should be noted that the above inequality gives a conservative
prediction of collision between the base and the body of the two
cylinders. In this manner, we implicitly assume that the base of
the cylinder is not a simple circular disk, but, a fictitious semi-
sphere of the same radius. The critical direction 
for 
becomes
(3.2.15)
Case (A-2) above can lead to instability in the redundancy
resolution scheme if the two lines are almost parallel. In this
special situation, the location of the critical points on the two
lines can go through major changes for small changes in the angle
 made by them as shown in Figure 3.5. To remedy this “ill-
conditioning”, we inhibit the motion of two points of the line 
towards their corresponding projections on 
whenever the two
lines are almost parallel. This is achieved by identifying two
critical directions  one for each end of 
 for the redundancy
resolution scheme.
• (A-3) If both 
and 
 lie outside their corresponding cylinders,
then we may have a base-base collision, and the critical points
and direction are determined as explained below (Figure 3.6):
  Denote by 
 the set of distances of 
 and 
 to 
 and 
,
i.e. 
Pj
c
pi
c
pi
p˜j
c ei


ei
+
=
p˜j
c
Pj
c
Pi
pi
c
pj
c
–
Ri
Rj
+


d
uij
Ci
uij
pj
c
pi
c
–
pi
c
pj
c
–
---------------------
=
Xij
Li
Lj
Ci
Hi
Hj
dk
^
`
Bi
Ti
Bj
Tj

Figure 3.3 (A-1) Body-Body collision (non-parallel and non-intersecting 
axes)
Figure 3.4 (A-2) Base-Body Collision (non-parallel and non-intersecting 
axes) 
(3.2.16)
d1
bi
tj
–
d2

bi
bj
–
=
=
d3
ti
tj
–
d4

ti
bj
–
=
=
44
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2 Primitive-Based Collision Avoidance
45
Figure 3.5 Near Parallel axes
and 
, then we have a base-base
collision if 
. Once again, the foregoing prediction
is conservative, as it assumes two semi-spherical base bodies
attached to the ends of the cylinders, rather than the simple
circular disks.
(B) CYLINDERS WITH INTERSECTING AXES
In order to characterize a collision between two cylinders with inter-
secting axes, we first project the end-points 
 and 
 of the cylinder 
onto the line 
 and denote the projected points by 
 and 
. Con-
versely, we project the points 
 and 
of the cylinder 
onto the line 
and denote the projected points by 
and 
. Position vectors of the fore-
going four points will take on the form:
dc
min d1 d2 d3 d4



^
`
{
dc
Ri
Rj
+


d
Bi
Ti
Ci
Lj
B'j
T'j
Bj
Tj
Cj
Li
B'i
T'i

Figure 3.6 (A-3) Base-Base Collision (non-parallel and non-intersecting 
axes)
(3.2.17)
with 
(3.2.18)
• (B-2) If any one of the following four conditions holds, then we
have a base-body collision, and the critical direction is a unit
vector pointing along a vector joining the corresponding critical
points, (Figure 3.7), 
b'i
pi
b'iei
t'i

+
pi
t'iei
+
=
=
b'j
pj
b'jej
t'j

+
pj
t'jej
+
=
=
b'i
pi
bj
–

 ei
t'i


–
pi
tj
–

 ei

–
=
=
b'j
pj
bi
–

 ej
t'j


–
pj
ti
–

 ej

–
=
=
46
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2  Primitive-Based Collision Avoidance
47
(3.2.19)
• (B-3) If none of the foregoing conditions is satisfied, then we do
not have a base-body collision. However, we may have a base-
base collision. The procedure for base-base collision detection for
a pair of intersecting lines is similar to that of case (A-3)
explained earlier (Figure 3.8).
Figure 3.7 (B-2) Base-Body Collision (intersecting axes)
(C) CYLINDERS WITH PARALLEL AXES
For the special case of two parallel lines 
and 
 for which an infi-
nite number of common normals exist, we resort to a unique definition for
one common normal lying closest to the origin [4]  see Figure 3.9). If the
line 
passes through the points 
and 
of 
 and 
(with 
and
 being the closest points of the two lines to the origin), then the dual rep-
resentation of 
 is given as
bi
b'i
ti
and
b'i
bi
–
Ri
Rj
+


d


d
d
bi
t'i
ti
and
t'i
ti
–
Ri
Rj
+


d


d
d
bj
b'j
tj
and
b'j
bj
–
Ri
Rj
+


d


d
d
bj
t'j
tj
and
t'j
tj
–
Ri
Rj
+


d


d
d
Li
Lj
Nij
Hi
Hj
Li
Lj
Hi
Hj
Nij

(3.2.20)
Figure 3.8 (B-3) Base-Base Collision (intersecting axes)
where 
 and 
 are the position vectors of the points 
and 
, respec-
tively, and
is the distance between the two lines.
If 
, then the two cylinders do not collide. However, if
, then, depending on the location of the cylinders along their
axes relative to each other, two special cases of body-body (C-1) and base-
base (C-3) collisions can occur:
• (C-1) If 
, and the projection of either 
 or 
on
 is between 
 and 
, then we have a body-body collision.
As in the case of near-parallel axes mentioned in (A-3), to avoid
ill-conditioning, we specify two critical directions, one for each
end of
(Figure 3.5). 
nˆij
hj
hi
–
hij
---------------
H
hi
hj
u
hij
---------------
+
=
hi
hj
Hi
Hj
hij
hj
hi
–
=
hij
Ri
Rj
+


t
hij
Ri
Rj
+


d
hij
Ri
Rj
+


d
Bi
Ti
Lj
Bj
Tj
Ci
48
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.2 Primitive-Based Collision Avoidance
49
• (C-3) If (C-1) is not satisfied, but
, then we obtain
the distance between the end points of the two cylinders, as in the
(A-3) above (Figure 3.9).
3.2.2
Cylinder-Sphere Collision Detection
This case is simpler than that of cylinder-cylinder collision detection.
Figure 3.10 shows the basic layout used for collision detection of the cylin-
der
and the sphere
. The notation used for the cylinder is the same as
in Section 3.2.1. The sphere
is identified by the location of its center
and its radius. The first step is to determine if there is a risk of collision.
The point
on line
is determined by projecting the center of the sphere
on
,
(3.2.21)
where
is defined as
. The critical distance
is given by
Now, if 
, there is no risk of collision. If 
,
then the following cases can occur:
• If 
 and 
 lies inside the cylinder 
, then the
cylinder and the sphere are in collision and the critical points and
critical direction are defined by
(3.2.22)
(3.2.23)
(3.2.24)
• If 
 and 
lies outside the cylinder 
, then we
may or may not have a collision. The critical point on the line 
is either
or 
 depending on which is closer to 
. Let us 
hij
Ri
Rj
+


d
Ci
Sj
Sj
Pj
Hi
Li
Li
hi
pij ei


ei
pi
+
=
pij
PiPj
hij
hij
pj
hi
–
=
hij
Ri
Rj
+


!
hij
Ri
Rj
+


d
hij
Ri
Rj
+


d
Hi
Ci
uij
pj
hi
–
pj
hi
–
--------------------
=
pi
c
hi
Riuij
+
=
pj
c
pj
Rjuij
–
=
hij
Ri
Rj
+


d
Hi
Ci
Li
Bi
Ti
Hi

Figure 3.9 (C-3) Base-Base Collision (parallel axes)
assume that
is the closer point to
. The critical distance
is given by
. Now, if
, there is no
risk of collision; otherwise, there is a collision and the critical
points and direction are calculated by replacing
with
in
equations (3.2.22) through (3.2.24). It has to be mentioned that
the foregoing inequality gives a conservative prediction of
collision between the sphere and the cylinder. In this manner, we
implicitly assume that the base of the cylinder is not a simple
circular disk, but a fictitious semi-sphere of the same radius.
3.2.3
Sphere-Sphere Collision Detection
This is the simplest case among the three collision-detection schemes
presented. The critical distance
is the distance between the centers of
the two spheres. If
, then there is no risk of collision; other-
wise, the two spheres are in collision.
Bi
Hi
hij
hij
pj
bi
–
=
hij
Ri
Rj
+


!
hi
bi
hij
hij
Ri
Rj
+


!
50
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
51
Figure 3.10 Cylinder-Sphere Collision Detection
3.3 
Kinematic Simulation for a 7-DOF 
Redundant Manipulator
In this section, the redundancy-resolution scheme described in Chapter
2 is extended for the general case of a 7-DOF redundant manipulator work-
ing in a 3-D workspace and applied to REDIESTRO. The feasibility of the
algorithms is illustrated using a kinematic simulation
w
Rj
pi
uij
pij
hij
Ci
Ri
pj
Sj
Hi
Bi
Pi
Ti
Pj
ei
Li

Figure 3.11 Sphere-Sphere Collision Detection
3.3.1
Kinematics of REDIESTRO
The kinematic description of REDIESTRO (a photograph of REDI-
ESTRO is shown in Figure 3.1 is obtained by assigning a coordinate frame
to each link with its z axis along the axis of rotation. Frame {1} is the work-
space fixed frame and frame {8} is the end-effector frame. Two consecu-
tive frames {i} and {i+1} are related by the
homogenous
transformation matrix:
Ri
Si
Rj
W
Pi
uij
hij
Pj
4
4
u
T
i
i
1
+
Ti
cos
Di
Ti
sin
cos
–
Di
Ti
sin
sin
ai
Ti
cos
Ti
sin
Ti
Di
cos
cos
Di
Ti
cos
sin
–
ai
Ti
sin
0
Di
sin
Di
cos
bi
0
0
0
1
=
52
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
53
(3.3.1)
where
;
,
,
, and
are the twist angle, joint angle, offset
and link length, respectively. The Denavit-Hartenberg parameters of REDI-
ESTRO are given in Table A-1 ( ). The homogenous transformation relat-
ing Frame 8 (end-effector frame) to the base frame is given by:
(3.3.2)
3.3.2
Main Task Tracking
The main task is described by the pose (position and orientation) of the
end-effector, defined by the position vector
and the rotation
matrix
of the transformation matrix
. The pose is thus
dimensionally non-homogenous and needs different treatment for the 3-
dimensional vector representing the end-effector position from the
rotation matrix representing orientation. Therefore, the main task is divided
into two independent sub-tasks.
3.3.2.1
Position Tracking
The position is described in the workspace-fixed reference frame. Both
the desired and the actual position are described in this frame. The ith col-
umn of the Jacobian corresponding to the position of the end-effector in
frame {1} is defined by
(3.3.3)
where
is the unit vector along the Z axis of joint i,
is the position of
the end-effector, and
is the position of the origin of the ith frame
with respect to frame {1}. The position and the velocity errors are given by
(3.3.4)
where
is the vector of joint velocities, and the superscript d denotes the
desired values.
R
i
i
1
+

3
3
u
P
i
i
1
+

3
1
u
0
1
i
1
7
o
=


=
i
1
7
o
=
Di Ti bi
ai
T
1
8
T
1
2
T}
2
3
T
7
8
=
P
1
8

3
1
u
R
1
8

3
3
u
T
1
8
3
3
u
JPe i 3
1
u
Zˆ
1
i
P
1
8origin
P
1
iorigin
–


u
i
1
7
o
=
=
Zˆ
1
i
P
1
8
P
1
iorigin
ep
P
1 d
8
P
1
8
e·
p

–
JPeq·
P·
1 d
8
–
=
=
q·

3.3.2.2
Orientation Tracking
 called the Direction Cosine matrix. The ith column of the Jacobian
matrix, which relates the angular velocity of the end-effector (
) to the
joint velocity, i.e., 
, can be calculated from the relation 
(3.3.5)
The procedure for finding the orientation error and its derivative is
more complicated than that for the case of position. In this case, the desired
orientation is described by a 
 matrix whose columns are unit vectors
coincident with the desired x, y, and z axes of the end-effector. The actual
orientation of the end-effector is given by the matrix 
. The orientation
error is calculated as follows [42]: 
, where 
 and 
 are
the axis and angle of rotation which transform the end-effector frame to the
desired orientation. The calculation of the angular velocity error is straight-
forward:
(3.3.6)
3.3.2.3
Simulation Results
The performance of redundancy resolution in tracking the main task
trajectories is studied here by computer simulation. The integration step
size in the following simulations is 10 ms, and the main task consists of
tracking the position and orientation trajectories, generated by linear inter-
polation between the initial and final poses. It should be noted that interpo-
lation of rotations is a much more complex problem than point interpolation
in 
. Sophisticated algorithms have been proposed in the literature for
this purpose, e.g., see [22], [79], but these are not intended for real-time
implementation. For this reason, we use simple linear interpolation for both
translation and rotation, which nevertheless leads to satisfactory results.
The initial and final poses are specified below:
The orientation of the end-effector is represented by the 
matrix
3
3
u
R
1
8
Z
1
e
Z
1
e
JOeq·
=
JOe i 
Zˆ
1
i
i
1
7
o
=
=
3
3
u
R
1
8
eO
K
1
T
sin
=
K
1
T
e·
O
Zd
1
e
JOeq·
–
=
IR3
54
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
55
where 
. The overall redundancy-resolution scheme has not been
changed (see Section 2.3.1.3 ). The only difference consists of splitting the
main task into two independent sub-tasks with weighting matrices denoted
by 
 and 
 corresponding to position and orientation respectively of
the end-effector.
The joint velocities are calculated from
(3.3.7)
where
(3.3.8)
(3.3.9)
The subscript c refers to the additional task which is not active in the simu-
lation presented in this section. It should be noted in the following simula-
tions that redundancy resolution is implemented in closed-loop. Hence, the
reference velocities are given by:
(3.3.10)
(3.3.11)
where 
and 
are the position and orientation proportional gains
respectively. In the first simulation, the sub-task corresponding to tracking
the desired orientation is inactive. a and b show the
P
1
8
d
intial
–
61.8
231.4
1127.1

=
P
1
8
d
final
–
500
500
1102.3

=
R
1
8
d
final
–
U 0 U
0 1 0
U
–
0 U
=
R
1
8
d
initial
–
0.143
0.25
–
0.958
–
0.93
–
0.30
0.22
–
0.339 0.921
0.19
–
=
U
2 2
e
=
WPe
WOe
q·
A 1
– b
=
A
Jpe
T WpeJpe
JOe
T WOeJOe
Jc
TWcJc
Wv
+
+
+
=
b
Jpe
T WpeP·
r
JOe
T WOe:r
Jc
TWcZ·
r
+
+
=
P·
r
P·
1
8
d
KpP
P
1
8
d
P
1
8
–


+
=
:r
Z
1
d
e
KpOeO
+
=
KpP
KpO

Figure 3.12 Simulation results for position and orientation tracking: (a)
position error (m); (b) orientation error (rad)
0
0.5
1
1.5
2
-6
-4
-2
0
2
4
6 x 10
-3
 (a)
time (s)
0
0.5
1
1.5
2
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
(b)
time (s)
WPe
10I3
3
u
WOe
0I3
3
u
Wv
I7
7
u
=
=
=
56
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
57
Figure 3.12 (contd.) Simulation results for position and orientation 
tracking: (c) position error (mm); (d) orientation error (rad)
0
0.5
1
1.5
2
-50
0
50
100
150
200
250
300
350
400
450
 (c)
time (s)
WPe
0I3
3
u
WOe
10I3
3
u
Wv
I7
7
u
=
=
=
0
0.5
1
1.5
2
-4
-3
-2
-1
0
1
2
3
4
5
6 x 10
-4
(d)
time (s)

position and orientation errors. In the second simulation only the orienta-
tion sub-task is active, and the results are shown in c,d. In this case, no
attempt has been made to follow the position trajectory. The position and
orientation errors are mainly due to the presence of 
 in the damped
least-squares formulation of the redundancy resolution.
In the following simulations, both position and orientation sub-tasks
are active. a-c show the results of the simulation with small 
 (the singu-
larity robustness factor). As we can see in  a, at some point, the position and
orientation sub-tasks are in conflict with each other. This causes the whole
Jacobian of the main task to approach a singular position where the condi-
tion number of the Jacobian matrix is 
. Therefore, there is
considerable error on both sub-tasks.   d, e, and f show the simulation
results with a larger value of 
. This time, the whole Jacobian matrix
remains far from singularity (
), and the maximum errors
are reduced significantly. However, in the case that 
, there is
considerable error at the end of the trajectory. This shows that 
 should
be selected as small as possible.
Figure 3.13 (a) Condition number of matrix 
Wv
Wv
Condmax
403
=
Wv
Condmax
105
=
Wv
20I7
7
u
=
Wv
time (s)
JTPe
JTOe

T;
Wv
1I3
3
u
=
58
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
59
Figure 3.13 (contd.) Simulation results when both main sub-tasks are 
active; (a)-(c):
Figure 3.13 (contd.) (d) Condition number of matrix 
0
0.5
1
1.5
2
-1
0
1
2
3
0
0.5
1
1.5
2
0
0.1
0.2
(c) Orientation
    error (rad)
time (s)
time (s)
(b) Position
    error (mm)
Wv
1I3
3
u
=
time (s)
JTPe
JTOe

T;
Wv
1I3
3
u
=

Figure 3.13 (contd.) Simulation results when both main 
sub-tasks are active; (d)-(f):
The isotropic design of REDIESTRO reduces the risk of approaching a
singular configuration over a greater part of the workspace. However, this
risk cannot be eliminated completely, and the singularity robustness factor
 should either be selected large enough, which introduces errors in the
main task, or should be time-varying, with diagonal entries proportional to
the inverse of the minimum singular value of the “normalized” Jacobian of
the main task. The Jacobian matrix is normalized using the concept of char-
acteristic length [85] to resolve the dimensional inhomogeneity in the
matrix due to the presence of positioning and orienting tasks.  Figure 3.14
shows the comparison between these two approaches. As one can conclude,
the variable-weight formulation shows better performance because 
 has
small values far from a singular configuration. Hence, variable weights do
not introduce errors on the main task, and grow appropriately near a singu-
lar configuration. While the computational complexity of the numerical
implementation of the SVD algorithm for a 7-DOF arm may not be accept-
able for real-time control, bounds for the singular values of 
can be
0
0.5
1
1.5
2
0
0.5
0
0.5
1
1.5
2
0
0.2
(e) Position 
error (mm) 
(f) Orientation 
 error (rad)
time (s)
time (s)
Wv
20I3
3
u
=
Wv
Wv
J
60
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
61
found by means of bounds on the real, non-negative eigenvalues of 
.
As shown in [86], these bounds can be found quite economically by resort-
ing to the Gerschgorin Theorem [89]
Figure 3.14 Comparison between the fixed and the time-varying
singularity robustness factor
3.3.3
Additional Tasks
The additional tasks incorporated in the redundancy resolution module
are as follows: Joint Limit Avoidance (JLA), Stationary and Moving Obsta-
cle Collision Avoidance (SOCA, MOCA) and Self Collision Avoidance
(SCA).
JJT
0
0.5
1
1.5
2
0
20
40
60
80
100
0
0.5
1
1.5
2
0
0.1
0.2
0.3
D Wv
DI7
7
u
=


.-.- Fixed Wv, ___ Variable Wv
 time (s)
time (s)
Orientation Error (rad)

3.3.3.1
Joint Limit Avoidance
The JLA algorithm developed in Section 2.4.1.3 is extended here to 3-
D without major modifications. In this case, the Jacobian matrix of the JLA
corresponding to the ith joint is:
, where 
is the ith column of
the matrix 
. The same weight scheduling scheme is used as that
implemented for JLA in Section 2.4.1.3 . In the following simulation, the
main task is the same as in Section 3.3.2 with both position tracking and
orientation tracking active. Figure 3.15 shows that with JLA inactive, joint
4 has a minimum value equal to 67 degrees. When the JLA is active with
minimum 80 degrees for joint 4, this joint is prevented from violating its
limit while tracking the main task trajectory. The position and orientation
tracking errors converge to small values except for a short transition period
when the JLA task becomes active.
Figure 3.15 Simulation result for JLA in the 3-D workspace with 
3.3.3.2
Stationary and Moving Obstacle Collision Avoidance
A photograph of REDIESTRO, with its actual links and actuators, is
shown in Figure 3.1 , while Figure 3.16 depicts the arm with each moving
JC
ei
T
=
ei
I7
7
u
0
0.5
1
1.5
2
65
70
75
80
85
90
95
100
105
110
115
-.-.- JLA active
____ JLA inactive 
q4 deg


time (s)
q4min
80q
=
62
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
63
element of the arm enclosed in a cylindrical primitive. The links and the
actuator units are modeled by 14 cylinders in total, the fourth link having
the maximum number of 4 sub-links.  The end-effector and the tool
attached to it are enclosed in a sphere.
Figure 3.16 REDIESTRO with simplified primitives
The environment is modeled by spherical and cylindrical objects. Each
obstacle is enclosed in a cylindrical or a spherical Surface of Influence
(SOI). Note that the dimensions of the SOIs are used in distance calcula-
tion, collision detection and obstacle avoidance modules rather than the
actual dimensions of the obstacles. 
Additional task formulation: Let us assume that after performing the dis-
tance calculation, the jth sub-link of the ith link of the manipulator 
or
depending on the primitive used for modeling  has the risk of collision
with the kth obstacle (
or 
). The critical point on the sub-link and the
obstacle (
 and are 
) and the critical direction (
) are determined
by the collision detection algorithm described in Section 3.2 . Now, the
additional task 
 for the redundancy-resolution module is defined by:
Sij
Cij
Sk
Ck
Pij
c
Pk
c
uij k

zi

(3.3.12)
where 
 is the critical distance, 
is the Jacobian
matrix mapping the joint rates  into the velocity of the critical point 
 of
the manipulator, while 
is the velocity of the obstacle k. The desired val-
ues for the active constraints (additional tasks) are: 
. Note
that we still need to calculate the Jacobian of the active constraints. First,
the Jacobian of the critical point is calculated, i.e.,
(3.3.13)
The kth column of the matrix 
is given by:
(3.3.14)
where 
 is the unit vector in the direction of rotation of the kth joint,
is the position vector of the origin of the kth local frame. Note, that
all variables are defined in frame {1}. Further, the Jacobian of the additional
task to be used by the redundancy-resolution module is calculated as:
(3.3.15)
Analysis: The performance of the obstacle avoidance scheme has been
studied by various simulations for different scenarios. As an example, the
simulation results for MOCA are illustrated in Figure 3.17 . In these simu-
lations, the main task consists of keeping the position of the end-effector
constant while avoiding collisions with a moving object. Figure 3.17 shows
the results of the simulations for different constant values of the weighting
matrix corresponding to the collision avoidance task. It should be noted that
when Wc is too small, the object collides with the arm. When 
 is large
enough, no collision occurs, but there is a rapid increase in the joint veloci-
ties which results in a large pulse in joint accelerations (see Figure 3.17 ). In
a practical implementation, the maximum acceleration of each joint would
be limited and this commanded joint acceleration would result in saturation
of the actuators.
zi k

hij k

z·
ij k


u
– ij k

T
Jij
c q·
p·
k
c
–


=
=
hij k

Jij
c q·
p·
ij
c
q·
w
e
w
{
q·
Pij
c
p·
k
c
zi
d
z·
i
d
0
=
=
Jij
c
J3
i
u
03
7
i
–
u
>
@
=
J
J k
 3
1
u
aˆk
pij
c
pkorigin
–


u
k
1
i
o
=
=
aˆk
pkorigin
Jc
uij k

T
–
Jij
c
=
WC
64
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
65
Figure 3.17 Simulation results for MOCA with fixed weighting factors:
(a) Critical distance (mm); (b) 2-norm of joint velocities (rad/s)
mm and SOI = 100 mm
- - - 
, ___ 
, 
-.-.- 
 (collision occurred)
Ro
70
=
Wc
0.01
=
Wc
1
10 4
–
u
=
Wc
1
10 5
–
u
=
time (s)
0
0.5
1
1.5
2
2.5
3
3.5
4
60
70
80
90
100
110
120
130
140
150
(
)
Boundary of the object
time (s)
(a)
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
(
)
 time (s)
(b)

Figure 3.17 (contd.) Simulation results for MOCA with fixed 
weighting factors: (c) 2-norm of joint accelerations (rad/s2)
The optimal value of 
depends on factors such as object velocity,
end-effector velocity, and location of the critical point. Therefore, from pre-
liminary simulations, it was observed that finding a fixed value which per-
forms well in different situations is very difficult. To overcome this
problem, a time-varying formulation [14] has been used to adjust the
weighting factor automatically. In this way, the weighting factor corre-
sponding to each active task is adjusted according to the following scheme:
(3.3.16)
where 
 is the distance between the critical point on the link and either the
center of the object for a spherical object or the projection of the critical
point on the axis of the cylinder in the case of a cylindrical object. 
 and
 are the radius and surface of the influence of the object respectively.
shows the results of the simulation using this formulation, which for the
case of k = 0.01, shows successful operation of MOCA, with minimum
acceleration.
0
0.5
1
1.5
2
2.5
3
3.5
4
0
5
10
15
20
25
30
35
40
(
)
time (s)
WC
Wc
k
1
dc
RO
–

2
--------------------------
1
SOI
RO
–

2
-------------------------------
–
©
¹
¨
¸
§
·
=
dc
RO
SOI
(c)
66
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.3 Kinematic Simulation for a 7-DOF Redundant Manipulator
67
Figure 3.18 MOCA simulation results for time-varying weight factors:
(a) critical distance (mm); (b) 2-norm of joint velocities (rad/s)
- - - 
, ___ 
, -.-.- 
(obstacle’s radius 
= 70 mm and SOI = 100 mm)
k
100
=
k
1
=
k
0.01
=
0
0.5
1
1.5
2
2.5
3
3.5
4
60
70
80
90
100
110
120
130
140
150
Critical Distance
time (s)
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
2-Norm of the Joint Velocities
time (s)
(b)
(a)

Figure 3.18 (contd.) MOCA simulation results for time-varying 
weight factors: (c)
; (d) 2-norm of joint accelerations (rad/s2)
0
0.5
1
1.5
2
2.5
3
3.5
4
0
0.5
1
1.5
2
2.5
3 x 10
-3
Wc
 time (s)
0
0.5
1
1.5
2
2.5
3
3.5
4
0
5
10
15
20
25
time (s)
Wc
(c)
(d)
68
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.4  Experimental Evaluation using a 7-DOF Redundant Manipulator
69
Figure 3.19 General block diagram for the hardware demonstration
3.4 Experimental Evaluation using a 7-DOF Redundant
Manipulator
The main objective of these experiments is to demonstrate the capabil-
ity of the redundancy resolution module in performing the main tasks (posi-
tion and orientation tracking) while using the extra degrees-of-freedom to
fulfill additional tasks (obstacle and joint limit avoidance) for REDI-
ESTRO. The general block diagram of the different modules involved in
the hardware experiment is shown in Figure 3.19 .
The three major modules are:
• The redundancy resolution module (RR)
• The robot and its associated control hardware and software
• The robot animation software: Multi-Robot Simulation (MRS)
system [9], [10], [77].
In order to distinguish between the performance of the robot controller
and the redundancy-resolution scheme, two separate control loops are
implemented, one at the Cartesian space level (including the RR) and the
MRS
SGI Workstation #2
Joint trajectory
SGI Workstation #1
Redundancy 
Obstacle
Input
data
SUN Workstation
VME cage
REDIESTRO
+
Environment
Processor
Boards
S bus-VME
adaptor
Serial and Parallel ports
Host for Real-
Resolution &
Avoidance
-Time OS

other at the low-level joint controller. In this way, the kinematic simulation
(including RR) running on an SGI workstation, generates the desired joint
trajectory and this trajectory is then transferred as the joint set points to the
VME-bus based controller to drive the robot’s PID joint controller.
An obstacle-avoidance system essentially deals with a complex envi-
ronment. There are many limitations in creating (modeling) a robot’s envi-
ronment such as space, material, equipment and financial limitations.
Creating a time-varying environment (as in the case of moving obstacles)
can be even more difficult. One solution to this problem is online transmis-
sion of a robot configuration to a workstation running a graphics visualiza-
tion of the arm (MRS). MRS serves as a virtual environment; the graphics
model of the robot mirrors the exact motion of the arm, and the environ-
ment can be modeled in the graphics program. This approach has two main
advantages:
• Any complex environment can be modeled with a desired
precision (including a time-varying environment)
• The risk of damage to the robot is reduced.
3.4.1
Hardware Demonstration
Three different scenarios were selected to verify the performance of the
obstacle-avoidance based redundancy-resolution scheme in executing the
following tasks: Position tracking, orientation tracking, stationary and mov-
ing obstacle collision avoidance, joint limit, and self-collision avoidance. In
each of these scenarios, one or multiple features were active at different
instants of execution. The sequence of steps undertaken in each case is as
follows:
1. Generate the joint trajectory with the redundancy resolution and
obstacle avoidance simulation.
2. Verify the result using MRS (e.g., are the obstacles avoided?).
3. Adjust parameters and repeat step 2 if necessary.
4. Position the stationary obstacles in the workspace.
5. Use the command trajectory to run the robot.
6. Record the joint history for further analysis
70
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.4  Experimental Evaluation using a 7-DOF Redundant Manipulator
71
For demonstration purposes, the stationary obstacles were built using
styrofoam and accurately positioned in the workspace. However, the mov-
ing object used in the second scenario was not constructed, instead, the per-
formance of the collision avoidance algorithm was observed using the
virtual models of the arm and the object in MRS.
3.4.2
Case 1: Collision Avoidance with Stationary Spherical Objects 
In this scenario, the end-effector was commanded to move from its ini-
In the second scenario, the end-effector was commanded to keep its ini-
tial position to a final desired position: There were two stationary objects to
be avoided in the workspace. The orientation tracking task was not acti-
vated in this scenario; the orientation of the end-effector was not controlled.
As an example, the plots of the commanded and actual joint values and
rates for the first joint are given in Figure 3.20 The set-point command tra-
jectory leads the actual joint trajectory by 
 second which is a typical
delay of a PID controller (Figure 3.20 a). Figure 3.20  b and c show the
desired and actual rates respectively.  One can see that the actual rates fol-
low adequately the joint set-point command, except when the joint motion
is dominated by stiction. The stiction effects also explain the position error
at the end of the trajectory. Note that the PID controller only uses the rate
information (obtained by numerically differentiating the measured joint
angles) to provide damping. The oscillations shown in the PID rates are
probably due to underdamped tuning of the PID parameters and noise due
to numerical differentiation.
Figure 3.21 shows the snapshots of the arm motion. We can see that
without activating the obstacle avoidance feature (left sequence), the posi-
tion trajectory is followed perfectly, but, there are several collisions with
the obstacles. Figure 3.21 (right sequence) shows the successful operation
of position tracking and obstacle avoidance (visualization of the hardware
experiment). This scenario demonstrates the capability of the redundancy-
resolution module in performng position tracking and avoiding collisions
with obstacles.
3.4.3
Case 2: Collision Avoidance with a Moving Spherical Object
tial position while the orientation was changed. There was also a moving
object to be avoided. In order to satisfy the main task, six DOFs are
required, leaving one DOF for additional tasks. Figure 3.22  shows the
actual joint angles for joints 2 and 3. The joints initially start moving to
realize the commanded change of orientation, but this direction is reversed
0.1
a

Figure 3.20 Case 1: a) Joint 1 (deg); b) derivative of the joint set-point 
command (deg/s); c) derivative of joint trajectory in hardware 
experiment (deg/s).
for joint 2, at 0.9 second, when the arm starts to take evasive action to pre-
vent a collision. The joint-2 angle rapidly increases to a peak value of 
degrees at 2 seconds. At 2.4 seconds, joint-2 quickly changes its direction
to respect the imposed joint limit (software limit to prevent self-collision)
of 
. It should be noted that there are more active additional tasks than
the available degrees of redundancy. However, task-prioritized formulation
of redundancy resolution is capable of handling these difficult situations
and leads only to a graceful performance degradation for the less prioritized
tasks (in this case position and orientation tracking).
Figure 3.23 left sequence (simulation results), shows that without any
0
5
10
15
−16
−14
−12
−10
−8
−6
−4
−2
0
0
5
10
15
−8
−6
−4
−2
0
2
4
6
8
0
5
10
15
−10
−8
−6
−4
−2
0
2
4
6
8
10
joint set-point command
hardware experiment
  (a)
time (s)
  (b)
(c)
time (s)
time (s)
30
a
35q
72
3 Collision Avoidance for a 7-DOF Redundant Manipulator
obstacle avoidance, joint-limit avoidance, and self-collision avoidance pro-

3.5  Conclusions
73
visions, only the main task consisting of position and orientation tracking
can be successfully executed. However, there are multiple collisions with
objects and self-collision with the base. The right sequence of Figure 3.23
shows that by activating different modulesboth the main and additional
tasks can be performed simultaneously (visualization of the hardware
experiment).
3.4.4
Case 3: Passing Through a Triangular Opening
The environment was modeled by three cylindrical objects forming a
triangular opening. The end-effector trajectory was defined as a straight
line passing through this opening. Each obstacle is enclosed in a cylindrical
SOI. The left column in Figure 3.24 (ag) shows the motion (simulation
results) of the arm when the obstacle-avoidance module is not activated. As
can be seen, the end-effector follows the desired trajectory; however, there
are multiple collisions between the links or the actuators and the obstacles.
By activating the obstacle-avoidance module, both the end-effector trajec-
tory following and obstacle avoidance were achieved, as can be seen in the
right column of Figure 3.24 (hk)  visualization of the hardware experi-
ment.
3.5
Conclusions
In this chapter, the extension of the redundancy-resolution and obstacle-
avoidance module to the 3D workspace of REDIESTRO was addressed.
The obstacle-avoidance algorithm was modified to consider 3-D objects. A
primitives-based collision-avoidance scheme was described. This scheme is
general, and provides realism, efficiency of computation, and economy in
the use of the amount of free space around a redundant manipulator. Differ-
ent possible cases of collisions were considered. In particular, cylinder-cyl-
inder collision avoidance which represents a complex case for a collision-
detection scheme was formalized using the notion of dual vectors and
angles. 
Before performing the hardware experiments using REDIESTRO to
evaluate the performance of the redundancy-resolution and obstacle-avoid-
ance modules, extensive simulations were performed using the kinematic
model of REDIESTRO. These simulations were aimed at a study of the fol-
lowing issues:

Figure 3.21 Collision avoidance with stationary spherical objects
Left sequence: simulation with no 
obstacle avoidance provision
Right sequence: Visualization of 
hardware experiment
74
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.5  Conclusions
75
Figure 3.22 Case 2: a) joint 2, b) joint 3 (degrees)
• Position and orientation tracking: Considering the complexity
of the singular regions existing in the 3D workspace of a 7-DOF
manipulator, 
the 
singularity-robustness 
formulation 
of
redundancy was shown to be necessary in practical applications.
It was shown that by a proper selection (or a time-varying
formulation) of 
, the weighting matrix of the singularity-
robustness task, the effect of this term on tracking performance
can be minimized.
• Performing additional task(s): Joint limit avoidance and
obstacle avoidance were implemented for REDIESTRO. It was
shown that the formulation of additional tasks as inequality
constraints, may result in rapid change in joint velocities causing
a large pulse in joint accelerations. In a practical implementation,
since the maximum acceleration of each joint would be limited,
such a commanded joint acceleration would result in saturation
of the actuators. A time-varying formulation of the weighting
matrix, 
, was proposed which successfully overcame this
problem.
0
1
2
3
4
5
6
7
8
9
10
−5
0
5
10
15
20
25
30
35
40
0
1
2
3
4
5
6
7
8
9
10
−20
0
20
40
60
80
100
joint set-point command
hardware experiment
  (a)
 (b)
time (s)
time (s)
Wv
Wc
• Fine tuning of control gains and weighting matrices

Figure 3.23 Collision Avoidance with moving spherical object. 
Left (top to bottom): simulation 
with obstacle avoidance (MOCA) inactive
Right: Visualization of hardware 
experiment.
76
3 Collision Avoidance for a 7-DOF Redundant Manipulator

3.5  Conclusions
77
Figure 3.24 Passing through a triangular opening
Left sequence: Simulation with obstacle avoidance inactive.
Right sequence: Visualization of the hardware demonstration 
with obstacle avoidance active

Three scenarios encompassing most of the redundancy-resolution and
obstacle-avoidance system features described in this chapter have been suc-
cessfully demonstrated on real hardware, i.e., the REDIESTRO manipula-
tor. Despite the geometrical complexity of REDIESTRO, the arm is
entirely modeled by decomposition of the links and attached actuators into
sub-links modeled by simple volume primitives. Moreover, due to the com-
plex and unusual shape of REDIESTRO, it is believed that adapting the
algorithms to other manipulators will in general be simpler.
The current redundancy-resolution and obstacle-avoidance scheme pro-
vides an intelligently assisted tele-operation mode to the human operator in
that one only needs to specify the desired location and orientation of the
end-effector, and the system automatically takes care of the details of
motion control, configuration selection, and generalized collision avoid-
ance, including joint-limit and self-collision avoidance, in addition to colli-
sion with objects in the workspace. However, at this stage the redundancy-
resolution scheme cannot handle situations where the manipulator comes in
contact with its environment. Further modification to the redundancy-reso-
lution scheme is needed in order for it to be used in a force or compliant
control scheme. This issue will be addressed in the next chapter. 
78
3 Collision Avoidance for a 7-DOF Redundant Manipulator

CHAPTER  4
CONTACT FORCE AND COMPLIANT MOTION CONTROL
4.1
Introduction
Robotic tasks mainly fall into two categories: Constrained and uncon-
strained motions. During the initial stages of development in robotics, most
successful applications dealt with position control of unconstrained motion
of robot manipulators. The nature of these tasks does not require a robot to
come in contact with its environment (work piece). Spray painting is an
example of such a task in which the robot brings a spray gun near the sur-
face to be painted and then sweeps across the surface with a specified
velocity. Another example is that of seam welding. In some applications,
where a robot comes in contact with its environment (as in the case of mate-
rial handling), precise control of the interaction with the object is not
required. The problem that arises when using a position control scheme in a
constrained motion is that the robot-environment interaction forces are
treated as disturbances. The controller tries to reject these forces, and
hence, gives rise to larger interaction forces. The consequences of this are
saturation, instability, or even physical failure and damage to the robot and
the environment. Whitney [94] gives a historical perspective on robot force
control. Force control strategies have been mainly designed to use force
feedback sensory information. 
Salisbury [60] proposed a stiffness control scheme. Raibert and Craig
[56] proposed a hybrid position-force control scheme. Yoshikawa [96],
McClamroch and Wang [45] proposed a method based on a constrained
dynamic model of a manipulator. Hogan introduced the impedance control
idea in a series of papers in the mid-1980’s. In [30], he proposed the funda-
mental theory of impedance control which showed that command and con-
trol of a vector such as position or force is not enough to control the
dynamic interactions between a manipulator and its environment. This
emphasizes the main problem of hybrid position-force control, i.e., its fail-
ure to recognize the importance of manipulator impedance. The impedance
control scheme overcomes this problem, but it ignores the distinction
between position and force controlled subspaces, and no attempt is made to
4
Contact Force and Compliant Motion Control
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 79–117, 2005.
© Springer-Verlag Berlin Heidelberg 2005

80
4 Contact Force and Compliant Motion Control
follow a commanded force trajectory. Therefore, Anderson and Spong [1]
proposed a Hybrid Impedance Control (HIC) scheme, and Liu and Golden-
berg [40] introduced a robust HIC method.
The aforementioned methods can be divided into two main categories,
referred to as constrained motion [56], [96], [45], and compliant motion
[30], [1], [40] approaches. In the next sections, an outline of these
approaches is given. Note that the above mentioned algorithms are not
directly applicable to redundant manipulators. However, a careful review of
these algorithms gives guidelines for selecting force or compliant motion
control for redundant manipulators. Recent work has specifically concen-
trated on force o compliant motion control for redundant manipulators [69],
[53], [50], [29]. A class of nonlinear contact controllers is introduced in
[69]. Each controller consists of a nonlinear gain cascaded with a linear
fixed-gain proportional-integral (PI) force controller and proportional-
derivative (PD) compliance controller. In [53], an extended HIC scheme is
presented which achieves an inertial decoupling of the motion and force
controlled subspaces and internal motion control using a minimal parame-
trization of motion and force controlled subspaces and the null-motion
component. No experimental results are given. A force control scheme for
redundant manipulators is presented in [50] which decouples the motion of
the manipulator into task-space motion and internal motion while providing
for the selection of the dynamic characteristics for the motions. Hattori and
Ohnishi [29] describe a decentralized compliant motion control scheme for
redundant manipulators based on the concept of virtual impedance. The
manipulator is divided into several subsystems each of which performs
autonomously using virtual impedance and information from the end-effec-
tor subsystem. Simulation and experimental results are given for a redun-
dant planar manipulator.
In the remainder of this chapter, algorithms proposed for force and
compliant motion control of redundant manipulators are presented. Section
4.3.1 addresses the extension of configuration control at the acceleration
level. Section 4.3.2 introduces the Augmented Hybrid Impedance Control
(AHIC) scheme. The feasibility of this scheme with respect to performing
both the main and additional tasks is studied using a 3-DOF planar arm.
The AHIC scheme is then modified to cop with the uncontrolled self-
motion. The AHIC scheme with self-motion stabilization is presented in
4.3.3. An adaptive version of the AHIC scheme is presented in Section

4.2  Literature Review
81
4.2
Literature Review
4.2.1
Constrained Motion Approach
This approach considers the control of a manipulator constrained by a
rigid object1 in its environment. If the environment imposes purely kine-
matic constraints on the end-effector motion, only a static balance of forces
and torques occurs (assuming that the frictional effects are neglected). This
implies no energy transfer or dissipation between the manipulator and the
environment. This underlies the main modeling assumption made by [45]
where an algebraic vector equation restricts the feasible end-effector poses.
The constrained dynamics can be written as:
(4.2.1)
where
is the vector of applied forces (torques), H(q) is the 
symmet-
ric positive definite inertia matrix, h is the vector of centrifugal, Coriolis,
and gravitational torques. 
is the generalized task coordinates, and
 is the constraint equation, continuously differentiable with
respect to 
. It is assumed that the Jacobian matrix is square and of full
rank. The analysis given below follows that in [45], the generalized force2
 in (4.2.1) is given by:
(4.2.2)
where
is the vector of generalized Lagrange multipliers. Using
the forward kinematic relations:
(4.2.3)
1. A work environment or object is said to be rigid when it does not
deform as a result of application of generalized forces by the manipulator. 
2. In the rest of this chapter, the term “force” refers to both interaction 
force and torque. 
) p
 
0
=
H q
 q··
h q q·



+
W JT
–
F
=
W
n
n
u
p
Rn

) p
 
Rm

p
F
F
) p
 
w
p
w
---------------
©
¹
§
· T
O
=
O
Rm
1
u

p·
Jq·
=
p··
Jq··
J·q·
+
=

and assuming that the Jacobian matrix is invertible, we can obtain the fol-
lowing constrained dynamics expressed with respect to generalized task
coordinates directly from (4.2.1):
(4.2.4)
where
(4.2.5)
A nonlinear transformation can then be used to transfer to a new coordinate
frame. It is assumed that there is an open set 
 and a function 
such that 
(4.2.6)
where 
(4.2.7)
Now, defining another coordinate system represented by the vector x,
we obtain the following nonlinear transformation X:
which is differentiable and has a differentiable inverse given by:
(4.2.8)
Hp p
 p··
hp p p·



+
u
F
–
=
) p
 
0
=
Hp
J T
– H q
 J 1
–
=
hp
H
–
pJ·q·
J T
– h q q·



+
=
u
J T
– W
=
4
Rn
m
–

:
) : p2

 p2



0
p2
4


=
p
p1m
1
u
p2 n
m
–


1
u
=
x
X p
 
p1
: p2


–
p2
=
=
p
Q x
 
x1
: x2


+
x2
=
=
82
4 Contact Force and Compliant Motion Control

4.2  Literature Review
83
where x is partitioned conformably with (4.2.7). The Jacobian of (4.2.8) is
defined by:
(4.2.9)
Transforming the equation of motion in (4.2.4) to the generalized coordi-
nate x, we obtain:
(4.2.10)
where
(4.2.11)
Note that in this transformed frame, the constraint equation takes the simple
form 
. Equations (4.2.10) can be simplified as follows:
(4.2.12)
where 
 and 
 are defined by
(4.2.13)
The hybrid control law is defined as
T x
 
Q x
 
w
x
w
---------------
Im
: x2


w
x2
------------------
0
In m
–
=
=
Hx x
 x··
hx x x·



+
TTu
TTF
–
=
x1
0
=
Hx
TT x
 Hp Q x
 

T x
 
=
hx
TT x
 Hp Q x
 

T· x
 x·
TT x
 hp Q x
  T x
 x·



+
=
x1
0
=
E1HxE2
Tx··
2
E1hx
+
E1TT u
F
–


=
E2HxE2
Tx··
2
E2hx
+
E2TTu
=
x1
0
=
E1
E2
In
ET1 ET2
[
,
]
=
ET1
Im
0
©
¹
§
·
=
ET2
0
In
m
–
©
¹
§
·
=

(4.2.14)
where 
(4.2.15)
where 
, 
, and
are feedback gain matrices. By replacing the con-
trol law (4.2.14) in the equations of motion (4.2.12), the following closed-
form system of equations is obtained:
(4.2.16)
where 
 and 
. The closed-loop equations of
motion given by (4.2.16) imply that 
as 
 through a proper
choice of feedback gains and also 
 as 
. Hence, the closed-
loop system is asymptotically stable. 
A hybrid position and force controller is proposed in [56] where the
task space is divided into two orthogonal subspaces - position controlled
and force-controlled - using a selection matrix S. The diagonal elements of
the selection matrix S are selected as 0 or 1 depending on which degrees of
freedom are force-controlled and which are position-controlled (Figure
4.1). 
Mills [46] showed that the constrained motion control approach of
McClamroch and Wang [45] is identical to the hybrid position and force
control scheme if the selection matrix S is replaced by:
TTu
ux
uf
+
=
ux
Hx 0 E2
T
x··
d
Kv x·
d
x·
–


Kp xd
x
–


+
+
>
@
hx x x·



+
=
uf
E1
T 0
TTFd
GFTT Fd
F
–


+
>
@
=
Kp
Kv
GF
E1HxE2
T e··
2
Kve·
2
Kpe2
+
+


Im
GF
+

E1TT Fd
F
–


=
E1HxE2
T e··
2
Kve·
2
Kpe2
+
+


0
=
e1
0
=
e1
x1
x1d
–
=
e2
x2
x2d
–
=
e2
0
o
t
f
o
F
Fd
o
t
f
o
84
4 Contact Force and Compliant Motion Control

4.2  Literature Review
85
Figure 4.1 Schematic diagram of the hybrid position and force controlled
system
(4.2.17)
Note that these methods are not directly applicable to redundant manip-
ulator.
4.2.2
Compliant Motion Control
In contrast to the constrained motion approach, compliant motion con-
trol as its name implies, deals with a compliant environment. This approach
is aimed at developing a relationship between interaction forces and a
manipulator’s position instead of controlling position and force indepen-
dently. This approach is limited by the assumption of small deformations of
the environment, with no relative motion allowed in coupling. Salisbury
[60] proposed the stiffness control method. The objective is to provide a
stabilizing dynamic compensator for the system such that the relationship
between the position of the closed-loop system and the interaction forces is
constant over a given operating frequency range. This can be written math-
ematically as follows:
S
I
S
–
Fd
xd
Kp
J 1
–
JT
Kv
Gf
JT
ARM
J 1
–
S
I
S
–
x
F
x·
S
0
E2
T
>
@
=
I
S
–
E1
T
0
>
@
=

(4.2.18)
where 
 is the 
 vector of deviations of the interaction forces
and torques from their equilibrium values in a global Cartesian coordinate
frame;
is the 
vector of deviations of the positions and ori-
entations of the end-effector from their equilibrium values in a global Car-
tesian coordinate frame; 
 is the 
 real-valued nonsingular stiffness
matrix; and 
 is the bandwidth of operation. By specifying K, the user
governs the behavior of the system during constrained maneuvers. 
Hogan [30] proposed the impedance control idea. Impedance control is
closely related to stiffness control. However, stiffness is merely the static
component of a robot’s output impedance. Impedance control goes further
and attempts to modulate the dynamics of the robot’s interactive behavior.
The main idea of impedance control is to make the manipulator act as a
mass-spring-dashpot system in each degree of freedom in its workspace.
Figure 4.2 Apparent impedance of a manipulator in each degree of freedom 
in task space
Therefore, the manipulator is seen as an apparent impedance given by:
(4.2.19)
GF jZ


KGX jZ


0
Z
Zo



=
GF jZ


n
1
u
GX jZ


n
1
u
K
n
n
u
Zo
k1
d
b1
d
md
b2
d
k2
d
Ke
Md X··
X··d
–


Bd X·
X· d
–


Kd X
Xd
–


+
+
Fe
–
=
86
4 Contact Force and Compliant Motion Control

4.2  Literature Review
87
where 
, 
, and 
 are diagonal 
 matrices of the desired mass,
damping, and stiffness; Fe is the vector of the environmental reaction
forces; and the superscript d refers to desired values. 
First, let us define the operational-space dynamic equation of motion of
the manipulator1 as: 
(4.2.20)
where 
 is the Cartesian inertia matrix, and 
 is the vector of centrifu-
gal, Coriolis, and gravity terms acting in operational space. Then as pro-
posed in [1], an inner and outer loop control strategy (Figure 4.3) can be
used to achieve the closed-loop dynamics specified by (4.2.19)
Figure 4.3 Inner-outer loop control strategy
In the absence of uncertainties in the dynamic parameters of the manip-
ulator, the inner loop is a feedback linearization loop of the form 
(4.2.21)
which results in the double integrator system 
. The output of the
outer loop is a target acceleration obtained by solving (4.2.19):
 
(4.2.22)
1. If we consider a non-redundant manipulator not in a singular configu-
ration, then
Md
Bd
Kd
m
m
u
Hx
J T
– HqJ 1
–
hx
J T
– hq
HxJ·q·
–
=

=
Hx X
 X··
hx X X·



+
J T
– u
Fe
+
=
Hx
hx
Compensator
Inverse
Dynamics
ARM
X
F
outer loop
inner loop
position trajectory
u
a
u
JT Hxa
hx
Fe
–
+


=
X··
a
=
a
X··d Md 1
–
–
Bd X·
X· d
–


Kd X
Xd
–

 Fe
–
+
>
@
=

Hogan indicated that the impedance control scheme is capable of control-
ling the manipulator in both free space and constrained maneuvers while
eliminating the switching between free-motion and constrained motion con-
trollers. 
A typical compliant motion task is the surface cleaning scenario shown
in Figure 4.4. As we can see a target trajectory is defined to be identical to
the desired trajectory in free motion. However, in order to maintain contact
with the environment, the target trajectory is defined to be different from
the desired trajectory in constrained maneuvers. Depending on the desired
impedance characteristics and the environment, the robot will follow an
actual path which results in a certain contact force with the environment. 
It should be noted that in the impedance control scheme, no attempt is
made to follow a commanded force trajectory. To overcome this problem,
Anderson and Spong [1] proposed a Hybrid Impedance Control (HIC)
method. Again the task space is split into orthogonal position and force
controlled subspaces using the selection matrix S. The desired equation of
motion in the position-controlled subspace is identical to equation (4.2.19).
However, in the force-controlled subspace, the desired impedance is
defined by:
(4.2.23)
In the force-controlled subspace, a desired inertia and damping have been
introduced because if only a simple proportional force feedback were
applied, the response could be very under-damped for an environment with
high stiffness. In the case of loss of contact with the environment or
approaching the surface (
), equation (4.2.23) becomes
(4.2.24)
If we assume a constant desired force, positive diagonal inertia and
damping matrices, and 
, then the ith component of the velocity
vector 
is given by:
(4.2.25)
Therefore
MdX··
BdX·
Fd
–
+
Fe
–
=
Fe
0
=
MdX··
BdX·
+
Fd
=
X· 0
 
0
=
X·
X·
i t 
Fi
d
Bi
d
------ 1
e
Bid Mid
e

t
–
–


=
88
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
89
Figure 4.4 Surface cleaning using impedance controller
(4.2.26)
This guarantees that the arm approaches the environment with a velocity
that can be properly limited in order to reduce impact forces.
Again, note that these methods are not directly applicable to redundant
manipulators. The main reasons are the use of the Cartesian model of
manipulator dynamics, and calculation of the command input in task space.
As we mentioned earlier, for a redundant manipulator, the task space
requirements cannot uniquely determine joint space configurations. An
augmented hybrid impedance controller which overcomes this problem will
be proposed in next section.
4.3 Schemes for Compliant and Force Control 
of Redundant Manipulators
The problem of compliant motion control of redundant manipulators
has not attained the maturity level of its non-redundant counterpart. There
is little work that addresses the problem of redundancy resolution in a com-
pliant motion control scheme. There are two major issues to be addressed in
extending existing compliant motion schemes to the case of redundant
manipulators:
Target Trajectory
Desired Trajectory
Environment
Actual Trajectory
X·
i t 
Fi
d
Bi
d
------
and
X·
i t 
t
f
o
lim
Fi
d
Bi
d
------
=


(i) The nature of compliant motion control requires expressing the
manipulator’s task in Cartesian space; therefore, such schemes are usually
based on the Cartesian dynamic model of manipulator. However, in the
presence of redundancy, there is not a unique map from Cartesian space to
joint space.
(ii) Most redundancy resolution techniques are at the velocity level, and
simple extensions of these techniques to the acceleration level have resulted
in the self-motion phenomenon.
For instance, Gertz et al. [23], Walker [91] and Lin et al. [39] have used
a generalized inertia-weighted inverse of the Jacobian to resolve redun-
dancy in order to reduce impact forces. However, these schemes are single
purpose algorithms, and cannot be used to satisfy additional criteria. An
extended impedance control method is discussed in [2] and [51]; the former
also includes an HIC scheme. These schemes can be considered as multi-
purpose algorithms since different additional tasks can be incorporated in
HIC without modifying the schemes and the control laws. However, there
are two major drawbacks to these schemes: (i) The dimension of the addi-
tional task should be equal to the degree of redundancy, which makes the
approach not applicable for a wide class of additional tasks, i.e., additional
tasks that are not active for all time such as obstacle avoidance in a clut-
tered environment. (ii) The HIC scheme introduces the possibility of con-
trolling tasks either by a position controlled or a force controlled scheme.
The possibility of having an additional task controlled by a force controlled
scheme is ignored by including the additional task in the position controlled
subspace of the extended task. Shadpey et al. [72] have proposed an Aug-
mented Hybrid Impedance Control (AHIC) scheme to overcome these
problems (see Section 4.3.2). This scheme enjoys the following major
advantages:
 (i) Different additional tasks can be easily incorporated in the AHIC
scheme without modifying the scheme and the control law.
(ii) An additional task can be included in the force-controlled subspace
of the augmented task. Therefore, it is possible to have a multiple-point
force control scheme. 
(iii) Task priority and singularity robustness formulation of the AHIC
scheme relaxes the restrictive assumption of having a non-singular aug-
mented Jacobian. 
However, the scheme in [72] exhibits the self-motion phenomenon, i.e.,
motion of the arm in the null space of the Jacobian. Another AHIC scheme
90
4 Contact Force and Compliant Motion Control

4.3 Schemes for Compliant and Force Control of Redundant Manipulators
91
which has the above mentioned characteristics [73] is presented in Section
4.3.3. Moreover, by modifying both the inner and outer control loops, the
self-motion is damped when the dimension of the augmented task is smaller
than that of the joint space. This scheme is also more amenable to an adap-
tive implementation. An adaptive version of the AHIC scheme [74] is
described in Section 4.3.4 .
4.3.1
Configuration Control at the Acceleration Level
Similar to the pseudo-inverse solution given by (2.3.30), the following
weighted damped least-squares solution can be obtained:
(4.3.1)
This minimizes the following cost function:
(4.3.2)
where
(4.3.3)
However, this solution is incapable of controlling the null space component
of joint velocities (see Section 2.3.2 ). A remedy for this difficulty is to dif-
ferentiate the configuration control solution at the velocity level given by
equation (2.3.19). This yields
(4.3.4)
 where
Therefore, following the reference joint velocity given by equation (2.3.19)
and the acceleration trajectory given by (4.3.4), we get a special solution
that minimizes the joint velocities when 
, i.e., there are not as many
active tasks as the degree of redundancy, and we have the best solution in
q··
Je
TWeJe
Jc
TWcJc
Wv
+
+
>
@ 1
–
Je
TWe X··
J·
eq·
–


>
=
Jc
TWc Z··
J·
cq·
–

@
+
L
E··
eTWeE··
e
E··
cTWcE··
c
q··TWvq··
+
+
=
E··
e
X··d
X··
J·
eq·
–


and
E··
c
Z··d
Z··
J·
cq·
–


–
=
–
=
q··
Je
TWeJe
Jc
TWcJc
Wv
+
+
>
@ 1
–
A
B
+
>
@
=
A
Je
TWe X··
J·
eq·
–


Jc
TWc Z··
J·
cq·
–


+
=
B
J·
eTWe X·
Jeq·
–


J·
cTWc Z·
Jcq·
–


+
=
k
r


the least-squares sense when 
. In all cases the presence of 
 ensures
the boundedness of the joint velocities.
4.3.2
Augmented Hybrid Impedance Control using the Computed 
Torque Algorithm 
The AHIC scheme, shown in Figure 4.5, can be broken down into two
different control loops. The outer loop generates an Augmented Cartesian
Target Acceleration (ACTA) trajectory reflecting the desired impedance in
the position-controlled subspaces, and the desired force in the force-con-
trolled subspaces of the main and additional tasks. From this point of view,
the AHIC problem can be formulated as that of tracking an ACTA trajec-
tory which is generated in real time. The inner-loop control problem con-
sists of selecting an input  to the actuators which makes the end-effector
track a desired trajectory generated by the outer loop. 
Figure 4.5 Block diagram of the AHIC scheme using the computed torque
controller
4.3.2.1
Outer-loop design
The design of the outer-loop part of the AHIC scheme is described in
this section. As mentioned in Section 4.2, the idea is to split the spaces cor-
responding to the main task X and additional task Z into position- and force-
controlled subspaces. Impedance control is used in the position-controlled
subspace. Therefore, the objective is to make the manipulator act as a mass-
spring-dashpot system with desired inertia, damping, and stiffness in each
dimension of the position-controlled subspace of the main and additional
tasks. In the force-controlled subspace, a desired inertia and damping have
been introduced because, if only a simple proportional force feedback were
k
r
!
Wv
W
ACT
generator
(additional task)
ARM
outer loop
inner loop
Desired force 
&
position trajectory
W
ACTA
generator
Redundancy
Resolution
(main task)
Desired force 
&
Desired force
&
position trajectory
Controller
Computed
torque
X··t
q··t
F
q q·

Z··t
92
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
93
applied, the response could be very under-damped for an environment with
high stiffness.
The motion of the manipulator in both subspaces can be expressed by a
single matrix equation using selection matrices Sx and Sz, as follows:
(4.3.5)
where the superscript d denotes the desired values; the subscripts x and z
refer to the main and additional tasks respectively; the diagonal matrices M,
B, and K are the desired mass, damping, and stiffness matrices; Fd and -Fe
are vectors of the desired and the environmental reaction forces; and Sx and
Sz are the diagonal selection matrices which have 1’s on the diagonal for
position-controlled subspaces and 0’s for the force-controlled subspaces.
Solving the motion equations (4.3.5) for the accelerations 
and 
leads to the Cartesian Target Acceleration (CTA) trajectories of the main,
, and additional tasks, 
: 
(4.3.6)
Now the AHIC scheme can be formulated to track the CTA trajectories.
Using the configuration control approach - equation (4.3.1), the desired
Joint Target Acceleration (JTA) trajectory 
can be found by replacing
the CTA trajectories of the main and additional tasks in Equation (4.3.1).
(4.3.7)
Remark: Duffy [20] has indicated that in the case of compliant motion of a
manipulator in 3D space, the end-effector velocities (linear, angular) and
Mz
d Z··
SzZ··d
–


Bz
d Z·
SzZ· d
–


Kz
dSz Z
Zd
–


I
Sz
–

FZ
d
Fz
e
–
=
–
+
+
Mx
d X··
SxX··d
–


Bx
d X·
SxX· d
–


Kx
dSx X
Xd
–


I
Sx
–

Fx
d
Fx
e
–
=
–
+
+
(a)
(b)
X··
Z··
X··t
Z··t
X··t
SxX··d
Mx
d

 1
–
Bx
d X·
SxX· d
–


Kx
dSx X
Xd
–


I
Sx
–

Fx
d
–
Fx
+
+
>
@
–
=
Z··t
SzZ··d
Mz
d

 1
–
Bz
d Z·
SzZ· d
–


Kz
dSz Z
Zd
–


I
Sz
–

FZ
d
Fz
e
+
–
+
>
@
–
=
(a)
(b)
q··t


q··t
Je
TWeJe
Jc
TWcJc
Wv
+
+
>
@ 1
–
Je
TWe X··t
J·
eq·
–


Jc
TWc Z··t
J·
cq·
–


+
>
@
=

forces (forces, torques) should be considered as screws represented in axis
and ray coordinates. Therefore, in general the concept of orthogonality of
force and position controlled subspaces is not valid. As shown in [80], the
concept that is appropriate is that of “reciprocal” subspaces, i.e., the set of
motion screws should be decomposed into mutually reciprocal free and
constraint subspaces.
4.3.2.2
Inner-loop
The dynamics of a rigid manipulator in the absence of disturbances are
described by:
(4.3.8)
where 
is the vector of applied forces (torques), H(q) is the
symmet-
ric positive definite inertia matrix, h is the vector of centrifugal and Coriolis
forces, f is the vector of frictional forces, and G is the vector of gravitational
forces. The last term on the right-hand side of the equation is only needed if
another point of the manipulator (other than the end-effector) is in contact
with the environment;
denotes the reaction force corresponding to a
second constraint surface, and Jc1 is the Jacobian of the contact point.
As mentioned earlier, the responsibility of the inner loop is to ensure
that the manipulator tracks the JTA trajectory. Referring to the dynamic
equation of the manipulator, the input torque is selected by:
(4.3.9)
which guarantees perfect following of the JTA trajectory in the absence of
uncertainties in the manipulator’s parameters.
4.3.2.3
Simulation Results for a 3-DOF Planar Arm
The performance of the AHIC scheme has been studied using simula-
tions involving a 3-revolute-joint planar manipulator (Figure 4.6). In all
cases, a constraint surface is defined by the position Pc and orientation
of a frame C attached to this surface.The main task (same for all cases),
defined in the constraint frame, is specified by a desired impedance (inertia,
damping, and stiffness) in tracking of the desired position trajectory in the
Xc direction, and desired force trajectory in the Yc direction. The selected
values for the simulations are: md=1, bd=120, and kd=3600. The environ-
ment is modelled as a spring with stiffness Ke=10000 N/m. The desired
H q
 q··
h q q·



G q
 
f q·
 
+
+
+
W
Je
TFx
e
Jc1
T Fz
e
+
+
=
W
n
n
u
Fz
e
W
Hq··t
h q q·



G q
 
f q·
 
Je
TFx
e
–
Jc1
T Fz
e
–
+
+
+
=
Tc
94
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
95
position trajectory is calculated by linear interpolation between the initial
and final points (constant velocity trajectory), and the force trajectory is
defined by f d= -100 N. For each individual case, a different additional task
is defined. A general block diagram of the simulation is shown in Figure
4.7 where T denotes the homogenous coordinate transformation between
two different frames (W refers to the workspace, and C refers to the end-
effector constraint surface). Note that the blocks shown by dashed lines are
needed if the only the additional task is force-controlled (C1 refers to the
second constraint surface).
Figure 4.6 3-DOF planar manipulator used in the simulation
Joint Limit Avoidance (JLA)
The formulation of the additional task was given in Section 2.4.1 . In
the first simulation, JLA is inactive, and the resulting errors in the position
and force controlled subspaces () both converge to small values (practically
zero). However, the joint three value goes below -100 degrees. In the sec-
ond simulation, JLA is active and the minimum limit for joint three is
selected as -80 degrees. The simulation results again show that the force
and position trajectories are tracked correctly, and also the limit on joint
three is respected.
Static and Moving Obstacle Avoidance (SOCA and MOCA)
The formulation of the additional task was given in Section 2.4.2 . The
results for SOCA are indicated in , When the obstacle avoidance algorithm
is inactive, the main task trajectories are followed correctly. However, a
collision occurs. By activating obstacle avoidance, the collision is avoided
and the main task requirement is also satisfied.
Xw
Y
w
Xc
Yc
Tc
q1
q2
q3
Pc

Figure 4.7 General block diagram of the AHIC scheme 
In the next simulation, the position of the tip in the Xc direction is
required to be fixed, while exerting a constant force equal to -100 N in the
Yc direction.  shows that the main task has been accomplished within a
short time, and from this time onwards, the manipulator does not move
until the MOCA additional task becomes active, and successfully prevents
the collision.
Task Compatibility 
The objective of this additional task is to position the arm in the posture
which requires minimum torque for a desired force in a certain direction.
The formulation of this additional task is given in Section 2.4.3 .
Figure 4.11 shows the results of the simulation for this case. The main
task consists of keeping the manipulator tip at a fixed position in the X
direction while exerting -100 N in the Y direction. As we can see in Figure
4.11b, the manipulator reconfigures itself to find the posture which requires
the minimum torque to exert the desired force. Figure 4.11c shows how the
value of the objective function - task compatibility index given by (2.4.16) -
increases to reach the optimal configuration. Figure 4.11d shows the force
ellipsoid for the initial and final configurations. Note that the force transfer
ratio along the Y direction has been increased. Figures 4.11e and f show
that the force and position trajectories of the main task were followed cor-
rectly. Note that the required torque is reduced when the additional task is
active (Figure 4.11g).
Sx
I-Sx
Sz
I-Sz
( main task )
Task)
TW
C
TC
W
Xd X· d X··d


>
@C
FX
d
>
@C
Zd Z·d Z··d


TW
C1
TC1
W
Forward Kinematics
Torque
Kinematic calculations
X··
t
>
@C
Z··
t
>
@C1
Controller
q··t
W
q q·

Fx
e
>
@W
X X·

>
@W
Z Z·

Fz
e
Fz
d
CTA
Config.
Control
Computed
CTA (Additional
ARM
&
Force
Sensor
96
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
97
Figure 4.8 Simulation results for the AHIC scheme with Joint Limit 
Avoidance: (a) force error (N); (b) position error (mm)
0
0.5
1
1.5
2
-20
0
20
40
60
80
100
___ JLA active
--.-- JLA inactive
(q3min=-80)
time (s)
(a)
0
0.5
1
1.5
2
-2
-1
0
1
2
3
4
5 x 10
-3
(b)
time (s)

Figure 4.8 (contd.) Simulation results for the AHIC scheme with Joint
 Limit Avoidance: (c) joint 3 variable (deg); (d) robot motion - JLA inac-
tive; (e) robot motion - JLA active
0
0.5
1
1.5
2
-105
-100
-95
-90
-85
-80
-75
-70
-65
(c)
time (s)
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
initial
time (s)
time (s)
(d)
(e)
98
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
99
Figure 4.9 Static Obstacle Collision Avoidance: (a) robot motion - SOCA 
off; (b) robot motion - SOCA on;  (c) position error (m)
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
2
2.5 x 10
-3
time (s)
time (s)
(a)
  (b)
time (s)
(c)

Figure 4.9 (contd.) Static Obstacle Collision Avoidance: (d) force
error (N)
Force-Controlled Additional Task
We have already noted that the additional task(s) can be included in
either position-controlled or force-controlled subspaces. In the following
simulation, the additional task consists of exerting a constant force to a sec-
ond compliant surface (Figure 4.12) by an arbitrary point Z on one of the
links - in this simulation, the joint between the second and third links, joint
3. The Jacobian of the additional task is the Jacobian of the point Z, and the
desired force in the Yc1 direction is to be specified. The main task consists
of keeping the position of the tip in the Xw direction unchanged, while
exerting a constant -100 N force in YW direction on the first constraint sur-
face. The additional task is to exert a 100 N force (in the Yc1 direction) on
the second constraint surface by joint three. Figure 4.13b shows the motion
of the joints and Figures 4.13c, and d show that the main task is executed
correctly. Figure 4.13e shows that the desired force is exerted on the second
constraint surface. Note that, although initially joint three is not in contact
with the second constraint surface, the AHIC scheme works correctly and
makes this point move toward the surface with a bounded velocity.
0
0.5
1
1.5
2
-20
0
20
40
60
80
100
time (s)
(d)
100
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
101
Figure 4.10 Moving Obstacle Collision Avoidance: (a) robot motion - 
MOCA off; (b) robot motion - MOCA on; (c) joint variables (deg);
(d) position error (m).
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
0
0.5
1
1.5
2
-80
-60
-40
-20
0
20
40
60
0
0.5
1
1.5
2
-5
-4
-3
-2
-1
0
1
2
3
4
5 x 10
-4
(b)
time (s)
time (s)
(a)
(c)
(d)

Figure 4.10 (contd.) Moving Obstacle Collision Avoidance:
(e) force error (N)
4.3.3
Augmented Hybrid Impedance Control 
with Self-Motion Stabilization
As we mentioned earlier, redundancy resolution at the acceleration
level is aimed at minimizing joint accelerations and not controlling the self-
motion of the arm. This is the major shortcoming of the AHIC scheme pro-
posed in Section 4.3.2. In this section by modifying both the inner and outer
control loops, a new AHIC control scheme is proposed which enjoys all the
desirable characteristics of the previous scheme and achieves self-motion
stabilization.
4.3.3.1
Outer-Loop Design
The design of the outer-loop is similar to the design in Section 4.3.2.1.
The only difference is that instead of calculating an Augmented Cartesian
Target Acceleration (ACTA) trajectory, we describe the desired motion by
an Augmented Cartesian Target (ACT) trajectory at position, velocity, and
acceleration levels.
The motion of the manipulator in both subspaces can be expressed by a
single matrix equation using the selection matrices Sx and Sz, as follows:
0
0.5
1
1.5
2
-20
0
20
40
60
80
100
time (s)
(e)
102
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
103
Figure 4.11 Task compatibility simulation results 
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
time (s)
time (s)
-0.5
0
0.5
1
1.5
2
2.5
0
0.5
1
1.5
2
0
0.5
1
1.5
2
2.5
3
3.5
4
-150
-100
-50
0
50
100
0
0.5
1
1.5
2
2.5
3
3.5
4
2.6
2.8
3
3.2
3.4
3.6
3.8
0
0.5
1
1.5
2
2.5
3
3.5
4
-2
0
2
4
6
8
10 x 10
-3
0
0.5
1
1.5
2
2.5
3
3.5
4
0
50
100
150
200
250
300
350
400
450
500
(g) Norm of the torque vector 
___ TC on
--.-- TC off
u
(e) Force error (N)
(f) Position error (m) 
(a) TC off
(b) TC on
(c) Task compatibility index
(d) Force ellipsoid

Figure 4.12 Force-controlled additional task
(4.3.10)
where the same definitions as in (4.3.5) are used. 
The ACT trajectory 
 is the unique solution of the differen-
tial equations (4.3.10) with initial conditions:
(4.3.11)
Notice that the presence of measurement forces in these equations requires
that the ACT trajectory should be generated online.
4.3.3.2
Inner-Loop Design
The dynamics of a rigid manipulator are described by equation (4.3.8).
The controller should be designed to calculate the torque input to the
dynamic equation (4.3.8), which ensures the tracking of the ACT trajectory.
The procedure is as follows: First, a Cartesian reference trajectory is
defined for both the main and additional tasks:
Xw
Y
w
Xc
Yc
Tc
Pc
Xc1
Yc1
Pc1
Tc1
Z
Contact point with the second
constraint surface
Mx
d X··t
SxX··d
–


Bx
d X· t
SxX· d
–


Kx
dSx Xt
Xd
–


I
Sx
–

Fx
d
Fx
e
–
=
–
+
+
Mz
d Z··t
SzZ··d
–


Bz
d Z· t
SzZ· d
–


Kz
dSz Zt
Zd
–


I
Sz
–

FZ
d
Fz
e
–
=
–
+
+
(a)
(b)
XtT ZtT

>
@T
Xt 0
 
Xd 0
 
X· t 0
 
X· d 0
 
=
=
Zt 0
 
Zd 0
 
Z· t 0
 
Z· d 0
 
=
=
104
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
105
Figure 4.13 Force-controlled additional task
(4.3.12)
-0.5
0
0.5
1
1.5
2
-0.5
0
0.5
1
1.5
0
0.2
0.4
0.6
0.8
1
-80
-60
-40
-20
0
20
40
60
0
0.5
1
1.5
2
-100
-80
-60
-40
-20
0
20
40
60
0
0.5
1
1.5
2
-60
-40
-20
0
20
40
60
80
100
0
0.5
1
1.5
2
-3
-2
-1
0
1
2
3
4 x 10
-3
initial
final
. 
(a)
(b)
(c)
(d)
(e)
a) Robot motion
b) Joint variables (deg)
c) Position error (m)
d) Main task force (N)
e) Additional task 
 force error (N) 
X· r
X· t
/x X
Xt
–


–
=
a
 
X··r
X··t
/x X·
X· t
–


–
=
b
 
Z· r
Z· t
/z Z
Zt
–


–
=
c
 
Z··r
Z··t
/z Z·
Z· t
–


–
=
d
 

where 
and 
are positive-definite gain matrices. The joint reference
trajectory is defined by using the task prioritized and singularity robust
redundancy resolution scheme described in Section 4.3.1. This is done by
replacing the Cartesian reference velocity and acceleration in equations
(2.3.19) and (4.3.4) to find 
. Now a virtual velocity error is defined
as:
(4.3.13)
The control law is then given by:
(4.3.14)
where
is a positive-definite matrix. This control law does not cancel the
robot dynamics. However, it ensures asymptotic, or by proper choice of
, and 
, exponential tracking of the ACT trajectory at the same rate as
that of exact cancellation (see [81] and [82]). 
Remarks:
• Note that by “asymptotic tracking of the ACT trajectory”, we
mean that the control law guarantees convergence to a solution
that minimizes (2.3.20). 
• The above procedure is different from the design of the controller
in joint space, because in the latter, the ACT trajectory would be
used to generate the desired joint trajectories 
.
However, in the proposed algorithm, explicit calculation of the
desired joint values is avoided. 
• The use of the controller proposed in this section has two major
advantages over the inverse dynamics (or computed torque)
method which is used in Section 4.3.2: 
(i) It controls self-motion because both velocity and accel-
eration information are used; the computed torque
method requires only a commanded acceleration trajec-
tory. 
(ii) The formulation of this algorithm is similar to a non-
adaptive version of the approach of Slotine and Li [81].
/x
/z
q· r q··r

s
q·
q· r
–
=
W
H q
 q··r
C q q·


q· r
G q
 
f q·
 
KDs J
– e
TFx
e
Jc1
T Fz
e
–
+
+
+
+
=
KD
KD
/
qd q· d q··d


106
4 Contact Force and Compliant Motion Control

4.3 Schemes for Compliant and Force Control of Redundant Manipulators
107
Therefore, to deal with inaccurate dynamic parameters,
an adaptive implementation of this algorithm can be
developed without major modifications to the inner loop
which is the subject of Section 4.3.4 .
4.3.3.3
Simulation Results for a 3-DOF Planar Arm
The setup for the constrained compliant motion control is shown in Fig-
ure 4.6. A general block diagram of the simulation is shown in Figure 4.14.
Figure 4.14 General block diagram of the AHIC scheme
Obstacle avoidance with self-motion stabilization
In this simulation, the end-effector is initially at rest and touches the
constraint surface (f=0) at the point (1.5,0). The main task consists of keep-
ing the position in the X direction constant, while exerting a desired -100 N
in the Y direction. There is also a moving object enclosed in a circle in the
workspace. The additional task consists of using the redundant degree of
freedom to avoid this object. The simulation is carried out to compare the
method proposed in Section 4.3.2 and the method proposed in this section. 
As we can see in the plot of the joint velocities (Figure 4.15c, Figure
4.16c), there is a movement for a short period at the beginning to achieve
the desired force - the end-effector moves in the Y direction to penetrate the
surface. The manipulator remains stationary until the object is close enough
to the arm. The obstacle avoidance task becomes active and makes the
manipulator move in the null space of the Jacobian matrix to avoid collision
Sx
I-Sx
Sz
I-Sz
( main task )
ACT
(Additional task )
TW
C
TC
W
Xd X· d X··d


>
@C
FX
d
>
@C
Zd Z·d Z··d


TW
C1
TC1
W
Forward Kinematics
Arm
Kinematic calculation
W
q q·

Fx
e
>
@W
X X·

>
@W
Z Z·

Fz
e
Fz
d
&
ACT
Cart.
Ref.
Traj.
Redund-
X· r X··r

Z· r Z··r

q· r q··r

-ancy
Resolu-
-tion
Control
Scheme
force
sensor

while satisfying the main task. The two algorithms perform in the same way
up to the point that the object clears the arm. From that point onwards, the
algorithm in Section 4.3.2 is unable to control the null space components of
the joint velocities and causes self-motion (Figure 4.15b). However, the
proposed algorithm is successful in damping out these components and pre-
venting self-motion.
4.3.4
Adaptive Augmented Hybrid Impedance Control
It has been shown that control methods that do not address uncertainties
in a manipulator’s dynamics may result in unstable motion in practice. This
has led to considerable work on adaptive control of manipulators [59], [82].
Adaptive compliant control has also been addressed in recent years. Han et
al. [27] have proposed an adaptive control scheme for constrained manipu-
lators based on a nonlinear coordinate transformation; Lu and Meng [41]
have proposed an adaptive impedance control scheme, and Niemeyer and
Slotine [52] have discussed an application of the adaptive algorithm of Slo-
tine and Li [81] to compliant motion control and redundant manipulators.
However, application of the above algorithms to redundant manipulators
introduces several problems. For instance, the algorithm in [27] requires
definition of a nonlinear invertible transformation from joint space to a gen-
eralized task space. The algorithm in [41] is based on the Cartesian
dynamic model of a manipulator and can be applied to the redundant case.
However, no user defined additional tasks can be incorporated in the algo-
rithm and redundancy is based on the generalized inertia-weighted inverse
of the Jacobian. The algorithm proposed in [41] overcomes the above draw-
backs. However, it is assumed that the rows of the Jacobian matrix are lin-
early independent. Hence, it may result in instability near singular
configurations. In this section, by incorporating the adaptive algorithm of
Slotine and Li in the AHIC scheme proposed in Section 4.3.3, an Adaptive
Augmented Hybrid Impedance Control (AAHIC) scheme is presented
which guarantees asymptotic convergence in both position and force con-
trolled subspaces with precise force measurements. The control scheme
ensures stability of the system with bounded force measurement errors.
Even in the case of imprecise force measurement, the errors in the position
controlled subspaces can be reduced considerably provided powerful
enough actuators are available.
4.3.4.1
Outer-Loop Design
The design of the outer-loop is similar to that described in Section
4.3.3.1.
108
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
109
Figure 4.15 Object avoidance without self-motion stabilization
4.3.4.2
Inner-Loop Design
The dynamics of a rigid manipulator are described by equation (4.3.8).
The controller should be designed to calculate the torque input to equation
(4.3.8), which ensures the tracking of the ACT trajectory in the presence of
uncertainties in the manipulator’s dynamic parameters.
It has been shown that for a suitably selected set of dynamic parame-
ters, equation (4.3.8) can be written as:
(4.3.15)
where Y is the
regressor matrix and a is the
vector of
dynamic parameters. The matrix C is defined in such a way that
is
a skew-symmetric matrix [81].
−0.5
0
0.5
1
1.5
2
−0.5
0
0.5
1
1.5
0
0.5
1
1.5
2
2.5
−100
−80
−60
−40
−20
0
20
40
60
0
0.5
1
1.5
2
2.5
−150
−100
−50
0
50
100
150
200
Y
X
(a) Arm motion
(b) Joint values (deg)
(c) Joint velocities(deg/s)
H q
 q··r
C q q·


q· r
G q
 
f q·
 
+
+
+
Y q q· q· r q··r
 


a
=
n
p
u
p
1
u
H·
2C
–

Figure 4.16 Moving object avoidance with self-motion stabilization
Now an extension of the adaptive algorithm of Slotine and Li [81] is
used to design the controller in order to ensure asymptotic tracking of the
ACT trajectory. The procedure is as follows: 
First, a Cartesian reference trajectory is defined for both the main and
additional tasks (see equations (4.3.12)). Then, a virtual velocity error is
defined (see (4.3.13)). The control law is then given by:
−0.5
0
0.5
1
1.5
2
−0.5
0
0.5
1
1.5
  (a) Arm motion
0
0.5
1
1.5
2
2.5
−80
−60
−40
−20
0
20
40
60
0
0.5
1
1.5
2
2.5
−150
−100
−50
0
50
100
150
200
0
0.5
1
1.5
2
2.5
−20
0
20
40
60
80
100
120
0
0.5
1
1.5
2
2.5
−0.01
−0.005
0
0.005
0.01
0.015
0.02
(d) Force error (N)
(b) Joint values (deg)
(c) Joint velocities (deg/s)
(e) Position error (m)
110
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
111
(4.3.16)
where 
 are calculated based on estimated values of H, C, G,
f, and a respectively. 
 is the measured end-effector interaction force with
the environment, 
is a positive-definite matrix, and 
. The
last term on the right-hand side of the equation is only needed if another
point of the manipulator (other than the end-effector) is in contact with the
environment; 
 denotes the measured reaction force corresponding to a
second constraint surface, and Jc1 is the Jacobian of the contact point.
We use the same Lyapunov candidate function as in [41]:
(4.3.17)
where 
 is a constant positive-definite matrix and 
. Differenti-
ating 
 along the trajectory of the system (4.3.8) leads to
(4.3.18)
where 
 denotes force measurement error. This suggests that
the adaptation law should be selected as:
(4.3.19)
With this adaptation law, equation (4.3.18) leads to:
(4.3.20)
and
(4.3.21)
where 
is the minimum eigenvalue value of the matrix 
, and  satis-
fies the following inequality:
W
Yaˆ
KDs J
– e
TFˆ
xe
Jc1
T Fˆ
ze
–
–
=
Hˆ q
 q··r
Cˆ q q·


q· r
Gˆ q
 
fˆ q·
  Je
T
–
Fˆ
xe
Jc1
T Fˆ
ze
–
+
+
+
=
Hˆ Cˆ Gˆ fˆ aˆ


 
Fˆ
x
e
KD
s
q·
q· r
–
=
Fz
e
V t 
1
2-- sTHs
a˜ T*a˜
+
>
@
=
*
a˜
a
aˆ
–
=
V t 
V· t 
sTKDs
–
sTYa˜
sTJeTF˜ xe
sTJc1
T F˜ ze
+
+
+
=
F˜
F
Fˆ
–
=
aˆ·
*YTs
–
=
V· t 
sTKDs
–
sT Je
TF˜ xe
Jc1
T F˜ ze
+


kD s 2
–
s
Je
F˜ xe
Jc1
F˜ ze
+


+
d
+
=
V· t 
kD s 2
–
G s
+
d
kD
KD
G

(4.3.22)
We also assume that 
 and 
. Now, we consider two dif-
ferent cases: precise and imprecise force measurements. 
Precise force measurements 
In this case, inequality (4.3.21) reduces to
 
(4.3.23)
which implies 
 or boundedness of a and s. Moreover, it can be
shown that
(4.3.24)
which implies that 
and consequently 
. In order to
establish a link between S and the tracking errors of ACT trajectories, we
assume that the tracking errors of the damped least-squares solution
(2.3.19) are negligible. Therefore, multiplying both sides of equation
(4.3.13) by the augmented Jacobian, leads to
(4.3.25)
where
(4.3.26)
The equations in (4.3.25) represent strictly proper, asymptotically sta-
ble linear time-invariant systems with inputs 
 which imply
exact tracking and asymptotic convergence of the trajectories X and Z to
the ACT trajectories [54], [59].
Je
F˜ xe
Jc1
F˜ ze
+
G
d
Je
D
d
Jc1
E
d
F˜
0
=
V· t 
kD s 2
–
d
a s

Lf
n

s 2dt
1
–
kD
------dV t 
d
s 2dt
1
–
kD
------ dV t 
0
f
³
d
0
f
³
1
kD
------ V 0
 
V f


–


=
(a)
(b)
s
L2
n

Jes Jcs

L2
n

Jes
e·
x
/xex
+
=
a
 
Jcs
e·
z
/zez
+
=
b
 
ex
X
Xt
ez
Z
Zt
–
=
–
=
Jes Jcs

L2
n

112
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
113
Imprecise Force Measurements 
 (Robustness Issue)
To take into account the robustness issue, we consider the effects of
imprecise force measurements. It is obvious that error in force measure-
ments directly affects the tracking performance in the force controlled sub-
spaces of the main and additional tasks. However, we can show
boundedness of the closed-loop trajectories. Moreover, the upper-bound on
the error in the position-controlled subspaces can be reduced. 
In this case, the time derivative of the Lyapunov candidate function sat-
isfies
(4.3.27)
As in [41], we can state that 
is not guaranteed to be negative semi-def-
inite with an arbitrary value of 
and a large 
 for small values of 
.
However, positive 
 implies increasing V and subsequently 
, which
eventually makes 
 negative. Therefore, s remains bounded and con-
verges to a residual set. For a fixed value of 
, the lower bound on s is
determined by 
 and can be reduced by selecting a larger value of 
.
Note that larger 
 increases the control effort and may saturate the actua-
tors. Using equations (4.3.24) and boundedness of s, we can conclude
boundedness of 
 and 
.
Remark: Dawson and Qu [17] have proposed a modification to the control
law given in (4.3.16) by adding a term
to the right hand side
with
. This eventually leads to the same inequality for
as in
(4.3.23) which implies asymptotic convergence of the errors. However, the
control law proposed in [17] is discontinuous in terms of s and may excite
unmodeled high-frequency dynamics.
4.3.4.3
Simulation Results for a 3-DOF Planar Arm
The setup for constrained compliant motion control is shown in Figure
4.6. A general block diagram of the simulation is shown in Figure 4.14.
Tool Orientation Control
In this simulation the additional task is defined as the control of the ori-
entation of a tool attached to the end-effector. In this case, the desired value
F˜
0
z
V· t 
kD s 2
–
G s
+
d
V· t 
kD
G
s
V· t 
s
V· t 
kD
G kD
e
kD
kD
ex
eZ
KG
s 
sgn
–
KG
G
!
V· t 

is specified as
. The end-effector is initially at the point (X=1,
Y=1) (Figures 4.17a, c) in touch with the surface (zero interaction force).
Figures 4.17a, b show that without activating the additional task, there is no
restriction on joint three. However, by activating the additional task (Fig-
ures 4.17c, d), the tool orientation is maintained at the desired value. Fig-
ures 4.18a, b show the errors in the position- and force-controlled
subspaces which practically converge to zero. The dynamic parameter esti-
mates and the velocity error are shown in Figures 4.18d, e.
Figure 4.17 Adaptive AHIC: Arm configuration and joint values
In order to study the effects of imprecise force measurements, the
actual interaction force is augmented by a random noise uniformly distrib-
uted in the interval (-15N,15N). As we can see in Figure 4.19b, the error in
the force controlled direction increases significantly as expected. The rea-
son is that the controller in the force-controlled direction is based on force
q3
85q
–
=
−0.5
0
0.5
1
1.5
2
−0.5
0
0.5
1
1.5
0
0.5
1
1.5
2
2.5
3
3.5
4
−150
−100
−50
0
50
100
0
0.5
1
1.5
2
2.5
3
3.5
4
−150
−100
−50
0
50
100
150
−0.5
0
0.5
1
1.5
2
−0.5
0
0.5
1
1.5
(a)
(b)
(c)
(d)
q3
q3
a), b) without, and c), d) with tool orientation control
Y
Y
X
X
deg
deg
114
4 Contact Force and Compliant Motion Control

4.3  Schemes for Compliant and Force Control of Redundant Manipulators
115
measurements and any error in this respect, directly affects the force error,
e.g., the interval between 2 to 3 seconds. However, the error in the position-
controlled direction (Figure 4.19a) remains practically unchanged from that
of the previous simulation (Figure 4.18a), showing the robustness of the
algorithm to force measurement error.
Figure 4.18 Adaptive AHIC with tool orientation control
0
0.5
1
1.5
2
2.5
3
3.5
4
−80
−70
−60
−50
−40
−30
−20
−10
0
10
20
0
0.5
1
1.5
2
2.5
3
3.5
4
−3500
−3000
−2500
−2000
−1500
−1000
−500
0
500
1000
1500
0
0.5
1
1.5
2
2.5
3
3.5
4
−15
−10
−5
0
5
10
15
20
25
30
35
0
0.5
1
1.5
2
2.5
3
3.5
4
−0.25
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
0.25
0
0.5
1
1.5
2
2.5
3
3.5
4
−0.5
0
0.5
1
1.5
2
2.5
3 x 10
−3
(c) Torques (Nm)
  (d) Parameter estimates
a) Position error (m) 
 (e) Joint velocities (deg/s)
(b) Force error (N)

Figure 4.19 Adaptive Hybrid Impedance Control: Effect of imprecise force
measurement
4.4 
Conclusions
In this chapter, the problem of compliant motion and force control for
redundant manipulators was addressed and an Augmented Hybrid Imped-
ance Control Scheme was proposed. An extension of the configuration con-
trol approach at the acceleration level was developed to perform
redundancy resolution. The most useful additional tasks: Joint limit avoid-
ance, static and moving object avoidance, and posture optimization, were
incorporated into the AHIC scheme. The proposed scheme has the follow-
ing desirable characteristics:
0
0.5
1
1.5
2
2.5
3
3.5
4
−80
−70
−60
−50
−40
−30
−20
−10
0
10
20
0
0.5
1
1.5
2
2.5
3
3.5
4
−0.5
0
0.5
1
1.5
2
2.5
3 x 10−3
b) Force error (N)
(a) Position error (m) 
116
4 Contact Force and Compliant Motion Control

4.4  Conclusions
117
• Different additional tasks can be easily incorporated into the
AHIC scheme without modifying the scheme and the control law.
• The additional task(s) can be included in the force-controlled
subspace of the augmented task. Therefore, it is possible to have
a multiple-point force control scheme. 
• Task priority and singularity robustness formulation of the AHIC
scheme relax the restrictive assumption of having a non-singular
augmented Jacobian. 
A modified AHIC scheme was proposed in this chapter that gives a
solution to the undesirable self-motion problem which exists in most
dynamic control schemes developed for redundant manipulators. An Adap-
tive Augmented Hybrid Impedance Control (AAHIC) scheme was
described which guarantees asymptotic convergence in both position- and
force-controlled subspaces with precise force measurements. The control
scheme also ensures stability of the system in the presence of bounded
force measurement errors. Even in the case of imprecise force measure-
ments, the errors in the position controlled subspaces can be reduced con-
siderably. The performance of the proposed AHIC schemes was illustrated
for a 3-DOF planar arm. In the next chapter, we will extend the AHIC
scheme to the 3-D workspace of REDIESTRO, a 7-DOF experimental
robot. 

CHAPTER  5
AHIC  FOR A 7-DOF REDUNDANT MANIPULATOR
5.1 Introduction
In Chapter 4, the AHIC scheme was developed and verified by simula-
tion on a 3-DOF planar arm. In this chapter the extension of the AHIC
scheme to the 3-D workspace of REDIESTRO, a 7-DOF experimental
manipulator, is described. Figure 5.1 shows a simplified block diagram of
the AHIC controller. Considering that the capabilities of the redundancy
resolution scheme with respect to collision avoidance have already been
fully demonstrated, in order to focus on the new issues related to Contact
Force Control (CFC), the environment is assumed to be free of obstacles.
The complexity of the required algorithms and constraints on the
amount of computational power available have resulted in an algorithm
development procedure which incorporates a high level of optimization. At
the same time, the following issues which were not studied in the 2-D
workspace need to be tackled in extending the schemes to a 3-D workspace:
x Extension of the AHIC scheme for orientation and torque
x Control of self-motion as a result of resolving redundancy at the
acceleration level for the AHIC scheme represented in Section 4.3.2
x Robustness with respect to higher-order unmodelled dynamics
(joint flexibility), uncertainties in manipulator dynamic parameters, and
friction model.
5.2 Algorithm Extension
In this section, the different modules involved in the AHIC scheme are
described. The focus is on describing the required algorithms without get-
ting involved in the specific way in which the modules are implemented.
5
Augmented Hybrid Impedance Control for a 
7-DOF Redundant Manipulator
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 119–145, 2005.
© Springer-Verlag Berlin Heidelberg 2005

120
5 AHIC for a 7-DOF Redundant Manipulator
Figure 5.1 Simplified block diagram of the AHIC controller
5.2.1
Task Planner and Trajectory Generator (TG)
The robot’s task can be specified using a Pre-Programmed Task File.
Each line indicates the desired position and orientation to be reached at the
end of that segment, the hybrid task specification, and the desired imped-
ance and force (if applicable) for each of the 6 DOFs.
In the absence of obstacles, the robot path will consist of straight lines
connecting the desired position/orientation at each segment. The TG mod-
ule generates a continuous path between the via points. The TG imple-
mented to test the AHIC scheme generates a fifth-order polynomial
trajectory which gives continuous position, velocity, and acceleration pro-
files with zero jerk (rate of change of acceleration) at the beginning and the
end of the motion.
5.2.2
AHIC module
Figure 5.2 shows the location of the different frames used by the AHIC
module. The description of the environment is specified in a configuration
file. As an example, for a surface-cleaning task, it is required to specify the
location and orientation of a fixed frame
with respect to the world
frame. In this case, the robot’s base frame
is selected as the world
frame. The tool frame
is attached to the last link. Depending on the
type of the tool, the user specifies the location and orientation of this frame
AHIC 
Forward
Kinematics
x x·
,
fd
f
f
q q·
,
x··t
q··t
q q·
,
q q·
,
Traj.
Gener-
-ator
Redun-
-dancy
Resolu-
tion
Lineariz-
ation &
Decoupl-
ing (Inv.
Dyn.)
Robot &
Environ-
ment
xd x·d x··d
,
,
C
^
`
R1
^
`
T
^ `

5.2  Algorithm Extension
121
in the last joint’s local frame. The force sensor interface card also uses this
information to locate the force sensor frame at 
. The task frame 
is located at the origin of the frame 
. However, the orientation of 
is dictated by 
. Therefore, the frame 
 moves with the tool while
keeping the same orientation as the constant frame 
. 
The AHIC scheme, as implemented for the 2-D workspace, generates
an Augmented Cartesian Target Acceleration (ACTA) for the end-effector
(EE) position in real-time: 
(5.2.1)
where 
 are diagonal matrices whose diagonal elements repre-
sent the desired mass, damping, and stiffness; S is a diagonal selection
matrix which specifies the force- (
) or position- (
) con-
trolled axis; 
are the desired and interaction forces. 
In order to keep the concept of splitting position and orientation control
as described in Section 3.3.2 , the ACTA in the 3-D workspace will be gen-
erated separately for position/force-controlled and orientation/torque-con-
trolled axes:
(5.2.2)
(5.2.3)
where the subscripts p and o indicate that the corresponding variables are
specified for position/force-controlled and orientation/torque-controlled
subspaces respectively. The superscript d denotes the desired values. The
vector 
 and its derivatives are the position, velocity, and accelera-
tion of the origin of {T} expressed in frame {C}; 
 and 
 are the desired
and interaction forces expressed in {C}; 
 is the selection matrix
T
^ `
Ci
^
`
T
^ `
Ci
^
`
C
^
`
Ci
^
`
C
^
`
X··t
Md 1
–
Fe
–
I
S
–

Fd
Bd X·
SX· d
–


–
KdS X
Xd
–


–
+


=
SX··d
+
Md Bd Kd


Si
0
=
Si
1
=
Fd Fe

P··t t 
Mp
d 1
–
Fe
–

I
Sp
–

Fd
Bp
d P·
SpP· d
–


–
+
=
KP
dSp P
Pd
–


–
SpP··d
+
Z· t t 
Mo
d 1
– 
Ne
–
I
So
–

Nd
Bo
d Z
SoZd
–


–
+
=
Ko
dSoeo
–

SoZ· d
+
P 3
1
u


Fd
Fe
Sp 3
3
u



used to indicate that a {C} frame axis is force- or position-controlled; 
are the angular velocity and acceleration of the {T} frame expressed in
; 
 is the orientation error vector (see Section 3.3.2.2 ); 
are
the desired and interaction torques in frame 
; and 
 are
diagonal matrices whose diagonal elements represent the desired mass,
damping, and stiffness.
Equation (5.2.2) is resolved in frame {C} while Equation (5.2.3) is
resolved in frame 
. The frame 
 is a time-varying frame (in con-
trast to frame {C} which is a fixed frame) located at the origin of frame {T}
and with same orientation as {C}. 
All the inputs and outputs in equations (5.2.2) and (5.2.3) should be
expressed in frames {C} and 
 respectively. In order to make the AHIC
controller module self-contained, all the necessary conversions are imple-
mented in this module.
The location of the origin of {C} in 
(
) and the 
 rota-
tion matrix 
 are specified in a configuration file. It should be noted
that the orientations of {C} and 
 in any arbitrary frame are the same.
5.2.3
Redundancy Resolution (RR) module
The RR module for the AHIC scheme should be implemented at the
acceleration level. Assuming an obstacle-free workspace, the damped least-
squares solution is given by:
(5.2.4)
where
Z Z·

Ci
^
`
eo
Nd Ne

Ci
^
`
Md Bd Kd


Ci
^
`
Ci
^
`
Ci
^
`
R1
^
`
P
R1
C
3
3
u


R
R1
C
Ci
^
`
q··t
A 1
– b
=
A
Jp
TWpJp
Jo
TWpJp
Jc
TWcJc
W
+
v
+
+
=
b
Jp
TWp P··t
J·
pq·
–


Jp
TWp Z· t
J·
oq·
–


Jc
TWcZ·t
+
+
=
122
5 AHIC for a 7-DOF Redundant Manipulator

5.2  Algorithm Extension
123
Figure 5.2 Different frames involved in the hybrid task specification 
and
are the Jacobian matrices projecting the joint rates to linear and
angular velocities of frame {T}. The Jacobian matrices and the two vectors
(
) are calculated by the forward kinematics module. The matrices
 are the diagonal weighting matrices that assign priority
between position/force tracking, orientation/torque tracking and singularity
avoidance (in the case of conflicts between these tasks), these matrices are
specified by the user in a configuration file. A complete study that demon-
strates the effects of the weighting matrices is given in Section 3.3.2.3 . The
vectors 
are the target linear and angular accelerations of frame {T}
expressed in the robot’s base frame. These vectors are calculated by the
AHIC module. Because the quantities are expressed in the same frame, no
coordinate transformation is needed. Note that at this stage, the additional
task that is incorporated into the system is joint limit avoidance. For the
joint limit avoidance task, the terms 
 and 
 reduce to 
(see Section 2.4.1.3 ). The target acceleration for the ith joint in the case of
violation of soft-joint limits is defined by:
Y
X
X
X
Z
Y
Y
Z
Z
Ci
^
`
T
^ `
C
^
`
Y
X
Z
R1
^
`
OT
Jp
Jo
J·
pq· J·
oq·

Wp Wo Wv


P··t Z· t

Jc
TWcJc
Jc
TWc
Wc

(5.2.5)
where
and
are positive-definite proportional and derivative gain
matrices, and
is the vector of maximum or minimum joint limits.
Computational considerations:
Considering the fact that the matrix A is guaranteed to be positive defi-
nite (because of the diagonal weighting matrix
), a more efficient way to
solve (5.2.5) is to use the Cholesky decomposition. Equation (5.2.4) can be
written in the form
(5.2.6)
where
. The Cholesky decomposition of A is given [93]
by:
, where L is a lower-triangular matrix. This reduces to solving
an upper and an lower-triangular system of linear equations:
(5.2.7)
5.2.4
Forward Kinematics
This module calculates the position and orientation of frame {T}, the
linear and angular velocities of {T}, and also the Jacobian matrices relating
the linear and angular velocities of {T} to the joint rates. These quantities
are expressed in the robot’s base frame.
- Tool frame Information: It is only necessary to specify the informa-
tion
to
locate
frame
{T}
in
frame
{7}.
Therefore,
, are specified in a configuration
file which results in:
Z·
i
t
Kviq·
i
–
Kpi qi
qmi
–


–
=
Kp
Kv
qm
Wv
Ax
b
=
x
q··t
=
A
LLT
=
Ly
b
=
LTx
y
=
Twist D7


Length a7


Offset d7




T
7
T
1
0
0
a7
0
D7


cos
D7


sin
–
0
0
D7


sin
D7


cos
d7
D7


sin
0
0
0
1
=
124
5 AHIC for a 7-DOF Redundant Manipulator

5.2  Algorithm Extension
125
- Calculation of 
: Calculation of two new vectors (
)
which are required by the RR module (because of resolving redundancy at
the acceleration level) are added to the forward kinematics module. The
forward kinematics function at the acceleration level is defined by:
(5.2.8)
which yields
(5.2.9)
This suggests that the following recursive algorithm, which calculates the
linear and angular accelerations of the frame {T}, can be used to calculate
the vectors (
).
with initial values:
(5.2.10)
Note that the frames {8} and {T} are the same, and also, the frame {0} is
located at the robot’s base frame {R1}. Now, equation (5.2.9) results in:
(5.2.11)
J·
pq· J·
oq·

J·
pq· J·
oq·

X··
Jq··
J·q·
+
=
X··
q··
0
=
J·q·
=
J·
pq· J·
oq·

for
i
1}n
1
+
=
Z
i
i
1
–
R
i
i
1
–
Z
i
1
–
i
1
–
=
Z
i
i
Z
i
i
1
–
q·
izi
+
=
v·i
i
R
i
i
1
–
v·
i
1
–
i
1
–

Z·
i
1
–
i
1
–
P
i
1
–
i
Z
i
1
–
i
1
–
+
u
+
=
Z
i
1
–
i
1
–
P
i
1
–
i
u


u

Z·
i
i
R
i
i
1
–
Z·
i
1
–
i
1
–
Z
i
i
1
–
q·
izi
u
+
=
Z
0
0
0 0 0
 
>
@T
v·
0
0
0 0 0
 
>
@T
=

=
J·
pq·
R
0
T v·
8
8
=
J·
oq·
R
0
T Z·
8
8
=

5.2.5
Linear Decoupling (Inverse Dynamics) Controller
The equation of motion of a 7-DOF manipulator, considering interaction
forces/torques with its environment, is given by
(5.2.12)
where
is the
symmetric positive-definite inertia matrix of the
manipulator in joint space;
is the
vector of centripetal and
Coriolis torques,
is the
gravity vector,
is the
vector of interaction forces/torques exerted by the robot on the environment
at the operating point (origin of the tool frame),
is the
Jaco-
bian matrix relating the linear and angular velocities of the tool frame to
joint rates,
is the
joint friction vector, and
is the
vector of applied torques at the actuators.
The torque that is required to linearize and decouple the nonlinear
equation (5.2.12) is given by:
(5.2.13)
where
(5.2.14)
and
(5.2.15)
where ^ denotes the estimated values. The optimized InvDyn function as
well as the closed-form representations of
are developed in C
using the Robot Dynamics Modeling (RDM) software [78].
5.3 Testing and Verification
In the simulation developed for the purpose of verifying the integration
of the controller, the inverse dynamics and the model of the arm are
replaced by double integrators, i.e., we assume perfect knowledge of the
manipulator dynamics. However, the model of the environment is still
M q
 q··
H q q·



G q
 
f q q·



+
+
+
W
JTF
–
=
M
7
7
u


H
7
1
u


G
7
1
u


F
6
1
u


J
6
7
u


f
7
1
u


W
7
1
u


tLD
W1
W2
+
=
W1
Mˆ q
 q··
Hˆ q q·



Gˆ q
 
JTFˆ
+
+
+
=
InvDyn q q· q··t Fˆ
 



=
W2
fˆ q q·



=
M H G


present. The environment is modeled by a linear spring. 
126
5 AHIC for a 7-DOF Redundant Manipulator

5.3  Testing and Verification
127
To verify and test the integration of the controller modules, we recall
that if the AHIC scheme is successful, the manipulator acts as a desired
impedance in each of the 6 DOF’s of the {C} frame. Figure 5.3 shows the
desired impedance in position-controlled and force-controlled axes respec-
tively.  In order to verify the operation of the AHIC scheme, two simple
one-dimensional simulations for the position and force controlled axes
were used (see Figure 5.4). 
Figure 5.3 Desired impedance a) position controlled axis, and b) force-
controlled axis
To check the correct operation of the controller in position-controlled
directions, all axes were specified to be in position-control mode. A 1 N
symmetric step force (in all three X, Y, and Z dimensions of the {C} frame)
was applied to both systems. The desired impedance values can be selected
arbitrarily at this stage, because we only need to compare the responses of
the two systems. The impedance values used for this test in all 6 DOF’s of
the {C} frame were
Figure 5.5 shows the plots of the changes in the position of the origin of the
frame {T} along X and Y axes of the {C} frame. The same test was per-
formed for the force-controlled direction with the following values:
Figure 5.6 compares the force history of the AHIC after contacting the sur-
B
2---
d
K
2----
d
Ke
B
2---
d
K
2----
d
Md
B
2---
d
B
2---
d
Md
Fd
Ke
(a)
(b)
Md
257kg Bd

1100Ns
m
------ Kd

11000N
m----
=
=
=
[

0.32 Zn

6.54
=
=
Md
257kg Bd

1100Ns
m
------ Ke

11000N
m---- Fd

20N
=
=
=
=

face with that of the pure-impedance simulation in Figure 5.4b. As one can
see, the response of the AHIC simulation is very close to that of the pure
impedance simulation. The possible sources of the small discrepancies are
as follows:
Figure 5.4 Simulink one-dimensional simulation of the desired impedance 
a) position-controlled axis, b) force controlled axis. 
x As mentioned in Section 3.3.2.3 , the presence of the singularity
robustness term (
) introduces some error.
x The simulation of the AHIC scheme is a discrete-time simulation
with a trapezoidal integration routine written in C, in contrast to the imped-
ance simulation which is run in continuous-time mode.
x In the AHIC simulation some delays are added to break the “alge-
braic-loops”. These are not present in the ideal impedance system simula-
tion shown in Figure 5.4. 
Note that the test results up to this point show the correct integration of
different modules. Detailed study and analysis of the performance are
described in the next section.
(a)
(b)
Wv
128
5 AHIC for a 7-DOF Redundant Manipulator

5.3  Testing and Verification
129
Figure 5.5 Step response in position-controlled directions - Position of the 
origin of {T} (expressed in {C}) in response to a step force of 1N. a) X 
axis, b) Y axis
0
0.5
1
1.5
2
2.5
3
3.5
−2
0
2
4
6
8
10
12
14 x 10−5
Time (secs)
Amplitude
-.- AHIC 
___ Ideal mass-spring-dashpot
0
0.5
1
1.5
2
2.5
3
3.5
0
0.2
0.4
0.6
0.8
1
1.2
1.4 x 10−4
Time (secs)
Amplitude
___ AHIC 
-.-.- Ideal mass-spring-dashpot
(m)
(m)
(b)
(a)

Figure 5.6 Step response in the force-controlled direction
(desired force = 20N)
5.4 Simulation Study
In order to perform this study, a simulation environment has also been
created. This study will allow us to identify different sources of instability
and performance degradation and finalize the choice of the control scheme
to be used in the experimental demonstration. Modification to the AHIC
scheme to overcome these problems are presented in this section.
5.4.1
Description of the simulation environment
The control modules in the simulation are described in Section 5.2.
The robot model (Figure 5.7) has been developed using the RDM software
[78]. It models REDIESTRO and its hardware accessories and covers the
following main features:
x Optimized forward dynamics module of the arm;
0
0.5
1
1.5
2
2.5
3
0
5
10
15
20
25
30
__ AHIC 
-.- Ideal impedance response
Surface 
force
(N)
reaction 
Time after contact (s)
130
5 AHIC for a 7-DOF Redundant Manipulator
x Joint friction including stiction, viscous, and Coulomb friction;

5.4  Simulation Study
131
x Digitization effects of the A/D converters and encoders;
x Saturation of the actuators and current amplifiers 
It also provides some additional features:
x Optimized closed-form representations of the inertia matrix,
Coriolis, and gravity vectors;
x Effect of external forces; 
x Surface and force-sensor models.
Figure 5.7 Simulation model of REDIESTRO with the addition of a force
sensor and surface models.
In order that the simulation be as close as possible to reality, the simu-
lation is implemented in a mixed discrete and continuous mode. The robot
and the surface models use a continuous simulation (Runge-Kutta 5th-order
integration), and all other modules are discrete modules with a sampling
frequency of 200 Hz.
The joint angles and the interaction forces are transferred via an ether-
net network to another SGI workstation which runs the Multi-Robot Simu-
lation (MRS) graphical software [77], [9], [10] for online 3-D graphics
rendering of the movement of the arm.
5.4.2
Description of the sources of performance degradation
In this section by using different simulations and hardware experi-
ments, we determine the sources of degradation in the performance and, in

the extreme case, instability, and suggest modifications that can deal with
these problems.
Figure 5.8 shows a simplified block diagram of the simulation of the
AHIC scheme. The major sources of performance degradation and instabil-
ity are as follows:
x Kinematic instability due to resolving redundancy at the accelera-
tion level.
x Performance degradation due to the model-based part of the con-
troller.
Figure 5.8 Simplified block diagram of the AHIC controller simulation.
In the following sections, these problems will first be demonstrated using
simulation and/or hardware experiments. Then, the required modifications
to the AHIC scheme will be described.
5.4.2.1
Kinematic instability due to resolving redundancy 
at the acceleration level
In order to focus on this specific problem, we assume that the inverse
dynamics part of the controller perfectly decouples the manipulator’s
dynamics, so that, the arm model can be replaced by a double integrator. It
was previously noted (see Section 4.3.3 ) that resolving redundancy at the
acceleration level has the drawback that self-motions (joint motions that do
not induce any movement in Cartesian space) of the arm are not controlled.
A simulation is performed with non-zero initial joint velocities. The
robot is commanded to go from an initial position/orientation to a final
position/orientation in 3 seconds and keep the same position/orientation
thereafter (the desired velocity and acceleration are zero after 3 seconds).
Inv.
Dyn.
Fwd.
Dyn
³
³
TG
AHIC
RR
Fwd. Kin.
Arm + Surface model
Controller
Surface
model.
q··t
x x·

x x·d x··d Fd



x··t
q q·

F
W
q··
132
5 AHIC for a 7-DOF Redundant Manipulator

5.4  Simulation Study
133
As we can see in Figure 5.10, the robot tracks the trajectory very well.
However, the controller is not able to damp out the self-motion component
of the joint velocity after reaching the final point.
Figure 5.9 Simplified block diagram of the simulation used in kinematic 
instability analysis
The following solution can be used:
x Reducing the dimension of the self-motion manifold to zero by
specifying additional tasks, e.g. freezing or controlling the value of one of
the joints 
x Using an improved redundancy resolution scheme at the accelera-
tion level in order to achieve self-motion stabilization [32].
x Modifying the AHIC scheme in order to be able to use redun-
dancy resolution at the velocity level (see Section 4.3.3 ). 
Freezing or controlling the position of one of the joints, is not a prefer-
able option, because that eliminates a desirable redundant degree-of-free-
dom which otherwise could be used to fulfill additional tasks. The solutions
given for improved redundancy resolution at the acceleration level are com-
putationally more expensive, because they require the explicit calculation
of the derivative of the Jacobian matrix. 
The AHIC scheme with self-motion stabilization, proposed in Section
4.3.3 , achieves its goal by modifying AHIC in order to use redundancy res-
olution at the velocity level. However, the model-based part of the control-
ler (inner-loop) is much more complicated than the computed torque
algorithm. The former requires tracking of a reference joint velocity - see
equation (4.3.14). The key idea to solve this problem is to control the veloc-
ity. We propose the following to control the velocity:
³
³
TG
AHIC
RR
Fwd. Kin.
Arm + Surface model
Controller
Surface
model.
q··t
x x·

x x·d x··d Fd



x··t
q q·

F
q··
Identity transformation
(5.4.1)
q··
Oq·
+
0
=

Figure 5.10 Simulation results with non-zero initial velocity: (a) position
error (m); (b) norm of the joint velocities (rad/s). 
0
0.5
1
1.5
2
2.5
3
−0.02
−0.01
0
0.01
0.02
0.03
0.04
0.05
0.06
0.07
0
0.5
1
1.5
2
2.5
3
3.5
0
0.5
1
1.5
2
2.5
time (s)
time (s)
(A)
(a)
(b)
134
5 AHIC for a 7-DOF Redundant Manipulator

5.4 Simulation Study
135
This suggests a modification of the cost function in (4.3.2) to
(5.4.2)
The damped least-squares solution for the new cost function is given by:
(5.4.3)
which in fact penalizes non-zero velocities. To verify the performance of
the modified redundancy resolution scheme, a simulation was performed.
In order to verify the performance in the worst case, the final position/ori-
entation was selected such that it makes the robot’s posture approach a sin-
gular configuration. This, in fact, induces a high null-space component on
the joint velocities. Again the robot was commanded to go from an initial
position to a final position in 3 seconds. The robot should reach its final
position in Cartesian space in 3 seconds. However, there is a large null-
space component of the joint velocities that remains uncontrolled when
. Increasing the value of
damps out these components (Figure
5.11).
In order to study the effect of
on tracking error, another set of simu-
lations was performed. shows the results of these simulations. As in the
previous simulations the desired position is reached after 3 seconds. For
, the velocity fades away with large oscillations. With
the
velocity fades away with no overshoot. However, there are larger tracking
errors. A choice of
gives the best result considering both tracking
and velocity damping. Based on our experience a value of
between 7.5
and 12.5 was found to be suitable for most cases.
5.4.2.2
Performance degradation due to the model-based part
of the controller
In order to focus on this specific problem, first let us consider the sim-
pler case of a Linearized-Decoupled Proportional-Derivative (LDPD) joint-
space controller as shown in Figure 5.13.
The model based part of the controller decouples and linearizes the
manipulator’s dynamics if both the model and the parameters used in the
controller are perfect. However, in reality there are different sources of
parameter and model mismatch. Some of the major sources of performance
degradation of a model-based controller are listed below:
L
E··TWE··
q··
Oq·
+

TWv q··
Oq·
+


+
=
q··
JTWJ
Wv
+


1
–
JTW X··t
J·q·
–


WvOq·
–


=
O
0
=
O
O
O
5
=
O
50
=
O
10
=
O

Figure 5.11 Simulation result for the modified RR scheme - Joint 2 velocity 
(rad/s).
Figure 5.12 Comparison between different values of damping factors in the 
RR module. 
0
1
2
3
4
5
6
7
8
9
−3
−2
−1
0
1
2
3
4
O
0
=
O
1
=
O
2.5
=
O
7.5
=
O
12.5
=
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
−5
−4
−3
−2
−1
0
1
2
3
4
5
(a) Joint 2 rate (rad/s)
136
5 AHIC for a 7-DOF Redundant Manipulator

5.4  Simulation Study
137
Figure 5.12 (contd.) Comparison between different values of damping 
factors in the RR module. 
Figure 5.13 Block diagram of the LDPD controller
x Friction compensation (model & parameters)
x Unmodeled dynamics (e.g. joint flexibility)
x Imprecise dynamic and kinematic parameters
x Initial joint offsets
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
0
0.01
0.02
0.03
0.04
0.05
0.06
0.07
(b) Norm of position
error (m)
O
50
=
O
10
=
O
5
=
__
-.-.
- - -
. 
 Fwd.
Dyn
q··t
W
q··
q q· d q··d


³
o
³
 Arm model
LDPD controller
 Inv.
 Dyn.
 PD
Control
Joint
Space
TG

Simulations and hardware experiments were used to study the effects of
these sources on tracking performance. It should be noted that in order to
distinguish the performance of the model-based part of the controller from
the PD part, we have not selected high gain values in the following simula-
tions and experiments (
). 
Figure 5.14 shows the simulation results of the LDPD controller (Joint
2) when the same friction model and parameters are used in the controller
and the manipulator model. The errors essentially converge to zero.  The
simulation was repeated using an estimate of joint friction values greater
that those used in the manipulator model 
. The results
shown in Figure 5.15 indicate the degradation in tracking.  In order to
achieve better tracking performance with the LDPD controller, two solu-
tions are available:
Figure 5.14 Simulation results for the LDPD controller using the same 
parameters and model in the inverse dynamic controller and the 
manipulator model (
)
x Increasing the feedback gains
x Better parameter identification 
The first solution improves tracking. However, it decreases robustness
because of the risk of exciting higher-order unmodeled dynamics, e.g. joint
flexible modes. The second option also improves tracking. However, there
is a limit to the accuracy level of identification for different manipulators.
Kp
10 Kv

6.3
=
=
f˜fric
1.3ffric
=
0
2
4
6
−145
−140
−135
−130
−125
−120
−115
−110
−105
−100
0
2
4
6
−0.08
−0.07
−0.06
−0.05
−0.04
−0.03
−0.02
−0.01
0
0
2
4
6
−4
−3
−2
−1
0
1
2 x 10−4
Joint 2
Torque(Nm)
Rate (rad/s)
Error (rad)
time (s)
time (s)
time (s)
Kp
10 Kv

6.3
=
=
138
5 AHIC for a 7-DOF Redundant Manipulator

5.4 Simulation Study
139
Moreover, these parameters may change with time and the initially identi-
fied parameters may not be accurate after a certain time. This is important
in space applications where, after launching the arm, periodic identification
of parameters may not be feasible.
It should be noted that the AHIC scheme, shown in Figure 5.1, does not
include any “control gains”. The only gains in the AHIC scheme are the
“impedance gains”. The control gains can be selected arbitrarily based on
the accuracy level of the modeling and tracking requirements. However, the
criteria for selecting the impedances gains are dictated differently, e.g., by
surface dynamics, stability considerations for the force control loop.
From the above statements, one can conclude that a way of improving
the performance of the AHIC scheme is a combination of the following
steps:
1-Adding a PD feedback loop in the AHIC scheme
2- “Better” parameter identification
x Refinement of the friction compensation module
x Fine tuning of friction coefficients
x Accurate home positioning
The following section describes the modification to the AHIC control-
ler.
5.4.3
Modified AHIC Scheme
Section 5.4.2.2 indicated the problem associated with the model based
controller using a simple example of a joint-space LDPD controller. Now,
we study the same problem using the complete simulation of the AHIC
scheme (see Figure 5.8). These simulations contain two segments: free
motion and contact-motion. In the first segment, the tool frame is com-
manded to move from an initial position to a final position located on the
constraintsurface in 3 seconds. The second segment consists of keeping the
final position (along x and y) and orientation while exerting a 60 N force on
the surface. Table 5-1 summarizes the values used in the simulations.
Figure 5.16 shows the force tracking when joint friction is not included
in the joint models. As one can see, there is a small error between the joint
target acceleration command ( ) and the actual joint acceleration. This
results in accurate tracking of the response of the desired impedance in the z
direction.
q··t

Figure 5.15 LDPD controller with inexact friction compensation 
Next, the simulation was repeated by including friction in the manipu-
lator model. The friction compensation used the same model with exact
parameters. Figure 5.17(b) shows the error between the target and the
actual joint accelerations. Although both the friction model and the friction
compensation module used the same model and parameters, the friction
compensation used discretized data (e.g. joint velocities) while the friction
model used continuous values. Figure 5.17(a) shows the tracking degrada-
tion resulting from this slight mismatch between the model and model-
based controller. As mentioned earlier, the selection of the desired imped-
ances is based on other criteria. Hence, they cannot be changed to deal with
this problem.
0
5
10
15
−20
−10
0
10
20
0
5
10
15
−10
−5
0
5
10
0
5
10
15
−10
−5
0
5
10
0
5
10
15
−1.5
−1
−0.5
0
0.5
1
1.5
0
5
10
15
0
0.2
0.4
0.6
0.8
1
0
5
10
15
−1
−0.5
0
0.5
1
Joint 4 error (deg)
Joint 3 error (deg)
Joint 2 error (deg)
Joint 5 error (deg)
Joint 6 error (deg)
Joint 7 error (deg)
f˜fric
1.3ffric Kp

10 Kv

6.3
=
=
=
140
5 AHIC for a 7-DOF Redundant Manipulator

5.4  Simulation Study
141
Figure 5.16 AHIC controller without joint friction
Figure 5.17 AHIC simulation with friction in the model and friction
compensation in the controller (using the same friction parameters 
as in the model)
Table 5-1 Desired values used in the AHIC simulation (z - axis)
seg.
S
M
(kg)
B
(Nsec/m)
K
(N/m)
Fd
(N)
Surface 
K (N/m)
Desired Eq. of motion
non 
contact
1
1
20
100
--
--
contact 0
100
1000
--
60
10000
M X··
X··d
–


B X·
X· d
–


+
K X
Xd
–


F
–
e
=
+
MX··
BX·
Fd
–
+
F
–
e
=
0
1
2
3
4
5
6
0
10
20
30
40
50
60
70
2.5
3
3.5
4
4.5
5
5.5
−0.1
−0.08
−0.06
−0.04
−0.02
0
0.02
0.04
0.06
0.08
0.1
q··2
t
q··2
–
Fz
(b)
contact
non-contact
(a)
(N)
(rad/s2)
0
1
2
3
4
5
6
0
10
20
30
40
50
60
70
80
90
0
1
2
3
4
5
6
−0.5
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
0.5
q··2
t
q··2
–
Fz
(a) 
(b) 
(N)
(rad/s2)

Adopting a similar scheme to that proposed in Section 4.3.3 , a solution
to this problem is to add a PD feedback loop. Figure 5.18 shows the block
diagram of the modified controller. The following modifications have been
made:
x The Error Reference Controller (ERC) module which generates a
Cartesian Reference Acceleration (CRA) has been added
x The position feedback which used to go to the AHIC module is
now connected to ERC
x The complete target trajectory (
) is generated online
using force sensor feedback
Figure 5.18 shows the new/modified modules which are shaded in gray.
Table 5-2 summarizes the modified equations
Figure 5.18 Simplified block diagram of the modified AHIC controller
Table 5-2 Summary of equations for new/modified modules
Module
Equation 
AHIC
ERC
RR
xt x·t x··t


Inv. 
Dyn.
TG
AHIC
Fwd. Kin.
Controller
q··t
xt x·t

x x·d x··d Fd



x··t
q q·

F
W
Err.
Ref. 
RR
³
o
³
x x·

x··r
Arm +
Surface Model
X··t
Md 1
–
Fe
–
I
S
–

Fd
Bd X· t
SX· d
–


–
KdS Xt
Xd
–


–
+


SX··d
+
=
X··r
X··t
Kv X· t
X·
–


Kp Xt
X
–


+
+
=
q··t
JTWJ
Wv
+


1
–
JTW X··r
J·q·
–


OWvq·
–


=
142
5 AHIC for a 7-DOF Redundant Manipulator

5.4 Simulation Study
143
At this stage, another level of algorithm development was performed
for the new/modified modules and functions. The complete simulation of
the modified AHIC scheme was developed in the Simulink environment to
study the performance of the modified scheme.
The simulations consist of 5 segments which are summarized in Table
5-3. The PD gains are chosen as
. The results of the
original AHIC scheme are compared with the modified AHIC scheme. No
joint friction compensation is performed to study the robustness of the algo-
rithms.
Figure 5.19 shows the comparison between the force tracking perfor-
mance of the AHIC scheme as shown in Figure 5.1, and that of the modi-
fied AHIC scheme. As one can see, even without performing friction
compensation, the modified AHIC scheme is able to regulate the interaction
force (with limited error). However, the original AHIC scheme is com-
pletely incapable of regulating the force. Note that force tracking can be
greatly improved by selecting the appropriate impedance values (this will
be explained in Section 6.2.1 ).
Table 5-3 Desired values used in the modified AHIC simulation (z - axis)
seg.
S
M
(kg)
B
(Nsec/
m)
K
(N/m)
Fd
(N)
Surface 
K (N/m)
final_time
(S)
Comment
1
1
1
20
100
--
--
3
non-contact
2
0
100
1000
--
60
10000
6
contact
3
0
100
1000
--
80
10000
7
contact
4
0
100
1000
--
40
10000
10
contact
5
0
100
1000
--
0
10000
13
contact
Kp
100 Kv

20
=
=

Figure 5.19 Comparison between the original AHIC scheme and the
modified AHIC scheme (without friction compensation).
5.5 Conclusions
As indicated in the introduction, the objective of this chapter was to
extend the AHIC scheme to the 3D workspace of a 7-DOF manipulator
(REDIESTRO), to develop and test the AHIC software, and to demonstrate
by simulation the performance of the proposed scheme. From the foregoing
sections, the following conclusion can be drawn:
1. The conceptual framework presented for compliant force and motion
control in the 2D workspace of a 3-DOF planar manipulator, is adequate to
control a 7-DOF redundant manipulator working in a 3D workspace.
2. The algorithm extension for the AHIC scheme and the required mod-
ules have been successfully developed and implemented for REDIESTRO.
3. The software development of different modules has been success-
fully accomplished. The code has been optimized in order to achieve real-
time implementation.
0
2
4
6
8
10
12
0
10
20
30
40
50
60
70
80
90
100
- - - Ideal impedance
____Modified AHIC
. . . . AHIC
F (N)
time (s)
144
5 AHIC for a 7-DOF Redundant Manipulator

5.5  Conclusions
145
4. At this stage, only joint limit avoidance has been incorporated into
the redundancy resolution module. The simulation results for joint limit
avoidance provide confidence that other additional tasks such as obstacle
avoidance can be incorporated without major difficulties. 
5. The realistic dynamic simulation environment has enabled us to
study issues such as performance degradation due to imprecise dynamic
modelling and uncontrolled self-motion. 
6. The least-squares solution for redundancy resolution at the accelera-
tion level was modified by adding a velocity-dependent term to the cost
function. This modification successfully controlled the self-motion of the
manipulator.
7. It was demonstrated by simulation that the force tracking perfor-
mance of the methods based solely on inverse dynamics degrades in the
presence of uncertainty in the manipulator’s dynamic parameters and
unmodelled dynamics. This is especially true for a manipulator equipped
with harmonic drive transmissions, which introduce a high level of joint
flexibility and frictional effects (as in the case of REDIESTRO). 
8. The AHIC scheme has been modified by incorporating an “error ref-
erence controller”. This modification successfully copes with model uncer-
tainties in the model-based part of the controller, so that even friction
compensation is not required. 
In the next chapter, we illustrate further the capabilities of the AHIC
scheme by showing expertimental results obtained using the REDIESTRO
manipulator. 

CHAPTER  6
EXPERIMENTAL RESULTS FOR CONTACT FORCE AND COMPLIANT 
6.1
Introduction
In this chapter, we describe the hardware experiments performed to
evaluate the performance of the proposed AHIC scheme for compliant
motion and force control of REDIESTRO. Considering the complexity and
the large amount of calculations involved in force and compliant motion
control of a 7-DOF redundant manipulator, the implementation of the real-
time controller, from both hardware and software points of view, by itself
represents a challenge. It should be noted that there are very few cases in
the literature that experimental results for force and compliant motion con-
trol of a 7-DOF manipulator have been reported. In [67], a set of experi-
ments on contact force control carried out on a 7-DOF Robotics Research
Corporation (RRC) model K1207 arm at the Jet Propulsion Laboratory is
reported. It should be noted that the RRC arm is one the most advanced
manipulators from both mechanical design and controller viewpoints. On
the other hand, implementation of the AHIC scheme for REDIESTRO
introduces additional challenges:
• The REDIESTRO arm is equipped with harmonic drive transmissions
which introduce a high level of joint flexibility. This makes accurate
control of contact force more difficult.
• A friction model and its parameters cannot be estimated accurately in
many practical applications. The friction model that is generally used
models load independent Coulomb and viscous friction. This model is
especially inadequate for a robot with harmonic drive transmissions
which have high friction - experimental results show that in some
configurations, the friction torques reach up to 30% of the applied
torques. Also, experimental studies [88] have shown that frictional
torques in harmonic drives are very nonlinear and load dependent.
This represents a challenge for a model-based controller. 
CHAPTER  6
EXPERIMENTAL RESULTS FOR CONTACT FORCE AND COM-
PLIANT MOTION CONTROL
6
Experimental Results for Contact Force and 
Compliant Motion Control
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 147–177, 2005.
© Springer-Verlag Berlin Heidelberg 2005

148
6 Experimental Results for Contact Force and Compliant Motion Control
positioning. This needs a very well-calibrated arm. In [15],
Colombina et al. described the development of an impedance
controller at the External Servicing Test-bed which is a ground test-
bed currently installed at the European Space Agency Research
Center. The performance of the impedance controller was
demonstrated for a replacement of an Orbital Replacement Unit
(ORU). They reported that only misplacement of 5 mm in position
and 0.5 degrees in orientation are compensated for in an ORU
exchange task. Considering the fact that REDIESTRO has not been
accurately calibrated, the successful operation of the peg-in-the-hole
strawman task by REDIESTRO demonstrates a high level of
robustness of the proposed scheme. 
The goal of this chapter is to demonstrate the feasibility and to evaluate
the experimental performance of the control scheme described in the pre-
ceding chapters. Before presenting the experimental results, a detailed anal-
ysis is given to provide guidelines in the selection of the desired
impedances. A heuristic approach is described which enables the user to
systematically select the impedance parameters based on stability and
tracking requirements. 
At this stage different scenarios have been considered and two straw-
man tasks - surface cleaning and peg-in-the-hole - have been selected. The
selection is based on the ability to evaluate force and position tracking and
also robustness with respect to knowledge of the environment and kine-
matic errors. Finally, experimental results for these strawman tasks are pre-
sented. The hardware configuration (see Figure 6.1) used for the
experimental work was developed to meet the requirements for force and
compliant motion control.
6.2
Preparation and Conduct of the Experiments
6.2.1
Selection of Desired Impedances 
The desired equation of motion in a position (impedance)-controlled
direction is given by:
(6.2.1)
where 
. The desired equation of motion in a force-controlled
direction is given by:
mde··
bde·
kde
+
+
f
– e
=
e
x
xd
–
=
• Performing tasks such as “peg-in-the hole” requires very accurate

6.2  Preparation and Conduct of the Experiments
149
(6.2.2)
The environment is modeled as a linear spring. Therefore, the interaction
force in (6.2.2) can be replaced by 
, which results in 
(6.2.3)
Figure 6.1 Hardware configuration (for force control experiments)
Comparing the desired equation of motion in a position (impedance)
controlled direction (6.2.1) with that of a force-controlled direction (6.2.3),
we note that the same guidelines for selection of impedance gains which
ensure both stability and tracking performance can be used. The main dif-
ference is that in an impedance-controlled direction, the stiffness is an
adjustable control parameter which can be specified while in a force-con-
trol direction, the stiffness is an environmental parameter which is not
selectable. A complete stability analysis study and guidelines for selecting
the set of impedance parameters to ensure stability of motion taking into
account delays in the force and position sensor loops and also stiffness of
contact are given in this section.
6.2.1.1
Stability Analysis
As mentioned above, the same guidelines can be followed for both
impedance- and force-controlled directions. Therefore, we consider the fol-
lowing generic system:
mdx··
bdx·
+
fd fe
–
=
fe
kex
=
mdx··
bdx·
kex
+
+
fd
=
Processor + RAM+ ...
VME-GIO bus adaptor
VME-GIO bus adaptor
68030 Processor Card
68030 Processor Card
D/A (2)
Parallel I/O
Force sensor i/f card
Encoder i/f cards (4)
VME-VME bus adaptor
VME-VME bus adaptor
Processor + RAM+ ...
GIO bus
VME BUS
VME BUS
SGI workstation
VME chassis
Sun workstation

(6.2.4)
Equation (6.2.4) can be expressed (using Laplace transforms) as
(6.2.5)
where 
(6.2.6)
Now, let us introduce a delay element in the sensor (feedback) loop. Equa-
tion (6.2.5) yields
(6.2.7)
The delay element 
 can be replaced by its approximation
. Now the characteristic equation of (6.2.5) is expressed
by:
(6.2.8)
According to the Routh stability criterion, the system expressed by
(6.2.7) is stable (all roots of (6.2.8) are in the left-half of the complex plane)
if and only if all coefficients in the first column of the Routh table have the
same sign. This leads to
(6.2.9)
6.2.1.2
Impedance-controlled Axis
The desired equation of motion is given by (6.2.1). In this case, the
desired mass, damping, and stiffness should be specified. The following
steps are required:
x Based on the sampling and sensor delays, select 
 and 
 such that
the stability condition (according to Figure 6.2) is satisfied.
mx··
bx·
kx
+
+
f
=
s2X s 
2[ZnsX s 
Zn
2X s 
+
+
F s 
=
Zn
k
m----
[

b
2 km
--------------
F

Laplace f
m----
©
¹
§
·
=
=
=
s2X
2[Zne
2Tss
–
sx
Zn
2e
2Tss
–
X
+
+
F
=
e
2Tss
–
e
2Tss
–
1
sTs
–
1
sTs
+
-----------------
=
Tss3
1
2[ZnTs
–

s2
2[Zn
Zn
2Ts
–

s
Zn
2
+
+
+
0
=
Zn
2[
Ts
------
and
Zn
1
2[Ts
------------


[
Zn
150
6 Experimental Results for Contact Force and Compliant Motion Control

6.2  Preparation and Conduct of the Experiments
151
Figure 6.2 Stability region of the system represented by Equation (6.2.7) 
with
seconds.
x Select the desired stiffness according to the acceptable steady-state
error: 
(6.2.10)
where
is the disturbance force in a position-controlled direction such
as the friction force on the surface for a surface cleaning scenario. 
x Calculate the desired inertia and damping using:
(6.2.11)
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
0
50
100
150
200
250
300
350
400
[
Stable Region
Zn
1
2[Ts
------------

2[
Ts
------
Ts
0.005
=
ess
f
– e
kd
-------
=
fe
md
kd
Zn
2
------
=

(6.2.12)
In order to study the step response of the controller in an impedance-
controlled direction, the following experiment was conducted. All axes
were specified to be impedance-controlled for the segment between t =
110s and t =115s. The desired position trajectory is specified such that
there is a difference of 13 cm between the initial desired position along the
z axis and the initial tool frame z position. The desired impedances for the z
axis are specified by:
which correspond
to
. Figure 6.3 compares the hardware experiment result
with that of the ideal system of mass-spring-dashpot.
The desired impedances for the position (impedance)-controlled axes
during the surface cleaning and the peg in hole experiments were selected
as
which
correspond
to
.
6.2.1.3
Force-controlled Axis:
The desired equation of motion is given in (6.2.2). The desired mass
and damping should be specified. In contrast to an impedance-controlled
axis where the stiffness is an adjustable control parameter, in this case the
stiffness
is the overall stiffness of contact. The contact stiffness is
affected by the following factors:
x Tool stiffness: the eraser pad in the case of surface cleaning and the
plexi-glass peg in the case of peg in the hole.
x Environment stiffness: the white-board table and its support in the case
of surface cleaning and the plexi-glass hole in the case of peg in the
hole.
x Transmission (joint) flexibility: the flexibility of harmonic drives.
x Structural (link) flexibility
Therefore, in order to assign
and
for the force-controlled axis,
one should know the overall stiffness of contact. Although difficult to
determine, the stiffness of the tool and environment can be identified by
off-line experiments; joint and link flexibilities are even more difficult to
bd
2[kd
Zn
------------
=
md
112 bd

700 kd

1100
=
=
=
]
1 Tn

2s
=
=
md
257 bd

1100 kd

1100
=
=
=
]
1.03 Tn

3.03s
=
=
ke
[
Zn
152
6 Experimental Results for Contact Force and Compliant Motion Control

6.2  Preparation and Conduct of the Experiments
153
Figure 6.3 Position step response in an impedance-controlled direction (13 
cm initial position error).
identify and characterize. Note that the force tracking steady-state error in
(6.2.2) is not affected by the stiffness 
 as long as the system remains sta-
ble. However, the transient response varies with 
. In conducting the
experiments, a heuristic approach has been used which allows us to achieve
the desired steady-state and transient performance without an elaborate pro-
cedure to identify and characterize the overall stiffness of contact. 
Based on the estimate of the delay in the force sensor loop, we select 
and
such that the stability condition according to Figure 6.2 is satisfied.
The major delay in this case is due to the low-pass force sensor filter with
cutoff frequency 
equal to 7.81 Hz. The filter delay is approximately
given by:
110
110.5
111
111.5
112
112.5
113
113.5
114
114.5
115
−0.14
−0.12
−0.1
−0.08
−0.06
−0.04
−0.02
0
0.02
time (s)
Position error (m)
-.-. An ideal system of mass-spring-dashpot
__ hardware experiment
ke
ke
[
Zn
fc

(6.2.13)
Based on a very conservative estimate of contact stiffness 
, we select 
and 
 as in (6.2.11) and (6.2.12) respectively. Note that in order to have a
conservative estimate of contact stiffness, we select a higher stiffness than
what would be normally expected. This can be justified by studying the sta-
bility criterion given in this section. Equation (6.2.6) shows that 
increases with increasing values of 
 with the risk of violating the stability
conditions given in (6.2.9). In this case, for 
, the stability margin is
determined by:
(6.2.14)
We select 
. Assuming 
 which is a
conservative estimate considering the high values of joint flexibility, we
calculate the desired impedances: 
 and 
.
The first set of hardware experiments were conducted using these imped-
ances.
The test scenario (Figure 6.4) consists of the first three segments of the
surface cleaning strawman task (see Section 6.3.1). In the first segment, the
eraser pad is positioned above the white-board table (all axes under position
control) in 5 seconds. In the second segment, the eraser approaches the sur-
face along the z axis under force control, while keeping the position along
the x and y axes fixed. The desired force along the z axis is 20N. In the last
segment, the eraser is commanded to move along the y axis on the surface
with a desired 20N force. 
Figure 6.5 shows the plot of the interaction forces. The response time of
the system (~10s) is greater than the expected value (2.53s based on
), which shows that the actual stiffness of the contact is
much less than the estimated value. 
Delay
1
fc
----
1
7.81
----------
0.128S
=
=
=
ke
md
bd
Zn
ke
]
1
=
Zn
1
2]Ts
------------
Zn
1
2Delay
-------------------
Zn
3.9





Zn
2.5rad s
e
=
ke
10000N m
e
=
md
1600Kg
=
bd
8000Ns m
e
=
ke
10000N
m----
=
154
6 Experimental Results for Contact Force and Compliant Motion Control

6.2  Preparation and Conduct of the Experiments
155
Figure 6.4 Test scenario for selecting the desired impedance in the force-
controlled direction for the first strawman task
The heuristic approach of selecting the desired impedances is based on
studying the actual response in hardware experiments. As an example, let
us calculate a set of impedances which results in a response time that is
twice as fast (5 seconds) compared to the 10 seconds in Figure 6.5. Assum-
ing a fixed contact stiffness 
, Equation (6.2.6) results in
(6.2.15)
Equation (6.2.15) suggests that in order to reduce 
by a factor of 2, the
desired mass should be reduced by a factor of 4. Equation (6.2.6) also
results in
(6.2.16)
Z
Y
X
1
2
3
ke
Zn1
Zn2
--------
m2
m1
-------
Tn2
Tn1
-------
=
=
Tn
[1
[2
-----
m2
m1
-------
b1
b2
-----

=

which suggests that the desired damping should be reduced by a factor of 2
in order to keep 
 constant. The next experiment was conducted using the
desired inertia and damping calculated by (6.2.15) and (6.2.16) respectively
(
). Figure 6.6 shows that the transient response of
the system is changed. The response time is approximately two times faster
than the previous case in Figure 6.5. 
Note that in both of the above experiments, the steady-state force error
during segment 2 (force exertion without moving on the surface) is very
small. However, the force tracking performance degrades rapidly in seg-
ment 3 when the pad starts to move on the surface. This problem can be
attributed to unmodeled joint flexibility. When the eraser pad exerts a force
without moving on the surface, the sole joint motion is due to the force con-
troller along the z axis which will eventually reach an equilibrium point
when the desired force is achieved. However, when the eraser pad is com-
manded to move on the surface, even though the desired force is achieved
along the z axis, there are joint motions required for the movement on the 
Figure 6.5 Force tracking for the test case shown in Figure 6.4 with 
. 
[
md
400 bd

4000
=
=
0
10
20
30
40
50
60
−30
−25
−20
−15
−10
−5
0
5
~10 s
fz
-18
time (s)
N
md
1600 bd

8000
=
=
156
6 Experimental Results for Contact Force and Compliant Motion Control

6.2  Preparation and Conduct of the Experiments
157
surface. Without the unmodeled dynamics due to joint flexibility, the
motions along the position-controlled directions and the force-controlled
directions are decoupled. Therefore, the horizontal movement on the sur-
face should not affect the force tracking along the z axis. However, any
joint oscillation due to unmodeled joint flexibility acts as a coupling
between the position-controlled directions and the force-controlled direc-
tions which causes performance degradation in force tracking (see Figure
6.5).
Figure 6.6 Force tracking for the test case shown in Figure 6.4 with 
. 
The force controller in (6.2.2) can be seen as a second-order filter (see
Figure 6.7) with a corner frequency of 
. Now, in order for the
force-controller in (6.2.2) to reject these disturbances (the forces due to
joint oscillations), the cutoff frequency of this filter should be selected
much greater than the frequency of the disturbances (in this case oscilla-
tions caused by joint flexibility). In order to increase the cutoff frequency,
one should reduce the desired inertia (
) to as small a value as possible
while maintaining system stability. The values of the desired inertia and
0
10
20
30
40
50
60
−25
−20
−15
−10
−5
0
5
~5s
-18
N
time (s)
md
400 bd

4000
=
=
ke md
e
md
damping were selected experimentally as 
.
md
5.7 bd

477
=
=

6.2.2
Selection of PD Gains
In the modified AHIC scheme (see Figure 5.21), a PD controller was
implemented to ensure that the reference error (error between the target tra-
jectory generated by the AHIC controller and tool frame trajectory) con-
verges to zero. Therefore, in order for the robot to act as closely as possible
to the ideal impedance system specified by (6.2.1) and (6.2.2), the PD gains
need to be selected as high as possible. Different experiments were con-
ducted to find the best values for the PD gains. The maximum values that
do not excite the unmodeled dynamics were obtained experimentally as
.
Figure 6.7 Plot of magnitude versus frequency for the second-order filter in 
Equation (6.2.3).
kp
400 kv

40
=
=
10
−1
10
0
10
1
10
2
10
−5
10
−4
10
−3
10
−2
Frequency (radians)
Magnitude
Zn
ke
md
-------
158
6 Experimental Results for Contact Force and Compliant Motion Control

6.2 Preparation and Conduct of the Experiments
159
6.2.3
Selection of the Force Filter
The force sensor data usually contain a high level of noise which needs
to be filtered out by implementation of a low-pass filter. The selection of
the filter is a trade-off between noise rejection and stability requirements as
the low-pass filter introduces a delay in the sensor loop which can cause
instability. The JR3 force-sensor interface card provides a cascade of low-
pass filters. Each succeeding filter has a cutoff frequency that is 1/4 of that
of the preceding filter. For the JR3 sensor with a sample rate of 8 kHz, the
cutoff frequency of the first filter is 500Hz. The subsequent filters cutoff at
125 Hz, 31.25 Hz, 7.81 Hz and so on. The optimal filter has been selected
experimentally. Figure 6.8 shows the force measurements with different fil-
ters for the test scenario of Figure 6.4. As one may notice, the filter with
7.81 Hz cutoff frequency gives the best tracking (
) with maxi-
mum noise reduction.
6.2.4
Effect of Kinematic Errors (Robustness Issue)
The AHIC scheme may suffer from two major sources of kinematic errors:
x The kinematic parameters of the arm: In the absence of an accurate
kinematic calibration, the forward kinematics based on kinematic
parameters can introduce errors in the calculated Cartesian feedback.
x The robot’s environment: The kinematic description of the robot’s
environment, such as position and orientation of the constraint frame,
introduces kinematic errors when the Cartesian feedback is trans-
formed into the constraint frame.
Different solutions may be envisaged
 Kinematic calibration of the arm.
 Kinematic calibration of the environment.
 Use of a real-time vision system.
4 Mechanical design of the tool attachment.
 Exploitation of the capabilities of the AHIC scheme.
The Cartesian feedback (linear and angular position and rates) is calcu-
lated based on the joint angles and the forward kinematics of the manipula-
tor. Therefore, accurate kinematic calibration can improve the performance.
Kinematic calibration of the environment (robot’s base coordinates and the
fz
d
15N
=

Figure 6.8 Effect of the force filter cutoff frequency;
a) 125 Hz, b) 31.25 Hz, and c) 7.81 Hz
constraint surfaces) will also improve the performance. An alternative to
kinematic calibration is to use a real-time vision system which gives the
appropriate feedback expressed in a desired frame. Mechanical design of
the tool attachment can also play a important role in performance improve-
ment. For instance, using a universal joint in the surface cleaning demon-
stration improves the performance by rejecting interaction torques which
0
10
20
30
40
50
60
−5
0
5
10
15
20
25
0
10
20
30
40
50
60
−5
0
5
10
15
20
25
0
10
20
30
40
50
60
−5
0
5
10
15
20
25
(a)
(c)
fz
fz
fz
time (s)
time (s)
time (s)
(b)
N
N
N
160
6 Experimental Results for Contact Force and Compliant Motion Control

6.2  Preparation and Conduct of the Experiments
161
would otherwise be present due to surface orientation errors (or errors in
arm calibration). The AHIC scheme itself can act as a tool to deal with
kinematic errors at two levels:
x The impedance controller in the position-controlled directions can
gracefully handle any coupling forces (disturbances) due to kinematic
errors.
x The force/torque controller uses only force sensor feedback (the linear
and angular position and rate feedback does not appear in the force/
torque-controlled directions). This force sensor data provides error-
free information about the kinematics of the environment and con-
straint surfaces.
In conducting the strawman tasks, we have relied solely on solutions 4
and 5 (mechanical design of the tool attachment and on exploiting the
AHIC scheme). This emphasizes the performance of the controller and its
robustness with respect to kinematic errors. As an example, the design of
the peg and holes (cone-shaped peg heads and chamfered type opening at
the top of the holes) can accommodate certain position errors due to impre-
cise kinematic parameters of the arm and its environment. Before present-
ing the numerical results of the strawman tasks, let us study the
performance of the AHIC scheme in identifying the correct kinematics of
the environment using force sensor feedback without relying on knowledge
of the kinematics of the arm and its environment. 
In the following experiment, a plexi-glass rectangular plate was rigidly
attached to the last link such that the plate’s normal is parallel to the tool
frame’s x axis. The task consists of two segments: in the first segment the
manipulator is commanded to go in five seconds to a position above the
surface with the tool frame’s x axis perpendicular to the surface
(
); in the second segment, the position along the
x and y axes (see Figure 6.4) is kept constant while the desired force along
the z axis is specified (20 N). All three rotational axes are specified to be
torque-controlled to deal with any misorientation of the surface
(
). Note that the position and orientation of the
task frame (in this case, the surface frame) are provided by the user. Also,
in the following sections, the impedance- or force-controlled directions are
specified by 
 where a 0 entry indicates a
force/torque-controlled direction, and a 1 entry indicates an impedance-
controlled direction.
s
diag 1 1 1 1 1 1
    
>
@
=
s
diag 1 1 0 0 0 0
    
>
@
=
s
diag px py pz rx ry rz





>
@
=

In order to study the robustness of the algorithm, we introduce 
(along each rotational axis) of orientation error on the surface (see Figure
6.9). Figure 6.10 shows that there is considerable torque at the initial stage
of contact with the surface  this is due to the orientation mismatch. This
initial torque reduces very rapidly because the controller tries to regulate
the torques to zero. Hence, the plate detects the correct orientation of the
surface. We can also see the performance of the force controller in regulat-
ing the normal force to the surface to 20N. Note that this experiment is sim-
ilar to that of inserting a peg into a hole when the peg and the hole axes are
not completely aligned. Therefore, the desired mass and damping for the
three rotational axes, 
, can also be used for the sec-
ond strawman task (peg in the hole). 
Figure 6.9 Hardware experiment to illustrate the capability of the AHIC
scheme in identifying the correct kinematics of the environment using a 
force sensor
6.3
Numerical Results for Strawman Tasks
The hardware and software environment used for the experimental
work also allows for visualization of the motion of the arm on an SGI work-
5q
a
md
0.056 bd

48
=
=
ZT
XT
Xc
Constraint Surface 
Force Sensor 
Tool Plate
C
^
`
ZCi
Last Link
5 degrees
{T}
162
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
163
station running the MRS graphical software environment (see Figure 6.11).
The joint angles as well as the force/torque sensor data are transferred in
real time to the SGI workstation
Figure 6.10 Experimental results: Exerting 20N on the surface with a rigid 
plate, with 5 degrees (along each rotational axis) of orientation error on the 
surface.
6.3.1
Strawman Task I (Surface Cleaning)
Figure 6.12 shows a perspective view of the setup used for the hard-
ware demonstration of the strawman task. The five segments of the task are
shown in Figure 6.13. Table 6-1 summarizes the control parameters used
for this task, where “y” denotes information that is not needed. The desired
masses for the position and the force-controlled directions are
 and 
 respectively. The values of the desired
damping in the position and the force-controlled directions are 
0
5
10
15
20
25
30
35
40
45
−5
0
5
10
15
20
25
0
5
10
15
20
25
30
35
40
45
−2
−1
0
1
2
(a) Interaction forces (N)
(b) Interaction torques (Nm)
time (s)
time (s)
Mp
257
=
Mf
5.7
=
Bp
1100
=
and 
; and the desired stiffness in the position-controlled direc-
Bf
477
=

Figure 6.11 Graphical rendering of the surface-cleaning task using MRS
Figure 6.12 Perspective view of the hardware setup used in the 
demonstration of Strawman Task I (surface cleaning)
164
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
165
Figure 6.13 Different segments of Strawman Task I (surface cleaning) 
Table 6-1 Control parameters used for Strawman Task I
Seg
T
(s)
Selection
vector
Desired
Inertia
Desired
damping
Desired
stiffness
Desired
Force/
torques
1
5
1 1 1 1 1 1
Mp Mp Mp
Mp Mp Mp
 Bp Bp Bp
Bp Bp Bp
Kp Kp Kp
Kp Kp Kp
ya y y y y y
a. "y" denotes information that is not needed.
2
25
1 1 0 1 1 1
Mp Mp Mf
Mp Mp Mp
Bp Bp Bf
Bp Bp Bp
Kp Kp y
Kp Kp Kp
y y -20 y y y 
3
50
1 1 0 1 1 1
Mp Mp Mf
Mp Mp Mp
Bp Bp Bf
Bp Bp Bp
Kp Kp y
Kp Kp Kp
y y -20 y y y
4
75
1 1 0 1 1 1
Mp Mp Mf
Mp Mp Mp
Bp Bp Bf
Bp Bp Bp
Kp Kp y
Kp Kp Kp
y y -20 y y y
5
100
1 1 0 1 1 1
Mp Mp Mf
Mp Mp Mp
Bp Bp Bf
Bp Bp Bp
Kp Kp y
Kp Kp Kp
y y -20 y y y
Z
Y
X
1
2
3
4
5

tion is
. The PD gains are selected as 
.
Also note that in this experiment, no joint-friction compensation in the
inverse dynamics module is performed.
As an example, the joint angle, rate and commanded torque for joint 2
(gathered during run-time) are shown in Figure 6.14. Note that the presence
of the noise on the estimate of joint rates (due to numerical differentiation)
has not affected the force and position tracking. This noise is effectively fil-
tered out by the dynamics of the actuators and the current amplifiers. The
results of the interaction forces are given in Figure 6.15. As we can see, the
force tracking in the 5 to 25 seconds segment when there is no motion in the
x and y directions is almost perfect (0.04 N steady-state error). 
It was noted in Section 6.2.1.3 that when the pad moves on the surface,
the force tracking can degrade drastically because of unmodeled flexibility
in the joints. However, by appropriate selection of the controller’s cutoff
frequency in a force-controlled direction (see Figure 6.8), one can achieve
an acceptable level of force tracking. For the segments beyond 25 seconds,
there is a low amplitude (approximately 1 N) oscillation with a frequency
around 1 Hz due to unmodeled joint flexibility. However, the mean value
and standard deviation (
) for the time
interval between 15 to 80 seconds show the capability of the force-control-
ler in regulation of the interaction forces even in the presence of unmodeled
dynamics (joint frictions and flexibilities). 
There is also considerable friction on the surface: approximately 5N in
the y direction and 2N in the x direction. However, the impedance control-
ler is not only stable in these directions, but is also successful in achieving
acceptable tracking with 1 cm steady-state error in the y direction and 0.5
cm in the x direction (see Figure 6.16). These errors can be further reduced
by assigning a larger 
 in the impedance-controlled directions.
6.3.2
Strawman Task II (Peg In The Hole)
Figure 6.17 shows a perspective view of the setup used for the hard-
ware demonstration of the task. The complete task consists of accomplish-
ing the insertion of a peg into, and its removal from, two different holes. In
Section 6.2.4, we described the effects of kinematic errors. It was noted that
kinematic errors can play a vital role in performing tasks such as the peg-in-
Kp
1100
=
kp
400 kv

40
=
=
fmean
19.60N fstd

–
0.6
=
=
kd
166
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
167
Figure 6.14 Strawman Task I: Captured data for joint 2 
the-hole operation. In most cases kinematic errors result in conflicts
between the position and force-controlled directions which can cause oscil-
lations and instability. Different solutions have been suggested. However,
in performing this strawman task, no calibration of the arm kinematics and
10
20
30
40
50
60
70
80
90
100
−65
−60
−55
−50
−45
−40
−35
0
10
20
30
40
50
60
70
80
90
100
−3
−2
−1
0
1
2
3
0
10
20
30
40
50
60
70
80
90
100
−180
−160
−140
−120
−100
−80
−60
−40
−20
0
 joint angle (deg)
 joint rate (deg/s)
 torque command (Nm)

Figure 6.15 Force data captured for Strawman Task I 
Figure 6.16 Position errors for the surface-cleaning hardware 
demonstration
0
10
20
30
40
50
60
70
80
90
100
−35
−30
−25
−20
−15
−10
−5
0
5
fz
fy
fx
N
time (s)
10
20
30
40
50
60
70
80
90
100
−0.015
−0.01
−0.005
0
0.005
0.01
ex
ey
time (s)
m
168
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
169
Figure 6.17 Perspective view of the hardware setup used in demonstration 
of Strawman Task II; a) The REDIESTRO arm, b) MRS simulation
(a)
(B)
((b)

Figure 6.18 Different segments of Strawman Task II
the hole setup was performed. Instead, we have relied on the kinematic
design of the peg and the holes, and also on the capability of the AHIC
scheme to deal with kinematic errors. The dimensions of the peg and the
holes are given in Figure 6.19a. The final tolerance between the peg and the 
Figure 6.19 Strawman Task II: a) Kinematic tolerances, b) Correct 
initiation of the insertion 
X
Y
Z
1
2
 4
5
6
7
Hole 1
Hole 2
X1 Y1 Z1


^
`
X2 Y2 Z1


^
`
{C}
3
  8
13 mm
13.5 mm
23 mm (hole 2) and 
 chamfer
flange
  30mm (hole 1)
Z
X
Y
{T}
(a)
(b)
170
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
171
holes is 0.25 mm. However, the structural designs of the head of the peg
and the top of the holes facilitate the correct initiation of the insertion pro-
cess in the presence of small positioning errors. With this design, only an
accuracy/repeatability of 15mm for hole 1 and 11.5 mm for hole 2 is
required to initialize the insertion (see Figure 6.19b). From this point
onward, the AHIC scheme is responsible for accomplishing the insertion in
the presence of kinematic errors. 
The strawman task consists of 8 segments. Table 6-2 summarizes the
desired position, orientation, and force for the task. The control parameters
are given in Table 6-3. The descriptions of the different segments of the
strawman task are as follows:
Table 6-2 Desired positions, orientations, and forces for Strawman Task II
Seg
T
(s)
Selection
vector
Desired 
Position
(m)
Desired 
Orientation
Desired 
Force(N)
Des. 
Torque
(Nm)
(X,Y,Z)
(Rx,Ry,Rz)
(Fx,Fy,Fz)
(Tx,Ty,Tz)
1
3
1 1 1 1 1 1
(x1
a
,y1,z1)
a. See Figure 6.18
(pi/2,pi/2,0)
(NA,NA,NA)
(NA,NA,NA)
2
10
0 0 1 1 1 1
(NA
b
,NA,z1)
b. NA =Not Applicable
(pi/2,pi/2,0)
(0,0,NA)
(NA,NA,NA)
3
65
0 0 0 0 0 0
(NA,NA,NA)
(NA,NA,NA)
(0,0,-8)
(0,0,0)
4
110
0 0 0 0 0 0
(NA,NA,NA)
(NA,NA,NA)
(0,0,10)
(0,0,0)
5
115
1 1 1 1 1 1
(x2,y2,z1)
(pi/2,pi/2,0)
(NA,NA,NA)
(NA,NA,NA)
6
125
0 0 1 1 1 1
(NA,NA,,z1)
(pi/2,pi/2,0)
(0,0,NA)
(NA,NA,NA)
7
190
0 0 0 0 0 0
(NA,NA,NA)
(NA,NA,NA)
(0,0,-8)
(0,0,0)
8
225
0 0 0 0 0 0
(NA,NA,NA)
(NA,NA,NA)
(0,0,10)
(0,0,0)

Table 6-3 Control parameters used in Strawman Task II
Seg
T
(s)
Selection
vector
Desired
Inertia
Desired
damping
Desired
stiffness
Desired
Force/
torques
1
3
1 1 1 1 1 1
mp
a mp mp
mp mp mp
bp bp bp bp
bp bp
kp kp kp kp
kp kp
yb y y y y y
2
10
0 0 1 1 1 1
mf1 mf1 mp
mp mp mp
bf1 bf1 bp bp
bp bp
y y kp kp kp
kp
0 0 y y y y
3
65
0 0 0 0 0 0
mf1 mf1 mf2
mf3 mf3 mf3
bf1 bf1 bf2 bf3
bf3 bf3
y y y y y y
0 0 -8 0 0 0 
4
110
0 0 0 0 0 0
mf1 mf1 mf2
mf3 mf3 mf3
bf1 bf1 bf2 bf3
bf3 bf3
y y y y y y
0 0 10 0 0 0
5
115
1 1 1 1 1 1
mp1 mp1 mp1
mp1 mp1 mp1
bp1 bp1 bp1
bp1 bp1 bp1
kp kp kp kp
kp kp
y y y y y y
6
125
0 0 1 1 1 1
mf1 mf1 mp
mp mp mp
bf1 bf1 bp bp
bp bp
y y kp kp kp
kp
0 0 y y y y
7
190
0 0 0 0 0 0
mf1 mf1 mf2
mf3 mf3 mf3
bf1 bf1 bf2 bf2
bf3 bf3
y y y y y y
0 0 -8 0 0 0 
8
225
0 0 0 0 0 0
mf1 mf1 mf2
mf3 mf3 mf3
bf1 bf1 bf2 bf3
bf3 bf3
y y y y y y
0 0 10 0 0 0
a. see Table 6-4 for numerical values
b. y = not needed
Table 6-4  Numerical values of the desired impedances (Strawman Task II)
Position-controlled axis
Force-controlled axis
desired 
mass
(kg)
desired 
damping
Nsec/m
desired 
stiffness
N/m
desired mass
(kg)
desired stiffness
N/m
(mp,mp1)
(bp,bp1)
kp
(mf1,mf2,mf3)
(bf1,bf2,bf3)
(257, 112)
(1100, 700)
1100
(22.8, 253, 0.056)
(955, 3180, 48)
172
6 Experimental Results for Contact Force and Compliant Motion Control

6.3 Numerical Results for Strawman Tasks
173
Segment 1: In this segment the tool frame {T} is commanded to go to
position 
, where 
 and 
 are the x and y coordinates of
the center of hole 1 as seen in {C};
 is specified to ensure that the
peg’s head is above the hole’s upper surface. The desired orientation
is specified such that the x axis of {T} is aligned with the axis of hole
1 (see Figure 6.13). Note that because of kinematic errors, the position
and orientation of the tool frame are different from their desired val-
ues. 
Segment 2: It was noted that due to the presence of different sources of
kinematic errors, the position and orientation of the tool frame would
be different from the desired values at the end of segment 1. In seg-
ment 2, the possibility of manually correcting the tool frame position
in the x and y directions is given to the operator. This is only required
if the kinematic errors are such that the insertion cannot be initiated
correctly (see Figure 6.19b). In this case, the operator can drag the peg
to a position from where the insertion can be initialized. This is done
by keeping the orientation and the tool frame’s height (along the z
axis) constant while the x and y axes are under force control with zero
desired force. In the hardware experiment for Strawman Task II, no
manual correction was needed.
Segment 3 (insertion): In this segment all axes are under force/torque
control. In this way the force/torque sensor information is used to
accurately align the axes of the peg and the hole. Only a negative
desired force along the z axis is specified The desired forces/torques
for the other axes are zero. Note that no logic branching is required to
detect the end of the insertion. The motion is stopped upon comple-
tion of the insertion, i.e., on achieving the desired interaction force
between the peg’s flange and the top surface of the hole. 
Segment 4 (removal): This segment is similar to segment 3, with the
difference that the desired force is in the positive z direction to accom-
plish the removal. 
Segment 5: This is the transmission segment to locate the peg on top of
hole 2. Note that in segment 4, the z axis was under force control
attempting to achieve a positive force. Because there is no constraint
on the tool frame that allows the desired force to be achieved, the tool
frame continues to move along the positive z direction with a bounded
terminal velocity according to a time-controlled schedule. By starting
segment 5, all axes come under position control so as to position the
x1 y1 z1


^
`
x1
y1
z1

peg on top of the second hole. As noted in Section 5.2.1 , the task
planner module uses a pre-specified task file to calculate the coeffi-
cients of the desired trajectory for different segments before starting
the task. Therefore, the initial position of the tool frame, i.e., the final
position at the end of segment 4, is not known ahead of time. In this
experiment, we used the desired final position for segment 1 as the
initial position of segment 5. Therefore, there is an initial position
error when segment 5 starts. However, as mentioned in Section
6.2.1.2, this does not cause any difficulties since the impedance con-
troller smoothly “attracts” the tool frame to the desired trajectory (see
dashed-line in Figure 6.18).
Segment 6: Similar to segment 2.
Segment 7: Similar to segment 3. 
Segment 8: Similar to segment 4
Figure 6.20 and Figure 6.21 show the results of the hardware experi-
ment for Strawman Task II. In order to get a better resolution, only the
insertion and removal procedures for hole 1 are shown. The following
phases can be observed in Figure 6.20:
Phase 1 (position correction): When the head of the peg touches the
chamfer at the top of the hole, the interaction forces in the x and y
direction modify the position mismatch (due to kinematic errors) and
guide the head of the peg into the hole. This happens because the x
and y coordinates of the {T} frame are force-controlled. As one can
see, the interaction forces between the head of the peg and the body of
the chamfer are reduced as the center of the peg enters the hole. The
plot of the y coordinate for this phase shows the position modification
(approximately 5mm). 
Phase 2 (orientation correction): As the peg is inserted further into the
hole, there is considerable force/torque build up because of the mis-
alignment of the peg and the hole. This reduces rapidly as the torque
controller for all three rotational axes reacts to modify the alignment
of the peg. The interaction forces and torques become smaller when
correct alignment is achieved. 
Phase 3 (completing the insertion): After the peg’s flange touches the
top surface of the hole, the force controller tries to regulate the force
in the z direction to the desired value (8N). At this point (t = ~50s)
there are minimum interaction torques around all three rotational axes
174
6 Experimental Results for Contact Force and Compliant Motion Control

6.4 Conclusions
175
and forces in the x and y directions. This shows correct positioning
and alignment of the peg. Note that at this stage, no logic (mode)
branching is required. The peg remains inserted until the removal
phase starts.
Phase 4 (removal): In this phase, a positive desired force is specified
which forces the removal process to start.
In order to test the peg-in-the hole operation in the case of a tight fitting
scenario, a layer of aluminum foil was wrapped around the peg which pre-
vented the peg from sliding freely (under its own weight) into the hole.
Strawman Task II was successfully demonstrated for this case as well. The
only parameter that needed to be modified was the desired force in the z
direction which was increased from 8N to 15N. This was necessary to pre-
vent the peg from jamming.
In order to test the robustness of the scheme with respect to the kine-
matic description of the environment, the above scenario was repeated
while introducing
orientation error on the axes of the holes. Straw-
man Task II was successfully demonstrated for this case as well.
6.4 Conclusions
The goal of this chapter was to demonstrate the feasibility and to evalu-
ate the performance of the proposed compliant motion and force control
scheme via hardware demonstrations using REDIESTRO, a seven-dof
experimental robot arm. Two strawman tasks  surface cleaning and peg-
in-the-hole  were selected. The results for the surface cleaning strawman
task indicate that when there is no motion in the x and y directions, the force
tracking is almost perfect (0.04 N steady-state error). When the eraser is
moving on the surface, it was observed that because of unmodeled flexibil-
ity in the joints, the force tracking tends to degrade. However, by appropri-
ate selection of the controller’s cutoff frequency in a force-controlled
direction, we achieved an acceptable level of force tracking. The experi-
ment shows that with 20N desired force, an interaction force with mean
value -19.6N and standard deviation 0.6 is achieved. This demonstrates the
capability of the force-controller in regulating interaction forces even in the
presence of unmodeled dynamics (joint frictions and flexibilities).
Strawman Task II was also successfully demonstrated. Considering the
tolerances used for the design of the peg and the holes (0.25 mm between
the radius of the peg and the hole) and the fact that REDIESTRO has not
been kinematically calibrated, the successful peg-in-the-hole demonstration
5q
a

illustrates the robustness of the proposed scheme with respect to poor
knowledge of the environment.
Figure 6.20 Strawman Task II: Hole 1 insertion/removal; interaction force/
torques
20
30
40
50
60
70
80
90
100
−20
−15
−10
−5
0
5
20
30
40
50
60
70
80
90
100
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
Insertion
Removal
1
2
3
4
phase
fz
  Interaction force (N)
Interaction torque (Nm)
176
6 Experimental Results for Contact Force and Compliant Motion Control

6.4  Conclusions
177
Figure 6.21 Strawman Task II: Hole 1 insertion/removal; position 
information 
20
30
40
50
60
70
80
90
100
0.04
0.05
0.06
0.07
0.08
0.09
0.1
0.11
0.12
0.13
20
30
40
50
60
70
80
90
100
0.408
0.41
0.412
0.414
0.416
0.418
0.42
Insertion
Removal
1
2
3
4
phase
Position of frame {T} in the y direction of {C}
Position of frame {T} in the z direction of {C} 

CHAPTER  7
CONCLUSIONS AND FUTURE WORKK
As indicated in the Chapter 1, the objectives of this monograph were to
present a unified framework for combining compliant motion control,
redundancy resolution, and adaptive control in a single methodology and to
demonstrate the the feasibility of the proposed scheme by computer simula-
tions and experiments on REDIESTRO, a seven-dof experimental redun-
dant manipulator. These objectives were achieved as follows:
The basic issues needed for analysis of kinematically redundant manip-
ulators were presented in Chapter 2. Different redundancy resolution
schemes were reviewed. Based on this review, configuration control at the
acceleration level was found to be the most appropriate approach for force
and compliant motion control of redundant manipulators. A formulation of
the additional tasks to be used for redundancy resolution was presented.
Joint limit avoidance, one of the most useful additional tasks to avoid
mechanical joint limits, and self-collision avoidance, were studied in
greater detail. The basic formulation of static and moving obstacle collision
avoidance tasks in 2D workspace was presented.
The extension of redundancy resolution and obstacle avoidance scheme
to the 3D workspace of REDIESTRO was addressed in Chapter 3. The
obstacle avoidance algorithm was modified to consider 3-D objects. A
novel primitives-based collision avoidance scheme was presented. This
scheme is general and provides realism, efficiency of computation, and
economy in preserving the amount of free space that would otherwise be
wasted. Possible cases of collisions were also considered. In particular,
cylinder-cylinder collision avoidance which represents a complex case for a
collision detection scheme was formalized using the notions of dual
vectors.
Before performing experimental work using REDIESTRO to evaluate
the performance of the redundancy resolution and obstacle avoidance
scheme, extensive simulations were performed using the kinematic model
of REDIESTRO. The simulation results indicate that the least-squares
approach for redundancy resolution is important for practical applications
CHAPTER  7CONCLUDING REMARKS
7
Concluding Remarks
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 179–183, 2005.
© Springer-Verlag Berlin Heidelberg 2005

180
7 Concluding Remarks
in order to cop with kinematic and artificial singularities. The latter may
arise because of conflicts between the main and additional tasks. However,
this introduction of singularity robustness results in tracking errors in
regions away from singularities. It has been shown that by a proper selec-
tion (or time-varying formulation) of 
, the weighting matrix in the sin-
gularity robustness task, the effect of this term on the tracking performance
can be minimized. It was also shown that the formulation of the additional
task as an inequality constraint, may result in considerable discontinuity in
joint velocities which causes a large pulse in joint accelerations. In a practi-
cal implementation, the maximum acceleration of each joint would be lim-
ited, and this commanded joint acceleration would result in saturation of the
actuators. A time-varying formulation of the weighting matrix, 
, was
proposed which successfully overcame this problem.
Three scenarios encompassing most of the developed redundancy reso-
lution and obstacle avoidance system features were successfully demon-
strated on real hardware, i.e. the REDIESTRO manipulator. These
scenarios verified the performance of the redundancy resolution and obsta-
cle avoidance scheme in executing the following tasks: position tracking,
orientation tracking, static and moving obstacle collision avoidance, joint-
limiting, and self-collision avoidance. In each of these scenarios one or
multiple features were active at different instants of execution. 
Despite the geometrical complexity of REDIESTRO, the arm is
entirely modeled by decomposition of the links and the attached actuators
into sub-links modeled by simple volume primitives. Moreover, because of
the complex and unusual shape of REDIESTRO, it is believed that adapting
the algorithms to other industrial and research manipulators can only be
simpler. 
A comparison between different methodologies for force and compliant
motion control indicated that the hybrid impedance control approach is at
present the most suitable scheme for compliant motion and force control.
The outcome of this survey also showed that there exists no unique frame-
work for compliant motion and force control of redundant manipulators
which enjoys the following advantages:
1- Takes full advantage of redundant degrees of freedom
• by incorporating different additional tasks without modifying the
scheme and the control law.
Wv
Wc

7 Concluding Remarks
181
• using the redundant degrees-of-freedom to fulfill dynamic tasks
such as multiple-point force control.
• using task priority and singularity robustness formulation to cop
with kinematic and artificial singularities. 
2- Compatibility for execution of both force and compliant motion
tasks
• ensuring accurate force regulation
• achieving stable motion control in the presence of disturbance
forces
3- Robustness
• with respect to higher-order unmodeled dynamics (i.e., joint
flexibilities), uncertainties in manipulator dynamic parameters,
and friction model and parameters.
• with respect to poor knowledge of the environment and kinematic
errors
4- Adaptive implementation
• allowing for easy incorporation of adaptation in the case of
manipulators for which estimates of the dynamic parameters are
not available.
The Augmented Hybrid Impedance Control (AHIC) scheme presented
in this monograph enjoys the aforementioned desirable characteristics. The
feasibility of the scheme was evaluated by computer simulation on a 3-
DOF planar arm. The most useful additional tasks  joint limit avoidance,
static and moving object avoidance, self collision avoidance, and posture
optimization  were incorporated into the AHIC scheme. The simulation
performed for multiple point contact force control indicated one of the
major characteristics of the AHIC scheme which distinguishes it from simi-
lar schemes. The additional task can not only be position-controlled but can
also be included into the force-controlled subspace. This increases the capa-
bility of the redundancy resolution scheme.
The simulations on the 3-DOF planar arm showed that a simple exten-
sion of the redundancy resolution scheme at the acceleration level using the
solution which minimizes the norm of the joint acceleration vector has the
shortcoming that it cannot control the null-space components of joint veloc-
ities and may result in “internal instability”. A modified AHIC scheme was
presented that addresses this undesirable self motion problem. 

The extension of the AHIC scheme to the 3D workspace of a 7-DOF
manipulator (REDIESTRO) was described in Chapter 5. The complexity of
the scheme required an algorithm development procedure which incorpo-
rates a high level of optimization. At the same time, the following problems
were addressed in extending the modules to a 3-D workspace:
•  An AHIC module for orientation and torque
• Uncontrolled self-motion due to resolving redundancy at the
acceleration level for the AHIC scheme (the solution proposed in
Chapter 4 is computationally expensive). 
• Robustness issues with respect to higher-order unmodeled
dynamics (joint flexibilities), uncertainties in manipulator
dynamic parameters, and friction model and parameters. 
A realistic dynamic simulation environment enables one to study issues
such as performance degradation due to imprecise dynamic modeling and
uncontrolled self-motion. The least-square solutions for redundancy resolu-
tion at the acceleration level were modified by adding a velocity dependent
term to the cost function. This modification successfully controlled the self-
motion of the manipulator.
It was demonstrated by simulation that the force tracking performance
of the methods based solely on inverse dynamics degrade in the presence of
uncertainty in the manipulator’s dynamic parameters and unmodeled
dynamics. This is especially true for a manipulator equipped with harmonic
drive transmissions, which introduce a high level of joint flexibility and
frictional effects (as in the case of REDIESTRO). The AHIC control
scheme was modified by incorporating an “error reference controller”. This
modification successfully copes with model uncertainties in the model-
based part of the controller, and even friction compensation is not required.
The modified AHIC scheme increases the applicability of this type of con-
trol to a large class of industrial and research arms.
Chapter 6 described the experimental work carried out to evaluate the
performance of the AHIC scheme in compliant motion and force control of
REDIESTRO. Considering the complexity and the computation involved in
force and compliant motion control of a 7-DOF redundant manipulator, the
implementation of the real-time controller from both hardware and software
points of view, by itself represents a challenge. It should be noted that there
are few cases to date where experimental results for force and compliant
motion control of a 7-DOF manipulator have been reported. Moreover,
182
7 Concluding Remarks

7 Concluding Remarks
183
tional challenges:
• The REDIESTRO arm is equipped with harmonic drive
transmissions which introduce a high level of joint flexibility and
make accurate control of contact force more difficult.
• The friction model that is most commonly used is that of load
independent Coulomb and viscous friction. This model is
especially inadequate for a robot with harmonic drive
transmissions which have high friction - Experimental results on
REDIESTRO show that in some configurations the friction
corresponds to up to 30% of the applied torque. Also, other
experimental studies have shown that frictional forces in
harmonic drives are very nonlinear and load dependent. 
• Performing tasks such as peg-in-the-hole involves accurate
positioning. This requires a well-calibrated arm. Considering the
fact that REDIESTRO has not been accurately calibrated,
successful execution of the peg-in-the-hole strawman task by
REDIESTRO demonstrates a high level of robustness of the
scheme presented in this monograph. 
Two strawman tasks: Surface cleaning and peg-in-the-hole, were
selected. The selection was based on the ability to evaluate force and posi-
tion tracking and also robustness with respect to knowledge of the environ-
ment and kinematic errors. The results for the surface-cleaning strawman
task indicate that when there is no motion in the x and y directions, the force
tracking is almost perfect (0.04 N steady-state error). When the eraser is
moving on the surface, it was observed that because of unmodeled flexibil-
ity in the joints, the force tracking may degrade drastically. However, by an
appropriate selection of the controller’s cutoff frequency in a force-con-
trolled direction, it is possible to achieve an acceptable level of force track-
ing. The experiment shows that with 20N desired force, the interaction
force with mean value -19.6N and standard deviation 0.6N was achieved.
This demonstrates the capability of the force-controller in regulating inter-
action forces even in the presence of unmodeled dynamics (joint frictions
and flexibilities). 
Strawman task II was also successfully demonstrated. Considering the
tolerances used in the peg and the holes (0.5 mm between the peg and the
hole) and the fact that REDIESTRO has not been accurately calibrated, the
successful peg-in-the-hole demonstration indicates the robustness of the
scheme with respect to poor knowledge of the environment. 
implementation of the AHIC scheme for REDIESTRO introduces addi-

Appendix A: 
Kinematic and Dynamic  Parameters of REDIESTRO
This appendix summarizes the kinematic and dynamic parameters of
REDIESTRO, a seven-dof experimental redundant manipulator. It also pro-
vides the mechanical specification of the actuators and related hardware.
Appendix A
Kinematic and Dynamic Parameters of 
REDIESTRO
Table A-1 D-H parameters of REDIESTRO
i
 (deg)
a(i-1) mm
b(i) mm
q(i)a
a. Isotropic Configuration: q = [q1, -11.01, 91.94, 113.93, -2.26, 
150.25, 63.76]
1
0.
0.
952.29
q(1)
2
-58.31
0.
-22.91
q(2)
3
-20.0289
231.13
36.93
q(3)
4
105.26
0.
0.
q(4)
5
60.91
398.84
-471.59
q(5)
6
59.88
0.
578.21
q(6)
7
-75.47
135.59
-145.05
q(7)
Tool
0
234.44
0
0
Table A-2 Mass (Kg)
Link1
Link2
Link3
Link4
Link5
Link6
Link7 
17.313
5.580
28.586
7.390
5.987
2.557
0.200
Di
1
–
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 185–188, 2005.
© Springer-Verlag Berlin Heidelberg 2005

186
Appendix A: Kinematic and Dynamic Parameters of REDIESTRO
Table A-3 Center of gravity in local frame {i} 
.
Link1
Link2
Link3
Link4
Link5
Link6
Link7
X
0.00048 0.1155
-0.0011
0.3071
0
0.0919 0.06345
Y
-0.1607 -0.0036 -0.1176 -0.0408 -0.1326 -0.0343
0
Z
-0.1186 -0.0389 -0.1539
0.0699
0.1507
-0.0882 -0.0034
Table A-4 Link inertia tensor (Kg m2)a
a. The inertia tensor (in the frame located at the center of gravity 
with the same orientation as the local frame {i}) is defined by:
.
Link1
Link2
Link3
Link4
Link5
Link6
Link7 
Ixx
0.89926 0.02573
1.6620
0.09297
0.8284
0.67522 0.004435
Iyy
0.31342 0.13223
0.7860
0.8881
0.7019
0.69288 0.005547
Izz
0.62745 0.11099
0.9387
0.8753
0.1317
0.03904 0.001136
Ixy
-2.7e-5
-0.0045
0.0001
-0.1203
0.00009 -0.00914
0.0
Iyz
0.3689
0.0012
0.1221
-0.0204
0.26852 -0.04921
0.0
Izx
-1.2e-5
-0.0404
0.0003
0.1411
0.00016 0.13028 -0.00189
ICAi
Ixx
I
– xy
I
– zx
I
– xy
Iyy
I
– yz
I
– zx
I
– yz
I
– zz
=

Appendix A: Kinematic and Dynamic Parameters of REDIESTRO
187
Table A-5 Motor assembly parameters
1
2
3
4
5
6
7
Encoder resolutiona
(pulse/rev.)
a. The encoder resolution is four times greater (4*Encoder resolu-
tion) if the quadrature feature is used
200
360
360
360
1000
1000 1000
Gear ratio
200
260
260
260
160
160
110
Torque constantb(Nm/
A)
b.  Specified at the output shaft
40
55
55
55
32
32
5.76
Maximum input cur-
rent (A)
4.9
8.1
8.1
8.1
3.1
3.1
4.1
Actuator moment of 
inertiac
(Kg m^2)
c.  Specified at the output shaft
10.1
57.4
57.4
57.4
2.43
2.43
0.11
Coulomb friction(N.m)
19.2
47.3
47.3
47.3
10.24 10.24 0.92
Stiction (N.m)
15.36
25.84
25.8
4
25.84
8.2
8.2
0.74
Viscous coefficient
(Nm.s/Rad)
0.14
0.34
0.34
0.34
0.09
0.09
0.02

Table A-6 Motor assembly interface specifications
1
2
3
4
5
6
7
Encoders
Interface card 
resolution (bit)
32
32
32
32
32
32
32
Motors
Current ampli-
fier gain (A/V)
1.2
1.2
1.2
1.2
1.2
1.2
1.2
Current ampli-
fier Max. Cur-
renta (A)
a.  This can be adjusted by changing a resistor in the hardware. For 
the experimental study, it was set to the maximum allowable 
current for each motor.
12
12
12
12
12
12
12
DAC (bits)
12
12
12
12
12
12
12
DAC: Max. 
Output (V)
10
10
10
10
10
10
10
Force 
sensor 
(JR3)
Receiver card 
(bits)
14
14
14
14
14
14
14
Max. Force 
fx, fy = 200N, fz = 400 N; 
mx,my, mz = 12.5 Nm,
188
Appendix A: Kinematic and Dynamic Parameters of REDIESTRO

Chapter  2
Appendix B:  Trajectory Generation (Special Consideration for Orientation)
The desired orientation at the end of each segment is specified by the
user in a pre-programed task file. This orientation is specified in the form of
X-Y-Z Fixed Angles [16]. In this representation, the orientation is specified
by a 3 dimensional vector
 which can be converted to a Direction
Cosine Matrix (DCM) representation as follows:
(B.1)
Let us assume that the initial orientation 
and final orien-
tation 
are specified. Then the equivalent angle-axis represen-
tation is calculated based on the method given in [16]. Having calculated
the initial orientation vector 
 and the final vector
 in the angle-axis form, the fifth-order trajectory generator
can be used to find the desired orientation vector 
. 
It should be noted that the first and second derivatives (
) of
the desired orientation vector are not the angular velocity 
 and accelera-
tion
respectively. The open-loop simulation (see Figure B.1) shows the
robot’s orientation 
. It does not follow the desired orientation
. The desired angular velocity and acceleration can be calculated as
follows:
Appendix B
Trajectory Generation (Special 
Consideration for Orientation)
J E D
 
>
@
RXYZ J E D
 


RZ D
 RY E
 RX J
 
=
RXYZ J E D
 


cDcE cDsEsJ
sDcJ
–
cDsEcJ
sDsJ
+
sDcE sDsEsJ
cDcJ
+
sDsEcJ
cDsJ
–
sE
–
cEsJ
cEcJ
=
Ji Ei Di


>
@
Jf Ef Df


>
@
Kxi KYi KZi


>
@
Kxf KYf KZf


>
@
K t 
K· t  K·· t 

Z
:
KRobot t 
K t 
R.V. Patel and F. Shadpey: Contr. of Redundant Robot Manipulators, LNCIS 316, pp. 189–192, 2005.
© Springer-Verlag Berlin Heidelberg 2005

190
Appendix B: Trajectory Generation (Special Consideration for Orientation)
Figure B.1 Block diagram of the open-loop simulation for orientation TG.
(B.2)
A derivation of the above function is given below. The calculation of the
angle-axis formulation from the DCM representation is as follows:
(B.3)
where 
 and 
.
(B.4)
where 
. This yields
(B.5)
(B.6)
TG
(orientation)
RR
1
s--
Ki
Kf
t
q
q·
K·· t 
K t 
K· t 
KRobot t 
Forward
Kinematics
Z Z·

>
@
f K t  K· t  K·· t 




=
K t 
Kx Ky Kz


>
@T
k t T t 
=
=
T t 
K t 
=
k t 
K t 
T t 
----------
=
R
kx
2XT
cT
+
kxkyXT
kzsT
–
kxkzXT
kysT
+
kxkyXT
kzsT
+
ky
2XT
cT
+
kykzXT kx
–
sT
kxkzXT ky
–
sT
kykzXT
kxsT
+
kz
2XT
cT
+
=
ax nx sx
ay ny sy
az nz sz
=
XT
1
cT
–
=
tr R
 
2cT
1
where
tr R
 
ax
ny
sz
+
+
=
+
=
k
vect R
 
sT
-------------------
where
vect R
 
1
2--
nz
sy
–
sx
az
–
ay
nx
–
=
=

Appendix B: Trajectory Generation (Special Consideration for Orientation)
191
Now, we differentiate with respect to time to get
(B.7)
We need to find
as a linear function of 
. To do this, we note that
(B.8)
and
(B.9)
So that
(B.10)
and
(B.11)
Now (B.6) yields
(B.12)
Differentiating (B.5) with respect to time results in
(B.13)
Substituting (B.11) into (B.13) yields
(B.14)
From equations (B.12) and (B.14), we get
(B.15)
where
(B.16)
Substituting in (B.7) from (B.12) and (B.14) results in
K· t 
k· t T t 
k t T· t 
+
=
k· T·

K Z

t
d
d vect R
 


vect R·
 
=
R· R 1
–
:
0
Zz
–
Zy
Zz
0
Zx
–
Zy
–
Zx
0
=
=
vect R·
 
vect :R


1
2---XZ
=
=
where X
tr R
 I
R
–
=
tr R·
 
Tr :R


2sTkTZ
–
=
=
k·
tr R
 I
R
–

Z
2sT
----------------------------------
cTkT·
sT
------------
–
=
T·
tr R·
 
2sT
–-------------
=
T·
kTZ
=
Z
2sTN 1
– k·
=
N
TM
2sTkkT
and
M
+
tr R
 I
R
–
2cTkkT
–
=
=

(B.17)
where
(B.18)
Differentiating (B.17) yields
(B.19)
(B.20)
Now, we need to find 
(B.21)
where
(B.22)
The optimized C code for this function is produced by the symbolic optimi-
zation routine provided by the RDM software [78].
2sTK·
MZT
2sTkkTZ
+
FZ
=
=
F
MT
2sTkkT
+
=
2cTK·
2sTK··
+
F· Z
FZ·
+
=
Z·
F 1
–
2cTK·
2sTK··
F· Z
–
+


=
F·
F·
M· T
MT·
2cTT· kkT
2sT k·kT
kk·T
+


+
+
+
=
M·
2sTkTZI
–
:R
–
2sTkTZkkT
2cT k·kT
kk·T
+


–
+
=
192
Appendix B: Trajectory Generation (Special Consideration for Orientation)

[1]
R. Anderson, and M.W. Spong, “Hybrid impedance control of
robotic manipulators”, Proc. IEEE Int. Conf. on Robotics and Auto-
mation, pp. 1073-1080, 1987.
[2]
N. Adachi, Z.X. Peng, and S. Nakajima, “Compliant motion control
of redundant manipulators”, IEEE/RSJ Workshop on Intell. Rob.
Sys., pp. 137-141, 1991. 
[3]
J. Angeles, F. Ranjbaran, and R.V. Patel, “On the design of the kine-
matic structure of seven-axes redundant manipulators for maximum
conditioning”, Proc. IEEE International Conf. Robotics and Auto-
mation, pp.494-499, 1992.
[4]
J. Angeles, “The Application of Dual Algebra to Kinematic Analy-
sis”, in Angeles, J. and Zakhariev, E. (editors), Computational
Methods in Mechanical Systems, Springer-Verlag, Heidelberg, vol.
161, pp. 3-31, 1998.
[5]
J. Angeles, Fundamentals of Robotic Mechanical Systems: Theory,
Methods, and Algorithms, 2nd Edition, Springer-Verlag, New York,
2002.
[6]
J. Baillieul, “Avoiding Obstacles and resolving kinematic redun-
dancy”, Proc. IEEE Int. Conf. on Robotics and Automation, pp.
1698-1704, 1986.
[7]
S. Borner, and R. B. Kelley, “A novel representation for planning 3-
D collision free paths”, IEEE Transaction on Syst., Man, and Cyber-
netics, vol. 20, no. 6,  pp. 1337-1351, 1990.
[8]
P. Borrel, “Contribution a la modelisation geometrique des robots
manipulateurs : Application a la conception assistee par l’ordina-
teur”, These d’Etat, USTL, Montpellier, France, July 1986.
References

194
References
[9]
I.J. Bryson, Software Architecture and Associated Design and
Implementation Issues for Multiple-Robot Simulation and Vizualiza-
tion, M.E.Sc. Thesis, University of Western Ontario, London,
Ontario, 2000.
[10]
I.J. Bryson and R.V. Patel, “A modular software architecture for
robotic simulation and visualization”, 31st Int. Symposium on
Robotics (ISR2000), Montreal, Canada, May 14-17, 2000.
[11]
Y. Bu and S. Cameron, “Active motion planning and collision
avoidance for redundant manipulators”, 1997 IEEE Int. Symposium
on Assembly and Task Planning, pp. 13-18, Aug. 1997.
[12]
B.W. Char, et al., Maple V Language Reference Manual, Springer-
Verlag, New York, 1991
[13]
S.L. Chiu, “Task compatibility of manipulator postures”, Int. Jour-
nal of Robotics Research, vol. 7, no. 5, pp 13-21, Oct. 1988.
[14]
R. Colbaugh, H. Seraji, and K. Glass, “Obstacle avoidance of redun-
dant robots using configuration control”, Int. Journal of Robotics
Research, vol. 6, pp. 721-744, 1989.
[15]
Colombina, F. Didot, G. Magnani, and A. Rusconi, “External servic-
ing testbed for automation and robotics”, IEEE Robotics & Automa-
tion Magazine, Mar. 1996, pp. 13-23
[16]
J.J. Craig, Introduction to Robotics: Mechanics and Control, 2nd
Edition, Addison Wesley, 1995.
[17]
D. Dawson and Z. Qu, “Comments on impedance control with adap-
tation for robotic manipulators”, IEEE Trans. on Robotics and Auto-
mation, vol 7, no. 6, Dec. 1991. 
[18]
A. De Luca, “Zero Dynamics in Robotic Systems”, in Nonlinear
Synthesis, C. I. Byrnes and A. Kurzhanski (Eds.), Progress in Sys-
tems and Control Series, Birkhauser, Boston, MA, 1991.
[19]
R.V. Dubey, J.A. Euler, and S.M. Babock, “ An efficient gradient
projection optimization scheme for a seven-degree-of-freedom
redundant robot with spherical wrist”, Proc. IEEE Int. Conf. on
Robotics and Automation, pp. 28-36, Philadelphia, PA, 1988.
[20]
J. Duffy, “The fallacy of modern hybrid control theory that is based
on “orthogonal complements” of twist and wrench spaces”, Journal
of Robotic Systems, vol. 7, no. 2, pp. 139-144, 1990.

References
195
[21]
O. Egeland, “Task-space tracking with redundant manipulators”,
IEEE Journal of Robotics and Automation, vol. 3, pp. 471-475,
1987. 
[22]
Q.J. Ge, “An inverse design algorithm for a G2 interpolating spline
motion”, in Advances in Robot Kinematics and Computational
Geometry, J. Lenarcic and B. Ravani (eds.), Kluwer Academic Pub-
lishers, Norwell, MA, pp. 81-90, 1994
[23]
M.W. Gertz, J. Kim, and P. Khosla, “Exploiting redundancy to
reduce impact force”, IEEE/RSJ Workshop on Intell. Rob. Sys, pp.
179-184, 1991. 
[24]
K. Glass, R. Colbaugh, D. Lim, and H. Seraji, “Real-time Collision
avoidancefor redundant manipulators”, IEEE Transaction on Robot-
ics and Automation, pp. 448-457, vol 11. no. 10, 1995.
[25]
G.H. Golub and C.F. Van Loan, Matrix Computations, 2nd ed., John
Hopkins Univ. Press, Baltimore, 1989.
[26]
M.A. Gonzalez-Palacios, J. Angeles and  F. Ranjbaran, “The kine-
matic synthesis of serial manipulators with a prescribed Jacobian”,
Proc. IEEE Int. Conf.  Robotics  Automat., Atlanta, Georgia, 1993,
vol. 1, pp 450-455.
[27]
Y. Han, L. Liu, R. Lingarkar, N. Sinha, and M. Elbestawi, “Adaptive
Control of Constrained Robotic manipulators”, Int. Journal of
Robotics Research, vol. 7, no. 2, pp. 50-56, 1992.
[28]
T. Hasegawa and H. Terasaki, “Collision avoidance: Divide-and-
conquer approach by space characterization and intermediate
goals”, IEEE  Transaction on Syst., Man, and Cybernetics, vol. 18,
no. 3, pp. 337-347, 1988.
[29]
H. Hattori and K. Ohnishi, “A realization of compliant motion by
decentralized control in redundant manipulators”, Proc. IEEE/
ASME Int. Conf. on Advanced Intelligent Mechatronics, Como,
Italy, pp. 799-803, 2001.
[30]
N. Hogan, “Impedance control: An approach to manipulation”,
ASME Journal of Dynamic Systems, Measurment, and Control, vol.
107, pp. 8-15, 1985.
[31]
J.M. Hollerbach, and K.C. Suh, “Redundancy resolution for manip-
ulators through torque optimization”, Int. Journal of Robotics
Research, vol. 3, pp. 308-316, 1987. 

[32]
P. Hsu, J. Hauser, and S. Sastry, “Dynamic Control of Redundant
Manipulators”, Journal of Robotic Systems, vol. 6, pp. 133-
148,1989.
[33]
D.G. Hunter, “An overview of the Space Station Special Purpose
Dexterous Manipulator”, 
National
Research Council Canada,
NRCC no. 28817, Issue A, 7 April 1988
[34]
H. Kazerooni., T.B. Sheridan, and P.K. Houpt, “Robust compliant
motion for manipulators: Part I: The fundamental concepts of com-
pliant motion”, IEEE Trans. on Robotics and Automation, vol. 2, no.
2, pp. 83-92, 1986. 
[35]
K. Kazerounian and Z. Wang, “Global versus local optimization in
redundancy resolution of robotics manipulators”, Int. Journal of
Robotics Research, vol. 7. no. 5, pp.3-12, 1988.
[36]
P. Khosla and R.V. Volpe, “Superquadric artificial potentials for an
obstacle avoidance approach”, Proc. IEEE Int. Conf. on Robotics
and Automation, pp. 1778-1784, 1988.
[37]
C.A. Klein and C.H. Hung, “Review of pseudoinverse control for
use with kinematically redundant manipulators”, IEEE Trans. on
Systems, Man, and Cybernetics, vol. 13, pp. 245-250, 1983.
[38]
C.A. Klein, “Use of redundancy in design of robotic systems”, Proc.
2nd Int. Symp. Robotic Res., Kyoto, Japan, 1984. 
[39]
Z. Lin, R.V. Patel, and C.A. Balafoutis, “Augmented impedance
control: An approach to impact reduction for kinematically redun-
dant manipulators”, Journal of Robotic Systems, vol. 12, pp. 301-
313, 1995.
[40]
G.J. Liu and A.A. Goldenberg, “Robust hybrid impedance control of
robot manipulators”, Proc. IEEE Int. Conf. on Robotics and Auto-
mation, pp. 287-292, 1991.
[41]
W.S. Lu, and Q.H. Meng, “Impedance control with adaptation for
robotic manipulators”, IEEE Trans. on Robotics and Automation,
vol 7, no. 3, June 1991.
[42]
J.Y.S. Luh, M.W. Walker, and R.P.C. Paul, “Resolved-acceleration
of mechanical manipulators”, IEEE Transaction on Automatic Con-
trol, vol. AC-25, no. 3, pp. 468-474, June 1980.
196
References

References
197
[43]
A.A. Maciejewski and C.A. Klein, “The singular value decomposi-
tion: Computation and application to robotics”, Int. Journal of
Robotics Research, vol. 8, no. 6, Dec. 1989. 
[44]
Matlab External Interface Guide for UNIX Workstation, The Math-
Works Inc., 1992.
[45]
N.H. McClamroch and D. Wang, “Feedback stablization and track-
ing in constrained robots”, IEEE Trans. on Automatic Control, vol.
33, no. 5, pp. 419-426, 1988. 
[46]
J.K. Mills, “Hybrid Control: A constrained motion perspective”,
Journal of Robotic Systems, vol. 8, N0. 2, pp. 135-158, 1991.
[47]
Y. Nakamura and H. Hanafusa, “Inverse kinematic solutions with
singularity robustness for manipulator control”, ASME Journal of
Dynamic Systems, Measurment, and Control, vol. 108, pp.163-171,
1986. 
[48]
Y. Nakamura and H. Hanafusa, “Optimal redundancy control of
robot manipulators”, Int. Journal of Robotics Research, vol. 6, no.
1, pp. 32-42, 1987. 
[49]
K.S. Narendra and A.M. Annaswamy, Stable Adaptive Systems,
Prentice Hall, Englewood cliffs, NJ, 1989.
[50]
B. Nemec and L. Zlajpah, “Force control of redundant robots in
unstructured environments”, IEEE Trans. on Industrial Electronics,
vol. 49, no. 1, pp. 233-240, 2002.
[51]
W.S. Newman and M.E. Dohring, “Augmented impedance control:
An approach to compliant control of kinematically redundant
manipulators”, Proc. IEEE International Conf. Robotics and Auto-
mation, pp. 30-35, 1991.
[52]
G. Niemeyer and J.J. Slotine, “Performance in adaptive manipulator
control”, Int. Journal of Robotics Research, vol. 10, no. 2, April
1991. 
[53]
Y. Oh, W.K. Chung, Y. Youm, and I.H. Suh, “Motion/force decom-
position of redundant manipulators and its application to hybrid
impedance control”, Proc. IEEE Int. Conf. on Robotics and Automa-
tion, Leuven, Belgium, pp. 1441-1446, 1998.
[54]
R. Ortega and M. Spong, “Adaptive motion control of rigid robots:
A tutorial.” In Proc. IEEE conf. on Decision and Control., Austin,
Texas, 1988.

[55]
R.P.C. Paul, Robot Manipulators, MIT Press, Cambridge, MA, pp.
28-35, 1981.
[56]
M. Raibert and J.J. Craig, “Hybrid position-force control of manipu-
lators”, ASME Journal of Dynamic Systems, Measurment, and Con-
trol, vol. 102, pp. 126-133, 1981.
[57]
F. Ranjbaran, J. Angeles, M.A. Gonzalez-Palacios, and R.V. Patel ,
“The mechanical design of a seven-axes manipulator with kinematic
isotropy”, Journal of Robotics and Intelligent Systems, vol. 13, pp.
1-21, 1995.
[58]
REACT in IRIX 5.3, Technical Report, Silicon Graphics Inc.,  Dec.
1994.
[59]
N . Sadegh, and R. Horowitz, “Stability analysis of an adaptive con-
troller for robotic manipulator”, in Proc. IEEE Int. Conf. Robotics
and Automation.
[60]
K.J. Salisbury, “Active stiffness control of manipulators in Carte-
sian coordinates”, Proc. IEEE Int. Conf. on Robotics and Automa-
tion, pp. 95-100, 1980.
[61]
L. Sciavicco and B. Siciliano, “A solution algorithm to the inverse
kinematic problem of redundant manipulators”, IEEE Journal of
Robotics and Automation, vol. 4, pp. 403-410, 1988.
[62]
L. Sciavicco and B. Siciliano, “An algorithm for reachable work-
space for 2R and 3R planar pair mechanical arms”, Proc. IEEE Int.
Conf. Robotics and Automation, vol. 1, pp 628-629, Philadelphia,
PA,1988. 
[63]
H. Seraji, “Configuration control of redundant manipulators: The-
ory and implementation”, IEEE Transactions on Robotics and Auto-
mation, vol. 5, pp. 472-490, 1989.
[64]
H. Seraji and R. Colbaugh, “Improved Configuration Control for
redundant robots”, Journal of Robotic Systems, vol. 7, no. 6, pp.
897-928, 1990.
[65]
H. Seraji and R. Colbaugh, “Singularity-robustness and task prioriti-
zation in configuration control of redundant robots”, 29th IEEE
Conf. on Decision and Control, pp. 3089-3095,1990.
[66]
H. Seraji, “Task options for redundancy resolution using configura-
tion control”, 30th IEEE Conf. on Decision and Control, pp. 2793-
2798, 1991.
198
References

References
199
[67]
H. Seraji, D. Lim, and R. Steele, “Experiments in contact control”,
Journal of Robotic Systems, vol. 13, no. 2, pp. 53 - 73, 1996. 
[68]
H. Seraji, R. Steele, and R. Ivlev, “Sensor-based collision avoid-
ance: Theory and experiments”, Journal of Robotic Systems, vol.
13, no. 9, pp. 571-586, 1996.
[69]
H. Seraji and R. Steele, “Nonlinear contact control for space station
dexterous arms”, Proc. IEEE Int. Conf. on Robotics and Automa-
tion, Leuven, Belgium, pp. 899-906, 1998.
[70]
H. Seraji and B. Bon, “Real-time collision avoidance for position-
controlled manipulators”, IEEE Trans. on Robot. and Automat., vol.
15, no. 4, pp. 670-677, 1999.
[71]
F. Shadpey, C. Tessier, R.V. Patel, and A. Robins, “A trajectory
planning and obstacle avoidance system for kinematically redun-
dant manipulators”,  CASI Conference on Astronautics, Ottawa,
Nov. 1994. 
[72]
F. Shadpey, R.V. Patel, C. Balafoutis, and C. Tessier, “ Compliant
Motion Control and Redundancy Resolution for Kinematically
Redundant Manipulators”, American Control Conference, Seattle,
WA, June 1995.
[73]
F. Shadpey and R.V. Patel, “Compliant motion control with self-
motion Stabilization for kinematically redundant manipulators”,
Third IASTED Int. Conf. on Robotics and Manufacturing, Cancun,
Mexico, June 1995. 
[74]
 F. Shadpey and R.V. Patel, “Adaptive Compliant Motion Control of
Kinematically Redundant Manipulators”, IEEE Conf. on Decision
and Control, Dec. 1995. 
[75]
F. Shadpey, C. Tessier, R.V. Patel, B. Langlois, and A. Robins, “A
trajectory planning and  object avoidance system for kinematically
redundant manipulators: An experimental evaluation”, AAS/AIAA
American Astrodynamics Conference, Aug. 1995, Halifax, Canada. 
[76]
F. Shadpey, F. Ranjbaran, R.V. Patel, and J. Angeles, “A compact
cylinder-cylinder collision avoidance scheme for redundant manipu-
lators”, Sixth Int. Symp. on Robotics and Manufacturing (ISRAM),
Montpellier, France, May, 1996.

[77]
F. Shadpey, M. Noorhosseini, I. Bryson, and R.V. Patel, “An inte-
grated robotic development environment for  task planning and
obstacle Avoidance”, 
Third  ASME Conf. on Eng. System Design
& Analysis, Montpellier, France, July 1996.
[78]
F. Shadpey and R.V. Patel, “Robot Dynamic Modelling (RDM)
Software: User’s Guide”, Concordia University, Montreal, Canada,
Feb. 1997.
[79]
K. Shoemake, “Animating rotation with quaternion curves”, ACM
Siggraph, vol. 19, no. 3, pp. 245-254, 1985.
[80]
P.R. Sinha and A.A. Goldenberg, “A unified theory for hybrid con-
trol of manipulators”, Proc. IFAC 12th World Congress, Sydney,
Australia,1993.
[81]
J.J. Slotine and W. Li, “On the Adaptive Control of Robot Manipu-
lators”, Int. Journal of Robotics Research, vol. 6, no. 3, pp. 49-59,
1987.
[82]
J.J. Slotine, and W. Li, Applied Nonlinear Control, Prentice Hall,
Englewood cliffs, NJ, 1991.
[83]
D.B. Stewart, R.A. Volpe, and P.K. Khosla, “Integration of Real-
Time Software Module for Reconfigurable Sensor-Based Control
Systems”, Proc.  IEEE/RSJ International  Conference on Intelligent
Robots and Systems (IROS ‘92), Raleigh, North Carolina, pp. 325-
332, 1992.
[84]
K.C. Suh and J.M. Hollerbach, “Local versus global torque optimi-
zation of redundant manipulators”, Proc. IEEE Int. Conf. on Robot-
ics and Automation, pp. 619-624, 1987.
[85]
M. Tandirci, J. Angeles, and F. Ranjbaran, “The characteristic point
and characteristic length of robotic manipulators”, 22nd ASME
Biennial Mechanics Conference, Sep. 13-16, Scottsdale, AZ, vol.
45, pp. 203-208, 1992.
[86]
C.-P. Teng and J. Angeles, “A sequential-quadratic programming
algorithm using orthogonal decomposition with Gerschgorin stabili-
zation”, ASME J. Mechanical Design, vol. 123, Dec. 2001, pp. 501-
509.
[87]
C. Tessier et al., Trajectory Planning and Object Avoidance (STEAR
5) - Phase II, Final Report, vol. 1, DSS Canada, Contract no. 9F006-
2-0107/01-SW , 1995.
200
References

References
201
[88]
T.D. Tuttle and W.P Seering, “A nonlinear model of a harmonic
drive gear transmission”, IEEE Trans. Rob. and Aut., vol. 12, no., 3,
June 1996.
[89]
R.S. Varga, Matrix Iterative Analysis, Springer-Verlag, New York,
2000.
[90]
G.R., Veldkamp, “On the use of dual numbers, vectors and matrices
in instantaneous, spatial kinematics”, Mechanism and Machine The-
ory, vol. 11, pp. 141-156, 1976.
[91]
I.D. Walker, “The use of kinematic redundancy in reducing impact
and contact effects in manipulation”, Proc. IEEE International
Conf. Robotics and Automation, pp. 434-439, 1990.
[92]
C.W. Wampler, “Manipulator inverse kinematic solution based on
vector formulation and damped least-squares methods”, IEEE
Trans. on Systems, Man, and Cybernetics, vol. 16, no. 1. pp. 93-101,
1986.
[93]
D.S. Watkins, Fundamentals of Matrix Computations, 2nd Edition,
John Wiley & Sons, New York, 2002.
[94]
D.E. Whitney, “Historical perspective and state of the art in robot
force control”, Int. Journal of Robotics Research, vol. 6, no. 1, Dec.
1987.
[95]
A.T. Yang and F. Freudenstein  “Application of  dual-number
quaternion algebra to the analysis of spatial mechanisms”, Trans.
ASME  J. Appl. Mech., pp. 300-308, 1964.
[96]
T. Yoshikawa, “Dynamic hybrid position/force control of robot
manipulators”, IEEE Journal of Robotics and Automation, vol. 3,
no. 5, pp. 386-392, 1987.
[97]
T. Yoshikawa, “Analysis and control of robot manipulators with
redundancy”, Rob. Res., 1st Int. Symp., MIT Press, pp. 735-747,
1984.

AAHIC 108
accessible volume 21
ACTA 92, 102
Adaptive Augmented Hybrid 
Impedance Control. See AAHIC
additional task
force controlled 100
additional tasks 7
analytic expressions 20
impact force 7
inertia control 7
joint limiting 7
obstacle avoidance 7
posture control 7
posture optimization 31
AHIC 3, 31, 80
3-DOF planar arm 94
adaptive 108
computed torque algorithm 92
inner-loop design 94, 104
outer-loop design 92, 102
robustness 113
self-motion 91
self-motion control 119
self-motion stabilization 102
simulation study 130
singularity robustness 
formulation 90
task priority formulation 90
augmented Cartesian target 
acceleration 92
Augmented Cartesian Target
Acceleration. See ACTA
Augmented Cartesian Target 
trajectory 102
Augmented Hybrid Impedance
Control. See AHIC
Canadarm-2 1, 7
Cartesian Target Acceleration. See
CTA
CFC. See contact force control
characteristic length 60
collision avoidance 4
moving spherical object 71
primitive-based 37
self-motion stabilization 107
stationary and moving obstacles 
28, 61, 62
stationary spherical objects 71
collision detection 35
cylinder-cylinder 38
cylinder-sphere 49
sphere-sphere 50
compliant control
adaptive/robust 2
compliant motion control 2, 89
Configuration Control 15
configuration control
acceleration level 91
constrained dynamics 81
constrained motion approach 81
constrained optimization problem 
17
Index

contact force control 2
control
augmented hybrid impedance
80
compliant motion 85
force 79
force and compliant motion 80
hybrid impedance 2, 80
hybrid position-force 2, 79
impedance 2, 79, 86
position 1
robust HIC 2, 80
stiffness 2
critical direction 38
critical distance 28, 38, 49, 50
critical distances 35
critical point 38
CTA 93
damped least-squares 13, 14, 112
degree of redundanc 9
degree of redundancy 8
Dextre 1
dimensional inhomogeneity 60
dual angle 40
dual numbers 39
dual vectors 39
dynamics
operational-space 87
force-controlled subspace 92
geometric primitives 35
Gerschgorin Theorem 61
hybrid control law 83
inequality constraints 16
inertia matrix
Cartesian 87
internal joint motion 9
isotropic manipulator 36
Jacobian 8
augmented 12
extended 12
null space 8, 11
pseudo inverse 10
JLA 20, 61, 62
joint limit avoidance 20, 62, 95
Joint Limit Avoidance. See JLA
Joint Target Acceleration. See JTA
JTA 93
kinematic optimization 17
Lagrange multipliers 17, 81
line geometry 39
manipulability ellipsoid 31
MOCA 61
motion
constrained 79
unconstrained 79
MRS 70, 131, 163
multiple-point force control 90
obstacle avoidance 35
On-Orbit Replaceable Unit 5
ORU 5
position-controlled subspace 92
projected angle 40
proximity sensing 35
reachable workspace 21
reciprocal subspaces 94
REDIESTRO 3, 36, 51
inertia tensor 186
isotropic design 60
kinematics 52
modeling using primitives 62
204
Index

Index
205
Redundancy Resolution 9
redundancy resolution 2, 9, 35
acceleration level 18, 102
additional tasks 61
approximate solution 13
Configuration Control 14
exact solution 10
extended Jacobian approach 12
global approaches 9
inequality constraints 23
instability 43
kinematic instability 132
optimization constraint 24
pseudo-inverse approach 11
task compatibility 31
velocity level 9
redundant manipulators 1
SCA. See self collision avoidance
screws 94
selection matrix 84, 88
self collision avoidance 61
self-collision avoidance 35, 70
Sensor Skin 35
singular value decomposition 10
singularity 58
singularity robustness 58, 60
SOCA 61
SOI 36
SPDM 1, 2, 7
SSRMS 1
static and moving obstacle 
avoidance 95
subspaces
position and force controlled 88
Surface of Influence 36
task compatibility 96
task compatibility index 32, 96
tool orientation control 113
tracking
orientation 54, 69, 70
position 53, 69, 70
twist 8

Lecture Notes in Control and Information Sciences
Edited by M. Thoma and M. Morari
Further volumes of this series can be found on our homepage:
springeronline.com
Vol. 315: Herbordt, W.
Sound Capture for Human/Machine Interfaces:
Practical Aspects of Microphone Array Signal Processing
286 p. 2005 [3-540-23954-5]
Vol. 314: Gil', M.I.
Explicit Stability Conditions for Continuous Systems
193 p. 2005 [3-540-23984-7]
Vol. 313: Li, Z.; Soh, Y.; Wen, C.
Switched and Impulsive Systems
277 p. 2005 [3-540-23952-9]
Vol. 312: Henrion, D.; Garulli, A. (Eds.)
Positive Polynomials in Control
313 p. 2005 [3-540-23948-0]
Vol. 311: Lamnabhi-Lagarrigue, F.; Lora, A.;
Panteley, V. (Eds.)
Advanced Topics in Control Systems Theory
294 p. 2005 [1-85233-923-3]
Vol. 310: Janczak, A.
Identiˇcation of Nonlinear Systems Using Neural
Networks and Polynomial Models
197 p. 2005 [3-540-23185-4]
Vol. 309: Kumar, V.; Leonard, N.; Morse, A.S. (Eds.)
Cooperative Control
301 p. 2005 [3-540-22861-6]
Vol. 308: Tarbouriech, S.; Abdallah, C.T.; Chiasson, J. (Eds.)
Advances in Communication Control Networks
358 p. 2005 [3-540-22819-5]
Vol. 307: Kwon, S.J.; Chung, W.K.
Perturbation Compensator based Robust Tracking
Control and State Estimation of Mechanical Systems
158 p. 2004 [3-540-22077-1]
Vol. 306: Bien, Z.Z.; Stefanov, D. (Eds.)
Advances in Rehabilitation
472 p. 2004 [3-540-21986-2]
Vol. 305: Nebylov, A.
Ensuring Control Accuracy
256 p. 2004 [3-540-21876-9]
Vol. 304: Margaris, N.I.
Theory of the Non-linear Analog Phase Locked Loop
303 p. 2004 [3-540-21339-2]
Vol. 303: Mahmoud, M.S.
Resilient Control of Uncertain Dynamical Systems
278 p. 2004 [3-540-21351-1]
Vol. 302: Filatov, N.M.; Unbehauen, H.
Adaptive Dual Control: Theory and Applications
237 p. 2004 [3-540-21373-2]
Vol. 301: de Queiroz, M.; Malisoff, M.; Wolenski, P. (Eds.)
Optimal Control, Stabilization and Nonsmooth Analysis
373 p. 2004 [3-540-21330-9]
Vol. 300: Nakamura, M.; Goto, S.; Kyura, N.; Zhang, T.
Mechatronic Servo System Control
Problems in Industries and their Theoretical Solutions
212 p. 2004 [3-540-21096-2]
Vol. 299: Tarn, T.-J.; Chen, S.-B.; Zhou, C. (Eds.)
Robotic Welding, Intelligence and Automation
214 p. 2004 [3-540-20804-6]
Vol. 298: Choi, Y.; Chung, W.K.
PID Trajectory Tracking Control for Mechanical Systems
127 p. 2004 [3-540-20567-5]
Vol. 297: Damm, T.
Rational Matrix Equations in Stochastic Control
219 p. 2004 [3-540-20516-0]
Vol. 296: Matsuo, T.; Hasegawa, Y.
Realization Theory of Discrete-Time Dynamical Systems
235 p. 2003 [3-540-40675-1]
Vol. 295: Kang, W.; Xiao, M.; Borges, C. (Eds)
New Trends in Nonlinear Dynamics and Control,
and their Applications
365 p. 2003 [3-540-10474-0]
Vol. 294: Benvenuti, L.; De Santis, A.; Farina, L. (Eds)
Positive Systems: Theory and Applications (POSTA 2003)
414 p. 2003 [3-540-40342-6]
Vol. 293: Chen, G. and Hill, D.J.
Bifurcation Control
320 p. 2003 [3-540-40341-8]
Vol. 292: Chen, G. and Yu, X.
Chaos Control
380 p. 2003 [3-540-40405-8]
Vol. 291: Xu, J.-X. and Tan, Y.
Linear and Nonlinear Iterative Learning Control
189 p. 2003 [3-540-40173-3]
Vol. 290: Borrelli, F.
Constrained Optimal Control
of Linear and Hybrid Systems
237 p. 2003 [3-540-00257-X]
Vol. 289: Giarre, L. and Bamieh, B.
Multidisciplinary Research in Control
237 p. 2003 [3-540-00917-5]

Vol. 288: Taware, A. and Tao, G.
Control of Sandwich Nonlinear Systems
393 p. 2003 [3-540-44115-8]
Vol. 287: Mahmoud, M.M.; Jiang, J.; Zhang, Y.
Active Fault Tolerant Control Systems
239 p. 2003 [3-540-00318-5]
Vol. 286: Rantzer, A. and Byrnes C.I. (Eds)
Directions in Mathematical Systems
Theory and Optimization
399 p. 2003 [3-540-00065-8]
Vol. 285: Wang, Q.-G.
Decoupling Control
373 p. 2003 [3-540-44128-X]
Vol. 284: Johansson, M.
Piecewise Linear Control Systems
216 p. 2003 [3-540-44124-7]
Vol. 283: Fielding, Ch. et al. (Eds)
Advanced Techniques for Clearance of
Flight Control Laws
480 p. 2003 [3-540-44054-2]
Vol. 282: Schroder, J.
Modelling, State Observation and
Diagnosis of Quantised Systems
368 p. 2003 [3-540-44075-5]
Vol. 281: Zinober A.; Owens D. (Eds)
Nonlinear and Adaptive Control
416 p. 2002 [3-540-43240-X]
Vol. 280: Pasik-Duncan, B. (Ed)
Stochastic Theory and Control
564 p. 2002 [3-540-43777-0]
Vol. 279: Engell, S.; Frehse, G.; Schnieder, E. (Eds)
Modelling, Analysis, and Design of Hybrid Systems
516 p. 2002 [3-540-43812-2]
Vol. 278: Chunling D. and Lihua X. (Eds)
H∞Control and Filtering of
Two-dimensional Systems
161 p. 2002 [3-540-43329-5]
Vol. 277: Sasane, A.
Hankel Norm Approximation
for Inˇnite-Dimensional Systems
150 p. 2002 [3-540-43327-9]
Vol. 276: Bubnicki, Z.
Uncertain Logics, Variables and Systems
142 p. 2002 [3-540-43235-3]
Vol. 275: Ishii, H.; Francis, B.A.
Limited Data Rate in Control Systems with Networks
171 p. 2002 [3-540-43237-X]
Vol. 274: Yu, X.; Xu, J.-X. (Eds)
Variable Structure Systems:
Towards the 21st Century
420 p. 2002 [3-540-42965-4]
Vol. 273: Colonius, F.; Grune, L. (Eds)
Dynamics, Bifurcations, and Control
312 p. 2002 [3-540-42560-9]
Vol. 272: Yang, T.
Impulsive Control Theory
363 p. 2001 [3-540-42296-X]
Vol. 271: Rus, D.; Singh, S.
Experimental Robotics VII
585 p. 2001 [3-540-42104-1]
Vol. 270: Nicosia, S. et al.
RAMSETE
294 p. 2001 [3-540-42090-8]
Vol. 269: Niculescu, S.-I.
Delay Effects on Stability
400 p. 2001 [1-85233-291-316]
Vol. 268: Moheimani, S.O.R. (Ed)
Perspectives in Robust Control
390 p. 2001 [1-85233-452-5]
Vol. 267: Bacciotti, A.; Rosier, L.
Liapunov Functions and Stability in Control Theory
224 p. 2001 [1-85233-419-3]
Vol. 266: Stramigioli, S.
Modeling and IPC Control of Interactive Mechanical
Systems { A Coordinate-free Approach
296 p. 2001 [1-85233-395-2]
Vol. 265: Ichikawa, A.; Katayama, H.
Linear Time Varying Systems and Sampled-data Systems
376 p. 2001 [1-85233-439-8]
Vol. 264: Banos, A.; Lamnabhi-Lagarrigue, F.;
Montoya, F.J
Advances in the Control of Nonlinear Systems
344 p. 2001 [1-85233-378-2]
Vol. 263: Galkowski, K.
State-space Realization of Linear 2-D Systems with
Extensions to the General nD (n>2) Case
248 p. 2001 [1-85233-410-X]
Vol. 262: Dixon, W.; Dawson, D.M.; Zergeroglu, E.;
Behal, A.
Nonlinear Control of Wheeled Mobile Robots
216 p. 2001 [1-85233-414-2]
Vol. 261: Talebi, H.A.; Patel, R.V.; Khorasani, K.
Control of Flexible-link Manipulators
Using Neural Networks
168 p. 2001 [1-85233-409-6]
Vol. 260: Kugi, A.
Non-linear Control Based on Physical Models
192 p. 2001 [1-85233-329-4]
Vol. 259: Isidori, A.; Lamnabhi-Lagarrigue, F.;
Respondek, W. (Eds)
Nonlinear Control in the Year 2000 Volume 2
640 p. 2001 [1-85233-364-2]
Vol. 258: Isidori, A.; Lamnabhi-Lagarrigue, F.;
Respondek, W. (Eds)
Nonlinear Control in the Year 2000 Volume 1
616 p. 2001 [1-85233-363-4]
Vol. 257: Moallem, M.; Patel, R.V.; Khorasani, K.
Flexible-link Robot Manipulators
176 p. 2001 [1-85233-333-2]

