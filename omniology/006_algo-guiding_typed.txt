Tim	  Roughgarden	  
Introduc2on	  
Guiding	  
Principles	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Guiding	  Principle	  #1	  
“worst	  –	  case	  analysis”	  :	  our	  running	  2me	  bound	  holds	  
for	  every	  input	  of	  length	  n.	  
-­‐ Par2cularly	  appropriate	  for	  “general-­‐purpose”	  
rou2nes	  
As	  Opposed	  to	  
-­‐ -­‐”average-­‐case”	  analysis	  
-­‐ -­‐benchmarks	  
BONUS	  :	  worst	  case	  usually	  easier	  to	  analyze.	  

Tim	  Roughgarden	  
Guiding	  Principle	  #2	  
Won’t	  pay	  much	  aQen2on	  to	  constant	  factors,	  
lower-­‐order	  terms	  
Jus2ﬁca2ons	  
1.  Way	  easier	  
2.  Constants	  depend	  on	  architecture	  /	  compiler	  /	  
programmer	  anyways	  
3.  Lose	  very	  liQle	  predic2ve	  power	  
	  (as	  we’ll	  see)	  

Tim	  Roughgarden	  
Guiding	  Principle	  #3	  
Asympto2c	  Analysis	  :	  focus	  on	  running	  2me	  for	  large	  
input	  sizes	  n	  
Eg	  :	  
	  
	  	  	  “beQer	  than”	  	  
Jus2ﬁca2on:	  	  Only	  big	  problems	  are	  interes2ng!	  

Tim	  Roughgarden	  
~90	  
Small	  n	  

Tim	  Roughgarden	  

Tim	  Roughgarden	  
What	  Is	  a	  “Fast”	  Algorithm?	  
This	  Course	  :	  adopt	  these	  three	  biases	  as	  guiding	  principles	  
fast	  
algorithm	  
worst-­‐case	  running	  2me	  
grows	  slowly	  with	  input	  size	  
Usually	  :	  want	  as	  close	  to	  linear	  (O(n))	  as	  possible	  

