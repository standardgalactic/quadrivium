Nabil Derbel, Faouzi Derbel and Olfa Kanoun (Eds.)
Systems, Automation & Control
Unauthenticated

Advances in Systems, Signals
and Devices
|
Edited by
Olfa Kanoun, University of Chemnitz, Germany
Volume 5
Unauthenticated

Systems,
Automation &
Control
|
Edited by
Nabil Derbel, Faouzi Derbel and Olfa Kanoun
Unauthenticated

Editors of this Volume
Prof. Dr.-Eng. Nabil Derbel
University of Sfax
Sfax National Engineering School
Control & Energy Management Laboratory
1173 BP, 3038 SFAX, Tunisia
n.derbel@enis.rnu.tn
Prof. Dr.-Ing. Faouzi Derbel
Leipzig University of Applied Sciences
Chair of Smart Diagnostic and Online Monitoring
Wächterstrasse 13
04107 Leipzig, Germany
faouzi.derbel@htwk-leipzig.de
Prof. Dr.-Ing. Olfa Kanoun
Technische Universität Chemnitz
Chair of Measurement and Sensor Technology
Reichenhainer Strasse 70
09126 Chemnitz
olfa.kanoun@etit.tu-chemnitz.de
ISBN 978-3-11-046821-2
e-ISBN (PDF) 978-3-11-047046-8
e-ISBN (EPUB) 978-3-11-046850-2
Set-ISBN 978-3-11-047047-5
ISSN 2365-7493
Library of Congress Cataloging-in-Publication Data
A CIP catalog record for this book has been applied for at the Library of Congress.
Bibliographic information published by the Deutsche Nationalbibliothek
The Deutsche Nationalbibliothek lists this publication in the Deutsche Nationalbibliograﬁe;
detailed bibliographic data are available on the Internet at http://dnb.dnb.de.
© 2018 Walter de Gruyter GmbH, Berlin/Boston
Typesetting: Konvertus, Haarlem
Printing and binding: CPI books GmbH, Leck
♾Printed on acid-free paper
Printed in Germany
www.degruyter.com
Unauthenticated

Preface of the Editors
The ﬁfth volume of the Serie “Advances in Systems, Signals and Devices” (ASSD), is
dedicated to ﬁelds related to “Systems, Automation and Control” (SAC). The scope of
this issue encompasses all aspects of the research, development and applications of
the science and technology in these ﬁelds.
Topics of this issue concerns: system design, system identiﬁcation, biological and
economical models & control, modern control theory, nonlinear observers, control
and application of chaos, adaptive/non-adaptive backstepping control techniques,
advances in linear control theory, system optimization, multivariable control, large
scale and inﬁnite dimension systems, nonlinear control, distributed control, predict-
ive control, geometric control, adaptive control, optimal and stochastic control, robust
control, neural control, fuzzy control, intelligent control systems, diagnostics, fault
tolerant control, robotics and mechatronics, navigation, robotics and human-machine
interaction, hierarchical and man-machine systems, etc.
Authors are encouraged to submit novel contributions which include results of
research or experimental work discussing new developments in the ﬁeld of systems,
automation and control. The journal can be also addressed for editing special issues
for novel developments in speciﬁc ﬁelds. Guest editors are encouraged to make
proposals to the editor in chief of the corresponding main ﬁeld.
The aims of this volume, in its own way, to promote an international scientiﬁc
progress in the ﬁelds of systems, automation and control. It provides at the same time
an opportunity to be informed about interesting results that have been reported during
the international SSD conferences.
The Editors
Nabil Derbel, Faouzi Derbel and Olfa Kanoun
Authenticated

Authenticated

Advances in Systems, Signals and Devices
Series Editor:
Prof. Dr.-Ing. Olfa Kanoun
Technische Universität Chemnitz, Germany.
olfa.kanoun@etit.tu-chemnitz.de
Editors in Chief:
Systems, Automation & Control
Prof. Dr.-Eng. Nabil Derbel
ENIS, University of Sfax, Tunisia
n.derbel@enis.rnu.tn
Power Systems & Smart Energies
Prof. Dr.-Ing. Faouzi Derbel
Leipzig Univ. of Applied Sciences, Germany
faouzi.derbel@htwk-leipzig.de
Communication, Signal Processing & Information Technology
Prof. Dr.-Ing. Faouzi Derbel
Leipzig Univ. of Applied Sciences, Germany
faouzi.derbel@htwk-leipzig.de
Sensors, Circuits & Instrumentation Systems
Prof. Dr.-Ing. Olfa Kanoun
Technische Universität Chemnitz, Germany
olfa.kanoun@etit.tu-chemnitz.de
Authenticated

Editorial Board Members:
Systems, Automation & Control
Dumitru Baleanu, Çankaya University, Ankara, Turkey
Ridha Ben Abdennour, Engineering School of Gabès, Tunisia
Naceur Benhadj, Braïek, ESSTT, Tunis, Tunisia
Mohamed Benrejeb, Engineering School of Tunis, Tunisia
Riccardo Caponetto, Universita’ degli Studi di Catania, Italy
Yang Quan Chen, Utah State University, Logan, USA
Mohamed Chtourou, Engineering School of Sfax, Tunisia
Boutaïeb Dahhou, Univ. Paul Sabatier Toulouse, France
Gérard Favier, Université de Nice, France
Florin G. Filip, Romanian Academy Bucharest Romania
Dorin Isoc, Tech. Univ. of Cluj Napoca, Romania
Pierre Melchior, Université de Bordeaux, France
Faïçal Mnif, Sultan qabous Univ. Muscat, Oman
Ahmet B. Özgüler, Bilkent University, Bilkent, Turkey
Manabu Sano, Hiroshima City Univ. Hiroshima, Japan
Abdul-Wahid Saif, King Fahd University, Saudi Arabia
José A. Tenreiro Machado, Engineering Institute of Porto, Portugal
Alexander Pozniak, Instituto Politecniko, National Mexico
Herbert Werner, Univ. of Technology, Hamburg, German
Ronald R. Yager, Mach. Intelligence Inst. Iona College USA
Blas M. Vinagre, Univ. of Extremadura, Badajos, Spain
LotﬁZadeh, Univ. of California, Berkeley, CA, USA
Power Systems & Smart Energies
Sylvain Allano, Ecole Normale Sup. de Cachan, France
Ibrahim Badran, Philadelphia Univ., Amman, Jordan
Ronnie Belmans, University of Leuven, Belgium
Frdéric Bouillault, University of Paris XI, France
Pascal Brochet, Ecole Centrale de Lille, France
Mohamed Elleuch, Tunis Engineering School, Tunisia
Mohamed B. A. Kamoun, Sfax Engineering School, Tunisia
Mohamed R. Mékidèche, University of Jijel, Algeria
Bernard Multon, Ecole Normale Sup. Cachan, France
Francesco Parasiliti, University of L’Aquila, Italy
Manuel Pérez,Donsión, University of Vigo, Spain
Michel Poloujadoff, University of Paris VI, France
Francesco Profumo, Politecnico di Torino, Italy
Alfred Rufer, Ecole Polytech. Lausanne, Switzerland
Junji Tamura, Kitami Institute of Technology, Japan
Authenticated

Communication, Signal Processing & Information Technology
Til Aach, Achen University, Germany
Kasim Al-Aubidy, Philadelphia Univ., Amman, Jordan
Adel Alimi, Engineering School of Sfax, Tunisia
Najoua Benamara, Engineering School of Sousse, Tunisia
Ridha Bouallegue, Engineering School of Sousse, Tunisia
Dominique Dallet, ENSEIRB, Bordeaux, France
Mohamed Deriche, King Fahd University, Saudi Arabia
Khalifa Djemal, Université d’Evry, Val d’Essonne, France
Daniela Dragomirescu, LAAS, CNRS, Toulouse, France
Khalil Drira, LAAS, CNRS, Toulouse, France
Noureddine Ellouze, Engineering School of Tunis, Tunisia
Faouzi Ghorbel, ENSI, Tunis, Tunisia
Karl Holger, University of Paderborn, Germany
Berthold Lankl, Univ. Bundeswehr, München, Germany
George Moschytz, ETH Zürich, Switzerland
Radu Popescu-Zeletin, Fraunhofer Inst. Fokus, Berlin, Germany
Basel Solimane, ENST, Bretagne, France
Philippe Vanheeghe, Ecole Centrale de Lille France
Sensors, Circuits & Instrumentation Systems
Ali Boukabache, Univ. Paul, Sabatier, Toulouse, France
Georg Brasseur, Graz University of Technology, Austria
Serge Demidenko, Monash University, Selangor, Malaysia
Gerhard Fischerauer, Universität Bayreuth, Germany
Patrick Garda, Univ. Pierre & Marie Curie, Paris, France
P. M. B. Silva Girão, Inst. Superior Técnico, Lisboa, Portugal
Voicu Groza, University of Ottawa, Ottawa, Canada
Volker Hans, University of Essen, Germany
Aimé Lay Ekuakille, Università degli Studi di Lecce, Italy
Mourad Loulou, Engineering School of Sfax, Tunisia
Mohamed Masmoudi, Engineering School of Sfax, Tunisia
Subha Mukhopadhyay, Massey University Turitea, New Zealand
Fernando Puente León, Technical Univ. of München, Germany
Leonard Reindl, Inst. Mikrosystemtec., Freiburg Germany
Pavel Ripka, Tech. Univ. Praha, Czech Republic
Abdulmotaleb El Saddik, SITE, Univ. Ottawa, Ontario, Canada
Gordon Silverman, Manhattan College Riverdale, NY, USA
Rached Tourki, Faculty of Sciences, Monastir, Tunisia
Bernhard Zagar, Johannes Kepler Univ. of Linz, Austria
Authenticated

Authenticated

Advances in Systems, Signals and Devices
Volume 1
N. Derbel (Ed.)
Systems, Automation, and Control, 2016
ISBN 978-3-11-044376-9, e-ISBN 978-3-11-044843-6, e-ISBN (EPUB) 978-3-11-044627-2, Set-ISBN
978-3-11-044844-3
Volume 2
O. Kanoun, F. Derbel, N. Derbel (Eds.)
Sensors, Circuits and Instrumentation Systems, 2016
ISBN 978-3-11-046819-9, e-ISBN 978-3-11-047044-4, e-ISBN (EPUB) 978-3-11-046849-6, Set-ISBN
978-3-11-047045-1
Volume 3
F. Derbel, N. Derbel, O. Kanoun (Eds.)
Power Systems & Smart Energies, 2016
ISBN 978-3-11-044615-9, e-ISBN 978-3-11-044841-2, e-ISBN (EPUB) 978-3-11-044628-9, Set-ISBN
978-3-11-044842-9
Volume 4
F. Derbel, N. Derbel, O. Kanoun (Eds.)
Communication, Signal Processing & Information Technology, 2016
ISBN 978-3-11-044616-6, e-ISBN 978-3-11-044839-9, e-ISBN (EPUB) 978-3-11-043618-1, Set-ISBN
978-3-11-044840-5
Authenticated

Authenticated

Contents
Preface of the Editors | V
S. Ghachem, K. Benothman and M. Benrejeb
Nonlinear Progressive Accommodation of Actuator Fault | 1
M. Bennehar, A. Chemori, F. Pierrot and S. Krut
Control of Redundantly Actuated PKMs for Closed-Shape Trajectories Tracking with
Real-Time Experiments | 17
S. Ben Atia, A. Messaoud and R. Ben Abdennour
Decoupled Multimodel Predictive Control Based on Multi-observer for Discrete-time
Uncertain Nonlinear Systems | 35
M. Allaoui, A. Messaoud and R. Ben Abdennour
Robustness Enhancement of Proportional Q-integral Multiobserver in the Case of
Non-stationary Sinusoidal Unknown Inputs | 55
M. Bdiwi, J. Suchý, M. Jokesch and A. Winkler
Improved Peg-in-Hole (5-Pin Plug) Task: Intended for Charging Electric Vehicles by
Robot System Automatically | 77
L. Sellami, S. Zidi and K. Abderrahim
Active Mode Estimation via Clustering Algorithm for Switched Linear Systems | 89
R. Zaier
Humanoid Locomotion Control and Reﬂex Using Van der Pol and Piecewise Linear
Oscillators | 105
M. Chetoui, R. Malti, M. Aoun, M. Thomassin, M. N. Abdelkrim and
A. Oustaloup
Continuous-Time System Identiﬁcation with Fractional Models from Noisy Input and
Output Data using Fourth-Order Cumulants | 125
M. Z. E.-A. Skhiri and M. Chtourou
Generalization Improvement of Wavelet Neural Networks Using Regularization
Techniques | 145
Unauthenticated

XIV
|
Contents
N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre
Multivariable Adaptive Neural Control Based on Multimodel Emulator for Nonlinear
Square MIMO Systems | 165
H. Huang, C. Gühmann and Y. Yu
Sliding Mode Based Engine Speed Control for an Automated Manual Transmission
During Gear Shifting Process | 183
H. Ait-Abbas, M. Belkheiri and B. Zegnini
Adaptive Output Feedback Control For Highly Uncertain Nonlinear Systems Using
Single Hidden Layer Neural Networks | 203
M. Taktak-Meziou, A. Chemori, J. Ghommam and N. Derbel
RISE Feedback with NN Feedforward Control of a Servo-Positioning System for Track
Following in HDD | 219
I. Maalej, D. Ben Halima Abid, C. Rekik and N. Derbel
Single and Multiple Faults Detection in Nonlinear System Using Fuzzy
Kalman Observer | 241
Unauthenticated

S. Ghachem, K. Benothman and M. Benrejeb
Nonlinear Progressive Accommodation of
Actuator Fault
Abstract: In this paper, a method of actuator fault tolerant control for a class of
nonlinear systems is proposed. It concerns the problem of nonlinear progressive
accommodation to actuator failure. This strategy is based on the optimal nonlinear
controller which obtained by solving the Generalized Hamilton–Jacobi–Bellman
Equation, and its objective is to maintain the system closed loop stability when an
actuator fault appear. Two examples are given to illustrate this approach.
Keywords: Optimal Control, Nonlinear Systems, Nonlinear Progressive Accommoda-
tion, Fault Tolerant Control, Actuator Fault.
1 Introduction
Modern technological systems rely on sophisticated control functions to meet in-
creased performance requirements. For such systems, Fault Tolerant Control (FTC)
needs to be developed. A FTC is a control that can accommodate system component
faults and it is able to maintain stability and acceptable degree of performance
with respect to nominal system operation [1] and accept some graceful performance
degradation [2] not only when the system is fault-free but also when there are
component malfunctions.
FTC can be classiﬁed into passive and active. A Passive FTC (PFTC) can tolerate
a predeﬁned set of faults while accomplishing its mission satisfactory without the
need for control reconﬁguration. Active FTC (AFTC), on the other hand, relies on a
Fault Detection and Identiﬁcation (FDI) process to monitor system performance, and
to detect and isolate faults in the system. Accordingly, the control law is reconﬁgured
on-line [3, 4].
Indeed, in the literature, a conventional strategy to solve a nonlinear reconﬁg-
urable control problem consists in designing a linear approximation of the model
around operating points. Recent papers such as multiple model [5] sliding modes [6]
and internal model control [7] have been presented, and in order to handle nonlinear
systems beyond using a linearized approximation, reconﬁgurable control methods
have been proposed using backstepping [8] and nonlinear regulator [9].
S. Ghachem, K. Benothman and M. Benrejeb: Research Laboratory on Automatic (LARA), University
of Tunis El Manar, Tunis Engineering School, BP 37, Belvedere 1002 Tunis, Tunisia., email: xxx@xxx
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 1–16.
DOI 10.1515/9783110470468-001
Authenticated
5:57 PM

2
|
S. Ghachem et al.
Moreover, few papers concern the delays associated with computation times [10,
11, 12]. The former introduced the concept of progressive accommodation whose the
objective is to minimize the effect of the accommodation delay. To this end, the
reconﬁgurable control design method is based on a linear quadratic approach and
it’s named Linear Progressive Accommodation (LPA).
But, the limitation of this method is presented in our last works [13, 14, 15], when
an analysis of the closed loop system stabilization during the fault occurrence with the
use of the domain of attraction and the linear approximation validity domain, proof
the divergence of the Linear Progressive Accommodation (LPA) when the actuator fault
occurs near the boundary of the validity domain of the linearization. For solving this
problem, tow approaches are presented in the last work [14, 15, 16].
In this paper, the authors propose an approach of fault tolerant control for a
class of affine nonlinear system. This strategy is based on the optimal nonlinear
controller which obtained from an iterative algorithm by solving the Generalized
Hamilton–Jacobi–Bellman Equation (HJBE) with the Successive Galerkin Approxim-
ation (SGA) [17], and its objective to maintain the system closed loop stability when
an actuator fault appear and to minimize the effect of the accommodation delay. This
method is called Nonlinear Progressive Accommodation (NLPA).
The present paper is organized as follows: in section 2, the class of affine nonlinear
systems is introduced and a necessary background is provided on the main idea of
the actuator fault accommodation and optimal regulation problem. Section 3 presents
the proposed approach of nonlinear progressive accommodation. In section 4, sim-
ulation studies have been conducted in two examples to illustrate the proposed
approach.
2 Preliminaries and Motivation
In the present work, affine nonlinear continuous-time dynamic systems are con-
sidered with a state-space representation:
̇x = f(x) + Bu
(1)
y = h(x)
(2)
where x ∈ℜn is the vector of state variables, u ∈ℜm is the control vector and y ∈ℜl is
the output vector. f and h are smooth functions with f(0) = 0. B is a constant matrix of
dimension (n × m). The inﬁnite-time horizon nonlinear regulation problem is deﬁned
with the following quadratic performance index in u:
V(x) = min
u
∞
∫
0
(xTQ(x)x + uTR(x)u)dt
(3)
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
3
in which Q(x) ≥0 and R(x) > 0 for all x. Moreover, it is assumed that Q and R are
sufficiently smooth so that the value function V(x) is continuously differentiable. In
this case, the Hamilton–Jacobi Equation (HJE) is quadratic in ∂V
∂x (x) such that:
∂V
∂x (x)f(x) −1
4
∂V
∂x (x)BR−1BT ∂VT
∂x (x) + xTQx = 0
(4)
and the optimal feedback control can be designed from:
u = −1
2 R−1(x)BT ∂VT
∂x (x)
(5)
In this paper, we consider that one (or several) actuator fault(s) occur at time tf. The
system (1) can be described by:
̇x = f(x) + Bθ(u),
(6)
where:
Bθ(u) = { Bu,
t ∈[0, tf[
βf(u, θ),
t ∈[tf ,∞[
(7)
The function βf(u, θ) and the parameter θ represent the contribution of the faulty
actuator. The complex structure of the system (1) introduces difficulties in solving
the optimal control problem. The calculation of an optimal nonlinear state feedback
for nonlinear systems requires the development of numerical algorithms, because
the optimization problem needs a resolution of the Hamilton–Jacobi equation. As
mentioned in [11], in the FTC problem, one has to consider four time periods in order
to analyze the system behavior under actuator fault:
–
t ∈[0, tf[: nominal system and control un.
–
t ∈[tf , tfdi[: faulty system under the nominal control un and FDI algorithm in
process for fault detection, isolation and estimation.
–
t ∈[tfdi, tftc[: faulty system under the nominal control un and the fault is detected,
isolated and estimated.
–
t ∈[tftc,∞[: faulty system under the accommodated control uf.
These four time periods are presented in Fig. 1.
(B, un)
0
(Bf, un)
(Bf, uf)
tf
tfdi
tN = tftc
Fig. 1. Description of the fault tolerant control strategy.
Authenticated
5:57 PM

4
|
S. Ghachem et al.
In practical applications, even if the diagnosis is perfect that is not realistic, the system
control is inappropriate on the interval [tf , tftc[ since the faulty system is controlled by
un. The progressive accommodation aims at minimizing the interval [tfdi, tftc[.
Therefore, thanks to an online control computation, the authors propose an
improvement of the closed loop behaviour of the fault system in a nonlinear context.
3 Proposed Approach: Nonlinear Progressive
Accommodation (NLPA)
In practice, an actuator fault in a controlled system generates changes in
inputs/outputs signals and in the parameters of the differential system which
describes the dynamics. The design of a passive fault tolerant controller is sufficient
to ensure degraded dynamic performances when the changes in the parameters and
signals are small. When the effects of the fault are signiﬁcant, the global stability of
the system may not be ensured, therefore the stabilization of the dynamic system with
a ﬁxed controller may be impossible.
In this paper, the authors consider an actuator fault occurrence under the
constraint that the faulty actuator can?t be switched-off and replaced. This last
strategy is usually called system reconﬁguration. In this section, the authors focus
their attention on the fault accommodation in a nonlinear context. They ﬁrst refer to a
fault tolerant control designed beforehand when failure is identiﬁed and secondly to
an on-line accommodation scheme.
3.1 Nonlinear Progressive Accommodation
In the nonlinear case, the inﬁnite-time horizon nonlinear optimal control problem
(1), (3), is characterized in terms of Hamilton–Jacobi Equation (4). The difficulty with
ﬁnding the optimal control is that the HJB equation represents a nonlinear partial
differential equation, which is difficult, and often impossible, to solve analytically. The
complexity of the HJE prevents any solution excepted in some very simple systems.
In order to make real-time implementation possible, one has to avoid solving any
partial differential equation. With application to online progressive accommodation
and in order to design a suboptimal control design, an iterative algorithm is proposed:
ui(x) =
{
{
{
u0(x),
i = 0
−1
2 R−1BT ∂VT
i−1
∂x
(x),
i > 0
(8)
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
5
where Vi−1 is the performance index of ui−1 as calculated from the solution of the
Generalized Hamilton–Jacobi–Bellman (GHJB) equation:
∂Vi−1
∂x
(f(x) + Bui−1) + uT
i−1R−1ui−1 + xTQx = 0
(9)
if the u0 is stabilizing control, then ui will be stabilizing for all i ≥0, Vi →V and ui →u
as i →∞.
To solving the Generalized Hamilton–Jacobi–Bellman (GHJB) equation, an altern-
ative is to utilize the Successive Galerkin Approximation (SGA) [17, 18, 19].
3.2 Successive Galerkin Approximation (SGA)
The Successive Galerkin Approximation (SGA) algorithm is based on a simultaneous
approximation in policy space and a Galerkin spectral approximation. The algorithm
approximates the optimal control by a truncated series of a complete set of basis
functions. If the basis functions are formed by taking the tensor product of a complete
set of one-dimensional functions then the number of basis functions required for
an Mth order approximation grows exponentially in the size of the state space. In
addition, the coefficients associated with the basis functions are computed via a
projection operator on a subset of : requiring the computations of multidimensional
integrals. The conditions guaranteeing the convergence of the algorithm are reported
in [17, 20, 21].
The Galerkin series approximation, VN
i , of equation (9), in a series solution in
terms of N elements of a complete set of basis functions {ϕj(x)}∞
1 :
VN
i =
N
∑
j=0
cj
iϕj(x) = ϕT
NCN
i
(10)
where ϕN(x) = (ϕ1(x), . . . , ϕN(x))T and CN
i = (c1
i , . . . , cN
i )T. By substituting VN
i into
equations (8) and (9) we achieve the following result.
The coefficients, CN
i , of the Galerkin approximation of the GHJB equation can be
found by solving the following equations:
a)
if i = 0,
(b2 + b4)CN
0 + (b1 + b5) = 0
(11)
b)
if i ≥0,
(b2 −1
2 b3[CN
i−1 ⊗IN])CN
i + (b1 + 1
4 b3[CN
i−1 ⊗CN
i−1])
(12)
Authenticated
5:57 PM

6
|
S. Ghachem et al.
where,
b1 = ∫
Ω
xTQxΦN(x)dx
(13)
b2 =
n
∑
j=1
∫
Ω
fj(x)ΦN(x) ∂ΦT
N
∂xj
dx
(14)
b3 =
n
∑
j=1
n
∑
k=1
∫
Ω
BjR−1BT
k ( ∂ΦT
N
∂xk
⊗ΦN(x) ∂ΦT
N
∂xj
)dx
(15)
b4 =
n
∑
j=1
∫
Ω
(Bu0)jΦN(x) ∂ΦT
N
∂xj
dx
(16)
b5 = ∫
Ω
uT
0Ru0ΦN(x)dx
(17)
and IN is the N dimensional identity matrix. ⊗is the standard Kronecker product of
two matrices.
4 Illustrative Exemple 1
Consider an affine nonlinear continuous-time dynamic system modeled by:
̇x = ( −x3
1 −x2
x1 + x2
) + ( 0
1 )u
(18)
y = x
(19)
where x ∈ℜ2 is the state vector, u ∈ℜis the control vector and y ∈ℜis the output
vector.
With f(x) = ( −x3
1 −x2
x1 + x2
)
and
B = ( 0
1 ) is a constant matrix.
The following problem is ﬁrst to deﬁne an optimal control un with respect to a
quadratic performance index (3), in nominal conditions given an initial value of the
state x0. Secondly, a fault tolerant control uf must be synthesized given an acceptable
actuator fault.
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
7
4.1 Nonlinear Optimal Control in Nominal Conditions
The quadratic performance index (3), with Q(x) = I2 = (1
0
0
1) and R(x) = 1,
becomes:
V(x) = min
u
∞
∫
0
(xTI2x + uTu)dt
(20)
where x ∈ℜ2 is the vector of state variables, u ∈ℜis the control vector.
The nonlinear nominal optimal control which minimizes the performance index
(20) and satisﬁes Bellman’s Principle is given by:
un(x) = −1
2 BT ∂VT
∂x (x)
(21)
where V(x), the minimal performance index is found by solving for the stabilizing
solution of the Hamilton–Jacobi–Bellman (HJB) equation:
∂V
∂x (x)f(x) −1
4
∂V
∂x (x)BBT ∂VT
∂x (x) + xTI2x = 0
(22)
The nonlinear nominal optimal control is:
un(x) = 3x5
1 −1.3522x3
1 + 3x2
1x2 + 0.4142x1 −2.3522x2
(23)
As an illustration, an initial condition x0 = (0.1 0.1)T is given. Figures 2 and 3
illustrate the output x1(t) and x2(t) with the nonlinear nominal optimal control.
0.1
0
2
4
6
8
10
Time (s)
Output x1(t)
12
14
16
18
20
0.08
0.06
0.04
0.02
–0.02
x1
0
Fig. 2. Output x1(t) with nonlinear nominal optimal control.
Authenticated
5:57 PM

8
|
S. Ghachem et al.
0
2
4
6
8
10
Time (s)
12
14
16
18
20
0.1
0.12
0.08
0.06
0.04
0.02
–0.02
x2
0
x2(t)
Fig. 3. Output x2(t) with nonlinear nominal optimal control.
4.2 Nonlinear Faulty System
An actuator fault occurs at the time tf = 0.2s. According to the deﬁnition (7), the
nonlinear faulty system is described by:
{
̇x = f(x) + Bu,
t ∈[0, tf[
̇x = f(x) + Bf u,
t ∈[tf ,+∞[
(24)
where Bf = 0.4B = (0 0.4)T, then become:
{
{
{
{
{
{
{
{
{
̇x = ( −x3
1 −x2
x1 + x2
) + ( 0
1 )u,
t ∈[0, tf[
̇x = ( −x3
1 −x2
x1 + x2
) + (
0
0.4 )u,
t ∈[tf ,+∞[
(25)
uf is the nonlinear fault tolerant control.
Before ﬁnding uf, the faulty system is under the nonlinear nominal control un
and FDI algorithm in process for fault detection, isolation and estimation. But if the
nonlinear nominal control un can’t stabilize the faulty system, it’s necessary to ﬁnd
the nonlinear fault tolerant control uf in minimum time. Figures 4 and 5 illustrate the
output x1(t) and x2(t) in faulty system with the nonlinear nominal optimal control.
4.3 Nonlinear Fault Tolerant Control (NFTC)
The nonlinear fault tolerant control strategy is presented in Fig. 1.
Let consider the sample computation time te = 0.1s and one supposes that the
time delay for the fault diagnosis tfdi −tf = te is equal to te.
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
9
0.4
0.3
0.2
0.1
–0.1
x1
–0.2
–0.3
–0.4
0
2
4
6
8
10
12
14
16
18
20
Time (s)
0
Output x1(t)
Fig. 4. Output x1(t) in faulty system with nonlinear nominal optimal control.
0.5
0.4
0.3
0.2
x2
0.1
0
–0.1
–0.2
–0.3
–0.40
2
4
6
8
10
12
14
16
18
20
Time (s)
Output x2(t)
Fig. 5. Output x2(t) in faulty system with nonlinear nominal optimal control.
The nonlinear fault tolerant control uf is given by:
uf(x) = −1
2 BT
f
∂VT
f
∂x (x)
(26)
where Vf(x), the minimal performance index is found by solving for the stabilizing
solution of the Hamilton–Jacobi–Bellman (HJB) equation:
∂Vf
∂x (x)f(x) −1
4
∂Vf
∂x (x)Bf BT
f
∂VT
f
∂x (x) + xTI2x = 0
(27)
The nonlinear fault tolerant control is:
uf(x) = 12x5
1 −5.4088x3
1 + 12x2
1x2 + 1.6568x1 −9.4088x2
(28)
Authenticated
5:57 PM

10
|
S. Ghachem et al.
With the same initial condition x0 = (0.1 0.1)T. Figures 6 and 7 illustrate the output
x1(t) and x2(t) with the nonlinear fault tolerant control.
x1
0.1
0.08
0.06
0.04
0.02
–0.02
–0.04
0
1
2
3
4
5
6
7
8
9
10
0
Time (s)
Output x1(t)
Fig. 6. Output x1(t) in faulty system with nonlinear fault tolerant control.
x2
0.14
0.12
0.1
0.08
0.06
0.04
0.02
0
0
1
2
3
4
5
6
7
8
9
10
–0.02
Time (s)
Output x2(t)
Fig. 7. Output x2(t) in faulty system with nonlinear fault tolerant control.
4.4 Nonlinear Progressive Accommodation (NLPA)
In the NLPA problem, one has to consider six time periods in order to analyze the
system behavior under actuator fault:
–
t ∈[0, tf[: nominal system and control un.
–
t ∈[tf , tfdi[: faulty system under the nominal control un and FDI algorithm in
process for fault detection, isolation and estimation.
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
11
–
t ∈[tfdi, t0[: faulty system under the nominal control un and the instant t0
represent the initialization progressive accommodation algorithm.
–
t ∈[t0, t1[: faulty system under the control u0 which represent the initialization
progressive accommodation algorithm (in this example u0 = un).
–
t ∈[ti, ti+1[: faulty system under the control ui which represent the ith iteration
progressive accommodation algorithm.
–
t ∈[tftc,+∞[: faulty system under the control uN which represent the Nth iteration
progressive accommodation algorithm, and un = uf (uf is the accommodated
control).
These six time periods are presented in Fig. 8.
(Bf, un)
(B, un)
0
(Bf, ui)
(Bf, uf)
tf
t0
ti
tfdi
tN = tftc
Fig. 8. Description of progressive accommodation strategy.
With the same initial condition x0 = (0.1 0.1)T. Figures 9 and 10 illustrate the output
x1(t) and x2(t) with the nonlinear fault tolerant control.
x1
0.1
0.08
0.06
0.04
0.02
–0.02
–0.040
1
2
3
4
5
6
7
8
9
10
0
Time (s)
Nonlinear Progressive Accommodation (NLPA)
Nonlinear Fault Tolerant Control (NFTC)
Fig. 9. Output x1(t) in faulty system with nonlinear progressive accommodation.
The plots show the improvement of the nonlinear progressive accommodation method
for the actuator fault best than the method which utilize the nonlinear fault tolerant
control.
Authenticated
5:57 PM

12
|
S. Ghachem et al.
x2
0.14
0.12
0.1
0.08
0.06
0.04
0.02
0
–0.020
1
2
3
4
5
6
7
8
9
10
Time (s)
Nonlinear Progressive Accommodation (NLPA)
Nonlinear Fault Tolerant Control (NFTC)
Fig. 10. Output x2(t) in faulty system with nonlinear progressive accommodationl.
5 Illustrative Exemple 2
Consider an affine nonlinear continuous-time dynamic system:
̇x = x + x2 + 2u
(29)
y = x
(30)
where x ∈ℜis the state vector, u ∈ℜis the control vector and y ∈ℜis the output vector.
With f(x) = x + x2 and B = 2 is a constant matrix.
5.1 Nonlinear Optimal Control in Nominal Conditions
With Q = R = 1, the nonlinear nominal optimal control which minimizes the
performance index (31) and satisﬁes Bellman’s Principle is:
un(x) = −0.5x(x + 1 + √x2 + 2x + 5)
(31)
As an illustration, an initial condition x0 = 0.1 is given. Figure 11 illustrate the output
x(t) with the nonlinear nominal optimal control.
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
13
x
0.1
0.08
0.06
0.04
0.02
0
0
1
2
3
4
5
6
Time (s)
x(t)
Fig. 11. Output x(t) with nonlinear nominal optimal control.
5.2 Nonlinear Faulty System
An actuator fault occurs at the time tf = 0.2s. According to the deﬁnition (7), the
nonlinear faulty system is described by:
{
̇x = x + x2 + 2u,
t ∈[0, tf[
̇x = x + x2 + 0.8u,
t ∈[tf ,+∞[
(32)
where Bf = 0.8.
5.3 Nonlinear Fault Tolerant Control (NFTC)
Let consider the sample computation time te = 0.1s and one supposes that the time
delay for the fault diagnosis (tfdi −tf) is equal to te. The nonlinear fault tolerant control
uf is:
uf(x) = −1.25x(x + 1 + √x2 + 2x + 1.64)
(33)
with the same initial condition x0 = 0.1 is given. Figure 12 illustrate the output x(t)
with the nonlinear fault tolerant control.
5.4 Nonlinear Progressive Accommodation (NLPA)
With the same initial condition x0 = 0.1. Figure 13 illustrate the output x(t) with the
nonlinear progressive accommodation.
Authenticated
5:57 PM

14
|
S. Ghachem et al.
x
0.1
0.09
0.08
0.07
0.06
0.05
0.04
0.03
0.02
0.01
0
0
1
2
3
4
5
6
Time (s)
x(t)
Fig. 12. Output x(t) with nonlinear fault tolerant control.
x
0.1
0.08
0.06
0.04
0.02
00
1
2
3
4
5
6
Time (s)
Nonlinear Progressive Accommodation (NLPA)
Nonlinear Fault Tolerant Control (NFTC)
Fig. 13. Output x(t) with nonlinear progressive accommodation.
The plots show the improvement of the nonlinear progressive accommodation method
for the actuator fault best than the method which utilize the nonlinear fault tolerant
control.
6 Conclusion
This paper emphasizes the importance of improving the system behavior during the
fault accommodation delay. In the case of affine continuous-time dynamic nonlinear
system and thanks to an iterative algorithm taking to account the nonlinearity in
the active fault tolerant control synthesis, the nonlinear progressive accommodation
scheme is proved to be efficient and best than classic method and shows that it
can minimize the large transients which may occur when the faulty system is still
Authenticated
5:57 PM

Nonlinear Progressive Accommodation of Actuator Fault
|
15
controlled by the nominal control law. This strategy is based on the optimal nonlinear
controller which obtained by solving the Generalized Hamilton–Jacobi–Bellman
Equation, and its objective is to maintain the system closed loop stability when an
actuator fault appear. Future research will investigate more algorithms for solving the
Generalized Hamilton–Jacobi–Bellman Equation.
Bibliography
[1]
M. Blanke, M. Kinnaert, J. Lunze, and M. Staroswiecki. Diagnosis and Fault Tolerant Control.
Springer Verlag, Berlin, 2006.
[2]
J. Jiang, and Y. Zhang. Accepting performance degradation in fault tolerant control system
design. IEEE Trans. on Control Systems Technology, 14(2):284–292, 2006.
[3]
J. Chen, and R.J. Patton. Robust model-based fault diagnosis for dynamic systems. Kluwer,
London, 1999.
[4]
H. Rauch. Autonomous control reconﬁgurations. IEEE Control Systems Magazine, 15(6):37–48,
1995.
[5]
D. Theillol, D. Sauter, and J.C. Ponsart. A multiple model based approach for fault tolerant
control nonlinear systems. 5th IFAC symposium on fault detection, supervision and safety for
technical processes,:151–156, Washington, 2003.
[6]
R.A. Hess, and S.R. Wells. Sliding mode control applied to reconﬁgurable ﬂight control design.
J. of Guidance, Control and Dynamics, 26(3):452–462, 2003.
[7]
D. Kim, D. Lee, and K.C. Veluvolu. Accommodation of actuator fault using local diagnosis and
IMC-PID. Int. J. of Control, Automation and Systems, 12(6):1257–1265, 2014.
[8]
X. Zhang, and M.M. Polycarpou. Integrated design of fault diagnosis and accommodation
schemes for a class of nonlinear systems. 44th IEEE Conf. Decision and Control,:1448–1453,
Orlando, 2001.
[9]
G. Bajpai, B.C. Chang, and H.G. Kwatny. Design of fault tolerant systems for actuator failures in
nonlinear systems. IEEE American Control Conf.,:3618–3623, Anchorage, 2002.
[10] M. Staroswiecki, H. Yang, and B. Jiang. Progressive accommodation of parametric faults in
linear quadratic control. Automatica, 43(12):2070–2076, 2007.
[11] M. Staroswiecki. Progressive accommodation of actuator faults in the linear quadratic control
problem. 43th IEEE Conf. Decision and Control,:5234–5241, Bahamas, 2004.
[12] X. Zhang, T. Parisini, and M.M. Polycarpou. Adaptative fault tolerant control of nonlinear
uncertain systems: an information based diagnostic approach. IEEE Trans. on Automatic
Control, 49(8):1259–1274, 2004.
[13] T. Raharijaona, R. Outbib, M. Ouladsine, and S. Ghachem. Comments on Actuator Fault
Accommodation. 7th IFAC Symposium on Fault Detection, Supervision and Safety of Technical
Processes,:1611–1616, Barcelona, 2009.
[14] S. Ghachem, K. Ben Othman, and M. Benrejeb. Nonlinear approach of actuator fault
accommodation. International Journal of Computer Science Issues, 8(4):290–297, 2011.
[15] S. Ghachem, K. Ben Othman, and M. Benrejeb. Actuator Fault Accommodation with Optimal
Control for a Class of Nonlinear Systems. International Review of Automatic Control,
5(2):274–283, 2012.
[16] S. Ghachem, K. Ben Othman, and M. Benrejeb. Nonlinear Progressive Accommodation of
Actuator Fault with Optimal Control. 10th IEE Int. Multi-Conf. on Systems, Signals and Devices,
Hammamet, 2013.
Authenticated
5:57 PM

16
|
S. Ghachem et al.
[17] R. Beard, G. Saridis, and J. Wen. Galerkin approximation of the generalized Hamilton Jacobi
Bellman equation. Automatica, 33(12):2159–2177, 1997.
[18] J. Lawton, R. W. Beard and T. McLain. Successive Galerkin Approximation Of Nonlinear Optimal
Attitude Control. IEEE American Control Conf.,:4373–4377, California, 1999.
[19] J. Lawton, and R. W. Beard. Numerically efficient approximations to the
Hamilton–Jacobi–Bellman equation. IEEE American Control Conf.,:195–199, Philadelphia,
1998.
[20] R. Beard, G. Saridis, and J. Wen. Improving the performance of stabilizing control for nonlinear
systems. Control Systems Magazine,:27–35, 1996.
[21] R. Beard, G. Saridis, and J. Wen. Approximate solutions to the time-invariant
Hamilton–Jacobi–Bellman equation. Journal of Optimization Theory and Applications,
96(3):589–626, 1998.
Biographies
Sahbi Ghachem was born in Tunisia in 1976. He obtained the Engineer
degree in electro-Mechanical engineering from the Engineer National School
of Sfax in 2003. He obtained the Master degree in Automatic and industrial
Maintenance from the Engineer National School of Monastir in 2005. His
research is related to Reliability, Fault Diagnosis and Fault tolerant control
System.
Kamel Benothman was born in Tunisia in 1958. He obtained the Engineer
degree in Mechanical and Energetic engineering from the University of
Valenciennes in 1981. He obtained the PhD degree in Automatic and Signal
Processing from the University of Valenciennes in 1984 and the HDR degree
from the Engineer National School of Tunis in 2008. He is currently a
professor in the Superior Institute of Science and Energy Technologies of
Gafsa. His research is related to Reliability, fuzzy systems and Diagnosis of
complex systems.
Mohamed Benrejeb was born in Tunisia in 1950. He obtained the Engineer
degree from the Central School of Lille in 1973, The Master degree of
Automatic from the Central School of Lille in 1974, the Doctor-Engineer
degree in Automatic from the Central School of Lille in 1976. He obtained the
PhD degree in Physical Sciences from the University of Science and
Technology of Lille in 1980. He is a Professor in the Engineer National School
of Tunis since 1985 and in Central School of Lille since 2003. His research
focuses on the analysis and synthesis of complex continuous and discrete
systems, based on conventional and unconventional approaches, and more
recently on problem solving scheduling of workshops and study event
systems discrete. This work has already led to some ﬁfty publications in
international journals and a book on artiﬁcial neural networks and
applications.
Authenticated
5:57 PM

M. Bennehar, A. Chemori, F. Pierrot and S. Krut
Control of Redundantly Actuated PKMs for
Closed-Shape Trajectories Tracking with
Real-Time Experiments
Abstract: This paper deals with closed-shape geometric reference trajectories genera-
tion and dynamic control of redundantly actuated parallel kinematic manipulators.
Geometric trajectories if generated by means of trigonometric functions may show
inherent discontinuities regarding velocities and/or accelerations which may cause
problems for the drives. In order to overcome this issue and to generate C2 continuous
refernce trajectories, we propose a novel technique consisting of modifying the motion
proﬁle while preserving the overall geometric shape of the trajectory in the operational
space. Regarding the control strategy and to deal with the actuation redundancy, an
extended version of the PD controller with computed feedforward is proposed. The
computed control inputs, before being applied to the actuators, are ﬁrst projected
using a regularization matrix based on the manipulator’s kinematics in order to
remove the antagonistic internal forces. The overall proposed strategy including
the trajectory generator as well as the controller are experimentally validated on
the Dual-V robot, a three-degree-of-freedom redundantly actuated parallel kinematic
manipulator developed in our laboratory.
Keywords: Parallel manipulators, trajectory generation, dynamics, control.
1 Introduction
Parallel Kinematic Manipulators (PKMs) are mostly known for their superior dynamic
performance compared to their serial counterparts [1]. Indeed, in contrast with
serial manipulators in which the actuators are located on the moving links, the
actuators in the case of PKMs are located on the ﬁxed base resulting in a much
lighter moving parts. Consequently, PKMs can achieve extremely high velocities and
accelerations [2]. Furthermore, the closed kinematic chains structure of PKMs yields
more stiffness, better accuracy and a higher load/weight ratio [1]. Nevertheless, PKMs
exhibit some drawbacks that may moderate their expansion in industrial applications.
The abundance of singularities and the relatively small workspace are the most
noteworthy limitations. While the latter is a matter of mechanical design, the former
can be solved through actuation redundancy. For this reason, Redundantly Actuated
M. Bennehar, A. Chemori, F. Pierrot and S. Krut: LIRMM, UMR 5506,CNRS Université de
Montpellier II, 161 rue Ada, 34392 Montpellier cedex 5, France, emails: ahmed.chemori@lirmm.fr,
mbennehar@gmail.com
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 17–34.
DOI 10.1515/9783110470468-002
Authenticated
5:57 PM

18
|
M. Bennehar et al.
PKMs (RA-PKMs) have increasingly attracted the interest of researchers over the last
two decades. Actuation redundancy signiﬁcantly improves the performance of PKMs
by homogenizing the dynamic properties throughout the workspace, allowing the
manipulator to achieve very high accelerations in all conﬁgurations. However, despite
the aforementioned qualities, PKMs potential is not yet completely explored and
is still an open research area. From one hand, mechanical design, identiﬁcation
and optimization can be further investigated to achieve more efficient prototypes for
industrial community. From the other hand, the constraints involved by the closed
kinematic chains and the high nonlinear dynamics give rise to more challenging
problems in terms of trajectory generation and control that earn to be studied.
Thanks to their extremely high dynamic capabilities, PKMs are typically used for
high-speed industrial applications such as pick-and-place in food industry [3] and
the assembly of electronic components [4]. Consequently, the most used solutions
in terms of trajectory generation are based on traditional Point-to-Point (PtP) tra-
jectories. In [5], an online smooth jerk-bounded trajectory generator using ﬁfth order
polynomials was proposed. The jerk boundedness yields an improved path tracking
and a reduced wear on the robot. The problem of time optimality of PtP trajectories
was addressed in [6]. An algorithm to derive the optimal trajectory was proposed
and experimentally implemented on a 2-degree-of-freedom PKM. In [7], a variety of
pick-and-place trajectory planners were evaluated with the aim of reducing vibrations
of an elastic ﬁve-bar mechanism. Though the trend in this research area is towards
PtP and pick-and-place trajectories, the inherent superior qualities of PKMs award
them to be used in more complex modern industrial tasks such as laser cutting [8],
machining [9] or even medical applications [10]. In this case, Geometric Closed Shape
(GCS) trajectories draw more attention than traditional PtP ones [11]. This class of
trajectories however, has not been sufficiently investigated in the literature. Indeed,
in order to be better tracked by the robot’s end effector (a traveling plate in the case of
PKMs), the generated trajectories have to satisfy continuity constraint and respect the
dynamic capabilities of the manipulator.
In order to track the reference trajectories with the best tracking performance,
an efficient control scheme should take into account the nonlinear dynamics of the
robot manipulator. Even if PKMs have different kinematics than serial manipulators,
they actually share many dynamic similarities. Consequently, most of the developed
control schemes for serial manipulators have been straightforwardly implemented on
fully actuated PKMs [12–14]. However, in the case of RA-PKMs, a particular property
characterizing this class of manipulators needs a special attention. Indeed, the
non-uniqueness of the inverse dynamics solution yields antagonistic control forces
that have no effect on the motion of the mechanical structure [15]. These control forces
produce undesired internal pre-stress in the kinematic chains which may damage
the manipulator, cause a loss of energy and generate mechanical vibrations. Con-
sequently, a good control scheme should take into consideration such a phenomenon.
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
19
In this work, we address the two aforementioned issues namely, the continuous
GCS trajectories generation and the internal forces free control of RA-PKMs. We pro-
pose herein a trajectory generator that takes into consideration continuity constraints
in velocities and accelerations, both in task and joint spaces. Regarding the control
solution, a joint space PD controller with computed feedforward [16] is proposed.
This control scheme has the advantage of being low computationally efficient while
compensating for some of the nonlinearities in the dynamics. In order to deal with
the internal forces issue, the proposed controller is enhanced by a projection of
the generated control torques with the seek of regularization. The proposed control
scheme is then validated through real-time experiments on a 3-dof RA-PKM named
Dual-V.
The rest of the paper is organized as follows. In section 2, the dynamic model
of the Dual-V robot is presented. Section 3 is devoted to the proposed trajectory
generator. The proposed control solution is detailed in Section 4. Experimental results
are presented in Section 5. Finally, conclusions and perspectives are addressed in
Section 6.
2 Description and Dynamic Modeling of the
Dual-V Manipulator
Dual-V robot is a 3-dof planar RA-PKM belonging to the 4-RRR family. The arrangement
of its four closed kinematic chains allows three independent movements for its
traveling plate: two translations throughout the plane and one rotation about the
z-axis. Hence, the Cartesian coordinates of the traveling plate can be described by the
vector X = [x, y, θ]T ∈ℝ3. Regarding the dynamic modeling of the robot, the approach
developed in [2] has been extended to take into account the rotational inertia of the
forearms.
The input torque vector required to move the robot’s mechanical structure Γ ∈ℝ4
is decomposed into three main sub-torques namely: 𝛾1, 𝛾2, 𝛾3 ∈ℝ4. Each sub-torque
is responsible for moving speciﬁc parts of the mechanical structure of the robot as
follows: the torque 𝛾1 is the required torque to move the traveling plate and a part of
the couplers, it can be calculated using the equations of power of the actuators, it is
given by:
𝛾1 = JT∗
m MI ̈X
(1)
where MI ∈ℝ3×3 is the mass matrix of the traveling plate and a part of the cranks being
expressed in Cartesian space, JT
m
∗(q) ∈ℝ4×3 is the pseudo-inverse of the transpose
of the inverse Jacobian matrix Jm and
̈X ∈ℝ3 is the Cartesian acceleration vector of
the traveling plate. The sub-torque 𝛾2 is the required torque to move the cranks, the
Authenticated
5:57 PM

20
|
M. Bennehar et al.
counter-masses and the remaining part of the couplers, it can be expressed as:
𝛾2 = MII ̈q = MII( ̇Jm ̇X + Jm ̈X)
(2)
where MII ∈ℝ4×4 is the mass matrix including the dynamic parameters of the involved
moving parts of the mechanical structure being expressed in joint space, ̇X ∈ℝ4 is the
traveling plate velocity vector and ̇Jm(q, ̇q) is the time derivative of the inverse Jacobian
matrix.
Up to now, only the inertia of the equivalent two-mass model [17] of each coupler
is considered. In fact, the mass of each coupler is split up into two point-wise
masses located at both ends of the considered link. Then, the rotational inertia of the
two-mass model is considered instead of the real inertia of the couplers. Though this is
a righteous assumption when light materials are used, it fails when the links are made
with relatively heavy materials. This is the case of Dual-V parallel manipulator robot
and hence, an additional term should be added. The sub-torque 𝛾3 is the additional
torque component which accounts for the difference between real inertia and the
one of the equivalent mass model of the couplers. Due to limitation on the number
of pages, the details of this additional term are omitted and the interested reader is
referred to [17] for a full description of the Dual-V robot dynamic modeling. It is worth
noting though that 𝛾3 = f(X, ̇X, ̈X) is a highly nonlinear function with respect to its
arguments.
Finally, the full dynamic model of the Dual-V is obtained by summing the three
sub-torques as follows:
Γ = JT∗
m MI ̈X + MII( ̇Jm ̇X + Jm ̈X) +𝛾3
(3)
θ22
θ12
θ21
θ11
θ31
θ32
θ42
θ4
θ
l21
l31
l32
l42
l41
l22
l12
l11
cm2
cm4
cm1
cm3
P
Coupler
Actuator
Counter-
mass
Traveling
Plate
Crank
Fig. 1. CAD view of Dual-V parallel manipulator and its parameters deﬁnition.
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
21
Tab. 1. Dual-V geometric and dynamic parameters.
Length [m]
Mass [Kg]
Inertia [Kgm2]
Crank
0.2800
1.169
0.012967
Coupler
0.2800
0.606
0.006417
Traveling plate
0.22
0.899
0.008168
The CAD model of the Dual-V with its parameters’ deﬁnition is illustrated in Fig. 1;
its geometric and dynamic parameters are summarized in Tab. 1. Further details
regarding the Dual-V parallel manipulator can be found in [18] and [19].
3 C2 Reference Trajectories Generation
Geometric Closed Shape trajectories are more complex than traditional PtP ones
[5, 6] (e.g pick-and-place trajectories) and, in most cases, are generated by means
of trigonometric functions parametrized by the time variable t ∈ℝ+. Generating
trajectories with C2 continuity constraints (i.e. on velocities and accelerations) may
not be possible using standard analytical equations. Continuity of trajectories is
a crucial constraint for the robot drives and actuators and is required in most
robotic applications. Indeed, discontinuities in the trajectories may generate dis-
continuous control inputs and consequently, lead to undesired behavior of the
mechanical structure such as mechanical vibrations, poor tracking performance and
instabilities.
In this paper we are interested in the class of trajectories described by a sum of
weighted sine and cosine functions. This class of trajectories has been chosen because
it covers a large amount of geometric shapes from basic to the most complex ones (e.g.
circles, ellipses, deltoids, ...).
The general analytical form of the trajectories in question is then expressed by:
x(t) =
n
∑
i=1
ai cosαi (2π n1i
T t) + bi sinβi (2π n2i
T t)
(4)
where T ∈ℝ+ is the trajectory duration and ai, αi, bi, βi, nji ∈ℝ;i = 1, . . . , n; j = 1,2
are scalars deﬁning the overall shape of the trajectory.
In the sequel, we will ﬁrst give an illustrative example of direct application of
(4). Then, its major drawback is highlighted and a solution to overcome this issue is
proposed.
Authenticated
5:57 PM

22
|
M. Bennehar et al.
3.1 Trajectories using Standard Geometric Functions
Let xd(t) be a reference Cartesian position deﬁned by (4) to be tracked by the traveling
plate of the robot. It is assumed throughout this brief that the reference trajectories are
inside the workspace of the robot and hence are away from singularities. The reference
velocity vd(t) and acceleration ad(t) for this motion are obtained by differentiating
xd(t) with respect to time, giving thus:
vd(t) = −2π
T
n
∑
i=1
aiαin1i sinαi−1 (2π n1i
T t) −biβin2i cosβi−1 (2π n2i
T t)
(5)
ad(t) = −(2π
T )
2 n
∑
i=1
aiαi(αi −1)n2
1i cosαi−2 (2π n1i
T t)
+biβi(βi −1)n2
2i sinβi−2 (2π n2i
T t)
(6)
Without loss of generality, assume that the manipulator starts and ﬁnishes its
movement with zero velocity and acceleration (i.e. v(0) = v(T) = 0 and a(0) = a(T) = 0).
However, using the original analytical functions (5) and (6) may lead to non-zero
initial velocity and/or acceleration and thus, discontinuities in the generated motion.
Indeed, if we replace t = 0 or t = T in (5) and (6) we will obtain values dependent on
initial and ﬁnal conditions and thus, do not necessarily equal to zero. For instance,
the obtained initial conditions for (5) and (6) are given by:
vd(0) = −2π
T
n
∑
i=1
biβin2i = f1(bi, βi, n2i)
(7)
and
ad(0) = −(2π
T )
2 n
∑
i=1
aiαi(αi −1)n2
1i = f2(ai, αi, n1i)
(8)
therefore, the resulting trajectories can be discontinuous in velocity and/or acceler-
ation leading to discontinuous control torques and therefore big tracking errors and
even problem of vibrations.
To further illustrate this inconvenience let’s consider a simple circular trajectory
with radius r ∈ℝ+ and a center whose coordinates are (xc, yc) = (0,0). The resulting
trajectory needs to be C2 continuous (in velocities and accelerations) both in opera-
tional and joint spaces in order to be appropriately tracked by the proposed controller.
The analytical equations of positions, velocities and accelerations are given by:
{ xd(t)
=
r cos( 2π
T (t −t0))
yd(t)
=
r sin( 2π
T (t −t0))
(9)
{
̇xd(t)
=
−r 2π
T sin( 2π
T (t −t0))
̇yd(t)
=
r 2π
T cos( 2π
T (t −t0))
(10)
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
23
{
̈xd(t)
=
−r( 2π
T )2 cos( 2π
T (t −t0))
̈yd(t)
=
−r( 2π
T )2 sin( 2π
T (t −t0))
(11)
These trajectories satisfy equations (4), (5) and (6) being only shifted in time by t0.
Figure 2 illustrates the plots of the obtained trajectories using (9), (10) and (11) for the
parameters t0 = 0.5s, T = 1s. It can be clearly noticed the presence of discontinuities
on both velocity and acceleration proﬁles that have to be removed. In what follows,
we propose a novel method to overcome this drawback and generate C2 continuous
reference trajectories.
0
0.5
1
1.5
2
−10
0
10
Time [s]
Cartesian positions [mm]
−20
−10
0
10
20
−15
−10
−5
0
5
10
15
x−position [mm]
y−position [mm]
0
0.5
1
1.5
2
−100
−50
0
50
100
Time [s]
Cartesian velocties [mm/s]
0
0.5
1
1.5
2
−500
0
500
Time [s]
Cartesian accelerations [mm/s2]
Fig. 2. View of the generated Cartesian trajectories using standard geometric functions. xd (solid)
and yd (dashed).
3.2 Proposed C2 Continuous Reference Trajectories
In order to overcome the discontinuity problem in the velocity and acceleration
trajectories, we propose to revisit the analytical form of the desired operational
trajectories. Consider again the previous illustrative example of the circular trajectory.
Authenticated
5:57 PM

24
|
M. Bennehar et al.
If we check the previous equations of the trajectory, it can be seen that they can be
rewritten as follows:
{ xd(t)
=
r cos(λ(t))
yd(t)
=
r sin(λ(t))
(12)
with λ(t) = 2π
T (t−t0) which is a simple affine function of time t and when implemented,
does not satisfy any continuity constraints on the velocities and accelerations. The
corresponding velocities and accelerations can be obtained by differentiating (12) with
respect to time, which gives:
{
̇xd(t)
=
−r ̇λ(t) sin(λ(t))
̇yd(t)
=
r ̇λ(t) cos(λ(t))
(13)
{
̈xd(t)
=
−r[ ̈λ(t)sin(λ(t)) + ̇λ2(t)cos(λ(t))]
̈yd(t)
=
r[ ̈λ(t)cos(λ(t)) −̇λ2(t)sin(λ(t))]
(14)
From (13) and (14) one can notice that if λ(t) is chosen such that it satisﬁes the
following boundary constraints:
{
λ(t0) = 0,
̇λ(t0) = 0,
̈λ(t0) = 0
λ(t0 + T) = 2π,
̇λ(t0 + T) = 0,
̈λ(t0 + T) = 0
(15)
one can ensure the continuity on the velocity and acceleration trajectories. One
possible solution would then be to choose λ(t) with a trapezoidal velocity proﬁle.
Indeed, this choice allows to specify boundary conditions and hence, the constraints
(15) can be satisﬁed. A comparison between trapezoidal and linear velocity proﬁle for
λ(t) is depicted in Fig. 3. The analytical equations of λ(t) are now expressed as:
{
{
{
{
{
{
{
{
{
λ(t)
=
λf −λ0
2τ3(T−τ)[−t4 + 2τt3] + λ0,
t0 ≤t < τ
λ(t)
=
λf −λ0
(T−τ)[t −τ
2] + λ0,
τ ≤t < T −τ
λ(t)
=
λf −λ0
2τ3(T−τ)[(t −T)4 + 2τ(t −T)3] + λf ,
otherwise
(16)
where τ is the duration of initial acceleration and ﬁnal deceleration phases that has
to be chosen according to the robot dynamic capabilities (choosing small values for τ
may lead to unachievable high accelerations). λ0 and λf are the initial and ﬁnal values
respectively for λ(t) which depend on the type of the geometric trajectory. For instance,
in the case of the previous circular trajectory example, λ0 = 0 and λf = 2π.
The obtained trajectories using the proposed technique as depicted in Fig. 4 are
now continuous in velocity and acceleration and result in the same circular trajectory
in operational space as the original one. Therefore, they are more safe in the control
scheme for the actuators of the robot manipulator.
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
25
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
1.5
0
2
4
6
8
Time [s]
λ
Original
Proposed
0.5
1
1.5
0
2
4
6
8
Time [s]
˙λ
0.5
1
1.5
−100
−50
0
50
100
Time [s]
¨λ
Fig. 3. Evolution of λ(t), ̇λ(t) and ̈λ(t) versus time.
0
0.5
1
1.5
2
−10
0
10
Time [s]
Cartesian positions [mm]
−20
−10
0
10
20
−15
−10
−5
0
5
10
15
x−position [mm]
y−position [mm]
0
0.5
1
1.5
2
−200
−100
0
100
200
Time [s]
Cartesian velocties [mm/s]
0
0.5
1
1.5
2
−1000
−500
0
500
1000
Time [s]
Cartesian accelerations [mm/s2]
Fig. 4. Obtained C2 continuous operational trajectories. xd (solid) and yd (dashed).
Authenticated
5:57 PM

26
|
M. Bennehar et al.
4 Proposed Control Solution
It is conventional that PKMs share many similarities with their serial counterparts
regarding dynamic properties [14]. Consequently, the vast wide control literature
developed for serial manipulators can be successfully applied to PKMs. However, in
the particular case of RA-PKMs, the use of decentralized single axis controllers leads
to antagonistic control efforts. Indeed, these efforts do not produce any motion of
the manipulator. Thus, using conventional single axis strategies in the control loop
will certainly involve internal forces (incompatible with the robot’s kinematics) [15]
creating internal pre-stress in the mechanism. The antagonistic forces can cause a
multitude of undesirable phenomena such as loss of energy, instability and even
mechanical vibrations. Consequently, the control architecture when designed has to
take this issue in consideration. In this work we propose to enhance the well known
PD controller with computed forward by projecting the computed inputs in order to
reduce the effect of antagonistic forces. Figure 5 shows an overview of the different
components of the proposed control scheme.
Computed
Feedforward
Trajectory
Generator
Decentralized
PD Controller
Projection
+
++
–
Manipulator
Fig. 5. Overview of the proposed control architecture.
4.1 Decentralized Joint Space PD Controller
Consider a RA-PKM with m degrees of freedom and n actuators and let the joints
position vector be denoted by q ∈ℝn. The PD control in joint space is a decentralized
uncoordinated control strategy relying on the measured errors between the desired
and the actual positions. Let e(t) = qd(t) −q(t) be the vector of joints errors, where
qd(t) denotes the desired joint trajectory. Then, the PD control action is expressed by:
ΓPD = Kpe(t) + Kd ̇e(t)
(17)
where Kp and Kd are positive feedback gains usually chosen as diagonal matrices. If all
the actuators are identical, which is usually the case for PKMs, then the same feedback
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
27
gains could be used for all axes, namely; Kp = kpIn×n and Kd = kdIn×n, where In×n
denotes the identity matrix and kp, kd ∈ℝare positive scalars denoting the feedback
gains that should be carefully tuned to achieve satisfactory tracking performance. A
good accuracy is usually required in parallel robots; however, a PD controller is not
able to assure that. Consequently, a computed feedforward is proposed to improve the
tracking performance of the PD controller.
4.2 Tracking Accuracy Improvement through
a Computed Feedforward
If the inverse dynamic model of the robot is known and its parameters are accurate
enough, it would be interesting to exploit this knowledge in the control scheme
to further improve the tracking performance. Indeed, the tracking errors can be
signiﬁcantly reduced by compensating the inherent nonlinear dynamics of the robot.
One possible way would be the addition of a feedforward term. This strategy enables
partial compensation of the nonlinear dynamics, i.e. only desired values of positions,
velocities and accelerations are fed to the model-based term of controller. For the case
of the Dual-V robot, the inverse dynamics are given by (3), hence, the feedforward
control term can be expressed as:
Γff = JT∗
m (qd)MI ̈Xd + MII( ̇Jm(qd, ̇qd) ̇Xd + Jm(qd) ̈Xd) +𝛾3d
(18)
where the subscript d refers to the desired quantities and 𝛾3d = f(Xd, ̇Xd, ̈Xd).
4.3 Projection Method to Reduce Internal Forces
For RA-PKMs, the control inputs resulting from single axis controllers (i.e. PD portion)
may contain antagonistic forces. These control inputs do not create any motion as
they are in the null-space of JT
m. However, they create uncontrolled internal pre-stress
that may damage the manipulator. This issue has to be considered in the control
architecture. One way to reduce the internal forces is by projecting the computed
inputs onto the range of JT
m by the following projector: [15]
RJTm = I −NJTm
(19)
where NJTm = I −JT∗
m JT
m is the projector to the null-space of JT
m. Hence, the internal
antagonistic forces are eliminated by projecting the control torques onto the range
space of JT
m. This can be achieved using the projection matrix RJTm as:
Γ∗= RJTm(ΓPD + Γff)
(20)
Authenticated
5:57 PM

28
|
M. Bennehar et al.
The overall block diagram of the proposed control scheme is illustrated in Fig. 6.
Xd, Xd  Xd
Xd
qd
e
ΓPD
Γ
Γ*
q
ID
IK
Kp
d
dt
Kd
Jm
*T Jm
T
RA − PKM
+
−
+
+
+
+
Γff
¨
˙
Fig. 6. Block diagram of the proposed control scheme; IK denotes the inverse kinematic model and
ID the inverse dynamic model.
5 Real-Time Experimental Validation
5.1 Experimental Setup
All the links of the Dual-V are made of Aluminum. The cranks are mounted on four
direct drive actuators manufactured by ETEL Motion Technology. The actuators are
ﬁxed on an Aluminum base and they can supply torques up to 127 N.m. Matlab
software and Real-Time Workshop (both from Mathworks Inc.) have been used to
implement and execute in real-time the proposed control scheme. The generated
C code is then uploaded to the target PC (an industrial computer cadenced at 10
kHz and running xPC Target in real-time). The experimental setup is displayed
in Fig. 7.
5.2 Obtained Experimental Results
The proposed trajectory generator and controller presented in the previous section
were implemented on the Dual-V experimental testbed. For comparison purpose, we
also implement the classical trajectories generator. In order to further investigate the
beneﬁts of the proposed approach, four different geometric shapes are included in
the reference trajectories generator as illustrated in Fig. 8. The resulting reference
trajectories include a circle, an ellipse, a tear-like and a deltoid geometric shapes. The
traveling plate of the manipulator has to track each geometric trajectory in T = 0.5 s.
Between the end point of one closed-shape and the starting point of the next one,
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
29
Fig. 7. View of the experimental setup of Dual-V PKM; (1) the mechanical structure of the robot, (2)
the host PC, (3) the target PC, (4) emergency stop, (5) host monitor, (6) xPC target monitor.
−20
−15
−10
−5
0
5
10
15
20
−15
−10
−5
0
5
10
15
x−position [mm]
y−position [mm]
Fig. 8. Reference Cartesian trajectory used in experiments.
Authenticated
5:57 PM

30
|
M. Bennehar et al.
the end-effector has to perform a pick-and-place PtP trajectory deﬁned by a 5th order
polynomial function.
6
8
10
12
−0.6
−0.4
−0.2
0
0.2
0.4
Time [s]
x−axis error [mm]
Original
Proposed
6
8
10
12
−1
−0.5
0
0.5
1
Time [s]
y−axis error [mm]
Original
Proposed
Error on x axis
Error on y axis
Fig. 9. Reference Cartesian trajectory used in experiments.
The feedback gains of the controller have been experimentally tuned using the
trial-and-error technique. Usually, manipulators are not equipped with velocity
sensors, therefore, velocities have to be numerically estimated from positions meas-
urements. In our case, a carefully designed lead-lag ﬁlter is used to estimate the
velocities.
Figure 9 displays the Cartesian tracking performance of the traveling plate on
both x and y axes. It can be clearly seen that in the case of original trajectories, the
discontinuities involve a poor tracking performance. This is more noticeable at the
beginning and the end of the circle and the ellipse closed shapes which may lead to
high frequency vibrations. However, if we check the obtained performance with the
proposed approach, we can clearly observe the improvements in terms of tracking
errors at the end and starting points. The proposed trajectories are accurately tracked
thanks to the removed discontinuities. The improvements are more observable on the
starting and end points of the circle and ellipse trajectories (t = 5, 5.5, 7.5 and 8s).
These results were expected since the main purpose of this paper was to propose a
technique to remove these discontinuities from the trajectories generated by means
of classical analytical functions. These discontinuities are a major source of tracking
errors.
The generated control inputs when using the proposed method as well as those
generated by the classical one are shown in Figs. 11 and 10 respectively. As expected,
the controller generates very high torques when the reference trajectories contain
discontinuities, because the drives need to generate high torques in order step from
zero to a certain velocity in a very short time, which is in practice very delicate.
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
31
6
8
10
12
6
8
10
12
−15
−10
−5
0
5
10
15
Time [s]
6
8
10
12
Time [s]
−15
−10
−5
0
5
10
15
τ2 [N.m]
τ4 [N.m]
τ1 [N.m]
τ3 [N.m]
Time [s]
6
8
10
12
Time [s]
−15
−10
−5
0
5
10
15
−15
−10
−5
0
5
10
15
Fig. 10. Control inputs when using discontinuous trajectories.
6
8
10
12
−15
−10
−5
0
5
10
15
τ1 [N.m]
τ2 [N.m]
τ3 [N.m]
τ4 [N.m]
Time [s]
6
8
10
12
Time [s]
6
8
10
12
Time [s]
6
8
10
12
Time [s]
−15
−10
−5
0
5
10
15
−15
−10
−5
0
5
10
15
−10
−5
0
5
10
15
Fig. 11. Control inputs when using the proposed C2 trajectories.
Authenticated
5:57 PM

32
|
M. Bennehar et al.
6 Conclusions and Future Work
Throughout this paper, we investigated the generation of continuous geometric
closed-shape reference trajectories. Moreover, to accurately track these trajectories,
a novel model-based controller in joint space has been proposed. The proposed con-
troller enables the reduction of antagonistic internal forces caused by the unavoidable
use of decentralized strategies in the control scheme. The geometric trajectories in
question are deﬁned using analytical functions that show inherent discontinuities
regarding velocities and accelerations which may be a source of poor tracking.
For this reason, we proposed in this work an approach to overcome this issue by
modifying the motion proﬁle without changing the overall geometric shape of the
trajectory in operational space. Furthermore, to overcome the phenomenon of internal
forces, a novel extended PD controller with computed feedforward was proposed.
The computed control inputs were regularized using a projection matrix based on
the manipulator’s Jacobian matrix to reduce the antagonistic control inputs. This
projection enables to signiﬁcantly reduce the antagonistic internal forces that may
damage the mechanical structure. This strategy allows to signiﬁcantly reduce the
energy consumption and to cancel the mechanical vibrations of the mechanical
structure. To validate the proposed approaches, real-time experiments have been
conducted on a 3-dof planar RA-PKM developed in our laboratory. The proposed
trajectory generator demonstrated its superiority over the original one that utilizes
discontinuous analytical equations.
Acknowledgments: This research was supported by the French National Research
Agency, within the project ARROW.
Bibliography
[1]
Jean-Pierre Merlet. Parallel Robots. Kluwer Academic Publishers, Netherlands, 2000.
[2]
D. Corbel, M. Gouttefarde, and O. Company. Towards 100G with PKM. Is actuation redundancy
a good solution for pick-and-place?. In Proceedings of The IEEE Int. Conf. on Robotics and
Automation (ICRA’10), 4675–4682, Anchorage-Alaska, May 2010.
[3]
Ilian Bonev. Delta Parallel Robot – the Story of Success. ParalleMIC, May 2001.
[4]
Marconi. The Gadﬂy manipulator. Research Report 732, Marconi Research Center, 1985.
[5]
S. Macfarlane and E. A. Croft. Jerk-bounded manipulator trajectory planning: design for
real-time applications. IEEE Transactions on Robotics and Automation 19(1):42–52, 2003.
[6]
Y. Liu, C. Wang, J. Li and L. Sun. Time-Optimal Trajectory Generation of a Fast-Motion Planar
Parallel Manipulator. In Proceedings of The IEEE Int. Conf. on Intelligent Robots and Systems
(IROS’06), 754–759, Beijing-China, October 2006.
Authenticated
5:57 PM

Control of RA-PKMs for Closed-Shape Trajectories
|
33
[7]
C. Barnard, S. Briot and S. Caro. Trajectory generation for high speed pick and place robots. In
Proceedings of The ASME 2012 11th Biennial Conference On Engineering Systems Design And
Analysis, Nantes-France, July 2012
[8]
L. E. Bruzzone, R.M Molﬁno and R. P. Razzoli. Modeling and design of a parallel robot for
laser-cutting applications. In Proceedings of the IASTED International Conference on Modelling,
Identiﬁcation, and Control (MIC 2002), 518–522, Innsbruck-Austria, February 2002.
[9]
H. Chanal. Etude de l’emploi des machines outils à structure parallèle en usinage, PhD thesis,
Université Blaise Pascal, Clermont-Ferrand-France, 2006.
[10] Y. LI and Q. XU. Design and development of a medical parallel robot for cardiopulmonary
resuscitation. IEEE/ASME Transactions on Mechatronics, 12(3):265–273, 2007.
[11] H. J. Su, P. Dietmaier and J. M. McCarthy. Trajectory planning for constrained parallel
manipulators. Journal of mechanical design, 125(4):709–716, 2003.
[12] F. Paccot, N. Andreff and P. Martinet. A Review on the Dynamic Control of Parallel Kinematic
Machines: Theory and Experiments. The International Journal of Robotics Research,
28(3):395–416, 2009.
[13] J. F. He, H. Z. Jiang, D. C. Cong, Z. M. Ye and J. W. Han. A Survey on Control of Parallel
Manipulator. Key Engineering Materials, 339:307–313, 2007.
[14] H. Cheng, Y. K. Yiu and Z. Li. Dynamics and Control of Redundantly Actuated Parallel
Manipulators. IEEE/ASME Transactions on Mechatronics, 8(4):483–491, 2003.
[15] A. Müller and T. Hufnagel. A projection method for the elimination of contradicting control
forces in redundantly actuated PKM. In Proceedings of The IEEE Int. Conf. on Robotics and
Automation (ICRA’11), 3218–3223, Shanghai-China, May 2011.
[16] F. Reyes and R. Kelly. Experimental evaluation of model-based controllers on a direct-drive
robot arm. Mechatronics, 11(3):267–282, 2001.
[17] V. Van Der Wijk, S. Krut, F. Pierrot and J. L. Herder. Design and experimental evaluation of a
dynamically balanced redundant planar 4-RRR parallel manipulator. The International Journal
of Robotics Research, 32(6):744–759, 2013.
[18] J. Wu, J. Wang and Z. You. A comparison study on the dynamics of planar 3-DOF 4-RRR,
3-RRR and 2-RRR parallel manipulators. Robotics and Computer Integrated Manufacturing,
27(1):150–156, 2011.
[19] V. Van Der Wijk, S. Krut, F. Pierrot and J. L. Herder. Generic Method for Deriving the General
Shaking Force Balance Conditions of Parallel Manipulators with Application to a Redundant
Planar 4-RRR Parallel Manipulator. In Proceedings of The 13th World Congress in Mechanism
and Machine Science, Guanajuato-Mexico, 2011.
Biographies
Moussab Bennehar received his B.Sc. and M.Sc. degrees in electronics from
the university of Constantine, Algeria, in 2012. He is currently a Robotics PhD
student at Laboratoire d’Informatique, de Robotique et de Microélectronique
de Montpellier (LIRMM - UMR 5506) in the Montpellier Laboratory of
Computer Science, Robotics, and Microelectronics, France. His research is
focused on trajectory generation and control of multibody systems. His PhD
thesis is focused on advanced control techniques of parallel kinematic
manipulators.
Authenticated
5:57 PM

34
|
M. Bennehar et al.
Ahmed Chemori received his M.Sc. and Ph.D. degrees, respectively in 2001
and 2005, both in automatic control from the Grenoble Institute of
Technology. He has been a post-doctoral fellow with the automatic control
laboratory of Grenoble in 2006. He is currently a tenured research scientist in
Automation and Robotics at the Montpellier Laboratory of Computer Science,
Robotics, and Microelectronics. His research interests include nonlinear,
adaptive and predictive control and their applications in humanoid robotics,
underactuated systems, parallel robots and underwater vehicles.
Sébastien Krut received the M.S. degree in mechanical engineering from the
Pierre and Marie Curie University, Paris, France, in 2000 and the Ph.D.
degree in automatic control from the Montpellier University of Sciences,
Montpellier, France, in 2003. He has been a Post-doctoral fellow with the
Joint Japanese-French Robotics Laboratory (JRL) in Tsukuba, Japan in 2004.
He is currently a tenured research scientist in Robotics for the French
National Centre for Scientiﬁc Research (CNRS), at the Montpellier Institute of
Informatics, Microelectronics and Robotics (LIRMM in French), Montpellier,
France. His research interests include design and control of robotic systems
in general, and more speciﬁcally of parallel manipulators.
François Pierrot is a senior researcher in robotics for CNRS. His research
interests include the creation of innovative robots and he considers both
mechanical design and control strategies.
Authenticated
5:57 PM

S. Ben Atia, A. Messaoud and R. Ben Abdennour
Decoupled Multimodel Predictive Control
Based on Multi-observer for Discrete-time
Uncertain Nonlinear Systems
Abstract: This paper deals with a decoupled multimodel predictive control for
discrete-time uncertain nonlinear systems. The control scheme is based on a
multi-observer for the state estimation of uncertain nonlinear systems described by
decoupled multimodel. A partial controller and observer is synthesized for each local
model. In order to ensure the closed-loop performances, a supervisor is proposed
to select the appropriate controller. Simulation example is carried out to exhibit the
effectiveness of the proposed control strategy.
Keywords: Uncertain nonlinear systems, Decoupled multimodel, Multi-observer, Pre-
dictive control, Supervisor.
1 Introduction
The strategy of predictive control has become a method increasingly used in many
application areas. The basic idea is to use knowledge from the model to envisage
various scenarios of the system operation in the future and choose the best according
to the objectives.
The implementation of model predictive control requires the calculation of a
sequence of future controls that are obtained by the minimisation of a quadratic
performance criterion over a ﬁnite horizon.
For systems with nonlinear models, this control has several limits, namely the
complexity of the model considered in the optimisation problem. Otherwise, the
efficiency of the predictive control is closely related to the accuracy of the model
that represents the system behavior. Indeed, the system modeling is based on
physics’ equations or identiﬁcation techniques to obtain the so called nominal model.
However, this model is often achieved at the cost of many simpliﬁcations involved in
the system model, or on the inﬂuence of the outside environment. Thus, the nominal
model does not accurately translate the dynamic behavior of the real system, hence
the need to take into account modeling uncertainties.
S. Ben Atia, A. Messaoud and R. Ben Abdennour: Research Unit: Numerical Control of Industrial
Processes (CONPRI), University of Gabes, National School of Engineers of Gabes (ENIG), Omar Ibn
Khattab Street, 6029 Gabes, Tunisia, email: xxx@xxx
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 35–54.
DOI 10.1515/9783110470468-003
Authenticated
Download Date | 12/27/17 4:01 PM

36
|
S. Ben Atia et al.
The state estimation and the control of uncertain linear and nonlinear systems
has been the subject of numerous papers [1, 3, 5].
In [4] and [21], the authors discussed the robustness of the model predictive
control (MPC) for discrete-time uncertain systems with time-delay. A robust fuzzy
model predictive control joining the MPC strategy and the Takagi–Sugeno (T–S) model
was discussed in [9–11, 18, 19].
In fact, systems with nonlinear behaviors and complex structures are frequently
encountered in practice. Indeed, the handling of these systems is a difficult
task in many practical situations, especially when they have highly nonlinear
dynamic behaviors. Consequently, it is difficult to synthesize control laws or to
implement strategies for system diagnosis for these systems with mathematical
complexity.
In the literature, the linearisation method is widely used [20]. This method con-
sists in the linearisation of the nonlinear system around operating points. However,
the global behavior of the system is not fully represented by the linearised model
especially when the system has high nonlinearities. Subsequently, it is fundamental
to ensure the compromise between a good characterisation of the system by a method
that describes accurately the system behavior in the different operating ranges and
a method that allows the exploitation of the techniques extensively developed in the
linear case.
The multimodel approach represents an efficient alternative for the modeling of
nonlinear systems. There are two main types of multimodel, namely the coupled (T–S
model) and decoupled multimodel. The main difference between these two models
resides in the way of local models’ combination. Indeed, the coupled structure relies
on fuzzy rules and it consists of partial models sharing the same state vector. On
the other hand, the decoupled multimodel includes decoupled (independent) partial
models, which means that each local model has its own state vector. In order to obtain
a multimodel, three different methods can be distinguished; the linearisation method
[20], the convex polytopic transformation [6] and identiﬁcation [2, 13]. The last method
is retained in this work for the obtention of a decoupled multimodel described in the
state space.
The implementation of many control laws (such as state feedback control, model
predictive control. . .) as well as the supervision and fault detection require usually the
use of the state representation. However, the design of this strategies is often carried
out assuming the availability of the state variables. In practice, this assumption is
unrealistic. Hence, the design of an observer for the estimation of the unmeasurable
states is an unavoidable task to design any control strategy that depends on the state
representation.
Over the last decades, state estimation of nonlinear systems described by T-S
have been widely investigated through several research works. However, the design of
observers for decoupled multimodel was not extensively discussed in the literature. In
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
37
fact, the state estimation of nonlinear systems represented by decoupled multimodel
was recently treated in few works [12, 14].
In [16], the author designed a robust observer for continuous and discrete-time
uncertain nonlinear systems described by decoupled multimodel.
In the present paper, a decoupled multimodel predictive control is investigated
for the control of a large class of discrete-time uncertain nonlinear systems.This
control scheme is based on a multi-observer for the estimation of state variables. The
efficiency of the designed multi-controller is conditioned by the accuracy of the state
estimation provided by the proposed multi-observer.
This paper is organized as follows. Section two is devoted to the design of a
robust multi-observer for the state estimation of uncertain decoupled multimodel.
The formulation of the partial model predictive control is presented in section three.
Section four is reserved to the development of a supervised decoupled multimodel pre-
dictive control for discrete-time uncertain nonlinear systems. An illustrative example
is carried out in section ﬁve to show the signiﬁcance of the proposed control scheme.
Section six concludes the paper.
2 Robust Multi-Observer Design for Uncertain
Decoupled Multimodel
2.1 Uncertain Decoupled Multimodel
In this part, the discrete-time uncertain decoupled multimodel is presented. Two types
of uncertainties can be distinguished; unstructured and structured uncertainties.
In this work, the retained form of uncertainties is the structured norm-bounded
uncertainties.
The multimodel representation of a discrete-time uncertain nonlinear system is
described by the following uncertain decoupled multimodel:
{
{
{
{
{
{
{
{
{
xi (k + 1) = (Ai + ∆Ai (k))xi (k) + (Bi + ∆Bi (k))u(k)
ymi(k) = Cixi(k)
ym (k) =
Nm
∑
i=1
μi (z(k))ymi(k)
(1)
where xi ∈ℜni is the state vector and ymi ∈ℜp is the output of the ith partial model.
u ∈ℜm and ym ∈ℜp are the control signal and the output of the system.
The matrices Ai ∈ℜni×ni, Bi ∈ℜni×m and Ci ∈ℜp×ni are known constant matrices.
Nm is the number of partial models.
Authenticated
Download Date | 12/27/17 4:01 PM

38
|
S. Ben Atia et al.
The contribution of each partial model is deﬁned by the weighting functions
μi(z(k)).
μi(z(k)) =
e
( −(z(k)−ci)2
σ2
d
)
Nm
∑
j=1
e
( −(z(k)−ci)2
σ2
d
)
,
i = 1,2, . . . , Nm
They have the following properties:
Nm
∑
i=1
μi(z(k)) = 1,
0 ≤μi(z(k)) ≤1,
∀i = 1, . . . , Nm,
∀k
z is the decision variable. It depends on the measurable or unmeasurable states,
the input signal or the system output. The centers and the dispersion are ci and σd,
respectively.
The parametric uncertainties are the unknown matrices that are assumed to be of the
form:
∆Ai (k) = DAi∆Ai(k)EAi
∆Bi (k) = DBi∆Bi(k)EBi,
i = 1⋅⋅⋅Nm
(2)
DAi, DBi, EAi and EBi are known constant matrices of appropriate dimensions.
∆Ai(k) and ∆Bi(k) are unknown and time-varying matrix functions satisfying the
following conditions:
∆T
Ai(k)∆Ai(k) ≤I
∆T
Bi(k)∆Bi(k) ≤I,
i = 1⋅⋅⋅Nm
(3)
The compact form of the equation (1) can be obtained by deﬁning the vector x(k) as
follows:
x(k) = [xT
1 (k)⋅⋅⋅xT
i (k)⋅⋅⋅xT
Nm (k)]
T ∈ℜn,
n =
Nm
∑
i=1
ni
(4)
The equation (1) can be written in the following compact form:
{ x(k + 1) = (𝔸+ ∆𝔸(k))x(k) + (𝔹+ ∆𝔹(k))u(k)
ym (k) = ℂ(k)x(k)
(5)
where the matrices 𝔸∈ℜn×n, 𝔹∈ℜn×m et ℂ∈ℜp×n are deﬁned as follows:
𝔸= diag{A1 ⋅⋅⋅ANm},𝔹= [ B1
. . .
Bi
. . .
BNm ]
ℂ(k) = [ μ1 (k)CT
1
. . .
μi (k)CT
i
. . .
μNm (k)CT
Nm ]
The matrix ℂ(k) can be written as follows:
ℂ(k) =
Nm
∑
i=1
μi (z(k))ℂi
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
39
with ℂi is a block matrix of the form:
ℂi = [0. . . Ci . . .0]
The uncertainties are given by:
∆𝔸(k) = 𝔻A∆𝔸(k)𝔼A
∆𝔹(k) = 𝔻B∆𝔹(k)𝔼B
(6)
with 𝔻j and 𝔼j (j = A, B) are augmented matrices deﬁned as follows:
𝔻A = diag{DA1 ⋅⋅⋅DANm}
(7)
𝔻B = diag{DB1 ⋅⋅⋅DBNm}
(8)
𝔼A = diag{EA1 ⋅⋅⋅EANm}
(9)
𝔼B = [ET
B1 ⋅⋅⋅ET
BNm]
(10)
The matrix functions are given by the following compact form:
∆𝔸(k) = diag{ ∆A1(k)
⋅⋅⋅
∆ANm(k) }
(11)
∆𝔹(k) = diag{ ∆B1(k)
⋅⋅⋅
∆BNm(k) }
(12)
2.2 State Estimation of Uncertain Decoupled Multimodel
The state estimation of the system (1) is ensured by the following multiobserver:
{
̂x(k + 1) = 𝔸̂x(k) + 𝔹u(k) + 𝕃(y(k) −̂y(k))
̂y(k) = ℂ(k) ̂x(k)
(13)
with 𝕃= [ L1
⋅⋅⋅
Li
⋅⋅⋅
LNm ]
T ∈ℜn
The multiobserver synthesis problem can be formulated as adjusting the
multi-observer gain such that the state estimation error given by equation (14)
converges to zero. So, this gain should be adjusted to provide accurate state estimation
in the presence of parametric uncertainties.
The dynamic of the estimation error is given as follows:
̃x(k + 1) = x(k + 1) −̂x(k + 1)
= (𝔸−𝕃ℂ(k)) ̃x(k) + ∆𝔸(k)x(k) + ∆𝔹(k)u(k)
(14)
Assuming that:
ξ(k) = [
̃x(k)
x(k) ]
(15)
Authenticated
Download Date | 12/27/17 4:01 PM

40
|
S. Ben Atia et al.
Then, the dynamic of the augmented system has the following expression:
ξ(k + 1) = Γ(k)ξ(k) + 𝛶(k)u(k)
(16)
with
Γ(k) = [ 𝔸−𝕃ℂ(k)
∆𝔸(k)
0
𝔸+ ∆𝔸(k) ]
𝛶(k) = [ ∆𝔹(k)
𝔹+ ∆𝔹(k) ]
Consider the following Lyapunov functional:
V(k) = ξ T(k)Pξ(k)
(17)
with P = [ P1
0
0
P2
].
The convergence of the estimation error is ensured the forward difference of
Lyapunov functional is negative (∆V(k) = V(k + 1) −V(k) < 0). The convergence
conditions are formulated in terms of linear matrix inequalities and are given by the
following theorem.
Theorem [15] The estimation error between the considered multimodel (5) and the
multi-observer (13) is asymptotically stable if there exist symmetric matrices P1 et
P2, a matrix X of appropriate dimension and positive scalars ρ1 and ρ2 such that the
following linear matrix inequalities hold:
[[[[[[[[[[[
[
−P1
0
0
ΩT
i
0
0
0
0
ρ1𝔼T
A𝔼A −P2
0
0
𝔸TP2
0
0
0
0
ρ2𝔼T
B𝔼B
0
𝔹TP2
0
0
Ωi
0
0
−P1
0
P1𝔻A
P1𝔻B
0
P2𝔸
P2𝔹
0
−P2
P2𝔻A
P2𝔻B
0
0
0
𝔻T
AP1
𝔻T
AP2
−ρ1I
0
0
0
0
𝔻T
BP1
𝔻T
BP2
0
−ρ2I
]]]]]]]]]]]
]
< 0
(18)
with:
Ωi = P1𝔸−Xℂi
(19)
𝕃= P−1
1 X is the multi-observer gain.
3 Partial Model Predictive Control Formulation
The philosophy of the model predictive control is to use the model to predict the system
behavior and choose the best decision, in the sense of a certain cost. Thus, the control
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
41
synthesis relies on the minimisation of a cost function Ji that leads to the optimal
control:
Ji = 1
2
{
{
{
Np
∑
j=1
󵄩󵄩󵄩󵄩̂yi(k + j/k) −yc(k + j)󵄩󵄩󵄩󵄩
2
ν +
Nu−1
∑
j=0
‖∆ui(k + j)‖2
η
}
}
}
(20)
with:
Np and Nu are the prediction horizon and the control horizon, respectively.
ν and η are positive weighting factors.
yc(k + j/k) is the j steps reference trajectory and ̂yi(k + j/k) is the j steps predictor
output.
∆ui(k + j) are the control increments for j steps ahead with:
∆ui(k + j) = 0 ∀j ∈[Nu, Np].
Based on equation (1), the corresponding estimated state, for each partial model,
predicted for j steps ahead can be written as follows:
{
̂xi(k + j) = Ai ̂xi(k + j −1) + Biui(k + j −1)
̂yi(k + j) = Ci ̂x(k + j)
∀j = 1, . . . , Np
(21)
The partial model output ̂yi(k + j) predicted for j steps ahead is given by the following
expression written in a matrix form:
̂Yi(k) = Ξi ̂xi(k) + ΨiUi(k)
(22)
with
Ξi =
[[[[[[
[
CiAi
CiAi2
...
CiA
Np
i
]]]]]]
]
,
Ψi =
[[[[[[[
[
CiBi
0
⋅⋅⋅
0
CiAiBi
...
...
...
...
...
...
0
CiA
Np−1
i
Bi
⋅⋅⋅
CiAiBi
CiBi
]]]]]]]
]
Ui(k) = [ ui(k)
ui(k + 1)
⋅⋅⋅
ui(k + Np −1) ]
T
̂Yi(k) = [
̂yi(k + 1)
̂yi(k + 2)
⋅⋅⋅
̂yi(k + Np) ]
T
The equation (20) written in a matrix form is given by the following expression:
Ji = 1
2 [󵄩󵄩󵄩󵄩󵄩̂Yi(k) −Yc(k)󵄩󵄩󵄩󵄩󵄩
2
ϑ + ‖∆Ui(k)‖2
ℵ]
= 1
2 (( ̂Yi(k) −Yc(k))
T ϑ( ̂Yi(k) −Yc(k)) + ∆UT
i (k)ℵ∆Ui(k))
(23)
with
Yc(k) = [ yc(k + 1)
yc(k + 2)
⋅⋅⋅
yc(k + Np) ]
T
Authenticated
Download Date | 12/27/17 4:01 PM

42
|
S. Ben Atia et al.
∆Ui(k) = [
∆ui(k)
⋅⋅⋅
∆ui(k + Nu −1)
Np −Nu
⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞
0
⋅⋅⋅
0
]
T
ϑ =
[[[[[[
[
ν
0
⋅⋅⋅
0
0
...
...
...
...
...
...
0
0
⋅⋅⋅
0
ν
]]]]]]
]
,
ℵ=
[[[[[[[[[[[[[[[[[[[[[[[[[[[
[
Np
⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞
Nu
⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞⏞
2η
−η
0
⋅⋅⋅
0
−η
2η
...
...
...
0
...
...
...
0
...
...
...
2η
−η
0
⋅⋅⋅
0
−η
η
0
⋅⋅⋅
0
...
⋅⋅⋅
...
...
⋅⋅⋅
...
...
⋅⋅⋅
...
0
⋅⋅⋅
0
0
⋅⋅⋅
⋅⋅⋅⋅⋅⋅
⋅⋅⋅
0
...
...
...
...
...
0
⋅⋅⋅
⋅⋅⋅
⋅⋅⋅
⋅⋅⋅
0
⋅⋅⋅
0
...
...
...
0
⋅⋅⋅
0
]]]]]]]]]]]]]]]]]]]]]]]]]]]
]
The partial criterion Ji has the following expression:
Ji =1
2 (UT
i (k)Ψ T
i ϑΨiUi(k) + 2UT
i (k)(ΨT
i ϑΞi ̂xi(k) −Ψ T
i ϑYc(k)))
+ 1
2 (UT
i (k)ℵUi(k) −2ηui(k)ui(k −1) + cti)
=1
2 UT
i (k)ΘiUi(k) + UT
i (k)φi + cti
(24)
where
Θi = Ψ T
i ϑΨi + ℵ
φi = [ Ψ T
i ϑΞi
−ΨT
i ϑ ][
̂xi(k)
Yc(k) ] −
[[[[[
[
ηui(k −1)
0
...
0
]]]]]
]
cti = (Ξi ̂xi(k) −Yc(k))T ϑ(Ξi ̂xi(k) −Yc(k)) + ηu2
i (k −1) is a constant independent from
Ui(k).
∂Ji
∂Ui(k)is the partial derivative of the criterion Ji, its expression is given as follows:
∂Ji
∂Ui(k) = ΘiUi(k) + φi
(25)
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
43
The optimal control law has the following expression:
Ui(k) = −Θ−1
i φi
(26)
4 Decoupled Multimodel Predictive
Control with Supervisor
The efficiency of the model predictive control is closely related to the accuracy of the
system model. In the case of unmeasurable states, the accuracy of the model depends
on the effectiveness of the multi-observer synthesized for the state estimation. The
present work presents a multi-observer that serves to reconstruct the state variables
of discrete-time uncertain decoupled multimodel. This multi-observer is used in the
elaboration of the control law.
The control scheme contains three blocks (Fig. 1). The multi-observer/
multi-controller block is designed to estimate the state variables that serves to
elaborate the local control laws of the multi-controller satisfying the closed-loop
objectives. The supervision block include a set of partial predictors that describe the
system behavior in each operating zone, it has as role to select the convenient partial
predictor and consequently the corresponding partial controller. The adequate local
controller is chosen depending on a performance criterion Jci(k) that is based on the
error between the system and the partial predictors’ outputs. The switching block
selects the suitable local controller corresponding to the minimal criterion value.
The selection of the suitable controller requires the minimisation of the criterion Jci(k)
given by the following expression [7, 8, 17]:
Jci(k) = αε2
i (k) + β
k
∑
j=1
e−λ(k−j)ε2
i (j),
i = 1. . . Nm
(27)
with
εi(k) (εi(k) = y(k)−̂yci(k)) denotes the error between the real and the ith predictor
output.
α and β are positive parameters denoting the weighting factors of the instantan-
eous and the long-term measures accuracy.
λ is the forgetting factor.
Nm is the number of the local controllers.
The ith predictor output is obtained by the inversion of the ith partial controller
and it given as follows:
̂Yci(k) = (Ψ T
i ϑ)
−1 (ΨT
i ϑΨi + ℵ)Ui(k) + Ξi ̂xi(k)
Authenticated
Download Date | 12/27/17 4:01 PM

44
|
S. Ben Atia et al.
yc (k)
xˆi (k)
xˆi (k)
xˆ(k + 1) = Axˆ(k) + Bu(k) + L (y(k) – yˆm(k))
yˆm(k) = C(k)xˆ(k)
y(k)
ym(k)
u(k)
ui (k)
Decoupled State Multimodel
Multiobserver
Desired perfromances
MPC 1
MPC i
MPC Nm
Controllers’ library
Uncertain Nonlinear
System 
Predictors’ library
&
Performances’
evaluator 
Supervisor
xi(k + 1) = (Ai + ΔAi(k))xi(k) + (Bi + DBi(k))u(k)
ym (k) = ∑μi(z(k))Cixi(k)
Nm
Switching
system 
Fig. 1. Supervised decoupled multimodel predictive control based on multi-observer for uncertain
nonlinear systems.
−(ΨT
i ϑ)
−1 [[[[[
[
ηui(k −1)
0
...
0
]]]]]
]
(28)
We consider only the ﬁrst element of ̂Yci(k).
̂yci(k) = ̂Yci(1)
(29)
5 Simulation Results
Consider the decoupled multimodel with Nm = 3 partial models. The numerical
matrices’ values are given as follows:
Partial model 1:
A1 = [ −0.6965
0.2218
0.2430
0.0914 ], B1 = [ −1.1485
−0.0905 ], C1 = [ 1
0 ]
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
45
DA1 = [ 0.1
−0.1 ], EA1 = [ −0.2
0.2 ], DB1 = [ 1
−0.1 ], EB1 = 0.01
Partial model 2:
A2 = [ −0.5274
−0.1475
0.2308
0.2425
], B2 = [ −1.3599
0.2579
], C2 = [ 1
0 ],
DA2 = [ 0.1
−0.01 ], EA2 = [ 0.1
0.02 ]DB2 = [ 1
−0.2 ], EB2 = −0.01
Partial model 3:
A3 = [ −0.2884
−0.5253
0.2000
0.1818
], B3 = [ −2.1589
0.4274
], C3 = [ 1
0 ],
DA3 = [ 0.1
−0.01 ], EA3 = [ 0.2
0.02 ], DB3 = [ 2
−0.1 ], EB3 = −0.01
The application of the designed control strategy based on the designed multi-observer
for uncertain systems leads to the following simulation results.
The evolutions of the real and desired outputs are given by Fig. 2.
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−2
−1.5
−1
−0.5
0
0.5
yc(k)
y(k)
k
Fig. 2. Evolutions of the real and desired outputs (consideration of uncertainties).
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
u(k)
k
Fig. 3. Evolution of the control signal (consideration of uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

46
|
S. Ben Atia et al.
0
500
1000
1500
2000
0
MPC1
MPC2
MPC3
k
Fig. 4. Commutation between the local controllers (consideration of uncertainties).
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−1
0
1
(a)
x1(k)
x1(k)
ˆ
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.4
−0.2
0
0.2
(b)
e1(k)
k
k
Fig. 5. (a) Evolutions of the state 1 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
47
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.1
0
0.1
(b)
e2(k)
k
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.2
0
0.2
(a)
x2(k)
x2(k)
ˆ
k
Fig. 6. (a) Evolutions of the state 2 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−1
0
1
x3(k)
x3(k)
ˆ
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.1
0
0.1
0.2
e3(k)
k
k
(a)
(b)
Fig. 7. (a) Evolutions of the state 3 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

48
|
S. Ben Atia et al.
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.05
0
0.05
x4(k)
x4(k)
ˆ
−0.1
0
0.1
(a)
(b)
e4(k)
k
k
0
200
400
600
800 1000 1200 1400 1600 1800 2000
Fig. 8. (a) Evolutions of the state 4 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
−2
0
2
x5(k)
x5(k)
ˆ
−0.1
0
0.1
(a)
(b)
e5(k)
k
k
0
200
400
600
800 1000 1200 1400 1600 1800 2000
0
200
400
600
800 1000 1200 1400 1600 1800 2000
Fig. 9. (a) Evolutions of the state 5 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
49
−0.1
0
0.1
(a)
x6(k)
x6(k)
ˆ
0
200
400
600
800 1000 1200 1400 1600 1800 2000
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−0.1
0
0.1
(b)
e6(k)
k
k
Fig. 10. (a) Evolutions of the state 6 and its estimate (b) Evolution of the estimation error
(consideration of uncertainties).
0
200
400
600
800 1000 1200 1400 1600 1800 2000
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
yc(k)
y(k)
k
Fig. 11. Evolutions of the real and desired outputs (non-consideration of uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

50
|
S. Ben Atia et al.
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
e1(k)
k
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.1
−0.05
0
0.05
0.1
e2(k)
k
Fig. 12. Evolution of the state estimation errors of the partial model 1 (non-consideration of
uncertainties).
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.1
−0.05
0
0.05
0.1
0.15
0.2
e3(k)
k
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.1
−0.05
0
0.05
0.1
e4(k)
k
Fig. 13. Evolution of the state estimation errors of the partial model 2 (non-consideration of
uncertainties).
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.1
−0.05
0
0.05
0.1
e5(k)
k
0
200 400 600 800 1000 1200 1400 1600 1800 2000
−0.1
−0.05
0
0.05
e6(k)
k
Fig. 14. Evolution of the state estimation errors of the partial model 3 (non-consideration of
uncertainties).
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
51
Figure 3 illustrates the evolution of the control signal.
Figure 4 shows the commutation between partial controllers.
The evolutions of the real and estimate states as well as the estimation errors are
shown in the Figs. 5–10.
These ﬁgures illustrate the efficiency of the decoupled multimodel predictive
control for discrete-time uncertain nonlinear systems when a multi-observer for the
state estimation is used. This control strategy provides good closed-loop performances
when state variables are accurately estimated.
Now, we assume that the real system contains parametric uncertainties. However,
these uncertainties are ignored in the modeling phase. So, the obtained multimodel is
no longer a faithful representation of the real system. Consequently, the uncertainties
are not considered in the multi-observer synthesis. The effect of the non consideration
of uncertainties on the quality of state estimation and subsequently on the efficiency
of the control law is illustrated by the following ﬁgures.
Figure 11 illustrates the evolutions of the real and desired outputs.
The evolutions of the estimation errors are given by Figs. 12–14.
It can be easily seen that the non consideration of the uncertainties in the synthesis
of the multi-observer has bad effects on the state estimation quality, and since the
control law depends on these estimates (equation 26), we can conclude that the
degradation of control law performance is due to the bad estimation quality. This limit
is already overcame due to the designed multi-observer that takes into account the
system uncertainties.
6 Conclusion
In this paper, we have combined the multi-observer for the state estimation of
discrete-time uncertain decoupled state multimodel with the multimodel predictive
control in order to obtain an efficient control strategy for uncertain discrete-time
nonlinear systems. The designed multi-observer provides the estimates of the states
required for the elaboration of an efficient control law. A supervisor including a
performance criterion is exploited for the selection of the adequate partial controller
that satisﬁes the closed-loop objectives. A simulation example is carried out to show
the signiﬁcance of this control strategy that shows good closed-loop performances.
Bibliography
[1]
M. Abbaszadeh and HJ. Marquez. Lmi optimization approach to robust H∞observer design
and static output feedback stabilization for discrete-time nonlinearuncertain systems.
International Journal Of Robust and Nonlinear Control, 19:313–340, 2009.
Authenticated
Download Date | 12/27/17 4:01 PM

52
|
S. Ben Atia et al.
[2]
J. Abonyi, R. Babuska, and F. Szeifert. Modiﬁed gath-geva fuzzy clustering for identiﬁcation
of takagi-sugeno fuzzy models. IEEE Transactions on Systems, Man and Cybernetics, Part B:
Cybernetics, 32(5):612–621, 2002.
[3]
R. Aguilar-Lopez and R. Maya-Yescas. State estimation for nonlinear systems under model
uncertainties: a class of sliding-mode observers. Journal of Process Control, 15(3):363–370,
2005.
[4]
X.B. Hu and W.H. Chen. Model predictive control for constrained systems with uncertain
state-delays. International Journal of Robust and Nonlinear Control, 14(17):1421–1432, 2004.
[5]
S. Ibrir and S. Diop. Novel lmi conditions for observer-based stabilization of lipschitzian
nonlinear systems and uncertain linear systems in discrete-time. Applied Mathematics and
Computation, 206(2):579–588, 2008.
[6]
A.M. Nagy Kiss. Analyse et synthèse de multimodèles pour le diagnostic. Application à une
station d’épuration. PhD thesis, Institut National Polytechnique de Lorraine, France, 2010.
[7]
A. Messaoud, M. Ltaief, and R. Ben Abdennour. Supervision based on partial predictors for a
multimodel generalized predictive control: experimental validation on a semi-batch reactor.
International Journal of Modeling, Identiﬁcation and Control, 6(4):333–340, 2009.
[8]
A. Messaoud, M. Ltaief, and R. Ben Abdennour. Supervision based on a multipredictor for
an uncoupled state multimodel predictive control. In The 6th International Conference on
Electrical Systems and Automatic Control, 2010.
[9]
W. El Messoussi, O. Pagès, and A. El Hajjaji. Robust pole placement for fuzzy models with
parametric uncertainties: An lmi approach. In Proceedings of the 4th Eusﬂat and 11th LFA
Congress, pages 810–815, 2005.
[10] W. El Messoussi, O. Pagès, and A. El Hajjaji. Observer-based robust control of uncertain fuzzy
dynamic systems with pole placement constraints: An lmi approach. In Proceedings of the IEEE
American Control Conference, pages 2203–2208, 2006.
[11] H.N. Nounou and K.M. Passino. Fuzzy model predictive control: Techniques, stability issues,
and examples. Proceedings of the IEEE International Symposium on Intelligent Control, pages
423–428, 1999.
[12] R. Orjuela. Contribution à l’estimation d’état et au diagnostic des systèmes représentés par des
multimodèles. PhD thesis, Institut National Polytechnique de Lorraine, France, 2008.
[13] R. Orjuela, D. Maquin, and J. Ragot. Nonlinear system identiﬁcation using uncoupled state
multiple-model approach. In 4th Workshop on Advanced Control and Diagnosis, ACD’20–06,
Nancy, France, 2006.
[14] R. Orjuela, B. Marx, D. Maquin, and J. Ragot. State estimation of nonlinear discrete-time
systems based on the decoupled multiple model approach. In 4th International Conference
on Informatics in Control, Automation and Robotics, ICINCO 2007, Angers, France, 2007.
[15] R. Orjuela, B. Marx, J. Ragot, and D. Maquin. Conception d’observateurs robustes pour
des systèmes non linéaires incertains: une stratégie multimodèle. In 5eme Conférence
Internationale Francophone d’Automatique, Bucarest, Roumanie, 2008.
[16] R. Orjuela, B. Marx, J. Ragot, and D. Maquin. Design of robust h∞observers for nonlinear
systems using a multiple model. In 17th IFAC World Congress, Séoul, Corée du Sud,
2008.
[17] O. Pagès, C. Bernard, O. Raul, and M. Pascal. Control system design by using a multi-controller
approach with a real-time experimentation for a robot wrist. International Journal Of Control,
75(16):1321–1334, 2002.
[18] H. Sarimveis and G. Bafas. Fuzzy model predictive control of non-linear processes using
genetic algorithms. Fuzzy Sets and Systems, 139(1):59–80, 2003.
[19] C.L. Su and S.Q. Wang. Robust model predictive control for discrete uncertain nonlinear
systems with time-delay via fuzzy model. Journal of Zhejiang University SCIENCE A,
7(10):1723–1732, 2006.
Authenticated
Download Date | 12/27/17 4:01 PM

Decoupled multimodel predictive control for uncertain nonlinear systems
|
53
[20] K. Tanaka and M. Sano. A robust stabilization problem of fuzzy control systems and its
application to backing up control of a truck-trailer. IEEE Transactions on fuzzy systems,
2(2):119–134, 1994.
[21] Y. Zhang, M. Liu, W. Jianhui, S. Gu, and G. Li. Robust model predictive control for uncertain
discrete-time system with both states and input delays. In Chinese Control and Decision
Conference, number 279 - 284, 2008.
Biographies
Samah Ben Atia received her Engineering Diploma in Electric-Automatic
engineering, in 2011, and the Master degree in Automatic Control and
Intelligent Techniques, in 2012, from National School of Engineers of Gabes -
Tunisia. Currently, she is pursuing her PhD thesis at CONPRI (Research Unit
of Numerical Control of Industrial Processes at ENIG). Her areas of interest
include multimodel and multicontrol approaches for uncertain and
time-delay nonlinear systems.
Anis Messaoud received the Engineering and Master degrees in electrical
Engineers and automatic control from National School of Engineers of
Gabes-Tunisia, in 2004 and 2006 respectively. In 2010, he obtained his Ph.
D. degree in electrical-automatic engineering from the National School of
Engineers of Gabes, Tunisia. His speciﬁc research interests are in the area
predictive control of complex systems, Multimodel and Multicontrol
approaches. He is currently an associate professor in the Electric
Engineering Department in National School of Engineers of Gabes-Tunisia.
Ridha Ben Abdennour received the Doctorat de Spécialité degree from
Higher School of Technical Education in 1987, and the Doctorat d’Etat degree
from the National School of Engineers of Tunis-Tunisia, in 1996. He is
Professor in Automatic Control at the National School of Engineers of Gabes -
Tunisia. He was chairman of the Electrical Engineering Department and the
Director of the High Institute of Technological Studies of Gabes. Ridha BEN
ABDENNOUR is the Head of the Research Unit of Numerical Control of
Industrial Processes and he is the founder and the honorary President of the
Tunisian Association of Automatic Control and Digitalization. His research is
on Identiﬁcation, Multimodel & Multicontrol approaches, Numerical Control
and Supervision of Industrial Processes. He is the co-author of a book on
Identiﬁcation and Numerical Control of Industrial Processes and he is the
author of more than 300 publications. Ridha BEN ABDENNOUR participated
in the organization of many Conferences and he was member of some
scientiﬁc committees of congresses.
Authenticated
Download Date | 12/27/17 4:01 PM

Authenticated
Download Date | 12/27/17 4:01 PM

M. Allaoui, A. Messaoud and R. Ben Abdennour
Robustness Enhancement of Proportional
Q-integral Multiobserver in the Case of
Non-stationary Sinusoidal Unknown Inputs
Abstract: This paper deals with the robustness enhancement of proportional
Q-integral multiobserver in the case of non-stationary sinusoidal unknown inputs.
The multimodel approach is proposed in order to overcome the complexity problems
of nonlinear systems. The proposed multiobserver uses the multi-integral strategy in
order to provide a simultaneous estimation of the state and unknown inputs. A new
robust strategy allowing the minimization of the non-stationary sinusoidal unknown
inputs impact on the estimation error is developed. The signiﬁcance of the proposed
study is illustrated via a simulation example.
Keywords: Nonlinear systems, decoupled state multimodel, non-stationary sinusoidal
unknown inputs, multiobserver, stability.
1 Introduction
In the automation ﬁeld, the accuracy of the information on the state variables still
represents a fundamental tool that served control theory [3, 13, 14]. Indeed, control
systems require always accurate information on the processes internal states in order
to generate control laws ensuring that the process behavior follows a desired behavior
for future instants [6, 12]. Thus, it can be noted that the control loops performances
are directly related to the accuracy quality of the information on the state variables
[12, 13].
Thereafter, it is noteworthy that physical and economic restrictions prevent direct
measurements of state variables and even makes them impossible. To this end, the
use of the observers constitutes a widely adopted solution to provide accurate state
estimation [1, 4, 8, 16].
Nevertheless, the observers design still requires a dynamic model that accurately
reﬂects the process behavior. Thus, the estimation quality is proportionally tied to the
ability of the considered model to represent the process behavior.
M. Allaoui, A. Messaoud and R. Ben Abdennour: Research Unit: Numerical Control of Industrial
Processes (CONPRI), University de Gabès, Ecole Nationale d’Ingénieurs de Gabès, Université
de Gabès, Tunisie, M. Allaoui, email: allaoui.mouhib@gmail.com, A. Messaoud, email:
messaoud_anis@yahoo.fr, R. Ben Abdennour, email: ridha.benabdennour@enig.rnu.tn.
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 55–76.
DOI 10.1515/9783110470468-004
Authenticated
5:57 PM

56
|
M. Allaoui et al.
For this reason, it is wise to take into account the external phenomena, result of
process interaction with its environment, in the considered dynamic model [3, 15, 18].
Indeed, since the system cannot be isolated from its environment, it is well known
that different external dynamics, namely the unknown inputs and disturbances, can
intervene on the dynamics of the physical system. The non-consideration of these
nonmeasurable inputs leads to performance degradation of the representative model
and makes the state estimation biased and much more difficult.
For this purpose, state and unknown input estimation has been extensively
investigated and considerable attention has been drawn to the unknown input
observers for linear and nonlinear systems [1, 5, 8–10, 17, 20, 21]. This observer
undergoes structural changes compared to classical observers allowing it to take into
account these unknown inputs and provide robust and accurate estimates [4, 7].
Currently, several studies on the synthesis and design of unknown input ob-
servers for linear systems give it a certain maturity [4, 7, 8, 20, 21]. However, it is
well known that linear models are not able to represent the behavior of physical
systems that around an operating point. In fact, most physical systems have a much
more complex nonlinear behavior to represent through a linear model in a large
operating space [9]. Moreover, the consideration of nonlinear models representation
deals with several challenges. Indeed, the complexity of the adapted model rep-
resentation makes the synthesis of observers very difficult [3, 9]. In addition, any
approximation of the nonlinear characterization to a deﬁned class of nonlinearity
can lead to performance degradation as soon as the simplifying assumptions become
invalid.
To overcome these problems the multimodel approach can be an interesting
alternative [1, 5, 6, 10, 13, 14, 17, 18]. Thereafter, the multimodel approach constitutes
a very interesting mathematical representation. It is used to represent the behavior
of the nonlinear systems, whatever their complexity, by a simple structure based on
linear partial models interpolated by weighting functions [2, 11, 12, 16, 19].
This work deals with a proportional Q-integral multiobserver for discrete-time
nonlinear systems described by a decoupled state multimodel. This proposed multiob-
server is designed to decouple the state estimation error from unknown inputs which
leads to accurate estimation of both states and non-stationary sinusoidal unknown
inputs.
The outline of this paper is organized as follows. In the second section, the
decoupled state multimodel structure for the representation of nonlinear systems is
presented. The third section is devoted to the design of the proportional Q-integral
multiobserver. The fourth part illustrates the signiﬁcance of the proposed robust-
ness enhancement strategy via a simulation example. A conclusion achieves this
paper.
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
57
2 Decoupled State Multimodel Structure for the
Representation of Nonlinear systems
Consider a discrete-time non linear system described by the following decoupled state
multimodel [16] and [18]:
{
{
{
{
{
{
{
{
{
xi(k + 1)
=
Aixi(k) + Biu(k) + EeiPs(k)
yi(k)
=
Cixi(k) + EsiPs(k)
yMM(k)
=
Nm
∑
i=1
μi[ν(k)]yi(k)
(1)
where:
xi(k) ∈ℝni denotes the state vector of the i−th partial model.
yi(k) and yMM(k) ∈ℝp are respectively the output of the i−th partial model and
the multimodel output vectors.
u(k) ∈ℝm is the input vector.
Ps(k) ∈ℝl is the non-stationary sinusoidal unknown inputs characterized by its
magnitude Pm and its period Ts (the multiple integer of the sampling period).
Nm is the number of partial models.
The matrices Ai ∈ℝni×ni, Bi ∈ℝni×m, Ci ∈ℝp×ni, Eei ∈ℝni×l and
Esi ∈ℝp×l are known and appropriately dimensioned.
The breakdown of the nonlinear system operating space is performed via the
decision variable ν(k). It is assumed to be measurable and available in real time.
Thereafter, we associate to each operating zone a linear partial model.
The overlapping of these linear models, using weighting functions, ensures a
nonlinear dynamic behavior faithful to that of the real system. It should be mentioned
that these weighting functions depend on the decision variables.
They are usually selected to satisfy the following properties:
{
{
{
{
{
Nm
∑
i=1
μi[ν(k)] = 1
∀i = 1, . . . , Nm,∀k
0 ≤μi[ν(k)] ≤1,
(2)
Therefore, thanks to these properties, the contribution of the set of the linear partial
model can be considered simultaneously. This provides to the multimodel a real
nonlinear dynamic behavior rather than a piecewise linear behavior.
Authenticated
5:57 PM

58
|
M. Allaoui et al.
Generally these weighting functions can be represented by the normalized
Gaussian functions described as below:
μi[ν(k)] =
e
(−ν(k) −ci
σd
2
)
Nm
∑
j=1
e
(−ν(k) −cj
σd
2
)
,
i = 1,2, . . . , Nm
(3)
where:
ci (i = 1, . . . , Nm) are the centers and σd is the dispersion.
Within a perspective of ensuring the global convergence of the estimation error,
it is wise to consider mixed outputs of partial models during the design of the
observer. Indeed, it is worth mentioning that the interpolation of a set of stable
partial models may cause unstable multi-model and conversely. Same for observers,
the design of independent observers for each partial model can lead to an unstable
global estimation error. To overcome this problem, we propose to deﬁne the following
augmented vector:
xcf(k) = [ xT
1(k)
⋅⋅⋅
xT
i (k)
⋅⋅⋅
xT
Nm(k) ]
T ∈ℝn,
n =
Nm
∑
i=1
ni
(4)
Subsequently, a compact structure of the decoupled state multimodel (1) can be
written as follows:
{ xcf(k + 1)
=
Acf xcf(k) + Bcf u(k) + Eecf Ps(k)
yMM(k)
=
Ccf xcf(k) + Escf Ps(k)
(5)
where:
Acf =
[[[[[[[[[[
[
A1
0
⋅⋅⋅
0
0
...
...
...
Ai
...
0
0
⋅⋅⋅
0
ANm
]]]]]]]]]]
]
∈ℝn×n,
Bcf =
[[[[[[[[[
[
B1
...
Bi
...
BNm
]]]]]]]]]
]
∈ℝn×m
Ccf(k) = [μ1[ν(k)]C1 . . . μi[ν(k)]Ci . . . μNm[ν(k)]CNm] ∈ℝp×n
Eecf = [ET
e1 ⋅⋅⋅ET
ei ⋅⋅⋅ET
eNm ]
T ∈ℝn×l,
Escf (k) =
Nm
∑
i=1
μi[ν(k)]Esi
Consider the following bloc matrix, ̃Ccfi = [0 ⋅⋅⋅Ci ⋅⋅⋅0] ∈ℝp×n, and reminding the
properties of the convex sum (2), the matrix Ccf(k) can be expressed as follows:
Ccf(k) =
Nm
∑
i 1
μi[ν(k)] ̃Ccfi
(6)
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
59
3 Proportional Q-Integral Multiobserver Design for
Decoupled State Multimodel
3.1 Multiobserver Structure
In view of providing simultaneous estimation of the state and the unknown inputs
using decoupled state multimodel (1), the proportional Q-integral multiobserver
described below is exploited [1, 16] and [18].
Thus, the reconstruction of the state variables of the multimodel is performed by
the proportional multiobserver (7), however the use of integral actions (8) allows the
reconstruction of the unknown inputs.
{
{
{
{
{
{
{
{
{
̂xi(k + 1) = Aîxi(k) + Biu(k) + Eei ̂Ps0(k) + Ki [y(k) −̂yMM(k)]
̂yi(k) = Cîxi(k) + Esi ̂Ps0(k)
̂yMM(k) =
Nm
∑
i=1
μi[νi(k)]̂yi(k)
(7)
{
̂Psq(k + 1) = ̂Psq(k) + Kq [y(k) −̂yMM(k)] + ̂Psq+1(k),
q ∈[0, Q −1]
̂PsQ(k + 1) = ̂PsQ(k) + KQ [y(k) −̂yMM(k)]
(8)
where:
̂xi(k) ∈ℝni is the ith partial model state estimation vector.
̂yi(k), ̂yMM(k), y(k) ∈ℝp denote respectively the ith partial model output estima-
tion vector yi(k), the multimodel output estimation vector yMM(k) and the measured
output vector.
̂Ps0(k) ∈ℝl is the non-stationary sinusoidal unknown inputs estimation.
Ki ∈ℝni×p represents the gain of the i−th partial model.
Kq ∈ℝl×p is the gain of q−integral observer (q ∈[0, Q]).
In order to rewrite the proportional multiobserver (7) in a compact form, let us
deﬁne the following vector:
̂xcf(k) = [̂xT
1(k)
⋅⋅⋅
̂xT
i (k)
⋅⋅⋅
̂xT
Nm(k)]
T ∈ℝn
(9)
Thus, the proportional multiobserver can be rewritten as follows:
{ ̂xcf(k + 1) = Acf ̂xcf(k) + Bcf u(k) + Eecf ̂Ps0(k) + Kpcf [y(k) −̂yMM(k)]
̂yMM(k) = Ccf(k)̂xcf(k) + Escf(k)̂Ps0(k)
(10)
where ̂xcf(k) ∈ℝn is the estimated of xcf(k). Kpcf ∈ℝl×n is the gain of the augmented
proportional multiobserver.
Authenticated
5:57 PM

60
|
M. Allaoui et al.
3.2 Multiobserver Synthesis
This section deals with the estimation problem, based on the decoupled state
multimodel (4) and using the proportional Q−integral multiobserver described by (10)
and (8).
Within this framework, in order to study the convergence of the state and the
unknown inputs estimation errors, it is necessary to establish their expressions.
For this purpose, we propose ﬁrstly to deﬁne the q−th-difference operator of a
signal Ps(k):
∆(q)Ps(k) = ∆(q−1)(∆Ps(k)) = ∆(∆(q−1)Ps(k))
Furthermore, the state and the non-stationary sinusoidal unknown inputs estimation
errors are deﬁned by:
{
ex(k) = xif(k) −̂xif(k)
epq(k) = ∆(q)Ps(k) −̂Psq(k)
q = 0. . . Q
(11)
where: ∆(0)Ps(k) = Ps(k).
Thereafter, substituting the expressions of xcf(k), ̂xcf(k) given respectively by
(5) and (10) in the equation of ex(k), the dynamics of the state estimation error is
expressed as follows:
ex(k + 1) = [Acf −Kpcf Ccf(k)]ex(k) + [Eecf −Kpcf Escf(k)]ep0(k)
(12)
Other hand, using the equations (8) and (11) the dynamics of the non-stationary
sinusoidal unknown inputs estimation error is described by:
epq(k) = −KqCcf(k)ex(k) −KqEscf(k)ep0(k) + epq(k) + epq+1(k), for q ∈[0, Q −1]
(13)
epQ(k + 1) = −KQCcf(k)ex(k) −KQEscf(k)ep0(k) + epQ(k) + ∆(Q+1)Ps(k)
(14)
In order to make the representation of the dynamics of the state and the non-stationary
sinusoidal unknown inputs estimation errors and their differences in a compact form,
we propose to deﬁne the following augmented error vector:
ψ(k) = [ eT
x (k)
eT
p0(k)
⋅⋅⋅
eT
pq(k)
⋅⋅⋅
eT
pQ(k) ]
T ∈ℝϑ, ϑ = n + l(q + 1)
(15)
Using the previous augmented error vector and taking everything into account, the
dynamic of the error vector ψ(k + 1) is written as follows:
ψ(k + 1) = [Ω−Krθ(k)]ψ(k) + Π∆(Q+1)Ps(k)
(16)
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
61
where:
Ω=
[[[[[[[[[[[[
[
Acf
Eecf
0
⋅⋅⋅
0
0
Il
Il
0
0
...
...
...
...
...
...
...
...
0
...
Il
Il
0
⋅⋅⋅
0
Il
]]]]]]]]]]]]
]
∈ℝϑ×ϑ,
Kr = [ KT
pcf
KT
0
⋅⋅⋅
KT
Q ] ∈ℝϑ×p
θ(k) = [ Ccf(k)
Escf(k)
0
⋅⋅⋅
0 ] ∈ℝp×ϑ
Π = [ 0
⋅⋅⋅
0
Il ]
T ∈ℝϑ×l
Making use of the properties of the convex sum and the expression described by (6),
we can write:
φ(k) =
Nm
∑
i=1
μi[ν(k)] [Ω−Krθi]
(17)
where:
θi = [
̃Cicf
Esi
0
⋅⋅⋅
0 ]
Thereby, exploiting the previous equation the expression of the dynamic of the
augmented error (16) becomes:
ψ(k + 1) = φ(k)ψ(k) + Π∆(Q+1)Ps(k)
(18)
Examining the equation (18), we can note that the estimation error is directly affected
by the (Q + 1)th difference of the unknown input.
In this framework, for the purpose of decoupling the estimation error with respect
to unknown inputs several attempts were recorded. Indeed, concerning polynomial
unknown input with dc known degree, the perfect decoupling can be achieved by
employing dc + 1 integral actions [16, 18].
Within the same framework, when the unknown input model does not take
an exact polynomial form, the proposed condition can not provide a complete
decoupling between the unknown input and the estimation error ψ(k). Indeed, the
consideration of dc+1 integral actions allows only to decouple the inﬂuence of the
dc degrees’ polynomial part. Thereafter, the (dc + 1)−th difference of the unknown
input ∆(dc+1)Ps(k) is non-nul. Thus, the estimated state and unknown input remaining
biased and can not be perfectly accomplished. To remedy this problem, Orjuela
proposed to attenuate the non-nul part of the unknown inputs’ (dc + 1)−th difference
provided it is bounded [18].
Authenticated
5:57 PM

62
|
M. Allaoui et al.
Assumption 1: The unknown input must satisfy the following condition:
∆(Q+1)Ps(k) = σa(k), where ‖σa(k)‖2
2 < ∞
(19)
Thereafter, the equation characterizing the estimation error (18) can be rewritten as
follows:
ψ(k + 1) = φ(k)ψ(k) + Πσa(k)
(20)
Considering the equation (20), we note that the dynamics of the state estimation error
is biased by σa(k) which causes the degradation of the state estimation’s quality and
prevents the estimation error to converge towards zero.
Thus, we must take into account σa(k) in the design of the multiobserver.
Thereafter the objective signal to be attenuated is considered:
Os(k) = Mψ(k)
(21)
where: M is a matrix of appropriate dimensions. It allows to reduce the impact of σa(k)
on the components of the vector ψ(k).
Thereafter, the constraint to be satisﬁed during the synthesis of the multiobserver
can be expressed by:
✓For σa(k)
̸= 0 and Os(0)=0
‖Os(k)‖2
2 < 𝛾2 ‖σa(k)‖2
2
(22)
where: 𝛾denotes the L2 gain to be minimized. It indicates the level of attenuation
between σa(k) and Os(k).
The estimation error should tend exponentially to zero if no σa(k) acting on
the system and must ensure the performance requirement described by (22). The
convergence conditions are represented in the following theorem [16, 17] and [18]:
Theorem 1:
Consider the Assumption 1, the estimation error between the decoupled state mul-
timodel (5) and the proportional Q−integral multiobservers (8) and (10), satisfying
the requirement (22) and tend exponentially to zero (if σa (k)=0), if there exist two
matrices X = XT > 0 and W of appropriate dimensions and a scalar ̄𝛾> 0 solutions of
the following convex optimization problem:
min ̄𝛾
under the constraints :
[[
[
MTM −(1 −2α)X
0
(XΩ−Wθi)T
0
−̄𝛾I
(PΠ)T
(XΩ−Wθi)
(PΠ)
−X
]]
]
< 0, for i = 1. . . Nm
(23)
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
63
If this inequality has a solution for a given rate decay,
0 < α < 0.5
the multiobserver gain is determined by:
Kr = X−1 W
(24)
and the L2 gain 𝛾is given by:
𝛾= √̄𝛾
(25)
3.3 Simulation Results
Consider the discrete-time nonlinear system modeled by a decoupled state mul-
timodel. This multimodel is deﬁned by two heterogeneous partial models described
by:
Partial model 1:
A1 = [ −0.32
−0.04
1
0
], B1 = [ 1
0 ], C1 = [
0
0.3 ]
T
, Ee1 = [ 0.2
0.1 ], Es1 = 0.4
Partial model 2:
A2=[[
[
−0.15
0.45
0.3
−0.1
−0.7
−0.2
−0.2
0.3
−0.8
]]
]
, B2=[[
[
0.5
0.2
0.1
]]
]
, C2=[[
[
1
0
0
]]
]
T
, Ee2 =[[
[
0.1
0.2
0.3
]]
]
, Es2 =0.5
The evolutions of the input is depicted in Fig. 1.
The weighting functions μi depend on the decision variable ν(k) that is assumed
to be the input signal u(k) ∈[0,1].
Thereafter, the values of dispersion and centers are given as following:
σd = 0.2,c1 = 0.25 and c2 = 0.75
The unknown input is deﬁned by:
Ps(k) = 0.25 + Pm(k)sin( 2kπ
Ts(k))
(26)
Authenticated
5:57 PM

64
|
M. Allaoui et al.
100
200
300
400
500
600
700
800
900 1000
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
k
u(k)
Fig. 1. Evolution of the input.
where:
Pm(k) = { 0.15
if
1 ≤k < 300
or
k ≥600
0.2
if
300 ≤k < 600
Ts(k) =
{
{
{
{
{
100
if
1 ≤k < 300
75
if
300 ≤k < 600
200
else
Figure 2 shows the evolution of the unknown input.
The considered unknown input consists of two different forms, a non-stationary
sinusoidal part characterized by its maximum magnitude Pm = 0.2 and its minimum
period Ts = 75, and another polynomial part with known degree dc = 0.
Based on the proposed classical strategy, the number of integral actions necessary
to decouple the polynomial part is equal to Q = dc + 1 = 1.
By considering the decay rate α = 0.1 and M = [I(5×5) 0(5×3)] the optimal solutions
satisfying conditions of Theorem 1 are fulﬁlled with:
kr = [ 0.2940
0.2933
0.0793
0.3716
0.3378
1.6875 ]
T
(27)
with a minimal attenuation level given by 𝛾= 0.8857.
The evolution of σa(k) is depicted in Fig. 3:
The unknown input and the multimodel output estimation errors are shown in the
following ﬁgures:
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
65
100
200
300
400
500
600
700
800
900
1000
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
0.5
k
Ps(k)
Fig. 2. Evolution of the real non-stationary sinusoidal unknown input.
100
200
300
400
500
600
700
800
900
1000
−0.015
−0.01
−0.005
0
0.005
0.01
0.015
k
σa (k) = Δ(1) Ps (k)
Fig. 3. Evolution of σa (k)=∆(1)Ps(k).
The estimation errors provided by the proportional Q−integral multiobserver are
globally affected by the unknown input. We notice that the generated estimation
errors remain globally bounded but not null.
Authenticated
5:57 PM

66
|
M. Allaoui et al.
100
200
300
400
500
600
700
800
900 1000
−0.05
−0.04
−0.03
−0.02
−0.01
0
0.01
0.02
0.03
0.04
0.05
k
ePs(k)
Fig. 4. Evolution of the unknown input estimation error.
100
200
300
400
500
600
700
800
900
1000
−0.05
−0.04
−0.03
−0.02
−0.01
0
0.01
0.02
0.03
0.04
0.05
k
eyMM(k)
Fig. 5. Evolution of the multimodel output estimation error.
4 Robustness Enhancement in the Case of
Non-stationary Sinusoidal Unknown Inputs
In this section, we discuss a particular study that provides the convergence conditions
of the estimation error and ensures a good decoupling from non-stationary sinusoidal
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
67
unknown inputs even in the presence of polynomial unknown inputs with known
degree.
To this end, let us consider the sinusoidal signal speciﬁed by the above
expression:
Ps(k) = Pm sin(2kπ
Ts
+ φs)
(28)
where Pm and Ts are respectively the amplitude and the period of the sinusoidal
unknown input.
The expression of the qth difference is described via the following equations:
∆(q)Ps(k) = (−1)( q−1
2 ) [2sin( π
Ts
)]
q
Pm cos(2kπ
Ts
+ qπ
Ts
+ φs),
for odd values of q.
(29)
∆(q)Ps(k) = (−1)( q
2 ) [2sin( π
Ts
)]
q
Pm sin(2kπ
Ts
+ qπ
Ts
+ φs),
for peer values of q.
(30)
Hence, considering equations (29) and (30), we can notice that the q successive
differences of Ps(k) drifts the following term:
ς = [2sin( π
Ts
)]
q
Pm,
(31)
The term ς represents the maximum amplitude of ∆(q)Ps(k). Thereafter, to insure
the convergence of ∆(q)Ps(k) to the neighborhood of zero, we should satisfying some
conditions making ς tends to zero. Thus, it is noteworthy that there exists a limit period
Tsl which checks 󵄨󵄨󵄨󵄨󵄨󵄨2sin( π
Tsl )󵄨󵄨󵄨󵄨󵄨󵄨< 1, such as for Ts > Tsl, a judicious determination of
q ∈ℕ∗guaranteed the convergence of ς towards εd inﬁnitely small.
For any sinusoidal unknown input Psj(k) characterized by its amplitude Pmj and
its period Tsj which check:
Pmj ≤Pm
(32)
Tsj ≥Ts > Tsl
(33)
it becomes easy to deduce that:
󵄨󵄨󵄨󵄨ςj󵄨󵄨󵄨󵄨≤󵄨󵄨󵄨󵄨ς󵄨󵄨󵄨󵄨
where: ςj = [2sin( π
Tsj )]
q
Pmj
Authenticated
5:57 PM

68
|
M. Allaoui et al.
Thus, if we bring back the value of ς towards zero by determining suitably
the value of Q, we can consider that ∆(Q)Ps(k) and ∆(Q)Psj(k) converge towards εd
inﬁnitely small.
The Q value tending the Q−th difference of a non-stationary sinusoidal unknown
inputs to the neighborhood of zero can be determined by the following rule:
Q = fQ
[[[
[
log(εd) −log(Pm)
log(2sin( π
Ts
))
]]]
]
(34)
where fQ is a function that rounds the elements of r to z. z represents the nearest
integers greater than or equal to r.
The function fQ is deﬁned by:
fQ : ℝ⋆→ℕ⋆
r →z
Subsequently, for all Tsj ≥Ts > Tsl and Pmj ≤Pm, the obtained value of Q ensures the
convergence of ∆(Q)Ps(k) towards εj inﬁnitely small (εj ≤εd).
Remark 1:
The obtained value of Q reﬂects the number of integral actions ensuring a good
decoupling with respect to non-stationary sinusoidal unknown inputs (characterized
by its maximum amplitude Pm and its minimum period Ts). This value enables also
to decouple perfectly the effect of polynomial unknown inputs with a known degree
dc =Q-1. In the case where the degree of the polynomial unknown inputs dc is greater
than or equal to the number of integral actions obtained via the rule (34), we must
consider a Q number of integral actions greater than or equal to dc + 1.
Taking into account the proposed strategy, the estimation errors will be then relatively
decoupled from non-stationary sinusoidal unknown inputs and the estimation error
(18) becomes as follows:
ψ(k + 1) = φ(k)ψ(k)
(35)
Thus, the objective is to adjust the gain Kr that ensures the convergence of the
estimation error to zero and guaranteed the robustness of this error respect to
non-stationary sinusoidal unknown inputs.
The convergence conditions are represented in the following theorem [16]:
Theorem 2:
The estimation error (35) between the decoupled state multimodel (5) and the
proportional Q−integral multiobservers (8) and (10), tends exponentially to zero, if
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
69
there exist two matrices X = XT > 0 and W of appropriate dimensions solutions of the
following LMI’s:
[
(1 −2α)X
(XΩ−Wθi)T
(XΩ−Wθi)
X
] > 0, i = 1. . . Nm
(36)
If this inequality has a solution for a given rate decay,
0 < α < 0.5,
the multiobserver gain is determined by:
Kr = X−1 W
(37)
4.1 Simulation Results
Two strategies are used in order to decouple the unknown input described by equation
(26).
The strategy developed in [16] and [18], consists to decouple the inﬂuence of poly-
nomial unknown inputs while attenuating the impact of non-stationary sinusoidal
unknown inputs.
However, the proposed strategy is based on the minimization of non-stationary
sinusoidal unknown inputs’ impact while taking into account the degree of the
polynomial unknown input.
Thereafter, by ﬁxing εd = 10−3, the number of integral actions which ensures a
good decoupling and minimize the effect of the non-stationary sinusoidal unknown
inputs on the estimation error can be determined starting from equation (34). Taking
into account the characteristics of the non-stationary sinusoidal unknown inputs, the
sufficient number of integral actions is equal to Q=3.
Hereafter, in order to show the effectiveness of the proposed multiobserver, there
is provided to compare their unknown input and multimodel output estimation errors
to those provided by other estimation strategy shown in section (III-C).
Thereafter, Fig. 6 displays the evolution of the 3rd difference of Ps(k):
This ﬁgure shows that 3 integral actions make tender ∆(3)Ps(k) to ϵ0 lower than
ϵd. Subsequently, we note that these three integral actions offer a good decoupling
of the impact of the unknown input on the estimation errors contrary to the case of
consideration of one integral action that presents important values of ∆(1)Ps(k) as
shown in Fig. 3.
The evolutions of the partial models state variables, their estimates and their
estimation errors are presents in Figs. 7–11.
These ﬁgures show a good estimation because it is clearly seen that the com-
ponents of the estimated states vectors via the proportional Q−integral multiobserver
are coincided with those of the partial models. Otherwise, the estimation errors
Authenticated
5:57 PM

70
|
M. Allaoui et al.
100
200
300
400
500
600
700
800
900
1000
−0.015
−0.01
−0.005
0
0.005
0.01
0.015
k
Δ(3)Ps(k)
Fig. 6. Evolution of ∆(3)Ps(k).
100
200
300
400
500
600
700
800
900
1000
0
0.2
0.4
0.6
0.8
k
(a)
x11(k)
x11(k)
ˆ
100
200
300
400
500
600
700
800
900
1000
−0.01
−0.005
0
0.005
0.01
k
(b)
e11(k)
Fig. 7. Partial model 1: (a) Evolutions of the state 1 and its estimate (b) Evolution of the state
estimation error.
provided by the proportional Q−integral multiobserver are not globally affected by
the unknown input and can be considered negligible.
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
71
100
200
300
400
500
600
700
800
900
1000
0
0.2
0.4
0.6
0.8
k
 
 
(a)
x21(k)
ˆx21(k)
100
200
300
400
500
600
700
800
900
1000
−0.01
−0.005
0
0.005
0.01
k
 
 
(b)
e21(k)
Fig. 8. Partial model 1: (a) Evolutions of the state 2 and its estimate (b) Evolution of the state
estimation error.
(a)
100
200
300
400
500
600
700
800
900
1000
0
0.2
0.4
0.6
k
x12(k)
ˆx12(k)
100
200
300
400
500
600
700
800
900
1000
−0.01
−0.005
0
0.005
0.01
(b)
k
e12(k)
Fig. 9. Partial model 2: (a) Evolutions of the state 1 and its estimate (b) Evolution of the state
estimation error.
Authenticated
5:57 PM

72
|
M. Allaoui et al.
100
200
300
400
500
600
700
800
900
1000
0
0.05
0.1
0.15
0.2
(a)
k
x22(k)
ˆx22(k)
100
200
300
400
500
600
700
800
900
1000
−0.01
−0.005
0
0.005
0.01
(b)
k
e22(k)
Fig. 10. Partial model 2: (a) Evolutions of the state 2 and its estimate (b) Evolution of the state
estimation error.
100
200
300
400
500
600
700
800
900
1000
0
0.02
0.04
0.06
0.08
0.1
(a)
k
x32(k)
ˆx32(k)
100
200
300
400
500
600
700
800
900
1000
−0.01
−0.005
0
0.005
0.01
(b)
k
e32(k)
Fig. 11. Partial model 2: (a) Evolutions of the state 3 and its estimate (b) Evolution of the state
estimation error.
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
73
(a)
100
200
300
400
500
600
700
800
900
1000
0
0.1
0.2
0.3
0.4
0.5
k
Ps(k)
ˆPs(k)
(b)
100
200
300
400
500
600
700
800
900
1000
−0.05
−0.04
−0.03
−0.02
−0.01
0
0.01
0.02
0.03
0.04
0.05
k
ePs(k)
Fig. 12. (a) Evolutions of the non-stationary sinusoidal unknown input and its estimate (b) Evolution
of the estimation error.
100
200
300
400
500
600
700
800
900
1000
0
0.2
0.4
0.6
0.8
k
(a)
yMM(k)
ˆyMM(k)
100
200
300
400
500
600
700
800
900
1000
−0.05
−0.04
−0.03
−0.02
−0.010
0.01
0.02
0.03
0.04
0.05
(b)
k
eyMM(k)
Fig. 13. (a) Evolutions of the multimodel output and its estimate (b) Evolution of the output
estimation error.
Authenticated
5:57 PM

74
|
M. Allaoui et al.
Furthermore, the proposed multiobserver can provides an excellent non-stationary
sinusoidal unknown inputs and multimodel output estimation as plotted in Figs. 12
and 13.
These ﬁgures let appear a good quality of unknown input and multimodel output
estimation and show that the estimation errors remain to the neighborhood of zero.
Thus, comparing the estimation errors obtained via the attenuation strategy shown
in Figs. 4 and 5, to those generated by the proposed multiobserver, we note that
the proposed strategy provides a good estimation errors dynamic with a robust
performances.
5 Conclusion
In the present paper, a proportional Q−integral multiobserver is synthesized for
the simultaneous non-stationary sinusoidal unknown inputs and state estimation
of nonlinear systems described by decoupled state multimodel. The multimodel
approach is used to ensure a good compromise between the complexity of the
multiobserver synthesis and the accuracy of representation and estimation. The
stability and convergence conditions have been formulated using linear matrix
inequalities. Finally, a simulation example has provided satisfactory results in terms
of convergence of the estimation error and decoupling this estimation error from
non-stationary sinusoidal unknown inputs which shows the effectiveness of the
proposed robustness enhancement strategy.
Bibliography
[1]
M. Allaoui, A. Messaoud, M. Ltaief, and R. Ben Abdennour. Nonstationnary sinusoidal unknown
inputs multiobserver for discrete-time nonlinear systems. International Journal of Sciences and
Techniques of Automatic control & computer engineering, 8(1):1932–1949, 2014.
[2]
D. Filev. Fuzzy modeling of complex systems. International Journal of Approximate Reasoning,
5(3):281–290, 1991.
[3]
Z. Gao, T. Breikin, and H. Wang. Discrete time proportional and integral observer and
observer-based controler for systems with both unknown and output disturbances. Optimal
Control Applications and Methods, 29:171–189, 2008.
[4]
S. Ibrir. Robust state estimation with q−integral observers. In American Control Conference,
2004.
[5]
D. Ichalal, B. Marx, J. Ragot, and D. Maquin. Simultaneous state and unknown inputs
estimation with pi and pmi observers for takagi sugeno model with unmeasurable premise
variables. In 17th Mediterranean Conference on Control and Automation, MED, 2009.
[6]
D. Ichalal, B. Marx, J. Ragot, and D. Maquin. Fault tolerant control for takagi-sugeno
systems with unmeasurable premise variables by trajectory tracking. In Proceedings of IEEE
International Symposium on Industrial Electronics (ISIE), 2010.
Authenticated
5:57 PM

Robustness enhancement of proportional Q-integral multiobserver
|
75
[7]
G. P. Jiang, S. P. Wang, and W. Z. Song. Design of observer with integrators for linear systems
with unknown input disturbances. IEEE Electronics Letters Online, 36(13):1168–1169,
2000.
[8]
D. Koenig. Unknown input proportional multiple-integral observer design for linear descriptor
systems: Application to state and fault estimation. IEEE Transactions on Automatic Control,
50(2):212–217, 2005.
[9]
J. Korbicz, M. Witczak, and V. Puig. Lmi-based strategies for designing observers and unknown
input observers for non-linear discrete-time systems. Bulletin of the polish academy of
sciences technical sciences, 55(1):31–42, 2007.
[10] Zs. Lendek, J. Lauber, T. M. Guerra, R. Babuska, and B. De Schutter. Adaptive observers for
ts fuzzy systems with unknown polynomial inputs. Fuzzy Sets and Systems, 161:2043–2065,
2010.
[11] M. Ltaief, A. Messaoud, and R. Ben Abdennour. Optimal systematic determination of models’
base for multimodel representation: real time application. International Journal of Automation
and Computing, 11(6):644–652, 2014.
[12] A. Messaoud. Sur la représentation et la commande prédictive multimodèles des systèmes
complexes. PhD thesis, Ecole Nationale d’Ingénieurs de Gabès, 2010.
[13] A. Messaoud, M. Ltaief, and R. Ben Abdennour. A new contribution of an uncoupled state
multimodel predictive control: Experimental validation on a chemical reactor. International
Review of Automatic Control, 3(5), 2010.
[14] A. Messaoud, M. Ltaief, and R. Ben Abdennour. Supervision based on a multipredictor for an
uncoupled state multimodel predictive control. In The 6th International conference on electrcal
systems and automatic control, JTEA’2010, Hammamet, Tunisia, 2010.
[15] S. Mondal, G. Chakraborty, and K. Bhattacharyya. Lmi approach to robust unknown input
observer design for continuous systems with noise and uncertainties. International Journal
of control, Automation and systems, 8(2):210–219, 2010.
[16] R. Orjuela. Contribution à l’estimation d’état et au diagnostic des systèmes représentés par des
multimodèles. PhD thesis, Institue National Polytechnique de Lorraine, France, 2008.
[17] R. Orjuela, B. Marx, J. Ragot, and D. Maquin. Estimating the state and the unknown inputs of
nonlinear systems using a multiple model approach. In 16th Mediterranean Conference on
Control and Automation Congress Centre, Ajaccio, France, 2008.
[18] R. Orjuela, B. Marx, J. Ragot, and D. Maquin. On the simultaneaous state and unknown input
estimation of complex systems via a multiple model strategy. Control theory and applications,
3(7):877–890, 2008.
[19] T. Takagi and M. Sugeno. Fuzzy identiﬁcation of systems and its applications to modeling and
control. IEEE Transactions on Systems, Man, and Cybernetics, 15:116–132, 1985.
[20] A. G. Wu, G. R. Duan, and W. Liu. Proportional multiple-integral observer design for
continuous-time descriptor linear systems. Asian Journal of Control, 14(2):476–488, 2012.
[21] A. G. Wu, G. Feng, and G. R. Duan. Proportional multiple-integral observer design for
discrete-time descriptor linear systems. International Journal of Systems Science,
43(8):1492–1503, 2012.
Authenticated
5:57 PM

76
|
M. Allaoui et al.
Biographies
Mouhib Allaoui received his Engineering Diploma in Electrical and Automatic
Engineering, in June 2012, and the Master degree in Automatic Control and
Intelligent Techniques, in December 2012, from National School of Engineers
of Gabes-Tunisia. Currently, he is a Ph.D. candidate at Research Unit –
CONPRI (Numerical Control of Industrial Processes). His areas of interest deal
with multimodel and supervised multicontrol approaches, unknown inputs
multiobservers and representation of complex systems.
Anis Messaoud received the Engineering and Master degrees in electrical
Engineers and automatic control from National School of Engineers of
Gabes-Tunisia, in 2004 and 2006 respectively. In 2010, he obtained his Ph.
D. degree in electrical-automatic engineering from the National School of
Engineers of Gabes, Tunisia. His speciﬁc research interests are in the area
predictive control of complex systems, Multimodel and Multicontrol
approaches. He is currently an associate professor in the Electric
Engineering Department in National School of Engineers of Gabes-Tunisia.
Ridha Ben Abdennour received the Doctorat de Spécialité degree from
Higher School of Technical Education in 1987, and the Doctorat d’Etat degree
from the National School of Engineers of Tunis-Tunisia, in 1996. He is
Professor in Automatic Control at the National School of Engineers of Gabes -
Tunisia. He was chairman of the Electrical Engineering Department and the
Director of the High Institute of Technological Studies of Gabes. Ridha BEN
ABDENNOUR is the Head of the Research Unit of Numerical Control of
Industrial Processes and he is the founder and the honorary President of the
Tunisian Association of Automatic Control and Digitalization. His research is
on Identiﬁcation, Multimodel & Multicontrol approaches, Numerical Control
and Supervision of Industrial Processes. He is the co-author of a book on
Identiﬁcation and Numerical Control of Industrial Processes and he is the
author of more than 300 publications. Ridha BEN ABDENNOUR participated
in the organization of many Conferences and he was member of some
scientiﬁc committees of congresses.
Authenticated
5:57 PM

M. Bdiwi, J. Suchý, M. Jokesch and A. Winkler
Improved Peg-in-Hole (5-Pin Plug) Task:
Intended for Charging Electric Vehicles by
Robot System Automatically
Abstract: This paper deals with establishing of the electrical connection between a
plug and a receptacle by a robot manipulator for the purpose of charging electrical
vehicles. In general, the task of the robot for automatic charging of vehicles consists
of two phases. In the ﬁrst phase, the robot system deﬁnes the position of the charging
receptacle of the vehicle using vision or infrared system. After that in the next
phase, it starts to interact with the environment by connecting the charger plug to
the charging receptacle (socket) of the vehicle. However, this phase is not always
performed successfully, especially when the socket has complicated shape or consists
of multi cores with different sizes. In this paper we will use robot force control to
build up the connection. Additionally, an algorithm will proposed which improves
the peg-in-hole task by generating spiral motion. The proposed algorithm has shown
promising results performed on 5-pin industrial charger plug which is very hard to
peg in the socket, even for the human, because it is secure and weatherproof (the
plug should cover the whole socket cavity), moreover it has multi cores (5 pins) and
it is provided with multiple notches to avoid mismatching between similar pins. In
addition to that, the proposed algorithm has assumed that a small vision error could
be occurred during estimating the initial position of vehicle’s receptacle.
Keywords: Robot manipulator, robot force control, force/torque sensor
1 Introduction
As an alternative resource of energy in the vehicles, using of electricity is increased
massively in the new generation of automobiles. According to International Energy
Agency, Clean Energy Ministerial, and Electric Vehicles Initiative, there were over
180,000 highway-capable plug-in electric passenger cars and utility vans worldwide
until December 2012 [1]. Plug-in electric vehicles means that the batteries which store
the electric energy and power the motor are charged by plugging the vehicle socket
into an electric power source. Plug-in electric vehicles are classiﬁed into two types:
M. Bdiwi, J. Suchý, M. Jokesch and A. Winkler: M. Bdiwi, Fraunhofer Institute for Machine Tools and
Forming Technology, Germany, email: mohamad.bdiwi@iwu.fraunhofer.de , J. Suchý, University of
Matej Bel, Slovakia, email: jozef.suchy@umb.sk , M. Jokesch, Technische Universität Chemnitz,
Germany, email: michael.jokesch@etit.tu-chemnitz.de , A. Winkler, Hochschule Mittweida
University of Applied Sciences, Germany, email: alexander.winkler@hs-mittweida.de
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 77–88.
DOI 10.1515/9783110470468-005
Authenticated
5:59 PM

78
|
M. Bdiwi et al.
1. Plug-In hybrid electric vehicles (PHEVs): are powered by an internal combustion
engine that can run on conventional or alternative fuel and an electric motor that uses
energy stored in a battery. 2. All-Electric vehicles (battery electric vehicles BEVs): use
only batteries to store the electric energy that powers the motor. The batteries of both
types are requiring recharging by plugging task.
In general, typical EV charging stations require a person who removes the
charging adapter from its station and then plugs it in the vehicle’s charging socket.
As soon as the battery is recharged, he/she should pull out the charger from the
socket and return it to the charging station. The charging time could range up to
few hours depending on the battery type. Because of the relatively small amount of
stored energy in the batteries in comparison with fuel powered vehicles, it should be
charged as often as possible when parking, e.g. in public parking garages. Due to these
reasons, numerous researches and inventions are performed in order to provide these
vehicles with energy effortlessly, automatically and without any human intervention
[2], [3] and [4]. All these previous works have proposed an automatic recharging robot
system provided with either infrared or vision system for detecting the vehicle and
deﬁning the position of the charging receptacle. However, they have considered that
charging task will be successfully performed just by connecting the charger plug with
the charging socket. In other words, the problem of pegging the plug in the socket has
not been deeply discussed.
In this work we propose a robot system for charging vehicles automatically. The
robot system plugs the power automatically into the socket of the electric vehicles. This
task can be also seen as the peg-in-hole problem which has been often investigated
in robotics since many years [5], [6], [7]. In our scenario we assume that ﬁnally a
camera system identiﬁes the vehicle’s position. Going out from this initial target
position the plugging task will by executed with the help of robot force control.
This paper will focus only on this peg-in-hole task. The proposed algorithm has
assumed that a small vision error could be occurred during the estimation of the
initial position of vehicle’s receptacle. In other words, in the initial position, where the
proposed algorithm will start, the notch and the pins of the charger plug are not facing
directly the key and the holes of the charging socket. This error should be corrected
during the plugging task by robot force control. The proposed algorithm has been
applied on plug/socket type IEC 60309 which is very hard for plugging, even for the
human.
The paper is organized as follows. In the next section, the experimental setup will
be presented. After this, section 3 describes the proposed algorithm the of peg-in-hole
task. In section 4 the implementation of the proposed algorithm in a commercial
controller and the experimental results will presented. The last section contains
discussion and conclusion.
Authenticated
5:59 PM

Improved Peg-in-Hole Task: Intended for Charging Electric Vehicles by Robot
|
79
2 Experimental Setup
The experimental setup can be seen in Fig. 1. It consists of the six-axes articulated
robot KUKA KR6/2 which is controlled by the industrial robot controller of type KRC2.
The robot is equipped with the FT Delta SI-660-60 force sensor by SCHUNK. It is a six
component force/torque sensor with the effective measurement range of ±660N and
±60Nm for forces and torques, respectively. The sensor is mounted on the manipulator
ﬂange and it is protected by a pneumatic robot load limiter. The robot end-effector
consists of a two-ﬁnger-parallel gripper. With its special ﬁngers it is able to hold the
charger plug.
Froce/Toqrue Feedback
Gripper
Charger
plug
Force/torque
sensor
Charging receptacle
of vehicle
KUKA robot
KR6/2
KRL software
Robot controller
KR C2
Automatic charging
system
Fig. 1. Experimental setup.
The environment is actually industrial socket mounted on metal board. The imple-
mented environment is simulating the vehicle’s receptacle in the real application. The
proposed system should peg the charger plug in the socket automatically without any
human intervention. As already mentioned, the whole system has used also vision
system to deﬁne the initial position of the target socket. However, this paper will
handle only the problems of peg-in-hole task solved by force control.
Using a commercial robot controller, the implementation of sensor guided ro-
bot motion, e.g. force/torque control, will by sometimes difficult, because usually
industrial robots are position controlled in joint space using cascade control. The
Authenticated
5:59 PM

80
|
M. Bdiwi et al.
desired positions are provided by the trajectory generator periodically within the
interpolation cycle of the robot controller to achieve jerkless point to point or
continuous path motions. In the case of continuous path motions like linear or
circular interpolation the inverse kinematics of the manipulator have been taken
additionally into consideration to calculate the desired joint angels represented by
vector qd to achieve the desired Cartesian position/orientation Xd. For the transient
behavior of the closed loop force control it is favorable to have an access point between
trajectory generator and the joint position control loops together with the block of
inverse kinematics. Then it will be possible to inﬂuence the robot motion in force
control mode by Cartesian position correction ∆Xd. These correction values act in
addition to the values provided by the trajectory generator. This structure of robot
force control, which can be seen in Fig. 2, can be also called position based force
control [8], [9]. For the robot system chosen here, this feature is available with the
KUKA Robot Sensor Interface (RSI) [10]. RSI allows the realization of sensor guided
robot motions. It is an additional module which realizes real time signal processing
and the access to the position control loops. It is possible to create relative complex
controller structures. After having created the whole RSI structure, it is able to run in
real time with the interpolation cycle in parallel with the standard KRL (KUKA Robot
Language) program.
Trajectory
generator
Xd
qd
q
ΔXd
RSI
–
Inverse
kinematics
Decentral
joint control
Robot
Fig. 2. Access to the position control loops using RSI.
The proposed algorithm has been tested on plug/socket type IEC 60309 which is very
hard for plugging even for the human, as shown in Fig. 3. IEC 60309 plug/socket has
many safety features which make plugging task almost very difficult. It can be seen in
Fig. 3, the IEC 60309 industrial plug/socket is very secure and weatherproof, because
the plug should cover the whole socket cavity. Furthermore, pins and slots dimensions
are almost the same to permit only proper insertion of plug into socket and the ground
pin has a larger diameter than the other pins, preventing the wrong type of plug being
inserted in a socket. In addition to that, the plug could not be inserted inside the
socket unless the major keyway on the plug aligns with the notch on the socket at the
beginning. These entire issues make peg-in-hole task has many challenges. The next
section will illustrated how the robot will peg the plug recharger in charging socket
automatically even of the previous mentioned difficulties.
Authenticated
5:59 PM

Improved Peg-in-Hole Task: Intended for Charging Electric Vehicles by Robot
|
81
IEC  60309 Plug/socket
1. waterproof and secure
2. Ground pin
1
2
3
4
4. Multi cores
3. Key and notch
Fig. 3. Implemented plug/socket.
3 Proposed Algorithm
3.1 Force Control
Robot force control will be used to build up the connection between plug and socket.
In [11] we already investigate different force controllers on the robot system also
used in this paper. Although, the proportional controller with positive feedback of
the current robot end-effector position has been preferred. With respect of force
control error ∆F (input) and Cartesian position correction ∆Xd (output), of course this
controller structure has integral behavior. Integral behavior is necessary to contact
the environment successfully in the case that the robot end-effector is located in free
space. For the purpose of more simpliﬁcation it may be possible to use also pure
integral controllers.
For the present task, force control will be performed only in the translational
Cartesian DoFs, which mean that vector of desired forces Fd, vector of current forces
F and vector of force control error ∆F = Fd −F follow to:
Fd = [[
[
Fxd
Fyd
Fzd
]]
]
, F = [[
[
Fx
Fy
Fz
]]
]
, ∆F = [[
[
∆Fx
∆Fy
∆Fz
]]
]
.
(1)
In this context the vector of controller outputs is:
∆Xd = [[
[
∆xd
∆yd
∆zd
]]
]
(2)
Authenticated
5:59 PM

82
|
M. Bdiwi et al.
and the integral controllers for x, y and z-direction are represented by controller gains
kx, and ky and kz, respectively:
∆x(s)
∆Fxd(s) = kx
s ,
∆y(s)
∆Fyd(s) = ky
s ,
∆z(s)
∆Fzd(s) = kz
s .
(3)
3.2 Spiral Motion
Figure 4 illustrates the proposed algorithm for pegging the plug in the socket. As
previously explained, the initial position will be deﬁned using vision system. In this
phase, we have assumed that the vision results could contain a small error with a
maximum of approximately 1cm. The robot should correct the error automatically
with the help of force control.
When the robot has reached the initial position, then the proposed algorithm
will be activated and the robot will start to insert the plug-notch in the socket-key.
In this phase, the perpendicular axes to the socket will be pure force controlled. The
desired value of the contact force is chosen to Fzd = −25N. The desired values for
x and y-direction are set to zero (Fxd = 0, Fyd = 0). In these two axes, force control
will be additional superimposed by a spiral motion, which is illustrated in Fig. 5. This
connection between force and position control may be understood as the approach of
parallel position/force control introduces in [12].
During the spiral motion, the system tests if the notch of the plug is inserted in the
key of the socket. In the case that the current end-effector position in z-direction differs
more than 1cm from the z-coordinate of the ﬁrst environment contact, we assumed
that the notch is inserted into the key. Otherwise, if the notch is outside of the key,
the diameter of the spiral motion should be increased. The maximum diameter of
the largest circle in the spiral path in x and y-direction is 1cm. In other words, the
maximum vision error which could be corrected by the proposed algorithm is 1cm.
Hence, when the notch is inserted in the key, the robot controller has to resave the
values of the initial position of x and y in order to correct the vision error. The new
initial coordinates will be the centric position of the spiral motion in the following
subtask.
In the next phase, the proposed algorithm activates force control and spiral
motion again. Now the robot has the task to insert the cores of the plug in the holes of
the socket. Just like in the previous phase, the perpendicular axis to the socket will be
pure force controlled and x and y axes are shared position/force controlled. After every
full cycle of the spiral motion, when its diameter reaches the predeﬁned maximum,
the covered distance of the end-effector in z-direction as a result of force control has to
be analyzed. If this distance is small, e.g. smaller than 2mm, the desired force value
Fzd will be increased in steps of 25N. For the purpose of saving time, the value of
Authenticated
5:59 PM

Improved Peg-in-Hole Task: Intended for Charging Electric Vehicles by Robot
|
83
Only in x and y directions
Vision System
Peg notch in key
Peg cores in the holes
Yes
Yes
No
No
z direction is pure
force controlled
x,y directions are shared
position/force controlled
x,y directions are shared
position/force controlled
Generating spiral motion,
while:
Generating spiral motion,
while:
Fyd = O N and Fxd = O N
Inserting plug in socket
Fzd = –50N
Max_Fzd = –125N
Increase
the diameter
of spiral motion
Is notch inserted
in key
Is robot moving in
z direction
Open gripper to
release the plug
Increase
the target force
Fzd = Fzd  –25N
Is plug totally inserted
in socket
Yes
Correct x,y values of
the initial position
Return
to initial
x, y positions
No
Searching for first contact
with the socket
Fzd = –25N
Fyd = ON and Fxd = ON
z direction is pure
force controlled
Go to initial
position
Fig. 4. Peg-in-hole algorithm for connecting plug and socket.
Authenticated
5:59 PM

84
|
M. Bdiwi et al.
Spiral
motion
Initial
position
x
x, y shared
force/position
controlled
z force
controlled
z
y
Fig. 5. Spiral motion.
Fzd = 50N will be skipped. After this, the spiral motion will start again using the initial
diameter.
The peg-in-hole task is ﬁnished when the cores are inserted completely in the holes.
This situation can be detected by comparing the covered distance of the plug with the
length of the socket. Before the plug can be released by open the gripper, the contact
force in all direction should be controlled to zero to avoid any kind of damage.
In conclusion, the proposed algorithms (shared position/force control in x, y dir-
ection and pure force control in z direction) will play two main roles: 1. Compensating
the vision error in order to perform the ﬁrst inserting phase between notch of the plug
and the key of the socket. 2. According to our experiments, when the robot moves in
spiral path in x, y directions during applying force in z-direction, the required force
for pegging the plug in the socket will be signiﬁcantly less than the required force for
pegging the plug in the socket without that motion. Actually, the proposed algorithm
is inspired from the human when he/she tries to peg the plug in the socket.
4 Experimental Results
The algorithm presented in the previous section has been implemented in the robot
controller. Force control has been applied using KUKA’s RSI and the spiral motion of
the end-effector has been realized using the instruction for circular motion which is
provided by KUKA Robot Language (KRL). The controller gain of the force controller
are chosen to 0.01mmN−1 for x and y-direction and 0.075mmN−1 for z-direction,
respectively.
At the beginning of the experiment the gripper of the robot which holds the plug
is located in front of the socket. The distance between plug and socket with respect to
Authenticated
5:59 PM

Improved Peg-in-Hole Task: Intended for Charging Electric Vehicles by Robot
|
85
z-direction is approximately 1cm. Besides, for the simulation of the error of the initial
position, caused by the vision system, the plug and socket faces not exactly.
−40
−20
0
20
40
60
80
100
120
Forces F (N)
 
 
FxFy
Fz
Fzd
0
10
20
30
40
50
60
70
80
90
−10
0
10
20
30
40
50
Time (s)
Position (mm)
 
 
xy
z
Fig. 6. Forces and position during the peg-in-hole task.
Figure 6 shows the forces acting on the robot end-effector and its position during
the peg-in-hole task. In the ﬁrst phase the desired force has been set to 25N. After
approximately 5s the ﬁrst contact between plug and socket has been found. In x and
y-direction the spiral motion and zero force control work in parallel and the notch of
the plug is inserted into the key of the socket. After approximately 35s we increase the
desired force to 75N. Regarding the z-position of the end-effector, it can be seen that
the plug is inserted step by step in the socket which is a result of joint force control
and spiral motion. In the present experiment it is necessary to increase the desired
force value once gain up to 100N to insert to socket completely into the plug. This can
Authenticated
5:59 PM

86
|
M. Bdiwi et al.
be recognized on the end-effector motion from 40mm to 50mm (z-coordinate) at the
time around 80s.
Before the plug can be released by open the gripper, it may be suitable to activate
zero force control in all three translational directions. With it some tensions will be
reduced and damages will be avoided.
5 Conclusion
This paper presents an approach to build up the connection between a plug and
a socket automatically by a robot manipulator. In the future it should be used for
charging electrical vehicles e.g. in public parking garages.
We have been assumed that the approximately position of the socket at the car
can be detected by a vision system. Our approach deals only with the insertion of the
plug into the socket. For this purpose we prefer the combination of force control and a
spiral motion of the plug, which can be understood as parallel or shared force/position
control.
For the veriﬁcation of the proposed algorithm a test bed was conﬁgured, which
consist of an articulated robot and a pillar which contains an industrial electric socket.
In the experiment we show that the robot which holds the corresponding industrial
plug is able to insert the plug into the socket successfully. However, there are some
further efforts:
So we could determine in the experiments that the proposed algorithm is some-
thing sensitive with respect to the parameters of the spiral motion e.g. the velocity and
the acceleration of the circular parts. From this point of view it seems to be necessary
to investigate the parameterization of the motion commands and the force controllers
with the aim to make the peg-in-hole process faster and more robust.
Bibliography
[1]
iea (International Energy Agency, Clean Energy Ministerial, and Electric Vehicles Initiative)
Global EV Outlook 2013 - Understanding the Electric Vehicle Landscape to 2020. April, 2013.
[2]
S. Hollar and E. Hollar.
United States patent No. 7,999,506B1, System to Automatically
Recharge Vehicles with Batteries. 2011.
[3]
K. Cornish. United States patent No. 2012/0233062 A1, Method and Process for an Electric
Vehicle Charging System to Automatically Engage the Charging Apparatus of an Electric
Vehicle. 2012.
[4]
P. Joshué, F. Nashashibi, B. Lefaudeux, P. Resende and E. Pollard. Autonomous Docking Based
on Infrared System for Electric Vehicle Charging in Urban Areas. Sensors, 13:2645–2663, 2013.
[5]
S. N. Simunovic. Parts mating theory for robot assembly. In Proc. of the 9th International
Symposium on Industrial Robots, 183–193, 1979.
Authenticated
5:59 PM

Improved Peg-in-Hole Task: Intended for Charging Electric Vehicles by Robot
|
87
[6]
I. Godler, Y. Takahashi, K. Wada and R. Katoh. Peg-and-hole task by robot with force sensor:
Simulation and experiment. In Proc. of the International Conference on Industrial Electronics,
Control and Instrumentation, 2:980–985, 1991.
[7]
S. Jörg, J. Langwald, J. Stelter, G. Hirzinger and C. Natale. Flexible Robot-Assembly using
a Multi-Sensory Approach. In Proc. of the IEEE International Conference on Robotics and
Automation, 4:3687–3694, 2000.
[8]
J. De Schutter and H. Van Brussels. Compliant Robot Motion II. A Control Approach Based on
External Control Loops. International Journal of Robotics Research, 7(4):18–33, 1988.
[9]
E. Dégoulange and P. Dauchez. External Force Control of an Industrial PUMA 560 Robot. Journal
of Robotic Systems, 11(6):523–540,1994.
[10] KUKA Roboter GmbH. KUKA.RobotSensorInterface (RSI) 2.1, 2007.
[11] A. Winkler and J. Suchý. Position Feedback in Force Control of Industrial Manipulators – An
Experimental Comparison with Basic Algorithms. In Proc. of IEEE International Symposium on
Robotic and Sensors Environments, 31–36, 2012.
[12] S. Chiaverini and LSciavicco. The Parallel Approach to Force/Position Control of Robotic
Manipulators. IEEE Transactions on Robotics and Automation, 9(4):361–373, 1993.
Acknowledgment: The investigations presented in this paper were funded by the
Federal Ministry of Education and Research of Germany under the project number
03IPT505A. The responsibility with respect to the content of the publication has the
authors.
Biographies
Mohamad Bdiwi received the Bachelor degree in Control and Automation
Engineering from Aleppo University in Syria, 2007. He received his Ph.D.
degree in Robotic Systems Department at Chemnitz Technical University,
Chemnitz, Germany, in 2014. The research ﬁeld of Dr. Bdiwi is oriented
toward human robot interaction, visual servoing and force control. He works
since 3 years as project manager in Fraunhofer Institute IWU in Chemnitz,
Germany.
Jozef Suchý received his Ing. and PhD. Degrees in electrical engineering from
Slovak University of Technology in Bratislava, Slovakia in 1973 and 1978,
respectively. Until 1996 he was with the Institute of Control Theory and
Robotics, Slovak Academy of Science, Bratislava. Until April 2015 he was
professor and head of the Department of Robotic Systems, Faculty of
Electrical Engineering and Information Technology, University of Technology
Chemnitz, Germany. Since April 2015 he is with the Department of Computer
Science, Faculty of Natural Science, University of Matej Bel, Banská Bystrica,
Slovakia.
Authenticated
5:59 PM

88
|
M. Bdiwi et al.
Michael Jokesch received the Bachelor of Science (B.Sc.) degree in electrical
engineering and the Master of Science (M.Sc.) degree in energy and
automation systems from Technische Universität Chemnitz, Germany, in
2011and 2013, respectively. Currently he works as a researcher at the
department of Robotics and Human-Machine-Interaction, Faculty of Electrical
Engineering and Information Technology, Technische Universität Chemnitz.
Alexander Winkler received the Dipl.-Ing., Ph.D. and State doctorate degrees
in electrical engineering / automation from Technische Universität Chemnitz,
Germany, in 2000, 2006 and 2015, respectively. Until 2014, he was with the
Department of Robotic Systems, Faculty of Electrical Engineering and
Information Technology, Technische Universität Chemnitz, Germany. He is
currently a Professor with the Department of Automation, Hochschule
Mittweida, University of Applied Sciences, Mittweida, Germany.
Authenticated
5:59 PM

L. Sellami, S. Zidi and K. Abderrahim
Active Mode Estimation via Clustering
Algorithm for Switched Linear Systems
Abstract: The work presented in this paper deals with the active mode identiﬁcation
problem for switched linear systems based on a measurement data set. This problem
is an issue closely related to the classiﬁcation problem of input–output measure data.
Indeed, each data group associated with their most appropriate sub-model presents a
mode (discrete state) of operation. Therefore, we propose a method for discrete state
estimation based on a clustering algorithm combined with a decision mechanism. The
clustering algorithm provides the class centers which will be exploited by the decision
mechanism in order to identify the discrete state. Simulation results are presented to
illustrate the performance of the proposed method.
Keywords: Switched linear systems, System Identiﬁcation, Mode estimation, Cluster-
ing algorithm.
1 Introduction
In several innovative technologies, the interaction increasingly important between
physical processes (evolution models involving continuous signals) and digital pro-
cesses (computers, software, logic components, etc.) led in automatic, to the appear-
ance and the construction of the so-called hybrid systems [1, 2]. Hybrid systems are
deﬁned as dynamic systems do explicitly and simultaneously interact nature phe-
nomena both continuous and event (discret). The mode knowledge representing the
discrete dynamic evolution of the hybrid dynamic systems at any instant is a decisively
information which enables a simpliﬁed application of the various results coming from
the ﬁelds of identiﬁcation, control, stability analysis, and state estimation. This paper
addresses the problem of discrete state estimation of switched linear systems a class
of hybrid systems whose continuous dynamics is deﬁned by a discrete-time state
model. There are two methods for identiﬁcation. The ﬁrst technique, called a offline
estimation method, consist in identify the discrete state over a observation horizon N
of data. Thus, the continuous state x(k) estimation, modeling continuous dynamic,
is based on the technique developed in [10]. However, the second technique is online
and simultaneous estimate of discrete state and continuous state such as in [3].
L. Sellami, S. Zidi and K. Abderrahim: L. Sellami, National Engineering school of Gabes, University
of Gabes, Tunisia, email: sellami_lamaa@yahoo.fr , S. Zidi, College of Business and Economics,
Qassim University, KSA, email: S.Zidi@qu.edu.sa , K. Abderrahim, National Engineering school of
Gabes, University of Gabes, Tunisia, email: kamelabderrahim@yahoo.fr
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 89–104.
DOI 10.1515/9783110470468-006
Authenticated
5:59 PM

90
|
L. Sellami et al.
Numerous methods have been proposed to solve this problem. The approach
presented in [4], for linear switched system a class of SDH, is based on an application
of the Multivariable Output-Error State Space (MOESP) identiﬁcation technique [5] for
the estimation of sub-models, in a noisy environment. In this approach, the authors
assume that the discrete state and the number of sub-models are known a priori.
Further, the switching instants are separated by a minimum dwell time. In [6], the
considered model does not suffer of state databases matching problem such as a
switched linear systems model. Indeed, the different linear sub-models do not interact
but they evolve independently of each other so that one can represent each of them in
an arbitrary base. But the application of the presented method for the identiﬁcation
of this model (according to the authors formulation) may require a very important
dwell time. Thus, there are many work in different search domain such as works of
identiﬁcation [4, 6], control [15, 16], stability analysis [10, 12–14] and state estimation
[8, 9], make the knowledge of the switching mechanism as a basic assumption.
However, other researchers have opted recently to other approaches based on
artiﬁcial intelligence, learning and classiﬁcation. These new methods showed quite
encouraging results for several automatic issues. Boukharouba [7] proposed a model-
ing approach of hybrid systems based on the classiﬁcation. In this work, the switching
mechanism is modeled by a piecewise linear functions deﬁning the validation
boundaries of each sub-models. The parameters adaptation of these functions is
provided by a new incremental and decremental classiﬁcation algorithm multi-class
support vector. Ackerson and Fu [18] are the ﬁrst which considered the determination
problem of the active mode through state estimation in noisy environment. A recent
result for Markov jump linear system (MJLS) a class of hybrid system, developed
in [17], is presented to the state estimation in the presence of polyhedral bounded
disturbances. The approaches [19–21] are proposed to identify the switching instants
for a class of switched linear systems described in the state form. In these works, a
identiﬁcation recursive algorithm and dynamic classiﬁcation algorithm are used to
estimate the discrete state.
In this paper, a offline estimation method of activate mode for the discrete-time
linear switched systems is proposed from a ﬁnite data set. The proposed method is
based on two stages. First, a clustering technique selects the representative points
of different classes (submodels). Second, this points will be used by a decision
mechanism in ordre to identify the mode (discrete state). Indeed, the discrete state is
determined by the minimum value of s criteria which involves the difference between
the system output and the center of the appropriate class.
The paper has the following structure. Section 2 deals with the problem formu-
lation. The active mode estimation is developed in section 3, and the continuous
dynamic estimation is presented in section 4. In section 5,we present the simulations
in order to illustrated the effectiveness of the proposed method.
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
91
2 Problem Formulation
We consider a class of hybrid dynamics systems described by the following state space
model:
{ x(k + 1) = Aix(k) + Biu(k)
y(k) = Cix(k)
(1)
where i ∈S = {1, . . . , s} is the discrete state of the system, s is the number of submodels,
x(k) ∈Rn, y(k) ∈R and u(k) ∈R are respectively the continuous state, the output and
the input of the system, Ai, Bi and Ci are the parameter matrices associated with the
submodel indexed by i.
Given data {x(k), y(k)}N
k=1 generated by a switched linear model of the form as in
(1), we are interested in determining a comportement model of switched linear system.
To deal with this problem, we make the following assumptions:
(i)
No model has been speciﬁed for the switching mechanism. In fact, the switches
can be exogenous, deterministic, state-driven, event-driven, time-driven or totally
random.
(ii) The order n is the same for all submodels and unknown.
(iii) The number of submodels s is unkown.
Input-output measurement
{y(k), u(k)}
N
k = 1
Classification
procedure 
Decision
mechanisme  
Decision variables
{centeri }
s
i = 1
Identification procedure
Fig. 1. Structure of the proposed estimation method.
Authenticated
5:59 PM

92
|
L. Sellami et al.
According to Fig. 1, the active mode estimation based on a classiﬁcation procedure
and a decision mechanism. The classiﬁcation procedure provides the class centers
(φ∗
1, φ∗
2, . . . , φ∗
s ) which will be exploited by the decision mechanism in order to
identify the discrete state
̂q(k). However, to estimate the continuous dynamic, we
use the switched observer approach. The stability analysis of the switched linear
observer involves a Poly-Quadratic stability principle [11]. This concept allows to check
asymptotic stability of the state vector estimation ̂x(k) by mean of polytopic quadratic
Lyapunov functions.
3 Active Mode Estimation
Most of existing methods consist in estimating the active discrete state using a set
of data deﬁned on an observation horizon. This set is assumed to be pure i.e the
elements of this set are generated by the same submodel. However, this assumption
is far from being achieved in practice because these elements may be generated by
several submodels. To overcome this problem, they introduce the concept of dwell
time to ensure that the data belong to the same submodel.
In this paper, we propose a novel approach which consists in associating the
current output y(k) to its appropriate submodel. This assignment is insured thanks
to a clustering algorithm.
3.1 Cluster Centers Selection
We suggest the use of the Chiu’s clustering algorithm [17, 19], also called the method
of mountains [20, 21]. In this work, we extended this method to classify a set
of regression’s vectors φ(k)(φ(k) = [y(k) y(k −1) u(k −1)]T, k = 1, . . . , N) [28, 29]
which consists in associating to each φ(k) a potential Pk deﬁned by:
Pk =
N
∑
l=1
l ̸=k
exp(−4󵄩󵄩󵄩󵄩φ(k) −φ(l)󵄩󵄩󵄩󵄩
2
r2a
).
(2)
where ra is a positive coefficient that control the decay of the potential. Indeed,
the potential decreases exponentially when φ(l) moves away to φ(k). Otherwise,
the coefficient ra deﬁnes the radius of a class. The ﬁrst class center, denoted φ∗
1 is the
data whose potential P∗
1, expressed by equation (5), is the maximum. The potential of
the neighborhood points of the center while gradually decreasing away from the latter.
To avoid selecting the data in the neighborhood of the center φ∗
1 as other centers of
classes, the classiﬁcation procedure changes the value of each potential given by the
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
93
following formula:
Pk ←Pk−1 −P∗
1exp(−4󵄩󵄩󵄩󵄩φ(k) −φ∗
1
󵄩󵄩󵄩󵄩
2
r2
b
).
(3)
The parameter rb (rb > 0) must be strictly greater than ra to promote the operation
on the selection of other distinctly different classes of ﬁrst and its close. The center
of second class is selected as the data having the maximum modiﬁed potential
given by relation (6). Let φ∗
2 the second center and P∗
2 the associate modiﬁed
potential.
Similarly, we selected the cth center φ∗
c having P∗
c as a potential and the potentials
are modiﬁed by the following formula:
Pk ←Pk−1 −P∗
c exp(−4󵄩󵄩󵄩󵄩φ(k) −φ∗
c 󵄩󵄩󵄩󵄩
2
r2
b
).
(4)
Chiu introduced two positive parameters ε1 and ε2 (ε1 > ε2) to condition the choice
of centers. Indeed, the decision of the selection procedure of the various centers of
classes obeyed, at each step, the following inequalities:
–
If P∗
c > ε1P∗
1 ⇒selection authorized.
–
If P∗
c < ε2P∗
1 ⇒selection achieved.
–
If ε2P∗
1 ≤P∗
c ≤ε1P∗
1 and if:
Min(󵄨󵄨󵄨󵄨φ∗
c −φ∗
1
󵄨󵄨󵄨󵄨,󵄨󵄨󵄨󵄨φ∗
c −φ∗
2
󵄨󵄨󵄨󵄨, . . . ,󵄨󵄨󵄨󵄨φ∗
c −φ∗
c−1
󵄨󵄨󵄨󵄨)
ra
≤1 −P∗
c
P∗
1
where φ∗
c is the current center and φ∗
1, φ∗
2, ..., φ∗
c−1 are already the selected centers.
The center to retain corresponds, in these conditions, to the maximum value of
potentials after rejection of the current value P∗
c (the value of P∗
c was set to zero).
3.2 Decision Mechanism
Once the centers φ∗
c of classes are selected, we proceed in estimation of discrete state
such as the index of the submodel that generated the pair of data (u(k), y(k)) in the
sense of a certain decision criterion Ji (k) designed by:
̂q(k) =
arg
i=1,...,s
minJi (k).
(5)
The criterion Ji (k) can be chosen in many different ways. Since no model has been
speciﬁed for the discrete state dynamics in switching linear system (1). To assignment
of the elements φ(k) to appropriate class, we proceed in a simple calculation of
Authenticated
5:59 PM

94
|
L. Sellami et al.
distances dki between each point φ(k) of these centers φ∗
i for i = 1, . . . , s.
dki = 󵄩󵄩󵄩󵄩φ(k) −φ∗
i
󵄩󵄩󵄩󵄩2
for i = 1, . . . , s
(6)
φ(k) belongs to the class whose the center corresponds to the distance minimum
dkc = min
i=1,...,s(dki). In practice, the normalized distance dkin given by the relation (6)
are considered.
dkin =
dki
󵄩󵄩󵄩󵄩φmax −φmin󵄩󵄩󵄩󵄩2
for i = 1, . . . , s
(7)
φmax and φmin are respectively the maximum and minimum values of the data φ(k).
Thus, Ji (k) is can be expressed here as a normalized distance, given by equation (7).
Before summarizing the discrete state estimation algorithm, we must take the
following assumption.
Assumption 1 At each instant index k and for any couple (i, j) of discrete states
indexes,
Ji (k) = Jj (k) ⇒i = j.
(8)
The objective of assumption 1 is obviously to remove any ambiguity in the inference
of the discrete state if the true submodel are exactly known.
In summary, the proposed approach consists of two steps: one is an offline
procedure which allows to determine the class centers using the Chui’s algorithm and
two is an online operations which consists in estimating the discrete state based on
the exploitation of the class centers via a decision mechanism.
algorithm 1 : Discret state estimation
Offline part:
Inputs: data {y(k), u(k)}N
k=1
Calculate the potential Pk as in (2) for k = 1, . . . , N
Select the ﬁrst center y∗
1
repeat
Calculate the modiﬁed potential as in (3)
Select the cth center
until (ε2P∗
1 ≤P∗
c ≤ε1P∗
1) and ( Min(|y∗
c −y∗
1|,|y∗
c −y∗
2|,...,|y∗
c −y∗
c−1|)
ra
≤1 −P∗
c
P∗
1 )
Online part:
for k = 1, . . . , N do
Compute criteria Ji (k) as in (3) for i = 1, . . . , s
Estimate the discrete state ̂q(k) such as J ̂q(k) (k) = min
i=1,...,sJi (k)
end for
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
95
4 Continuous Dynamic Estimation
The continuous behavior of hybrid dynamic system, considered in this paper, is
modeled by a switched observer whose the dynamic is expressed as follow:
{
̂x(k + 1) = Ai ̂x(k) + Bu(k) + Li (y(k) −̂y(k))
̂y(k) = Ci ̂x(k)
.
(9)
The gain matrices Li, i = 1, . . . , s, have to be computed such that the estimation
state
̂x(k) is asymptotically converged to the system state x(k) whatever the initial
conditions, i.e:
∀ε(0) ∈Rn lim
k→∞ε(k) = 0.
(10)
where ε(k) = x(k)−̂x(k) is the estimation error and it’s dynamic behaviors deﬁned by:
ε(k + 1) = (Ai −LiCi)ε(k).
(11)
The switched observer design reduces to the computation of the gain matrices Li,
i ∈{1, . . . , s}, ensuring the asymptotic stability for the switched system (10). To solve
this problem, we use the concept of Poly-Quadratic stability [11]. This reduces to check
stability by mean of particular quadratic Lyapunov functions tacking into account the
switching nature of system (1). To recall this concept, the estimation error dynamic
becomes:
ε(k + 1) =
̃A(ξk)ε(k).
(12)
The structure of dynamical matrix
̃A is assumed to depend in polytopic way on the
parameter ξk:
̃A(ξk) =
s
∑
i=1
ξ i
k ̃Ai.
(13)
where
̃Ai = Ai −LiCi
and the components of the parameter vector ξk appear as indicator functions
given by [9]:
ξ i
k =
{
{
{
{
{
1
when the switched system
is described by matrix Ai
0
otherwise
(14)
with i ∈{1, . . . , s} and
ξk = [ξ1
k , . . . , ξ s
k]
Authenticated
5:59 PM

96
|
L. Sellami et al.
To check asymptotic stability of system (11), Poly-quadratic stability uses Lyapunov
function with a polytopic structure similar to that of the system description:
V (ε(k), ξk) = εT (k)P(ξk)ε(k),
with P(ξk) =
s
∑
i=1
ξ i
kPi
(15)
where Pi, i = 1, . . . , s, are symmetric positive deﬁnite constant matrices of appro-
priate dimensions. Using this fact, the following theorem gives sufficient condition to
built such a switched observer.
Theorem [9] If there exist symmetric matrices Si, matrices Fi and Gi solutions of:
( Gi + G󸀠i −Sj
Gi󸀠Ai −Fi󸀠Ci
Ai󸀠Gi −Ci󸀠Fi
Si
) > 0
∀(i, j) ∈{1, . . . , s}2
(16)
then a switched observer (8) for system (1) exists and the resulting gains Li are
given by Li = G󸀠−1
i
F󸀠
i with Pi = S−1
i .
5 Numerical Examples
We now present two simulation examples to illustrate the performance of the
proposed method.
5.1 Example 1
In this ﬁrst example, a switched linear system presented is composed of two-mode
where the dynamics are governed by the following equations [14]:
A1 = [ 0.5
1
0
0.5 ] ,
B1 = [ 0
1 ]
C1 = [ 1
0 ]
if
u(k) < 0
A2 = [
0.7
1
−0.5
0.5 ] ,
B2 = [ 0
1 ]
C2 = [ 1
0 ]
if
u(k) ≥0
(17)
The control signal considered, in this simulation, is given in the Fig. 2. It is easy to
remak that the evolution of the switched signal is randomly.
For camputing the gains of the continuous observer, the LMI (16) is feasible, we
obtain:
L1 = [ −0.0942
0.1413
] ,
L2 = [
0.0982
−0.2201 ]
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
97
50
100
150
200
250
300
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
control signal
k
Fig. 2. The switched signal evolution.
The state and the estimated state evolutions are depicted in Fig. 4 which shows the
estimated states tracks the true states. Figure 3 illustrates the estimation error evolu-
tions. We remark that these errors converges to zeros which proves the performance
of the proposed method.
0
50
100
150
200
250
300
−6
−4
−2
0
2
4
6
8
0
50
100
150
200
250
300
−3
−2
−1
0
1
2
3
4
5
x1(k)
x1(k)
ˆ
x2(k)
x2(k)
ˆ
k
k
Fig. 3. The state vector evolution and its estimated.
Authenticated
5:59 PM

98
|
L. Sellami et al.
0
50
100
150
200
250
300
0
50
100
150
200
250
300
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
the evolution of e1
the evolution of e2
k
k
Fig. 4. The state vector’s estimation errors.
5.2 Example 2
This second example illustrates the state estimation of a system having three states
given by [8]. The parameter matrices are given as follow:
A1 = [[
[
−0.84
0
0.27
0.38
−0.33
0.07
−0.1
0.55
0.44
]]
]
,
B1 = [[
[
0.11
0.28
0.52
]]
]
C1 = [ 0.62
0.77
0.82 ],
if x3 (k) ≥0
A2 = [[
[
−0.39
0.07
−0.13
0.90
−0.39
−0.41
0.51
−0.32
0.59
]]
]
,
B2 = [[
[
0.25
0.14
0.92
]]
]
C2 = [ 0.19
0.62
0.51 ]
if x3 (k) < 0
(18)
In this example, we applied the input sequence to be the realization of a random vector
process Fig. 2.
The behavior of the discrete state estimation and the real mode evolution, are
presented in Fig. 5, prove the viability of the proposed method to identify the discrete
state.
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
99
50
100
150
200
250
300
0.5
1
1.5
2
2.5
0.5
1
1.5
2
2.5
the evolution of real mode
50
100
150
200
250
300
the evolution of estimed mode
k
k
Fig. 5. Upper plot: The real mode. Lower plot: The estimation mode.
0
50
100
150
200
250
300
−1
−0.5
0
0.5
1
−0.5
0
0.5
1
1.5
−3
−2
−1
0
1
2
3
x1(k)
ˆx1(k)
x2(k)
ˆx2(k)
x3(k)
ˆx3(k)
k
0
50
100
150
200
250
300
k
0
50
100
150
200
250
300
k
Fig. 6. The evolution of state vector’s components and their estimated.
Authenticated
5:59 PM

100
|
L. Sellami et al.
0
50
100
150
200
250
300
0
50
100
150
200
250
300
0
50
100
150
200
250
300
0
0.5
1
1.5
the evolution of e1
0
0.2
0.4
0.6
0.8
the evolution of e2
0
0.1
0.2
0.3
0.4
0.5
the evolution of e3
k
k
k
k
k
Fig. 7. The estimation error of state vector.
The LMI (16) is feasible. The continuous observer’s gains are given as follow:
L1 = [[
[
−0.5231
0.1735
0.3472
]]
]
,
L2 = [[
[
−0.2045
0.1750
0.5465
]]
]
Figures 6 and 7 gives respectively the evolutions of the state vector and the estimated
state vector and the state vector estimation errors. We ﬁnd the asymptotic convergence
of the estimation errors for all components of the state vector.
6 Conclusions
In this paper, we developed a new method for the actif mode estimation for the
switched linear systems described in the space state form. This approach is an offline
estimation method, it’s consists in identify the discrete state over a observation
horizon N from a ﬁnite data set based on two stages. First, we exploit a Chiu clustering
algorithm to determine the number of classes and these centers. Then, the class
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
101
centers will be explored by a decision mechanism in ordre to identify the mode
(discrete state). In fact, the discrete state is determined by the minimum value of s
criteria which involves the difference between the system output and the center of the
appropriate class. Simulation results are presented to illustrate the performance of the
proposed method.
Bibliography
[1]
M. Egerstedt and B.M (Eds), Hybrid systems, Computation and Control (HSCC) Proceedings of
HSCC 2008, Springer Verlag, St. Louis MO, USA, 2008.
[2]
B. De Schutter and W. Heemels and A. Bemporad, Equivalence of hybrid dynamical models,
Automatica, vol(37), pp 1085–1091, 2001.
[3]
L. Sellami and K. Abderrahim, Classiﬁcation and statistical learning for detecting of switching
time for switched linear systems, Journal of Innovation in Digital Ecosystems, vol (2), pp 13–19,
2015.
[4]
V. Verdult and M. Verhaegen, Subspace identiﬁcation of piecewise linear systems, In
Conference on Decision and Control, Atlantis, Paradise Island, Bahamas, 2004.
[5]
M. Verhaegen, Subspacemodel identiﬁcation part 3: Analysis of the ordinary output-error
statespace model identiﬁcation algorithm. International Journal of Control, 58, pp 555–586,
1993.
[6]
K. M. Pekpe, G. Mourot, K. Gasso, and J. Ragot, Identiﬁcation of switching systems using
change detection technique in the subspace framework, In Conference on Decision and Control,
Atlantis, Paradise Island, Bahamas, 2004.
[7]
K. Boukharouba, Modélisation et classiﬁcation de comportements dynamiques des systèmes
hybrides, Ph.D., University of Science and Technology of Lille1, 2011.
[8]
A. Alessandri and P. Coletta, Design of observers for switched discrete time linear systems, in
Proceedings of the 2003 American Control Conference, Denver, CO, USA, pp 2785–2790, 2003.
[9]
F. Bejarano, A. Pisano, and E. Usai, Finite-time converging jump observer for switched linear
systems with unknown inputs, Nonlinear Analysis: Hybrid Systems, vol. 5, no. 2, pp 174–188,
2011.
[10] J. Daafouz, G. Millerioux and C.A Iung, poly-quadratic stability based approach for linear
switched systems, Special Issue of Mathematics and Computers in Simulation 58, march 2002,
pp 295–307.
[11] L. Daafouz and J. Bernussou, Parameter dependent lyapunov functions for discrete time
systems with time varying parametric uncertainties Journal of Systems and Control Letters
43/5,pp 355–359, August 2001.
[12] A.A. Agrachev and D. Liberzon, Lie-algebraic stability criteria for switched systems, SIAM J.
Control Optim., vol. 40, No. 1, pp 253–269, 2001.
[13] U. Boscain, Stability of planar switched systems: the linear single, input case, SIAM J. Control
Optim., vol. 41, No. 1, pp 89–112, 2002.
[14] M.S. Branicky, Multiple Lyapunov functions and other analysis tools for switched and hybrid
systems, IEEE Trans. Automat. Control, vol. 43, No. 4, pp 475–482, 1998.
[15] Z. Sun, S. Ge and T. Lee, Controllability and reachability criteria for switched linear control,
Automatica, vol. 38, pp 775–786, 2002.
[16] G. Xie, D. Zheng and L. Wang, Controllability of switched linear systems, IEEE Trans. Automat.
Control, vol. 47, No. 8, pp 1401- 1405, 2002.
Authenticated
5:59 PM

102
|
L. Sellami et al.
[17] Hao Wua, Wei Wanga, Hao Yea and Zidong Wanga, State estimation for Markovian Jump Linear
Systems with bounded disturbances, In Automatica 49, pp 3292–3303, 2013.
[18] G. A. Ackerson and K. S. Fu, On state estimation in switching environnements, IEEE
Transactions on Automatic Control, vol. 15, No. 1, pp 10–17, 1970.
[19] D. Mincarelli, T. Floquet and L. Belkoura, Active mode and switching time estimation for
switched linear systems, 50th IEEE Conference on Decision and Control and European Control
Conference (CDC-ECC) Orlando, FL, USA, 2011.
[20] R.V. Lopes, G.A. Borges and J.Y. Ishihara, New Algorithm for Identiﬁcation of Discrete-Time
Switched Linear Systems, American Control Conference (ACC) Washington, DC, USA, 2013.
[21] Y. Tian, T. Floquet, L. Belkoura and W. Perruquetti, Switching time estimation for linear
switched systems: an algebraic approach, 48th IEEE Conference on Decision and Control and
28th Chinese Control Conference, ShangHai, China, 2009.
[22] L. Daafouz and J. Bernussou, Parameter dependent lyapunov functions for discrete time
systems with time varying parametric uncertainties Journal of Systems and Control Letters,pp
355–359, August 2001.
[23] F. Rosenqvist and A. Karlström, Realisation and estimation of piecewise-linear output-error
models, Automatica 41, pp. 545–551, 2005.
[24] S.L. Chiu, Fuzzy model identiﬁcation based on cluster estimation, Journal of intelligent and
fuzzy systems 2, pp. 267–278, 1994.
[25] A. Shigeo, Neural networks and fuzzy systems theory and applications, Kluwer Academic
Publishers, 1997.
[26] R.R. Yager and D.P. Filev, Approximate clustering via the mountain method, IEEE Transactions
on Systems, Man and Cybernetics 24, no. 8, pp 1279–1284, 1994.
[27] R.R. Yager and D.P. Filev, Generation of fuzzy rules by mountain clustering, Journal of
intellegent and fuzzy systems 28, pp 209–219, 1994.
[28] M. Ltaief, K. Abderrahim, R. Ben Abdennour and M. Ksouri, Contributions to the multimodel
approach: systematic of a model’s base and valities estimation, Journal of Automation and
System Engineering 2, 2008.
[29] M. Ltaief, A. Messaoud and R. Ben Abdennour, Optimal Systematic Determination of
Models’Base for Multimodel Representation: Real Time Application, International Journal of
Automation and Computing, vol 11(6), pp 644–652, 2014.
Biographies
Lamaa Sellami received her engineer degree in electrical-automatic
engineering and the M. Eng. degree in automatic and smart techniques from
the National School of Engineers of Gabes (ENIG), Tunisia in 2005 and 2007,
respectively. Currently, she is a Ph. D. candidate at Research Unit of
Numerical Control of Industrial Processes (CONPRI), University of Gabes,
Tunisia. Her research interests include hybrid system and identiﬁcation.
Authenticated
5:59 PM

Active mode estimation via clustering algorithm for switched linear systems
|
103
Salah Zidi has got his Master in new technologies of dedicated IT systems in
2004 from National Engineering School of Sfax (ENIS), (Tunisia) and his PhD
in information systems and computer science in 2007 from University of
Sciences and Technologies of Lille (France). He has been a Head of Research
& Development at Archimed Group in France between 2010 and 2014. Before
that, he has been an assistant professor of computer science at University
Lille 1−France since 2007. He has joint college of business and economics at
Qassim University since 2014. He published papers in peer-reviewed
journals and has several papers published in international journals and
many research projects in progress.His research interests cover topics like
Artiﬁcial intelligence, classiﬁcation and machine learning, Support Kernels
Regression, feature extraction, OCR, decision support systems, transport
reconﬁguration, scheduling.
Kamel Abderrahim received the B. Eng. degree in electrical engineering from
the National School of Engineers of Gabes (ENIG), Tunisia in 1992, and the M.
Eng. degree in automatic control from Higher School of Sciences and
Techniques of Tunis, Tunisia (ESSTT) in 1995, and the Ph. D. degree in
electrical engineering from National School of Engineers of Tunis, Tunisia
(ENIT) in 2000, and the Habilitation in electrical engineering from the
University of Gabes in 2009. He has been a member of Laboratory of
Numerical Control of Industrial Processes (LACONPRI) at the ENIG since 1995.
He joined the ENIG as an assistant professor in 2000, and now he works as a
professor at the ENIG. From 2002 to 2005, he was the director of the
Electrical Engineering Department at the ENIG. And from 2005 to 2011, he
was the director of Higher Institute of Industrial Systems, Tunisia (ISSIG). His
research interests include nonlinear process modeling, identiﬁcation, and
control.
Authenticated
5:59 PM

Authenticated
5:59 PM

R. Zaier
Humanoid Locomotion Control and Reﬂex
Using Van der Pol and Piecewise Linear
Oscillators
Abstract: Design of a network of oscillators to control the locomotion of a legged robot
is a complex problem dealing with inverse kinematics and dynamics of more than 20
degree of freedom system. An attempt to simplify the design of a locomotion controller
is introduced by combining a Piecewise Linear Oscillator (PWLO) and the Van Der Pol
Oscillator (VDPO). The VDPO is considered as a master oscillator as it generates the
rolling motion pattern. The pitching and swing motions are generated by the PWLO.
The VDPO parameters are selected such that the oscillator has a stable limit cycle. By
introducing a small perturbation parameter into the VDPO equation, the convergence
rate to the stable limit cycle can be controlled. In addition, the locomotion controller is
designed as a neural network coupled to the robot dynamics through sensory system
to exhibit natural looking motion. To enhance better robustness of the network,
proportional derivative controllers are added to the system. Furthermore, the reﬂex
against large disturbance that cannot be compensated by a conventional feedback
controller during locomotion is considered.
Keywords: Humanoid, Van der Pol oscillator, piecewise linear oscillator, central
pattern generator CPG, limit cycle.
1 Introduction
Locomotion of a legged robot can be thought as a complex problem difficult to
solve with too many parameters hard to tune as well. Indeed, conventional neural
networks, which are structurally built by connectionists, suffer less ﬂexibility in
implementation and in tuning the neurons’ connections weights. A network of
neural oscillators that consists of master oscillator coupled to several oscillators is
considered in this paper. This fascinating idea in dealing with locomotion prob-
lem has already been approached by some researchers [1–4]. Although signiﬁcant
progress has been made using small numbers of tightly coupled neurons, those
approaches have some limitations in implementing and adapting them to a changing
environment. For instance, in quadruped or humanoid robots, joint control signals
are more complex than the oscillator based models can generate. Moreover, the
R. Zaier: Mechanical and Industrial Engineering Department, Sultan Qaboos University, Sultanate of
Oman, email: zaier@squ.edu.om
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 105–124.
DOI 10.1515/9783110470468-007
Authenticated
5:59 PM

106
|
R. Zaier
stability of a walking robot requires controlling many joints, and thus, too many
parameters of the coupled oscillators need to be tuned [5]. Some trials towards
simpliﬁcation of locomotion pattern generator have been conducted [6, 7] using
piecewise linear oscillators. The research framework in [7] is based on piecewise
linear functions that shape the locomotion pattern using recurrent neural network
and sensory feedback. Although the method provides a comprehensive knowledge
about the robot dynamics and allows easy implementation of sensory feedback
and much ﬂexibility to include reﬂexes capability to the humanoid robot, the
locomotion controller is too structural that needs much neurons and wires to build.
The work in [6] deals with the phase response properties of Matsuoka oscillator,
which has been interpreted as a piecewise linear oscillator with phase resetting
control.
In this paper we will extend the research result in [6] by introducing the Van der
Pol oscillator [8] abbreviated here as “VDPO” to the neural network of the locomotion
controller. The VDPO is considered as the central pattern Generator “CPG” of the
rolling motion pattern [2], which will be referred to as the master oscillator. The
parameters of the VDPO will be smoothly modulated to enable the robot to exhibit
smooth change of behavior such as to switch from walking to standing. The network
to be built is based on both the “integrate and ﬁre” neuron model [9] and the
recurrent neural network language deﬁned in [10]. The work is expected to provide
a pretty compact network of oscillators, simple to tune, while generating both rolling
and pitching motion proﬁle. In addition, the neural network can be coupled to the
robot dynamics through sensory system to exhibit natural looking motion. Typical
design of humanoid robot includes sole sensor, gyro sensor, and accelerometer [11].
Proportional derivative (PD) controllers made of two neurons with input from Zero
Moment Point (ZMP)and Gyro sensors will be added to the network to improve
the robustness of the locomotion controller against perturbation caused by terrain
irregularity.Furthermore,in this paper the reﬂex against large disturbance during
locomotion is considered, which cannot be compensated by a conventional feedback.
This reﬂex consists of generating a particular motion triggered by gyro sensor
signal.
The rest of this paper is organized as follows. Section 2 presents the rolling
motion pattern generator using PWLO and VDPO. Also it describes the robot
dynamics coupled to oscillators; Sections 3 presents the motion generator for
pitching and swing motion. Section 4 presents the implementation of the reﬂex
against large disturbance. Section 5 shows the experimental results, and section 6 is
conclusion.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
107
2 Rolling Motion Pattern Generation
To begin with, we investigate the stability of the robot simpliﬁed as an inverted
pendulum when standing at one leg that can be expressed by:
d2θ
dt2 + 2ζ dθ
dt −μθ = u(θ)
(1)
where θ ∈ℝis the counterclockwise angle of the inverted pendulum to the vertical,
ζ ∈ℝis damping ratio, μ = g
l ∈ℝ, and u ∈ℝis the control input to the system. Let
θ = α −αs, where α is the angular position of the hip joint and αs is its value when the
projected center of mass (COM) is inside the support polygon. Then, equation (1) can
be rewritten as follows;
d2α
dt2 + 2ζ dα
dt −μα = u(α)
(2)
2.1 Primitive Motion
Continuous Piecewise Linear (PWL) functions have been proven to be a powerful tool
in modeling and analyzing nonlinear systems. For instance, to ﬁt the dynamics of the
robot described by (2) for small oscillations, the rolling motion of a humanoid robot
can be approximated by a sine-wave. But, in general, the trajectories for the biped
joints are not sine functions with only one frequency component. For such situations,
a combination of more primitive functions is more interesting. Equation (3) represents
the ﬁrst order model of a neuron. Using this model it is straightforward to express any
higher order ODE and its coupling with other ODE as detailed in Zaier and Nagashima
2002.
εi
da(t)
dt
+ a(t) = c(t)
(3)
where c(t) is the input signal, a(t) is the activation function. The input signal c(t) can
be expressed by (4) as time series of N piecewise-linear functions:
c(t) =
N
∑
i=1
ci(t −ti)
(4)
2.2 PWLO Generating Rolling Motion Pattern
For the sake of reducing the computing cost and ease the implementation of the
controller, the rhythmic motion can be then generated with regards to the rolling
Authenticated
5:59 PM

108
|
R. Zaier
motion as in [6], which has a trapezoidal form and smoothed using a delay as in (3).
u(ti, ωi) = ωi(t −ti)[us(t −ti) −us (t −ti −1
ωi
)] + us (t −ti −1
ωi
)
(5)
where us(⋅) is the unit step function, ωi > 0 represents the slope of the function u(.)
between ti and (ti + 1
ωi
). The approximate solution α(t) can be formulated, therefore,
as a function of time delay ε, joint angular velocity ω, walking period T, and the rolling
amplitude αs.
α = f(ε, ω, T, αs)
(6)
tr0
tr1
t3
T
αs
Time (s)
u(tr0, ωr)
Angular position
0
Rolling
motion 
Fig. 1. The pattern of rolling motion [6].
Therefore, the rolling motion can be expressed by (7) and shown in Fig. 1.
ε dα(t)
dt
+ α(t) = αs[u(tro,2ωr) −2u(tro + (n + f1)T, ωr)
+2u(tro + (n + f2)T, ωr) −u(tf ,2ωr)]
(7)
where tr0 and tf are the times at the start and the end of the rolling motion,
respectively. n is the number of walking steps. f1 and f2 are relative times with
respect to the gait. The signiﬁcance of (7) is in its real-time implementation using the
Recurrent Neural Network (RNN) language developed in [10, 12]. This RNN language
is suitable for the programmers to reﬂect the biological process in generating robot
motion. In contrast to the mathematical notations used in [1, 3], this proposed
language can express the learning process of a motion, just by changing connections,
and their weights for a given RNN circuit. The neural network is assumed to solve prob-
lems using 4 types of operations namely, summation, multiplication by a constant,
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
109
introduction of a time delay constant, and switching. Using this language, several RNN
circuits can be easily designed termed Central Pattern Generators (CPG) as detailed
by [10].
τr
input
hj
–τr
τr
x1
x2
v2
1
1
v1
1
1
>0
>0
–τr μ
1
τr
Fig. 2. VDPO model using notation in [10].
For instance, Fig. 2 shows the RNN circuit for the Van der Pol equation, which is be
made by using 2 neurons x1 and x2. The input is taken through a neuron with a time
delay hi for smoothing reason.
Let p = tr1 −tro −1
ωr
be the time duration when the robot stays at the maximum
rolling, where tr1 is the ﬁrst switching time at the single support phase, then we can
write f1 = 1
T ( 1
ωr
+ p) and f2 = 2f1 +
1
ωrT .
2.3 Van der Pol Oscillator Generating Rolling Motion
Knowing the phase portrait of the ZMP in the lateral plan can inspire the type of the
controller that may substitute the piecewise linear pattern generator and therefore
reduce all manual setting of the parameters as well as enhance a compact controller
that can be implemented on a small microcontroller. One of the oscillators that can
exhibit stable limit cycle is the Van der Pol Oscillator (VDPO), which can be described
by a second order nonlinear differential equation (8) and could be regarded as a
mass-spring-damper system.
̈x + μ(x2 −1) ̇x + x = f(t)
(8)
Authenticated
5:59 PM

110
|
R. Zaier
where x and ̇x represents the states of the system and μ is the damping parameter,
which represents the degree of nonlinearity of the system. Function f(t) represents
the input from the system dynamics (effect of coupling the oscillator to the robot
dynamics).Equation (8) can be re-written as
̈x + 2ζ(x) ̇x + x = f(t)
(9)
and
ζ(x) = 1
2 μ(x2 −1)
(10)
ζ(x) is the damping ratio of the system and μ is the convergence rate of the system
to the stable limit cycle. However, the damping factor ζ now is no more constant as
it is in (1). It is a function of the state variable x of the system and therefore, stable or
unstable limit cycle can be obtained depending of the value of both μ and x. Therefore,
controlling the variable x and modulating the parameter μ, the oscillator limit cycle
becomes adaptive to the dynamics of the robot. When there is a request to stop the
locomotion of robot, the damping ζ is negative value by ﬁxing the value of x at a
speciﬁc value x and ζ = 1
2 μ(x2 −1).
Let us now consider that the robot is controlled by a VDPO. Also let us consider
the robot dynamics when hopping between the two legs as a hardware oscillator. The
total system, therefore, can be described as two coupled oscillators expressed by (11)
and (12).
̈xosc + 2ζ(xosc) ̇xosc + xosc = f(xzmp, ̇xzmp, τ)
(11)
̈xzmp + 2ζr(xzmp) ̇xzmp + xzmp = f(xosc, ̇xosc, τ)
(12)
where xzmp is the calculated lateral ZMP using the force sensors located under the sole
plates of the robot, ζr is damping factor of hardware (robot), and τ is a time dealy.
Let the coupling function be a proportional derivative controller as,
f(xzmp, ̇xzmp, τ) = kpxzmp(t −τ) + kv ̇xzmp(t −τ)
(13)
where kp and kv are the coupling gains. τ is the time delay caused by ﬁltering the
force sensors’ signals used for calculating the xzmp. The time delay was decided by
investigating the frequency spectrum of the force sensor output. In the experiment,
the value of the time delay was set as 0.01ms. It is important to notice that gains kp
and kv are tuned to have smooth effect on the posture of the robot that take effect along
4 to 5 gait duration. Indeed the robot’s initial posture is set such that the ZMP position
is almost in the middle of the supporting polygon. During locomotion of the robot,
the ZMP is subject to a backward or forward deviation depending to the movement
of the humanoid robot. This affects the robot posture to bend to the front or to back,
respectively. This bending to the fall of the robot usually takes place during 4 to 5 times
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
111
the walking cycle duration (4–5 seconds). Therefore, with the ZMP controller this
bending is compensated by correcting the posture for a given desired ZMP position.
On the other hand, the damping function in (10)can be modiﬁed by introducing
a parameter “r” that modulates the amplitude of the rolling motion regardless of the
initial rolling value.
ζ(x) = 1
2 μ(x2 −r)
(14)
2
10
up
2.5
OFF
1
1
0.7s + 1
s
1
w2
sw4
PD controller
Van-der-pol Eq:
From gyro throug
neuron
max speed-mad(gyro,0)
d2x/dt2 + epsilon(xˆ2 – 1)dx/dt + w2x = F
d2x/dt2 = epsilon(1 – xˆ2)dx/dt – w2x + F
In1
Out1
In2
0
x
delay
Scope1
XY Graph
this parameter decides
how fast you reset the state to origin
u
y
o
0
+–
–+
–
1
2
10
0
1
SW 1
SW 3
SW 2
r
(1 – xˆ2)
dx/dt
dx2/dt2
up
u
o
y
dx/dt
μ
1
s
du/d
Fig. 3. VDPO model with rolling and convergence rate parameters deﬁned in (14).
Figure 3 shows the simulation model reﬂecting (11) and (14) using Simulink. For
instance, the rolling parameter “r” can be switched from 1 to 2 units. The damping
parameter μ, which can speed up or slow down the convergence to the stable limit
cycle, can be considered as an input from the gyro sensor through an evaluation
function.
Figure 4 shows the output of the VDPO, which represents the lateral ZMP position
against its change rate. It should be noticed here that with a simple derivation it can
be shown that the ZMP position is directly proportional to the rolling angle of both the
hip and ankle joint for small angles. It is worth noticing that Fig. 4 shows a smooth
switching from a limit cycle to another limit cycle by changing the rolling parameter r.
Such a change may take place when the robot slows down its walking speed. In such
a scenario more rolling amplitude is required to maintain stability of the robot.
The convergence rate of the oscillator in Fig. 5 is μ = 2,which makes the robot reach
its stable walking rhythm faster than in the case when μ = 0.2 (Fig. 4).
Authenticated
5:59 PM

112
|
R. Zaier
3
2
1
0
–1
–2
–3
–2.5
–2
–1.5
–1
1
–0.5
0.5
1.5
2
2.5
0
x·  [cm/s]
x   [cm]
r = 2
r = 1
Fig. 4. Phase portrait showing the limit cycles when the rolling parameter “r” is changing from 2 to 1
with μ = 0.2.
3
4
2
1
0
–1
–2
–3
–4
–2.5
–2
–1.5
–1
1
–0.5
0.5
1.5
2
2.5
0
x·  [cm/s]
x   [cm]
r = 2
r = 1
Fig. 5. Phase portrait showing the limit cycles when the rolling parameter “r” is changing from 2 to 1
with μ = 2.
Sometimes the humanoid robot may need to stop suddenly at the single support
phase (standing on one leg), in such a case the rolling has to be closer to its static
rolling value αs. Such case is considered in the Section 4, when the robot is stopped on
one leg after being pushed from the back. Notice that the change in the rolling is done
smoothly through a neuron as εr
dr󸀠(t)
dt
+ ∆r󸀠(t) = ∆r, and the new rolling amplitude is
then r = r+r󸀠. Figure 6 shows the phase portrait of the state space when the stable limit
cycle is switched to origin by setting “SW3” to “off” position, where m = 2.5, μ = 0.8,
r = 2. In contrast, Fig. 7 shows similar case but with m = 4, μ = 0.8, r = 2. It is clear
that when m = 4, the state trajectory converges faster to origin.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
113
3
4
2
1
0
–1
–2
–3
–4
x·  [cm/s]
–2.5
–2
–1.5
–1
1
–0.5
0.5
1.5
2
2.5
0
x   [cm]
r = 2
m = 2.5
Fig. 6. Phase portrait when switching the state trajectory to origin for m = 2.5, μ = 0.8, r = 2.
3
4
2
1
0
–1
–2
–3
–4
x·  [cm/s]
–2.5
–2
–1.5
–1
1
–0.5
0.5
1.5
2
2.5
0
x   [cm]
r = 2
m = 4
Fig. 7. Phase portrait when switching the state trajectory to origin for m = 4, μ = 0.8, r = 2.
Now, if we express (11) of the VDPO in the state space form as follows:
{
̇x1
=
x2
̇x2
=
−x1 −2ζ(x1)x2 + fb
(15)
where x1 = xosc and fb = f(xzmp, ̇xzmp, τ).
Now, let’s consider how to stop the robot from walking i.e., switching the state
space trajectory from the stable limit cycle to origin, one way is to set the value of “x2”
in (14) to a certain positive value “m” such that m > r. In this case the convergence rate
to origin will depend on the total damping factor μT.
μT = μ(m −r) −kD
(16)
Authenticated
5:59 PM

114
|
R. Zaier
Now, let the energy be E = 1
2(x2
1 + x2
2) then it can be shown that the change of energy
during rolling for r = 1 can be given by;
̇E = −2ζ(x1)x2
2 + fbx2
(17)
which proves that in the absence of feedback (fb = 0) the system gains energy when
−r < x1 < r and dissipate energy otherwise. The net exchange of energy during one
oscillation should be zero to have stable closed orbit i.e., stable limit cycle. The
feedback controller will play a major role in compensating for energy loss caused by
friction.
2.4 Entrainment Algorithm of the Rolling Oscillator
In this section we propose an entrainment algorithm of the coupled oscillator
described by (11) and (12) by resetting the PD controller at the double support phase
and tuning the oscillator phase to much the dynamics phase using the measured ZMP
position and velocity along the lateral plane. It should be noticed that the proposed
algorithm is applicable for both PWLO and VDPO, which can be described by the
following steps.
2.4.1 Entrainment Algorithm
This algorithm starts running when the humanoid robot is in its normal walking state.
In other words, the state of the robot is always away from the origin and running along
the stable limit cycle.
–
Step 1: Calculate the phase difference φ between the oscillator phase and the
dynamics phase at the maximum rolling amplitude and repetitively at each walking
cycle and when xosc is exactly at its maximum value (xosc = r).
φ = θosc −θzmp
where θosc = arctan ̇xosc
xosc
, θzmp = arctan ̇xzmp
xzmp
, and both xzmp and
̇xzmp are measured variables.
Note that xzmp never gets zero value during locomotion as it is
calculated when xosc is at its maximum value.
–
Step 2: Reset the PD controller states when xosc = r, i.e., x1 = x2 = ̇x1 = ̇x2 = 0 through
a neuron as in (3).
–
Step 3: At xosc = r, calculate the φ and change the phase oscillator accordingly by
changing the oscillator’s parameters; if φ < 0 then reduce θosc, otherwise increase
θosc. The rate of change is set experimentally and varying between 0.1 and 0.2 at
each walking cycle.
–
Step 4: Stop tuning if the phase difference φ is within the desired range, otherwise
restart over from step 1.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
115
3 Pitching and Swing Pattern Generator with
Feedback Controller
The dynamic of the swing leg can be considered the same as that of a pendulum, and
hence it is inherently stable without any compensator. Due to the need of switching
control, this motion is to be generated using PWL function as shown in Figs. 8 and 9.
ε dθl(t)
dt
+ θl(t) = Al[u(tlo, ωl) −u(tl1 + nT, ωl) + u(tl2 + nT, ωl) −u(tlf , ωl)]
(18)
where θl is the lifting motion, Al is the amplitude of lifting, and tl0 and tl2 are the
switching time for the ﬁrst and second lifting, tl1 and tlf are the switching times for
the ﬁrst and the last landing, and ωl is the joints’ angular velocity generating the lifting
motion.
cs
1
–ts
0.1
1
1
u
1
P1
v1
v2
v3
y1
1>
0<
sw
m
1
ε
0
n
Fig. 8. Neural Circuit for pitching motion using notation in [10].
Lifting of left
knee joint
tl0
tl2
T
tl1
Lifting of right
knee joint 
u(tl0, ωl)
Angular position
0
Fig. 9. Output generated by the circuit in Fig. 8. Dashed line is the smoothed output [6].
Authenticated
5:59 PM

116
|
R. Zaier
On the other hand, we assume that the landing of each leg is accomplished with ﬂat
foot on a ﬂat ground, and the thigh and shank of the robot have the same length.
Therefore, with respect to the angles deﬁnition in [11], this condition can be satisﬁed
as follows.
{
{
{
{
{
θp
am
=
θl(t) + θl
fb(t) + θs(t) + θy
zmp(t)
θkm
=
−2θl(t)
θp
hm
=
θl(t) + θl
fb(t) −θs(t) −θy
zmp(t)
(19)
where θp
am, θkm and θp
hm are the pitching motor commands to the ankle, the knee and
the hip, respectively. θl
fb is the gyro feedback input satisfying the stability of inverted
pendulum in the sagittal plane as shown in Fig. 10. θy
zmp is the feedback output that
controls the robot posture during walking. The input of the ZMP controller is the ZMP
position that is calculated using the outputs of the force sensors located under the legs
(Fig. 11) as follows:
xm = x1(Fr
1 + Fr
3 −Fl
2 −Fl
4) + x2(Fr
2 + Fr
4 −Fl
1 −Fl
3)
4
∑
i=1
(Fr
i + Fl
i)
(20)
ym = x1(Fr
3 + Fr
4 + Fl
3 + Fl
4) + x2(Fr
1 + Fr
2 + Fl
2 + Fl
2)
4
∑
i=1
(Fr
i + Fl
i)
(21)
where xm and ym are the coordinates of the position of the ZMP at which the reaction
torques are null. To keep the upper body non-oscillating while stabilizing the inverted
pendulum θl
fb(t) is fed to the ankle and the hip as in (19).
y
1
1
Mass
Gyro/x
k
b
k
b
Θl
fb(t)
Θr
fb(t)
Fig. 10. Single support phase of humanoid.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
117
Front side
y
x2
x1
y1
y2
x
Fr
1
Fr
2
Fr
3
Fr
4
Fl
3
Fl
4
Fl
2
Fl
1
Right
foot 
Left
foot 
yd
Fig. 11. Sole reaction forces on the feet and ZMP.
For the sake of uniﬁcation of the design and using a similar switching law as (18),
the angular position θs that generates the stride, can be expressed by the following
equation:
ε dθs(t)
dt
+ θs(t) = As[u(ts1 + nT, ωs) −u(ts2 + nT, ωs)]
(22)
where As is the amplitude of the angle generating the stride. The ts1 and ts2 are the
switching times at the start and the end of stride. The ωs is the joints’ angular velocity.
4 Reﬂex Against Large Disturbance
The aim of implementing reﬂex when a large disturbance occurs consists of prevent-
ing the humanoid robot from falling down by generating a particular motion. In this
case the feedback controller will be no more sufficient to prevent the falling. The idea
of doing this is to reset the rolling value r to its static rolling value, which is the needed
rolling to stabilize the robot at the single support of the robot (i.e., standing on one
leg). Notice that, with the presence of the PD controller, it is expected that the ZMP
position will converge smoothly to the new equilibrium point.
Now, to detect a large disturbance and eventually to trigger the reﬂex, we use the
gyro sensor. For this, we propose a normalized angular velocity index gi in the (x, y)
plane as follows:
gi = √ρ2gyro2x + gyro2y
(23)
Authenticated
5:59 PM

118
|
R. Zaier
where gyrox and gyroy are the rolling and pitching components of the gyro sensor’s
output along x-axis and y-axis, respectively. The parameter ρ = L
w , which is the size
ratio of the sole plate, with L and w are the length and the width of the robot sole
plate, respectively. The decision about the presence of large disturbance is based on
a threshold that is determined experimentally. The ZMP location of HOAP-3 during
stepping motion and in absence of large disturbance will be calculated using (20) and
(21). The disturbance is considered large if the gyro index exceeds a given threshold
Tgi, which corresponds to the critical state of the robot beyond which the stability by
PD controllers is not possible.
5 Experiment
For the experiment, the humanoid robot HOAP-3 [11] of Fujitsu has been used, which
has 28 degrees of freedom and is 60 cm tall and weights 8.8kg. The real-time control
algorithms are implemented in real-time threads running in the RT-Linux kernel
space as shown in Fig. 12. Kernel mode shared memory (SM) is constructed for
the communication between real-time threads. The control period is 1 ms, and the
interface between the motion pattern generator and the robot uses a real-time USB
driver thread. Using the proposed locomotion controller in [6], the output of the
joints angles at the hip, knee, and ankle joints are shown in Figs. 13–15 respectively,
which could be produced using the VDPO as described in Figs. 4–7. The dashed line
represents the output of the locomotion controller whereas the solid line represents
the actual output which is adjusted by the action of the compliance controller that gets
input from the sole plate sensor as shown in Fig. 10, where the damper spring model
is used to emulate a ﬂexible leg.
Application
Program
Interface
User
Application 
RNN
Thread 
USB
Thread
SM 2
High
speed
FIFOs  
Slow speed FIFO
LINUX
SM 1
KERNEL
WINDOWS /LINUX
Socket
Fig. 12. Single support phase of humanoid.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
119
Figure 16 shows the phase portrait of the ZMP position along the lateral plane and
using PWLO. Regarding the case of using the VDPO, unfortunately the experiment
result is not currently available and similar result is expected. A new robot is under
construction where the oscillator will be implemented ﬁrst on a hopping robot(i.e.
monopod robot).
60
deg
Heap Motion
CPG
CPG
+
Sensors
40
20
–20
–40
0
1
2
3
4 sec
Fig. 13. Pitching motion proﬁle of the hip joint.
deg
Knee Motion
CPG
CPG
+
Sensors
60
40
20
0
0
1
2
3
4 sec
Fig. 14. Pitching motion proﬁle of knee joint.
Authenticated
5:59 PM

120
|
R. Zaier
deg
Ankle Motion
CPG
CPG
+
Sensors
60
40
20
–20
–40
–60
0
1
2
3
4 sec
Fig. 15. Pitching motion proﬁle of ankle joint.
–2
–1.5
–1
–0.5
 0
 0.5
 1
 1.5
 2
–8
–6
–4
–2
0
2
4
6
8
Angular velocity
Position
Fig. 16. Phase portrait of the ZMP in the lateral plane using PWL oscillator (Experiment result).
Let’s consider now the reﬂex against large disturbance proposed in section 4. The
normalized angular velocity in the (x, y) plane deﬁned in (23) is shown in Fig. 17,
where gyrox and gyroy are the rolling and pitching components of the gyro sensor’s
output. When pushing the robot from the back as noticed in this ﬁgure, the value of
the gyro index gi touched the threshold Tgi and HOAP-3 is stopped on the right leg.
Tgi = 1.15gimax, where gimax is the maximum value of the gi during normal walking
as shown in Fig. 17. Notice that Tgi is decided experimentally. The trajectory of the ZMP
x-component on the phase space is depicted in Fig. 18, which shows out how the robot
was switched from a dynamical state to a static one (standing on one leg). This result,
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
121
therefore, demonstrates that the switching from dynamical state (walking) to a static
one was stable and smooth.
2.0
3.0
5.0
6.0
7.0
8.0
4.0
9.0
0
Gyro Index gi
–10
20
10
30
40
Time (s)
Rolling
Gyro Index
gimax
Fig. 17. Gyro index and rolling joint’s output during walking when no large disturbance is present
(Experiment result).
–3
–2.5
–2
–1.5
–1
–0.5
0
0.5
1
1.5
2
–8
–6
–4
–2
0
2
4
6
8
Position of Xzmp [cm]
The robot is stopped at
the single support
phase 
Xzmp [cm/s]
.
walking
walking
Fig. 18. Trajectory of the ZMP x-component in the phase space (Experiment result).
6 Conclusion
This paper presented a locomotion pattern generator consisting of Van de Pol
Oscillator as a master oscillator that controls the rolling motion. The swing motion
as well as the pitching or stride could be generated by the Van der Pol oscillator
Authenticated
5:59 PM

122
|
R. Zaier
that can be considered as slave oscillators. As a result, a pretty compact solution
generating rolling motion proﬁle was obtained. By introducing a small perturbation
parameter into the ODE of the master oscillator’s equation, the convergence rate to
the stable limit cycle could be modulated. In addition, a second parameter has been
introduced representing the rolling amplitude, which could be controlled through a
ZMP position. It was shown by simulation using the Van der Pol oscillator that the
stable limit cycle was obtained,which is very similar to the one obtained by experiment
using the humanoid robot HOAP-3. By modulating the oscillator’s equation using the
input from the ZMP it is possible to deal with reﬂex against sudden change in load and
large disturbance acting on the humanoid robot upper body.
Acknowledgment: The experimental work has been conducted at Fujitsu Laboratories
Ltd in Japan.
Bibliography
[1]
N. Jiangsheng, H. Seiji and K. Atsuo. A Model of Neuro-Musculo-Skeletal System for
Human Locomotion Under Position Constraint Condition. J. of Biomechanical Engineering,
125(4):499–506, 2003.
[2]
M. Marilyn. Central Pattern Generation of Locomotion: A Review of the Evidence. J. of the
American Physical Therapy, 82(1):69–83, 2002.
[3]
K. Matsuoka. Sustained oscillations generated by mutually inhibiting neurons with adaptation.
J. of Biological Cybernetics, 52:367–376, 1985.
[4]
W. Lohmiller and J.J. Slotine. On contraction analysis for non-linear systems. Automatica,
34(6):683–696, 1998.
[5]
A. Kale, G. Salunke, K. Kadam and M. Jagdale. CPGs Inspired Adaptive Locomotion Control for
Hexapod Robot. Int. J. of Engineering Science Invention, 2(4):2319–6734, 2013.
[6]
R. Zaier and S. Kanda. Piecewise-Linear Pattern Generator and Reﬂex System for Humanoid
Robots. IEEE Int. Conf. on Robotics and Automation,:2188–2195, 2007.
[7]
K. Nakada, Y. Sato and K. Matsuoka. Tuning Time Scale Parameter of Piecewise Linear
Oscillators for Phase Resetting Control. 21st Annual Conf. of the Japanese Neural Network
Society, 2011.
[8]
P. Carla and M. Tenreiro. Complex order van der Pol oscillator. Nonlinear Dynamics,
65(3):247–254, 2010.
[9]
H. Hermann. Towards a unifying model of neural net activity in the visual cortex. J. of Cognitive
Neuro dynamics, 1(1):15–25, 2007.
[10] R. Zaier and F. Nagashima. Recurrent neural network language for robot learning. 20th Annual
Conf. of the Robotics Society of Japan, 2002.
[11] Y. Murase, Y. Yasukawa, K. Sakai and M. Ueki. Design of Compact Humanoid Robot as a
Platform. 19th Annual Conf. of the Robotics Society of Japan,:789–790, 2001.
[12] F. Nagashima. A Motion Learning for a Robot using CPG/NP. 20th Conf. of Robotics Society of
Japan, 2002.
Authenticated
5:59 PM

Humanoid locomotion control and reﬂex
|
123
Biography
Riadh Zaier received his M.Eng. and Dr. Eng. Degrees, both in Discrete-Time
Tracking Control Systems from the Department of Systems Engineering,
Nagoya Institute of Technology, Japan, in 1996 and 1999, respectively. He
joined Fujitsu Automation Ltd. in 1999. Then he joined Fujitsu Laboratories
Ltd., as a researcher in 2004. He has been conducting a leading research on
the biologically inspired locomotion control for humanoid robots. He
developed a neural network that generates robust and smooth motions for
Fujitsu humanoid robot “HOAP”, which is commercially available. He has
published several patents and 4 granted US patents. He is currently a faculty
member of Sultan Qaboos University and responsible for the curriculum
assessment and development of the Mechatronics Engineering Program. His
research interests are in the broad area of intelligent sensing and
information fusion and control systems.
Authenticated
5:59 PM

Authenticated
5:59 PM

M. Chetoui, R. Malti, M. Aoun, M. Thomassin, M. N. Abdelkrim and
A. Oustaloup
Continuous-Time System Identiﬁcation with
Fractional Models from Noisy Input and Output
Data using Fourth-Order Cumulants
Abstract: This paper considers the problem of identifying continuous-time fractional
systems from noisy input/output measurements. Firstly, the differentiation orders are
ﬁxed and the differential equation coefficients are estimated using an estimator based
on Higher-Order Statistics: fractional fourth-order cumulants based least squares
(ffocls). Then, the commensurate order is estimated along with the differential equa-
tion coefficients. Under some assumptions on the distributional properties of additive
noises and the noise-free input signals, the developed estimator gives consistent
results. Hence, the noise-free input signal is assumed to be non gaussian, whereas
the additive noises are assumed to be gaussian. The performances of the developed
algorithm are assessed through a numerical example.
Keywords: System identiﬁcation, fractional differentiation, errors-in-variables,
Higher-Order Statistics, fourth-order cumulants, commensurate order.
1 Introduction
In the classical continuous-time system identiﬁcation problem with fractional models,
it is assumed that the system input is perfectly known while only the system output is
measured with additive noise. Thus, two different classes of identiﬁcation methods are
developed: the ﬁrst one, based on an equation error, consists in ﬁxing the fractional
differentiation orders a priori and estimating only the coefficients. The second one,
based on an output error, makes it possible to estimate both the fractional derivatives
and the coefficients. For an overview of such methods, refer to [1–9].
Systems ormodels where errorormeasurement noise affects the input andthe out-
put signals is called errors-in-variables (EIV) system. The problem of identifying such a
system from noisy input and output data and consistently estimating their parameters
M. Chetoui, R. Malti, M. Aoun, M. Thomassin, M. N. Abdelkrim and A. Oustaloup: M. Chetoui1,2,
email: chetoui.manel@gmail.com, R. Malti1, email: rachid.malti@u-bordeaux.fr, M. Aoun2, email:
mohamed.aoun@gmail.com, M. Thomassin3,4, email: magalie.thomassin@univ-lorraine.fr,
M. N. Abdelkrim2, email: naceur.abdelkrim@enig.rnu.tn, A. Oustaloup1, email:
alain.oustaloup@ims-bordeaux.fr, 1 Université de Bordeaux, Laboratoire IMS, CNRS, UMR
5218, Talence Cedex, France, 2 Laboratoire de recherche: Modélisation, Analyse et Commande
de Systèmes (MACS), Université de Gabès, Ecole Nationale d’Ingénieurs de Gabès, Tunisie,
3,4 Université de Lorraine, CRAN, UMR 7039, Campus Sciences, Vandoeuvre-lès-Nancy, France.
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 125–144.
DOI 10.1515/9783110470468-008
Authenticated
5:59 PM

126
|
M. Chetoui et al.
has been investigated in the past few years. Thus, several methods have been proposed
to solve the EIV system identiﬁcation problem for discrete-time and continuous-time
rational models. For an overview of the developed methods, refer to [10–17].
In our work, the focus is on Higher-Order-Statistics (HOS) based methods for
identifying fractional linear dynamic systems in the EIV framework.
The continuous-time system identiﬁcation with fractional models using
third-order cumulants has been recently proposed [18–20]. The developed methods
canbe appliedindifferent noisy situations:white,coloredand/or mutually correlated;
and give consistent estimates because of the insensitivity of the third-order cumulants
to symmetrically distributed noises corrupting both input and output signals.
Furthermore, the third-order cumulants based methods can be applied as long as
the noise-free input signal is non-symmetric. If the latter is symmetrically distributed,
its third-order cumulant equals zero. Hence, for such a process the use of fourth-order
cumulants is required.
Our contribution is built around the focls (fourth-order cumulants based least
squares) algorithm developed for continuous-time system identiﬁcation with rational
models in [14]. First, all differentiation orders are ﬁxed and the fractional transfer
function coefficients are estimated using the developed ffocls (fractional fourth-order
cumulants based least squares) algorithm in different noisy situations. Then, the
commensurate order is estimated along with the fractional differential equation
coefficients.
The paper is organized as follows. Section 2 presents a brief review of frac-
tional systems, a description of the EIV fractional system identiﬁcation problem,
some assumptions, a deﬁnition and some properties of fourth-order cumulants. The
fourth-order cumulants based algorithm for continuous-time EIV system identiﬁc-
ation with fractional models is detailed in Section 3. In Section 4, a numerical
study in two different noise situations: white gaussian noises on input/output and
white/colored gaussian noises on input/output, illustrates the performances of the
developed method. Finally, Section 5 concludes the paper.
2 Mathematical Background
2.1 Fractional Systems
A Single-Input-Single-Output (SISO) fractional Linear-Time-Invariant (LTI) system is
governed by the fractional differential equation:
y(t) +
N
∑
n=1
anDαn y(t) =
M
∑
m=0
bmDβm u(t)
(1)
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
127
where (an, bm) ∈ℝ2 are the linear coefficients of the differential equation and where
u(t) and y(t) are respectively the input and the output signals, D is the time-domain
differential operator (also denoted p); D = ( d
dt ) = p. The orders αn and βm are allowed
to be non-integer positive numbers and are ordered for identiﬁability purposes:
0 < α1 < ... < αN ; 0 ≤β0 < ... < βM
The Laplace transform of ν-order fractional derivative of a time-domain function f(t)
relaxed at t = 0, i.e. f(t) = 0 for t ≤0, is [21]:
L[Dνf(t)] = sνF(s)
(2)
where F(s) = L[f(t)] and s is the Laplace variable.
Applying the Laplace transform to the differential equation (1) yields the frac-
tional transfer function:
H(s) = Y(s)
U(s) =
M
∑
m=0
bmsβm
1 +
N
∑
n=1
ansαn
(3)
If H(s) is commensurable¹ of order ν, then it can be rewritten as:
H(s) =
m
∑
i=0
̃bisiν
1 +
n
∑
j=1
̃ajsjν
(4)
where m = βM
ν and n = αN
ν are integers and ∀i󸀠∈{0,1, . . . , m},∀j󸀠∈{1, . . . , n}:
{
{
{
{
{
{
{
{
{
{
{
{
{
̃bi󸀠= bi if ∃i ∈{0,1, . . . , M} such that i󸀠ν = βi
̃bi󸀠= 0 otherwise
̃aj󸀠= aj if ∃j ∈{1, . . . , N} such that j󸀠ν = αj
̃aj󸀠= 0 otherwise.
(5)
In rational transfer functions ν equals 1 and usually numerator and denominator
orders (0 < α1 < ... < αN and 0 ≤β0 < ... < βM) are ﬁxed and only transfer function
coefficients are estimated.
1 All differentiation orders are exactly divisible by the same number, an integer number of times.
Authenticated
5:59 PM

128
|
M. Chetoui et al.
The major difficulty of fractional models is time-domain simulation. Thus, two
different methods for simulating fractional models are developed: the ﬁrst one is
based on a fractional model approximation by discrete-time rational model, like the
Grünwald approximation. The second one is based on a fractional model approxima-
tion by continuous-time rational model, like the the Oustaloup approximation. For an
overview of such methods, refer to [22, 23].
In this paper the CRONE Toolbox [24, 25] is used for time-domain simulation of
fractional systems.
2.2 EIV Fractional System Identiﬁcation Problem
Consider the fractional linear SISO system depicted in Fig. 1 with both input and
output corrupted by measurement noise. The noise-free input and output signals are
related by the following fractional differential equation:
y0(t) +
N
∑
n=1
anDαny0(t) =
M
∑
m=0
bmDβmu0(t)
(6)
H
u0(t)
y0(t)
eu~(tk)
ey~(tk)
u~(tk)
y~(tk)
y(tk)
u(tk)
Hu~
Hy~
Fig. 1. Fractional system with noisy input/output data.
The continuous-time fractional system H is described by the fractional differential
equation (6), u0(t) and y0(t) are the continuous-time noise-free input/output signals,
u(tk) and y(tk) are the discrete-time² available measurements of input and output
corrupted by additive noise ̃u and ̃y.
2 The input/output signals are sampled uniformly at instants {tk = kh}Nt
k=1, where h is the sampling
period and Nt is the number of measurements.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
129
The fractional EIV linear system is thus described by:
{
{
{
{
{
{
{
{
{
{
{
{
{
y0(t) +
N
∑
n=1
anDαny0(t) =
M
∑
m=0
bmDβmu0(t)
u(tk) = u0(tk) + ̃u(tk)
y(tk) = y0(tk) + ̃y(tk)
(7)
where
{
̃u(tk) = H ̃u(q)e ̃u(tk)
̃y(tk) = H ̃y(q)e ̃y(tk)
(8)
q−1 denotes the backward shift operator and e ̃u(tk), e ̃y(tk) are zero-mean white
gaussian noises.
The parameter vector is deﬁned as:
θT = [a1, ..., aN, b0, ..., bM]
(9)
The problem of identifying the EIV fractional systems is concerned with consistently
estimating the parameter vector θ from Nt samples of noisy input/output data
{u(tk), y(tk)}Nt
k=1.
It is well known that the classical methods for system identiﬁcation with fractional
models give biased estimates in the EIV framework. Then, the solution is the use
of Higher-Order Statistics (HOS) to get consistent estimates. Consequently, some
assumptions on the distributional properties of the noisy and the noise-free signals
are introduced:
–
A1: The fractional derivative orders 0 < α1 < α2 < ... < αN, 0 ≤β0 < β1 < ... < βM
are a priori known.
–
A2: The noise-free input signal u0 is a zero mean stationary stochastic process
such that its fourth-order cumulants are non-zero. Its probability density function
(pdf) cannot therefore be gaussian.
–
A3: ̃u and ̃y are stationary zero-mean gaussian random variables independent of
u0 and y0. Their pdf is gaussian.
2.3 Deﬁnition and Properties of Fourth-Order Cumulants
2.3.1 Deﬁnition
The fourth-order cumulant of a real-valued, zero-mean stationary random process
{x(tk)} is deﬁned as [26–28]:
Cxxxx(τ1, τ2, τ3) = Cum [x(tk)x(tk + τ1)x(tk + τ2)x(tk + τ3)]
= E[x(tk)x(tk + τ1)x(tk + τ2)x(tk + τ3)]
Authenticated
5:59 PM

130
|
M. Chetoui et al.
−E[x(tk)x(tk + τ1)] E[x(tk + τ2)x(tk + τ3)]
−E[x(tk)x(tk + τ2)] E[x(tk + τ1)x(tk + τ3)]
−E[x(tk)x(tk + τ3)] E[x(tk + τ1)x(tk + τ2)]
(10)
where Cum denotes the cumulant of {x(tk)} and E[.] stands for mathematical expect-
ation.
2.3.2 Properties
Higher-Order Statistics (HOS) have many properties [26–28]. Only those used in the
proposed algorithm are recalled in this section. Let x = [x(t1), ..., x(tn)]T and y =
[y(t1), ..., y(tn)]T be two random vectors.
–
P1. Multilinearity: the cumulants are linear with respect to each of their argu-
ments. If 𝛾i, i = 1, ..., m, are scalars and xi, i = 1, ..., m, are random variables,
then:
Cum [𝛾1x1, . . . ,𝛾mxm] = (
m
∏
i=1
𝛾i)Cum [x1, . . . , xm]
(11)
For fourth-order cumulants, m = 4.
–
P2. Additivity: if x and y are independent, the cumulant of their sum equals the
sum of their cumulant:
Cum [x(t1) + y(t1), ..., x(tn) + y(tn)] =
Cum [x(t1), ..., x(tn)] + Cum [y(t1), ..., y(tn)]
(12)
–
P3. The fourth-order cumulant of a random variable with a gaussian pdf equals
zero.
Using properties P2 and P3, the fourth-order cumulant of the measured input/output
signals is given as:
Cuuuu(τ1, τ2, τ3) = Cu0u0u0u0(τ1, τ2, τ3)
Cyyyy(τ1, τ2, τ3) = Cy0y0y0y0(τ1, τ2, τ3)
In a more general case, the obtained result is true for a fourth-order cumulant of any
combination of input/output signals.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
131
3 Fourth-Order Cumulants based Least
Squares Algorithm
Proposition: The fourth-order cross-cumulant between the measured input and the
measured output signals satisﬁes:
Cuyuu(τ1, τ2, τ3) =
M
∑
m=0
bmpβm
1 +
N
∑
n=1
anpαn
Cuuuu(τ1, τ2, τ3)
(13)
where the differential operator pαn stands for
∂αn
∂τ1
αn and pβm stands for
∂βm
∂τ1
βm , and
so, veriﬁes the following fractional differential equation:
Cuyuu(τ1, τ2, τ3) +
N
∑
n=1
anpαnCuyuu(τ1, τ2, , τ3) =
M
∑
m=0
bmpβmCuuuu(τ1, τ2, τ3)
(14)
Proof: See [29].
In practice, the fourth-order cumulants are estimated from Nt samples of in-
put/output available data {u(tk), y(tk)}Nt
k=1 by replacing the mathematical expectations
by sample averages [27]:
̂Cxxxx(τ1, τ2, τ3) =
Nt + 2
Nt(Nt −1)
Nt
∑
k=1
x(tk)x(tk + τ1)x(tk + τ2)x(tk + τ3)
−
3
Nt(Nt −1)
Nt
∑
k=1
x(tk)x(tk + τ1)
Nt
∑
k=1
x(tk + τ2)x(tk + τ3)
−
3
Nt(Nt −1)
Nt
∑
k=1
x(tk)x(tk + τ2)
Nt
∑
k=1
x(tk + τ1)x(tk + τ3)
−
3
Nt(Nt −1)
Nt
∑
k=1
x(tk)x(tk + τ3)
Nt
∑
k=1
x(tk + τ1)x(tk + τ2)
(15)
Hence, with the available data, the output error may be formulated as:
ε(τ1, τ2, τ3, θ) = ̂Cuyuu(τ1, τ2, τ3) −
M
∑
m=0
bmpβm
1 +
N
∑
n=1
anpαn
̂Cuuuu(τ1, τ2, τ3)
(16)
Authenticated
5:59 PM

132
|
M. Chetoui et al.
Since the estimated cumulants
̂Cuuuu(τ1, τ2, τ3) and
̂Cuyuu(τ1, τ2, τ3) are unbiased,
the following equation holds:
lim
Nt→∞ε(τ1, τ2, τ3, θ) = 0
(17)
Then, multiplying (16) by (1 +
N
∑
n=1
anpαn) and deﬁning the equation error ecum as:
ecum(τ1, τ2, τ3, θ) = (1 +
N
∑
n=1
anpαn)ε(τ1, τ2, τ3, θ)
= (1 +
N
∑
n=1
anpαn) ̂Cuyuu(τ1, τ2, τ3)
M
∑
m=0
bmpβm ̂Cuuuu(τ1, τ2, τ3)
= ̂Cuyuu(τ1, τ2, τ3) −̂ΦT(τ1, τ2, τ3)θ
(18)
where the regression vector is:
̂ΦT(τ1, τ2, τ3) = [−pα1 ̂Cuyuu(τ1, τ2, τ3), ...,−pαN ̂Cuyuu(τ1, τ2, τ3),
pβ0 ̂Cuuuu(τ1, τ2, τ3), ..., pβM ̂Cuuuu(τ1, τ2, τ3)]
(19)
and the parameter vector θ is deﬁned by (9).
The ffocls estimator ̂θffocls is given by:
̂θffocls(τ2, τ3, T) = argmin
θ
V(τ2, τ3, θ, T)
(20)
where the cost function V is deﬁned as:
V(τ2, τ3, θ, T) = 1
T
T
∑
τ1=0
1
2 e2
cum(τ1, τ2, τ3, θ)
(21)
and where T is a tuning parameter, its inﬂuence on the quality of estimation is
underlined in the numerical example.
Finally, minimizing the last criterion with respect to θ leads to the ffocls estimator:
̂θffocls(τ2, τ3, T) = [ 1
T
T−1
∑
τ1=0
̂Φ(τ1, τ2, τ3) ̂ΦT(τ1, τ2, τ3)]
−1
[ 1
T
T−1
∑
τ1=0
̂Φ(τ1, τ2, τ3) ̂Cuyuu(τ1, τ2, τ3)]
(22)
To compute the time-domain derivatives of fourth-order cumulants estimates in the
regression vector (19), the State Variable Filter approach (SVF) is proposed (see [30]
for details). Then, the idea of generalizing the SVF approach to deal with fractional
orders is proposed in [18] for third-order cumulants.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
133
Similarly, the fractional derivatives of fourth-order cumulants estimates
pν ̂Cxxxx(τ1, τ2, τ3) are substituted by ﬁltered fractional derivatives of cumulants
pν ̂Cxxxx,f(τ1, τ2, τ3) which can be evaluated according to:
pν ̂Cxxxx,f(τ1, τ2, τ3) = ̂Cxxν
f xx(τ1, τ2, τ3)
(23)
where xν
f is the signal x ﬁltered through the SVF ﬁlter:
Fν(p) = pν (
λ
p + λ )
⌊αN⌋+1
(24)
⌊⋅⌋stands for the ﬂoor function and where λ is the ﬁlter cut-off frequency.
Proof: See [29].
The implementation of the developed ffocls algorithm is summarized in three
steps:
–
Step 1: Deﬁne the fractional ﬁlter as in (24) and generate fractional derivatives of
the ﬁltered input/output measured signals:
uβm
f (tk) = Fβm(p)u(tk); 0 ⩽m ⩽M
(25)
yαn
f (tk) = Fαn(p)y(tk). 1 ⩽n ⩽N
(26)
–
Step 2: Compute fractional derivatives of the fourth-order cumulants estimates
using (15) and (23).
–
Step 3: Build the ﬁltered regression vector:
̂ΦT
f (τ1, τ2, τ3) = [−pα1 ̂Cuyuu,f(τ1, τ2, τ3), ...,−pαN ̂Cuyuu,f(τ1, τ2, τ3),
pβ0 ̂Cuuuu,f(τ1, τ2, τ3), ..., pβM ̂Cuuuu,f(τ1, τ2, τ3)]
(27)
and estimate the parameter vector ̂θffocls:
̂θffocls(τ2, τ3, T) = [ 1
T
T−1
∑
τ1=0
̂Φf(τ1, τ2, τ3) ̂ΦT
f (τ1, τ2, τ3)]
−1
[ 1
T
T−1
∑
τ1=0
̂Φf(τ1, τ2, τ3) ̂Cuyuu,f(τ1, τ2, τ3)]
Authenticated
5:59 PM

134
|
M. Chetoui et al.
4 Numerical Example
The performances of the proposed algorithm are analyzed through the following
second order fractional system:
H(s) =
b1 + b2sν
1 + a1sν + a2s2ν
(28)
where b1 = −1, b2 = 1, a1 = 2, a2 = 1 and ν = 0.5.
This section is divided into two parts. In the ﬁrst part, the differentiation orders are
supposed to be known and only the linear coefficients are estimated using the ffocls
estimator. In the second part, the commensurate order is supposed unknown and is
estimated along with the fractional transfer function coefficients.
The noise-free input signal u0 is chosen as a multi-sine signal (the assumption A2
is satisﬁed):
u0(t) = sin(0.2t) + sin(0.8t) + sin(t) + sin(1.4t) + sin(2t) + sin(3t)
(29)
The measurements of the input/output signals are sampled uniformly with a sampling
period h = 0.05s (Fig. 2). The number of samples is Nt = 5000 and the ﬁlter cut-off
frequency in (24) is set to λ = 3rad/s.
0
50
100
150
200
250
−10
−5
0
5
10
Time(s)
0
50
100
150
200
250
Time(s)
Input
−2
−1
0
1
2
Output
Fig. 2. Noisy input/output signals.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
135
4.1 Known Differentiation Orders
First, the differentiation orders are considered known (the assumption A1 is satisﬁed)
and the fractional transfer function coefficients are estimated by applying the ffocls
estimator in two different noisy situations.
4.1.1 White gaussian noise on input/output data
In this part the input/output signals are contaminated by additive gaussian white
noise with a Signal-to-Noise-Ratio (SNR) of 10dB (the assumption A3 is satisﬁed).
The ffocls algorithm is applied to estimate the coefficients of the fractional transfer
function given by (28) for T = 200. The estimation results are summarized in Tab. 1.
The relative quadratic error is deﬁned as:
RQE = √
󵄩󵄩󵄩󵄩󵄩̂θ −θ0󵄩󵄩󵄩󵄩󵄩
2
‖θ0‖2
(30)
where θ0 is the true parameter vector.
–
Inﬂuence of the tuning parameter T: The inﬂuence of the tuning parameter T
on the quality of the estimation is studied in this section. It is chosen to range
between 20 and 500 and the developed ffocls estimator is applied for each value
of T.
The evolution of the estimates according to the tuning parameter T is plotted in
Fig. 3. It is clear that for small values of T (T < 100) the estimates are biased,
since the fourth-order cumulants are estimated using an insufficient number of
samples.
–
Monte Carlo simulation: The performances of the developed estimator are
analyzed with the help of nmc = 500 runs of Monte Carlo simulation with different
gaussian white noise realizations (SNR = 10dB). For each Monte Carlo run, the
ffocls algorithm is applied to estimate linear coefficients of the fractional system.
Tab. 1. Estimation results for T = 200: white gaussian noises on input/output.
Parameters
True Value
Estimated
RQE
a2
1
0.9864
a1
2
2.058
0.0246
b2
1
1.025
b1
−1
−0.9975
Authenticated
5:59 PM

136
|
M. Chetoui et al.
0
100
200
300
400
500
0
0.5
1
1.5
T
a2
a1
0
100
200
300
400
500
−1
0
1
2
3
T
a2 (ffocls)
True value
a1 (ffocls)
True value
b2
b1
0
50
100
150
200
250
300
350
400
450
500
0
0.5
1
1.5
T
0
50
100
150
200
250
300
350
400
450
500
−1.5
−1
−0.5
0
T
b2 (ffocls)
True value
b1 (ffocls)
True value
Fig. 3. Evolution of ffocls estimates according to the tuning parameter T: white gaussian noises on
input/output.
The obtained results are given in Tab. 2 which contains the mean of estimates,
their standard deviation (σ) and the normalized relative quadratic error.
NRQE = √1
nmc
nmc
∑
j=1
󵄩󵄩󵄩󵄩󵄩̂θj −θ0󵄩󵄩󵄩󵄩󵄩
2
‖θ0‖2
(31)
It is clear that the ffocls estimator gives consistent estimates. Indeed, estimated
coefficients converge to the real ones.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
137
Tab. 2. Monte Carlo simulation: white gaussian noises on input/output (T = 200).
Parameters
True Value
Estimated
σ
NRQE
a2
1
1.00
0.03
a1
2
1.94
0.14
0.064
b2
1
0.98
0.04
b1
-1
−0.98
0.03
0.8
0.9
1
1.1
1.2
0
50
100
150
a2(ffocls)
1.5
2
2.5
0
50
100
150
a1(ffocls)
0.8
0.9
1
1.1
1.2
0
50
100
150
b2(ffocls)
−1.1
−1
−0.9
−0.8
0
50
100
150
b1(ffocls)
Fig. 4. Distribution of ffocls estimates: white gaussian noises on input/output.
The histograms of the estimates are presented in Fig. 4. It is shown that the estim-
ates are accurate which improves the performance of the proposed algorithm.
4.1.2 White/colored gaussian noise on input/output data
In this part the noise corrupting the input and output signals are respectively white
and colored and deﬁned as:
{
{
{
{
{
̃u(tk) = e ̃u(tk)
̃y(tk) = 1 + 0.3q−1
1 −0.3q−1 e ̃y(tk)
(32)
Authenticated
5:59 PM

138
|
M. Chetoui et al.
Tab. 3. Monte Carlo simulation: white/colored gaussian noises on input/output (T = 200).
Parameters
True Value
Estimated
σ
NRQE
a2
1
1.0046
0.0596
a1
2
1.9021
0.2223
0.1007
b2
1
0.9676
0.0608
b1
−1
−0.9722
0.0555
where e ̃u(tk) and e ̃y(tk) are realizations of white gaussian noise with a Signal-to-Noise-
Ratio of 10dB.
The estimation results for nmc = 500 runs of Monte Carlo simulation are summar-
ized in Tab. 3. The distribution of the ffocls estimates are plotted in Fig. 5. It is shown
that when the output noise is colored, the ffocls estimator still gives accurate results
which improve the efficiency and the robustness to gaussian noise of the proposed
algorithm.
4.2 Unknown Differentiation Orders
In this section, the commensurate order is estimated along with the coefficients in the
two different noise situations described previously.
Let the l2-norm (in dB) of the normalized output error be deﬁned by:
JdB = 10log(
󵄩󵄩󵄩󵄩y −̂y󵄩󵄩󵄩󵄩
2
‖y‖2
)
(33)
where y is the measured output corrupted by an additive noise and ̂y is the estimated
output. In this section, the commensurate order is assumed to be unknown. The ffocls
algorithms is applied to estimate the coefficients of the fractional model:
H(s) =
b1 + b2sν
1 + a1sν + a2s2ν
(34)
for different values of ν ∈(0.1,0.9) in the stability domain. The l2-norm (in dB) is
evaluated for every commensurate order ν and plotted in Fig. 6. The optimum is found
at ν = 0.5 and the criteria at the optimum are close to – SNR which indicates that there
is no modeling error.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
139
0.8
0.9
1
1.1
1.2
0
50
100
150
a2(ffocls)
1
1.5
2
2.5
3
0
50
100
150
a1(ffocls)
0.8
1
1.2
1.4
0
50
100
150
b2(ffocls)
−1.4
−1.2
−1
−0.8
−0.6
0
50
100
150
b1(ffocls)
Fig. 5. Distribution of ffocls estimates: white/colored gaussian noises on input/output.
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
−10
−9.95
−9.9
−9.85
−9.8
−9.75
−9.7
−9.65
−9.6
−9.55
X: 0.5
Y: −10
Commensurate order
Criterion(dB)
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
−9.15
−9.1
−9.05
−9
−8.95
−8.9
−8.85
−8.8
−8.75
−8.7
X: 0.5
Y: −9.14
Commensurate order 
Criterion(dB)
Fig. 6. Criterion versus commensurate differentiation order for white gaussian noises on
input/output (left) and white/colored gaussian noises on input/output (right).
5 Conclusion
In this paper, a new continuous-time system identiﬁcation method with fractional
models in the EIV framework has been proposed. It is based on Higher-Order
Statistics. The use of fourth-order cumulants, which are insensitive to gaussian
Authenticated
5:59 PM

140
|
M. Chetoui et al.
noises corrupting both input and output signals, leads to unbiased estimates. The
efficiency of the proposed estimator has been evaluated through a numerical example.
The estimation results have been studied in two different noise situations: white
gaussian noises on input/output and white/colored noises on input/output. Monte
Carlo simulation has shown that the developed algorithm gives good results and
provides unbiased estimates.
Bibliography
[1]
T. Poinot and J.-C. Trigeassou. Identiﬁcation of fractional systems using an output-error
technique. Nonlinear Dynamics, 38(1–2):133–154, 2004.
[2]
J. Sabatier, M. Aoun, A. Oustaloup, G. Grégoire, F. Ragot and P. Roy. Fractional system
identiﬁcation for lead acid battery state of charge estimation. Signal Processing,
86(10):2645–2657, 2006.
[3]
M. Thomassin and R. Malti. Subspace method for continuous-time fractional system
identiﬁcation. 15th IFAC Symposium on System Identiﬁcation, 2009.
[4]
S. Victor, R. Malti and A. Oustaloup. Instrumental variable method with optimal fractional
differentiation order for continuous-time system identiﬁcation. 15th IFAC Symposium on
System Identiﬁcation, 2009.
[5]
M. Thomassin and R. Malti. Multivarible identiﬁcation of continuous-time fractional system.
ASME 2009 Int. Design Engineering Technical Conf. & Computers and Information in
Engineering Conf., 2009.
[6]
R. Malti, T. Raïssi, M. Thomassin and F. Khemane. Set membership parameter estimation of
fractional models based on bounded frequency domain data, Communications. Nonlinear
Science and Numerical Simulation, 15(4):927–938, 2010.
[7]
J. Gabano and T. Poinot. Fractional modelling and identiﬁcation of thermal systems. Signal
Processing, 91(3):531–541, 2011.
[8]
M. Amairi, M. Aoun, S. Najar and M. Abdelkrim. Guaranteed frequency-domain identiﬁcation
of fractional order systems: application to a real system. Int. J. of Modelling, Identiﬁcation and
Control, 17(1):32–42, 2012.
[9]
S. Victor, R. Malti, H. Garnier and A. Oustaloup. Parameter and differentiation order estimation
in fractional models, Automatica, 49(4):926–935, 2013.
[10] J. K. Tugnait. Stochastic system identiﬁcation with noisy input using cumulant statistics. IEEE
Trans. on Automatic Control, 4(37):476–485, 1992.
[11] K. Mahata and H. Garnier. Identiﬁcation of continuous-time errors-in-variables models.
Automatica, 49(4):1470–1490, 2006.
[12] K. Mahata. An improved bias-compensation approach for errors-in-variables model
identiﬁcation. Automatica, 43(8):1339–1354, 2007.
[13] R. Diversi, R. Guidorzi and U. Soverini. Maximum likelihood identiﬁcation of noisy
input–output models. Automatica, 43(3):464–472, 2007.
[14] S. Thil, H. Garnier, M. Gilson and K. Mahata. Continuous-time model identiﬁcation from noisy
input/output measurements using fourth-order cumulants. 46th IEEE Conf. on Decision and
Control, :4257–4262, 2007.
[15] S. Thil, H. Garnier and M. Gilson. Third-order cumulants based methods for continuous-time
errors-in-variables model identiﬁcation. Automatica, 44(3):647–658, 2008.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
141
[16] S. Thil and M. Gilson. Survey of analytical iv estimates for errors-in-variables model
identiﬁcation. 18th IFAC World Congress, Milano, Italy, 2011.
[17] T. Söderström. A generalized instrumental variable estimation method for errors-in-variables
identiﬁcation problems. Automatica, 47(8):1656–1666, 2011.
[18] M. Chetoui, R. Malti, M. Thomassin, M. Aoun, S. Najar and M.N. Abdelkrim. Third order
cumulants based method for continuous-time errors-in-variables system identiﬁcation by
fractional models. 9th IEEE Int. Conf. on Systems, Signals and Devices, SSD’11, Sousse, Tunisia,
2011.
[19] M. Chetoui, R. Malti, M. Thomassin, M. Aoun, S. Najar, A. Oustaloup and M. Abdelkrim.
EIV methods for system identiﬁcation with fractional models. 16th IFAC Symp. on System
Identiﬁcation, (SYSID), Brussels, Belgium, 2012.
[20] M. Chetoui, M. Thomassin, R. Malti, M. Aoun, S. Najar, A. Oustaloup and M. Abdelkrim.
Higher-order statistics-based methods for order and parameter estimation of continuous-time
errors-in-variables fractional models. 5th Workshop on Fractional Differentiation and its
Applications, (FDA), Nanjing, China, 2012.
[21] K.-B. Oldham and J. Spanier. The Fractional Calculus: Theory and Applications of Differentiation
and Integration to Arbitrary Order. Academic Press, 1974.
[22] M. Aoun, R. Malti, F. Levron and A. Oustaloup. Numerical simulations of fractional systems: an
overview of existing methods and improvements. Nonlinear Dynamics, 38(1):117–131, 2004.
[23] A. Grünwald. Ueber begrenzte derivationen und deren anwendung. Zeitschrift fur Mathematik
und Physik, 12(6):441–480, 1867.
[24] R. Malti, P. Melchior, P. Lanusse and A. Oustaloup. Object oriented CRONE toolbox for fractional
differential signal processing. Signal Image and Video Processing, 6(3):393–400, 2012.
[25] P. Lanusse, R. Malti and P. Melchior. CRONE Control-System Design Toolbox for the control
engineering community. Philosophical Trans. of the Royal Society A: Mathematical, Physical
and Engineering Sciences, 371, 20120149, iF: 2.773, 2013.
[26] D. Brillinger. Time series, data analysis and theory. Holden Dat, 1981.
[27] J.-L. Lacoume, P.-O. Amblard, P. Comon. Statistiques d’ordre Supérieur pour le Traitement du
Signal. Masson, 1997.
[28] J. Mendel. Tutorial on high-order statistics (spectra) in signal processing and system theory:
Theoretical results and some applications. Proceedings of IEEE, 79(3):278–305, 1991.
[29] M. Chetoui, R. Malti, M. Thomassin, S. Najar, M. Aoun, M. N. Abdelkrim and A. Oustaloup.
Fourth-order cumulants based method for continuous-time eiv fractional model identiﬁcation.
10th Int. Multi-Conf. on Systems, Signals and Devices, SSD’13, 2013.
[30] P. Young. Parameter estimation for continuous-time models- a survey. Automatica, 17(1):23–39,
1981.
Biographies
Manel Chetoui was born in Tunisia in 1984. She received her
Electrical-Automatic engineering diploma, in 2008, her Automatic and Smart
Techniques Master degree, in 2009, from the ENIG (National School of
Engineers of Gabes, Tunisia) and her Ph.D in 2013 in electric and automatic
control from the University of Bordeaux-France and the University of
Gabes-Tunisia. Her research interests include fractional differentiation, its
synthesis and its applications in automatic control and system identiﬁcation.
Authenticated
5:59 PM

142
|
M. Chetoui et al.
Rachid Malti was born in Serbia in 1972. He received his electrical
engineering diploma from INELEC, Boumerdès, Algeria in 1994, his M.Sc and
Ph.D in 1996 and 1999 in automatic control from INPL, Nancy, France. He
held a position of Associate Professor at the University of Paris XII from 1999
to 2004. In 2004, he joint the IMS-CRONE team at the University of Bordeaux
where he is currently holding a position of Professor in automatic control,
electrical engineering, and computer engineering. Since then, he is working
in the ﬁeld of fractional differentiation and its applications in automatic
control and system identiﬁcation. He is co-developing the object oriented
CRONE toolbox for fractional systems.
Mohamed Aoun was born in Tunisia in 1975. He received his Ph.D. in
automatic control in 2005 from the University of Bordeaux, France. He is
currently Associate Professor in automatic control, electrical engineering,
and computer engineering at ENIG, Tunisia and member of its MACS research
laboratory. His research interests include automatic control, system
identiﬁcation, fault diagnosis, and fractional differentiation.
Magalie Thomassin was born in Vitry-le-François (France) in 1978. She
received the Ph.D. degree in automatic control and signal processing from
the Université de Lorraine (France) in 2005. After a one-year postdoctoral
fellowship at the “Laboratoire d’Automatique de Grenoble” (become the
Gipsa-Lab, Grenoble, France) about the identiﬁcation of open-channel ﬂow
systems, she was associate professor in the “laboratoire de l’Intégration du
Matériau au Système” (IMS) at the Université de Bordeaux. She has
developed new methodologies to identifying fractional order systems. Since
2010, she is associate professor at the “Centre de Recherche en
Automatique de Nancy” (CRAN), Université de Lorraine, CNRS. Her research
is concerned with the modeling and the identiﬁcation of biological systems
to control new radiation therapies.
Mohamed Naceur Abdelkrim was born in Tunisia in 1958. He obtained a
Diploma in Technical Sciences in 1980, his Master Degree in Control in 1981
from the ENSET school of Tunis (Tunisia), and his PhD in Control in 1985 and
the Doctorate in Sciences Degree (Electrical engineering) in 2003 from the
ENIT School of Tunis. He is a Professor at the Electrical Engineering
Department of the National Engineering School of Gabes (Tunisia) and he is
manager of the MACS laboratory.
Authenticated
5:59 PM

Continuous-time system identiﬁcation with fractional models
|
143
Alain Oustaloup was born in France in 1950. He received his engineering
diploma from ENSEIRB in 1973, and his Doctor of Engineering and Doctor of
Science in 1975 and 1981 from the University of Bordeaux. He is currently
Professor and head of the Automatic Control department at ENSEIRB. He set
up and is head of the IMS-CRONE team at the University of Bordeaux. He is
currently a Research Evaluator at the French Ministry of Education and
Research. His research interests include fractional differentiation, its
synthesis, and its applications in engineering sciences, particularly in
automatic control. He conceived CRONE control (French acronym for
“Commande Robuste d’Ordre Non Entier"). He is author and co-author of ﬁve
books including fractional derivatives ant its applications in control
engineering (in French). He was awarded the Afcet Trophy in 1995 and the
CNRS Silver Medal in 1997.
Authenticated
5:59 PM

Authenticated
5:59 PM

M. Z. E.-A. Skhiri and M. Chtourou
Generalization Improvement of Wavelet Neural
Networks Using Regularization Techniques
Abstract: Similar to neural networks, the generalization of wavelet neural networks
is also considered to be a serious issue since a given network may be able to assure
good approximation accuracy, but could not perform well on unseen data. To improve
generalization, several techniques have been carried out including regularization. In
this paper, two newly regularization techniques, applied to radial wavelet neural net-
works, are investigated. In the ﬁrst technique, the additional term of the cost function
is represented in terms of a Hilbert square norm of the functional representing the
network structure. However, in the second technique the network adjusted parameters
decay approach is used. Applied to wavelet neural networks, this type of approach
may include all the adjusted parameters and not only the weights as with neural
networks.
Keywords: Radial wavelet network, generalization, regularization, square norm,
adjusted network parameters decay.
1 Introduction
Learning well, it is not really learning by heart, but performing well on unseen data.
That is the capability of generalization.
As a matter of fact, one of the most problems that deeply affects the performance
of neural and wavelet networks is the generalization. Basically, a neural or a wavelet
network may provide good approximation but could not present good performance
with new data. So, the objective is to have an adequate network that presents
a possible compromise between the learning performance and the generalization
performance.
Similar to neural networks, the topology of wavelet neural network has also
a serious impact on the performance of the network and its generalization ability.
Basically, if a network does not have the adequate number of wavelets and parameters,
the learning algorithm may not be able to converge. On the other hand, if the network
is densely connected overﬁtting will take place. In other words, the network will
memorize the training data instead of learning the problem, and will not be able
to predict situations that it has never seen before. Statistically speaking, these two
situations are related to the weight of the bias and the variance terms that compose the
M. Z. E.-A. Skhiri and M. Chtourou: Control and Energy Management Laboratory (CEMLab), National
School of Engineering of Sfax, University of Sfax, Sfax, Tunisia., email: Zine.Skhiri@isetso.rnu.tn,
email: Mohamed.Chtourou@enis.rnu.tn
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 145–164.
DOI 10.1515/9783110470468-009
Authenticated
6:01 PM

146
|
M. Z. E.-A. Skhiri and M. Chtourou
generalization error. In fact, an excessive bias will lead to under estimated network.
However, an excessive variance will lead to over ﬁtting.
To improve generalization, several techniques have been carried out, mainly, the
regularization technique [1–8] which aims to prevent overﬁtting. This technique has
been introduced in terms of several different approaches such as early stopping and
weight decay.
In the early stopping method [9–15], the training set is split into two sets. One set
is used for training, and the second one is used for validation. To monitor the training
process, the error on the validation set is considered for the checking task. Basically,
this error and the error on the training set decrease during the training process.
However, when the network begins to overﬁt the data, the error on the validation set
starts to rise. As a result, the training will be stopped and the updated parameters are
returned.
In the weight decay method [16–21], however, the network complexity is reduced
by limiting the growth of the weights. The basic idea is to penalize the overly large
weights by including an additional term to the cost function of the learning algorithm.
In order to control the strength of the regularization, a hyperparameter, known as the
regularization parameter is introduced. The larger the parameter is, the higher the
penalty will be on the model complexity.
In this paper, two regularization techniques are applied to radial wavelet net-
works. In the ﬁrst technique, the additional term, called also the smoothness term,
of the cost function is represented in terms of a Hilbert square norm of the functional
representing the network structure. In the second technique however, the adjusted
parameters decay approach is used. In fact, this method is inspired from the weight
decay method.
This paper is organized as follows: In the ﬁrst section, the related works are
presented followed by the wavelet network structure in the second section. The
adopted regularization technique and the learning algorithm are then discussed in
section 4 and 5 respectively. However, the simulation results are discussed in section 6.
Finally, the last section will conclude the paper.
2 Related Works
The generalization issue of neural networks has been intensively treated, and import-
ant works have been carried out using different techniques such as regularization
[1–8]. The main idea of this technique is based on including an additional term to the
cost function. For example, in [2] negative correlation learning NCL neural network
ensemble algorithm is applied to numerous empirical problems, including regression
and classiﬁcation problems. NCL introduces a correlation penalty term to the cost
function of each individual network so that each neural network minimizes its mean
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
147
square error (MSE) together with the correlation of the ensemble. The regularization
technique is also employed through other approaches such as early stopping [9–15]
and weight decay [16–21]. As far as early stopping is concerned several works have also
been introduced. For example, to enhance the performance of Bayesian regularization
of artiﬁcial neural network a pre-training via an early-stopping algorithm is used
[9]. The proposed method is applied to the regularization of Feed-forward Neural
Networks to regress various benchmark data series. In a second example, early
stopping is used in [10] for neural-network-based subpixel classiﬁcation, which is one
of the most commonly used approaches to address spectral mixture problems. A new
stopping criterion has been proposed, and it is based on the reduction of the mean
squared error (MSE) for a validation data set.
Due to its simplicity, weight decay technique has played also an important role to
overcome overﬁtting, and a lot of work has been accomplished in this matter [16–21].
Based on the fact that the weight-decay method can suppress the effect of weight
fault, mean prediction error (MPE) formulae are developed in [16] for predicting the
performance of faulty radial basis function (RBF) networks. These MPE formulae
are also able to accurately locate the appropriate value of the decay parameter for
minimizing the true test error of faulty networks. Weight decay is also used in [17]
for modelling nonlinear behaviour of steam temperature in distillation essential oil
extraction system. The modelling is based on the neural network autoregressive
with exogenous input structure. During the network training, the optimisation of
the network weights has been carried out by minimisation the error through the
Levenberg–Marquardt algorithm (LMA).
Similarly, for wavelet networks, different interesting works have also been carried
out dealing with this issue from different points of view [1, 22–27]. Some are based
on the network structure and the conventional regularization technique, and some
others are treated from the signal processing point of view based on the sampling
theory and the frequency band of the wavelet network. For example, in [1] the
additional term of the cost function is represented in terms of a Hilbert square norm
of the functional representing the network structure. In [24] however, a self-adaptive
four layer wavelet network has been introduced to greatly improve generalization
using the regularization technique to construct an orthogonal wavelet network based
on orthogonal least squares. The generalization ability of one-dimensional wavelet
networks has also been discussed in [25] from different aspects such as network
complexity, over-ﬁtting and extrapolation ﬁtting etc... Based on the sampling theory,
different algorithms have also been introduced to avoid wavelet networks overﬁtting.
For example, in [22] the input weights are decided by the sampling period or the
frequency band of target function instead of sample errors. Applying this algorithm,
the wavelet network is considered to be an ideal low-pass ﬁlter, which removes the
high-frequency noise in training data. For the same purpose, another algorithm robust
to the variance of noise was introduced by the same author [23] based on the frequency
band of the wavelet network.
Authenticated
6:01 PM

148
|
M. Z. E.-A. Skhiri and M. Chtourou
In this paper two regularization techniques are applied to radial wavelet networks.
It should be noticed that as far as we know the following techniques have not been
treated before with wavelet networks. The idea in the ﬁrst technique is based on
the inclusion of an additional term to the error function. This term is expressed by
a Hilbert square norm of the functional representing the network structure. In the
second technique however, the adjusted parameters decay approach is used.
3 Wavelet Neural Networks
Based on the wavelet theory, Zhang and Benveniste [28] have proposed the wavelet
network as an alternative to the feedforward neural networks for approximating arbit-
rary nonlinear functions. These types of networks are similar to the one hidden layer
neural networks in which the coefficients can be considered as the connection weights
and the wavelets called also wavelons as the activation functions. These wavelets are
some dilated and translated versions of a mother wavelet ψ(x). Compared to neural
networks, wavelet networks use an important number of parameters that may be
updated. They include weights, translations, dilations and direct term coefficients.
Certainly, this will provide more ﬂexibility to derive different network structures. The
simple mono-dimensional input structure is represented by the following expression:
y(x) =
m
∑
j=1
wjψ( x −tj
sj
)
(1)
where m is the number of wavelets used in the network, and ψ( x −tj
sj
) is some
translated and dilated version of the mother wavelet ψ(x).
To deal with large dimensions just like the classical sigmoid neural network, an
alternative network is introduced in [29, 30]. It is the radial wavelet network which
is an extension of the one dimensional wavelet network. A wavelet function ψ(x)
is radial if it has the following form: ψ(x) = ϕ(‖x‖), where ‖x‖=(xTx)
1
2 and ϕ is a
single variable function. The general expression of this network is given below in (2)
including the linear direct terms.
y(x) =
m
∑
j=1
wjψ[Dj(x −tj)] + aTx + a0
(2)
where Dj’s are diagonal matrices built from dilation vectors: Dj = diag(dj), dj =
[ 1
s1
j
, 1
s2
j
, ..., 1
sN
j
] and sj = [s1
j , s2
j , ..., sN
j ]
T. N represents the input dimension. In this
paper, radial multidimensional input and one dimensional output network is treated
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
149
using the radial wavelet given by the following expression:
ψ(x) = (xTx −N)e−1
2 xTx,
x ∈ℝN
(3)
4 Regularization Technique
Basically, the learning process of networks is performed so as to minimize the sum
of squared errors between the network outputs and the training data. However, this
procedure is not always able to provide to the treated network good generalization,
and over ﬁtting may occur during the training process. To improve generalization,
regularization techniques are often adopted using different approaches. In this paper,
two regularization techniques are applied to radial wavelet networks. For instance,
we should mention that as far as we know, these two techniques have not been used
before with wavelet neural networks. The ﬁrst technique replaces the smoothness term
by a square norm of the functional representing the network structure, and the second
technique uses the network adjusted parameters decay method.
4.1 Square Norm Regularization Technique
Generally, regularization techniques are often based on the inclusion of an additional
term in the error function E as stated in the following expression:
J [f] = E + λΩ[f]
(4)
where λ is a hyperparameter that controls the strength of the regularization and Ωis
known as the regularizer. f denotes the function computed by the neural network.
The ﬁrst term is enforcing closeness to the data, and the second represents the
smoothness. As far as neural networks are concerned, the most common used error
function in training is the mean squared error (MSE):
E = 1
2 (yn −f n
d )2
(5)
where f n
d and yn are the desired output and the network output of the nth sample
respectively. The smoothness term, in this case, is deﬁned as: Ω[f] = ‖f‖2
H the square
norm of f [31–33] in a reproducing kernel Hilbert space H. The kernel, in this paper,
is composed of wavelets forming an orthogonal wavelet basis. The square norm in a
Hilbert space is related to the inner product by: ‖f‖2
H =< f, f >H.
For instance, let ψj(x) be an orthogonal wavelet basis, then, we may write any
expansion of a function f in L2 (integrable square functions) as follows: f(x) =
∑j wjψj(x).
Authenticated
6:01 PM

150
|
M. Z. E.-A. Skhiri and M. Chtourou
Therefore, for the most simple wavelet network structure given by the following
expression:
y(x) = ∑
j
wjψj(x) =
m
∑
j=1
wjψ( x −tj
sj
)
(6)
The corresponding error may be written as follows:
J1 = 1
2 (yn −f n
d )2 + λ‖yn‖2
(7)
So, the corresponding square norm will be expressed as follows:
‖y‖2 = ∫[y(x)]2 dx = ∫[
[
∑
j
wjψ( x −tj
sj
)]
]
2
dx
(8)
since
(∑
j
aj)
2
= [
[
∑
j
(aj)2]
]
+ 2a1 ∑
j>1
aj + 2a2 ∑
j>2
aj + .....
(9)
Equation (8) may be written as follows:
∫[
[
∑
j
wjψ( x −tj
sj
)]
]
2
dx = ∫∑
j
w2
j ψ2
j ( x −tj
sj
)dx+
∫2w1ψ1 ( x −t1
s1
)[2w2ψ2 ( x −t2
s2
) + ...]dx+
∫2w2ψ2 ( x −t1
s1
)[w3ψ3 ( x −t3
s3
) + ...]dx + ...
(10)
Provided that ∫ψj(x)ψl(x)dx = 0 for j
̸= l
∫[
[
∑
j
wjψ( x −tj
sj
)]
]
2
dx = ∫∑
j
w2
j ψ2
j ( x −tj
sj
)dx
(11)
So:
‖y‖2 = ∑
j
w2
j ∫ψ2
j ( x −tj
sj
)dx
(12)
Making a change of variable we get:
‖y‖2 = ∑
j
w2
j sj ∫ψ2
j (x)dx
(13)
For orthonormal wavelets, we may write:
‖y‖2 = ∑
j
w2
j sj
(14)
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
151
So the error function in terms of the adjusted parameters is ﬁnally given by the
following expression :
J1(θ) = 1
2 (yn −f n
d )2 + λ∑
j
w2
j sj
(15)
4.2 Adjusted Network Parameters Decay Approach
Another regularization approach is the adjusted network parameters decay that
consists of summing the squares of the adjusted network parameters. Applied to
neural networks, this method has the objective to penalize the overly large adjusted
network parameters that cause an excessive variance term which could be controlled
by the decay parameter λi given in equation(16). In the contrary, for small parameters
the network will have an excessive bias term which could be controlled, in the same
manner, by the same parameter. Therefore, the value of this parameter has a direct
inﬂuence on the decay process since the generalization error is composed of bias and
variance terms [34, 35]. Using this technique, the expression stated by equation (4)
becomes as follows:
J2(θ) = 1
2 (yn −f n
d )2 + 1
2
m
∑
j=1
(λ1w2
j + λ2s2
j + λ3t2
j ) + 1
2
N
∑
j=1
λ4a2
j
(16)
5 Learning Algorithm
To adjust the parameters of the networks used in this paper, a stochastic gradient
algorithm is carried out. The aim is to adjust recursively the parameters vector θ, as
given in equation (17), after each input/output observation.
Vector
θ = [wT tT sT aT]
T
includes: the weights w = [w1 w2... wm]T, the
translations t = [t1 t2... tm]T, the dilations s = [s1 s2 ...sm]T and the direct terms
a = [a1 a2... aN]T.
θ(k + 1) = θ(k) + ∆θ(k) = θ(k) −μ dJ(θ)
dθ
(17)
where J(θ) is given below depending on the corresponding regularization technique.
For the square norm smoothing function we have:
J1(θ) = 1
2 (yn −f n
d )2 + λ∑
j
w2
j sj
(18)
Then:
dJ1(θ)
dθ
= en dyn
dθ + λ d
dθ ∑
j
w2
j sj
(19)
Authenticated
6:01 PM

152
|
M. Z. E.-A. Skhiri and M. Chtourou
where en = yn −f n
d representing the error between the network output and the desired
output corresponding to the nth sample.
In the same manner, the error function using the adjusted parameters decay
regularization can be given as follows:
J2(θ) = 1
2 (yn −f n
d )2 + 1
2
m
∑
j=1
(λ1w2
j + λ2s2
j + λ3t2
j ) + 1
2
N
∑
j=1
λ4a2
j
(20)
Then:
dJ2(θ)
dθ
= en dyn
dθ +
m
∑
j=1
λ1wj + λ2sj + λ3tj + λ4
N
∑
j=1
aj
(21)
At this stage, the corresponding partial derivatives will be determined. As far as the
smoothness term is concerned, its partial derivative is simple and direct. However,
it is more interesting to give the partial derivative of the basic cost function which is
common for both regularization techniques. So, for the network expression used in
this paper which is given by the following equation:
y(x) =
m
∑
j=1
wjψ(Dj(x −tj))
(22)
dE(θ)
dθ
= en dyn
dθ with respect to each network parameter is expressed as:
Weights wj:
dE
dwj
= enψj(Dj(xn −tj))
(23)
Translations tj:
dE
dtj
= −enwjDjψ󸀠
j(Dj(xn −tj))
(24)
where: ψ󸀠(x) = dψ(x)
dx
.
Dilations sj:
dE
dsj
= −enwjD2
j diag(xn −tj)ψ󸀠
j(Dj(xn −tj))
(25)
6 Simulation Results
For instance, both regularization techniques are tested and compared to each other
and to a non regularized case. Two examples will be tested using two dynamic
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
153
nonlinear plants. In each case, the input will be divided into two sets. A ﬁrst set is
used for training, and a second one is used for checking.
6.1 Example 1
The ﬁrst example is a nonlinear plant governed by the following difference equation.
yd(k + 1) = 1.5
yd(k)
1 + y2
d(k)
+ 0.3cosyd(k) + 1.2u(k)
(26)
where: u(k) =
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨
sin(2πk
250),
k ≤500
0.8sin(2πk
250) + 0.2sin(2πk
25 ),
500 < k ≤800
(27)
Simulations will be applied to both regularization techniques and to a third case in
which no regularization term is added. For all these cases, the corresponding plant
yd(k) and its estimated version denoted by y(k), as well as the corresponding training
and checking errors are represented in Figs. 1–6, respectively.
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y   and   yd
Samples
checking data
training data
Fig. 1. The plant (dashed line) and its estimated version (continued line) with no regularization term
added.
Authenticated
6:01 PM

154
|
M. Z. E.-A. Skhiri and M. Chtourou
0
100
200
300
400
500
600
700
800
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
Error 
Samples
checking error
training error
Fig. 2. Training and checking error for the case without regularization term.
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y  and  yd
Samples
checking data
training data
Fig. 3. The plan (dashed line) and its estimated version (continued line) using square norm
regularization.
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
155
0
100
200
300
400
500
600
700
800
−0.1
−0.05
0
0.05
0.1
Error 
Samples
checking error
training error
Fig. 4. Training and checking error using square norm regularization.
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y  and   yd
Samples
checking data
training data
Fig. 5. The plant (dashed line) and its estimated version (continued line) using the adjusted
parameters decay regularization.
Authenticated
6:01 PM

156
|
M. Z. E.-A. Skhiri and M. Chtourou
0
100
200
300
400
500
600
700
800
−0.1
−0.05
0
0.05
0.1
Error 
Samples
checking error
training error
Fig. 6. Training and checking error using the adjusted parameters decay regularization.
6.2 Example 2
The second example is a nonlinear plant governed by the difference equation (28).
yd(k + 1) =
yd(k)
1 + y2
d(k)
+ 0.2u(k)3
(28)
where:
u(k) =
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨
sin(2πk
250) + sin(2πk
100),
k ≤500
0.8sin(2πk
250) + 0.2sin(2πk
25 ),
500 < k ≤800
(29)
Similar to example 1, the simulations will be applied to both regularization techniques
and to a none regularized case. For all these cases, the corresponding plant yd(k)
and its estimated version denoted by y(k), as well as the corresponding training and
checking errors are represented in Figs. 7–12, respectively. For both examples, the rest
of the training process parameters are listed in Tab. 1. It should be noticed that TMSE
and CMSE stand for training and checking mean square errors respectively.
According to the simulations, it is clear that both treated approaches have guaran-
teed a satisfactory generalization compared to the case presenting no regularization
term. However, the square norm approach has shown slightly better result compared
to the adjusted parameters decay approach. This can be seen from Tab. 1, where the
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
157
training and the checking mean square errors (MSE) generated by the square norm
method are less than the MSE generated by the second method.
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y  and  yd
Samples
checking data
training data
Fig. 7. The plant (dashed line) and its estimated version (continued line) with no regularization term
added.
0
100
200
300
400
500
600
700
800
−0.25
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
0.2
0.25
Error 
Samples
checking error
training error
Fig. 8. Training and checking error for the case without regularization term.
Authenticated
6:01 PM

158
|
M. Z. E.-A. Skhiri and M. Chtourou
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y  and  yd
Samples
checking data
training data
Fig. 9. The plant (dashed line) and its estimated version (continued line) using the square norm
regularization.
0
100
200
300
400
500
600
700
800
−0.1
−0.08
−0.06
−0.04
−0.02
0
0.02
0.04
0.06
0.08
0.1
Error 
Samples
checking error
training error
Fig. 10. Training and checking error using the square norm regularization.
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
159
0
100
200
300
400
500
600
700
800
−2.5
−2
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
y and yd
Samples
checking data
training data
Fig. 11. The plant (dashed line) and its estimated version (continued line) using the adjusted
parameters decay regularization.
0
100
200
300
400
500
600
700
800
−0.1
−0.05
0
0.05
0.1
0.15
Error 
Samples
checking error
training error
Fig. 12. Training and checking error using the adjusted parameters decay regularization.
Authenticated
6:01 PM

160
|
M. Z. E.-A. Skhiri and M. Chtourou
Tab. 1. Performances of proposed regularization approaches.
Proposed approach
No regularization term
Square norm
Adjusted parameter decay
Example 1
TMSE
8.804 × 10−4
3.196 × 10−4
5.754 × 10−4
CMSE
0.078
0.0012
0.0035
Example 2
TMSE
9.096 × 10−4
4.951 × 10−4
6.51 × 10−4
CMSE
0.0278
0.0027
0.0069
Number of wavelets
12
12
12
λ1 = 10−3
Hyperparameters
λ = 0
λ = 10−3
λ2 = 10−3
λ3 = 10−3
λ4 = 2 × 10−3
The value of the hyperparameters has also an important inﬂuence on the whole
training process, and so, on the generalization improvement.
7 Conclusion
Similar to neural networks, the generalization improvement of wavelet networks
is considered to be a important issue. In fact, a given network may have good
approximation accuracy, but could not perform well on unseen data. To deal with
this kind of problem different regularization techniques have been carried out.
Applied to wavelet networks, the treated techniques in this paper known as the
square norm and the adjusted network parameters decay have provided numerous
network parameters that could add more ﬂexibility and control to the smoothness
term. Consequently, this will, certainly, lead to a better generalization compared to
a non regularized network. This improvement has been clearly shown through out
the satisfactory results obtained in this paper using both regularization techniques.
Another important parameter that has a serious impact on the generalization process
is the hyperparameter that controls the strength of the regularization. In fact, the
convenient choice of this parameter leads to an important future work that could be
carried out.
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
161
Bibliography
[1]
M.Z.E.A. Skhiri and M. Chtourou. Wavelet Neural Networks Generalization Improvement. 10th
Int. Multi-Conf. on System, Signals and Devices. March 2013.
[2]
H. Chen. On Regularized Negative Correlation Learning for Neural Network Ensembles. IEEE
Trans. on Neural Network, 20(12):1962–1979, 2009.
[3]
J. Yaochu, T. Okabe and B. Sendhoff. Neural network regularization and ensembling using
multi-objective evolutionary algorithms. Congress on evolutionary computation, Portland,
USA, :1–8, 2004.
[4]
G. Ping, M.R. Lyu and C.L.P. Chen. Regularization parameter estimation for feedforward neural
networks. IEEE Trans on Networks Systems, Man and Cybernetics, 33:35–44, 2003.
[5]
J. Larsen and L.K. Hansen. On optimal data split for generalization estimation and model
selection. IEEE Signal Processing Society Workshop on Neural Networks for Signal Processing
IX, 225–234, 1999.
[6]
J Larsen and L.K. Hansen. Generalization performance of regularized neural network models.
IEEE Workshop on Neural Networks for Signal Processing IV, :42–51, 1994.
[7]
F. Girosi, M. Jones and T. Poggio. Regularization Theory and Neural Networks Architectures.
Neural Computation, 7:219–269, 1995.
[8]
C. M. Bishop. Neural Networks for Pattern Recognition. Oxford University Press, Oxford, UK,
1995.
[9]
S. H. Chanz, H. W. Ngan and A. B. Rad. Improving Bayesian Regularization of ANN via
Pre-training with Early-Stopping. Neural Processing Letters, 18(1):29–34, 2003.
[10] Y.Shao, G.N. Taff and S. J. Walsh. Comparison of Early Stopping Criteria for Neural
Network-Based Subpixel Classiﬁcation. IEEE Geoscience and Remote Sensing Letters, vol
8(1):113–117. 2011.
[11] G. Ramazan and Q. Min. Pricing and Hedging Derivative Securities with Neural Networks:
Bayesian Regularization, Early Stopping, and Bagging. IEEE Trans. on Neural Networks., 12(4),
2001.
[12] M.S. Iyer and R.R. Rhinehart. A novel method to stop neural network training. American Control
Conf., 2:929–933, Chicago, USA, 2000.
[13] L. Prechelt. Early stopping - but when, Neural Networks: Tricks of the Trade. Springer-Verlag,
Berlin Heidelberg vol. 1524 of LNCS. chapter 2, pp. 55–69, 1998.
[14] L. Prechelt. Automatic early stopping using cross validation: quantifying the criteria. Neural
Networks, 761–767, 1998.
[15] Y. Shao. Comparison of Early Stopping Criteria for Neural-Network-Based Subpixel
Classiﬁcation. IEEE Geoscience and Remote Sensing Letters, 8(1):113–117, 2011.
[16] C. S. Leung, H.J.Wang and J. Sum. On the Selection of Weight Decay Parameter for Faulty
Networks. IEEE Trans. on Neural Networks, 21(8), 2010.
[17] Q. Zhang. On Analysis of weight decay regularisation in NNARX nonlinear identiﬁcation. 5th Int.
Colloquium on Signal Processing and Its Applications, CSPA 2009, 2009.
[18] M.H.F. Rahiman, M.N. Taib, R. Adnan and Y.M. Salleh. Analysis of weight decay regularization
in NNARX nonlinear identiﬁcation. 5th Int. Colloquium on Signal Processing and Its
Applications, CSPA 2009, 2009.
[19] G. Gnecco and M. Sanguineti. The weight-decay technique in learning from data: An
optimization point of view. Computational Management Science, 6(1), 2009.
[20] G. Gnecco and M. Sanguineti. Weight-decay regularization in reproducing Kernel Hilbert
spaces by variable-basis schemes. Computational Management Science, 8:625–634, 2009.
Authenticated
6:01 PM

162
|
M. Z. E.-A. Skhiri and M. Chtourou
[21] J. L. Bernier, J. Ortega, M. M. Rodriguez, I. Rojas and A. Prieto. An accurate measure for
multilayer perceptron tolerance to weight deviations. Neural Processing Letters, 10(2):121–130,
1999.
[22] Z. Zhang. Learning algorithm of wavelet network based on sampling theory. Neurocomputing,
71:244–269, 2007.
[23] Z. Zhang. An Algorithm of Wavelet Network Learning from Noisy Data. Intelligent Control and
Automation, :2746–2751, 2006.
[24] X. Gao and J. Zhang. A novel orthonormal wavelet network for function learning. Int. Conf. on
Advances in Natural Computation, 2005.
[25] P. Zheng, W. Tang and J. Zhang. Generalization ability analysis of one-dimensional wavelet
neural network by simulations. Control and Decision Conf., :2506–2510, 2008.
[26] E. Ribes-Gomez, S. McLoone and G. Irwin. Orthogonal wavelet network construction using local
regularisation. First Int. IEEE Symp. on Intelligent Systems, 1:271–276, 2002.
[27] A. Antoniadis and F. Jianqing. Regularization of Wavelet Approximations. J. of the American
Statistical Association, 96(455):939–967, September, 2001.
[28] Q. Zhang and A. Benveniste. Wavelet networks. IEEE Trans. on Neural Networks. 3(6):889–898,
1992.
[29] Q. Zhang. Wavelet networks: the radial structure and an efficient initialization procedure.
Technical Report of Link Ping University, LiTH-ISY-I-1423, 1992.
[30] Q. Zhang. Using wavelet network in nonparametric estimation. IEEE Trans. on Neural Networks,
8(2):227–236, 1997.
[31] B. Christophe, S. Mallat and J.J. Slotine. Wavelet Interpolation Networks. European Symp. on
Artiﬁcial Neural Networks, ESANN’1998, Bruges, Belgium, :47–52, 1998.
[32] A. Rakotomamonjy and S. Canu. Frames, Reproducing Kernels, Regularization and Learning.
J. of Machine Learning Research., 6:1485–1515, 2005.
[33] F. Girosi. An Equivalence between Sparse Approximation and Support Vector Machines. Neural
Computation, 10:1455–1480, 1998.
[34] L. Yu, K.K. Lai, S.Y. Wang and W. Huang. A Bias-Variance-Complexity Trade-Off Framework for
Complex System Modeling. Int. Conf. on Computational Science and its Application, Berlin
Heidelberg. :518–527, 2006.
[35] S. Geman, E. Bienenstock and R. Doursat. Neural networks and the bias/variance dilemma.
Neural Computations, 4(1):1–58, 1992.
Biographies
Mohamed Zine El Abidine Skhiri born in Monastir (Tunisia) in 1959. He
received the Bachelor of Science in Electrical Engineering from Syracuse
University New York, USA in 1985, the Master of Science in Electrical
Engineering from Syracuse University New York, USA in 1987 and the
Doctorate in Electrical Engineering from the National school of Engineering
of Sfax, Sfax, Tunisia on February 2013. He is currently a teaching assistant
in the Electrical Engineering Department of the Institut Supérieur des Etudes
Technologiques de Sousse , Sousse Tunisia. His current research interests
include learning algorithms, Wavelet neural networks and their engineering
applications.
Authenticated
6:01 PM

Generalization of wavelet networks using regularization
|
163
Mohamed Chtourou was born in Sfax (Tunisia) in 1963. He received the
Engineering Diploma in electrical engineering from the Ecole Nationale
d’Ingénieurs de Sfax-Tunisia in 1989, the Diplôme d’Etudes Approfondies in
Automatic Control from the Institut National des Sciences Appliquées de
Toulouse-France in 1990, and the Doctorat in Process Engineering from the
Institut National Polytechnique de Toulouse-France in 1993 and the
Habilitation Universitaire in Automatic Control from the Ecole Nationale
d’Ingénieurs de Sfax-Tunisia in 2002. He is currently a professor in the
Department of Electrical Engineering of National School of Engineers of
Sfax-University of Sfax-Tunisia. His current research interests include
learning algorithms, artiﬁcial neural networks and their engineering
applications, fuzzy systems, and intelligent control. He is author and
co-author of more than forty papers in international journals and of more
than sixty papers published in national and international conferences.
Authenticated
6:01 PM

Authenticated
6:01 PM

N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre
Multivariable Adaptive Neural Control Based
on Multimodel Emulator for Nonlinear Square
MIMO Systems
Abstract: This work describes multivariable adaptive neural control based on mul-
timodel emulator for nonlinear square MIMO systems. Multimodel approach is an
interesting alternative and a powerful tool for modelling and emulating complex
processes. This paper deals with the identiﬁcation of uncoupled nonlinear MIMO
systems employing an uncoupled multimodel. Efficiency of this multimodel for sys-
tems emulation is illustrated in a multivariable adaptive neural control scheme. This
emulator presents an important advantage in comparison to the classical emulators
developed in the literature. Indeed, the multimodel emulator avoids the online
adaptation procedure and the painful selection of the initialization parameter. The
effectiveness of the proposed multimodel emulator and the control design for MIMO
nonlinear systems are illustrated through numerical simulations.
Keywords: Uncoupled multimodel, indirect adaptive control, multivariable nonlinear
systems, emulation, Neural Network.
1 Introduction
The presence of large nonlinearities in complex system dynamics makes the linearized
models inefficient for controller design in many situations. Thus, nonlinear multivari-
able control has been the subject of constant research over several past decades. A
promising alternative for the control of MIMO (Multi Input Multi Output) nonlinear
dynamical systems is the implementation of neural networks [16, 20]. More precisely,
there is an increasing interest for adaptive control methodologies based on neural
networks [2, 3, 11, 21]. Since, the adaptive controller parameters are time varying, the
online updating of these parameters is the key issue of adaptive control. However,
most of this control schemes are usually based on algorithms that require a precise
knowledge of the process dynamics and which need to evaluate the outputs variation
against the inputs variation. In this context, an indirect adaptive control scheme based
on recurrent neural networks controller (NC) and including a neural emulator (NE) has
N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre: N. Bahri1, email:
bahri.nesrine@gmail.com, A. Atig1, email: atigasmatica@yahoo.fr, R. Ben Abdennour1, email:
Ridha.benabdennour@enig.rnu.tn, F. Druaux2 email: fabrice.druaux@univ-lehavre.fr, and D.
Lefebvre2 email: dimitri.lefebvre@univ-lehavre.fr, 1 Research Unit of Numerical Control of Industrial
Processes at ENIG (CONPRI), University of Gabes, Gabes Engineering School, Gabes, Tunisia,
2 Electric and Automatic Engineering Research Group (GREAH), University of Le Havre, France
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 165–182.
DOI 10.1515/9783110470468-010
Authenticated
6:01 PM

166
|
N. Bahri et al.
y (k)
y (k)
u (k)
Neural
Controller
Plant
yc (k)
yn (k)
+
+
_
_
Emulator
Fig. 1. Indirect neural control structure.
been previously proposed by the authors (Fig. 1) [1–5, 12, 21]. The proposed adaptation
algorithm, used to update the NE and the NC parameters, is inspired from the real time
recurrent learning (RTRL) algorithm.
This method drives the adaptation of all parameters whatever the process evolu-
tion. But, the neural emulator used in this scheme suffers from a strong limitation.
Indeed, the obtained open and closed loop performance depends on the selection
of a speciﬁc initialization parameter which is introduced to insure the starting of the
parametric adaptation from zero initial conditions.
To overcome these problems, we proposed in our previous works [7, 8] to replace
this neural emulator by a multimodel emulator for the adaptive control of SISO
nonlinear systems. The contribution of this paper is to extend these works to square,
uncoupled MIMO nonlinear systems. The multimodel approach is known as a power-
ful technique to overcome difficulties encountered in conventional representations
and emulations of nonlinear systems. This approach is used in this paper to identify
a set of models wich constitutes the multimodel emulator. This identiﬁcation is made
in open loop which reduces the computational complexity of the neural emulator and
gets rid of problems caused by NE initialization parameter.
In this context, a multivariable adaptive neural control based on multimodel
emulator is proposed for nonlinear square MIMO systems.
This paper is structured as follows. Section 2 describes the multimodel emulator
for multivariable systems. A nonlinear MIMO system simulation illustrates the per-
formance of the proposed ME in open loop emulation compared to the usual NE.
In section 3, adaptive neural control based on multimodel emulation is developed.
Simulation are proposed, illustrating the performance of the proposed ME in closed
loop compared to the neural one. Conclusion and future works are enumerated in
section 4.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
167
2 Multimodel Emulation for Nonlinear
MIMO Systems
2.1 Parametric Estimation Procedure
Our goal is to represent a multivariable nonlinear system with a decoupled mul-
timodel. Let us deﬁne NIN and NOUT, respectively as the number of plant inputs and
outputs where IN and OUT represent the set of inputs and outputs. In the following,
we investigate square MIMO systems (ie. N = NIN = NOUT). In order to introduce
the multimodel approach and for simplicity reasons any uncoupled MIMO model
is decomposed into MISO (Multi Input Single Output) model. Each MISO model is
modeled by a MISO multimodel: each MISO multimodel is attached to one of the
system outputs. Thereafter identiﬁcation tools available in [7, 8, 17–19], although
developed in the context SISO are directly used to identify a MIMO system and to
design multimodels for such systems. Without loss of generality, the multimodel is
used up to now for nonlinear uncoupled multivariable systems.
The uncoupled structure, used for the lth MISO multimodel l ∈OUT (Fig. 2), is
given by a state space representation in discrete time (k stands for the time variable)
Bl
l,1(  (k))
l,i(  (k))
uN(k)
u1(k)
(k)
Normalization
yl,1(k)
yl,i(k)
yml(k)
Xl,1(k + 1) = Al,1( l,1)Xl,1(k) + Bl,1( l,1)U(k)
yl,1(k) = Cl,1( l,1)Xl,1(k)
Xl,i(k + 1) = Al,i( l,i)Xl,i(k) + Bl,i( l,i)U(k)
yl,i(k) = Cl,i( l,i)Xl,i(k)
Xl,Nml(k + 1) = Al,Nml( l,Nml)Xl,Nml(k) + Bl,Nml( l,i)U(k)
yl,Nml(k) = Cl,Nml( l,i)Xl,Nml(k)
yl,Nml(k)
l,Nml( (k)
Fig. 2. ME base structure for multivariable nonlinear systems.
Authenticated
6:01 PM

168
|
N. Bahri et al.
with sampling period ∆T:
Xl,i(k + 1) = Al,i(θl,i)Xl,i(k) + Bl,i(θl,i)U(k)
yl,i(k) = Cl,i(θl,i)Xl,i(k)
(1)
where, Xl,i ∈ℝnl,i and U = [u1(k), ..., ul(k), ..., uN(k)]T ∈ℝN are the state vector and the
input vector, yl,i(k) and nl,i are the output and the dimension of the ith local model,
respectively. Al,i(θl,i), Bl,i(θl,i) and Cl,i(θl,i) are, respectively, the state (or system)
matrix, the input matrix and the output matrix of dimension 1 x nl,i.
The multimodel representing the lth system output yml(k) is deﬁned by:
yml(k) =
Nml
∑
i=1
μl,i(ξ(k))yl,i(k)
(2)
Nml is the number of local models for the lth system output.
ξ(k) = [ξ1(k), ..., ξl(k), ..., ξN(k)]T is the decision variable vector which can be
taken as the measurable state variables and/or input/output variables. In this work,
the input vector is set as decision variables (ξ(k) = U(k)).
The local model contribution depends on the weighting function μl,i(ξ(k)). A large
choice of weighting functions is possible, they can be taken as triangular, sigmoidal,
or gaussian functions and they must satisfy the following convex sums:
Nml
∑
i=1
μl,i(ξ(k)) = 1, ∀i = 1...Nml,
0 ≤μl,i(ξ(k)) ≤1
Here the weighting functions μl,i(ξ(k)) are obtained from normalized gaussian func-
tions wl,i(ξ(k)):
wl,i(ξ(k)) =
N
∏
j=1
exp[−[ξj(k) −cl,ij]2
σ2
l,ij
]
μl,i(ξ(k)) =
wl,i(ξ(k))
Nm,l
∑
p=1
wl,p(ξ(k))
(3)
cl,ij and σl,ij are respectively the centre and the dispersion of the ith weighting
function.
Several methods have been proposed for the decomposition of the operating space
and the determination of the corresponding weighting functions parameters. In this
context, methods based on classiﬁcation using Kohonen map and the Chiu classiﬁca-
tion were proposed for SISO nonlinear systems [10, 13]. The static characteristic of the
considered system can also be used for the operating space decomposition [7, 8, 15, 17].
In the present work, the choice of Nml, cl,ij and σl,ij requires a priori informations
about the static characteristic of the considered system.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
169
Let us ﬁrst deﬁne, for each MISO multimodel the vector of unknown parameters
θl,i as follow:
θl = [θT
l,1
...
θT
l,i...
θT
l,Nml]T
(4)
where each column block θl,i is formed by the unknown parameters of the ith local
model. The problem of parametric estimation arises in the following terms: using the
input/output identiﬁcation data we must ﬁnd the vector ̂θ the estimate of θ under the
minimum of a quadratic global criterion:
Jml = 1
2
NH
∑
k=1
(yml(k) −yl(k))2
(5)
where, NH is the number of training data.
Initially
the
Gauss–Newton’s
algorithm
was
used
for
the
optimization
procedure[18, 19]. In this work Levenberg–Marquardt’s algorithm is used [14]:
θl(it + 1) = θl(it) −∆l(it)(Hl(θl) + λl(it)I)−1Gl(θl)
(6)
θl(it) is the vector of the lth multimodel parameters at a particular iteration it and I
is the identity matrix of appropriate dimension. At each iteration,. Hl(θl) and Gl(θl)
are respectively the Hessian matrix and the gradient vector computed based on the
calculation of sensitivity functions of output multimodel with respect to local models
parameters:
Hl(θl) = ∂2Jml
∂θl∂θT
l
; Gl(θl) = ∂Jml
∂θl
(7)
∆l(it) is the relaxation coefficient introduced to minimises the criterion in the direction
of vector H−1
l Gl, λl(it) is a regularization parameter. This scalar combines judiciously
the gradient and the Gauss–Newton optimization methods to draw the proﬁle of
stability of the gradient algorithm and the speed of convergence of the Gauss–Newton
method. The values of λl(it) and ∆l(it) are adjusted, usually by means of a heuristic
based on the evolution of the criterion.
2.2 Numerical Example
2.2.1 Neural Emulator (NE) Limits
In this subsection, some simulation results are presented to demonstrate the problems
of the classical neural emulator presented in the literature in [4]. To do this, consider
Authenticated
6:01 PM

170
|
N. Bahri et al.
the following two-input, two-output nonlinear system:
y1(k)
=
1
2[(1.1 −0.1z11(k −1) −z21(k −1))y1(k −1)
+z11(k −1)u1(k −1) + z21(k −1)u2(k −1)]
y2(k)
=
1
2[(1.5 −z12(k −1) −0.2z22(k −1))y2(k −1)
+z12(k −1)u1(k −1) + z22(k −1)u2(k −1)]
(8)
with:
z11(k −1) = 0.4 −0.6y1(k −1)
1 + 0.2y1(k −1) ; z21(k −1) =
0.6u2(k −1)
1 + 0.2y1(k −1)
z12(k −1) =
0.5u1(k −1)
1 + 0.5y2(k −1) ; z22(k −1) = 0.7 −0.07y2(k −1)
1 + 0.1y2(k −1)
As noted in the introduction and demonstrated in [6], the neural emulation perform-
ance depends on a single initialization parameter εe which is chosen arbitrarily to
ensure the starting of the system emulation with zero initial conditions of parameters.
In fact, an intuitive choice of the initialization parameter can affect the emulation
performance. For example, the choice of εe leads to 0.02 lead to the results depicted in
Fig. 3. Time is given in an arbitrary time unit. This ﬁgure conﬁrms that the performance
is affected by the value of εe. Indeed, the neural emulator adapts itself to the variation
of the plant outputs with a relatively important output estimation errors. However,
another selection of εe = 0.4 allows the NE to provide a satisfactory estimation of the
precess outputs (Fig. 4).
In the next subsection we will demonstrate advantages of the multimodel
emulators.
0
200
400
600
800
1000
1200
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 y1
 yn1
k
0
200
400
600
800
1000
1200
−0.5
0
0.5
1
1.5
 y2
 yn2
k
Fig. 3. Variation of real nonlinear system and Neural Emulator outputs (εe = 0.02).
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
171
0
200
400
600
800
1000
1200
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
   y1
   yn1
k
0
200
400
600
800
1000
1200
−0.5
0
0.5
1
1.5
   y2
   yn2
k
Fig. 4. Variation of real nonlinear system and Neural Emulator outputs (εe = 0.4).
2.2.2 Effectiveness of the multimodel emulator
In this subsection, a simulation study is presented to verify the effectiveness of
the multimodel emulator for MIMO nonlinear systems. Consider the same nonlinear
MIMO systems deﬁned by (8).
The identiﬁcation of the two MISO multimodels is realized with a global criterion
(deﬁned by (5)). The inputs ul(k), l = 1,2 of the system, that will serve as decision
variables for the weighting functions (ξl(k) = ul(k)), consist of a signal with variable
amplitude (ul(k) ∈[−1,1], l = 1,2).
By exploiting the static characteristics of the system (Fig. 5), every MISO mul-
timodel comprises (Nm = 4) sub-models and the weighting functions (Fig. 6) asso-
ciated with each operating region are obtained by evaluating the expression (3) as
follows:
ym1
{
{
{
{
{
c1,11 = c1,21 = −1, c1,31 = c1,41 = 0.6, σ1,1 = 0.8
c1,12 = c1,32 = −1.2, c1,22 = c1,42 = 1.4, σ1,2 = 0.6
ym2
{
{
{
{
{
c2,11 = c2,21 = −1.2, c2,31 = c2,41 = 1.4, σ2,1 = 0.6
c2,12 = c2,32 = −0.8, c2,22 = c2,42 = 0.8, σ2,2 = 0.3
We note that, in general, the local models must have a structure as simple as possible.
Only the off-line validation phase of the base of models may increase the structure
complexity.
In this case, a set of ﬁrst order models provides sufficient precision. Indeed, the
validation results of the Multimodel Emulation given in Fig. 7 show the variations
of the real nonlinear system and the multimodel outputs (yl(k) and yml(k), l = 1,2).
Authenticated
6:01 PM

172
|
N. Bahri et al.
−1
−0.5
0
0.5
1
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
y1(k)
u1(k)
−1
−0.5
0
0.5
1
u2(k)
y1(k)
1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
−1
−0.5
0
0.5
1
y2(k)
u1(k)
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
−1
−0.5
0
0.5
1
u2(k)
y2(k)
−1.5
−1
−0.5
0
0.5
1
Fig. 5. The static characteristics of the considered real nonlinear system.
1
0.8
0.6
0.4
0.2
0
0
0.5
0
–0.5
–1 –1
–0.5
0.5
u2(k)
u1(k)
0
1
1
0.8
0.6
0.4
0.2
0
1
0.5
0
–0.5
–1 –1
–0.5
0
0.5
1
u1(k)
u2(k)
Fig. 6. Weighting functions.
The simulation results conﬁrm that the uncoupled multimodel emulator offers a
satisfactory modeling precision. These satisfactory obtained results are then com-
pared to those obtained for neural emulation [2].
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
173
0
200
400
600
800
1000
1200
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 y1
 ym1
k
0
200
400
600
800
1000
1200
−0.5
0
0.5
1
1.5
k
 y2
 ym2
k
Fig. 7. Variation of real nonlinear system and Multimodel Emulator outputs.
To evaluate emulators performance, two indexes are used, for each outputs, such
as the Mean square Error (MSEl) and the Variance-Accounted-For (VAFl) given by the
following equations:
MSEl = 1
NH
NH
∑
k=1
(yml(k) −yl(k))2
(9)
VAFl = max{1 −var{ynl(k) −yl(k) : k = 1...NH}
var{ynl(k) : k = 1...NH}
,0}
(10)
Table 1 summarizes these indexes calculated in open-loop emulation case for both
neural and multimodel emulators. In Tab. 1, we note that neural emulation depend
on the choice of the starting parameter εe. An intuitive and non systematic choice
of the initialization parameter can affect the emulation performance. Indeed, using
the neural emulator several tests were made to ﬁnd the value of εe = 0.4 which
gives relatively satisfactory emulation results. Results obtained using a multimodel
emulator remains better than the ones obtained for neural emulator.
Tab. 1. MSEl and VAFl (l = 1,2) for both outputs, in open-loop emulation case for both neural and
multimodel emulators.
Multimodel
Neural
Emulator
Emulator[4]
MSE1
1.410−3
2.5110−2 (εe = 0.02)
8.410−3 (εe = 0.4)
MSE2
3.210−3
1.3210−1 (εe = 0.02)
7.0410−2 (εe = 0.4)
VAF1
98.22%
32.2%(εe = 0.02)
80.74%(εe = 0.4)
VAF2
98.82%
29.25%(εe = 0.02)
70.67%(εe = 0.4)
Authenticated
6:01 PM

174
|
N. Bahri et al.
3 Adaptive Control Based on Multimodel Emulation
for Nonlinear MIMO Systems
3.1 Multivariable Neural Control Strategy based on
Multimodel Emulator
The neural controller (NC) is developed with fully connected recurrent neural net-
works. This structure is formed by Nc = 2N neurons. The NC input signals are the N
output error functions and the N desired outputs. These controller inputs are suitable
both on tracking and regulation issues. The control inputs are the N ﬁrst outputs of
the network.
According to the dynamic activation of neurons, the controller outputs are
calculated in discrete time by the following equations:
oi(k) = e−|τc(k−1)|∆Toi(k −1)
+(1 −e−|τc(k−1)|∆T)Di(k −1)
(11)
Di(k) = tanh(
Nc
∑
j=1
ϕij(k)oj(k) + zi(k))
oi is the ith neuron state of controller, ui(k) = oi(k), if i ∈1, ..., N is the ith controller
output, ϕij is the controller weight from neuron j to neuron i and 1/|τc| is the controller
time parameter. zi(k) = yci(k)−yi(k) if i ∈{1, ..., N}; zi(k) = yci−N(k) if i ∈{N +1, ...,2N}.
Let us consider the instantaneous square error between desired outputs and
measured outputs:
ec(k) = 1
2
N
∑
l=1
(ycl(k) −yl(k))2
(12)
The NC weights are updated by the minimisation of ec(k) according to an autonomous
algorithm inspired from the RTRL:
∆ϕij(k) = 󵄨󵄨󵄨󵄨ηc(k)󵄨󵄨󵄨󵄨∆T
N
∑
l=1
(ycl(k −1) −yl(k −1)) ∂yl(k −1)
∂ϕij
(13)
where, ηc(k) is the NC adapting rate.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
175
Using the multimodel emulator (2) the derivative of the output variation against
NC weights (∂yl(k)/∂ϕij, l = 1, ..., N) is approximated by (∂yml(k)/∂ϕij, l = 1, ..., N)
according to equation (14):
∂yml(k)
∂ϕij
=
N
∑
d=1
∂yml(k)
∂od
∂od(k)
∂ϕij
=
N
∑
d=1
∂yml(k)
∂od
Qdij(k)
(14)
then the term ∂yml(k)
∂ud
can replace the term ∂yml(k)
∂od
:
∂yml(k)
∂ud
=
Nml
∑
i=1
μl,i(ξ(k)) ∂yl,i(k)
∂ud
(15)
According to the NC dynamic behaviour given by (11), the sensitivity functions Qdij(k)
are calculated as follows:
Qdij(k) = e−|τc(k−1)|∆TQdij(k −1)
+(1 −e−|τc(k−1)|∆T)φd(k −1)ψd(k −1)
(16)
For d ∈{1, ..., N}, zd(k) = ycd(k) −yd(k) so φd(k) and ψd(k) are computed as:
φd(k) = tanh󸀠(
Nc
∑
h=1
ϕdh(k)oh(k) + zd(k))
ψd(k) = (δd
i oj +
Nc
∑
h=1
ϕdh(k)Qhij(k) −∂ymd(k)
∂ϕij
)
For d ∈{N + 1, ...,2N}, zd(k) = ycd(k) and φd(k) and ψd(k) are given :
φd(k) = tanh󸀠(
Nc
∑
h=1
ϕdh(k)oh(k) + zd(k))
ψd(k) = (δd
i oj +
Nc
∑
h=1
ϕdh(k)Qhij(k))
Based on the same method as the one used for the weights matrix adaptation, an
algorithm is deﬁned in order to adapt the parameters ηc(k) and τc(k):
∆ηc(k) = ∆T
N
∑
l=1
(ycl(k −1) −yl(k −1)) ∂yml(k −1)
∂ηc
(17)
∆τc(k) = 󵄨󵄨󵄨󵄨ηc(k)󵄨󵄨󵄨󵄨∆T
N
∑
l=1
(ycl(k −1) −yl(k −1)) ∂yml(k −1)
∂τc
(18)
Authenticated
6:01 PM

176
|
N. Bahri et al.
with:
∂yml(k)
∂ηc
=
N
∑
d=1
∂yml(k)
∂od
∂od(k)
∂ηc
∂yml(k)
∂τc
=
N
∑
d=1
∂yml(k)
∂od
∂od(k)
∂τc
(19)
Let’s deﬁne Ξηc
d = ∂od/∂ηc and Ξτc
d = ∂od/∂τc.
Ξηc
d and Ξτc
d are considered as small perturbations added to the dth neuron state
consequently to small variations ∂ηc and ∂τc of respectively ηc and τc [1–5]. For
simpliﬁcation, we set Ξηc
d = Ξτc
d = Ξd. Then we can deﬁne the functions Ξd as follows:
Ξd(k) = e−|τc(k−1)|∆TΞd(k −1)
+(1 −e−|τc(k−1)|∆T)(φd(k −1)χd(k −1) +
εc
|τc(k−1)|)
(20)
where εc = dΞd
dt
󵄨󵄨󵄨󵄨󵄨t=0 > 0 guarantees the algorithm starting and accelerates the controller
adaptation from zero initial conditions.
For d ∈{1, ..., N}, zd(k) = ycd(k) −yd(k) then χd(k) is computed as:
χd(k) =
Nc
∑
h=1
ϕh(k)Ξh(k) −∂ymd(k)
∂ηc
For d ∈{N + 1, ...,2N}, zd(k) = ycd(k) then:
χd(k) =
Nc
∑
h=1
ϕh(k)Ξh(k)
Adaptive neural control is used primarily to ensure the stability of the closed loop
system, the convergence of the control error to 0 and the rejection of the disturbances.
For these reasons it is important to study the stability of the presented approach
and its robustness with respect to perturbations. In this context, the stability of
indirect adaptive control scheme has been proposed by the authors [5, 12, 21] for
the neural emulator. First works [21] derived an on-line weights updating law from
the Lyapunov approach. According to the neural controller adaptive learning rate
parameter, sufficient conditions for stability were obtained. Then these works have
been improved using Lyapunov stability and tracking errors dynamics [5]. Indeed,
Lyapunov sufficient stability conditions for decoupled adaptive rates of the emulator
and controller were determined. New adaptation strategies based on the tracking error
dynamics and on the use of direct stability analysis were developed. In our future work
we envisage enlarging the stability study for the proposed adaptive control based on
a multimodel emulator and investigating the robustness of the approach with respect
to perturbations.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
177
3.2 Numerical Example
To illustrate the effectiveness of the adaptive neural controller based on multimodel
emulator for nonlinear MIMO systems, we consider the same nonlinear process
described by (8). The obtained performance will be compared with the NE ones. Both
tracking and regulation problems are studied according to numerical simulations.
A ﬁrst simulation includes for both outputs, a tracking phase [1,2500] and also a
regulation one [2500,4500]. During the regulation phase, at k = 3000, disturbances
(during 500 periods) in the form of a step input, with a magnitude of 10% of the
control outputs, was injected to the system. The term εc is used to ensure the starting
of the system with zero initial conditions of parameters. Using an arbitrary value of
εc (for example εc = 4) we obtain the result illustrated in Fig. 8. This ﬁgure shows
that good performances are obtained in tracking phase. A satisfactory perturbation
rejection is, also, recorded in regulation phase.
0
500
1000 1500 2000 2500 3000 3500 4000 4500
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
 yc1
 y1
k
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0
500
1000 1500 2000 2500 3000 3500 4000 4500
 yc2
 y2
k
Fig. 8. Adaptive Neural Control based on Multimodel Emulator (εc = 4): desired and real system
outputs.
On the other side, using a NE for adaptive neural control [4, 5] and the value of εe
obtained previously in the phase of open loop case (εe = 0.4), we obtain the result
illustrated in Fig. 9. For both system outputs, important oscillations are noted due
to the updating algorithm. This ﬁgure shows that, in regulation phase, perturbations
affect the control system performance and lead to high variance of the system outputs.
Table 2 summarizes the MSE calculated on adaptive neural control case based
on neural and multimodel emulators. This table conﬁrms that performance recorded
using a multimodel emulator is far better than that using neural one [4, 5].
A second simulation with only a tracking phase is considered. In this case desired
outputs speeds change at k = 1500. An arbitrary value of εc = 10 is taken. The
simulation results are illustrated in Figs. 10 and 11.
Authenticated
6:01 PM

178
|
N. Bahri et al.
0
500
1000 1500 2000 2500 3000 3500 4000
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
   yc1
   y1
k
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0
500
1000 1500 2000 2500 3000 3500 4000 4500
   yc2
   y2
k
Fig. 9. Adaptive Neural Control based on neural emulator (εe = 0.4 and εc = 4): desired and real
system outputs.
Tab. 2. MSE for both outputs, on Adaptive Neural Control case based on neural and multimodel
emulators (tracking and regulation cases).
Multimodel
Neural
Emulator
Emulator [4]
MSE1
4.5510−4
8.6610−2
MSE2
7.3210−4
7.2410−2
0
500
1000
1500
2000
2500
3000
3500
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 yc1
 y1
k
0
500
1000
1500
2000
2500
3000
3500
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 yc2
 y2
k
Fig. 10. Adaptive Neural Control based on Multimodel Emulator (εc = 10): desired and real system
outputs.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
179
0
500
1000
1500
2000
2500
3000
3500
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 yc1
 y1
k
0
500
1000
1500
2000
2500
3000
3500
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
 yc2
 y2
k
Fig. 11. Adaptive Neural Control based on neural emulator (εe = 8 and εc = 10): desired and real
system outputs.
These ﬁgures show that results recorded in the case of the strategy advanced in this
work is far better compared to the classical neural approach [4, 5]. In fact, there is
no adaptation phase with the emulator multimodel so it is faster than the neural
emulator.
Table 3 summarizes the MSE calculated on adaptive in this last control case. This
results conﬁrm our ascertainment.
Tab. 3. MSE for both outputs, on Adaptive Neural Control case based on neural and multimodel
emulators (tracking case).
Multimodel
Neural
Emulator
Emulator [4]
MSE1
1.610−3
6.8910−2
MSE2
1.310−3
5.710−2
4 Conclusion
This article proposes an uncoupled multimodel emulator for multivariable indirect
adaptive neural control scheme applied to nonlinear square and uncoupled MIMO
systems. The proposed ME consists in ﬁnding a set of submodels with a simple linear
structure and a set of appropriated weighting functions in order to combine these
submodels to constitute the global model. This substitution reduces the computa-
tional complexity of the multivariable neural adaptive control scheme and avoids the
problem related to the selection of the initialization NE parameter. The simulation
Authenticated
6:01 PM

180
|
N. Bahri et al.
results show clearly that the proposed multimodel emulator leads to good closed
loop performance relatively to the case where classical neural emulator is applied.
This results can be improved with an optimal choice of the local models structure
(weighting functions structure). Whereas, if the considered system is unstable in open
loop, the use of a stabilizing control to collect identiﬁcation data is necessary.
In our future works, systematic generation of weighting functions structure for
multimodel emulation will be envisaged. An extension of the multivariable neural
adaptive control to non-square systems will also attract our interest.
Bibliography
[1]
A. Atig, F. Druaux, D. Lefebvre, K. Abderrahim and R. Ben Abdennour. A new neural adaptive
control based on neural emulation of complex square systems. Int. Review of Automatic
Control, IREACO, 3(6):612–623, 2010.
[2]
A. Atig, F. Druaux, D. Lefebvre, K. Abderrahim and R. Ben Abdennour. Neural emulator and
controller with decoupled adaptive rates for nonlinear systems: application to chemical
reactors. Int. J. on Sciences and Techniques of Automatic Control and Computer Engineering,
(IJ-STA), 4(2):1298–1319, 2010.
[3]
A. Atig, F. Druaux, D. Lefebvre, K. Abderrahim and R. Ben Abdennour. Neural Emulation applied
To Chemical Reactor. 7th IEEE Int. Multi-Conf. on Systems, Signals and Devices (SSD’10).
Amman Jordan, 2010.
[4]
A. Atig, F. Druaux, D. Lefebvre, K. Abderrahim and R. Ben Abdennour. Neural Network Control
for Large Scale Systems with Faults and Perturbations. 10th IEEE Int. Conf. on Control and
Fault-Tolerant Systems (SysTol’10), Nice, France, 2010.
[5]
A. Atig, F. Druaux, D. Lefebvre, K. Abderrahim and R. Ben Abdennour. Adaptive control design
using stability analysis and tracking errors dynamics for nonlinear square MIMO systems.
Engineering Applications of Artiﬁcial Intelligence (EAAI), 25:1450–1459, 2012.
[6]
N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre. Emulation of Multivariable non
square and nonlinear systems, 14th Int. Conf. on Sciences and Techniques of Automatic control
and computer engineering (STA’13), Sousse, Tunisia, 2013.
[7]
N. Bahri, A. Messaoud and R. Ben Abdennour. A Multimodel Emulator For Non Linear System
Controls. Int. J. on Sciences and Techniques of Automatic Control and Computer engineering
(IJ-STA), 5(1):1500–1515, June 2011.
[8]
N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre. Multimodel and neural
emulators for non-linear system: application to indirect adaptive neural control. Int. J. of
Modelling, Identiﬁcation and Control (IJMIC), 17(4):348–359, 2012.
[9]
N. Bahri, A. Atig, R. Ben Abdennour, F. Druaux and D. Lefebvre. Emulation of Multivariable non
square and nonlinear systems, 14th International conference on Sciences and Techniques of
Automatic control and computer engineering (STA’13), Sousse, Tunisia, 2013.
[10] S. L. Chiu. Fuzzy model identiﬁcation based on cluster estimation. J. of Intelligent and Fuzzy
Systems, 2:267–278, 1994.
[11] Y. Fu and T. Chai. Nonlinear multivariable adaptive control using multiple models and neural
networks. Automatica, 43:1101–1110, 2007.
[12] E. Leclercq, F. Druaux, D. Lefebvre and S. Zerkaoui. Autonomous learning algorithm for fully
connected recurrent networks. Neurocomputing, 63:25–44, 2005.
Authenticated
6:01 PM

Multivariable Adaptive Control Based on Multimodel Emulator
|
181
[13] M. Ltaief, A. Messaoud and R. Ben Abdennour. An optimal systematic determination of
models’ base for multimodel representation: Real time application. Int. J. of Automation and
Computing, 11(6):644–652, 2014.
[14] Marquardt D., An algorithm for least-squares estimation of nonlinear parameters, SIAM J. on
Applied Mathematics, 11(2):431–441, 1963.
[15] A. Messaoud, M. Ltaief and R.Ben Abdennour. Supervision based on a Multipredictor for
an Uncoupled State Multimodel Predictive Control. 6th Int. Conf. on Electrical Systems and
Automatic Control, JTEA’2010, Hammamet, Tunisia, 2010.
[16] K.S. Narendra and K. Parthasarathy. Identiﬁcation and control of dynamical systems using
neural networks. IEEE Trans. on Neural Networks, 1(1):4–27, 1990.
[17] R. Orjuela, D. Maquin and J. Ragot. Nonlinear system identiﬁcation using uncoupled state
multiple-model approach. Workshop on Advanced Control and Diagnosis, ACD’2006, Nancy,
France, 2006.
[18] R. Orjuela, B. Marw, J. Ragot and D. Maquin. State estimation for non-linear systems using a
decoupled multiple model, Int. J. of Modelling, Identiﬁcation and Control, 4(1):59–67, 2008.
[19] R. Orjuela. Contribution à l’estimation d’état et au diagnostic des systèmes représentés par des
multimodèles. PhD thesis, National Polytechnic Institute of Lorraine, Nancy-France, 2008.
[20] L. Tian, C. Collins. A dynamic recurrent neural network based controller for a rigid ﬂexible
manipulator system. Mechatronics, 14:3187–3202, 2004.
[21] S. Zerkaoui, F. Druaux, E. Leclercq and D. Lefebvre. Stable adaptive control with recurrent
neural networks for square MIMO nonlinear systems. Engineering Applications of Artiﬁcial
Intelligence, 12(4–5):702–717, 2009.
Biographies
Nesrine Bahri received her Engineering Diploma in Electric-Automatic
engineering, in 2009, and the Master degree in Automatic Control and
Intelligent Techniques, in 2010, from National School of Engineers of
Gabes-Tunisia. Currently, she is pursuing her PhD thesis at CONPRI (Research
Unit of Numerical Control of Industrial Processes at ENIG) and at GREAH
(Electric and Automatic Engineering Research Group at Le Havre University).
Her areas of interest include nonlinear process identiﬁcation, multimodel
and multicontrol approaches, neural and multimodel emulation and
adaptive control.
Asma Atig received the Engineering Diploma in Electrical Engineering, in
2007, the Master degree in automatic control, in 2008, from the ENIS
(National School of Engineering of Sfax-Tunisia.), the Ph.D. degree in
Electrical Engineering from the ENIG (National School of Engineering of
Gabes-Tunisia. ) and from the University of Le Havre in Automatic, Signal
Processing and Computing, in 2012. Actually she is a Teaching Assistant in
Electrical Engineering Department at the High Institute of Industrial Systems
of Gabes-Tunisia. She is member of CONPRI (Research Unit of Numerical
Control of Industrial Processes at ENIG). Her areas of interest include
nonlinear process identiﬁcation, neural emulation and adaptive control.
Authenticated
6:01 PM

182
|
N. Bahri et al.
Ridha Ben Abdennour received the Doctorat de spécialité degree from the
Ecole Normale Supérieure de l’Enseignement Technique in 1987, and the
Doctorat d’Etat degree from the Ecole Nationale d’Ingénieurs de Tunis in
1996. He is Professor in Automatic Control at the National School of
Engineering of Gabes-Tunisia. He was chairman of the Electrical Engineering
Department and the Director of the High Institute of Technological Studies of
Gabes. He is the Head of the Research Unit of Numerical Control of Industrial
Processes and is the Founder and honorary president of the Tunisian
Association of Automatic and Numerisation. His research is on Identiﬁcation,
Multimodel & Multi-control approaches, Numerical Control and Supervision
of Industrial Processes. He is the co-author of a book on Identiﬁcation and
Numerical Control of Industrial Processes and he is the author of more than
300 publications. He has participated in the organization of several
Conferences and he was member of some scientiﬁc committees of
congresses.
Fabrice Druaux received the B.S. degree in physic and mathematics in 1976
the M.S. in physic in 1981 and the Ph.D. degree in physic from University of
Rouen (France) in 1986. Since 1988 he is an Asistant Professor at the Faculty
of Sciences and Technology of Le Havre (France). Since 1999 he is with the
G.R.E.A.H. (Electric and Automatic Engineering Research Group). His current
research interests include modeling, control and fault detection using
dynamical neural network. The principal applications are electro-technical
processes such as motors and wind generators.
Dimitri Lefebvre is graduated from the Ecole Centrale of Lille (France) in 1992.
He received the Ph.D. degree in Automatic Control and Computer Science
from University of Sciences and Technologies, Lille in 1994, and the HAB.
degree from University of Franche Comté, Belfort, France in 2000. Since 2001
he is Professor at Institue of Technology and Faculty of Sciences, University
Le Havre, France. He is with the G.R.E.A.H. (Electric and Automatic
Engineering Research Group). His current research interests include Petri
Nets and DESs, learning processes, adaptive control, fault detection and
diagnosis and applications to electrical engineering.
Authenticated
6:01 PM

H. Huang, C. Gühmann and Y. Yu
Sliding Mode Based Engine Speed Control for
an Automated Manual Transmission During
Gear Shifting Process
Abstract: An effective engine speed control brings an obvious improvement to the
automated manual transmission (AMT) shift quality during the gear shifting process.
In this paper a second-order sliding mode control with the super twisting algorithm
is applied. This control method has a good tracking performance and a strong
robustness to the nonlinear uncertainty system. The results show that this advanced
closed-loop control has huge advantages in comparison to conventional controls such
as PID control and open control. The overshoot and steady-state error are separately
reduced and prevented under all engine conditions, the AMT shift quality is improved.
Keywords: Sliding mode control, model-based control, engine speed control, super
twisting algorithm, automated manual transmission, automotive.
1 Introduction
An automated manual transmission (AMT) is designed and improved on the basis of
a manual transmission (MT). With the help of improved electronic technology and
optimized control algorithms, AMT not only inherits the advantages from MT, such
as lower weight, high efficiency and convenient maintenance, but also offers its own
features, such as reduced life-cycle costs and enhanced low fuel consumption. These
beneﬁts make AMT widely used, especially in the electric vehicle [1, 2]. Since the AMT
is shifted without load (Fig. 1), the power ﬂow is interrupted during this process. It
brings obviously vehicle speed reduction and a bad shift quality feeling to the driver
when the shifting duration is longer, the uncontrolled engine speed also causes the
difficulty for the subsequent clutch engagement control.
Based on the bus communication between the transmission control unit (TCU)
and the engine control unit (ECU), a rapid and accurate engine speed control
during the gear shifting process becomes a suitable method to reduce the AMT
shift duration and improves the AMT shift quality. The goal is to synchronize the
engine speed with the transmission main shaft speed during the gear shifting process.
The challenge is to that the controller needs a rapid response and an accurate
execution to the target speed request. Especially the controller should also have
H. Huang, C. Gühmann and Y. Yu: Institute Technische Universität Berlin, Germany,
email: hua.huang@campus.tu-berlin.de, email: yue.yu@mailbox.tu-berlin.de, email:
clemens.guehmann@tu-berlin.de, email: yue.yu@mailbox.tu-berlin.de
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 183–202.
DOI 10.1515/9783110470468-011
Authenticated
6:01 PM

184
|
H. Huang et al.
a strong robustness against the engine dynamic changes such as engine load,
environmental disturbance and system components aging. The conventional engine
controls, such as proportional-integral-derivative (PID) control and open control
using speed-torque-throttle three-dimensional map, are popular used as industrial
controllers due to their simple realization and acceptable control results [3]. However,
conventional engine controls cannot provide sufficient adaptability in all cases. As
Fig. 2 shows, the conventional control has a relative large overshoot after the step
response at 2 s, and when a load is added to the engine at 4.5 s, the controller
cannot supply a sufficient controllability and causes a steady-state error. This causes
an obvious engine speed oscillation during the gear shifting and it signiﬁcantly
decreases the AMT shift quality. These disadvantages make the follow-up shift quality
optimization difficult, and cause huge manpower and ﬁnancial costs.
time
old gear
new gear
enginetorque
enginespeed
shift process
engines peed, enginetorque, gear
Fig. 1. Schematic diagram of the AMT upshift process.
The sliding mode control (SMC) is a variable structure control (VSC) method [4]. It
is known as a robust control for uncertainty systems. The difference towards the
conventional control is that its control law switches from one continuous structure
to another in the state space instead of a continuous function of time. This brings
the beneﬁt that it has a good adaptation to the system disturbance and parameters
changing. For the ﬁrst-order sliding mode (FOSM), the control acts on the ﬁrst time
derivative of the sliding variable ̇s ( ̇s = ds/dt) to keep the system trajectories in the
sliding set s = 0. Since this control law is based on the one degree-freedom control,
it has disadvantages such as chattering from the high-frequency switching, which
inﬂuences the system performance and even damages the actuators.
In order to overcome this disadvantage, some approaches are proposed. For
example, a nonlinear reaching law containing an exponential term function of the
sliding surface is introduced in [5], it reduces the control input signal chattering
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
185
and also keeps high tracking performance in the steady-state regime. Also with the
development of higher-order sliding mode (HOSM), this problem is solved and the
control performances are improved [6, 7]. For the HOSM control (n-sliding, n ≥2), it
acts on higher time derivatives of the sliding variable, and drives the sliding variable
to zero, i.e., s = ̇s = ⋅⋅⋅= sn−1 = 0. In [8] a second-order sliding mode control algorithm is
applied to control an electronic throttle valve. The simulation and experiment results
show that this HOSM has a better tracking performance than the PI control and FOSM
control. The robustness of the HOSM controller is discussed in [9, 10], a diesel engine
was used to investigate the speed control under different load changes.
0
2
4
6
8
1000
1200
1400
1600
1800
time [s]
engine speed [rpm]
target speed
actual speed
overshoot
steady-state error
Fig. 2. Conventional control disadvantages.
In this paper, the second-order sliding mode controller with super twisting algorithm
is chosen and applied to control the engine speed during the AMT gear shifting
process in the model-based development. This second-order sliding mode control
has the features that it does not require the time derivatives of the sliding variable
and also effectively reduces the control signal chattering. This advantage makes it
easy to replace the conventional controller and simply achieve the requirements.
The controller parameters are easy to be determined and the tuning method is also
described here. The tracking performance for the target speed and the robustness
under different loads are also detailed investigated here.
The structure of this paper is as follows. Section 2 describes the control principle
of the second-order sliding mode controller with the super twisting algorithm. Section
3 presents the simulation results for the tracking performance, robustness and
the comparison with PI controller and open controller using speed-torque-throttle
three-dimensional map. In section 4, this approved controller is applied to the AMT
gear shifting process. Finally, a summary is concluded.
Authenticated
6:01 PM

186
|
H. Huang et al.
2 Second-Order Sliding Mode Control
The internal combustion engine of a passenger car is a nonlinear uncertainty system,
the conventional controller does not provide enough adaptability in all conditions
because of the dynamic changes, such as components aging and environmental
disturbance. The second-order sliding mode controller has features such as high
control accuracy and strong robustness, especially its control quality does not depend
on the accuracy of the system model, so it is suitable to be applied for the engine
speed control. The super twisting algorithm is chosen here, it has the advantage that it
only needs the variable s for controlling (usually ̇s is also needed for the second-order
sliding mode control). And this algorithm is also possible to be used for the FOSM to
weaken the chattering when the relative degree is 1: ( ∂
∂u s = 0, ∂
∂u ̇s
̸= 0).
2.1 Super Twisting Algorithm
The super twisting algorithm deﬁnes the control law for a system in (1) if the
relative degree is 2: ( ∂
∂u s = 0, ∂
∂u ̇s = 0, ∂
∂u ̈s
̸= 0) or in (2) if the relative degree is 1:
( ∂
∂u s = 0, ∂
∂u ̇s
̸= 0) [11]:
̈s = φ(t, x) +𝛾(t, x)u
(1)
̈s = φ(t, x) +𝛾(t, x) ̇u
(2)
u is control input, s is sliding variable, x is a state vector, 󵄨󵄨󵄨󵄨φ󵄨󵄨󵄨󵄨≤Φ, 0 < Γm ≤𝛾≤ΓM.
Φ, Γm, ΓM are positive constants. The super twisting algorithm is expressed as follows
(3, 4, 5) [11, 12]:
u(t) = u1(t) + u2(t)
(3)
̇u1 =
{
{
{
−u
|u| > 1
−W sign(s)
|u| ≤1
(4)
u2 =
{
{
{
−λ|s0|ρ sign(s)
|s| > s0
−λ|s|ρ sign(s)
|s| ≤s0
(5)
u1 and u2 are the control terms. W, λ and ρ are variable controller parameters. s is the
sliding variable. s0 is the boundary layer around sliding surface. Its corresponding
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
187
sufficient conditions for ﬁnite time convergence are:
W > Φ
Γm
;
λ2 ≥4Φ ΓM(W + Φ)
Γm3(W −Φ)
;
0 < ρ ≤0.5
(6)
The convergence of the super twisting algorithm is shown in Fig. 3.
0
0
s
˙s
Fig. 3. Super twisting sliding mode phase plot.
2.2 Engine Model
In order to evaluate the second-order sliding mode speed tracking performance during
the AMT gear shifting process, an engine model is used. A simpliﬁed engine model is
expressed in (7):
{
{
{
{
{
{
{
̇ne = 30
Je π [Te(ne, θ) −Tload]
̇θ = −1
τθ
θ + 1
τθ
u
(7)
where ne, Te and Je are the engine speed, torque and inertia. θ and u are the actual
throttle position and the system control input (in the engine model u stands for
the target throttle position). τθ is the time-delay constant. Tload denotes the engine
load.
Set the engine speed ne and θ as the state variable x (x = (x1, x2)T), the
target throttle position u as the control variable, then (7) can be transfered into a
Authenticated
6:01 PM

188
|
H. Huang et al.
state-space (8):
{
{
{
̇x1 = σ(x) + δ
̇x2 = α(x) + β u
(8)
where:
σ(x) = 30
Je π Te(x1, x2), δ = −30
Je π Tload, α(x) = −1
τθ
x2, β = 1
τθ
The second differential of the engine speed ne (x1 = ne) is expressed in (9) (based on
the differential of the ﬁrst state-space equation in (8) and δ is considered as constant):
̈x1 = ϕ(x) + η(x)u
(9)
where:
η(x) =
30
Je π τθ
∂Te
∂x2
, ϕ(x) = ( 30
Je π )
2 ∂Te
∂x1
Te(x1, x2) + 30
Je π
∂Te
∂x1
δ −
30
Je π τθ
∂Te
∂x2
x2
2.3 Controller Design
Applied with super twisting algorithm in the engine speed control, the sliding variable
deﬁnes as follows [13]:
s = e + c ̇e
(10)
e = neactual −netarget
(11)
Then s ﬁrst time derivative is given in the form:
̇s = ̇e + c ̈e = ̇x1 −̇x1t + c( ̈x1 −̈x1t)
= σ(x) + δ −̇x1t + c(ϕ(x) + η(x)u −̈x1t)
(12)
= σ(x) + c ϕ(x) + δ −̇x1t −c ̈x1t + c η(x)u
= φ(t, x) +𝛾(t, x)u
where:
x1 = neactual, x1t = netarget, 𝛾(t, x) = c η(x), φ(t, x) = σ(x) + c ϕ(x) + δ −̇x1t −c ̈x1t.
Simulation and experiment results show that the engine throttle valve has a better
tracking performance when the relative degree is 1 than the relative degree is 2 [8], so
c is chosen as a positive constant. Based on reference [11], (3), (4), (5) can be simpliﬁed
when controlled systems are linear in control, u does not need to be bounded and
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
189
s0 = ∞(ρ is set to 1/2 for the maximal possibility of second-order sliding realization):
u(t) = u1(t) −λ|s|
1
2 sign(s)
(13)
̇u1 = −W sign(s)
(14)
The corresponding control scheme is shown in Fig. 4. Since sliding variable s also
depends on the differential ̇e, the super twisting based robust exact differentiator [14]
is used.
controller
+
–
–
+
target speed
actual speed
error
throttle position u
ˆ˙e
e
1 / s
engine
super twisting
Eq. (13), ( 14)
super
twisting
Eq. (17), ( 18)
Fig. 4. Super twisting sliding mode control scheme.
2.4 Robust Exact Differentiator
The robust exact differentiator [14] is derived from the super twisting algorithm. Firstly
consider an auxiliary equation:
d ̂e
dt = ̂̇e
(15)
Assume a controller auxiliary equation output ̂e perfectly tracks the computed speed
error e:
ε := ̂e −e = 0
(16)
Then
̂̇e equals to the time derivative of e. And
̂e,
̂̇e can be considered as the
approximations of corresponding state variables e, ̇e. The super twisting algorithm
is used here for the tracking task,
̂̇e = ν −ϑ|ε|
1
2 sign(ε)
(17)
̇ν = −ψsign(ε)
(18)
ψ and ϑ are positive constants, they are tuned empirically according to section 2.5.
Authenticated
6:01 PM

190
|
H. Huang et al.
0
1
2
3
4
0
10
20
30
40
50
60
70
(a) signal without disturbance
time [s]
ideal diﬀ.
robust exact diﬀ.
4
4.5
5
5.5
6
–20
0
20
40
60
80
100
120
140
(b) signal with disturbance
time [s]
Fig. 5. Comparison of the robust exact differentiator with the ideal one. (a) left: without disturbance,
(b) right: with disturbance.
Figure 5(a) shows the comparison results of the robust exact differentiator with the
ideal one (du/dt) to a continuous signal (f(t) = 50t+10 sin(t)+0.1 cos(10t)), Fig. 5(b)
is the robust exact differentiator performance when a disturbance (a pulse signal,
amplitude is 5, period is 10 s, pulse width is 0.2 %) is added into this signal at 5 s.
It can be proved that the robust exact differentiator has the similar behavior as the
ideal one, and it also has a good robustness against the disturbance.
2.5 Controller Parameter Tuning Method
The tuning of the second-order sliding mode control parameters W and λ (see in (13),
(14)) are similar to the Ziegler–Nichols rules, ﬁrst W then λ. The W inﬂuences the
oscillation in the steady state and λ inﬂuences the response speed. Figure 6 shows the
tuning method of the W and λ variations to a step signal response. Firstly, parameter
λ is set to zero, W is increased from zero till the engine speed begins to oscillate, as
shown in Fig. 6(a). W is chosen between 80 % and 100 %, the detailed value choice
depends on the speed oscillation in the steady state. Then λ is tuned as the same
step. With the increasing of λ value, the system speed response time decreases, see
in Fig. 6(b). The detailed λ valve is chosen based on the compromise of the system
response time and the overshoot because when the response time decreases the
overshoot increases.
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
191
0.5
speed [rpm]
1
1.5
2
0
time [s]
(a) parameter W tuning
W [%]
0
500
1000
1500
2000
target signal
0
100
0.5
1
1.5
2
0
time [s]
(b) parameter λ tuning
λ [%]
target signal
speed [rpm]
0
500
1000
1500
2000
0
100
Fig. 6. Response performance in different W and λ. (a) top: W tuning, (b) bottom: λ tuning.
3 Testing and Comparison
In this section, the second-order sliding mode controller is tested in the following
content. Firstly, the controller real-time capability is veriﬁed based on a throttle valve
through the rapid control prototyping (RCP). Then, the controller convergence, track-
ing performance and robustness are tested in the engine model and the simulation
results are also compared with the conventional controllers.
3.1 Real-Time Capability
The torque of the gasoline internal combustion engine is regulated by the position
of the throttle valve, shown in Fig. 7, and it is also the main control object by the
Authenticated
6:01 PM

192
|
H. Huang et al.
second-order sliding mode controller. Before the sliding mode control is tested in the
engine system, it is necessary to verify it in the throttle valve system and compared
with other controllers.
Fig. 7. Throttle valve.
0
10
20
30
40
0
10
20
30
40
0
10
20
30
40
0
10
20
30
40
0
10
20
30
40
0
10
20
30
40
0
20
40
60
80
100
PI
angle [°]
error [°]
angle [°]
error [°]
angle [°]
error [°]
target
PI
–30
–20
–10
0
10
20
30
0
20
40
60
80
100
1-order SMC
target
1st SMC
–30
–20
–10
0
10
20
30
0
20
40
60
80
100
2-order SMC
target
2nd SMC
–30
–20
–10
0
10
20
30
time [s]
time [s]
time [s]
Fig. 8. Comparison results of different controller tracking performance in the throttle valve. (a) left:
PI control, (b) middle: ﬁrst-order SMC, (c) right: second-order SMC.
Here the controllers are implemented on a dSPACE® MicroAutoBox with a sampling
period of Ts = 1 ms. Firstly, continuous signals with different angle changes are
used to test the controller friction overcome ability and steady-state behavior, then
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
193
a discontinuous signal is used to test the controller response behavior. PID control,
ﬁrst-order and second-order sliding mode control are used here to track the target
angle signal. Since the derivative term in the PID controller is sensitive to the
environmental noise, here only proportional and integral ones are used. Figure 8
shows the tracking performance results. From the comparison, the ﬁrst-order sliding
mode control has a smaller overshoot and better stable control results than PI control,
but its chattering is obvious as described before. Second-order sliding mode control
can notably suppress it and has a good tracking performance at the same time.
Additionally, it can also state that the sliding mode controller is real-time capable.
Since the chattering problem, which gives rise to the mechanical components damage
and induces uncomfortable noise, the ﬁrst-order sliding mode is unpractical to the real
system, here the attention is only paid on the comparison of the conventional control
and second-order sliding mode control.
Following the veriﬁcation in the throttle valve system, the second-order sliding
mode control is then tested with the engine plant in the the model-in-the-loop (MiL)
simulation. The test content includes convergence, speed response and robustness.
3.2 Finite-Time Convergence
Firstly, the second-order sliding mode controller ﬁnite-time convergence is veriﬁed.
Figure 9 respectively shows the engine speed responses in the s and ̇s phase when a
step signal is given from 1000 rpm to 1500 rpm and then the engine is disturbed with
40 Nm load. The sliding variables s and ̇s converge to zero after a ﬁnite time duration.
–100 –50
0
50
100 150 200
–8000
–6000
–4000
–2000
0
2000
4000
6000
8000
speed response from 1000 rpm to 1500 rpm
s
˙s
–80 –60 –40 –20
0
20
40
–1500
–1000
–500
0
500
1000
1500
load disturbance 40 Nm
s
˙s
Fig. 9. Super twisting sliding mode convergence simulation. (a) left: speed response, (b) right: load
disturbance.
Authenticated
6:01 PM

194
|
H. Huang et al.
3.3 Tracking Performance
Figure 10 shows the controllers (second-order sliding mode control, PI control and
open control) tracking performance under a continuous signal. The second-order
sliding mode control shows a better tracking performance than the conventional
controls.
During the AMT gear shifting process, the engine speed value is requested to step
to a new one based on the shifted transmission gear ratio, so the tracking performance
for a step signal is also compared. The comparison results are shown in Fig. 11. The
open control, which uses speed-torque-throttle three-dimensional map to calculate
the desired throttle valve, has a smooth but relative slow response, it may be suitable
for the engine speed control during the AMT gear shifting process since the speed
control duration can be longer (depends on the gear shifting time and mechanical
constraints) and a better clutch control can also reduce the speed difference during
the engagement, but this method does not ﬁt for the rapid and accurate response
requirements here, so this control method is no longer discussed. Table 1 lists the
tracking performance indexes of these two controllers. esteady and eovershoot are
calculated through (19) and (20). In order to compare the step response in the whole
ranges (from 1000 rpm to 4000 rpm), nestep and nesteady (in the denominator of the
equations) are set to 1000 rpm. td is the delay time when the engine speed ﬁrst reaches
the 50 % of the steady-state value.
0
2
4
6
8
10
12
14
16
0
2000
4000
6000
speed [rpm]
0
2
4
6
8
10
12
14
16
–1000
0
1000
time [s]
error [rpm]
SMC, |e| dt = 25
PI, |e| dt = 427
open control
target
SMC
PI
open control
Fig. 10. Simulation results of continuous signal tracking performance.
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
195
0
0.5
1
1.5
2
2.5
3
3.5
4
0
1000
2000
3000
4000
5000
speed [rpm]
0
0.5
1
1.5
2
2.5
3
3.5
4
–1500
–1000
–500
0
500
1000
1500
time [s]
error [rpm]
target
SMC
PI
open control
SMC
PI
Fig. 11. Simulation results of step response.
Tab. 1. Tracking error for step signal.
speed [rpm]
controller
td [ms]
esteady [%]
eovershoot[%]
1000–2000
PI
62
−2.40
28.33
SM
66
0.14
18.97
2000–3000
PI
60
−3.27
26.27
SM
66
0.16
12.73
3000–4000
PI
62
−4.74
25.80
SM
70
0.30
10.54
4000–3000
PI
70
2.08
16.87
SM
66
0.01
8.86
3000–2000
PI
78
5.50
20.11
SM
80
−0.18
4.70
2000–1000
PI
107
13.82
13.82
SM
113
−0.19
1.51
esteady = nesteady −netarget
nestep
⋅100%
(19)
eovershoot = neovershoot −nesteady
nesteady
⋅100%
(20)
Authenticated
6:01 PM

196
|
H. Huang et al.
3.4 Robustness
The robustness of the engine speed is an important evaluation index in engine
control. Figure 12 shows the engine speed responses at various load conditions. From
this comparison, the second-order sliding mode control shows a better robustness
than the PI control. The comparison results are listed in Tab. 2. eRMS shows the
root-mean-square error between target speed and actual speed. ∫|e|dt describes the
error integral during the engine speed response in every 0.5 s.
0
0.5
1
1.5
2
2.5
3
3.5
1900
2000
2100
speed [rpm]
SMC
PI
0
0.5
1
1.5
2
2.5
3
3.5
0
20
40
60
80
load [Nm]
time [s]
Fig. 12. Simulation results of robustness under different load.
4 AMT Gear Shifting Application
Based on the above discussion, the second-order sliding mode control shows a
better control effect than the conventional one. The next step is to apply this control
algorithm to the AMT gear shifting process. The schematic diagram of MiL simulation
is shown in Fig. 13. The AMT equipped vehicle is modeled with Modelica® [15, 16],
the corresponding TCU, ECU control algorithms and driver’s command are developed
with MATLAB®/Simulink®. In order to integrate both tools and to achieve the MiL
simulation in PC, Silver® is used [17]. It co-simulates the Modelica® based model in
FMU (Functional Mockup Units) ﬁle and MATLAB®/Simulink® based controller in dll
(dynamic link library) ﬁle.
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
197
Tab. 2. Robustness under different load.
load [Nm]
controller
∫|e|dt
eRMS [rpm]
emax [%]
0–20
PI
6.72
8.16
1.90
SM
0.69
2.86
0.70
20–40
PI
11.51
11.82
2.79
SM
1.04
4.10
0.97
40–60
PI
12.94
13.02
3.07
SM
1.13
4.38
1.02
60–40
PI
6.26
8.72
1.93
SM
0.93
3.77
0.90
40–20
PI
11.15
10.95
2.66
SM
0.95
3.86
0.93
20–0
PI
10.09
10.20
2.63
SM
0.76
3.16
0.82
Driver
ECU
TCU
MATLAB®/Simlink®
Modelic a®
dll File
FMU File
Silver®
Fig. 13. Schematic diagram of MiL process.
The AMT gear shifting procedure includes the three phases: clutch opening, gear
shifting and clutch engagement.
1.
In the clutch opening phase, the engine load reduces to zero, the engine speed
increases suddenly and even causes a “grating” noise when the accelerator pedal
is too deep.
2.
In the gear shifting phase the transmission input speed value is changed to a new
one, the speed difference between the transmission main shaft and the engine
crank shaft occurs.
3.
In the clutch engagement phase, the clutch load is added into the engine again.
The engine speed intervention takes an important role in these phases, it keeps the
engine speed at a constant value when the clutch is opened and synchronizes the
Authenticated
6:01 PM

198
|
H. Huang et al.
engine speed with the transmission main shaft speed during the gear shifting phase.
In the clutch engagement phase, the engine torque control is traditionally applied to
prevent the engine speed from decreasing because of the load. With the introduced
sliding mode control, the engine torque control is needless while the sliding mode
controller has a good robustness to the load, as shown in Fig. 12. Finally, after the
clutch is engaged, the controller calculates a corresponding time for the intervened
throttle position back to the drivers desired position. The ﬂowchart of this process is
expressed in Fig. 14.
The gear shifting duration lasts approximately 0.5 s in the model-based AMT
vehicle, it is longer than the designed response time, so the control parameters of
the second-order sliding mode are intentionally slightly modiﬁed. Figure 15 shows
the AMT up shifting from 2nd to 3rd and down shifting from 3rd to 2nd in a ﬂat road.
start
return throttle control
right
phase 2. gearshifting:
control the engine speed
value to the desired one
ntarget = n2 · inew
phase 3. clutch engagement:
keep the engine speed
ntarget = n2ʹ · inew
phase 1. clutchopening:
keep the engine speed
ntarget = ne
Fig. 14. Flowchart for the AMT gear shifting speed control.
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
199
0
0.5
1
1.5
2
0
0.5
1
1.5
2
0
0.5
1
1.5
2
0
0.5
1
1.5
2
0
0.5
1
1.5
2
500
1500
2500
upshift 2nd  to 3rd
speed [rpm]
500
1500
2500
downshift 3rd  to 2nd
0
0.5
1
1.5
2
0
10
20
throttle [%]
0
2.5
5
0
0.5
1
1.5
2
0
0.5
1
clutch pos. [–]
0
0.5
1
0
0.5
1
1.5
2
0
0.5
1
time [s]
position [–]
speed [rpm]
throttle [%]
clutch pos. [–]
position [–]
gear
gate
0
0.5
1
time [s]
gear
gate
neactual
netarget
netarget
ninput
ninput
opened
closed
opened
closed
closed
closed
neactual
Fig. 15. Simulation results of gear shift between 2nd and 3rd. (a) left: upshift, (b) right: downshift.
Tab. 3. Engine speed control for different shiftings.
process
t [s]
esteady [%]
eovershoot [%]
1st–2nd
0.51
−0.26
−0.77
2nd–3rd
0.45
0.65
−0.82
3rd–4th
0.38
−0.34
−1.00
4th–5th
0.32
0.62
−0.97
5th–4th
0.24
0.25
1.59
4th–3rd
0.37
0.22
1.37
3rd–2nd
0.54
0.17
0.87
2nd–1st
0.32
0.32
1.32
From the simulation results, it can be found that the engine speed almost keeps a
constant value when the clutch opens (at about 0.45 s in Fig. 15(a) and about 0.36 s
in Fig. 15(b)), the speed regulation completes before the clutch begins to engage,
and while the clutch engages, the engine speed also keeps a constant value. Table 3
shows the detailed information of the engine speed control for different gear shifting,
t denotes the time when the engine speed neactual reaches the target value netarget,
esteady is the steady-state error and eovershoot is the overshoot error. It shows that the
Authenticated
6:01 PM

200
|
H. Huang et al.
sliding mode controller effectively regulates the engine speed in different gear shifting
processes and that the steady-state error and the overshoot error are satisfying.
5 Conclusion
In this paper, a second-order sliding mode controller with the super twisting algorithm
is applied to an AMT system during the gear shifting process. This control method has
the same input and output interface as the conventional control such as PID control
and open control, it makes controller replacement become easy. Its implementation
is also simple, the tuning of the control parameters are similar to the Ziegler-Nichols
rules. Simulation results show that this control method has a better tracking perform-
ance (more rapidly and accurately) and a stronger robustness than the conventional
control. This brings a big beneﬁt to the shift quality optimization during the AMT
gear shifting process. Combined with an appropriate control strategy, MiL simulation
results show that this controller can effectively reduce the engine speed oscillation
and regulate the engine speed within the gear shifting duration.
Bibliography
[1]
G. Xiong, J. Xi, Y. Zhai, Y. Hu, Y. Yu and H. Chen. Development of pneumatically automatic
mechanical transmission for a pure electric garbage truck. IEEE Int. Conf. on Industrial
Technology, (ICIT), :1108–1112, Vi a del Mar, March, 2010.
[2]
C. Liao, J. Zhang, and H. Zhu. A study of shift control algorithm without clutch operation for
automated manual transmission in the parallel hybrid electric vehicle. World Automotive
Congress, FISITA, Barcelona, May 2004.
[3]
Zaimin Zhong, Qiang Lv and Guoling Kong. Engine speed control for the automatic manual
transmission during shift process. 2nd Int. Conf. on Consumer Electronics, Communications
and Networks (CECNet), :1014–1017, Yichang, April, 2012.
[4]
R. A. DeCarlo, S. H. Zak, and G. P. Matthews. Variable structure control of nonlinear
multivariable systems: a tutorial. Proceedings of the IEEE, 76(3):212–232, 1988.
[5]
C. J. Fallaha, M. Saad, H. Y. Kanaan and K. Al-Haddad. Sliding-mode robot control with
exponential reaching law. IEEE Trans. on Industrial Electronics, 58(2):600–610, 2011.
[6]
T. Floquet, J.-P. Barbot and W. Perruquetti. Higher-order sliding mode stabilization for a class of
nonholonomic perturbed systems. Automatica, 39(6):1077–1083, 2003.
[7]
G. Bartolini, A. Ferrara, E. Usai and V.I. Utkin. On multi-input chattering-free second-order
sliding mode control. IEEE Trans. on Automatic Control, 45(9):1711–1717, 2000.
[8]
M. Reichhartinger and M. Horn. Application of higher order sliding-mode concepts to a throttle
actuator for gasoline engines. IEEE Trans. on Industrial Electronics, 56(9):3322–3329, 2009.
[9]
M. Khalid Khan, Keng Boon Goh, and Sarah K. Spurgeon. Second order sliding mode control of
a diesel engine. Asian J. of Control, 5(4):614–619, 2003.
[10] K. B. Goh, S. K. Spurgeon, and N. B. Jones. Higher-order sliding mode control of a diesel
generator set. Proc. of the Institution of Mechanical Engineers, Part I: J. of Systems and Control
Engineering, 217(3):229–241, 2003.
Authenticated
6:01 PM

Sliding mode based engine speed control for AMT
|
201
[11] W. Perruquetti and J. P. Barbot. Sliding Mode Control in Engineering. Marcel Dekker, Inc., New
York, U.S.A., 2002.
[12] A. Levant. Sliding order and sliding accuracy in sliding mode control. Int. J. of Control,
58(6):1247–1263, 1993.
[13] J.-J. E. Slotine and W. Li. Applied Nonlinear Control. Prentice Hall, U.S.A., 1991.
[14] Arie Levant. Robust exact differentiation via sliding mode technique. Automatica,
34(3):379–384, 1998.
[15] H. Huang, S. Nowoisky, R. Knoblich and C. Gühmann. Modeling and testing of the
hydro-mechanical synchronization system for a double clutch transmission. 9th Int. Modelica
Conf., :284–294, Munich, Germany, September 2012.
[16] H. Huang, S. Nowoisky, R. Knoblich and C. Gühmann. Modeling and simulation of an
automated manual transmission system. 7th Int. Conf. on Integrated Modeling and Analysis
in Applied Control and Automation (IMAACA), :44–51, Athens, Greece, September 25–27, 2013.
[17] Silver, version 2.4.4. Product help, QTronic, 2012.
Biographies
Hua Huang works as a research assistant at the chair of electronic
measurement and diagnostic technology (MDT) in the Technische Universität
Berlin with the scope of model-based calibration of automated
transmissions.
Clemens Gühmann (Professor) is the head of the chair of MDT in the
Technische Universität Berlin. Before taking this position, he worked as an
engineer at IAV automotive engineering. His research areas are modern
signal processing methods (e.g. Wavelets) for automotive systems, modeling
and calibration methods for automotive electronic control units as well as
pattern recognition and technical diagnosis.
Yue Yu is a Master-candidate student at the department of land and sea
transport systems in the Technische Universität Berlin, majoring in
automotive engineering.
Authenticated
6:01 PM

Authenticated
6:01 PM

H. Ait-Abbas, M. Belkheiri and B. Zegnini
Adaptive Output Feedback Control For Highly
Uncertain Nonlinear Systems Using Single
Hidden Layer Neural Networks
Abstract: We develop an adaptive output feedback control methodology for highly
uncertain nonlinear systems, in the presence of unstructured uncertainties, such as
unmodelled dynamics, and unknown dimension of the regulated system. Given a
smooth reference trajectory, the objective is to design a controller that forces the
system measurement to track it with bounded errors. A linear in parameters neural
network is introduced as an adaptive signal. A simple linear observer is proposed to
generate an error signal for the adaptive laws. The network weight adaptation rule
is derived from Lyapunov stability analysis, and guarantees that the adapted weight
errors and the tracking error are bounded. The theoretical results are illustrated in the
design of a controller for a fourth–order nonlinear system of relative degree two, and
a tunnel diode circuit example having full relative degree.
Keywords: Adaptive output feedback control, nonlinear systems, unstructured uncer-
tainties, unmodelled dynamics, linear observer, single hidden layer neural networks.
1 Introduction
A fundamental goal for many research efforts in control theory is the development
of an adaptive output feedback control of uncertain nonlinear systems, mainly
considering the growing interest in the use of unconventional control devices Systems
that employ such devices, such as ﬂexible robot arms, aeroelastic structures, and
combustion processes, to name a few, have usually unstructured uncertainties.
Output feedback control of full relative degree systems, using a high-gain ob-
server, was introduced in [5]. A solution to the output feedback stabilization problem
for systems in which nonlinearities depend only upon the available measurement was
given in [1]. An extension of these methods due to Jiang can be found in [2].
For adaptive observer design, the condition of linear dependence upon unknown
parameters has been relaxed by introducing a linearly parameterized neural network
(NN) in the observer structure [3]. Adaptive output feedback control using a high gain
H. Ait-Abbas, M. Belkheiri and B. Zegnini: H. Ait-Abbas1, email: aitabbashamou@gmail.com
M. Belkheiri2, email: zegbakeur@gmail.com B. Zegnini1, email: mbelkhiri@yahoo.com 1 Laboratoire
d’Etudes et de Développements des Matériaux Semi-conducteurs et Diélectriques, Université Amar
Telidji, Algérie. 2 Laboratoire de Télécommunications, Signaux et Systèmes, Université Amar Telidji,
Algérie.
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 203–218.
DOI 10.1515/9783110470468-012
Authenticated
6:01 PM

204
|
H. Ait-Abbas et al.
observer and NNs has also been proposed in [8] for nonlinear systems having input
output models.
In this paper, we consider two single-input-single-output (SISO) non affine in
control uncertain systems, and we propose an adaptive output feedback control meth-
odology for both nonlinear systems using only one single-hidden-layer (SHL) NNs in
order to eliminate the uncertainties. The approach employs feedback linearization,
coupled with an on-line NN to compensate for modeling errors. A signal, comprised
of a linear combination of the measured tracking error and the compensator states, is
used to adapt the NN weights. The input vector to the NN is composed of current and
past input/output data. Then, we develop a stability analysis that allows for extension
of the same idea to minimum phase systems of arbitrary but otherwise bounded
dimension. Numerical simulations of nonlinear systems, Van der Pol example and
tunnel diode circuit model, having fourth-order nonlinear system of relative degree
two and full relative degree, respectively, are used to illustrate the practical potential
of the proposed approach.
2 Problem Statement
Consider the following observable nonlinear SISO system:
̇x = f(x, u),
y = h(x).
(1)
Where x ∈Rn is the state of the plant, u ∈ℝ, and y ∈ℝare the input (control) and
output (measurement), respectively.
Assumption1. The functions f : ℝn+1 󳨀→ℝn and h : ℝn 󳨀→ℝare sufficiently
smooth partially known, and the output has full relative degree r for all (x, u) ∈Ω× ℝ
where Ω⊂ℝn.
Then following [14], there exists a mapping that transforms the system in (1) into
the so-called normal form:
̇ξi = ξi+1,
i = 1, ..., r −1
̇ξr = h(ξ, u)
ξ1 = y.
(2)
where h(ξ, u) = L(r)
f h are the Lie derivatives, and ξ = [ξ1
...
ξr]T. The objective is to
synthesize a feedback control law that utilizes the available measurement y so that
y(t) tracks a smooth bounded reference trajectory y∗(t) with bounded error.
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
205
3 Controller Design
3.1 Feedback Linearization
Feedback linearization is approximated by deﬁning the following control input
signal:
u = ̂h−1(y, v)
(3)
where v is referred to as a pseudocontrol. The function ̂h(y, u) represents the best
available approximation of h(y, u). Then, the system dynamics can be expressed as
y(r) = v + ∆
(4)
where:
∆(ξ, v) = h(ξ1, ̂h−1(ξ1, v)) −̂h(ξ1, ̂h−1(ξ1, v))
(5)
is the inversion error. The pseudo-control is chosen to have the form
v = y∗(r) + uc
d −ua
d
(6)
where y∗(r) is the rth derivative of the input signal y∗, generated by a stable command
ﬁlter, uc
d is the output of a linear dynamic compensator, ua
d is the adaptive control
signal designed to cancel ∆.
With (6), the dynamics in (4) reduce to
y(r) = y∗(r) + uc
d −ua
d + ∆
(7)
From (5), notice that ∆depends on ua
d through v, whereas ua
d has to be designed
to approximately cancel ∆. Therefore, the following assumption is introduced to
guarantee the existence and uniqueness of a solution for ua
d.
Assumption2. The mapping ua
d 󳨀→∆is a contraction over the entire input domain
of interest.
A contraction is deﬁned by the condition: |∂∆/∂ua
d| < 1. Using (5), this reduces to
󵄨󵄨󵄨󵄨󵄨󵄨󵄨
∂∆
∂ua
d
󵄨󵄨󵄨󵄨󵄨󵄨󵄨=
󵄨󵄨󵄨󵄨󵄨󵄨󵄨
∂(h −̂h)
∂u
× ∂u
∂v × ∂v
∂ua
d
󵄨󵄨󵄨󵄨󵄨󵄨󵄨=
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨
∂h
∂u
∂̂h
∂u
−1
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨
< 1
(8)
Authenticated
6:01 PM

206
|
H. Ait-Abbas et al.
Condition (8) is equivalent to the following requirements on ̂h:
1) sign( ∂̂h
∂u ) = sign( ∂h
∂u )
2) ∞>
󵄨󵄨󵄨󵄨󵄨󵄨󵄨
∂̂h
∂u
󵄨󵄨󵄨󵄨󵄨󵄨󵄨> 1
2( ∂h
∂u ) > 0.
where the ﬁrst condition means that control reversal is not allowed, and the second
condition places a lower bound on the estimate of the control effectiveness in (3).
3.2 Design of the Dynamic Compensator and Tracking
Error Signal Analysis
Deﬁne the output tracking error as (̃y = y∗−y). Then the dynamics in (7) can be
rewritten as:
̃y(r) = −uc
d + ua
d −∆.
(9)
For the case (∆= 0), the adaptive term ua
d is not required and the error dynamics in (9)
reduce to
̃y(r) = −uc
d.
(10)
The following linear compensator is introduced to stabilize the dynamics in (10):
{
̇η = Acη + bc̃y,
uc
d = ccη + dc̃y.
η ∈ℝr−1
(11)
Note that η needs to be at least of dimension (r −1) [4]. This follows from the fact that
(10) corresponds to error dynamics that have r poles at the origin. One could elect to
design a compensator of dimension ≥r as well. In the future, we will assume that the
minimum dimension is chosen.
Returning to (9), notice that the vector e = [̃y
̇̃y
...
̃y(r−1)]T mutually with the
compensator state η will obey the following dynamics, referred to as tracking error
dynamics:
{
̇E = A E + b [ua
d −∆]
z = C E
(12)
where z is the vector of available measurements.
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
207
Reminder that:
A = [ A −dcbc
−bcc
bcc
Ac
], b = [ b
0 ], C = [ c
0
0
I ].
(13)
and a new vector
Ed = [ eT
ηT ]
T .
(14)
where
A =
(
(
(
(
0
1
0
⋅⋅⋅
0
0
0
1
⋅⋅⋅
0
...
...
...
...
...
0
0
...
⋅⋅⋅
1
0
0
0
⋅⋅⋅
0
)
)
)
)
, b =
[[[[[
[
0
0
...
1
]]]]]
]
, c =
[[[[[
[
1
0
...
0
]]]]]
]
T
.
Noting that Ac, bc, cc and dc in (11) should be designed such that A is Hurwitz.
3.3 Design and Analysis of an Observer for the Error Dynamics
For the full-state feedback application [6, 7, 9, 11], Lyapunov-like stability analysis of
the error dynamics in (12) results in update laws for the adaptive control parameters
in terms of the error vector E. In [13, 17], and [15], adaptive state observers are used to
provide the necessary estimates in the adaptation laws. However, the stability analysis
was limited to second-order systems with position measurements. To rest these
assumptions, we propose a simple linear observer for the tracking error dynamics in
(12) and show through Lyapunov’s direct method that the adaptive part of the control
signal (ua
d) can compensate for the inversion error ∆, if the output of this observer is
used as an error signal for the adaptive laws.
A minimal-order observer of dimension (r −1) may be designed for the dynamics
in (12). However, to streamline the subsequent stability analysis, in what follows, we
consider the case of a full-order observer of dimension (2r −1) [13], [10].
To this end, consider the following linear observer for the tracking error dynamics
in (12):
{
{
{
̇̂E = ÂE + K(z −̂z),
̂z = ĈE.
(15)
where K is a gain matrix, and should be chosen such that (A −KC) is asymptotically
stable, and z is deﬁned in (12).
Authenticated
6:01 PM

208
|
H. Ait-Abbas et al.
The following remark will be useful in the sequel.
Remark 1: Equation (15) provides estimates only for the states that are feedback
linearized with the transformation and not for the states that are associated with the
internal dynamics.
Let
̃A = A −KC,
̃E = ̂E −E.
(16)
Then, the observer error dynamics can be written
̇̃E = ̃A ̃E −b [ua
d −∆].
(17)
4 Approximation of the Inversion Error
4.1 SHL NN Approximation
Usually in the literature, it has been shown that NNs are superior in their ability to
compensate for modelling errors in several signiﬁcant engineering applications [17],
[10]. However, we will use them in controller design to cancel the effect of uncertainties
due to unmodelled dynamics and unknown system parameters.
Assume that there exists an SHL NN, that approximates the inversion errors ∆.
This NN has an output given by
yi =
N2
∑
j=1
[mijσ(
N1
∑
k=1
njkxk + θnj) + θmi],
x ∈ℝN1,
i = 1, ..., N3.
(18)
where σ(.) is an activation function, njk are the ﬁrst-to-second layer interconnection
weights, mij are the second to third layer interconnection weights, N2 is associated
with the number of neurons in the hidden layer, θnj and θmi and are bias terms.
Such an architecture is known to be an universal approximator of continuous
nonlinearities with “squashing” activation function [12], [19]. This implies that a
general function f(x) ∈C, x ∈D ⊂R can be written as:
f(x) = MTσ(NT
0 x) + ε(x).
(19)
where ε(x) is the function reconstruction error.In general, given a constant real
number ε∗> 0, f(x) is within ε∗> 0 range of the NN (18), if there exist constant weights
M and N, such that for all x ∈D ∈R, the representation in (19) holds with ‖ε‖ < ε∗.
The following theorem extends these results to map the unknown dynamics of an
observable system from available input–output history [13].
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
209
Theorem 2: Given a compact set D ⊂Rn+1 and ε∗> 0, the model inversion error ∆(ξ, v)
can be approximated over D by an SHL NN
∆(x, u) = MTσ(NT
0 μ) + ε(d, μ),
|ε| < ε∗.
(20)
Using the input vector
μ(t) = [1
vT
d(t)
yT
d(t)]T ∈D,
‖μ‖ ≤μ∗,
μ∗> 0.
(21)
where the ﬁrst component is introduced to approximate a nonzero offset of ∆. Then,
note that
vT
d(t) = [v(t)
v(t −d)
...
v(t −(n1 −r −1)d)]T,
yT
d(t) = [y(t)
y(t −d)
...
y(t −(n1 −1)d)]T.
with n1 ≥n, d > 0 denoting time-delay and μ∗being a uniform bound for all (x, u) ∈D.
4.2 Adaptive Control
The adaptive signal is chosen to be the output of an SHL NN
ua
d = ̂
MTσ(NT
0 μ) + ε(d, μ).
(22)
where ̂
M is the estimate of M that is updated according to the following adaptation
law:
̇̂
M = −F[2(̂σ −̂σ󸀠NT
0 μ)̂ETPb + k(̂
M −M0)].
(23)
in which M0 is the initial value of M, N0 is the initial value of the hidden layer weights
vector, ̂σ = σ(NT
0 μd), ̂σ󸀠denotes the Jacobian matrix, P is the solution of the Lyapunov
equation
A
TP + PA = −Q.
(24)
for some Q > 0, k > 0, and F is the adaptation gain matrices.
Notice that in (22), there is an algebraic loop, since μ, by deﬁnition, depends upon
ua
d through v, see (21). However, with bounded squashing functions, this algebraic
loop has at least one ﬁxed-point solution.
Using (20) and (22), the error dynamics in (12) can be formulated as
{
̇E = A E + b [̂
MTσ(NT
0 μ) −MTσ(NT
0 μ) −ε],
z = C E.
(25)
Authenticated
6:01 PM

210
|
H. Ait-Abbas et al.
Deﬁne
̃
M = ̂
M −M,
̃zd = [ ̃
MT
0 ]
T .
(26)
and note that
‖̂
M‖ < ‖̃
M‖ + M∗.
(27)
where M∗is the upper bound for the weights in (20)
‖̂
M‖ < M∗.
(28)
Since the inner layer weights N0 are adjusted off-line to ﬁt the real weights N, then we
can write the mismatch between the adaptive signal and the real NN as :
ua
d −∆= ̂
MTσ(NT
0 μ) −MTσ(NT
0 μ) −ε.
(29)
With (27), the previous representation (29), allows for the following upper bound for
some computable α1, α2:
|ua
d −∆| ≤α1‖̂Zd‖F + α2,
α1 > 0,
α2 > 0.
(30)
The subscript F denoting the Frobenius norm.
For the stability proof, we will need the following representation
̂
MTσ(NT
0 μ) −MTσ(NT
0 μ) = ̃
MT(̂σ −̂σ󸀠NT
0 μ)
+ ̂
MT ̂σ󸀠NT
0 μ + wd.
where
wd = ̃
MT ̂σ󸀠NT
0 μ.
With the bound in (21), a bound for (wd −ε) over a compact set can be presented as
follows [7]:
|wd −ε| ≤𝛾1 ‖ ̃Zd ‖F +𝛾2,
𝛾1 > 0,
𝛾2 > 0.
(31)
where 𝛾1 and 𝛾2 are computable constants, 𝛾1 depends upon unknown constant μ∗,
and 𝛾2 upon ε∗. Thus, the forcing term in (25) can be rewritten as
ua
d −∆= ̃
MT(̂σ −̂σ󸀠NT
0 μ) + MT ̂σ󸀠NT
0 μ + wd −ε.
(32)
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
211
5 Stability Analysis
In the current section, we conﬁrm through Lyapunov’s direct method that if the initial
errors of the variables ET, ̃ET, ̃
M and belong to a prescribed compact set, then they are
ultimately bounded.
For stability analysis, introduce the observer error signal ̃E = ̂E −E. The observer
error dynamics can then be written as:
̇̃E = ̃A ̃E −b [̃
MT(̂σ −̂σ󸀠NT
0 μ) + MT ̂σ󸀠NT
0 μ + wd −ε]
(33)
where
̃A = A −KC
Lemma: Following [16], if A is any asymptotically stable matrix, then given any positive
deﬁnite symmetric matrix Q > 0, there exists a unique positive deﬁnite symmetric
matrix P > 0 such that
A
TP + PA = −Q.
Remark: Consider the compact set D and initial conditions in Ωα. The feedback
control law given by
u = ̂h−1(y, v)
where
v = y∗(r) + uc
d −ua
d
uc
d = ccη + dce
ua
d = ̂
MTσ(̂NT
0 μ)
with the following adaptive laws
̇̂
M = −F[2(̂σ −̂σ󸀠NT
0 μ)̂ETPb + k(̂
M −M0)].
̇̂ψ = 𝛾[2̂ETP2bsign(2̂ETP2b) −λψ(ψ −ψ0)]
For F,𝛾> 0, λψ > 0, ψ0 > 0 is initial value of the estimate ψ, P2 is the solution to
the following Lyapunov equation
A
TP2 + P2A = −Q2.
for some Q2 > 0, guarantees that all the error signals in the closed loop system are
ultimately bounded (refer to [18] for more details).
Authenticated
6:01 PM

212
|
H. Ait-Abbas et al.
6 Application
To illustrate the performance of the proposed adaptive controller in the presence
of unstructured uncertainties, we consider the two nonlinear systems, having a
fourth-order nonlinear system of relative degree two (Van der Pol) and the tunnel
diode circuit example with full relative degree.
6.1 Tunnel Diode Circuit Example
{
{
{
{
{
{
{
̇x1 = 1
C x2 −1
C h(x1)
̇x2 = −R
L x2 −1
L x1 + u
L
(34)
where x1 the voltage across the capacitor C and x2 is the current through the inductor
L. The initial conditions were set as x1(0) = 0.1, x2(0) = 0.0005, and the element
values of the circuit are R = 1.5kΩ, L = 1nH, and C = 2pF.
The function h : ℝ󳨀→ℝrepresents the characteristic curve of the tunnel diode,
h(x1) = x1 + 2x2
1 + x3
1 −x4
1 −2x5
1
(35)
The output y has a full relative degree of n = r = 2.
6.2 Van der Pol Example
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
̇x1 = x2
̇x2 = −0.2(x2
1 −1)x2 −0.2x3 +
u
√|u| + 0.1
̇x3 = x4
̇x4 = −0.2x4 −x2 + x1
(36)
with initial conditions x1(0) = 0.5, x2(0) = 1.5, x3(0) = 0 and x4(0) = 0. The output y
has a relative degree of r = 2.
The following dynamic compensator:
{
̇η = −5η + 5̃y
uc
d = −6.8η + 8̃y
(37)
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
213
places the poles of the closed-loop error dynamics in (10) of both nonlinear systems
at −3,−1 ± j, so that
Qdesired(P) = QA(P)
(38)
where Qdesired(P) is the characteristic polynomial of the desired poles, whereas QA(P)
is the characteristic polynomial of A.
The observer dynamics in (33) were designed so that its poles are four times faster
than those of the error dynamics. We implemented seven neurons in the hidden layer,
and the following sigmoidal basis function:
σ(x) =
1
1 + e−ax
(39)
with a = 1. The adaptation gains were set to F = 2I, with sigma modiﬁcation gain
k = 0.65.
The contribution of this paper is to design only one single hidden layer neural
network (SHL NN) that compensate adaptively for the nonlinearities of both systems
Van der Pol example and tunnel diode circuit model, what bring to force the system
measurement to track reference trajectory with bounded errors. First, setting the
output y = x1 for each system. However, the reader is reminded that the controller
has been designed given only the fact that r = 2. Taking advantage of this fact,
we employ feedback linearization, coupled with an on-line NN to compensate for
modeling errors, according to the equation (7). The ﬁxed structure of a dynamic
compensator, described in (11) and (37), is designed to stabilize the linearized system.
A signal, comprised of a linear combination of the measured tracking error and the
compensator states, presented in (25), is used to adapt the NN weights [10].
Figure 1 compares the system response y without NN augmentation (dashed line)
with the reference model output y∗(solid line), clearly demonstrating the almost
unstable oscillatory behavior caused by the nonlinear elements (∆) in the Van der
Pol model in the ﬁrst half time (0 to 40 seconds) and the nonlinearities of the tunnel
diode equation in the last half time (40 to 80 seconds). While, with the aid of NN
augmentation, Fig. 2 shows that these oscillations are eliminated after a period of
about 1s. This is accounted for the successful identiﬁcation of the model inversion
error (∆) (solid line) by the adaptive output signal (ua
d) (dashed line), which is
illustrated in Fig. 3.
Authenticated
6:01 PM

214
|
H. Ait-Abbas et al.
0
10
20
30
40
50
60
70
80
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
Time [sec]
Tracking Without NN
y
yr
Van Der Pol
example
Tunnel diode
circuit example
Fig. 1. Tracking without NN.
Van Der Pol
example
Tunnel diode
circuit example
0
10
20
30
40
50
60
70
80
−1.5
−1
−0.5
0
0.5
1
1.5
2
2.5
Time [sec]
Tracking with NN
y
yr
Fig. 2. Tracking with NN.
Figure 4 compares the control efforts (y∗−y) without and with adaptation, where the
NN based adaptive controller (ua
d) exhibits a steady state tracking error. This error
can be minimized when designing an excellent linear compensator, according to the
equation (9).
The NN controller weights history are shown in Fig. 5. Moreover, one chooses
a good structure of the network of neuron in order to avoid the phenomenon of on
training which deteriorates the architecture.
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
215
Van Der Pol
example
Tunnel diode
circuit example
0
10
20
30
40
50
60
70
80
−20
−10
0
10
20
30
40
Time [sec]
V ad and Δ
Δ
Vad
Fig. 3. Identiﬁcation of uncertainties (∆) by NN (ua
d).
Van Der Pol
example
Tunnel diode
circuit example
0
10
20
30
40
50
60
70
80
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
Time [sec]
Control effort without and with NN
(yc−y) with NN
(yc−y) without NN
Fig. 4. Control effort without and with NN.
As expected, the SHL NN improves the tracking performance due to its ability to
“model” nonlinearities, even with the unmodelled dynamics. Consequently, simula-
tions show that the NNs augmented adaptive output feedback controller compensates
successfully for high unstructured uncertainties.
Authenticated
6:01 PM

216
|
H. Ait-Abbas et al.
Van Der Pol
example
Tunnel diode
circuit example
0
10
20
30
40
50
60
70
80
−6
−4
−2
0
2
4
6
Time [sec]
Neural Network Weights history
Fig. 5. NN weights history.
6.3 Summary
In this paper, a new control approach is proposed for adaptive output feedback control
of uncertain nonlinear systems using NNs. However, the control performance of the
given nonlinear systems still inﬂuenced by the unmodelled dynamics and/or external
disturbances, and to compensate for these uncertainties adaptive output feedback
control is proposed. In this note, the obtained controller is then augmented by only
one SHL NN used as an approximator for the unstructured uncertainties in both
nonlinear systems Van der Pol and Tunnel Diode Circuit. A simple linear observer
is introduced to estimate the derivatives of the tracking error. These estimates are
used in the adaptation laws for the NN parameters. Ultimate boundedness of the
tracking error and observation error are shown using Lyapunov󸀠s direct method. The
methodology is applicable for observable and stabilizable systems of unknown but
bounded dimension when the relative degree is known. Through Lyapunov-based
theoretical analysis, computer simulation, we were able to demonstrate that the
proposed neural network-based adaptive output feedback controller was robust to
modeling inaccuracies, and excellent tracking performance was succeeded.
Bibliography
[1]
A. Praly and Z. P. Jiang. Stabilization by output feedback for systems with ISS inverse
dynamics. Syst. Control Lett., 21:19–33, 1993.
[2]
Z. P. Jiang. A combined backstepping and small-gain approach to adaptive output feedback
control. Automatica, 35:1131–1139, 1999.
Authenticated
6:01 PM

Adaptive output feedback control for HUNL systems using SHLNNs
|
217
[3]
F. L. Lewis, K. Liu, and A. Yesildirek. Control of Robot Manipulators. New York, Macmillan, 1993.
[4]
J. Brasch and J. Pearson. Pole placement using dynamic compensators. IEEE Trans. Automat.
Contr., AC-15:34–43, Jan. 1970.
[5]
F. Esfandiari and H. K. Khalil. Output feedback stabilization of fully linearizable systems. Int.
J. Control, 56(5):1007–1037, 1992.
[6]
A. J. Calise, S. Lee, and M. Sharma. Development of a reconﬁgurable ﬂight control law for a
tailless aircraft. J. Guidance, Contr., Dynamics, 24(5):896–902, 2001.
[7]
F. L. Lewis, A. Yesildirek, and K. Liu. Multilayer neural-net robot controller with guaranteed
tracking performance. IEEE Trans. Neural Networks, 7:1–12, Jan. 1996.
[8]
S. Seshagiri and H. K. Khalil. Output feedback control of nonlinear systems using RBF neural
networks. IEEE Trans. Neural Networks, 11:69–79, Feb. 2000.
[9]
M. B. McFarland and A. J. Calise. Multilayer neural networks and adaptive control of agile
anti-air missile. Proc. AIAA Guidance, Navigation, Contr. Conf., AIAA Paper 97–3540, 1997.
[10] H. Ait Abbas, M. Belkhiri and B. Zegnini. Feedback Linearization Control of a Class of Nonlinear
Uncertain Systems Using Neural Networks. International Journal on Advanced Electrical
Engineering, 01(02):121–131, 2013.
[11] F. Nardi and A. J. Calise. Robust adaptive nonlinear control using single hidden layer neural
networks. Proc. Conf. Decision Contr., pp. 3825–3830, 2000.
[12] K. Funahashi. On the approximate realization of continuous mappings by neural networks.
Neural Networks., 2:183–192, 1989.
[13] N. Hovakimyan, F. Nardi, A. J. Calise, and H. Lee. Adaptive output feedback control of a class of
nonlinear systems. Int. J. Contr., 74(12):1161–1169, 2001.
[14] A. Isidori. Nonlinear Control Systems. Berlin, Germany: Springer-Verlag, 1995.
[15] Y. Kim and F. L. Lewis. High Level Feedback Control with Neural Networks. Singapore: World
Scientiﬁc, 1998.
[16] A. J. Calise, N. Hovakimyan, and M. Idan. Adaptive output feedback control of nonlinear
systems using neural networks. Automatica., 37(8):1201–1211, 2001.
[17] N. Hovakimyan, R. T. Rysdyk, and A. J. Calise. Dynamic neural networks for output feedback
control. Proc. Conf. Decision Contr., pp. 1685–1690, 1999.
[18] Flavio Nardi. Neural Network based Adaptive Algorithms for Nonlinear Control. A Thesis
Presented to The Academic Faculty of The School of Aerospace Engineering.,Georgia Institute of
Technology, November 2000.
[19] K. Hornik, M. Stinchcombe, and H. White. Multilayer feedforward networks are universal
approximators. Neural Networks., 2:359–366, 1989.
Biographies
Hamou Ait-Abbas received his License and Master degrees in Electrical
Machines from University M’hammed Bouguerra (UMBB), Boumerdes,
Algeria in 2009 and 2011, respectively. He is currently working towards a
Ph.D. degree in control of electromechanical systems at the University Amar
Telidji, Laghouat, Algeria. He is working as an assistant teacher in electrical
engineering department at University of Amar Telidji, Laghouat, Algeria. His
research interests include theory and applications of nonlinear control and,
more recently, nonlinear adaptive control.
Authenticated
6:01 PM

218
|
H. Ait-Abbas et al.
Mohammed Belkheiri was born on November 1977 in Djelfa, Algeria. He
received the Engineer degree in electrical engineering from University of
Boumerdes, Algeria, in 2000, the Master degree in robotics and automatic
control from Military Polytechnic School, Bordj El-bahri, Algiers, in 2002,
and the Doctorate degree in Automatic Control from National Polytechnic
School of Algiers, ENP Algeria since 2003. He is working as an assistant
professor at the department of electrical engineering at University of Amar
Thelidji, Laghouat, Algeria. His research interests include nonlinear and
adaptive control and applying neural networks for solving complex
engineering problems.
Boubakeur Zegnini was born on 25/01/1968. He received the applied
electrical engineering degree from ENSET Laghouat, Algeria ,in1991, the
M.Sc. degree from University of Laghouat in 2001. He received his Ph.D.
degree in Electrical Engineering from University of science and Technology
USTO, Oran, Algeria in 2007. He was professor of technical secondary school
from 1991 to 2001. Since 2001, he is working as an associate professor with
the Department of Electrical Engineering at University of Laghouat, Algeria.
He joined the Laboratory of Electrical Engineering at Paul Sabatier University
of Toulouse, France, “solid dielectrics and reliability” research team from
2005 to 2007. Currently, he is head of research team in the Dielectric
materials Laboratory LeDMaScD at the University Amar Telidji of Laghouat, in
Algeria. Following this, he became a Full Professor at University Amar Telidji
of Laghouat, in Algeria.His main research interests include high voltage,
dielectric materials, outdoor insulation, numerical modeling and simulation.
He is author and co-authors of many scientiﬁc publications.
Authenticated
6:01 PM

M. Taktak-Meziou, A. Chemori, J. Ghommam and N. Derbel
RISE Feedback with NN Feedforward Control of
a Servo-Positioning System for Track Following
in HDD
Abstract: This paper addresses design challenges associated with a servo system of a
Hard Disc Drive (HDD). The recently developed Robust Integral of Sign Error (RISE)
approach is proposed to control the Read/Write (R/W) head tip of the HDD. Such a
technique, combined with a feedforward Neural Network (NN) control term, is not
only able to meet the different imposed constraints on the system, but also guaranty
the asymptotic stability of the overall closed-loop system. To the best knowledge of
the authors, the proposed controller, applied at the low frequency region of a HDD,
has never been conducted before on such a system. A comparative study between
the RISE-NN controller and the classical Proportional Integral Derivative (PID) is
performed under various operating conditions ranging from nominal case without
external disturbances to more complex cases with disturbances and parametric
uncertainties. The main objective of this study is to highlight the effectiveness of
RISE-NN control approach in solving the track following problem in HDD.
Keywords: RISE feedback control, nonlinear systems, hard-disc-drives, asymptotic
stability, robust control, neural networks.
1 Introduction
Since its appearance in 1956, the Hard-Disc-Drive (HDD) technology has continued to
progress over the years. This accelerated evolution has primarily affected the storage
capacity growing from few Megabytes to several Terabytes. In addition, many other
characteristics have undergone perceptible changes [1]. These include the size factor
which has been reduced from 24-inch diameter in a 50 disks prototype to one disk
of 3.5-inch diameter, the spindle speed which has steadily increased to reach 15000
rpm in the latest versions of HDDs,etc. The main objective of such a development is to
improve the system operating performance in terms of access speed, precision of the
positioning, data access, and reliability.
M. Taktak-Meziou, A. Chemori, J. Ghommam and N. Derbel: 1 Research unit on Control & Energy
Management Laboratory (CEMLab), University of Sfax, National School of Engineers of Sfax,
Sfax, Tunisia, email: manel.taktak@yahoo.com, email: jawhar.ghommam@gmail.com, email:
n.derbel@enis.rnu.tn. 2 Laboratoire d’Informatique, de Robotique et de Microélectronique de
Montpellier (LIRMM), France, email: chemori@lirmm.fr.
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 219–240.
DOI 10.1515/9783110470468-013
Authenticated
6:01 PM

220
|
M. Taktak-Meziou et al.
From a technical standpoint, it can clearly be seen that a HDD is a mechatronic
system. Indeed, the system is constructed through the synergistic integration of
mechanical engineering, electronics, control engineering, and computer technology.
Figure 1 shows a view of the main components of a typical HDD servo-system.
Spindle motor
Platters
Base plate
VCM actuator
Pivot
IDE connector
Read/Write head
Fig. 1. View of the main components of a typical HDD.
A HDD is composed of a spindle motor devoted to drive the rotating platters, where
digital data are stored in concentric tracks. In order to treat these data, whether to read
from or write on the disc, the system is equipped with several magnetic Read/Write
(R/W) heads. These heads are connected to a second motor, called Voice-Coil-Motor
(VCM), which is designed to manage their movement on the disk surface and achieve
access to the desired track.
A good HDD is evaluated according to its ability to move the R/W head tip rapidly
from its current position to a desired target track and to maintain it as close as
possible to its center while treating data. Therefore, the Position Error Signal (PES),
deﬁned as the deviation of the R/W head from the desired track center, should be as
minimal as possible in order to guarantee a reliable data reading or writing. Such a
regulation is tighter with the modern HDD servo-systems becoming more and more
small in size. In addition to the reduced size factor, many sources of errors can be
noticed in the system. These factors contribute signiﬁcantly to the degradation of
the overall system’s performance in terms of precision and access to the information.
They mainly include nonlinear frictions caused by the pivot bearing and the ﬂex cable
and inaccuracies caused by the movement of the head form one track to another.
Generally, a HDD is often subject to various disturbances which can be classiﬁed into
three categories: The input disturbances caused by mechanical perturbations such
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
221
as resonances, friction and vibrations The output disturbances which are due to the
rotation of the spindle motor rotation and its effects. The measurement noise caused
by the position-measurement techniques and/or sensors.
All the above-listed errors’ sources threaten the performances of the HDD
servo-system and may degrade the system reliability. Consequently, it would be
necessary to deal with them rigorously and compensate their effects as much as
possible.
To do that, several research efforts have been devoted to design efficient robust
controllers. Their common objective was not only to overcome the different HDD
problems cited above, but also to ensure a tighter PES while positioning the R/W head
even in the presence of eventual disturbances, nonlinearities, and inaccuracies on the
system’s dynamics.
Among these control solutions, we can distinguish classical approaches such as
PID controllers [2], lead-lag compensator [3] and classical ﬁlters [4] which can no
longer meet the demand for HDDs higher performances. Accordingly, to deal with
these difficulties, several control attempts have been recently developed including (i)
advanced control approaches such as optimal controllers [5, 6], Composite Nonlinear
Feedback technique (CNF) [7] and Robust Perfect Tracking (RPT) [8] and (ii) several
robust control solutions such as adaptive control [9, 10], sliding mode control [11, 12],
robust control [13, 14] and lately predictive control approaches [15, 16]. Some of these
methods have been experimentally tested to show their strengths and weaknesses on
a real system.
This paper is dedicated to the application of the recently developed control
method based on Robust Integral Sign of the Error (RISE) [17] to the case of HDDs.
This control technique is chosen based on its advantages in addressing the problem
of trajectory tracking of a class of uncertain and high order nonlinear systems [17, 18].
Since RISE is a high gain feedback method, the idea proposed in [19] was to develop
an improved version of this technique which involves the combination of a Neural
Network based feedforward control term with the feedback controller. In this paper,
this control solution is proposed to address the track following problem in a HDD
servo-system and to ensure both robust performance and asymptotic stability of the
overall closed-loop servo-system.
The reminder of this paper is organized as follows. In section 2, the HDD
low-frequencies dynamic modeling is introduced. Then, in section 3, the HDD
servo-positioning control problem is formulated. In section 4, the RISE feedback
based NN controller is developed. Section 5 is devoted to a comparative study between
the proposed RISE-NN and a classical PID controllers, where numerical simulations
in different operating conditions are presented and discussed. Finally, in section 6,
some concluding remarks are drawn.
Authenticated
6:01 PM

222
|
M. Taktak-Meziou et al.
2 HDD Low Frequencies Dynamic Modeling
In a HDD servo-system, one of the important limitations for high track density is the
nonlinear effects arising from frictions. Such nonlinear frictions are mainly induced by
the pivot bearing and data ﬂex cable in the VCM actuator (see Fig. 1). Their presence
leads to the generation of large residual errors and oscillations which degrade the
overall system performances and reduce its reliability.
Certainly, a deeply understanding of the nonlinear friction behavior would be
helpful to ﬁnd an efficient control solution that mitigate their degrading effects.
Therefore, for the aim of developing a representative friction model in a HDD
servo-system, many researchers have provide considerable efforts in the literature
[20, 21]. The best representation that encompasses all static and dynamic features
turned out to be that of LuGre friction model [22]. For a complete review of the friction
modeling, the reader is referred to [23].
In order to enhance the track following performances in a HDD servo-positioning
system, it would be necessary to compensate the overall nonlinear frictions. A
survey of the literature showed that many control approaches dealing with the above
compensation have been proposed. Some of them include an accurate modeling of the
friction behavior [24, 25] and others are non-model-based friction estimation [26, 27].
In spite of all the proposed solutions, the study of the nonlinear friction behavior and
the search for a good compensation control solution are still open problems in HDD
technology.
Based on recent works of [28], the low-frequency mathematical model of the VCM
actuator can be expressed as follows:
M(q) ̈q + F(q, ̇q) = u
(1)
y = q + wout
where M(q) denotes the system inertia verifying M(q) > 0. q,
̇q and
̈q denote the
actual position, velocity and acceleration of the VCM-actuator head tip respectively.
u represents the control input, y is the measured position of the VCM-actuator in
presence of the eventual output disturbance wout representing external vibrations
and chocks caused by the ﬂexibility of the material. F(q, ̇q) is a nonlinear function
representing the pivot bearing hysteresis friction whose behavior can be described by
the LuGre friction model [22]. This last one is expressed as follows:
F(q, ̇q) = σ0z + σ1 ̇z + σ2 ̇q
(2)
̇z = ̇q −α( ̇q) | ̇q | z
(3)
α( ̇q) =
σ0
fc + (fs −fc) exp(−[
̇q
̇qs
])
2
(4)
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
223
where z is an internal state of the friction model assumed to be immeasurable. σ0,
σ1, and σ2 are the model parameters reﬂecting the small displacements which are the
stiffness, the micro damping, and viscous coefficient respectively. fs corresponds to
the stiction force, fc is the Coulomb friction force, and the parameter qs is the Stribeck
velocity [29].
3 Control Problem Formulation
The main goal of a HDD servo-system control is to read/write data from/on concentric
track circumscribed onto the disc surface. Therefore, by controlling the current in
the VCM, the head is able to move in both directions to follow the desired target
track. Consequently, in order to reach its target, two main functioning modes can
be distinguished [1]: The ﬁrst one, being the track seeking mode, deals with moving
the R/W head from one desired track to another, at a distance of about a micro-inch
between two adjacent tracks. The displacement of the head is required to be as quick
as possible with a limited control effort. The second mode, being the track following
mode, consists of maintaining the head as close as possible to the center of the desired
data track to guarantee an accurate positioning, crucial for reading/writing digital
data. Therefore, the drive initiates its functioning by a track seeking control with a
saturated control law. Then, when the head is positioned onto the target track, the
drive switches into the track following mode. A schematic illustration of the above
mode functions is shown in Fig. 2.
Read/Write head
Actual position
Track seeking mode
Target position
Track following mode
Rotational direction
of the disc
Fig. 2. Illustration of the main operating functions of a HDD servo-system.
Authenticated
6:01 PM

224
|
M. Taktak-Meziou et al.
Let qd be the desired track position. In order to evaluate the tracking performance, the
position error e1 is introduced. It is deﬁned as the deviation of the HDD head tip from
the center of the desired position:
e1 = qd −q
(5)
The main control objective consists of moving the head onto the surface of the disc
so that it follows a predeﬁned target track. Then, the head is required to be as close
as possible to this desired position while reading/writing data, in order to ensure
superior HDD performances. The setting equation of the control objective can be
reformulated as follows:
lim
t→∞|e1(t)| = lim
t→∞|qd(t) −q(t)| = 0
(6)
In the present paper we aim to design an efficient control solution for the
track-following mode.
4 Proposed Control Solution
The recent developed feedback control strategy RISE [17] is proposed in this paper
to deal with the track following problem of the HDD servo-system. Such a control
technique, blend with a NN-based feedforward, is able to deal with the non-explicit
knowledge of the friction model F(q, ̇q) introduced in the dynamic model (1)-(4).
Before going further, to give an overview of the control strategy, an illustrative block
diagram of such controller is shown in Fig. 3.
Neural Network
fˆ
RISE Control
+
+
e1
qd
q
ωin
ωout
μ
u
+
–
Feedforward Controller
Feedback Controller
+
+
+
+
Fig. 3. Overview of the control scheme including a RISE feedback with a NN feedforward.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
225
Starting from a desired target track qd, the global control input u, which is the sum
of a feedforward NN control term ̂f and a RISE feedback term μ, is calculated at each
sample time to move the head tip to the desired position. In the following section, a
background on NN-based Feedforward then RISE Feedback controllers are introduced
illustrating how they can be combined together to achieve an asymptotic stability of
the overall closed-loop system.
4.1 Background on NN Feedforward Control
Dynamic neural networks present an effective tool for estimation and control of
nonlinear and complex systems [30]. The universal approximation remains the key
feature of the NN-based controllers [31]. Consider 𝕊, a compact set and f(x) a smooth
function deﬁned as f : 𝕊→ℝn. There exists always three-layer NN able to represent
f(x) [19] such that f(x) = W⊤σ(V⊤x) + ε(x) for given inputs x(t) ∈ℝa+1. V ∈ℝ(a+1)×L is
a bounded constant weight matrix for the ﬁrst-to-second layer and W ∈ℝ(L+1)×1 is the
ideal weight matrix for the second-to-third layer. a is the number of inputs and L is
the number of neurons in the hidden layer. σ(.) ∈ℝL+1 is the activation function and
ε(x) ∈ℝn is the functional error approximation, satisfying ‖ ε(x) ‖≤εN, with εN is a
known constant bound. Figure 4 shows an illustrative description of a three-layer NN
principle.
VT
WT
1
2
inputs
hidden layer
output
fˆ
3
σ(.)
σ(.)
σ(.)
σ(.)
L
xn
x2
x1
∙∙∙
∙∙∙
Fig. 4. Schematic view of a three-layer NN.
Authenticated
6:01 PM

226
|
M. Taktak-Meziou et al.
Remark 1: The activation function σ(.) can take different forms such as sigmoid,
hyperbolic tangent or a radial basis function. In this paper, the considered σ(.) is a
radial basis function described by the following equation:
σ(xi) = exp(−‖xi −ci‖2
σ2
i
)
,
∀i ∈ℕ
where ci is the center of the basis function and σi is its width; they are chosen a priori
and kept ﬁxed throughout this work for reason of simplicity.
For subsequent developed calculations of the control input, some assumptions
and properties have to be exploited which are the following:
Assumption The desired position qd, as well as its ﬁrst and second time derivatives
exist and are all bounded, i. e., qd, ̇qd, and ̈qd ∈L∞.
Property The NN quantities are bounded such as ‖ W ‖≤Wm, ‖ σ ‖≤σm, where Wm
and σm are known positive constants [32].
4.2 Background on RISE Feedback Control
In this work, the main control objective is to maintain the R/W head as close as
possible to a predeﬁned desired position in order to perform an accurate track
following task. Therefore, a RISE feedback control approach with NN feedforward
estimation is therefore proposed as a control solution (i) to deal with the unknown
nonlinear dynamics and (ii) to guarantee the asymptotic stability of the controlled
HDD model (1)-(4). The control strategy is detailed in this section, introducing the
open-loop and closed-loop tracking errors. Based on assumption 1, the position
tracking error e1(t), the ﬁltered tracking errors denoted by e2(t) and r(t), are deﬁned
as follow
e1 = qd −q
(7)
e2 = ̇e1 + α1e1
(8)
r = ̇e2 + α2e2
(9)
where α1 and α2 are positive tuning gains.
Remark 2: The ﬁltered tracking error r(t) is an immeasurable quantity since it depends
on ̈q(t) which is not measurable in a HDD.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
227
4.2.1 Open-loop tracking error system
To develop the open-loop tracking error system, a multiplication of (9) by M(q) is
made. Then, based on the expressions (1), (7), and (8), the resulting system can be
expressed as follow:
M(q)r = Fd + S −u
(10)
where Fd is an auxiliary function deﬁned by:
Fd = M(q) ̈qd + F(qd, ̇qd)
(11)
and S is a second auxiliary function deﬁned by:
S = M(q)(α1 ̇e1 + α2 ̇e2) + F(q, ̇q) −F(qd, ̇qd)
(12)
Based on the NN approximation, Fd can be expressed as follows:
̇Fd = W⊤σ(V⊤xd) + ε(xd)
(13)
where xd = [1
qd
̇qd
̈qd]
⊤and ε(xd) is the bounded NN approximation error.
According to assumption 1, the following inequalities hold:
‖ ε(xd) ‖ ≤εN
(14)
‖ ̇ε(xd, ̇xd) ‖ ≤ε󸀠
N
(15)
where εN and ε󸀠
N are known positive bounded constants.
4.2.2 Closed-loop tracking error system
Using the previous open-loop tracking error system (10), the control input can be
expressed as the sum of the feedforward NN estimation term and the RISE feedback
term. As detailed in [33], the RISE control term μ(t) is given by:
μ(t) = (ks + 1)e2(t) −(ks + 1)e2(0) +
t
∫
0
{(ks + 1)α2e2(s) + β1 sign[e2(s)]}ds
(16)
where ks, β1 ∈ℝ+ are positive feedback gains. The time derivative of (16) leads to:
̇μ(t) = (ks + 1)r(t) + β1 sign[e2(t)]
(17)
Since the nonlinearities in the system’s dynamics are supposed to be unknown, a new
control term, denoted ̂Fd, and generated by the NN feedforward estimation is added
Authenticated
6:01 PM

228
|
M. Taktak-Meziou et al.
cancel out the effects of the uncertainties. ̂Fd is then expressed by:
̇̂Fd =
̂W⊤σ(V⊤xd)
(18)
where V ∈ℝ(a+1)×L is a bounded constant weight matrix, and
̂W ∈ℝ(L+1)×1, is the
matrix of the estimates of the NN weights, generated on-line by:
̇̂W = K[σ(V⊤xd)e⊤
2 −κ ̂W]
(19)
where κ is a positive design constant parameter. K = K⊤> 0 is a constant positive
deﬁnit control gain matrix. According to property 1, the upper bound of
̇̂W can be
formulated as follows:
‖
̇̂W ‖≤FNσm ‖ e2 ‖
(20)
where FN is a known bound constant. The overall control input is then given by:
u = ̂Fd + μ
(21)
By evaluating the time derivative of (21) and substituting the expressions of ̇μ and ̇̂Fd
given by (18) and (17) respectively, we get:
̇u = ̇̂Fd + ̇μ =
̂W⊤σ(V⊤xd) + (ks + 1)r(t) + β1 sign[e2(t)]
(22)
Thereby, the closed-loop tracking error system dynamics are formulated by consider-
ing the ﬁrst time derivative of (10)
M(q) ̇r = −̇M(q)r + ̇Fd + ̇S −̇u
= −̇M(q)r + ̇Fd + ̇S −
̂W⊤σ(V⊤xd) −(ks + 1)r(t)
−β1 sign[e2(t)]
= −1
2
̇M(q)r +
̃W⊤σ(V⊤xd) + ε(xd) −(ks + 1)r(t)
+(−1
2
̇M(q)r + ̇S + e2) −β1 sign[e2(t)] −e2
(23)
where
̃W⊤= W⊤−
̂W⊤is the estimation error. Equation (23) can then be rewritten as
follows:
M(q) ̇r = −1
2
̇M(q)r + ̃N + NB1 + NB2 −e2 −(ks + 1)r(t) −β1 sign[e2(t)]
(24)
with
̃N = −1
2
̇M(q)r + ̇S + e2
(25)
NB1 = ε(xd)
(26)
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
229
NB2 =
̃W⊤σ(V⊤xd)
(27)
As detailed in [33], thanks to the Mean Value Theorem, ̃N is upper bounded as follows:
‖ ̃N ‖=‖ −1
2
̇M(q)r + ̇S + e2 ‖≤ρ(‖ z1 ‖) ‖ z1 ‖
(28)
where z1(t) ∈ℝ3 is given by:
z1(t) = [e⊤
1
e⊤
2
r⊤]
⊤
(29)
and ρ(‖ z1 ‖) is a positive non decreasing bounding function. In order to facilitate
the stability analysis, some important inequalities are considered according to the
following lemma.
Lemma 1
Consider NB1 and NB2 as expressed respectively by (26) and (27). The following
inequalities hold.
‖ NB1 ‖ ≤εN
(30)
‖ ̇NB1 ‖ ≤ε󸀠
N
(31)
‖ NB2 ‖ ≤( ̃W⊤
m + FNσm ‖ e2 ‖)σm ≡ξB2
(32)
‖ ̇NB2 ‖ ≤ξ1 ‖ e2 ‖ +ξ2
(33)
where ξB2, ξ1, and ξ2 are positive known constants.
Proof:
Inequalities (30) and (31) can be directly determined according to equations (14), (15),
and (26). Based on Property 1 and equation (20) dealing with the upper bound of
the NN weights, the inequality (32) can be easily justiﬁed. Then, by considering the
derivative relation ̇σm = σm(1−σm) together with the time derivative of NB2 expressed
as
̇NB2 =
̇̃Wσm +
̃W ̇σm, inequality (33) is concluded.
For a complete review of the stability analysis of the RISE-NN control approach,
the reader is referred to [19].
5 Numerical Simulations
In this section, numerical simulations are conducted in the framework of Mat-
lab/Simulink software. The 3.5” HDD (Seagate Barracuda 7200.10) dynamic model [34]
is chosen as a demonstrator in simulation to test the effectiveness of the proposed
control schemes. The full mathematical description of this prototype is given by
equations (1)-(4) with a sample time ﬁxed to Te = 0.05ms. The normalized dynamic
model parameters are given by: M(q) = 1, σ0 = 105, σ1 = √105, σ2 = 0.4, fs = 1.5,
Authenticated
6:01 PM

230
|
M. Taktak-Meziou et al.
fc = 1, and ̇qs = 10−3. The NN weights are manually tuned off-line for the best possible
controller performance. A physical restriction is imposed on the VCM actuator leading
to the saturation of the control input u, that is | u |≤3v corresponding to a practical
range in real HDD servo-systems. All initial conditions are chosen to be at the origin.
Three different simulation scenarios have been considered.
The ﬁrst scenario deals with tracking of both sinusoidal and step desired tra-
jectory qd without external disturbances [34]. The sinusoidal reference is chosen as
qd = Asin(πft) where A = 2μm and f = 200Hz, whereas the constant desired trajectory
is chosen to be a unit step qd = 1μm and a zero mean value Gaussian white noise wnoise
with a variance σ2 = 9 × 10−9(m)2 has been considered for this scenario as well as for
the other scenarios.
In the second scenario, only the step response is investigated for a robustness
test of the proposed controller towards external perturbations. Both input win and
output wout disturbances have been considered in this scenario, as schematically
illustrated in Fig. 3. wout is assumed to be an impulse disturbance with an amplitude
of 0.3μm applied to the system at the time instance t = 4ms, while win is an unknown
persistent bounded disturbance such that win = −3mv. In the third and last scenario,
uncertainties on the system’s inertia mass M(q) are considered which can be caused
by the movement of the R/W head tip onto the disc surface. Therefore, an efficient
controller is required to ensure the convergence of the head to the target position, and
to be robust enough against parametric uncertainties.
For all the proposed simulations scenarios described above, and in order to
highlight the performance of the proposed control solution, the RISE-NN closed-loop
responses are compared to those of a classical Proportional Derivative controller (PD).
The PD control gains are manually tuned to get the best performance. However,
automatic optimization tools can also be used to determine these parameters based
on a suitable objective function.
For the purpose of performance comparison, an energy function E is introduced,
it is expressed by:
E =
Nsim
∑
i=1
|ui|,
(34)
where Nsim is the sample number for the whole simulation duration.
Table 1 summarizes the parameters of the proposed controllers, while Tab. 2 gives
a summary of the overall closed-loop system’s performance with the different control
solutions.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
231
Tab. 1. Summary of the controllers’ parameters.
Reference (μm)
RISE-NN
PD
qd
α1
α2
Ks
β1
Kp
Kd
2sin(200π t)
3000
2900
1850
1
2 × 107
103
1
1500
1500
1850
1
2 × 107
103
Tab. 2. Controllers performances comparison.
Without disturbances (Sinusoidal Reference)
PD
RISE-NN
Settling time
2.85 ms
1.62 ms
Maximum overshoot
40%
25%
Control input | u |
3 v
3 v
Energy function (E)
3.11 × 102v
5.38 × 102v
Without disturbances (Step response)
PD
RISE-NN
Settling time
5.55ms
2.33 ms
Maximum overshoot
50%
1.5%
Control input | u |
3 v
1.07 v
Energy function (E)
3.03 × 102v
43.44v
Disturbances Rejection
PD
RISE-NN
Recovery time
3.2 ms
2.7 ms
Maximum overshoot
9.5%
15%
Control input | u |
3v
1.5v
Energy function (E)
3.84 × 102v
1.2 × 102v
Parameters uncertainties (80% of error)
PD
RISE-NN
Settling time
9.8 ms
5.6 ms
Maximum overshoot
62%
15%
Control input | u |
3 v
1.5 v
Energy function (E)
4.83 × 102 v
77.66 v
5.1 Scenario 1: Tracking Problem in Nominal Case
Comparison between the performance of RISE-NN and PD controllers is illustrated in
Figs. 5–9.
Authenticated
6:01 PM

232
|
M. Taktak-Meziou et al.
(a)
(b)
0
5
10
15
20
−0.5
0
0.5
1
1.5
2
Time(ms)
Output displacement (μm)
 Reference trajectory
 Output displacement
0
5
10
15
20
−3
−2
−1
0
1
2
3
Time(ms)
 Control input (V)
 Control input
Fig. 5. Step response in non disturbed case with PD controller: (a) Output displacement and (b)
Control input.
(a)
(b)
0
5
10
15
20
−0.2
0
0.2
0.4
0.6
0.8
1
1.2
 Time(ms)
 Output displacement (μm)
 Reference trajectory
 Output displacement
0
5
10
15
20
−1.5
−1
−0.5
0
0.5
1
 Time(ms)
 Control input (V)
 Control input
Fig. 6. Step response in non disturbed case with RISE-NN controller: (a) Output displacement and (b)
Control input.
(a)
(b)
0
5
10
15
20
−3
−2
−1
0
1
2
3
 Time(ms)
 Output displacement (μm)
 Reference trajectory
 Output displacement
0
5
10
15
20
−3
−2
−1
0
1
2
3
 Time(ms)
 Control input (V)
 Control input
Fig. 7. Tracking of a sinusoidal reference trajectory in non disturbed case with PD controller: (a)
Output displacement and (b) Control input.
First, in the case of the time varying reference signal (cf. Figs. 7–8), it can be
observed that the proposed control solution RISE-NN achieves a better track following
performance. Indeed, the head tip converges faster to the target position such that the
tracking error is reduced around zero and little overshoots are generated.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
233
(a)
(b)
0
5
10
15
20
−3
−2
−1
0
1
2
3
 Time(ms)
 Output displacement (μm)
 Reference trajectory
 Output displacement
0
5
10
15
20
−3
−2
−1
0
1
2
3
 Time(ms)
 Control input (V)
 Control input
Fig. 8. Tracking of a sinusoidal reference trajectory in non disturbed case with RISE-NN controller: (a)
Output displacement and (b) Control input.
(a)
(b)
0
5
10
15
20
−4
−2
0
2
4
6 x 10−4
 Time(ms)
 NN weights
 w1
 w2
 w3
 w4
0
5
10
15
20
−4
−2
0
2
4
6 x 10−4
 Time(ms)
 NN weights
 w1
 w2
 w3
 w4
Fig. 9. Time history of the neural network weights in nominal case: (a) step response and (b)
sinusoidal reference.
Second, the investigated step response (cf. Figs. 5–6) shows that RISE-NN tracking
performances are much better than the PD controller. This is perceptible through the
decreased overshoots which are negligible compared to those of the PD controller. In
term of speed and precision, the RISE-NN settling time is substantially reduced, i.e.
the R/W head tip reached the target and remains around such that the positioning
accuracy is ensured.
In addition, the RISE-NN control energy consumption is very low in the case of
step response, that is the control input is kept within the admissible limits.
The time history of the NN weights is displayed in Fig. 9 and shows that in both
cases, sinusoidal and constant reference trajectories, the boundedness of the NN
weight is ensured.
Authenticated
6:01 PM

234
|
M. Taktak-Meziou et al.
5.2 Scenario 2: External Disturbances Rejection
The main objective of this scenario is to test the effect of external disturbances
on the closed-loop system and how the proposed control solutions deal with. The
resulting disturbance rejection simulations with both PD and RISE-NN controllers are
illustrated in Figs. 10, 11 respectively.
(a)
(b)
0
10
20
30
40
50
60
70
−0.5
0
0.5
1
1.5
2
 Time(ms)
 Output displacement (μm)
 Reference trajectory
 Output displacement
0
10
20
30
40
50
60
70
−3
−2
−1
0
1
2
3
 Time(ms)
 Control input (V)
 Control input
Fig. 10. Tracking under external disturbances with PD controller: (a) Output displacement and (b)
Control input.
(a)
(b)
0
10
20
30
40
50
60
70
−0.2
0
0.2
0.4
0.6
0.8
1
1.2
Time(ms)
 Output displacement (μm)
 Reference trajectory
 Output displacement
0
10
20
30
40
50
60
70
−2
−1.5
−1
−0.5
0
0.5
1
1.5
Time(ms)
 Control input (V)
 Control input
(c)
0
10
20
30
40
50
60
70
−4
−2
0
2
4
6 x 10−4
 Time(ms)
 NN weights
 w1
 w2
 w3
 w4
Fig. 11. Tracking under external disturbances with RISE-NN controller: (a) Output displacement, (b)
Control input, and (c) Time history of the neural network weights.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
235
For a persistent external disturbance ωin and a punctual output disturbance ωout
applied at the time instant t = 40ms, both controllers successfully performed the
rejection and the head tip is returned to its target track. However, with RISE-NN, the
displacement of the head, as shown in Fig. 11(a), is faster with a reduced 5% settling
time which results in a quick return of the position error signal to around zero, but the
overshoot remains relatively signiﬁcant.
Moreover, the RISE-NN control input evaluation satisﬁes the physical constraints
and is kept within the interval [−3v,3v] without reaching the saturation limits. This
results in a reduced control effort reﬂected by the energy function E. It is worth noting
that the norm of the NN weights can be easily upper bounded by a constant as depicted
in Fig. 11(c).
5.3 Scenario 3: Robustness Towards Parametric Uncertainties
For a complete comparative study between both proposed controllers, let us consider
uncertainties on the system inertia of the HDD servo-system. The obtained simulation
results for this case are shown in Figs. 12 and 13.
(a)
(b)
0
5
10
15
20
−0.5
0
0.5
1
1.5
2
 Time(ms)
 Output displacement (μm)
Reference trajectory
with 20% of error
without error
with 80% of error
0
5
10
15
20
−3
−2
−1
0
1
2
3
 Time(ms)
 Control input (V)
with 80% of error
with 20% of error
without error
Fig. 12. Robustness towards parameters’ uncertainties with PD controller: (a) Output displacement
and (b) Control input.
(a)
(b)
0
5
10
15
20
−0.2
0
0.2
0.4
0.6
0.8
1
1.2
 Time(ms)
 Output displacement (μm)
Reference trajectory
without error
with 20% of error
with 80% of error
0
5
10
15
20
−1.5
−1
−0.5
0
0.5
1
1.5
Time(ms)
 Control input (V)
with 80% of error
without error
with 20% of error
Fig. 13. Robustness towards parameters’ uncertainties with RISE-NN controller: (a) Output
displacement and (b) Control input.
Authenticated
6:01 PM

236
|
M. Taktak-Meziou et al.
For an uncertainty amount up to 80%, with respect to the nominal value, the
closed-loop system behavior with a PD controller is so degraded. Therefore, as
illustrated in Fig. 12, signiﬁcant overshoots can be observed and the 5% settling time
is too long.
However, with a RISE-NN controller, the system shows a good robustness against
these uncertainties and the head tip achieves a quick convergence to the target
position with a relatively smaller overshoots.
Consequently, according to these results, it can be concluded that against para-
metric uncertainties, the RISE-NN control solution is able to ensure better tracking
performances.
6 Conclusion and Future Work
In this paper, a RISE based NN controller was proposed as a solution to solve a
Hard-Disc-Drive head track following problem. The main objective was to guarantee
that the tracking error is minimized as much as possible and converges to a neighbor-
hood of zero.
Numerical simulations for different operating conditions are provided to show the
effectiveness of the proposed controller. Thereby, through a comparative study with a
PD controller, it was clearly shown that, with the RISE-NN approach, the convergence
of the head tip to the target track can be ensured with superior performance in terms
of speed, accuracy and robustness against external disturbances and parametric
uncertainties.
Our future work will be focused on the optimization tools for an extended version
of the RISE-NN controller as well as real-time experiments.
Bibliography
[1]
B. Chen, K. Lee, T.H.and Peng and V. Venkataramanan. Hard disc drive servo-systems.
Springer, 2006.
[2]
B. Isayed and M. Hawwa. A nonlinear PID control scheme for hard disc drive servo-systems.
Mediterranean Conf. on Control and Automation, MED’07, :1–6 June 2007.
[3]
J. Ishikawa and M. Tomizuka. A novel add-on compensator for cancellation of pivot
nonlinearities in hard disc drives. IEEE Trans. on Magnetics, 34(4):1895–1897, 1998.
[4]
T. Atsumi, A. Okuyama, and M. Kobayashi. Track-following control using resonant ﬁlter in hard
disc drives. IEEE/ASME Trans. on Mechatronics, 12(4):472–479, 2007.
[5]
J. Chang and H. Ho. LQG/LTR frequency loop shaping to improve TMR budget. IEEE Trans. on
Magnetics, 35(5):2280–2282, 1999.
[6]
Z. Li, G. Guo, B. Chen and T. Lee. Optimal control design to achieve highest track-per-inch in
hard disc drives. J. of Information Storage and Processing Systems, 3(1–2):27–41, 2001.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
237
[7]
B. Chen, T. Lee, K. Peng, and V. Venkataramanan. Composite nonlinear feedback control for
linear systems with input saturation: theory and an application. IEEE Trans. on Automatic
Control, 48(3):427–439, 2003.
[8]
Z. Goh, T.B.and Li, B. Chen, T. H. Lee and T. Huang. Design and implementation of a hard disc
drive servo system using robust and perfect tracking approach. IEEE Trans. on Control Systems
Technology, 9(2):221–233, 2001.
[9]
R. Horowitz and B. Li. Adaptive control for disk ﬁle actuators. 34th Conf. on Decision and
Control, 1:655–660, New Orleans, LA, 1995.
[10] M. Kobayashi, S. Nakagawa and H. Numasato. Adaptive control of dual-stage-actuator for hard
disc drives. American Control Conf., 1:523–528, Boston, MA, USA, 2004.
[11] T. Yamaguchi, K. Shishida, S. Tohyama, Y. Soyama, H. Hosokawa, H. Ohsawa, H. Numasato,
T. Arai, K. Tsuneta and H. Hirai. A mode-switching controller with initial value compensation for
hard disc drive servo control. Control Engineering Practice, 5(11):1525–1532, 1997.
[12] T. Yamaguchi and H. Hirai. Control of transient response on a servosystem using
mode-switching control, and its application to magnetic disk drives. Control Engineering
Practice, 6(9):1117–1123, 1998.
[13] J. Nie, E. Sheh, and R. Horowitz. Optimal H∞control for hard disc drives with an irregular
sampling rate. American Control Conf., CA, USA, 2011.
[14] M. Graham and R. De Callafon. Modeling and robust control for hard disc drives. ASME/JSM
Conf. on Micromechatronics for information and Precision Equipement (MIPE), Santa Carla, CA,
USA, June 2006.
[15] M. Taktak, A. Chemori, J. Ghommam and N. Derbel. Track following control using nonlinear
model predictive control in Hard disc drives. Int. Conf. on Intelligent Robots and Systems,
4401–4406, Tokyo, Japon, 2013.
[16] M. Taktak, A. Chemori, J. Ghommam and N. Derbel. Model predictive tracking control for a
head-positioning in a hard disc drive. 21st Mediterranean Conf. on Control and Automation,
1368–1373, Platanias, Chania, Crete, Greece, June 2013.
[17] B. Xian, D. Dawson, M. De Queiroz and J. Chen. A continuous asymptotic tracking control
strategy for uncertain nonlinear systems. IEEE Trans. on Automatic Control, 49(7):1206–1211,
2004.
[18] C. Makkar, G. Hu, W. Sawyer and W. Dixon. Lyapunov-based tracking control in the
presence of uncertain nonlinear parameterizable friction. IEEE Trans. on Automatic Control,
52(10):1988–1994, 2007.
[19] P. M. Patre, W. MacKunis, K. Kent and W. Dixon. Asymptotic tracking for uncertain dynamic
systems via a multilayer neural network feedforward and RISE feedback control structure. IEEE
Trans. on Automatic Control, 53(9):2180–2185, 2008.
[20] D. Abramovitch, F. Wang and G. Franklin. Disk drive pivot nonlinearity modeling part I:
Frequency domain. American Control Conf., :2600–2603, Baltimore, Maryland, USA, 1994.
[21] F. Wang, T. Hurst, G. Abramovitch and D.and Franklin. Disk drive pivot nonlinearity modeling
part II: time domain. American Control Conf., :2604–2607, Baltimore, Maryland, USA, 1994.
[22] C. De Wit, H. Olsson, J. Astrom and P. Lischinsky. A new model for control of systems with
friction. IEEE Trans. on Automatic Control, 40(3):419–425, 1995.
[23] B. Armstrong-Helouvry, P. Dupont and C. de Wit. A survey of analysis tools and compensation
methods for the control of machines with friction. Automatica, 30(7):1083–1138, 1994.
[24] L. Gong, J.Q.and Guo, H. Lee and B. Yao. Modeling and cancellation of pivot nonlinearity in
hard disk drives. IEEE Trans. on Magnetics, 38(5):560–3565, 2002.
[25] J. Swevers, F. Al-Bender, T. Ganseman and C.G. Prajogo. An integrated friction model structure
with improved presliding behavior for accurate friction compensation. IEEE Trans. on Automatic
Control, 45(4):675–686, 2000.
Authenticated
6:01 PM

238
|
M. Taktak-Meziou et al.
[26] J. Ishikawa and M. Tomizuka. Pivot friction compensation using an accelerometer and a
disturbance observer for hard disk drives. IEEE/ASME Trans. on Mechatronics, 3(3):194–201,
1998.
[27] A. Ramasubramanian and L. E. Ray. Adaptive friction compensation using extended
Kalman-Bucy ﬁlter friction estimation: a comparative study. American Control Conf.,
2588–2594, Chicago, Illinois, June 2000.
[28] P. San, B. Ren, S. Ge and T. Lee. Adaptive neural network control of hard disk drives with
hysteresis friction nonlinearity. IEEE Trans. on Control Systems Technology, 19(2):351–358,
2009.
[29] K. J. Astrom and C. De Wit. Revisiting the LuGre model, stick-slip motion and rate dependence.
IEEE Control Systems, 28(6):101–114, 2008.
[30] D. Meddah, A. Benallegue and A. Cherif. A neural network robust controller for a class
of nonlinear MIMO systems. IEEE Int. Conf. on Robotics and Automation, :2645–2650,
Albuquerque, NM, 1997.
[31] F. Sun, L. Li and H. Li. Neuro-fuzzy dynamic-inversionbased adaptive control for robotic
manipulatorsldiscrete time case. IEEE Trans. on Industrial Electronics, 54(3):1342–1351, 2007.
[32] T. Dierks and S. Jagannathan. Neural network control of mobile robot formations using RISE
Feedback. IEEE Trans. on Systems, Man and Cybernetics, Part B, 39(2):332–347, 2008.
[33] P. M. Patre, W. MacKunis, K. Kent and W. Dixon. Asymptotic tracking for systems with
structured and unstructured uncertainties. IEEE Trans. on Control Systems Technology,
16(2):373–379, 2008.
[34] C. De Wit, H. Olsson, J. Astrom and P. Lischinsky. Adaptive neural network control of hard
disk drives with hysteresis friction nonlinearity. IEEE Trans. on Control Systems Technology,
19(2):351–358, 2011.
Biographies
Manel Taktak Meziou was born in 1984 in Sfax (Tunisia). She received her
Engineer Degree in Electrical Engineering from the National School of
Engineering of Sfax (Tunisia) in June 2008. Then, she obtained her Master
Degree of Automatic Control and Industrial Computing from the National
School of Engineering of Sfax in Tunisia in July 2009, and later in 2014 the
PhD in Automatic Control Theory from the university of Sfax. Her research
interests are in the area of nonlinear systems, control theory and robotic.
Ahmed Chemori received his MSc and PhD degrees respectively in 2001 and
2005, both in automatic control from the Grenoble Institute of Technology.
He has been a Post-doctoral fellow with the Automatic control laboratory of
Grenoble in 2006. He is currently a tenured research scientist in Automatic
control and Robotics at the Montpelier Laboratory of Informatics, Robotics,
and Microelectronics. His research interests include nonlinear, adaptive and
predictive control and their applications in humanoid robotics,
underactuated systems, parallel robots, and underwater vehicles.
Authenticated
6:01 PM

RISE-NN control for track following in HDD
|
239
Jawhar Ghommam was born in Tunis in 1979. He got the BSc degree in
Computer and Control Engineering from the National Institute and Applied
Sciences and Technology (INSAT) in 2003 in Tunis. He got the DEA (MSc)
degree from the university of Montpelier at the Laboratoire d’Informatique,
Robotique et Micro-électronique (LIRMM, France) in 2004, and later on in
2008 a Ph.D in Control Engineering degree from the university of Orleans.
From 2008, he is with the National Institute of Applied Sciences and
Technology, where he holds a tenured Assistant Professor at the Department
of Electrical and Control Engineering. Dr. J. Ghommam occupies a permanent
research position at the Research Unit on Intelligent Control and
Optimization of Complex System (ICOS) at Sfax-Tunisia.
Nabil Derbel was born in Sfax (Tunisia) in April 1962. He received his
Engineering Diploma from the National School of Engineering of Sfax in
1986, the DEA diploma in Automatics from INSA de Toulouse in 1986, the
PhD. degree from the Laboratoire LAAS Of Toulouse in 1989, and the
Doctorat dÉtat degree from the National School of Engineering of Tunis in
1997. He joined the Tunisian University in 1989, where he held different
positions involved in research and education. Currently, he is Professor of
Automatic Control at the National School of Engineering of Sfax. His current
interests include optimal control, sliding mode control, fuzzy systems,
neural networks.
Authenticated
6:01 PM

Authenticated
6:01 PM

I. Maalej, D. Ben Halima Abid, C. Rekik and N. Derbel
Single and Multiple Faults Detection in
Nonlinear System Using Fuzzy
Kalman Observer
Abstract: This paper deals with the problem of fault detection and state estimation
for stochastic nonlinear systems. Cases of single, multiple and simultaneous actuator
faults are considered. A fuzzy augmented state Kalman observer (FASKO) is developed
to solve the problem stated above. The proposed observer is based on fuzzy logic and
Kalman ﬁlter’s theory. It is applied for Takagi-Sugeno fuzzy model which describes the
nonlinear dynamic model by its decomposition into a number of linear submodels.
Having these submodels, the Kalman equations are designed for each local model.
This combination has been illustrated by comparing the performances of the FASKO
with the classical augmented state Kalman observer(ASKO). Simulation results,
performed on three tank system, validate the effectiveness of the proposed observer.
Keywords: Fault detection, state estimation, fuzzy augmented state Kalman observer.
1 Introduction
Interest in fault detection in nonlinear systems has grown signiﬁcantly in recent
years [2]. In fact, it is considered as one of the important step towards fault tolerant
control systems (FTCs, [1], [3]). The main objective of fault detection is to provide early
warnings to operators in order to take appropriate actions to prevent the break down
of the system after the occurence of the faults. In the litterature, several methods are
found for model based fault detection ([19],[20]). The most common method relies
on the use of observers ([4],[5]) because they offers the opportunity to reconstruct
the state variables of the process since the states are not always accessible and the
transducers are not available or very expensive.
Luenberger observer was ﬁrstly proposed and applied in [6] for deterministic
continuous time-invariant systems. Several studies were developed in order to include
time-variant, discret and stochastic issues [7]. The problem of state estimation in
stochastic linear system is solved by the well known Kalman ﬁlter. This ﬁlter [9],
becomes more useful even for real-time application. An extension of the Kalman ﬁlter
for nonlinear system was effectuated to get an Extended Kalman ﬁlter (EKF) [10]. In
addition, to deal with the nonlinearity in the fault detection problem, Patton [18] has
I. Maalej, D. Ben Halima Abid, C. Rekik and N. Derbel: Control and Energy Management
Laboratory (CEM Lab) , University of Sfax, Sfax Engineering School, Sfax, Tunisia, emails:
imenmaalej@hotmail.fr donia.benhalimaabid@gmail.com, chokri.rekik@enis.rnu.tn,
n.derbel@enis.rnu.tn.
De Gruyter Oldenbourg, ASSD – Advances in Systems, Signals and Devices, Volume 5, 2018, pp. 241–256.
DOI 10.1515/9783110470468-014
Authenticated
6:04 PM

242
|
I. Maalej et al.
introduced the T-S fuzzy observer. The main principle is to use the T-S fuzzy models to
represent nonlinear dynamic systems ([11],[12]). Then, the fuzzy observer is designed
by a fusion of a number of local observers [16]. Authors in [14] and [15] have considered
the design of fuzzy sliding mode observer for nonlinear systems which are subjected to
unknown inputs or disturbances. A comparaison between observers based methods
in model based fault detection was presented by Frank [22] in his survey paper. Later,
Isermann [2] gave a survey on robust residual generation and evaluation methods used
in observer based fault detection.
In this paper, the joint of fault and state estimation for a class of nonlinear systems
are considered. Our main goal is to treat single, multiple and simultaneous actuator
faults with their effects on the states. Therefore, an augmented state observer based
on fuzzy logic and classical Kalman ﬁlter equations has been developed for noisy
dynamic systems.
The remainder of this paper is organized as follows: In section 2, the problem to
be considered is formulated. In section 3, the fuzzy augmented state observer using
standard Kalman ﬁlter theory is presented. Section 4 is devoted to simulation results
to illustrate the effectiveness of the proposed observer. Conclusions are drawn in
section 5.
2 Problem Formulation
Consider the following linear time invariant state space model given by equation (1):
{ X(k + 1) = AX(k) + BU(k) + Ww(k)
Y(k)
= CX(k) + v(k)
(1)
where X(k) ∈Rn is the state vector of the system, U(k) ∈Rm is the known system inputs
and Y(k) denotes the system outputs. Matrices A, B ,C and W are known and have
appropriate dimensions. w(k) and v(k) are process and measurement noises that are
mutually uncorrelated:
E[wi(k)vj(k)T] = 0
Both of the noises are assumed to be zero mean normally disturbed white noise
sequences with covariance Q and R, respectively:
E[wi(k)wj(k)T] = Qδij ; (Q ≥0)
E[vi(k)vj(k)T] = Rδij ; (R ≥0)
where T denotes transpose and δij the kronecker delta function.
To deﬁne the stochastic process, the statistical proprieties (mean and variance) of
the initial state should be speciﬁed.
Authenticated
6:04 PM

Observer for fault and state estimation
|
243
mean: E[X(0)] = ̄X(0)
variance: E[(X(0) −̄X(0))(X(0) −̄X(0))T] = Px(0)
In this work, the initial state is a gaussian random variable and it is uncorrelated
with the process and measurement noises w(k) and v(k):
E[X0(k)w(k)T] = 0;E[X0(k)v(k)T] = 0
In fault free case, the process is described as given in equation (1). Otherwise, because
of a fault were happened at the actuator or the sensor , the system (1) evolves as follow:
{ X(k + 1) = AX(k) + BU(k) + Ww(k) + Faf(k)
Y(k)
= CX(k) + v(k) + Fsf(k)
(2)
where f(k) is the fault vector. Fa is a matrix that signiﬁes an actuator fault which affect
the input signal. A sensor fault Fs provides a measurement error.
The initial fault satisfy the followings:
E[f(0)] = ̄f(0)
E[(f(0) −̄f(0))(f(0) −̄f(0))T] = Pf(0)
The fault is generated by:
f(k + 1) = f(k)
(3)
Treating X(k) and f(k) as an augmented state system by combining equations (2) and
(3), we obtain the following representation:
{ Xa(k + 1) = AaXa(k) + BaU(k) + Waw(k)
Y(k)
= CaXa(k) + v(k)
(4)
where:
Xa = [ X(k)
f(K) ], Aa = [ A
Fa
0
I
], Ba = [ B
0 ];Ca = [ C
Fs
];Wa = [ W
0
]
An alternative state space model for fault estimation which is based on the augmented
state vector Xa is then introduced.
Consider that the actuator fault and the sensor fault didn’t occur simultaneously.
The matrice values of Fa and Fs are:
–
In case of actuator fault: Fa = B ; Fs = 0
–
In case of sensor fault: Fa = 0 ; Fs = I
In this paper, we will adopt the augmented state space model as presented in eqution
(4) in order to estimate the joint of fault and state.
Authenticated
6:04 PM

244
|
I. Maalej et al.
3 Observer Structure
In this section, we will recall the Kalman ﬁlter’s principle [8]. Then we combine
its equations with fuzzy logic to develop a fuzzy augmented state Kalman observer
(FASKO).
3.1 Augmented State Kalman Observer
The Kalman ﬁlter [9], is known to be an optimal ﬁlter for linear system. It has been
widely used for stochastic estimation. In this section, we consider the augmented state
Kalman observer (ASKO) for the joint of fault detection and state estimation.
The principle of the Kalman ﬁlter is determined by a recurrence relation based on
two steps: prediction and correction.
̂x(k|k) →̂x(k + 1|k) →̂x(k + 1|k + 1)
where: ̂x(k|k): the current state estimate
̂x(k + 1|k): A priori state estimate (prediction step)
̂x(k + 1|k + 1): A posteriori state estimate (correction step)
In the predection step, the augmented state space model shown in equation (4) is
used:
1.
to predict the states at time instant (k + 1) based on the estimated states at the
previous time to get a priori estimation of the current state:
̂Xa(k + 1|k) = AâXa(k) + BaU(k)
(5)
2.
to project the error covariance matrix to get a priori covariance matrix of the
prediction error e(k + 1|k) = Xa(k + 1) −̂Xa(k + 1|k):
Pa(k + 1|k) = AaPa(k|k)(Aa)T + WaQ(Wa)T
(6)
Pa(k|k) = E[e(K)e(K)T] is the covariance matrix of the estimation error (e(k|k) =
Xa(k) −̂Xa(k|k)) where the initial covariance matrix Pa(0|0) is:
Pa(0|0) = [ Px(0)
0
0
Pf(0) ]
In the second step, the estimated state shown in equation 5 will be corrected. This step
requires:
1.
to compute the Kalman ﬁlter gain:
Ka(k + 1) = Pa(k + 1|k)(Ca)T[CaPa(k + 1|k)(Ca)T + R]−1
(7)
Authenticated
6:04 PM

Observer for fault and state estimation
|
245
2.
to correct the augmented state vector to get the posteriori state estimate:
̂Xa(k + 1|k + 1) = ̂Xa(k + 1|k) + Ka(k + 1)[Y(k + 1) −CâXa(k + 1|k)]
(8)
3.
to update the estimation error covariance matrix to get the posteriori covariance
matrix:
Pa(k + 1|k + 1) = [I −Ka(k + 1)Ca]Pa(k + 1|k)
(9)
3.2 Fuzzy Augmented State Kalman Observer (FASKO)
In order to identify wether the actuator or the sensor is faulty, we will consider a
fuzzy augmented state space model. The model is described by If-Then rules. Each rule
represents local linear state space relations approximating the non linear systems. The
ith rule of the Takagi-Sugeno model [16], [17], has the following forms:
Rule i : (i = 1:N , N is the number of the If-Then rules.)
If z1(k) is Mi,1 and...and zp(k) is Mi,p Then
{ Xa
i (k + 1) = Aa
i Xa
i (k) + Ba
i U(k) + Wa
i w(k)
Yi(k)
= Ca
i Xa
i (k) + v(k)
(10)
where Xa(k) ∈Rn is the state vector, U(k) ∈Rm is the input vector, w(k) ∈Rp is the
process noise, Y(k) ∈Rq is the output vector and v(k) ∈Rn is the measurement noise.
z1(k)...zp(k) are the presmise variables and Mij are the fuzzy sets. Matrices Aa
i ∈Rn×n,
Ba
i ∈Rn×m and Ca
i ∈Rn×q denote respectively the augmented state matrix and the
input matrix associated with the ithlocal model. The values of these matrices can be
obtained after performing the direct linearization arround some operating points or
by using identiﬁcation procedure.
After defuzziﬁcation, we get the following equations:
{
{
{
{
{
{
{
{
{
Xa(k + 1) =
N
∑
i=1
hi(z(k))Xa
i (k)
Y(k)
=
N
∑
i=1
hi(z(k))Yi(k)
(11)
The membership grade hi(z(k)) are deﬁned as:
hi(z(k) =
wi(z(k))
N
∑
i=1
wi(z(k))
(12)
wi(z(k)) =
p
∏
i=1
Mij(zj(k))
(13)
Authenticated
6:04 PM

246
|
I. Maalej et al.
where z(k) = [z1(k)...zp(k)]. For all k, we have:
{
{
{
{
{
N
∑
i=1
hi(z(k)) = 1
hi(z(k)) ≥0
and
{
{
{
{
{
N
∑
i=1
wi(z(k)) ≥0
wi(z(k)) ≥0
In reality, we cannot always observe all the state of a system. In this section, we
propose fuzzy augmented state Kalman observer FASKO to estimate T-S model. It is
assumed that the local linear models are uncorrelated and each of the N local model
parameters is time invariant. At an operating point, Kalman ﬁlter which is associated
with the ith fuzzy rule is presented as follows:
If z1(k) is Mi,1 and...and zp(k) is Mi,p Then
̂xa
i (k + 1|k) = Aa
i ̂xa
i (k) + Ba
i U(k)
(14)
̂yi(k + 1|k) = Ca
i ̂xa
i (k + 1|k)
(15)
Pa
i (k + 1|k) = Aa
i Pa
i (k|k)(Aa
i )T + Wa
i Q(Wa
i )T
(16)
Ka
i (k + 1) = Pa
i (k + 1|k)(Ca
i )T[Ca
i Pa
i (k + 1|k)(Ca
i )T + R]−1
(17)
̂xa(k + 1|k + 1) = ̂xa(k + 1|k) + Ka(k + 1)[Y(k + 1) −Câxa(k + 1|k)]
(18)
Pa
i (k + 1|k + 1) = [I −Ka
i (k + 1)Ca]Pa
i (k + 1|k)
(19)
where Ka
i in equation (17) is the Kalman gain matrix and Pa
i (k+1|k) and Pa
i (k+1|k+1)
are the covariance matrices of errors in predicted and updated state estimates of the
ith local Kalman observer, respectively. The basic idea is that the Kalman observer in
each fuzzy rule estimates the stats at any time instant in two steps (prediction and
correction) which are explained in the previous section. The overall fuzzy augmented
state Kalman observer is a weighted sum of individual local linear observer give by:
{
{
{
{
{
{
{
̂Xa
i (k + 1|k + 1)
=
N
∑
i=1
hi(z(k))[̂xa
i (k + 1|k) + Ka
i (k + 1)[yi(k + 1) −̂yi(k + 1|k)]
̂Y(k + 1|k)
=
N
∑
i=1
hi(z(k))Cîxa
i (k + 1|k)
(20)
where the membership grade are deﬁned as equations (12) and (13) .
Fuzzy observers are required to satisfy Xa(k) −̂
Xa(k) →0 when k →∞. Xa(k)
and ̂
Xa(k) are the augmented state vector and the augmented state vector estimate,
respectively. This condition guarantees that the steady error between Xa(k) and ̂
Xa(k)
converges to zero. But at ﬁrst, we have to test the observability matrix for the obtained
subsystems. A linear system is said to be observable if and only if the pair (Ai,Ci)
satisfy the following equation:
rank(O) = n
with
O = [CiCiAiCiAn−1
i
]
(21)
Authenticated
6:04 PM

Observer for fault and state estimation
|
247
4 Simulation Results
In this section, simulation studies on a three tank system [21] are achieved to validate
the effectiveness of ASKO and FASKO algorithms.
4.1 System Description
Figure 1 shows a schematic diagram of a three tank system [21].
It consist of three cylindrical tanks T1,T2 and T3 wich are serially connected by
cylindrical pipes with cross sectional area Sp.
Flow rates Qe1 of the ﬁrst tank and Qe2 of the third tank are considered as process
inputs.The water levels h1,h2 and h3 represent the measurable outputs.
All technical data are given in Tab. 1.
Pump1
Pump3
Qe1
A1
A2
A3
Qe2
h1
h2
h3
q12
q23
qS3
Tank 1
Tank 2
Tank 3
Fig. 1. Three tank system.
Tab. 1. System Parameters.
Parameters
Values
water level (h1, h2, h3) (m)
0.5, 0.45, 0.4
max ﬂow rate (Qe1, Qe2) (m3/sec)
5 × 10−5
cross section area of the tank (A1, A2, A3) (m2)
0.0154
cross section area of the connecting pipes (Sp) (m2)
5 × 10−5
constant outﬂow coefficients (c1, c2, c3)
1, 0.8, 1
Authenticated
6:04 PM

248
|
I. Maalej et al.
After establishing the balance of inﬂow and outﬂow of each tank, we obtain the
following non linear model:
{
{
{
{
{
{
{
{
{
{
{
{
{
dh1
dt
=
Qe1(t) −q12(t)
dh2
dt
=
q12(t) −q23(t)
dh3
dt
=
q23(t) + Qe2(t) −qs3(t)
(22)
where qij represents the water ﬂow rate from tank i to tank j. By using the Bernouilli’s
law, the ﬂow rate qij is expressed by equation (25):
qij = ciSp√2g△h
(23)
Put
dh
dt = f(h, Qe)
(24)
where
f(h, Qe) =
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨
1
A1
[Qe1 −c1Sp√2g(h1 −h2)]
1
A2
[c1Sp√2g(h1 −h2) −c2Sp√2g(h2 −h3)]
1
A3
[c2Sp√2g(h2 −h3) + Qe2 −c3Sp√2g(h3)]
(25)
To put the equation (26) in a state space form , Ai and Bi are considered as the jacobian
matrix of f;
Ai = ∂f
∂h
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨h(t)=hi
;
(26)
Bi =
∂f
∂Qe
󵄨󵄨󵄨󵄨󵄨󵄨󵄨󵄨u(t)=Qei
(27)
With the sampling time T= 5 s, simulation runs are performed using ASKO and FASKO
algorithms for state and fault estimation.
According to ASKO algorithm, matrices A, B and C are obtained after performing
linearization arround the nominal value shown in Tab. 1 and then, their discretisation.
The ﬂow rates Qe1 and Qe2 are chosen equal to 2 10−5 m3/sec and 3.375 10−5
m3/sec respectively. The initial conditions in the simulations are assumed to be:
[[
[
h1(0)
h2(0)
h3(0)
]]
]
= [[
[
0.4
0.35
0.3
]]
]
;[[
[
̂h1(0)
̂h2(0)
̂h3(0)
]]
]
= [[
[
0
0
0
]]
]
Authenticated
6:04 PM

Observer for fault and state estimation
|
249
We added normally disturbed noises w(k) and v(k) to the states and measurement
outputs, respectively. The process noise is selected as 0.75% of the nominal inﬂow
to tank 1 and 3. The measurement noise is selected as 0.25% of the normal height of
the tanks.
For the FASKO, we present the system with T-S model. We propose to linearize
the nonlinear model around some operating points. Nine local fuzzy augmented state
Kalman observers are designed for state and fault estimation.
We can easily checked that the necessary conditions of the observability are
satisﬁed.
Qe1 and Qe2 are the premise variables and the membership functions for these
premise variables are given in Figs. 2(a) and 2(b).
1.8
1.9
2
2.1
2.2
x 10−5
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Qe1 (m3/sec)
low
high
medium
(a) Qe1
1.8
1.9
2
2.1
2.2
x 10−5
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Qe1 (m3/sec)
low
high
medium
(b) Qe2
Fig. 2. Membership functions of the ﬂow rates (a) Qe1 and (b) Qe2.
4.2 Actuators Simulation Results
The three tank system is actuated by two pumps (two water ﬂow rates Qe1 and Qe2).
In order to detect fault which can happen in one or two actuators, single,multiple ans
simultaneous faults have been created on the system. It is assumed that the sensors
are faultless (Matrix Fs = 0). In this paper, we treat only multiple and simultaneous
actuator faults. The results of single fault case have been presented in details in [13].
The performance of ASKO and FASKO are analyzed after introduced the faults.
4.2.1 Multiple Sequential Faults
The actuator faults are applied as a ramp having zero initial value and appears at
500th sampling instant and 2000th sampling instant in actuator 1 and actuator 2,
respectively.
Authenticated
6:04 PM

250
|
I. Maalej et al.
1000
2000
3000
4000
5000
6000
0.15
0.2
0.25
0.3
0.35
0.4
sampling time
water level
true level
KF estimate
Fuzzy estimate
level 1
level 2
level 3
Fig. 3. Evolution of water level in case of multiple sequential faults.
The magnitude of the ﬁrst actuator reached 0.75 × 10−6 m3/sec at 1000th and the
magnitude of the second actuator reached 4×10−6 m3/sec at 2500th sampling instant.
The two actuators faults remain constant up to 7000th sampling instant.
The state estimates given by ASKO and FASKO are presented in Fig. 3.
Figure 3 shows the evolution of true (h1, h2, h3) and estimated (̂h1, ̂h2,̂h3) water
levels using ASKO and FASKO. Their estimations reveal an occurrence of faults until
2500th sampling instant. It is obvious that the fuzzy level estimates outperform the
Kalman level estimates when multiple sequential faults have been happened. In fault
free case, the level estimates are reasonably accurate for both of observers. However
the magnitude of the faults still unknown. Therefore, we will based on the steady
errors between the faults and their estimates.
Figures 4 and 5 present respectively the evolution of the true actuator faults and
their estimates, and the evolution of the estimation errors between the true actuator
faults and their estimates using ASKO and FASKO in case of multiple sequential faults.
The multiple sequential fault estimates shown in Fig. 4 are reasonably accurate
and they are unbiased. Although the two actuator fault estimates are acceptable, the
convergence of fuzzy fault estimates are faster than Kalman fault estimates.
In ﬁgures 5(a) and 5(b), two large peaks are occurred in two different time
intervals. Beyond the two peaks, the estimation errors are close to zero in the fault
free case. From these ﬁgures, we can conﬁrm that the use of FASKO to estimate the
errors provide more satisfactory results than ASKF.
Authenticated
6:04 PM

Observer for fault and state estimation
|
251
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5
6
7
8 x 10−7
sampling time
actuators faults magnitudes
true faults
kalman fault estimates
fuzzy fault estimates
actuator fault1
actuator fault2
Fig. 4. Evolution of the multiple sequential faults.
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5 x 10−7
sampling time
(a) error of the first actuator fault
error magnitude
kalman error fault1 estimate
fuzzy error fault1 estimate
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5
6 x 10−7
sampling time
error magnitude
kalman error fault2 estimate
fuzzy error fault2 estimate 
(b) error of the second actuator fault
Fig. 5. Evolution of estimation error for the multiple sequential faults.
4.2.2 Multiple Simultaneous Faults
The two actuator faults are also applied as a ramp having zero initial condition. They
appears at the same time at 500th sampling instant and their magnitudes reached
0.75e −6 m3/sec and 0.4e −6 m3/sec at 1000th sampling instant, respectively. The
two actuators faults remain constant up to 7000th sampling instant.
Authenticated
6:04 PM

252
|
I. Maalej et al.
1000
2000
3000
4000
5000
6000
0.15
0.2
0.25
0.3
0.35
0.4
sampling time
water level
true level
KF estimate
Fuzzy estimate
level1
level2
level3
Fig. 6. Evolution of water level in case of multiple simultaneous faults.
The state estimates given by ASKO and FASKO are presented in Fig. 6.
Figure 6 shows the evolution of true (h1, h2, h3) and estimated (̂h1, ̂h2, ̂h3) water
levels using ASKO and FASKO. Their estimations reveal an occurrence of faults until
1000th sampling instant. It is obvious that the fuzzy level estimates outperform the
Kalman level estimates when multiple simultaneous faults have been happened. In
fault free case, the level estimates are reasonably accurate for both of observers.
However the magnitude of the faults still unknown. Therefore, we will based on the
steady errors between the faults and their estimates.
Figure 7 and 8 present respectively the evolution of the true actuator faults and
their estimates, and the evolution of the estimation errors between the true actuator
faults and their estimates using ASKO and FASKO in case of multiple sequential
faults.
The multiple simultaneous fault estimates shown in Fig. 7 are reasonably accurate
and they are unbiased. Although the two actuator fault estimates are acceptable, the
convergence of fuzzy fault estimates are faster than Kalman fault estimates.
In ﬁgures 8(a) and 8(b), two large peaks are occurred in the same time interval.
Beyond the two peaks, the estimation errors are close to zero in the fault free case.
From these ﬁgures, we can conﬁrm that the use of FASKO to estimate the errors provide
more satisfactory results than ASKF.
Authenticated
6:04 PM

Observer for fault and state estimation
|
253
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5
6
7
8 x 10−7
sampling time
actuators faults magnitudes
true faults
kalman fault estimates
fuzzy fault estimates
actuator fault1
actuator fault2
Fig. 7. Evolution of the multiple simultaneous faults.
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5
6 x 10−7
sampling time
error magnitude
kalman error fault1 estimate
fuzzy error fault1 estimate
(a) error of the first actuator fault
0
1000
2000
3000
4000
5000
6000
7000
8000
−1
0
1
2
3
4
5
6 x 10−7
sampling time
error magnitude
kalman error fault2 estimate
fuzzy error fault2 estimate
(b) error of the second actuator fault
Fig. 8. Evolution of estimation error for the multiple sequential faults.
5 Conclusion
In this paper, we have treated the problem of fault detection and state estimation. The
cases of more than one fault which can occur on the system actuator were studied.
First at all, the problem is formulated as an augmented state space model. A fuzzy
Authenticated
6:04 PM

254
|
I. Maalej et al.
Kalman observer has been developed for nonlinear systems which are represented
by T-S fuzzy model to generate accurate state estimates in the presence of process
and measurement noises. The proposed observer (FASKO) and the standard Kalman
observer(ASKO) have been compared on the quality of state and fault estimation for a
three tank system. The simulation results for both observers are quite satisfactory to
detect multiple and simultaneous actuator fault. In addition, we infer that the FASKO
presents a good alternative for the ASKO. However, the proposed observer converges
more faster and seems to be less sensible to the noise than Kalman observer.
Bibliography
[1]
R. Isermann. Fault-diagnosis Systems an introduction from fault detection to fault tolerance.
Berlin, Germany, Springer-Verlag, 2006.
[2]
R. Isermann. Model-based Fault-detection and Diagnosis - Status and Application. Annual
Reviews in Control, 29:71–85, 2005
[3]
R.J. Patton. Fault-tolerant control: the 1997 situation. IFAC Symp. SAFEPROCESS’97: Fault
detection, supervision, and safety for technical processes, 2:1033–1055, Hull, UK, 1997.
[4]
P. M. Frank and X. Ding. Survey of robust residual generation and evaluation methods in
observer-based fault detection system. J. of Process Control, 7(6):403–424, 1997.
[5]
H. B. Wang, J. L. Wang and J. Lam. Robust fault detection observer design: iterative LMI
Approache. ASME Journal of Dynamic Systems, Measurement and Control, 129:77–82, 2007.
[6]
D.G. Luenberger. Observing the state of a linear system. IEEE Trans. on Military Electronics,
8(2):74–80, 1964.
[7]
D.G. Luenberger. An Introduction To Observers. IEEE Trans. on Automatic Control,
16(6):596–602, 1971.
[8]
I.S.-H.T-Sai, M.-H.Lin, C.-H.Zheng, S.-M.Guo and L.-S.Shieh. Actuator fault detection and
performance recovery with Kalman ﬁlter based adaptive observer. Int. J. of General System,
36:375–398, 2007.
[9]
G.B. Greg Welch. An Introduction To The Kalman Filter. Copyright 2001 by ACM, Inc, 2001.
[10] G. Jonsson and O.P. Palsson. An application of extended Kalman ﬁltering to heat exchanger
models. ASME, 116:257–264, 1994.
[11] D. Ichalal, B. Marx, J. Ragot and D. Maquin. State estimation of nonlinear systems using
multiple model approach. American Control Conf., ACC, St. Louis, Missouri, USA, June 10–12,
2009.
[12] A. Khedher, K. Benothman, D. Maquin andM. Benrejeb. An approach of faults estimation in
Takagi-Sugeno fuzzy systems. 8th ACSIIEEE Int. Conf. on Computer Systems and Applications,
AICCS 2010, Hammamet, Tunisia, May 2010.
[13] I.Maalej, D. Ben halima, C.Rekik and N.Derbel. Fuzzy Augmented State Kalman Observer for
Fault And State Estimation. In 11th Int. Multi-Conf. on Systems, Signals and Devices, Barcelona,
Spain, February 11–14, 2014.
[14] R. Palm and P. Bergsten. Sliding mode observers for Takagi-Sugeno Fuzzy Systems. 9th IEEE
Int. Conf. on Fuzzy Systems, FUZ’IEEE, 2000.
[15] A. Akhenak, M.Chadli, J. Ragot, and D. Maquin .Sliding mode multiple observer for fault
detection and isolation. 42th IEEE Conf. on Decision and Control, Hawaii, December 9–12,
2003.
Authenticated
6:04 PM

Observer for fault and state estimation
|
255
[16] P. Bergsten, R. Palm and D. Driankov. Observers for Takagi-Sugeno Fuzzy Systems. IEEE Trans.
on Systems, Man and Cybernetics, Part B, 32(1):114–121, February 2002.
[17] D. Ichalal, B. Marx, J. Ragot and D. Maquin. Design of Observers for Takagi-Sugeno Systems
with Immeasurable Premise Variables: an L2 Approach. 17th World Congress, The Int.
Federation of Automatic Control, Seoul, Korea, July 6–11, 2008.
[18] R. J. Patton, J. Chen and C. J. Lopez-Toribio. Fuzzy observer for nonliear dynamic systems. 37th
IEEE Conf. on Decision and Control, Tampa Florida, 1:84–89, (CDC 98).
[19] D.Fragkoulis, G.Roux, B.Dahhou. A global scheme for multiple and simultaneous faults in
system actuators and sensors. 6th Int. Multi-Conference on Systems, Signals and Devices,
Djerba, Tunisie, March 23–26, 2009.
[20] D.Fragkoulis, G.Roux and B.Dahhou. Sensor fault detection and isolation observer based
method for single, multiple and simultaneous faults: application to a waste water treatment
process. Int. Symp. on Advanced Control of Chemical Processes, Istanbul, Turquie , July 12–15,
2009.
[21] S.Abraham Lincon, D.Sivakumar and J.Prakash. State and Fault Parameter Estimation Applied
To Three-Tank Bench Mark Relying On Augmented State Kalman Filter. J. of Automatic Control
and System Engineering (ICGST-ACSE), 7(1), May 2007
[22] P. M. Frank. Fault diagnosis in dynamic system using analytical and knowledge based
redundancy, a survey and some new result. Automatica, 26(3):459–474, 1990.
Biographies
Imen Maalej was born in Sfax, Tunisia, on July 1986. She received her
engeneering diploma in industrial and automatic computing from National
Engineering School of Sfax (ENIS), Sfax University, in June 2010. She
received her master’s diploma in the same ﬁeld in June 2011. She is currently
pursuing her PhD in the ﬁeld of fault detection and isolation and fault
tolerant control system. Her research interests include particulary process
modeling, observers for nonlinear systems and process control.
Donia Ben Halima Abid received her National Engineering Diploma in electric
and Automatic Engineering in 2000, her Master degree in Industrial and
Automatic Computing in 2001 and her PhD in 2009 from the National School
of Engineers of Sfax (ENIS), Tunisia. Currently, she is an assistant professor
at the National School of Engineers of Sfax and she is teaching Linear
Analysis and Control, Logic Systems, Nonlinear Analysis and Control, Robotic
Modeling and Control, discrete analysis and Contro. Dr. Ben Halima is a
Member of the research laboratory on Control and Energy Management. Her
speciﬁc research interests deals with Adaptive Fuzzy Control, Fuzzy
modeling and Identiﬁcation.
Authenticated
6:04 PM

256
|
I. Maalej et al.
Chokri Rekik was born in Sfax (Tunisia) on August 1974. He received the
Engineering Diploma in 1999, the Diplme d’Etudes Approfondies in Auto-
matic control in 2001 and a PhD degree in 2006 all from the Ecole Nationale
d’Ingénieurs de Sfax (ENIS). He has been an Assistant Professor in the Elec-
trical Engineering Department of the Ecole Nationale d’Ingénieurs de Sfax in
2006. Currently,he is a full Professor of Automatic Control at the Ecole
Nationale d’Ingénieurs de Sfax and carrying his research activities in Control
and Energy Management Lab (CEM Lab) in ENIS.His research interests is:
advanced control of complex nonlinear systems, robotic control.
Nabil Derbel was born in Sfax (Tunisia) in April 1962. He received the
engineering Diploma from the Ecole Nationale d’Ingénieurs de Sfax in 1986,
the Diplôme d’Etudes Approfondies in Automatic control from the Institut
National des Sciences Appliquées de Toulouse in 1986, the Doctorat
d’Université degree from the Laboratoire d’Automatique et d’Analyse des
Systèmes de Toulouse in 1989, and the Doctorat d’Etat degree from the Ecole
Nationale d’Ingénieurs de Tunis. He joined the Tunisian University in 1989,
where he held different position involved in research and education.
Currently, he is a full Professor of Automatic Control at the Ecole Nationale
d’Ingénieurs de Sfax. He is an IEEE Senior member. His current interests
include: Optimal Control, Complex Systems, Fuzzy Logic, Neural Networks,
Genetic Algorithm. He is the author and the co-author of more than 50
papers published in international Journals and of more than 300 papers
published in international conferences.
Authenticated
6:04 PM

