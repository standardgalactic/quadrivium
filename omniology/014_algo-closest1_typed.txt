Divide	  and	  
Conquer	  
Closest	  Pair	  I	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
The	  Closest	  Pair	  Problem	  
Input	  :	  a	  set	  
	  
	  	  	  of	  n	  points	  in	  the	  plane	  R2.	  
NotaAon	  :
	  	  	  	  	  	  	  	  	  	  	  =	  Euclidean	  distance	  
So	  if	  
Output	  :	  a	  pair
	  
	  	  of	  disAnct	  points	  that	  
minimize	  d(p,q)	  over	  p,q	  in	  the	  set	  P	   	  	  	  	  

Tim	  Roughgarden	  
AssumpAon	  :	  (for	  convenience)	  all	  points	  have	  disAnct	  	  
x-­‐coordinates,	  disAnct	  y-­‐coordinates.	  
Brute-­‐force	  search	  :	  takes
	  	  	  	  Ame.	  
1-­‐D	  Version	  of	  Closest	  Pair	  :	  
1.  Sort	  points	  (O(nlog(n))	  Ame)	  
2.  Return	  closest	  pair	  of	  adjacent	  points	  (O(n)	  Ame)	  
Goal	  :	  O(nlog(n))	  Ame	  algorithm	  for	  2-­‐D	  version.	  
IniAal	  ObservaAons	  

Tim	  Roughgarden	  
High-­‐Level	  Approach	  
1.  Make	  copies	  of	  points	  sorted	  by	  	  	  	  	  	  
x-­‐coordinate	  (	  	  	  	  	  )	  	  and	  by	  y-­‐
coordinate	  (	  	  	  	  	  )
	  	  
	  [O(nlog(n))	  Ame]	  
	  (but	  this	  is	  not	  enough!)	  
2. 	  Use	  Divide+Conquer	  	  	  

Tim	  Roughgarden	  
The	  Divide	  and	  Conquer	  Paradigm	  
1. DIVIDE	  into	  smaller	  subproblems.	  
2. CONQUER	  subproblems	  recursively.	  
3. COMBINE	  soluAons	  of	  subproblems	  into	  one	  for	  
the	  original	  problem.	  

Tim	  Roughgarden	  
1.  Let	  	  Q	  =	  le]	  half	  of	  P,	  	  R	  =	  right	  half	  of	  P.	  	  Form	  	   	  	  	  	  
Qx,	  Qy,	  Rx,	  Ry	  	  [takes	  O(n)	  Ame]	  
2.  (p1,q1)	  =	  ClosestPair(Qx,Qy)	  
3.  (p2,q2)	  =	  ClosestPair(Rx,Ry)	  
4.  (p3,q3)	  =	  ClosestSplitPair(Px,Py)	  
5.  Return	  best	  of	  (p1,q1),	  (p2,q2),	  (p3,q3)	  

Tem
ver
Suppose	  we	  can	  correctly	  implement	  the	  ClosestSplitPair	  
subrouAne	  in	  O(n)	  Ame.	  What	  will	  be	  the	  overall	  running	  Ame	  
of	  the	  Closest	  Pair	  algorithm	  ?	  (Choose	  the	  smallest	  upper	  
bound	  that	  applies.)	  
Key	  Idea	  :	  only	  need	  to	  bother	  compuAng	  
the	  closest	  split	  pair	  in	  “unlucky	  case”	  where	  
its	  distance	  is	  less	  than	  d(p1,q1)	  
and	  d(p2,q2).	  

Tim	  Roughgarden	  
1.  Let	  	  Q	  =	  le]	  half	  of	  P,	  	  R	  =	  right	  half	  of	  P.	  	  Form	  	   	  	  	  	  
Qx,	  Qy,	  Rx,	  Ry	  	  [takes	  O(n)	  Ame]	  
2.  (p1,q1)	  =	  ClosestPair(Qx,Qy)	  
3.  (p2,q2)	  =	  ClosestPair(Rx,Ry)	  
4.  Let	  	  
5.  (p3,q3)	  =	  ClosestSplitPair(Px,Py,δ)	  
6.  Return	  best	  of	  (p1,q1),	  (p2,q2),	  (p3,q3)	  
Requirements	  
1.  O(n)	  Ame	  
2.  Correct	  
whenever	  
closest	  pair	  of	  
P	  is	  a	  split	  
pair	  

Tim	  Roughgarden	  
Let	  	  	  	  	  	  	  =	  biggest	  x-­‐coordinate	  in	  le]	  of	  P.	  	  	  	  (O(1)	  Ame)	  
Let	  Sy	  =	  points	  of	  P	  with	  x-­‐coordinate	  in	  	  
Sorted	  by	  y-­‐coordinate	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  (O(n)	  Ame)	  
IniAalize	  best	  	  =	  	  	  	  ,	  best	  pair	  =	  NULL	  
For	  	  	  i	  =	  1	  	  to	  |Sy|	  -­‐	  7	  
	  For	  	  	  j	  =	  1	  to	  7	  
	  	  	  	  	  	  	  	  Let	  	  	  	  p,q	  =	  ith	  ,	  (i+j)th	  points	  of	  Sy	  
	  	  	  	  	  	  	  	  If	  	  	  d(p,q)	  	  <	  best	  
	  
	  best	  pair	  =	  (p,q),	  	  	  best	  =	  d(p,q)	  
At	  end	  return	  
best	  pair	  

Tim	  Roughgarden	  
Correctness	  Claim	  
Room has one queen bed with a shared hallway bath. sink is in the bedroom, bath and shower independent 
in the hallway. 
Desk. Voice mail. Wireless Internet access (surcharge). Dial-up Internet access (surcharge). Cable/satellite 
TV. Premium TV channels. Hair dryer. Iron/ironing board. Ceiling fan. Window opens. 
Claim	  :	  Let
	  
	  	  	  	  	  	  be	  a	  split	  pair	  with	  d(p,q)	  <	  
Then:	   	  (A)	  p	  and	  q	  are	  members	  of	  Sy	  
	  (B)	  p	  and	  q	  are	  at	  most	  7	  posiAons	  apart	  in	  Sy.	  
Corollary1	  	  :	  If	  the	  closest	  pair	  of	  P	  is	  a	  split	  pair,	  then	  the	  
ClosestSplitPair	  ﬁnds	  it.	  
Corollary2	  	  ClosestPair	  is	  correct,	  and	  runs	  in	  O(nlog(n))	  Ame.	  
Assuming	  
claim	  is	  true!	  

