
Schaum's Outline of Theory and Problems of 
Digital Signal Processing
Monson H. Hayes
Professor of Electrical and Computer Engineering 
Georgia Institute of Technology
SCHAUM'S OUTLINE SERIES
Start of Citation[PU]McGraw Hill[/PU][DP]1999[/DP]End of Citation
  

MONSON H. HAYES is a Professor of Electrical and Computer Engineering at the Georgia 
Institute of Technology in Atlanta, Georgia. He received his B.A. degree in Physics from the 
University of California, Berkeley, and his M.S.E.E. and Sc.D. degrees in Electrical Engineering 
and Computer Science from M.I.T. His research interests are in digital signal processing with 
applications in image and video processing. He has contributed more than 100 articles to journals 
and conference proceedings, and is the author of the textbook Statistical Digital Signal Processing 
and Modeling, John Wiley & Sons, 1996. He received the IEEE Senior Award for the author of a 
paper of exceptional merit from the ASSP Society of the IEEE in 1983, the Presidential Young 
Investigator Award in 1984, and was elected to the grade of Fellow of the IEEE in 1992 for his 
"contributions to signal modeling including the development of algorithms for signal restoration 
from Fourier transform phase or magnitude."
Schaum's Outline of Theory and Problems of
DIGITAL SIGNAL PROCESSING
Copyright © 1999 by The McGraw-Hill Companies, Inc. All rights reserved. Printed in the United 
States of America. Except as permitted under the Copyright Act of 1976, no part of this publication 
may be reproduced or distributed in any forms or by any means, or stored in a data base or retrieval 
system, without the prior written permission of the publisher.
2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 PRS PRS 9 0 2 10 9
ISBN 0–07–027389–8
Sponsoring Editor: Barbara Gilson 
Production Supervisor: Pamela Pelton 
Editing Supervisor: Maureen B. Walker
Library of Congress Cataloging-in-Publication Data
Hayes, M. H. (Monson H.), date. 
Schaum's outline of theory and problems of digital signal 
processing / Monson H. Hayes. 
p. cm. — (Schaum's outline series) 
Includes index. 
ISBN 0–07–027389–8 
1. Signal processing—Digital techniques—Problems, exercises, 
etc. 2. Signal processing—Digital techniques—Outlines, syllabi, 
etc. I. Title. II. Title: Theory and problems of digital signal 
processing. 
TK5102.H39  1999 
621.382'2—dc21                                                   98–43324 
                                                                                   CIP

For Sandy
Start of Citation[PU]McGraw Hill[/PU][DP]1999[/DP]End of Citation
  


Preface
Digital signal processing (DSP) is concerned with the representation of signals in digital form, and 
with the processing of these signals and the information that they carry. Although DSP, as we know 
it today, began to flourish in the 1960's, some of the important and powerful processing techniques 
that are in use today may be traced back to numerical algorithms that were proposed and studied 
centuries ago. Since the early 1970's, when the first DSP chips were introduced, the field of digital 
signal processing has evolved dramatically. With a tremendously rapid increase in the speed of DSP 
processors, along with a corresponding increase in their sophistication and computational power, 
digital signal processing has become an integral part of many commercial products and applications, 
and is becoming a commonplace term.
This book is concerned with the fundamentals of digital signal processing, and there are two ways 
that the reader may use this book to learn about DSP. First, it may be used as a supplement to any 
one of a number of excellent DSP textbooks by providing the reader with a rich source of worked 
problems and examples. Alternatively, it may be used as a self-study guide to DSP, using the method 
of learning by example. With either approach, this book has been written with the goal of providing 
the reader with a broad range of problems having different levels of difficulty. In addition to 
problems that may be considered drill, the reader will find more challenging problems that require 
some creativity in their solution, as well as problems that explore practical applications such as 
computing the payments on a home mortgage. When possible, a problem is worked in several 
different ways, or alternative methods of solution are suggested.
The nine chapters in this book cover what is typically considered to be the core material for an 
introductory course in DSP. The first chapter introduces the basics of digital signal processing, and 
lays the foundation for the material in the following chapters. The topics covered in this chapter 
include the description and characterization of discrete-type signals and systems, convolution, and 
linear constant coefficient difference equations. The second chapter considers the represention of 
discrete-time signals in the frequency domain. Specifically, we introduce the discrete-time Fourier 
transform (DTFT), develop a number of DTFT properties, and see how the DTFT may be used to 
solve difference equations and perform convolutions. Chapter 3 covers the important issues 
associated with sampling continuous-time signals. Of primary importance in this chapter is the 
sampling theorem, and the notion of aliasing. In Chapter 4, the z-transform is developed, which is 
the discrete-time equivalent of the Laplace transform for continuous-time signals. Then, in Chapter 
5, we look at the system function, which is the z-transform of the unit sample response of a linear 
shift-invariant system, and introduce a number of different types of systems, such as allpass, linear 
phase, and minimum phase filters, and feedback systems.
The next two chapters are concerned with the Discrete Fourier Transform (DFT). In Chapter 6, we 
introduce the DFT, and develop a number of DFT properties. The key idea in this chapter is that 
multiplying the DFTs of two sequences corresponds to circular convolution in the time domain. 
Then, in Chapter 7, we develop a number of efficient algorithms for computing the DFT of a finite-
length sequence. These algorithms are referred to, generically, as fast Fourier transforms (FFTs). 
Finally, the last two chapters consider the design and implementation of discrete-time systems. In 
Chapter 8 we look at different ways to implement a linear shift-invariant discrete-time system, and 
look at the sensitivity of these implementations to filter coefficient quantization. In addition, we

analyze the propagation of round-off noise in fixed-point implementations of these systems. Then, in 
Chapter 9 we look at techniques for designing FIR and IIR linear shiftinvariant filters. Although the 
primary focus is on the design of low-pass filters, techniques for designing other frequency selective 
filters, such as high-pass, bandpass, and bandstop filters are also considered.
It is hoped that this book will be a valuable tool in learning DSP. Feedback and comments are 
welcomed through the web site for this book, which may be found at
http://www.ee.gatech.edu/users/mhayes/schaum
Also available at this site will be important information, such as corrections or amplifications to 
problems in this book, additional reading and problems, and reader comments.
Start of Citation[PU]McGraw Hill[/PU][DP]1999[/DP]End of Citation
  

Contents
Chapter 1. Signals and Systems
1
1.1 Introduction
1
1.2 Discrete-Time Signals
1
1.2.1 Complex Sequences
2
1.2.2 Some Fundamental Sequences
2
1.2.3 Signal Duration
3
1.2.4 Periodic and Aperiodic Sequences
3
1.2.5 Symmetric Sequences
4
1.2.6 Signal Manipulations
4
1.2.7 Signal Decomposition
6
1.3 Discrete-Time Systems
7
1.3.1 Systems Properties
7
1.4 Convolution
11
1.4.1 Convolution Properties
11
1.4.2 Performing Convolutions
12
1.5 Difference Equations
15
Solved Problems
18
Chapter 2. Fourier Analysis
55
2.1 Introduction
55
2.2 Frequency Response
55
2.3 Filters
58
2.4 Interconnection of Systems
59
2.5 The Discrete-Time Fourier Transform
61
2.6 DTFT Properties
62
2.7 Applications
64
2.7.1 LSI Systems and LCCDEs
64
2.7.2 Performing Convolutions
65
2.7.3 Solving Difference Equations
66
2.7.4 Inverse Systems
66
Solved Problems
67
Chapter 3. Sampling
101
3.1 Introduction
101
3.2 Analog-to-Digital Conversion
101
3.2.1 Periodic Sampling
101
3.2.2 Quantization and Encoding
104
3.3 Digital-to-Analog Conversion
106
3.4 Discrete-Time Processing of Analog Signals
108
3.5 Sample Rate Conversion
110
3.5.1 Sample Rate Reduction by an Integer Factor
110
3.5.2 Sample Rate Increase by an Integer Factor
111
3.5.3 Sample Rate Conversion by a Rational Factor
113
Solved Problems
114
Chapter 4. The Z-Transform
142
4.1 Introduction
142
4.2 Definition of the z-Transform
142
4.3 Properties
146
vii

4.4 The Inverse z-Transform
149
4.4.1 Partial Fraction Expansion
149
4.4.2 Power Series
150
4.4.3 Contour Integration
151
4.5 The One-Sided z-Transform
151
Solved Problems
152
Chapter 5. Transform Analysis of Systems
183
5.1 Introduction
183
5.2 System Function
183
5.2.1 Stability and Causality
184
5.2.2 Inverse Systems
186
5.2.3 Unit Sample Response for Rational System Functions
187
5.2.4 Frequency Response for Rational System Functions
188
5.3 Systems with Linear Phase
189
5.4 Allpass Filters
193
5.5 Minimum Phase Systems
194
5.6 Feedback Systems
195
Solved Problems
196
Chapter 6. The DFT
223
6.1 Introduction
223
6.2 Discrete Fourier Series
223
6.3 Discrete Fourier Transform
226
6.4 DFT Properties
227
6.5 Sampling the DTFT
231
6.6 Linear Convolution Using the DFT
232
Solved Problems
235
Chapter 7. The Fast Fourier Transform
262
7.1 Introduction
262
7.2 Radix-2 FFT Algorithms
262
7.2.1 Decimation-in-Time FFT
262
7.2.2 Decimation-in-Frequency FFT
266
7.3 FFT Algorithms for Composite N
267
7.4 Prime Factor FFT
271
Solved Problems
273
Chapter 8. Implementation of Discrete-Time Systems
287
8.1 Introduction
287
8.2 Digital Networks
287
8.3 Structures for FIR Systems
289
8.3.1 Direct Form
289
8.3.2 Cascade Form
289
8.3.3 Linear Phase Filters
289
8.3.4 Frequency Sampling
291
8.4 Structures for IIR Systems
291
8.4.1 Direct Form
292
8.4.2 Cascade Form
294
8.4.3 Parallel Structure
295
8.4.4 Transposed Structures
296
8.4.5 Allpass Filters
296
8.5 Lattice Filters
298
8.5.1 FIR Lattice Filters
298
8.5.2 All-Pole Lattice Filters
300
viii

8.5.3 IIR Lattice Filters
301
8.6 Finite Word-Length Effects
302
8.6.1 Binary Representation of Numbers
302
8.6.2 Quantization of Filter Coefficients
304
8.6.3 Round-Off Noise
306
8.6.4 Pairing and Ordering
309
8.6.5 Overflow
309
Solved Problems
310
Chapter 9. Filter Design
358
9.1 Introduction
358
9.2 Filter Specifications
358
9.3 FIR Filter Design
359
9.3.1 Linear Phase FIR Design Using Windows
359
9.3.2 Frequency Sampling Filter Design
363
9.3.3 Equiripple Linear Phase Filters
363
9.4 IIR Filter Design
366
9.4.1 Analog Low-Pass Filter Prototypes
367
9.4.2 Design of IIR Filters from Analog Filters
373
9.4.3 Frequency Transformations
376
9.5 Filter Design Based on a Least Squares Approach
376
9.5.1 Pade Approximation
377
9.5.2 Prony's Method
378
9.5.3 FIR Least-Squares Inverse
379
Solved Problems
380
Index
429
ix

Chapter 1 
Signals and Systems 
1.1 INTRODUCTION 
In this chapter we begin our study of digital signal processing by developing the notion of a discrete-time signal 
and a discrete-time system. We will concentrate on solving problems related to signal representations, signal 
manipulations, properties of signals, system classification, and system properties. First, in Sec. 1.2 we define 
precisely what is meant by a discrete-time signal and then develop some basic, yet important, operations that 
may be performed on these signals. Then, in Sec. 1.3 we consider discrete-time systems. Of special importance 
will be the notions of linearity, shift-invariance, causality, stability, and invertibility. It will be shown that for 
systems that are linear and shift-invariant, the input and output are related by a convolution sum. Properties of 
the convolution sum and methods for performing convolutions are then discussed in Sec. 1.4. Finally, in Sec. 1.5 
we look at discrete-time systems that are described in terms of a difference equation. 
1.2 DISCRETE-TIME SIGNALS 
A discrete-time signal is an indexed sequence of real or complex numbers. Thus, a discrete-time signal is a 
function of an integer-valued variable, n, that is denoted by x(n). Although the independent variable n need not 
necessarily represent "time" (n may, for example, correspond to a spatial coordinate or distance), x(n) is generally 
referred to as a function of time. A discrete-time signal is undefined for noninteger values of n. Therefore, a 
real-valued signal x(n) will be represented graphically in the form of a lollipop plot as shown in Fig. 1- I. In 
A 
Fig. 1-1. The graphical representation of a discrete-time signal x(n). 
some problems and applications it is convenient to view x(n) as a vector. Thus, the sequence values x(0) to 
x(N - 1) may often be considered to be the elements of a column vector as follows: 
Discrete-time signals are often derived by sampling a continuous-time signal, such as speech, with an analog- 
to-digital (AID) converter.' For example, a continuous-time signal x,(t) that is sampled at a rate of fs = l/Ts 
samples per second produces the sampled signal x(n), which is related to xa(t) as follows: 
Not all discrete-time signals, however, are obtained in this manner. Some signals may be considered to be naturally 
occurring discrete-time sequences because there is no physical analog-to-digital converter that is converting an 
Analog-to-digital conversion will be discussed in Chap. 3. 
1 

2 
SIGNALS AND SYSTEMS 
[CHAP. 1 
analog signal into a discrete-time signal. Examples of signals that fall into this category include daily stock 
market prices, population statistics, warehouse inventories, and the Wolfer sunspot  number^.^ 
1.2.1 
Complex Sequences 
In general, a discrete-time signal may be complex-valued. In fact, in a number of important applications such as 
digital communications, complex signals arise naturally. A complex signal may be expressed either in terms of 
its real and imaginary parts, 
or in polar form in terms of its magnitude and phase, 
The magnitude may be derived from the real and imaginary parts as follows: 
whereas the phase may be found using 
ImMn)) 
arg{z(n)) = tan-' - 
Re(z(n)) 
If z(n) is a complex sequence, the complex conjugate, denoted by z*(n), is formed by changing the sign on the 
imaginary part of z(n): 
1.2.2 Some Fundamental Sequences 
Although most information-bearing signals of practical interest are complicated functions of time, there are three 
simple, yet important, discrete-time signals that are frequently used in the representation and description of more 
complicated signals. These are the unit sample, the unit step, and the exponential. The unit sample, denoted by 
S(n), is defined by 
1 
n = O  
S(n) = 0 
otherwise 
and plays the same role in discrete-time signal processing that the unit impulse plays in continuous-time signal 
processing. The unit step, denoted by u(n), is defined by 
u(n) = 1 
n 1 0  
0 
otherwise 
and is related to the unit sample by 
n 
Similarly, a unit sample may be written as a difference of two steps: 
2 ~ h e  
Wolfer sunspot number R was introduced by Rudolf Wolf in 1848 as a measure of sunspot activity. Daily records are available back 
to 1818 and estimates of monthly means have been made since 1749. There has been much interest in studying the correlation between 
sunspot activity and terrestrial phenomena such as meteorological data and climatic variations. 

CHAP. 11 
SIGNALS AND SYSTEMS 
Finally, an exponential sequence is defined by 
where a may be a real or complex number. Of particular interest is the exponential sequence that is formed when 
a = e ~ m ,  
where q, 
is a real number. In this case, x(n) is a complex exponential 
As we will see in the next chapter, complex exponentials are useful in the Fourier decomposition of signals. 
1.2.3 Signal Duration 
Discrete-time signals may be conveniently classified in terms of their duration or extent. For example, a discrete- 
time sequence is said to be a finite-length sequence if it is equal to zero for all values of n outside a finite 
interval [N1, N2]. Signals that are not finite in length, such as the unit step and the complex exponential, are said 
to be infinite-length sequences. Infinite-length sequences may further be classified as either being right-sided, 
left-sided, or two-sided. A right-sided sequence is any infinite-length sequence that is equal to zero for all values 
of n < no for some integer no. The unit step is an example of a right-sided sequence. Similarly, an infinite-length 
sequence x(n) is said to be lefr-sided if, for some integer no, x(n) = 0 for all n > no. An example of a left-sided 
sequence is 
which is a time-reversed and delayed unit step. An infinite-length signal that is neither right-sided nor left-sided, 
such as the complex exponential, is referred to as a two-sided sequence. 
1.2.4 Periodic and Aperiodic Sequences 
A discrete-time signal may always be classified as either being periodic or aperiodic. A signal x(n) is said to be 
periodic if, for some positive real integer N ,  
for all n. This is equivalent to saying that the sequence repeats itself every N samples. If a signal is periodic with 
period N, it is also periodic with period 2N, period 3N, and all other integer multiples of N. The fundamental 
period, which we will denote by N, is the smallest positive integer for which Eq. (I .I) is satisfied. If Eq. (1 .I) 
is not satisfied for any integer N ,  x(n) is said to be an aperiodic signal. 
EXAMPLE 1.2.1 The signals 
and 
xZ(n) = cos(n2) 
are not periodic, whereas the signal 
x3(n) = e ~ ~ ' ' l '  
is periodic and has a fundamental period of N = 16. 
If xl (n) is a sequence that is periodic with a period N1, and x2(n) is another sequence that is periodic with a 
period N2, the sum 
x(n) = x ~ ( n )  + xdn) 
will always be periodic and the fundamental period is 

4 
SIGNALS AND SYSTEMS 
[CHAP. 1 
where gcd(NI, N2) means the greatest common divisor of N1 and N2. The same is true for the product; that is, 
will be periodic with a period N given by Eq. (1.2). However, the fundamental period may be smaller. 
Given any sequence x(n), a periodic signal may always be formed by replicating x(n) as follows: 
where N is a positive integer. In this case, y(n) will be periodic with period N. 
1.2.5 Symmehic Sequences 
A discrete-time signal will often possess some form of symmetry that may be exploited in solving problems. 
Two symmetries of interest are as follows: 
Definition: A real-valued signal is said to be even if, for all n, 
x(n) = x(-n) 
whereas a signal is said to be odd if, for all n, 
x(n) = -x(-n) 
Any signal x(n) may be decomposed into a sum of its even part, x,(n), and its odd part, x,(n), as follows: 
x(n> = x d n )  + x,(n> 
(1.3) 
To find the even part of x ( n )  we form the sum 
x,(n) = (x(n) + x(-n)) 
whereas to find the odd part we take the difference 
x,(n) = i ( x ( n )  - x(-n)) 
For complex sequences the symmetries of interest are slightly different. 
Definition: A complex signal is said to be conjugate symmetric3 if, for all n, 
x(n) = x*(-n) 
and a signal is said to be conjugate antisymmetric if, for all n, 
x(n) = -x*(-n) 
Any complex signal may always be decomposed into a sum of a conjugate symmetric signal and a conjugate 
antisymmeuic signal. 
1 J.6 Signal Manipulations 
In our study of discrete-time signals and systems we will be concerned with the manipulation of signals. These 
manipulations are generally compositions of a few basic signal transformations. These transformations may be 
classified either as those that are transformations of the independent variable n or those that are transformations 
of the amplitude of x(n) (i.e., the dependent variable). In the following two subsections we will look briefly at 
these two classes of transformations and list those that are most commonly found in applications. 
3~ sequence that is conjugate symmetric is sometimes said to be hermitian. 

CHAP. 11 
SIGNALS AND SYSTEMS 
Transformations of the Independent Variable 
Sequences are often altered and manipulated by modifying the index n as follows: 
where f (n) is some function of n. If, for some value of n, f (n) is not an integer, y(n) = x( f (n)) is undefined. 
Determining the effect of modifying the index n may always be accomplished using a simple tabular approach 
of listing, for each value of n, the value of f (n) and then setting y(n) = x( f (n)). However, for many index 
transformations this is not necessary, and the sequence may be determined or plotted directly. The most common 
transformations include shifting, reversal, and scaling, which are defined below. 
Shifting This is the transformation defined by f (n) = n - no. If y(n) = x(n - no), x(n) is shifted to 
the right by no samples if no is positive (this is referred to as a delay), and it is shifted to the left by no 
samples if no is negative (referred to as an advance). 
Reversal This transformation is given by f (n) = - n and simply involves "flipping" the signal x(n) 
with respect to the index n. 
Time Scaling This transformation is defined by f (n) = Mn or f (n) = n/ N where M and N are 
positive integers. In the case of f (n) = Mn, the sequence x(Mn) is formed by taking every Mth sample 
of x(n) (this operation is known as down-sampling). With f (n) = n/N the sequence y(n) =x( f (n)) is 
defined as follows: 
(0 
' 
' 
otherwise 
(this operation is known as up-sampling). 
Examples of shifting, reversing, and time scaling a signal are illustrated in Fig. 1-2. 
(a) A discrete-time signal. 
(h) A delay by no = 2. 
(c) Time reversal. 
- ;;;, - $ 
$ - = 
= = 
;(;/2; 
= , = , = , = 
= 
n 
n 
-2 
-1 
1
2
3
4
5
6
7
8
 
-2 
-1 
1
2
3
4
5
6
7
8
9
1
0
1
1
 
(d) Down-sampling by a factor of 2. 
(e) Up-sampling by a factor of 2. 
Fig. 1-2. Illustration of the operations of shifting, reversal, and scaling of the independent variable n. 

6 
SlGNALS AND SYSTEMS 
[CHAP. 1 
Shifting, reversal, and time-scaling operations are order-dependent. Therefore, one needs to be careful in 
evaluating compositions of these operations. For example, Fig. 1-3 shows two systems, one that consists of a 
delay followed by a reversal and one that is a reversal followed by a delay. As indicated. the outputs of these 
two systems are not the same. 
Addition, Multiplication, and Scaling 
x(-n - no) 
L 
The most common types of amplitude transformations are addition, multiplication, and scaling. Performing these 
operations is straightforward and involves only pointwise operations on the signal. 
(a) A delay Tn, followed by a time-reversal Tr . 
x(n) 
- 
x(n) 
Addition The sum of two signals 
- 
Trio 
x(n - no) 
- - 
(b) A time-reversal Tr followed by a delay T",, 
Fig. 1-3. Example illustrating that the operations of delay and reversal do 
not commute. 
x(-n) 
T, 
is formed by the pointwise addition of the signal values. 
Multiplication The multiplication of two signals 
Tr 
is formed by the pointwise product of the signal values. 
Tn" 
Scaling Amplitude scaling of a signal x(n) by a constant c is accomplished by multiplying every 
signal value by c: 
y ( n ) = c x ( n )  
- o o < n < o o  
This operation may also be considered to be the product of two signals, x(n) and f ( n )  = c. 
x(-n + no) 
L 
1.2.7 Signal Decomposition 
The unit sample may be used to decompose an arbitrary signal x(n) into a sum of weighted and shifted unit 
samples as follows: 
This decomposition may be written concisely as 
where each term in the sum, x(k)S(n - k), is a signal that has an amplitude of x(k) at time n = k and a value of zero 
for all other values of n. This decomposition is the discrete version of the svting property for continuous-time 
signals and is used in the derivation of the convolution sum. 

CHAP. 11 
SIGNALS AND SYSTEMS 
1.3 DISCRETE-TIME SYSTEMS 
A discrete-time system is a mathematical operator or mapping that transforms one signal (the input) into another 
signal (the output) by means of a fixed set of rules or operations. The notation T [ - ]  is used to represent a general 
system as shown in Fig. 1-4, in which an input signal x(n) is transformed into an output signal y(n) through 
the transformation T [ . ] .  The input-output properties of a system may be specified in any one of a number of 
different ways. The relationship between the input and output, for example, may be expressed in terms of a 
concise mathematical rule or function such as 
It is also possible, however, to describe a system in terms of an algorithm that provides a sequence of instructions 
or operations that is to be applied to the input signal, such as 
yl(n) = 0.5yl(n - 1) + 0.25x(n) 
y2(n) = 0.25y2(n - 1) + 0.5x(n) 
ys(n) = 0.4y3(n - 1) + 0.5x(n) 
y(n) = Y I ( ~ )  
+ y2(n) + ydn) 
In some cases, a system may conveniently be specified in terms of a table that defines the set of all possible 
input-output signal pairs of interest. 
Fig. 1-4. The representation of a discrete-time system as a trans- 
formation T [ . ]  that maps an input signal x(n) into an output 
signal y(n). 
Discrete-time systems may be classified in terms of the properties that they possess. The most common 
properties of interest include linearity, shift-invariance, causality, stability, and invertibility. These properties, 
along with a few others, are described in the following section. 
1 .XI 
System Properties 
Memoryless System 
The first property is concerned with whether or not a system has memory. 
Definition: A system is said to be memoryless if the output at any time n = no depends only 
on the input at time n = no. 
In other words, a system is memoryless if, for any no, we are able to determine the value of y(no) given only the 
value of x(no). 
EXAMPLE 1.3.1 The system 
y(n) = x 2 b )  
is memoryless because y(no) depends only on the value of x(n) at time no. The system 
y(n) = x(n) + x(n - I) 
on the other hand, is not memoryless because the output at time no depends on the value of the input both at time no and at 
time no - 1. 

8 
SIGNALS AND SYSTEMS 
[CHAP. 1 
Additivity 
An additive system is one for which the response to a sum of inputs is equal to the sum of the inputs individually. 
Thus, 
Definition: A system is said to be additive if 
T[xl(n) + x2(n)I = T [ x ~ ( n ) l  + T[x2(n)l 
for any signals X I  (n) and x2(n). 
Homogeneity 
A system is said to be homogeneous if scaling the input by a constant results in a scaling of the output by the 
same amount. Specifically, 
Definition: A system is said to be homogeneous if 
T [cx(n)] = cT [x(n)] 
for any complex constant c and for any input sequence x(n). 
EXAMPLE 1.3.2 The system defined by 
x2(n) 
~ ( n )  
= - 
x(n - 1 )  
This system is, however, homogeneous because, for an input cx(n) the output is 
On the other hand, the system defined by the equation 
y(n) = x(n) + x'(n - 1) 
is additive because 
[ x ~ ( n ) + x ~ ( n ) I  
+ [ X I @  - 1) + x A n  - Ill* = [xl(n) + x f ( n  - I ) ]  + [xp(n) +x;(n - l ) ]  
However, this system is not homogeneous because the response to cx(n) is 
T [ c x ( n ) ]  = cx(n) + c*x*(n - 1) 
which is not the same as 
cT[x(n)] = cx(n) + cx*(n - 1) 
Linear Systems 
A system that is both additive and homogeneous is said to be linear. Thus, 
Definition: A system is said to be linear if 
T [ a m ( n )  + a m ( n ) l  = a l T [ x ~ ( n ) l +  
azT[xAn)l 
for any two inputs xl(n) and x2(n) and for any complex constants a1 and a2. 

CHAP. 11 
SIGNALS AND SYSTEMS 
9 
Linearity greatly simplifies the evaluation of the response of a system to a given input. For example, using the 
decomposition for x(n) given in Eq. (1.4), and using the additivity property, it follows that the output y(n) may 
be written as 
y ( n ) = T [ x ( n ) ] = T  
x(k)S(n-k) = 2 T[x(k)S(n-k)] 
k=-m 
1 k=-m 
Because the coefficients x(k) are constants, we may use the homogeneity property to write 
m 
03 
~ ( n )  
= 
T[x(k)G(n - k)l = 
x(k)T[S(n - k)] 
k=-ca 
k=-m 
If we define hk(n) to be the response of the system to a unit sample at time n = k ,  
hk(n) = T [S(n - k)] 
Eq. (1.5) becomes 
m 
which is known as the superposition summation. 
Shift-Invariance 
If a system has the property that a shift (delay) in the input by no results in a shift in the output by no, the system 
is said to be shift-invariant. More formally, 
Definition: Let y(n) be the response of a system to an arbitrary input x(n). The system is 
said to be shift-invariant if, for any delay no, the response to x(n - no) is y(n - no). A system 
that is not shift-invariant is said to be shift-~arying.~ 
In effect, a system will be shift-invariant if its properties or characteristics do not change with time. To test for 
shift-invariance one needs to compare y(n - no) to T [ x ( n  - no)]. If they are the same for any input x(n) and for 
all shifts no, the system is shift-invariant. 
EXAMPLE 1.3.3 The system defined by 
y(n) = x2(n) 
is shift-invariant, which may be shown as follows. If y(n) = x2(n) is the response of the system to x(n), the response of the 
system to 
x'(n) = x(n - no) 
Because y'(n) = y(n - no), the system is shift-invariant. However, the system described by the equation 
is shift-varying. To see this, note that the system's response to the input x(n) = S(n) is 
whereas the response to x(n - 1) = S(n - 1 )  is 
Because this is not the same as y(n - 1) = 2S(n - I ) ,  the system is shift-varying. 
4 ~ o m e  
authors refer to this property as rime-invorionce. However. because n does not necessarily represent "time:' shift-invariance is a bit 
more general. 

10 
SIGNALS AND SYSTEMS 
[CHAP. 1 
Linear Shin-Invariant Systems 
A system that is both linear and shift-invariant is referred to as a linear shifi-invariant (LSI) system. If h(n) is 
the response of an LSI system to the unit sample 6(n), its response to 6(n - k )  will be h(n - k). Therefore, in 
the superposition sum given in Eq. (1.6), 
hk(n) = h(n - k) 
and it follows that 
M 
y(n) = C *(k)h(n - k) 
Equation ( 1 . 9 ,  which is known as the convolution sum, is written as 
where * indicates the convolution operator. The sequence h(n), referred to as the unit sample response, provides 
a complete characterization of an LSI system. In other words, the response of the system to any input x(n) may 
be found once h(n) is known. 
Causality 
A system property that is important for real-time applications is causality, which is defined as follows: 
Definition: A system is said to be causal if, for any no, the response of the system at time 
no depends only on the input up to time n = no. 
For a causal system, changes in the output cannot precede changes in the input. Thus, if xl (n) = x2(n) for 
n 5 no, yl(n) must be equal to y2(n) for n 5 no. Causal systems are therefore referred to as nonanticipatory. 
An LSI system will be causal if and only if h(n) is equal to zero for n < 0. 
EXAMPLE 1.3.4 The system described by the equation y (n) = x(n) +x(n - 1 )  is causal because the value of the output at 
any time n = no depends only on the inputx(n) at time no and at time no - 1. The system described by y(n) = x(n) + x(n+ I), 
on the other hand, is noncausal because the output at time n = no depends on the value of the input at time no + 1. 
Stability 
In many applications, it is important for a system to have a response, y(n), that is bounded in amplitude whenever 
the input is bounded. A system with this property is said to be stable in the bounded input-bounded output (BIBO) 
sense. Specifically, 
Definition: A system is said to be stable in the bounded input-bounded output sense if, for 
any input that is bounded, Ix(n)l I 
A < m, the output will be bounded, 
For a linear shift-invariant system, stability is guaranteed if the unit sample response is absolutely summable: 
EXAMPLE 1.3.5 
An LSI system with unit sample response h(n) = anu(n) will be stable whenever la1 < 1, because 
The system described by the equation y(n) = nx(n), on the other hand, is not stable because the response to a unit step, 
x(n) = u(n), is y(n) = nu(n), which is unbounded. 

CHAP. 11 
SIGNALS AND SYSTEMS 
11 
lnvertibility 
A system property that is important in applications such as channel equalization and deconvolution is invertibility. 
A system is said to be invertible if the input to the system may be uniquely determined from the output. In order 
for a system to be invertible, it is necessary for distinct inputs to produce distinct outputs. In other words, given 
any two inputs xl(n) and xz(n) with xl(n) # xz(n), it must be true that yl(n) # y2(n). 
EXAMPLE 1.3.6 
The system defined by 
y(n) = x(n)g(n) 
is invertible if and only if g(n) # 0 for all n. In particular, given y(n) with g(n) nonzero for all n, x(n) may be recovered 
from y(n) as follows: 
1.4 
CONVOLUTION 
The relationship between the input to a linear shift-invariant system, x(n), and the output, y(n), is given by the 
convolution sum 
00 
x(n) * h(n) = 
x(k)h(n - k )  
Because convolution is fundamental to the analysis and description of LSI systems, in this section we look at the 
mechanics of performing convolutions. We begin by listing some properties of convolution that may be used to 
simplify the evaluation of the convolution sum. 
1.4.1 Convolution Properties 
Convolution is a linear operator and, therefore, has a number of important properties including the commutative, 
associative, and distributive properties. The definitions and interpretations of these properties are summarized 
below. 
Commutative Property 
The commutative property states that the order in which two sequences are convolved is not important. Mathe- 
matically, the commutative property is 
From a systems point of view, this property states that a system with a unit sample response h(n) and input x(n) 
behaves in exactly the same way as a system with unit sample response x(n) and an input h(n). This is illustrated 
in Fig. 1-5(a). 
Associative Property 
The convolution operator satisfies the associative property, which is 
From a systems point of view, the associative property states that if two systems with unit sample responses 
hl(n) and h2(n) are connected in cascade as shown in Fig. I -5(b), an equivalent system is one that has a unit 
sample response equal to the convolution of hl (n) and h2(n): 

SIGNALS AND SYSTEMS 
[CHAP. 1 
(b) The associative property. 
( c )  The distributive property. 
Fig. 1-5. The interpretation of convolution properties from a systems point of view. 
Distributive Property 
The distributive property of the convolution operator states that 
From a systems point of view, this property asserts that if two systems with unit sample responses hl(n) and 
h2(n) are connected in parallel, as illustrated in Fig. 1-5(c), an equivalent system is one that has a unit sample 
response equal to the sum of h 1 ( n )  and h2(n): 
1 A.2 
Performing Convolutions 
Having considered some of the properties of the convolution operator, we now look at the mechanics of performing 
convolutions. There are several different approaches that may be used, and the one that is the easiest will depend 
upon the form and type of sequences that are to be convolved. 
Direct Evaluation 
When the sequences that are being convolved may be described by simple closed-form mathematical expressions, 
the convolution is often most easily performed by directly evaluating the sum given in Eq. ( I  7). In performing 
convolutions directly, it is usually necessary to evaluate finite or infinite sums involving terms of the form an or 
nan. Listed in Table 1-1 are closed-form expressions for some of the more commonly encountered series. 
EXAMPLE 1.4.1 
Let us perform the convolution of the two signals 
and 

CHAP. 11 
SIGNALS AND SYSTEMS 
Table 1-1 Closed-form Expressions for Some Commonly 
Encountered Series 
a 
enan 
= ,, 
lal < I 
n d l  
N-I 
With the direct evaluation of the convolution sum we find 
Because u(k) is equal to zero for k < 0 and u(n - k )  is equal to zero for k > n, when n < 0 ,  there are no nonzero terms in 
the sum and y(n) = 0. On the other hand, if n 3 0, 
Therefore, 
Graphical Approach 
In addition to the direct method, convolutions may also be performed graphically. The steps involved in using 
the graphical approach are as follows: 
1. 
Plot both sequences, x(k) and h(k), as functions of k. 
2. 
Choose one of the sequences, say h(k), and time-reverse it to form the sequence h(-k). 
3. 
Shift the time-reversed sequence by n. [Note: If n > 0, this corresponds to a shift to the right (delay), 
whereas if n < 0, this corresponds to a shift to the left (advance).] 
4. 
Multiply the two sequences x(k) and h(n - k) and sum the product for all values of k. The resulting 
value will be equal to y(n). This process is repeated for all possible shifts, n. 
EXAMPLE 1.4.2 
To illustrate the graphical approach to convolution, let us evaluate y(n) = x(n)*h(n) where x(n) and h(n) 
are the sequences shown in Fig. 1-6 ( a )  and (b), respectively.To perform this convolution, we follow the steps listed above: 
1. 
Because x(k) and h(k) are both plotted as a function of k in Fig. 1-6 ( a )  and (b), we next choose one of the sequences 
to reverse in time. In this example, we time-reverse h(k), which is shown in Fig. 1-6 (c). 
2 .  Forming the product, x(k)h(-k), and summing over k, we find that y(0) = 1. 
3. 
Shifting h(k) to the right by one results in the sequence h(l - k )  shown in Fig. 1-6(d). Forming the product, 
x(k)h(l - k), and summing over k, we find that y(1) = 3. 
4. 
Shifting h ( l  - k )  to the right again gives the sequence h(2 - k )  shown in Fig. 1-6(e). Forming the product, 
x(k)h(2 - k ) ,  and summing over k, we find that y(2) = 6. 
5. Continuing in this manner, we find that y(3) = 5. y(4) = 3, and y(n) = 0 for n > 4. 
6. We next take h(-k) and shift it to the left by one as shown in Fig. 1-6 (f ). Because the product, x(k)h(- 1 - k), is 
equal to zero for all k, we find that y(- I )  = 0. In fact. y(n) = 0 for all n < 0. 
Figure 1-6 (g) shows the convolution for all n. 

SlGNALS AND SYSTEMS 
[CHAP. I 
Fig. 1-6. The graphical approach to convolution. 
A useful fact to remember in performing the convolution of two finite-length sequences is that if x(n) is of 
length L1 and h(n) is of length L2, y(n) = x(n) * h(n) will be of length 
Furthermore, if the nonzero values of x(n) are contained in the interval [ M,, N,] and the nonzero values of h(n) are 
contained in the interval [Mh, Nh], the nonzero values of y(n) will be confined to the interval [M, + Mh, N, + Nh]. 
EXAMPLE 1.4.3 
Consider the convolution of the sequence 
1 
L o n 5 2 0  
x(n) = 0 
otherwise 
with 
n 
- 5 5 n 5 5  
h(n) = 0 
otherwise 
Because x(n) is zero outside the interval [ l o ,  201, and h(n) is zero outside the interval [-5, 51, the nonzero values of the 
convolution, y(n) = x ( n )  * h(n), will be contained in the interval [5, 251. 

CHAP. 11 
SIGNALS AND SYSTEMS 
15 
Slide Rule Method 
Another method for performing convolutions, which we call the slide rule method, is particularly convenient 
when both x(n) and h(n) are finite in length and short in duration. The steps involved in the slide rule method 
are as follows: 
Write the values of x(k) along the top of a piece of paper, and the values of h(-k) along the top of 
another piece of paper as illustrated in Fig. 1-7. 
Line up the two sequence values x(0) and h(O), multiply each pair of numbers, and add the products to 
form the value of y(0). 
Slide the paper with the time-reversed sequence h(k) to the right by one, multiply each pair of numbers, 
sum the products to find the value y ( l ) ,  and repeat for all shifts to the right by n > 0. Do the same, 
shifting the time-reversed sequence to the left, to find the values of y(n) for n i 
0 .  
Fig. 1-7. The slide rule approach to convolution. 
In Chap. 2 we will see that another way to perform convolutions is to use the Fourier transform. 
1.5 DIFFERENCE EQUATIONS 
The convolution sum expresses the output of a linear shift-invariant system in terms of a linear combination of 
the input values x(n). For example, a system that has a unit sample response h(n) = anu(n) is described by the 
equation 
Although this equation allows one to compute the output y(n) for an arbitrary input x(n), from a computational 
point of view this representation is not very efficient. In some cases it may be possible to more efficiently express 
the output in terms of past values of the output in addition to the current and past values of the input. The previous 
system, for example, may be described more concisely as follows: 
Equation (I .lo) is a special case of what is known as a linear constant coeficient difference equation, or LCCDE. 
The general form of a LCCDE is 
where the coefficients a(k) and h(k) are constants that define the system. If the difference equation has one or 
more terms a(k) that are nonzero, the difference equation is said to be recursive. On the other hand, if all of 
the coefficients a(k) are equal to zero, the difference equation is said to be nonrecursive. Thus, Eq. ( 1  .lo) is 
an example of a first-order recursive difference equation, whereas Eq. (1.9) is an infinite-order nonrecursive 
difference equation. 
Difference equations provide a method for computing the response of a system, y(n), to an arbitrary input 
x(n). Before these equations may be solved, however, it is necessary to specify a set of initial conditions. For 
example, with an input x(n) that begins at time n = 0 ,  the solution to Eq. (1.11) at time n = 0 depends on the 

16 
SIGNALS AND SYSTEMS 
[CHAP. 1 
values of y ( - l ) ,  . . . , y(-p). Therefore, these initial conditions must be specified before the solution for n 2 0 
may be found. When these initial conditions are zero, the system is said to be in initial rest. 
For an LSI system that is described by a difference equation, the unit sample response, h(n), is found by 
solving the difference equation for x(n) = 6(n) assuming initial rest. For a nonrecursive system, a(k) = 0, the 
difference equation becomes 
and the output is simply a weighted sum of the current and past input values. As a result, the unit sample response 
is simply 
a 
Thus, h(n) is finite in length and the system is referred to as a fmite-length impulse response (FIR) system. 
However, if a(k) # 0, the unit sample response is, in general, infinite in length and the system is referred to as 
an infinite-length impulse response (IIR) system. For example, if 
the unit sample response is h(n) = anu(n). 
There are several different methods that one may use to solve LCCDEs for a general input x(n). The first 
is to simply set up a table of input and output values and evaluate the difference equation for each value of n. 
This approach would be appropriate if only a few output values needed to be determined. Another approach is 
to use z-transforms. This approach will be discussed in Chap. 4. The third is the classical approach of finding 
the homogeneous and particular solutions, which we now describe. 
Given an LCCDE, the general solution is a sum of two parts, 
where yh(n) is known as the homogeneous solution and yp(n) is the particular solution. The homogeneous 
solution is the response of the system to the initial conditions, assuming that the input x(n) = 0. The particular 
solution is the response of the system to the input x(n), assuming zero initial conditions. 
The homogeneous solution is found by solving the homogeneous difference equation 
The solution to Eq. (1.13) may be found by assuming a solution of the form 
Substituting this solution into Eq. (1.13) we obtain the polynomial equation 
The polynomial in braces is called the characteristic polynomial. Because it is of degree p, it will have p roots, 
which may be either real or complex. If the coefficients a(k) are real-valued, these roots will occur in complex- 
conjugate pairs (i.e., for each complex root z, there will be another that is equal to zf). If the p roots z i  are 
distinct, zi # zk fork # i ,  the general solution to the homogeneous difference equation is 

CHAP. 11 
SIGNALS AND SYSTEMS 
17 
where the constants 
modified as follows. 
solution becomes 
Ak are chosen to satisfy the initial conditions. For repeated roots, the solution must be 
If z I is a root of multiplicity m with the remaining p - m roots distinct, the homogeneous 
yh(n) = (AI + A2n + . . . + ~ , n ~ - ' ) z ;  + f: Aki; 
(1.15) 
k=m+l 
For the particular solution, it is necessary to find the sequence yp(n) that satisfies the difference equation for 
the given x(n). In general, this requires some creativity and insight. However, for many of the typical inputs that 
we are interested in, the solution will have the same form as the input. Table 1-2 lists the particular solution for 
some commonly encountered inputs. For example, if x(n) = anu(n), the particular solution will be of the form 
provided a is not a root of the characteristic equation. The constant C is found by substituting the solution into 
the difference equation. Note that for x(n) = CS(n) the particular solution is zero. Because x(n) = 0 for n > 0, 
the unit sample only affects the initial condition of y(n). 
Table 1-2 The Particular Solution to an LCCDE 
c I 
Cln + C2 
Clan 
CI cos(nm) + C2 sin(nm) 
C I  cos(n@) + C2 sin(nm) 
Cian cos(nm) + C2an sin(nm) 
None 
for Several Different Inputs 
EXAMPLE 1.5.1 
Let us find the solution to the difference equation 
y(n) - 0.25y(n - 2) = x(n) 
for x(n) = u(n) assuming initial conditions of y(- 1) = 1 and y(-2) = 0. 
Term in x(n) 
We begin by finding the particular solution. From Table 1-2 we see that for x(n) = u(n) 
y,(n) = CI 
Particular Solution 
Substituting this solution into the difference equation we find 
CI -0.25CI = 1 
In order for this to hold, we must have 
I 
- 
cl=-- 
4 - 
1 - 0.25 
3 
To find the homogeneous solution, we set yh(n) = zn, which gives the characteristic polynomial 
z2 - 0.25 = 0 
Therefore, the homogeneous solution has the form 
yh(n) = A1(0.5)" + A2(-0.5)" 
Thus, the total solution is 
y(n) = $ + Al(0.5)" + A2(-0.5)" 
n > 0 

18 
SIGNALS AND SYSTEMS 
[CHAP. 1 
The constants A, and A2 must now be found so that the total solution satisfies the given initial conditions, y(-1) = 1 and 
y(-2) = 0. Because the solution given in Eq. (1.17) only applies for n 
0, we must derive an equivalent set of initial 
conditions for y(0) and y(1). Evaluating Eq. (1.16) at n = 0 and n = 1. we have 
Substituting these derived initial conditions into Eq. (1.17) we have 
Solving for A and A2 we find 
A, = -I 
A 2 = d  
Thus, the solution is 
y(n) = - (0.5)"" + d(-0.5)" 
n 2 0 
Although we have focused thus far on linear difference equations with constant coefficients, not all systems 
and not all difference equations of interest are linear, and not all have constant coefficients. A system that 
computes a running average of a signal x(n) over the interval [0, n], for example, is defined by 
This system may be represented by a difference equation that has time-varying coefficients: 
Although more complicated and difficult to solve, nonlinear difference equations or difference equations with 
time-varying coefficients are important and arise frequently in many applications. 
Solved Problems 
Discrete-Time Signals 
1.1 
Determine whether or not the signals below are periodic and, for each signal that is periodic, determine 
fundamental period. 
Because 0 . 1 2 5 ~  = n/8, and 
cos ( f n) = cos (I (n + 16)) 
x(n) is periodic with period N = 16. 
Here we have the sum of two periodic signals, 
with the period of the first signal being equal to Nl = 24, and the period of the second, N2 = 36. Therefore, 
the period of the sum is 
N =  
N1N2 
- 
- (24)(36) 
(24)(36) - 72 
- 
gcd(N1, N2) 
gcd(24,36) 
12 

CHAP. 11 
SIGNALS AND SYSTEMS 
(c) In order for this sequence to be periodic, we must be able to find a value for N such that 
sin@ + 0 . h )  = sin(a + 0.2 (n + N ) )  
The sine function is periodic with a period of 2 ~ .  
Therefore, 0.2N must be an integer multiple of 271.. However, 
because H is an irrational number, no integer value of N exists that will make the equality true. Thus, this 
sequence is aperiodic. 
(4 Here we have the product of two periodic sequences with periods N I  = 32 and N2 = 34. Therefore, the funda- 
mental veriod is 
1.2 
Find the even and odd parts of the following signals: 
The even part of a signal x(n) is given by 
x,(n) = f [x(n) + x(-n)l 
With x(n) = u(n), we have 
which may be written concisely as 
x,(n) = f + fS(n) 
Therefore, the even part of the unit step is a sequence that has a constant value of 4 for all n except at n = 0, where 
it has a value of 1. 
The odd part of a signal x(n) is given by the difference 
xo(n) = i [ x ( n )  - x(-n)] 
With x(n) = u(n), this becomes 
n > O  
where sgn(n) is the signum function. 
With x(n) = anu(n), the even part is 
or 
x,(n) = fa'"' + f&n) 
The odd part, on the other hand, is 
1.3 
If X I  (n) is even and x2(n) is odd, what is y(n) = xl (n) . x2(n)? 
If y(n) = x d n ) .  xdn), 
y(-n) = X I ( - n )  .xz(-n) 
Because x ,  (n) is even, xl(n) = xl(-n), and because xz(n) is odd, x2(n) = -xz(-n). Therefore, 
and it follows that y(n) is odd. 

20 
SIGNALS AND SYSTEMS 
[CHAP. 1 
1.4 
If x(n) = 0 for n < 0, derive an expression for x(n) in terms of its even part, xe(n), and, using this 
expression, find x(n) when xe(n) = (0.9)lnlu(n). Determine whether or not it is possible to derive a 
similar expression for x ( n )  in terms of its odd part. 
Because 
xdn) = f [x(n) + x(-n)l 
and 
x,(n) = i [ x ( n )  - x(-n)] 
note that when x(n) = 0 for n -= 0 ,  
xe(n) = i x ( n )  
n > 0 
and 
xe(n) = x(n) 
n = 0 
Therefore, x(n) may be recovered from its even part as follows: 
For example, with xe(n) = (0.9)lnlu(n), we have 
Unlike the case when only the even part of a sequence is known, if only the odd part is given, it is not possible to 
recover x(n). The problem is in recovering the value of x(0). Because x,(O) is always equal to zero, there is no 
information in the odd part of x(n) about the value of x(0). However, if we were given x(0) along with the odd part, 
then, x(n) could be recovered for all n. 
1.5 
If xe(n) is the conjugate symmetric part of a sequence x(n), what symmetries do the real and imaginary 
parts of xe(n) possess? 
The conjugate symmetric part of x(n) is 
x&) = $[x(n) + x*(-n)] 
Expressing x(n) in terms of its real and imaginary parts, we have 
Therefore, the real part of x,(n) is even, and the imaginary part is odd. 
1.6 
Find the conjugate symmetric part of the sequence 
x(n) = je jnn/4 
The conjugate symmetric part of x(n) is 
xe(n) = i [ x ( n )  + x*(-n)] = 2 [ J 'ejn"/4 - jejnnI4] = 0 
Thus, this sequence is conjugate antisymmetric. 
1.7 
Given the sequence x(n) = ( 6  - n)[u(n) - u(n - 6 ) ] ,  make a sketch of 
(4 y l ( n ) = x ( 4 - n )  
(h) y2(n) = x(2n - 3) 
(c) y d n )  = x(8 - 3n) 
(d) y d n )  = x(n2 - 2n + 1 )  

CHAP. 11 
SIGNALS AND SYSTEMS 
2 1 
(a) The sequence x(n), illustrated in Fig. 1-8(a), is a linearly decreasing sequence that begins at index n = 0 and 
ends at index n = 5. The first sequence that is to be sketched, yl(n) = x(4 - n), is found by shifting x(n) by 
four and time-reversing. Observe that at index n = 4, yl(n) is equal to x(0). Therefore, yl(n) has a value of 6 
at n = 4 and decreases linearly to the left (decreasing values of n) until n = - 1, beyond which y (n) = 0. The 
sequence y (n) is shown in Fig. 1-8(b). 
Fig. 1-8. Performing signal manipulations. 
(b) The second sequence, y2(n) = x(2n - 3), is formed through the combination of time-shifting and down- 
sampling. Therefore, y&~) may be plotted by first shifting x(n) to the right by three (delay) as shown in 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Fig. 1-8(c). The sequence y2(n) is then formed by down-sampling by a factor of 2 (i.e., keeping only the even 
index terms as indicated by the solid circles in Fig. 1-8(c)). A sketch of yn(n) is shown in Fig. I-8(d). 
(c) The third sequence, y3(n) = x(8 - 3n), is formed through a combination of tirne-shifting, down-sampling, and 
time-reversal. To sketch y3(n) we begin by plotting x(8 - n), which is formed by shifting x(n) to the left by 
eight (advance) and reversing in time as shown in Fig. 1 -8(e). Then, y3(n) is found by extracting every third 
sample of x(8 - n), as indicated by the solid circles, which is plotted in Fig. 1-8( f). 
(4 Finally, y4(n) = x(n2 - 2n + 1) is formed by a nonlinear transformation of the time variable n. This sequence 
may be easily sketched by listing how the index n is mapped. First, note that if n 2 4 or n 5 -2, then 
n2 - 2n + 1 2 9 and, therefore, y4(n) = 0. For - I  5 n 5 3 we have 
The sequence y4(n) is sketched in Fig. 1-8(g). 
1.8 
The notation ~ ( ( n ) ) ~  
is used to define the sequence that is formed as follows: 
~ ( ( n ) ) ~  
= x(n modulo N) 
where (n modulo N) is the positive integer in the range [0, N - 11 that remains after dividing n by N. 
For example, ((3))g = 3, ((12))g = 4, and ((-6))d = 2. If x(n) = (i)%in(nn/2)u(n), make a sketch of 
(a) x((n))3 and (b) x((n - 2))3. 
(a) We begin by noting that ((n))3, for any value of n, is always an integer in the range [O, 21. In fact, because 
((n))3 = ((n + 3k)h for any k ,  
Therefore, x((n))3 is periodic with a period N = 3. It thus follows that~((n))~ 
is formed by periodically repeating 
the first three values of x(n) as illustrated in the figure below: 
(b) The sequence x((n - 2))3 is also periodic with a period N = 3, except that the signal is shifted to the right by 
no = 2 compared to the periodic sequence in part (a). This sequence is shown in the figure below: 
1.9 
The power in a real-valued signal x(n) is defined as the sum of the squares of the sequence values: 
Suppose that a sequence x(n) has an even part x,(n) equal to 

CHAP. I] 
SIGNALS AND SYSTEMS 
23 
If the power in x(n) is P = 5, find the power in the odd part, x,(n), of x(n). 
This problem requires finding the relationship between the power in x ( n )  and the power in the even and odd parts. 
By definition, x ( n )  = x,(n) + x,(n). Therefore, 
Note that x,(n)x,(n) is the product of an even sequence and an odd sequence and, therefore, the product is odd. 
Because the sum for all n of an odd sequence is equal to zero, 
Thus, the power in x ( n )  is 
m 
m 
which says that the power in x ( n )  is equal to the sum of the powers in its even and odd parts. Evaluating the power 
in the even part of x(n), we find 
m 
m 
2n 
PC = ): (ynl 
= - I  + 2 ): ( f )  = f 
n=-m 
n =O 
Therefore, with P = 5 we have 
10 
P, = 5 - P, = T 
1.10 
Consider the sequence 
Find the numerical value of 
Compute the power in x(n), 
W 
If x(n) is input to a time-varying system defined by y(n) = nx(n), find the power in the output 
signal (i.e., evaluate the sum) 
This is a direct application of the geometric series 
With the substitution of -n for n we have 
Therefore, it follows from the geometric series that 

SIGNALS AND SYSTEMS 
[CHAP. 1 
(h) To find the power in x(n) we must evaluate the sum 
Replacing n by -n and using the geometric series, this sum becomes 
(c) Finally, to find the power in y ( n )  = nx(n) we must evaluate the sum 
In Table 1- I there is a closed-form expression for the sum 
but not for C:,n2an. However, we may derive a closed-form expression for this sum as  follow^.^ Differenti- 
ating both sides of Eq. (1.19) with respect to a, we have 
Therefore. we have the sum 
Using this expression to evaluate Eq. (1.18). we find 
1.11 
Express the sequence 
I 
1 
n = O  
2 
n = l  
.r(n) = 3 
n = 2  
0 
else 
as a sum of scaled and shifted unit steps. 
In this problem, we would like to perform a signal decomposition, expressing x(n) as a sum of scaled and shifted 
unit steps. There are several ways to derive this decomposition. One way is to express x(n) as a sum of weighted 
and shifted unit samples, 
x(n) = S(n) + 2S(n - I) + 3S(n - 2) 
and use the fact that a unit sample may be written as the difference of two steps as follows: 
Therefore, 
x(n) = u(n) - u(n - I )  + 2[u(n - I) - u(n - 2)] + 3[u(n - 2) - u(n - 3)] 
which gives the desired decomposition: 
"his 
method is very useful and should be remembered 

CHAP. I] 
SIGNALS AND SYSTEMS 
25 
Another way to derive this decomposition more directly is as follows. First, we note that the decomposition should 
begin with a unit step, which generates a value of I at index n = 0. Because x(n) increases to a value of 2 at n = 1, 
we must add a delayed unit step u(n - 1). At n = 2, x(n) again increases in amplitude by 1, so we add the delayed 
unit step u(n - 2). At this point, we have 
Thus, all that remains is to bring the sequence back to zero for n > 3. This may be done by subtracting the delayed 
unit step 3u(n - 3), which produces the same decomposition as before. 
Discrete-Time Systems 
1.12 
For each of the systems below, x(n) is the input and y(n) is the output. Determine which systems are 
homogeneous, which systems are additive, and which are linear. 
(a) If the system is homogeneous, 
y(n) = T[cx(n)] = cT[x(n)] 
for any input x(n) and for all complex constants c. The system y(n) = log(x(n)) is not homogeneous because 
the response of the system to xl(n) = cx(n) is 
which is not equal to c log(x(n)). For the system to be additive, if yl(n) and y2(n) are the responses to the inputs 
and xz(n), respectively, the response to x(n) = xl(n) + x2(n) must be y(n) = yl(n) + y2(n). For this 
system we have 
T[xl(n) + x h N  = log[x~(n) + x2(n)l # log[x~(n)l+ log[x2(n)l 
Therefore, the system is not additive. Finally, because the system is neither additive nor homogeneous, the 
system is nonlinear. 
(b) Note that if y(n) is the response to x(n). 
the response to xl(n) = cx(n) is 
which is not the same as y1 (n). Therefore, this system is not homogeneous. Similarly, note that the response to 
x(n) = x,(n) + x2(n) is 
which is not equal to yl(n) + y2(n). Therefore, this system is not additive and, as a result, is nonlinear. 

SIGNALS AND SYSTEMS 
[CHAP. 1 
This system is homogeneous, because the response of the system to xl(n) = cx(n) is 
The system is clearly, however, not additive and therefore is nonlinear. 
Let y,(n) and yz(n) be the responses of the system to the inputs x,(n) and x2(n), respectively. The response to 
the input 
x(n) = axl(n) + bxz(n) 
y(n) = x(n) sin ( y) = [axl (n) + bx2(n)] sin - 
r; 1 
Thus, it follows that this system is linear and, therefore, additive and homogeneous. 
Because the real part of the sum of two numbers is the sum of the real parts, if y,(n) is the response of the 
system toxl(n), and yz(n) is the response to x2(n), the response to y(n) = yl(n) + yz(n) is 
Therefore the system is additive. It is not homogeneous, however, because 
unless c is real. Thus, this system is nonlinear. 
For an input x(n), this system produces an output that is the conjugate symmetric part of x(n). If c is a complex 
constant, and if the input to the system is xl(n) = cx(n), the output is 
Therefore, this system is not homogeneous. This system is, however, additive because 
1.13 
A linear system is one that is both homogeneous and additive. 
(a) Give an example of a system that is homogeneous but not additive. 
(b) Give an example of a system that is additive but not homogeneous. 
There are many different systems that are either homogeneous or additive but not both. One example of a system 
that is homogeneous but not additive is the following: 
x(n - I)x(n) 
~ ( n )  
= 
x(n + I) 
Specifically, note that if x(n) is multiplied by a complex constant c, the output will be 
cx(n-l)cx(n) 
x(n-I)x(n) 
~ ( n )  
= 
= c 
cx(n + I) 
x(n + 1) 
which is c times the response to x(n). Therefore, the system is homogeneous. On the other hand, it should be clear 
that the system is not additive because, in general, 
{xl(n - 1) + X Z ( ~  
- l)J(x~(n) + xz(n)I 
x ~ ( n  - l)x~(n) xdn - l)xz(n) 
x ~ ( n  + 1) +xAn + I )  
+ 
x,(n + 1) 
+ 
xz(n + 1) 

CHAP. I] 
SIGNALS AND SYSTEMS 
An example of a system that is additive but not homogeneous is 
Additivity follows from the fact that the imaginary part of a sum of complex numbers is equal to the sum of imaginary 
parts. This system is not homogeneous, however, because 
1.14 
Determine whether or not each of the following systems is shift-invariant: 
(a) Let y ( n )  be the response of the system to an arbitrary input x(n). To test for shift-invariance we want to compare 
the shifted response y ( n  - no) with the response of the system to the shifted input .r(n - nu). With 
we have. for the shifted response. 
Now, the response of the system to x l ( n )  = x ( n  - n o )  is 
Because y l ( n )  = y ( n  - no), the system is shifl-invariant. 
(6) This system is a special case of a more general system that has an input-output description given by 
where f ( n )  is a shift-varying gain. Systems of this form are always shift-varying provided f ( n )  is not a constant. 
To show this, assume that f ( n )  is not constant and let n I  and nz be two indices for which f ( n , )  # f ( n z ) .  With 
an input . r l ( n )  = S(n - n l ) ,  note that the output y l ( n )  is 
If, on the other hand, the input is x2(n) = 6(n - n2), the response is 
Although .t.,(n) and x Z ( n )  differ only by a shift, the responses y l ( n )  and y2(n) differ by a shift and a change in 
amplitude. 'Therefore, the systcm is shift-varying. 
(c) Let 
be the response of the system to an arbitrary inpul .r(n). The response of the system to the shifted input 
.rl(n) = x(n - no) is 
Because this is equal to v ( n  - no), the system is shift-invariant. 

SIGNALS AND SYSTEMS 
[CHAP. 1 
(d) This system is shift-varying, which may be shown with a simple counterexample. Note that if x(n) = S(n), the 
response will be y(n) = 6(n). However,ifxl(n) = 6(n-2). the response will be yl(n) = xl(n2) = 6(n2-2) = 0, 
which is not equal to y(n - 2). Therefore, the system is shift-varying. 
(e) With y(n) the response to x(n), note that for the input xl(n) = x(n - N), the output is 
which is the same as the response tox(n). Because yl (n) # y(n- N), ingeneral, this system isnot shift-invariant. 
(f) This system may easily be shown to be shift-varying with a counterexample. However, suppose we use the 
direct approach and let x(n) be an input and y(n) = x(-n) be the response. If we consider the shifted input, 
xl (n) = x(n - no), we find that the response is 
However, note that if we shift y(n) by no, 
which is not equal to yl (n). Therefore, the system is shift-varying. 
1.15 
A linear discrete-time system is characterized by its response hk(n) to a delayed unit sample S(n - k). 
For each linear system defined below, determine whether or not the system is shift-invariant. 
(a) hk(n) = (n - k)u(n - k )  
(6) hk(n) = S(2n - k )  
S(n - k - 1) 
k even 
5u(n - k )  
k odd 
(a) Note that hk(n) is a function of n - k. This suggests that the system is shift-invariant. To verify this, let y(n) 
be the response of the system to x(n): 
The response to a shifted input, x(n - no), is 
With the substitution 1 = k - no this becomes 
From the expression for y(n) given in Eq. (1.24, we see that 
which is the same as yl(n). Therefore, this system is shift-invariant. 

CHAP. I] 
SIGNALS AND SYSTEMS 
29 
(h) For the second system, hI(n) is nor a function of n - k. Therefore, we should expect this system to be shift- 
varying. Let us see if we can tind an example that demonstrates that it is a shift-varying system. For the input 
~ ( 1 1 )  = 6(11), the response is 
Because gl(n) # y(n - I ), the system is shift-varying. 
(c) Finally, for the last system, we see that although hk(n) is a function of n - k fork even and a function of (n - k) 
fork odd, 
11k(n) # hk-~(n - 1) 
In other words, the response of the system to 6(n - k - 1) is not equal to the response of the system to 6(n - k) 
delayed by 1. Therefore. this system is shift-varying. 
1.16 
Let Tr.1 be a linear system, not necessarily shift-invariant, that has a response hk(n) to the input 6(n - k). 
Derive a test in terms of k k ( n )  that allows one to determine whether or not the system is stable and whether 
or not the system is causal. 
(a) The response of a linear system to an input ~ ( n )  
is 
Therefore. the output may be hounded as follows: 
If x(n) is bounded, Ix(n)l 5 A < W, 
l y w i  i A 2 I M ~ ) I  
As a result. if 
the output will be bounded, and the system is stable. Equation (1.23) is a necessary condition for stability. 
To establish the sufficiency of this condition, we will show that if this summation is not finite, we can find a 
bounded input that will produce an unbounded output. Let us assume that hk(n) is bounded for all k and n 
[otherwiue the system will be unstable. because the response to the bounded input S(n - k) will be unbounded]. 
With hi(tl) bounded for all k and n, suppose that the sum in Eq. (1.23) is unbounded for some n, say n = no. 
Let 
x(n) = sgn(h,(n~)l 
that is, 
For this Input, the response at time n = no is 
which, by assumption, is unbounded. Therefore, the system is unstable and we have established the sufficiency 
of the condition given in Eq. (1.23). 

SIGNALS AND SYSTEMS 
[CHAP. 1 
(b) Let us now consider causality. For an input x(n), the response is as given in Eq. (1.22). In order for a system 
to be causal, the output y(n) at time no cannot depend on the input x(n) for any n > no. Therefore, Eq. (1.22) 
must be of the form 
,I 
y(n) = x 
hk(n)x(k) 
k=-m 
This, however, will be true for any x(n) if and only if 
which is the desired test for causality. 
Determine whether or not the systems defined in Prob. 1 .I5 are (a) 
stable and (b) causal. 
(a) For the first system, hk(n) = (n - k)u(n - k), note that hk(n) grows linearly with n. Therefore, this system 
cannot be stable. For example, note that if x(n) = S(n), the output will be 
which is unbounded. Alternatively, we may use the test derived in Prob. 1 .I6 to check for stability. Because 
this system is unstable. On the other hand, because h,(n) = 0 for n < k, this system is causal. 
(b) For the second system, hk(n) = S(2n - k), note that hl(n) has, at most, one nonzero value, and this nonzero 
value is equal to I .  Therefore, 
for all n, and the system is stable. However, the system is not causal. To show this, note that if x(n) = &(n - 2), 
the response is 
y(n) = h2(n) = 6(2n - 2) = &(n - I) 
Because the system produces a response before the input occurs, it is noncausal. 
(c) For the last system, note that 
cm 
n 
= x 
Su(n - k )  = 1 
5 
A=-- 
A=-.u 
A add 
h odd 
which is unbounded. Therefore, this system is unstable. Finally, because hk(n) = 0 for n < k, the system is 
causal. 
Consider a linear system that has a response to a delayed unit step given by 
That is, sk(n) is the response of the linear system to the input x ( n )  = u ( n  - k). Find the response of this 
system to the input x ( n )  = 6(n - k ) ,  where k is an arbitrary integer, and determine whether or not this 
system is shift-invariant, stable, or causal. 
Because this system is linear, we may find the response, hk(n), to the input &(n - k) as follows. With &(n - k )  = 
u(n - k )  - u(n - k - I), using linearity it follows that 
which is shown below: 

CHAP. 11 
SIGNALS AND SYSTEMS 
From this plot, we see that the system is not shift-invariant, because the response of the system to a unit sample 
changes in amplitude as the unit sample is advanced or delayed. However, because hk(n) = 0 for n < k, the system 
is causal. Finally, because hk(n) is unbounded as a function of k, it follows that the system is unstable. In particular, 
note that the test for stability of a linear system derived in Prob. 1.16 requires that 
For this system, 
Note that in evaluating this sum, we are summing over k. This is most easily performed by plotting hk(n) versus n 
as illustrated in the figure below. 
Because this sum cannot be bounded by a finite number B, this system is unstable. Because this system is unstable, 
we should be able to find a bounded input that produces an unbounded output. One such sequence is the following: 
The response is 
y(n) = n(- l)"u(n) 
which is clearly unbounded. 
1.19 
Consider a system whose output y(n) is related to the input x(n) by 
Determine whether or not the system is (a) linear, (b) shift-invariant, ( c )  stable, (d) causal. 

SIGNALS AND SYSTEMS 
[CHAP. I 
(a) The first thing that we should observe about y(n) is that it is formed by summing products of .r(n) with shifted 
versions of itself. For example, 
Xi 
y(O) = 
.r2(k) 
I=-w 
We expect, therefore, this system to be nonlinec~r. Let us confirm this by example. Note that if .r(n) = 6(n), 
y(n) = S(n). However, if x(n) = 2S(n), y(n) = 46(n). Therefore. the system is not homogeneous and, 
consequently, is nonlinear. 
(b) For shift-invariance, we want to compare 
,- 
y(n - no) = C x(k)x(n - no + k) 
I=-n; 
to the response of the system to xl(n) = x(n - rill). which is 
where the last equality follows with the substitution k' = k - ncl. Because y,(n) # y(n - nu), this system is 
not shift-invariant. 
(c) For stability, note that if x(n) is a unit step, y(0) is unbounded. Therefore, this system is unstable. 
(d) Finally, for causality, note thal the output depends on the values of .t (11) for all n. For example, y(O) is the sum 
of the squares of x(k) for all k. Therefore, this system is not causal. 
1.20 
Given that x(n) is the system input and y ( n )  is the system output, which of the following systems are 
causal? 
(d) y(n) = r ( n )  - x(n2 - n )  
N 
(e) y(n) = n x ( n  - k )  
(a) The system y(n) = r2(n)u(n) is rnernoryless (i.e.. the response of the system at time n depends only on the 
input at time n and on no other values of the input). Therefore, this system is causal. 
(b) The system y(n) = x(ln1) is an example of a noncausal system. This may be seen by looking at the outpu~ when 
n < 0. In particular, note that y(- I) = s ( l ) .  Therefore. the output of the system at time 11 = -1 depends on 
the value of the input at a future time. 
(c) For this system, in order to compute the output y(n) at time n all we need to know is the value of the input x(n) 
at times n, n - 3, and n - 10. Therefore. this system must be causal. 
(d) This system is noncausal, which may be seen by evaluating v(n) for 11 < 0. For example, 
Because y(- I) depends on the value of .r(2), which occurs after time n = - I ,  this system is noncausal 

CHAP. 11 
SIGNALS AND SYSTEMS 
3 3 
(e) The output of this system at time n is the product of the values of the input x(n) at times n - 1, . . . , n - N .  
Therefore, because the output depends only on past values of the input signal, the system is causal. 
( f )  This system is not causal, which may be seen easily if we rewrite the system definition as follows: 
Therefore, the input must be known for all n 5 0 to determine the output at time n. For example, to find y(-5) 
we must know x(O), x(- I), x(-2), . . .. Thus, the system is noncausal. 
1.21 
Determine which of the following systems are stable: 
(b) y (n) = ex(") /x(n - 1) 
(a) Let x(n) be any bounded input with Ix(n)l c M .  
Then it follows that the output, y(n) = x2(n), may be bounded 
by 
I~(n)l = lx(n)12 < M 2  
Therefore, this system is stable, 
(b) This system is clearly not stable. For example, note that the response of the system to a unit sample x(n) = S(n) 
is infinite for all values of n except n = 1. 
(c) Because Icos(x)l 5 1 for all x, this system is stable. 
(d) This system corresponds to a digital integrator and is unstable. Consider, for example, the step response of the 
system. With x(n) = u(n) we have, for n 2 0 ,  
Although the input is bounded, (x(n)l 5 1, the response of the system is unbounded. 
(e) This system may be shown to be stable by using the following inequality: 
Specifically, if x(n) is bounded, Ix(n)l < M ,  
Therefore, the output is bounded, and the system is stable. 
( f )  This system is not stable. This may be seen by considering the bounded input x(n) = cos(nrr/l). Specifically, 
note that the output of the system at time n = 0 is 
which is unbounded. Alternatively, because the input-output relation is one of convolution, this is a linear 
shift-invariant system with a unit sample response 
h(n) = cos (7) 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Because a linear shift-invariant system will be stable only if 
we see that this system is not stable. 
1.22 
Determine which of the following systems are invertible: 
To test for invertibility, we may show that a system is invertible by designing an inverse system that uniquely recovers 
the input from the output, or we may show that a system is not invertible by finding two different inputs that produce 
the same output. Each system defined above will be tested for invertibility using one of these two methods. 
( a )  This system is clearly invertible because, given the output y(n), we may recover the input using x(n) = 0.5y(n). 
( h )  This system is not invertible, because the value of x ( n )  at 11 = 0 cannot be recovered from y(n). For example, 
the response of the system to X ( R )  and to x l ( n )  = x ( n )  + a&n) will be the same for any a. 
(c) Due to the differencing between two successive input values, this system will not be invertible. For example, 
note that the inputs x ( n )  and x ( n )  + c will produce the same output for any value of c. 
(6) This system corresponds to an integrator and is an invertible system. To show that it is invertible, we may 
construct the inverse system, which is 
.u(n) = y(n) - y(n - I) 
To show that this is the inverse system, note that 
n-l 
(e) Invertibility must hold for complex as well as real-valued signals. Therefore, this system is noninvertible because 
it discards the imaginary part 01' x(n). One could state, however, that this system is invertible over the set of 
real-valued signals. 
1.23 
Consider the cascade of two systems. SI and S2. 
(a) If both SI and S2 are linear, shift-invariant, stable, and causal, will the cascade also be linear, 
shift-invariant, stable, and causal? 
(b) If both SI and S2 are nonlinear, will the cascade be nonlinear? 
(c) If both SI and S2 are shift-varying, will the cascade be shift-varying? 
( a )  Linearity, shift-invariance, stability, and causality are easily shown to be preserved in a cascade. For example, 
the response of S I  to the input nxl ( n )  + hxz(n) will be awl ( n )  + bw2(n) due to the linearity of S,. With this as 
the input to S2, the response will be, again by linearity, a y , ( n )  + hy7(n). Therefore, if both S I  and S2 are linear, 
the cascade will be linear. 

CHAP. 11 
SIGNALS AND SYSTEMS 
35 
Similarly, for shift-invariance, if x(n - no) is input to S , ,  the response will be w(n - no). In addition, 
because S2 is shift-invariant, the response to w(n -no) will be y(n -no). Therefore, the response of the cascade 
to x(n - no) is y(n - no), and the cascade is shift-invariant. 
To establish stability, note that with SI being stable, if x(n) is bounded, the output w ( n )  will be bounded. 
With w ( n )  a bounded input to the stable system S2, the response y(n) will also be bounded. Therefore, the 
cascade is stable. 
Finally, causality of the cascade follows by noting that if S2 is causal, y(n) at time n = no depends only 
on w(n) for n 5 no. With SI being causal, w(n) for n 5 no will depend only on the input x(n) for n 5 no, and 
it follows that the cascade is causal. 
(b) If SI and S2 are nonlinear, it is not necessarily true that the cascade will be nonlinear because the second system 
may undo the nonlinearity of the first. For example, with 
although both SI and Sz are nonlinear, the cascade is the identity system and, therefore, is linear. 
(c) As in (b), if S I  and S2 are shift-varying, it is not necessarily true that the cascade will be shift-varying. For 
example. if the first system is a modulator. 
and the second is a demodulator, 
y(n) = w(n) . e-Inq 
the cascade is shift-invariant, even though a modulator and a demodulator are shift-varying. Another example 
is when Sl is an up-sampler 
and S2 is a down-sampler 
y(n) = w(2n) 
In this case, the cascade is shift-invariant, and y(n) = x(n). However, if the order of the systems is reversed, 
the cascade will no longer be shift-invariant. Also, if a linear shift-invariant system, such as a unit delay, is 
inserted between the up-sampler and the down-sampler, the cascade of the three systems will, in general, be 
shift-varying. 
Convolution 
1.24 
The first nonzero value of a finite-length sequence x(n) occurs at index n = -6 and has a valuex(-6) = 3, 
and the last nonzero value occurs at index n = 24 and has a value x(24) = -4. What is the index of the 
first nonzero value in the convolution 
y(n) = x(n) * x(n) 
and what is its value? What about the last nonzero value? 
Because we are convolving two finite-length sequences, the index of the first nonzero value in the convolution is 
equal to the sum of the indices of the first nonzero values of the two sequences that are being convolved. In this case, 
the index is n = - 12, and the value is 
y(-12) = x2(-6) = 9 
Similarly, the index of the last nonzero value is at n = 48 and the value is 
1.25 
The convolution of two finite-length sequences will be finite in length. 1s it true that the convolution of 
a finite-length sequence with an infinite-length sequence will be infinite in length? 

SIGNALS AND SYSTEMS 
[CHAP. I 
It is not necessarily true that the convolution of an infinite-length sequence with a finite-length sequence will be 
infinite in length. It may be either. Clearly, if x(n) = 6(n) and h(n) = (OS)"u(n), the convolution will be an 
infinite-length sequence. However, it is possible for the finite-length sequence to remove the infinite-length tail of 
an infinite-length sequence. For example, note that 
Therefore, the convolution of x(n) = 6(n) - fS(n - I) with h(n) = (OS)"u(n) will be finite in length: 
1.26 
Find the convolution of the two finite-length sequences: 
Shown in the figure below are the sequences x(k) and h(k). 
Because h(n) is equal to zero outside the interval [-3, 31, and x(n) is zero outside the interval [l, 51, the convolution 
y(n) = x(n) * h(n) is zero outside the interval 1-2, 81. 
One way to perform the convolution is to use the slide rule approach. Listing x(k) and h(-k) across two pieces 
of paper, aligning them at k = 0 ,  we have the picture as shown below (the sequence h(-k) is in front). 
Forming the sum of the products x(k)h(-k), we obtain the value of y(n) at time n = 0 ,  which is y(0) = 2. Shifting 
h(-k) to the left by one, multiplying and adding, we obtain the value of y(n) at n = -1, which is y ( - I )  = 2. 
Shifting one more time to the left, forming the sum of products, we find y(-2) = 1, which is the last nonzero value 
of y(n) for n < 0 .  Repeating the process by shifting h(-k) to the right, we obtain the values of y(n) for n > 0 ,  
which are 
Another way to perform the convolution is to use the fact that 
x ( n )  * S(n - no) = x(n - n o )  
Writing h(n) as 

CHAP. I] 
SIGNALS AND SYSTEMS 
we may evaluate y ( n )  as follows 
y ( n )  = 2 x ( n  + 3 )  - 2x(n + 1 )  + 2x(n - I) - 2x(n - 3 )  
Making a table of these shifted sequences. 
and adding down the columns, we obtain the sequence y(n ). 
1.27 
Derive a closed-form expression for the convolution of x ( n )  and h(n) where 
I 
N-6 
x(n) = (6) 
u(n) 
h(n) = (f)"u(n - 3) 
Because both sequences are infinite In length. it is easier to evaluate the convolution sum directly: 
Note that because x ( n )  = 0 for n < 0 and h ( n )  = 0 for n < 3, y(n) will be equal to zero for n < 3. Substituting 
x(n) and h(n) into the convolution sum, we have 
Due to the step u(k), the lower limit on the sum may be changed to k = 0, and because u(n - k - 3) is zero for 
k > n - 3 ,  the upper limit may be changed to k = n - 3. Thus. for n 2 3 the convolution sum becomes 
Using the geometric series to evaluate the sum, we have 
1.28 
A linear shift-invariant system has a unit sample response 
Find the output if the input is 
x(n) = -n3"u(-n) 
Shown below are the sequences x ( n )  and h(n). 

3 8 
SIGNALS AND SYSTEMS 
[CHAP. 
I 
Because x(n) is zero for n > -1, and h(n) is equal to zero for n > - 1 ,  the convolution will be equal to zero for 
n z -2. Evaluating the convolution sum directly, we have 
Because u(-k) = 0 fork > 0 and u(-(n - k )  - 1) = 0 fork < n + I, the convolution sum becomes 
With the change of variables m = -k, and using the series formulas given in Table I -I, we have 
Let us check this answer for a few values of n using graphical convolution. Time-reversing x(k), we see that h(k) 
and x(-k) do not overlap for any k and, thus, y(0) = 0 .  In fact, it is not until we shift x(-k) to the left by two 
that there is any overlap. With x(-2 - k) and h(k) overlapping at one point, and the product being equal to i, 
it follows that y(-2) = 4. Evaluating the expression above for y(n) above at index n = -2, we obtain the same 
result. For n = -3, the sequences x(-3 - k )  and h(k) overlap at two points, and the sum of the products gives 
y(-3) = f + $ = $, which, again, is the same as the expression above. 
1.29 
If the response of a linear shift-invariant system to a unit step (i.e., the step response) is 
find the unit sample response, h(n). 
In this problem, we begin by noting that 
S(n) = u(n) - u(n - 1) 
Therefore, the unit sample response, h(n), is related to the step response, s(n), as follows: 
Thus, given s(n), we have 
h(n) = s(n) - s(n - I) 
11- 1 
= n(;)"u(n) - (n - I)(;) 
u(n - I )  
= [.(;In - 2(n - ~ ) ( ; ) " ] u ( n  - I )  
= ( 2  - n)(i)"u(n - I )  
1.30 
Prove the commutative property of convolution 
Proving the commutative property is straightforward and only involves a simple manipulation of the convolution 
sum. With the convolution of x(n) with h(n) given by 
with the substitution 1 = n - k, we have 
and the commutative property is established. 

CHAP. 1 1  
SIGNALS AND SYSTEMS 
1.31 
Prove the distributive property of convolution 
To prove the distributive property, we have 
Therefore, 
and the property is established. 
1.32 
Let 
h ( n )  = 3(;)"u(n) - 2(;)"-'u(n) 
be the unit sample response of a linear shift-invariant system. If the input to this system is a unit step, 
1 
n z O  
x ( n )  = 0 
else 
find limn,, 
y ( n )  where y ( n )  = h ( n )  * x ( n ) .  
With 
m 
y(n) = h(n) * x(n) = x 
h(k)x(n - k) 
k=-w 
if x(n) is a unit step, 
Therefore, 
m 
lim y(n) = x 
h(k) 
n-cc 
k=-m 
Evaluating the sum, we have 
1.33 
Convolve 
with a ramp 
The convolution of x(n) with h(n) is 
m 
= z 
[(0.9)~u(k)][(n 
- k)u(n - k)] 
k=-03 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Because u(k) is zero fork < 0, and u(n - k) is zero fork > n, this sum may be rewritten as follows: 
Using the series given in Table 1 - 1, we have 
which may be simplified to 
y (n) = [Ion - 90 + 90(0.9)"]u(n) 
1.34 
Perform the convolution 
y(n) = x(n) * 0) 
when 
h(n) = (;)"u(n) 
and 
x(n) = (i)"[u(n) - u(n - 101)l 
With 
we begin by substituting x(n) and h(n) into the convolution sum 
To evaluate this sum, which depends on n, we consider three cases. First, for n c 0, the sum is equal to zero because 
u(n - k )  = 0 for 0 5 k  5 100. Therefore, 
Second, note that for 0 5 n 5 100, the step u(n - k) is only equal to 1 fork 5 n. Therefore, 
,I+ l 
I - ( f )  
= (f)" 1 - 1  
= 3(;)"[1 - (f)"+'] 

CHAP. 11 
SIGNALS AND SYSTEMS 
Finally, for n 2 100, note that u(n - k )  is equal to I for all k in the range 0 5 k 5 100. Therefore, 
1 - ($O' 
101 
=(f)" 
1 - 2  
= 3(!)"[l - ( f )  ] 
3 
In summary, we have 
1.35 
Let h(n) be a truncated exponential 
and x(n) a discrete pulse of the form 
1 
O s n s 5  
x(n) = 0 
else 
Find the convolution y(n) = h(n) * x(n). 
To find the convolution of these two finite-length sequences, we need to evaluate the sum 
To evaluate this sum, it will be useful to make a plot of h(k) and x(n - k )  as a function of k as shown in the following 
figure: 
Note that the amount of overlap between h(k) and x(n - k )  depends on the value of n .  For example, if n < 0, there 
is no overlap, whereas for 0 5 n 5 5, the two sequences overlap for 0 5 k 5 n. Therefore, in the following, we 
consider five separate cases. 
Case 1 
n -= 0. When n c 0, there is no overlap between h(k) and x(n - k). Therefore, the product 
h(k)x(n - k) = 0 for all k ,  and y(n) = 0. 
Case 2 0 _< n 5 5. For this case, the product h(k)x(n - k )  is nonzero only fork in the range 0 5 k 5 n. 
Therefore, 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Case 3 6 5 n 5 10. For 6 5 n 5 10, all of the nonzero values of x(n - k )  are within the limits of the 
sum. and 
Case 4 
1 I 5 n 5 15. When n is in the range I 1 5 n 5 15, the sequences h(k) and x(n - k )  overlap for 
n - 5 5 k 5 10. Therefore, 
Case 5 
n > 15. Finally, For n > 15, there is again no overlap between h(k) and x(n - k), and the product 
h(k)x(n - k )  is equal to zero for all k. Therefore, y(n) = 0 for n 
15. 
In summary, for the convolution we have 
1.36 
The correlation of two sequences is an operation defined by the relation 
Note that we use a star * to denote correlation and an asterisk * to denote convolution. 
(a) Find the correlation between the sequence x(n) = u(n) - u(n - 6) and h(n) = u(n - 2) - u(n - 5). 
(b) Find the correlation of x(n) = crnu(n) with itself (i.e., h(n) = x(n)). This is known as the autocor- 
relation of x(n). Assume that la1 < 1. 
(a) If we compare the expression for the correlation of x(n) and h(n) with the convolution 
we see that the only difference is that, in the case of convolution, h(k) is time-reversed prior to shifting by n, 
whereas for correlation h ( k )  is shifted without time-reversal. Therefore, with a graphical approach to compute 
the correlation, we simply need to plot x ( k )  and h(k), shift h(k) by n (to the left if n > 0 and to the right if 
n < 0), multiply the two sequences x(k) and h(n + k), and sum the products. Shown in the figure below is a 
plot oFx(k) and h(k). 

CHAP. I] 
SIGNALS AND SYSTEMS 
Denoting the correlation by r,h(n), it is clear that for n = O  the correlation is equal to 3. In fact, this will be 
the value of rrh(n) for - I  5 n 5 2. For n = 3, s ( k )  and h(3 + k )  only overlap at two points, and rrh(3) = 2. 
Similarly, because x(k) and h(4 + k )  only overlap at one point, r,y,1(4) 
= I .  Finally, rrh(n) = 0 for n > 4. 
Proceeding in a similar fashion for n < 0 ,  we find that r,,,(-2) = 2, and r-,,,(-3) = I. The correlation is shown 
in the figure below. 
~ . v I I ( ~ )  
(h) Let r,(n) denote the autocorrelation of .x(n), and note that the autocorrelation is the convolution of x(n) with 
x(-n): 
In addition observe that r,(n) is an even function of n: 
Therefore, it is only necessary to find the values of r ,  (11) for n 1 0. For n 2 0 ,  we have 
Using the symmetry of r,(n), we have, for n < 0, 
Combining these two results together, we finally have 
Difference Equations 
1.37 
Consider a system described by the difference equation 
Find the response of this system to the input 
with initial conditions y ( - I )  = 0.75 and y(-2) = 0.25. 
The first step in solving this difference equation is to find the particular solution. With x(n) = (OS)"u(n), we assume 
a solution of the form 
y,(n) = Cl(0.5)" 
n 2 0 
Substituting this solution into the difference equation, we have 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Dividing by (0.5)". 
CI = 2 c I - 4 C I + o . 5 + 1  
which gives 
c, = ; 
The next step is to find the homogeneous solution. The characteristic equation is 
z 2 - z + l = O  
Therefore, the form of the homogeneous solution is 
yh(n) = 
ein"l> 
~ ~ ~ - 1 n n l 3  
and the total solution becomes 
y(n) = (0.5)"+' + A ,  e~nnl> +2e-in+ 
n z 0  
The constants A1 and A2 must now be found so that the total solution satisfies the given initial conditions, y(-1) = 
0.75 and y(-2) = 0.25. Because the solution given in Eq. (1.25) is only applicable for n > 0, we must derive an 
equivalent set of initial conditions for y(0) and y(l). Evaluating the difference equation for n = 0 and n = I, we 
have 
y(0) = y(- 1) - y(-2) + OSx(0) + O.~X(- I) = 0.75 - 0.25 + 0.5 = 1 
and 
y(l) = y(0) - y(-1) + 0.5~(1) + OSx(0) = 1 - 0.75 + 0.25 + 0.5 = 1 
Now, substituting these derived initial conditions into Eq. (1.25), we have 
y(O) = 0.5 + Al + A2 = I 
y( I) = 0.25 + A ,ei"I3 + ~
~
e
-
~
~
~
~
 
= 1 
Writing this pair of equations in the two unknowns A I and A2 in matrix form, 
and solving, we find 
. ~5 $~jn/3 - 2 
[::I 
= I T  [-teinp+;] 
Substituting into Eq. (1.25) and simplifying, we find, after a bit of algebra. 
An important observation to make about this solution is that. because the difference equation has real coefficients, 
the roots of the characteristic polynomial are in complex-conjugate pairs. This ensures that the unit sample response 
is real. With a real-valued input x(n), the response must be real and, therefore, it follows that A2 will be the complex 
conjugate of A 1 : 
1.38 
A second-order recursive system is described by the LCCDE 
(a) Find the unit sample response h(n) of this system. 
(h) Find the system's response to the input x(n) = u(n) - u(n - 10) with zero initial conditions. 

CHAP. I] 
SIGNALS AND SYSTEMS 
(c) Find the-system's response to the input x ( n )  = (;)"u(n) with zero initial conditions. 
( a )  To find the unit sample response, we must solve the difference equation with x ( n ) = S ( n )  and initial rest 
conditions. The characteristic equation is 
Therefore, the homogeneous solution is 
Because the particular solution is zero when the system input is a unit sample, Eq. (1.26) represents the total 
solution. 
To find the constants A l  and A2, we must derive the initial conditions at n = 0 and n = I. With initial rest 
conditions, y ( -  I) = y(-2) = 0, it follows that 
We may now write two equations in the two unknowns A1 and A2 by evaluating Eq. (1.26) at n = 0 and n = I 
as follows: 
Solving for A l  and A2, we find 
A , = - 2  
A 2 = 3  
Thus, 
y ( n )  = - 2 ( i ) "  + 3($)" 
n 2 o 
and the unit sample response is 
h ( n )  = [ - 2 ( ; ) "  + 3 ( a ) " ] u ( n )  
(b) To find the response of the system to x ( n )  = u ( n )  - u(n - lo), we may proceed in one of two ways. First, we 
may perform the convolution of h(n) with x(n): 
Alternatively, noting that the input is a sum of two steps, we may find the step response of the system, s ( n ) ,  and 
then using linearity. write the response as 
Using this approach, we see from part ( a )  that the step response for n 
0 is 
Evaluating the sums using the geometric series. we find 
Thus, the desired solution is 
11-10 
y ( n )  = s ( n )  - s ( n  - 10) = [ 2 ( f ) "  - ( : ) " ] u ( n )  - [ 2 ( f )  
- ( i ) n - l o ] u ( n  - 10) 

SIGNALS AND SYSTEMS 
[CHAP. I 
(c) With x(n) = (f)"u(n), note that .r(n) has the same form as one of the terms in the homogeneous solution. 
Therefore, the particular solution will not be of the form y,(n) = C(:)" as indicated in Table 1-2. If we were 
to substitute this particular solution into the difference equation, we would find that no value of C would work. 
As is the case when a root of the characteristic equation is of second order, the particular solution has the form 
yp(n) = cn(!)'' 
Substituting this into the difference equation, we have 
Dividing through by ( f  )I1, we have 
Solving for C ,  we find that C = -2. Thus, the total solution is 
We now must solve for the constants A1 and A> As we did in part (a), with zero initial conditions we find that 
y(0) = I and y(l) = $. Therefore, evaluating Eq. (1.27) at 11 = 0 and n = 1, we obtain the following two 
equations in the two unknowns A l  and A2: 
Solving for A1 and Az, we find that A1 = 4 and A2 = 3. Thus, the total solution becomes 
1.39 
A $100,000 mortgage is to be paid off in equal monthly payments of d dollars. Interest, compounded 
monthly, is charged at the rate of 10 percent per annum on the unpaid balance [e.g., after the first month 
the total debt equals ($100,000 + ~ $ l 0 0 , 0 0 0 ) ] .  
Determine the amount of the payment, d, so that the 
mortgage is paid off in 30 years, and find the total amount of payments that are made over the 30-year 
period. 
The total unpaid balance at the end of the nth month. in the absence of any additional loans or payments, is equal 
to the unpaid balance in the previous month plus the interest charged on the unpaid balance for the previous month. 
Therefore, with y(n) the balance at the end of the nth month we have 
where B = 
is the interest charged on the unpaid balance. In addition, the balance must be adjusted by the net 
amount of money leaving the bank into your pocket, which is simply the amount borrowed in the nth month minus 
the amount paid to the bank in the nth month. Thus 
where xb(n) is the amount borrowed in the nth month and xp(n) is the amount paid in the nth month. Combining 
terms, we have 
y(n) - vy(r - 1) = xh(n) - x,,(n) = x(n) 
where v = I + B = 1 + 9, 
and x(n) is the net amount of money in the nth month that leaves the bank. Because 
a principal of p dollars is borrowed during month zero, and payments of d dollars begin with month I, the driving 
function, x(n), is 
x(n) = .wh(n) - .u,,(n) = p8(n) - du(n - 1) 
and the difference equation for y(n) becomes 

CHAP. I] 
SIGNALS AND SYSTEMS 
47 
Because we are assuming zero initial conditions, y(- 1) = 0, and because the input consists of a linear combination 
of a scaled unit sample and a scaled delayed step, the solution to the difference equation is simply 
where h(n) and s(n) are the unit sample and unit step response, respectively. To find the unit sample response, we 
write the difference equation in the form 
The characteristic equation for this difference equation is 
and the homogeneous solution is 
y(n)=Avn 
n > O  
Because the input x(n) = S(n) is equal to zero for n > 0, the particular solution is zero (all that the unit sample does 
is set the initial condition at n = 0). Evaluating the difference equation at n = 0, we have 
Therefore, it follows that A = 1 in the homogeneous solution, and that the unit sample response is 
The step response may now be found by convolving h(n) with u(n): 
Thus, the total solution is 
We now want to find the value of d so thal after 360 equal monthly payments the mortgage is paid off. In other 
words. we want to find d such that 
Solving, ford, we have 
With v = % and p = 100,000, we have 
d = 877.57 
The total payment to the bank after 30 years is 
C = (877.57)(360) = 315,925.20 
1.40 
Every second, each a particle within a reactor splits into eight P particles and each ,L3 particle splits into 
an LY particle and two P particles. Schematically, 
a + 8 P  
P - a + 2 / 3  

SIGNALS AND SYSTEMS 
[CHAP. 1 
Given that there is a single a particle in the reactor at time n = 0, find an expression for the total number 
of particles within the reactor at time n. 
Let a ( n )  and B(n) be the number of a  particles and B particles within the reactor at time n. The behavior within the 
reactor may be described by the following pair of coupled difference equations: 
Before we can solve these difference equations, we must uncouple them. Therefore, let us derive a single difference 
equation for B(n). From the first equation we see that a ( n )  = #?(n - I). Substituting this relation into the second 
difference equation, we have 
B(n+ 1 ) = 8 B ( n -  1)+2B(n) 
or, equivalently, 
B(n) = 2B(n - 0 + 8B(n - 2) 
The characteristic equation for this difference equation is 
which gives the following homogeneous solulion 
Similarly, because a(n) = B(n - I), the solution for a ( n )  is 
With the initial conditions a(0) = I and B(0) = 0, we may solve for A1 and A2 as follows: 
and the solutions for a(n) and B(n) are 
a ( n )  = i(4)" + !(-2)" 
n  2 0  
B ( n )  = :(4)" - ?(-2)" 
3 
n  2 0  
Because we are interested in the total number of particles within the reactor at time n, with 
Supplementary Problems 
Discrete-Time Signals 
1.41 
Find the period N of the sequence 

CHAP. 11 
SIGNALS AND SYSTEMS 
1.42 
The input to a linear shift-invariant system is periodic with period N. 
(a) Show that the output of the system is also periodic with period N. 
(b) If the system is linear but shift-varying, is the output guaranteed to be periodic? 
(c) If the system is nonlinear but shift-invariant, is the output guaranteed to be periodic? 
1.43 
If x(n) = 0 for n < 0, and the odd part is x,,(n) = n(0.5)1n1, 
find x(n) given that x(0) = 1. 
1.44 
Find the conjugate symmetric part of the sequence 
1.45 
If x(n) is odd, what is y(n) = x2(n)? 
1.46 
If x(n) = 0 for n < 0, Pe is the power in the even part of x(n), and Po is the power in the odd part, which of the 
following statements are true? 
(a) Pc ? Po 
(b) Po 2 Pe 
(c) Pe = Po 
(d) None of the above are true. 
1.47 
Express the sequence 
( - 1  
-2 5 11 5 2 
x(n) = (0 
else 
as a sum of scaled and shifted unit steps. 
1.48 
Synthesize the triangular pulse 
as a sum of scaled and shifted pulses, 
Discrete-Time Systems 
1.49 
Listed below are several systems that relate the input x(n) to the output y(n). For each, determine whether the 
system is linear or nonlinear, shift-invariant or shift-varying, stable or unstable, causal or noncausal, and invertible 
or noninvertihle. 
(e) y(n) = median(x(n - l), x(n), x(n + I)) 

SIGNALS AND SYSTEMS 
[CHAP. 1 
Given below are the unit sample responses of several linear shift-invariant systems. For each system, determine the 
conditions on the parameter a in order for the system to be stable. 
(a) h(n) = anu(-n) 
(h) h(n) = a"[u(n) - u(n - 100)) 
(c) h(n) = aInl 
Is it true that all memoryless systems are shift-invariant? 
Consider the linear shift-invariant system described by the first-order linear constant coefficient difference equation 
y ( n )  = uy(n - I )  + x ( n )  
Determine the conditions (if any) for which this system is stable. 
Suppose that two systems, SI and SZ, 
are connected in parallel. 
(a) If both S, and Sz are linear, shift-invariant, stable. and causal, will the parallel connection always be linear, 
shift-invariant, stable. and causal? 
(h) If both S, and Sz are nonlinear. will the parallel connection necessarily be nonlinear? 
(c) If both SI and S2 are shift-varying, will the parallel connection necessarily be shift-varying? 
Convolution 
Find the convolution of the two sequences 
s ( n )  = 6(n - 2 )  - 26(n - 4 )  + 36(n - 6) 
h(n) = 2S(n + 3 )  + S(n) + 26(n - 2 )  + 6(n 
The unit sample response of a linear shift-invariant system is 
h(n) = 36(n - 3) + 0.5S(n - 4 )  + 0.26(n - 5 )  + 0.76(n. 
Find the response of this system to the input x ( n )  = u(n - I). 
A linear shift-invariant system has a unit sample response 
h ( n )  = u(-n) 
Find the output if the input is 
A-(n) = (i)"rc(n) 
The step response of a system is defined as the response of the system to a unit step u(n). 
(a) Let s(n) be the step response of a linear shift-invariant system. Express s(n) in terms of the unit sample response 
h(n), and find s(n) when h(n) = u ( n )  - u(n - 6). 
(b) Derive an expression for h(n) in terms of s(n) and find the unit sample response For a system whose step 
response is 
The unit sample response of a linear shift-invariant system is shown below. 

CHAP. 11 
SIGNALS AND SYSTEMS 
(a) Find the response of the system to the input u(n - 4). 
(6) Repeat for x(n) = (-l)"u(n). 
If x(n) = (i)"u(n - 2) and h(n) = 2"u(-n - 5), find the convolution y(n) = x(n) * h(n). 
Given three sequences, h(n), g(n), and r(n), express g(n) in terms of r ( n )  if 
Let h(n) = anu(n) and x(n) = bnu(n). Find the convolution y(n) = x(n) * h(n) assuming that a # 6. 
If x(n) = anu(n), find the convolution y(n) = x(n) * x(n). 
The input to a linear shift-invariant system is the unit step, x(n) = u(n), and the response is y(n) = S(n). Find the 
unit sample response of this system. 
If h(n) = A6(n) +( f )"u(n) is the unit sample response of a linear shift-invariant system, and s(n) is the step response 
(the response of the system to a unit step), find the value of the constant A so that lim,,, 
s(n) = 0. 
The unit sample response of a linear shift-invariant system is 
Find the response of the system to the complex exponential x(n) = exp(jnrr/4). 
Evaluate the convolution of the sequence x(n) = n(i)"cos(rrn) with the unit step, h(n) = u(n). 
Let 
n(0.5)" 
0 5 n 5 5 
n c O  
and h(n) = ej%"u(-n). If y(n) = x(n) * h(n), what is the numerical value of y(-2)? 
Given 
and h(n) = S(n - 2) + S(n - 3 )  + 6(n - 4), at what value of n will the convolution y(n) = x(n) * h(n) attain its 
maximum value, and what is this maximum value? 
A linear system has a response hk(n) = S(2n - k )  to the unit sample 6(n - k). Find the response of the system to 
the input x(n) = u(n). 
Consider the interconnection of three linear shift-invariant systems shown in the figure below. 
- 
hAn) 
1 I  
- 
x(n) : 
(+> = 
~ ( n )  
11 
h ~ ( n )  
+ 
+ 
- - 
h3(n) 

SIGNALS AND SYSTEMS 
[CHAP. 1 
If hl(n) = u(n - 2), hn(n) = nu@) and h3(n) = 6(n - 2). find the unit sample response of the overall system. 
Difference Equations 
1.71 
Consider the linear shift-invariant system described by the LCCDE 
y(n) = -iy(n - I) +2x(n) 
Find the response of this system to the input 
2 
n = 0 , 2 , 4 , 6  ,... 
x(n) = 0 
otherwise 
Hint: Write x(n) as (1 + (-1)") u(n) and use linearity. 
1.72 
Consider a system with input x(n) and output y(n) that satisfies the difference equation 
y(n) = ny(n - I) + x(n) 
If x(n) = 6(n), determine y(n) for all n. 
1.73 
A linear shift-invariant system is described by the LCCDE 
y(n)-5y(n - I)+6y(n -2) =x(n - 1) 
Find the step response of the system (i.e., the response to the input x(n) = u(n)). 
1.74 
A system is characterized by the difference equation 
If the input is x(n) = 2u(n) - 3nu(n), find the response of the system assuming initial conditions of y(-1) = 2 and 
y(-2) = 1. 
1.75 
Consider the system described by the difference equation 
y(n) - y(n - 1) + 0.25y(n - 2) = x(n) - 0.25x(n - 1) 
(a) Find the unit sample response of the system. 
(b) Find the response of the system to x(n) = (0.25)"u(n). 
1.76 
For a savings account that pays interest at the rate of I percent per month, if deposits are made on the first of each 
month at the rate of $50 per month, how much money will there be in the account at the end of 1 year? 
1.77 
A savings account pays interest at the rate of 1 percent per month. With an initial deposit of $50, how much will 
there be in the account after 10 years? 
Answers to Supplementary Problems 
1.42 
(a) If x(n) = x(n + N), by shift-invariance, y(n) = y(n + N). Therefore, y(n) is periodic with period N. 
(b) No. (c) Yes. 

CHAP. 11 
SIGNALS AND SYSTEMS 
1.45 
Even. 
1.46 
(a) is true. 
1.49 
(a) Linear, shift-varying, stable, noncausal, noninvertible. (6) Linear, shift-varying, unstable, noncausal, 
invertible. (c) Linear, shift-invariant, stable. noncausal, invertible. (d) Nonlinear, shift-invariant, stable, causal, 
invertible. ( 0 )  Nonlinear, shift-invariant, stable, noncausal, noninvertible. 
1.50 
(a) la1 
1. (6) Any finite a. ( c )  la[ < 1. 
1.51 
No. Consider the system y(n) = x(n)cos(nr/2). 
1.53 
(a) Yes. (6) No. (c) No. 
1.54 
The sequence values. beginning at index n = -I, are y(n) = {2,0, -4, 1,6,0, I ,  -1, -2,6,3). 
n 
1.57 
(a) s(n) = 
h(k). With h(n) = u(n) - u(n - 6) the step response is 
k=-cc 
(6) h(n) = s(n) - s(n - 1). If s(n) = (-0.5)nu(n), then h(n) = S(n) + 3(-0.5)"u(n - 1). 
1.58 
(a) y(n) = S(n - 2) + 2S(n - 3) - 2S(n - 5) - S(n - 6). 
(b) y(n) = S(n + 2) - 26(n) + S(n - 2). 
bn+l - an+l 
1.61 
y(n) = -- 
h - a  
u(n). 
1.63 
h(n) = S(n) - S(n - I). 

54 
SIGNALS AND SYSTEMS 
[CHAP. 1 
y(n) = [(4n + 3)(-i)" - 3]u(n). 
y(-2) = 17 - j n s *  
4 
32 
max(y(n)] = y, which occurs at index n = 8. 
y(n) = 4 n ) .  
Y @ )  = u(n - 4 )  + f (n - 2)(n - 1) u(n - 2). 
y(n) = [4(-1)" + - !(-f)"]u(n). 
y(n) = n! u(n). 
~ ( n )  
= [i + (;)(3)" - 2(2")]u(n). 
~ ( n )  
= [lj?.[4" - 11 - 4n + 12(2)"]u(n). 
( 0 )  h(n) = [ i n  + ~ ] ( i ) ~ u ( n ) .  
(b) y(n) = (n + I )(f)nu(n). 
$690.46. 
$165.02. 

Chapter 2 
Fourier Analysis 
2.1 INTRODUCTION 
The Fourier representation of signals plays an extremely important role in both continuous-time and discrete-time 
signal processing. It provides a method for mapping signals into another "domain" in which to manipulate them. 
What makes the Fourier representation particularly useful is the property that the convolution operation is mapped 
to multiplication. In addition, the Fourier transform provides a different way to interpret signals and systems. 
In this chapter we will develop the discrete-time Fourier transform (i.e., a Fourier transform for discrete-time 
signals). We will show how complex exponentials are eigenfunctions of linear shift-invariant (LSI) systems 
and how this property leads to the notion of a frequency response representation of LSI systems. Finally, we 
will explore how the discrete-time Fourier transform may be used to solve linear constant-coefficient difference 
equations and perform convolutions. 
2.2 FREQUENCY RESPONSE 
Eigenfunctions of linear shift-invariant systems are sequences that, when input to the system, pass through with 
only a change in (complex) amplitude. That is to say, if the input is x(n), the output is y(n) = kx(n), where A, 
the eigenvalue, generally depends on the input x(n). 
Signals of the form 
~ ( n )  
= ejnw 
- 0 0 € n < c a  
where w is a constant, are eigenfunctions of LSI systems. This may be shown from the convolution sum: 
Thus, the eigenvalue, which we denote by H (elw), is 
Note that H(eJw) is, in general, complex-valued and depends on the frequency w of the complex exponential. 
Thus, it may be written in terms of its real and imaginary parts. 
or in terms of its magnitude and phase, 

56 
FOURIER ANALYSIS 
[CHAP. 2 
where 
(fi(eJ")12 = H(eJ")FZ*(e~") = ~ i ( e j " )  + H;(ejo) 
and 
Graphical representations of the frequency response are of great value in the analysis of LSI systems, and 
plots of the magnitude and phase are commonly used. However, another useful graphical representation is a plot 
of 20 log1 H(eJ")I versus o. 
The units on the log magnitude scale are decibels (abbreviated dB). Thus, 0 dB corre- 
sponds to a value of 1H(ejW)l = 1,20dB is equivalent to 1H(ejw)l = 10, -20dB is equivalent to IH(ejU)l = 0.1, 
and so on. It is also useful to note that 6 dB corresponds approximately to I H (eJ")( = 2, and -6 dB is approxi- 
mately I H(eJW)l = 0.5. One of the advantages of a log magnitude plot is that, because the logarithm expands the 
scale for small values of (H(ej")(, it is useful in displaying the fine detail of the frequency response near zero. 
A graphical representation that is often used instead of the phase is the group delay, which is defined as 
follows: 
In evaluating the group delay, the phase is taken to be a continuous and differentiable function of w by adding 
integer multiples of n to the principal value of the phase (this is referred to as unwrapping the phase). 
The function ~ ( e j " )  is very useful and important in the characterization of LSI systems and is called 
the frequency response. The frequency response defines how a complex exponential is changed in (complex) 
amplitude when it is filtered by the system. The frequency response is particularly useful if we are able to 
decompose an input signal into a sum of complex exponentials. For example, the response of an LSI system to 
an input of the form 
N 
x(n) = C crkejn" 
k= l 
will be 
y (n) = 
ak H (ej"~ )ejnwk 
where H(ejw) is the frequency response of the system evaluated at frequency on. 
EXAMPLE 2.2.1 
Let x ( n )  = cos(n*) be the input to a linear shift-invariant system with a real-valued unit sample 
response h(n). If x(n) is decomposed into a sum of two complex exponentials, 
the response of the system may be written as 
Because h(n) is real-valued, H(eJW) 
is conjugate symmetric: 
Therefore, 
and it follows that 

CHAP. 21 
FOURIER ANALYSIS 
57 
Periodicity 
The frequency response is a complex-valued function of w and is periodic with a period 23r. This is in sharp 
contrast with the frequency response of a linear time-invariant continuous-time system, which has a frequency 
response that is not periodic, in general. The reason for this periodicity stems from the fact that a discrete-time 
complex exponential of frequency oo is the same as a complex exponential of frequency wo + 23r; that is, 
Therefore, if the input to a linear shift-invariant system is x(n) = ejnWO, the response must be the same as the 
response to the signal s(n) = eJn(w+2n). 
This, in turn, requires that 
~ ( ~ j " o )  
= f j  (ej(w0+2") ) 
Symmetry 
If h(n) is real-valued, the frequency response is a conjugate symmetric function of frequency: 
H (e- j w )  = H *(e j w )  
Conjugate symmetry of H(ejW) implies that the real part is an even function of w, 
HR(ejW) = HR(eCi") 
and that the imaginary part is odd, 
Hl(ejW) = - ~ [ ( e - j " )  
Conjugate symmetry also implies that the magnitude is even, 
I H (ejW)l = I H (e- j") 
1 
and that the phase and group delay are odd, 
EXAMPLE 2.2.2 Consider the LSI system with unit sample response 
where a is a real number with la1 < I. The frequency response is 
The squared magnitude of the frequency response is 
and the phase is 
H1(eiw) - tan-, -a sin o 
A(@) 
= tan-' - 
- 
HR(e 
j w )  
I -acosw 
Finally, the group delay is found by differentiating the phase. The result is 

5 8 
FOURIER ANALYSIS 
[CHAP. 2 
Inverting the Frequency Response 
Given the frequency response of a linear shift-invariant system, 
the unit sample response may be recovered by integration: 
The integral may be taken over any period of length 2n. 
EXAMPLE 2.2.3 For a system with a frequency response given by 
(this system is referred to as an ideal low-pass filter), the unit sample response is 
JWC 
1 
sin nu, 
h(n) = - 
eJ"Wdo = -[eJ""c 
- e-i""c] = - 
2~ -, 
2jrcn 
rc n 
Note that this system is noncausal (it is also unstable) and, therefore, unrealizable. 
2.3 FILTERS 
The term digitalfilter, or simply filter, is often used to refer to a discrete-time system. A digital filter is defined 
by J. E Kaiser1 as a ". . . computational process or algorithm by which a sampled signal or sequence of numbers 
(acting as the input) is transformed into a second sequence of numbers termed the output signal. The computa- 
tional process may be that of lowpass filtering (smoothing), bandpass filtering, interpolation, the generation of 
derivatives, etc." 
Filters may be characterized in terms of their system properties, such as linearity, shift-invariance, causality, 
stability, etc., and they may be classified in terms of the form of their frequency response. Some of these 
classifications are described below. 
Linear Phase 
A linear shift-invariant system is said to have linear phase if its frequency response is of the form 
~ ( e i " )  = A(ejw)e-jaw 
where ar is a real number and ~ ( e j " )  is a real-valued function of w. Note that the phase of H(ei") is 
i-"" 
when A(ejw) > 0 
9h(W) = -a0 + n 
when A(eJY) c 0 
Similarly, a filter is said to have generalized linear phase if the frequency response has the form 
~ ( ~ j " )  
= ~ ( ~ i w ) ~ - i W - B )  
Thus, filters with linear phase or generalized linear phase have a constant group delay. 
'system Analysis by Digital Computer. F. F. Kuo and J. F. Kaiser, Eds.. John Wiley and Sons, New York. 1966 

FOURIER ANALYSIS 
All pass 
A system is said to be allpass filter if the frequency response magnitude is constant: 
1H(eJ")l = c 
An example of an allpass filter is the system that has a frequency response 
where ct is any real number with la1 < I. The unit sample response of this allpass filter is 
h(n) = -a8(n) + (1 - ct2)an-'u(n - 1) 
Frequency Selective Filters 
Many of the filters that are important in applications have piecewise constant frequency response magnitudes. 
These include the low-pass, high-pass, bandpass, and bandstop filters that are illustrated in Fig. 2-1. The intervals 
over which the frequency response magnitude is equal to 1 are called the passbands, and the intervals over which 
it is equal to 0 are called the stopbands. The frequencies that mark the edges of the passbands and stopbands are 
the cutofffrequencies. 
1 H(eiW)l 
lH(eiW)l 
-n xw 
- o r  (a) Ideal low-pass W C  
filter. -2kw
(b) Ideal high-pass filter. 
-n 
-
a
=
-
w
 
-0.q 
(c) 
- W I  Ideal bandpass 
W I  
filrer. 
02 
--. 
(d) Ideal bandstop filter. 
Fig. 2-1. 
Ideal filters. 
2.4 INTERCONNECTION OF SYSTEMS 
Filters are often interconnected to create systems that have desirable properties. Two common types of connec- 
tions are series (cascade) and parallel. A cascade of two linear shift-invariant systems is shown in the figure below. 
A cascade is equivalent to a single linear shift-invariant system with a unit sample response 

60 
FOURIER ANALYSIS 
[CHAP. 2 
and a frequency response 
H (el") = H l ( e j W ) ~ 2 ( e J W )  
Note that the log magnitude of the cascade is the sum of the log magnitudes of the individual systems, 
and the phase and group delay are additive, 
A parallel connection of two linear shift-invariant systems is shown in the figure below. 
A parallel network is equivalent to a single linear shift-invariant system with a unit sample response 
Therefore, the frequency response of the parallel network is 
EXAMPLE 2.4.1 
The cascade of a low-pass filter with a high-pass filter may be used to implement a bandpass filter. For 
example, the ideal bandpass filter shown inFig. 2- I(c) may be realized by cascading a low-pass filter with acutoff frequency y 
with a high-pass filter that has a cutoff frequency w,. Similarly, the bandstop filter shown in Fig. 2-l(d) may be realized with a 
parallel connection of a low-pass filter with cutoff frequency w1 and a high-pass filter with a cutoff frequency y, 
with y > wl . 
Another interconnection of systems that is commonly found in control applications is the feedback network 
shown in the figure below. 

CHAP. 21 
FOURIER ANALYSIS 
61 
we may use the Fourier analysis techniques described in the following section to show that the frequency response 
of this system, if it exists, is2 
2.5 THE DISCRETE-TIME FOURIER TRANSFORM 
The frequency response of a linear shift-invariant system is found by multiplying h(n) by a complex exponential, 
e-Jn", and summing over n. The discrete-time Fourier transform (DTFT) of a sequence, x(n), is defined in the 
same way, 
Thus, the frequency response of a linear shift-invariant system, ~ ( e j " ) ,  is the DTFT of the unit sample response, 
h(n). In order for the DTFT of a sequence to exist, the summation in Eq. (2.3) must converge. This, in turn, 
requires that x(n) be absolutely summable: 
EXAMPLE 2.5.1 
The DTFT of the sequence 
Using the geometric series, this sum is 
iw - 
Xl(e ) - 1 - 
ae-jw 
provided la( < 1. Similarly, for the sequence 
the DTFT is 
Changing the limits on the sum, we have 
If la1 > 1, this sum is 
1 
1 
X2(e1") = - 
+ I =  
1 - a-Iejw 
1 - ae-1" 
Therefore, x,(n) = anu(n) and x2(n) = -anu(-n - I) both have the same DTFT. 
2 ~ t  
is possible that g(n) will make the system unstable, in which case the DTFT of h(n) will not exist. Feedback systems are typically 
analyzed using z-transforms. 

62 
FOURIER ANALYSIS 
[CHAP. 2 
Given X(eJw), the sequence x ( n )  may be recovered using the inverse DTFT, 
The inverse DTFT may be viewed as adecomposition of x ( n )  into alinear combination of all complex exponentials 
that have frequencies in the range -17 i 
w 5 IT. Table 2- 1 contains a list of some useful DTFT pairs. 
Table 2-1 Some Common DTFT Pairs 
Sequence 
Discrete-Time Fourier Transform 
6(n) 
S(n - no) 
1 
eJ"wO 
anu(n), la1 < I 
-anu(-n - I ) ,  
la1 > 1 
(n + I)anu(n), la1 < 1 
EXAMPLE 2.5.2 
Suppose X(eJ") consists of an impulse at frequency w = wo: 
X(eJ") = 6(w - wO) 
Using the inverse DTFT, we have 
Note that although x(n) is not absolutely summable, by allowing the DTFT to contain impulses, we may consider the DTFT 
of sequences that contain complex exponentials. As another example, if 
X(eJ") = r 6 ( w  - 9) + r8(w + 9) 
computing the inverse DTFT, we find 
x ( n )  = i e j w  + ie-l"wo = cos(nwo) 
2.6 DTFT PROPERTIES 
There are a number of properties of the DTFT that may be used to simplify the evaluation of the DTFT and its 
inverse. Some of these properties are described below. A summary of the DTFT properties appears in Table 2-2. 
Periodicity 
The discrete-time Fourier transform is periodic in w with a period of 2n: 
~
(
~
j
w
)
 
= x (,jW+zx) 1 
This property follows directly from the definition of the DTFT and the periodicity of the complex exponentials: 

CHAP. 21 
FOURIER ANALYSIS 
Table 2-2 Properties of the DTFT 
Property 
Linearity 
Shift 
Time-reversal 
Modulation 
Convolution 
Conjugation 
Derivative 
Multiplication 
Sequence 
Discrete-Time Fourier Transform 
Note: Given the DTFTs X ( e J W )  and Y ( e J W )  of x ( n )  and y(n), this table lists the 
DTFTs of sequences that are formed from x ( n )  and y(n). 
Symmetry 
The DTFT often has some symmetries that may be exploited to simplify the evaluation of the DTFT or the 
inverse DTFT. These properties are listed in the table below. 
Real and even 
Real and odd 
Imaginary and even 
Note that these properties may be combined. For example, if x(n) is conjugate symmetric, its real part is 
even and its imaginary part is odd. Therefore, it follows that X(eJW) is real-valued. Similarly, note that if x(n) 
is real, the real part of x(ejw) is even and the imaginary part is odd. Thus, X(ejw) is conjugate symmetric. 
Linearity 
The discrete-time Fourier transform is a linear operator. That is to say, if X 1 (ejw) is the DTFT of xl(n), and 
X2(eJw) is the DTFT of x2(n), 
Real and even 
Imaginary and odd 
Imaginary and even 
Imaginary and odd 
Shifting Property 
Real and odd 
Shifting a sequence in time results in the multiplication of the DTFT by a complex exponential (linear phase 
term): 
DTFT 
- j n o w x  ejw 
x(n --no) 
e 
( 
) 
Time-Reversal 
Time-reversing a sequence results in a frequency reversal of the DTFT : 

64 
FOURIER ANALYSIS 
[CHAP. 2 
Modulation 
Multiplying a sequence by a complex exponential results in a shift in frequency of the DTFT : 
ejnwx(n) !EJ 
x(,j(w-w)) 
Thus, modulating a sequence by a cosine of frequency % shifts the spectrum up and down in frequency by oo: 
Convolution Theorem 
Perhaps the most important result in linear systems theory is that convolution in the time domain is equivalent 
to multiplication in the frequency domain. Specifically, this theorem says that the DTFT of a sequence that is 
formed by convolving two sequences, x(n) and h(n), is the product of the DTFTs of x(n) and h(n): 
Multiplication (Periodic Convolution) Theorem 
As with the time-shift and modulation properties, there is a dual to the convolution theorem that states that 
multiplication in the time domain corresponds to (periodic) convolution in the frequency domain: 
Parseval's Theorem 
A corollary to the multiplication theorem is Parseval's theorem, which is 
Parseval's theorem is referred to as the conservation of energy theorem, because it states that the DTFT operator 
preserves energy when going from the time domain into the frequency domain. 
2.7 APPLICATIONS 
In this section, we present some applications of the DTFT in discrete-time signal analysis. These include finding 
the frequency response of an LSI system that is described by a difference equation, performing convolutions, 
solving difference equations that have zero initial conditions, and designing inverse systems. 
2.7.1 LSZ Systems and LCCDEs 
An important subclass of LSI systems contains those whose input, x(n), and output, y(n), are related by a linear 
constant coefficient difference equation (LCCDE): 
The linearity and shift properties of the DTFT may be used to express this difference equation in the frequency 
domain as follows: 
P 
4 
y(eJw) = - z 
a(k)e-jkwy (ejw) + z 
b ( k ) e - ~ * ~ x ( e ~ ~ )  
k= l 
k=O 

CHAP. 21 
FOURIER ANALYSIS 
Therefore, the frequency response of this system is 
EXAMPLE 2.7.1 
Consider the linear shift-invariant system characterized by the second-order linear constant coefficient 
difference equation 
The frequency response may be found by inspection without solving the difference equation for h(n) as follows: 
Note that this problem may also be worked in the reverse direction. For example, given a frequency response function such as 
a difference equation may be easily found that will implement this system. First, dividing numerator and denominator by 2 
and rewriting the frequency response as follows, 
we see that a difference equation for this system is 
2.7.2 
Performing Convolutions 
Because the DTFT maps convolution in the time domain into multiplication in the frequency domain, the DTFT 
provides an alternative to performing convolutions in the time domain. The following example illustrates the 
procedure. 
EXAMPLE 2.7.2 If the unit sample response of an LSI system is 
let us find the response of the system to the input x(n) = Bnu(n), where (a1 < 1, 
< 1, and a # B. Because the output of 
the system is the convolution of x(n) with h(n), 
y(n) = h(n) * x(n) 
the DTFT of y (n) is 
1 
1 
Y(eJW) = H(eJwW(eJw) = - cue-jw , - B - 
Therefore, all that is required is to find the inverse DTFT of Y (el"). This may be done easily by expanding Y (ej") as follows: 

66 
FOURIER ANALYSIS 
[CHAP. 2 
where A and B are constants that are to be determined. Expressing the right-hand side of this expansion over a common 
denominator, 
and equating coefficients, the constants A and B may be found by solving the pair of equations 
The result is 
Therefore, 
and it follows that the inverse DTFT is 
2.73 Solving Difference Equations 
In Chap. 1 we looked at methods for solving difference equations in the "time domain." The DTFT may be 
used to solve difference equations in the "frequency domain" provided that the initial conditions are zero. The 
procedure is simply to transform the difference equation into the frequency domain by taking the DTFT of each 
term in the equation, solving for the desired term, and finding the inverse DTFT. 
EXAMPLE 2.7.3 Let us solve the following LCCDE for y(n) assuming zero initial conditions, 
for x ( n )  = &). 
We begin by taking the DTFT of each term in the difference equation: 
Because the DTFT of x ( n )  is X ( e j w )  = 1, 
Using the DTFT pair 
the inverse DTFT of Y (ej") may be easily found using the linearity and shift properties, 
2.7.4 Inverse Systems 
The inverse of a system with unit sample response h(n) is a system that has a unit sample response g(n) such that 

CHAP. 21 
FOURIER ANALYSIS 
In terms of the frequency response, it is easy to see that, if the inverse of H ( e J m )  exists, it is equal to 
Care must be exercised, however, because not all systems are invertible or, if the inverse exists, it may be 
noncausal. For example, the ideal low-pass filter in Example 2.2.3 does not have an inverse, and the inverse of 
the system 
~ ( e j " ' )  
= 1 - 2e-jm 
which corresponds to a system that has a noncausal unit sample response 
g(n) = -2Tnu(-n - 1 )  
EXAMPLE 2.7.4 
If the frequency response of an LSI system is 
the inverse system is 
which has a unit sample response 
g(n) = (0.25)"u(n) + OS(0.25)"-'u(n - 1) 
Solved Problems 
Frequency Response 
2.1 
Let h(n) be the unit sample response of an LSI system. Find the frequency response when 
(a) h(n) = 6(n) + 66(n - 1) + 3S(n - 2 )  
1 n+2 
(b) h(n) = (T) u(n - 2). 
(a) This system has a unit sample response that is finite in length. Therefore, the frequency response is a polynomial 
in ej", with the coefficients of the polynomial equal to the values of h(n): 
~ ( e j " )  = 1 + 6e-I" + 3e-'jW 
This may be shown more formally by writing 
Because 
then 

FOURIER ANALYSIS 
[CHAP. 2 
(6) For the second system, the frequency response is 
Changing the limits on the sum so that it begins with n = 0, 
we have 
Using the geometric series, we find 
2.2 
An Lth-order moving average filter is a linear shift-invariant system that, for an input x(n), produces the 
output 
Find the frequency response of this system. 
If the input to the moving average filter is x(n) = S(n), the response, by definition, will be the unit sample response, 
h(n). Therefore, 
and 
Using the geometric series, we have 
Factoring out a term e-j'L+')w/2 from the numerator, and a term e - ~ " / ~  
from the denominator, we have 
1 ,,,,, sin(L + 1 1 4 2  
H(eJW) = ~
f
l
e
 
sin 0 / 2  
2.3 
The input to a linear shift-invariant system is 
Find the output if the unit sample response of the system is 
sin[(n - l)x/2] 
h(n) = 2 
(n - 1)x 
This problem may be solved using the eigenfunction property of LSI systems. Specifically, as we saw in Exam- 
ple 2.2.1, if the input to an LSI system is x(n) = cos(nq,), the response will be 
~ ( n )  
= lH(eiw0)l cos(nwo + #dm)) 

CHAP. 21 
FOURIER ANALYSIS 
69 
Therefore, we need to find the frequency response of the system. In Example 2.2.3, it was shown that the unit sample 
response of an ideal low-pass filter, 
sin nw, 
h i @ )  = - 
?7 n 
Because h(n) = 2hl (n - 1) with w, = 1712, an expression may be derived for H(eJW) 
in terms of H ,  (ej") as follows: 
Therefore, 
Because IH(elw)( = 0 at w = 31714, the sinusoid in x(n) is filtered out, and the output is simply 
2.4 
Find the magnitude, phase, and group delay of a system that has a unit sample response 
h(n) = S(n) - cd(n - I )  
where ol is real. 
The frequency response of this system is 
Therefore, the magnitude squared is 
The phase, on the other hand, is 
H[(eJW) 
a sin w 
gh (w) = tan-' ---- = tanp' 
HR(eiw) 
1 -crcosw 
Finally, the group delay may be found by differentiating the phase (see Prob. 2.19). Alternatively, we may note that 
because this system is the inverse of the one considered in Example 2.2.2, the phase and the group delay are simply 
the negative of those found in the example. Therefore, we have 
2.5 
A 90" phase shifter is a system with a frequency response 

FOURIER ANALYSIS 
[CHAP. 2 
Note that the magnitude is constant for all o, 
and the phase is -n/2 for 0 < o < n and n/2 for 
-IT < w < 0. Find the unit sample response of this system. 
The unit sample response may be found by integration: 
Therefore, we have 
which may also be expressed as 
I' 
n odd 
h(n) = 
n n  
n even 
Filters 
2.6 
Let h(n) be the unit sample response of a low-pass filter with a cutoff frequency o, 
What type of filter has a unit sample response g(n) = (- l)"h(n)? 
If a filter with a unit sample response h(n) is implemented with a difference equation of the form 
how should this difference equation be modified to implement the system that has a unit sample 
response g(n) = (- 1)" h(n)? 
Given that g(n) = (- l)"h(n), the frequency response G(eJU) is related to the frequency response of the low-pass 
filter, H(eJU), as follows: 
Therefore, G(ejU) is formed by shifting ~ ( e j " )  in frequency by 7r. Thus, if the passband of the low-pass filter 
is lo[ 5 w,, the passband of G(ejU) will be n - w, < Iwl 
n .  As a result, it follows that g(n) is the unit 
sample response of a high-pass filter. 
If a filter with a unit sample response h(n) may be realized by the difference equation given in Eq. (2.7). the 
frequency response of the filter is 
H(eJw) = 
k=O 
Multiplying h(n) by (-1)"produces a system with a frequency response 

CHAP. 21 
Because eJkn = (- I)), 
FOURIER ANALYSIS 
and the difference equation becomes 
That is. the coefficients a(k) and b(k) fork odd are negated, 
2.7 
Let H(eJm) be the frequency response of an ideal low-pass filter with a cutoff frequency wc as shown in 
the figure below. 
Assume that the phase is linear, #h(w) = -now. Determine whether or not it is possible to find an input 
x(n) and a cutoff frequency w, < n that will produce the output 
I 
1 
n = 0 , 1 ,  ..., 20 
= 0 
otherwise 
If X(eJo) is the DTFT of x(n), the output of the low-pass filter will have a DTFT 
Therefore, Y (do) must be equal to zero for w,. 5 lo( 5 n. However, the DTFT of y(n) is 
which is not zero for w, p lo1 5 n. Therefore, there is no value for w, < n, and no input x(n) that will generate 
the given output y(n). 
2.8 
Let h(n) be the unit sample response of an ideal low-pass filter with acutoff frequency wc = n/4. Shown in 
the figure below is a linear shift-invariant system that is formed from a cascade of a low-pass filter and two 
modulators. Find the frequency response of the overall system relating the input x(n) to the output y(n). 
There are two ways that we may use to find the frequency response of this system. The first is to note that because 
the input to the low-pass filter is (- I)"x(n), the output of the low-pass filter is 

FOURIER ANALYSIS 
[CHAP. 2 
Therefore. 
Bringing the term (-1)" inside the summation, and using the fact that (-I)"-~ = (- 
we have 
Thus, the unit sample response of the overall system is (- I)"h(n), and the frequency response is 
10 
otherwise 
Another way to determine the frequency response is to find the response of the system to a complex exponential, 
x(n) = eln'". Modulating by (-1)" = e-inn produces the sequence 
which is the input to the LSI system. Because u(n) is a complex exponential, the response of the system to v(n) is 
it follows that the frequency response of the overall system is H (d('"-"') as we found before. 
2.9 
If h(n) is the unit sample response of an ideal low-pass filter with a cutoff frequency w, = n/4, find the 
frequency response of the filter that has a unit sample response g(n) = h(2n). 
To find the frequency response of this system. we may work the problem in one of two ways. The first is to note that 
because the unit sample response of an ideal low-pass filter with a cutoff frequency w,. = n / 4  is 
then 
which is the unit sample response of a low-pass filter with a magnitude of 4 and a cutoff frequency w = n/2. The 
second way to work this problem is to find the frequency response of the system that has a unit sample response 
g(n) = h(2n), given that H(el'") is the frequency response of a system with a unit sample response h(n). Although 
more difficult than the first approach. this will give a general expression for the frequency response G(eJw) in terms 
of H(ejw) that may be applied to any system. To find the frequency response, we must evaluate the sum 
Using the identity 
I 
2 
n even 
I +(-I)" = 0 
n odd 
we may write the frequency response as 

CHAP. 21 
FOURIER ANALYSIS 
In terms of H ( d w ) ,  the first term may be written as 
whereas the second term is 
With ~ ( e j ~ )  
the frequency response of a low-pass filter with a cutoff frequency w, = n/4, this gives the same result 
as before. 
2.10 
Consider the high-pass filter that has a cutoff frequency w, = 3n/4 as shown in the following figure: 
(a) Find the unit sample response, h(n). 
(h) A new system is defined so that its unit sample response is hl(n) = h(2n). Sketch the frequency 
response, HI 
(ej"), of this system. 
(a) The unit sample response may be found two different ways. The first is to use the inverse DTFT formula and 
perform the integration. The second approach is to use the modulation property and note that if 
3r 
I 
for lo[ 5 - 
HIp(eJW) = 
4 
0 
otherwise 
H(eJu) may be written as 
H ( @ )  = HIp(eJ("-"' 1 
Therefore, it follows from the modulation property that 
h(n) = eJn"hlp(n) = (-l)"hlp(n) 
With 
we have 
(6) The frequency response of the system that has a unit sample response h I ( n )  = h(2n) may be found by evaluating 
the discrete-time Fourier transform sum directly: 
n=-00 
n=-m 
n even 

FOURIER ANALYSIS 
[CHAP. 2 
However, an easier approach is to note that 
which is a low-pass filter with a cutoff frequency of n/2 and a gain of f .  A plot of H , ( ~ J " )  
is shown in the 
following figure: 
Interconnection of Systems 
2.11 
The ideal filters that have frequency responses as shown in the figure below are connected in cascade. 
For an arbitrary input x(n), find the range of frequencies that can be present in the output y(n). Repeat 
for the case in which the two systems are connected in parallel. 
If these two filters are connected in cascade, the frequency response of the cascade is 
Therefore, any frequencies in the output, y(n), must be passed by both filters. Because the passband for Hl(ejW) is 
Iwl > n/3, and the passband for H2(eJU) 
is n/4 < Iwl < 3x14, the passband for the cascade (the frequencies for 
which both I H I  (eJ1')1 and I Hz(ejU)l are equal to I )  is 
With a parallel connection, the overall frequency response is 
Therefore, the frequencies that are contained in the output are those that are passed by either filter, or 
2.12 
Consider the following interconnection of linear shift-invariant systems: 

CHAP. 21 
FOURIER ANALYSIS 
Find the frequency response and the unit sample response of this system. 
To find the unit sample response, let x(n) = S(n). The output of the adder is then 
Because w(n) is input to an LSI system with a unit sample response h2(n), 
where 
hz(n) = - ~ ~ ( ~ j f ~ ) ~ j l j ~ d ~  
= - 
' I" 
I"" 
sin(nn/2) 
eJnwdw = --- 
2 n  -, 
2 n  
-,,Z 
n n  
Therefore, the unit sample response of the overall system is 
To find the frequency response, note that 
Therefore, 
~ ( e j " )  = w ( ~ ~ " ) H : ( ~ J " ' )  
= [I - e - j " ] ~  
(a) Express the frequency response of the overall system in terms of HI 
(ej"), H2(ejw), FZ3(ejo), and 
H4 (ejw ). 
(b) Find the frequency response if 
2.13 
Consider the interconnection of LSI systems shown in the following figure: 
(a) Because h2(n) is in parallel with the cascade of h3(n) and h4(n), the frequency response of the parallel network is 
- - 
With h l ( n )  being in cascade with g(n), the overall frequency response becomes 
~ ( e j " )  = HI (eiW)[Hz(ei") + H3(ejw) 
H4(eJW)1 
hzb) 
L - 
x(n) - 
- 
L 
hl(n) 
L 
- 
hdn) 
hdn) 
- 

FOURIER ANALYSIS 
[CHAP. 2 
(b) The frequency responses of the systems in this interconnection are 
Therefore, 
2.14 
Suppose that the frequency response of a linear shift-invariant system is piecewise constant as shown in 
the following figure: 
Describe how this filter may be implemented as a parallel connection of low-pass filters. 
This filter may be viewed as a summation of a low-pass filter, a bandpass filter, and a high-pass filter. Because 
both a bandpass filter and a high-pass filter may be synthesized using a parallel connection of low-pass filters, we 
may proceed as follows. First, we put an allpass filter H3(eJW) = A3 in parallel with a low-pass filter with a cutoff 
frequency 02 and a gain of Az - A3. This parallel network has a frequency response 
To produce the correct magnitude over the lower band, Iwl i 
wl, we add a third low-pass filter in parallel with the 
other two. This filter has a cutoff frequency of wl and a gain of A I - A2. 
2.15 
Two linear shift-invariant systems are connected in a feedback network as illustrated in the figure below. 
Assuming that the overall system is stable, so that H(ej") exists, show that the frequency response of 
this feedback network is 
. 
Y (ej") 
J" - 
- 
- 
F (ei") 
H(e ) - X ( e j m )  
1 - F(ej")G(ej") 
To analyze this network, we begin by noting that 

CHAP. 21 
FOURIER ANALYSIS 
which, in the frequency domain, becomes 
W (el") = X(eJW) + G(eJ")Y (elW) 
Because 
y(ejw) = F(eJw)w(el") 
then 
Y (elw) = F(ejw)[x(eJw) + G(eIw)Y (elw)] 
Solving for ~ ( r i " )  
yields 
Therefore, the frequency response is 
The Discrete-Time Fourier Transform 
2.16 
A linear shift-invariant system is described by the LCCDE 
Find the value of b so that IH(eJm)l is equal to I at w = 0, and find the hay-power point (i.e., the 
frequency at which I H(ejW)I2 is equal to one-half of its peak value, which occurs at w = 0). 
The frequency response of the system described by this difference equation is 
Because 
l ~ ( e j " ) l ~  
= 
b2 
- 
- 
bZ 
( 1 - 0.5e-jw)( 1 - 0.5ejw) 
1.25 - cos w 
IH(eJw)l will be equal to 1 at o = 0 if 
h2 
-- 
- 1 
1.25 - 1 
This will be true when b = f 
0.5. 
To find the half-power point, we want to find the frequency for which 
0.25 
I H ( ~ ' " ) I ~  
= 
= 0.5 
1 .25 - cos o 
This occurs when 
or o = 0.2317. 
cos o = 0.75 
2.17 
Consider the system defined by the difference equation 
where a and b are real, and la I < 1. Find the relationship between a and h that must exist if the frequency 
response is to have a constant magnitude for all w, that is, 
I H ( ~ ~ * ) I  
= 1 

FOURIER ANALYSIS 
[CHAP. 2 
Assuming that this relationship is satisfied, find the output of the system when a = and 
x(n) = (;)"u(n) 
The frequency response of the LSI system described by this difference equation is 
The squared magnitude is 
( b  + e-jo)(h + eJ") 
1 + h2 + 2b cos w 
I H ( ~ ' " ) I ~  
= 
- 
- 
( 1  - ae-JU)(l - aeju) 
I + a2 - 2a cos w 
Therefore, it follows that I H(e'")12 = 1 if and only if b = -a. 
With a = and h = -;, if x(n) = (i)"u(n), Y(ejU) is given by 
Using the DTFT pair 
given in Table 2- 1, and using the linearity and delay properties of the DTFT, we have 
What we observe from this example is that although I H (eJU)l = 1, the nonlinear phase has a significant effect on 
the values of the input sequence. 
2.18 
Show that the group delay of a linear shift-invariant system with a frequency response H(ejw) may be 
expressed as 
H R ( ~ ~ , ) G  R ( d w )  + HI (ejW)G (ejw) 
t h ( ~ )  
= 
I H(ejw)I2 
where HR(eJw) 
and Hl(ejw) are the real and imaginary parts of H(ejw), respectively, and GR(ejW) 
and 
Gr(ejw) are the real and imaginary parts of the DTFT of nh(n). 
In terms of magnitude and phase, the frequency response is 
Note that if we take the logarithm of H(eJW), 
we have an explicit expression for the phase 
Differentiating with respect tow, we have 
Equating the imaginary parts of both sides of this equation yields 

CHAP. 21 
FOURIER ANALYSIS 
If we define 
d - 
H(eJ") = Hk(ei") + j ~ ; ( e j " )  
dw 
where HA(eJW) is the derivative of the real part of H(eiw) and H;(ejW) is the derivative of the imaginary part, the 
group delay may be written as 
Multiplying the numerator and denominator by H*(eJw) = HR(eJW) - jHI(eJW) 
yields 
Finally, recall that if H (eJ") is the DTFT of h(n), the DTFT of g(n) = nh(n) is 
where GR(eJWj 
is the real part of the DTFT of nh(n), and GI (elW) is the imaginary part. Therefore, HA(eJW) = GI (elW) 
and H;(~J") = -GR(eJW). Expressed in terms of GR(ejW) 
and GI(eJW), 
the group delay becomes 
Note that this expression for the group delay is convenient for digital evaluation, because i~ only requires computing 
the DTFT of h(n) and nh(n), and no derivatives. 
2.19 
Find the group delay for each of the following systems, where a! is a real number: 
(a) H l  (ejw) = 1 - ae-jo 
1 
(b) H2(ejw) = 
1 - me-Jw 
(c) H3(ejw) = 
1 
1 - 2a! cos 8e-jw + a!2e-j2w 
(a) For the first system, the frequency response is 
H, (eJ") = 1 - a cos w + ja sin w 
Therefore, the phase is 
a sin w 
$1 (w) = tan-' 1 -acosw 
Because 
the group delay is 
d 
r~(w) = 
= - 
1 
a sin w 
dw 
I -a COE w 
1 
(1 - a c o s w ) a c o ~ w -  (asinw)' 
Therefore, 
rl(w) = - 
1 + (-)2 
(1 - (Y cos w ) ~  

FOURIER ANALYSIS 
which, after simplification, becomes 
[CHAP. 2 
( I - a c o s ~ ) a c o ~ w - ( a s i n w ) ~  
a 2 - a c o s w  
q(w) = - 
- 
- 
(1 - a cos w ) ~  
+ (a sin w)Z 
I + a z - 2 a c o s w  
Another way to solve this problem is to use the expression for the group delay derived in Rob. 2.18. With 
Hl(eJ") = 1 - a c o s w +  jasinw 
we see that 
HR(eJw) = 1 - a cos w 
Hl(eJw) = a sin w 
Because the unit sample response is 
h(n) = S(n) - aS(n - 1) 
then 
g(n) = nh(n) = -a6(n - I )  
and 
G(ejw) = -ae-jw = -a cos w + ja sin w 
Therefore, the group delay is 
which is the same as before. 
(b) Having found the group delay for Hl(ejW) = 1 - ae-J", we may easily derive the group delay for H2(eJW), 
which is the inverse of Hl(eJw): 
Specifically, because 
1 
Hz(eJ") = - 
Hz(eJ") 
&(w) = -@I(w) and, therefore, 
(c) For the last system, H3(eJw) may be factored as follows: 
The group delay of H3(eJm) is thus the sum of the group delays of these two factors. Furthermore, the group 
delay of each factor may be found straightforwardly by differentiating the phase. However. the group delay of 
these terms may also be found from t2(w) in part (b) if we use the modulation property of the DTFT. Specifically, 
recall that if X(ejw) is the DTFT of x(n), the DTFT of ejn0x(n) is 
Therefore, if the group delay of x(n) is ~ ( w ) ,  
the group delay of ejdx(n) will be r(w - 8). In part (b), we found 
that the group delay of H (ej") = 1 /(I - cue-'") 
is 

CHAP. 21 
FOURIER ANALYSIS 
Thus, it follows from the modulation property that the group delay of H(ejw) = ]/(I - ae-~(~-O') 
is 
and that the group delay of H(ejW) = 1/(1 - ae-j"u+e)) is 
Therefore, the group delay of H3(eJW) is the sum of these: 
2.20 
Find the DTFT of each of the following sequences: 
(a) X I  
(n) = ($)"u(n + 3) 
(b) xz(n) = CY" sin(nwo) u(n) 
1 A;)" 
n = 0.2.4, . . . 
(c) x3(n) = 
otherwise 
(a) For the first sequence, the DTFT may be evaluated directly as follows: 
(b) The best way to find the DTFTofxz(n) is toexpress the sinusoid as a sum of twocomplexexponentials as follows: 
Similarly, for the second term we have 
Therefore, 
I 
X2(eJW) = - [ 
1 
- 
(a sin wo)e-jw 
2 j  1 - ae-j(w-"o) 
1 - 
I - (h 
cos wo)e- j w  + cr2e-Zjw 
(c) Finally, for xj(n), we have 
Therefore, 

82 
FOURIER ANALYSIS 
[CHAP. 2 
2.21 
Because the DTFT of the output of a linear shift-invariant filter with frequency response H(ejw) is 
where x(ejw) is the DTFT of the input, it follows that an LSI system cannot produce frequencies in the 
output that are not present in the input. Therefore, if a system introduces new frequencies. the system 
must be nonlinear and/or shift-varying. For each of the following systems, find the frequencies that are 
present in the output when x(n) = cos(nwo): 
(a) With x(n) = cos(nmo), the output of the square-law device is 
y(n) = cos2(nw) 
Using the trigonometric identity 
cos2 A = f + cos(2A) 
it follows that 
y(n) = + f cos(2nm) 
Therefore, although the only frequencies present in the input are w = f 
wo. the frequencies in the output are 
w = 0, f 
2mn. Because this system is nonlinear, it creates frequencies in the output that are not in the input. 
(b) For the modulator, the output is 
Using the trigonometric identity 
2cos A cos B = cos(A + B) + cos(A - B) 
it follows that 
y(n) = cos(nmo + 7) 
+ cos(mn - 7) 
Therefore, the frequencies in the output are w = wo f rj4, which are different from those in the input. This is 
because the modulator is a shift-varying system. 
(c) The last system, called a down-sampler, produces the output 
thus creating frequencies in the output that are not present in the input. The down-sampler is a shift-varying 
system. 
For each of the following pairs of signals, x(n) and y(n), determine whether or not there is a linear 
shift-invariant system that has the given response, y(n), to the given input, x(n). If such a system exists, 
determine whether or not the system is unique, and find the frequency response of an LSI system with 
the desired behavior. If no such LSI system exits, explain why. 
(4 x(n) = (i)"u(n), y(n) = (a)"u(n) 
(b) x(n) = e j n n f 4 ,  y(n) = 0 . 5 c j " " / 4  
sin(nnf4) 
(c) x(n) = 7 
, y(n) - sin(nnf2) 
n n  
(4 x(n) = u(n), y(n) = 6(n) 

CHAP. 21 
FOURIER ANALYSIS 
(a) For the first input-output pair, we have 
Because X(ejW) is nonzero for all w, the system that produces the response y(n) is unique and is given by 
(b) For the second system, note that the input is a complex exponential with a frequency w = n / 4 .  Therefore, if 
the system is LSI, the output must be a complex exponential of exactly the same frequency, that is, 
Y ( n )  = ~ ( ~ j W 4  
h n / 4  
)e 
Because the output is 
y(n) = 0.5 ejnnI4 
any LSI system with 
H (eJnl4) = 0.5 
will produce the given response. Thus, the system is not unique. One possible system is the low-pass filter 
TT 
H (eJ") = 
otherwise 
(c) For the third system, recall that an ideal low-pass filter with a cutoff frequency w,. has a unit sample response 
given by (see Example 2.2.3) 
sin n o ,  
h(n) = - 
r n  
Therefore, the DTFT of the input x(n) is 
TT 
1 
I4 -= q 
X(el") = 
0 
otherwise 
and the DTFT of the output y(n) is 
TT 
Y reJ") = 
' 
( 0  
otherwise 
Because X(ejw) = 0 for Iwl 
n/4, if the system is to be linear and shift-invariant, Y (el") must be equal to zero 
for lo1 > n / 4  (an LSI system cannot produce new frequencies). Because this is not the case, no LSI system 
will produce the given input-output pair. 
(d) For the last system, we are given x(n) = u(n) and y(n) = S(n). Therefore, 
and 
As in part (a), there is a unique LSI system that produces this input-output pair, and the frequency response of 
this system is 
2.23 
Find the DTFT of the two-sided sequence 

FOURIER ANALYSIS 
[CHAP. 2 
Note that we may write x(n) as the sum of a left-sided sequence and a right-sided sequence as follows: 
where the last term is included to remove the extra term that is introduced at n  = 0 by the two exponential sequences. 
The DTFT of the first term is 
and, using the time-reversal property, it follows that the DTFT of the second term is 
Therefore, 
IW - 
I 
1 
+--I 
( 
- 1 - - 
I - Le,w 
2.24 
Use the orthogonality of the complex exponentials 
to show that x(n) may be recovered from X(eju) as follows: 
Given a sequence x ( n ) ,  the DTFT is defined by 
To recover x ( n )  from X(eJm), it is necessary to "filter out" all of the terms in the sum except one (i.e., we must isolate 
a single term in the sum). This may be done by multiplying both sides of the equation by a complex exponential, elnw: 
and integrating from -n to n, 
Interchanging the order of the integral and the sum on the right gives 
Using the orthogonality of the complex exponentials, it follows that the integral is zero when k # n ,  and it is equal 
to 2n when k = n. Therefore, 
Dividing both sides by 2n gives the desired result. 

CHAP. 21 
FOURIER ANALYSIS 
2.25 
Find the inverse DTFT of X(e1"') shown in the figure below: 
t 
X(eJU) 
Because X ( e J U )  is a piecewise constant function of w, finding the inverse DTFT may be easily accomplished by 
integration. Using the inverse DTFT, we have 
Rearranging the terms, we have 
which is the desired result. 
It is interesting to note that x ( n )  is expressed as the difference of two sequences, with the first being an ideal 
low-pass filter with a cutoff frequency of 3x14, and the second an ideal low-pass filter with a cutoff frequency of 
n/4. This is a consequence of the fact that X(ei"') may be expressed as 
where 
and 
3rc 
X,(eJ") = 
I 
Iwl < q 
0 
otherwise 
rc 
1 
Iwl < q 
X2(cJW) = 
0 
otherwise 
Another way to evaluate the inverse DTFT is to observe that x ( e i w )  may be written as 
X(eJ") = X ~ ( ~ J ' " ' + ? )  + X ,  e~'co-?) 
> 
- ( '  
where Xz(ejw) is the ideal low-pass filter defined above. Thus, X(eJU') may be viewed as a modulated low-pass filter: 
With 
sin(na/4) 
x2(n) = - 
nrc 
x ( n )  may also be written as 
This may be shown to be equivalent to the previous representation for x ( n )  by using the trigonometric identity 
2sin A sin B = sin(A + B )  + sin(A - B )  

86 
FOURIER ANALYSIS 
[CHAP. 2 
2.26 
Find the inverse DTFT of x ( ~ J " )  = cos2 w. 
Recall that the DTFT of a delayed unit sample is a complex exponential: 
DTFT 
-inow 
S(n - no) 
e 
Therefore, the inverse DTFT of X(ejW) = cos2 w may be found easily if we expand it in terms of complex exponen- 
Thus, it follows that x ( n )  is 
x ( n )  = iS(n) + as(n + 2 )  + fS(n - 2 )  
2.27 
If h ( n )  is the unit sample response of a real and causal linear shift-invariant system, show that the system 
is completely specified by the real part of its frequency response: 
In other words, show that H ( e J W )  may be uniquely recovered from its real part. 
Recall from the symmetry properties of the DTFT that if h(n) is real, H (el") is conjugate symmetric. Therefore, if 
H(eJw) is written in terms of its real and imaginary parts, 
then the real part, HR(ei"), is the DTFT of the even part of h(n): 
Therefore, given HR(eJW), 
or h,(n), the question is how to recover h(n). Note that if h(n) is causal, h(n) = 0 for 
n < 0 ,  and 
i h ( n )  
n > 0 
n = O  
kh(-n) 
n 4 0 
As a result, h(n) may be recovered from h,(n) as follows: 
If h ( n )  is real and causal, and if 
HR(el") = ~ e { ~ ( e J " ) j  
= 1 + a cos 2 0  
find h ( n ) .  
Because the real part of H ( e J w )  is 
~
~
(
e
j
~
)
 
= 1 + a cos 2 w  = I + faeJ2" + ;aeFizw 
the even part of h(n), which is the inverse DTFT of HR(eJw), is 
h,(n) = 6(n) + i a S ( n  + 2 )  + $d(n - 2 )  
With h ( n )  a causal sequence, it follows from the results of Prob. 2.27 that 
which gives 

CHAP. 21 
FOURIER ANALYSIS 
DTFT Properties 
2.29 
Show that if x(ejw) is real and even, x ( n )  is real and even. 
For x(n) we have 
If ~ ( e j " )  
is real and even, then X(ej'") sin(nw) is real and odd. Therefore, when integrated from -n ton, the integral 
is zero. Thus, x(n) may be written as 
and it follows that x(n) is real. Finally, because X(ejW) cos(nw) is real and even, x(n) is real and even, that is, 
2.30 
Prove the convolution theorem. 
There are several ways to prove the convolution theorem. One way is by a straightforward manipulation of the DTFT 
sum. Specifically, if y(n) = h(n) * .u(n), 
and the DTFT of y(n) is 
Note that the expression in brackets is the DTFT of x(n -1). Using the delay property of the DTFT, this is equal to 
x(ejW)e-J'", and the right side of this equation becomes 
Factoring out X(eJW) from the sum, which does not depend on I, we have 
which proves the theorem. 
Another way to prove the convolution theorem is to consider the following cascade of two LSI systems, one 
with a unit sample response of h(n) and the other with a unit sample response of x(n): 
If the input to this cascade is a complex exponential, ej"", the output of the first system is H(ejw)ejnw. Because this 
complex exponential is the input to the second system, the output is H(ej")X(ej")eJn". Therefore, H(ej")X(ejw) 
is the frequency response of the cascade, and because the unit sample response of the cascade is the convolution 
h(n) * x(n), we have the DTFT pair 
h(n) * x(n) D&T 
H (ejw)x (dw) 
which establishes the convolution theorem. 

88 
FOURIER ANALYSIS 
[CHAP. 2 
2.31 
Derive the up-sampling property of the DTFT, which states that if x (ej") is the DTFT of x(n), the DTFT of 
n = O , & L , f 2 L ,  ... 
y(n) = 
otherwise 
From the definition of the DTFT, we have 
Because y(n) is equal to zero except when n is an integer multiple of L, 
n - m  
,,=-m 
Thus, Y(eJW) 
is formed by scaling X(eJW) in frequency. 
2.32 
Find the inverse DTFT of 
I" - 
1 
X ( e  ) - , - ; e - j , h  
For this problem, the direct approach of performing the integration 
is not easy. However, a simple approach is to recall that the inverse DTFT of 
is 
y(n) = (f)"u(n) 
and to note that ~ ( e j " )  
is related to X(eju) by scaling in frequency, 
~ ( e j " )  
= Y (eJIOw 
1 
Therefore, it follows from the up-sampling property in Prob. 2.3 1 that 
1 O 
otherwise 
In other words, the sequence x(n) is formed by inserting nine zeros between each value of y(n). 
2.33 
Let x(n) be a sequence with a DTFT ~ ( e ; " ) .  For each of the following sequences that are formed from 
x(n), express the DTFT in terms of X(eJW): 
( a )  x*(-n> 
(b) x(n) * x*(-n) 
(c) x(2n + 1 ) 

CHAP. 21 
FOURIER ANALYSIS 
(a) The DTFT of x*(-n) is 
Bringing the conjugate outside, we have 
which leads to the DTFT pair 
x*(-n) Dg 
x*(ejw) 
(b) For y(n) = x(n) * x*(-n), note that because y(n) is the convolution of two sequences, the DTFT of y(n) is the 
product of the DTFTs of x(n) and x*(-n). As shown in part (a), the DTFT of x*(-n) is X*(ejW). Therefore, 
we have the DTFT pair 
x(n) * x*(-n) Ds 
~(ej")~*(e'") = 1 ~ ( e j " ) 1 ~  
(c) For x(2n + 1) we have 
DTFT(x(2n + I)) = 2 
r(2n + 1)e-In" = x 
x(n)e-jnY 
n=-m 
n odd 
To evaluate this sum, a "trick" is to use the identity 
1 - 
= 2 
n odd 
0 
n even 
This allows us to write the DTFT as follows: 
m 
DTFT(x(2n + 1)) = 
x(n)e-jn" = x 
[I - (-lr]x(n)e-jnw 
n odd 
n=-m 
Because the first sum is simply X(eJU), and the second is the DTFT of the modulated signal 
then 
DTFT(x(2n + 1)) = f [x(eiw) - x(eicw-") )I 
2.34 
Let x(n) be the sequence 
which has a DTFT 
~ ( e j " )  = xR(eJ") + j
~
,
 
(eJo) 
where xR(ejw) and xl(ejw) are the real part and the imaginary part of x(ejW), respectively. Find the 
sequence y(n) that has a DTFT given by 
The key to solving this problem is to recall that if x(n) is real, and if X(eJW) is written in terms of its real and 
imaginary parts, XR(ejw) is the DTFT of the even part of x(n), and Xl(eJW) is the DTFT of the oddpart: 
x,(n> = [x(n) + x(-n)] DB 
xr(eiw) 
DTFT . 
x&) = f [x(n) - x(-n)] 
IXl(eJw) 

FOURIER ANALYSIS 
[CHAP. 2 
Therefore, the DTFT of - jx,(n) is Xl(ei"), 
and the DTFT of jxe(n + 2 )  is 
DTF 
. 
jxe(n + 2 )  c-T jXR(ejW)ejzW 
Thus, 
ixe(n + 2 )  - jx,(n) D
&
 
y(ejW) = X,(eJW) + jXR(eiW)eJh 
and it follows that 
y(n) = j x J n  + 2 )  - jx&) 
Finally, with xe(n) and x,(n) as tabulated below. 
it follows that y(n), which is formed from these two sequences, is as shown below: 
2.35 
Let x(n ) be the sequence 
Evaluate the following quantities without explicitly finding X(eJo): 
(4 x (ejo)lo=O 
(b) 9Mw) 
(c) 
x(eJo)dw 
(4 x(ejo)lo=r 
(e) 
I X ( e j w ) l 2 d ~  
(a) Because the DTFT of x(n) is 
ca 
x ( e j W )  = )7 x(n)e-jnw 
n=-m 
note that if we evaluate X (ejW) at w = 0, we have 
which is simply the sum of the values of x(n). Therefore, for the given sequence it follows that 
(b) To evaluate the phase, note that because x(n) is real and even, X(eJW) is real and even and, therefore, the phase 
is equal zero or n for all o. 

CHAP. 21 
FOURIER ANALYSIS 
(c) From the inverse DTFT, 
note that when n = 0: 
x(0) = - /' X(elY)dw 
2n -, 
Therefore, it follows that 
[: 
x ( e M ) d o  = 2 n x ( 0 )  = 6 n  
(d) Evaluating the DTFT of x(n) at o = n, we have 
which, for the given values of x(n), evaluates to 
( e )  From Parseval's theorem, we know that 
w 
Therefore, 
ll ~ x ( e ~ ~ ) l ' d o  
= 271 
lr(n)12 = 3871 
n=-w 
2.36 
The center of gravity of a sequence x(n) is defined by 
and is used as a measure of the time delay of a sequence. Find an expression for c in terms of the DTFT 
of x(n), and find the value of c for the sequence x(n) that has a DTFT as shown in the figure below. 
To find the value of c in terms of X(eJW), first note that the denominator is simply the value of X(eJo) evaluated at 
o=O: 
m 
For the numerator, recall the DTFT pair 
nx(n) "W j
d
~
~
m
,
 
d o  

FOURIER ANALYSIS 
[CHAP. 2 
Therefore, 
and c may be evaluated in terms of X(eJm) as follows: 
For the DTFT that is given, we see that 
X(eJm)l,,o = 1 
and 
L 
Therefore, 
C =  - 
n 
2.37 For the sequence x(n) plotted in the figure below, 
evaluate the integral 
This integral is easy to evaluate if we use Parseval's theorem 
and the derivative property 
Specifically, we have 
Applications 
2.38 
A linear shift-invariant system has a frequency response 
H(ejw) = elo 
1 
1.1 +cosw 
Find an LCCDE that relates the input to the output. 

CHAP. 21 
FOURIER ANALYSIS 
93 
To convert H ( e J w )  into a difference equation, we must first express H ( e J W )  in terms of complex exponentials. 
Expanding the cosine into a sum of two complex exponentials, we have 
Multiplying numerator and denominator by 2e-Jw gives 
Cross-multiplying, we have 
[I + 2.2e-i'u + e - 2 i " ] ~ ( e J " )  = 2 X ( e l w )  
which leads to the following difference equation when we take the inverse DTFT of each term: 
y(n) + 2.2y(n - I) + y(n - 2 )  = 2x(n) 
2.39 
Find the frequency responseof a linear shift-invariant system whose input and output satisfy the difference 
equation 
y(n) - 0.5y(n - 1 )  = x(n) + 2x(n - I) + x(n - 2) 
To find the frequency response, we begin by finding the DTFT of each term in the difference equation 
( I  - OSe-j")Y(eJ") = ( 1  + 2e-1" + e - ~ ' " ) x ( e J ~ )  
Because ~ ( e j " )  = ~ ( e J " ) / X ( e j " ) .  we have 
2.40 
Write a difference equation to implement a system with a frequency response 
With 
after cross-multiplying, we have 
[I + 0.5e-iw + 0.75e-zJ"]~(ei") = [l - 0 5 - j w  + e - 3 ~ " ] ~ ( e J " )  
Taking the inverse DTFT of each term gives the desired difference equation 
y ( n )  + 0.5y(n - 1 )  + 0.75y(n - 2 )  = x(n) - 0.5x(n - 1) + x(n - 3 )  
2.41 
Find a difference equation to realize a linear shift-invariant system that has a frequency response 
H ( e J W )  = tan w 
To find a difference equation for H(ejW). we must first express tan w in terms of complex exponentials: 
sin w 
I ej" - e-I" 
- 
tanw= - 
- - 
cos w 
j elw + e-Jw 
With H ( e j w )  = Y(ejw)/X(ej") we have, after cross-multiplying. 
jlej" + e-j"]~(ej") = [ei" - e - j " ] ~ ( e j " )  
Inverse transforming, we obtain the following difference equation: 
jy(n + 1) + jy(n - 1) = x(n + 1 )  - x(n - 1) 

FOURIER ANALYSIS 
[CHAP. 2 
By introducing a delay and dividing by j, this difference equation may be written in the more standard form 
2.42 
Find a difference equation to implement a filter that has a unit sample response 
To find a difference equation for this system, we must first find the frequency response H (elw). Expressing h(n) in 
terms of complex exponentials, 
it follows that the frequency response is 
Therefore, the difference equation for this system is 
2.43 
A system with input x(n) and output y(n) is described by the following set of coupled linear constant 
coefficient difference equations: 
Find a single linear constant coefficient difference equation that describes this system, and find the 
frequency response H (elW). 
To find the frequency response for this system of difference equations, we first express each equation in the frequency 
domain: 
Using the last two equations to express V ( e J W )  in terms of X(eJW), we have 
Substituting this expression for V ( e J W )  into the first equation and solving for Y(eJW) gives 

CHAP. 21 
FOURIER ANALYSIS 
Therefore, the frequency response is 
Cross-multiplying, we have 
~ ( ~ i w ) [ l  
- ie-iw + i e - j 2 w ]  = x ( ~ I ~ ) [ ~ - I "  
+ qe-2i" + ze-3iw] 
and taking the inverse DTFT of each term gives the difference equation for the system: 
y(n) - i y ( n  - I) + i y ( n  - 2) = x(n - I )  + qx(n - 2) + 2x(n - 3) 
2.44 
A linear shift-invariant system with input x(n) and output v(n) is described by the difference equation 
This system is cascaded with another system with input v(n) and output y(n) that is described by the 
difference equation 
y ( n ) = l  ,Y( n -  1) + 0
)
 
What value of cr will guarantee that y(n) = x(n)? 
Substituting the first equation into the second, we obtain a single difference equation that describes the overall system. 
that is, 
y(n) = y(n - 1) + x(n) + a x ( n  - 1) 
Taking the DTFT of both sides of the equation, we have 
y(ejw) = j e - j " ~ ( e ~ w )  
+ x ( ~ J " )  + a e - ~ w ~ ( e j " )  
If y(n) = x(n), Y(eiU) = X(eIu), and it is clear that this will be true if and only if a = -4. 
2.45 
Find the input x(n) that will produce a response, y ( n )  = 6(n), for a system described by the LCCDE 
This problem is easily solved if we express this difference equation in the frequency domain. Specifically, we have 
y (,jw) - ie-iwy (,iw) = ~ ( ~ j w )  
- ! e - i h ~ ( e " J J )  
If we want the output to be y(n) = S(n), Y (ejw) = 1 ,  and we have 
Solving for X(el") gives 
To find the inverse DTFT of X(ei"), recall that 
Therefore, the inverse DTFT of 
I" - 
1 
W ( e  ) - 1 - Le-j2", 
8 
is the seauence 
( y " 
n = 0 , 2 , 4 ,  ... 
w(n) = 
otherwise 
and x(n) is given by 

FOURIER ANALYSIS 
Supplementary Problems 
[CHAP. 2 
Frequency Response 
Consider a linear shift-invariant system with a unit sample response 
h(n) = 6(n) + 6(n - 1) 
Find the output of the system when the input is 
If the unit sample response of a linear shift-invariant system is 
h(n) = anu(n) 
with la1 < I, find the response of the system to the input x(n) = I .  Repeat for x(n) = (-1)". 
Find the frequency response of the system that has a unit sample response 
(?(nwo) 
o 5 n 5 N - 1 
h(n) = 
otherwise 
The input to a linear shift-invariant system is 
Find the output when the unit sample response is 
The input to a.linear shift-invariant system is 
x(n) = n(i)"u(n) 
and the output is 
n-3 
y(n) = (;)"-'u(n - 2) - (f) 
u(n - 3) 
Find the frequency response ~ ( e j , ) .  
Find the frequency response of the system described by the LCCDE 
~ ( n )  
= iy(n - 10) + x ( n )  + js(n - 10) 
Find the group delay of the system that has a frequency response 
Filters 
2.53 
What is the unit sample response of an ideal bandstop filter with a lower cutoff frequency of o, 
and an upper cutoff 
frequency of w? 
2.54 
If h(n) is the unit sample response of an ideal low-pass filter with a gain of one and a cutoff frequency w, = n / 8 ,  
what is g(n) = cos(nn/2)h(n)? 

CHAP. 21 
FOURIER ANALYSIS 
The Interconnection of Systems 
255 
What type of filter has a unit sample response 
2.56 
What is the magnitude of the frequency response of the cascade of the following two systems? 
The Discrete-Time Fourier 'Ikansform 
2.57 
Find the DTFT of the sequence 
x(n) = 
else 
2.58 
For each of the following systems, find the frequencies that are present in the output when the DTFT of the input 
x(n) is 
2.59 
Let x(n) = ejnnI4u(n) and y(n) = 0.5ejn"/4u(n). Determine whether or not there is a linear shift-invariant system 
that has the response, y(n), to the input x(n). If such a system exists, determine whether or not the system is unique, 
and find the frequency response of an LSI system with thedesiredbehavior. If no suchLSI system exists, explain why. 
2.60 
Find the inverse DTFT of X(ejo) illustrated in the figure below. 
2.61 
Find the inverse DTFT of X(eJW) illustrated in the figure below. 
2.62 
Find the inverse DTFT of X(ejo) = cos 2w + j sin a. 
2.63 
Find the inverse DTFT of 
I 0  
otherwise 

FOURIER ANALYSIS 
[CHAP. 2 
2.64 
Find the DTFT of 
2.65 
If x(n) is real and causal, and 
find x(n). 
DTFT Properties 
2.66 
Let x(n) be a sequence with a DTFT X(ejw). For each of the following sequences that are related to x(n), express 
the DTFT in terms of X(ejW): 
(4 x*(n) 
(h) x(n) - x(n - 2) 
(c) x(2n) 
( d )  x(n) * x(n - I )  
2.67 
If the DTFT of x(n) = (i)"u(n + 2) is X(ejW), find the sequence that has a DTFT given by Y (ejw) = X(ejzo), 
2.68 
Let x(n) be the sequence 
x(n) = 26(n + 3) - 26(n + I )  + 6(n - I )  + 36(n - 2) 
If the DTFT of x(n) is expressed in terms of its real and imaginary parts as follows, 
find the sequence y(n) that has a DTFT given by 
2.69 
The DTFT of a sequence x(n) is 
JW - 
3 
X ( e  ) - (1 - 0.Xe-jw)5 
Evaluate the sum 
2.70 
The DTFT of a sequence .r(n) is 
x(eJW) = cos3(3w) 
Evaluate the sum 
2.71 
Let C:-,x(n) 
= A and x:-, 
h(n) = B. If y(n) = h(n) * x(n), is it true that Cz-, y(n) = A .  B? 
2.72 
Evaluate the following integral: 
,iw 
[I 
1 - 0.3e-jm dw 
2.73 
Using the center of gravity (see problem 2.36), find the time delay of the sequence 
x(n) = anu(n) 

CHAP. 21 
FOURIER ANALYSIS 
Applications of the DTFT 
2.74 
A causal linear shift-invariant system is defined by the difference equation 
2y(n)- y(n -2)=x(n - 1) +3x(n - 2) +2x(n - 3) 
Find the frequency response, H (e'"). 
2.75 
The frequency response of a linear shift-invariant system is 
I 
H(eJW) = elw - 
2 + e-2iw 
Find an LCCDE that relates the input to the output. 
2.76 
Find the inverse of the system that has a unit sample response h(n) = n(-k)"u(n - 3). 
Answers to Supplementary Problems 
1 
y(n) = -- 
I 
and y(n) = -. 
1 - a  
I + a  
(a) y(n) = $x(n). (b) y(n) = h ~ ~ e j " " / ~ .  
sin(nwl) . 
h(n) = hl(n) + hz(n) where hl(n) = --- 
1s an ideal low-pass filter with a cutoff frequency of wl, and 
sin(nw) 
n w ~  
h2(n) = &(n) - - 
is an ideal high-pass filter with a cutoff frequency of w. 
nwz 
A bandpass filter with a lower cutoff frequency of wl = 3n/8, an upper cutoff frequency of wz = 5 ~ / 8 ,  
and a gain 
of one half. 
A high-pass filter with a cutoff frequency w, = ~ / 3 .  
1 H (ejW)l = 1 for Iwl z 5 and I H (elW)l = 0 otherwise. 

100 
FOURIER ANALYSIS 
2n 
n 
5n 
2n 
(a) Iwl < -. 
(b) - < lo1 < -. 
(c) lo1 c -. 
3 
6 
6 
3 
Unique, h(n) = ;6(n). 
[CHAP. 2 
n 
3n 
The DTFT is constant with an amplitude of a for lo1 < -, and it decreases linearly to zero at w = zt-. 
4 
4 
n = -4, -2.0,2,. . . , 
y(n) = 
otherwise 
Beginning with index n = -3, the sequence values are [ I ,  $, i, - i, -2. i. g, i, -I]. 
3 .s5. 
Yes. 

Chapter 3 
Sampling 
3.1 INTRODUCTION 
Most discrete-time signals come from sampling a continuous-time signal, such as speech and audio signals, radar 
and sonar data, and seismic and biological signals. The process of converting these signals into digital form 
is called analog-to-digital (AID) conversion. The reverse process of reconstructing an analog signal from its 
samples is known as digital-to-analog (D/A) conversion. This chapter examines the issues related to A/D and 
D/A conversion. Fundamental to this discussion is the sampling theorem, which gives precise conditions under 
which an analog signal may be uniquely represented in terms of its samples. 
3.2 ANALOG-TO-DIGITAL CONVERSION 
An A/D converter transforms an analog signal into a digital sequence. The input to the A/D converter, x,(t), 
is a real-valued function of a continuous variable, t .  Thus, for each value oft, the function x,(t) may be any 
real number. The output of the A/D is a bit stream that corresponds to a discrete-time sequence, x(n), with an 
amplitude that is quantized, for each value of n, to one of a finite number of possible values. The components of 
an A/D converter are shown in Fig. 3- 1. The first is the sampler, which is sometimes referred to as a continuous- 
to-discrete ( C P )  converter, or ideal AlD converter. The sampler converts the continuous-time signal x,(t) into 
a discrete-time sequence x(n) by extracting the values of .u,(r) at integer multiples of the sampling period, T,, 
Because the samples x,(nTs) have a continuous range of possible amplitudes, the second component of the A/D 
converter is the quantizer, which maps the continuous amplitude into a discrete set of amplitudes. For a uniform 
quantizer, the quantization process is defined by the number of bits and the quantization interval A. The last 
component is the encoder, which takes the digital signal i ( n )  and produces a sequence of binary codewords. 
3.2.1 Periodic Sampling 
" 
Typically, discrete-time signals are formed by periodically sampling a continuous-time signal 
The sample spacing T, is the sampling period, and f, = I/ T, is the sampling frequency in samples per second. 
A convenient way to view this sampling process is illustrated in Fig. 3-2(a). First, the continuous-time signal is 
multiplied by a periodic sequence of impulses, 
Ts 
" A 
*d[) - 
Fig. 3-1. The components of an analog-to-digital converter. 
C/D 
Quantizer 
*(I?) 
P 
3 ~ )  
L
,
 
- 
P 
Encoder 
c(n) 
- 

102 
SAMPLING 
[CHAP. 3 
to form the sampled signal 
Then, the sampled signal is converted into a discrete-time signal by mapping the impulses that are spaced in time 
by Ts into a sequence x(n) where the sample values are indexed by the integer variable n: 
This process is illustrated in Fig. 3-2(b). 
-2Ts 
-Ts 
0 
Ts 
2Ts 
3T, 
4T, 
- 2 - 1  
0 
1
2
 3 
4 
(b) 
Fig. 3-2. Continuous-todiscrete conversion. (a) 
A model that consists of multiplying x,(I) by a sequence 
of impulses. followed by a system that converts impulses into samples. (b) An example that illustrates the 
conversion process. 
The effect of the C/D converter may be analyzed in the frequency domain as follows. Because the Fourier 
transform of 6(t - nTs) is e-JnnTs, the Fourier transform of the sampled signal x,(t) is 
Another expression for Xs(jO) follows by noting that the Fourier transform of s,(t) is 
where 9, = 2n/T, is the sampling frequency in radians per second. Therefore, 
Finally, the discrete-time Fourier transform of x(n) is 
Comparing Eq. (3.3) with Eq. (3.2), it follows that 

CHAP. 31 
SAMPLING 
Thus, X ( e J W )  is a frequency-scaled version of X , ( j Q ) ,  with the scaling defined by 
This scaling, which makes x ( ~ J " )  
periodic with a period of 2n, is a consequence of the time-scaling that occurs 
when x,(t ) is converted to x(n). 
EXAMPLE 3.2.1 
Suppose that xa(t) is strictly bandlimited so that Xa(jQ) = 0 for ( R J  > Ro as shown in the figure below. 
If xa(t) is sampled with a sampling frequency Q, 2 2Q0, the Fourier transform of ~ , ~ ( t )  
is formed by periodically replicating 
X,(jQ) as illustrated in the figure below. 
t xs""' 
However, if R, < 2R0, the shifted spectra X,,(jR - jkQ,) overlap, and when these spectra are summed to form X,(jQ), the 
result is as shown in the figure below. 
t ""'"' 
This overlapping of spectral components is called aliasing. When aliasing occurs, the frequency content of xa(t) is compted, 
and X,(jQ) cannot be recovered from X,v(jQ). 
As illustrated in Example 3.2.1, if x,(t) is strictly bandlimited so that the highest frequency in x,(t) is Qo, 
and if the sampling frequency is greater than 2Q0, 
no aliasing occurs, and x,(t) may be uniquely recovered from its samples xa(nTv) with a low-pass filter. The 
following is a statement of the famous Nyquist sampling theorem: 
Sampling Theorem: If x,(t) is strictly bandlimited, 
then x,(t) may be uniquely recovered from its samples x,(nT,) if 
The frequency Q0 is called the Nyquist frequency, and the minimum sampling frequency, Q, = 2'20, is called 
the Nyquist rate. 

104 
SAMPLING 
[CHAP. 3 
Because the signals that are found in physical systems will never be strictly bandlimited, an analog anti- 
aliasing filter is typically used to filter the signal prior to sampling in order to minimize the amount of energy 
above the Nyquist frequency and to reduce the amount of aliasing that occurs in the AID converter. 
3.2.2 Quantization and Encoding 
A quantizer is a nonlinear and noninvertible system that transforms an input sequence x(n) that has a continuous 
range of amplitudes into a sequence for which each value of x(n) assumes one of a finite number of possible 
values. This operation is denoted by 
,W) = Qlx(n)l 
The quantizer has L + I decision levels X I ,  xl, . . . . x ~ + [  
that divide the amplitude range for x(n) into L intervals 
For an input x(n) that falls within interval lk, the quantizer assigns a value within this interval, &, tox(n). This 
process is illustrated in Fig. 3-3. 
r 
decision level 
- 
quantizer output 
Fig. 3-3. A quantizer with nine decision levels that divide the input amplitudes into eight 
quantization intervals and eight possible quantizer outputs. ir. 
Quantizers may have quantization levels that are either uniformly or nonuniformly spaced. When the quan- 
tization intervals are uniformly spaced, 
A is called the quantization step size or the resolution of the quantizer, and the quantizer is said to be a uniform 
or linear quantizer.' The number of levels in a quantizer is generally of the form 
in order to make the most efficient use of a (B + 1)-bit binary code word. A 3-bit uniform quantizer in which the 
quantizer output is rounded to the nearest quantization level is illustrated in Fig. 3-4. With L = 2'" 
quantization 
levels and a step size A, the range of the quantizer is 
Therefore, if the quantizer input is bounded, 
l*v(n)l 5 Xmax 
the range of possible input values may be covered with a step size 
With rounding, the quantization error 
e(n) = Qlx(n)l - x(n) 
'ln some applications, such as speech coding, the quantizer levels are adaptive (1.e.. they change with time). 

CHAP. 31 
SAMPLING 
will be bounded by 
However, if (x(n)l exceeds X,,,, then x(n) will be clipped, and the quantization error could be very large. 
2Xmax -4 
Fig. 3-4. A 3-bit uniform quantizer. 
A useful model for the quantization process is given in Fig. 3-5. Here, the quantization error is assumed 
to be an additive noise source. Because the quantization error is typically not known, the quantization error is 
described statistically. It is generally assumed that e(n) is a sequence of random variables where 
I. 
The statistics of e(n) do not change with time (the quantization noise is a stationary random process). 
2. The quantization noise e(n) is a sequence of uncorrelated random variables. 
3. The quantization noise e(n) is uncorrelated with the quantizer input x(n). 
4. The probability density function of e(n) is uniformly distributed over the range of values of the quan- 
tization error. 
Although it is easy to find cases in which these assumptions do not hold (e.g., if x(n) is a constant), they are 
generally valid for rapidly varying signals with fine quantization (A small). 
Fig. 3-5. A quantization noise model. 
4 n )  
With rounding, the quantization noise is uniformly distributed over the interval [-A/2, A/2], and the 
quantization noise power (the variance) is 
,.,: 
= - 
12 
Quantizer 
z(n) = Q[z(n)l 
- 

106 
SAMPLING 
[CHAP. 3 
With a step size 
and a signal power ?:, the signal-to-quantization noise ratio, in decibels (dB), is 
Thus, the signal-to-quantization noise ratio increases approximately 6 dB for each bit. 
The output of the quantizer is sent to an encoder-, which assigns a unique binary number (codeword) to each 
quantization level. Any assignment of codewords to levels may be used, and many coding schemes exist. Most 
digital signal processing systems use the two's-complement representation. In this system, with a (B + 1) bit 
codeword, 
c = [bo, h l ,  . . . , bB] 
the leftmost or most significant bit, bo, is the sign bit, and the remaining bits are used to represent either binary 
integers or fractions. Assuming binary fractions, the codeword bobl b2 . . . bs has the value 
An example is given below for a 3-bit codeword. 
I Binary Symbol 
Numeric Value I 
3.3 DIGITAL-TO-ANALOG CONVERSION 
As stated in the sampling theorem, if x,(t) is strictly bandlimited so that Xa(jSZ) = 0 for Is21 > no, and if 
T, < T /  
QO, then xa(t) may be uniquely reconstructed from its samples x(n) = x,(nT,). The reconstruction pro- 
cess involves two steps, as illustrated in Fig. 3-6. First, the samples x(n) are converted into a sequence of impulses, 
and then x,(t) is filtered with a reconstructionfilter, which is an ideal low-pass filter that has a frequency response 
given by 
This system is called an ideal discrete-to-continuous (DIC) converter. Because the impulse response of the 
reconstruction filter is 

CHAP. 31 
SAMPLING 
Fig. 3-6. (a) A discrete-to-continuous converter with an ideal low-pass reconstruction filter. (h) The 
frequency response of the ideal reconstruction filter. 
the output of the filter is 
63 
ce 
sin n(t - nTs)/TT 
xa(t) = C x(n)hAr - nTs) = C x(n) 
n=-00 
n=-m 
~
(
1
 
- nT,$)/Ts 
This interpolation formula shows how x,(t) is reconstructed from its samples x(n) = x,(nTs). In the frequency 
domain, the interpolation formula becomes 
which is equivalent to 
n 
T ~ X ( ~ J * ~ S )  In1 < - 
X A j W  = 
1
0
 
otherwise 
TS 
Thus, x(eiw) is frequency scaled (o = QTS), and then the low-pass filter removes all frequencies in the periodic 
spectrum x(eiQTr) above the cutoff frequency Q,. = TIT,. 
Because it is not possible to implement an ideal low-pass filter, many D/A converters use a zero-order hold 
for the reconstruction filter. The impulse response of a zero-order hold is 
I 
O i t l T ,  
ho(0 = 0 
otherwise 
and the frequency response is 
After a sequence of samples xa(nT,) has been converted to impulses, the zero-order hold produces the staircase 
approximation to xu(!) shown in Fig. 3-7. With a zero-order hold, it is common to postprocess the output with a 
reconstruction compensation filter that approximates the frequency response 

SAMPLING 
[CHAP. 3 
-2T. -T. 
0 
T. 
2T. 3T. 4T. 
-2T. -T. 
0 
T. 
2T. 3T. 4T. 
Fig. 3-7. The use of a zero-order hold to interpolate between the samples in x,(t). 
so that the cascade of Ho(ejo) with HC(ejw) approximates a low-pass filter with a gain of T, over the passband. 
Figure 3-8 shows the magnitude of the frequency response of the zero-order hold and the magnitude of the 
frequency response of the ideal reconstruction compensation filter. Note that the cascade of H , ( j n )  with the 
zero-order hold is an ideal low-pass filter. 
/Ideal 
interpolating filter 
Zero-order hold 
( h )  
Fig. 3-8. (a) The magnitude of the frequency response of a zero-order 
hold compared to the ideal reconstruction filter. (b) The ideal reconstruc- 
tion compensation filter. 
3.4 
DISCRETE-TIME PROCESSING OF ANALOG SIGNALS 
One of the important applications of A D  and D/A converters is the processing of analog signals with a discrete- 
time system. In the ideal case, the overall system, shown in Fig. 3-9, consists of the cascade of a C/D converter, 
a discrete-time system, and a D/C converter. Thus, we are assuming that the sampled signal is not quantized 
and that an ideal low-pass filter is used for the reconstruction filter in the D/C converter. Because the input 
xa(t) and the output ya(t) are analog signals, the overall system corresponds to a continuous-time system. To 
analyze this system, note that the C/D converter produces the discrete-time signal x(n), which has a DTFT 
given by 
If the discrete-time system is linear and shift-invariant with a frequency response H ( e j W ) ,  

CHAP. 31 
SAMPLING 
Fig. 3-9. Processing an analog signal using a discrete-time system. 
Finally, the D/C converter produces the continuous-time signal y,(t) from the samples y(n) as follows: 
W 
sin n ( t  - nT,)/ Ts 
~
~
(
0
 
= C y(n) 
n = - ~  
~
(
t
 
- nT,)/Ts 
Either using Eq. (3.7) or by taking the DTFT directly, in the frequency domain this relationship becomes 
If x,(t) is bandlimited with X,(jQ) = 0 for IQI > TIT,, the low-pass filter H,(jQ) eliminates all terms in the 
sum except the first one, and 
Therefore, the overall system behaves as a linear time-invariant continuous-time system with an effective fre- 
quency response 
n 
H ( e j n K )  
lQl I 
- 
H,(jQ) = 
1
0
 
otherwise 
TS 
Just as a continuous-time system may be implemented in terms of a discrete-time system, it is also possible 
to implement a discrete-time system in terms of a continuous-time system as illustrated Fig. 3-10. The signal 
x,(t) is related to the sequence values x(n) as follows: 
Fig. 3-10. Processing a discrete-time signal using a continuous-time system. 
Because x,(t) is bandlimited, y,(t) is also bandlimited and may be represented in terms of its samples as follows: 

110 
SAMPLING 
[CHAP. 3 
The relationship between the Fourier transform of xa(t) and the DTFT of x(n) is 
X 
cx(ejaTs) 
Is21 < - 
X a ( j n )  = 
T, 
otherwise 
and the relationship between the Fourier transforms of x, (t ) and ya (t) is 
n 
Ya(jn) = ( ~ ~ ( j ~ r ( j W  
"
I
 < - 
Ts 
otherwise 
Therefore, 
and the frequency response of the equivalent discrete-time system is 
3.5 SAMPLE RATE CONVERSION 
In many practical applications of digital signal processing, one is faced with the problem of changing the sampling 
rate of a signal. The process of converting a signal from one rate to another is called sample rate conversion. 
There are two ways that sample rate conversion may be done. First, the sampled signal may be converted back 
into an analog signal and then resampled. Alternatively, the signal may be resampled in the digital domain. This 
approach has the advantage of not introducing additional distortion in passing the signal through an additional 
D/A and A D  converter. In this section, we describe how sample rate conversion may be performed digitally. 
3.5.1 Sample Rate Reduction by an Integer Factor 
Suppose that we would like to reduce the sampling rate by an integer factor, M. With a new sampling period 
T,' = MT,, the resampled signal is 
Therefore, reducing the sampling rate by an integer factor M may be accomplished by taking every Mth sample of 
x(n). The system for performing this operation, called adown-sampler, is shown in Fig. 3-1 l(a). Down-sampling 
generally results in aliasing. Specifically, recall that the DTFT of x(n) = x,(nT,) is 
Similarly, the DTFT of x&) = x(n M )  = x,(n M T,) is 
Note that the summation index r in the expression for Xd(ejo) may be expressed as 
r = i + k M  

CHAP. 31 
SAMPLING 
Fig. 3-11. (a) Down-sampling by an integer factor M. (b) Decimation by 
a factor of M, where H(ejU) is a low-pass filter with a cutoff frequency 
where -oo < k < oo and 0 5 i 5 M  - 1. Therefore, Xd(eJW) may be expressed as 
The term inside the square brackets is 
Thus, the relationship between x ( e j w )  and X d  ( e j w )  is 
1 M-I 
xd (ejw) = _ C ~ ( ~ i i w - 2 n k l l M  
k=O 
1 
Therefore, in order to prevent aliasing, x ( n )  should be filtered prior to down-sampling with a low-pass filter 
that has a cutoff frequency o,. 
= n / M .  The cascade of a low-pass filter with a down-sampler illustrated in 
Fig. 3- 11(b) is called a decimator. 
3.5.2 Sample Rate Increase by an Integer Factor 
Suppose that we would like to increase the sampling rate by an integer factor L. If xa(t) is sampled with a 
sampling frequency fs = I / T,, then 
x ( n )  = xa(nTs) 
To increase the sampling rate by an integer factor L, it is necessary to extract the samples 
from x(n). The samples of x;(n) for values of n that are integer multiples of L are easily extracted from x ( n )  as 
follows: 
x i ( n L )  = x ( n )  

112 
SAMPLING 
[CHAP. 3 
Shown in Fig. 3-12(a) is an up-sampler that produces the sequence 
x(n/L) 
n = O , f L , f 2 L ,  ... 
Zi(n) = 
otherwise 
In other words, the up-sampler expands the time scale by a factor of L by inserting L - 1 zeros between each 
sample of x(n). In the frequency domain, the up-sampler is described by 
Therefore, X(eJW) is simply scaled in frequency. After up-sampling, it is necessary to remove the frequency 
scaled images of X,(jQ), except those that are at integer multiples of 2 x .  This is accomplished by filtering Z;(n) 
(h) 
Fig. 3-12. 
(a) 
Up-sampling by an integer factor L. (b) Interpolation by 
a factor of L. 
with a low-pass filter that has a cutoff frequency of n/L and a gain of L. In the time domain, the low-pass filter 
interpolates between the samples at integer multiples of L as shown in Fig. 3-13. The cascade of an up-sampler 
with a low-pass filter shown in Fig. 3-12(b) is called an interpolator. The interpolation process in the frequency 
domain is illustrated in Fig. 3-14. 
( b )  
Fig. 3-13. 
(a) The output of the up-sampler. (b) The interpolation 
between the samples T,(n) that is performed by the low-pass filter. 

CHAP. 31 
SAMPLING 
4n 
-- 
Zn 
n 
I 
-- -- 
9 
2n 
L 
L
L
 
L
L
 
!E = 2n 
L 
(e) 
Fig. 3-14. Frequency domain illustration of the process of interpolation. (a) The 
continuous-time signal. (b) The DTFT of the sampled signal x(n) = x,(nT,). 
(c) The DTFT of the up-sampler output. (d) The ideal low-pass filter to perform the 
interpolation. (e) The DTFT of the interpolated signal. 
3.5.3 Sample Rate Conversion by a Rational Factor 
The cascade of a decimator that reduces the sampling rate by a factor of M with an interpolator that increases 
the sampling rate by vital factor of L results in a system that changes the sampling rate by a rational factor 
of L / M .  This cascade is illustrated in Fig. 3-15(a). Because the cascade of two low-pass filters with cutoff 
frequencies n/M and n/L is equivalent to a single low-pass filter with a cutoff frequency 
the sample rate converter may be simplified as illustrated in Fig. 3-15(b). 

SAMPLING 
[CHAP. 3 
Fig. 3-15. (a) Cascade of an interpolator and a decimator for changing the sampling rate by a rational factor L I M .  
(b) A simplified structure that results when the two low-pass ti lters are combined. 
EXAMPLE 3.5.1 
Suppose that a signal x,,(t) has been sampled with a sampling frequency of 8 kHz and that we would 
like to derive the discrete-time signal that would have been obtained if xu(!) had been sampled with a sampling frequency of 
10 kHz. Thus, we would like to change the sampling rate by a factor of 
This may be accomplished by up-sampling x ( n )  by a factor of 5, tiltering the up-sampled signal with a low-pass filter that 
has a cutoff frequency w, = n/5 and a gain of 5, and then down-sampling the filtered signal by a Factor of 4. 
Solved Problems 
AID and DIA Conversion 
3.1 
Consider the discrete-time sequence 
Find two different continuous-time signals that would produce this sequence when sampled at a frequency 
off, = 10 Hz. 
A continuous-time sinusoid 
.%(I) = COS(QOI) = cos(2n fat) 
that is sampled with a sampling frequency off, results in the discrete-time sequence 
However, note that for any integer k, 
cos ( 2rr - n  
= cos ( 2n - 
f o f k f ' n )  
f s  
Therefore, any sinusoid with a frequency 

CHAP. 31 
SAMPLING 
115 
will produce the same sequence when sampled with a sampling frequency f,. With x(n) = cos(nn/8), we want 
or 
fo = i!g fs = 625 Hz 
Therefore, two signals that produce the given sequence are 
x,(t) = cos(1250nf) 
and 
.r2(t) = cos(21250nt) 
3.2 
If the Nyquist rate for xa(t) is a , ,  what is the Nyquist rate for each of the following signals that are 
derived from xa (r )? 
dxa(t) 
(a) 7 
(b) xa (2t) 
(c) ~,2(t) 
(4 x a 0 )  cos(Qot) 
(a) The Nyquist rate is equal to twice the highest frequency in x,(t). If 
then 
Y,(jSt) = jStX,(jQ) 
Thus, if X,(jR) = 0 for IQI > Sto, the same will be true for Y,(jR). Therefore, the Nyquist frequency is not 
changed by differentiation. 
(b) The signal ya(t) = xa(2t) is formed from x,(t) by compressing the time axis by a factor of 2. This results in an 
expansion of the frequency axis by a factor of 2. Specifically, note that 
Consequently, if the Nyquist frequency for x,(r) is St,, the Nyquist frequency for y&) will be 2S2,. 
(c) When two signals are multiplied, their Fourier transforms are convolved. Therefore, if 
Thus, the highest frequency in yo([) will be twice that of x,,(r), and the Nyquist frequency will be 2Q,. 
(d) Modulating a signal by cos(Qol) shifts the spectrum of xa(l) up and down by no. Therefore, the Nyquist 
frequency for ya(t) = cos(Qot)xa(r) will be S2, + 2Qo. 

116 
SAMPLING 
[CHAP. 3 
3.3 
Let h,(t) be the impulse response of a causal continuous-time filter with a system function 
Thus, H,(s) has a zero at s = -a and a pair of poles at s = -a k jh. By sampling h,(t) we form a 
discrete-time filter with a unit sample response 
Find the frequency response H(ejw) of the discrete-time filter. 
To find the frequency response H(eJU), 
it is necessary to find the impulse response of the analog filter, h,(t), sample 
the impulse response, 
h(n) = h,(nT,) 
and then find the discrete-time Fourier transform, 
To find the impulse response, we first perform a partial fraction expansion of Ha(s) as follows: 
A 
B 
Ha(s) = s + ( a  + jb) + s + ( a  - jb) 
The constant A is 
Similarly, for B we have 
Therefore, 
I 
I 
- 
Ha(s) = s + ( a  + jb) + s + (a2- jb) 
Another way to find the constants A and B would be to write Eq. (3.13) over a common denominator, 
s + a  
= A(s + a  - jb) + B(s + a  + jb) 
Ha(s) = (s + 
+ b2 
(s + a)2 + b2 
and equate the polynomial coefficients in the numerators of H,(s): 
A + B = I  
A(a - jb) + B(a + jb) = a 
Solving these two equations for A and B gives the same result as before. From the partial fraction expansion of 
Ha(s), the impulse response may be found using the Laplace transform pair 

CHAP. 31 
SAMPLING 
Sampling ha(! ), we have 
h(n) = h,(nT,) = e-a"T~os(bn~s)u(n) 
Finally, for the frequency response we have 
Note that in order for these sums to converge, and for the frequency response to exist, it is necessary that 
le-aTs ( < I 
or, because T, > 0, we must have a > 0. In other words, the poles of H,(s) must lie in the left-half s-plane or, 
equivalently, h,,(t) must be a stable filter. With a > 0 we have 
which, after combining over a common denominator and simplifying, gives 
3.4 
A continuous-time filter has a system function 
If h,(t) is sampled to form a discrete-time system with a unit sample response 
h(n) = ha(nT7) 
find the value for Ts so that ~ ( e . ~ " )  
at w = rr/2 is down 6 dB from its maximum value at w = 0, that is, 
I H (eJT'2)12 
10 log 
= -6 
I H (eio)12 
The impulse response of the continuous-time system is 
h,(t) = e-'u(t) 
When sampled with a sampling period T,, the resulting unit sample response is 
h(n) = h,,(nT,) = e-"%u(n) 
and the frequency response is 

SAMPLING 
[CHAP. 3 
With 
and 
it follows that we want 
~ H ( e ~ ~ f ~ ) l ~  
lo log 
= lolog 
( 1  - c - & ) ~  = -6 
I H(ej0)12 
1 + ecZTs 
Thus, we have 
1 - 2KTs + e-2T' = 0.2512 [I + e-2T'] 
or 
0.7488e-~~' - 2KT' + 0.7488 = 0 
which is a quadratic equation in e d  . Solving for the roots of this quadratic equation, we find 
Taking the natural logarithm, and selecting the positive value for T,, we have 
T, = 0.7978 
3.5 
A continuous-time signal xa(t) is bandlimited with X,(jS1) = 0 for IS11 > n o .  If xa(t) is sampled with 
a sampling frequency S1, 2 2Slo, how is the energy in x(n), 
related to the energy in xa(t), 
W 
and the sampling period T,? 
Using Parseval's theorem, the energy in the analog signal x,(t) may be expressed in the frequency domain as follows: 
Because x,(t) is bandlimited with X,(jQ) = 0 for Is21 
Go, 
Sampling x,(t) at or above the Nyquist rate results in a sequence x(n) with a discrete-time Fourier transform 

CHAP. 31 
SAMPLING 
Therefore, the energy in x(n), using Parseval's theorem, is 
and we have 
I 
E,, = - 
E, 
Ts 
As a check on this result. suppose that x,(t) is a bandlimited signal with a spectrum shown in the figure below. 
t """"' 
The energy in x, ( I )  is 
When sampled with a sampling frequency Q, 1 2Qo, the DTFT of the sampled signal is as shown in the following 
figure: 
Therefore, the energy in x(n) is 
3.6 
A complex bandpass analog signal xa(t) has a Fourier transform that is nonzero over the frequency range 
[Ql, Q2] as shown in the figure below. 
The signal is sampled to produce the sequence x(n) = xa(nT,). 
(a) What is the smallest sampling frequency that can be used so that xa(t) may be recovered from its 
samples x(n)? 

SAMPLING 
[CHAP. 3 
(b) For this minimum sampling frequency, find the interpolation formula for x,(t) in terms of x(n). 
(a) Because the highest frequency in xa(t) is Q2, the Nyquist rate is 2Q2. However, note that if xa(t) is modulated 
with a complex exponential of frequency (Q2 + Q1)/2, 
then y,(t) is a (complex) low-pass signal with a spectrum shown in the following figure: 
A Y u ( j Q )  
where Qo = (Q2 - Q1)/2. Thus, the Nyquist rate for yo(() is 2Q0 = Q2 - Ql, which suggests that x,(t) may 
be uniquely reconstructed from its samples x,(nT,) provided that 
If xa(t) is sampled with a sampling frequency Q,, the spectrum of the sampled signal is 
as illustrated below. 
QI - %  
Q2-Qs 
QI 
Q2 
In order for there to be no interference between the shifted spectra, it is necessary that 
If this condition is satisfied, xa(t) may be uniquely reconstructed from xs(t) using a bandpass filter with a 
frequency response as shown below. 
(b) With a sampling frequency Q, = Q2 - Ql, the reconstruction filter is a complex bandpass filter with an impulse 
response 
ha(!) = Ts s i n ( Q s t / 2 ) e - j ( ~ 2 + ~ ~ ~  
Trt 

CHAP. 31 
SAMPLING 
Therefore, the output of the reconstruction filter, which produces the complex bandpass signal x,(t), is 
3.7 
Given a real-valued bandpass signal x,(t) with X a ( f )  = 0 for If l < fi and If 1 > f2, the Nyquist 
sampling theorem says that the minimum sampling frequency is fs = 2  f2. However, in some cases, the 
signal may be sampled at a lower rate. 
(a) Suppose that fl = 8 kHz and f2 = 10 kHz. Make a sketch of the discrete-time Fourier transform 
of x(n) = x,(nTs) if fs = I /T, = 4 kHz. 
(6) Define the bandwidth of the bandpass signal to be 
and the center frequency to be 
Show that if f, > B / 2  and f2 is an integer multiple of the bandwidth B ,  no aliasing will occur if 
xa(t) is sampled at a sampling frequency fs = 2 8 .  
(c) Repeat part (b) for the case in which f2 is not an integer multiple of the bandwidth B. 
(a) Let xu([) have a spectrum as shown in the figure below. 
The spectrum of the sampled signal 
which is formed by shifting X,( f )  by integer multiples of the sampling frequency and summing. With f, = 
4 kHz, we have the spectrum sketched below. 
kHz 
Note that X,( f) is not aliased. Therefore, with the appropriate processing of x,(r), the signal x,(r) may be 
recovered from its samples. Finally, the DTFT of the discrete-time sequence x(n) = x,(nTs) is 

SAMPLING 
[CHAP. 3 
which is sketched below. 
, 
x(c'") 
(b) If fi is an integer multiple of B, we may express f i  and f2 as follows: 
With a sampling frequency of f, = 2B, the sampled signal has a spectrum 
Because X a ( f )  is nonzero only for (I - l)B < If 1 < lB, there is only one term in the sum that contributes to 
X,( f )  in the frequency range O< f < B and only one term that contributes to the frequency range - B i 
f < 0 
(draw a picture as in part (a) to see this clearly). Therefore, there is no aliasing, and x,(t) may be sampled 
without aliasing if a sampling frequency f, = 2B. 
(c) If f2 is not an integer multiple of B, we may always increase B until this is the case. Specifically, let 
where 1.1 is defined to be the "integer part." Now, if we simply increase B to B' where 
we have the case described in part ( b )  where fi is an integer multiple of the bandwidth. Thus, x,(t) may be 
sampled without aliasing a sampling frequency of 
3.8 
Determine the minimum sampling frequency for each of the following bandpass signals: 
(a) xa(t) is real with Xu( f )  nonzero only for 9 kHz < (f 
1 < 12 kHz. 
(b) xa(t) is real with Xu( f )  nonzero only for 18 kHz < 1 f 1 < 22 kHz. 
(c) xa(t) is complex with X,( f )  nonzero only for 30 kHz < f < 35 kHz. 
(a) For this signal, the bandwidth is B = f2 - f l  = 3 kHz, and f2 = 12 = 4B is an integer multiple of B. 
Therefore, the minimum sampling frequency is f, = 2B = 6 kHz. 
(b) For this signal, B = 4 kHz and f2 = 22, which is not an integer multiple of B. With Lfi/B1 = 5, if we let 
B' = f 2 / 5  = 4.4, f2 is an integer multiple of B', and .ra(t) may be sampled with a sampling frequency of 
f, = 28' = 8.8 kHz. 
(c) For a complex bandpass signal with a spectrum that is nonzero for fi < f < f2, the minimum sampling 
frequency is f, = f2 - f l .  Thus, for this signal, f, = 5 kHz. 
3.9 
How many bits are needed in an A/D converter if we want a signal-to-quantization noise ratio of at least 
90 dB? Assume that xa(t) is gaussian with a variance a:, 
and that the range of the quantizer extends from 
-3a, 
to 3ax; that is, X,,, = 30; (with this value for X,,,, 
only about one out of every 1000 samples 
will exceed the quantizer range). 

CHAP. 31 
SAMPLING 
For a (B + I)-bit quantizer, the signal-to-quantization noise ratio is 
x 
m,, 
SQNR = 6.02B + 10.8 1 - 2010g - 
4 r  
With X,,, = 30, this becomes 
SQNR = 6.02B + 10.81 - 20l0g3 = 6.02B + 10.81 - 9.54 = 6.02B + 1.27 
If we want a signal-to-quantization noise ratio of 90 dB, we require 
3.10 
An image is to be sampled with a signal-to-quantization noise ratio of at least 80 dB. Unlike many other 
signals, the image samples are nonnegative. Assume that the sampling device is calibrated so that the 
sampled image intensities fall within the range from 0 to 1. How many bits are needed to achieve the 
desired signal-to-quantization noise ratio? 
For a bipolar signal with amplitudes that fall within the range [-X,,,,, 
X,,,], the signal-to-quantization noise ratio 
is 
SQNR = 6.02B + 10.81 - 201og& 
0, 
For a nonnegative signal that is confined to the interval [0, I], the signal-to-quantization noise ratio is equivalent to 
the bipolar case if we set X,,, = 0.5. If we assume that the intensities of the image are uniformly distributed over 
the interval [0, I], 
u 2  = I 
r 
12 
Therefore, 
rn 
SQNR = 6.02B + 10.81 - 2010g - 
= 6.02B + 6.03 
2 
and for a signal-to-quantization noise ratio of 80 dB, we require 
or B + 1 = 14 bits. 
3.11 
Suppose that we have a set of unquantized samples, x(n), that are nonnegative for all n. A method for 
quantizing x(n) that is often used in speech processing is as follows. First, we form the sequence 
y(n) = log[x(n)l 
Then y(n) is quantized with a (B + 1)-bit uniform quantizer, 
9(n) = C?[y(n)l = y(n) + e(n) 
The quantized signal samples are then obtained by exponentiating J(n), 
W )  = exp(9(n)) 
Show that if' e(n) is small, the signal-to-quantization noise ratio is independent of the signal power. 

SAMPLING 
we have, for R(n), 
R(n) = exp{log[x(n)l + e(n)} = x(n) . exp(e(n)) 
If e(n) << 1, we may use the expansion 
exp{e(n)) x 1 + e(n) 
to write 
&n) = x(n)l I + e(n)] = x(n) + f (n) 
where f (n) = x(n)e(n) is a (signal-dependent) quantization noise. If we assume that the quantization noise e(n) is 
statistically independent of x(n), 
Elf2(n)) = ~ { x ~ ( n ) } .  
E{e2(n)) 
and the signal-to-quantization noise ratio is 
E{x2(n)l 
SQNR = 10 log - 
= -10 log E (e2(n)) 
E{f '(n)) 
which is independent of the signal power. 
Discrete-Time Processing of Analog Signals 
A continuous-time signal xa(t) is to be filtered to remove frequency components in the range 5 kHz 5 f i 
10 kHz. The maximum frequency present in xa(t) is 20 kHz. The filtering is to be done by sampling 
x,(t), filtering the sampled signal, and reconstructing an analog signal using an ideal D/C converter. Find 
the minimum sampling frequency that may be used to avoid aliasing, and for this minimum sampling 
rate, find the frequency response of the ideal digital filter H(eJm) that will remove the desired frequencies 
from xa (t). 
Because the highest frequency in x,(t) is 20 kHz, the minimum sampling frequency to avoid aliasing is f, = 40 kHz. 
The relationship between the continuous frequency variable R and the discrete frequency variable o is given by 
Therefore, the frequency range 5 kHz 5 f 5 10 kHz corresponds to a digital frequency range 
and the desired digital filter is a bandstop filter that has a frequency response as illustrated in the figure below. 
3.13 
A major problem in the recording of electrocardiograms (ECGs) is the appearance of unwanted 
60-Hz interference in the output. The causes of this power line interference include magnetic induc- 
tion, displacement currents in the leads on the body of the patient, and equipment interconnections. 
Assume that the bandwidth of the signal of interest is 1 kHz, that is, 

CHAP. 31 
SAMPLING 
125 
The analog signal is converted into a discrete-time signal with an ideal A/D converter operating using 
a sampling frequency tY. 
The resulting signal x(n) = x,(nTs) is then processed with a discrete-time 
system that is described by the difference equation 
The filtered signal, y(n), is then converted back into an analog signal using an ideal D/A converter. Design 
a system for removing the 60-Hz interference by specifying values for f,, a, and b so that a 60-Hz signal 
of the form 
w,(t) = A sin(l20nt) 
will not appear in the output of the D/A converter. 
The signal that is to have the 60-Hz noise removed is bandlimited to 1000 Hz. Therefore, in order to avoid aliasing 
when the signal is sampled, we require a sampling frequency 
Using the minimum rate of 2000 Hz, note that a 60-Hz signal wo(t) = sin(l20nt) becomes 
where 
= 0.06n. Recall that complex exponentials are eigenfunctions of linear shift-invariant systems. Therefore, 
if the input to an LSI system is x(n) = eJn"O, the output is 
Because 
w(n) will be removed from x ( n )  if we design a filter so that H(ejw) is equal to zero at w = f 
wo. Because H(eJw) is 
a second-order filter with a frequency response 
it may be factored as follows: 
H(eJ") = (1 - ~ e - ~ " ) ( l  - fie-]") 
Therefore, H (ejw) will be zero for w = f 
wo if a! = eJw and B = e--1". In this case, we have 
Thus, our requirements are that 
a = -2 cos wo = -2 cos(0.06n) 
h = 1 
and f, = 2000. 
3.14 
The following system is used to process an analog signal with a discrete-time system. 
I 
I 
xo(r) 
D/C 
C P  
YO@) 
- 
. Discrete-time 
System 
' y )  

SAMPLING 
[CHAP. 3 
Suppose that xa(t) is bandlimited with X,( f )  = 0 for If 1 > 5 kHz as shown in the figure below, 
+ X d f )  
and that the discrete-time system is an ideal low-pass filter with a cutoff frequency of n/2. 
Find the Fourier transform of ya(t) if the sampling frequencies are f l  = f2 = 10 kHz. 
Repeat for f l  = 20 kHz and f2 = 10 kHz. 
Repeat for f l  = 10 kHz and f2 = 20 kHz. 
When the sampling frequencies of the C/D and D/C converters are the same, and x,(t) is bandlimited with 
X,(jS2) = 0 for If21 > n/Tl, this system is equivalent to an analog filter with a frequency response 
Therefore, if ~ ( e j " )  
is a low-pass filter with a cutoff frequency 71/2. the cutoff frequency of Ha(jf2), denoted 
by n o ,  is given by 
Thus, 
fo = fl = 2500 Hz 
When the sampling frequencies of the C/D and D/C are different, it is best to plot the spectrum of the signals as 
they progress through the system. Wilh X,( f )  as shown above, the discrete-time Fourier transform of x ( n )  is 
Because the cutoff frequency of the discrete-time low-pass filter is n/2, y ( n )  = x(n), and the output of the D/C 
converter is as plotted below. 
With f i  = 10 kHz, we are sampling xu([) at the Nyquist rate, and the spectrum of x ( n )  is 
+ X k J " )  

CHAP. 31 
SAMPLING 
and the output of the low-pass filter is as shown below. 
+ y(el") 
Therefore, the spectrum of yo(() is as follows: 
+ Y a ( f )  
3.15 
Consider the system in Fig. 3-9 for implementing a continuous-time system in terms of a discrete-time 
system. Assume that the input to the C/D converter is bandlimited to Q0 = Q,/2 and that the unit sample 
response of the discrete-time system is 
Find the overall frequency response of this system. 
Assuming bandlimited inputs with X,(JR) = 0 for ( R (  > Rs/2, the output Ya(jR) is related to the input X,(jS2) 
as follows: 
ya(jQ) = HJjR)X(JQ) 
Because the frequency response of the discrete-time system is 
H(el") = I - 0.9e-I" 
then 
IT 
H"(;n) = 
otherwise 
3.16 
Consider the system shown in Fig. 3-9 for implementing a continuous-time system in terms of a discrete- 
time system. Assuming that the input signals x,(t) are bandlimited so that X,( f )  = 0 for (f 
( > 10 kHz, 
find the discrete-time system that produces the output 
Iflx,(f> 
2 0 0 0 5 I f l i 8 0 0 0  
r,(f) = 
otherwise 
For bandlimited inputs, the system in Fig. 3-9 is a linear shift-invariant system with an effective frequency response 
equal to 
The system that we would like to realize has a frequency response 
(:I 
40001~ 
1 In1 5 I sooh 
Ha(jQ) = 
otherwise 

SAMPLING 
[CHAP. 3 
If we assume a sampling frequency f, = 20 kHz, the frequency response of the discrete-time system should be 
W 
0 . 2 ~  5 101 
5 0 . 8 ~  
otherwise 
where T, = 1/20000. 
3.17 
Diagrammed in the figure below is a hybrid digital-analog network. 
The discrete-time system H(eJW) is a low-pass filter 
~ ( e " )  = { A 
I 4  5 o o  
0 
else 
and the analog system Hhpf( f )  is a high-pass filter with a frequency response as shown below. 
t "'"' 
The input xa(r) is bandlimited to 4 kHz, and the sampling frequencies of the ideal C P  and DIC converters 
are 10 kHz. Find the value for A and q 
that will result in perfect reconstruction of xa(t), 
Because x a ( t )  is bandlimited to 4 kHz, the upper branch of this hybrid system acts as an ideal analog low-pass filter 
with a frequency response 
Because the analog network is a high-pass filter with a cutoff frequency of 4 kHz, and 
&(t) will be equal to xa(t) provided that A = 1 and 
3.18 
A digital sequence x ( n )  is to be transmitted across a linear time-invariant bandlimited channel as illustrated 
in the figure below. 

CHAP. 31 
SAMPLING 
Transmitter 
Receiver 
The transmitter is a D/C converter, and the receiver simply samples the received waveform y,(r): 
Assume that the channel may be modeled as an ideal low-pass filter with a cutoff frequency of 4 kHz: 
(a) Assuming an ideal C P  and D/C, and perfect synchronization between the transmitter and receiver, 
what values of T, (if any) will guarantee that y(n) = x(n)? 
(b) Suppose that the D/C is nonideal. Specifically, suppose that x(n) is first converted to an impulse 
train and then a zero-order hold is used to perform the "interpolation" between the sample values. 
In other words, the impulse response of the interpolating filter is a pulse of duration T,: 
1 
0 5 1 i T '  
M t )  = 0 
otherwise 
Because the received sequence y(n) will no longer be equal to x(n), in order to improve the perfor- 
mance of the receiver, the received samples are processed with a digital filter as shown below. 
Find the frequency response of the filter that should be used to filter y(n). 
(a) The output of the D/C converter is a bandlimited signal xa(t) with a Fourier transform that is equal to zero for 
If 
1 > fs/2. Because xa(t) is passed through a bandlimited channel that rejects all frequencies greater than 
4 kHz, in order for there to be no distortion at the receiver, it is necessary that 
Thus, the C/D and D/C converters must operate at a rate less than 8 kHz. 
(b) In order to get the maximum amount of data through the channel per unit of time, we will let T, be the minimum 
sampling period, 
Ts = &, 
When the reconstruction filter in the D/C converter is a zero-order hold, the frequency response of the discrete- 
time system that relates the input sequence x(n) to the reconstructed sequence y(n) is 

SAMPLING 
[CHAP. 3 
where 
Therefore, 
I 
0 
otherwise 
and the discrete-time filter for processing y(n) to remove the distortion introduced by the zero-order hold should 
approximate the response 
3.19 
Consider the following system for processing a continuous-time signal with a discrete-time system: 
The frequency response of the discrete-time filter is 
Iff, = 2 kHz and x,(t) = sin(lOOO~t), find the output y,(t). 
Sampling n,(r) = sin(10007rr) with a sampling frequency f, = 2000 produces the discrete-time sequence 
x(n) = x,(nT,) = sin(10007rnTs) = sin - 
(3 
This sequence is then filtered with the discrete-time filter 
Because x(n) is a sinusoid, the response is 
where A and 4 are the magnitude and phase, respectively, of the frequency response at o = 1712. With 
$ - ; 
coso = 4 
(I - e
)
 
( I  - I
)
 
- COSO 
it follows that I H (ejw)l = 2. We may evaluate the phase as follows: 

CHAP. 3) 
SAMPLING 
8
.
 
sln w 
Therefore. 
4,,(~) = tan-' ; - $ cos, 
which, when evaluated at o = n/2, gives 
4,, (w)J,=,/~ = tan-' 
= tan-' 
= 0.2952~ 
Thus, 
y(n) = 2sin(:[n + 0.59031) 
3.20 
Consider the following system consisting of an ideal D/C converter, a linear time-invariant filter, and an 
ideal C P  converter. 
The continuous-time system h,(t) is an ideal low-pass filter with a frequency response 
I 
1 
I f 1  5 1OkH.z 
H d f )  = 
otherwise 
(a) If TI = T2 = 
find an expression relating the output y(n) to the input x(n). 
(b) If TI = (a) x 
and T2 = 
find y(n) when 
(a) When TI = T2, this system behaves as a linear shift-invariant discrete-time system with a frequency response 
Because H,(jS2) = 1 for 152) < 2 n .  lo4, 
and 
h(n) = 6(n) 
Therefore, y(n) = x(n). 
Another way to analyze this system is to note that the output of the D/C converter, x,(t), is bandlimited to 
f = 5 kHz. Because Ha( f )  is an ideal low-pass filter with a cutoff frequency 10 kHz, yo(!) = xo(t). Therefore, 
this system is equivalent to the one shown below. 
Because an ideal D/C converter followed by an ideal D/C converter is the identity system, y(n) = x(n). 
(b) When TI + T2, this system is, in general, no longer a linear shift-invariant system. However, we may analyze 
this system in the frequency domain as follows. First, note that the DTFTofx(n) is as illustrated in the following 
figure: 

SAMPLING 
[CHAP. 3 
Thus, the output of the D/C converter is a bandlimited signal that has a Fourier transform as shown in the 
following figure: 
The analog low-pass filter removes all frequencies in xa(t) above 10 kHz to produce a signal y,(t) that has a 
Fourier transform as shown below. 
Because the highest frequency in ya(t) is 10 kHz, the Nyquist rate is 20 kHz. However, the sampling frequency 
of the C/D converter is 10 kHz, so ya(t) will be aliased. The DTFT of y(n) is related to Ya(jQ) as follows: 
Summing the shifted and scaled transforms yields 
Sample Rate Conversion 
3.21 
Suppose that a discrete-time sequence x(n) is bandlimited so that 
This sequence is then sampled to form the sequence 
where N is an integer. Find the largest value for N for which x(n) may be uniquely recovered from y(n). 
The easiest way to view this problem is as illustrated below. 
Converting x(n) into a continuous-time signal with an ideal D/C converter with a sampling frequency f, produces 
a continuous-time signal xa(t) that is bandlimited to fo = 0.3 . fs/2. Therefore, xa(r) may be sampled, without 

CHAP. 31 
SAMPLING 
aliasing, if we use a sampling frequency fsf 2 2 fo = 0.3 f,, or 
Therefore, if T,' = 3T,, 
y(n) = x,(3nTs) = x(3n) 
and x(n) may be uniquely recovered from y(n). Thus, N = 3. 
3.22 
Consider the following system: 
Assume that Xa( f )  = 0 for If ( > l / T s  and that 
How is the output of the discrete-time system, y(n), related to the input signal xa(t)? 
In this system, the bandlimited signalx,(t) is sampled, without aliasing, to produce the sampled signal x(n) = x,(nT,). 
Up-sampling x(n) by a factor of L ,  and filtering with an ideal low.-pass filter with a cutoff frequency w, = n / L ,  
produces the signal 
that is, a signal that is sampled with a sampling frequency L f,. However, because the low-pass filter has linear phase 
with a group delay of one sample, the interpolated up-sampled signal is delayed by 1. Therefore, the output of the 
low-pass filter is 
u(n) = w(n - 1 )  = x, 
Down-sampling by L then produces the output 
Thus, y ( n )  corresponds to samples of x,(c - to) where ro = T,/L. 
3.23 
Consider the system shown in the figure below. 
Assume that the input is bandlimited, Xa(ji2) = 0 for (i2( > 2n . 1000. 
(a) What constraints must be placed on M, T I ,  and T2 in order for ya(t) to be equal to x,(t)? 
(b) If f ,  = f2 = 20 kHz and M = 4, find an expression for ya(r) in terms of x,(t). 

SAMPLING 
[CHAP. 3 
(a) Suppose that x,(r) has a Fourier transform as shown in the figure below. 
Because y(n) = x(Mn) = x,(nMTI), in order to prevent x(n) from being aliased, it is necessary that 
If this constraint is satisfied, the output of the down-sampler has a DTFT as shown below. 
Going through the D/C converter produces the signal yo([), which has the Fourier transform shown below. 
Therefore, in order for yo(/) to be equal to xu(/), we require that 
I .  
MTl 5 1 /2000 in order to avoid aliasing. 
2. 
Tz = MTI to prevent frequency scaling. 
(6) With TI = Tz = 1 /20000 and M = 4, note that 
Therefore, there is no aliasing. Thus, as we see from the figure above, 
3.24 
Digital audio tape (DAT) drives have a sampling frequency of 48 kHz, whereas a compact disk (CD) 
player operates at a rate of 44.1 kHz. In order to record directly from a CD onto a DAT, it is necessary to 
convert the sampling rate from 44.1 to 48 kHz. Therefore, consider the following system for performing 
this sample rate conversion: 

CHAP. 31 
SAMPLING 
135 
Find the smallest possible values for L and M and find the appropriate filter H(eJu) to perform this 
conversion. 
Given that 48000 = 2' . 3 . 5' and 44100 = 22 . 32 . S2 . 72, to change the sampling rate we require 
Therefore, if we up-sample by L = 160 and then down-sample by M = 147, we achieve the desired sample rate 
conversion. The low-pass filter that we require is one that has a cutoff frequency 
Tr 
Tr 
Tr 
wc = min(- -) = -- 
L ' M  
160 
and the gain of the filter should be equal to L = 160. 
3.25 
Suppose that we would like to slow a segment of speech to one-half its normal speed. The speech signal 
sa(t) is assumed to have no energy outside of 5 kHz, and is sampled at a rate of 10 kHz, yielding the 
sequence 
s ( n )  = s,(nT,) 
The following system is proposed to create the slowed-down speech signal. 
Assume that S a ( j Q )  is as shown in the following figure: 
(a) Find the spectrum of v ( n ) .  
(b) Suppose that the discrete-time filter is described by the difference equation 
Find the frequency response of the filter and describe its effecl on v(n). 
(c) What is Y a ( j Q )  in terms of X,(jQ)? Does yo(!) correspond to slowed-down speech? 
(a) Since so(,) is sampled at the Nyquist rate, the DTFT of the sampled speech signal, s(n), is as follows: 
+ W e J w )  
-n 
IT 
Up-sampling by a factor of 2 scales the frequency axis of S(el") by a factor of two as shown below. 

SAMPLING 
[CHAP. 3 
The unit sample response of the discrete-time filter is 
which has a frequency response 
H (eJW) = I + cos w 
To see the effect of this filter on v(n), note that due to the up-sampling, v(n) = 0 for n odd. Therefore. with 
it follows that 
I 
u(n 
n odd 
y(n) = 
i v ( n - I ) + ; u ( n + l )  
neven 
Thus, the even-index values of v(n) are unchanged, and the odd-index values are the average of the two 
neighboring values. As a result, h(n) performs a linear interpolation between the values of v(n). 
The output of the DC converter, y,,(t), has a Fourier transform 
TTY(eJRTr) IS21 < TIT, 
Y,(.W) = 
otherwise 
Since 
Y (ej") = H (pi''') v (ei") = ( I + cos w
)
~
 
(ej") 
and 
v ( e J w )  = s(eJ2") 
then 
which is the product of (1 + cos QT,) and T , S ( ~ J ' " ~ % )  
as illustrated below. 
Thus, y,(t) does not correspond to slowed-down speech due to the images of s,,(r) that occur in the frequency 
range 5000n < IS21 < IOOOOn and the nonideal linear interpolator. Note that a better approximation would be 
to use a DC converter with a sampling rate of 2T, to eliminate the images. 
3.26 
Shown in the figure below are two different ways of cascading an up-sampler with a down-sampler. 

CHAP. 31 
SAMPLING 
(a) If M = L, show that the two systems are not identical. 
(b) Under what conditions will the two systems be identical? 
(a) In the first system, which consists of an up-sampler followed by a down-sampler, note that w l ( n )  is a sequence 
that is formed by inserting L - I zeros between each value of x(n). The down-sampler then extracts every Lth 
value of w l ( n ) ,  thus producing the output 
In the second system, however, the down-sampler extracts every Lth sample of s ( n )  and discards the rest. The 
up-sampler then inserts L - I zeros between each value of w2(nj. Thus, 
Therefore, the two systems are not the same. 
(b) In order to analyze these systems when L # M, note that yz(n) in the second system has the form shown in the 
following figure: 
On the olher hand, the sequence w , ( n )  in the first system is as shown below. 
Note that y l ( n )  is formed by extracting every Mth value of w l ( n ) ,  

SAMPLING 
[CHAP. 3 
Clearly, 
yl(kL) = wl(kML) = x(kM) 
so 
yl(kL) = yz(kL) 
However, in order for yl(n) to be equal to yz(n), we require that 
y,(n) = wl(nM) = 0 
n # kL 
This will be true if and only if M and L are relatively prime. 
Supplementary Problems 
AID and DIA Conversion 
Find two different continuous-time signals that will produce the sequence 
when sampled with a sampling frequency of 8 kHz. 
If the Nyquist rate for xu([) is R,, find the Nyquist rate for (a) x2(2t), (b) x(t/3), (c) x(t) * x(t). 
A continuous-time signal x,(t) is known to be uniquely recoverable from its samples xa(nTs) when T, = 1 ms. What 
is the highest frequency in Xu( f )? 
Suppose that x,(t) is bandlimited to 8 kHz (that is, Xu( f )  = 0 for I f  I 
8000). (a) What is the Nyquist rate for 
.%(I)? (b) What is the Nyquist rate for x,(t)cos(2n . IOOOt)'? 
Let x,(t) = cos(6507ri) + 2 sin(7207rt). (a) What is the Nyquist rate for x,(t)? (b) If xa(t) is sampled at twice the 
Nyquist rate, what are the frequencies of the sinusoids in the sampled sequence? 
If a continuous-time filter with an impulse response h,(r) is sampled with a sampling frequency off,, what happens 
to the cutoff frequency w,. of the discrete-time filter as 1, is increased? 
A complex bandpass signal x,(r) with Xu( f') nonzero for 10 kHz < f < 12 kHz is sampled at a sampling rate of 
2 kHz. The resulting sequence is 
What is x,(t)? 
If the highest frequency in x,(t) is f = 8 kHz, find the minimum sampling frequency for the bandpass signal 
y,(t) = x,(OCOS(R~I) 
if (a) Ro = 27r . 20 . 10' and (b) Ro = 217 . 24 . lo3. 
The continuous-time signal x,(t) = 7.25 cos(20007rt) is sampled at a sampling frequency of 8 kHz and quantized 
with a resolution A = 0.02. How many bits are required in the AID converter to avoid clipping xu([)? 
Suppose that we want to sample the signal x,(t) with a 12-bit quantizer, where x,(t) is assumed to be gaussian with 
a variance u,?. What is the signal-to-quantization noise ratio if we want the range of the quantizer to extend from 
-30, to 3ax? 
Suppose that an analog waveform is sampled with a sampling frequency of 10 kHz and that xu([) contains a 
strong 60-Hz interference signal. If the only information in x,(r) of interest is in the frequency band above 

CHAP. 31 
SAMPLING 
60 Hz, the interference may be eliminated with a discrete-time high-pass filter that has a frequency response of 
the form 
What is the smallest cutoff frequency w, that may be used and still eliminate the 60-Hz interference? 
3.38 
True or False: If x ( n )  has a discrete-time Fourier transform that is equal to zero for n/4 < Iwl I r, 
Discrete-Time Processing of Analog Signals 
The system shown in Fig. 3-9 may be used to process an analog signal with a discrete-time system. Assume that 
x,(t) is bandlimited with X,( f )  = 0 for If 1 > 10 kHz as shown in the figure below. 
If the discrete-time system is an ideal low-pass filter with a cutoff frequency of n/4, find the Fourier transform of 
y o ( [ )  when ( a )  fi = 20 kHz and f2 = 10 kHz and (b) fl = 10 kHz and fi = 20 kHz. 
For bandlimited inpul signals, the system shown in Fig. 3-10 is a linear time-invariant continuous-time system. 
If 
find the frequency response of the equivalent continuous-time system. 
For bandlimited input signals, the system shown in Fig. 3- 10 is a linear time-invariant continuous-time system. If 
the overall system is to be a differentiator, 
how should the frequency response of the discrete-time system be defined? 
Sample Rate Conversion 
3.42 
The up-sampler and down-sampler are components that are found in interpolators and decimators, respectively. Are 
these systems linear? Are they shift-invariant? 
3.43 
A sequence x ( n )  corresponds to samples of a bandlimited signal using a sampling frequency of 10 kHz. However, 
the sequence should have been sampled using a sampling frequency f, = 12 kHz. Design a system for digitally 
changing the sampling rate. 
3.44 
A signal x,(r) that is bandlimited to 10 kHz is processed by the following system: 

SAMPLING 
[CHAP. 3 
10 
otherwise 
express the output ya(t) in terms of the input xa(t). 
Answers to Supplementary Problems 
xl(t) = cos(12rn~t) 
andx2(t) = cos(172~nt). 
(a) 4R,. (b) R,/3. (c) R,. 
500 Hz. 
(a) 16 kHz. (b) 18 kHz. 
o, decreases. 
(a) 56 kHz. (b) 32 kHz. 
10 bits. 
73.51 dB. 
o, = 0.012n. 
True. 

CHAP. 31 
SAMPLING 
1 
H 
3.40 
Ha(jR) = 
1Ql -= - 
TY 
otherwise 
3.41 
H (el") = jw/T, for lo1 < n. 
3.42 
Both are linear and shift-varying. 
3.43 
Up-sample by L = 6, filter with a low-pass filter that has a cutoff frequency of o,. 
= ~ / 6  
and a gain of 6, and 
down-sample by M = 5. 

Chapter 4 
The *Transform 
4.1 INTRODUCTION 
The z-transform is a useful tool in the analysis of discrete-time signals and systems and is the discrete-time 
counterpart of the Laplace transform for continuous-time signals and systems. The z-transform may be used to 
solve constant coefficient difference equations, evaluate the response of a linear time-invariant system to a given 
input, and design linear filters. In this chapter, we will look at the z-transform and examine how it may be used 
to solve a variety of different problems. 
4.2 DEFINITION OF THE Z-TRANSFORM 
In Chap. 2, we saw that the discrete-time Fourier transform (DTFT) of a sequence .c(n) is equal to the sum 
However. in order for this series to converge, it is necessary that the signal be absolutely summable. Unfortunately, 
many of the signals that we would like to consider are not absolutely summable and, therefore, do not have a 
DTFT. Some examples include 
x(n) = u(n) 
x(n) = (OS)"u(-n) 
x(n) = sin n q  
The z-transform is a generalization of the DTFT that allows one to deal with such sequences and is defined as 
follows: 
Definition: The z-transform of a discrete-time signal x(n) is defined by' 
where z = reJ" is a complex variable. The values of z for which the sum converges define a 
region in the z-plane referred to as the region of convergence (ROC). 
Notationally, if x(n) has a z-transform X(z), we write 
The z-transform may be viewed as the DTFT of an exponentially weighted sequence. Specifically, note that 
with z = rejo, 
and we see that X(z) is the discrete-time Fourier transform of the sequence r-"x(n). Furthermore, the ROC is 
determined by the range of values of r for which 
 h he reader should note that in many mathematics books, and in some engineering books, X ( z )  is defined in terms of a sum using positive 
powers of z. 

CHAP. 41 
THE 2-TRANSFORM 
143 
Because the z-transform is a function of a complex variable, it is convenient to describe it using the complex 
z-plane. With 
z = Re(z) + jIm(z) = rejU 
the axes of the z-plane are the real and imaginary parts of z as illustrated in Fig. 4- 1, and the contour corresponding 
to Izl = 1 is a circle of unit radius referred to as the unit circle. The z-transform evaluated on the unit circle 
corresponds to the DTFT, 
~ ( e j " )  = X ( Z ) I ~ = ~ , ~  
(4.2) 
More specifically, evaluating X(z) at points around the unit circle, beginning at z = l(w = 0), through z = j 
(W = n/2), to z = - 1 ( ~  
= n), we obtain the values of X(el") for 0 5 w 5 n .  Note that in order for the DTFT 
of a signal to exist, the unit circle must be within the region of convergence of X(z). 
Im(z> 
Unit circle 
t 
Fig. 4-1. The unit circle in the complex z-plane. 
Many of the signals of interest in digital signal processing have z-transforms that are rational functions of z: 
Factoring the numerator and denominator polynomials, a rational z-transform may be expressed as follows: 
The roots of the numerator polynomial, Bk, are referred to as the zeros of X(z), and the roots of the denominator 
polynomial, ak, are referred to as the poles. The poles and zeros uniquely define the functional form of a 
rational z-transform to within a constant. Therefore, they provide a concise representation for X(z) that is often 
represented pictorially in terms of apole-zero plot in the z-plane. With a pole-zero plot, the location of each pole is 
indicated by an "x " and the location of each zero is indicated by an "ow, with the region of convergence indicated 
by shading the appropriate region of the z-plane. The region of convergence is, in general, an annulus of the form 
If a = 0, the ROC may also include the point z = 0, and if B = oo, the ROC may also include infinity. For a 
rational X(z), the region of convergence will contain no poles. Listed below are three properties of the region 
of convergence: 

144 
THE Z-TRANSFORM 
[CHAP. 4 
1. 
A finite-length sequence has a z-transform with a region of convergence that includes the entire z-plane 
except, possibly, z = 0 and z = ca. The point z = ca will be included if x(n) = 0 for n < 0, and the 
point z = 0 will be included if x(n) = 0 for n > 0. 
2. A right-sided sequence has a z-transform with a region of convergence that is the exterior of a circle: 
3. A left-sided sequence has a z-transform with a region of convergence that is the interior of a circle: 
EXAMPLE 4.2.1 
Let us find the z-transform of the sequence x(n) = anu(n). Using the definition of the z-transform and 
the geometric series given in Table 1 -I, we have 
with the sum converging if laz-'\ < 1. Therefore the region of convergence is the exterior of a circle defined by the set of 
points Izl z la\. Expressing X ( z )  in terms of positive powers of z, 
we see that X ( z )  has a zero at z = 0 and a pole at z = a. A pole-zero diagram with the region of convergence is shown in 
the figure below. 
Note that if la1 < 1, the unit circle is included within the region of convergence, and the DTFT of x(n) exists. 
Example 4.2.1 considered the z-transform of a right-sided sequence, which led to a region of convergence 
that is the exterior of a circle. The following example considers the z-transform of a left-sided sequence. 
EXAMPLE 4.2.2 
Let us find the z-transform of the sequence x(n) = -anu(-n - I). Proceeding as in the previous 
example. we have 

CHAP. 41 
THE z-TRANSFORM 
145 
with the sum converging if lor-lzl < 1 or lzl < lal. A pole-zero diagram with the region of convergence indicated is given 
in the figure below. 
Note that if lor1 5 1, the unit circle is not included within the region of convergence, and the DTFT of x(n) does not exist. 
Comparing the z-transforms of the signals in Examples 4.2.1 and 4.2.2, we see that they are the same, differing 
only in their regions of convergence. Thus, the z-transform of a sequence is not uniquely defined until its region 
of convergence has been specified. 
EXAMPLE 4.2.3 Find the z-transform of x(n) = (f)"u(n) - 2"u(-n - l), and find another signal that has the same 
z-transform but a different region of convergence. 
Here we have a sum of two sequences. Therefore, we may find the z-transform of each sequence separately and add 
them together. From Example 4.2.1, we know that the z-transform of xl(n) = (i)"u(n) is 
and from Example 4.2.2 that the z-transform of x2(n) = -2"u(-n - 1) is 
Therefore, the z-transform of x(n) = xl(n) + x2(n) is 
with a region of convergence 5 < lzl < 2, which is the set of all points that are in the ROC of both Xl(z) and X2(z). 
To find another sequence that has the same z-transform, note that because X(z) is a sum of two z-transforms, 
each term corresponds to the z-transform of either a right-sided or a left-sided sequence, depending upon the region of 
convergence. Therefore, choosing the right-sided sequences for both terms, it follows that 
has the same z-transform as x(n), except that the region of convergence is lzl > 2. 
Listed in Table 4-1 are a few common z-transform pairs. With these z-transform pairs and the z-transform 
properties described in the following section, most z-transforms of interest may be easily evaluated. 

THE 2-TRANSFORM 
Table 4-1 Common z-lkansform Pairs 
[CHAP. 4 
Sequence 
Region of Convergence 
4.3 PROPERTIES 
Just as with the DTFT, there are a number of important and useful z-transform properties. A few of these 
properties are described below. 
Linearity 
As with the DTFT, the z-transform is a linear operator. Therefore, if x(n) has a z-transform X(z) with a region 
of convergence R,, and if y(n) has a z-transform Y (z) with a region of convergence R,,, 
and the ROC of w(n) will include the intersection of R, and R,, that is, 
R, contains R, n R, 
However, the region of convergence of W(z) may be larger. For example, if x(n) = u(n) and yin) = u(n - I), the 
ROC of X(z) and Y(z) is Izl > 1. However, the z-transform of win) = x(n) - y(n) = S(n) is the entire z-plane. 
Shifting Property 
Shifting a sequence (delaying or advancing) multiplies the z-transform by a power of z. That is to say, if x(n) 
has a z-transform X (z), 
Because shifting a sequence does not affect its absolute summability, shifting does not change the region of 
convergence. Therefore, the z-transforms of s(n) and x(n - no) have the same region of convergence, with the 
possible exception of adding or deleting the points z = 0 and z = oo. 
Time Reversal 
If x(n) has a z-transform X(z) with a region of convergence R, that is the annulus a < lzl < #I, the z-transform 
of the time-reversed sequence x(-n) is 
z 
x(-n) t-, ~ ( z - I )  
and has a region of convergence 1 /#I -= lz 1 < I / a ,  which is denoted by 1 / R ,  

CHAP. 41 
THE z-TRANSFORM 
Multiplication by an Exponential 
If a sequence x(n) is multiplied by a complex exponential an, 
This corresponds to a scaling of the z-plane. If the region of convergence of X(z) is r- < lzl < r,, which will 
be denoted by R,, the region of convergence of ~ ( a - ' z )  
is lair- < IzI < lair+, which is denoted by lalR,. As 
a special case, note that if x(n) is multiplied by a complex exponential. eJnwcl, 
which corresponds to a rotation of the z-plane. 
Convolution Theorem 
Perhaps the most important z-transform property is the convolution theorem, which states that convolution in 
the time domain is mapped into multiplication in the frequency domain, that is, 
y(n) = x(n) * h(n) 
Y(z) = X(z)H(z) 
The region of convergence of Y(z) includes the intersection of R, and R,, 
R, contains R, f' R ,  
However, the region of convergence of Y(z) may be larger, if there is a pole-zero cancellation in the product 
X(z)H(z). 
EXAMPLE 4.3.1 
Consider the two sequences 
The z-transform of x(n) is 
1 
X(z) = - 
1 -azrl 
IzI > la1 
and the z-transform of h(n) is 
H(z) = 1 - az-' 
0 < l z l  
However. the z-transform of the convolution of x(n) with h(n) is 
which, due to a pole-zrro cancellation, has a region of convergence that is the entire z-plane. 
Conjugation 
If X(z) is the z-transform of x(n), the z-transform of the complex con.jugate of x(n) is 
x*(n) .Z. x*(z*) 
As a corollary, note that if x(n) is real-valued, x(n) = x*(n), then 
X(z) = X*(Z*) 

148 
THE Z-TRANSFORM 
[CHAP. 4 
Derivative 
If X(z) is the z-transform of x(n), the z-transform of nx(n) is 
Repeated application of this property allows for the evaluation of the z-transform of nkx(n) for any integer k. 
These properties are summarized in Table 4-2. As illustrated in the following example, these properties are 
useful in simplifying the evaluation of z-transforms. 
Table 4-2 Properties of the z-Transform 
Linearity 
Shift 
Time reversal 
Exponentiation 
Convolution 
Conjugation 
Derivative 
z-Transform 
Region of Convergence 
aX(z) + hY(z) 
Contains R, n R, 
z-""x(z) 
Rx 
X(z-I) 
1/Rx 
X(a-lz) 
law, 
x(z)y(z) 
Contains R, n R, 
Nore: Given the z-transforms X(z) and Y ( z )  of x ( n )  and y(n). with regions of convergence R, and 
R y ,  respectively, this table lists the z-transforms of sequences that are formed from x(n) and y(n). 
EXAMPLE 4.3.2 Let us find the z-transform of x(n) = nal'u(-n). To find X(z), we will use the time-reversal and 
derivative properties. First, as we saw in Example 4.2.1, 
Therefore. 
and, using the time-reversal property, 
1 
anu(-n) A - 
I - a - ' z  
I4 < a 
Finally, using the derivative property, it follows that the z-transform of nanu(-n) is 
A property that may be used to find the initial value of a causal sequence from its z-transform is the initial 
value theorem. 
Initial Value Theorem 
If x(n) is equal to zero for n < 0, the initial value, x(O), may be found from X(z) as follows: 
x(0) = lim X(z) 
Z'OO 
This property is a consequence of the fact that if x(n) = 0 for n < 0, 
Therefore, if we let z + oo. each term in X ( z )  goes to zero except the first. 

CHAP. 41 
THE z-TRANSFORM 
149 
4.4 THE INVERSE Z-TRANSFORM 
The z-transform is a useful tool in linear systems analysis. However, just as important as techniques for finding 
the z-transform of a sequence are methods that may be used to invert the z-transform and recover the sequence 
x(n) from X(z). Three possible approaches are described below. 
4.4.1 Partial Fraction Expansion 
For z-transforms thar are rational functions of z, 
a simple and straightforward approach to find the inverse z-transform is to perform a partial fraction expansion 
of X(z). Assuming that p > q, and that all of the roots in the denominator are simple, a, # ak for i # k, X(z) 
may be expanded as follows: 
for some constants Ak for k = 1,2, . . . , p. The coefficients Ak may be found by multiplying both sides of 
Eq. (4.5) by (1 - ak?-') and setting z = a k .  The result is 
If p (- q, the partial fraction expansion must include a polynomial in z-I of order ( p  -q). The coefficients of this 
polynomial may be found by long division (i.e., by dividing the numerator polynomial by the denominator). For 
multiple-order poles, the expansion must be modified. For example, if X(z) has a second-order pole at z = ak, 
the expansion will include two terms, 
where B, and B2 are given by 
EXAMPLE 4.4.1 
Suppose that a sequence x ( n )  has a z-transform 
with a region of convergence lzl z f . Because p = q = 2, and the two poles are simple, the partial fraction expansion has 
the form 

150 
THE 2-TRANSFORM 
[CHAP. 4 
The constant C is found by long division: 
Therefore, C = 2 and we may write X(z) as follows: 
Next, for the coefficients A ,  and Az we have 
and 
Thus, the complete partial fraction expansion becomes 
Finally, because the region of convergence is the exterior of the circle Izl > i, x(n) is the right-sided sequence 
4.4.2 Power Series 
The z-transform is a power series expansion, 
where the sequence values x(n) are the coefficients of z-" in the expansion. Therefore, if we can find the power 
series expansion for X(z), the sequence values x(n) may be found by simply picking off the coefficients of z-". 
EXAMPLE 4.4.2 
Consider the z-transform 
X(:) = log(l + a:-') 
Izl > la1 
The power series expansion of this function is 
Therefore, the sequence x(n) having this z-transform is 

CHAP. 41 
THE z-TRANSFORM 
151 
4.4.3 Contour Integration 
Another approach that may be used to find the inverse z-transform of X(z) is to use contour integration. This 
procedure relies on Cauchy's integral theorem, which states that if C is a closed contour that encircles the origin 
in a counterclockwise direction, 
w 
With 
X(z) = 
x(n)zPn 
n=-w 
Cauchy's integral theorem may be used to show that the coefficients .x(n) may be found from X(z) as follows: 
where C is a closed contour within the region of convergence of X(z) that encircles the origin in acounterclockwise 
direction. Contour integrals of this form may often by evaluated with the help of Cauchy's residue theorem, 
x ( z ) z n l  dz = z 
[residues of x(z)zn'at the poles inside C] 
If X(z) is a rational function of z with a first-order pole at z = ak, 
~es[x(z)z"-l at z = a k ]  = [(I - cmz-l)~(z)zn-']z=ak 
Contour integration is particularly useful if only a few values of x(n) are needed. 
4.5 THE ONE-SIDED Z-TRANSFORM 
The z-transform defined in Sec. 4.2 is the two-sided, or bilateral, z-transform. The one-sided, or unilateral, 
z-transform is defined by 
The primary use of the one-sided z-transform is to solve linear constant coefficient difference equations that have 
initial conditions. Most of the properties of the one-sided z-transform are the same as those for the two-sided 
z-transform. One that is different, however, is the shift property. Specifically, if x(n) has a one-sided z-transform 
X 1 ( ~ ) ,  
the one-sided z-transform of x(n - 1) is 
It is this property that makes the one-sided z-transform useful for solving difference equations with initial 
conditions. 
EXAMPLE 4.5.1 
Consider the linear constant coefficient difference equation 
Let us find the solution to this equation assuming that x(n) = S(n - I )  with y(-I) = y(-2) = 1 .  
We begin by noting that if the one-sided z-transform of y(n) is Yl(z), the one-sided z-transform of y(n - 2) is 

152 
THE z-TRANSFORM 
[CHAP. 4 
Therefore, taking the z-transform of both sides of the difference equation, we have 
YI 
(z) = 0.25[y(-2) + y(-1)z-I + Z - ~ Y ~ ( Z ) ]  
+ XI (z) 
where X 1 (z) = z-' . Substituting for y ( -  1) and y(-2), and solving for Yl 
(z), we have 
To find y(n), note that Yl 
(z) may be expanded as  follow^:^ 
Therefore. 
Solved Problems 
Computing z-'hansforms 
The z-transform of a sequence x ( n )  is 
If the region of convergence includes the unit circle, find the DTFT of x ( n )  at w = n. 
If X(z) is the z-transform of x(n), and the unit circle is within the region of convergence, the DTFT of x(n) may be 
found by evaluating X(z) around the unit circle: 
X(eJW) = x(z)J;_-, 
Therefore. the DTFT at o = 7r is 
and we have 
Find the z-transform of each of the following sequences: 
(a) x(n) = 3S(n)+ S(n - 2 ) +  S(n + 2 )  
(b) x(n) = u(n) - u(n - 10) 
(a) Because this sequence is finite in length, the z-transform is a polynomial, 
and the region of convergence is 0 < Izl < m. Note that because x(n) has nonzero values for n < 0, the 
region of convergence does not include IzI = co, and because x(n) has nonzero values for n 
0, the region of 
convergence does not include the point z = 0. 
2 ~ e e  
the discussion in Sec. 4.4.1 on partial fraction expansions. 

CHAP. 41 
THE Z-TRANSFORM 
(h) For this sequence, 
which converges for all lzl > 0. Note that the roots of the numerator are solutions to the equation 
z10 = 1 
These roots are 
= ej2nkl10 
k = 0 , 1 ,  ..., 9 
which are 10 equally spaced points around the unit circle. Thus, the pole at z = 1 in the denominator of X(z) 
is canceled by the zero at z = 1 in the numerator, and the z-transform may also be expressed in the form 
Find the z-transform of each of the following sequences: 
(a) x(n) = 2"u(n) + 3(;)"u(n) 
(b) x(n) = cos(noo)u(n). 
(a) Because x(n) is a sum of two sequences of the form anu(n), using the linearity property of the z-transform, and 
the z-transform pair 
2 
1 
ffnu(n) - - 
1 - az-I 
IzI > I4 
we have 
(b) For this sequence we write 
x(n) = cos(nwo)u(n) = [eJnq + e-jnq M n )  
Therefore, the z-transform is 
with a region of convergence lzl 
1. Combining the two terms together, we have 
1 - (cos wdz-' 
X(z) = I - 2(cos wo)z-I + z-2 
Izl > 1 
Find the z-transform of each of the following sequences. Whenever convenient, use the properties of the 
z-transform to make the solution easier. 
(a) x(n) = (+)"u(-n) 
(b) x(n) = (i)"u(n + 2) + (3)"u(-n - 1 )  
(a) Using the definition of the z-transform we have 

THE 2-TRANSFORM 
[CHAP. 4 
where the sum converges for 
1321 < I 
or 
121 i t 
Alternatively, note that the time-reversed sequence y(n) = x(-n) = (;)-"u(n) has a z-transform given by 
with a region of convergence given by Izl > 3. Therefore, using the time-reversal property, Y(z) = X(z-I), we 
obtain the same result. 
(b) Because x(n) is the sum of two sequences, we will find the z-transform of x(n) by finding the z-transforms of 
each of these sequences and adding them together. The z-transform of the first sequence may be found easily 
using the shift property. Specifically, note that because 
the z-transform of (;)"u(n + 2) is 4.2' times the z-transform of (a)"u(n), that is. 
which has a region of convergence lzl > i. 
The second term is a left-sided exponential and has a z-transform that we have seen before, that is, 
with a region of convergence Izl < 3. 
Finally, for the z-transform of .u(n). we have 
with a region of convergence 
< Izl < 3. 
(c) As we saw in Problem 4.3(b), the z-transform of cos(nwo)u(n) is 
I - (cos w")z-I 
cos(nwo)u(n) 6 
~zl > 1 
I - ~ ( C O S  O&)z-' + z-2 ' 
Therefore, using the exponentiation property, 
we have 
with a region of convergence lz 1 > f . 
( d )  Writing x(n) as 
s(n) = anu(n) + cr-"u(-n) - S(n) 
we may use the linearity and time-reversal properties to write 
1 
X(z) = - 
1 
+-- 
1 
; < 1 z 1 < 2  
1 - ffz-' 
I - ffz 
which may be simplified to 

CHAP. 41 
THE Z-TRANSFORM 
4.5 
Without explicitly solving for X(z), find the region of convergence of the z-transform of each of the 
following sequences: 
(a, x(n) = [(i)n 
+ ( i ) n ] u ( n  - 10, 
1 
- 1 0 ( n (  
10 
(b) x(n) = ( 0 
otherwise 
(a) Because the first sequence is right-sided, the region of convergence is the exterior of a circle. With a pole at 
z = coming from the term (i)", and a pole at z = coming from the term (:)" 
it follows that the region of 
convergence must be Izl > i. 
(b) This sequence is finite in length. Therefore, the region of convergence is at least 0 < Izl < oo. Because x(n) 
has nonzero values for n < 0 and for n r 0, z = 0 and z = oo are not included within the ROC. 
(c) Because this sequence is left-sided, the region of convergence is the interior of a circle. With a pole at z = 2, it 
follows that the region of convergence is Iz I < 2. 
4.6 
Find the z-transform of the sequence y(n) = xi=-, 
x(k) in terms of the z-transform of x(n). 
There are two ways to approach this problem. The first is to note that x(n) may be written in terms of y(n) as follows: 
Therefore, if we transform both sides of this equation, and use the shift property of the z-transform, we find 
X ( z )  = Y ( z )  - z-'y(z) 
Solving for Y (z), we find 
Thus. 
which is referred to as the summation property. 
The second approach is to note that y(n) is the convolution of x(n) with a unit step, 
Therefore, using the convolution theorem, we have 
and, with U ( z )  = I / ( I  - z-I), we obtain the same result as before. For the region of convergence, note that because 
the ROC of l/(z) is Iz( > 1, the ROC of Y ( z )  will be at least 
R, = R, n ( I Z I  > I )  
where R, is the ROC of X ( z ) .  
4.7 
Find the z-transform of the sequence y(n) where 
and y(n) = 0 for n < 0. Assume that la1 < 1. 

THE Z-TRANSFORM 
[CHAP. 4 
For this sequence, we may use a variation of the summation property derived in Prob. 4.6. Specifically, recall that if 
then 
X(z) 
Y ( z )  = - 
I - z-' 
Now consider the two-sided summation, 
which may be written as 
Therefore, if we let 
Therefore, we have 
Y ( z )  = XI ( z )  + X2W 
I - z-' 
- x(0) 
Finally, with x(n) = a"1, 
it follows that x l ( n )  = x2(n) = anu(n), and x(0) = I. Thus, 
with a region of convergence Izl > I. 
4.8 
Let x(n) be a finite-length sequence that is nonzero only for 0 5 n 5 N - 1, and consider the one-sided 
periodic sequence, y(n), that is formed by periodically extending x(n) as follows: 
Express the z-transform of y(n) in terms of X(z) and find the region of convergence of Y(z). 
The one-sided periodic sequence y(n) may be written as the convolution of x(n) with the pulse train 

CHAP. 41 
THE z-TRANSFORM 
In other words, 
Therefore, the z-transform of y(n) is the product of the z-transforms of x(n) and pN(n). Because pN(n) is a sum of 
shifted unit samples, and because the z-transform of S(n - kN) is equal to z - ' ~ ,  the z-transform of pN(n) is 
Thus, the z-transform of the one-sided periodic sequence y(n) is 
Because x(n) is finite in length and zero for n c 0, the region of convergence for X(z) is JzJ > 0. Therefore, the 
region of convergence of Y (z) is I z 1 > 1. 
Consider the sequence shown in the figure below. 
The sequence repeats periodically with a period N = 4 for n 2 0 and is zero for n < 0. Find the 
z-transform of this sequence along with its region of convergence. 
This is a problem that may be solved easily using the property derived in Prob. 4.8. Because 
where N = 4 and 
w(n) = S(n - I) + 2S(n - 2) + S(n - 3) 
then 
W(z) = z-l[l + 2z-' + z - ~ ]  
and we have 
Because x(nj is right-sided and X(z) has four poles at lzl = I, the region of convergence is Izl > 1. 
Properties 
4.10 
Use the z-transform to perform the convolution of the following two sequences: 

THE z-TRANSFORM 
[CHAP. 4 
The convolution theorem for z-transforms states that if y(n) = h(n) * x(n), the z-transform of y(n) is Y(z) = 
H(z)X (z). With 
it follows that 
Y(z) = H(z)X(z) = ( I  + iz-' + :Z-~)(I + z-I + 4z-') 
Multiplying these two polynomials, we have 
By inspection, we then have for the sequence y(n), 
4.11 
Evaluate the convolution of the two sequences 
h(n) = (OS)"u(n) and 
x(n) = 3"u(-n) 
To evaluate this convolution, we will use the convolution property of the z-transform. The z-transform of h(n) is 
and the z-transform of x(n) may be found from the time-reversal and shift properties, or directly as follows: 
Therefore, the z-transform of the convolution, y(n) = x(n) * h(n), is 
The region of convergence is the intersection of the regions JzJ > 
and lzl < 3, which is 
< lzl < 3. To find the 
inverse z-transform, we perform a partial fraction expansion of Y (z), 
A 
B 
Y (z) = ----- + - 
1 - I,-I 
1 - 32-1 
2 
and 
B = [(I - 3z-')Y (z)],,~ = - 6 
5 
Therefore, it follows that 
Y(.) = ($)(;)"u(n) + (;)3nu(-n 
- 1) 

CHAP. 41 
THE Z-TRANSFORM 
Let x(n) be an absolutely summable sequence, 
with a rational z-transform. If X(z) has a pole at z = and limlzl+m X(z) = 1, what can be said about 
the extent of x(n) (i.e., finite-in-length, right-sided, etc.)? 
Because x(n) is an absolutely summable sequence, the ROC of X ( z )  includes the unit circle, Izl = I. With a pole at 
z = f , the region of convergence will either be an annulus of the form r- < lzl < r,, or it will be the exterior of a 
circle, r- < Izl. However, because X (z) converges as Izl -+ m, the region of convergence will be the exterior of a 
circle, and it follows that x(n) is right-sided (infinite in length) with x(n) = 0 for n < 0. 
Find the z-transform of x(n) = lnl(;)lnl. 
Using the derivative property and the z-transform pair 
it follows that the z-transform of w(n) = n(;)"u(n) is 
Because x(n) may be written as 
-n 
x(n) = \nl(f)"' = n(f)"u(n) - n(f) zd-n) 
using linearity and the time-reversal property, we have 
which has a region of convergence f < Izl < 2. 
4.14 
Let y(n) be a sequence that is generated from a sequence x(n) as follows: 
(a) Show that y(n) satisfies the time-varying difference equation 
and show that 
-z2 dX(z) 
Y (z) = - 
-- 
Z - I  
dz 
where X(z) and Y (z) are the z-transforms of x(n) and y(n), respectively. 
(b) Use this property to find the z-transform of 

THE Z-TRANSFORM 
[CHAP. 4 
(a) From the definition of y(n), we see that 
and it follows immediately that 
y(n)- y(n - 1) = nx(n) 
From this difference equation, we may take the z-transform of both sides. Because 
then 
Y(z) - 
dX(z) 
z-'Y (z) = -z - 
dz 
(b) To find the z-transform of the given sequence, note that 
where 
x(n) = (f)"u(n) 
Because the z-transform of x(n) is 
1 
X(z) = - 
1 - {z-I 
I4 > : 
1 
-2 
-z2 dX(z) 
-z2 
-:z 
I 
- I  
then 
Y(z) = -- 
- 
- - 
- 
3 
2 - 
z - 1 
dz 
2 - 1 (1 - iZ-l) 
(1 - ;z-~)2(l - z - ~ )  
Because x(n) is right-sided, then the region of convergence is the exterior of a circle. Having poles at z = 1 
and z = i, it follows that the region of convergence is Izl > I. 
4.15 
Find the value of x(0) for the sequence that has a z-transform 
X(z) = 
1 
1 - az-' 
IzI > a 
Taking the limit of X(z) as z + oo, we see that X(z) + 1. Because the limit exists, x(n) is causal, and x(0) = 1. 
4.16 
Find the value of x(0) for the sequence that has a z-transform 
Because the region of convergence of X(z) is the exterior of a circle, x(n) is right-sided. However, if we write X(z) 
in terms of positive powers of z, 
"4 

CHAP. 441 
THE z-TRANSFORM 
161 
we see that X(z) -+ oo as Izl -+ oo. Therefore, x(n) is not causal. However, because x(n) is right-sided, it may be 
delayed so that it is causal. Specifically, if we delay x(n) by 1 to form the sequence y(n) = x(n - I), 
Y (z) = 
(z - ;) (z2 - ;) 
which approaches 1 as lzl + m. Thus, y(n) is causal, and we conclude that y(0) = x(-I) = I .  Because 
X(z) - x(-l)z is the z-transform of a causal sequence, and it follows from the initial value theorem that 
With 
we have 
x(0) = lim [X(z) - x(- I )Z 1 = 
I z l b m  
4.17 
Generalize the initial value theorem to find the value of a causal sequence x(n) at n = 1 ,  and find x(1) 
when 
If x(n) is causal, 
X(z) = x(0) + x(1)z-I + , ~ ( 2 ) z - ~  
+ 
Therefore, note that if we subtract x(0) from X(z), 
Multiplying both sides of this equation by z, we have 
If we let z + m, we obtain the value for x(l), 
x(l) = lirn (z[X(z) - x(O)]J 
Izl-rm 
For the given z-transform we see that 
x(0) = lim X(z) = $ 
(21-+m 
Therefore, 
and 
x(1) = lim (z[X(z) - x(0)I) = 3 
Izl+m 

162 
THE z-TRANSFORM 
[CHAP. 4 
4.18 
Let x(n) be a left-sided sequence that is equal to zero for n > 0 .  If 
find x(0). 
For a left-sided sequence that is zero for n > 0, the z-transform is 
Therefore, it follows that 
x(0) = lim X(z) 
2-0 
For the given z-transform, we see that 
32-' + 2zp2 
32 + 2 
x(0) = lim X(z) = lim 
= lim 
= 2 
i-ro 
2-0 3 - z-' + z-2 
2-0 3z2 - z + 1 
4.19 
If x(n) is real and even with a rational z-transform, show that 
and describe what constraints this places on the poles and zeros of X(z). 
If x(n) is even, 
x(n) = x(-n) 
Therefore, it follows immediately from the time-reversal property that 
If X(z) has a zero at z = zO, 
X(z0) = 0 
then 
x (z,') = 0 
which implies that X(z) will also have a zero at z = 1/20, The same holds true for poles. That is, if there is a pole 
at zO, there must also be a pole at z = I /zo. 
4.20 
Use the derivative property to find the z-transform of the following sequences: 
(a) x(n) = n(;)"u(n - 2) 
1 
(b) x(n) = ;(-2)-"4-n - 1 )  
(a) The derivative property states that if X(z) is the z-transform of x(n), 
If we let x(n) = nw(n), where 
n-2 
w(n) = (;)"u(n - 2) = f (i) u(n - 2) 
from the delay property and the z-transform pair 

CHAP. 41 
THE 2-TRANSFORM 
it follows that 
Therefore, using the derivative property, we have the z-transform of x(n), 
(b) Evaluating the z-transform of this sequence directly is difficult due to the factor of n-I. However, if we define 
a new sequence, y(n), as follows, 
y(n) = nx(n) = (-2)-"4-n 
- I) 
the z-transform of y(n) is easily determined to be 
- 1 
Y (z) = --- 
IzI < ; 
l + ;z-' 
Noting the relationship between x(n) and y(n), we can apply the derivative property to set up a differential 
equation for X(z), 
The solution to this differential equation is 
X(z) = log (z + f )  
and the region of convergence is Iz 1 < i. 
4.21 
Up-sampling is an operation that stretches a sequence in time by inserting zeros between the sequence 
values. For example, up-sampling a sequence x(n) by a factor of L results in the sequence 
y(n> = 
otherwise 
Express the z-transform of y(n) in terms of the z-transform of x(n). 
Because y(n) isequal to zero for all n + kL, with y(n) equal tox(n/L) forn = kL, the z-transform of the up-sampled 
signal is 
If X(z) converges for cu < Izl < /3, Y (z) will converge for cu < lzlL < p, or 
a'/'. < (zI < pIIL 
4.22 
Find the z-transform of the sequence 
an/10 
n = 0, 10,20, . . . 
x(n) = 0 
else 
where la1 -= 1. 

THE z-TRANSFORM 
[CHAP. 4 
We recognizex(n) as an exponential sequence that has been up-sampled by a factor of 10 (see Prob. 4.21). Therefore, 
because 
the z-transform of x(n) is 
Inverse z-'Ransforms 
4.23 
Find the inverse of each of the following z-transforms: 
Because X(z) is a finite-order polynomial, x(n) is a finite-length sequence. Therefore, x(n) is the coefficient 
that multiplies z-" in X(z). Thus, x(0) = 4 and x(2) = x(-2) = 3. 
This z-transform is a sum of two first-order rational functions of z. Because the region of convergence of X(z) is 
the exterior of a circle, x(n) is a right-sided sequence. Using the z-transform pair for a right-sided exponential, 
we may invert X(z) easily as follows: 
Here we have a rational function of z with a denominator that is a quadratic in z. Before we can find the inverse 
z-transform, we need to factor the denominator and perform a partial fraction expansion: 
Because x(n) is right-sided, the inverse z-transform is 
One way to invert this z-transform is to perform a partial fraction expansion. With 
I 
X(z) = 
-- 
- 
( I - z - ) ( ~ - z - ~  ( I -  
the constants A, B I  , and B2 are as follows: 

CHAP. 41 
THE z-TRANSFORM 
Inverse transforming each term, we have 
x(n) = a[(-1)" + 1 + 2(n .+ I)]u(n) 
Another way to invert this z-transform is to note that x(n) is the convolution of the two sequences. 
x(n) = x ~ ( n )  * xz(n) 
where xl (n) = u(n) and x2(n) is a step function that is up-sampled by a factor of 2. Because 
xl(n) * x2(n) = {I, 1,2,2,3,3,4,4,. . .) 
we have the same result as before. 
4.24 
Find the inverse z-transform of the second-order system 
Here we have a second-order pole at z = f .  The partial fraction expansion for X(z) is 
The constant A is 
and the constant A2 is 
Therefore, 
4.25 
Find the inverse of each of the following z-transforms: 
(a) X(z) = log (1 - iz-') 
Izl > $ 
(b) X(z) = ellZ, with x(n) a right-sided sequence 
(a) There are several ways to solve this problem. One is to look up or compute the power series expansion of the 
log function. Another way is to differentiate X(z). Specifically, because 
if we multiply both sides of this equation by (-z), we have 

THE z-TRANSFORM 
[CHAP. 4 
Note that the region of convergence for X(z) is Izl > i. Because the region of convergence for Y (z) is the same 
as it is for X(z), the inverse z-transform of Y (z) is 
y(n) = -($)"u(n - I )  
Now, from the derivative property, y(n) = nx(n), and it follows that 
x(n) = -i(i)"u(n - I )  
(6) For this z-transform, we could determine the inverse by tinding the power series expansion of X(z). However, 
another approach is to do what we did in part (a) and take the derivative. Differentiating X(z), we find 
d 
-X(z) = -z-~x(z) 
dz 
Multiplying both sides by (-z), we have 
and taking the inverse z-transform gives 
nx(n) = x(n - 1) 
which is a recursion for x(n). To solve this recursion, we need an initial condition. Because x(n) is a right-sided 
sequence, we may use the initial value theorem to find x(0). Specifically, 
x(0) = lim X (z) = I 
l:+m 
Thus. the recursion that we want to solve is 
with x(0) = 1. The solution for n > 0 is 
and we have 
4.26 Find the inverse z-transform of X(z) = sin z. 
To find the inverse z-transform of X(z) = sin z, we expand X(z) in a Taylor series about z = 0 as follows: 
03 
Because 
~ ( z )  
= ): x(n)z-" 
) I = - N  
we may associate the coefficients in the Taylor series expansion with the sequence values x(n). Thus, we have 
I 
x(n) = (- 1)" 
n = -1,-3, 
- 5 , . . .  
(2lnl+ I)! 

CHAP. 41 
THE Z-TRANSFORM 
4.27 
Evaluate the following integral: 
where the contour of integration C is the unit circle. 
Recall that for a sequence x(n) that has a z-transform X(z), the sequence may be recovered using contour integration 
as follows: 
Therefore, the integral that is to be evaluated corresponds to the value of the sequence x(n) at n = 4 that has a 
z-transform 
1 + 2z-I - 2-2 
x (z) = 
- 
( I  - +z-1)(1 - +-I) 
Thus, we may find x(n) using a partial fraction expansion of X(z) and then evaluate the sequence at n = 4. With 
this approach, however, we are finding the values of x(n) for all n. Alternatively, we could perform long division 
and divide the numerator of X(z) by the denominator. The coefficient multiplying z - ~  would then be the value of 
x(n) at n = 4, and the value of the integral. However, because we are only interested in the value of the sequence at 
n = 4, the easiest approach is to evaluate the integral directly using the Cauchy integral theorem. The value of the 
integral is equal to the sum of the residues of the poles of x(z)z3 inside the unit circle. Because 
has poles at z = and z = !, 
and 
Therefore, we have 
4.28 
Find the inverse z-transform of 
Note that the denominator of X(z) is a tenth-order polynomial. Although the roots may be found easily, performing 
a partial fraction expansion would be time consuming. For this problem, it is much better to exploit the properties 
of the z-transform. Note, for example, that 
I 
X(z) = Y (zJO) 
where 
Y(z) = 1 - culoz-l 
Because 

THE z-TRANSFORM 
[CHAP. 4 
we may use the up-sampling property (Prob. 4.21) to obtain 
Therefore, we have 
a" 
n = 0, 10,20. 
x(n) = 0 
otherwise 
4.29 
In many cases one is interested in computing the inverse z-transform of a rational function 
Because a partial fraction expansion requires knowledge of the roots of A(z), if the order of the denom- 
inator is large, finding the roots may be difficult. Although a partial fraction expansion would give a 
closed-form solution for x(n) for all n. if one only wants to plot x(n) for a limited range of values for n, 
a closed-form expression is not required. Given that x(n) = 0 for n c 0, find a recursion that generates 
x(n) for n 5 0. 
If we consider x(n) to be the unit sample response of a linear shift-invariant system, we may straightforwardly 
specify the filter in terms of a linear constant coefficient difference equation. This leads to a recursively computable 
difference equation for x(n). Specifically, note that because 
we may express this in the time domain as follows: 
Writing out this convolution explicitly, we have 
Bringing the first term out of the summation and dividing by a(0) gives 
Therefore, given that x(n) = 0 for n < 0, this recursion allows us to compute s(n) for all n 2 0. For example, 
Note that h(n) = 0 for n > q. Thus. for n z q, the recursion simplifies to 

CHAP. 41 
THE z-TRANSFORM 
One-sided z-'hansforms 
4.30 
Find the one-sided z-transform of the following sequences: 
(a) x(n) = ({)"u(n + 3) 
(b) x(n) = S(n - 5 )  + S(n) + 2"-'4-n) 
In the following, let x+(n) denote the sequence that is formed fromx(n) by setting x(n) equal to zero for n < 0, that is, 
(a) Because x.,(n) = ( ;lnu(n), the one-sided z-transform of x(n) is 
(b) For this sequence, because 
x+(n) = S(n - 5 )  + S(n) + T 1 6 ( n )  
then 
Xl(z) = z-% 
I + $ = 1.5 + z4 
4.31 
Let XI(z) be the one-sided z-transform of x(n). Find the one-sided z-transform of y(n) = x(n + 1). 
The one-sided 2-transform of x(n) is 
If x(n) is advanced in time by one, y(n) = x(n + I), the one-sided z-transform of y(n) is 
Therefore. 
YI(z) = x(1) + x(2)z-' + x(3)z -Z + . 
Comparing this to XI (z), we see that 
YI(z) = z[X1(z) - x(0)l 
4.32 
Consider the LCCDE 
y ( n ) - i y ( n - 2 ) = S ( n )  
n 2 O  
Find a set of initial conditions on y(n) for n < 0 so that y(n) = 0 for n 2 0. 
The one-sided z-transform of the LCCDE is 
Solving for Yl(z), we have 
1 + S [ , Y ( - ~ )  + y(- I)z- ll 
YI(z) = 
1 - i z - 2  
In order for y(n) to be equal to zero for n 
0, Yl(z) must be equal to zero. This will be the case when 

170 
THE z-TRANSFORM 
[CHAP. 4 
4.33 
Consider a system described by the difference equation 
Find the response of this system to the input 
with initial conditions y(- 1) = 0.75 and y(-2) = 0.25. 
This is the same problem as Prob. 1.37. Whereas this difference equation was solved in Chap. 1 by finding the 
particular and homogeneous solutions, here we will use the one-sided z-transform. 
First, we take the one-sided z-transform of each term in the difference equation 
Substituting the given values for the initial conditions, we have 
Y(z) = z-'Y(z)+ ; 
- z - ~ Y ( z )  - $2-' - f + ; x ( ~ ) +  ; Z - ' ~ ( Z )  
Collecting all of the terms that contain Y (z) onto the left side of the equation gives 
Because x(n) = (i)"u(n). 
which gives 
; - a z - 1  
; + fz-I 
Y (z) = 
+ 
1 - 2-1 + z-2 
(1 - iz-l)(l - z-1 + z-2) 
Expanding the second term using a partial fraction expansion, we have 
I - 
2 
; + ;z-' 
Y (z) = --- 
, - Lz-I 
+ 1 - 2-1 + z-2 
2 
Therefore, the solution is 
4.34 
A digital filter that is implemented on a DSP chip is described by the linear constant coefficient difference 
equation 
3 
y(n) = ?y(n - I) - ky(n - 2) +x(n) 
In evaluating the performance of the filter, the unit sample response is measured (i.e., the response y(n) 
to the input x(n) = S(n) is determined). The internal storage registers on the chip, however, are not set 
to zero prior to applying the input. Therefore, the output of the filter contains the effect of the initial 
conditions, which are 
( - I ) =  -1 
and 
y(-2)= 1 

CHAP. 41 
THE Z-TRANSFORM 
171 
Determine the response of the filter for all n p 0 and compare it with the zero state response (i.e., the 
output with y(.-I) = y(-2) = 0). 
Here we want to solve a difference equation that has initial conditions. Using the one-sided z-transform, we have 
With X(z) = I and the given initial conditions, this becomes 
Solving for Y (2). we find 
Performing a partial fraction expansion gives 
Thus, with an inverse z-transform we have 
y(n) = [-;(a)'' 
+ :(;)"]u(n) 
The zero state response, on the other hand, is simply the unit sample response of the filter. With 
it follows that 
Applications 
4.35 
There are two kinds of particles inside a nuclear reactor. Every second, an cr particle will split into eight 
B particles and a B particle will split into an a! particle and two /? particles. If there is a single cr particle 
in the reactor at time t = 0, how may particles are there altogether at time t = 1 00? 
In this problern we need to begin by writing down, in mathematical terms, what is happening within the reactor. Let 
a ( n )  be the number of a particles in the reactor at time n, and let B(n) be the number of /3 particles. Because there 
are eight B particles created from each a particle and two from each ~9 particle, we have 
Also, because one a particle is created from each B particle, 
Substituting the second equation into the first, we have 
which is an equation that defines how many B particles there are in the reactor at time n. Because there is one cu 
particle in the reactor at time n = 0, it follows that there are eight /? particles at time n = 1. Therefore. the initial 
condition associated with B(n) is B(1) = 8, and this may be incorporated into the equation as follows: 

THE Z-TRANSFORM 
[CHAP 4 
with B(n) = 0 for n < I. Using z-transforms, we may solve this equation for B(n) as follows: 
Taking the inverse z-transform, we have 
Finally, because the number of u particles at time n is equal to the number of B particles at time (n - I), the total 
number of particles at time n = 100 is 
4.36 
A $100,000 mortgage is to be paid off in 360 equal monthly payments of d dollars. Interest, compounded 
monthly. is charged at the rate of 10 percent per annum on the unpaid balance (e.g., after the first month 
the total debt equals $100,000 + ~$100,000). Find the payment d so that the mortgage is paid in full 
after 30 years, leaving a net balance of zero. 
This is the same problem that was solved in Prob. 1.39. Here, however, we will use the z-transform to find the solution. 
The total unpaid balance at the end of the nth month, in the absence of any additional loans or payments, is 
equal to the unpaid balance in the previous month plus the interest charged on the unpaid balance for the previous 
month. Therefore, if y(n) is the balance at the end of the nth month, 
where B is the interest charged on the unpaid balance. In addition, the balance must be adjusted by the amount of 
money leaving the bank into your pocket, which is simply the amount borrowed in the nth month and the amount 
paid to the bank in the nth month. Thus 
where xh(n) is the amount borrowed in the nth month, and x,(n) is the amount paid in the nth month. Combining 
terns, we have 
y(n) - vy(n - 1) = xh(n) - x,(n) = x(n) 
where v = 1 +B = 1 +O. 10/12, andx(n) is the net amount of money in the nth month that leaves the bank. Because a 
principal of p dollars is borrowed during month zero, and payments of d dollars begin with month 1, the input x(n) is 
and the difference equation for y(n) becomes 
Expressing this difference equation in terms of z-transforms, we have 
Solving for Y(z), we find 
Taking the inverse z-transforms yields 

CHAP. 41 
THE >TRANSFORM 
173 
We now want to find the value of d so that the mortgage is retired after 060 equal monthly payments. That is, we 
want to find d so that 
I 
y(360) = -[(p 
+ d - pv)v'60 - dl = 0 
I - v  
Solving for d, we have 
With v = $ and p = 100,000 we have 
which is the same as we had previously calculated. 
4.37 
A generalized Fibonacci sequence is a sequence of numbers, x(n), that satisfies the difference equation 
x ( n + 2 ) = x ( n ) + x ( n + I )  
for 
n > O  
That is, x(n) is the sum of the two previous values. The classical Fibonacci sequence results when the 
initial conditions are x(0) = 0 and x(1) = 1. The Fibonacci numbers occur in such unsuspecting places 
as the number of ancestors in succeeding generations of the male bee, the input impedance of a resistor 
ladder network, and the spacing of buds on the branch of a tree. 
(a) Find a closed-form expression for x(n). 
(h) Show that the ratio x(n)/x(n + 1) approaches the limit 2/(1 + 8) 
as n + co. This ratio is known 
as the golden mean and was said by the ancient Greeks to be the ratio of the sides of the rectangle 
that has the most pleasing proportions. 
(c) Show that the Fibonacci sequence has the following properties: 
(a) Here we have a second-order linear constant coefficient difference equation that we want to solve. Let us begin 
by rewriting it in a slightly different form. Specifically, consider the following 
where we assume that x(n) = 0 for n < 0 (i.e, initial rest). Written in this form with the delayed unit sample 
on the right-hand side, we note that x(0) = 0 and .r(l) = I as desired and x(n + 2) = .r(n) + x(n + 1) for 
n > 0. The solution to this difference equation may be found using z-transforms as follows: 
Solving for X(z), we have 
--I 
The poles of X(z) are located at z = (I f 
&)/2, and the partial fraction expansion of X(z) is 
Taking the inverse z-transform of X(z), we find 

THE 2-TRANSFORM 
[CHAP. 4 
(h) Starting with the difference equation that defines the Fibonacci sequence, divide both sides by x(n + I): 
If we define r ( n )  to be the ratio of two successive Fibonacci numbers 
we have 
If we let n + m .  and define r ( m )  = lim,,,, 
r ( n ) ,  we have 
Solving this quadratic equation for r ( m ) ,  we find 
I + &  
r ( m )  = - 
2 
However, because ~ ( n )  
> 0, it follows that r ( m )  is the positive root, which is 
Finally, because 
then 
(c) For the first property, we may simply substitute the closed-form expression for the Fibonacci sequence into the 
equation, and verify that it is true. For the second property, from the definition of the Fibonacci sequence we have 
which we may rewrite as 
x2(n + 2) - x2(n + I )  = x ( n ) [ x ( n )  + 2x(n + I)] 
However, note that 
x ( n  + 3) = x(n + I) + x ( n  + 2 )  = x ( n )  + 2x(n + I) 
Substituting this into the previous equation, we have the desired property. 
4.38 
A savings account pays interest at the rate of 5 percent per year with interest compounded monthly. 
(a) If $50 is deposited into the account every month for 60 months, find the balance in the account at 
the end of the 60 months. Assume that the money is deposited on the first day of the month so that, 
at the end of the month, an entire month's interest has been earned. 
(b) If no deposits are made for the next 60 months, find the account balance at the end of the next 60- 
month period. 

CHAP. 41 
THE Z-TRANSFORM 
175 
(c) Instead of being compounded monthly, suppose that the bank offers to compound the interest daily. 
Compute the account balance at the end of 60 months and 120 months and compare your balances 
with those obtained when the interest is compounded monthly. 
(a) The savirigs account balance at the beginning of the nth month is equal to the balance in the previous month 
plus the amount deposited in the nth month plus the interest earned on the balance from the previous month. 
Therefore, if y(n) is the balance at the beginning of the nth month, 
where j3 is the interest earned on the account, and x(n) is the amount deposited into the savings account in the 
nth month. Taking z-transforms, and solving for Y (z), we have 
where v = I + j3. With $50 deposits beginning with month number zero, x(n) = 50u(n), and 
1 
Y (z) = 50 (1 - vz-')(I - z-1) 
Performing a partial fraction expansion of Y(z), we have 
Taking the inverse z-transform, we have 
With v = I + B, and j3 = F. 
at the end of 60 months. after earning I month's interest, but prior to making 
the next deposit, the balance is 
(b) With no deposits for the next 60 months, the balance at the end of the first 60 months simply grows as 
y(n) = y(60). vn-"' 
n > 60 
Therefore. 
y( 120) = 4,379.42 
(c) With the interest compounded daily, let us compute the effective monthly interest rate. Assuming a balance of 
$ I  at the beginning of the month, the difference equation that describes the daily balance, w(n), is 
where j3 = g. 
Using z-transforms as we did in part (a), the solution to this difference equation is 
where v = 1 + B. Assuming that a month is 30 days long, for I month's interest we have 
w(30) = v30 = 1.004 175 
Using v = 1.004175 in Eq. (4.8), we have 

176 
THE z-TRANSFORM 
[CHAR 4 
4.39 
The deterministic autocorrelation sequence corresponding to a sequence x(n) is defined as 
(a) Express r ,  (n) as the convolution of two sequences, and find the z-transform of r,(n) in terms of the 
z-transform of x(n). 
(b) If x(n) = anu(n), where la1 < I, find the autocorrelation sequence, r,(n), and its z-transform. 
(a) From the definition of the deterministic autocorrelation, we see that r,(n) is the convolution of x(n) with 
x(-n), 
rx(n) = x(n) * x(-n) 
Therefore, using the time-reversal property of the z-transform, it follows that 
If the region of convergence of X(z) is R,, the region of convergence of R,(z) will be the intersection 
of the regions R, and 1/R,,. Therefore, if this intersection is to be nonempty, R, must include the unit 
circle. 
(b) With x(n) = anu(n), the z-transform is 
and the z-transform of the autocorrelation sequence is 
I 
I 
R,(z) = ( I  - azr1)(I - az) 
lal < l z l  < - 
la I 
The autocorrelation sequence may be found by computing the inverse z-transform of R,(z). Performing a partial 
fraction expansion of R, (z), we have 
Thus, because the region of convergence is la\ 4 z < l/laJ, the inverse z-transform is 
4.40 
In many disciplines, differential equations play a major role in characterizing the behavior of various phe- 
nomena. Obtaining an approximate solution to a differential equation with the use of a digital computer 
requires that the differential equation be put into a form that is suitable for digital computation. This prob- 
lem presents a transformation procedure that will convert a differential equation into a difference equation, 
which may then be solved by a digital computer. Consider a first-order differential equation of the form 
where yu(0)=yo. Because numerical techniques are to be used, we will restrict our attention to investi- 
gating yu(t) at sampling instants nT where T is the sampling period. Evaluating the differential equation 
at t = nT, we have 

CHAP. 41 
THE z-TRANSFORM 
177 
From calculus we know that the derivative of a function y,(t) at t = nT is simply the slope of the function 
at t = nT. This slope may be approximated by the relationship 
(a) Insert this approximation into the sampled differential equation above and find a difference equation 
that relates y(n) = y,(nT) and x(n) = x,(nT), and specify the appropriate initial conditions. 
(b) With x,(t) = u(t) and y,(O-) = I, numerically solve the differential equation using the difference 
equation approximation obtained above. 
(c) Compare your approximation to the exact solution. 
using the approximation 
d 
I 
-Y&W 
-[y,(n~) - y,(nT - TI] 
dr 
T 
we have 
I 
?[ya(nT) - ya(nT - T)] + crya(nT) = .r,(nT) 
y,(O-) = yo 
If we let y(n) = ya(nT) and x(n) = xa(nT), 
With 
this becomes 
~ ( n )  - ay(n - 1) = aTx(n) 
~ ( 0 )  
= yo 
(b) Using the one-sided z-transform to solve this difference equation, we have 
We must now derive the initial condition on y(n) at time n = - 1 from the initial condition at n = 0. From the 
difference equation, we have 
y(0) - ay(-I) = aTx(0) 
With y(0) = 1 and x(0) = 1, the initial condition becomes 
With x,(t) = u(t) or x(n) = u(n), 
Therefore. using the given initial condition, we have 

THE 2-TRANSFORM 
[CHAP. 4 
Performing a partial fraction expansion gives 
and we may find v(n) by taking the inverse z-transform: 
Because 
this may be written as 
(c) The solution to the differential equation is a sum of two terms. The first is the homogeneous solution, which is 
yh(t) = Ae-O1 
where A is a constant that is selected in order to satisfy the initial condition ~ ( 0 - )  
= 1. The second is the 
particular solution, which is 
Thus, the total solution is 
Evaluating this a1 time I = 0-, 
we see that in order to match the initial conditions. we must have 
If we compare this to the approximation in part (h), note that if T << I, 
aT 
- , I  
C - ~ ~ ) , _ , T  = (e ) 
=Z (I + ( Y T ) - ~  
and 
Supplementary Problems 
z-'kansforms 
4.41 
Find the 2-transform of 

CHAP. 41 
THE z-TRANSFORM 
4.42 
The z-transform of a sequence x(n) is 
If the region of convergence includes the unit circle, find the DTFT of x(n) at w = r / 2 .  
4.43 
Find the z-transform of each of the following sequences: 
(a) x(n) = (--l)"u(n) 
(b) x(n) = ;u(n - I) 
(c) x(n) = z cosh (crn)u(n) 
4.44 
Find the z-transform of the sequence 
4.45 
Find the z-transform of the sequence 
4.46 
How many different sequences have a z-transform given by 
4.47 
The sequence y(n) is formed from x(n) by 
where X(z) = sinzr'. Find Y(z). 
4.48 
If x(n) is an absolutely summable sequence with a rational z-transform that has poles at z = f and z = 2, what can 
be said about the extent of x(n) (i.e., finite in length, right-sided, etc.)? 
Properties 
A right-sided sequence x(n) has a z-transform X(z) given by 
Find the values of x(n) for all n < 0. 
Use the z-transform to perform the convolution of the following two sequences: 
Evaluate the following summation: 

180 
THE z-TRANSFORM 
4.52 
Find the value of x(0) for the sequence that has a z-transform 
4.53 
A right-sided sequence has a z-transform 
Find the index a ~ d  
the value of the first nonzero value of x(n). 
Inverse z-Transforms 
4.54 
Find the inverse z-transform of 
4.55 
Find the inverse z-transform of X(z) = coszp'. Assume that the ROC includes the unit circle, Izl = 1. 
4.56 
Find the inverse z-transform of X(z) = e'. Assume that the ROC includes the unit circle, lzl = 1. 
4.57 
Find the inverse z-transform of 
z5 - 3 
X(z) = - 
1 - z-S 
lzl > I 
4.58 
Find the inverse z-transform of 
4.59 
If 
1 
X(z) = - 
c 2 
2 - 2  
find the values of x(n) at n = -2 and n = - I  using contour integration. 
4.60 
Use the residue theorem to find the value of a(n) at n = 10 when 
4.61 
Find the inverse z-transform of 
One-sided z-Transforms 
4.62 
Find the one-sided z-transform of the sequences x(n) = (:)In. 
[CHAP. 4 
4.63 
Let Xl(z) be the one-sided z-transform of x(n). 
(a) Find the one-sided z-transform of y(n) = x(n - I). 
(b) Find the one-sided z-transform of y ( n )  = x ( n  + 3). 

CHAP. 41 
THE :-TRANSFORM 
4.64 
Find the solution to the following linear constant coefficient difference equations: 
(a) y(n) = iy(n - 1 )  + x(n) withx(n) = u(n) and y(-I) = $. 
(b) y(n) = y(n - I )  - y(n - 2) + 2u(n) with y(-1) = 2 and y(-2) = 1. 
(c) y(n) + y(n - 2) = 6(n) with y(-I) = I and y(-2) = 0. 
4.65 
The sequence y(n) is the solution to the LCCDE 
with x(n) = S(n). Find a set of initial conditions on y(n) for n i 
0 so that y(n) = 1 for n , 
0. 
4.66 
Consider the following difference equation: 
y(n) + y(n - 2) = x(n) + x(n - 1 )  
If x(n) = IOu(n) and y(-2) = - 10 and y(- I) = 0, find the output sequence y(n) for n 2 0. 
Applications 
4.67 
Determine the number of years that are required for an investment of money in a savings account to double if the 
money is compounded monthly at an annual rate of (a) 5 percent and (b) 10 percent. 
4.68 
Suppose that x ( n )  has a :-transform 
with la1 < 1 and Ibl < 1 and a region of convergence that includes the unit circle. (a) Find the deterministic autocor- 
relation sequence r,(n). (b) Find another sequence that has the same autocorrelation. 
Answers to Supplimentary Problems 
1 
4.44 
Y ( z )  = 
( 1  - 2-I)" 
4.45 
X ( : )  = ( 1  + 
4.46 
Three. 

182 
THE z-TRANSFORM 
Two-sided. 
x(-3) = -1 is the only nonzero value for n < 0. 
(a) (n + 1)(0.4)"u(n). 
(b) x(n) = (r.2)"" 
n even 
else 
x ( - I )  
= -f and x(-2) = -$, 
3-0.6)~[(-0.6)~ - 31 + !(0.2)~[(0.2)~ 
- 31. 
(a) [2 - :(t)"]u(n). 
(b) [2 + 5 sin@ + l)n/3]u(n). 
(c) [cos(nn/2) - sin(nn/2)]u(n). 
y(-I) = 1 and y(-2) = 3. 
(a) 167 months. (b) 84 months. 
I 
I 
hin[ - - 
(a) r,(n) = ----a1"' 
+ - 
[(an + bn)u(n) + (apn + bpn)u(-n - I ) ] .  
1 -a2 
I - h2 
I -ah 
(b) x'(n) = aNu(n) - b-"u(-n - 1 ) .  
[CHAP. 4 

Chapter 5 
Transform Analysis of Systems 
5.1 INTRODUCTION 
Given a linear shift-invariant system with a unit sample response h(n), the input and output are related by a 
convolution sum 
As discussed in Chap. 2, this relationship implies that ~ ( e j " )  = x ( e j W ) ~ ( e j w )  
where H(ejw), the frequency 
response of the system, is the discrete-time Fourier transform of h(n). This relationship between x(n) and y(n) 
may also be expressed in the z-transform domain as 
Y ( z )  = X ( z )  H ( z )  
where H(z), the z-transform of h(n), is the system function of the LSI system. The system function is very 
useful in the description and analysis of LSI systems. In this chapter, we look at the characterization of a linear 
shift-invariant system in terms of its system function and discuss special types of LSI systems such as linear 
phase systems, allpass systems, minimum phase systems, and feedback networks. 
5.2 SYSTEM FUNCTION 
The frequency response of a linear shift-invariant system is the discrete-time Fourier transform of the unit sample 
response, and the system function is the z-transform of the unit sample response: 
The frequency response may be derived from the system function by evaluating H(z) around the unit circle: 
If the z-transform of the input to a linear shift-invariant system with a system function H(z) is X(z), the 
z-transform of the output is 
Y ( z )  = H (z)X (z) 
For linear shift-invariant systems that are described by a linear constant coefficient difference equation, 
the system function is a rational function of z: 

184 
TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Therefore, the system function is defined, to within a scale factor, by the location of its poles, ( ~ k ,  
and zeros, Bk. 
Note that each term in the numerator 
contributes a zero to the system function at z = #ln and a pole to the system function at z = 0. Similarly, each 
term in the denominator contributes a pole at z = crk and a zero at z = 0. Therefore, including the poles and 
zeros that may lie at z = 0 or z = oo, the number of zeros in H (z) is equal to the number of poles. 
If the unit sample response is real-valued, H (z) is a conjugate symmetric function of z, 
H (z) = H*(z*) 
and the complex poles and zeros occur in conjugate symmetric pairs (i.e., if there is a complex pole (zero) at 
z = zo, there is also a complex pole (zero) at z = z;). 
5.2.1 Stability and Causality 
Stability and causality impose some constraints on the system function of a linear shift-invariant system. 
Stability 
The unit sample response of a stable system must be absolutely summable: 
Note that because this is equivalent to the condition that 
for lzl = 1, the region of convergence of the system function must include the unit circle if the system is stable. 
Causality 
Because the unit sample response of a causal system is right-sided, h(n) = 0 for n < 0, the region of convergence 
of H(z) will be the exterior of a circle, Izl > a. Because no poles may lie within the region of convergence, all 
of the poles of H(z) must lie on or inside the circle lzl 5 a. 
Causality imposes some tight constraints on a linear shift-invariant system. The first of these is the Paley- 
Wiener theorem. 
Paley-Wiener Theorem: If h(n) has finite energy and h(n) = 0 for n < 0, 
One of the consequences of this theorem is that the frequency response of a stable and causal system cannot be 
zero over any finite band of frequencies. Therefore, any stable ideal frequency selective filter will be noncausal. 
Causality also places restrictions on the real and imaginary parts of the frequency response. For example, 
if h(n) is real, h(n) may be decomposed into its even and odd parts as follows: 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
and 
h,(n) = i [ h ( n )  - h(-n)] 
If h(n) is causal, it is uniquely defined by its even part: 
h(n) = 2h,(n)u(n) - h,(n)6(n) 
If h(n) is absolutely summable, the DTFT of h(n) exists, and H(eja1) may be written in terms of its real and 
imaginary parts as follows: 
H (eiW) = HR(ejCU) 
+ j HI (eiCu) 
Therefore, because HR(ejw) is the DTFT of the even part of h(n), it follows that if h(n) is real, stable, and causal, 
H(eJW) 
is uniquely defined by its real part. This implies a relationship between the real and imaginary parts of 
H (el"), which is given by 
HI (ei") = - - HR(eie) cot 
2n S" 
-" 
This integral is called a discrete Hilberr transform. Specifically, Hl(ejw) is the discrete Hilbert transform of 
HR(eJ"). 
Realizable Systems 
A realizable system is one that is both stable and causal. A realizable system will have a system function with a 
region of convergence of the form lzl > a where 0 5 a < 1. Therefore, any poles of H ( z )  must lie inside the 
unit circle. For example, the first-order system 
will be realizable (stable and causal) if and only if 
For the second-order system, 
H(z) = 
b(O) 
1 + a(l)z-I + a(2)zZ 
H (z) has two zeros at the origin and poles at 
These roots satisfy the following two equations: 
a ( ] )  = -(a, + a2) 
a(2) = a ,  .a;? 
From these equations, it follows that the roots of H(z) will be inside the unit circle if and only if (see Prob. 8.29) 
law1 < 1 
la(l>l < 1 + a @ )  
These constraints define a stability triangle in the coefficient plane as shown in Fig. 5- 1. Thus, a causal second- 
order system will be stable if and only if the coefficients a ( ] )  and a(2) lie inside this triangle. This result is 
of special interest, because second-order systems are the basic building blocks for higher-order systems. If the 
coefficients lie in the shaded region above the parabola defined by the equation 
the roots are complex; otherwise they are real. 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Fig. 5-1. The stability triangle, which is defined by the lines la(2)I < 1 
and la(l)( < 1 +a(2). The shaded region above theparabolaa2(1)- 
4a(2) = 0 contains the values of a(l) and a(2) that correspond to 
complex roots. 
5.2.2 Inverse Systems 
For a linear shift-invariant system with a system function H(z), the inverse system is defined to be the system 
that has a system function G(z) such that 
H ( z ) .  G(z) = 1 
In other words, the cascade of H(z) with G(z) produces the identity system. In terms of H(z), the inverse is 
simply 
1 
G(z) = - 
H ( z )  
For example, if H ( z )  is a rational function of z as given in Eq. (5.2). the inverse system is 
Thus, the poles of H ( z )  become the zeros of G(z), and the zeros of H ( z )  become the poles of G(z). The region 
of convergence that is associated with the inverse system is determined by the requirement that H(z) and G(z) 
have overlapping regions of convergence.' 
EXAMPLE 5.2.1 If 
the inverse system is 
There are two possible regions of convergence for ,q(n). The ti rst is IzJ > f , and the second is lzI i 
$. Because lzl < f does 
not overlap the region of convergence for H(z), the only possibility for the inverse system is lzl > {. In this case, the unit 
sample response is 
~ ( n )  
= (1)" u(n) - 0.8(~)"-'u(n - I )  
'If this were not the case, H (r)G(z) would not be the identity system. because the region of convergence would be empty. 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
which is stable and causal. However, suppose that 
0.5 - 
Z-' 
H (z) = 
Izl > 0.8 
I - 0.82-' 
In this case, the inverse system is 
where the region of convergence may be either (zI > 2 or IzI c 2. Because both regions of convergence overlap the region of 
convergence of H(z), both are valid inverse systems. The first, which has a region of convergence li( > 2, has a unit sample 
response 
~ ( n )  
= 2(2)"u(n) - 1,6(2)"-'u(n -- I) 
and is causal but unstable. The second, with a region of convergence lzl < 2, has a unit sample response 
and is stable but noncausal. 
5.2.3 Unit Sample Response for Rational System Functions 
A linear shift-invariant system with a rational system function may be written in factored form as follows: 
Assuming only first-order poles, with ak # pr for all k and I, if p > q, H ( z )  may be expanded using a partial 
fraction expansion as follows: 
If the system is causal, the unit sample response is 
When p I 
q, the partial fraction expansion has the form 
and, if the system is causal, the unit sample response becomes 
If p = 0, H ( z )  has only zeros, 
(I 

188 
TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
and h(n) is finite in length with 
These systems are called finite-length impulse response (FIR) filters. If p r 0, H(z) is infinite in length, and 
these systems are called infinite-length impulse response (IIR) filters. 
If h(n) is real, H (z) = H *(z*), and the complex poles and zeros of H (z) occur in complex-conjugate pairs. 
For example, if ak = rkeJWA 
is a complex-valued pole, a; = rkepJWhill also be a pole. This symmetry implies 
that the complex terms in Eq. (5.5) may be combined to form terms of the form 
5.2.4 Frequency Response for Rational System Functions 
The frequency response of a linear shift-invariant system may be found from the system function by evaluating 
H(z) on the unit circle. For a rational function of z, the frequency response may be found geometrically from 
the poles and zeros of H(z). With H(z) written in factored form as in Eq. (5.4), the frequency response is 
Because the magnitude of the frequency response is 
IH(ejW)l is IAl times the product of the terms I I - bke-jwl divided by the product of the terms 11 - ake-JWI. 
Each term in the numerator 
11 - ,#ke-j"l = lejw - BkI 
is the length of the vector from the zero at z = Bk to the unit circle at z = ej" (labeled vl in Fig. 5-2). Similarly, 
each term in the denominator 
11 - uke-jol = lej" - a k  I 
is the length of the vector from the pole at z = a k  to the unit circle at z = ejw (labeled v2 in Fig. 5-2). When a 
pole is close to the unit circle, a k  = rkejwk with r k  = 1, the magnitude of the frequency response becomes large 
for w = wk because the length of the vector from the pole to the unit circle becomes small. Similarly, if there is 
a zero close to the unit circle, Bk = rkeJWk with r k  
1, the magnitude of the frequency response becomes small 
for w = wk (if the zero is on the unit circle at z = ej"', ~ ( e j ~ ~ )  
= 0). 
The analysis for the phase is similar. Assuming that A is a positive real number, the phase corresponding to 
the frequency response H (el") given by Eq. (5.7) is 
Thus, &(a) is the sum of the phases associated with the terms (1 - Bke-jw), minus the sum of the phases of the 
terms (1 - ake-Jw). Because 
. 
. 
1 - pke-jo = e-Jw(eJw - B k  

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
Fig. 5-2. Evaluating the frequency response geometrically from the 
poles and zeros of the system function. 
where 0, is the angle subtended by the vector from the zero at z = ,Ek to the unit circle at z = eJw (see Fig. 5-2). 
Similarly, for each term in the denominator 
where Q2 is the angle of the vector from the pole at z = a!k to the unit circle at z = eJW. When a pole (zero) 
is close to the unit circle, the phase decreases (increases) rapidly as we move past the pole (zero). Because the 
group delay is the negative of the derivative of the phase, this implies that the group delay is large and positive 
close to a pole and large and negative when close to a zero. 
5.3 SYSTEMS WITH LINEAR PHASE 
A linear shift-invariant system is said to have linear phase if the frequency response has the form 
H (ejw) = I H (eiW)1e-jaw 
where a! is a real number. Thus, linear phase systems have a constant group delay, 
In some applications, one is interested in designing systems that have what is referred to as generalized linear 
phase. A system is said to have generalized linear phase if the frequency response has the form 
where A(ejw) is a real-valued (possibly bipolar) function of w, and p is a constant. Often, the term linearphase 
is used to denote a system that has either linear or generalized linear phase. 
EXAMPLE 5.3.1 Consider the FIR system with a unit sample response 
1  
n = 0 , 1 ,  ..., N 
h(n) = 0  
else 

190 
The frequency response is 
TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Therefore, this system has generalized linear phase, with a = N / 2  and 
= 0. 
In order for a causal system with a rational system function to have linear phase, the unit sample response 
must be finite in length. Therefore, IIR filters cannot have (generalized) linear phase. For an FIR filter with a 
real-valued unit sample response of length N + I ,  a sufficient condition for this filter to have generalized linear 
phase is that the unit sample response be symmetric, 
In this case, cr = N / 2  and B = 0 or YC. Another sufficient condition is that h(n) be antisymmetric, 
which corresponds to the case in which cr = N/2 and B = n / 2  or 3x12. 
Linear phase filters may be classified into four types, depending upon whether h(n) is symmetric or anti- 
symmetric and whether N is even or odd. Each of these filters has specific constraints on the locations of the 
zeros in H ( z )  which, in turn, place constraints on the frequency response magnitude. For each of these types, 
which are described below, it is assumed that h(n) is real-valued, and that h(0) is the first nonzero value of h(n). 
Q p e  I Linear Phase Filters 
A type I linear phase filter has a symmetric unit sample response, 
and N is even. The center of symmetry is about the point cr = N/2, which is an integer, as illustrated in Fig. 5-3(a). 
(6) Type 11 filter. 
4 h ( n )  
A' 
h ( n )  
I+ 
Center of symmetry 
I 
. I .  
I  
I  
I 
I 
1 - ;  
A h ( n )  
0 
- a 
- - 
I+ 
Center of symmetry 
I 
I  
I 
I  
1 
1
2
;
 
5
 
n  - 
- - 
I  
- - 
-2 
-1 
t
3
 
4 
6
 
I 
-2 
-1 
1
2
3
4
5
6
 
-2 
-1 
1
2
3
4
5
6
 
4  
- - 
I c 
Center of symmetry 
I 
I 
\ 
I ,
3
4
5
 
n  
- - 
(c) Type 111 filter. 
(d) v p e  IV filter. 
Fig. 5-3. Symmetries in the unit sample response for generalized linear phase systems. 
It 
Center of symmetry 
I 
1 
L s ;  
4 )  
a - - 
-2 
- 1  
1 
I 
1 
6 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
The frequency response of a type I linear phase filter may be expressed in the form 
where 
Type I1 Linear Phase Filters 
A type I1 linear phase filter has a symmetric unit sample response, and N is odd. Therefore, the center of symmetry 
of h(n) occurs at the half-integer value a, = N / 2 ,  as illustrated in Fig. 5-3(b). The frequency response of a type 
I1 linear phase filter may be written as 
where 
Type 111 Linear Phase Filters 
A type I11 linear phase filter has a unit sample response that is antisymmetric, 
and N is even. Therefore, h(n) is antisymmetric about a = N / 2 ,  which is an integer, as illustrated in Fig. 5-3(c). 
The frequency response of a type 111 linear phase filter may be written as 
where 
'Qpe 1V Linear Phase Filters 
A type IV linear phase filter has a unit sample response that is antisymmetric, and N is odd. Therefore, h(n) is 
antisymmetric about the half-integer value a = N / 2 ,  and the frequency response has the form 
where 
The z-Wansform of Linear Phase Systems 
The symmetries in the unit sample response of a linear phase system impose constraints on the system function 
H(z). For a type I or I1 filter, h(n) = h(N - n), which implies that 

192 
TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Similarly, for a type I11 or IV linear phase filter, h(n) = -h(N - n), which implies that 
In both cases, if H(z) is equal to zero at z = zo, H(z) must also be zero at z = 1 / z O .  Therefore, the zeros of H(z) 
occur in reciprocal pairs. In addition, with h(n) being real-valued, complex zeros occur in conjugate reciprocal 
pairs. Thus, the constraints on the zeros of a linear phase filter are as follows. First. H(z) may have one or more 
zeros at z = f 
1. Second, H  (z) may have complex-conjugate zeros on the unit circle at z = e*jq or reciprocal 
zeros on the real axis at z = a and z = l/a. Finally, H(z) may have groups of four zeros in conjugate reciprocal 
pairs at z = rke*jo"nd 
z = le*~"? These constraints are illustrated in Fig. 5-4. 
rr 
The cases of z  = 
type I1 filter, we have 
Fig. 5-4. Constraints on the zeros of the system function of 
an FIR system with generalized linear phase and a real unit 
sample response. Types I11 and IV filters must have a zero 
at z = 1 ,  whereas types I1 and 111 filters must have a zero 
a t z =  -1. 
1 and z  = - 1 deserve special attention. Evaluating the system function at z  = -1 for a 
Because N  is odd, this implies that 
which will be true only if H(-1) = 0. Therefore, a type I1 linear phase filter must have a zero at z  = -1. 
Similarly, evaluating H(z) at z = - 1 for a type 111 filter, we have 
which, because N is even, requires that there be a zero at z = -1. Because the system function evaluated at 
z = - 1 is equal to the frequency response at w = n, 
H (ejW)~,,, = 0 
Types I1 and 111 filters 
(5.13) 
For types I11 and IV filters, evaluating the system function at z  = I, we find 
which will be true only if H(z) is zero at z  = 1. Therefore, types 111 and IV linear phase filters must have a zero 
at z  = 1, which implies that 
H (eio)lo,o = 0 
Types 111 and IV filters 
(5.14) 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
5.4 ALLPASS FILTERS 
An allpass filter has a frequency response with a constant magnitude, 
This unit magnitude constraint constrains the poles and zeros of a rational system function to occur in conjugate 
reciprocal pairs: 
Thus, if H(z) has a pole at z  = ak, H(z) must have a zero at the conjugate reciprocal location z = l/a,*. If h(n) 
is real-valued, the complex roots in Eq. (5.15) occur in conjugate pairs, and if these conjugate pairs are combined 
to form second-order factors, the system function may be written as 
where the coefficients bk, ck, and dk are real. If an allpass filter H(z) is stable and causal, the poles of H(z) lie 
inside the unit circle, lak( < 1. Figure 5-5 shows a typical pole-zero plot for an allpass filter. Allpass filters are 
useful for group delay equalization to compensate for phase nonlinearities. 
Fig. 5-5. Illustration of the conjugate reciprocal symmetry 
constraint that is placed on the poles and zeros of an allpass 
system. 
A stable allpass filter has a group delay that is nonnegative for all w. This follows from the fact that, for a 
first-order allpass factor of the form 
z - l  - a!* 
H  (z) = 1 - uz-' 
where a! = reje, the group delay is 
1 - r 2  
T ( O )  = 11 - re~ee-~w12 
Therefore, with 0 5 r  < 1, it follows that s(w) > 0. Because a general allpass filter has a group delay that is a 
sum of terms of this form, the group delay of a rational, stable, and causal allpass filter is nonnegative. 
A filter may be cascaded with an allpass filter without changing the magnitude of the frequency response. 
If the pole of the allpass filter cancels a zero, the zero is replaced with one at the conjugate reciprocal location. 

194 
TRANSFORM ANALYSIS O F  SYSTEMS 
[CHAP. 5 
Thus,$ipping one or more zeros of the system function about the unit circle does not change the magnitude of 
the frequency response. 
EXAMPLE 5.4.1 For a filter that has a system function 
the magnitude of the frequency response will not be changed if it is cascaded with the allpass filter 
This allpass filter flips the zero at z = 0.2 in H(z) to its reciprocal location, z = 5, and the new filter has a system function 
5.5 MINIMUM PHASE SYSTEMS 
A stable and causal linear shift-invariant system with a rational system function of the form given in Eq. (5.2) 
has all of its poles inside the unit circle, lakI < 1. The zeros, however, may lie anywhere in the z-plane. In some 
applications, it is necessary to constrain a system so that its inverse, G(z) = l/H(z), is also stable and causal. 
This requires that the zeros of H (z) lie inside the unit circle, JBk I < I. A stable and causal filter that has a stable 
and causal inverse is said to have minimum phase. Equivalently, we have the following definition: 
Definition: A rational system function with all of its poles and zeros inside the unit circle is 
said to be have minimum phase. 
A minimum phase system is uniquely defined by the magnitude of its Fourier transform, IH(eJm)(. The 
procedure to find H (z) from 1 H (ejm)\ is as follows. Given \ H (ejW)l, we find 1 H (ej")12, which is a function of 
cos(ko). Then, by replacing cos(kw) with C(zk + zpk), we have 
Finally, the minimum phase system is then formed from the poles and zeros of G(z) that are inside the unit circle. 
EXAMPLE 5.5.1 
Let H(z) be a minimum phase system with a Fourier transform magnitude 
I ~(e'")l* = $ - f cosw 
Expressing cos w in terms of complex exponentials, 
and replacing ej" with z and e-1" with z-', we have 
Thus, the minimum phase system is 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
195 
A stable and causal system may always be factored into a product of a minimum phase system with an 
allpass system: 
H(z) = Hmin(z). Hap(z) 
(5.1 7) 
The procedure for performing this factorization is as follows. First, all of the zeros of H(z) that are outside the 
unit circle are reflected inside the unit circle to their conjugate reciprocal location. The resulting system function 
is minimum phase, Hmin(z). 
Then, the allpass filter is selected so that it reflects the appropriate set of zeros of 
Hmin(z) 
back outside the unit circle. 
EXAMPLE 5.5.2 For the system function 
the minimum phase factor is 
Then, to reflect the zero at z = 0.5 back outside the unit circle to z = 2, we use the allpass factor 
Two properties of minimum phase systems are as follows. First, of all systems that have the same Fourier 
transform magnitude, the minimum phase system has the minimum group delay. This follows from the factor- 
ization given in Eq. (5.17). Specifically, let Hmin(z) 
be a minimum phase system, and let H (z) be another system 
with the same magnitude. The group delay for H(z) may be written as 
where rap(u) 
is the group delay of a stable and causal allpass system. Because tap(u) 
> 0, the group delay of H ( z )  
will be larger than the group delay of the minimum phase system Hmi,,(z). 
Furthermore, because the phase is the 
negative of the integral of the group delay, the minimum phase system is also said to have the minimum phase-lag. 
The second property of minimum phase systems is that they have the minimum energy delay. Specifically, if 
hmin(n) 
is the unit sample response of a minimum phase system, and h ( n )  is the unit sample response of another 
causal system that has the same magnitude response, 
for any n 3 0. 
5.6 FEEDBACK SYSTEMS 
Feedback systems are used in many applications such as stabilization of unstable systems, compensation of 
nonideal elements, tracking systems, and inverse system design. The general configuration of a discrete-time 
feedback system is shown in Fig. 5-6. The system N(z) is referred to as the system function of the forward path, 
and G(z) is referred to as the system function of thefeedbuck path. The system function relating the input x(n) 
to the output y(n) is called the closed-loop system function and is denoted by Q(z). Because 
the closed-loop system function is 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
- 
Fig. 5-6. 
A feedback network. 
If H ( z )  and G ( z )  are rational functions of z, 
the closed-loop system function may be written as 
Therefore, the poles of the closed-loop system Q ( z )  are the roots of the equation 
With the appropriate order and coefficients for G ( z ) ,  the poles may be placed anywhere in the z-plane. 
EXAMPLE 5.6.1 
Suppose that we have an unstable system with system function 
I 
H (z) = 
1 - 1.22-' 
Placed in a feedback network with 
G(z) = K 
the system function of the closed-loop system is 
which has a pole at z = 1.2/(1 + K). Therefore, this system will be stable for all K s 0.2. 
Solved Problems 
System Function 
5.1 
If the input to a linear shift-invariant system is 
the output is 
~ ( n )  
= 6(;)"u(n) - 6(:)"u(n) 
Find the system function, H ( z ) ,  and determine whether or not the system is stable and/or causal. 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
197 
In order to find the system function, recall that H ( z )  = Y ( z ) / X ( z ) .  Because we are given both x ( n )  and y(n), all 
that is necessary to find H ( z )  is to evaluate the z-transform of x ( n )  and y ( n )  and divide. With 
and 
Then, 
For the region of convergence of H ( z ) ,  we have two possibilities. Either lzl z $ or Izl < a. Because the region of 
convergence of Y ( z )  is Izl > 2 and includes the intersection of the regions of convergence of X ( z )  and H(z), the 
region of convergence of H ( z )  must be lzl > i. 
Because the region of convergence of H ( z )  includes the unit circle, h ( n )  is stable, and because the region of 
convergence is the exterior of a circle and includes z = m, h ( n )  is causal. 
5.2 
When the input to a linear shift-invariant system is 
the output is 
A n )  = [4(;)" - 3(-:)"]u(n) 
Find the unit sample response of the system. 
One approach that we may use to solve this problem is to evaluate H ( z )  = Y ( z ) / X ( z )  and then compute the inverse 
z-transform. Note, however, that we are given the response of the system to a step with an amplitude of 2, and we 
are asked to find the unit sample response. Because 
if we let s ( n )  be the step response, it follows from linearity that 
h ( n )  = s ( n )  - s(n - 1) 
Therefore, from the response given above, we have 
5.3 
A causal linear shift-invariant system is characterized by the difference equation 
y(n) = by(n - 1 )  + i y ( n  - 2) + x(n) - x(n - 1 )  
Find the system function, H(z), and the unit sample response, h(n). 
To find the system function, we take the z-transform of the difference equation, 
Y ( z )  = f z - ' ~ ( z )  + $ Z - ~ Y ( Z )  + X ( z )  - z - I x ( z )  

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Therefore, the system function is 
Because the system is causal, the region of convergence is lzl z f . 
To find the unit sample response, we perform a partial fraction expansion of H(z), 
where 
Therefore. 
and the unit sample response is 
5.4 
A causal linear shift-invariant system has a system function 
1 + z-' 
H (z) = I - iz-l 
Find the z-transform of the input, x(n), that will produce the output 
I 
I
"
 
y(n) = -7(z) 
~ ( n )  
- +(2)"u(-n - I )  
To find the input to a linear shift-invariant filter that will produce a given output y(n), we use the relationship 
Y(z) = H(z)X(z) to solve for X(z): 
Computing the z-transform of y(n), we have 
I 
4 
- - 
- 
I + fz-' 
Y (z) = --A 
+ ------ - 
- 
1 - I 
1 - 22--' 
(1 - iz-l)(l - 2z-1) 
(1 + iz-I)(1 - ;z-1) 
Therefore, 
X(z) = 
- 
A 
-- 
B 
C 
+ ------ + --- 
(1 - $z-')(l - 2z-')(I + z-I) 
1 - 2
-
 
I - 2z-1 
I + z-1 

CHAP. 51 
where 
TRANSFORM ANALYSIS OF SYSTEMS 
Because h(n) is causal, the region of convergence for H(z) is Izl > i. With the region of convergence of Y ( z )  the 
annulus 
< 15 1 i 
2, the region of convergence of X ( z )  is 
< IzJ i 
1. Therefore, 
5.5 
Show that if h(n) is real, and H (z) is rational, 
- pkz-9 
H (z) = A k
~
l
 
- 
the poles and zeros of H ( 2 )  occur in conjugate pairs. 
It follows from the symmetry property of the z-transform that if h(n) is real. H(z) = Ht(z*). Therefore, 
and the result follows. 
5.6 
Without evaluating the inverse z-transform, determine which of the following z-transforms could be the 
system function of a causul hut not necessurily stable discrete-time linear shift-invariant system: 
(Z - I l3 
(b) X(2) = --- 
(-. - 6)' 
4 
(z - 3) 
(d) X (z) = ---- 
(z - 33 
A causal sequence is one that is equal to zero for n < 0. Therefore, the z-transform of a causal sequence may be 
written as a one-sided summation: 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
What distinguishes the z-transform of a causal signal from one that is not is the fact that X(z) does not contain any 
positive powers of z. Consequently, if we let lzl -t m, X(z) + x(O), which is a statement of the initial value 
theorem. It follows, therefore, that if .r(n) is causal, this limit must be finite. For noncausal signals, on the other 
hand, this limit will tend to infinity, because the z-transform will contain positive powers of z. For example, the 
sequence x(n) = u(n + I) has a z-transform 
and 
lim X(z) = m 
:I-CU 
Thus, a z-transform may be the system function of a causal system only if 
Of the transforms listed, only (a) and (c) have a finite limit as Izl + rn and, therefore, are the only ones that could 
be the z-transform of a causal signal. 
5.7 
The result of a particular computer-aided filter design is the following causal second-order filter: 
I + 22-' + zp2 
H (z) = 
1 - 2z-I + 1 . 3 3 ~ - ~  
Show that this filter is unstable, and find a causal and stable filter that has the same magnitude response 
as H(z). 
This filter is clearly not stable, because the coefficient for z-' in the denominator, which is the product of the roots 
of H(z), is greater than 1. Specifically, if the poles of H(z) are crl and crz, then al . a2 = 1.33, and this implies that 
at least one of the roots is outside the unit circle. Because the discriminant of the polynomial is negative, 
the roots are complex with crl = reJ%nd cr2 = re-IH where ,- = 
and % = c o s p ' ( l / m ) .  
Recall that if we form a new system function given by Hf(z) = H(z)G,,(z), where Gap(z) is an allpass filter of 
the form 
I ~'(ej")l = I H (ejW)l. Therefore, if 
I - 2:-I + 1 .33zr2 
Gap(z) = 1.33 - 22-I + zr2 
the effect of Gap(:) is to replace the pair of complex poles in H(z) that are outside the unit circle with a complex 
pole pair inside the unit circle at the reciprocal locations while preserving the magnitude response. Thus. a stable 
filter that has a frequency response with the same magnitude as H(eJW) is the following: 
1 + 2z-I + z -' 
H '(z) = 1.33 - 22-1 + zp2 
5.8 
The system function of a discrete-time linear shift-invariant system is H (z). Assume that H(z) is a rational 
function of z and that H(z) is causal and stable. Determine which of the following systems are stable 
and which are causal: 
(a) G(z) = H(z)H*(z*) 
d 
(b) G(z) = H1(z) where H1(z) = - 
[H(z)] 
d z  

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
(c) G(z) = ~ ( z - I )  
(d) G(z) = H(-Z) 
With H(z) a rational function of z ,  if h(n) is stable and causal, the poles of H(z) (if any) are inside the unit circle, 
and the region of convergence is the extenor of a circle and includes the unit circle. 
(a) If H(z) is the z-transform of h(n), then H*(z*) is the z-transfonn of h*(n), and the region of convergence is 
the same as that for H(z). Because the region of convergence of G(:) = H(z)H*(i*) includes the regions of 
convergence of H(z) and H*(z*), the region of convergence of G(z) will be the exterior of a circle and include 
the unit circle. Therefore, g(n) is stable and causal. 
(h) Recall that if H(z) is the z-transform of h(n), 
Therefore, delaying the sequence nh(n) by I yields the following z-transform pair: 
and, clearly. (n - I)h(n - I) will be causal if h(n) is causal. Finally, because H(z) is a rational function of z, 
and we have 
Therefore, if the poles of H(z) are inside the unit circle, the poles of G(z) are inside the unit circle, and g(n) is 
stable. 
(c) With G(z) = ~ ( z - ' ) ,  
note that if H(z) has a pole at : 
= zo, G(:) will have a pole at z = l / z ~ .  Therefore, 
all of the poles of G(z) will be outside the unit circle. and g(n) cannot be both stable and causal. Because the 
replacement of z with z-' corresponds to a time reversal, 
g(n) is noncausal. Furthermore, because time-reversing a sequence does not affect its absolute summability, 
the region of convergence for G ( z )  will include the unit circle. Thus, g(n) is stable. 
(d) With G(;) = H(-z), note that replacing z with -z corresponds 10 modulating h(n) by (- I)": 
Therefore, if h(n) is causal and stable, so is g(t7). 
5.9 
Find the inverse system of 
The inverse system is 

202 
TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
and there are two possible regions of convergence: Izl > 2 and lzl < 2. Because both of these overlap with the 
region of convergence for H(z), both are valid inverse systems. For J z J  > 2, the unit sample response is 
which is a causal but unstable system. For (zl < 2, the unit sample response is 
~ ( n )  
= -2"u(-n - I) + 0.6(2)"-'u(-n) 
which is stable but noncausal. Note. however, that the system 
is both stable and causal, and the magnitude of the frequency response is the same as that of the inverse system. 
Therefore, this system is realizable, and the system that is the cascade of H(z) with G ( z )  has a frequency response 
with a magnitude of I .  
5.10 
Let H ( z )  be a stable and causal filter with a system function 
(a) Make a pole-zero plot of the system function, and use geometric arguments to show that if r 
1, 
the system is a notch filter. 
(h) At what frequency does I H(eIw)l reach its maximum value? 
(a) This system has a pair of complex zeros on the unit circle at z = 
and a pair of complex poles just inside 
the unit circle at z = 
A pole-zero diagram for H ( z )  is shown in the figure below. 
The first thing to note is that, due to the zeros that are on the unit circle, the frequency response goes to zero 
at w = i~ wo. The second thing to observe is that, as we move away from the unit circle zeros, the lengths of 
the vectors from the poles to the unit circle approach the lengths of the vectors from the zeros to the unit circle. 
Furthermore, the closer r is to I ,  the more rapidly the lengths of these vectors become the same. Therefore, if 
r 
1, H(e1") is a notchfilter, with a frequency response that is approximately constant except within a narrow 
band of frequencies around w = f 
wo, where the frequency response goes to zero. 
(17) The magnitude of the frequency response increases monotonically as we more away from the unit circle zeros. 
Therefore, I H(P]")I will reach its maximum value either at w = 0 or w = n. Because the frequency response 
at w = 0 is 
A (I - eJw)(l - C J W )  
2 - 2coswo 
= A  
1 - r
e
 
- r
e
 I + rZ - 2r cos w0 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
and the frequency response at w = n is 
I H(ejo)l will reach its maximum value at w = 0 if n/2 < wo .: 
~ r ,  
and it will reach its maximum value at 
w = 1 ~ i f O < w ~ < ~ / 2 .  
5.11 
A signal y ( n )  contains a primary signal, x(n), plus two echos: 
Find a realizable f lter that will recover x ( n )  from y(n). 
Because Y ( z )  is related to X(z) as follows: 
the inverse filter is 
We must check. however, to see whether or not this filter is realizable First. note that we may write G(z) as 
G(z) = F (znd ) 
where 
F (z) = 
I 
I + + - I  
+ iz-1 
The poles of F ( z )  are at 
z = - ; ( I  
& j h )  
which are inside the unit circle at a radius of r = 0.5. Therefore, the poles of G(z) are inside the unit circle, at a 
radius of r' = (0.5)-"d, and G(z) is realizable. 
5.12 
A causal system with areal-valued unit sample response has a frequency response with areal part given by 
HR(eJ") = 1 + 0.2 cos 2w 
Find h(n) and H ( ~ J " ) .  
We are given H,(eJw) and are asked to find 
H (el") = HR(el") + j Hr(el") 
Although we could find H,(ejw) using the discrete Hilbert transform, an easier approach is as follows. Because h(n) 
is causal, the wen and odd parts of h(n) are 
and 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Therefore, the relationship between h,(n) and h,,(n) is as follows: 
h,,(n) = sgn(n) . h,(n) 
I 
I 
n > O  
where 
sgn(n) = 
0 
n = 0 
- I  
n < O  
The inverse DTFT of HR(eJW), 
which is the even part of h(n), is 
h,(n) = 6(n) + 0. IS(n - 2) + 0.16(n + 2) 
Thus, 
h,(n) = sgn(n)h,(n) = 0. IS(n - 2) - 0.16(n + 2) 
and Hl(eJ"), the discrete-time Fourier transform of h,(n), is 
Hl(eJ") = -0.2sin(2o) 
Therefore, 
H(eJ") = ~ ~ ( e j ~ )  
+ j Hl(eJW) = I + 0.2cos2o - j0.2sin(2w) = I + 0.2e-*'" 
and 
h(n) = 6(n) + 0.26(n - 2) 
5.13 
A second-order system has two poles at z = 0.5 and a pair of complex zeros at z = e * ~ = / ~ .  
Geometrically 
find the gain, A, of the filter so that I H ( e J W ) J  
is equal to unity at w = 0. 
Because the length of the vectors from the two zeros at z = e'J"12 to the point z = 1 on the unit circle is equal to 
A, and because the distance from the two poles at z = 0.5 to z = 1 is equal to 0.5, the magnitude of the frequency 
response at o = 0 is 
Therefore, the desired gain is 
A = !  8 
Systems with Linear Phase 
5.14 
Derive Eq. (5.9) for the frequency response of a type I linear phase filter. 
A type I linear phase filter satisfies the symmetry condition 
h(n) = h(N - n) 
and N is even. The symmetry condition is equivalent to 
Therefore, the frequency response may be written as follows: 
Factoring out a linear phase term, e-jN"f2, from each sum, and using the symmetry of h(n), we have 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
Therefore, we may write the frequency response as follows: 
where 
which is the desired result. 
5.15 
Derive Eq. (5.10) for the frequency response of a type I1 linear phase filter. 
For a type I1 linear phase filter, 
h ( n )  = h(N - n )  
where N isodd. Therefore, h ( n )  is symmetric about the half-integer, N j 2 ,  and the symmetry condition isequivalent to 
Thus, the frequency response may be written as 
Factoring out a linear phase term e-JN"'/' and using the symmetry of h(n). we have 
Therefore, 
where 
N + 1  
N + 1 
b ( k ) = 2 h ( T - k )  
k =  1.2 ...., - 
2 
which is the desired result. 
5.16 
How would the derivations in the previous two problems be modified to find the form of the frequency 
response for types 111 and IV linear phase filters? 
The only difference between a type I and a type I11 linear phase filter is that 
h ( n )  = h(N - n )  
for a type I filter, and 
h(n) = -h(N - n )  
for a type 111 filter. Therefore, h ( N / 2 )  = 0, and Eq. (5.20) is modified as follows: 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Thus, it follows that the frequency response may be written as 
where 
The only modification required in Prob. 5.15 to find the form of the frequency response for a type IV linear phase 
filter is to use the fact that h ( n )  is odd to rewrite Eq. (5.21) as follows: 
Therefore, the frequency response is 
where 
5.17 
Show that a system with a complex unit sample response has generalized linear phase if 
h ( n )  = f 
h * ( N  - n )  
If ~ ( e j " )  
is the DTFT of h(n), it follows from the delay property and the time-reversal property that the DTFT of 
h ( N  - n )  is 
D7FT - 
h(N - n )  
e l N w ~ ( e - j W )  
Applying the conjugation property. we then have 
DTFT 
- .  
h*(N - n )  
e ' N W ~ * ( e ' w )  
Now, let us consider the case in which h ( n )  is conjugate symmetric, h(n) = h 
H ( e j w )  = e-jNWf/*(el"') 
l*(N - n). Then 
and, expressing H (el"') and H * ( e J W )  
in terns of their magnitude and phase, we have 
H(eJw) = I ~ ( ~ j w ) l ~ ~ @ l t ( w )  
and 
~ * ( ~ i w )  
= ( ~ ( ~ l ~ ) l ~ - j @ 1 1 ( 0 )  
Therefore, it follows that 
el@h(w) = e - ~ N [ ~ e - ~ ~ ~ ( w ~  
or 
2+h (w) = -No + 2 n k ( o )  

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
where k(w) is an integer for each w. Solving for the phase, we have 
where A(eJW) is a real-valued (in general bipolar) function of w. Thus, h(n) has linear phase. 
For the case in which h(n) is conjugate antisymmetric, 
h(n) = -h*(N - n) 
Eq. (5.22) becomes 
Therefore, 
24,,(w) = -N w + rr + 2 ~ k ( w )  
where again k(w) is an integer for each w. Solving for the phase, we have 
where A(eJw) is a real-valued function of w. and h(n) has generalized linear phase. 
5.18 
The relationship between the input and the output of an FIR system is as follows: 
Find the coefficients h(k) of the smallest-order filter that satisfies the following conditions: 
1. 
The filter has (generalized) linear phase. 
2. 
It completely rejects a sinusoid of frequency wo = n/3. 
3. 
The magnitude of the frequency response is equal to 1 at w = 0 and w = n. 
To reject a sinusoid of frequency @ = 7r/3, the system function must have a pair of zeros on the unit circle at 
z = e*jnl3. Therefore, H(z) must contain a (linear phase) factor of the form 
Note that if 
H(z) = A(l - z-' + F2) 
the magnitude of the frequency response at w = 0 is 
H(eJw)lw,o = A 
and the magnitude of the frequency response at w = K is 
H(ejw)l0,=, = 3 A  

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Thus, no value for A  will allow us to simultaneously satisfy both unit magnitude constraints, and it is necessary to 
add another linear phase term to H  (2). To minimize the order of the filter, we will pick a factor of the form 
In this case, the filter becomes 
H ( z )  = A(l - z-I + z - ~ ) .  
( 1  + BZ-' + z-') 
Now, with two free parameters, A  and B, we should be able to satisfy the magnitude constraints. With 
and 
~ ( e ~ " ' ) ) ~ , ,  
= 3A(2 - B )  = I 
solving for A and B ,  we find 
Therefore, the filter is 
5.19 
Show that if h(n) is real, and 2a is an integer, the constraint 
is sufficient, but not necessary, for h(n) to be the unit sample response of a system with generalized linear 
phase. 
To show that this symmetry condition is sufficient for a system to have generalized linear phase, if we let H(eJW) 
be 
the Frequency response, the symmetry condition implies that 
Expressing H(ejW) in polar form, 
H(ejw) = ~ ~ ( e j ~ ) l e j @ h ( ~ '  
this becomes 
I ~ ( ~ J w ) l ~ j @ h ( w )  
= I ~ ( ~ - i m ) l ~ j @ h ( - ~ ) ~ - j 2 " 0  
Because the magnitude is an even function, I H(eJw)l = IH(e-JW)I, 
and the phase is odd, Q ~ ~ ( W )  
= -&,(-0). 
,J@h (0) = e - ~ @ h ( w ) - j ~ W  
Therefore, the terms in the exponentials must be equal to within an integer multiple of 2n, 
where k is an integer. Solving for Q5,,(w), we have 
and it follows that the system has generalized linear phase. 
To show that this condition is not necessary, note that if 
then H (el'") has linear phase. However, the unit sample response is 
which is not symmetric about an integer index unless 2a = nd is an integer. 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
209 
5.20 
An FIR linear phase filter has a unit sample response that is real with h(n) = 0 for n < 0 and n r 7. If 
h(0) = 1 and the system function has a zero at z = 0.4eJ=/~ and a zero at z = 3, what is H(z)? 
Because h(n) = 0 for n < 0 and for n > 7, H (z) has seven zeros. With a complex zero at z = 0.4ej"l3, because h(n) 
is real, there must be another zero at the conjugate location, z = 0.4~-j"/~. 
This conjugate pair of zeros produces 
the second-order factor 
The linear phase constraint requires that there be a pair of zeros at the reciprocal locations. Therefore, H (z) must 
also contain the factor 
H2(z) = 0.16 - 0.42-I + ;:-2 
The system function also contains a zero at z = 3. Again, the linear phase constraint requires that there also be a 
zero at z = f .  Thus, H(z) also has the factor 
H3(z) = ( I  - 3z-')(1 - f z - ' )  
and we have 
H(z) = A(l - 0.4~-' + 0. 16zF2) . (0.16 - 0.4~-' $. z-') . ( 
Finally, because the coefficient of the zero-order term in this polynonlial is 0. 
A=' 
0.16 
I - 3z-')(l - ;z-1) 
16A, A must be equal to 
in order to make h(0) = 1. 
5.21 
Let x(n) be a finite-length sequence that has a z-transform 
with no conjugate reciprocal zeros, i.e., ak # 1 /a; for any k and 1. Show that x(n) is uniquely defined 
to within a constant by the phase of its discrete-time Fourier transform. 
Let xl (n) be a finite-length sequence that has a z-transform with no conjugate reciprocal zeros and a DTFT with the 
same phase as x(n). Then 
 XI^) = G(z)X(z) 
where G(z) is the system function of a filter that has zero phase. Thus, G(z) must have zeros in conjugate reciprocal 
and/or poles in conjugate reciprocal pairs 
I 
However, conjugate reciprocal zeros in G(z) are not allowed, because this would imply that XI (z) has conjugate 
reciprocal zeros. Similarly, because X(n) is finite in length, G(z) cannot have poles in conjugate reciprocal pairs 
because this would imply that xl(n) is infinite in length. Therefore, G(z) must be a constant, and the result follows. 
Allpass Filters 
5.22 
Consider a linear shift-invariant system with system function 
where la1 < 1. 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
(a) Find a difference equation to implement this system. 
(b) Show that this system is an allpass system (i.e., one for which the magnitude of the frequency 
response is constant). 
(c) H(z) is to be cascaded with a system G(z) so that the overall system function is unity. If G(z) is to 
be a stable system, find the unit sample response, g(n). 
(a) Because 
cross-multiplying, we have 
l'(z)[l - az-'1 = ~ ( z ) [ z - '  - a*] 
Taking the inverse z-transform of both sides of the equation gives 
which is the desired difference equation. 
(b) To show that this system is an allpass filter, note that the frequency response is 
Therefore, the squared magnitude is 
and H(ejw) is an allpass filter. 
(c) The inverse system is 
which has a pole at 2 = l/a" and a zero at z = a. Because la1 < I, the pole is outside the unit circle. Therefore, 
if g(n) is to be stable, the region of convergence must be lzl i 
I/lal Thus, g(n) is the left-sided sequence 
5.23 
The system function of a causal FIR filter is 
Find three other causal FIR filters with h(0) > 1 that have afrequency response with the same magnitude. 
This filter has a pair of complex zeros and one real zero. The magnitude of the frequency response of this filter will 
not be changed if it is cascaded with an allpass filter [hat flips the zeros to their reciprocal location. Therefore, three 
other FIR filters that have the same magnitude response are 
Note that each of these filters is causal with h(0) > I. The causality constraint along with the condition that h(0) > I 
prevents h(n) from being shifted or scaled by (- I ), two operalions that do not change the Fourier transform magnitude. 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
21 1 
5.24 
Let x(n) be a finite-length sequence that is zero for n < 0 and n > N. If x(n) is allowed to be complex. 
what is the maximum number of distinct finite-length sequences that have the same Fourier transform 
magnitude as x(n)? 
Let X(z) be the z-transform of x(n), which is of the form 
Each zero may be reflected about the unit circle by multiplying by an allpass filter 
without changing the magnitude of X(eJU). Because there are two possible locations for each of the N zeros. the num- 
ber of distinct tinite-length sequences (ignoring delays and multiplication by a unit magnitude complex number) is 2'. 
5.25 
Show that the group delay of an allpass filter is nonnegative for all w .  
If a is real and Ial < I ,  the group delay of a filter that has a system function 
which has a single pole at z = a, is (see Rob. 2.19) 
Similarly, the group delay for a filter with the system function 
which has a single zero at z = a, is 
r2(o) = -r,(o) 
Furthermore, if 
the group delay is 
Therefore, the group delay of a single allpass factor of the form 
which, because IciI i 
1, is positive for all w. 
For complex roots, the allpass factors have the form 

TRANSFORM ANALYSIS O F  SYSTEMS 
(CHAP. 5 
Therefore, with cu =  ale.^^, the frequency response is 
and the group delay is 
which is nonnegative for all w. 
5.26 
Show that the phase of an allpass filter with h(n) real, if plotted as a continuous function of w, is non- 
positive for all w. 
The group delay is minus the derivative ot'the phase. Therefore, the phase is related to the group delay as follows: 
Because the general form for the frequency response of an allpass filter is 
then 
Thus, @,,(O) = 0, and the positivity of q,(w) makes the phase nonpositive. 
Minimum Phase 
5.27 
Suppose that H ( z )  and C(z) are rational and have minimum phase. Which of the following filters have 
minimum phase? 
(a) H ( z ) G ( z )  
(b) H ( z )  + G ( z )  
(a) If t l ( z )  and G(z) have minimum phase, neither H(z) nor G(z) have any poles or zeros outside the unit circle. 
Because the poles and zeros of H(z)G(z) are the union of the poles and zeros of H(z) and G(z), H(z)G(z) will 
not have any poles or zeros outside the unit circle and. therefore, has minimum phase. 
(6) If H ( z )  and G(z) have minimum phase. i t  is no1 necessarily true that H ( z )  + G ( z )  will have minimum phase. 
We may show this by a simple counter example. If 
and 
B 
G(z) = 
I - 0 . 7 5 ~  ' 
both H ( z )  and G(z) have minimum phase. However, the sum 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
may have a zero anywhere in the z-plane by choosing the appropriate values for A and B. For example, because 
H(z) + G(z) has a zero at 
7 - 0.5B + 0.75A 
- - 
A + B  
to place a zero at z = 2, we may set A = I and solve the following equation for B: 
which gives B  = -2. 
5.28 
A nonminimum phase causal sequence .r(n) has a z-transform 
For what values of the constant cr will the sequence y(n) = crnx(n) be minimum phase? 
Multiplying a sequence by d' moves the poles and zeros radially by a factor of a: 
In order for Y ( z )  to be minimum phase, all of the poles and zeros must be inside the unit circle. Because the singularity 
(pole or zero) of X ( 2 )  that is the furthest from the unit circle is the zero at z = -?, y(n) will be minimum phase if 
Iff1 < ;. 
5.29 
A causal linear shift-invariant system has a system function 
Find a factorization for H(z) of the form 
where Hmi,(z) has minimum phase. and Hap(z) is an allpass filter. 
The system function H(z) has a nonminimum phase factor, (1 - 2 ~ - ~ ) ,  
which may be written as the product of a 
minimum phase term and an allpass factor as follows: 
Therefore, H(z) may be written as the product of a minimum phase system with an allpass system as follows: 
5.30 
A causal linear shift-invariant system has a system function 
(3 + z-I)(2 - 3z-I) 
H (z) = 
1 - iz-l 
Find a factorization for H(z) of the form 
where Hmi,(z) has minimum phase, and Hlp(z) is a linear phase system. 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
This system is not minimum phase because the factor (2 - 3z-') corresponds to a zero outside the unit circle at 
z = :. However, we may express this factor as the product of a minimum phase term with a linear phase term as 
follows. First, we reflect the zero about the unit circle and replace it with a pole: 
Then, we multiply this term with a linear phase factor that has a zero at z = $ and a zero at z = :: 
Thus, the factorization for H ( z )  is 
3 + z-' 
H ( z )  = 
(2z-' - 3)(2 - 32-') 
( I  - 4z-')(2z-l - 3) 
5.31 
Find a real-valued causal sequence with ~ ( 0 )  
> 0 and 
I X ( @ ' ) [ ~  = (1 + a2) - 20 cos w 
We begin by expressing IX (ej'")12 in terms of complex exponentials: 
I X ( P ' " ) I ~  = (I +a2) - .elW -  UP-^^^ 
Replacing d" with z, and e-1'" with z-', we have 
G ( z )  = X ( Z ) X ( Z - ' )  = ( I + a 2 )  - az - uz-' = ( I  - u z f l ) ( l  - az) 
Therefore, a real-valued causal sequence with the given magnitude with .u(O) > 1 is 
.r(n) = 6(n) - u6(n - I) 
5.32 
Find the minimum phase system that has a magnitude response given by 
To solve this problem, we begin by expressing ( ~ ( e j ' " ) l ~  
in terms of complex exponentials as follows: 
Replacing ei" by z, and e-JW by z-I, this becomes 
The minimum phase system is then formed by extracting the poles and zeros that are inside the unit circle: 
5.33 
Use the initial value theorem to show that if hmi,(n) is a minimum phase sequence, and if h ( n )  is a causal 
sequence with the same Fourier transform magnitude, then 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
215 
The initial value theorem states that for a causal sequence, the initial value may be found from the z-transform as 
follows: 
h(0) = I:% 
H(z) 
Let hmin(n) be a minimum phase sequence, and let h(n) be the nonminimum phase sequence that is formed by 
reflecting a zero from inside the unit circle at z = a to its conjugate reciprocal location at z = I/a*: 
Because (z-' - a*)/(l - az-I) is an allpass filter. h(n) and hmin(n) have the same Fourier transform magnitude. 
Using the initial value theorem, we may compare the value of h(0) to h,l,i,,(0): 
and because la1 < I, lh(0)I < lhm,,(0)l. Because the magnitude of Ih(O)l is reduced each time that a zero of Hmin(z) 
is flipped outside the unit circle, 
Ih(0)l < Ihrnm(0)l 
for any sequence h(n) that has a Fourier transform with the same magnitude as that of hmi.(n). 
5.34 
Prove the minimum energy delay property for minimum phase sequences. 
Let hm,,(n) be a minimum phase sequence, and let a k  be a zero of Hmin(z). 
Then Hmin(z) may be written as 
HmIn(z) = ( 1  - a k z - ' F m i n ( z )  
(5.23) 
where Gmin(z) 
is another minimum phase sequence. Because Hm,,(z) is minimum phase, lakI < I. Let H(z) be the 
causal nonminimum phase sequence that is formed by replacing the zero at z = a k  with a zero at z = ]/a;: 
Because 
z-I - a; 
H ( z )  = 
Hminiz) 
I - akz-' 
then 
I H(eJW)I = I Hm,,(el'")i 
Expressing Eqs. (5.23) and (5.24) in the time domain. we have 
hm,.(n) = gmin(n) - akgmln(n - 1 )  
h(n) = gmin(n - 1) - a,l~mln(n) 
Now, let us evaluate the difference between the partial sums of (h,,,~n)/~ 
and [h(n)12: 
Expanding the square and canceling the common terms, this becomes 
which is greater than zero because \ak 
1 < 1. Therefore, 

TRANSFORM ANALYSIS OF SYSTEMS 
[CHAP. 5 
Because gmi,(n) is minimum phase, this procedure may be repeated for any remaining zeros in Gmi,(z). Therefore, 
it follows that any causal nonminimum phase sequence that has the same Fourier transform magnitude as Hmi,(z) 
will have a partial sum that is smaller than that for hmi,(n). 
Feedback 
535 
Suppose that we have an unstable second-order system 
H (z) = 
that we would like to stabilize with the feedback system shown below. 
Find the system function of the closed-loop system, Q(z), and determine the values for the feedback gain 
K that result in a stable system. 
The system function of the feedback network is 
Therefore, this system will be stable if 
which implies that 
and if 
which is automatically satisfied by the first condition, K 
0.44. 
5.36 
Let H ( z )  be an unstable system with 
I 
H (z) = 
I - 1 . 5 ~ - '  - 3
~
-
~
 
(a) Using a feedback system of the form 
G ( z )  = K Z - I  
determine the values for the gain K, if any, that will stabilize this system. 
(b) Repeat part (a) using a feedback system of the form 

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
(a) The system function of the feedback network is 
Because the coefficient multiplying the term z - ~  
is larger than 1, this system will be unstable for all K .  
(b) With G ( i )  = K z - ~ ,  the closed-loop system function becomes 
H ( z )  
-- 
- 
I 
Q(z) = 
I + H ( z ) .  Kz-2 
I - 1.5~-I + (K - 3)zr2 
This system will not be stable unless 
la(2)I = IK - 31 < I 
which requires that 
2 < K < 4  
In addition, however, we must have 
which requires that K  z 3.5. Therefore, in order for this system to be stable, we must have 
5.37 
Let H ( z )  be a plant with a system function 
Find a feedback system G ( z )  of the form 
that will place a second-order pole in the closed-loop system at z = 1. 
The system function of the closed-loop system is 
To place a second-order pole at z  = 1, we want to find c and d so that 
The solution is c = -8.7 and d = 3.4. 

TRANSFORM ANALYSIS OF SYSTEMS 
Supplementary Problems 
[CHAP. 5 
The System Function 
The input to a causal linear shift-invariant system is 
x(n) = u-17 - I )  + ( ~ U ( I , )  
The z-transform of the output of this system is 
Find the system function H(z) of the filter. 
A causal linear shift-invariant digital filler has a system function given by 
H (;) = 
I 
(I - z-1)2(1 - az-' + $2-2) 
Determine whether or not the filter is stable. 
The system function of a linear shift-invariant system is 
H(z) = el" 
If h(n) is a right-sided sequence, is this system stable'? 
Let x ( n )  be a real-valued, causal sequence with a discrete-time Fourier transform 
X(cJ") = XR(el'*) + jX,(eJ") 
If 
find x(n). 
The system function of a linear shift-invariant system is 
H(z) = log(l - f r - ~ ' )  
(z( > 
Is this system causal? 
Which of the following z-transforms could be Ihe system function of a causal system'? 
d (I - ~ z - I ) ~  
(a) X(z) = - 
dz (3 - 22-')2 
The system function of a causal filter is 
1 
H(z) = 
I + UZ-' + 0 . 3 ~ - ~  
For what values of a will this filter be stable'? 
A stable filter has a system function 
( I  - 3z-I)(l - \z-') 
H ( i )  = 
I - O.2zr1 + 0 . 4 ~ ~ ~  
Find a stable and causal system G(eJW) 
such that 
If the frequency response of a stable linear shift-invariant system is real and even, will the inverse system be stable? 

CHAP. 51 
TRANSFORM ANALYSlS OF SYSTEMS 
Systems with Linear Phase 
The system function of an FIR filter is 
H(z) = ( I  + 0.22-' + 0 . 8 : ~ - ~ ) ~  
Find a linear phase system that has a frequency response with the same magnitude. 
An FIR filter with generalized linear phase has the following properties: 
I. 
h(n) is real, and h(n) = 0 for n c 0 and for n > 5. 
2. xi=,(- 
l)"h(n) = 0. 
3. 
H(z) is equal to zero at z = 0.7e~"'~. 
4. J:z 
H(eJW)dw = 4n. 
Find H(z). 
An FIR filter with a real-valued unit sample response has a group delay 
t ( ~ )  
= 2 
If the system function has a zero at z = 4 j, and H(z)~;=, = 1, find h(n). 
Let x(n) be a sequence that is equal to zero for n i 
0 and n > 5. If the z-transform of w(n) is 
X(z) = 3(1 - 0.2:-')(I + 0 . 5 ~ '  + 0.8z-')(l + 0.42' - 0 . 5 ~ - ~ )  
how many other sequences are equal to zero for n < 0 and n r 5, have the same initial value as x(n), and have the 
same phase? 
Allpass Filters 
The system function of an FIR filter is 
Find another causal FIR filter with h(n) = 0 for n > 4 that has the same frequency response magnitude. 
A causal and stable allpass filter has a unit sample response that is real. The system function contains three poles, 
one of which is at z = 0.8. If H(z) has a zero at z = 2e'"I4, what is H(z)? 
A linear shift-invariant system has a system function 
If H(z) is an allpass filter, what is the relationship between the numerator coefficients h(k) and the denominator 
coefficients u(k)? 
Minimum Phase 
5.54 
What can you say about the poles and zeros of a minimum phase system H,,,(z) if there is an allpass system H,,(z) 
such that 
Hmm(z)Hap(z) = Hipl:z) 
where H,,(z) is a causal (generalized) linear phase system? 

TRANSFORM ANALYSIS OF SYSTEMS 
Find the minimum phase system that has a magnitude response given by 
[CHAP. 5 
Suppose that H(z) and G(z) are rational and have minimum phase. Which of the following also have minimum 
phase? 
(a) H-'(z), 
(b) H(z)/G(z), 
(c) 
Z - I  H(z)? 
A causal linear shift-invariant discrete-time system has a system function 
(1 - 0.72-')(I - j2z-')(I + j2z-') 
H (z) = 
(1 - 0.82-')(I + 0 . 8 ~ - I )  
(a) Find a minimum phase system function H,,,(z) and an allpass system function Hap(z) such that 
(b) Find a minimum phase system function Hmi,(z) and a linear phase system function Hlp(z) such that 
Let x(n) be a real-valued minimum phase sequence. Find another real-valued minimum phase sequence y(n) such 
that x(0) = y(0) and y(n) = Ix(n)l. 
Find two different real-valued sequences that satisfy the following constraints: 
I ,  
x(0) = Oandx(1) > 0. 
2. 
I X ( ~ J " ) ~ ~  
= $ - cosw. 
Feed back 
5.60 
If a feedback system of the form G(z) = K is used to compensate the system 
for what values of K will the closed-loop system be stable? 
5.61 
For the system 
H(z) = 
I 
l + 1 .2zr1 + 1.5z-' 
find a feedback system of the form 
G(z) = I + g(l)z-I + g(2)z-2 
that will move the poles of H(z) to z = 0.5 and 2 = -0.5. 
5.62 
Find the closed-loop system function of a feedback network with 
H(z) = 
and G(z) = - i z - I .  
1 - + I  

CHAP. 51 
TRANSFORM ANALYSIS OF SYSTEMS 
Answers to Supplementary Problems 
Unstable. 
Yes. 
Yes. 
(a) Yes. (b) No. 
Yes. 
None. 
H ( z )  = 0.4 -t 0 . 8 ~ - '  - 0.5z-' + 0 . 2 r 3  + z - ~ .  
b(k) = a(p -- k )  fork = 0, 1 ,  . . . , p - 1 ,  and b(p) = 1. 
Hmin(z) 
is FlR with each zero having even order (i.e., Hmin(z) 
= G2(z) where G(z) is a minimum phase system). 
2 
H(z) = -- 
1 - az-I' 
(a) and (b) have minimum phase but (c) does not. 

222 
TRANSFORM ANALYSIS OF SYSTEMS 
5.59 
x,(n) = S(n - 1) - fS(n - 2) and x2(n) = aS(n - I )  - S(n - 2). 
5.61 
g ( l )  = - 1.2 and g(2) = -2. 
2 - 2 
- 1  + A z - 2  
(h) Q ( z ) = '  " 
I + i z - I  - k z - 2  ' 
[CHAP. 5 

Chapter 6 
The DFT 
6.1 INTRODUCTION 
In previous chapters, we have seen how to represent a sequence in terms of a linear combination of complex 
exponentials using the discrete-time Fourier transform (DTFT) and how the sequence values may be used as the 
coefficients in a power series expansion of a complex-valued function of z. For finite-length sequences there is 
another representation, called the discrete Fourier transform (DFT). Unlike the DTFT, which is a continuous 
function of a continuous variable, w, the DFT is a sequence that corresponds to samples of the DTFT. Such a 
representation is very useful for digital computations and for digital hardware implementations. In this chapter, 
we look at the DFT, explore its properties, and see how it may be used to perform such tasks as digital filtering 
and evaluating the frequency response of a linear shift-invariant system. 
6.2 DISCRETE FOURIER SERIES 
Let K(n) be a periodic sequence with a period N: 
Although, strictly speaking,K(n) does not have a Fourier transform because it is not absolutely summable, it can 
be expressed in terms of a discrete Fourier series (DFS) as follows: 
which is a decomposition of K(n) into a sum of N harmonically related complex exponentials. The values of 
the discrete Fourier series coefficients, $(k), may be derived by multiplying both sides of this expansion by 
e-jZnnllN, summing over one period, and using the fact that the complex exponentials are orthogonal: 
The result is 
Note that the DFS coefficients are periodic with a period N: 
Equations (6.1) and (6.2) form a DFS pair, and we write 
EXAMPLE 6.2.1 
Let us find the discrete Fourier series representation for the sequence 

224 
THE DlT 
[CHAP. 6 
where 
1 
O ( n < 5  
x(n) = 0 
else 
Note that P(n) is a periodic sequence with a period N = 10. Therefore, the DFS coefficients are 
which, for 0 5 k 5 9, may be simplified to 
k = O  
x ( k )  = 
k odd 
I 
k even 
The DFS coefficients for all other values of k may be found from the periodicity of ~ ( k ) :  
2(k + N )  = f ( k )  
A notational simplification that is often used for the DFS is to define 
WN + e - ~ 2 n / N  
for the complex exponentials and write the DFS pair as follows: 
The discrete Fourier series has a number of useful and interesting properties. A few of these properties are 
described below. 
Linearity 
The DFS pair satisfies the property of linearity. Specifically, ifPl(n) and i2(n) are periodic with period N, the 
DFS coefficients of the sum are equal to the sum of the coefficients for .f (n) and f z(n) individually, 
Shift 
If a periodic sequence I(n) is shifted, the DFS coefficients are multiplied by a complex exponential. In other 
words, if z(k) are the DFS coefficients for P(n), the DFS coefficients for y(n) = 2(n - no) are 
f (k) = wf02(k) 
Similarly, if P (n ) is multiplied by a complex exponential, 
the DFS coefficients of i ( n )  are shifted: 
Y (k) = $(k + k,,) 

CHAP. 61 
THE DFT 
225 
Periodic Convolution 
1f h(n) and i ( n )  are periodic with a period N with DFS coefficients &(k) and g ( k ) ,  respectively, the sequence 
with DFS coefficients 
F ( k )  = 4 (k)f ( k )  
is formed by periodically convolving h(n) with R(n) as follows: 
Notationally, the periodic convolution of two sequences is written as 
The only difference between periodic and linear convolution is that, with periodic convolution, the sum is only 
evaluated over a single period, whereas with linear convolution the sum is taken over all values of k. 
EXAMPLE 6.2.2 
Let us periodically convolve the two sequences pictured below that have a period N = 6. 
The periodic convolution of two sequences may be performed graphically, analytically, or using the DFS. In this problem, 
we will use the graphical approach. We begin by plotting P(n - k )  versus k. This sequence, for n = 0. is illustrated below. 
The value of J(0) is then Found by summing the product i ( k ) f ( - k )  from X- = 0 to k = 5. The result is j ( 0 )  = 1 .  Next, 
f ( - k )  is shifted to the right by one and multiplied by h(k). Because the only two nonzero values of P(1 - k) are at k = 4.5. 
the product h"(k)f(l - k )  is equal to zero, and J ( I )  = 0 .  This process is continued until we have one period of J(n). The 
result is illustrated below. 

226 
THE DFT 
[CHAP. 6 
6.3 DISCRETE FOURIER TRANSFORM 
The DFT is an important decomposition for sequences that are finite in length. Whereas the DTFT is a mapping 
from a sequence to a function of a continuous variable, w, 
the DFT is a mapping from a sequence, x(n), to another sequence, X(k), 
The DFT may be easily developed from the discrete Fourier series representation for periodic sequences. Let 
x(n) be a finite-length sequence of length N that is equal to zero outside the interval [0, N - I]. A periodic 
sequence i ( n )  may be formed from x(n) as follows: 
This periodic extension may be expressed as follows: 
i ( n )  = x(n mod N) r ~ ( ( n ) ) ~  
where (n mod N )  and ((n))N are taken to mean "n modulo N ." That is to say, if n  is written in the form n  = kN +I 
where 0 5 I < N ,  
(n mod N) = ( ( n ) ) ~  
= I  
For example, (( 13))8 = 5 and ((-6))x = 2. 
A periodic sequence may be expanded using the DFS as in Eq. (6.1). Because x(n) = 2 ( n )  for n = 0, 1, . . . , 
N - 1 ,  x(n) may similarly be expanded as follows: 
Because the DFS coefficients are periodic, if we let X ( k )  be one period of i ( k )  and replace%(k) in the sum with 
X (k), then we have 
The sequence X ( k )  is called the N-point DFT of x(n). These coefficients are related to x(n) as follows: 
Equations (6.4) and (6.5) form a DFT pair, and we write 
This expansion is valid for complex-valued as well as real-valued sequences. 
Comparing the definition of the DFT of x(n) to the DTFT, it follows that the DFT coefficients are samples 
of the DTFT: 

CHAP. 61 
THE DFT 
227 
Alternatively, the DFT coefficients correspond to N samples of X ( z )  that are taken at N equally spaced points 
around the unit circle: 
X ( k )  = X(z)lz=exp(j?nklNJ 
6.4 DFT PROPERTIES 
In this section, we list some of the properties of the DFT. Because each sequence is assumed to be finite in length, 
some care must be exercised in manipulating DFTs. 
Linearity 
If x l ( n )  and x2(n) have N-point DFTs X l ( k )  and X2(k), respectively, 
In using this property, it is important to ensure that the DFTs are the same length. If x l ( n )  and xz(n) have 
different lengths, thc shorter sequence must be padded with zeros in order to make it the same length as the 
longer sequence. For example, if x l ( n )  is of length N I  and x2(n) is of length N2 with N2 > N 1. x l ( n )  may be 
considered to be a sequence of length N2 with the last N2 - NI values equal to zero, and DFTs of length N2 may 
be taken for both sequences. 
Symmetry 
If x(n) is real-valued, X(k) is conjugate symmetric, 
X(k) = X*((-k)) = X*((N - k ) ) ~  
and if x(n) is imaginary, X(k) is conjugate antisymmetric, 
X(kj = -X*((-k)) = -X*((N -- k ) ) ~  
Circular Shift 
The circular shift of a sequence x(n) is defined as follows: 
x((n - n o ) ) ~ R ~ ( n )  
= i ( n  - n o ) R ~ ( n )  
where no is the amount of the shift and RN ( n )  is a rectangular window: 
A circular shift may be visualized as follows. Suppose that the values of a sequence x(n), from n  = 0 to n  = 
N  - I ,  are marked around a circle as illustrated in Fig. 6-1 or in an eight-point sequence. A circular shift to the 
right by no corresponds to a rotation of the circle no positions in a clockwise direction. An example illustrating 
the circular shift of a four-point sequence is shown in Fig. 6-2. Another way to circularly shift a sequence is to 
form the periodic sequence i ( n ) ,  perform a linear shift, T(n - no), and then extract one period off (n - no) by 
multiplying by a rectangular window. 
If a sequence is circularly shifted, the DFT is multiplied by a complex exponential, 
.r((n - no) ) N R N ( ~ )  
a 
w;lk x ( k )  
(6.6) 
Similarly, with a circular shift of the DFT, X((k - k O ) ) ~ .  
the sequence is multiplied by a complex exponential, 

THE DFT 
[CHAP. 6 
(a) An eight-point sequence. 
(b) Circular shift by two. 
Fig. 6-1. Visualizing a circular shift by rotating a circle that has the sequence values written 
around the circle. 
(a) A discrete-time signal of length N = 4. 
(b) Circular shift by one. 
(c) Circular shift by two. 
(d) Circular shift by three. 
Fig. 6-2. The circular shift of a four-point sequence. 
Circular Convolution 
Let h(n) and x(n) be finite-length sequences of length N with N-point DFTs H(k) and X ( k ) ,  respectively. The 
sequence that has a DFT equal to the product Y ( k )  = H (k)X ( k )  is 

CHAP. 61 
THE DFT 
whereP(n) and h(n) are the periodic extensions of the sequences x(n) and h(n ), respective1 y. ~ e c a u s e  
h(n) = h(n) 
for 0 5 n < N, the sum in Eq. (6.8) may also be written as 
The sequence y(n) in Eq. (6.9) is the N-point circular convolution of h(n) with x(n), and it is written as 
The circular convolution of two finite-length sequences h(n) and x(n) is equivalent to one period of the periodic 
convolution of the periodic sequences i ( n )  andf(n), 
In general, circular convolution is not the same as linear convolution. and N -point circular convolution is diff- 
erent, in general, from M-point circular convolution when M # N .  
EXAMPLE 6.4.1 
Let us perform the four-point circular convolution of the two sequences h(n) and x(n) shown below. 
The four-point circular convolution is 
which may be performed graphically, as follows. The value of y(n) at n = 0 is 
Shown in the figure below is a plot of the sequence h(-k)R4(k). 
To evaluate y(O), we multiply this sequence by x ( k )  and sum the product from k = 0 to k = 3. The result is y(0) = 1. Next, 
to find the value of y( I), we evaluate the sum 

THE DFT 
[CHAP. 6 
Shown in the figure below is a plot of h(l - k ) R 4 ( n ) .  
Multiplying by P(k) and summing from k = 0 to k = 3, we find that y ( l )  = 4. Repeating for n = 2 and n = 3, we have 
Therefore, 
y ( n )  = h ( n )  @ .r(n) = 6 ( n )  + 46(n - I) + 26(n - 2 )  + 26(n - 3 )  
By comparison, the linear convolution of h ( n )  with x ( n )  is the following six-length sequence: 
h ( n )  * x ( n )  = S(n) + &(ti - 1) + 26(n - 2 )  + 2&n - 3 )  + 36(n - 5 )  
Another way to perform circular convolution is to compute the DFTs of each sequence. multiply, and compute 
the inverse DFT. 
EXAMPLE 6.4.2 
Let us perform the N -point circular convolution of .rl(n) and x2(n) where 
Because the N-point DFTs of x,(n) and x2(n) are 
N - l  
N 
k = O  
X l ( k )  = X2(k) = x 
w ; ~  
= 
,, =O 
0 
else 
then 
Therefore, the N-point circular convolution of x l ( n )  with s z ( n )  is the inverse DFT of X(k), which is 
N 
O ( n 5 N - l  
x ( n )  = 0 
else 
Circular Versus Linear Convolution 
In general, circular convolution is not the same as linear convolution. However, there is a simple relationship 
between circular and linear convolution that illustrates what steps must be taken in order to ensure that they are 
the same. Specifically, let x ( n )  and h ( n )  be finite-length sequences and let y ( n )  be the linear convolution 
y ( n )  = x ( n )  * h ( n )  
The N-point circular convolution of x ( n )  with h(n) is related to y(n) as follows: 

CHAP. 61 
THE D m  
23 1 
In other words, the circular convolution of two sequences is found by performing the linear convolution and 
aliasing the result. 
An important property that follows from Eq. (6.10) is that if y(n) is of length N or less, y(n - k N )  
R N ( n )  = Ofork # Oand 
h(n) @ x(n) = h(n) * x ( n )  
that is, circular convolution is equivalent to linear convolution. Thus, if h(n) and x(n) are finite-length sequences 
oflength NI and N2, respectively, y(n) = h(n)*x(n) is of length N I  + Nr - I, and the N -point circularconvolution 
is equivalent to linear convolution provided N 2 N I + N2 - 1 .  
EXAMPLE 6.4.3 
Let us find the four-point circular convolution of the sequences h(n) and x(n) in Example 6.4.1. Because 
the linear convolution is 
y(n) = 6(n) + S(n - I )  + 2S(n - 2) + 26(n - 3) + 3S(n - 5) 
we may set up a table to evaluate the sum 
This is done by listing the values of the sequence y(n + k N )  in a table and summing these values for n = 0, 1,2,3. 
Note 
that the only sequences that have nonzero values in the interval 0 5 n 5 3 are y(n) and y(n + 4), and these are the only 
sequences that need be listed. Thus, we have 
Summing the columns for 0 5 n 5 3, we have 
which is the same as computed in Example 6.4.1. 
6.5 SAMPLING THE DTFT 
Let x ( n )  be a sequence with a DTFT X(eJU), and consider the finite-length sequence y ( n )  of length N whose 
DFT coefficients are obtained by sampling X(ejU) at wk = 2nk/N : 
Because the DTFT is equal to the z-transform evaluated around the unit circle, these DFT coefficients may also 
be obtained by sampling X ( z )  at N equally spaced points around the unit circle at zk = exp( j2nklN): 
These sampling points are illustrated in Fig. 6-3 for N = 8. To express the sequence values y ( n )  in terms of x(n), 
we begin by finding the inverse DFT of Y (k): 
Because the DFT coefficients Y ( k )  are samples of the DTFT of x(n), 

THE DFT 
[CHAP. 6 
I - 
Unit circle 
Fig. 6-3. Sampling the z-transform at eight equally 
spaced points around the unit circle. 
Substituting this expression for Y (k) into Eq. (6.12) gives 
1 N-I 
m 
( 
= 
{ 
x()e-12r/X/N e j 2 r n k / N  - - 
] 
- 2 x ( l ) ( =  
cj2n+/)k/N 
k=O 
I=-m 
N I=-m 
X =o 
The term in brackets is equal to N when I = n + mN where m is an integer, and it is equal to zero otherwise. 
Therefore, 
and it follows that y(n) is formed by aliasing x(n) in time. 
6.6 LINEAR CONVOLUTION USING THE DFT 
The DFT provides a convenient way to perform convolutions without having to evaluate the convolution sum. 
Specifically, if h(n) is N 1  points long and x(n) is N2 points long. h(n) may be linearly convolved with x(n) as 
follows: 
1. Pad the sequences h(n) and x ( n )  with zeros so that they are of length N 2 N I  + N2 - 1. 
2. Find the N -point DFTs of h(n) and x(n). 
3. Multiply the DFTs to form the product Y ( k )  = H (k)X (k). 
4. Find the inverse DFT of Y (k). 
It would appear that there is considerably more effort involved in performing convolutions using DFTs. However, 
significant computational savings may be realized with this approach if the DFTs are computed efficiently. As 
we will see in Chap. 7, the fast Fourier transform (FFT) provides such an algorithm. 
In spite of its computational advantages, there are some difficulties with the DFT approach. For example, 
if x(n) is very long, we must commit a significant amount of time computing very long DFTs and in the process 
accept very long processing delays. In some cases, it may even be possible that x ( n )  is roo long to compute the 
DFT. The solution to these problems is to use block convolution, which involves segmenting the signal to be 
filtered, x(n), into sections. Each section is then filtered with the FIR filter h(n), and the filtered sections are 
pieced together to form the sequence y(n). There are two block convolution techniques. The first is overlap-add, 
and the second is overlap-save. 

CHAP. 61 
THE DFT 
Overlap- Add 
Let x(n) be a sequence that is to be convolved with a causal FIR filter h(n) of length L: 
Assume that x(n) = 0 for n i 
0 and that the length of x(n) is much greater than L .  In the overlap-add method, 
x(n) is partitioned into nonoverlapping subsequences of length M as illustrated in Fig. 6-4. Thus, x(n) may be 
written as a sum of shifted finite-length sequences of length M, 
m 
x(n) = x r i ( n  - Mi) 
1 =O 
where 
x ( n + M i )  
n=0. I . . . . , M  - 1 
xi(n) = 
else 
Therefore, the linear convolution of x(n) with h(n) is 
where yi(n) is the linear convolution of x;(n) with lz(n), 
Because each sequence yi(n) is of length N = L + M - I. it may be found by multiplying the N-point DFTs of 
xi(n) and h(n). The reason for the name overlap-add is that, for each i. the sequences yi(n) and y;+~(n) 
overlap 
at (N - M) points and, in performing the sum in Eq. (6.14). these overlapping points are udded. 
Fig. 6-4. Partitioning a sequence into subsequences of length M for the 
ovelap-add method of block convolulion. 

234 
THE DFT 
[CHAP. 6 
Overlap-Save 
The second way that the DFT may be used to perform linear convolution is to use the overlap-save method. This 
method takes advantage of the fact that the aliasing that occurs in circular convolution only affects a portion of 
the sequence. For example, if .r(n) and h(n) are finite-length sequences of lengths L and N, respectively, the 
linear convolution y(n) is a finite-length sequence of' lengths N + L - I .  Therefore, assuming that N > L, if 
we perform an N-point circular convolution of x ( n )  with h(n), 
Because y(n + N) is the only term that is aliased into the interval 0 5 n 5 N - 1, and because y(n + N) only 
overlaps the first L - 1 values of y(n), the remaining values in the circular convolution will not be aliased. In 
other words, the first L - 1 values of the circular convolution are not equal to the linear convolution, whereas 
the last M = N - L + I values are the same (see Fig. 6-5). Thus, with the appropriate partitioning of the input 
sequence x(n). linear convolution may be performed by piecing together circular convolutions. The procedure 
is as follows: 
I .  
Let xl ( 1 7 )  be the sequence 
2. 
Perform the N-point circular convolution of xl ( n )  with lz(n) by forming the product H ( k ) X I  (k) and then 
finding the inverse DFT, yl(n). The first L - 1 values of the circular convolution are aliased, and the last 
Discard f 
Discard f 
~ 3 ( 7 4  I
Discard f 
Fig. 6-5. Illustration of the overlap-save method of block convolution. 

CHAP. 61 
THE DFT 
235 
N - L + 1 values correspond to the linear. convolution of x ( n )  with h(n). Due to the zero padding at 
the start of xl(n), these last N - L + I values are the first N -- L + 1 values of y(n): 
3. Let x2(n) be the N-point sequence that is extracted from x ( n )  with the first L - 1 values overlapping 
with those of x, (n). 
4. 
Perform an N -point circular convolution of x2(n) with h ( n )  by forming the product H ( k ) X 2 ( k )  and 
taking the inverse DFT. The first L - I values of y2(n) are discarded and the final N - L + 1 values are 
saved and concatenated with the saved values of yl ( n ) :  
5. Steps 3 and 4 are repeated until all of the values in the linear convolution have been evaluated. 
The reason for the name overlap-save is that x ( n )  is partitioned into overlapping sequences of length N and, 
after performing the N-point circular convolution, only the last N - L + 1 values are saved. 
Solved Problems 
Discrete Fourier Series 
6.1 
Find the DFS expansion of the sequence 
Because i ( n )  is periodic with a period N = 4, the DFS coefficients may be found by evaluating the sum 
Alternatively, ~f we express i ( n )  in terns of complex exponentials, 
and use the fact that 
we may pick efthe DFS coefficients directly as follows. Using the periodicity of the complex exponentials, 
we may express f ( n )  as 
A 
2" 
A 
i(n) 
= -,IT" 
+ -,J$sn 
2 
2 
Comparing Eys. (6.15) and (6.16 ), we see that 

236 
THE DFT 
[CHAP. 6 
6.2 
If i ( n )  is a periodic sequence with a period N, 
2 ( n )  is also periodic with period 2N. Let g ( k )  denote the DFS coefficients when f ( n )  is considered to 
be periodic with a period N, and let 2 z ( k )  be the DFS coefficients when the period is assumed to be 2N. 
Express the DFS coefficients g 2 ( k )  in terms of g ( k ) .  
If we considerP(n) to be periodic with a period 2 N ,  the DFS coefficients are 
BecauseP(n) = P(n + N), this sum may be written as 
Note that the term in brackets is equal to 2 when k is even, and it is equal to zero when k is odd. When k is even, 
Therefore, the DFS coefficients g2(k) are 
6.3 
If i ! ( n )  and i z ( n )  are periodic with period N with DFS coefficients 2 ( ( k )  and x 2 ( k ) ,  respectively, show 
that the sequence with DFS coefficients f ( k )  = f I ( k ) X z ( k )  is equal to the periodic convolution of ,i 
I ( n )  
and i 2 ( n ) :  
N - l  
i ( n )  = x i l ( k ) , i z ( n  - k )  
k=O 
Given that X(k) = XI (k)z2(k), the sequence .P(n) is 
Because we would like to express 3(n) in terms of l ( n )  and Pz(n), we begin by substituting 
for Xl(k) into Eq. (6.17). With this substitution. we have 
Rearranging the sums and combining the exponentials yields 
I 
N-I 
N-I 
f(n) = - EP 
I ( I )  ~fz(k)e12"'n-')k~N 
I=,, 
k=O 

CHAP. 61 
Note that 
THE DFT 
Therefore, we have 
as was to be shown. 
6.4 
Let x,(t) be a periodic continuous-time signal 
that is sampled with a sampling frequency f, = 1 kHz. Find the DFS coefficients of the sampled signal 
Z(n) = xa(nTT). 
With a sampling frequency f, = 1 kHz, the sampling period is T, = l/f, = IW3. and the sampled signal is 
J(n) = x,(nTv) = A cos - n  + B cos 
(3 ) 
(3) 
The first term is periodic with a period N I  = 10, and the second is periodic with a period N2 = 4. Therefore, the 
sum is periodic with period N = 20, and we may write 
Expressingi(n) in terms of complex exponentials, we have 
J(n) = t e i % 2 n  + t e - i % 2 f l  + L!J%sn + t e - i % ~ n  
Using the periodicity of the complex exponentials, it follows that 
e - j $ $ 2 n  - 
- 
e j $ 1 8 n  
e - j % 5 n  
== e,%15n 
As a result, i(n) may be written as 
J ( ~ )  
= ~ ~ l g 2 f l  
+ $e~$18" 
+ 9 % 5 n  + + e j $ $ l ~ n  
which is in the form of a DFS decomposition, 
Thus, by inspection, we see that 
with the other DFS coefficients from k = 0 to k = 19 equal to zero. 
The Discrete Fourier 'Ikansform 
6.5 
Compute the N-point DFT of each of the following sequences: 
(4 xl(n) = &n) 
(b) x2(n) = S(n - no), where 0 < no i 
N 

THE DFT 
[CHAP. 6 
(c) x3(n)=crn 
O s n c N  
(d) x&) = u(n) - u(n - no), where 0 < no < N 
(a) The DFT of the unit sample may be easily evaluated from the definition of the DFT: 
Another approach, however, is to recall that the DFT corresponds to samples of the z-transform X l ( z )  at N 
equally spaced points around the unit circle. Because X I  ( z )  = I, it follows that X l ( k )  = I. 
(h) For the second sequence, we may again evaluate the DFT directly from the definition of the DFT. Let us 
instead, however, sample the z-transform. We know that X 2 ( z )  = z-"U. 
Therefore, sampling X 2 ( z )  at the points 
z =  ~ , ? o r k = O , I  ...., N-1,wefind 
( c )  For x3(n), the DFT may be found directly as follows: 
iV-I 
N-I 
(d) The DFT of the pulse. x4(n) = u ( n )  - u ( n  - no), may be evaluated directly as follows: 
Factoring out a complex exponential w?l2 
from the numerator and a complex exponential w;l2 from the 
denominator, the DFT may be written as 
6.6 
Find the 10-point inverse DFT of 
To find the inverse DFT, note that X ( k )  may be expressed as follows: 
Written in this way, the inverse DFT may be easily determined. Specifically, note that the inverse DFT of a constant 
is a unit sample: 
x l ( n )  = S(n) 4% 
x l ( k )  = 1 
Similarly. the DFT of a constant is a unit sample: 
Therefore, i t  follows that 
x(n) = + 6 ( n )  

CHAP. 61 
THE DFT 
6.7 
Find the N -point DFT of the sequence 
Compare the values of the DFT coefficients X ( k )  when wo = 2 n k o l N  to those when wo # 2 r r k o l N .  
Explain the difference. 
To find the N-point DFT of this sequence, it is easier if we write the cosine in terms of complex exponentials: 
Evaluating the DFT of each of these terms, we find 
N-I 
N - I 
rV - I 
~ ( k )  
= C x ( n ) e - i % n i  = ; 
e - ~ n ( % ~ - r n ~  + ; 
e - ~ n l i J i + u l )  
At this point, note that if 9 = 2rrko/N, 
Because the first term is a sum of a complex exponential of frequency wo = 2 z ( k  - k o ) / N ,  the sum will be equal to 
zero unless k  = ko, in which case the sum is equal to N .  Similarly, the second sum is equal to zero unless !i = N  - k,,, 
in which case the sum is equal to N .  Therefore. if on = 2 z k o / N .  the DFT coefficients are 
X ( k )  = (l k  = ko and k  == N - ko 
0  
otherwise 
In the general case, when wo # 2 n k n / N ,  we must use the geometric series to evaluate Eq. (6.18): 
Factoring out a complex exponential from the numerator and one from the denominator, we have 
Note that. unless % is an integer multiple of 2 n / N ,  X ( k )  is, in general, nonzero for each k .  The reason for this 
difference belween these two cases comes from the fact that X ( k )  corresponds to samples of the DTFT of x ( n ) ,  
which is 
When sampled at N  equally spaced points over the interval [ O , 2 n ] ,  the sample values will, in general, be nonzero. 
However, if wo = 2 z k o / N ,  all of the samples except those at k  = kc and k = N - ko occur at the zeros of the sine 
function. 
6.8 
Find the N -point DFT of the sequence 

THE DFT 
[CHAP. 6 
The DFT of this sequence may be evaluated by expanding the cosine as a sum of complex exponentials: 
= 4 + a [ e j 2 n n l N  + e - j 2 ~ n l N  ] 2  = 4 + ; 
+ $ p ~ 4 n " l N  + ,e 
I - j 4 ~ n l N  
Using the periodicity of the complex exponentials, we may write x(n) as follows: 
,r(n) = 9 + ! e j $ O n )  + ; e ~ % ( ~ - 2 h  
2  
4 
Therefore, the DFT coefficients are 
; N  
k = O  
X ( k ) =  
$ N  
k = 2 a n d k = N - 2  
10 
else 
6.9 
Suppose that we are given a program to tind the DFT of a complex-valued sequence x(n). How can this 
program be used to find the inverse DFT of X(k)? 
A program to find the DFT of a sequence x(n) evaluates the sum 
and produces the sequence of DFT coefficients X(k). What we would like to do is to use this program to find the 
inverse DFT of X(k), which is 
Note that the only difference between the forward and the inverse DFT is the factor of 1/N in the inverse DFT and 
the sign of the complex exponentials. Therefore, if we conjugate both sides of Eq. (6.20) and multiply by N ,  we have 
Comparing this to Eq. (6.19), we see that the sum on the right is the DFT of the sequence X*(k). Thus, if X*(k) 
is used as the input in the DFT program, the output will be Nx*(n). Conjugating this output and dividing by N 
produces the sequence x(n). Therefore, the procedure is as follows: 
I .  
Conjugate the DFT coefficients X(k) to produce the sequence X*(k). 
2. 
Use the program to find the DFT of the sequence X*(k). 
3. 
Conjugate the result obtained in step 2, and divide by N .  
DFT Properties 
6.10 
Consider the finite-length sequence 
x ( n )  = S(n) + 2S(n - 5 )  
(a) Find the 10-point discrete Fourier transform of x ( n ) .  
(6) Find the sequence that has a discrete Fourier transform 
Y ( k )  = e j 2 k % ~ ( k )  
where X ( k )  is the 10-point DFT of x ( n ) .  
(c) Find the 10-point sequence y ( n )  that has a discrete Fourier transform 
Y ( k )  = X ( k ) W ( k )  
where X ( k )  is the 10-point DFT of x(n), and W ( k )  is the 10-point DFT of the sequence 
1 
O s n 1 6  
w ( n )  = 0 
otherwise 

CHAP. 61 
THE DFT 
(a) The DFT of x(n) is easily seen to be 
(b) Multiplying X(k) by a complex exponential of the form w:' 
corresponds to a circular shift of x(n) by no. In 
this case, because no = -2, x(n) is circularly shifted to the left by 2, and we have 
(c) Multiplying X ( k )  by W(k) corresponds to the circular convolution of x(n) with w(n). To perform the circular 
convolution, we may find the linear convolution and alias the result. The linear convolution of x(n) with w(n) is 
and the circular convolution is 
Because z(n) and z(n + 10) are the only two sequences in the sum that have nonzero values for 0 5 n c 10, 
using a table to list the values of z(n) and z(n + lo), and summing for n = 0, 1,2, . . . ,9, we have 
Thus, the 10-point circular convolution is 
y(n)=I3.3,l,l.1,3.3,2,2,21 
6.11 
Consider the sequence 
x(n) = 4S(n) + 3S(n - 1) + 2S(n - 2 )  + 6(n - 3) 
Let X ( k )  be the six-point DFT of x(n). 
(a) Find the finite-length sequence y(n) that has a six-point IlFT 
Y ( k )  = w i k x ( k )  
(6) Find the finite-length sequence w(n) that has a six-point DFT that is equal to the real part of X(k), 
W ( k )  = Re(X(k)) 
(c) Find the finite-length sequence q ( n )  that has a three-point DFT 
Q ( k )  = X(2k) 
k = 0, 1,2 
(a) The sequence y(n) is formed by multiplying the DFT of x(n) by the complex exponential W:k. Because this 
corresponds to a circular shift of x(n) by 4, 

THE DFT 
[CHAP. 6 
The real part of X  ( k )  is 
R e { X ( k ) J  = f [ X ( k )  + X*(k)l 
To find the inverse DFT of R e { X ( k ) ) ,  we need to evaluate the inverse DFT of X*(k). Because 
N - I  
N - I  
X*(k) is the DFT of .w*((N - n ) ) N .  Therefore, the inverse DFT of R e { X ( k ) J  is 
With N  = 6, this becomes 
w ( n ) = [ 4 ,  {, I .  I .  I ,  t] 
The sequence q ( n )  is of length three with a DFT Q ( k )  = X(2k) fork = 0, 1, 2 where X ( k )  is the six-point DFT 
of x(n). Because the coefficients X ( k )  are samples of X ( z )  at six equally spaced points around the unit circle, 
X(2k) fork = 0. 1.2 corresponds to three equally spaced samples of X ( z )  around the unit circle. Therefore, 
With x ( n )  = 0 outside the interval 0 5 ti 9 3, it follows that 
and we have 
q ( n )  = 56(n) + 36(n - 1 ) + 2S(n - 2 )  
6.12 
Consider the sequence 
x ( n )  = S(n) + 26(n - 2 )  + S(n - 3 )  
(a) Find the four-point DFT of x(n). 
(b) If y ( n )  is the four-point circular convolution of x ( n )  with itself, find y ( n )  and the four-point DFT 
Y ( k ) .  
(c) With h ( n )  = S(n) + S(n - I) + 26(n - 3), find the four-point circular convolution of x ( n )  with h(n). 
(a) The four-point DFT of x ( n )  is 
3 
X ( I )  = C x ( n ) w ; ' L  I + ~ w F  + ~ , 7 "  
,,=O 
(h) With y ( n )  = x ( n )  @ x(n), it follows that Y ( k )  = x 2 ( k ) :  
Y ( k ) =  (1 + 2 ~ , 2 k + ~ ; ' ) ( l + 2 ~ J 2 k + ~ J 3 1 )  
= I + 4w,Zk + 2wy + 4w44k + 4wqS1 + wp 
the expression for Y ( k )  may be simplified to 
Therefore, 
y(n) = 56(n) + 46(n - I) + 56(n - 2 )  + 26(n - 3 )  

CHAP. 61 
THE DFT 
243 
(c) With h(n) = 6(n) + 6(n - I )  + 26(n - 3), the four-point circular convolution of x(n) with h(n) may be found 
using the tabular method. Because, the linear convolution of x(n) with h(n) is 
then 
6.13 
Let x(n) be Lhe sequence 
x ( n )  = 26(n) + S(n - 1 )  + tS(n - 3 )  
The five-point DFT of x(n) is computed and the resulting sequence is squared: 
Y ( k )  = ~ ' ( k )  
A five-point inverse DFT is then computed to produce the sequence y(n). Find the sequence y(n). 
The sequence y(n) has a five-point DFT that is equal to the product Y(k) = X(k)X(k). Therefore, y(n) is the tive- 
point circular convolution of x(n) with itself: 
A simple way to evaluate this circular convolution is to perform the h e a r  convolution yf(n) = x(n) * x(n) and alias 
the result: 
The linear convolution of x(n) with itself is easily seen to be 
Using the tabular method for computing the circular convolution, we have 
Therefore, 
y(n) = 4S(n) + 56(n - I )  + S(n - 2) + 4iS(n - 3 )  + 260) - 4) 
6.14 
Consider the two sequences 
x ( n )  = 6(n) + 36(n - 1) + 36(n - 2 )  + 26(n - 3) 
h(n) = 6(n) + S(n - 1) + S(n - 2) + S(n - 3 )  
If we form the product 
Y ( k )  = X ( k ) H ( k )  
where X ( k )  and H ( k )  are the five-point DFTs of x ( n )  and h(n), respectively, and take the inverse DFT 
to form the sequence y(n), find the sequence y(n). 

THE DFT 
[CHAP. 6 
Because Y(k) is the product of two 5-point DFTs, H(k) and X(k), y(n) is the five-point circular convolution of 
h(n) with x(n). We may find ,y(n) by performing the circular convolution analytically (or graphically) or by finding 
the linear convolution and aliasing the result or by multiplying DFTs and finding the inverse DFT. In this problem, 
because h(n) is a simple sequence, we will use the analytic approach. 
The five-point circular convolution of .r(n) with h(n) is 
Because h(n) = I for n = 0, 1. 2, 3, and h(4) = 0, the five-point convolution is 
Therefore, the circular convolution is equal to the sum of the values of the circularly shifted sequence x((n - k ) ) ~  
from k = 0 to k = 3. Because a(n) is 
(recall lhat .u(n) is considered to be a sequence of length five), .r((-n))s is formed by reading the sequence values 
backward, beginning with n = 0: 
Thus, y(0) is the sum of the first four values of ~ ( ( - n ) ) ~ ,  
which gives v ( O )  = 6. Circularly shifting this sequence to 
the right by I, we have 
and summing the first four values gives y(l) = 6. Continuing with this process, we find y(2) = 7, y(3) = 9, and 
y(4) = 8. 
6.15 
Let x(n) and h(n) be finite-length sequences that are six points long, and let X(k) and H(k) be the 
eight-point DFTs of x ( n )  and h(n), respectively. If we form the product 
and take the inverse DFT to form the sequence y(n), find the values of n for which y(n) is equal to the 
linear convolution 
If the linear convolution of two sequences is M points long, for an N-point circular convolution with N < M, the 
first M - N points will be aliased. With ~ ( n )  
and h(n) both of length six. z(n) = .r(n) * h(n) will be 1 I points long. 
Therefore, with an eight-point circular convolution. the first three points will be aliased, and the last five will be 
equal to the linear convolution. 
6.16 
If Y(k) = H(k)X(k) where H(k) and X(k) are the N-point DFTs of the finite-length sequences h(n) and 
x(n), respectively, show that 
The sequence that has an N-point DFT equal to Y(k) = H(k)X(k) is 

CHAP. 61 
THE DFT 
Because we would like to express y(n) in terms of x(n) and h(n), let us substitute 
into the expression for y(n) as follows: 
Interchanging the order of the summations gives 
However, note that the term in brackets is equal to x((n - I)),. Therefore, it follows that 
N-I 
Y 
= h 
- I 
n = 0, 1, . . . , N - I 
I=, 
which is equivalent to 
as was to be shown. 
6.17 
Let y(n) be Ihe linear convolution of the two finite-length sequences, h(n) and r(n), of length N ,  
and let yN(n) be the N-point circular convolution 
Derive the following relationship between y(n) and yN(n): 
There are several ways toderive this relationship. One is to examine what happens when the DTFT of y(n) is sampled. 
Alternatively, this result may be derived from a systems point of view as follows. First, note that yN(n) is equal to 
one period of the linear. convolution of the finite-length sequence h(n) with the periodic sequencei(n): 
If we let 
then the periodic sequence .f(n) is formed by linearly convolving x ( n )  with pN(n): 
Therefore, the N-point circular convolution may be written as 

THE DFT 
which is illustrated in the figure below. 
[CHAP. 6 
Because the first three systems are linear and shift-invariant. the order of these systems may be interchanged as 
illustrated in the following figure: 
However, note that the output of the second filter, y(n), is the linear convolution of h(n) with x(n). This sequence is 
then convolved with pN(n), which gives the periodic sequence 
This sequence is then multiplied by the rectangular window RN(n), 
which is the relationship that was to be established. 
6.18 
How may we compute the N-point DFT of two real-valued sequences, xl (n) and x2(n), using one N -point 
DFT? 
The DFTs of two real-valued sequences may be fbund from one N -point DFT as follows. First, we form the N-point 
complex sequence 
After finding the N-point DFTofx(n), we extract X ,(k) and X2(k) from X(k) by exploiting the symmetry properties 
of the DFT. Specifically, recall that the DFT of a real-valued sequence is conjugate symmetric, 
and the DFT of an imaginary sequence is conjugate antisymmetric, 
Therefore, because 
X(k) = Xl(k) + X?(k) 
with X I  (k) the DFT of a real-valued sequence, then 
which is the conjugate symmetric part of X(k). Similarly, because Xz(k) is the DFT of an imaginary sequence, 
Xz(k) = i [ ~ ( k )  
- X*((N - k ) ) ~ l  
which is the conjugate antisymmetric part of X(k). 

CHAP. 61 
THE DFT 
247 
6.19 
Let x l ( n )  and xz(n) be N-point sequences with N-point DFTs X l ( k )  and Xz(k), respectively. Find an 
expression for the N-point DFT of the product x(n) = xl(n).rz(n) in terms of X 1 ( k )  and X2(k). 
Just as we have seen with the DTFT, there is a duality in the DFT properties. We have seen, for example, that multi- 
plying a sequence by a complex exponential results in a circular shift of the DFT coefficients. Similarly, multiplying 
the DFT coefficients by a complex exponential results in a circular shift of the sequence. Therefore, because 
multiplying DFTcoefficients corresponds to a circular convolution of the sequences, we expect that the multiplication 
of two sequences would result in the circular convolution of their DFTs. To establish this property, we begin by 
noting that 
Because we would like to express X ( k )  in terms of X I ( k )  and X2(k), we substitute the following expression for xz(n) 
into Eq. (6.21): 
N - I  
The result is 
Interchanging the order of the summations, this becomes 
Recognizing that the second sum is X I  ((k - 
we have 
Therefore, X ( k )  is I /N times the circular convolution of X I  ( k )  with Xz(k): 
6.20 
If x l ( n )  and q ( n )  are N-point sequences with N-point DFTs X I  ( k )  and X?(k), respectively, show that 
This result is easy to derive if we use the properties of the DFT thar we already have. First, note that if X ( k )  is the 
N-point DFT of x ( n )  = xl(n)x;(n), then 
Second, note that the DFT of x;(n) is X;((-k)),v, 
Finally. recall that if x ( n )  = .ul(n)x;(n), the N-point DFT of x ( n )  is I/N times the circular convolution of X l ( k )  
and X ; ( ( - k ) ) , ~  (see Prob. 6.19): 

THE DFT 
[CHAP 6 
Evaluating X(k) at k = 0, we have the desired result 
6.21 
Evaluate the sum 
when 
The N -point DFT of xl (n) is zero, except fork = kl and k = N - kl. when it is equal to N/2. Similarly, the N-point 
DFT of x2(n) is zero, except fork = k2 and k = N - k2, when it is equal to N/2. Using the results of Prob. 6.20, 
we see that if kl = k2 (or k I  = N - k2), 
and the sum is equal to zero otherwise. 
6.22 
Let x(n) be an N-point sequence with an N-point DFT X(k). Derive Parseval's theorem, 
This property is an immediate consequence of the property derived in Prob. 6.20. Specifically, Parseval's theorem 
follows from Eq. (6.22) by setting xl(n) = x2(n) = x(n). 
6.23 
Let x ( n )  be a sequence that is zero outside the interval [0, N - I ]  with a z-transform X ( z ) .  Listed below 
are four sequences of length 2N that are derived from x(n). Find an expression for the DFT of each 
sequence in terms of samples of X(z). 
IX(') 
n even 
(c) y3(n) = 
l o  
n odd 
(a) The 2N-point sequence y,(n) is formed from x(n) by padding with zeros. Therefore, Yl(k) corresponds to 2N 
equally spaced samples of X(z) around the unit circle: 
(b) The sequence y2(n) is formed by adding x(n - N) to x(n) (i.e., a delayed version of x(n)). If X(z) is the 
z-transform of x(n), the z-transform of x(n - N) is z - ~  
X(Z). Therefore, 

CHAP. 61 
THE DFT 
and Y2(k) is 
(c) The third sequence is formed by up-sampling by a factor of 2 (i.e., by stretching x(n) in time by a factor of 2 
and inserting a zero between each sample). The z-transform of y3(n) is 
Therefore, the 2N-point DFT is 
Thus, the DFT coefficients Y3(k) correspond to two periods of the coefficients X(k). 
Sampling the DTFT 
6.24 
Let h ( n )  be a finite-length sequence of length N with h ( n )  = 0 for n < 0 and n > N. The discrete-time 
Fourier transform of h ( n )  is sampled at 3N equally spaced points: 
Find the sequence g ( n )  that is the inverse DFT of the 3N samples H ( k )  = H(eJwk). 
Because h(n) is a finite-length sequence of length N, it may be recovered from its N-point DFT, which corresponds 
to N equally spaced samples of H (ei"). A sequence of length N may also be considered to be a sequence of length 
3N, with the last 2N samples having a value of zero. The inverse DFT of the 3N equally spaced samples of H(eJU) 
corresponds to this 3N-point sequence. Thus, 
n = 0 ,  I . . . . , N  - 1  
g(n) = I
n
 else 
6.25 
Consider the finite-length sequence 
-4n) = [ I ,  1, 1, 1, 1, 11 
and let X ( z )  be its z-transform. If we sample X ( z )  at zk = e x p ( j % k )  fork = 0, 1,2,3, we obtain a set 
of DFT coefficients X ( k ) .  Find the sequence, y(n), that has a four-point DFT equal to these samples. 
Sampling X(z) at four equally spaced points around the unit circle produces an aliased version of x(n): 
Using the tabular method to evaluate this sum, noting that x(n) and x(n +4) are the only sequences that have nonzero 
values for 0 5 n 5 3, we have 
Therefore. 

250 
THE D m  
[CHAP. 6 
6.26 
Consider a finite-length sequence x(n) that is zero outside the interval 10. N - 11. Suppose that we form 
a new sequence i ( n )  as follows: 
where M < N. Find the M-point DFT of the sequence 
i ( n )  
O l n c M  
otherwise 
expressing the answer in terms of the DTFT of x(n). 
This problem is most easily solved if we take advantage of what we know about the DFT. Recall that the M-point 
DFT corresponds to M samples of the DTFT, X(eJU), at wi = 2nklM for k = 0, 1, . . . , M - 1. In addition, if these 
samples are used for the DFT coefficients of a sequence y(n) of length M, y(n) is related tox(n) as follows: 
which is the sequence defined above. Therefore, the M-point DFT of y(n) is 
6.27 
The unit sample response of a single pole filter is 
h(n) = ($)"u(n) 
The frequency response of this filter is sampled at wk = 2nk/16 for k = 0, 1, . . . , 15. The resulting 
samples are 
G(k) = ~ ( e j ~ ) l ~ , z , k ~ l s  k = 0, 1, 2,. . . , 15 
Find g(n), the 16-point inverse DFT of G(k). 
The straightforward but tedious way to solve this problem would be to find the DTFT of h(n), 
sample it at the given frequencies, 
and then find the inverse DFT. Another approach is to use the frequency sampling theorem given in Eq. (6.13), which 
states that if the DTFT of a sequence h(n) is sampled at N equally spaced frequencies between zero and 2rr, the 
sequence g(n) that has these samples as its DFT coefficients is the time-aliased sequence 
Therefore, with h(n) = (+)"u(n), it follows that 
Because u(n - k N )  is equal to zero for 0 5 n 5 N - 1 when k 2 0. this sum may be simplified to 

CHAP. 61 
THE DFI 
Evaluating the sum, we find 
Therefore, 
6.28 The DFT of a sequence x(n) corresponds to N equally spaced samples of its z-transform, X(z), around 
the unit circle starting at z = 1. 
(a) If we want to sample the z-transform on a circle of radius r ,  how should x ( n )  be modified so that 
the DFT will correspond to samples of X(z) at the desired radius? 
(6) Suppose that we would like to shift the samples around the unit circle. In particular, consider the 
N samples that are equally spaced around the unit circle with the first sample at z = exp{jn/N). 
How should the sequence x(n) be modified so that the DFT will correspond to samples of X(z) at 
these points? 
(a) The z-transform of x ( n )  is 
If we sample X ( z )  at N equally spaced points around a circle of radius r ,  we have 
which is the z-transform of r - " x ( n )  sampled at N equally spaced points around the unit circle. Therefore. N 
equally spaced samples of X ( z )  around a circle of radius r. may be found by computing the N-point DFT of 
r-"x(n). 
(b) Here, we want to rotate the DFT samples by an amount equal to T/N. In other words. we would like to find 
Therefore, to find N samples of X ( z )  that are equally spaced around the unit circle, with the first sample at 
z = exp{ jrr/N], we multiply x ( n )  by e-Jn"lN and find the N-point DFT of the resulting sequence. 
Linear Convolution Using the DFT 
6.29 Two finite-length sequences, xl(n) and xz(n), that are zero outside the interval [O, 991 are circularly 
convolved to form a new sequence y(n), 
where N = 100. If xl (n) is nonzero only for 10 5 n 5 39, determine the values of n for which y(n) is 
guaranteed lo be equal to the linear convolution of x l  (n) and .xz(n). 
Because 
the values of n for which y ( n )  is equal to the linear convolution of x l  ( n )  with .rz(n) are those values of n in the 
interval 10.991 for which the circular shift xl((n - k))l~lo 
is equal to the linear shift x l ( n  - k ) .  With x l ( n )  nonzero 
only over the interval [lo, 391 we see that x , ( ( n  - k))loO = x l ( n  - k )  for n in the interval [39.99]. Therefore, the 
circular convolution and the linear convolution are equal for 39 5 n 6 99. 

252 
THE DFT 
[CHAP. 6 
6.30 
We would like to linearly convolve a 3000-point sequence with a linear shift-invariant filter whose unit 
sample response is 60 points long. To utilize the computational efficiency of the fast Fourier transform 
algorithm, the filter is to be implemented using 128-point discrete Fourier transforms and inverse discrete 
Fourier transforms. If the overlap-add method is used, how many DFTs are needed to complete the 
filtering operation? 
With overlap-add, x(n) is partitioned into nonoverlapping sequences of length M. If h(n) is of length L, x,(n) * h(n) 
is of length L + M - 1. Therefore, we must use a DFT of length N > L + M - 1. Here, we have set N = 128, and 
h(n) is of length L = 60. Therefore, x(n) must be partitioned into sequences of length 
Because x(n) is 3000 points long, we will have 44 sequences (with the last sequence containing only 33 nonzero 
values). Thus, to perform the convolution we need: 
1. 
One DFT to compute H (k) 
2. 
44 DFTs for X,(k) 
3. 
44 inverse DFTs for Y,(k) = H(k)Xi(k) 
for a total of 45 DFTs and 44 inverse DFTs. 
6.31 
Suppose that we are given 10 s of speech that has been sampled at a rate of 8 kHz and that we would 
like to filter it with an FIR filter h(n) of length L = 64. Using the overlap-save method with 1024-point 
DFTs, how many DFTs and inverse DFTs are necessary to perform the convolution? 
Sampling LO s of speech with a sampling frequency of 8 kHz generates N = 10 .8OOO = 8 .  lo4 samples x(n). If we 
segment the speech into records of length 1024 and perform the circular convolution of these segments with h(n), 
the first 63 values will be aliased, and the last 1024 - 63 = 961 values will be equivalent to the linear convolution. 
Therefore, each circular convolution generates 961 valid data points. Because the filtered signal y(n) = x(n) * h(n) 
is of length 8 . lo4 + 63 = 80,063, x(n) will be segmented into 
or 84 overlapping sections. Therefore, to perform the convolution, we need 85 DFTs and 84 inverse DFTs. 
6.32 
If an 8-point sequence x(n) is convolved (linearly) with a 3-point sequence h(n), the result is a 10-point 
sequence y(n) = x(n) r h(n). Suppose that we would like to construct the entire output y(n) from two 
6-point circular convolutions: 
where 
( ; ( n )  
n = 0 ,  1.2.3 
xl ( n )  = 
n = 4 , 5  
If the values of yl(n) and y2(n) are as tabulated below, 
find the sequence y(n). 

CHAP. 61 
THE DFT 
253 
In this problem, note that x ( n )  has been partitioned into two 4-point sequences, x l ( n )  and x2(n). Because h ( n )  is 
of length three, the linear convolution of h ( n )  with x l ( n )  and x2(n) are both of length six. Therefore, the six-point 
circular convolutions are equal to the linear convolution, and y(n) = x ( n )  * h ( n )  is given by 
which is tabulated below. 
Applications 
6.33 
Consider a linear shift-invariant system characterized by the linear constant coefficient difference equation 
Describe a method that may be used to plot N samples of the frequency response H(eJw) 
using N-point 
DFTs. 
The unit sample response of the linear shift-invariant system that is described by this difference equation is infinite 
in duration. Finding N samples of the frequency response can be accomplished by computing the N-point DFT of 
the time-aliased signal 
However, an easier method is as follows. The system function is 
k= l 
Therefore, samples of H ( z )  at N equally spaced points around the unit circle may be found as follows: 
B(k) 
H ( k )  = - 
A @ )  
where A(k) and B ( k )  are the N-point DFTs of the denominator and numerator sequences, respectively, that is, 
6.34 
In many applications, it is necessary to multiply a sequence by a window w ( n ) .  Let x ( n )  be an N-point 
sequence, and let w(n) be a Hamming window: 
How would you find the DFT of the windowed sequence, x ( n ) w ( n ) ,  from the DFT of the unwindowed 
sequence? 

THE DIT 
[CHAP. 6 
Let us express the Hamming window in terms of complex exponentials: 
Therefore, 
x(n)w(n) = ix(n) - ,e 
I 
j$,t x(n) - :eplgnx(n) 
Because the DFT of e ~ ~ ~ " l ~ x ( n )  
is X((k - 
and the DFT of e-j""lNx(n) is X((k + l ) ) ~ ,  
6.35 
A signal x,(t) that is bandlimited to 10 kHz is sampled with a sampling frequency of 20 kHz. The DFT 
of N = 1000 samples of x(n) is then computed, that is. 
with N = 1000. 
(a) To what analog frequency does the index k = 150 correspond? What about k = 800? 
(b) What is the spacing between the spectral samples? 
(a) With a sampling frequency R, = 2n/T, = 2rr(20 . I@), the discrete frequency w is related to the analog fre- 
quency R by 
w = QT, 
With an N-point DFT, the DTFT is sampled at the N frequencies 
2rr 
wa=-k 
k = 0 , 1 ,  .... N - 1  
N 
Therefore, X(k) corresponds to an analog frequency of 
Thus, with N = 1000, the index k = 150 corresponds to f = 3 kHz. 
For k = 800, we need to be careful. Because X(eJ1*) is periodic, 
k = 800 corresponds to the frequency 
with N = 1000, this is wk = -0.41~. In analog frequency, this corresponds to 

CHAP. 61 
THE DFT 
(b) The spacing between spectral samples is 
6.36 
An important operation in digital signal processing is correlation. Correlations are used in applications 
such as target detection and frequency (spectrum) estimation. The correlation of two signals, xl(n) and 
x2(n), is defined by 
m 
r,,.,,(m) = 
x~(n).r;(m +n) 
which is the convolution of xl(m) with .r;(-m), 
Given two finite-length sequences xl (n) and r2(n) of length M ,  the N-point circular correlation is 
where i ,(n) and i;(n) are the periodic extensions of the finite-length sequences 2 (n) and xT(n), respec- 
tively. What is the DFT of the circular correlation r:l,,,(m)? 
The circular correlation of xl(n) and x;(n) is one period of the periodic convolution of i l ( n )  with I;(-n). 
This, in 
turn, is equal to one period of the periodic convolution of i l ( n )  with P*(N - n), which is the same as the circular 
convolution of x l ( n )  with x,*(N - n): 
Consequently, the DFT of ~-:~,,,(rn) is equal to the producl of the DFTs of xl(m) and x;(N - m): 
R:l ,,(k) = DFT[xl(m)l DFT [X;(N - m)] 
Because the DFT of x;(N - rn) is 
then 
r.:1,,2(m) 
x,(k)XX~:k) 
6.37 
Consider the two sequences 
Find the N -point circular convolution of X I  (n) with xz(n). 
Find the N-point circular correlation of x ~ ( n )  
with itself (this is referred to as the autocorrelation). 
Find the N-point circular correlation of xl (n) with x2(n). 
We may perform the circular convolution of xl(n) with xz(n) in any one of several different ways. However, 
because there are only two coefficients in the DFT of xl(n) and xz(n) that are nonzero, the easiest approach is 
to find the inverse DFT of the product Xl(k)X2(k). With 

THE DFT 
the N-voint DFTs are 
[CHAP. 6 
k =  I a n d k = N - 1  
x I ( k )  = 
0 
else 
Therefore, 
and the inverse DFT is a sinusoid with an amplitude of N/2: 
x ( n )  = x l ( n )  o x2(n) = N sin (2Y) 
- 
(b) For the DFT of the circular autocorrelation of x l  (n), we have 
10 
else 
and it follows that 
r, (n) = N cos ( $ ) 
(c) Finally, for the DFT of the circular correlation of xl(n) with x2(n), we have 
I
0
 
else 
Therefore, 
r.r,x2(n) = -iN sin - 
( 2 ; )  
6.38 
It is known that y(n) is the output of a stable LSI system that has a system function 
H(z) = 
B 
1 - c u r '  
The input x(n) is completely unknown, and we would like to recover x(n) from y(n). The following 
procedure is proposed for recovering part of x(n) from y(n). 
1 .  
Using N values of y(n) for 0 5 n < N ,  calculate the N -point DFT 
2. 
Form the sequence 
1 
V ( k )  = -[I - U W ~ ] Y ( ~ )  
B 

CHAP. 61 
THE DF'T 
3. 
Invert V (k) to obtain v(n) 
u(n) = IDFT(V(k)J 
For what values of n in the range n = 0, 1, . . . , N - 1 is it true that x(n) = u(n)? 
To recover x(n), ideally we would take y(n) and convolve it with the inverse system 
Therefore, x(n) may be recovered exactly by convolving y(n) with the FIR filter 
which is of length L = 2. Therefore, because multiplying the DFT of g(n) with the DFT of y(n) is equivalent to 
performing the circular convolution, 
v(n) = ~ ( n )  
O y(n) 
v(n) will be equal to x(n) only for I 5 n 5 N - 1. 
6.39 
The N-point circular convolution of two sequences x(n) and h(n) of length N may be written in matrix 
form as follows: 
y = H x  
where H is an N x N circulantmatrix, and xand y are vectors that contain the signal valuesx(O), x(l), . . . , 
x(N - I) and y(O), y(l), . . . . y(N - l), respectively. Determine the form of the matrix H. 
The circular convolution of x(n) with h(n) is 
For example, ,y(O) is the sum of the products of x(k) with the circularly time-reversed sequence h((-k))N: 
Next, for y(l), we circularly shift h((-k))N to the right by 1 and multiply by the sequence values x(k): 
This process continues until we get to the last value, y(N - I), which is 
If we arrange these equations in matrix form, we have 
Note that the second row of H is formed by circularly shifting the first row to the right by 1. This shift corresponds 
to a circular shift of the sequence h(n). Similarly, the third row is formed by shifting the second row by I. and so 
on. Due to this circular property, H is said to be a circulant matrix. 

THE DFT 
[CHAP. 6 
Supplementary Problems 
Discrete Fourier Series 
6.40 
Find the DFS coefficients for the sequence 
6.41 
Find the DFS coefficients for the sequence of period N = 8 whose first four values are equal to 1 and the last four 
are equal to 0. 
6.42 
If T(n) is a periodic sequence with a period N, 
I(n) is also periodic with period 3N. Let f ( k )  denote the DFS coefficient o f i ( n )  when considered to be periodic 
with a period N ,  and let R3(k) be the DFS coefficients of i ( n )  when considered to be periodic with a period 3N. 
Express the DFS coefficients X,(k) in terms of x(k). 
6.43 
If the DFS coefficients of a periodic sequenceI(n) are real, g(k) = x*(k), what does this imply about f(n)? 
The Discrete Fourier Transform 
6.44 
Find the 10-point DFT of each of the following sequences: 
(a) x(n) = S(n) + 6(n - 5) 
(b) x(n) = u(n) - u(n - 6) 
6.45 
Find the 10-point DFT of the sequence 
6.46 
Find the 10-point inverse DFT of 
3 
k = O  
I 
else 
6.47 
Find the N-point DFT of the sequence 
where N is an even number. 
6.48 
Find the 16-point inverse DFT of 
DFT Properties 
6.49 
If x(n) is a finite-length sequence of length four with a four-point DFT X(k), find the four-point DFT of each of the 
following sequences in terms of X(k): 
(a) x(n) + S(n) 

CHAP. 61 
THE DFT 
If X(k) is the 10-point DFT of the sequence 
x(n) = 6(n - I) + 26(n - 4) - 6(n - 7) 
what sequence, y(n), has a 10-point DFT 
Y (k) = 2X(k) cos (7) 
If the 10-point DFTs of x(n) = S(n) - S(n - 1) and h(n) = u(n) - u(n - 10) are X(k) and H(k), respectively, find 
the sequence w(n) that corresponds to the 10-point inverse DFT of the product H(k)X(k). 
Let x(n) be a sequence that is zero outside the interval [O, N - 11 with a z-transform X(z). If 
y(n) = x(n) + x(N - n) 
find the 2N-point DFT of y(n), and express it in terms of X(z). 
If x(n) is real and x(n) = x(N - n), what can you say about the N-point DFT of x(n)? 
If x(n) = 6(n) + 2S(n - 2) - S(n - 5) has a 10-point DFT X(k), find the inverse DFT of (a) Re[X(k)] and 
(4 Im[X(k)l. 
If x(n) has an N -point DFT X(k), find the N-point DFT of y(n) = cos(2nn/N)x(n). 
Find the inverse DFT of Y (k) = IX(k)12 where X(k) is the 10-point DFT of the sequence x(n) = u(n) - u(n - 6). 
If X(k) is the N-point DFT of x(n), what is the N-point DFT of the sequence y(n) = X(n)? 
Evaluate the sum 
when 
Sampling the DTFT 
6.59 
The z-transform of the sequence 
x(n) = u(n) - u(n - 7) 
is sampled at five points around the unit circle, 
X(k) = x(z)I z=e,,,,,, 
k = 0, 1 ,  2, 3,4 
Find the inverse DFT of X(k). 
Linear Convolution Using the DFT 
6.60 
How many DFTs and inverse DFTs of length N = 128 are necessary to linearly convolve a sequence x(n) of length 
1000 with a sequence h(n) of length 64 using the overlap-add method? Repeat for the overlap-save method. 
6.61 
A sequence x(n) of length NI = 100 is circularly convolved with a sequence h(n) of length N2 = 64 using DFTs of 
length N = 128. For what values of n will the circular convolution be equal to the linear convolution? 

260 
THE DFT 
[CHAP. 6 
Applications 
6.62 
A continuous-time signal x,(r) is sampled with a sampling frequency o f  ly = 2 kHz. I f  a 1000-point DFT of 1000 
samples is computed, what is the spacing between the frequency samples X(k) in terms of the analog frequency? 
6.63 
Given X(k), the N-point DFT of x(n), how would you compute the N-point DFT o f  the windowed sequence 
y(n) = w(n)x(n) where w(n) is a Blackman window, 
2nn 
4nn . 
w(n) = 0.42 - 0.5 cos- 
f 0 . 0 8 ~ 0 ~ -  
O s n ( N - l  
N - l  
N - I '  
Answers to Supplementary Problems 
%(I) = 5 - 5 j and f ( 9 )  = 5 + 5 j ,  with X(k) = 0 fork = 0 and k = 2,. . . ,8. 
f ( 0 )  = 4, f ( k )  = 2/(1 - e-j"'I4) fork = 1. 3,5,7, and f ( k )  = 0 fork = 2,4.6. 
10 
else 
I ( n )  is conjugate symmetric, l ( n )  = 2*(N - n). 
,%, 
I - e 
10 
(a) X(k) = 1 + e-Ink. (b) X(k) = 
,kk 
' 
1 - c ~ - .  
I 0  
X ( l ) = X ( 7 ) =  $ andX(3)= X(9)= -2 
21 ' 
x(n) = S(n) + i + cos(3nn/5). 
X(k) = ~ 6 ( k  
- f). 
x(n) = ;[S(n - 3) + S(n - 13)] + 51-S(n - 5) + S(n - 1 I ) ] .  
(a) I + X(k). (h)WjkX((4 - k))4. (I.) Re[X(k)]. 
y(n) = -S(n) + 26(n - I) + 2S(n - 7 )  + 6(n - 8). 
w(n) = 0. 
x ( ~ J " ~ / N )  
+ (- 1)' X ( C  ~r(2N-k)lN 1- 
X(k) = X(N - k). 
(a) x(n) = S(n) + S(n - 2) - S(n - 5 )  + 6(n - 8). (h) x(n) = 6(n - 2) - S(n - 8). 
Y ( k ) =  $ [ ~ ( ( k -  
I)), 
+ X ( ( k +  l ) ) N ] f ~ ~ O ~  
k 5 N - 1. 
y ( n ) = [ 6 , 5 , 4 . 3 ,  2 , 2 , 2 , 3 , 4 ,  51. 
Nx((N - n ) ) ~ .  

CHAP. 61 
THE DFT 
6.58 
3. 
6.59 
[2, I ,  1, 1, 11. 
6.60 
17 DFTs and 1 6  IDFTs for overlap-add and the same for overlap save. 
6.61 
35 5 n 5 127. 
6.62 
A f = 2 kHz. 
6.63 
Y(k) = 0.42X(k) - 0.25[X((k - 1 ) ) ~  + X((k + I ) ) N ]  + 0.04[X((k -- 2 ) ) ~  + X((k + 2)),v]. 

Chapter 7 
The Fast Fourier Transform 
7.1 INTRODUCTION 
In Chap. 6 we saw that the discrete Fourier transform (DFT) could be used to perform convolutions. In this 
chapter we look at the computational requirements of the DFT and derive some fast algorithms for computing 
the DFT. These algorithms are known, generically, asfast Fourier fransforms (FFTs). We begin with the radix-2 
decimation-in-time FFT, an algorithm published in 1965 by Cooley and Tukey. We then look at mixed-radix 
FFT algorithms and the prime factor FFT. 
7.2 RADIX-2 FFT ALGORITHMS 
The N -point DFT of an N -point sequence s(n) is 
Because x(n) may be either real or complex, evaluating X(k) requires on the order of N complex multiplications 
and N complex additions for each value of k. Therefore, because there are N values of X(k), computing an 
N-point DFT requires N* complex multiplications and additions. 
The basic strategy that is used in the FFT algorithm is one of "divide and conquer." which involves de- 
composing an N-point DFT into successively smaller DFTs. To see how this works, suppose that the length of 
x(n) is even (i.e., N is divisible by 2). If x(n) is decin~ared into two sequences of length N/2, computing the 
N/2-point DFT of each of these sequences requires approximately (N 12)' multiplications and the same number 
of additions. Thus, the two DFTs require 2 ( ~ / 2 ) '  = { N' multiplies and adds. Therefore, if it is possible to find 
the N-point DFT of s(n) from these two N/2-point DFTS in fewer than N2/2 operations, a savings has been 
realized. 
7.2.1 Decimation-in-Time FFT 
The decimation-in-time FFT algorithm is based on splitting (decimating) x(n) into smaller sequences and finding 
X ( k )  from the DFTs of these decimated sequences. This section describes how this decimation leads to an efficient 
algorithm when the sequence length is a power of 2. 
Let x(n) be a sequence of length N = 2", and suppose that x(n) is split (decimated) into two subsequences, 
each of length N/2. As illustrated in Fig. 7-1, the first sequence, ~ ( I z ) ,  
is formed from the even-index terms, 
and the second, h(n), is formed from the odd-index terms, 
h(n) = x(2n + 1) 
n = 0, I .  .. ., - 
N
I
 
- 
2 
In terms of these sequences, the N -point DFT of x(n) is 
tr=O 
n even 
11 odd 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
Because wiik = wik ,,, Eq. (7.2) may be written as 
Note that the first term is the N/2-point DFT of g(n), and the second is the N 12-point DFT of h(n): 
Although the N/2-point DFTs of g(n) and h(n) are sequences of length NL2, the periodicity of the complex 
exponentials allows us to write 
Therefore, X ( k )  may be computed from the N/2-point DFTs G ( k )  and H(k). Note that because 
and it is only necessary to form the products W; H ( k )  for k  = 0. 1, . . . , N/2 - 1. The complex exponentials 
multiplying H ( k )  in Eq. (7.3) are called twiddle factors. A block diagram showing the computations that are 
necessary for the first stage of an eight-point decimation-in-time FFT is shown in Fig. 7-2. 
If N/2 is even, g(n) and h(n) may again be decimated. For example, G ( k )  may be evaluated as follows: 
II=O 
II even 
n odd 

THE FAST FOURIER TRANSFORM 
[CHAP. 7 
4 2 )  
4 4 )  
46) 
4 1 )  
4 3 )  0 
4-Point 
DFT 
4 5 )  0 
: 
~ ( 7 )  
0 
. 
" 
H(3) 
w,7 
Fig. 7-2. An eight-point decimation-in-time FFT algorithm after the first decimation. 
As before, this leads to 
where the first term is the N /4-point DFT of the even samples of ~ ( n ) ,  
and the second is the N/4-point DFT of 
the odd samples. A block diagram illustrating this decomposition is shown in Fig. 7-3. If N is a power of 2, the 
decimation may be continued until there are only two-point DFTs of the form shown in Fig. 7-4. 
Fig. 7-3. Decimation of the four-point DFT into two two-point 
DFTs in the decimation-in-time FFT. 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
265 
The basic computational unit of the FFT, shown in Fig. 7-5(a), is called a hurterjy. This structure may be 
simplified by factoring out a term W h  from the lower branch as illustrated in Fig. 7-5(h). The factor that remains 
is w:'~ = - 1. A complete eight-point radix-2 decimation-in-time FFT is shown in Fig. 7-6. 
(4 
(b) 
Fig. 7-5. (a) The butterfly, which is the basic computational clement of the FFT algorith-; 
(b) A simplitied butterfly. with only one complex multiplication. 
- 1 
-1 
- 1 
Fig. 7-6. A complete eight-point radix-:! decrmation-in-lime FFT. 
Computing an N-point DFT using a radix-2 decimation-in-time FFT is much more efficient than calculating 
the DFT directly. For example, if N = 2", there are log, N = v stages of computation. Because each stage requires 
N/2 complex multiplies by the twiddle factors W h  and N complex additions. there are a total of 4 N logz N 
complex multiplications' and N log2 N complex additions. 
From the structure of the decimation-in-time FFT algorithm, note that once a butterfly operation has been 
performed on a pair of complex numbers, there is no need to save the input pair. Therefore, the output pair 
may be stored in the same registers as the input. Thus, only one array of size N is required, and it is said 
that the computations may be performed in place. To perform the computations in place, however, the input 
sequence x(n) must be stored (or accessed) in nonsequential order as seen in Fig. 7-6. The shufling of the input 
sequence that takes place is due to the successive decimations of .u(n). The ordering that results corresponds to a 
bit-reversed indexing of the original sequence. In other words, if the index n is written in binary form, the order 
in which in the input sequence must be accessed is found by reading the binary representation for n in reverse 
order as illustrated ill the table below for N = 8: 
 h he number of multiplications is actually a bit less than this because some of the twiddle factors are equal to I .  

THE FAST FOURIER TRANSFORM 
[CHAP. 7 
Binary 
Bit-Reversed 
Binary 
Alternate forms of FFT algorithms may be derived from the' decimation-in-time FFT by manipulating the 
flowgraph and rearranging the order in which the results of each stage of the computation are stored. For example, 
the nodes of the flowgraph may be rearranged so that the input sequence x(n) is in normal order. What is lost 
with this reordering, however, is the ability to perform the computations in place. 
7.2.2 Decimation-in-Frequency FFT 
Another class of FFT algorithms may be derived by decimating the output sequence X(k) into smaller and smaller 
subsequences. These algorithms are called decimation-in-frequency FFTs and may be derived as follows. Let 
N be a power of 2, N = 2". and consider separately evaluating the even-index and odd-index samples of X(k). 
The even samples are 
N - l  
X(2k) = 
x ( n ) ~ : ~  
n=O 
Separating this sum into the first N/2 points and the last N/2 points, and using the fact that w $ ~  
= wnk 
.I,? this 
becomes 
With a change in the indexing on the second sum we have 
(n+: 
)k 
Finally, because WNI2 
= ~ $ 5 ,  
which is the N /2-point DFT of the sequence that is formed by adding the first N/2 points of x(n) to the last N 12. 
Proceeding in the same way for the odd samples of X(k) leads to 
A flowgraph illustrating this first stage of decimation is shown in Fig. 7-7. As with the decimation-in-time FFT, 
the decimation may be continued until only two-point DFTs remain. A complete eight-point decimation-in- 
frequency FFT is shown in Fig. 7-8. The complexity of the decimation-in-frequency FFT is the same as the 
decimation-in-time, and the computations may be performed in place. Finally, note that although the input 
sequence x(n) is in normal order, the frequency samples X(k) are in bit-reversed order. 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
Fig. 7-7. An eight-point decimation-in-frequency FFT algorithm af- 
ter the first stage of' decimation. 
- 1 
- 1 
Fig. 7-8. Eight-point radix-2 decimation-in-frequency FFT. 
7.3 FFT ALGORITHMS FOR COMPOSITE N 
It is not always possible to work with sequences whose length is a power of 2. However, efficient computation 
of the DFT is still possible if the sequence length may be written as a product of factors. For example, suppose 
that N may be factored as follows: 
N = N , . N 2  
We then decompose x ( n )  into N2 sequences of length N I  and arrange these sequences in an array as follows: 

268 
THE FAST FOURIER TRANSFORM 
[CHAP. 7 
EXAMPLE 7.3.1 For a sequence of length N = 15. with N I  = 3 and N2 = 5, the sequence x(n) may be decimated into 
five sequences of length three, and these sequences may then be arranged in a two-dimensional array as follows: 
Alternatively, if we let N I  = 5 and N2 = 3, ~ ( n )  
may be decimated into three sequences of length five and arranged in a 
two-dimensional array of three rows and five columns, 
By defining index maps for n and k as follows, 
the N -point DFT may be expressed as 
Note that the inner summation, 
is the NI -point DFT of the sequence x(N2n I + n2), which is row n2 of the two-dimensional array in Eq. (7.5). 
Computing the N I -point DFT of each row of the array produces another array, 
consisting of the complex numbers G(n2, k~ ). Note that because the data in row n2 is not needed after the NI-point 
DFT of x(N2n I + n2) is computed, G(n2, kl ) may be stored in the same row (i.e., the computations may be 
performed in place). 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
The next step in the evaluation of X ( k )  in Eq. (7.7) is to multiply by the twiddle factors w,$"*: 
The final step is to compute the N2-point DFT of the columns of the array ?;(n2, k l ) :  
The DFT coefficients are then read out row-wise from the two-dimensional array: 
A pictorial representation of this decomposition is shown in Fig. 7-9 for N = 15. 
Fig. 7-9. Computation of a 15-point DFT with N I  = 3 and N2 = 5 using 3-point and 5-point DFTs. 
EXAMPLE 7.3.2 
Suppose that we want to compute the 12-point DFT of x(n). With N I  = 3 and N2 = 4, the first step is 
to form a two-dimensional array consisting of N I  = 3 columns and N2 = 4 rows, 
and compute the DFT of each row, 
For example, the DFT of the first row is 

270 
THE FAST FOURIER TRANSFORM 
The next step is to multiply each term by the appropriate twiddle factor. The array of factors is 
I 
[; ;I $1 
w;: w:, 
This produces the array C(n2, k , ) :  
[CHAP. 7 
The final step is to compute the DFT of each column: 
This results in the Howgraph shown in Fig. 7-10. Note that because N 2  can be factored, NZ = 2 x 2, the four-point DFTs 
of the columns of G(nz, 
k , )  may be evaluated using two-point DFTs. For example, if the first column is arranged in a 
two-dimensional array, 
after taking the two-point DFTs of the rows, the terms are multiplied by the twiddle factors 
and then the two-point DFTs of the columns are computed. 
Up to this point, we have only assumed that N could be factored as N = N I  . NZ It is possible, however, that 
either or both of these factors could be factored further. What is important for the FFT algorithm to be efficient 
is that N be a highly composite number: 
In this case, it is possible to define multidimensional index maps for ti and k as follows, 
and the development of the FFT algorithm proceeds as described above. If N = R", the corresponding FFT 
algorithm is called a Radix-R algorithm. If the factors are not equal, the FFT is called a mixed-radix algorithm. 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
Fig. 7-10. 
FFT algorithm for N = 12. 
7.4 
PRIME FACTOR FFT 
For some values of N ,  with the appropriate index mapping, it is possible to completely eliminate the twiddle 
factors. These mapping have the form 
where A, B, C, and D are integers, and ((.))N denotes the evaluation of Ihe index modulo N. If N = NI . N?. 
and if NI and N2 are relativelyprime (i.e., they have no common factors), the twiddle factors may be eliminated 
with the appropriate values for A, B , C, and D. The requirements on these numbers are as follows: 
I. All numbers between 0 and N - I for n and k must appear uniquely as n I and !I2 are varied and as kl 
and k2 are varied. 
2. The numbers A, B ,  C, and D are such that 
(Anl + R n r ) t C k ~ f  Dk2) - W;:kl 
WnzP 
WN 
- 
,v 2 
The second condition requires that 
Finding a set of numbers that satisfies these two conditions falls in the domain of number- theory, which will not 
be considered here. However, one set of numbers that satisfies these conditions is 
where ((N;'))~~ denotes the multiplicative inverse of NI modulo N2. For example, if N = 12 with NI = 3 
and Nz = 4, ( ( 4 ~ ' ) ) ~  
= I because ((4 . 
= 1 and ((3-1))4 = 3 because ((3 . 3))3 = I .  

272 
THE FAST FOURIER TRANSFORM 
[CHAP. 7 
EXAMPLE 7.4.1 
A 12-point prime factor algorithm with N I  = 3 and N2 = 4 is as follows. With A = Nz = 4 and 
B = N I  = 3, and with C = N ~ ( ( N ~ ' ) ) N ,  
= 4 and U = N I ( ( ~ ; l ) ) N z  
= 9. Thus, the index mappings for n and k are 
and the two-dimensional array representation for the input is 
The representation for X ( k )  is therefore 
Thus, the DFT is evaluated by lint computing the three-point DFT of each row of the input array, followed by the four-point 
DFT of each column. The following figure shows how the four-point DFTs are interconnected to the three-point DFTs. 
Because a 4-point DFT does not require any multiplications (see Prob. 7.1 1 ), and because each 3-point DFT requires only 4 
complex multiplications, the 12-point prime factor algorithm requires 16 complex multiplies. For a mixed-radix FFT, there 
are, in addition, six twiddle factors. The cost for eliminating these six multiplications is an increase in complexity in indexing 
and in programming. 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
Solved Problems 
Radix-2 FFT Algorithms 
7.1 
Assume that a complex multiply takes 1 p s  and that the amount of time to compute a DFT is determined 
by the amount of time it takes to perform all of the multiplications. 
(a) How much time does it take to compute a 1024-point DFT directly? 
(b) How much time is required if an FFT is used? 
(c) Repeat parts (a) and (b) for a 4096-point DFT. 
(a) Including possible multiplications by f 
I, computing an N-point DFT directly requires N' complex multipli- 
cations. If it takes I ps per complex multiply, the direct evaluation of a 1024-point DFT requires 
(b) With a radix-2 FFT, the number of complex multiplications is approximately (N/2) log, N which, for N = 1024, 
is equal to 5 120. Therefore, the amount of time to compute a 1024-point DFT using an FFT is 
(c) If the length of the DFT is increased by a factor of 4 to N = 4096, the number of multiplications necessary 
to compute the DFT directly increases by a factor of 16. Therefore, the time required to evaluate the DFT 
directly is 
1 ~ ~ 7 .  
= 16.78 S 
If, on the other hand, an FFT is used, the number of multiplications is 
2,048 . log, 4,096 = 24,576 
and the amount of time to evaluate the DFT is 
7.2 
A complex-valued sequence x(n) of length N = 8 192 is to be convolved with a complex-valued sequence 
h(n) of length L = 5 12. 
(a) Find the number of (complex) multiplications required to perform this convolution directly. 
(6) Repeat part (a) using the overlap-add method with 1024-point radix-2 decimation-in-time FFTs to 
evaluate the convolutions. 
(a) If .r(n) is of length N = 8192, and h(n) of length L = 512, performing the convolution directly requires 
complex multiplications. 
(b) Using the method of overlap-add with 1024-point FFTs. the number of multiplications is as follows. Because 
h(n) is of length 512, we may segment x(n) into sequences .r,(n) of length N = 512 so that the 1024-point 
circular convolutions of h(n) with x,(n) will be the same as linear convolutions (although we could use sections 
of length 5 13, this does not result in any computational savings). With the length of x(n) being equal to 8 192, this 
means that we will have 16 sequences of length 512. Therefore, to perform the convolution, we must compute 
17 DFTs and 16 inverse DFTs. In addition, we must form the products Y,(k) = H (k)X,(k) for i = 1, 2, . . . . 16. 
Thus, the total number of complex multiplicalions is approximately 
which is about 4.5 percent of the number of complex multiplies necessary to perform the convolution directly. 

274 
THE FAST FOURIER TRANSFORM 
[CHAP. 7 
7.3 
Speech that is sampled at a rate of I0 kHz is to be processed in real time. Part of the computations 
required involve collecting blocks of 1024 speech values md computing a 1024-point DFT and a 1024- 
point inverse DFT. If it takes Ips for each real multiply. how much time remains for processing the data 
after the DFT and the inverse DFT are computed? 
With a 10-kHz sampling rate, a block of 1024 samples is collected every 102.4 ms. With a radix-2 FFT, the number 
of complex multiplications for a 1024-point DFT is approximately 5 12 log, 1024 = 5120. With a complex multiply 
consisting of four real multiphes. this means that we have to perform 5.120. 4 = 20,480 real multiplies for the DFT 
and the same number for the inverse DFT. With 1 ps per multiply, this will take 
which leaves 61.44 ms for any additional processing. 
7.4 
Sampling a continuous-time signal xl,(t) for I s generates a sequence of 4096 samples. 
(a) What is the highest frequency in .rl,(t) if it was sampled without aliasing? 
(b) If a 4096-point DFT of the sampled signal is computed, what is the frequency spacing in hertz 
between the DFT coefficients'? 
(c) Suppose that we are only interested in the DFT samples that correspond to frequencies in the range 
200 5 f 5 300 Hz. How many complex multiplies are required to evaluate these values computing 
the DFT directly, and how many are required if a decimation-in-time FFT is used? 
(d) How many frequency samples would be needed in order for the FFT algorithm to be more efficient 
than evaluating the DFT directly? 
(a) Collecting 4096 samples in I s means that Ihe sampling frequency is ,ti = 4096 Hz. If .r,(~) is to be sampled 
without aliasing, the sampling frequency must be a1 least twice the highest frequency in .r,(1). Therefore, l a ( / )  
should have no frequencies above fi, = 2048 Hz. 
(h) With a 4096-point DFT. we are sampling X(el") at 4096 equally spaced frequencies between 0 and 2 ~ r ,  
which 
corresponds to 4096 frequency samples over the range 0 5 ,f 5 4096 Hz. Therefore, the frequency spacing is 
Af = IHz. 
(c) Over the frequency range from 200 to 300 Hz we have 101 DFT samples. Because it takes 4096 complex 
multiplies to evaluate each DFT coefficient, the number of multiplies necessary toevaluate only these frequency 
samples is 
On the other hand, the number of multiplications required if an FFT is used is 
Therefore, even though the FFT generates all of the frequency samples in the range 0 5 ,f 5 4096 Hz, it is 
more efficient than evaluating these 101 samples directly. 
(d) An N-point FFT requires N log, N complex multiplies. and to evaluate M DFT coefficients directly requires 
M . N complex multiplica;ions. Therefore, the FFT will be more efticient in finding these M samples if 
With N = 4096, the number of frequency samples is M = 6. 
7.5 
Because some of the f N log, N multiplications in the decimation-in-time and decimation-in-frequency 
FFT algorithms are multiplications by f 
I .  it is possible to more efticiently implement these algorithms 
by writing programs that specitically excluded these multiplications. 
(a) How many multiplications are there in an eight-point decimation-m-time FFT if we exclude the 
multiplications by f 
I ?  

CHAP. 71 
THE FAST FOURIER TRANSFORM 
(b) Repeat part (a) for a 16-point decimation-in-time FFT. 
(c) Generalize the results in parts (a) and (b) for N = 2". 
(a) For an eight-point decimation-in-time FFT, we may count the number of complex multiplications in the flow- 
graph given in Fig. 7-6. In the first stage of the FFT, there are no complex multiplications, whereas in the second 
stage, there are two multiplications by W:. Finally, in the third stage there are three multiplications by Wx, w;, 
and W:. Thus, there are a total of five complex multiplies. 
(b) A 16-point DFT is formed from two &point DFTs as follows: 
where G(k) and H(k) are eight-point DFTs. There are eight butterflies in the last stage that produces X ( k )  
from G(k) and H(k). Because the simplified butterfly in Fig. 7-5(b) only requires only one complex multiply, 
and noting that one of these is by WP, = 1, we have a total of seven twiddle factors. In addition, we have 
two 8-point FFTs, which require five complex multiplies each. Therefore. the total number of multiplies IS 
2 - 5 + 7 =  17. 
(c) Let L(v) be the number of complex multiplies required for a radix-2 FFT when N = 2". From parts (a) and (h) 
we see that L(3) = 5 and L(4) = 17. Given that an FFT of length N = 2"-' requires L(v - I) mul~iplies. for 
an FFT of length N = 2", we have an additional 2"-I butterflies. Because each butterfly requires one multiply. 
and because one of these multiplies is by W: = 1, the number of multiplies required for an FFT of length 
2" is 
Solving this recursion for L(v), we have the following closed-form expression for L(v): 
7.6 
The FFT requires the multiplication of complex numbers: 
(a) Write out this complex multiplication, and determine how many real multiplies and real adds are 
required. 
(b) Show that the complex multiplication may also be performed as follows: 
and determine the number of real multiplies and adds required with this method. 
(a) The product of two complex number is 
which requires four real multiplies and three real adds. 
(h) Expanding the expressions for q. we have 
as required. Similarly, for dl we have 
also as required. This approach only requires three multiplies and four adds. 

276 
THE FAST FOURIER TRANSFORM 
[CHAP. 7 
7.7 
The decimation-in-time and decimation-in-frequency FFT algorithms evaluate the DFT of a complex- 
valued sequence. Show how an N-point FFT program may be used to evaluate the N-point DFT of two 
real-valued sequences. 
As we saw in Prob. 6.18. the DFTs of two real-valued sequences may be found from one N-point DFT as follows. 
First, we form the N-point complex sequence 
After finding the N-point DFT of .r(n). we extract X I ( k )  and X z ( k )  from X ( k )  by exploiting the symmetry of the 
DFT. Specifically. 
which is the conjugate symmetric part of X ( k ) .  and 
X?(k) = t l X ( k )  - X * ( ( N  - k ) ) ~ ]  
which is the conjugate antisymmetric part of X ( k ) .  
7.8 
Determine how a 2N-point DFT of a real-valued sequence may be computed using an N-point FFT 
algorithm. 
Let g ( n )  be a real-valued sequence of length 2N. From this sequence. we may form two real-valued sequences of 
length N as follows: 
From these two sequences, we form the complex sequence 
Computing the N-point DFT of .r(n). we niay then extract the N-point DFTs of x , ( n )  and x2(n) as follows 
(see Prob. 7 . 7 ) :  
x ~ ( k )  
= i [ ~ ( k )  
+ X * ( ( N  - k ) ) ~ ]  
x ~ k )  
= ; [ x ( k )  - x * ( ( N  - k))N I 
Now all that is left to do is to relate the 2N-point DFT of g(n) to the N-point DFTs X l ( k )  and X,(k). Note that 
Therefore, 
G ( k )  = X l ( k ) +  w ; , ~ z ( k )  
k  =0, 1 ,  .... 2N - 1 
where the periodicity of X l ( k )  and X 2 ( k )  is used to evaluate G ( k )  for N < k  < 2N, that is, 
X l ( k )  = X l ( k  + N )  
X z ( k )  = X 2 ( k  + N) 
7.9 
Given an FFT program to find the N-point DFT of a sequence, how may this program be used to find 
the inverse DFT? 
As we saw in Prob. 6.9, we may tind .r(n) by first using the DFT program to evaluate the sum 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
which is the DFT of X*(k). Then, x(n) may be found from x(n) as follows: 
Alternatively, we may find the DFT of X(k), 
and then extract x(n) as follows: 
7.10 
Let x(n) be a sequence of length N with 
where N is an even integer. 
(a) Show that the N-point DFT of x(n) has only odd harmonics. that is. 
X ( k )  = 0 
k even 
(b) Show how to find the N-point DFT of x(n) by finding the N/2-point DFT of an appropriately 
modified sequence. 
(a) The N-point DFT of x(n) is 
Because x(n) = -x(n + N/2), if k is even, each term in the sum is zero, and X(k) = 0 fork = 0,2,4, . . .. 
(b) In the first stage of a decimation-in-frequency FFT algorithm, we separately evaluate the even-index and odd- 
index san~ples of X(k). If X(k) has only odd harmonics, the even samples are zero, and we need only evaluate 
the odd samples. From Eq. (7.4) we see that the odd samples are given by 
With x(n) = -x(n + N/2) this becomes 
which is the N/2-point DFT of the sequence y(n) = 2WE;x(n). Therefore, to find the N-point DFT of x(n), 
we multiply the first N/2 points of x(n) by 2W;. 
and then compute the N/2-point DFT of y(nh The N/2-point DFT of x(n) is then given by 

THE FAST FOURIER TRANSFORM 
[CHAP. 7 
FFT Algorithms for Composite N 
7.11 
When the number of points in the DFT is a power of 4, we can use a radix-2 FFT algorithm. However, 
when N = 4", it is more efficient to use a radix-4 FFT algorithm. 
(a) Derive the radix4 decimation-in-time FFT algorithm when N = 4". 
(b) Draw the structure for the butterfly in the radix-4 FFT, and compare the number of complex multiplies 
and adds with a radix-4 FFT to a radix-2 FFT. 
(a) To derive a decimation-in-time radix-4 FFT. let NI = N/4 and N2 = 4. and define the index maps 
We then express X ( k )  using the decomposition given in Eq. (7.7) with NI = N/4 and N2 = 4, 
The inner summation. 
is the N/4-point DFT of the sequence x(4nI + n2), and the outer summation is a 4-point DFT, 
Since W4 = - j, these 4-point transforms have the form 
for kl = 0. 1 ,  2.3, and n2 = 0, I ,  . . . . (N/4) - 1. If N2 = N/4 is divisible by 4, then the process is repeated. 
In this way, we generate v = Iog, N stages with N/4 butterflies in each stage. 
(b) The 4-point butterflies in the radix-4 FFT perform operations of the form 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
With 
Since multiplications by i 
j only requires interchanging real and imaginary parts and possibly changing a sign 
bit, then each 4-point butterfly only requires 3 complex multiplications. With v = log, N stages, and N/4 
butterflies per stage, the number of complex multiplies for a DFT of length N = 4" is 
N 
3 N 
3 . - log, N = - 
log, N 
4 
8 
For a radix-:! decimation-in-time FFT, on the other hand, the number of multiplications is 
N - log, N 
2 
Therefore, the number of multiplications in a radix-4 FFT is & times the number in a radix-2 FFT. 
7.12 
Suppose that we would like to find the N-point DFT of a sequence where N is a power of 3, N = 3". 
(a) Develop a radix-3 decimation-in-time FFT algorithm, and draw the corresponding flowgraph for 
N =9. 
(h) How many multiplications are required for a radix-3 FFT? 
(c) Can the computations be performed in place? 
(a) A radix-3 decimation-in-time FFT may be derived in exactly the same way as a radix-2 FFT. First, x ( n )  is 
decimated by a factor of 3 to form three sequences of length Nj3: 

THE FAST FOURIER TRANSFORM 
[CHAP. 7 
Expressing the N-point DFT in terms of these sequences, we have 
Since w$' = W k 3 ,  then 
Note that the first term is the N/3-point DFT off (n), the second is W i  times the N/3-point DFT of g(n), and 
the third is w;' times the N 13-point DFT of h(n), 
We may continue decimating by factors of 3 until we are left with only 3-point DFTs. The flowgraph for a 
9-point decimation-in-time FFT is shown in Fig. 7- 1 I .  Only one of the 3-point butterflies is shown in the second 
stage in order to allow for the labeling of the branches. The complete flowgraph is formed by replicating this 
3-point butterfly up by one node, and down by one node, and changing the branch multiplies to their appropriate 
values. 
4 7 )  
4 5 )  
0 X(8) 
WJ" 
Fig. 7-11. Flowgraph for a9-point decimation-in-time FFT (only one butterfly in the second 
stage is shown). 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
28 1 
(b) If N = 3". then there are v stages in the radix-3 FFT. The general form of each 3-point butterfly, shown in the 
second stage of the flowgraph in Fig. 7-1 1, requires six multiplies (some require fewer if we do not consider 
multiplications by f 
I). Since there are N/3 butterflies in each stage, then the total number of multiplications is 
6N log, N 
(c) Yes, the computations may be performed in place. 
7.13 
Derive a radix-3 decimation-in-frequency FFT for N = 3" a.nd draw the corresponding flowgraph for 
N =9. 
As with the radix-2 decimation-in-frequency FFT, with N =3", we separately evaluate the indices for which 
((k))3 = 0, ((k))3 = I ,  and ((k))3 = 2. For ((k))3 = 0 (i.e., k is a multiple of 3), 
Separating this sum into the first N/3 points, the second N/3 points, and the last N/3 points, and using the fact that 
.,, , this becomes 
WZk = wnk 
With a change in the indexing in the second and third sums, we have 
"+ $ 
n+ y 
Finally, because WNi, = W:/,, 
and WN13 = Wi13, 
which is the N/3-point DFT of the sequence in brackets. 
Proceeding in the same way for the samples X(3k + I), we have 
Finally, for the samples X(3k + 2) we have 

THE FAST FOURIER TRANSFORM 
[CHAP. 7 
The flowgraph for a nine-point decimation-in-frequency FFT is shown below. 
7.14 
Suppose that we have a number of eight-poin~ decimation-in-time FFT chips. How could these chips be 
used to compute a 24-point DFT? 
A 24-point DFT is defined by 
Decimating x(n) by a factor of 3, we may decompose this DFT into three %point DFTs as follows: 
Therefore, if we form the three sequences 
and use the 8-point FFT chips to find the DFTs F(k), G(k), and H(k), the 24-point DFT of x(n) may be found by 
combining the outputs of the 8-point FFTs as follows: 
Prime Factor FFT 
7.15 Find the index maps for a 21 -point prime factor FFT with N I  = 7 and N2 = 3. HOW many multiplications 
are required compared to a 32-point radix-2 decimation-in-time FFT? 

CHAP. 71 
THE FAST FOURIER TRANSFORM 
283 
For a 21-point prime factor FFT with NI = 7 and N 2  = 3, we sel A = N2 = 3 and B = NI = 7. Then, with 
C = N~((N;' ))N, = 15 and D = N ~ ( (  
N 
= 7, we have the following index mappings: 
Thus, the two-dimensional array representation for the input is 
x(7) 
~ ( 1 0 )  ~ ( 1 3 )  ~ ( 1 6 )  ~ ( 1 9 )  .x(l) 
2 
x(14) 
~ ( 1 7 )  ~ ( 2 0 )  s(2) 
s(5) 
~ ( 8 )  .u(l I )  
and the two-dimensional array for the output is 
With the prime factor FFT, there are no twiddle factors. Therefore, the only multiplications necessary are those 
required to compute the three 7-point DFTs, and the seven 3-point DFTs. Because each 3-point DFT requires 6 com- 
plex multiplies, and each 7-point DFT requires 42, the number of multiplies for a 2 1-point prime factor FFT is 
(7)(6) + (3)(42) = 168. For a 32-point radix-2 FFT. on the other hand. we require 
complex multiplies. Therefore. it would be more efficient to pad a 21-point sequence with zeros and compute a 32- 
point DFT. The increasedefficiency is a result of the fact that 32 = 2' is a much more composite number than 2 1 = 7.3. 
7.16 
Suppose that we would like to compute a 15-point DFT of a sequence x(n). 
(a) Using a mixed-radix FFT with N I  = 5 and N2 = 3, the DFT is decomposed into two stages, with 
the first consisting of three 5-point DFTs, and the second stage consisting of five 3-point DFTs. 
Make a sketch of the connections between the five- and three-point DFTs, indicating any possible 
twiddle factors, and the order of the inputs and outputs. 
(b) Repeat part (a) for the prime factor algorithm with NI == 5 and N 2  = 3, and determine how many 
complex multiplies are saved with the prime factor algorithm. 
(a) Using a mixed-radix FFT with NI = 5 and N2 = 3, the index mappings for n and k are as follows: 
Thus, the two-dimensional array representation for the input is 

THE FAST FOURIER TRANSFORM 
[CHPLP. 7 
After the five-point DFT of each row in the data array is computed. the resulting complex array is multiplied 
by the array of twiddle factors: 
The last step then involves computing the three-point DFT of each column. This produces the output array 
X ( k ) ,  which is 
The connections between the three- and five-point DFTs are shown in the following figure, along with the eight 
twiddle factors: 
(h) Using the prime factor algorithm with N I  = 5 and N2 = 3, we set A = N2 = 3 and B = N ,  = 5. Then, with 
C = N ~ ( ( N , ' ) ) N ,  = 6 and D = N ~ ( ( N ; ' ) ) ~ ,  
= 10, we have the following index mappings for n and k :  

CHAP. 71 
THE FAST FOURIER TRANSFORM 
The two-dimensional array representation for the input is 
and for the output array we have 
1 
2 
3 
4 
The interconnections between the five- and three-point DFTs are the same as in the mixed-radix algorithm. 
However, there are no twiddle factors, and the ordering of the input and output arrays is different. The 15-point 
prime fuctor algorithm is diagrammed in the figure below. 
The savings with the prime factor algorithm over the mixed-radix FFT are the eight complex multiplies by the 
twiddle factors. 
Supplementary Problems 
Radix-2 FFT Algorithms 
7.17 
Let x(n) be a sequence of length 1024 that is to be convolved with a sequence h(n) of length L. For what values of 
L is it more efficient to perform the convolution directly than it is to perform the convolution by taking the inverse 
DFT of the product X (k)H ( k )  and evaluating the DFTs using a radix-2 FFT algorithm? 

286 
THE FAST FOURIER TRANSFORM 
[CHAP. 7 
7.18 
Suppose that we have a 1025-point data sequence (1 more than N = 2"). Instead of discarding the final value, we 
zero pad the sequence to make it of length N = 2" so that we can use a radix-2 FFT algorithm. (a) How many 
multiplications and additions are required to compute the DFT using a radix-2 FFT algorithm? (b) How many 
multiplications and additions would be required to compute a 1025-point DFT directly? 
FFT Algorithms for Composite N 
7.19 
In a radix-3 decimation-in-time FFT, how is the input sequence indexed? 
7.20 
How many complex multiplications are necessary in a radix-3 decimation-in-frequency FFT? 
7-21 
Consider the FFT algorithm given in Example 7.3.2. (a) How many multiplications and additions are required to 
compute a 12-point DFT? (h) How many multiplications and additions are necessary if the 12-point DFT is computed 
directly? 
Prime Factor FFT 
7.22 
Find the index maps for a 99-point prime factor FFT with N I  = I I and N2 = 9. 
7.23 
How many complex multiplications are required for a 12-point prime factor FFT with N, = 4 and N3 = 3 if we do 
not count multiplications by + I  and + j? 
7.24 
How many twiddle factors are there in a 99-point prime factor FFT with N  I = I 1 and N2 = 9? 
7.25 
How many complex multiplications are required for a 15-point prime factor FFT if we do not count multiplications 
by & I ?  
Answers to Supplementary Problems 
7.18 
(a) 1 1.264. (b) 1,050,625. 
7.19 
The index for x(n) is expressed in ternary form, and then the ternary digits are read in reverse order. 
7.20 
The same as a decimation-in-time FFT, which is 2N log, N. 
7.21 
(a) Each 4-point DFT requires no multiplies and 12 adds, and each 3-point DFT requires 6 multiplies and 6 adds. With 
6 twiddle factors, there are 6 + (4)(6) = 30 multiplies and (4)(6) + (3)(12) = 60 adds. (b) 144 multiplies and 132 adds. 
7.22 
n = 9nI + 1 In2, and k = 45kl + %k2. 
7.23 
24. 
7.24 
None. 
7.25 
90. 

Chapter 8 
Implementation of Discrete-Time Systems 
8.1 INTRODUCTION 
Given a linear shift-invariant system with a rational system function H(z), the input and output are related by a 
linear constant coefficient difference equation. For example, with a system function 
the input x(n) and output y(n) are related by the linear constant coefficient difference equation 
This difference equation defines a sequence of operations that are to be performed in order to implement this 
system. However, note that this system may also be implemented with the following pair of coupled difference 
equations: 
With this implementation, it is only necessary to provide one memory location to store w(n - I), whereas 
Eq. (8.1) requires two memory locations, one to store y(n - I) and one to store x(n - 1). This simple example 
illustrates that there is more than one way to implement a system and that the amount of computation and/or 
memory required will depend on the implementation. In addition, the implementation may affect the sensitivity 
of the filter to coefficient quantization. and the amount of round-off noise that appears at the output of the 
filter. 
In this chapter, we look at a number of different ways to implement a linear shift-invariant discrete-time 
system and look at the effect of finite word lengths on these implementations. 
8.2 DIGITAL NETWORKS 
For a linear shift-invariant system with a rational system function, the input x(n) and the output y(n) are related 
by a linear constant coefficient difference equation: 
The basic computalional elements required to find the output at time n are adders, multipliers, and delays. It is 
often convenient to use a block diagram to illustrate how these adders.. multipliers, and delays are interconnected 
to implement a given system. The notation that is used for these elements is shown in Fig. 8-1. A network is 
also often represented pictorially using a signalflowgraph, which is a network of directed branches that are 
connected at nodes. Each branch has an input and an output, with the direction indicated by an arrowhead. The 
nodes in a flowgraph correspond to either adders or branch points. Adders correspond to nodes with more 
than one incoming branch, and branch points are nodes with more lhan one outgoing branch, as illustrated in 
Fig. 8-2. With a linear flowgraph, the output of each branch is a linear transformation of the branch input, and the 
linear operator is indicated next to the arrow. For linear shift-invariant discrete-time filters, these linear operators 
consist of multiplies and delays. Finally, there are two special types of nodes: 

288 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
1. Source nodes. These are nodes that have no incoming branches and are used for sequences that are 
input to the filter. 
2. Sink nodes. These are nodes that have only entering branches and are used to represent output sequences. 
( a )  Adder. 
x ( n )  
a 
a  x ( n )  
x ( n  - I )  
x ( n ;  r-q ; 
- 
(b) Multiplier. 
(c) A unit delay. 
Fig. 8-1. Notation used for an adder, multiplier, and delay in a 
digital network. 
Fig. 8-2. Signal flowgraph con- 
sisting of nodes, branches, and 
node variables. Node j repre- 
sents an adder, and node k is a 
branch point. 
EXAMPLE 8.2.1 Consider the first-order discrete-time system described by the difference equation 
Shown in the figure below is a block diagram for this system. 
Using a signal flowgraph, this system is represented as follows: 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
8.3 STRUCTURES FOR FIR SYSTEMS 
A causal FIR filter has a system function that is a polynomial in zp': 
H (z) = 
h(n)zpn 
n=O 
For an input x(n), the output is 
N 
For each value of n, evaluating this sum requires (N + I) multiplications and N additions. The following 
subsections describe several different realizations of this system. 
8.3.1 Direct Form 
The most common way to implement an FIR filter is in direct form using a tapped delay line as shown in the 
figure below. 
z-' 
z-I 
h ( N  - I )  
y(n) 
This structure requires N + I multiplications, N additions, and N delays. However, if there are some symmetries 
in the unit sample response, it may be possible to reduce the number of multiplications (see the section on linear 
phase filters). 
8.3.2 Cascade Form 
For a causal FIR filter, the system function may be factored into a product of first-order factors, 
where ak for k = 1, . . . , N are the zeros of H (z). If h(n) is real, the complex roots of H(z) occur in complex 
conjugate pairs, and these conjugate pairs may be combined to form second-order factors with real coefficients, 
Written in this form, H (z) may be implemented as a cascade of second-order FIR filters as illustrated in Fig. 8-3. 
8.3.3 Linear Phase Filters 
Linear phase filters have a unit sample response that is either symmetric, 

290 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP 8 
Fig. 8-3. An FIR tilter implemented as a cascade of second-order systems. 
or antisymmetric (see Sec. 5.3). 
h(n) = -h(N - n) 
This symmetry may be exploited to simplify the network structure. For example, if N is even and h(n) is 
symmetric (type 1 filter), 
Therefore, forming the sums [x(n - k) + x(n - N + k)] prior to multiplying by h(k) reduces the number of 
multiplications. The resulting structure is shown in Fig. 8-4(a). If N is odd and h(n) is symmetric (type I1 filter), 
the structure is as shown in Fig. 8-4(h). There are similar structures for the antisymmetric (types 111 and IV) 
linear phase filters. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
29 1 
8.3.4 Frequency Sampling 
The frequency sampling structure is an implementation that parameterizes a filter in terms of its DFT coefficients. 
Specifically, let H ( k )  be the N-point DFT of an FIR filter with h(n) .= 0 for n < 0 and n 2 N.' Because the 
unit sample response of the filter is 
1 N-I 
h(n) = - x 
~ ( k )  
u
J
~
~
~
~
/
~
 
k=O 
the system function may be written as 
N-l 
N-I 
N - 1  
H ( z )  = x 
h(n)z-" = x [i 
x 
~
(
k
)
~
j
~
~
~
~
/
~
 
z-fl 
n =O 
n=O 
k =O 
I 
Evaluating the sum over n, this becomes 
which corresponds to a cascade of an FIR filter k(1 - z - ~ )  
with a parallel network of one-pole filters: 
For a narrowband filter that has most of its DFT coefficients equal to zero, the frequency sampling structure 
will be an efficient implementation. The frequency sampling structure is shown in Fig. 8-5. If h(n) is real, 
H ( k )  = H*(N - k), and the structure may be simplified. For example, if N is even, 
where 
A(k) = H ( k )  + H(N - k )  
B(k) = ~ ( k )  
e-j2nk/N + H ( N  - k )  eJZnklN 
A similar simplification results when N is odd. 
8.4 STRUCTURES FOR IIR SYSTEMS 
The input x(n) and output y(n) of a causal IIR filter with a rational system function 
'Note that here we are assuming that h(n) is of length N, instead of N + I as in the previous sections. This is consistent with the convention 
that the frequency sampling filter is based on an N-point DFT of h(n). 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Fig. 8-5. Frequency sampling filter structure. 
is described by the linear constant coefficient difference equation 
In the following sections, several different implementations of this system are presented, including the direct 
form structures, the cascade and parallel forms, and the transposed filter structures. 
8.4.1 Direct Form 
There are two direct form filter structures, referred to as direct form I and direct form 11. The direct form I 
structure is an implementation that results when Eq. (8.3) is written as a pair of difference equations as follows: 
The first equation corresponds to an FIR filter with input x ( n )  and output w(n), and the second equation 
corresponds to an all-pole filter with input w ( n )  and output y(n). Therefore, this pair of equations represents a 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
cascade of two systems, 
as illustrated in Fig. 8-6. The computational requirements for a direct form I structure are as follows: 
Number of multiplications: p + q + 1 per output sample 
Number of additions: p + q per output sample 
Number of delays: p + q 
Fig. 8-6. Direct form I realization of an IIR filter. 
The directform IJ structure is obtained by reversing the order of the cascade of B(z) and 1 /A(z) as illustrated 
in Fig. 8-7. With this implementation, x(n) is first filtered with the all-pole filter l/A(z) and then with B(z): 
Fig. 8-7. Reversing the order of the cascade in the direct form I filter structure. 

294 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
If we denote the output of the all-pole filter 1 /A(z) by w(n), this structure is described by the following pair of 
coupled difference equations: 
This structure may be simplified by noting that the two sets of delays are delaying the same sequence. Therefore, 
they may be combined as illustrated in Fig. 8-8 for the case in which p = q. The computational requirements 
for a direct form I1 structure are as follows: 
Number of multiplications: p + q + I per output sample 
Number of additions: p + q per output sample 
Number of delays: max(p. q )  
The direct form I1 structure is said to be canonic because it uses the minimum number of delays for a given H(z). 
Fig. 8-8. Direct form 11 realization of an IIR filter with p = q. 
8.4.2 Cascade Structure 
The cascade structure is derived by factoring the numerator and denominator polynomials of H(z): 
This factorization corresponds to a cascade of first-order filters, each having one pole and one zero. In general. 
the coefficients nk and Bk will be complex. However, if h(n) is real. the roots of H(z) will occur in complex 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
295 
conjugate pairs, and these complex conjugate factors may be combined to form second-order factors with real 
coefficients: 
A sixth-order 1IR filter implemented as a cascade of three second-order systems in direct form I1 is shown in 
Fig. 8-9. 
Fig. 8-9. A sixth-order 11R filter implemented as a cascade of three direct form 11 second-order systems. 
There is considerable flexibility in how a system may be implemented in cascade form. For example, there 
are different pairings of the poles and zeros and different ways in which the sections may be ordered. 
8.4.3 Parallel Structure 
An alternative to factoring H ( z )  is to expand the system function using a partial fraction expansion. For example, 
with 
if p > q and ai # crk (the roots of the denominator polynomial are distinct), H ( z )  may be expanded as a sum 
of p first-order factors as follows: 
where the coefficients At and a k  are, in general, complex. This expansion corresponds to a sum of p first-order 
system functions and may be realized by connecting these systems in parallel. If h(n) is real, the poles of H(z) 
will occur in complex conjugate pairs, and these complex roots in the partial fraction expansion may be combined 
to form second-order systems with real coefficients: 
Shown in Fig. 8-1 0 is a sixth-order filter implemented as a parallel connection of three second-order direct form I1 
systems. If p 5 q, the partial fraction expansion will also contain a term of the form 
which is an FIR filter that is placed in parallel with the other terms in the expansion of H(z). 

IMPLEMENTATION OF DISCRETE-TlME SYSTEMS 
[CHAP. 8 
Fig. 8-10. A sixth-order IIR filter implemented as a parallel con- 
nection of three second-order direct form 11 structures. 
8.4.4 Transposed Slruclures 
The transposition theorem states that the input-output properties of' a network remain unchanged after the 
following sequence of network operations: 
1. Reverse the direction of all branches. 
2. Change branch points into summing nodes and summing nodes into branch points. 
3. Interchange the input and output. 
Applying these manipulations to a network results in what is referred to as the transposed form. Shown in 
Fig. 8-1 1 are second-order transposed direct form I and direct form I1 filter structures. 
8.4.5 Allpass Filters 
An allpass filter has a frequency response with a constant magnitude: 
IH,,(&")J=~ 
allw 
If the system function of an allpass filter is a rational function of z, it has the form 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
VJ) 
Fig. 8-11. Transposed direct form ti lter structures. [u) Transposed direct 
form I. (b) Transposed direct form 11. 
If h(n) is real-valued, the complex roots occur in conjugate pairs, and these pairs may be combined to form 
second-order factors with real coefficients: 
A direct form I1 implementation for one of these sections is shown in Fig. 8- 12. Because each section only has 
two distinct coefficients, ak and Bk, it is possible to implement these sections using as few as two multiplies. 
Fig. 8-12. 
A second-order section of an allpass ti lter imple 
mented in direct form 11. 

298 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.5 LATTICE FILTERS 
Lattice filters have a number of interesting and important properties that make them popular in a number of 
different applications. These properties include modularity, low sensitivity to parameter quantization effects, 
and a simple criterion for ensuring filter stability. In the following sections, we present the lattice filter structure 
for FIR ti lters, all-pole filters, and filters that have both poles and zeros. 
8.5.1 FIR Lattice Filters 
An FIR lattice filter is a cascade of two-port networks as shown in Fig. 8-13. Each two-port network is defined 
by the value of its reflection coeficient, rk. The two inputs, fk-, (n) and gk-~(n), are related to the outputs fk(n) 
and gk(n) by a pair of coupled difference equations 
with the input to the first section being fo(n) = go@) = x(n). 
(h) 
Fig. 8-13. A pth-order FIR lattice filter. (a) The two-port network for each lattice filter module. (b) A cascade 
of p lattice filter modules. 
With Ak(z) the system function relating the input x(n) to the intermediate output fk(n), 
these difference equations may be solved by induction to yield the following recurrence formula for Ak(z): 
which is called the step-up recucrion. The recursion is initialized by setting Ao(z) = 1. This recurrence formula 
also defines a recurrence relation for the coefficients ak(i) of Ak(z), which is 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
A simple way to write this recursion is in terms of vectors as follows: 
EXAMPLE 8.5.1 
For a second-order FIR lattice tiller with reflection coefficient< r I = t and r2 = i, the system function 
relating x(n) to fl (n) is 
A'(:) = An(:) + r l ; ' ~ , , ( :  
I )  = 1 + i- 
2 - ' 
and the second-order system function relating .r(~r) to fz(n) is 
The recurrence formula in Eq. (8.5) provides an algorithm to find the system function A,(z) from the 
reflection coefficients rk, k = 1,2. . . . . p. To find the reflection coefficients rr for a given system function 
A ,(z), we use the stepdown recu~siotz, which is given by 
In terms of the coefficients ak(i), this recursion is 
The reflection coefficients are then found from the polynomials Ak(z) by setting TL = uk(k). 
EXAMPLE 8.5.2 
To find the reflection coefticients TI and 1': 
corresponding to the second-order FIR filter Az(z) = 
1 - f z - 2  , we begin by setting 
Tz = n2(2) = -: 
Next, we find A 1 ( z )  us~ng the step-down recursion. 
Because cl,(l) = 0. rl = 0. Therefore, the reflection coefficients are 
= 0 and I-2 = -l 2 ' 
So far, we have only considered the system function relating the input .u(n) to the output f,,(n). A similar 
set of equations relate the input x(n) to the output R,,(II) With 
the relationship between the system function Ap(z) and A',,(z) is as follows: 

300 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Thus, f,(n) and gp(n) are related by an allpass filter, F,(z) = Hu,f(z)G,(z), where 
An important property of the lattice filter is that the roots of A,(z) will lie inside the unit circle if and only 
if the reflection coefficients are bounded by I in magnitude: 
This property is the basis for the Schur-Cohn stability test for digital filters. Specifically, a causal filter with a 
system function 
will be stable if and only if the reflection coefficients associated with A(z) are bounded by 1 in magnitude. 
8.5.2 All-Pole Lattice Filters 
The structure for an all-pole lattice filter is shown in Fig. 8-14. As with the FIR lattice, a pth-order all-pole 
filter is a cascade of p stages, with each stage being a two-port network that is parameterized by its reflection 
coefficient rk. The two inputs, fk(n) and gk-1 (n), are related to the two outputs f L F I  ( n )  and gk(n) by a pair of 
coupled difference equations: 
fk-l(n) = fh(n) - r k ~ k - l ( n  - 1) 
gk(n) = ~ k - l ( n  - 1 )  + rkfk(n) 
The system function relating the input x(n) to the output y(n) is 
where A,(z) is the polynomial that is generated by the recursion given in Eq. (8.5). In addition, note that the 
system function relating x(n) to w(n) is an allpass filter with a system function Hap(z) given in Eq. (8.7). 
Fig. 8-14. A pth-order all-pole lattice filter. (a) The two-port network for the kth stage of the all-pole lattice 
filter. (b) Cascade of p lattice stages. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
8.5.3 IZR Lattice Filters 
If H ( z )  is an IIR filter with p poles and q zeros, 
with q 5 p, a lattice filter implementation of H(z) consists of two components. The first is an all-pole lattice 
with reflection coefficients rl, rz, 
. . . , F, that implements I/Ap(z). The second is a tapped delay line with 
coefficients cq(k). The structure is illustrated in Fig. 8-15 for the case in which p = 4. The relationship between 
the lattice filter coefficients cq(k) and the direct form coefficients bq(k) is given by 
Similarly, a recursion that generates the coefficients cq(k) from the coefficients hq(k) is 
This recursion is initialized with cq(q) = bq(9). 
EXAMPLE 8.5.3 
A third-order low-pass elliptic filter with a cutoff frequency of w,. = 0 . 5 ~  
has a system function 
To implement this filter using a lattice filter structure, we first transform the denominator coefficients into reflection coeffi- 
cients. Using the step-down recursion, we find 
with the second-order system function given by 
and the first-order system function 

302 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Next, the coefficients q ( k )  are found using the recursion given in Eq. (8.9). Beginning with 
we then have 
This leads to the lattice filter implementation illustrated below. 
s ( n )  
8.6 FINITE WORD-LENGTH EFFECTS 
In implementing a discrete-time system in hardware or software, it is important to consider the finite word-length 
effects. For example, if a tilter is Lo be implemented on a tixed-point processor, the filter coefficients must be 
quantized lo a finite number of bits. This will change the frequency response characteristics of the filter. In this 
section, we look at the finite precision effects in digital tilter implementations. 
8.6.1 Binary Representation of Numbers 
There are two basic systems for representing numbers in a digital system: fixed point and floating point. There 
is a trade-off in which type of representation to use. The dynamic range that is available in a floating-point 
representation IS much larger than with fixed-point numbers. However, fixed-point processors are typically faster 
and less expensive. Below, we briefly describe these number representations. 
Fixed Point 
In the binary representation of a real number, x, using B + I bits, there are three commonly used formats: sign 
magnitude, one's complement. and two's complement, with two's complement being the most common. In these 
systems, the only difference is in the way that negative numbers are represented. 
I .  Sign magnitude: With a sign-magni~ude format, a number x is represented as 
where X,, is an arbitrary scale factor and where each of the bits hi are either 0 or 1. Thus, ho is the sign 
bit, and the remaining bits represent the magnitude of the fractional number. Bit hl is called the most 
sign$canr bit (MSB). 
and hB is called the leusr significant bit (LSB). For example, with X, = 1, 
and 
- ,y = -0.8125 = 1.1 1010 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
303 
2. 
One's complement: In one's complement form, a negative number is represented by complementing 
all of the bits in the binary representation of the positive number. For example, with X,, = I and 
x = 0.8125 = 0.1 1010, 
-X = -0.8125 = 0.11010 = 1.00101 
3. Two's conzplement: With a two's complement format, a real number x is represented as 
Thus, negatlve numbers are formed by complementing the bits of the positive number and adding I to the 
least significant bit. For example, with X ,  = I, the two's complement representation of .r = -0.8125 
is 
x = -0.8125 =0.I1010+0.00001 = 1.00110 
Note that with B + I bits, the smallest difference between two quantized numbers, the resolution, is 
and all quantized numbers lie on the range -X,, 5 x < X,, 
Floating Point 
For a word length of B + I bits in a fixed-point number system, the resolution is constant over the entire range of 
numbers, and the resolution decreases ( A  increases) in direct proportion to the dynamic range, 2X,,. A floating- 
point number system covers a larger range of numbers at the expense of an overall decrease in resolution, with 
the resolution varying over the entire range of numbers. The representation used for floating-point numbers is 
typically of the form 
x = M , 2 E  
where M, the mantissa, is a signed BM-bit fractional binary number with 
5 I M I < I .  and E ,  the exponent, is 
a BE-bit signed integer. Because M is a signed fraction, it may be represented using any of the representations 
described above for fixed-point numbers. 
Quantization Errors in Fixed-Point Number Systems 
In performing computations within a fixed- or floating-point digital processor, it is necessary to quantize numbers 
by either truncation or rounding from some level of precision to a lower level. For example, because multiplying 
two 16-bit fixed-point numbers will produce a product with up to 3 1 bits of precision, the product will generally 
need to be quantized back to 16 bits. Truncation and rounding introduce a quantization error 
where x is the number to be quantized and Q[.Y] is the quantized number. The characteristics of the error depend 
upon the number representation that is used. Truncating numbers that are represented in sign-magnitude form 
result in a quantization error that is negative for positive numbers and positive for negative numbers. Thus, the 
quantization error is symmetric about zero and falls in the range 
where 
A = ~ , , 2 - ~  
On the other hand, for a two's complement representation, the truncation error is always negative and falls in the 
range 
- A ( e ( O  

304 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
With rounding, the quantization error is independent of the type of fixed-point representation and falls in the 
range 
For floating-point numbers. the mantissa is either rounded or truncated, and the size of the error depends on the 
value of the exponent. 
8.6.2 Quantization of Filter Coefficients 
In order to implement a filter on a digital processor. the filter coefficients must be converted into binary form. 
This conversion leads to movements in the pole and zero locations and a change in the frequency response of 
the filter. The accuracy with which the filter coefficients can be specified depends upon the word length of the 
processor, and the sensitivity of the filter to coefficient quantization depends on the structure of the filter, as well 
as on the locations of the poles and zeros. 
For a second-order section with poles at z = r e f J e ,  
the filter coefficients in a direct form realization are 
If a(1) and a(2) are quantized to B + 1 bits, the real part of the pole location is restricted to 2B+' possible values, 
and the radius squared is restricted to 2B values. The set of allowable pole locations for a bbit processor is 
shown in Fig. 8- 16. 
Fig. 8-16. The set of allowable pole locations in the first quadrant 
of the z-plane for a second-order 11R filter implemented in direct 
form using a 4-bit processor. 
A general sensitivity analysis of a pth-order polynomial 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
305 
shows that the root locations are more sensitive to coefficient quantization errors when the roots are tightly 
clustered. For example, if the coefficients a(k) are quantized, 
then the sensitivity of the location of the ith pole to changes Aa(k) in the coefficients a(k) is approximately 
"a, 
Aai * 
Aa(k) 
k=l 
With 
where 
then 
Thus, if the poles are tightly clustered, la; - njI is small, and small changes in a(k) will result in large changes 
in the pole locations. 
The movement of the poles may be minimized by maximizing the distance between the poles, lai - a /  1 .  This 
may be accomplished by implementing a high-order filter as a combination of first- or second-order &stems. 
For example, with a cascade of second-order sections. each pair of complex conjugate poles and zeros may be 
realized separately, thereby localizing the coefficient quantization errors to each section. 
For an FIR filter, 
H (z) = 
h(n)zCn 
when the coefficients are quantized, the system function becomes 
Thus, the quantization errors may be modeled as H ( z )  in parallel with AH(z) as shown in Fig. 8-17. If we 
assume that the coefficients h(n) are less than I in magnitude, and that the coefficients are rounded to B + 1 bits, 
Therefore, a loose bound on the error in the frequency response is 
As with IIR filters, if the zeros are tightly clustered, the zero locations will be sensitive to coefficient 
quantization errors. However, FIR filters are commonly implemented in direct fonn for two reasons: 
1. The zeros of FIR filters are not generally tightly clustered. 
2. In direct form, linear phase is easily preserved. 

IMPLEMENTATION OF DISCRETE-TI ME SYSTEMS 
[CHAP. 8 
Fig. 8-17. Model for the coefticient quunliza~ion error in FIR 
filters. 
8.6.3 Round-Off Noise 
Round-off noise is introduced into a digital filter when products or sums of products are quantized. For example, 
if two ( B  + I)-bit numbers are multiplied, the producl is a ( 2 8  + I)-bit number. I f  the product is to be saved in 
a (B + I)-bit register or used in a (B + I)-bit adder, it must be quantized to (B + I)-bits, which results in the 
addition of round-qfnoiw. This round-off noise propagates lhrough the filter and appears at the output of the 
filter as round-off noise. I n  this section, we illustrate the analys~s of round-off noise effects by example. 
Consider the second-order IIR filter ~mplemented in direct form I shown in Fig. 8-lS(u). The difference 
equation For this network is 
If we assume that all numbers are represented by B + I fixed-point numbers and that the network uses ( B  + I)-bit 
adders, each (2R + I)-bit product must be quantized to B + I bits by either truncation or rounding. Fig. 8-18(h) 
shows the quantizers explicitly. The difference equation corresponding to this system is the nonlinear equation 
If the quantizers are replaced with noise sources that are equal to the quantization error, we have an alternative 
representation shown in Fig. 8-18(c). This representation is particularly useful when it is assumed that the 
quantization noise has the following properties: 
1. 
Each quantization noise source is a wide-,~ens~ 
stationary white n o i s ~  
process. 
2. The probability distribution Function of each noise source is uniformly distributed over the quantization 
interval. 
3. Each noise source is uncorrelated with the input to the quantizer. all other noise sources, and the input 
to the system. 
With B + I bits, and a fractional representation for all numbers, the second property implies that the quantization 
noise for rounding has a zero mean and o variance equal to 
2 - 1 2-20 
(T. - - 
( 
I? 
To analyze the effect of the round-off noise sources at the output of the filter, it is necessary to know how 
noise propagates through a filter. If the input to a linear shift-invariant filter with a unit sample response h(n) is 
wide-sense stationary white noise, e(n). with a mean nr, and a variance 4. 
the filtered noise, f (11) = h(n) * e(n), 
is a wide-sense stationary process with a mean 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
t 
e ? W  
t 
e d n )  
(c) 
Fig. 8-18. 
Analysis of round-off noise. (a) A second-order direct form 1 
filter. (b) Quantization of products in the filter. (c) An additive noise model 
for the round-off noise. . 

308 
and a variance 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
The variance may also be evaluated using 2-transforms as follows: 
EXAMPLE 8.6.1 
Consider the first-order all-pole tilter with a system function 
1 
H ( z )  = - 
1 - cuz-' 
If the input to this filter, e(n), is zero mean white noise with a variance a,?, 
the variance of the output will be 
IXi 
7 
I 
h(n)12 = 4 
lul2'' = a,:-- 
a; = a,, 
,,=-C€ 
=O 
1 - laI2 
Returning to the direct form I filter, note that the model in Fig. 8-1 8(c) may be represented in the equivalent 
form shown in Fig. 8-19 where 
Fig. 8-19. 
An additive noise model after combining noise sources. 
Thus, the quantization noise is filtered only by the poles of the filter, and the output noise satisfies the difference 
equation 
If the noise sources are uncorrelated, as assumed by the third property above, the variance of e,(n) is the sum of 
the variances of the five noise sources, or 
Assuming that the filter is stable, and that the poles of the filter are complex, 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
the variance of the output noise is 
2 
a,. = 5 - 
- 
1 
z-' d z  
Using Cauchy's residue theorem to evaluate this integral, we find that 
Note that as the poles move closer to the unit circle, r + 1, the variance of the output noise increases. 
The noise performance of digital filters may be improved by using (2B + 1)-bit adders to accumulate sums 
of products prior to quantization. In this case, the difference equation for the direct form I network becomes 
Thus, the sums are accumulated with an accuracy of 2B + 1 bits, and the sum is then quantized to B + 1 bits in 
order to store j(n - I) and j(n - 2) in ( B  + ])-bit delay registers and to generate the (B + I)-bit output j(n). 
Because there is only one quantizer, which quantizes the sum of products. the variance of the noise source in 
Fig. 8-19 is reduced from 50; to 0,:. 
8.6.4 Pairing and Ordering 
For a fiIter that is implemented in cascade or parallel form, there is considerable flexibility in terms of selecting 
which poles are to be paired with which zeros and in selecting the order in which the sections are to be cascaded 
for a cascade structure. Pairing and ordering may have a significant effect on the shape of the output noise power 
and on the total output noise variance. The rules that are generally followed for pairing and ordering are as 
follows: 
1. The pole that is closest to the unit circle is paired with the zero that is closest to it in the z-plane, and 
this pairing is continued until all poles and zeros have been paired. 
2. The resulting second-order sections are then ordered in a cascade realization according to the closeness 
of the poles to the unil circle. The ordering may be done either in terms of increasing closeness to the 
unit circle or in terms of decreasing closeness to the unit circle. Which ordering is used depends on 
the consideration of a number of factors, including the shape of the output noise and the output noise 
variance. 
Another issue in fixed-point implementations of discrete-time systems is overflow. If each fixed-point number 
is taken to be a fraction that is less than 1 in magnitude, each node variable in the network should be constrained 
to be less than I in magnitude in order to avoid overflow. If we let hk(n) denote the unit sample response of the 
system relating the input x(n) to the kth node variable, wk(n), 

310 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
where X,,, is the maximum value of the input x(n). Therefore, a sufficient condition that Iwk(n)l < I so that 
no overflow occurs in the network is 
for all nodes in the network. If this is not satisfied, x(n) may be scaled by a factor s so that 
EXAMPLE 8.6.2 In the first-order direct form I1 network shown below. 
s ( n )  
Node I 
Node 2 
YO,) 
there are two nodes that represent adders, which are labeled "Node I" and "Node 2." The unit sample response from the 
input to the first node is 
h (11) = (0.8)"u(n) 
Therefore. 
The unit sample response from the input to the second node is 
Thus, with a fractional representation for .r(n). a sufficient condition for no overflow to occur is that X,,, 
5 0.2. 
Solved Problems 
Structures for FIR Systems 
8.1 
Find the frequency response of the system defined by the following network: 
z-I 
- I 
2-I 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
We recognize this structure as a linear phase system with a unit sample response 
h(n) = -O.I[S(n) + 6(n - 6)1 + 0.2[6(n - I )  + 6(n - 5)] .t 0.5[6(n - 2) + 6(n - 4)] + 6(n - 3) 
8.2 
A linear shift-invariant system has a unit sample response given by 
h(0) = -0.01 
/?(I) = 0.02 
h(2) = -0.10 
h(3) = 0.40 
h(4) = -0.10 
h(5) = 0.02 
h(6) = -0.01 
(a) Draw a signal flowgraph for this system that requires the minimum number of multiplications. 
(b) If the input to this system is bounded with Ix(n)l 4 I for all n ,  what is the maximum value that the 
output. y(n ), can attain? 
(a) Because this system is a linear phase filter, it may be implemented with a network that has only four multiplies 
and six delays as shown in the figure below. 
(b) With an input xin), the output is 
Therefore, the magnitude of y(n) is upper bounded by 
With Ix(n)l < 1 for all n, 

312 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.3 
The unit sample response of an FIR filter is 
h ( n )  = 
otherwise 
(a) Draw the direct form implementation of this system. 
(b) Show that the corresponding system function is 
and use this to draw a flowgraph that is a cascade of an FIR system with an IIR system 
(c) For both of these implementations, determine the number of multiplications and additions required 
to compute each output value and the number of storage registers that are required. 
(a) With a unit sample response 
h(n) = an[u(n) - u(n - 7)] 
the direct form implementation of this system is as shown below. 
(b) The system function is 
which converges for Izl z 0. Thus, H(z) may be implemented as a cascade of an IIR system, 
with an FIR system, 
H2(z) = 1 - u7z-' 
Therefore, an alternative implementation of this system is as shown below. 
where the branch labeled with z-6 represents a delay by 6. 
(c) The direct form structure requires six delays, which is the minimum number necessary for this system, six 
multiplications, and six additions. The cascade, on the other hand, requires one additional delay but only two 
multiplications and two additions. 
8.4 
A DSP chip used in real-time signal processing applications has an instruction cycle time of 100 ns. One 
of the instructions in the instruction set, MACD, will fetch a value from data memory (input signal), fetch 
another data value from program memory (filter coefficient), multiply the two numbers together, add the 
product to the accumulator, and then move a number in data memory into the next memory location (this 
corresponds to a shift or delay of the data sequence). Thus, for an FIR filter of order N, to find the value 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
313 
of the output at time n, we need one instruction to read the new input value, x(n), into the processor, we 
need (N + 1) MACD instructions to evaluate the sum 
and we need one instruction to output the value of y(n). In addition, there are eight other instruction 
cycles required for each n in order to perform such functions as setting up memory pointers, zeroing the 
accumulator, and so on. 
(a) With these requirements in mind, determine the maximum bandwidth signal that may be filtered 
with an FIR filter of order N = 255, in real time, using a single DSP chip. 
(b) A speech waveform x,(t) is sampled at 8 kHz. Determine the maximum length FIR filter that may 
be used to filter the sampled speech signal in real time. 
(a) For the given DSP chip, we need N + 1 I instruction cycles to compute a single output value for an FIR filter of 
order N. Therefore, with N = 255, we need 266 cycles, or 266 x 
s to compute each output point. Thus, 
the signal to be filtered cannot be sampled any faster than 
I 
' 
= 266 x 
Hz = 37.6 kHz 
Therefore. the bandwidth of the input signal is limited to 18.8 kHz (i.e., X,( f) must be zero for I f  I z 18.8 kHz). 
(b) Sampling speech at 8 kHz produces 8000 samples per second. Therefore, we have T, = 1/8000 = 0.125 ms 
to compute each output. This allows for M = (0.125 x 10-"/10-' 
= 1250 instruction cycles. Thus, we may 
implement an FIR filter of order N = 1250 - I 1 = 1239. 
Find the unit sample response, h(n), of the network drawn below and find the 64-point DFT of h(n). 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP 8 
This is a frequency sampling structure for an FIR filter with a unit sample response of length N = 64. Because the 
gain of the first-order section with a pole at z = I is equal to 1, H(0) = I. With second-order networks of the form 
with 
A(k) = H (k) + H(N - k) 
B(k) = 
+ H(N - k)eJ2nkJN 
we see that H(1) and H(2) are nonzero, along with H(62) and H(63). We may therefore solve these equations for 
H(1), H(2), H(62), and H(63) as follows. Because A(I) = 2, 
and because B(1) = 2cos(rc/32), 
Thus, we have two equations in two unknowns, which may be written in matrix form as follows: 
Solving these equations we find that H(1) = H(63) = 1. Similarly, with A(2) = 2 and B(2) = 2cos(n/32), we 
find that H(2) = H(62) = 1. Therefore, the 64-point DFT of h(n) is 
1 
k = 0. I .  2, 62.63 
H(k) = 
0 
else 
and the unit sample response is 
1 
63 
h(') = - H(k) eJ2nt1"lh - 
nrr 
nrr 
- ,, + & cos - + & cos - 
64 ,=o 
32 
16 
8.6 
Consider the FIR filter with unit sample response 
1 O 
otherwise 
Draw the frequency sampling structure for this filter and compare the computational complexity of this 
structure to a direct form realization. 
The 64-point DFT of the unit sample response is 
1 
k = O  
H(k)=[;i 
k = l , 6 3  
else 
Therefore, for the frequency sampling structure, we write the system function in the following form, 

CHAP. 83 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
This leads to the frequency sampling structure shown below. 
This implementation has 67 delays (4 more than the minimum), and it requires 3 multiplies and 6 adds to evaluate 
each output y(n). A direct-form realization, on the other hand. has 63 delays and, because h(n) has linear phase, 
requires 32 niultiplies and 63 adds to compute each output value. 
8.7 
The frequency sampling structure for an FIR filter is based on expressing the system function in the form 
where H ( k )  are samples of the frequency response at wk = 27rk/N. If h(n) is real, the symmetry of the 
DFT may be used to simplify this structure so that all of the coefficients are real. For example, Eq. (8.2) 
specifies a structure when N is even. Derive the corresponding structure when N is odd. 
If N is odd, we may write H(z) as follows: 
where 
Note that, due to the conjugate symmetry of the DFT, H(k) = H*(N - k), the coefficients A(k) and B(k) are real. 
8.8 
As discussed in Chap. 3, sample rate reduction may be realized by cascading a low-pass filter with a 
down-sampler as shown in the following figure: 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Because the down-sampler only retains one out of every M outputs from the low-pass filter H(z), if M 
is large, most of the filter outputs will be discarded. Therefore, if H ( z )  is an FIR filter, it is not necessary 
to evaluate the discarded values, and efficient implementations of the decimator are possible. 
(a) Assume that H ( z )  is an FIR filter with h(n) = 0 for n < 0 and n 2 N. If H ( z )  is implemented 
in direct form, draw a flowgraph for the decimator, and determine how many multiplications and 
additions are necessary to compute each output value y(n). 
(b) Exploit the fact that only one out of every M values of w(n) is saved by the down-sampler to derive a 
more efficient implementation of this system, and determine how many multiplications and additions 
are necessary to compute each value of y(n). 
(c) If H ( z )  is an IIR filter, are efficient implementations of the decimator still possible? If so, for which 
structures, and by what factor are they more efficient? 
(a) With a direct form implementation of the FIR filter H (2). the decimator is as shown below. 
Because we need N multiplies and N - 1 adds to find each value of w(n), and because only one value of y(n) is 
computed for every M values of w(n), M N multiplies and M(N - 1) adds are performed for each value of y(n). 
(b) Because the down-sampler only saves one out of every M values of w(n), the decimator may be implemented 
more efficiently by only evaluating those values of w(n) that are passed through the down-sampler. This may 
be accomplished by embedding the down-sampler within the FIR filter as illustrated below. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
317 
Now. because only one out of every M input samples is multiplied by h(k), this implementation only requires 
N multiplies and N - 1 adds to compute each value of y(n). Thus. the number of multiplies and adds has been 
reduced by a factor of M. 
(c) If H ( z )  is an IIR filter, it is not possible, in general, to commute the down-sampling operation with branch 
operations as was done with the FIR filter. For example, if 
we have the system illustrated below. 
However, in order to evaluate a given value of w(n). the previous value, w(n - I), must be known. Therefore, 
the down-sampler cannot be commuted with any branch operations within the filter, because this would discard 
values of w(n) that are required to compute future values. On the other hand, consider the direct form I1 
implementation of 
as illustrated below. 
Because 
w ( n )  = b(O)v(n) + b(l)u(n - 1 )  
the down-sampler may be commuted with the branch operations that form the multiplications by b(0) and b(1) 
as illustrated in the following figure: 
To compute each value of y(n), this structure requires that we find M values of v(n), which requires M multi- 
plies and M adds, and it requires two multiplies and one add to find y(n) from u(n). Thus, the total number of 
computations is M + 2 multiplications and M + I additions. The direct form 11 structure is the only one that 
allows for a savings in computation. For direct form I, transposed direct form 1, and transposed direct form 11. 
the down-sampler cannot be commuted with any branch operations. 

318 
IMPLEMENTATION O F  DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.9 
The previous problem examined the simplifications that are possible in implementing a decimator. Similar 
savings are possible for the interpolator shown in the figure below. 
Because the up-sampler inserts L - I zeros between each sample of x(n), assume that H ( z )  is the system 
function of an FIR filter, and use the fact that many of the values of w(n) are equal to zero to derive a 
more efficient implementation of this system. 
A direct implementation of the cascade of an up-sampler with an FIR filter using the transposed direct form is 
illustrated in the figure below. 
Note that the evaluation of each value of y(n) requires N multiplications and N - I additions. However, only one 
out of every L values that are being multiplied by the coefficients h(n) is nonzero. Therefore, it is more efficient to 
modify the structure so that the filtering is performed prior to the insertion of zeros. With the transposed direct form 
structure, we may commute the up-sampler with the branch multiplies as illustrated in the following figure: 
With this simplification, only N multiplies and N - 1 adds are required for every L output values. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
Structures for IIR Systems 
8.10 
Consider the causal linear shift-invariant filter with system function 
Draw a signal flowgraph for this system using 
(a) Direct form I 
(b) Direct form 11 
(c) A casczlde of first- and second-order systems realized in direct form I1 
(4 A cascade of first- and second-order systems realized in transposed direct form I1 
(e) A parallel connection of first- and second-order systems realized in direct form I1 
(a) Writing the system function as a ratio of polynomials in z-I , 
I + 0.8752-' 
H (z) = I - 0.5~-I + 0.76r2 - 0 . 6 3 2 ~ ~  
it follows that the direct form I realization of H(z) is as follows: 
For direct 
realization of H (z), we have 
x ( n )  
~ ( n )  
0 
r 
" 
- 
l i  
0.5 
0 
A - 
l i  
-0.76 
<) 
A 
c 
1, 
0.63 - 
- 
a 
" 
- 
" 
0 
" 2-I 
0.875 
l i  
" z-I 
1 
" 2-I 
0 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(c) Using a cascade of first- and second-order systems realized in direct form 11, we have a choice of either pairing 
the zero with the first-order factor in the denominator or with the second-order factor. Although it does not 
make a difference from a computational point of view, because the zero is closer to the pair of complex poles 
than to the pole at z = 0.7, we will pair the zero with the second-order factor. With this pairing, the realization 
of H ( z )  is as follows: 
(e) For a parallel structure, H ( z )  must be expanded using a partial fraction expansion: 
(d) If we change the direct form 11 systems in part (r) to transposed direct form 11, we have the realization shown 
below. 
x ( n )  
y ( n )  
0 
n 
- 
,- 
- 
1 + 0.875zr1 
- 
- 
A + Bz-I 
H ( z )  = 
C 
( 1  + 0.2zr1 + 0.9zr2)(l - 0 . 7 ~ - I )  
1 + 0 . 2 ~  
- I  + 0.9zr2 + 1 - 0.7~-I 
- 
z-I 
The constants A, B ,  and C may be found as follows. Recombining the two terms in the partial fraction expansion 
as follows. 
and equating the coefficients in the numerator of this expression with the numerator of H ( z ) ,  we have the 
following three equations in the three unknowns A, B ,  and C :  
" 
" 
,, 
1 
0.7 
0 
- 
Solving for A ,  B, and C we find 
,, 
and, therefore, the partial fraction expansion is 
- 
I 
11 
z-I 
0 . 9  
A 
0 
- 
- 
" 
- 
,, 
0.875 
- 
2-I 
-0.2 
A 
1r 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
Thus. parallel structure for H(z) is shown below. 
0.7206 
Find the system function and the unit sample response of this system. 
8.11 
Consider the filter structure shown in the figure below. 
- 
For the three nodes labeled in the flowgraph below. 
x(n) 
I 
L - 
Node 3 
w ( n )  
~ ( n )  
Node I /I I 
0 
: 
L - 
I 
" 
,. 
- 
" - 
4 i 
" z-I 
0.2 
2 
A - 
P. - 
- 
we have the following node equations: 
Using z-transforms, the first equation becomes 
Taking the z-transform of the second equation, and substituting the expression above for W ( z ) ,  we have 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Finally, taking the z-transform of the last equation, we find 
Therefore, the system function is 
2 + 1.82-' 
H ( z )  = I - 0.22-' 
and the unit sample response is 
h(n) = 2(0.2)"u(n) + 1.8(0.2)"-'u(n - I) 
8.12 
Find a direct form I1 realization for the following network: 
To solve this problem, we begin by writing the node equations for each of the adders in the network. If we label the 
three nodes that are adders as in the figure below, 
and denote the output of the first node by wl(n), and the output of the second by wz(n), we have the following three 
equations for the three node variables, 
x01) 
Substituting the first equation into the second, we have 
Then, substituting this equation into the third equation, we have 
" h(2) 
y(n) 
L - ' 
Node 3 
, 
0 
n 
n 
" 
Node 1 
- 
a - 
" N O )  
z -  I 
" 
- 
" M I )  
--I - 
> 
- 
- 
Node 2 f 
d l )  
a(2) 
, 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
Thus, the direct form I1 structure for this system is as shown below. 
8.13 
Find a transposed direct form I1 realization for the system described by the difference equation 
I 
y ( n ) =  2 4 Y( n  - I ) -  
i y ( n  - 2 ) + x ( n ) -  
Jx(n - 1) 
and write down the set of difference equations that corresponds to this realization. 
The transposed direct form I1 realization for this system is as follows: 
With the node variables vl(n) and v,(n) as labeled in the network above, the difference equations that describe this 
network are as follows: 
vl ( n )  = x(n) + vdn - I ) 
vz(n) = - f x ( n )  + 5vl(n) - :vl(n - I )  
v(n) = v ~ ( n )  
8.14 
Find the system function and the unit sample response for the following network, and draw an equivalent 
direct form 11 structure: 

324 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
This network is a parallel connection of two first-order systems, plus a feed-through connection with a gain of 2. 
Therefore, the system function is the sum of three system functions: 
Thus, the unit sample response is 
To find an equivalent direct form 11 realization, H(z) is first expressed as follows: 
Therefore, the direct form 11 structure is as shown in the following figure: 
4 
Find the system function for the following network, and determine the conditions on the coefficients a ( ] ) ,  
a(2), a(3), and a(4) that will ensure the stability of the system: 
The first thing to observe is that this system corresponds to a feedback network of the form shown in the following 
figure: 
x(n) 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
where G(z) is the second-order system shown below. 
Therefore, 
Y(z) = X(z) + G(z)Y(z) 
and 
I 
H(z)= - 
1 - G(z) 
To find G(z), we begin by writing the node equations for this network: 
Taking the z-transform of the first two equations, we have 
Substituting the second equation into the first gives 
Finally, from the last difference equation, we have 
Therefore. 
and for H(z) we have 
For stability, it is necessary and sufficient that the coefficients [a(2) +a(4)] and [a(l) + a(3)] lie within the stability 
triangle (see Chap. 5), which requires that 

326 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.16 
Find the system function of the following network: 
x ( n )  
2 
This system is a feedback network that has the following form: 
x ( n )  
G(z) G 
-If2 
Therefore, the system function is 
With 
we have 
8.17 
Find the system function of the following network: 
x ( n )  
The system function of this network may be found by writing down the difference equations corresponding to each 
adder and solving these equations using z-transforms. A simpler approach, however, is to redraw the network as 
follows, 

CHAP. 81 
IMPLEMENTATION O F  DISCRETE-TIME SYSTEMS 
327 
which we recognize as a cascade of three second-order networks. Therefore, the system function is the product of 
the system functions of each network in the cascade, and we have 
8.18 
Consider the network in the figure below. Redraw the flowgraph as a cascade of second-order sections 
in transposed direct form 11. 
where 
To implement lhis system as a cascade of second-order transformed direct form 11 networks, we must first find the 
system function corresponding to this network. Note that this network is of the form shown in the following figure: 
Therefore, 
or 
L - 
H I ( : )  
- 
- -  
- 
( l - 0.2:r1 + 0.8:r2)( 1 + 0 . 2 ~ ~ ~  
+ 0.82-I) 
Therefore, the desired network is as shown in the following figure: 
. ~ ( I I )  
2 
- 
X O I )  
0 : 
- 
H s ( z )  
~ ( n )  
& - 
H z ( - )  
L - 

328 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.19 
A digital oscillator has a unit sample response 
The system function of this oscillator is 
(a) Draw a direct form I1 network for this oscillator, and show how the sinusoid may be generated with 
no input and the appropriate set of initial conditions. 
(b) In applications involving the modulation of sinusoidal carrier signals in phase quadrature, it is 
necessary to generate the sinusoids 
Beginning with a system that has a unit sample response h ( n )  = eJnqu(n), separate the difference 
equation for this system into its real and imaginary parts, and draw a network that will generate 
these signals when initialized with the appropriate set of initial conditions. 
(a) A direct form I1 network for the oscillator is as follows: 
sin wl 
With the input x(n) = &n). the response is y(n) = sin[(n + I)w] for n 2 0. Equivalently, if the storage 
registers corresponding to the delays are initialized so that 
the zero-input response will be a sinusoid of frequency wo. 
(h) A complex exponential sequence y(n) = e J n q  u(n) is generated by the difference equation 
with the initial condition 
y(- I ) = e - j q  
Writing this difference equation in terms of its real and imaginary parts, we have 
This equation is equivalent to the following pair of coupled difference equations, which are formed from the 
real part and the imaginary part of the equation: 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
A network that implements this pair of equations is shown below. 
z-I 
L 
V - 
0 
COS Wg 
.yi(n) = sinnwo 
The initial condition required to generate the desired output is yc - I )  = e - J q ,  or 
8.20 
Implement the system 
as a parallel network of first-order direct form structures. 
Factoring the denominator of the system function, we find 
To implement H ( z )  as a parallel network of first-order filters, we must express H ( z )  as a sum of first-order factors 
using a partial fraction expansion. Because the order of the numerator is equal to the order of the denominator, this 
expansion will contain a constant term, 
To find the value of C. we divide the numerator polynomial by the denominator as follows: 
Therefore, C = 2, and we may write H ( z )  as follows: 
Finally, with 
we have, for the coefficients A and B, 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
and 
Thus, 
and the parallel network for this system is as shown below. 
8.21 
The system function of a discrete-time system is 
Draw a signal flowgraph of this system using a cascade of second-order systems in direct form 11, and 
write down the set of difference equations that corresponds to this implementation. 
Expressing H(z) as a product of two second-order systems, we have 
I + 22-I + z-= 
1 + 2z-' + z - ~  
H ( z )  = 1 - z-1 + 12-2 
1 + 22-1 + 3 - 2  
8 
which leads to the following cascade implementation for H(z): 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
With w(n), vl(n). and v2(n) as labeled in the figure above, the set of difference equations for this network is: 
8.22 
Consider the fourth-order combfilter that has a system function 
(a) Draw a pole-zero diagram for H (z). 
(b) Find the value for A so that the peak gain of the filter is equal to 2. 
(c) Find a structure for this filter that requires only one multiplier. 
(a) The comb filter has four zeros on the unit circle at 
pk = e~(2k+l)n/4 
k=O. 1.2.3 
and four poles at 
ark = 
k = 0, 1,2,3 
A pole-zero diagram for H(z) is shown in the following figure: 
(b) Due to the zeros on the unit circle, the magnitude of the frequency response is zero at wt=(2k + l)n/4 for 
k = 0, 1,2, 3, and it increases monotonically until it reaches a maximum value at the frequencies that are 
midway between the zeros at wk = k1r/2. Therefore, in order for the peak gain to be equal to 2, we want 
which implies that 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(c) With a system function 
we may implement this system using two multiplies as shown in the figure below. 
Note, however, that the multiplier may be shared as follows: 
a(n) 
The difference equations for this network are 
8.23 
The system function of an allpass filter has the form 
The symmetry that exists between the numerator and denominator polynomials allows for special struc- 
tures that are more efficient than direct form realizations in terms of the number of multiplies required to 
compute each output value y(n ). 
(a) Consider the first-order allpass filter, 
z-I + a 
H ( z )  = 
I + az-I 
where a! is real. Find an implementation for this system that requires two delays but only one 
multiplication. 
(h) For a second-order allpass filter with h ( n )  real, the system function has the form 
where a and B are real. Derive a structure that implements this system using four delays but only 
two multiplies. 
(a) The direct form realization of a first-order allpass filter requires two multiplies and one delay as shown in the 
figure below. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
To see how the two multiplies may be combined, consider the difference equation for this system: 
Therefore, only one multiplication is necessary if we form the difference x ( n )  - y ( n  - I )  prior to multiplying 
by a. Thus, we have the structure illustrated in the figure below that has two delays but only one multiplication. 
Because this structure requires an extra delay compared to direct form, this structure is not canonic. 
(b) As with the first-order allpass filter. we may find a two-multiplier realization ol'a second-order allpass filter by 
combining together terms in the difference equation for the allpass filter as follows: 
Thus, only two multiplications are required if we can form the differencess(n - 1 ) - y ( n  - 1 ) and .r(n)- y ( n  -2) 
prior to performing any multiplications. A structure that accomplishes this is given in the figure below. 
Note that with the additional delays, two multiplications are saved compared to a direct form implementation. 
Lattice Filters 
8.24 
Sketch a lattice filter implementation of the FIR filter 
To implement this system using a lattice filter structure, we must find the reflection coefficients that generate the 
polynomial H(z). First, however, it is necessary to normalize H(z) so that the first coefficient is unity: 
Now, with 
we see that 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
Next. we generate the second-order system Hr(z) using the step-down recursion: 
Therefore, r2 = 0.1905. Finally, we have 
and, therefore, I-1 = 0.4. Thus, the lattice filter structure is as shown below. 
8.25 
Shown in the figure below is an FIR lattice filter. 
((1) 
Find the system function A(=) = F ( z ) / X ( z )  relating the input x(n) to the output f (n). Does this 
system have minimum phase? 
(b) Repeat part (0) 
for the system function relating x(n) to ~ ( n ) .  
( a )  To find the system function relating .u(tz) to f ' ( t l ) ,  we use the step-up recursion. Using the vector form of the 
recursion, we have for the coefficients u l ( k )  
Then, with Tz = 0.4, for a?(/,), we have 

CHAP. 81 
IMPLEMENTATION O F  DISCRETE-TIME SYSTEMS 
Finally, with r3 = 0.2. we have 
Thus. 
A(:) = 1 + 0.78;-' + 0.54z-' + 0.2;-' 
This system will have minimum phase if the zeros of A(z) are inside this unit circle. Although this could be 
determined by factoring A(z), because the reflection coefficients used to generate A(:) are bounded by I In 
magnitude. it follows that A(z) has minimum phase. 
(b) The system function A'(z) = G(-.)/ X(z) is related to X(z) as follows: 
Because the zeros of A1(z) are formed by flipping the zeros of A(?) about the unit c~rcle. all of the zeros of A'(:) 
will be o~ctside the unit circle and thus will not have minimum phase. 
8.26 
Let A(z) be an FIR filter with lattice filter coefficients 
(a) Find the zeros of the system function A(z). 
(h) Repeat for the case when r3 = - 1 .  
(c) Can a general result be proved for lattice filters that have reflection coefficients Ti with 
ITjl < I for j =  1,2, ... . p -  1 
ITPI = 1 
(a) To find the system function A(z) for a given set of reflection coefficients, we use the step-up recursion. For 
al(k) we have 
Then, with r2 = 4 we have 
Finally, with T3 = I we have 
Thus. 
A(z) = 1 + +z-' + t
~
-
~
 
+ z-3 
The zeros of the system function may be found by factoring A(z). The roots are found to be 
pI = - 1 
p2 = e~1).4646n 
fi3 = C-~().JM6" 
which are on the unit circle. 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(h) If r3 = -I. the system function may be found by modifying the last step of the step-up recursion in pan (a) as 
follows: 
which are again on the unit circle. 
(c) If A,,(z) is a pth-order FIR filter with reflection coefficients r, where (r,I < I for j = 1.. . . . p - I ,  and 
lr,*l = 1, 
A,,(z) = A p - I ( ~ )  f 
z - " A ~ - ~ ( ~ - ' )  
and it follows that the polynomial A,(z) is symmetric or antisymmetric, that is. 
Therefore, A,&) has (generalized) linear phase, which implies that all of the zeros of A,@) lie on the unit 
circle or in conjugate reciprocal p a n  However, if Ir, 1 < I for j = 1.2, . . . . p - I, the zeros must lie on the 
unit circle. The reason for this is as follows. The Schur-Cohn stability criterion states that none of the roots of 
A,(z) may lie outside the unit circle if ITj\ 5 1 for j = 1.2, . . . , p. Therefore, if A&) has generalized linear 
phase with no zeros outside the unit circle. then all of the zeros must be on the unit circle. 
Draw a lattice filter implementation for the all-pole filter 
and determine the number of multiplications, additions, and delays required to implement the filter. 
Compare this structure to a direct form realization of H ( z )  in terms of the number of multiplies, adds, 
and delays. 
To implement this filter usinga lattice filter, we must first derive the reflectioncoefficients rI. r 2 ,  and r,3 
corresponding 
to the denominator polynomial. With 
it follows that r3 = 0.6. Next, using the step-down recursion to find A2(z), we have 
I 
A2(z) = - 
I - r: [Adz) - r 3 ~ - ' ~ d - ' ) l  
- 
- 
1 
1 l - 0 . 2 ~ '  + 0.4zT2 t 0.61-" - 0 . 6 ~ - ~ ( 1  
- 0 . 2 ~  + 0.4z2 + 0.6z3)] 
1 - (0.6)2 
= I - 0 . 6 8 7 5 ~ ~ '  
+ 0.8 1 2 5 8  
Thus. for r2 we have r2 = 0.8 125. Finally, for A'(,-), we have 
and, therefore, rI = -0.3793. Thus, the structure is as follows: 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
337 
This filter structure has three delays and requires five multiplications and five additions to evaluate each value of the 
output, y(n). A direct-form structure also requires three delays but only three multiplications and three additions. 
8.28 
Without factoring any polynomials, determine whether or not the following causal filter is stable: 
H ( z )  = 
1 + 21-' + 2 r 2  + 2-3 
1 + 1.58~-' + 1.638~-2 + 1.556~-" 
0 4 - 4  
We may easily check the stability of this filter using the Schur-Cohn stability test, which involves checking to 
see whether or not the magnitudes of the reflection coefficients corresponding to the denominator polynomial are 
bounded by 1 in magnitude. With 
it follows that lr41 = 0.4 < 1. Using the step-down recursion to find A3(z), we have 
Therefore, 1 r3 
I = I .  I > 1, and it follows that the filter is unstable. 
8.29 
Use the Schur-Cohn stability test to derive the stability conditions 
for a second-order filter 
H ( z )  = 
b(0) 
I + a( 1 ) ~ - I  + a ( 2 ) ~ - ~  
In order for H(z) to be stable, it is necessary and sufficient for the reflection coefficients TI and Tz to have a magnitude 
that is less than 1. In t e n s  of the first two reflection coefficients, the denominator of H(z) is 
Therefore, because a(2) = Tz, the constraint that )r2( 
< 1 gives us the first condition, 
Next, with 
a(1) = rl + rl rz = I I + a(2)lrl 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
it follows that 
Because we require that 1 rl 
1 < I, 
These two equations are equivalent to 
as was to be shown. 
8.30 
Implement the allpass filter 
using a lattice filter structure. 
To find the lattice filter structure for this allpass filter, we use the step-down recursion to find the reflection coefficients 
corresponding to the denominator polynomial, 
A3(z) = I - 0.82-I + 0.64z-? - 0.512z-~ 
First, we note that r3 = -0.5 12. Then, we find Az(z) as follows: 
1 
Az(z) = - 
[A3(z) - T ~ Z - ~ A ~ ( Z - ' ) ]  
I - r: 
- 
- 
1 
[ I  - 0.8z-~ + 0 . 6 4 ~ ~ '  
- 0.512z--' + 0.512~-~(1 
- 0.82 + 0.64z2 - 0.512z3)] 
1 - (0.512)? 
= 1 - 0.64Olz-' + O.3123z-~ 
Thus. the second reflection coefficient is r2 = 0.3123. Finally, we have 
I 
A,(z) = - 
[Az(z) - r 2 ~ - 2 ~ ~ ( ~ - ' ) 1  
1 - r; 
- 
- 
1 
[I - 0.6401~-' + 0.3123~-' - 0.3123~-~(1 
- 0.64012 + 0.3123z2)] 
1 - (0.3 1 23)2 
= 1 - 0.4878~-' 
and, therefore, r1 = -0.4878. Thus, a lattice implementation of this allpass filter is as shown in the figure below. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
8.31 
Find the system function for the lattice filter given in the figure below. 
x(n) 
This structure implements a third-order IIR filter with three poles and three zeros: 
To find the system function, first we use the step-up recursion to find A3(z) from the reflection coefficients r,, r2, 
and r3. 
With rI = 0.2, we have 
Next, for a2(k) we have 
Finally, for a3(k) we have 
Therefore, the denominator polynomial is 
To find the numerator B3(2), we use Eq. (8.8), 
Thus, we have 
Therefore, the system function is 

340 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.32 
Sketch a lattice filter structure for each of the following system functions: 
(a) To implement the filter 
using a lattice filter structure, we must first find the reflection coefficients corresponding to the denominator 
polynomial. Using the step-down recursion, we find 
Next, we find the coefficients cl (k) that produce the numerator polynomial 
Using the recursion 
we have 
cl(l) = bl(l) = - I  
and 
c,(0) = bl(0) -cl(l)a1(l) = 2.4698 
(note that al(l) = r,). Therefore. the lattice filter structure for this system is as shown in the figure below. 
(b) To find the lattice filter structure for 
we first use the step-down recursion to find the reflection coefficients for the denominator, which are 
Next, we use the recursion 
u 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
to find the coefficients c3(k). which are 
Thus, the lattice filter structure for this system is as shown in the figure below. 
xfn) 
(c) Note that the system function 
is an allpass filter. Because the denominator is the same as the system function in part (b), the reflection 
coefficients are rl = 0.5 and T2 = 0.75, and the lattice filter is as shown in the figure below. 
Finite Word-Length Effects 
8.33 
Express the fractions 
and -& in sign-magnitude, one's complement, and two's complement notation 
using 6 bits. 
With B + 1 = 6 bits, I bit will be a sign bit, and 5 will be the fractional bits. Because 
the 6-bit representation for x = $ in all three binary forms is 
For x = - & we have, in sign-magnitude form, 
and in one's complement form. 
x = 0.001 11 = 1.1 1000 
and in two's complement form 
x = 0.001 1 1  + 0.00001 = 1.1 1001 

342 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.34 
Consider the following implementation of a second-order filter: 
(a) Find the system function corresponding to this network. 
. . 
0 
- 
- 
(b) If the coefficients (r cos wo) and ( I .  sinwo) are quantized to 4 bits, draw the set of allowable pole 
locations in the z-plane. For what types of filters would this filter structure be preferred over a direct 
form structure'? 
(a) This filter structure is called the coupled form realization. The system function for this filter may be found as 
follows. The difference equations relating .r(n), v(n). and v(n) are 
" 
- 
" I-' 
.
r
-
r
 
I 
1L 
- 
u(n) = x(n) - r sin(q)y(n - 1 )  + r cos(wIJ)v(ri - I )  
y (n) = r sin(wo)v(n - I ) + r cos(w,,)v(n - I ) 
-r sinwo 
Taking the z-transform of the first equation. we have 
r cos wo 
r cos wo 
" 
r 
1 
Solving for V(z) yields 
" 
L 
0 
X(z) - r sin(wo)z-' Y (z) 
V(z) = 
I - r cos(wo)z-~ 
Substituting this into the :-transform of the second difference equation gives 
Solving this equation for Y (z). we have 
Therefore, the system function is 
(b) This filter has poles at 
.. - 
r c * l l u l l  - 
- - 
- r cos q, * jr sin q, 
Thus, the coefficients in this structure are the real and imaginary parts of the pole locations. Therefore, if the 
coefficients are quantized to B  + I bits. the poles will lie at the intersections of 2'+ ' evenly spaced horizontal 
and vertical lines in the i-plane. These positions are illustraled in the figure below for the first quadrant when 
B + 1 = 4 .  

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
Note that, compared with the direct form structure, the allowable pole locations are uniformly distributed 
within the unil circle. The cost for this uniform spacing is four multiplies and three additions per output value, 
compared to only two multiplications and two additions for a direct form implementation. This extra cost may 
be worthwhile, particularly for low-pass filters that have poles close to the unit circle in the vicinity of z = 1, 
where the density of the allowable pole locations is sparse in the direcl form implementation compared to the 
coupled form implementation. 
8.35 
A white noise sequence e(n) with variance 0; is input to a filter with a system function 
(1 + 2zr2)(1 + 3zrI)(l + z r ' )  
H (z) = 
(1 + iz-2)(1 + iz-1) 
Find the variance of the output sequence. 
The variance of the output sequence is 
For the given filter, note that 
where the firs1 two terms are allpass filters with 
Therefore, 
Using Parseval's theorem, 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
we find 
Thus. we have 
0: = 720,' 
8.36 
Consider the following cascade of two first-order all-pole filters: 
(a) Find the variance of the round-off noise at the output of the cascade for an 8-bit processor with 
rounding. 
(h) Repeat for the case in which the order of the cascade is reversed. 
(a) A model for the round-off noise is shown in the following figure: 
where the variance of each noise source is equal to 
The system function of the filter is 
H ( z )  = 
and the unit sample response is 
Note that because el(n) is filtered by h(n), and e2(n) is only filtered by the second filter in the cascade, which 
has a unit sample response 
h d n )  = (:)nw 
the output noise, f (n), is 
f ( n )  = 
* h(n) + e d n )  * h d n )  
Therefore, the variance of f (n) is 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
CHAP. 81 
With 
we have 
Next, we have 
Therefore, the variance of the round-off noise at the output of the filter is 
which, for an 8-bit processor (B = 7), is 
2-28 
O: = 2.8953 - 
= 0.2413 . 2-l4 = I .4726 . 
12 
(b) If the order of the cascade is reversed. we have the following network: 
The variance of the round-off noise due to el(n) is the same as in part (a), but because the unit sample response 
of the second system in the cascade is now 
h;?(n) = ( i ) n u ( n )  
the variance of the noise due to ez(n) is 
Thus, the variance of the round-off noise at the output of the filter is 
a: = 1.82860: + 1.33330: = 3.16190; 
which, for an 8-bit processor is 
With this structure, the round-off noise is slightly larger. 
8.37 
Consider a linear shift-invariant system with a system function 
1 - 0 . 4 ~ ~ '  
H (z) = 
(1 - 0.62-')(I - 0.8~-1) 
Suppose that this system is implemented on a 16-bit fixed-point processor and that the sums of products 
are accumulated prior to quantization. Let a: 
be the variance of the round-off noise. 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(a) If the system is implemented in direct form 11, find the variance of the round-off noise at the output 
of the filter. 
(b) Repeat part (a) if the system is implemented in parallel form. 
(a) The direct form I1 implementation of this system is shown in the figure below along with the two round-off 
noise sources. 
Because the sum 
x(n) + 1.4w(n - 1) - 0.48w(n - 2) 
may be accumulated prior to quantization, the variance of the noise el(n) is a:. 
Similarly, because the sum 
may be accumulated prior to quantization, the variance of the noise e2(n) is also me2. With cl(n) being filtered 
by the system and with ez(n) being noise that is simply added to the output, the quantization noise at the output 
of the filter is 
f (n) = h(n) * el (n) + eAn) 
which has a variance equal to 
To find the unit sample response of the filter, we expand H(z) in a partial fraction expansion as follows: 
I - 0.4~-I 
- - 1 
H ( z )  = 
- 
2 
( 1  - O.6zr1)(I - 0.82-I) 
1 - 0.62-I 
+ 1 - 0.8~-I 
Therefore, 
h(n) = -(0.6)"u(n) + 2(0.8)"u(n) 
and 
lh(n)12 = [-(0.6)" + 2(0.8)"]2u(n) = [(0.6)'" - 4(0.48)" + 4(0.8)~"]u(n) 
Evaluating the sum of the squares of h(n), we have 
Thus, the variance of the output noise is 
0; = 6u: 
(b) Using the partial fraction expansion for H(z) given in part (a), the parallel form implementation of this filter is 
shown in the following figure: 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
As indicated in the figure, there are two noise sources. The first, cl (n), is filtered with a first-order all-pole filter 
that has a unit sample response 
hl(n) = (0.8)"1~(~) 
and the second, ez(n), is filtered with a first-order all-pole filter that has a unit sample response 
Because the output noise is 
f(n) = cJl(n) * I I I ( ~ )  
+ r 2 ( n )  * hz(n) 
the variance of f (n) is 
8.38 
A linear shift-invariant system with a system function of the form 
is to be implemented as a cascade of N second-order sections. where each section is realized in either 
direct form I or 11 or in their transposed forms. How many different cascaded realizations are possible. 
Let us assume that each factor in H(z) is unique, so that there arc N different second-order polynomials in the 
numerator and the same number of polynomials in the denominator. In this case. there are N! different pairings 
of factors in the numerator with factors in the denominator. In addition, for each of these pairings, there are N! 
different orderings of these sections. Therefore. there are (N !)' different pairings and orderings. With four different 
structures for each section (direct form I, direct form 11, transposed direct form I, and transposed direct form 11), 
there are a total of 4N(N!)2 different realizations. For a tenth-order system (N = 5). this corresponds to 14,745,600 
different structures. This is why general pairing and ordering rules are important. 
8.39 
Let H(z) be a pth-order allpass filter with a gain of 1 that is implemented in direct form I1 using a 
processor with B + 1 bits. 
(a) If the product of two (B + 1)-bit numbers is rounded to B + I bits before any additions are per- 
formed, find the variance of the round-off noise at the output of the filter. 
(b) Repeat part (a) for the case in which sums of products are accumulated prior to quantization. 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(a) The system function for a pth-order allpass filter has the form 
a(p) + a ( p  - l)z-I + . . . + z-" 
H (z) = 
1 + a(l)z-' + . . . + a(p)z-P 
With a direct form I1 implementation of this system, rounding each product to 5 + 1 bits prior to performing 
any additions, we have the round-off noise model shown in the following figure: 
where the variance of each noise source is 
2-28 
u2 = - 
12 
Note, however, that this noise model may be simplified as illustrated in the following figure: 
where 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
Assuming that each noise source is uncorrelated with the others, the variances of e,(n) and eh(n) are 
u,Z=,,u; 
~ ; = ~ u ;  
Because the output noise is 
f (n) = e d n )  * h(n) + eh(n) 
where h(n) is the unit sample response of the allpass filter, the variance of f (n) is 
Equivalently, we may write this using Parseval's theorem as follows: 
Because H(e1") is an allpass filter with I H (elW)I = I, the variance of the output noise is 
a: = u,Z + 02 = 2pu,' 
(b) If the products are accumulated prior to quantization, the variances of e,(n) and eh(n) in the noise model given 
in part (a) will be reduced by a factor of p: 
Therefore, the variance of the output noise becomes 
8.40 
In the figure below are direct form I1 and transposed direct form I1 realizations of the first-order system 
(a) Direct form 11. 
(b) Transposed direct form 11. 
Assume that both systems are implemented using ( B  + 1)-bit fixed-point arithmetic and that all products 
are rounded to B + 1 bits before any additions are performed. 

IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
(a) Using a linear noise model for the round-off noise, find the variance of the round-off noise at the 
output of the direct form I1 filter. 
(b) Repeat part (a) for the transposed direct form I1 filter. 
(c) How would the variance of the output noise change if the sums of products were accumulated prior 
to quantization? 
( a )  The linear noise model for round-off noise in the direct form I1 implementation is shown in the figure below. 
The variance of the noise eo(n) is a: and the variance of el ( n )  is 2 4 ,  where 
Because the output noise is 
f ( n )  = 
+ e d n )  * h(n) 
where h(n) is the unit sample response of the filter, the variance of the output noise is 
With 
it follows that the unit sample response is 
Therefore, 
and the output noise variance is 
(b) For the transposed direct form I1 implementation, the noise model is as follows, 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
where the variance of eo(n) is a:, 
and the variance of e l ( n )  is 2u:. Note that because neither noise source is 
filtered by the zeros of the system, an equivalent model for the generation of the filtered noise f ( n )  is as shown 
in the figure below, 
where e(n) = en@) + e l ( n  - I). Because e&) and e l  ( n )  are uncorrelated, the variance of e(n) is 30:. and the 
variance of the output noise is 
(c) If we accumulate the sums of products prior to quantization, for the direct form I1 implementation, the variance 
of the noise el(n) would be a,' instead of 2u:, and everything else remains the same. For the transposed direct 
form I1 structure, on the other hand, the variance of el ( n )  would be 0; 
instead of 2u:, which implies that the 
variance of e(n) would be 2u:, 
8.41 
A sixth-order filter with a system function 
H (z) = 
( 1  + zp2)(I + ~ - ' ) ~ ( 1  
- 2cos(lr/6)z-' + zp2) 
(1 - 1.6 cos(lr/4)z-I + 0.64~-~)(1 + 1.6 cos(lr/4)z-I + 0.64zr2)(1 - 1.8 cos(rr/6)z-' + 0.81r2) 
is to be implemented as a cascade of second-order sections. Considering only the effects of round-off 
noise, determine what the best pole-zero pairing is, and the best ordering of the second-order sections. 
Note that all six zeros of this system lie on the unit circle, with two at z = -1, a complex pair at z = f 
j, and a 
complex pair at z = eiJ"I6. The poles, on the other hand, are at z = 0.8e*J"I4, z = 0 . 8 e * ~ ~ ~ J ~ ,  
and z = 0.9e*J"16. 
A pole-zero diagram showing each of these poles and zeros is given below. 

352 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
The general strategy for pairing poles with zeros is to first find the two poles that are closest to the unit circle, in this 
case those at z = 0.9e*jnI6, and pair these with the two zeros that are closest to these poles, which are those on the 
unit circle at z = e*j"I6. Thus, the first pole-zero pairing yields the second-order section 
Of the remaining poles, we next find the pair that is closest to the unit circle, which are either those at z = 0.8ei'R/4 
or those at z = 0.8efj3x/4. Let us arbitrarily select the first of these, Paired with these poles would then be the zeros 
at z = j, which gives us the second-order section 
Finally, for the last section we have 
The cascade is then done in the reverse order, with the first second-order section being H3(z), followed by H&), 
and then Hl(z). 
Supplementary Problems 
Structures for FIR Systems 
Find the unit sample response for the following network: 
z-I 
--I 
2-I 
. 
- 1  
What is the frequency response of the following network? 
_-I 
z-I 
What is the minimum number of multiplications and additions and delays required to implement a linear phase filter 
with h(n) = 0 for n < 0 and n r 63? 
How many multiplies, adds, and delays are required to implement the filter 
I 
0 
otherwise 
using (a) a direct form structure and (b) a frequency sampling structure? 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
8.46 
Draw a frequency sampling structure for the FIR high-pass filter of length N = 32 with 
$ 
k = lS,l6, 17 
H(k) = 
0 
else 
Structures for IIR Systems 
8.47 
Find the system function for the following network, where az-' is a unit delay combined with a multiplication by a :  
.x(n) 
~ ( n )  
8.48 
Find the unit sample response of the following network: 
8.49 
Find the constant A so that the second-order all-pole filter 
A 
H ( z )  = 
- 
I + a , z - '  + a 2 z r 2  
has unit gain at w = 0, and find a structure that only requires two multiplications. 
8.50 
What is the system function corresponding to the following filter structure? 
8.51 
Find the transposed direct form 11 realization of the system described by the difference equation 
Lattice Filters 
8.52 
What is the frequency response of the FIR filter that has reflection coefficients r l  = r2 = . . . = r9 = 0 and 
I-lo = I? 

354 
1MPLEMENTATION OF DISCRETE-TIME SYSTEMS 
[CHAP. 8 
8.53 
Draw a lattice filter implementation for the allpass filter 
0.25 - 0.52-' + z-2 
H (z) = 
1 - 0.5~-I + 0.25r2 
8.54 
If the system function of a causal filter is 
I 
H(z) = 
I + I. lz-I + 0 . 9 r 2  + 1 
+ 0 . 5 ~ - ~  
is this filter stable? 
8.55 
If H(z) is an FIR filter with reflection coefficients TI, r2. . . . , r,,, what is the system function of the filterG(i) with 
reflection coefficients rI. 
0. r2. 0, rl, . . . - 0 ,  r,,? 
8.56 
Suppose that the last reflection coefficient of an FIR lattice filter. not necessarily minimum phase, has unit magnitude 
Ir,,l = I. What general statements can be made about the system function H(z)? 
8.57 
Find the system function of the following lattice filter: 
r(n) 
Finite Word-Length Effects 
(a) Whal fraction does the binary number x = 1.01 101 represent in one's complemenr notation'? (b) What about 
two's complemenl notation? 
White noise with a variance < is input to a linear shifi-invariant filter with a system function 
Find the variance of the noise at the output of the filter. 
Consider the following cascade of two tirst-order filters, where la1 > Ibl: 
Without explicitly evaluating the variance, determine whether the variance of the round-off noise at the output of 
this filter will be larger or smaller if the order of the cascade is reversed. 
Consider a linear shift-invariant system with a system function 
Assume that each product is rounded to 16 bits before any additions are performed, and let a: 
be the variance of the 
round-off noise. 

CHAP 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
355 
(a) If this system is implemented in direct form 11, compute the variance of the round-off noise at the output of the 
filter, a:, 
due to all noise sources. 
(h) Repeat part (a) if the system is implemented in direct form I 
8.62 
Suppose that an FIR filter with a system function 
is implemented on a 16-bit fixed-point processor. If sums of products are accumulated prior to rounding, find the 
variance of the round-off noise at the output of the filter. 
8.63 
The second-order system 
1 
H (z) = 1 - 1.2728~-' + O.XIZ--~ 
is implemented in direct form I1 using 16-bit fixed point arithmetic. Assuming that all sums of products are 
accumulated prior to rounding, find the quantization noise power at the filter output. 
8.64 
To minimize the effects of round-off noise, what is the best pairing of poles and zeros into second-order sections for 
the system 
(1 + 0 . 9 ~ - ~ ) ( 1  
- 2.4cos(0.75n)z-' + 1 . 4 4 ~ - ~ )  
H(z) = (1 - 1.4 cos(O.251r)z-' + 0.49r2)(1 - 1.8 cos(O.9lr)z' + 0.8 1 zrZ) 
and what is the best ordering for the second-order sections? 
Answers to Supplementary Problems 
8.44 
63 delays, 63 additions, and 32 multiplications. 
8.45 
(a) 33 multiplies, 63 adds, and 63 delays. (b) 9 multiplies, 10 adds, and 69 delays 

356 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
8.49 
A = I + a, + az, 
and the structure is 
.W) 
[CHAP. 8 
8.54 
No, the filter is unstable because r3 = 1.2. 
8.55 
G ( z )  = H (z2). 
8.56 
The system function will have generalized linear phase, H ( z )  = f 
z-PH(z-I). 
8.58 
(a) 6. (b) $. 

CHAP. 81 
IMPLEMENTATION OF DISCRETE-TIME SYSTEMS 
357 
8.60 
The variance of the output noise will be larger if the pole closest to the unit circle is the second filter in the cascade. 
Thus, the output noise variance will be larger if the order of the cascade is reversed. 
8.61 
(a) a: = 2.70;. (b) o: = 2.20:. 
8.62 
The variance of the output noise is simply the noise variance, a: = .h2-2B = 12-'O 
12 
' 
8.63 
= 0.20770; where 0: = h2-30. 
1 + O . ~ Z - ~  
1 - 2.4 cos(0.75n)z-I + 1 . 4 4 ~ - ~  
8.64 
Hl(z) = - 
and H2(z) = 
1 - 1.4 cos(0.25n)z-' + 0.49zr2 ' 
1 - 1.8cos(0.9n)z-I + 0 . 8 1 ~ - ~  
' 

Chapter 9 
Filter Design 
9.1 INTRODUCTION 
This chapter considers the problem of designing a digital filter. The design process begins with the filter specifi- 
cations, which may include constraints on the magnitude and/or phase of the frequency response, constraints on 
the unit sample response or step response of the filter, specification of the type of filter (e.g., FIR or IIR), and the 
filter order. Once the specifications have been defined, the next step is to find a set of filter coefficients that pro- 
duce an acceptable filter. After the filter has been designed, the last step is to implement the system in hardware 
or software, quantizing the filter coefficients if necessary, and choosing an appropriate filter structure (Chap. 8). 
9.2 FILTER SPECIFICATIONS 
Before a filter can be designed, a set of filter specifications must be defined. For example, suppose that we would 
like to design a low-pass filter with a cutoff frequency w,.. The frequency response of an ideal low-pass filter 
with linear phase and a cutoff frequency w,. is 
which has a unit sample response 
sin(n - a)w,. 
hd(n) = n(t7 - a )  
Because this filter is unrealizable (noncausal and unstable), it is necessary to relax the ideal constraints on the 
frequency response and allow some deviation from the ideal response. The specifications for a low-pass filter 
will typically have the form 
as illustrated in Fig. 9-1. Thus, the specifications include the passband cutoff frequency, w,, the stopband cutoff 
frequency, w,, the passband deviation, 6,. and the stopband deviation, 6,. The passband and stopband deviations 
I 
I 
I 
Passband 4 
Stopband -i 
I 
I 
I 
Fig. 9-1. Filter specifications for a low-pass filter, 

CHAP. 91 
FILTER DESIGN 
are often given in decibels (dB) as follows: 
and 
a,. = -2010g(6,~) 
The interval [w,, w,] is called the trunsitiotr hand. 
Once the filter specifications have been defined, the next step is to design a filter that meets these specifica- 
tlons. 
9.3 FIR FILTER DESIGN 
The frequency response of an N th-order causal FIR filter is 
and the design of an FIR filter involves finding the coefficients h(n) that result in a frequency response that 
satisfies a given ser of filter specifications. FIR filters have two important advantages over 1IR filters. First, they 
are guaranteed to be stable, even after the filter coefficients have been quantized. Second, they may be easily 
constrained to have (generalized) linear phase. Because FIR filters are generally designed to have linear phase, 
in the following we consider the design of linear phase FIR filters. 
9.3.1 Linear Phase FIR Design Using Windows 
Let hd(n) be the unit sample response of an ideal frequency selective filter with linear phase, 
Because hd(n) will generally be infinite in length, it is necessary to find an FIR approximation to Hd(ejw). With 
the window design method, the filter is designed by windowing the unit sample response, 
where w(n) is a finite-length window that is equal to zero outside the interval 0 
n 5 N and is symmetric about 
its midpoint: 
w(n) = w(N - n )  
The effect of the window on the frequency response may be seen from the complex convolution theorem, 
Thus, the ideal frequency response is snzoothed by the discrete-time Fourier transform of the window, W(ejW). 
There are many different types of windows that may be used in the window design method, a few of which 
are listed in Table 9- 1 .  
How well the frequency response of a filter designed with the window design method approximates a desired 
response, H~(&"). is determined by two factors (see Fig. 9-2): 
1. 
The width of the main lobe of W (el"). 
2. The peak side-lobe amplitude of W(ejU). 

FILTER DESIGN 
[CHAP. 9 
I 
Peak Sidelobe 
I 
W 
- 
?r 
-4 
A it 
Mainlobe 
'IT 
Width 
Fig. 9-2. The DTFT of a typical window, which is characterized by the width of its main lobe. A. 
and the peak amplitude of its side lobes, A, relative to the amplitude of W(d'") at o = 0. 
Ideally, the main-lobe width should be narrow, and the side-lobe amplitude should be small. However, for a 
fixed-length window, these cannot be minimized independently. Some general properties of windows are as 
follows: 
1. As the length N of the window increases, the width of the main lobe decreases, which results in a decrease 
in the transition width between passbands and stopbands. This relationship is given approximately by 
where A f is the transition width, and c is a parameter that depends on the window. 
2. The peak side-lobe amplitude of the window is determined by the shape of the window, and it is 
essentially independent of the window length. 
3. If the window shape is changed to decrease the side-lobe amplitude, the width of the main lobe will 
generally increase. 
Listed in Table 9.2 are the side-lobe amplitudes of several windows along with the approximate transition width 
and stopband attenuation that results when the given window is used to design an N th-order low-pass filter. 
Table 9-1 Some Common Windows 
Rectangular 
Hanning' 
Hamming 
Blackman 
I 
O s n s N  
w ( n )  = 
0 
else 
10 
else 
I0 
else 
I 0  
else 
'In the literature, this window is also called a Hann window or a von Hann window. 

CHAP. 91 
FILTER DESIGN 
EXAMPLE 9.3.1 
Suppose that we would like to design an FIR linear phase low-pass filter according to the following 
specifications: 
Table 9-2 The Peak Side-Lobe Amplitude of Some Common Windows and the Approximate 
Transition Width and Stopband Attenuation of an Nth-Order Low-Pass Filter 
Designed Using the Given Window. 
For a stopband attenuation of 20 log(0.O I ) = -40 dB. we may use a Hanning window. Although we could also use a Hamming 
or a Blackman window, these windows would overdesign the filter and produce a larger stopband attenuation at the expense 
of an increase in the transition width. Because the specification calls for a transition width of Aw = w, - w, = 0.02n, or 
Af = 0.01, with 
NAf = 3.1 
Window 
Rectangular 
Hanning 
Hamming 
Blackman 
for a Hanning window (see Table 9.2), an estimate of the required filter order is 
The last step is to find the unit sample response of the ideal low-pass filter that is to be windowed. With a cutoff frequency 
of w,. = (w, + w,)/2 := 0.2n, and a delay of cr = N/2 = 155, the unit sample response is 
Side-Lobe Amplitude (dB) 
- 13 
-31 
-41 
-57 
In addition to the windows listed in Table 9-1, Kaiser developed a family of windows that are defined by 
where a = N/2, and lo(.) 
is a zeroth-order modified Bessel function of the first kind, which may be easily 
generated using the power series expansion 
Transition Width (.A f )  
0.9/N 
3.1IN 
3.3/N 
5S/N 
The parameter 
determines the shape of the window and thus controls the trade-off between main-lobe width 
and side-lobe amplitude. A Kaiser window is nearly optimum in the sense of having the most energy in its main 
lobe for a given side-lobe amplitude. Table 9-3 illustrates the effect of changing the parameter /3. 
There are two empirically derived relationships for the Kaiser window that facilitate the use of these windows 
to design FIR filters. The first relates the stopband ripple of a low-pass filter, a, = -20 log(6,), to the parameter B, 
Stopband Attenuation (dB) 
-21 
-44 
-53 
- 74 

FILTER DESIGN 
Table 9-3 Characteristics of the Kaiser Window as a Function of 0 
[CHAP. 9 
Parameter 
B 
Side Lobe 
(dB) 
Transition Width 
( N  Af 
Stopband Attenuation 
(dB) 
The second relates N to the transition width A f and the stopband attenuation a,, 
Note that if a, < 21 dB, a rectangular window may be used (B = O), and N = O.9/A f. 
EXAMPLE 9.3.2 Suppose that we would like to design a low-pass filter with a cutoff frequency w, = n/4, a transition 
width Aw = 0.02n, and a stopband ripple 6, = 0.01. Because a, = -20 log(O.01) = -40. the Kaiser window parameter is 
With A f = Aw/2n = 0.01, we have 
where 
is the unit sample response of the ideal low-pass filter. 
Although it is simple to design a filter using the window design method, there are some limitations with 
this method. First, it is necessary to find a closed-form expression for hd(n) (or it must be approximated using 
a very long DFT). Second, for a frequency selective filter, the transition widths between frequency bands, and 
the ripples within these bands, will be approximately the same. As a result, the window design method requires 
that the filter be designed to the tightest tolerances in all of the bands by selecting the smallest transition width 
and the smallest ripple. Finally, window design filters are not, in general, optimum in the sense that they do not 
have the smallest possible ripple for a given filter order and a given set of cutoff frequencies. 
9.3.2 Frequency Sampling Filter Design 
Another method for FIR filter design is the frequency sampling approach. In this approach, the desired frequency 
response, Hd(eJ"), is first uniformly sampled at N equally spaced points between 0 and 27r: 

CHAP. 91 
FILTER DESIGN 
These frequency samples constitute an N -point DFT, whose inverse is an FIR filter of order N - 1: 
The relationship between h(n) and hd(n) (see Chap. 3) is 
Although the frequency samples match the ideal frequency response exactly, there is no control on how the 
samples are interpolated between the samples. Because filters designed with the frequency sampling method 
are not generally vely good, this method is often modified by introducing one or more transition samples as 
illustrated in Fig. 9-3. These transition samples are optimized in an iterative manner to maximize the stopband 
attenuation or minimize the passband ripple. 
Transition 
Band 
Fig. 9-3. Introducing a transition sample with an amplitude of A ,  in the 
frequency sampling method. 
9.3.3 Equiripple Linear Phase Filters 
The design of an FIR low-pass filter using the window design technique is simple and generally results in a filter 
with relatively good performance. However, in two respects, these filters are not optimal: 
1. 
First, the passband and stopband deviations, 6, and 6,, are approximately equal. Although it is common 
to require S, to be much smaller than S,, these parameters cannot be independently controlled in the 
window design method. Therefore, with the window design method, it is necessary to overdesign the 
filter in the passband in order to satisfy the stricter requirements in the stopband. 
2. Second, for most windows, the ripple is not uniform in either the passband or the stopband and generally 
decreases when moving away from the transition band. Allowing the ripple to be uniformly distributed 
over the entire band would produce a smaller peak ripple. 
An equiripple linear phase filter, on the other hand, is optimal in the sense that the magnitude of the ripple 
is minimized in all bands of interest for a given filter order, N. In the following discussion, we consider the 
design of a type I linear phase filter. The results may be easily modified to design other types of linear phase 
filters. 
The frequency response of an FIR linear phase filter may be written as 

364 
FILTER DESIGN 
[CHAP. 9 
where the amplitude. A(eJw), is a real-valued function of w. For a type I linear phase filter, 
h(n) = Iz(N - n) 
where N is an even integer. The symmetry of h(n) allows the frequency response to be expressed as 
where L = N / 2  and 
The terms cos(kw) may be expressed as a sum of powers of cos w in the form 
where T&) is a kth-order Chebyshev polynomial [see Eq. (9.9)]. Therefore, Eq. (9.4) may be written as 
Thus, A(ejw) is an Lth-order polynomial in coso. 
With Ad(ei") a desired amplitude, and W(eiw) a positive weighting function, let 
be a weighted approximation error. The equiripple filter design problem thus involves finding the coefficients 
a(k) that minimize the maximum absolute value of E(ejU) over a set of frequencies, F, 
For example, to design a low-pass filter, the set F will be the frequencies in the passband. [O, w,,], and the 
stopband, 
n], 
as illustrated in Fig. 9-4. The transition band, (w,, o,), is a don't care region, and it is not 
3 
W 
Don't Care 
Fig. 9-4. The set R in the equiripple filter design problem, consisting of the passband 
[0, w,] and the stopband [op. 
o,]. The transition band (o,, w,) is a don't care region. 

CHAP. 91 
FILTER DESIGN 
365 
considered in the minimization of the weighted error. The solution to this optimization problem is given in the 
alternation theorem. which is as follows: 
Alternation Theorem: Let 3 be a union of closed subsets over the interval [O. n]. For a 
positive weighting function w(dW), a necessary and sufficient condition for 
to be the unique function that minimizes the maximum value of the weighted error I E(eJW)I 
over the set 3 is that the E(eJW) have at least L + 2 alternations. That is to say, there must be 
at least L + 2 extremalfiequencies. 
over the set 3 such that 
E(eJWk) = - ~ ( e J ~ ~ + l )  
k = 0, I , .  . . . L 
and 
~ ~ ( e j ~ ~ ) !  
= m a x ~ ~ ( e j ~ ) l  
k = 0, I ,  ... . L + 1 
W € F  
Thus, the alternation theorem states that the optimum filter is equiripple. Although the alternation theorem 
specifies the minimum number of extremal frequencies (or ripples) that the optimum filter must have, it may 
have more. For example, a low-pass filter may have either L + 2 or + 3 extremal frequencies. A low-pass 
filter with L + 3 extrema is called an extraripplefilter. 
From the alternation theorem, it follows that 
where 
E = f 
max I E ( ~ ; ~ ) J  
W € F  
is the maximum absolute weighted error. These equations may be written in matrix form in terms of the unknowns 
a(O), . . . . a(L) and E as follows: 
Given the extremal frequencies, these equations may be solved for a(O), . . . , a(L) and c. To find the extremal 
frequencies, there is an efficient iterative procedure known as the Parks-McClellan algorithm, which involves 
the following steps: 
1. Guess an initial set of extremal frequencies. 
2. 
Find r by solving Eq. (9.5). The value of c has been shown to be 

where 
FILTER DESIGN 
[CHAP. 9 
3. Evaluate the weighted error function over the set .F by interpolating between the extremal frequencies 
using the Lagrange interpolation formula. 
4. 
Select a new sel of extremal frequencies by choosing the L + 2 frequencies for which the interpolated 
error function is maximum. 
5 .  If the extremal frequencies have changed, repeat the iteration from step 2. 
A design formula that may be used to estimate the equiripple filter order for a low-pass filter with a transition 
width A f ,  passband ripple 6,. and stopband ripple 6, is 
EXAMPLE 9.3.3 Suppose thal we would like to design an equiripple low-pass filter with a passband cutoff frequency 
w,, = 0 . 3 ~ .  
a stopband cutoff frequency o, = 0 . 3 5 ~ ,  
a passband ripple of 6, = 0.01, and a stopband ripple of 6, = 0.001. 
Estimating the filter using Eq. (9.h), we find 
Because we want the ripple in Ihe stopband to be I0 times smaller than the ripple in the passband, the error must be weighted 
usmg the weighting function 
Using the Parks-McClellan algorilhm to design the filter. we obtain a filter with the frequency response magnitude shown 
below. 
9.4 IIR FILTER DESIGN 
There are two general approaches used to design IIR digital filters. The most common is to design an analog IIR 
filter and then map it into an equivalent digital filter because the art of analog filter design is highly advanced. 
Therefore, it is prudent to consider optimal ways for mapping these filters into the discrete-time domain. Fur- 
thermore, because there are powerful design procedures that facilitate the design of analog filters, this approach 

CHAP. 91 
FILTER DESIGN 
367 
to IIR filter design is relatively simple. The second approach to design IIR digital filters is to use an algorithmic 
design procedure, which generally requires the use of a computer to solve a set of linear or nonlinear equations. 
These methods may be used to design digital filters with arbitrary frequency response characteristics for which 
no analog filter prototype exists or to design filters when other types of constraints are imposed on the design. 
In this section, we consider the approach of mapping analog filters into digital filters. Initially, the focus 
will be on the design of digital low-pass filters from analog low-pass filters. Techniques for transforming these 
designs into more general frequency selective filters will then be discussed. 
9.4.1 Analog Low-Pass Filter Prototypes 
To design an IIR digital low-pass filter from an analog low-pass filter, we must first know how to design an 
analog low-pass filter. Historically, most analog filter approximation methods were developed for the design of 
passive systems having a gain less than or equal to 1. Therefore, a typical set of specifications for these filters is 
as shown in Fig. 9-5(a), with the passband specifications having the form 
( ( I )  Specifications in terms of 
and 6,. 
(I?) Specifications in terms of e and A. 
Fig. 9-5. Tivo different conventions for specifying the passband and stopband deviations for an analog 
low-pass filter. 
Another convention that is commonly used is to describe the passband and stopband constraints in terms of the 
parameters E and A as illustrated in Fig. 9-5(h). Two auxiliary parameters of interest are the dist.riminatior7 
factor, 
E 
] =-- fin 
and the selectivity factor 
Q 
k =" 
Q.5 
The three most commonly used analog low-pass filters are the Butterworth, Chebyshev, and elliptic filters. 
These filters are described below. 
Butterworth Filter 
A low-pass Butterworth filter is an all-pole filter with a squared magnitude response given by 

368 
FILTER DESIGN 
[CHAP. 9 
The parameter N is the order of the filter (number of poles in the system function), and Q,. is the 3-dB cutoff 
frequency. The magnitude of the frequency response may also be written as 
where 
The frequency response of the Butterworth filter decreases monotonically with increasing 0, and as the filter 
order increases, the transition band becomes narrower. These properties are illustrated in Fig. 9-6, which shows 
IH,(jQ)l for Butterworth filters of orders N = 2,4,8, and 12. Because 
from the magnitude-squared function, we may write 
I 
Fig. 9-6. The magnitude of the frequency response for Butterworth filters of orders 
N = 2.4, 8. 
Therefore, the poles of G,(s) are located at 2N equally spaced points around a circle of radius Q,., 
3,: = ( - I ) ~ / ' ~ ( ~ R , )  
= Q, expIj 
k = 0 .  1 ,  .... 2 N - 1  
2 N 
( N  + +2k)n I 
(9.7) 
and are symmetrically located about the jR-axis. Figure 9-7 shows these pole positions for N = 6 and N = 7. 
The system function, H,(s), is then formed from the N roots of H,(s)H,(-s) 
that lie in the left-half s-plane. 
For a iiormuli-.ed Butterworth filter with Q,. = 1, the system function has the form 
I 
H,(s) = - 
- 
- 
I 
A N ( ~ )  sN + alsN-' + ... + aN-Is + aN 
(9.8) 
Table 9-4 lists the coefficients of AN (s) for I 
N 5 8. Given Qp, Q,7, S,,, and S,, the steps involved in designing 
a Butterworth filter are as follows: 
I .  
Find the values for the selectivity factor, k, and the discrimination factor, d. from the filter specifications. 
2. 
Determine the order of the filter required to meet the specifications using the design formula 
log d 
N Z -  log k 

CHAP. 91 
FILTER DESIGN 
(u) Order N = 6. 
(h) Order N = 7. 
Fig. 9-7. The poles of H,(a)H,(-s) 
for a Butterworth filter of order N = 6 and N = 7. 
Table 9-4 The Coefficients in the System Function of a Normalized Butterworth Filter (a, 
= I) for 
3. Set the 3-dB cutoff frequency, Q,, to any value in the range 
n,[(i - J,)-~ - i
~
-
~
/
~
~
 
5 Q, 5 c2,[q2 - 1 1 - l ' ~ ~  
4. 
Synthesize the system function of the Butterworth filter from the poles of 
Orders I 5 N 5 8 
1 
Ga(s) = Ha(s)Ha(-s) = 
I + ( S / ~ Q , ) ~ ~  
that lie in the left-half s-plane. Thus, 
a3 
1 .om 
2.6131 
5.2361 
9.1416 
14.59 18 
2 1.8462 
where 
EXAMPLE 9.4.1 Let us design a low-pass Butterworth filter to meet the following specifications: 
f, =6kHz 
f, = 10kHz 
6, = 6 ,  =0.l 
ad 
1 .OOOO 
3.2361 
7.4641 
14.59 I8 
25.6884 
- 
as 
1 .OW0 
3.8637 
10.0978 
2 1.8462 

370 
FTLTER DESIGN 
[CHAP. 9 
First, we compute the discrimination and selectivity factors: 
Because 
log d 
N Z -  
= 5.92 
log k 
it follows that the minimum filter order is N = 6. With 
fp[(l - s,,)-' - 11-'IZN = 6770 
and 
f, [6;' - I ] - . " ~ ~  
= 68 19 
the center frequency, f,, may be any value in the range 
6770 
f,. 5 6819 
The system function of the Butterworth filter may then be found using Eq. (9.8) by first constructing a sixth-order normalized 
Butterworth filter from Table 9-4, 
1 
Hu(s) = sb + 3.8637s5 + 7.4641s4 + 9.1416s' + 7.4641s2 + 3.8637s + I 
and then replacing s with s/ R, SO that the cutoff frequency is 52, instead of unity (see Sec. 9.4.3). 
Chebyshev Filters 
Chebyshev filters are defined in terms of the Chebyshev polynomials: 
These polynomials may be generated recursively as follows, 
with To(x) 
= 1 and Tl(x) 
= x. The following properties of the Chebyshev polynomials follow from Eq. (9.9): 
1. 
For 1x1 5 1 the polynomials are bounded by 1 in magnitude, ITN(x)l 5 1, and oscillate between f 
1. 
For 1x1 > I ,  the polynomials increase monotonically with x. 
2. TN(l) 
= I for all N. 
3. TN (0) = f 
l for N even, and TN (0) = 0 for N odd. 
4. 
All of the roots of TN(x) 
are in the interval - 1 _< x I 
1. 
There are two types of Chebyshev filters. A type I Chebyshev filter i s  all-pole with an equiripple passband 
and a monotonically decreasing stopband. The magnitude of the frequency response is 
where N is the order of the filter, Q, is the passband cutoff frequency, and 6 is a parameter that controls 
the passband ripple amplitude. Because T ~ ( Q / Q ~ )  
varies between 0 and 1 for 
< Q,,, IH,(~R)I~ 
oscillates 
between I and 1/(1 + e2). As the order of the filter increases, the number of oscillations (ripples) in the passband 
increases, and the transition width between the passband and stopband becomes narrower. Examples are given 
in Fig. 9-8 for N = 5,6. 

CHAP. 91 
FILTER DESIGN 
(a) Odd order (N = 5). 
(6) Even order (N = 6). 
Fig. 9-8. Frequency response of Chebyshev type I filter for orders N = 5 and N = 6. 
The system function of a type I Chebyshev filter has the form 
where H,(O) = ( 1  - c2)-'I2 if N is even, and H,(O) = 1 if N is odd. Given the passband and stopband cutoff 
frequencies, Q, and Q,, and the passband and stopband ripples, 8, and 6, (or the parameters E and A), the steps 
involved in designing a type I Chebyshev filter are as follows: 
Find the values for the selectivity factor, k, and the discrimination factor, d. 
Determine the filter order using the formula 
Form the rational function 
where E = [(l - s,)-~ - 1 1 l / ~ ,  and construct the system function H,(s) by taking the N poles of G,(s) 
that lie in the left-half s-plane. 
EXAMPLE 9.4.2 
If we were to design a low-pass type I Chebyshev filter to meet the specifications given in Example 9.4.1 
where we found d = 0.0487 and k = 0.6, the required filter order would be 
or N = 4. Therefore, with 
and 
then 
where 52, = 2n(6000). 

372 
FILTER DESIGN 
[CHAP. 9 
A type I1 Chebyshev filter, unlike a type 1 filter, has a monotonic passband and an equiripple stopband, and 
the system function has both poles and zeros. The magnitude of the frequency response is 
where N is the order of the filter, 52, is the passband cutoff frequency, R, is the stopband cutoff frequency, and 
E is the parameter that controls the stopband ripple amplitude. Again, as the order N is increased. the number of 
ripples increases and the transition width becomes narrower. Examples are given in Fig. 9-9 for N = 5,6. 
(a) Odd order (N = 5). 
(b) Even order (N = 6). 
Fig. 9-9. Frequency response of a Chebyshev type I1 filter for orders N = 5 and N = 6. 
The system function of a type I1 Chebyshev filter has the form 
The poles are located at 
Q f 
ak = - 
Sk 
where sk for k = 0, I, . . . , N - 1 are the poles of a type 1 Chebyshev filter. The zeros bk lie on the j52-axis at 
the frequencies for which TN (Q,/ R) = 0. The procedure for designing a type 11 Chebyshev filter is the same as 
for a type I filter, except that 
= ( 8 . ~ ~  
- 1)- ' I 2  
Elliptic Filter 
An elliptic filter has a system function with both poles and zeros. The magnitude of its frequency response is 
where UN(52/Qp) is a Jacobian elliptic function. The Jacobian elliptic function U N ( x )  is a rational function of 
order N with the following property: 
Elliptic filters have an equiripple passband and an equiripple stopband. Because the ripples are distributed uni- 
formly across both bands (unlike the Butterworth and Chebyshev filters, which have a monotonically decreasing 

CHAP. 91 
FILTER DESIGN 
373 
passband and/or stopband), these filters are optimum in the sense of having the smallest transition width for 
a given filter order, cutoff frequency Q,, and passband and stopband ripples. The frequency response for a 
4th-order elliptic filter is shown in Fig. 9- 10. 
Fig. 9-10. The magnitude of the frequency response of a sixth-order elliptic filter. 
The design of elliptic filters is more difficult than the Butterworth and Chebyshev filters, because their 
design relies on the use of tables or series expansions. However, the filter order necessary to meet a given set of 
specifications may be estimated using the formula 
where d is the discrimination factor, and 
where 
with k being the selectivity factor. 
9.4.2 Design of ZZR Filters from AnalogFilters 
The design of a digital filter from an analog prototype requires that we transform ha(t) to h(n) or Ha(s) to H(z). 
A mapping from the s-plane to the z-plane may be written as 
where s = m(z) is the mapping function. In order for this transformation to produce an acceptable digital filter, 
the mapping m(z) should have the following properties: 
I. 
The mapping from the jS2-axis to the unit circle, Izl = 1, should be one to one and onto the unit circle 
in order to preserve the frequency response characteristics of the analog filter. 
2. Points in the left-half s-plane should map to points inside the unit circle to preserve the stability of the 
analog filter. 
3. The mapping m(z) should be a rational function of z so that a rational Ha(s) is mapped to a rational 
H(z). 
Described below are two approaches that are commonly used to map analog filters into digital filters. 

374 
FILTER DESIGN 
[CHAP. 9 
Impulse Invariance 
With the inzpulse invariance method, a digital filter is designed by sampling the impulse response of an analog 
filter: 
h(n) = h,,(nT,) 
From the sampling theorem, it follows that the frequency response of the digital filter, H(eJW), is related to the 
frequency response H,(jR) of the analog filter as follows: 
More generally, this may be extended into the complex plane as follows: 
The mapping between the s-plane and the z-plane is illustrated in Fig. 9-1 I .  Note that although the jR-axis 
maps onto the unit circle, the mapping is not one to one. In particular, each interval of length 2n/T, along the 
jR-axis is mapped onto the unit circle (i.e., the frequency response is aliased). In addition, each point in the 
left-half s-plane is mapped to a point inside the unit circle. Specifically, strips of width 2n/T, map onto the 
z-plane. If the frequency response of the analog filter, H,,(jR). is sufficiently bandlimited, then 
Although the impulse invariance may produce a reasonable design in some cases, this technique is essentially 
limited to bandlimited analog filters. 
To see how poles and zeros of an analog filter are mapped using the impulse invariance method, consider 
an analog filter that has a system function 
The impulse response, hu(t ), is 

CHAP. 91 
FILTER DESIGN 
Therefore, the digital filter that is formed using the impulse invariance technique is 
and the system function is 
Thus, a pole at s = sk in the analog filter is mapped to a pole at z = tJkTs 
in the digital filter. 
The zeros, however, do not get mapped in any obvious way. 
The Bilinear Transformation 
The bilinear transformation is a mapping from the s-plane to the z-plane defined by 
Given an analog filler with a system function H,(s), the digital filter is designed as follows: 
2 1 - 2 - '  
H (z) = Hu (- -) 
T, 1 + z-I 
The bilinear transformation is a rational function that maps the left-half s-plane inside the unit circle and maps 
the jC2-axis in a one-to-one manner onto the unit circle. However, the relationship between the jR-axis and the 
unit circle is highly nonlinear and is given by thefr-equency warpb~g,funcrion 
As a result of this warping, the bilinear transformation will only preserve the magnitude response of analog filters 
that have an ideal response that is piecewise constant. Therefore, the bilinear transformation is generally only 
used in the design of frequency selective filters. 
The parameter T, in the bilinear transformation is normally included for historical reasons. However, it does 
not enter into the design process, because il only scales the jR-axis in the frequency warping function, and this 
scaling may be done in the specification of the analog filter. Therefore, T, may be set to any value to simplify the 
design procedure. The steps involved in the design of a digital low-pass filter with a passband cutoff frequency 
w,, stopband cutoff frequency w.,, passband ripple 6 , ,  and stopband ripple 8, are as follows: 
Prewarp the passband and stopband cutoff frequencies of the digital filter, w, and o,, 
, using the inverse 
of Eq. (9.12) to determine the passband and cutoff frequencies of' the analog low-pass filter. With 
T, = 2, the prewarping function is 
Design an analog low-pass filter with the cutoff frequencies found in step I and a passband and stopband 
ripple ap and a,, respectively. 
Apply the bilinear transformation to the filter designed in step 2. 
EXAMPLE 9.4.3 Let us design a first-order digital low-pass filter with a 3-dB cutoff frequency of w, = 0.2% by applying 
the bilinear transformation to the analog Butterworth filter 
I 
H,,(s) = - 
1 + s j  R,. 

376 
FILTER DESIGN 
[CHAP. 9 
Because the 3-dB cutoff frequency of the Butterworth filter is R,., for a cutoff frequency w, = 0.2% in the digital filter, we 
must have 
Therefore, the system function of the analog ti lter is 
Applying the bilinear transformation to the analog filter gives 
Note that the parameter T, does not enter into the design. 
9.4.3 Frequency Transformations 
The preceding section considered the design of digital low-pass filters from analog low-pass filters. There are 
two approaches that may be used to design other types of frequency selective filters, such as high-pass, bandpass, 
or bandstop filters. The tirst is to design an analog low-pass filter and then apply a frequency transformation to 
map the analog filter into the desired frequency selective prototype. This analog prototype is then mapped to 
a digital filter using a suitable s-plane to z-plane mapping. Table 9-5 provides a list of some analog-to-analog 
transformations. 
Table 9-5 The 'kansformation of an Analog Low-pass Filter with a 
3-dR Cutoff Frequency L2, to Other F'req"ency selective Filters 
I Transformation I 
Mapping 
I New Cutoff Frequencies 
The second approach that may be used is to design an analog low-pass filter, map it into a digital filter 
using a suitable s-plane to z-plane mapping, and then apply an appropriate frequency transformation in the 
discrete-time domain to produce the desired frequency selective digital filter. Table 9-6 provides a list of some 
digital-to-digital transformations. The two approaches do not always result in the same design. For example, 
although the second approach could be used to design a high-pass filter using the impulse invariance technique, 
with the first approach the design would be unacceptable due to the aliasing that would occur when sampling the 
analog high-pass filter. 
9.5 
FILTER DESIGN BASED ON A LEAST SQUARES APPROACH 
The design techniques described in the previous section are based on converting an analog filter into a digital 
filter. It is also possible to perform the design directly in the time domain without any reference to an analog 
filter. This section describes several methods for designing a digital filter directly. 

CHAP. 91 
FILTER DESIGN 
377 
Table 9-6 The Transformation of a Digital Low-Pass Filter with a Cutoff Frequency w, to Other Frequency 
Selective Filters 
Filter Type 
Low-pass 
High-pass 
Bandpass 
Bandstop 
Mapping 
2-' +a! 
z-I +, -- 
1 + curl 
Design Parameters 
sin[(w,. - w:.)/2] 
ff = sinl(w,. + q'.)/2] 
w:. = desired cutoff frequency 
ff = - cos[(w,. + w:.)/21 
cos[(w, - w3/21 
w: = desired cutoff frequency 
wCl = desired lower cutoff frequency 
W, = desired upper cutoff frequency 
w,,~ = desired lower cutoff frequency 
w,2 = desired upper cutoff frequency 
9.5.1 Pad4 Approximation 
Let hd(n) be the unit sample response of an ideal filter that is to be approximated by a causal filter that has a unit 
sample response, h(n), and a rational system function, 
Because H(z) has p + q + 1 free parameters, it is generally possible to find values for the coefficients a(k) and 
h(k) so that h(n) = hd(n) for n = 0, 1 ,  . . . , p + q. The procedure that is used to find these coefficients is to 
write H(z) = B(z)/A(z) as follows, 
and note that, in the time domain, the left-hand side corresponds to a convolution 
(note that b(n) is a finite-length sequence that is equal to zero for n .c 0 and n z q). Setting h(n) = hd(n) for 
n = 0. 1, . . . , p + q results in a set of p + q + 1 linear equations in p + q + 1 unknowns, 
{E(n) 
n = 0. I . .  . . , q  
hd(n) + &o(k)hd(n - k )  = 
~ = I  
n = q + l ,  . . . , q + p  

378 
FILTER DESIGN 
[CHAP. 9 
that may be solved using a two-step approach. In the first step, the coefficients a(k) are found using the last p 
equations in Eq. (9.14), which may be written in matrix form as 
Assuming that these equations are linearly independent, the coefficients may be uniquely determined. In the 
second step, the coefficients b(k) are found from the first 9 + 1 equations in Eq. (9.14) as follows: 
Although PadC's method produces an exact match of h(n) to hd(n) for n = 0. 1. . . . , p + 9, because h(n) is 
unconstrained for n > p + q, the PadC method does not generally produce a good approximation to hd(n) for 
n >  p + q .  
9.5.2 Prony 's Method 
With a least-squares approach to filter design, the problem is to find the coefficients a(k) and b(k) that minimize 
the least-squares error 
where U is some preselected upper limit. Because E is a nonlinear function of the coefficients a(k) and b(k), 
solving this minimization problem is, in general, difficult. With Prony's method, however, an approximate 
least-squares solution may be found using a two-step procedure as follows. Ideally, because [see Eq. (9.14)] 
the first step is to find the coefficients a(k) that minimize 
where 
Once the coefficients a(k) have been determined, the coefficients h(k) are found using the PadC approach of' 
forcing h(n) = hd(n) for n = 0, 1. . . . , 9 :  
The coefficients a(k) that minimize E may be found by setting the partial derivatives of E equal to zero, 

CHAP. 91 
FILTER DESIGN 
379 
where 
is the correlation of hd(n). 
9.5.3 
FIR Least-Squares Inverse 
The inverse of a linear shift-invariant system with unit sample response g(n) and system function G(z) is the 
system that has a unit sample response, h(n), such that 
In most applications, the system function H(z) = I/G(z) is not a v~able solution. One of the reasons is that, 
unless G ( z )  is minimum phase, I/G(z) cannot be both causal and stable. Another consideration comes from the 
fact that, in some applications, it may be necessary to constrain H ( 2 )  to be an FIR filter. Because l/G(z) will be 
infinite in length unless G(z) is an all-pole filter, constraining h(n) to be FIR would only be an approximation to 
the inverse filter. 
In the FIR least-squares inverse filter design problem. the goal is to find the FIR filter h(n) of length N such 
that 
h(n) * ~ ( n )  S(n) 
The filter that minimizes the squared error 
0: 
where 
may be found by solving the linear equations 
where 
In many cases, constraining the least-squares inverse filter to minimize the difference between h(n) * ~ ( n )  
and S(n) is overly restrictive. For example. if a delay may be tolerated, we may consider finding the filter h(n) 
so that 
h(n) * ~ ( n )  6(n - no) 
for some delay no. In most cases, a nonzero delay will produce a better approximate inverse filter and, in many 
cases, the improvement will be substantial. The least-squares inverse filter with delay is found by solving the 
linear equations 

FILTER DESIGN 
Solved Problems 
FIR Filter Design 
9.1 
Use the window design method to design a linear phase FIR filter of order N = 24 to approximate the 
following ideal frequency response magnitude: 
The ideal filter that we would like to approximate is a low-pass filter with a cutoff frequency w, = 0 . 2 ~ .  With 
N = 24, the frequency response of the filter that is to be designed has the form 
Therefore, the delay of h ( n )  is a = N / 2  = 12. and the ideal unit sample response that is to be windowed is 
All that is left to do in the design is to select a window. With the length of the window fixed, there is a trade-off 
between the width of the transition band and the amplitude of the passband and stopband ripple. With a rectangular 
window, which provides the smallest transition band, 
and the filter is 
I 
0 
otherwise 
However. the stopband attenuation is only 21 dB. which is equivalent to a ripple of 6, = 0.089. With a Hamming 
window, on the other hand, 
and the stopband attenuation is 53 dB, or 6 ,  = 0.0022. However, the width of the transition band increases to 
which, for most designs, would be too wide. 
9.2 
Use the window design method to design a minimum-order high-pass filter with a stopband cutoff 
frequency w, = 0.22n, a passband cutoff frequency w,, = 0.28n, and a stopband ripple 6 ,  = 0.003. 
A stopband ripple of 6, = 0.003 corresponds to a stopband attenuation of a,= -20 log 6, = 50.46. For the minimum- 
order filter. we use a Kaiser window with 
Because the transition width is Aw = 0.06n, or A f = 0.03. the required window length is 

CHAP. 91 
FILTER DESIGN 
38 1 
Rounding this up to N = 99 results in a type I1 linear phase filter, which will have a zero in its system function at 
z = -1. Because this produces a null in the frequency response at w = n ,  this is not acceptable. Therefore, we 
increase the order by I to obtain a type 1 linear phase filter with N =: 100. 
In order to have a transition band that extends from o, = 0 . 2 2 ~  
to w, = 0.28n, we set the cutoff frequency of 
the ideal high-pass filter equal to the midpoint: 
The unit sample response of an ideal zero-phase high-pass filter with a cutoff frequency w,. = 0 . 2 5 ~  
is 
where the second term is a low-pass filter with a cutoff frequency w,. = 0.25n. Delaying hh,(n) by N/2 = 50, we 
have 
and the resulting FIR high-pass filter is 
h(n) = hd(n). w(n) 
where w(n) is a Kaiser window with N = I00 and B = 4.6. 
9.3 
Given a desired frequency response Hd(eJ"), show that the rectangular window design minimizes the 
least-squares error 
For this problem, we use Parseval's theorem to express the least-squares error ELs in the time domain: 
If we assume that h(n) is of order N ,  with h(n) = 0 for n < 0 and n z N, 
Because the last two terms are constants that are not affected by the filler h(n), the least-squares errorELs is minimized 
by minimizing the first term, which is done by setting h(n) = hd(n) for n = 0, I .  . . . . N (i.e., using a rectangular 
window in the window design method). 
9.4 
If hd(n) is the unit sample response of an ideal filter, and h(n) is an N th-order FIR filter, the least-squares 
error 
fLS = I 
In 
\ H ~ ( P ~ ~ )  
- H(ejW)('dw 
277 
-= 
is minimized when h(n) is designed using the rectangular window design method. If ER is the squared 
error using a rectangular window, find the excess squared emor that results when a Hanning window is 
used instead of a rectangular window; that is, find an expression for 
where EH is the squared error using a Hanning window. 
Using Parseval's theorem. it is more convenient to express the least-squares error in the time domain as follows: 

FlLTER DESIGN 
[CHAP. 9 
Because e(n) = hd(n) - h(n) = hd(n) for n c 0 and n > N. 
where wH(n) and wx(n) are the Hanning and rectangular windows, respectively. However, the second sum is equal 
to zero. Therefore, the excess squared error is simply 
which is the desired relationship. 
9.5 
Consider the following specifications for a low-pass filter: 
Design a linear phase FIR filter to meet these specifications using the window design method. 
Designing a low-pass filter with the window design method generally produces a filter with ripples of the same 
amplitude in the passband and stopband. Therefore, because the passband and stopband ripples in the filter speci- 
fications are the same, we only need to be concerned about the slopband ripple requirement. A stopband ripple of 
6 ,  = 0.01 corresponds to a stopband attenuation of -40 dB. Therefore. froin Table 9-2 it follows that we may use 
a Hanning window, which provides an attenuation of approximately 44 dB. The specification on the transition band 
is that Aw = 0.05rr, or A f = 0.025. Therefore, the required filter order is 
and we have 
With an ideal low-pass filter that has a cutoff frequency of w,. = 0.325 (the midpoint of the transition band), and a 
delay of N/2 = 62 so that hd(n) is placed symmetrically within the interval [O, 1241, we have 
Therefore, the filter is 
sin[0.325~(n - 62)] 
0.5 - 0.5 cos - . 
(
1
 ~ ( n  
- 62) 
O S n s  124 
Note that if we were to use a Hamming or a Blackman window instead of a Hanning window, the stopband and 
passband ripple requirements would have been exceeded, and the required filter order would have been larger. With 
a Blackman window, for example, the filter order required to meet the transition band requirement is 
9.6 
We would like to filter an analog signal x,(t) with an analog low-pass filter that has a cutoff frequency 
f,. = 2 kHz, a transition width A f = 500 Hz, and a stopband attenuation of 50 dB. This filter is to be 
implemented digitally, as illustrated in the following figure: 

CHAP. 91 
FILTER DESIGN 
Design a digital filter to meet the analog filter specifications with a sampling frequency f, = 10 kHz. 
I 
I 
With a sampling frequency of 10 kHz, the digital filter should have a cutoff frequency w, = 2 n  f,./ f, = 0.41~ and a 
transition bandwidth Aw = 2nAf/f, = O.lrr. For a stopband attenuation of 50 dB, we may use a Kaiser window 
with 
B = 0. 
l l02(50 - 8.7) = 4.55 
4 1 )  - - 
For the length of the window, we have 
or N = 59. Finally, the unit sample response of the ideal filter that is to be windowed is a low-pass filter with a 
cutoff frequency w,. = 0 . 4 ~  
and a delay N/2 = 29.5. Therefore, 
C-D 
where w(n) is a Kaiser window with N = 59 and B = 4.55. and 
9.7 
Find the Kaiser window parameters, B and N, to designa low-pass filter with acutofffrequency w, = n/2, 
a stopband ripple 6, = 0.002, and a transition bandwidth no 1a.rger than 0.117. 
The parameter B for the Kaiser window depends only on the stopband ripple requirements. With 6, = 0.002, 
44 
. = 
and we have 
= 0.1 102(0r, - 8.7) = 4.99 
D-C 
The window length, N, on the other hand, is determined by the stopband ripple, 6,. and the transition width as 
H(ejw ) 
yo ( t )  
- 
follows: 
y(n) - 
Therefore, the required filter order is N = 65 
9.8 
Consider the following specifications for a bandpass filter: 
(a) Design a linear phase FIR filter to meet these specifications using a Blackman window 
(b) Repeat part (a) using a Kaiser window. 
(a) For this filter, the width of each transition band is Aw = 0 . 1 ~ .  
The ripples in the lower stopband, passband, 
and upper stopband are 4 = 0.01. a2 = 0.05, and a3 = 0.02, respectively, and are all different. Because the 
ripples produced with the window design method will be approximately the same in all three bands, the filter 
must be designed so that it has a maximum ripple of 8, = 0.01 in all three bands. With 

FILTER DESIGN 
[CHAP. 9 
it follows that the Blackman window will satisfy this requirement. An estimate of the filter order necessary to 
meet the transition bandwidth requirement of A f = 0.05 with a Blackman window is 
Finally, for the unit sample response of the ideal filter that is to be windowed, we have 
where Hd(eIW) is the frequency response of an ideal bandpass filter. For the cutoff frequencies of ~,,(ej"), we 
choose the midpoints of the transition bands of H(el'"). Therefore. 
Thus, the unit sample response of the ideal bandpass filter with zero phase is 
and 
However, we want to delay this filter so that it is centered at N / 2  = 55. Therefore, the unit sample response of 
the tilter that is to be windowed should be 
(b) For a Kaiser window design, the order of the filter that is required i s  
Therefore, we set N = 45. Next, for the Kaiser window parameter, with an attenuation of 40 dB, we have 
Therefore, the filter is 
h ( n )  = w ( n )  . hd(n) 
where 
9.9 
Suppose that we would like to design a bandstop filter to meet the following specifications: 

CHAP. 91 
FILTER DESIGN 
(a) Design a linear phase FIR filter to meet these filter specifications using the window design method. 
(b) What is the approximate order of the equiripple filter that will meet these specifications? 
(a) Recall that with the window design method, the ripples in the passbands and stopbands will be approximately 
the same, along with the widths of the transition bands. Because the smallest ripple occurs in the stopband, we 
must pick a window that provides a stopband attenuation of 
Thus, we may use a Hamming window or a Kaiser window with 
B = 0.5842(aS - 2 I)'.~ + 0.07886(a, - 2 1) = 4.09 
The transition width between the lower stopband and the passband is Aw = 0 . 0 2 ~  
and between the upper 
stopband and the passband it is A o  = 0 . 0 5 ~ .  Therefore, we must design the filter to meet the lower transition 
bandwidth requirement, Aw = 0.02j7, or A f = 0.01. Thus, for ;i Hamming window, the estimated filter order 
For a Kaiser window, on the other hand. the filter order is 
(b) For an equiripple filter, the filter order may be estimated as follows, 
9.10 
Use the window design method to design a type I1 bandpass filter according to the following specifications: 
With the window design method, the amplitudes of the ripples in each band of a multiband filter will be approximately 
equal, and the transition bands will have approximately the same width. Because the requirements on the peak ripple 
in the three bands of this bandpass filter are not the same, it is necessary to design the filter so that it has the smallest 
ripple in all three bands, which, in this case, requires that we set 6, = 0.0025. In addition, because the transition 
bands do not have the same width, it is necessary to set the desired transition width, Aw, equal to the smaller of the 
two (Aw = 0 . 1 5 ~ ) .  
With a, = -20 log 6, = 52 dB. it follows that we may use a Hamming window, and with 
NAf = 3.3 
For a type I1 filter, however, N must be odd, so we set N = 45. 
Now we must find the unit sample response of the ideal bandpass filter that is to be windowed. Because the 
width of both the upper and lower transition bands will be approximately Aw = 0 . 1 5 ~ ,  
for the ideal filter we set the 
lower cutoff frequency equal to 

FILTER DESIGN 
[CHAP. 9 
and the upper cutoff frequency equal to 
Therefore, the magnitude of the frequency response of the ideal filter is 
I 
0 . 1 7 5 ~  5 Iwl 5 0 . 6 7 5 ~  
1 H,,(ul"')( = 0 
otherwise 
Repeating the steps in the derivaticn of the unit sample response of an ideal bandpass fi lter given in Prob. 9.8, using 
the given cutoff frequencies and a delay of N j 3  = 22.5. we have 
9.11 
Use the window design method to design a multiband filter that meets the following specifications: 
To design a multiband filter that meets these specifications usmg the window design method, we begin by finding 
the ideal unit sample response. For the frequency response of the ideal filter. we set the cutoff frequencies equal to 
the midpoint of the transition bands. Therefore, we have 
The unit sample response of this ideal lilter may be found easily by noting that Hd(ei") may be written as an allpass 
filter with a gain of 0.5 minus a low-pass ti lter with a gain of 0.5 and a cutoff frequency w, = 0 . 5 7 5 ~  plus a low-pass 
filter with a gain of I and a cutoff frequency of w2 = 0.325n. Therefore. if we assume that H,,(eJW) 
has linear phase 
with a delay of n d ,  
Having found the ideal unit sample response. the next step is to choose an appropriate window. When hd(n) is 
multiplied by a window w(rr), the frequency response is the convolution of the transform of the window W(eJW) 
with 
Hd(el'"). Assuming that the length of the filter is long compared to the inverse of the transition width, so that the 
discontinuities between the bands may be treated independently. the ripples in the three bands will be approximately 
the same as they would be for a low-pass filter, except that they will be scaled by the amplitude of the discontinuities 
at the band edge. Therefore. if the ripple in the lower passband and the stopband are 4, the ripple in the upper 
passband will be 6,,/2. Consequently. we must use a window that would produce a low-pass filter with a ripple no 
larger than 0.01. Thus. we may use a Hanning window. Finally, to determine the filter order, note that because the 
widths of both transition bands are the same. Ao) = 0 . 0 5 ~ ~ .  
an estimate of the filter order is 
Note that another way to design this tilter would have been to design a network of three filters in parallel: a low-pass 
filter, a bandpass filter, and a high-pass filter. This approach would give greater control over the ripple amplitudes 
and the transition widths but would require a trial and error approach to establish the specifications for the three 
filters. 
9.12 
Shown in the following figure is the magnitude of the frequency response of a type I high-pass filter that 
was designed using the Parks-McClellan algorithm. 

CHAP. 91 
FILTER DESIGN 
The stopband cutoff frequency is w, = 0.4n, and the passband cutoff frequency is o,, = 0 . 5 ~ ~ .  
In 
addition, the stopband ripple is 8, = 0.0574, and the passband ripple is 6, = 0.1722. 
Determine the weighting function, W(eJW), 
used to design this filter, and find the length of the unit 
sample response. 
Describe approximately where the zeros of the system function of this filter lie in the z-plane. 
To detennine the weighting function, we observe that 
Therefore, the weighting function used to design the filter has a value in the stopband that is 3 times larger than 
the value in the passband. This makes the errors in the stopband more costly and, therefore, smaller by a factor 
of 3. So, a weighting function that could have been used to design this filter is as follows: 
To determine the length of the unit sample response. recall that a type I equiripple high-pass (or low-pass) 
filter must either have L + 2 or L + 3 alternations where L = N / 2 .  Therefore, the order of the filter may 
be detennined by counting the alternations. For this filter, we have nine alternations, which are labeled in the 
figure below. 

FILTER DESIGN 
[CHAP. 9 
Thus, L = 7 or. in the case of an extraripple filter, L = 6. However, in order for h(n) to be an extraripple 
filter, w = 0 and w = IT must both be extremal frequencies (see Prob. 9.15). Because w = 0 is not an extremal 
frequency. this is no1 an extraripple filter. Therefore, L = 7 and N = 14. 
(b) Because the order of this filter is N = 14, the system function has 14 zeros. For a linear phase filter, we know 
that the zeros of the system function may lie on the unit circle, or they may occur in conjugate reciprocal pairs. 
From the plot of the frequency response magnitude, we see that IH(eJ'")( = 0 at w l  w 0.175n, w2 w 0.3n, 
and w3 
0 . 3 9 ~ .  Therefore, there are three zeros on the unit circle at these frequencies. Because there must 
also be zeros at the conjugate positions, z = e-'"'1 for i = 1, 2,3, these unit circle zeros account for six of the 
fourteen zeros. In addition to these. there must be a conjugate pair of zeros at z = re*'", where w4 
0.71~. 
These zeros account for the dip in IH(el")I at w = 0.71~. Because the filter has linear phase, in addition to 
this pair of complex zeros, there must be a pair at the reciprocal locations, z-' = re*jW4. For the same reason, 
there will be zeros on the real axis at z = al and z = I/cul, as well as zeros on the real axis at z = -a2 and 
z = -I/a2, where a, and a2 are positive real numbers that are less than I. These four zeros account for the 
minima in I H ( e J w )  at w = 0 and w = n .  A plot showing the actual positions of the 14 zeros of H ( z )  is given 
below. 
9.13 
With the frequency sampling method, the frequency samples match the ideal frequency response exactly. 
Derive an interpolation formula that shows how the frequency samples H (k) are interpolated. 
The frequency response of an FIR filter of length N is 
If h(n) is designed using the frequency sampling method. 
N - I  
- 
H ( k )  = 
h(n)e-"n"klN - ~ , , ( e ~ ' " ~ / ~ )  
k = 0, I .  . . . , N - I 
,r=o 
Because these frequency samples correspond to the N-point DFT of h(n), the unit sample response may be expressed 
in terms of these samvles as follows: 
Substituting this into the expression above for H ( e J w ) ,  we have 
N-I 
) 
,=H(k)(=e-in(.-2r*'N, 
H ( ~ ) ~ J ~ ~ W N  
e-Jrlw = 
n =D 
Using the geometric series to evaluate this sum, we find 
which is the desired interpolation formula. 

CHAP. 91 
FILTER DESIGN 
389 
9.14 
Given a low-pass filter that has been designed and implemented, either in hardware or software, it may be 
of interest to try to improve the frequency response characteristics by repetitive use of the filter. Suppose 
that h(n) is the unit sample response of a zero phase FIR filter with a frequency response that satisfies 
the following specifications: 
(Note that H(eJw) having zero phase implies that H ( e J W )  is real-valued for all LO). 
(a) If a new filter is formed by cascading h ( n )  with itself, 
G(eJ") satisfies a set of specifications of the form 
Find A .  B. C, and D in terms of 6, and 6 ,  of the low-pass filter h(n). 
(b) If 6, << 1 and 6, << 1, what are the approximate passband and stopband ripples of G(ejw)? 
(a) With a cascade, g(n) = h(n) * h(n), the frequency response is 
Therefore, in the passband we have 
and in the stopband we have 
0 5  C(el"') < ~f 
COT 5 (0 5 77 
(bj If we assume that 6, << I, 
(I - 6,)' = 1 - 26, + 26; = I - 26, 
and 
(1 + 6,)" 
I + 226, + 6% 
I + 26,, 
Therefore, the passband specifications are approximately 
In other words, the passband ripple is approximately doubled. In the stopband, however, the ripple is much 
smaller with the cascade. In fact, in decibels, the stopband attenuation is doubled. With other systems built 
out of interconnections of h(n) it is possible to improve the filter characteristics in both the passband and the 
stopband. 
9.15 
Show that a type I equiripple low-pass filter of order N  may have either L + 2  or L + 3 alternations where 
L = N / 2 .  
For a type I linear phase filter of order N ,  the frequency response is 
where 
A(.'.) 
= 
.(k) cos rw 
!,=I1 

FILTER DESIGN 
[CHAP. 9 
with L = N/2. Because the desired response, &(elW), and the weighting function, w (ejUJ), are piecewise constant, 
However, because ~ ( e j " )  is a trigonometric polynomial of degree N/2 in cos w, 
d A (ej") 
i. 
L-I 
then 
-- 
- -sin w x ka(k)(cosw)"' = - sin w x ( k  + I)c~(k + I)(cos 0))" 
dw 
k=O 
I=O 
Therefore, the derivative of A(ej"') with respecl to w is always equal to zero at w = 0 and w = n .  In addition. 
however, the derivative is equal to zero at L - I other frequencies between 0 and n, which correspond to the roots of 
the polynomial given by the sum. Therefore, A(d'") may have at most L + 1 local maxima and minima. In addition. 
however, the band-edge frequencies, w,, and w,, must also be extremal frequencies. Thus, the maximum number of 
alternations is L + 3. Because the alternation theorem requires a minimum of L + 2, the optimum filter may have 
either L + 2 or L + 3 alternations. 
9.16 
Suppose that we would like to design a type I equiripple bandstop filter of order N = 30. 
(a) What is the minimum number of alternations that this filter must have? 
(b) What is the maximum number? 
(a) For a type I linear phase FlR filter of order N, the alternation theorem states that the minimum number of 
alternations is L + 2, where L = N/2. Therefore. with N = 30, the minimum number of alternations is 17. 
(6) As shown in Prob. 9.15, with 
~
(
~
1
0
~
)
 
= A ( ~ W ) ~ - J W N I ~  
A(eJW), and thus ,E(rjw). will have, at most, L + I local maxima and minima in the interval 10, n ] .  In addition. 
however, there may be alternations at the band-edge frequencies. For a bandstop filter, there are four band 
edges: the lower passband cutoff frequency, the lower stopband cutoff frequency, the upper stopband cutoff 
frequency, and the upper passband cutoff frequency. Therefore. the maximum number of alternations is L + 5. 
9.17 
We would like to design a bandstop filter to satisfy the following specifications: 
(a) Estimate the order of the equiripple filter required to meet these specifications. 
(b) What weighting function ~ ( e i ' " )  
should be used to design this filter? 
(c) What is the minimum number of extremal frequencies that the optimal tilter must have'? 
(a) The design formula used to estimate the order for a low-pass equiripple tilter is 
With the smaller of the two passband ripples being equal to 6, = 0.02, a stopband ripple of 6, = 0.001, and a 
transition width Aw = 0.02n, an estimate of the filter order is 
However, because this estimate is for a low-pass filter, the actual tilter order required is closer to N = 242. 
which may be confirmed by computer. 

CHAP. 91 
FILTER DESIGN 
391 
(b) With a ripple of 6, = 0.02 in the lower passband, S2 = 0.001 in the stopband, and S3 = 0.05 in the upper 
passband, an appropriate weighting function would be 
However, scaling these weights by any constant would not change the design. 
(c) Assuming a filter order of N = 232, which is a type I design, the amplitude response has the form 
L 
A(el") = 
a(k) cos kw 
where L = N/2 = 116. Therefore, the minimum number of extrcmal frequencies is L + 2 = 1 18. 
9.18 
We would like to design an equiripple high-pass filter of order N = 64. The stopband ripple is to be no 
larger than 6, = 0.001, and the passband ripple no larger than 8 ,  = 0.01. If we want a passband cutoff 
frequency equal tow, = 0 . 7 2 ~ ,  
what will the stopband cutoff trequency be approximately equal to? 
For an equiripple low-pass filter, an approximate relation between the filter order N ,  the passband and stopband 
ripples, 8, and &, respectively, and the transition width A f ,  is given by 
Because a high-pass filter may be formed from a low-pass filter as follows, 
this formula is also applicable to high-pass filters. With N  = 64, 6, = 0.0 I, and 8, = 0.001, we find that 
Therefore, if the passband cutoff frequency is w, = 0 . 7 2 ~ .  the stopband cutoff frequency will be approximately 
w,, = w, - 2~ A f = 0 . 6 4 0 8 ~  
9.19 
Suppose that we want to design a low-pass filter of order N == 63 with a cutoff frequency w, = 0.31~ 
and a stopband cutoff frequency o, = 0 . 3 2 ~ .  
(a) What is the approximate stopband attenuation that would obtained if this filter were designed using 
the window design method with a Kaiser window. 
(6) Repeat part (a) for a equiripple filter assuming that we want 8, = 6,. 
(a) For a Kaiser window design. the relationship between the filler order N, the stopband attenuation a, = 
-20 log 6,. and the transition w~dth A f is 
a, - 7.95 
N = -  
l4.36A f 
Solving this for the stopband attenuation, we have 
which corresponds to a stopband (and passband) ripple of 
6 - 10-16.99120 = 0.141 
S - 

FILTER DESIGN 
[CHAP. 9 
(b) For an equiripple filter, the filter order is approximately 
With 6, = 6,. this becomes 
where a, = -20 log 6,. Solving for a,, we have 
The corresponding stopband ripple is 
6 - 10-22.0-W" 
0 079 
S - 
9.20 
The linear phase constraint on FIR filters places constraints on the unit sample response and the location 
of the zeros of the system function. In the table below, indicate with a check which filter types could 
successfully be used to approximate the given filter type. 
High-pass filter 11 
Band~ass filter 11 
Low-pass filter 
Bandstop filter 11 
Differentiator 
11 
A type I linear phase filter has no constraints on the locations of its zeros. Therefore, a type I filter may be used for 
Type I 
the design of any type of filter. The type I1 linear phase filter will always have a zero at w = n. Therefore, these 
filters should only be used for low-pass and bandpass filters. The type 111 linear phase filter is constrained to have 
zeros at w = n and w = 0. Therefore, type 111 filters should only be used for the design of bandpass tilters. Finally, 
Type 11 
because the type IV filters have a zero at w = 0, they should not be used in the design of low-pass or bandstop filters. 
These results are summarized in the table below. 
Type 111 
11 Type I I Type 11 I Type I11 I Type IV I 
Type IV 
Low-pass filter 11 
x 
I Differentiator 
11 
x 
x 
x 
Bandpass filter 11 
x 
IIR Filter Design 
9.21 
For historical reasons, the design formulas for analog filters are given assuming a peak gain of I in the 
passband. In terms of the parameters E and A, the filter specifications have the form 
High-pass filter (1 
x 
I 
bands to^ filter 11 
x 
x 
1 
IHAjW 5 ,  
Suppose that we would like to use the bilinear transformation to design a discrete-time IIR low-pass filter 
that satisfies the following frequency response constraints: 
1-6, 5 IH(eJW)I 5 1 +S, 
0 5 w 5 w, 
l ~ ( e j 9 l  i 6, 
w , s w 5 n  
x 
x 
x 

CHAP. 91 
FILTER DESIGN 
393 
Find the relationship between the parameters 6, and 6, for the discrete-time filter and between the 
parameters c and A for the continuous-time filter. 
For a digital low-pass filter with a frequency response magnitude 
dividing by 1 $. 6, this becomes 
Setting 
we have 
and 
With a stopband ripple of &, the normalization of the peak passband gain to I produces a peak stopband ripple of 
Therefore 
A = s;'(I + 8,) 
9.22 
As the order of an analog Butterworth filter is increased, the slope of J H , ( J Q ) ~ ~  
at the 3-dB cutoff 
frequency, Q,., increases. Derive an expression for the slope of I H , ( J Q ) I ~  
at R,. as a function of the filter 
order, N. 
The magnitude squared of the Butterworth filter's frequency response is 
To evaluate the slope of I Ha( jSt)I2 at St = St,., we may set St, = 1 and evaluate the derivative at St = I. Therefore, 
with 
1 
l H a ( j ~ ) l ~  
= I + 
we have 
Evaluating this at St = I ,  we have 
9.23 
Show that the frequency response of an Nth-order low-pass Butterworth filter is maximallyflat at R  = 0 
in the sense that the first 2N - I derivatives of J H , ( J R ) I ~  
are equal to zero at R  = 0. 
An Nth-order Butterworth filter has a magnitude squared frequency response given by 

FILTER DESIGN 
[CHAP. 9 
Without any loss in generality, we may assume that Q, = 1 and evaluate the derivative of the function 
I 
G(Q) = - 
I + RZN 
at Q = 0. Multiplying both sides of this equation by (1 + R2N), we have 
Differentiating this equation with respect to R yields 
Setting R = 0, we have 
~'(fi)),=, = 0 
Differentiating a second time gives 
Again setting R = 0, we have 
G"(Q)],=, = 0 
If we continue to differentiate k times, where k 5 2N - I, we have an equation of the form 
where G(')(R) is the ith derivative of G(R), and F(Q) is a polynomial in 52. Given that Gt')(Q) is equal to zero at 
Q =Ofori = I , .  .. , k  - I, itfollowsthat 
G("(R)ln=a = 0 
Differentiating 2N times, however, we have 
Therefore, 
G'~~)(Q)~,, = -G(Q)[,, 
. (2N)! = -(2N)! 
which is nonzero, and the maximally flat property is established. 
9.24 
Design a low-pass Butterworth filter that has a 3-dB cutoff frequency of 1.5 kHz and an attenuation of 
40 dB at 3.0 kHz. 
Given the 3-dB cutoff frequency of the Butterworth filter, all that is needed is to find the filter order, N, that will 
give 40 dB of attenuation at 3 kHz, or Q, = 2n .3000. 
At the stopband cutoff frequency a,, the magnitude of the 
frequency response squared is 
Therefore, if we want the magnitude of the frequency response to be down 40 dB at R, = 2n .3000, the magnitude 
squared must be no larger than 
or 
Thus, we want 
log(lo4 - 1) 
2N = 
= 13.29 
log 2 

CHAP. 91 
FILTER DESIGN 
or N = 7. For a seventh-order Butterworth filter, the 14 poles of 
I 
Ha(s)Ha(-s) = 1 + 
lie on a circle of radius Q, = 2n ,3000, at angles of 
Bk = ( N  + I + 2k)n - (4 + k)n 
- 
N 
7 
k = 0 , 1 ,  ..., 13 
as illustrated in the following figure: 
The poles of Ha@) are the seven poles of Ha(s)H,(-s) that lie in the left-half s-plane, that is, 
Except for the isolated pole at s = -Q,, 
the remaining six poles occur in complex conjugate pairs. The conjugate 
pairs may be combined to form second-order factors with real coefficients to yield factors of the form 
Thus, the system function of the seventh-order Butterworth filter is 
9.25 
Let ap and 52, be the desired passband and stopband cutoff frequencies of an analog low-pass filter, and 
let 6, and 6, be the passband and stopband ripples. Show that the order of the Butterworth filter required 
to meet these s~ecifications is 
log d 
N Z -  
log k 
with the 3-dB cutoff frequency a, being any value within the range 
The squared magnitude of the frequency response of the Butterworth filter is 

FILTER DESIGN 
[CHAP. 9 
Because I H,(jQ)l is monotonically decreasing, the maximum error in the passband and stopband occurs at the band 
edges, Q, and a,, respectively. Therefore, we want 
and 
From the first equation, we have 
and from the second. 
Dividing these two equations, we have 
and taking the logarithm gives 
Nlog(?) 
5 log d 
Dividing by 
log 2 = log k 
("n) 
we have 
log d 
N Z -  log k 
(note that the inequality is reversed because log k < 0). Because the right side of this equation will not generally 
be an integer, the order N is taken to be the smallest integer larger than (logd)/(log k). Finally, once the order N is 
fixed, it follows from Eqs. (9.20) and (9.21) that a,, may be any value in the range 
9.26 
Suppose that we would like to design an analog Chebyshev low-pass filter so that 
1 - Jp 5 IHa(jQ)l I 
1 
IQI 1 Qp 
I H a ( j Q ) l  5 J,T 
Qs I 
IQI 
Find an expression for the required filter order, N, as a function of a,, a,, tip, and 
For a Chebyshev filter, the magnitude of the frequency response squared is 
where 
is an Nth-order Chebyshev polynomial. Over the passband, In1 < Q,, the magnitude of the frequency response 
oscillates between 1 and ( l + c2)-'I2. Therefore, the ripple amplitude, 6,. is 
6, = 1 - (1 + c ~ ) - ' / ~  

CHAP. 91 
FILTER DESIGN 
or 
6' = (1 - a,)-' - I 
At the stopband frequency R ,  we have 
I 
I H ~ ( ~ Q . ~ ) I ~  
= 
I + c~T,:(R~I 
which we want to be less than or equal to 8:: 
Therefore, 
Because (Q,/R,) > I, then TN(R,/i2,) = cosh(N ~ o s h - ~ ( ~ , / R , ) ) ,  
and we have 
cosh-'(I Id) 
cosh-'( l /d) 
or 
- 
- 
' 
C O S ~ - I  (QJR,) 
C O S ~ - ~ ( I , X )  
which is the desired expression. 
9.27 
If Ha(s) is a third-order type I Chebyshev low-pass filter with a cutoff frequency Q p  = I and 6 = 0. I ,  
find Ha(s)H,(-s). 
The magnitude of the frequency response squared for an Nth-order type 1 Chebyshev filter is 
where TN(x) is an Nth-order Chebyshev polynomial that is defined recursively as follows, 
with To(x) = 1 and Tl(x) = x. Therefore, to find the third-order Chebyshev polynomial, we first find T2(.u) as 
follows, 
T2(x) = 2xTl(x) - To(x) = 2x2 - I 
and then we have 
T3(x) = 2xT2(x) - Tl(x) = 4x3 - 2x - x = x(4x2 - 3) 
Thus, the denominator polynomial in I Hu(jR)12 is 
and we have 
we make the substitution R = s / j  in 1H,(jC2)l2 as follows: 

398 
FILTER DESIGN 
[CHAP. 9 
9.28 
Show that the bilinear transformation maps the jQ-axis in the s-plane onto the unit circle, lzl = 1, and 
maps the left-half s-plane. Re(s) < 0 insidc the unit circle, lz( < 1. 
To investigate the characteristics of the bilinear transformation, let z = reJ"' and s = a + JR. The bilinear 
transformation may then be written as 
r 2  - l 
3r sin w 
='( 
T, 
I + r 2 + 2 r c o s w  + ' 1 + r 2 + 2 r c o s w  
Therefore, 
and 
2 
r2 - I 
0 = - 
T, I + rr' + 2r cosw 
Note that if r < I, then o < 0, and if r 
1, then 0 z 0. Consequently, the left-half s-plane is mapped inside the 
unit circle. and the right-half s-plane is mapped outside the unit circle. If 1, = I, then a = 0, and 
Thus, the JR-axis is mapped onto the unit circle. Using trigonometric identities, thismay be written in the equivalent 
9.29 
Let H&) be an all-pole filter with no zeros in the finite s-plane, 
If H,,(s) is mapped into a digital filter using the bilinear transformation, will H ( z )  be an all-pole filter? 
With T, = 2, the bilinear transformation is 
I -:-I 
s = - 
I + z - '  
and the system function of the digital filter is 
This may be written in the more conventional form as follows, 
where 

CHAP. 91 
FILTER DESIGN 
and 
Therefore, H ( z )  has p poles (inside the unit circle if Re(sd) < 0) and p zeros at z = - I .  
Note that rhese zeros come 
from the p zeros in HJs) at s = m. which are mapped to z = - I  by the bilinear transformation. Thus. H ( : )  will 
nor be an all-pole filter. 
9.30 
Shown in the figure below is the magnitude of the frequency response of a low-pass tilter that was designed 
by mapping a type I analog Chebyshev filter into a discrete-lime filter using the bilinear transformation. 
Find the filter order (i.e., the number of poles and zeros in H(::)). 
The magnitude-squared response of a type I analog Chebyshev filter is 
where 
is an Nth-order Chebyshev polynomial. Over the passband, 
i 
R,, the magnitude of the frequency response 
oscillates between I and (1 + c')-'/~. AS the frequency varies from I2 = O to R = R,,, H = N cos-'(R/R,,) varies 
from 8 = N 7r/2 to 0 = 0. Therefore. 
oscillates between zero and 1 N $ 1 times over the interval [O, Q,] 
[i.e., T,~(R/Q,,) reaches its maximum or 
minimum value N + I times]. The bilinear transformation is a one-to-one mapping of the jR-axis onto the unit 
circle. Therefore. I H ( ~ J ' " ) ~ ~  
will alternate N + I times belween I and I/([ + 6') over the interval 10, w,), where 
w, = tan 2 
(: ) 
Because there are six alternations of I H (eJ'")12 in the passband, N + 1 = 6. and H,,(s) is a ti fth-order type I Chebyshev 
filter, 
5
.
 
where A is a constant. Applying the bilinear transformation to HJs) results in a discrete-time filter with a system 
function H(z) that has five poles inside the unit circle, and five zeros on the unit circle at : 
= - I  (as shown in hob. 
9.29, the five zeros come from the five zeros in H,,(s) at s = m). 

400 
FILTER DESIGN 
[CHAP. 9 
9.31 
Use the bilinear transformation to design a discrete-time Chebyshev high-pass filter with an equiripple 
passband with 
0 
(
e
)
 
0 . 1  
O s w  5 0 . 1 1 ~  
and 
0.9 5 I H ( &  
5 1.0 
0.31~ 5 w 5 IT 
To design a discrete-time high-pass filter, there are two approaches that we may use. We may design an analog type I 
Chebyshev low-pass filter, map it into a Chebyshev low-pass filter using the bilinear transformation, and then perform 
a low-pass-to-high-pass transformation in the z-domain. Alternatively, before applying the bilinear transformation. 
we could perform a low-pass-to-high-pass transformation in the s-plane and then map the analog high-pass filter into 
a discrete-time high-pass filter using the bilinear transformation. Because both methods result in the same design, 
it does not matter which method we use. Therefore, we will use the second approach, because it is a little easier 
algebraically. 
Given that we want lo design a high-pass filter with a stopband cutoff frequency ws = 0.117 and a passband 
cutoff frequency w, = 0.317, we first transform the specifications of the digital filter into the continuous-time domain. 
With T, = 2 and 
W 
R = tan - 
2 
Using the transformation s -+ I 1s to map these high-pass filter cutoff frequencies to low-pass filter cutoff frequen- 
cies, we have 
and 
Therefore, the selectivity factor for the analog Chebyshev filter is 
With 6, = 6, = 0.1, the discrimination factor is 
Thus. the required filter order is 
Although we should round up to N = 3, with a second-order Chebyshev filter we should come close to meeting the 
specifications. Therefore, we will use N = 2. 
The next step is to design a second-order low-pass Chebyshev filter with 
where C!, = 1.9627 and R ,  = 6.3 138. With 

CHAP. 91 
FILTER DESIGN 
it follows that 
For a second-order Chebyshev filter, we need to generate a second-order Chebyshev polynomial. which is 
Squaring T2(x), we have 
T;(X) = 4x4 - 4x2 + I 
and, for the magnitude squared frequency response of the Chebyshev filter, we have 
Substituting for the given values of Q, and c, we have 
Next, we find H4(s)H4(-s) with the substitution St = - js, 
Factoring the denominator polynomial, we find that the two roots in the left-half s-plane are at 
Thus, the second-order Chebyshev filter is 
Now we transform this low-pass filter into a high-pass filter with the low-pass-to-high-pass transformations + I /s. 
This gives 
Finally, applying the bilinear transformation, we have 
I - 2-' 
3.9778 (-) 
I + z-' 
H (z) = 
I + 2.2327(=) 1 + z - I  + 4 . 4 1 8 5 ( E ) 2  
1 + z-' 
Multiplying numerator and denominator by (1 + 2-l)' gives 
The magnitude of the frequency response is plotted in the following figure. 

FILTER DESIGN 
[CHAP. 9 
As a check on the design, we may compute the magnitude of the frequency response at w = 0. In, which is 
I H ( ~ ~ ~ ) I ~ , = O , ~ ,  
= 0.1044 
which comes close to satisfying the stopband specifications. At the passband edge, we have 
I ~ ( e j ~ ) l , , o . s ,  = 0.9044 
which does satisfy the constraint. 
9.32 
We would like to design a digital low-pass filter that has a passband cutoff frequency wp = 0 . 3 7 5 ~  
with 
6, = 0.01 and a stopband cutoff frequency w, = 0.5x with 6, = 0.01. The filter is to be designed using 
the bilinear transformation. What order Butterworth, Chebyshev, and elliptic filters are necessary to meet 
the design specifications? 
To find the required filter order, we begin by finding the discrimination factor and the selectivity factor for the analog 
low-pass filter prototype. With 8, = 6, = 0.01, the discrimination factor is 
For the selectivity factor, we first find the cutoff frequencies for the analog prototype. With wp = 0.375r and 
w, = OSr, we prewarp the frequencies as follows (T, = 2), 
0 375r 
Rp = tan (l) 
= 0.6682 
i-2. = tan (F) 
= 1 
R 
Therefore, 
k = 2- 
= 0.6682 
i-2.s 
For the Butterworth filter, the required filter order is 
log d 
N = - -  
- 16.25 
log k 
or N = 17. For the Chebyshev filter, 
so the minimum order is N = 8. Finally, for the elliptic filter, we first evaluate 
where 

CHAP. 91 
FILTER DESIGN 
With k = 0.6682, we have 
and 
9 = 0.0369 
Therefore. for the filter order. we find 
9.33 
With impulse invariance, a first-order pole in H,(s) at s = sk is mapped to a pole in H ( z )  at z = e s k T s :  
Determine how a second-order pole is mapped with impulse invariance. 
If the system function of a continuous-time filter is 
the impulse response is 
ha(t) = tesk'u(t) 
where u(t) is the unit step function. Sampling h,(t) with a sampling period T,, we have 
Using the z-transform property 
z 
dX(z) 
nx(n) t, 
-z - 
dz 
and the z-transform pair 
I 
cunu(n) c4-t - 
1 - az-' 
it follows that the z-transform of h(n) is 
Therefore, for a second-order pole, we have the mapping 
9.34 
Suppose that we would like to design and implement a low-pass filter with 
(a) What order FIR equiripple filter is required to satisfy these specifications? 
(b) Repeat part (a) for an elliptic filter. 
(c) Compare the complexity of the implementations for the equiripple and elliptic filters in terms of the 
number of coefficients that must be stored, the number of delays that are required, and the number 
of multiplications necessary to compute each output sample y(n). 
(a) With a transition width of Aw = 0.027r. an estimate of the required filter order for an FIR equiripple filter is 

(b) For an elliptic filter, we have 
and 
With 
and 
then 
o r N  = 10. 
[CHAP. 9 
(c) For an FIR filter of order N = 254, the output y(n) is 
Therefore, implementing this filter requires N = 254 delays. Since this filter has linear phase, exploiting the 
symmetry of the unit sample response, 
h(n) = h(254 - n) 
it follows that we must only provide storage for 128 filter coefficients, h(O), h(l), . . . , h(127). In addition, we 
may simplify the evaluation of y(n) as follows, 
254 
126 
y(n) = ) 
h(k)x(n - k) = ) 
h(k)[x(n - k) + x(n - 254 + k)] + h(127)x(n - 127) 
k=O 
A LO 
Thus, 128 multiplications are required to compute each value of y(n). For a 10th-order elliptic filter, 
Therefore, it follows that 21 memory locations are required to store the coefficients a(k) and b(k), and 10 delays 
are required for a canonic implementation. In addition, we see that 21 multiplications are necessary to evaluate 
each value of y(n). However, since the zeros of H ( z )  lie on the unit circle, the coefficients b(k) are symmetric, 
By exploiting this symmetry, we may eliminate five multiplications per output point and five memory locations. 
9.35 
The input xa(t) and output ya(t) of a continuous-time filter with a rational system function are related by 
a linear constant coefficient differential equation of the form 
Suppose that we sample x,(t) and ya(t), 
and approximate a first derivative with the first backward difference, 

CHAP. 91 
FILTER DESIGN 
Approximations to higher-order derivatives are then defined as follows, 
Applying these approximations to the differential equation gives the following approximation to the 
differential equation: 
I) 
a 
The first backward difference def nes a mapping from the s-plane to the z-plane that is given by 
1 - z-' 
,y=- 
Ts 
Determine the characteristics of this mapping, and compare it to the bilinear transformation. Is this a 
good mapping to use? Explain why or why not. 
As with the bilinear transformation, the first backward difference will map a rational function of s into a rational 
function of z. To see how points in the s-plane map to points in the z-plane, let us write the mapping as follows, 
Note that with s = u + jR, 
.and it follows that points in the left-half s-plane (a c 0) are mapped to points inside the unit circle, lzl < I. Thus, 
stable analog filters are mapped to stable digital filters. 
Now, let us look at how the jR-axis is mapped to the z-plane. With s = jR, we see that 
which is an equation for a circle of radius r = f centered at z = i. To see this, note that 
Thus. 
The properties of the mapping are illustrated in the following figure. 
Since the jR-axis does not map onto the unit circle, the frequency response of the digital filter produced with this 
mapping will not, in general. be an accurate representation of the frequency response of the analog filter except when 
w is close to zero. In other words, the frequency response of a continuous-time filter will be well preserved only for 
low frequencies. 

406 
FILTER DESIGN 
[CHAP. 9 
9.36 
Use the impulse invariance method to design a digital filter from an analog prototype that has a system 
function 
s + a  
Ha(s) = (s + 
+ h2 
To design a filter using the impulse invariance technique, we first expand H,,(s) in a partial fraction expansion as 
follows, 
s + a  
HAS) = 
- 
- 
A I 
A2 
(S + ~
1
)
~
 
+ b2 
s + (a + jh) + s + (a - jb) 
where 
and 
Therefore, with 
I 
I 
- 
Hu(s) = 
2 
s + a + , j h + s + a -  
jh 
using the mapping given in Eq. (9.10), we have 
Note that the zero at s = -a is mapped to a zero at z = PT7 
cos(bT,). Thus, the location of the zero in the discrete- 
time filter depends on the position of the poles as well as the zero in the analog filter. 
9.37 
With the impulse invariance method, the unit sample response of a digital filter is formed by sampling 
the impulse response of the continuous-time filter, 
Another approach is to use the step invariance method in which the step response of the digital filter is 
formed by sampling the step response of the continuous-time filter. 
(a) Design a digital filter with the step invariance method using the continuous-time prototype 
(6) Determine whether or not the filter is the same as that which would be designed using the impulse 
invariance method. 
(a) If the impulse response of a continuous-time filter is h,(r), its step response is 
Therefore, because the Laplace transform of the step response is related to the system function H,(s) as follows, 
then 

CHAP. 91 
FILTER DESIGN 
To design a digital filter using step invariance, we first perform a partial fraction expansion of S,(s), 
where 
and 
a 
I 
-a + j h  
-a - j h  
Therefore. 
S,, (s ) = --- 
- + 
+ 
a2 + b2 s 
2(a2 + h2)(s + u + j h )  
2(a2 + b2)(s + a  - j h )  
Sampling s,,(t), 
s(n) = s,(nT,) 
and finding the z-transform of s(n) corresponds to the substitution 
Thus, the z-transform of the step response is 
The system function of the digital filter is then 
(b) Using impulse invariance, we see from Prob. 9.36 that the system function is 
Note that although H(z) has the same poles as the filter designed using step invariance, the system functions 
are not the same. Therefore, the two designs are not equivalent. 
9.38 
Suppose that we would like to design a discrete-time low-pass filter by applying the impulse invariance 
method to a continuous-time Butterworth tilter that has a magnitude-squared function 

FILTER DESIGN 
[CHAP. 9 
The specifications for the discrete-time ti lter are 
Show that the design is not affected by the value of the sampling period that is used in the impulse 
invariance technique. 
In the absence of aliasing, the impulse invariance method is a linear mapping from H,,(jQ) to H(eJL" for Iwl 5 n. 
This mapping is 
H W " )  = H,,(;w ",=,,! 
IwI 5 n 
Let us assume that there is no aliasing (this will be approximately true if the filter order is large enough). The required 
filter order is then 
log d  
N Z -  
log k 
where d, the discrimination factor, is 
(I - 6,J2 - 1 
d = [  
6;z-1 
1 "' 
and k, the selectivity factor, is 
R 
k=' 
Q, 
Clearly, the discrimination factor does not depend on the sampling period T,. In addition, with w, = Q,T, and 
w, = Q,T,, it follows that 
w,,l T, - w,, 
k = -  
- - 
to,, 1 T, 
W, 
which does not depend on the sampling period. Therefore, the required filter order is independent of T,. Next, if we 
expand the system function of the Butterworth filter in a partial fraction expansion. we have 
where the poles, sk, are 
With impulse invariance, the system function of the discrete-time filter becomes 
and it follows that the poles of H(z) are at 
2 = exp(sl T,) = exp{Q, T,Or 1 
where 
Because w, = R, T, is the 3-dB cutoff frequency of the low-pass filter in the discrete-time domain, it is fixed by the 
tilter specifications. Therefore, the poles of H ( : )  will not be affected by the sampling period T,. For example, if we 
try to decrease T, to reduce aliasing, this would require an increase in Q, to preserve the cutoff frequency. Thus, 11 
follows that the design is not affected by T,. 
9.39 
Use the impulse invariance method to design a low-pass digital Butterworth filter to meet the following 
specifications: 

CHAP. 91 
FILTER DESIGN 
409 
In the absence of aliasing, the impulse invariance method is a linear mapping from H,(jR) to H(eJW) for Iwl 5 n, 
which is given by 
H(eJ") = ~ . ( . i R ) l ~ , ~ ~ ,  14 
5 x 
Therefore, in order to simplify the design, we will assume that there is no aliasing and then, after the design is 
completed. check to see that the filter satisfies the given specification:;. Because the parameter T, does not enter into 
the design using the impulse invariance method (see Prob. 9.38), for convenience we will set T, = 1 .  
The first step, then, is to design an analog Butterworth filter according to the following specifications: 
To determine the filter order. we compute the discrimination factor, 
and the selectivity factor. 
Thus, we have 
log d 
N = -  
= 5.71 
log k 
which, when rounded up, gives N = 6. 
For the 3-dB cutoff frequency of the Butterworth filter, we will select 52, so that 
that is, so that the Butterworth filter satisfies the passband specifications exactly (this will provide for some allowance 
for aliasing in the stopband). With 
we have 
which gives 
Therefore, the magnitude of the frequency response squared is 
I 
~HU(J')~' = I + c n / o , 7 0 9 ~  
and the 12 poles of 
I 
Ha(s)Ha(-s) = 
I + (~/jS2(.)'~ 
lie on a circle of radius R, = 0.7090, at angles 

FILTER DESIGN 
[CHAP. 9 
as illustrated in the following figure: 
Thus, the poles of the Butterworth filter are the three complex conjugate pole pairs of H,(s)H,(-s) 
that are in the 
left-half s-plane: 
Therefore, with 
forming second-order polynomials from each conjugate pole pair, we have 
The next steps, which are algebraically very tedious, are lo perform a partial fraction expansion of H,,(s), 
perform the transformation 
and then recombine the terms. The result is 
0.0007~ ' + 0.0105z~-' + 0.0168z-~ + 0.0042~-~ + 0.0001z-~ 
H (z) = 
I - 3.3431~-I + 5.0150~-~ 
- 4.21532-2 + 2.0703~-~ 
- 0.5593zr5 + O.0646zr6 
The magnitude of the frequency response in decibels is plotted in the following figure. 

CHAP. 91 
FILTER DESIGN 
As a final check on the design, evaluating H(eJU) at w = 0 . 2 ~  
and w = 0 . 3 ~ ,  
we find that 
Therefore, the filter exceeds the passband specifications and comes close to meeting the stopband specifications. If 
this filter is unacceptable, the design could be modified by decreasing Q, to improve the stopband performance. 
9.40 
Repeat Prob. 9.39 using the bilinear transformation. 
Using the bilinear transformation to design a Butterworth filter according to the specifications given in Prob. 9.39, 
we first use the transformation 
to map the passband and stopband frequencies of the digital filter to the cutoff frequencies of the analog filter. With 
Ts = 2, we have 
= tan(0. I n )  == 0.3249 
and 
R, = tan 2 = tan(0.15~) 
L- 0.5095 
(11 
As we found in Prob. 9.39, the required filter order IS N = 6. For the 3-dB cutoff frequency of the analog Butterworth 
filter, we may choose any frequency in the range 
or 
0.3667 5 R,. 5 0.39 10 
If we select Q,. =0.3667, the passband specifications will be met exactly, and the stopband specifications will be 
exceeded. Conversely. if we set R, = 0.3910. the stopband specifications will be met exactly, and the passband 
specifications exceeded. Picking a frequency between the two extremes will produce an improvement in both bands. 
Because the stopband deviation is twice that of the deviation in the passband. we will set 0,. = 0.3667 in order to 
improve the stopband performance. From Table 9-4, we find the coel'ticients in the system function of a sixth-order 
normalized (52, = I) Butterworth filter to be 
To obtain a Butterworth filter with a cutofl' frequency R, = 0.3666, we perform the low-pass-to-low-pass transfor- 
mation 
r 

FILTER DESIGN 
[CHAP. 9 
This gives 
(0.3666)' 
Hob) = s6 + 1.4 165s5 + 1 .0033sJ + 0.4505s3 + 0. 1349s2 + 0.0256s + 0.0024 
Finally, we apply the bilinear transformation 
I - z-' 
s=- 
I + 2-' 
which yields the digital filter 
0.0006 + 0.0036z-' + 0.0090~-~ 
+ 0.0120~--' + 0.0090~-~ 
+ 0.0036~-~ 
+ 0.0006~-' 
H (z) = 
I - 3 . 2 9 4 2 ~ '  + 4.8985zr2 - 4.0857zr3 + 1.9932~-~ 
- 0.5353~-~ + 0.0615~-~ 
At the passband cutoff frequency, o, = 0.217, the magnitude of the frequency response is 
and at the stopband cutoff frequency, o, = 0.317, the magnitude of the frequency response is 
Therefore, this filter meets the given specifications. 
9.41 
Use the bilinear transformation to design a first-order low-pass Butterworth filter that has a 3-dB cutoff 
frequency w,. = 0 . 2 ~ .  
If a digital low-pass filter is to have a 3-dB cutoff frequency at w,. = 0.217, the analog Butterworth filter should have 
a 3-dB cutoff frequency 
Q. = tan($) 
= tan(0. In) = 0.3249 
For a first-order Butterworth filter. 
Therefore, the system function is 
Q, 
H0(s) = - 
s + Q,. 
With Q, = 0.3249, applying the bilinear transformation 
0.3249 
- 
- 
0.3249(1 + Z-I) 
we have 
H (z) = 
- 
- 0.2452(1 + z-I) 
1 - z - '  + 0.3249 
(1 - 2-I) + O.3249(1 + z-I) 
1 - 0.5095~-I 
1 + z-' 
9.42 
A second-order continuous-time filter has a system function 
1 
I 
H,(s) = - 
+ - 
s - a  
s - b  
where a < 0 and b i 
0 are real. 
( a )  Determine the locations of the poles and zeros of H ( z )  if the filter is designed using the bilinear 
transformation with T, = 2. 
(b) Repeat part (a) for the impulse invariance technique, again with T, = 2. 

CHAP. 91 
FILTER DESIGN 
(a) The bilinear transformation is defined by the mapping 
Therefore, for the given filter, we have 
which has poles at 
I 
I 
z l  = - and 
z2 = - 
I - a  
I - h  
To find the zeros, it is necessary to combine the two terms in the system function over a common denominator. 
Doing this. we have 
Finding the roots of the numerator may be facilitated by noting that H,(s) has a zero at s = co, which gets 
mapped to z = - 1 with the bilinear transformation. Therefore. one of the factors of the numerator is ( 1  + z-I). 
Dividing the numerator by this factor, we obtain the second factor, which is [(2 - a - b) - 2z-'1. Thus, H(;) 
has zeros at 
(b) With the impulse invariance technique, for first-order poles, the mapping is 
Therefore, with T, = 2 we have 
which has two poles at 
z1=eL1 
and 
z:!=e2h 
and only one zero. which is located at 
z,, = i(e2" + eZb 
) 
9.43 
The system function of a digital fi lter is 
(a) If this filter was designed using impulse invariance with T, = 2, find the system function, H&), of 
an analog filter that could have been the analog filter prototype. Is your answer unique? 
(b) Repeat part (a) assuming that the bilinear transformation was used with T, = 2. 
(a) Because H ( z )  is expanded in a partial fraction expansion, the poles at z = a k  in H ( z )  are mapped from poles 
in Ha(s) according to the mapping 
(yk = esl 
Therefore, if T, = 2, 
sk = hak 

FILTER DESIGN 
[CHAP. 9 
and one possible analog filter prototype is 
Because the mapping from the s-plane to the z-plane is not one to one, this answer is not unique. Specifically, 
note that we may also write 
ak = @rT,+iZn 
Therefore, with T, = 2, we may also have 
and another possible analog Rlter prototype is 
(6) With the bilinear transformation, because the mapping from the s-plane to the z-plane is a one-to-one mapping, 
with T, = 2, 
I + s  
z = -  
I - S  
and the analog filter prototype that is mapped to H(z) is unique and given by 
9.44 
A continuous-time system is called an inlegrator. if the response of the system y,(r) to an input xu([) is 
The system function for an integrator is 
( a )  Design a discrete-time "integrator" using the bilinear transformation, and find the difference equation 
relating the input x(n) to the output y(n) of the discrete-time system. 
(b) Find the frequency response of the discrete-time integrator found in part (a), and determine whether 
or not this system is a good approximation to the continuous-time system. 
(a) With a system function H&) = I/s, the bilinear transformation produces a discrete-time filter with a system 
function 
The unit sample response of this filter is 
and the difference equation relating the output y(n) to the input s ( n )  is 

CHAP. 91 
FILTER DESIGN 
415 
(b) Because the frequency response of the continuous-time system, H,(jR) = I/jR, is related to the discrete-time 
filter through the mapping 
the frequency response of the discrete-time system is 
Note that because H (ejC") 
goes to zero at w = n, then H(eJw) 
will not be a good approximation to H,(jR) = 
1 / j R  except for low frequencies. However, if w << I, using the expansion 
and 
s i n x x x  
x < < 1  
we have 
and we have, for the frequency response. 
Therefore, for small w 
H (ciw) % T, H,(jR) 
9.45 
Let H,(jQ) be an Nth-order low-pass Butterworth filter with a 3-dB cutoff frequency Q,. 
(a) Show that H,(s) may be transformed into an Nth-order high-pass Butterworth filter by adding N 
zeros at s = 0 and scaling the gain. 
(6) What is the relationship between the corresponding digital low-pass and high-pass Butterworth 
filters that are designed using the bilinear transformation? 
(a) For an N th-order low-pass Butterworth with a system function H,(s), 
Adding N zeros to H,(s) at s = 0, we have 
Multiplying numerator and denominator by ( J R ,  
yields 
which corresponds to a magnitude-squared frequency response 
Scaling tfu(jR) by R-N results in a filter that has a frequency response G,(jR) with a squared magnitude 
which is a high-pass filter with a cutoff frequency R,.. Specifically, note that IC,(jR)12 is equal to zero at 
R = 0, and that I C , ( ~ R ) ~ ~  
+ 1 as R + oo, 

FILTER DESIGN 
[CHAP. 9 
(h) Applying the bilinear transformation to a low-pass Butterworth filter, we have 
For the high-pass filter, on the other hand, we have 
Therefore, we see that the poles of the low-pass digital Butterworlh filter are the same as those of the high-pass 
digital Butterworth filter. The zeros, however, which are at z = - I  
in the case of the low-pass filter, are at 
z = I in the high-pass filter. Thus, excepl for a difference in the gain, the high-pass digital Butterworth filter 
may be derived from the low-pass filler by flipping the N zeros in H(z) at z = - 1 to z = 1. 
9.46 
The impulse invariance method and the bilinear transformation are two filter design techniques that 
preserve stability of the analog filter by mapping poles in the left-half s-plane to poles inside the unit 
circle in the z-plane. An analog filter is minimum phase if all of its poles and zeros are in the left-half 
s-plane. 
(a) Determine whether or not a minimum phase analog tilter is mapped to a minimum phase discrete-time 
system using the impulse invariance method. 
(b) Repeat part (a) for the bilinear transformation. 
(a) With impulse invariance, an analog filter with a system function 
will be mapped lo a digital filter with a system function 
Rewriting this system function as a ratio of polynomials, it follows that the locations of the zeros of H(z) will 
depend on the locations of poles as well as the zeros of H,,(s), and there is no way 10 guarantee that the zeros 
lie inside the unit circle. A simple example showing that a minimum phase continuous-time filter will not 
necessarily be mapped to a minimum phase discrete-time tilter is the following: 
Using the impulse invariance method with T, = I, we have 
which has a zero at 
z = -(be-' - 7e-2) % - 1.256 
Therefore, although H,(s) is minimum phase, H(z) is not. 

CHAP. 91 
FILTER DESIGN 
(b) The mapping between the s-plane and the z-plane with the bilinear transformation is defined by 
Therefore, a pole or a zero at s = s k  becomes a pole or a zero at 
If Ha(s) is minimum phase, the poles and zeros of H,,(s) are in the left-half s-plane. In other words, if H,(s) 
has a pole or a zero at s = sk, where sk = UL + jQn, 
Therefore, 
I:kI 
2 = 1 1 + ( T s / 2 ) k 1 2 1 ( 2 / ~ ) + ~ k 1 2  
- [ ( 2 / K ) + ~ k ] ~ f f i ?  
< I  
11 - ( T A / ~ ) ~ I ~  
- 1(2/TT) - sn12 - [(2/Ts) - un12 f fi: 
and it follows that a pole or a zero in the left-half s-plane will be mapped to a pole or a zero inside the unit 
circle in the z-plane (i.e., H(z) is minimum phase). 
9.47 
The system function of a continuous-time filter Ha(s) of order N 2 2 may be expressed as a cascade of 
two lower-order systems: 
Ha(s) = H,I(s)H,~(s) 
Therefore, a digital filter may either be designed by applying a transformation directly to H,(s) or by 
individually transforming Hal(s) and Haz(s) into H I  ( z )  and H:!(z), respectively, and then realizing H ( z )  
as the cascade: 
H ( z )  = Hi(z)Hz(z) 
( a )  If H l ( z )  and H2(z) are designed from H O l ( s )  and Ha2(s) using the impulse invariance technique, 
compare the cascade H ( z )  = HI(z)H2(z) with the filter that is designed by using the impulse invari- 
ance technique directly on H,(s). 
(b) Repeat part ( a )  for the bilinear transformation. 
(a) Due to sampling, aliasing occurs when designing a digital filter using the impulse invariance method. Because 
the operations of sampling and convolution do not commute, the filter designed by using impulse invariance on 
H,(s) will not be the same as the filter designed by cascading the two filters that are designed using impulse 
invariance on H,,(s) and Ha2(s). In other words, if 
where h(n) = h,(nT,), hl(n) = hal(nTx), and h2(n) = ha2(nT,). As an example, consider the continuous-time 
filter that has a system function 
I 
- 
I 
I 
tf,(s) = ( s +  l)(s+2) 
s +  1 
s + 2  
Using the impulse invariance technique on Ha(s) with T, = I, we have 
On the other hand, writing H,(s) as a cascade of two first-order systems, 
and using the impulse invariance method on each of these systems with T, = 1, we have 
which is not the same as the previous filter. 

FILTER DESIGN 
(b) With the bilinear transformation. (T, = 2 )  
[CHAP 9 
and the two designs are the same. 
9.48 
What are the properties of the s-plane-to-:-plane mapping defined by 
and what might this mapping be used for? 
This mapping is very similar to the bilinear trandormation which. with T, = 2, is 
In fact, this mapping may be considered to be a cascade of two mappings. The first is the bilinear transformation, 
and the second is one that replaces 1 with -:. 
" - -2 
- - 
This mapping reflects points in the :-plane about the origin and. tbr points on the unit circle. corresponds to a shift 
of 180: 
H(z1)Ic,=,,,,., 
= H(-:)I :=,, ,,,, = /I(-c"") = H (e.l""+n' ) 
Therefore, this mapping has the same properties as the bilinear transformation. except that the ;St axis is mapped 
Because the unit circle is rotated hy IXO' , this mapping may be used to map low-pass analog filters into high-pass 
digital filters, and high-pass analog tilters into low-pass digital filters. 
Least-Squares Filter Design 
9.49 
Suppose that the desired unit sample response of a linear shift-invariant system is 
Use the Pad6 approximation method to find the parameters of'a filter with a system function 
that approximates this unit sample response. 
Using the Pad6 approximation method, with p = q = I .  we want to solve the following set of linear equations for 
b(0). h( I), and a( I): 

CHAP. 91 
FILTER DESIGN 
Using the last equation, we may easily solve for a(l), 
Having found a(l), we may solve for b(0) and h(l) using the first two equations 
Therefore, we have 
H(z) = 
3 
1 - 0.52-' 
Notice that the unit sample response corresponding to this system exactly matches the given unit sample response. In 
general, however, this will not be true. A perfect match depends on hd(n) being the inverse z-transform of a rational 
function of z, and it depends upon an appropriate choice for the order of the Pad6 approximation (the number of 
poles and zeros). 
9.50 
Let the first three values of the unit sample response of a desired causal filter be hd(0) = 3, h d ( l )  = a? 
and hd(2) = &. 
(a) Using the Pad6 approximation method, find the coefficients of a second-order all-pole filter that has 
a unit sample response h(n), such that h(n) = hd(n) for 12 = 0, 1,2. 
(b) Repeat part (a) for a filter that has one pole and one zero. 
(c) Repeat part (a) for an FIR filter that has two zeros. 
(a) For a second-order all-pole filter, the equations for the Pad6 approximation are 
which, with the given values for hn(n) become 
From the last two equations, we have 
Solving for a(1) and a(2), we find 
a ( ] )  = -A 
a(2) := -1 
72 
Then, using the first equation, we have 
h(0) = 3 
Thus, the system function of the filter is 

FILTER DESIGN 
[CHAP. 9 
(b) Using a first-order system to match the given values of hd(n), 
the equations that we must solve are as follows, 
or, using the given values for h&), 
We may solve for a( I) using the last equation. 
+ $a(l) = 0 
or 
a(l) = -a 
Next. we solve for h(0) and b(l) using the first two equations. 
which gives 
3 
0 
[::;:I 
= [; ,I [';I 
= [:;I 
Thus, the system function is 
(c) For an FIR filter, the solution is trivial: 
9.51 
Find the least-squares FIR inverse filter of length 3 for the system that has a unit sample response 
I 
2 
n = O  
g ( n ) =  
I 
n = l  
0 
else 
Also, find the least-squares error, 
M 
for this least-squares inverse filter. 
To find the least-squares inverse, we need to solve the linear equations 

CHAP. 91 
FILTER DESIGN 
where 
is the deterministic autocorrelation of g(n). With N = 3, these equation:, may be written in matrix form as follows, 
For the given sequence g(n), we compute the autocorrelation sequence as follows, 
Therefore, the linear equations become 
and the solution is 
Performing the convolution of h(n) with g(n), we have 
h(n) = ' 
From this sequence, we may evaluate the squared error, 
' 0.494 
n .= 0 
-0.235 
n = 1 
0.094 
n = 2 
0 
else 
9.52 
Find the FIR least-squares inverse filter of length N for the system having a unit sample response 
where cr is an arbitrary real number. 
Before we begin. note that if la[ > 1, G ( z )  has a zero that is outside the unit circle. In this case, G(z) is not minimum 
phase, and the inverse filter 1 / G ( z )  cannot be both causal and stable. However, if la1 < I ,  
and the inverse filter is 

FILTER DESIGN 
[CHAP. 9 
We begin by finding the least-squares inverse of length N = 2. The autocorrelation sequence r.,*(k) is 
I + w 2  
k = O  
k = f l  
else 
Therefore, the linear equations that we must solve are 
The solution for h(O) and h(l) is easily seen to be 
The system function of this least-squares inverse filter is 
which has a zero at 
Note that because 
the zero of H(z) is inside the unit circle, and H(z) is minimum phase. regardless of whether the zero of G(z) is inside 
or outside the unit circle. 
Let us now look at the least-squares inverse, hN(n), of' length N .  In this case, the linear equations have the form 
Solving these equations for arbitrary a and N may be accomplished as follows. For n = 1.2, . . . , N - 2 these 
equations may be represented by the homogeneous difference equation, 
The general solution to this equation is of the form 
where cl and c.2 are constants that are determined by the boundary conditions at 11 = O and n = N - I [the ti rst and 
last equations in Eq. (9.22)l: 
Substituting Eq. (9.23) into Eq. (9.24), we have 

CHAP. 91 
FILTER DESIGN 
which, after canceling common terms, may be simplified to 
or 
The solution for cl and c2 is 
Therefore, hN(n) is 
Let us now look at what happens asyrnptoticaIly as N -t m. If Ial < 1, 
a"-N - 
lirn hN(n) = - 
- a" 
N-no 
-I\' 
n > O  
which is the inverse filter, that is, 
lim hN(n) = anu(n) = g - l ( n )  
N - m  
and 
However, if la 1 > 1, 
and 
I 
lirn HN(z) = - 
N - m  
I - az-' 
aN-n 
lirn h N ( n )  = - 
= a-n-2 
N-lo 
@N+? 
n 1 0  
a -2 
lirn HN ( z )  = 
- 
N + m  
1 -a-Iz- 1 
which is not the inverse filter. Note that although &n) = hN(n) * g(n) does not converge to S(n) as N + m, taking 
the limit o ~ B N ( z )  
as N + co, we have 
which is an all-pass filter, that is, 
9.53 
The first five samples of the unit sample response of a causal filter are 
h(0) = 3 
h(1) = - 1  
h(2) = 1 
h(3) = 2 
h(4) = 0 
If it is known that the system function has two zeros and two poles, determine whether or not the filter is 
stable. 
The system function of this filter has the form 

FILTER DESIGN 
[CHAP, 9 
To determine whether or not this system is stable, it is necessary to find the denominator polynomial, 
and check to see whether or not the roots of A(z) lie inside the unit circle. Given that H(z) has two poles and two 
zeros, we may use the Pad6 approximation method to find the denominator coefficients: 
Using the last two equations, we have 
which become 
Substituting the given values for h(n), we have 
The solution is 
a
)
 = - 
4 2 )  = 1 
3 
and the denominator polynomial is 
A(z) = I - i z - '  + !z-2 
Because the roots of this polynomial are not inside the unit circle, the filter is unstable. 
Supplementary Problems 
FIR Filter Design 
9.54 
What type of window(s) may be used to design a low-pass filter with a passband cutoff frequency w, = 0.35n, a 
transition width A o  = 0.025~, 
and a maximum stopband deviation of 8, = 0.003? 
9.55 
Use the window design method to design a minimum-order low-pass filter with a passband cutoff frequency o, = 
0.457, a stopband cutoff frequency w, = OSn, and a maximum stopband deviation 6, = 0.005. 
9.56 
We would like to design a bandstop filter to satisfy the following specifications: 
(a) What weighting function W(eJU) should be used to design this filter? 

CHAP. 91 
FILTER DESIGN 
425 
(b) What are the minimum and maximum numbers of extremal frequencies that a type I filter of order N = 128 
must have? 
9.57 
Suppose that we would like todesign a low-pass filter oforder N = 128 with apassband cutoff frequency w, = 0 . 4 8 ~  
and a stopband cutoff frequency of w, = 0 . 5 2 ~ .  
(a) Find the approximate passband and stopband ripple if we were to use a Kaiser window design. 
( b )  If an equiripple filter were designed so that it had a passband ripple equal to that of the Kaiser window design 
found in part (a), how small would the stopband ripple be? 
9.58 
We would like to design an equiripple low-pass filter of order N = 30. For a type I filter of order N ,  what is the 
minimum number of alternations that this filter may have. and what is the maximum number? 
9.59 
For a low-pass filter with ti,, = ti,, what is the difference in the stopband attenuation in decibels between a Kaiser 
window design and an equiripple filter if both filters have the same transition width? 
IIR Filter Design 
9.60 
Find the minimum order and the 3-dB cutoff frequency of a continuous-time Butterworth filter that will satisfy the 
following Frequency response constraints: 
9.61 
Use the bilinear transformation to design a first-order low-pass Butterworth filter that has a 3-dB cutoff frequency 
w,. = 0 . 5 ~ .  
9.62 
Use the bilinear transformation to design a second-order bandpass Butterworth filter that has 3-dB cutoff frequencies 
w, = 0 . 4 ~  
and w,, = 0 . 6 ~ .  
9.63 
If the specifications for an analog low-pass filter are to have a I-dB cutoff frequency of 1 kHz and a maximum 
stopband ripple 6, = 0.01 for If I > 5 kHz, determine the required filter order for the following: 
( a )  Butterworth filter 
(h) Type 1 Chebyshev filter 
(c) Type I1 Chebyshev filter 
(d) Elliptic filter 
9.64 
Let H,(jQ) be an analog filter with 
HAjQ)ln=o = 1 
(a) If a discrete-time filter is designed using the impulse invariance method, is it necessarily true that 
(b) Repeat part (a) for the bilinear transformation 
9.65 
Consider a causal and stable continuous-time filter that has a system function 
If a discrete-time filter is designed using impulse invariance with T, = 1, find H(z). 
9.66 
The system function of a digital filter is 

FILTER DESIGN 
[CHAP 9 
(a) Assuming that this filter was designed using impulse invariance with T, = 2, find the system function of two 
different analog filters that could have been the analog filter prototype. 
(b) If this filter was designed using the bilinear transformation with T, = 2, find the analog filter that was used as 
the prototype. 
9.67 
Determine the characteristics of the s-plane-to-z-plane mapping 
9.68 
The system function of an analog filter Ha(s) may be expressed as a parallel connection of two lower-order systems 
If Ha(s), Hal(s), 
and Ha2(s) are mapped into digital filters using the impulse invariance technique, will it be true that 
What about with the bilinear transformation? 
9.69 
If an analog filter has an equiripple passband, will the digital filter designed using the impulse invariance method 
have an equiripple passband? Will it have an equiripple passband if the bilinear transformation is used? 
9.70 
Can an analog allpass filter be mapped to a digital allpass filter using the bilinear transformation? 
9.71 
An IIR low-pass digital filter is to be designed to meet the following specifications: 
Passband cutoff frequency of 0.221~ 
with a passband ripple less than 0.01 
Stopband cutoff frequency of 0.241~ 
with a stopband attenuation greater than 40 dB 
(a) Determine the filter order required to meet these specifications if a digital Butterworth filter is designed using 
the bilinear transformation. 
(b) Repeat for a digital Chebyshev filter. 
(c) Compare the number of multiplications required to compute each output value using these filters, and compare 
them to an equiripple linear phase filter. 
Least-Squares Filter Design 
9.72 
Suppose that the desired unit sample response of a linear shift-invariant system is 
Use the Pad6 approximation method to find the parameters of a filter with a system function 
that approximates this unit sample response. 
9.73 
The first five samples of the unit sample response of a causal filter are 
h(0) = 0.2000 
h(1) = 0.7560 
h(2) = 1.0737 
h(3) = -0.8410 
h(4) = -0.6739 
If it is known that the system function has two zeros and two poles, determine whether or not the filter is stable. 

CHAP. 91 
FILTER DESIGN 
Answers to Supplementary Problems 
A Hamming or a Blackman window or a Kaiser window with ,9 = 4.6. 
h(n) = w(n)h,,(n), where w(n) is a Kaiser window with B = 4.09 and N = 107, and 
1 
0 5 w 5 0 . 3 ~  
5 
0 . 3 5 ~  9 w 5 0 . 8 ~  
1 
0 . 8 5 ~  5 w 5 K 
(b) The minimum is 66 and the maximum is 69. 
(a) 6, % 6, =0.0058.(b)SS =0.0016. 
The minimum number is 17 and the maximum is 18. 
5 dB. 
N = 9 and Q,. = 17.342~. 
0.65( 1 - zr2) 
H ( z )  = 2.65 -t 1 .35r2 ' 
(a) N = 4. (h) N = 3. (c) N = 3. ( d )  N = 3. 
(a) No. (b) Yes. 
I - ze-Zz-' 
H ( z )  = -- 
( 1  - C - ~ Z - ~ ) ~ '  
(a) One possible filter has a system function 
and another is 
I 
Note, however, that the second filter has a complex-valued impulse response. 
(b) This filter is unique and has a system function 
This is a cascade of two mappings. The first is the bilinear transformation, and the second is the mapping z + zZ, 
which compresses the frequency axis by a factor of 2. Thus, a low-pass filter is mapped into a bandstop filter, and a 
high-pass filter is mapped into a bandpass filter. 
True for both methods. 
9.69 
The digital filter will have an equiripple passband with the bilinear trimsformation but not with the impulse 
invariance method. 

FILTER DESIGN 
[CHAP. 9 
9.70 
Yes. 
9.71 
(a) Butterworth filter order is N = 69. 
(h) Chebyshev filter order is N = 17. 
(c) For an equiripple filter, we require N = 185, which requires 185 delays. In addition, 93 multiplications are 
needed to evaluate each value of y(n). The Butterworth and Chebyshev filters require 69 and 17 delays, 
respectively, and approximately twice this number of multiplications to evaluate each value of y(n). 
9.72 
Pad6 gives b(0) = 1, b(l) = 0.5, and a(l) = -0.5, or 
9.73 
PadC's method with p = q = 2 gives 
0.2 + 0.82-' + 1.42-~ 
H ( z )  = 
1 + 0.222-1 + 0.8zr2 
Because the roots of the denominator lie inside the unit circle, this filter is stable. 

Index
A
A-D converter, 101
Aliasing, 103
Allpass filter, 59, 193
lattice, 300
network, 296
Alternation, 364
theorem, 364
Analog low-pass filter, 367
Butterworth, 367
Chebyshev, 370
elliptic, 372
Analog-to-digital converter, 101
Anti-aliasing filter, 104
Aperiodic, 3
Associative property, 11
Autocorrelation, 42
B
Bandpass filter, 59
Bandstop filter, 59
BIBO, 10
Bilinear transformation, 375
Bit-reversed ordering, 265
Blackman window, 360
Block convolution, 232
Branch, 287
Butterfly, 265
Butterworth analog low-pass filter, 367
normalized, 368
C
C-D, 101
Cascade, 59
network, 289, 294
Causality, 10
z-transform and, 184
Center of gravity, 91
Characteristic polynomial, 16
Chebyshev analog low-pass filter, 370
Chebyshev polynomials, 364, 370
Circulant matrix, 257
Circular convolution, 228
matrix formulation, 257
versus linear convolution, 230
Circular shift, 227
Comb filter, 331
Commutative property, 11
Compensation filter, 102
429

Complex sequence, 2
Conjugate symmetry, 4
Continuous-to-discrete converter, 101
Conservation of energy theorem, 64
Contour integration, 151
Convolution, 10, 11
block, 232
circular, 228
DFT to perform, 232
direct method, 12
DTFT to perform, 65
graphical method, 13
periodic, 225
properties, 11
slide rule method, 15
Convolution theorem, 64, 147
periodic, 64
Correlation, 42
Coupled form, 342
Cutoff frequency, 59, 358
D
D-A converter, 106
D-C converter, 106
Decibels, 56
Decimation, 14
Decimator, 111, 315
Decimation-in-frequency FFT, 266
Decimation-in-time FFT, 262
Derivative property, 148
DFT, 223
Direct form network, 289, 292
Discrimination factor, 367
DFS, 223
Difference equation, 15, 64
Discrete Fourier series, 223
Discrete Fourier transform, 236
performing linear convolution with, 232
properties, 227
Discrete-time Fourier transform, 61
properties, 62
Discrete-time signal, 1
Discrete-time system, 7
implementation, 287
Discrete-to-analog converter, 106
Discrete-to-continuous converter, 106
Distributive property, 11
Divide and conquer, 262
Down-sampling, 5, 110
DTFT, 61
E
Eigenfunction, 55
Elliptic analog low-pass filter, 372
Encoder, 106
430

Equiripple filter design, 363
Even sequence, 4
Exponential sequence, 3
Extraripple filter, 365
Extremal frequencies, 364
F
Feedback, 60, 195
FFT, 262
composite N, 267
decimation-in-frequency, 266
decimation-in-time, 262
mixed radix, 270
prime factor, 271
radix-2, 262
radix-3, 279
radix-4, 278
radix-R, 270
Filter, 58
allpass, 59
design, 358
finite word-length effects, 302
frequency selective, 59
linear phase, 58
networks (structures), 287
specifications, 358
Finite length impulse response, 16
Finite length sequence, 3
Finite word-length effects, 302
filter coefficient quantization, 304
overflow, 309
pairing and ordering, 309
round-off noise, 306
FIR, 16, 188
structures, 289
FIR filter design, 359
equiripple, 363
frequency sampling, 363
least squares inverse, 379
least squares methods, 376
Pade approximation, 377
Prony's method, 378
window design, 359
Fixed point numbers, 302
one's complement, 303
sign magnitude, 302
two's complement, 303
Floating point numbers, 303
Flowgraph, 287
Frequency response, 55
periodicity, 57
inverse, 58
symmetry, 58
Frequency transformations, 376
Fourier analysis, 55
431

Fundamental period, 3
G
Generalized linear phase, 58, 189
Geometric series, 13
Group delay, 56
computing, 78
equalization, 193
H
Hamming window, 360
Hanning window, 360
High-pass filter, 59
Hilbert transform, 185
Homogeneous solution, 16
I
IIR, 16, 188
structures, 291
IIR filter design, 366
analog low-pass filter prototypes, 367
bilinear transformation, 375
frequency transformations, 376
impulse invariance, 374
Index maps, 268
Infinite length impulse response, 16
Initial rest, 16
Initial value theorem, 148
generalized, 161
In-place computation, 265
Interpolator, 112, 318
Inverse system, 66, 186
Inverse z-transform, 149
contour integration, 151
partial fraction expansion, 149
power series, 150
Invertibility, 11
K
Kaiser window, 361
L
Lattice filter, 298
all-pole, 300
FIR, 298
IIR, 301
LCCDE, 15
Least-squares filter design, 376
FIR least squares inverse, 379
Pade approximation, 377
Prony's method, 378
Left-sided sequence, 3
Linear convolution using DFT, 232
Linear phase, 58, 189
generalized, 189
432

Linear phase (continued)
network, 289
system function constraints, 191
types I-IV, 190
Linear system, 8
Lollipop, 1
Low-pass filter, 59
LSI, 10
M
Memoryless, 7
Minimum energy delay, 195
Minimum phase, 194
Minimum phase lag, 195
Mixed radix FFT, 270
Modulator, 64
Modulo, 21, 226, 271
Mortgage, 46, 172
Multiplicative inverse, 271
N
Node, 287
Nyquist frequency, 103
Nyquist rate, 103
O
Odd harmonics, 277
Odd sequence, 4
One-sided z-transform, 151
One's complement, 303
Oscillator, 328
Overflow, 309
Overlap-add, 233
Overlap-save, 234
P
Pade approximation, 377
Pairing and ordering, 309
Paley-Wiener theorem, 184
Parallel network, 60, 295
Parks-McClellan algorithm, 365
Parseval's theorem, 64
Partial fraction expansion, 149, 187
Particular solution, 16
Passband, 59
deviation, 358
Period, 3
Periodic convolution, 225
theorem, 64
Phase, 55
generalized linear, 58
linear, 58
shifter, 69
Poles, 143
433

Power, 22
series, 150
Prime factor FFT, 271
Prony's method, 378
Q
Quantization, 303
filter coefficient, 304
Quantizer, 104
R
Radix-2 FFT, 262
Radix-R FFT, 270
Realizable system, 185
Reconstruction filter, 106
Rectangular window, 360
Reflection coefficient, 298
Region of convergence, 142
Relatively prime, 271
Residue, 151
Right-sided sequence, 3
Round-off noise, 306
S
Sample rate conversion, 110
Sampling, 103
bandpass, 119, 120
DTFT, 231
frequency, 101
period, 101
theorem, 103
Schur-Cohn stability test, 300
Selectivity factor, 367
Shifting property, 63
Shift-invariance, 9
Shuffling, 265
Sifting property, 6
Sign bit, 302
Sign magnitude, 302
Signal, 1
aperiodic, 3
complex conjugate, 2
conjugate symmetry, 4
decomposition, 6
down-sampling, 5
duration, 3
exponential, 2
finite length, 3
infinite length, 3
left-sided, 3
manipulations, 4
periodic, 3
right-sided, 3
symmetric, 4
unit sample, 2
434

Signal (continued)
unit step, 2
Signal-to-quantization noise ratio, 106
Signal manipulations, 4
Sink node, 288
Slide rule method, 15
Source node, 288
SQNR, 106
Stability, 10
Schur-Cohn test, 300
triangle, 185
z-transform and, 184
Step-down recursion, 299
Step-up recursion, 298
Stopband, 59
deviation, 358
Summation property, 155
Superposition sum, 9
Symmetric sequence, 4
System, 7
additive., 8
causal, 10
function, 183
homogeneous, 8
invertible, 11
linear, 8
LSI, 10
memoryless, 7
shift-invariant, 9
stable, 10
unit sample response, 10
T
Transition band, 359
Transposed network, 296
Transposition theorem, 296
Twiddle factor, 263
Two's complement, 106, 303
U
Uniform quantizer, 104
Unit circle, 143
Unit sample, 2
Unit step, 2
Unit sample response, 10
for a rational system function, 187
Up-sampling, 5, 112
property, 88, 163
W
Windows, 360
Warping, 375
Z
Z-transform, 142
435

Z-transform (continued)
inverse, 149
one-sided, 151
properties, table of, 148
region of convergence, 142
useful pairs, table of, 146
Zeros, 16, 143
Zero-order hold, 107
436


