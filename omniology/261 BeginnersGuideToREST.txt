
Beginners Guide to 
REST

RESTful Web Services
• Because of their simplicity and versatility, RESTful web 
services have become the de facto standard for web services. 
• REST - Representational State Transfer 
• Representation - Typically JSON or XML 
• State Transfer - Typically via HTTP  
• Established by Roy Fielding from his 2000 doctoral 
dissertation 

RESTful Terminology
• Verbs - HTTP Methods: GET, PUT, POST, DELETE 
• Messages - the payload of the action (JSON/XML) 
• URI - Uniform Resource Identiﬁer  
• A unique string identifying a resource 
• URL - Uniform Resource Locator  
• A URI with network information - http://www.example.com

RESTful Terminology
• Idempotence - 
• Wikipedia “Idempotence is the property of certain 
operations in mathematics and computer science that they 
can be applied multiple times without changing the result 
beyond the initial application.”  
• In other words, you can exercise the operation multiple 
times, without changing the result.  
• Example: Refreshing a web page (HTTP GET operation)

RESTful Terminology
• Stateless - Service does not maintain any client state 
• HATEOS - Hypermedia As The Engine of application 
State 
• Wikipedia - “a REST client should then be able to use 
server-provided links dynamically to discover all the 
available actions and resources it needs. As access 
proceeds, the server responds with text that includes 
hyperlinks to other actions that are currently available.” 

HTTP - GET
• Use: to read data from resource 
• Read only 
• Idempotent 
• Safe operation - does not change state of resource

HTTP - PUT
• Use: to insert (if not found) or update (if found) 
• Idempotent - Multiple PUTs will not change result. 
• Like saving a ﬁle multiple times 
• Not Safe operation - does change state of resource

HTTP - POST
• Use: to create new object (insert) 
• Non-Idempotent - Multiple POSTs is expected to create 
multiple objects  
• Not Safe operation - does change state of resource 
• Only Non-Idempotent, Non-Safe HTTP verb 

HTTP - DELETE
• Use: to delete an object (resource) 
• Idempotent - Multiple DELETEs will have same effect / 
behavior.  
• Not Safe operation - does change state of resource


