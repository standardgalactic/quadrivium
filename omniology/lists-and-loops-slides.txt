LISTS AND LOOPS
PLURALSIGHT AUTHOR
@dr_holderness
Practical Python for Beginners
Sarah Holderness

A List is a Container of Things
# empty list 
empty = []
# list of strings 
acronyms = ['LOL', 'IDK', 'TBH']
# list of mixed items 
anything = [5, 'SDK', 10.5]
# list of numbers 
numbers = [5, 10, 15, 20]
# list of lists 
lists = [ ['A', 'B', 'C'], ['D', 'E', 'F'] ]

Creating a List of Internet Slang Acronyms
acronyms = ['LOL', 'IDK', 'SMH', 'TBH']
We’re compiling a list of 
acronyms that we’ll deﬁne later. 

An Item’s Index is its Position
acronyms = ['LOL', 'IDK', 'SMH', 'TBH']
[0]   [1]   [2]  [3]
index
>>> acronyms[0]
>>> acronyms[3]
'LOL'
'TBH'
Note: if you want the nth item 
then use index [n-1]
1st 
item
4th 
item

Creating a List and Adding Items
acronyms = [] 
acronyms.append('LOL') 
acronyms.append('IDK') 
print(acronyms)
We can create an 
empty list.
Now we have 2 
items in the list.
['LOL', 'IDK']
And then add each 
item individually.

Creating a List and Adding Items
acronyms = ['LOL', 'IDK', 'SMH'] 
acronyms.append('BFN') 
acronyms.append('IMHO') 
print(acronyms)
We can also create a 
list with initial items.
And add items as we 
need to.
['LOL', 'IDK', 'SMH', 'BFN', 'IMHO']
We have our 2 
extra items

Creating a List and Adding Items
acronyms = ['LOL', 'IDK', 'SMH'] 
acronyms.append('BFN') 
acronyms.append('IMHO') 
print(acronyms)
['LOL', 'IDK', 'SMH', 'BFN', 'IMHO']
We haven’t called a 
method like this 
before.

Calling a Method
acronyms.append('BFN')
The list you 
want to change
dot
The list 
method 
What you want 
to add to the list 
in parentheses()

Removing Items
acronyms = ['LOL', 'IDK', 'SMH', 'TBH', 'BFN'] 
print(acronyms)
['LOL', 'IDK', 'SMH', 'TBH']
You can see 'BFN' 
was removed
acronyms.remove('BFN') 
OR  del acronyms[4]
You can use either 
remove or del 
depending on 
whether you know 
the value or the 
index.

Check if Exists in List
if  1  in  [1, 2, 3, 4, 5]: 
    print('True')
if
item
list
in
True

Check if Exists in List
acronyms = ['LOL', 'IDK', 'SMH', 'TBH'] 
word = 'BFN' 
if word in acronyms: 
    print(word + ' is in the list') 
else: 
    print(word + ' is NOT in the list')
BFN is NOT in the list
False
So this line is run

Printing a List
acronyms = ['LOL', 'IDK', 'SMH', 'TBH'] 
print(acronyms)
['LOL', 'IDK', 'SMH', 'TBH']
What if we want to print each 
acronym on a separate line?
We need a loop

The Syntax of a for loop
for  acronym  in  acronyms: 
    print(acronym)
for
Loop 
variable
list
in
acronym is a temporary 
variable that holds one of 
the acronyms in the 
list for each run.  
Like saying "do this" for 
each string acronym in 
our acronyms list.  

For Loop: Looping Over Each Item in a List
acronyms = ['LOL', 'IDK', 'SMH', 'TBH'] 
for acronym in acronyms: 
    print(acronym)
LOL 
IDK 
SMH 
TBH
1st loop 
2nd loop 
3rd loop 
4th loop 

For Loop: Looping Over Each Item in a List
Notice how the code 
block you want 
repeated inside the 
loop is indented, just 
like in an if statement.
acronyms = ['LOL', 'IDK', 'SMH', 'TBH'] 
for acronym in acronyms: 
    print(acronym)
LOL 
IDK 
SMH 
TBH
1st loop 
2nd loop 
3rd loop 
4th loop 

For Loops Using range() 

Adding Input to Expenses Calculator
expenses.py
expenses = [10.50, 8.50, 5.30, 15.05, 20.00, 5.00, 3.00] 
total = sum(expenses) 
print("You spent $", total, " on lunch this week.", sep='')
We want the user to 
be able to enter their 
own expenses

Adding Input to Expenses Calculator
expenses.py
expenses = [] 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
expenses.append(float(input("Enter an expense:\n"))) 
...
With our current set 
of tools, we would 
type input 7 times. 
Is there a way we 
can loop 7 times 
instead and ask for 
input inside the 
loop?

The range() Function
>>> range(7)
>>> range(0, 7, 1)
Start
Stop
Step
Generates the sequence (0, 1, 2, 3, 4, 5, 6)
Note: Start and Step are optional.  
Start is 0 by default, Step is 1.
Note: The sequence starts at 0 and ends at 6,  
but there are 7 numbers.
Generates the sequence (0, 1, 2, 3, 4, 5, 6)

>>> range(7)
(0, 1, 2, 3, 4, 5, 6)
>>> range(0, 7, 1)
Start
Stop
Step
(0, 1, 2, 3, 4, 5, 6)
>>> range(2, 14, 2)
(2, 4, 6, 8, 10, 12)
We get even numbers 
starting at 2 and 
stopping before 14
The range() Function

Range and For Loops
for i in range(7): 
    print(i)
0 
1 
2 
3 
4 
5 
6
We can then use a for loop like 
we’ve seen with the sequence 
generated by range().
This let’s us loop a certain 
number of times, which is what 
needed to enter expenses…

Adding Input to Expenses Calculator
expenses.py
total = 0 
expenses = [] 
for i in range(7): 
    expenses.append(float(input("Enter an expense:"))) 
total = sum(expenses) 
print("You spent $", total, sep='')

total = 0 
expenses = [] 
for i in range(7): 
    expenses.append(float(input("Enter an expense:"))) 
total = sum(expenses) 
print("You spent $", total, sep='')
> python3 expenses.py 
Enter an expense:10 
Enter an expense:5 
Enter an expense:20 
Enter an expense:12 
Enter an expense:13 
Enter an expense:8 
Enter an expense:4 
You spent $72
Adding Input to Expenses Calculator
expenses.py

total = 0 
expenses = [] 
for i in range(7): 
    expenses.append(float(input("Enter an expense:"))) 
total = sum(expenses) 
print("You spent $", total, sep='')
> python3 expenses.py 
Enter an expense:10 
Enter an expense:5 
Enter an expense:20 
Enter an expense:12 
Enter an expense:13 
Enter an expense:8 
Enter an expense:4 
You spent $72
Adding Input to Expenses Calculator
expenses.py
What if we want the 
user to enter the 
number of expenses?

Adding Input to Expenses Calculator
expenses.py
total = 0 
expenses = [] 
num_expenses = int(input("Enter # of expenses:")) 

> python3 expenses.py 
Enter # of expenses:5 
Enter an expense:5 
Enter an expense:20 
Enter an expense:12 
Enter an expense:13 
Enter an expense:8 
You spent $58
Adding Input to Expenses Calculator
expenses.py
for i in range(num_expenses): 
    expenses.append(float(input("Enter an expense:"))) 
total = sum(expenses) 
print("You spent $", total, sep='')
total = 0 
expenses = [] 
num_expenses = int(input("Enter # of expenses:")) 

