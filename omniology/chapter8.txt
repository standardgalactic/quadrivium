Table of Contents
Chapter 8. RSS and RDF............................................................................................... 1
8.1. What are RSS and RDF?.................................................................................................................................................... 1
8.2. Creating Your First Basic RSS Feed.................................................................................................................................. 3
8.3. RDF and RSS 1.0............................................................................................................................................................... 8
8.4. Parsing RSS Feeds ......................................................................................................................................................... 12
8.5. Our CMS Project............................................................................................................................................................... 15
8.6. Summary........................................................................................................................................................................... 19
Chapter 8. RSS and RDF
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
This PDF is exclusively for your use in accordance with the Safari Terms of Service. No part of it may be reproduced or transmitted in any form by any means without the prior
written permission for reprints and excerpts from the publisher. Redistribution or other use that violates the fair use priviledge under U.S. copyright laws (see 17 USC107) or that
otherwise violates the Safari Terms of Service is strictly prohibited.

Chapter 8. RSS and RDF
798
We've covered a good deal of information in this book, including XML, XSLT, XPath, and PHP
functions for processing XML. In this chapter, we're going to take what we've learned and apply it
to RSS and RDF, two exciting technologies that are used to share and disseminate XML data.
1334027
8.1. What are RSS and RDF?
661753
Depending on where you look and who you ask, RSS stands for Really Simple Syndication, Rich
Site Summary, or RDF Site Summary. Regardless of what the acronym stands for, RSS is an XML
format for distributing or syndicating content. For example, Weblogs, or "blogs," are syndicated
using this kind of XML format.
1334027
RDF stands for Resource Description Framework  , which forms the backbone of some but not all
RSS standards. It's a metadata standard for describing Web resources—not only the Web pages
themselves, but also their authors, the dates and times at which they were last updated, their
keywords and titles, and so on. That's all I'm going to say about this for the moment—we'll pick
up a discussion of RSS versions after we've run through a basic example.
1334027
8.1.1. What's the Big Deal?
672274
Imagine that you're a cartoonist or columnist working in relative obscurity on a small city's daily
newspaper. You create good stuff, but you're not known very well outside your local region. The
easiest way to make more money and reach a wider audience is to do what other respected writers
and cartoonists have done for decades—syndicate your material! If you strike the right syndication
deal, your articles or art may start appearing in dozens or hundreds of media outlets, thereby
increasing your pay and your exposure.
1334027
Chapter 8. RSS and RDF
Page 1
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.
Copyright Safari Books Online #672274

Syndication is also a good thing from the reader's point of view. In this modern age, you no longer
have to send away for the hometown paper in order to keep up with your favorite columnists or
cartoonists. It's very likely that your favorite columnist or cartoonist is featured in your local
newspaper.
1334027
It's the same idea online. You may or may not get rich by syndicating your content, but you can
certainly increase your exposure. Syndication also represents a convenient service for your audience
members, who don't have to remember to search for your content or visit your site and dig through
all your other information to see if you've published anything new—users simply subscribe and
keep getting updates. If you have RSS up and running, whenever you add an article or other
interesting content item to your site, you can create an RSS entry that points to this content. This
new entry will show up in RSS aggregators and listings on Website belonging to your subscribers.
1334027
8.1.2. What Kind of Information Should be Featured in an RSS Feed?
672274
When you create an RSS feed, keep these rules of thumb in mind:
1334027
1. The content must be list-oriented. List-oriented content includes news headlines, article summaries, rankings, job listings, bookmarks,
search result listings, event calendars, press release summaries, and other information.
2. The content should cover topics in which your audience has an interest. Another way to look at this is to ask yourself, is the content
useful or instructional? Does it keep subscribers up-to-date with an industry or its trends? Is the material newsworthy?
3. To warrant use of the RSS feed format, the content should change frequently.
8.1.3. Before We Get Started
672274
I'm going to show you some straightforward ways to get up and running with RSS. Be aware,
though, that some parts of RSS/RDF (especially RDF syntax) can be obscure and confusing. You
might not know which elements of the RDF syntax are required, for example, because the RDF
specification can be pretty hard to plow through. The goal of this chapter is merely to provide you
with a clear idea of how the world of RSS works.
1334027
To begin, let's take a look at RSS in action. Figure 8-1 shows  a program called SharpReader reading
an RSS feed from sitepoint.com. To read an RSS feed, all you have to do is provide SharpReader
with the URL of that feed.
1334027
Once you know where a feed is located, you can click the Subscribe button on SharpReader to keep
receiving updates. If sitepoint.com updates its RSS feed, then subscribers, too, receive updates. In
fact, if you have SharpReader running, little windows will pop up, displaying headlines from your
subscribed feeds, on the side of your screen.
1334027
Chapter 8. RSS and RDF
Page 2
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Figure 8-1. Using SharpReader to view the SitePoint RSS feed.
8.2. Creating Your First Basic RSS Feed
661753
Let's create an RSS file (or feed) from scratch. No matter how big, small, simple, or complicated
the feed may be, at the heart of every RSS file lies a list of content items. Your RSS file can contain
one item, 1,000 items, or anything in between (or beyond), but without at least one item, you really
don't have an RSS file.
1334027
What does such an item comprise? Three very important parts:
1334027
• A title
• A link
• A description
Let's say that you maintain a Website that covers the world of Web development. In particular, your
articles explore a particular niche: ecommerce Web development. Furthermore, let's imagine that
you've just published a new article about the use of PHP to integrate PayPal into a Website. Now
you want to point to this article and let your subscribers know it's available to them.
1334027
Chapter 8. RSS and RDF
Page 3
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

It's likely that you gave your article HTML <title> and <meta name="description">
tags. You don't have to use this title and description when you create your RSS item, though it
certainly doesn't hurt. However, you do have to accurately point to the proper URL to allow
subscribers to link to the information.
1334027
Here's how your information might look before we start to wrap XML tags around each piece:
1334027
Making PHP work with PayPal
http://www.tripledogdaremedia.com/articles/paypal-php.html
Everything you need to know to create PHP scripts that are PayPal
friendly.
To denote a title, we'll use <title> tags:
1334027
<title>Making PHP work with PayPal</title>
For the URL, use <link> tags:
1334027
<link>http://www.tripledogdaremedia.com/articles/paypal-php.html
</link>
For the description, use <description> tags:
1334027
<description>Everything you need to know to create PHP scripts
  that are PayPal friendly.</description>
To make this particular group of tags and content into an RSS item, we need to place it within an
<item> element  :
1334027
headline.xml (excerpt)
<item>
  <title>Making PHP work with PayPal</title>
  <link>http://www.tripledogdaremedia.com/articles/paypal-php.html
  </link>
  <description>Everything you need to know to create PHP scripts
    that are PayPal friendly.</description>
</item>
Congratulations, you've completed your first RSS item! But we're not done yet. We need to place
our <item> into a   <channel> element. Channels describe the source of the information—
usually, your Website.
1334027
RSS channels have the same elements as RSS items: <title>, <link>, and
<description>. For example, here's a channel containing the RSS item we created above:
1334027
Chapter 8. RSS and RDF
Page 4
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

headline.xml (excerpt)
<channel>
  <title>Ecommerce Development</title>
  <link>http://www.tripledogdaremedia.com/articles/</link>
  <description>If it's about ecommerce and Web development, we'll
    write about it!</description>
  <item>
    <title>Making PHP work with PayPal</title>
    <link>
    http://www.tripledogdaremedia.com/articles/paypal-php.html
    </link>
    <description>Everything you need to know to create PHP
      scripts that are PayPal friendly.</description>
  </item>
</channel>
All you have to do now is wrap the entire file with an <rss> tag, add the XML declaration, and
you have a well-formed RSS feed:
1334027
headline.xml
                            <?xml version="1.0"?>
<rss version="0.91">
  <channel>
    <title>Ecommerce Development</title>
    <link>http://www.tripledogdaremedia.com/articles/</link>
    <description>If it's about ecommerce and Web development,
      we'll write about it!</description>
    <item>
      <title>Making PHP work with PayPal</title>
      <link>
      http://www.tripledogdaremedia.com/articles/paypal-php.html
      </link>
      <description>Everything you need to know to create PHP
        scripts that are PayPal friendly.</description>
    </item>
  </channel>
</rss>
                        
Notice  that we're using version 0.91 of RSS; this means we're not yet using RDF. We'll talk about
the differences between the various RSS versions, and how they relate to RDF, a little later in this
chapter.
1334027
You can easily add more items to a channel using the syntax rules we saw above. Simply create
your items with the proper <title>, <description>, and <link> elements, and place them
inside the appropriate <channel> element in your RSS feed.
1334027
The last thing you need to do is to save the file. It's a good idea to give your RSS file a descriptive
name with .xml or .rss as the file extension: ecommercefeed.xml or ecommercefeed.rss, for example.
1334027
Chapter 8. RSS and RDF
Page 5
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

8.2.1. Telling the World about your Feed
672274
Now that you have an RSS feed, you need to tell folks about it so they can subscribe. There are two
ways to get the word out: add a link from your site to your RSS feed, and subscribe to RSS
aggregators.
1334027
8.2.2.1. Providing a Link on your Site
661753
It's  quite possible that other Website owners might want to syndicate your content on their sites.
This arrangement can be good for both of you—the site owner doesn't have to create content, as
you've provided it, and you get exposure to their audience. If you provide a link to your RSS feed
from your site, other site owners can easily point their PHP-, ASP.NET-, Perl-, Python-, and JSP-
based RSS tools toward your feed, and add to their own sites pointers to your information.
1334027
A link to our sample RSS feed might look like this:
1334027
<a href="headline.xml">RSS feed</a>
To further promote your RSS feed, you can also include a <link> tag in your page header
(<head>), so that RSS-enabled browsers and search engines can see your feed:
1334027
<link rel="alternate" type="application/rss+xml" title="RSS Feed"
    href="headline.xml" />
That's really all there is to it!
1334027
8.2.2.2. Subscribing to RSS Aggregators
661753
RSS aggregators  , or news aggregators, are services that allow you to add your RSS feed to an
existing catalog of RSS feeds. Other users can search for and subscribe to your feed, either on the
Web or through a standalone, downloadable RSS feed reader (also called an aggregator). Here are
two of the more popular RSS news aggregators:
1334027
• News Is Free is a long-standing Web-based news aggregator. Using the free service, you can create customized "pages" for different
topics, then have headlines from various resources automatically filled into those pages.
• Radio UserLand , a popular blog-building tool, is also another long-standing news aggregator. You can subscribe to a feed simply by
entering its URL.
Chapter 8. RSS and RDF
Page 6
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Note: These   services will likely require that you validate your RSS file before you submit it. You can find
numerous RSS validators by Googling for "rss validator," but one is available from the W3C:
http://www.w3.org/RDF/Validator/
Now that we've covered the basics of RSS, let's dig into the details a little more.
1334027
8.2.2. Going Beyond the Basics
672274
Notice in our example that we were using a particular version of RSS.
1334027
headline.xml (excerpt)
                            <rss version="0.91">
                        
This RSS is known as Really Simple Syndication, and was jointly developed by Netscape  and
Userland Corporation. The idea behind this version of RSS is to provide a very simple tool for
content syndication.
1334027
As you already know from the example, with RSS version 0.91, you can have one or more
<channel> elements, each with at least one <item> element. Each <item> element must
contain a <title> and a <link> and can also contain a <description> element. The same
goes for the <channel>s themselves.
1334027
Other  channel metadata tags that you can include are:
1334027
<image>
to specify a thumbnail image for the channel
<webMaster>
<managingEditor>
to provide email addresses for those responsible for the feed
<lastBuildDate>
to indicate when the feed was last updated
For the details on these and other RSS 0.91 elements, you can refer to the RSS 0.91
specification. More recent versions of the specification exist. Both RSS 0.92 (December 2000) and
RSS 2.0 (October 2002) add more tags, and lift restrictions on certain tags (e.g. in 0.91 the
<link> tag had to point to an HTTP or FTP resource; in 2.0 any valid URI will do). But since
0.91 is forwards-compatible with these standards (a valid RSS 0.91 document is also a valid RSS
2.0 document), RSS 0.91 continues to be the best starting place for beginners who don't need the
more advanced features of the later standards.
1334027
Chapter 8. RSS and RDF
Page 7
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

8.3. RDF and RSS 1.0
661753
RSS  1.0 is something of a lone wolf. Although it was designed to do the same thing as other versions
of RSS, it has very little to do with the other standards. In many ways, it is actually more advanced
than RSS 2.0, and it is therefore the preferred choice of many forward-looking Web developers.
1334027
First of all, the "RSS" in RSS 1.0 stands for RDF Site Summary. This particular flavor of RSS,
released just prior to RSS 0.92 in December 2000, uses RDF, the Resource Description Framework,
to define what the files look like. In a hand-wavy sort of way, RDF is a standard for describing
anything and what it has to do with anything else. Vague enough for you?
1334027
Without actually getting into the details of RDF, which is quite a powerful and complex collection
of specifications, let me assure you that there is a lot more to it than an XML document format for
describing lists of things; but in the context of RSS 1.0, that's exactly how it's used. The advantage
of using RDF is that RSS 1.0 documents can take part in larger software systems designed around
RDF. One such system that is still in the planning stages is the Semantic Web,  a reimagination of
the World Wide Web that will allow computer programs to seek out and pull together disparate
services and bits of information from across the Web to accomplish tasks for you, without your
having to track down all those things yourself.
1334027
But hey, that's all coming tomorrow (or possibly the day after tomorrow). Right now, the complexity
of RDF just makes syndicating content with RSS 1.0 a little more difficult than with the other RSS
standards. Let's see just how difficult… Here's the RSS 1.0 version of the simple RSS 0.91 document
we saw earlier:
1334027
headline.rdf
<?xml version="1.0"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns="http://purl.org/rss/1.0/">
  <channel
      rdf:about="http://www.tripledogdaremedia.com/articles/">
    <title>Ecommerce Development</title>
    <link>http://www.tripledogdaremedia.com/articles/</link>
    <description>If it's about ecommerce and Web development,
      we'll write about it!</description>
    
    <items>
      <rdf:Seq>
        <rdf:li rdf:resource=
"http://www.tripledogdaremedia.com/articles/paypal-php.html"/>
      </rdf:Seq>
Chapter 8. RSS and RDF
Page 8
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    </items>
  </channel>
  <item rdf:about=
"http://www.tripledogdaremedia.com/articles/paypal-php.html">
    <title>Making PHP work with PayPal</title>
    <link>
    http://www.tripledogdaremedia.com/articles/paypal-php.html
    </link>
    <description>Everything you need to know to create PHP scripts
      that are PayPal friendly.</description>
  </item>
</rdf:RDF>
The first thing you'll notice about this document is the pair of XML namespace declarations in the
root element of the document:
1334027
headline.rdf (excerpt)
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns="http://purl.org/rss/1.0/">
As these declarations indicate, RSS 1.0 is actually a mixture of at least two groups of XML tags
and attributes: the RDF standard tags/attributes, which are given the rdf: namespace prefix, and
the RSS-specific tags/attributes, which will use the default namespace. As required by the RDF
standard, the root element of the document is <RDF>.
1334027
Things become a little more familiar with the <channel> element:
1334027
headline.rdf (excerpt)
  <channel
      rdf:about="http://www.tripledogdaremedia.com/articles/">
    <title>Ecommerce Development</title>
    <link>http://www.tripledogdaremedia.com/articles/</link>
    <description>If it's about ecommerce and Web development,
      we'll write about it!</description>
So far, the only change from RSS 0.91's <channel>   element is the addition of an RDF
<about> attribute to the tag. At a glance, you might think that it makes no sense to put the URL
of the site to which this channel refers in this attribute, since it's already given by the <link>
element inside the <channel>. This attribute actually serves as a unique identifier for the 
<channel>, as required by RDF. It is simply a convention of RDF that a URI is used for this
purpose, in the same way that URIs are used to identify XML namespaces.
1334027
But if you got upset about the <about> attribute, you aren't going to like the rest of the
<channel> element at all…
Chapter 8. RSS and RDF
Page 9
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

1334027
headline.rdf (excerpt)
    <items>
      <rdf:Seq>
        <rdf:li rdf:resource=
"http://www.tripledogdaremedia.com/articles/paypal-php.html"/>
      </rdf:Seq>
    </items>
  </channel>
Instead of embedding a list of <item> elements right inside the <channel>, RSS 1.0 follows
the RDF requirement that all the things that the document describes (be they channels, items, or
even images) appear as children of the root <RDF> element. Instead, the <channel> contains a
single <items> element, which contains an RDF table of contents (TOC).
1334027
RDF supports at least two types of TOC: bags   and sequences. A bag is the RDF equivalent of an
HTML unordered list (<ul>), whereas a sequence is like an ordered list (<ol>). Since the order
of items in RSS feeds is important, RSS 1.0 uses an RDF sequence (<rdf:Seq>). A sequence
contains one or more RDF list items (<rdf:li>), each with an RDF <resource> attribute that
points to the unique URI for an item in the feed.
1334027
With the <channel> taken care of, we can now define our <item>s:
1334027
headline.rdf (excerpt)
  <item rdf:about=
"http://www.tripledogdaremedia.com/articles/paypal-php.html">
    <title>Making PHP work with PayPal</title>
    <link>
    http://www.tripledogdaremedia.com/articles/paypal-php.html
    </link>
    <description>Everything you need to know to create PHP scripts
      that are PayPal friendly.</description>
  </item>
Again, this looks a lot like the RSS 0.91 version, except for the RDF <about>  attribute, which
provides a URI that uniquely identifies the item. This is the URI that the <items> element in the
<channel> points to in order to include it in the channel.
1334027
8.3.1. Adding Information with Dublin Core
672274
Now, when you saw the namespace declarations that were required at the top of an RSS 1.0 file, I
bet you thought, "Oh man, I have to type all that stuff every time I create an RSS feed? Nuts to
Chapter 8. RSS and RDF
Page 10
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

that." Well, who can blame you? As it turns out, however, giving the RSS 1.0 the benefit of XML
namespaces allows us to extend the format with tags from other XML namespaces.
1334027
The people behind RSS have even provided three additional sets of XML tags, each with its own
namespace (these are called modules ), as part of the RSS 1.0 specification. The most popular of
these is the Dublin Core  set of metadata elements, which lets you specify additional properties for
<channel>s and <item>s in your RSS feeds.
1334027
To use Dublin Core, you need to declare its namespace in your RSS feed, along with the others:
1334027
headlinedc.rdf (excerpt)
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns="http://purl.org/rss/1.0/">
You can then add Dublin Core elements to your RSS feed. Here's our example <item> element,
with a bit of Dublin Core flair:
1334027
headlinedc.rdf (excerpt)
  <item rdf:about=
"http://www.tripledogdaremedia.com/articles/paypal-php.html">
    <title>Making PHP work with PayPal</title>
    <link>
    http://www.tripledogdaremedia.com/articles/paypal-php.html
    </link>
    <description>Everything you need to know to create PHP scripts
      that are PayPal friendly.</description>
    <dc:subject>Server-Side Scripting</dc:subject>
    <dc:creator>Thomas Myer</dc:creator>
    <dc:date>2005-06-25</dc:date>
  </item>
Dublin Core, as its esoteric name might suggest, actually has a rich and full life outside of the RSS
1.0 specification. For full details on Dublin Core and the elements it provides, visit the Dublin Core
Metadata Initiative.
1334027
8.3.2. When to use RSS 1.0
672274
When you look at the different versions of RSS, you might ask yourself when you would use which
version. That's a good question.
1334027
Chapter 8. RSS and RDF
Page 11
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

For most cases, as in most of the examples in this chapter, you would use the 0.91 version of RSS,
or possibly version 2.0 if you like its advanced features. These formats provide the simplest,
quickest, and easiest solution for your feeds. These versions of RSS are not hard to understand, and
building systems that process them isn't hard to do.
1334027
RSS 1.0 provides more robust syntax that allows you to incorporate specialized tags for additional
information. For example, you can use Dublin Core's set of tags to track information about authors,
publication dates, last-edit dates, and so on. You can even devise your own sets of tags and mix
them in for your own devious purposes, all within the generalized resource description framework
provided by RDF.
1334027
Note: The AtomEnabled project   is a recently-devised initiative to develop standard APIs and data formats
for publishing content on the Web. It includes its own XML-based syndication format that presents an
alternative to RSS feeds. Sam Ruby of IBM is most often credited with many of the core ideas behind Atom,
which include common metadata terms to support the description of author name, publication date, resource
identifier and location, and content.There isn't enough space in this book to cover Atom, but you may wish
to look into the format and possibly support it along with the RSS version(s) of your feeds. Because it is
XML, it can be processed with SimpleXML and XSLT, just like RSS.
8.4. Parsing RSS Feeds
661753
Now that we know something about RSS files, let's walk through how you would add a script to
your site to parse an RSS feed and display the information properly.
1334027
To keep things simple, we'll continue to use our RSS 0.91 example from earlier in the chapter. The
only change we'll make is to add two more items to the channel.
1334027
headlines.xml
<?xml version="1.0"?>
<rss version="0.91">
  <channel>
    <title>Ecommerce Development</title>
    <description>If it's about ecommerce and Web development,
      we'll write about it!</description>
    <link>http://www.tripledogdaremedia.com/articles/</link>
    <item>
      <title>Making PHP work with PayPal</title>
      <description>Everything you need to know to create PHP
        scripts that are PayPal friendly.</description>
      <link>
Chapter 8. RSS and RDF
Page 12
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

      http://www.tripledogdaremedia.com/articles/paypal-php.html
      </link>
    </item>
    <item>
      <title>Building a PHP Shopping Cart</title>
      <description>A quick how-to on building a PHP-based shopping
        cart.</description>
      <link>
  http://www.tripledogdaremedia.com/articles/shoppingcart-php.html
      </link>
    </item>
    <item>
      <title>SEO and PHP</title>
      <description>Boosting your ecommerce site's visibility with
        SEO, the PHP way.</description>
      <link>
      http://www.tripledogdaremedia.com/articles/seo-php.html
      </link>
    </item>
  </channel>
</rss>
8.4.1. Parsing our Feed with SimpleXML
672274
We're going to parse this feed with SimpleXML. The first thing we need to do is load that file into
our parser and then do our work. For this example, we'll use a local file for the RSS feed:
1334027
parserss.php (excerpt)
<?php
$rssfeed = simplexml_load_file('headlines.xml');
Of course, in the real world, we would more likely be loading the RSS feed from another site.
Thankfully, you can pass SimpleXML a URL just as easily:
1334027
$rssfeed = simplexml_load_file(
    'http://www.tripledogdaremedia.com/sample.rss');
Once we have it loaded into SimpleXML, all we have to do is start looping through each
<channel>  in the file with a simple foreach loop. Along the way, we'll print out the
<channel>'s <title>, <description>, and <link>:
1334027
parserss.php (excerpt)
  foreach ($rssfeed->channel as $channel) {
    echo '<h1>' . htmlentities($channel->title) . '</h1>';
    echo '<p>' . htmlentities($channel->description) . '</p>';
Chapter 8. RSS and RDF
Page 13
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    echo '<p><a href="' . htmlentities($channel->link) . '">' .
        htmlentities($channel->link) . '</a></p>';
Now that we've printed out that information, we can start an inner loop and print out each
<item>. For this exercise, I've decided to use a bullet list, but you could just as easily format it as
a data table:
1334027
parserss.php (excerpt)
    echo '<ul>';
    foreach ($channel->item as $item) {
      echo '<li><a href="' . htmlentities($item->link) . '">';
      echo htmlentities($item->title) . '</a><br />';
      echo htmlentities($item->description) . '</li>';
    }
    echo '</ul>';
  }
?>
As you can see, this script is very small (fewer than 20 lines) and very easy to maintain, thanks to
SimpleXML's simplified syntax. The result is illustrated in Figure 8-2.
1334027
Chapter 8. RSS and RDF
Page 14
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Figure 8-2. Parsing RSS with SimpleXML.
If you wanted to, it would be very easy to include this SimpleXML code snippet into a larger design
—for example, a sidebar of article links featured on your site's homepage.
1334027
Note: Kevin Yank   has an excellent article entitled PHP and XML: Parsing RSS 1.0, which covers the use
of both SAX and DOM for parsing RSS 1.0 documents.
8.5. Our CMS Project
661753
Any   self-respecting article-based site nowadays needs an RSS feed. But rather than simply offering
a feed for the latest articles on our site, let's allow each user to select the categories he or she is
interested in and generate a feed of the newest articles in those categories on-the-fly.
1334027
Chapter 8. RSS and RDF
Page 15
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

8.5.1. Creating an RSS Feed
672274
To achieve our goal, we need two new PHP scripts: one that presents a form for the user to select
the categories of interest, and another that processes that form submission to produce a customized
RSS feed.
1334027
8.5.2.1. Creating the Form
661753
Here is our form. You will notice that we are using SimpleXML, as we have before, to produce a
list of categories from which to choose.
1334027
feedselect.php
<?php
include_once 'common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Feed Designer</title>
</head>
<body>
<h1>Feed Designer</h1>
<p>Create your own customized RSS feed to be notified of the
  latest articles published in your areas of interest.</p>
<p>Which categories would you like to monitor?</p>
<form action="feed.php" method="get">
<?php
$cats = simplexml_load_file($fileDir . 'categories.xml');
foreach ($cats->category as $cat) {
  if ((string)$cat['status'] == 'live') {
    echo '<p><label>';
    echo '<input type="checkbox" name="cat[]" value="' .
        htmlentities($cat['id']) . '" checked="checked" />';
    echo htmlentities($cat['label']) . '</label></p>';
  }
}
?>
<input type="submit" value="Generate Feed" />
</form>
</body>
</html>
Note that the form is set to submit using the <get> method, which will allow the user to bookmark
the resulting page, and use it in an RSS reader to continually monitor the custom feed.
1334027
Simple enough, right? Now let's get down to the business of generating the RSS feed.
1334027
Chapter 8. RSS and RDF
Page 16
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

8.5.2.2. Processing the Form Post Results
661753
The form is set to post to  feed.php. This PHP script is considerably more complicated than our
form. It must first build up our RSS feed with the proper channel information, and then parse the
articles on our site, adding the ten most recent that are live and in the selected categories to the feed.
1334027
We'll go through it a piece at a time. First, we use PHP's DOM functions to start a new XML
document, declaring RSS version 0.91 in our root <rss> element:
1334027
feed.php (excerpt)
<?php
include_once 'common.inc.php';
$doc = new DOMDocument();
$root = $doc->createElement('rss');
$doc->appendChild($root);
$root->setAttribute('version', '0.91');
We then add our <channel> element with its <title>, <description>, and <link>
elements, all of which have fixed values.
1334027
feed.php (excerpt)
$channel = $doc->createElement('channel');
$root->appendChild($channel);
$title = $doc->createElement('title');
$channel->appendChild($title);
$text = $doc->createTextNode('Example.com Articles');
$title->appendChild($text);
$desc = $doc->createElement('description');
$channel->appendChild($desc);
$text = $doc->createTextNode('Articles from example.com');
$desc->appendChild($text);
$link = $doc->createElement('link');
$channel->appendChild($link);
$text = $doc->createTextNode('http://www.example.com/');
$link->appendChild($text);
Now for the hard part: picking out the latest live articles on the site that fall within the selected
categories. Actually, it's not too different from the sort of processing we've done before:
1334027
Chapter 8. RSS and RDF
Page 17
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

feed.php (excerpt)
$handle = opendir($fileDir);
$articles = array();
while (($file = readdir($handle)) !== FALSE) {
  if (is_dir($fileDir . $file)) continue;
  if (!eregi("^article.*\.xml$", $file)) continue;
  $articles[] = $file;
}
rsort($articles);
$cats = @$_GET['cat'];
if (!is_array($cats)) $cats = array();
$itemsToGo = 10;
foreach ($articles as $file) {
  $article = simplexml_load_file($fileDir . $file);
  if ((count($cats) == 0 or
      in_array((string)$article->categoryid, $cats)) and
      (string)$article->status == 'live') {
First we use our standard means of looping through the article XML files on our site, but instead
of processing them immediately, we'll store them in an array variable named $articles. Once
we have our full list of article files, we sort them in reverse order, from latest to oldest (remember,
articles have timestamps in their filenames) , using PHP's rsort function.
1334027
The categories selected by the user arrive in the $_GET['cat'] variable as an array. If no such
variable was submitted (i.e. if the user didn't select any categories, or if the feed.php script was
loaded directly), then an empty array is created to take its place. We then set a variable called
$itemsToGo to track the number of articles we wish to display (ten in this case).
1334027
For each article found in the XML files of our site, we check if its <categoryid> may be found
in the list of acceptable categories (if the list is empty, we accept all articles), and if its
<status> is set to live. If those conditions are met, we can go ahead and create an <item>
element for the article in the feed:
1334027
feed.php (excerpt)
    $item = $doc->createElement('item');
    $channel->appendChild($item);
    
    $iTitle = $doc->createElement('title');
    $item->appendChild($iTitle);
    $text = $doc->createTextNode($article->headline);
    $iTitle->appendChild($text);
    
    $iDesc = $doc->createElement('description');
    $item->appendChild($iDesc);
    $text = $doc->createTextNode($article->description);
    $iDesc->appendChild($text);
    
    $iLink = $doc->createElement('link');
    $item->appendChild($iLink);
    $text = $doc->createTextNode(
        'http://www.example.com/innerpage.php?id=' .
        $article['id']);
    $iLink->appendChild($text);
Chapter 8. RSS and RDF
Page 18
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    
    if (--$itemsToGo < 1) break;
  }
}
Note the if statement at the end, which bails out of the loop once ten articles have been selected for
display.
1334027
Finally, we write out our XML document to the browser, first sending a header to indicate the
appropriate content type for an RSS feed :
1334027
header('content-type: application/xml');
echo $doc->saveXML();
?>
As a finishing touch, add a link to the feedselect.php page to the front page of the site:
1334027
search.inc.php
<form id="searchWidget" method="post" action="doSearch.php">
    Search Site:
    <input name="term" type="text" id="term" />
    <input name="search" type="submit" id="search" value="Search" />
</form>
<p><a href="cats.php">Browse by Category</a></p>
<p><a href="sitemap.php">Site Map</a></p>
<p><a href="feedselect.php">RSS</a></p>
                            
                            
                        
8.6. Summary
661753
In this chapter, we worked our way around the different RSS standards, and learned how RDF fits
into the picture. In a practical example, we saw how to consume an RSS feed from another site and
display the headlines as part of our own site. We then used this new-found knowledge to also add
a bit of functionality to our CMS project: a customizable headline feed.
1334027
Chapter 8. RSS and RDF
Page 19
Return to Table of Contents
Chapter 8. RSS and RDF
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

