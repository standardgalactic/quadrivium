 Cisco IOS Firewall Feature Set
1
Cisco IOS Firewall Feature Set
Feature Summary
This document describes how you can conﬁgure your Cisco networking device to function as a
ﬁrewall, using Cisco IOS security features in Cisco IOS release 12.0(3)T.
This section covers the following Cisco IOS Firewall information:
•
“Overview of Firewalls”
•
“The Cisco IOS Firewall Solution”
•
“Other Guidelines for Conﬁguring a Firewall”
•
“CBAC Overview”
•
“Beneﬁts”
•
“Restrictions”
•
“Memory and Performance Impact”
Overview of Firewalls
Firewalls are networking devices that control access to your organization’s network assets. Firewalls
are positioned at the entrance points into your network. If your network has multiple entrance points,
you must position a ﬁrewall at each point to provide effective network access control.
Firewalls are often placed in between the internal network and an external network such as the
Internet. With a ﬁrewall between your network and the Internet, all trafﬁc coming from the Internet
must pass through the ﬁrewall before entering your network.
Firewalls can also be used to control access to a speciﬁc part of your network. For example, you can
position ﬁrewalls at all the entry points into a research and development network to prevent
unauthorized access to proprietary information.
The most basic function of a ﬁrewall is to monitor and ﬁlter trafﬁc. Firewalls can be simple or
elaborate, depending on your network requirements. Simple ﬁrewalls are usually easier to conﬁgure
and manage. However, you might require the ﬂexibility of a more elaborate ﬁrewall.

Feature Summary
2
Cisco IOS Release 12.0(3)T
The Cisco IOS Firewall Solution
Cisco IOS software provides an extensive set of security features, allowing you to conﬁgure a simple
or elaborate ﬁrewall, according to your particular requirements. You can conﬁgure a Cisco device as
a ﬁrewall if the device is positioned appropriately at a network entry point. Security features that
provide ﬁrewall functionality are listed in the section “Create a Customized Firewall.”
In addition to the security features available in standard Cisco IOS feature sets, there is a Cisco IOS
Firewall feature set that gives your router additional ﬁrewall capabilities.
The Cisco IOS Firewall Feature Set
The Cisco IOS Firewall feature set combines existing Cisco IOS ﬁrewall technology and the new
Context-based Access Control (CBAC) feature. When you conﬁgure the Cisco IOS Firewall feature
set on your Cisco router, you turn your router into an effective, robust ﬁrewall.
The Cisco IOS Firewall feature set is designed to prevent unauthorized, external individuals from
gaining access to your internal network, and to block attacks on your network, while at the same time
allowing authorized users to access network resources.
You can use the Cisco IOS Firewall feature set to conﬁgure your Cisco IOS router as:
•
An Internet ﬁrewall or part of an Internet ﬁrewall
•
A ﬁrewall between groups in your internal network
•
A ﬁrewall providing secure connections to or from branch ofﬁces
•
A ﬁrewall between your company’s network and your company’s partners’ networks
The Cisco IOS Firewall feature set provides the following beneﬁts:
•
Protects internal networks from intrusion
•
Monitors trafﬁc through network perimeters
•
Enables network commerce via the World Wide Web
Create a Customized Firewall
To create a ﬁrewall customized to ﬁt your organization’s security policy, you should determine which
Cisco IOS security features are appropriate, and conﬁgure those features. At a minimum, you must
conﬁgure basic trafﬁc ﬁltering to provide a basic ﬁrewall. You can conﬁgure your Cisco networking
device to function as a ﬁrewall by using the following Cisco IOS security features:
•
Standard Access Lists and Static Extended Access Lists
•
Lock-and-Key (Dynamic Access Lists)
•
Reﬂexive Access Lists
•
TCP Intercept
•
Context-based Access Control
•
Security Server Support
•
Network Address Translation
•
Cisco Encryption Technology
•
IPSec Network Security

Create a Customized Firewall
 Cisco IOS Firewall Feature Set
3
•
Neighbor Router Authentication
•
Event Logging
•
User Authentication and Authorization
As well as conﬁguring these features, you should follow the guidelines listed in the section “Other
Guidelines for Conﬁguring Your Firewall.” This section outlines important security practices to
protect your ﬁrewall and network. Table 1 describes Cisco IOS security features and lists the related
chapter of the Security Conﬁguration Guide.
Table 1
Cisco IOS Features for a Robust Firewall
Feature
Chapter
Comments
Standard Access Lists and
Static Extended Access Lists
“Access Control Lists: Overview
and Guidelines” in the Cisco IOS
Release 12. Security Conﬁguration
Guide.
Also refer to the Cisco IOS Release
12.0(1)T feature module
“Time-based Access Lists Using
Time Ranges.”
Standard and static extended access lists provide basic trafﬁc ﬁltering
capabilities. You conﬁgure criteria that describe which packets should
be forwarded, and which packets should be dropped at an interface,
based on each packet’s network layer information. For example, you
can block all UDP packets from a speciﬁc source IP address or
address range. Some extended access lists can also examine transport
layer information to determine whether to block or forward packets.
Additionally, it is possible to implement access lists based on the time
of day, providing network administrators with more control over
permitting or denying a user access to resources.
To conﬁgure a basic ﬁrewall, you should at a minimum conﬁgure
basic trafﬁc ﬁltering. You should conﬁgure basic access lists for all
network protocols that will be routed through your ﬁrewall, such as IP,
IPX, AppleTalk.
Lock-and-Key (Dynamic
Access Lists)
“Conﬁguring Lock-and-Key
Security (Dynamic Access Lists)”
in the Cisco IOS Release 12.0
Security Conﬁguration Guide.
Lock-and-Key provides trafﬁc ﬁltering with the ability to allow
temporary access through the ﬁrewall for certain individuals. These
individuals must ﬁrst be authenticated (by a username/password
mechanism) before the ﬁrewall allows their trafﬁc through the
ﬁrewall. Afterwards, the ﬁrewall closes the temporary opening. This
provides tighter control over trafﬁc at the ﬁrewall than with standard
or static extended access lists.
Reﬂexive Access Lists
“Conﬁguring IP Session Filtering
(Reﬂexive Access Lists)” in the
Cisco IOS Release 12.0 Security
Conﬁguration Guide.
Reﬂexive access lists ﬁlter IP trafﬁc so that TCP or UDP “session”
trafﬁc is only permitted through the ﬁrewall if the session originated
from within the internal network.
You would only conﬁgure Reﬂexive Access Lists when not using
Context-based Access Control.
TCP Intercept
“Conﬁguring TCP Intercept
(Prevent Denial-of-Service
Attacks)” in the Cisco IOS
Release 12.0 Security
Conﬁguration Guide.
TCP Intercept protects TCP servers within your network from TCP
SYN-ﬂooding attacks, a type of denial-of-service attack.
You would only conﬁgure TCP Intercept when not using
Context-based Access Control.
Context-based Access Control
“Conﬁguring Context-based Access
Control” in this document.
Context-based Access Control (CBAC) examines not only
network layer and transport layer information, but also examines the
application-layer protocol information (such as FTP information) to
learn about the state of TCP and UDP connections. CBAC maintains
connection state information for individual connections. This state
information is used to make intelligent decisions about whether
packets should be permitted or denied, and dynamically creates and
deletes temporary openings in the ﬁrewall.
CBAC is only available in the Cisco IOS Firewall Feature Set.

Feature Summary
4
Cisco IOS Release 12.0(3)T
Security Server Support
“Conﬁguring TACACS+,”
“Conﬁguring TACACS and
Extended TACACS,” “Conﬁguring
RADIUS,” and “Conﬁguring
Kerberos” in the Cisco IOS
Release 12.0 Security
Conﬁguration Guide.
The Cisco IOS Firewall feature set can be conﬁgured as a client of the
following supported security servers:
• TACACS, TACACS+, and Extended TACACS
• RADIUS
• Kerberos
You can use any of these security servers to store a database of user
proﬁles. To gain access into your ﬁrewall or to gain access through the
ﬁrewall into another network, users must enter authentication
information (such as a username and password), which is matched
against the information on the security server. When users pass
authentication, they are granted access according to their speciﬁed
privileges.
Network Address Translation
“Conﬁguring IP Addressing”
chapter in the Network Protocols
Conﬁguration Guide, Part 1.
You can use Network Address Translation (NAT) to hide internal IP
network addresses from the world outside the ﬁrewall.
NAT was designed to provide IP address conservation and for internal
IP networks that have unregistered (not globally unique) IP addresses:
NAT translates these unregistered IP addresses into legal addresses at
the ﬁrewall. NAT can also be conﬁgured to advertise only one address
for the entire internal network to the outside world. This provides
security by effectively hiding the entire internal network from the
world.
NAT gives you limited spoof protection because internal addresses are
hidden. Additionally, NAT removes all your internal services from the
external name space.
NAT does not work with the application-layer protocols RPC,
VDOLive, or SQL*Net “Redirected.” (NAT does work with SQL*Net
“Bequeathed.”) Do not conﬁgure NAT with networks that will carry
trafﬁc for these incompatible protocols.
Cisco Encryption Technology
“Conﬁguring Cisco Encryption
Technology” in the Security
Conﬁguration Guide.
Cisco Encryption Technology (CET) selectively encrypts IP packets
that are transmitted across unprotected networks such as the Internet.
You specify which trafﬁc is considered sensitive and should be
encrypted. This encryption prevents sensitive IP packets from being
intercepted and read or tampered with.
IPSec Network Security
“Conﬁguring IPSec Network
Security” in the Security
Conﬁguration Guide.
IPSec is a framework of open standards developed by the Internet
Engineering Task Force (IETF) that provides security for transmission
of sensitive information over unprotected networks such as the
Internet. IPSec acts at the network layer, protecting and authenticating
IP packets between participating IPSec devices (“peers”) such as
Cisco routers.
IPSec services are similar to those provided by Cisco Encryption
Technology, a proprietary security solution introduced in Cisco IOS
Software Release 11.2. (The IPSec standard was not yet available at
Release 11.2.) However, IPSec provides a more robust security
solution, and is standards-based.
Neighbor Router
Authentication
“Neighbor Router Authentication:
Overview and Guidelines” in the
Security Conﬁguration Guide.
Neighbor router authentication requires the ﬁrewall to authenticate all
neighbor routers before accepting any route updates from that
neighbor. This ensures that the ﬁrewall receives legitimate route
updates from a trusted source.
Table 1
Cisco IOS Features for a Robust Firewall (continued)
Feature
Chapter
Comments

Other Guidelines for Configuring a Firewall
 Cisco IOS Firewall Feature Set
5
Other Guidelines for Conﬁguring a Firewall
As with all networking devices, you should always protect access into the ﬁrewall by conﬁguring
passwords as described in the “Conﬁguring Passwords and Privileges” chapter in the Security
Conﬁguration Guide. You should also consider conﬁguring user authentication, authorization, and
accounting as described in the “Authentication, Authorization, and Accounting (AAA)” part of the
Security Conﬁguration Guide.
You should also consider the following recommendations:
•
When setting passwords for privileged access to the ﬁrewall, use the enable secret command
rather than the enable password command, which does not have as strong an encryption
algorithm.
•
Put a password on the console port. In authentication, authorization, and accounting (AAA)
environments, use the same authentication for the console as for elsewhere. In a non-AAA
environment, at a minimum conﬁgure the login and password password commands.
•
Think about access control before you connect a console port to the network in any way,
including attaching a modem to the port. Be aware that a break on the console port might give
total control of the ﬁrewall, even with access control conﬁgured.
•
Apply access lists and password protection to all virtual terminal ports. Use access lists to limit
who can Telnet into your router.
•
Do not enable any local service (such as SNMP or NTP) that you do not use. Cisco Discovery
Protocol (CDP) and Network Time Protocol (NTP) are on by default, and you should turn these
off if you do not need them.
To turn off CDP, enter the no cdp run global conﬁguration command. To turn off NTP, enter the
ntp disable interface conﬁguration command on each interface not using NTP.
If you must run NTP, conﬁgure NTP only on required interfaces, and conﬁgure NTP to listen only
to certain peers.
Any enabled service could present a potential security risk. A determined, hostile party might be
able to ﬁnd creative ways to misuse the enabled services to access the ﬁrewall or the network.
For local services that are enabled, protect against misuse. Protect by conﬁguring the services to
communicate only with speciﬁc peers, and protect by conﬁguring access lists to deny packets for
the services at speciﬁc interfaces.
Event Logging
“Troubleshooting the Router”
chapter in the “System
Management” part of the
Conﬁguration Fundamentals
Conﬁguration Guide.
Event logging automatically logs output from system error messages
and other events to the console terminal. You can also redirect these
messages to other destinations such as virtual terminals, internal
buffers, or syslog servers. You can also specify the severity of the
event to be logged, and you can conﬁgure the logged output to be
timestamped. The logged output can be used to assist real-time
debugging and management, and to track potential security breaches
or other nonstandard activities throughout a network.
User Authentication and
Authorization
“Conﬁguring Authentication” and
“Conﬁguring Authorization” in the
Security Conﬁguration Guide.
Authentication and authorization help protect your network from
access by unauthorized users.
Table 1
Cisco IOS Features for a Robust Firewall (continued)
Feature
Chapter
Comments

Feature Summary
6
Cisco IOS Release 12.0(3)T
•
Protect against spooﬁng: protect the networks on both sides of the ﬁrewall from being spoofed
from the other side. You could protect against spooﬁng by conﬁguring input access lists at all
interfaces to pass only trafﬁc from expected source addresses, and to deny all other trafﬁc.
You should also disable source routing. For IP, enter the no ip source-route global conﬁguration
command. Disabling source routing at all routers can also help prevent spooﬁng.
You should also disable minor services. For IP, enter the no service tcp-small-servers and no
service udp-small-servers global conﬁguration commands. In Cisco IOS Release 12.0 and later,
these services are disabled by default.
•
Prevent the ﬁrewall from being used as a relay by conﬁguring access lists on any asynchronous
Telnet ports.
•
Normally, you should disable directed broadcasts for all applicable protocols on your ﬁrewall and
on all your other routers. For IP, use the no ip directed-broadcast command. Rarely, some IP
networks do require directed broadcasts; if this is the case, do not disable directed broadcasts.
Directed broadcasts can be misused to multiply the power of denial-of-service attacks, because
every denial-of-service packet sent is broadcast to every host on a subnet. Furthermore, some
hosts have other intrinsic security risks present when handling broadcasts.
•
Conﬁgure the no proxy-arp command to prevent internal addresses from being revealed. (This
is important to do if you do not already have NAT conﬁgured to prevent internal addresses from
being revealed).
•
Keep the ﬁrewall in a secured (locked) room.
CBAC Overview
This section describes how to conﬁgure Context-based Access Control (CBAC). CBAC provides
advanced trafﬁc inspection functionality and can be used as an integral part of your network’s
ﬁrewall.
For a complete description of the CBAC commands used in this section, refer to the “Context-based
Access Control Commands” chapter in the Security Command Reference.
This section describes:
•
What CBAC Does
•
What CBAC Does Not Do
•
How CBAC Works
•
When and Where to Conﬁgure CBAC
•
The CBAC Process
•
Supported Protocols
What CBAC Does
CBAC intelligently inspects TCP and UDP packets based on application-layer protocol session
information and can be used for intranets, extranets, and the Internet. You can conﬁgure CBAC to
permit speciﬁed TCP and UDP trafﬁc through a ﬁrewall only when the connection is initiated from
within the network you want to protect. (In other words, CBAC can inspect trafﬁc for sessions that
originate from the external network.) However, while this example discusses inspecting trafﬁc for
sessions that originate from the external network, CBAC can inspect trafﬁc for sessions that originate
from either side of the ﬁrewall.

What CBAC Does Not Do
 Cisco IOS Firewall Feature Set
7
Without CBAC, trafﬁc ﬁltering is limited to access list implementations that examine packets at the
network layer, or at most, the transport layer. However, CBAC examines not only network layer and
transport layer information but also examines the application-layer protocol information (such as
FTP connection information) to learn about the state of the TCP or UDP session. This allows support
of protocols that involve multiple channels created as a result of negotiations in the control channel.
Most of the multimedia protocols as well as some other protocols (such as FTP, RPC, and SQL*Net)
involve multiple channels.
CBAC inspects trafﬁc that travels through the ﬁrewall to discover and manage state information for
TCP and UDP sessions. This state information is used to create temporary openings in the ﬁrewall’s
access lists to allow return trafﬁc and additional data connections for permissible sessions (sessions
that originated from within the protected internal network).
Inspecting packets at the application layer and maintaining TCP and UDP session information
provides CBAC with the ability to detect and prevent certain types of network attacks such as
SYN-ﬂooding. A SYN-ﬂooding attack occurs when a network attacker ﬂoods a server with a barrage
of requests for connection and does not complete the connection. The resulting volume of half-open
connections can overwhelm the server, causing it to deny service to valid requests.
Denial-of-Service (DoS) detection and prevention inspects packet sequence numbers in TCP
connections. If they are not within expected ranges, the router drops suspicious packets. When the
router detects unusually high rates of new connections, it issues an alert message. The router drops
half-open TCP connection state tables to prevent system resource depletion.
Additional features include Java blocking and real-time alerts and audit trails. Java blocking can be
conﬁgured to ﬁlter based on the server address or completely deny access to Java applets that are not
embedded in an archived or compressed ﬁle.
Enhanced audit trail features use syslog to track all transactions; recording time stamps, source host,
destination host, ports used, and the total number of transmitted bytes, for advanced, session-based
reporting.
Real-time alerts send syslog error messages to central management consoles upon detecting
suspicious activity. Network managers have the ability to respond immediately to intrusions.
What CBAC Does Not Do
CBAC does not protect against attacks originating from within the protected network. CBAC only
detects and protects against attacks that travel through the ﬁrewall.
CBAC protects against certain attacks but should not be considered a perfect, impenetrable defense.
Determined, skilled attackers might be able to launch effective attacks. While there is no such thing
as a perfect defense, CBAC detects and prevents most of the popular attacks on your network.
How CBAC Works
You should understand the material in this section before you conﬁgure CBAC. If you do not
understand how CBAC works, you might inadvertently introduce security risks by conﬁguring
CBAC inappropriately.

Feature Summary
8
Cisco IOS Release 12.0(3)T
How CBAC Works—Overview
CBAC creates temporary openings in access lists at ﬁrewall interfaces. These openings are created
when speciﬁed trafﬁc exits your internal network through the ﬁrewall. The openings allow returning
trafﬁc (that would normally be blocked) and additional data channels to enter your internal network
back through the ﬁrewall. The trafﬁc is allowed back through the ﬁrewall only if it is part of the same
session as the original trafﬁc that triggered CBAC when exiting through the ﬁrewall.
In Figure 1, the inbound access lists at S0 and S1 are conﬁgured to block Telnet trafﬁc, and there is
no outbound access list conﬁgured at E0. When the connection request for User1’s Telnet session
passes through the ﬁrewall, CBAC creates a temporary opening in the inbound access list at S0 to
permit returning Telnet trafﬁc for User1’s Telnet session. (If the same access list is applied to both
S0 and S1, the same opening would appear at both interfaces.) If necessary, CBAC would also have
created a similar opening in an outbound access list at E0 to permit return trafﬁc.
Figure 1
CBAC Opens Temporary Holes in Firewall Access Lists
How CBAC Works—Details
This section describes how CBAC inspects packets and maintains state information about sessions
to manage the trafﬁc ﬂow through the interface.
Packets Are Inspected
With CBAC, you specify which protocols you want to be inspected, and you specify an interface and
interface direction (in or out) where inspection originates. Only speciﬁed protocols will be inspected
by CBAC. For these protocols, packets ﬂowing through the ﬁrewall in any direction are inspected,
as long as they ﬂow through the interface where inspection is conﬁgured.
Packets entering the ﬁrewall are inspected by CBAC only if they ﬁrst pass the inbound access list at
the interface. If a packet is denied by the access list, the packet is simply dropped and not inspected
by CBAC.
CBAC inspects and monitors only the control channels of connections; the data channels are not
inspected. For example, during FTP sessions both the control and data channels (which are created
when a data ﬁle is transferred) are monitored for state changes, but only the control channel is
inspected (that is, the CBAC software parses the FTP commands and responses).
CBAC inspection tracks sequence numbers in all TCP packets, and drops those packets with
sequence numbers that are not within expected ranges.
CBAC inspection recognizes application-speciﬁc commands (such as illegal SMTP commands) in
the control channel, and detects and prevents certain application-level attacks.
1. User1 initiates a 
Telnet session
3. Other Telnet traffic
is blocked
E0
S0
S1
User1
S6927
Protected internal network
2. Return traffic of User1 
Telnet session is permitted
Firewall

How CBAC Works
 Cisco IOS Firewall Feature Set
9
When CBAC suspects an attack, the DoS feature can take several actions:
•
Generate alert messages
•
Protect system resources that could impede performance
•
Block packets from suspected attackers
CBAC uses timeout and threshold values to manage session state information, helping to determine
when to drop sessions that do not become fully established. Setting timeout values for network
sessions helps prevent DoS attacks by freeing up system resources, dropping sessions after a
speciﬁed amount of time. Setting threshold values for network sessions helps prevent DoS attacks
by controlling the number of half-open sessions, which limits the amount of system resources
applied to half-open sessions. When a session is dropped, CBAC sends a reset message to the devices
at both end points (source and destination) of the session. When the system under DoS attack
receives a reset command, it releases, or frees up, processes and resources related to that incomplete
session.
CBAC provides three thresholds against DoS attacks:
•
the total number of half-open TCP sessions
•
the number of half-open sessions based upon time
•
the number of half-open sessions per host
If a threshold is exceeded, CBAC has two options: send a reset message to the end points of the oldest
half-open session, making resources available to service newly arriving SYN packets; or block all
SYN packets temporarily for the duration conﬁgured by the threshold value. When the router blocks
a SYN packet, the TCP three-way handshake is never initiated, which prevents the router from using
memory and processing resources needed for valid connections.
DoS detection and prevention requires that you create a CBAC inspection rule and apply that rule on
an interface. The inspection rule must include the protocols that you want to monitor against DoS
attacks. For example, if you have TCP inspection enabled on the inspection rule, then CBAC can
track all TCP connections to watch for DoS attacks. If the inspection rule includes FTP protocol
inspection but not TCP inspection, CBAC tracks only FTP connections to watch for DoS attacks on
FTP servers.
For detailed information about setting timeout and threshold values in CBAC to detect and prevent
DoS attacks, refer to the section “Conﬁgure Global Timeouts and Thresholds”.
A State Table Maintains Session State Information
Whenever a packet is inspected, a state table is updated to include information about the state of the
packet’s connection.
Return trafﬁc will only be permitted back through the ﬁrewall if the state table contains information
indicating that the packet belongs to a permissible session. Inspection controls the trafﬁc that
belongs to a valid session and forwards the trafﬁc it does not know. When return trafﬁc is inspected,
the state table information is updated as necessary.
UDP “Sessions” Are Approximated
With UDP—a connectionless service—there are no actual sessions, so the software approximates
sessions by examining the information in the packet and determining if the packet is similar to other
UDP packets (for example, similar source/destination addresses and port numbers) and if the packet
was detected soon after another similar UDP packet. “Soon” means within the conﬁgurable UDP
idle timeout period.

Feature Summary
10
Cisco IOS Release 12.0(3)T
Access List Entries Are Dynamically Created and Deleted to Permit Return Trafﬁc and
Additional Data Connections
CBAC dynamically creates and deletes access list entries at the ﬁrewall interfaces, according to the
information maintained in the state tables. These access list entries are applied to the interfaces to
examine trafﬁc ﬂowing back into the internal network. These entries create temporary openings in
the ﬁrewall to permit only trafﬁc that is part of a permissible session.
The temporary access list entries are never saved to NVRAM.
When and Where to Conﬁgure CBAC
CBAC is highly ﬂexible and can be conﬁgured on any interface of any ﬁrewall for protecting internal
networks. Such ﬁrewalls should be Cisco routers with the Cisco Firewall feature set conﬁgured as
described previously in the section “The Cisco IOS Firewall Feature Set.”
Use CBAC when the ﬁrewall will be passing TCP, UDP, and common application trafﬁc.
Use CBAC for applications if you want the application’s trafﬁc to be permitted through the ﬁrewall
only when the trafﬁc session is initiated from a particular side of the ﬁrewall (usually from the
protected internal network).
In many cases, you will conﬁgure CBAC in one direction, in or out, at a single interface. This
conﬁguration causes trafﬁc to be permitted back into the internal network only if the trafﬁc is part of
a permissible (valid, existing) session. This is a typical conﬁguration for protecting your internal
networks from trafﬁc that originates on the Internet.
You can also conﬁgure CBAC in both directions on the same interface if you want to inspect sessions
initiated on either side of the interface. Conﬁguring CBAC in both directions can be useful in a
corporate intranet or extranet environment where you want to manage sessions between different
groups of users or between corporate partners.
The CBAC Process
This section describes a sample sequence of events that occurs when CBAC is conﬁgured at an
external interface that connects to an external network such as the Internet.
In this example, a TCP packet exits the internal network through the ﬁrewall’s external interface. The
TCP packet is the ﬁrst packet of a Telnet session, and Telnet is conﬁgured for CBAC inspection.
1
The packet reaches the ﬁrewall’s external interface.
2
The packet is evaluated against the interface’s existing outbound access list, and the packet is
permitted. (A denied packet would simply be dropped at this point.)
3
The packet is inspected by CBAC to determine and record information about the state of the
packet’s connection. This information is recorded in a new state table entry created for the new
connection.
(If the packet’s application—Telnet—was not conﬁgured for CBAC inspection, the packet would
simply be forwarded out the interface at this point without being inspected by CBAC. See the
section “Deﬁne an Inspection Rule” for conﬁguring CBAC inspection information.)
4
Based on the obtained state information, CBAC creates a temporary access list entry which is
inserted at the beginning of the external interface’s inbound extended access list. This temporary
access list entry is designed to permit inbound packets that are part of the same connection as the
outbound packet just inspected.
5
The outbound packet is forwarded out the interface.

Supported Protocols
 Cisco IOS Firewall Feature Set
11
6
Later, an inbound packet reaches the interface. This packet is part of the same Telnet connection
previously established with the outbound packet. The inbound packet is evaluated against the
inbound access list, and it is permitted because of the temporary access list entry previously
created.
7
The permitted inbound packet is inspected by CBAC, and the connection’s state table entry is
updated as necessary. Based on the updated state information, the inbound extended access list
temporary entries might be modiﬁed in order to permit only packets that are valid for the current
state of the connection.
8
Any additional inbound or outbound packets that belong to the connection are inspected to
update the state table entry and to modify the temporary inbound access list entries as required,
and they are forwarded through the interface.
9
When the connection terminates or times out, the connection’s state table entry is deleted, and
the connection’s temporary inbound access list entries are deleted.
In the sample process just described, the ﬁrewall access lists are conﬁgured as follows:
•
An outbound IP access list (standard or extended) is applied to the external interface. This access
list permits all packets that you want to allow to exit the network, including packets you want to
be inspected by CBAC. In this case, Telnet packets are permitted.
•
An inbound extended IP access list is applied to the external interface. This access list denies any
trafﬁc to be inspected by CBAC—including Telnet packets. When CBAC is triggered with an
outbound packet, CBAC creates a temporary opening in the inbound access list to permit only
trafﬁc that is part of a valid, existing session.
If the inbound access list had be conﬁgured to permit all trafﬁc, CBAC would be creating
pointless openings in the ﬁrewall for packets that would be permitted anyway.
Supported Protocols
You can conﬁgure CBAC to inspect the following types of sessions:
•
All TCP sessions, regardless of the application-layer protocol (sometimes called
“single-channel” or “generic” TCP inspection)
•
All UDP sessions, regardless of the application-layer protocol (sometimes called
“single-channel” or “generic” UDP inspection)
You can also conﬁgure CBAC to speciﬁcally inspect certain application-layer protocols. The
following application-layer protocols can all be conﬁgured for CBAC:
•
CU-SeeMe (only the White Pine version)
•
FTP
•
H.323 (such as NetMeeting, ProShare)
•
Java
•
UNIX R-commands (such as rlogin, rexec, and rsh)
•
RealAudio
•
RPC (Sun RPC, not DCE RPC or Microsoft RPC)
•
SMTP
•
SQL*Net
•
StreamWorks

Feature Summary
12
Cisco IOS Release 12.0(3)T
•
TFTP
•
VDOLive
When a protocol is conﬁgured for CBAC, the protocol’s trafﬁc will be inspected, state information
will be maintained, and in general, packets will be allowed back through the ﬁrewall only if they
belong to a permissible session.
Beneﬁts
•
CBAC provides internal users secure, per-application-based access control for all trafﬁc across
perimeters such as between private enterprise networks and the Internet.
•
Denial-of-service detection and prevention defends and protects router resources against
common attacks, checking packet headers and dropping suspicious packets.
•
Java blocking protects against unidentiﬁed, malicious Java applets.
•
Audit trail details transactions, recording time stamp, source host, destination host, ports,
duration, and total number of bytes transmitted.
•
Real-time alerts log alerts in case of denial-of-service attacks or other pre-conﬁgured conditions.
You can use the Cisco IOS Firewall feature set to conﬁgure your Cisco IOS router as:
•
An Internet ﬁrewall or part of an Internet ﬁrewall
•
A ﬁrewall between groups in your internal network
•
A ﬁrewall providing secure connections to or from branch ofﬁces
•
A ﬁrewall between your company’s network and your company’s partners’ networks
Restrictions
•
CBAC is available only for IP protocol trafﬁc. Only TCP and UDP packets are inspected. (Other
IP trafﬁc, such as ICMP, cannot be ﬁltered with CBAC and should be ﬁltered with basic access
lists instead.)
•
CBAC supports four switching modes: Cisco Express Forwarding (CEF), ﬂow switching, fast
switching, and process switching; however, you cannot conﬁgure both NAT and CBAC together
with CEF on the Cisco 2600 and 3600 routers.
•
CBAC does not support redundant routing environments. CBAC keeps track of the state of the
connections it monitors, so the packets associated with the same session have to go through the
same router. The Cisco IOS Firewall does not communicate this state information to other
ﬁrewall routers, meaning that sessions must be reestablished on the failover unit after failover
occurs.
•
If you reconﬁgure your access lists when you conﬁgure CBAC, be aware that if your access lists
block TFTP trafﬁc into an interface, you will not be able to netboot over that interface. (This is
not a CBAC-speciﬁc limitation, but is part of existing access list functionality.)
•
Packets with the ﬁrewall as the source or destination address are not inspected by CBAC or
evaluated by access lists.
•
CBAC ignores ICMP Unreachable messages.
•
FTP Trafﬁc and CBAC
— With FTP, CBAC does not allow third-party connections (three-way FTP transfer).

Memory and Performance Impact
 Cisco IOS Firewall Feature Set
13
— When CBAC inspects FTP trafﬁc, it only allows data channels with the destination port in
the range of 1024 to 65535.
— CBAC will not open a data channel if the FTP client-server authentication fails.
•
Cisco Encryption Technology and CBAC Compatibility
— If encrypted trafﬁc is exchanged between two routers, and the ﬁrewall is in between the two
routers, CBAC might not work as anticipated. This is because the packets’ payloads are
encrypted, so CBAC cannot accurately inspect the payloads.
— Also, if both encryption and CBAC are conﬁgured at the same ﬁrewall, CBAC will not work
for certain protocols. In this case, CBAC will work with single-channel TCP and UDP,
except for Java and SMTP. But CBAC will not work with multichannel protocols, except for
StreamWorks and CU-SeeMe. So if you conﬁgure encryption at the ﬁrewall, you should
conﬁgure CBAC for only the following protocols: Generic TCP, Generic UDP,
StreamWorks.
•
IPSec and CBAC Compatibility
— When CBAC and IPSec are enabled on the same router, and the ﬁrewall router is an endpoint
for IPSec for the particular ﬂow, then IPSec is compatible with CBAC (that is, CBAC can do
its normal inspection processing on the ﬂow).
— If the router is not an IPSec endpoint, but the packet is an IPSec packet, then CBAC will not
inspect the packets because the protocol number in the IP header of the IPSec packet is not
TCP or UDP. CBAC only inspects TCP and UDP packets.
Memory and Performance Impact
Using CBAC uses less than approximately 600 bytes of memory per connection. Because of the
memory usage, you should use CBAC only when you need to. There is also a slight amount of
additional processing that occurs whenever packets are inspected.
Sometimes CBAC must evaluate long access lists, which might have presented a negative impact to
performance. However, this impact is avoided, because CBAC evaluates access lists using an
accelerated method (CBAC hashes access lists and evaluates the hash).
Platforms
The Cisco IOS Firewall feature set is supported on the following platforms:
•
Cisco 1720 router
•
Cisco 1600 series
•
Cisco 2500 series
•
Cisco 2600 series
•
Cisco 3600 series
•
Cisco 7200 series
Prerequisites
None.

Supported MIBs and RFCs
14
Cisco IOS Release 12.0(3)T
Supported MIBs and RFCs
None.
Conﬁguration Tasks
To conﬁgure CBAC, complete the tasks described in the following sections:
•
Pick an Interface: Internal or External
•
Conﬁgure IP Access Lists at the Interface
•
Conﬁgure Global Timeouts and Thresholds
•
Deﬁne an Inspection Rule
•
Apply the Inspection Rule to an Interface
You can also perform the tasks described in the following sections. These tasks are optional.
•
Display Conﬁguration, Status, and Statistics for Context-based Access Control
•
Debug Context-based Access Control
•
Interpret Syslog and Console Messages Generated by Context-based Access Control
•
Turn Off Context-based Access Control
Note If you try to conﬁgure Context-based Access Control (CBAC) but do not have a good
understanding of how CBAC works, you might inadvertently introduce security risks to the ﬁrewall
and to the protected network. You should be sure you understand what CBAC does before you
conﬁgure CBAC.
For CBAC conﬁguration examples, refer to the “Conﬁguration Examples” section.
Pick an Interface: Internal or External
You must decide whether to conﬁgure CBAC on an internal or external interface of your ﬁrewall.
“Internal” refers to the side where sessions must originate for their trafﬁc to be permitted through
the ﬁrewall. “External” refers to the side where sessions cannot originate (sessions originating from
the external side will be blocked).
If you will be conﬁguring CBAC in two directions, you should conﬁgure CBAC in one direction ﬁrst,
using the appropriate “internal” and “external” interface designations. When you conﬁgure CBAC
in the other direction, the interface designations will be swapped. (CBAC is rarely conﬁgured in two
directions, and usually only when the ﬁrewall is between two networks that need protection from
each other, such as with two partners’ networks connected by the ﬁrewall.)
The ﬁrewall is most commonly used with one of two basic network topologies. Determining which
of these topologies is most like your own can help you decide whether to conﬁgure CBAC on an
internal interface or on an external interface.
The ﬁrst topology is shown in Figure 2. In this simple topology, CBAC is conﬁgured for the external
interface Serial 1. This prevents speciﬁed protocol trafﬁc from entering the ﬁrewall and the internal
network, unless the trafﬁc is part of a session initiated from within the internal network.

Configure IP Access Lists at the Interface
 Cisco IOS Firewall Feature Set
15
Figure 2
Simple Topology—CBAC Conﬁgured at the External Interface
The second topology is shown in Figure 3. In this topology, CBAC is conﬁgured for the internal
interface Ethernet 0. This allows external trafﬁc to access the services in the Demilitarized Zone
(DMZ), such as DNS services, but prevents speciﬁed protocol trafﬁc from entering your internal
network—unless the trafﬁc is part of a session initiated from within the internal network.
Figure 3
DMZ Topology—CBAC Conﬁgured at the Internal Interface
Using these two sample topologies, decide whether to conﬁgure CBAC on an internal or external
interface.
Conﬁgure IP Access Lists at the Interface
For CBAC to work properly, you need to make sure that you have IP access lists conﬁgured
appropriately at the interface.
Follow these two general rules when evaluating your IP access lists at the ﬁrewall:
•
Permit CBAC trafﬁc to leave the network through the ﬁrewall.
All access lists that evaluate trafﬁc leaving the protected network should permit trafﬁc that will
be inspected by CBAC. For example, if Telnet will be inspected by CBAC, then Telnet trafﬁc
should be permitted on all access lists that apply to trafﬁc leaving the network.
•
Use extended access lists to deny CBAC return trafﬁc entering the network through the ﬁrewall.
For temporary openings to be created in an access list, the access list must be an extended access
list. So wherever you have access lists that will be applied to returning trafﬁc, you must use
extended access lists. The access lists should deny CBAC return trafﬁc because CBAC will open
up temporary holes in the access lists. (You want trafﬁc to be normally blocked when it enters
your network.)
Internal
network
S6917
External
network
Internet
Serial 1
Traffic exiting
Traffic entering
Internal
network
Ethernet 0
S6918
External
network
DMZ
Internet
Access allowed
Web
server
DNS
server
Traffic exiting
Traffic entering

Configuration Tasks
16
Cisco IOS Release 12.0(3)T
Note If your ﬁrewall only has two connections, one to the internal network and one to the external
network, using all inbound access lists works well because packets are stopped before they get a
chance to affect the router itself.
External Interface
Here are some tips for your access lists when you will be conﬁguring CBAC on an external interface:
•
If you have an outbound IP access list at the external interface, the access list can be a standard
or extended access list. This outbound access list should permit trafﬁc that you want to be
inspected by CBAC. If trafﬁc is not permitted, it will not be inspected by CBAC, but will be
simply dropped.
•
The inbound IP access list at the external interface must be an extended access list. This inbound
access list should deny trafﬁc that you want to be inspected by CBAC. (CBAC will create
temporary openings in this inbound access list as appropriate to permit only return trafﬁc that is
part of a valid, existing session.)
•
For complete information about how to conﬁgure IP access lists, refer to the “Conﬁguring IP
Services” chapter of the Cisco IOS Release 12.0 Network Protocols Conﬁguration Guide, Part 1.
Internal Interface
Here are some tips for your access lists when you will be conﬁguring CBAC on an internal interface:
•
If you have an inbound IP access list at the internal interface or an outbound IP access list at
external interface(s), these access lists can be either a standard or extended access list. These
access lists should permit trafﬁc that you want to be inspected by CBAC. If trafﬁc is not
permitted, it will not be inspected by CBAC, but will be simply dropped.
•
The outbound IP access list at the internal interface and the inbound IP access list at the external
interface must be extended access lists. These outbound access lists should deny trafﬁc that you
want to be inspected by CBAC. (CBAC will create temporary openings in these outbound access
lists as appropriate to permit only return trafﬁc that is part of a valid, existing session.) You do
not necessarily need to conﬁgure an extended access list at both the outbound internal interface
and the inbound external interface, but at least one is necessary to restrict trafﬁc ﬂowing through
the ﬁrewall into the internal protected network.
•
For complete information about how to conﬁgure IP access lists, refer to the “Conﬁguring IP
Services” chapter of the Cisco IOS Release 12.0 Network Protocols Conﬁguration Guide, Part 1.
Conﬁgure Global Timeouts and Thresholds
CBAC uses timeouts and thresholds to determine how long to manage state information for a
session, and to determine when to drop sessions that do not become fully established. These timeouts
and thresholds apply globally to all sessions.
You can use the default timeout and threshold values, or you can change to values more suitable to
your security requirements. You should make any changes to the timeout and threshold values before
you continue conﬁguring CBAC.

Configure Global Timeouts and Thresholds
 Cisco IOS Firewall Feature Set
17
Note If you want to enable the more aggressive TCP host-speciﬁc denial-of-service prevention that
includes the blocking of connection initiation to a host, you must set the block-time speciﬁed in the
ip inspect tcp max-incomplete host command (see the last row in the following table).
All the available CBAC timeouts and thresholds are listed in the following table, along with the
corresponding command and default value.
To change a global timeout or threshold listed in the “Timeout of Threshold Value to Change”
column, use the global conﬁguration command in the “Command” column:
Timeout or Threshold Value to Change
Command
Default
The length of time the software waits for a TCP
session to reach the established state before
dropping the session.
ip inspect tcp synwait-time seconds
30 seconds
The length of time a TCP session will still be
managed after the ﬁrewall detects a
FIN-exchange.
ip inspect tcp ﬁnwait-time seconds
5 seconds
The length of time a TCP session will still be
managed after no activity (the TCP idle timeout).1
1
The global TCP and UDP idle timeouts can be overridden for specified application-layer protocols’ sessions as described in the
ip inspect name (global configuration) command description, found in the “Context-based Access Control Commands” chapter
of the Security Command Reference.
ip inspect tcp idle-time seconds
3600 seconds
(1 hour)
The length of time a UDP session will still be
managed after no activity (the UDP idle
timeout).1
ip inspect udp idle-time seconds
30 seconds
The length of time a DNS name lookup session
will still be managed after no activity.
ip inspect dns-timeout seconds
5 seconds
The number of existing half-open sessions that
will cause the software to start deleting half-open
sessions.2
2
See the following section, “Half-Open Sessions,” for more information.
ip inspect max-incomplete high number
500 existing
half-open
sessions
The number of existing half-open sessions that
will cause the software to stop deleting half-open
sessions.2
ip inspect max-incomplete low number
400 existing
half-open
sessions
The rate of new unestablished sessions that will
cause the software to start deleting half-open
sessions.2
ip inspect one-minute high number
500 half-open
sessions per
minute
The rate of new unestablished sessions that will
cause the software to stop deleting half-open
sessions.2
ip inspect one-minute low number
400 half-open
sessions per
minute
The number of existing half-open TCP sessions
with the same destination host address that will
cause the software to start dropping half-open
sessions to the same destination host address.3
3
Whenever the max-incomplete host threshold is exceeded, the software will drop half-open sessions differently depending on
whether the block-time timeout is zero or a positive non-zero number. If the block-time timeout is zero, the software will delete
the oldest existing half-open session for the host for every new connection request to the host and will let the SYN packet through.
If the block-time timeout is greater than zero, the software will delete all existing half-open sessions for the host, and then block
all new connection requests to the host. The software will continue to block all new connection requests until the block-time
expires.
ip inspect tcp max-incomplete host
number block-time minutes
50 existing
half-open TCP
sessions;
0 minutes

Configuration Tasks
18
Cisco IOS Release 12.0(3)T
To return any threshold or timeout to the default value, use the no form of the command in the
preceding table.
Half-Open Sessions
An unusually high number of half-open sessions (either absolute or measured as the arrival rate)
could indicate that a denial-of-service attack is occurring. For TCP, “half-open” means that the
session has not reached the established state—the TCP three-way handshake has not yet been
completed. For UDP, “half-open” means that the ﬁrewall has detected no return trafﬁc.
CBAC measures both the total number of existing half-open sessions and the rate of session
establishment attempts. Both TCP and UDP half-open sessions are counted in the total number and
rate measurements. Measurements are made once per minute.
When the number of existing half-open sessions rises above a threshold (the max-incomplete high
number), the software will delete half-open sessions as required to accommodate new connection
requests. The software will continue to delete half-open requests as necessary, until the number of
existing half-open sessions drops below another threshold (the max-incomplete low number).
When the rate of new connection attempts rises above a threshold (the one-minute high number),
the software will delete half-open sessions as required to accommodate new connection attempts.
The software will continue to delete half-open sessions as necessary, until the rate of new connection
attempts drops below another threshold (the one-minute low number). The rate thresholds are
measured as the number of new session connection attempts detected in the last one-minute sample
period. The ﬁrewall router reviews the “one-minute” rate on an ongoing basis, meaning that the
router reviews the rate more frequently than one minute and does not keep deleting half-open
sessions for one-minute after a DoS attack has stopped—it will be less time.
Deﬁne an Inspection Rule
After you conﬁgure global timeouts and thresholds, you must deﬁne an inspection rule. This rule
speciﬁes what IP trafﬁc (which application-layer protocols) will be inspected by CBAC at an
interface.
Normally, you deﬁne only one inspection rule. The only exception might occur if you want to enable
CBAC in two directions as described earlier in the section “When and Where to Conﬁgure CBAC.”
For CBAC conﬁgured in both directions at a single ﬁrewall interface, you should conﬁgure two rules,
one for each direction.
An inspection rule should specify each desired application-layer protocol as well as generic TCP or
generic UDP if desired. The inspection rule consists of a series of statements each listing a protocol
and specifying the same inspection rule name.
To deﬁne an inspection rule, follow the instructions in the following sections:
•
Conﬁgure Application-Layer Protocol Inspection
•
Conﬁgure Java Inspection
•
Conﬁgure Generic TCP and UDP Inspection

Configure Application-Layer Protocol Inspection
 Cisco IOS Firewall Feature Set
19
Conﬁgure Application-Layer Protocol Inspection
Note If you want CBAC inspection to work with NetMeeting 2.0 trafﬁc (an H.323 application-layer
protocol), you must also conﬁgure inspection for TCP, as described later in the section “Conﬁgure
Generic TCP and UDP Inspection.” This requirement exists because NetMeeting 2.0 uses an
additional TCP channel not deﬁned in the H.323 speciﬁcation.
To conﬁgure CBAC inspection for an application-layer protocol, use one or both of the following
global conﬁguration commands:
Refer to the description of the ip inspect name (global conﬁguration) command in the
“Context-based Access Control Commands” chapter in the Security Command Reference for
complete information about how the command works with each application-layer protocol.
To enable CBAC inspection for Java, see the following section, “Conﬁgure Java Inspection.”
Table 2 identiﬁes application protocol keywords.
Command
Purpose
ip inspect name inspection-name protocol
[timeout seconds]
Conﬁgure CBAC inspection for an application-layer
protocol (except for RPC and Java). Use one of the
protocol keywords deﬁned in Table 2, following.
Repeat this command for each desired protocol. Use
the same inspection-name to create a single inspection
rule.
ip inspect name inspection-name rpc
program-number number [wait-time minutes]
[timeout seconds]
Enable CBAC inspection for the RPC application-layer
protocol.
You can specify multiple RPC program numbers by
repeating this command for each program number.
Use the same inspection-name to create a single
inspection rule.
Table 2
Application Protocol Keywords
Application Protocol
protocol Keyword
CU-SeeMe
cuseeme
FTP
ftp
H.323
h323
UNIX R commands (rlogin, rexec, rsh)
rcmd
RealAudio
realaudio
SMTP
smtp
SQL*Net
sqlnet
StreamWorks
streamworks
TFTP
tftp
VDOLive
vdolive

Configuration Tasks
20
Cisco IOS Release 12.0(3)T
Conﬁgure Java Inspection
With Java, you must protect against the risk of users inadvertently downloading destructive applets
into your network. To protect against this risk, you could require all users to disable Java in their
browser. If this is not an agreeable solution, you can use CBAC to ﬁlter Java applets at the ﬁrewall,
which allows users to download only applets residing within the ﬁrewall and trusted applets from
outside the ﬁrewall.
Java applet ﬁltering distinguishes between trusted and untrusted applets by relying on a list of
external sites that you designate as “friendly.” If an applet is from a friendly site, the ﬁrewall allows
the applet through. If the applet is not from a friendly site, the applet will be blocked. (Alternately,
you could permit applets from all external sites except for those you speciﬁcally designate as
hostile.)
To block all Java applets except for applets from friendly locations, use the following global
conﬁguration commands:
Caution CBAC does not detect or block encapsulated Java applets. Therefore, Java applets that are wrapped
or encapsulated, such as applets in .zip or .jar format, are not blocked at the ﬁrewall. CBAC also does not
detect or block applets loaded from FTP, gopher, HTTP on a nonstandard port, and so forth.
Conﬁgure Generic TCP and UDP Inspection
You can conﬁgure TCP and UDP inspection to permit TCP and UDP packets to enter the internal
network through the ﬁrewall, even if the application-layer protocol is not conﬁgured to be inspected.
However, TCP and UDP inspection do not recognize application-speciﬁc commands, and therefore
might not permit all return packets for an application, particularly if the return packets have a
different port number than the previous exiting packet.
Any application-layer protocol that is inspected will take precedence over the TCP or UDP packet
inspection. For example, if inspection is conﬁgured for FTP, all control channel information will be
recorded in the state table, and all FTP trafﬁc will be permitted back through the ﬁrewall if the
control channel information is valid for the state of the FTP session. The fact that TCP inspection is
conﬁgured is irrelevant to the FTP state information.
Step
Command
Purpose
1
ip access-list standard name
permit ...
deny ... (Use permit and deny statements as
appropriate.)
or
access-list access-list-number {deny | permit}
source [source-wildcard]
Create a standard access list that permits trafﬁc
only from friendly sites, and denies trafﬁc from
hostile sites.
If you want all internal users to be able to
download friendly applets, use the any
keyword for the destination as
appropriate—but be careful to not misuse the
any keyword to inadvertently allow all applets
through.
2
ip inspect name inspection-name http [java-list
access-list] [timeout seconds]
Block all Java applets except for applets from
the friendly sites deﬁned previously in the
access list. Java blocking only works with
standard access lists.
Use the same inspection-name as when you
speciﬁed other protocols, to create a single
inspection rule.

Apply the Inspection Rule to an Interface
 Cisco IOS Firewall Feature Set
21
With TCP and UDP inspection, packets entering the network must exactly match the corresponding
packet that previously exited the network. The entering packets must have the same
source/destination addresses and source/destination port numbers as the exiting packet (but
reversed); otherwise, the entering packets will be blocked at the interface. Also, all TCP packets with
a sequence number outside of the window are dropped.
With UDP inspection conﬁgured, replies will only be permitted back in through the ﬁrewall if they
are received within a conﬁgurable time after the last request was sent out. (This time is conﬁgured
with the ip inspect udp idle-time command.)
To conﬁgure CBAC inspection for TCP or UDP packets, use one or both of the following global
conﬁguration commands:
Apply the Inspection Rule to an Interface
After you deﬁne an inspection rule, you apply this rule to an interface.
Normally, you apply only one inspection rule to one interface. The only exception might occur if you
want to enable CBAC in two directions as described earlier in the section “When and Where to
Conﬁgure CBAC.” For CBAC conﬁgured in both directions at a single ﬁrewall interface, you should
apply two rules, one for each direction.
If you are conﬁguring CBAC on an external interface, apply the rule to outbound trafﬁc.
If you are conﬁguring CBAC on an internal interface, apply the rule to inbound trafﬁc.
To apply an inspection rule to an interface, use the following interface conﬁguration command:
Display Conﬁguration, Status, and Statistics for Context-based
Access Control
You can view certain CBAC information by using one or more of the following EXEC commands:
Command
Purpose
ip inspect name inspection-name tcp [timeout
seconds]
Enable CBAC inspection for TCP packets.
Use the same inspection-name as when you speciﬁed
other protocols, to create a single inspection rule.
ip inspect name inspection-name udp [timeout
seconds]
Enable CBAC inspection for UDP packets.
Use the same inspection-name as when you speciﬁed
other protocols, to create a single inspection rule.
Command
Purpose
ip inspect inspection-name {in | out}
Apply an inspection rule to an interface.
Command
Purpose
show ip inspect name inspection-name
Show a particular conﬁgured inspection rule.
show ip inspect conﬁg
Show the complete CBAC inspection conﬁguration.
show ip inspect interfaces
Show interface conﬁguration with regards to applied
inspection rules and access lists.
show ip inspect session [detail]
Show existing sessions that are currently being tracked
and inspected by CBAC.

Configuration Tasks
22
Cisco IOS Release 12.0(3)T
Debug Context-based Access Control
To assist CBAC debugging, you can turn on audit trail messages that will be displayed on the console
after each CBAC session closes.
To turn on audit trail messages, use the following global conﬁguration command:
If required, you can also use the CBAC debug commands listed in this section. (Debugging can be
turned off for each of the commands in this section by using the no form of the command. To disable
all debugging, use the privileged EXEC commands no debug all or undebug all.)
The available debug commands are listed in the following categories:
•
Generic Debug Commands
•
Transport Level Debug Commands
•
Application Protocol Debug Commands
For a complete description of the debug commands, refer to the Debug Command Reference.
Generic Debug Commands
You can use the following generic debug commands, entered in privileged EXEC mode:
show ip inspect all
Show all CBAC conﬁguration and all existing sessions
that are currently being tracked and inspected by
CBAC.
Command
Purpose
ip inspect audit trail
Turn on CBAC audit trail messages.
Command
Purpose
debug ip inspect function-trace
Display messages about software functions called by
CBAC.
debug ip inspect object-creation
Display messages about software objects being created
by CBAC. Object creation corresponds to the
beginning of CBAC-inspected sessions.
debug ip inspect object-deletion
Display messages about software objects being deleted
by CBAC. Object deletion corresponds to the closing
of CBAC-inspected sessions.
debug ip inspect events
Display messages about CBAC software events,
including information about CBAC packet processing.
debug ip inspect timers
Display messages about CBAC timer events such as
when a CBAC idle timeout is reached.
debug ip inspect detail
Enable the detailed option, which can be used in
combination with other options to get additional
information.
Command
Purpose

Transport Level Debug Commands
 Cisco IOS Firewall Feature Set
23
Transport Level Debug Commands
You can use the following transport-level debug commands, entered in privileged EXEC mode:
Application Protocol Debug Commands
You can use the following application protocol debug command, entered in privileged EXEC mode:
Table 3 identiﬁes application protocol keywords for the debug ip inspect command.
Interpret Syslog and Console Messages Generated by Context-based
Access Control
CBAC provides syslog messages, console alert messages and audit trail messages. These messages
are useful because they can alert you to network attacks and because they provide an audit trail that
provides details about sessions inspected by CBAC. While they are generally referred to as error
messages, not all error messages indicate problems with your system.
Command
Purpose
debug ip inspect tcp
Display messages about CBAC-inspected TCP events,
including details about TCP packets.
debug ip inspect udp
Display messages about CBAC-inspected UDP events,
including details about UDP packets.
Command
Purpose
debug ip inspect protocol
Display messages about CBAC-inspected protocol
events, including details about the protocol’s packets.
Refer to Table 3 to determine the protocol keyword.
Table 3
Application Protocol Keywords for the debug ip inspect Command
Application Protocol
protocol keyword
CU-SeeMe
cuseeme
FTP commands and responses
ftp-cmd
FTP tokens (enables tracing of the FTP tokens
parsed)
ftp-tokens
H.323
h323
Java applets
http
UNIX R commands (rlogin, rexec, rsh)
rcmd
RealAudio
realaudio
RPC
rpc
SMTP
smtp
SQL*Net
sqlnet
StreamWorks
streamworks
TFTP
tftp
VDOLive
vdolive

Configuration Tasks
24
Cisco IOS Release 12.0(3)T
The following types of error messages can be generated by CBAC:
•
Denial-of-Service Attack Detection Error Messages
•
SMTP Attack Detection Error Message
•
Java Blocking Error Message
•
FTP Error Messages
•
Audit Trail Error Message
For explanations and recommended actions related to the error messages mentioned in this section,
refer to the Cisco IOS Software System Error Messages.
Denial-of-Service Attack Detection Error Messages
CBAC detects and blocks denial-of-service attacks and notiﬁes you when denial-of-service attacks
occur. Error messages such as the following may indicate that denial-of-service attacks have
occurred:
%FW-4-ALERT_ON: getting aggressive, count (550/500) current 1-min rate: 250
%FW-4-ALERT_OFF: calming down, count (0/400) current 1-min rate: 0
When %FW-4-ALERT_ON and %FW-4-ALERT_OFF error messages appear together, each
“aggressive/calming” pair of messages indicates a separate attack. The preceding example shows
one separate attack.
Error messages such as the following may indicate that a denial-of-service attack has occurred on a
speciﬁc TCP host:
%FW-4-HOST_TCP_ALERT_ON: Max tcp half-open connections (50) exceeded for host
172.21.127.242.
%FW-4-BLOCK_HOST: Blocking new TCP connections to host 172.21.127.242 for 2 minutes
(half-open count 50 exceeded)
%FW-4-UNBLOCK_HOST: New TCP connections to host 172.21.127.242 no longer blocked
SMTP Attack Detection Error Message
CBAC detects and blocks SMTP attacks (illegal SMTP commands) and notiﬁes you when SMTP
attacks occur. Error messages such as the following may indicate that an SMTP attack has occurred:
%FW-4-SMTP_INVALID_COMMAND: Invalid SMTP command from initiator (192.168.12.3:52419)
Java Blocking Error Message
CBAC detects and selectively blocks Java applets and notiﬁes you when a Java applet has been
blocked. Error messages such as the following may indicate that a Java applet has been blocked:
%FW-4-HTTP_JAVA_BLOCK: JAVA applet is blocked from (172.21.127.218:80) to
(172.16.57.30:44673).

FTP Error Messages
 Cisco IOS Firewall Feature Set
25
FTP Error Messages
CBAC detects and prevents certain FTP attacks and notiﬁes you when this occurs. Error messages
such as the following may appear when CBAC detects these FTP attacks:
%FW-3-FTP_PRIV_PORT: Privileged port 1000 used in PORT command
-- FTP client 10.0.0.1
FTP server 10.1.0.1
%FW-3-FTP_SESSION_NOT_AUTHENTICATED: Command issued before the session is authenticated
-- FTP client 10.0.0.1
%FW-3-FTP_NON_MATCHING_IP_ADDR: Non-matching address 172.19.148.154 used in PORT
 command  -- FTP client 172.19.54.143  FTP server 172.16.127.242
Audit Trail Error Message
CBAC provides audit trail messages to record details about inspected sessions. To determine which
protocol was inspected use the responder’s port number. The port number follows the responder’s
address. The following are sample audit trail messages:
%FW-6-SESS_AUDIT_TRAIL: tcp session initiator (192.168.1.13:33192) sent 22 bytes --
responder (192.168.129.11:25) sent 208 bytes
%FW-6-SESS_AUDIT_TRAIL: http session initiator (172.16.57.30:44673) sent
1599 bytes -- responder (172.21.127.218:80) sent 93124 bytes
Turn Off Context-based Access Control
You can turn off CBAC, with the no ip inspect global conﬁguration command.
Note The no ip inspect command removes all CBAC conﬁguration entries and resets all CBAC
global timeouts and thresholds to the defaults. All existing sessions are deleted and their associated
access lists are removed.
In most situations, turning off CBAC has no negative security impact because CBAC creates
“permit” access lists. Without CBAC conﬁgured, no “permit” access lists are maintained. Therefore,
no derived trafﬁc (returning trafﬁc or trafﬁc from the data channels) can go through the ﬁrewall. The
exception is SMTP and Java blocking. With CBAC turned off, unacceptable SMTP commands or
Java applets may go through the ﬁrewall.
Conﬁguration Examples
This section provides three conﬁguration examples:
•
Simple CBAC Conﬁguration
•
Two Interface Branch Ofﬁce Conﬁguration
•
Multiple Interface Branch Ofﬁce Conﬁguration
The ﬁrst example develops a CBAC inspection rule and supporting ACL, and applies that inspection
rule on ATM interface. This example focuses on how to conﬁgure CBAC and does not provide a
complete router conﬁguration.
The other examples provide more complete ﬁrewall conﬁgurations, illustrating different ways to
apply CBAC in branch ofﬁce environments with LAN and serial interfaces.

Configuration Examples
26
Cisco IOS Release 12.0(3)T
Simple CBAC Conﬁguration
In this example, ﬁrewall protection is required for inbound trafﬁc on an ATM interface. This example
might apply to sites where local hosts require access to hosts or services on a remote network.
Additionally, the security policy for this site uses Access Control Lists (ACL) to restrict outbound
trafﬁc on the ATM interface to IP and ICMP protocol trafﬁc, denying outbound access for TCP and
UDP protocol trafﬁc. Outbound access for speciﬁc TCP and UDP protocol trafﬁc is provided
through dynamic access lists, which are generated according to CBAC inspection rules.
For information on how to select the interface on which to apply CBAC, refer to the section “Pick
an Interface: Internal or External”.
Note For Frame Relay or ATM interfaces, you can apply CBAC inspection rules separately on each
sub-interface, even though the sub-interfaces are physically connected through one interface.
!-------------------------
!Create the Inspection Rule
!-------------------------
!
!Create the CBAC inspection rule “test”, allowing inspection of the protocol traffic
!specified by the rule. This inspection rule sets the timeout value to 30 seconds for
!each protocol (except for RPC). The timeout value defines the maximum time that a
!connection for a given protocol can remain active without any traffic passing through
!the router. When these timeouts are reached, the dynamic ACLs that are inserted to
!permit the returning traffic are removed, and subsequent packets (possibly even valid
!ones) are not permitted.
ip inspect name test cuseeme timeout 30
ip inspect name test ftp timeout 30
ip inspect name test h323 timeout 30
ip inspect name test realaudio timeout 30
ip inspect name test rpc program-number 100000
ip inspect name test streamworks timeout 30
ip inspect name test vdolive timeout 30
!
!------------------------------
!Create the Access Control List
!------------------------------
!
!In this example, ACL 105 denies all TCP and UDP protocol traffic. IP traffic is
!permitted to allow access for routing and control traffic. This means that only the
!return traffic for protocols defined in the inspection rule is allow access through
!the interface where this rule is applied.
access-list 105 deny TCP any any
access-list 105 deny UDP any any
access-list 105 permit ip any any
!
!---------------------------------
!Apply the Inspection Rule and ACL
!---------------------------------
!
!In this example, the inspection rule “test” is applied at ATM interface 3/0 for
!connections initiated in the outbound direction; that is, from hosts that are located
!on a local network. ACL 105 is applied at ATM interface 3/0 in the inbound direction;
!that is, return traffic in response to local host initiated connections. If inbound
!traffic at the interface matches an inspection rule, CBAC creates a dynamic access
!list allowing inbound (returning) traffic for that connection. This combination of the
!ACL and CBAC inspection rules means that TCP and UDP traffic that is not part of a
!connection that initiated from a local host is not permitted access through the
!interface.
interface ATM3/0

Two-interface Branch Office Configuration
 Cisco IOS Firewall Feature Set
27
 ip address 10.1.10.1 255.0.0.0
 ip access-group 105 in
 no ip directed-broadcast
 ip nat outside
 ip inspect test out
 no shutdown
 atm clock INTERNAL
 atm pvc 7 7 7 aal5snap
 map-group atm
Two-interface Branch Ofﬁce Conﬁguration
This sample conﬁguration ﬁle shows a ﬁrewall conﬁgured with CBAC. The ﬁrewall is positioned
between a protected ﬁeld ofﬁce’s internal network and a WAN connection to the corporate
headquarters. CBAC is conﬁgured on the ﬁrewall in order to protect the internal network from
potential network threats coming from the WAN side.
The ﬁrewall has two interfaces conﬁgured:
•
Ethernet 0 connects to the internal protected network
•
Serial 0 connects to the WAN with Frame Relay
!----------------------------------------------------------------------
! This first section contains some configuration that is not required for CBAC,
! but illustrates good security practices. Note that there are no
! services on the Ethernet side. Email is picked up via POP from a server on the
! corporate side.
!----------------------------------------------------------------------
!
hostname fred-examplecorp-fr
!
boot system flash c1600-fw1600-l
enable secret 5 <elided>
!
username fred password <elided>
ip subnet-zero
no ip source-route
ip domain-name example.com
ip name-server 172.19.2.132
ip name-server 198.92.30.32
!
!
!----------------------------------------------------------------------
!The next section includes configuration required specifically for CBAC
!----------------------------------------------------------------------
!
!The following commands define the inspection rule “myfw”, allowing
!the specified protocols to be inspected. Note that Java applets will be permitted
!according to access list 51, defined later in this configuration.
ip inspect name myfw cuseeme timeout 3600
ip inspect name myfw ftp timeout 3600
ip inspect name myfw http java-list 51 timeout 3600
ip inspect name myfw rcmd timeout 3600
ip inspect name myfw realaudio timeout 3600
ip inspect name myfw smtp timeout 3600
ip inspect name myfw tftp timeout 30
ip inspect name myfw udp timeout 15
ip inspect name myfw tcp timeout 3600
!
!The following interface configuration applies the “myfw” inspection rule to
!inbound traffic at Ethernet 0. Since this interface is on the internal network
!side of the firewall, traffic entering Ethernet 0 is actually

Configuration Examples
28
Cisco IOS Release 12.0(3)T
!exiting the internal network. Applying the inspection rule to this interface causes
!inbound traffic (which is exiting the network) to be inspected; return traffic will
!only be permitted back through the firewall if part of a session which began from
!within the network.
!Also note that access list 101 is applied to inbound traffic at Ethernet 0.
!Any traffic that passes the access list will be inspected by CBAC.
!(Traffic blocked by the access list will not be inspected.)
!interface Ethernet0
 description ExampleCorp Ethernet chez fred
 ip address 172.19.139.1 255.255.255.248
 ip broadcast-address 172.19.131.7
 no ip directed-broadcast
 no ip proxy-arp
 ip inspect myfw in
ip access-group 101 in
 no cdp enable
!
interface Serial0
 description Frame Relay (Telco ID 22RTQQ062438-001) to ExampleCorp HQ
 no ip address
 ip broadcast-address 0.0.0.0
 encapsulation frame-relay IETF
 no arp frame-relay
 bandwidth 56
 service-module 56k clock source line
 service-module 56k network-type dds
 frame-relay lmi-type ansi
!
!Note that the following interface configuration applies access list 111 to
!inbound traffic at the external serial interface. (Inbound traffic is
!entering the network.) When CBAC inspection occurs on traffic exiting the
!network, temporary openings will be added to access list 111 to allow returning
!traffic that is part of existing sessions.
!
interface Serial0.1 point-to-point
 ip unnumbered Ethernet0
 ip access-group 111 in
 bandwidth 56
 no cdp enable
 frame-relay interface-dlci 16
!
ip classless
ip route 0.0.0.0 0.0.0.0 Serial0.1
!
!The following access list defines “friendly” and “hostile” sites for Java
!applet blocking. Because Java applet blocking is defined in the inspection
!rule “myfw” and references access list 51, applets will be actively denied
!if they are from any of the “deny” addresses and allowed only if they are from
!either of the two “permit” networks.
!
access-list 51 deny   172.19.1.203
access-list 51 deny   172.19.2.147
access-list 51 permit 172.18.0.0 0.1.255.255
access-list 51 permit 192.168.1.0 0.0.0.255
access-list 51 deny   any
!
!The following access list 101 is applied to interface Ethernet 0 above.
!This access list permits all traffic that should be CBAC inspected, and also
!provides anti-spoofing. The access list is deliberately set up to deny unknown
!IP protocols, because no such unknown protocols will be in legitimate use.
!
access-list 101 permit tcp 172.19.139.0 0.0.0.7 any
access-list 101 permit udp 172.19.139.0 0.0.0.7 any
access-list 101 permit icmp 172.19.139.0 0.0.0.7 any
access-list 101 deny   ip any any

Two-interface Branch Office Configuration
 Cisco IOS Firewall Feature Set
29
!The following access list 111 is applied to interface Serial 0.1 above.
!This access list filters traffic coming in from the external side. When
!CBAC inspection occurs, temporary openings will be added to the beginning of
!this access list to allow return traffic back into the internal network.
!This access list should restrict traffic that will be inspected by
!CBAC. (Remember that CBAC will open holes as necessary to permit returning traffic.)
!Comments precede each access list entry. These entries aren’t all specifically related
!to CBAC, but are created to provide general good security.
!
!Anti-spoofing.
access-list 111 deny   ip 172.19.139.0 0.0.0.7 any
!
!Sometimes EIGRP is run on the Frame Relay link. When you use an
!input access list, you have to explicitly allow even control traffic.
!This could be more restrictive, but there would have to be entries
!for the EIGRP multicast as well as for the office’s own unicast address.
access-list 111 permit igrp any any
!
!These are the ICMP types actually used...
!administratively-prohibited is useful when you're trying to figure out why
!you can't reach something you think you should be able to reach.
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 administratively-prohibited
!
!This allows network admins at headquarters to ping hosts at the field office:
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 echo
!
!This allows the field office to do outgoing pings
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 echo-reply
!
!Path MTU discovery requires too-big messages
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 packet-too-big
!
!Outgoing traceroute requires time-exceeded messages to come back
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 time-exceeded
!
! Incoming traceroute
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 traceroute
!
!Permits all unreachables because if you are trying to debug
!things from the remote office, you want to see them. If nobody ever did
!any debugging from the network, it would be more appropriate to permit only
!port unreachables or no unreachables at all.
access-list 111 permit icmp any 172.19.139.0 0.0.0.7 unreachable
!
!These next two entries permit users on most ExampleCorp networks to telnet to
!a host in the field office. This is for remote administration by the network admins.
access-list 111 permit tcp 172.18.0.0 0.1.255.255 host 172.19.139.1 eq telnet
access-list 111 permit tcp 192.168.1.0 0.0.0.255 host 172.19.139.1 eq telnet
!
!Final deny for explicitness
access-list 111 deny   ip any any
!
no cdp run
snmp-server community <elided> RO
!
line con 0
 exec-timeout 0 0
 password <elided>
 login local
line vty 0
 exec-timeout 0 0
 password <elided>
 login local
 length 35

Configuration Examples
30
Cisco IOS Release 12.0(3)T
line vty 1
 exec-timeout 0 0
 password 7 <elided>
 login local
line vty 2
 exec-timeout 0 0
 password 7 <elided>
 login local
line vty 3
 exec-timeout 0 0
 password 7 <elided>
 login local
line vty 4
 exec-timeout 0 0
 password 7 <elided>
 login local
!
scheduler interval 500
end
Multiple Interface Branch Ofﬁce Conﬁguration
In this conﬁguration example, a single Cisco 3600 series ﬁrewall router is positioned at a branch
ofﬁce. It has four internal networks and two WAN connections to the corporate headquarters. CBAC
is conﬁgured on the ﬁrewall to protect two of the internal networks from potential network threats
coming from the WAN side and from less secure internal networks. Anti-spooﬁng protection is
added at each interface with client systems.
Note This example shows a moderately high level of trust by the administrators toward the
expected users. Additional protection could be added to this conﬁguration for a situation in a lower
level of trust. That conﬁguration would include ICMP ﬁltering statements, signiﬁcantly more
protocol and address control through the use of more restrictive Access Control Lists, and
anti-spooﬁng applied everywhere. This conﬁguration does not contain those additional restrictions
because that would detract from the CBAC example.

Multiple Interface Branch Office Configuration
 Cisco IOS Firewall Feature Set
31
Figure 4
Sample Cisco IOS Firewall Application Environment
The branch ofﬁce has this sample network conﬁguration:
•
Ethernet interface 0/0 supports the Human Resources department servers. This network includes
an email (SMTP and POP3) host and a Windows NT server. The Windows NT server is the
Primary Domain Controller (PDC) for the Human Resources domain and has a trust relationship
with the rest of the company; however, it contains applications and databases that must not be
accessed by the rest of the company or the other groups in the branch ofﬁce. The devices on this
LAN are accessible only by users in the Human Resources department on Ethernet interface 0/1.
The Mail server must be able to send and receive email (through SMTP sessions) with all other
devices. The Windows 95 machines can use this machine as their email server (for sending email
through SMTP sessions) and as a repository for accumulating email that they can then download
through POP3 sessions. No one else in the company is allowed to form POP3 sessions to any
machine on this LAN.
•
Ethernet interface 0/1 supports the Windows 95 computers in the Human Resources department.
These users must have access to the Human Resources mail servers located on Ethernet interface
0/0 as well as access to the rest of the company. Access to the Windows NT server resources are
controlled through the Windows NT permissions assigned to each user in the Windows NT
domain.
•
Ethernet interface 1/0 supports the branch ofﬁce web servers, which can be accessed by everyone
in the company. These servers use TCP ports 80 (HTTP) and 443 (SHTTP) for inbound Web
access. This network also includes a backup domain controller (BDC) for the overall domain that
is also used as ﬁle, print, and service server.
Human resources
server network
Human resources
department PCs
Branch office PCs
Branch office
web servers
and BDC
172.16.140.0
Ethernet 1/1
172.16.130.0
Ethernet 1/0
172.16.120.0
Ethernet 0/1
Ethernet 0/0
172.16.110.0
Serial 0/0
192.168.150.0
Serial 0/1
192.168.160.0
Branch office
Cisco 3600
series router
15764

Configuration Examples
32
Cisco IOS Release 12.0(3)T
Ethernet interface 1/1 supports all users who are not in the Human Resources department. These
users have no access to the Human Resources department servers, but they can access the other
network interfaces and the serial interfaces for WAN connectivity. Serial interface 0/0 and 0/1
connect to the WAN with T1 links (links to corporate headquarters). In this sample conﬁguration,
the Domain Name System (DNS) servers are located somewhere within the rest of the company.
Additionally, network management (SNMP) and Telnet sessions are limited to the management
network (192.168.55.0), which is located somewhere within the rest of the company across the
serial interface.
! ------------------------------------------------------------------
! This first section contains some configuration that is not required
! for CBAC, but illustrates good security practices.
! ------------------------------------------------------------------
!Add this line to get timestamps on the syslog messages.
service timestamps log datetime localtime show-timezone
!
hostname Router1
!
boot system flash c3600-fw3600-l
!
! Configure AAA user authentication.
aaa new-model
aaa authentication login lista tacacs+ enable
!
enable secret 5 <elided>
ip subnet-zero
!
! Disable source routing to help prevent spoofing.
no ip source-route
!
! Set up the domain name and server IP addresses.
ip domain-name example.com
ip name-server 192.168.55.132
ip name-server 192.168.27.32
!
! The audit-trail command enables the delivery of specific CBAC messages
! through the syslog notification process.
ip inspect audit-trail
!
! Establish the time-out values for DNS queries. When this idle-timer expires,
! the dynamic ACL entries that were created to permit the reply to a DNS request
! will be removed and any subsequent packets will be denied.
ip inspect dns-timeout 10
!
!----------------------------------------------------------------------
!The next section includes configuration statements required
!specifically for CBAC.
!----------------------------------------------------------------------
! Define the CBAC inspection rule "inspect1", allowing the specified protocols to be
! inspected. The first rule enables SMTP specific inspection. SMTP inspection causes
! the exchange of the SMTP session to be inspected for illegal commands. Any packets
! with illegal commands are dropped, and the SMTP session will hang and eventually
! time out.
ip inspect name inspect1 smtp timeout 300
!
! In the next two lines of inspect1, define the maximum time that each of the udp and
! tcp sessions are allowed to continue without any traffic passing
! through the router. When these timeouts are reached, the dynamic ACLs that
! are inserted to permit the returning traffic are removed and subsequent packets
! (possibly even valid ones) will not be permitted.
ip inspect name inspect1 udp timeout 300
ip inspect name inspect1 tcp timeout 300
!

Multiple Interface Branch Office Configuration
 Cisco IOS Firewall Feature Set
33
! Define the CBAC inspection rule "inspect2", allowing the specified protocols to be
! inspected. These rules are similar to those used in the inspection rule “inspect1,”
! except that on the interfaces where this rule is applied, SMTP sessions are not
! expected to go through; therefore, the SMTP rule element is not applied here.
ip inspect name inspect2 udp timeout 300
ip inspect name inspect2 tcp timeout 3600
!
!----------------------------------------------------------------------
! The next section shows the Ethernet interface configuration statements for each
! interface, including access lists and inspections rules.
!----------------------------------------------------------------------
! Apply the "inspect1" inspection rule to sessions that are initiated in the outbound
! direction (toward the LAN) at Ethernet interface 0/0. All packets in these sessions
! will be inspected by CBAC. Provided that network traffic passes the Access Control
! List (ACL) restrictions, traffic is then inspected by CBAC for access through the
! IOS Firewall. Traffic blocked by the access list is not inspected by CBAC. Access
! list 110 is applied to outbound traffic on this interface.
interface Ethernet0/0
description HR_Server Ethernet
ip address 172.16.110.1 255.255.255.0
ip access-group 110 out
no ip directed-broadcast
no ip proxy-arp
ip inspect inspect1 out
no cdp enable
!
! Apply access list 120 to inbound traffic on Ethernet interface 0/1.
! Applying access list 120 to inbound traffic provides anti-spoofing on this interface
! by dropping traffic with a source address matching the IP address on a network other
! than Ethernet 0/1. The IP helper address lists the IP address of the DHCP server on
! Ethernet interface 1/0.
interface Ethernet0/1
description HR_client Ethernet
ip address 172.16.120.1 255.255.255.0
ip access-group 120 in
ip helper-address 172.16.130.66
no ip directed-broadcast
no ip proxy-arp
no cdp enable
!
! Apply the "inspect2" inspection rule to sessions that are initiated in the outbound
! direction (toward the LAN) at Ethernet interface 1/0. Provided that network traffic
! passes the Access Control List (ACL) restrictions, traffic is then inspected by CBAC
! through the IOS Firewall. Traffic blocked by the access list is not inspected by
! CBAC. Access list 130 is applied to outbound traffic on this interface.
interface Ethernet1/0
description Web_server Ethernet
ip address 172.16.130.1 255.255.255.0
ip access-group 130 out
no ip directed-broadcast
no ip proxy-arp
ip inspect inspect2 out
no cdp enable
!
! Apply access list 140 to inbound traffic at Ethernet interface 1/1. This
! provides anti-spoofing on the interface by dropping traffic with a source address
! matching the IP address of a network other than Ethernet 1/1. The IP helper address
! lists the IP address of the DHCP server on Ethernet interface 1/0.
interface Ethernet1/1
description Everyone_else Ethernet
ip address 172.16.140.1 255.255.255.0
ip access-group 140 in
ip helper-address 172.16.130.66
no ip directed-broadcast
no ip proxy-arp

Configuration Examples
34
Cisco IOS Release 12.0(3)T
no cdp enable
!
!----------------------------------------------------------------------
! The next section configures the serial interfaces, including access lists.
!----------------------------------------------------------------------
! Apply access list 150 to Serial interfaces 0/0. This provides anti-spoofing on the
! serial interface by dropping traffic with a source address matching the IP address
! of a host on Ethernet interface 0/0, 0/1, 1/0, or 1/1.
interface Serial0/0
description T1 to HQ
ip address 192.168.150.1 255.255.255.0
ip access-group 150 in
bandwidth 1544
!
interface Serial1/1
description T1 to HQ
ip address 192.168.160.1 255.255.255.0
ip access-group 150 in
bandwidth 1544
!
! ------------------------------
! Configure routing information.
! -------------------------------
router igrp 109
network 172.16.0.0
network 192.168.150.0
network 192.168.160.0
!
! Define protocol forwarding on the firewall. When you turn on a related command,
! ip helper-address, you forward every IP broadcast in the ip forward protocol
! command list, including several which are on by default: TFTP (port 69),
! DNS (port 53), Time service (port 37), NetBIOS Name Server (port 137),
! NetBIOS Datagram Server (port 138), BOOTP client and server datagrams
! (ports 67 and 68), and TACACS service (port 49). One common
! application that requires helper addresses is Dynamic Host Configuration
! Protocol (DHCP). DHCP protocol information is carried inside of BOOTP packets. The
! “no ip forward protocol” statements turn off forwarding for the specified protocols.
no ip forward-protocol udp netbios-ns
no ip forward-protocol udp netbios-dgm
no ip forward-protocol udp tacacs
no ip forward-protocol udp tftp
ip forward-protocol udp bootpc
!
! Add this line to establish where router SYSLOG messages are sent. This includes the
! CBAC messages.
logging 192.168.55.131
!
! ---------------------------------------------------------------
! Define the configuration of each access list.
! ---------------------------------------------------------------
! Defines Telnet controls in access list 12.
access-list 12 permit 192.168.55.0 0.0.0.255
!
! Defines snmp controls in access list 13.
access-list 13 permit 192.168.55.12
access-list 13 permit 192.168.55.19
!
! Access list 110 permits TCP and UDP protocol traffic for
! specific ports and with a source address on Ethernet interface 0/1. The access list
! denies IP protocol traffic with any other source and destination address. The
! access list permits ICMP access for any source and destination
! address. Access list 110 is deliberately set up to deny unknown IP protocols
! because no such unknown protocols will be in legitimate use. Access list
! 110 is applied to outbound traffic at Ethernet interface 0/0. In ACL 110,
! network traffic is being allowed access to the ports on any server on the HR server

Multiple Interface Branch Office Configuration
 Cisco IOS Firewall Feature Set
35
! network. In less trusted environments, this can be a security problem; however, you
! can limit access more severely by specifying specific destination addresses in the
! ACL statements.
access-list 110 permit tcp 172.16.120.0 0.0.0.255 any eq smtp
access-list 110 permit tcp 172.16.120.0 0.0.0.255 any eq pop3
access-list 110 permit tcp 172.16.120.0 0.0.0.255 any eq 110
access-list 110 permit udp any any eq 137
access-list 110 permit udp any any eq 138
access-list 110 permit udp any any eq 139
access-list 110 permit icmp any any
access-list 110 deny ip any any!
!
! Access-list 120 permits TCP, UDP, and ICMP protocol traffic with a source address
! on Ethernet interface 0/1, but denies all other IP protocol traffic. Access list
! 120 is applied to inbound traffic on Ethernet interface 0/1.
access-list 120 permit tcp 172.16.120.0 0.0.0.255 any
access-list 120 permit udp 172.16.120.0 0.0.0.255 any
access-list 120 permit icmp 172.16.120.0 0.0.0.255 any
access-list 120 deny ip any any
!
! Access list 130 permits TCP, UDP, and ICMP protocol traffic for specific ports and
! with any source and destination address. It opens access to the web server and to
! all NBT services to the rest of the company, which can be controlled through the
! trust relations on the NT servers. The bootpc entry permits access to the DHCP
! server. Access list 130 denies all other IP protocol traffic. Access list 130 is
! applied to outbound traffic at Ethernet interface 1/0.
access-list 130 permit tcp any any eq www
access-list 130 permit tcp any any eq 443
access-list 130 permit tcp any any eq 110
access-list 130 permit udp any any eq 137
access-list 130 permit udp any any eq 138
access-list 130 permit udp any any eq 139
access-list 130 permit udp any any eq bootpc
access-list 130 permit icmp any any
access-list 130 deny ip any any
!
! Access list 140 permits TCP, UDP, and ICMP protocol traffic with a source address on
! Ethernet interface 1/1, and it denies all other IP protocol traffic. Access list 140
! is applied to inbound traffic at Ethernet interface 1/1.
access-list 140 permit tcp 172.16.140.0 0.0.0.255 any
access-list 140 permit udp 172.16.140.0 0.0.0.255 any
access-list 140 permit icmp 172.16.140.0 0.0.0.255 any
access-list 140 deny ip any any
!
! Access list 150 denies IP protocol traffic with a source address on Ethernet
! interfaces 0/0, 0/1, 1/0, and 1/1, and it permits IP protocol traffic with any other
! source and destination address. Access list 150 is applied to inbound traffic
! on each of the serial interfaces.
access-list 150 deny ip 172.16.110.0 0.0.0.255 any
access-list 150 deny ip 172.16.120.0 0.0.0.255 any
access-list 150 deny ip 172.16.130.0 0.0.0.255 any
access-list 150 deny ip 172.16.140.0 0.0.0.255 any
access-list 150 permit ip any any
!
! Disable Cisco Discovery Protocol.
no cdp run
!
snmp-server community <elided> ro 13
tacacs-server host 192.168.55.2
tacacs-server key <elided>
!
! -----------------------------------------------------------------------------------
! Configures the router console port and the virtual terminal line interfaces,
! including AAA authentication at login. Authentication is required for users defined
! in “lista.” Access-class 12 is applied on each line, restricting Telnet access to

Command Reference
36
Cisco IOS Release 12.0(3)T
! connections with a source address on the network management network.
! -----------------------------------------------------------------------------------
line console 0
exec-timeout 3 00
login authentication lista
line aux 0
exec-timeout 3 00
login authentication lista
line vty 0
exec-timeout 1 30
login authentication lista
access-class 12 in
line vty 1
exec-timeout 1 30
login authentication lista
access-class 12 in
line vty 2
exec-timeout 1 30
login authentication lista
access-class 12 in
line vty 3
exec-timeout 1 30
login authentication lista
access-class 12 in
line vty 4
exec-timeout 1 30
login authentication lista
access-class 12 in
!
end
Command Reference
None. Cisco IOS Firewall feature set command descriptions are included in the Security Command
Reference.

