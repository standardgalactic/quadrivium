Node Core  
So, in this section, you learned that: 
- We don’t have the window object in Node. 
- The global object in Node is “global”. 
- Unlike browser applications, variables we deﬁne are not added to the “global” 
object. 
- Every ﬁle in a Node application is a module. Node automatically wraps the code 
in each ﬁle with an IIFE (Immediately-invoked Function Expression) to create 
scope. So, variables and functions deﬁned in one ﬁle are only scoped to that ﬁle 
and not visible to other ﬁles unless explicitly exported. 
- To export a variable or function from a module, you need to add them to 
module.exports:  
module.exports.sayHello = sayHello; 
- To load a module, use the require function. This function returns the 
module.exports object exported from the target module:  
const logger = require(‘./logger’);
- Node has a few built-in modules that enable us to work with the ﬁle system, path 
objects, network, operating system, etc. 
- EventEmitter is one of the core classes in Node that allows us to raise (emit) and 
handle events. Several built-in classes in Node derive from EventEmitter. 
- To create a class with the ability to raise events, we should extend EventEmitter: 
class Logger extends EventEmitter {  
} 

