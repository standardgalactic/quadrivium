
A First Course in
Finite Elements
Jacob Fish
Rensselaer Polytechnic Institute, USA
Ted Belytschko
Northwestern University, USA
John Wiley & Sons, Ltd


A First Course in
Finite Elements


A First Course in
Finite Elements
Jacob Fish
Rensselaer Polytechnic Institute, USA
Ted Belytschko
Northwestern University, USA
John Wiley & Sons, Ltd

Copyright  2007
John Wiley & Sons Ltd, The Atrium, Southern Gate, Chichester,
West Sussex PO19 8SQ, England
Telephone (þ44) 1243 779777
Email (for orders and customer service enquiries): cs-books@wiley.co.uk
Visit our Home Page on www.wiley.com
All Rights Reserved. No part of this publication may be reproduced, stored in a retrieval system or transmitted in any
form or by any means, electronic, mechanical, photocopying, recording, scanning or otherwise, except under the
terms of the Copyright, Designs and Patents Act 1988 or under the terms of a licence issued by the Copyright
Licensing Agency Ltd, 90 Tottenham Court Road, London W1T 4LP, UK, without the permission in writing of the
Publisher. Requests to the Publisher should be addressed to the Permissions Department, John Wiley & Sons Ltd,
The Atrium, Southern Gate, Chichester, West Sussex PO19 8SQ, England, or emailed to permreq@wiley.co.uk, or
faxed to (þ44) 1243 770620.
Designations used by companies to distinguish their products are often claimed as trademarks. All brand names and
product names used in this book are trade names, service marks, trademarks or registered trademarks of their
respective owners. The Publisher is not associated with any product or vendor mentioned in this book.
This publication is designed to provide accurate and authoritative information in regard to the subject matter
covered. It is sold on the understanding that the Publisher is not engaged in rendering professional services. If
professional advice or other expert assistance is required, the services of a competent professional should be sought.
Other Wiley Editorial Ofﬁces
John Wiley & Sons Inc., 111 River Street, Hoboken, NJ 07030, USA
Jossey-Bass, 989 Market Street, San Francisco, CA 94103-1741, USA
Wiley-VCH Verlag GmbH, Boschstr. 12, D-69469 Weinheim, Germany
John Wiley & Sons Australia Ltd, 42 McDougall Street, Milton, Queensland 4064, Australia
John Wiley & Sons (Asia) Pte Ltd, 2 Clementi Loop #02-01, Jin Xing Distripark, Singapore 129809
John Wiley & Sons Canada Ltd, 6045 Freemont Blvd, Mississauga, ONT, Canada L5R 4J3
Wiley also publishes its books in a variety of electronic formats. Some content that appears in print may not be
available in electronic books.
British Library Cataloguing in Publication Data
A catalogue record for this book is available from the British Library
ISBN 978-0-470-03580-1 (PB)
Typeset in 9/11 pt in Thomson Digital
Printed and bound in Great Britain by Antony Rowe Ltd, Chippenham, Wiltshire
This book is printed on acid-free paper responsibly manufactured from sustainable forestry
in which at least two trees are planted for each one used for paper production.

Contents
Preface
xi
1
Introduction
1
1.1
Background
1
1.2
Applications of Finite elements
7
References
9
2
Direct Approach for Discrete Systems
11
2.1
Describing the Behavior of a Single Bar Element
11
2.2
Equations for a System
15
2.2.1
Equations for Assembly
18
2.2.2
Boundary Conditions and System Solution
20
2.3
Applications to Other Linear Systems
24
2.4
Two-Dimensional Truss Systems
27
2.5
Transformation Law
30
2.6
Three-Dimensional Truss Systems
35
References
36
Problems
37
3
Strong and Weak Forms for One-Dimensional Problems
41
3.1
The Strong Form in One-Dimensional Problems
42
3.1.1
The Strong Form for an Axially Loaded Elastic Bar
42
3.1.2
The Strong Form for Heat Conduction in One Dimension
44
3.1.3
Diffusion in One Dimension
46
3.2
The Weak Form in One Dimension
47
3.3
Continuity
50
3.4
The Equivalence Between the Weak and Strong Forms
51
3.5
One-Dimensional Stress Analysis with Arbitrary Boundary Conditions
58
3.5.1
Strong Form for One-Dimensional Stress Analysis
58
3.5.2
Weak Form for One-Dimensional Stress Analysis
59

3.6
One-Dimensional Heat Conduction with Arbitrary
Boundary Conditions
60
3.6.1
Strong Form for Heat Conduction in One Dimension
with Arbitrary Boundary Conditions
60
3.6.2
Weak Form for Heat Conduction in One Dimension
with Arbitrary Boundary Conditions
61
3.7
Two-Point Boundary Value Problem with
Generalized Boundary Conditions
62
3.7.1
Strong Form for Two-Point Boundary Value Problems
with Generalized Boundary Conditions
62
3.7.2
Weak Form for Two-Point Boundary Value Problems
with Generalized Boundary Conditions
63
3.8
Advection–Diffusion
64
3.8.1
Strong Form of Advection–Diffusion Equation
65
3.8.2
Weak Form of Advection–Diffusion Equation
66
3.9
Minimum Potential Energy
67
3.10 Integrability
71
References
72
Problems
72
4
Approximation of Trial Solutions, Weight Functions
and Gauss Quadrature for One-Dimensional Problems
77
4.1
Two-Node Linear Element
79
4.2
Quadratic One-Dimensional Element
81
4.3
Direct Construction of Shape Functions in One Dimension
82
4.4
Approximation of the Weight Functions
84
4.5
Global Approximation and Continuity
84
4.6
Gauss Quadrature
85
Reference
90
Problems
90
5
Finite Element Formulation for One-Dimensional Problems
93
5.1
Development of Discrete Equation: Simple Case
93
5.2
Element Matrices for Two-Node Element
97
5.3
Application to Heat Conduction and Diffusion Problems
99
5.4
Development of Discrete Equations for Arbitrary Boundary
Conditions
105
5.5
Two-Point Boundary Value Problem with
Generalized Boundary Conditions
111
5.6
Convergence of the FEM
113
5.6.1
Convergence by Numerical Experiments
115
5.6.2
Convergence by Analysis
118
5.7
FEM for Advection–Diffusion Equation
120
References
122
Problems
123
vi
CONTENTS

6
Strong and Weak Forms for Multidimensional
Scalar Field Problems
131
6.1
Divergence Theorem and Green’s Formula
133
6.2
Strong Form
139
6.3
Weak Form
142
6.4
The Equivalence Between Weak and Strong Forms
144
6.5
Generalization to Three-Dimensional Problems
145
6.6
Strong and Weak Forms of Scalar Steady-State
Advection–Diffusion in Two Dimensions
146
References
148
Problems
148
7
Approximations of Trial Solutions, Weight Functions and
Gauss Quadrature for Multidimensional Problems
151
7.1
Completeness and Continuity
152
7.2
Three-Node Triangular Element
154
7.2.1
Global Approximation and Continuity
157
7.2.2
Higher Order Triangular Elements
159
7.2.3
Derivatives of Shape Functions for the
Three-Node Triangular Element
160
7.3
Four-Node Rectangular Elements
161
7.4
Four-Node Quadrilateral Element
164
7.4.1
Continuity of Isoparametric Elements
166
7.4.2
Derivatives of Isoparametric Shape Functions
166
7.5
Higher Order Quadrilateral Elements
168
7.6
Triangular Coordinates
172
7.6.1
Linear Triangular Element
172
7.6.2
Isoparametric Triangular Elements
174
7.6.3
Cubic Element
175
7.6.4
Triangular Elements by Collapsing Quadrilateral Elements
176
7.7
Completeness of Isoparametric Elements
177
7.8
Gauss Quadrature in Two Dimensions
178
7.8.1
Integration Over Quadrilateral Elements
179
7.8.2
Integration Over Triangular Elements
180
7.9
Three-Dimensional Elements
181
7.9.1
Hexahedral Elements
181
7.9.2
Tetrahedral Elements
183
References
185
Problems
186
8
Finite Element Formulation for Multidimensional
Scalar Field Problems
189
8.1
Finite Element Formulation for Two-Dimensional
Heat Conduction Problems
189
8.2
Veriﬁcation and Validation
201
CONTENTS
vii

8.3
Advection–Diffusion Equation
207
References
209
Problems
209
9
Finite Element Formulation for Vector Field Problems – Linear Elasticity
215
9.1
Linear Elasticity
215
9.1.1
Kinematics
217
9.1.2
Stress and Traction
219
9.1.3
Equilibrium
220
9.1.4
Constitutive Equation
222
9.2
Strong and Weak Forms
223
9.3
Finite Element Discretization
225
9.4
Three-Node Triangular Element
228
9.4.1
Element Body Force Matrix
229
9.4.2
Boundary Force Matrix
230
9.5
Generalization of Boundary Conditions
231
9.6
Discussion
239
9.7
Linear Elasticity Equations in Three Dimensions
240
Problems
241
10 Finite Element Formulation for Beams
249
10.1
Governing Equations of the Beam
249
10.1.1
Kinematics of Beam
249
10.1.2
Stress–Strain Law
252
10.1.3
Equilibrium
253
10.1.4
Boundary Conditions
254
10.2
Strong Form to Weak Form
255
10.2.1
Weak Form to Strong Form
257
10.3
Finite Element Discretization
258
10.3.1
Trial Solution and Weight Function Approximations
258
10.3.2
Discrete Equations
260
10.4
Theorem of Minimum Potential Energy
261
10.5
Remarks on Shell Elements
265
Reference
269
Problems
269
11 Commercial Finite Element Program ABAQUS Tutorials
275
11.1
Introduction
275
11.1.1
Steady-State Heat Flow Example
275
11.2
Preliminaries
275
11.3
Creating a Part
276
11.4
Creating a Material Deﬁnition
278
11.5
Deﬁning and Assigning Section Properties
279
11.6
Assembling the Model
280
11.7
Conﬁguring the Analysis
280
11.8
Applying a Boundary Condition and a Load to the Model
280
11.9
Meshing the Model
282
viii
CONTENTS

11.10
Creating and Submitting an Analysis Job
284
11.11
Viewing the Analysis Results
284
11.12
Solving the Problem Using Quadrilaterals
284
11.13
Reﬁning the Mesh
285
11.13.1
Bending of a Short Cantilever Beam
287
11.14
Copying the Model
287
11.15
Modifying the Material Deﬁnition
287
11.16
Conﬁguring the Analysis
287
11.17
Applying a Boundary Condition and a Load to
the Model
288
11.18
Meshing the Model
289
11.19
Creating and Submitting an Analysis Job
290
11.20
Viewing the Analysis Results
290
11.20.1
Plate with a Hole in Tension
290
11.21
Creating a New Model
292
11.22
Creating a Part
292
11.23
Creating a Material Deﬁnition
293
11.24
Deﬁning and Assigning Section Properties
294
11.25
Assembling the Model
295
11.26
Conﬁguring the Analysis
295
11.27
Applying a Boundary Condition and a Load to the Model
295
11.28
Meshing the Model
297
11.29
Creating and Submitting an Analysis Job
298
11.30
Viewing the Analysis Results
299
11.31
Reﬁning the Mesh
299
Appendix
303
A.1
Rotation of Coordinate System in Three Dimensions
303
A.2
Scalar Product Theorem
304
A.3
Taylor’s Formula with Remainder and the Mean Value Theorem
304
A.4
Green’s Theorem
305
A.5
Point Force (Source)
307
A.6
Static Condensation
308
A.7
Solution Methods
309
Direct Solvers
310
Iterative Solvers
310
Conditioning
311
References
312
Problem
312
Index
313
CONTENTS
ix


Preface
This book is written to be an undergraduate and introductory graduate level textbook, depending on
whether the more advanced topics appearing at the end of each chapter are covered. Without the advanced
topics, the bookisof a level readily comprehensible by juniorand senior undergraduatestudentsinscience
andengineering.Withtheadvancedtopicsincluded,thebookcanserveasthetextbookfortheﬁrstcoursein
ﬁnite elements at the graduate level. The text material evolved from over 50 years of combined teaching
experience by the authors of graduate and undergraduate ﬁnite element courses.
The book focuses on the formulation and application of the ﬁnite element method. It differs from other
elementary ﬁnite element textbooks in the following three aspects:
1.
Itisintroductoryandself-contained.Onlyamodestbackgroundinmathematicsandphysicsisneeded,
allofwhichiscoveredinengineeringandsciencecurriculaintheﬁrsttwoyears.Furthermore,manyof
the speciﬁc topics in mathematics, such as matrix algebra, some topics in differential equations, and
mechanics and physics, such as conservation laws and constitutive equations, are reviewed prior to
their application.
2.
It is generic. While most introductory ﬁnite element textbooks are application speciﬁc, e.g. focusing
onlinearelasticity,theﬁniteelementmethodinthisbookisformulatedasageneralpurposenumerical
procedure for solving engineering problems governed by partial differential equations. The metho-
dology for obtaining weak forms for the governing equations, a crucial step in the development and
understanding of ﬁnite elements, is carefully developed. Consequently, students from various engi-
neering and science disciplines will beneﬁt equally from the exposition of the subject.
3.
Itisahands-onexperience.Thebookintegratesﬁniteelementtheory,ﬁniteelementcodedevelopment
and the application of commercial software package. Finite element code development is introduced
through MATLAB exercises and a MATLAB program, whereas ABAQUS is used for demonstrating
the use of commercial ﬁnite element software.
The material in the book can be covered in a single semester and a meaningful course can be constructed
from asubset ofthe chapters inthisbookforaone-quarter course. Thecourse material isorganizedinthree
chronological units of about one month each: (1) ﬁnite elements for one-dimensional problems; (2) ﬁnite
elementsforscalarﬁeldproblemsintwodimensionsand(3)ﬁniteelementsforvectorﬁeldproblemsintwo
dimensions and beams. In each case, the weak form is developed, shape functions are described and these
ingredients are synthesized to obtain the ﬁnite element equations. Moreover, in a web-base chapter, the
application of general purpose ﬁnite element software using ABAQUS is given for linear heat conduction
and elasticity.
Each chapter contains a comprehensive set of homework problems, some of which require program-
ming with MATLAB. Each book comes with an accompanying ABAQUS Student Edition CD, and

MATLAB ﬁnite element programs can be downloaded from the accompanying website hosted by John
Wiley&Sons: www.wileyeurope/college/Fish. A tutorialfor the ABAQUS example problems, written by
ABAQUS staff, is also included in the book.
Depending on the interests and background of the students, three tracks have been developed:
1. Broad Science and Engineering (SciEng) track
2. Advanced (Advanced) track
3. Structural Mechanics (StrucMech) track
The SciEng track is intended for a broad audience of students in science and engineering. It is aimed
at presenting FEM as a versatile tool for solving engineering design problems and as a tool for
scientiﬁc discovery. Students who have successfully completed this track should be able to appreciate
and apply the ﬁnite element method for the types of problems described in the book, but more importantly,
the SciEng track equips them with a set of skills that will allow them to understand and develop the
method for a variety of problems that have not been explicitly addressed in the book. This is our
recommended track.
The Advanced track is intended for graduate students as well as undergraduate students with a strong
focus on applied mathematics, who are less concerned with specialized applications, such as beams and
trusses, but rather with a more detailed exposition of the method. Although detailed convergence proofs in
multidimensions are left out, the Advanced track is an excellent stepping stone for students interested in a
comprehensive mathematical analysis of the method.
The StrucMech track is intended for students in Civil, Mechanical and Aerospace Engineering whose
main interests are in structural and solid mechanics. Specialized topics, such as trusses, beams and energy-
basedprinciples,areemphasizedinthistrack,whilesectionsdealingwithtopicsotherthansolidmechanics
in multidimensions are classiﬁed as optional.
TheTableP1givesrecommendedcourseoutlines forthethreetracks.Thethreecolumnsontherightlist
are the recommended sections for each track.
Table P1
Suggested outlines for Science and Engineering (SciEng) track, Advanced Track and Structural
Mechanics (StrucMech) Track.
Outline
SciEng
Advanced
StrucMech
Part 1: Finite element formulation for
one-dimensional problems
Chapter 1: Introduction
All
All
All
Chapter 2: Direct approach for discrete systems
2.1–2.3
2.1, 2.2, 2.4
Chapter 3: Strong and weak forms for
3.1–3.6
All
3.1.1, 3.2–3.5, 3.9
one-dimensional problems
Chapter 4: Approximation of trial solutions,
All
All
All
weight functions and Gauss quadrature for
one-dimensional problems
Chapter 5: Finite element formulation for
5.1–5.4, 5.6, 5.6.1
All
5.1, 5.2, 5.4, 5.6,
one-dimensional problems
5.6.1
Part 2: Finite element formulation for scalar
ﬁeld problems in multidimensions
Chapter 6: Strong and weak forms for
6.1–6.3
All
6, 6.1
multi-dimensional scalar ﬁeld problems
Chapter 7: Approximation of trial solutions,
7.1–7.4, 7.8.1
All
7.1–7.4, 7.8.1
weight functions and Gauss quadrature for
multi-dimensional problems
Chapter 8: Finite element formulation for multi
8.1, 8.2
All
dimensional scalar ﬁeld problems
xii
PREFACE

Table P1
(Continued)
Outline
SciEng
Advanced
StrucMech
Part 3: Finite element formulation for
vector ﬁeld problems in two dimensions
Chapter 9: Finite element formulation for vector
9.1–9.6
All
9.1–9.6
ﬁeld problems – linear elasticity
Chapter 10: Finite element formulation for beams
10.1–10.4
Chapter 11: Commercial ﬁnite element program
All
All
All
ABAQUS tutorial
Chapter 12: Finite Element Programming with
12.1–12.6
12.1,
12.1–12.4,
MATLAB (on the web only)
12.3–12.6
12.6–12.7
A BRIEF GLOSSARY OF NOTATION
Scalars, Vectors, Matrices
a, B
Scalars
a, B
Matrices
~a;~B
Vectors
ai; Bij
Matrix or vector components
Integers
nnp
Number of nodal points
nel
Number of element
ngp
Number of Gauss points
nen
Number of element nodes
e
Element number
IJ
Kronecker delta
Sets
8
For all
[
Union
\
Intersection
2
Member of

Subset of
Spaces, Continuity
U
Space of trial solutions
U0
Space of weight functions
Cn
Functions whose jth derivatives
0  j  n are continuous
Hs
A space of functions
with s square-integrable
derivatives
Strong Forms-General

Problem domain

Boundary of domain
n ¼ ðnx; nyÞ
Unit normal to ðn ¼ 1 in1DÞ
ðx; yÞ
Physical coordinates (x in 1D)
=; =S
Gradient and symmetric gradient
matrices
~r
Gradient vector
Strong Form-Heat Conduction
T
Temperature
q ¼ ðqx; qyÞT
Flux (q in 1D)
T
Essential boundary
q
Natural boundary
s
Heat source
q; T
Boundary ﬂux and temperature
D
Conductivity matrix
kxx; kyy; kxy
Conductivities (k in 1D)
Strong Form-Elasticity
u ¼ ðux; uyÞT
Displacements (u in 1D)
~sx;~sy
stress vectors acting on the planes
normal to x and y directions
e; r
Strain and stress matrices (e and s
in 1D)
s
Stress tensor
exx; eyy; gxy
Strain components
sxx; syy; sxy
Stress components
b ¼ ðbx; byÞT
Body forces (b in 1D)
t ¼ ðtx; tyÞT
Tractions
E; 
Young’s modulus and Poisson’s
ratio.
D
Material moduli matrix
t ¼ ðtx;tyÞT
Prescribed traction (t in 1D)
u ¼ ðux; uyÞT
Prescribed displacements
(u in 1D)
u; t
Essential (displacement) and
natural (traction) boundary
PREFACE
xiii

Strong Form - Beams
uM
x ðxÞ
Displacement in x at
midline
m(x)
Internal moment
s(x)
Internal shear force
p(x)
Distributed loading
I
Moment of inertia

Curvature
uy
Vertical displacements,

Rotations
m;s
Prescribed moments and shear
forces
uy; 
Prescribed vertical displacements
and rotations
m; s
Natural boundary: moments
and shear
u; 
Essential boundary: vertical
displacements and rotations
Finite Elements-General
e
Domain of element e (le in 1D)
Ae
Area of element e (cross-sectional
area in 1D)
xe
I; ye
I
Coordinates of node I in
element e
Ne; N
Element and global shape
function matrices
Be; B
Element and global shape
function derivative matrices
Le
Gather matrix
LeT
Scatter matrix
Je
Jacobian matrix
e; h
Element and global trial solutions
we; wh
Element and global weight
functions
Wi
Gauss quadrature weights
; ; I
Parent/natural coordinate
xð; Þ
x - coordinate mapping
yð; Þ
y - coordinate mapping
KE; KF; KEF
Partition into E- and F- nodes
w
Global weight functions matrix
Re
Rotation matrix from element to
global coordinate system
Finite Elements-Heat Conduction
Te
Finite element temperature
d; de
Global and element
temperature matrices
K; Ke
Global and element conductance
matrices
f; fe

Global and element
boundary ﬂux matrices
f; fe

Global and element source
matrices
r
Global residual matrix
f
Global ﬂux matrix
Finite Elements-Elasticity
ue
Finite element displacements
ue
xI; ue
yI
Displacements at element node I
in x and y directions, respectively
d; de
Global and element
displacement matrix
K; Ke
Global and element stiffness
matrices
f; fe

Global and element
boundary force matrix
f; fe

Global and element
body force matrices
f; fe
Global and element force
matrix
r
Global reaction force matrix
Finite Elements-Beams
ue
y
Finite element vertical
displacements
de
Element displacement
matrix ½uy1; 1; uy2; 2T
K; Ke
Global and element stiffness
matrices
f; fe

Global and element
boundary force matrices
f; fe

Global and element body
force matrices
f; fe
Global and element force
matrices
r
Global reaction force matrix
xiv
PREFACE

1
Introduction
1.1
BACKGROUND
Many physical phenomena in engineering and science can be described in terms of partial differential
equations.Ingeneral,solvingtheseequationsbyclassicalanalyticalmethodsforarbitraryshapesisalmost
impossible. The ﬁnite element method (FEM) is a numerical approach by which these partial differential
equations can be solved approximately. From an engineering standpoint, the FEM is a method for solving
engineering problems such as stress analysis, heat transfer, ﬂuid ﬂow and electromagnetics by computer
simulation.
Millions of engineers and scientists worldwide use the FEM to predict the behavior of structural,
mechanical, thermal, electrical and chemical systems for both design and performance analyses. Its
popularity can be gleaned by the fact that over $1 billion is spent annually in the United States on FEM
software and computer time. A 1991 bibliography (Noor, 1991) lists nearly 400 ﬁnite element books in
Englishandotherlanguages.Awebsearch(in2006)forthephrase‘ﬁniteelement’usingtheGooglesearch
engine yielded over 14 million pages of results. Mackerle (http://ohio.ikp.liu.se/fe) lists 578 ﬁnite element
books published between 1967 and 2005.
To explain the basic approach of the FEM, consider a plate with a hole as shown in Figure 1.1 for which
we wish to ﬁnd the temperature distribution. It is straightforward to write a heat balance equation for each
point in the plate. However, the solution of the resulting partial differential equation for a complicated
geometry, such as an engine block, is impossible by classical methods like separation of variables.
Numericalmethodssuchasﬁnitedifferencemethodsarealsoquiteawkwardforarbitraryshapes;software
developershavenotmarketedﬁnitedifferenceprogramsthatcandealwiththecomplicatedgeometriesthat
are commonplace in engineering. Similarly, stress analysis requires the solution of partial differential
equations that are very difﬁcult to solve by analytical methods except for very simple shapes, such as
rectangles, and engineering problems seldom have such simple shapes.
The basic idea of FEM is to divide the body into ﬁnite elements, often just called elements, connected by
nodes,andobtainanapproximatesolutionasshowninFigure1.1.Thisiscalledtheﬁniteelementmeshand
the process of making the mesh is called mesh generation.
The FEM provides a systematic methodology by which the solution, in the case of our example, the
temperature ﬁeld, can be determined by a computer program. For linear problems, the solution is
determined by solving a system of linear equations; the number of unknowns (which are the nodal
temperatures) is equal to the number of nodes. To obtain a reasonably accurate solution, thousands of
nodesareusuallyneeded,socomputersareessentialforsolvingtheseequations.Generally,theaccuracyof
the solution improves as the number of elements (and nodes) increases, but the computer time, and hence
the cost, also increases. The ﬁnite element program determines the temperature at each node and the heat
ﬂow through each element. The results are usually presented as computer visualizations, such as contour
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

plots, although selected results are often output on monitors. This information is then used in the
engineering design process.
The same basic approach is used in other types of problems. In stress analysis, the ﬁeld variables are the
displacements; in chemical systems, the ﬁeld variables are material concentrations; and in electromag-
netics, the potential ﬁeld. The same type of mesh is used to represent the geometry of the structure or
component and to develop the ﬁnite element equations, and for a linear system, the nodal values are
obtained by solving large systems (from 103 to 106 equations are common today, and in special applica-
tions, 109) of linear algebraic equations.
Thistextislimited tolinearﬁniteelementanalysis (FEA).Thepreponderanceofﬁniteelementanalyses
in engineering design is today still linear FEM. In heat conduction, linearity requires that the conductance
be independent of temperature. In stress analysis, linear FEM is applicable only if the material behavior is
linear elastic and the displacements are small. These assumptions are discussed in more depth later in the
book. In stress analysis, for most analyses of operational loads, linear analysis is adequate as it is usually
undesirable to have operational loads that can lead to nonlinear material behavior or large displacements.
For the simulation of extreme loads, such as crash loads and drop tests of electronic components, nonlinear
analysis is required.
TheFEMwasdevelopedinthe1950sintheaerospaceindustry.ThemajorplayerswereBoeingandBell
Aerospace (longvanished)inthe UnitedStates andRolls Royce inthe UnitedKingdom.M.J. Turner,R.W.
Clough, H.C. Martin and L.J. Topp published one of the ﬁrst papers that laid out the major ideas in 1956
Plate with a Hole 
Triangular Finite 
Element 
Refined Finite Element Model
Finite Element Model 
Figure 1.1
Geometry, loads and ﬁnite element meshes.
2
INTRODUCTION

(Turner et al., 1956). It established the procedures of element matrix assembly and element formulations
that you will learn in this book, but did not use the term ‘ﬁnite elements’. The second author of this paper,
Ray Clough, was a professor at Berkeley, who was at Boeing for a summer job. Subsequently, he wrote a
paper that ﬁrst used the term ‘ﬁnite elements’, and he was given much credit as one of the founders of the
method. Heworked on ﬁniteelements only fora few moreyears, and then turned to experimental methods,
buthisworkignitedatremendouseffortatBerkeley,ledbytheyoungerprofessors,primarilyE.Wilsonand
R.L. Taylor and graduate students such as T.J.R. Hughes, C. Felippa and K.J. Bathe, and Berkeley was the
centerofﬁniteelementresearchformanyyears.Thisresearchcoincidedwiththerapidgrowthofcomputer
power, and the method quickly became widely used in the nuclear power, defense, automotive and
aeronautics industries.
Much of the academic community ﬁrst viewed FEM very skeptically, and some of the most prestigious
journals refused to publish papers on FEM: the typical resistance of mankind (and particularly academic
communities) to the new. Nevertheless, several capable researchers recognized its potential early, most
notably O.C. Zienkiewicz and R.H. Gallagher (at Cornell). O.C. Zienkiewicz built a renowned group at
Swansea in Wales that included B. Irons, R. Owen and many others who pioneered concepts like the
isoparametric element and nonlinear analysis methods. Other important early contributors were J.H.
Argyris and J.T. Oden.
Subsequently, mathematicians discovered a 1943 paper by Courant (1943), in which he used triangular
elements with variational principles to solve vibration problems. Consequently, many mathematicians
have claimed that this was the original discovery of the method (though it is somewhat reminiscent of the
claim that the Vikings discovered America instead of Columbus). It is interesting that for many years
the FEM lacked a theoretical basis, i.e. there was no mathematical proof that ﬁnite element solutions
givethe right answer. In the late 1960s, the ﬁeld aroused the interest of manymathematicians, who showed
that for linear problems, such as the ones we will deal with in this book, ﬁnite element solutions converge
to the correct solution of the partial differential equation (provided that certain aspects of the problem are
sufﬁciently smooth). In other words, it has been shown that as the number of elements increases,
the solutions improve and tend in the limit to the exact solution of the partial differential equations.
E.Wilson developedoneoftheﬁrstﬁniteelementprogramsthatwaswidelyused.Its disseminationwas
hastened by the fact that it was ‘freeware’, which was very common in the early 1960s, as the commercial
value of software was not widely recognized at that time. The program was limited to two-dimensional
stressanalysis.Itwasusedandmodiﬁedbymanyacademicresearchgroupsandindustriallaboratoriesand
proved instrumental in demonstrating the power and versatility of ﬁnite elements to many users.
Thenin1965,NASAfundedaprojecttodevelopageneral-purposeﬁniteelementprogrambyagroupin
California led by Dick MacNeal. This program, which came to be known as NASTRAN, included a large
array of capabilities, such as two- and three-dimensional stress analyses, beam and shell elements, for
analyzingcomplexstructures,suchasairframes,andanalysisofvibrationsandtime-dependentresponseto
dynamic loads. NASA funded this project with $3 000 000 (like $30 000 000 today). The initial program
was put in the public domain, but it had many bugs. Shortly after the completion of the program, Dick
MacNeal and Bruce McCormick started a software ﬁrm that ﬁxed most of the bugs and marketed the
program to industry. By 1990, the program was the workhorse of most large industrial ﬁrms and the
company, MacNeal-Schwendler, was a $100 million company.
At about the same time, John Swanson developed a ﬁnite element program at Westinghouse Electric
Corp. for the analysis of nuclear reactors. In 1969, Swanson left Westinghouse to market a program called
ANSYS. The program had both linear and nonlinear capabilities, and it was soon widely adopted by many
companies. In 1996, ANSYS went public, and it now (in 2006) has a capitalization of $1.8 billion.
Another nonlinear software package of more recent vintage is LS-DYNA. This program was ﬁrst
developed at Livermore National Laboratory by John Hallquist. In 1989, John Hallquist left the
laboratory to found his own company, Livermore Software and Technology, which markets the
program. Intially, the program had nonlinear dynamic capabilities only, which were used primarily
for crashworthiness, sheet metal forming and prototype simulations such as drop tests. But Hallquist
BACKGROUND
3

quickly added a large range of capabilities, such as static analysis. By 2006, the company had almost
60 employees.
ABAQUS was developed by a company called HKS, which was founded in 1978. The program was
initially focused on nonlinear applications, but gradually linear capabilities were also added. The program
was widely used by researchers because HKS introduced gateways to the program, so that users could add
new material models and elements. In 2005, the company was sold to Dassault Systemes for $413 million.
As you can see, even a 5% holding in one of these companies provided a very nice nest egg. That is why
youngpeopleshouldalwaysconsiderstartingtheirowncompanies;generally,itismuchmorelucrativeand
exciting than working for a big corporation.
In many industrial projects, the ﬁnite element database becomes a key component of product develop-
ment because it is used for a large number of different analyses, although in many cases, the mesh has to be
tailoredforspeciﬁcapplications.TheﬁniteelementdatabaseinterfaceswiththeCADdatabaseandisoften
generated from the CAD database. Unfortunately, in today’s environment, the two are substantially
different. Therefore, ﬁnite element systems contain translators, which generate ﬁnite element meshes
from CAD databases; they can also generate ﬁnite element meshes from digitizations of surface data. The
need for two databases causes substantial headaches and is one of the major bottlenecks in computerized
analysis today, as often the two are not compatible.
Theavailabilityofawiderangeofanalysiscapabilitiesinoneprogrammakespossibleanalysesofmany
complexreal-lifeproblems.Forexample,theﬂowaroundacarandthroughtheenginecompartmentcanbe
obtained by a ﬂuid solver,called computational ﬂuid dynamics (CFD) solver. This enables the designers to
predict the drag factor and the lift of the shape and the ﬂow in the engine compartment. The ﬂow in the
engine compartment is then used as a basis for heat transfer calculations on the engine block and radiator.
These yield temperature distributions, which are combined with the loads, to obtain a stress analysis of the
engine.
Similarly, in the design of a computer or microdevice, the temperatures in the components can be
determined through a combination of ﬂuid analysis (for the air ﬂowing around the components) and heat
conduction analysis. The resulting temperatures can then be used to determine the stresses in the
components, such as at solder joints, that are crucial to the life of the component. The same ﬁnite element
model, with some modiﬁcations, can be used to determine the electromagnetic ﬁelds invarious situations.
These are of importance for assessing operability when the component is exposed to various electro-
magnetic ﬁelds.
In aircraft design, loads from CFD calculations and wind tunnel tests are used to predict loads on the
airframe. A ﬁnite element model is then used with thousands of load cases, which include loads invarious
maneuvers suchasbanking,landing,takeoffandsoon,todeterminethe stresses inthe airframe.Almostall
ofthesearelinear analyses; onlydetermining the ultimateloadcapacity ofanairframe requiresanonlinear
analysis. It isinteresting that inthe 1980s afamous professor predicted thatby 1990wind tunnels would be
used only to store computer output. He was wrong on two counts: Printed computer output almost
completely disappeared, but wind tunnels are still needed because turbulent ﬂow is so difﬁcult to compute
that complete reliance on computer simulation is not feasible.
Manufacturing processes are also simulated by ﬁnite elements. Thus, the solidiﬁcation of castings is
simulatedtoensuregoodqualityoftheproduct.Inthedesignofsheetmetalforapplicationssuchascarsand
washing machines, the forming process is simulated to insure that the part can be formed and to check that
after springback (when the part is released from the die) the part still conforms to speciﬁcations.
Similar procedures apply in most other industries. Indeed, it is amazing how the FEM has transformed
the engineering workplace in the past 40 years. In the 1960s, most engineering design departments
consisted of a room of 1.5 m  3 m tables on which engineers drew their design with T-squares and other
draftinginstruments.Stressesinthedesignwereestimatedbysimpleformulas,suchasthosethatyoulearn
in strength of materials for beam stretching, bending and torsion (these formulas are still useful,
particularly for checking ﬁnite element solutions, because if the ﬁnite element differs from these formulas
byan orderof magnitude,the ﬁnite elementsolutionisusuallywrong).Toverify thesoundness ofadesign,
4
INTRODUCTION

prototypes were made and tested. Of course, prototypes are still used today, but primarily in the last stages
ofadesign.Thus,FEAhasledtotremendousreductionsindesigncycletime,andeffectiveuseofthistoolis
crucial to remaining competitive in many industries.
A question that may occur to you is: Why has this tremendous change taken place? Undoubtedly, the
majorcontributorhasbeentheexponentialgrowthinthespeedofcomputersandtheevengreaterdeclinein
the cost of computational resources. Figure 1.2 shows the speed of computers, beginning with the ﬁrst
electronic computer, the ENIAC in 1945. Computer speed here is measured in megaﬂops, a rather archaic
term that means millionsofﬂoating point operations per second (in the 1960s, real number multiplies were
called ﬂoating point operations).
The ENIACwas developed in1945toprovideballistic tables. It occupied 1800 ft2and employed 17468
vacuum tubes. Yet its computational power was a small fraction of a $20 calculator. It was not until the
1960s that computers had sufﬁcient power to do reasonably sized ﬁnite element computations. For
example, the 1966 Control Data 6600, the most powerful computer of its time, could handle about
10 000 elements in several hours; today, a PC does this calculation in a matter of minutes. Not only
were these computers slow, but they also had very little memory: the CDC 6600 had 32k words of random
access memory, which had to accommodate the operating system, the compiler and the program.
As can be seen from Figure 1.2, the increase in computational power has been linear on a log scale,
indicating a geometric progression in speed. This geometric progression was ﬁrst publicized by Moore, a
founder of Intel, in the 1990s. He noticed that the number of transistors that could be packed on a chip, and
hence the speed of computers, doubled every 18 months. This came to be known as Moore’s law, and
remarkably, it still holds.
Fromthe chartyou canseethat the speedofcomputers has increased byabouteight orders ofmagnitude
inthelast40 years.However,theimprovementisevenmoredramaticifviewedintermsofcostininﬂation-
adjustedcurrency.ThiscanbeseenfromTable1.1,whichshowsthecostsofseveralcomputersin1968and
2005, along with the tuition at Northwestern, various salaries, the price of an average car and the price of a
ENIAC
Speed
Mflops
1950
10–6
10–4
10–2
102
104
106
1
1960
Year of introduction
1970
1980
1990
2000
IBM 704
CDC 6600
CRAY 1
CRAY C90
PC
ASCI
Figure 1.2
Historical evolution of speed of computers.
BACKGROUND
5

decentcar(inthebottomline).Itcanbeseenthatthepriceofcomputationalpowerhasdecreasedbyafactor
of over a hundred from 1968to 2006.During thattime, thevalue of our currency hasdiminished by afactor
of about 10, so the cost of computer power has decreased by a factor of a billion! Awidely circulated joke,
originated by Microsoft, was that if the automobile industry had made the same progress as the computer
industry over the past 40 years, a car would cost less than a penny. The auto industry countered that if
computer industry designed and manufactured cars, theywould lock up several times a day and you would
need to press start to stop the car (and many other ridiculous things). Nevertheless, electronic chips are an
area where tremendous improvements in price and performance have been made, and this has changed our
lives and engineering practice.
The price of ﬁnite element software has also decreased, but only a little. In the 1980s, the software fees
forcorporate use ofNASTRAN wereon the order of $200 000–1 000 000. Even a small ﬁrm would haveto
pay on the order of $100 000. Today, NASTRAN still costs about $65 000 per installation, the cost of
ABAQUSstartsat$10 000andLS-DYNAcosts$12 000.Fortunately,allofthesecompaniesmakestudent
versions available for much less. The student version of ABAQUS comes free with the purchase of this
book;auniversitylicenseforLS-DYNAcosts$500.Sotodayyoucansolveﬁniteelementproblemsaslarge
as those solved on supercomputers in the 1990s on your PC.
As people became aware of the rapidly increasing possibilities in engineering brought about by
computers in the 1980s, many fanciful predictions evolved. One common story on the West Coast was
that by the next century, in which we are now, when an engineer came to work he would don a headgear,
which would read his thoughts. He would then pick up his design assignment and picture the solution. The
computerwouldgenerateadatabaseandavisualdisplay,whichhewouldthenmodifywithafewstrokesof
hislaserpenandsomethoughts.Onceheconsideredthedesignvisuallysatisfactory,hewouldthenthinkof
‘FEM analysis’, which would lead the computer to generate a mesh and visual displays of the stresses. He
wouldthenmassagethedesigninafewplaces,withalaserpenorhismind,anddosomereanalysesuntilthe
design met the specs. Then he would push a button, and a prototype would drop out in front of him and he
could go surﬁng.
Well, this has not come to pass. In fact, making meshes consumes a signiﬁcant part of engineering time
today, and it is often tedious and causes many delays in the design process. But the quality of products that
can be designed with the help of CAD and FEM is quite amazing, and it can be done much quicker than
before.Thenextdecadewillprobablyseesomemajorchanges,andinviewofthehazardsofpredictions,we
will not make any, but undoubtedly FEM will play a role in your life whatever you do.
Table 1.1
Costs of some computers and costs of selected items for an
estimate of uninﬂated dollars (from Hughes–Belytschko Nonlinear FEM Short
Course).
Costs
1968
2005
CDC 6600 (0.5–1 Mﬂops)
$8 000 000
512 Beowulf cluster (2003) 1 Tﬂop
$500 000
Personal computer (200–1600 Mﬂops)
$500–3000
B.S. Engineer (starting salary, Mech Eng)
$9000
$51 000
Assistant Professor of
$11 000
$75 000
Engineering (9 mo start salary)
1 year tuition at Northwestern
$1800
$31 789
GM, Ford or Chrysler sedan
$3000
$22 000
Mercedes SL
$7000
$90–120 K
Decrease in real cost of computations
107 to 108
Someﬁguesareapproximate.
6
INTRODUCTION

1.2
APPLICATIONS OF FINITE ELEMENTS
In the following, we will give some examples of ﬁnite element applications. The range of applications of
ﬁnite elements is too large to list, but to provide an idea of its versatility we list the following:
a. stress and thermal analyses of industrial parts such as electronic chips, electric devices, valves, pipes,
pressure vessels, automotive engines and aircraft;
b. seismic analysis of dams, power plants, cities and high-rise buildings;
c. crash analysis of cars, trains and aircraft;
d. ﬂuid ﬂow analysis of coolant ponds, pollutants and contaminants, and air in ventilation systems;
e. electromagnetic analysis of antennas, transistors and aircraft signatures;
f.
analysis of surgical procedures such as plastic surgery, jaw reconstruction, correction of scoliosis and
many others.
This is a very short list that is just intended to give you an idea of the breadth of application areas for the
method. New areas of application are constantly emerging. Thus, in the past few years, the medial
community has become very excited with the possibilities of predictive, patient-speciﬁc medicine.
One approach in predictive medicine aims to use medical imaging and monitoring data to construct a
model of a part of an individual’s anatomy and physiology. The model is then used to predict the patient’s
response to alternative treatments, such as surgical procedures. For example, Figure 1.3(a) shows a hand
wound and a ﬁnite element model. The ﬁnite element model can be used to plan the surgical procedure to
optimize the stitches.
Heartmodels,suchasshowninFigure1.3(b),arestillprimarilytopicsofresearch,butitisenvisagedthat
they will be used to designvalve replacements and many other surgical procedures. Another area in which
ﬁnite elements have been used for a long time is in the design of prosthesis, such as shown in Figure 1.3(c).
Most prosthesis designs are still generic, i.e. a single prosthesis is designed for all patients with some
variations in sizes. However, with predictive medicine, it will be possible to analyze characteristics of a
particular patient such as gait, bone structure and musculature and custom-design an optimal prosthesis.
FEA of structural components has substantially reduced design cycle times and enhanced overall
product quality. For example inthe autoindustry, linear FEAisused foracoustic analysis to reduce interior
noise, for analysis of vibrations, for improving comfort, for optimizing the stiffness of the chassis and for
increasingthefatiguelifeofsuspensioncomponents,designoftheenginesothattemperaturesandstresses
are acceptable, and many other tasks. We have already mentioned CFD analyses of the body and engine
Figure 1.3
Applications in predictive medicine. (a) Overlying mesh of a hand model near the wound.1 (b) Cross-
section of a heart model.2 (c) Portion of hip replacement: physical object and ﬁnite element model.3
1With permission from Mimic Technologies.
2Courtesy of Chandrajit Bajaj, University of Texas at Austin.
APPLICATIONS OF FINITE ELEMENTS
7

compartmentspreviously.TheFEMsusedintheseanalysesareexactlyliketheonesdescribedinthisbook.
Nonlinear FEA is used for crash analysis with bothmodels ofthe car and occupants; a ﬁniteelement model
for crash analysis is shown in Figure 1.4(a) and a ﬁnite element model for stiffness prediction is shown in
Figure1.4(c).Noticethetremendousdetailinthelatter;thesemodelsstillrequirehundredsofman-hoursto
develop.The payoffforsuch amodelingisthatthe number ofprototypesrequired inthedesignprocess can
be reduced signiﬁcantly.
Figure1.4(b)showsaﬁniteelementmodelofanaircraft.Inthedesignofaircraft,itisimperativethatthe
stresses incurred from thousands of loads, some very rare, some repetitive, do not lead to catastrophic
failure or fatigue failure. Prior to the availability of FEA, such a design relied heavily on an evolutionary
Figure 1.4
Application to aircraft design and vehicle crash safety: (a) ﬁnite element model of Ford Taurus crash;3 (b)
ﬁnite element model of C-130 fuselage, empennage and center wing4 and (c) ﬂow around a car.5
Figure 1.5
Dispersion of chemical and biological agents in Atlanta. The red and blue colors represent the highest and
lowest levels of contaminant concentration.6
3Courtesy of the Engineering Directorate, Lawrence Livermore National Laboratory.
4Courtesy of Mercer Engineering Research Center.
5Courtesy of Mark Shephard, Rensselaer.
6Courtesy of Shahrouz Aliabadi.
8
INTRODUCTION

process (basing new designs on old designs), as tests for all of the loads are not practical. With FEA, it has
become possible to make much larger changes in airframe design, such as the shift to composites.
In a completely different vein, ﬁnite elements also play a large role in environmental decision making
andhazardmitigation.Forexample,Figure1.5isavisualizationofthedispersalofachemicalaerosolinthe
middle of Atlanta obtained by FEA; the aerosol concentration is depicted by color, with the highest
concentration in red. Note that the complex topography of this area due the high-rise buildings, which is
crucial to determining the dispersal, can be treated in great detail by this analysis. Other areas of hazard
mitigation in which FEA offers great possibilities are the modeling of earthquakes and seismic building
response, which is being used to improve their seismic resistance, the modeling of wind effects on
structures and the dispersal of heat from power plant discharges. The latter, as the aerosol dispersal,
involvestheadvection–diffusionequation,whichisoneofthetopicsofthisbook.Theadvection–diffusion
equation can also be used to model drug dispersal in the human body. Of course, the application of these
equationstothese differenttopicsinvolvesextensivemodeling,whichisthevalueaddedbyengineerswith
experience and knowledge, and constitutes the topic of validation, which is treated in Chapters 8 and 9.
Matrix Algebra and Computer Programs
It is highly recommended that students familiarize themselveswith matrix algebra and programming prior
to proceeding with the book. An introduction to matrix algebra and applications in MATLAB is given in a
Web chapter (Chapter 12) which is available on www.wileyeurope/college/Fish.
This webpage also includes the MATLAB programs which are referred to in this book and other
MATLAB programs for ﬁnite element analysis. We have chosen to use a web chapter for this material to
provide an option for updating this material as MATLAB and the programs change. We invite readers who
develop other ﬁnite element programs in MATLAB to contact the ﬁrst author (Jacob Fish) about including
their programs. We have also created a blog where students and instructors can exchange ideas and place
alternative ﬁnite element programs. This forum is hosted at http://1coursefem.blogspot.com/
REFERENCES
Courant, R. (1943) Variational methods for the solution of problems of equilibrium and vibrations. Bull. Am. Math.
Soc., 42, 2165–86.
Mackerle, J. Linko¨ping Institute of Technology, S-581 83 Linko¨ping, Sweden, http://ohio.ikp.liu.se/fe
Noor, A.K. (1991) Bibliography of books and monographs on ﬁnite element technology. Appl. Mech. Rev., 44 (8),
307–17.
Turner, M.J., Clough, R.W., Martin, H.C. and Topp, L.J. (1956) Stiffness and deﬂection analysis of complex
structures. J. Aeronaut. Sci., 23, 805–23.
REFERENCES
9


2
Direct Approach for
Discrete Systems
The ﬁnite element method (FEM) consists of the following ﬁve steps:
1. Preprocessing: subdividing the problem domain into ﬁnite elements.
2. Element formulation: development of equations for elements.
3. Assembly: obtaining the equations of the entire system from the equations of individual elements.
4. Solving the equations.
5. Postprocessing: determining quantities of interest, such as stresses and strains, and obtaining visua-
lizations of the response.
Step 1, the subdivision of the problem domain into ﬁnite elements in today’s computer aided engineering
(CAE)environment,isperformedbyautomaticmeshgenerators.Fortrussproblems,suchastheoneshown
inFigure2.1,eachtrussmemberisrepresentedbyaﬁniteelement.Step2,thedescriptionofthebehaviorof
each element, generally requires the development of the partial differential equations for the problem and
its weak form. This will be the main focus of subsequent chapters. However, in simple situations, such as
systems of springs or trusses, it is possible to describe the behavior of an element directly, without
considering a governing partial differential equation or its weak form.
In this chapter, we focus on step 3, how to combine the equations that govern individual elements to
obtain the equations of the system. The element equations are expressed in matrix form. Prior to that, we
develop some simple ﬁnite element matrices for spring assemblages and trusses, step 2. We also introduce
the procedures for the postprocessing of results.
2.1
DESCRIBING THE BEHAVIOR OF A SINGLE BAR ELEMENT
A truss structure, such as the one shown in Figure 2.1, consists of a collection of slender elements, often
called bars. Bar elements are assumed to be sufﬁciently thin so that they have negligible resistance to
torsion, bending or shear, and consequently, the bending, shear and torsional forces are assumed to vanish.
The only internal forces of consequence in such elements are axial internal forces, so their behavior is
similartothatofsprings.SomeofthebarelementsinFigure2.1arealignedhorizontally,whereasothersare
positioned at an arbitrary angle  as shown in Figure 2.2(b). In this section, we show how to relate nodal
internalforcesactingatthenodestothecorrespondingnodaldisplacements,whicharedenotedbyðFe
1; Fe
2Þ
and ðue
1; ue
2Þ, respectively, for the bar in one dimension as shown in Figure 2.2(a). In two dimensions, the
nodal forces of an element are ðFe
1x; Fe
1y; Fe
2x; Fe
2yÞ and the nodal displacements are ðue
1x; ue
1y; ue
2x; ue
2yÞ.
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

Notation. Throughout this textbook, the following notation is used. Element numbers are denoted by
superscripts. Node numbers are denoted by subscripts; when the variable is a vector with components, the
component is given after the node number. When the variable has an element superscript, then the node
number is a local number; otherwise, it is a global node number. The distinction between local and global
node numbers will be described later in this section. For instance, uð5Þ
2y is the y-component of the
displacement at node 2 ofelement 5. Wewill start by considering a horizontally alignedelement in Section
2.1. Two-dimensional problems will be considered in Section 2.4.
Consider a bar element positioned along the x-axis as shown in Figure 2.2(a). The shape of the cross
section is quite arbitrary as shown in Figure 2.3. In this chapter, we assume that the bar is straight, its
materialobeysHooke’slawandthatitcansupportonlyaxialloading,i.e.itdoesnottransmitbending,shear
ortorsion.Young’smodulus ofelementeisdenotedbyEe,itscross-sectionalarea byAe anditslengthby le.
Because of the assumptions on the forces in the element, the only nonzero internal force is an axial
internal force, which is collinear with the axis along the bar. The internal force across any cross section of
the bar is denoted by pe. The axial stress is assumed to be constant in the cross section and is given by the
internal force divided by the cross-sectional area:
e ¼ pe
Ae :
ð2:1Þ
The axial force and the stress are positive in tension and negative in compression.
The following equations govern the behavior of the bar:
1. Equilibrium of the element, i.e. the sum of the nodal internal forces acting on the element is equal to
zero:
Fe
1 þ Fe
2 ¼ 0:
ð2:2Þ
Figure 2.1
A bridge truss.
e
1
2
e
1
2
e
x
2
2
,
e
e
F
u
1
1
,
e
e
F
u
1
1
,
e
e
x
x
F
u
1
1
,
e
e
y
y
F
u
2
2
,
e
e
x
x
F
u
2
2
,
e
e
y
y
F
u
(a)
(b)
Figure 2.2
Various conﬁgurations of bar elements: (a) horizontally aligned bar and (b) bar element positioned at an
arbitrary angle in two dimensions (see Section 2.4).
12
DIRECT APPROACH FOR DISCRETE SYSTEMS

2. Theelasticstress–strainlaw,knownasHooke’slaw,whichstatesthatthestresse isalinearfunctionof
the strain ee:
e ¼ Eeee:
ð2:3Þ
3. The deformation of the structure must be compatible, i.e. no gaps or overlaps can develop in the
structure after deformation.
It is important to recognize the difference between the sign convention for the internal axial force (and
the stress) and that for the nodal internal forces. The internal force pe is positive in tension and negative in
compression, i.e. pe is positive when it points out from the surface on which it is acting; the nodal internal
forces are positive when they point in the positive x-direction and are not associated with surfaces, see
Figure 2.4.
Wewill also needa deﬁnition ofstrain inorder to applyHooke’s law.The onlynonzerostrain isthe axial
strain ee, which is deﬁned as the ratio of the elongation e to the original element length:
ee ¼ e
le :
ð2:4Þ
We will now develop the element stiffness matrix, which relates the element internal nodal forces to
the element nodal displacements. The element internal force matrix is denoted by Fe and element
displacement matrix by de. For this two-node element, these matrices are given by
Fe ¼
Fe
1
Fe
2


;
de ¼
ue
1
ue
2


:
Figure 2.3
Examples of cross sections of a bar element.
1 
2
e
new
l
 
el
1
e
F
2
e
F
 
e
p
e
p
1
e
u
 
2
e
u
Figure 2.4
Elongation of an element and free-body diagrams, showing the positive sense of pe and Fe
I .
DESCRIBING THE BEHAVIOR OF A SINGLE BAR ELEMENT
13

Theelement stiffness matrixKe thatrelatesthese matrices willnowbedeveloped. Thematrix isderivedby
applying Hooke’s law, strain–displacement equations and equilibrium:
Fe
2 ¼ pe ¼ Aee
definition of stress ðEquation ð2:1ÞÞ
¼ AeEeee
Hooke0s law ðEquation ð2:3ÞÞ
¼ AeEe e
‘e
definition of strain ðEquation ð2:4ÞÞ:
ð2:5Þ
The elongation of an element can be expressed in terms of the nodal displacements (see Figure 2.4) by
e ¼ ue
2  ue
1;
ð2:6Þ
which is obtained as follows: le
new ¼ le þ ue
2  ue
1, so from e ¼ le
new  le, (2.6) follows.
Note that when ue
1 ¼ ue
2, which is rigid body translation, the elongationvanishes. Substituting (2.6) into
(2.5) gives
Fe
2 ¼ keðue
2  ue
1Þ;
ð2:7Þ
where ke is given by
ke ¼ AeEe
le
:
ð2:8Þ
From equilibrium of the bar element (2.2) and (2.7), it follows that
Fe
1 ¼ Fe
2 ¼ keðue
1  ue
2Þ:
ð2:9Þ
Equations (2.7) and (2.9) can be written in the matrix form as
Fe
1
Fe
2


|ﬄﬄ{zﬄﬄ}
Fe
¼
ke
ke
ke
ke


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Ke
ue
1
ue
2


|ﬄﬄ{zﬄﬄ}
de
:
ð2:10Þ
Using the underscored deﬁnitions, we can write the relation between the nodal forces and nodal
displacements as
Fe ¼ Kede;
where
Ke ¼
ke
ke
ke
ke


¼ AeEe
le
1
1
1
1


:
ð2:11Þ
In the above, Ke is the element stiffness matrix. We can use this element stiffness for any constant area bar
element in one dimension. This universality of element stiffness matrices is one of the attributes of FEM
that leads to its versatility: for any bar element with constant area Ae in one dimension, Equation (2.11)
gives the stiffness matrix. We will later develop element matrices that apply to any triangular element or
quadrilateral element based on the weak solution of differential equations rather than on physical
arguments.
Equation (2.10)describesthe relationshipbetween nodalforcesanddisplacementsforasingleelement,
i.e. it describes the behavior of an element. Note that this is a linear relationship: The nodal forces are
linearlyrelated tothe nodaldisplacements. Thislinearity stemsfromthe linearity ofallthe ingredientsthat
describethiselement’sbehavior:Hooke’slaw,thelinearitybetweenaxialforceandstress,andthelinearity
of the expression for the strain.
An important characteristic of the element stiffness matrix is that it is symmetric, i.e. Ke ¼ KeT.
14
DIRECT APPROACH FOR DISCRETE SYSTEMS

2.2
EQUATIONS FOR A SYSTEM
The objective of this section is to describe the development of the equations for the complete system from
element stiffness matrices. We will introduce the scatter and assembly operations that are used for this
purpose. These are used throughout the FEM in even the most complex problems, so mastering these
procedures is essential to learning the FEM.
Wewilldescribetheprocessofdevelopingtheseequationsbyanexample.Forthispurpose,considerthe
two-barsystemshowninFigure2.5,whichalsogivesthematerialproperties,loadsandsupportconditions.
At a support, the displacement is a given value; we will specify it later. Nodal displacements and nodal
forces are positive in the positive x-direction.
TheﬁrststepinapplyingtheFEMistodividethestructureintoelements.Theselectionandgenerationof
ameshforﬁniteelementmodelsisanextensivetopicthatwewilldiscussinsubsequentchapters.Inthecase
of a discrete structure such as this, it is necessary only to put nodes wherever loads are applied and at points
where the section properties or material properties change, so the ﬁnite element mesh consisting of two
elements shown in Figure 2.5(b) is adequate.
The elements are numbered 1 and 2, and the nodes are numbered 1 to 3; neither the nodes nor the
elements need to be numbered in a speciﬁc order in FEM. We will comment about node numbering in
Section 2.2.2. At each node, either the external forces or the nodal displacements are known, but not both;
for example, at node 1 the displacement u1 ¼ u1 is prescribed, therefore the force to be subsequently
referred toas reaction r1 is unknown. Atnodes 2 and3 the externalforcesf2 andf3 are known,and therefore
the displacements u2 and u3 are unknown.
ForeachbarelementshowninFigure2.6,thenodalinternalforcesarerelatedtothenodaldisplacements
by the stiffness matrix given in Equation (2.11).
The stiffness equations of the elements, derived in Section 2.1.1, are repeated here for convenience
(e ¼ 1; 2):
Fe ¼ Kede
or
Fe
1
Fe
2


¼
ke
ke
ke
ke

 ue
1
ue
2


:
ð2:12Þ
(1)
E
,
(1)
A
(2)
l
3f ,
3
u
1
2
3
(a)
(b)
2f ,
2
u
1r ,
1
u
(1)
l
(2)
E
,
(2)
A
(2)
(1)
x
3f
2f
Figure 2.5
(a) Two-element bar structure and (b) the ﬁnite element model (element numbers are denoted in
parenthesis).
(1)
1F
,
(1)
1u
(1)
2
F
,
(1)
2u
(2)
1F
,
(2)
1u
(2)
2
F
,
(2)
2u
Figure 2.6
Splitting the structure in ﬁgure 2.5 into two elements.
EQUATIONS FOR A SYSTEM
15

The global system equations will be constructed by enforcing compatibility between the elements and
nodal equilibrium conditions.
To develop the system equations, we will write the equilibrium equations for the three nodes. For this
purpose,weconstructfree-bodydiagramsofthenodesasshowninFigure2.7(c).Notethattheforcesonthe
elements are equal and opposite to the corresponding forces on the nodes by Newton’s third law.
0
Fð1Þ
2
Fð1Þ
1
2
64
3
75
|ﬄﬄﬄﬄ{zﬄﬄﬄﬄ}
~F
ð1Þ
þ
Fð2Þ
2
Fð2Þ
1
0
2
664
3
775
|ﬄﬄﬄﬄ{zﬄﬄﬄﬄ}
~F
ð2Þ
¼
r1
f2
f3
2
64
3
75 ¼
0
f2
f3
2
64
3
75
|ﬄﬄ{zﬄﬄ}
f
þ
r1
0
0
2
64
3
75
|ﬄﬄ{zﬄﬄ}
r
:
ð2:13Þ
Each row of the above matrix equation is an equilibrium equation at a node. On the right-hand side are the
applied external forces and reactions, which are arranged in matrices f and r, respectively. The matrix f
consists of the prescribed (known) external forces at the nodes, f2 and f3; the matrix r consists of the
unknown force at node 1, denoted by r1.
The above equation may be summarized in words as follows: The sum of the internal element forces is
equal to that of the external forces and reactions. This differs somewhat from the well-known equilibrium
condition that the sum of forces on any point must vanish. The reason for the difference is that the element
nodalforces,whicharetheforcesthatappearintheelementstiffnessmatrix,actontheelements.Theforces
exerted by the elements on the nodes are equal and opposite.
Notice that the element forces are labeled with subscripts 1 and 2; these are the local node numbers. The
nodes of the mesh are the global node numbers. The local node numbers of a bar element are always
numbered 1, 2 inthe positivex-direction. Theglobal node numbers are arbitrary. Theglobal and local node
numbers for this example are shown in Figure 2.7(a) and (b), respectively.
We will now use the element stiffness equations to express the element internal nodal forces (LHS in
(2.13)), in terms of the global nodal displacements of the element.
For element 1, the global node numbers are 2 and 3, and the stiffness equation (2.12) gives
Fð1Þ
1
Fð1Þ
2
"
#
¼
kð1Þ
kð1Þ
kð1Þ
kð1Þ
"
#
u3
u2


:
ð2:14Þ
Notice that we have replaced the nodal displacements by the global nodal displacements. This enforces
compatibility as it ensures that the displacements of elements at common nodes are identical.
3
(1)
1
F
(1)
2
F
(2)
1
F
(2)
2
F
2
1
3
2
1
(1)
1F
(1)
2
F
(2)
1F
(2)
2
F
3
2
1
(a)
(b)
(c)
1 
1 
2 
2 
x
f
f
f
f
r
r
Figure 2.7
Free-body diagrams of the nodes and elements (external forces are shown above the nodes but act in the
sameline): (a) completesystem withglobalnode numbers;(b)free-bodydiagramsofelements withlocalnode numbers
and (c) free-body diagrams of nodes.
16
DIRECT APPROACH FOR DISCRETE SYSTEMS

For element 2, the global node numbers are 1 and 2, and the stiffness equation (2.12) gives
Fð2Þ
1
Fð2Þ
2
"
#
¼
"
kð2Þ
kð2Þ
kð2Þ
kð2Þ
#
u2
u1


:
ð2:15Þ
The above expressions for the internal nodal forces cannot be substituted directly into the left-hand side
of (2.13) because the matrices are not of the same size. Therefore, we augment the internal forces matrices
in (2.14) and (2.15) by adding zeros; we similarly augment the displacement matrices. The terms of
the element stiffness matrices in (2.14) and (2.15) are rearranged into larger augmented element stiffness
matrices and zeros are added where these elements have no effect. The results are
0
Fð1Þ
2
Fð1Þ
1
2
4
3
5
|ﬄﬄﬄﬄ{zﬄﬄﬄﬄ}
~F
ð1Þ
¼
0
0
0
0
kð1Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~K
ð1Þ
u1
u2
u3
2
4
3
5
|ﬄﬄ{zﬄﬄ}
d
or
~F
ð1Þ ¼ ~K
ð1Þd:
ð2:16Þ
Note that we have added a row of zeros in row 1 corresponding to the force at node 1, as element 1 exerts no
force on node 1, and a column of zeros in column 1, as the nodal displacement at node 1 does not affect
element 1 directly. Similarly, an augmented equation for element 2 is
Fð2Þ
2
Fð2Þ
1
0
2
664
3
775
|ﬄﬄﬄﬄ{zﬄﬄﬄﬄ}
~F
ð2Þ
¼
kð2Þ
kð2Þ
0
kð2Þ
kð2Þ
0
0
0
0
2
64
3
75
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~K
ð2Þ
u1
u2
u3
2
64
3
75
|ﬄﬄ{zﬄﬄ}
d
or
~F
ð2Þ ¼ ~K
ð2Þd:
ð2:17Þ
The matrices in the above equations are now of the same size as in (2.13) and we can substitute (2.16) and
(2.17) into (2.13) to obtain
0
0
0
0
kð1Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~K
ð1Þ
u1
u2
u3
2
4
3
5
|ﬄﬄ{zﬄﬄ}
d
þ
kð2Þ
kð2Þ
0
kð2Þ
kð2Þ
0
0
0
0
2
4
3
5
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~K
ð2Þ
u1
u2
u3
2
4
3
5
|ﬄﬄ{zﬄﬄ}
d
¼
0
f2
f3
2
4
3
5
|ﬄﬄ{zﬄﬄ}
f
þ
r1
0
0
2
4
3
5
|ﬄﬄ{zﬄﬄ}
r
;
or in the matrix form
ð~K
ð1Þ þ ~K
ð2ÞÞd ¼ f þ r:
ð2:18Þ
The above are the assembled stiffness equations and the variable within the parentheses is the assembled
stiffness matrix, which in this case is given by
K ¼
X
2
e¼1
~Ke ¼
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5:
ð2:19Þ
The stiffness matrix K is singular, as can readily be seen by checking the determinant. To obtain a solvable
system, the boundary conditions must be prescribed.
We will now summarize what we have done to obtain the global stiffness matrix. First, we scattered the
terms in an element stiffness into larger matrices of the same order as the global stiffness according to the
EQUATIONS FOR A SYSTEM
17

global node numbers. Then, we added these augmented stiffnesses to obtain the global stiffness matrix.
Thus, the process of obtaining the global stiffness matrix consists of matrix scatter and add. This is
summarized in Table 2.1.
We can bypass the addition of zeros and assemble the matrix directly by just adding the terms in the
elementstiffnessaccordingtotheirglobalnodenumbersasshowninTable2.1.Thisprocessiscalleddirect
assembly. The result is equivalent to the result from the matrix scatter and add. Assembling of the stiffness
matrix in computer programs is done by direct assembly, butthe concept of matrix scatter and add is useful
in that it explains how compatibility and equilibrium are enforced at the global level.
2.2.1
Equations for Assembly
We next develop the assembly procedures in terms of equations. In this approach, compatibility between
elements is enforced by relating the element nodal displacements to the global displacement
Table 2.1
Matrix scatter and add and direct assembly.
Matrix scatter and add
Element 1 scatter, global nodes 3 and 2
Kð1Þ ¼
kð1Þ
kð1Þ
kð1Þ
kð1Þ


) ~K
ð1Þ ¼
0
0
0
0
kð1Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
Element 2 scatter, global nodes 2 and 1
Kð2Þ ¼
kð2Þ
kð2Þ
kð2Þ
kð2Þ


) ~K
ð2Þ ¼
kð2Þ
kð2Þ
0
kð2Þ
kð2Þ
0
0
0
0
2
4
3
5
Add matrices
K ¼
X
2
e¼1
~Ke ¼
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
Direct assembly
Kð1Þ ¼
kð1Þ
kð1Þ
kð1Þ
kð1Þ
"
#
½3
½2
½3
½2
K ¼
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
64
3
75
½1
½2
½3
½1
½2
½3
Kð2Þ ¼
kð2Þ
kð2Þ
kð2Þ
kð2Þ
"
#
½2
½1
½2
½1
18
DIRECT APPROACH FOR DISCRETE SYSTEMS

matrix d ¼ ½ u1
u2
u3 T by equations. These equations are written as follows:
dð1Þ ¼
uð1Þ
1
uð1Þ
2
"
#
¼
0
0
1
0
1
0


|ﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄ}
Lð1Þ
u1
u2
u3
2
4
3
5 ¼ Lð1Þd;
dð2Þ ¼
uð2Þ
1
uð2Þ
2
"
#
¼
0
1
0
1
0
0


|ﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄ}
Lð2Þ
u1
u2
u3
2
4
3
5 ¼ Lð2Þd;
ð2:20Þ
or in general
de ¼ Led:
ð2:21Þ
ThematricesLe arecalledthegathermatrices.Thenamegatheroriginatesfromthefactthatthesematrices
gather the nodal displacements of each element from the global matrix. Note that these equations state that
the element displacement at a node is the same as the corresponding global displacement, which is
equivalent to enforcing compatibility.
Thematrices Le areBooleanmatrices thatconsiststrictlyofonesandzeros.Theyplayanimportantrole
in developing matrix expressions relating element to global matrices.
Using (2.11), the element equations can be written as
KeLed ¼ Fe:
ð2:22Þ
Compatibility is automatically enforced by Equation (2.20).
It can be observed that the ﬁrst term on the left-hand side of (2.13) can be expressed as
0
Fð1Þ
2
Fð1Þ
1
2
64
3
75 ¼
0
0
0
1
1
0
2
64
3
75
Fð1Þ
1
Fð1Þ
2
"
#
¼ Lð1ÞTFð1Þ;
whereas the second term on the left-hand side of (2.13) is equal to
Fð2Þ
2
Fð2Þ
1
0
2
664
3
775 ¼
0
1
1
0
0
0
2
64
3
75
Fð2Þ
1
Fð2Þ
2
"
#
¼ Lð2ÞTFð2Þ:
NotethatðLeÞT scattersthenodalforcesintotheglobalmatrix.Substitutingtheabovetwoequationsinto
(2.13) gives
X
2
e¼1
LeTFe ¼ f þ r:
ð2:23Þ
Althoughwehaveshowntherelationbetweeninternal,externalforcesandreactionsforaspeciﬁcexample,
(2.23) always holds. The general relation is derived in Section 2.5.
In order to eliminate the unknown internal element forces from Equation (2.22), we premultiply (2.22)
by LeT and then add them together. Thus, premultiplying the element equations (2.22) by LeT
yields
LeTKeLed ¼ LeTFe;
e ¼ 1; 2:
EQUATIONS FOR A SYSTEM
19

We now deﬁne the system of equations for the entire system. By adding the element equations (e ¼ 1; 2),
we get
Kd ¼ f þ r;
ð2:24Þ
where K is called the global stiffness matrix and is given by
K ¼
X
nel
e¼1
LeTKeLe
ð2:25Þ
where nel is the number of elements; in this case nel ¼ 2. The above gives the assembly procedure in terms
of an equation. It is equivalent to direct assembly and matrix scatter and add. Whenever this equation
appears, it indicates assembly of the element matrices into the global matrix (forgeneral meshes, the range
of e will be 1 to nel) . By comparison with (2.19), we can see that
~K
e ¼ LeTKeLe:
ð2:26Þ
So the stiffness matrix scatter corresponds to pre- and postmultiplications of Ke by LeT and Le,
respectively.
Substituting the expressions of the element stiffness matrices (2.12) into (2.24) and using (2.25) gives
the global equation
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
r1
f2
f3
2
4
3
5:
ð2:27Þ
The above system of three equations can be solved for the three unknowns u2 , u3 and r1 as described in the
next section.
2.2.2
Boundary Conditions and System Solution
We now proceed with the process of solving the global system of equations. For the purpose of discussion,
we consider prescribed displacement u1 ¼ 4=kð2Þ at node 1 and externalforces f2 ¼ 4 and f3 ¼ 10 acting
at nodes 2 and 3 as shown in Figure 2.8.
The global system of equations (2.27) is then:
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
r1
4
10
2
4
3
5:
ð2:28Þ
Thereare severalways ofmodifyingtheaboveequationstoimposethedisplacementboundaryconditions.
In the ﬁrst method, the global system is partitioned based on whether or not the displacement at the node is
prescribed. We partition the system of equations into E-nodes and F-nodes. The E-nodes are those where
the nodal displacements are known (E stands for essential, the meaning of this will become clear in later
chapters),whereasF-nodesarethosewherethedisplacementsareunknown;(orfree).ThesubscriptsEand
3
10
=
2
4
= −
3
2
1
1
(2)
4
=
(1)
(2)
(2)
(1)
1
f
k
k
k
r
u
f
Figure 2.8
Two-element truss structure with applied external forces and boundary conditions.
20
DIRECT APPROACH FOR DISCRETE SYSTEMS

F in the global displacement matrix, d ¼
dE
dF


, the global force matrix, f ¼
fE
fF


and reaction matrix,
r ¼
rE
rF


denote the corresponding blocks; rF ¼ 0 because there are no reactions on free nodes; the
external forces in this chapter corresponding to E-nodes are assumed to vanish, fE ¼ 0 .
For convenience, when solving the equations either manually or by utilizing the MATLAB program
(Chapter 12),the E-nodes are numbered ﬁrst. In general, the optimal numbering is based on computational
efﬁciency considerations.
The system equation (2.28) is then partitioned as follows:
kð2Þ
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
r1
4
10
2
4
3
5
or
KE
KEF
KT
EF
KF

 dE
dF


¼
rE
fF

;

ð2:29Þ
where
KE ¼ ½kð2Þ;
KEF ¼ ½kð2Þ 0;
KF ¼
kð1Þ þ kð2Þ
kð1Þ
kð1Þ
kð1Þ
"
#
;
rE ¼ ½r1;
dE ¼ ½u1 ¼ ½4=kð2Þ;
fF ¼
4
10


;
dF ¼
u2
u3


:
TheunknownsintheabovesystemofequationsaredF andrE,whereas dE ,fF,kð1Þ andkð2Þ areknown.Ifwe
write the second row of Equation (2.29), we have
KT
EFdE þ KFdF ¼ fF:
If we subtract the ﬁrst term from both sides of the above equation and premultiply by K1
F , we obtain
dF ¼ K1
F ðfF  KT
EFdEÞ:
ð2:30Þ
This equation enables us to obtain the unknown nodal displacements. The partitioning approach also
enables us to obtain the reaction force, rE. Writing the ﬁrst row of (2.29) gives
rE ¼ KEdE þ KEFdF:
ð2:31Þ
AsdF isknownfromEquation(2.30),wecanevaluatetheright-handsideoftheaboveequationtoobtainthe
reactions rE.
For the two-bar problem, the solution of the unknown displacements by Equation (2.30) using (2.29)
gives
u2
u3


¼
kð1Þ þ kð2Þ
kð1Þ
kð1Þ
kð1Þ

1
4
10



kð2Þ
0


½4=kð2Þ


;
which yields
u2 ¼ 10
kð2Þ ;
u3 ¼ 10
1
kð1Þ þ 1
kð2Þ


:
--------------------------------------------
-----------
EQUATIONS FOR A SYSTEM
21

The reaction force is found from Equation (2.31) and is given by
r1 ¼ 6:
It can be shown that KF is positive deﬁnite (see Problem 12.3 in Chapter 12).
The second method for imposing the displacement boundary conditions is to replace the equations
corresponding to prescribed displacements by trivial equations that set the nodal displacements to their
correct value, orin manual computations, todrop them altogether.Weput the product ofthe ﬁrst column of
K and u1 on the right-hand side and replace the ﬁrst equation by u1 ¼ u1 . This gives
1
0
0
0
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
u1
4  ðkð2ÞÞu1
10  ð0Þu1
2
4
3
5:
ð2:32Þ
Again, it can be seen that the above equations can be solved manually by just considering the last two
equations.
The reactions can then be computed by evaluating the rows of the total stiffness equations that give the
reactions. From row 1 of Equation (2.29), we obtain
r1 ¼ kð2Þ kð2Þ 0
h
i
u1
u2
u3
2
4
3
5 ¼ 6:
The third method for imposing the boundary conditions is the penalty method. This is a very simple
method to program, but should be used for matrices of moderate size (up to about 10 000 unknowns) only
becauseittendstodecreasetheconditioningoftheequations(seeSaad(1996)andGeorgeandLiu(1986)).
In this method, the prescribed displacements are imposed by putting a very large number in the entry
corresponding to the prescribed displacement. Thus, for the example we have just considered, we change
the equations to
b
kð2Þ
0
kð2Þ
kð1Þ þ kð2Þ
kð1Þ
0
kð1Þ
kð1Þ
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
bu1
4
10
2
4
3
5;
ð2:33Þ
where b is a very large number. For example, in a computer with eight digits of precision, we make
b  107 average ðKiiÞ . The other terms in row 1 and column 1 then become irrelevant because they are
much smaller than the ﬁrst diagonal term, and the equations are almost identical to those of (2.32).
Themethodcanphysicallybeexplainedinstressanalysisasconnectingaverystiffspringbetweennode
1andthesupport,whichisdisplacedbyu1.Thestiffspringthenforcesnode1tomovewiththesupport.The
penalty method is most easily understood when u1 ¼ 0 ; then it corresponds to a stiff spring linked to the
stationary support and the displacement of the node 1 is very small. The reactions can be evaluated as was
done for the previous method. We will elaborate on the penalty method in Chapters 3 and 5.
Example 2.1
Three bars are joined as shown in Figure 2.9. The left and right ends are both constrained, i.e. prescribed
displacement is zero at both ends. There is a force of 5 N acting on the middle node. The nodes are
numbered starting with the nodes where displacements are prescribed.
22
DIRECT APPROACH FOR DISCRETE SYSTEMS

The element stiffness matrices are
Kð1Þ ¼
½1
½3
kð1Þ
kð1Þ
kð1Þ
kð1Þ


½1
½3 ; Kð2Þ ¼
½1
½3
kð2Þ
kð2Þ
kð2Þ
kð2Þ


½1
½3 ;
Kð3Þ ¼
½3
½2
kð3Þ
kð3Þ
kð3Þ
kð3Þ


wheretheglobalnumberscorrespondingtotheelementnodesareindicatedaboveeachcolumnandtothe
right of each row.
By direct assembly, the global stiffness matrix is
K ¼
½1
½2
½3
kð1Þ þ kð2Þ
0
kð1Þ  kð2Þ
0
kð3Þ
kð3Þ
kð1Þ  kð2Þ
kð3Þ
kð1Þ þ kð2Þ þ kð3Þ
2
4
3
5
½1
½2
½3
The displacement and force matrices for the system are
d ¼
0
0
u3
2
4
3
5;
f ¼
0
0
5
2
4
3
5;
r ¼
r1
r2
0
2
4
3
5
The global system of equations is given by
kð1Þ þ kð2Þ
0
kð1Þ  kð2Þ
0
kð3Þ
kð3Þ
kð1Þ  kð2Þ
kð3Þ
kð1Þ þ kð2Þ þ kð3Þ
2
4
3
5
0
0
u3
2
4
3
5 ¼
r1
r2
5
2
4
3
5:
As the ﬁrst two displacements are prescribed, we partition after two rows and columns
kð1Þ þ kð2Þ
0
kð1Þ  kð2Þ
0
kð3Þ
kð3Þ
kð1Þ  kð2Þ
kð3Þ
kð1Þ þ kð2Þ þ kð3Þ
2
64
3
75
0
0
u3
2
64
3
75 ¼
r1
r2
5
2
64
3
75
or
KE
KEF
KT
EF
KF

 dE
dF


¼
rE
fF


;
(1)
k
(2)
k
1
3
2
(3)
k
3
5
f =
Figure 2.9
Three-bar example problem.
--------------------------------------------------------
-----------
EQUATIONS FOR A SYSTEM
23

where
KE ¼
kð1Þ þ kð2Þ
0
0
kð3Þ
"
#
KF ¼ kð1Þ þ kð2Þ þ kð3Þ
h
i
KEF ¼
kð1Þ  kð2Þ
kð3Þ
"
#
dE ¼
0
0


dF ¼ u3
½

fF ¼ 5½ 
rE ¼
r1
r2


The reduced system of equations is given by
ðkð1Þ þ kð2Þ þ kð3ÞÞu3 ¼ 5;
which yields
u3 ¼
5
kð1Þ þ kð2Þ þ kð3Þ :
2.3
APPLICATIONS TO OTHER LINEAR SYSTEMS1
The methods described for one-dimensional bars can also be used directly for other networks. For the
methods to be applicable, the systems must be characterized by
1. a balance or conservation law for the ﬂux;
2. a linear law relating the ﬂux to the potential;
3. a continuous potential (i.e. a compatible potential).
Two examples are described in the following: steady-state electrical ﬂow in a circuit and ﬂuid ﬂow in a
hydraulic piping system.
In an electrical system, the potential is the voltage and the ﬂux is the current. An element of a circuit is
shown in Figure 2.10. By Ohm’s law, the current from node 1 to node 2 is given by
ie
2 ¼ ee
2  ee
1
Re
;
ð2:34Þ
whereee
2 andee
1 arethevoltages(potentials)atthenodesandRe istheresistanceofthewire.Thisisthelinear
ﬂux–potential law. By the law of charge conservation, if the current is in steady state,
ie
1 þ ie
2 ¼ 0;
ð2:35Þ
which is the second of the above conditions on the element level. Writing (2.34) and (2.35) in matrix form,
we have
ie
1
ie
2


|ﬄ{zﬄ}
fe
¼ 1
Re
1
1
1
1


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Ke
ee
1
ee
2


|ﬄﬄ{zﬄﬄ}
de
:
ð2:36Þ
The continuity of the voltage at the nodes is enforced by
de ¼ Led:
ð2:37Þ
1Recommended for Science and Engineering Track.
24
DIRECT APPROACH FOR DISCRETE SYSTEMS

Current balance at the nodes gives
X
nel
e¼1
LeTFe ¼ f þ r
ð2:38Þ
Details can be seen in Example 2.2.
The system equation can then be obtained by enforcing the condition that the sum of the currents at any
node is equal to any external sources of currents. The process is identical to what we did for bar elements.
f þ r ¼
X
nel
e¼1
LeTFe
by Equation ð2:38Þ
¼
X
nel
e¼1
LeTKede
by Equation ð2:36Þ
¼
X
nel
e¼1
LeTKeLed
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
by Equation ð2:37Þ:
As indicated by the underscore, the assembled system matrix is given by
K ¼
X
nel
e¼1
LeTKeLe:
ð2:39Þ
This system is obtained by a sequence of scatter and add operations, which corresponds to direct assembly.
For a piping system, a similar procedure can be developed if the ﬂow rate is linearly related to the
pressure drop between two points. A network model is constructed as shown in Figure 2.11. Nodes are
needed only where two pipes join or where the ﬂuid is withdrawn or added. In each element, the nodal
outﬂow rate Qe
I at node is proportional to the nodal pressure drop ðPe
2  Pe
1Þ (see Figure 2.10), so
Qe
2 ¼ eðPe
2  Pe
1Þ;
ð2:40Þ
where e depends on the cross-sectional area of the pipe, the viscosity of the ﬂuid and the element length.
Linear laws of this type apply over a large range of ﬂows.
Conservation of ﬂuid in an element is expressed by
Qe
1 þ Qe
2 ¼ 0:
ð2:41Þ
The system equations are then obtained by writing the equation for the conservation of ﬂuid at nodes and
using the continuity of the pressure ﬁeld. The process is identical to that used in obtaining Equation (2.39).
This is left as an exercise, although it will become apparent in the example.
The similarity of these different systems is surprising and can provide a deeper understanding of linear
systems.Allofthesesystemspossessapotentialandaconservationlaw.Inthemechanicalbar,thepotential
is not as obvious: it is the displacement. The displacement has all of the properties of a potential: it must be
continuous (compatible) and its change determines the ﬂux, which in this case is the stress.
1
2
1
e
2
e
2
e
e
1
e
2
e
e
1
e
2
e
1
e
i
e
e
i
Q
Q
1
R
P
P
Figure 2.10
A resistance element for a circuit and a hydraulic element for a piping network; the nodal ﬂux is positive
when it exits the domain of the element.
APPLICATIONS TO OTHER LINEAR SYSTEMS
25

Example 2.2
Set up the discrete equations for the systems shown in Figure 2.11 and solve them. The three systems in
Figure 2.11 all have the same basic topology, i.e. the same relationship between nodes and elements. We
ﬁrst assemble the system matrix by scatter and add. Then the speciﬁc equations are set up by enforcing
constants on the ﬂux or potential. We use ke ¼ 1
Re ¼ e to denote the element coefﬁcients for the three
different systems.
Thescatteroperationsontheelementsthengivethefollowing(IandJgivetheglobalnodenumbersof
the element):
Element 1, I ¼ 1, J ¼ 4:
Kð1Þ ¼ kð1Þ
1
1
1
1


) ~K
ð1Þ ¼
kð1Þ
0
0
kð1Þ
0
0
0
0
0
0
0
0
kð1Þ
0
0
kð1Þ
2
664
3
775:
Element 2, I ¼ 4, J ¼ 2:
Kð2Þ ¼ kð2Þ
1
1
1
1


) ~K
ð2Þ ¼
0
0
0
0
0
kð2Þ
0
kð2Þ
0
0
0
0
0
kð2Þ
0
kð2Þ
2
664
3
775:
Element 3, I ¼ 1, J ¼ 3:
Kð3Þ ¼ kð3Þ
1
1
1
1


) ~K
ð3Þ ¼
kð3Þ
0
kð3Þ
0
0
0
0
0
kð3Þ
0
kð3Þ
0
0
0
0
0
2
664
3
775:
1
2
4
3
1
0
p =
(1)
2
10/
p
κ
=
1
4
3
2
(2)
R
(1)
2
10
e
R
=
(1)
R
(3)
R
(4)
R
(5)
R
(1)
κ
(3)
κ
(4)
κ
(2)
κ
(5)
κ
1
0
e =
(1)
2
10/
u
k
=
1
4
3
2
(1)
k
(3)
k
(2)
k
(4)
k
(5)
k
Figure 2.11
Example 2.2: mechanical, electrical and hydraulic systems with an identical network structure.
26
DIRECT APPROACH FOR DISCRETE SYSTEMS

Element 4, I ¼ 4, J ¼ 3:
Kð4Þ ¼ kð4Þ
1
1
1
1


) ~K
ð4Þ ¼
0
0
0
0
0
0
0
0
0
0
kð4Þ
kð4Þ
0
0
kð4Þ
kð4Þ
2
664
3
775:
Element 5, I ¼ 3, J ¼ 2:
Kð5Þ ¼ kð5Þ
1
1
1
1


) ~K
ð5Þ ¼
0
0
0
0
0
kð5Þ
kð5Þ
0
0
kð5Þ
kð5Þ
0
0
0
0
0
2
664
3
775:
Assembled system matrix:
K ¼
X
5
e¼1
~K
e ¼
kð1Þ þ kð3Þ
0
kð3Þ
kð1Þ
0
kð2Þ þ kð5Þ
kð5Þ
kð2Þ
kð3Þ
kð5Þ
kð3Þ þ kð4Þ þ kð5Þ
kð4Þ
kð1Þ
kð2Þ
kð4Þ
kð1Þ þ kð2Þ þ kð4Þ
2
664
3
775:
Equations for the mechanical system:
kð1Þ þ kð3Þ
0
kð3Þ
kð1Þ
0
kð2Þ þ kð5Þ
kð5Þ
kð2Þ
kð3Þ
kð5Þ
kð3Þ þ kð4Þ þ kð5Þ
kð4Þ
kð1Þ
kð2Þ
kð4Þ
kð1Þ þ kð2Þ þ kð4Þ
2
66664
3
77775
dE
dF
"
#
¼
rE
fF


¼
r1
r2
0
0
2
6664
3
7775
where the solution matrix for mechanical, piping and electrical systems is
dF ¼
u3
u4


¼
p3
p4


¼
e3
e4


;
dE ¼
u1
u2


¼
p1
p2


¼
e1
e2


¼
0
10=kð1Þ


Partitioning above after two rows and columns gives
kð3Þ þ kð4Þ þ kð5Þ
kð4Þ
kð4Þ
kð1Þ þ kð2Þ þ kð4Þ


dF ¼
0
0


 10
kð1Þ
kð5Þ
kð2Þ


Letting ke ¼ 1 for e ¼ 1 to 5 and solving above gives
dF ¼
u3
u4


¼
p3
p4


¼
e3
e4


¼
5
5


2.4
TWO-DIMENSIONAL TRUSS SYSTEMS 2
Truss structures, such as the one shown in Figure 2.1, consist of bar elements positioned at arbitrary angles
in space joined by pin-like joints that cannot transmit moments. In order to analyze such general truss
2Recommended for Structural Mechanics Track.
-------------------------------------------
-------------
TWO-DIMENSIONAL TRUSS SYSTEMS
27

structures, it is necessary to develop an element stiffness matrix for a bar element aligned arbitrarily in two- or
three-dimensional space. Wewill ﬁrst consider the two-dimensional casewhere the bar elements are in the xy-
plane as shown in Figure 2.2(b). Trusses differ from networks such as electrical systems in that the nodal
displacementsinmultidimensionalproblemsarevectors.Theunknownsofthesystemarethenthecomponents
of the vector, so the number of unknowns per node is 2 and 3 in two and three dimensions, respectively.
We begin by developing the element stiffness matrix for a bar element in two dimensions. A generic bar
element is shown in Figure 2.12, along with the nodal displacements and nodal forces. At each node, the
nodal force has two components; similarly, as can be seen from Figure 2.12, each nodal displacement has
two components, so the element force and displacement matrices are, respectively,
Fe ¼ ½Fe
1x Fe
1y Fe
2x Fe
2yT
and
de ¼ ½de
1x de
1y de
2x de
2yT:
To obtain a general relation between the element internal forces Fe and displacements de, we start with the
stiffness equations in the local element coordinate system ðx0e; y0eÞ; as shown in Figure 2.12, x0e is aligned
along the axial direction of the bar element and is positive from node 1 to node 2. The angle e is deﬁned as
positive in the counterclockwise sense.
In the element coordinate system ðx0e; y0eÞ , the element stiffness given by Equation (2.10) applies, so
ke
ke
ke
ke

 u0e
1x
u0e
2x


¼
F0e
1x
F0e
2x


:
The above equation can be expanded by adding the equations F0e
1y ¼ F0e
2y ¼ 0. These nodal force
components perpendicular to the axis of the element can be set to zero because we have assumed that
the element is so slim that the shear forces are negligible.
The nodal forces in the element are independent of the normal displacements in small displacement
theory. This is because the elongation is a quadratic function of the nodal displacements normal to the bar.
As the nodal displacements are assumed to be small, the effect of the normal displacements on the
elongation is therefore of second order, and hence the effects of these displacement components on the
stress and strain can be neglected. So the stiffness matrix in the element coordinate system is given by
F0
1x
e
F0
1y
e
F0
2x
e
F0
2y
e
2
66664
3
77775
|ﬄﬄﬄ{zﬄﬄﬄ}
F0e
¼ ke
1
0
1
0
0
0
0
0
1
0
1
0
0
0
0
0
2
66664
3
77775
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K0e
u0
1x
e
u0
1y
e
u0
2x
e
u0
2y
e
2
66664
3
77775
|ﬄﬄﬄ{zﬄﬄﬄ}
d0e
;
1
1
,
e
e
x
x
u
F
x
y
1
2
1
1
,
e
e
y
y
u
F
2
2
,
e
e
y
y
u
F
2
2
,
e
e
x
x
u
F
ek
e
x
e
y
e
x
1
2
e
x
1
1
,
e
e
x
x
F
u
1
1
,
e
e
y
y
F
u
2
2
,
e
e
x
x
F
u
2
2
,
e
e
y
y
F
u
ek
e
x
Figure 2.12 A two-dimensional truss element in the local coordinate system x0e
1 , y0e
1 .
28
DIRECT APPROACH FOR DISCRETE SYSTEMS

or in terms of the underscored nomenclature
F0e ¼ K0ed0e:
ð2:42Þ
It is easy to see that for the above stiffness matrix, the y0e-components of the forces at the two nodes always
vanish and that the y0e-components of the displacements have no effect on the nodal forces; the stiffness
matrix in (2.42) is simply the matrix (2.11) embedded in a matrix of zeros. In other words, we have simply
scattered the axial bar stiffness into a larger matrix; this is valid when the element coordinate system is
aligned with the axis of the element.
The relation between the displacement components in the two coordinate systems shown in Figure 2.12
at the nodes (I ¼ 1; 2) is obtained by means of the relation for vector transformations:
u0e
Ix ¼ ue
Ix cos e þ ue
Iy sin e
u0e
Iy ¼ ue
Ix sin e þ ue
Iy cos e
These equations can be written in the matrix form as follows:
d0e ¼ Rede;
ð2:43Þ
where
de ¼
ue
1x
ue
1y
ue
2x
ue
2y
2
6664
3
7775;
Re ¼
cos e
sin e
0
0
 sin e
cos e
0
0
0
0
cos e
sin e
0
0
 sin e
cos e
2
6664
3
7775:
Re is the rotation matrix. The above combines the vector transformation at the two nodes. As these
transformationsareindependentofeachother,blocksofthematrixrelatingdifferentnodesarezero,e.g.the
upper right 2  2 block is zero as the element components of the nodal displacement at node 1 are
independent of the displacement at node 2.
Note that Re is an orthogonal matrix: its inverseis equal to its transpose, i.e. ðReÞTRe ¼ ReðReÞT ¼ I or
ðReÞ1 ¼ ReT:
ð2:44Þ
Premultiplying Equation (2.43) by ðReÞT , we obtain
ReTd0e ¼ ReTRede ¼ de;
where the second equality follows from the orthogonality relation (2.44). The components of the element
force matrices are related by the same component transformation rule:
ðaÞ
F0e ¼ ReFe;
ðbÞ
Fe ¼ ReTF0e:
ð2:45Þ
We are now in a position to determine the relation between Fe and de . Starting with (2.45b),
Fe ¼ ReTF0e
by Equation ð2:45bÞ
¼ ReTK0ed0e
by Equation ð2:42Þ
¼ ReTK0eRe
|ﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄ}
Ke
de
by Equation ð2:43Þ
TWO-DIMENSIONAL TRUSS SYSTEMS
29

As indicated above, the underscored term is the element stiffness in the global coordinate system:
Ke ¼ ReTK0eRe:
ð2:46Þ
AnexplicitexpressionforKe isobtainedbysubstitutingthematrixexpressionsforKe andRe intoEquation
(2.46), which gives
Ke ¼ ke
cos2 e
cos e sin e
 cos2 e
 cos e sin e
cos e sin e
sin2 e
 cos e sin e
 sin2 e
 cos2 e
 cos e sin e
cos2 e
cos e sin e
 cos e sin e
 sin2 e
cos e sin e
sin2 e
2
664
3
775:
ð2:47Þ
It can be seen that Ke is a symmetric matrix.
2.5
TRANSFORMATION LAW 3
In the following, we develop a more general method for transformation of stiffness matrices by means of
energy concepts. By transformation here we mean either a rotation from one coordinate system to another
orascatteroperationfromanelementtotheglobalcoordinatesystem.Wewilldenotesuchatransformation
matrix by Te. The matrix Te transforms the element displacement matrix from a coordinate system where
the stiffness relation Ke is known to another coordinate system where the stiffness matrix Keis unknown.
We start with
ðaÞ
bde ¼ Tede;
ðbÞ
bFe ¼ bKebde:
ð2:48Þ
In the case of rotation from one coordinate system to another (Section 2.4), d0e ¼ Rede , so Te ¼ Re,
d0e ¼ bde and de ¼ de ; in the case of scatter operation (Section 2.2), de ¼ Led , so Te ¼ Le , de ¼ bde and
d ¼ de . In the following, we will describe how to relate Fe to bFe and how to establish the stiffness relation
Fe ¼ Kede.
Let bFe be the internal element force matrix and bde be an arbitrary inﬁnitesimal element displacement
matrix. The nodal internal forces must be chosen so that the work done by the internal forces, denoted by
Wint , is given by
Wint ¼ bdeTbFe:
ð2:49Þ
Note that bde has to be inﬁnitesimal so that the internal force matrix bFe remains constant as the element
deforms. For example, for the two-node element in one dimension, the work done by element e is
Wint ¼  bue
1bFe
1 þ  bue
2bFe
2.
We now show that if (2.48) holds then
Ke ¼ TeT bKeTe:
ð2:50Þ
We ﬁrst show that if (2.48) holds then
Fe ¼ TeTbFe
ð2:51Þ
The key concept that makes this proof possible is that the internal work expressed in terms of bde and bFe
must equal to the internal work expressed in terms of de and Fe, so
Wint ¼ bdeTbFe ¼ deTFe:
ð2:52Þ
3Optional for all tracks.
30
DIRECT APPROACH FOR DISCRETE SYSTEMS

We will discuss why this must be true later. We now substitute the ﬁrst part of (2.48) into (2.52), which
gives
Wint ¼ deTFe ¼ deTTeTbFe:
ð2:53Þ
Rearranging terms in the above gives
deTðFe  TeTbFeÞ ¼ 0:
ð2:54Þ
As the above must hold for arbitrary de, the result (2.51) follows from the vector scalar product theorem
(see Appendix A2).
We next prove the relation (2.50) as follows:
Fe ¼ TeTbFe
from ð2:51Þ
¼ TeT bK
ebd
e
by ð2:48bÞ
¼ TeT bKeTe
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
K
de
by ð2:48aÞ:
As the last line in the above deﬁnes the transformed element stiffness matrix, (2.50) is proved.
The above proof is based on the fact that any two valid representations of the element must be
energetically consistent, that is, the element must absorb the same amount of energy irrespective of the
coordinate system in which it is described. One way of explaining this is that energy is a scalar, so it is
independentofthealignmentofthecoordinatesystem.Scalarphysicalvariableslikepressure,temperature
and energy do not depend on the coordinate system that is chosen. Furthermore, energy has to be
independent of what generalized deformation modes are used to describe the deformation of the system.
Energy has a very unique and important role in physics and mechanics: its invariance with respect to the
frame of reference leads toimportant results such as the principle of virtual work and theorem of minimum
potential energy and appears throughout ﬁnite element analysis.
Example 2.3
Figure 2.13 (left) shows material properties, geometry, loads and boundary conditions of the two-bar
structure. Inthis example,we emphasize the fourmain steps inthe ﬁnite element method (FEM), namely
(1) preprocessing, (2) construction of local (element) behavior, (3) assembling the local matrices to
obtain the global behavior and (4) postprocessing.
x
y
E, A constant
10
2
(2)
1
3
l
(1)
l
Figure 2.13
Two-element truss structure.
TRANSFORMATION LAW
31

Step 1, which is subdividing the structure into elements, assigning the element numbers to each bar,
node numbers to each joint, starting with nodes where the displacements are prescribed, is shown in
Figure 2.13. The ﬁnite element model consists of two elements numbered 1 and 2 and three nodes.
Step 2 deals with the formulation of each element starting with element 1.
Element 1:
Element1isnumberedwithglobalnodes1and3.Itispositionedatanangleð1Þ ¼ 90 withrespecttothe
positive x-axis as shown in Figure 2.14. Other relations are as follows:
cos 90 ¼ 0;
sin 90 ¼ 1;
lð1Þ ¼ l;
kð1Þ ¼ Að1ÞEð1Þ
lð1Þ
¼ AE
l ;
Kð1Þ ¼ AE
l
0
0
0
0
0
1
0
1
0
0
0
0
0
1
0
1
2
6664
3
7775
½1
½3
½1
½3
Element 2:
Element2isnumberedwithglobalnodes2and3.Itispositionedatanangleð2Þ ¼ 45 withrespecttothe
positive x-axis as shown in Figure 2.14. Other relations are as follows:
cos 45 ¼ 1ﬃﬃﬃ
2
p ;
sin 45 ¼ 1ﬃﬃﬃ
2
p ;
lð2Þ ¼
ﬃﬃﬃ
2
p
l;
kð2Þ ¼ Að2ÞEð2Þ
lð2Þ
¼ AEﬃﬃﬃ
2
p
l
;
Kð2Þ ¼ AEﬃﬃﬃ
2
p
l
1
2
1
2
 1
2
 1
2
1
2
1
2
 1
2
 1
2
 1
2
 1
2
1
2
1
2
 1
2
 1
2
1
2
1
2
2
6666666666664
3
7777777777775
½2
½3
½2
½3
Step 3: deal with construction of the global behavior.
(3a) Direct assembly:
3
 1 
x
(1)
x
( )
1
( )
1
 3 
 2 
x
(2)
x
( )
2
( )
2
Figure 2.14
Local (element) and global coordinate systems.
32
DIRECT APPROACH FOR DISCRETE SYSTEMS

K ¼ AE
l
0
0
0
0
0
0
0
1
0
0
0
1
0
0
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
0
0
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
0
0

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
0
1

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1 þ
1
2
ﬃﬃﬃ
2
p
2
66666666666666664
3
77777777777777775
½1
½2
½3
½1
½2
½3
and
d ¼
0
0
0
0
u3x
u3y
2
6666664
3
7777775
f ¼
0
0
0
0
10
0
2
6666664
3
7777775
r ¼
r1x
r1y
r2x
r2y
0
0
2
6666664
3
7777775
:
Once again notice that if the external force component at a node is prescribed, then the corresponding
displacement component at that node is unknown. On the other hand if a displacement component at a
node is prescribed, then the corresponding force component at that node is an unknown reaction.
(3b) Global system of equations:
AE
l
0
0
0
0
0
0
0
1
0
0
0
1
0
0
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
0
0
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
0
0

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
0
1

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1 þ
1
2
ﬃﬃﬃ
2
p
2
66666666666666664
3
77777777777777775
0
0
0
0
u3x
u3y
2
6666666664
3
7777777775
¼
r1x
r1y
r2x
r2y
10
0
2
666666664
3
777777775
:
(3c) Reduced global system of equations:
The global system is partitioned after four rows and four columns:
dE ¼
u1x
u1y
u2x
u2y
2
6664
3
7775 ¼
0
0
0
0
2
6664
3
7775;
dF ¼
u3x
u3y


;
fF ¼
10
0


;
KF ¼
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1 þ
1
2
ﬃﬃﬃ
2
p
2
664
3
775;
rE ¼
r1x
r1y
r2x
r2y
2
6664
3
7775;
KEF ¼
0
0
0
1

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
2
66666664
3
77777775
:
TRANSFORMATION LAW
33

The unknown displacement matrix is found from the solution of the reduced system of equations
AE
l
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1
2
ﬃﬃﬃ
2
p
1 þ
1
2
ﬃﬃﬃ
2
p
2
6664
3
7775
u3x
u3y
"
#
¼
10
0
"
#
and is given by
u3x
u3y
"
#
¼ l
AE
10 þ 20
ﬃﬃﬃ
2
p
10
"
#
:
The unknown reaction matrix r is
rE ¼
r1x
r1y
r2x
r2y
2
666664
3
777775
¼ KEdE þ KEFdF ¼
0
0
0
1

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p

1
2
ﬃﬃﬃ
2
p
2
6666666664
3
7777777775
10 þ 20
ﬃﬃﬃ
2
p
10
"
#
¼
0
10
10
10
2
666664
3
777775
:
It can easily be veriﬁed that the equilibrium equations are satisﬁed:
X
Fx ¼ 0;
X
Fy ¼ 0;
X
M2 ¼ 0:
Finally, in the postprocessing step the stresses in the two elements are computed as follows:
e ¼ Ee u0e
2x  u0e
1x
le
¼ Ee
le
1
0
1
0
½

u0e
1x
u0e
1y
u0e
2x
u0e
2y
2
66666664
3
77777775
¼ Ee
le
1
0
1
0
½
Rede
¼ Ee
le
 cos e
 sin e
cos e
sin e
½
de:
For element 1, we have
ð1Þ ¼ 90
ðcos ð1Þ ¼ 0; sin ð1Þ ¼ 1Þ;
dð1Þ ¼
u1x
u1y
u3x
u3y
2
6664
3
7775 ¼
0
0
10 þ 20
ﬃﬃﬃ
2
p
10
2
6664
3
7775
l
AE ;
ð1Þ ¼ ½0
1
0
1
0
0
10 þ 20
ﬃﬃﬃ
2
p
10
2
6664
3
7775
1
A ¼ 10
A :
34
DIRECT APPROACH FOR DISCRETE SYSTEMS

For element 2, we have
ð2Þ ¼ 45
ðcos ð2Þ ¼ 1=
ﬃﬃﬃ
2
p
; sin ð2Þ ¼ 1=
ﬃﬃﬃ
2
p
Þ;
dð2Þ ¼
u2x
u2y
u3x
u3y
2
6664
3
7775 ¼
0
0
10 þ 20
ﬃﬃﬃ
2
p
10
2
6664
3
7775
l
AE ;
ð2Þ ¼ 1ﬃﬃﬃ
2
p ½1=
ﬃﬃﬃ
2
p
1=
ﬃﬃﬃ
2
p
1=
ﬃﬃﬃ
2
p
1=
ﬃﬃﬃ
2
p

0
0
10 þ 20
ﬃﬃﬃ
2
p
10
2
6664
3
7775
1
A ¼ 10
ﬃﬃﬃ
2
p
A
:
2.6
THREE-DIMENSIONAL TRUSS SYSTEMS 4
Consider a bar element in three dimensions as shown in Figure 2.15. As the element has resistance only to
extensional deformation, we can write the relationship between nodal forces and nodal displacements in
the local coordinate system as
F0
1x
e
F0
2x
e


¼ ke
1
1
1
1

 u0
1x
e
u0
2x
e


:
ð2:55Þ
The degrees of freedom included in the above element displacement and force matrices are the only ones
that are involved in the stiffness of the system.
Theelementinthreedimensionswillhavethreedegreesoffreedompernode:translationcomponentsin
the x, y and z directions, so
de ¼ ½ue
1x ue
1y ue
1z ue
2x ue
2y ue
2zT:
ð2:56Þ
As the force matrix must be energetically consistent,
Fe ¼ ½Fe
1x Fe
1y Fe
1z Fe
2x Fe
2y Fe
2zT:
ð2:57Þ
2
e
x
F ,
2
e
x
u
x
y
z
i
j
2
e
z
F ,
2
e
z
u
x′
2
e
y
F
,
2
e
y
u
k
Figure 2.15
A three-dimensional truss element in the local coordinate.
4Optional for all tracks.
THREE-DIMENSIONAL TRUSS SYSTEMS
35

To obtain the stiffness equation in terms of the nodal forces and displacements (2.57) and (2.56),
respectively, we now construct the rotation matrix Re for three-dimensional trusses. Note that the unit
vector along the element is given by
~i 0 ¼ 1
le ðxe
21~i þ ye
21~j þ ze
21~kÞ;
ð2:58Þ
where xe
21 ¼ xe
2  xe
1 and so on. If we treat the nodal displacements as vectors, then
u 0
Ix
e~i 0 þ u0
Iy
e~j0 þ u0
Iz
e~k0 ¼ ue
Ix~i þ ue
Iy~j þ ue
Iz~k
ð2:59Þ
for I ¼ 1 and 2.
Taking a scalar product of the above with i0, we ﬁnd (because of the orthogonality of the unit vectors)
that
u0
Ix
e ¼ ue
Ix~i ~i 0 þ ue
Iy~j ~i 0 þ ue
Iz~k ~i 0
ð2:60Þ
From Figure 2.15 we can see that substituting (2.58) into (2.60) we ﬁnd that
u0
Ix
e ¼ 1
le ½xe
21ue
Ix þ ye
21ue
Iy þ ze
21ue
Iz:
ð2:61Þ
Using the above to write the relations between d0e and de, we have
u0
1x
e
u0
2x
e


¼ 1
le
xe
21
ye
21
ze
21
0
0
0
0
0
0
xe
21
ye
21
ze
21


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Re
de;
ð2:62Þ
which deﬁnes the matrix Re. The global stiffness is then given by (2.50)
Ke ¼ ReT
62 K0
22
e Re
26;
where K0e is the matrix given in (2.55) and Re is given in (2.62). The result is a 6  6 matrix. It is not worth
multiplying the matrices; this can easily be done within a computer program. This procedure can also be
used to obtain the stiffness of the element in two dimensions: the Re matrix would then be the 2  4 matrix
with the columns with ze
21 terms dropped and the result identical to (2.47).
REFERENCES
George, A. and Liu J.W. (1986) Computer Solution of Large Sparse Positive Deﬁnite Systems, Prentice Hall,
Englewood Cliffs, NJ.
Saad, Y. (1996) Iterative Methods for Sparse Linear Systems, PWS Publishing Company, Boston, MA.
36
DIRECT APPROACH FOR DISCRETE SYSTEMS

Problems
Problem 2.1
For the spring system given in Figure 2.16,
a. Number the elements and nodes.
b. Assemble the global stiffness and force matrix.
c. Partition the system and solve for the nodal displacements.
d. Compute the reaction forces.
Problem 2.2
Show that the equivalent stiffness of a spring aligned in the x direction for the bar of thickness t with a
centered square hole shown in Figure 2.17 is:
k ¼ 5Etab
ða þ bÞl ;
whereEistheYoung’smodulusandtisthewidthofthebar(Hint:subdividethebarwithasquareholeinto3
elements).
Problem 2.3
Consider the truss structure given in Figure 2.18. Nodes A and B are ﬁxed. A force equal to 10 N acts in the
positive x-direction at node C. Coordinates of joints are given in meters. Young’s modulus is E ¼ 1011Pa
and the cross-sectional area for all bars are A ¼ 2  102m2.
a. Number the elements and nodes.
b. Assemble the global stiffness and force matrix.
c. Partition the system and solve for the nodal displacements.
d. Compute the stresses and reactions.
50 N 
k
3k
k
2k
Figure 2.16
Data for Problem 2.1.
2b
2b
x
a
l
l/10
l/10
Figure 2.17
Data for Problem 2.2.
REFERENCES
37

Problem 2.4
Given the three-bar structure subjected to the prescribed load at point C equal to 103 N as shown in
Figure2.19.TheYoung’smodulusisE ¼ 1011 Pa,thecross-sectionalareaofthebarBCis2  102 m2 and
that of BD and BF is 102 m2 . Note that point D is free to move in the x-direction. Coordinates of joints are
given in meters.
a. Construct the global stiffness matrix and load matrix.
b. Partition the matrices and solve for the unknown displacements at point B and displacement in the
x-direction at point D.
c. Find the stresses in the three bars.
d. Find the reactions at nodes C, D and F.
Problem 2.5
In each of the two plane structures shown in Figure 2.20, rigid blocks are connected by linear springs.
Imaginethatonlyhorizontaldisplacementsare allowed.Ineach case,writethereduced globalequilibrium
1k
( )
2
k
( )
3
k
( )
4
k
( )
4
k
( )1
k
( )
2
k
( )
5
k
( )
3
k
( )
6
k
(a)
(b)
1f
1f
2f
2f
3f
3f
4f
1
u
1
u
2
u
2
u
3
u
3
u
4
u
( )1
k
Figure 2.20
Data for Problem 2.5.
x
P 10
=
A=1
A=1
B(
)
0,0
y
F -1,1
(
)
C 0,1
(
)
D 1,1
(
)
2
2 10
A
−
=
⋅
2
10
A
−
=
2
10
A
−
=
3
10
P =
Figure 2.19
Data for Problem 2.4.
C(1,1)
D(0,1)
10
A(0,0)
B(1,0)
Figure 2.18
Data for Problem 2.3.
38
DIRECT APPROACH FOR DISCRETE SYSTEMS

equations in terms of spring stiffness ke, unknown nodal displacements uI and applied loads fI . You
may renumber the nodes so that the nodes where the displacements are prescribed are numbered
ﬁrst.
Problem 2.6
The plane structure shown in Figure 2.21 consists of a rigid, weightless bar and linear springs of stiffness
kð1Þ and kð2Þ . Only small vertical displacements are permitted. The reduced stiffness matrix bK of this
structure is 2  2 but can have various forms, depending on the choice of global displacement matrix.
Determine bK for each of the following choices of lateral translations:
a. u1y at x ¼ 0 and u2y at x ¼ L (see Figure 2.21, right).
b. u1y at x ¼ 0 and uAy at x ¼ L=2.
c. u2y at x ¼ L and uBy at x ¼ 2L.
Problem 2.7
Modify the MATLAB ﬁnite element code to enforce displacement boundary conditions using the penalty
method (see Equation (2.33)).
a. Solve for the nodal displacements and stresses of the structure shown in Figure 2.22.
b. Plot the deformed structurewith MATLAB. For this purpose, add the mag  displacement to the nodal
coordinates. The factor mag is to magnify the displacements so that they are visible.
3m 
3m
3m 
3m
3m
4 m 
1.5 10
11Pa
E =
⋅
2
2
10
m
A
−
=
for all bars 
3
7 10 N
P =
⋅
Figure 2.22
Data for Problem 2.7.
A 
B 
x 
, y 
y u 
1 y 
u 
2 y 
u 
Degrees-of-freedom for Part (a)  
L 
L 
1 
2 
( ) 
1 
k 
( ) 
2 
k 
Figure 2.21
Data for Problem 2.6.
REFERENCES
39

Problem 2.8
Using theMATLAB ﬁnite elementcode, ﬁndthe displacements and forcesinthe two truss structuresgiven
in Figure 2.23. For truss structure (b), exploit the symmetry. For the two trusses, check the equilibrium at
node1.TheYoung’smodulusE ¼ 1011 Pa,cross-sectionalareasofallbars102 m2,forcesF ¼ 103 Nand
L ¼ 2 m.
(a)
L
L
2
3
4
5
60o
60o
45o
(1)
(2)
(3)
(4)
(5)
F
5
6
4
3
1
1
2
L
L
L
(1)
(2)
(6)
(5)
(3)
(4)
F 
F
F
(b)
Figure 2.23
Data for Problem 2.8.
40
DIRECT APPROACH FOR DISCRETE SYSTEMS

3
Strong and Weak Forms for
One-Dimensional Problems
In this chapter, the strong and weak forms for several one-dimensional physical problems are developed.
Thestrongformconsistsofthegoverningequationsandtheboundaryconditionsforaphysicalsystem.The
governingequationsareusuallypartialdifferentialequations,butintheone-dimensionalcasetheybecome
ordinary differential equations. The weak form is an integral form of these equations, which is needed to
formulate the ﬁnite element method.
In some numerical methods for solving partial differential equations, the partial differential equations
can be discretized directly (i.e. written as linear algebraic equations suitable for computer solution). For
example,inthe ﬁnitedifference method,one candirectlywrite thediscrete linear algebraicequationsfrom
the partial differential equations. However, this is not possible in the ﬁnite element method.
Aroadmapforthe development ofthe ﬁnite elementmethod isshowninFigure3.1. Ascanbeseenfrom
the roadmap, there are three distinct ingredients that are combined to arrive at the discrete equations (also
calledthesystemequations;forstressanalysistheyarecalledstiffnessequations),whicharethensolvedby
a computer. These ingredients are
1. the strong form, which consists of the governing equations for the model and the boundary conditions
(these are also needed for any other method);
2. the weak form;
3. the approximation functions.
The approximation functions are combined with the weak form to obtain the discrete ﬁnite element
equations.
Thus, the path from for the governing differential equations is substantially more involved than that for
ﬁnitedifferencemethods.Intheﬁnitedifferencemethod,thereisnoneedforaweakform;thestrongformis
directly convertedto a set of discrete equations. The need for aweak form makes the ﬁnite element method
more challenging intellectually. A number of subtle points, such as the difference between various
boundary conditions, must be learned for intelligentuse of the method.In return forthis addedcomplexity,
however, ﬁnite element methods can much more readily deal with the complicated shapes that need to be
analyzed in engineering design.
Todemonstratethebasicstepsinformulatingthestrongandweakforms,wewillconsideraxiallyloaded
elastic bars and heat conduction problems in one dimension. The strong forms for these problems will be
developed along with the boundary conditions. Then we will develop weak forms for these problems and
show that they are equivalent to the strong forms. We will also examine various degrees of continuity, or
smoothness, which will play an important role in developing ﬁnite element methods.
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

The weak form is the most intellectually challenging part in the development of ﬁnite elements, so a
student may encounter some difﬁculties in understanding this concept; it is probably different from
anything else that he has seen before in engineering analysis. However, an understanding of these
procedures and the implications of solving a weak form are crucial to understanding the character of ﬁnite
element solutions. Furthermore, the procedures are actually quite simple and repetitive, so once it is
understood for one strong form, the procedures can readily be applied to other strong forms.
3.1
THE STRONG FORM IN ONE-DIMENSIONAL PROBLEMS
3.1.1
The Strong Form for an Axially Loaded Elastic Bar
ConsiderthestaticresponseofanelasticbarofvariablecrosssectionsuchasshowninFigure3.2.Thisisan
example of a problem in linear stress analysis or linear elasticity, where we seek to ﬁnd the stress
distribution sðxÞ in the bar. The stress will results from the deformation of the body, which is characterized
by the displacements of points in the body,uðxÞ. The displacement results in a strain denoted by eðxÞ; strain
is a dimensionless variable. As shown in Figure 3.2, the bar is subjected to a body force or distributed
loading bðxÞ. The body force could be due to gravity (if the bar were placed vertically instead of
horizontally as shown), a magnetic force or a thermal stress; in the one-dimensional case, we will consider
body force per unit length, so the units of bðxÞ are force/length. In addition, loads can be prescribed at the
ends of the bar, where the displacement is not prescribed; these loads are called tractions and denoted byt.
These loads are in units of force per area, and when multiplied by the area, give the applied force.
Strong form 
(Chapter 3) 
Weak form 
(Chapter 3) 
Discrete equations 
(Chapter 5)
Approximation of functions 
(Chapter 4) 
Figure 3.1
Roadmap for the development of the ﬁnite element method.
t
p(x)
  (
)
x
x
+ ∆
x
∆
( )
u x
(
)
u x
x
+ ∆
A(x)
b(x)
x = 0
x = l
x
b(x+     )
p
∆x
2
Figure 3.2
A one-dimensional stress analysis (elasticity) problem.
42
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

The bar must satisfy the following conditions:
1. It must be in equilibrium.
2. It must satisfy the elastic stress–strain law, known as Hooke’s law: sðxÞ ¼ EðxÞeðxÞ.
3. The displacement ﬁeld must be compatible.
4. It must satisfy the strain–displacement equation.
The differential equation for the bar is obtained from equilibrium of internal force pðxÞ and external force
bðxÞ acting on the body in the axial (along the x-axis) direction. Consider equilibrium of a segment of
the bar along the x-axis, as shown in Figure 3.2. Summing the forces in the x-direction gives
pðxÞ þ b x þ x
2


x þ pðx þ xÞ ¼ 0:
Rearranging the terms in the above and dividing by x, we obtain
pðx þ xÞ  pðxÞ
x
þ b x þ x
2


¼ 0:
If we take the limit of the above equation as x ! 0, the ﬁrst term is the derivative dp=dx and the second
term becomes bðxÞ. Therefore, the above can be written as
dpðxÞ
dx
þ bðxÞ ¼ 0:
ð3:1Þ
This is the equilibrium equation expressed in terms of the internal force p. The stress is deﬁned as the force
divided by the cross-sectional area:
sðxÞ ¼ pðxÞ
AðxÞ ;
so
pðxÞ ¼ AðxÞsðxÞ:
ð3:2Þ
The strain–displacement (or kinematical) equation is obtained by applying the engineering deﬁnition of
strain that we used in Chapter 2 for an inﬁnitesimal segment of the bar. The elongation of the segment is
given by uðx þ xÞ  uðxÞ and the original length is x; therefore, the strain is given by
eðxÞ ¼
elongation
original length ¼ uðx þ xÞ  uðxÞ
x
:
Takingthelimitoftheaboveasx ! 0,werecognizethattherightright-handsideisthederivativeofuðxÞ.
Therefore, the strain–displacement equation is
eðxÞ ¼ du
dx :
ð3:3Þ
The stress–strain law for a linear elastic material is Hooke’s law, which we already saw in Chapter 2:
sðxÞ ¼ EðxÞeðxÞ;
ð3:4Þ
where E is Young’s modulus.
THE STRONG FORM IN ONE-DIMENSIONAL PROBLEMS
43

Substituting (3.3) into (3.4) and the result into (3.1) yields
d
dx
AE du
dx


þ b ¼ 0;
0 < x < l:
ð3:5Þ
The above is a second-order ordinary differential equation. In the above equation, u(x) is the dependent
variable, which is the unknown function, and x is the independent variable. In (3.5) and thereafter the
dependence of functions on x will be often omitted. The differential equation (3.5) is a speciﬁc form of the
equilibrium equation (3.1). Equation (3.1) applies to both linear and nonlinear materials whereas (3.5)
assumes linearity in the deﬁnition of the strain (3.3) and the stress–strain law (3.4). Compatibility is
satisﬁed by requiring the displacement to be continuous. More will be said later about the degree of
smoothness, or continuity, which is required.
Tosolvethe abovedifferential equation, weneedtoprescribe boundaryconditionsat thetwo endsofthe
bar. For the purpose of illustration, we will consider the following speciﬁc boundary conditions: at x ¼ l,
the displacement, uðx ¼ lÞ, is prescribed; at x ¼ 0, the force per unit area, or traction, denoted by t, is
prescribed. These conditions are written as
sð0Þ ¼
E du
dx


x¼0
¼ pð0Þ
Að0Þ  t;
uðlÞ ¼ u:
ð3:6Þ
Note that the superposed bars designate denote a prescribed boundary value in the above and throughout
this book.
The tractiont has the same units as stress (force/area), but its sign is positive when it acts in the positive
x-direction regardless of which face it is acting on, whereas the stress is positive in tension and negative in
compression, so that on a negative face a positive stress corresponds to a negative traction; this will be
clariﬁed in Section 3.5. Note that either the load or the displacement can be speciﬁed at a boundary point,
but not both.
The governing differential equation (3.5) along with the boundary conditions (3.6) is called the strong
form of the problem. To summarize, the strong form consists of the governing equation and the boundary
conditions, which for this example are
ðaÞ
d
dx
AE du
dx


þ b ¼ 0
on
0 < x < l;
ðbÞ
sðx ¼ 0Þ ¼
E du
dx


x¼0
¼ t;
ðcÞ
uðx ¼ lÞ ¼ u:
ð3:7Þ
It should be noted thatt, u and b are given. They are the data that describe the problem. The unknown is the
displacement uðxÞ.
3.1.2
The Strong Form for Heat Conduction in One Dimension1
Heat ﬂow occurs when there is a temperature difference within a body or between the body and its
surrounding medium. Heat is transferred in the form of conduction, convection and thermal radiation. The
heat ﬂow through thewall of a heated room in thewinter is an example of conduction. On the other hand, in
convectiveheattransfer,theenergytransfertothebodydependsonthetemperaturedifferencebetween the
surface of the body and the surrounding medium. In this Section, we will focus on heat conduction. A
discussion involving convection is given in Section 3.5.
1Reccommended for Science and Engineering Track.
44
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Consider a cross section of a wall of thickness l as shown in Figure 3.3. Our objective is to determine the
temperature distribution. Let AðxÞ be the area normal to the direction of heat ﬂow and let sðxÞ be the heat
generatedperunitthicknessofthewall,denotedbyl.Thisisoftencalledaheatsource.Acommonexample
of a heat source is the heat generated in an electric wire due to resistance. In the one-dimensional case, the
rate of heat generation is measured in units of energy per time; in SI units, the units of energy are joules (J)
per unit length (meters, m) and time (seconds, s). Recall that the unit of power is watts (1 W ¼ 1 J s1). A
heat source sðxÞ is considered positivewhen heat is generated, i.e. added to the system, and negative when
heat is withdrawn from the system. Heat ﬂux, denoted by qðxÞ, is deﬁned as a the rate of heat ﬂow across a
surface. Its units are heat rate per unit area; in SI units, W m2. It is positivewhen heat ﬂows in the positive
x-direction. We will consider a steady-state problem, i.e. a system that is not changing with time.
To establish the differential equation that governs the system, we consider energy balance (or con-
servation of energy) in a control volume of the wall. Energy balance requires that the rate of heat energy
(qA) that is generated in the control volume must equal the heat energy leaving the control volume, as the
temperature, and hence the energy in the control volume, is constant in a steady-state problem. The heat
energyleaving the control volume is the difference between the ﬂow in at on the left-hand side, qA, and the
ﬂow out on the right-hand side, qðx þ xÞAðx þ xÞ. Thus, energy balance for the control volume can be
written as
sðx þ x=2Þx
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
heat generated
þ qðxÞAðxÞ
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
heat flow in
 qðx þ xÞAðx þ xÞ
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
heat flow out
¼ 0:
Notethattheheatﬂuxesaremultipliedbytheareatoobtainatheheatrate,whereasthesourcesismultiplied
by the length of the segment. Rearranging terms in the above and dividing by x, we obtain
qðx þ xÞAðx þ xÞ  qðxÞAðxÞ
x
¼ sðx þ x=2Þ:
If we take the limit of the above equation as x ! 0, the ﬁrst term coincides with the derivative dðqAÞ=dx
and the second term reduces to sðxÞ. Therefore, the above can be written as
dðqAÞ
dx
¼ s:
ð3:8Þ
s
( )
A x
( ) ( )
q x A x
(
) (
)
q x
x A x
x
+ ∆            + ∆
(
)
A x
x
+ ∆
Furring strips
Furring
strips
Concrete blocks
Concrete
blocks
Siding
Siding
Building paper
Building
paper
∆x
x
l
(x+     )
∆x
2
Figure 3.3
A one-dimensional heat conduction problem.
THE STRONG FORM IN ONE-DIMENSIONAL PROBLEMS
45

Theconstitutiveequationforheatﬂow,whichrelatesthe heatﬂuxtothe temperature, isknownasFourier’s
law and is given by
q ¼ k dT
dx ;
ð3:9Þ
where T is the temperature and k is the thermal conductivity (which must be positive); in SI units, the
dimensions of thermal conductivity are W m1 oC1. A negative sign appears in (3.9) because the heat
ﬂows from high (hot) to low temperature (cold), i.e. opposite to the direction of the gradient of the
temperature ﬁeld.
Inserting (3.9) into (3.8) yields
d
dx
Ak dT
dx


þ s ¼ 0;
0 < x < l:
ð3:10Þ
When Ak is constant, we obtain
Ak d2T
dx2 þ s ¼ 0;
0 < x < l:
ð3:11Þ
At the two ends of the problem domain, either the ﬂux or the temperature must be prescribed; these are the
boundaryconditions.WeconsiderthespeciﬁcboundaryconditionsoftheprescribedtemperatureT atx ¼ l
and prescribed ﬂux q at x ¼ 0. The prescribed ﬂux q is positive if heat (energy) ﬂows out of the bar, i.e.
qðx ¼ 0Þ ¼ q. The strong form for the heat conduction problem is then given by
d
dx
Ak dT
dx


þ s ¼ 0
on
0 < x < l;
 q ¼ k dT
dx ¼ q
on
x ¼ 0;
T ¼ T
on
x ¼ l:
ð3:12Þ
3.1.3
Diffusion in One Dimension2
Diffusion is a process where a material is transported by atomic motion. Thus, in the absence of the motion
of a ﬂuid, materials in the ﬂuid are diffused throughout the ﬂuid by atomic motion. Examples are the
diffusionofperfumeintoaroomwhenaheavilyperfumedpersonwalksin,thediffusionofcontaminantsin
a lake and the diffusion of salt into a glass of water (thewater will get salty by diffusion even in the absence
of ﬂuid motion).
Diffusion also occurs in solids. One of the simplest forms of diffusion in solids occurs when two
materials comein contact witheach other.There are two basicmechanisms fordiffusion insolids:vacancy
diffusion and interstitial diffusion. Vacancy diffusion occurs primarily when the diffusing atoms are of a
similar size. A diffusing atom requires a vacancy in the other solid for it to move. Interstitial diffusion,
schematically depicted in Figure 3.4, occurs when a diffusing atom is small enough to move between the
atoms in the other solid. This type of diffusion requires no vacancy defects.
Let c be the concentration of diffusing atoms with the dimension of atoms m3. The ﬂux of atoms, qðxÞ
(atoms m2 s1), ispositivein the direction from higher to lower concentration. The relationship between
ﬂux and concentration is known as Fick’s ﬁrst law, which is given as
q ¼ k dc
dx ;
2Recommended for Science and Engineering Track.
46
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

where k is the diffusion coefﬁcient, m2 s1. The balance equation for steady-state diffusion can be
developed from Figure 3.4 by the same procedures that we used to derive the heat conduction equation by
imposing conservation of each species of atoms and Fick’s law. The equations are identical in structure to
the steady-state heat conduction equation and differ only in the constants and variables:
d
dx
Ak dc
dx


¼ 0
on
0 < x < l:
3.2
THE WEAK FORM IN ONE DIMENSION
To develop the ﬁnite element equations, the partial differential equations must be restated in an integral
form called the weak form. A weak form of the differential equations is equivalent to the governing
equation and boundary conditions, i.e. the strong form. In many disciplines, the weak form has speciﬁc
names; for example, it is called the principle of virtual work in stress analysis.
To show how weak forms are developed, we ﬁrst consider the strong form of the stress analysis
problem given in (3.7). We start by multiplying the governing equation (3.7a) and the traction boundary
condition(3.7b)by anarbitraryfunctionwðxÞand integrating overthe domainson whichtheyhold:forthe
governing equation, the pertinent domain is the interval ½0; l, whereas for the traction boundary condition,
itisthecross-sectionalareaatx ¼ 0(nointegralisneededbecausethisconditiononlyholdsonlyatapoint,
but we do multiply by the area A). The resulting two equations are
ðaÞ
Z l
0
w d
dx
AE du
dx


þ b


dx ¼ 0
8w;
ðbÞ
wA E du
dx þ t




x¼0
¼ 0
8w:
ð3:13Þ
The function wðxÞ is called the weight function; in more mathematical treatments, it is also called the test
function. In the above, 8w denotes that wðxÞ is an arbitrary function, i.e. (3.13) has to hold for all functions
x
(
) (
)
q x
x A x
x
+ ∆ 
+ ∆
( ) ( )
q x A x
Lattice 
atoms
Diffusing  
atoms
Figure 3.4
Interstitial diffusion in an atomic lattice.
THE WEAK FORM IN ONE DIMENSION
47

wðxÞ. The arbitrariness of the weight function is crucial, as otherwise a weak form is not equivalent to the
strongform(seeSection3.7).Theweightfunctioncanbethoughtofasanenforcer:whateveritmultipliesis
enforced to be zero by its arbitrariness.
You might have noticed that we did not enforce the boundary condition on the displacement in (3.13) by
theweightfunction.ItwillbeseenthatitiseasytoconstructtrialorcandidatesolutionsuðxÞthatsatisfythis
displacement boundary condition, sowewill assume that all candidate solutions of Equation (3.13) satisfy
this boundary condition. Similarly, you will shortly see that it is convenient to have all weight functions
satisfy
wðlÞ ¼ 0:
ð3:14Þ
So we impose this restriction on the set of weight functions.
As you will see, in solving a weak form, a set of admissible solutions uðxÞ that satisfy certain
conditions is considered. These solutions are called trial solutions. They are also called candidate solutions.
One could use (3.13) to develop a ﬁnite element method, but because of the second derivative of uðxÞ
in the expression, very smooth trial solutions would be needed; such smooth trial solutions would be
difﬁcult to construct in more than one dimension. Furthermore, the resulting stiffness matrix would not
be symmetric, because the ﬁrst integral is not symmetric in wðxÞ and uðxÞ: For this reason, we will
transform (3.13) into a form containing only ﬁrst derivatives. This will lead to a symmetric stiffness
matrix, allow us to use less smooth solutions and will simplify the treatment of the traction boundary
condition.
For convenience, we rewrite (3.13a) in the equivalent form:
Z l
0
w d
dx
AE du
dx


dx þ
Z l
0
wb dx ¼ 0
8w:
ð3:15Þ
To obtain aweak form in which only ﬁrstderivativesappear, we ﬁrst recall the rule for taking the derivative
of a product:
d
dx ðwfÞ ¼ w df
dx þ f dw
dx ) w df
dx ¼ d
dx ðwfÞ  f dw
dx :
Integrating the above equation on the right over the domain [0, l], we obtain
Z l
0
w df
dx dx ¼
Zl
0
d
dx ðwfÞdx 
Zl
0
f dw
dx dx:
The fundamental theorem of calculus states that the integral of a derivative of a function is the function
itself. Thistheorem enablesus toreplace the ﬁrst integralon the right-hand side bya set of boundaryvalues
and rewrite the equation as
Z l
0
w df
dx dx ¼ ðwfÞjl
0 
Z l
0
f dw
dx dx  ðwfÞx¼l  ðwfÞx¼0 
Z l
0
f dw
dx dx:
ð3:16Þ
Theaboveformulaisknownasintegrationbyparts.Wewillﬁndthatintegrationbypartsisusefulwhenever
we relate strong forms to weak forms.
48
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

To apply the integration by parts formula to (3.15), let f ¼ AEðdu=dxÞ. Then (3.16) can be written as
Zl
0
w d
dx
AE du
dx


dx ¼
wAE du
dx


l
0

Zl
0
dw
dx AE du
dx dx:
ð3:17Þ
Using (3.17), (3.15) can be written as follows:
wAE du
dx
|ﬄ{zﬄ}
s
0
B
B
@
1
C
C
A

l
0

Z l
0
dw
dx AE du
dx dx þ
Z l
0
wb dx ¼ 0
8w with wðlÞ ¼ 0:
ð3:18Þ
We note that by the stress–strain law and strain–displacement equations, the underscored boundary term is
the stress s (as shown), so the above can be rewritten as
ðwAsÞx¼l  ðwAsÞx¼0 
Z l
0
dw
dx AE du
dx dx þ
Zl
0
wb dx ¼ 0
8w with wðlÞ ¼ 0:
The ﬁrst term in the above vanishes because of (3.14): this is why it is convenient to construct weight
functions that vanish on prescribed displacement boundaries. Though the term looks quite insigniﬁcant, it
would lead to loss of symmetry in the ﬁnal equations.
From (3.13b), we can see that the second term equals ðwAtÞx¼0, so the above equation becomes
Z l
0
dw
dx AE du
dx dx ¼ ðwAtÞx¼0 þ
Zl
0
wb dx
8w with wðlÞ ¼ 0:
ð3:19Þ
Let us recapitulate what we have done. We have multiplied the governing equation and traction
boundary by an arbitrary, smooth weight function and integrated the products over the domains where
they hold. We have added the expressions and transformed the integral so that the derivatives are of lower
order.
We now come to the crux of this development: We state that the trial solution that satisﬁes the above for
all smooth wðxÞ with wðlÞ ¼ 0 is the solution. So the solution is obtained as follows:
Find uðxÞ among the smooth functions that satisfy uðlÞ ¼ u such that
Z l
0
dw
dx AE du
dx dx ¼ ðwAtÞx¼0 þ
Zl
0
wb dx
8w with wðlÞ ¼ 0:
ð3:20Þ
The above is called the weak form. The name originates from the fact that solutions to the weak form need
not be as smooth as solutions of the strong form, i.e. they have weaker continuity requirements. This is
explained later.
Understandinghowasolutiontoadifferentialequationcanbeobtainedbythisratherabstractstatement,
and why it is a useful solution, is not easy. It takes most students considerable thought and experience to
comprehend the process. To facilitate this, we will give two examples in which a solution is obtained to a
speciﬁc problem.
THE WEAK FORM IN ONE DIMENSION
49

Wewillshowinthenextsectionthattheweakform(3.20)isequivalenttotheequilibriumequation(3.7a)
and traction boundary condition (3.7b). In other words, the trial solution that satisﬁes (3.20) is the solution
ofthe strong form.Theproofofthisstatement inSection3.4isacrucialstep inthe theoryofﬁniteelements.
In getting to (3.19), we have gone through a set of mathematical steps that are correct, but we have no basis
for saying that the solution to the weak form is a solution of the strong form unless we can show that (3.20)
implies (3.7).
It is important to remember that the trial solutions uðxÞ must satisfy the displacement boundary
conditions (3.7c). Satisfying the displacement boundary condition is essential for the trial solutions, so
theseboundaryconditionsareoftencalledessentialboundaryconditions.WewillseeinSection3.4thatthe
traction boundary conditions emanate naturally from the weak form (3.20), so trial solutions need not be
constructed to satisfy the traction boundary conditions. Therefore, these boundary conditions are called
natural boundary conditions. Additional smoothness requirements on the trial solutions will be discussed
in Sections 3.3 and 3.9.
A trial solution that is smooth and satisﬁes the essential boundary conditions is called admissible.
Similarly, aweight function that is smooth and vanishes on essential boundaries is admissible. When weak
forms are used to solve a problem, the trial solutions and weight functions must be admissible.
Note that in (3.20), the integral is symmetric in w and u. This will lead to a symmetric stiffness matrix.
Furthermore, the highest order derivative that appears in the integral is of ﬁrst order: this will have
important ramiﬁcations on the construction of ﬁnite element methods.
3.3
CONTINUITY
Although we have now developed the weak form, we still have not speciﬁed how smooth the weight
functions and trial solutions must be. Before examining this topic, we will examine the concept of
smoothness, i.e. continuity. A function is called a Cn function if its derivatives of order j for 0  j  n
existandarecontinuousfunctionsintheentiredomain.WewillbeconcernedmainlywithC0; C1 andC1
functions. Examples of these are illustrated in Figure 3.5. As can be seen, a C0 function is piecewise
continuously differentiable, i.e. its ﬁrstderivativeis continuous exceptat selected points. The derivative of
a C0 function is a C1 function. So for example, if the displacement is a C0 function, the strain is a C1
function.Similarly,ifatemperatureﬁeldisaC0 function,theﬂuxisaC1 functioniftheconductivityisC0.
In general, the derivative of a Cn function is Cn1.
The degreeofsmoothness ofC0; C1 and C1 functionscan beremembered by some simple mnemonic
devices. As can be seen from Figure 3.5, a C1 function can have both kinks and jumps. A C0 function has
no jumps, i.e. discontinuities, but it has kinks. A C1 function has no kinks or jumps. Thus, there is a
progression of smoothness as the superscript increases that is summarized in Table 3.1. In the literature,
jumpsinthefunctionareoftencalledstrongdiscontinuities,whereaskinksarecalledweakdiscontinuities.
ItisworthmentioningthatCADdatabasesforsmoothsurfacesusuallyemployfunctionsthatareatleast
C1 ;the most common are spline functions. Otherwise, the surfacewould possess kinksstemming from the
function description, e.g. in a car there would be kinks in the sheet metal wherever C1 continuity is not
observed. We will see that ﬁnite elements usually employ C0 functions.
x 
f(x) 
0
C  
C –1
1
C
Jumps 
Kinks
Figure 3.5
Examples of C1, C0 and C1 functions.
50
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

3.4
THE EQUIVALENCE BETWEEN THE WEAK AND STRONG FORMS
In the previous section, we constructed the weak form from the strong form. To show the equivalence
between the two, we will now show the converse: the weak form implies the strong form. This will insure
that when we solve the weak form, then we have a solution to the strong form.
The proof that the weak form implies the strong form can be obtained by simply reversing the steps by
whichweobtainedtheweakform.Soinsteadofusingintegrationbypartstoeliminatethesecondderivative
of uðxÞ, we reverse the formula to obtain an integral with a higher derivative and a boundary term. For this
purpose, interchange the terms in (3.17), which gives
Zl
0
dw
dx AE du
dx dx ¼
wAE du
dx


l
0

Z l
0
w d
dx
AE du
dx


dx:
Substituting the above into (3.20) and placing the integral terms on the left-hand side and the boundary
terms on the right-hand side gives
Z l
0
w d
dx
AE du
dx


þ b


dx þ wAðt þ sÞx¼0 ¼ 0
8w with wðlÞ ¼ 0:
ð3:21Þ
ThekeytomakingtheproofpossibleisthearbitrarinessofwðxÞ.Itcanbeassumedtobeanythingweneedin
order to prove the equivalence. Our selection of wðxÞ is guided by having seen this proof before – What we
will do is not immediately obvious, but you will see it works! First, we let
w ¼ cðxÞ d
dx
AE du
dx


þ b


;
ð3:22Þ
where cðxÞ is smooth, cðxÞ > 0 on 0 < x < l and cðxÞ vanishes on the boundaries. An example of a
function satisfying the above requirements is cðxÞ ¼ xðl  xÞ. Because of how cðxÞ is constructed, it
follows that wðlÞ ¼ 0, so the requirement that w ¼ 0 on the prescribed displacement boundary, i.e. the
essential boundary, is met.
Inserting (3.22) into (3.21) yields
Z l
0
c d
dx
AE du
dx


þ b

2
dx ¼ 0:
ð3:23Þ
The boundary term vanishes because we have constructed the weight function so that wð0Þ ¼ 0. As the
integrand in (3.23) is the product of a positive function and the square of a function, it must be positive at
Table 3.1
Smoothness of functions.
Smoothness
Kinks
Jumps
Comments
C 1
Yes
Yes
Piecewise continuous
C0
Yes
No
Piecewise continuously differentiable
C1
No
No
Continuously differentiable
THE EQUIVALENCE BETWEEN THE WEAK AND STRONG FORMS
51

everypoint in the problem domain. So the only way the equality in (3.23) is met is if the integrandis zero at
every point! Hence, it follows that
d
dx
AE du
dx


þ b ¼ 0;
0 < x < l;
ð3:24Þ
which is precisely the differential equation in the strong form, (3.7a).
From (3.24) it follows that the integral in (3.21) vanishes, so we are left with
ðwAðt þ sÞÞx¼0 ¼ 0
8w with wðlÞ ¼ 0:
ð3:25Þ
As theweight function is arbitrary, we select it such that wð0Þ ¼ 1 and wðlÞ ¼ 0. It is very easy to construct
suchafunction,forexample,ðl  xÞ=lisasuitableweightfunction;anysmoothfunctionthatyoucandraw
on the interval [0, l] that vanishes at x ¼ l is also suitable.
As the cross-sectional area A(0) 6¼ 0 and wð0Þ 6¼ 0, it follows that
s ¼ t
at
x ¼ 0;
ð3:26Þ
which is the natural (prescribed traction) boundary condition, Equation (3.7b).
The last remaining equation of the strong form, the displacement boundary condition (3.7c), is satisﬁed
by all trial solutions by construction, i.e. as can be seen from (3.20) we required that uðlÞ ¼ u . Therefore,
we can conclude that the trial solution that satisﬁes the weak form satisﬁes the strong form.
Another way to prove the equivalence to the strong form starting from (3.20) that is more instructive
about the character of the equivalence is as follows. We ﬁrst let
rðxÞ ¼ d
dx
AE du
dx


þ b
for
0 < x < l
and
r0 ¼ Að0Þsð0Þ þ t:
The variable rðxÞ is called the residual; rðxÞ is the error in Equation (3.7a) and r0 is the error in the traction
boundary condition (3.7b). Note that when rðxÞ ¼ 0, the equilibrium equation (3.7a) is met exactly and
when r0 ¼ 0 the traction boundary condition (3.7b) is met exactly.
Equation (3.20) can then be written as
Z l
0
wðxÞrðxÞ dx þ wð0Þr0 ¼ 0
8w with wðlÞ ¼ 0:
ð3:27Þ
We now prove that rðxÞ ¼ 0 by contradiction. Assume that at some point 0 < a < l, rðaÞ 6¼ 0. Then
assumingrðxÞissmooth,itmustbenonzeroinasmallneighborhoodofx ¼ aasshowninFigure3.6(a).We
havecomplete latitudeinthe constructionofwðxÞ asitisan arbitrarysmoothfunction.Soweconstruct itas
shown in Figure 3.6(b). Equation (3.27) then becomes
Z l
0
wðxÞrðxÞ dx þ wð0Þr0  1
2 rðaÞ 6¼ 0:
52
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

The above implies that (3.27) is violated, so by contradiction rðaÞ cannot be nonzero. This can be repeated
at anyother point inthe open interval 0 < x < l,so it follows that rðxÞ ¼ 0 for 0 < x < l, i.e. thegoverning
equation (3.27) is met. We now let wð0Þ ¼ 1; as the integral vanishes because rðxÞ ¼ 0 for 0 < x < l, it
follows from (3.27) that r0 ¼ 0 and hence the traction boundary condition is also met.
We can see from the above why we have said that multiplying the equation, or to be more precise
the residual, by the weight function enforces the equation: because of the arbitrariness of the weight
function, anything it multiplies must vanish. The proofs of the equivalence of the strong and weak
forms hinge critically on the weak form holding for any smooth function. In the ﬁrst proof (Equations
(3.7)–(3.20)),weselectedaspecialarbitraryweightfunction(basedonforesightastohowtheproofwould
evolve) that has to be smooth, whereas in the second proof, we used the arbitrariness and smoothness
directly. Theweight function in Figure 3.6(b) may not appear particularly smooth, butit is as smooth as we
need for this proof.
Example 3.1
Develop the weak form for the strong form:
ðaÞ
d
dx
AE du
Ex


þ 10Ax ¼ 0;
0 < x < 2;
ðbÞ
ux¼0  uð0Þ ¼ 104;
ðcÞ
sx¼2 ¼
E du
dx


x¼2
¼ 10:
ð3:28Þ
Equation (3.28c) is a condition on the derivative of uðxÞ, so it is a natural boundary condition; (3.28b) is a
condition on uðxÞ, so it is an essential boundary condition. Therefore, as the weight function must vanish
on the essential boundaries, we consider all smooth weight functions wðxÞ such that wð0Þ ¼ 0. The trial
solutions uðxÞ must satisfy the essential boundary condition uð0Þ ¼ 104.
x  
wr  
( )
w x  
a
•
x  
a  
x
a  
( )
w x  
wr  
a  
a
1 
1 
x  
( )
r x  
( )
r x  
a
δ
δ
x
x
(a)
(b)
(c)
Figure 3.6
Illustrationofthe equivalencebetweentheweakand strongforms:(a) anexample oftheresidualfunction;
(b)choiceoftheweightfunctionand(c)productofresidualandweightfunctions.Ontheleft,theprocedureisshownfora
C function; on the right for a C1 function.
THE EQUIVALENCE BETWEEN THE WEAK AND STRONG FORMS
53

We start by multiplying the governing equation and the natural boundary condition over the domains
where they hold by an arbitrary weight function:
ðaÞ
Z2
0
w
d
dx
AE du
dx




þ 10Ax


dx ¼ 0
8wðxÞ;
ðbÞ
ðwAðE du
dx  10ÞÞx¼2 ¼ 0
8wð2Þ:
ð3:29Þ
Nextweintegratetheﬁrstequationintheabovebyparts,exactlyaswedidingoingfrom(3.13a)to(3.17):
Z2
0
w
d
dx AE du
dx




dx ¼
wAE du
dx


x¼2
x¼0

Z2
0
dw
dx AE du
dx dx:
ð3:30Þ
We have constructed the weight functions so that wð0Þ ¼ 0; therefore, the ﬁrst term on the RHS of the
above vanishes at x ¼ 0. Substituting (3.30) into (3.29a) gives

Z2
0
AE dw
dx
du
dxdx þ
Z2
0
10wAx dx þ
wAE du
dx


x¼2
¼ 0
8wðxÞ with wð0Þ ¼ 0:
ð3:31Þ
Substituting (3.29b) into the last term of (3.31) gives (after a change of sign)
Z2
0
AE dw
dx
du
dx dx 
Z2
0
10wAx dx  10ðwAÞx¼2 ¼ 0
8wðxÞ with wð0Þ ¼ 0:
ð3:32Þ
Thus, the weak form is as follows: ﬁnd uðxÞ such that for all smooth uðxÞ with uð0Þ ¼ 104, such that
(3.32) holds for all smooth wðxÞ with wð0Þ ¼ 0.
Example 3.2
Develop the weak form for the strong form:
d2u
dx2 ¼ 0
on
1 < x < 3;
du
dx


x¼1
¼ 2;
uð3Þ ¼ 1:
ð3:33Þ
The conditions on the weight function and trial solution can be inferred from the boundary conditions.
The boundary point x ¼ 1 is a natural boundary as the derivative is prescribed there, whereas the
boundary x ¼ 3 is an essential boundary as the solution itself is prescribed. Therefore, we require that
wð3Þ ¼ 0 and that the trial solution satisﬁes the essential boundary condition uð3Þ ¼ 1.
Next we multiply the governing equation by the weight function and integrate over the problem
domain; similarly, we multiply the natural boundary condition by the weight function, which yields
ðaÞ
Z3
1
w d2u
dx2 dx ¼ 0;
ðbÞ
w du
dx  2




x¼1
¼ 0:
ð3:34Þ
54
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Integration by parts of the integrand in (3.34a) gives
Z3
1
w d2u
dx2 dx ¼
w du
dx


x¼3

w du
dx


x¼1

Z3
1
dw
dx
du
dx dx:
ð3:35Þ
As wð3Þ ¼ 0, the ﬁrst term on the RHS in the above vanishes. Substituting (3.35) into (3.34a) gives

Z3
1
dw
dx
du
dx dx 
w du
dx


x¼1
¼ 0:
ð3:36Þ
Adding (3.34b) to (3.36) gives
Z3
1
dw
dx
du
dx dx þ 2wð1Þ ¼ 0:
ð3:37Þ
Sotheweakformis:ﬁndasmoothfunctionuðxÞwithuð3Þ ¼ 1forwhich(3.37) holdsforallsmoothwðxÞ
with wð3Þ ¼ 0.
To show that the weak form implies the strong form, we reverse the preceding steps. Integration by
parts of the ﬁrst term in (3.37) gives
Z3
1
dw
dx
du
dx dx ¼
w du
dx


3
1

Z3
1
w d2u
dx2 dx:
ð3:38Þ
Next we substitute (3.38) into (3.37), giving
w du
dx


x¼3

w du
dx


x¼1

Z3
1
w d2u
dx2 dx þ 2wð1Þ ¼ 0:
ð3:39Þ
Since on the essential boundary, the weight function vanishes, i.e. wð3Þ ¼ 0, the ﬁrst term in the above
drops out. Collecting terms and changing signs give
Z3
1
w d2u
dx2 dx þ
w du
dx  2




x¼1
¼ 0:
ð3:40Þ
We now use the same arguments as Equations (3.22)–(3.26). As wðxÞ is arbitrary, let
w ¼ cðxÞ d2uðxÞ
dx2
;
where
cðxÞ ¼
0;
x ¼ 1;
> 0; 1 < x < 3;
0;
x ¼ 3:
8
<
:
THE EQUIVALENCE BETWEEN THE WEAK AND STRONG FORMS
55

Then (3.40) becomes
Z3
1
cðxÞ d2u
dx2

2
dx ¼ 0:
As the integrand is positive in the interval ½1; 3, it follows that the only way that the integrand can
vanish is if
d2uðxÞ
dx2
¼ 0
for
1 < x < 3;
which is the differential equation in the strong form (3.33).
Now let wðxÞ be a smooth function that vanishes at x ¼ 3 but equals one at x ¼ 1. You can draw an
inﬁnite number of such functions: any curve between those points with the speciﬁed end values will do.
As we already know that the integral in (3.40) vanishes, we are left with
w du
dx  2




x¼1
¼ 0
)
du
dx  2


x¼1
¼ 0;
so the natural boundary condition is satisﬁed. As the essential boundary condition is satisﬁed by all trial
solutions, we can then conclude that the solution of the weak form is the solution to the strong form.
Example 3.3
Obtain a solution to the weak form in Example 3.1 by using trial solutions and weight functions of the
form
uðxÞ ¼ a0 þ a1x;
wðxÞ ¼ b0 þ b1x;
where a0 and a1 are unknown parameters and b0 and b1 are arbitrary parameters. Assume that A is
constant and E ¼ 105. To be admissible theweight function must vanish at x ¼ 0, so b0 ¼ 0. For the trial
solution to be admissible, it must satisfy the essential boundary condition uð0Þ ¼ 104, so a0 ¼ 104.
From this simpliﬁcation, it follows that only one unknown parameter and one arbitrary parameter
remain, and
uðxÞ ¼ 104 þ a1x;
duðxÞ
dx
¼ a1;
wðxÞ ¼ b1x;
dw
dx ¼ b1:
ð3:41Þ
Substituting the above into the weak form (3.32) yields
Z2
0
b1a1E dx 
Z2
0
b1x 10 dx  ðb1x 10Þx¼2 ¼ 0:
Evaluating the integrals and factoring out b1 gives
b1ð2a1E  20  20Þ ¼ 0:
56
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

As the above must hold for all b1, it follows that the term in the parentheses must vanish, so
a1 ¼ 20=E ¼ 2  104. Substituting this result into (3.41) gives the weak solution, which we indicate
by superscript ‘lin’ as it is obtained from linear trial solutions: ulin ¼ 104ð1 þ 2xÞ and slin ¼ 20 (the
stress-strain lawmust beused toobtain thestresses). Theresults are shownin Figure3.7andcompared to
the exact solution given by
uexðxÞ ¼ 104ð1 þ 3x  x3=6Þ;
sexðxÞ ¼ 10ð3  x2=2Þ:
Observe that even this very simple linear approximation for a trial solution gives a reasonably accurate
result, but it is not exact. We will see the same lack of exactness in ﬁnite element solutions.
Repeat the above with quadratic trial solutions and weight functions
uðxÞ ¼ a0 þ a1x þ a2x2;
wðxÞ ¼ b0 þ b1x þ b2x2:
As before, because of the conditions on the essential boundaries, a0 ¼ 104 and b0 ¼ 0. Substituting the
above ﬁelds with the given values of a0 and b0 into the weak form gives
Z2
0
ðb1 þ 2b2xÞðEða1 þ 2a2xÞÞdx 
Z2
0
ðb1x þ b2x2Þ10 dx  ððb1x þ b2x2Þ 10Þx¼2 ¼ 0:
Integrating, factoring out b1, b2 and rearranging the terms gives
b1½Eð2a1 þ 4a2Þ  40 þ b2
4a1 þ 32a2
3


E  200
3


¼ 0:
As the above must hold for arbitrary weight functions, it must hold for arbitrary b1 and b2. Therefore, the
coefﬁcientsofb1 andb2 mustvanish(recallthescalarproducttheorem),whichgivesthefollowinglinear
algebraic equation in a1 and a2:
E
2
4
4
32
3
2
4
3
5 a1
a2
"
#
¼
40
200
3
2
4
3
5:
(x)
ex
u
(x)
quad
u
(x)
lin
u
(x)
lin
σ
(x)
quad
σ
(x)
ex
σ
Displacements (×105)
Stresses
60
55
50
45
40
35
30
25
20
15
10
30
28
26
24
22
20
18
16
14
12
10
0
(a)
(b)
0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
Figure 3.7
Comparison of linear (lin) and quadratic (quad) approximations to the exact solution of (a) displace-
ments and (b) stresses.
THE EQUIVALENCE BETWEEN THE WEAK AND STRONG FORMS
57

The solution is a1 ¼ 3  104 and a2 ¼ 0:5  104. The resulting displacements and stresses are
uquad ¼ 104ð1 þ 3x  0:5x2Þ;
squad ¼ 10ð3  xÞ:
Theweak solution is shown in Figure 3.7, from which you can see that the two-parameter, quadratic trial
solution matches the exact solution more closely than the one-parameter linear trial solution.
3.5
ONE-DIMENSIONAL STRESS ANALYSIS WITH ARBITRARY
BOUNDARY CONDITIONS
3.5.1
Strong Form for One-Dimensional Stress Analysis
We will now consider a more general situation, where instead of specifying a stress boundary condition
at x ¼ 0 and a displacement boundary condition at x ¼ l, displacement and stress boundary conditions
can be prescribed at either end. For this purpose, we will need a more general notation for the
boundaries.
The boundary of the one-dimensional domain, which consists of two end points, is denoted by . The
portion of the boundary where the displacements are prescribed is denoted by u ; the boundary where the
tractionisprescribedisdenotedbyt.Inthisgeneralnotation,bothu andt canbeemptysets(nopoints),
one point or two points. The traction and displacement both cannot be prescribed at the same boundary
point. Physically, this can be seen to be impossible by considering a bar such as that in Figure 3.2. If
we could prescribe both the displacement and the force on the right-hand side, this would mean that
the deformation of the bar is independent of the applied force. It would also mean that the material
properties have no effect on the force–displacement behavior of the bar. Obviously, this is physically
unrealistic, so any boundary point is either a prescribed traction or a prescribed displacement
boundary. We write this as t \ u ¼ 0. We will see from subsequent examples that this can be
generalized to other systems: Natural boundary conditions and essential boundary conditions cannot
be applied at the same boundary points.
We will often call boundaries with essential boundary conditions essential boundaries; similarly,
boundaries with natural boundary conditions will be called natural boundaries. We can then say that a
boundary cannot be both a natural and an essential boundary. It also follows from the theory of boundary
value problems that one type of boundary condition is needed at each boundary point, i.e. we cannot have
anyboundaryatwhichneitheranessentialnoranaturalboundaryconditionisapplied.Thus,anyboundary
iseitheranessentialboundaryoranaturalboundaryandtheirunionistheentireboundary.Mathematically,
this can be written as t [ u ¼ .
To summarize the above, at any boundary, either the function or its derivative must be speciﬁed, but we
cannot specify both at the same boundary. So any boundary must be an essential boundary or a natural
boundary, but it cannot be both. These conditions arevery important and can be mathematically expressed
by the two conditions that we have stated above:
t [ u ¼ ;
t \ u ¼ 0:
ð3:42Þ
The two boundaries are said to be complementary: the essential boundary plus its complement, the natural
boundary, constitute the total boundary, and vice versa.
Using the above notation, we summarize the strong form for one-dimensional stress analysis (3.7) in
Box 3.1.
58
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Box 3.1. Strong form for 1D stress analysis
d
dx
AE du
dx


þ b ¼ 0;
0 < x < l;
sn ¼ En du
dx ¼ t
on
t;
u ¼ u
on
u:
ð3:43Þ
In the above, we have added a unit normal to the body and denoted it by n; as can be seen from Figure 3.2,
n ¼ 1 at x ¼ 0andn ¼ þ1 at x ¼ l.Thistrickenablesustowritetheboundaryconditionintermsofthe
tractions applied at either end. For example, when a positive force per unit area is applied at the left-hand
end of the bar in Figure 3.2, the stress at that end is negative, i.e. compressive, and sn ¼ s ¼ t. At any
right-hand boundary point, n ¼ þ1 and so sn ¼ s ¼ t.
3.5.2
Weak Form for One-Dimensional Stress Analysis
In this section, we will develop the weak form for one-dimensional stress analysis (3.43), with arbitrary
boundary conditions. We ﬁrst rewrite the formula for integration by parts in the notation introduced in
Section 3.2:
Z

w df
dx dx ¼ ðwfnÞj 
Z

f dw
dx dx ¼ ðwfnÞju þ ðwfnÞjt 
Z

f dw
dx dx:
ð3:44Þ
Intheabove,thesubscriptontheintegralindicatesthattheintegralisevaluatedovertheone-dimensional
problem domain, i.e. the notation  indicates any limits of integration, such as ½0; l, ½a; b. The subscript 
indicates that the preceding quantity is evaluated at all boundary points, whereas the subscripts u and t
indicatethattheprecedingquantitiesareevaluatedontheprescribeddisplacementandtractionboundaries,
respectively. The second equality follows from the complementarity of the traction and displacement
boundaries: Since, as indicated by (3.42), the total boundary is the sum of the traction and displacement
boundaries, the boundary term can be expressed as the sum of the traction and displacement boundaries.
The weight functions are constructed so that w ¼ 0 on u, and the trial solutions are constructed so that
u ¼ u on u.
Wemultiplytheﬁrsttwoequationsinthestrongform(3.43)bytheweightfunctionandintegrateoverthe
domainsoverwhichtheyhold: thedomain forthe differentialequation andthedomain t forthetraction
boundary condition. This gives
ðaÞ
Z

w
d
dx
AE du
dx


þ b


dx ¼ 0
8w;
ðbÞ
ðwAðt  snÞÞjt¼ 0
8w:
ð3:45Þ
Denoting f ¼ AEðdu=dxÞ and using integration by parts (3.44) of the ﬁrst term in (3.45a) and combining
with (3.45b) yields
ðwAsnÞju þ ðwAtÞjt 
Z

dw
dx AE du
dx dx þ
Z

wb dx ¼ 0
8w with w ¼ 0 on u:
ð3:46Þ
ONE-DIMENSIONAL STRESS ANALYSIS WITH ARBITRARY BOUNDARY CONDITIONS
59

The boundary term on u vanishes because wju ¼ 0. The weak form then becomes
Z

dw
dx AE du
dx dx ¼ ðwAtÞjt þ
Z

wb dx
8w with w ¼ 0 on u:
Atthispoint,weintroducesomenewnotation,sowewillnotneedtokeeprepeatingthephrase‘uðxÞissmooth
enoughandsatisﬁestheessentialboundarycondition’.Forthispurpose,wewilldenotethesetofallfunctions
thataresmoothenoughbyH1.H1 functionsareC0 continuous.Mathematically,thisisexpressedasH1  C0.
However,notallC0 functionsaresuitabletrialsolutions.WewillfurtherelaborateonthisinSection3.9; H1 is
a space of functions with square integrable derivatives.
We denote the set of all functions that are admissible trial solutions by U, where
U ¼
uðxÞ uðxÞ 2 H1; u ¼ u on u



:
ð3:47Þ
AnyfunctioninthesetU hastosatisfyallconditionsthatfollowtheverticalbar.Thus,theabovedenotesthe
set of all functions that are smooth enough (the ﬁrst condition after the bar) and satisfy the essential
boundary condition (the condition after the comma). Thus, we can indicate that a function uðxÞ is an
admissible trial solution by stating that uðxÞ is in the set U, or uðxÞ 2 U.
We will similarly denote the set of all admissible weight functions by
U0 ¼
wðxÞ wðxÞ 2 H1; w ¼ 0 on u



:
ð3:48Þ
Notice that this set of functions is identical to U, except that the weight functions must vanish on the
essential boundaries. This space is distinguished from U by the subscript nought.
Such setsoffunctionsare oftencalled functionspaces,orjust spaces.ThefunctionspaceH1 containsan
inﬁnite number of functions. Therefore, it is called an inﬁnite-dimensional set. For a discussion of various
spaces, the reader may wish to consult Ciarlet (1978), Oden and Reddy (1978) and Hughes (1987).
With these deﬁnitions, we can write the weak form ((3.45), (3.47) and (3.48)) as in Box 3.2.
Box 3.2. Weak form for 1D stress analysis
Find uðxÞ 2 U such that
Z

dw
dx AE du
dx dx ¼ ðwAtÞjt þ
Z

wb dx
8w 2 U0:
ð3:49Þ
Note that the functions wðxÞ and uðxÞ appear symmetrically in the ﬁrst integral in (3.49), whereas they do
not in (3.45a). In (3.49), both the trial solutions and weight functions appear as ﬁrst derivatives, whereas in
the ﬁrst integral in (3.45a), the weight functions appear directly and the trial solution appears as a second
derivative. It will be seen that consequently (3.49) leads to a symmetric stiffness matrix and a set of
symmetric linear algebraic equations, whereas (3.45a) does not.
3.6
ONE-DIMENSIONAL HEAT CONDUCTION WITH ARBITRARY
BOUNDARY CONDITIONS 3
3.6.1
Strong Form for Heat Conduction in One Dimension with Arbitrary
Boundary Conditions
Following the same procedure as in Section 3.5.1, the portion of the boundary where the temperature is
prescribed, i.e. the essential boundary, is denoted by T and the boundary where the ﬂux is prescribed is
3Recommended for Science and Engineering Track.
60
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

denoted by q ; these are the boundaries with natural boundary conditions. These boundaries are
complementary, so
q [ T ¼ ;
q \ T ¼ 0:
ð3:50Þ
Withtheunitnormalusedin(3.43),wecanexpressthenaturalboundaryconditionasqn ¼ q.Forexample,
positive ﬂux q causes heat inﬂow (negative q ) on the left boundary point where qn ¼ q ¼ q and heat
outﬂow (positive q ) on the right boundary point where qn ¼ q ¼ q.
We can then rewrite the strong form (3.12) as shown in Box. 3.3.
Box 3.3. Strong form for 1D heat conduction problems
d
dx
Ak dT
dx


þ s ¼ 0
on
;
qn ¼ kn dT
dx ¼ q
on
q;
T ¼ T
on
T:
ð3:51Þ
3.6.2
Weak Form for Heat Conduction in One Dimension with Arbitrary
Boundary Conditions
Weagainmultiplytheﬁrsttwoequationsinthestrongform(3.51)bytheweightfunctionandintegrateover
the domainsoverwhich theyhold, the domain forthe differential equationand the domainq forthe ﬂux
boundary condition, which yields
ðaÞ
Z

w d
dx
Ak dT
dx


dx þ
Z

ws dx ¼ 0
8w;
ðbÞ
ðwAðqn  qÞÞjq¼ 0
8w:
ð3:52Þ
Using integration by parts of the ﬁrst term in (3.52a) gives
Z

dw
dx Ak dT
dx dx ¼
wAk dT
dx n



þ
Z

ws dx
8w with w ¼ 0 on T:
ð3:53Þ
Recalling that w ¼ 0 on T and combining (3.53) with (3.52b) gives
Box 3.4: Weak form for 1D heat conduction problems
Find TðxÞ 2 U such that
Z

dw
dx Ak dT
dx dx ¼ ðwAqÞ

q þ
Z

ws dx
8w 2 U0:
ð3:54Þ
Notice the similarity between (3.54) and (3.49).
ONE-DIMENSIONAL HEAT CONDUCTION WITH ARBITRARY BOUNDARY CONDITIONS
61

3.7
TWO-POINT BOUNDARY VALUE PROBLEM WITH GENERALIZED
BOUNDARY CONDITIONS 4
3.7.1
Strong Form for Two-Point Boundary Value Problems with Generalized
Boundary Conditions
Theequations developed inthis chapterforheat conduction,diffusion and elasticityproblems are allof the
following form:
d
dx
A d
dx


þ f ¼ 0
on
:
ð3:55Þ
Such one-dimensional problems are called two-point boundary value problems. Table 3.2 gives the
particular meanings of the above variables and parameters for several applications. The natural boundary
conditions can also be generalized as (based on Becker et al. (1981))
n d
dx  


þ bð  Þ ¼ 0
on
:
ð3:56Þ
Equation (3.56) is a natural boundary condition because the derivative of the solution appears in it. (3.56)
reduces to the standard natural boundary conditions considered in the previous sections when bðxÞ ¼ 0.
Notice that the essential boundary condition can be recovered as a limiting case of (3.56) when bðxÞ is a
penalty parameter, i.e. a large number (see Chapter 2). In this case,   and Equation (3.56) is called a
generalized boundary condition.
An example of the above generalized boundary condition is an elastic bar with a spring attached as
shown in Figure 3.8. In this case, bðlÞ ¼ k and (3.56) reduces to
EðlÞnðlÞ du
dx ðlÞ  t


þ kðuðlÞ  uÞ ¼ 0
at
x ¼ l;
ð3:57Þ
where bðlÞ ¼ k is the spring constant. If the spring stiffness is set to a very largevalue, the above boundary
condition enforces uðlÞ ¼ u; if we let k ¼ 0, the above boundary condition corresponds to a prescribed
traction boundary. In practice, such generalized boundary conditions (3.57) are often used to model the
inﬂuence of the surroundings. Forexample, if the bar is a simpliﬁed model of a building and its foundation,
the spring can represent the stiffness of the soil.
4Recommended for Advanced Track.
Table 3.2
Conversion table for alternate physical equations of the general form (3.55)
and (3.56).
Field/parameter
Elasticity
Heat conduction
Diffusion

u
T
c

E
k
k
f
b
s
s

t
q
q

u
T
c

t
q
q

u
T
c
b
k
h
h
62
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Anotherexampleoftheapplicationofthisboundaryconditionisconvectiveheattransfer,whereenergyis
transferred between the surface of the wall and the surrounding medium. Suppose convective heat transfer
occurs at x ¼ l. Let TðlÞ be the wall temperature at x ¼ l and T be the temperature in the medium. Then the
ﬂux at the boundary x ¼ l is given by qðlÞ ¼ hðTðlÞ  TÞ, so bðlÞ ¼ h and the boundary condition is
kn du
dx þ hðTðlÞ  TÞ ¼ 0;
ð3:58Þ
where h is convection coefﬁcient, which has dimensions of W m2 oC1. Note that when the convection
coefﬁcient is very large, the temperature T is immediately felt at x ¼ l and thus the essential boundary
condition is again enforced as a limiting case of the natural boundary condition.
There are two approaches to deal with the boundary condition (3.56). We will call them the penalty and
partition methods. In the penalty method, the essential boundary condition isenforced as a limiting case of
the natural boundary condition by equating bðxÞ to a penalty parameter. The resulting strong form for the
penalty method is given in Box. 3.5.
Box 3.5. General strong form for 1D problems-penalty method
d
dx
A d
dx


þ f ¼ 0
on
;
n d
dx  


þ bð  Þ ¼ 0
on
:
ð3:59Þ
In the partition approach, the total boundary is partitioned into the natural boundary, , and the
complementary essential boundary, . The natural boundary condition has the generalized form deﬁned
by Equation (3.56). The resulting strong form for the partition method is summarized in Box 3.6.
Box 3.6. General strong form for 1D problems-partition method
ðaÞ
d
dx
A d
dx


þ f ¼ 0
on
;
ðbÞ
n d
dx  


þ bð  Þ ¼ 0
on
;
ðcÞ
 ¼ 
on
:
ð3:60Þ
3.7.2
Weak Form for Two-Point Boundary Value Problems with Generalized
Boundary Conditions
In this section, we will derive the general weak form for two-point boundary value problems. Both the
penalty and partition methods described in Section 3.7.1 will be considered. To obtain the general weak
( )
u l
( )
ku l
-
u
t
k
Figure 3.8
An example of the generalized boundary for elasticity problem.
TWO-POINT BOUNDARY VALUE PROBLEM WITH GENERALIZED BOUNDARY CONDITIONS
63

formforthepenaltymethod,wemultiplythetwoequationsinthestrongform(3.59)bytheweightfunction
and integrate over the domains over which they hold: the domain  for the differential equation and the
domain  for the generalized boundary condition.
ðaÞ
Z

w
d
dx
A d
dx


þ f


dx ¼ 0
8w;
ðbÞ
wA
n d
dx  


þ bð  Þ



¼ 0
8w:
ð3:61Þ
After integrating by parts the ﬁrst term in (3.61a) and adding (3.61b), the general weak form for 1D
problems is summarized in Box 3.7.
BOX 3.7. General weak form for 1D problems-penalty method
Find ðxÞ 2 H1 such that
Z

dw
dx A d
dx dx 
Z

wf dx  wAð  bð  ÞÞ

¼ 0
8w 2 H1:
ð3:62Þ
Note that in the penalty method,   , the weight function is arbitrary on , i.e. 8wðxÞ 2 H1, and the
solution isnot a priori enforced tovanish on the essential boundary,i.e. ðxÞ 2 H1. The essential boundary
condition is obtained as a limiting case of the natural boundary condition by making bðxÞ very large, i.e. a
penalty parameter.
In the partition method, the general weak form for one-dimensional problems is given in Box 3.8.
Box 3.8. General weak form for 1D problems-partition method
Find ðxÞ 2 U such that
Z

dw
dx A d
dx dx 
Z

wf dx  wAð  bð  ÞÞ

¼ 0
8w 2 U0;
ð3:63Þ
where U and U0 are given in (3.47) and (3.48), respectively. Notice that in the partition approach, the
weight function vanishes on the essential boundary, , i.e., 8w 2 U0. The boundaries  and  are
complementary.
3.8
ADVECTION–DIFFUSION 5
Inmanysituations,asubstanceisbothtransportedanddiffusedthroughamedium.Forexample,apollutant
in an aquifer is dispersed by both diffusion and the movement of the water in the aquifer. In cooling ponds
for power plants, heat energy moves through the pond by both diffusion and transport due to motion of the
water. If sugar is added to a cup of coffee, it will disperse throughout the cup by diffusion; dispersal is
accelerated by stirring, which advects the sugar. The dispersal due to motion of the ﬂuid has several names
besides advection: convection and transport are two other widely used names.
5Recommnded for Advanced Track.
64
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

3.8.1
Strong Form of Advection–Diffusion Equation
Consider the one-dimensional advection–diffusion of a species in a one-dimensional model of cross-
sectional area AðxÞ, it could be a pipe or an aquifer; the concentration of the species or energyis denoted by
ðxÞ. In an aquifer, the ﬂow may extend to a large distance normal to the plane, sowe consider a unit depth,
where depth is the dimension perpendicular to the plane. In a pipe, AðxÞ is simply the cross-sectional area.
The velocity of the ﬂuid is denoted by vðxÞ, and it is assumed to be constant in the cross section at each
point along the axis, i.e. for each x. A source sðxÞ is considered; it may be positive or negative. The latter
indicates decay or destruction of the species. For example, in the transport of a radioactive contaminant,
sðxÞisthechangeinaparticularisotope,whichmaydecreaseduetodecayorincreaseduetoformation.The
ﬂuid is assumed to be incompressible, which has some ramiﬁcations that you will see later.
The conservation principle states that the species (be it a material, an energy or a state) is conserved in
each control volume x.Therefore, the amount of speciesentering minus the amount ofleavingequals the
amount produced (a negative volume when the species decays). In this case, we have two mechanisms for
inﬂowandoutﬂow,theadvection,whichisðAvÞx,anddiffusion,whichisqðxÞ.Theconservationprinciple
can then be expressed as
ðAvÞx þ ðAqÞx  ðAvÞxþx  ðAqÞxþx þ xsxþx=2 ¼ 0:
Dividing by x and taking the limit x ! 0, we obtain (after a change of sign)
dðAvÞ
dx
þ dðAqÞ
dx
 s ¼ 0:
ð3:64Þ
We now consider the incompressibility of the ﬂuid. For an incompressible ﬂuid, the volume of material
entering a control volume equals the volume of material leaving, which gives
ðAvÞx ¼ ðAvÞxþx:
Putting the right-hand side on the left-hand side, dividing by x and letting x ! 0, we obtain
dðAvÞ
dx
¼ 0:
ð3:65Þ
If we use the derivative product rule on the ﬁrst term of (3.64), we obtain
dðAvÞ
dx
¼ dðAvÞ
dx
 þ Av d
dx ;
ð3:66Þ
where the ﬁrst term on the RHS vanishes by (3.65), so substituting (3.66) into (3.64) yields
Av d
dx þ dðAqÞ
dx
 s ¼ 0:
ð3:67Þ
This is the conservation equation for a species in a moving incompressible ﬂuid. If the diffusion is linear,
Fick’s ﬁrst law holds, so
q ¼ k d
dx ;
ð3:68Þ
ADVECTION–DIFFUSION
65

where k is the diffusivity. Substituting (3.68) into (3.67) gives
Av d
dx  d
dx
Ak d
dx


 s ¼ 0:
ð3:69Þ
Theaboveiscalledtheadvection–diffusionequation.Theﬁrsttermaccountsfortheadvection(sometimes
calledthetransport)ofthematerial.Thesecondtermaccountsforthediffusion.Thethirdtermisthesource
term.
We consider the usual essential and natural boundary conditions
ðaÞ
 ¼ 
on
;
ðbÞ
 k d
dx n ¼ qn ¼ q
on
q;
ð3:70Þ
where  and q are complementary, see (3.50).
The advection–diffusion equation is important in its own right, but it is also a model for many other
equations. Equations similar to the advection–diffusion equation are found throughout the ﬁeld of
computational ﬂuid dynamics. For example, the vorticity equation is of this form. If we replace  by v,
then the second term in (3.66) corresponds to the transport term in the Navier–Stokes equations, which are
the fundamental equations of ﬂuid dynamics.
3.8.2
Weak Form of Advection–Diffusion Equation
We obtain the weak form of (3.69) by multiplying the governing equation by an arbitrary weight function
wðxÞ and integrating over the domain. Similarly, the weak statement of the natural boundary conditions is
obtained by multiplying (3.70b) with the weight function and the area A. The resulting weak equations are
ðaÞ
ð

w Av d
dx


 d
dx
Ak d
dx


 s


dx ¼ 0
8w;
ðbÞ
Aw kn d
dx þ q


q
¼ 0
8w:
:
ð3:71Þ
The spaces of trial solution and weight function are exactly as before, see (3.47) and (3.48).
We can see that the second term in Equation (3.71a) is unsymmetric in w and  and involves a second
derivative, which we want to avoid as it would require smoother trial solutions than is convenient. We can
reduce the order of the derivatives by integration by parts.
Theﬁrsttermin(3.71a)ispuzzlingasitinvolvesaﬁrstderivativeonly,butitisnotsymmetric.Itturnsout
that we cannot make this term symmetric via integration by parts, as the integrand then becomes
ðdw=dxÞAv: In this case, integration by parts just switches the derivative from the trial solution to the
weight function. So we leave this term as it is.
Integration by parts of the second term in (3.71a) and combining with (3. 71b) gives
Z

wAv d
dx


dx þ
Z

dw
dx Ak d
dx


dx 
Z

ws dx þ ðAwqÞ

q ¼ 0;
ð3:72Þ
Theweakformisthenasfollows:ﬁndthetrialsolutionðxÞ 2 U suchthat(3.72)holdsforallwðxÞ 2 U0.
We will not prove that the weak form implies the strong form; the procedure is exactly like before and
consists of simply reversing the preceding steps. An important property of (3.72) is that the ﬁrst term is not
symmetric in wðxÞ and ðxÞ. Therefore, the discrete equations for this weak form will not be symmetric.
66
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Equation (3.72) and its boundary conditions become tricky when k ¼ 0. In that case, there is no diffusion,
only transport. Treatment of this special case is beyond this book, see Donea and Huerta (2002).
Instead of the ﬂux boundary condition (3.70b), the total inﬂow of material at the boundary is often
prescribed by the alternate boundary condition
ðk d
dx þ vÞn ¼ qT:
ð3:73Þ
Integrating the ﬁrst term in (3.72) by parts and adding the product of the weight function, area A and (3.73)
gives

Z

dw
dx Av dx þ
Z

dw
dx Ak d
dx


dx 
Z

ws dx þ ðAwqTÞ

q ¼ 0:
ð3:74Þ
The weak form then consists of Equation (3.74) together with an essential boundary condition (3.70a) and
the generalized boundary condition (3.73).
3.9
MINIMUM POTENTIAL ENERGY 6
An alternative approach for developing the ﬁnite element equations that is widely used is based on
variational principles. The theory that deals with variational principles is called variational calculus, and
at ﬁrst glance it can seem quite intimidating to undergraduate students. Here we will give a simple
introduction in the context of one-dimensional stress analysis and heat conduction. We will also show that
theoutcomeofthesevariationalprinciples is equivalenttotheweakformforsymmetric systemssuchasheat
conductionandelasticity.Therefore,theﬁniteelementequationsarealsoidentical.Finally,wewillshowhow
variationalprinciplescanbedevelopedfromweakforms.Thevariationalprinciplecorrespondingtotheweak
form for elasticity is called the theorem of minimum potential energy. This theorem is stated in Box 3.9.
Box 3.9. Theorem of minimum potential energy
The solution of the strong form is the minimizer of
WðuðxÞÞ for 8uðxÞ 2 U where WðuðxÞÞ ¼ 1
2
Z

AE du
dx

2
dx
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Wint

Z

ub dx þ ðuAtÞjt
0
@
1
A
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Wext
:ð3:75Þ
In elasticity,W isthe potential energy of the system. Wehave indicated by the subscripts ‘int’and ‘ext’that
the ﬁrst term is physically the internal energy and the second term the external energy.
Wewill now showthat the minimizer ofWðuðxÞÞ corresponds totheweak form, which we already know
implies the strong form. Showing that the equation for the minimizer of WðuðxÞÞ is the weak form implies
thattheminimizeristhesolution,aswehavealreadyshownthatthesolutiontotheweakformisthesolution
of the strong form.
One of the major intellectual hurdles in learning variational principles is to understand the meaning of
WðuðxÞÞ. WðuðxÞÞ is a function of a function. Such a function of a function is called a functional. We will
now examine how WðuðxÞÞ varies as the function uðxÞ is changed (or varied). An inﬁnitesimal change in a
function is called a variation of the function and denoted by uðxÞ  wðxÞ, where wðxÞ is an arbitrary
function (we will use both symbols) and 0 <  	 1, i.e. it is a very small positive number.
6Recommended for Structural Mechanics and Advanced Tracks.
MINIMUM POTENTIAL ENERGY
67

The corresponding change in the functional is called the variation in the functional and denoted by W,
which is deﬁned by
W ¼ WðuðxÞ þ wðxÞÞ  WðuðxÞÞ  WðuðxÞ þ uðxÞÞ  WðuðxÞÞ:
ð3:76Þ
Thisequationisanalogoustothedeﬁnitionofadifferentialexceptthatinthelatteroneconsidersachangein
the independent variable see Oden and Reddy (1983) and Reddy (2000) for details onvariational calculus.
A differential gives the change in a function due to a change of the independent variable. Avariation of a
functional gives the change in a functional due to a change in the function. If you replace ‘function’ by
‘functional’ and ‘independent variable’ by ‘function’ in the ﬁrst sentence, you have the second sentence.
From the statement of minimum potential energy given in Box 3.9, it is clear that the function
uðxÞ þ wðxÞ must still be in U. To meet this condition, wðxÞ must be smooth and vanish on the essential
boundaries, i.e.
wðxÞ 2 U0:
ð3:77Þ
Let us evaluate the variation of the ﬁrst term in Wint. From the deﬁnition of the variation of a functional,
Equation (3.76), it follows that
Wint ¼ 1
2
Z

AE du
dx þ  dw
dx

2
dx  1
2
Z

AE du
dx

2
dx
¼ 1
2
Z

AE
du
dx

2
þ 2 du
dx
dw
dx þ 2 dw
dx

2
 
!
dx  1
2
Z

AE du
dx

2
dx:
ð3:78Þ
The ﬁrst and fourth terms in the above cancel. The third term can be neglected because  is small, so its
square is a second-order term. We are left with
Wint ¼ 
Z

AE dw
dx

 du
dx


dx:
ð3:79Þ
The variation in the external work is evaluated by using the deﬁnition of a variation and the second term in
Equation (3.75); we divide it into the parts due to the body force and traction for clarity. This gives
W
ext ¼
Z

ðu þ wÞb dx 
Z

ub dx ¼ 
Z

wb dx
W
ext ¼ ðu þ wÞAtjtðutÞAjt¼ ðwAtÞjt
ð3:80Þ
Wext ¼ W
ext þ W
ext ¼ 
Z

wb dx þ ðwAtÞjt
0
@
1
A
ð3:81Þ
At the minimum of WðuðxÞÞ, the variation of the functional must vanish, just as the differentials or the
derivatives of a function vanish at a minimum of a function. This is expressed as W ¼ 0. Thus, we have
0 ¼ W ¼ Wint  Wext:
ð3:82Þ
Substituting (3.79)–(3.81) into the above and dividing by  yields the following: for uðxÞ 2 U,
W= ¼
Z

AE dw
dx

 du
dx


dx 
Z

wb dx  ðwAtÞ

t
¼ 0;
wðxÞ 2 U0:
ð3:83Þ
68
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Do you recognize the above? It is precisely the statement of the weak form, Equation (3.49) that we
developed in Section 3.6. Also recall that we have shown in Section 3.4 that the weak form implies the
strong form, so it follows that the minimizer of the potential energy functional gives the strong form.
To beprecise, we haveonlyshownthat astationarypoint ofthe energycorrespondstothe strong form.It
can also be shown that the stationary point is a minimizer, see Equation (3.75) or Becker, Carey and Oden
(1981, pp. 60–62).
In most books on variational principles, the change in the function uðxÞ, instead of being denoted by
wðxÞ, is denoted by uðxÞ. Equation (3.83) is then written as follows. Find u 2 U such that
W ¼
Z

AE du
dx

 dðuÞ
dx


dx 
Z

ub dx  ðuA tÞ

t ¼ 0
8u 2 U0:
ð3:84Þ
Thiscanbefurthersimpliﬁedbyusingthestrain–displacementequationandthestress-strain lawintheﬁrst
terms in the ﬁrst integrand in (3.84), which gives
W ¼
Z

As edx
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
Wint

Z

budx þ ðtAu Þjt
0
@
1
A
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Wext
¼ 0
ð3:85Þ
The above is called the principle of virtual work: the admissible displacement ﬁeld (u 2 U) for which the
variation inthe internal workWint equals thevariation inthe external workWext for all8u 2 U0 satisﬁes
equilibrium and the natural boundary conditions. Note that (3.85) is identical to the weak forms (3.49) and
(3.83), just the nomenclature is different.
Avery interesting feature of the minimum potential energy principle is its relationship to the energy of
the system. Consider the term Wint in Equation (3.75). Substituting the strain–displacement equation (3.3)
and Hooke’s law (3.4) enables us to write it as
Wint ¼
Z

wint A dx ¼ 1
2
Z

AEe2 dx:
ð3:86Þ
If we examine a graph of a linear law, Figure 3.9, we can see that the energy per unit volume is
wint ¼ ð1=2ÞEe2. Thus, Wint, the integral of the energy density over the volume, is the total internal energy
int
1
2
w
σε
=
dwint
de
e
s
Figure 3.9
Deﬁnition of internal energy density or strain energy density wint.
MINIMUM POTENTIAL ENERGY
69

of the system, which is why the subscript ‘int’, which is short for ‘internal’, is appended to this term. This
energy is also called the strain energy, which is the potential energy that is stored in a body when it
isdeformed.Thisenergycanberecoveredwhenthebodyisunloaded.Thinkofametalrulerthatisbentora
spring that is compressed; when the force is released, they spring back releasing the stored energy. The
second term is also an energy, as the two terms that comprise Wext are products of force (b or t) and
displacement u; in any case, it has to be an energy for the equation to be dimensionally consistent.
We can rewrite the functional in Equation (3.75) as
W ¼ Wint  Wext
ð3:87Þ
by using the deﬁnitions underscored, and the variational principle is W ¼ 0. This clariﬁes the physical
meaningoftheprincipleofminimumpotentialenergy:thesolutionistheminimizer(i.e.astationarypoint)
of the potential energy Wamong all admissible displacement functions.
Manyﬁniteelementtextsusethetheoremofminimumpotentialenergyasameansforformulatingﬁnite
elementmethods.Thenaturalquestionthatemergesintheseapproachestoteachingﬁniteelementsis:How
did this theorem come about and how can corresponding principles be developed for other differential
equations? In fact, the development of variational principles took many years and was a topic of intense
research inthe eighteenth and nineteenth centuries. Variational principles cannot be constructed by simple
rules like we have used for weak forms. However, some weak forms can be converted to variational
principles, and in the next section, we show how to construct a variational principle for 1D stress analysis
and heat conduction.
An attractive feature of the potential energy theorem is that it holds for any elastic system. Thus, if we
write the energy for any other system, we can quickly derive ﬁnite element equations for that system; this
will be seenin Chapter 10 for beams. Variational principles are alsovery useful in the study ofthe accuracy
and convergence of ﬁnite elements.
The disadvantage of variational approach is that there are many systems to which they are not readily
applicable. Simple variational principles cannot be developed for the advection–diffusion equation for
which we developed a weak form in Section 3.7 by the same straightforward procedure as for the other
equations.Variationalprinciplescanonlybedevelopedforsystemsthatareself-adjoint.Theweakformfor
the advection–diffusion equation is not symmetric, and it is not a self-adjoint system (see Becker, Carey
and Oden (1981) for deﬁnition of self-adjoint systems).
Variationalprinciplesidenticaltothoseforelasticityapplytoheattransferandotherdiffusionequations.
This is not surprising, as the equations are identical except for the parameters. As an example, the
variational principle for heat conduction is given in Box 3.10.
Box 3.10. Variational principle for heat conduction
Let WðTðxÞÞ ¼ 1
2
Z

Ak dT
dx

2
dx
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Wint

Z

Ts dx  ðTAqÞ

q
0
@
1
A
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Wext
;
then the solution of the strong form of (3.51) is the minimizer of WðTðxÞÞ for 8TðxÞ 2 U.
The functional in this variational principle is not a physical energy; in fact, the temperature itself
corresponds to the physical energy. However, the functional is often called an energy even for diffusion
equations; we will call it a mathematical energy. The proof of the equivalence of this principle to the weak
form (andhence to the strong form) ofthe heat conduction equations just involvesreplacing the symbolsin
(3.78)–(3.83) according to Table 3.2; the mathematics is identical regardless of the symbols.
70
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

3.10
INTEGRABILITY 7
So far we have left the issue of the smoothness of the weight functions and trial solutions rather nebulous.
We will now deﬁne the degree of smoothness required in weak forms more precisely. Many readers may
want to skip this material on an initial reading, as the rest of the book is quite understandable without an
understanding of this material.
The degreeof smoothness that is required in theweight and trial functions isdetermined by how smooth
they need to be so that the integrals in the weak form, such as (3.54), can be evaluated. This is called the
integrability of the weak form. If the weight and trial functions are too rough, then the integrals cannot be
evaluated, so then obviously the weak form is not usable.
Wenextroughlyexaminehowsmoothissmoothenough.IfyoulookataC1 functionthatisnotsingular
(does not become inﬁnite), you can see that it is obviously integrable, as the area under such a function is
well deﬁned. Even the derivative of a C1 function is integrable, for at a point of discontinuity x ¼ a of
magnitude p, the derivative isthe Dirac deltafunction pðx  aÞ. Bythe deﬁnitionof a Dirac delta function
(See Appendix A5),
Z x2
x1
pðx  aÞ dx ¼ p
if
x1  a  x2:
So the integral of the derivative of a C1 function is well deﬁned. However, the product of the derivatives
of the weight and trial functions appears in the weak form. If both of these functions are C1, and the
discontinuities occur at the same point, say x ¼ a, then the weak form will contain the term
R x2
x1 p2ðx  aÞ2 dx. The integrand here can be thought of as ‘inﬁnity squared’: there is no meaningful
way to obtain this integral. So C1 continuity of the weight and trial functions is not sufﬁcient.
Onthecontrary,iftheweightandtrialfunctionsareC0 andnotsingular,thenthe derivativesare C1 and
the integrand will be the product of two C1 functions. You can sketch some functions and see that the
productofthederivativesoftwoC1 functionswillalsobeC1 aslongasthefunctionsarebounded(donot
become inﬁnite). Since a bounded C1 function is integrable, C0 continuity is smooth enough for the
weight and trial functions.
This continuity requirement can also be justiﬁed physically. For example, in stress analysis, a C1
displacement ﬁeld would have gaps or overlaps at the points of discontinuity of the function. This would
violate compatibility of the displacement ﬁeld. Although gaps are dealt with in more advanced methods to
model fracture, they are not within the scope of the methods that we are developing here. Similarly in heat
conduction,aC1 temperatureﬁeldwouldentailaninﬁniteheatﬂuxatthepointsofdiscontinuity,whichis
not physically reasonable. Thus, the notions of required smoothness, which arise from the integrability of
the weak form, also have a physical basis.
In mathematical treatments of the ﬁnite element method, a more precise description of the required
degree of smoothness is made: the weight and trial functions are required to possess square integrable
derivatives. A derivative of a function uðxÞ is called square integrable if WintðÞ, deﬁned as
WintðÞ ¼ 1
2
Z

A d
dx

2
dx;
ð3:88Þ
is bounded, i.e. WintðÞ < 1. The value of
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
WintðÞ
p
is often called an energy norm. For heat conduction,
 ¼ T and ðxÞ ¼ kðxÞ > 0. In elasticity, ðxÞ ¼ EðxÞ > 0 and  ¼ u and (3.88) corresponds to the strain
energy, which appears in the principle of minimum potential energy.
It can be proven that H1 is a subspace of C0, i.e. H1  C0, so any function in H1 is also a C0 function.
However, the converse is not true: C0 functions that are not in H1 exist. An example of a function that isC0,
7Recommended for Advanced Track.
INTEGRABILITY
71

but not H1, is examined in Problem 3.8. However, such functions are usually not of the kind found in
standard ﬁnite element analysis (except in fracture mechanics), so most readers will ﬁnd that the
speciﬁcation of the required degree of smoothness by C0 continuity is sufﬁcient.
REFERENCES
Becker, E. B., Carey, G. F. and Oden, J.T. (1981) Finite Elements: An introduction, vol. 1, Prentice Hall, Englewood
Cliffs, NJ.
Ciarlet, P.G. (1978) The Finite Element Method for Elliptic Problems, North-Holland, New York.
Donea, J. and Huerta, A. (2002) Finite Element Methods for Flow Problems, John Wiley & Sons, Ltd, Chichester.
Hughes, T. J. R. (1987) The Finite Element Method, Prentice Hall, Englewood Cliffs, NJ.
Oden, J. T. and Reddy, J.N. (1978) An Introduction to the Mathematical Theory of Finite Elements, Academic Press,
New York.
Oden, J. T. and Reddy, J. N. (1983) Variational Methods in Theoretical Mechanics, 2nd ed., Springer-Verlag,
New York.
Reddy, J. N. (2002) Energy Principles and Variational Methods in Applied Mechanics, 2nd ed., John Wiley,
New York.
Problems
Problem 3.1
Show that the weak form of
d
dx
AE du
dx


þ 2x ¼ 0
on
1 < x < 3;
sð1Þ ¼
E du
dx


x¼1
¼ 0:1;
uð3Þ ¼ 0:001
is given by
Z3
1
dw
dx AE du
dx dx ¼ 0:1ðwAÞx¼1 þ
Z3
1
2xw dx
8w with wð3Þ ¼ 0:
Problem 3.2
Show that the weak form in Problem 3.1 implies the strong form.
Problem 3.3
Consider a trial (candidate) solution of the form uðxÞ ¼ a0 þ a1ðx  3Þ and a weight function of the same
form.ObtainasolutiontotheweakforminProblem3.1.Check theequilibriumequationinthe strongform
in Problem 3.1; is it satisﬁed?
Check the natural boundary condition; is it satisﬁed?
Problem 3.4
Repeat Problem 3.3 with the trial solution uðxÞ ¼ a0 þ a1ðx  3Þ þ a2ðx  3Þ2.
72
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

Problem 3.5
Obtain the weak form for the equations of heat conduction with the boundary conditions Tð0Þ ¼ 100 and
qð10Þ ¼ hT. The condition on the right is a convection condition.
Problem 3.6
Given the strong form for the heat conduction problem in a circular plate:
k d
dr
r dT
dr


þ rs ¼ 0;
0 < r  R:
natural boundary condition :
dT
dr ðr ¼ 0Þ ¼ 0;
essential boundary condition :
Tðr ¼ RÞ ¼ 0;
where R is the total radius of the plate, s is the heat source per unit length along the plate radius, T is the
temperature and k is the conductivity. Assume that k, s and R are given:
a. Construct the weak form for the above strong form.
b. Use quadratic trial (candidate) solutions of the form T ¼ a0 þ a1r þ a2r2 and weight functions of the
same form to obtain a solution of the weak form.
c. Solvethedifferentialequationwiththeboundaryconditionsandshowthatthetemperaturedistribution
along the radius is given by
T ¼ s
4k ðR2  r2Þ:
Problem 3.7
Given the strong form for the circular bar in torsion (Figure 3.10):
d
dx
JG d
dx


þ m ¼ 0;
0  x  l;
natural boundary condition :
Mðx ¼ lÞ ¼
JG d
dx


l
¼ M;
essential boundary condition :
ðx ¼ 0Þ ¼ ;
( )
m x
x
(
)
M x
l
M
=
=
 
(          )
0
x
f
f
=
=
l
0
=
x
x
l
=
Figure 3.10
Cylindrical bar in torsion of Problem 3.7.
REFERENCES
73

where mðxÞ is a distributed moment per unit length, M is the torsion moment,  is the angle of rotation, G
is the shear modulus and J is the polar moment of inertia given byJ ¼ C4=2, where C is the radius of the
circular shaft.
a. Construct the weak form for the circular bar in torsion.
b. Assume thatm(x)=0 andintegratethe differential equation givenabove. Findthe integrationconstants
using boundary conditions.
Problem 3.8
Consider a problem on 0  x  l which has a solution of the form
u ¼
 1
2
 lx
l ;
x  l
2 ;
x
l  1
2

l
 1
2
 lx
l ;
x > l
2 :
8
>
>
>
<
>
>
>
:
a. Show that for l > 0 the solution u is C0 in the interval 0  x  l.
b. Show that for 0 < l  1=2 the solution u is not in H1.
Problem 3.9
Consider an elastic bar with a variable distributed spring pðxÞ along its length as shown in Figure 3.11. The
distributed spring imposes an axial force on the bar in proportion to the displacement.
Consider a bar of length l, cross-sectional area AðxÞ, Young’s modulus EðxÞ with body force bðxÞ and
boundary conditions as shown in Figure 3.11.
a. Construct the strong form.
b. Construct the weak form.
Problem 3.10
Consider an elastic bar in Figure 3.2. The bar is subjected to a temperature ﬁeld TðxÞ. The temperature
causes expansion of the bar and the stress-strain law is
sðxÞ ¼ EðxÞðeðxÞ  aðxÞTðxÞÞ;
where a is the coefﬁcient of thermal expansion, which may be a function of x.
p(x) 
t
l
x
b x( )
Figure 3.11
Elastic bar with distributed springs of Problem 3.9.
74
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

a. Develop the strong form by replacing the standard Hooke’s law with the above in the equilibrium
equation; use the boundary conditions given in Problem 3.1.
b. Construct the weak form for (3.43) when the above law holds.
Problem 3.11
Find the weak form for the following strong form:
 d2u
dx2  lu þ 2x2 ¼ 0;
; l are constants; 0 < x < 1;
subject to uð0Þ ¼ 1; uð1Þ ¼ 2.
Problem 3.12
The motion of an electric charge ﬂux qV is proportional to thevoltagegradient. This is described by Ohm’s
law:
qV ¼ kV
dV
dx ;
where kV is electric conductivity and V is the voltage. Denote QV as the electric charge source.
Construct the strong form by imposing the condition that the electric charge is conserved.
Problem 3.13
Find the weak form for the following strong form:
x d2u
dx2 þ du
dx  x ¼ 0;
0  x  1;
subject to uð0Þ ¼ uð1Þ ¼ 0.
Problem 3.14
Consider a bar in Figure 3.12 subjected to linear body force bðxÞ ¼ cx. The bar has a constant cross-
sectional area A and Young’s modulus E. Assume quadratic trial solution and weight function
uðxÞ ¼ a1 þ a2x þ a3x2;
wðxÞ ¼ b1 þ b2x þ b3x2;
where ai are undetermined parameters.
a. For what value of aI is uðxÞ kinematically admissible?
3
2
1
x
L/2
L/2
Figure 3.12
Elastic bar subjected to linear body force of Problem 3.14.
REFERENCES
75

b. Using the weak form, set up the equations for aI and solve them. To obtain the equations, express the
principle of virtual work in the form b2ð
 
 
Þ þ b3ð
 
 
Þ ¼ 0. By the scalar product theorem, each of the
parenthesized terms, i.e. the coefﬁcients of bI, must vanish.
c. Solve the problem in Figure 3.12 using two 2-node elements considered in Chapter 2 of equal size.
Approximate the external load at node 2 by integrating the body force from x ¼ L=4 to x ¼ 3L=4.
Likewise, compute the external at node 3 by integrating the body force from x ¼ 3L=4 to x ¼ L.
Problem 3.15
Consider the bar in Problem 3.14.
a. Using an approximate solution of the form uðxÞ ¼ a0 þ a1x þ a2x2, determine uðxÞ by the theorem of
minimum potential energy. Hint: after enforcing admissibility, substitute the above trial solution into
(3.75) and minimize with respect to independent parameters.
b. Compare the solution obtained in part (a) to an exact solution of the equation E d2u
dx2 þ cx ¼ 0.
c. Does sðLÞ ¼ 0 for the approximate solutions?
d. Check whether the stress obtained from uðxÞ by s ¼ E du
dx satisﬁes the equilibrium.
76
STRONG AND WEAK FORMS FOR ONE-DIMENSIONAL PROBLEMS

4
Approximation of Trial
Solutions, Weight Functions
and Gauss Quadrature for
One-Dimensional Problems
We now consider the next important ingredient of the ﬁnite element method (FEM): the construction of
the approximations. In Chapter 3, we derived weak forms for the elasticity and heat conduction
problems in one dimension. The weak forms involve weight functions and trial solutions for the
temperature, displacements, solute concentrations and so on. In the FEM, the weight functions and
trial solutions are constructed by subdividing the domain of the problem into elements and constructing
functions within each element. These functions have to be carefully chosen so that the FEM is
convergent: The accuracy of a correctly developed FEM improves with mesh reﬁnement, i.e. as element
size, denoted by h, decreases, the solution tends to the correct solution. This property of the FEM is of
great practical importance, as mesh reﬁnement is used by practitioners to control the quality of the ﬁnite
element solutions.
For example, the accuracy of a solution is often checked by rerunning the same problem with a ﬁner
mesh;ifthe difference between the coarseandﬁnemesh solutionsissmall,itcanbeinferred thatthecoarse
meshsolutionisquiteaccurate.Onthecontrary,ifasolutionchangesmarkedlywithreﬁnementofthemesh,
the coarse mesh solution is inaccurate, and even the ﬁner mesh may still be inadequate.
Althoughthemathematicaltheoryofconvergenceisbeyondthescopeofthebook,looselyspeaking,the
two necessary conditions for convergence of the FEM are continuity and completeness. This can
schematically be expressed as
Continuity
þ
Completeness
!
Convergence
Bycontinuitywemeanthatthetrialsolutionsandweightfunctionsaresufﬁcientlysmooth.Thedegreeof
smoothness that is required depends on the order of the derivatives that appear in the weak form. For the
second-orderdifferentialequationsconsideredinChapter3,wherethederivativesintheweakformareﬁrst
derivatives, we have seen that the weight functions and trial solutions must be C0 continuous.
Completenessisamathematicaltermthatreferstothecapabilityofaseriesoffunctionstoapproximatea
given smooth function with arbitrary accuracy. For convergence of the FEM, it is sufﬁcient that as the
element sizes approach zero, the trial solutions and weight functions and their derivatives up to and
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

including the highest order derivative appearing in the weak form be capable of assuming constant values.
This can be interpreted physically for various types of problems. For instance, for elasticity, this requires
that the displacement ﬁeld and its derivative can take constant values so that the ﬁnite elements can
represent rigid body motion and constant strain states exactly.
Beforewediscusscontinuityandcompleteness,wewouldliketosayafewwordsaboutournotationand
nomenclature.Theﬁniteelementfunctions,weightfunctionsandtrialsolutions,willcollectivelybecalled
approximations or functions. We will use the symbol ðxÞ for all functions in this chapter, whether they be
temperature, displacement or any other variable. The global ﬁnite element approximation will be denoted
by hðxÞ; this function for a particular element e will be denoted by eðxÞ, and it is assumed that eðxÞ is
nonzero only in element e. As in the previous chapters, numerical superscripts refer to a speciﬁc element.
For nodal variables, a subscript denotes the node number; for element-related nodal variables, local node
numbers are used; so, for example, xe
1 is the x-coordinate of local node 1 of element e.
Toﬁxtheconceptsofcontinuityandcompleteness,consideraone-dimensionaldomainmodeledbytwo
elements as shown in Figure 4.1. We will examine how to construct a continuous approximation in the
entire domain by the FEM.
In constructing a ﬁnite element approximation, we approximate the approximation in each element by
eðxÞ. In each element, we will employ a polynomial for eðxÞ of the form
e ¼ ae
0 þ ae
1x þ ae
2x2 þ ae
3x3 þ    ;
where ae
i are coefﬁcients that are selected so that continuity is satisﬁed. It can be seen from the above
that within each element the approximation eðxÞ is obviously continuous. However, for arbitrary values
of ae
i , the approximation will not be continuous between elements. To meet the C0 continuity requirement,
the ﬁeld hðxÞ must be continuous (or compatible) between elements, i.e. it is necessary that
ð1Þðxð1Þ
2 Þ ¼ ð2Þðxð2Þ
1 Þ in Figure 4.1. We will see in the following that if the coefﬁcients ae
i are expressed
in terms of nodal values, it will be easy to construct continuous approximations.
The second requirement for the FEM to converge to the correct solution is completeness. According
to the guidelines given above, elements with a linear approximation e ¼ ae
0 þ ae
1x are complete. The term
ae
0 can represent any constant function as it is arbitrary, and the term ae
1x can represent any function
with a constant derivative. Thus, the polynomial e ¼ ae
0 þ ae
1x can be used to construct ﬁnite element
approximations that will converge.
Trial solutions approximated by incomplete polynomials but with a complete linear approximation,
such as e ¼ ae
0 þ ae
1x þ ae
2x4, will converge, but at a rate comparable to that of linear approximations.
1
(2)( )
x
q
(1)( )
x
q
1
2
2
(2)
(1) 
(1) 
(2) 
Figure 4.1
A two-element mesh and the approximations in each element.
78
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

However,anincompleteapproximation,suchase ¼ ae
0 þ ae
1x2,cannotbeusedtodevelopaﬁniteelement.
This approximation lacks the necessary linear term, and consequently when it is used as a starting point for
constructing a ﬁnite element approximation, the resulting elements do not converge.
4.1
TWO-NODE LINEAR ELEMENT
Consider the simplest one-dimensional element, an element with two nodes as shown in Figure 4.2. The
nodal values of the function are denoted by eðxe
1Þ  e
1 and eðxe
2Þ  e
2. Wewill now develop a procedure
for constructing a complete and C0 continuous function for this element. As we indicated in the previous
section,toachievecontinuity,wewillexpresstheapproximationintheelementintermsofthenodalvalues.
To meet the completeness condition, we need to choose at least a linear polynomial
eðxÞ ¼ ae
0 þ ae
1x:
ð4:1Þ
Notice the rather nice coincidence: If we select two nodes at the ends of the element, we have the same
number of nodal values as parameters in (4.1), so we should be able to express the parameters uniquely in
terms of the nodal values. We will now proceed to do this. We can write (4.1) in the matrix form as
eðxÞ ¼ ½ 1
x 
|ﬄﬄﬄ{zﬄﬄﬄ}
pðxÞ
ae
0
ae
1


|ﬄﬄ{zﬄﬄ}
ae
¼ pðxÞae:
ð4:2Þ
Next we express the coefﬁcients ae
0 and ae
1 in terms of the values of the approximation at nodes 1 and 2:
eðxe
1Þ  e
1 ¼ ae
0 þ ae
1xe
1
eðxe
2Þ  e
2 ¼ ae
0 þ ae
1xe
2
!
e
1
e
2


|ﬄﬄ{zﬄﬄ}
de
¼
1
xe
1
1
xe
2


|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
Me
ae
0
ae
1


|ﬄﬄ{zﬄﬄ}
ae
;
ð4:3Þ
where de is the nodal matrix for element e, which is deﬁned as shown above. In the matrix form, the inverse
of (4.3) is given by
ae ¼ ðMeÞ1de:
ð4:4Þ
Substituting (4.4) into (4.2) yields
eðxÞ ¼ NeðxÞde;
where
NeðxÞ ¼ pðxÞðMeÞ1:
ð4:5Þ
The row matrix NeðxÞ ¼ ½Ne
1ðxÞ
Ne
2ðxÞ ¼ pðxÞðMeÞ1 is called the element shape function matrix. It
consists of the element shape functions associated with element e.
We will see that shape functions play a central role in the FEM; shape functions of various orders and
dimensions enable the FEM to solve problems of many types with varying degrees of accuracy.
We next develop the expressions for the element shape function matrix Ne by evaluating the matrices in
(4.5). From the expression for Me given in (4.3), it follows that
ðMeÞ1 ¼
1
xe
2  xe
1
xe
2
xe
1
1
1


¼ 1
le
xe
2
xe
1
1
1


;
1
2
e
1
e
x
2
e
x
el
Figure 4.2
A two-node element.
TWO-NODE LINEAR ELEMENT
79

where le is the length of the element e. Then using (4.5) we obtain
Ne ¼ Ne
1
Ne
2
½
 ¼ pðxÞðMeÞ1 ¼ 1
x
½

xe
2
xe
1
1
1

 1
le ¼ 1
le xe
2  x
x  xe
1
½
:
ð4:6Þ
Intheabove,Ne
1ðxÞandNe
2ðxÞaretheelementshapefunctionscorrespondingtonodes1and2,respectively.
These shape functions are shown in Figure 4.3. Note that they are nonzero only in element e.
It can be seen that the shape functions are linear in the element, as expected. In addition, the shape
functions have the following properties:
Ne
1ðxe
1Þ ¼ 1;
Ne
1ðxe
2Þ ¼ 0;
Ne
2ðxe
1Þ ¼ 0;
Ne
2ðxe
2Þ ¼ 1:
In the concise notation, the above can be written as
Ne
I ðxe
JÞ ¼ IJ;
ð4:7Þ
where IJ is called the Kronecker delta (which is deﬁned exactly like the unit matrix) and is given by
IJ ¼
1
if
I ¼ J;
0
if
I 6¼ J:

ð4:8Þ
Equation (4.7) is known as the Kronecker delta property and is related to a fundamental property of
shape functions called the interpolation property. Interpolants are functions that pass exactly through
the data. If you think of nodal values as data, then shape functions are interpolants of the nodal data.
In fact, shape functions can be used as interpolants to ﬁt any data.
To show the interpolation property, we write (4.5) in terms of the shape functions and nodal values:
eðxÞ ¼ NeðxÞde ¼
X
nen
I¼1
Ne
I ðxÞe
I:
wherenen isthenumberofelementnodes;inthiscasenen ¼ 2.WewanttoshowthateðxIÞ ¼ e
I.Therefore,
we let x ¼ xe
J in the above, which gives
eðxe
JÞ ¼
X
2
I¼1
Ne
I ðxe
JÞe
I ¼
X
2
I¼1
IJe
I ¼ e
J;
1
1
2
x
2( )
e
N
x
1( )
e
N
x
1
ex
2
ex
e
I
N
Figure 4.3
Shape functions of the two-node element.
80
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

wherewehaveused(4.7)andthelaststepfollowsfromthedeﬁnitionoftheKroneckerdelta(4.8).Thus,the
ﬁnite element approximation is exactly equal to the nodal values at the nodes. This is not surprising as we
evaluated the coefﬁcients ae
i by this requirement.
In the weak form developed in the previous chapter, we need to evaluate the derivatives of the trial
solutionsandweightfunctions.Forthetwo-nodeelement,we canderiveanexpressionforthederivativeas
follows:
de
dx ¼ d
dx ðNedeÞ ¼ dNe
dx de ¼ dNe
1
dx e
1 þ dNe
2
dx e
2:
In the matrix form, this can be written as
de
dx ¼
dNe
1
dx
dNe
2
dx

 e
1
e
2


¼ Bede;
ð4:9Þ
where
Be ¼ dNe
1
dx
dNe
2
dx


¼ 1
le ½1
þ1:
ð4:10Þ
The last step in (4.10) follows from taking derivatives of the terms in (4.6).
As we have already mentioned, in each element, we have used a complete polynomial expansion, sowe
have satisﬁed the completeness requirement. We have expressedthe function in terms of nodal values,so it
will be easy to construct globally C0 functions. Wewill examine the continuity requirement in more detail
in Section 4.5.
4.2
QUADRATIC ONE-DIMENSIONAL ELEMENT
To develop a quadratic element, we start with a complete second-order polynomial approximation:
eðxÞ ¼ ae
0 þ ae
1x þ ae
2x2 ¼ ½ 1
x
x2 
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
pðxÞ
ae
0
ae
1
ae
2
2
4
3
5
|ﬄﬄ{zﬄﬄ}
ae
¼ pðxÞae:
ð4:11Þ
The element is shown in Figure 4.4. We need three nodes, because it would otherwise not be possible to
uniquely express the constants ðae
0; ae
1; ae
2Þ in terms of nodal values of the trial solution: eðxe
1Þ ¼
e
1; eðxe
2Þ ¼ e
2; eðxe
3Þ ¼ e
3. Two of the nodes are placed at the ends of the element so that the global
approximation will be continuous. The third node can be placed anywhere, but it is convenient and
symmetrically pleasingtoputitat the centerofthe element. Ingeneral, theseelements performbetterif the
third node is at the midpoint.
1
2
e
3
Figure 4.4
A three-node element.
QUADRATIC ONE-DIMENSIONAL ELEMENT
81

To obtain the shape functions, we ﬁrst express ðae
0; ae
1; ae
2Þ in terms of nodal values of the function nodal
values ðe
1; e
2; e
3Þ:
e
1 ¼ ae
0 þ ae
1xe
1 þ ae
2xe2
1
e
2 ¼ ae
0 þ ae
1xe
2 þ ae
2xe2
2
e
3 ¼ ae
0 þ ae
1xe
3 þ ae
2xe2
3
!
e
1
e
2
e
3
2
4
3
5
|ﬄﬄ{zﬄﬄ}
de
¼
1
xe
1
xe2
1
1
xe
2
xe2
2
1
xe
3
xe2
3
2
64
3
75
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Me
ae
0
ae
1
ae
2
2
4
3
5
|ﬄﬄ{zﬄﬄ}
ae
:
ð4:12Þ
As shown above, we can write (4.12) in the matrix form as de ¼ Meae. Combining (4.11) and (4.12) yields
e ¼ pðMeÞ1
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
Ne
de ¼ Nede ¼
X
nen
I¼1
Ne
I ðxÞe
I;
ð4:13Þ
where nen ¼ 3: The shape functions are given by
Ne ¼ 2
le2 ½ðx  xe
2Þðx  xe
3Þ
2ðx  xe
1Þðx  xe
3Þ
ðx  xe
1Þðx  xe
2Þ:
ð4:14Þ
It can easily be shown that these shape functions satisfy the Kronecker delta property. The shape functions
are shown in Figure 4.5. As can be seen, because of the Kronecker delta property, each shape function is
nonzero only at a single node and at that node its value is unity. Within the element, the shape functions are
quadratic; the mid-node shape function can readily be recognized as an upside-down parabola.
4.3
DIRECT CONSTRUCTION OF SHAPE FUNCTIONSIN ONEDIMENSION
TheshapefunctionsinonedimensionthatwehavedevelopedarecalledLagrangeinterpolants.Thetheory
of Lagrange interpolation is very useful for constructing interpolants of various orders, particularly higher
order functions, such as quadratic or cubic. Such higher order elements, as will be seen from the exercises,
can provide far more accuracy than linear elements.
Lagrangeinterpolantscanbedevelopedmoredirectlythandescribedintheabovebyasimpleprocedure
that takes advantage of the Kronecker delta property of the shape functions. Because of this property,
shape function I must vanish at all nodes other than node I and be unity at node I. To see how we use these
properties to construct the shape functions, consider the quadratic shape functions for a three-node
element.
2
1 
3
1( )
e
N
x
2( )
e
N
x
3( )
e
N
x
x
e
i
N
Figure 4.5
The quadratic shape functions for a three-node element.
82
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

FirstwewillconstructNe
1ðxÞ.AstheshapefunctionNe
1ðxÞisatmostquadraticinx,itconsistsofaproduct
of two linear monomials in x. The most general form of such a quadratic product of monomials is
Ne
1ðxÞ ¼ ðx  aÞðx  bÞ
c
;
where a, b and c are constants that will set so as to satisfy the Kronecker delta property. We want Ne
1ðxÞ to
vanish at xe
2 and xe
3, which can be accomplished by letting a ¼ xe
2 and b ¼ xe
3. This gives
Ne
1ðxÞ ¼ ðx  xe
2Þðx  xe
3Þ
c
:
Now we have met two of the conditions on the shape function: that it must vanish at nodes 2 and 3. It
remains to satisfy the condition that Ne
1ðxe
1Þ ¼ 1. This condition is met by letting the denominator c equal
the numerator evaluated at xe
1, which gives
Ne
1ðxÞ ¼ ðx  xe
2Þðx  xe
3Þ
ðxe
1  xe
2Þðxe
1  xe
3Þ :
We leave it to the reader to show that N1ðxe
JÞ ¼ 1J. The other two shape functions are constructed in an
identical manner giving
Ne
2ðxÞ ¼ ðx  xe
1Þðx  xe
3Þ
ðxe
2  xe
1Þðxe
2  xe
3Þ ;
Ne
3ðxÞ ¼ ðx  xe
1Þðx  xe
2Þ
ðxe
3  xe
1Þðxe
3  xe
2Þ :
The above gives the same result as (4.14) if we note that le ¼ xe
3  xe
1.
The same procedure can be used to construct the cubic shape functions. The element with cubic shape
function will have four nodes, as there are four constants in an arbitrary cubic polynomial. The shape
functions are
Ne
1 ¼
ðx  xe
2Þðx  xe
3Þðx  xe
4Þ
ðxe
1  xe
2Þðxe
1  xe
3Þðxe
1  xe
4Þ ;
Ne
3 ¼
ðx  xe
1Þðx  xe
2Þðx  xe
4Þ
ðxe
3  xe
1Þðxe
3  xe
2Þðxe
3  xe
4Þ ;
Ne
2 ¼
ðx  xe
1Þðx  xe
3Þðx  xe
4Þ
ðxe
2  xe
1Þðxe
2  xe
3Þðxe
2  xe
4Þ ;
Ne
4 ¼
ðx  xe
1Þðx  xe
2Þðx  xe
3Þ
ðxe
4  xe
1Þðxe
4  xe
2Þðxe
4  xe
3Þ :
These shape functions are shown in Figure 4.6.
1
0.5
2
1.5
3
2.5
4
-0.5
0
0.5
1
1
e
N
3
e
N
4
e
N
2
e
N
Figure 4.6 Cubic shape functions of the four-node one-dimensional element; note that each shape function is nonzero
only at one node, where it is unity.
DIRECT CONSTRUCTION OF SHAPE FUNCTIONS IN ONE DIMENSION
83

4.4
APPROXIMATION OF THE WEIGHT FUNCTIONS
Itisnotrequiredthattheweightfunctionsbeapproximatedbythesameinterpolantsthatareusedforthetrial
solutions approximation; however, for most problems it is advantageous to use the same approximation
for the weight functions and the trial solutions, and this is the most common practice. The resulting
method is called the Galerkin FEM. This method is used in the material presented in this book. Theweight
functions and their derivatives are then given by
weðxÞ ¼ NeðxÞwe;
dwe
dx ¼ Bewe:
4.5
GLOBAL APPROXIMATION AND CONTINUITY
In the previous sections of this chapter, we approximated the trial solutions and weight functions on each
elementseparately.Theglobalapproximationofthetrialsolutionsandweightfunctions,denotedhereafter
by h and wh, respectively, is obtained by gathering the contributions from individual elements. Fora mesh
of nel elements,
h ¼
X
nel
e¼1
Nede ¼
X
nel
e¼1
NeLe
 
!
d;
wh ¼
X
nel
e¼1
Newe ¼
X
nel
e¼1
NeLe
 
!
w;
ð4:15Þ
where we have used de ¼ Led following Equation (2.21). The global shape functions are deﬁned as
N ¼
X
nel
e¼1
NeLe;
ð4:16Þ
and it can be seen from (4.15) that the global approximation of the trial solutions and weight functions can
be expressed as
h ¼ Nd ¼
X
nnp
I¼1
NIdI;
wh ¼ Nw ¼
X
nnp
I¼1
NIwI;
ð4:17Þ
where nnp is the number of nodes in the mesh. Note that (4.15) and (4.17) are identical functions, as can be
seen by substituting (4.16) into (4.17).
Writing the approximation in the global form is very useful for studying continuity and convergence
properties of the ﬁnite element solution.
ThematricesofglobalshapefunctionsNðxÞandofelementshapefunctionsNeðxÞarebothrowmatrices.
To express the shape functions in a column matrix, we take the transpose of (4.16)
NT ¼
X
nel
e¼1
LeTNeT:
ð4:18Þ
84
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

Equation (4.18) shows that the global shape functions can be obtained by a gather that is identical to that
used in Chapter 2 to assemble the force matrix.
To explainthe characteristics of theglobal shape functions, we consider the two-elementmesh depicted
in Figure 4.7. Here the global nodes have been numbered sequentially; recall that the presence of a
superscript on a variable indicates that the subscripts refer to local node numbers.
For the example in Figure 4.7, the scatter matrices Le, which were introduced in Chapter 2, are given by
dð1Þ ¼
ð1Þ
1
ð1Þ
2
"
#
¼
1
2


¼
1
0
0
0
1
0


|ﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄ}
Lð1Þ
1
2
3
2
64
3
75 ¼ Lð1Þd;
dð2Þ ¼
ð2Þ
1
ð2Þ
2
"
#
¼
2
3


¼
0
1
0
0
0
1


|ﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄ}
Lð2Þ
1
2
3
2
64
3
75 ¼ Lð2Þd:
From (4.16) we obtain
N ¼ Nð1ÞLð1Þ þ Nð2ÞLð2Þ ¼
Nð1Þ
1
|{z}
N1
Nð1Þ
2
þ Nð2Þ
1
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
N2
Nð2Þ
2
|{z}
N3
"
#
:
ð4:19Þ
The number of global shape functions is equal to the number of nodes. The global shape functions, as
obtained from the above, are shown in Figure 4.8. Notice that the global and element shape functions are
identical over an element domain.
Itcanbe seenthattheglobalshapefunctionsalso satisfy theKronecker deltaproperty.Oneofthe salient
features of the global shape functions is that they are C0 continuous. As can be seen from (4.17), the ﬁnite
element trial solutions and weight functions are linear combinations of the shape functions. As the global
shape functions are C0, any linear combination must be C0, so the C0 continuity of both h and wh is
guaranteed.
Moreover,astheseshapefunctionsarepolynomials,theresultingintegralsintheweakformareﬁnite,sothe
square integrability requirement of the trial solutions and weight functions discussed in Section 3.10 is met.
Mathematically, we say that shape functions are H1, i.e. NI 2 H1 (See Section 3.5.2 for deﬁnition of H1).
4.6
GAUSS QUADRATURE
In general, the weak form derived in Chapter 3 cannot be integrated in closed form. Therefore, numerical
integrationisneeded.Althoughtherearemanynumericalintegrationtechniques,Gaussquadrature,which
1
2
(1) 
1
2
1
2
3
(2) 
(1) 
(2)
Figure 4.7
Global and local node numbers for a ﬁnite element mesh.
GAUSS QUADRATURE
85

is described in this section, is one of the most efﬁcient techniques for functions that are polynomials or
nearly polynomials. In FEM, the integrals usually involve polynomials, so Gauss quadrature is a natural
choice.
Consider the following integral:
I ¼
Z b
a
fðxÞdx ¼ ?
ð4:20Þ
The Gauss quadrature formulas are always given over a parent domain [1, 1]. Therefore, wewill map the
one-dimensional domain from the parent domain [1, 1] to the physical domain [a, b] using a linear
mapping as shown in Figure 4.9. Note that at x ¼ a;  ¼ 1 and at x ¼ b;  ¼ 1.
This gives us the following equation relating x and :
x ¼ 1
2 ða þ bÞ þ 1
2 ðb  aÞ:
ð4:21Þ
−1
1 
0 
ξ
l
a
b
x
Figure 4.9
Mapping of the one-dimensional domain from the parent domain [1, 1] to the physical domain [a, b].
2 
1 
3
1(x)
N
2(x)
N
3(x)
N
x
NI
(1)
(2)
(1)
1 (x)
N
(2)
1 (x)
N
(2)
2 (x)
N
(1)
2
)
(x
N
2 
1 
3
x
e
I
N
(1) 
(2) 
Figure 4.8
Linear global (top) and element (bottom) shape functions for a two-element mesh.
86
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

The above map can also be written directly in terms of the linear shape functions:
x ¼ x1N1ðÞ þ x2N2ðÞ ¼ a 1  
2
þ b  þ 1
2
:
From (4.21) we get the following:
dx ¼ 1
2 ðb  aÞ d ¼ l
2 d ¼ Jd;
ð4:22Þ
where J is the Jacobian given by J ¼ ðb  aÞ=2. We now write the integral (4.20) as
I ¼ J
Z1
1
fðÞd ¼ J^I;
where
^I ¼
Z1
1
fðÞd:
In the Gauss integration procedure outlined below, we approximate the integral by
^I ¼ W1fð1Þ þ W2fð2Þ þ    ¼ W1
W2
  
Wn
½

|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
WT
fð1Þ
fð2Þ
...
fðnÞ
2
6664
3
7775
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
f
¼ WTf;
ð4:23Þ
where Wi are the weights and i are the points at which the integrand is to be evaluated.
The basic idea of the Gauss quadrature is to choose the weights and the integration points so that the
highestpossiblepolynomialisintegratedexactly.Toobtainthisformula,thefunctionfðÞisapproximated
by a polynomial as
fðÞ ¼ a1 þ a2 þ a32 þ    ¼
1

2
  


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
p
a1
a2
a3
...
2
6664
3
7775
|ﬄﬄ{zﬄﬄ}
a
¼ pðnÞa:
ð4:24Þ
We next express the values of the coefﬁcients ai in terms of the function fðÞ at the integration points:
fð1Þ ¼ a1 þ a21 þ a32
1 þ   
fð2Þ ¼ a1 þ a22 þ a32
2 þ   
..
.
fðnÞ ¼ a1 þ a2n þ a32
n þ   
or
fð1Þ
fð2Þ
..
.
fðnÞ
2
666664
3
777775
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
f
¼
1
1
2
1
  
1
2
2
2
  
..
.
..
.
..
.
..
.
1
n
2
n
  
2
6666664
3
7777775
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
M
a1
a2
..
.
an
2
666664
3
777775
|ﬄﬄ{zﬄﬄ}
a
:
ð4:25Þ
Based on (4.25) and (4.23), the integral ^I will be written as
^I ¼ WTMa:
ð4:26Þ
GAUSS QUADRATURE
87

Gaussquadratureprovidestheweightsandintegrationpointsthatyieldanexactintegralofapolynomialof
a given order. To determinewhat theweights and quadrature points should be, we integrate the polynomial
fðÞ:
^I ¼
Z1
1
fðÞ d ¼
Z1
1
1

2
3
  


a1
a2
...
an
2
66664
3
77775
d ¼

2
2
3
3
4
4
  

1
1
a
¼
2
0
2
3
0
  


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
^P
a ¼ ^Pa:
ð4:27Þ
The weights and quadrature points are selected so that^I in (4.27) equals^I in (4.26) so that, the quadrature
formula gives the exact integral for a polynomial of a given order. This yields
WTMa ¼ ^Pa
)
MTW ¼ ^PT :
ð4:28Þ
(4.28) is a system of nonlinear algebraic equations for the unknown matrices M and W.
Note that if ngp is the number of Gauss points, the polynomial of order p that can be integrated exactly is
given by
p  2ngp  1:
Thereasonforthisisthatapolynomialoforderpisdeﬁnedbyp þ 1parameters.Asboththeweightsandthe
integration points are adjustable, the ngp-point Gauss integration scheme has 2ngp parameters that can be
adjusted to integrate a polynomial of order p exactly. Thus, an ngp-point Gauss formula can integrate a
(2ngp  1)-order polynomial exactly. It follows that the number of integration points needed to integrate a
polynomial of order p exactly is given by
ngp  p þ 1
2
:
For example, to integrate a quadratic polynomial (p ¼ 2) exactly, we need a minimum of ngp ¼ 2
integration points.
Example 4.1: Gauss quadrature
Evaluate the integral below using two-point Gauss quadrature.
I ¼
Z5
2
ðx3 þ x2Þdx;
2ngp  1 ¼ 3
)
ngp ¼ 2:
Asngp ¼ 2(two-pointintegration),theaboveintegralcanbeevaluatedexactly.Weuse(4.28)tocompute
ðW1; 1Þ and ðW2; 2Þ:
1
1
1
2
2
1
2
2
3
1
3
2
2
66664
3
77775
W1
W2
"
#
¼
2
0
2
3
0
2
666664
3
777775
)
W1 ¼ W2 ¼ 1
1 ¼  1ﬃﬃﬃ
3
p 2 ¼ 1ﬃﬃﬃ
3
p :
88
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

To obtain the above solution of four nonlinear algebraic equations in four unknowns, we note that by
symmetry W1 ¼ W2 and 1 ¼ 2. The ﬁrst equation can then be used to obtain theweights and the third
equation the integration points.
Next, we will use (4.22) with a ¼ 2 and b ¼ 5 to express x and f in terms of :
x ¼ 1
2 ða þ bÞ þ 1
2 ðb  aÞ ¼ 3:5 þ 1:5;
fðÞ ¼ ð3:5 þ 1:5Þ3 þ ð3:5 þ 1:5Þ2:
Using (4.23), the integral becomes
I ¼ J^I ¼ l
2
Z1
1
ðð3:5 þ 1:5Þ3 þ ð3:5 þ 1:5Þ2Þ d
¼ l
2 W1ðð3:5 þ 1:51Þ3 þ ð3:5 þ 1:51Þ2Þ þ l
2 W2ðð3:5 þ 1:52Þ3 þ ð3:5 þ 1:52Þ2Þ
¼ 37:818 þ 153:432 ¼ 191:25:
In this case, as Gauss quadrature is exact we can check the result by performing analytical integration,
which yields
Z5
2
ðx3 þ x2Þdx ¼
x4
4 þ x3
3

	



5
2
¼ 197:917  6:667 ¼ 191:25:
The Gauss quadrature points and weights ðWi; iÞ can be calculated for anynumber ofintegration points.
These results are tabulated in Table 4.1. In the ﬁnite element program, these values can be programmed
once so that (4.28) does not have to be repeatedly solved.
Table 4.1
Position of Gauss points and corresponding weights.
ngp
Location, i
Weights, Wi
1
0.0
2.0
2
1=
ﬃﬃﬃ
3
p
¼ 0:5773502692
1.0
3
0:7745966692
0.555 555 5556
0.0
0.888 888 8889
4
0:8611363116
0.347 854 8451
0:3399810436
0.652 145 1549
5
0:9061798459
0.236 926 8851
0:5384693101
0.478 628 6705
0.0
0.568 888 8889
6
0:9324695142
0.171 324 4924
0:6612093865
0.360 761 5730
0:2386191861
0.467 913 9346
GAUSS QUADRATURE
89

The Gauss formulas of higher order are usually obtained from special functions called Bernstein
polynomials, see Bernstein (1912).
REFERENCE
Bernstein, S. (1912) De´monstration du the´ore`me de Weierstrass fonde´e sur le calcul des probabilities. Commun. Soc.
Math. Kharkov, 13, 1–2.
Problems
Problem 4.1
Considerafour-nodecubicelementinonedimension.Theelementlengthis3withx1 ¼ 1;theremaining
nodes are equally spaced.
a. Construct the element shape functions.
b. Find the displacement ﬁeld in the element when
de ¼
u1
u2
u3
u4
2
664
3
775 ¼ 103
1
0
1
4
2
664
3
775:
c. Evaluate the Be matrix and ﬁnd the strain for the above displacement ﬁeld.
d. Plot the displacement uðxÞ and strain "ðxÞ.
e. Find the strain ﬁeld when the nodal displacements are deT ¼ ½1 1 1 1. Why is this result
expected?
Problem 4.2
Consider a ﬁve-node element in one dimension. The element length is 4, with node 1 at x ¼ 2, and the
remaining nodes are equally spaced along the x-axis.
a. Construct the shape functions for the element.
b. The temperatures at the nodes are given by T1 ¼ 3 C; T2 ¼ 1 C; T3 ¼ 0 C; T4 ¼ 1 C; T5 ¼ 2 C.
Find the temperature ﬁeld at x ¼ 3:5 using shape functions constructed in (a).
Problem 4.3
Derive the shape functions for a two-node one-dimensional element which is C1 continuous. Note that the
shape functionsderived in Chapter 4 are C0 continuous. To enforce C1 continuity, it isnecessary to enforce
continuity of displacements and their derivatives. Start by considering a complete cubic approximation
ue ¼ ae
0 þ ae
1x þ ae
2x2 þ ae
3x3 andderivefourshapefunctionscorrespondingtothedisplacementsandtheir
derivatives at each node. For clarity of notation, denote the derivatives at the nodes by i; i ¼ 1; 2.
Problem 4.4
Consider the displacement ﬁeld uðxÞ ¼ x3; 0  x  1. Write a MATLAB program that performs the
following tasks. (The instructor should specify how many of these parts should be done.)
90
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

a. Subdivide the interval [0, 1] into two elements. Compute the displacement ﬁeld in each element by
letting the nodal displacements be given by uI ¼ x3
I and using a linear two-node element so that the
displacementﬁeldineachelementisgivenbyueðxÞ ¼ NeðxÞde ¼ NeðxÞLed,whereNeðxÞarethelinear
shapefunctionsgivenby(4.6).PlotuðxÞandtheﬁniteelementﬁeldueðxÞonthesameplotintheinterval
[0, 1].
b. Compute the strain in each element by "eðxÞ ¼ BeðxÞde ¼ BeðxÞLed and plot the ﬁnite element strain
and the exact strain. How do these compare?
c. Repeat parts (a) and (b) for meshes of four and eight elements. Does the interpolation of the strain
improve?
d. TheerrorofaninterpolationisgenerallymeasuredbywhatiscalledaL2 norm.TheerrorintheL2 norm,
which we denote by e, is given by
e2 ¼
Z L
0
ðue  uÞ2 dx;
where uðxÞ ¼ x3 in this case. Compute the error e for meshes of two, fourand eight linear displacement
elements. Use Gauss quadrature for integration. Then plot (this can be done manually) the error versus
the element size on a log-log plot. This should almost be a straight line. What is its slope? This slope is
indicative of the rate of convergence of the element.
e. Repeat part (d) using quadratic two-node quadratic elements.
Problem 4.5
Modify the functions Nmatrix1D.m and Bmatrix1D.m in Section 12.4 to include four-node elements.
Problem 4.6
Use Gauss quadrature to obtain exact values for the following integrals. Verify by analytical integration:
ðaÞ
Z4
0
ðx2 þ 1Þ dx;
ðbÞ
Z1
1
ð4 þ 22Þ d:
(c) Write a MATLAB code that utilizes function gauss.m and performs Gauss integration. Check your
manual calculations against the MATLAB code.
Problem 4.7
Use three-point Gauss quadrature to evaluate the following integrals. Compare to the analytical
integral.
ðaÞ
Z1
1

2 þ 1 dx;
ðbÞ
Z1
1
cos2  d:
REFERENCE
91

Write a MATLAB code that utilizes function gauss.m and performs Gauss integration. Checkyour manual
calculations against the MATLAB code.
Problem 4.8
The integral
R1
1
ð33 þ 2Þd can be integrated exactly using two-point Gauss quadrature. How is the
accuracy affected if
a. one-point quadrature is employed;
b. three-point quadrature is employed.
Check your calculations against MATLAB code.
Problem 4.9
Verify that the shape functions of two-, three- and four-node elements derived in this chapter satisfy the
following conditions:
X
nen
I¼1
Ne
I ðxÞ ¼ 1:
Explain why the above condition always has to be satisﬁed.
92
APPROXIMATION OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS AND GAUSS QUADRATURE

5
Finite Element Formulation for
One-Dimensional Problems
We have now prepared all of the ingredients needed for formulating the ﬁnite element equations: (1) the
weak form, which is equivalent to the strong form we wish to solve, and (2) the ﬁnite element weight and
trial functions, which will be plugged into the weak form. So we are ready to develop the ﬁnite element
equations for the physical systems we have described in Chapter 3:heat conduction, stress analysis and the
advection–diffusion equation. This is the last step in the roadmap in Figure 3.1. This step isoften called the
discretization, as we now obtain a ﬁnite number of discrete equations from the weak form.
The procedure is similar to the one we used in Example 3.3. We ﬁrst construct admissible weight
functions and trial solutions in terms of arbitrary parameters. However, in the ﬁnite element method, the
parameters are the nodal values of the functions. From the arbitrariness of the nodal values for the weight
function, we then deduce the ﬁnite element equations, which are linear algebraic equations. We often call
these the discrete equations the system equations; in stress analysis, they are called the stiffness equations.
The ﬁnite element analysis procedure is often broken up into four steps:
1. preprocessing, in which the mesh is constructed;
2. formulation of the discrete ﬁnite element equations;
3. solving the discrete equations;
4. postprocessing, where the solution is displayed and various variables that do not emanate directly from
the solution are calculated.
In one dimension, preprocessing and postprocessing are quite straightforward, so we will have little to say
about these in this chapter. However, in multidimensional problems, these are quite challenging and
important steps for users of software.
5.1
DEVELOPMENT OF DISCRETE EQUATION: SIMPLE CASE
In order tominimize the abstractness ofthis description, we ﬁrst consider the speciﬁcproblem discussed in
Section3.2,withaﬁniteelementmodelconsistingoftwolinearelementsasshowninFigure5.1a.Ascanbe
seen,atx ¼ 0,theproblemhasatraction(natural)boundarycondition,andanessentialboundarycondition
is applied at x ¼ l. Nodes on the essential boundary are numbered ﬁrst as shown in Figure 5.1a.
The weak form has been developed in Chapter 3 and is given as follows.
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

Find uðxÞ among the smooth trial solutions that satisfy the essential boundary condition uðlÞ ¼ u1 such
that
Z l
0
dw
dx

T
AE du
dx


dx 
Z l
0
wT b dx  ðwTtAÞ

x¼0
¼ 0
8wðxÞ with wðlÞ ¼ 0:
ð5:1Þ
Intheabove,wehavetakenthetransposeoftheweightfunctions;aswðxÞisascalar,thisdoesnotchangethe
value of the expression, but it is necessary for consistency when we substitute matrix expressions for wðxÞ
or its derivative.
The procedure we will follow is similar to Example 3.3: We will evaluate the weak form for the ﬁnite
elementtrialsolutionsandweightfunctions.Then,byinvokingthearbitrarinessoftheweightfunctions,we
will deduce a set of linear algebraic (discrete) equations.
The ﬁnite element weight functions are
wðxÞ  whðxÞ ¼ NðxÞw;
ð5:2Þ
where  denotes an approximation and NðxÞ is the matrix of shape functions. For this mesh,
wðxÞ ¼ w1N1ðxÞ þ w2N2ðxÞ þ w3N3ðxÞ. The ﬁnite element trial solutions are approximated by the same
shape functions:
uðxÞ  uhðxÞ ¼ NðxÞd:
ð5:3Þ
For this mesh, uðxÞ ¼ u1N1ðxÞ þ u2N2ðxÞ þ u3N3ðxÞ. Notice that we refer to theweight functions and trial
solutions in the plural case as there are inﬁnitely many; our task will be to ﬁnd that trial solution which
satisﬁes the weak form. Various shape functions were developed in Chapter 4, and the procedure we will
develop will be applicable to all of them, but ﬁrst we will focus on the two-node element with linear shape
functions. These ﬁnite element shape functions, as we learned in Chapter 4, are sufﬁciently smooth to be
employed in the weak form.
x
3
1
2
(1)
(2)
(1)
(2)
(1)
(2)
x3 = 0
u2
u3
u1
x1 = l
N1 (x)
N2 (x)
N3 (x)
Γu
Γt
x
3
(a)
(b)
(c)
1
2
x
3
1
2
Figure 5.1
(a) Two-element mesh, (b) global shape functions and (c) an example of a trial solution that satisﬁes an
essential boundary condition.
94
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The trial solutions must be constructed so that theysatisfy the essential boundary condition. This can be
easily accomplished by letting
u1 ¼ u1:
ð5:4Þ
The other nodal displacements are unknown and will be determined by the solution of the weak form. The
globalshapefunctionsareshowninFigure5.1(b).Noticethattheyarethe tentfunctionswehavedescribed
in Chapter 4. The ﬁnite element approximation is a linear combination of these shape functions. An
example of a ﬁnite element trial solution is shown in Figure 5.1(c). Because of (5.4) and the smoothness of
the ﬁnite element approximation, all of the trial solutions are admissible.
On the essential boundary, the weight functions must vanish. To meet this requirement, we set
w1 ¼ 0:
ð5:5Þ
The remaining nodal values, w2 and w3, are arbitrary, as the weight functions must be arbitrary.
The element and global matrices are related by gather matrices just as in Chapter 2, so we have
we ¼ Lew;
de ¼ Led:
ð5:6Þ
The gather matrices follow from the relation between local and global node numbers.
As the ﬁnite element functions and their derivatives have kinks and jumps at the element interfaces,
respectively (see Figure 3.5), efﬁcient integration of the weak form (5.1) necessitates evaluation of the
integral over ½0; l as a sum of integrals over individual element domains ½xe
1; xe
2. Sowe replace the integral
over the entire domain in (5.1) by the sum of the integrals over the element domains:
X
nel
e¼1
Z xe
2
xe
1
dwe
dx

T
AeEe due
dx


dx 
Z xe
2
xe
1
weT b dx  ðweTAetÞ

x¼0
(
)
¼ 0
ð5:7Þ
where we have placed superscript ‘e’ on the weight and trial functions to indicate that these are the parts of
thosefunctionsthatpertaintoelemente.Ineachelemente,theweightfunction(5.2)andtrialsolution(5.3)
can be written as
ueðxÞ ¼ Nede;
due
dx ¼ Bede;
weT ¼ weTNeT;
dwe
dx

T
¼ weTBeT;
ð5:8Þ
where de and we are given in terms of the global nodal values by (5.6). Equation (5.8) is the same
approximation as (5.2) and (5.3), and these functions are also admissible. They are a localization of the
globalapproximationstotheelements;theyfollowfromthefactthatinelemente,theglobalNandelement
shape functions Ne are identical (see Figure 4.8). Henceforth in this book, we will write the ﬁnite element
approximations at the element level in the form (5.8); the essential boundary conditions will be met on the
global level and it will be implicit that de and we are given in terms of the global nodal values by (5.6).
Substituting (5.8) into (5.7) gives
X
nel
e¼1
weT
Zxe
2
xe
1
BeTAeEe Bedx
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
e
de 
Zxe
2
xe
1
NeTb dx
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
fe
ðNeTAet
|ﬄﬄﬄ{zﬄﬄﬄ}
fe
Þx¼0
8
>
>
>
>
>
>
>
<
>
>
>
>
>
>
>
:
9
>
>
>
>
>
>
>
=
>
>
>
>
>
>
>
;
¼ 0:
ð5:9Þ
DEVELOPMENT OF DISCRETE EQUATION: SIMPLE CASE
95

In the above, we have deﬁned two matrices that will be very useful in the ﬁnite element method (FEM):
(i) the element stiffness matrix
Ke ¼
Zxe
2
xe
1
BeTAeEe Be dx ¼
Z
e BeTAeEe Be dx;
ð5:10Þ
(ii) the element external force matrix
fe ¼
Zxe
2
xe
1
NeTb dxþðNeTAetÞx¼0 ¼
Z
e NeTb dx
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
f
e

þ ðNeTAetÞ

e
t
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
f
e

ð5:11Þ
where te is the portion of the element boundary on the natural boundary and fe
 and fe
 in (5.11) are the
element external body and boundary force matrices, respectively. The element matrices will play the same
key roles as in the analysis of discrete systems in Chapter 2: They are the building blocks of the global
equations. We will examine these matrices for stress analysis and heat conduction in more detail later. In
(5.10) and (5.11), the far right-hand side expressions use a notation that we will introduce in the next
section.
Substituting (5.10) and (5.11) into (5.9) and using (5.6) gives
wT
X
nel
e¼1
LeT Ke Le d 
X
nel
e¼1
LeTfe
 
!
¼ 0:
ð5:12Þ
InderivingEquation(5.12)recallthatwisnotafunctionofxandisaglobalmatrix,andhenceitcanbetaken
outside of the summation symbol. Moreover, the scatter operator Le is not a function of x, but is element
dependent.Therefore,ithasbeentakenoutoftheintegral,butshouldremaininsidethesummationoverthe
elements.
If you compare the ﬁrst sum in (5.12) to Equation (2.25), the expression can be recognized as the
assembled system (stiffness) matrix
K ¼
X
nel
e¼1
LeT Ke Le:
ð5:13Þ
The system matrix for the differential equation is assembled by exactly the same operations as for the
discrete systems: matrix scatter and add, which is also equivalent to direct assembly. It should be stressed
that we do not need to perform the large matrix multiplications indicated above to assemble the global
matrices. The assembly processes are identical to the assembly procedures we have learned in Chapter 2.
The second term in (5.12) is the assembled external force matrix
f ¼
X
nel
e¼1
LeTfe:
ð5:14Þ
Thisisthe column matrixassembly operation.Itconsistsofa columnmatrix scatterand addandisactually
easier to learn than matrix assembly; it will be illustrated in the examples that follow.
Substituting Equations (5.13) and (5.14) into Equation (5.12) yields
wTðK d  fÞ ¼ 0
8w except w1 ¼ wðlÞ ¼ 0;
ð5:15Þ
96
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

where we have indicated the arbitrariness of the nodal values, w, which emanates from the arbitrariness of
the weight functions in the statement of the weak form (5.1) and the restriction on w, (5.5). Let
r ¼ Kd  f;
ð5:16Þ
where r is called the residual. Then (5.15) becomes
wTr ¼ 0
8w except w1 ¼ 0:
ð5:17Þ
If we write Equation (5.15) for the speciﬁc model in Figure 5.1, we have
w2r2 þ w3r3 ¼ 0;
where the ﬁrst term has dropped out because w1 ¼ 0. As the above holds for arbitrary w2 and w3, we can
deduce that r2 ¼ r3 ¼ 0, but we cannot say anything about r1, and in fact, as it is the unbalanced force at
node 1, so it is the reaction force. If we write the equations, we obtain
r ¼
r1
0
0
2
4
3
5 ¼
K11
K12
K13
K21
K22
K23
K31
K32
K33
2
4
3
5
u1
u2
u3
2
4
3
5 
f1
f2
f3
2
4
3
5:
ð5:18Þ
Rearranging the term in (5.18) gives
K11
K12
K13
K21
K22
K23
K31
K32
K33
2
4
3
5
u1
u2
u3
2
4
3
5 ¼
f1 þ r1
f2
f3
2
4
3
5:
ð5:19Þ
Equation (5.19) is a system of three equations with three unknowns, u2, u3 and r1. It is similar to Equation
(2.27) derived in Chapter 2. Various solution procedures such as partition and penalty methods have been
discussed in Chapter 2. For instance, using the partition approach, the nodal displacements u2 and u3 are
found ﬁrst by solving
K22
K23
K32
K33


u2
u3


¼
f2  K21u1
f3  K31u1


;
followed by the calculation of unknown reactions at node 1:
r1 ¼ f1  ½K11
K12
K13
u1
u2
u3
2
4
3
5:
Liketheequationsfordiscretesystems,Equation(5.19)canbeviewedasequationsofdiscreteequilibrium
at the nodes. The left-hand side is the matrix ofinternal forces and the right-hand side is that of the external
forcesandreactions.Notethatthestiffnessmatrixin(5.19)isstillsingular.However,thepartitionapproach
does not require its inversion.
5.2
ELEMENT MATRICES FOR TWO-NODE ELEMENT
Consider a two-node linear element with constant cross-sectional area Ae and Young’s modulus Ee
subjected to linear distribution of body forces as shown in Figure 5.2. In this section, we derive the element
stiffness matrix and the external force matrix.
ELEMENT MATRICES FOR TWO-NODE ELEMENT
97

RecallthatinSection4.1weshowedthatthetwo-nodeelementshapefunctionsandtheirderivativesare
given as
Ne ¼
 x  xe
2
xe
1  xe
2
x  xe
1
xe
2  xe
1

¼ 1
le
	
ðxe
2  xÞ
ðx  xe
1Þ

;
Be ¼ d
dx Ne ¼  1
le
1
le


¼ 1
le
	
1 1

:
ð5:20Þ
The element stiffness matrix is then
Ke ¼
Zxe
2
xe
1
BeTAeEe Be dx ¼
Zxe
2
xe
1
1
le
1
1
"
#
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
BeT
AeEe 1
le ½1 1
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
Be
dx ¼ AeEe
ðleÞ2
1
1
"
#
½1 1
Zxe
2
xe
1
dx
¼ AeEe
ðleÞ2
1
1
1
1
"
#
xe
2  xe
1
|ﬄﬄﬄ{zﬄﬄﬄ}
le
0
B
@
1
C
A;
Ke ¼ AeEe
le
1
1
1
1


:
ð5:21Þ
NotethatthisresultisidenticaltothatforthebarelementderivedinChapter2basedonphysicalarguments.
Inotherwords,thestiffnessmatrixofthetwo-nodeelementwithconstantcross-sectionalareaandconstant
Young’s modulus when derived from the weak form is identical to that obtained by physical arguments. It
then may occur to you, why go to all this trouble? The reason is that for higher order elements and in
multidimensions,theproceduresdescribedinChapter2donotwork,whereastheweakformcanbeapplied
to higher order elements and two and three dimensions.
We now turn to the evaluation of the external nodal body forces, the ﬁrst term in Equation (5.11):
fe
 ¼
Zxe
2
xe
1
NeTbðxÞ dx:
As the body force distribution is linear, it can be expressed in terms of linear shape functions as
bðxÞ ¼ Neb;
b ¼
b1
b2


:
x
1
1e
x
2
2
e
x
E e Ae
b2
b1
Figure 5.2
Two-node element with linear distribution of body force.
98
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The element body force matrix is then given as
fe
 ¼
Zxe
2
xe
1
NeTNe dx b ¼
1
ðleÞ2
Zxe
2
xe
1
ðxe
2  xÞ2
ðxe
2  xÞðx  xe
1Þ
ðxe
2  xÞðx  xe
1Þ
ðx  xe
1Þ2
"
#
dx b
¼ le
6
2
1
1
2

 b1
b2


:
It can be seen that the sum of forces acting on the element is leðb1 þ b2Þ=2, which is exactly the integral of
the body force over the element domain, i.e. the total force. As expected, for b1 ¼ b2, half of the force goes
to node 1 and half to node 2.
5.3
APPLICATION TO HEAT CONDUCTION AND DIFFUSION PROBLEMS1
The expressions for heat conduction and other diffusion equations can be obtained by just replacing the
ﬁeldsandparametersusingtheconversiontableintroducedinChapter3(Table3.2).Theterminologyofthe
matrices in the discrete heat conduction and diffusion equations is summarized in Table 5.1. The element
matrices are given by
Ke ¼
Z
e BeTAee Be dx;
fe ¼
Z
e NeTf dx
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
f
e

þ ðNeTAe Þ

 e

|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
f
e

ð5:22Þ
with parameters deﬁned by using the equivalences given in Table 3.2.
Example 5.1.
Heat conduction
Wewill ﬁrst use a heat conduction problem to illustrate how the ﬁnite element procedure is applied. This
example will illustrate the construction and solution of the ﬁnite element equations and discuss the
accuracyofﬁniteelementsolutions.Mostoftheproceduresand discussion inthisexampleapplyequally
to stress analysis.
Consider a bar with a uniformly distributed heat source of s ¼ 5 W m1. The bar has a uniform cross-
sectional area of A ¼ 0:1 m2 and thermal conductivity k ¼ 2 W C1 m1. The length of the bar is 4 m.
The boundary conditions are Tð0Þ ¼ 0 C and qðx ¼ 4Þ ¼ 5 W m2 as shown in Figure 5.3. Divide the
problem domain into two linear temperature two-node elements and solve it by the FEM.
Preprocessing
We start by numbering the nodes on T. The ﬁnite element mesh is shown in Figure 5.4.
Table 5.1
Terminology for ﬁnite element matrices.
Matrices
Elasticity
Diffusion
Heat conduction
K
Stiffness
Diffusivity
Conductance
f
Force
Flux
Flux
d
Displacement
Concentration
Temperature
1Recommended for Science and Engineering Track.
APPLICATION TO HEAT CONDUCTION AND DIFFUSION PROBLEMS
99

Element conductance matrix
The two-node element shape functions, their derivatives and the resulting conductance matrix (replace
Ee by ke in (5.21))
Ke ¼
Z
e
BeTAekeBe dx ¼ Aeke
le
1
1
1
1


werederivedinSection5.2.Notethatthisresultissimilartothebarelement,exceptthatYoung’smodulus
is replaced by conductivity.
For element 1, we have
xð1Þ
1
¼ 0;
xð1Þ
2
¼ 2;
lð1Þ ¼ 2;
ðAkÞð1Þ ¼ 0:2;
Kð1Þ ¼ 0:2
2
1
1
1
1
"
#
¼
0:1
0:1
0:1
0:1
"
#
;
and similarly for element 2:
Kð2Þ ¼
0:1
0:1
0:1
0:1


:
Conductance matrix
The (global) conductance matrix is obtained by the matrix assembly operation:
K ¼
X
nel
e¼1
LeTKeLe ¼ Lð1ÞTKð1ÞLð1Þ þ Lð2ÞTKð2ÞLð2Þ:
ð5:23Þ
We can use direct matrix assembly to obtain it, but to show that the two procedures are identical we will
ﬁrst obtain the global conductance matrix by the above equation. We will assemble the entire con-
ductance matrix without taking into account the essential boundary conditions. This means that just as in
Chapter 2, we will obtain equations for which the right-hand side contains unknowns. However, by
assembling all of the equations, we will be able to evaluate the boundary ﬂux matrix at the essential
boundaries.
x
x = 0
x = 4 m
s = 5 W m−1
T (x = 0) = T = 0°C
q (x = 4)n = q = 5 Wm−2
Figure 5.3
Problem deﬁnition of Example 5.1.
x
1
3
(1) 
(2)
2
x1 = 0
x2 = 2
x3 = 4
ΓT
Figure 5.4
Finite element mesh of Example 5.1.
100
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The gather operators for the two elements are
dð1Þ ¼
Tð1Þ
1
Tð1Þ
2
2
4
3
5 ¼
T1
T2
"
#
¼
1
0
0
0
1
0
"
#
T1
T2
T3
2
64
3
75 ¼ Lð1Þd;
dð2Þ ¼
Tð2Þ
1
Tð2Þ
2
2
4
3
5 ¼
T2
T3
"
#
¼
0
1
0
0
0
1
"
#
T1
T2
T3
2
64
3
75 ¼ Lð2Þd:
The scatter of the conductance matrices gives
~K
ð1Þ¼ Lð1ÞTKð1ÞLð1Þ ¼
1
0
0
1
0
0
2
4
3
5
0:1
0:1
0:1
0:1


1
0
0
0
1
0


¼
0:1
0:1
0
0:1
0:1
0
0
0
0
2
4
3
5
~K
ð2Þ¼ Lð2ÞTKð2ÞLð2Þ ¼
0
0
1
0
0
1
2
4
3
5
0:1
0:1
0:1
0:1


0
1
0
0
0
1


¼
0
0
0
0
0:1
0:1
0
0:1
0:1
2
4
3
5
The total stiffness is obtained by adding the scattered element stiffnesses given above
K ¼ ~K
ð1Þ þ ~K
ð2Þ ¼
0:1
0:1
0
0:1
0:2
0:1
0
0:1
0:1
2
4
3
5:
ð5:24Þ
In practice, the above triple products are not performed, but rather a direct assembly, as previously
described in Chapter 2, is employed. The direct assembly for the process is shown below
Kð1Þ ¼
0:1
0:1
0:1
0:1


½1
½2
Kð2Þ ¼
0:1
0:1
0:1
0:1


½2
½3
½1
½2
½2
½3
The resulting global conductance matrix is
K ¼
0:1
0:1
0
0:1
0:2
0:1
0
0:1
0:1
2
4
3
5
½1
½2
½3
:
½1
½2
½3
This matrix, obtained by direct assembly, is identical to (5.24)
Boundary ﬂux matrix
The element boundary ﬂux matrices are calculated by (5.11) where t has been replaced by
q according to Table 3.2
fe
 ¼ ðNeTAe  qÞ

eq
¼ NeTðx3Þ  0:1  5 ¼ 0:5 NeTðx3Þ:
Note that the shape functions for element 1 (shown in Figure 5.5) vanish on q. Only shape functions
that are nonzero on the natural boundary q will contribute to the nodal boundary ﬂux. Therefore, in
computing the boundary ﬂux matrix we need to consider only those elements that are on the natural
boundary.
APPLICATION TO HEAT CONDUCTION AND DIFFUSION PROBLEMS
101

Using the above equation, the element boundary ﬂux matrices for the two elements are
fð1Þ
 ¼ 0:5 Nð1Þ
1 ðx3Þ
Nð1Þ
2 ðx3Þ
"
#
¼ 0:5 0
0


¼
0
0


½1
½2
fð2Þ
 ¼ 0:5 Nð2Þ
1 ðx3Þ
Nð2Þ
2 ðx3Þ
"
#
¼ 0:5 0
1


¼
0
0:5

 ½2
½3
The scatter (or direct assembly process) then gives the global boundary ﬂux matrix:
f ¼
X
2
e¼1
LeTfe
;
f ¼
1
0
0
1
0
0
2
64
3
75
0
0


þ
0
0
1
0
0
1
2
64
3
75
0
0:5


¼
0
0
0:5
2
64
3
75
½1
½2
½3
:
Note that this result is the same as assigning ðAqÞjq to the nodewhere the ﬂux is prescribed and zero at
all other nodes. In this way, the boundary matrix can be computed directly.
Source ﬂux matrix
The element source ﬂux matrix is derived in Section 5.2 and is given as
fe
 ¼
Zxe
nen
xe
1
NeTs dx ¼ le
6
2
1
1
2


s1
s2


:
where b in (5.11) has been replaced by s according to Table 3.2. Since s1 ¼ s2 ¼ s, the above reduces to
fe
 ¼ les
2
1
1


:
Itcan beseenthathalf ofthe heatgoes tonode 1and halftonode 2.Thisalsofollowsfromthe factthat the
integral of linear shape functions over the element can be computed as an area of a triangle with height
equal to 1 and the base equal to the element length; this follows easily from Figures 5.5 and 5.6.
In the present example, lð1Þ ¼ lð2Þ ¼ 2 and s ¼ 5, which gives
fð1Þ
 ¼ fð2Þ
 ¼
5
5


:
The element source ﬂux matrix is then assembled:
f ¼
X
2
e¼1
LeTfe
 ¼
1
0
0
1
0
0
2
4
3
5 5
5


þ
0
0
1
0
0
1
2
4
3
5 5
5


¼
5
10
5
2
4
3
5:
(1)
1
N
(1)
2
N
1
x1
x2
x3
0
0
1
2
(1)
(2)
3
x
q  = 5 at x3
A = 0.1 = constant 
Figure 5.5
Shape functions for element 1.
102
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

In practice, a direct assembly is used instead:
fð1Þ
 ¼
5
5


½1
½2
fð2Þ
 ¼
5
5


½2
½3
)
f ¼
5
5 þ 5
5
2
4
3
5
½1
½2
½3
:
Partition and solution
The global system of equations is given by
0:1
0:1
0
0:1
0:2
0:1
0
0:1
0:1
2
4
3
5
0
T2
T3
2
4
3
5 ¼
5
10
5
2
4
3
5 þ
0
0
0:5
2
4
3
5 þ
r1
0
0
2
4
3
5 ¼
r1 þ 5
10
4:5
2
4
3
5:
Since node 1 is on the essential boundary, we partition after the ﬁrst row, which gives
0:2
0:1
0:1
0:1


T2
T3


¼
10
4:5


)
T2
T3


¼
145
190


:
Postprocessing
The temperature gradient is given as
dTð1Þ
dx
¼ Bð1ÞLð1Þd ¼ 1
2 ½1 1 1
0
0
0
1
0


0
145
190
2
64
3
75 ¼ 72:5;
dTð2Þ
dx
¼ Bð2ÞLð2Þd ¼ 1
2 ½1 1 0
1
0
0
0
1


0
145
190
2
64
3
75 ¼ 22:5:
Notethat thetemperaturegradientispiecewiseconstantand,aswill beseeninplotting it,aC1 function.
Evaluation of solution quality
The ﬁnite element solution will now be compared to the exact analytical solution. This type of
comparison can be done only for some simple problems (primarily in one dimension) for which the
exact solution is known.
We start from the strong form from Chapter 3:
d
dx
Ak dT
dx


þ s ¼ 0;
0 < x < l;
d
dx
0:2 dT
dx


þ 5 ¼ 0
)
d2T
dx2 ¼ 25;
Tð0Þ ¼ 0;
qð4Þ ¼ k dT
dx njx¼4 ¼ 5
)
dT
dx ð4Þ ¼ 5
2 ¼ 2:5:
(2)
1
N
(2)
2
N
1
0
0
1
2
3
x
q  = 5 at x3
A = 0.1 = constant 
x3
x2
x1
(1)
(2)
Figure 5.6
Shape functions for element 2.
APPLICATION TO HEAT CONDUCTION AND DIFFUSION PROBLEMS
103

Integrating the governing differential equation gives
d2T
dx2 ¼ 25 ) dT
dx ¼ 25x þ c1 ) dT
dx ð4Þ ¼ 2:5 ¼ 25  4 þ c1 ) c1 ¼ 97:5:
The expression for the temperature is obtained by integrating the temperature gradient, which gives
dT
dx ¼ 25x þ 97:5 ) T ¼ 12:5x2 þ 97:5x þ c2;
Tð0Þ ¼ 0 ) 12:5ð0Þ2 þ 97:5ð0Þ þ c2 ¼ 0 ) c2 ¼ 0:
Thus, the exact temperature and temperature gradient are
Tex ¼ 12:5x2 þ 97:5x;
dTex
dx ¼ 25x þ 97:5:
Figure 5.7 compares the FEM solution with the exact solution. It can be seen that the nodal temperatures
for the FEM solution are exact. This is an unusual anomaly of ﬁnite element solutions in one dimension
and does not occur in multidimensional solutions. It is explained in Hughes (1987) p.25. Note that the
essential boundary condition is satisﬁed exactly. This is not surprising as the trial solution was
constructed so as to satisfy the essential boundary condition. In ﬁnite element solutions, essential
boundary conditions will always be satisﬁed exactly.
Figure 5.8 compares the derivative of the ﬁnite element solution with the exact derivative (the
derivative is proportional to the ﬂux). As can be seen from Figure 5.8 and as mentioned before, the
derivative is a C1 function; the derivative of the temperature and hence the ﬂux in the ﬁnite element
solutionisdiscontinuousbetween elements. Aspointed outin Figure5.8, the natural boundarycondition
at x ¼ 4 is not satisﬁed by the ﬁnite element solution. However, we will see in other examples and in
exercises that the natural boundary condition is met more accurately as the mesh is reﬁned. Thus,
although we do not have to construct the ﬁnite element approximations to satisfy the natural boundary
conditions, they are met approximately.
Itisalsoinformativetoseehowwelltheheatconductionequationismetbytheﬁniteelementsolution.
Recall the heat conduction equation (3.12) and substitute the ﬁnite element solution for the temperature:
Ak d2
dx2 ðNðxÞdÞ þ sðxÞ ¼ errðxÞ:
ð5:25Þ
T
x
2
12.5
97.5   
ex
T
x
x
= –
+
h
T
Figure 5.7
Comparison of the exact and ﬁnite element solutions of temperature.
104
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

In the above, we have replaced the zero on the RHS of the heat conduction equation by ‘err’ as the
deviation from zero is indicative of the error in the ﬁnite element solution. The ﬁrst term of Equation
(5.25) willvanish insidean element, asthe shapefunctionsare linear inx.Therefore, insidethe elements,
the error in the heat conduction equation will be
errðxÞ ¼ sðxÞ
for
x 6¼ xI:
This error actually appears to be quite large and furthermore would not decrease with reﬁnement of the
mesh. The behavior at the nodes is more complicated and will not be considered here.
Thus, both the natural boundary condition and the balance equations are met approximately only by
the ﬁnite element solution. However, it can be shown that the ﬁnite element solution converges to the
exact solution as the mesh is reﬁned, although this is not readily apparent from the weak form.
Convergence of the ﬁnite element solution to the exact solution is discussed in Section 5.6.
5.4
DEVELOPMENT OF DISCRETE EQUATIONS FOR ARBITRARY
BOUNDARY CONDITIONS
We will now consider the development of the ﬁnite element equations for the weak form with arbitrary
boundary conditions, Equation (3.49). For convenience, we write it again:
ﬁnd uðxÞ 2 U such that
Z

dw
dx

T
AE du
dx dx 
Z

wTb dx  ðwTAtÞ

t
¼ 0
8w 2 U0:
ð5:26Þ
Consider the ﬁnite element mesh shown in Figure 5.9. The elements can be of any size, and as we will see
later, smaller elements are usually used where they are needed for accuracy. The nodes on the essential
boundary are numbered ﬁrst as wewill use the partitioning method described in Chapter 2. The actual data
Figure 5.8
Comparison of the exact and ﬁnite element solutions of temperature gradient.
DEVELOPMENT OF DISCRETE EQUATIONS FOR ARBITRARY BOUNDARY CONDITIONS
105

need not be of that form, as the nodes can be renumbered in the program; most commercial software do not
usepartitioning.Butforthepurposeofthefollowingdevelopment,itisassumedthattheessentialboundary
nodes appear ﬁrst in all matrices.
Having selected the ﬁnite element mesh and constructed smooth approximation functions over
individual element domains (5.8), we now express the integral over  in (5.26) as a sum of integrals
over element domains:
X
nel
e¼1
Z
e
dwe
dx

T
AeEe due
dx dx 
Z
e
weTb dx  ðweTAetÞ

et
8
<
:
9
=
;¼ 0
8w 2 U0;
ð5:27Þ
where e are the element domains; integration over e is equivalent to integration over the interval
½xe
1; xe
nen.
Wewill use the same global approximations for theweight functions and trial solutions, (5.2) and (5.3),
respectively. To deal with arbitrary boundary conditions, we will partition the global solution and weight
function matrices as
d ¼
dE
dF


;
w ¼
wE
wF


¼
0
wF


:
Thepartofthematrixdenotedbythesubscript‘E’containsthenodalvaluesontheessentialboundaries.As
indicated by the overbar on dE, these values of the solution are set to satisfy the essential boundary
conditions,sotheycanbeconsideredasknown.Thesubmatricesdenotedbythesubscript‘F’containallthe
remaining nodal values: these entries are arbitrary for the weight function and unknown for the trial
solution. The resulting weight functions and trial solutions will therefore be admissible.
Substituting (5.8) into (5.27) gives
X
nel
e¼1
weT
Z
e
BeTEeAeBe dx de 
Z
e
NeTb dx  ðNeTAetÞ

et
8
<
:
9
=
; ¼ 0
8wF:
ð5:28Þ
Note that (5.28) is for arbitrary wF as wE is not arbitrary but instead must vanish.
Substituting (5.10) and (5.11) into (5.28) and using (5.6), we ¼ Lew and de ¼ Led, gives
wT
X
nel
e¼1
LeTKeLe
 
!
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
d 
X
nel
e¼1
LeTfe
 
!
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
f
2
66664
3
77775
¼ 0
8wF:
ð5:29Þ
x
1
2
nnp
x = a
x = b
nel
(1)
(2)
e
…
…
               
I
…
…
Figure 5.9
Finite element mesh in one dimension.
106
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The above system can be written as
wTr ¼ 0
8wF;
ð5:30Þ
where r ¼ Kd  f as in (5.16).
Partitioning r in Equation (5.30) congruent with w gives
½wE wFT rE
rF


¼ wT
ErE þ wT
FrF ¼ 0
8wF:
ð5:31Þ
As wE ¼ 0 and wF is arbitrary, it follows from the scalar product theorem that rF ¼ 0. Equation (5.16) can
then be written in the partitioned form as
r ¼
rE
0


¼
KE
KEF
KT
EF
KF

 dE
dF



fE
fF


;
where KE, KF and KEF are partitioned to be congruent with the partitions of d and f.
The above equation can be rewritten as
KE
KEF
KT
EF
KF

 dE
dF


¼
fE þ rE
fF


:
ð5:32Þ
Usingthetwo-stepapproachdiscussedinSection5.1,weﬁrstsolvefortheunknowndiscretesolutiondF by
using the second row in the above:
KFdF ¼ fF  KT
EFdE:
ð5:33Þ
Once dF is known, the unknown reactions can be computed from the ﬁrst row of (5.32):
rE ¼ KEdE þ KEFdF  fE:
ð5:34Þ
For purposes of postprocessing, the displacements and stresses are computed in each element using
Equation (5.8) and the stress–strain law:
ueðxÞ ¼ NeðxÞde;
eðxÞ ¼ EeðxÞBeðxÞde:
The element nodal values are obtained by the gather operator Le using de ¼ Led.
An important part of postprocessing is the visual depiction of these results. These are invaluable in
interpreting the results and assessing whether the model is appropriate and has been solved correctly. The
variety and richness of visualization in one-dimensional problems is limited, but we will see that
visualization in two dimensions is quite important.
Example 5.2.
Tapered elastic bar
Consider a problem of an axially loaded elastic bar as shown in Figure 5.10. Dimensions are in meters.
Solveforthe unknowndisplacement andstresses withaﬁniteelement (nel=3,nel=1)meshconsistingof
a single three-node element (nen¼3, nel¼1) as shown in Figure 5.11.
DEVELOPMENT OF DISCRETE EQUATIONS FOR ARBITRARY BOUNDARY CONDITIONS
107

Recall that the element shape functions for the three-node quadratic element are
Nð1Þ
1
¼
ðx  xð1Þ
2 Þðx  xð1Þ
3 Þ
ðxð1Þ
1
 xð1Þ
2 Þðxð1Þ
1
 xð1Þ
3 Þ
¼ ðx  4Þðx  6Þ
ð2Þð4Þ
¼ 1
8 ðx  4Þðx  6Þ;
Nð1Þ
2
¼
ðx  xð1Þ
1 Þðx  xð1Þ
3 Þ
ðxð1Þ
2
 xð1Þ
1 Þðxð1Þ
2
 xð1Þ
3 Þ
¼ ðx  2Þðx  6Þ
ð2Þð2Þ
¼  1
4 ðx  2Þðx  6Þ;
Nð1Þ
3
¼
ðx  xð1Þ
1 Þðx  xð1Þ
2 Þ
ðxð1Þ
3
 xð1Þ
1 Þðxð1Þ
3
 xð1Þ
2 Þ
¼ ðx  2Þðx  4Þ
ð4Þð2Þ
¼ 1
8 ðx  2Þðx  4Þ;
and the corresponding B-matrix is
Bð1Þ
1
¼ dNð1Þ
1
dx
¼ 1
4 ðx  5Þ;
Bð1Þ
2
¼ dNð1Þ
2
dx
¼ 1
2 ð4  xÞ;
Bð1Þ
3
¼ dNð1Þ
3
dx
¼ 1
4 ðx  3Þ;
Bð1Þ ¼ 1
4 ½ðx  5Þ ð8  2xÞ ðx  3Þ:
Stiffness matrix
The element stiffness matrix is given by
Kð1Þ ¼ K ¼
Zx3
x1
Bð1ÞTAð1ÞEð1ÞBð1Þ dx ¼
Z6
2
1
4
ðx  5Þ
ð8  2xÞ
ðx  3Þ
2
64
3
75ð2xÞð8Þ 1
4 ½ðx  5Þ ð8  2xÞ ðx  3Þ dx
¼
Z6
2
xðx  5Þ2
xðx  5Þð8  2xÞ
xðx  5Þðx  3Þ
xð8  2xÞðx  5Þ
xð8  2xÞ2
xð8  2xÞðx  3Þ
xðx  3Þðx  5Þ
xðx  3Þð8  2xÞ
xðx  3Þ2
2
664
3
775 dx:
x
E = 8 Pa
A = 2x
u(x =2) = 0
t (x = 6) = 0
P(x = 5) = 24 N
x = 2
x = 6
b = 8 N/ m−1
Figure 5.10
Geometry, loads and boundary conditions of Example 5.2.
3
(1)
1
2
x
=
(1)
2
4
x
=
(1)
3
6
x
=
1
2
P
x
Figure 5.11
Finite element mesh of Example 5.2.
108
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

It can be seen that the integrand is cubic ðp ¼ 3Þ. So the number of quadrature points required for exact
integration is 2ngp  1  3, i.e. ngp  2, that is, two-point Gauss quadrature is adequate for exact
integration of the integrand. The Jacobian is
J ¼ b  a
2
¼ 2:
Writing x in terms of  and transforming to the parent domain, we have
Z6
2
fðxÞ dx ¼ 2
Z1
1
fðxðÞÞ d ¼ J
W1
|{z}
1
fðxð1ÞÞ þ W2
|{z}
1
fðxð2ÞÞ
2
4
3
5 ¼ 2½ fðx1Þ þ fðx2Þ;
ð5:35Þ
where
x1 ¼ xð1Þ ¼ 4 þ 21 ¼ 4 þ 2  1ﬃﬃﬃ
3
p


¼ 2:8453;
x2 ¼ xð2Þ ¼ 4 þ 22 ¼ 4 þ 2
1ﬃﬃﬃ
3
p


¼ 5:1547:
Using (5.35), K11 is given by
K11 ¼
Z6
2
xðx  5Þ2 dx ¼ 2ð2:8453ð2:8453  5Þ2 þ 5:1547ð5:1547  5Þ2Þ ¼ 26:667:
The stiffness matrix is given by
K ¼
26:67
32
5:33
85:33
53:33
sym
48
2
4
3
5 ¼
26:67
32
5:33
32
85:33
53:33
5:33
53:33
48
2
4
3
5:
Note that the stiffness matrix is symmetric and the sum of the terms in each row (or column) is equal to
zero. The latter follows from the fact that under rigid body motion (for instance, when the nodal
displacements are all equal to 1) the resulting nodal forces must be zero.
Body force matrix
Thematrixofthenodalbodyforcesisobtainedbyaddingthecontributionsfromthedistributedloadingb
(ﬁrst term in (5.36)) and the point force P (second term in (5.36)).
f ¼ fð1Þ
 ¼
Zx3
x1
NeTb dx þ
ðNeTPÞjx¼5
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
contribution from the point force
:
ð5:36Þ
The derivation details of the nodal body forces arising from point forces are given in Appendix A5. Note
that the second term in (5.36) consists of a product of the element shape functions evaluated at the point
where the point force is acting and the value of the point force (positive if it acts in the positive
x-direction). For instance, if the point force is acting in the middle of a linear element, the value of the
shape function in the middle is half, so half of the force ﬂows to each node.
DEVELOPMENT OF DISCRETE EQUATIONS FOR ARBITRARY BOUNDARY CONDITIONS
109

In the present example, (5.36) gives
f ¼
Z6
2
0:125ðx  4Þðx  6Þ
0:25ðx  2Þðx  6Þ
0:125ðx  2Þðx  4Þ
2
4
3
5  8 dx þ
0:125ðx  4Þðx  6Þ
0:25ðx  2Þðx  6Þ
0:125ðx  2Þðx  4Þ
2
4
3
5
x¼5
24:
Two-point Gauss quadrature is needed because the function is quadratic, so
Z6
2
fðxÞ dx ¼ 2½ fðx1Þ þ fðx2Þ:
Thus,
f ¼ 8
2 Nð1Þ
1 ðx1Þ þ Nð1Þ
1 ðx2Þ
h
i
2½Nð1Þ
2 ðx1Þ þ Nð1Þ
2 ðx2Þ
2½Nð1Þ
3 ðx1Þ þ Nð1Þ
3 ðx2Þ
2
664
3
775 þ
3ð5  4Þð5  6Þ
6ð5  2Þð5  6Þ
3ð5  2Þð5  4Þ
2
4
3
5
¼
2ðð2:8453  4Þð2:8453  6Þ þ ð5:1547  4Þð5:1547  6ÞÞ
4ðð2:8453  2Þð2:8453  6Þ þ ð5:1547  2Þð5:1547  6ÞÞ
2ðð2:8453  2Þð2:8453  4Þ þ ð5:1547  2Þð5:1547  4ÞÞ
2
64
3
75 þ
3
18
9
2
64
3
75
|ﬄﬄﬄ{zﬄﬄﬄ}
sum ¼ 24
¼
5:33
21:33
5:33
2
4
3
5
|ﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄ}
8  4
þ
3
18
9
2
4
3
5
|ﬄﬄﬄ{zﬄﬄﬄ}
24
¼
2:33
39:33
14:33
2
4
3
5:
Notethattheboundaryforcematrixvanishes,exceptforthereactionatnode1.Thusthe RHSof(5.32)is:
f þ r ¼
r1 þ 2:33
39:33
14:33
2
4
3
5:
The resulting global system of equations is
wherewe have partitioned the equations after the ﬁrst row and column. The reduced system of equations
are:
KFdF ¼ fF  KT
EFdE
|ﬄﬄﬄ{zﬄﬄﬄ}
0
:
Solving the above
85:33
53:33
53:33
48


u2
u3


¼
39:33
14:33


)
u2
u3


¼
2:1193
2:6534


:
110
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

Postprocessing
Once the nodal displacements have been calculated, the displacement ﬁeld can be obtained by (5.3).
Writing this equation for the three-node element gives
u ¼ Nð1Þ
1 u1 þ Nð1Þ
2 u2 þ Nð1Þ
3 u3;
d ¼ dð1Þ ¼
0
2:1193
2:6534
2
64
3
75:
uðxÞ ¼ 1
8 ðx  4Þðx  6Þð0Þ þ 1
4 ðx  2Þðx  6Þð2:1193Þ þ 1
8 ðx  2Þðx  4Þð2:6534Þ
¼ 0:198 15x2 þ 2:248 55x  3:7045:
The stress ﬁeld is given by
ðxÞ ¼ E du
dx ¼ E d
dx ðNð1Þdð1ÞÞ ¼ EBð1Þdð1Þ
¼ 8 1
4 ½ðx  5Þ ð8  2xÞ ðx  3Þ
0
2:1193
2:6534
2
64
3
75 ¼ 3:17x þ 17:99:
Estimation of solution quality
For brevity, only the quality of the stress will be assessed. As the problem is statically determinate, the
exact stress ﬁeld can be calculated from the axial force pðxÞ by dividing it by the cross-sectional area
ex ¼ pðxÞ
2x . Figure 5.12 compares the FE solution of the stress ﬁeld (shown with a solid line) with the
exact stress ﬁeld (shown with a dashed line). Notice that the FE stress ﬁelddoes not capture the jump that
occurs at the location of the point force.
5.5
TWO-POINT BOUNDARY VALUE PROBLEM WITH GENERALIZED
BOUNDARY CONDITIONS 2
Wewill now consider a two-point boundary value problem with generalized boundary conditions. Wewill
ﬁrst consider the penalty method (Equation (3.62)), followed by the partition method (Equation (3.63)).
36– 4x
2 
4 
6
x
5
10
15
s
x
24– 4x
x
Figure 5.12
Comparison of the ﬁnite element (solid line) and exact stresses (dashed line) for Example 5.2.
2Recommended for Advanced Track.
TWO-POINT BOUNDARY VALUE PROBLEM WITH GENERALIZED
111

In the penalty method, the essential boundary conditions are considered as a limiting case of the natural
boundary conditions; thus, the natural boundary extends over the entire boundary. The weak form is
repeated here for convenience:
ﬁnd ðxÞ 2 H1 such that
Z

dw
dx A d
dx dx 
Z

wf dx  wAð  bð  ÞÞ


¼ 0
8 w 2 H1;
ð5:37Þ
where the ﬁelds and parameters are deﬁned in Table 3.2.
Inthisapproach,therearenoessentialboundaryconditions,soallofthenodalvaluesindandwarefree.
Integrating the weak (5.37) over element domains and substituting interpolants (5.8) into the weak form
yields
X
nel
e¼1
weT
Z
e
BeTeAeBe dx de þ ðNeTAe bNeÞ

ede 
Z
e
NeTf dx  ðNeTAe ð þ bÞÞ

e
8
<
:
9
=
; ¼ 0
8 w:
ð5:38Þ
where e is a portion of element boundary on external boundary. We deﬁne the ﬁnite element matrices:
Ke ¼
Z
e
BeTeAeBe dx þ ðNeTAe bNeÞ

e
fe ¼
Z
e
NeTf dx þ ðNeTAe ð þ bÞÞ

e:
ð5:39Þ
Substituting (5.39) into (5.38), using we ¼ Lew, de ¼ Led and deﬁning global matrices by (5.13) and
(5.14) gives the discrete weak form
wTr ¼ 0
8 w;
ð5:40Þ
where r is the residual matrix deﬁned in (5.16). Due to arbitrariness of w, it follows that
r ¼ Kd  f ¼ 0
or
Kd ¼ f:
ð5:41Þ
In (5.41), no partitioning or node renumbering is required; the essential boundary conditions are easily
enforced by selecting b to be a large penalty parameter.
Wenowturntothepartitionmethod,whichwasusedinSection5.1.Thegeneralweakformisstated(see
Box 3.6) as
ﬁnd ðxÞ 2 U such that
Z

dw
dx A d
dx dx 
Z

wf dx  wAð  bðxÞððxÞ  ðxÞÞÞ


¼ 0
8 w 2 U0:
ð5:42Þ
112
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The global matrices are partitioned as follows:
d ¼
dE
dF


;
w ¼
wE
wF


¼
0
wF


:
Thepartofthematrixdenotedbythesubscript‘E’containsthenodalvaluesontheessentialboundaries.As
indicated by the overbar on dE, these values are known. The submatrices denoted by the subscript ‘F’
contain all remaining degrees of freedom: These entries are arbitrary, or free, for the weight function and
unknown for the trial solution.
Substituting (5.27) into the weak form given in (5.42) yields
X
nel
e¼1
weT
Z
e
BeTeAeBe dx de þ ðNeTAe bNeÞ

e

de
Z
e
NeTf dxðNeTAe ð þ bÞÞ

e

8
<
:
9
=
; ¼ 0
8 wF:
ð5:43Þ
Note that (5.43) is similar to (5.38) except that boundary terms in (5.43) are deﬁned over  and (5.43) is
arbitrary for wF rather than for w. The resulting element matrices are identical to (5.39) except that the
boundary term is over .
5.6
CONVERGENCE OF THE FEM
Intheassessmentofsolutionqualityforvarioustypesofelements,abettermeasureofelementperformance
is needed than the residual for ‘eyeballing’ the difference between an exact solution and the ﬁnite element
solution. In this section, we describe some general methods for quantifying the error in a ﬁnite element
solution. For these purposes, an exact solution is needed, but as we will see in Chapter 8, such exact
solutions can usually be constructed by ‘manufacturing’ the solution.
The basic question addressed in this section is: How can the error in a ﬁnite element solution uhðxÞ be
quantiﬁed if we know the exact solution? Obviously, comparing the FE solution to the exact solution at a
single point may not be helpful; if the point is a node, the FE solution in one dimension always gives the
exact value, so there is no error. The answer to our question is provided by norms of functions. A norm of a
functionisameasureofthe‘size’ofthefunction,justlikethelengthofavectorisameasureofthesizeofthe
vector. The length of a vector~a, sometimes called the norm of the vector and denoted by k ~a k, is given by
k ~a k¼
X
n
i¼1
a2
i
 
!1
2
;
ð5:44Þ
wherenisthenumberofcomponentsofthevector.Thisisthestandardformulaforthelengthofavector;for
exampleintwodimensions,n=2andthexandycomponentsofthevectoraregivenbyax ¼ a1 anday ¼ a2.
Then (5.44) gives k a k¼
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
a2
x þ a2
y
q
, which is the formula for the length of a vector in two dimensions.
The norm of a function is deﬁned by
k fðxÞ kL2¼
Zx2
x1
f 2ðxÞ dx
0
@
1
A
1
2
;
ð5:45Þ
CONVERGENCE OF THE FEM
113

where[x1,x2]istheintervaloverwhich the functionisdeﬁned.The abovenormiscalled theLebesque ðL2Þ
norm.
Thesimilaritybetweenthenormofavectorandthenormofafunctioncanbeseenifwenormalize(5.44)
by dividing by the number of components, which gives
k a! k¼
1
n
X
n
i¼1
a2
i
 
!1
2
:
ð5:46Þ
Now if you let aðxiÞ ¼ ai; x ¼ 1
n, and let n ! 1, then the above becomes
k a! k¼
1
n
X
n
i¼1
a2
i
 
!1
2
¼
X
n
i¼1
a2ðxiÞx
 
!1
2

Z1
0
a2ðxÞ dx
0
@
1
A
1
2
:
Thus, the norm of a function is like the length of an n-component vector, with n tending to inﬁnity. Like
length it must be positive, and as the length of a vector measures its magnitude, the norm of a function
measures the magnitude of the function.
Using this deﬁnition of a norm, we can deﬁne the error in a ﬁnite element solution by
kekL2¼kuexðxÞ  uhðxÞk¼
Zx2
x1
ðuexðxÞ  uhðxÞÞ2 dx
0
@
1
A
1
2
;
ð5:47Þ
where uexðxÞ is the exact solution and uhðxÞ is the ﬁnite element solution, so the pointwise error is
uexðxÞ  uhðxÞ. If we think of norms as measures of distance between two functions, then the above is a
measure of the distance between the exact and the FE displacement solution. The error at any point in the
intervalcontributestothismeasure oferrorbecausethe integrandisthe squareofthe erroratanypoint.The
above can be considered a root-mean-square measure of the error. Thus, the above provides a measure of
error that is not affected by a serendipitous absence of error at a few points.
In comparing errors of different solutions, it is preferable to normalize the error by the norm of the exact
solution. The normalized error is given by
eL2 ¼ kuexðxÞ  uhðxÞkL2
kuexðxÞkL2
¼
Rx2
x1
ðuexðxÞ  uhðxÞÞ2 dx
 
!1
2
Rx2
x1
ðuexðxÞÞ2 dx
 
!1
2
:
ð5:48Þ
The normalized error can be interpreted quite easily: If the normalized error eL2 is of the order of 0.02, then
the average error in the displacement is of the order of 2%.
Although the L2 error in the displacement is quite useful, often we are more interested in the error in the
derivativeofthefunction.Forexample,instressanalysis,errorinthestress,whichisproportionaltoerrorin
the strain, is often of interest. In heat conduction, we are often interested in the heat ﬂux. An error in strain
can be computed by the same formula as (5.47) with the function replaced by its derivative. However, a
more frequently used approach is to compute the error in energy. The error in energy is deﬁned by
keken¼kuexðxÞ  uhðxÞken¼
1
2
Zx2
x1
E eexðxÞ  ehðxÞ

2 dx
0
@
1
A
1
2
:
ð5:49Þ
114
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

Comparing the above with Wint in the principle of minimum potential energy, we can see that the above is
the square root of the energy of the error in the strain, hence the name error in energy. Furthermore, as the
strainisthederivativeofthedisplacementﬁeld,itfollowsthattheerrorinenergyissimilartotheerrorinthe
derivative of the displacement ﬁeld. Again, it is preferable in applications to examine the normalized error
in energy, which is given by
een ¼ kuexðxÞ  uhðxÞken
kuexðxÞken
¼
1
2
Zx2
x1
EðeexðxÞ  ehðxÞÞ2 dx
0
B
@
1
C
A
1
2
1
2
Zx2
x1
EðeexðxÞÞ2 dx
0
B
@
1
C
A
1
2
:
ð5:50Þ
When the exact solution is known, the norm of the error in displacements and the energy error are
computed easily. The integrals are computed by subdividing the domain into elements, and then using
Gauss quadrature in each element. Higher order Gauss quadrature formulas are usually needed
because the exact solution is generally not a polynomial, so the efﬁciencies of Gauss quadrature
for polynomials are lost.
In the next example, we will examine the errors as measured by these norms for two elements. For this
purpose,wewillneedexactsolutions.Inonedimension,exactsolutionscaneasilybeobtainedforthestress
analysis and heat conduction equations. As a matter of fact, ﬁnite elements are usually not needed in one-
dimensional problems, because the equations can be integrated by software such as MATLAB or MAPLE.
So we have described ﬁnite elements in one dimension only because it is the simplest setting in which to
learn the method. In multidimensions, obtaining exact solutions is more difﬁcult, and we will learn how to
manufacture solutions in Chapter 7.
5.6.1
Convergence by Numerical Experiments
We consider a bar of length 2l, cross-sectional area A and Young’s modulus E. The bar is ﬁxed at x ¼ 0,
subjected to linear body force cx and applied tractiont ¼ cl2=A at x ¼ 2l as shown in Figure 5.13.
The strong form is given as
d
dx
AE du
dx


þ cx ¼ 0;
uð0Þ ¼ 0;
t ¼ E du
dx n

x¼2l
¼  cl2
A :
b(x) = cx
2l
2
cl
t
A
= −
Figure 5.13
A bar under compression.
CONVERGENCE OF THE FEM
115

The exact solution for the above problem can be obtained in the closed form and is given as
uexðxÞ ¼ c
AE
 x3
6 þ l2x


;
eexðxÞ ¼ du
dx ¼ c
AE
 x2
2 þ l2


:
The above problem is solved using the FEM. We study the rate of convergence of the FEM with linear and
quadratic ﬁnite element meshes. The material parameters considered are E ¼ 104 N m2, A ¼ 1 m2,
c ¼ 1N m2 and l ¼ 1 m.
Figure5.14showsthelogoftheerrornormasafunctionofthelogofelementsizeh.Ascanbeseenfrom
these results, the log of the error varies linearly with element size and the slope depends on the order of the
elementandwhethertheerrorisinthefunctionoritsderivative.Ifwedenotetheslopebya,thentheerrorin
the function (the L2 norm) can be expressed as
logðkekL2Þ ¼ C þ a log h;
ð5:51Þ
where C is an arbitrary constant, the y-intercept of the curve. The slope a is the rate of convergence of the
element. Taking the power of both sides gives
kekL2¼ Cha:
ð5:52Þ
For linear two-node elements, a ¼ 2, whereas for quadratic elements, a ¼ 3. It is said that the error for
the two-node element is quadratic, whereas the error in the three-node element is of third order. The
constantCdependsontheproblemandthemesh,anditisnotofmuchimportance.Thecrucialconcepttobe
learnedfromthisequationishowtheerrordecreases withelementsize.Itcanbeseenfrom(5.52)thatifthe
element size is halved, the error in the function decreases by a factor of 4 for linear elements. The formula
givenabovehasbeengeneralizedinthemathematicsliterature.Theessenceofthisgeneralizationisthatifa
ﬁniteelementcontainsthecompetepolynomialoforderp,thentheerrorintheL2 normofthedisplacement
varies according to
kekL2¼ Ch pþ1:
ð5:53Þ
Quadratic element
y=7.8×10–3x3
10–2
10–3
10–4
10–5
10–6
10–7
10–2
10–1
Element length (m)
100
L2 error
Linear element
y=1.4×10–1x2
100
10–1
10–2
10–3
10–4
10–2
10–1
Element length (m)
100
L2 error
Figure 5.14
L2 norm of error for linear (left) and quadratic (right) ﬁnite element meshes.
116
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

You can see from the above that this formula agrees with our results for errors for the linear and quadratic
elements (p ¼ 1 for linear elements, p ¼ 2 for quadratic elements) considered in the above example. It
can similarly be seen from Figure 5.15 that the slope of the convergence plot for derivatives, i.e. the
errorinenergy,isoneorderlower.Sotheerrorinenergyforanelementthatiscompleteuptoorderpisgiven
by
keken¼ Ch p:
ð5:54Þ
Thus, the accuracy in the derivative is one order less than the accuracy in the function.
The implications of these results are many. The most important is that if the element size is halved, the
error in the derivative (error in energy) decreases by factors of 2 and 4 for linear and quadratic elements,
respectively.Thisisoneoftheimportantlessonsinthischapter;quadraticelementsgiveyoumoreaccuracy
forthebuck.Infact,inlinearanalysis,quadraticelementsarealmostalwayspreferred.Theiradvantagesin
accuracy are overwhelming and come at little cost.
The conditioning of the linear system equations deteriorates for higher order Lagrange elements. The
best tradeoff between accuracy and complexity for Lagrange interpolants seems to be offered by quadratic
elements. This rate of convergence of higher order elements is superior provided that the solution is
sufﬁcientlysmooth,i.e.,p þ1derivativesoftheexactsolutionshouldbeﬁnite.Ifthesolutionisnotsmooth,
such as for instance u¼x1/2 (see also Problem 3.8) the estimate in Eq. (5.53) is no longer valid. Gui and
Babuska (1986) showed that
keken Chb;
ð5:55Þ
where
b ¼ min p; l  1
2


;
l > 1=2;
p  1:
ð5:56Þ
Forthebounds(5.55)and(5.56)tobevalid,threerequirementsmustbemet:(i)theexactsolutionhastolive
in H1 (integrability), so the smoothness parameter l > 1=2 in Equation (5.56); (ii) the ﬁnite element
solution has to be at least C0 continuous (continuity) with square integrable derivatives; and (iii) the trial
solution has to be complete up to order p with p  1 (completeness).
Linear element
y=4.7×10–1x
100
10–4
10–1
10–2
10–1
Element length (m)
100
Energy error
Quadratic element
y=5×10–2x2
10–1
10–2
10–3
10–4
10–5
10–2
10–1
Element length (m)
100
Energy error
Figure 5.15
Energy norm of error for linear (left) and quadratic (right) ﬁnite element meshes.
CONVERGENCE OF THE FEM
117

The fact that ﬁnite element solutions are only approximate is very important to bear in mind in their
application. It is crucial that the user of a ﬁnite element program has some way for assessing the quality of
the solution. One way this can be done is by reﬁning the mesh and seeing how much the solution changes
withreﬁnement; ifthere arelargechanges, thenthe original mesh isinadequate and thenewmesh mayalso
be inadequate, so that further reﬁnement may be necessary. Finite element software today often includes
errorindicatorsthatprovideestimatesoftheFEsolutionerror.Theseerrorindicatorsmakeestimatesofthe
errorintheﬁniteelementsolutiononanelement-by-elementbasis.Sucherrorindicatorsareveryusefulfor
gauging the accuracy of the solution.
5.6.2
Convergence by Analysis 3
Wenowturn toformaldiscussionofconvergence.Theapproximatecharacteroftheﬁniteelementsolution
stems from the replacement of the space of all functions in U and U0 by ﬁnite-dimensional subspaces
Uh 	 U and Uh
0 	 U0, which are deﬁned as
Uh ¼ fhðxÞjhðxÞ ¼ NðxÞd; N 2 H1;  ¼  on g;
Uh
0 ¼ fwhðxÞjwhðxÞ ¼ NðxÞw; N 2 H1; w ¼ 0 on g:
ð5:57Þ
The above means that Uh and Uh
0 are sets of functions interpolated with C0 shape functions and satisfy the
essential boundary condition on  or vanish at the essential boundary, respectively.
There are an inﬁnite number of functions in U and U0, i.e. these spaces are of inﬁnite dimension. When
werepresent theweightfunctionsby shapefunctions,thenthe spaceofweightfunctions Uh
0 becomes ﬁnite
dimensional(equal tothe number ofnodes excluding those onessential boundary). Similarly,the space Uh
inwhichweseekourﬁniteelementsolutionbecomesﬁnitedimensional.Althoughtheweakformisexactly
equivalent to the strong form for the inﬁnite-dimensional spaces U and U0, it is only approximately
equivalent for the ﬁnite-dimensional spaces Uh 	 U and Uh
0 	 U0, which are used in the FEM. Therefore,
the equations that emanate from theweak form, the balance equation, and the natural boundary conditions
areonlysatisﬁedapproximately.Inthissection,wewilldistinguishbetweentheweakformsdeﬁnedforthe
exact and ﬁnite element solutions. For the elasticity problem, these equations are given as follows. Find
uðxÞ 2 U and uhðxÞ 2 Uh such that
ðaÞ
Z

dw
dx Ak du
dx dx ¼ ðwAtÞjt þ
Z

wb dx
8w 2 U0;
ðbÞ
Z

dwh
dx Ak duh
dx dx ¼ ðwhAtÞjt þ
Z

whb dx
8wh 2 Uh
0:
ð5:58Þ
To analyze how close is uhðxÞ to uðxÞ, we start by showing that uhðxÞ minimizes the energy norm of error
keken¼ku  uh ken, i.e.
k u  uh ken¼ min
u
2Uh k u  u
 ken :
ð5:59Þ
To prove (5.59), we expand the right-hand side as
k u  u
 k2
en¼

ðu  uhÞ
|ﬄﬄﬄﬄ{zﬄﬄﬄﬄ}
e
þ ðuh  u
Þ
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
wh 2 Uh
0


2
en
:
3Recommended for Advanced Track.
118
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

Note that as uh and u
 satisfy essential boundary conditions, it follows that ðuh  u
Þ  wh 2 Uh
0 and thus
k e þ wh k2
en¼k e k2
en þ k wh k2
en þ
Z

dwh
dx AE de
dx dx:
Subtracting the two weak forms in (5.58) and choosing w ¼ wh 2 Uh
0 in (5.58a) yields
Z

dwh
dx Ak de
dx dx ¼ 0:
As k wh ken> 0 for any wh 6¼ 0, we get that k e ken is minimum. From (5.59) we can obtain a quantitative
estimate for the energy norm of error k e ken by estimating k u  ~u ken, where ~u 2 Uh is a suitably chosen
auxiliary function deﬁned in the same subspace as the ﬁnite element solution. We denote the error of
auxiliary function in element i as~ei ¼ u  ~u for ði  1Þh  x  ih, where h ¼ l=n is the length of n equal-
size elements.
Letuschoosetheauxiliaryfunction~u 2 Uh tobealinearinterpolationfunctionsuchthatitisequaltothe
exact solution at the ﬁnite element nodes, i.e. ~uðxJÞ ¼ uðxJÞ as shown in Figure 5.16. Note that for
one-dimensional problems the interpolation function coincides with the ﬁnite element solution (see
Example 5.1).
The derivative of the interpolation function d~u
dx in element i is given by
d~u
dx ðxÞ ¼ ~uðxJþ1Þ  ~uðxJÞ
xJþ1  xJ
;
where xJ ¼ ði  1Þh and xJþ1 ¼ ih. By mean value theorem (see Appendix A3), there is a point c in the
interval xJ  c  xJþ1 such that
d~u
dx ¼ du
dx ðcÞ
ð5:60Þ
We now expand the derivative of the exact solution du
dx
ðxÞ using Taylor’s formula with remainder (see
Appendix A3) around point c satisfying (5.60):
du
dx ðxÞ ¼ du
dx ðcÞ þ ðx  cÞ d2u
dx2 ðÞ;
ð5:61Þ
where c    x.
x
u
u
u~
element i
h
xJ
xJ + 1
Figure 5.16
Interpolation function approximation of the exact solution.
CONVERGENCE OF THE FEM
119

Subtracting (5.60) from (5.61) and assuming that du
dx ðÞ

  a, we have
dei
dx

 ¼ du
dx  d~u
dx

  ajx  xJj  ah;
ði  1Þh  x  ih:
ð5:62Þ
The energy norm of error in the interpolation function can be bounded as
k ~e k2
en¼ 1
2
Z

AE
 d~e
dx
2
dx ¼ 1
2
X
n
i¼1
Zih
ði1Þh
AE
 d~ei
dx
2
dx  1
2 nhKðhaÞ2;
ð5:63Þ
where AðxÞEðxÞ  K. Denoting nh ¼ l and recalling that the energy norm of the ﬁnite element solution
error is less than or equal to the energy norm of the interpolation function error, we have
k e ken
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
1
2 Kla2h2
r
¼ Ch:
ð5:64Þ
The error estimate for higher order elements can be obtained in a similar fashion as for the linear element
exceptthata higherorder Taylor’sformulawithremainderhas tobeused instead(see Problem 5.5forerror
estimationinquadraticelements).Itcanbeshownthattheenergynormoferrorforﬁniteelementsoforderp
is bounded by (5.54), provided that p+1 derivative of the exact solution is bounded, dpþ1u
dxpþ1 ðÞ

  a. In
(5.54), C is independent of h see Strang and Fix (1981).
5.7
FEM FOR ADVECTION–DIFFUSION EQUATION 4
Toobtainthediscreteequationsforthediffusion–advectionproblem,weusethesameprocedureasbefore:
We express theweightfunction andtrial solutionin terms ofshape functions, substitutethese into theweak
form and use the arbitrariness of the weight functions to deduce the equation.
The weak form developed in Section 3.8.2 is used with the usual ﬁnite element approximations for the
weight functions and trial solutions, (5.2) and (5.3), respectively. The nodal variables are partitioned into
the essential and free nodes, and the nodal values of the trial solution and weight function are given by
d ¼
dE
dF


;
w ¼
0
wF


;
where dE are set to satisfy the essential boundary conditions. Therefore, the weight functions and trial
solutions are admissible.
We subdivide the domain  into elements e. Substituting (5.2) and (5.3) into (3.74) and following the
procedure given in Section 5.1 yields
X
nel
e¼1
ðweÞT
Z
e
AeveNeTBe dx de
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
e
A
þ
Z
e
AekeBeTBe dx de
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
e
D
0
B
B
B
B
B
B
@
1
C
C
C
C
C
C
A

Z
e
NeTs dx  ðAeNeTqÞ

eq
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
fe
8
>
>
>
>
>
>
<
>
>
>
>
>
>
:
9
>
>
>
>
>
>
=
>
>
>
>
>
>
;
¼ 0:
ð5:65Þ
4Recommended for Advanced Track.
120
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

The element matrices as indicated by the underscored terms are
ðaÞ Ke
D ¼
Z
e
AekeBeTBe dx;
ðbÞ Ke
A ¼
Z
e
AeveNeTBe dx:
ð5:66Þ
The matrix Ke
D accounts for the diffusion and is identical to the matrix we have developed in Section 5.3,
which is given in (5.22). The matrix Ke
A accounts for the advection (convection). The product of the area
and velocity must be constant according to (3.65).
The element matrices are
Ke ¼ Ke
D þ Ke
A:
The element force matrix fe is identical to that for the heat conduction equation or diffusion equation,
Equation (5.22), as indicated by the underscored term in (5.65).
The element matrices are assembled by scatter and add procedures described previously and the
resulting linear algebraic equations will be solved as in Equations (5.32)–(5.34).
Ascanbeseenfrom(5.66b),theadvectionmatrixisnotsymmetric.Toprovideaconcreteexampleofthe
lackofsymmetry,weevaluatetheadvectionmatrixforatwo-nodelinearelementwithconstantareaAe and
velocity ve using (5.66b):
Ke
A ¼ veAe
Z1
0
1  


 1
l ½1 1l d
¼ veAe
Z1
0
ð1  Þ
1  




d
¼ veAe
 1
2
1
2
 1
2
1
2
2
64
3
75 ¼ veAe
2
1
1
1
1


:
Thesystemmatrix,whichisobtainedbyassemblingtheaboveadvectionmatricesanddiffusivitymatrices,
will also not be symmetric. This is a major difference from the previous ﬁnite element models that we have
studied.
The system matrix in general is not positive deﬁnite. This can be seen by considering the case when
k ¼ 0. Letting zT ¼ ½1; 0 and evaluating zTKe
Az yields zTKe
Az ¼ ðveAe=2Þ < 0. It will be seen in
Example 5.3 that the loss of symmetry and positive deﬁniteness leads to some exceptional difﬁculties in
solving these systems.
Example 5.3.
Advection–diffusion problem
Solve the one-dimensional advection–diffusion equation
v d
dx  k d2
dx2 ¼ 0;
ð5:67Þ
with boundary conditions
ð0Þ ¼ 0;
ð10Þ ¼ 1:
FEM FOR ADVECTION–DIFFUSION EQUATION
121

TheareaAe ¼ A ¼ 1:0.Uselinearﬁniteelementsanda20-elementmeshwithuniformlyspacednodes.
Let v ¼ 2 and k ¼ 5 so that the Peclet number Pe  vle
2k ¼ 0:1. Repeat for Pe ¼ 3:0.
The element matrices for all elements are the same. The element matrices are given by
Ke ¼ Ke
D þ Ke
A ¼ vAe
2
1
þ1
1
þ1


þ kAe
le
1
1
1
1


¼ kAe
le
1  Pe
1 þ Pe
1  Pe
1 þ Pe


:
Substituting in the values for k, Ae and le, we obtain the following:
 for
nodes
I
with
1 < I < 21,
the
system
equation
is
assembled
to
be
ð1  PeÞdI1 þ2dI þ ð1 þ PeÞdIþ1 ¼ 0;
 for node 1: d1 þ ð1 þ PeÞd2 ¼ 0;
 for node 21: ð1  PeÞd20 þ 2d21 ¼ 0.
The solutions for Pe ¼ 0:1 and Pe ¼ 3:0 are compared to the exact solution in Figure 5.17. It can be seen
that the FE solution is quite good for Pe ¼ 0:1.
However,thesolutionoscillateswildlyforPe ¼ 3:0.Thisiscalledaspatialinstability.Forhighvalues
of the Peclet number, i.e. when advection dominates, special techniques must be developed to obtain
accuratesolutionsoftheadvection–diffusionequation.OneofthesetechniquesisdescribedinChapter8;
textbook accounts may be found in Donea and Huerta (2003). These techniques are very important in
computational ﬂuid dynamics because many of the equations found there are of this form.
REFERENCES
Donea, J. and Huerta, A. (2003) Finite Element Methods for Flow Problems, John Wiley & Sons, Ltd, Chichester.
Gui, W. and Babuska, I. (1986) The h-, p- and hp-versions of the ﬁnite element method in one dimension. Numer.
Math., 49, 577–683.
Strang, G. and Fix, G.J. (1981) An Analysis of the Finite Element Method, Prentice Hall, Englewood Cliffs, NJ.
Hughes, T.J.R. (1987) The Finite Element Method, Prentice Hall, Englewood Cliffs, NJ.
1
0.9
θ
0.8
0.7
0.6
0.5
0.4
0.3
0.2
0.1
0 0
1
2
3
4
5
x
6
7
8
9
10
FEM
Exact
Pe=0.1
1
0.8
θ
x
0.6
0.4
0.2
0
–0.2
–0.4
–0.60
1
2
3
4
5
6
7
8
9
10
FEM
Exact
Pe=3
Figure 5.17
Exact and FEM solutions of Equation (5.67) for Pe ¼ 0:1 (left) and Pe ¼ 3 (right).
122
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

Problems
Problem 5.1
Consider a heat conduction problem in the domain [0, 20] m. The bar has a unit cross section, constant
thermal conductivity k ¼ 5 W C1 m1 and a uniform heat source s ¼ 100 W m1. The boundary
conditions are Tðx ¼ 0Þ ¼ 0 C and qðx ¼ 20Þ ¼ 0 W m2. Solve the problem with two equal linear
elements. Plot the ﬁnite element solution ThðxÞ and dThðxÞ=dx and compare to the exact solution which is
given by TðxÞ ¼ 10x2 þ 400x.
Problem 5.2
Repeat Problem 5.1 with 4-, 8- and 16-element uniform meshes (equal-size elements) using MATLAB
program. Compare the ﬁnite element solutions to the exact solution. Plot the error in the natural boundary
condition as the mesh is reﬁned. What is the pattern?
Problem 5.3
Consider a heat conduction problem shown in Figure 5.18. The dimensions are in meters. The bar has a
constant unit cross section, constant thermal conductivity k ¼ 5 W C1 m1 and a linear heat source s as
shown in Figure 5.18.
The boundary conditions are Tðx ¼ 1Þ ¼ 100 C and Tðx ¼ 4Þ ¼ 0 C.
Divide the bar into two elements ðnel ¼ 2Þ as shown in Figure 5.19.
Note that element 1 is a three-node (quadratic) element (nen¼3), whereas element 2 is a two-node (nen¼2)
element.
a. State the strong form representing the heat ﬂow and solve it analytically. Find the temperature and ﬂux
distributions.
b. Construct the element source matrices and assemble them to obtain the global source matrix. Note that
the boundary ﬂux matrix is zero.
c. Construct the element conductance matrices and assemble them to obtain the global conductance
matrix.
d. Find the temperature distribution using the FEM. Sketch the analytical (exact) and the ﬁnite element
temperature distributions.
e. Find the ﬂux distribution using the FEM. Sketch the exact and the ﬁnite element ﬂux distributions.
x
50(
2)
3
s
x
=
+
x = 4
x = 1
Figure 5.18
Heat conduction of Problem 5.3.
x
x = 1
x = 2
x = 3
x = 4
(1)
(2)
Figure 5.19
Finite element mesh for Problem 5.3.
REFERENCES
123

Problem 5.4
Given a one-dimensional elasticity problem as shown in Figure 5.20. The bar is constrained at both ends
(A and C). Its cross-sectional area is constant (A ¼ 0:1 m2) on segment AB and varies linearly
A ¼ 0:5ðx  1Þm2 on BC. The Young’s modulus is E ¼ 2  107 Pa. A distributed load b ¼ 10 N m1 is
applied along the left portion of the bar AB and a point force P ¼ 150 N acts at point B. The geometry,
material properties, loads and boundary conditions are given in Figure 5.20a.Use a three-node element on
AB(nen¼3)andatwo-nodeelementonBC (nen¼2)asshowninFigure20b.ThedimensionsinFigure5.20
are in meters.
a. Construct the element body force matrices and assemble them to obtain the global force matrix.
b. Construct the element stiffness matrices and assemble them to obtain the global stiffness matrix.
c. Find and sketch the ﬁnite element displacements.
d. Find and sketch the ﬁnite element stresses.
Problem 5.5
Consider an axial tension problem given in Figure 5.21. The bar has a linearly varying cross-sectional area
A ¼ ðx þ 1Þm2 in the region 0 m < x < 1 m and a constant cross-sectional area A ¼ 0:2 m2 in the region
1 m < x < 2 m. The Young’s modulus is E ¼ 5  107 Pa. The bar is subjected to the point load
P ¼ 200 N at x ¼ 0:75 m and a quadratically varying distributed loading b ¼ x2 N m1 in the region
1 m < x < 2 m. The bar is constrained at x ¼ 0 m and is traction free at x ¼ 2 m.
Use a single quadratic element (nen¼3, nel¼1) with a center node at x ¼ 1.
1. Construct the element stiffness matrix and force matrix and carry out Gauss quadrature of the element
stiffness matrix using one-point integration and the body force matrix using two-point Gauss
quadrature.
2. Solve the system of linear equations and ﬁnd the nodal displacements and element stresses.
x
P = 150 N
A
B
C
A 
B 
C
D
1
3
4
2
(1)
(2)
b = 10 Nm−1
E = 2×107 Pa
xB = 3
xA = 1
xC = 5
(a)
(b)
Figure 5.20
(a)Geometry,materialproperties,loadsandboundaryconditionsforabarwithavariablecross-sectional
area (b) the ﬁnite element model.
x
(
0)
0
=
=
u x
x = 0
x = 1
x = 2
P (x = 3/4) = −200
2
( ) =
b x
x
(
2)
0
σ
=
=
x
Figure 5.21
Data for Problem 5.5.
124
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

3. Find the exact stress distribution and compare it to the ﬁnite element solution.
4. Suggest how to improve the ﬁnite element model to get more accurate results.
Problem 5.6
Consider a weak form given in (5.26). Prove that for sufﬁciently smooth functions (having p þ 1 bounded
derivatives) the error in energy norm of the ﬁnite solution of order p ¼ 2 is bounded by k e k  a=N2.
Follow the steps below to prove the bound.
a. In each element, expand the exact temperature using Taylor’s formula with remainder up to quadratic
order. Show that there is a point c within the element domain such that
d2T
dx2 ðcÞ ¼ Tðx3Þ  2Tðx2Þ þ Tðx1Þ
ðl=2Þ2
;
0  c  l;
where l ¼ x3  x1, x2  x1 ¼ l=2.
b. On each element domain, assume a quadratic interpolation function ~T to be exact at three points:
~Tðx1Þ ¼ Tðx1Þ, ~Tðx2Þ ¼ Tðx2Þ, ~Tðx3Þ ¼ Tðx3Þ, and construct a quadratic approximation.
c. Using Taylor’s formula with remainder up to quadratic order, expand dT
dx around point c found in (a).
d. Write the derivative of the interpolation function constructed in (b) as
d~T
dx ¼ a þ bx;
where a and b are expressed in terms of the exact nodal temperatures.
e. Show that there is a constant c in the interval 0  c  l for which the coefﬁcients of the exact and
interpolation temperatures up to linear order are identical.
Problem 5.7
Modify the MATLAB ﬁnite element code for heat conduction problem in one dimension.
a. Rename the variables to eliminate confusion.
b. Use your code to solve Problem 5.1.
c. Compare the results of MATLAB program to your manual calculations in Problem 5.1.
Problem 5.8
Develop the ﬁnite element equations for heat conduction with surface convection. The strong form in this
case is given by
kA d2T
dx2 ¼ bhðT  T1Þ;
0  x  l;
where k, A, h, b and T1 are constants. b ¼ 2r is the perimeter of the ﬁn.
Problem 5.9
Modify the MATLAB ﬁnite element code to solve the heat conduction problem with surface convection
(see Problem 5.8). Consider also convection boundary conditions
q ¼ hðT  T1Þ
on
x ¼ 0
or
x ¼ l:
Using the MATLAB ﬁnite element code, solve the problem with the following parameters:
k ¼ 400 W m1 C1;
l ¼ 0:1 m;
h ¼ 3000 W m2 C1;
r ¼ 102 m ðradius; of pinÞ;
T1 ¼ 20 C:
REFERENCES
125

Boundary conditions: Tð0Þ ¼ 80C;
 q ¼ hðT  T1Þ
on
x ¼ l:
Find the temperature and ﬂux with uniform ﬁnite element meshes consisting of two, four and eight
elements.
Problem 5.10
IntheFEMformulatedinthischapter,theweightfunctionsandtrialsolutionswereapproximatedusingthe
same set of shape functions. This is known as the Galerkin FEM. In the alternative approximation method,
known as the subdomain collocation method, the weight functions are chosen to be unity over a portion of
the domain (for instance element domain) and zero elsewhere:
weðxÞ ¼
1
on
x 2 e;
0
on
x =2 e:

a. Derive the weak form for the subdomain collocation method.
b. Derive the discrete equations.
c. Solve the Problem 5.1 and compare the results to the Galerkin FEM and the exact solution. Is the
stiffness matrix symmetric?
d. How accurate is the subdomain collocation method compared to the Galerkin FEM? Why?
Problem 5.11
Repeat Problem 5.10, but instead of the subdomain collocation method, consider the point collocation
method. In the point collocation method, the weight function is chosen to be the Dirac delta function
wðxÞ ¼ ðx  xiÞ. xi are referred to as collocation points selected by the analyst. When considering
Problem 5.1, place the collocation points at the ﬁnite element nodes.
Problem 5.12
Given an elastic bar of length l ¼ 4 m with constant cross-sectional area A ¼ 0:1 m2 and a piecewise
constant Young’s modulus as shown in Figure 5.22. The bar is constrainted at x ¼ 4 m, and a prescribed
traction t ¼ 500 N m2 acts at x ¼ 0 m in the positive x-direction. Consider a ﬁnite element mesh
consisting of a single two-node element ðnel ¼ 1, nen ¼ 2Þ.
a. Construct the stiffness matrix using an exact integration.
b. Construct the force matrix.
c. Find the displacements and strains using the FEM.
d. Model the problem with two spring elements; solve for the unknown displacements using the
techniques you learned in Chapter 2.
e. Compare the results of c and d. Which one is better?
f.
Ifyoumodelthebarwithtwolinearelementsðnel ¼ 2,nen ¼ 2Þorwithonequadraticelementðnel ¼ 1,
nen ¼ 3Þ, which one will give a more accurate solution of strains.
g. What is an optimal ﬁnite element mesh for this problem? An optimal mesh is deﬁned as the one that
gives the best one-dimensional solution (for displacements and stresses) with minimum ﬁnite element
nodes.
0                
/ 2                     
   
x
x
l
x
l
=
=
=
5
2
1
2
8
2
10 N / m         
10 N / m     
E
E
=
=
x
Figure 5.22
A bar with a piecewise constant Young’s modulus.
126
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

h. In term of design of ﬁnite element meshes, what kind of a recommendation can you make based on the
results of this problem?
Problem 5.13
Consider a three-node quadratic element in one dimension with unequally spaced nodes (Figure 5.23).
a. Obtain the Be matrix.
b. Consider an elementwith x1 ¼ 0,x2 ¼ 1=4 andx3 ¼ 1.Evaluate strain e interms of u2 and u3ðu1 ¼ 0Þ,
and check what happens when  approaches 0.
c. If you evaluate Ke by one-point quadrature using BeTEeAeDBe for same coordinates as in (b) and
constrain node 1 (i.e. u1 ¼ 0), is Ke invertible?
d. If uðxÞ in part (b) is given by ð1=2Þx2 at the nodes, does e ¼ x?
Problem 5.14
Consider a tapered rod (Figure 5.24) with the cross-sectional area given by
AðÞ ¼ A1ð1  Þ þ A2;
where
 ¼ x
L :
a. Obtain the element stiffness for a linear displacement element, with Young’s modulus ¼ E, by using
Ke ¼
R
e BeTDB d.
b. Obtain the stiffness matrix Ke using the displacement ﬁeld
u ¼ ðÞ ¼ u1 þ ðu2  u1Þ2:
Specializetheresultfor A1 ¼ A2;doesthisanswermakesense?WhatisthestresswhenyouapplyaforceF
at one end?
1
2
3
x
Figure 5.23
Data for Problem 5.13.
2
L
1
x
Figure 5.24
Tapered bar for Problem 5.14.
REFERENCES
127

Problem 5.15
Consider a bar with constant cross-sectional area A and Young’s modulus E discretized with two ﬁnite
elements as shown in Figure 5.25. The bar is subjected to linear body force bðxÞ ¼ cx.
a. Compute the element stiffness and force matrices;
b. Show that P
e
LT
e KeLe and P
e
LeTfe give the same stiffness matrix and external force matrix as direct
assembly;
c. Obtain the ﬁnite element solution and plot uðxÞ and eðxÞ;
d. Compare to the closed form solution.
Problem 5.16
Consider an element shown in Figure 5.26 with a quadratic displacement ﬁeld uðxÞ ¼ a1 þ a2x þ a3x2.
a. Expressthedisplacementﬁeldintermsofthenodaldisplacementsu1; u2; u3.(Hint:UsetheLagrangian
interpolants and the local coordinate .)
b. For a linear body force ﬁeld bðÞ ¼ b1ð1=2Þð1  Þ þ b3ð1=2Þð1 þ Þ show that the external force
matrix is given by fe ¼ ðAL=6Þ½b1 2ðb1 þ b3Þ b3T.
c. Develop the Be matrix such that e ¼ du
dx ¼ Bede, deT ¼ ðu1; u2; u3Þ.
d. Show
that
the
element
stiffness
matrix
Ke ¼ R
e
BeTEeAeBe d,
is
given
by
Ke ¼ AE
3L
7
8
1
8
16
8
1
8
7
2
4
3
5.
e. Use one three-node quadratic displacement element to solve by ﬁniteelements Ed2u
dx2 ¼ bðxÞ ¼ cx,
uðL=2Þ ¼ uðL=2Þ ¼ 0.
f.
Compare the FEM results to the exact solution for uðxÞ, ðxÞ.
3
2
1
x
0
x =
(1)
(2)
L
L
Figure 5.25
Two-element bar structure for Problem 5.15.
3
2
1
x, ξ
A
L/2
2 /x L
ξ =
L/2
0
x =
Figure 5.26
A single quadratic element for Problem 5.15.
128
FINITE ELEMENT FORMULATION FOR ONE-DIMENSIONAL PROBLEMS

Problem 5.17
Consider the mesh shown in Figure 5.27. The model consists of two linear displacement constant strain
elements. The cross-sectional area is A¼1, Young’s modulus is E; both are constant. A body force
bðxÞ ¼ cx is applied.
a. Solve and plot uðxÞ and eðxÞ for the FEM solution.
b. Compare (by plotting) the ﬁnite element solution against the exact solution for the equation
E d2u
dx2 ¼ bðxÞ ¼ cx:
c. Solve the above problem using a single quadratic displacement element.
d. Compare the accuracy of stress and displacement at the right end with that of two linear displacement
elements.
e. Check whether the equilibrium equation and traction boundary condition are satisﬁed for the two
meshes.
3
2
1
x
L
L
Figure 5.27
Two two-node element mesh of Problem 5.17.
REFERENCES
129


6
Strong and Weak Forms for
Multidimensional Scalar Field
Problems
In the next three chapters, we will retrace the same path that we have just traversed for one-dimensional
problemsformultidimensionalproblems.WewillagainfollowtheroadmapinFigure3.1,startingwiththe
development of the strong form and weak form in this chapter. However, we will now consider a more
narrow class of problems; we have called these scalar problems because the unknowns are scalars like
temperature or a potential. The methods that will be developed in these chapters apply to problems such as
steady-state heat conduction, ideal ﬂuid ﬂow, electric ﬁelds and diffusion–advection. In order to provide a
physical setting for these developments, we will focus on heat conduction in two dimensions, but details
will be given for some of the other applications.
As can be seen from the roadmap in Figure 3.1, the ﬁrst step in developing a ﬁnite element method is to
derive thegoverning equations and boundaryconditions, which are the strong form.Wewill seethat intwo
dimensions,justasbefore,wewillhaveessentialandnaturalboundaryconditions.Usingaformulasimilar
to integration by parts, wewill then develop a weak form. Finally, wewill show that theweak form implies
the strong form, so that we can use ﬁnite element approximations for trial solutions to obtain approximate
solutions to the strong form by solving the weak form.
One aspect that we will stress in the extension to two dimensions is its similarity to the one-dimensional
formulation. The major equations in two dimensions are almost identical in structure to those in one
dimension, so most of the learning effort can be devoted to learning what these expressions mean in two
dimensions. The expressions for the strong and weak forms in two dimensions, by the way, are identical to
thoseforthreedimensions,andattheendofthechapterwewillgiveashortdescriptionofhowtheyareapplied
to three dimensions. In engineering practice today, most analyses are done in three dimensions, so it is
worthwhile to acquaint yourself with the theory in three dimensions. The extension from two to three
dimensionsisalmosttrivial(wehaveusuallyavoidedtheword‘trivial’inthisbookbecauseitisoftenmisused
in texts, for what often seems trivial to an author can be quite bafﬂing, but the extension from 2D to 3D is
indeed trivial).
One complication in extending the methods to two dimensions lies in notation. In two dimensions,
variables such as heat ﬂux and displacement are vectors. You have undoubtedly encountered vectors in
elementary physics. Vectors are physical quantities that have magnitude and direction, and they can be
expressedintermsofcomponentsandbasevectors.Wewilldenotevectorsbysuperposedarrows,suchas~q,
whichistheﬂuxmatrix.Lettheunitvectorsinthexandydirectionsbe~iand~j;theseareoftencalledthebase
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

vectors of the coordinate system. Then a vector~q can be expressed in terms of its components by
~q ¼ qx~i þ qy~j;
ð6:1Þ
where qx and qy are the x and y components of the vector, respectively.
When we get to the derivation ofﬁnite element equations, it becomes convenient to use matrix notation.
A column matrix can be used to describe a vector~q by listing the components of the vector in the order as
shown below:
q ¼
qx
qy


:
ð6:2Þ
Though it is not crucial to deeply understand the difference between vectors and matrices at this point, a
vector differs from a matrix: a vector embodies the direction for a physical quantity, whereas a matrix is
just an array of numbers. We will give most of the formulas of the strong and weak forms in both vector
and matrix notations. In the ﬁnite element equations, we will use only matrix notation. You will see that
the derivation of weak and strong forms in matrix notation is a little awkward and differs from the forms
commonly seen in advanced calculus and physics. So if you know vector notation as taught in those
courses, you may ﬁnd it preferable to use vector notation for the material in this chapter. The transition
to matrix notation is quite easy. On the contrary, some people prefer to learn both parts in matrix notation
for the sake of consistency.
An important operation in vector methods is the scalar product. The scalar product of two vectors in
cartesian coordinates is the sum of the products of the components of the vectors; the scalar product of~q
with a vector~r is given by
~q ~r ¼ qxrx þ qyry:
The scalar product is commutative, so the order of the two vectors does not matter. If we consider two
matrices q and r that contain the components of~q and~r, respectively, then the scalar product is written as
qTr ¼ ½qx
qy rx
ry


¼ qxrx þ qyry:
Sowriting the scalar product in terms of the matrices requires taking the transpose of the ﬁrst matrix. It can
easily be shown that qTr ¼ rTq. When manipulating vector expressions in matrix form, it is important to
carefully handle the transpose operation.
Another important operation in vector methods is the gradient. The gradient provides a measure of the
slope of a ﬁeld, so it is the two-dimensional counterpart of a derivative. The gradient vector operator is
deﬁned by
~r ¼ ~i @
@x þ~j @
@y


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~r
:
The gradient of the function ðx; yÞ is obtained by applying the gradient operator to the function, which
gives
~r ¼~i @
@x þ ~j @
@y :
Notice that we have simply replaced the bold dot in ( ) by ðx; yÞ. The gradient of a function gives the
direction of steepest descent. In other words, if you think of the function as describing a ski slope, the
132
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

gradient gives you the direction along which you would go the fastest. This is further illustrated in
Example 6.1.
Thescalarproductofthegradientoperatorwithavectorﬁeldgivesthedivergenceofthevectorﬁeld.The
term divergence probably originated in ﬂuid mechanics, where it refers to the ﬂow leaving a point. Wewill
see later that the divergence of the heat ﬂux is equal to the heat ﬂowing from a point (the negative of the
source in a steady-state situation). The divergenceof avector~q is obtained by taking a scalar product of the
gradient operator ~r and~q, which gives
~r ~q ¼ ~i @
@x þ~j @
@y




qx~i þ qy~j

¼ @qx
@x þ @qy
@y  div~q:
Notice that the divergence of a vector ﬁeld is a scalar. As indicated in the last expression, the divergence
operator is often written by simply preceding the vector by the abbreviation ‘div’.
The above expressions can bewritten inthe matrix form as follows. Thegradient operator is deﬁned asa
column matrix. So
= ¼
@
@x
@
@y
2
664
3
775
and
= ¼
@
@x
@
@y
2
664
3
775:
The matrix form of the divergence is written by replacing the dot in the scalar product by a transpose
operation, so
div~q ¼ ~~q ¼ =Tq:
Itisimportanttonoticethatwhenwewritethegradientoperatorinvectornotation,anarrowisplacedonthe
inverted del; in matrix notation, the arrow is omitted.
In the following, the students should usewhichever notation is more natural. For those not very familiar
witheithernotation,theyshouldﬁrstscanthematerialandseewhichonetheycanunderstandmorereadily.
For advanced students, a familiarity with both notations is recommended.
6.1
DIVERGENCE THEOREM AND GREEN’S FORMULA
The two-dimensional equations will be developed for a body of arbitrary shape. We will often refer to the
points inside the body as the domain of the problem we are treating. We will follow common practice and
draw this generic arbitrary body as shown in Figure 6.1(b); the idea of this ﬁgure is intended to convey that
we are not placing any restrictions on the shape of the body: The derivations that follow hold for arbitrary
shapes. This body is often called a potato, though heat conduction in potatoes is seldom of interest. It is
worth pointing out that the shape can actually be much more complicated: The body can have holes, it can
Ω
x
y
Γ
Γ
n ny
nx
0
l
Ω = [0,l]
n = −1
n = 1 x
(b)
(a)
Figure 6.1
(a) One-dimensional domain and (b) two-dimensional domain.
DIVERGENCE THEOREM AND GREEN’S FORMULA
133

have corners and it can consist of different materials with interfaces between them. The boundary of the
domain is denoted by . Notice that our nomenclature is identical to that in the previous chapters, but now
thesymbols refertomorecomplicated objects.Thecorrespondence between thedeﬁnitionsinone andtwo
dimensions is readily apparent by comparing Figure 6.1(a) and Figure 6.1(b).
The unit normal vector to the domain, denoted by~n, is shown at a typical point in Figure 6.1(b) and is
given by
~n ¼ nx~i þ ny~j;
ð6:3Þ
andnx andny arethexandycomponentsoftheunitnormalvector,respectively;thisvectorisalsocalledthe
normal vector or just the normal. As~n is a unit vector, it follows that n2
x þ n2
y ¼ 1.
The objective of this section is to develop the formula corresponding to the integration by parts formula
(3.16) for a scalar ﬁeld ðx; yÞ, where ðx; yÞ is deﬁned on the domain . Examples of the scalar ﬁelds are
temperature ﬁelds Tðx; yÞ and potential ﬁelds ðx; yÞ.
Priortodiscussingthedivergencetheorem,itisinstructivetorecallthefundamentaltheoremofcalculus
that we developed in Chapter 3: for any C0 integrable function in a one-dimensional domain, , with
boundaries , we have
Z

dðxÞ
dx dx ¼ ðnÞj:
ð6:4Þ
Recall that the boundary consists of the two end points of the domain and the unit normals point in the
negative x-direction at x ¼ 0 and positive x-direction at x ¼ l.
The generalization of this statement to multidimensions is given by Green’s theorem, which states:
If ðx; yÞ 2 C0 and integrable; then
Z

~r d ¼
I

~n d
or
Z

= d ¼
I

n d:
ð6:5Þ
Note the similarity of (6.4) and (6.5); the operator d=dx is simply replaced by the gradient ~r. In fact, d/dx
can be considered the one-dimensional counterpart of the gradient. So the one-dimensional form (6.4) is
justa special case of(6.5).Equation (6.5) also appliesinthree dimensions.The proofofGreen’s theorem is
given in Appendix A4.
Usingtheabove,wewillnowdevelopatheoremthatrelatestheareaintegralofthedivergenceofavector
ﬁeld to the contour integral of a vector ﬁeld, which is called the divergence theorem. It states that if~q is C0
and integrable, then
Z

~r ~q d ¼
I

~q ~n d
or
Z

=Tq d ¼
I

qTn d:
ð6:6Þ
Note that (6.5) in two dimensions represents two scalar equations
ðaÞ
Z

@
@x d ¼
Z

nx d;
ðbÞ
Z

@
@y d ¼
Z

ny d:
ð6:7Þ
134
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Letting  ¼ qx in (6.7a) and  ¼ qy in (6.7b), and adding them together yields
Z

@qx
@x þ @qy
@y


d ¼
I

ðqxnx þ qynyÞ d
or
Z

~r ~q d ¼
I

~q ~n d;
ð6:8Þ
which is the divergence theorem given in (6.6).
Green’s formula, which is derived next, is the counterpart of integration by parts in one dimension. It
states that
Z

w~r ~q d ¼
I

w~q ~n d 
Z

~rw ~q d
or
Z

w=Tq d ¼
I

w qTn d 
Z

ð=wÞTq d:
To develop Green’s formula, we ﬁrst evaluate ~r  ðw~qÞ by the derivative of a product rule:
~r  ðw~qÞ ¼ @
@x ðwqxÞ þ @
@y ðwqyÞ ¼ @w
@x qx þ w @qx
@x þ @w
@y qy þ w @qy
@y
¼ w
@qx
@x þ @qy
@y


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~r ~q
þ
@w
@x qx þ @w
@y qy


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
~rw ~q
¼ w~r ~q þ ~rw ~q:
ð6:9Þ
Notice that we can immediately write the last step of the above if we think of the gradient as a generalized
derivative and place dots between any two vectors.
Integrating (6.9) over the domain yields
Z

~r  ðw~qÞ d ¼
Z

w~r ~q d þ
Z

~rw ~q d:
ð6:10Þ
Applying the divergence theorem to the LHS of (6.10) and then rearranging terms yields Green’s
formula:
Z

w~r ~q d ¼
I

w~q ~n d 
Z

~rw ~q d:
ð6:11Þ
It is interesting to observe that for a rectangular domain l  1 with one-dimensional heat ﬂow, where
~q ¼ qx~i and~n ¼ n~i, nð0Þ ¼ ~i, nðlÞ ¼~i, we have
Z

w @qx
@x d ¼
I

qxwn d 
Z

@w
@x qx d:
ð6:12Þ
DIVERGENCE THEOREM AND GREEN’S FORMULA
135

Choosing w to be only a function of x, i.e. wðxÞ, and integrating (6.12) in y the above reduces to the formula
for integration by parts in one dimension (3.16), which is repeated below:
Z l
0
w @qx
@x dx ¼ qxw
ð
Þx ¼ l  ðqxwÞx¼0 
Z l
0
qx
@w
@x dx:
ð6:13Þ
Note the similarity of (6.11) and (6.13). For additional reading on Green’s theorem, Green’s formula and
the divergencetheorem, we recommend Fung (1994) foran introductory approach and Malvern (1969) for
a more advanced treatment.
Example 6.1
Given a rectangular domain as shown in Figure 6.2. Consider a scalar function  ¼ x2 þ 2y2. Let~q be the
gradient of  deﬁned as~q ¼ ~r. Contour lines are lines along which a function is constant.
(a)
Find the normal to the contour line of  passing through the point x ¼ y ¼ 0:5.
(b)
Verify the divergence theorem for~q.
The gradient vector~q is given as
~q ¼ @
@x
~i þ @
@y
~j ¼ 2x~i þ 4y~j:
Figure 6.3 depicts the contour lines of  and the gradient vector~q. It can be seen that~q is normal to the
contour lines and its magnitude represents the slope of  at any point.
The gradient of  at x ¼ y ¼ 0:5 is
~qð0:5; 0:5Þ ¼~i þ 2~j:
Atthepointx ¼ y ¼ 0:5,thevalueofthescalarﬁeldisð0:5; 0:5Þ ¼ 0:75.Theunitnormalvectortothe
contour line x2 þ 2y2  0:75 ¼ 0 at the point x ¼ y ¼ 0:5 is obtained by dividing the vector ~q by its
magnitude, which gives
~nð0:5; 0:5Þ ¼ 1ﬃﬃﬃ
5
p ð~i þ 2~jÞ:
x
y
C
D
A
B
  1
1
−1
−1
n(3) = j
  n(1) = − j
  n(4) = − i
  n(2) = i
Figure 6.2
Domain used for illustration of divergence theorem.
136
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

We now verify the divergence theorem. The unit normal vectors at the four boundaries of the domain
ABCD are shown in Figure 6.2. Toverifythe divergence theorem (6.6), we ﬁrstevaluate the integrand on
the LHS of (6.6):
~r ~q ¼ @qx
@x þ @qy
@y ¼ 2 þ 4 ¼ 6:
Integrating the above over the problem domain gives
Z

~r ~q d ¼
Z1
1
Z1
1
6 dy
0
@
1
A dx ¼ 24:
Evaluating the boundary integral counterclockwise gives
I

~q ~n d ¼
Z
AB
ð4yÞ d
|{z}
dx
þ
Z
BC
2x d
|{z}
dy
þ
Z
CD
4y d
|{z}
dx
þ
Z
DA
ð2xÞ d
|{z}
dy
¼
Z1
1
4 dxþ
Z1
1
2 dyþ
Z1
1
4 dxþ
Z1
1
2 dx ¼ 24:
Thus, we have veriﬁed the divergence theorem for this example.
Figure 6.3
Contour lines of a function  ¼ x2 þ 2y2 and its gradient.
DIVERGENCE THEOREM AND GREEN’S FORMULA
137

Example 6.2
Given a vector ﬁeld qx ¼ 3x2y þ y3, qy ¼ 3x þ y3 on the domain shown in Figure 6.4, verify the
divergence theorem.
The integrand on the LHS of (6.6) is given as
~r ~q ¼ @qx
@x þ @qy
@y ¼ 6xy þ 3y2:
Integrating the above yields
Z

~r ~q d ¼
Z 2
0
Z 10:5x
0
ð6xy þ 3y2Þdy


dx ¼
Z 2
0
h
3xð1  0:5xÞ2 þ ð1  0:5xÞ3i
dx ¼ 1:5:
The counterclockwise computed boundary integral on AB is
Z
AB
~q ~nð1Þ d ¼
Z
AB
qxð1Þ d ¼
Z2
0
3x dx ¼ 6;
where~nð1Þ ¼ ~j, d ¼ dx and y ¼ 0 on AB.
ForthecounterclockwisecomputedboundaryintegralonBC,notethatequationofthelineBCisgiven
by y ¼ 1  0:5x and~nð2Þ ¼
ﬃﬃﬃ
5
p
=5ð~i þ 2~jÞ, d ¼ 
ﬃﬃﬃ
5
p
=2dx on BC. The boundary integral on BC is then
given by
Z
BC
~q ~nð2Þ d ¼
Z
AB
ðqx~i þ qy~j Þ
ﬃﬃﬃ
5
p
5 ð~i þ 2~j Þ d ¼
Z0
2
 1
2
h
ð3x2 þ y3Þ þ 2ð3x þ y3Þ
i
dx ¼ 7:75:
Finally, the counterclockwise boundary integral on CA is
Z
BC
~q ~nð3Þ d ¼
Z
AB
ðqx~i þ qy~jÞð~iÞ d ¼
Z0
1
y3 dy ¼ 0:25;
where~nð3Þ ¼ ~i, d ¼ dy and x ¼ 0 on CA.
x
B
A
C
y
n(2)
n(1)
n(3)
(2,0)
(0,1)
Figure 6.4
Triangular problem domain used for illustration of divergence theorem.
138
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Adding the contributions of the three segments gives
I

~q ~n d ¼
Z
AB
~q ~n d þ
Z
BC
~q ~n d þ
Z
CA
~q ~n d ¼ 6 þ 7:75  0:25 ¼ 1:5;
which completes the demonstration that the divergence theorem holds for this case.
6.2
STRONG FORM1
To derive the strong form we will apply energy balance to a control volume. The strong form will be
completed by adding the Fourier law, which relates heat ﬂux to the temperature gradient and the boundary
conditions. Finally, the weak form will be formulated by integrating the product of the governing equation
and the natural boundary condition with the weight function over the domains where they hold. A
symmetric form is obtained by applying Green’s formula (equivalent to the integration by parts in one
dimension). We consider only steady-state problems where the temperature is not a function of time.
Consider a plate of unit thickness shown in Figure 6.5(a); the plate contains a heat source sðx; yÞ (energy
per unit area and time). The control volume is shown in Figure 6.5(b). The balance of heat energy in the
controlvolumerequiresthattheheatﬂux~qﬂowingoutthroughtheboundariesofthecontrolvolumeequals
the heatgenerated s.Thisisthe sameenergybalancewe usedinChapter 3:asthe bodyisinsteady state,the
heat energy in any control volume must stay constant, which means that the ﬂow out has to equal the heat
energy generated by the source.
The ﬂux vector ~q can be expressed in terms of two components: the component tangential to the
boundaryqt andthecomponentnormaltotheboundaryqn.Thetangentialcomponentqt doesnotcontribute
to the heat entering or exiting the control volume. Recall that
~q ¼ qx~i þ qy~j;
~n ¼ nx~i þ ny~j;
n2
x þ n2
y ¼ 1:
The normal component qn is given by the scalar product of the heat ﬂux with the normal to the body:
qn ¼ ~q ~n ¼ qTn ¼ qxnx þ qyny:
ð6:14Þ
On AD, where ~n ¼ ~i, the heat inﬂow is qn ¼ ~q  ð~iÞ ¼ qx whereas on BC, where ~n ¼~i, the heat
inﬂow is qn ¼ ~q ~i ¼ qx.
Ω
( , )
s x y
q
n
n
q
x
∆
y
∆
(
, )
2
A
B
D
C
x
x
q x
y
−
(
, )
2
x
x
q x
y
+ ∆
( ,
)
2
y
y
q x y −∆
( ,
)
2
y
q x y + ∆y
y
∆
∆
x
∆
( , )
O x y
(a)
x
y
(b)
Figure 6.5
Problem deﬁnition: (a) domain of a platewith a control volume shaded and (b) heat ﬂuxes in and out of the
control volume.
1Recommended for Science and Engineering Track.
STRONG FORM
139

InFigure6.5(b),onlythenormalcomponentsoftheﬂuxareshown,asthesearetheonlyonesthatcontribute
to the energy ﬂow into the control volume. The energy balance in the control volume is given by
qx x  x
2 ; y


y  qx x þ x
2 ; y


y
þ qy x; y  y
2


x  qy x; y þ y
2


x þ sðx; yÞxy ¼ 0:
where the ﬁrst four terms are the net heat inﬂow. Divide the above by xy and recall the deﬁnition of a
partial derivative:
lim
x!0
qx x þ x
2 ; y


 qx x  x
2 ; y


x
¼ @qx
@x ;
lim
y!0
qy x; y þ y
2


 qy x; y  y
2


y
¼ @qy
@y :
The above energy balance equation (after a change of sign) can then be written as
@qx
@x þ @qy
@y  s ¼ 0;
or in the vector and matrix forms:
ðaÞ
~r ~q  s ¼ 0
or
div~q  s ¼ 0
or
ðbÞ
=Tq  s ¼ 0:
ð6:15Þ
If we recall the deﬁnition of the divergence operator, we can see that this equation can be obtained just by
reasoning: the ﬁrst term is the divergence of the ﬂux, i.e. the heat ﬂowing out from the point. The heat
ﬂowing out from the point ~r ~q must equal the heat generated s to maintain a constant amount of heat
energy, i.e. temperature, at a point, which gives equation (6.15).
Recall Fourier’s law in one dimension:
q ¼ k dT
dx ¼ krT:
In two dimensions, we have two ﬂux components and two temperature gradient components. For isotropic
materials in two dimensions, Fourier’s law is given by
~q ¼ k~rT or q ¼ k=T;
ð6:16Þ
where k > 0. As in one dimension, the minus sign in (6.16) reﬂects the fact that heat ﬂows in the
direction opposite to the gradient, i.e. from high temperature to low temperature. If the conductivity k is
constant, the energy balance equation expressed in terms of temperature is obtained by substituting (6.16)
into (6.15):
kr2T þ s ¼ 0;
ð6:17Þ
where
r2 ¼ ~r  ~r ¼ =T= ¼ @2
@x2 þ @2
@y2 :
ð6:18Þ
140
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Equation (6.17) is called the Poisson equation and r2 is called the Laplacian operator.
The ﬂux and the temperature gradient vectors are related by a generalized Fourier’s law:
qx
qy


¼  kxx
kxy
kyx
kyy


|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
D
@T
@x
@T
@y
2
664
3
775;
or in the matrix form:
q ¼ D=T;
ð6:19Þ
where D is the conductivity matrix. Wewrite this equation only in the matrix form because thevector form
cannot be written without second-order tensors, which are not covered here.
Substituting the generalized Fourier law (6.19) into the energy balance equation (6.15) yields
=TðD=TÞ þ s ¼ 0:
ð6:20Þ
The matrix D must be positive deﬁnite as heat must ﬂow in the direction of decreasing temperature.
For isotropic materials,
D ¼
k
0
0
k


¼ kI:
ð6:21Þ
In two dimensions, the symmetry of the material is an important factor in the form of the Fourier law. A
material is said to have isotropic symmetry if the properties are the same in any coordinate system. For
example, most metals, concrete and a silicon crystal are isotropic. The form of the relation between heat
ﬂux and temperature gradient in an isotropic material is independent of how the coordinate system is
placed. In anisotropic materials, D depends on the coordinate system. Examples of anisotropic materials
are radial tires, ﬁber composites and rolled aluminum alloys. For example, in a radial tire, heat ﬂows much
more rapidly along the direction of the steel wires than in the other directions.
To solve the partial differential equation (6.20), boundary conditions must be prescribed. In multi-
dimensions, the same complementarity conditions that we learned in one dimension hold. At any point of
the boundary (see Figure 6.6), either the temperature or the normal ﬂux must be prescribed, but they both
cannot be prescribed. Therefore, if we denote the boundary where the temperature is prescribed by T and
the boundary where the ﬂux is prescribed by q, then we have
q [ T ¼ ;
q \ T ¼ 0:
ð6:22Þ
T
q
Γ = Γ  Γ  
T = T on ΓT
x
Ω
y
⊂
Figure 6.6
Problem domain and boundary conditions.
STRONG FORM
141

We write the prescribed temperature boundary condition as
Tðx; yÞ ¼ Tðx; yÞ
on
T;
ð6:23Þ
where Tðx; yÞ is the prescribed temperature; these are the essential boundary conditions; these are also
called Dirichlet conditions. As indicated, the prescribed temperature along the boundary can be a function
of the spatial coordinates.
On a prescribed ﬂux boundary, only the normal ﬂux be prescribed. We can write the prescribed ﬂux
condition as
qn ¼ ~q ~n ¼ q
on
q:
ð6:24Þ
These are also called Neumann conditions. For an isotropic material, the normal ﬂux is proportional to the
gradient of the temperature in the normal direction, i.e. it follows from (6.19) and (6.21) that
qn ¼ knTrT. It can be seen that the ﬂux depends on the derivatives of the temperature, so this is the
natural boundary condition.
The resulting strong form for the heat conduction problem in two dimensions is given in thevector form
forisotropic materialsinBox6.1andinthe matrixform forgeneralanisotropicmaterialsinBox6.2.These
forms differ from what we used in one dimension in that the energy balance and Fourier’s law are not
combined.Thissimpliﬁesthedevelopmentoftheweakformandextendstheapplicabilityoftheweakform
to nonlinear heat conduction.
Box 6.1. Strong form (vector notation) for heat conduction
ðaÞ energy balance :
~r ~q  s ¼ 0
on
;
ðbÞ Fourier0s law :
~q ¼ k~rT
on
;
ðcÞ natural BC :
qn ¼ ~q ~n ¼ q
on
q;
ðdÞ essential BC :
T ¼ T
on
T:
ð6:25Þ
Box 6.2. Strong form (matrix notation) for heat conduction
ðaÞ energy balance :
=Tq  s ¼ 0
on ;
ðbÞ Fourier0s law :
q ¼ D=T
on ;
ðcÞ natural BC :
qn ¼ qTn ¼ q
on q;
ðdÞ essential BC :
T ¼ T
on T;
ð6:26Þ
The variables s, D, T and q are the data for the problem. These, along with the geometry of the domain ,
must be given.
6.3
WEAK FORM
To obtain the weak form we will follow the same basic procedure as for the one-dimensional problem in
Chapter 3. However, as we have already mentioned, we will develop the weak form of the balance equation
(6.15a). Then we will express the heat ﬂux in terms of the temperature gradient by the Fourier law.
We start with the energy balance equation (6.15a) and the natural boundary condition (6.25c). We
premultiply the two equations by a weight function w and integrate over the problem domain  and the
142
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

natural boundary q, respectively:
ðaÞ
Z

wð~r ~q  sÞ d ¼ 0 8w;
ðbÞ
Z
q
wðq ~q ~nÞ d ¼ 0
8w:
ð6:27Þ
Fortheequivalenceofthestrongandweakforms,itiscrucialthattheweakformholdforallfunctionsw.As
in one dimension, we will ﬁnd that some restrictions must be imposed on the weight function, but we will
develop these as we need them. Applying Green’s formula to the ﬁrst term in (6.27a) yields
Z

w~r ~q d ¼
I

w~q ~n d 
Z

~rw ~q d
8w:
ð6:28Þ
Inserting (6.28) into (6.27a) yields
Z

~rw ~q d ¼
I

w~q ~n d 
Z

ws d ¼
Z
q
w~q ~n d þ
Z
T
w~q ~n d 
Z

ws d:
ð6:29Þ
where we have subdivided the ﬁrst integral on the RHS of (6.29) into the prescribed temperature and
prescribedﬂuxboundaries,whichispermissiblebecauseof(6.22).Substituting(6.27b)intotheintegralon
q (6.29) yields
Z

~rw ~q d ¼
Z
q
wq d þ
Z
T
w~q ~n d 
Z

ws d:
We now follow the same reasoning as in Chapter 3. It is easy to construct weight functions that vanish on a
portion of the boundary, so we set w ¼ 0 on the prescribed temperature boundary, i.e. the essential
boundary. Therefore the integral on T vanishes and the weak form is given by
Z

~rw ~q d ¼
Z
q
wq d 
Z

ws d
8w 2 U0;
ð6:30Þ
where U0 is the set of sufﬁciently smooth functions that vanish on the essential boundary, it is the space of
functions deﬁned in (3.48). The space of admissible trial solutions U satisﬁes the essential boundary
conditions and is sufﬁciently smooth as deﬁned in (3.47). Recall that according to the deﬁnition of these
spaces, the trial solutions and weight functions have to be C0 continuous.
Expressing (6.30) in matrix form gives
Z

ð=wÞTq d ¼
Z
q
wq d 
Z

ws d
8w 2 U0:
The above is the weak form for any material, linear or nonlinear. To obtain the weak form for linear
materials, we substitute Fourier’s law into the ﬁrst term of the above, which yields
Box 6.3. Weak form (matrix notation) for heat conduction
find T 2 U such that:
Z

ð=wÞTD=T d ¼ 
Z
q
wq d þ
Z

ws d
8w 2 U0:
ð6:31Þ
WEAK FORM
143

6.4
THE EQUIVALENCE BETWEEN WEAK AND STRONG FORMS2
To demonstrate the equivalence of the strong form and theweak form, it must be shown that theweak form
implies the strong form. This demonstration is similar to the one used in Chapter 3 for showing the
equivalence for one-dimensional problems: we reverse the steps that we have followed in going from the
strong form to the weak form and then invoke the arbitrariness of the weight functions to extract the strong
form from the integral equations. We will do this for the weak form for arbitrary materials.
We start with (6.30), rewritten below:
Z

~rw ~q d ¼
Z
q
wq d 
Z

ws d:
Now we apply Green’s formula (6.11) to the ﬁrst term, which gives
Z

wð~r ~q  sÞ d þ
Z
q
wðq ~q ~nÞ d 
Z
T
w~q ~n d ¼ 0
8w 2 U0:
ð6:32Þ
WefollowthesamestrategyasinChapter3.SincetheweightfunctionwðxÞisarbitrary,itcanbeassumedto
be any function that vanishes on T.
Wetakeadvantageofthearbitrarinessoftheweightfunctionandmakeitequaltotheintegrandthatis,we
let
w ¼  ðxÞð~r ~q  sÞ;
where
 ðxÞ ¼
0
on

> 0
on



:
ð6:33Þ
Inserting (6.33) into (6.32) yields
Z

 ð~r ~q  sÞ2 d ¼ 0:
ð6:34Þ
The boundary terms have vanished because our choice of wðxÞ, (6.33), vanishes on the boundaries. Since
 ðxÞ > 0 in , the integrand in (6.34) is positive at every point in the domain. For the integral in (6.34) to
vanish, the integrand has to vanish as well. Hence, since  ðxÞ > 0,
~r ~q  s ¼ 0
in
;
ð6:35Þ
which is the energy balance equation (6.15). After substituting (6.35) into (6.32) we select a weight
function that is nonzero on the natural boundary, but vanishes on the essential boundary (it does not
matter what its value is inside the domain, as by (6.35) we know that the ﬁrst term in (6.32) will vanish).
So we let
w ¼ ’ðq ~q ~nÞ;
where
’ ¼
0
on
T
> 0
on
q


:
ð6:36Þ
Substituting (6.36) into (6.32) yields
Z
q
’ðq ~q ~nÞ2 d ¼ 0:
ð6:37Þ
2Recommended for Advanced Track.
144
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Astheintegrandin(6.37)ispositiveonq,thequantityinsidetheparenthesesmustvanishoneverypointof
the natural boundary, so the natural boundary condition (6.25c) follows.
6.5
GENERALIZATION TO THREE-DIMENSIONAL PROBLEMS 3
The extension from two to three dimensions is almost trivial. The difference is not in the structure of the
strong and weak form equations, which are identical, but in the deﬁnitions of the vectors, gradient,
divergence and Laplacian operators.
In three dimensions, the base (unit) vectors are~i,~j and~k as shown in Figure 6.7. Avector~q expressed in
terms of its components is
~q ¼ qx~i þ qy~j þ qz~k;
q ¼
qx
qy
qz
2
4
3
5;
ð6:38Þ
where the matrix form is shown on the right-hand side. In three dimensions, the problem domain  is a
volume (which looks like the potato in Figure 6.7) and its boundary  is a surface. The progression of
dimensionality of the problem domain and its boundary from one-dimensional to three-dimensional
problems is summarized in Table 6.1.
The boundary , which is the surface encompassing the three-dimensional domain , consists of the
complementary essential and natural boundaries, as shown in Figure 6.7.
  on   q 
q n
q 
⋅
=
Γ 
 on   T 
T
T 
= 
Γ 
q 
n 
x 
y 
z 
i 
j 
r 
k 
Figure 6.7
Problem domain and boundary conditions in three dimensions.
Table 6.1
Dimensionality of the problem domain and its boundary.
Entity
Domain 
Boundary 
One dimension (1D)
Line segment
Two end points
Two dimensions (2D)
Two-dimensional area
Curve
Three dimensions (3D)
Volume
Surface
3Recommended for Advanced Track.
GENERALIZATION TO THREE-DIMENSIONAL PROBLEMS
145

The gradient operator in three dimensions in vector and matrix notations is deﬁned as
~r ¼~i @
@x þ ~j @
@y þ~k @
@z ;
~r ¼~i @
@x þ ~j @
@y þ ~k @
@z ;
= ¼
@
@x
@
@y
@
@z
2
6666664
3
7777775
;
= ¼
@
@x
@
@y
@
@z
2
6666664
3
7777775
:
Withthe abovedeﬁnitionsofvectorsandthegradient vectoroperator,thedivergenceofthevectorﬁeldand
the Laplacian are
div ~q ¼ @qx
@x þ @qy
@y þ @qz
@z ;
r2 ¼ ~r  ~r ¼ =T= ¼ @2
@x2 þ @2
@y2 þ @2
@z2:
ThestrongforminvectorandmatrixnotationsisidenticaltothatgiveninEquations(6.25)and(6.26).Note
that the Fourier law relating the three components of temperature gradient to the three ﬂux components is
deﬁned in terms of a 3  3 symmetric positive deﬁnite matrix D:
D ¼
kxx
kxy
kxz
kyx
kyy
kyz
kzx
kzy
kzz
2
4
3
5:
The weak form is also identical to that for two-dimensional problems as given in (6.31).
6.6
STRONG AND WEAK FORMS OF SCALAR STEADY-STATE
ADVECTION–DIFFUSION IN TWO DIMENSIONS 4
The advection-diffusion equations are obtained from a conservation principle (often called a balance
principle), just like heat conduction. The conservation principle states that the species (be it a material,
an energy or a state) are conserved in each control volume of area x  y and unit thickness shown in
Figure 6.8. The amount of species entering minus the amount of species leaving equals the amount
produced (a negativevolume when the species decays). There are two mechanisms for inﬂow and outﬂow,
advection (or convection), which is given by~v, and diffusion, which is given by~q.
v
x y
(
, )
2
x
x
q x
y
−
(
, )
2
x
x
q x
y
+
( ,
)
2
y
y
q x y −
( ,
)
2
y
y
q x y +
y
D
D
D
D
D
D
D
D
D
x
D
( , )
O x y
(
, )
2
x
x
v
x
y
−
( ,
)
2
y
v
x y −
(
, )
2
x
v
x
y
+
( ,
)
2
y
y
q
yq
q
xq
+
Figure 6.8
Control volume for advection–diffusion problem.
4Recommended for Advanced Track.
146
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Inaddition,advectiononeachsurfaceresultsinaninﬂowof~v ~n.Theconservationprinciplecanthen
be developed as in section 6.2:
vx x  x
2 ; y


y þ qx x  x
2 ; y


y þ vy x; y  y
2


x þ qy x; y  y
2


x
 vx x þ x
2 ; y


y  qx x þ x
2 ; y


y  vy x; y þ y
2


x  qy x; y þ y
2


x
þ xys x; yÞ ¼ 0:
ð
Dividing the above by xy and taking the limit x ! 0, y ! 0, we obtain
@ðvxÞ
@x
þ @ðvyÞ
@y
þ @ðqxÞ
@x
þ @ðqyÞ
@y
 s ¼ 0:
The above can be written in the vector form as
~r  ð~vÞ þ ~r ~q  s ¼ 0:
ð6:39Þ
This is the general form of the advection–diffusion equation. The ﬁrst term accounts for the advection or
transport of the material and the second term accounts for the diffusion.
In many cases, the material carrying the species is incompressible. For steady-state problems and
incompressible materials, the rate of material volume entering control volume is equal to the rate of
material volume exiting control volume. Mathematically, this is given by
vx x  x
2 ; y


y þ vy x; y  y
2


x  vx x þ x
2 ; y


y  vy x; y þ y
2


x ¼ 0:
Dividing the above by xy and taking the limit x ! 0, y ! 0 gives
@ðvxÞ
@x þ @ðvyÞ
@y
¼ 0:
The above in matrix and vector notations is
~r ~v ¼ 0
or
=Tv ¼ 0:
ð6:40Þ
Equation (6.40) is known as the continuity equation for steady-state problems of incompressible
materials.
Substituting the continuity equation (6.40) into (6.39) yields the conservation equation fora species ina
moving incompressible ﬂuid, which can be written as
~v  ~r þ ~r ~q  s ¼ 0
or
vT= þ =Tq  s ¼ 0:
ð6:41Þ
AssumingthatthegeneralizedFourier’slaw(6.19)holds,theconservationofspeciesequationinthematrix
form becomes
vT=  =TðD=Þ  s ¼ 0:
ð6:42Þ
STRONG AND WEAK FORMS OF SCALAR STEADY-STATE ADVECTION–DIFFUSION
147

For isotropic materials D ¼ kI and the conservation equation reduces to
~v  ~r  kr2  s ¼ 0
or
vT=  kr2  s ¼ 0;
ð6:43Þ
where r2 is the Laplacian deﬁned in (6.18). We consider the usual essential and natural boundary
conditions
 ¼ 
on
;
~q ~n ¼ q
on
q;
ð6:44Þ
where  and q are complementary.
To obtain the weak form of (6.43) we multiply the conservation equation (6.41) and the natural
boundary condition by an arbitrary weight function w and integrate over the corresponding domains:
ðaÞ
Z

wð~v  ~r þ ~r ~q  sÞ d ¼ 0;
ðbÞ
Z
q
wðq ~q ~nÞ d ¼ 0
on
8w:
ð6:45Þ
Integration by parts of the second term (the diffusion term) in (6.45a) gives
Z

w~v  ~r d 
Z

~rw ~q d þ
Z
q
wq d 
Z

ws dðaÞ
8w 2 U0;
ð6:46Þ
where we have exploited (6.45b) and that w ¼ 0 on .
Finally, theweak form is completed by substituting the generalized Fourier law into (6.46), which gives
find the trial solution ðx; yÞ 2 U such that
Z

w vT= d þ
Z

ð=wÞTD= d þ
Z
q
wq d 
Z

ws d
8w 2 U0:
ð6:47Þ
The above is theweak form for the advection–diffusion equation. Note that the ﬁrst term is unsymmetric in
theweight function w and the solution . This will result in unsymmetric discrete system equations and has
important ramiﬁcations on the nature of the solutions, because as in 1D, the solutions can be unstable if the
velocity is large enough.
REFERENCES
Fung, Y.C. (1994) A First Course in Continuum Mechanics, 3rd edn, Prentice Hall, Englewood Cliffs, NJ.
Malvern, L.E. (1969) Introduction to the Mechanics of a Continuous Medium, Prentice Hall, Englewood
Cliffs, NJ.
Problems
Problem 6.1
Given a vector ﬁeld qx ¼ y2, qy ¼ 2xy on the domain shown in Figure 6.2. Verify the divergence
theorem.
Problem 6.2
Givenavectorﬁeldqx ¼ 3x2y þ y3,qy ¼ 3x þ y3 onthedomainshowninFigure6.9.Verifythedivergence
theorem. The curved boundary of the domain is a parabola.
148
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

Problem 6.3
Using the divergence theorem prove
I

n d ¼ 0:
Problem 6.4
Starting with the strong form
dq
dx  s ¼ 0;
qð0Þ ¼ q;
TðlÞ ¼ T;
developaweakform.NotethattheﬂuxqisrelatedtothetemperaturethroughFourier’slaw,butdevelopthe
weak form ﬁrst in terms of the ﬂux.
Problem 6.5
Consider the governing equation for the heat conduction problem in two dimensions with surface
convection:
=TðD=TÞ þ s ¼ 2hðT  T1Þ on ;
qn ¼ qTn ¼ q on q;
T ¼ T on T:
Derive the weak form.
Problem 6.6
Derivethe strong form for a platewith avariable thickness tðx; yÞ. Hint: Consider control volumein Figure
6.5(b), and account for the variable thickness. For example the heat inﬂow at ðx  x=2; yÞ is
qx x  x
2 ; y


y t x  x
2 ; y


:
Derive the weak form for the plate with variable thickness.
x
y
n2
n1
(2,0)
(−2,0)
(0,4)
Figure 6.9
Parabolic domain of Problem 6.2 used for illustration of divergence theorem.
REFERENCES
149

Problem 6.7
Consider a heat conduction problem in 2D with boundary convection (Figure 6.10).
Construct the weak form for heat conduction in 2D with boundary convection.
Problem 6.8
Consider a time-dependent heat transfer. The energy balance in a control volume (see Figure 6.5) is given
by
qx x  x
2 ; y


y  qx x þ x
2 ; y


y þ qy x; y  y
2


x
 qy x; y þ y
2


x þ sðx; yÞxy ¼ cr @T
@t; xy
where Tðx; y; tÞ,c andr denote the temperature, material speciﬁc heat and density,respectively,and tis the
time. The above equation states that the change in internal energy is not zero, but is rather governed by
density, speciﬁc heat and rate of change of temperature.
Derive the weak and strong forms for the time-dependent heat transfer problem.
T
T
=
on 
T
Γ
Γ = Γ
x
n
q
q
=
on 
q
T
Γ
q
Γ
h
Γ
U
U
Ω
y
n
q
h T
T
=
–
 on 
h
Γ
∞)
(
Figure 6.10
Problem domain and boundary conditions for heat conduction with boundary convection.
150
STRONG AND WEAK FORMS FOR MULTIDIMENSIONAL SCALAR FIELD PROBLEMS

7
Approximations of Trial
Solutions, Weight Functions
and Gauss Quadrature for
Multidimensional Problems
Inthischapter,wedescribetheconstructionoftheweightfunctionsandtrialsolutionsfortwo-dimensional
applications; we will sometimes collectively call these approximations or just functions. In ﬁnite element
methods, these approximations are constructed from shape functions. As in Chapter 4, where weight
functions and trial solutions were constructed for one-dimensional problems, the basic idea is to construct
C0 interpolants that are complete. Following the nomenclature introduced in Chapter 4, wewill denote the
approximation by ðx; yÞ. It represents any scalar function such as temperature or material concentration.
We have already noted that the situation in multidimensions is altogether different from that in one-
dimensional problems, as the exact solution of the partial differential equations in multidimensions is
feasible for problems only on simple domains with simple boundary conditions. Thus, numerical solution
ofthepartialdifferentialequationsisgenerallytheonlypossibilityforpracticalproblems.Theapproachof
ﬁnite element methods remains the same: approximate the weight functions and trial solutions by ﬁnite
element shape functions so that as the number of elements is increased, the quality of the solution is
improved. In the limit as h ! 0 (h being the element size) or as the polynomial order is increased, the ﬁnite
element solution should converge to the exact solution if the approximations are sufﬁciently smooth and
complete.
Itisintwo-dimensional problemsthatthe power ofthe ﬁniteelement methodbecomesclearly apparent.
We will see that the ﬁnite element method provides a method for easily constructing approximations to
solutions for bodies of arbitrary shape. Furthermore, as will become apparent when we examine the
MATLAB programs, ﬁnite element methods possess a modularity that enables simple programs to treat a
large class of problems. Thus, the ﬁnite element program developed in Chapter 12 can treat any two-
dimensional heat conduction problem, regardless of the shape or the variation of the conductivity.
Furthermore, the two-dimensional programs are almost identical in architecture to the one-dimensional
program, yet the generality of the ﬁnite element method enables even these simple MATLAB programs to
handle almost any geometry.
We saw in Chapter 4 that the trial solutions have to be constructed so that the polynomial expansion for
each element is complete and the global approximation is C0 continuous or, in other words, compatible. In
multiple dimensions, the requirements remain the same, but the construction of trial solutions and weight
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

functions presents several challenges as the construction of continuous ﬁelds for arbitrary meshes of
quadrilaterals and triangles becomes more complicated; in particular, the construction of shape functions
for quadrilaterals requires a new concept to be introduced: the isoparametric element. We will see that in
addition to their usefulness in quadrilaterals, isoparametric elements enable curved boundaries to be
treated with remarkable precision, so that engineering problems can be solved effectively.
7.1
COMPLETENESS AND CONTINUITY
We ﬁrst consider the issue of completeness. To explain this concept, consider the simple problem domain
showninFigure 7.1. The domain issubdivided (meshed)into triangularelements, which isone ofthe ﬁnite
elements to be considered in this chapter, as shown in Figure 7.2. The trial solution is then constructed on
each element.
Consider the following possible polynomial expansions:
ðaÞ
eðx; yÞ ¼ ae
1 þ ae
2x þ ae
3y;
ðbÞ
eðx; yÞ ¼ ae
1 þ ae
2x þ ae
3y2;
ðcÞ
eðx; yÞ ¼ ae
1 þ ae
2x þ ae
3y þ ae
4xy þ ae
5x2 þ ae
6x3y;
ðdÞ
eðx; yÞ ¼ ae
1 þ ae
2x þ ae
3y þ ae
4x2y2 þ ae
5xy þ ae
6y3:
ð7:1Þ
Which of the four is a useful polynomial expansion for trial solutions? The answer can be determined by
examining Pascal’s triangle, which is shown in Figure 7.3. Each row of the triangle gives the monomials
that must be included in a ﬁnite element approximation to provide an element with the order of complete-
ness indicated to the right. If any of the terms in a row are missing, then the element will not be complete to
that degree and will not have the convergence rate associated with that row of the expansion. For example,
(7.1a) is linear complete, and its convergenceratewill be of second order, i.e. quadratic. On the other hand,
(7.1b) will not converge, as it is missing the linear term in y (recall that a complete linear expansion is the
minimumrequirementdiscussedinChapter4).Similarly,(7.1d)isnotquadraticallycompleteandwillonly
A
B
C
Figure 7.1
Triangular domain.
h
h 
h 
Figure 7.2
Finite element meshes of different reﬁnements for the triangular domain shown in Figure 7.1.
152
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

have the convergence rate associated with a linear polynomial (quadratic in the displacements), even
though it has monomials that are of higher order than linear.
Complete polynomial expansions can be obtained from the Pascal triangle by appending unknown
coefﬁcients to all monomials up to a given row. Complete polynomial expansions of linear, quadratic and
cubic orders are given below:
linear:
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y;
quadratic:
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y þ ae
3x2 þ ae
4xy þ ae
5y2;
cubic:
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y þ ae
3x2 þ ae
4xy þ ae
5y2 þ ae
6x3 þ ae
7x2y þ ae
8y2x þ ae
9y3:
We will use these polynomials to construct ﬁnite elements of various orders.
We next consider the issue of C0 continuity. To explain what is required in two-dimensional problems,
considerthetwoadjacentelementsshowninFigure7.4,eachwithacompletelinearpolynomialexpansion:
ð1Þ ¼ að1Þ
0
þ að1Þ
1 x þ að1Þ
2 y;
ð2Þ ¼ að2Þ
0
þ að2Þ
1 x þ að2Þ
2 y;
where the superscripts indicate the element number. Each polynomial is obviously C0 continuous within
the element. However,for the function tobeglobally C0,it must also beC0 continuous at everypoint on the
interfaces between the elements (not just at the nodes). In other words, for the speciﬁc example that we are
considering, it is necessary that
ð1ÞðsÞ ¼ ð2ÞðsÞ:
Therefore, að1Þ
0 , að1Þ
1 , að1Þ
2 , að2Þ
0 , að2Þ
1 and að2Þ
2 have to be carefully chosen to satisfy C0 continuity between the
two elements. In the next two sections, we describe how to construct continous and complete shape
functions for triangular and quadrilateral elements. We will start with the three-node triangular element.
1
2
2
2
2
3
3
constant
linear
quadratic
cubic
x
y
x
xy
y
x
x y
xy
y
Figure 7.3
Pascal triangle in 2D.
1
2
x
y
s
(1)
(2)
Figure 7.4
Continuity between two linear triangular elements.
COMPLETENESS AND CONTINUITY
153

7.2
THREE-NODE TRIANGULAR ELEMENT
The three-node triangular element is one of the most versatile and simplest of ﬁnite elements in two
dimensions.Onecaneasilyrepresentalmostanygeometrywithtriangularelementsand,withouttoomuch
trouble, construct meshes that have more elements in areas of high gradients (large derivatives), so that
greater accuracy can be obtained with the same number of elements. Furthermore, mesh generators for
triangularmeshesarethemostrobust,i.e.theytendnottomakeerrors.Thisisatremendousadvantage,asa
robust automatic mesh generator is essential in the solution of complex problems by ﬁnite elements.
A disadvantage of the three-node triangle is that it is a relatively inaccurate element, and in fact the
element isnot recommended for production analysis with ﬁniteelement software. However, the simplicity
oftheelementmakesitanidealvehicleforteachingthemultidimensionalﬁniteelementmethod,sowewill
start with it.
Two ﬁnite element meshes consisting of three-node triangular elements are shown in Figure 7.5(a). It
can be seen that nodes are placed at the corners of all elements. An arbitrary number of elements can be
joined to a node. There are no restrictions on the topology of a ﬁnite element mesh, though for reasonable
accuracy, none of the angles of any element should be very acute.
As the sides of a triangular element are rectilinear, curved edges of the body must be approximated.
Thus, in the mesh in Figure 7.5(a), the curved sides of the hole are approximated by straight segments,
whichintroducesanerrorinthegeometryoftheﬁniteelementmodel.Theﬁniteelementsolutionwillbethe
solutiontothegeometrywiththestraightedges,sosomeerrorarisesduetothisapproximationoftheshape.
However, in most cases, if a sufﬁcient number of elements are used, this error is quite small. In most cases,
simply placing the nodes on the boundary yields satisfactory results.
AtypicalelementfromthemeshshowninFigure7.5(a)isshowninFigure7.5(b).Thenodalcoordinates
ofelementearedenotedbyðxe
I,ye
IÞ,I ¼ 1 to 3;weuselocalnodenumbersforthenodesoftheelement.Itis
important that the nodes be numbered counterclockwise. The formulations that follow can also be
developed for clockwise numbering, but most ﬁnite element programs, including the ones in this book,
usecounterclockwisenumbering,anditisimportanttoadheretothisconvention,asotherwisesomecrucial
signs will be wrong. When mesh generators are used, this is no longer of importance, as a mesh generator
numbers the element nodes in the correct order automatically.
The trial solution in each triangular element is approximated by a linear function of the spatial
coordinates x and y:
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y;
ð7:2Þ
1
(a)
(b)
2
3
Figure 7.5
(a)Curvedboundaryapproximationusingthree-nodetriangularﬁniteelementsand(b)asinglethree-node
triangular ﬁnite element.
154
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

where ae
i are arbitrary parameters. The above can be written in the matrix form as shown below:
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y ¼ ½1
x
y
|ﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄ}
pðx; yÞ
ae
0
ae
1
ae
2
2
64
3
75
|ﬄﬄ{zﬄﬄ}
ae
¼ pðx; yÞae:
ð7:3Þ
Notice the fortuitous circumstance that the number of parameters that describe the ﬁeld complete linear
eðx; yÞinatriangularelementisequaltothenumberofnodes,sowe shouldbeable touniquelyexpressthe
parameterae
i intermsofthenodalvaluese
I.Iftherewerefewernodesthanconstantsorviceversa,aunique
expression in terms of the nodal values would not be possible.
Startingfrom(7.3),wewillnowconstructshapefunctionsfortheelementfollowingthesameprocedure
that we used in one dimension in Chapter 4. For this purpose, we ﬁrst express the nodal values
eðxe
1; ye
1Þ ¼ e
1, eðxe
2; ye
2Þ ¼ e
2 and eðxe
3; ye
3Þ ¼ e
3 in terms of the parameters ðae
0; ae
1; ae
2Þ and write this
in the matrix form:
e
1 ¼ ae
0 þ ae
1xe
1 þ ae
2ye
1
e
2 ¼ ae
0 þ ae
1xe
2 þ ae
2ye
2
e
3 ¼ ae
0 þ ae
1xe
3 þ ae
2ye
3
)
e
1
e
2
e
3
2
64
3
75
|ﬄﬄ{zﬄﬄ}
de
¼
1
xe
1
ye
1
1
xe
2
ye
2
1
xe
3
ye
3
2
64
3
75
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Me
ae
0
ae
1
ae
2
2
64
3
75
|ﬄﬄ{zﬄﬄ}
ae
:
ð7:4Þ
The above can be written as
de ¼ Meae:
ð7:5Þ
Taking the inverse of the above equation, we obtain an expression for the parameters in terms of the nodal
values:
ae ¼ ðMeÞ1de:
ð7:6Þ
Substituting (7.6) into (7.5) gives
eðx; yÞ ¼ pðx; yÞðMeÞ1de:
ð7:7Þ
As in the one-dimensional case, the matrix product preceding de gives the shape functions; to make this
clear, compare the above with the general form of a function expressed in terms of shape functions (recall
Equation (4.5)):
eðx; yÞ ¼ Neðx; yÞde:
ð7:8Þ
From Equations (7.7) and (7.8), it is clear that the shape functions are given by
Neðx; yÞ ¼ pðx; yÞðMeÞ1  ½Ne
1ðx; yÞ
Ne
2ðx; yÞ
Ne
3ðx; yÞ:
Todevelopaclosedformexpressionfortheshapefunctions,itisnecessarytoinvertthematrixMe.Thiscan
be done analytically or using MATLAB’s Symbolic Toolbox, which gives
ðMeÞ1 ¼ 1
2Ae
ye
2  ye
3
ye
3  ye
1
ye
1  ye
2
xe
3  xe
2
xe
1  xe
3
xe
2  xe
1
xe
2ye
3  xe
3ye
2
xe
3ye
1  xe
1ye
3
xe
1ye
2  xe
2ye
1
2
64
3
75;
THREE-NODE TRIANGULAR ELEMENT
155

whereAe istheareaoftheelemente;thedeterminantofthematrixMe hasbeenreplacedby2Ae andisgiven
by
2Ae ¼ detðMeÞ ¼ ðxe
2ye
3  xe
3ye
2Þ  ðxe
1ye
3  xe
3ye
1Þ þ ðxe
1ye
2  xe
2ye
1Þ:
ð7:9Þ
Evaluating the above expression, we obtain
Ne
1 ¼ 1
2Ae ðxe
2ye
3  xe
3ye
2 þ ðye
2  ye
3Þx þ ðxe
3  xe
2ÞyÞ;
Ne
2 ¼ 1
2Ae ðxe
3ye
1  xe
1ye
3 þ ðye
3  ye
1Þx þ ðxe
1  xe
3ÞyÞ;
Ne
3 ¼ 1
2Ae ðxe
1ye
2  xe
2ye
1 þ ðye
1  ye
2Þx þ ðxe
2  xe
1ÞyÞ:
ð7:10Þ
Note that the shape functions are linear in x and y and the coefﬁcients of all of the monomials depend on the
nodal coordinates.
The relationship between the area and the determinant of Me can be demonstrated as follows. Consider
the triangular element shown in Figure 7.6. The area is given by the product of the base and the height, so
Ae ¼ 1
2 bh ¼ 1
2 ab sin j:
ð7:11Þ
Recallthatthemagnitudeofthetriplescalarproductoftwovectorsisgivenby(thisformulacanbefoundin
any introduction to vectors, such as Hoffman and Kunze (1961) and Noble (1969))
~k  ð~a ~bÞ ¼ ab sin j:
ð7:12Þ
From Equations (7.11) and (7.12), it can be seen that
Ae ¼ 1
2
~k  ð~a ~bÞ ¼ 1
2
~k  det
~i
~j
~k
xe
2  xe
1
ye
2  ye
1
0
xe
3  xe
1
ye
3  ye
1
0


;
where the last equality follows from the standard formula for a scalar triple product and~a ¼ ðxe
2  xe
1Þ~iþ
ðye
2  ye
1Þ; ~b ¼ ðxe
3  xe
1Þ~i þ ðye
3  ye
1Þ~j. With a little algebra, (7.9) can be obtained from the above.
Notice that the above is based on the right-hand rule for deﬁning the angle j. It is for this reason that the
nodesmustbenumberedcounterclockwise.Youcaneasilycheckthatifthenodesarenumberedclockwise,
(7.9) gives a negative area (as two rows of the determinant have been interchanged, which changes
the sign).
a
b
90o
b
h
ϕ
a
1
3
2
Figure 7.6
A diagram for computation of the area of a triangle.
156
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

The shape functions are drawn for a typical triangular element in Figure 7.7. It can be seen that each
shape functionvanishes at all nodes except one and that node is the number on the shape function. In other
words, these shape functions have the Kronecker delta property:
Ne
I ðxe
J; ye
JÞ ¼ IJ:
ð7:13Þ
Recall that the one-dimensional shape functions also have this attribute (see Equation (4.7)) and are
therefore interpolants. Two-dimensional shape functions are also interpolants.
Furthermore,ascanbeseenfromFigure7.7,theshapefunctionsareplanarwhentheirvaluescorrespond
to the vertical axis in a 3 D plot. This is an obvious consequence of the linearity of the shape functions in x
and y. It also implies that the projections of the shape functions on straight lines, such as their edges, are
linear. This canbe seen from Figure 7.7; the dashed lines correspond to thevalues of the shapefunctions on
the edges.
7.2.1
Global Approximation and Continuity
InChapter 4,weshowedthattheglobalshapefunctionsNaregivenintermsoftheelementshapefunctions
Ne by
NT ¼
X
nel
e¼1
LeTNeT;
ð7:14Þ
where LeT is the gather operator. The trial solutions are approximated by a linear combination of C0 global
shape functions (7.14):
h ¼ Nd ¼
X
nnp
I¼1
NIdI;
ð7:15Þ
so the same C0 continuity of h is guaranteed.
For illustration, consider a two-element mesh shown in Figure 7.8. The number of global shape
functions is equal to the number of nodes in the mesh. The global shape functions corresponding to the
mesh in Figure 7.8 are shown in Figure 7.9.
TheC0 continuityoftheglobalshapefunctionsalonginterfaces between anytwoadjacent elementscan
be demonstrated as follows. For convenience, we deﬁne a common edge between elements 1 and 2 by a
parametric equation in terms of a parameter s so that s ¼ 0 at node 2 and s ¼ 1 at node 3:
x ¼ x2 þ ðx3  x2Þs;
y ¼ y2 þ ðy3  y2Þs:
ð7:16Þ
1 
1 
1
2
2
2
3
3
3
x
x
x
y
y
y
1
e
N
2
e
N
3
e
N
Figure 7.7
Three-node triangular element shape functions.
THREE-NODE TRIANGULAR ELEMENT
157

Astheshapefunctionsarelinearalonganyedge,thefunctionsofthetwogenericelements1and2alongthe
interface can then be written as
ð1ÞðsÞ ¼ bð1Þ
0
þ bð1Þ
1 s;
ð2ÞðsÞ ¼ bð2Þ
0
þ bð2Þ
1 s;
ð7:17Þ
where be
i are functions of ae
i deﬁned in (7.2) and the nodal coordinates
As ð1ÞðsÞ must equal 2 and 3 at s ¼ 0 and s ¼ 1, respectively, it follows that
2 ¼ bð1Þ
0 ;
3 ¼ bð1Þ
0
þ bð1Þ
1 :
Similarly, for element 2:
2 ¼ bð2Þ
0 ;
3 ¼ bð2Þ
0
þ bð2Þ
1 :
It follows immediately from the above that bð1Þ
0
¼ bð2Þ
0
¼ 2 and bð1Þ
1
¼ bð2Þ
1
¼ 3  2. Therefore, the two
element functions are equal along the interface and hence continuous accross the interface. This argument
(2)
(1)
1
2
3
4
1
2
3
1
2
3
x
y
(1)
(2)
Figure 7.8
Two-element mesh: local and global node numberings.
1 
2 
3 
4 
x 
y 
1 
2 
3 
4 
1 
2 
3 
4 
1 
2 
3 
4 
N1 
N2 
N3 
N4 
Figure 7.9
C0 global shape functions for a two-element mesh. Only global node numbering is shown. The local node
numbering is given in Figure 7.8.
158
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

holds for all other interfaces in the mesh, so the approximation is globally C0. Notice from Figure 7.9 that
the function has kinks along the interface, so the function is not C1.
Continuity of linear functions between elements with two shared nodes can be argued verbally as
follows.Alonganystraightside,theelementfunctionsarelinearfunctionsoftheinterfaceparameters.Asa
linear function along a line is determined by two constants, if the two functions are identical at two nodes,
they must be equal along the entire interface. In a mesh of 3-node triangular elements, adjacent elements
share two nodes on each interface, so global continuity is assured.
7.2.2
Higher Order Triangular Elements
The concepts underlying the construction of continuous ﬁnite element approximations based on poly-
nomials can be elucidated further if we consider a quadratic element. From the Pascal triangle, it follows
that a quadratic ﬁeld in an element is given in terms of six parameters ae
i by
eðx; yÞ ¼ ae
1 þ ae
2x þ ae
3y þ ae
4x2 þ ae
5xy þ ae
6y2:
ð7:18Þ
The projection of this function on any straight edge of an element in terms of a parameter s (with s ranging
from 0 to 1 as in Equation (7.16)) is
eðsÞ ¼ be
0 þ be
1s þ be
2s2:
ð7:19Þ
This can be shown by substituting (7.16) into (7.18). The element functions are thus quadratic functions of
the edge parameter s and are determined by three constants, be
i , i ¼ 1 to 3, in each element. Therefore, for
continuity, the functions of two adjacent elements must have equal values at three points, and three nodes
are needed along each edge.
A nodal conﬁguration that meets this requirement is shown in Figure 7.10(a). It can be seen that the
element has nodes in each corner and a node along the midside of each edge. Again, we have the fortuitous
circumstancethatthenumberofnodesrequiredforcontinuitycorrespondstothenumberofconstantsinthe
polynomial ﬁeld (7.18). Therefore, the constants can be uniquely expressed in terms of the element nodal
values e
I of the function eðx; yÞ, and following the same procedure as for the triangular three-node
element, the function can be expressed in terms of the element nodal values. Once this is completed, shape
functions can be extracted.
Wewillnotgothroughthesesteps,asthealgebraishorrendous.Furthermore,theshapefunctionscanbe
constructed directly as shown in Section 7.6.2; otherwise, ae
i would be evaluated numerically by the
software.
2
1
3
4
5
8
2
9
7
10
6
1
3
4
5
6
Figure 7.10
(a) Six-node triangular ﬁnite element and (b) 10-node triangular element.
THREE-NODE TRIANGULAR ELEMENT
159

It is of interest to observe that the nodal structure for the linear and quadratic elements can be gleaned
from Pascal’s triangle. If we consider the outside boundaries of Pascal’s triangle shown in Figure 7.3 as the
edgesofanelement,thenitcanbeseenthatforathree-nodeelement,onlytwonodesareneededalongeach
edge, whereas three nodes are needed for each edge of a quadratic element.
The approximation function for a cubic element for Pascal’s triangle (Figure 7.3) is
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y þ ae
3x2 þ ae
4xy þ ae
5y2 þ ae
6x3 þ ae
7x2y þ ae
8y2x þ ae
9y3:
Looking back at the Pascal triangle, it can be seen thatfor a cubic function, fournodes will be needed along
eachedge.Thiscanalsobeestablishedbytheargumentswehaveusedbefore:alongaline,theprojectionof
a cubic function of x and y on a straight edge is a cubic function of s and deﬁned by four constants.
Therefore, four nodes are needed along each edge to insure continuity of the global approximation. The
nodal arrangement for the cubic element is shown in Figure 7.10(b).
One difference between the quadratic and cubic elements is that the number of nodes on the edges is not
equal to the number of constants: the number of nodes required for continuity is less than the number of
constants. This imbalance is easily rectiﬁed by adding another node. It can be placed anywhere, but as
shown in Figure 7.10(b), it is usually placed at the centroid. Notice that Pascal’s triangle also indicates the
need for a center node.
Elementsofquarticorderandhighercanalsobedeveloped.However,elementsofsuchhighorderareseldom
developed from simple polynomial expansions. The drawback of these higher order elements is that the
resulting discrete system of equations are not well conditioned. Therefore, although such elements have
potentially higher rates of convergence, and hence better accuracy, they are not used. Instead, very high order
elements are based on different concepts. For example, high-order elements called spectral elements can be
developed from Legendre polynomials; they do not degrade the conditioning of the system equations as much.
7.2.3
Derivatives of Shape Functions for the Three-Node Triangular Element
The gradient of the shape functions matrix will be expressed in each element by a Be matrix as before.
The Be matrix is computed by differentiation of the expression for the approximation in terms of the
shape functions. For a triangular three-node element, we obtain the Be matrix by taking the gradient of
the approximation as given in Equation (7.10):
re ¼
@e
@x
@e
@y
2
664
3
775 ¼
@Ne
1
@x e
1 þ @Ne
2
@x e
2 þ @Ne
3
@x e
3
@Ne
1
@y e
1 þ @Ne
2
@y e
2 þ @Ne
3
@y e
3
2
664
3
775
¼
@Ne
1
@x
@Ne
2
@x
@Ne
3
@x
@Ne
1
@y
@Ne
2
@y
@Ne
3
@y
2
664
3
775
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Be
e
1
e
2
e
3
2
64
3
75
|ﬄﬄ{zﬄﬄ}
de
¼ Bede:
Referring to the shape functions as given in (7.10) and the above, we can see that the Be matrix is given by
Be ¼ 1
2Ae
ðye
2  ye
3Þ
ðye
3  ye
1Þ
ðye
1  ye
2Þ
ðxe
3  xe
2Þ
ðxe
1  xe
3Þ
ðxe
2  xe
1Þ


:
ð7:20Þ
Note that the Be matrix is constant in each element, i.e. it is independent of x and y, and only depends on the
coordinates of the nodes of the element. Thus, the gradient of any trial solution will be constant within any
160
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

three-node triangularelement; thiscanalso bedirectly concludedfrom thelinearity ofthe shapefunctions.
The three-node triangular element is therefore very similar in character and properties to the two-node
element in one dimension, with a linear approximation ﬁeld and a constant gradient ﬁeld.
7.3
FOUR-NODE RECTANGULAR ELEMENTS
As a prelude to the formulation of a four-node quadrilateral element, we ﬁrst consider a four-node
rectangular element as depicted in Figure 7.11. As for the triangle, the nodes are numbered counter-
clockwise; this convention will also apply to all subsequent elements, except when there are nodes along
the edges, which are numbered after the corner nodes in this book.
As the element has four nodes, it is necessary to start with a polynomial expansion that has four
parameters. Obviously, if we are to restrict ourselves to polynomial expansions,the additional term should
come from the third row of the Pascal triangle. A question then arises: which of the three terms in the third
rowshouldbeselected?Onlyoneadditionalmonomialisneeded,aswealreadyhavethreeparametersfrom
the linear ﬁeld, but we can select any of the three monomials in the third row of the Pascal triangle.
Thisquestionissettled bytheneedforlinearity oftheapproximationalongeachedge. Themonomialx2
will vary quadratically along the edges between nodes 1 and 2 and nodes 3 and 4, whereas the monomial y2
willvaryquadraticallyalongthe edgesbetween nodes 2and3andnodes 4and1.Themonomialxyislinear
along each edge, as either x or y is constant along each edge. Therefore, the monomial xy is consistent with
the nodalconﬁgurationshowninFigure7.11,inwhichthereareonlytwonodesperedge.Themonomialxy
is called bilinear. With the addition of the bilinear terms, the element approximation is
eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y þ ae
3xy:
ð7:21Þ
It is possible to express ðae
1; ae
2; ae
3; ae
4Þ in terms of nodal values ðe
1; e
2; e
3; e
4Þ as in Section 7.2. However, a
closed form symbolic inversion is very cumbersome. Of course, we can always invert Me numerically for
each element in a mesh, but it is useful to develop closed form expressions (in practice, this is not very
important, as 4  4 matrices can be inverted very quickly on today’s computers).
The shape functions Ne will be constructed by the tensor product method. This approach is based on
takingproductsoflowerdimensionalshapefunctionsandexploitingtheKroneckerdeltapropertyofshape
functions (7.13).
The two-dimensional shape functions for a rectangular element are obtained as a product of the one-
dimensional shape functions as illustrated in Figure 7.12. For example, the shape function Ne
2ðx; yÞ is
obtainedbytakingtheproductoftheone-dimensionalshapefunctionsNe
2ðxÞandNe
1ðyÞ.Itcanbeseenfrom
1
2
3
e
4
e
4
4
2a
2b
(x  ,y  )
e
3
e
3
(x  ,y  )
e
1
e
1
(x  ,y  )
e
2
e
2
(x  ,y  )
x
y
Figure 7.11
Four-node rectangular element.
FOUR-NODE RECTANGULAR ELEMENTS
161

Figure 7.12 that the product of these two shape functions will vanish at nodes 1 and 4 because Ne
2ðxÞ
vanishes there and at node 3 because Ne
1ðyÞvanishes there. At node 2, both shape functions have unit value,
so the product is also equal to 1. Thus, Ne
2ðx; yÞ has the Kronecker delta property for the four-nodeelement,
which can also be seen from Figure 7.12.
The tensor product method and the role of the Kronecker delta property can be made clearer if we
number the nodes with dyads as shown in Figure 7.12. The two-dimensional shape function can then be
written as a product of the one-dimensional shape functions by
Ne
½I;Jðx; yÞ ¼ Ne
I ðxÞNe
JðyÞ
for
I ¼ 1; 2
and
J ¼ 1; 2:
ð7:22Þ
It is straightforward to also show that the above two-dimensional shape function has the Kronecker delta
property:
Ne
½I;Jðxe
M; ye
LÞ ¼ Ne
I ðxMÞNe
JðyLÞ ¼ IMJL:
From the above, it can be seen that the tensor product of the two one-dimensional shape functions is unity
only when the dyadic node numbers are the same as the dyad of the shape function. The relation between
the dyadic node numbers (I and J) and the actual node numbers (K) is given in the ﬁrst three columns of
Table7.1Also,thetwo-dimensionalshapefunctionsobtainedbythetensorproductrulearesummarizedin
Table 7.1.
2
1
3
4
2a
2b
x
y
y3 = y4
y1 = y2
x1 = x4
x2 = x3
1( )
e
N
x
e
i
N
2 ( )
e
N
x
1( )
e
N
y
2( )
e
N
y
[1,1] 
[2,1] 
[1,2] 
[2,2] 
Figure 7.12
Construction of two-dimensional shape functions.
Table 7.1
Shape functions of the four-node rectangle (last column) as constructed from one-dimensional shape
functions (nodal values given in second to ﬁfth columns).
K
I
J
Ne
1ðxe
IÞ
Ne
2ðxe
IÞ
Ne
1ðye
IÞ
Ne
2ðye
IÞ
2D: Ne
Kðx; yÞ ¼ Ne
½I;Jðx; yÞ
1
1
1
1
0
1
0
Ne
1ðxÞNe
1ðyÞ
2
2
1
0
1
1
0
Ne
2ðxÞNe
1ðyÞ
3
2
2
0
1
0
1
Ne
2ðxÞNe
2ðyÞ
4
1
2
1
0
0
1
Ne
1ðxÞNe
2ðyÞ
162
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

From Table 7.1 and Equation (7.22), it can be seen that the two-dimensional shape functions are
Ne
1ðx; yÞ ¼ x  xe
2
xe
1  xe
2
y  ye
4
ye
1  ye
4
¼ 1
Ae ðx  xe
2Þðy  ye
4Þ;
Ne
2ðx; yÞ ¼ x  xe
1
xe
2  xe
1
y  ye
4
ye
1  ye
4
¼  1
Ae ðx  xe
1Þðy  ye
4Þ;
Ne
3ðx; yÞ ¼ x  xe
1
xe
2  xe
1
y  ye
1
ye
4  ye
1
¼ 1
Ae ðx  xe
1Þðy  ye
1Þ;
Ne
4ðx; yÞ ¼ x  xe
2
xe
1  xe
2
y  ye
1
ye
4  ye
1
¼  1
Ae ðx  xe
2Þðy  ye
1Þ;
ð7:23Þ
where Ae is the area of the element. One can also verify that these shape functions satisfy the Kronecker
delta property directly. The element shape functions are shown in Figure 7.13. As can be seen from the
ﬁgure, the shape functions are linear along each edge.
Although this element works for rectangles, it is not suitable for arbitrary quadrilaterals. This can be seen
by considering the quadrilateral shown in Figures 7.14a. Consider the edge connecting nodes 1 and 4 along
whichy ¼ x.Ifwesubstituteintotheequationfortheapproximation(7.21),weseethattheapproximationisa
quadraticfunctionalongthisedgey ¼ x.Theshapefunctionsarealsoquadraticalongthisedge,whichcanbe
veriﬁed by letting y ¼ x in any of the shape functions in (7.23). Therefore, two nodes no longer sufﬁce to
insure the compatibility, i.e. continuity, of this element with other elements. Thus, the shape functions
developed in this section are only suitable for rectangular elements; to treat a greater variety of four-node
quadrilateral shapes, a more powerful method must be developed for constructing the shape functions.
1
2
3
4
4
1
2
4
4
l
1
2
2
3
3
3
1
e
N
2
e
N
3
e
N
4
e
N
Figure 7.13
Graphical illustration of rectangular element shape functions.
x
y
1
2
3
4
x
y
1
2
3
4
(a)
(b)
Figure 7.14
Four-node quadrilateral elements.
FOUR-NODE RECTANGULAR ELEMENTS
163

7.4
FOUR-NODE QUADRILATERAL ELEMENT 1
As we have seen, although the bilinear shape functions in terms of x and y work for rectangles, these shape
functions are not linear along the edges of an arbitrary quadrilateral element, so two common nodes do not
sufﬁce to insure C0 continuity between elements. Resolving this quandary has led to one of the most
important developments in ﬁnite elements, the isoparametric element. The isoparametric concept enables
one to construct elements with curved sides, which are very powerful in modeling many complex
engineering structures. We will ﬁrst show how this concept can be used to construct continuous approx-
imations for four-node quadrilaterals. Then we will consider higher order elements, which can model
curved boundaries.
We will begin by recalling how we constructed Gauss quadrature formulas in Chapter 4. Recall that we
deﬁned a standard domain [1, 1] and then mapped that standard domain into the physical domain of the
ﬁnite element by
x ¼ xe
1Ne
1ðÞ þ xe
2Ne
2ðÞ ¼ xe
1
1  
2
þ xe
2
1 þ 
2
;
 2 ½1; 1:
ð7:24Þ
We will call the domain [1, 1] the parent element domain and  the parent coordinate; it is also called a
natural coordinate.
Now,ratherthanwritingtheapproximationforintermsofx,letuswriteitintermsoftheparentelement
coordinate . Starting with the shape function expression for the ﬁeld and substituting in (7.24), we obtain
 ¼ e
1
x  xe
2
xe
1  xe
2
þ e
2
x  xe
1
xe
2  xe
1
¼ e
1
xe
1ð1  Þ þ xe
2ð1 þ Þ  2xe
2
2ðxe
1  xe
2Þ
þ e
2
xe
1ð1  Þ þ xe
2ð1 þ Þ  2xe
1
2ðxe
2  xe
1Þ
¼ e
1
1  
2
þ e
2
1 þ 
2
:
ð7:25Þ
Thus,remarkably,the formofthe linear approximationðÞ isidentical tothe mapfromthe parentelement
to the physical element; in other words, the shape functions for the mapping given in (7.24) are identical to
the shape functions for the approximation in the last line of (7.25). This is the essential feature of an
isoparametric element: the physical coordinates are mapped by the same shape functions as those used for
the approximation.
Infact,itisnotnecessarytogothroughthealgebrain(7.24)and(7.25)todeveloptheexpressioninterms
of parent element coordinates. As the relationship between the physical and parent coordinates is linear,
any relation that is linear in the parent coordinates is also linear in the physical coordinates.
To developa quadrilateral element, we let the parent element be a biunit square as shown in Figure 7.15.
Now we map the physical element from the parent element by the four-node shape functions
xð; Þ ¼ N4Qð; Þxe;
yð; Þ ¼ N4Qð; Þye;
ð7:26Þ
where N4Qð; Þ are the four-node element shape functions in the parent coordinate system; xe and ye are
column matrices denoting x and y coordinates of element nodes:
xe ¼ ½xe
1
xe
2
xe
3
xe
4T;
ye ¼ ½ye
1
ye
2
ye
3
ye
4T:
1Recommended for Advanced Track.
164
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

In (7.26), we have changed the notation from Ne to N4Q to emphasize that, as we will see, the shape
functions are no longer functions of element coordinates, i.e. they are identical for every quadrilateral
element.Astheparentelementisabiunitsquare,itsshapefunctionsareidenticaltothoseoftherectangular
element, except theyare expressed in terms of natural coordinates. The shape functions can be obtained by
replacing ðx; yÞ by ð; Þ and the nodal coordinates in the physical domain ðxI; yJÞ by nodal coordinates in
the parent element ðI; JÞ in (7.23). The resulting shape functions are summarized below:
N4Q
I ð; Þ ¼ 1
4 ð1 þ IÞð1 þ IÞ;
ð7:27Þ
where ðI; IÞ are nodal coordinates in the parent element summarized in Table 7.2 (also see Figure 7.15,
left). The above can be obtained directly by the tensor product method.
The trial solution is approximated by the same shape functions:
eð; Þ ¼ N4Qð; Þd e:
ð7:28Þ
Therefore, the element is isoparametric.
The shape functions (7.27) contain a constant term, terms linear in  and  and the monomial , the
bilinear monomial; these shape functions are called bilinear shape functions. If we write the monomials in
terms of arbitrary parameters, we obtain the following:
eð; Þ ¼ ae
0 þ ae
1 þ ae
2 þ ae
3:
ð7:29Þ
The map (7.26) is also bilinear because of the bilinearity of the shape functions, (7.27). Thus, there are four
independent functions in the approximation, which is equal to the number of nodes in the element, and we
couldobtain the shape functionsby usingthe procedure of Section 7.2. However, the above procedurewith
the tensor product rule is more direct.
Table 7.2
Nodal coordinates in the parametric
element domain.
Node I
I
I
1
1
1
2
1
1
3
1
1
4
1
1
ξ
+1
–1
–1
+1
1
2
3
4
x
y
1
2
3
4
[1,1]
[2,1]
[1,2]
[2,2]
h
Figure 7.15
Mapping from the parent to the physical Cartesian coordinate system; brackets enclose the dyadic node
numbers for the tensor product approach to the construction of two-dimensional shape functions from one-dimensional
shape functions.
FOUR-NODE QUADRILATERAL ELEMENT
165

7.4.1
Continuity of Isoparametric Elements
One important question to be considered is: does relation (7.26) map the edges of the parent element
into straight lines in the physical plane? If it does not, then the element will not be compatible with
three-node triangles and may even have difﬁculties in treating meshes constituted entirely of
quadrilaterals. The answer turns out to be afﬁrmative. As the map (7.26) is bilinear along each of
the edges, either  or  is constant along each edge. Therefore, along any of the edges, the bilinear
term becomes linear. For example, along the edge between nodes 2 and 3,  ¼ 1, i.e. it is constant,
and the bilinear term is linear in . Therefore, the map is linear along the edge between nodes 2 and 3,
and the corresponding edge in the physical plane must be straight. Identical arguments can be
made for the other three edges.
Note that not every straight line in the parent plane maps into a straight line in the physical plane. If we
take the diagonal of the element in the parent plane, where  ¼ , the bilinear term then becomes quadratic
in . So when the physical element is not a rectangle, the parent element diagonal is a curved line in the
physical element. So in general, not all straight lines in the parent plane map into straight lines in the
physical plane, but the edges always do.
By the same arguments,it can be shown that the global shape functions are C0 continuous. For example,
along the edge connecting nodes 2 and 3 ( ¼ 1), it follows from (7.27) that
N4Q
2 ð ¼ 1; Þ ¼ 1
2 ð1  Þ:
Thus,theshapefunctionN4Q
2 alongtheedgeislinearin andisequalto1atnode2andzeroatnode3.Allof
the other shape functions can also be shown to be linear along this edge and all other edges; the linearity of
the approximation along the edges can also be inferred from the bilinear character of the expression for the
approximation (7.29).
Astheapproximationislinearalongeachedge,itcanbeexpressedintermsoftwoparametersalongeach
edge. As each edge has two nodes, the approximation is then uniquely determined along the edge.
Furthermore, if two adjacent elements share an edge, then the global shape function must be continuous
across that edge, and thus the approximation constructed by quadrilateral elements is C0 continuous. The
isoparametric four-node quadrilateral elements are also compatible with three-node triangular elements,
so these elements can be mixed in a single mesh.
7.4.2
Derivatives of Isoparametric Shape Functions
Wenextdevelopexpressionsforthegradientoftheshapefunctionsofthefour-nodeisoparametricelement.
The procedure is more involved than that for the three-node triangle because the shape functions are
expressed in terms of the parent element coordinates. In terms of the physical coordinates, thegradient of a
trial solution for the four-node quadrilateral element is
=e ¼ Bede;
ð7:30Þ
where
Be ¼
@N4Q
1
@x
@N4Q
2
@x
@N4Q
3
@x
@N4Q
4
@x
@N4Q
1
@y
@N4Q
2
@y
@N4Q
3
@y
@N4Q
4
@y
2
6664
3
7775:
ð7:31Þ
166
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

To obtain the derivatives of shape functions expressed in the parent element coordinates with respect to the
physical coordinates ðx; yÞ, we will use the chain rule
@N4Q
I
@
¼ @N4Q
I
@x
@x
@ þ @N4Q
I
@y
@y
@
@N4Q
I
@
¼ @N4Q
I
@x
@x
@ þ @N4Q
I
@y
@y
@
or
@N4Q
I
@
@N4Q
I
@
2
6664
3
7775 ¼
@x
@
@y
@
@x
@
@y
@
2
664
3
775
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
Je
@N4Q
I
@x
@N4Q
I
@y
2
6664
3
7775:
As indicated, the matrix relating the derivatives of the physical coordinates with respect to the element
coordinates isthe Jacobianmatrix,denotedby Je.Therequiredderivativescanbeobtainedbyinvertingthe
above right-hand side expression:
@N4Q
I
@x
@N4Q
I
@y
2
664
3
775 ¼ ðJeÞ1
@N4Q
I
@
@N4Q
I
@
2
6664
3
7775;
Je ¼
@x
@
@y
@
@x
@
@y
@
2
664
3
775:
ð7:32Þ
In concise matrix form, we write this as
=N4Q
I
¼ ðJeÞ1GN4Q
I ;
ð7:33Þ
where G is the gradient operator in the parent coordinate system deﬁned as
G ¼
@
@
@
@
2
664
3
775:
ð7:34Þ
Bysubstitutingthemap(7.26)intotheexpressionfortheJacobian(7.32),amoredetailedexpressioncanbe
developed for the Jacobian:
Je ¼
P
4
I¼1
@N4Q
I
@
xe
I
P
4
I¼1
@N4Q
I
@
ye
I
P
4
I¼1
@N4Q
I
@ xe
I
P
4
I¼1
@N4Q
I
@ ye
I
2
6664
3
7775 ¼
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
2
6664
3
7775
xe
1
ye
1
xe
2
ye
2
xe
3
ye
3
xe
4
ye
4
2
6664
3
7775:
ð7:35Þ
Equation (7.35) can be written in the matrix form as
Je ¼ GN4Q½xe
ye:
ð7:36Þ
Using (7.31), (7.35) and (7.36), the Be matrix can be written in the matrix form as
Be ¼ ðJeÞ1GN4Q:
ð7:37Þ
For the mapping (7.26) to be unique at each point, it is necessary that the determinant of the Jacobian be
nonzero. Furthermore, the determinant of the Jacobian must be positive, so we require that
jJej  detðJeÞ > 0
8e and ðx; yÞ:
ð7:38Þ
It can be shown that this requirement is fulﬁlled if all angles in all quadrilaterals are less than 180 (see
Problem 7.3).
FOUR-NODE QUADRILATERAL ELEMENT
167

NotethatalthoughtheshapefunctionsN4Q donotdependonelementcoordinates,theJacobianmatrixJe
and the derivativesof shape functionsBe depend on the element coordinates as can be seen from Equations
(7.37) and (7.36). Therefore, the superscripts appearing in the isoparametric shape functions denote the
element type, whereas in Je and Be they denote the element number.
7.5
HIGHER ORDER QUADRILATERAL ELEMENTS 2
The higher order isoparametric elements provide one of the most attractive features of ﬁnite elements, the
ability to model curved boundaries. As an example of a curved-sided isoparametric element, we describe
the nine-node quadratic element.
The nine-node isoparametric element is constructed by a tensor product of the one-dimensional
quadratic shape functions developed in Chapter 4. The parent and physical element domains are shown
in Figure 7.16. The node numbering convention is as follows. The corner nodes are numbered ﬁrst,
followed by the midside nodes, both in the counterclockwise direction; the ﬁrst midside node is deﬁned
between nodes 1 and 2, and the internal node is numbered last.
Togeneratetheshapefunctionsforthenine-nodequadrilateralbythetensorproductmethod,wetakethe
product of the three-node shape functions in terms of  with the three-node shape functions in terms of ,
yielding
N9Q
K ð; Þ ¼ N9Q
½I;Jð; Þ ¼ N3L
I ðÞN3L
J ðÞ;
ð7:39Þ
where N3L
I
are the one-dimensional quadratic shape functions of the three-node element and the standard
node number K can be expressed in terms of the elements of the dyad ½I; J given in Table 7.3.
We will not tabulate all of the shape functions, but as an example
N9Q
7
¼ N9Q
½2;3 ¼ N3L
2 ðÞN3L
3 ðÞ ¼ 1
2 ð1  2Þð þ 1Þ:
ð7:40Þ
These shape functions have the Kronecker delta property.
AsN3L
J ðÞare quadraticin andN3L
K ðÞare quadraticin,the shapefunctionsare biquadraticin and,
i.e. the highest order monomial is 22. In fact, if you go through the terms of all shape functions carefully,
youwillseethatthereareninedistinctmonomialsintermsofandamongalloftheshapefunctions,sothe
ﬁeld for this element can be written as
e ¼ ae
0 þ ae
1 þ ae
2 þ ae
32 þ ae
4 þ ae
52 þ ae
62 þ ae
72 þ ae
822:
ð7:41Þ
2Recommended for Advanced Track.
1
5
3
x
y
2
8
6
4
7
5
6
9
1
7
3
8
2
4
ξ
9
[1,1]
[2,1]
[3,1]
[1,2]
[2,2]
[3,2]
[1,3]
[3,3]
[2,3]
h
Figure 7.16
Nine-node isoparametric quadrilateral in parent and physical domains; brackets enclose the dyadic node
numbers for the tensor product approach to the construction of two-dimensional shape functions from one-dimensional
shape functions.
168
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

Thus, the number of independent monomials is equal to the number of nodes, and we could have used the
same approach as in Section 7.2 to solve ae
i in terms of e
J. However, the construction by the tensor product
method is much easier.
In an isoparametric element, the approximation and the map from the parent to the physical planes are
generated by the same shape functions. Thus, for this nine-node quadrilateral,
xð; Þ ¼ N9Qð; Þxe;
yð; Þ ¼ N9Qð; Þye;
ð7:42Þ
eð; Þ ¼ N9Qð; Þde
ð7:43Þ
Theimportantfeatureofthiselementisthattheedgesarecurved.Considerforexampletheedgejoining
nodes 1 and 4. The mapping from the parent plane to the physical plane (7.42) has the same monomials as
the function approximation in (7.41). Along this edge  is constant, as can be seen from Figure 7.16, so the
map will contain the monomials 1, , 2. Consequently, the coordinates ðx; yÞ are quadratic functions of 
along the edge and hence curved as shown in the ﬁgure.
The advantage of curved edges in ﬁnite element modeling is truly impressive in engineering applica-
tions. Far fewer elements can be used around holes and on other curved surfaces than with straight-sided
elements. Similarly, in the modeling of complex shapes such as lakes and bones, the geometry can be
replicated quite accurately with fewer elements when higher order isoparametric elements are used. The
discovery of the isoparametric concept was in fact one of the major advances in ﬁnite element methods:
comparedtoothermethods,suchastheﬁnitedifferencemethod,itprovidedawayofmodelingrealobjects
with much greater ﬁdelity.
The Be matrix for the nine-node element, and for that matter for any isoparametric element,
is obtained by the same procedure as given in Section 7.4.2. For the nine-node element the matrix is
2  9, so computational methods are essential for its evaluation and there is little to be gained by
writing it.
Other isoparametric elements can be constructed in the same manner. For example, Figure 7.17
illustrates the 12-node isoparametric quadrilateral in the parent and physical planes. The shape functions
forthe12-nodequadrilateralareobtainedbythetensorproductofthefour-nodeshape(cubic)functionsin
and the three-node shape functions (quadratic) in terms of , yielding
N12Q
K
ð; Þ ¼ N12Q
½I;Jð; Þ ¼ N4L
I ðÞN3L
J ðÞ;
ð7:44Þ
where N4L
K are the one-dimensional cubic shape functions of the four-node element. The relationships
between one-dimensional and two-dimensional shape functions are tabulated in Table 7.4. Figure 7.18
gives the graphical illustration of the shape function construction.
Table 7.3
Relationship between one-dimensional and two-
dimensional shape functions for the nine-node quadrilateral element.
K
I
J
1
1
1
2
3
1
3
3
3
4
1
3
5
2
1
6
3
2
7
2
3
8
1
2
9
2
2
HIGHER ORDER QUADRILATERAL ELEMENTS
169

1
5
3
4
x
y
6
2
9
8
10
12
11
7
5
10
7
1
11
4
2
9
6
8
12
3
ξ
h
Figure 7.17
Mapping of the physical domain into parent coordinates for the 12-node quadrilateral element.
1 
5 
10 
12 
6 
2 
11 7 
4 
9 
8 
3 
e 
I 
N 
4 
4 
L 
N 
4 
3 
L 
N 
4 
2 
L 
N 
4 
1 
L 
N 
3 
1 
L 
N 
1 
3 
2 
( ) 
( ) 
L 
N 
3 
3 
L 
N 
= − 
0 
= 
1 
= 
1 
= − 
1 
= − 3 
1 
= 3 
1 
= 
h
h
h
h
h
( ) 
h
( ) 
h
z
x
x
x
x
( ) 
x
( ) 
x
( ) 
x
x
Figure 7.18
Construction of shape functions for the 12-node quadrilateral element.
Table 7.4
Construction table for the 12-node quadrilateral element.
K
I
J
N4L
1 ðIÞ
N4L
2 ðIÞ
N4L
3 ðIÞ
N4L
4 ðIÞ
N3L
1 ðIÞ
N3L
2 ðIÞ
N3L
3 ðIÞ
N12Q
I
ð; Þ
1
1
1
1
0
0
0
1
0
0
N4L
1 ðÞN3L
1 ðÞ
2
4
1
0
0
0
1
1
0
0
N4L
4 ðÞN3L
1 ðÞ
3
4
3
0
0
0
1
0
0
1
N4L
4 ðÞN3L
3 ðÞ
4
1
3
1
0
0
0
0
0
1
N4L
1 ðÞN3L
3 ðÞ
5
2
1
0
1
0
0
1
0
0
N4L
2 ðÞN3L
1 ðÞ
6
3
1
0
0
1
0
1
0
0
N4L
3 ðÞN3L
1 ðÞ
7
4
2
0
0
0
1
0
1
0
N4L
4 ðÞN3L
2 ðÞ
8
3
3
0
0
1
0
0
0
1
N4L
3 ðÞN3L
3 ðÞ
9
2
3
0
1
0
0
0
0
1
N4L
2 ðÞN3L
3 ðÞ
10
1
2
1
0
0
0
0
1
0
N4L
1 ðÞN3L
2 ðÞ
11
3
2
0
0
1
0
0
1
0
N4L
3 ðÞN3L
2 ðÞ
12
2
2
0
1
0
0
0
1
0
N4L
2 ðÞN3L
2 ðÞ
170
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

Isoparametric ﬁnite elements in two (or three) dimensions constructed by a tensor product of one-
dimensional element shape functions are called Lagrange elements. Some Lagrange elements possess
internal nodes that do not contribute to the interelement compatibility. These nodes can be condensed out
(see Appendix A6) at the element level to reduce the size of the global matrices.
Commercial software usually employs the formulation of higher order element without internal nodes
as shown in Figure 7.19; these are called serendipity elements. The shape functions for the serendipity
family of elements cannot be constructed by a tensor product of one-dimensional shape functions as in the
Lagrange family. The serendipity element shape functions are obtained by a tensor product of carefully
selected functions to satisfy the Kronecker delta property of the shape functions. For instance, the shape
functionN8Q
1 fortheeight-nodeserendipityelementshouldbezeroatnodes2to8andshouldbe1atnode1.
The product of ð1  Þ, ð1  Þ and ð þ  þ 1Þ will vanish at all of these nodes except for node 1. At node
1, the above triple product is equal to 4, and therefore N8Q
1
is given by
N8Q
1
¼  1
4 ð1  Þð1  Þð1 þ  þ Þ:
Similarly, the shape function N12Q
1
for the 12-node (cubic) serendipity element is obtained by a product of
ð1  Þ, ð1  Þ, ð þ  þ 4=3Þ and ð þ  þ 2=3Þ, followed by normalization gives
N12Q
1
¼ 9
32 ð1  Þð1  Þð þ  þ 4=3Þð þ  þ 2=3Þ:
Theremainingshapefunctionsofthequadraticandcubicserendipityquadrilaterals canbeconstructedina
similar fashion. The developers of the serendipity element, Ergatoudis, Irons and Zienkiewicz (1968),
h
h
1
5
3
4
x
y
6
2
9
8
10
12
11
7
5
10
7
1
11
4
2
9
6
8
12
3
7
8
6
6
5
8
7
5
3
4
1
x
y
2
1
4
2
3
x
x
x + h + 4 / 3 = 0
x + h + 1 = 0
x + h + 2 / 3 = 0
Figure 7.19
(a) Eight-node and (b) 12-node serendipity elements. Node numbering and shape function construction.
HIGHER ORDER QUADRILATERAL ELEMENTS
171

derived the above shape functions by inspection, and therefore named them ‘serendipity’ after the princes
of Serendip who were noted for their chance discoveries.
7.6
TRIANGULAR COORDINATES 3
For higher order curved-sided triangular elements, the development of the shape functions by the direct
approach discussed in Section 7.2 is algebraically complex. Furthermore, the integration required to
integratetheweakformcanbeverycumbersome.Considerablesimpliﬁcationoftheshapefunctionscanbe
obtained via natural (or parent) coordinates. Natural coordinates (or parent element coordinates) that are
speciﬁctotriangularelementshaveseveralothernames:(i)triangularcoordinates,(ii)areacoordinatesand
(iii) barycentric coordinates. We will use the name triangular coordinates. We ﬁrst develop the linear
triangular element in Section 7.6.1, followed by the quadratic triangular element in Section 7.6.2 and the
cubic triangular element in Section 7.6.3.
7.6.1
Linear Triangular Element
Triangular coordinates are deﬁned as shown in Figure 7.20. For any point P, the triangular coordinates of a
point are given by
I ¼ AI
A ;
ð7:45Þ
whereAI istheareaofthetrianglegeneratedbyconnectingthetwonodesotherthannodeIwithpointP,see
Figure 7.20(a). For example, A3 is the area of the triangle connecting P and nodes 1 and 2.
ItcaneasilybeseenthatasthepointPmovestooneofthenodes,thecorrespondingtriangularcoordinate
becomes unity and the other triangular coordinates become zero; forexample (see Figure 7.20(b)),when P
coincides with node 2, 2 ¼ 1 and 1 ¼ 3 ¼ 0. Thus, in general,
Iðxe
J; ye
JÞ ¼ IJ;
ð7:46Þ
so the triangular coordinates have the Kronecker delta property. This suggests that these particular
coordinates are interpolants.
From the deﬁnition of the triangular coordinates in (7.45), it follows that the relationship between ðx; yÞ
and the triangular coordinates is linear. This, combined with (7.46), enables us to write the relationship
between the triangular coordinates and the physical coordinates as
x ¼
X
3
I¼1
xe
II;
y ¼
X
3
I¼1
ye
II:
ð7:47Þ
As we will see shortly, the triangular coordinates are linear in x and y and satisfy the Kronecker delta
property (7.46), so they must be identical to the linear shape functions for a triangle (there is only a single
uniquesetoflinearfunctionsthatsatisﬁestheseproperties).Therefore,wecanwritealinearapproximation
as
e ¼
X
3
I¼1
e
II ¼e
11 þ e
22 þ e
33:
ð7:48Þ
3Recommended for Advanced Track.
172
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

In other words, the linear shape functions given in (7.10) are identical to the triangular coordinates.
Equation (7.48) provides a much more convenient framework for studying triangular elements than the
framework described in Section 7.2.
Equation (7.47) can beviewed as a map between a parent element and the element in the physical plane,
just as in isoparametric elements. If we view the element in the 1, 2 plane and note that by (7.46)
1ðx1; y1Þ ¼ 1, 2ðx1; y1Þ ¼ 0 and 2ðx2; y2Þ ¼ 1, 1ðx2; y2Þ ¼ 0 and 1ðx3; y3Þ ¼ 2ðx3; y3Þ ¼ 0, then
connecting the nodes by straight lines (which is appropriate because of the linearity of the relationship
between ðx; yÞ and ð1; 2Þ), it can be seen that the element in the parent plane is a triangle as shown in
Figure 7.21. Equation (7.47) is then the map from this parent element to the physical element.
In order to complete the development of triangular coordinates, it is necessary to express the triangular
coordinates in terms of (x, y). Equation (7.47) provides only two equations for I, which is insufﬁcient.
To obtain a solvable system of linear algebraic equations, we note from the deﬁnition of I by (7.46) and
Figure 7.21 that
1 þ 2 þ 3 ¼ 1:
ð7:49Þ
Combining (7.47) and (7.49) in the matrix form gives
1
x
y
2
4
3
5 ¼
1
1
1
xe
1
xe
2
xe
3
ye
1
ye
2
ye
3
2
4
3
5
1
2
3
2
4
3
5:
ð7:50Þ
The square matrix in (7.50) corresponds to ðMeÞT in (7.4), so the inverse is given by ðMeÞT and we have
1
2
3
2
4
3
5 ¼ 1
2Ae
xe
1ye
3  xe
3ye
2
ye
23
xe
32
xe
3ye
1  xe
1ye
3
ye
31
xe
13
xe
1ye
2  xe
2ye
1
ye
12
xe
21
2
64
3
75
1
x
y
2
4
3
5;
ð7:51Þ
(a)
(b)
P A3
A1
A2
1
2
3
1
2
3
2
0
=
2
1/2
=
2
1
=
ξ 
ξ 
ξ 
Figure 7.20
Deﬁnition of triangular coordinates of a point in the element in terms of the areas generated by that point.
x1
x1 + x2 = 1
2 (x2 = 1)
3 (x3 = 1)
1 (x1 = 1)
x2
Figure 7.21
Parent element domain in triangular coordinates.
TRIANGULAR COORDINATES
173

wherewe have used the notation xe
IJ ¼ xe
I  xe
J, ye
IJ ¼ ye
I  ye
J. From (7.51) it can be seen that the triangular
coordinates are linear in (x,y). It is easy to obtain from (7.51) that
@1
@x ¼ ye
23
2Ae
@2
@x ¼ ye
31
2Ae
@3
@x ¼ ye
12
2Ae ;
@1
@y ¼ xe
32
2Ae
@2
@y ¼ xe
13
2Ae
@3
@y ¼ x2
21
2Ae :
ð7:52Þ
7.6.2
Isoparametric Triangular Elements
In the sameway as curved-sided elements were developed for quadrilaterals, we can developcurved-sided
triangularelements by the isoparametric concept.Beforewe do that, wewill show howthe shapefunctions
for the quadratic and cubic triangular elements can be constructed without the solution of any equations.
Weﬁrstconsiderthe six-nodetriangleshowninFigure7.22.RecallfromSection7.2.2thatsixnodesare
needed for quadratic elements, with nodes along the midpoints of each side. We number the corner nodes
ﬁrst in counterclockwise order,and thennumber the midside nodes as showninFigure7.22.The triangular
coordinatesofthe nodesandthe shapefunctionsaregiven inTable7.5. Notethatthe triangularcoordinates
of a midside node are always a permutation of (0.5, 0.5, 0.0), as along a side, one of the triangular
coordinates always vanishes and the midpoint node splits the element into two; therefore, the other two
triangular coordinates are each 1=2 as shown in Figure 7.20.
Construction of the shape functions for the six-node triangle is similar to the construction of Lagrange
interpolants: when constructing the shape function N6T
I , we seek a function that vanishes at all other nodes
and equals unity at node I. We ﬁrst consider the construction of N6T
2 . The construction of N6T
2 begins with
choosingafunctionthatdoesnotvanishatnode2,butvanishesattheothercornernodes;thatfunctionis2.
Next we ﬁnd another function so that its product with 2 vanishes at the remaining nodes. That function is
(22  1), as it vanishes at nodes 4 and 6, and the product, 2ð22  1Þ, vanishes at all nodes but node 2. It
remainstonormalizetheshapefunction,i.e.toinsurethatN6T
2 ðx2; y2Þ ¼ 1;itturnsoutthatthisconditionis
already met so nothing further needs to be done, and we have the result in Table 7.3. The corner node shape
functions at the other nodes are constructed similarly.
The midpoint node shape functions are constructed by noting which triangular coordinates vanish at the
various nodes. The function 12 vanishes at all nodes but node 4, so after normalizing we see that
N6T
4
¼ 412. The other midpoint node shape functions are constructed similarly. Note that the shape
functions are quadratic in I, which in turn are linear in ðx; yÞ, so the shape functions are quadratic in ðx; yÞ.
1
2
3
4
5
6
1
2
3
4
5
6
x3 = 1
x3 = 1/2
x3 = 0
x1 = 0
x1 = 1
x2 = 0
x2 = 0
x2 = 1/2
x1 = 1/2
Figure 7.22
Six-nodetriangularelement:(a)nodenumberingconventionand(b)linesofconstantvaluesoftriangular
coordinates.
174
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

By construction, the shape functions satisfy the Kronecker delta property:
N6T
I ðxJ; yJÞ ¼ IJ:
The approximation is then given by
eðx; yÞ ¼ N6TðIÞde:
When Equation (7.47) is used to map from the parent plane to the physical plane, the element depicted in
Figure 7.20 is a straight-sided six-node element. However, if we use the map
x ¼ N6TðIÞxe;
y ¼ N6TðIÞye;
then the sides of the physical element are curved.This is an example of a triangular isoparametric element.
The elements are compatible with the nine-node isoparametric quadrilateral; this is investigated in
Problem 7.1.
When the map of the geometry uses shape functions of lower order than the shape functions in the
approximation of the function, then the element is called a subparametric element. For example, if the
quadratic six-nodeshapefunctionsare combinedwiththe linear map(7.47),thenthe sides arestraight,and
itisasubparametricelement.Thissubparametricelementcanexactlyreproduceﬁeldsthatare quadraticin
x and y, whereas the isoparametric element can reproduce only linear ﬁelds exactly. This tends to decrease
the accuracyof the element. In fact, the more distorted the element, the less its accuracy. Therefore, curved
edges should only be used where necessary, such as on the boundaries of the problem domain.
7.6.3
Cubic Element
The same procedure can be used to compute the shape functions for a cubic element. The nodal
arrangement for the cubic element was already discussed in Section 7.2.2 and can be seen from Pascal’s
triangle. As in the six-node triangle, the corner nodes are numbered ﬁrst and the other nodes after that. The
triangular coordinates of the nodes and the shape functions are given in Table 7.6. The element is shown in
Figure7.23.Ascanbeseen,asdictatedbythePascaltriangle,eachedgehasfournodes,andacenternodeis
included. The nodes on the edges are now placed by subdividing the edge into three equal segments. The
triangular coordinates can easily be determined by noting which one vanishes and examining the areas of
the subelements that are generated by connecting the edge node to the opposite node; this is illustrated in
Figure 7.23.
Table 7.5
Table of shape functions for the six-node triangular element.
I
1ðxe
I; ye
IÞ
2ðxe
I; ye
IÞ
3ðxe
I; ye
IÞ
N6T
I ð1; 2; 3Þ
1
1
0
0
1ð21  1Þ
2
0
1
0
2ð22  1Þ
3
0
0
1
3ð23  1Þ
4
1=2
1=2
0
412
5
0
1=2
1=2
423
6
1=2
0
1=2
413
TRIANGULAR COORDINATES
175

The shape functions are constructed by the same arguments as for the six-node triangle. The same
arguments on the reproducing capability that were made for the six-node triangle apply to the 10-node
triangle.
The center node ofthe cubic element isusually notretained in the nodalstructure of the mesh. Instead, it
is eliminated by a procedure called static condensation. This is described in Appendix A6.
7.6.4
Triangular Elements by Collapsing Quadrilateral Elements
An alternative approach of generating triangular elements is by assigning the same coordinates to two
neighboring nodes in a quadrilateral as shown in Figure 7.24; this is equivalent to assigning the same node
number for two of the nodes. This technique is used by some commercial software, such as ANSYS.
It can be shown (see Problem 7.11) that superimposing two nodes of a quadrilateral, which corresponds
to collapsing one of the edges, will result in a constant strain triangle. It is interesting to note that the
Jacobian matrix of the collapsed quadrilateral is singular at the point where the nodes have been collapsed.
The Be matrix of the degenerated quadrilateral is identical to that of the three-node triangle, except at the
pointwherethetwonodescoincide,whereBe isnotdeﬁned(zerodividedbyzero).Apracticalconsequence
is that solution gradients should not be computed at element nodes.
Table 7.6
Table of shape functions for the ten-node triangular element.
I
1ðxe
I; ye
IÞ
2ðxe
I; ye
IÞ
3ðxe
I; ye
IÞ
N10T
I
ð1; 2; 3Þ
1
1
0
0
ð9=2Þ1ð1  1=3Þð1  2=3Þ
2
0
1
0
ð9=2Þ2ð2  1=3Þð2  2=3Þ
3
0
0
1
ð9=2Þ3ð3  1=3Þð3  2=3Þ
4
2=3
1=3
0
ð27=2Þ12ð1  1=3Þ
5
1=3
2=3
0
ð27=2Þ12ð2  1=3Þ
6
0
2=3
1=3
ð27=2Þ23ð2  1=3Þ
7
0
1=3
2=3
ð27=2Þ23ð3  1=3Þ
8
1=3
0
2=3
ð27=2Þ13ð3  1=3Þ
9
2=3
0
1=3
ð27=2Þ13ð1  1=3Þ
10
1=3
1=3
1=3
27123
1
1
2
3
4
(a)
(b)
7
9
5
6
8
10
1
2
3
4
7
9
5
6
8
10
x3 = 1
x3 = 2/3
x3 = 1/3
x3 = 0
x1 = 0
x1 = 1
x1 = 1/3
x1 = 2/3
Figure 7.23
Ten-node triangularelement:(a) nodenumberingconventionand (b)linesof constantvalue oftriangular
coordinates.
176
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

7.7
COMPLETENESS OF ISOPARAMETRIC ELEMENTS 4
Isoparametric elements are linear complete, which means that they can represent a linear ﬁeld exactly,
regardless of whether the sides are curved or straight. Generally, when the sides are curved, higher
order monomials cannot be represented exactly. However, mathematical proofs are available in the
literature (see, for instance, Ciarlet and Raviart (1973)) that show that if the nodes are not far from
the midpoints of the straight sides, the convergence of isoparametric elements corresponds to the order of
the complete polynomial in the natural coordinates. Herewe just show that the isoparametric elements can
represent a linear ﬁeld exactly, because this is crucial to an important test in ﬁnite elements, the patch test
described in Chapter 8.
Inordertodemonstratelinearcompletenessinthesimplestpossiblesettingthatstillcontainstheessenceof
how one goes about showing completeness, we ﬁrst consider the three-node, one-dimensional quadratic
element.Whenthesecondnode isnotatthe midpointoftheelement, the isoparametric elementisdeﬁnedby
ðaÞ
xðÞ ¼
X
3
I¼1
xe
IN3L
I ðÞ ¼ xe
1
1
2ð  1Þ þ xe
2ð1  2Þ þ xe
3
1
2ð þ 1Þ;
ðbÞ
eðÞ ¼
X
3
I¼1
e
IN3L
I ðÞ ¼ e
1
1
2ð  1Þ þ e
2ð1  2Þ þ e
3
1
2ð þ 1Þ:
ð7:53Þ
Showing that (7.53b) contains the linear terms directly would be difﬁcult, because we would need to solve
the quadratic equation (7.53a) to obtain an expression for  in terms of x.
The standard approach to showing linear completeness avoids this difﬁculty. Bear in mind that we want
to show that if the nodal values e
I arise from a linear ﬁeld, then eðxÞ is exactly that linear ﬁeld. In other
words, we want to show that if the nodal values are set by
e
I ¼ a0 þ a1xe
I;
ð7:54Þ
then
eðxÞ ¼ a0 þ a1x:
We then proceed as follows. Substituting (7.54) for e
I in (7.53b) gives
eðxÞ ¼
X
3
I¼1
ða0 þ a1xe
IÞN3L
I ðÞ ¼ a0
X
3
I¼1
N3L
I ðÞ þ a1
X
3
I¼1
xe
IN3L
I ðÞ:
ð7:55Þ
2
3
1
4
3
4
1, 2
Figure 7.24
Degenerate form of four-node quadrilateral element obtained by collapsing nodes 1 and 2.
4Recommended for Advanced Track.
COMPLETENESS OF ISOPARAMETRIC ELEMENTS
177

It is easy to verify that for these shape functions, P3
I¼1 N3L
I ðÞ ¼ 1. This can also be veriﬁed for any other
shape functions and is known as the partition of unity property.
Using this fact and substituting (7.53a) in the second term in (7.55) gives
ðxÞ ¼ a0 þ a1x:
Thus, the function ðxÞ is exactly the linear ﬁeld from which the nodal values e
I were obtained, (7.54).
The development for two-dimensional elements is similar. We now prove it for the general case of two-
dimensional isoparametric elements. Recall that the map between the parent element plane and the
physical plane is given by
x ¼
X
nen
I¼1
xe
INe
I ;
y ¼
X
nen
I¼1
ye
INe
I :
ð7:56Þ
The function is given by
e ¼
X
nen
I¼1
e
INe
I :
ð7:57Þ
Consider a linear function when the nodal values are set by a linear ﬁeld:
e ¼ a0 þ a1x þ a2y:
ð7:58Þ
The nodal values are
e
I ¼ a0 þ a1xe
I þ a2ye
I:
ð7:59Þ
We ask the question: if we set the nodal values by (7.59), is the ﬁnite element ﬁeld exactly (7.58)?
Substituting (7.59) into (7.57) yields
eðxÞ ¼
X
nen
I¼1
ða0 þ a1xe
I þ a2ye
IÞNe
I
¼ a0
X
nen
I¼1
Ne
I þ a1
X
nen
I¼1
xe
INe
I þ a2
X
nen
I¼1
ye
INe
I ;
ð7:60Þ
where the second equation is obtained by taking ai outside the sums (as it is the same for all terms in the
sum). Then using the partition of unity property and (7.56) gives
e ¼ a0 þ a1x þ a2y:
So the isoparametric element exactly represents the linear ﬁeld. If this fact does not strike you as
extraordinary, try to show that any of the quadratic terms in the nine-node element (or three-node element)
are represented exactly. It cannot be done, as it is not true.
7.8
GAUSS QUADRATURE IN TWO DIMENSIONS 5
As seen in Chapter 5 and encountered again in later chapters, integration of various forms of the shape
functions over the domain of an element is required in formulating element matrices and vectors. We now
5Recommended for Advanced Track.
178
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

show how the one-dimensional Gauss quadrature formulas developed in Section 4.6 are extended to two
dimensions.
7.8.1
Integration Over Quadrilateral Elements
Consider a typical integral deﬁned over the domain of a quadrilateral element:
I ¼
Z
e
fð; Þ d:
ð7:61Þ
To evaluate the integral, we must expressthe inﬁnitesimal area d interms ofd and d. Figure7.25 shows
the inﬁnitesimal area d d in the parent domain and its image in the physical domain.
The vector~r represents an arbitrary point P in the physical domain as shown in Figure 7.25(b). Point P
corresponds to the point P0 in the parent coordinate system. Its coordinates are
~r ¼ x~i þ y~j:
Points Q0 and T0 are selected to be at the distance of d and d from P0 in the natural coordinate system,
respectively. The corresponding points in the physical domain are Q and T. The vectors~a and~b pointing
from P to T and P to Q, respectively (Figure 7.25), can be expressed by the chain rule as
~a ¼ @~r
@ d ¼
@x
@
~i þ @y
@
~j


d;
~b ¼ @~r
@ d ¼
@x
@
~i þ @y
@
~j


d:
Theinﬁnitesimalareaofthephysicaldomaindenclosedbythetwovectors,~band~a,canbedeterminedby
the scalar triple product:
d ¼ ~k  ð~a ~bÞ ¼ ~k 
~i
~j
~k
@x
@ d
@y
@ d
0
@x
@ d
@y
@ d
0
2
666664
3
777775
¼ det
@x
@
@y
@
@x
@
@y
@
2
664
3
775
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
jJej
d d ¼ jJej d d;
ð7:62Þ
where jJej is the determinant of the Jacobian matrix Je.
dh
dh
r
x
y
∂r
∂h
∂x
∂r
P
(a)
(b)
P'
T'
Q
Q'
T
h
η
dx 
dx 
x 
x
Figure 7.25
Mapping of the inﬁnitesimal areas from (a) the parent domain to (b) the physical domain.
GAUSS QUADRATURE IN TWO DIMENSIONS
179

Thus, the integral in Equation (7.61) can be expressed as
I ¼
Z1
¼1
Z1
¼1
jJeð; Þj fð; Þ d d:
To evaluate this integral, we ﬁrst carry out Gauss integration over , which yields
I ¼
Z1
¼1
Z1
¼1
Jeð; Þ
j
jf ; 
ð
Þd
0
B
@
1
C
Ad ¼
Z1
r¼1
X
ngp
i¼1
Wi Jeði; Þ
j
jf i; 
ð
Þd
Next, integrating over  yields
I ¼
Z1
¼1
X
ngp
i¼1
Wif i; 
ð
Þ Jeði; Þ
j
j d ¼
X
ngp
i¼1
X
ngp
j¼1
WiWj Jeði; jÞ

f i; j


Thus, the integralis evaluated numerically by a double summation, using the sameweights and quadrature
points as in one-dimensional quadrature. This involves two nested do loops.
7.8.2
Integration Over Triangular Elements6
Forgeneralcurved-sidedtriangularelements,thenumericalintegrationproceduresaresomewhatdifferent
than those for quadrilaterals. The integration formula is given by
I ¼
Z
e
f d ¼
X
ngp
i¼1
WijJeðiÞj fðiÞ;
ð7:63Þ
where the Jacobian is
Je ¼
@x
@1
@y
@1
@x
@2
@y
@2
2
664
3
775 ¼
P
nen
I
@NT
I
@1
xe
I
P
nen
I
@NT
I
@1
ye
I
P
nen
I
@NT
I
@2
xe
I
P
nen
I
@NT
I
@2
ye
I
2
6664
3
7775:
ð7:64Þ
Recall that the shape functions are expressed in terms of ð1; 2; 3Þ, where 3 ¼ 1  1  2. The weights
and quadrature points for triangular elements are summarized in Table 7.7.
For straight-sided three-node triangles, the Jacobian matrix is constant and is given by
Je ¼
xe
1  xe
3
ye
1  ye
3
xe
2  xe
3
ye
2  ye
3


:
TheresultingconstantJacobianisequaltothetwicetheareaofthetrianglegiveninEquation(7.9)andisthe
ratio between the areas of a triangle in the physical and parent domains.
6Recommended for Advanced Track.
180
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

Monomials of any order can be integrated on straight-sided triangles in the closed form. The following
formula has been developed for these purposes (Cowper, 1973):
Z
e
i
1j
2k
3 d ¼
i!j!k!
ði þ j þ k þ 2Þ! 2Ae:
ð7:65Þ
This formula can be used to avoid numerical integration.
7.9
THREE-DIMENSIONAL ELEMENTS 7
The two basic categories of three-dimensional elements are hexahedral and tetrahedral elements. The
former are generalizations of quadrilateral elements, whereas the latter are generalizations of triangular
elements.Wedge-shapedelementscanbeconstructedbycollapsingthenodesofahexahedralelement,just
as a triangle can be constructed from a quadrilateral. In each category, we have the basic lower order
element, such as the eight-node (or trilinear) hexahedral and the four-node tetrahedral element, as well as
various higher order curved-face or ﬂat-face elements. We will give a brief summary of the hexahedral
element followed by tetrahedral elements.
7.9.1
Hexahedral Elements
The parent element domain of the eight-node hexahedral (or brick) element is a biunit cube with element
coordinates ,  and . The map to the physical domain is
xð; ; Þ ¼ N8Hð; ; Þxe;
yð; ; Þ ¼ N8Hð; ; Þye;
zð; ; Þ ¼ N8Hð; ; Þze;
ð7:66Þ
where N8Hð; ; Þ are the eight-node hexahedral shape functions deﬁned in the parent coordinate system
shown in Figure 7.26.
Table 7.7
Gauss quadrature weights and points for triangular domains.
Integration
Degree of
order
precision
1
2
Weights
Three-point
2
0.1 666 666 666
0.1 666 666 666
0.1 666 666 666
0.6 666 666 666
0.1 666 666 666
0.1 666 666 666
0.1 666 666 666
0.6 666 666 666
0.1 666 666 666
0.1 012 865 073
0.1 012 865 073
0.0 629 695 903
0.7 974 269 853
0.1 012 865 073
0.0 629 695 903
0.1 012 865 073
0.7 974 269 853
0.0 629 695 903
Seven-point
5
0.4 701 420 641
0.0 597 158 717
0.0 661 970 764
0.4 701 420 641
0.4 701 420 641
0.0 661 970 764
0.0 597 158 717
0.4 701 420 641
0.0 661 970 764
0.3 333 333 333
0.3 333 333 333
0.1125
7Recommended for Advanced Track.
THREE-DIMENSIONAL ELEMENTS
181

The eight-node hexahedral shape functions can be constructed by a tensor product of one-dimensional
linear shape functions developed in Chapter 4:
N8H
L ð; ; Þ ¼ N2L
I ðÞN2L
J ðÞN2L
K ðÞ:
ð7:67Þ
The relationship between the node numbers of one-dimensional and hexahedral elements is given in
Table 7.8.
The approximation e is constructed by invoking the isoparametric concept, i.e. using the same shape
functions as (7.66):
eð; Þ ¼ N8Hð; ; Þde:
ð7:68Þ
Thecontinuityoftheinterpolationfunctionscanbeseenbyobservingthebehavioralongoneofthefacesof
the element, say  ¼ 1, where N2L
2 ðÞj¼1 ¼ 1. From (7.67), it follows that eð; ; 1Þ is a bilinear function,
which can be uniquely deﬁned by four nodal values on the face, so the C0 continuity is assured.
Higher order hexahedral elements can be derived by a tensor product of higher order one-dimensional
linear shape functions. Figure 7.27 depicts a 27-node triquadratic hexahedral element. One can also
derive a serendipity higher order hexahedral element with all the nodes positioned on the six bounding
surfaces.
1
2
3
4
5
6
8
7
1
2
3
4
5
6
7
8
x
h
ζ
Figure 7.26
Mappingoftheeight-nodehexahedralfromtheparenttothephysicalCartesiancoordinatesystem.Nodes
at  ¼ 1 are ﬁrst numbered counterclockwise, followed by nodes at  ¼ 1.
Table 7.8
Relationship between one-dimensional and
three-dimensional shape function numbers for the eight-
node hexahedron.
L
I
J
K
1
1
1
1
2
2
1
1
3
2
2
1
4
1
2
1
5
1
1
2
6
2
1
2
7
2
2
2
8
1
2
2
182
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

The Jacobian matrix Je in three dimensions is
Je ¼
@x
@
@y
@
@z
@
@x
@
@y
@
@z
@
@x
@
@y
@
@z
@
2
6666664
3
7777775
:
ð7:69Þ
The integral over a hexahedral element domain can be expressed as
I ¼
Z
e
fð; ; Þ d ¼
Z1
¼1
Z1
¼1
Z1
¼1
jJeð; ; Þj fð; ; Þ d d d
¼
X
ngp
i¼1
X
ngp
j¼1
X
ngp
k¼1
WiWjWkjJeði; j; kÞj fði; j; kÞ:
7.9.2
Tetrahedral Elements
The tetrahedral parent and physical domains are illustrated in Figure 7.28. The tetrahedral coordinates of a
point P are denoted by 1, 2, 3 and 4. The tetrahedral coordinates deﬁne the volume coordinates of the
tetrahedral as follows. Any point P in the physical element domain shown in Figure 7.28(b) subdivides the
original tetrahedral element volume e into four tetrahedra. The volume coordinates are then deﬁned as
follows:
1 ¼ volume of P234
e
;
2 ¼ volume of P134
e
;
3 ¼ volume of P124
e
;
4 ¼ volume of P123
e
:
ð7:70Þ
Note that with the above deﬁnition, 1 þ 2 þ 3 þ 4 ¼ 1.
x =  h = z = 0
(a)
(b)
Figure 7.27
(a) 27-node curved-face hexahedral element (surface nodes are shown on translated surfaces for clarity
for 3 surfaces) and (b) 20-node serendipity hexahedral element.
THREE-DIMENSIONAL ELEMENTS
183

Each coordinate is zero on one surface and is equal to 1 at the node opposite to that surface.
The shape functions of the four-node tetrahedral element are given by
N4Tet
1
¼ 1;
N4Tet
2
¼ 2;
N4Tet
3
¼ 3;
N4Tet
4
¼ 4 ¼ 1  1  2  3:
ð7:71Þ
The 10-node tetrahedral element is shown in Figure 7.29. The shape functions are obtained in a similar
fashion to that of the six-node triangular elements described in Section 7.6.2. For instance, when
x3
x3 = 1
x2 = 1
x4 = 1
x1 = 1
x1
x2
1
2
3
4
(a)
P
4
1
2
3
(b)
Figure 7.28
Mappingofthefour-nodetetrahedronfrom(a)theparentto(b)thephysicalCartesiancoordinatesystem.
Also shown is the interior point P (not a node) in the physical domain (b).
4
1
2
3
5
6
10
7
9
8
Figure 7.29
A 10-node curved-face tetrahedral element.
Table 7.9
Table of shape functions construction for the ten-node tetrahedral element.
I
1ðxe
I; ye
IÞ
2ðxe
I; ye
IÞ
3ðxe
I; ye
IÞ
4ðxe
I; ye
IÞ
N10Tet
I
ð1; 2; 3; 3Þ
1
1
0
0
0
21ð1  1=2Þ
2
0
1
0
0
22ð2  1=2Þ
3
0
0
1
0
23ð3  1=2Þ
4
0
0
0
1
24ð4  1=2Þ
5
1=2
1=2
0
0
412
6
0
1=2
1=2
0
423
7
1=2
0
1=2
0
413
8
1=2
0
0
1=2
414
9
0
1=2
0
1=2
424
10
0
0
1=2
1=2
434
184
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

constructing the shape function N10Tet
I
, we seek a function that equals unity at node I, vanishes at all other
nodes and is at most quadratic. These conditions are met by 21ð1  1=2Þ for I ¼ 1. The 10-node
tetrahedral element shape functions are given in Table 7.9.
The integration formulas for tetrahedra are similar to those given in Equation (7.63) for triangles. The
Jacobian is given by Equation (7.69), where the derivatives with respect to ,  and  are replaced by the
derivatives with respect to the volume coordinates 1, 2 and 3. The quadrature point and weights are
summarized in Table 7.10.
Example 7.1
Integrate exactly and numerically the following monomial over a triangular element:
I ¼
Z

13
2 d:
Applying (7.65), we have
I ¼ 2A
ð1!Þð3!Þð0!Þ
ð1 þ 3 þ 0 þ 2Þ! ¼ 12A
720 ¼ 0:008 33ð2AÞ:
Using three-point Gauss quadrature,
I ¼
1
6
|{z}
W
ð2AÞ
|ﬄ{zﬄ}
J
1
6
1
6
 3
þ 2
3
1
6
 3
þ 1
6
2
3
 3
 
!
¼ 0:008 87ð2AÞ:
REFERENCES
Ciarlet, P.G. and Raviart, P.A. (1973) Maximum principle and uniform convergence for the ﬁnite element method.
Comput. Methods Appl. Mech. Eng., 2, 17–31.
Cowper, G.R. (1973) Gaussian quadrature formulas for triangles. Int. J. Numer. Methods Eng., 7, 405–8.
Table 7.10
Gauss quadrature weights and points for tetrahedral domains.
Integration
Degree of
order
precision
1
2
3
Weights
One-point
2
0.25
0.25
0.25
1
0.58 541 020
0.13 819 660
0.13 819 660
0.25
0.13 819 660
0.58 541 020
0.13 819 660
0.25
Four-point
3
0.13 819 660
0.13 819 660
0.58 541 020
0.25
0.13 819 660
0.13 819 660
0.13 819 660
0.25
0.25
0.25
0.25
0.8
1=3
1=6
1/6
0.45
Five-point
4
1=6
1=3
1/6
0.45
1=6
1=6
1/3
0.45
1=6
1/6
1/6
0.45
REFERENCES
185

Ergatoudis, J.G., Irons, B.M. and Zienkiewicz, O.C. (1968) Curved isoparametric quadrilateral elements for ﬁnite
element analysis. Int. J. Solids Struct., 4, 31–4.
Hoffman, H. and Kunze, R. (1961) Linear Algebra, Prentice Hall, Englewood Cliffs, NJ.
Noble, B. (1969) Applied Linear Algebra, Prentice Hall, Englewood Cliffs, NJ.
Problems
Problem 7.1
Given a nine-node rectangular element as shown in Figure 7.30.
(i)
Construct the element shape functions by the tensor product method.
(ii)
If the temperature ﬁeld at nodes A and B is 1 C and zero at all other nodes, what is the temperature at
x ¼ y ¼ 1?
(iii) Consider the three-node triangular element ABC located to the right of the nine-node rectangular
element. Will the function be continuous across the edge AB? Explain.
Problem 7.2
Consider two triangular elements as shown in Figure 7.31. If the exact temperature ﬁeld is x2, can the two
elements represent the exact solution? Explain.
Problem 7.3
Show that if one of the angles in a quadrilateral is greater than 180, then detðJeÞ may not be positive.
B
x
y
2
=
y
1
=
y
A
C
2
=
x
4
=
x
6
=
x
Figure 7.30
Nine-node rectangular element and adjacent three-node triangular element of Problem 7.1.
1
4
3 (2,1)
2
x
y
Figure 7.31
Two triangular elements of Problem 7.2.
186
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

Problem 7.4
Construct the shape functions for the ﬁve-node triangular element shown in Figure 7.32, which has
quadratic shape functions along two sides and linear shape functions along the third. Be sure your shape
functions for all nodes are linear between nodes 1 and 2. Use triangular coordinates and express your
answer in terms of triangular coordinates.
Problem 7.5
Derive the derivatives of the shape functions and the B-matrix of the eight-node brick element.
Problem 7.6
Using the tensor product of one-dimensional shape functions, construct the shape functions of the 27-node
hexahedral element.
Problem 7.7
Derive the derivatives of the shape functions and the corresponding B-matrix of the 27-node hexahedral
element.
Problem 7.8
Consider two neighboring triangular elements as shown in Figure 7.8. Express the values of parameters be
i
describing an equation of an element edge deﬁned by Equation (7.17) in terms of parameters ae
i describing
an approximation over element domain eðx; yÞ ¼ ae
0 þ ae
1x þ ae
2y.
1
2
3
4
5
Linear edge
Figure 7.32
Five-node triangular element of Problem 7.4.
1
2
4
3
4
2
x
y
Figure 7.33
Four-node quadrilateral of Problem 7.9.
REFERENCES
187

Problem 7.9
Show that by collapsing side 1–2 of the four-node quadrilateral element shown in Figure 7.33, a constant
strain triangle is obtained.
Problem 7.10
Consider the four-node isoparametric element. Show that @N1
@x at the origin,  ¼  ¼ 0 is given by
@N1
@x ¼ y24
2A and that J ¼ detðJeð0; 0ÞÞ ¼ A=4.
188
APPROXIMATIONS OF TRIAL SOLUTIONS, WEIGHT FUNCTIONS

8
Finite Element Formulation
for Multidimensional Scalar
Field Problems
In this chapter, we describe how algebraic systems of equations are developed from the weak form and the
ﬁnite element approximations of the trial solutions and weight functions given in Chapter 7. We start by
considering two-dimensional heat conduction. With minor changes, the procedures are applicable to any
other diffusion equation, to three dimensions and to the advection–diffusion equation.
Theproceduremirrorswhatwehavedoneinonedimension.Themajorchangesarethatthematricesare
ofdifferentdimensions,andtheelementconductancematricesarisefromintegralsoveranareaandtheﬂux
matrices from integrals over a line.
8.1
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT
CONDUCTION PROBLEMS1
We start with the weak form of the heat conduction equations. The weak form for the heat conduction
problem was developed in Section 6.3. In the matrix form, it is written as
ﬁnd Tðx; yÞ 2 U such that :
Z

ð=wÞTD=T d ¼ 
Z
q
wTq d þ
Z

wTs d
8w 2 U0;
ð8:1Þ
where
=T ¼
@T
@x
@T
@y
2
664
3
775;
D ¼
kxx
kxy
kxy
kyy


As a ﬁrst step, the problem domain is subdivided into triangular, quadrilateral or combinations of these
elementsasshowninFigure8.1;thetotalnumberofelementsisdenotedbynel.Thedomainofeachelement
is denoted by e.
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)
1Recommended for Science and Engineering Track.

Next, the integrals in (8.1) are replaced by the sum of integrals over nel elements:
X
nel
e¼1
Z
e
ð=weÞTDeð=TeÞ d þ
Z
eq
weTq d 
Z
e
weTs d
0
B
@
1
C
A ¼ 0;
ð8:2Þ
The ﬁnite element approximation for the trial solution and the weight function in each element is
given by:
Tðx; yÞ  Teðx; yÞ ¼ Neðx; yÞde ¼
X
nen
I¼1
Ne
I ðx; yÞTe
I
ðx; yÞ 2 e
ð8:3Þ
wTðx; yÞ  weTðx; yÞ ¼ Neðx; yÞwe ¼
X
nen
I¼1
Ne
I ðx; yÞwe
I
ðx; yÞ 2 e
ð8:4Þ
where nen is the number of element nodes. In (8.3) and (8.4) Ne ðx; yÞis the element shape function matrix,
de ¼ ½Te
1 Te
2    Te
nenT
the element temperature matrix and we ¼ ½we
1 we
2    we
nenT the matrix
of element nodal values of weight function. Note that for an isoparametric element formulation
(see Chapter 7), the shape functions are expressed in terms of element (natural) coordinates  and  .
The element nodal temperatures are related to the global temperature matrix by the scatter matrix Le
(this matrix is constructed exactly as described for the one-dimensional case in Chapter 2) through:
de ¼ Led:
ð8:5Þ
Combining (8.3),(8.4) and (8.5)we obtaina relationfor trialsolution andweight functionineach element:
ðaÞ
Teðx; yÞ ¼ Neðx; yÞLed
ð8:6Þ
ðbÞ
weTðx; yÞ ¼ ðNeðx; yÞweÞT ¼ wTLeTNeTðx; yÞ
The gradient ﬁeld is obtained by taking the gradient of (8.3):
=Te ¼
@Te
@x
@Te
@y
2
6664
3
7775 ¼
@Ne
1
@x Te
1 þ @Ne
2
@x Te
2 þ    þ @Ne
nen
@x Te
nen
@Ne
1
@y Te
1 þ @Ne
2
@y Te
2 þ    þ @Ne
nen
@y Te
nen
2
6664
3
7775 ¼
@Ne
1
@x
@Ne
2
@x
  
@Ne
nen
@x
@Ne
1
@y
@Ne
2
@y
  
@Ne
nen
@y
2
6664
3
7775de
Ω
x
y
T = T on ΓT
q = q on Γq
Figure 8.1
Finite element model in two dimensions.
190
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

In more compact notation the gradient is given by
=Teðx; yÞ ¼ ð=Neðx; yÞÞde ¼ Beðx; yÞde ¼ Beðx; yÞLed;
ð8:7Þ
where
Beðx; yÞ ¼ =Neðx; yÞ:
Applying the gradient operator to (8.6b), it follows that the gradient of the weight function is
ð=weÞT ¼ ðBeweÞT ¼ weTBeT ¼ ðLewÞTBeT ¼ wTLeTBeT;
ð8:8Þ
We will partition the global matrices as
d ¼
dE
dF


;
w ¼
wE
wF


¼
0
wF


:
The part of the matrix denoted by the subscript ‘E’ contains the nodes on the essential boundaries. As
indicated by the overbar on dE, these values are known. The submatrices denoted by the subscript ‘F’
contain all the remaining nodal values: these entries are arbitrary, or free, for the weight function and
unknown for the trial solution.
From the structure of d and w and the C0 continuity of the shape functions, it follows that the ﬁnite
element approximations of the weight functions and the trial solutions are admissible, i.e. ThðxÞ2U and
whðxÞ2U0 . Substituting the trial solution and weight function approximations, as given in (8.6) , (8.7) and
(8.8), into (8.2) yields
wT
X
nel
e¼1
LeT
Z
e
BeTDeBe d Led þ
Z
eq
NeTq d 
Z
e
NeTs d
2
64
3
75
8
>
<
>
:
9
>
=
>
;
¼ 0
8 wF:
ð8:9Þ
In the above, we have replaced the arbitrary weight functions wðx; yÞ by arbitrary parameters wF. wF is a
portion of w corresponding to nodes not on an essential boundary.
As in the derivation outlined in Chapter 5, we deﬁne the following element matrices:
Element conductance matrix:
Ke ¼
Z
e
BeTDeBe d:
ð8:10Þ
Element ﬂux matrix:
fe ¼ 
Z
eq
NeTq d
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
fe

þ
Z
e
NeTs d
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
fe

;
ð8:11Þ
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT CONDUCTION PROBLEMS
191

where fe
 and fe
 are the element boundary and source heat ﬂux matrices, respectively. The weak form can
then be written as
wT
X
nel
e¼1
LeTKeLe
 
!
d 
X
nel
e¼1
LeTfe
 
!
"
#
¼ 0
8 wF:
ð8:12Þ
The system (8.12) can be rewritten as
wTr ¼ 0
8 wF;
ð8:13Þ
where
r ¼ Kd  f;
ð8:14Þ
and the global matrices are assembled as before:
K ¼
X
nel
e¼1
LeTKeLe;
f ¼
X
nel
e¼1
LeTfe:
ð8:15Þ
Recall that in practice we do not multiply by scatter and gather operators, but rather carry out direct
assembly. This will be illustrated in the two examples that follow.
Following the derivation in Chapter 5, we partition w and r in Equation (8.13) into E- and F-nodes:
wT
FrF þ wT
ErE ¼ 0
8wF
ð8:16Þ
andaswE ¼ 0andwF isarbitrary,fromEquation.(8.16)byusingthescalar producttheorem,we obtainthe
partitioned form as
r ¼
rE
0


¼
KE
KEF
KT
EF
KF


dE
dF



fE
fF


;
where KE , KF and KEF are partitioned to be congruent with the partitions of d and f.
The above equation can be rewritten as
KE
KEF
KT
EF
KF

 dE
dF


¼
fE þ rE
fF


ð8:17Þ
and solved using a two-step partitioned approach or by the penalty method. We illustrate the application of
the ﬁnite element method for the heat conduction problem on the domain depicted in Figure 8.2 using
Figure 8.2
Problem deﬁnition for Example 8.1.
192
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

two triangular elements (Example 8.1) and a single quadrilateral element by utilizing Gauss quadrature
(Example 8.2).
Figure 8.3 Finite element mesh of Example 8.1.
Example 8.1
Consider the heat conduction problem depicted in Figure 8.2. The coordinates are given in meters. The
conductivity is isotropic, with D ¼ k 1
0
0
1


, and k ¼ 5 W C1. The temperature T ¼ 0 is prescribed
along edges AB and AD. The heat ﬂuxes q ¼ 0 and q ¼ 20 W m1 are prescribed on edges BC and CD,
respectively. A constant heat source s ¼ 6 Wm2 is applied over the plate.
The ﬁniteelement mesh consisting oftwo triangular elements isshown inFigure 8.3. It is important to
note that essential boundary conditions must be met, so nodes at the intersection of essential and natural
boundaries are essential boundary nodes. Therefore, when the partitioning method is used, these nodes
must be among those numbered ﬁrst, as shown in Figure 8.3.
The Be matrix for the three-node triangle is given by (see Equation (7.20))
Be ¼ 1
2Ae
ðye
2  ye
3Þ
ðye
3  ye
1Þ
ðye
1  ye
2Þ
ðxe
3  xe
2Þ
ðxe
1  xe
3Þ
ðxe
2  xe
1Þ


;
where
2Ae ¼ ðxe
2ye
3  xe
3ye
2Þ  ðxe
1ye
3  xe
3ye
1Þ þ ðxe
1ye
2  xe
2ye
1Þ:
As Be and k are constant and De ¼ kI, the expression of the conductance matrix can be simpliﬁed as
Ke ¼
Z
e
BeTDeBe d ¼
Z
e
BeTBek d ¼ BeTBek
Z
e
d
3
1
2
(e)
Figure 8.4
A counterclockwise numbering of element nodes.
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT CONDUCTION PROBLEMS
193

or
Ke ¼ kAeBeTBe:
A counterclockwise numbering is used for local element nodes as shown in Figure 8.4.
For element 1, the local node numbering and element coordinates are given in Figure 8.5. The area of
element 1 is Að1Þ ¼ 1 and the resulting Bð1Þ matrix is
Bð1Þ ¼ 1
2
0:5
1
0:5
2
0
2


:
The conductance matrix and the corresponding global node numbering of rows for element 1 is
Kð1Þ ¼ kAð1ÞBð1ÞTBð1Þ ¼
5:3125
0:625
4:6875
0:625
1:25
0:625
4:6875
0:625
5:3125
2
4
3
5
½1
½2
½3
:
½1
½2
½3
Similarly, for element 2, the local node numbering and element coordinates are given in Figure 8.6.
The area of element 2 is Að2Þ ¼ 0:5 and the Bð2Þ matrix is
Bð2Þ ¼
0
0:5
0:5
2
2
0


:
Figure 8.5
Local node numbering and coordinates of element 1.
Figure 8.6
Local node numbers for element 2.
194
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

The conductance matrix of element 2 is
Kð2Þ ¼ kAð2ÞBð2ÞTBð2Þ ¼
10
10
0
10
10:625
0:625
0
0:625
0:625
2
4
3
5
½2
½4
½3
:
½2
½3
½4
The global conductance matrix is obtained by direct assembly of the two element conductance matrices:
K ¼
5:3125
0:625
4:6875
0
0:625
11:25
0:625
10
4:6875
0:625
5:9375
0:625
0
10
0:625
10:625
2
664
3
775
½1
½2
½3
½4
:
½1
½2
½3
½4
Let us now consider the element source matrix
fe
 ¼
Z
e
NeTs d;
where triangular element shape functions are
Ne
1 ¼ 1
2Ae ðxe
2ye
3  xe
3ye
2 þ ðye
2  ye
3Þx þ ðxe
3  xe
2ÞyÞ;
Ne
2 ¼ 1
2Ae ðxe
3ye
1  xe
1ye
3 þ ðye
3  ye
1Þx þ ðxe
1  xe
3ÞyÞ;
Ne
3 ¼ 1
2Ae ðxe
1ye
2  xe
2ye
1 þ ðye
1  ye
2Þx þ ðxe
2  xe
1ÞyÞ:
In the special case when s is constant, using
R
e Ne
I d ¼ Ae=3, (see Figure 8.7) gives a
closed form expression for the element source matrix,
fe
 ¼ s
Z
e
NeT d ¼ sAe
3
1
1
1
2
4
3
5:
The element source matrices for elements 1 and 2 are given by
fð1Þ
 ¼ sAð1Þ
3
1
1
1
2
64
3
75 ¼ 6  1
3
1
1
1
2
64
3
75 ¼
2
2
2
2
64
3
75
½1
½2
½3
;
fð2Þ
 ¼ sAð2Þ
3
1
1
1
2
64
3
75 ¼ 6  0:5
3
1
1
1
2
64
3
75 ¼
1
1
1
2
64
3
75
½2
½4
½3
:
1
N(1)
1
1
3
2
A(1)
Figure 8.7
Volume under the shape function Nð1Þ
1 :
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT CONDUCTION PROBLEMS
195

The direct assembly of the element source matrices yields the global source matrix
f ¼
2
2 þ 1
2 þ 1
1
2
664
3
775 ¼
2
3
3
1
2
664
3
775
½1
½2
½3
½4
:
We now proceed with the calculation of the element boundary ﬂux matrix
fe
 ¼ 
Z
eq
NeTq d:
Note that element 1 has two edges on the essential boundary (where the temperature is prescribed) and
one interior edge. None of the edges are on the natural boundary, i.e. ð1Þ
q
¼ 0. Therefore, element 1 does
not contribute to the boundary ﬂux matrix. For element 2, q ¼ 20 on CD, and it is the only element edge
thatcontributestotheboundaryﬂuxmatrix.WestartbyevaluatingtheshapefunctionNð2Þ alongtheedge
CD:
Nð2Þ
y¼1¼
1
2Að2Þ xð2Þ
2 yð2Þ
3
 xð2Þ
3 yð2Þ
2
þ
yð2Þ
2
 yð2Þ
3


x þ
xð2Þ
3
 xð2Þ
2


y
h
i
1
2Að2Þ xð2Þ
3 yð2Þ
1
 xð2Þ
1 yð2Þ
3
þ
yð2Þ
3
 yð2Þ
1


x þ
xð2Þ
1
 xð2Þ
3


y
h
i
1
2Að2Þ xð2Þ
1 yð2Þ
2
 xð2Þ
2 yð2Þ
1
þ
yð2Þ
1
 yð2Þ
2


x þ
xð2Þ
2
 xð2Þ
1


y
h
i
2
6666664
3
7777775
y¼1
¼
0
0:5x
0:5x þ 1:0
2
64
3
75:
It can be seen that the two nonzero shape functions coincide with the two-node element linear shape
functions. The resulting boundary ﬂux matrix for element 2 is given as
fð2Þ
 ¼ 20
Zx¼2
x¼0
0
0:5x
0:5x þ 1
2
4
3
5 dx ¼
0
20
20
2
4
3
5
½2
½4
½3
:
This result is expected as the total heat energy ð20  2Þ is equally distributed between nodes 3 and 4.
The direct assembly of element 2 boundary ﬂux matrix gives
f ¼
0
0
20
20
2
664
3
775:
Finally, the right hand side matrix of (8.17), which includes the global ﬂux and the residual matrices, is
given as
f þ f þ r ¼
2
3
17
19
2
664
3
775 þ
r1
r2
r3
0
2
664
3
775:
196
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

The resulting global system of equations is given by
5:3125
0:625
4:6875
0
0:625
11:25
0:625
10
4:6875
0:625
5:9375
0:625
0
10
0:625
10:625
2
664
3
775
0
0
0
T4
2
664
3
775 ¼
r1 þ 2
r2 þ 3
r3  17
19
2
664
3
775:
Partitioning after the ﬁrst three rows and columns gives
T4 ¼ 19=10:625 ¼ 1:788:
The resulting global and element temperature matrices are
d ¼
0
0
0
1:788
2
664
3
775;
dð1Þ ¼
0
0
0
2
4
3
5
½1
½2
½3
;
dð2Þ ¼
0
1:788
0
2
4
3
5
½2
½4
½3
:
The ﬂux matrices are
qð1Þ ¼ kIBð1Þdð1Þ ¼ kBð1Þdð1Þ ¼ 5 1
2
0:5
1
0:5
2
0
2


0
0
0
2
64
3
75 ¼
0
0


:
qð2Þ ¼ kBð2Þdð2Þ ¼ 5
0
0:5
0:5
2
2
0


0
1:788
0
2
64
3
75 ¼
4:47
17:88


:
Example 8.2
Consider the heat conduction problem depicted in Figure 8.2. The domain is discretized (meshed) with a
single quadrilateral element shown in Figure 8.8. The 2  2 Gauss quadrature developed in Chapter 7 is
used for integration of element matrices.
Figure 8.8
Element numbering for Example 8.2.
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT CONDUCTION PROBLEMS
197

The element coordinate matrix is
xe
ye
½
 ¼
xe
1
ye
1
xe
2
ye
2
xe
3
ye
3
xe
4
ye
4
2
6664
3
7775 ¼
0
1
0
0
2
0:5
2
1
2
6664
3
7775:
The four-node quadrilateral element shape functions in the parent domain are
N4Q
1 ð; Þ ¼   2
1  2
  4
1  4
¼ 1
4 ð1  Þð1  Þ;
N4Q
2 ð; Þ ¼   1
2  1
  4
1  4
¼ 1
4 ð1 þ Þð1  Þ;
N4Q
3 ð; Þ ¼   1
2  1
  1
4  1
¼ 1
4 ð1 þ Þð1 þ Þ;
N4Q
4 ð; Þ ¼   2
1  2
  1
4  1
¼ 1
4 ð1  Þð1 þ Þ:
The gradient in the parent domain is
GN4Q ¼
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
@Ne
1
@
@Ne
2
@
@Ne
3
@
@Ne
4
@
2
6664
3
7775 ¼ 1
4
  1
1  
1 þ 
  1
  1
  1
1 þ 
1  


:
The Jacobian matrix, the determinant of the Jacobian matrix and the inverse of the Jacobian matrix are
given below:
Jð1Þ ¼ ðGN4QÞ½xð1Þ yð1Þ ¼ 1
4
  1
1  
1 þ 
  1
  1
  1
1 þ 
1  


0
1
0
0
2
0:5
2
1
2
6664
3
7775¼ 0
0:125  0:375
1
0:125 þ 0:125


;
det Jð1Þ  Jð1Þ

 ¼ 0:125 þ 0:375;
ðJð1ÞÞ1 ¼
1 þ 
3  
1
8
  3
0
2
664
3
775:
The derivatives of the shape functions with respect to the global Cartesian coordinates are
Bð1Þ ¼ ðJð1ÞÞ1ðGN4QÞ ¼ ðJð1ÞÞ1 1
4
  1
1  
1 þ 
  1
  1
  1
1 þ 
1  


:
The conductance matrix and the ﬂux matrix are computed using 2  2 Gauss quadrature with the
following sampling points and weights:
1 ¼  1ﬃﬃﬃ
3
p ;
2 ¼ 1ﬃﬃﬃ
3
p ;
1 ¼  1ﬃﬃﬃ
3
p ;
2 ¼ 1ﬃﬃﬃ
3
p ;
W1 ¼ W2 ¼ 1:
198
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

The conductance matrix is given by
K ¼ Kð1Þ ¼
Z

BeTDeBe d ¼ k
Z 1
1
Z 1
1
Bð1ÞTBð1Þ Jð1Þ

 d d
¼ k
X
2
i¼1
X
2
j¼1
WiWj Jð1Þði; jÞ

Bð1ÞTði; jÞBð1Þði; jÞ:
Summing the contribution from the four Gauss points yields
K ¼
4:76
3:51
2:98
1:73
3:51
4:13
1:73
2:36
2:98
1:73
6:54
5:29
1:73
2:36
5:29
5:91
2
664
3
775:
The source matrix is given as
f ¼
Z
e
sðN4QÞT d ¼
Z 1
1
Z 1
1
sðN4QÞT Jð1Þ

 d d
¼
Z 1
1
Z 1
1
6
N4Q
1 ð; Þ
N4Q
2 ð; Þ
N4Q
3 ð; Þ
N4Q
4 ð; Þ
2
6666664
3
7777775
ð0:125 þ 0:375Þ d d ¼
2:5
2:5
2
2
2
6664
3
7775:
The only contribution to the boundary ﬂux matrix comes from the edge CD. Note that the positive 
direction in the parent element domain is deﬁned from node 1 to node 2; the positive  direction points
from node 1 to node 4. Therefore, the edge CD in the physical domain corresponds to  ¼ 1 in the
element parent domain.
The boundary ﬂux matrix can be integrated analytically or by using one-point Gauss
quadrature:
f ¼ 
Z
CD
qðN4QÞT d ¼ 
Zx¼2
x¼0
qN4Qð ¼ 1; ÞT dx
¼  b  a
2
|ﬄﬄ{zﬄﬄ}
1
q
Z 1
1
N4Qð ¼ 1; ÞT d ¼ 20
Z 1
1
1
2 ð1  Þ
0
0
1
2 ð1 þ Þ
2
6666664
3
7777775
d ¼
20
0
0
20
2
6664
3
7775:
The resulting RHS matrix is given by
f þ f þ r ¼
r1  17:5
r2 þ 2:5
r3 þ 2
18
2
664
3
775:
FINITE ELEMENT FORMULATION FOR TWO-DIMENSIONAL HEAT CONDUCTION PROBLEMS
199

The global system of equations is
4:76
3:51
2:98
1:73
3:51
4:13
1:73
2:36
2:98
1:73
6:54
5:29
1:73
2:36
5:29
5:91
2
6664
3
7775
0
0
0
T4
2
6664
3
7775 ¼
r1  17:5
r2 þ 2:5
r3 þ 2
18
2
6664
3
7775;
which yields T4 ¼ 3:04. The global temperature matrix is
d ¼ dð1Þ ¼
0
0
0
T4
2
664
3
775 ¼
0
0
0
3:04
2
664
3
775:
The resulting ﬂux matrix is computed at the Gauss points and is given as
qð1Þ ¼ kr ¼ kBð1Þdð1Þ;
qð1Þð1; 1Þ ¼ kBð1Þð1; 1Þdð1Þ ¼
0:90
3:60


;
qð1Þð2; 2Þ ¼ kBð1Þð2; 2Þdð1Þ ¼
2:3
19:8


;
qð1Þð3; 3Þ ¼ kBð1Þð3; 3Þdð1Þ ¼
4:95
19:8


;
qð1Þð4; 4Þ ¼ kBð1Þð4; 4Þdð1Þ ¼
5:81
3:60


:
Example 8.3
Consider the heat conduction problem given in Example 8.1 modeled with 16 quadrilateral ﬁnite
elements as shown in Figure 8.9. Solving this problem manually using the ﬁnite element method is of
course not feasible. We will solve this problem using the ﬁnite element code given in Section 12.5.
0
0.5
1
1.5
2
-0.2
0
0.4
0.6
0.8
1
1.2
x
2D Heat conduction with 16 elements
1
2
7
6
3
8
7
4
9
8
5
10
9
7
12
11
8
13
12
9
14
13
10
15
14
12
17
16
13
18
17
14
19
18
15
20
19
17
22
21
23
19
24
20
25
natural B.C. (flux)
y
Figure 8.9
Sixteen-element mesh and natural boundary.
200
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

The ﬁnite element code and the input ﬁles are detailed in Section 12.5 and we recommend that you spend
some time to understand the ﬁnite element program syntax.
Thepostprocessing results fortemperature and ﬂuxare shown inFigures 8.10and8.12.You shouldbe
able to obtain identical plots by running the code.
Fluxesarecalculatedbyloopingoverthenumberofelements.Forthefour-nodequadrilateralelement,
there are four Gauss points as shown in Figure 8.11. The heat ﬂux matrix is plotted at each Gauss point in
the physical domain as shown in Figure 8.12.
8.2
VERIFICATION AND VALIDATION 2
Acriticalaspectofﬁniteelementapplicationsisveriﬁcationandvalidation.Thequickestwaytoremember
their meanings is to use the deﬁnitions of Roache:
Veriﬁcation: Are the equations being solved correctly?
Validation: Are the right equations being solved?
Figure 8.10
Temperature distribution in the 16-element mesh.
Figure 8.11
Gauss point locations for the local node numbering shown.
2Recommended for Science and Engineering Track.
VERIFICATION AND VALIDATION
201

Theﬁrstquestionisaquestionoflogicandcorrectprogramming:partoftheanswerliesinthecorrectnessof
the elements and the weak form used in the program, the correctness of the solver and the postprocessing.
Part of the answer lies in the programming: are the procedures programmed correctly? For commercial
software, an extensiveveriﬁcation plan is usually in place and most users rely on the adequacy of this plan,
though it is sometimes worthwhile to run one or two problems to assure yourself that the features you are
using work perfectly; there are so many features in commercial programs that it is probably impossible to
verify all combinations, so particularly if you use something unusual or new, veriﬁcation may be
worthwhile. For programs you develop, veriﬁcation is essential.
In the veriﬁcation process, it is necessary to establish that the ﬁnite element program solves the strong
form correctly. This is not easy, as the equations are solved approximately, and as we have seen, the ﬁnite
element solution does not satisfy the governing equation or the natural boundary conditions exactly. The
customary approachtotheveriﬁcationofﬁniteelementprogramsisthroughastudyofconvergence:do the
ﬁnite element solutions generated by the program converge to the correct solution? However, it is very
helpful to run the patch test, which is described next, before the convergence studies are performed.
The patch test has become ubiquitous as a means of verifying ﬁnite element programs. It is extremely
simple,anditisrecommendedevenforcommercialsoftwarewhenﬁrstusingit.Forahomemadecode,itis
essential before trying any more complicated problems. The patch test is based on the properties of linear
completeness and the fact that if a ﬁnite element approximation contains the exact solution, then the ﬁnite
element program must obtain that exact solution.
Wewillﬁrstdescribethepatchtest,andthenexplainwhyitworks.Inthepatchtest,ameshsuchasshown
inFigure8.13ismade;themeshcanbequitearbitrary,butitisimportanttohaveirregularelements,assome
elements are sometimes satisfactory when of regular shapes, such as rectangles, but perform quite poorly
when skewed. From four to eight elements are sufﬁcient; when checking your own program with the patch
test, a very few elements are preferable, because if you fail the patch test, you will need to output a lot of
element data.
The mesh is now used to solve the heat conduction equation with prescribed temperatures (essential
boundary conditions) at all nodes with the nodal values obtained from the linear ﬁeld:
Tðx; yÞ ¼ a0 þ a1x þ a2y;
ð8:18Þ
Figure 8.12
The heat ﬂux computed at the element Gauss points.
202
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

where a0 , a1 and a2 are arbitrary constants; you can set them to whatever you like, but they should all be
nonzero. If you are checking your own program, it is best to give them distinctive values so that you can
recognize them in the output.
Whenyouruntheﬁniteelementprogram,the solutionforthe nodaltemperatureshouldbegivenexactly
by(8.18)withthenumbersyoupickedforai ,andtheheatﬂuxshouldbeconstantthroughoutthemesh.The
valuesshouldagree totheexactvalueswithin machineprecision, whichcanvaryfrom108to1010.Even
differences like 103 sometimes indicate that something is wrong in the program or formulation.
Whydoesthiswork?Ifyouconsidertheheatconductionequation(6.15),youcanseethatalinearﬁeldis
a solution when there are no sources. Prescribing the temperatures along the boundary by this ﬁeld means
that the ﬁeld (8.18) satisﬁes the governing equation and boundary conditions. As the solution to a linear
problem is unique, this must be the exact solution. Furthermore, because the exact solution is included in
the set of ﬁnite element approximations (as the elements must be linear complete), the ﬁnite element
solution must be the exact solution. Although there has been some controversy on this topic, there is
considerable research that shows that any element that satisﬁes the patch test is a convergent element.
Theother approachtoveriﬁcationistocheck convergencetoother exactsolutions. Forheat conduction,
many such solutions are available in the literature. Veriﬁcation then consists of solving the problem with
increasingly ﬁne meshes as in Example 8.4 and checking that the solution converges. The rate of
convergence should be greater than 1 in the L2 norm and should optimally conform to the rule given in
Section 5.7.
There are many situations in which exact solutions are not available. For example, there are no exact
solutionsforproblemswithvariableanisotropicconductivity.Althoughitcanbearguedthataprogramthat
is veriﬁed for isotropic conductivity should also work for anisotropic conductivity, it is best to verify the
program for such applications if many runs are to be made. When there are no closed form exact solutions
for an equation, it is possible to construct such solutions: such constructed solutions are called manufac-
tured solutions.
The approach is quite straightforward. One ﬁrst makes up the solution, and it is desirable to make the
form reasonably challenging. For example, a form frequently used to see how accurately the program
captures high gradients is
T ¼ cos 2 tanhðcðr  3ÞÞ;
ð8:19Þ
where ðr; Þ are polar coordinates and c is an arbitrary parameter. This ﬁeld is next substituted into the
governing equation and used to obtain a source s:
s ¼
2c2 tanh½cðr  3Þ  c
r


sech2½cðr  3Þ þ 4
r2 tanh½cðr  3Þ


cos 2
ð8:20Þ
x
y
Figure 8.13
A typical ﬁnite element mesh for the patch test.
VERIFICATION AND VALIDATION
203

thatsatisﬁesEquation(6.15).Theboundaryconditionsarealsoconstructedfromthisﬁeld:Onecanchoose
any combination of essential and natural boundary conditions, though enough of the boundary must be an
essential boundary so that the system equations are not singular. For example, the essential boundary
conditions can be constructed by substituting the equation(s) describing the domain boundary into
Equation (8.19). The resulting ‘manufactured’ solution (8.19) will satisfy the boundary conditions and
the governing equations with the source given in (8.20). Because of the uniqueness of solutions to linear
systems,itmustthereforebetheonlysolution.Theprogramcanthereforebeveriﬁedbyseeingwhetherthe
solution converges to this manufactured solution. The same procedures used to check convergence in
Example 8.4 are used.
Validation centers on the application area and the modeling. Does the model you have developed,
particularly the boundary conditions, sources, the material properties, etc., represents the actual physical
situation appropriately? For example, in the example of heat ﬂow through a wall, we prescribed the inner
surface temperature to be at room temperature and assumed that heat ﬂow through the wall is entirely by
conduction.However,whenitgetsverycoldoutside,theinsidewalltemperaturewillbesigniﬁcantlylower
than room temperature because convection within the room cannot keep the air at a constant temperature
throughout the room. In addition to conduction, heat moves through the wall by airﬂow in crevices in the
wall. Furthermore, the conductivity of the various parts of the wall will vary with their moisture content,
installation and so on, and in any case will not match the input values.
Onemaybetemptedtobypasstheassumptionofconstantroomtemperaturebymodelingtheﬂowofthe
air in the room, and such more complete models are increasingly being used. However, with the more
complete models, modeling assumptions must be made, such as placement of furniture in the room,
occupancy,etc.Somodelersmustatsomepointconsiderthequestionofwhatlevelofdetailissufﬁcientfor
their purposes and how can that model be validated.
The most straightforward way to validate a model is to perform a test or experiment that closely
replicates the situation of interest. In the case of heat conduction in a wall, a wall would be constructed,
extensivelyinstrumented,andthemodelwouldbevalidatedbycomparingtemperaturesatseveralpointsin
thewall with the predictions. It couldusually be assumed that the conductivity at least for part of thewall is
known accurately enough so that differences in temperature at two points in the wall are sufﬁcient to
provide a good estimate of the heat ﬂow.
However, validation by these means is very expensive and time consuming. In most cases, for simple
problems such as this, more creative ways must be found to validate the model. One approach is to use the
dataavailableintheliterature.Althoughthesedatamaynotbepreciselyforthesametypeofwall,iftheyare
obtained from measurements, they can account for assumptions such as differences between ambient air
temperature and insidewall temperature and other heat loss factors. One canuse tests and experiments that
are quite different from the situation being modeled to validate a program. For example, a model for heat
lossofanelectroniccomponentcanbevalidatedtosomeextentbyheatlossdataonmotorﬁns.Thescalesof
the two situations are quite different, but scaling laws are available for convectiveheat loss that can then be
used to assess how well the ﬁnite element model applies to the smaller scale model of an electronic
component.Obviously,thecloserthatdataaretotheactualsituationofinterest,themoreusefultheyarefor
validation.
In linear analysis, validation is simpliﬁed substantially as compared to nonlinear analysis because
the output, i.e. the results, depends linearly on the data. Thus, if there is error of 20% in the
conductivity, the maximum error in the heat ﬂow due to this discrepancy is also 20%. Therefore,
estimates of worst possible situations as compared to the model can easily be made. In nonlinear
analysis, this is no longer the case; for example, a difference of 20% in the yield strength of a material can
spell the difference between acceptable strains and failure. Furthermore, in linear analysis, the major
assumptions in modeling are the source data, the boundary conditions and the material properties. Once
it has been determined that a linear model is adequate, these are the only sources of error. In nonlinear
analysis, there are many other aspects that need to be validated: the nonlinear material law, phase change
laws, stability of solutions, etc.
204
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

In summary, validation is one of the major challenges in developing a model. Each problem domain
requires a distinctprogram ofvalidation. It iscrucial tobeawareof the assumptions thathavebeen made in
developing a model and the magnitude of their effects on the output and hence the design decisions.
Example 8.4
In this example, we consider a manufactured solution of the form
T ¼ ðr  aÞ2 ¼ x2 þ y2  2a
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
x2 þ y2
p
þ a2;
deﬁned over the domain of a square plate with a hole as shown in Figure 8.14. For heat equation with
isotropic conductivity and k ¼ 1, the corresponding source term that satisﬁes (6.15) is given by
s ¼ r2T ¼ 2a
1
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
x2 þ y2
p
 4:
The essential boundary conditions on T are
Tðr ¼ aÞ ¼ 0;
Tðx ¼ b; yÞ ¼ a2 þ b2 þ y2  2a
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
y2 þ b2
p
:
2b
2b
x
y
a
r
Γq
Γq
ΓT
ΓT
ΓT
C
G
Figure 8.14
A square plate with a hole, with prescribed temperature at x ¼  b and prescribed ﬂux at y ¼  b.
Figure 8.15
Temperature distribution for the coarsest (34-element) and the ﬁnest (502-elements) meshes.
VERIFICATION AND VALIDATION
205

The natural boundary conditions on q are (q ¼ knTrT)
qðx; y ¼ bÞ ¼  @T
@y ðx; y ¼ bÞ ¼ 2b
2a
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
x2 þ y2
p
 1
 
!
;
qðx; y ¼ bÞ ¼  @T
@y ðx; y ¼ bÞ ¼ 2b 1 
2a
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
x2 þ y2
p
 
!
:
Figure 8.15 depicts the coarsest and the ﬁnest meshes considered in the convergence studies and the
temperature distribution in the two meshes. Figure 8.16 compares the temperature distribution along the
Figure 8.16
Temperature along the line GG0 for the coarsest (34-element) the ﬁnest (502-elements) meshes.
Figure 8.17
Convergence in L2 and energy norms.
206
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

lineGG0 obtainedwiththetwomeshesagainsttheexactsolution.Finally,Figure8.17depictsthelog–log
plotoftheerrorintheL2 andenergynorms(seeEquation(5.51))andalinearapproximationobtainedbya
linear least squares regression. It can be seen that the slopes approximately equal 1 and 2 in the L2 and
energy norms, respectively, closely matching the theoretical values. Identical results were found in one
dimension in Section 5.7.
8.3
ADVECTION–DIFFUSION EQUATION 3
In this section, we develop the discrete ﬁnite element equations for the multidimensional advection–
diffusion equation. The development parallels that for one-dimensional advection–diffusion. However,
herewewillintroduceonewayforeliminatingthe‘wiggles’,i.e.theinstabilityoftheGalerkinformulation.
The equations will be developed only for isotropic constant diffusion.
For purposes that will become clear later, we deﬁne the residual rðxÞ for the advection–diffusion
equation (6.43) as in Chapter 3:
rðxÞ ¼~v  ~r  kr2  s:
ð8:21Þ
Weconsideressentialandnaturalboundaryconditionsasgivenin(6.44).Thetrialsolutionsandtheweight
functions are given by the standard ﬁnite element approximation, (8.6). These trial solution and weight
function approximations are admissible for the weak form of the advection–diffusion equation as they are
in U and U0 , respectively.
Substituting the ﬁnite element approximations (8.6) into the weak form (6.47) and subdividing the
domain  into element domains gives
WG ¼
X
nel
e¼1
We
G ¼ 0;
We
G ¼ weT
Z
e
vx
@Ne
@x þ vy
@Ne
@y


þ BeTkeBe


d de þ
Z
eq
NeTq d 
Z
e
NeTs d
8
>
<
>
:
9
>
=
>
;
¼ 0;
ð8:22Þ
where the term WG on the left-hand side is used to indicate that this discrete term comes from the Galerkin
method. We deﬁne the element matrix to be the coefﬁcient of de and the rest to be the element ﬂux matrix.
This gives
Ke
G ¼
Z
e
vx
@Ne
@x þ vy
@Ne
@y


þ BeTkeBe


d;
ð8:23Þ
fe
G ¼ 
Z
eq
NeTq d þ
Z
e
NeTs d:
ð8:24Þ
Theﬁrstpartin(8.23)arisesfromtheadvectiveterm.Thesecondpartintheelementmatrixisthediffusivity
matrix and is identical to the matrix derived in Section 8.1, but here it is limited to the isotropic case. The
nodal ﬂuxes are exactly equal to those in the diffusion equation, but we have added a subscript ‘G’ to
distinguish them from another set of nodal ﬂuxes that enter for the stabilized case.
3Recommended for Advanced Track.
ADVECTION–DIFFUSION EQUATION
207

Substituting (8.23) and (8.24) into (8.22) gives
WG ¼
X
nel
e¼1
weTðKe
Gde  fe
GÞ ¼ 0:
ð8:25Þ
The stabilization method wewill describe is GLS, Galerkin least square stabilization developed in Hughes
etal.(1989).Wewilldevelopthemethodonlyforlinearelements.Tomotivatethismethod,weﬁrstobserve
that one could solve the advection–diffusion equation by ﬁnite elements, by minimizing the square of the
residual, i.e. by minimizing
WLS ¼ 1
2
Z

r2 d:
ð8:26Þ
Solving a partial differential equation by minimizing WLS is called a least square method. The solution
corresponds to the minimum of WLS , which is a stationary point of the functional WLS. Therefore, its
variationvanishes when the residual vanishes, i.e. at a solution, so using the methods developed in Section
3.9 it follows that
0 ¼ WLS ¼
Z

rr d:
ð8:27Þ
From (8.21), it follows that the variation of the residual is
r ¼~v  ~r  kr2:
If we let  ¼ w (the variation does not need to be small), then
r ¼ ~v  ~rw  kr2w:
ð8:28Þ
Thesourcetermdoesnotappearin(8.28)becauseitisgivendataanddoesnotchangeasthefunctionðxÞis
varied.
The least square method tends to be inaccurate but stable. The Galerkin method (8.25) tends to be
accurate but becomes unstable as thevelocity~v increases. The idea of GLS is then to add a little of the least
square equation to the Galerkin weak form so that the method is accurate and stable. The resulting weak
form is obtained by adding (8.22)and (8.27), which gives
WG þ tWLS ¼ WG þ t
Z

rr d ¼ 0:
ð8:29Þ
The parameter t is a stabilization parameter, and its selection is discussed in Donea and Huerta (2003).
Substituting (8.28) into (8.29) gives
WG þ t
Z

ð~v  ~rw  kr2wÞr d ¼ 0:
ð8:30Þ
Now if you are alert, you will have noticed that the second derivatives of the weight functions and trial
solutions appear in (8.30), so the second integrand in the above is not integrable. As the second derivatives
appearinboththeweightfunctionandthetrialsolution,theycannotbeeliminatedbyintegrationbyparts.It
208
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

is one of the big mysteries of these methods that these unbounded terms are simply neglected, and yet the
method works.
Substituting the trial solution and weight function approximations with the diffusion terms neglected,
the least square integral in (8.30) becomes
WLS ¼ weT
Z
e
vx
@Ne
@x þ vy
@Ne
@y

T
vx
@Ne
@x þ vy
@Ne
@y


dde 
Z
e
vx
@Ne
@x þ vy
@Ne
@y

T
s d
8
>
<
>
:
9
>
=
>
;
ð8:31Þ
The element matrix is the coefﬁcient of de in the above:
Ke
LS ¼
Z
e
vx
@Ne
@x þ vy
@Ne
@y

T
vx
@Ne
@x þ vy
@Ne
@y


d:
ð8:32Þ
The least square term also introduces another nodal ﬂux, which is the second integral in (8.31):
fe
LS ¼
Z
e
vx
@Ne
@x þ vy
@Ne
@y

T
s d:
The total element matrices are then
Ke ¼ Ke
G þ tKe
LS;
fe ¼ fe
G þ tfe
LS:
EachmatrixconsistsofapartfromtheGalerkinmethodandapartmultipliedbythestabilizationparameter
t from the least square stabilization. Thisfollowsfrom the original form (8.29), if the resulting expressions
in terms of the elements are substituted. It can be seen that the least square part of the element matrix is
symmetric.The natural boundaryconditionsare satisﬁed bythe Galerkin partof theresidual. Theessential
boundary conditions are satisﬁed by construction, as usual. The matrices are assembled in the usual
manner; this can be seen by substituting de ¼ Led.
REFERENCES
Donea, J. and Huerta, A. (2003) Finite Element Methods for Flow Problems, John Wiley & Sons, Ltd, Chichester.
Hughes, T.J.R., Franca, L.P. and Hulbert G.M. (1989) A New Finite Element Formulation for Computational Fluid
Dynamics. 8 The Galerkin Least-Squares Method for Advection-Diffusion Equations, Computer Methods in
Applied Mechanics and Engineering, 73(2), 173–179.
Problems
Problem 8.1
Consider a problem on a rectangular (2 m  1 m) domain as shown in Figure 8.18. The conductivity is
k ¼ 4 W C1. T ¼ 10 C is prescribed along the edge CD. Edges AB and AD are insulated, i.e.
q ¼ 0 W m1; along the edge DC, the boundary ﬂux is q ¼ 30 W m1 . A constant heat source is given:
s ¼ 50 W m2.
REFERENCES
209

Find the nodal temperature and nodal ﬂuxes; evaluate the element matrices by Gauss quadrature. Use a
single rectangular ﬁnite element with node numbering shown in Figure 8.19 so that the local and global
node numberings coincide.
Problem 8.2
Consider a triangular panel made of two isotropic materials with thermal conductivities of k1 ¼ 4 W C1
and k2 ¼ 8 W C1 as shown in Figure 8.20. A constant temperature of T ¼ 10 C is prescribed along the
edge BC. The edge AB is insulated and a linear distribution of ﬂux, q ¼ 15x W m1 , is applied along the
edge AC. Point source P ¼ 45 W is applied at (x ¼ 3; y ¼ 0). Plate dimensions are in meters.
For the ﬁnite element mesh, consider two triangular elements, ABD and BDC. Carry out calculations
manually and ﬁnd the temperature and ﬂux distributions in the plate.
x
y
A
B
C
D
q = 0
q = 0
q = 30
T = 10
k = 4
s = 50
Figure 8.18
Rectangular domain of Problem 8.1.
x
y
4
3
2
1
Figure 8.19
Global and local node numberings of Problem 8.1.
x
Insulated
B
k2 = 8
k1 = 4
q = 15x
D
C
A
2 
2 
T = 10
y
3
Figure 8.20
Bi-material triangular domain of Problem 8.2.
210
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

Problem 8.3
A ﬁnite element mesh consisting of a rectangular and a triangular element is shown in Figure 8.21. The
dimensions of the plate are in meters. A constant temperature T ¼ 10 C is prescribed along the boundary
y ¼ 0.AconstantandlinearboundaryﬂuxasshowninFigure8.21isappliedalongtheedgesy ¼ x þ 2and
x ¼ 0, respectively. The edge x ¼ 2 is insulated. A point source P ¼ 10 W is applied at (0, 2) m. The
material is isotropic with k ¼ 1 W C1 for element 1 and k ¼ 2 W C1 for element 2. Compute the nodal
temperatures and ﬂuxes at the two elements center points.
Problem 8.4
Consider a triangular panel as shown in Figure 8.22. All dimensions are in meters. A constant temperature
T ¼ 5 Cisprescribedalongthe boundaryy ¼ 0.Aconstantboundaryﬂuxq ¼ 10 W m1 isappliedalong
the edges x ¼ 0:5 and y ¼ x. A constant heat source s ¼ 10 W m2 is supplied over the panel and a point
source P ¼ 7 W acts at the origin. The material is isotropic with k ¼ 2 W C1.
1. Number the nodes counterclockwise with nodes on the essential boundary numbered ﬁrst. In this case
will the element matrices (Ke and f e) be any different from those of the global matrices?
2. Construct the conductance matrix.
3. Construct the boundary ﬂux matrix resulting from the ﬂux acting on the edges x ¼ 0:5 and y ¼ x.
4. Construct the source matrix consisting of uniformly distributed source s ¼ 10 and point source
P ¼ 7.
5. Calculate the unknown temperature matrix.
6. Find the unknown reactions.
2
2
2
x
y
2
1
3
4
5
q = 30
q = 0
q = 15y
P = 10
T = 10 
T = 10 
e=1
e=2
Figure 8.21
Trapezoidal domain of Problem 8.3.
x
C
A
y
B (0.5,0.5) 
T = 5
P = 7
q = 10
q = 10
Figure 8.22
Triangular domain of Problem 8.4.
REFERENCES
211

7. Calculate the ﬂux matrix.
8. What is the maximal temperature in the panel? Explain.
Problem 8.5
Implement the three-node constant strain triangular element into the heat conduction ﬁnite element
program. Note that in this case, element matrices can be computed without numerical integration. Test
the code in one of the following two ways: (a) against manual calculations for a two-element problem (see
Problem 8.4) or (b) against the MATLAB code for the quadrilateral element providedin this chapter. In the
latter case, it is critical to consider very ﬁne meshes (for instance, a 64-element mesh for the problem in
Figure 8.2 is a bare minimum requirement). This is because the results obtained with different (valid)
elements converge to the exact solution as the ﬁnite element mesh is sufﬁciently reﬁned.
Problem 8.6
Consider a chimney constructed of two isotropic materials: dense concrete (k ¼ 2:0 W C1 ) and bricks
(k ¼ 0:9 W C1 ).Thetemperatureofthehotgasesontheinsidesurfaceofthechimneyis140 C,whereas
the outside is exposed to the surrounding air, which is at T ¼ 10 C. The dimensions of the chimney (in
meters) are shown below. For the analysis, exploit the symmetry and consider 1/8 of the chimney cross-
sectional area. Consider a mesh of eight elements as shown below. Determine the temperature and ﬂux in
the two materials.
Analyze the problem with 2  2, 4  4 and 8  8 quadrilateral elements for 1/8 of the problem domain.
A 2  2 ﬁnite element mesh is shown in Figure 8.23. Symmetry implies insulated boundary conditions on
edges AD and BC. Note that element boundaries have to coincide with the interface between the concrete
and bricks.
Problem 8.7
Auniformheatsourceisdistributedoveracirculardomain0 	 r 	 R,andthetemperatureattheoutsideis
zero, i.e. TðRÞ ¼ 0.
a. Using sixfold symmetry, solve the problem using a single 3-node triangular element as shown in
Figure 8.24. Compare this solution to the exact solution TðrÞ ¼ s=4kðR2  r2Þ; also compare the
gradient.
C 
C o o n n c c r r e e t t e e             k k = 
= 2 2 . . 0 0     
B 
B r r i i c c k k s s             k k = 
= 0 0 . . 9 9     
24 
0.6 
0.4 
0.2 
0.2 
0.4 
1 
2 
3 
4 
0 
q = 
 (symmetry) 
0 
q = 
(symmetry) 
T=10 
T=140 
A 
B 
C 
D 
Figure 8.23
Chimney cross section and a four-element ﬁnite element mesh for 1=8 of the problem domain.
212
FINITE ELEMENT FORMULATION FOR MULTIDIMENSIONAL

b. Repeat problem 2 with the 4-element mesh shown. Assume that nodes 4, 5 and 6 are on T, so that
T4 ¼ T5 ¼ T6 ¼ 0.
c. Repeat problem 2 with a single six-node triangular element using the same nodal positions. Evaluate
only those parts of Ke and fe that are needed.
R
y
1
2
3
(a)
(b)
Lines of
symmetry
Lines of
symmetry
All triangles  
are equilateral 
1
2
3
4
5
6
Figure 8.24
(a) Problem 1: one-element mesh. (b) Problem 2: four-element mesh.
REFERENCES
213


9
Finite Element Formulation for
Vector Field Problems – Linear
Elasticity
The discipline underlying linear stress analysis is the theory of elasticity. Both linear and nonlinear
elasticity have been studied extensively over the past three centuries, beginning with Hooke, a contem-
poraryof Newton. Hookeformulated what has come tobe knownas Hooke’s law, the stress–strain relation
for linear materials. Linear elasticity is used for most industrial stress analyses, as under operating
conditions most products are not expected to undergo material or geometric nonlinearities.
Linear elasticity also deals with many important phenomena relevant to materials science, such as the
stress and strain ﬁelds around cracks and dislocations. These are not considered in this course. We start by
presenting the basic assumptions and governing equations for linear elasticity in Section 9.1, followed by
the exposition of strong and weak forms in Section 9.2. Finite element formulation for linear elasticity is
then given in Section 9.3. Finite element solutions for linear elasticity problems in 2D concludes this
chapter.
9.1
LINEAR ELASTICITY
The theory of linear elasticity hinges on the following four assumptions:
1. deformations are small;
2. the behavior of the material is linear;
3. dynamic effects are neglected;
4. no gaps or overlaps occur during the deformation of the solid.
In the following, we discuss each of these assumptions.
The ﬁrst assumption is also made in any strength of materials course that is taught at the undergraduate
level. This assumption arises because in linear stress analysis, the second-order terms in the strain–
displacement equations are neglected and the body is treated as if the shape did not change under the
inﬂuence of the loads. The absence of change in shape is a more useful criterion for deciding as to when
linear analysis is appropriate: when the application of the forces does not signiﬁcantly change the
conﬁguration of the solid or structure, then linear stress analysis is applicable. For structures that are large
enough so that their behavior can readily be observed by the naked eye, this assumption implies that
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

the deformations of the solid should not be visible. For example, when a car passes over a bridge, the
deformations of the bridge are invisible (at least we hope so). Similarly, wind loads on a high-rise building,
although often felt by the occupants, result in invisible deformations. The deformations of an engine block
due to the detonations in the cylinders are also invisible. On the other hand, the deformation of a blank in a
punch press is readily visible, so this problem is not amenable to linear analysis. Other examples that
require nonlinear analysis are
a. the deformations of a car in a crash;
b. the failure of an earth embankment;
c. the deformations of skin during a massage.
As a rough rule, the deformations should be of the order of 102 of the dimensions of a body to apply linear
stress analysis. As we will see later, this implies that the terms that are quadratic in the deformations are of
the order of 102 of the strains, and consequently, the errors due to the assumption of linearity are of the
order of 1%.
Manysituations are just barelylinear,and the analystmust exercise signiﬁcant judgmentas towhether a
linear analysis should be trusted. For example, the deformations of a diving board under a diver are quite
visible, yet a linear analysis often sufﬁces. Sometimes these decisions are driven by practicality. For
example, you have probably seen the large motions of the wingtip of a Boeing 747 on takeoff. Would a
linear analysis be adequate? It turns out that the design of the aircraft is still primarily analyzed by linear
methods, because the errors due to the assumption of linearity are small and thousands of loadings need to
be considered, and this becomes much more complex with nonlinear analysis.
The linearity of material behavior is also a matter of judgment. Many metals exhibit a relationship
betweenstressandstrainthatdeviatesfromlinearitybyonlyafewpercentuntiltheonsetofplasticyielding.
Until the yield point, a linear stress–strain law very accurately reproduces the behavior of the material.
Beyond theyield point, a linear analysis is useless. On the contrary, materials such asconcrete and soils are
often nonlinear even for small strains, but their behavior can be ﬁt by an average linear stress–strain law.
The assumption of static behavior corresponds to assuming that the accelerations sustained during the
loading are small. This statement by itself gives no meaningful criterion, as one can immediately ask,
‘small compared to what?’ There are several ways to answer this question. One way is to consider the
d’Alembert force f d’Alem due to the acceleration, which is given by
jf d’Alemj ¼ jMaj;
where M is the mass of the body and a is the acceleration; we have put absolutevalue signs on both sides of
the equation becausewe are only interested in magnitudes. If the d’Alembert forces are small compared to
the loads, then dynamic effects are also small. The dynamic effect can be viewed as the overshoot that you
will see on a ﬂoor scale if you jump on it compared to stepping on it slowly.
An easier way to judge the appropriateness of a static analysis, i.e. neglecting dynamic effects, is to
comparethetimeofloadapplicationtothelowestperiodofthesolidorstructure.Thelowestperiodisthetime
forastructuretocompleteonecycleofvibrationwhenvibratingfreely.Ifthetimeinwhichtheloadisapplied
is large compared to the period associated with the lowest frequency, then static analysis is applicable.
The fourth assumption states that as the solid deforms, it does not crack or undergo any interpenetration
of material; in short, no gaps or overlaps develop in the body. Interpenetration of material is generally not
possible, unless one material is liqueﬁed or vaporized, so this part of the assumption is just common sense.
The ﬁrst part of the assumption states that the material does not crack or fail in some other way. Obviously,
materials do fail, but linear stress analysis is then not appropriate; instead, special nonlinear ﬁnite element
methods that account for cracking must be used.
The last assumption can be interpreted in terms of continuity. It states that the displacement ﬁeld is
smooth. The order of smoothness that is required is something we have already learned and is associated
216
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

withtherequirementsoftheintegrabilityoftheweakform,butphysicallyitcanbejustiﬁedbyrequiringthe
deformation to be such that there are no gaps or overlaps.
The requirements of a linear stress analysis solution are closely related to the assumptions. The
requirements are
a. the body must be in equilibrium;
b. it must satisfy the stress–strain law;
c. the deformation must be smooth.
In addition to the above, in order towrite a stress–strain law, we need a measure of the strain that expresses
the strain in terms of the deformation, which is called the strain–displacement equation. Equilibrium
requires that the sum of the forces at any point of the solid must vanish. The other two requirements have
already been discussed.
9.1.1
Kinematics
The displacement vector in two dimensions is a vector with two components. We will use a Cartesian
coordinatesystem,sothecomponentsofthedisplacementarethex-componentandthey-component.Itcan
be written in matrix and vector forms as
u ¼
ux
uy


;
~u ¼ ux~i þ uy~j;
ð9:1Þ
where the subscript indicates the component.
Figures 9.1(a) and (b), depict the deformation of a control volume  x  y in the x and y directions
respectively. The combined deformation is given in Figure 9.1(c). Under the assumption of small
displacement gradients, we can use three independent variables to describe the deformation of a control
volume. These variables correspond to the strains.
Theextensionalstrainsareexx andeyy;sometimestherepeatedsubscriptsaredroppedandtheextensional
strains are written as ex and ey. The expressions for these strains can be derived exactly like the one-
dimensional extensional strain. The extensional strains ex and ey are the changes in the lengths of the
inﬁnitesimalline segments inthexandydirections,x andy,respectively,dividedbytheoriginallengths
of the line segments. Based on this deﬁnition, we obtain the following relations for the extensional strains:
exx ¼ lim
x!0
uxðx þ x; yÞ  uxðx; yÞ
x
¼ @ux
@x ;
eyy ¼ lim
y!0
uyðx; y þ yÞ  uyðx; yÞ
y
¼ @uy
@y ;
ð9:2Þ
The shear strain,gxy, measures the change in angle between the unit vectors in the x and y directions in units
of radians:
gxy ¼ lim
y!0
uxðx; y þ yÞ  uxðx; yÞ
y
þ lim
x!0
uyðx þ x; yÞ  uyðx; yÞ
x
¼ @uy
@x þ @ux
@y ¼ a1 þ a2:
ð9:3Þ
whereai areshowninFigure9.1.Twoformsoftheshearstrainappearcommonlyinﬁniteelementsoftware:
the engineering shear strain gxy given above and the tensor shear strain exy ¼ ð1=2Þgxy.
LINEAR ELASTICITY
217

Note that if a1 ¼ a2, the shear strain vanishes. The resulting deformation is depicted in Figure 9.2. It
can be seen that the control volume undergoes axial elongations in addition to the rotation. The rotation of
the control volume in two dimensions, denoted by !xy, is computed by
!xy ¼ 1
2
@ux
@y  @uy
@x


¼ 1
2 ða2  a1Þ:
ð9:4Þ
Foraninﬁnitesimaldisplacementﬁeld,~uðx; yÞ,therotation!xy isverysmall,andthereforeitdoesnotaffect
the stress ﬁeld.
x
y
x
y
x
y
(a)
(b)
(c)
ux(x + ∆ x,y + ∆ y)
uy(x,y + ∆ y)
u(x,y + ∆ y)
uy(x + ∆ x,y + ∆ y)
u(x + ∆ x,y + ∆ y)
u(x + ∆ x,y)
u(x ,y)
ux(x + ∆ x,y)
ux(x,y)
uy(x,y)
∆ y
∆ x
∆ y
∆ x
α2
α2
α2
α1
α1
α1
Figure 9.1
Deformation of a control volume: (a) deformation in x due to ~rux; (b) deformation in y due to ~ruy;
(c) deformation in x and y.
x
y
α1
α2
u(x + ∆ x,y + ∆ y)
u(x + ∆ x,y)
u(x,y + ∆ y)
u(x,y)
Figure 9.2
Axial strains and rotation of a control volume.
218
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

In ﬁnite element methods, the strains are usually arranged in a column matrix e, as shown below:
e ¼ ½exx eyy gxyT:
ð9:5Þ
Equations (9.2)–(9.3) can be written in terms of the displacements as a single matrix equation:
e ¼
exx
eyy
gxy
2
4
3
5 ¼ =Su ¼ =S
ux
uy


;
ð9:6Þ
where =S is a symmetric gradient matrix operator
=S ¼
@=@x
0
0
@=@y
@=@y
@=@x
2
4
3
5:
ð9:7Þ
9.1.2
Stress and Traction
Stresses in two dimensions correspond to the forces per unit area acting on the planes normal to the x or y
axes(these are called tractions). The traction on the planewith the normal vector~n aligned along the x-axis
is denoted by ~x and its vector form is ~x ¼ xx~i þ xy~j. Likewise, the traction with the outer normal unit
vector~n aligned along the y-axis is denoted by ~y and its corresponding components are ~y ¼ yx~i þ yy~j.
Wewillreferto~x and~y asstressvectorsactingontheplanesnormaltothexandydirections,respectively.
Thestressstateinatwo-dimensionalbodyisdescribedbytwonormalstressesxx andyy andshearstresses
xy and yx as illustrated in Figure 9.3. From moment equilibrium in a unit square, it can be shown that
xy ¼ yx, so these stresses are identical.
Figure 9.3 depicts stress components acting on two planes, the normals pointing in the positive x and y
directions. Positive stress components act in the positive direction on a positive face. The ﬁrst subscript on
the stress corresponds to the direction of the normal to the plane; the second subscript denotes the direction
of the force. The normal stresses are often written with a single subscript as x and y.
Stresses can be arranged in a matrix form similarly to strains:
rT ¼ ½xx
yy
xy:
ð9:8Þ
Occasionally, it is convenient to arrange stress components in a 2  2 symmetric matrix s as
s ¼
xx
xy
xy
yy


:
ð9:9Þ
x
y
σyy
σy
σyx
σxy
σxx
−σy
x
σ
−σx
Figure 9.3
Stress components.
LINEAR ELASTICITY
219

The stress vectors ~x and ~y can be conveniently used to obtain the tractions on any surface of the body.
Tractions, like stresses, are forces per unit area, but they are associated with a speciﬁc surface, whereas the
stressesprovideinformationabouttractionsonanysurfaceatapoint.Therelationshipbetweenstressesand
tractions is written in terms of the unit normal to the surface~n, as illustrated in Figure 9.4.
ConsiderthetriangularbodyshowninFigure9.4.Thethicknessofthetriangleistakentobeunity.Atthe
surfacewiththeunitnormalvector~n,thetractionvectoris~t.Ontheplanesnormaltothecoordinateaxes,the
traction vectors are ~x and ~y. The components of the unit normal vector are~n given by
~n ¼ nx~i þ ny~j:
The force equilibrium of the triangular body shown in Figure 9.4 requires that
~t d  ~x dy  ~y dx ¼ ~0:
Dividing the above equation by d and noting that dy ¼ nx d and dx ¼ ny d, we obtain
~t  ~xnx  ~yny ¼ ~0:
Multiplying the above by unit vectors~i and~j yields, respectively,
tx ¼ xxnx þ xyny ¼ ~x ~n;
ty ¼ xynx þ yyny ¼ ~y ~n;
ð9:10Þ
where we have used the relations tx ¼~t ~i, ty ¼~t ~j, xx ¼ ~x ~i, xy ¼ ~y ~i, xy ¼ ~x ~j and yy ¼ ~y ~j.
Equation (9.10) can be written in the matrix form as
t ¼ sn:
ð9:11Þ
9.1.3
Equilibrium
Consider an arbitrarily shaped body shown in Figure 9.5 of unit thickness; the body force and the surface
traction are assumed to be acting in the xy-plane.
t
n
ny j
nx i
dy
dΓ
dx
x
y
−σx
−σy
Figure 9.4
Relationship between stress and traction.
220
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

The forces acting on the body are the tractionvector~t along the boundary  and the body force~b per unit
volume.Thebodyforceandthetractionvectorsarewrittenas ~b ¼ bx~i þ by~j and~t ¼ tx~i þ ty~j,respectively.
Examplesofthebodyforcesaregravityandmagneticforces.Thermal stressesalsomanifestthemselvesas
body forces.
Next, consider the equilibrium of the inﬁnitesimal domain of unit thickness depicted in Figure 9.5(b).
For a static problem (no dynamic effects), the equilibrium equation on the inﬁnitesimal domain is
given by
 ~x x  x
2 ; y


y þ ~x x þ x
2 ; y


y
 ~y x; y  y
2


x þ ~y x; y þ y
2


x þ~bðx; yÞxy ¼ 0:
Dividing the above by xy, taking the limit as x ! 0, y ! 0 and recalling the deﬁnition of partial
derivatives,
lim
x!0
~x x þ x
2 ; y


 ~x x  x
2 ; y


x
¼ @~x
@x ;
lim
y!0
~y x; y þ y
2


 ~y x; y  y
2


y
¼ @~y
@y :
Combining the above two equations yields the equilibrium equation:
@~x
@x þ @~y
@y þ~b ¼ 0:
ð9:12Þ
Multiplying (9.12) by unit vectors~i and~j gives two equilibrium equations:
@xx
@x þ @xy
@y þ bx ¼ 0;
@yx
@x þ @yy
@y þ by ¼ 0;
or in the vector form:
~r  ~x þ bx ¼ 0;
~r  ~y þ by ¼ 0:
ð9:14Þ
n
t
b
Ω
Γ
∆y
(
, )
2
∆x
∆x
x
y
−σx
σy
σx
−σy
−
−
( ,
)
2
y
x y
( ,
)
2
∆y
∆y
∆x
x y +
( , )
O x y
(a)
(
, )
2
x
x
y
+
(b)
Figure 9.5
Problem deﬁnition: (a) domain of the unit-thickness plate and (b) traction vectors acting on the inﬁnite-
simal element.
ð9:13Þ
LINEAR ELASTICITY
221

The equilibrium equations will also be considered in the matrix form. If you consider the transpose of the
symmetric gradient operator given in (9.7) and the column matrix form of the stress:
=T
S ¼
@
@x
0
@
@y
0
@
@y
@
@x
2
664
3
775;
r ¼
xx
yy
xy
2
4
3
5;
then the matrix form of equilibrium equations (9.13) can be written as
=T
Sr þ b ¼ 0:
ð9:15Þ
Thefactthattheequilibriumequation(9.15)isthetransposeofthestrain–displacementequation(9.6)isan
interesting feature that characterizes what are called self-adjoint (or symmetric) systems of partial
differential equations. The heat conduction (or diffusion) equations are similarly self-adjoint. The self-
adjointness of these partial differential equations is the underlying reason for the symmetry of the discrete
equations, i.e. the stiffness matrix and the conductance matrix.
9.1.4
Constitutive Equation
Now let us consider the relation between stresses and strains, which is called the constitutive equation.
Examples of constitutive equations are elasticity, plasticity, viscoelasticity, viscoplasticity and creep.
Here, we focus on the simplest constitutive theory, linear elasticity.
Recall that in one dimension, a linear elastic material is governed by Hooke’s law  ¼ Ee, where the
material constant E is Young’s modulus. In two dimensions, the most general linear relation between the
stress and strain matrices can be written as
r ¼ De;
ð9:16Þ
where D is a 3  3 matrix. This expression is called the generalized Hooke’s law. It is always a symmetric,
positive-deﬁnitematrix;these two propertiesare due toenergyconsiderations, whichwill notbe discussed
here but can be found in any text on continuum mechanics or elasticity.
In two-dimensional problems, the matrix D depends on whether one assumes a plane stress or a plane
strain condition. These assumptions determine how the model is simpliﬁed from a three-dimensional
physical body to a two-dimensional model. A plane strain model assumes that the body is thick relative to
the xy-plane in which the model is constructed. Consequently, the strain normal to the plane, ez, is zero and
the shear strains that involve angles normal to the plane, gxz and gyz, are assumed to vanish. A plane stress
model is appropriate when the object is thin relative to the dimensions in the xy-plane. In that case, we
assume that no loads are applied on the z-faces of the body and that the stress normal to the xy-plane, zz, is
assumed to vanish. The physical arguments for these assumptions are as follows. If a body is thin, as the
stress zz must vanish on the outside surfaces, there is no mechanism for developing a signiﬁcant nonzero
stress zz. On the other hand, when a body is thick, signiﬁcant stresses can develop on the z-faces, in
particular the normal stress zz can be quite large.
The D matrix depends on the symmetry properties of the material. An isotropic material is a material
whose stress–strain law is independent of the coordinate system, which means that regardless of the
orientation of the coordinate system, the elasticity matrix is the same. Many materials, such as most steels,
aluminums, soil and concrete, are modeled as isotropic, even though manufacturing processes, such as
sheet metal forming, may induce some anisotropy.
222
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

For an isotropic material, the D matrix is given by
Plane stress:
D ¼
E
1  2
1

0

1
0
0
0
ð1  Þ=2
2
4
3
5:
Plane strain:
D ¼
E
ð1 þ Þð1  2Þ
1  

0

1  
0
0
0
ð1  2Þ=2
2
4
3
5:
As can be seen from the above, for an isotropic material, the Hookean matrix D has two independent
material constants: Young’s modulus E and Poisson’s ratio . Note that for plane strain, as  ! 0:5, the
Hookean matrix becomes inﬁnite. A Poisson’s ratio of 0.5 corresponds to an incompressible material.
This behavior of the Hookean matrix as the material tends toward incompressibility and other features
of ﬁnite elements make the analysis for incompressible and nearly incompressible materials more
difﬁcult than for compressible materials. Therefore, special elements must be used for incompressible
materials. These difﬁculties do not occur for plane stress problems, but they do occur in three
dimensions.
The Hookean matrix for an isotropic material can also be written in terms of alternative material
constants, such as the bulk modulus K ¼ E=3ð1  Þ and the shear modulus G ¼ E=2ð1 þ Þ.
In some circumstances, a two-dimensional model is appropriate but the standard plane stress or plane
strain assumptions are not appropriate because although the z components of the stress or strain are
constant,theyarenonzero.Thisiscalledastateofgeneralizedplanestressorgeneralizedplanestrainwhen
zz or ezz are constant, respectively.
9.2
STRONG AND WEAK FORMS
Let us summarize the relations established so far for 2D linear elasticity.
Equilibrium equation:
=T
Sr þ b ¼ 0;
or
~r  ~x þ bx ¼ 0
and
~r  ~y þ by ¼ 0:
ð9:17Þ
Kinematics equation (strain–displacement relation):
e ¼ =Su:
Constitutive equation (stress–strain relation):
r ¼ De:
Asinonedimension,weconsidertwotypesofboundaryconditions:Theportionoftheboundarywherethe
tractionisprescribedisdenotedbyt,andtheportionoftheboundarywherethedisplacementisprescribed
is denoted by u. The traction boundary condition is written as
sn ¼ t on t;
or
~x ~n ¼ tx
and
~y ~n ¼ ty
on
t:
ð9:18Þ
STRONG AND WEAK FORMS
223

The displacement boundary condition is written as
u ¼ u
on
u;
or
~u ¼ ~u
on
u:
ð9:19Þ
The displacement boundary condition is an essential boundary condition, i.e. it must be satisﬁed by the
displacement ﬁeld. The traction boundary condition is a natural boundary condition. As before, the
displacement and traction both cannot be prescribed on any portion of the boundary, so
u \ t ¼ 0:
However, on any portion of the boundary, either the displacement or the traction must be prescribed,
so
u [ t ¼ :
Wesummarizethestrongformforthelinearelasticityproblemin2DinBox9.1inthemixedvector–matrix
notation, relevant for derivation of the weak form.
Box 9.1. Strong form for linear elasticity
ðaÞ
~r  ~x þ bx ¼ 0
and
~r  ~y þ by ¼ 0
on
;
ðbÞ
r ¼ D=Su;
ðcÞ
~x ~n ¼ tx
and
~y ~n ¼ ty
on
t;
ðdÞ
~u ¼ ~u
on
u:
ð9:20Þ
To obtain the weak form, we ﬁrst deﬁne the admissible weight functions and trial solutions as in Section
3.5.2. We then premultiply the equilibrium equations in the x and y directions (9.20a) and the two natural
boundary conditions (9.20c) by the corresponding weight functions and integrate over the corresponding
domains, which gives
ðaÞ
Z

wx ~r  ~x d þ
Z

wxbx d ¼ 0
8wx 2 U0;
ðbÞ
Z

wy ~r  ~y d þ
Z

wyby d ¼ 0
8wy 2 U0;
ðcÞ
Z
t
wxðtx  ~x ~nÞ d ¼ 0
8wx 2 U0;
ðdÞ
Z
t
wyðty  ~y ~nÞ d ¼ 0
8wy 2 U0;
ð9:21Þ
where
w ¼
wx
wy


;
~w ¼ wx~i þ wy~j:
224
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Green’s theorem is applied (see Chapter 6) to the ﬁrst term in equations (9.21a) and (9.21b), which
yields
Z

wx ~r  ~x d ¼
I

wx~x ~n d 
Z

~rwx  ~x d;
Z

wy ~r  ~y d ¼
I

wy~y ~n d 
Z

~rwy  ~y d:
ð9:22Þ
Adding the two equations in (9.22) and recalling that the weight functions wx and wy vanish on u yields
Z

ð ~rwx  ~x þ ~rwy  ~yÞ d ¼
I
t
ðwx~x ~n þ wy~y ~nÞ d þ
Z

ðwxbx þ wybyÞ d:
ð9:23Þ
Substituting (9.21c) and (9.21d) into (9.23) and writing the RHS in (9.23) in the vector form gives
Z

ð ~rwx  ~x þ ~rwy  ~yÞ d ¼
I
t
~w ~t d þ
Z

~w ~b d:
ð9:24Þ
Expanding the integrand on the LHS of (9.24) yields
~rwx  ~x þ ~rwy  ~y ¼ @wx
@x xx þ @wx
@y xy þ @wy
@x xy þ @wy
@y yy
¼
@wx
@x

 @wy
@y

 @wx
@y þ @wy
@x




xx
yy
xy
2
64
3
75 ¼ ð=SwÞTr:
ð9:25Þ
Inserting (9.25) into (9.24) and writing the RHS of (9.24) in the matrix form gives
Z

ð=SwÞTr d ¼
Z
t
wTt d þ
Z

wTb d
8w 2 U0:
After the substitution of (9.20b) for r the weak form in two dimensions can be written as follows:
Find u 2 U such that
Z

ð=SwÞTD=Su d ¼
Z
t
wTt d þ
Z

wTb d
8w 2 U0;
where
U ¼ fuju 2 H1 ; u ¼ u on ug;
U0 ¼ fwjw 2 H1 ; w ¼ 0 on ug :
ð9:26Þ
9.3
FINITE ELEMENT DISCRETIZATION
Consider a problem domain  with boundary  discretized with two-dimensional elements (triangles or
quadrilaterals) as shown in Figure 9.6.; the total number of elements is denoted by nel.
The x and y components of the displacement ﬁeld u ¼ ½ux uyT are generally approximated by the same
shape functions, although in principle different shape functions could be used for each of the components.
FINITE ELEMENT DISCRETIZATION
225

There are two degrees-of-freedom per node corresponding to the two components of the global
displacements, so the nodal displacement matrix is:
d ¼
ux1
uy1
ux2
uy2
. . .
uxnnp
uynnpT
h
where nnp is the number of nodes in the ﬁnite element mesh. The displacement ﬁeld in the ﬁnite element is
written in terms of the shape functions, which from Chapter 7 we know depend on the type of element and
the number of nodes. The ﬁnite element approximation of the trial solution and weight function on each
element can be expressed by:
uðx; yÞ  ueðx; yÞ ¼ Ne x; y
ð
Þde
ðx; yÞ 2 e
wT x; y
ð
Þ  weT x; y
ð
Þ ¼ weTNe x; y
ð
ÞT
ðx; yÞ 2 e
ð9:27Þ
where element shape function matrix Ne in Eq. (9.27) is given as
Ne ¼
Ne
1
0
Ne
2
0
. . .
Ne
nen
0
0
Ne
1
0
Ne
2
. . .
0
Ne
nen


and de ¼
ue
x1
ue
y1
ue
x2
ue
y2
. . .
ue
xnen
ue
ynen

T
are the element nodal displacements and
we ¼
we
x1
we
y1
we
x2
we
y2
. . .
we
xnen
we
ynen T

are the element nodal values of weight functions.
Recall from Chapter 6 that the ﬁnite element approximation is C0 continuous, i.e. it is smooth over
element domains but have kinks at the element boundaries. Therefore, the integralover in theweak form
(9.26) is computed as a sum of integrals over element domains e
X
nel
e¼1
Z
e =SweTDe=Sue d 
Z
e
t
weTt d 
Z
e weTb d
(
)
¼ 0
ð9:28Þ
Nextwe expressthestrains intermsofthe elementshapefunctionsand thenodaldisplacements. Recallthe
strain-displacement equations (9.6) expressed in terms of the symmetric gradient operator. Applying the
symmetric gradient operator to Ne gives
e ¼
exx
eyy
gxy
2
4
3
5  ee ¼ =Sue ¼ =SNede ¼ Bede;
ð9:29Þ
on Γt
Γu
τ 
Ω
x
y
on
n = t
u = u
Figure 9.6
Finite element mesh in two dimensions.
226
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

where the strain–displacement matrix Be is deﬁned as
Be  =SNe ¼
@Ne
1
@x
0
@Ne
2
@x
0
  
@Ne
nen
@x
0
0
@Ne
1
@y
0
@Ne
2
@y
  
0
@Ne
nen
@y
@Ne
1
@y
@Ne
1
@x
@Ne
2
@y
@Ne
2
@x
  
@Ne
nen
@y
@Ne
nen
@x
2
666666664
3
777777775
:
The derivatives of weight functions are:
ð=SweÞT ¼ ðBeweÞT ¼ weTBeT:
ð9:30Þ
Substituting (9.30), (9.29) and (9.27) into (9.28) and recalling that de ¼ Led, weT ¼ wTLeT yields
wT
X
nel
e¼1
LeT
Z
e
BeTDeBe d Led 
Z
e
t
NeTt d 
Z
e
NeTb d
2
64
3
75
8
>
<
>
:
9
>
=
>
;
¼ 0
8wF:
ð9:31Þ
In the above, we have replaced the arbitrary weight functions wðx; yÞ by arbitrary parameters wF. wF is the
portionofwcorrespondingtonodesthatarenotonanessentialboundary.Followingthederivationoutlined
in Chapters 5 and 8, the element matrices are given as follows:
Element stiffness matrix:
Ke ¼
Z
e
BeTDeBe d:
ð9:32Þ
Element external force matrix:
fe ¼
Z
e
NeTb d
|ﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄ}
fe

þ
Z
e
t
NeTt d
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
fe

;
ð9:33Þ
where fe
 and fe
 in (9.33) are the body and boundary force matrices.
The weak form can then be written as
wT
X
nel
e¼1
LeTKeLe
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
K
0
B
B
B
B
@
1
C
C
C
C
A
d 
X
nel
e¼1
LeTfe
|ﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄ}
f
0
B
B
B
B
@
1
C
C
C
C
A
2
66664
3
77775
¼ 0
8wF:
ð9:34Þ
FINITE ELEMENT DISCRETIZATION
227

Using (9.32) and (9.33) and the assembly operations (5.13) and (5.14), the system (9.34) reduces to
wTðKd  fÞ ¼ 0
8wF:
ð9:35Þ
Equation (9.35) can be written as
wTr ¼ 0
8wF:
ð9:36Þ
Partitioning Equation (9.36) into E- and F-nodes gives
wT
FrF þ wT
ErE ¼ 0
8wF:
AswE ¼ 0andwF isarbitrary,itfollowsthatrF ¼ 0.Consequently,theaboveequationcanbeconveniently
rewritten as
KE
KEF
KT
EF
KF

 dE
dF


¼
fE þ rE
fF


;
ð9:37Þ
where KE, KF and KEF are partitioned to be congruent with the partition of d and f. Equation (9.37) is
solved using the two-step partition approach discussed in Chapter 5.
9.4
THREE-NODE TRIANGULAR ELEMENT
The triangular three-node element is illustrated in Figure 9.7. It is a linear displacement element.
The strains are constant in the element. The nodes must be numbered counterclockwise as shown in the
ﬁgure.
Each node has two degrees of freedom, so the column matrix de consists of six terms:
de ¼ ½ue
x1; ue
y1; ue
x2; ue
y2; ue
x3; ue
y3T:
ð9:38Þ
The displacement ﬁeld in the element can then be expressed in the form of
ux
uy

e
¼
Ne
1
0
Ne
2
0
Ne
3
0
0
Ne
1
0
Ne
2
0
Ne
3


de:
2
2
e
x
u
2
e
yu
3
e
x
u
3
e
yu
1
e
x
u
1
1
e
yu
3
Figure 9.7
A single triangular ﬁnite element.
228
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Applying the symmetric gradient operator (9.6) gives
exx
eyy
gxy
2
4
3
5
e
¼
Ne
1;x
0
Ne
2;x
0
Ne
3;x
0
0
Ne
1;y
0
Ne
2;y
0
Ne
3;y
Ne
1;y
Ne
1;x
Ne
2;y
Ne
2;x
Ne
3;y
Ne
3;x
2
4
3
5de;
ð9:39Þ
where Ne
I;x ¼ @Ne
I
@x and Ne
I;y ¼ @Ne
I
@y . Using the relations given in Chapter 7, it follows that
ee ¼
exx
eyy
gxy
2
4
3
5
e
¼ 1
2Ae
ye
23
0
ye
31
0
ye
12
0
0
xe
32
0
xe
13
0
xe
21
xe
32
ye
23
xe
13
ye
31
xe
21
ye
12
2
4
3
5de;
ð9:40Þ
where xe
IJ ¼ xe
I  xe
J, which deﬁnes the Be matrix for the element. It can be seen that as expected, the Be
matrix is not a function of x or y, i.e. the strain is constant in the element.
The stiffness matrix is given by (9.32):
Ke ¼
Z
e
BeTDeBed:
In most cases, for a low-order element such as this, the material properties are assumed constant in the
element. Consequently, the integrand is a constant, and for an element of unit thickness, we have
Ke ¼ AeBeTDeBe:
The stiffness matrix is 6  6, and it is quite large for manual computations, so it is usually evaluated by
computer.
9.4.1
Element Body Force Matrix
The element body force matrix is given by (9.21):
fe
 ¼
Z

NeTb d:
ð9:41Þ
There are two ways of evaluating this matrix:
(i) by direct numerical integration, and
(ii) by interpolatingb,usuallywithalinearfunction,andintegratingtheresult inthe closedform.Notethat
indirect integration,interpolationisstilloftenrequiredasthe bodyforces mayonlybegiven atdiscrete
points and interpolation is required to evaluate the integral.
Evaluation of the matrix in the closed form is extremely difﬁcult unless triangular coordinates are used,
so we will use them here. We interpolate the body force in the element by the linear shape functions in the
triangular coordinates as
b ¼
bx
by


¼
X
3
I¼1
N3T
I
bxI
byI


;
ð9:42Þ
THREE-NODE TRIANGULAR ELEMENT
229

where bxI and byI are the x and y components of the body force at node I. Substituting (9.42) into (9.41), we
obtain
fe
 ¼
Z
e
N3T
1
0
0
N3T
1
N3T
2
0
0
N3T
2
N3T
3
0
0
N3T
3
2
6666664
3
7777775
X
3
I¼1
N3T
I
bxI
byI


d ¼ Ae
12
2bx1 þ bx2 þ bx3
2by1 þ by2 þ by3
bx1 þ 2bx2 þ bx3
by1 þ 2by2 þ by3
bx1 þ bx2 þ 2bx3
by1 þ by2 þ 2by3
2
666664
3
777775
:
ð9:43Þ
The last step was performed by using the integration formulas as given in Section 7.8.2.
9.4.2
Boundary Force Matrix
The boundary force matrix is given by
fe
 ¼
Z
e
t
NeTt d:
ð9:44Þ
Asforthebodyforces,theycanbeevaluatedbydirectintegrationorbyinterpolation.Weillustratethelatter
approach for a linearly interpolated traction.
To simplify the explanation, consider the triangular element shown in Figure 9.8; in the ﬁgure, the
traction is applied to the edge joining nodes 1 and 2, but the results are easily applied to any node numbers.
WeknowfromtheKronecker deltapropertyofshapefunctionsthatNe
3 vanishesatnodes1and2,andasthe
shape function is linear along the edge, it vanishes along the entire edge. Furthermore, N2L
1 and N2L
2 are
linear along the edge and can be written in terms of the edge parameter  as
N2L
1
¼ 1  ;
N2L
2
¼ :
The integral (9.44) then becomes
fe
 ¼
Z1
0
1  
0
0
1  

0
0

0
0
0
0
2
6666664
3
7777775
tx1ð1  Þ þ tx2
ty1ð1  Þ þ ty2

	
l d;
3
1
2
y2
element  e 
x
y
ue
y2
, f e
x1
ue
y1
, f e
x1
ue
x1
, f e
y3
ue
y3
, f e
x3
ue
x3
, f e
x2
ue
x2
, f e
Figure 9.8
Triangularthree-nodeelementshowingnodaldisplacementsandnodalforces(theyareshownascollinear
that usually are not).
230
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

where we have used d ¼ l d and changed the limits of integration to 0 to 1 (l is the length of the edge).
Note that we have used a linear interpolation of the two traction components.
The above is easily integrated in the closed form, giving
fe
 ¼ l
6
2tx1 þ tx2
2ty1 þ ty2
tx1 þ 2tx2
ty1 þ 2ty2
0
0
2
6666664
3
7777775
:
Thus, there are no nodal forces on node 3 due to the tractions on the edge connecting nodes 1 and 2. The
nodalforce at node 1 (or2)ismore heavilyweighted by the traction at node 1(or 2).For aconstant traction,
tx1 ¼ tx2 ¼ tx and ty1 ¼ ty2 ¼ ty, we obtain
fe
 ¼ l
2
tx
ty
tx
ty
0
0
2
6666664
3
7777775
;
which shows that the total forces (the thickness is unity) are split equally among the two nodes.
9.5
GENERALIZATION OF BOUNDARY CONDITIONS
Although we have subdivided the boundary into prescribed displacement and prescribed traction bound-
aries, in fact, one has substantially moreversatility in stress analysis: on any portion of the outside surface,
any component of the traction or the displacement can be prescribed. To specify this mathematically, we
denote the portion of the surface on which the ith component of the traction is prescribed by ti (the i ¼ 1
component is the x-component, the i ¼ 2 component is the y-component). Similarly, the portion of the
boundary on which the ith component of the displacement is prescribed is denoted by ui. The boundary
conditions are then written as
~x ~n ¼ tx
on
tx;
~y ~n ¼ ty
on
ty;
ux ¼ ux
on
ux;
uy ¼ uy
on
uy:
This weak form can be derived by an appropriate choice of wx and wy on the boundary. Note that the same
component of traction and displacement cannot be prescribed on any part of the boundary, so
ux \ tx ¼ 0;
uy \ ty ¼ 0:
Furthermore, for each component, either the traction or the displacement can be prescribed, so
ux [ tx ¼ ;
uy [ ty ¼ :
GENERALIZATION OF BOUNDARY CONDITIONS
231

Observe that these boundary conditions conform to the rule that any two variables that are conjugate in
work cannot be prescribed. Thus, ux and tx are conjugate in work in the sense that an increment of work is
given bydW ¼ tx dux,whereas tx and uy are notconjugateinwork,so theycanbe prescribed onanyportion
of the boundary.
Example 9.1: Illustration of boundary conditions
In the following, we describe how to specify boundary conditions for various problems. We start with
some simple idealized problems and then proceed to situations that are more realistic. For the latter,
choosing appropriate boundary conditions is often an art.
Consider the plate with a hole shown in Figure 9.9 with loads applied at the top and bottom.
Sides AD and BC are traction free, and nothing needs to be done in a ﬁnite element model to
enforce a homogeneous (zero) natural boundary condition. Sides CD and AB are also natural
boundaries, but the tractions must be incorporated in the equations through the boundary force
matrix f. However, these boundary conditions do not sufﬁce to render the system solvable, as
these boundary conditions admit rigid body motion, so there are an inﬁnite number of solutions
and K is singular. To eliminate rigid body motion, at least three nodal displacement components
must be speciﬁed so that translation and rotation of the body is prevented (corresponding to
translations in the x and y directions and rotation about the z-axis). One way to make K regular
(nonsingular) is to let
uxA ¼ uyA ¼ uyB ¼ 0:
Note that if you replace uyB ¼ 0 by uxB ¼ 0, K is still singular as rotation is not prevented. The above
conditions prevent both rigid body translation and rotation.
Another way to model this problem is to use symmetry, resulting in the model shown in
Figure 9.9(b). The lines of symmetry are FG and HK. Along a line of symmetry, the
displacement component normal to the line (or plane) of symmetry must vanish. Otherwise, as the
displacement ﬁelds in symmetric subdomains, i.e. A and B in Figure 9.9(c), are mirror images, so a
x
y
A
B
C
D
Line of
symmetry
F
G
H
K x
y
F
G
Overlap
(a)
(b)
(c)
ΩA
ΩB
Gap
Line of
symmetry
Figure 9.9
Platewith a hole: (a) a model of complete problem; (b) a model of symmetric portion; (c) an illustration
of why displacements normal to a line of symmetry must vanish.
232
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

nonzero normal displacement along the line (or plane) of symmetry results in either gaps or overlaps,
which violates compatibility. The other symmetry condition is that the shear on the line of symmetry
must vanish. To summarize, for Figure 9.9(b),
ux ¼ 0 and ty ¼ xy ¼ 0 on FG;
uy ¼ 0 and tx ¼ xy ¼ 0 on HK :
As the above traction (natural) boundary conditions are homogeneous, they are naturally satisﬁed if we
do not constrain the corresponding displacement.
Figure 9.10 shows a bracket and a simpliﬁed model, which is aimed at ﬁnding the maximum stress in
the bracket. In many cases, it would be desirable to model the bolt and vertical rod, but this would entail
substantiallymorecomputationaleffortandtheuseofcontact interfaces,whicharenonlinear.Therefore
we model them with prescribed displacements and applied loads. The boundary conditions are as
follows:
1. along AB, ux ¼ 0 and at one node uy ¼ 0;
2. the remaining surfaces are all traction free, i.e. tx ¼ ty ¼ 0, except on the segment FG.
Notethatthe frictionalforce alongABisnotmodeled;frictionis nonlinearandthe effectofthe frictional
forces would be small. Fillets are also not modeled.
Example 9.2: Quadrilateral element
Consider a linear elasticity problem on the trapezoidal panel domain as shown in Figure 9.11. The
vertical left edge is ﬁxed. The bottom and the right vertical edges are traction free, i.e. t ¼ 0.
Traction ty ¼ 20 N m1 is applied on the top horizontal edge. Material properties are Young’s
modulus E ¼ 3  107 Pa and Poisson’s ratio  ¼ 0:3. Plane stress conditions are considered. The
problem is discretized using one quadrilateral element. The ﬁnite element mesh and nodal coordi-
nates in meters are shown in Figure 9.12.
The constitutive matrix D is
D ¼
E
1  2
1

0

1
0
0
0
1  
2
2
64
3
75 ¼ 3:3  107
1
0:3
0
0:3
1
0
0
0
0:35
2
4
3
5:
A
H
B
C
D
E
x
y
F
G
(a)
(b)
Figure 9.10
A bracket and its model.
GENERALIZATION OF BOUNDARY CONDITIONS
233

The coordinate matrix is
½ xe ye ¼
xe
1
ye
1
xe
2
ye
2
xe
3
ye
3
xe
4
ye
4
2
664
3
775 ¼
0
1
0
0
2
0:5
2
1
2
664
3
775:
The Lagrangian shape functions in the parent element are
N4Q
1 ð; Þ ¼   2
1  2
  4
1  4
¼ 1
4 ð1  Þð1  Þ;
N4Q
2 ð; Þ ¼   1
2  1
  4
1  4
¼ 1
4 ð1 þ Þð1  Þ;
N4Q
3 ð; Þ ¼   1
2  1
  1
4  1
¼ 1
4 ð1 þ Þð1 þ Þ;
N4Q
4 ð; Þ ¼   2
1  2
  1
4  1
¼ 1
4 ð1  Þð1 þ Þ;
Figure 9.12
Finite element mesh for Example 9.2.
ty = −20
t on Γt  
2 m 
0.5 m 
1 m 
Figure 9.11
Problem deﬁnition of Example 9.2.
234
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

and the Jacobian matrix is given by
Je ¼
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
2
6664
3
7775
xe
1
ye
1
xe
2
ye
2
xe
3
ye
3
xe
4
ye
4
2
66664
3
77775
¼ 1
4
  1
1  
1 þ 
  1
  1
  1
1 þ 
1  


0
1
0
0
2
0:5
2
1
2
6664
3
7775 ¼
0
0:125  0:375
1
0:125 þ 0:125


:
The determinant and the inverse of the Jacobian matrix are
jJej ¼ 0:125 þ 0:375;
ðJeÞ1 ¼
1 þ 
3  
1
8
  3
0
2
6664
3
7775:
The strain–displacement matrix is
Be ¼
@N4Q
1
@x
0
@N4Q
2
@x
0
@N4Q
3
@x
0
@N4Q
4
@x
0
@N4Q
1
@y
0
@N4Q
2
@y
0
@N4Q
3
@y
0
@N4Q
1
@y
@N4Q
1
@x
@N4Q
2
@y
@N4Q
2
@x
@N4Q
3
@y
@N4Q
3
@x
@N4Q
4
@y
0
@N4Q
4
@y
@N4Q
4
@x
2
666666664
3
777777775
:
The element matrices will be integrated using 2  2 Gauss quadrature with the following coordinates in
the parent element and weights:
1 ¼  1ﬃﬃﬃ
3
p ;
2 ¼ 1ﬃﬃﬃ
3
p ;
1 ¼  1ﬃﬃﬃ
3
p ;
2 ¼ 1ﬃﬃﬃ
3
p ;
W1 ¼ W2 ¼ 1:
The stiffness matrix is
K ¼ Kð1Þ ¼
Z

BeTDeBe d ¼
Z 1
1
Z 1
1
BeTDeBejJej d d
¼
X
2
i¼1
X
2
j¼1
WiWj
Jeði; jÞ
BeTði; jÞDeBeði; jÞ:
GENERALIZATION OF BOUNDARY CONDITIONS
235

We calculate the stiffness Ke at a Gauss point ð1; 1Þ ¼ ðð1=
ﬃﬃﬃ
3
p
Þ; ð1=
ﬃﬃﬃ
3
p
ÞÞ.
@N4Q
1
@x
@N4Q
2
@x
@N4Q
3
@x
@N4Q
4
@x
@N4Q
1
@y
@N4Q
2
@y
@N4Q
3
@y
@N4Q
4
@y
2
6664
3
7775
ð1;1Þ
¼ ðJeÞ1ð1; 1Þ
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
@N4Q
1
@
@N4Q
2
@
@N4Q
3
@
@N4Q
4
@
2
66664
3
77775
ð1;1Þ
¼
0:44
0:06
0:12
0:38
0:88
0:88
0:24
0:24
"
#
:
Thus, the strain–displacement matrix at the Gauss point is given as
Beð1; 1Þ ¼
0:44
0
0:06
0
0:12
0
0:38
0
0
0:88
0
0:88
0
0:24
0
0:24
0:88
0:44
0:88
0:06
0:24
0:12
0:24
0:38
2
4
3
5:
The stiffness matrix contribution coming from the Gauss point ð1; 1Þ is
Keð1; 1Þ ¼ W1W1BeTð1; 1ÞDeBeð1; 1ÞjJeð1; 1Þj:
Repeating for the remaining three Gauss points at ð1; 2Þ, ð2; 1Þ and ð2; 2Þ yields
Ke ¼
X
2
i¼1
X
2
j¼1
Keði; jÞ
¼ 107
1:49
0:74
0:66
0:16
0:98
0:65
0:15
0:08
2:75
0:24
2:46
0:66
1:68
0:16
1:39
1:08
0:33
0:15
0:16
0:56
0:41
2:6
0:08
1:39
0:41
1:53
2
0:82
1:18
0:25
SYM
3:82
0:33
3:53
1:59
0:25
3:67
2
666666666666664
3
777777777777775
:
Wenowturntocalculatingtheforcematrix.Asthereisnobodyforce,thebodyforcematrixvanishes,i.e.
f ¼ 0. The only nonzero contribution to the boundary matrix comes from the traction applied along the
edge 1–4 of the panel. The edge 1–4 in the physical domain corresponds to  ¼ 1 in the natural
coordinate system. The boundary force matrix is integrated analytically as
fe
 ¼
Z
14
ðN4QÞTt d ¼
Z 1
¼1
ðN4QÞTð ¼ 1; Þ dt ¼
1
0
0
1
0
0
0
0
0
0
0
0
1
0
0
1
2
66666666664
3
77777777775
0
20


¼
0
20
0
0
0
0
0
20
2
66666666664
3
77777777775
:
236
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Note that the integral of N4Q
I ð ¼ 1; Þ over 1    1 is equal to one for any shape function I which
does not vanish on  ¼ 1. Assembling the boundary matrix and accounting for the reactions yields
fe
 þ re ¼
rx1
ry1  20
rx2
ry2
0
0
0
20
2
66666666664
3
77777777775
;
d ¼
0
0
0
0
ux3
uy3
ux4
uy4
2
66666666664
3
77777777775
:
The global system of equations is
107
1:49
0:74
0:66
0:16
0:98
0:65
0:15
0:08
2:75
0:24
2:46
0:66
1:68
0:16
1:39
1:08
0:33
0:15
0:16
0:56
0:41
2:6
0:08
1:39
0:41
1:53
2
0:82
1:18
0:25
SYM
3:82
0:33
3:53
1:59
0:25
3:67
2
66666666666664
3
77777777777775
0
0
0
0
ux3
uy3
ux4
uy4
2
66666666666664
3
77777777777775
¼
rx1
ry1  20
rx2
ry2
0
0
0
20
2
66666666666664
3
77777777777775
:
The reduced system of equations is
107
2
0:82
1:18
0:25
3:82
0:33
3:53
1:59
0:25
SYM
3:67
2
664
3
775
ux3
uy3
ux4
uy4
2
664
3
775 ¼
0
0
0
20
2
664
3
775;
which yields
ux3
uy3
ux4
uy4
2
664
3
775 ¼ 106
1:17
9:67
2:67
9:94
2
664
3
775
or
de ¼ 106
0
0
0
0
1:17
9:67
2:67
9:94
2
66666666664
3
77777777775
:
The resulting strains and stresses at the four Gauss points are
eeði; jÞ ¼
exx
eyy
gxy
2
64
3
75
e
ði;jÞ
¼ Beði; jÞde;
reði; jÞ ¼
xx
yy
xy
2
64
3
75
e
ði;jÞ
¼ Deeeði; jÞ;
GENERALIZATION OF BOUNDARY CONDITIONS
237

eeð1; 1Þ ¼ Beð1; 1Þde ¼ 107
3:61
0:628
39:4
2
64
3
75;
reð1; 1Þ ¼ Deeeð1; 1Þ ¼
12:5
5:64
45:5
2
64
3
75;
eeð1; 2Þ ¼ Beð1; 2Þde ¼ 107
8:82
0:628
40:3
2
64
3
75;
reð1; 2Þ ¼ Deeeð1; 2Þ ¼
28:5
6:65
46:5
2
64
3
75;
eeð2; 1Þ ¼ Beð2; 1Þde ¼ 107
11:7
3:45
2:21
2
64
3
75;
reð2; 1Þ ¼ Deeeð2; 1Þ ¼
42:0
23:0
2:55
2
64
3
75;
eeð2; 2Þ ¼ Beð2; 2Þde ¼ 107
6:65
3:46
0:95
2
64
3
75;
reð2; 2Þ ¼ Deeeð2; 2Þ ¼
18:5
4:82
1:09
2
64
3
75:
Example 9.3
We consider an elasticity problem deﬁned in Example 9.2. The domain is meshed with 16 elements. The
initialﬁniteelementmeshandthedeformedmeshareshowninFigure9.13.Auser-deﬁnedscalingfactor
(9:221  103) is used to visualize the deformation.
To obtain the fringe or contour plots of stresses, stresses are computed at element nodes and then
averaged over elements connected to the node. Alternatively, stresses can be computed at the Gauss
points where they are most accurate and then interpolated to the nodes. The user is often interested not
onlyinthe individualstress components, butalso insome overall stressvalue suchasvonMisesstress. In
the case of plane stress, the von Mises stress is given by Y ¼
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
2
1 þ 2
2  212
p
, where 1 and 2 are
principal stresses given by 1;2 ¼ xx þ yy
2

ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
xx  yy
2

2
þ2
xy
r
. Figure 9.14 plots the xx stress
contours for the 64-element mesh.
Figure 9.13
Deformed and underformed meshes (with scaling factor 9:221  103).
238
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

9.6
DISCUSSION
In this section, some characteristics of elastic solutions are presented so that you can understand the ﬁnite
element solutions better. The underlying theory is quite extensive, but, a grasp of a few basic facts will help
immensely in developing ﬁnite element models and in interpreting and checking the results.
Similarly to the steady-state heat conduction problem considered in the previous chapters, the partial
differentialequationthatgovernslinearelasticityiselliptic.Oneofthemostimportantcharacteristicsofthese
typesofequationsisthattheirsolutionsareverysmooth:discontinuitiesinthestressesoccuronlyatinterfaces
between different materials. Thus, the roughness that appears in ﬁnite element solution of stresses is an
artifact of the ﬁnite element approximation. In order to capture the discontinuities in stresses on interfaces
between different materials, it is necessary that element edges coincide with the interfaces. However, this is
quite natural in the construction of a ﬁnite element model, as specifying different material properties to
different subdomains necessitates that the element edges coincidewith the interfaces between the materials.
One characteristic of elliptic systems is that they are not sensitive to local perturbations, and as you get
away from the area of the perturbation, it has very little effect. This is known as St Venant’s principle. St
Venant’s principle implies that if you are interested in the stresses reasonably far from where the loads are
applied, it is not necessary to apply the loads as precisely as they would be applied in reality. For example,
the loads applied by awrench to a pipewould be difﬁcultto model. However, as long as the forceyou apply
tothemodelisequaltothatofthewrench,thestressesatasmalldistancefromthewrenchwouldbeaffected
to a very little extent.
Similarly,geometricerrorsinamodelhavelittleeffectonthestressesamoderatedistanceaway.Thus,if
youmodelaholewitharatherroughapproximationof10orsostraight-sidedelements,thestressesnearthe
hole can be quite erroneous, but away from the hole, the errors will be quite small.
One peculiarity of elastic solutions that can be quite troublesome if you try to obtain very accurate
solutions is that some solutions are singular, i.e. the exact stresses for these problems are inﬁnite at some
points.Singularities occurincornersoflessthan90	.Therefore,ifyoucompareaﬁnemeshsolutionwitha
Figure 9.14
xx contour in the 64-element mesh.
DISCUSSION
239

coarse mesh solution near a corner, you will often ﬁnd large differences in the stresses in the elements
immediately adjacent to the corner, no matter how ﬁne you make the mesh. The stresses in a real material
willnotbeinﬁnite,becausematerialswillnotbehavelinearlywhenthestressesgetveryhigh.Forexample,
in a metal, a sharp corner would result in a small area in which the material becomes plastic.
Anothergroupofproblemsassociatedwithsingularsolutionsisproblemswithpointloads.Forexample,if
a point load is applied to a two-dimensional model, then the exact displacement solutions to the elasticity
equations become inﬁnite at the point of the load. Again, this would mean that asyou reﬁne the mesh around
theload,thedisplacementwouldgetlargerandlarger.Inthiscase,youcannotuseargumentslikeplasticityto
argue the overall meaningfulness of the results. However, according to Saint Venant’s principle, the solution
will be close to the solution for a distributed load with a resultant equal to the point load once you get away
from the area where the point load is applied. Thus, two-dimensional solutions with point loads are also of
engineering value if the displacements in the immediate vicinity of the point load are not of interest.
In this regard, it should be stressed that a point load is an idealization of the actual loads, as a point load
model assumes that the load is applied overzero area. This idealization is adequatewhen the stresses in the
area near the load are not of primary interest. However, immediately under the point load, the stresses are
inﬁnite, which is not physically meaningful.
The stresses in a solid can be thought of as a force ﬂux: recall the analogy between heat conduction and
linear elasticity, where stress corresponds to the heat ﬂux. Stress behaves very much like a steady-state
ﬂow:wherethereareobstructions,thestressrises,particularlyaroundtheobstruction.Forexample,around
aholeinaplateundertensileload,thestressincreasessigniﬁcantlynexttothehole:thisisknownasastress
concentration.
9.7
LINEAR ELASTICITY EQUATIONS IN THREE DIMENSIONS1
Equilibrium
=T
S ¼
@
@x
0
0
@
@y
@
@z
0
0
@
@y
0
@
@x
0
@
@z
0
0
@
@z
0
@
@x
@
@y
2
66666664
3
77777775
;
r ¼
xx
yy
zz
xy
xz
yz
2
666666664
3
777777775
;
=T
Sr þ b ¼ 0:
Stress–traction relation
t ¼ sn;
s ¼ sT;
s ¼
xx
xy
xz
yx
yy
yz
zx
zy
zz
2
64
3
75;
t ¼
tx
ty
tz
2
64
3
75;
n ¼
nx
ny
nz
2
64
3
75:
1Recommended for Advanced Track.
240
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Strain–displacement relation
e ¼ =Su;
e ¼ ½exx
eyy
ezz
exy
exz
eyzT;
u ¼ ½ux
uy
uzT:
Isotropic Hooke’s law
r ¼ De;
D ¼
E
ð1 þ Þð1  2Þ
1  


0
0
0

1  

0
0
0


1  
0
0
0
0
0
0
1  2
2
0
0
0
0
0
0
1  2
2
0
0
0
0
0
0
1  2
2
2
666666666664
3
777777777775
:
Problems
Problem 9.1
Construct row 1 of the B matrix for the six-node triangle.
a. Show that for rigid body translation exx strain vanishes.
b. Let the nodal displacements be proportional to the coordinates, i.e. ux ¼ ax. Find the strain ﬁeld. Does
this answer make sense?
Problem 9.2
A three-node triangular element is subjected to linear body force in the x-direction given by
bxðxÞ ¼ bx11 þ bx22 þ bx33. Develop the expression for the nodal forces corresponding to this body
force as given in (9.43).
Problem 9.3
Consider a quadrilateral domain model of unit thickness with a single ﬁnite element as shown in
Figure 9.15. All dimensions are in meters. The traction applied on the edge 1–2 is normal to the edge
and is given by 6  n N m2, where n is the unit vector normal to the edge.
Calculate the element boundary force matrix.
1(0.6, 1.5) 
2 (0, 0)
3(1.2, 0)
6 Nm–1
4(1.2, 1.5) 
Figure 9.15
Triangular domain of Problem 9.3.
LINEAR ELASTICITY EQUATIONS IN THREE DIMENSIONS
241

Problem 9.4
Consider a rectangular panel as shown in Figure 9.16.
The panel is modeled using a plane stress linear elastic material with the following properties: Young’s
modulus E ¼ 3  1011 Pa and Poisson’s ratio  ¼ 0:3. The essential boundary conditions are
uAx ¼ uAy ¼ uBy ¼ 0:
The natural boundary conditions are as follows. Along each edge of the panel, the prescribed traction
consists of normal and lateral components, both equal to 103 N m1 as shown in Figure 9.16.
Discretize the panel using a single rectangular element as shown below. For convenience, use identical
global and local numberings as shown in Figure 9.17. Calculate nodal displacements and stresses at the
element Gauss points.
Problem 9.5
Consideraone-elementtriangularmeshshowninFigure9.18.Theboundaryconditionsareasfollows.The
edgeBCisconstrainedinyandtractionfreeinx,whereastheedgeABisconstrainedinxandtractionfreein
y. The edge AC is subject to traction normal to the edge as shown in Figure 9.18. Assume Young’s modulus
E ¼ 3  1011Pa and Poisson’s ratio  ¼ 0:3.
a. Construct the weak form corresponding to the generalized boundary conditions given in Section 9.5.
b. Construct the stiffness matrix.
c. Calculate the global force matrix.
d. Solve for the unknown displacement matrix and calculate the stress at (1.5, 1.5).
1 m
A
B
C
D
2 m 
Figure 9.16
Problem deﬁnition.
1
2
4
3
Figure 9.17
Node numbering for Problem 9.2.
242
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Problem 9.6
An elastic body subjected to temperature tends to expand. This expansion is given in the form of thermal
(prescribed) strain as
e0 ¼ aT½1
1
0T;
where a is the thermal expansion coefﬁcient (for isotropic materials) and T is the temperature. The stress
is
r ¼ Dðe  e0Þ
where the term corresponding to thermal strains is prescribed temperature data. Develop a weak form and
ﬁniteelementmatricesforthecaseofloadsarisingduetothermalexpansion.Hint:Substitutetheaboveinto
the weak form and repeat the derivation given in Section 9.3.
Problem 9.7
Repeat Example 9.2 with two triangular elements as shown in Figure 9.19.
Problem 9.8
Develop MATLAB ﬁnite element program for the three-node constant strain triangular element. Note that
in this case, element matrices can be computed without numerical integration. Test the code in one of the
Figure 9.19
Quadrilateral domain meshed with two triangular elements.
3.0 m
A
B
C
x
y
3.0 m
15 Nm–2
Figure 9.18
Triangular domain with mixed boundary conditions.
LINEAR ELASTICITY EQUATIONS IN THREE DIMENSIONS
243

following two ways: (a) against manual calculations for a two-element problem (see Problem 9.7) or (b)
against the MATLAB code for a quadrilateral element provided in chapter 12. In the latter case, consider
very ﬁne meshes (at least 64-element mesh for the problem in Figure 9.14 for quadrilaterals)
Problem 9.9
Repeat Problem 9.8 for the six-node quadratic triangular element. The shape functions for the six-node
triangle and the quadrature scheme for triangular elements are described in Chapter 7. Test the code by
comparing the results of stresses against the MATLAB code of the 64-element mesh of quadrilaterals.
Problem 9.10
Usingthe2Delasticitycode,analyzethecantileverbeamshowninFigure9.20.Assumematerialproperties
to be as follows: Young’s modulus E ¼ 3  1011 Pa and Poisson’s ratio  ¼ 0:3.
Consider the following three meshes: 2  5; 4  10 and 8  20, where the ﬁrst number corresponds to
the number of elements in the thickness direction. Compare the ﬁnite element solutions for the maximum
deﬂection and maximum stress against manual calculations using the beam theory.
Problem 9.11
Consider a square platewith a circular hole subjected to uniform tension load as shown in Figure 9.21. The
plate is of unit thickness and subject to tension in the horizontal direction. Because of the symmetry in
themodelandloading,modelonequarteroftheplate.Theplateis20 cm  20 cmandtheradiusofthehole
is2.5 cm.AssumeYoung’smodulusis2  1011 N/m2andPoisson’sratiois0.3.Theuniformloadappliedis
t ¼ 103 N cm1.
Calculate the maximum stress component xx in the plate. Grade the mesh toward the hole. An example
of such a mesh is givenin Chapter 11 (see Figure 11.29). Compare thevalue of the applied load to thevalue
of the maximum stress component xx obtained by using the MATLAB ﬁnite element code.
1000 Nm–1
4.0 m
0.4 m
Figure 9.20
Cantilever beam of Problem 9.8.
x
y
Figure 9.21
Plate under tension (left) and quarter-symmetry model (right).
244
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

Problem 9.12
Repeat Problem 9.11 but with a radius of the hole equal to 19 cm.
Problem 9.13
Thin sheets which are rotationally symmetric (axisymmetric) can be considered one-dimensional pro-
blems where the only nonzero displacement is urðrÞ.
The nonzero strains are given by er ¼ @ur
@r and e ¼ ur
r . The stress strain law for an isotropic material is
given by r ¼ De where
r ¼
r



e ¼
er
e


D ¼
E
1  2
1


1


:
The weak form is
Z

ð=SwÞTr d ¼
Z

wbd þ ðw2rtÞjt
8w 2 U0
where the gradient in cylindrical coordinates of theweight function is =Sw¼
@wr
@r
wr
r
2
64
3
75 and h is the thickness
of the sheet.
a. Starting with the equation of equilibrium, @r
@r þ ðr  Þ=r þ b ¼ 0; ra < r < rb; multiply by wðrÞ
andintegrateoverthedomaintoobtaintheweakformgivenabove.Considerallboundaryconditions
tobeessentialboundaryconditions.(Hint:Notethatd ¼ 2rhdr becausethevolumeofeachelement
is toroidal.)
b. Consider a linear displacement element and with v ¼ 0. For an element with nodes at r1 and r2 develop
the Be matrix and show that the element stiffness Ke is
Ke ¼
2hE
r2  r1
ð
Þ2
r2
2 ln r2
r1
 
 r2  r1
ð
Þ2
r1r2 ln r2
r1
 
r1r2 ln r2
r1
 
r2  r1
ð
Þ2þr2
1 ln r2
r1
 
2
664
3
775
c. Assuming a constant body force b show that fe is
fe ¼ 2hb
6
2r1 þ r2
2r2 þ r1


d. Use a 2-element mesh to solve with ra ¼ 10; rb ¼ 30; E ¼ 1011;  ¼ 0; h ¼ 1 and b ¼ 100 and
zero essential boundary conditions.
Problem 9.14
Consider a six-node triangular element of unit thickness with a uniform traction in the x-direction applied
along one edge see Figure 9.23.
z
r
h
Figure 9.22
Thin sheet of Problem 9.13.
LINEAR ELASTICITY EQUATIONS IN THREE DIMENSIONS
245

a. Show that the element external force matrix fe is
fe ¼ hp
6
1
0
4
0
1
0
½
T:
b. Assemble the element force matrix to obtain the global external force matrix f for the nodes 1–5 as
shown in Figure 9.23(b).
Problem 9.15
For the 3D Serendipity element shown in Fig. 9.24, the shape functions are the following:

 At corner nodes
Ne
I ð; Þ ¼ 1
8 ð1 þ IÞð1 þ IÞð1 þ IÞðI þ I þ I  2Þ

 At midpoint nodes the typical form is (if  ¼ 0; I ¼ 1; I ¼ 1)
Ne
I ð; Þ ¼ 1
4 ð1  2Þð1 þ IÞð1 þ IÞ
2
1
4
3
y
h/2
h/2
x
p
2
1
4
3
5
x
p
(a)
(b)
L
L
Figure 9.23
(a) Six-node triangular element subjected to constant pressure loading and (b) two six-node triangular
element mesh.
3
2
1
4
5
6
7
8
ξ
η
ζ
Figure 9.24
Twenty-node 3D Serendipity element.
246
FINITE ELEMENT FORMULATION FOR VECTOR FIELD PROBLEMS – LINEAR ELASTICITY

a. Check that Ne
1 and Ne
2 satisfy the Kronecker delta conditions at nodes 1 and 2.
ð1 ¼ 1; 1 ¼ 1; 1 ¼ 1; 2 ¼ 0; 2 ¼ 1; 2 ¼ 1; etc:Þ, i.e. show that Ne
I ðxe
JÞ ¼ IJ for nodes
1 and 2.
b. Consider the casewhen the parent element is identical to the physical element, i.e.  ¼ x;  ¼ y;  ¼ z.
For a uniform pressure, p applied on the bottom surface, ﬁnd the z-components of the nodal forces at
nodes 1 and 2.
c. Repeat (a) and (b) for 27-node Lagrange element.
LINEAR ELASTICITY EQUATIONS IN THREE DIMENSIONS
247


10
Finite Element Formulation
for Beams
Averyusefulgroupofelementsinﬁniteelementsoftware arebeam andshellelements. Theseelementsare
used to model structures and components that are thin relative to their major dimensions. Some examples
where beam and shell elements are applied are
1. beams and columns of high-rise structures (Figure 10.1(a));
2. thesheetmetalandframeofvariousvehicles(cars,trainsandtractors)thatareusuallymodeledbyshell
elements (Figure 10.1(b)–(d));
3. thehullofashiporfuselageofanaircraft,whereshellelementsareusedfortheskinandbeamelements
for the stiffeners (Figure 10.1(e)).
The salient feature of entities that can be modeled by beam or shell elements is that they are thin compared
to their other dimensions so that the distribution of strain through the thickness (and hence the form of
the displacement ﬁeld) takes a very simple form. In this chapter, we will describe the theory of structures
indetailforbeams.Wewillthensketchtheimplicationsofwhatwehavelearnedfrombeamstoshellelements
and cursorily describe some widely used shell elements so that the reader can intelligently use them.
10.1
GOVERNING EQUATIONS OF THE BEAM1
10.1.1
Kinematics of Beam
The major simpliﬁcation in beam theory is brought about by assuming how a beam deforms. There are two
major theories for describing the behavior of beams: Euler–Bernoulli beam theory, often called engineer-
ingbeamtheory,andTimoshenkobeamtheory.Wewillconsideronlytheformerindetail; moststrengthof
materials courses deal with engineering beam theory, so most students have had some exposure to it. We
will call it engineering beam theory for brevity.
AbeamisshowninFigure10.2.Thex-axisisplacedcoincidentwiththecentroidofthecrosssectionA;it
will be called the midline here (it is also called the neutral axis). An important class of loads on beams is
those normal to the axis of the beam, like pðxÞ in Figure 10.2.
The keyassumption in engineering beam theory is that normals to the midline of a beam remain straight
and normal.This isillustratedinFigure10.3,whichshowsa beam beforeand after the application ofa load
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)
1Recommended for Structural Mechanics Track.

(the deformation of the beam is magniﬁed; in the linear elasticity theory considered here, deformations
should be invisible). In examining Figure 10.3, we can see that the normality assumption determines the
x-component of the displacement through the depth of the beam by
ux ¼ y sin ðxÞ;
ð10:1Þ
where ðxÞ is the rotation of the midline (positive counterclockwise) at x and y is the distance from the
midline. If ðxÞ is small, then sin  ¼  and the angle of rotation corresponds to the slope of the midline, so
 ¼ @uyðxÞ
@x
:
ð10:2Þ
Substituting (10.2) into (10.1) gives
ux ¼ y @uy
@x :
ð10:3Þ
Figure 10.1
Applicationsofbeamandshellelements:(a)building;2(b)car;(c)tractor;3(d)schoolbus;3(e)fuselageof
an aircraft.3
x
y
z
( )
p x
Midline (neutral axis)
A
n
Figure 10.2
Nomenclature for a beam.
2Courtesy of Granite Engineering and Design.
3Courtesy of Mercer Engineering.
250
FINITE ELEMENT FORMULATION FOR BEAMS

Applying the standard expression for the elongational strain (3.3) and (10.3), we ﬁnd that
exx ¼ @ux
@x ¼ y @2uy
@x2 :
ð10:4Þ
We have assumed in the above that uy is only a function of x. The above equation shows one of the key
features of engineering beam theory: the strain along the axis of the beam varies linearly through the
thickness of the beam. For elastic materials, since as the stress is proportional to the strain, the stress also
varieslinearly throughthe depthofthe beam.The maximum stressalwaysoccurs on either sothe top orthe
bottom of the beam, i.e., next to one of the surfaces of the beam.
If we consider the more general case where the midline is also elongated, say due to an axial load, the
displacement through the depth is given by
uxðxÞ ¼ uM
x ðxÞ  y @uyðxÞ
@x
;
ð10:5Þ
where uM
x is the displacement of the midline.
The strains are then given by applying (9.6) to (10.5):
exx ¼ @uM
x
@x  y @2uy
@x2 ;
ð10:6Þ
eyy ¼ @uy
@y ¼ 0;
ð10:7Þ
gxy ¼ @ux
@y þ @uy
@x ¼  @uy
@x þ @uy
@x ¼ 0:
ð10:8Þ
These equations reveal several other characteristics of beam deformations:
1. The axial strain is the sum of the midline extensional strain and the strain due to bending, the second
term in (10.6); the strain due to bending is called the bending or ﬂexural strain.
2. The through-the-thickness eyy strain vanishes.
3. The transverse shear strain gxy vanishes.
The fact that the transverse shear gxy vanishes is not unexpected as this shear strain is the change in angle
between the x and y coordinates, and by the fundamental assumption of engineering beam theory that the
x  
y
A 
B 
A
B  
y
u  
x
u  
Deformed beam
n 
n'
 
 
Figure 10.3
Deformation of an Euler–Bernoulli (engineering) beam.
GOVERNING EQUATIONS OF THE BEAM
251

normalremainsnormal,thereisnochangeintheanglebetweenlinesegmentsinthexandydirections.This
resultissomewhatinconsistentwiththerestofthe theory,asitimpliesthatthereisnoshearforceacross the
cross section; this is discussed in Belytschko et al. (2000).
10.1.2
Stress–Strain Law
Weassumethatthebeamisinastateofplanestress(asitisthininthey-direction),sotheonlynonzerostress
is given by Hooke’s law and (10.6):
xx ¼ Eexx ¼ E duM
x
dx  y d2uy
dx2


:
ð10:9Þ
(We have reverted to the derivative notation because uM
x and uy are functions of x only.)
Thestressesonthecrosssectionofthebeamcanberelatedtothemomentonthecrosssectionasfollows.
Using the standard deﬁnition of the moment as the product of the force and moment arm (see Figure 10.4),
we obtain
m ¼ 
Z
A
yxx dA:
ð10:10Þ
In the above, xx dA isthe force on the area dA and yis the moment arm. The right-hand rule convention has
beenusedforthemoment;thenegativesignappearsintheexpressionbecausethemomentisnegativewhen
the stress is positive for y > 0. Substituting (10.9) into (10.10) gives
m ¼ 
Z
A
yE duM
x
dx  y d2uy
dx2


dA ¼
Z
A
Ey2 d2uyðxÞ
dx2
dA:
ð10:11Þ
The second equality follows because y ¼ 0 is a centroidal axis, so
R
A y dA ¼ 0.
If E is constant over the cross section, we can take E and d2uy=dx2 outside the integral, yielding
m ¼ E d2uyðxÞ
dx2
Z
A
y2 dA ¼ EI d2uyðxÞ
dx2
¼ EI;
ð10:12Þ
where I is the moment of inertia of the cross section and  the curvature given, respectively, by
I ¼
Z
A
y2 dA;
 ¼ d2uyðxÞ
dx2
:
ð10:13Þ
s
m
x
A
y
z
A
m = −∫σxxydA
σxx
Figure 10.4
The resultant moment m and shear s on a cross section of the beam.
252
FINITE ELEMENT FORMULATION FOR BEAMS

Equation (10.12) can be viewed as a generalized stress–strain law: it relates an integral of the stress to
a measure of the deformation, the curvature . In the form of (10.12), it is not readily recognized as a
stress–strainlaw,buttheonlydifferencebetween(10.12)andHooke’slaw ¼ Eeisthat(10.12)isinterms
of an integral of stress and the generalized strain .
10.1.3
Equilibrium
The equilibrium equations for the beam relate the moment, the shear across and the vertical loading pðxÞ.
An inﬁnitesimal segment of the beam is shown in Figure 10.5. Note that like the stresses, the internal
moment m ispositiveon the positive surfaces and negativeon the negatives surfaces; we use the right-hand
rule, so a moment is positive when it is in the direction of your ﬁngers when your thumb points in the
direction of the positive z-axis. The shear s is positive when it acts in the positive y-direction on a positive
face and in the negative y-direction on a negative face.
If we consider vertical equilibrium of the beam segment shown in Figure 10.5 by summing all vertical
forces, we obtain
sðx þ xÞ  sðxÞ þ p x þ x
2


x ¼ 0:
Dividing the above by x and taking the limit as x ! 0, we obtain
ds
dx þ p ¼ 0:
ð10:14Þ
We next consider moment equilibrium about the point x ¼ y ¼ 0:
mðx þ xÞ  mðxÞ þ xsðx þ xÞ þ 1
2 x2p x þ x
2


¼ 0:
Dividing the above by x and taking the limit as x ! 0 yields
dm
dx þ s ¼ 0:
ð10:15Þ
s(x + ∆x)
m(x + ∆x)
m(x)
s(x)
p(x)
∆x
x
y
z
Figure 10.5
A segment of the beam used for development of equilibrium equations.
GOVERNING EQUATIONS OF THE BEAM
253

Equations(10.14)and(10.15)arethetwoequilibriumequationsforthebeam.Theycanbecombinedintoa
single equation by taking the derivative of (10.15), which gives ðd2m=dx2Þ þ ðds=dxÞ ¼ 0, and using with
(10.14) gives
d2m
dx2  p ¼ 0:
ð10:16Þ
Equations (10.12) and (10.16) are the strong form of the beam equations. These two equations can be
combined into a single equation, which for beams with constant EI is :
EI d4uy
dx4  p ¼ 0:
ð10:17Þ
The above is a fourth-order ordinary differential equation in thevertical displacement of the midline of the
beam,uyðxÞ.Thisdifferentialequationisofhigherorderthanthedifferentialequationswehaveconsidered
previously,whichresultsinsomeimportantchangesintheboundaryconditionsandthedevelopmentofthe
weak form.
10.1.4
Boundary Conditions
The boundary conditions on a beam can be written as follows:
uy ¼ uy
on
u;
ð10:18Þ
duy
dx ¼ 
on
;
ð10:19Þ
mn ¼ EI d2uy
dx2 n ¼ m
on
m;
ð10:20Þ
sn ¼ EI d3uy
dx3 n ¼ s
on
s:
ð10:21Þ
In (10.20) and (10.21), we have inserted normal n to the natural boundary conditions. This is necessary for
consistency between the positive deﬁnition of internal moments (10.10) and shear forces (10.15) and the
deﬁnitions of m and s, which are positive when acting counterclockwise and in the positive y direction,
respectively.
These boundary conditions are combined in various ways to model different types of physical end
conditions. Three examples of end conditions are
1. a free end with an applied load:
sn ¼ s
on
s;
mn ¼ m
on
m;
ð10:22Þ
2. a simple support:
m ¼ 0
on
m;
uy ¼ 0
on
u;
ð10:23Þ
3. a clamped support:
uy ¼ 0
on
u;
 ¼ 0
on
:
ð10:24Þ
It is interesting to note that the second condition in (10.24) for the clamped support can be explained in
terms of compatibility and the normality assumption: if  6¼ 0 at a clamped support, gaps and overlaps
254
FINITE ELEMENT FORMULATION FOR BEAMS

develop at the support because any vertical line which was originally normal to the midline overlaps the
support on one side and forms a gap on the other side as shown in Figure 10.6.
It can be seen that each boundary point corresponds to two boundary conditions, e.g. a free end is both a
s and a m boundary. Two boundary conditions are required at each end of the beam because the
equilibrium equation is a fourth-order ordinary differential equation.
It is possible to infer which boundaries are the natural boundary conditions and which boundaries are
conjugate during the construction of the weak form. However, to simplify the development, we use a
guideline that evolved in Chapter 9: Variables that are conjugate in the sense of work cannot both be
prescribed on any point of the boundary, but one of these must be prescribed on the boundary. As suy and
m correspond to increments in work, the conjugacy relations are
s \ u ¼ 0;
s [ u ¼ :
ð10:25Þ
m \  ¼ 0;
m [  ¼ :
ð10:26Þ
10.2
STRONG FORM TO WEAK FORM 4
Development of the weak form is accomplished as follows: We multiply the equilibrium equation (10.16)
and the natural boundary conditions (10.21) and (10.20) by a weight function and its derivative, respec-
tively, and then integrate over the corresponding domains, which gives
ðaÞ
Z

w
d2m
dx2  p


dx ¼ 0;
ðbÞ
wðsn  sÞ

s
¼ 0;
ðcÞ
dw
dx ðmn  mÞ

m
¼ 0
8w:
ð10:27Þ
As before, we now integrate by parts, but we will see that this integral equation needs to be integrated by
parts twice. Integrating (10.27a) by parts the ﬁrst time yields
Z

w d2m
dx2 dx ¼
Z

d
dx
w dm
dx


dx 
Z

dw
dx
dm
dx dx ¼ ðwsnÞ



Z

dw
dx
dm
dx dx;
wherewehaveusedthefundamentaltheoremofcalculusandtheequilibriumequation(10.16)toobtainthe
second equality. As before, we require w to vanish on u, which combined with (10.25) and (10.27b)
enables us to change the above to
Z

w d2m
dx2 dx ¼ ðwsÞ

s

Z

dw
dx
dm
dx dx:
ð10:28Þ
Midline 
n+
n−
(a)
(b)
Figure 10.6
Loss of compatibility in an Euler–Bernoulli beam due to gaps and overlaps: (a) due to  6¼ 0 at a support
and (b) due to a kink in the displacement.
4Recommended for Structural Mechanics Track.
STRONG FORM TO WEAK FORM
255

We now integrate the second term on the RHS of the above by parts:
Z

dw
dx
dm
dx dx ¼
Z

d
dx
dw
dx m


dx 
Z

d2w
dx2 m dx
¼
dw
dx m


m

Z

d2w
dx2 m dx:
ð10:29Þ
In obtaining the above, we have used the fundamental theorem of calculus to convert the ﬁrst term on the
RHS of the above, required dw=dx to vanish on  and substituted (10.27c).
Substituting (10.29) into (10.28) and the result into (10.27a) yields the following weak form:
Z

d2w
dx2 m dx ¼
Z

wp dx þ
dw
dx m


m
þðwsÞjs
for
8w 2 U0:
If we substitute the generalized stress–strain law for the moment m given in (10.12) into the above, we
obtain
Z

d2w
dx2 EI d2uy
dx2 dx ¼
Z

wp dx þ
dw
dx m


m
þðwsÞjs
for
8w 2 U0:
ð10:30Þ
Note that the LHS is symmetric in w and uy, so we can expect symmetry in the discrete equations.
We next consider the structure of U and U0. Examining Equation (10.30), we can see that the second
derivatives of the weight function and the approximation appear in the integral on the LHS. The C0
functions used heretofore are therefore no longer adequate, as the square of the second derivative of a C0
functionisnotintegrable.Therefore,C1 functions,forwhichtheintegralin(10.30)isintegrable,denotedas
H2, are needed for the approximation and the weight function.
The essential boundary conditions in a fourth-order system are the boundary conditions on the
displacement and ﬁrst derivative; this will be seen more clearly in going from the weak form to the strong
form. In going back over the construction of the weak form, we can see that we required w to vanish on u,
dw=dx on . Therefore, taking into account the required continuity, it follows that the function spaces for
the approximation and weight functions are
U ¼
uyjuy 2 H2; uy ¼ uy on u; duy
dx ¼  on 


;
ð10:31Þ
U0 ¼
wjw 2 H2; w ¼ 0 on u; dw
dx ¼ 0 on 


:
ð10:32Þ
From the above, we can see that the boundary conditions on uy and duy=dx are essential boundary
conditions. The weak form can then be summarized as follows:
find uyðxÞ 2 U such that ð10:30Þ holds 8wðxÞ 2 U0:
The need for C1 functions can also be established physically from the implications of the assumption that
the normal remains straight and normal. Figure 10.6b shows the deformation of a beam at a kink in the
displacement of the midline, uyðxÞ. As can be seen, as the normal remains normal on each side of the kink,
the material overlaps on one side and a gap develops on the other side. Therefore, compatibility is not
satisﬁed with a C0 displacement ﬁeldina beam. Thus, the need for C1 approximation and weightfunctions
256
FINITE ELEMENT FORMULATION FOR BEAMS

can be explained both mathematically (from the integrability of the weak form) and physically (from
compatibility).
10.2.1
Weak Form to Strong Form
The taxonomy of thevarious boundaryconditions isclariﬁedby considering the developmentof the strong
form from the weak form. As usual, the strong form is obtained from the weak form by reversing the steps
used in developing the weak form. We start with the weak form (10.30) and only consider beams with
constant EI. Using the integration by parts on the LHS of (10.30), we obtain
Zl
0
EI d2w
dx2
d2uy
dx2 dx ¼
Z l
0
d
dx
EI dw
dx
d2uy
dx2


dx 
Zl
0
EI dw
dx
d3uy
dx3 dx
¼
EI dw
dx
d2uy
dx2 n




Zl
0
EI dw
dx
d3uy
dx3 dx
¼
dw
dx mn


[m

Z l
0
EI dw
dx
d3uy
dx3 dx:
ð10:33Þ
As dw=dx ¼ 0 on  and m ¼   , we then obtain
Z l
0
EI d2w
dx2
d2uy
dx2 dx ¼
dw
dx mn


m

Zl
0
EI dw
dx
d3uy
dx3 dx:
ð10:34Þ
Using the integration by parts on the second term of the above gives
Z l
0
EI dw
dx
d3uy
dx3 dx ¼
Zl
0
d
dx
wEI d3uy
dx3


dx 
Zl
0
wEI d4uy
dx4 dx
¼ ðwsnÞjs[u 
Z l
0
EIw d4uy
dx4 dx;
ð10:35Þ
where the fundamental theorem of calculus has been used to obtain the second line. As w ¼ 0 on u, we
obtain
Zl
0
EI dw
dx
d3uy
dx3 dx ¼ ðwsnÞjs 
Zl
0
wEI d4uy
dx4 dx:
ð10:36Þ
Substituting (10.36), (10.34) and the result into (10.33) yields
Zl
0
w EId4uy
dx4  p


dx þ wðsn  sÞjs þ dw
dx ðmn  mÞ

m
¼ 0:
ð10:37Þ
STRONG FORM TO WEAK FORM
257

The strong form can then be extracted as before by ﬁrst selecting
w ¼  ðxÞ EId4uy
dx4  p


;
ð10:38Þ
where  is smooth and positive and  ðxÞ > 0 on 0 < x < l and  ðxÞ ¼ d =dx ¼ 0 at x ¼ 0 and x ¼ l. For
instance,  ðxÞcan be chosenas ð1  cosð2x=lÞÞ or anyother positivefunction on 0 < x < l satisfying the
above four constraints. Equation (10.38) implies that w ¼ dw=dx ¼ 0 on . Inserting (10.38) into (10.37)
yields
Zl
0
 ðxÞ EId4uy
dx4  p

2
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
integrand
dx ¼ 0:
ð10:39Þ
Note that the integrand in (10.39) is positive at every point in the problem domain. So the only way the
integral will vanish is if the integrand is zero at every point. Hence,
EI d4uy
dx4  p ¼ 0;
0  x  l:
ð10:40Þ
Substituting (10.40) into (10.37) yields
wðsn  sÞjs þ dw
dx ðmn  mÞ

m
¼ 0:
ð10:41Þ
We further assume w ¼ 0 on S and dw=dx arbitrary on m, which gives
mn ¼ EI d2uy
dx2 n ¼ m
on
m:
ð10:42Þ
Finally, combining (10.42) and (10.41) and taking w arbitrary on S yields
sn ¼ EI d3uy
dx3 n ¼ s
on
s:
ð10:43Þ
Thus, the weak form yields the strong form, and for inﬁnite-dimensional spaces U the two are equivalent.
The above development also clariﬁes the essential and natural boundary conditions for a beam. The
essentialboundaryconditionsarethoseonuy andduy=dx;wemustconstructtheapproximationsothatthey
aremet.Thenaturalboundaryconditionsaretheconditionsonthesecondandthirdderivativesofuy,which
are the moment and shear, respectively. These boundary conditions will be met in a ‘weak’ sense, i.e.
approximately, by a ﬁnite element solution.
10.3
FINITE ELEMENT DISCRETIZATION 5
10.3.1
Trial Solution and Weight Function Approximations
As concluded in the previous section, the trial solutions and weight functions for a beam element shown in
Figure 10.7 must be C1 functions.
5Recommended for Structural Mechanics Track.
258
FINITE ELEMENT FORMULATION FOR BEAMS

One class of functions that provides C1 continuity is the Hermite polynomials (others are the various
B-splines). In order to use the Hermite polynomials and maintain C1 continuity between elements, both
the displacements and the derivatives of the displacement at the nodes must be degrees of freedom. The
derivatives of the displacement ﬁeld can be viewed as a rotation  of the midline displacement (recall
(10.19)), so the element displacement matrix is
de ¼ ½uy1; 1; uy2; 2T:
ð10:44Þ
The nodal forces are conjugate in work, so
fe ¼ ½fy1; m1; fy2; m2T;
ð10:45Þ
where mI are the nodal moments (note that mI 6¼ mðxIÞ).
The Hermite polynomials for an element of length l are given by
Nu1 ¼ 1
4ð1  Þ2ð2 þ Þ;
N1 ¼ le
8ð1  Þ2ð1 þ Þ;
Nu2 ¼ 1
4ð1 þ Þ2ð2  Þ;
N2 ¼ le
8ð1 þ Þ2ð  1Þ;
ð10:46Þ
where
 ¼ 2x
le  1;
so
 1    1:
ð10:47Þ
It can be veriﬁed that these shape functions have the following Kronecker delta properties:
NuIðxJÞ ¼ IJ;
dNI
dx ðxIÞ ¼ IJ:
ð10:48Þ
So the Hermite shape functions interpolate both the function and its derivatives at the nodes. To obtain the
derivative with respect to x, we need to use
d
dx ¼ l
2
d
d :
ð10:49Þ
y
x
uy1
uy2
le
1
2
q2
q1
Figure 10.7
Two-node Euler–Bernoulli beam element.
FINITE ELEMENT DISCRETIZATION
259

The four shape functions are shown in Figure 10.8. It can be seen that (10.48) is met.
The weight functions and trial solutions are interpolated with the same shape functions, so
ue
y ¼ Nede;
we ¼ Newe:
ð10:50Þ
Toevaluatethedomainintegralintheweakform(10.30),weneedtoevaluated2ue
y=dx2,whichfrom(10.50)
and (10.46) can be shown to be
d2Ne
dx2 ¼ 1
le
6
le
3  1
 6
le
3 þ 1


|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Be
;
d2ue
y
dx2 ¼ Bede:
ð10:51Þ
As indicated, the above deﬁnes the matrix Be, which is used in the construction of the stiffness
matrix.
10.3.2
Discrete Equations
Wewillnotrepeattheprocedureofwritingtheweakformintermsofthedisplacementﬁeldbutleaveitasan
exercise. The outcome is identical to that in the previous chapters we have considered. The ﬁnite element
equations are
Kd ¼ f þ r:
ð10:52Þ
The element matrices are
stiffness matrix:
Ke ¼
Z
e
EIBeTBe dx;
ð10:53Þ
1 
ξ = − 
1 
ξ = 
1 
Slope=0 
Slope=0 
1 
u 
N 
1 
ξ = − 
1 
ξ = 
1 
Slope=0 
Slope=0 
2 
u 
N 
1 
ξ = − 
1 
ξ = 
Slope=0 
1 
N θ 
Slope =1  
1 
ξ = − 
1 
ξ = 
Slope=0 
2 
N θ 
Slope =1
1 
1 
1 
1 
2 
2 
2 
2 
1 
ξ = − 
1 
ξ = 
2 
1 
1 
ξ = − 
1 
ξ = 
θ 
Figure 10.8
Hermite C1 shape functions for a two-node beam.
260
FINITE ELEMENT FORMULATION FOR BEAMS

external force matrix:
fe ¼
Z
e
NeTp dx
|ﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄ}
fe

þ ðNeTsÞjs þ
dNeT
dx
m


m
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
fe

;
ð10:54Þ
where fe
 and fe
 are the element body and boundary force matrices, respectively.
These results could easily be obtained by considering a single element. The element matrices are
assembled into a global matrix exactly as before by using scatter and gather operations according to the
node numbers of the elements.
If the ﬂexural stiffness EI is constant over the element, the element stiffness is given by
Ke ¼
Z
e
EIBeTBe dx ¼ EI
le3
12
6le
12
6le
4le2
6le
2le2
12
6le
Sym
4le2
2
664
3
775:
ð10:55Þ
Note that the sum of any row of this stiffness no longer vanishes; this is because de ¼ ½1; 1; 1; 1T is not a
rigid body motion, as de includes both nodal rotations and nodal displacements.
The nodal forces corresponding to a constant load p are given by
fe
 ¼
Z
e
NeTp dx ¼
Zle
0
Nu1
N1
Nu2
N2
2
664
3
775p dx ¼ ple
2
1
le=6
1
le=6
2
664
3
775:
ð10:56Þ
It can be seen that the uniform load results in both a nodal moment and vertical nodal forces; the vertical
nodal forces are identical to those on the edge of a linear triangular element loaded by a uniform pressure.
10.4
THEOREM OF MINIMUM POTENTIAL ENERGY 6
The ﬁnite element equations for a beam can be developed more readily than in the previous section by
invoking the theorem of minimum potential energy. For a beam,
Wint ¼ 1
2
Z

Ee2 d ¼
Z l
0
Z
A
Ee2 dA dx ¼ 1
2
Z l
0
EI d2uy
dx2

2
dx;
ð10:57Þ
wherethesecondequalityisjustanotherwayofexpressingthedomainoftheproblemandthethirdequality
follows from (10.4). The external work is given by
Wext ¼
Z l
0
puy dx þ ðuysÞjs þ ðmÞjm:
ð10:58Þ
Thetheoremofminimumpotentialenergythenstatesthatthesolutionuy 2 U istheminimizerof,where
 ¼ Wint  Wext;
ð10:59Þ
where U is deﬁned in (10.31), i.e. it is the set of admissible displacements.
6Recommended for Structural Mechanics Track.
THEOREM OF MINIMUM POTENTIAL ENERGY
261

The theorem of minimum potential energy shows clearly why the derivative of the displacement ﬁeld
must be square integrable. Obviously, the internal energy cannot be evaluated if the displacement ﬁeld
derivative duy=dx is not square integrable.
The ﬁnite element equations can be obtained by approximating the displacement ﬁeld by compatible
displacement ﬁelds, i.e. displacement ﬁelds so that uy 2 U, and minimizing  with respect to nodal
displacementsnoton theessential boundary,i.e. withrespect todF.Ifwe use(10.50) fortheapproximation
of the displacement ﬁeld, then
 ¼ 1
2 dT X
nel
e¼1
LeT Z
e
EIBeTBe dxe Le
0
@
1
Ad
 dT X
nel
e¼1
LeT
Z
e
NeTp dxþ NeTs þ dNeT
dx
m


e
0
@
1
A:
ð10:60Þ
ItcanbeseenthattheﬁrsttermontheRHSinvolvesthestiffnessmatrix,whereastheothertwotermsaredue
to applied loads. Using the deﬁnitions (10.53) and (10.54) in combination with assembly, we can write the
above as
 ¼ 1
2 dTKd  dTðf þ rÞ:
ð10:61Þ
Theminimumofisobtainedbysettingitsderivativewithrespecttothenodaldisplacements, dF,equal to
zero, which gives
KFdF ¼ fF  KT
EFdE;
ð10:62Þ
whereKF andfF arethe stiffness andforcematrixblockscorrespondingtoF-nodesandKT
EF isthe coupling
stiffness matrix. For more details on the partitioning see Chapter 5.
Example 10.1
ConsiderabeamproblemshowninFigure10.9.ThebeamABCisclampedattheleftsideandisfreeatthe
right side. Spatial dimensions are in meters, forces in N and distributed loading p in N m1. The beam
bending stiffness is EI ¼ 104 N m2. The natural boundary conditions at x ¼ 12 m are s ¼ 20 N and
m ¼ 20 N m.
The beam is subdivided into two ﬁnite elements as shown in Figure 10.10.
A
B
C
4
4
4
p(x) = 1 
P1 = 10 
P2 =5 
20
m=
s = 20
x
y
Figure 10.9
Problem deﬁnition of Example 10.1.
262
FINITE ELEMENT FORMULATION FOR BEAMS

The global displacement matrix is deﬁned as dT ¼ ½uy1; 1; uy2; 2; uy3; 3
Element stiffness matrices:
Based on (10.55) for element 1 ðEI ¼ 104; L ¼ 8Þ:
Ke ¼ EI
L3
12
6L
12
6L
6L
4L2
6L
2L2
12
6L
12
6L
6L
2L2
6L
4L2
2
6664
3
7775 ¼ 103
0:23
0:94
0:23
0:94
0:94
5:00
0:94
2:50
0:23
0:94
0:23
0:94
0:94
2:50
0:94
5:00
2
6664
3
7775
½1
½2
½1
½2
and similarly for element 2 ðEI ¼ 104; L ¼ 4Þ:
Ke ¼ EI
L3
12
6L
12
6L
6L
4L2
6L
2L2
12
6L
12
6L
6L
2L2
6L
4L2
2
6664
3
7775 ¼ 103
1:88
3:75
1:88
3:75
3:75
10:00
3:75
5:00
1:88
3:75
1:88
3:75
3:75
5:00
3:75
10:00
2
6664
3
7775
½2
½3
½2
½3
Global stiffness matrix:
The global stiffness matrix is computed using direct assembly :
K ¼ 103
0:23
0:94
0:23
0:94
0
0
0:94
5:00
0:94
2:50
0
0
0:23
0:94
2:11
2:81
1:88
3:75
0:94
2:50
2:81
15:00
3:75
5:00
0
0
1:88
3:75
1:88
3:75
0
0
3:75
5:00
3:75
10:00
2
666666664
3
777777775
½1
½2
½3
½1
½2
½3
Boundary force matrix :
fe
 ¼ ðNeTsÞjs þ
dNeT
dx
m


m
:
For element 1, fð1Þ
 ¼ ½0 0 0 0T as it has no boundary on s or m.
For element 2,
fð2Þ
 ¼ 0
0
0
1
½
T m þ 0
0
1
0
½
Ts ¼
0
0
20
20
2
664
3
775
½2
½3
3
2
1
q1 = 0
uy1 = 0
uy2
uy3
q2
q3
(1)
(2)
Figure 10.10
Finite element mesh of Example 10.1.
THEOREM OF MINIMUM POTENTIAL ENERGY
263

The global boundary force matrix is obtained by direct assembly:
f ¼
0
0
0
0
20
20
2
6666664
3
7777775
½1
½2
½3
Body force matrix:
fe
 ¼
Z xe
nen
xe
1
NeTp dx:
Recall from Chapter 5 that in the case of a point force acting at a coordinate 1 < A  1, the resulting
body force matrix is given by
fe
 ¼ NeTðAÞPA:
Forelement 1:The bodyforce matrix for element 1 isobtained by superposing the contributionsfrom the
distributed loading pðxÞ ¼ 1 and a point force P1 ¼ 10 acting at  ¼ 0, which yields
fð1Þ
 ¼
Z xe
nen
xe
1
Nu1
N1
Nu2
N2
2
664
3
775p dx þ
Nu1
N1
Nu2
N2
2
664
3
775
¼0
P1 ¼
9
15:3
9
15:3
2
664
3
775
½1
½2
For element 2: The point force in element 2, P2 ¼ 5, acts at its ﬁrst node where  ¼ 1, which yields
fð2Þ
 ¼
Nu1
N1
Nu2
N2
2
664
3
775
¼1
P2 ¼
5
0
0
0
2
664
3
775
½2
½3
The direct assembly of the body force matrices yields
f ¼
9
15:3
4
15:3
0
0
2
6666664
3
7777775
½1
½2
½3
Boundary conditions and solution:
The assembled and partitioned system is given below:
0:23
0:94
0:23
0:94
0
0
0:94
5:00
0:94
2:50
0
0
0:23
0:94
2:11
2:81
1:88
3:75
0:94
2:50
2:81
15:00
3:75
5:00
0
0
1:88
3:75
1:88
3:75
0
0
3:75
5:00
3:75
10:00
2
6666664
3
7777775
uy1 ¼ 0
1 ¼ 0
uy2
2
uy3
3
2
6666664
3
7777775
¼
9 þ ru1
15:3 þ r1
4
15:3
20
20
2
6666664
3
7777775
:
264
FINITE ELEMENT FORMULATION FOR BEAMS

Note that we have added reaction forces ru1 and r1 corresponding to the unknown force and moment
reactions at node 1, respectively. Solution of the above system of equations gives the following global
displacement matrix:
uy2
2
uy3
3
2
664
3
775 ¼
0:55
0:11
1:03
0:12
2
664
3
775;
ru1
r1


¼
33
252


Postprocessing:
Moments and shear forces in the two elements are obtained by (10.51), (10.42) and (10.43):
mð1Þ ¼ EI d2uð1Þ
dx2
¼ EI d2Nu1
dx2
d2N1
dx2
d2Nu2
dx2
d2N2
dx2


0
0
uy2
2
2
6664
3
7775 ¼ 240:64 þ 25:785x;
sð1Þ ¼ EI d3uð1Þ
dx3
¼ EI d3Nu1
dx3
d3N1
dx3
d3Nu2
dx3
d3N2
dx3


0
0
uy2
2
2
6664
3
7775 ¼ 25:785;
mð2Þ ¼ EI d2uð2Þ
dx2
¼ EI d2Nu1
dx2
d2N1
dx2
d2Nu2
dx2
d2N2
dx2


uy2
2
uy3
3
2
6664
3
7775 ¼ 104:5 þ 39:75x;
sð2Þ ¼ EI d3uð2Þ
dx3
¼ EI d3Nu1
dx3
d3N1
dx3
d3Nu2
dx3
d3N2
dx3


uy2
2
uy3
3
2
6664
3
7775 ¼ 39:75:
Figure 10.11 compares ﬁnite element solution of displacements, moments and shear forces with an
analytical solution of the strong form of beam equations (10.17)–(10.21). It can be seen from Figure
10.11(a) that the displacements obtained with the ﬁnite element mesh of just two elements are very
accurate. The piecewise linear variation of moments predicted by ﬁniteelements represents a reasonable
approximation from an engineering point of view as can be seen from Figure 10.11(b); a discontinuity in
momentattheelementboundaryisevident.Onthecontrary,apiecewiseconstantapproximationofshear
forces isclearly inadequate to capture a signiﬁcant variation in shear forces. Note the discontinuity in the
analytical solution of shear forces at the location where point forces are applied. Therefore, it is a good
practice to place a node at the point where point forces are acting.
10.5
REMARKS ON SHELL ELEMENTS7
Shell elements are used for modeling thin structures (see Figure 1.4). Examples of objects that are
conventionally modeled by shell elements rather than by solid elements are shown there. For these
applications,fartoomanysolidelementswouldbeneededtoobtainareasonablesolutionassolidelements
must have a reasonable aspect ratio to be accurate, so for a thin member a huge number of solid elements
would be needed.
7Optional for Structural Mechanics Track.
REMARKS ON SHELL ELEMENTS
265

Shells can be viewed as generalizations of beams to curved surfaces in three-dimensional space. Shell
theory is quite involved and beyond the scope of this introductory text, but we would like to describe some
aspects of shells so that the reader has some background to use these elements.
The easiest way to describe shell elements is to consider the triangular ﬂat facet shell element shown in
Figure 10.12. We consider the counterpart of Euler–Bernoulli theory, which is called Kirchoff–Love shell
theory. The central assumption of this shell theory is identical to that in Euler–Bernoulli beam theory:
normalstothemidsurfaceremainstraightandnormal.Inthecoordinatesystemtangenttothemidsurfaceof
theshell,thedisplacementscanthenbewrittenintermsoftherotationsbyusingthesameprocedureusedin
obtaining (10.3) for a beam, see Figure 10.12:
u_
x ¼ u_M
x  z_
_
y;
u_
y ¼ u_M
y þ z_
_
x;
u_
z ¼ u_
zðx_; y_Þ;
ð10:63Þ
0
2
4
6
8
10
12
–1.5
–1
–0.5
(a)
(b)
(c)
0
Displacement
0
2
4
6
8
10
12
–300
–200
–100
0
100
x
Moment
FE
Exact solution
FE
Exact solution
0
2
4
6
8
10
12
15
20
25
30
35
x
Shear
FE
Exact solution
Figure 10.11
Finite element solution of Example 10.1 and comparison to the analytical beam solution.
266
FINITE ELEMENT FORMULATION FOR BEAMS

where u_M
x and u_M
y are thex and y components of the midsurface displacements. Note that the displacement
components are expressed in the local coordinate system of the tangent plane. From the assumption that
normals remain normal, it follows that

_
x ¼  @ u_z
@ y_ ;

_
y ¼ @ u_z
@^x :
ð10:64Þ
From the strain–displacement equations in three dimensions (see the appendix), we then obtain
e_
xx ¼ @ u_M
x
@ x_  z_ @2u_z
@ x_2 ;
e_
yy ¼
@ u_M
y
@ y_ þ z_ @2 u_z
@ y_2 ;
g_
xy ¼ @ u_M
x
@ y_ þ
@ u_M
y
@ x_  2z_ @2u_z
@ x
_@ y_ ;
e_
zz ¼ g_
xz ¼ g_
yz ¼ 0:
ð10:65Þ
Itcanbeseenthatthestrainsinashellhavethesamebasiccharacterasinabeam:theyvarylinearlythrough
the thickness of the shell and consist of strains due to the midplane displacement and those due to the
displacements normal to the midplane; these are called the membrane strains and the bending (or ﬂexural)
strains, respectively. The maximum strains occur the top and bottom surfaces of the shell. In an elastic
material, the stresses are related linearly to the strains, so the stresses vary similarly and maximum stresses
occur near the top and bottom surfaces.
Inshelltheory,astateofplanestressisassumedinthelocalz_-direction.Thestress–strainlawisobtained
by substituting zz ¼ 0 into Hooke’s law for three-dimensional elasticity (see Section 9.7). For isotropic
material, it reduces to
D ¼
E
1  2
1

0
0
0

1
0
0
0
0
0
1  
2
0
0
0
0
0
1  
2
0
0
0
0
0
1  
2
2
666666664
3
777777775
:
The assumption of plane stress seems somewhat contradictory as e_z ¼ 0 according to the displacement
ﬁeld.Thisagainisoneofthecontradictionsthatpermeatebeamandshelltheory,whichistoleratedbecause
the resulting theory is nevertheless quite effective in predicting strains and stresses in shells.
Someofthewidelyusedshellelementsinpracticearethree-nodeﬂatfacetandcurvedtriangle;six-node
triangle; four-node, eight-node and nine-node quadrilaterals. In all elements, all nodes are in the midsur-
face of the element. Two types of elements are wisely used:
1. elements with ﬁve degrees of freedom per node (5 DOF);
2. elements with six degrees of freedom per node (6 DOF).
Midsurface 
M
xu
x
θ
M
y
u
y
θ
M
zu
Figure 10.12
Flat facet shell triangular element.
REMARKS ON SHELL ELEMENTS
267

Fora6DOFelementnode,thedegreesoffreedomarethethreetranslationsandthreerotations.Fora5DOF
three-node triangle, the degrees of freedom are
de ¼ ½d1;
d2;
d3T;
dI ¼ ½uxI
uyI
uzI

_
xI

_
yIT:
The corresponding nodal forces are conjugate in the sense of work, so
fe ¼ ½fe
1
fe
2
fe
3T;
fe
I ¼ ½fxI
fyI
fzI
m
_
xI
m
_
yI:
In the above, ^xI and ^yI are rotations about the^x and^y axes, respectively, see Figure 10.12, and ^mxI and ^myI
arethenodalmomentsaboutthe^xand^yaxes,respectively.Thedisplacementcomponentscanbeexpressed
in either a local or global coordinate system, whereas the rotational components have to be expressed in a
local coordinate system that is tangent to the midsurface of the shell at the node.
For a 6 DOF per node element, all of the components are expressed in the global coordinate
system:
de
I ¼ ½uxI
uyI
uzI
xI
yI
zI;
fe
I ¼ ½fxI
fyI
fzI
mxI
myI
mzI:
The sides of the higher order quadrilateral elements can be curved in space. In fact, these elements
aredevelopedbythesameisoparametricconceptemployedtodevelopcurvedthree-dimensionalelements.
In the isoparametric elements, an alternativetheory for the transverseshears gxz and gyz is used. In this shell
theory, a normal remains straight but not necessarily normal as the shell deforms. However, the elements
are modiﬁed by rather technical procedures so that the element mimics the strains given in (10.65) (mixed
variational methods, selective-reduced integration and assumed strain elements are some of the methods
that are used to effect this artiﬁce, see Belytschko, Liu and Moran (2000)); these techniques are beyond the
scope of this book. To illustrate how the displacement ﬁeld is constructed, we consider the nine-node
element shown in Figure 10.13. The normal must remain straight (the normality is not enforced in the
displacementﬁeld),sothedisplacementthroughthethicknessmustbelinear.Thedisplacementcanﬁrstbe
written in terms of a set of secondary nodes as shown in Figure 10.13. These displacements are then related
to the rotations by the transformation techniques as described in Chapter 2.
Primary nodes (midplane) 
Secondary nodes 
1
2
3
4
5
6
7
8
9
(
)/ 2
M
B
T
I
I
I
=
+
u
u
u
Top surface (T) 
Bottom surface (B) 
Figure 10.13
Nine-node quadrilateral shell element.
268
FINITE ELEMENT FORMULATION FOR BEAMS

The displacement ﬁeld of the nine-node shell element is isoparametric with linear shape functions
through the thickness and quadratic shape functions in the plane, so
Ntop
I
¼ N2L
2 ð&ÞN9Q
I ð; Þ;
Nbot
I
¼ N2L
1 ð&ÞN9Q
I ð; Þ;
whereN2L
I
aretheone-dimensionaltwo-nodeshapefunctionsgiveninChapter7thatwestudiedinChapter
4 and N9Q
I
are the two-dimensional isoparamteric shape functions developed in Chapter 7.
Theapplicationofboundaryconditionsissimilartothatinbeams.Sometypicalboundaryconditionsare
showninFigure10.14,thoughtheymustbesomewhatmodiﬁedtoaccountfortheadditionalrotations.Ata
clamped support, the rotations and translations must vanish.
Asinone-andtwo-dimensionalelasticity,therateofconvergenceofthebiquadraticelementsisoneorder
higher than that of the bilinear element. Therefore, the nine-node element is recommended for most linear
applications.Gaussintegrationisusedtoevaluatethestiffnessmatrix.Theprogrammingoftheseelementsis
beyondanelementarycourse,asmanytechnical‘tricks’mustbeusedtoobtainanelementthatperformswell.
REFERENCE
Belytschko, T., Liu, W. K. and Moran, B. (2000) Nonlinear Finite Elements for Continua and Structures, John Wiley
& Sons, LTD, Chichester.
Problems
Problem 10.1
ConsiderabeamABsubjectedtouniformtransverseloadingasshowninFigure10.15.Usingasingleﬁnite
element, calculate the maximum deﬂection and compare the solution of the elementary beam theory.
x
y
z
x
θ
y
θ
0
0
0
z
y
x
y
z
Clamped
u
u
θ
θ
θ
=
=
=
=
=
0
0
0
z
y
y
z
Simple supported
u
u
θ
θ
=
=
=
=
No displacement conditions
Free end
Figure 10.14
Boundary conditions for plates and shells.
A
B
L
p(x)
x
y
Figure 10.15
Uniformly loaded beam of Problem 10.1.
REFERENCE
269

Problem 10.2
Consider a beam AB supported by an elastic rod BC at point B as shown in Figure 10.16. The
beam is subjected to uniform load p(x). Use Young’s modulus E for the entire structure and
cross-sectional area A and moment of inertial I for the beam and the rod, respectively. Model the
beam with a single beam ﬁnite element and the rod with a single truss element (considered in
Chapter 2). Find the nodal displacements and the stresses in the beam.
Problem 10.3
Consider a beam on an elastic foundation as shown in Figure 10.17. Formulate the strong and weak forms.
Hint: When considering an equilibrium of a beam segment (see Figure 10.3), account for the force of
ðkðx þ 1
2 xÞ uyðx þ 1
2 xÞ xÞ arising from the elastic foundation.
Problem 10.4
Consider a tapered beam element shown in Figure 10.18. The beam has a constant thickness, t, and
a linearly varying height hðxÞ ¼ hLð1  ðx=2LÞÞ. Derive the stiffness matrix for the tapered beam
element.
A
B
L
p(x)
x
y
C
L/2
Figure 10.16
The beam–rod structure of Problem 10.2.
x
y
z
( )
p x
( )
k x
Figure 10.17
A beam on elastic foundation of Problem 10.3.
270
FINITE ELEMENT FORMULATION FOR BEAMS

Problem 10.5
Consider the tapered beam element in Figure 10.18. The beam of length L ¼ 4 m and Young’s modulus
E ¼ 1011 Pa is clamped at node 1. The force in the amount of 10 kN in the negativey-direction is applied at
node 2. The beam has a rectangular cross section with thickness 0.1 m and hL ¼ 0:5 m. Find the maximum
deﬂection and stress using the following ﬁnite element models:
a. a single tapered beam element;
b. two elements of length L ¼ 2 m with constant height; Choose the height of each element equal to the
height of the tapered beam at the center of each element.
Compare the value of maximum stress obtained with the two ﬁnite element models to the stress obtained
from the elementary beam theory.
Problem 10.6
Consider a beam with a rectangular hole as shown in Figure 10.19. The beam has a constant
thickness t. Derive the stiffness matrix for the beam element with a rectangular hole. The beam element
shouldhavetheusualfourdegreesoffreedom:tworotationsandtwotransversedisplacementsatx ¼ 0and
x ¼ L.
Problem 10.7
Consider a two-span beam shown in Figure 10.20. The beam is subjected to uniformly distributed loading,
pointforceatx ¼ 2 mandpointmomentatx ¼ 6 masshowninFigure10.20.Thebeambendingstiffnessis
EI ¼ 2  107 N m2.
h
a
a
b
b
L
x
Figure 10.19
The beam with a rectangular hole of Problem 10.6.
y
x
L
1
2
L
h
Figure 10.18
The tapered beam element of Problem 10.4.
REFERENCE
271

a. Using the ﬁnite element program provided in chapter 12 compute the deﬂections at x ¼ 2 m and
x ¼ 6 m; moments and shear forces at x ¼ 2 m, x ¼ 4 m and x ¼ 6 m. Consider two elements – one for
each span.
b. If you have three elements, what is an optimal mesh? Repeat (a) with the three-element mesh.
c. Verify the results of (b) with the eight-element mesh, four for each span.
Problem 10.8
Consider a frame structure aligned along the x-axis. A frame is a combination of a beam and a bar
consideredinChapter2.Itiscapableofsupportingbothtransverseandaxialloadings.Afree-bodydiagram
of the frame segment is shown in Figure 10.21. Note the axial force FðxÞ in addition to moments and shear
forces acting at the two ends of the frame segment.
DevelopstrongandweakformsforaframeoflengthLalignedalongthex-axis.Assumeaconstantcross-
sectional area A, moment of inertia I and Young’s modulus E.
Problem 10.9
Consider a frame element in the element coordinate system ðx0e; y0eÞ as shown in Figure 10.22. Write the
stiffness matrix derived in Problem 10.8 in the element coordinate system. Express the element stiffness
matrix in the global coordinate system ðxe; yeÞ.
Hint: The rotation matrix from global to element coordinate system is given by
p(x)
(
)
m x
x
+ ∆
(
)
s x
x
+ ∆
( )
m x
( )
s x
x
∆
x
y
z
(
)
F x
x
+ ∆
( )
F x
Figure 10.21
A frame segment used for the development of equilibrium equations.
A
B
C
4 m 
4 m 
p(x) = −2 kNm–1
P = −10 kN
M =5 kNm–1 
x
y
Figure 10.20
A two-span beam of Problem 10.7.
272
FINITE ELEMENT FORMULATION FOR BEAMS

u0e
x1
u0e
y1
0e
1
u0e
x2
u0e
y2
0e
2


¼
cos 	
sin 	
0
0
0
0
 sin 	
cos 	
0
0
0
0
0
0
1
0
0
0
0
0
0
cos 	
sin 	
0
0
0
0
 sin 	
cos 	
0
0
0
0
0
0
1
2
66666664
3
77777775
ue
x1
ue
y1
e
1
ue
x2
ue
y2
e
2


:
Problem 10.10
Develop a ﬁnite element program for frame structures by modifying the ﬁnite element program for beams
provided in chapter 12. Verify the program by considering a single frame element subjected to both
transverse and axial loadings.
Problem 10.11
Using the ﬁnite element program for frame structures developed in Problem 10.10 compute the maximum
moments, shear forces, horizontal and vertical deﬂections for the two-story frame structure depicted in
Figure 10.23. The bending stiffness for all beams and columns is EI ¼ 2:5  107 N m2.
1
e
x
u′
x
y
1
2
1
e
yu′
2
e
yu′
2
e
x
u′
,
EI l
e
x′
e
y′
x
1
e
q′
2
e
q′
f
Figure 10.22
Nodal displacements in the element coordinate system of a frame element.
3 m 
3 m 
4 m 
4 kN 
4 kN 
2 kNm–1
2 kNm–1
Figure 10.23
A two-story frame structure of Problem 10.11.
REFERENCE
273


11
Commercial Finite Element
Program ABAQUS Tutorials
by ABAQUS, Inc.
11.1
INTRODUCTION
In this series of tutorials you will become familiar with the process of creating ABAQUS models
interactively using ABAQUS/CAE. Three problems will be considered: (1) steady-state heat conduction
in a trapezoidal plate, (2) bending of a short cantilever beam and (3) the elasticity problem of a platewith a
hole subjected to uniform far-ﬁeld tension.
11.1.1
Steady-State Heat Flow Example
YouwillcreateamodeloftheplateasshowninFigure11.1.Thesystemofunitsisnotspeciﬁedbutallunits
are assumed to be consistent. The plate is of unit thickness and subjected to the conditions shown in the
ﬁgure. You will perform a series of simulations with increasing levels of mesh reﬁnement using both linear
triangular and linear quadrilateral elements.
11.2
PRELIMINARIES
1.
Start a new session of ABAQUS/CAE by entering abaqus cae at the prompt.
Note that abaqus should be replaced with the command on your system used to run ABAQUS. For
example, to run the ABAQUS v6.6 Student Edition, the command is abq662se.
2.
Select Create Model Database from the Start Session dialog box.
The Model Tree is located to the left of the toolbox area of the ABAQUS/CAE window. If the Model
Tree is not visible, make sure that there is a check mark nextto Show Model Treein the View menu. If
theModelTreeisstillnotvisible,dragthe
cursorfromtheleftsideoftheABAQUS/CAEwindowto
expand the Model Tree.
The Model Tree provides a visual description of the hierarchy of items in the model database along
with access to most of the functionality available in ABAQUS/CAE. If you click the mouse button 3
(MB3) on an item in the tree, a menu appears listing the commands associated with the item. For
example,Figure11.2showsthemenufortheModelscontainer.IntheModelsmenu,theCreatemenu
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

item appears in bold because it is the default action that will be performed when you double-click the
Models container.
3.
Before proceeding, rename the current model. In the Model Tree, click MB3 on the model named
Model-1 and select Rename from the menu that appears. Enter heat in the Rename Model dialog
box and click OK.
4.
To save the model database, select File!Save As from the main menu bar and enter the name abq-
tutorials in the File Name line of the Save Model Database As dialog box. Click OK.
The .cae extension is added automatically.
11.3
CREATING A PART
The ﬁrst step in modeling this problem involves sketching the geometry for a two-dimensional, planar,
deformable solid body.
1.
In the Model Tree, double-click Parts to create a new part.
The Create Part dialog box appears.
Figure 11.1
Trapezoidal plate.
Figure 11.2
Models menu.
276
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

2.
Name the part plate. In the Create Part dialog box, select 2D Planar as the part’s modeling space,
Deformable as the type, and Shell as the base feature. In the Approximate size text ﬁeld, type 15.
3.
Click Continue to exit the Create Part dialog box.
ABAQUS/CAE displays text in the prompt area near the bottom of the window to guide you through the
procedure, as shown in Figure 11.3. Click the cancel button to cancel the current task; click the backup
button to cancel the current step in the task and return to the previous step.
The Sketcher toolbox appears in the left side of the main window, and the Sketcher grid appears in the
viewport.
You will ﬁrst sketch an approximation of the plate and then use constraints and dimensions to reﬁne the
sketch. To select the appropriate drawing tool, do the following:
a.
Click the Create Lines: Rectangle tool in the upper-right region of the Sketcher toolbox, as shown in
Figure 11.4.
TherectangledrawingtoolappearsintheSketchertoolboxwithawhitebackground,indicatingthat
you selected it. ABAQUS/CAE displays prompts in the prompt area to guide you through the
procedure.
Noticethatasyoumovethecursoraroundtheviewport,ABAQUS/CAEdisplaysthecursor’sX–and
Y–coordinates in the upper–left corner.
b.
Select any two points as the opposite corners of the rectangle.
c.
Use the dimension tool
to dimension the top and left edges of the rectangle. The top edge should
have a horizontal dimension of 2 m, and the left edge should have a vertical dimension of 1 m. When
dimensioningeachedge,simplyselecttheline,clickmousebutton1topositionthedimensiontextand
then enter the new dimension in the prompt area.
d.
Use the Delete tool
to delete the perpendicular constraints associated with the bottom edge of
the rectangle (select Constraints as the Scope in the prompt area to facilitate your selections).
e.
Dimension the right edge of the plate so that it has a vertical dimension of 0.5 m. The ﬁnal sketch
appears as shown in Figure 11.5.
f.
Click mouse button 2 anywhere in the viewport to ﬁnish using the dimension tool. (Mouse button 2 is
the middle mouse button on a three-button mouse; on a two-button mouse, press both mouse buttons
simultaneously.)
g.
Click Done in the prompt area to exit the sketcher.
Figure 11.3
Prompt area.
Figure 11.4
Connected lines sketch tool.
CREATING A PART
277

ABAQUS/CAE displays the new part, as shown in Figure 11.6.
11.4
CREATING A MATERIAL DEFINITION
You will now create a single linear material with a conductivity of 5 units.
To deﬁne a material:
1.
In the Model Tree, double-click Materials to create a new material.
2.
In the Edit Material dialog box, name the material example. Notice thevarious options available in
this dialog box.
3.
From the material editor’s menu bar, select Thermal!Conductivity, as shown in Figure 11.7.
Figure 11.5
Trapezoid drawn with sketcher.
1
2
3
Figure 11.6
Finished part.
Figure 11.7
Pull–down menu of the material editor.
278
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

ABAQUS/CAE displays the Conductivity data form.
4.
Enter a value of 5.0 for the conductivity, as shown in Figure 11.8. Use the mouse to select a cell for
data entry.
5.
Click OK to exit the material editor.
11.5
DEFINING AND ASSIGNING SECTION PROPERTIES
Material properties are associated with part regions through the use of section properties. You will deﬁne a
solid section property that refers to the material created above and assign this section property to the part.
To deﬁne a homogeneous solid section:
1.
In the Model Tree, double-click Sections to create a new section.
2.
In the Create Section dialog box:
a.
Name the section plateSection.
b.
In the Category list, accept Solid as the default category selection.
c.
In the Type list, accept Homogeneous as the default type selection.
d.
Click Continue.
The solid section editor appears.
3.
In the Edit Section dialog box:
a.
Accept the default selection of example for the Material associated with the section.
b.
Accept the default value of 1 for Plane stress/strain thickness.
c.
Click OK.
To assign the section deﬁnition to the plate:
1.
In the Model Tree, expand the branch for the part named plate (click the ‘þ’ symbol to expand the
Parts container and then click the ‘þ’ symbol next to the part named plate).
2.
Double-click Section Assignments to assign a section to the plate.
ABAQUS/CAE displays prompts in the prompt area to guide you through the procedure.
3.
Click anywhere on the plate to select the entire part.
ABAQUS/CAE highlights the plate.
4.
Click mouse button 2 in theviewport or click Done in the prompt area to accept the selected geometry.
The Edit Section Assignment dialog box appears containing a list of existing section deﬁnitions.
5.
Accept the default selection of plate Section, and click OK.
ABAQUS/CAE assigns the solid section deﬁnition to the plate and closes the Edit Section Assignment
dialog box.
Figure 11.8
Conductivity data form.
DEFINING AND ASSIGNING SECTION PROPERTIES
279

11.6
ASSEMBLING THE MODEL
Every ABAQUS model is based on the concept of an assembly of part instances. You will create an
assembly containing a single instance of the part created earlier.
To assemble the model:
1.
IntheModelTree,expandthebranchfortheAssemblycontaineranddouble-clickInstancestocreate
a new part instance.
2.
In the Create Instance dialog box, select plate and click OK.
11.7
CONFIGURING THE ANALYSIS
To simulate the thermal response of the plate, a single heat transfer step will be used.
To create a heat transfer analysis step:
1.
In the Model Tree, double-click Steps to create a step.
2.
From the list of available general procedures in the Create Step dialog box, select Heat transfer and
click Continue.
The Edit Step dialog box appears.
3.
In the Description ﬁeld of the Basic tabbed page, enter Two-dimensional steady-state
heat transfer.
4.
Change the response type to Steady-state.
5.
Accept all other default values provided for the step.
6.
Click OK to create the step and to exit the step editor.
11.8
APPLYING A BOUNDARY CONDITION AND A LOAD
TO THE MODEL
TheloadsandboundaryconditionsappliedtothemodelaredepictedinFigure11.1.ThetemperatureT ¼ 0
isprescribed alongthe edgesABandAD.Theheatﬂuxesq ¼ 0andq ¼ 20areprescribed ontheedgesBC
and CD, respectively. A constant heat source Q ¼ 6 is applied over the entire plate.
When assigning these attributes, you have the choice of selecting regions directly in the viewport or
assigningthemtopredeﬁnedsetsandsurfaces.Inthisexample,weadoptthelatterapproach.Thus,youwill
ﬁrst deﬁne sets and surfaces.
To deﬁne sets and surfaces:
1.
In the Model Tree, double-click Sets (underneath the Assembly) to create a new set. In the Create Set
dialog box, name the set left and click Continue. Select the left vertical edge of the plate and click
Done in the prompt area.
2.
Similarly, create the following sets:
- bottom at the bottom (skewed) edge of the plate;
- plate for the entire plate.
3.
In the Model Tree, double-click Surfaces (underneath the Assembly) to create a new surface. In the
Create Surface dialog box, name the surface top and click Continue. Select the top horizontal edge
of the plate and click Done in the prompt area.
280
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

To apply boundary conditions to the plate:
1.
In the Model Tree, double-click BCs to create a new boundary condition.
2.
In the Create Boundary Condition dialog box:
- Name the boundary condition left temp.
- Select Step-1 as the step in which the boundary condition will be activated.
- In the Category list, select Other.
- In the Types for Selected Step list, select Temperature and click Continue.
3.
Inthe promptarea,clickSetstoopen theRegion Selectiondialog box.Selectthe setleftand toggleon
Highlight selections in viewport. The highlighted edge appears as shown in Figure 11.9.
4.
When you are satisﬁed that the correct set has been selected, click Continue.
The Edit Boundary Condition dialog box appears.
5.
In the Edit Boundary Condition dialog box, enter a magnitude of 0.
6.
Accept the default Amplitude selection (Ramp) and the default Distribution (Uniform).
7.
Click OK to create the boundary condition and to exit the editor.
ABAQUS/CAE displays yellow squares along the edge to indicate a temperature boundary condition
has been prescribed.
8.
Repeat the above steps to assign the boundary condition to the bottom edge. Name this boundary
condition bottom temp.
To apply a surface ﬂux to the top edge of the plate:
1.
In the Model Tree, double-click Loads to create a new load.
2.
In the Create Load dialog box:
- Name the load surface ﬂux.
- Select Step-1 as the step in which the load will be applied.
- In the Category list, select Thermal.
- In the Types for Selected Step list, select Surface heat ﬂux.
- Click Continue.
3.
In the Region Selection dialog box, select the surface named top. The surface appears as shown in
Figure 11.10.
4.
When you are satisﬁed that the correct surface has been selected, click Continue.
The Edit Load dialog box appears.
1
2
3
Figure 11.9
Left edge selected.
APPLYING A BOUNDARY CONDITION AND A LOAD TO THE MODEL
281

5.
In the Edit Load dialog box:
- Enter a magnitude of 20 for the load.
- Accept the default Amplitude selection (Ramp) and the default Distribution (Uniform).
- Click OK to create the load deﬁnition and to exit the editor.
ABAQUS/CAEdisplaysgreendownward-pointingarrowsalongthetopfaceoftheplatetoindicatean
inward ﬂux.
To apply a body ﬂux to the plate:
1.
In the Model Tree, double-click Loads to create a new load.
2.
In the Create Load dialog box
- Name the load body ﬂux.
- Select Step-1 as the step in which the load will be applied.
- In the Category list, select Thermal.
- In the Types for Selected Step list, select Body heat ﬂux.
- Click Continue.
3.
In the Region Selection dialog box, select the set named plate and click Continue.
4.
In the Edit Load dialog box:
- Enter a magnitude of 6 for the load.
- Accept the default Amplitude selection (Ramp) and the default Distribution (Uniform).
- Click OK to create the load deﬁnition and to exit the editor.
ABAQUS/CAE displays yellow squares along the remaining edges of the plate.
Therightedgeoftheplateisfullyinsulated.Thisisthedefaultboundaryconditionforathermalanalysis
model. Thus, you need not apply a boundary condition or load to this edge.
11.9
MESHING THE MODEL
You use the Mesh module to generate the ﬁnite element mesh. You can choose the meshing technique that
ABAQUS/CAE will usetocreate the mesh,the element shapeandthe element type.ABAQUS/CAEoffers
a number of different meshing techniques. The default meshing technique assigned to the model is
indicated by the color of the model when you enter the Mesh module; if ABAQUS/CAE displays the
model in orange, it cannot be meshed without assistance from the user.
1
2
3
Figure 11.10
Top surface selected.
282
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

To assign the mesh controls:
1.
In the Model Tree, double-click Mesh in the branch for the part named plate.
2.
From the main menu bar of the Mesh module, select Mesh ! Controls.
3.
In the Mesh Controls dialog box, choose Tri as the Element Shape selection.
4.
Accept Free as the default Technique selection.
5.
Click OK to assign the mesh controls and to close the dialog box.
To assign an abaqus element type:
1.
From the main menu bar, select Mesh! Element Type.
2.
In the Element Type dialog box, choose the following:
- Standard as the Element Library selection.
- Linear as the Geometric Order.
- Heat Transfer as the Family of elements.
3.
In the lower portion of the dialog box, examine the element shape options. A brief description of the
default element selection is available at the bottom of each tabbed page.
4.
Click OK to assign DC2D3 elements to the part and to close the dialog box.
To mesh the part:
1.
From the main menu bar, select Seed ! Part to seed the part.
TheGlobalSeedsdialogboxdisplaysthedefaultelementsizethatABAQUS/CAEwillusetoseedthe
part. This default element size is based on the size of the part.
2.
Enter an approximate global size of 2.0 and click OK. This element size is chosen so that only one
element will be created along each edge of the plate.
3.
ABAQUS/CAE applies the seeds to the part, as shown in Figure 11.11. The squares in the ﬁgure
indicate ﬁxed node locations.
4.
From the main menu bar, select Mesh ! Part to mesh the part.
5.
Click Yes in the prompt area or click mouse button 2 in the viewport to conﬁrm that you want to mesh
the part.
6.
ABAQUS/CAE meshes the part and displays the resulting mesh, as shown in Figure 11.12a.
7.
If you wish to change the diagonal of the elements, select Mesh ! Edit. In the Edit Mesh dialog box,
selectElementasthecategoryandSwapdiagonalasthemethod.ClickOK.Intheviewport,selectthe
shareddiagonaledgeoftheelements.ClickYesinthepromptareatocompletetheoperation.Themesh
appears as shown in Figure 11.12b.
1
2
3
Figure 11.11
Seeded part instance.
MESHING THE MODEL
283

11.10
CREATING AND SUBMITTING AN ANALYSIS JOB
You will now create a job and submit it for analysis.
To create and submit an analysis job:
1.
In the Model Tree, double-click Jobs to create a new analysis job.
2.
Name the job tri-coarse.
3.
From the list of available models select heat.
4.
Click Continue to create the job.
5.
In the Description ﬁeld of the Edit Job dialog box, enter Coarse triangle mesh.
6.
Clickthetabstoseethecontentsofeachfolderofthejobeditorandtoreviewthedefaultsettings.Click
OK to accept the default job settings.
7.
In the Model Tree, expandthe Jobscontainer and click MB3 on the jobnamed tri-coarse. In the menu
that appears, select Submit to submit your job for analysis. The icon for the job will change to indicate
thestatusofthejobinparenthesisafterthejobname.Asthejobruns,thestatusRunningwillbeshown
in the Model Tree.
8.
When the job completes successfully, the status ﬁeld will change to Completed.You are now ready to
view the results of the analysis in the Visualization module.
11.11
VIEWING THE ANALYSIS RESULTS
1.
In the Model Tree, click MB3 on the job tri-coarse and select Results from the menu that appears.
ABAQUS/CAE opens the output database created by the job (tri-coarse.odb) and displays the
undeformed model shape.
You will create a contour plot of the temperature distribution.
2.
From the main menu bar, select Result ! Field Output and select NT11 as the output variable to be
displayed.
3.
In the Select Plot State dialog box, select As is and click OK.
4.
In the toolbox, click the Plot Contours tool
toview a contour plot of the temperature distribution,
as shown in Figure 11.13.
11.12
SOLVING THE PROBLEM USING QUADRILATERALS
You will now solve the problem using quadrilateral elements. This involves changing the element shape
and creating and submitting a new job. The steps are outlined below.
1
2
3
1
2
3
(a)                                                                        (b) 
Figure 11.12
Swapped diagonals.
284
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

To modify a model:
1.
In the Model Tree, double-click Mesh in the branch for the part named plate to switch to the Mesh
module.
2.
From the main menu bar of the Mesh module, select Mesh!Controls. Select Quad as the element
shape and click OK.
3.
A warning is issued indicating that the current mesh will be deleted. Click Delete Meshes in the
ABAQUS dialog box to proceed.
4.
From the main menu bar, select Mesh ! Part to mesh the part with DC2D4 elements.
5.
Click Yes in the prompt area or click mouse button 2 in theviewport to conﬁrm that you want to mesh
the part.
6.
Createanewjob.Namethisjobquad-coarseandgiveitthefollowingdescription:Coarsequad
mesh.
7.
Submit the job for analysis and monitor its progress. When the job completes, open the ﬁle quad-
coarse.odb in the Visualization module.
8.
Plot the temperature contours for this model. The result is shown in Figure 11.14.
11.13
REFINING THE MESH
Clearlythemeshusedtosolvethisproblemwastoocoarse.Foreachchoiceofelementshape(trianglesand
quadrilaterals), change the mesh seed size to reﬁne the mesh. Use the following mesh seed sizes:
 0.20 (this produces a ﬁner mesh than used previously)
 0.05 (this produces the ﬁnest mesh used in this study)
Thus, you will create and run four additional jobs named:
 tri-ﬁner
 tri-ﬁnest
 quad-ﬁner
 quad-ﬁnest
NT11
+0.000e+00
+1.614e-01
+3.228e-01
+4.842e-01
+6.456e-01
+8.070e-01
+9.684e-01
+1.130e+00
+1.291e+00
+1.453e+00
+1.614e+00
+1.775e+00
+1.937e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
Figure 11.13
Temperature contour plot: coarse triangle mesh.
REFINING THE MESH
285

For each case, edit the model to redeﬁne the mesh, create a new job, and submit it for analysis. Repeat this
process until all jobs listed above have been submitted.
The results of the reﬁned mesh models are shown in Figure 11.15.
From the main menu bar, select File ! Save to save your model database ﬁle.
NT11
+0.000e+00
+3.074e-01
+6.149e-01
+9.223e-01
+1.230e+00
+1.537e+00
+1.845e+00
+2.152e+00
+2.460e+00
+2.767e+00
+3.074e+00
+3.382e+00
+3.689e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
Figure 11.14
Temperature contour plot: coarse quad mesh.
NT11
+0.000e+00
+2.312e-01
+4.624e-01
+6.937e-01
+9.249e-01
+1.156e+00
+1.387e+00
+1.619e+00
+1.850e+00
+2.081e+00
+2.312e+00
+2.543e+00
+2.775e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.324e-01
+4.648e-01
+6.971e-01
+9.295e-01
+1.162e+00
+1.394e+00
+1.627e+00
+1.859e+00
+2.091e+00
+2.324e+00
+2.556e+00
+2.789e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.322e-01
+4.645e-01
+6.967e-01
+9.289e-01
+1.161e+00
+1.393e+00
+1.626e+00
+1.858e+00
+2.090e+00
+2.322e+00
+2.555e+00
+2.787e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.323e-01
+4.646e-01
+6.969e-01
+9.292e-01
+1.161e+00
+1.394e+00
+1.626e+00
+1.858e+00
+2.091e+00
+2.323e+00
+2.555e+00
+2.788e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
tri-finest
quad-finest
Figure 11.15
Temperature contour plots: reﬁned meshes.
286
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

11.13.1
Bending of a Short Cantilever Beam
Inthistutorial,youwillmodifythemodelcreatedinthepreviousexercisetosimulatethebendingofashort
cantilever beam. The cross-section of the beam has a trapezoidal shape, as shown in Figure 11.16. The
system of units is not speciﬁed but all units are assumed to be consistent. The beam is of unit thickness and
subjected to the conditions shown in the ﬁgure. The material response is linear elastic with Young’s
modulus E ¼ 30E6 and Poisson’s ratio  ¼ 0:3.
11.14
COPYING THE MODEL
In the model database ﬁle saved earlier, copy the existing model to a new model: in the Model Tree, click
MB3onthemodelnamedheatandselectCopyModelfromthemenuthatappears.Entercantileverin
the Copy Model dialog box and click OK.
All instructions that follow refer to the cantilever model.
11.15
MODIFYING THE MATERIAL DEFINITION
You will now edit the material deﬁnition to deﬁne linear elastic properties. You do not need to delete the
thermal properties deﬁned earlier. These will be ignored during the static stress analysis that follows.
To edit a material
1.
In the Model Tree, expand the Materials container and double-click example to edit the material.
2.
From the material editor’s menu bar, select Mechanical ! Elasticity ! Elastic, as shown in
Figure 11.17.
ABAQUS/CAE displays the Elastic data form.
3.
Enteravalueof30e6forYoung’smodulusand0.3forPoisson’sratio,asshowninFigure11.18.Use
[Tab] or move the cursor to a new cell and click to move between cells.
4.
Click OK to exit the material editor.
11.16
CONFIGURING THE ANALYSIS
To simulate the structural response of the beam, replace the heat transfer step deﬁned earlier with a single
general static step. The thermal loads and boundary conditions deﬁned earlier will be automatically
suppressed when the heat transfer step is replaced.
Figure 11.16
Cantilever beam.
CONFIGURING THE ANALYSIS
287

To replace a step
1.
In the Model Tree, expand the Steps container. Click MB3 on the step named Step-1 and select
Replace from the menu that appears.
2.
From the list of available general procedures in the Replace Step dialog box, select Static, General
and click Continue.
3.
In the Description ﬁeld of the Basic tabbed page, enter Beam bending.
4.
Accept all default values provided for the step.
5.
Click OK to create the step and to exit the step editor.
6.
ExpandtheBCsandLoadscontainerstoconﬁrmthattheiritemshavebeensuppressed(denotedbythe
symbol).
11.17
APPLYING A BOUNDARY CONDITION AND A
LOAD TO THE MODEL
The loads and boundary conditions applied to the model are depicted in Figure 11.16 where edge DA is
ﬁxed. Edges AB and BC are traction free; on edge CD, the traction isty ¼ 20.
To apply boundary conditions to the beam
1.
In the Model Tree, double-click BCs to create a new boundary condition.
2.
In the Create Boundary Condition dialog box:
Figure 11.17
Pull–down menu in material editor.
Figure 11.18
Elastic data form.
288
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

- Name the boundary condition ﬁx.
- Select Step-1 as the step in which the boundary condition will be activated.
- In the Category list, select Mechanical.
- In the Types for Selected Step list, Symmetry/Antisymmetry/Encastre and click Continue.
3.
In the prompt area, click Sets to open the Region Selection dialog box. Select the set left and click
Continue.
The Edit Boundary Condition dialog box appears.
4.
In the Edit Boundary Condition dialog box, select ENCASTRE.
5.
Click OK to create the boundary condition and to exit the editor.
ABAQUS/CAE displays glyphs along the edge to indicate boundary conditions have been applied.
To apply a surface traction to the top edge of the beam:
1.
In the Model Tree, double-click Loads to create a new load.
2.
In the Create Load dialog box:
- Name the load traction.
- Select Step-1 as the step in which the load will be applied.
- In the Category list, select Mechanical.
- In the Types for Selected Step list, select Surface traction.
- Click Continue.
3.
In the Region Selection dialog box, select the surface named top and click Continue.
The Edit Load dialog box appears.
4.
In the Edit Load dialog box:
- Select General as the traction type.
- Click Edit to deﬁne the traction direction. Select the top-left corner of the part as the ﬁrst point
and the bottom-left corner of the part as the second point of the direction vector. This vector
points in the negative 2-direction.
- Enter a magnitude of 20 for the load.
- Accept all other default selections and click OK.
ABAQUS/CAE displays purple downward-pointing arrows along the top face of the beam to indicate a
negative normal traction.
The remaining edges of the beam are traction free. This is default boundary condition for a stress analysis
model. Thus, you need not apply a boundary condition or load to these edges.
11.18
MESHING THE MODEL
You now need to change the element type to use plane strain (CPE4R) elements. Plane strain elements are
used since the beam is thick relative to its cross-sectional dimensions. Use the ﬁnest mesh density from the
earlier model (global seed ¼ 0.05) with a quadrilateral element shape.
To change the abaqus element type:
1.
In the Model Tree, double-click Mesh in the branch for the part named plate.
2.
From the main menu bar, select Mesh!Element Type.
MESHING THE MODEL
289

3.
In the Element Type dialog box, choose the following:
- Standard as the Element Library selection.
- Linear as the Geometric Order.
- Plane Strain as the Family of elements.
4.
In the lower portion of the dialog box, examine the element shape options. A brief description of the
default element selection is available at the bottom of each tabbed page.
5.
Click OK to assign CPE4R elements to the part and to close the dialog box.
11.19
CREATING AND SUBMITTING AN ANALYSIS JOB
You will now create a job and submit it for analysis.
To create and submit an analysis job:
1.
In the Model Tree, double-click Jobs to create a new analysis job.
2.
Name the job beam.
3.
From the list of available models select cantilever.
4.
Click Continue to create the job.
5.
In the Description ﬁeld of the Edit Job dialog box, enter Bending of a short cantilever
beam.
6.
Click OK to accept the default job settings.
7.
In the Model Tree, expand the Jobs container and click MB3 on the job named beam. In the menu that
appears, select Submit to submit your job for analysis.
11.20
VIEWING THE ANALYSIS RESULTS
1.
When the job completes successfully, switch to the Visualization module: In the Model Tree, click
MB3 on the job named beam and select Results from the menu that appears.
ABAQUS/CAE opens the output database created by the job (beam.odb) and displays the unde-
formed model shape.
YouwillcreateacontourplotoftheMisesstressdistribution.TheMisesstressisthedefaultﬁeldoutput
variable selection; thus, you do not need to select it prior to creating the contour plot.
2.
In the toolbox, click the Plot Contours tool
toview a contour plot of the Mises stress distribution,
as shown in Figure 11.19.
3.
Plot the deformed model shape (click
in the toolbox).
4.
Inthe toolbox, click the Allow Multiple Plot States tool
followed by thePlot UndeformedShape
tool
. This will overlay the deformed and undeformed model shapes, as shown in Figure 11.20.
For small-displacement analyses, the displacements are scaled automatically to ensure that they are
clearly visible. The scale factor is displayed in the state block. In this case the displacements have been
scaled by a factor of 7586.
Note: In Figure 11.20, only feature edges of the undeformed shape are visible (set via the Superimpose
Options tool
).
From the main menu bar, select File!Save to save your model database ﬁle.
11.20.1
Plate with a Hole in Tension
You will now create a model of the plate with a hole shown in Figure 11.21. The system of units is not
speciﬁed butall units are assumed tobe consistent. The plate isof unit thickness and subjected to tension in
290
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

the horizontal direction. Because of the symmetry in the model and loading, you need only one quarter of
the model plate. You will perform a series of simulations with increasing levels of mesh reﬁnement
and compare the value of the stress in the horizontal direction at the top of the hole with the theoretical
value.
(Ave. Crit.: 75%)
S, Mises
+2.967e-01
+2.248e+01
+4.465e+01
+6.683e+01
+8.901e+01
+1.112e+02
+1.334e+02
+1.556e+02
+1.777e+02
+1.999e+02
+2.221e+02
+2.443e+02
+2.664e+02
Step: Step-1
Increment      1: Step Time =    1.000
Primary Var: S, Mises
Deformed Var: U   Deformation Scale Factor: +7.586e+03
1
2
3
Figure 11.19
Mises stress contour plot.
Step: Step-1
Increment      1: Step Time =    1.000
Deformed Var: U   Deformation Scale Factor: +7.586e+03
1
2
3
Figure 11.20
Overlay of deformed and undeformed model shapes.
Figure 11.21
Plate under tension (left); quarter-symmetry model (right).
VIEWING THE ANALYSIS RESULTS
291

11.21
CREATING A NEW MODEL
Inthemodeldatabaseﬁlesavedearlier,createanewmodel:intheModelTree,double-click Models.Enter
plate as the model name in the Edit Model Attributes dialog box and click OK.
All instructions that follow refer to the plate model.
11.22
CREATING A PART
As before, the ﬁrst step involves sketching the geometry for a two-dimensional, planar, deformable solid
body.
1.
In the Model Tree, double-click Parts to create a new part.
The Create Part dialog box appears
2.
Name the part plate. In the Create Part dialog box, select 2D Planar as the part’s modeling space,
Deformable as the type and Shell as the base feature. In the Approximate size text ﬁeld, type 200.
3.
ClickContinuetoexittheCreatePartdialogbox.Tosketchtheplate,youneedtodrawarectangle.To
select the rectangle drawing tool, do the following:
- Click the Create Lines: Rectangle tool in the upper–right region of the Sketcher toolbox as
shown in Figure 11.22.
The rectangle drawing tool appears in the Sketcher toolbox with a white background, indicating
that you selected it. ABAQUS/CAE displays prompts in the prompt area to guide you through the
procedure.
- Click one corner of the rectangle at coordinates (20, 20).
- Move the cursor to the opposite corner (20, 20).
- Create a circle centered at the origin with a perimeter point located at (2.5, 0.0). The ﬁnal sketch
appears as shown in Figure 11.23.
- Click Done in the prompt area to exit the sketcher.
- Quarter the plate to remove all but the upper right quadrant. To do this:
* From the main menu bar of the Part module, select Shape!Cut!Extrude.
* Using the Create Lines: Connected tool located in the upper right-hand corner of the Sketcher
toolbox, sketch the series of connected lines shown in Figure 11.24. Click Done to complete the
operation.
ABAQUS/CAE displays the new part, as shown in Figure 11.21 (right).
Figure 11.22
Rectangle sketch tool.
292
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

11.23
CREATING A MATERIAL DEFINITION
You will now create a single linear elastic material.
To deﬁne a material:
1.
In the Model Tree, double-click Materials to create a new material.
2.
In the Edit Material dialog box, name the material steel.
Figure 11.23
Rectangle with a hole drawn with sketcher.
Figure 11.24
Sketch of cutting tool.
CREATING A MATERIAL DEFINITION
293

3.
From the material editor’s menu bar, select Mechanical!Elasticity!Elastic, as shown earlier in
Figure 11.17.
ABAQUS/CAE displays the Elastic data form.
4.
Enter a value of 2e11 for Young’s modulus and 0.3 for Poisson’s ratio, as shown in Figure 11.25.
5.
Click OK to exit the material editor.
11.24
DEFINING AND ASSIGNING SECTION PROPERTIES
You will deﬁne a solid section property that references the material created above and assign this section
property to the part.
To deﬁne a homogeneous solid section:
1.
In the Model Tree, double-click Sections to create a new section.
2.
In the Create Section dialog box:
- Name the section plateSection.
- In the Category list, accept Solid as the default category selection.
- In the Type list, accept Homogeneous as the default type selection.
- Click Continue.
The solid section editor appears.
3.
In the Edit Section dialog box:
- Accept the default selection of steel for the Material associated with the section.
- Accept the default value of 1 for Plane stress/strain thickness.
- Click OK.
To assign the section deﬁnition to the plate:
1.
In the Model Tree, expand the branch for the part named plate.
2.
Double-click Section Assignments to assign a section to the plate.
3.
Click anywhere on the plate to select the entire part.
ABAQUS/CAE highlights the plate.
4.
Click mouse button 2 in theviewport or click Done in the prompt area to accept the selected geometry.
The Edit Section Assignment dialog box appears containing a list of existing section deﬁnitions.
5.
Accept the default selection of plateSection as the section deﬁnition, and click OK.
ABAQUS/CAE assigns the solid section deﬁnitionto the plate and closes the Edit Section Assignment
dialog box.
Figure 11.25
Elastic data form.
294
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

11.25
ASSEMBLING THE MODEL
You will create an assembly containing a single instance of the part.
To assemble the model:
1.
IntheModelTree,expandthebranchfortheAssemblycontaineranddouble-clickInstancestocreate
a new part instance.
2.
In the Create Instance dialog box, select plate and click OK.
11.26
CONFIGURING THE ANALYSIS
To simulate the mechanical response of the plate, a single general static step will be used.
To create a general static analysis step:
1.
In the Model Tree, double-click Steps to create a step.
2.
FromthelistofavailablegeneralproceduresintheCreateStepdialogbox,selectStatic,Generaland
click Continue.
3.
In the Description ﬁeld of the Basic tabbed page, enter Plate with hole under tension.
4.
Accept all default values provided for the step.
5.
Click OK to create the step and to exit the step editor.
11.27
APPLYING A BOUNDARY CONDITION AND A LOAD
TO THE MODEL
You will apply symmetry boundary conditions along the left and bottom edges of the plate and a negative
pressure on the right edge to simulate tension. The use of a pressure load is equivalent to deﬁning a surface
traction normal to a surface. Note that a positive pressure always acts into the surface. Thus, a negative
pressure load will act awayfrom the surface (inducing tension). As before, sets and surfaces will be used to
assign the loads and boundary conditions.
To deﬁne sets and surfaces:
1.
In the Model Tree, double-click Sets (underneath the Assembly) to create a new set. In the Create Set
dialog box, name the set left and click Continue. Select the left vertical edge of the plate and click
Done in the prompt area.
2.
Similarly, create a set named bottom that includes the bottom horizontal edge of the plate.
3.
In the Model Tree, double-click Surfaces (underneath the Assembly) to create a new surface. In the
Create Surface dialog box, name the surface pull and click Continue. Select the right vertical edge
of the plate and click Done in the prompt area.
To apply boundary conditions to the plate:
1.
In the Model Tree, double-click BCs to create a new boundary condition.
2.
In the Create Boundary Condition dialog box:
- Name the boundary condition left.
- Select Step-1 as the step in which the boundary condition will be activated.
- In the Category list, select Mechanical.
APPLYING A BOUNDARY CONDITION AND A LOAD TO THE MODEL
295

- In the Types for Selected Step list, select Symmetry/Antisymmetry/Encastre and click
Continue.
3.
In theprompt area,clickSetstoopenthe Region Selectiondialogbox. Selecttheset leftand toggleon
Highlight selections in viewport. The highlighted edge appears as shown in Figure 11.26.
4.
When you are satisﬁed that the correct set has been selected, click Continue.
The Edit Boundary Condition dialog box appears.
5.
In the Edit Boundary Condition dialog box, select XSYMM.
Click OK to create the boundary condition and to exit the editor.
ABAQUS/CAE displays glyphs along the edge to indicate boundary conditions have been applied.
6.
Similarly, create a symmetry boundary condition named bottom on the bottom edge of the plate.
Select bottom as the set and YSYMM as the type.
To apply a pressure to the right edge of the plate:
1.
In the Model Tree, double-click Loads to create a new load.
2.
In the Create Load dialog box:
- Name the load tension.
- Select Step-1 as the step in which the load will be applied.
- In the Category list, select Mechanical.
- In the Types for Selected Step list, select Pressure.
- Click Continue.
3.
In the Region Selection dialog box, select the surface named pull. The surface appears as shown in
Figure 11.27.
X
Y
Z
Figure 11.26
Left edge selected.
X
Y
Z
Figure 11.27
Right surface selected
296
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

4.
When you are satisﬁed that the correct surface has been selected, click Continue.
The Edit Load dialog box appears.
5.
In the Edit Load dialog box:
- Enter a magnitude of -10e3 for the load.
- Accept the default Amplitude selection (Ramp) and the default Distribution (Uniform).
- Click OK to create the load deﬁnition and to exit the editor.
ABAQUS/CAE displays outward-pointing arrows along the edge of the plate to indicate a tensile
load.
11.28
MESHING THE MODEL
As before, use the Mesh module to generate the ﬁnite element mesh. You will use quadratic plane stress
(CPS8R) elements to discretize the plate. Quadratic elements are more effective in capturing stress
concentrations (a key feature of this problem) and the relative thinness of the plate suggests plane stress
conditions.
To assign the mesh controls:
1.
In the Model Tree, double-click Mesh in the branch for the part named plate.
2.
From the main menu bar of the Mesh module, select Mesh!Controls.
3.
In the Mesh Controls dialog box, choose Quad as the Element Shape selection.
4.
Accept Free as the default Technique selection.
5.
Click OK to assign the mesh controls and to close the dialog box.
To assign an abaqus element type:
1.
From the main menu bar, select Mesh!Element Type.
2.
In the Element Type dialog box, choose the following:
- Standard as the Element Library selection.
- Quadratic as the Geometric Order.
- Plane Stress as the Family of elements.
3.
In the lower portion of the dialog box, examine the element shape options. A brief description of the
default element selection is available at the bottom of each tabbed page.
4.
Click OK to accept and assign CPS8R elements to the plate and to close the dialog box.
You will now partition the plate in half in order to gain better control over the mesh.
To partition the plate:
1.
From the main menu bar, select Tools!Partition.
2.
In the Create Partition dialog box, select Face as the type and Sketch as the method. Click OK.
3.
In the sketcher, draw a line connecting the origin of the circle with the upper right corner of the plate.
4.
Click the middle mouse button twice then click Done.
To mesh the part:
1.
From the main menu bar, select Seed!Part to seed the part.
2.
In the Global Seeds dialog box, specify an approximate global size of 2.0 and press OK.
MESHING THE MODEL
297

3.
ABAQUS/CAE applies the seeds to the part, as shown in Figure 11.28. The squares in the ﬁgure
indicate ﬁxed node locations. The circles indicate target node locations.
4.
From the main menu bar, select Mesh!Part to mesh the part.
5.
Click Yes in the prompt area or click mouse button 2 in the viewport to conﬁrm that you want to mesh
the part.
6.
ABAQUS/CAE meshes the part and displays the resulting mesh, as shown in Figure 11.29.
11.29
CREATING AND SUBMITTING AN ANALYSIS JOB
You will now create a job and submit it for analysis.
To create and submit an analysis job
1.
In the Model Tree, double-click Jobs to create a new analysis job.
2.
Name the job hole-coarse.
3.
From the list of available models select plate.
4.
Click Continue to create the job.
5.
In the Description ﬁeld of the Edit Job dialog box, enter Coarse mesh.
6.
Clickthetabstoseethecontentsofeachfolderofthejobeditorandtoreviewthedefaultsettings.Click
OK to accept the default job settings.
7.
In the Model Tree, expand the Jobs container and click MB3 on the job named hole-coarse. In the
menu that appears, select Submit to submit your job for analysis.
X
Y
Z
Figure 11.28
Seeded part instance.
X
Y
Z
Figure 11.29
Part showing the resulting mesh.
298
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

11.30
VIEWING THE ANALYSIS RESULTS
1.
When the job completes successfully, switch to the Visualization module: In the Model Tree, click
MB3 on the job hole-coarse and select Results from the menu that appears.
ABAQUS/CAEopenstheoutputdatabasecreatedbythejob(hole-coarse.odb)anddisplaysthe
undeformed model shape.
You will create a contour plot of the stress distribution.
2.
From the main menu bar, select Result!Field Output and select S11 as the output variable to be
displayed. This is the component of stress in the horizontal direction.
3.
In the Select Plot State dialog box, select As is and click OK.
4.
In the toolbox, click the Plot Contours tool
to view a contour plot of the stress distribution, as
shown in Figure 11.30.
11.31
REFINING THE MESH
The theoretical value of the stress at the top of the hole is 3  the applied stress (30e3 in this case). Clearly
the mesh used to solve this problem was too coarse. Reduce the mesh seed size to reﬁne the mesh. Use the
following mesh seed sizes:
 1.2 global seed size (uniform)
 1.2 global seed size with local biased edge seeds along the left, bottom and diagonal edges:
(i)
From the main menu bar of the Mesh module, select Seed!Edge Biased.
(ii)
Using [Shift]+[Click], select the left, bottom and diagonal edges at the ends near the hole.
(iii)
Enter a bias ratio of 3.
(iv)
Enter 20 for the number of elements along the edges.
Figure 11.30
Stress contour plot: coarse mesh model.
REFINING THE MESH
299

Figure 11.31
Stress contour plot: ﬁne mesh model.
Figure 11.32
Stress contour plot: biased mesh model.
300
COMMERCIAL FINITE ELEMENT PROGRAM ABAQUS TUTORIALS

Thus, you will create and run two additional jobs named:
 hole-ﬁne
 hole-biased
You do not need to create new models for each of these jobs. Simply edit the current model to reﬁne the
mesh. Create a new job and submit it for analysis. Repeat this process until all jobs listed above have been
submitted.
The results of the reﬁned mesh models are shown in Figure 11.31 and Figure 11.32.
From the main menu bar, select File!Save to save your model database ﬁle.
Close the ABAQUS/CAE session by selecting File!Exit from the main menu bar.
REFINING THE MESH
301


APPENDIX
A.1
ROTATION OF COORDINATE SYSTEM IN THREE DIMENSIONS
Consider a point P in the global coordinate system xyz as shown in Figure A.1. The position vector
corresponding to point P is denoted by~s. It can be written in terms of its Cartesian components:
~s ¼ sx~i þ sy~j þ sz~k;
ðA:1Þ
where~i,~j and~k are unit vectors in the x, y and z directions, respectively.
We now deﬁne the same point P in the rotated coordinate system x0y0z0 as shown in Figure A.1. Writing
the vector~s in the rotated coordinate system x0y0z0 gives
~s ¼ s0
x~i 0 þ s0
y~j 0 þ s0
z~k 0;
ðA:2Þ
where~i0,~j0 and ~k0 are unit vectors in the x0, y0 and z0 directions, respectively, and s0
x, s0
y and s0
z are the
corresponding vector components. As (A.1) and (A.2) represent the same vector, vector components sx, sy
and sz can be obtained by multiplying (A.1) and (A.2) with unit vectors~i,~j and~k, respectively, which yields
sx ¼~i ~s ¼ s0
x~i ~i 0 þ s0
y~i ~j 0 þ s0
z~i ~k 0;
sy ¼~j ~s ¼ s0
x~j ~i0 þ s0
y~j ~j0 þ s0
z~j ~k0;
sz ¼ ~k ~s ¼ s0
x~k ~i 0 þ s0
y~k ~j 0 þ s0
z~k ~k0:
ðA:3Þ
Denoting ~i ~i0 ¼ cosðx; x0Þ  n11; ~i ~k0 ¼ cosðx; z0Þ  n13; ~j ~i0 ¼ cosðy; x0Þ  n21 and so on gives in
matrix notation
sx
sy
sz
2
64
3
75 ¼
n11
n12
n13
n21
n22
n23
n31
n32
n33
2
64
3
75
s0
x
s0
y
s0
z
2
64
3
75;
s ¼ Rs0:
ðA:4Þ
It can be shown that the transformation matrix R is orthogonal, i.e., RT ¼ ðRÞ1. Thus, the inverse relation
is given by
s0 ¼ RTs:
ðA:5Þ
A First Course in Finite Elements
J. Fish and T. Belytschko
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

A.2
SCALAR PRODUCT THEOREM
Consider the scalar product of two vectors w and p equal to zero for any vector w denoted as 8w:
wTp ¼ 0
8w
or
w1p1 þ w2p2 þ    þ wnpn ¼ 0
8w:
As the vector component wi is arbitrary, it is convenient to make the following choices:
w1 ¼ 1 w2 ¼ w3 ¼    ¼ wn ¼ 0 ) p1 ¼ 0;
w2 ¼ 1 w1 ¼ w3 ¼    ¼ wn ¼ 0 ) p2 ¼ 0;
..
.
wn ¼ 1 w1 ¼ w2 ¼    ¼ wn1 ¼ 0 ) pn ¼ 0;
which yields p ¼ 0.
A.3
TAYLOR’S FORMULA WITH REMAINDER
AND THE MEAN VALUE THEOREM
Taylor’sformulawithremainderplaysakeyroleinunderstandingthebehavioroftheﬁniteelementmethod
discussed in Section 5.7.2.
A function fðxÞ deﬁned on interval 0  x  l can be expanded around a point 0  x0  l as follows:
fðxÞ ¼ fðx0Þ þ ðx  x0Þ df
dx ðx0Þ þ 1
2 ðx  x0Þ2 d2f
dx2 ðx0Þ
þ 1
k! ðx  x0Þk dkf
dxk ðcÞ;
ðA:6Þ
where c is some point in the interval x  c  x0.
i
j
k
x
z
y
P
sy
sz
sx
x′
z′
y′
s
→
→
→
→
Figure A.1
Position of arbitrary point P in two coordinate systems.
304
APPENDIX

The mean value theorem is obtained as a special case for k ¼ 1:
fðxÞ ¼ fðx0Þ þ ðx  x0Þ f;xðcÞ:
ðA:7Þ
Consider a special case of x0 ¼ 0 and x ¼ l, then
df
dx ðcÞ ¼ fðlÞ  fð0Þ
l
;
ðA:8Þ
whichmeansthatforanydifferentiablefunctionfðxÞthereisapointintheinterval0  c  lthathasaslope
deﬁned by (A.8). See Problem A.1 for a speciﬁc choice of function fðxÞ.
A.4
GREEN’S THEOREM
The gradient is a vector given by
~r ¼~i @
@y þ~j @
@y ;
where~i and~j are unit vectors in the x and y directions, respectively. The gradient of a function is given by
~
rf ¼~i @f
@y þ~j @f
@y :
Consider any scalar ﬁeld  ¼ ðx; yÞ deﬁned on a domain , as shown in Figure A.2. The boundary of the
domain is denoted by  as shown in the ﬁgure. The unit normal to the domain is denoted by~n, where in two
dimensions
~n ¼ nx~i þ ny~j;
ðA:9Þ
andnx andny arethexandycomponentsofthevectornormaltothedomain,called thenormalvectororjust
the normal. As~n is a unit vector, it follows that n2
x þ n2
y ¼ 1.
P1
P2
Ω
dΩ
x
y
y = y2
x = Γ1(y)
x = Γ2(y)
y = y1
dx
dy
Γ 
Figure A.2
Two-dimensional domain and its boundary.
GREEN’S THEOREM
305

ThepurposeofGreen’stheoremistorelateanintegralofagradientofafunctionoveranareatoacontour
integral by
Z

~
r d ¼
I

~n d:
ðA:10Þ
In Equation (A.10), in a two-dimensional problem, the LHS integral is a double integral and can also be
written as
R R
r dx dy, wherewe have omitted the limits ofintegrationbecause they are awkward towrite
for arbitrary shapes. The RHS of (A.10) in two dimensions is a contour integral. Note that Equation (A.10)
in 2D represents two scalar equations
Z

@
@x d ¼
Z

nx d;
Z

@
@y d ¼
Z

ny d :
ðA:11Þ
We will prove Green’s theorem for a convex domain (a convex domain is a domain for which any line
joiningtwopointsinthedomainisentirelyinthedomain).Thisisnotaveryrestrictiveassumptionbecause
anydomaincanbe subdividedinto convexsubdomainsand the samemethods canthenbeused toprove the
theorem.
Let us consider the area integral
Ix ¼
Z

@
@x d:
ðA:12Þ
The maximum and minimum y-values of the domain are indicated by the points P1 and P2 in Figure A.2,
where the corresponding y-values are y ¼ y1 and y ¼ y2, respectively. These two points divide the
boundary into two curves as shown in the ﬁgure. The ﬁrst curve, x ¼ 1ðyÞ, starts at P1 and follows a
clockwise path ending at P2. The second curve, x ¼ 2ðyÞ, follows a counterclockwise path from P1 to P2.
Using these deﬁnitions of the boundary of the domain, Equation (A.12) can be rewritten as follows:
Ix ¼
Z

@
@x d ¼
Z Z @
@x dx dy ¼
Zy2
y1
Z2
1
@
@x dx
0
B
@
1
C
A dy:
Now applying the fundamental theorem of calculus to the above, we obtain
Ix ¼
Zy2
y1

ðx; yÞ

2ðyÞ
1ðyÞ

dy ¼
Zy2
y1
ð2ðyÞ; yÞ dy 
Zy2
y1
ð1ðyÞ; yÞ dy:
Nowwereversethelimitsofintegrationonthesecond integral,which requiresthatwechangethesignonthe
integral. It can be seen that the ﬁrst term is the integral of  evaluated on the boundary 2ðyÞ in the
counterclockwise direction. The second term is the integral of  taken along 1ðyÞ, also in the counter-
clockwisedirection.Thus,thesumofthetwointegralsgivesthecompletecontourintegralover ¼ 1 [ 2:
Ix ¼
Zy2
y1
ð2ðyÞ; yÞ dy þ
Zy1
y2
ð1ðyÞ; yÞ dy 
I

ðx; yÞ dy;
ðA:13Þ
where
H
is the boundary integral taken counterclockwise on the boundary .
306
APPENDIX

To complete the proof, let us express dx and dy in terms of the incremental arc length d as shown in
Figure A.3. Due to similarity of the two triangles, it follows that
dy
d ¼ nx
1 :
ðA:14Þ
Combining Equations (A.13) and (A.14) gives
Z

@
@x d ¼
I

nx d:
ðA:15Þ
Similarly, it can be shown that
Z

@
@y d ¼
I

ny d;
which completes the proof of Green’s theorem.
A.5
POINT FORCE (SOURCE)
Inthissection,weconsiderabodyforce(orsource)actingatapointinsideanelement.Inpractice,however,
it is often desirable to design a ﬁnite element mesh so that the point force (source) acts at a ﬁnite element
node. Here, we consider the case where a point force (source) is acting anywhere in the interior of the
element domain.
Considerapointforce(pointsource)asshowninFigureA.4.Themagnitudeofthe force(heatsource)is
denoted by P. The relation between the body force (distributed source) fðxÞ and the point force (point
source) can be obtained by integration:
Z l
0
fðxÞ dx ¼ P:
dΓ
ny j
n→
→
→
nx i
dx
dy
Figure A.3
A segment of the boundary showing the unit normal n.
0
x
x = a
P
l
Figure A.4
Point force (point source) acting in the interior of the element.
POINT FORCE (SOURCE)
307

Asthesegmentsizeonwhichthepointforce(pointsource)isactingisinﬁnitesimallysmallandPisﬁnite,it
follows that the equivalent body force (heat source) is inﬁnite at the point where the point force (source) is
applied and vanishes elsewhere as shown in Figure A.5.
Mathematically, this distribution is denoted as
f ¼ Pðx  aÞ;
where ðx  aÞ is the Dirac delta deﬁnedso that tends to inﬁnityat the point x ¼ a, and its integraloverany
problem domain that includes x ¼ a is 1:
Zx2
x1
ðx  aÞ dx ¼ 1 if x1 < a < x2:
In a more general case, for any function gðxÞ, the Dirac delta function has the property that
Zx2
x1
gðxÞðx  aÞdx ¼
gðaÞ
if
x1 < a < x2
0
otherwise:

ðA:16Þ
We now proceed with computing the external nodal forces by (5.11) resulting from the point forces
fe ¼
Zx2
x1
NeTðxÞPðx  aÞdx ¼
NeTðaÞP
if x1 < a < x2
0
otherwise:

where the last step follows from (A.16). Similar formulas can be obtained for nodal ﬂuxes.
A.6
STATIC CONDENSATION
Static condensation is a technique aimed at reducing the number of element degrees of freedom prior to
scattering (or assembling) the element matrices. For instance, in the nine-node Lagrange quadrilateral
(Figure 7.16), the center node is not connected to any other element. This degree of freedom can be
eliminated (or condensed out) to obtain the element matrices corresponding to the boundary nodes only.
To establish the static condensation equations, we partition the element equations as
Kbb
Kbi
Kib
Kii


db
di


¼
fb
fi


;
ðA:17Þ
f
x
∞
x = a
Figure A.5
Graphical illustration of the point force (point source).
308
APPENDIX

where db and di are nodal displacements of boundary nodes to be retained and those in the interior to be
condensed out, respectively; the remaining matrices in (A.17) correspond to the nodal displacements
partitions.
From the second equation in (A.17), we get
di ¼ ðKiiÞ1ðfi  KibdbÞ:
ðA:18Þ
Substituting (A.18) into (A.17), we get the condensed element equations
ðKbb  KbiðKiiÞ1KibÞ
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
Kbb
db ¼ fb  KbiðKiiÞ1fi
|ﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
fb
:
ðA:19Þ
The advantage of using static condensation is that it provides smaller element matrices and thus reduced
global system of equations. Note that the static condensation affects the right-hand side vector,fb, as well.
From the physical point of view, this means that the nodal force that has been acting on the interior node,fi,
has been redistributed to the boundary nodes, according the right-hand side of equation (A.19).
A.7
SOLUTION METHODS
You have probably noticed that for problems considered in this book, it took the MATLAB or ABAQUS
ﬁnite element programs a few seconds to obtain the solution. You then ask yourself an obvious question: If
youreﬁnethemeshbyafactorof1000,howmuchlongerwilltheprogramrun?Willthe CPUtimeincrease
to hours and even days?
The answers to these questions depend on many factors. First, you should be aware that a signiﬁcant
portionofcomputationalcost(oftenmorethan50–90 %ofthetotalrunningtime)goesinsolvingthelinear
system of equations
KFdF ¼ f
F:
ðA:20Þ
The CPU time for solving the symmetric positive-deﬁnite system of equations (A.20) is given by
CPU ¼ C  na;
ðA:21Þ
where n is the number of unknowns or the number of degrees of freedom in the ﬁnite element model. The
valuesofC andadependonthechoiceofsolutionmethod(orsolver),aswellassparsityandconditioningof
KF. For instance, if KF is a dense matrix (fully populated with few zeros), the value of the exponent a ¼ 3
for most commonly used direct solvers. Consequently, if it takes 1 s to solve the problem with 1000
unknowns, it will take 109 s or approximately 30 years of CPU time to solve a problem with one million
unknowns, not uncommon in engineering practice. Fortunately, the systems of equations arising from the
ﬁnite element discretizations are sparse, so the value of a ranges from 1 to 2 depending on the solver and
problem characteristics (sparsity and conditioning). Now assume that you have an optimal solver to your
disposition(a ¼ 1)andassumethatittakes 10 stosolveaproblemwith1000unknowns(wetookthevalue
of C in Equation(A.21) 10 times larger than before), then the above problem with one million degrees of
freedom can be solved in less than 3 h! If on the contrary, a ¼ 2 and assuming that C is the same, then CPU
time goes up to 120 days, which is something that an engineer cannot afford in particular when he has to
solve the same problem many times with different loadings (sources) and boundary conditions.
Therearetwotypesofsolversforlinearsystems:(1)directsolversand(2)iterativesolvers.Theconstant
C in Equation (A.21) for iterative methods is signiﬁcantly higher than that for direct methods, whereas the
exponent a for iterative methods is typically lower. The major advantage of direct methods is their
SOLUTION METHODS
309

robustness, which is manifested by the fact that parameters C and a are independent of problem
conditioning (except for close to singular systems). Direct solvers are ideal for solving small- and
medium-sized problems, but the choice between the two types of solvers depends not only on the problem
characteristics but also on the hardware architecture. On parallel machines, iterative methods offer near-
perfectscalability,i.e.CPUtimedecreasesnearlyproportionallywithincreaseinthenumberofprocessors.
Direct methods, on the contrary, offer limited scalability.On serial machines, the breakevenpoint between
the two solvers is in the range between 50 000 and 100 000 unknowns.
Direct Solvers
Any nonsingular matrix KF can be expressed as a product KF ¼ LU, where L and U are lower and upper
triangularmatrices.IfKF isalsoasymmetricandpositive-deﬁnitematrix,whichisthe caseformanyofthe
physical problems considered in this book, then it can be decomposed more efﬁciently into KF ¼ LLT,
where
L ¼
l11
0
. . .
0
l21
l22
. . .
0
..
.
..
.
..
.
..
.
ln1
ln2
. . .
lnn
2
6664
3
7775:
ðA:22Þ
This is known as Choleskyfactorization. To solve Equation (A.19), one ﬁrst solves Ly ¼ f
F for y, and then
LTdF ¼ y for dF.
The reader can easily observe that the solution to these equations is trivial.
WhenasparsematrixKF isfactored,ittypicallysufferssomeﬁll-in;thismeansthatthematrixL þ LT is
nonzerowhereentriesinKF arezero.Theextentofﬁll-inisthedeterminingfactorofthecomputationalcost
involvedinsolvingthelinearsystemofequations.State-of-the-artdirectsolversareoptimizedtominimize
ﬁll-in in the factor L. A typical sparse direct solver consists of four steps:
1. An ordering step that reorders the rows and columns such that the factor L has minimal ﬁll.
2. A symbolic factorization that determines the nonzero structures of the factors and creates suitable data
structures for L.
3. A factorization step that computes L.
4. A solution step that solves Ly ¼ f
F for y, and then solves LTdF ¼ y for dF.
Usuallysteps1and2involveonlyintegeroperations.Steps3and4involverealnumberoperations.Step3is
usually the most time-consuming part, whereas step 4 is about an order of magnitude faster. For more
details we refer to Dongarra et al. (1998) and Heath, Ng and Peyton (1991).
Iterative Solvers
The most general approach to constructing an iterative solution method is by splitting the matrix KF
as
KF ¼ P  ðP  KFÞ;
ðA:23Þ
where P is a nonsingular matrix, which is called a preconditioner. With this splitting, the solution of the
linear system (A.20) can be written as
dF ¼ P1ðP  KFÞdF þ P1f
F:
ðA:24Þ
310
APPENDIX

An iterative method is constructed by
dðkþ1Þ
F
¼ P1ðP  KFÞdðkÞ
F þ P1f
F;
ðA:25Þ
where the superscript denotes the iteration count. Starting with dðkÞ
F
¼ 0, an iterative method (A.25)
calculates a sequence of matrices dðkÞ
F , which converge to the solution of the system (A.20); that is
lim
k!1ðdðkÞ
F Þ ¼ dF:
ðA:26Þ
The efﬁciency of an iterative solver depends on the choice of the preconditioner P. A good preconditioner
must have many desirable attributes. First, the preconditioned system should converge quickly.
This generally means that P1KF should be as close as possible to the identity matrix. Second, it
should be easy to solve a linear system of the form Py ¼ z. Finally, the construction of the preconditioner
should be quick.
The simplest possible preconditioner P is a diagonal matrix of KF, also known as Jacobi preconditioner.
Thegenerationofgoodpreconditionersinvolvesasmuchartasscience.Thebestpreconditionerstendtobe
application speciﬁc, exploiting insight into the precise problem being solved. For more details we refer to
Saad (1996). Construction of good preconditioners is still an active area of research. In mid-1990s, Pravin
Vaidya developed a remarkable preconditioner that spurred widespread adoption of iterative methods by
commercial software vendors. He chose not to publish his work, but to commercialize it instead, so he
licensed it to ANSYS for over one million dollars.
Conditioning
To illustrate the purpose and effects of conditioning, consider the two-bar structure described in Chapter 2.
We rewrite the system of equations as
kð1Þ þ kð2Þ
kð1Þ
kð1Þ
kð1Þ


u2
u3


¼
0
10


:
We now consider two cases:
Case 1: kð1Þ ¼ kð2Þ ¼ 1.
Case 2: kð1Þ ¼ 1 and kð2Þ ¼ 105.
The condition number  is the ratio between the largest and the smallest eigenvalues of matrix KF. For the
system with equal springs (case 1), the condition number is  ¼ 6:8541, whereas for case 2,  ¼ 4  105.
For case 1, the iterative sequence (A.24) with Jacobi preconditioner converges within 0.1 % of the exact
solutiondF ¼ ½10
20T inabout20iterations.Forcase2,ittakesalmostonemillioniterationstoconverge
totheexactsolutiondF ¼ 106  ½1 1T.Inbothcases,weused½0 0T astheinitialguess.Theperformanceof
the iterative method could have been improved with a better preconditioner. The convergence of the
preconditioned iterative solver is governed by the condition number of P1KF and not KF alone. For
instance, if P ¼ KF, then  ¼ 1 and the exact solution is obtained in a single iteration, as can be seen from
Equation (A.24).
This example illustrates the importance of conditioning measured in terms of condition number on the
performance of iterative solution methods. Extremely poor conditioning may even affect the performance
SOLUTION METHODS
311

of a direct method due to round-off error. The reader is encouraged to test the direct solver in MATLAB or
other package assuming kð1Þ ¼ 1 and kð2Þ ¼ 1020.
REFERENCES
Dongarra, J.J., Duff, I.S., Sorensen, D.C. and van der Vorst, H.A. (1998) Numerical Linear Algebra for High-
Performance Computers, SIAM, Philadelphia, PA.
Heath, M., Ng, E. and Peyton, B. (1991) Parallel algorithms for sparse linear systems. SIAM Rev., 33, 420–60.
Saad, Y. (1996) Iterative Methods for Sparse Linear Systems, PWS Publishing Company, Boston MA.
Problem
Problem A.1
Consider a cubic function fðxÞ ¼ x2ð3l  2xÞ=l3 deﬁned on the interval 0  x  l and its linear approx-
imation~fðxÞdeﬁnedsuchthat~fð0Þ ¼ fð0Þand~fðlÞ ¼ fðlÞ ¼ 1(FigureA.6).Verify(A.8)andﬁndapointc,
where df
dx ðcÞ ¼ d~f
dx.
x
1
l
f (x)
f (x)
∼
Figure A.6
Cubic function f (x) and its linear approximation g(x).
312
APPENDIX

Index
ABAQUS, 4, 6, 275–301, 309
Accuracy, 1, 70, 77, 79, 82, 92, 99, 105, 117–118,
129, 154, 160, 175
Admissible,
displacement, 69–70, 261
solution, 48, 50, 56
trial solution, 60, 95, 106, 120, 143, 191, 207, 224
weight function, 56, 60, 93, 106, 120, 191, 207, 224
Advection matrix, 121
Advection-diffusion, 9, 65–66, 70, 93, 121–122,
146–148, 189, 207–209
Analysis, 1–4, 6–9, 22, 31, 41–42, 47, 58–60, 67,
70–72, 93, 96, 99, 114–115, 117–118, 154,
186, 204, 212, 215–217, 223, 231, 280,
282, 284–287, 289–290, 295,
298, 301
linear, 2–4, 204, 216
nonlinear, 2–4, 204, 216
stress, 1–4, 22, 41–42, 47, 58–60, 67, 70–71,
93, 96, 99, 114–115, 215–217, 231, 287, 289
Approximation of trial solution, 77–92
Assembled,
external force matrix, 96, 102, 264
stiffness equations, 17, 96, 122
stiffness matrix, 17, 96, 121, 192, 264
system matrix, 25, 27, 96, 264
Assembly,
direct, 18, 20, 23, 25, 32, 96, 101–103, 128, 192,
195–196, 263–264
procedure, 18, 20, 96
matrix operation, 96, 100
Assumption,
Linearity, 216
small-displacement, 217
normality, 250, 254, 267
plane stress, 267
Axial force, 12–14, 74, 111, 272
Axial strain, 13, 218, 251
Balance principle, 146
Bar, 11–40, 41–44, 46, 58–60, 62, 73–76, 98–100,
106–107, 113, 115, 123–124, 126–128,
172, 191, 212, 216, 272, 311
Beam, 4, 70, 244, 249–273
theory, 244, 249, 251, 266, 269, 271
Bilinear,
Function, 182
monomial/term, 161, 165–166
shape functions, 164–165, 182
element, 269
Body force, 42, 68, 74–76, 97–99, 109, 115, 124,
128–129, 220–221, 229–230, 236, 241,
245, 264, 307–308
matrix, 99, 109, 124, 229, 236, 264
Boundary,
arbitrary, 58–61, 105–107
condition, 17, 20, 22, 31, 39, 41, 44, 46–48,
50, 52–54, 56, 58–64, 66–67, 69, 72–75,
93–95, 99–100, 104–106, 108, 111–112,
118–121, 123–126, 129, 131, 139,
141–143, 145, 148, 150–151, 193,
202–207, 209, 212, 223–224, 231–233,
242–243, 245, 254–258, 262, 264, 269,
280–282, 287–289, 295–296, 309
essential boundary condition, 50, 53–54, 56,
58, 60, 62–64, 67, 73, 93–95, 100, 104,
106, 112, 118–120, 142–143, 193,
204–205, 209, 224, 242, 245, 256,
258
natural boundary condition, 50, 53–54, 56, 58,
61–64, 66, 69, 72–73, 93, 104–105, 112,
118, 123, 131, 139, 142, 145, 148, 202, 204,
206–207, 209, 224, 232–233, 242,
254–255, 258, 262
traction boundary condition, 47–48, 50, 52–53,
59, 129, 223–224
homogeneous boundary condition, 232–233
A First Course in Finite Elements
T. Belytschko and J. Fish
# 2007 John Wiley & Sons, Ltd
ISBNs: 0 470 85275 5 (cased) 0 470 85276 3 (Pbk)

Boundary,
curved, 152,154, 164, 168
domain, 204, 305–306
ﬂux matrix, 100–102, 123, 196, 199, 211
force matrix, 110, 230, 232, 236, 241, 263–264
generalized, 62–64, 67, 111, 242
integral, 137–138, 306
nodes, 106, 193, 308–309
value problem, 58, 62–63, 111
Bulk modulus, 223
C0,
C0 continuity/continuous, 60, 71–72, 77–79,
85, 117, 143, 151, 153, 157, 164, 166,
182, 226
C0 functions, 50, 60, 71, 81, 256
C0 (global) shape function, 118, 157–158
C1,
C1 continuity, 50, 159, 259
C1 functions, 50, 256, 258
C1 shape function, 260
Chain rule, 167, 179
Collapsing node, 177, 181, 188
Collapsing quadrilateral element, 176
Commercial software/ﬁnite element program,
106, 171, 176, 202, 275–301, 311
Completeness, 77–81, 117, 152–153, 177–178, 202
Conductivity, 46, 50, 99–100, 140–141, 151, 193,
203–205, 278–279
Anisotropic, 141–142, 203
Isotropic, 193, 203, 205
Thermal, 46, 99, 278
Conductance matrix, 100–101, 123, 191, 193–195,
198–199, 211, 222
Conservation,
Laws, 24–25, 47
Energy, 45
principle/equation, 65, 146–148
Constitutive,
Equation, 46, 222–223
Matrix, 233
Continuity, 24–25, 41, 44, 49–50, 71–72, 77–78, 81,
84–85, 117, 147, 152–153, 157, 159–160,
163–164, 166, 182, 191, 216, 256, 259
Control volume, 45, 65, 139–140, 146–147,
149–150, 217–218
Convection, 44, 63–64, 73, 121, 125, 146, 149–150,
204
Convergence, 70, 77, 84, 105, 113–120, 152–153,
160, 177, 202, 206, 269, 311
by analysis, 118–120
by numerical experiment, 115–118
mathematical theory, 77
property, 84
rate, 116–117, 152–153, 160, 203, 269
Coordinate system,
Cartesiam, 165, 182, 184, 217
local, 28, 35, 267–268
global, 30, 32, 268, 272, 303
element, 28–29, 272–273
Counterclockwise, 28, 137–138, 154, 156, 161,
168, 174, 182, 193–194, 211, 228, 250,
254, 306
Cross-section, 7, 12–13, 25, 37–38, 40, 42–43, 45,
47, 52, 65, 74–75, 97–99, 111, 115,
123–124, 126–129, 212, 249, 252,
270–272, 287, 289
Cubic,
Element, 160, 172, 174–176
serendipity quadrilateral, 171
shape functions, 82–83, 169
Curvature, 252–253
Diffusion, 9, 46–47, 62, 64–67, 70, 93, 99,
120–122, 131, 146–148, 189, 207–209, 222
Direct,
Approach, 11–40, 172
Assembly, 18, 20, 23, 25, 32, 96, 101–103, 192,
195–196, 263–264
construction of shape functions, 82–83
integration, 229–230
Discrete,
Equation, 26, 41–42, 66, 93–97, 105–107, 120,
160, 207, 222, 256, 260–261
Equilibrium, 97
structure, 15
system, 11–40, 96–97, 148
Discretization, 93, 225–228, 258–261, 309
Displacement,
boundary condition, 20, 22, 39, 48, 50, 52,
58, 224
element, 13, 19, 30, 35, 124, 259
ﬁeld, 43, 69, 71, 78, 90–91, 111, 115, 127–128,
216, 218, 224–226, 228, 232, 249, 256,
259–260, 262, 267–269
global, 18–19, 21, 39, 226, 263, 265
inﬁnitesimal, 218
matrix, 13, 17, 21, 28, 30, 34, 39, 226–227,
235–236, 242, 259, 263, 265
nodal, 11, 13–22, 28–29, 35–37, 39, 90–91, 95,
97, 109, 111, 124, 128, 226, 230, 232,
241–242, 261–262, 270, 273, 309
of the midline, 251, 254, 256
prescribed, 20, 22, 49, 51, 58–59, 231, 233
small, 28, 217, 290
Distributed,
loading, 42, 109, 124, 240, 262, 264, 271
moment, 74
source, 211, 307
spring, 74
314
INDEX

Divergence,
operator, 133, 140
theorem, 134–139, 148–149
element, 85, 95, 99, 106, 112, 125–126,
164–165, 168, 173, 181, 183, 187, 199, 207,
226, 307
problem, 11, 46, 52, 54, 59, 99, 137–138,
141–142, 145, 150, 152, 175, 189, 205, 212,
225, 258, 308
E-nodes, 20–21, 269
Elasticity,
matrix, 222
linear, 42, 215, 222–224, 233, 239–240, 250
problem, 42, 62–63, 118, 124, 215, 224, 233,
238, 275
Element,
body force matrix, 99, 109, 124, 229, 236, 264, 307
brick, 181, 187
boundary force matrix, 241
coordinate system, 28–29, 272–273
degrees of freedom, 308
displacement matrix, 13, 30, 259
external force matrix, 96, 227, 246
ﬂux matrix, 191, 207
force matrix, 29–30, 121, 246
gauss points, 202, 242
hexahedral, 181–183, 187
high order, 82, 98, 117, 120, 159, 160, 164, 168–172,
181–185, 268
iso-parametric-3, 152, 164, 166, 168–169, 173, 175,
177–178, 188, 190, 268
number, 12, 32, 153, 168, 197
parent, 164–167, 172–173, 178, 181, 199, 234–235,
247
physical, 164, 166, 168, 173, 175, 183, 247
quadrilateral, 14, 153, 161, 163–166, 169–170, 176–
177,179,181,186,188,193,197–198,201,212,
233, 244, 268, 275, 284, 289
rectangular, 161, 163, 165, 186, 242
serendipity, 171, 246
shape functions, 79–80, 84–85, 90, 94–95, 98, 100,
108–109, 151, 157, 163–164, 171, 185–186,
195, 198, 226
shell, 3, 249–250, 265–269
size, 77, 91, 116–117, 151, 283
stiffness matrix, 13–15, 16–17, 20, 23, 28, 31, 96–98,
108, 124, 128, 227, 263, 272
sub-parametric, 175
temperature matrix, 190, 197
tetrahedral, 181, 183–185
triangular, 3, 14, 152–157, 159–161, 166, 172–176,
180–181, 184–187, 193, 195, 210–213, 230,
241, 243–246, 261, 267
wedge, 181
Energy, 30–31, 44–46, 63–65, 67–72, 76, 114–115,
117–120, 125, 139–142, 144, 146, 150, 196,
206–207, 222, 261–262
balance, 45, 139–142, 144, 150
external, 67
error, 115, 117
heat, 45–46, 64, 139–140, 196
internal, 67, 69, 262
mathematical, 70
norm, 71, 117–120, 125, 206–207
physical, 70
principle, 69, 72
strain, 69–71
Engineering beam theory, 249, 251
Equilibrium, 9, 12, 14, 16, 18, 34, 38, 40, 43–44, 50,
52, 69, 72, 75–76, 97, 129, 217, 219–224,
240, 245, 253–255, 270, 272
equation, 16, 34, 43–44, 50, 52, 72, 75, 129,
221–224, 253–255, 272
Error, 52, 91, 105, 113–120, 123, 125, 154, 204,
207, 216, 239, 312
average, 114
estimation, 120
energy, 115, 117
norm, 116
normalized, 114–115
Essential boundary, 50–51, 53–56, 58, 60, 62–64,
67, 73, 93–95, 100, 103–106, 112,
118–120, 142–144, 191, 193, 196,
204–205, 209, 211, 224, 227, 242, 245,
256, 258, 262
node, 106, 193
condition, 50, 53–54, 56, 58, 60, 62–64, 67, 73,
93–95, 100, 104, 106, 112, 118–120,
142–143, 193, 204–205, 209, 224, 242,
245, 256, 258
Euler-Bernoulli beam theory, 249, 266
External force, 15–16, 19–21, 33, 43, 96–97, 128,
227, 246, 261
matrix, 96–97, 128, 227, 246, 261
F-nodes, 20, 192, 228, 262
Finite difference method, 1, 41, 169
Finite Element,
applications, 1, 4, 7–9, 24–25, 62–63, 99, 115,
118, 131, 151, 169, 192, 201, 203–204,
215–216, 249–250, 265, 269, 311
approximation, 78–79, 81, 95, 104, 120, 131,
152, 159, 189–191, 202–203, 207, 226, 239
formulation, 93, 189, 209, 215, 249
model, 2, 4, 7–8, 15, 32, 93, 121, 124–125, 154,
169, 190, 204, 232, 239, 271, 309
software/program, 6, 106,118, 154, 171, 176,
202, 217, 249, 275–301, 311
Flexural strain, 251, 267
INDEX
315

Flux, 24–26, 45–46, 50, 60–61, 63, 67, 71, 75,
99–102, 104, 114, 123, 126, 131, 133,
139–143, 146, 149, 189, 191–193,
196–203, 205, 207, 209–212, 240,
280–282, 308
boundary ﬂux matrix, 100–102, 123, 196, 199, 211
electric charge, 75
element ﬂux matrix, 191, 207
force, 240
heat, 45, 71, 131, 139, 141, 192, 281–282
matrix, 100–102, 123, 131, 191, 196, 198–201,
207, 211–212
nodal, 25, 207, 209–210, 308
prescribed, 46, 142–143, 205
potential law, 24
Force matrix,
body, 99, 109, 124, 229, 236, 264, 307
boundary, 110, 230, 232, 236, 241, 263–264
element, 30, 121, 246
external, 96–97, 126, 227, 246, 261
internal, 13, 30
Fourier law, 139, 141–142, 146, 148
Free node, 21, 120
Galerkin, 84, 126, 207–209
formulation, 207
least square stabilization, 208
method, 207–209
weak form, 208
Gather,
matrix, 19, 84, 95
operator, 101, 107, 157, 192, 261
Gauss, 77, 85–92, 109–110, 115, 124, 151, 164,
179–181, 185, 193, 197–202, 210,
235–238, 242, 269
formula, 88, 90
integration, 87–88, 91–92, 180, 269
point, 88–89, 199–202, 236–238, 242
quadrature, 77, 85–89, 91–92, 109–110, 115,
124, 151, 164, 179, 181, 185, 193, 197–199,
210, 235
Generalized,
boundary condition, 62–64, 67, 111, 242
Fourier law, 141, 148
Hooke’s law, 222
plane strain, 223
plane stress, 223
strain, 253
stress-strain law, 253, 256
Global,
conductance matrix, 100–101, 123, 195
coordinate system, 30, 32, 268, 272, 303
displacement, 18–19, 21, 39, 226, 263, 265
displacement matrix, 21, 39, 263, 265
ﬂux, 196
force matrix, 21, 124, 242, 246
node, 12, 16–18, 26, 32, 85, 95, 158, 194, 210
node number, 12, 16–18, 26, 95, 158, 194, 210
shape function, 84–85, 94–95, 157–158, 166
source matrix, 123, 196
stiffness matrix, 17–18, 20, 23, 38, 124, 263
Gradient, 46, 75, 103–105, 132–137, 139–142,
145–146, 154, 160–161, 166–167, 176,
190–191, 198, 203, 212, 217, 219, 222, 226,
229, 245, 305–306
operator, 132–133, 146, 167, 191, 222, 226, 229
shape function/solution, 160, 166, 176,
190–191, 305–306
temperature, 46, 103–105, 136–138, 140–142,
146, 191, 219, 222, 226, 229
Green’s formula, 135–136, 139, 143–144
Heat,
conduction, 2, 4, 41, 44–45, 47, 60–62, 67, 70–71,
73, 77, 93, 96, 99, 114–115, 123, 125, 131,
133, 142–143, 146, 150–151, 189, 200,
203–204, 239–240, 275
energy, 45–46, 64, 139–140, 196
ﬂow, 44–46, 135, 140–141, 204, 275
ﬂux, 45, 71, 131, 139, 141, 192, 281–282
inﬂow, 61, 140
source, 45, 99, 123, 139, 193, 209, 211–212,
280, 307–308
transfer, 1, 4, 44, 63, 70, 150, 280, 283, 285–286
Hermite polynomial, 259–260
High order,
Gauss quadrature formulas, 10, 115
Taylor’s formula, 120
element, 82, 98, 117, 120, 159, 160, 164,
168–172, 181–185, 268
Hooke’s law, 12–14, 43, 69, 75, 215, 222, 241,
252–253, 267
Incompressible,
ﬂuid, 65, 147
material, 147, 223
nearly, 223
Integration by parts, 48–49, 51, 55, 59, 61, 66, 131,
134–136, 139, 148, 208, 257
Internal,
energy, 67, 69, 262
force, 11–13, 15, 17, 28, 30, 43, 97
moment, 253–254
Interpolation, 80, 82, 91, 119–120, 125, 182, 229–231
function, 119–120, 125, 182
Lagrange, 82
property, 80
Isoparametric, 3, 152, 164, 166, 168–169, 171,
173–175, 177–178, 182, 186, 188, 190, 268
concept, 164, 169, 174, 182, 268
316
INDEX

element, 3, 152, 164, 166, 168–169, 173, 175,
177–178, 188, 190, 268
shape function, 166, 168
Isotropic, 140–142, 148, 203, 205, 207, 210, 212,
222–223, 241, 243, 245, 267
conductivity, 203, 205
constant diffusion, 207
Hooke’s law, 241
material, 140–142, 148, 210, 212, 222–223, 243,
245, 267
symmetry, 141
Jacobian matrix, 167–168, 176, 179–180, 183,
198, 235
L2,
error, 114, 116
norm, 91, 114, 116, 203
Lagrange, 82, 117, 171, 174, 247, 308
family, 171
interpolants, 82, 117, 174
Laplacian operators, 145
Least squares, 207–209
Mapping, 86, 164–165, 167, 169–170, 179, 182, 184
Material moduli matrix,
Mesh, 1–2, 4, 6–7, 11, 15–16, 20, 77–78, 84–86, 91,
93–94, 99–100, 104–108, 116–118,
122–123, 126–127, 129, 139, 152, 154,
157–159, 161, 164–166, 169, 176, 182, 193,
197, 200–203, 205–207, 210–213, 225–226,
233–234, 238–240, 242–246, 260, 263, 265,
272,275,282–286,289,291,297–301,307,309
coarse, 77, 240, 298–299
ﬁne, 77, 203, 212, 239, 244, 300
generation, 1
reﬁnement, 77, 275, 291
Midside node, 168, 174
Midsurface, 266–268
Minimum potential energy, 31, 67–71, 76, 115, 261–262
Moment of inertia, 74, 252, 270, 272
Multidimensional, 28, 93, 104, 131, 151, 154, 189, 207
Natural boundary, 50, 53–54, 56, 58, 61–64, 66, 69,
72–73, 93, 96, 101, 104–105, 112, 118, 123,
131, 139, 142–145, 148, 196, 200, 202,
204, 206–207, 209, 224, 232–233, 242,
254–255, 258, 262
conditions, 50, 58, 61–62, 66, 69, 104, 112, 118,
131, 148, 202, 204, 206–207, 209, 224,
232–233, 242, 254–255, 258, 262
Nodal,
displacements, 11, 13–16, 18–22, 28, 35–37, 39,
90–91, 95, 97, 109, 111, 124, 128, 226,
230, 241–242, 261–262, 270, 273, 309
forces, 11, 13–17, 19, 28–29, 35–36, 109, 230, 241,
247, 259, 261, 268, 308
ﬂuxes, 207, 210, 308
temperatures, 1, 104, 125, 190, 203, 211
Norm, 28, 45, 59, 61, 65, 71, 91, 113–120, 125,
134, 136–137, 139–142, 171, 174, 203,
206–207, 219–220, 222, 232–233, 241–242,
249–250, 252, 254–256, 266–268, 289,
295, 305, 307
Normality assumption, 250, 254
Numerical,
integration, 85, 180–181, 212, 229, 243
method/ approach, 1, 41
solution, 151
One-dimensional, 24, 41–42, 45, 58–59, 62, 64–65,
67, 77–79, 83, 86, 90, 93, 107, 113, 115,
119, 121, 124, 126, 131, 133–135, 142,
144–145, 151, 155, 157, 161–162, 165,
168–169, 171, 177, 179–180, 182, 187, 190,
207, 217, 222, 245, 269
approximation, 77–92
ﬁnite element formulation, 93–129
problems, 41–76
Operator,
divergence, 140
gather/scatter, 96, 101, 107, 157, 192, 261
gradient, 132–133, 146, 167, 191, 219, 222, 226, 229
Laplacian, 141, 145
Orthogonality, 29, 36
Parent, 15, 17, 57, 76, 86, 109, 145, 164–170, 172–173,
175, 178–184, 198–199, 234–235, 247, 284
coordinate, 164, 167, 170, 172, 179, 181
domain, 86, 109, 179–180, 198–199
element, 164–167, 172–173, 178, 181, 199,
234–235, 247
Partition method, 63–64, 111–112
Pascal triangle, 153, 159–161, 175
Patch test, 177, 202–203
Penalty method, 22, 39, 63–64, 97, 111–112, 192
Physical,
coordinates, 164, 166–167, 172
domain, 86, 164–165, 168, 170, 179, 181,
183–184, 199, 201, 236
element, 164, 166, 168, 173, 175, 183, 247
energy, 70
Piecewise continuous, 50–51
Plane strain, 222–223, 289–290
Plane stress, 222–223, 233, 238, 242, 252, 267, 279,
294, 297
Poisson’s ratio, 223, 233, 242, 244, 287, 294
Polynomial expansion, 81, 151–153, 160–161
Post-processing, 11, 31, 34, 93, 103, 107, 111,
201–202, 265
INDEX
317

Potential, 2–3, 24–26, 31, 67–71, 76, 115, 131, 134,
160, 261–262
energy, 31, 67–71, 76, 115, 261–262
ﬁeld, 2, 134
Prescribed,
boundary value, 44
displacement, 20, 22, 49, 51, 58–59, 231, 233
ﬂux, 46, 142–143, 205
temperature, 46, 142–143, 202, 205, 243
traction, 52, 58, 62, 126, 231, 242
Pressure, 7, 25, 31, 246–247, 261, 295–296
ﬁeld, 25
vessel, 7
Programming, 9, 202, 269
Quadratic,
displacement ﬁeld, 128
element, 81, 91, 108, 116–117, 120, 123–124,
126–128, 159–160, 168, 174, 177, 269, 297
shape function, 82, 168, 187, 269
trial solution, 57–58, 75
Rate of,
convergence, 91, 116–117, 152–153, 160, 203, 269
heat energy, 45
heat ﬂow, 45
Reduced stiffness matrix, 39
Residual, 52–53, 97, 112–113, 196, 207–209
Rotations, 261, 266, 268–269, 271
matrix, 29, 36, 272
Scalar ﬁeld, 131, 134, 136, 189, 305
Scatter and add, 18, 20, 25–26, 96, 121
Scatter matrix, 190
Shape function,
element, 79–80, 84–85, 90, 94–95, 98, 100, 108–109,
151, 157, 163–164, 171, 185–186, 190,
195, 198, 226
global, 84–85, 94–95, 157–158, 166
Shear,
force, 28, 252, 254, 265, 272–273
modulus, 74, 223
strain, 217–218, 222, 251
Shell, 3, 249–250, 265–269, 277, 292
element, 3, 249–250, 265–269
theory, 266–268
Singular, 17, 71, 97, 176, 204, 232, 239–240, 310
Small displacement, 28, 217, 290
Solution quality, 103, 111, 113
Solver, 4, 202, 309–312
Space, 2, 27–28, 60, 66, 71, 90, 118–119, 122, 127,
143, 256, 258, 266, 268, 277, 292
St Venant’s principle, 239
Stability, 122, 204, 207
Steady-state heat conduction, 47, 131, 239, 275
Stiffness matrix, 13–18, 20, 23, 28–31, 38–39, 48,
50, 60, 96–98, 108–109, 124, 126–128,
222, 227, 229, 235–236, 242, 260,
262–263, 269–272
Strain,
energy, 69–71
ﬁeld, 90, 215, 241
Strain-displacement equation, 14, 43, 49, 69, 215,
217, 222, 226, 267
Stress,
ﬁeld, 111, 218
vector, 219–220
Stress-strain law, 13, 43–44, 49, 57, 69, 74, 107,
216–217, 222, 245, 252–253, 256, 267
Stress-traction relation, 240
Strong form, 41–42, 44, 46–56, 58–67, 69–70,
72–75, 93, 103, 115, 118, 123, 125,
131–132, 139, 142, 144, 146, 149–150,
202, 224, 254, 256–258, 265
Symmetric matrix, 30, 219
Temperature, 1–2, 4, 7, 31, 44–46, 50, 60, 63, 70–71,
73–74, 77–78, 90, 99, 103–105, 123, 125–126,
131, 134, 139–143, 146, 149–151, 186, 190,
193, 196–197, 200–206, 210–212, 243,
280–281, 284–286
Tetrahedral, 181, 183–185
coordinates, 183
domain, 185
element, 181, 183–185
Thermal,
conductivity, 46, 99, 123, 278
expansion, 74, 243
radiation, 44
Traction, 42, 44, 47–50, 52–53, 58–59, 62, 68,
93, 115, 124, 126, 129, 219–221,
223–224, 230–233, 236, 240–242, 245,
288–289, 295
boundary condition, 47–48, 50, 52–53, 59, 129,
223–224
vector, 220–221
Transport, 46, 64–67, 147
Transverse shear strain, 251
Trial solutions, 48, 50, 52–54, 56–60, 66, 71, 77–78,
81, 84–85, 93–95, 106, 113, 120, 126, 131,
143, 151–152, 157, 189, 191, 207–208,
224, 258, 260
Triangular,
coordinates, 172–176, 187, 229
domain, 152, 181, 210–211, 241, 243
element, 3, 14, 152–157, 159–161, 166,
172–176, 180–181, 184–187, 193, 195,
210–213, 230, 241, 243–246,
261, 267
mesh, 154, 242
318
INDEX

Truss,
element, 28, 35, 270
member, 11
structure, 11, 20, 27, 31, 37, 40
Unit normal, 59, 61, 134, 136–137, 220, 305, 307
Variational,
approach/methods, 9, 70, 72, 268
calculus, 67–68
principle, 3, 67, 69–70
Vector ﬁeld problems, 215
Vertical displacement, 39, 254
Virtual work, 31, 47, 69, 76
Von Mises stress, 238
Weak form, 11, 41–42, 47–57, 59–61, 63–64,
66–67, 69–78, 81, 85, 93–95, 97–98, 105,
112–113, 118–120, 125–126, 131–132, 139,
142–146, 148–150, 172, 189, 192, 202,
207–208, 215, 217, 224–227, 231,
242–243, 245, 254–258, 260, 270, 272
Weight function, 47–57, 59–61, 64, 66–67, 71–73,
75, 77–78, 81, 84–85, 93–95, 97, 106, 113,
118, 120, 126, 139, 142–144, 148, 151,
189–191, 207–209, 224–227, 245,
255–256, 258, 260
Young’s modulus, 12, 37–38, 40, 43, 74–75, 97–98,
100, 115, 124, 126–129, 222–223, 233, 242,
244, 270–272, 287, 294
INDEX
319

Figure 1.3
Figure 1.4

Figure 1.5
Figure 8.10

Figure 8.15
Figure 9.14

Figure 10.1
Figure 11.1

1
2
3
1
2
3
(a)                                                                        (b) 
Figure 11.12
NT11
+0.000e+00
+1.614e-01
+3.228e-01
+4.842e-01
+6.456e-01
+8.070e-01
+9.684e-01
+1.130e+00
+1.291e+00
+1.453e+00
+1.614e+00
+1.775e+00
+1.937e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
Figure 11.13

NT11
+0.000e+00
+3.074e-01
+6.149e-01
+9.223e-01
+1.230e+00
+1.537e+00
+1.845e+00
+2.152e+00
+2.460e+00
+2.767e+00
+3.074e+00
+3.382e+00
+3.689e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
Figure 11.14
NT11
+0.000e+00
+2.312e-01
+4.624e-01
+6.937e-01
+9.249e-01
+1.156e+00
+1.387e+00
+1.619e+00
+1.850e+00
+2.081e+00
+2.312e+00
+2.543e+00
+2.775e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.324e-01
+4.648e-01
+6.971e-01
+9.295e-01
+1.162e+00
+1.394e+00
+1.627e+00
+1.859e+00
+2.091e+00
+2.324e+00
+2.556e+00
+2.789e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.322e-01
+4.645e-01
+6.967e-01
+9.289e-01
+1.161e+00
+1.393e+00
+1.626e+00
+1.858e+00
+2.090e+00
+2.322e+00
+2.555e+00
+2.787e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
NT11
+0.000e+00
+2.323e-01
+4.646e-01
+6.969e-01
+9.292e-01
+1.161e+00
+1.394e+00
+1.626e+00
+1.858e+00
+2.091e+00
+2.323e+00
+2.555e+00
+2.788e+00
Step: Step-1, Two-dimensional steady state heat transfer
Increment      1: Step Time =    1.000
Primary Var: NT11
Deformed Var: not set   Deformation Scale Factor: not set
1
2
3
tri-finest
quad-finest
Figure 11.15

(Ave. Crit.: 75%)
S, Mises
+2.967e-01
+2.248e+01
+4.465e+01
+6.683e+01
+8.901e+01
+1.112e+02
+1.334e+02
+1.556e+02
+1.777e+02
+1.999e+02
+2.221e+02
+2.443e+02
+2.664e+02
Step: Step-1
Increment      1: Step Time =    1.000
Primary Var: S, Mises
Deformed Var: U   Deformation Scale Factor: +7.586e+03
1
2
3
Figure 11.19
Figure 11.30

Figure 11.31
Figure 11.32

