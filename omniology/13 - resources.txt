1. Create a new YAML file called argocd.yaml  and add the following:
4. Apply the above configuration by running:
5. Go to the UI of Argo CD.
6. Login using the username of admin  and your password
7. Delete the nginx  application from the UI. You need to type the name of the application nginx  in the 
dialog box for the deletion operation to complete.
8. Go to the terminal and in the argocd  directory create a new application manifest for HTTPbin. The 
filename should be httpbin.yaml  and the contents should be as follows:
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://gitlab.com/[your username]/samplegitopsapp.git'
    path: argo-cd
    targetRevision: main
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: argocd
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
kubectl apply -f argocd.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: httpbin
  namespace: argocd
spec:
  project: default
  source:
    chart: httpbin
    repoURL: https://matheusfm.dev/charts
    targetRevision: 0.1.1
    helm:
      releaseName: httpbin

9. Create and push a merge request:
10. Copy the MR link that is displayed and paste it in new browser tab.
11. Approve and merge the MR.
12. Go to ArgoCD UI and click Refresh on the argocd application. You should see the HTTPbin application 
appear and the icon reflecting that it is a Helm chart.
13. Go back to the terminal and open the httpbin.yaml .
14. The contents of the file should look as follows:
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
gco -b feature/add-httpbin-chart
git add httpbin.yaml
git commit -m "Adds the HTTPbin chart"
git push --set-upstream origin feature/add-httpbin-chart
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: httpbin
  namespace: argocd
spec:
  project: default
  source:
    chart: httpbin
    repoURL: https://matheusfm.dev/charts
    targetRevision: 0.1.1
    helm:
      releaseName: httpbin
      values: |
        service:
          type: NodePort
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
      prune: true

15. Save the file.
16. Create a merge request by running the following commands:
17. Copy the link from the output and paste it in a new browser tab. Create, approve, and merge the MR.
18. Move to the Argo CD dashboard and refresh the argocd application.
19. Move back to the terminal and check the service type again by running:
20. Type the following command (without executing it):
21. Get the node IP address by running:
22. Test the service by running:
23. Create a new Helm chart in the root directory by running the following command:
24. Go inside the directory and change the values file as follows:
25. Check the version of the chart in the Chart.yaml file.
26. Package the chart by running:
git checkout -b feature/httpbin-service-type
git add httpbin.yaml
git checkout -m "Changes the HTTPbin service type to NodePort"
git push --set-upstream origin feature/httpbin-service-type
kubectl get svc
helm upgrade httpbin --set service.type=nodeport matheusfm/httpbin
kubectl get nodes -o wide
curl "172.18.0.2:31994/get" -H "accept: application/json" # replace the IP address 
and port with the appropriate values.
helm create httpd
# values.yaml
image:
  repository: httpd
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

27. Check the file that was created by running:
28. Get the project ID from Gitlab by going to the project page and clicking on settings. Copy the ID.
29. In the terminal, upload the package by running the following command:
30. Create the repository credentials using the following command:
31. Create a new branch to add the busybox manifest:
32. Create a new application in the argocd directory called busybox.yaml  and add the following content:
helm package .
ls -ltr
curl --request POST --form 'chart=@httpd-0.1.0.tgz' --user "[your username]:[your 
token]" https://gitlab.com/api/v4/projects/[your project 
id]/packages/helm/api/stable/charts
argocd repocreds add https://gitlab.com/api/v4/projects/[your project 
id]/packages/helm/stable --username [your username] --password [your personal 
token]
git checkout -b feature/httpd
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: httpd
  namespace: argocd
spec:
  project: default
  source:
    chart: httpd
    repoURL: https://gitlab.com/api/v4/projects/[project id]/packages/helm/stable
    targetRevision: 0.1.0
    helm:
      releaseName: httpd
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
      prune: true

33. Push the changes to Gitlab
34. Copy the link that was generated in the output, paste in a new browser tab. Approve and merge the 
MR to the main branch.
35. Move to the Argo CD UI and click on the Refresh button on the Argo CD applciation to sync the 
changes.
36. Move to the terminal and view the BusyBox pods by running:
37. Create a new branch to change Nginx installation method from manifests to the Helm directory:
38. Change the nginx.yaml  manifest to look as follows:
39. Push the change to Gitlab:
git add -A
git commit -m "Adds the Apache Argo CD manifest"
git push --set-upstream origin feature/httpd
kubectl get pods
git checkout -b feature/nginx-helm
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nginx
  namespace: argocd
spec:
  project: default
  source:
    repoURL: 'https://gitlab.com/[your username]/samplegitopsapp.git'
    path: mychart # changed
    targetRevision: main
    # Add this
    helm:
      releaseName: nginx
      values: |
        replicaCount: 2
    # till here
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
      prune: true

40. Copy the link that was generated in the output and paste it in a new browser tab. Approve and merge 
the MR.
41. Go to the Argo CD UI and click Refresh on the argocd application. Make sure that the nginx application 
has changed the path to mychart .
42. Go to the terminal and show the new pods by running:
git add -A
git commit -m "Changes the Nginx installation from plain manifests to Helm"
git push --set-upstream origin feature/nginx-helm
kubectl get pods

