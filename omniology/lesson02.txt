1
Introduction to Logic
Michael Genesereth and Eric Kao
Stanford University
Propositional Logic

2
Talking Head
Talking Head

3
Propositional Logic Syntax
Simple Sentences
    express simple facts about the world
Compound sentences
    express logical relationships
    among simpler sentences of which composed
Propositional Sentences

4
In Propositional Logic, simple sentences take the
form of atomic symbols, called proposition constants.
By convention (in this course), proposition constants
are written as strings of letters, digits, and the special
character _.
Examples:
Non-Examples:
raining
    324567
r32aining
    raining-or-snowing
rAiNiNg
raining_or_snowing
Simple Sentences
Compound Sentences I
Negations:
(¬p)
  The argument of a negation is called the target.
Conjunctions:
(p ∧ q)
  The arguments of a conjunction are called conjuncts.
Disjunctions:
(p ∨ q)
  The arguments of a disjunction are called disjuncts.

5
Compound Sentences II
Implications:
(p ⇒ q)
  The left argument of an implication is the antecedent.
  The right argument is the consequent.
Equivalences / Biconditionals:
(p ⇔ q)
Nesting
Note that compound sentences can be nested inside of
other compound sentences.
((p ∧ q) ∧ r)
((p ∨ q) ∨ r)
(((p ∧ q) ∧ r) ⇒ ((p ∨ q) ∨ r))

6
Parentheses
Parentheses are messy and sometimes unnecessary.
(((p ∧ q) ∨ r) ⇒ ((p ∨ q) ∧ r))
Dropping Parentheses makes things simpler.
(p ∧ q) becomes p ∧ q
But it can lead to ambiguities.
((p ∧ q) ∨ r) becomes p ∧ q ∨ r
(p ∧ (q ∨ r)) becomes p ∧ q ∨ r
Precedence
Parentheses can be dropped when the structure of an
expression can be determined by precedence.
¬
∧
∨
⇒ ⇔

7
Using Precedence
An operand surrounded by two operators associates
with the operator of higher precedence.   If
surrounded by operators of equal precedence, the
operand associates with the operator to the right.
p ∧ q ∨ r  
→ 
((p ∧ q) ∨ r)
p ∨ q ∧ r  
→
(p ∨ (q ∧ r))
p ⇒ q ⇒ r
→
(p ⇒ (q ⇒ r))
p ⇔ q ⇐ r
→
(p ⇔ (q ⇒ r))
¬p ∧ q
 
→
((¬p) ∧ q)
Propositional Languages
A propositional vocabulary is a set/sequence of
proposition constants.
Given a propositional vocabulary, a propositional
sentence is either (1) an individual proposition
constant or (2) a compound sentence formed from
simpler sentences (as previously defined) and that’s
all.
A propositional language is the set of all
propositional sentences that can be formed from a
propositional vocabulary.

8
Exercise

9
Propositional Logic Semantics
Talking Head

10
Truth Assignment
A propositional truth assignment is an association
between the proposition constants in a propositional
language and the truth values true or false.  For
simplicity, in what follows we use 1 as a synonym for
true and 0 as a synonym for false.
p
i
⎯ → 
⎯ 1
pi =1
q
i
⎯ → 
⎯ 0
qi = 0
r
i
⎯ → 
⎯ 1
ri =1
Sentential Truth Assignment
A sentential truth assignment is an association
between arbitrary sentences in a propositional
language and the truth values 1 and 0.
pi = 1
(p ∨ q)i = 1
qi = 0
(q ∨ ¬r)i = 0
ri = 1
((p ∨ q) ∧ ¬(q ∨ ¬r))i = 1
Each propositional truth assignment leads to a
particular sentential truth assignment by application
of operator semantics.

11
Negation
Negation:
For example, if the truth value of p is 0, then the truth
value of ¬p is 1.
For example, if the truth value of (p∧q) is 1, then the
truth value of ¬(p∧q) is 0.
φ
¬φ
1
0
0
1
Conjunction
Conjunction:
φ
ψ
φ ∧ψ
1
1
1
1
0
0
0
1
0
0
0
0

12
Disjunction
Disjunction:
NB: The type of disjunction here is called inclusive
or, which says that a disjunction is true if and only if
at least one of its disjuncts is true.  This contrasts with
exclusive or, which says that a disjunction is true if
and only if an odd number of its disjuncts is true.
φ
ψ
φ ∨ψ
1
1
1
1
0
1
0
1
1
0
0
0
Implication
Implication:
NB: The semantics of implication here is called
material implication.  An implication is true if the
antecedent is false, whether or not there is a
connection to the consequent.
If George Washington is alive, I am a billionaire.
φ
ψ
φ ⇒ψ
1
1
1
1
0
0
0
1
1
0
0
1

13
Equivalence
Equivalence:
φ
ψ
φ ⇔ψ
1
1
1
1
0
0
0
1
0
0
0
1
Evaluation Procedure
Start with a propositional truth assignment and a
sentence.
(1) Replace proposition constants by their truth
values.
(2) Use operator semantics to simplify compound
sentences with truth values as arguments.
(3) Repeat this inside-out fashion to produce a value
for the sentence as a whole.

14
Evaluation Example
Interpretation i:
Compound Sentence
(p ∨ q) ∧ (¬q ∨ r)
pi
=
1
qi
=
0
ri
=
1
More Complex Example
pi = 1
qi = 1
ri = 1
(r ∧ ((p ∧ ¬q) ∨ (¬p ∧ q))) ∨ (p ∧ q)
(1 ∧ ((1 ∧ ¬1) ∨ (¬1 ∧ 1))) ∨ (1 ∧ 1)
(1 ∧ ((1 ∧ 0) ∨ (0 ∧ 1))) ∨ (1 ∧ 1)
(1 ∧ (0 ∨ 0)) ∨ 1
(1 ∧ 0) ∨ 1
0 ∨ 1
1
p
q
r

15
Exercise
Satisfaction and Falsification
A truth assignment satisfies a sentence if and only if it
assigns the value 1 to the sentence.
A truth assignment falsifies a sentence if and only if it
assigns the value 0 to the sentence.
A truth assignment satisfies a set of sentences if and
only if it satisfies every element in the set.
A truth assignment falsifies a set of sentences if and
only if it falsifies at least one element in the set.

16
Satisfaction
Evaluation Versus Satisfaction
Evaluation:
Satisfaction:
pi
=
1
qi
=
0
(p∨q)i
=
1
(¬q)i
=
1
(p∨q)i
=
1
(¬q)i
=
1
pi
=
1
qi
=
0

17
Example
pi = ?
qi = ?
ri = ?
((r ∧ ((p ∧ ¬q) ∨ (¬p ∧ q))) ∨ (p ∧ q))i = 1
p
q
r
Truth Tables
p
q
r
1
1
1
1
1
0
1
0
1
1
0
0
0
1
1
0
1
0
0
0
1
0
0
0
A truth table is a table of all possible truth assignments
for the proposition constants in a language.
One column per constant.
One row per truth assignment.
For a language with n constants,
there are 2n truth assignments.

18
Satisfaction Procedure
Method to find propositional truth assignments that
satisfy a given set of sentences:
(1)Form a truth table for the proposition constants
and add columns for each sentence in our set.
(2) Evaluate each sentence for each of the rows of the
truth table.
(3) Any row that satisfies all sentences in the set is a
solution to the problem.
Satisfaction Problem
Find a truth assignment that satisfies the following set
of sentences.
{q ⇒ r,  p ⇒ q ∧ r,  ¬r}

19
Satisfaction Example (start)
p
q
r
q⇒r
p⇒q∧r
¬r
1
1
1
1
1
0
1
0
1
1
0
0
0
1
1
0
1
0
0
0
1
0
0
0
Satisfaction Example (continued)
p
q
r
q⇒r
p⇒q∧r
¬r
1
1
1
1
1
1
0
0
1
0
1
1
1
0
0
1
0
1
1
1
0
1
0
0
0
0
1
1
0
0
0
1

20
Satisfaction Example (continued)
p
q
r
q⇒r
p⇒q∧r
¬r
1
1
1
1
1
1
1
0
0
0
1
0
1
1
0
1
0
0
1
0
0
1
1
1
1
0
1
0
0
1
0
0
1
1
1
0
0
0
1
1
Satisfaction Example (concluded)
p
q
r
q⇒r
p⇒q∧r
¬r
1
1
1
1
1
0
1
1
0
0
0
1
1
0
1
1
0
0
1
0
0
1
0
1
0
1
1
1
1
0
0
1
0
0
1
1
0
0
1
1
1
0
0
0
0
1
1
1

21
Exercise
Properties of Sentences

22
Talking Head
Properties of Sentences
A sentence is valid if and only if
every interpretation satisfies it.
A sentence is contingent if and only if
some interpretation satisfies it and
some interpretation falsifies it.
A sentence is unsatisfiable if and
only if no interpretation satisfies it.
Valid
Contingent
Unsatisfiable

23
Properties of Sentences
A sentences is satisfiable if and only
if it is either valid or contingent.
A sentences is falsifiable if and only
if it is contingent or unsatisfiable.
Valid
Contingent
Unsatisfiable
}
}
Example of Validity 1
p
q
r
(p⇒q)
(q⇒r)
( p⇒q)∨(q⇒r)
1
1
1
1
1
0
1
0
1
1
0
0
0
1
1
0
1
0
0
0
1
0
0
0

24
Example of Validity 2
p
q
r
(p⇒q)
(q⇒r)
( p⇒q)∨(q⇒r)
1
1
1
1
1
1
1
0
1
0
1
0
1
0
1
1
0
0
0
1
0
1
1
1
1
0
1
0
1
0
0
0
1
1
1
0
0
0
1
1
Example of Validity 3
p
q
r
(p⇒q)
(q⇒r)
( p⇒q)∨(q⇒r)
1
1
1
1
1
1
1
0
1
0
1
0
1
0
1
1
0
0
0
1
0
1
1
1
1
0
1
0
1
0
0
0
1
1
1
0
0
0
1
1

25
Example of Validity 4
p
q
r
(p⇒q)
(q⇒r)
( p⇒q)∨(q⇒r)
1
1
1
1
1
1
1
1
0
1
0
1
1
0
1
0
1
1
1
0
0
0
1
1
0
1
1
1
1
1
0
1
0
1
0
1
0
0
1
1
1
1
0
0
0
1
1
1
More Validities
Double Negation:
p ⇔ ¬¬p
deMorgan's Laws:
¬(p∧q) ⇔ (¬p∨¬q)
¬(p∨q) ⇔ (¬p∧¬q)
Implication Introduction:
p ⇒ (q ⇒ p)
Implication Distribution
(p ⇒ (q ⇒ r)) ⇒ ((p ⇒ q) ⇒ (p ⇒ r))

26
Exercise
Logical Entailment

27
Talking Head
Logical Entailment
A set of premises Δ logically entails a conclusion ϕ
(written as Δ |= ϕ) if and only if every interpretation
that satisfies the premises also satisfies the
conclusion.
{p} |= (p ∨ q)
{p} |# (p ∧ q)
{p, q} |= (p ∧ q)

28
Logical Entailment ≠ Logical Equivalence
{p} |= (p ∨ q)
{p ∨ q)} |# p
Analogy in arithmetic: inequalities rather than equations
Truth Table Method
Method for computing whether a set of premises
logically entails a conclusion.
(1)Form a truth table for the proposition constants
and add a column for the premises and a column
for the conclusion.
(2) Evaluate the premises for each row in the table.
(3) Evaluate the conclusion for each row in the table.
(4) If every row that satisfies the premises also
satisfies the conclusion, then the premises
logically entail the conclusion.

29
Example
Does p logically entail (p ∨ q)?
p
q
p
p∨q
1
1
1
1
1
0
1
1
0
1
0
1
0
0
0
0
Example
Does p logically entail (p ∧ q)?
p
q
p
p∧q
1
1
1
1
1
0
1
0
0
1
0
0
0
0
0
0

30
Example
Does {p,q } logically entail (p ∧ q)?
p
q
p
q
p∧q
1
1
1
1
1
1
0
1
0
0
0
1
0
1
0
0
0
0
0
0
Example
Problem: {(p⇒q), (m ⇒ p∨q), m} |= q?
m
p
q
p⇒q
m⇒p∨q
m
q
1
1
1
1
1
1
1
1
1
0
0
1
1
0
1
0
1
1
1
1
1
1
0
0
1
0
1
0
0
1
1
1
1
0
1
0
1
0
0
1
0
0
0
0
1
1
1
0
1
0
0
0
1
1
0
0

31
Logical Entailment and Satisfiability
Unsatisfiability Theorem: Δ |= ϕ if and only if Δ ∪
{¬ϕ} is unsatisfiable.
Proof: Suppose that  Δ |= ϕ.  If a truth assignment satisfies Δ,
then it must also satisfy ϕ.  But then it cannot satisfy ¬ϕ.
Therefore, Δ ∪ {¬ϕ} is unsatisfiable.
Suppose that Δ ∪ {¬ϕ} is unsatisfiable.  Then every truth
assignment that satisfies Δ must fail to satisfy ¬ϕ, i.e. it must
satisfy ϕ.  Therefore, Δ |= ϕ.
Upshot: We can determine logical entailment by
determining unsatisfiability.

32
The Big Game
The Big Game
Stanford people always tell the truth, and Berkeley
people always lie.  Unfortunately, by looking at a
person, you cannot tell whether he is from Stanford or
Berkeley.
You come to a fork in the road and want to get to the
football stadium down one fork. However, you do not
know which to take.  There is a person standing there.
What single question can you ask him to help you
decide which fork to take?

33
Basic Idea
left
su
Question
Response
1
1
1
0
0
1
0
0
Basic Idea
left
su
Question
Response
1
1
1
1
0
1
0
1
0
0
0
0

34
Basic Idea
left
su
Question
Response
1
1
1
1
1
0
1
0
1
0
0
0
0
0
Basic Idea
left
su
Question
Response
1
1
1
1
1
0
0
1
0
1
0
0
0
0
1
0

35
The Big Game Solved
Question: Is it the case that the left road the way to
the stadium if and only if  you are from Stanford?
(left ⇔ su)?

