NOT FOR REUSE
Constructing response models
P(response | stimulus) r(t) given a stimulus s
P(response | stimulus)

NOT FOR REUSE
Basic coding model: linear response
r(t) = f s(t)    
s(t)
r(t)

NOT FOR REUSE
Basic coding model: temporal filtering
𝑟(𝑡) =  
𝑘=0
𝑛
𝑠𝑡−𝑘𝑓𝑘
Linear filter:  
f
t
t
r(t)
𝑟𝑡=  
−∞
𝑡
𝑑𝜏𝑠𝑡−𝜏𝑓(𝜏)

NOT FOR REUSE
Example I: running average
𝑟(𝑡) =  
𝑘=0
𝑛
𝑠𝑡−𝑘𝑓𝑘
Linear filter:  
r(t)

NOT FOR REUSE
Example II: leaky average
Linear filter:  
𝑟(𝑡) =  
𝑘=0
𝑛
𝑠𝑡−𝑘𝑓𝑘
r(t)

NOT FOR REUSE
Basic coding model: spatial filtering

NOT FOR REUSE
Basic coding model: spatial filtering
retina
Visual cortex

NOT FOR REUSE
Basic coding model: spatial filtering
𝑟(𝑡) =  
𝑘=0
𝑛
𝑠𝑡−𝑘𝑓𝑘
=  
−∞
∞
𝑑𝑥′𝑑𝑦′ 𝑠𝑥−𝑥′, 𝑦−𝑦′ 𝑓(𝑥′, 𝑦′)
𝑟𝑥, 𝑦=
 
𝑥′=−𝑛,𝑦′=−𝑛
𝑛
𝑠𝑥−𝑥′,𝑦−𝑦′𝑓𝑥′,𝑦′
Temporal filter

NOT FOR REUSE
x’
y’
f(x’,y’)
http://en.wikibooks.org/wiki/Sensory_Systems/Visual_System
Spatial filtering and retinal receptive fields
𝑟𝑥, 𝑦=
 
𝑥′=−𝑛,𝑦′=−𝑛
𝑛
𝑠𝑥−𝑥′,𝑦−𝑦′𝑓𝑥′,𝑦′
x’
y’
Cartoon f(x’,y’)

NOT FOR REUSE
http://en.wikibooks.org/wiki/Sensory_Systems/Visual_System
Spatial filtering and receptive fields
x’
y’
f(x’,y’)
x’
y’
𝑟𝑥, 𝑦=
 
𝑥′=−𝑛,𝑦′=−𝑛
𝑛
𝑠𝑥−𝑥′,𝑦−𝑦′𝑓𝑥′,𝑦′
Cartoon f(x’,y’)

NOT FOR REUSE
http://en.wikibooks.org/wiki/Sensory_Systems/Visual_System
Spatial filtering and receptive fields
x’
y’
f(x’,y’)

NOT FOR REUSE
http://docs.gimp.org/2.6/en/plug-in-dog.html
Spatial filteringNOT FOR REUSE

NOT FOR REUSE
x
y
t
Basic coding model: spatiotemporal filtering
rx,y(t) = dx’ dy’ dt f(x’,y’,t) s(x-x’,y-y’,t-t)

NOT FOR REUSE
…shortcomings? 
Basic coding model: temporal filtering
Linear filter:  r(t) = s(t-t) f(t) dt
r(t)NOT FOR REUSE

NOT FOR REUSE
Next most basic coding model
Linear filter & nonlinearity:  r(t) = g( s(t-t) f(t) dt)    
s*f
input/output 
function
f
r(t)

NOT FOR REUSE
s*f
input/output 
function
f
How to find the components of this model
r(t)

NOT FOR REUSE
s*f
input/output 
function
f
How to find the components of this model
r(t)

NOT FOR REUSE
How to proceed?
P(response | stimulus)
Our problem is one of dimensionality!
We want to sample the responses of the system to
many stimuli so we can characterize what it is about 
the input that triggers responses.
P(response | stimulus) P(response | s1)

NOT FOR REUSE
Start with a very high dimensional description
(eg. an image or a time-varying waveform)
and pick out a small set of relevant dimensions. 
s(t)
s1 s2 s3
t1
t2
t3
s4 s5 s.. s.. s.. sn
s(t) = (st1,st2,st3,…,stn)
Dimensionality reduction

NOT FOR REUSE
What is the right stimulus to use?
P(response | stimulus) P(response | s1, s2, .., sn)
One common and useful method is to use 
white noise
We want to sample the responses of the system to
a variety of stimuli so we can characterize what it is about 
the input that triggers responses.

Gaussian prior
stimulus distribution
Determining multiple features from white noise

Spike-triggered
average
Gaussian prior
stimulus distribution
Spike-conditional 
distribution
Determining linear features from white noise

NOT FOR REUSE
Reverse correlation: the spike-triggered average
Spike-
conditional
ensemble
Dayan and Abbott, Theoretical NeuroscienceNOT FOR REUSE

NOT FOR REUSE
The spike-triggered averageNOT FOR REUSE

NOT FOR REUSE
Linear filtering
Linear filtering = convolution = projection
t1
t2
t3
Stimulus feature f is a vector in a high-dimensional stimulus space

NOT FOR REUSE
How to find the components of this model
s*f1
r(t)
input/output 
function

NOT FOR REUSE
The input/output function is:
This can be found from data using Bayes’ rule:
Determining the nonlinear input/output function

NOT FOR REUSE
Nonlinear input/output function
P(spike|s1) = P(s1|spike) P(spike) / P(s1)
s1
P(s|spike) 
P(s)
P(s|spike) 
P(s)
s1

NOT FOR REUSE
Linear/nonlinear models
Linear filter & nonlinearity:  r(t) = g( f(t-t) s(t) dt)    
s*f1
s*f
f
input/output function
features
r(t)NOT FOR REUSE

NOT FOR REUSE
High-dimensional feature selection

NOT FOR REUSE
Less basic coding models
Linear filters & nonlinearity:  r(t) = g(f1*s, f2*s, …, fn*s) 
Input/output function
input/output function
features
f1*s
f2*s
r(t)

Gaussian prior
stimulus distribution
Determining multiple features from white noise

Spike-triggered
average
Gaussian prior
stimulus distribution
Spike-conditional 
distribution
covariance
Determining multiple features from white noise

NOT FOR REUSE
Principal component analysis

NOT FOR REUSE
Principal component analysis: eigenfaces
ATT Labs, Cambridge (via Wikipedia)

NOT FOR REUSE
Principal component analysis: spike sorting
Koepsell et al., Front. Syst. Neurosci., 2009 

-4
-3
-2
-1
0
1
2
3
4
Projection onto Mode 2
-6
-4
-2
0
2
4
6
Projection onto Mode 1
Finding interesting features in the retina
Projection onto feature 1
Projection onto feature 2
Fairhall et al., J. Neurophysiol., 2007 NOT FOR REUSE

NOT FOR REUSE

