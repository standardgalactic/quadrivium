© 2019 MathByte Academy

The Attribute Accessors
Whenever we write code like this:
print(person.name)
or
getattr(person, 'name')
à we are getting an attribute value from the object
à Python is doing that for us
à as we have seen, that attribute's value could be living in any number of places
à instance dictionary
à class attribute
à descriptor
à in a parent class
© 2019 MathByte Academy

The __getattribute__ Method
à getting an attribute value will call __getattribute__ on our object
à Python provides a default implementation
à it does a lot of work!
à but we can override it
à implement __getattribute__(self, name)
à if we do, we often use super().__getattribute__ to do the actual work
à remember even calling a method first needs to get the method from the object
à special __ methods are looked up differently than our own attributes
© 2019 MathByte Academy

The __getattr__ Method
If the __getattribute__ method cannot find the requested attribute
à raises AttributeError
à Python then tries to call __getattr__
à think of it as a "last resort" attempt to find an attribute
à but only called if __getattribute__ fails to find attribute
à we can also override this method
à default implementation does nothing but re-raise AttributeError
à more common than overriding __getattribute__
à attribute access is a combination of __getattribute__
and, possibly __getattr__
© 2019 MathByte Academy

Default attribute lookup flow
obj.attr
obj.__getattribute__('attr')
in class (incl parents) dict?
__getattr__
data descriptor?
yes
__get__
yes
return it
yes
__get__
yes
return it
yes
in instance dict?
no
AttributeError
no
in instance dict?
no
non-data descriptor?
no
return class attr
no
AttributeError
can override
can override
(often using 
delegation to 
super)
© 2019 MathByte Academy

Caution
à very easy to get into infinite recursion bugs!
à just use super().__getattribute__ to bypass your own overrides
à we'll see examples in the coding section
© 2019 MathByte Academy

Overriding Access for Class Attributes
à __getattribute__ and __getattr__ are instance methods
à how do we override class attribute access?
à override __getattribute__ and __getattr__ in the metaclass
à since classes are instances of a metaclass
© 2019 MathByte Academy

Coding
© 2019 MathByte Academy

