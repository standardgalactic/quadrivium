Introduc)on*
About*The*Course*
Design*and*Analysis*
of*Algorithms*I*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*
•  Randomiza)on*in*algorithm*design*
•  Primi)ves*for*reasoning*about*graphs*
•  Use*and*implementa)on*of*data*structures*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
–  E.g.,*“BigGOh”*nota)on*
–  “sweet*spot”*for*highGlevel*reasoning*about*algorithms*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*
–  Will*apply*to:*Integer*mul)plica)on,*sor)ng,*matrix*
mul)plica)on,*closest*pair*
–  General*analysis*methods*(“Master*Method/Theorem”)*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*
•  Randomiza)on*in*algorithm*design*
–  Will*apply*to:*QuickSort,*primality*tes)ng,*graph*
par))oning,*hashing.*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*
•  Randomiza)on*in*algorithm*design*
•  Primi)ves*for*reasoning*about*graphs*
–  Connec)vity*informa)on,*shortest*paths,*structure*of*
informa)on*and*social*networks.*

Tim*Roughgarden*
Course*Topics*
•  Vocabulary*for*design*and*analysis*of*algorithms*
•  Divide*and*conquer*algorithm*design*paradigm*
•  Randomiza)on*in*algorithm*design*
•  Primi)ves*for*reasoning*about*graphs*
•  Use*and*implementa)on*of*data*structures*
–  Heaps,*balanced*binary*search*trees,*hashing*and*some*
variants*(e.g.,*bloom*ﬁlters)*

Tim*Roughgarden*
Topics*in*Sequel*Course*
•  Greedy*algorithm*design*paradigm*

Tim*Roughgarden*
Topics*in*Sequel*Course*
•  Greedy*algorithm*design*paradigm*
•  Dynamic*programming*algorithm*design*paradigm*

Tim*Roughgarden*
Topics*in*Sequel*Course*
•  Greedy*algorithm*design*paradigm*
•  Dynamic*programming*algorithm*design*paradigm*
•  NPGcomplete*problems*and*what*to*do*about*them*

Tim*Roughgarden*
Topics*in*Sequel*Course*
•  Greedy*algorithm*design*paradigm*
•  Dynamic*programming*algorithm*design*paradigm*
•  NPGcomplete*problems*and*what*to*do*about*them*
•  Fast*heuris)cs*with*provable*guarantees*
•  Fast*exact*algorithms*for*special*cases*
•  Exact*algorithms*that*beat*bruteGforce*search*

Tim*Roughgarden*
Skills*You’ll*Lean*
•  Become*a*be]er*programmer*

Tim*Roughgarden*
Skills*You’ll*Lean*
•  Become*a*be]er*programmer*
•  Sharpen*your*mathema)cal*and*analy)cal*skills*

Tim*Roughgarden*
Skills*You’ll*Lean*
•  Become*a*be]er*programmer*
•  Sharpen*your*mathema)cal*and*analy)cal*skills*
•  Start*“thinking*algorithmically”*

Tim*Roughgarden*
Skills*You’ll*Lean*
•  Become*a*be]er*programmer*
•  Sharpen*your*mathema)cal*and*analy)cal*skills*
•  Start*“thinking*algorithmically”*
•  Literacy*with*computer*science’s*“greatest*hits”*

Tim*Roughgarden*
Skills*You’ll*Lean*
•  Become*a*be]er*programmer*
•  Sharpen*your*mathema)cal*and*analy)cal*skills*
•  Start*“thinking*algorithmically”*
•  Literacy*with*computer*science’s*“greatest*hits”*
•  Ace*your*technical*interviews*

Tim*Roughgarden*
Who*Are*You?*
•  It*doesn’t*really*ma]er.**(It’s*a*free*course,*a_er*all.)*

Tim*Roughgarden*
Who*Are*You?*
•  It*doesn’t*really*ma]er.**(It’s*a*free*course,*a_er*all.)*
•  Ideally,*you*know*some*programming.*

Tim*Roughgarden*
Who*Are*You?*
•  It*doesn’t*really*ma]er.**(It’s*a*free*course,*a_er*all.)*
•  Ideally,*you*know*some*programming.*
•  Doesn’t*ma]er*which*language(s)*you*know.*
–  But*you*should*be*capable*of*transla)ng*highGlevel*
algorithm*descrip)ons*into*working*programs*in*some%
programming*language.*

Tim*Roughgarden*
Who*Are*You?*
•  It*doesn’t*really*ma]er.**(It’s*a*free*course,*a_er*all.)*
•  Ideally,*you*know*some*programming.*
•  Doesn’t*ma]er*which*language(s)*you*know.*
•  Some*(perhaps*rusty)*mathema)cal*experience.*
–  Basic*discrete*math,*proofs*by*induc)on,*etc.*

Tim*Roughgarden*
Who*Are*You?*
•  It*doesn’t*really*ma]er.**(It’s*a*free*course,*a_er*all.)*
•  Ideally,*you*know*some*programming.*
•  Doesn’t*ma]er*which*language(s)*you*know.*
•  Some*(perhaps*rusty)*mathema)cal*experience.*
–  Basic*discrete*math,*proofs*by*induc)on,*etc.*
•  Excellent%free%reference:%“Mathema)cs*for*Computer*Science”,*
by*Eric*Lehman*and*Tom*Leighton.**(Easy*to*ﬁnd*on*the*Web.)%

Tim*Roughgarden*
Suppor)ng*Materials*
•  All*(annotated)*slides*available*from*course*site.*

Tim*Roughgarden*
Suppor)ng*Materials*
•  All*(annotated)*slides*available*from*course*site.*
•  No*required*textbook.**A*few*of*the*many*good*ones:*
–  Kleinberg/Tardos,*Algorithm%Design,*2005.*
–  Dasgupta/Papadimitriou/Vazirani,*Algorithms,*2006.*
–  Cormen/Leiserson/Rivest/Stein,*Introduc8on%to%
Algorithms,*2009*(3rd*edi)on).*
–  Mehlhorn/Sanders,*Data%Structures%and%Algorithms:%The%
Basic%Toolbox,*2008.*

Tim*Roughgarden*
Suppor)ng*Materials*
•  All*(annotated)*slides*available*from*course*site.*
•  No*required*textbook.**A*few*of*the*many*good*ones:*
–  Kleinberg/Tardos,*Algorithm%Design,*2005.*
–  Dasgupta/Papadimitriou/Vazirani,*Algorithms,*2006.*
–  Cormen/Leiserson/Rivest/Stein,*Introduc8on%to%Algorithms,*2009*(3rd*edi)on).*
–  Mehlhorn/Sanders,*Data%Structures%and%Algorithms:%The%Basic%Toolbox,*2008.*
•  No*speciﬁc*development*environment*required.*
–  But*you*should*be*able*to*write*and*execute*programs.*

Tim*Roughgarden*
Assessment*
•  No*grades*per*se.**(Details*on*a*cer)ﬁcate*of*
accomplishment*TBA.)*
•  Weekly*homeworks.*
–  Test*understand*of*material*
–  Synchronize*students,*greatly*helps*discussion*forum*
–  Intellectual*challenge*

Tim*Roughgarden*
Assessment*
•  No*grades*per*se.**(Details*on*a*cer)ﬁcate*of*
accomplishment*TBA.)*
•  Weekly*homeworks.*
•  Assessment*tools*currently*just*a*“1.0”*technology.*
–  We’ll*do*our*best!*
•  Will*some)mes*propose*harder*“challenge*problems”*
–  Will*not*be*graded;*discuss*solu)ons*via*course*forum*

