© 2019 MathByte Academy

What is a set?
à there is no particular ordering in a set
à objects are distinct
A set is an unordered collection of distinct objects
à {1, 3, 5}    {5, 1, 3}   {3, 5, 1} … are all the same set (equal)
à {1, 1, 3}
à not possible – element 1 is repeated
à Python data type: set
à elements must be hashable
à elements are distinct – they do not compare equal (==)
© 2019 MathByte Academy

Membership
If x is an element contained in some set S
and say x is an element of S
we write
! ∈#
à note that these are statements, not questions
à in Python the in operator is a question that returns True or False
If x is not an element contained in some set S
and say x is not an element of S
we write
! ∉#
x in S
à True
à ! ∈#
x in S
à False
à ! ∉#
x not in S
à False
à ! ∈#
x not in S
à True
à ! ∉#
à similarly with the not in operator
© 2019 MathByte Academy

Unions and Intersections
The union of two sets is a set that combines the items from these two sets, keeping only 
a single instance of any repeating elements
sets à %&, %(
%& ∪%( = + + ∈%& ,- + ∈%(}
à Notice the or
The intersection of two sets is a set that only contains the elements common to both
%& ⋂%( = + + ∈%& 012 + ∈%(}
à Notice the and
à s1 | s2 | …
à returns a set
à s1 & s2 & …
à returns a set
%&
%(
%&
%(
à s1.union(s2, …)
à s1.intersection(s2, …)
© 2019 MathByte Academy

Differences of two sets
The difference of two sets is all the elements of one set without the elements of the other set
%& −%( = + + ∈%& 012 + ∉%(}
à s1 – s2 - …
%&
%(
à s1.difference(s2, …)
s1 = {1, 2, 3}
s2 = {3, 4, 5}
s1 - s2 à {1, 2}
s2 - s1 à {4, 5}
in general: s1 – s2  ≠ s2 – s1
© 2019 MathByte Academy

Symmetric Difference of two Sets
The symmetric difference of two sets is the union of both sets without the intersection of both sets
%& ∆%( = %& ∪%( −(%& ∩%()
%&
%(
à s1 ^ s2
à s1.symmetric_difference(s2)
in general: s1 ^ s2  = s2 ^ s1
s1 = {1, 2, 3, 4, 5}
s2 = {4, 5, 6, 7, 8}
s1 ^ s2 à {1, 2, 3, 6, 7, 8}
s2 ^ s1 à {1, 2, 3, 6, 7, 8}
© 2019 MathByte Academy

Empty Set, Cardinality, Disjoint Sets
An empty set is a set that contains no elements
à set()
cannot use {} to create an empty set
à this would create an empty dictionary
Two sets are said to be disjoint if their intersection is the empty set
For finite sets, the cardinality of a set is the number of elements in the set
à len(s)
à len(s1 & s2) à 0
à s1.isdisjoint(s2) à True (Boolean)
à cardinality is 0
© 2019 MathByte Academy

Subsets and Supersets
A set s1 is a subset of s2 if all the elements of s1 are in s2
A set s1 is a proper subset of s2 if s1 is a subset of s2 and s1 is not equal to s2
à i.e. s1 is a subset of s2 and s2 contains some additional elements
%& ⊆%(
%& ⊂%(
à s1 <= s2
à s1.issubset(s2)
à s1 < s2
A set s1 is a superset of s2 if s2 is a subset of s1
A set s1 is a proper superset of s2 if s2 is a subset of s1
à s1 >= s2
à s1.issuperset(s2)
à s1 > s2
{1, 2, 3} <= {1, 2, 3, 4} à True
{1, 2, 3} <= {1, 2, 3} à True
{1, 2, 3} < {1, 2, 3, 4} à True
{1, 2, 3} < {1, 2, 3} à False
© 2019 MathByte Academy

