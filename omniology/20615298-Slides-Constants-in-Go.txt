Constants in Go
●
In Golang, we use the term constant to represent ﬁxed (unchanging) values.
●
We use constants to avoid possible errors (variables that change when they shouldn’t) or 
to replace a value only in one place instead of in many places
●
All basic literals (1, 3.4, “hello”, true) are in fact unnamed constants. 
●
A constant belongs to compile time and it’s created at compile time. It’s value can not be 
changed while the program is running.
●
Another advantage of using constants is that Go can not detect runtime errors at 
compile-time but constants belong to compile time so errors can be detected earlier
●
You can declare constants that store numbers, strings or booleans. 
Master Go (Golang) Programming
By Andrei Dumitrescu

