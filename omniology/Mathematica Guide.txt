CONTENTS
Loading the Mathematica Kernel
1
Function Definition
1
Differentiation
1
Antidifferentiation
2
Graphing a Function      
2
Piecewise-Defined Function
4
Root Finding
5
Direction Field
5
Symbolic Solution of First Order Linear Differential
6
Equations
Limiting Behavior
7
Symbolic Solution of Nonlinear First Order Differential
7
Equations
Checking a Solution
8
Graphing Implicit Solutions
8
Symbolic Solution of Second Order Linear Differential
9
Equations
Higher Order Linear Differential Equations
9
Numerical Solution of an Initial Value Problem
10

ii
Matrices and First Order Systems
 
11
Eigenpair Calculation
13
Symbolic Solution of First Order Systems
13
Plotting a Phase Plane Trajectory
14
Phase Plane Analysis of Autonomous 2-Dimensional
15
Systems
Laplace Transforms
17
Graphing the Periodic Thrust Velocity
17
Series Expansions
18
Equilibrium Points for Two-Dimensional Autonomous 
19
Systems
Linearization About an Equilibrium Point
19
Partial Differential Equations and Fourier Series
20
Two-Point Boundary Value Problems
26

CONTENTS
Loading the Mathematica Kernel
1
Function Definition
1
Differentiation
1
Antidifferentiation
2
Graphing a Function      
2
Piecewise-Defined Function
4
Root Finding
5
Direction Field
5
Symbolic Solution of First Order Linear Differential
6
Equations
Limiting Behavior
7
Symbolic Solution of Nonlinear First Order Differential
7
Equations
Checking a Solution
8
Graphing Implicit Solutions
8
Symbolic Solution of Second Order Linear Differential
9
Equations
Higher Order Linear Differential Equations
9
Numerical Solution of an Initial Value Problem
10

ii
Matrices and First Order Systems
 
11
Eigenpair Calculation
13
Symbolic Solution of First Order Systems
13
Plotting a Phase Plane Trajectory
14
Phase Plane Analysis of Autonomous 2-Dimensional
15
Systems
Laplace Transforms
17
Graphing the Periodic Thrust Velocity
17
Series Expansions
18
Equilibrium Points for Two-Dimensional Autonomous 
19
Systems
Linearization About an Equilibrium Point
19
Partial Differential Equations and Fourier Series
20
Two-Point Boundary Value Problems
26

Mathematica Technical Supplement
Loading the Mathematica Kernel
Performing a simple arithmetic operation, such as the one shown, can be used to activate the Mathematica Kernel, the
software's computational engine.
1 + 1
2
Function Definition
The function fHtL = -2 t e-t + 5 sin H2 ptL
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
t2 +1
+ 1  is defined.
f@t_D := 1 - 2 * t * Exp@-tD + 5 * Sin@2 * Pi * tD ê H1 + t^2L;
The use of  ": =" (rather than simply "=") indicates a "delayed assignment". Using the colon tells Mathematica to return to the
original definition each time you use the function.
Function evaluation (f HtL is evaluated at t = 3):
f@3D
1 - 6
ÅÅÅÅÅÅÅ
‰3
N@f@3DD
0.701278
Differentiation
The function t3 + t sin t is differentiated.
D@t * Sin@tD + t^3, tD
3 t2 + t Cos@tD + Sin@tD
The function, fHtL = -2 t e-t + 5 sin H2 ptL
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
t2+1
+ 1, that was previously defined, is differentiated.
D@f@tD, tD
-2 ‰-t + 2 ‰-t t + 10 p Cos@2 p tD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
1 + t2
- 10 t Sin@2 p tD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
H1 + t2L2
1

Antidifferentiation
Integrate@3 t2 + t Cos@tD + Sin@tD, tD
t3 + t Sin@tD
Note that the arbitrary constant is not appended.
Graphing a Function
The function, fHtL = -2 t e-t + 5 sin H2 ptL
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
t2+1
+ 1, that was previously defined, is plotted on the interval -1 § t § 5
Plot@f@tD, 8t, -1, 5<D
-1
1
2
3
4
5
-2
2
4
6
Ü Graphics Ü
Adjusting the range of ordinate values:
Plot@f@tD, 8t, -1, 5<, PlotRange Ø 8-4, 8<D
-1
1
2
3
4
5
-4
-2
2
4
6
8
Ü Graphics Ü
2

Superposing graphs:
Plot@8Sin@2 * Pi * tD, Exp@-t ê 2D<, 8t, 0, 5<D
1
2
3
4
5
-1
-0.5
0.5
1
Ü Graphics Ü
Alternate approach; labels are given to the two individual plots and the Show command is then used to superpose them on the
same graph.
p1 = Plot@Sin@2 * Pi * tD, 8t, 0, 5<D
1
2
3
4
5
-1
-0.5
0.5
1
Ü Graphics Ü
p2 = Plot@Exp@-t ê 2D, 8t, 0, 5<D
1
2
3
4
5
0.2
0.4
0.6
0.8
1
Ü Graphics Ü
3

Show@p1, p2D
1
2
3
4
5
-1
-0.5
0.5
1
Ü Graphics Ü
Piecewise-Defined Function
The function 9
t2, 0 § t § 1
e-Ht-1L, 1 < t < ¶
 is defined and graphed.
f1@t_D := t^2 ê; 0 § t § 1
f1@t_D := Exp@-Ht - 1LD ê; 1 < t
4

Plot@f1@tD, 8t, 0, 4<D
1
2
3
4
0.2
0.4
0.6
0.8
1
Ü Graphics Ü
Root Finding
The intersection point abscissas on the graph shown represent solutions of the equation sinH2 ptL - e- tÅÅÅÅÅ2 = 0. The approximate
values provided by the graph for two of these solutions are subsequently used as starting estimates in the FindRoot command.
1
2
3
4
5
-1
-0.5
0.5
1
Solutions of sinH2 ptL - e- tÅÅÅÅÅ2 = 0 near t = 0.6 and t = 1.5, respectively, are found.
FindRoot@Sin@2 * Pi * tD - Exp@-t ê 2D ã 0, 8t, 0.6<D
8t Ø 0.340225<
FindRoot@Sin@2 * Pi * tD == Exp@-t ê 2D, 8t, 1.5<D
8t Ø 1.41811<
Direction Field
The appropriate graphics package is loaded and the direction field for the differential equation y£HtL = 2 yHtL + 1  is plotted.
The rectangular region 0 § t § 2, -1 § y § 1  of the ty-plane is specified as the region of interest. The PlotVectorField
command has more general applicability to autonomous two-dimensional systems. Note that in this special application, a 1 is
placed in the first position and the right side of the first order differential equation appears in the second position ( that is,
81, 2 * y + 1<).
<< Graphics`PlotField`
5

PlotVectorField@81, 2 * y + 1<, 8t, 0, 2<, 8y, -1, 1<D
If coordinate axes are desired
PlotVectorField@81, 2 * y + 1<, 8t, 0, 2<, 8y, -1, 1<, Axes Ø TrueD
0.5
1
1.5
2
-1
-0.5
0.5
1
Ü Graphics Ü
Symbolic Solution of First Order Linear Differential Equations
The general solution of the differential equation y£HtL = 2 yHtL + 1  is determined. The fact that the equation is written as
y£HtL - 2 yHtL = 1  is not important; it could also have been written as y£HtL - 2 yHtL - 1 = 0. Note the double equal sign,
however.
DSolve@y'@tD - 2 * y@tD ã 1, y@tD, tD
99y@tD Ø - 1ÅÅÅÅ2 + ‰2 t C@1D==
6

The initial value problem y£HtL = 2 yHtL + 1, yH0L = 2 is solved.
DSolve@8y'@tD - 2 * y@tD ã 1, y@0D ã 2<, y@tD, tD
99y@tD Ø 1ÅÅÅÅ2 H-1 + 5 ‰2 tL==
The prior output can be copied and pasted to create a function.
y@t_D := 1ÅÅÅÅ2 H-1 + 5 ‰2 tL
Limiting Behavior
The limiting behavior of three functions, 1ÅÅÅÅ2 He2 t - 1L,  e-t+sinHtL  and esinHtL , is examined as t Ø ¶. The third function does not
possess a limit. As the Mathematica output indicates, it oscillates in value over the interval  He-1, e1L as t increases.
LimitA 1ÅÅÅÅ
2
H-1 + 5 ‰2 tL, t Ø InfinityE
¶
Limit@Exp@-t + Sin@tDD, t Ø InfinityD
0
Limit@Exp@Sin@tDD, t Ø InfinityD
IntervalA9 1ÅÅÅÅ‰ , ‰=E
Symbolic Solution of  Nonlinear  First Order Differential Equations:
The initial value problem y£HtL = yHtL2, yH1L = 1, is solved.
DSolve@8y'@tD - y@tD^2 ã 0, y@1D ã 1<, y@tD, tD
99y@tD Ø
1
ÅÅÅÅÅÅÅÅÅÅÅÅ
2 - t ==
The nonlinear differential equation y£HtL = e-yHtL is solved.
DSolve@y'@tD - Exp@-y@tDD ã 0, y@tD, tD
Solve::ifun :  Inverse functions are being used by Solve, so some solutions may not be found.
88y@tD Ø Log@t + C@1DD<<
The next example considers the nonlinear differential equation d yHtL
ÅÅÅÅÅÅÅÅÅÅÅÅ
d t
- e-yHtL + t2 = 0. Although it does not obviously fall into
any of the categories discussed in the text, the change of dependent variable uHtL = eyHtL  transforms it into a first order linear
equation; therefore, we anticipate an explicit solution. Mathematica expresses this solution in terms of the natural logarithm
and a special function called the Gamma function (see the Help Browser).
7

DSolve@y'@tD - Exp@-y@tDD + t^2 ã 0, y@tD, tD
Solve::ifun :  Inverse functions are being used by Solve, so some solutions may not be found.
99y@tD Ø 1ÅÅÅÅ3
i
k
jjjjj-t3 + 3 LogAC@1D - t GammaA 1ÅÅÅ
3 , - t3
ÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3L1ê3
Ey
{
zzzzz==
Checking a Solution
Copy and paste the previous output to define the solution as a function.
y@t_D := 1ÅÅÅÅ
3
i
k
jjjjjjjj-t3 + 3 LogAC@1D -
t GammaA 1ÅÅÅ
3 , - t3
ÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3L1ê3
E
y
{
zzzzzzzz
Form y£HtL - e-yHtL + t2 .
D@y@tD, tD - Exp@-y@tDD + t^2
-‰
1ÅÅÅÅ3
i
k
jjjjjjjt3 -3 LogAC@1D-
t GammaA 1ÅÅÅÅÅ3 ,- t3
ÅÅÅÅÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3 L1ê3
E
y
{
zzzzzzz + t2 + 1ÅÅÅÅ3
i
k
jjjjjjjjj
-3 t2 +
3 J‰
t3
ÅÅÅÅÅÅÅ
3 -
t3 GammaA 1ÅÅÅÅ3 ,- t3
ÅÅÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3 L4ê3
-
GammaA 1ÅÅÅÅ3 ,- t3
ÅÅÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3 L1ê3 N
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
C@1D -
t GammaA 1ÅÅÅÅ3 ,- t3
ÅÅÅÅÅÅÅ
3 E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
32ê3 H-t3 L1ê3
y
{
zzzzzzzzz
Simplify the output to see that it is in fact 0.
Simplify@%D
0
Graphing Implicit Solutions
The nonlinear (separable) differential equation yHtL y£HtL + t3 = 0 is solved.
DSolve@y@tD * y'@tD + t^3 ã 0, y@tD, tD
99y@tD Ø -è!!!2 $%%%%%%%%%%%%%%%%%%%%%%%%%%
- t4
ÅÅÅÅÅÅÅ
4
+ C@1D =, 9y@tD Ø è!!!2 $%%%%%%%%%%%%%%%%%%%%%%%%%%
- t4
ÅÅÅÅÅÅÅ
4
+ C@1D ==
The solutions lie on the level curves of the following function of two variables.
g@t_, y_D := Hy^2L ê 2 + Ht^4L ê 4
8

Some representative level curves  of gHt , yL are graphed.
ContourPlot@g@t, yD, 8t, -2, 2<, 8y, -2, 2<, ContourShading Ø False,
Axes Ø Automatic, AxesOrigin Ø 80, 0<, PlotPoints Ø 100D
-2
-1
0
1
2
-2
-1
0
1
2
Ü ContourGraphics Ü
Symbolic Solution of Second Order Linear Differential Equations
The general solution of the second order linear nonhomogeneous differential equation y≥HtL - 4 yHtL = e-2 t is obtained.
DSolve@y''@tD - 4 * y@tD ã Exp@-2 * tD, y@tD, tD
99y@tD Ø - 1
ÅÅÅÅÅÅÅ
16 ‰-2 t H1 + 4 tL + ‰2 t C@1D + ‰-2 t C@2D==
The initial value problem  y≥HtL + 4 yHtL = t + 1, yH0L = 0, y£H0L = 2 is solved.
DSolve@8y''@tD + 4 * y@tD ã t + 1, y@0D ã 0, y'@0D ã 2<, y@tD, tD
99y@tD Ø 1ÅÅÅÅ8 H2 + 2 t - 2 Cos@2 tD + 7 Sin@2 tDL==
Higher Order Linear Differential Equations
The general solution of d 3  yHtL
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
d t3
+ yHtL = t  is obtained.
DSolve@y'''@tD + y@tD ã t, y@tD, tD
99y@tD Ø t + ‰-t C@1D + ‰tê2 C@3D CosA
è!!!3 t
ÅÅÅÅÅÅÅÅÅÅÅÅÅ
2
E + ‰tê2 C@2D SinA
è!!!3 t
ÅÅÅÅÅÅÅÅÅÅÅÅÅ
2
E==
9

The initial value problem  d4 yHtL
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
d t4
- yHtL = 0, yH0L = 1,
dyH0L
ÅÅÅÅÅÅÅÅÅÅÅÅÅ
d t
= 1,
d2  yH0L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
d t2
= 0,
d3 yH0L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
d t3
= -1 is solved.
DSolve@8y''''@tD - y@tD ã 0, y@0D ã 1, y'@0D ã 1, y''@0D ã 0, y'''@0D ã -1<, y@tD, tD
99y@tD Ø 1ÅÅÅÅ4 ‰-t H1 + ‰2 t + 2 ‰t Cos@tD + 4 ‰t Sin@tDL==
Simplify@%D
99y@tD Ø 1ÅÅÅÅ4 H‰-t + ‰t + 2 Cos@tD + 4 Sin@tDL==
Numerical Solution of an Initial Value Problem
The nonlinear pendulum differential equation is solved numerically using the NDSolve command.
sol = NDSolve@8y''@tD + Sin@y@tDD ã 0, y@0D ã 0, y'@0D ã 2<, y@tD, 8t, 0, 8 * Pi<D
88y@tD Ø InterpolatingFunction@880., 25.1327<<, <>D@tD<<
The pendulum position is defined as a function. Notice the absence of the colon in the function definition.
ya@t_D = y@tD ê. First@solD
InterpolatingFunction@880., 25.1327<<, <>D@tD
The pendulum velocity function is created.
yaprime@t_D = D@ya@tD, tD
InterpolatingFunction@880., 25.1327<<, <>D@tD
The pendulum position and velocity functions are plotted on two separate graphs.
Plot@ya@tD, 8t, 0, 8 * Pi<, PlotRange Ø 80, 10<D
5
10
15
20
25
2
4
6
8
10
Ü Graphics Ü
10

Plot@yaprime@tD, 8t, 0, 8 * Pi<D
5
10
15
20
25
0.5
1
1.5
2
Ü Graphics Ü
Matrices and First Order Systems
Defining a matrix.
A = 881, -2, 0<, 8-2, 1, 1<, 80, 1, 0 - 1<<
881, -2, 0<, 8-2, 1, 1<, 80, 1, -1<<
Exhibiting the array.
MatrixForm@AD
i
k
jjjjjjj
1
-2
0
-2
1
1
0
1
-1
y
{
zzzzzzz
Finding eigenpairs.
Eigenvalues@AD
9 1ÅÅÅÅ3 +
19
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
3 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + 1ÅÅÅÅ3 H55 + 3 Â è!!!!!!!!!
426 L
1ê3,
1ÅÅÅÅ3 -
19 H1 + Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 - Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3,
1ÅÅÅÅ3 -
19 H1 - Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 + Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3=
The matrix A is Hermitian and thus has real eigenvalues. This can be exhibited as follows.
N@ComplexExpand@%DD
83.12489, -1.76156, -0.363328<
The three numbers listed above are the three real eigenvalues. Corresponding eigenvectors are now determined.
11

Eigenvectors@AD
99-
1
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
2ê3  
I157 + 2 Â è!!!!!!!!!
426 + 31 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + Â è!!!!!!!!!
426 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + 7 H55 + 3 Â è!!!!!!!!!
426 L
2ê3M,
4ÅÅÅÅ3 +
19
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
3 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + 1ÅÅÅÅ3 H55 + 3 Â è!!!!!!!!!
426 L
1ê3, 1=,
9 1ÅÅÅÅ2 + 1ÅÅÅÅ2
i
k
jjjj- 2ÅÅÅÅ3 -
19 H1 + Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 - Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3y
{
zzzz
i
k
jjjj- 4ÅÅÅÅ3 +
19 H1 + Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + 1ÅÅÅÅ6 H1 - Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3y
{
zzzz,
4ÅÅÅÅ3 -
19 H1 + Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 - Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3, 1=,
9 1ÅÅÅÅ2 + 1ÅÅÅÅ2
i
k
jjjj- 2ÅÅÅÅ3 -
19 H1 - Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 + Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3y
{
zzzz
i
k
jjjj- 4ÅÅÅÅ3 +
19 H1 - Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 + 1ÅÅÅÅ6 H1 + Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3y
{
zzzz,
4ÅÅÅÅ3 -
19 H1 - Â è!!!3 L
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 H55 + 3 Â è!!!!!!!!!
426 L
1ê3 - 1ÅÅÅÅ6 H1 + Â è!!!3 L H55 + 3 Â è!!!!!!!!!
426 L
1ê3, 1==
The eigenvectors actually have real components. This can be seen as follows. (The 10-17 imaginary term arises due to
numerical imprecision and should be ignored.)
N@ComplexExpand@%DD
88-3.88245 - 1.38778 µ 10-17 Â, 4.12489, 1.<,
8-0.551542, -0.761557, 1.<, 80.933996, 0.636672, 1.<<
The eigenvector corresponding to eigenvalue 3.1248854197645746 is formed as x1  and the matrix product Ax1 is formed as a
check.
x1 = 88-3.8824544433286095<, 84.124885419764574<, 81<<
88-3.88245<, 84.12489<, 81<<
12

Check.
MatrixForm@x1D
i
k
jjjjjjj
-3.88245
4.12489
1
y
{
zzzzzzz
MatrixForm@A.x1D
i
k
jjjjjjj
-12.1322
12.8898
3.12489
y
{
zzzzzzz
Eigenpair Calculation
The eigenpairs (that is eigenvalues and corresponding eigenvectors) of a matrix are simultaneously determined using the
Eigensystem command. The matrix J chosen as an illustration has repeated eigenvalue l1 = l2 = 2  but only one linearly
independent eigenvector x1 =J1
0N. Mathematica deals with this situation by incorrectly stating that  J0
0Nis the second eigenvec-
tor. This example illustrates an important point. No computer package is perfect and caution must always be used in accept-
ing output of such packages as correct.
J = 882, 1<, 80, 2<<
882, 1<, 80, 2<<
MatrixForm@JD
J 2
1
0
2 N
Eigensystem@JD
882, 2<, 881, 0<, 80, 0<<<
Symbolic Solution of First Order Systems
The general solution of the linear first order system Jy1
y2
N
£
=J 2
-1
-1
2 NJy1
y2
N+J t
-1N is determined.
DSolve@8y1'@tD ã 2 * y1@tD - y2@tD + t, y2'@tD ã -y1@tD + 2 * y2@tD - 1<, 8y1@tD, y2@tD<, tD
99y1@tD Ø 1ÅÅÅÅ2 ‰t H1 + ‰2 tL J‰-3 t J- 2ÅÅÅÅ9 - tÅÅÅÅ6 N - ‰-t t
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
N -
1ÅÅÅÅ2 ‰t H-1 + ‰2 tL J‰-3 t J 2ÅÅÅÅ9 + tÅÅÅÅ6 N - ‰-t t
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
N + 1ÅÅÅÅ2 ‰t H1 + ‰2 t L C@1D - 1ÅÅÅÅ2 ‰t H-1 + ‰2 tL C@2D,
y2@tD Ø - 1ÅÅÅÅ2 ‰t H-1 + ‰2 tL J‰-3 t J- 2ÅÅÅÅ9 - tÅÅÅÅ6 N - ‰-t t
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
N + 1ÅÅÅÅ2 ‰t H1 + ‰2 tL J‰-3 t J 2ÅÅÅÅ9 + tÅÅÅÅ6 N - ‰-t t
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
N -
1ÅÅÅÅ2 ‰t H-1 + ‰2 tL C@1D + 1ÅÅÅÅ2 ‰t H1 + ‰2 tL C@2D==
13

Simplify@%D
99y1@tD Ø
1
ÅÅÅÅÅÅÅ
18 H-4 - 12 t + 9 ‰3 t HC@1D - C@2DL + 9 ‰t HC@1D + C@2DLL,
y2@tD Ø
1
ÅÅÅÅÅÅÅ
18 H4 - 6 t - 9 ‰3 t HC@1D - C@2DL + 9 ‰t HC@1D + C@2DLL==
Note that the solution has the form Jy1
y2
N=
i
k
jjjjj
-4-12 t
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
18
4-6 t
ÅÅÅÅÅÅÅÅÅÅÅÅÅ
18
y
{
zzzzz+
i
k
jjjjjj
9 e3 t
ÅÅÅÅÅÅÅÅÅÅÅÅ
18
9 et
ÅÅÅÅÅÅÅÅÅ
18
-9 e3 t
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
18
9 et
ÅÅÅÅÅÅÅÅÅ
18
y
{
zzzzzzJC1 - C2
C1 + C2
N.
The initial value problem Jy1
y2
N
£
=J 2
-1
-1
2 NJy1
y2
N+J t
-1N,  Jy1H0L
y2H0LN = J1
0N is solved.
DSolve@8y1'@tD ã 2 * y1@tD - y2@tD + t,
y2'@tD ã -y1@tD + 2 * y2@tD - 1, y1@0D ã 1, y2@0D ã 0<, 8y1@tD, y2@tD<, tD
99y1@tD Ø
1
ÅÅÅÅÅÅÅ
18 H-4 + 9 ‰t + 13 ‰3 t - 12 tL, y2@tD Ø
1
ÅÅÅÅÅÅÅ
18 H4 + 9 ‰t - 13 ‰3 t - 6 tL==
Plotting a Phase Plane Trajectory
The solution of the initial value problem Jy1
y2
N
£
=J-1
3
-3 -1 N Jy1
y2
N, Jy1H0L
y2H0LN =J1
0N  is determined. A parametric plot of the solu-
tion in the (y1 ,y2 )-plane, for 0 § t § 5, is created.
DSolve@8y1'@tD ã -y1@tD + 3 * y2@tD,
y2'@tD ã -3 * y1@tD - y2@tD, y1@0D ã 1, y2@0D ã 0<, 8y1@tD, y2@tD<, tD
88y1@tD Ø ‰-t Cos@3 tD, y2@tD Ø -‰-t Sin@3 tD<<
14

ParametricPlot@8‰-t Cos@3 tD, -‰-t Sin@3 tD<,
8t, 0, 5<, PlotRange Ø 88-0.5, 1.2<, 8-0.8, 0.4<<D
-0.5 -0.25
0.25
0.5
0.75
1
-0.8
-0.6
-0.4
-0.2
0.2
0.4
Ü Graphics Ü
Phase Plane Analysis of Autonomous 2-Dimensional Systems
The vector field for the two-dimensional autonomous system
 x£HtL = 5 xHtL - xHtL2 - xHtL yHtL
yHtL£ = xHtL yHtL - 2 yHtL
 
is plotted in the rectangle  -2 § x § 8, -6 § y § 6. The initial  << Graphics`PlotField`  command loads the graphics
package.
<< Graphics`PlotField`
15

PlotVectorField@85 * x - x^2 - x * y, x * y - 2 * y<, 8x, -2, 8<, 8y, -6, 6<, Axes Ø TrueD
-2
2
4
6
8
-6
-4
-2
2
4
6
Ü Graphics Ü
Phase plane behavior in the vicinity of the equilibrium point (0,0) is examined.
PlotVectorField@85 * x - x^2 - x * y, x * y - 2 * y<, 8x, -0.2, 0.2<, 8y, -0.2, 0.2<D
Ü Graphics Ü
16

Laplace Transforms
The Laplace transform of the function  hHt - 1L + t e-t + cosH2 tL is determined.
LaplaceTransform@UnitStep@t - 1D + t * Exp@-tD + Cos@2 * tD, t, sD
‰-s
ÅÅÅÅÅÅÅÅ
s
+
1
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
H1 + sL2 +
s
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 + s2
The Laplace transform of the 2µ1 matrix-valued function i
k
jjj
t2
1 + sinHtL
y
{
zzzis determined and subsequently displayed as a  2µ1
matrix.
LaplaceTransform@88t^2<, 81 + Sin@tD<<, t, sD
99 2
ÅÅÅÅÅÅÅ
s3 =, 9 1ÅÅÅÅs +
1
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
1 + s2 ==
MatrixForm@%D
i
k
jjjjj
2ÅÅÅÅÅ
s3
1ÅÅÅ
s +
1
ÅÅÅÅÅÅÅÅÅ
1+s2
y
{
zzzzz
The inverse Laplace transform for each of the two previous cases  is computed. Note that the outputs of the LaplaceTrans-
form computations were simply copied and pasted into the InverseLaplaceTransform commands.
InverseLaplaceTransformA ‰-s
ÅÅÅÅÅÅÅÅ
s
+
1
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
H1 + sL2 +
s
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 + s2 , s, tE
‰-t t + Cos@2 tD + UnitStep@-1 + tD
MatrixFormAInverseLaplaceTransformA99 2
ÅÅÅÅÅÅÅ
s3 =, 9 1ÅÅÅÅ
s
+
1
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
1 + s2 ==, s, tEE
i
k
jj
t2
1 + Sin@tD
y
{
zz
Graphing the Periodic Thrust Velocity
In section 7.4, solving the problem of a projectile propelled by a periodic thrust using Laplace transforms led to a velocity
function of the form
 vHtL = e-t + S
n=0
¶
 H-1Ln H1 - e-Ht-nL hHt - nLL, where hHtL  is the Heaviside (or unit step) function. We can define and
graph this function in the following manner.
G@t_, n_D := HH-1L^nL * H1 - Exp@-Ht - nLDL * UnitStep@t - nD
v@t_D := Exp@-tD + Sum@G@t, nD, 8n, 0, Infinity<D
17

Plot@v@tD, 8t, 0, 20<, PlotRange -> 80, 1.1<D
5
10
15
20
0.2
0.4
0.6
0.8
1
Ü Graphics Ü
Series Expansions
The Series command can be used to compute  partial sums of Maclaurin and Taylor series expansions. As examples, consider
the Maclaurin series expansion of Tan(ax), where a is a constant, and the Taylor series expansion of Cos(x) about pÅÅÅÅ4 . Note
that since Tan(ax) is an odd function, only odd powers appear in the Maclaurin expansion. The O(  ) symbol appearing at the
end indicates the order or "size" of the error incurred due to the series truncation.
Series@Tan@a * xD, 8x, 0, 8<D
a x + a3 x3
ÅÅÅÅÅÅÅÅÅÅÅÅÅ
3
+ 2 a5 x5
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
15
+ 17 a7 x7
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
315
+ O@xD9
Series@Cos@xD, 8x, Pi ê 4, 6<D
1
ÅÅÅÅÅÅÅÅÅ
è!!!2 - x -
pÅÅÅ
4
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
è!!!2
- Hx -
pÅÅÅ4 L2
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
2 è!!!2
+ Hx -
pÅÅÅ
4 L3
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
6 è!!!2
+ Hx -
pÅÅÅ
4 L4
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
24 è!!!2
- Hx -
pÅÅÅ
4 L5
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
120 è!!!2
- Hx -
pÅÅÅ
4 L6
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
720 è!!!2
+ OAx - pÅÅÅÅ4 E
7
18

Equilibrium Points for Two-Dimensional Autonomous Systems
As an example consider the two-dimensional autonomous system: 
x' HtL = xHtL yHtL - yHtL + xHtL - 1
y' HtL = xHtL yHtL - 2 yHtL
The equilibrium points of this system, H-1, 0L and  H2. - 1L, can be obtained as follows.
Solve@8x * y - y + x - 1 ã 0, x * y - 2 * y ã 0<, 8x, y<D
88x Ø 1, y Ø 0<, 8x Ø 2, y Ø -1<<
Linearization About an Equilibrium Point
Suppose we want to determine the linearization of the autonomous system
x' HtL = xHtL yHtL - yHtL + xHtL - 1
y' HtL = xHtL yHtL - 2 yHtL
about the equilibrium point H2, -1L. We first define two functions.
f@x_, y_D := x * y - y + x - 1;
g@x_, y_D := x * y - 2 * y;
The matrix of partial derivatives is constructed and displayed as an array.
J@x_, y_D = MatrixForm@88D@f@x, yD, xD, D@f@x, yD, yD<, 8D@g@x, yD, xD, D@g@x, yD, yD<<D
J 1 + y
-1 + x
y
-2 + x N
The matrix J is evaluated at H2, -1L and displayed as an array.
J@2, -1D
J 0
1
-1
0 N
19

Partial Differential Equations and Fourier Series
Defining and Graphing Functions of Two Variables
u@x_, t_D := Exp@-Hx^2 + tL ê 3D * H2 + Cos@x - 2 * tDL;
Plot3D@u@x, tD, 8x, -5, 5<, 8t, 0, 2<, PlotRange Ø 80, 3<, PlotPoints Ø 50D
-4
-2
0
2
4
0
0.5
1
1.5
2
0
1
2
3
-4
-2
0
2
4
Ü SurfaceGraphics Ü
The PlotPoints option permits one to increase the number of sampling points, creating a smoother, less choppy-looking,
surface.
20

Polar Plots
The  function   uHr, qL = 1ÅÅÅÅr + r sinH3 qLê2,  defined  on  the  annulus  1 § r § 3, 0 § q < 2 p,  is  plotted.  Recall  that
x = r cosHqL, y = r sinHqL.
ParametricPlot3D@8r * Cos@thetaD, r * Sin@thetaD, 1 ê r + r * Sin@3 * thetaD ê 2<,
8r, 1, 3<, 8theta, 0, 2 * Pi<, PlotPoints Ø 80D
-2
0
2
-2
0
2
-1
0
1
-2
0
2
Ü Graphics3D Ü
Fourier Series
Consider the problem of computing the Fourier series for the periodic extension of the function
fHxL = 9 x,
0 § x § 1
-1, 1 < x < 3. 
 
 Once the series is formed we plot representative partial sums.
Fourier series coefficients (For this example, l = 3 ê2).
a@n_D := H2 ê 3L * HIntegrate@x * Cos@n * Pi * x ê H3 ê 2LD, 8x, 0, 1<D +
Integrate@H-1L * Cos@n * Pi * x ê H3 ê 2LD, 8x, 1, 3<DL
a@nD
2ÅÅÅÅ3
i
k
jjj-
9
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2 + 9 Cos@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2
+ 3 Sin@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
n p
- 3 Sin@2 n pD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
2 n p
y
{
zzz
a@0D
-1
aa@n_D := 2ÅÅÅÅ
3
i
k
jjjjjj-
9
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2 +
9 Cos@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2
+
3 Sin@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
n p
- 3 Sin@2 n pD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
2 n p
y
{
zzzzzz;
b@n_D := H2 ê 3L * HIntegrate@x * Sin@n * Pi * x ê H3 ê 2LD, 8x, 0, 1<D +
Integrate@H-1L * Sin@n * Pi * x ê H3 ê 2LD, 8x, 1, 3<DL
21

b@nD
2ÅÅÅÅ3
i
k
jjj- 3 Cos@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
n p
+ 3 Cos@2 n pD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
2 n p
+ 9 Sin@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2
y
{
zzz
bb@n_D := 2ÅÅÅÅ3
i
k
jjjjjj-
3 Cos@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
n p
+ 3 Cos@2 n pD
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
2 n p
+
9 Sin@ 2 n p
ÅÅÅÅÅÅÅÅÅ
3
D
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
4 n2 p2
y
{
zzzzzz
Partial sum function SHx, NL =
a0ÅÅÅÅÅÅÅ
2
S
n=1
N
[an cosI npx
ÅÅÅÅÅÅÅÅÅ
3ê2 M+bn sinI npx
ÅÅÅÅÅÅÅÅÅ
3ê2 M] is defined and plotted for a representative value of N. 
S@x_, N_D := -1 ê 2 + Sum@aa@nD * Cos@n * Pi * x ê H3 ê 2LD + bb@nD * Sin@n * Pi * x ê H3 ê 2LD, 8n, 1, N<D
Plot@S@x, 20D, 8x, -3, 3<D
-3
-2
-1
1
2
3
-1
-0.5
0.5
1
Ü Graphics Ü
Alternate Approach:
If a partial sum of a fixed number of terms is to be formed and graphed, the calculations can usually be done more quickly by
first forming numerical arrays of the Fourier coefficients and then using these numerical values to form the partial sum. This
approach is illustrated below for N=20.
dataA = N@Table@a@nD, 8n, 1, 20<DD
80.323356, -0.332658, 0., 0.123584, -0.119385, 0.,
0.0741088, -0.0724782, 0., 0.0528532, -0.0520049, 0., 0.041061,
-0.0405438, 0., 0.0335675, -0.0332199, 0., 0.0283858, -0.0281364<
aa = 80.323356232226532`, -0.332657613509711`, 0.`,
0.12358393240574425`, -0.11938468561216882`, 0.`, 0.0741087674440262`,
-0.07247818479014993`, 0.`, 0.052853162910226605`, -0.05200488027136341`, 0.`,
0.041060964362651095`, -0.040543761219899735`, 0.`, 0.033567537748255515`,
-0.03321994424001981`, 0.`, 0.028385807063209943`, -0.028136376429077754`<;
22

dataB = N@Table@b@nD, 8n, 1, 20<DD
80.76824, 0.285405, -0.106103, 0.167381, 0.122059, -0.0530516, 0.0936318,
0.0775209, -0.0353678, 0.0649782, 0.0567868, -0.0265258, 0.0497496,
0.0448013, -0.0212207, 0.0403029, 0.0369928, -0.0176839, 0.0338709, 0.0315019<
bb = 80.7682398508312406`, 0.28540486656787584`,
-0.1061032953945969`, 0.16738119799587403`, 0.12205915133496992`,
-0.05305164769729845`, 0.09363180581707609`, 0.077520907819953`,
-0.035367765131532294`, 0.06497817802139473`, 0.0567867555171879`,
-0.026525823848649224`, 0.04974956875291253`, 0.044801309870828976`,
-0.02122065907891938`, 0.0403028767044725`, 0.03699278910652327`,
-0.017683882565766147`, 0.03387090236412106`, 0.03150193842221992`<;
ss@x_D :=
-1 ê 2 + Sum@aa@@nDD * Cos@n * Pi * x ê H3 ê 2LD + bb@@nDD * Sin@n * Pi * x ê H3 ê 2LD, 8n, 1, 20<D
23

Plot@ss@xD, 8x, -3, 3<D
-3
-2
-1
1
2
3
-1
-0.5
0.5
1
Ü Graphics Ü
Multivariate Fourier Series
Consider the function uHx, yL, defined on the square 0 § x § 1, 0 § y § 1, 
uHx, yL = 9 4,
1ÅÅÅÅ4 § x § 3ÅÅÅÅ4 ,
1ÅÅÅÅ3 § y § 2ÅÅÅÅ3
0,
otherwise
.
We will graph the function, compute the Fourier series coefficients of the two-dimensional odd periodic extension of this
function and then plot a representative partial sum surface.
f2@x_D := 0 ê; x < 1 ê 4;
f2@x_D := 1 ê; 1 ê 4 § x § 3 ê 4;
f2@x_D := 0 ê; x > 3 ê 4;
g2@y_D := 0 ê; y § 1 ê 3;;
g2@y_D := 1 ê; 1 ê 3 § y § 2 ê 3;
g2@y_D := 0 ê; 2 ê 3 < y;
u@x_, y_D := 4 * f2@xD * g2@yD;
24

Plot3D@u@x, yD, 8x, 0, 1<, 8y, 0, 1<, PlotPoints Ø 80D
0
0.2
0.4
0.6
0.8
10
0.2
0.4
0.6
0.8
1
0
1
2
3
4
0
0.2
0.4
0.6
0.8
Ü SurfaceGraphics Ü
The Fourier series of the two-dimensional odd periodic extension has the form uHx, yL = ⁄m,n=1
¶
cmn sin( mpx
ÅÅÅÅÅÅÅÅÅÅÅ
2
)sin( npy
ÅÅÅÅÅÅÅÅÅ
2 ), where
cmn =16Ÿ
0
1
Ÿ
0
1
uHx, yL sinHm p xL sinHn pyL d x d y. (Note that, because of the special form of u(x,y), the coefficient evaluation
reduces to cmn =16·
1ÅÅÅÅÅ4
3ÅÅÅÅÅ4
sinHm p xL d x Ÿ
1ÅÅÅÅÅ3
2ÅÅÅÅÅ3
sinHn p yL d y .)
c@m_, n_D := 16 * Integrate@Sin@m * Pi * xD * Sin@n * Pi * yD, 8x, 1 ê 4, 3 ê 4<, 8y, 1 ê 3, 2 ê 3<D;
S@x_, y_, M_, N_D := Sum@c@m, nD * Sin@m * Pi * xD * Sin@n * Pi * yD, 8m, 1, M<, 8n, 1, N<D;
Plot3D@S@x, y, 20, 20D, 8x, 0, 1<, 8y, 0, 1<, PlotPoints Ø 50D
0
0.2
0.4
0.6
0.8
10
0.2
0.4
0.6
0.8
1
0
2
4
0
0.2
0.4
0.6
0.8
Ü SurfaceGraphics Ü
25

Symbolic Solution of a Two-Point Boundary Value Problem
We solve and graph the solution of the two-point boundary value problem yHxL≥+yHxL£ + yHxL = 0, yH0L = 0, yH1L£ =1.
DSolve@8y''@xD + y'@xD + y@xD ã 0, y@0D ã 0, y'@1D ã 1<, y@xD, xD
99y@xD Ø
2 ‰
1ÅÅÅÅ2 - xÅÅÅÅ2 SinA
è!!!!3 x
ÅÅÅÅÅÅÅÅÅÅ
2
E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
è!!!3 CosA
è!!!!3
ÅÅÅÅÅÅÅ
2 E - SinA
è!!!!3
ÅÅÅÅÅÅÅ
2 E
==
PlotA
2 ‰
1ÅÅÅÅ2 - xÅÅÅÅ2 SinA
è!!!!
3 x
ÅÅÅÅÅÅÅÅÅÅ
2
E
ÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅÅ
è!!!!3 CosA
è!!!!3
ÅÅÅÅÅÅÅ
2 E - SinA
è!!!!
3
ÅÅÅÅÅÅÅ
2 E
, 8x, 0, 1<E
0.2
0.4
0.6
0.8
1
1
2
3
4
Ü Graphics Ü
Numerical Solution of a Two-Point Boundary Value Problem
The two-point boundary value problem rHtL≥- rHtL = 0, rH0L = 0, rH1L£ = 1  is solved numerically using the NDSolve com-
mand. Functions for the position and velocity, labelled as ra(t) and raprime(t), are defined and plotted on the same graph.
Note the absence of the colon in the definition of these functions.
rsol = NDSolve@8r''@tD - r@tD ã 0, r@0D ã 0, r'@1D ã 1<, r@tD, 8t, 0, 1<D;
ra@t_D = r@tD ê. First@rsolD
InterpolatingFunction@880., 1.<<, <>D@tD
raprime@t_D = D@ra@tD, tD;
26

Plot@8ra@tD, raprime@tD<, 8t, 0, 1<D
0.2
0.4
0.6
0.8
1
0.2
0.4
0.6
0.8
1
Ü Graphics Ü
Symbolic  Solution  of a Two-Point  Boundary  Value  Problem  Involving  a Linear
First-Order System
The two-point boundary value problem
 
JI1
I2
N
£
=J1 -1
1 -1 NJI1
I2
N,  
I1H0L = 1
I1H1L - 1ÅÅÅÅ2  I2H1L = 0. 
 
  is solved.
DSolve@8I1'@xD ã I1@xD - I2@xD, I2'@xD ã I1@xD - I2@xD,
I1@0D ã 1, I1@1D - H1 ê 2L * I2@1D ã 0<, 8I1@xD, I2@xD<, xD
99I1@xD Ø 2 - x
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
, I2@xD Ø 3 - x
ÅÅÅÅÅÅÅÅÅÅÅÅ
2
==
27

