© 2019 MathByte Academy

Using Dictionaries to Maintain Counters
We've already seen how we can use regular dict and defaultdict for counters
d[key] = d.get(key, 0) + 1
d[key] += 1
d = {}
d = defaultdict(int)
certain operations can be tedious:
count the frequency of characters in a string (or items in an iterable in general)
update one counter dictionary with another counter dictionary (adding or subtracting)
from multiple counter dictionaries, find the max/min counter value for each key
© 2019 MathByte Academy

The collections.Counter class
The Counter class is a specialized dictionary that makes certain operations easier
à acts like a defaultdict and with a default of 0
à supports same constructor options as regular dicts
à iterate through every key, repeating each key as many times as the corresponding counter value
à find the n most common items (by count)
à increment/decrement counters based on another Counter or dict or iterable
à additional functionality to auto calculate a frequency table based on any iterable
à fromkeys is not supported
à update works differently than a regular dict
in-place addition of counts
iterable is just a sequence of elements, not tuples
© 2019 MathByte Academy

Code
© 2019 MathByte Academy

