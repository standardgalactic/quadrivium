QuickSort	  
Analysis	  I:	  A	  Decomp-­‐
osi8on	  Principle	  
Design	  and	  Analysis	  
of	  Algorithms	  I	  

Tim	  Roughgarden	  
Necessary	  Background	  
Assump8on:	  you	  know	  and	  remember	  (ﬁnite)	  
sample	  spaces,	  random	  variables,	  expecta8on,	  
linearity	  of	  expecta8on.	  	  For	  review:	  
•  Probability	  Review	  I	  (video)	  
•  Lehman-­‐Leighton	  notes	  (free	  PDF)	  
•  Wikibook	  on	  Discrete	  Probability	  

Tim	  Roughgarden	  
Average	  Running	  Time	  of	  QuickSort	  
QuickSort	  Theorem	  :	  for	  every	  input	  array	  of	  length	  n,	  the	  average	  
running	  8me	  of	  QuickSort	  (with	  random	  pivots)	  is	  O(nlog(n)).	  
Note	  :	  holds	  for	  every	  input.	  [no	  assump8ons	  on	  the	  data	  ]	  
	  -­‐	  recall	  our	  guiding	  principles	  !	  
	  -­‐	  “average”	  is	  over	  random	  choices	  made	  by	  the	  algorithm	  
	  (i.e.,	  the	  pivot	  choices	  )	  

Tim	  Roughgarden	  
Preliminaries	  
Fix	  input	  array	  A	  of	  length	  n	  
Sample	  Space	  	  	  	  	  	  	  	  =	  	  	  all	  possible	  outcomes	  of	  random	  choices	  in	  
QuickSort	  (i.e.,	  pivot	  sequences)	  
Key	  Random	  Variable	  :	  for	  
	  =	  #	  of	  comparisons	  between	  two	  input	  elements	  made	  by	  
	  QuickSort	  (given	  random	  choices	  	  	  	  )	  
Lemma:	  running	  8me	  of	  QuickSort	  dominated	  by	  comparisons.	  
Remaining	  goal	  :	  E[C]	  	  =	  O(nlog(n))	  
There	  exist	  constant	  c	  s.t.	  for	  all	  	  	  	  	  	  	  	  
	  ,	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  
(see	  notes)	  

Tim	  Roughgarden	  
Building	  Blocks	  
Note	  can’t	  apply	  Master	  Method	  [random,	  unbalanced	  subproblems]	  
[A	  =	  ﬁnal	  input	  array	  ]	  
Nota8on	  :	  zi	  =	  ith	  smallest	  element	  of	  A	  
For
	  	  	  	  	  	  	  ,	  indices	  i<	  j	  
=	  #	  of	  8mes	  zi,zj	  get	  compared	  in	  
QuickSort	  with	  pivot	  sequence	  

Tem
ver
1	  
0	  or	  1	  
0,	  1,	  or	  2	  
Fix	  two	  elements	  of	  the	  input	  array.	  	  How	  many	  8mes	  can	  these	  
two	  elements	  get	  compared	  with	  each	  other	  during	  the	  execu8on	  
of	  QuickSort?	  
Reason	  :	  two	  elements	  compared	  only	  when	  one	  is	  
the	  pivot,	  which	  is	  excluded	  from	  future	  recursive	  
calls.	  
Thus	  :	  each	  Xij	  is	  an	  “indicator”	  (i.e.,	  0-­‐1)	  random	  
variable	  

Tim	  Roughgarden	  
A	  Decomposi8on	  Approach	  
So	  :	   	  
	  =	  	  #	  of	  comparisons	  between	  input	  elements	  
	  
	  =	  	  #	  of	  comparisons	  between	  zi	  and	  zj	  
Thus	  :	  	  
By	  Linearity	  of	  Expecta8on	  :	  
Since	  
Thus	  :	  

Tim	  Roughgarden	  
A	  General	  Decomposi8on	  Principle	  
1.  Iden8fy	  random	  variable	  Y	  that	  you	  really	  care	  about	  
2.  Express	  Y	  as	  sum	  of	  indicator	  random	  variables	  :	  
3.  Apply	  Linearity	  of	  expecta8on	  :	  
“just”	  need	  to	  
understand	  these!	  

