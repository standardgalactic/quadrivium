©2019 MathByte Academy

Functions and Descriptors
one more thing I want to discuss regarding descriptors
à no real practical use, but good to understand how Python does some of its "magic"
When we write a class with an 
instance methods like this:
class Person:
def __init__(self, name):
self.name = name
def say_hello(self):
return f'{self.name} says hello'
Then we can write code like this:
p = Person('Alex')
p.say_hello()
How does the function end up being bound to the instance?
Does Python have C code that says "oh, this function is defined inside a class, and 
being called from an instance, do something different"?
No!
à functions are objects that implement the (non-data) descriptor protocol!
©2019 MathByte Academy

Coding
©2019 MathByte Academy

