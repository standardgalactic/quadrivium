1
Closure Properties of Regular 
Languages
Union, Intersection, Difference, 
Concatenation, Kleene Closure, 
Reversal, Homomorphism, Inverse 
Homomorphism

2
Closure Under Union
If L and M are regular languages, so is 
L M.
Proof: Let L and M be the languages of 
regular expressions R and S, 
respectively.
Then R+S is a regular expression 
whose language is L M.

3
Closure Under Concatenation 
and Kleene Closure
Same idea:
RS is a regular expression whose language 
is LM.
R* is a regular expression whose language 
is L*.

4
Closure Under Intersection
If L and M are regular languages, then 
so is L M.
Proof: Let A and B be DFA’s whose 
languages are L and M, respectively.
Construct C, the product automaton of A 
and B.
Make the final states of C be the pairs 
consisting of final states of both A and B.

5
Example: Product DFA for 
Intersection
A
C
B
D
0
1
0, 1
1
1
0
0
[A,C]
[A,D]
0
[B,C]
1
0
1
0
1
[B,D]
0
1

6
Example: Use of Closure Property
We proved L1 = {0n1n | n > 0} is not a 
regular language.
L2 = the set of strings with an equal 
number of 0’s and 1’s isn’t either, but 
that fact is trickier to prove.
Regular languages are closed under .
If L2 were regular, then L2 L(0*1*) = 
L1 would be, but it isn’t.

7
Closure Under Difference
If L and M are regular languages, then 
so is L – M = strings in L but not M.
Proof: Let A and B be DFA’s whose 
languages are L and M, respectively.
Construct C, the product automaton of A 
and B.
Final states of C are the pairs whose A-
state is final but whose B-state is not.

8
Example: Product DFA for 
Difference
A
C
B
D
0
1
0, 1
1
1
0
0
[A,C]
[A,D]
0
[B,C]
1
0
1
0
1
[B,D]
0
1

9
Closure Under Complementation
The complement of a language L (with 
respect to an alphabet Σ such that Σ* 
contains L) is Σ* – L.
Since Σ* is surely regular, the 
complement of a regular language is 
always regular.

10
Closure Under Reversal
Recall example of a DFA that accepted 
the binary strings that, as integers were 
divisible by 23.
We said that the language of binary 
strings whose reversal was divisible by 
23 was also regular, but the DFA 
construction was tricky.
Here’s the “tricky” construction.

11
Closure Under Reversal – (2)
Given language L, LR is the set of strings 
whose reversal is in L.
Example: L = {0, 01, 100};                     
LR = {0, 10, 001}.
Proof: Let E be a regular expression for L.  
We show how to reverse E, to provide a 
regular expression ER for LR.

12
Reversal of a Regular Expression
Basis: If E is a symbol a, ε, or ∅, then 
ER = E.
Induction: If E is
F+G, then ER = FR + GR.
FG, then ER = GRFR
F*, then ER = (FR)*.

13
Example: Reversal of a RE
Let E = 01* + 10*.
ER = (01* + 10*)R = (01*)R + (10*)R
= (1*)R0R + (0*)R1R
= (1R)*0 + (0R)*1
= 1*0 + 0*1.

14
Homomorphisms
A homomorphism  on an alphabet is a 
function that gives a string for each 
symbol in that alphabet.
Example: h(0) = ab; h(1) = ε.
Extend to strings by h(a1…an) = 
h(a1)…h(an).
Example: h(01010) = ababab.

15
Closure Under Homomorphism
If L is a regular language, and h is a 
homomorphism on its alphabet, then h(L)
= {h(w) | w is in L} is also a regular 
language.
Proof: Let E be a regular expression for L.
Apply h to each symbol in E.
Language of resulting RE is h(L).

16
Example: Closure under 
Homomorphism
Let h(0) = ab; h(1) = ε.
Let L be the language of regular 
expression 01* + 10*.
Then h(L) is the language of regular 
expression abε* + ε(ab)*.
Note: use parentheses
to enforce the proper
grouping.

17
Example – Continued
abε* + ε(ab)* can be simplified.
ε* = ε, so abε* = abε.
ε is the identity under concatenation.
That is, εE = Eε = E for any RE E.
Thus, abε + ε(ab)* = ab + (ab)*.
Finally, L(ab) is contained in L((ab)*), 
so a RE for h(L) is (ab)*.

18
Inverse Homomorphisms
Let h be a homomorphism and L a 
language whose alphabet is the output 
language of h.
h-1(L) = {w | h(w) is in L}.

19
Example: Inverse Homomorphism
Let h(0) = ab; h(1) = ε.
Let L = {abab, baba}.
h-1(L) = the language with two 0’s and 
any number of 1’s = L(1*01*01*).

20
Closure Proof for Inverse 
Homomorphism
Start with a DFA A for L.
Construct a DFA B  for h-1(L) with:
The same set of states.
The same start state.
The same final states.
Input alphabet = the symbols to which 
homomorphism h applies.

21
Proof – (2)
The transitions for B are computed by 
applying h to an input symbol a and 
seeing where A would go on sequence 
of input symbols h(a).
Formally, δB(q, a) = δA(q, h(a)).

22
Example: Inverse Homomorphism 
Construction
A
C
B
a
a
a
b
b
b
C
B
A
h(0) = ab
h(1) = ε
1
1
1
Since
h(1) = ε
0
0
, 0
Since
h(0) = ab

23
Proof – Inverse Homomorphism
An induction on |w| (omitted) shows 
that δB(q0, w) = δA(q0, h(w)).
Thus, B accepts w if and only if A 
accepts h(w).

