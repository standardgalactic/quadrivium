Studies in Systems, Decision and Control 20
Hamed Fazlollahtabar
Mohammad Saidi-Mehrabad
Autonomous 
Guided 
Vehicles
Methods and Models for Optimal Path 
Planning
www.ebook3000.com

Studies in Systems, Decision and Control
Volume 20
Series editor
Janusz Kacprzyk, Polish Academy of Sciences, Warsaw, Poland
e-mail: kacprzyk@ibspan.waw.pl

About this Series
The series "Studies in Systems, Decision and Control" (SSDC) covers both new
developments and advances, as well as the state of the art, in the various areas of
broadly perceived systems, decision making and control- quickly, up to date and
with a high quality. The intent is to cover the theory, applications, and perspec-
tives on the state of the art and future developments relevant to systems, decision
making, control, complex processes and related areas, as embedded in the ﬁelds of
engineering, computer science, physics, economics, social and life sciences, as well
as the paradigms and methodologies behind them. The series contains monographs,
textbooks, lecture notes and edited volumes in systems, decision making and con-
trol spanning the areas of Cyber-Physical Systems, Autonomous Systems, Sensor
Networks, Control Systems, Energy Systems, Automotive Systems, Biological Sys-
tems, Vehicular Networking and Connected Vehicles, Aerospace Systems, Automa-
tion, Manufacturing, Smart Grids, Nonlinear Systems, Power Systems, Robotics,
Social Systems, Economic Systems and other. Of particular value to both the con-
tributors and the readership are the short publication timeframe and the world-wide
distribution and exposure which enable both a wide and rapid dissemination of
research output.
More information about this series at http://www.springer.com/series/13304
www.ebook3000.com

Hamed Fazlollahtabar · Mohammad Saidi-Mehrabad
Autonomous Guided Vehicles
Methods and Models for Optimal
Path Planning
ABC

Hamed Fazlollahtabar
Faculty of Industrial Engineering
Iran University of Science and Technology
Tehran
Iran
Mohammad Saidi-Mehrabad
Faculty of Industrial Engineering
Center of Excellence for Advance
Manufacturing
Iran University of Science and Technology
Tehran
Iran
ISSN 2198-4182
ISSN 2198-4190
(electronic)
Studies in Systems, Decision and Control
ISBN 978-3-319-14746-8
ISBN 978-3-319-14747-5
(eBook)
DOI 10.1007/978-3-319-14747-5
Library of Congress Control Number: 2014958756
Springer Cham Heidelberg New York Dordrecht London
c⃝Springer International Publishing Switzerland 2015
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of
the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations, recitation,
broadcasting, reproduction on microﬁlms or in any other physical way, and transmission or information
storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology
now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant
protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this book
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or
the editors give a warranty, express or implied, with respect to the material contained herein or for any
errors or omissions that may have been made.
Printed on acid-free paper
Springer International Publishing AG Switzerland is part of Springer Science+Business Media
(www.springer.com)
www.ebook3000.com

Preface 
The Automated Guided Vehicle (AGV) is an automated guided cart that follows a 
guided path. This equipment is widely used in industrial fields and places of 
physical distribution. We have developed a new type of AGV that has additional 
functions such as following the motion of people and avoiding obstacles on the 
course it is traveling on. Therefore, it can work with service personnel even 
though there is no pre-determined guided path. In general, an AGV is a driverless 
transport system used for horizontal movement of materials. AGVs are especially 
used for the internal and external transport of materials. Moreover, vision or lasers 
can be used for determining the movement of an AGV.  
Since their introduction in 1955, AGVs have found widespread industrial 
applications. AGVs are now found in all types of industries, with the only 
restrictions on their use mainly resulting from the dimensions of the goods to be 
transported or spatial considerations. Many applications of AGVs are technically 
feasible, but the purchase and implementation of such systems is usually based on 
economic considerations. The uses of AGVs can be divided into four main areas 
of application:  
1) supply and disposal at storage and production areas;  
2) production-integrated application of AGV trucks as assembly platforms;  
3) retrieval, especially in wholesale trade; and  
4) supply and disposal in special areas, such as hospitals and offices. In all of 
these settings.  
AGVs have been found to reduce the damage to inventory, make production 
scheduling more flexible, and reduce staffing needs. But, as with any other major 
capital decision, implementation of these systems must be undertaken cautiously. 
The AGVs were traditionally employed in manufacturing systems, but have 
recently extended their popularity to many other industrial applications, such as 
goods transportation in warehouses and container transshipment systems at 
container terminals. Industrial transportation systems using AGVs are used in 
warehouses and manufactures.  
An AGV system is a fully automated industrial transport system that makes use 
of numerous AGVs. An AGV is a battery powered, computer controlled, 

VI 
Preface
 
unmanned vehicle that is capable of transporting goods in an industrial 
environment. The AGVs are restricted to follow pre-determined paths, on which 
they navigate by using sensors and stationary beacons. Transports, which consist 
of picking up a load on a certain location and transporting it to a certain 
destination, are generated by an external system and have to be assigned to the 
AGVs. Traditionally, one computer system (central server) is in charge of 
numerous complex and time-consuming tasks such as routing, collision avoidance 
or deadlock avoidance.  
The AGVs themselves have little autonomy. Although this planning is efficient, 
it lacks flexibility. In highly dynamic systems, where the situation changes 
frequently, problems are experienced. A new and innovative architecture has been 
developed that additional qualities, like flexibility and openness, to cope with the 
highly dynamic environments.  
AGV usage is growing. One reason is that as manufacturers strive to become 
more competitive, they are adopting flexible manufacturing systems (FMS). These 
systems integrate automated material handling systems, robots, numerically 
controlled machine tools, and automated inspection stations. Flexible 
manufacturing systems offer high capital utilization and reduced direct labor costs. 
They also reduce work-in-process inventories and make it possible to work with 
shorter lead times. Because the systems are flexible, they are more responsive to 
changes in production requirements. These systems offer high product quality and 
increased productivity. 
In this book different models and methods for optimizing AGV’s path are 
developed. The chapters are useful for academic courses in graduate studies. The 
models are classified into single and multiple AGVs. Also, models under 
uncertain conditions including fuzzy and statistical approaches are proposed.  
The book chapters are organized as follows. In the first chapter an overview of 
the models and methods of scheduling and routing problems for AGVs is 
presented. In chapter 2, material flow optimization using AGV is discussed. In 
chapter 3, a manufacturing system equipped with AGV is modeled using a 
nonlinear stochastic mathematical programming. In chapter 4, reliability of AGVs 
is considered and optimized. In chapter 5, path planning under uncertainty is 
explained and modeled. In chapter 6, AGV routing under stochastic run time is 
modeled by cross entropy concept. In chapter 7, expert system is designed for 
AGV optimal path planning considering multiple criteria. In chapter 8, intelligent  
 
 
 
 
www.ebook3000.com

Preface 
VII
 
agent is developed for path planning of AGV. In chapter 9, delay optimization for 
multiple AGVs is developed and modeled. In chapter 10, Markovian modeling is 
proposed for evaluation of multiple AGV system. In chapter 11, producer 
behavior in an AGV equipped manufacturing system is analyzed. In the last 
chapter risk evaluation for AGVs in a manufacturing system is described.    
 
 
January 2015  
 
 
 
 
          Hamed Fazlollahtabar 
Tehran, Iran 
 
 
 
 
Mohammad Saidi-Mehrabad 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

Acknowledgments 
We would like to express our gratitude to the many people who saw us through 
this book; to all those who provided support, talked things over, read, wrote, 
offered comments, allowed us to quote their remarks and assisted in the editing, 
proofreading and design. 
We would like to thank Iran University of Science and Technology for enabling 
us to publish this book. Above all we want to thank our families, who supported 
and encouraged us in spite of all the time it took us away from them. It was a long 
and difficult journey for them.  
We would like to thank Prof. Nezam Mahdavi-Amiri for helping us in the 
process of selection and editing. Thanks to our publisher who encouraged us.  
Thanks to Prof. Abdolreza Sheikholeslami - without you this book would never 
find its way to the academician.  
Last and not least: We beg forgiveness of all those who have been with us over 
the course of the years and whose names we have failed to mention. 
 
 
                                                                                                    H. Fazlollahtabar 
                                                                                                M. Saidi-Mehrabad 
 
 
 
 
www.ebook3000.com

Contents 
1 
Models for AGVs’ Scheduling and Routing .........................................  
1 
1.1 
Summary .........................................................................................  
1 
1.2 
Scheduling Models ..........................................................................  
2 
1.3 
Routing Models ...............................................................................  
4 
1.4 
Conclusions .....................................................................................  
12 
References ................................................................................................  
13 
2 
Analytical Material Flow Model for AGV System ..............................  
17 
2.1 
Summary .........................................................................................  
17 
2.2 
Statement of the Problem ................................................................  
19 
2.3 
Mathematical Model .......................................................................  
20 
2.4 
Conclusions .....................................................................................  
24 
References ................................................................................................  
25 
3 
Nonlinear Stochastic Model for AGV System ......................................  
27 
3.1 
Summary .........................................................................................  
27 
3.2 
Statement of the Problem ................................................................  
29 
3.3 
Mathematical Model .......................................................................  
30 
3.4 
Conclusions .....................................................................................  
37 
References ................................................................................................  
38 
4 
Reliability Model for AGV ....................................................................  
41 
4.1 
Summary .........................................................................................  
41 
4.2 
Statement of the Problem ................................................................  
44 
4.3 
Mathematical Model .......................................................................  
45 
4.4 
Conclusions .....................................................................................  
53 
References ................................................................................................  
54 
5 
Uncertain Optimal Path for AGV System ............................................  
57 
5.1 
Summary .........................................................................................  
57 
5.2 
Statement of the Problem ................................................................  
59 
 
 

XII 
Contents
 
5.3 
Mathematical Modeling ..................................................................  
60 
5.4 
Conclusions .....................................................................................  
75 
References ................................................................................................  
75 
6 
Cross Entropy Model for AGV Routing Time .....................................  
79 
6.1 
Summary .........................................................................................  
79 
6.2 
Statement of the Problem ................................................................  
82 
6.3 
Mathematical Model .......................................................................  
83 
6.4 
Conclusions .....................................................................................  
90 
References ................................................................................................  
90 
7 
Neuro-Fuzzy-Regression Expert System for AGV Optimal Path ......  
93 
7.1 
Summary .........................................................................................  
93 
7.2 
Statement of the Problem ................................................................  
96 
7.3 
Mathematical Model .......................................................................  
98 
7.4 
Conclusions .....................................................................................  
112 
References ................................................................................................  
112 
8 
Optimal Path for AGV System with Intelligent Agents ......................  
117 
8.1 
Summary .........................................................................................  
117 
8.2 
Statement of the Problem ................................................................  
120 
8.3 
Mathematical Model .......................................................................  
126 
8.4 
Conclusions .....................................................................................  
130 
References ................................................................................................  
130 
9 
Earliness/Tardiness for a Multiple AGV System .................................  
133 
9.1 
Summary .........................................................................................  
133 
9.2 
Statement of the Problem ................................................................  
136 
9.3 
Mathematical Model .......................................................................  
138 
9.4 
Conclusions .....................................................................................  
144 
References ................................................................................................  
144 
10 Markovian Model for Multiple AGV System ......................................  
147 
10.1 Summary .........................................................................................  
147 
10.2 Statement of the Problem ................................................................  
151 
10.3 Mathematical Model .......................................................................  
153 
10.4 Conclusions .....................................................................................  
166 
References ................................................................................................  
166 
www.ebook3000.com

Contents 
XIII
 
11 Producer's Behavior Analysis for AGV System ..................................  
169 
11.1 Summary .........................................................................................  
169 
11.2 Statement of the Problem ................................................................  
171 
11.3 Mathematical Model .......................................................................  
173 
11.4 Conclusions .....................................................................................  
184 
References ................................................................................................  
185 
12 Risk for Multiple AGV System .............................................................  
189 
12.1 Summary .........................................................................................  
189 
12.2 Statement of the Problem ................................................................  
192 
12.3 Mathematical Model .......................................................................  
194 
12.4 Conclusions .....................................................................................  
202 
References ................................................................................................  
203 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
1 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_1 
 
Chapter 1 
Models for AGVs’ Scheduling and Routing 
1.1 
Summary 
An automated guided vehicle (AGV) is a driverless material handling system used 
for horizontal movement of materials. AGVs were introduced in 1955 (Muller, 
1983). The use of AGVs has grown enormously since their introduction. The 
number of areas of application and variation in types has increased significantly. 
AGVs can be used in inside and outside environments, such as manufacturing, 
distribution, transshipment and (external) transportation areas. At manufacturing 
areas, AGVs are used to transport all types of materials related to the 
manufacturing process. According to Gotting (2000) over 20,000 AGVs were used 
in industrial applications. The author states that the usage of AGVs will pay off 
for environments with repeating transportation patterns. Examples of these 
environments are distribution, transshipment and transportation systems. 
Warehouses and cross docking centers are examples of distribution areas. AGVs 
are used in these areas for the internal transport of, for example, pallets between 
the various departments, such as receiving, storage, sorting and shipment areas. At 
transshipment systems, such as container terminals, AGVs take care of the 
transport of products between the various modes of transport. Gotting (2000) 
presented an overview of available technology for automation in container 
terminals. Furthermore, navigation and vehicle guidance systems applicable in 
various indoor/outdoor environments are described. Haefner and Bieschke (1998) 
stated that AGV systems can provide benefits to both the port and its customers by 
executing transportation requests between vessels and inland transportation. 
Namely, in non-automated terminals this transportation process is one of the 
least efficient and most costly processes. AGVs can also be used in the outdoor 
transportation process. An example of such a transportation system is an 
underground automated transportation system with AGVs travelling in tubes 
between companies and an airport (see Van der Heijden et al., 2002 a,b). In such 
systems, we notice a high traffic density and long tube driving times. It has even 
been studied if AGVs can be used as a communication system between work 
stations (see Maughan and Lewis, 2000). Clearly, the specifications of AGVs 
differ per environment. To transport a container, the capacity of an AGV should at 
www.ebook3000.com

2 
1   Models for AGVs’ Scheduling and Routing
 
 
least be equal to 40 tons. Less capacity is required for the transport of pallets at 
warehouses. Furthermore, at container terminals self-lifting automated guided 
vehicles (ALVs) are used. For this type of AGV no other equipment is required to 
transfer a load to the vehicle. Vis and Harika (2004) and Yang et al. (2004) 
discussed this new type of AGVs in more detail. 
In this chapter, we will discuss literature concerning the usage of AGVs in 
manufacturing and the new areas of application, namely distribution, 
transshipment and transportation systems. The most important differences 
between traditional and new areas of application are the number of AGVs used, 
the number of transportation requests, the occupancy degree of AGVs, the 
distances to be travelled and the number of pick-up and delivery points where 
transportation requests become available. At manufacturing systems, a small 
number of AGVs with relatively low occupancy degrees are used to transport a 
small number of requests over short distances between a few pick-up and delivery 
points. For continuous mass transport in these systems conveyors are used instead 
of large numbers of AGVs (see Gotting, 2000). In contrast to manufacturing 
systems, large numbers of AGVs (up to 400; Van der Heijden et al., 2002a) were 
used to execute a large number of repeating transportation tasks at container 
terminals and external transportation systems. Furthermore, operational 
conditions, such as weather conditions and spatial dimensions, found in outside 
environments (container terminals and external transportation systems) differ from 
the operational conditions in inside areas (manufacturing and distribution 
systems). 
1.2 
Scheduling Models 
The literature discussed so far on scheduling of AGVs hardly considers (side) 
constraints such as capacity constraints of the machines where transportation jobs 
become available, schedules of other types of equipment and limited parking 
space for vehicles. These side constraints become more and more important in real 
life situations with large AGV systems. To take these constraints into account 
more attention should be paid to integrated scheduling of different types of 
material handling equipment, which also meet space and capacity requirements. 
1.2.1 
Artificial Intelligence 
The increased use of FMS to efficiently provide customers with diversified 
products has created a significant set of operational challenges. Although 
extensive research has been conducted on design and operational problems of 
automated manufacturing systems, many problems remain unsolved. In particular, 
the scheduling task, the control problem during the operation, is of importance 
owing to the dynamic nature of the FMS such as flexible parts, tools and AGV 
routings. The FMS scheduling problem has been tackled by various traditional 

1.2 
Scheduling Models 
3
 
 
optimization techniques. While these methods can give an optimal solution to 
small-scale problems, they are often inefficient when applied to larger-scale 
problems. Jerald et al. (2005) designed different scheduling mechanisms to 
generate optimum scheduling; these included non-traditional approaches such as 
genetic algorithm (GA), simulated annealing (SA) algorithm, memetic algorithm 
(MA) and particle swarm algorithm (PSA) by considering multiple objectives, i.e., 
minimizing the idle time of the machine and minimizing the total penalty cost for 
not meeting the deadline concurrently. The MA presented was essentially a GA 
with an element of SA. The results of the different optimization algorithms (MA, 
GA, SA, and PSA) were compared and conclusions were presented. 
Solving multi-objective scientific and engineering problems is, generally, a 
very difficult goal. In these optimization problems, the objectives often conflict 
across a high-dimensional problem space and require extensive computational 
resources. Sarvana Sankar et al. (2006) developed a migration model of 
parallelization for a GA based multi-objective evolutionary algorithm (MOEA). 
The MOEA generated a near-optimal schedule by simultaneously achieving two 
contradicting objectives of an FMS. The parallel implementation of the migration 
model showed a speedup in computation time and needed less objective function 
evaluations when compared to a single-population algorithm. So, even for a 
single-processor computer, implementing the parallel algorithm in a serial manner 
(pseudo-parallel) delivers better results. Two versions of the migration model 
were constructed and the performance of two parallel GAs was compared for their 
effectiveness in bringing genetic diversity and minimizing the total number of 
functional evaluations. 
1.2.2 Simulation 
Gaur et al. (2003) studied the problem of scheduling an AGV in a flexible 
manufacturing system while minimizing completion times. A vehicle needs to 
visit each site only after its release time and before its due time. Sabuncuoglu 
(1998) used simulation to test various AGV scheduling rules. 
Fazlollahtabar et al. (2012) concerned with applying tandem automated guided 
vehicle (TAGV) configurations as material handling devices and optimizing the 
production time considering the effective time parameters in a flexible automated 
manufacturing system (FAMS) using Monte Carlo simulation. Due to different 
configurations of TAGVs in an FAMS, the material handling activities are 
performed. With respect to various stochastic time parameters and the TAGV 
defects during material handling processes, sample data were collected and their 
corresponding probability distributions were fitted. Using the probability 
distributions, they modelled the TAGV material handling problem via Monte 
Carlo simulation. The effectiveness of the proposed model was illustrated in a 
case study. 
www.ebook3000.com

4 
1   Models for AGVs’ Scheduling and Routing
 
 
1.3 
Routing Models 
If the dispatching decision is carried out, a route and schedule should be planned 
for the AGV to move the job from its origin to its destination within the AGV 
network. A route implies the path which should be taken by the AGV when 
making a pick-up or delivery. The related schedule gives arrival and departure 
times of the AGV at each part, pick-up and delivery point and intersection during 
the route to ensure collision free routing. The selection of a certain route and 
schedule is effective on the performance of the system. The longer it takes to 
transport a job, the fewer the jobs that can be handled within a certain time. 
Therefore, one of the objectives of the routing of AGVs is to minimize 
transportation times. Algorithms have to be developed to solve the routing 
problem. Two categories of algorithms can be distinguished, namely static and 
dynamic algorithms. 
Analogies between these problems from transportation literature and routing 
and scheduling problems for AGVs in automated guided vehicle systems are clear. 
A number of loads at various locations have to be transported by vehicles at a 
certain start time or at a certain moment within a time window. However, the use 
of the described models from transportation literature is not always possible. 
These models do not take into account congestion in the system. Furthermore, 
most models are not developed to deal with real time response to dynamically 
changing transportation requests. Therefore, attention is paid in the literature to 
developing non-conflicting routes for AGVs. With a non-conflicting route, an 
AGV arrives as early as possible at the destination without conflicting with other 
AGVs. 
In AGV routing with static algorithms the route from node i to node j is 
determined in advance and is always used if a load has to be transported from i to 
j. In this way, a simple assumption is to choose the route with the shortest distance 
from i to j. However, these static algorithms are not able to adapt to changes in the 
system and traffic conditions. 
In dynamic routing, the routing decision is made based on real-time 
information and, as a result, various routes between i and j can be chosen. Static 
routing problems in AGV systems are related to vehicle routing problems (VRP) 
studied in transportation literature. In the vehicle routing problem a set of n clients 
with known demands need to be served by a fleet of m vehicles with limited 
capacity. The vehicles are all housed at one depot. The route of each vehicle starts 
and ends at this depot. m least costs (length) routes have to be planned such that 
each customer is served exactly once and that the total demand of the customers 
served by each vehicle does not exceed the capacity of each vehicle. The objective 
is to minimize the total distance of all m routes under previously mentioned 
conditions. This is an NP-hard problem to solve. The vehicle routing problem has 
been studied extensively in literature. Bodin et al. (1983), Laporte (1992) and 
Fisher (1995) provided an overview of literature in this area. A more recent paper 
observing this problem is from Kelly and Xu (1999). They proposed a set 

1.3 
Routing Models 
5
 
 
partitioning based heuristic. In a systematic way fragments of routes are combined 
to obtain high-quality solutions. Vehicle scheduling problems can be seen as 
routing problems with additional constraints concerning times at which certain 
activities (e.g. delivery of a load) have to be executed. Vehicle activities have to 
be sequenced both in time and space. An overview of methods to solve vehicle 
scheduling problems has been given in Bodin et al. (1983). 
Numerous studies on the vehicle routing problem with time windows have been 
executed. Branch and bound methods (Kolen et al., 1987), insertion heuristics 
(Solomon, 1987), extensions of vehicle routing problem heuristics (Solomon et al., 
1988), Lagrangian relaxation (Fisher et al., 1997; Kohl and Madsen, 1997), 
constrained shortest path relaxation (Desrochers et al., 1992; Kohl et al., 1999) 
and set covering formulations (Bramel and Simchi-Levi, 1997) can be used to find 
solutions to the problem. Desrochers et al. (1988) provided an overview of 
solution methods. More recently, Cordeau et al. (2002) presented a survey of 
approximation and optimal approaches to solve the vehicle routing problem with 
time windows. 
1.3.1 Artificial Intelligent 
Owing to the lack of robust design and control algorithms, most current 
applications of AGV systems employ simple control methods despite the fact that 
the system is far from efficient. Petri nets have evolved into a powerful tool for 
modelling complex manufacturing systems. One of the advantages of the use of 
Petri nets is that analysis, simulation and on-line control can all be done on the 
same model once the model is built. By also using petri nets, conflict free routes 
can be determined (see Zeng et al., 1991). The purpose of Hsieh and Lin (1991) 
was to establish the research fundamentals in the field of the Petri-net modelling 
of an AGVS. The main contribution of the chapter was to define basic traffic-
control nets which can be used directly to model an AGVS without too much 
thinking. Some basic AGV Petri-net control elements were described and 
illustrated in detail. Also, difficulties in the use of bidirectional flows were 
discussed, and it has been determined how Petri nets can be used to solve these 
problems. 
The main problem for an AGV dispatching system is to assign vehicles to 
transport demands which optimize some predetermined objectives of a 
manufacturing shop. Singh and Tiwari (2004) presented a framework for an AGV 
dispatching system based on an object oriented approach using the unified 
modeling language (UML), and the development of a dispatching algorithm to 
facilitate a human controller to dispatch efficiently a fleet of AGVs in response to 
calls from any shop floor (or machine) operator. The main reason for their work 
was to model an AGV dispatching system as well as to develop a dispatching 
algorithm which can record details of the AGV position and movement and ensure 
their allocation of new orders. The provision of both immediate and pre-booked 
orders for an AGV was also incorporated in the proposed AGVs dispatching 
www.ebook3000.com

6 
1   Models for AGVs’ Scheduling and Routing
 
 
system. The underlying AGV dispatching system and algorithm were capable of 
dispatching a vehicle automatically to handle a call at the required time. In order 
to overcome difficulties associated with tackling immediate orders, pre-booked 
orders, and processing of information related to AGVs, a comprehensive 
dispatching algorithm was developed which aims to minimize lateness, traveling 
time and distance of empty vehicles in a simulated jobshop scenario. 
Kizil et al. (2006) evaluated the effects of various dispatching rules on the 
operation and performance of cellular manufacturing systems (CMS). When the 
study of a CMS considers the automated material handling, it is crucial to reduce 
the gridlock probability (i.e., the probability of an unsuccessful load transfer 
attempt occurring in the interface point between the intercell and intracell 
handling system). Preventing an unsuccessful load transfer is critical for the 
operation of the entire system as a blockage between the AGV and the overloaded 
cell results in a total system shutdown. The gridlock probability was influenced by 
the dispatching rule used to schedule the load transfers in the system. Therefore, in 
order to reduce this probability it was necessary to use a dispatching rule that will 
decrease the number of waiting loads in the transfer spurs. The main objective of 
the paper was to identify a dispatching rule that maintains the system operational 
at all times. A group of dispatching rules, including the first come first served, 
shortest imminent operation, longest imminent operation, most remaining 
operations, shortest processing time, shortest remaining process time, and a newly 
developed rule proposed by the authors, loads with the minimum number of 
processing first, were tested and evaluated with respect to whether the capacity of 
the transfer spurs of the cells was exceeded. The paper presented a simulation 
model of a cellular manufacturing system, which was used to further explore the 
effects of the dispatching rules on the system performance.  
AGVs are the most flexible means to transport materials among workstations of 
a flexible manufacturing system. Complex issues associated with the design of 
AGV control of these systems are conflict-free shortest path, minimum time 
motion planning and deadlock avoidance. Srivastava et al. (2008) presented an 
intelligent agent-based framework to overcome the inefficacies associated with the 
aforementioned issues. Proposed approach described the operational control of 
AGVs by integrating different activities such as path generation, journey time 
enumeration, collision and deadlock identification, waiting node location and its 
time estimation, and decision making on the selection of the conflict-free shortest 
feasible path. It represented efficient algorithms and rules associated with each 
agent for finding the conflict-free minimum time motion planning of AGVs, 
which were needed to navigate unidirectional and bidirectional flow path network. 
A collaborative architecture of AGV agent and its different modules were also 
presented. Three complex experimental scenarios were simulated to test the 
robustness of the proposed approach. It was shown that the proposed agent-based 
controller was capable of generating optimal, collision- and deadlock-free path 
with less computational efforts. 
The objective of Aized (2009) was to model and maximize performance of an 
integrated AGVS, which is embedded in a pull type multi-product, multi-stage and 

1.3 
Routing Models 
7
 
 
multi-line FMS. The author examined the impact of guide-path flexibility on 
system performance through the development of three different guide-path 
configurations which range from dedicated to flexible relationships between 
AGVs and machine/assembly station resources. The system was modelled using 
coloured Petri net method (CPN) and the simulation results lead to identify the 
resource redundancy which can be rectified to achieve lower overall cost of the 
system through the development of flexible guide-path configurations. The study 
was extended to seek global near-optimal conditions for each guide-path 
configuration using response surface method, which yields improvements in 
system throughput and cycle time along with a decrease in the numbers of AGVs. 
Material handling in manufacturing systems is becoming easier as the 
automated machine technology is improved. Nowadays, most of the research aims 
at increasing the flexibility and improving the performance of the AGV. Yahyaei 
et al. (2010) designed and made AGV in the Industrial Control Laboratory in 
Royce Lab at the University of Manchester Institute of Science and Technology. 
For controlling the navigation of the AGV, a newly developed controller 
integrated fuzzy logic with programmable logic controller was used. By using 
integrated fuzzy logic controller with programmable logic controller (IFLPLC), 
the flexibility of AGV was increased and they achieved great advantages. Since 
that AGV used programmable logic controller and fuzzy logic controllers 
together, it proved usefulness for factories which implement FMS. Online 
maintenance and sending the commands to other machines from AGV and so on 
were the advantages that can be used in FMS.  
Fazlollahtabar and Mahdavi-Amiri (2012) proposed an approach for finding an 
optimal path in a flexible jobshop manufacturing system considering two criteria 
of time and cost. A network was configured in which the nodes are considered to 
be the shops with arcs representing the paths among the shops. An automated 
guided vehicle functioned as a material handling device through the 
manufacturing network. The expert system for cost estimation was based on fuzzy 
rule backpropagation network to configure the rules for estimating the cost under 
uncertainty. A multiple linear regression model was applied to analyze the rules 
and find the effective rules for cost estimation. The objective was to find a path 
minimizing an aggregate weighted unscaled time and cost criteria. A fuzzy 
dynamic programming approach was presented for computing a shortest path in 
the network. Then, a comprehensive economic and reliability analysis was worked 
out on the obtained paths to find the optimal producer’s behavior.  
Singh and Tiwari (2002) presented an intelligent agent framework to find a 
conflict-free shortest-time path for an AGV travelling in a bi- or unidirectional 
network. 
Fazlollahtabar and Mahdavi-Amiri (2013) proposed an approach for finding an 
optimal path in a flexible jobshop manufacturing system considering two criteria 
of time and cost. With rise in demands, advancement in technology and increase 
in production capacity, the need for more shops persists. Therefore, a flexible 
jobshop system has more than one shop with the same duty. The difference among 
shops with the same duty is in their machines with various specifications.  
www.ebook3000.com

8 
1   Models for AGVs’ Scheduling and Routing
 
 
A network was configured in which the nodes were considered to be the shops 
with arcs representing the paths among the shops. An AGV functioned as a 
material handling device through the manufacturing network. To account for 
uncertainty, the authors considered time to be a triangular fuzzy number and 
applied an expert system to infer cost. The objective was to find a path minimizing 
both the time and cost criteria, aggregately. Since time and cost have different 
scales, a normalization procedure was proposed to remove the scales. The model 
being biobjective, the analytical hierarchy process weighing method was applied 
to construct a single objective. Finally, a dynamic programming approach was 
presented for computing a shortest path in the network. The efficiency of the 
proposed approach was illustrated by a numerical example. 
1.3.2 Simulation 
Software aids for simulation are very important to practitioners of simulation. The 
widespread availability of inexpensive computing power now allows computer 
assistance in each stage of simulation activities such as input data analysis, 
modelling, programming, output analysis and so on. Therefore Ashayeri and 
Gelders (1987) described an interactive microcomputer GPSS simulation program 
generator for automated material handling systems. The program was written in 
Pascal and consisted of several modules to capture data, build the model, and 
generate the corresponding GPSS simulation program for automated guided 
vehicle systems as well as surge systems. The application of the program to a real 
life project was used to highlight practical advantages of the proposed approach.  
Automated Guidance Vehicles' guidance techniques make use, in most 
vehicles, of a painted strip or a cable buried in the floor. Free ranging vehicles are 
now also available in limited types but at prohibitive cost. Katz and Bright (1992) 
presented a type of guidance technique whereby the vehicle follows a path created 
by the light emitted from suspended fluorescent lights. The method has been 
tested on a multi-directional vehicle. The results were encouraging when 
compared with other available guidance techniques. The possible integration of 
this guidance method with a navigation method could make AGVs more attractive 
to most of the manufacturing environments. The design, implementation and 
experimental results were outlined and described. 
A simulation-based cost model was presented by Kasilingam and Gobal (1996) 
for determining the number of AGVs needed to meet the material handling 
requirements in a manufacturing system. The estimation of the number of vehicles 
was based on the sum of the idle-time costs of vehicles and machines, and the cost 
of waiting time of parts. While an increase in the number of vehicles reduces the 
waiting time of parts and the idle time of machines, it increases the idle time of 
vehicles. The application was illustrated using a hypothetical manufacturing 
system. 
 

1.3 
Routing Models 
9
 
 
A TAGV system is obtained by partitioning all workstations into multiple 
zones and assigning a single vehicle to each zone. Kim et al. (2003) proposed an 
analytical model to design a tandem AGVS with multi-load AGVs. Using 
simulations, the performance of the proposed model was shown by comparing it 
with a conventional multi-load AGVS. 
Kim and Jae (2003) presented an object-oriented simulation modelling 
environment, AgvTalk, to provide flexible modelling capabilities for the 
simulation of many alternative AGV systems. The hierarchical features and 
modularity of AgvTalk created possibilities for the extension and reuse of 
simulation object components. The detailed behaviour of each object in the AGV 
system can also be modelled easily and exactly in AgvTalk because there were no 
limiting modeling constructs. The modelling capabilities of AgvTalk were 
demonstrated by designing and simulating a conceptually different configuration 
AGV system, known as the tandem configuration. For the tandem and 
conventional AGV systems, the characteristics and design methodology in 
AgvTalk were described. Simulations between the two systems were compared 
using AgvTalk in a job shop environment. 
Um et al. (2009) presented the simulation design and analysis of an FMS with 
an AGV system. To maximize the operating performance of FMS with AGVs, 
many parameters must be considered, including the number, velocity, and 
dispatching rule of AGV, part types, scheduling, and buffer sizes. Of the various 
critical factors, they considered the following three: (1) minimizing the 
congestion; (2) minimizing the vehicle utilization; and (3) maximizing the 
throughput. The authors considered the systematic analysis methods that 
combined a simulation-based analytic and optimization technique that was Multi-
Objective Non-Linear Programming (MONLP) and Evolution Strategy (ES). 
MONLP determined the design parameters of the system through multi-factorial 
and regression analyses. ES was used to verify each parameter for simulation-
based optimization. A validation test for the two methods was conducted. This 
method-based approach towards design yielded the correct experimental results, 
ensures confidence in the specification of design parameters and supports a robust 
framework for analysis. 
Kim et al. (2009) proposed a simple blocking prevention method for a path-
based automated material handling system (AMHS) such as a semiconductor 
fabrication line. In their research, blocking means the situation in which a vehicle 
stands and waits without doing anything because the vehicle in front of it is in the 
process of loading or unloading. Since a typical bay type path-based AMHS has a 
single path in each bay and no sidetracks, the blocking issue is inevitable in a large 
complex system with many vehicles. The proposed method was based on the 
swapping of load assignments between retrieval vehicles on the same path. The 
simulation study on an example semiconductor line showed that the proposed 
method improves the AMHS productivity under various vehicle dispatching rules. 
Guan and Dai (2009) developed a flexible, efficient, and deadlock-free 
dispatching method for automated guided vehicle systems. For this purpose, a 
deadlock-free multi-attribute dispatching method with dynamically adjustable 
www.ebook3000.com

10 
1   Models for AGVs’ Scheduling and Routing
 
 
weights (AWMA) was proposed. Traveling distance, input, and output buffer 
statuses were selected as dispatching attributes according to the efficiency and 
deadlock avoidance requirement. The weight for each attribute was dynamically 
adjusted according to the processing load and transportation load of the system. 
To ensure the system to be deadlock-free, a deadlock avoidance policy based on 
remaining capacity concept was introduced. It worked by temporarily forbidding 
critical tasks according to the system state, which will otherwise cause system 
deadlock. The AWMA method was formed by integrating the deadlock avoidance 
policy into the multi-attribute dispatching procedure. To validate the effectiveness 
of the proposed method, several simulation experiments were carried out to 
compare three commonly used dispatching methods with the proposed one under 
different system settings. The simulation results indicated that the deadlock 
avoidance policy can guarantee the system to be deadlock-free and that the 
proposed method was efficient. 
In the majority of small and medium sized enterprises, the direct costs of 
material handling cannot be clearly measured. There are several reasons for this, 
including the large number of product types, complexity of their production cycle, 
and continuous change in markets. Therefore, production managers require 
flexible tools to create a suitable material handling system model which explicitly 
and rapidly calculates the indices required as these are traditionally neglected or 
laboriously approximated, (i.e., time and cost in material flow inside the factory, 
storage area requirements, and MH utilization percentage). Gamberi et al. (2009) 
proposed an integrated approach to analyzing and controlling material handling 
operations in an industrial manufacturing plant from a “full quantitative” point of 
view. The model presented united quite different fields of research into a unique 
methodology. The material handling model rapidly and automatically provided 
production managers with extensive and significant information. As a result, 
integrated layout flow analysis interrelated systematic layout planning with 
operational research algorithms and visual interactive simulation, using a complete 
software platform to implement them. This integrated layout flow analysis 
approach focused on determining the space requirement for manufacturing 
department buffers, the transportation system requirements, the performance 
indices, and the time and cost of material flows spent in the layout and in MH 
traffic jams. 
Flexible material handling systems (FMHS) have been widely used to enhance 
productivity involved with product proliferation, and thus far, only fixed-track 
material handling systems such as Eton systems in the apparel industry are 
commonly used. Dai et al. (2009) explored the potential advantages of a FMHS 
using free-ranging automated-guided vehicles with a local positioning system for 
the apparel industry. First, the free-ranging FMHS (FRMHS) for the apparel 
industry has been designed. Then, through Monte Carlo simulation and analytical 
models, the performance in terms of manufacturing system effectiveness, 
workstation utilization, and the total transportation distance of the FRMHS were 
compared with those of the fixed-track system. Based on their analysis, the current 
proposed FRMHS can have significant advantages over the fixed-track system. 

1.3 
Routing Models 
11
 
 
Kuttolamadom et al. (2010) dealt with the path tracking and stability of motion 
of automated guided vehicle systems and wheeled mobile robots. A two degree-
of-freedom dynamic model was developed to represent the plane motion of the 
vehicle. This model along with the instantaneous posture errors (position and 
orientation errors) of the vehicle were used to formulate their path-tracking 
problem in state space format. Implementation of stability criterion and 
application of the actual physical limits of the pertinent parameters of the system 
were the strategies used to design the controller. It was shown that implementation 
of a control strategy based on the vehicles’ position and orientation errors gives 
satisfactory results in vehicles’ path tracking. The feasibility of the approach and 
the performance of the controlled system were demonstrated by using a prototype 
vehicle. 
Joseph and Sridharan (2011) focused on a simulation-based experimental study 
of the interaction among routing flexibility, sequencing flexibility and part 
sequencing rules in a typical FMS. Two scenarios were considered for 
experimentation. Three routing flexibility levels, five sequencing flexibility levels 
and four scheduling rules for part sequencing decision were considered for 
detailed investigation. The performance of the FMS was evaluated using various 
measures related to flow time and tardiness of parts. The simulation results were 
subjected to statistical analysis. The analysis of results reveals that deterioration in 
system performance can be minimized substantially by incorporating either 
routing flexibility or sequencing flexibility or both. However, the benefits of either 
of these flexibilities diminish at higher flexibility levels. Part sequencing rules 
such as earliest due date and earliest operation due date provide better 
performance for all the measures at higher flexibility levels. 
Routing flexibility is a major contributor of the flexibility of an FMS. Joseph 
and Sridharan (2011) focused on the evaluation of the routing flexibility of an 
FMS with the dynamic arrival of part types for processing in the system. A typical 
FMS configuration was chosen for detailed study and analysis. The system was set 
at five different levels of routing flexibility. Operations of part types can be 
processed on alternative machines depending upon the level of routing flexibility 
present in the system. Two cases have been considered with respect to the 
processing times of operations on alternative machines. A discrete-event 
simulation model has been developed to describe the operation of the chosen 
FMS. The performance of the system under various levels of routing flexibility 
was analyzed using measures such as mean flow time, mean tardiness, percentage 
of tardy parts, mean utilization of machines, mean utilization of automatic-guided 
vehicles, and mean queue length at machines. The routing flexibility for producing 
individual part types has been evaluated in terms of measures such as routing 
efficiency, routing versatility, routing variety and routing flexibility. The routing 
flexibility of the system has been evaluated using these measures. The flexibility 
levels were ranked based on the routing flexibility measure for the system. The 
ranking thus obtained has been validated with that derived using fuzzy logic 
approach. 
www.ebook3000.com

12 
1   Models for AGVs’ Scheduling and Routing
 
 
Nowadays, so as to adapt to the global market, where competition is getting 
tougher, firms producing through the modern production approach need to bring 
not the only performance of the system designed both during the research and 
development phase and the production phase but also the performance of the 
product to be developed as well as the process to be improved to the highest level. 
The Taguchi method is an experimental design technique seeking to minimize the 
effect of uncontrollable factors, using orthogonal arrays. It can also be designed as 
a set of plans showing the way data are collected through experiments. 
Experiments are carried out using factors defined at different levels and a solution 
model generated in ARENA 3.0 program using SIMAN, which is a simulation 
language. Many experimental investigations reveal that the speed and capacity of 
automated-guided vehicle, the capacities of local depots, and the mean time 
between shipping from the main depot are the major influential parameters that 
affect the performance criteria of the storage system. For the evaluation of 
experiment results and effects of related factors, variance analysis and signal/noise 
ratio were used and the experiments were carried out in MINITAB15 according to 
Taguchi L16 scheme. The purpose of Subulan and Cakmakci (2012) was to prove 
that experimental design was an utilizable method not only for product 
development and process improvement but it can also be used effectively in the 
design of material handling–transfer systems and performance optimization of 
automation technologies, which were to be integrated to the firms. 
Seifert et al. (1998) introduced a dynamic vehicle routing strategy based on 
hierarchical simulation. At each time a route decision has to be made, simulations 
were performed to evaluate a set of possible routes. The route with the smallest 
estimated travel time was chosen.  
Except for finding conflict free routes, attention should be paid to the presence 
of interruptions in the system. Interruptions might occur due to, for example, 
vehicle breakdowns, objects on AGV paths and manual intervention. As a result of 
interruptions, AGVs may be blocked and routes cannot be finished. Therefore, if 
an AGV encounters an interruption it has to be rerouted in such a way that no 
conflicts with other AGVs occur. Narasimhan et al. (1999) used simulation to 
analyze rerouting of AGVs. 
1.4 
Conclusions 
Summarizing, in the context of manufacturing areas, static and dynamic 
algorithms have been developed to solve the routing of vehicles. Network models, 
queuing networks, simulation and intelligent routing techniques are used to route 
AGVs conflict free through the network. The routing of AGVs through 
distribution, transshipment and transportation systems is hardly studied.  

References 
13
 
 
References 
Aized, T.: Modelling and performance maximization of an integrated automated guided 
vehicle system using coloured Petri net and response surface methods. Computers & 
Industrial Engineering 57, 822–831 (2009) 
Ashayeri, J., Gelders, L.F.: Interactive GPSS-PC Program Generator for Automated 
Material Handling Systems. International Journal of Advanced Manufacturing 
Technology 2(4), 63–77 (1987) 
Bodin, L.D., Golden, B.L., Assad, A.A., Ball, M.O.: Routing and scheduling of vehicles 
and crews: The state of the art. Computers and Operations Research 10(2), 63–211 
(1983) 
Bramel, J., Simchi-Levi, D.: On the effectiveness of set covering formulations for the 
vehicle routing problem with time windows. Operations Research 45(2), 295–301 
(1997) 
Dai, J.B., Lee, N.K.S., Cheung, W.S.: Performance analysis of flexible material handling 
systems for the apparel industry. International Journal of Advanced Manufacturing 
Technology 44, 1219–1229 (2009) 
Desrochers, M., Desrosiers, J., Solomon, M.: A new optimization algorithm for the vehicle 
routing problem with time windows. Operations Research 40(2), 342–354 (1992) 
Desrochers, M., Lenstra, J.K., Savelsbergh, M.W.P., Soumis, F.: Vehicle routing with time 
windows: Optimization and approximation. In: Golden, B.L., Assad, A.A. (eds.) 
Vehicle Routing: Methods and Studies. Studies in Management Science and Systems, 
pp. 65–84 (1988) 
Fazlollahtabar, H., Mahdavi-Amiri, N.: Producer’s behavior analysis in an uncertain 
bicriteria AGV-based flexible jobshop manufacturing system with expert system. The 
International 
Journal 
of 
Advanced 
Manufacturing 
Technology 
(2012), 
doi:10.1007/s00170-012-4283-0. 
Fazlollahtabar, H., Mahdavi-Amiri, N.: An optimal path in a bi-criteria AGV-based flexible 
jobshop manufacturing system having uncertain parameters. International Journal of 
Industrial and Systems Engineering 13(1), 27–55 (2013) 
Fazlollahtabar, H., Es’haghzadeh, A., Hajmohammadi, H., Taheri-Ahangar, A.: A Monte 
Carlo simulation to estimate TAGV production time in a stochastic flexible automated 
manufacturing system: a case study. International Journal of Industrial and Systems 
Engineering 12(3), 243–258 (2012) 
Fazlollahtabar, H., Rezaie, B., Kalantari, H.: Mathematical programming approach to 
optimize material flow in an AGV-based flexible jobshop manufacturing system with 
performance analysis. The International Journal of Advanced Manufacturing 
Technology 51(9-12), 1149–1158 (2010) 
Fisher, M.: Vehicle routing. In: Ball, M.O., Magnanti, C.L., Monma, C.L., Nemhauser, 
G.L. (eds.) Network Routing, pp. 1–33. Elsevier, Amsterdam (1995) 
Fisher, M.L., Jörnsten, K.O., Madsen, O.B.G.: Vehicle routing with time windows: Two 
optimization algorithms. Operations Research 45(3), 488–492 (1997) 
Gamberi, M., Manzini, R., Regattieri, A.: An new approach for the automatic analysis and 
control of material handling systems: integrated layout flow analysis (ILFA). 
International Journal of Advanced Manufacturing Technology 41, 156–167 (2009) 
Gans, N., Van Ryzin, G.: Dynamic vehicle dispatching: Optimal heavy traffic performance 
and practical insights. Operations Research 47(5), 675–692 (1999) 
www.ebook3000.com

14 
1   Models for AGVs’ Scheduling and Routing
 
 
Gaur, D.R., Gupta, A., Krishnamurti, R.: A 5/3-approximation algorithm for scheduling 
vehicles on a path with release and handling times. Information Processing Letters 86, 
87–91 (2003) 
Guan, X., Dai, X.: Deadlock-free multi-attribute dispatching method for AGV systems. 
International Journal of Advanced Manufacturing Technology 45, 603–615 (2009) 
Haefner, L.E., Bieschke, M.S.: ITS opportunities in port operations. In: Transportation 
Conference Proceedings, pp. 131–134 (1998) 
Hsieh, S., Lin, K.: Building AGV Traffic-Control Models With Place-Transition Nets. 
International Journal of Advanced Manufacturing Technology 6, 346–363 (1991) 
Jerald, J., Asokan, P., Prabaharan, G., Saravanan, R.: Scheduling optimization of flexible 
manufacturing systems using particle swarm optimization algorithm. International 
Journal of Advanced Manufacturing Technology 25, 964–971 (2005) 
Joseph, O.A., Sridharan, R.: Effects of routing flexibility, sequencing flexibility and 
scheduling decision rules on the performance of a flexible manufacturing system. 
International Journal of Advanced Manufacturing Technology 56, 291–306 (2011) 
Joseph, O.A., Sridharan, R.: Evaluation of routing flexibility of a flexible manufacturing 
system using simulation modelling and analysis. International Journal of Advanced 
Manufacturing Technology 56, 273–289 (2011) 
Kasilingam, R.G., Gobal, S.L.: Vehicle Requirements Model for Automated Guided 
Vehicle Systems. International Journal of Advanced Manufacturing Technology 12, 
276–279 (1996) 
Katz, Z., Bright, G.: A Guidance Technique for an Automated Guided Vehicle. 
International Journal of Advanced Manufacturing Technology 7, 198–202 (1992) 
Kelly, J.P., Xu, J.: A set-partitioning-based heuristic for the vehicle routing problem. 
Journal on Computing 11(2), 161–172 (1999) 
Kim, B., Shin, J., Chae, J.: Simple blocking prevention for bay type path-based automated 
material handling systems. International Journal of Advanced Manufacturing 
Technology 44, 809–816 (2009) 
Kim, C.W., Tanchoco, J.M.A.: Conflict-free shortesttime bidirectional AGV routing. 
International Journal of Production Research 29(12), 2377–2391 (1991) 
Kim, K., Jae, M.: An object-oriented simulation and extension for tandem AGV systems. 
International Journal of Advanced Manufacturing Technology 22, 441–455 (2003) 
Kim, K.S., Chung, B.D., Jae, M.: A design for a tandem AGVS with multi-load AGVs. 
International Journal of Advanced Manufacturing Technology 22, 744–752 (2003) 
Kizil, M., Ozbayrak, M., Papadopoulou, T.C.: Evaluation of dispatching rules for cellular 
manufacturing. International Journal of Advanced Manufacturing Technology 28, 985–
992 (2006) 
Kohl, N., Madsen, O.B.G.: An optimization algorithm for the vehicle routing problem with 
time windows based on Lagrangian relaxation. Operations Research 45(3), 395–406 
(1997) 
Kohl, N., Desrosiers, J., Madsen, O.B.G., Solomon, M.M., Soumis, F.: 2-path cuts for the 
vehicle routing problem with time windows. Transportation Science 33(1), 101–116 
(1999) 
Kolen, A.W.J., Rinnooy Kan, A.H.G., Trienekens, H.W.J.M.: Vehicle routing with time 
windows. Operations Research 35(2), 266–273 (1987) 
Kuttolamadom, M., Mehrabi, M.G., Weaver, J.: Design of a stable controller for accurate 
path tracking of automated guided vehicles systems. International Journal of Advanced 
Manufacturing Technology 50, 1183–1188 (2010) 
Laporte, G.: The vehicle routing problem: An overview of exact and approximate 
algorithms. European Journal of Operational Research 59, 345–358 (1992) 

References 
15
 
 
Maughan, F.G., Lewis, H.J.: AGV controlled FMS. International Journal of Production 
Research 38(17), 4445–4453 (2000) 
Muller, T.: Automated Guided Vehicles. IFS (Publications) Ltd./Springer-Verlag, 
UK/Berlin (1983) 
Narasimhan, R., Batta, R., Karwan, M.H.: Routing automated guided vehicles in the 
presence of interruptions. International Journal of Production Research 37(3), 653–681 
(1999) 
Sabuncuoglu, I.: A study of scheduling rules of flexible manufacturing systems: A 
simulation approach. International Journal of Production Research 36(2), 527–546 
(1998) 
Seifert, R.W., Kay, M.G., Wilson, J.R.: Evaluation of AGV routing strategies using 
hierarchical simulation. International Journal of Production Research 36(7), 1961–1976 
(1998) 
Singh, S.P., Tiwari, M.K.: Object oriented modelling and development of a dispatching 
algorithm for automated guided vehicles. International Journal of Advanced 
Manufacturing Technology 23, 682–695 (2004) 
Singh, S.P., Tiwari, M.K.: Intelligent agent framework to determine the optimal conflict-
free path for an automated guided vehicles system. International Journal of Production 
Research 40(16), 4195–4223 (2002) 
Solomon, M.M.: Algorithms for the vehicle routing and scheduling problems with time 
window constraints. Operations Research 35(2), 254–265 (1987) 
Solomon, M.M., Desrosiers, J.: Time window constrained routing and scheduling 
problems. Transportation Science 22(1), 1–13 (1988) 
Solomon, M.M., Baker, E.K., Schaffer, J.R.: Vehicle routing and scheduling problems with 
time window constraints: Efficient implementations of solution improvement 
procedures. In: Golden, B.L., Assad, A.A. (eds.) Vehicle Routing: Methods and 
Studies. Studies in Management Science and Systems, pp. 85–104 (1988) 
Srivastava, S.C., Choudhary, A.K., Kumar, S., Tiwari, M.K.: Development of an intelligent 
agent-based AGV controller for a flexible manufacturing system. International Journal 
of Advanced Manufacturing Technology 36, 780–797 (2008) 
Subulan, K., Cakmakci, M.: A feasibility study using simulation-based optimization and 
Taguchi experimental design method for material handling—transfer system in the 
automobile industry. International Journal of Advanced Manufacturing Technology 59, 
433–444 (2012) 
Van der Heijden, M., Ebben, M., Gademann, N., Van Harten, A.: Scheduling vehicles in 
automated transportation systems. OR Spectrum 24, 31–58 (2002b) 
Van der Heijden, M.C., Van Harten, A., Ebben, M.J.R., Saanen, Y.A., Valentin, E.C., 
Verbraeck, A.: Using simulation to design an automated underground system for 
transporting freight around Schiphol airport. Interfaces 32(4), 1–19 (2002a) 
Vis, I.F.A., Harika, I.: Comparison of vehicle types at an automated container terminal. OR 
Spectrum 26, 117–143 (2004) 
Yahyaei, M., Jam, J.E., Hosnavi, R.: Controlling the navigation of automatic guided vehicle 
(AGV) using integrated fuzzy logic controller with programmable logic controller 
(IFLPLC). International Journal of Advanced Manufacturing Technology 47, 795–807 
(2010) 
Yang, C.H., Choi, Y.S., Ha, T.Y.: Simulation-based performance evaluation of transport 
vehicles at automated container terminals. OR Spectrum 26, 149–170 (2004) 
Zeng, L., Wang, H.P., Jin, S.: Conflict detection of automated guided vehicles: A petri net 
approach. International Journal of Production Research 29(5), 865–879 (1991) 
www.ebook3000.com

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
17 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_2  
 
Chapter 2 
Analytical Material Flow Model for AGV 
System 
2.1 
Summary 
Manufacturing automation has become increasingly important as the need to 
remain productive increases. In manufacturing of a product, many processes may 
be needed. For example, semiconductor manufacturing may include over 400 
processing steps involving more than 100 different tools. Furthermore, the process 
route can include a high level of reentrance in which the same tool or tool types 
are used. An important aspect in manufacturing automation is material handling. 
To facilitate material handling, automated transport systems are employed. 
A special attention has been given during the last few years to the problem of 
production control in manufacturing systems (Akella et al., 1990; Gershwin, 
1989). Flow models are often used in the intermediate level to represent the 
inventory balance equation of the production system. The aim is to compute an 
average production rate for each product type in order to meet the demand with 
minimum surplus or backlogging costs. During the optimization procedure 
capacity changes due to machine failures must be taken into account. In 
(Gershwin, 1989 ), changes in the system’s capacity due to machine failure are 
described as a function of the state of the system and since machine breakdowns 
cannot be predicted, capacity is considered as a stochastic set. This means that for 
the dynamic system representing the flow of parts, a sudden change in the 
system’s state due to machine failure is transformed to a change (or a jump) for 
the capacity constraint. 
Conventional automated transport systems are used in, for example, a 
semiconductor manufacturing plant typically comprises a plurality of bays. Each 
bay includes a plurality of tools which are used to process wafers. Transport 
vehicles, such as overhead transport (OHT) are provided for automatic transfer of 
wafers contained in a carrier. A stocker which temporarily stores carriers is 
provided for each bay. A transport system controller controls the movement of 
carriers within a bay or between bays. In recent years, the automated material 
handling system has rapidly developed as an efficient manufacturing system.  
The AGV (automated guided vehicle) system plays an especially significant role 

18 
2   Analytical Material Flow Model for AGV System
 
 
and has become more widely used in modern manufacturing environments  
due to its flexibility and precision. With an AGV system, we can easily  
respond to changes in production volume, product mix, product routing and so on 
(Ho and Liao, 2009). 
However, due to the continuously increasing size and complexity of the modern 
manufacturing system, controlling this system has become more difficult. 
Consequently, various types of research have been conducted to solve this 
problem. Bozer and Srinivasan (1992) defined the conventional AGV system and 
proposed tandem configuration based on the ‘‘divide and conquer’’ principle. 
Multiple vehicles can exist in a traditional AGV system and each vehicle can pick-
up, deliver and drop off a load at any workstation. A tandem AGV system is 
obtained by partitioning all workstations into multiple zones, assuming a single 
vehicle to each zone. As a result, any potential blocking, congestion or deadlock 
does not occur. And the performance of the tandem AGV system has been 
demonstrated (Bozer and Srinivassan, 1992; Laporte et al., 2006; Asef-Vaziri  
et al., 2001; Kaspi et al., 2002). 
The emergence of high performance automated manufacturing systems (AMSs) 
has lead to the need for methods of modeling these types of system in order to 
maximize throughput, flexibility and competitiveness. AMSs belong to the 
domain of discrete event dynamic systems (DEDS) in which the evolution of the 
system depends on the complex interactions of various discrete events such as  
the arrival of raw materials, departure of finished goods, failure of equipment etc. 
The state of DEDS changes only at these discrete points in time. Over the last 
decade several models have been presented to describe DEDS and these can be 
grouped into two distinct area (Rajagopalan et al., 2004). 
Qualitative models are concerned with the logical aspects of system evolution 
such as controllability, stability and the existence of deadlocks in system 
operation, etc. This category also includes Petri Nets, extended state machines and 
finitely recursive processes (Castillo et al., 2001). 
Quantitative models are concerned with the quantitative system performance in 
terms of throughput and lead time. This category also includes discrete event 
simulation, min-max algebra, Markov Chains, stochastic Petri nets, queues, and 
queuing networks (Berman et al., 2009) . Quantitative models are a general term 
including performance modeling which is the area of interest to this article. Within 
the life cycle of an AMS various decisions are made concerning implementation, 
design and operation of the system. Typical decisions at the planning stage include 
number and type of machines, number of material handling devices, number of 
buffers, size of pallet pool and number of fixtures, best possible layout, tool 
storage capacity, evaluate candidate AMS configurations, part type selection, 
machine grouping, batching and balancing decisions, and scheduling policies 
(Huang et al., 2009) 
During the operational phase of an AMS, performance modeling can be used to 
assist decisions about how to react in the event of a breakdown, removal or 
addition of resources and parts, optimal scheduling in the event of machine failure 
www.ebook3000.com

2.2 
Statement of the Problem 
19
 
 
or sudden changes in the product or its demand and in the avoidance of unstable 
situations such as deadlocks (Demange et al., 2009). 
Performance modeling is also used in the design stage of the system. It is used 
in decisions such as whether to use central versus local storage, push production 
versus pull production, shared versus distributed resources, the effect of 
flexibility, etc. Performance predictions obtained using faithful models, can be 
used to convince customers or investors and also give the designer another 
perspective on the design enabling better designs (Aized, 2009). 
The performance of an AMS can be measured by a set of generic measures. 
These are manufacturing lead time, work in progress, throughput, machine 
utilization, capacity, flexibility, performance, and quality (Gen et al., 2009). Using 
performance measuring these values can be evaluated and used to compare AMS 
performances.  
Performance modeling has become a very important part of automated 
manufacturing system design and is equally important for maintaining the system 
at its peak of ability. The manufacturing methods in use by companies has 
changed dramatically in recent years with the use of advanced robotics and 
computer control to optimize production, this has lead to reduced prices and 
higher quality of product. The production lines can only get better with more 
modeling and investment and this is best achieved with the use of performance 
modeling. 
2.2 
Statement of the Problem 
Here, we consider a jobshop layout which employs an AGV for material handling. 
The AGV carries raw material, semi-produced and final products in batch sizes. 
Because of the increase in demands, advance in technology, and rise in the 
production capacity more shops than the existing shops are required. The new 
shops are associated with higher technology machines. Therefore, more than one 
shop with the same performance is evolved. The difference among shops with the 
same performance is machines with various specifications that effect the 
production time/ cost and productivity. As a result, the system could be a flexible 
jobshop model where multi shops of the same performance exist and each 
operation is possible to be processed on any type of machine. The sequences of 
jobs are specified and the jobs are independent.  
To evaluate the performance of the proposed AMS, we assess the material flow 
between any two shops of different types. In the proposed model the aim is to 
optimize the material flow, i.e. finding a set of shops which minimize the material 
flow throughout the system. Here, flow is considered as the distance which the 
AGV moves to satisfy the production plan and demand. The proposed model is 
presented schematically in Figure 1. 
 
 
 

20 
2   Analytical Material Flow Model for AGV System
 
 
 
 
Fig. 1 The Schematic presentation of the Proposed Model 
2.3 
Mathematical Model 
In this section the mathematical model of the proposed flexible jobshop problem is 
represented. The indices, parameters, and decision variables are as follows: 
Indices: 
m 
Index for shops,  m=1,2, … , M. 
k 
Index for shops,   k=1,2, … , K. 
n 
Index for shop type mth ,    n=1,2, … , N. 
h 
Index for shop type kth,   h=1,2, … , H. 
i 
Index for products,   i=1,2, … , I. 
p 
Index for job position,   p=1,2, … , P. 
 
 
 
www.ebook3000.com

2.3 
Mathematical Model 
21
 
 
Parameters: 
n
ipm
C
 
Completion time of product ith in position pth in shop nth of type 
mth 
n
im
T
P.
 
Processing time of shop nth of type mth for product ith 
h
nk
im
T
T.
 
Transferring time from shop nth of type mth to shop hth of type 
kthfor product ith
 
VAGV 
Velocity of AGV 
h
nk
im
f
 
Flow (distance) for product ith between shop nth of type mth and 
shop hth of type kth 
n
im
W
 
Waiting time for product ith in shop nth of type mth 
C.Ti 
Cycle Time for product ith 
T 
Total working time in each day 
⎩
⎨
⎧
=
th
th
th
ipm
p
i
m
z
position
in
product 
for 
 
allocated
 
is
 
 
shop
 
if
    
1
o.w
    
          
          
          
          
          
     
          
0
 
Decision variable: 
⎩
⎨
⎧
=
th
th
th
th
ipm
p
i
 
m
n
z
n
position
in
product 
for 
chosen 
 
is
 
 type
of
 
 
shop
 
if
    
1
o.w
   
          
          
          
      
          
          
          
0
 
Objective Function: 
h
n
h
k
im
k
p
i
H
h
K
k
N
n
M
k
m
m
P
ipm
T
T
z
z
Min
.
.
.
       
)
1
(
1
1
1
1
1
p
I
1
i
−
=
=
=
≠
=
=
=
∑∑∑∑∑∑
                             
(1) 
S.T : 
(
)
,
,
,
,
   
,
.
.
.
)
.
(
1
1
1
1
1
)
1
(
1
1
1
n
m
p
i
T
T
z
z
W
T
P
z
C
H
h
K
k
N
n
M
m
P
p
k
im
m
p
i
ipm
P
p
N
n
M
m
im
im
ipm
ipm
h
n
n
n
n
n
n
n
∀
+
+
=
∑∑∑∑∑
∑∑∑
=
=
=
=
=
−
=
=
=
   
(2)  
,
,
,
,
,
,
   
          
,
.
.
1
h
k
n
m
p
i
T
T
W
T
P
C
C
h
n
n
n
h
n
k
im
im
im
k
ip
ipm
∀
+
+
≥
−
−
        (3) 
,
,
,
      
          
          
,
1
m
p
i
z
z
ipm
N
n
ipmn
∀
=
∑
=
 
                                                   (4) 

22 
2   Analytical Material Flow Model for AGV System
 
 
,
,
,
,
   
          
,
.
.
n
m
p
i
T
C
C
z
i
ipm
ipm
n
n
∀
≤
                                                          (5) 
 ,
T
C
n
ipm ≤
                                                                                                          (6) 
,
      
          
,
.
i,k,h,m,n
V
f
T
T
AGV
k
im
k
m
h
n
h
n
∀
=
                                                        (7) 
{ }
1,0
∈
n
ipm
z
 
 
 
                                                                      (8) 
Equation (1), is the objective function of the proposed problem which 
minimizes the material flow. The output of the objective function is the types of 
the shops which minimize the total material flow. Equation (2), indicates the 
computation of completion time for each product. Equation (3), certifies that the 
differences between completion time of product ith in position pth in shop nth of 
type mth is larger than or equal to the addition of the processing time and waiting 
time of shop nth of type mth and the transferring time between shop nth of type mth 
and shop hth of type kth. Equation (4), warranties that if any shop in any position 
for any product is allocated then the corresponding shop type is also chosen. 
Equation (5), guarantees that if a shop is chosen then the corresponding 
completion time for each product is lower than or equal to the cycle time. 
Equation (6), certifies that the completion time for any product in any position in 
any shop is lower than or equal to the total working time in each day. Equation 
(7), indicates the transferring time between two shops is related directly to the 
flow of each product. Equation (8), presents the values of the decision variables.  
After finding the shops which optimize the material flow, now we analyze the 
performance of the system considering these shops. 
2.3.1 Regression Model for Performance Analysis 
Here, we consider the output of the mathematical program in last section and 
analyze the performance of the obtained shops to satisfy the demands.We want to 
estimate the coefficients which imply the capability of the obtained shops to 
satisfy the demand of the manufacturing system. We should investigate how much 
a shop is significant on the demand of the system. One way to survey the effect of 
independent variables on dependent variable is multiple linear regression model. 
Assume that Dt is the demand in time t and Xj is the maximum production rate of 
shop jth. Therefore, we consider the following equation, 
 
.
,...,
1
;
,...,
1
,
...
1
1
0
J
j
T
t
X
X
D
j
j
j
t
=
=
+
+
+
+
=
ε
β
β
β
         (9) 
 
www.ebook3000.com

2.3 
Mathematical Model 
23
 
 
where
0
β  is the intercept, 
j
β s are the coefficients for Xjs and ε  is the error term. 
The aim is first determining the value of the coefficients to see whether they are 
lower than 1 or not, and second identifying the
j
β s which are not important on 
demand (Dt). For the first objective, if the value of any coefficient is higher than 1, 
then it indicates that the corresponding shop can not satisfy the allocated demands 
with the current working time and lead to have extra working time. For the second 
objective, we apply two-sided hypothesis testing as follows; 
 
.0
:
;0
:
1
0
≠
=
j
j
H
H
β
β
  
 
 
                                                    (10) 
 
The test of the null hypothesis H0 against the two sided alternative proceeds as 
in the three steps. The first is to compute the standard error of 
j
β ,
)
(
j
SE β
. The 
standard error of 
j
β  is an estimator of 
j
β
σ
, the standard deviation of the 
sampling distribution of 
j
β .  
2
1
2
1
2
2
2
)
(
1
)
(
2
1
1
⎥
⎦
⎤
⎢
⎣
⎡
−
−
×
−
×
=
∑
∑
=
=
m
j
j
m
j
j
j
r
r
m
r
r
m
m
j
ε
σ β
,  
                                      (11) 
 
2
)
(
j
j
SE
β
σ
β
=
. 
 
                                                                  (12) 
 
Although the formula for 
2
j
β
σ
is complicated, in applications the standard error 
is computed by regression software. The second step is to compute the t-statistic,  
 
)
(
0
j
j
SE
t
β
β −
=
 
 
 
                                                                 (13) 
The third step is to compute the p-value, the probability of observing a value of 
j
β  at least as different from zero as the estimate actually computed (
act
j
β
), 
assuming that the null hypothesis is correct. Stated mathematically, 
 

24 
2   Analytical Material Flow Model for AGV System
 
 
[
]
)
(
Pr
)
(
0
)
(
0
Pr
0
0
Pr
value
0
0
0
act
H
j
act
j
j
j
H
act
j
j
H
t
t
SE
SE
p
>
⇒
⎥
⎥
⎦
⎤
⎢
⎢
⎣
⎡
−
>
−
⇒
−
>
−
=
−
β
β
β
β
β
β
,(14) 
where
0
PrH denotes the probability computed under the null hypothesis, the second 
equality follows by dividing by 
)
(
j
SE β
, and 
act
t
is the value of the t-statistic 
actually computed. Because
j
β  is approximately normally distributed in large 
samples, under the null hypothesis the t-statistic is approximately distributed as a 
standard normal random variable, so in large samples, 
 
)
(
2
)
Z
Pr(
value
act
act
t
t
p
−
Φ
=
>
=
−
, 
 
 
          (15) 
 
A small value of the p-value, say less than 5%, provides evidence against the 
null hypothesis in the sense that the chance of obtaining a value of 
j
β  by pure 
random variation from one sample to the next is less than 5% if, in fact, the null 
hypothesis is correct. If so, the null hypothesis is rejected at the 5% significance 
level. Simply we can reject the null hypothesis at the 5% significance level if, 
96
.1
>
act
t
. Therefore, if the hypothesis is accepted then we find that the 
corresponding coefficient is not important and has no effect on the demand. 
After describing the aspects of the proposed model for this type of flexible 
jobshop automated manufacturing system, a numerical illustration is provided in 
the next section.  
2.4 
Conclusions 
In this chapter a new model in a flexible jobshop automated manufacturing 
systems has been proposed. The innovation is in the multi shops of the same 
performance, but different specification. The proposed flexible jobshop model is 
associated with an AGV for material handling. The mathematical model is 
identifying the optimal material flow amongst the shops with respect to job 
sequence, cycle time, and AGV capability constraints. Also a performance 
analysis has been worked out on the selected shops to consider their capability for 
satisfying demands. The numerical illustrations indicate the applicability and 
efficiency of the proposed approaches to investigate the proposed problem. 
www.ebook3000.com

References 
25
 
 
References 
Aized, T.: Modelling and performance maximization of an integrated automated guided 
vehicle system using coloured Petri net and response surface methods. Computers & 
Industrial 
Engineering 
(2009) 
(article 
in 
press, 
corrected 
proof), 
doi:10.1016/j.cie.2009.02.009 
Akella, R., Krogh, B.H., Singh, M.R.: Efficient computation of coordinatingncontrols in 
hierarchical structures for failure-prone multi-cell flexible assembly systems. IEEE 
Trans. Robotics and Automation 6, 659–672 (1990) 
Asef-Vaziri, A., Dessouky, M., Sriskandarajah, C.: A loop material flow system design for 
automated guided vehicles. Int. J. Flex. Manuf. Sys. 13, 33–48 (2001) 
Berman, S., Schechtman, E., Edan, Y.: Evaluation of automatic guided vehicle systems. 
Robotics and Computer-Integrated Manufacturing 25(3), 522–528 (2009) 
Bozer, Y.A., Srinivasan, M.M.: Tandem configuration for automated guided vehicle 
systems and the analysis of single vehicle loops. IIE Trans. 23, 72–82 (1991) 
Bozer, Y.A., Srinivasan, M.M.: Tandem AGV systems: a partitioning algorithm and 
performance comparison with conventional AGV systems. Eur. J. Operat. Res. 63, 173–
191 (1992) 
Castillo, I., Reyes, S.A., Peters, B.A.: Modeling and analysis of tandem AGV systems 
using generalized stochastic Petri nets. Journal of Manufacturing Systems 20(4), 236–
249 (2001) 
Demange, M., Ekim, T., de Werra, D.: A tutorial on the use of graph coloring for some 
problems in robotics. European Journal of Operational Research 192(1), 41–55 (2009) 
Gen, M., Lin, L., Zhang, H.: Evolutionary techniques for optimization problems in 
integrated manufacturing system: State-of-the-art-survey. Computers & Industrial 
Engineering 56(3), 779–808 (2009) 
Gershwin, S.B.: Hierarchical flow control: a framework for scheduling and planning 
discrete events in manufacturing systems. Proceedings of the IEEE 77, 195–209 (1989) 
Ho, Y.C., Liao, T.W.: Zone design and control for vehicle collision prevention and load 
balancing in a zone control AGV system. Computers & Industrial Engineering 56(1), 
417–432 (2009) 
Huang, Y., Liang, C., Yang, Y.: The optimum route problem by genetic algorithm for 
loading/unloading of yard crane. Computers & Industrial Engineering 56(3), 993–1001 (2009),  
Kaspi, M., Kesselman, U., Tanchoco, J.M.A.: Optimal solution for the flow path design 
problem of a balanced unidirectional AGV system. Int. J. Prod. Res. 40, 349–401 (2002) 
Laporte, G., Zanjirani Farahani, R., Miandoabchi, E.: Designing an efficient method for 
tandem AGV network design problem using tabu search. Applied Mathematics and 
Computation (2006) 
Rajagopalan, S., Heragu, S.S., Taylor, G.D.: A Lagrangian relaxation approach to solving 
the integrated pick-up/drop-off point and AGV flow path design problem. Appl. Math. 
Model. 28, 735–750 (2004) 

 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
27 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_3 
 
Chapter 3 
Nonlinear Stochastic Model for AGV System 
3.1 
Summary 
Advanced automated manufacturing systems are widely used in industrial 
companies where productivity objectives have to be met. These systems often 
being costly, they must be designed to be as efficient as possible. Here, we focus 
on automated manufacturing systems in a job shop layout considering automated 
guided vehicle as a material handling resource. The key issue in manufacturing 
operations is how to produce high quality products at low costs in such a way that 
the diversified demand are met. Hence, modern manufacturing companies should 
become as responsive as possible in order to satisfy customer demands.  
Material handling accounts for 30–75% of the total cost of a product, and 
efficient material handling can result in reducing the manufacturing system 
operations cost by 15–30% (Sule, 1994). These points underscore the importance 
of material handling costs reduction as a key element in improving the cost 
structure of a product. The determination of a material handling system involves 
both the selection of suitable material handling equipment and the assignment of 
material handling operations to each individual piece of equipment. Hence, 
material handling system selection can be defined as the selection of material 
handling equipment to perform material handling operations within a working area 
considering all aspects of the products to be handled (Rau and Liu, 2006).The 
material handling system plays a crucial role in automated manufacturing systems. 
When inadequately designed, the material handling system indeed can adversely 
affect the overall performance of the system and lead to substantial losses in 
productivity and competitiveness, and to unacceptably long lead times. Thus, to 
avoid such pitfalls, material handling system design must be integrated into the 
overall design of the manufacturing system centering on the selection of machines 
and the allocation of operations to the machines (Gholipour-Kanani at al., 2011). 
Automated manufacturing systems (AMSs), equipped with several CNC 
machines and an AGV-based material handling system, are designed and 
implemented to secure automation and gain efficiency of production. To achieve 
these benefits, the planning in the AMS decision making process is critical 
because the planning decision has an influence on the subsequent decision 
www.ebook3000.com

28 
3   Nonlinear Stochastic Model for AGV System
 
processes such as scheduling, dispatching, etc. Planning in automated 
manufacturing systems can be characterized to be online and short-term in order to 
respond to frequently changing production orders. Given a production order, the 
manufacturing planning function is responsible for establishing a plan by 
decomposing the production task into a set of subtasks (Azadeh and Anvari, 
2009).Subtasks are classified into two types for material processing and delivery. 
To pursue a global optimization of material processing and transportation cost, a 
manufacturing plan should consider the two costs simultaneously. Moreover, to 
obtain a better solution for subsequent decision making processes, not only total 
workloads are evenly distributed among the workstations, but workloads are well 
balanced among AGV’s network segments.  
The manufacturing industry is presently being much affected by the structural 
changes caused by the internal and external factors in an enterprise. The market 
conditions are becoming more dynamic, more global, and more customer-driven. 
The manufacturing performance is no longer driven merely by the product price; 
instead, other competitive factors such as automation, quality, delivery, and 
customer service have become equally important. The demand of the customer for 
tailored product has caused a shorter product life, reduced batch quantities and 
increased product varieties. 
Manufacturing firms need to give prominence to issues such as reduction of 
manufacturing lead time and have flexibility to adapt to changes in the market. 
The improvement in productivity and reduction of costs of goods and services has 
become a key element for maintaining the market share.Operations management 
in an AMS is more complex than that of the conventional manufacturing systems. 
Managing an AMS demands for more decisions for its effective performance as 
compared to a transfer line or a job shop production system. The optimal selection 
of machines and tools and the assignment of part operations to the selected 
machines turn out to be difficult tasks for the production planner. This is due to 
the versatile machine tools capable of performing many different operations 
resulting in many alternative routes for a part type, and due to system capability 
for processing of the parts concurrently (Stecke, 1983). 
Chan (1999) discussed the effects of universal loading station along with 
operational control rules. Rajagopalan (1986) presented a formulation and 
heuristic solution for the part grouping and tool loading in AMS. Ram et al. (1986) 
developed a model and a solution procedure for the machine loading and tool 
allocation problem in an AMS. Lashkari et al. (1987) extended the formulation of 
the operation allocation problem to include the aspects of refixturing and limited 
tool availability. Kusiak (1985), Stecke and Morin (1985), Singhal et al. (1987) 
and van Looveren et al. (1993) addressed the interrelationship of various decisions 
and their hierarchies in AMS. Kim and Yano (1993) presented a number of 
heuristic approaches for loading problems in automated manufacturing systems. 
Kim and Yano (1994) also presented a model for the loading problem in AMS 
with unequal workload targets across machine groups, and demonstrated how an 
existing branch-and-bound algorithm for the workload balancing objective may be 
used to solve the model. Stecke and Raman (1994) presented a queuing network 

3.2 
Statement of the Problem 
29
 
production planning model to determine the optimal machine workload 
assignments in an AMS. Liang (1994) proposed a two stage approach to the joint 
problem of part selection, machine loading, and machine speed selection problem 
in AMS. In the first stage, the mathematical model solves the part selection and 
machine loading problem, whereas in the second stage, it determines the optimal 
cutting speed for all job–tool–machine combinations. 
A wide spectrum of multi-objective loading problems by combining two or 
more criteria has been addressed in literature (Swarnkar and Tiwari, 2004; Chan et 
al., 2004). However, considering the multi-objective problems, some of the 
objectives turn out to be contradictory in various situations, while for others, they 
may equally be applicable. When the machines are not pooled into groups, the 
loading objective used most commonly is balancing the workload on all the 
machines. It is established that this objective maximizes the expected production 
(Stecke and Morin, 1985). The mixed-integer programming (MIP) approach for 
solving the machine loading problem is shown to be computationally infeasible 
even for deterministic formulation. 
Here, considering the stochastic nature of the proposed problem parameters, a 
stochastic programming approach is applied to optimize production time and cost 
in an automated manufacturing system.  
3.2 
Statement of the Problem 
In our proposed model, it is assumed that a manufacturing system equipped with 
an AGV for material handling purposes is designed in a job shop layout. The 
AGV would receive the raw material and start visiting the shops to complete the 
production cycle. In each shop, one part of the product is processed and at the 
final shop the complete product is ready to be carried to the warehouse.  
The configuration of the proposed model is represented in Figure 1. 
 
 
Fig. 1 Configuration of the proposed model 
www.ebook3000.com

30 
3   Nonlinear Stochastic Model for AGV System
 
The AGV should wait until the processing of a job is finished in a shop and 
then move the semi-produced product to the next shop. Therefore, due to the 
processing conditions in a shop, the waiting time in a shop is not deterministic and 
is therefore supposed to be stochastic. While a job is processing on a machine, the 
machine may break down. Due to the stochastic nature of the failure, the 
breakdown cost is not known. Also, the semi-produced products carried by AGV 
may be damaged during traveling between shops, but the rate is not deterministic 
and thus is considered to be stochastic. 
Considering these assumptions, we are confronted with a stochastic model. The 
distributions of the stochastic items are assumed to be normal or can be 
appropriately estimated by normal distributions. In the next section, the 
mathematical model of the proposed problem is given. 
3.3 
Mathematical Model 
Note that some parameters are stochastic, based on the nature of the problem. 
Therefore, the stochastic parameters are presented using the corresponding 
expected value and variance. As a result, the following nonlinear deterministic 
mathematical model is configured. As mentioned before, the aim is to optimize 
production time and cost simultaneously. Hence, the model is multi-objective. The 
notations needed for the model are indicated below. 
 
Indices: 
i 
Number of shops;          i=1,2,…,I 
j 
Type of machines;         j=1,2,…,J. 
 
Notations: 
 
 
Cd 
Defect cost  
Co 
Operational cost of AGV 
itC  
Tool cost in the ith shop 
jb
C
 
Breakdown cost for jth machine 
jpt
 
Job processing time on jth machine 
ij
wt
 
Waiting time in ith shop for jth machine 
tm 
Material handling time 
tc 
Cycle time 
β  
Upper limit for defect rate  
B1 
Available budget for AGV 

3.3 
Mathematical Model 
31
 
B2 
Available budget for tool 
Di 
Demand for ith shop
Mi 
Number of machines in ith shop 
N 
Number of jobs 
E(.) 
Expected value of a parameter 
Var(.) 
Variance of a parameter 
ZP 
Standard normal value for percentile P. 
 
Decision variables: 
Xij 
Number of produced products in ith shop by jth machine 
 
 
Objective function 1 (cost minimization): 
,)
(
)
(
)
)
(
(
))
(
(
)
)
(
(
)
)
(
(
   
1
1
1
2
1
1
1
1
1
2
1
1
∑
∑∑
∑
∑∑
∑∑
∑∑
=
=
=
=
=
=
=
=
=
=
×
+
×
+
×
×
+
×
+
×
J
j
J
j
I
i
ij
d
P
I
i
ij
d
J
j
I
i
ij
t
o
J
j
I
i
ij
b
P
J
j
I
i
ij
b
X
C
Var
Z
X
C
E
X
C
C
X
C
Var
Z
X
C
E
Min
i
j
j
        
(1) 
 
Objective function 2 (time minimization): 
∑∑
∑∑
∑∑
=
=
=
=
=
=
×
+
×
+
×
×
J
j
I
i
ij
w
P
J
j
I
i
ij
w
J
j
I
i
ij
p
m
X
t
Var
Z
X
t
E
X
t
t
Min
ij
ij
j
1
1
2
1
1
1
1
)
)
(
)
)
(
))
(
(
   
,        (2) 
 
Constraints: 
,)
(
)
(
)
)
(
)
)
(
(
))
(
(
1
1
1
1
1
1
2
1
1
1
1
∑∑
∑∑
∑∑
∑∑
∑∑
=
=
=
=
=
=
=
=
=
=
×
≤
×
+
×
+
×
+
×
×
J
j
I
i
ij
c
J
j
I
i
ij
m
J
j
I
i
w
P
J
j
I
i
ij
w
J
j
I
i
ij
p
X
t
X
t
X
t
Var
Z
X
t
E
X
t
N
ij
ij
ij
j
         
(3) 
 
1
1
1
B
X
C
J
j
I
i
ij
o
≤
×∑∑
=
=
,                                                                                          (4) 
 
β
≤
×
+
×
∑∑
∑∑
=
=
=
=
J
j
I
i
d
P
J
j
I
i
ij
d
ij
X
C
Var
Z
X
C
E
1
1
2
1
1
)
(
)
(
)
)
(
(
,                         (5) 
 
 
www.ebook3000.com

32 
3   Nonlinear Stochastic Model for AGV System
 
∑∑
=
=
≤
×
J
j
I
i
i
ij
t
B
M
X
C
i
1
2
1
,  
                                                                      (6) 
,
1∑
=
≥
J
j
i
ij
D
X
i=1,2,…,I,  
 
 
 
                           (7) 
integer
0,
≥
ij
X
 ,    i=1,2,…,I,   j=1,2,…,J. 
 
                           (8) 
 
The formula in (1) is the first objective function, the total cost of production, 
which is to be minimized. Formula (2) is the second objective function, the total 
time of manufacturing, which is also to be minimized. Inequality (3) confines the 
total production time to the cycle time. Inequality (4) considers the limitation of 
operational budget for AGVs. Inequality (5) represents a constraint for desirable 
defect rate. Inequality (6) indicates that the available budget for tools in the system 
is limited. The Inequalities (7) certify that the demands of the shops are covered. 
The constraints (8) ensure the nonnegativity and integrality of the variables. 
Since the proposed model is nonlinear, we apply a linear approximation method 
for optimization.   
3.3.1 Successive Linear Programming Approach 
Successive Linear Programming (SLP) algorithms solve nonlinear optimization 
problems via a sequence of linear programs. They have been widely used, 
particularly in the oil and chemical industries, beginning with their introduction by 
Griffith and Stewart of Shell Development Company in 1961 (Griffith and 
Stewart, 1961). As the name implies, the method uses linear programming as a 
search technique. A starting point is selected as an initial estimate of the solution, 
and the nonlinear model and constraints are linearized at this point to give a linear 
problem which can be solved by the simplex method or its variations. The solution 
of the linear programming problem is used to construct a new estimate of the 
solution of the original problem, and the process is continued until a stopping 
criterion is met. As shown by Reklaitis et al. (1983), this procedure works, with no 
need for safeguards, when problems are mildly nonlinear. However, it is necessary 
to bound the steps taken in the iterations to insure that the model solution estimate 
improves, the values of the independent variables remain in the feasible region 
and the process converges to an optimal point. These safeguards are bounds on the 
independent variables specified in advance for solving the linear programming 
problem. The net result is that the bounds are additional constraints. If the bounds 
are set too small, then the process proceeds slowly toward a solution. If they are 
set too large, then infeasible solutions may be generated. Consequently, 
precautionary steps are incorporated into computer programs to expand the bounds 
when slow progress is detected and shrink them when the solution estimates do 
 

3.3 
Mathematical Model 
33
 
not seem to be improving much in successive iterations, while being far from a 
stationary point. Now, the general nonlinear optimization problem can be written 
as:  
 
Optimize:     y(x),                                           
 
                           (9) 
 
s.t.   fi(x) < bi,           i = 1, 2, ...,m, 
       
j
j
j
u
x
l
≤
≤
,         j = 1, 2, ...,n, 
 
where upper and lower limits are shown specifically on the independent variables. 
In a general step k, the model y(x) and the constraints fi(x) are linearized at xk to 
give: 
Optimize:  
)
(
1
k
n
j
j
j
x
y
x
c
z
+
Δ
= ∑
=
,  
 
                         (10) 
s.t. 
∑
=
≤
+
Δ
n
j
i
k
i
j
ij
b
x
f
x
a
1
)
(
, 
i=1,2,…,m, 
 
j
j
k
j
j
u
x
x
l
≤
Δ
+
≤
,   j=1,2,…,n, 
where, 
 
j
k
j
x
x
y
c
∂
∂
=
)
(
,  
j
k
i
ij
x
x
f
a
∂
∂
=
)
(
.  
The problem (10) is now a linear programming one, but the values of Δxj can take 
on either positive or negative values. To have the linear program the standard 
nonnegativity imposition on the variables Δxj, a change of variables was made by 
Griffith and Stewart (1961) as follows:  
−
+
Δ
−
Δ
=
Δ
j
j
j
x
x
x
, 
 
 
 
 
 
          (11) 
 
where,  
⎩
⎨
⎧
<
Δ
≥
Δ
Δ
=
Δ
+
0
if
,
0
0
if
,
j
j
j
j
x
x
x
x
 
⎩
⎨
⎧
>
Δ
≤
Δ
Δ
−
=
Δ
−
.0
if
,
0
0
if
,
j
j
j
j
x
x
x
x
 
 
 
 
www.ebook3000.com

34 
3   Nonlinear Stochastic Model for AGV System
 
Substituting (11) into (10), the linear programming problem has then the form: 
Optimize: 
)
(
1
1
k
n
j
n
j
j
j
j
j
x
y
x
c
x
c
+
Δ
−
Δ
∑
∑
=
=
−
+
, 
 
                         (12) 
s.t. 
)
(
1
1
k
i
n
j
n
j
i
j
ij
j
ij
x
f
b
x
a
x
a
∑
∑
=
=
−
+
−
≤
Δ
−
Δ
, 
i=1,2,…,m, 
 
)
(
k
j
j
j
j
x
u
x
x
−
≤
Δ
−
Δ
−
+
, 
)
(
k
j
j
j
j
x
l
x
x
−
≥
Δ
−
Δ
−
+
,   
 
j=1,2,…,n, 
,0
,
≥
Δ
Δ
−
+
j
j
x
x
  
 
 
j=1,2,…,n. 
 
The upper and lower limit bounds on the variables are specified by (
k
j
j
x
u −
) and 
(
k
j
j
x
l −
). The value of the next solution estimate for linearization is then defined 
to be 
1
+
k
jx
= 
−
+
Δ
−
Δ
+
j
j
k
j
x
x
x
, where the Δxj
+ and Δxj¯   are obtained as the 
solution of (12). The procedure is started by specifying a starting point x0(k=0). 
We note that the values of the bounds uj and lj may affect the rate of convergence 
of the algorithm. To obtain an optimization algorithm using the SLP, we need 
some preliminaries. 
Let 
*.  and .  be two arbitrary norms in 
n
ℜ. It is well known that there are 
positive constants c1and c2 such that for all 
n
x
ℜ
∈
, 
 
*
2
*
1
x
c
x
x
c
≤
≤
. 
 
 
                                                     (13) 
Note that for every 
X
x ∈
 and
0
>
r
 (r is called the trust region radius), the 
following inclusions hold: 
{
} {
} {
}
r
c
h
X
h
x
h
r
h
X
h
x
h
r
c
h
X
h
x
h
2
*
1
,
,
,
≤
∈
+
⊆
≤
∈
+
⊆
≤
∈
+
.(14) 
For 
X
x ∈
and 
0
>
r
, consider the following problem: 
 
,
,
s.t.
)
(
min
:)
,
(
*
r
h
X
h
x
h
x
f
r
x
LP
T
≤
∈
+
∇
 
 
 
 
 
          (15) 
 

3.3 
Mathematical Model 
35
 
where,
)
(x
f
∇
 is a column vector composed of the partial derivations of  f at x. 
Clearly, when 
*.  is a polyhedral norm and X is a polyhedral set, LP(x,r) is a 
linear programming problem. Denote H*(x,r) and v*(x,r) as the solution set and the 
optimal value of LP(x,r), respectively. The inclusions (14) imply that 
 
)
,
(
)
,
(
)
,
(
1
*
2
r
c
x
v
r
x
v
r
c
x
v
≤
≤
,  
 
 
                         (16) 
 
for every 
X
x ∈
 and  
0
≥
r
.  
 
Lemma 1. For every 
X
x ∈
and  
0
>
r
, we have: 
0
)
,
(
*
stat
=
⇔
∈
r
x
v
X
x
, 
where, 
stat
X
 is a stationary set. 
 
In order to justify the technique being used to update the trust region radius, we 
need a simple technical result as given next. 
 
Lemma 2. For every
0
>
δ
 and
stat
\ X
X
x∈
, there exist τ and ρ , with
ρ
τ <
<
0
, such that the following properties hold: 
(i)
[
)
2
*
2
)
(
)
(
),
,
(
,
,
r
h
x
f
x
f
r
x
H
h
r
δ
ρ
≤
+
−
∈
∀
∞
∈
∀
. 
(ii)
[
]
2
*
2
)
(
)
(
),
,
(
,
,0
r
h
x
f
x
f
r
x
H
h
r
δ
τ
≥
+
−
∈
∀
∈
∀
. 
 
Proof   let 
0
>
δ
and 
stat
\ X
X
x∈
. 
Proof for (i). Define 
(
)
opt
1
)
(
2
:
f
x
f
−
=
−
δ
ρ
 so that for all
[
)
∞
∈
,
ρ
r
,  
2
2
opt
2
2
)
(
)
(
)
(
r
f
x
f
h
x
f
x
f
δ
ρ
δ
≤
=
−
≤
+
−
. 
                         (17) 
 
Proof for (ii). Let 
1
2
2
2
1
)
(
2
:
−
−
+
=
δ
Lc
c
a
, so that there exists 
0
>
τ
 with 
−
≤a
c
x
a
)
,
(
1
0
τ
. Take an arbitrary 
]
,0
(
−
∈
r
r
and 
)
,
(
*
r
x
H
h ∈
. Then, 
−
≤
≤
a
c
x
a
r
c
x
a
)
,
(
)
,
(
1
0
1
0
τ
, 
 
 
                                       (18) 
 
www.ebook3000.com

36 
3   Nonlinear Stochastic Model for AGV System
 
and 
2
2
1
2
1
1
0
1
)
(
)
,
(
1
)
,
(
r
a
c
r
c
r
c
x
a
r
c
x
v
−
−
≤
−
≤
. 
                                       (19) 
It follows from (16) and (18) that 
2
2
1
1
*
)
,
(
)
,
(
),
(
r
a
c
r
c
x
v
r
x
v
h
x
f
−
−
≤
≤
=
∇
. 
 
                         (20) 
Therefore, by (17), 
.
2
2
2
1
2
2
2
),
(
)
(
)
(
2
2
2
2
2
1
2
2
2
2
2
1
2
*
2
2
2
2
1
2
r
r
Lc
a
c
r
Lc
r
a
c
h
Lc
r
a
c
h
L
h
x
f
x
f
h
x
f
δ
−
=
⎟
⎟
⎠
⎞
⎜
⎜
⎝
⎛
−
−
=
+
−
≤
+
−
≤
+
∇
≤
−
+
−
−
−
      
(21) 
We now state the main algorithm. The parameter k counts the number of 
iterations, while 
k
μ  represents the number of subproblems solved at the kth 
iteration. 
 
Algorithm SLP: Successive Linear Programming for Nonlinear Optimization  
 
Parameters: 
.1
0
,0
, *
<
<
>
θ
δ r
 
Input:  
Choose 
X
x ∈
1
. 
Step 0:  
 (Initialization): Set k:=0, rk :=r*, kstop:= ∞. 
Step 1: 
Set k:=k+1, 
1
:=
μ
, r:=rk-1. Solve the problem LP(xk,r) to 
obtain a solution 
)
,
(
)
,
(
*
r
x
H
r
x
h
k
k
∈
. Set  
 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
<
−
≠
≥
−
≠
−
=
∇
=
=
.
2
))
,
(
,
(
)
(
 
and
0
)
,
(
 
if
,1
,
2
))
,
(
,
(
)
(
 
and
0
)
,
(
 
if
,1
,0
)
,
(
),
(
)
,
(
 
if
,0
:
2
*
*
2
*
*
*
*
r
r
x
h
x
f
x
f
r
x
v
r
r
x
h
x
f
x
f
r
x
v
r
x
h
x
f
r
x
v
v
k
k
k
k
k
k
k
k
k
k
k
δ
δ
 
 
If v=0 then set kstop=k, 
k
k
x
x
=
stop
 and return. 
 
Step 2: 
Set 
1
:
+
= μ
μ
and 
v
r
r
θ
=
:
. Solve the problem LP(xk,r) to 
obtain a solution 
)
,
(
)
,
(
*
r
x
H
r
x
h
k
k
∈
. 

3.4 
Conclusions 
37
 
Step 3: 
If (
1
−
=
v
and 
2
*
2
))
,
(
,
(
)
(
r
r
x
h
x
f
x
f
k
k
k
δ
<
−
) or (v=1 and 
2
*
2
))
,
(
,
(
)
(
r
r
x
h
x
f
x
f
k
k
k
δ
≥
−
) then go to Step 4, else go to 
Step 2. 
Step 4: 
If 
1
−
=
v
 then set 
r
rk
θ
=
, else set 
r
rk =
. Let 
μ
μ =
k
 and 
)
,
(
*
1
k
k
k
k
r
x
h
x
x
+
=
+
 and go to Step 1. 
 
Note that is Step 1, the parameter v can take on one of three values. If v=0, then a 
stationary point has been found and the algorithm terminates. If v=1, then 
sufficient decrease was not achieved and thus the subproblem needs to be resolved 
with a smaller value of r. If 
1
−
=
v
, then sufficient decrease was achieved, but 
the subproblem is solved again, this time with a larger value of r. Both of these 
resolves take place in Step 2. If the algorithm terminates after a finite number of 
iterations, then we can define the iterate
stop
kx
 as the approximate solution for the 
problem. We apply the proposed SLP algorithm to solve some numerical 
experiments.   
3.4 
Conclusions 
A new model for automated manufacturing systems was proposed. Material 
handling was performed via AGV and the manufacturing system was considered 
to be a jobshop. The novelty of our approach is in our consideration of the 
stochastic nature of parameters and our use of stochastic programming. The 
mathematical model is a nonlinear bi-objective one, which considers both time 
and cost minimization. We first applied a successive linear programming 
technique for optimizing the nonlinear model. Numerical test results showed the 
linear optimization approach to be slow for large size problems, and thus 
presented a genetic algorithm (GA) for solving large size problems. We finally 
analyzed the differences of the solutions obtained by LINGO and GA using test of 
hypothesis. We concluded that there was a significant difference between 
LINGO's and GA's obtained solutions and that their performance was not the same 
due to variety in the problem size. For small and medium sized problems, LINGO 
was shown to be efficient enough to provide accurate solutions but for larger sized 
problems, we observed that the GA was successfully effective in finding good 
solutions. 
www.ebook3000.com

38 
3   Nonlinear Stochastic Model for AGV System
 
References  
Azadeh, A., Anvari, M.: Implementation of Multivariate Methods as Decision Making 
Models for Optimization of Operator Allocation by Computer Simulation in CMS. 
Journal of the Chinese Institute of Industrial Engineers 26(4), 316–325 (2009) 
Chan, F.T.S.: Evaluations of operational control rules in scheduling a flexible 
manufacturing system. Robot Computer Integrated Manufacturing 15, 121–132 (1999) 
Chan, F.T.S., Swarnkar, R., Tiwari, M.K.: A random search approach to the machine 
loading problem of an FMS. Presented at 19th IEEE International Symposium on 
Intelligent Control, Taipei, Taiwan, pp. 152–161 (2004) 
Eren, T.: A multicriteria flowshop scheduling problem with setup times. Journal of 
Materials Processing Technology 186(1-3), 60–65 (2007) 
Eren, T., Guner, E.: A bicriteria flowshop scheduling problem with setup times. Applied 
Mathematics and Computation 183(2), 1292–1300 (2006) 
Eren, T., Guner, E.: Setup times with a learning effect in flowshop scheduling problem. 
Journal of the Faculty of Engineering and Architecture of Gazi University 22(2), 353–
362 (2007) 
Gholipour-Kanani, Y., Tavakkoli-Moghaddam, R., Khorrami, A.: Solving a multi-criteria 
group scheduling problem for a cellular manufacturing system by scatter search. Journal 
of the Chinese Institute of Industrial Engineers 28(3), 192–205 (2011) 
Griffith, R.E., Stewart, R.A.: A nonlinear programming technique for the optimization of 
continuous processing systems. Management Science 7, 379–395 (1961) 
Hsu, Y.S., Lin, B.N.T.: Minimizing of maximum lateness under linear deterioration. 
Omega 31, 459–469 (2003) 
Kim, Y.D., Yano, C.A.: A heuristic approach for loading problems in flexible 
manufacturing systems. IIE Trans. 25, 26–39 (1993) 
Kim, Y.D., Yano, C.A.: A new branch and bunch algorithm for loading problems in 
flexible manufacturing system. Int. J. Flexible Manuf. Systems 6, 361–382 (1994) 
Kusiak, A.: Loading models in flexible manufacturing systems. In: Raouf, A., Ahmed, S.H. 
(eds.) Manufacturing Research and Technology-1, pp. 78–93. Elsevier, Amsterdam 
(1985) 
Lashkari, R.S., Dutta, S.P., Padhye, A.M.: A new formulation of the operation allocation 
problem in flexible manufacturing systems: mathematical modelling and computational 
experience. Int. J. Prod. Res. 25, 1367–1383 (1987) 
Liang, M.: Integrating machining speed part selection and machine loading decisions in 
flexible manufacturing systems. Comput. Ind. Eng. 26, 599–608 (1994) 
Rajagopalan, S.: Formulation and heuristic solution for part grouping and tool loading in 
flexible manufacturing systems. In: Stecke, K., Suri, R. (eds.) Proceedings of the Second 
ORSA/TIMS Conference on Flexible Manufacturing Systems, pp. 311–320. Elsevier, 
Amsterdam (1986) 
Ram, B., Sarin, C.C.S.: A new branch and bound algorithm for loading problems in flexible 
manufacturing system. Int. J. Prod. Res. 25, 1081–1094 (1986) 
Rau, H., Liu, C.-K.: The Optimal Combination of Postponement Operations in a Supply 
Chain. Journal of the Chinese Institute of Industrial Engineers 23(3), 253–261 (2006) 
Reklaitis, G.V., Ravindran, A., Ragsdell, K.M.: Engineering Optimization, Methods and 
Applications. John Wiley and Sons, Inc., New York (1983) 
 

References 
39
 
Shirazi, B., Fazlollahtabar, H., Sahebjamnia, N.: Minimizing Arbitrary Earliness/Tardiness 
Penalties with Common Due Date in Single-Machine Scheduling Problem Using a 
Tabu-Geno-Simulated Annealing. Materials and Manufacturing Processes 25(6), 515–
525 (2010) 
Singhal, K., Fine, C.H., Meredith, J.R., Suri, R.: Research and models for automated 
manufacturing. Interfaces 17, 5–14 (1987) 
Stecke, K.E.: Formulation and solution of nonlinear integer production planning problem 
for flexible manufacturing system. Manage. Sci. 29, 273–288 (1983) 
Stecke, K.E., Morin, T.L.: The optimality of balancing workload in certain types of flexible 
manufacturing system. Eur. J. Oper. Res. 20, 68–82 (1985) 
Stecke, K.E., Raman, N.: Production planning decision in flexible manufacturing systems 
with random material flow. IIE Trans. 26, 2–17 (1994) 
Sule, D.R.: Manufacturing Facilities: Location, Planning, and Design. PWS, Boston (1994) 
Swarnkar, R., Tiwari, M.K.: Modelling machine loading problem of FMSs and its solution 
methodology using a hybrid tabu search and simulated annealing based heuristic 
approach. Robot Comput. Integrated Manuf. 20, 199–209 (2004) 
Van Looveren, A.I., Gelders, J.L.F., van Wassenhove, L.N.: A review of FMS planning 
models. In: Kusiak, A. (ed.) Modelling and Design of Flexible Manufacturing System, 
pp. 3–31. Elsevier, Amsterdam (1986) 
 
 
www.ebook3000.com

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
41 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_4 
 
Chapter 4 
Reliability Model for AGV 
4.1 
Summary 
The Material Handling System (MHS) in a manufacturing setting plays an 
important role in the performance of the entire system. Inadequately designed 
MHSs can interfere with the overall performance of the manufacturing system and 
lead to substantial losses in productivity and competitiveness, and to unacceptably 
long lead times. Among the advanced technologies available for MHSs, 
Automated Guided Vehicles (AGVs) have found increasing applications because 
of their capability to transport a variety of part types from point to point without 
human intervention.  
Today’s automated MHSs are technologically advanced and increasingly 
complex. Uncertainty is an inevitable consequence of the complexities generated 
by technological advancements. Jain et al. (2013) show that most of the automated 
manufacturing studies have used single-item measures. They argue that single-
item measures are appropriate for relatively simple manufacturing systems. As the 
different dimensions of automated MHSs are complex in nature, single-item 
measures are inappropriate. Choosing adequate and relevant performance 
measures is critical in accurately analyzing MHSs (Beamon, 1998). A company 
also needs to address uncertainties in the manufacturing system to survive and 
compete in such an uncertain environment (Jain et al. 2013). 
AGVs are the most flexible means for transporting pieces among workstations 
in an automated manufacturing system. An AGV is a driverless and programmed 
vehicle used to transfer the load from one part of a manufacturing facility to 
another part (Maniya and Bhatt, 2011). Maxwell and Muckstadt (1982) first 
recognized the importance of AGV-based MHS design. They developed an 
optimization model that minimized the total travel time and determined the 
maximum number of AGVs needed to efficiently transfer material from one shop 
to another. AGVs increase efficiency, reduce costs, and improve flexibility by 
automating an MHS. Time-based performance measures are often used to evaluate 
MHSs with AGVs. However, moving materials from one part of the 
manufacturing floor to another part utilize time and incur costs. In this study, we 
consider both time and cost measures in an optimization model and evaluate an 
MHS with AGVs.  

42 
4   Reliability Model for AGV
 
 
The use of AGVs increases flexibility and has a significant impact on the 
overall performance and reliability of MHSs (Sarker and Gurav, 2005). As AGVs 
become larger and more complex, the traditional design requires more attention to 
issues such as control, cost, time, reliability, flexibility, etc. A number of different 
MHS design and evaluation methods (e.g., simulation, optimization, and the 
genetic algorithm) have been proposed in the literature. Simulation is an 
acceptable method for analyzing manufacturing systems. However, simulation is 
often challenging and time consuming (Law and Kelton, 2000; Kuo et al., 2007), 
particularly, when it is used for modeling complex manufacturing systems such as 
MHSs with AGVs. 
The problem of scheduling AGVs in an automated MHS has been studied 
extensively. Abdelmaguid et al. (2004) addressed the problem of simultaneous 
scheduling of machines and AGVs with the objective of minimizing the 
makespan. This problem is composed of two interrelated decision problems: the 
scheduling of machines, and the scheduling of AGVs. They showed that each 
problem is an NP-complete problem and a simultaneous consideration of the two 
problems results in a more complicated NP-complete problem. They proposed a 
hybrid genetic-algorithm/heuristic coding scheme to solve the problem. Deroussi 
et al. (2008) also studied this problem and proposed a solution based on vehicles 
rather than machines. Each solution was evaluated using a discrete event 
approach. Gnanavel Babu et al. (2010) studied this problem further and proposed a 
meta-heuristic differential evolution algorithm for solving it. They introduced an 
iterative algorithm that anticipated the complete set of flow requirements for a 
given machine schedule and made vehicle assignments accordingly. Le-Anh and 
De Koster (2006) have compiled a comprehensive review of the AGV design and 
control models and methods in the literature. 
Farling et al. (2008) used a simulation model to compare the performance of 
three AGV configurations under a variety of experimental conditions. They 
showed that system size, load/unload time, and machine failure rate factors have 
significant impacts on the operation and reliability of MHSs. Smith (1993) defined 
reliability as the probability that an item will perform a required function, under 
stated conditions, for a specific period of time. A reliability measure is a metric for 
quantifying this probability. A number of different reliability measures (i.e., 
availability, unavailability, failure rate, and mean time between failures) have 
been proposed in the literature. For degradable systems, such as MHSs, the 
performance of the system during a specific period of time can be described by 
different levels of performance as a function of machine failures (Beamon, 1998). 
Miriyala and Viswanadham (1989) developed several measures and algorithms for 
evaluating part-based reliability and system-based reliability for automated MHSs. 
Beamon (1995) proposed an analytical model for designing guide paths for 
automated MHSs as a function of reliability and quantified the reliability of the 
handling components.  
In order to ensure an acceptable service level for each machine in each shop, 
we adopt and further extend the concept of reliability proposed by Ball and Lin 
(1993) in the model. We define reliability as the probability that the system is 
operational until time t. A failure is when a machine in a shop breaks down.  
www.ebook3000.com

4.1 
Summary 
43
 
 
A desired level of reliability can be achieved by limiting the failure probabilities. 
This approach for handling reliability is called the chance constraints method and 
was initially proposed by Charnes and Cooper (1959) in the context of 
mathematical programming. The use of chance constraints in the vehicle routing 
problem was illustrated in Stewart and Golden (1983). Carbone (1974) used 
chance constraints for selecting multiple facilities under normally distributed 
demand. The model minimized an upper bound on the total demand-distance 
while ensuring that the constraints were satisfied with a specified chance or 
probability. Shiode and Drezner (2003) used a similar approach in a competitive 
location problem on a tree network. 
In many real-life applications, the parameters in a manufacturing system may 
have varying values. This value variation may result from machine breakdowns, 
lack of training, unexpected delays, non-qualified operators, or complex tasks, 
among others (Özcan, 2010). Stochastic programming can provide an effective 
means for incorporating uncertainty in real-life MHSs (Birge and Louveaux, 
1997). Stochastic programming has been used frequently in the design and control 
of MHSs with AGVs (Sayarshad and Tavakkoli-Moghaddam, 2010). 
The presence of uncertainties in automated material handling and AGV systems 
has also motivated researchers to explore compensator design such as neural 
networks (Pamosoaji et al., 2013). Kuo et al. (2007) argues that simulation is very 
time consuming for large MHSs and the process of collecting adequate sample data 
places limitations on any analysis. They proposed to overcome this problem by 
developing a neural network simulation metamodel that required only a comparably 
small training data set. Artificial neural networks are composed of interconnected 
adaptive elements which are intended to respond to stimuli in a manner not unlike 
the human nervous system (Kohonen, 1988). McCulloch and Pitts (1943) introduced 
one of the first artificial neuron models in 1943. The main feature of their neuron 
model is that a weighted sum of input signals is compared to a threshold to 
determine the neuron output. Unlike biological networks, the parameters of their 
networks had to be designed, as no training method was available. However, the 
perceived connection between biology and digital computers generated a great deal 
of interest. In the late 1950s, Rosenblatt (1985) and several other researchers 
developed a class of neural networks called perceptrons. The neurons in these 
networks were similar to those of McCulloch and Pitts (1943). Rosenblatt’s (1985) 
key contribution was the introduction of a learning rule for training perceptron 
networks to solve pattern recognition problems.  
In this chapter, we consider a manufacturing system with the following 
physical characteristics: (1) the manufacturing system is a job shop, and (2) 
single-load AGVs perform the material handling job in the shop. We use a 
stochastic programming framework and propose a bi-objective optimization model 
(which has not been used in the MHS evaluation studies) to determine the optimal 
production time and cost in a manufacturing system with an automated MHS and 
AGVs. The contribution of this chapter is fivefold: we consider (1) a stochastic 
programming problem and decompose the optimization process into manageable 
steps and integrate the results to arrive at a solution consistent with organizational 
goals and objectives; (2) stochastic parameters in multi-objective optimization 

44 
4   Reliability Model for AGV
 
 
models in general and the proposed bi-objective optimization model in particular; 
(3) machine reliability as an important component in the proposed optimization 
model; (4) machine maintenance through the breakdown rate for a realistic 
representation of the system; and (5) the elements of uncertainty within the 
proposed structured framework by using a perceptron neural network to weigh the 
two objectives in the proposed bi-objective optimization model.  
4.2 
Statement of the Problem 
In this problem, we consider a manufacturing system equipped with an AGV for 
material handling in a job shop environment. The AGV moves a part-type from 
one shop to another to complete a production cycle. In each shop, the part-type is 
partially processed. The part-types completed in the final shop are moved to the 
warehouse. For example, let us consider a manufacturer of cylinder block in the 
automotive industry. The manufacturer of cylinder block can install an AGV 
system to supply the lines with parts and to transfer cylinder blocks between five 
shops. Generally, the sequence of operations on a typical machining line for 
cylinder blocks involves five shops as shown in Figure 1: 
This machining line for cylinder blocks is comprised of the following 16 
processes performed in each of the five job shops: 
• 
Shop 1: Assuring a uniform wall thickness for the cylinder bores - qualifying 
(Process-1); rough mill pan and head faces (Process-2); and rough machining 
cylinder bores (Process 3) 
• 
Shop 2: Milling bearing cap width and slots (Process 4) and finishing mill pan 
and bearing cap width (Process 5) 
• 
Shop 3: Drilling oil holes - compound angles (Process 6); drilling, reaming, 
tapping - Left and right, pan and head faces (Process 7); assembly of bearing 
caps (Process 8); finish front and rear end (Process 9); and drilling, reaming, 
tapping - end faces (Process 10) 
• 
Shop 4: Line boring crankbore (Process 11); finish tappet bores (Process 12); 
assembly cam liners, finish line boring (Process 13); finish cylinder bores 
(Process 14); and finish mill/grind head face (Process 15) 
• 
Shop 5: Hone and grade (Process 16) 
The AGV waiting time in the job shop is not known precisely. It is also 
possible for a machine to breakdown while processing a job. The number of 
breakdowns (and the breakdown cost) is also not known precisely. The 
distributions for the stochastic parameters in the problem are assumed to be 
normal or can be estimated by the normal distribution. Additionally, the machines' 
reliability is also considered as a stochastic parameter following the exponential 
distribution. We present the mathematical details of the proposed model in the 
next section. 
 
www.ebook3000.com

4.3 
Mathematical Model 
45
 
 
 
Fig. 1 Cylinder block machining line example 
4.3 
Mathematical Model 
In this section, we propose a mathematical model for a simultaneous optimization 
of the production times and costs. 
4.3.1 Reliability Component 
We assume that the reliability of each machine-type is independent according to 
Exponential processes. Also, J is the total number of machine types (i.e., milling, 
drilling, turning, welding, etc.) We discuss the reliability based model as follows: 

46 
4   Reliability Model for AGV
 
 
1
1
1
(1
( )) ,
whenmachines ineachshopare in parallel
( )
( ) ,
when machines ineachshopare inseries
J
j
j
system
J
j
j
R t
R t
R t
=
=
⎧⎛
⎞
−
−
⎪⎜
⎟
⎪⎝
⎠
⎪
= ⎨
⎪⎛
⎞
⎜
⎟
⎪
⎪⎝
⎠
⎩
∏
∏
       
 (1) 
where
)
(t
R j
 is the probability that the machine-type j works for a period of t time 
units. 
As stated earlier, the machine-types in each shop are parallel and the shops are 
organized in series. Therefore, the reliability of the system can be measured as 
follows: 
α
≥
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
−
−∏
=
))
(
1(
1
1
t
R j
J
j
, 
 
 
                                         (2) 
whereα  is the lower bound for a desirable system reliability during the time 
period t. As previously assumed the reliability of each machine-type is 
independent and can be measured according to the following exponential 
distribution:  
j
t
j
e
t
R
θ
−
=
)
(
, 
 
 
 
                                                        (3) 
where
j
θ  is the exponential parameter for machine-type breakdown. Then, 
α
θ
≥
⎟
⎟
⎠
⎞
⎜
⎜
⎝
⎛
−
−
−
=∏
)
1(
1
1
j
t
J
j
e
  
 
 
                                         (4) 
In order to obtain a higher level of reliability, more cost is incurred to the system. 
Hence, a cost function (
)
(t
C j
) is defined to keep machine-type jreliable for the 
time period t. The following represents the cost for the entire system: 
∑
=
J
j
j t
C
1
)
(
 
 
 
 
 
 
                           (5) 
In order to validate the stated cost function, we consider the costs as losses and use 
the minimum expected loss (or minimum risk) associated with the system. We 
represent these losses with a quadratic loss function which is mathematically more 
tractable than other loss functions because of its symmetric property (i.e., an error 
above the target causes the same loss as the same magnitude of error below the 
target). If the target value of the pre-planned exponential parameter is f, then a 
quadratic loss (cost) function is 
www.ebook3000.com

4.3 
Mathematical Model 
47
 
 
2
)
(
j
j
f
L
t
C
θ
−
=
 
 
 
 
 
 
            (6) 
Where L is a constant and its value could be set to 1 if the constant makes no 
difference to a decision. 
We replace our proposed stochastic parameters with a combination of the 
expected value and the variance for that parameter and the following nonlinear 
deterministic mathematical model is derived. As indicated earlier, our goal is to 
simultaneously optimize production time and cost in the following bi-objective 
model: 
 
Indices: 
i 
Number of shops i=1,2,…,I 
j 
Number of machines j=1,2,…,J 
Parameters: 
d
C  
Stochastic cost per defective unit 
Co 
AGV operational cost per unit produced 
itC  
Tool cost for shop i 
j
pt
 
Job processing time on machine j 
ij
wt
 
Stochastic waiting time of machine j in shop i 
tm 
Material handling time 
tc 
Cycle time 
β  
Total daily cost of the defective items 
B1 
Total AGV budget 
B2 
Total tools budget 
B3 
Total machines budget 
Di 
Total Demand for shop i
Mi 
Number of machines in shop i 
N 
Number of jobs 
ZP 
Standard normal Z value for percentile P 
Decision variables: 
Xij 
Number of units produced in shop i by machine j 
j
θ  
Exponential reliability function of machine j 

48 
4   Reliability Model for AGV
 
 
Objective function 1 (cost minimization): 
(
)
(
)
2
1
1
1
1
1
1
1
2
1
1
1
1
   
( ) .
( )
.
(
).
(
).
i
ij
J
I
J
I
I
J
I
j
ij
P
j
ij
t
o
ij
j
i
j
i
i
j
i
J
I
J
I
d
ij
P
d
j
i
j
i
Min
E C t
X
Z
Var C t
X
C
C
X
E C
X
Z
Var C
X
=
=
=
=
=
=
=
=
=
=
=
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
+
+
+
+
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
⎛
⎞
⎛
⎞
+
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∑∑
∑∑
∑
∑∑
∑∑
∑∑
       
 (7) 
Objective function 2 (time minimization): 
2
1
1
1
1
1
1
1
   
.
+
(
).
(
).
j
ij
ij
J
J
I
J
I
J
I
p
m
ij
w
ij
P
w
ij
j
j
i
j
i
j
i
Min
t
t
X
E t
X
Z
Var t
X
=
=
=
=
=
=
=
⎛
⎞
⎛
⎞
⎛
⎞
⎛
⎞
+
+
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
∑
∑∑
∑∑
∑∑
        (8) 
Subject to: 
2
1
1
1
1
1
1
1
1
1
1
1
.
(
).
(
).
.
.
j
ij
ij
J
J
I
J
I
J
I
p
ij
w
ij
P
w
ij
j
j
i
j
i
j
i
J
I
J
I
m
ij
c
ij
j
i
j
i
N
t
X
E t
X
Z
Var t
X
t
X
t
X
=
=
=
=
=
=
=
=
=
=
=
⎛
⎞
⎛
⎞⎛
⎞
⎛
⎞
⎛
⎞
+
+
+
⎜
⎟
⎜
⎟⎜
⎟
⎜
⎟
⎜
⎟
⎜
⎟
⎝
⎠⎝
⎠
⎝
⎠
⎝
⎠
⎝
⎠
⎛
⎞
⎛
⎞
≤
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∑
∑∑
∑∑
∑∑
∑∑
∑∑
 (9) 
1
1
1
.
B
X
C
J
j
I
i
ij
o
≤
∑∑
=
=
,  
                                                                                  (10) 
2
1
1
1
1
(
).
(
).
ij
J
I
J
I
d
ij
P
d
j
i
j
i
E C
X
Z
Var C
X
β
=
=
=
=
⎛
⎞
⎛
⎞
+
≤
⎜
⎟
⎜
⎟
⎝
⎠
⎝
⎠
∑∑
∑∑
,                           (11) 
,
)
1(
1
1
α
θ
≥
⎟
⎟
⎠
⎞
⎜
⎜
⎝
⎛
−
−
−
=∏
j
t
J
j
e
 
 
 
 
 
         (12) 
∑∑
=
=
≤
J
j
I
i
i
ij
t
B
M
X
C
i
1
2
1
.
, 
 
 
 
  
                        (13) 
3
1
( ) .
( )
,
J
j
ij
system
j
C t
R t
B
=
⎡
⎤
≤
⎢
⎥
⎣
⎦
∑
 
 
 
 
 
           (14) 
,
1∑
=
≥
J
j
i
ij
D
X
i=1,2,…,I,  
 
 
 
                         (15) 
0
,
≥
j
ij
X θ
, i=1,2,…,I; j=1,2,…,J.                                                                   (16) 
 
www.ebook3000.com

4.3 
Mathematical Model 
49
 
 
Note that, E() and Var() are the expected value and the variance of the 
stochastic parameters, respectively. Equation (7) is the first objective function 
intended to minimize the total cost of production. Equation (8) is the second 
objective function and is intended to minimize the total time of production. 
Equation (9) shows that the total production time is limited to the cycle time. 
Equation (10) indicates the limitation of the operational budget for the  
AGVs. Equation (11) represents a constraint for the acceptable defect rate. 
Equation (12) shows that the reliability of the system is restricted to a lower-
bound α  . Equation (13) indicates that the total available budgets for the required 
tools in each shop are limited to a pre-specified upper-bound value. Equation (14) 
indicates that the total available budget for the reliability of the machines is 
limited. Equation (15) indicates that the demand at each shop must be satisfied. 
Equation (16) enforces the non-negativity of the variables. Finally, 
j
θ  represents 
the stochastic breakdown of machine j. 
j
θ  is one of our decision variables, and 
our goal is to obtain the 
j
θ  values that can ensure no machine breakdown.  
4.3.2 Perceptron Neural Network 
In this study we apply perceptron to weight our time and cost objectives. To 
conceptualize a perceptron structure for our objectives consider a single-neuron 
perceptron with two-input and one neuron, as shown in Figure 2. 
∑
)
(
hardlim
)
(
b
w
a
T
p
+
=
11
w
12
w
2p
1
p
 
Fig. 2 Two input/single-output perceptron 
 

50 
4   Reliability Model for AGV
 
 
In this figure, p1 and p2 are the inputs and w11 and w12 are their corresponding 
weights, respectively. Also, 
)
(T
p
w
 is the weighted input corresponding to the 
target output. The output of this network is determined by: 
)
.
.
(
hardlim
)
(
hardlim
)
(
hardlim
2
12
1
11
)
(
b
p
w
p
w
b
w
n
a
T
p
+
+
=
+
=
=
.   (17) 
The decision boundary is determined by the input vectors for which the net 
input n is zero; that is, 
0
.
.
2
12
1
11
)
(
=
+
+
=
+
=
b
p
w
p
w
b
w
n
T
p
.  
 
 
          (18) 
The weights are the learning rates used in the proposed mathematical model. 
The summation of the learning weights are used as a single learning rate ξ . In 
order to configure our perceptron network, we consider the two factors of machine 
and operation as the inputs for time and the two factors of material and operator as 
the inputs for cost. The goal here is to find the final weights of the time and cost 
outputs. The perceptron network is run using the data observed in the 
manufacturing system and the weights of W1 (for time) and W2 (for cost) are 
obtained after the convergence. The perceptron computations are implemented in 
the MATLAB 7.0 package. These weights are used to unify the objective function. 
The weights are 0.2 for time and 0.1 for cost.  
The mathematical model gives us the 
j
θ s considering a confidence level as a 
reliability of the job-shop system. Now, we investigate the 
j
θ s for the shops 
separately by data collection. The aim is to analyze the 
j
θ s obtained from data 
collection which does not have any interactions with other shops, in comparison 
with the 
j
θ
s gained from the mathematical model in the last section. We collect 
data for a specific working time t=24 (minute). Then for t>24, our data are type I 
censored data. Assume 
1:
2:
:
,  
,  
 ,  
n
n
r n
x
x
x
…
are the r censored data in a specific 
shop, then the estimated θ  (θˆ) using maximum likelihood estimation (MLE) is as 
follows: 
Assume that X follows an exponential distribution,  
)
(θ
EXP
X ≈
,  
 
 
 
 
                         (23) 
The cumulative distribution function is, 
θ
x
e
x
F
−
−
= 1
)
(
, 
 
 
 
 
 
           (24) 
www.ebook3000.com

4.3 
Mathematical Model 
51
 
 
The probability density function is,  
θ
θ
x
e
x
f
−
= 1
)
(
,  
 
 
 
 
                         (25) 
Then for all xi:n , the ordered statistic is, 
∏
=
−
−
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
−
−
−
=
r
i
x
t
n
r
n
n
n
i
e
e
r
n
n
x
x
x
g
1
:
:2
:1
:
0
1
.
)
1(
1
)!
(
!
)
,...,
,
(
θ
θ
θ
, 
         (26) 
The likelihood function is,  
θ
θ
θ
∑
−
=
=
−
+
−
−
r
i
n
i
t
r
n
x
r e
r
n
n
L
1
0
:
)
(
.
.
)!
(
!
)
(
,  
 
                        (27) 
The logarithm of both sides of (27) gives, 
2
1
0
:
)
(
ln
)!
(
!
ln
))
(
ln(
θ
θ
θ
∑
−
+
−
−
−
=
=
r
i
n
i
t
r
n
x
r
r
n
n
L
, 
 
          (28) 
The partial derivative of (28) with respect to θ  is, 
θ
θ
θ
θ
∑
=
−
+
+
−
=
∂
∂
r
i
n
i
t
r
n
x
r
L
1
0
:
)
(
))
(
ln(
, 
 
 
          (29) 
Then if we set (31) equal to zero, we have: 
r
t
r
n
x
r
i
n
i
MLE
∑
=
−
+
=
1
0
:
)
(
ˆθ
.  
 
 
 
 
          (30) 
wheret0 is the end time of observation (t=24) and r is the number of failures. 
While setting the manufacturing system with the exact value of 
j
θ
 obtained from 
the mathematical model is difficult due to mechanical specifications’ changes 
during the manufacturing process, we propose a confidence interval for θ . Here, 
using 
)
2
(
ˆ
2
2
r
r
χ
θ
θ ≈
 as a pivot (2r is degree of freedom), we can set a 

52 
4   Reliability Model for AGV
 
 
confidence interval for θ . To set a confidence interval using 
)
2
(
ˆ
2
2
r
r
χ
θ
θ ≈
, 
we obtain: 
α
χ
θ
θ
χ
α
α
−
=
⎥
⎦
⎤
⎢
⎣
⎡
<
<
−
1
)
2
(
ˆ
2
)
2
(
2
2
2
2
1
r
r
r
P
, 
 
 
         (31) 
By inverting (31) and multiplying all fractions by 
θˆ
2r
 we obtain: 
α
χ
θ
θ
χ
θ
α
α
−
=
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
<
<
−
1
)
2
(
ˆ
2
)
2
(
ˆ
2
2
2
1
2
2
r
r
r
r
P
,  
 
                         (32) 
where (34) is a two sided (
α
−
1
)% confidence interval based on type I censored 
data. In our case, we collected data for a special working period. We were 
supposed to collect 30 observations but a failure occurred (type I censored data) in 
the 20th observation. Therefore, using (32) we can obtain the estimatedθ .  
75
.
16
20
10
)
20
30
(
235
ˆ
=
−
+
=
MLE
θ
. 
Clearly the estimated θ  is different from the one obtained from the 
mathematical model. Here, we configure the confidence interval for θ  using the 
estimated value with a 0.95% confidence level (equation 33). 
05
.0
1
)
40
(
75
.
16
20
2
)
40
(
75
.
16
20
2
2
975
.0
2
025
.0
−
=
⎥
⎦
⎤
⎢
⎣
⎡
×
×
<
<
×
×
χ
θ
χ
P
; 
we 
obtain 
[
]
46
.
27
,3.
11
 with a 95% confidence interval for θ . 
The results show that the output produced in the integrated case was higher 
than the outputs produced by separate cost and time objective function 
considerations. In addition, the proposed model resulted in an increase in the 
availability of the manufacturing system through the improvements in the 
reliability of the machine types and the shops. These improvements help to 
maintain the system at a desirable level of reliability and to prevent sudden 
breakdowns.  
www.ebook3000.com

4.4 
Conclusions 
53
 
 
4.4 
Conclusions 
AGV systems complement the operation in manufacturing systems by providing 
integrated automated material handling that capitalizes on the system’s flexibility. 
Previous research considering AGVs systems has focused primarily on complex 
control strategies in MHSs. In this study, we focused on the time and cost 
measures in an optimization model used to evaluate an MHS with AGVs. The 
automated manufacturing system considered in this study has the following 
physical characteristics: (1) the manufacturing system is a job shop, and (2) 
single-load AGVs perform the material handling job in the shop. 
We took into account the reliability of the manufacturing system because of the 
need for steadiness and stability in the system. Reliability was included in the 
model as a cost function. Furthermore, we considered bi-objective stochastic 
programming to optimize the time and cost objectives because of the uncertainties 
inherent in the optimization parameters in real-world problems. Finally, we used 
perceptron neural networks to transform the bi-objective optimization model into a 
single objective model.  
The MHS proposed in this study could potentially be extended (or revised) to 
improve the effectiveness of a wide variety of decision tools in productivity 
improvement. For example, current trends in scheduling systems provide the 
production scheduler with powerful tools which can be used to optimize real-time 
workloads in various stages of production. The MHS could potentially be 
integrated within such a real-time scheduling system. The proposed method could 
also be potentially useful for general applications of business process 
improvement which strive to improve workflows within and between functional 
groups. These approaches often utilize systematic methods to process a large 
amount of imprecise and complex information to redesign critical business 
processes. 
The limitations of this study and the futures research directions can be 
summarized as follows: 
• 
Although we used optimization in this study, alternatively, a simulation 
method or a heuristic algorithm could be used in lieu of the proposed model. 
Buzacott and Yao (1986) presented a comprehensive review of the analytical 
models developed for the design and control of automated and flexible 
manufacturing systems. They advocated analytical methods over the 
simulation models because analytical methods provide a better insight into the 
system performance. Ho et al. (2000, p. 490), Lee et al. (2006, p. 1828), Kuo 
et al. (2007, p. 1002), and Crombecq et al. (2011, p. 683) have also confirmed 
that although computer simulations are often the first choice for modeling 
systems and even for optimization purposes, the simulation of complex 

54 
4   Reliability Model for AGV
 
 
systems with multiple input and output parameters can be both prohibitively 
expensive and time consuming. On the other hand, heuristics seek good 
feasible solutions to optimization problems where the complexity of the 
problem or the available time for its solution does not allow exact algorithms. 
Although the main measure of success for exact algorithms is time efficiency, 
we must often evaluate the quality of solutions when an exact optimum is not 
available (Gnanavel Babu et al. 2010).  
• 
Although we did not experience this limitation in our study, the time 
complexity of the learning phase in some complex perceptron neural 
networks could be high depending on the heuristic used for calculating the 
weights and the halting condition. In such complex perceptron neural 
networks, a large number of passes may be required. Each pass involves 
computation of the outcome for every training set point followed by 
modification of the weights. 
• 
Although in this study we usedthe time and cost measures in an optimization 
model, performance measures may be categorized on the basis of: time, cost, 
quality, and flexibility measures. Consideration of quality and flexibility is a 
natural extension of the model proposed in this study. 
• 
Although in this study we considered single-load AGVs, researchers (e.g., Ho 
et al. 2004; Lee et al. 1996; Ozden, 1988) have already proven that multiple-
load AGV systems have many advantages over single-load ones. Another 
natural extension of this research is using multiple-load AGVs in the 
optimization model.  
References 
Abdelmaguid, T.F., Nassef, A.O., Kamal, B.A., Hassan, M.F.: A hybrid GA/heuristic 
approach to the simultaneous scheduling of machines and automated guided vehicles. 
International Journal of Production Research 42(2), 267–281 (2004) 
Ball, M.O., Lin, F.L.: A reliability model applied to emergency service vehicle location. 
Operations Research 41(1), 18–36 (1993) 
Beamon, B.M.: Reliability in design of fixed-path material handling systems. University of 
Cincinnati Working Paper, Cincinnati (1995) 
Beamon, B.M.: Performance, reliability, and performability of material handling systems. 
International Journal of Production Research 36(2), 377–393 (1998) 
Birge, J., Louveaux, F.: Introduction to Stochastic Programming. Springer, Berlin (1997) 
Buzacott, J.A., Yao, D.D.: Flexible manufacturing systems: A review of analytical models. 
Management Science 32(7), 890–905 (1986) 
Carbone, R.: Public facilities location under stochastic demand. Infor. 12(3), 261–270 
(1974) 
Charnes, A., Cooper, W.: Chance-constraint programming. Management Science 6(1), 73–
79 (1959) 
www.ebook3000.com

References 
55
 
 
Crombecq, K., Laermans, E., Dhaene, T.: Efficient space-filling and non-collapsing 
sequential design strategies for simulation-based modeling. European Journal of 
Operational Research 214(3), 683–696 (2011) 
Deroussi, L., Gourgand, M., Tchernev, N.: A simple metaheuristic approach to the 
simultaneous scheduling of machines and automated guided vehicles. International 
Journal of Production Research 46(8), 2143–2164 (2008) 
Edwards, W.: How to use multiple attribute utility measurement for social decision-making. 
IEEE Transactions on Systems Man and Cybernetics 7(5), 326–340 (1977) 
Farling, B.E., Mosier, C.T., Mahmoodi, F.: Analysis of automated guided vehicle 
configurations in flexible manufacturing systems. International Journal of Production 
Research 39(18), 4239–4260 (2001) 
Gnanavel Babu, A., Jerald, J., Noorul Haq, A., Muthu Luxmi, V., Vigneswaralu, T.P.: 
Scheduling of machines and automated guided vehicles in FMS using differential 
evolution. International Journal of Production Research 48(16), 4683–4699 (2010) 
Ho, Y.-C., Sieh, P.F.: A machine-to-loop assignment and layout design methodology for 
tandem AGV systems with multiple-load vehicles. International Journal of Production 
Research 42(4), 801–832 (2004) 
Ho, Y.-C., Cassandras, C.G., Chen, C.-H., Dai, L.: Ordinal optimisation and simulation. 
Journal of the Operational Research Society 51(4), 490–500 (2000) 
Jain, A., Jain, P.K., Chan, F.T.S., Singh, S.: A review on manufacturing flexibility. 
International Journal of Production Research 51(9), 5946–5970 (2013) 
Keeney, R.L., Raiffa, H.: Decisions with Multiple Objectives: Preferences and Value 
Trade-offs. Wiley, New York (1976) 
Khosravi, A., Nahavandi, S., Creighton, D., Atiya, A.F.: Comprehensive review of neural 
network-based prediction intervals and new advances. IEEE Transactions on Neural 
Networks 22(9), 1341–1356 (2011) 
Kleindorfer, P.R., Kunreuther, H.C., Schoemaker, P.J.H.: Decision Sciences: An Integrative 
Perspective. Cambridge University Press, New York (1993) 
Kohonen, T.: An introduction to neural computing. Artificial Neural Networks 1(1), 3–16 
(1988) 
Kros, J.F., Lin, M., Brown, M.L.: Effects of the neural network s-Sigmoid function on 
KDD in the presence of imprecise data. Computers and Operations Research 33(11), 
3136–3149 (2006) 
Kuo, Y., Yang, T., Peters, B.A., Chang, I.: Simulation metamodel development using 
uniform design and neural networks for automated material handling systems in 
semiconductor wafer fabrication. Simulation Modelling Practice and Theory 15(8), 
1002–1015 (2007) 
Law, A.M., Kelton, W.D.: Simulation Modeling and Analysis, 2nd edn. McGraw-Hill, 
Singapore (2000) 
Le-Anh, T., De Koster, M.B.M.: A review of design and control of automated guided 
vehicle systems. European Journal of Operational Research 171(1), 1–23 (2006) 
Lee, L.H., Chew, E.P., Manikam, P.: A general framework on the simulation-based 
optimization under fixed computing budget. European Journal of Operational 
Research 174(3), 1828–1841 (2006) 
Lee, J., Tangjarukij, M., Zhu, Z.: Load selection of automated guided vehicles in flexible 
manufacturing systems. International Journal of Production Research 34(12), 3383–
3400 (1996) 

56 
4   Reliability Model for AGV
 
 
Maniya, K.D., Bhatt, M.G.: A multi-attribute selection of automated guided vehicle using 
the AHP/M-GRA technique. International Journal of Production Research 49(20), 
6107–6124 (2011) 
Maxwell, W.L., Muckstadt, J.A.: Design of automated guided vehicle systems. IIE 
Transactions 14(2), 114–124 (1982) 
McCulloch, W., Pitts, W.: A logical calculus of the ideas immanent in nervous activity. 
Bulletin of Mathematical Biophysics 5, 115–133 (1943) 
Özcan, U.: Balancing stochastic two-sided assembly lines: A chance-constrained, 
piecewise-linear, mixed integer program and a simulated annealing algorithm. 
European Journal of Operational Research 205(1), 81–97 (2010) 
Ozden: A simulation study of multiple-load carrying automated guided vehicles in a 
flexible manufacturing system. International Journal of Production Research 26(8), 
1353–1366 (1988) 
Pamosoaji, A.K., Cat, P.T., Hong, K.S.: Sliding-mode and proportional-derivative-type 
motion control with radial basis function neural network based estimators for wheeled 
vehicles. 
International 
Journal 
of 
Systems 
Science 
(2013), 
doi:10.1080/00207721.2013.772678 
Pöyhönen, M., Hämäläinen, R.P.: On the convergence of multiattribute weighting methods. 
European Journal of Operational Research 129(3), 569–585 (2001) 
Rosenblatt, F.: The perceptron: A probabilistic model for information storage and 
organization in the brain. Psychological Review 65(6), 386–408 (1958) 
Saaty, T.L.: The Analytic Hierarchy Process. McGraw-Hill, New York (1980) 
Sarker, B.R., Gurav, S.S.: Route planning for automated guided vehicles in a manufacturing 
facility. International Journal of Production Research 43(21), 4659–4683 (2005) 
Sayarshad, H.R., Tavakkoli-Moghaddam, R.: Solving a multi periodic stochastic model of 
the rail–car fleet sizing by two-stage optimization formulation. Applied Mathematical 
Modelling 34(5), 1164–1174 (2010) 
Shiode, S., Drezner, Z.: A competitive facility location problem on a tree network with 
stochastic weights. European Journal of Operational Research 149(1), 47–52 (2003) 
Smith, D.J.: Reliability, Maintainability and Risk. Butterworth Heinemann, Oxford (1993) 
Stewart, W., Golden, B.: Stochastic vehicle routing: A comprehensive approach. European 
Journal of Operational Research 14(4), 371–385 (1983) 
Ultsch, A., Korus, D., Kleine, T.O.: Integration of Neural Networks and knowledge-based 
systems in medicine. In: Wyatt, J.C., Stefanelli, M., Barahona, P. (eds.) AIME 1995. 
LNCS, vol. 934, pp. 425–426. Springer, Heidelberg (1995) 
Von Winterfeldt, D., Edwards, W.: Decision Analysis and Behavioral Research. Cambridge 
University Press, Cambridge (1986) 
 
 
www.ebook3000.com

 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
57 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_5  
 
Chapter 5 
Uncertain Optimal Path for AGV System 
5.1 
Summary 
Discrete event systems are characterized by changes in state over time, based on 
current state and state transition rules, where each state is separated from its 
neighbor by a step rather than a continuum of intermediate infinitesimal states. 
Examples of such systems are information systems, operating systems, networking 
protocols, banking systems, business processes and telecommunications systems, 
and flexible manufacturing systems. Traditional manufacturing has relied on 
dedicated mass-production systems to achieve high production volumes at low 
costs. As living standards improve and the demands for new consumer goods rise, 
manufacturing flexibility gains prominence as a strategic tool for rapidly changing 
markets. Flexibility, however, cannot be properly incorporated in the decision-
making process if it is not well defined and measured in a quantitative manner. 
Today, manufacturing flexibility remains an elusive notion because of its inherent 
complexity and generality, in spite of a large body of published research work. 
There exist more than 50 definitions of (Sethi and Sethi, 1990) and six different 
approaches for obtaining a quantitative flexibility measure (Gupta and Goyal, 
1989). Flexibility in its most rudimentary essence is the ability of a manufacturing 
system to respond to changes and uncertainties associated with the production 
process (Zelenovic, 1982; Buzacott, 1982; Gerwin, 1982). A comprehensive 
classification of eight flexibility types was proposed in Browne et al. (1984). 
Resource and system flexibilities were examined in Slack (1987), whereas global 
measures for flexible manufacturing systems (FMSs) were defined in Gupta and 
Buzacott (1989). Routing flexibility based on information theoretic concepts was 
examined in Yao and Pei (1990) and Kumar (1987). Flexibility measures for one 
machine, a group of machines, and whole industry were presented in Brill and 
Mandelbaum (1989), involving appropriate weights and machine efficiencies in 
carrying out sets of tasks. 
Flexibility in its most rudimentary sense is the ability of a manufacturing 
system to respond to changes and uncertainties associated with the production 
process (Miettinen et al., 2010; Kumar and Sridharan, 2009; Das et al., 2009). In 

58 
5   Uncertain Optimal Path for AGV System
 
Barad and Sipper (1988), the period needed by a system to recover after a change 
was used as the central flexibility measure, whereas a stochastic dynamic 
programming model for its assessment was presented in Kulatilaka (1988). 
Artificial intelligence (AI) methods seem appropriate in most practical situations 
where numerical data are not readily available and linguistic variables are more 
amenable to handling imprecise knowledge (Dooner, 1991). The flexibility of 
competing systems can be ranked appropriately using an algorithmic approach 
(Abdel-Malek and Wolf, 1991) or a decision support system (Suresh, 1991) based 
on performance and economic criteria. Also, integer programming methods were 
proposed in Chandra and Tombak (1992), and a graphical representation method 
of production processes was presented in Kochikar and Narendran (1992). 
Manufacturing flexibility is associated with uncertainty in all levels of a firm’s 
operation, such as variation in the demand and characteristics of a product or 
unanticipated interruptions of the production process because of machine failures. 
In addition, human operators or managers use imprecise concepts and vague 
notions when they attempt to define or measure flexibility. Fuzzy set theory 
(Dubois and Prade, 1980; Zimmermann, 1991), and especially fuzzy logic, 
constitute natural frameworks for the representation and manipulation of 
uncertainty.Indeed, fuzzy set theory is an algebra of imprecise propositions and 
gradual statements such as “machine A is more flexible than machine B because it 
is more versatile.” In previous treatments, uncertainty was handled by probability 
theory under the assumption that probabilities can be obtained precisely. 
Mandelbaum and Buzacott (1990), examining the meaning and use of flexibility in 
decision-making processes, admit that for real-world problems with increased 
complexity, the existing modeling methods are inadequate to represent reality. For 
context-dependent situations where conceptual imprecisions exist, however, as in 
the description of machine flexibility itself, fuzzy sets and fuzzy logic appear to be 
more appropriate for the definition and analysis of the problem.  
Manufacturing costs for products are very crucial in decision making and 
strategic planning. And with respect to cost estimation, research and development 
departments in the past could only estimate the final product’s total cost. 
Moreover, rules of thumb of the engineers are often applied as the cost estimation 
benchmarks, making the results controversial in terms of accuracy (Mostafaee et 
al., 2010; Eklin et al., 2009; Qian and Ben-Arieh, 2008; Wang, 2007; Verlinden et 
al., 2008; Wang, 2007).  
Jobshop is a flexible, scalable and intelligent production planning and control 
system offering advanced functionality and value in key areas of manufacturing 
and assembly. The flexible jobshop problem (FJP) is an extension of the classical 
job shop problem allowing for an operation to be processed by any machine from 
a given set.  
www.ebook3000.com

5.2 
Statement of the Problem 
59
 
Automated guided vehicles (AGVs) reduce costs of manufacturing and increase 
efficiency in a manufacturing system. These trailers can be used to move raw 
materials in line to get them ready for manufacturing (Aized, 2009; Hsueh, 2010). 
To conceptualize an AGV, it is necessary to understand the fundamentals of 
flexible manufacturing systems (FMSs). Rather than using humans to perform 
repetitive tasks, a machine is used to perform the task. Each shop performs a 
specific task to assist in the manufacturing of a product. Although FMS is fast and 
efficient, but it is not cheap as it requires lots of expensive machines to operate. In 
the next section, we give a comprehensive description of our proposed problem of 
investigation.  
5.2 
Statement of the Problem 
Consider a jobshop layout which applies an AGV for material handling. The AGV 
carries raw material, semi-produced and final products in batch sizes. Due to 
mounting demands, advancing technology, and rising production capacity, the 
need for increasingly more shops is mounting over time. The new shops are 
expected to have more advanced machines. Therefore, more than one shop with 
the same duty are evolved. The difference among shops having the same duty 
shows up in the shop's specifications that affect the production cost. As a result, 
the system would consider a flexible jobshop model where multi shops of the 
same duty exist and each operation can be processed on any type of machine in 
any shop. The sequences of jobs are specified and the jobs are assumed to be 
independent.  
The structure of such a problem would configure a network. In this network, 
the nodes are the shops and the arcs are the flow paths of the AGV to each shop. 
Shops in each stage are of the same type but have different specifications such as 
different machine types and equipments, varied operator proficiencies, different 
rates of defect, etc.. Each flow path for the AGV is associated with a time 
parameter and also a cost parameter related to each shop. The aim is to find a path 
for the AGV minimizing an aggregate time and cost objective. Considering the 
variable status of the AGV flow among shops, the time of each flow path of the 
AGV is a triangular fuzzy number. In each shop, different machines and operators 
are working. Due to unpredictable events during working times a cost may incur. 
This cost is inferenced from an expert system via fuzzy logic "IF …. Then……." 
rules. Cost parameters of each shop are considered to be 3: (1) Equipment 
sensitivity, (2) operator proficiency, and (3) product specifications, each being 
specified by one of the three levels of low, moderate, and high. A configuration 
for the proposed problem is presented in Figure 1. 

60 
5   Uncertain Optimal Path for AGV System
 
 
Fig. 1 A configuration of the proposed problem 
As stated before, time is considered to be a triangular fuzzy number and cost is 
inferenced from an expert system. Our decision model is to consider both time and 
cost parameters, and thus an integration of the two parameters would be required. 
The integration is to have a weighted sum of cost and time as an arc length in the 
proposed network. Time is a triangular fuzzy number and cost is considered to be 
an indirect triangular fuzzy number. A description of fuzzy logic, numbers and 
systems are given in the next section. 
5.3 
Mathematical Modeling 
5.3.1 Fuzzy Logic and Membership Functions 
In Zadeh's words, who first introduced the notion of fuzzy logic (Zadeh, 1965), 
fuzzy logic is a tool for ‘‘Computing with Words’’. He stated that the main role of 
fuzzy logic was to serve as a methodology for computing with words when no 
other methodology could attain such purpose (Zadeh, 1996, 1999). 
Fuzzy logic accommodates for the emulation of the human reasoning process 
and making decisions based on vague or imprecise data. Linguistic terms can 
better represent knowledge, experience, and subjective viewpoints of decision 
makers in more intuitive ways and natural language formats. Each linguistic term 
can be expressed by a fuzzy set. In fuzzy set theory, elements of a set are allowed 
to have membership values between zero and one. If we depict this membership 
value by α , then α  can have any value in the interval [0,1]. Membership values 
for a fuzzy set are usually determined by a membership function. Triangular 
membership functions are common (Pedrycz, 1994). 
 
www.ebook3000.com

5.3 
Mathematical Modeling 
61
 
Definition 1. A triangular fuzzy number a  can be defined by a triplet
)
,
,
(
3
2
1
a
a
a
. Its conceptual schema and mathematical form are shown by: 
( )
1
1
1
2
2
1
3
2
3
3
2
3
0,
,
,
0,
.
a
x
a
x
a
a
x
a
a
a
x
a
x
a
x
a
a
a
a
x
μ
≤
⎧
⎪
−
⎪
<
≤
⎪
−
⎪
= ⎨
−
⎪
<
≤
⎪
−
⎪
<
⎪⎩

  
 
                    
            (1) 
A triangular fuzzy number a  in the universe of discourse X that conforms to this 
definition is shown in Figure 2. 
0
1
( )
a x
μ 
1
a
2
a
3
a
x
 
Fig. 2 A triangular fuzzy numbera 
Definition  2. Assuming that both 
1
2
3
(
,
,
)
a
a a
a
=

 and 
1
2
3
(
,
,
)
b
b
b
b
=

 are 
triangular numbers, then the basic fuzzy operations are: 
 
(
)
1
1
2
2
3
3
,
,
a b
a
b a
b a
b
×
=
×
×
×


for multiplication,  
(
)
1
1
2
2
3
3
,
,
a
b
a
b a
b
a
b
+
=
+
+
+


for addition.  
 
            (2)      
 
In Bastian (2000), different rule determination approaches have been described. 
Expert knowledge is the most popular and accepted method, in practice, while 
other common practices such as meta-rule techniques and fuzzy classifier systems 
which utilize genetic algorithms or artificial neural networks are applicable when 
expert knowledge is not available. 
Roughly speaking, a fuzzy rule is the implication stated as an If-Then rule in 
which the premise and the conclusion are fuzzy sets. The basic components are the 

62 
5   Uncertain Optimal Path for AGV System
 
‘‘If’’ part, usually referred to as the antecedent, and the ‘‘Then’’ part, usually 
referred to as the consequent (like If antecedent Then consequent). The antecedent 
can be composed of a single condition or a set of conditions combined by 
conjunction operators like ‘‘AND’’ and ‘‘OR’’. 
Once the rules are determined, the next step is to determine the matching 
degree of the inputs with respect to the fuzzy rules to perform the inference 
process. If there are multiple inputs, a conjunction operator is used to combine the 
matching degree of the fuzzy inputs utilizing ‘‘min’’, ‘‘max’’, or ‘‘product’’ (Klir 
and Yuan, 1995; Zimmermann, 1996). The two most principal methods of fuzzy 
inference are ‘‘clipping’’ and ‘‘scaling’’ methods (Klir and Yuan, 1995; 
Zimmermann, 1996), both suppressing the membership functions for the 
consequent, depending upon the degree of matching. Once the final outputs of the 
fuzzy rules are obtained through fuzzy inference, the outputs are combined into 
one single aggregated output. Since there might be more than one rule with a 
matching degree greater than zero, then more than one rule may be configured 
(Klir and Yuan, 1995; Zimmermann, 1996). 
5.3.2 Fuzzy Systems 
The fuzzy logic and rule-based reasoning have found various applications in the 
control of industrial processes, modeling of complex systems and the development 
of fuzzy inference systems (Lin and Chen, 2004; Machacha and Bhattacharya, 
2000). Due to their varied usage, fuzzy inference systems are also known as fuzzy 
expert systems, fuzzy rule-based systems, fuzzy associative memories or, in short, 
fuzzy systems. In general, a fuzzy system is composed of five major blocks: 
• 
Fuzzifier which transforms the crisp inputs into degrees of match with 
linguistic values; 
• 
dictionary which defines the membership functions of the fuzzy sets used 
in the fuzzy rules; 
• 
rule base which contains fuzzy if-then rules and along with the 
dictionary, comprises the knowledge base of the fuzzy system; 
• 
decision maker which performs the inference operations on the rules; 
• 
defuzzifier which converts the fuzzy results of inference into crisp 
outputs. 
 
Based on the different trends in forming the major blocks of a fuzzy system and 
various kinds of application to which the fuzzy systems are applied, different 
types of fuzzy systems have been introduced. Mamdani fuzzy system and TSK 
fuzzy system are two types being commonly used in the literature (Klir and Yuan, 
1995; Zimmermann, 1996). Each one is being adopted in its own special domain 
www.ebook3000.com

5.3 
Mathematical Modeling 
63
 
because of its particular accommodation for the different ways of knowledge 
representation. However, other types of fuzzy systems such as Tsukamoto's 
(Tsukamoto, 1979), ANFIS (Jang, 1993; Jang and Sun, 1995), etc., have their own 
special applications. Next, we will give a brief discussion of the first two types. 
 
• 
Mamdani Fuzzy System 
Mamdani fuzzy system was proposed as a first attempt to control a steam engine 
and boiler combination by a set of linguistic control rules obtained from 
experienced human operators. Rules in Mamdani fuzzy systems are like these 
(Klir and Yuan, 1995; Zimmermann, 1996): 
 
If x1 is A1 AND/OR x2 is A2 Then y is B1, 
 
whereA1, A2 and B1 are fuzzy sets. The fuzzy set acquired from aggregation of 
rules’ results will be defuzzified using defuzzification methods like centroid 
(center of gravity), max membership, mean-max, and weighted average. The 
centroid method is very popular, in which the ‘‘center of mass’’ of the result 
provides the crisp value. In this method, the defuzzified value of the fuzzy set A, 
d(A), is calculated by 
∫
∫
=
X
A
X
A
x
x
x
x
x
A
d
)
(
)
(
.
)
(
μ
μ
,  
 
 
 
                           (3) 
 
where
(.)
A
μ
is the membership function of the fuzzy set A (Klir and Yuan, 1995; 
Zimmermann, 1996).  
For our problem in which various possible conditions of parameters are stated 
in forms of fuzzy sets, we utilize the Mamdani fuzzy system, because the fuzzy 
rules representing the expert knowledge in Mamdani fuzzy systems would 
consider fuzzy sets in their consequences, while in TSK fuzzy systems, the 
consequences are expressed as crisp functions. In general, designing a fuzzy 
system is composed of the following major steps (Klir and Yuan, 1995): 
 
Step 1. Identifying pertaining input and output variables. Besides, the 
meaningful linguistic states along with appropriate fuzzy sets for the variable 
ought to be selected. 
Step 2. Introducing a fuzzification method for input variables that expresses the 
associated measured uncertainty. The purpose of the fuzzification method is to 
interpret measurements of input variables which are expressed by real numbers. 

64 
5   Uncertain Optimal Path for AGV System
 
Step 3. Formulating pertaining knowledge in terms of fuzzy inference rules. 
There are two principal ways in which relevant inference rules can be determined. 
One is to elicit them from experienced humans and the other is to obtain them 
from empirical data by suitable learning methods, usually with the help of neural 
networks. 
Step 4. Combining measurements of input variables with relevant fuzzy rules to 
inference, regarding the output variables in which the purpose of inference engine 
will be obtained. 
Step 5. Ascertaining a suitable defuzzification method to convert the 
aggregated fuzzy set of implications into a real number. 
5.3.3 Modeling the Proposed Fuzzy Problem  
As stated before, time is a triangular fuzzy number, ensued from the experts' 
knowledge. Brainstorming and expert knowledge versus meta-rule techniques 
(neural networks, genetic algorithms, etc.) are two common approaches for 
defining fuzzy rules and membership functions. While available empirical data is 
requisite for using the second approach, due to unavailability of historical data for 
cost, we make use of the first approach to obtain the membership functions and 
fuzzy rules. 
The input to our Mamdani type fuzzy system is composed of equipment 
sensitivity, operator proficiency, and product specifications. For any of the inputs, 
three linguistic terms of "low", "moderate", and "high" are defined. The output of 
the system is cost that is identified by any of the three linguistic terms, "low", 
"moderate", or "high". The maximum membership grade of linguistic term 
‘‘high’’ is 30.  
As a result, a triangular fuzzy number as the time and a numerical value as the 
cost are obtained. We intend to consider an integrated time-cost value as the value 
of each proposed arc in the network. Time and cost having different scales, it 
would not be possible to perform basic operations such as addition on their 
original forms. Thus, to remove the scales, we normalize the time and cost values 
throughout the network and then consider a weighing method to make them 
appropriate for basic operations. On the other hand, time is a triangular fuzzy 
number and cost is a crisp numerical value. But, as implied by Definition 2, we 
need to have triangular numbers for both parameters to perform the basic 
operations. For this, we consider cost as a trivial triangular fuzzy number and 
show it by a triplet (0,C,0), where C is the numerical value inferenced from the 
expert system for cost with the membership value equal to 1. The right and left 
sides of C are zero since their membership values are zero. In the next section, we 
present an approach for weighing the parameters.   
www.ebook3000.com

5.3 
Mathematical Modeling 
65
 
5.3.4 Operations on the Parameters of the Problem:  
Normalization of the Parameters 
As stated, to perform basic operations on the time and cost parameters with their 
different scales, we need to remove their scales. To do this, two normalization 
processes are proposed for time and cost, separately. In (4), (5) and (6) below, i is 
an index to show the node and j is an index to show the stage (shop type) in the 
proposed network, rijis the value of either time or cost parameter in each node, and 
nijis its corresponding normalized value.  Considering time as a triangular fuzzy 
number, the normal value with a positive view is given by 
,
,
,
min
max
min
j
i
r
r
r
r
n
j
j
j
ij
ij
∀
−
−
=
  
 
 
                           (4) 
 
while the normal value with a negative view is given by, 
j
i
r
r
r
r
n
j
j
ij
j
ij
,
,
min
max
max
∀
−
−
=
,  
 
 
                           (5) 
 
where
max
jr
 and 
min
jr
 are maximum and minimum values in each column of an 
assumed matrix of time or cost, respectively. Since time in our proposed model is 
a criterion implicating a negative aspect in decision making, then we choose (5) 
for normalizing time in our approach.  
Assuming cost as a crisp value, we normalize the cost values as follows: 
2 ,
, ,
ij
ij
kj
k
r
n
i j
r
=
∀
∑
 
 
 
 
 
            (6) 
To compute the minimum or maximum value in (4) and (5), comparisons are 
needed to be made. This means that it is necessary to have a method for ranking 
and comparing fuzzy numbers. An operator ≺ for ordering fuzzy numbers can be 
defined as follows (see Mahdavi et al., 2009): 
1
1
2
2
3
3
4
4
(
)
(
)
(
)
(
).
A B
a
b
a
b
a
b
a
b
⇔
≤
∧
≤
∧
≤
∧
≤


≺
                           (7) 
 
However, this relation is not a complete ordering, as fuzzy numbers A  and B
satisfying 
{
}
,
1,2,3,4 ):(
)
(
)
i
i
i
i
i j
a
b
a
b
∃
∈
<
∧
>
, 
 
                           (8) 
would not be comparable by ≺. 

66 
5   Uncertain Optimal Path for AGV System
 
The ranking or ordering methods for fuzzy quantities have been proposed by 
several authors. For summaries, see Bortolan and Degani (1985) and Delgado et 
al. (1988). Admittedly, none of these methods is commonly accepted. Various 
ranking functions may produce conflicting and controversial results in comparison 
of fuzzy numbers (these issues have been discussed in Wang and Kerre, 2001, 
through a specific example). 
Here, we use a fuzzy ranking method recently adopted by Mahdavi et al. 
(2009). Consider the fuzzy min and max operations defined in analogy with the 
fuzzy addition as follows: 
 
)).
,
min(
),
,
min(
),
,
min(
),
,
(min(a
)
b~
,a~
( 
value
Min
4
4
3
3
2
2
1
1
b
a
b
a
b
a
b
MINV
=
=
        (9) 
)).
,
max(
),
,
max(
),
,
max(
),
,
(max(a
)
b~
,a~
( 
value
Max
4
4
3
3
2
2
1
1
b
a
b
a
b
a
b
MAXV
=
=
 
It is evident that, for non-comparable fuzzy numbers a~ and b~
, the fuzzy min 
operation results in a fuzzy number different from both of them. For example, for 
(5,10,13,19)
a =

and 
(6,9,15,20)
b =

, 
we 
get 
from 
(9) 
a 
fuzzy 
)
19
,
13
,9
,5
(
MINV =
which differs from a  and b . To alleviate this drawback, 
a method based on the distance between fuzzy numbers is proposed. We use the 
distance function introduced in Sadeghpour Gildeh and Gien (2001). The main 
advantages of this distance function, to be defined next, are the generality of its 
usage on various fuzzy numbers, and its reliability in distinguishing unequal fuzzy 
numbers. 
 
Definition 3. The 
,
p q
D
-distance, indexed by parameters 1
p
<
< ∞and 
0
1
q
<
<
, between two fuzzy numbers a  and b  is a nonnegative function 
given by: 
(
)
(
)
⎪
⎪
⎩
⎪
⎪
⎨
⎧
∞
=
−
+
−
−
∞
<
⎥⎦
⎤
⎢⎣
⎡
−
+
−
−
=
+
+
≤
≤
−
−
≤
≤
+
+
−
−
∫
∫
,
,
inf
sup
)
1(
,
,
)
1(
)
~
,
~
(
1
0
1
0
1
1
0
1
0
,
p
b
a
q
b
a
q
p
d
b
a
q
d
b
a
q
b
a
D
p
p
p
q
p
α
α
α
α
α
α
α
α
α
α
α
α
      (10) 
 
where
−
+
α
α a
a ,
 and 
−
+
α
α b
b ,
 are the corresponding right and left α -cuts of a and 
b, respectively. The analytical properties of 
,
p q
D
depend on the first parameter 
p, while the second parameter q of 
,
p q
D
characterizes the subjective weight 
www.ebook3000.com

5.3 
Mathematical Modeling 
67
 
attributed to the end points of the support; that is, 
+
α
a and 
−
α
a . of the fuzzy 
numbers. If there is no reason for distinguishing any side of the fuzzy numbers, 
then 
1
,2
p
D
is recommended. Having q close to 1 results in considering the right 
side of the support of the fuzzy numbers more favorably. Since the significance of 
the end points of the support of the fuzzy numbers is assumed to be the same, then 
we consider 
1
2
q =
.  
For triangular fuzzy numbers 
(
)
1
2
3
,
,
a
a
a
a
=

and 
(
)
1
2
3
,
,
b
b
b
b
=

, the 
above distance with 
2
p =
 and 
1
2
q =
 is then calculated as: 
 
⎥⎦
⎤
⎢⎣
⎡
−
−
+
−
+
−
=
∑
∑
=
+
+
=
3
1
1
1
2
1
2
2
2
2
2
1
,2
)
)(
(
)
(
)
(
6
1
)
~
,
~
(
i
i
i
i
i
i
i
i
a
b
a
b
a
b
a
b
b
a
D
      
(11) 
 
We are now able to compute the distance between 
,
a b

and MINV using 
the proposed distance function (11); for a~  and b~
 as given before, we get 
1667
.0
)
,~
(
2
1
,2
=
MINV
a
D
and 
33
.1
)
,
~
(
2
1
,2
=
MINV
b
D
. The number with 
lowest distance is the minimum. Now, we are ready to propose the following 
algorithm for the comparison of fuzzy numbers. 
 
Algorithm 1 (compare two triangular fuzzy numbers). 
Input: Two fuzzy numbers (
1
~L and 
2
~L ). 
Output: Minimum or maximum between the two triangular fuzzy numbers (
min
L
or
max
~L
) 
Step 1: Compute the minimum or maximum value ( MINV or MAXV ) by 
Equation (9). 
Step 2: Find the distance of MINV or MAXV from (
1
~L and 
2
~L  ) using 
Equation (11). 
Step 3: Determine 
min
L
or
max
~L
giving the smallest or largest distance.  
 

68 
5   Uncertain Optimal Path for AGV System
 
5.3.5 Weighing the Parameters 
To weigh the parameters, we take a multi criteria decision making approach. 
Multi-criteria decision making (MCDM), dealing primarily with problems of 
evaluation or selection (Keeney and Raiffa, 1976; Teng, 2002), is a rapidly 
developing area in operatios research and management science. The analytical 
hierarchy process (AHP), developed by Saaty (1980), is a technique of 
considering data or information for a decision in a systematic manner 
(Schniederjans and Garvin, 1997). AHP is mainly concerned with the way to solve 
decision problems with uncertainties in multiple criteria characterization. It is 
based on three principles: (1) constructing the hierarchy, (2) priority setting, and 
(3) logical consistency. We apply AHP to weigh the parameters. 
5.3.6 Construction of the Hierarchy 
A complicated decision problem, composed of various attributes of an objective, 
is structured and decomposed into sub-problems (sub-objectives, criteria, 
alternatives, etc.), within a hierarchy.  
5.3.7 Priority Setting 
The relative “priority” given to each element in the hierarchy is determined by 
pair-wise comparisons of the contributions of elements at a lower level in terms of 
the criteria (or elements) with a causal relationship. In AHP, multiple paired 
comparisons are based on a standardized comparison scale of nine levels (see 
Table 1 due to Saaty, 1980). 
Table 1 Scale of relative importance 
Intensity of importance 
Definition of importance 
1 
Equal 
2 
Weak 
3 
Moderate 
4 
Moderate plus 
5 
Strong 
6 
Strong plus 
7 
Very strong or demonstrated 
8 
Very, very strong 
9 
Extreme 
 
www.ebook3000.com

5.3 
Mathematical Modeling 
69
 
Let 
{
}
nc
c
C
,...,
1
=
 be the set of criteria. The result of the pair-wise 
comparisons on n criteria can be summarized in an n × n evaluation matrix A in 
which every element aij is the quotient of weights of the criteria, as shown below: 
 
A = (aij),   i, j = 1, . . . , n.  
 
 
 
  
          (12) 
 
The relative priorities are given by the eigenvector (w) corresponding to the 
largest eigenvalue  
(
max
λ
) as: 
w
Aw
max
λ
=
.                       
 
 
 
 
(13) 
 
When pair-wise comparisons are completely consistent, the matrix A has rank 1 
and 
n
=
max
λ
. In that case, weights can be obtained by normalizing any of the 
rows or columns of  A. 
The procedure described above is repeated for all subsystems in the hierarchy. 
In order to synthesize the various priority vectors, these vectors are weighed with 
the global priority of the parent criteria and synthesized. This process starts at the 
top of the hierarchy. As a result, the overall relative priorities to be given to  
the lowest level elements are obtained. These overall, relative priorities indicate 
the degree to which the alternatives contribute to the objective. These priorities 
represent a synthesis of the local priorities, and reflect an evaluation process that 
permits integration of the perspectives of the various stakeholders involved.  
5.3.8 Consistency Check 
A measure of consistency of the given pair-wise comparison is needed. The 
consistency is defined by the relation between the entries of A; that is, we say A is 
consistent if aik= aij · ajk, for all i,j,k. The consistency index (CI) is: 
.
)1
(
)
(
max
−
−
=
n
n
CI
λ
 
 
 
 
 
 
          (14) 
The final consistency ratio (CR), on the basis of which one can conclude whether 
the evaluations are sufficiently consistent, is calculated to be the ratio of the CI 
and the random consistency index (RI):  
.
RI
CI
CR =
 
 
 
 
 
 
 
          (15) 
 

70 
5   Uncertain Optimal Path for AGV System
 
The value 0.1 is the accepted upper limit for CR. If the final consistency ratio 
exceeds this value, the evaluation procedure needs to be repeated to improve 
consistency. The measurement of consistency can be used to evaluate the 
consistency of decision makers as well as the consistency of all the hierarchies. 
We are now ready to give an algorithm for computing parameter weights using 
the AHP. The following notations are used. 
 
Notations and definitions: 
n: Number of criteria. 
i: Number of parameters. 
p:   Index for parameters,             p=1or 2. 
d:  Index for criteria,                    
D
d ≤
≤
1
. 
pd
R
: The weight of pth item with respect to dth criterion.  
d
w : The weight of dth criterion. 
 
Algorithm 2: PWAHP (compute parameter weights using the AHP). 
Step 1: Define the decision problem and the goal. 
Step 2: Structure the hierarchy from the top through the intermediate to the lowest 
level. 
Step 3: Construct the parameter-criteria matrix using steps 4 to 8 using the AHP. 
{Steps 4 to 6 are performed for all levels in the hierarchy.}   
Step 4: Construct pair-wise comparison matrices for each of the lower levels for 
each element in the level immediately above by using a relative scale 
measurement. The decision maker has the option of expressing his or her intensity 
of preference on a nine-point scale. If two criteria are of equal importance, a value 
of 1 is set for the corresponding component in the comparison matrix, while a 9 
indicates an absolute importance of one criterion over the other (Table 1 shows the 
measurement scale defined by Saaty, 1980). 
Step 5: Compute the largest eigenvalue by the relative weights of the criteria and 
the sum taken over all weighted eigenvector entries corresponding to those in the 
next lower level of the hierarchy. 
Analyze pair-wise comparison data using the eigenvalue technique. Using these 
pair-wise comparisons, estimate the parameters. The eigenvector of the largest 
eigenvalue of matrix A constitutes the estimation of relative importance of the 
attributes. 
 
 
 
 
www.ebook3000.com

5.3 
Mathematical Modeling 
71
 
Step 6:Construct the consistency check and perform consequence weights 
analysis as follows: 
(
)
1
1
2
2
2
1
1
2
1
1
1
n
n
ij
n
n
w
w
w
w
w
w
w
w
A
a
w
w
w
w
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
= ⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
…
…
#
#
%
. 
 
Note that if the matrix A is consistent (that is, aik= aij · ajk, for all 
, ,
1,  2,  ...,  
i j k
n
=
), then we have (the weights are already known), 
.
,...,
2,1
,
          
,
n
j
i
w
w
a
j
i
ij
=
=
 
If the pair-wise comparisons do not include any inconsistencies, then 
max
λ
= n. 
The more consistent the comparisons are, the closer the value of computed 
max
λ
 
is to n. Set the consistency index (CI), which measures the inconsistencies of pair-
wise comparisons, to be: 
(
)
(
)
max
1
n
CI
n
λ
−
=
−
, 
and let the consistency ratio (CR) be: 
100
,
CI
CR
RI
⎛
⎞
=
⎜
⎟
⎝
⎠
 
wheren is the number of columns in A and RI is the random index, being the 
average of the CI obtained from a large number of randomly generated matrices.  
Note that RI depends on the order of the matrix, and a CR value of 10% or less 
is considered acceptable (Saaty, 1980). 
 
Step 7: Form the parameter-criteria matrix as specified in Table 2: 
Table 2 The parameter-criteria matrix. 
 
C1 
C2 
… 
Cd 
parameter 1 
R11 
R12 
… 
R1d 
parameter 2 
R21 
R22 
… 
R2d 

72 
5   Uncertain Optimal Path for AGV System
 
Step 8: As a result, configure the pair-wise comparison for criteria-criteria matrix 
as in Table 3: 
Table 3 The criteria-criteria pair-wise comparison matrix. 
 
C1 
C2 
… 
Cd 
d
w  
Criteria 1 
1 
a12 
… 
a1d 
w1 
Criteria 2 
1/a12 
1 
… 
a2d 
w2 
#  
#  
#
#
#
#  
Criteria d 
1/a1d 
1/a2d 
… 
1 
wd 
 
The 
d
w  are gained by a normalization process. The 
d
w  are the weights for 
criteria. 
Step 9: Compute the overall weights for the parameters, using tables 2 and 3, as 
follows:  
 
,
...
2
parameter 
for
weight
Total
'
,
...
1
parameter 
for 
weight
Total
2
2
22
1
21
1
2
12
1
11
d
d
d
d
w
R
w
R
w
R
w
R
w
R
w
R
×
+
+
×
+
×
=
=
×
+
+
×
+
×
=
=
ψ
ψ
      (16) 
 
where 
ψ
ψ
−
= 1
'
. Note that due to the significance and sensitivity of different 
shops of the same type in any stage the weighing process is performed for each 
arc. Here, we obtain the weights for the parameters of each arc in the proposed 
network. If we consider 
n
C
and 
n
T as normalized cost and time, respectively, 
then the total weighted normalized value of each arc is determined as follows: 
P=
)
'
(
)
(
n
n
C
T
×
+
×
ψ
ψ
. 
 
 
                                       (17) 
 
In the next section, we propose an approach to identify the shortest path in the 
network using the total weighted normalized value for each arc. Before that, 
consider a ranking method for triangular fuzzy numbers. 
5.3.9 Ranking of Triangular Fuzzy Numbers 
Several fuzzy ranking methods have been proposed (Bortalan and Degani, 1985; 
Luis and Antonio, 1989; Kim and Park, 1990). Since the graded mean integration 
representation method (Chen and Hseih, 2000) not only alleviates some 
drawbacks of the existing methods, but also possesses the advantages of being 
easily implementable and quite effective in problem solving (see Lee et al., 2007), 
we will use it to transform the total weighted normalized value of each arc in our 
www.ebook3000.com

5.3 
Mathematical Modeling 
73
 
proposed network. If a =
)
,
,
(
3
2
1
a
a
a
is a triangular fuzzy number, then the 
graded mean integration (
)
~
(a
R
) is defined to be: 
.
6
4
)
~
(
3
2
1
a
a
a
a
R
+
+
=
 
 
 
 
                         (18) 
We apply (18) to transform the fuzzy numbers to crisp values and use them to 
find the optimal path. 
5.3.10 Shortest Path in a Network 
Let G = (V,A) be a graph, where 
{
}
N
V
,...,
1
=
is the set of nodes, and 
V
V
A
×
⊂
is 
the set of arcs. We write
A
j
i
∈
)
,
(
, if there exists an arc from node 
V
i∈
to node
V
j ∈
. Furthermore, let 
0
≥
ijt
denote the distance (or travel time, or any other 
measure of cost) from i to j. If 
A
j
i
∉
)
,
(
,then set 
+∞
=
ijt
. Note that the travel 
time from node i to node j is assumed to be stationary; i.e., independent of the 
actual arrival time at node i. Let fijdenote the length of the shortest-path from i to j 
in the graph. 
It is a well-known principle that every additive deterministic dynamic 
programming formulation can be equivalently viewed as the problem of finding 
the shortest path in a directed network, where the states, decisions, and decision 
costs of the former correspond to the nodes, arcs, and arc lengths of the latter 
(Dreyfus and Law, 1977). It is perhaps for this reason that the task of efficiently 
computing shortest paths is found prominence in the mathematical programming 
literature. Next, we describe a dynamic programming approach for computing the 
optimal path. 
Dynamic programming (DP) was introduced by Bellman (1957). Toth (1980) 
presented the early DP-based approaches and reported numerical experiments with 
a limited success. Hybrid methods, combining dynamic programming and implicit 
enumeration, were developed later. The first approach was developed by Plateau 
and Elkihel (1985). A recent approach, the so-called combo algorithm, is able to 
solve very large instances of up to 10000 variables within less than one second, 
with basically no difference in the required solution times for ‘‘easy’’ and ‘‘hard’’ 
instances (Martello et al., 1999). Marsten and Morin (1978) proposed the first 
hybrid method, which combined heuristic algorithms, dynamic programming and 
branch-and-bound approaches. More sophisticated methods can be found in 
Ibaraki (1987). 
Dynamic programming is a technique to tackle multistage decision processes. 
A given problem is subdivided into smaller subproblems, which are sequentially 
solved until the initial problem is solved by the aggregation of the subproblem 
solutions. In each stage, a set of states is defined. The states would describe all 
possible conditions of the process in the current decision stage, which corresponds 

74 
5   Uncertain Optimal Path for AGV System
 
to every feasible partial solution. The set of all possible states is known as the state 
space. The states of a stage u can be transformed to states of a stage u+1, using a 
transition. A transition indicates the decisions adopted in a stage, and a sequence 
of transitions taken to reach a state starting from another state is known as a 
policy. Dynamic programming approaches can be seen as transformations of the 
original problem to one associated with the exploration of a multistage graph 
G(S,T), where the vertices in S correspond to the state space and the arcs in T 
correspond to the set of transitions, leading to an optimal policy. 
The basis of dynamic programming can be traced to the optimality principle of 
Bellman (2003). The optimality principle states that an optimal policy should be 
constituted by optimal policies from every state of the decision chain to the final 
state. 
Here, we make use of a dynamic programming approach for our proposed 
network to identify the optimal manufacturing path. This model helps the 
manufacturing system to determine the more profitable shops. The advantages of 
such a model are simplicity, the ability to determine the exact optimal value, and 
implementability on sophisticated networks. The backward dynamic model would 
be defined as: 
 
Indices: 
s 
Number of stages;                         s= 0,1,2,…, n. 
i' 
Start node number;                       i'=1,2, …, I; i'=0 (for the start node). 
i 
End node number;                        i=1,2, …, I. 
 
Notations:  
)'(i
s
ϕ
 
The minimum value of moving from node i' in stage s to an end 
node i in stage s-1. 
Pi'i 
Numerical value of an arc between node i' to node i. 
 
Objective function: 
 
( )
{
}
( )
( ).
0
*
),
0
(
).
,...,
2,1,0
(,
stage
in
'
     
,
)'
(
0
'
1
1
layer 
in 
 
ϕ
ϕ
ϕ
ϕ
ϕ
=
=
=
∀
+
=
+
+
i
n
s
s
i
P
i
Min
i
s
i
i
s
s
i
s
    
(19) 
 
Note that 
*
ϕ
 identifies the optimal path.  
www.ebook3000.com

5.4 
Conclusions 
75
 
5.4 
Conclusions 
We proposed an approach for finding an optimal path in a flexible jobshop 
manufacturing system considering two criteria of time and cost. The proposed 
flexible jobshop system has more than one shop with the same duty. The 
difference among shops with the same duty is in their machines with various 
specifications. The shops configure a network in which they are considered as 
nodes and the paths among them are considered as network arcs. An Automated 
Guided Vehicle (AGV) functions as a material handling device through the 
manufacturing network. Time is considered to be a triangular fuzzy number and 
cost is inferred from an expert system considering three parameters of equipment 
sensitivity, operator proficiency, and product specification via linguistic variables. 
As unique contributions of the work, the objective was to find a path which 
minimizes both the time and cost criteria, aggregately. Since time and cost had 
different scales, a normalization process was used to remove the scales and 
because the model was bi-objective, the AHP weighing method was applied to 
gain a single objective. A dynamic programming approach was used to compute a 
shortest path in the proposed network. Finally, the proposed approach was 
illustrated by a numerical example. Various applicability and advantages of the 
proposed model were discussed. The limitations of the research were the work 
load of the AGVs and the defect rate of the guide path. As future research, other 
multi-objective optimization approaches could be tested and compared with the 
proposed method.       
References  
Abdel-Malek, L., Wolf, C.: Evaluating flexibility of alternative FMS designs-A 
comparative measure. Int. J. Prod. Econ. 23(1), 3–10 (1991) 
Aized, T.: Modelling and performance maximization of an integrated automated guided 
vehicle system using coloured Petri net and response surface methods. Computers & 
Industrial Engineering 57(3), 822–831 (2009) 
Barad, M., Sipper, D.: Flexibility in manufacturing systems: Definitions and Petri net 
modeling. Int. J. Prod. Res. 26(2), 237–248 (1988) 
Bastian, A.: Identifying fuzzy models utilizing genetic programming. Fuzzy Sets and 
Systems 113(3), 333–350 (2000) 
Bellman, R.: Dynamic Programming. Princeton University Press, Princeton (1957) 
Bellman, R.: Dynamic Programming. Dover Publications (2003) 
Bortolan, G., Degani, R.: A review of some method for ranking fuzzy subsets. Fuzzy Sets 
and Systems 15, 1–19 (1985) 
Brill, P.H., Mandelbaum, M.: On measures of flexibility in manufacturing systems. Int. J. 
Prod. Res. 27(5), 747–756 (1989) 
Browne, J., Dubois, D., Rathmill, K., Sethi, S.P., Stecke, K.E.: Classification of flexible 
manufacturing systems. FMS Mag. 2(2), 114–117 (1984) 
Buzacott, J.A.: The fundamental principles of flexibility in manufacturing system. In: Proc. 
1st. Int. Conf. on FMS, pp. 23–30 (1982) 

76 
5   Uncertain Optimal Path for AGV System
 
Chandra, P., Tombak, M.M.: Models for the evaluation of routing and machine flexibility. 
Eur. J. Oper. Res. 60, 156–165 (1992) 
Chen, S.H., Hsieh, C.H.: Representation, ranking, distance, and similarity of L-R type 
fuzzy number and application. Aust. J. Intell. Process. Syst. 6(4), 217–229 (2000) 
Das, K., Baki, M.F., Li, X.: Optimization of operation and changeover time for production 
planning and scheduling in a flexible manufacturing system. Computers & Industrial 
Engineering 56(1), 283–293 (2009) 
Delgado, M., Verdegay, J.L., Vila, M.A.: A procedure for ranking fuzzy numbers using 
fuzzy relations. Fuzzy Sets and Systems 26, 49–62 (1988) 
Dooner, M.: Conceptual modeling of manufacturing flexibility. Int. J. Comput. Integr. 
Manuf. 4(3), 135–144 (1991) 
Dreyfus, S.E., Law, A.M.: The Art and Theory of Dynamic Programming. Academic Press, 
New York (1977) 
Dubois, D., Prade, H.: Fuzzy Sets and Systems: Theory and Applications. Academic Press, 
New York (1980) 
Eklin, M., Arzi, Y., Shtub, A.: Model for cost estimation in a finite-capacity stochastic 
environment based on shop floor optimization combined with simulation. European 
Journal of Operational Research 194(1), 294–306 (2009) 
Gen, M., Lin, L., Zhang, H.: Evolutionary techniques for optimization problems in 
integrated manufacturing system: State-of-the-art-survey. Computers & Industrial 
Engineering 56(3), 779–808 (2009) 
Gerwin, D.: Do’s and don’t’s of computerized manufacturing. Harvard Bus. Rev. 60(2), 
107–116 (1982) 
Gupta, D., Buzacott, J.A.: A framework for understanding flexibility of manufacturing 
systems. J. Manuf. Syst. 8(2), 89–97 (1989) 
Gupta, Y., Goyal, S.: Flexibility of manufacturing systems: Concepts and measurements. 
Eur. J. Oper. Res. 43, 119–135 (1989) 
Hsueh, C.F.: A simulation study of a bi-directional load-exchangeable automated guided 
vehicle system. Computers & Industrial Engineering 58(4), 594–601 (2010) 
Ibaraki, T.: Enumerative approaches to combinatorial optimization–Part II. Annals of 
Operations Research 11, 397–439 (1987) 
Jang, J.R.: ANFIS: Adaptive-network-based fuzzy inference system. IEEE Transactions on 
Systems, Man and Cybernetics 23, 665–685 (1993) 
Jang, J.R., Sun, C.: Neuro-fuzzy modeling and control. Proceedings of IEEE 83, 378–405 
(1995) 
Keeney, R., Raiffa, H.: Decision with multiple objectives: Preference and value tradeoffs. 
Wiley and Sons, New York (1976) 
Kim, K., Park, K.S.: Ranking fuzzy numbers with index of optimism. Fuzzy Sets and 
Systems 35, 143–150 (1990) 
Klir, G.J., Yuan, B.: Fuzzy Sets and Fuzzy Logic: Theory and Applications. Prentice-Hall 
(1995) 
Kochikar, V.P., Narendran, T.T.: A framework for assessing the flexibility of 
manufacturing systems. Int. J. Prod. Res. 30(12), 2873–2895 (1992) 
Kulatilaka, N.: Valuing the flexibility of flexible manufacturing systems. IEEE Trans. Eng. 
Manag. 78, 250–257 (1988) 
Kumar, N.S., Sridharan, R.: Simulation modelling and analysis of part and tool flow control 
decisions in a flexible manufacturing system. Robotics and Computer-Integrated 
Manufacturing 25(4-5), 829–838 (2009) 
www.ebook3000.com

References 
77
 
Kumar, V.: Entropic measures of manufacturing flexibility. Int. J. Prod. Res. 25(7), 957–
966 (1987) 
Lee, K.L., Huang, W.C., Teng, J.Y.: Locating the competitive relation of global logistics 
hub using quantitative SWOT analytical method. Quality & Quantity 43(1), 87–107 
(2007) 
Lin, C., Chen, C.: New product Go/No-Go evaluation at the front end: A Fuzzy linguistic 
approach. IEEE Transactions on Engineering Management 51(2), 197–207 (2004) 
Luis, M., Antonio, G.M.: A subjective approach for ranking fuzzy numbers. Fuzzy Sets and 
Systems 29, 145–153 (1989) 
Machacha, L., Bhattacharya, P.: A Fuzzy-logic-based approach to project selection. IEEE 
Transactions on Engineering Management 47(1), 65–73 (2000) 
Mahdavi, I., Nourifar, R., Heidarzade, A., Mahdavi-Amiri, N.: A dynamic programming 
approach for finding shortest chains in a fuzzy network. Applied Soft Computing 9(2), 
503–511 (2009) 
Mandelbaum, M., Buzacott, J.: Flexibility and decision making. Eur. J. Oper. Res. 44, 17–
27 (1990) 
Marsten, R.E., Morin, T.L.: A hybrid approach to discrete mathematical programming. 
Mathematical Programming 14, 21–40 (1978) 
Martello, S., Pisinger, D., Toth, P.: New trends in exact algorithms for the 0–1 knapsack 
problem. European Journal of Operational Research 123, 325–336 (1999) 
Miettinen, K., Eskelinen, P., Ruiz, F., Luque, M.: NAUTILUS method: An interactive 
technique in multiobjective optimization based on the nadir point. European Journal of 
Operational Research 206 (2) 2010, 426–434 (2010) 
Mostafaee, A., Saljooghi, F.H.: Cost efficiency measures in data envelopment analysis with 
data uncertainty. European Journal of Operational Research 202(2), 595–603 (2010) 
Niazi, A., Dai, J.S., Balabani, S., Seneviratne, L.: Product cost estimation: Technique 
classification and methodology review. Journal of Manufacturing Science and 
Engineering 128, 563–575 (2006) 
Pedrycz, W.: Why triangular membership functions? Fuzzy Sets and Systems 64, 21–30 
(1994) 
Plateau, G., Elkihel, M.: A hybrid method for the 0–1 knapsack problem. Methods of 
Operations Research 49, 277–293 (1985) 
Saaty, T.L.: The Analytic Hierarchy Process. McGraw-Hill, New York (1980) 
Sadeghpour Gildeh, B., Gien, D.: La distance-Dp,q et le cofficient de corrélation entre deux 
variables aléatoires floues. In: Actes de LFA 2001, Monse, Belgium, pp. 97–102 (2001) 
Schniederjans, M.J., Garvin, T.: Using the analytic hierarchy process and multi-objective 
programming for the selection of cost drivers in activity based costing. European 
Journal of Operational Research 100, 72–80 (1997) 
 
 

 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
79 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_6 
 
Chapter 6 
Cross Entropy Model for AGV Routing Time 
6.1 
Summary 
Today, in order to survive in the rapid challenging environment of the modern 
manufacturing era, manufacturers are forced to adopt new technologies, especially 
for products that are made in small batch production. Automated Guided Vehicles 
(AGV) has been applied for the automated manufacturing system. In industrial 
application, manufacturing factory is brought the mobile vehicle to incorporate 
working with other machine in order to being the automated manufacturing 
system (Arai et al., 2002).Advanced automated manufacturing systems are widely 
used in industrial companies where productivity objectives have to be met. These 
systems often being costly, they must be designed to be as efficient as possible. 
Here, an automated manufacturing system in a job shop layout considering AGV 
as a material handling resource is focused. The key issue in manufacturing 
operations is how to produce high quality products at low costs in such a way that 
the diversified demand is met. Hence, modern manufacturing companies should 
become as responsive as possible in order to satisfy customer demands. Material 
handling accounts for 30–75% of the total cost of a product, and efficient material 
handling can result in reducing the manufacturing system operations cost by 15–
30% (Sule, 1994). These points underscore the importance of material handling 
costs reduction as a key element in improving the cost structure of a product. The 
determination of a material handling system involves both the selection of suitable 
material handling equipment and the assignment of material handling operations 
to each individual piece of equipment. Hence, material handling system selection 
can be defined as the selection of material handling equipment to perform material 
handling operations within a working area considering all aspects of the products 
to be handled.The material handling system plays a crucial role in automated 
manufacturing systems. When inadequately designed, the material handling 
system indeed can adversely affect the overall performance of the system and lead 
to substantial losses in productivity and competitiveness, and to unacceptably long 
lead times. Thus, to avoid such pitfalls, material handling system design must be 
integrated into the overall design of the manufacturing system centering on the 
selection of machines and the allocation of operations to the machines (Butdee and 
www.ebook3000.com

80 
6   Cross Entropy Model for AGV Routing Time
 
Suebsomran, 2006; Shirazi et al., 2010).Automated guided vehicle is an intelligent 
machine that has ‘intelligence’ to determine its motion status according to the 
environmental conditions systems. AGVs are advanced material handling devices 
extensively used in automated manufacturing systems (AMS) to transport 
materials among workstations (Vis, 2006). 
Automated manufacturing systems (AMSs), equipped with several CNC 
machines and an AGV-based material handling system, are designed and 
implemented to secure automation and gain efficiency of production. To achieve 
these benefits, the planning in the AMS decision making process is critical 
because the planning decision has an influence on the subsequent decision 
processes such as scheduling, dispatching, etc. Subtasks are classified into two 
types for material processing and delivery. To pursue a global optimization of 
material processing and transportation cost, a manufacturing plan should consider 
the two costs simultaneously. Moreover, to obtain a better solution for subsequent 
decision making processes, not only total workloads are evenly distributed among 
the workstations, but workloads are well balanced among AGV’s network 
segments. Many factories were adopted it into assembly line or production line 
such as automobile, food processing, wood working, port container terminal, and 
other factories.  
The cross-entropy (CE) method is a general Monte Carlo approach to 
combinatorial and continuous multi-extremal optimization(De Boer et al., 2005). 
The method originated from the field of rare event simulation (Rubinstein, 1997), 
where very small probabilities need to be accurately estimated, for example in 
network reliability analysis, queuing models, or performance analysis of 
telecommunication systems. The CE method can be applied to static and noisy 
combinatorial optimization problems such as the traveling salesman problem, the 
quadratic assignment problem, DNA sequence alignment, the max-cut problem 
and the buffer allocation problem, as well as continuous global optimization 
problems with many local extrema (Rubinstein, 1999). 
 
In a nutshell the CE method consists of two phases: 
 Generate a random data sample (trajectories, vectors, etc.) according to a 
specified mechanism. 
 Update the parameters of the random mechanism based on the data to 
produce a "better" sample in the next iteration. 
 
Here, we aim to obtain the total material handling time for an AGV while the 
AGV activity times are stochastic. Due to importance of material handling in 
manufacturing systems specially AMS, estimating the material handling time is 
substantial for planning purposes to cover demands considering the capability and 
availability of the machines and equipment.  
Automated Guided Vehicle has firstly developed and conducted as a research 
by (Butdee and Suebsomran, 2006 and 2007; Butdee et al., 2006) in the attempt to 
be used at Jumbo Truck Manufacturing in Thailand. An AGV need to sense its 
environment to be able to plan its operations and then act based on this plan.  
Thus, an AGV system possesses more flexibility and capacity then other 

6.1 
Summary 
81
 
conventional material-handling systems and plays an important role in AMS 
(Reveliotis, 2000).  
An automated guided vehicle system enables flexible material routing and 
dispatching, and is especially suited for flexible manufacturing environments in 
which product mix and priorities may continuously vary (Dubois, 1983). An AGV 
based material handling system is designed and implemented to gain production 
the flexibility and efficiency (Co and Wysk, 1986; Suri and Hildebrant, 1984; 
Dallery and David, 1984). There are four basic AGV material flow configurations: 
conventional network, unidirectional loop network, tandem configuration and 
segmented loop topology (Asef-Vaziri and Laporte, 2005). For tandem layout we 
can point to a recent work by Shirazi et al., (2010) where they illustrated a non-
linear multi-objective problem for minimizing the material flow intra and inter-
loops and minimization of maximum amount of inter cell flow, considering the 
limitation of tandem automated guided vehicle (TAGV) work-loading.  
The use of AGV has increased considerably since their introduction in the 
1950s, along with the number of AGV application areas and types (Vis, 2006). As 
the complexity and size of AGVS applications increase, evaluating performance 
becomes more difficult. The last decade has also seen great progress in control 
methodologies of autonomous multi-robot systems (Buzacott, 1999). The 
objective of optimization model is the minimization of the total distance traveled 
by vehicles to transport the material handling system. The route planning of AGVs 
in FMS was proposed by (Co and Wysk, 1986; Suri and Hildebrant, 1984; Dallery 
and David, 1984). Authors in (Co and Wysk, 1986) presented the new approach 
for dynamic route planning and scheduling problem of AGVs. They applied the 
search algorithm and some heuristic rules to solve the route assignment in 
dynamic situations. Suri and Hildebrant (1984) also proposed the path planning 
strategy of AGV to navigation, collision avoidance and docking to the target. The 
path planning was implemented on-board computer in order to avoid the wire-
guided path. Not only the AGV was moved along the path with collision 
avoidance, but also it should be navigated with no deadlock condition as done by 
Srinivasan et al. (1994).  
For an AMS, it is desirable to be able to increase or decrease the product with the 
rise and fall of demand. Therefore, Fazlollahtabar et al. (2010) proposed a flexible 
jobshop automated manufacturing system to optimize the material flow. The flexibility 
was on the multishops of the same type and also multiple products that can be 
produced. An AGV was applied for material handling. The objective was to optimize 
the material flow regarding the demand fluctuations and machine specifications.  
Application of cross entropy (CE) method to rare event simulation has been 
studied to obtain an accurate estimation of very small probabilities. CE mainly uses 
various importance sampling schemes to estimate rare event probabilities in 
Markovian systems such as Markovian reliability models and Jackson 
networks.Kaynar and Ridder (2010), present a general state-dependent importance 
sampling method which partitions the state space and applies the cross entropy 
method to each partition. They investigated two versions of their proposed algorithm 
and employed them in several examples of reliability and queuing models.  
www.ebook3000.com

82 
6   Cross Entropy Model for AGV Routing Time
 
6.2 
Statement of the Problem 
We consider a jobshop manufacturing system make use of AGV for material 
handling purpose as shown in Figure 1. Since uncertainty is elusive in automated 
manufacturing systems, the activities' times are stochastic and follow statistical 
distributions. The statistical distribution of each AGV activity is considered for 
obtaining the total material handling time. The activities that the AGVs perform in 
material handling process are such as direct movement, waiting, pickup/delivery, 
breakdown, etc. These activities are accompanied with time span. These time 
spans follow statistical distributions due to uncertainty and stochastic nature of 
automated equipment such as AGV. Therefore, the collected data (activity times) 
are considered by goodness of fit technique to obtain the probability distribution 
function. 
 
 
Fig. 1 A configuration of AGV-based jobshop manufacturing system 
The material handling begins with taking the raw materials from the depot and 
moving to the shops considering the production plan and job sequences to produce 
the final product. Products are in batches. Since, material handling activities for 
each shop are effective on the total material handling time, all the shops' activities 
should be considered, i.e., the total AGV material handling time is an aggregation 
of all shops' activities.  
The aim here is to obtain the AGV total stochastic material handling time. 
While the times are considered to follow statistical distributions, we need to 

6.3 
Mathematical Model 
83
 
propose special techniques to obtain the total AGV material handling time. Our 
proposed approach is called heuristic statistical method (HSM). The flowchart of 
the proposed methodology to consider AGV stochastic activity times to obtain 
total material handling time is shown in Figure 2. To analyze the system, the data 
are collected for each activity. Then, the collected data are tested via goodness of 
fit technique to clarify the probability distribution function (pdf). If the goodness 
of fit technique does not provide a known pdf, then cross entropy (to be discussed 
later) approach is used. If the pdfs are known and same, i.e., all activity times 
follow exponential distribution functions, the HSM is employed to find total 
material handling time. Again, if the pdfs are not same, then cross entropy 
approach is used. Both HSM and cross entropy approach are verified using 
simulation study. 
6.3 
Mathematical Model 
To model the problem, we consider a simple case in which an AGV is assumed to 
do the material handling with two activities of direct movement and waiting 
showing by X and Y, respectively. The probability distribution for each activity is 
exponential as follows: 
 
)
(λ
EXP
X ≈
,   
 
 
 
 
 
            (1)  
and the corresponding probability density function is, 
x
e
X
f
λ
λ
−
=
)
(
,  
 
 
 
 
 
            (2) 
Also,  
)
(λ
EXP
Y ≈
,  
 
 
 
 
 
            (3) 
y
e
Y
f
λ
λ
−
=
)
(
.  
 
 
 
 
 
            (4) 
 
To obtain the total handling time, we need to investigate the joint distribution 
function of X and Y. Since they are times, then they are independent. Thus, the 
joint density function of independent variables is equal to the products of their 
density functions, as follows: 
)
(
)
(
)
,
(
Y
f
X
f
Y
X
f
×
=
, 
 
 
 
 
            (5) 
and thus we want to obtain,  
?
)
,
(
=
<
<
w
Y
z
X
f
  
 
 
 
 
            (6) 
 
This problem is easily solved using the distribution function integral of each 
variable due to independent variables. But we are looking for a density function to 
illustrate the total handling time of the AGV. Therefore, we apply cumulative 
distribution function technique. 
www.ebook3000.com

84 
6   Cross Entropy Model for AGV Routing Time
 
 
Fig. 2 Flowchart of the proposed methodology 
 
Data collection 
Goodness of fit 
Known probability distribution functions? 
No 
Yes 
Are the probability distribution functions same? 
Yes 
No 
Use HSM approach to obtain total 
AGV material handling time 
Use CE approach to obtain total 
AGV material handling time 
Validation by simulation study  
Termination 

6.3 
Mathematical Model 
85
 
Here, we want to know what the distribution function of 
Y
X
W
+
=
is, i.e., 
what the cumulative distribution function of X and Y is. The space of this 
cumulative function is shown in Figure 3. 
 
Fig. 3 The space representation of the cumulative function 
 
We have, 
 
y
x
e
e
Y
f
X
f
Y
X
f
λ
λ
λ
λ
−
−
×
=
×
=
)
(
)
(
)
,
(
, 
 
 
            (7) 
 
)
(
)
(
)
(
a
Y
X
P
a
W
P
a
FW
<
+
=
<
=
,  
 
 
            (8) 
 
(
)
a
a
a
x
a
a
a
a
a
x
x
a
x
y
x
ae
e
dx
e
e
dx
e
e
dydx
e
e
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
−
−
−
−
−
−
−
−
−
−
−
−
=
−
=
−
=
×
∫∫
∫
∫
∫
1
1
0
0
0
0
0
)
(
.       (9) 
Now, we set partial derivative to obtain the summation density function, 
 
(
)
(
)
0
,
!1
)
(
)
(
1
2
2
>
=
=
−
−
=
=
−
−
−
−
−
a
a
e
ae
ae
e
e
da
a
dF
a
f
a
a
a
a
a
W
W
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
λ
.     (10) 
Therefore, the obtained density function for W follows Erlang probability 
distribution with λ and 
2
=
α
.  
 
www.ebook3000.com

86 
6   Cross Entropy Model for AGV Routing Time
 
Note that the Erlang probability density function is, 
 
0
,
,
)1
(
)
,
;
(
1
≥
−
=
−
−
λ
α
λ
λ
α
λ
α
α
x
e
x
x
f
x
. 
 
 
 
          (11) 
 
As a result, if X1, X2,…, Xn are independent exponential random variables with λ , 
then 
∑
=
=
n
i
i
X
Y
1
 follows Erlang distribution with λ  and 
n
=
α
. 
 
To minimize the total AGV handling time, we have to investigate the minimum 
cumulative distribution function. Therefore, in an easy case, we consider, 
)
(
1λ
EXP
X ≈
, 
)
(
2
λ
EXP
Y ≈
 and we are looking for 
(
)
Y
X
W
,
min
=
. We 
apply the cumulative distribution function, as follows: 
 
(
)
(
)
(
) =
>
×
>
−
=
>
>
−
=
>
−
=
>
−
=
)
(
)
(
1
,
1
)
,
min(
1
)
(
1
)
(
a
Y
P
a
X
P
a
Y
a
X
P
a
Y
X
P
a
W
P
a
FW
 
(
)
a
a
a
e
e
e
)
(
2
1
2
1
1
1
λ
λ
λ
λ
+
−
−
−
−
=
×
−
.  
 
 
                                       (12) 
 
Here, we set the derivative of the cumulative distribution function to obtain the 
density function, as below: 
(
)
0
,
)
(
)
(
)
(
2
1
2
1
≥
+
=
=
+
−
a
e
da
a
dF
a
f
a
W
W
λ
λ
λ
λ
. 
 
          (13) 
 
As a result, if X1, X2,…, Xn are independent exponential random variables with 
n
λ
λ
λ
,...,
,
2
1
, then 
(
)
n
X
X
X
W
,...,
,
min
2
1
=
 follows exponential distribution 
with 
n
λ
λ
λ
λ
+
+
+
=
...
2
1
. 
This result is reliable when all the activities' probability distributions are 
exponential, but if the distributions are different, then we have to explore another 
approach.  
To break through the model when the pdfs are different or even when the pdfs are 
not known, a cross entropy algorithm is proposed and developed in next section. 
6.3.1 Cross Entropy (CE) 
Due to the drawback of our heuristic proposed approach to aggregate stochastic 
AGV activity times when the probability distribution functions are different, we 
employ cross entropy to break through the problem.  

6.3 
Mathematical Model 
87
 
Let 
{
}
n
X
X
X
,...,
1
=
 be a random vector taking values in some space χ . Let 
(
))
(.;v
f
 be a family of probability density functions (pdfs) on χ , with respect to 
some base measure μ , where v is a real-valued parameter (vector). Thus, 
 
∫
=
Ε
χ
μ
)
(
)
;
(
)
(
)
(
dx
v
x
f
X
H
X
H
, 
 
 
 
          (14) 
 
for any function H. Note that E stands for expected value. For simplicity
)
(dx
μ
is 
considered to bedx. Let S be some real function on χ .  
Suppose we are interested in the probability that S(X) is greater than or equal to 
some real number ξ  - we consider it as AGV activity time- under f(.;u). This 
probability can be expressed as 
(
)
{
}
ξ
ξ
≥
=
≥
Ρ
=
)
(
E
)
(
X
S
u
u
I
X
S
l
, 
 
 
 
          (15) 
 
Where I is an indicator random variable. A straightforward way to estimate l is to 
use Monte Carlo simulation. Draw a random sample
n
X
X ,...,
1
 from f(.;u); then 
{
}
∑
=
≥
N
i
X
S
i
I
N
1
(
1
ξ ,  
 
 
 
 
 
          (16) 
is an unbiased estimator of l. This way is a time consuming simulation effort. An 
alternative way is based on importance sampling (Smith et al., 1997; Srinivasan, 
2002). Take a random sample
n
X
X ,...,
1
 from an importance sampling density g 
on χ , and estimate l using the likelihood ratio estimator. 
{
}
∑
=
≥
=
N
i
i
i
X
S
X
g
u
X
f
I
N
l
i
1
)
(
)
(
)
;
(
1
ˆ
ξ
. 
 
 
 
 
          (17)  
 
The best way to estimate l is to use change of measure with density 
{
}
l
u
x
f
I
x
g
x
S
)
;
(
)
(
)
(
ξ
≥
∗
=
. 
 
 
 
 
          (18) 
 
Therefore, we obtain from (17) 
{
}
l
X
g
u
X
f
I
i
i
X
S
i
=
∗
≥
)
(
)
;
(
)
(
ξ
,  
for all i.  
 
                         (19) 
www.ebook3000.com

88 
6   Cross Entropy Model for AGV Routing Time
 
l is a constant value with zero variance. Here, the problem is that g* depends on 
the unknown parameter l. it is convenient to choose a g in the family of densities
{
})
(.;v
f
. Now, we need to choose the reference parameter v such that the 
distance between the density g* in (18) and f(.;v) is minimal. A usual measure of 
distance between two densities, say g and h, is the Kullback-Leibler distance 
(Kullback and Leibler, 1951; Kullback, 1959) or the cross entropy between g and 
h. The Kullback-Leibler distance is defined as, 
∫
∫
−
=
Ε
=
=
dx
x
h
x
g
dx
x
g
x
g
X
h
X
g
h
g
g
)
(
ln
)
(
)
(
ln
)
(
)
(
)
(
ln
)
,
(
D
.        (20) 
Minimizing the Kullback-Leibler distance between g* in (18) and f(.;v) is 
equivalent to choosing v such that ∫
∗
−
dx
v
x
f
x
g
)
,
(
ln
)
(
is minimized, which 
is solving the following maximization problem, 
∫
∗
dx
v
x
f
x
g
v
)
,
(
ln
)
(
max
, 
 
 
 
 
          (21)  
 
Substituting g* from (18) into (21) we obtain the maximization program 
{
}
∫
≥
dx
v
x
f
l
u
x
f
I
x
S
v
)
,
(
ln
)
;
(
max
)
(
ξ
, 
 
 
 
          (22) 
 
which is,  
{
}
)
,
(
ln
max
)
(
D
max
)
(
v
x
f
I
x
x
S
u
v
v
ξ
≥
Ε
=
.  
 
 
          (23) 
 
Again, using importance sampling with a change of measuref(.;w) we can rewrite 
(23) as 
{
}
)
,
(
ln
)
,
;
(
max
)
(
D
max
)
(
v
x
f
w
u
X
W
I
v
X
S
w
v
v
ξ
≥
Ε
=
, 
 
          (24) 
 
for any reference parameter w, where, 
)
,
(
)
,
(
)
,
;
(
w
x
f
u
x
f
w
u
x
W
=
,  
 
 
 
 
          (25) 
Is the likelihood ratio at x, between f(.;u) and f(.;w). The optimal solution of (24) 
can be written as: 
{
}
)
;
(
ln
)
,
;
(
max
arg
)
(
v
X
f
w
u
X
W
I
v
X
S
w
v
ξ
≥
∗
Ε
=
, 
 
          (26) 
We can solve v* by solving the following stochastic program 
{
}
∑
=
≥
=
N
i
i
i
X
S
v
v
v
X
f
w
u
X
W
I
N
v
i
1
)
(
)
;
(
ln
)
,
;
(
1
max
)
(
Dˆ
max
ξ
. 
          (27) 
where
n
X
X ,...,
1
 is a random sample from f(.;w).  
 

6.3 
Mathematical Model 
89
 
this way we obtain an estimated probability for stochastic AGV activity time. 
While these probabilities are real values, we can obtain the aggregated value by 
simple adding all activities' times. Here, all stochastic times from various 
probability distribution functions can be aggregated by CE algorithm to compute 
the total AGV material handling time. A substantial advantage of the proposed CE 
algorithm is to be capable for data collections without any known probability 
distribution function. The following algorithm is composed to facilitate the CE 
computations: 
 
Algorithm 1. Cross entropy method for aggregating various probability 
distribution functions 
 
Step 1. Define
u
v =
0ˆ
. Set t=1 (iteration) 
Step 2. Generate a sample 
n
X
X ,...,
1
 from density f(.;vt-1) and compute the 
sample (1-q)-quantile
tξˆ  of the performances according to 
⎡
⎤
(
)
N
q
t
S
)
1
(
ˆ
−
=
ξ
, 
provided 
tξˆ is less thanξ . Otherwise set 
ξ
ξ =
tˆ
. 
Note that, 
(
)
q
X
S
t
vt
≥
≥
Ρ
−
ξ
)
(
1
,  
(
)
q
X
S
t
vt
−
≥
≤
Ρ
−
1
)
(
1
ξ
. 
Step 3. Use the same sample 
n
X
X ,...,
1
to solve the stochastic program  
 
{
}
∑
=
−
≥
=
N
i
i
t
i
X
S
v
v
v
X
f
v
u
X
W
I
N
v
t
i
1
1
ˆ
)
(
)
;
(
ln
)
ˆ
,
;
(
1
max
)
(
Dˆ
max
ξ
. 
Denote the solution by
tvˆ . 
Step 4.If 
ξ
ξ <
tˆ
, set t=t+1 and reiterate from Step 2. Else proceed with Step 5. 
Step 5. Estimate probability l using likelihood ratio estimate 
 
{
}
∑
=
≥
=
N
i
T
i
X
S
v
u
X
W
I
N
l
i
1
)
(
)
ˆ
,
;
(
1
ˆ
ξ
. 
where T denotes the final number of iterations. 
 
 
Next section presents verification and validation of both HSM and CE approach 
for an AGV-based jobshop manufacturing system. The most significant advantage 
of our proposed heuristic method and CE is to be helpful when the data are few.  
www.ebook3000.com

90 
6   Cross Entropy Model for AGV Routing Time
 
6.4 
Conclusions 
Here, a heuristic statistical technique to compute total stochastic material handling 
time in an automated guided vehicle (AGV) equipped jobshop manufacturing 
system was proposed. With respect to stochastic times of AGVs material handling 
process, each activity was associated with a probability distribution. Using the 
probability distributions, we modeled the AGV material handling problem using a 
heuristic statistical method (HSM) when the activities' probability distribution 
functions are same. To model the problem when the activities' probability 
distribution functions are different, a cross entropy algorithm is developed. The 
problem was investigated and implemented in two cases with same probability 
distributions and different ones. The effectiveness of the proposed model was 
validated in an example. An experimental test problem was worked out for each of 
the cases. For the second case, to verify the obtained probability distribution of the 
total AGV handling time, we applied chi-square and Kolmogorov-Smirnov 
goodness-of-fit tests. The simulation was also implemented by several softwares 
to analyze their behaviors for the proposed problem ensuing to better performance 
of ARENA. The computations validated by simulation illustrated the efficiency of 
the HSM approach in the case while all distributions were same and the CE 
method for the case having different probability distributions of activities.  
References 
Arai, T., Pagello, E., Parker, L.E.: Guest editorial, Special issue on advancement in multi-
robot systems. IEEE Trans. RA 18(5), 655–662 (2002) 
Asef-Vaziri, A., Laporte, G.: Loop-Based Facilities Planning and Material Handling. 
European Journal of Operational Research 164(1), 1–11 (2005) 
Butdee, S., Suebsomran, A.: Learning and recognition algorithm of intelligent AGV 
system. In: Proceedings of the Global Congress on Manufacturing and Management, 
Santos, Brazil, pp. 13–72 (2006) 
Butdee, S., Suebsomran, A.: Localization Based on Matching Location of AGV. In: 
Proceeding of the 24th International Manufacturing Conference, IMC24, pp. 1121–
1128. Waterford Institute of Technology, Ireland (2007) 
Butdee, S., Vignat, F., Suebsomran, A.: Self-alignment control of an automated unguided 
vehicle. In: Proceedings of the 6th International Conference on Integrated Design and 
Manufacturing in Mechanical Engineering, Grenoble, France, pp. 48–64 (2006) 
Buzacott, J.A.: The structure of manufacturing systems: insights on the impact of 
variability. International Journal of Flexible Manufacturing System 11, 127–146 (1999) 
Co, H.C., Wysk, R.A.: Robustness of CAN-Q in modeling automated manufacturing 
systems. International Journal of Production Research 24(6), 1485–1503 (1986) 
Dallery, Y., David, R.: Some new results on operational analysis. In: Galenbe, E. (ed.) 
Performance, vol. 84. Elsevier Science Publishers, B.V., Amsterdam (1984) 
De Boer, P.T., Kroese, D.P., Mannor, S., Rubinstein, R.Y.: A Tutorial on the Cross-
Entropy Method. Annals of Operations Research (2005) 

References 
91
 
Dubois, D.: A mathematical model of a flexible manufacturing system with limited in-
process inventory. International Journal of Production Research 14(3), 66–78 (1983) 
Fazlollahtabar, H., Rezaie, B., Kalantari, H.: Mathematical programming approach to 
optimize material flow in an AGV-based flexible jobshop manufacturing system with 
performance analysis. International Journal of Advanced Manufacturing Technology 51, 
1149–1158 (2010) 
Kaynar, B., Ridder, A.: The cross-entropy method with patching for rare-event simulation 
of large Markov chains. European Journal of Operational Research 207, 1380–1397 
(2010) 
Kullback, S.: Information theory and statistics. John Wiley and Sons, NY (1959) 
Kullback, S., Leibler, R.A.: On Information and Sufficiency. Annals of Mathematical 
Statistics 22(1), 79–86 (1951) 
Papadopoulos, H.T., Heavy, C.: Invited review: queueing theory in manufacturing systems 
analysis and design. A classification of models for production and transfer lines. 
European Journal of Operational Research 92, 1–27 (1996) 
Reveliotis, S.A.: Conflict resolution in AGV systems. IIE Trans. 32, 647–659 (2000) 
Rubinstein, R.Y.: Optimization of Computer simulation Models with Rare Events. 
European Journal of Operations Research (1997) 
Rubinstein, R.Y.: The simulated entropy method for combinatorial and continuous 
optimization. Methodology and Computing in Applied Probability (1999) 
Shirazi, B., Fazlollahtabar, H., Mahdavi, I.: A six sigma based multi-objective optimization 
for machine grouping control in flexible cellular manufacturing systems with guide-path 
flexibility. Advances in Engineering Software 41, 865–873 (2010) 
Smith, P.J., Shafi, M., Gao, H.: Quick simulation: A review of importance sampling 
techniques in communication systems. IEEE J. Select. Areas Commun. 15, 597–613 
(1997) 
Srinivasan, M.M., Bozer, Y.A., Chao, M.: Trip-based material-handling systems. 
Throughput capacity analysis. IIE Trans. 26(1), 70–89 (1994) 
Srinivasan, R.: Importance sampling - Applications in communications and detection. 
Springer, Berlin (2002) 
Sule, D.R.: Manufacturing Facilities: Location, Planning, and Design. PWS, Boston (1994) 
Suri, R., Hildebrant, R.R.: Modeling flexible manufacturing systems using mean value 
analysis. Journal of Manufacturing Systems 3(1), 21–38 (1984) 
Vis, I.F.A.: Survey of research in design and control of automated guided vehicle systems. 
European Journal of Operational Research 170, 677–709 (2006) 
 
 
www.ebook3000.com

 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
93 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_7 
 
Chapter 7 
Neuro-Fuzzy-Regression Expert System for 
AGV Optimal Path 
7.1 
Summary 
According to Turban and Aronson (1998), a decision support system (DSS) is a 
computer-based information system combining models and data in an attempt to 
solve non-structured problems with extensive user involvement. They advocated 
that an expert system (ES) was a computer system that applied reasoning 
methodologies on knowledge to render advice or recommendations much like a 
human expert. When expert system technology was first applied to decision-
making problems, it fell short in several respects. Early expert systems were rule-
based and thus were not capable of handling the classical DSS functions being 
more computational than logical. Recently, artificial intelligence researchers have 
noted the necessity for using statistical techniques to build intelligent decision 
support systems (Nolan, 1998; Weiss and Kulikowski, 1991). Examples of such 
statistical techniques include fuzzy logic, neural networks, rule induction and 
various Bayesian techniques. Turban and Aronson (1998) believe that although 
uncertainty is widespread in the real world, but practical treatment in artificial 
intelligence is very limited.  
Cost estimation plays a very important role in design and production stages as 
well as a fairly important role in company business decision-making. Effective 
cost estimation can contribute to an optimal design leading to customers’ 
satisfaction due to cost reduction, improved quality and timely delivery (Wu and 
Zhou, 2005). 
Manufacturing costs in products are very crucial in decision making and 
strategic planning. With respect to cost estimation, research and development 
departments were mainly concerned with the estimate of the total cost for the 
finished product (Vis, 2006). Moreover, engineers often applied rules of thumb as 
the cost estimation benchmarks, making the results controversial in terms of 
accuracy (Khayat et al., 2006). Although calculation by cost model has the 
advantage of timeliness, only representative values exclusive of indirect tasks cost 
and raw materials cost are calculated resulting in inadequate estimation accuracy. 
Niazi et al. (2006) pointed out that back propagation network (BPN) could be 

94 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
applied for training to deduce unprecedented problems by accumulated knowledge 
and information. Specially, it can find out solutions in uncertain circumstances 
and has satisfactory results in dealing with nonlinear problems. Therefore, BPN is 
one of the most popular neural network models being applied and it properly fits 
the nature of product cost estimation. McKim (1993) proposed a discussion on 
applying BPN in cost estimation projects. Finally, by integrating a user interface, 
the demand of a fast response cost estimation model was met at the initial product 
development stage. 
Cavalieria et al. (2004) on the spare parts cost estimation in auto industry 
pointed out that, at the final stage of the product life cycle, most product costs 
continuously rise because they are determined at the product concept design stage. 
Yang and Lin (1997), Rehman and Guenov (1998) and Gayretli and Abdalla 
(1999) also pointed out time and again that the product design initial stage 
determined 70–80% of the total product cost. 
Cost affects sales price, sale volume and profit most directly. In addition, 
Vrbsky (1997) pointed out that the research and development design cost often 
accounted for almost 50% of the product development cost and was an important 
factor determining whether the product total cost would be reasonable or not. For 
the same reason, accurately estimated design cost cannot only help reduce the 
capital-losing risks in the product research and development process but also can 
shorten the product development time period. Such methods can really reduce the 
expense for product development (Ghasemzadeh et al., 2009). 
The automotive industry operates in a very competitive market which requires 
controlling product costs, improving the product quality and shortening the 
development lead time. Cost estimation requires quality data and information. Roy 
et al. (2011) presented the various data and information requirements for detailed 
cost estimating in automotive industry. The research project has identified the 
common cost estimation process model within the identified industry sector. The 
study identified the types of data and information requirements for cost estimating. 
It has also constructed the relevant data infrastructure as the basis for a Web 
Portal, which was the physical presentation of the information infrastructure. 
Multiple sources of data collection techniques were employed to identify the types 
of data needed for detailed cost estimates within a manufacturing company.  
Quintana and Ciurana (2011) proposed a machine tool selection problem 
consisting of selecting the most suitable machine to satisfy manufacturing 
company requirements. The main goal of the work was to develop a cost 
estimation support tool for vertical high speed machining centers based on final 
part and productivity requirements of the company linked with machine tool 
characteristics available in the catalogues in order to apply the cost model and to 
calculate machine tool cost estimations. The cost model presented was based on 
multiple regression analyses and provided reasonably accurate market cost 
predictions. Applying the proposed cost model will help the user to determine the 
approximate market cost of the machine and can be especially interesting for 
decision makers in the preliminary stages of a selection process because it avoids 
long and costly studies. 
www.ebook3000.com

7.1 
Summary 
95
 
Flexible material handling systems (MHS) have been widely used to enhance 
productivity involved with product proliferation, and thus far, only fixed-track 
MHSs such as Eton systems in the apparel industry are commonly used. Dai and 
Lee (2012) explored the economic feasibility of a flexible MHS using free-ranging 
automated guided vehicles (AGV) with a local positioning system (LPS) for the 
apparel industry. A component-based and modified activity-based costing 
methodology was proposed to estimate the additional cost of adopting flexible 
MHSs, and then the internal rate of return (IIR) and payback periods were applied 
to evaluate the project economic performance.  
Accurate cost estimation plays a significant role in industrial product 
development and production. Deng and Yeh (2011) applied least squares support 
vector machines (LS-SVM) method solving the problem of estimating the 
manufacturing cost for airframe structural projects. They evaluated the estimation 
performance using back-propagation neural networks and statistical regression 
analysis.  
Product cost estimation varies widely ranging from standard spare parts 
manufacturing cost estimation to the cost analysis of the optimized technology and 
marketing fees of highly customized assembled products, with appropriate product 
estimation models available from the product concept design stage to the product 
design cycle’s final stages. Zhang et al. (1996) categorized cost estimation 
techniques into traditional detailed breakdown, simplified-breakdown, group-
technology-based, regression-based and activity-based cost approaches. Ben-Arieh 
and Qian (2003) divided cost estimation models into intuitive, analogical, 
parametric and analytical approaches. Shehab and Abdalla (2001) proposed 
intuitive, parametric, variant-based and generative cost estimating approaches. 
Cavalieria et al. (2004) provided three cost analyses of analogy-based, parametric 
and engineering approaches. Niazi et al. (2006), on the basis of the integrated cost 
estimation approaches, categorized the qualitative and quantitative cost estimation 
techniques along with key advantages and limitations of each cost estimation 
technique. 
Here, we employ soft computing techniques for configuring an expert system in 
the presence of uncertainty. The purpose of our study is to design a cost estimation 
model for an AGV based automated manufacturing system. We choose three main 
factors accompanied by their sub-factors and then propose a neural network based 
approach to analyze the effects of the sub-factors on the main factors. Due to 
uncertainty of cost elements in manufacturing environment, we apply fuzzy logic 
to determine an appropriate range for each of the linguistic variables. Then, using 
the linguistic variables, we extract the possible fuzzy rules and using a multiple 
linear regression analysis we investigate the significant rules and eliminate 
inappropriate ones. A sensitivity analysis is considered along with the regression 
method. We then use a dynamic programming approach to find an optimal path 
for the proposed manufacturing system.  
 

96 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
7.2 
Statement of the Problem 
Consider a jobshop layout which applies an AGV for material handling. The AGV 
carries raw material, semi-produced and finished products in batch sizes. Due to 
mounting demands, advancing technology, and rising production capacity, the 
need for increasingly more shops is mounting over time. The new shops are 
expected to have more advanced machines. Therefore, more than one shop with 
the same duty are evolved. The difference among shops having the same duty 
shows up in the shop's specificities that affect the production cost. As a result, the 
system would consider a flexible jobshop model where multi shops of the same 
duty exist and each operation can be processed on any type of machine in any 
shop. The sequences of jobs are specified and the jobs are assumed to be 
independent.  
The structure of such a problem would configure a network. In this network, 
the nodes are the shops and the arcs are the flow paths of the AGV to each shop. 
Shops in each stage are of the same type but have different specifications such as 
different machine types and equipments, varied operator proficiencies, different 
rates of defect, etc.. Each flow path for the AGV is associated with a cost 
parameter related to each shop. The aim is to find a path for the AGV minimizing 
the cost objective.  In each shop, different machines and operators are working. 
Due to unpredictable events during working times a cost may incur. This cost is 
inferred from an expert system via fuzzy logic "IF …. Then……." rules. Cost 
parameters of each shop are considered to be 3 main factors: (1) Equipment 
sensitivity, (2) operator proficiency, and (3) product specifications, each being 
specified by one of the three levels of low, moderate, and high. A configuration 
for the proposed problem is presented in Figure 1. 
 
 
Fig. 1 A configuration of the proposed problem.  
www.ebook3000.com

7.2 
Statement of the Problem 
97
 
As stated before, cost is inferred from an expert system. A flowchart for the 
proposed expert system is presented in Figure 2. In our expert system, a back 
propagation neural network is considered to estimate the cost factors (outputs) 
using their corresponding sub-factors (inputs). The cost factors and their related 
sub-factors are shown in Figure 3. Using the existing data, we train the network 
and then by the resulting pattern we can apply the model to obtain the output with 
respect to the proposed sub-factors. The numerical results would show a lower 
bound and an upper bound for each cost factor. We utilize these bounds as our 
cost factors ranges for the fuzzy rule base. Considering the uncertainty in the cost 
factors due to dynamic changes in neural network inputs, we specify the cost 
factors in three levels of low, moderate, and high. The problem is to specify the 
range of these levels, i.e., the numerical range of low, moderate or high for each of 
the cost factors. This process is repeated for each AGV movement between any 
two shops for determining the arcs cost values.  
 
 
Fig. 2 A proposed expert system. 

98 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
 
Fig. 3 The cost factors and their related sub-factors.  
7.3 
Mathematical Model 
We apply an inductive reasoning technique to obtain the appropriate range for the 
levels. This method is based on an ideal scheme describing the input and output 
relationships for a well-established data base. This method is called entropy. A 
key goal of entropy minimization analysis is to determine the quantity of 
information in a given data set. The entropy of a probability distribution is a 
measure of the uncertainty of the distribution. This information measure estimates 
the uncertain range of data using a predetermined inappropriate range to start the 
process. The higher the prior estimate of the probability for an outcome to occur, 
the lower will be the information gained by observing it to occur. The entropy on a 
set of possible outcomes of a trial where exactly one outcome is possible is 
defined by the sum of probabilities. In other words, the entropy is the expected 
value of information. For a simple one-dimensional (one uncertain variable) case, 
let us assume that the probability of the ith sample wito be true is 
)
(
iw
p
. If we 
actually observe the sample wi in the future and discover that it is true, then we 
gain the following information, I(wi): 
 
)
(
ln
)
(
i
i
w
p
k
w
I
−
=
,  
 
 
                                         (1) 
 
www.ebook3000.com

7.3 
Mathematical Model 
99
 
wherek is a normalizing parameter. If we discover that it is false, we still gain this 
information: 
 
[
])
(
1
ln
)
(
i
i
w
p
k
w
I
−
−
=
. 
 
 
 
 
            (2) 
 
Thus, the entropy of the inner product of all the samples (N) is:  
[
]
∑
=
−
−
+
−
=
N
i
i
i
i
i
p
p
p
p
k
S
1
)
1
ln(
)
1(
ln
, 
 
 
            (3) 
wherepiis the probability of the ith sample to be true. Note that 
0
≥
S
, because 
0
ln
≤
x
, for 
1
0
≤
≤x
.  
The entropy of a rule should be minimized. Minimum entropy (S) is associated 
with all the pi being as close to ones or zeros as possible, which in turn implies 
that they have a very high probability of either happening or not happening, 
respectively. Note in equation (3) that if pi=1 then S=0.  
This result makes sense, since pi is the probability measure of whether a value 
belongs to a partition or not. The precedence for partitioning the data is as follows. 
First, we assume that we are seeking a threshold value for a sample in the range 
between [x1, x] and [x, x2]. We denote the first region p and the second region q. 
by moving an imaginary threshold value x between x1 and x2, we calculate entropy 
for each value of x.  
An entropy with each value of x in the region x1 and x2 is: 
 
)
(
)
(
)
(
)
(
)
(
x
S
x
q
x
S
x
p
x
S
q
p
+
=
, 
 
 
 
            (4) 
 
where, 
 
[
])
(
ln
)
(
)
(
ln
)
(
)
(
2
2
1
1
x
p
x
p
x
p
x
p
x
S p
+
−
=
, 
 
 
           (5) 
[
])
(
ln
)
(
)
(
ln
)
(
)
(
2
2
1
1
x
q
x
q
x
q
x
q
x
Sq
+
−
=
, 
 
 
           (6) 
 
with pk(x) and qk(x) as conditional probabilities that the class k sample is in the 
region [x1, x1+x] and [x1+x, x2], respectively, p(x) and q(x) are probabilities that all 
samples are in the region [x1, x1+x] and [x1+x, x2], respectively. Also, 
 
1
)
(
)
(
=
+
x
q
x
p
. 
 
 
 
 
 
            (7) 
 
 

100 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
A value of x that gives the minimum entropy is the optimum threshold value. We 
calculate entropy estimates pk(x), qk(x), p(x), and q(x) as follows: 
 
1
)
(
1
)
(
)
(
+
+
=
x
n
x
n
x
p
k
k
, 
 
 
 
 
 
            (8) 
1
)
(
1
)
(
)
(
+
+
=
x
N
x
N
x
q
k
k
, 
 
 
 
 
 
            (9) 
n
x
n
x
p
)
(
)
(
=
,  
 
 
 
 
 
          (10) 
)
(
1
)
(
x
p
x
q
−
=
, 
 
 
 
 
 
          (11) 
 
where nk(x) is the number of class k samples located in [x1, x1+x], n(x) is the total 
number of samples located in [x1, x1+x], Nk(x) is the number of class k  samples 
located in [x1+x, x2], N(x) is the total number of samples located in [x1+x, x2], and 
n is the total number of samples in [x1, x2]. While moving x in the region [x1, x2], 
we calculate the values of entropy for each position of x.  
This procedure finds the region for the levels of the cost factors. After each 
update in input data the ranges are specified using an entropy technique. After 
determining the regions of the cost factors, we then compose the fuzzy rules which 
clarify the total cost for each shop. To find the effective rules, we configure a 
multiple linear regression model using the previous data and identify the 
regression coefficients. Since we have three cost factors each of which contains 
three levels of low, moderate and high, then twenty seven (3*3*3) possible rules 
exist. Thus, using the hypothesis testing, the effective rules are identified. By these 
rules we estimate the cost of each shop (arc length in the network). Consequently, 
a dynamic program is applied to find the optimal path in the proposed jobshop 
automated manufacturing network.  
7.3.1 Artificial Neural Network 
Neural networks are being widely used in many fields of study. This could be 
attributed to the fact that these networks attempt to model the capabilities of 
human brains. Since the last decade, neural networks have been used as a 
theoretically sound alternative to traditional statistical models. Although neural 
networks (NNs) originated in mathematical neurobiology, the rather simplified 
practical models currently in use have moved steadily towards the field of 
statistics. A number of researchers have illustrated the connection of neural 
networks to traditional statistical models. For example, Gallinari et al. (1991) 
presented analytical results establishing a link between discriminant analysis and 
www.ebook3000.com

7.3 
Mathematical Model 
101
 
multilayer perceptrons (MLP) used for classification problems. Cheng and 
Titterington (1994) made a detailed analysis and comparison of various neural 
network models with traditional statistical models. They showed strong 
associations of the feed-forward neural networks with discriminant analysis and 
regression models, and unsupervised networks such as self-organizing neural 
networks with clustering. Neural networks are being used in areas of prediction 
and classification, areas where regression models and related statistical techniques 
have traditionally been used. Ripley (1994) discusses the statistical aspects of 
neural networks and classifies neural networks as one of a class of flexible 
nonlinear regression models. Sarle (1994) translates neural network terminologies 
into statistical ones and shows the relationship between neural networks and 
statistical models such as generalized linear models, projection pursuit and cluster 
analysis. He explains that neural networks and statistical approaches are not 
competing methodologies for data analysis and there is a considerable overlap 
between the two. Warner and Misra (1996) present a comparison between 
regression analysis and neural network computation in terms of notation and 
implementation. They also discuss when it would be advantageous to use a neural 
network model in place of a parametric regression model, as well as some of the 
difficulties in implementation. Schumacher et al. (1996) and Vach et al. (1996) 
present a comparison between feed-forward neural networks and the logistic 
regression. The conceptual similarities and discrepancies between the two 
methods are also analyzed. 
Some of the commonly used traditional statistical techniques applied for 
prediction and classification are multiple regression, discriminant analysis, and 
logistic regression. These methods are being widely used in various applications 
due to their established methodologies. However, neural networks are being used 
as alternatives to these traditional techniques and gaining much popularity in 
recent years. This has led to a number of studies comparing the traditional 
statistical techniques with neural networks in a variety of applications. 
Artificial neural networks have been applied successfully to many 
manufacturing and engineering areas. Zhengrong et al. (1996) used quadratic 
regression to assess the results of neural network for improving the efficiency of 
fermentation process development. The results show that different sizes of neural 
nets within a certain range give an equally good prediction by using the ‘‘stopping 
training” technique, while quadratic regressions are sensitive to the size of the data 
sets. Smith and Mason (1997) mentioned that regression and neural network 
modeling methods have become two competing empirical model-building 
methods. They compared the predictive capabilities of NNs and regression 
methods in manufacturing cost estimation problems. This study examines the 
performance, stability and ease of cost estimation modeling using regression 
versus neural networks to develop cost estimating relationships (CERs). Results 
show that neural networks have advantages when dealing with data not adhering 
to the generally chosen low order polynomial forms, or data for which there is 
little a priori knowledge of the appropriate CER to select for regression modeling. 
However, in cases where an appropriate CER can be identified, regression models 

102 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
have significant advantages in terms of accuracy, variability, model creation and 
model examination. Both simulated and actual data sets were used for comparison 
purposes. Researchers have also discussed some important issues other than model 
accuracy to be considered when using regression versus neural network to 
estimate cost functions. Finnie et al. (1997) used neural network models to 
estimate software development efforts. Improving the estimation techniques 
available to project managers would facilitate more effective control of time and 
budgets in software development. They compared three estimation techniques 
using function points as an estimate of system size. The models considered were 
based on regression analysis, artificial neural networks and case-based reasoning. 
Although regression models performed poorly on the data set of 299 software 
projects, both artificial neural networks and case-based reasoning appeared to be 
useful for software development effort estimation models. Also, Heiat (2002) 
compared artificial neural network and regression to estimate the amount of effort 
required for developing an information system, an important project management 
concern. The results of the study indicated that for one experiment (when only 
third generation language data set was considered), regression analysis and neural 
networks performance were nearly identical and for a second experiment (when a 
combined third generation and fourth generation language data set as used), the 
neural network produced improved performance over conventional regression 
analysis in terms of mean absolute percentage error (MAPE). They also stated that 
autocorrelation could have been a possible reason for the large MAPE values and 
not its non-normality as in both cases the data sets were not normally distributed. 
Lee and Um (2000) used multiple regression analysis and artificial neural network 
methods for predicting the relationship between welding parameters and geometry 
of the welding area in arc welding. It was found that the error rate predicted by the 
artificial neural network was smaller than that predicted by the multiple regression 
analysis. Shuhui et al. (2001) compared regression and neural networks to predict 
the power produced by wind farms and found that neural networks performed 
better than regression models. Applicability of NN for cost estimation in building 
construction was tested by Setyawati et al. (2002). The authors concluded that 
neural networks outperformed linear regression models given the same training 
data and the same variables. Krishnaswamy and Krishnan (2002) used regression 
analysis and neural network in nozzle wear rate prediction and found a statistical 
significant difference in the prediction of validation data. Feng and Wang (2002) 
compared nonlinear regression and neural network models in developing 
empirical models for estimating the digitizing accuracy of a given coordinate-
measuring machine. It was shown that both prediction models appear to provide a 
satisfactory prediction with the regression model providing a slightly better 
performance in both model construction and model verification. Feng and Wang 
(2002) in a different article applied two competing data mining techniques, 
nonlinear regression analysis and computational neural networks in developing the 
empirical models for surface roughness prediction. It was demonstrated by 
hypothesis testing of relative errors and absolute errors for the process of 
modeling construction, model validation, and combined data modeling that no 
www.ebook3000.com

7.3 
Mathematical Model 
103
 
statistically significant differences were found between the performances of the 
two methods. Kim et al. (2004) applied three techniques, namely multiple 
regression analysis, neural network and case based reasoning for estimating 
construction costs of Korean residential buildings. Authors concluded that 
although the best NN model performed better than the other models for accuracy 
of estimation, the training procedure to train the best NN model was slow because 
of the trial and error process. In addition to the accuracy of estimation results, the 
time and accuracy tradeoffs and also the clarity of explanation should be 
considered in a cost estimation model. Yesilnacar and Topal (2005) used a neural 
network and compared it with logistic regression for landslide susceptibility 
mapping in a study for Hendek region in Turkey. The landslide susceptibility map 
produced using the neural network method predicts higher percentages of 
landslides, specially in high and very high zones than the logistic regression 
method. Few studies in the project management literature concentrated on the 
critical success factors that affect project success or failure. A comparison 
between neural network and linear regression analysis was used for identifying 
critical managerial factors affecting the success of high-tech defense projects by 
Dvir et al. (2006). The study showed that neural networks have significantly better 
explanatory and prediction powers, and they enable the exploration of 
relationships among the data that are difficult to arrive at by traditional statistical 
methods. Pendharkar (2006) investigated the factors influencing the object-
oriented (OO) component size and source code documentation. 
Using empirical data, researcher compared the performance of nonlinear 
artificial neural network (ANN) forecasting models and linear regression models. 
Experimental results confirmed the superior performance of ANN over the linear 
multiple regression model when variable returns to scale economies exist between 
multiple inputs and multiple outputs. 
7.3.2 The Backpropagation Neural Network 
The backpropagation algorithm trains a given feed-forward multilayer neural 
network for a given set of input patterns with known classifications. When each 
entry of the sample set is presented to the network, the network examines its 
output response to the sample input pattern. The output response is then compared 
to the known and desired output and the error value is calculated. Based on the 
error, the connection weights are adjusted. The backpropagation algorithm is 
based on Widrow-Hoff delta learning rule in which the weight adjustment is done 
through mean square error of the output response to the sample input (Abdi et al., 
1996). 
 
 
 

104 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
Algorithm 1. General steps of backpropagation 
 
1. Propagate inputs forward in the usual way, i.e., all outputs are computed using 
sigmoid thresholding of the inner product of the corresponding weight and input 
vectors. All outputs at stage n are connected to all the inputs at stage n+1 
 
2. Propagate the errors backwards by apportioning them to each unit according to 
the amount of the error the unit is responsible for.  
 
We now discuss how to develop the stochastic backpropagation algorithm for the 
general case. The derivation is simple, but unfortunately the book-keeping is a 
little messy. The following notations and definitions are needed: 
 
jxG : input vector for unit j (xji = ith input to the jth unit)  
j
wG : weight vector for unit j (wji = weight on xji) 
j
j
j
x
w
z
G
G .
=
: the weighted sum of inputs for unit j 
oj : output of unit j (
)
(
j
j
z
o
σ
=
)  
tj : target for unit j 
Downstream(j) : set of units whose immediate inputs include the output of j 
Output : Set of output units in the final layer.  
 
Since we update after each training example, we can simplify the notation 
somewhat by assuming that the training set consists of exactly one example and so 
the error can simply be denoted by E.  
We want to calculate
ji
w
E
∂
∂
corresponding to each input weight wji of each 
output unit j. Note first that since zj is a function of wji regardless of where in the 
network unit j is located,  
 
ji
j
ji
j
j
ji
x
z
E
w
z
z
E
w
E
.
.
∂
∂
=
∂
∂
∂
∂
=
∂
∂
, 
 
 
 
 
          (12) 
 
Furthermore, 
jz
E
∂
∂
is the same regardless of which input weight of unit j we are 
trying to update. So, we denote this quantity by 
j
δ .  
 
www.ebook3000.com

7.3 
Mathematical Model 
105
 
Consider the case when j  is an output unit. We know that  
∑
∈
−
=
Outputs
2
))
(
(
2
1
k
k
k
z
t
E
σ
.  
 
 
 
 
          (13) 
Since the outputs of all units
j
k ≠
 are independent of wji, we can then drop the 
summation and consider just the contribution to E by j and we call it 
j
δ : 
.
)
1
)(
(
)
(
))
(
1
)(
(
)
(
)
(
)
(
)
(
2
1
2
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
o
o
o
t
z
z
o
t
z
z
o
t
z
o
o
t
o
t
z
z
E
−
−
−
=
−
−
−
=
∂
∂
−
−
=
∂
∂
−
−
=
−
∂
∂
=
∂
∂
=
σ
σ
σ
δ
    
(14) 
Thus,  
ji
j
ji
ji
x
w
E
w
ηδ
η
=
∂
∂
−
=
Δ
. 
 
 
 
 
          (15) 
Now, consider the case when j is a hidden unit. Like before, we make the 
following two important observations:  
1. For each unit k downstream from j, zk is a function of zj.  
2. The contribution to error by all units
j
l ≠
, in the same layer as j, is 
independent of wji. 
We want to calculate
ji
w
E
∂
∂
for each input weight wji for each hidden unit j. 
Note that wji influences just zj which influences oj which influences zk, 
),
( j
Downstream
k ∈
∀
each of which influences E. So, we can write,  
ji
j
j
j
k
j
Downstream
k
k
ji
j
j
j
j
k
j
Downstream
k
k
ji
x
z
o
o
z
z
E
w
z
z
o
o
z
z
E
w
E
.
.
.
.
.
.
)
(
)
(
∂
∂
∂
∂
∂
∂
=
∂
∂
∂
∂
∂
∂
∂
∂
=
∂
∂
∑
∑
∈
∈
.    (16) 
Again, note that all the terms except xji in (16) are the same regardless of which 
input weight of unit j we are trying to update. Like before, we denote this common 
quantity by
j
δ . Also, note that 
k
kz
E δ
∂
∂
,
kj
j
k w
o
z
∂
∂
 and
)
1(
j
j
j
j
o
o
z
o
−
=
∂
∂
. 
Substituting them in (14),  
∑
∑
∈
∈
−
=
∂
∂
∂
∂
∂
∂
=
)
(
)
(
)
1(
.
.
.
.
j
Downstream
k
j
j
kj
k
j
j
j
k
j
Downstream
k
k
j
o
o
w
z
o
o
z
z
E
δ
δ
,               (17) 
we obtain:  
∑
∈
−
=
)
(
.
)
1(
j
Downstream
k
kj
k
j
j
k
w
o
o
δ
δ
.  
 
 
 
          (18) 
We are now in a position to state the backpropagation algorithm formally.  
 
 

106 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
Algorithm 2. Formal statement of stochastic backpropagation 
(Training examples, η, ni, nh, no)  
Each training example is of the form
t
x G
G,
, where xG  is the input vector and tG
 is 
the target vector, ηis the learning rate (e.g., 0.05), ni, nh and no are the number of 
input, hidden and output nodes, respectively. Input from unit i to unit j is denoted 
by xji and its weight is denoted by wji. Create a feed-forward network with ni 
inputs, nh hidden units, and no output units.  
 
Initialize all the weights to small random values (e.g., between -0.05 and 0.05).  
While termination condition is not met Do  
For each training example 
t
x G
G,
,  
1. Input the instance xG and compute the output ou of every unit.  
2. For each output unit k, calculate  
)
)(
1(
k
k
k
k
k
o
t
o
o
−
−
=
δ
. 
 
 
(19) 
3. For each hidden unit h, calculate  
∑
∈
−
=
)
(
.
)
1(
h
Downstream
k
kh
k
h
h
h
w
o
o
δ
δ
.  
 
(20) 
4. Update each network weight wji as follows:  
ji
ji
ji
w
w
w
Δ
+
←
. 
 
 
 
(21) 
where, 
ji
j
ji
x
w
ηδ
=
Δ
.  
 
 
 
(22) 
7.3.3 Fuzzy Logic 
Fuzzy Logic (FL) is a problem-solving control system methodology that lends 
itself to implementation of systems ranging from simple, small, embedded micro-
controllers to large, networked, multi-channel PC or workstation-based data 
acquisition and control. It can be implemented in hardware, software, or a 
combination of both. FL provides a simple way to arrive at a definite conclusion 
based upon vague, ambiguous, imprecise, noisy, or missing input information. The 
FL approach to control problems mimics how a person would make decisions, 
only much faster. 
www.ebook3000.com

7.3 
Mathematical Model 
107
 
FL incorporates a simple, rule-based IF X AND Y THEN Z approach to solving 
a control problem rather than attempting to model a system mathematically. The 
FL model is empirically-based, relying on the operators’ experience rather than 
their technical understanding of the system.  
FL requires some numerical parameters in order to operate such as what is 
considered to be significant error and significant rate-of-change-of-error, but exact 
values of these numbers are usually not critical unless very responsive 
performance is required in which case empirical tuning would determine them.  
7.3.4 Mamdani Fuzzy System 
Mamdani fuzzy system was proposed as a first attempt to control a steam engine 
and boiler combination by a set of linguistic control rules obtained from 
experienced human operators. Rules in Mamdani fuzzy systems are like these 
(Klir and Yuan, 1995; Zimmermann, 1996): 
 
If x1 is A1 AND/OR x2 is A2 Then y is B1, 
 
whereA1, A2 and B1 are fuzzy sets. The fuzzy set acquired from aggregation of 
rules’ results are defuzzified using defuzzification methods like centroid (center of 
gravity), max membership, mean-max, and weighted average. The centroid 
method is very popular, in which the ‘‘center of mass’’ of the result provides the 
crisp value. In this method, the defuzzified value of the fuzzy set A, d(A), is 
calculated by: 
∫
∫
=
X
A
X
A
x
x
x
x
x
A
d
)
(
)
(
.
)
(
μ
μ
,  
 
 
 
 
          (23) 
 
where
(.)
A
μ
is the membership function of the fuzzy set A (Klir and Yuan, 1995; 
Zimmermann, 1996).  
For our problem in which various possible conditions of parameters are stated 
in forms of fuzzy sets, we utilize the Mamdani fuzzy system, because in this 
system the fuzzy rules representing the expert knowledge would consider fuzzy 
sets as their consequences. In general, designing a fuzzy system is composed of 
the following major steps (Klir and Yuan, 1995). 
 
 
 

108 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
Algorithm 3: General steps for the design of a fuzzy logic system 
 
Step 1. Identify pertaining input and output variables. Besides, select the 
meaningful linguistic states along with appropriate fuzzy sets for the variable. 
 
Step 2. Employ a fuzzification method for input variables that expresses the 
associated measured uncertainty. The purpose of the fuzzification method is to 
interpret measurements of input variables which are expressed by real numbers. 
 
Step 3. Formulate pertaining knowledge in terms of fuzzy inference rules. There 
are two principal ways in which relevant inference rules can be determined. One is 
to elicit them from experienced humans and the other is to obtain them from 
empirical data by suitable learning methods, usually with the help of neural 
networks. 
 
Step 4. Combine measurements of input variables with relevant fuzzy rules to 
inference, considering the output variables in a way to admit the purpose of the 
inference engine. 
 
Step 5. Ascertain a suitable defuzzification method to convert the aggregated 
fuzzy set of implications into a real number. 
7.3.5 Multiple Linear Regression 
As we stated before, some rules affect the cost of the system. We should 
investigate whether a rule is significant on cost or not. One way to survey the 
effect of independent variables on dependent variable is to use a multiple linear 
regression model. Therefore, we consider the following equation, 
 
,
,...,
1
,
,...,
1
,
...
1
1
0
m
j
n
i
r
r
u
j
j
j
i
=
=
+
+
+
+
=
ε
β
β
β
               (24) 
 
where
0
β  is the intercept, the 
j
β  are the coefficients of the rjparameters and the 
jε are the error terms. The aim is to identify the
j
β  not being important on total 
cost of the proposed system. Here, we apply two-sided hypothesis testing as 
follows: 
 
.0
:
,0
:
1
0
≠
=
j
j
H
H
β
β
 
 
 
 
 
 
 
          (25) 
www.ebook3000.com

7.3 
Mathematical Model 
109
 
The null hypothesis indicates whether a rule coefficient is zero or not. If the 
hypothesis is accepted (a certain rule coefficient is zero) then we can omit the 
corresponding rule from cost estimation process. The test of the null hypothesis H0 
against the two sided alternative proceeds in three steps. The first is to compute 
the standard error of 
j
β ,
)
(
j
SE β
. The standard error of 
j
β  is an estimator of 
j
β
σ
, the standard deviation of the sampling distribution of 
j
β :  
2
1
2
1
2
2
2
)
(
1
)
(
2
1
1
⎥
⎦
⎤
⎢
⎣
⎡
−
−
×
−
×
=
∑
∑
=
=
m
j
j
m
j
j
j
r
r
m
r
r
m
m
j
ε
σ β
,  
 
 
 
          (26) 
 
2
)
(
j
j
SE
β
σ
β
=
. 
 
 
 
 
 
          (27) 
 
Although the formula for 
2
j
β
σ
is complicated, but in practice the standard error is 
computed by a regression software. The second step is to compute the t-statistic:  
 
)
(
0
j
j
SE
t
β
β −
=
. 
 
 
 
 
 
                        (28) 
 
The third step is to compute the p-value, the probability of observing a value of 
j
β  at least as different from zero as the estimate actually computed (
act
j
β
), 
assuming that the null hypothesis is correct. Stated mathematically, 
 
[
]
)
(
Pr
)
(
0
)
(
0
Pr
0
0
Pr
value
0
0
0
act
H
j
act
j
j
j
H
act
j
j
H
t
t
SE
SE
p
>
⇒
⎥
⎥
⎦
⎤
⎢
⎢
⎣
⎡
−
>
−
⇒
−
>
−
=
−
β
β
β
β
β
β
,    (29) 
 
where
0
PrH denotes the probability computed under the null hypothesis, the second 
equality follows by dividing into 
)
(
j
SE β
, and 
act
t
is the value of the t-statistic 
actually computed. Because
j
β  is approximately normally distributed in large 
samples, under the null hypothesis the t-statistic is approximately distributed as a 
standard normal random variable, and so for large samples, 
)
(
2
)
Z
Pr(
value
act
act
t
t
p
−
Φ
=
>
=
−
. 
 
 
          (30) 

110 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
A small value of the p-value, say less than 5%, provides evidence against the null 
hypothesis in the sense that the chance of obtaining a value of 
j
β  by pure random 
variation from one sample to the next is less than 5% if, in fact, the null hypothesis 
is correct. If so, the null hypothesis is rejected at the 5% significance level. Simply, 
we can reject the null hypothesis at the 5% significance level if 
96
.1
>
act
t
. 
Therefore, if the hypothesis is accepted, then we ensue that the corresponding rule is 
not important and is not influential on the cost. The estimation of the coefficients is 
performed using a regression software (EViews 3.0).  
7.3.6 Shortest Path in a Network 
Let G = (V,A) be a graph, where 
{
}
N
V
,...,
1
=
is the set of nodes, and 
V
V
A
×
⊆
is 
the set of arcs. We write
A
j
i
∈
)
,
(
, if there exists an arc from node 
V
i∈
to node
V
j ∈
. Furthermore, let 
0
≥
ijt
denote the distance (or travel time, or any other 
measure of cost) from i to j. If 
A
j
i
∉
)
,
(
,then set 
+∞
=
ijt
. Note that the travel 
time from node i to node j is assumed to be stationary; i.e., independent of the 
actual arrival time at node i. Let fijdenote the length of the shortest-path from i to j 
in the graph. 
It is a well-known principle that every additive deterministic dynamic 
programming formulation can be equivalently viewed as the problem of finding 
the shortest path in a directed network, where the states, decisions, and decision 
costs of the former correspond to the nodes, arcs, and arc lengths of the latter 
(Dreyfus and Law, 1977). It is perhaps for this reason that the task of efficiently 
computing shortest paths is found prominence in the mathematical programming 
literature. Next, we describe a dynamic programming approach for computing the 
optimal path. 
7.3.7 Dynamic Programming  
Dynamic programming (DP) was introduced by Bellman (1957). Toth (1980) 
presented the early DP-based approaches and reported numerical experiments with a 
limited success. Hybrid methods, combining dynamic programming and implicit 
enumeration, were developed later. The first approach was developed by Plateau and 
Elkihel (1985). A recent approach, the so-called combo algorithm, is able to solve very 
large instances of up to 10000 variables within less than one second, with basically no 
difference in the required solution times for ‘‘easy’’ and ‘‘hard’’ instances (Martello et 
al., 1999). Marsten and Morin (1978) proposed the first hybrid method, which 
combined heuristic algorithms, dynamic programming and branch-and-bound 
approaches. More sophisticated methods can be found in Ibaraki (1987). 
www.ebook3000.com

7.3 
Mathematical Model 
111
 
Dynamic programming is a technique to tackle multistage decision processes. 
A given problem is subdivided into smaller subproblems, which are sequentially 
solved until the initial problem is solved by the aggregation of the subproblem 
solutions. In each stage, a set of states is defined. The states would describe all 
possible conditions of the process in the current decision stage, which corresponds 
to every feasible partial solution. The set of all possible states is known as the state 
space. The states of a stage u can be transformed to states of a stage u+1, using a 
transition. A transition indicates the decisions adopted in a stage, and a sequence 
of transitions taken to reach a state starting from another state is known as a 
policy. Dynamic programming approaches can be seen as transformations of the 
original problem to one associated with the exploration of a multistage graph 
G(S,T), where the vertices in S correspond to the state space and the arcs in T 
correspond to the set of transitions, leading to an optimal policy. 
The basis of dynamic programming can be traced to the optimality principle of 
Bellman (2003). The optimality principle states that an optimal policy should be 
constituted by optimal policies from every state of the decision chain to the final state. 
Here, we make use of a dynamic programming approach for our proposed 
network to identify the optimal path in the manufacturing system. The advantages 
of such a model are simplicity, the ability to determine the exact optimal value, 
and implementability on sophisticated networks. The backward dynamic model 
would be defined as: 
 
Indices: 
s 
Number of stages;                         s= 0,1,2,…, n. 
i' 
Start node number;                       i'=1,2, …, I; i'=0 (for the start node). 
i 
End node number;                        i=1,2, …, I. 
 
Notations:  
)'(i
s
ϕ
 
The minimum value of moving from node i' in stage s to an end 
node i in stage s-1. 
Pi'i 
Numerical value of an arc from node i' to node i. 
 
Optimal policy: 
( )
{
}
( )
( ).
0
*
),
0
(
).
,...,
2,1,0
(
stage
in
'
     
,
)'
(
0
'
1
1
layer 
in 
 
ϕ
ϕ
ϕ
ϕ
ϕ
=
=
=
∀
+
=
+
+
i
n
s
s
i
P
i
Min
i
s
i
i
s
s
i
s
     
(31) 
 
Note that 
*
ϕ
 identifies the optimal path.  
 

112 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
7.4 
Conclusions 
We proposed an approach for finding an optimal path in a flexible jobshop 
manufacturing system. The proposed flexible jobshop system has more than one 
shop with the same duty. The difference among shops with the same duty is in 
their machines with various specifications. The shops configure a network in 
which they are considered as nodes and the paths among them are considered as 
network arcs. An Automated Guided Vehicle (AGV) functions as a material 
handling device through the manufacturing network. Cost of traveling from one 
node to another is uncertain and needs to be approximated. Cost is inferenced 
from an expert system considering three parameters of equipment sensitivity, 
operator proficiency, and product specification via linguistic variables. This cost is 
associated with some main and sub factors. To approximate the cost, a back 
propagation neural network was applied to estimate the sub-factors with the 
corresponding main factors and gain a bound for the main factors. These bounds 
were processed by the entropy technique to obtain regions for the linguistic 
variables. After determining the regions for the linguistic variables, we composed 
the rules and verified their significance using regression analysis. The purified 
rules were used to infer the cost of the system.  The objective was to find a path 
minimizing the cost in the manufacturing network. A dynamic programming 
approach was used to compute an optimal path in the proposed network. Finally, 
the proposed approach was illustrated by a numerical example.   
References 
Abdi, H., Valentin, D., Edelman, B., O’Toole, A.J.: A Widrow-Hoff learning rule for a 
generalization of the linear auto-associator. Journal of Mathematical Psychology 40, 
175–182 (1996) 
Bellman, R.: Dynamic Programming. Princeton University Press, Princeton (1957) 
Bellman, R.: Dynamic Programming. Dover Publications (2003) 
Ben-Arieh, D., Qian, L.: Activity-based cost management for design and development 
stage. International Journal of Production Economics 83, 169–183 (2003) 
Cavalieria, S., Maccarroneb, P., Pinto, R.: Parametric vs. neural network models for the 
estimation of production costs: A case study in the automotive industry. International 
Journal of Production Economics 91, 165–177 (2004) 
Cheng, B., Titterington, D.M.: Neural networks: A review from a statistical perspective. 
Statistical Science 9(1), 2–30 (1994) 
Dai, J.B., Lee, N.K.S.: Economic feasibility analysis of flexible material handling systems: 
A case study in the apparel industry. International Journal of Production 
Economics 136(1), 28–36 (2012) 
Deng, S., Yeh, T.-H.: Using least squares support vector machines for the airframe 
structures manufacturing cost estimation. International Journal of Production 
Economics 131(2), 701–708 (2011) 
Dreyfus, S.E., Law, A.M.: The Art and Theory of Dynamic Programming. Academic Press, 
New York (1977) 
www.ebook3000.com

References 
113
 
Dvir, D., Ben-Davidb, A., Sadehb, A., Shenhar, A.J.: Critical managerial factors affecting 
defense projects success: A comparison between neural network and regression 
analysis. Engineering Applications of Artificial Intelligence 19, 535–543 (2006) 
Feng, C.-X., Wang, V.: Surface roughness predictive modeling: Neural networks versus 
regression. IIE Transactions on Design and Manufacturing 40(3), 683–697 (2002) 
Feng, C.-X., Wang, X.: Digitizing uncertainty modeling for reverse engineering 
applications: 
Regression 
versus 
neural 
networks. 
Journal 
of 
Intelligent 
Manufacturing 13(3), 189–199 (2002) 
Finnie, G.R., Wittig, G.E., Desharnais, J.-M.: A comparison of software effort estimation 
techniques: Using function points with neural networks, case-based reasoning and 
regression models. Journal of Systems and Software 39(3), 281–289 (1997) 
Gallinari, P., Thiria, S., Badran, F., Fogelman-Soulie, F.: On the relations between 
discriminant analysis and multilayer perceptrons. Neural Networks 4(3), 349–360 
(1991) 
Gayretli, A., Abdalla, H.S.: A featured based prototype system for the evaluation and 
optimization of manufacturing processes. Computers & Industrial Engineering 37, 481–
484 (1999) 
Ghasemzadeh, S., Behrangi, E., Azgomi, M.A.: Conflict-free scheduling and routing of 
automated guided vehicles in mesh topologies. Robotics and Autonomous Systems 30, 
738–748 (2009) 
Heiat, A.: Comparison of artificial neural network and regression models for estimating 
software development effort. Information and Software Technology 44(15), 911–922 
(2002) 
Ibaraki, T.: Enumerative approaches to combinatorial optimization–Part II. Annals of 
Operations Research 11, 397–439 (1987) 
Khayat, G.E., Lagevin, A., Riopel, D.: Integrated production and material handling 
scheduling using mathematical programming and constraint programming. European 
Journal of Operational Research 175, 1818–1832 (2006) 
Kim, G.-H., An, S.-H., Kang, K.-I.: Comparison of construction cost estimating models 
based on regression analysis, neural networks, and case-based reasoning. Building and 
Environment 39(10), 1235–1242 (2004) 
Klir, G.J., Yuan, B.: Fuzzy Sets and Fuzzy Logic: Theory and Applications. Prentice-Hall 
(1995) 
Krishnaswamy, M., Krishnan, P.: Nozzle wear rate prediction using regression and neural 
network. Biosystems Engineering 82(1), 53–64 (2002) 
Lee, J., Um, K.: A comparison in a back-bead prediction of gas metal arc welding using 
multiple regression analysis and artificial neural network. Optics and Lasers in 
Engineering 34(3), 149–158 (2000) 
Marsten, R.E., Morin, T.L.: A hybrid approach to discrete mathematical programming. 
Mathematical Programming 14, 21–40 (1978) 
Martello, S., Pisinger, D., Toth, P.: New trends in exact algorithms for the 0–1 knapsack 
problem. European Journal of Operational Research 123, 325–336 (1999) 
McKim, R.A.: Neural network applications to cost engineering. Cost Engineering 35, 31–
35 (1993) 
Niazi, A., Dai, J.S., Balabani, S., Seneviratne, L.: Product cost estimation: Technique 
classification and methodology review. Journal of Manufacturing Science and 
Engineering 128, 563–575 (2006) 
Nolan, A.: An intelligent system for case review and risk assessment in social services. AI 
Mag. 19(1), 39–46 (1998) 

114 
7   Neuro-Fuzzy-Regression Expert System for AGV Optimal Path
 
Pendharkar, P.C.: Scale economies and production function estimation for object-oriented 
software component and source code documentation size. European Journal of 
Operational Research 172, 1040–1050 (2006) 
Plateau, G., Elkihel, M.: A hybrid method for the 0–1 knapsack problem. Methods of 
Operations Research 49, 277–293 (1985) 
Quintana, G., Ciurana, J.: Cost estimation support tool for vertical high speed machines 
based on product characteristics and productivity requirements. International Journal of 
Production Economics 134(1), 188–195 (2011) 
Rehman, S., Guenov, M.D.: A methodology for modeling manufacturing costs at 
conceptual design. Computers & Industrial Engineering 35, 623–626 (1998) 
Ripley, B.D.: Neural networks and related methods for classification. Journal of the Royal 
Statistical Society, Series B (Methodological) 56(3), 409–456 (1994) 
Roy, R., Souchoroukov, P., Shehab, E.: Detailed cost estimating in the automotive industry: 
Data 
and 
information 
requirements. 
International 
Journal 
of 
Production 
Economics 133(2), 694–707 (2011) 
Sarle, W.S.: Neural networks and statistical models. In: Proceedings of the 19th Annual 
SAS Users Group International Conference, pp. 215–221 (1994) 
Schumacher, M., Robner, R., Vach, W.: Neural networks and logistic regression: Part I. 
Computational Statistics and Data Analysis 21(6), 661–682 (1996) 
Setyawati, B.R., Sahirman, S., Creese, R.C.: Neural networks for cost estimation. AACE 
International Transactions, EST13, 13.1–13.8 (2002) 
Shehab, E.M., Abdalla, H.S.: Manufacturing cost modeling for concurrent product 
development. Robotics and Computer- Integrated Manufacturing 17, 341–353 (2001) 
Shuhui, L., Wunsch, D.C., O’Hair, E., Giesselmann, M.G.: Comparative analysis of 
regression and artificial neural network models for wind turbine power curve 
estimation. Journal of Solar Energy Engineering 123, 327–332 (2001) 
Smith, A.E., Mason, A.K.: Cost estimation predictive modeling: regression versus neural 
network. The Engineering Economist 42(2), 137–161 (1997) 
Toth, P.: Dynamic programming algorithms for the zero–one knapsack problem. 
Computing 25, 29–45 (1980) 
Turban, E., Aronson, J.: Decision Support Systems and Intelligent Systems. Prentice-Hall, 
London (1998) 
Vach, W., Robner, R., Schumacher, M.: Neural networks and logistic regression: Part II. 
Computational Statistics and Data Analysis 21(6), 683–701 (1996) 
Vis, I.F.A.: Survey of research in the design and control of automated guided vehicle 
systems. European Journal of Operational Research 170, 677–709 (2006) 
Vrbsky, S.V.: A data model for approximate query processing of real time database. Data & 
Knowledge Engineering 21, 79–102 (1997) 
Warner, B., Misra, M.: Understanding neural networks as statistical tools. The American 
Statistician 50(4), 284–293 (1996) 
Weiss, N., Kulikowski, I.: Computer Systems That Learn. Morgan-Kaufmann, California 
(1991) 
Wu, N., Zhou, M.: Modeling and deadlock avoidance of automated manufacturing systems 
with multiple automated guided vehicles. IEEE Transactions on Systems Man and 
Cybernetics B 35, 1193–1201 (2005) 
Yang, C.O., Lin, T.S.: Developing an integrated framework for feature-based early 
manufacturing cost estimation. International Journal of Advanced Manufacturing 
Technology 13, 618–629 (1997) 
www.ebook3000.com

References 
115
 
Yesilnacar, E., Topal, T.: Landslide susceptibility mapping: A comparison of logistic 
regression and neural networks methods in a medium scale study, Hendek region 
(Turkey). Engineering Geology 79(3-4), 251–266 (2005) 
Zhang, Y.F., Fuh, J.Y.H.: A neural network approach for early cost estimation of packaging 
products. Computers & Industrial Engineering 34, 433–450 (1998) 
Gu, Z., Lam, L.H., Dhurjati, P.S.: Feature correlation method for enhancing fermentation 
development: A comparison of quadratic regression with artificial neural networks. 
Computers and Chemical Engineering 20(suppl. 1), S407–S412 (1996) 
Zimmermann, H.J.: Fuzzy Set Theory and its Applications, 3rd edn. Kluwer Academic 
Publishers (1996) 
 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
117 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_8 
 
Chapter 8 
Optimal Path for AGV System with Intelligent 
Agents 
8.1 
Summary 
An AGV is a material handling equipment that travels on a network of guide 
paths. The guide path is composed of aisle segments on which the vehicles are 
assumed to travel at a constant speed. The vehicles can travel forward or 
backward. As many vehicles travel on the guide path simultaneously, collisions 
must be avoided. AGV systems are implemented in various industrial contexts: 
container terminals, part transportation in heavy industry, flexible manufacturing 
systems.  
The most elementary version of the vehicle routing problem is the capacitated 
vehicle routing problem (CVRP). The CVRP is described as follows: n customers 
must be served from a unique depot. Each customer asks for a quantity qi of goods 
(i = 1,..., n) and a vehicle of capacity Q is available to deliver goods. Since the 
vehicle capacity is limited, the vehicle has to periodically return to the depot for 
reloading. In the CVRP, it is not possible to split customer delivery. Therefore, a 
CVRP solution is a collection of tours where each customer is visited only once 
and the total tour demand is at most Q.  
From a graph theoretical point of view the CVRP may be stated as follows: Let 
G = (C,L) be a complete graph with node set C = (co, c1, c2,..., cn) and arc set L = 
(ci, cj): ci , cj∈C, i < j. In this graph model, co is the depot and the other nodes are 
the customers to be served. Each node is associated with a fixed quantity qi of 
goods to be delivered (a quantity qo = 0 is associated to the depot co). To each arc 
(ci, cj) is associated a value tij representing the travel time between ciand cj. The 
goal is to find a set of tours of minimum total travel time. Each tour starts from 
and terminates at the depot co, each node ci(i = 1,..., n) must be visited exactly 
once, and the quantity of goods to be delivered on a route should never exceed the 
vehicle capacity Q.  
An important extension of the CVRP is the vehicle routing problem with time 
windows (VRPTW). In addition to the mentioned CVRP features, this problem 
includes, for the depot and for each customer ci (i = 0,..., n) a time window [bi, ei] 
www.ebook3000.com

118 
8   Optimal Path for AGV System with Intelligent Agents
 
 
during which the customer has to be served (with b0 the earliest start time and e0 
the latest return time of each vehicle to the depot). The tours are performed by a 
fleet of l identical vehicles. The additional constraints are that the service 
beginning time at each node ci (i = 1,..., n) must be greater than or equal to bi, the 
beginning of the time window, and the arrival time at each node ci must be lower 
than or equal to ei, the end of the time window. In case the arrival time is less than 
bi, the vehicle has to wait till the beginning of the time window before starting 
servicing the customer. In the literature the fleet size l is often a variable and a 
very common objective is to minimize l. Usually, two different solutions with the 
same number of vehicles are ranked by alternative objectives such as the total 
traveling time or total delivery time (including waiting and service times).  
For a general review on AGV problems, the reader is referred to (Co and 
Tanchoco, 1991; King and Wilson, 1991; Ganesharajah et al., 1998). For a recent 
review on AGVs scheduling and routing problems and issues, the reader is 
referred to the survey of Qiu et al. (2002). These authors identified three types of 
algorithms for AGVs problems:  
(1) for general path topology,  
(2) for path optimization and  
(3) for specific path topologies.  
Methods of the first type can be divided in three categories:  
(1a) static methods, where an entire path remains occupied until a vehicle 
completes its route; (1b) time-window based methods, where a path segment may 
be used by different vehicles during different time-windows;  
and (1c) dynamic methods, where the utilization of any segment of path is 
dynamically determined during routing rather than before as with categories (1a) 
and (1b). The method presented in this article belongs to the third category (1c) 
and addresses the conflict free routing problem with an optimization approach. 
A number of authors have addressed the conflict free routing problem with a 
static transportation requests set, i.e., with all requests known a priori. Lee et al. 
(1998) present a two-staged traffic control scheme to solve a conflict free routing 
problem. Their heuristic method consists of generating off-line k-shortest paths in 
the first stage before the on-line traffic controller picks a conflict free shortest path 
whenever a dispatch command for an AGV is issued (second stage). Rajotia et al. 
(1998) propose a semi-dynamic time window constrained routing strategy. They 
use the notions of reserved and free time windows to manage the motion of 
vehicles. Krishnamurthy et al. (1993) propose an optimization approach. Their 
objective is to minimize the make span. They assume that the assignment of tasks 
to AGVs is given and they solve the routing problem by column generation (Ho 
and Wu, 2002). Their method generates very good solutions in spite of the fact 
that it is not optimal (column generation is performed at the root node of the 

8.1 
Summary 
119
 
 
search tree only). Oboth et al. (1999) present a heuristic method to solve the 
dispatching and routing problems but not simultaneously. Scheduling is performed 
first and a sequential path generation heuristic (SPG) is used to generate conflict 
free routes. The SPG is inspired from Krishnamurthy et al. (1993) static version of 
the AGV routing problem and applied to a dynamic environment while relaxing 
some of the limiting assumptions like equal and constant speeds of AGVs. When 
conflict is encountered, no feedback is sent to the scheduling module. The AGV 
being routed has to be delayed if an alternate route cannot be generated (Lin et al., 
2002). 
The authors use rules for positioning idle AGVs instead of letting the system 
manage them. Langevin et al. (1996) propose a dynamic programming based 
method to solve exactly instances with two vehicles. They solve the combined 
problem of dispatching and conflict free routing. Desaulniers et al. (2003) propose 
an exact method that enables to solve instances with up to four vehicles. Their 
approach combines a greedy search heuristic (to find a feasible solution and set 
bound on delays), column generation and a branch and cut procedure. Their 
method presents however some limits since its efficiency depends highly on the 
performance of the starting heuristic. If no feasible solution is found by the search 
heuristic, then no optimal solution can be found. The search heuristic performs 
poorly when the level of congestion increases. 
The problem considered in this chapter is a generalization of the Vehicle 
Routing Problem (VRP) and the Pickup and Delivery Problem (PDP) see Cordeau 
et al. (2004), Mitrovi´c-Mini´c (1998) and secondary literature given there. The 
most widely studied vehicle routing problems are the capacitated VRP and the 
Vehicle Routing Problem with Time Windows (VRPTW) which are surveyed by 
Laporte and Semet (2002) and Cordeau et al. (2002). Efficient methods for 
handling complex side constraints in insertion methods are presented in Campbell 
and Savelsbergh (2004). Comprehensive surveys on construction methods, 
neighborhood search methods, and meta-heuristics for the VRPTW are given by 
Bräysy and Gendreau (2005a) and Bräysy and Gendreau (2005b). Variable 
Neighborhood Search (VNS) is a meta-heuristic based on the idea of 
systematically changing the neighborhood structure during the search, see 
Mladenovi ´c and Hansen (1997) and Hansen and Mladenovi´c (2003). VNS 
systematically exploits the following observations:  
a) a local optimum with respect to one neighborhood structure is not necessary 
so for another;  
b) a global optimum is a local optimum with respect to all possible 
neighborhood structures;  
c) for many problems local optima with respect to one or several 
neighborhoods are relatively close to each other.  
www.ebook3000.com

120 
8   Optimal Path for AGV System with Intelligent Agents
 
 
A recent example of a VNS algorithm for vehicle routing problems is the 
algorithm for the multi-depot VRPTW presented by Polacek et al. (2004). Large 
Neighborhood Search (LNS) has been introduced for the VRPTW by Shaw (1997) 
and can be interpreted as a special case of VNS. Kilby et al. (2000) have shown 
that LNS is well suited for rich VRP. 
In many cases it is assumed that transportation requests are accepted before 
planning begins and tours are generated assuming that all accepted transportation 
requests must be served (Lin et al., 2004). Work regarding load acceptance issues 
for the Traveling Salesman Problem (TSP) has been surveyed by Feillet et al. 
(2005), but only few attempts have been made to tackle extensions of this 
problem, for example, by Schönberger et al. (2002). VRP with multiple pickup 
and delivery locations have been studied by Savelsbergh and Sol (1995), 
Savelsbergh and Sol (1998) and Hasle (2003). A comprehensive discussion of 
dynamic vehicle routing can be found in Psaraftis (1988) and Psaraftis (1995). 
Dynamic real-life problems often require rich models, in most of the literature on 
dynamic routing problems; however, some simplifying assumptions are made. For 
example, in the dynamic full-truckload PDP, which recently has received 
increasing attention, see Fleischmann et al. (2004), Yang et al. (2004), and Powell 
et al. (2000), each vehicle can only carry one transportation request at a time and 
cannot load further shipments until all currently loaded shipments are unloaded. 
The only work known to the authors regarding rich VRP in a dynamic context is 
presented by Savelsbergh and Sol (1998). A column generation approach is used 
to solve the General Pickup and Delivery Problem (GPDP) presented by 
Savelsbergh and Sol (1995). 
8.2 
Statement of the Problem 
In a material requirement planning (MRP) for a product some shops are existed to 
provide the needed materials. According to the bill of material, an AGV is applied 
to provide the materials for the final assembly in the master shop. Considering the 
hierarchical structure of the BOM, shops are in levels. For each level some shops 
are existed being differentiated by the cost, time, and AGV capability. In this way 
from each shop of a level to the next shop from another level some paths are 
considered. As it is stated, the difference between paths is in cost, time, and AGV 
capability. Hence, the AGV should decide to select the path to minimize time, 
cost, and AGV capability, concurrently.  The materials are assembled from the 
lowest level of the BOM and lead to the final product. Each shop in each level can 
satisfy a corresponding level of the proposed BOM. The proposed BOM is 
illustrated in Figure 1. 
 

8.2 
Statement of the Problem 
121
 
 
 
Fig. 1 The Proposed BOM 
Based on the hierarchical structure of the BOM, the shops are in a level 
structure each of which provides the materials in the certain level of the BOM.  
The AGV would begin to assemble the materials from shops in varied levels to 
reach the final product in the last stage in the main shop. The model is looking for 
a path that fulfills the BOM and also is optimal considering the decision 
parameters. A configuration of the shops in the Material Requirement Planning is 
presented in Figure 2.   
 
 
Fig. 2 A Configuration of the Shops in the Material Requirement Planning 
 
www.ebook3000.com

122 
8   Optimal Path for AGV System with Intelligent Agents
 
 
AGV needs to decide which route to select to satisfy the objectives of the 
problem. In the stated condition, AGV should consider all time, cost, and AGV 
capability to select a route i.e. the lowest cost, shortest time, and the lowest 
occupied AGV capability must be regarded. To achieve this goal, mathematical 
programming approach is applied for optimization. To find out the cost, time, and 
capability parameters intelligent agents are proposed. Intelligent agents help AGV 
to evaluate all paths. 
In artificial intelligence, an intelligent agent (IA) is an autonomous entity which 
observes and acts upon an environment (i.e. it is an agent) and directs its activity 
towards achieving goals (i.e. it is rational). Intelligent agents may also learn or use 
knowledge to achieve their goals. They may be very simple or very complex: a 
reflex machine such as a thermostat is an intelligent agent, as is a human being, as 
is a community of human beings working together towards a goal. 
Intelligent agents are often described schematically as an abstract functional 
system similar to a computer program. For this reason, intelligent agents are 
sometimes called abstract intelligent agents (AIA) to distinguish them from their 
real world implementations as computer systems, biological systems, or 
organizations. Some definitions of intelligent agents emphasize their autonomy, 
and so prefer the term autonomous intelligent agents. Still others considered goal-
directed behavior as the essence of intelligent and so prefer a term borrowed from 
economics, "rational agent". 
Intelligent agents in artificial intelligence are closely related to agents in 
economics, and versions of the intelligent agent paradigm are studied in cognitive 
science, ethics, the philosophy of practical reason, as well as in many 
interdisciplinary socio-cognitive modeling and computer social simulations. 
 
 
Fig. 3 A configuration of the intelligent agent and information transfer process 

8.2 
Statement of the Problem 
123
 
 
Intelligent agents are also closely related to software agents (an autonomous 
software program that carries out tasks on behalf of users). In computer science, 
the term intelligent agent may be used to refer to a software agent that has some 
intelligence, regardless if it is not a rational agent. 
In this chapter, we propose three intelligent agents for time, cost and capability, 
respectively. The core of these agents is optimization. The results of all agents are 
transferred to a computer data base which conducts the AGV through guide path 
in the shop floor.  A configuration of the intelligent agent and information transfer 
process is shown in Figure 3. 
The AGV collects the information and process them in the separate intelligent 
agents. The results are sent to the data base and view by the controller. The 
controller issue required orders to the AGV.  
To estimate the time of traveling from one shop (node) to another one in our 
proposed network, a mathematical optimization is worked out by an intelligent 
agent. While the velocity (v) of AGV is known, the time is computed as follows: 
 
t
v
d
.
=
, 
 
 
 
 
 
 
            (1) 
 
Where d is the movement distance, v is AGV velocity and t is the time of 
movement. Due to a Cartesian coordinates structure as shown in Figure 4.  
 
 
Fig. 4 Cartesian coordinates for AGV movement 
 
 
www.ebook3000.com

124 
8   Optimal Path for AGV System with Intelligent Agents
 
 
to compute the distance we use, 
2
0
2
0
)
(
)
(
y
y
x
x
d
−
+
−
=
,  
 
 
 
            (2) 
 
wherex is the horizontal movement and y is the vertical movement. As a result, we 
have, 
v
d
t =
.  
 
 
 
 
                                        (3) 
Therefore, time is computed and transferred to the central computer.  
Cost is integrated with the time computed from last section. Our proposed 
intelligent agent use the following formulae to estimate the cost of moving from 
one shop to another one, 
cost
fix
)
cost
variable
(
cost
+
×
=
d
,  
 
                          (4) 
 
Variable cost depends on the distance that the AGV move (such as, defect, 
amortization, etc.). But the fix cost is independent of the distance and include set 
up cost, controller salary, etc.  
Here, we want to estimate the AGV capability during the assembly process. 
Some parameters affect the capability of an AGV. We should investigate whether 
a parameter is significant on capability or not. One way to survey the effect of 
independent variables on dependent variable is multiple linear regression model. 
Therefore, we consider the following equation which is computed in our proposed 
intelligent agent for capability, 
 
.
,...,
1
;
,...,
1
,
...
1
1
0
m
j
n
i
r
r
u
j
j
j
i
=
=
+
+
+
+
=
ε
β
β
β
             (5) 
 
where
0
β  is the intercept, 
j
β s are the coefficients for rjparameters and ε  is the 
error term. The aim is identifying the
j
β s which are not important on capability 
(ui). Here, we apply two-sided hypothesis testing as follows; 
 
.0
:
;0
:
1
0
≠
=
j
j
H
H
β
β
  
 
 
 
 
                          (6) 
 
The test of the null hypothesis H0 against the two sided alternative proceeds as in 
the three steps. The first is to compute the standard error of 
j
β ,
)
(
j
SE β
. The 
standard error of 
j
β  is an estimator of 
j
β
σ
, the standard deviation of the 
sampling distribution of 
j
β .  

8.2 
Statement of the Problem 
125
 
 
2
1
2
1
2
2
2
)
(
1
)
(
2
1
1
⎥
⎦
⎤
⎢
⎣
⎡
−
−
×
−
×
=
∑
∑
=
=
m
j
j
m
j
j
j
r
r
m
r
r
m
m
j
ε
σ β
,  
 
 
 
           (7) 
 
2
)
(
j
j
SE
β
σ
β
=
. 
 
 
 
 
 
            (8) 
 
Although the formula for 
2
j
β
σ
is complicated, in applications the standard error is 
computed by regression software. The second step is to compute the t-statistic,  
 
)
(
0
j
j
SE
t
β
β −
=
 
 
 
 
 
 
 
            (9) 
 
The third step is to compute the p-value, the probability of observing a value of 
j
β  at least as different from zero as the estimate actually computed (
act
j
β
), 
assuming that the null hypothesis is correct. Stated mathematically, 
 
[
]
)
(
Pr
)
(
0
)
(
0
Pr
0
0
Pr
value
0
0
0
act
H
j
act
j
j
j
H
act
j
j
H
t
t
SE
SE
p
>
⇒
⎥
⎥
⎦
⎤
⎢
⎢
⎣
⎡
−
>
−
⇒
−
>
−
=
−
β
β
β
β
β
β
      (10) 
Where 
0
PrH denotes the probability computed under the null hypothesis, the 
second equality follows by dividing by 
)
(
j
SE β
, and 
act
t
is the value of the  
t-statistic actually computed. Because
j
β  is approximately normally distributed in 
large samples, under the null hypothesis the t-statistic is approximately distributed 
as a standard normal random variable, so in large samples, 
 
)
(
2
)
Z
Pr(
value
act
act
t
t
p
−
Φ
=
>
=
−
 
 
 
          (11) 
 
A small value of the p-value, say less than 5%, provides evidence against the null 
hypothesis in the sense that the chance of obtaining a value of 
j
β  by pure random 
variation from one sample to the next is less than 5% if, in fact, the null hypothesis 
is correct. If so, the null hypothesis is rejected at the 5% significance level. Simply 
we can reject the null hypothesis at the 5% significance level if, 
96
.1
>
act
t
. 
Therefore, if the hypothesis is accepted then we ensue that the corresponded 
parameter is not important and has no effect on the capability. 
www.ebook3000.com

126 
8   Optimal Path for AGV System with Intelligent Agents
 
 
While we determined the effective parameters on capability, we can find the 
regression value for capability omitting the noneffective parameters.  
8.3 
Mathematical Model 
Considering the network nature of the problem and the objective which is 
identifying shortest path or route, mathematical programming approach is applied. 
The network of the proposed problem is represented in Figure 5.  
 
(Cii',Tii', Pii’)
 
Fig. 5 The Network of the Problem 
All nodes indicate the shops except node 0 which shows the AGV. Arcs are 
identified with three criteria, cost, time, and AGV capability which are 
consequenced from the intelligent agents. Number of nodes are N and depends on 
the number of the shops that provide materials. Nodes are in levels as stated 
before. Mathematical programming approach in details is as follows. 
 
Indices: 
i 
Start node 
i=0,1,2,….,N 
i' 
End node 
i'=1,2,…,N 
j 
Level number 
j=0,1,2,….J 
 
Notations: 
 
Cii’ 
Cost of moving from node i to node i' 
Tii' 
Time duration of moving from node i to node i' 
)
(i
j
ϕ
 
The minimum value of moving from the start node i to the end nod i' 
in layer j 
N 
Number of nodes 

8.3 
Mathematical Model 
127
 
 
 
Maximum capability of an AGV 
τ  
Maximum time duration in hand to satisfy the demands 
B 
Maximum budget in hand 
Pii’ 
Capability of an AGV for moving from node i to node i’ 
 
⎩
⎨
⎧
=
′
          
          
          
otherwise
0
    
          
selected
 
is
 
path 
 
if
1
ii'
iiξ
 
 
Objective Function: 
 
{
}
 
and
)
(
)
(
1
ii
j
i
i
j
C
i
Min
i
′
−
′
≠
+
=
′
ϕ
ϕ
 
 
 
 
          (12) 
{
}
ii
j
i
i
T
i
Min
′
−
′
≠
+
)
(
 
1
ϕ
and  
 
 
 
                         (13) 
{
}
ii
j
i
i
P
i
Min
′
−
′
≠
+
)
(
 
1
ϕ
 
 
 
 
 
                         (14) 
Subject to: 
0
)0
(
0
=
ϕ
 
 
 
 
 
 
 
          (15) 
∑∑
′
′
′
≤
×
N
i
N
i
ii
ii
B
C
ξ
 
 
 
 
 
 
          (16) 
∑∑
′
′
′
≤
×
N
i
N
i
ii
ii
T
τ
ξ
 
 
 
 
 
 
          (17) 
∑∑
′
′
≤
×
N
i
N
i
ii
ii
P
δ
ξ
'
 
 
 
 
 
 
          (18) 
0
,
,
' ≥
′
′
ii
ii
ii
P
C
T
 
 
 
 
 
                        (19) 
 
Equations (12), (13), and (14) are the objective functions which aim to find the 
shortest path based on cost, time, and AGV capability, respectively. Equation (15) 
is the primary condition for starting the travel on nodes. Equation (16) guarantees 
that our travels won’t exceed our accessible budget. Equation (17) represents that 
the time needed to satisfy the demands is confined. Equation (18) guarantees the 
capability of AGV during the travels. Equation (19) is the sign relation. 
As it is cleared, the objective functions cause the decision maker not to be able 
to decide at once about time and cost and capability simultaneously. Hence, we do 
some changes on objective functions to mix them in to a single function that take 
into account all time and cost and capability as follows. 
δ
www.ebook3000.com

128 
8   Optimal Path for AGV System with Intelligent Agents
 
 
8.3.1 Normalization Process 
To transform the above three objective functions (12, 13 and 14) the normalization 
is required for making it possible to obtain time, cost and AGV capability, 
simultaneously. The normalization process is as follows: 
∑∑
=
=
′
′ =
N
i
N
i
ii
ii
n
ii
T
T
T
1
'
0
2
'
 
 
 
 
                      (20) 
where
n
iiT ′  is the normalized value of time duration for each arc. 
The same procedure is existed for costs: 
∑∑
=
=
′
′ =
N
i
N
i
ii
ii
n
ii
C
C
C
1
'
0
2
'
 
 
 
 
                         (21) 
 
where
n
ii
C ′  is the normalized value of cost for each arc. 
The same procedure is existed for AGV capability: 
∑∑
=
=
′
′ =
N
i
N
i
ii
ii
n
ii
P
P
P
1
'
0
2
'
 
 
 
 
                        (22) 
 
By the means of normalization the objective functions could be transformed to a 
single one as follows: 
{
} 
)
(
)
(
1
n
ii
n
ii
n
ii
j
j
P
C
T
i
Min
i
′
′
′
−
+
+
+
=
′
ϕ
ϕ
 
 
   (23) 
 
Equation (23) does time-cost-AGV capability optimization at the same time and 
its result is the optimum combination of time, cost, and AGV capability which 
ensue to the optimal path or route. Also, note that their importance weights are 
considered to be equal. But, if a decision maker tends to consider different 
importance for time, cost and capability, it is easily performed using common 
weighing approaches in the literature.   
 
Algorithm for Solving 
The following heuristic algorithm could be applied for solving the proposed 
problem in some stages.  
Step0- Identify number of nodes (factories) 

8.3 
Mathematical Model 
129
 
 
Step1- Identify Tii' ,Cii' and, Pii'  
Step2- Normalizing process 
Step3- Selecting the best combination of time, cost, and capability 
Step4- Satisfying the constraints 
Step5- Finding the optimal path (route) 
Step6- Termination 
 
The flow chart of the heuristic algorithm is illustrated in Figure 6. 
 
 
Fig. 6 The Flowchart of the Solving Algorithm 
Number of N 
Identify Tii'  ,Cii'andPii'  
Normalizing 
Process 
Selecting best 
time and cost 
Finding the 
Optimal Path 
If constraints 
are satisfied 
Termination 
Yes
No 
www.ebook3000.com

130 
8   Optimal Path for AGV System with Intelligent Agents
 
 
Regarding to the flowchart, in termination stage a path with all optimal time, 
cost, and AGV capability is identified at the same time. 
8.4 
Conclusions  
The obtained results extracted from the proposed methodology in a material 
handling system are helpful in providing better managerial insights for decision 
making in AGV planning and guide path maintenance. While a path contains 
several arcs in the proposed material handling network determining the arcs 
especially the most used ones helps fortifying them and prohibit halt in the system 
due to AGV or path break downs. Another managerial aspect is to make real time 
decisions underlying the proposed agents as decision supports. While demand and 
material supplies are dynamic therefore AGV planning should also be dynamic. 
Therefore the proposed agents help to make decisions at any time with respect to 
any demand fulfilled and material provision. We have considered an extension of 
the classical vehicle routing problem in which three dimensional packing 
constraints were introduced i.e. time, cost, and AGV capability. This problem 
featured three classical combinatorial optimization problems. Intelligent agents 
were designed for the triple criteria which used optimization tools to estimate the 
values and report them to the computer data base. We have applied a mathematical 
programming approach for optimizing the problem. By a normalization process all 
time, cost, and AGV capability were included as the arc’s value of the proposed 
network. The effectiveness of the proposed algorithm was validated using two 
illustrative examples. 
References 
Bräysy, O., Gendreau, M.: Vehicle routing problem with time windows, Part I: Route 
construction and local search algorithms. Transportation Science 39(1), 104–118 
(2005a) 
Bräysy, O., Gendreau, M.: Vehicle routing problem with time windows, Part II: 
Metaheuristics. Transportation Science 39(1), 119–139 (2005b) 
Campbell, A., Savelsbergh, M.: Efficient insertion heuristics for vehicle routing and 
scheduling problems. Transportation Science 38(3), 369–378 (2004) 
Co, C.G., Tanchoco, J.M.A.: A review of research on AGVs vehicle management. 
Engineering Costs and Production Economics 21, 35–42 (1991) 
Cordeau, J.-F., Desaulniers, G., Desrosiers, J., Solomon, M., Soumis, F.: VRP with time 
windows. In: Toth, P., Vigo, D. (eds.) The Vehicle Routing Problem, pp. 157–193. 
SIAM Monographs on Discrete Mathematics and Applications, Philadelphia (2002) 
Cordeau, J.-F., Gendreau, M., Hertz, A., Laporte, G., Sormany, J.-S.: New heuristics for the 
vehicle routing problem. Les cahiers du GERAD G-2004-33, Université de Montréal 
HEC, Montréal, Canada (2004) 

References 
131
 
 
Desaulniers, G., Langevin, A., Riopel, D., Villeneuve, B.: Dispatching and conflict-free 
routing of automated guided vehicles: an exact approach. The International Journal of 
Flexible Manufacturing Systems 15, 309–331 (2003) 
Feillet, D., Dejax, P., Gendreau, M.: Traveling Salesman Problems with Profits. 
Transportation Science 39(2), 188–205 (2005) 
Fleischmann, B., Gnutzmann, S., Sandvoß, E.: Dynamic vehicle routing based on on-line 
traffic information. Transportation Science 38(4), 420–433 (2004) 
Ganesharajah, T., Hall, N.G., Sriskandarajah, C.: Design and operational issues in AGV-
served manufacturing systems. Annals of Operations Research 76, 109–154 (1998) 
Hansen, P., Mladenović, N.: A tutorial on Variable Neighborhood Search. Les cahiers du 
GERAD G-2003- 46, Université de Montréal HEC, Montréal, Canada (2003) 
Hasle, G.: Heuristics for rich VRP models. Presented at the Seminar at GERAD, Montréal, 
Canada (2003) 
Ho, Y.C., Wu, F.C.: A bidding-based control strategy for multiple-load automated guided 
vehicles. Journal of the Chinese Institute of Industrial Engineers 19(4), 82–94 (2002) 
Kilby, P., Prosser, P., Shaw, P.: A comparison of traditional and constraint based heuristic 
methods on vehicle routing problems with side constraints. Constraints 5, 389–414 
(2000) 
King, R.E., Wilson, C.: A review of automated guided vehicle system design and 
scheduling. Production Planning and Control 2, 44–51 (1991) 
Krishnamurthy, N.N., Batta, R., Karwan, M.H.: Developing conflict-free routes for 
automated guided vehicles in a flexible manufacturing system. Operations Research 41, 
1077–1090 (1993) 
Langevin, A., Lauzon, D., Riopel, D.: Dispatching, routing and scheduling of two 
automated guided vehicles in a flexible manufacturing system. International Journal of 
Flexible Manufacturing Systems 8, 246–262 (1996) 
Laporte, G., Semet, F.: Classical heuristics for the capacitated VRP. In: Toth, P., Vigo, D. 
(eds.) The Vehicle Routing Problem, pp. 109–128. SIAM Monographs on Discrete 
Mathematics and Applications, Philadelphia (2002) 
Lee, J.H., Lee, B.H., Choi, M.H.: A real-time traffic control scheme of multiple AGV 
systems for collision free minimum time motion: a routing table approach. IEEE 
Transactions on Systems, Man and Cybernetics—Part A: Systems and Humans 28, 347–
358 (1998) 
Lin, J.T., Wang, F.K., Young, J.R.: Virtual vehicle in the connecting transport automated 
material-handling system (AMHS). International Journal of Production Research 42(13), 
2599–2610 (2004) 
Lin, J.T., Wu, C.K., Yang, C.J.: Vehicle management of AMHS in 300 MM wafer FAB. 
Journal of the Chinese Institute of Industrial Engineers 19(4), 1–10 (2002) 
Mitrović-Minić, S.: Pickup and delivery problem with time windows: A survey. Technical 
report TR, School of Computing Science, Simon Fraser University, Burnaby, BC, 
Canada (1998) 
Mladenović, N., Hansen, P.: Variable Neighborhood Search. Computers and Operations 
Research 24, 1097–1100 (1997) 
Oboth, C., Batta, R., Karwan, M.: Dynamic conflict-free routing of automated guided 
vehicles. International Journal of Production Research 37, 2003–2030 (1999) 
Polacek, M., Hartl, R., Doerner, K., Reimann, M.: A variable neighborhood search for the 
multi depot vehicle routing problem with time windows. Journal of Heuristics 10, 613–
627 (2004) 
www.ebook3000.com

132 
8   Optimal Path for AGV System with Intelligent Agents
 
 
Powell, W., Snow, W., Cheung, R.: Adaptive labeling algorithms for the dynamic 
assignment problem. Transportation Science 34(1), 50–66 (2000) 
Psaraftis, H.: Dynamic vehicle routing problems. In: Golden, B., Assad, A. (eds.) Vehicle 
Routing: Methods and Studies, pp. 233–248. North-Holland, Amsterdam (1988) 
Psaraftis, H.: Dynamic vehicle routing: Status and prospects. Annals of Operations 
Research 61, 143–164 (1995) 
Qiu, L., Hsu, W.-J., Wang, H.: Scheduling and routing algorithms for AGVs: a survey. 
International Journal of Production Research 40, 745–760 (2002) 
Rajotia, S., Shanker, K., Batra, J.L.: A Semi-dynamic window constrained routing strategy 
in an AGV system. International Journal of Production Research 36, 35–50 (1998) 
Savelsbergh, M., Sol, M.: The general pickup and delivery problem. Transportation 
Science 29(1), 17–30 (1995) 
Savelsbergh, M., Sol, M.: DRIVE: dynamic routing of independent vehicles. Operations 
Research 46, 474–490 (1998) 
Shaw, P.: A new local search algorithm providing high quality solutions to vehicle routing 
problems. Technical report, APES group, Department of Computer Sciences, University 
of Strathclyde, Glasgow, Scottland (1997) 
Yang, J., Jaillet, P., Mahmassani, H.: Real-time multi-vehicle truckload pickup-and-
delivery problems. Transportation Science 38(2), 135–148 (2004) 
 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles,  
133 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_9 
 
Chapter 9 
Earliness/Tardiness for a Multiple AGV System 
9.1 
Summary 
Flexible manufacturing systems (FMSs), container terminals, warehousing systems, 
and service industries including hospital transportations are employing automated 
guided vehicle systems (AGVs) for the material handling to maintain flexibility and 
efficiency of production and distribution. For the efficient operation, it is requested 
to realize the synchronized operations for the simultaneous scheduling of production 
systems and transportation systems. The main issue treated in this chapter is the 
simultaneous optimization problems for penalized earliness and tardiness for the 
AGVs in the manufacturing system. The production scheduling problems asks an 
optimal production sequence and starting time of operations for jobs at machines for 
multi-stages with respect to a specified technical precedence relation. The vehicle 
management problems are classified into: 
(1) dispatching, which is to assign tasks to vehicles; 
(2) routing, which is to select specific paths taken by vehicles; 
(3)  scheduling, which is to determine the arrival and departure times. 
Unlike the classical vehicle routing problem (VRP) formulation, conflict-free 
constraints should be considered for the routing of AGVs for semiconductor 
fabrication. The interaction between production and transportation control is 
discussed by Mantel and Landerweerd (1995). In the flowshop production 
systems, the production and transportation schedules are usually controlled by a 
pull type of policy in case of fork lifts or conveyor systems. However, for FMSs 
environment with AGV systems, the optimal machine schedules highly depend on 
the selection of dispatching and routing because it is extremely difficult to predict 
the transportation time when the conflicts and interferences between vehicles 
cannot be neglected.  
Automated guided vehicle (AGV) is a material handling equipment traveling 
on a network of guide paths. The FMS is a configuration of various shops, also 
called working stations, each with a specific function such as milling, washing, or 
assembly. Each shop is connected to the guide path network by a pick-up/delivery 
(P/D) station where pallets are transferred from/to the AGVs. Pallets of products 
www.ebook3000.com

134 
9   Earliness/Tardiness for a Multiple AGV System
 
 
are moved between the shops by the AGVs. The guide path is composed of aisle 
segments on which the vehicles are assumed to travel at a constant speed. The 
vehicles can travel forward or backward. As many vehicles travel on the guide 
path simultaneously, collisions must be avoided. AGV systems are implemented 
in various industrial contexts: container terminals, part transportation in heavy 
industry, flexible manufacturing systems. For a general review on AGV problems, 
the reader is referred to (Co and Tanchoco, 1991; King and Wilson, 1991; 
Ganesharajah et al., 1998). For a recent review on AGVs scheduling and routing 
problems and issues, the reader is referred to the survey of Qiu et al. (2002). These 
authors identified three types of algorithms for AGVs problems:  
(1) for general path topology,  
(2) for path optimization,  
(3) for specific path topologies.  
Methods of the first type can be divided in three categories:  
(1a) static methods, where an entire path remains occupied until a vehicle 
completes its route;  
(1b) time-window based methods, where a path segment may be used by different 
vehicles during different time-windows;  
(1c) dynamic methods, where the utilization of any segment of path is 
dynamically determined during routing rather than before as with categories (1a) 
and (1b).  
This chapter addresses a penalized earliness and tardiness scheduling problem 
for AGVs in a manufacturing system.  
Scheduling problems arise in areas as diverse as production planning, personnel 
planning, product configuration, and transportation. An overview of the wide range 
of constraints in scheduling, together with the most powerful propagation algorithms 
for these constraints are given (Baptiste et al., 2001; Baptiste et al., 1995).  
Production scheduling, dispatching, routing and scheduling decisions for AGVs 
can be made simultaneously or separately. Most of the literature treats one or two 
of the problems at the same time. An extensive review has been addressed by Vis 
(2006) for operational control of AGVs. A widely used technique for dispatching 
is the simulation. The heuristic rules are used in on-line control systems. For 
routing and scheduling of AGVs, several techniques have been used to maximize 
the total system performance taking in to account for deadlock or conflicts for 
AGVs. Kim and Tanchoco (1991) studied the problem of finding conflict-free 
routes in a bi-directional network. The algorithm is based on the shortest path 
methods through the concept of time-window graph. Petri net is used to analyze 
deadlock and conflict-free conditions (Dotoli and Fanti, 2004; Wu and Zhou, 
2005). Singh and Tiwari (2002) presented an intelligent agent framework to find a 
conflict-free shortest-time path. Nishi et al. (2005) provided a mathematical model 
for routing problem. Lagrangian decomposition technique was used solve the 
problem. Ghasemzadeh et al. (2009) presented a conflict-free scheduling and 

9.1 
Summary 
135
 
 
routing in mesh topologies. It can generate the shortest path for scheduling 
predicting conflicts and select another path in the case of failure.  
The literature discussed above on scheduling of AGVs hardly considers the 
capacity constraints of the machines where transportation jobs become available 
and sequencing of operations at the machines. The simultaneous production 
scheduling and transportation routing problem is one of the difficult joint 
problems. The problems for AGVs have been studied mostly in operations 
research and/or FMS literature. A common approach for FMS scheduling is based 
on the discrete event simulation with dispatching rules (Tunali, 1998). 
Lacomme et al. (2005) introduced a branch and bound algorithm coupled with 
discrete event simulation. Blazewicz et al. (1994) addressed the two steps 
algorithm for integrating machine scheduling and the conflict-free routing 
problems. In their approach, the production scheduling and routing problems are 
solved separately. Bilge and Ulusoy (1995) developed a time-window approach to 
solve the simultaneous scheduling of machines and material handling in FMSs. 
They formulated the problem as a mixed integer programming problem. Ulusoy et 
al. (1997) and Jerald et al. (2006) dealt with the application of the genetic 
algorithm on the problem. Khayat et al. (2006) studied an integrated method with 
mixed integer linear programming (MILP) and constrained programming. Never 
the less in their model, vehicles can always select a shortest path from a machine 
station to another machine station without the consideration of conflict and 
collision on the detailed routing for vehicles. Corre´a et al. (2007) proposed an 
integrated scheduling of dispatching and vehicle routing with the consideration of 
conflict-free path selection, but it does not take into account the scheduling of 
machines and vehicles simultaneously.  
In the above literature, it is extremely difficult to consider production 
scheduling and conflict-free routing because the number of decision variables is 
significantly increased. Therefore, the conventional decomposition algorithm is 
not sufficient to solve the problem efficiently. The integration of cut generation 
with various decomposition methods is widely studied recently (2006). The logic-
based Benders decomposition method was introduced by Hooker (2003). The 
advantage of the logic-based Benders is that it permits to combine MILP and the 
constraint programming approach. Similar idea was applied to solve the 
simultaneous planning and scheduling problems (2006). 
A number of authors have addressed the conflict free routing problem with a 
static transportation requests set, i.e., with all requests known a priori. Lee et al. 
(1998) present a two-staged traffic control scheme to solve a conflict free routing 
problem. Their heuristic method consists of generating off-line k-shortest paths in 
the first stage before the on-line traffic controller picks a conflict free shortest path 
whenever a dispatch command for an AGV is issued (second stage). Rajotia et al. 
(1998) propose a semi-dynamic time window constrained routing strategy. They 
use the notions of reserved and free time windows to manage the motion of 
vehicles. Krishnamurthy et al. (1993) propose an optimization approach. Their 
objective is to minimize the makespan. They assume that the assignment of tasks  
 
www.ebook3000.com

136 
9   Earliness/Tardiness for a Multiple AGV System
 
 
to AGVs is given and they solve the routing problem by column generation. Their 
method generates very good solutions in spite of the fact that it is not optimal 
(column generation is performed at the root node of the search tree only).  
Oboth et al. (1999) present a heuristic method to solve the dispatching and 
routing problems but not simultaneously. Scheduling is performed first and a 
sequential path generation heuristic (SPG) is used to generate conflict free routes. 
The SPG is inspired from Krishnamurthy et al. (1993) static version of the AGV 
routing problem and applied to a dynamic environment while relaxing some of the 
limiting assumptions like equal and constant speeds of AGVs. When conflict is 
encountered, no feedback is sent to the scheduling module. The AGV being routed 
has to be delayed if an alternate route cannot be generated. The authors use rules 
for positioning idle AGVs instead of letting the system manage them.  
Langevin et al. (1996) propose a dynamic programming based method to solve 
exactly instances with two vehicles. They solve the combined problem of 
dispatching and conflict free routing. Desaulniers et al. (2003) propose an exact 
method that enables to solve instances with up to four vehicles. Their approach 
combines a greedy search heuristic (to find a feasible solution and set bound on 
delays), column generation and a branch and cut procedure. Their method presents 
however some limits since its efficiency depends highly on the performance of the 
starting heuristic. If no feasible solution is found by the search heuristic, then no 
optimal solution can be found. The search heuristic performs poorly when the 
level of congestion increases. 
9.2 
Statement of the Problem 
Consider a jobshop manufacturing system with multiple AGVs performing 
material handling. There is a number of AGVs pre-specified for material handling. 
The AGVs guide paths may be occupied in the time that an AGV is sent to do the 
material handling. Therefore, finding the free path to fulfill the function is 
important. The manufacturing process plan of all jobs processing time is cleared. 
If an AGV arrives early, it should waits until the part processing is finished. The 
waiting time is related to the distance the AGV moves and the due date of jobs in 
shops. The overall problem is to determine the manufacturing schedule and 
routing for AGVs to minimize the total penalized earliness/tardiness and AGVs’ 
waiting times at the shops in jobshop configuration. The following assumptions 
are considered for modeling the proposed problem.  
 
• The number of jobs, processing time for each job and the number of AGVs 
are given. 
• The started job cannot be interrupted once the processing of that is started at 
a shop. 
• Each AGV can transport a single load at a time. A transportation task is the 
set of a starting node and a destination node. 

9.2 
Statement of the Problem 
137
 
 
The overall decision variables for the problem consist of the allocation of 
AGVs to the shops for material handling and the conflict-free routing for vehicles. 
To estimate the time of traveling from one shop (node) to another in our 
proposed network, a mathematical relation is employed. While the velocity (v) of 
AGV is known, the time is computed as follows: 
t
v
d
.
=
, 
 
 
 
                                              (1) 
where d is the movement distance, v is AGV velocity and t is the time of 
movement, due to a Cartesian coordinates structure as shown in Figure 1.  
Movement 
 
Fig. 1 Cartesian coordinates for AGV movement 
to compute the distance, we use rectilinear formulae, 
0
0
y
y
x
x
d
−
+
−
=
,  
 
 
                                  (2) 
where x is the horizontal movement and y is the vertical movement. As a result, 
we have, 
v
d
t =
.  
 
 
 
                                              (3) 
Therefore, AGV movement time is computed. 
 
 
 
www.ebook3000.com

138 
9   Earliness/Tardiness for a Multiple AGV System
 
 
9.3 
Mathematical Model 
Here, we formulate the proposed problem, mathematically. The indices, parameters 
and decision variable are introduced below. 
Indices: 
i 
Index for jobs; 
m
i
,...,
2,1
=
 
j 
Index for AGVs; 
n
j
,...,
2,1
=
 
'
,k
k
 
Index for shops; 
o
k
o
k
,...,
3,2
'
,
,...,
2,1
=
=
 
 
Parameters: 
α  
weight for total earliness; 
0
≥
α
 
β  
weight for total tardiness; 
0
≥
β
 
ik
p  
processing time of jobi  being processed in shop k 
ik
du  
due date of jobi  being processed in shop k 
dkk' 
distance between any two shops k and k' 
V 
velocity of AGV (same for all AGVs) 
tjkk' 
Movement time for AGV j between nodes (shops) k and k' 
Eik 
earliness of job i being processed in shop k 
TAik 
tardiness of job i being processed in shop k 
Cik 
completion time for job i  being processed in shop k 
Qik 
allocation of job i to shop k; 1, if job i is allocated to shop k, 0, 
otherwise 
 
 
 
Decision variables: 
⎩
⎨
⎧
=
otherwise,
0
  
shop
in 
  
  
job
on 
 
scheduled
 
is
  
 
AGV
 
if
 
1
k
i
j
X jik
 
⎩
⎨
⎧
=
otherwise,
0
  
 
AGV
by 
busy 
 
is
 '
 
and
 
 
shops
between 
path 
 a 
if
 
1
'
j
k
k
Y jkk
 
for
.
,
,...
1
,
,...,
1
,
...,
,
1
o
k
n
j
m
i
=
=
=
 
Objective function: 
∑∑
∑∑
=
=
=
=
+
=
0
1
1
1
1
.
.
k
m
i
ik
o
k
m
i
ik
TA
E
z
Min
β
α
 
 
 
           (4) 
where, 

9.3 
Mathematical Model 
139
 
 
,
,
1
1
2
1
1
2
∑∑
∑∑
=
=
=
=
−
=
−
=
o
k
m
i
ik
ik
o
k
m
i
ik
ik
C
p
du
p
β
α
o
k
m
i
,.....,
1
,
,....,
1
=
=
.  
            (5) 
 
The weights for total earliness and tardiness are loss functions of processing 
times, due dates and completion times.  Note that, α  and β  are computed based 
on quadratic loss function with a positive squared subtraction of processing times 
from due dates and completion times for earliness and tardiness, respectively. 
Constraints: 
,
,.....,
1
,
,....,
1
,1
1
o
k
m
i
X
n
j
jik
=
=
=
∑
=
 
          (6) 
,
,....,
1
,1
1
1
n
j
X
m
i
o
k
jik
=
=
∑∑
=
=
 
 
 
          (7) 
,
,.....
1
,
,...,
1
,
,....,
1
,1
.
'
o
k
n
j
m
i
Y
X
jkk
jik
=
=
=
=
           (8) 
,1
'
,
,...,
1
,1
1
'
+
=
=
=
∑
=
k
k
o
k
Y
n
j
jkk
  
 
          (9) 
,1
'
,
,...,
1
,
,...,
1
,1
.
1
'
+
=
=
=
=
∑
=
k
k
o
k
m
i
Q
Y
n
j
ik
jkk
 
         (10) 
,
,...,
1
,
,...,
1
,1
.
1
o
k
m
i
Q
X
n
j
ik
jik
=
=
=
∑
=
 
 
         (11) 
,
,.....,
1
,
,....,
1
,
.
1
'
o
k
m
i
t
X
p
n
j
jkk
jik
ik
=
=
=∑
=
 
         (12) 
,
,.....,
1
,
,....,
1
,
1
,
o
k
m
i
p
C
C
ik
k
i
ik
=
=
+
≥
−
 
 
         (13) 
{
}
,
,.....,
1
,
,....,
1
,
,
max
'
o
k
m
i
du
C
t
TA
ik
ik
jkk
ik
=
=
−
=
 
         (14) 
{
}
ik
ik
jkk
ik
C
du
t
E
−
=
,
max
'
, 
o
k
m
i
,.....,
1
,
,....,
1
=
=
, 
         (15) 
{ }
.
,....,
1
,
,.....,
1
,
,....,
1
,
1,0
,
'
n
j
o
k
m
i
Y
X
jkk
jik
=
=
=
∈
          (16) 
www.ebook3000.com

140 
9   Earliness/Tardiness for a Multiple AGV System
 
 
Constraints (6) specify that exactly one AGV is scheduled at the kth shop. 
Constraints (7) define each AGV to be scheduled only once. Constraints (8) 
emphasize that when an AGV is scheduled for a job in a shop then the path from 
that shop to the next immediate shop is busy. Constraints (9) imply that only one 
AGV is allocated to a shop. Constraints (10) show that for a job-shop allocation 
only one AGV occupies the path between any two nodes, too. Constraints (11) 
indicate that for a job-shop allocation only one AGV is scheduled. Relations (12) 
compute the processing times of jobs in shops. Relations (13) show an inequality 
between the completion times of job in a previous shop and the processing time of 
the job in next shop. Relations (14) present the tardiness. Relations (15) present 
the earliness. Relations (16) indicate that all variables are binary.  
Since formulae (14) and (15) are nonlinear, we linearize them as follows: 
 ,'
jkk
ik
t
E
≥
o
k
m
i
,.....,
1
,
,....,
1
=
=
,  
 
                     (17) 
,
ik
ik
ik
C
du
E
−
≥
 
o
k
m
i
,.....,
1
,
,....,
1
=
=
, 
 
         (18) 
  ,'
jkk
ik
t
TA ≥
 
o
k
m
i
,.....,
1
,
,....,
1
=
=
, 
 
         (19) 
  ,
ik
ik
ik
du
C
TA
−
≥
 
o
k
m
i
,.....,
1
,
,....,
1
=
=
. 
 
         (20) 
Clearly, the equation (8) is nonlinear due to product of two binary decision 
variables leading to inefficiency of the outputs and spending longer time for 
convergence purposes. So, we linearize it by substituting the binary variable 
ijkl
ε
as follows,  
'
,
,
,
,
.
'
'
k
k
j
i
Y
X
jkk
jik
ijkk
∀
=
ε
. 
 
 
                     (21) 
Meanwhile, the following linear inequalities should be added to the 
mathematical model, 
'
,
,
,
,0
5.1
'
'
k
k
j
i
Y
X
jkk
jik
ijkk
∀
≥
+
−
−
ε
, 
 
 
         (22) 
'
,
,
,
,0
5.1
'
'
k
k
j
i
Y
X
jkk
jik
ijkk
∀
≤
−
−
ε
. 
 
 
         (23) 
Therefore, the final linearized mathematical model is given below: 
Eq. (4) 
Eq. (5) 
 
s.t. 
Eq. (6) and (7) 
Eq. (21)-(23) 

9.3 
Mathematical Model 
141
 
 
Eq. (9)-(13) 
Eq. (17)-(20) 
Eq. (16). 
 
Next, we test the applicability of the proposed mathematical model in the 
numerical results. 
Here, we work out on the computational aspects of the proposed mathematical 
model. The number of variables and constraints in the linearized model are 
presented parametrically in tables 1 and 2, respectively, based on the variable 
indices. 
Table 1 The number of variables in the linearized model 
Count 
Variable 
n×m×o 
Xjik 
n×o×(o-1) 
Yjkk' 
Sum=  (n×m×o) + (n×m×(o-1))  
Table 2 The number of constraints in the linearized model 
Count 
Con. 
Count 
Con. 
i×o 
(11) 
m×o 
(6) 
i×o 
(12) 
n 
(7) 
i×o 
(13) 
3(n×m×o×(o-1))
(21-23) 
4(i×o) 
(17-20)
o×(o-1) 
(9) 
m×o×n 
(16) 
m×o×(o-1) 
(10) 
Sum= (m×o) +( n)+3(n×m×o×(o-1))+(o×(o-1))+(m×o×(o-1))+7(i×o)+( m×o×n) 
According to tables 1 and 2, when the number of jobs, shops and AGVs 
increase, the search space increases drastically. The solution should provide the 
optimal paths for each AGV and prohibit the conflict among AGVs minimizing 
the total earliness and tardiness. 
AGVs begin their movement from a corresponding shop according to the 
process plan and go on through other shops to complete the pre-defined job 
sequence and deliver the finished product to the depot. These movements of 
AGVs configure a network as shown in Figure 2. The AGVs movements are based 
on the due dates of the jobs and distances between any two shops. Thus, to prevent 
the AGVs conflicts the solution algorithm should consider an allocation between 
jobs and AGVs so that no conflict occurs.    
At each iteration, the arcs (paths between any two shops) in the network are 
divided into two sets; the arcs occupied by an AGV (A); the free arcs (B). A 
network structure (A, B) is optimal if an AGV serves as a handling device for a job
www.ebook3000.com

142 
9   Earliness/Tardiness for a Multiple AGV System
 
 
 is one and at the same time the AGV waiting time to move to next 
job is minimized. With those conditions, the current solution is optimal. 
Otherwise, there are arcs in the network that violate the optimal conditions. An arc 
is a violated arc if it belongs to B and has lower waiting time than an ark in A. This 
Algorithm maintains a feasible arc at each iteration and successfully goes toward 
the optimality conditions until it becomes optimal.  
 
 
Fig. 2 A network configuration of the problem 
Heuristic Search Algorithm 
To create the initial or Basic Feasible Solution (BFS) in Step 0, an artificial node 0 
and artificial arcs are appended to the network. The node ‘0’ will be the source of 
the network and the artificial arcs connect the nodes to the source. The set B 
consists of the main arcs in the network, and the set A is empty.  
Selection of an earliness/tardiness scheme is an important decision in Step 1. 
During this step the waiting time of the AGVs on non-basic arcs are recalculated. 
If there is at least one that violates its optimality condition it is a candidate to enter 
the basis.  
In Step 1, appending the entering arc (k, k'), an arc with violation, to the 
network forms a unique cycle, W, with the arcs of the basis.  
In order to eliminate this cycle (Step 2), one of its arcs must leave the basis. The 
cycle is eliminated when we have augmented flow by a minimum amount of 
earliness or tardiness to force the flow in one or more arcs of the cycle to the next 
shop. By augmenting the flow in an empty arc, the objective value of the solution is 
improved. The first task in determining the leaving arc is the identification of all arcs 
of the cycle. The flow (AGV path) change is determined by the equation 
{
}
W
k
k
Yjkk
∈
=
)'
,
( 
all
for 
min
'
θ
. The leaving arc is selected based on cycle W.  
A
k
k
∈
)'
,
(

9.3 
Mathematical Model 
143
 
 
The substitution of entering for the leaving arc and the reconstruction of new 
network is called a pivot (Step 3). After pivoting to change the basis, the 
earliness/tardiness 
for 
each 
arc 
A
k
k
∉
)'
,
(
 
is 
calculated. 
If 
the 
earliness/tardiness for all 
{
}
B
A
k
k
,
)'
,
(
∈
 satisfies the optimality condition then 
the current basic feasible solution is optimal. Otherwise, an arc (k, k') where there 
is a violation should be chosen and operations of the algorithm should be repeated. 
The steps of the proposed search algorithm are specified in Figure 3. 
 
Fig. 3 The proposed search algorithm 
Architecture of Solution Approach 
Here, the architecture and operations of the proposed solution approach is 
described, briefly. At the start of process, the Job Generator generates a few jobs 
for the AGVs. These jobs will be appended to the remaining jobs, which is empty 
at the beginning. The remaining jobs are used by the heuristic search algorithm 
and the output of this method is an individual job for every AGV. When the time 
is running, the travelled and waited times of every AGV should be updated. At the 
same time, if the AGV picks up the job, the assigned job for the AGV will be 
deleted and removed from the list of remaining jobs. If the job should be delivered 
to the shop, it could not be removed until meeting time between the preceding and 
proceeding shops. The Job Generator has to generate a few new jobs, when it finds 
out any idle AGV. The main architecture of the proposed solution approach is 
shown in Figure 4.  
 
www.ebook3000.com

144 
9   Earliness/Tardiness for a Multiple AGV System
 
 
 
Fig. 4 Block diagram for the proposed solution approach 
9.4 
Conclusions 
In this chapter, the automated guided vehicle scheduling problem was formulated 
as a special case of the earliness/tardiness minimization. In the proposed problem 
the number of jobs, processing time for each job and the number of AGVs were 
assumed to be given. Also, the started job couldn't be interrupted once the 
processing of that was started at a shop, and each AGV could transport a single 
load at a time. Besides scheduling, the model was able to fulfill the conflict free 
routs for the AGVs. Due to nonlinear equations, a linearization process performed 
to make the mathematical model smooth for the solution approach. The number of 
parameters and variables and therefore the search space increased when the 
number of jobs, shops and AGVs increase. The solution should provide the 
optimal paths for each AGV and prohibit the conflict among AGVs minimizing 
the total earliness and tardiness. Then, a heuristic search algorithm and a solution 
methodology based on network concepts were developed for tackling the problem. 
Our computational results implied that the algorithms were efficient to find the 
optimal solution for large scale problems in negligible time. The heuristic search 
algorithm accompanied with the proposed solution architecture was a complete 
algorithm and it was efficient for dealing with the problems without any certain 
limits in size. 
References 
Baptiste, P., Le Pape, C., Nuijten, W.: Incorporating efficient operations research 
algorithms in constraint-based scheduling. In: First International Workshop on 
Artificial Intelligence and Operations Research, Timberline Lodge, Oregon (1995) 
Baptiste, P., Le Pape, C., Nuijten, W.: Constraint-Based Scheduling, Applying Constraint 
Programming to Scheduling Problems. Kluwer’s International Series (2001) 
Bilge, U., Ulusoy, G.: A time window approach to simultaneous scheduling of machines 
and material handling system in an FMS. Operations Research 43, 1058–1070 (1995) 

References 
145
 
 
Blazewicz, J., Burkard, R.E., Finke, G., Woeginger, G.J.: Vehicle scheduling in two-cycle 
flexible manufacturing systems. Mathematical and Computer Modelling 20, 19–31 
(1994) 
Co, C.G., Tanchoco, J.M.A.: A review of research on AGVs vehicle management. 
Engineering Costs and Production Economics 21, 35–42 (1991) 
Corréa, A.I., Lagevin, A., Rousseau, L.-M.: Scheduling and routing of automated guided 
vehicles: A hybrid approach. Computers & Operations Research 34, 1688–1707 (2007) 
Desaulniers, G., Langevin, A., Riopel, D., Villeneuve, B.: Dispatching and conflict-free 
routing of automated guided vehicles: an exact approach. The International Journal of 
Flexible Manufacturing Systems 15, 309–331 (2003) 
Dotoli, M., Fanti, M.P.: Coloured timed Petri net model for real-time control of automated 
guided vehicle systems. International Journal of Production Research 9, 1787–1814 
(2004) 
Erdirik-Dogan, M.E., Grossmann, I.E.: A decomposition method for the simultaneous 
planning and scheduling of single stage continuous multi product plants. Industrial 
Engineering & Chemistry Research 45, 299–315 (2006) 
Ganesharajah, T., Hall, N.G., Sriskandarajah, C.: Design and operational issues in AGV-
served manufacturing systems. Annals of Operations Research 76, 109–154 (1998) 
Ghasemzadeh, S., Behrangi, E., Azgomi, M.A.: Conflict-free scheduling and routing of 
automated guided vehicles in mesh topologies. Robotics and Autonomous Systems 30, 
738–748 (2009) 
Hooker, J.N.: Logic-based benders decomposition. Mathematical Programming 96, 33–60 
(2003) 
Jerald, J., Asokan, P., Saravanan, R., Rani, A.D.C.: Simultaneous scheduling of parts and 
automated guided vehicles in an FMS environment using adaptive genetic algorithm. 
The International Journal of Advanced Manufacturing Technology 29, 584–589 (2006) 
Khayat, G.E., Lagevin, A., Riopel, D.: Integrated production and material handling 
scheduling using mathematical programming and constraint programming. European 
Journal of Operational Research 175, 1818–1832 (2006) 
Kim, C.W., Tanchoco, J.M.A.: Conflict-free shortest time bi-directional AGV routing. 
International Journal of Production Research 29, 2377–2391 (1991) 
King, R.E., Wilson, C.A.: A review of automated guided vehicle system design and 
scheduling. Production Planning and Control 2, 44–51 (1991) 
Krishnamurthy, N.N., Batta, R., Karwan, M.H.: Developing conflict-free routes for 
automated guided vehicles in a flexible manufacturing system. Operations Research 41, 
1077–1090 (1993) 
Lacomme, P., Moukrim, A., Tchernev, N.: Simultaneous job input sequencing and vehicle 
dispatching in a single-vehicle automated guided vehicle system: A heuristic branch-
and-bound approach coupled with a discrete events simulation model. International 
Journal of Production Research 43, 1911–1943 (2005) 
Langevin, A., Lauzon, D., Riopel, D.: Dispatching, routing and scheduling of two 
automated guided vehicles in a flexible manufacturing system. International Journal of 
Flexible Manufacturing Systems 8, 246–262 (1996) 
Lee, J.H., Lee, B.H., Choi, M.H.: A real-time traffic control scheme of multiple AGV 
systems for collision free minimum time motion: a routing table approach. IEEE 
Transactions on Systems, Man and Cybernetics—Part A: Systems and Humans 28, 
347–358 (1998) 
Mantel, R.J., Landeweerd, H.R.A.: Design and operational control of an AGV system. 
International Journal of Production Economics 41, 257–266 (1995) 
www.ebook3000.com

146 
9   Earliness/Tardiness for a Multiple AGV System
 
 
Nishi, T., Ando, M., Konishi, M.: Distributed route planning for multiple mobile robots 
using an augmented Lagrangian decomposition technique. IEEE Transactions on 
Robotics 22, 1191–1200 (2005) 
Oboth, C., Batta, R., Karwan, M.: Dynamic conflict-free routing of automated guided 
vehicles. International Journal of Production Research 37, 2003–2030 (1999) 
Qiu, L., Hsu, W.-J., Wang, H.: Scheduling and routing algorithms for AGVs: a survey. 
International Journal of Production Research 40, 745–760 (2002) 
Rajotia, S., Shanker, K., Batra, J.L.: A Semi-dynamic window constrained routing strategy 
in an AGV system. International Journal of Production Research 36, 35–50 (1998) 
Ralphs, T.K., Galati, M.V.: Decomposition and dynamic cut generation in integer linear 
programming. Mathematical Programming 106, 261–285 (2006) 
Singh, S.P., Tiwari, M.K.: Intelligent agent framework to determine the optimal conflict-
free path for an automated guided vehicle system. International Journal of Production 
Research 40, 4195–4223 (2002) 
Tunali, S.: Evaluation of alternate routing policies in scheduling a jobshop type FMS. 
Computers & Industrial Engineering 32, 243–250 (1998) 
Ulusoy, G., Sivrikaya-Srifoglu, F., Bilge, U.: A genetic algorithm approach to the 
simultaneous scheduling of machines and automated guided vehicles. Computers & 
Operations Research 24, 335–351 (1997) 
Vis, I.F.A.: Survey of research in the design and control of automated guided vehicle 
systems. European Journal of Operational Research 170, 677–709 (2006) 
Wu, N., Zhou, M.: Modeling and deadlock avoidance of automated manufacturing systems 
with multiple automated guided vehicles. IEEE Transactions on Systems Man and 
Cybernetics B 35, 1193–1201 (2005) 
 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles, 
147 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_10 
 
Chapter 10 
Markovian Model for Multiple AGV System 
10.1 
Summary 
Traditional manufacturing has relied on dedicated mass-production systems to 
achieve high production volumes at low costs. As living standards improve and 
the demands for new consumer goods rise, manufacturing flexibility gains 
prominence as a strategic tool for rapidly changing markets. Flexibility, however, 
cannot be properly incorporated in the decision-making process if it is not well 
defined and measured in a quantitative manner. Flexibility in its most rudimentary 
sense is the ability of a manufacturing system to respond to changes and 
uncertainties associated with the production process (Miettinenet al., 2010; Kumar 
and Sridharan, 2009; Das et al., 2009). A comprehensive classification of eight 
flexibility types was proposed in Browne et al. (1984). 
Flexible manufacturing systems (FMS) are crucial for modern manufacturing to 
enhance productivity involved with high product proliferation (Paraschidiset al., 
1994). As one of the critical components of the FMS, the flexible material 
handling system (MHS) plays a strategic role in the implementation of the FMS 
(Beamon, 1998). According to Tompkins et al. (2002), about 20–50% of the total 
production cost is spent on material handling. This makes the subject of material 
handling increasingly important. In addition, all the complexity of manufacturing 
is passed on to the MHS. Therefore, the flexible MHS has been vital for 
improving the FMS to fulfill the requirements of high product proliferation.  
Automated manufacturing systems (AMS), which are equipped with several 
CNC machines and AGV-based material handling system are designed and 
implemented to gain the automation and efficiency of production. To make use of 
all features of AMS, the planning in the AMS decision making process is critical 
because the planning decision has influence on the subsequent decision processes 
such as scheduling, dispatching, etc. The planning in automated manufacturing 
systems can be characterized as being online and short-term nature to respond to 
frequently changing production order. Given a production order, manufacturing 
planning function is responsible to establish a plan by decomposing the production 
task into a set of subtasks. An analysis of AMS dealing with changing demand can 
be found in (Terkaj et al., 2009). An extensive review of the loading problem for 
www.ebook3000.com

148 
10   Markovian Model for Multiple AGV System
 
 
an FMS can be found in (Grieco et al., 2001). An early stochastic programming 
approach to address the short-term production planning for an FMS can be found 
in (Terkaj and Tolio, 2006). 
Automated Guided Vehicle System (AGVS) becomes popular in many 
industrial fields because of its flexibility, reliability, safety, and contribution to the 
increase of productivity and to the improvement of housekeeping. But, the 
performance of the material handling system is significantly influenced by several 
operating policies. One of the important operating policies is the positioning 
strategy of idle vehicles on the guide path (Egbehi, 1993; Kim, 1995).  
In most manufacturing systems, decision making is worked out at several 
stages of design, planning and operation. The role of performance modeling is 
significant in advanced manufacturing systems from economic viewpoints. 
However, events such as machine breakdown, changes in part type and volume, 
tool replacement, raw material and other short interruptions are effective on the 
desired performance of a manufacturing system. This problem is critical due to its 
impacts on the capacity of the system (Stoop and Wiers, 1996). Researches on the 
automated manufacturing systems imply that the machine failure is the major 
problem in analyzing system performance in comparison with other factors like 
raw material, equipment, software and workers (Sanchez, 1994). Therefore, 
reliability considerations should be taken into account for manufacturing system 
analysis. Researchers who studied this problem include (Hilderbrant, 1980; 
Kimemia, 1982; Liberopulos, 1993; Viswanadham and Narahari, 1992; Vinod, 
1983; Vinod and Solberg, 1984; Choiand Lee, 1998).  
Since the manufacturing systems experience different failure states, therefore 
considering these states in modeling a reliability problem is of importance. The 
best way for considering system states in modeling is to employ Markovian 
property. Reibman (1990) stated the problem in estimating the probability of 
failure in different state is vital for reliability computations.     
The increasing demand for the reliability assessment in manufacturing systems 
under several random parameters has been investigated by several approaches 
facilitating the computations of probability estimations. According to the following 
brief literature review, studies to compare Markovian and neural networks are  
few. Especially, modeling the reliability of an advanced manufacturing system 
considering AGVs is also rare.     
The improvement of safety in the process industries is related to assessment 
and reduction of risk in a cost-effective manner. Kančev and Čepin(2011) 
addressed the trade-off between risk and cost related to standby safety systems. 
An age-dependent unavailability model that integrated the effects of the test and 
maintenance (T&M) activities as well as component ageing was developed and 
represented the basis for calculating risk. The repair “same-as-new” process was 
considered regarding the T&M activities. Costs were expressed as a function of 
the selected risk measure. The time-averaged function of the selected risk measure 
was obtained from probabilistic safety assessment, i.e. the fault tree analysis. This 
function was further extended with inclusion of additional parameters related to 
T&M activities as well as ageing parameters related to component ageing. In that 

10.1 
Summary 
149
 
 
sense, a new model of system unavailability, incorporating component ageing and 
T&M costs, was presented. The testing strategy was also addressed. Sequential 
and staggered testings were compared. The developed approach was applied on a 
standard safety system in nuclear power plant although the method was applicable 
to standby safety systems that were tested and maintained in other industries as 
well. 
The problem of selecting a suitable maintenance policy for repairable systems 
and for a finite time period was presented by Marquez and Heguedas (2002). 
Since the late seventies, examples of models assessing corrective and preventive 
maintenance policies over an equipment life cycle exist in the literature. However, 
there are not too many contributions regarding real implementation of these 
models in the industry, considering realistic timeframes and for repairable 
systems. Modeling this problem requires normally the representation of different 
corrective and/or preventive actions that could take place at different moments, 
driving the equipment to different states with different hazard rates. An approach 
to pattern the system under finite periods of time has been the utilization of semi-
Markovian probabilistic models, allowing later a maintenance policy optimization 
using dynamic programming. These models are very flexible to represent a given 
system, but they are also complex and therefore very difficult to handle when the 
number of the system possible states increases. Marquez and Heguedas (2002) 
explored the trade-off between flexibility and complexity of these models, and 
presented a comparison in terms of model data requirements versus potential 
benefits obtained with the model. 
In generalized renewal process (GRP) reliability analysis for repairable 
systems, Monte Carlo (MC) simulation method instead of numerical method is 
often used to estimate model parameters because of the complexity and the 
difficulty of developing a mathematically tractable probabilistic model. Wang and 
Yang (2012) proposed a nonlinear programming approach to estimate restoration 
factor for the Kijima type GRP model I, as well as the model II based on the 
conditional Weibull distribution for repairable systems, using negative log-
likelihood as an objective function and adding inequality constraints to model 
parameters. The method minimized the negative log-likelihood directly, and 
avoided solving the complex system of equations. Three real and different types of 
field failure data sets with time truncation for NC machine tools were analyzed by 
the proposed numerical method. The sampling formulas of failure times for the 
GRP models I and II were derived and the effectiveness of the proposed method 
was validated with MC simulation method. 
Ke et al. (2013) considered a multi-repairmen problem comprising of M 
operating machines with W warm standbys (spares). Both operating and warm 
standby machines were subject to failures. With a coverage probability c, a failed 
unit was immediately detected and attended by one of R repairmen if available. If 
the failed unit was not detected with probability 1−c, the system entered an unsafe 
state and must be cleared by a reboot action. The repairmen were also subject to 
failures which result in service (repair) interruptions. The failed repairman 
resumed service after a random period of time. In addition, the repair rate 
www.ebook3000.com

150 
10   Markovian Model for Multiple AGV System
 
 
depended on number of failed machines. The entire system was modeled as a 
finite-state Markov chain and its steady state distribution was obtained by a 
recursive matrix approach. The major performance measures were evaluated based 
on this distribution. Under a cost structure, the authors proposed to use the Quasi-
Newton method and probabilistic global search Lausanne method to search for the 
global optimal system parameters.  
Nowadays VoIP has become an evolutionary technology in telecommunications. 
Hence it is very important to study and enhance its dependability attributes. An 
analytical dependability model for VoIP was proposed by Gupta and Dharmaraja 
(2011). The study was focused on analyzing the combined effects of resource 
degradation and security breaches on the Quality of Service (QoS) of VoIP, to 
enhance its overall dependability. As a preventive maintenance policy to prevent or 
postpone software failures which cause resource degradation, software rejuvenation 
was adopted. The dependability model was analyzed using semi-Markov process 
which captures the effects of non-Markovian nature of the time spent at various 
states of the system. The steady-state as well as the time-dependent analysis of the 
dependability model was presented.  
Zhou et al. (2012) presented a maintenance optimization method for a multi-
state series-parallel system considering economic dependence and state-dependent 
inspection intervals. The objective function considered in the chapter was the 
average revenue per unit time calculated based on the semi-regenerative theory 
and the universal generating function (UGF). A new algorithm using the stochastic 
ordering was also developed in the chapter to reduce the search space of 
maintenance strategies and to enhance the efficiency of optimization algorithms. 
A numerical simulation was presented in the study to evaluate the efficiency of the 
proposed maintenance strategy and optimization algorithms. 
Reliability assessment for hard disk drives (HDDs) is important yet difficult for 
manufacturers. Motivated by the fact that the particle accumulation in the HDDs, 
which accounts for most HDD catastrophic failures, is contributed from the 
internal and external sources, a counting process with two arrival sources was 
proposed by Ye et al. (2013) to model the particle cumulative process in HDDs. 
The model successfully explained the collapse of traditional ALT approaches for 
accelerated life test data. Parameter estimation and hypothesis tests for the model 
were developed and illustrated with real data from a HDD test. A simulation study 
was conducted to examine the accuracy of large sample normal approximations 
that were used to test existence of the internal and external sources. 
An R out of N repairable system consisting of N independent components is 
operating if at least R components are functioning. The system fails whenever the 
number of good components decreases from R to R − 1. A failed component is 
sent to a repair facility having several repairmen. Life times of working 
components are i.i.d random variables having an exponential distribution. Repair 
times are i.i.d random variables having a phase type distribution. Both cold and 
warm stand-by systems are considered. Barron et al. (2006) presented an 
algorithm deriving recursively in the number of repairmen the generator of the 
Markov process that governs the process. Then they derived formulas for the point 

10.2 
Statement of the Problem 
151
 
 
availability, the limiting availability, the distribution of the down time and the up 
time. Numerical examples were given for various repair time distributions. The 
numerical examples showed that the availability is not very sensitive to the repair 
time distribution while the mean up time and the mean down time might be very 
sensitive to the repair time distributions. 
According to the brief reviewed literature, studies to compare Markovian and 
neural networks are few. Especially, modeling the reliability of an advanced 
manufacturing system considering AGVs is also rare.     
10.2 
Statement of the Problem 
Here, a jobshop manufacturing system having multiple AGVs for material 
handling purpose is considered. In each shop several machines perform the part 
processing according to a process plan. To transfer the parts among different 
shops AGVs are employed. The reliability of the whole manufacturing system is 
concerned with the reliability of the machines in shops and the reliability of the 
AGVs. The failure of the machines and AGVs could be considered in different 
states. The failure causes for machines are: 
• 
Amateur operator 
• 
Equipment deficiency 
• 
Inappropriate part specifications     
 
Also, the failures of AGVs are due to: 
• 
Carrier overload 
• 
Guide path fracture 
Using Markovian property, we can configure the transition diagram and the 
corresponding matrix. 
The result of the Markovian process is the failure probability for machines and 
AGVs. These probabilities are applied in reliability computations. For reliability, 
first we conceptualize different scenarios exist in the proposed manufacturing 
system. The shops are in parallel since the parts are disseminated through the 
system according to the process plan. The sequence of machines in a shop may be 
important or not, i.e., the part processing in a shop should be performed 
sequentially on the machines or the sequence is not important and parallel 
machining is possible. Therefore, two separate cases of series and parallel should 
be modeled. AGVs are in series since if one AGV break down then the whole 
system should wait until the AGV is repaired or taken out of the system.  
The aim of the decision maker is to maximize the performance of the whole 
system. To achieve the aim, two objectives namely maximizing the total reliability 
of machines in shops in the whole jobshop system and the maximizing the total 
reliability of the AGVs, should be investigated. Also, for the economic viewpoint 
of the system performance the third objective is to minimize the total repair cost in 
www.ebook3000.com

152 
10   Markovian Model for Multiple AGV System
 
 
the system. As a unit (machine or AGV) in the system is broken down, the repair 
should be performed on it for preparing it to function.          
The aims of conducting this study are: 
 Developing a reliability assessment methodology for AGV based 
manufacturing systems 
 Analyzing and including fault sources in machine-AGV state modeling in 
manufacturing systems  
 Markovian modeling for reliability assessment of a machine-AGV 
manufacturing system 
 Comparing Markovian reliability assessment with the neural network 
method  
It is necessary to incorporate reliability into the model to ensure the level of 
service for each machine in each shop and the AGVs. For modeling reliability, the 
approach of Ball and Lin (1993) is adopted and further extended. 
The reliability is defined as the probability that the system works until time t. If 
a machine in a shop is broken down, it can be regarded as a failure. A desired 
level of reliability can be achieved by limiting the failure probabilities. This 
approach for handling reliability is called the method of chance constraints in the 
context of mathematical programming. The use of chance constraints in vehicle 
routing problem was illustrated in Stewart and Golden (1983). Carbone (1974) 
used chance constraints for selecting multiple facilities under normally distributed 
demand. The model minimized an upper bound on the total demand-weighted 
distance while ensuring that constraint was satisfied with specified chance or 
probability. Shiode and Drezner (2003) used a similar approach in a competitive 
location problem on a tree network. 
It is assumed that the reliability of each machine type and the AGV are 
independently according to Exponential processes. Also, J is total types of 
machines, i.e., drilling machines, turning machines, bending machines show three 
machine types. We discuss the reliability based model as follows: 
)
(t
R j
: The probability that machine type jth works until time t. 
 
⎪
⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
−
−
=
∏
∏
=
=
case
series
in
are
shop
each
in
machines
when
,
)
(
case
parallel
in
are
shop
each
in
machines
when
,
))
(
1(
1
)
(
1
1
t
R
t
R
t
R
j
J
j
j
J
j
system
  
(1) 
 
In our proposed problem, AGVs are series and the machine types in each shop 
may be in parallel or series cases and the shops are parallel, i.e., a composite 
system is configured. Therefore, the reliability of the system is as follows: 

10.3 
Mathematical Model 
153
 
 
α
≥
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
−
−∏
=
))
(
1(
1
1
t
R j
J
j
, 
 
 
 
 
          (2) 
owhere α  is the lower bound for a desirable reliability of the system until time t. 
As previously assumed, the reliability of each machine type and AGV are 
independently according to Exponential distribution:  
j
t
j
e
t
R
θ
−
=
)
(
,  
 
 
 
 
 
           (3) 
Where 
j
θ
 is the exponential parameter for machine type or AGV breakdown. 
Then, 
α
θ
≥
⎟
⎟
⎠
⎞
⎜
⎜
⎝
⎛
−
−
−
=∏
)
1(
1
1
j
t
J
j
e
 . 
 
 
                                   (4) 
It is obvious that to obtain a higher level of reliability, more cost is incurred to 
the system. Hence, a cost function (
)
(t
C j
) is defined to keep machine type jth 
reliable until time t. For the whole system we have: 
∑
=
J
j
j t
C
1
)
(
. 
 
 
 
                                              (5) 
10.3 
Mathematical Model 
In this section, we construct the proposed failure state diagrams and matrices for 
machines and AGVs’ using Markov system, separately. A Markov system is a 
system that can be in one of several (numbered) states, and can pass from one state 
to another each time step according to fixed probabilities. If a Markov system is in 
state i, there is a fixed probability, pij, of it going into state j the next time step, and 
pij is called a transition probability. A Markov system can be illustrated by means 
of a state transition diagram, which is a diagram showing all the states and 
transition probabilities. The entries in each row add up to 1. 
First, we configure the machines’ state diagram. As stated before, the machines 
may be broken down in three states, namely, (A) amateur operator, (B) equipment 
deficiency, and (C) inappropriate part specifications. Note that, the states refer to 
the break down states causes, i.e., the machine is working or it is broken down due 
to the failure states such as amateur operator, equipment deficiency, and 
inappropriate part specifications. In another word, since we are modeling the 
reliability of the system considering different state changes, it is common in 
Markovian computations to monitor the state transition while all are the causes of 
breakdown. The state transition diagram for machines is shown in Figure 1. 
www.ebook3000.com

154 
10   Markovian Model for Multiple AGV System
 
 
α
ε
α−
−
1
β
γ
β −
−
1
γ
δ
ε
ν
ν
δ −
−
1
 
Fig. 1 The state transition diagram for machines 
As a result the corresponding transition matrix Pij is, 
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
−
−
−
−
−
−
=
ν
δ
γ
ε
δ
γ
β
α
ν
β
ε
α
1
1
1
ij
P
. 
 
 
          (6) 
where α , β ,γ ,δ ,ε , and ν  are the transition probability from the three states 
given in Figure 1. Using the probability transition matrix and the limiting 
probability we obtain each state’s occurrence probability as follows. 
∑
=
=
3
1
i
ij
i
j
p
π
π
, for j=1,2,3. 
 
 
 
                      (7) 
∑
=
=
3
1
1
j
j
π
. 
 
 
 
 
                                  (8) 
Using these probabilities, we can compute the reliability of each state helping 
us to assess the total reliability of the system.  
We also can compute the long run probability for each state using steady state 
distribution given below. 
[
]
[
]
C
B
A
C
B
A
=
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
−
−
−
−
−
−
ν
δ
γ
ε
δ
γ
β
α
ν
β
ε
α
1
1
1
,           (9) 
having A+B+C=1. 

10.3 
Mathematical Model 
155
 
 
The same computations exist for AGVs different failure state, while we stated 2 
states, i.e., we have two state probability and a 2× 2 transition matrix. 
Now, for reliability we have, 
R(t)=1-F(t), 
 
 
 
 
 
                     (10) 
where, F(t) is the failure probability computed above as states’ probabilities. Note 
that, we can compute the reliability in two cases, first for current state, and second 
for steady state. The numerical comparison of the two could be interesting. 
Having the current state of the system by Markovian model and by the means 
of neural network, we can compute the steady state probabilities. Next, we review 
the artificial neural network and the backpropagation neural network for our 
proposed work. The reason is to find the difference in accuracy of the two 
methods and determine the most effective one. It is obvious that the neural 
network can be more efficient due to using past data in training stage.  
The aim to compute the steady state probability and reliability is to obtain an 
estimation of the system availability for long run planning horizon. Therefore, it is 
significant for a decision maker to determine steady state reliability using the 
corresponding probability, accurately. 
Artificial Neural Network 
Neural networks are being widely used in many fields of study. This could be 
attributed to the fact that these networks attempt to model the capabilities of 
human brains. Since the last decade, neural networks have been used as a 
theoretically sound alternative to traditional statistical models. Although neural 
networks (NNs) originated in mathematical neurobiology, the rather simplified 
practical models currently in use have moved steadily towards the field of 
statistics. A number of researchers have illustrated the connection of neural 
networks to traditional statistical models. For example, Gallinari et al. (1991) 
presented analytical results establishing a link between discriminant analysis and 
multilayer perceptrons (MLP) used for classification problems. Cheng and 
Titterington (1994) made a detailed analysis and comparison of various neural 
network models with traditional statistical models. They showed strong 
associations of the feed-forward neural networks with discriminant analysis and 
regression models, and unsupervised networks such as self-organizing neural 
networks with clustering. Neural networks are being used in areas of prediction 
and classification, areas where regression models and related statistical techniques 
have traditionally been used. Ripley (1994) discusses the statistical aspects of 
neural networks and classifies neural networks as one of a class of flexible 
nonlinear regression models. Warner and Misra (1996) presented a comparison 
between regression analysis and neural network computation in terms of notation 
and implementation. They also discuss when it would be advantageous to use a 
neural network model in place of a parametric regression model, as well as some 
of the difficulties in implementation. Vach et al. (1996) presented a comparison 
www.ebook3000.com

156 
10   Markovian Model for Multiple AGV System
 
 
between feed-forward neural networks and the logistic regression. The conceptual 
similarities and discrepancies between the two methods are also analyzed. 
Artificial neural networks have been applied successfully to many 
manufacturing and engineering areas. Zhengrong et al. (1996) used quadratic 
regression to assess the results of neural network for improving the efficiency of 
fermentation process development. The results show that different sizes of neural 
nets within a certain range give an equally good prediction by using the ‘‘stopping 
training” technique, while quadratic regressions are sensitive to the size of the data 
sets. Smith and Mason (1997) mentioned that regression and neural network 
modeling methods have become two competing empirical model-building 
methods. They compared the predictive capabilities of NNs and regression 
methods in manufacturing cost estimation problems.  
The Backpropagation Neural Network 
The backpropagation algorithm trains a given feed-forward multilayer neural 
network for a given set of input patterns with known classifications. When each 
entry of the sample set is presented to the network, the network examines its 
output response to the sample input pattern. The output response is then compared 
to the known and desired output and the error value is calculated. Based on the 
error, the connection weights are adjusted. The backpropagation algorithm is 
based on Widrow-Hoff delta learning rule in which the weight adjustment is done 
through mean square error of the output response to the sample input. The general 
steps of backpropagation are given below. 
1. Propagate inputs forward in the usual way, i.e., all outputs are computed using 
sigmoid thresholding of the inner product of the corresponding weight and 
input vectors. All outputs at stage n are connected to all the inputs at stage n+1 
2. Propagate the errors backwards by apportioning them to each unit according to 
the amount of the error the unit is responsible for.  
We now discuss how to develop the stochastic backpropagation algorithm for 
the general case. The following notations and definitions are needed: 
 
jxG
: input vector for unit j (xji = ith input to the jth unit)  
j
wG
: weight vector for unit j (wji = weight on xji) 
j
j
j
x
w
z
G
G .
=
: the weighted sum of inputs for unit j 
oj : output of unit j (
)
(
j
j
z
o
σ
=
)  
tj : target for unit j 
Downstream(j) : set of units whose immediate inputs include the output of j 
Output : Set of output units in the final layer.  
 

10.3 
Mathematical Model 
157
 
 
Since we update after each training example, we can simplify the notation 
somewhat by assuming that the training set consists of exactly one example and so 
the error can simply be denoted by E.  
We want to calculate
ji
w
E
∂
∂
corresponding to each input weight wji of each 
output unit j. Note first that since zj is a function of wji regardless of where in the 
network unit j is located,  
ji
j
ji
j
j
ji
x
z
E
w
z
z
E
w
E
.
.
∂
∂
=
∂
∂
∂
∂
=
∂
∂
, 
 
 
 
                    (11) 
Furthermore, 
jz
E
∂
∂
is the same regardless of which input weight of unit j we are 
trying to update. So, we denote this quantity by 
j
δ .  
Consider the case when j  is an output unit. We know that  
∑
∈
−
=
Outputs
2
))
(
(
2
1
k
k
k
z
t
E
σ
.  
 
 
 
                     (12) 
Since the outputs of all units
j
k ≠
 are independent of wji, we can then drop the 
summation and consider just the contribution to E by j and we call it 
j
δ : 
.
)
1
)(
(
)
(
))
(
1
)(
(
)
(
)
(
)
(
)
(
2
1
2
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
j
o
o
o
t
z
z
o
t
z
z
o
t
z
o
o
t
o
t
z
z
E
−
−
−
=
−
−
−
=
∂
∂
−
−
=
∂
∂
−
−
=
−
∂
∂
=
∂
∂
=
σ
σ
σ
δ
    
(13) 
Thus,  
ji
j
ji
ji
x
w
E
w
ηδ
η
=
∂
∂
−
=
Δ
. 
 
 
 
                    (14) 
Now, consider the case when j is a hidden unit. Like before, we make the 
following two important observations:  
1. For each unit k downstream from j, zk is a function of zj.  
2. The contribution to error by all units
j
l ≠
, in the same layer as j, is 
independent of wji. 
www.ebook3000.com

158 
10   Markovian Model for Multiple AGV System
 
 
We want to calculate
ji
w
E
∂
∂
for each input weight wji for each hidden unit j. Note 
that wji influences just zj which influences oj which influences zk, 
),
( j
Downstream
k ∈
∀
each of which influences E. So, we can write,  
ji
j
j
j
k
j
Downstream
k
k
ji
j
j
j
j
k
j
Downstream
k
k
ji
x
z
o
o
z
z
E
w
z
z
o
o
z
z
E
w
E
.
.
.
.
.
.
)
(
)
(
∂
∂
∂
∂
∂
∂
=
∂
∂
∂
∂
∂
∂
∂
∂
=
∂
∂
∑
∑
∈
∈
 
(15) 
Again, note that all the terms except xji in (15) are the same regardless of which 
input weight of unit j we are trying to update. Like before, we denote this common 
quantity by
j
δ . Also, note that 
k
kz
E δ
∂
∂
,
kj
j
k w
o
z
∂
∂
 and
)
1(
j
j
j
j
o
o
z
o
−
=
∂
∂
. 
Substituting them in (13),  
∑
∑
∈
∈
−
=
∂
∂
∂
∂
∂
∂
=
)
(
)
(
)
1(
.
.
.
.
j
Downstream
k
j
j
kj
k
j
j
j
k
j
Downstream
k
k
j
o
o
w
z
o
o
z
z
E
δ
δ
,             (16) 
we obtain:  
∑
∈
−
=
)
(
.
)
1(
j
Downstream
k
kj
k
j
j
k
w
o
o
δ
δ
.  
 
 
                     (17) 
 
 
Fig. 2 A configuration of the proposed neural network 

10.3 
Mathematical Model 
159
 
 
To adapt the backpropagation algorithm on our proposed model, consider the 
failure causes for machines and AGVs as inputs and the current state failure 
probability of machines and AGVs as outputs. We train the network collecting 
data in different time periods and compute the importance weight for each input 
resulting the corresponding output. A configuration of the proposed neural 
network is shown in Figure 2. 
We are now in a position to state the backpropagation algorithm formally.  
Algorithm 1: Formal statement of stochastic backpropagation. 
(Training examples, η, ni, nh, no)  
Each training example is of the form
t
x G
G,
, where xG
 is the input vector and tG
 is 
the target vector, ηis the learning rate (e.g., 0.05), ni, nh and no are the number of 
input, hidden and output nodes, respectively. Input from unit i to unit j is denoted 
by xji and its weight is denoted by wji. Create a feed-forward network with ni 
inputs, nh hidden units, and no output units.  
Initialize all the weights to small random values (e.g., between -0.05 and 0.05).  
While termination condition is not met Do  
For each training example 
t
x G
G,
,  
1. Input the instance xG
and compute the output ou of every unit.  
2. For each output unit k, calculate  
)
)(
1(
k
k
k
k
k
o
t
o
o
−
−
=
δ
. 
 
(18) 
3. For each hidden unit h, calculate  
∑
∈
−
=
)
(
.
)
1(
h
Downstream
k
kh
k
h
h
h
w
o
o
δ
δ
.  
(19) 
4. Update each network weight wji as follows:  
ji
ji
ji
w
w
w
Δ
+
←
. 
 
 
(20) 
where, 
ji
j
ji
x
w
ηδ
=
Δ
.  
 
 
(21) 
This way, we can compare the performance of backpropagation neural network 
and limiting distribution model for computing the steady state probabilities using 
the current state probabilities.    
 
www.ebook3000.com

160 
10   Markovian Model for Multiple AGV System
 
 
Mathematical Optimization 
Here, the mathematical optimization model is given. As stated before we aim to 
maximize the total reliability of machines in shops in the whole jobshop system 
and maximize the total reliability of the AGVs. Since the reliability model is 
stochastic, one may think about simulation study. But considering multiple-
objectives and especially including cost factors in the form of a composite 
mathematical function is difficult and requires tiring and complicated simulation 
efforts. Also, as we will present further, we considered several 0/1 integer 
variables which are easier to be modelled mathematically.     
Maximizing Total Reliability of Machines 
The following mathematical notations are employed to model this maximization 
problem: 
Mathematical notations: 
k 
Index for machines, 
k=1,…,K. 
l 
Index for jobs, 
l=1,…,L. 
m 
Index for shops, 
m=1,…,M. 
k
R  
Reliability of machine k.  
1
if machine  process job  .
0
 otherwise.
kl
k
l
τ
⎧
= ⎨
⎩
 
1
if machine  in shop  is chosen.
0
 
otherwise.
km
k
m
ϕ
⎧
= ⎨
⎩
 
 
The mathematical model: 
(
)
.
k
km
m
k
Max
R ϕ
∑∑
,  
 
 
                                 (22) 
s.t. 
.
1,
,
,
km
kl
k
l m
ϕ
τ
=
∀
∑
 
 
 
                                 (23) 
{
}
0,1 ,
, .
km
k m
ϕ ∈
∀
  
                                                         (24) 
Maximizing Total Reliability of AGVs 
The following mathematical notations are employed to model this maximization 
problem: 
 
 
 

10.3 
Mathematical Model 
161
 
 
Mathematical notations: 
n 
Index for AGVs, 
n=1,…,N. 
n
R  
Reliability of AGV n.  
1
if AGV  can service shop  .
0
otherwise.
nm
n
m
ς
⎧
= ⎨
⎩
 
1
if AGV  is chosen.
0
otherwise.
n
n
ζ
⎧
= ⎨
⎩
 
The mathematical model: 
.
n
n
n
Max
R ζ
∑
, 
 
 
 
                                 (25) 
s.t. 
.
1,
,
n
nm
n
m
ζ ς
=
∀
∑
 
 
 
                                 (26) 
{
}
0,1 ,
.
n
n
ζ ∈
∀ 
 
 
 
                                 (27) 
As a result a multi-objective mathematical model is configured as follows: 
(
)
.
k
km
m
k
Max
R ϕ
∑∑
,  
 
 
                                 (28) 
.
n
n
n
Max
R ζ
∑
, 
 
 
 
                                 (29) 
s.t. 
.
1,
,
,
km
kl
k
l m
ϕ
τ
=
∀
∑
 
 
 
                                 (30) 
.
1,
,
n
nm
n
m
ζ ς
=
∀
∑
 
 
 
                                 (31) 
1,
,
km
k
m
ϕ
=
∀
∑
 
 
 
 
                                 (32) 
{
}
0,1 ,
.
n
n
ζ ∈
∀ 
 
 
 
                                 (33) 
{
}
0,1 ,
, .
km
k m
ϕ ∈
∀
  
 
 
                                 (34) 
www.ebook3000.com

162 
10   Markovian Model for Multiple AGV System
 
 
Next, an approach to optimize the proposed multi-objective model is given. We 
use objectives weighing method to integrated and optimize the model.  
Analytic Hierarchy Process (AHP) for Multi-objective Optimization 
To weight the objectives, we take a multi-criteria decision-making approach. 
Multi-criteria decision-making (MCDM), dealing primarily with problems of 
evaluation or selection, is a rapidly developing area in operations research and 
management science. AHP is a technique of considering data or information for a 
decision in a systematic manner. It is mainly concerned with a way of solving 
decision problems with uncertainties in multiple criteria characterization. It is 
based on three principles: constructing the hierarchy, priority setting, and logical 
consistency. We apply AHP to weight the objectives. 
Construction of the Hierarchy 
A complicated decision problem, composed of various attributes of an objective, 
is structured and decomposed into sub-problems (sub-objectives, criteria, 
alternatives, etc.), within a hierarchy.  
Priority Setting 
The relative “priority” given to each element in the hierarchy is determined by pair-
wise comparisons of the contributions of elements at a lower level in terms of the 
criteria (or elements) with a causal relationship. In AHP, multiple paired comparisons 
are based on a standardized comparison scale of nine levels (see table 1). 
Table 1 Scale of relative importance 
Intensity of importance 
Definition of importance 
1 
Equal 
2 
Weak 
3 
Moderate 
4 
Moderate plus 
5 
Strong 
6 
Strong plus 
7 
Very strong or demonstrated 
8 
Very, very strong 
9 
Extreme 
Let 
{
}
nc
c
C
,...,
1
=
 be the set of criteria. The result of the pair-wise 
comparisons on n criteria can be summarized in an n × n evaluation matrix A in 
which every element aij is the quotient of weights of the criteria, as shown below: 
 
A = (aij),   i, j = 1, . . . , n. 
 
 
 
                     (35) 
 

10.3 
Mathematical Model 
163
 
 
The relative priorities are given by the eigenvector (w) corresponding to the 
largest eigenvalue  
(
max
λ
) as: 
w
Aw
max
λ
=
.                                                  
                    (36) 
When pair-wise comparisons are completely consistent, the matrix A has rank 1 
and 
n
=
max
λ
. In that case, weights can be obtained by normalizing any of the 
rows or columns of  A. 
The procedure described above is repeated for all subsystems in the hierarchy. 
In order to synthesize the various priority vectors, these vectors are weighted with 
the global priority of the parent criteria and synthesized. This process starts at the 
top of the hierarchy. As a result, the overall relative priorities to be given to  
the lowest level elements are obtained. These overall, relative priorities indicate 
the degree to which the alternatives contribute to the objective. These priorities 
represent a synthesis of the local priorities, and reflect an evaluation process that 
permits integration of the perspectives of the various stakeholders involved.  
Consistency Check 
A measure of consistency of the given pair-wise comparison is needed. The 
consistency is defined by the relation between the entries of A; that is, we say A is 
consistent if aik= aij · ajk, for all i,j,k. The consistency index (CI) is: 
.
)1
(
)
(
max
−
−
=
n
n
CI
λ
 
 
 
 
                                 (37) 
The final consistency ratio (CR), on the basis of which one can conclude 
whether the evaluations are sufficiently consistent, is calculated to be the ratio of 
the CI and the random consistency index (RI):  
.
RI
CI
CR =
 
 
 
                                                         (38) 
The value 0.1 is the accepted upper limit for CR. If the final consistency ratio 
exceeds this value, the evaluation procedure needs to be repeated to improve 
consistency. The measurement of consistency can be used to evaluate the 
consistency of decision-makers as well as the consistency of all the hierarchies. 
We are now ready to give an algorithm for computing objective weights using 
the AHP. The following notations and definitions are used. 
n:   number of criteria 
i:    number of objectives 
p:   index for objectives,             p=1or 2 
d:   index for criteria,                    
D
d ≤
≤
1
 
pd
R
:   the weight of pth item with respect to dth criterion  
d
w :   the weight of dth criterion 
www.ebook3000.com

164 
10   Markovian Model for Multiple AGV System
 
 
Algorithm 2: OWAHP (compute objective weights using the AHP) 
Step 1:  Define the decision problem and the goal. 
Step 2:  Structure the hierarchy from the top through the intermediate to the lowest 
level. 
Step 3:  Construct the objective-criteria matrix using steps 4 to 8 using the AHP. 
(Steps 4 to 6 are performed for all levels in the hierarchy.)   
Step 4:  Construct pair-wise comparison matrices for each of the lower levels for 
each element in the level immediately above by using a relative scale 
measurement. The decision-maker has the option of expressing his or her intensity 
of preference on a nine-point scale. If two criteria are of equal importance, a value 
of 1 is set for the corresponding component in the comparison matrix, while a 9 
indicates an absolute importance of one criterion over the other (table 1 shows the 
measurement scale). 
Step 5:  Compute the largest eigenvalue by the relative weights of the criteria and 
the sum taken over all weighted eigenvector entries corresponding to those in the 
next lower level of the hierarchy. 
Analyze pair-wise comparison data using the eigenvalue technique. Using these 
pair-wise comparisons, estimate the objectives. The eigenvector of the largest 
eigenvalue of matrix A constitutes the estimation of relative importance of the 
attributes. 
Step 6:Construct the consistency check and perform consequence weights analysis 
as follows: 
(
)
1
1
2
2
2
1
1
2
1
1
1
n
n
ij
n
n
w
w
w
w
w
w
w
w
A
a
w
w
w
w
⎡
⎤
⎢
⎥
⎢
⎥
⎢
⎥
=
= ⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎢
⎥
⎣
⎦
…
…
#
#
%
. 
Note that if the matrix A is consistent (that is, aik= aij · ajk, for all 
, ,
1,  2,  ...,  
i j k
n
=
), then we have (the weights are already known), 
.
,...,
2,1
,
          
,
n
j
i
w
w
a
j
i
ij
=
=
 
 
 
 
                     
(39) 
If the pair-wise comparisons do not include any inconsistencies, then 
max
λ
= n. 
The more consistent the comparisons are, the closer the value of computed 
max
λ
 

10.3 
Mathematical Model 
165
 
 
is to n. Set the consistency index (CI), which measures the inconsistencies of pair-
wise comparisons, to be: 
(
)
(
)
max
1
n
CI
n
λ
−
=
−
, 
and let the consistency ratio (CR) be: 
100
,
CI
CR
RI
⎛
⎞
=
⎜
⎟
⎝
⎠
 
where n is the number of columns in A and RI is the random index, being the 
average of the CI obtained from a large number of randomly generated matrices.  
Note that RI depends on the order of the matrix, and a CR value of 10% or less 
is considered acceptable. 
Step 7: Form the objective-criteria matrix as specified in table 2: 
Table 2 The objective-criteria matrix 
 
C1 
C2 
… 
Cd 
objective 1 
R11 
R12 
… 
R1d 
objective 2 
R21 
R22 
… 
R2d 
Step 8: As a result, configure the pair-wise comparison for criteria-criteria 
matrix as in table 3: 
Table 3 The criteria-criteria pair-wise comparison matrix 
 
C1 
C2 
… 
Cd 
d
w
 
Criteria 1 
1 
a12 
… 
a1d 
w1 
Criteria 2 
1/a12 
1 
… 
a2d 
w2 
#
 
#
 
#
#
#
#
 
Criteria d 
1/a1d 
1/a2d 
… 
1 
wd 
The 
d
w  are gained by a normalization process. The 
d
w  are the weights for 
criteria. 
Step 9: Compute the overall weights for the objectives, using tables 2 and 3, as 
follows:  
 
www.ebook3000.com

166 
10   Markovian Model for Multiple AGV System
 
 
11
1
12
2
1
21
1
22
2
2
Totalweightfor objective 1
...
,
'
Totalweightforobjective 2
...
,
d
d
d
d
R
w
R
w
R
w
R
w
R
w
R
w
ψ
ψ
=
=
×
+
×
+
+
×
=
=
×
+
×
+
+
×
(40) 
where 
'
1
ψ
ψ
+
=
. Thus the integrated objective function is formed as: 
(
)
(
)
.
.
'.
.
.
k
km
n
n
m
k
n
Max
R
R
ψ
ϕ
ψ
ζ
⎛
⎞
+
⎜
⎟
⎝
⎠
∑∑
∑
 
10.4 
Conclusions 
We proposed a Markovian model for flexible manufacturing systems (FMSs). The 
model considered two features of automated flexible manufacturing systems 
equipped with automated guided vehicle (AGV) namely, the reliability of 
machines and the reliability of AGVs in a multiple AGV jobshop manufacturing 
system. We made use of current state transition matrix for the failure of the 
machines and AGVs in different states. Therefore, a Markovian model was 
proposed for reliability assessment. Also, for steady state probability 
computations, the limiting theorem was compared with adapted backpropagation 
neural network showing neural network’s effectiveness. Using the reliabilities, we 
worked out an optimization mathematical model. The optimization objectives in 
the proposed model were maximizing the total reliability of machines in shops in 
the whole jobshop system and maximizing the total reliability of the AGVs. The 
computational results illustrated the applicability of our proposed model. A 
strategic viewpoint of such computations was to enable the management to control 
the failures of AGVs and Machines to satisfy the optimization purposes. 
References 
Ball, M.O., Lin, F.L.: A reliability model applied to emergency service vehicle location. 
Operations Research 41(1), 18–36 (1993) 
Barron, Y., Frostig, E., Levikson, B.: Analysis of R out of N systems with several 
repairmen, exponential life times and phase type repair times: An algorithmic approach. 
European Journal of Operational Research 169(1), 202–225 (2006) 
Beamon, B.M.: Performance, reliability, and performability of material handling systems. 
International Journal of Production Research 36(2), 337–393 (1998) 
Browne, J., Dubois, D., Rathmill, K., Sethi, S.P., Stecke, K.E.: Classification of flexible 
manufacturing systems. FMS Mag. 2(2), 114–117 (1984) 
Carbone, R.: Public facilities location under stochastic demand. INFOR 12(3), 261–270 
(1974) 
Cheng, B., Titterington, D.M.: Neural networks: A review from a statistical perspective. 
Statistical Science 9(1), 2–30 (1994) 

References 
167
 
 
Choi, S.H., Lee, J.S.L.: A heuristic approach to machine loading problem in non-
preemptive flexible manufacturing systems. International Journal of Industrial 
Engineering 5(2), 105–116 (1998) 
Das, K., Baki, M.F., Li, X.: Optimization of operation and changeover time for production 
planning and scheduling in a flexible manufacturing system. Computers & Industrial 
Engineering 56(1), 283–293 (2009) 
Egbehi, P.J.: Positioning of automated guided vehicles in a loop layout to improve response 
time. European Journal of Operational Research 71, 32–44 (1993) 
Gallinari, P., Thiria, S., Badran, F., Fogelman-Soulie, F.: On the relations between 
discriminant analysis and multilayer perceptrons. Neural Networks 4(3), 349–360 
(1991) 
Grieco, A., Semeraro, Q., Tolio, T.: A Review of Different Approaches to the FMS 
Loading Problem. International Journal of Flexible Manufacturing Systems 13(4), 361–
384 (2001) 
Gupta, V., Dharmaraja, S.: Semi-Markov modeling of dependability of VoIP network in the 
presence of resource degradation and security attacks. Reliability Engineering & System 
Safety 96(12), 1627–1636 (2011) 
Hilderbrant, R.R.: Scheduling flexible machining systems when machines are prone to 
failure. Ph.D. Thesis, Massachusetts Institute of Technology, USA (1980) 
Kančev, D., Čepin, M.: Evaluation of risk and cost using an age-dependent unavailability 
modelling of test and maintenance for standby components. Journal of Loss Prevention 
in the Process Industries 24(2), 146–155 (2011) 
Ke, J.-C., Hsu, Y.-L., Liu, T.-H., George Zhang, Z.: Computational analysis of machine 
repair 
problem 
with 
unreliable 
multi-repairmen. 
Computers 
& 
Operations 
Research 40(3), 848–855 (2013) 
Kim, K.H.: Positioning of automated guided vehicles in a loop layout to minimize the mean 
vehicle response time. Int. J. of Production Economics 39, 201–214 (1995) 
Kimemia, J.G.: Hierarchical control of production in flexible manufacturing systems. Ph.D. 
Thesis, Massachusetts Institute of Technology, USA (1982) 
Kumar, N.S., Sridharan, R.: Simulation modelling and analysis of part and tool flow control 
decisions in a flexible manufacturing system. Robotics and Computer-Integrated 
Manufacturing 25(4-5), 829–838 (2009) 
Liberopulos, G.: Flow control of failure prone manufacturing systems: Controller design 
theory and applications. Ph.D. Thesis, Boston University, USA (1993) 
Marquez, A.C., Heguedas, A.S.: Models for maintenance optimization: a study for 
repairable systems and finite time periods. Reliability Engineering & System 
Safety 75(3), 367–377 (2002) 
Miettinen, K., Eskelinen, P., Ruiz, F., Luque, M.: NAUTILUS method: An interactive 
technique in multiobjective optimization based on the nadir point. European Journal of 
Operational Research 206(2), 426–434 (2010) 
Paraschidis, K., Fahantidis, N., Petridis, V., Doulgeri, Z., Petrou, L., Hasapis, G.: A robotic 
system for handling textile and nonrigid flat materials. In: Proceedings of the Computer 
Integrated Manufacturing and Industrial Automation (CIMIA), Athens, pp. 98–105 
(1994) 
Reibman, A.L.: Modeling the effect of reliability on performance. IEEE Transactions on 
Reliability 39(3), 314–320 (1990) 
Ripley, B.D.: Neural networks and related methods for classification. Journal of the Royal 
Statistical Society, Series B (Methodological) 56(3), 409–456 (1994) 
www.ebook3000.com

168 
10   Markovian Model for Multiple AGV System
 
 
Sanchez, A.M.: FMS in Spanish industry – lessons from experience. Integrated 
Manufacturing Systems 5(2), 28–36 (1994) 
Shiode, S., Drezner, Z.: A competitive facility location problem on a tree network with 
stochastic weights. European Journal of Operational Research 149(1), 47–52 (2003) 
Smith, A.E., Mason, A.K.: Cost estimation predictive modeling: regression versus neural 
network. The Engineering Economist 42(2), 137–161 (1997) 
Stewart, W., Golden, B.: Stochastic vehicle routing: A comprehensive approach. European 
Journal of Operational Research 14(4), 371–385 (1983) 
Stoop, P.P.M., Wiers, V.C.S.: The complexity of scheduling in practice. International 
Journal of Operations and Production Management 16(10), 37–53 (1996) 
Terkaj, W., Tolio, T.: A Stochastic approach to the FMS Loading Problem. CIRP Journal of 
Manufacturing Systems 35(5), 481–490 (2006) 
Terkaj, W., Tolio, T., Valente, A.: Designing Manufacturing Flexibility in Dynamic 
Production Contexts. In: Tolio, T. (ed.) Design of Flexible Production Systems, pp. 1–
18. Springer (2009) 
Tompkins, J.A., White, J.A., Bozer, Y.A., Frazelle, E.H., Tanchoco, J.M.A., Trevino, J.: 
Facilities Planning. John Wiley and Sons Inc., New York (2002) 
Vach, W., Robner, R., Schumacher, M.: Neural networks and logistic regression: Part II. 
Computational Statistics and Data Analysis 21(6), 683–701 (1996) 
Vinod, B.: Queuing models for flexible manufacturing systems subject to resource failure. 
Ph.D. Thesis, Purdue University, US (1983) 
Vinod, B., Solberg, J.J.: Performance models for unreliable flexible manufacturing systems. 
International Journal of Management Science 12(3), 299–308 (1984) 
Viswanadham, N., Narahari, Y.: Performance modeling of Automated Manufacturing 
systems. Prentice-Hall, Englewood Cliffs (1992) 
Wang, Z.-M., Yang, J.-G.: Numerical method for Weibull generalized renewal process and 
its applications in reliability analysis of NC machine tools. Computers & Industrial 
Engineering 63(4), 1128–1134 (2012) 
Warner, B., Misra, M.: Understanding neural networks as statistical tools. The American 
Statistician 50(4), 284–293 (1996) 
Ye, Z.-S., Xie, M., Tang, L.-C.: Reliability evaluation of hard disk drive failures based on 
counting processes. Reliability Engineering & System Safety 109, 110–118 (2013) 
Gu, Z., Lam, L.H., Dhurjati, P.S.: Feature correlation method for enhancing fermentation 
development: A comparison of quadratic regression with artificial neural networks. 
Computers and Chemical Engineering 20(suppl. 1), S407–S412 (1996) 
Zhou, Y., Zhang, Z., Lin, T.R., Ma, L.: Maintenance optimization of a multi-state series-
parallel system considering economic dependence and state-dependent inspection 
intervals. Reliability Engineering & System Safety 5 (2012) 
 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles, 
169 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_11 
 
Chapter 11 
Producer's Behavior Analysis for AGV System  
11.1 
Summary 
Traditional manufacturing has relied on dedicated mass-production systems to 
achieve high production volumes at low costs. As living standards improve and 
the demands for new consumer goods rise, manufacturing flexibility gains 
prominence as a strategic tool for rapidly changing markets. Flexibility, however, 
cannot be properly incorporated in the decision-making process if it is not well 
defined and measured in a quantitative manner. Flexibility in its most rudimentary 
sense is the ability of a manufacturing system to respond to changes and 
uncertainties associated with the production process (Miettinen et al., 2010; 
Kumar and Sridharan, 2009; Das et al., 2009). A comprehensive classification of 
eight flexibility types was proposed in Browne et al. (1984). Resource and system 
flexibilities were examined in Slack (1987), whereas global measures for flexible 
manufacturing systems (FMSs) were defined in Gupta and Buzacott (1989). 
Routing flexibility based on information theoretic concepts was examined by Yao 
and Pei (1990) and Kumar (1987). Flexibility measures for one machine, a group 
of machines, and the whole industry were presented in Brill and Mandelbaum 
(1989), involving appropriate weights and machine efficiencies in carrying out 
sets of tasks. 
Artificial Intelligence (AI) methods seem appropriate in most practical 
situations where numerical data are not readily available and linguistic variables 
are more amenable to handling imprecise knowledge (Gen et al., 2009; Shin et al., 
2009). The flexibility of competing systems can be ranked appropriately using an 
algorithmic approach (Abdel-Malek and Wolf, 1991) or a decision support system 
(Suresh, 1991) based on performance and economic criteria. According to Turban 
and Aronson (1998), a Decision Support System (DSS) is a computer-based 
information system that combines models and data in an attempt to solve non-
structured problems with extensive user involvement. They believe that an Expert 
System (ES) is a computer system that applies reasoning methodologies on 
knowledge to render advice or recommendations much like a human expert. When 
expert systems technology was first applied to decision- making problems, it fell 
short in several respects. Early expert systems were rule-based. They were not 
www.ebook3000.com

170 
11   Producer's Behavior Analysis for AGV System
 
 
capable of handling the classical DSS functions being more computational than 
logical. Recently, artificial intelligence researchers have seen the necessity of 
using statistical techniques to build intelligent decision support systems (Nolan, 
1998; Weiss and Kulikowski, 1991). Examples of such statistical techniques 
include fuzzy logic, neural networks, rule induction and various Bayesian 
techniques. Turban and Aronson (1998) believed that although uncertainty was 
widespread in the real world, its treatment in the practical world of artificial 
intelligence was very limited.  
Manufacturing costs for products are very crucial in decision making and 
strategic planning. And with respect to cost estimation, research and development 
departments in the past could only estimate the final product’s total cost. 
Moreover, rules of thumb of the engineers are often applied as the cost estimation 
benchmarks, making the results controversial in terms of accuracy (Mostafaee et 
al., 2010; Eklin et al., 2009; Qian and Ben-Arieh, 2008; Wang, 2007; Verlinden et 
al., 2008; Wang, 2007). Although calculation by cost model has the advantage of 
being timely, only representative values exclusive of indirect tasks cost and raw 
materials cost are calculated resulting in an inadequate accuracy of the estimation. 
Niazi et al. (2006) pointed out that Backpropagation Network (BPN) could be 
applied for training to deduce unprecedented problems by accumulated knowledge 
and information. Specially, it could find out solutions in uncertain circumstances 
and have satisfying results in dealing with non-linear problems. Therefore, BPN is 
the most popular neural network models being applied and it fits the nature of 
product cost estimation the best. McKim (1993) discussed applying BPN in cost 
estimation projects. Finally, by integrating a user interface, the demand of a fast 
response cost estimation model was met at initial product development stage in his 
work. Zhang et al. (1996) categorized cost estimation techniques into traditional 
detailed breakdown, simplified-breakdown, group-technology-based, regression-
based and activity-based cost approaches. Ben- Arieh and Qian (2003) divided 
cost estimation models into intuitive, analogical, parametric and analytical 
approaches. Shehab and Abdalla (2001) proposed intuitive, parametric, variant-
based and generative cost estimating approaches. Cavalieria et al. (2004) proved 
three cost analyses of analogy-based, parametric and engineering approaches. 
Niazi et al. (2006) discussed, on the basis of the integrated cost estimation 
approaches, qualitative and quantitative cost estimation techniques pointing out 
the key advantages and limitations of each cost estimation technique. 
Jobshop is a flexible, scalable and intelligent production planning and control 
system offering advanced functionality and value in key areas of manufacturing 
and assembly. The Flexible Jobshop Problem (FJP) is an extension of the classical 
jobshop problem allowing for an operation to be processed by any machine in a 
given set. Automated Guided Vehicles (AGVs) reduce the cost of manufacturing 
and increase efficiency in a manufacturing system. These trailers can be used to 
move raw materials in line to get them ready for manufacturing (Aized, 2009; 
Hsueh, 2010). To conceptualize an AGV, it is necessary to understand the 
fundamentals of Flexible Manufacturing Systems (FMSs).  

11.2 
Statement of the Problem 
171
 
 
Here, soft computing techniques are considered for configuring an expert 
system in the presence of uncertainty. The purpose of this study is to design a 
model for an AGV based automated manufacturing system. Three main factors 
accompanied by their sub-factors are chosen and then propose a neural network 
based approach to analyze the effects of the sub-factors on the main factors. Due 
to uncertainty of cost elements in the manufacturing environment, fuzzy logic is 
applied to determine an appropriate range for each of the linguistic variables. 
Then, using the linguistic variables, the possible fuzzy rules are extracted and 
using a multiple linear regression model the significant rules are investigated and 
eliminate inappropriate rules. A sensitivity analysis is associated with the 
regression method. Then, considering time as a triangular fuzzy number, an 
aggregation process to combine both the obtained cost and the time parameters is 
proposed. Then a dynamic program is proposed for finding an optimal path in the 
proposed manufacturing system. 
11.2 
Statement of the Problem 
Consider a jobshop layout which applies an AGV for material handling. The AGV 
carries raw material, semi-produced and final products in batch sizes. Due to 
mounting demands, advancing technology, and rising production capacity, the 
need for increasingly more shops is mounting over time. The new shops are 
expected to have more advanced machines. Therefore, more than one shop with 
the same duty are evolved. The difference among shops having the same duty 
shows up in the shop's specifications that affect the production cost. As a result, 
the system would consider a flexible jobshop model where multi shops of the 
same duty exist and each operation can be processed on any type of machine in 
any shop. The sequences of jobs are specified and the jobs are assumed to be 
independent.  
The structure of such a problem would configure a network. In this network, 
the nodes are the shops and the arcs are the flow paths of the AGV to each shop. 
Shops in each stage are of the same type but have different specifications such as 
different machine types and equipments, varied operator proficiencies, different 
rates of defect, etc.. Each flow path for the AGV is associated with a time 
parameter and also a cost parameter related to each shop. The aim is to find a path 
for the AGV minimizing an aggregate time and cost objective. Considering the 
variability of the AGV flow among shops, the time of each flow path of the AGV 
is a triangular fuzzy number. In each shop, different machines and operators are 
working. Due to unpredictable events during working times a cost may incur. This 
cost is inferred from an expert system via a fuzzy neural network. Cost parameters 
for each shop are considered to be 3: (1) Equipment sensitivity, (2) operator 
proficiency, and (3) product specifications, each being specified by one of the 
three levels of low, moderate, and high. A configuration for the proposed problem 
is presented in Figure 1. 
 
www.ebook3000.com

172 
11   Producer's Behavior Analysis for AGV System
 
 
Time, Cost
 
Fig. 1 A configuration of the proposed problem 
As stated before, time is considered to be a triangular fuzzy number and cost is 
inferred from an expert system. In our expert system a backpropagation neural 
network is considered to estimate the cost factors (outputs) using their 
corresponding sub-factors (inputs). The backpropagation algorithm trains a given 
feed-forward multilayer neural network for a given set of input patterns with 
known classifications. The backpropagation algorithm is based on Widrow-Hoff 
delta learning rule in which the weight adjustment is done through mean square 
error of the output response to the sample input (Abdi et al., 1996). 
The cost factors and their related sub-factors are shown in Figure 2.  
 
Fig. 2 The cost factors and their related sub-factors.  

11.3 
Mathematical Model 
173
 
 
Using the existing data, the network is trained and then by the resulting pattern 
one can apply the model to obtain the output with respect to the proposed sub-
factors. The numerical results would show a lower bound and an upper bound for 
each cost factor. These bounds are utilized as our cost factors ranges for the fuzzy 
rule base. Considering the uncertainty in the cost factors due to dynamic changes 
in neural network inputs, the cost factors in three levels of low, moderate, and 
high is specified. The problem is to specify the range of these levels; that is, the 
numerical range of low, moderate or high for each of the cost factors.  
11.3 
Mathematical Model 
An inductive reasoning technique to obtain the appropriate range for the levels is 
applied. This method is based on an ideal scheme describing the input and output 
relationships for a well-established data base. This method is called entropy. A 
key goal of entropy minimization analysis is to determine the quantity of 
information in a given data set. The entropy of a probability distribution is a 
measure of the uncertainty of the distribution. This information measure estimates 
the uncertain range of data using a predetermined inappropriate range to start the 
process. The higher the prior estimate of the probability for an outcome to occur, 
the lower will be the information gained by observing it to occur. The entropy on a 
set of possible outcomes of a trial where exactly one outcome is possible is 
defined by the sum of probabilities. In other words, the entropy is the expected 
value of information. For a simple one-dimensional (one uncertain variable) case, 
let us assume that the probability of the ith sample wito be true is 
)
(
iw
p
. If the 
sample wi is actually observed in the future and discover that it is true, then the 
following information, I(wi) is gained: 
)
(
ln
)
(
i
i
w
p
k
w
I
−
=
,  
 
 
                                         (1) 
where k is a normalizing parameter. If it is discovered to be false, we still gain 
some information: 
[
])
(
1
ln
)
(
i
i
w
p
k
w
I
−
−
=
. 
 
 
 
                          (2) 
Thus, the entropy of the inner product of all the samples (N) is:  
[
]
∑
=
−
−
+
−
=
N
i
i
i
i
i
p
p
p
p
k
S
1
)
1
ln(
)
1(
ln
, 
 
 
            (3) 
where piis the probability of the ith sample to be true. Note that 
0
≥
S
, because 
0
ln
≤
x
, for 
1
0
≤
≤x
.  
The entropy of a rule should be minimized. Minimum of entropy S is associated 
with all the pi being as close to one or zero as possible, which in turn implies that 
www.ebook3000.com

174 
11   Producer's Behavior Analysis for AGV System
 
 
they have a very high probability of either happening or not happening, 
respectively. Note in equation (3) that if pi=1, then S=0.  
This result makes sense, since pi is the probability measure of whether a value 
belongs to a partition or not. The precedence for partitioning the data is explained 
next. 
First, seeking a threshold value for a sample in the ranges [x1, x] and [x, x2] are 
assumed. It is denoted that the first region p and the second region q. by moving 
an imaginary threshold value x between x1 and x2, entropy is calculated for each 
value of x.  
An entropy with each value of x in the region containing x1 and x2 is: 
)
(
)
(
)
(
)
(
)
(
x
S
x
q
x
S
x
p
x
S
q
p
+
=
, 
 
 
 
            (4) 
where, 
[
])
(
ln
)
(
)
(
ln
)
(
)
(
2
2
1
1
x
p
x
p
x
p
x
p
x
S p
+
−
=
, 
 
                           (5) 
[
])
(
ln
)
(
)
(
ln
)
(
)
(
2
2
1
1
x
q
x
q
x
q
x
q
x
Sq
+
−
=
, 
 
 
            (6) 
with pk(x) and qk(x) as conditional probabilities that the class k sample is in the 
regions [x1, x1+x] and [x1+x, x2], respectively, p(x) and q(x) are probabilities that 
all samples are in the regions [x1, x1+x] and [x1+x, x2], respectively. Also, 
1
)
(
)
(
=
+
x
q
x
p
. 
 
 
 
 
 
            (7) 
A value of x that gives the minimum entropy is the optimum threshold value. 
The entropy estimates pk(x), qk(x), p(x), and q(x) are calculated as follows: 
1
)
(
1
)
(
)
(
+
+
=
x
n
x
n
x
p
k
k
, 
 
 
 
 
                          (8) 
1
)
(
1
)
(
)
(
+
+
=
x
N
x
N
x
q
k
k
, 
 
 
 
 
                          (9) 
n
x
n
x
p
)
(
)
(
=
,  
 
 
 
 
 
          (10) 
)
(
1
)
(
x
p
x
q
−
=
, 
 
 
 
 
 
          (11) 
 
where nk(x) is the number of class k samples located in [x1, x1+x], n(x) is the total 
number of samples located in [x1, x1+x], Nk(x) is the number of class k  samples 
located in [x1+x, x2], N(x) is the total number of samples located in [x1+x, x2], and 
n is the total number of samples in [x1, x2]. While moving x in the region [x1, x2], 
the values of entropy are calculated for each position of x.  

11.3 
Mathematical Model 
175
 
 
This procedure finds the region for the levels of the cost factors. After each 
update in input data, the ranges are specified using an entropy technique. After 
determining the regions of the cost factors, the fuzzy rules are then composed 
which clarify the total cost for each shop. To find the effective rules, a multiple 
linear regression model is configured using the previous data and identify the 
regression coefficients. Since we have three cost factors each with three levels of 
low, moderate and high, then twenty seven (3*3*3) possible rules exist. Thus, 
using the test of hypothesis, the effective rules are identified.  
As stated before, some rules affect the cost of the system. Whether a rule is 
significant for cost or not should be investigated. One way to survey the effect of 
independent variables on dependent variable is multiple linear regression model. 
Therefore, the following equation is considered, 
,
,...,
1
,
...
1
1
0
n
i
r
r
u
i
m
m
i
=
+
+
+
+
=
ε
β
β
β
 
 
          (12) 
whereui is the total cost in the ith period,
0
β  is the intercept, the 
j
β  are the 
coefficients for the rj and 
iε  is the error term (note that the
j
β , 
m
j ≤
≤
0
, 
depend on the period i, but for simplicity the index i is omitted here). The aim is to 
identify the
j
β  which are not important for the total cost of the proposed system. 
Here, a two-sided hypothesis testing is applied as follows; 
.0
:
;0
:
1
0
≠
=
j
j
H
H
β
β
  
 
 
 
 
                        (13) 
The test of the null hypothesis H0 against the two sided alternative proceeds in 
three steps. The first is to compute the standard error of 
j
β ,
)
(
j
SE β
. The 
second step is to compute the t-statistic,  
)
(
0
j
j
SE
t
β
β −
=
, 
 
 
 
 
 
                         (14) 
and the third step is to compute the p-value, the probability of observing a value of 
j
β  at least as different from zero as the estimate actually computed (
act
j
β
), 
assuming that the null hypothesis is correct.  
A small value of the p-value, say less than 5%, provides evidence against the 
null hypothesis in the sense that the chance of obtaining a value of 
j
β  by pure 
random variation from one sample to the next is less than 5% if, in fact, the null 
hypothesis is correct. If so, the null hypothesis is rejected at the 5% significance 
level. Simply, one can reject the null hypothesis at the 5% significance level if
www.ebook3000.com

176 
11   Producer's Behavior Analysis for AGV System
 
 
96
.1
>
act
t
. Therefore, if the hypothesis is accepted, then it is ensued that the 
corresponding rule is not important and thus is not effective on the cost. The 
estimation of the coefficients is performed using a regression software.  
By these rules the cost of each shop is estimated (arc length in the network). 
Consequently, a dynamic program is applied to find the optimal path in the 
proposed jobshop automated manufacturing network. A flowchart for the 
proposed expert system is presented in Figure 3.  
 
 
Fig. 3 A proposed expert system 
Our decision model is to consider both time and cost parameters, and thus an 
integration of the two parameters would be required. The integration is to have a 
weighted sum of cost and time as an arc length in the proposed network. Time is a 
triangular fuzzy number and cost is considered to be an indirect triangular fuzzy 
number.  
As stated before, time is a triangular fuzzy number, ensued from the experts' 
knowledge. Brainstorming and expert knowledge versus meta-rule techniques 
(neural networks, genetic algorithms, etc.) are two common approaches for 
defining fuzzy rules and membership functions. While available empirical data is 
requisite for using the second approach, due to unavailability of historical data for 
cost, we make use of the first approach to obtain the membership functions and 
fuzzy rules. 

11.3 
Mathematical Model 
177
 
 
In Zadeh's words (Zadeh, 1965), fuzzy logic is a tool for ‘‘Computing with 
Words’’. He stated that the main role of fuzzy logic was to serve as a methodology 
for computing with words when no other methodology could attain such purpose 
(Zadeh, 1996, 1999). Triangular membership functions are common (Pedrycz, 
1994). Mamdani fuzzy system is being commonly used in the literature (Klir and 
Yuan, 1995; Zimmermann, 1996). The fuzzy set acquired from aggregation of 
rules’ results will be defuzzified using defuzzification methods like centroid 
(center of gravity), max membership, mean-max, and weighted average. The 
centroid method is very popular, in which the ‘‘center of mass’’ of the result 
provides the crisp value. For our problem in which various possible conditions of 
parameters are stated in forms of fuzzy sets, the Mamdani fuzzy system is utilized, 
because the fuzzy rules representing the expert knowledge in Mamdani fuzzy 
systems would consider fuzzy sets.  
The input to our Mamdani type fuzzy system (Babuska, 1998) is composed of 
equipment sensitivity, operator proficiency, and product specifications. For any of 
the inputs, three linguistic terms of "low", "moderate", and "high" are defined. The 
output of the system is cost being identified by any of the three linguistic terms, 
"low", "moderate", or "high". The maximum membership grade of linguistic term 
‘‘high’’ is 30.  
As a result, a triangular fuzzy number as the time and a numerical value as the 
cost are obtained. We intend to consider an integrated time-cost value as the value 
of each proposed arc in the network. Time and cost having different scales, it 
would not be possible to perform basic operations such as addition on their 
original forms. Thus, to remove the scales, the time and cost values are normalized 
throughout the network.  
As stated, to perform basic operations on the time and cost parameters with 
their different scales, we need to remove their scales. To do this, two 
normalization processes are proposed for time and cost, separately. In (15), (16) 
and (17) below, i is an index to show the node and j is an index to show the stage 
(shop’s type) in the proposed network, rijis the value of either time or cost 
parameter in each node, and nijis its corresponding normalized value.  Considering 
time as a triangular fuzzy number, the normal value with a positive view is given 
by 
,
,
,
min
max
min
j
i
r
r
r
r
n
j
j
j
ij
ij
∀
−
−
=
  
 
 
 
          (15) 
while the normal value with a negative view is given by, 
j
i
r
r
r
r
n
j
j
ij
j
ij
,
,
min
max
max
∀
−
−
=
,  
 
 
 
          (16) 
www.ebook3000.com

178 
11   Producer's Behavior Analysis for AGV System
 
 
where
max
jr
 and 
min
jr
 are maximum and minimum values in each column of an 
assumed matrix of time or cost, respectively. Since time in our proposed model is 
a criterion implicating a negative aspect in decision making, then (16) is chosen 
for normalizing time in our approach.  
Assuming cost as a crisp value, the cost values are normalized as follows: 
2 ,
, ,
ij
ij
kj
k
r
n
i j
r
=
∀
∑
 
 
 
 
 
          (17) 
To compute the minimum or maximum value for (15) and (16), comparisons 
are needed to be made. This means that it is necessary to have a method for 
ranking and comparing fuzzy numbers.  To compare fuzzy numbers, the efficient 
approach developed by Mahdavi et al. (2009) based on the distance between fuzzy 
numbers is used. They used the distance function introduced by Sadeghpour 
Gildeh and Gien (2001). The main advantages of this distance function are the 
generality of its usage on various fuzzy numbers, and its reliability in 
distinguishing unequal fuzzy numbers.  
Then, a weighing method is considered to make the time and cost appropriate 
for basic operations.  
To weigh the parameters, a multi criteria decision making approach is taken. 
Multi-Criteria Decision Making (MCDM), dealing primarily with problems of 
evaluation or selection (Keeney and Raiffa, 1976; Teng, 2002), is a rapidly 
developing area in operations research and management science. The Analytical 
Hierarchy Process (AHP), developed by Saaty (1980), is a technique of 
considering data or information for a decision in a systematic manner 
(Schniederjans and Garvin, 1997). AHP is mainly concerned with the way to solve 
decision problems with uncertainties in multiple criteria characterization. It is 
based on three principles: (1) constructing the hierarchy, (2) priority setting, and 
(3) logical consistency. AHP is applied to weigh the parameters. In AHP, multiple 
paired comparisons are based on a standardized comparison scale of nine levels 
(Saaty, 1980). 
Here, the weights for the parameters of each arc in the proposed network are 
obtained. If 
n
C
and 
n
T are considered as normalized cost and time, respectively, 
then the total weighted normalized value of each arc is determined as follows: 
 
P=
)
'
(
)
(
n
n
C
T
×
+
×
ψ
ψ
. 
 
 
 
 
          (18) 
 
On the other hand, time is a triangular fuzzy number and cost is a crisp 
numerical value. But, it is needed to have triangular numbers for both parameters 
to perform the basic operations. For this, cost is considered as a trivial triangular 

11.3 
Mathematical Model 
179
 
 
fuzzy number and show it by a triplet (0,C,0), where C is the numerical value 
inferenced from the expert system for cost with the membership value equal to 1.   
Several fuzzy ranking methods have been proposed (Bortalan and Degani, 
1985; Luis and Antonio, 1989; Kim and Park, 1990). Since the graded mean 
integration representation method (Chen and Hseih, 2000) not only alleviates 
some drawbacks of the existing methods, but also possesses the advantages of 
being easily implementable and quite effective in problem solving (see Lee et al., 
2007), we will use it to transform the total weighted normalized value of each arc 
in our proposed network. If a=
)
,
,
(
3
2
1
a
a
a
is a triangular fuzzy number, then 
the graded mean integration (
)
~
(a
R
) is defined to be: 
.
6
4
)
~
(
3
2
1
a
a
a
a
R
+
+
=
 
 
 
 
 
          (19) 
Equation (19) is applied to transform the fuzzy numbers to crisp values and use 
them to find the optimal path. 
Shortest Path in a Network 
Let G = (V,A) be a graph, where 
{
}
N
V
,...,
1
=
is the set of nodes, and 
V
V
A
×
⊂
is 
the set of arcs. We write
A
j
i
∈
)
,
(
, if there exists an arc from node 
V
i∈
to node
V
j ∈
. Furthermore, let 
0
≥
ijt
denote the distance (or travel time, or any other 
measure of cost) from i to j. If 
A
j
i
∉
)
,
(
,then set 
+∞
=
ijt
. Note that the travel 
time from node i to node j is assumed to be stationary; i.e., independent of the 
actual arrival time at node i. Let fijdenote the length of the shortest-path from i to j 
in the graph. Next, a fuzzy dynamic programming approach for computing the 
optimal path is described. 
 
An Algorithm for Computing a Fuzzy Shortest Path 
The following dynamic programming algorithm is for computing the shortest path 
in a network. The algorithm is based on Floyd’s dynamic programming method to 
find a shortest path, if it exists, between every pair of nodes i and j in the network 
(see Floyd, 1962, and also Dreyfus and Law, 1977). The following optimal value 
function 
)
,
( j
i
fk
and the corresponding labeling function
)
,
( j
i
Pk
are used: 
)
,
( j
i
fk
: length of the shortest path from node i to node j when the path is 
considered to use only the nodes from the set nodes {
}
k
,...,
1
. 
www.ebook3000.com

180 
11   Producer's Behavior Analysis for AGV System
 
 
)
,
( j
i
Pk
: the last intermediate node on the shortest path from node i to node j 
using {
}
k
,...,
1
 as intermediate nodes. 
The dynamic updating for the optimal path length and its corresponding 
labeling are: 
{
})
,
(
)
,
(
),
,
(
min
)
,
(
1
1
1
j
k
f
k
i
f
j
i
f
j
i
f
k
k
k
k
−
−
−
+
=
, 
 
{
}
⎩
⎨
⎧
=
−
−
otherwise
)
,
(
k
1,...,
 
using
 
 
 to
 
from
path 
shortest 
 
on the
not 
 
is
 
 
if
)
,
(
)
,
(
1
1
j
k
P
j
i
k
j
i
P
j
i
P
k
k
k
 
 
We are now ready to give steps of the algorithm. 
 
Algorithm 1:A dynamic programming method for computing a shortest path 
in a fuzzy network with triangular fuzzy arc lengths. 
Give 
)
,
(
A
V
G =
, where V is the set of nodes with 
N
V =
, and A is the set of 
arcs. 
Step 0: Let k=0 and
ij
k
d
j
i
f
~
)
,
(
~
=
, for all 
A
j
i
∈
)
,
(
, 
∞
=
=
)
,
(
~
j
i
fk
, for all 
A
j
i
∉
)
,
(
. If an arc exists from node i to node jthen let
i
j
i
Pk
=
)
,
(
. 
Step 1: Let
1
+
= k
k
. 
Do the following steps for 
.
,
,...,
3,2,1
,
,...,
3,2,1
j
i
N
j
N
i
≠
=
=
 
1.1 
Compute the value of 
[
])
,
(
)
,(
),
,(
min
)
,
(
1
1
1
j
k
f
k
i
f
j
i
f
j
i
f
k
k
k
k
−
−
−
+
=
, 
(for comparison of fuzzy numbers, where the 
q
p
D ,  approach is used for 
computing the distances).  
1.2   If node k is not on the shortest path using {
}
k
,...,
2,1
 as intermediate nodes, 
then let 
)
,
(
)
,
(
1
j
i
P
j
i
P
k
k
−
=
else let
)
,
(
)
,
(
1
j
k
P
j
i
P
k
k
−
=
. 
Step 2: If
N
k <
then go toStep 1. 
Step 4: Obtain the shortest path using
)
,
( j
i
Pk
. If 
∞
=
=
)
,
(
~
j
i
f N
, then there is 
no path between i and j. the shortest path from node i to j, if it exists, is identified 
backwards 
and 
read 
by 
the 
nodes: 
j, 
k
j
i
PN
=
)
,
(
 
followed 
by 
i
l
i
P
k
i
P
N
N
=
)
,
(
),...,
,
(
, where l is the node immediately after i in the path. 
 

11.3 
Mathematical Model 
181
 
 
Sensitivity Analysis 
Analyzing Producer’s Behavior 
Here, a comprehensive analysis is worked out for the obtained paths in last 
section. We obtained a path and its corresponding value. These values are 
considered as costs for each path. The aim is to find the quantity of products to be 
carried by AGV to maximize the profit of a producer. Obviously, profit is the 
difference between total revenue and total expenses in a perfect competitive 
market. The notations of profit maximization model are as follows: 
 
Index: 
 
j 
Counter for paths;     j=1,2,…,m. 
 
Parameters: 
pj 
Price of product in the jth path.  
qj 
Quantity of product in the jth path.  
rj 
Numerical value for path j. 
xj 
Quantity of input material in path j.  
Fj 
Product transformation function of  
m
q
q ,...,
1
.  
 
Then, the mathematical model for profit is: 
∑
∑
∑
∑
=
=
=
=
−
=
⇒
−
=
m
j
m
j
m
i
j
m
j
j
j
j
j
m
j
j
j
q
q
F
r
q
p
x
r
q
p
Max
1
1
1
1
1
)
,...,
(
     
π
π
.   (20) 
Obviously, the maximization function can be turned into minimization as 
follows: 
∑
∑
=
=
−
=
m
i
i
i
m
i
m
i
i
q
p
q
q
F
r
Min
1
1
1
)
,...,
(
-
     π
, 
 
 
          (21) 
where the xi are functions of the quantities of the outputs qj (
)
,...,
( 1
m
i
i
q
q
F
x =
). 
It means that, considering the inputs given to the manufacturing system, some 
outputs are produced. The relationships among inputs and outputs are stated as 
mathematical functions. The model is an unconstrained nonlinear problem. To 
solve the profit maximization problem for a producer desiring to maximize the 
profit using the above model, the partial derivatives are set equal to zero (first 
order conditions): 
 
www.ebook3000.com

182 
11   Producer's Behavior Analysis for AGV System
 
 
0
)
(
1
1
=
−
=
−
∂
∂
=
∂
−
∂
∑
∑
=
=
j
m
i
i
i
j
m
i
j
i
i
j
p
f
r
p
q
F
r
q
π
, 
 
 
          (22) 
where fi is the marginal cost, 
j
i
i
q
x
f
∂
∂
=
, and the marginal productivity is 
j
i
i
q
x
f
∂
∂
=
=
1
1
MP
. 
To investigate whether the obtained quantity of product is optimal or not, the 
second order conditions are checked. The second order conditions for the 
maximization of profit require that the relevant Hessian of π  (or 
π
−
) be 
negative (or positive) semi-definite (if the Hessian of π  (or 
π
−
) is not negative 
(or positive) semi-definite, then we are sure that the obtained path is not a 
maximizer). Here, the Hessian of  (
π
−
) is: 
[
]
j
i
ij
q
q ∂
∂
∂
−
=
−
∇
π
π
2
2
)
(
, 
 
 
 
 
          (23) 
To be positive semi-definite, the eigenvalues of 
)
(
2
π
−
∇
, the 
iλ , must 
satisfy: 
i
i
∀
≥,0
λ
, 
 
 
 
 
                         (24) 
If the solution point is so that 
)
(
2
π
−
∇
 is positive definite, that is, 
i
i
∀
> ,0
λ
, 
 
 
 
 
 
          (25) 
then the point is a local maximizer (or minimizer) of π  (or 
π
−
). 
This way, an application of the obtained optimal paths have been seen. The 
optimization scheme helps the producer to handle economic batch sizes for the 
AGV to attain more profit considering the specified prices and costs. 
Path Reliability 
It is necessary to incorporate reliability into the model to ensure the level of 
service for every AGV in every path. For modeling reliability, the approach of 
Ball and Lin (1993) is adopted for extension. 
The reliability is defined as the probability that the system functions until time 
t. If an AGV in a path is broken down, it can be regarded as a failure. A desired 

11.3 
Mathematical Model 
183
 
 
level of reliability can be achieved by limiting the failure probabilities. This 
approach for handling reliability is called the method of chance constraints and 
was initially suggested by Charnes and Cooper (1959) in the context of 
mathematical programming. The use of chance constraints in vehicle routing 
problem was illustrated by Stewart and Golden (1983). Carbone (1974) used 
chance constraints for selecting multiple facilities under normally distributed 
demands. The model minimized an upper bound on the total demand-weighted 
distance while ensuring that constraints were satisfied with specified chance or 
probability. Shiode and Drezner (2003) used a similar approach for a competitive 
location problem on a tree network. 
It is assumed that the reliability of moving an AGV on each arc is 
independently exponentially distributed. We now discuss the reliability based 
model. Let 
)
(t
R j
be the probability of an AGV functioning on arc j until time t. 
Since the arcs composing a path are in series, then the corresponding reliability is 
computes to be  
).
(
)
(
1
t
R
t
R
j
m
j
system
∏
=
=
  
 
 
 
 
          (26) 
Therefore, the reliability of the system is determined to satisfy 
α
≥
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛∏
=
)
(
1
t
R j
m
j
, 
 
 
 
 
 
          (27) 
where α  is the lower bound for a desirable reliability of the system until time t. 
As previously assumed, the reliability of each arc is independently exponentially 
distributed:  
j
t
j
e
t
R
θ
−
=
)
(
. 
 
 
 
 
 
 
          (28) 
Therefore, we need to have 
α
θ
≥
⎟
⎟
⎠
⎞
⎜
⎜
⎝
⎛
−
=∏
j
t
m
j
e
1
.  
 
 
 
 
 
          (29) 
Using the inequality (29), the 
j
θ  is obtained considering a confidence level. 
Now, we investigate the 
j
θ  for arcs separately by data collection. The aim is to 
www.ebook3000.com

184 
11   Producer's Behavior Analysis for AGV System
 
 
analyze the 
j
θ  obtained from data collection not having any interaction with other 
arcs, as compared to the 
j
θ
 obtained by (29). Data in a specific working time 
t=24 are collected. Then, for t>24 our data are censored (type I censored data). 
Assume x1:n, x2:n, … , xr:nare the r censored data in a specific path. Then, θˆ, the 
estimated θ , is obtained by maximum likelihood estimation (MLE) as follows. 
r
t
r
n
x
r
i
n
i
MLE
∑
=
−
+
=
1
0
:
)
(
ˆθ
,  
 
 
 
 
          (30) 
where t0 is the end time of observation (t=24) and r is the number of failures. 
Here, using 
)
2
(
ˆ
2
2
r
r
χ
θ
θ ≈
 as a pivot (2r is the degrees of freedom), a 
confidence interval for θ can be set.  
To set a confidence interval using 
)
2
(
ˆ
2
2
r
r
χ
θ
θ ≈
, 
α
χ
θ
θ
χ
α
α
−
=
⎥
⎦
⎤
⎢
⎣
⎡
<
<
−
1
)
2
(
ˆ
2
)
2
(
2
2
2
2
1
r
r
r
P
. 
 
 
          (31) 
Inverting (31) and multiplying 
θˆ
2r
 into all fractions,  
α
χ
θ
θ
χ
θ
α
α
−
=
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
<
<
−
1
)
2
(
ˆ
2
)
2
(
ˆ
2
2
2
1
2
2
r
r
r
r
P
,  
 
 
          (32) 
where (32) is a two sided (
α
−
1
)% confidence interval based on type I censored 
data. 
11.4 
Conclusions 
An approach for finding an optimal path in a flexible jobshop manufacturing 
system considering two criteria of time and cost is proposed. The proposed 
flexible jobshop system has more than one shop with the same duty. The 
difference among shops with the same duty is in their machines with various 
specifications. The shops configure a network in which they are considered as 

References 
185
 
 
nodes and the paths among them are considered as network arcs. An Automated 
Guided Vehicle (AGV) functions as a material handling device through the 
manufacturing network. Time is considered to be a triangular fuzzy number and 
cost is inferred from an expert system considering three parameters of equipment 
sensitivity, operator proficiency, and product specification via linguistic variables. 
This cost is associated with some main factors and some sub-factors. To 
approximate the cost, a backpropagation neural network was applied to estimate 
the sub-factors with the corresponding main factors and compute a bound for the 
main factors. These bounds were processed by the entropy technique to obtain 
regions for the linguistic variables. After determining the regions for the linguistic 
variables, we composed the rules and verified their significance using regression 
analysis. The purified rules were used to infer the cost of the system. The aim was 
to find a path which minimized an aggregate weighted unscaled time and cost 
objective. Since time and cost had different scales, a normalization process was 
used to remove the scales and because the model was bi-objective, the AHP 
weighing method was applied to gain a single objective. A fuzzy dynamic 
programming approach was used to compute a shortest path in the proposed 
network. Also, some sensitivity testing on the obtained shortest paths are 
performed. Finally, the proposed approach was fully illustrated by a numerical 
example.   
References  
Abdel-Malek, L., Wolf, C.: Evaluating flexibility of alternative FMS designs-A 
comparative measure. Int. J. Prod. Econ. 23(1), 3–10 (1991) 
Abdi, H., Valentin, D., Edelman, B., O’Toole, A.J.: A Widrow-Hoff learning rule for a 
generalization of the linear auto-associator. Journal of Mathematical Psychology 40, 
175–182 (1996) 
Aized, T.: Modelling and performance maximization of an integrated automated guided 
vehicle system using coloured Petri net and response surface methods. Computers & 
Industrial Engineering 57(3), 822–831 (2009) 
Babuska, R.: Fuzzy Modeling for Control. Kluwer Academic Publishers, Norwell (1998) 
Ball, M.O., Lin, F.L.: A reliability model applied to emergency service vehicle location. 
Operations Research 41(1), 18–36 (1993) 
Ben-Arieh, D., Qian, L.: Activity-based cost management for design and development 
stage. International Journal of Production Economics 83, 169–183 (2003) 
Bortolan, G., Degani, R.: A review of some method for ranking fuzzy subsets. Fuzzy Sets 
and Systems 15, 1–19 (1985) 
Brill, P.H., Mandelbaum, M.: On measures of flexibility in manufacturing systems. Int. J. 
Prod. Res. 27(5), 747–756 (1989) 
Browne, J., Dubois, D., Rathmill, K., Sethi, S.P., Stecke, K.E.: Classification of flexible 
manufacturing systems. FMS Mag. 2(2), 114–117 (1984) 
Carbone, R.: Public facilities location under stochastic demand. INFOR 12(3), 261–270 
(1974) 
www.ebook3000.com

186 
11   Producer's Behavior Analysis for AGV System
 
 
Cavalieria, S., Maccarroneb, P., Pinto, R.: Parametric vs. neural network models for the 
estimation of production costs: A case study in the automotive industry. International 
Journal of Production Economics 91, 165–177 (2004) 
Charnes, A., Cooper, W.: Chance-constraint programming. Management Science 6(1), 73–
79 (1959) 
Chen, S.H., Hsieh, C.H.: Representation, ranking, distance, and similarity of L-R type 
fuzzy number and application. Aust. J. Intell. Process. Syst. 6(4), 217–229 (2000) 
Das, K., Baki, M.F., Li, X.: Optimization of operation and changeover time for production 
planning and scheduling in a flexible manufacturing system. Computers & Industrial 
Engineering 56(1), 283–293 (2009) 
Delgado, M., Verdegay, J.L., Vila, M.A.: A procedure for ranking fuzzy numbers using 
fuzzy relations. Fuzzy Sets and Systems 26, 49–62 (1988) 
Eklin, M., Arzi, Y., Shtub, A.: Model for cost estimation in a finite-capacity stochastic 
environment based on shop floor optimization combined with simulation. European 
Journal of Operational Research 194(1), 294–306 (2009) 
http://EViews.com 
Gen, M., Lin, L., Zhang, H.: Evolutionary techniques for optimization problems in 
integrated manufacturing system: State-of-the-art-survey. Computers & Industrial 
Engineering 56(3), 779–808 (2009) 
Gupta, D., Buzacott, J.A.: A framework for understanding flexibility of manufacturing 
systems. J. Manuf. Syst. 8(2), 89–97 (1989) 
Hsueh, C.F.: A simulation study of a bi-directional load-exchangeable automated guided 
vehicle system. Computers & Industrial Engineering 58(4), 594–601 (2010) 
Keeney, R., Raiffa, H.: Decision with multiple objectives: Preference and value tradeoffs. 
Wiley and Sons, New York (1976) 
Kim, K., Park, K.S.: Ranking fuzzy numbers with index of optimism. Fuzzy Sets and 
Systems 35, 143–150 (1990) 
Klir, G.J., Yuan, B.: Fuzzy Sets and Fuzzy Logic: Theory and Applications. Prentice-Hall 
(1995) 
Kumar, N.S., Sridharan, R.: Simulation modelling and analysis of part and tool flow control 
decisions in a flexible manufacturing system. Robotics and Computer-Integrated 
Manufacturing 25(4-5), 829–838 (2009) 
Kumar, V.: Entropic measures of manufacturing flexibility. Int. J. Prod. Res. 25(7), 957–
966 (1987) 
Lee, K.L., Huang, W.C., Teng, J.Y.: Locating the competitive relation of global logistics 
hub using quantitative SWOT analytical method. Quality & Quantity 43(1), 87–107 
(2007) 
Luis, M., Antonio, G.M.: A subjective approach for ranking fuzzy numbers. Fuzzy Sets and 
Systems 29, 145–153 (1989) 
Mahdavi, I., Nourifar, R., Heidarzade, A., Mahdavi-Amiri, N.: A dynamic programming 
approach for finding shortest chains in a fuzzy network. Applied Soft Computing 9(2), 
503–511 (2009) 
McKim, R.A.: Neural network applications to cost engineering. Cost Engineering 35, 31–
35 (1993) 
Miettinen, K., Eskelinen, P., Ruiz, F., Luque, M.: NAUTILUS method: An interactive 
technique in multiobjective optimization based on the nadir point. European Journal of 
Operational Research 206(2), 426–434 (2010) 
Mostafaee, A., Saljooghi, F.H.: Cost efficiency measures in data envelopment analysis with 
data uncertainty. European Journal of Operational Research 202(2), 595–603 (2010) 

References 
187
 
 
Niazi, A., Dai, J.S., Balabani, S., Seneviratne, L.: Product cost estimation: Technique 
classification and methodology review. Journal of Manufacturing Science and 
Engineering 128, 563–575 (2006) 
Nolan, A.: An intelligent system for case review and risk assessment in social services. AI 
Mag. 19(1), 39–46 (1998) 
Pedrycz, W.: Why triangular membership functions? Fuzzy Sets and Systems 64, 21–30 
(1994) 
Qian, L., Ben-Arieh, D.: Parametric cost estimation based on activity-based costing: A case 
study for design and development of rotational parts. International Journal of 
Production Economics 113(2), 805–818 (2008) 
Saaty, T.L.: The Analytic Hierarchy Process. McGraw-Hill, New York (1980) 
Sadeghpour Gildeh, B., Gien, D.: La distance-Dp,q et le cofficient de corrélation entre deux 
variables aléatoires floues. In: Actes de LFA 2001, Monse-Belgium, pp. 97–102 (2001) 
Schniederjans, M.J., Garvin, T.: Using the analytic hierarchy process and multi-objective 
programming for the selection of cost drivers in activity based costing. European 
Journal of Operational Research 100, 72–80 (1997) 
Shehab, E.M., Abdalla, H.S.: Manufacturing cost modeling for concurrent product 
development. Robotics and Computer-Integrated Manufacturing 17, 341–353 (2001) 
Shin, M., Mun, J., Jung, M.: Self-evolution framework of manufacturing systems based on 
fractal organization. Computers & Industrial Engineering 56(3), 1029–1039 (2009) 
Shiode, S., Drezner, Z.: A competitive facility location problem on a tree network with 
stochastic weights. European Journal of Operational Research 149(1), 47–52 (2003) 
Slack, N.: The flexibility of manufacturing systems. Int. J. Prod. Oper. Manag. 7(4), 35–47 
(1987) 
Stewart, W., Golden, B.: Stochastic vehicle routing: A comprehensive approach. European 
Journal of Operational Research 14(4), 371–385 (1983) 
Suresh, N.C.: An extended multi-objective replacement model for flexible automation 
investments. Int. J. Prod. Res. 27(9), 1823–1844 (1991) 
Teng, J.-Y.: Project Evaluation: Method and Applications. National Taiwan Ocean 
University, Taiwan (2002) 
Turban, E., Aronson, J.: Decision Support Systems and Intelligent Systems. Prentice-Hall, 
London (1998) 
Verlinden, B., Duflou, J.R., Collin, P., Cattrysse, D.: Cost estimation for sheet metal parts 
using multiple regression and artificial neural networks: A case study. International 
Journal of Production Economics 111(2), 484–492 (2008) 
Wang, H.S.: Application of BPN with feature-based models on cost estimation of plastic 
injection products. Computers & Industrial Engineering 53(1), 79–94 (2007) 
Wang, Q.: Artificial neural networks as cost engineering methods in a collaborative 
manufacturing environment. International Journal of Production Economics 109(1-2), 
53–64 (2007) 
Wang, X., Kerre, E.E.: Reasonable properties for the ordering of fuzzy quantities (I). Fuzzy 
Sets and Systems 118, 375–385 (2001) 
Weiss, N., Kulikowski, I.: Computer Systems That Learn. Morgan Kaufmann, California 
(1991) 
Yao, D.D., Pei, F.F.: Flexible parts routing in manufacturing systems. IIE Trans. 22(1), 48–
55 (1990) 
 
 
 
www.ebook3000.com

188 
11   Producer's Behavior Analysis for AGV System
 
 
Zadeh, L.A.: Fuzzy sets. Information and Control 8, 338–353 (1965) 
Zadeh, L.A.: Fuzzy logic = computing with words. IEEE Transactions on Fuzzy Systems 4, 
103–111 (1996) 
Zadeh, L.A.: From computing with numbers to computing with words – From manipulation 
of measurements to manipulation of perceptions. IEEE Transactions on Circuit 
Systems 45, 105–119 (1999) 
Zhang, Y.F., Fuh, J.Y.H.: A neural network approach for early cost estimation of packaging 
products. Computers & Industrial Engineering 34, 433–450 (1998) 
Zimmermann, H.J.: Fuzzy Set Theory and its Applications, 3rd edn. Kluwer Academic 
Publishers (1996) 
 
 

 
 
 
© Springer International Publishing Switzerland 2015 
H. Fazlollahtabar and M. Saidi-Mehrabad, Autonomous Guided Vehicles, 
189 
Studies in Systems, Decision and Control 20, DOI: 10.1007/978-3-319-14747-5_12 
 
Chapter 12 
Risk for Multiple AGV System 
12.1 
Summary 
A standard formula for the quantitative definition of risk is, Risk
(loss)
(loss)
P
L
=
×
, 
where risk is the function of the probability (P) of loss and the significance of its 
consequences (L) (Manuj and Mentzer, 2008). Hetland (2003) and Diekmann et al. 
(1988), on the other hand, view risk as the implication of an uncertain phenomenon. 
Waters (2007) explains the difference: risk occurs because there is uncertainty about 
the future, which means that unexpected events may occur. Knight’s (1921) 
distinction between certainty, risk and uncertainty is probably the best known and 
most used typology of uncertainty for risk management. In his definition of risk 
Knight coined the terms (quantitative) ‘‘measurable’’ uncertainty and (non-
quantitative) ‘‘un-measurable’’ uncertainty when there is only partial knowledge of 
outcomes in the form of beliefs and opinions (Vilko and Hallikas, 2012). 
The researchers’ role in the discussions was to present the data and guide the 
discussion in a holistic direction. Consensus was finally reached about the risks, 
their categorization and impact. The risk drivers found from the manufacturing 
system were classified by source. We found that an adaptation of Manuj and 
Mentzer’s (2008) risk source classification with its wide perspective on 
manufacturing risk management provided a solid framework for our case; the 
classification is both qualitative and quantitative, taking into account both the 
direct and indirect impacts, and this facilitates in depth understanding of the risk 
sources without losing the holistic view. The risks were categorized as follows: 
Supply Risks, Security Risks, Operational Risks, Macro Risks, Policy Risks and 
Environmental Risks. No risk sources fitting the Demand Risks, Competitive 
Risks and Resource Risks classification were identified in the group discussions 
(Pons, 2010). Having identified the risks and made their semi-quantitative 
assessment, the expert panel turned to the delay impact, which was modeled in the 
form of triangular distributions representing the minimum, the most likely and the 
highest impact. Risk effects can be categorized in three different types: time-
based, finance-based and quality-based. Time-based effects either delay or disrupt 
the material flow of the manufacturing system. In this case the disruption was 
www.ebook3000.com

190 
12   Risk for Multiple AGV System
 
 
identified as a breakdown in the chain such that the goods do not reach their 
destination by the time they are expected by the final customer. There are no clear 
time limitations on the delay due to the fact that it had significantly different 
consequences in different stages of the system. Manufacturing transportation 
could be delayed for times without serious consequences. The risk impact in this 
case varied highly depending on the goods. Risk likelihood and impact were 
evaluated on a scale of 0,1,3,9, where 0 implies zero likelihood or no impact and 9 
denotes a very high likelihood or impact. The scale is adapted from the Quality 
Function Deployment design method (see e.g., Akao, 2004), which is commonly 
used in the context of new product/ service development.  
Manufacturing risk assessment is a supporting tool for the contractor and 
program office decision-making process. It seeks to estimate the probabilities of 
success or failure associated with the manufacturing alternatives available (Nau et 
al., 2012). These risk assessments may reflect alternative manufacturing 
approaches to a given design or may be part of the evaluation of design 
alternatives, each of which has an associated manufacturing approach.Risk 
management is an overarching process that begins during the earliest stages of a 
program and continues throughout its entire life cycle.  Risk encompasses the 
following steps: 
 Risk identification; 
 Risk analysis; 
 Risk mitigation planning; 
 Risk mitigation plan implementation; and 
 Risk tracking. 
Assessing manufacturing risks is a requirement, and it is required as early as 
pre-Milestone A where the Analysis of Alternatives (AoA) is required to assess 
the "manufacturing feasibility" of the proposed approach.  
As a system progresses through its definition, design, development, testing and 
fielding, more information becomes available concerning the system's risk.  If the 
risk management process is conducted continuously, then new information will 
lead to identifying and analyzing new risk root causes, and identifying and 
implementing mitigation plans for them.  It will also lead to re-analyzing 
previously identified risk root causes, and re-evaluating and adjusting mitigation 
plans already in place. This continuous activity allows the PM to focus valuable 
program resources where they can be most effective, and shift resources as new 
future root causes are discovered and others are re-evaluated. 
Iterative Systems Engineering process is the perfect vehicle for helping 
manufacturing managers to identify risk early through technical reviews and 
audits and to support the development of plans and mitigations to reduce those 
risks.  
Critical success factors refer to identifying the factors that must be successfully 
mastered to execute a successful risk management program. Some examples of 
risk management critical success factors include: 

12.1 
Summary 
191
 
 
 Clearly define and establish feasible, stable, and well-understood user 
requirements; 
 Establish a close partnership with users, industry, and other key 
stakeholders; 
 Comprehensively plan, formally document, and continuously apply the 
risk management process, and ensure it is integral to all program 
processes; 
 Use continuous, event-driven technical reviews as part of the risk 
management process; and 
 Clearly define criteria for assessing the effectiveness of implemented risk 
mitigation actions. 
Risk is time phased and should be tied to appropriate maturity models such as the 
Technology Readiness Level (TRL), Manufacturing Readiness Level (MRL) and 
Sustainment Readiness Model (SRM) that are considered best practices. Other 
chapters will discuss these models.  These models provide for an assessment of a 
technology, manufacturing process, logistics/sustainment considerations of a 
component, subsystem, or weapon system.  These models have been structured to:  
 Define the current level of maturity; 
 Identify maturity shortfalls and associated cost and risk; and 
 Provide a basis for investments to mature the component, subsystem, or 
weapon system and thereby manage risk.  
The risks were analyzed in terms of their effects on the manufacturing system. 
Some of the investigated organizations had severe problems informing a holistic 
and clear view, and clear over estimations as well as underestimations were 
evident in their assessment of the risk impact beyond their own functions. Expert 
panel discussions were held in order to verify the risk values (Nau et al., 2011). 
The first of these took place during the interview process in order to discuss the 
preliminary findings from the interviews conducted thus far and to explore the 
different viewpoints. The expert panel consisted of logistics field researchers and 
port operations experts in the case manufacturing system. 
Here, a manufacturing network is proposed and the defects are determined in 
order to analyze risk and compute loss. The aim is to obtain paths with less loss 
and more reliability. With respect to the multi stage decision making process of 
the proposed network, we develop a dynamic program being a useful tool for 
multi stage decision making. To counteract the dynamism of digital data in 
different time periods, a Bayesian approach is employed to determine the loss 
function of moving through the stages of the proposed network.  
The main contribution of this work is to propose an integrated methodology 
under uncertainty for risk evaluation in very high automated technology of 
material handling in manufacturing. Since, in past works risk evaluation for high 
technology systems neglected to consider uncertainty of dynamic changes in 
automated manufacturing system. Also, considering risk for AGV systems is 
novel.   
www.ebook3000.com

192 
12   Risk for Multiple AGV System
 
 
12.2 
Statement of the Problem 
Several AGVs are considered for material handling purpose in a manufacturing 
system consisting of workstations to process parts to form products. To 
conceptualize a network, the workstations are proposed to be nodes and the AGV 
guide paths are the arcs. Due to demands sent to the AGVs, they carry the parts on 
the arcs thus AGVs may have conflict. Also, due to high technology employed in 
AGV configurations defects are inevitable.  
Suppose that there are several kinds of parts that should be transported by AGVs 
from node A to node B. The distance between A and B is t and the velocities of the 
AGVs are given by 1 .Thus, it takes time t to transport the part from A to B. During 
the operation of an AGV, certain fatalrisks which may cause the failure of the 
transportation (e.g., defect in automation) arrive at the vehicle according to 
ahomogeneous Poisson process with intensityλ . A fatalrisk, independently of all 
others, causes the failure of the transportation with probability p. When more than 
one vehicle operates at the same time, given afatalrisk, the failures between vehicles 
are assumed to be independent. We have m kinds of parts (part1, part2, . . . , partm) 
that should be transported and m identical AGVs (AGV1, AGV2, . . . , AGVn). We 
define that the ‘mission’ is completed when all the m kinds of parts are safely 
transported. A configuration of the proposed manufacturing network is depicted in 
Figure 1. 
 
Fig. 1 A configuration of the proposed manufacturing network 
As shown in Figure 2, several AGVs carry parts amongst the work stations on 
the guide paths to process the manufacturing plan and satisfy product demands. 
Turning points are mounted as guide paths division centers to prohibit AGVs’ 
conflicts during movements. The intersection of guide paths is determined as the 
turning point. In these points an AGV is directed according to the process plan 
sent from the control unit and with respect to work stations’ demands. These 
points are the state variables for the proposed network to be handled by a dynamic 
program.     

12.2 
Statement of the Problem 
193
 
 
As a result, for an economic decision making, loss of the incurred risks can be 
considered. The loss here is composed of the risk of defect when an AGV moves 
in the manufacturing network. A loss concept is utilized to consider all aspects of 
a reliable manufacturing network. 
We 
consider 
loss 
as 
a 
function 
of 
defect 
elements, 
that 
is, 
, where X1,…,Xp are the elements of defects, i.e., part m 
transported by AGV n. Clearly, defect data for AGVs are recovered in any time 
periods causing uncertainty of data. Therefore, the proposed loss function should 
be estimated. For loss function estimation, a Bayesian approach is utilized. To find 
 
 
Fig. 2 A flowchart of the proposed methodology 
)
,...
(
Loss
1
p
X
X
f
≡
www.ebook3000.com

194 
12   Risk for Multiple AGV System
 
 
an optimal path in the manufacturing network having less risk, and therefore less loss, 
dynamic programming is applied. The reason is that the proposed network is 
composed of nodes as state variable and part processing in different work stations as 
stages of the dynamic program. A flowchart of the proposed methodology is shown in 
Figure 2. 
12.3 
Mathematical Model 
The model applied in the present work belongs to the applied measurement 
approach (AMA) and it is called the loss distribution approach (LDA). It is 
characterized by the categorization of the losses in terms of ‘Frequency’ (the 
number of loss events during a certain time period) and ‘Severity’ (the impact of 
the event in terms of economic loss) (Valle and Giudici, 2006). Formally, for each 
intersection r (where r = 1, ... , R) and for a given number of AGV t, the total 
operational loss could be defined as the sum of a random number ntof losses: 
Lrt= Xr1+ Xr2+· · ·+Xr
tn , 
 
 
 
                                         (1) 
where Lrt denotes the total operational loss, Xr1, ... , Xr
tn denote individual loss 
severities and ntdenotes the frequency, for t =1, ... , T, T representing the number 
of AGVs. Note that, for each intersection and for each AGV, the total loss can be 
expressed as 
Lt= st· nt,  
 
 
 
 
                                         (2) 
where ntis the frequency, defined as before, and st(commonly referred to as the 
severity) is the mean loss for that AGV. The LDA assumes that, for each AGV: 
(1) the individual losses {Xrq}, where q = 1, ... , nt, are independent and 
identically distributed random variables; 
(2) the distribution of the frequency ntis independent of the distribution of the 
severities {Xrq}, for q = 1,… , nt. This implies that ntis independent of st; 
(3) besides, Lrt, for t = 1, ...  ,T, are independent and identically distributed 
random variables. 
For a given intersection, we construct a discrete probability density of the 
number of loss events ntfor the AGV and ntcontinuous probability densities of the 
loss severities (Alexander, 2003). Now, if we express the likelihood function for 
each intersection in a general way, we obtain the following equation, indicating 
the severity distribution with 
(
)
ξ
qx
f
 and the frequency distribution with 
(
)
ψ
tn
f
, where ξ denotes the parameter vector of the severity distribution and 
ψ denotes the parameter vector of the frequency distribution, we obtain the 
following form: 
(
) ∏∏
=
=
⎥
⎦
⎤
⎢
⎣
⎡
=
T
t
t
n
q
j
n
f
x
f
L
t
1
1
)
(
(
,
n
x,
ψ
ξ
ξ
ψ
. 
 
                          (3) 

12.3 
Mathematical Model 
195
 
 
Different functional forms for the frequency and severity distributions exist. 
Frequency represents a discrete phenomenon. Since we want to determine the 
probability that a certain number of loss events occur in a predetermined time 
horizon, the most suitable probability distributions are the Poisson and the 
Negative Binomial. Severity, instead, is a continuous phenomenon and we chose 
to describe it by the Exponential, the Gamma and the Pareto distributions. For 
more details about these distributions see Johnson et al. (1994). 
In the proposed problem the number of defects occurs for an AGV is pointed 
by frequency and the effect of loss is implied by severity. Our first problem is to 
estimate, on the basis of data, the parameters of the frequency and severity 
distributions, denoted by ψ and ξ , respectively, in equation (3). The classical 
approach suggests the employment of the method of moments or the method of 
maximum likelihood, as described, for example, by Gourieroux and Monfort 
(1995). An alternative approach is the Bayesian method, which allows the 
combination of quantitative data, coming from the time series of operational 
losses, and prior information, represented by expert opinions. See Berger (1985), 
Bernardo and Smith (1994) or Robert (1994) for an introduction to these methods. 
In this chapter we estimate the parameters with the maximum likelihood method 
and with the Bayesian method, making some comparisons between the classical 
and the Bayesian approaches. In particular, we choose the maximum likelihood 
method because of its good asymptotic properties, since the MLE converges 
almost surely to the true value of the parameter, under fairly general conditions 
(see Lehmann and Casella, 1998). Once the parameters have been estimated, the 
marginals are defined and the operational loss distribution has to be identified. 
Bayesian Approach 
Suppose a continuous probability distribution with probability density function 
(pdf) ƒΘ is assigned to an uncertain quantity Θ. In the conventional language of 
mathematical probability theory Θ would be a "random variable" (Lehmann and 
Casella, 1998). The probability that the event B will be the outcome of an 
experiment depends on Θ; it is P(B | Θ). As a function of Θ this is the likelihood 
function: 
(
)
θ
θ
=
Θ
=
B
P
L
)
(
.  
 
 
 
                      (4) 
Then the posterior probability distribution of Θ, i.e. the conditional probability 
distribution of Θ given the observed data B, has probability density function 
(
)
(
)
θ
θ
θ
B
L
f
B
f
)
(
constant. Θ
Θ
=
, 
 
 
                     (5) 
where the "constant" is a normalizing constant so chosen as to make the integral  
of the function equal to 1, so that it is indeed a probability density function.  
 
www.ebook3000.com

196 
12   Risk for Multiple AGV System
 
 
This is the form of Bayes' theorem actually considered by Thomas Bayes (Berger, 
1985). More generally still, the new data B may be the value of an observed 
continuously distributed random variable X. The probability that it has any 
particular value is therefore 0. In such a case, the likelihood function is the  
value of a probability density function of X given Θ, rather than a probability of B 
given Θ: 
(
)
θ
θ
=
Θ
=
x
f
L
X
)
(
.  
 
 
 
                      (6) 
Bayes's rule provides the framework for combining prior information with 
sample data. In this reference, we apply Bayes's rule for combining prior 
information on the assumed distribution's parameter(s) θ with sample data in order 
to make inferences based on the model. The prior knowledge about the 
parameter(s) is expressed in terms of a pdf f(θ), called the prior distribution. The 
posterior distribution of θ given the sample data, using Bayes rule, provides  
the updated information about the parameters θ. This is expressed with the 
following posterior pdf: 
(
)
(
) ( )
(
) ( )
∫
=
ε
θ
θ
ϕ
θ
θ
ϕ
θ
θ
d
L
L
f
Data
Data
Data
. 
 
 
                      (7) 
where, 
θ is a vector of the parameters of the chosen distribution, 
ε  is the range of θ, 
L(Data|θ) is the likelihood function based on the chosen distribution and data, 
f(θ) is the prior distribution for each of the parameters. 
 
The integral in equation (7) is often referred to as the marginal probability and 
can be interpreted as the probability of obtaining the sample data given a prior 
distribution and it's a constant number. Generally, the integral in equation (7) does 
not have a closed form solution and numerical methods are needed for its solution. 
As can be seen from equation (7), there is a significant difference between 
classical and Bayesian statistics. First, the idea of prior information does not exist 
in classical statistics. All inferences in classical statistics are based on the sample 
data. On the other hand, in the Bayesian framework, prior information constitutes 
the basis of the theory. Another difference is in the overall approach of making  
inferences and their interpretation. For example, in Bayesian analysis the 
parameters of the distribution to be "fitted" are the random variables. In reality, 
there is no distribution fitted to the data in the Bayesian case. 
 
 
 

12.3 
Mathematical Model 
197
 
 
In order to obtain an estimate of the random variables, a probability needs to be 
specified or we can use the expected value of the posterior distribution. In order to 
demonstrate the procedure of obtaining results from the posterior distribution, we 
will rewrite equation (7) for a single parameter θ1: 
(
)
(
) ( )
(
) ( )
∫
=
ε
θ
θ
ϕ
θ
θ
ϕ
θ
θ
1
1
1
1
1
1
Data
Data
Data
d
L
L
f
.  
 
                     (8) 
The expected value (or mean value) of the parameter θ1 can be obtained as 
follows: 
(
)
∫
=
ε
θ
θ
θ
θ
1
1
1
1
Data
.
)
(
d
f
E
.  
 
 
                      (9) 
Now, using the estimated loss function, we obtain the arc values being applied 
in dynamic programming with respect to state and stage concepts to find the 
optimal path. 
A Dynamic Program 
The output of the current state is 
)
,...,
(
1
lw
w
F
, being the obtained loss from the 
Bayesian method. While the current state is an n-dimensional vector having 
several nodes (work stations), we consider a state function
n
l
p
l
,...,
1
),
(
=
δ
. 
Also, a policy function is proposed to consider the AGV movement policy, and 
hence assuming an m-dimensional vector of policies (
n
m ≤
), we have
m
l
p
l
,...,
1
),
(
=
β
, where 
{
}
( )
0,1
l p
β
∈
, i.e., policy movement occurs (=1) 
or does not occur (=0) for an AGV movement. Here, our problem becomes n 
dynamical equations of the form 
(
)
.1
,...,
0
,
,...,
1
,
)
(
),...,
(
),
(
),...,
(
)
(
)1
(
1
1
,
−
=
=
+
=
+
N
p
n
l
p
p
p
p
f
p
p
m
n
p
l
l
l
β
β
δ
δ
δ
δ
 (10) 
Therefore, a dynamic programming approach can be used to model our multi-
dimensional problem. Let 
(
))
(
),...,
(
1
p
p
S
n
p
δ
δ
 bethe minimum loss of the 
remaining nodes an AGV visits if we start stage p in state 
)
(
),...,
(
1
p
p
n
δ
δ
. 
Then, for
1
,...,
0
−
=
N
p
, the strategy function is:  
(
)
(
)
(
)
(
)
⎥
⎥
⎥
⎦
⎤
⎢
⎢
⎢
⎣
⎡
⎟⎟
⎠
⎞
⎜⎜
⎝
⎛
+
+
=
+
)
(
),...,
(
),
(
),...,
(
)
(
,...,
)
(
),...,
(
),
(
),...,
(
),
(
)
(
),...,
(
),
(
),...,
(
min
)
(
),...,
(
1
1
,
1
1
,1
1
1
1
1
)
(
),...,
(
1
1
p
p
p
p
f
p
p
p
p
p
f
p
S
p
p
p
p
g
p
p
S
m
n
p
n
n
m
n
p
p
m
n
p
p
p
n
p
m
β
β
δ
δ
δ
β
β
δ
δ
δ
β
β
δ
δ
δ
δ
β
β
.(11)  
with the boundary condition,  
www.ebook3000.com

198 
12   Risk for Multiple AGV System
 
 
(
)
(
))
(
),...,
(
)
(
),...,
(
1
1
N
N
h
N
N
S
n
n
N
δ
δ
δ
δ
=
.  
                        (12) 
This way, the state and the policy direction for the AGV is at hand. Solving 
(11) for the appropriate indices, we obtain the state and the policy direction in 
each time period. 
Considering the boundary condition, we can compute hOPT (the optimum states, 
i.e., the optimal arcs leading to minimum loss of AGV movement) for given 
policy functions. Due to nonlinear format and operations on mathematical 
functions, it is easy to see that exact dynamic program (DP) requires O(n(
*
δ
)m)) 
calculations 
for 
the 
multi-dimensional 
dynamic 
program 
where 
{
}
*
1
min
,...,
l
δ
δ
δ
=
. Space requirements and value function computations 
become impractical for even moderate m. Thus, exact DP is not a practical 
methodology particularly for large-scale optimization problems. The basic idea 
behind approximate DP is to approximate the optimal value function 
(
)
1( ),...,
( )
p
n
S
p
p
δ
δ
and to construct a suboptimal solution with respect to
(
)
1( ),...,
( )
n
h
p
p
δ
δ
.  We introduce a heuristic algorithm to approximate the 
optimal value function in the following sections. 
A Heuristic Solution Approach 
This section introduces our proposed Adaptive Dynamic Program Heuristic 
(ADPH) approach for the multi-dimensional problem. The basic idea of ADPH is 
estimating the optimal value function by the solution value of a suboptimal 
methodology to the corresponding subproblem and constructing a solution through 
boundary condition equation. This suboptimal methodology is called the heuristic 
approach (Bertsimasand Demir, 2002).  
Let (
)
( )
l
h
p
δ
 be a heuristic for the subproblem (
)
1( ),...,
( )
n
h
p
p
δ
δ
. Let 
( )
l p
δ
be the corresponding heuristic solution and 
(
)
( )
p
l
S
p
δ
be the heuristic 
value, i.e., an estimate of the optimal value
(
)
1( ),...,
( )
p
n
S
p
p
δ
δ
. The ADPH 
algorithm starts by applying (
)
( )
l
h
p
δ
 to the problem (
)
1( ),...,
( )
n
h
p
p
δ
δ
 
and getting
( )
l p
δ
. If the solution 
( )
l p
δ
is optimal, the algorithm terminates 
with an optimal solution. If the problem is infeasible, the algorithm terminates 
without a solution. Otherwise, the algorithm sets the variables best-solution 
BEST
( )
l p
δ
δ
=
 and best-solution-value 
( )
p
l
S
p
δ
=
(Step 2 in Figure 4).  
 
 

12.3 
Mathematical Model 
199
 
 
The algorithm proceeds by applying reduced loss fixing as described below to 
fix some the 
m
l
p
l
,...,
1
),
(
=
β
 variables to the corresponding values (0 or 1) in 
an optimal solution to the problem (
)
1( ),...,
( )
n
h
p
p
δ
δ
_ (Step 3 in Figure 4). 
Reduced loss fixing might effectively reduce the number of variables in advance. 
Let M denote the set of indices of the fixable variables by the reduced loss 
criterion. We denote by xM the corresponding fixed values, that is,  
0   or  1
M
lx
=
, for all l∈M . 
The algorithm iteratively sets the variables to 0 or 1 as described in Step 4 of 
Figure 4. At each iteration, we update the best-solution, 
BEST
( )
l p
δ
δ
=
 and best-
solutionvalue, 
( )
p
l
S
p
δ
=
. We check if early termination is possible (true) or 
not (false). We also allow fixing a set of variables, which we call lag-variable-
fixing. At the final step, we set the first variable to the optimal solution of the 
reduced problem (Step 5 of Figure 4) and the algorithm returns 
BEST
( )
l p
δ
δ
=
 
and 
( )
p
l
S
p
δ
=
. We present the details of ADPH algorithm in Figure 3. 
Variable Assignment: To calculate 
p
S for a variable l
M
∉
, we employ an 
estimated value, 
( , )
M l p

, instead of optimal ones, 
( , )
M l p . This is the basic 
idea in ADPH. We denote by U(l,p) an upper bound to the problem (
)
( )
l
h
p
δ
. In 
our computations, we set the upper bound U(l,p) to  hOPT. Let ε denote the 
percentage deviation of (
1,
1(
( )))
l
l
p
p
δ
β
−
+
 with respect to the upper bound 
U(l-1,(p+1)
( )
l p
β
) for 
( )
l p
β
=0, 1 and also let 
{
}
0
1
*
min
,
ε
ε ε
=
. We 
estimate 
the 
optimal 
values, 
M(l−1,(p+1)
( )
l p
β
), 
by 
(
1,(
1)
( ))
(1
*) (
1,(
1)
( ))
l
l
M l
p
p
U l
p
p
β
ε
β
−
+
=
−
−
+

 for 
( )
l p
β
=0, 1. 
By the definition of 
*
ε
, the optimal values are approximated such that the 
percentage deviations of the estimate values are the same with respect to  
the associated upper bounds. Finally, we set Sp replacing the optimal values by the 
estimated ones. 
 
 
 
 
www.ebook3000.com

200 
12   Risk for Multiple AGV System
 
 
1: Initialization: 
          l = n, p =0, Sp=0 
          early−termination = false 
2: Apply (
)
( )
l
h
p
δ
 and get (
)
( )
l
h
p
δ
, 
( )
p
l
S
p
δ
=
 
Problem infeasible → exit, the problem is infeasible 
( )
l p
δ
 optimal → exit, an optimal solution available 
BEST
δ
←
( )
l p
δ
, 
p
S ←
( )
l p
δ
 
3: Apply reduced loss fixing and get M, xM 
4: While (l > 2)and (early−termination = false)do 
          if (l ∈M)then 
              Sp←
M
lx
 
          else 
               Calculate Sp by calling variable assignment 
               Update best-solution and best-solution-value and get 
BEST
δ
, 
p
S  
               Check early termination criterion and get the status (true or false) 
               Fix variables by lag variable fixing and get M, SM 
          p←p+1 
          l←l−1 
5: Set Sp to the optimal solution of  (
)
( )
l
h
p
δ
 
6: Output: 
BEST
δ
 and 
p
S  
Fig. 3 The ADPH algorithm for the 
 
Update Best-Known Solution and Value: Once we set Sp, if necessary, we 
update the best-solution, 
BEST
δ
, and best-solution-value, Sp as follows. Let 
p=p+1(
n
j
p
j l
S
=∑
). 
Because 
of 
the 
construction 
of 
Sp
jfor 
j 
in 
[l,p], 
( ( )(
1, ),
,...,
)
c
l
n
l
p
p
p l
p S
S
δ
δ
=
−
is a feasible solution to the problem (
)
( )
l
h
p
δ
, 
where the value of the solution 
c
δ
 equals 
(
1, )
n
c
j
p
p
j l
S
h l
p
S
=
=
−
∑
. We update 
BEST
δ
 to 
c
δ
 and Sp to 
c
p
S , respectively, if 
c
p
S  is larger than Sp. 
(
)
1( ),...,
( )
n
h
p
p
δ
δ

12.3 
Mathematical Model 
201
 
 
Early Termination: The ADPH algorithm can be terminated early while setting 
Sp if we determine that we find an optimal solution to the problem (
)
( )
l
h
p
δ
, 
where p=p+1(
n
j
p
j l
S
=∑
). We apply the following tests to determine whether we 
have an optimal solution or not to the problem (
)
( )
l
h
p
δ
:  
(a) We check if (
1, )
l
p
δ
−
 and 
(
1,
)
p
l
p
S
δ
−
+
are optimal solutions to 
the 
subproblems 
(
)
(
1, )
h
l
p
δ
−
and 
(
)
(
1,
)
p
h
l
p
S
δ
−
+
, 
respectively. 
We conclude that an optimal solution exists if (
)
(
1, )
h
l
p
δ
−
= U(l-1, p) and 
(
)
(
1,
)
p
h
l
p
S
δ
−
+
= U(l-1,p+Sp); 
(b) We conclude that 
(
)
( , )
(
1, ),0
l p
l
p
δ
δ
=
−
is an optimal solution if 
(
)
(
1, )
h
l
p
δ
−
is greater than U(l-1,p+Sp) and (
)
(
1, )
h
l
p
δ
−
= U(l-1, 
p); 
(c) Similarly, we conclude that 
(
)
( , )
(
1,
),1
p
l p
l
p
S
δ
δ
=
−
+
is an optimal 
solution 
if 
(
)
(
1,
)
p
h
l
p
S
δ
−
+
is 
greater 
than 
U(l-1,p) 
and 
(
)
(
1,
)
p
h
l
p
S
δ
−
+
= U(l-1,p+Sp). 
 
Lag Variable Fixing: To allow the ADPH to generate solutions in significantly 
shorter times (possibly of lower quality), we allow fixing a set of variables Sp
jfor j 
in [l-n, l-1], and j
M
∉
. We call the method lag-variable-fixing and those 
variables 
as 
lag-fixable 
variables. 
We 
denote 
by
{
}
lag,
:
[
,
1  and 
l
M
j j
l
n l
j
M
=
∈−
−
∈
. Once the lth variable is assigned to 
0 or 1, the variables 
j
M
S
 are set to 
(
1, )
j
p
S l
p
−
or 
(
1,
)
j
p
p
S l
p
S
−
+
, 
respectively, for all 
lag,l
j
M
∈
. We update the set M by including those indices 
in 
lag,l
M
. Sp
j  are assigned to SM
j for all
lag,l
j
M
∈
 in Step 4 of Figure 4. Lag-size 
parameter q specifies the number of variables to be fixed lagging from the lth 
variable while setting Sp
l through the relationship, q=[l/lag-time], where lag-time 
is a user-specified parameter. 
www.ebook3000.com

202 
12   Risk for Multiple AGV System
 
 
12.4 
Conclusions 
We proposed a new automated manufacturing network considering the existing 
data on states and stages aiming to find the arcs with more convergence for value 
added purposes. The arcs were the guide paths that AGVs move through to carry 
parts. Regarding the multi stage decision making process of the AGVs, we 
develop a multi-dimensional dynamic program as a useful tool for multi stage 
decision making. To counteract the dynamism of the digital data in different time 
periods, two concepts of state and policy direction are introduced to determine the 
loss of moving through the stages of the proposed manufacturing network. Using 
this function, a dynamic model was proposed to consider the AGV's movement 
state and policy direction in each time period. A dynamic program was proposed 
to minimize loss of the remaining nodes assuming that the analysis started at an 
appropriate stage of the problem. Since the space requirements and value function 
computations become impractical for even moderate size, we approximated the 
optimal value function developing a heuristic algorithm. A comprehensive 
heuristic solution methodology was developed to approximate the proposed 
dynamic program due to nonlinearity and computational difficulties. The solution 
methodology was verified in comparison with some famous methods in the 
literature. In summary, the computational evidence suggests that the ADPH 
approach for the 
(
)
( )
l
h
p
δ
 seems an attractive alternative to existing 
methodologies as it produces near optimal solutions fast. 
The advantages of the proposed methodology are: 
 Controlling uncertainty and dynamism of future analysis for AGV 
movement 
 Breakthrough the traditional obstacles of loss function estimation by 
Bayesian analysis using prior and posterior distributions 
 Usefulness of the collected data (past data) for future analysis of AGV 
risk assessment 
 Maximizing the expected benefit form an AGV movement process 
 Competitive advantage of the management equipped with the proposed 
methodology 
 Reducing the risk exist in the AGV based transportation 
To sum up, the proposed methodology with the above capabilities is a 
significant tool for the automated manufacturing network since the current market 
is very competitive and absorbing large amount of markets requires subtle analysis 
and decision making. Also, the obtained results show the more reliablepaths for 
AGV movements. This is useful for redesigning a routing structure for 
optimization of extension of shop purposes. Another element of the results 
obtained is the conflict free notion in the AGV movement on guide paths being 
very important in designing an AGV system. Clearly, due to dynamism the model 
is capable to determine low risk conflict free AGV routings.    

References 
203
 
 
References 
Akao, Y.: QFD: Quality Function Deployment—Integrating Customer Requirements into 
Product Design. Productivity Press (2004) 
Alexander, C. (ed.): Operational Risk. Regulation, Analysis and Management. Financial 
Times Prentice Hall, London (2003) 
Berger, J.O.: Statistical decision theory and Bayesian analysis, 2nd edn. Springer, NewYork 
(1985) 
Bernardo, J.M., Smith, A.F.M.: Bayesian theory. Wiley, Chichester (1994) 
Bertsimas, D., Demir, R.: An Approximate Dynamic Programming Approach to 
Multidimensional Knapsack Problems. Management Science 48(4), 550–565 (2002) 
Diekmann, J.E., Sewester, E.E., Taher, K.: Risk Managesment in Capital Projects. 
Construction Industry Institute, Austin (1988) 
Gourieroux, C., Monfort, A.: Statistics and Econometric Models. Cambridge University 
Press, Cambridge (1995) 
Hetland, P.W.: Uncertainty Management. In: Smith, N.J. (ed.) Appraisal, Risk and 
Uncertainty, ch. 8, pp. 59–88. Thomas Telford, London (2003) 
Johnson, N.L., Kotz, S., Balakrishnan, N.: Continuous Univariate Distributions, 2nd edn., 
vol. 1. Wiley, NewYork (1994) 
Knight, F.H.: Risk, Uncertainty and Profit. Houghton Mifflin Company, Boston (1921) 
Kochenberger, G.A., McCarl, B.A., Wymann, F.P.: A heuristic for general integer 
programming. Decision Sci. 5, 36–44 (1974) 
Lehmann, E.L., Casella, G.: Theory of Point Estimation, 2nd edn. Springer (1998) ISBN 0-
387-98502-6 
Loulou, R., Michaelides, E.: New greedy-like heuristics for the multidimensional 0-1 
knapsack problem. Oper. Res. 27, 1101–1114 (1979) 
Manuj, I., Mentzer, J.: Global supply chain risk management. Journal of Business 
Logistics 29(1), 133–155 (2008) 
Nau, B., Roderburg, A., Klocke, F.: Ramp-up of hybrid manufacturing technologies. CIRP 
Journal of Manufacturing Science and Technology 3, 313–316 (2011) 
Nau, B., Roderburg, A., Klocke, F., Park, H.S.: Risk assessment of hybrid manufacturing 
technologies for ramp-up projects. CIRP Journal of Manufacturing Science and 
Technology 5, 228–234 (2012) 
Pons, D.J.: Strategic Risk Management: Application to Manufacturing. The Open Industrial 
& Manufacturing Engineering Journal 3, 13–29 (2010) 
Senju, S., Toyoda, Y.: An approach to linear programming with 0-1 linear variables. 
Management Sci. 15, 196–207 (1968) 
Toyoda, Y.: A simplified algorithm for obtaining approximate solutions to zero-one 
programming problems. Management Sci. 21, 1417–1427 (1975) 
Valle, L.D., Giudici, P.: A Bayesian approach to estimate the marginal loss distributions in 
operational risk management. Computational Statistics & Data Analysis 52, 3107–3127 
(2006) 
Vilko, J.P.P., Hallikas, J.M.: Risk assessment in multimodal supply chains. International 
Journal of Production Economics 140(2), 586–595 (2012) 
Waters, D.: Supply chain risk management: vulnerability and resilience in logistics. Kogan 
Page Limited (2007) ISBN-13: 978-0-7494-4854-7 
 
 
www.ebook3000.com

