Compilers and Interpreters


Why, tho?
The type of language processor 
influences what tools we use.
It is a prerequisite to understand how to 
"reverse" the process aka reverse 
engineering
2

Types of Language Processors
C OMPILER
INTERPRETER
C SC RIPT
HYBRID C OMPILER
GC C 
JAV AC  WITH JV M
3

Compiler
COMPILER
MACHINE CODE
SOURCE
C CODE
GCC
010011100...
4

Hybrid compiler - at Compiletime
COMPILER
INTERMEDIATE 
LANGUAGE
SOURCE
JAVA CODE
JAVAC
JAVA BYTECODE: 
.CLASS FILE
5

Hybrid - at Runtime
INTERPRETER / JUST-
IN-TIME COMPILER
MACHINE CODE
INTERMEDIATE 
LANGUAGE
JAVA BYTECODE
JVM
010001011..
6

Interpreted - no compilation
SCRIPT
JSCRIPT
7

Interpreted - at Runtime
SCRIPT
MACHINE CODE
01001011...
JSCRIPT
INTERPRETER
CSCRIPT.EXE
8

Tools of choice
MACHINE CODE
loss of information
decompilation is difficult
disassembly is more 
accurate
main tool: disassembler and 
decompiler side-by-side
e.g.: IDA, Ghidra, Cutter
BYTECODE
preserves lots of information
decompilation usually works 
well
disassembly only if 
neccessary
main tool: decompiler
e.g. DnSpy, Krakatau, 
uncompyle
ORIGINAL SOURCE
main tool: text editor or IDE
e.g. Notepad++, Visual Studio 
Code
9

Analysis of compiled code
mov eax, 1
int i = 1;
MACHINE CODE
010011100...
DISASSEMBLER
DECOMPILER
ASSEMBLY
PSEUDO-C
10

Tools of choice
MACHINE CODE
loss of information
decompilation is difficult
disassembly is more 
accurate
main tool: disassembler and 
decompiler side-by-side
e.g.: IDA, Ghidra, Cutter
BYTECODE
preserves lots of information
decompilation usually works 
well
disassembly only if 
neccessary
main tool: decompiler
e.g. DnSpy, Krakatau, 
uncompyle
ORIGINAL SOURCE
main tool: text editor or IDE
e.g. Notepad++, Visual Studio 
Code
11

Analysis of bytecode
DISASSEMBLER
JAVAP
IL ASSEMBLY
HIGH LEVEL LANGUAGE
istore_1
DECOMPILER
INTERMEDIATE 
LANGUAGE
JAVA BYTECODE
KRAKATAU
int i = 1;
12

Tools of choice
MACHINE CODE
loss of information
decompilation is difficult
disassembly is more 
accurate
main tool: disassembler and 
decompiler side-by-side
e.g.: IDA, Ghidra, Cutter
BYTECODE
preserves lots of information
decompilation usually works 
well
disassembly only if 
neccessary
main tool: decompiler
e.g. DnSpy, Krakatau, 
uncompyle
ORIGINAL SOURCE
main tool: text editor or IDE
e.g. Notepad++, Visual Studio 
Code
13

How do I know what I have there?
Triage will tell you
14

Typical Misconceptions / Myths
Compiled/interpreted/hybrid are not characteristics of a 
programming language but of the language implementation.
"LANGUAGES ARE COMPILED OR 
INTERPRETED"
15

Typical Misconceptions / Myths
Anyone can write a compiler or an interpreter for any 
language
E.g., there is a machine code compiler for Java: gcj
As malware analyst you will also see non-standard language 
implementations
"LANGUAGES ARE COMPILED OR 
INTERPRETED"
16

Typical Misconceptions / Myths
The most common implementation of Python is CPython. The 
source is compiled to Python bytecode --> .pyc
Most of the time you will deal with the CPython bytecode 
when analysing Python based malware.
"PYTHON IS INTERPRETED"
17

