Table of Contents
Appendix B. CMS Administration Tool........................................................................ 1
B.1. Picking Up Where We Left Off............................................................................................................................................ 1
B.2. Managing Web Copy.......................................................................................................................................................... 1
B.3. Managing News Items...................................................................................................................................................... 12
B.4. Managing Authors, Administrators, and Categories......................................................................................................... 19
B.5. Updating the Admin Index Page....................................................................................................................................... 35
B.6. Summary.......................................................................................................................................................................... 35
Appendix B. CMS Administration Tool
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
This PDF is exclusively for your use in accordance with the Safari Terms of Service. No part of it may be reproduced or transmitted in any form by any means without the prior
written permission for reprints and excerpts from the publisher. Redistribution or other use that violates the fair use priviledge under U.S. copyright laws (see 17 USC107) or that
otherwise violates the Safari Terms of Service is strictly prohibited.

Appendix B. CMS Administration Tool
In  this appendix, we're going to finish the CMS administration tool. We're going to pick up where
we left off in Chapter 7, to build administrative forms and components for our remaining content
types. When we're finished, the administration tool will be able to handle Web copy and news items,
not just articles; it will also allow you to manage administrators, authors, and categories.
1334027
B.1. Picking Up Where We Left Off
661753
In Chapter 7, which was the last point at which we spent significant time on the CMS administration
tool, we built a login and verification page, an administrative index page, and the forms and logic
required to list, add, edit, and delete articles.
1334027
In this appendix, we're going to repeat this process for Web copy, news items, authors, site
administrators, and categories. The first two items, Web copy and news items, will be very similar
in functionality and structure to articles; the last three will be a good opportunity to examine some
alternative ways of handling XML information.
1334027
Every time we add another set of pages to the administration tool, we want to provide access to
those pages on the administrative index page  . When we're done, our administrative index content
will look like Figure B-1.
1334027
Let's get started.
1334027
B.2. Managing Web Copy
661753
Web  copy is very similar to articles in terms of its structure, although it does use different XML
elements. It's also similar to articles in terms of its function; however, Web copy items are used in
the kinds of Web pages that are more typically likened to "About Us," "Contact Us," and other such
pages.
1334027
Users often want to know who authored an article; with Web copy, this is usually not the case. Web
copy typically has to include a headline and navigation label that's appropriate to the site's
navigation; not so with articles—usually, they're retrieved via a search request. These slight
Appendix B. CMS Administration Tool
Page 1
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.
Copyright Safari Books Online #672274

variations in structure and function prompted me to separate Web copy from articles in the design
of our CMS.
1334027
Figure B-1. The appearance of our administrative index page.
To refresh your memory, here's the code of a typical Web copy content item :
1334027
xml/webcopy20040903112345.xml
<?xml version="1.0" encoding="iso-8859-1"?>
<webcopy id="webcopy20040903112345">
  <headline>Creating an XML-powered CMS</headline>
  <navigationlabel>XML CMS 101</navigationlabel>
  <description>Here are some articles that will further your XML
    knowledge.</description>
  <pubdate>2004-01-20</pubdate>
  <status>live</status>
  <body><![CDATA[
  <h1>Creating an XML-powered CMS</h1>
  <p>Are you tired of waiting around for your "IT Guy" or
    expensive designer to update your web site? Well, those days
    will be long forgotten if you buy our XML-powered CMS! With
    this revolutionary new tool, you can make quick and easy
    updates to your own web site! Forget all the hassles! It
    slices, it dices!</p>
  ]]></body>
</webcopy>
Appendix B. CMS Administration Tool
Page 2
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

You'll notice right away that the <webcopy> element has an <id> attribute  composed of the
string webcopy with a time stamp appended in the format YYYYMMDDHHMMSS. In this regard,
the <id> uniquely identifies each Web copy document—the article's <id> fulfills the same
function.
1334027
You'll also notice that we use a CDATA section  inside the <body> element of Web copy, as we
did with articles. Some may view this as a controversial decision, but it will save us a lot of time,
as we won't have to validate this text. Of course, it would be to your advantage to make sure that
you're using XHTML-compliant markup in these sections.
1334027
Unlike the article content type, we do not have <authorid>, <categoryid>, or
<keywords> elements in the Web copy content type. And we have a <navigationlabel>
element to provide a shorter version of the headline for concise titles in navigation systems.
1334027
B.2.1. Web Copy Index Page
672274
Let's build the first page associated with the Web copy content type: an index page that will list all
Web copy documents, provide us with the opportunity to create new ones, and allow us to edit and
delete existing Web copy documents.
1334027
As with our article management page, we must first include our access control and common include
files  :
1334027
webcopytool.php (excerpt)
<?php
  include 'security.inc.php';
  include_once '../common.inc.php';
?>
Next up is some pretty standard HTML boilerplate. Again, this is strikingly similar to the article
management page:
1334027
webcopytool.php (excerpt)
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
Appendix B. CMS Administration Tool
Page 3
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    content="text/html; charset=iso-8859-1" />
<title>Web Copy Index</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Web Copy Index</h1>
<p><a href="webcopytool_create.php">Create New Web Copy</a></p>
<p><a href="index.php">Cancel</a></p>
Next, we use a while loop and SimpleXML  to process the xml directory and pull out all the XML
files whose filenames start with webcopy. These candidates are inspected with SimpleXML, which
we use to pull unique IDs and headlines into a HTML list, with links to edit and delete each Web
copy document:
1334027
webcopytool.php (excerpt)
<ul>
<?php
$handle = opendir($fileDir);
while (($file = readdir($handle)) !== FALSE) {
  if (is_dir($fileDir . $file)) continue;  
  if (!eregi("^webcopy.*\.xml$", $file)) continue;
  
  $wcFile = simplexml_load_file($fileDir . $file);
  echo '<li>' . htmlentities($wcFile->headline);
  echo ' <a href="webcopytool_edit.php?id=' . $wcFile['id'] .
    '">edit</a>';
  echo ' <a href="doWebcopyDelete.php?id=' . $wcFile['id'] .
    '">delete</a></li>';
}
?>
</ul>
</body>
</html>
This page displays as shown in Figure B-2.
1334027
Appendix B. CMS Administration Tool
Page 4
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Figure B-2. The Web copy index page.
B.2.2. Web Copy Creation Page
672274
The  next step is to build the form that allows us to create new Web copy items. This is essentially
a very simple form that posts its contents to a PHP file, doWebcopyCeate.php, which does all the
heavy lifting.
1334027
Here is the markup and code for the form:
1334027
webcopytool_create.php
<?php
include 'security.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
Appendix B. CMS Administration Tool
Page 5
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    content="text/html; charset=iso-8859-1" />
<title>Create New Web Copy</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
<link rel="stylesheet" type="text/css" href="forms.css" />
</head>
<body>
<h1>Create New Web Copy</h1>
<p><a href="webcopytool.php">Cancel</a></p>
<form action="doWebcopyCreate.php" method="post">
<div class="fields">
  <p>
    <label for="headline">Headline</label>
    <input type="text" id="headline" name="headline" class="text"
        />
  </p>
  <p>
    <label for="headline">Navigation Label</label>
    <input type="text" id="navlabel" name="navlabel" class="text"
        />
  </p>
  <p>
    <label for="status">Status</label>
    <select id="status" name="status">
      <option value="in progress">In Progress</option>
      <option value="live">Live</option>
    </select>
  </p>
  <p>
    <label for="description">Description</label>
    <textarea id="description" name="description"></textarea>
  </p>
  <p>
    <label for="body">Web Copy Body (HTML)</label>
    <textarea id="body" name="body"></textarea>
  </p>
</div>
<div class="actions">
  <input type="submit" value="Add Web Copy" />
  <input type="reset" value="Reset" />
</div>
</form>
</body>
</html>
Because this form is very similar to that generated by the articletool_create.php file we wrote in
Chapter 7, I won't spend much time on it. You can see what it looks like in Figure B-3.
1334027
Appendix B. CMS Administration Tool
Page 6
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Figure B-3. The Web copy creation form.
B.2.3. New Web Copy Processing Script
672274
The doWebcopyCreate.php  file takes the submitted form values from webcopytool_create.php and
turns them into a valid XML file. It's modeled very closely on the doArticleCreate.php file, which
is used by the system to create articles.
1334027
In the first part of the file, we need to create a new DOMDocument, then create the file's root element,
<webcopy>. Note that we're using the DOM here to create a new XML document from scratch:
1334027
Appendix B. CMS Administration Tool
Page 7
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

doWebcopyCreate.php (excerpt)
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = new DOMDocument();
$root = $doc->createElement('webcopy');
$root = $doc->appendChild($root);
Next, we add a unique <id> attribute  to this root element. The way we generate the unique
identifier is to use PHP's date function , and prepend the string webcopy to the result. Just in case,
we also have to check to ensure that no other Web copy file has the same unique ID. If we do detect
a collision, we add one second to the timestamp in our <id> attribute and check again:
1334027
doWebcopyCreate.php (excerpt)
$timestamp = date('YmdHis');
do {
    $id = 'webcopy' . $timestamp++;
} while (file_exists($fileDir . $id . '.xml'));
$root->setAttribute('id', $id);
Next, we create our <headline>, <navigationlabel>, <description>, <pubdate>,
<status>, and <body> elements:
1334027
doWebcopyCreate.php (excerpt)
$head = $doc->createElement('headline');
$root->appendChild($head);
$htext = $doc->createTextNode($_POST['headline']);
$head->appendChild($htext);
$navlabel = $doc->createElement('navigationlabel');
$root->appendChild($navlabel);
$navtext = $doc->createTextNode($_POST['navlabel']);
$navlabel->appendChild($navtext);
$desc = $doc->createElement('description');
$root->appendChild($desc);
$dtext = $doc->createTextNode($_POST['description']);
$desc->appendChild($dtext);
$pub = $doc->createElement('pubdate');
$root->appendChild($pub);
$pubtext = $doc->createTextNode(date('Y-m-d'));
$pub->appendChild($pubtext);
$stat = $doc->createElement('status');
$root->appendChild($stat);
$stext = $doc->createTextNode($_POST['status']);
$stat->appendChild($stext);
$body = $doc->createElement('body');
$root->appendChild($body);
$cdata = $doc->createCDATASection($_POST['body']);
$body->appendChild($cdata);
Appendix B. CMS Administration Tool
Page 8
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Last, but not least, we write to the file and return the administrative user to the Web Copy Index
page.
1334027
doWebcopyCreate.php (excerpt)
$filename = $fileDir . $id . '.xml';
$doc->save($filename);
header('location: webcopytool.php');
?>
B.2.4. Web Copy Editing Page
672274
The  next step in the process is to create a page from which we can edit Web copy items. This page
is identical to webcopytool_create.php with the exception that it must open the specified XML file
and load the existing values into the appropriate fields.
1334027
For this purpose, we'll use SimpleXML . For example, we can open an XML file with:
1334027
webcopytool_edit.php (excerpt)
$file = simplexml_load_file($fileDir . $_GET['id'] . '.xml');
We can display a value, such as a headline, in a form field like this:
1334027
webcopytool_edit.php (excerpt)
    <input type="text" id="headline" name="headline" class="text"
        value="<?php echo htmlentities($file->headline); ?>" />
Here's the entire form. Notice that we do a simple check to ensure that the page does receive an ID
of some kind through HTTP GET.
1334027
webcopytool_edit.php (excerpt)
<?php
include 'security.inc.php';
include_once '../common.inc.php';
Appendix B. CMS Administration Tool
Page 9
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

if (!isset($_GET['id']) || $_GET['id'] == '' ||
    !file_exists($fileDir . $_GET['id'] . '.xml')) {
  header('location: webcopytool.php');
  exit;
}
$file = simplexml_load_file($fileDir . $_GET['id'] . '.xml');
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Edit Web Copy</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
<link rel="stylesheet" type="text/css" href="forms.css" />
</head>
<body>
<h1>Edit Web Copy</h1>
<p><a href="webcopytool.php">Cancel</a></p>
<form action="doWebcopyUpdate.php" method="post">
<input type="hidden" name="id" value="<?php
    echo htmlentities($_GET['id']); ?>" />
<div class="fields">
  <p>
    <label for="headline">Headline</label>
    <input type="text" id="headline" name="headline" class="text"
        value="<?php echo htmlentities($file->headline); ?>" />
  </p>
  <p>
    <label for="headline">Navigation Label</label>
    <input type="text" id="navlabel" name="navlabel" class="text"
        value="<?php echo htmlentities($file->navigationlabel);
        ?>" />
  </p>
  <p>
    <label for="status">Status</label>
    <select id="status" name="status">
      <option value="in progress"
          <?php if ((string)$file->status == 'in progress')
          echo 'selected="selected"'?>>In Progress</option>
      <option value="live"
          <?php if ((string)$file->status == 'live')
          echo 'selected="selected"'?>>Live</option>
    </select>
  </p>
  <p>
    <label for="description">Description</label>
    <textarea id="description" name="description">
<?php echo htmlentities($file->description); ?></textarea>
  </p>
  <p>
    <label for="body">Web Copy Body (HTML)</label>
    <textarea id="body" name="body">
<?php echo htmlentities($file->body); ?></textarea>
  </p>
</div>
<div class="actions">
  <input type="submit" value="Update Web Copy" />
  <input type="reset" value="Reset" />
</div>
</form>
</body>
</html>
Appendix B. CMS Administration Tool
Page 10
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

As you can see, this form posts to a file named doWebcopyUpdate.php . This file has much the
same functionality as doWebcopyCreate.php, except that it has to update a piece of Web copy, not
create one from scratch.
1334027
B.2.5. Web Copy Update Processing Script
672274
This script is almost exactly the same as doWebcopyCreate.php, except that:
1334027
1. It deletes the file it's currently working on before writing a new file.
2. It doesn't have to work quite as hard to come up with a unique ID, as one has already been assigned to the content item.
Why did I choose to delete the XML file and then create a new file with the same identifier? Because
replacing XML nodes in place can be both complicated and expensive, so makes more sense just
to recreate the file from scratch.
1334027
Here's the code. I've highlighted in bold the two lines that differ from doWebcopyCreate.php:
1334027
doWebcopyUpdate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = new DOMDocument();
$root = $doc->createElement('webcopy');
$root = $doc->appendChild($root);
$id = $_POST['id'];
$root->setAttribute('id', $id);
$head = $doc->createElement('headline');
$root->appendChild($head);
$htext = $doc->createTextNode($_POST['headline']);
$head->appendChild($htext);
$navlabel = $doc->createElement('navigationlabel');
$root->appendChild($navlabel);
$navtext = $doc->createTextNode($_POST['navlabel']);
$navlabel->appendChild($navtext);
$desc = $doc->createElement('description');
$root->appendChild($desc);
$dtext = $doc->createTextNode($_POST['description']);
$desc->appendChild($dtext);
$pub = $doc->createElement('pubdate');
$root->appendChild($pub);
$pubtext = $doc->createTextNode(date('Y-m-d'));
$pub->appendChild($pubtext);
$stat = $doc->createElement('status');
Appendix B. CMS Administration Tool
Page 11
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

$root->appendChild($stat);
$stext = $doc->createTextNode($_POST['status']);
$stat->appendChild($stext);
$body = $doc->createElement('body');
$root->appendChild($body);
$cdata = $doc->createCDATASection($_POST['body']);
$body->appendChild($cdata);
$filename = $fileDir . $id . '.xml';
unlink($filename);
$doc->save($filename);
header('location: webcopytool.php');
?>
B.2.6. Web Copy Delete Processing Script
672274
The final thing we have to do is create a script to delete Web copy items.
1334027
Here's the code:
1334027
doWebcopyDelete.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$filename = $fileDir . $_GET['id'] . '.xml';
unlink($filename);
header('location: webcopytool.php');
?>
B.3. Managing News Items
661753
News  items are designed to contain those short snippets of information that are posted on our site's
left-hand side navigation area. Here's a refresher illustrating what a news item might look like:
1334027
news20041014061004.xml
Appendix B. CMS Administration Tool
Page 12
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

<?xml version="1.0" encoding="iso-8859-1"?>
<news id="news20041014061004">
  <authorid>1</authorid>
  <categoryid>1</categoryid>
  <headline>XML CMS Almost Ready!</headline>
  <url>http://www.myxmlbook.com/</url>
  <description>The XML CMS is finally almost ready for shipping.
  </description>
  <pubdate>2004-10-14</pubdate>
  <status>live</status>
  <keywords>xml</keywords>
</news>
You'll notice that the news content item has many of the same elements as our articles, including
<authorid>, <categoryid>, <headline>, <description>, <pubdate>,
<status>, and <keywords>. It doesn't have a <body> element, but it contains a unique
element, <url>.
1334027
For the administration system, we're going to follow the same pattern we used for Web copy and
articles, so I'll present the code for each of the forms and scripts with little or no commentary.
1334027
B.3.1. News Item Index Page
672274
Here's the main news management page. Notice that it behaves in exactly the same way as the other
content item index pages.
1334027
newstool.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>News Index</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>News Index</h1>
<p><a href="newstool_create.php">Create New News Item</a></p>
<p><a href="index.php">Cancel</a></p>
<ul>
<?php
$handle = opendir($fileDir);
while (($file = readdir($handle)) !== FALSE) {
  if (is_dir($fileDir . $file)) continue;  
  if (!eregi("^news.*\.xml$", $file)) continue;
  
Appendix B. CMS Administration Tool
Page 13
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

  $wcFile = simplexml_load_file($fileDir . $file);
  echo '<li>' . htmlentities($wcFile->headline);
  echo ' <a href="newstool_edit.php?id=' . $wcFile['id'] .
      '">edit</a>';
  echo ' <a href="doNewsDelete.php?id=' . $wcFile['id'] .
      '">delete</a></li>';
}
?>
</ul>
</body>
</html>
B.3.2. News Item Creation Page
672274
newstool_create.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Create New News Item</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
<link rel="stylesheet" type="text/css" href="forms.css" />
</head>
<body>
<h1>Create New News Item</h1>
<p><a href="newstool.php">Cancel</a></p>
<form action="doNewsCreate.php" method="post">
<div class="fields">
  <p>
    <label for="headline">Headline</label>
    <input type="text" id="headline" name="headline" class="text"
    />
  </p>
  <p>
    <label for="author">Author</label>
    <select id="authorid" name="authorid">
      <?php
        $authors = simplexml_load_file($fileDir . 'authors.xml');
        foreach ($authors->author as $author) {
          echo '<option value="' . htmlentities($author['id']) .
              '">' . htmlentities($author->name) . '</option>';
        }
      ?>
    </select>
  </p>
  <p>
    <label for="category">Category</label>
    <select id="categoryid" name="categoryid">
      <?php
        $cats = simplexml_load_file($fileDir . 'categories.xml');
        foreach ($cats->category as $cat) {
          echo '<option value="' . htmlentities($cat['id']) .
Appendix B. CMS Administration Tool
Page 14
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

              '">' . htmlentities($cat['label']) . '</option>';
        }
      ?>
    </select>
  </p>
  <p>
    <label for="status">Status</label>
    <select id="status" name="status">
      <option value="in progress">In Progress</option>
      <option value="live">Live</option>
    </select>
  </p>
  <p>
    <label for="keywords">Keywords</label>
    <input type="text" id="keywords" name="keywords" class="text"
        />
  </p>
  <p>
    <label for="description">Description</label>
    <textarea id="description" name="description"></textarea>
  </p>
  <p>
    <label for="url">URL</label>
    <input type="text" id="url" name="url" class="text" />
  </p>
</div>
<div class="actions">
  <input type="submit" value="Add News Item" />
  <input type="reset" value="Reset" />
</div>
</form>
</body>
</html>
B.3.3. New News Item Processing Script
672274
doNewsCreate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = new DOMDocument();
$root = $doc->createElement('news');
$root = $doc->appendChild($root);
$timestamp = date('YmdHis');
do {
  $id = 'news' . $timestamp++;
} while (file_exists($fileDir . $id . '.xml'));
$root->setAttribute('id', $id);
$author = $doc->createElement('authorid');
$root->appendChild($author);
$atext = $doc->createTextNode($_POST['authorid']);
$author->appendChild($atext);
$cat = $doc->createElement('categoryid');
$root->appendChild($cat);
Appendix B. CMS Administration Tool
Page 15
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

$ctext = $doc->createTextNode($_POST['categoryid']);
$cat->appendChild($ctext); 
$head = $doc->createElement('headline');
$root->appendChild($head);
$htext = $doc->createTextNode($_POST['headline']);
$head->appendChild($htext);
$url = $doc->createElement('url');
$root->appendChild($url);
$utext = $doc->createTextNode($_POST['url']);
$url->appendChild($utext);
$desc = $doc->createElement('description');
$root->appendChild($desc);
$dtext = $doc->createTextNode($_POST['description']);
$desc->appendChild($dtext);
$pub = $doc->createElement('pubdate');
$root->appendChild($pub);
$pubtext = $doc->createTextNode(date('Y-m-d'));
$pub->appendChild($pubtext);
$stat = $doc->createElement('status');
$root->appendChild($stat);
$stext = $doc->createTextNode($_POST['status']);
$stat->appendChild($stext);
$key = $doc->createElement('keywords');
$root->appendChild($key);
$ktext = $doc->createTextNode($_POST['keywords']);
$key->appendChild($ktext);
$filename = $fileDir . $id . '.xml';
$doc->save($filename);
header('location: newstool.php');
?>
B.3.4. News Item Editing Page
672274
newstool_edit.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
if (!isset($_GET['id']) || $_GET['id'] == '' ||
    !file_exists($fileDir . $_GET['id'] . '.xml')) {
  header('location: newstool.php');
  exit;
}
$file = simplexml_load_file($fileDir . $_GET['id'] . '.xml');
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
Appendix B. CMS Administration Tool
Page 16
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

    content="text/html; charset=iso-8859-1" />
<title>Edit News Item</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
<link rel="stylesheet" type="text/css" href="forms.css" />
</head>
<body>
<h1>Edit News Item</h1>
<p><a href="newstool.php">Cancel</a></p>
<form action="doNewsUpdate.php" method="post">
<input type="hidden" name="id"
    value="<?php echo htmlentities($_GET['id']); ?>" />
<div class="fields">
  <p>
    <label for="headline">Headline</label>
    <input type="text" id="headline" name="headline" class="text"
        value="<?php echo htmlentities($file->headline); ?>" />
  </p>
  <p>
    <label for="author">Author</label>
    <select id="authorid" name="authorid">
      <?php
        $authors = simplexml_load_file($fileDir . 'authors.xml');
        foreach ($authors->author as $author) {
          if ((string)$author['id'] == (string)$file->authorid) {
            echo '<option value="' . htmlentities($author['id']) .
                '" selected="selected">' .
                htmlentities($author->name) . '</option>';
          } else {
            echo '<option value="' . htmlentities($author['id']) .
                '">' . htmlentities($author->name) . '</option>';
          }
        }
      ?>
    </select>
  </p>
  <p>
    <label for="category">Category</label>
    <select id="categoryid" name="categoryid">
      <?php
        $cats = simplexml_load_file($fileDir . 'categories.xml');
        foreach ($cats->category as $cat) {
          if ((string)$cat['id'] == (string)$file->categoryid) {
            echo '<option value="' . htmlentities($cat['id']) .
                '" selected="selected">' .
                htmlentities($cat['label']) . '</option>';
          } else {
            echo '<option value="' . htmlentities($cat['id']) .
                '">' . htmlentities($cat['label']) . '</option>';
          }
        }
      ?>
    </select>
  </p>
  <p>
    <label for="status">Status</label>
    <select id="status" name="status">
      <option value="in progress"
          <?php if ((string)$file->status == 'in progress')
          echo 'selected="selected"'?>>In Progress</option>
      <option value="live"
          <?php if ((string)$file->status == 'live')
          echo 'selected="selected"'?>>Live</option>
    </select>
  </p>
  <p>
    <label for="keywords">Keywords</label>
    <input type="text" id="keywords" name="keywords" class="text"
        value="<?php echo htmlentities($file->keywords); ?>" />
  </p>
Appendix B. CMS Administration Tool
Page 17
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

  <p>
    <label for="description">Description</label>
    <textarea id="description" name="description">
<?php echo htmlentities($file->description); ?></textarea>
  </p>
  <p>
    <label for="url">URL</label>
    <input type="text" id="url" name="url" class="text"
        value="<?php echo htmlentities($file->url); ?>" />
  </p>
</div>
<div class="actions">
  <input type="submit" value="Update News Item" />
  <input type="reset" value="Reset" />
</div>
</form>
</body>
</html>
B.3.5. News Item Update Processing Script
672274
doNewsUpdate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = new DOMDocument();
$root = $doc->createElement('news');
$root = $doc->appendChild($root);
$id = $_POST['id'];
$root->setAttribute('id', $id);
$author = $doc->createElement('authorid');
$root->appendChild($author);
$atext = $doc->createTextNode($_POST['authorid']);
$author->appendChild($atext);
$cat = $doc->createElement('categoryid');
$root->appendChild($cat);
$ctext = $doc->createTextNode($_POST['categoryid']);
$cat->appendChild($ctext); 
$head = $doc->createElement('headline');
$root->appendChild($head);
$htext = $doc->createTextNode($_POST['headline']);
$head->appendChild($htext);
$url = $doc->createElement('url');
$root->appendChild($url);
$utext = $doc->createTextNode($_POST['url']);
$url->appendChild($utext);
$desc = $doc->createElement('description');
$root->appendChild($desc);
$dtext = $doc->createTextNode($_POST['description']);
$desc->appendChild($dtext);
Appendix B. CMS Administration Tool
Page 18
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

$pub = $doc->createElement('pubdate');
$root->appendChild($pub);
$pubtext = $doc->createTextNode(date('Y-m-d'));
$pub->appendChild($pubtext);
$stat = $doc->createElement('status');
$root->appendChild($stat);
$stext = $doc->createTextNode($_POST['status']);
$stat->appendChild($stext);
$key = $doc->createElement('keywords');
$root->appendChild($key);
$ktext = $doc->createTextNode($_POST['keywords']);
$key->appendChild($ktext);
$filename = $fileDir . $id . '.xml';
unlink($filename);
$doc->save($filename);
header('location: newstool.php');
?>
B.3.6. News Item Delete Processing Script
672274
doNewsDelete.phpdoNewsUpdate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$filename = $fileDir . $_GET['id'] . '.xml';
unlink($filename);
header('location: newstool.php');
?>
B.4. Managing Authors, Administrators, and Categories
661753
I'm going to cover authors, administrators, and categories together because in terms of function and
structure, they are all very similar. Instead of each author, administrator, or category residing in a
separate file (as is the case for articles and news items), what we're talking about here are lists of
authors, administrators, and categories. We can take advantage of this fact in the way that we display
and update the listed information.
1334027
Let's go through each of these lists, one at a time, so you can see how we handle these kinds of
structures.
Appendix B. CMS Administration Tool
Page 19
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

1334027
B.4.1. Managing Authors
672274
First , here's a sample author listing. You'll notice that it's essentially a list of authors and related
information:
1334027
authors.xml
<?xml version="1.0" encoding="iso-8859-1"?>
<authors>
  <author id="1">
    <name>Tom Myer</name>
    <byline>myerman</byline>
    <email>tom@myerman.com</email>
  </author>
  <author id="2">
    <name>Joe Blow</name>
    <byline>joe</byline>
    <email>joe@myerman.com</email>
  </author>
  <author id="4">
    <name>Bill</name>
    <byline>bill</byline>
    <email>bill@myerman.com</email>
  </author>
</authors>
Because we're presented with a list, we have an opportunity to update the entire file with one form,
adding, editing, and deleting items through a unified interface. But first, let's provide an interface
to simply view the list of existing authors:
1334027
authortool.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Author Index</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Author Index</h1>
<p><a href="authortool_edit.php">Edit Author Listing</a></p>
<p><a href="index.php">Cancel</a></p>
<ul>
Appendix B. CMS Administration Tool
Page 20
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

<?php
$authors = simplexml_load_file($fileDir . 'authors.xml');
foreach ($authors->author as $author) {
  echo '<li>' . htmlentities($author->name) .
      ' (' . htmlentities($author->email) . ')</li>';
}
?>
</ul>
</body>
</html>
Figure B-4 illustrates how our Author Index Page will display .
1334027
Figure B-4. The Author Index page.
When an administrative user clicks on Edit Author Listing he or she sees the Edit Authors page,
the page shown in Figure B-5.
1334027
This page essentially consists of a single form that loads the values from the XML file into the
appropriate form fields. On each line that's already populated, the administrator is given the
opportunity to delete existing authors. Furthermore, the administrator has the chance to add up to
three more authors (though this can easily be modified in the code, or scripted to be made more
flexible).
1334027
Here's the PHP and HTML code that creates this page. It begins similarly to all our other
administrative pages: by loading our two include files, and then outputting the HTML boilerplate:
1334027
Appendix B. CMS Administration Tool
Page 21
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Figure B-5. The Edit Authors page.
authortool_edit.php (excerpt)
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Edit Authors</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Edit Authors</h1>
<p><a href="authortool.php">Cancel</a></p>
<form method="post" action="doAuthorsUpdate.php">
Appendix B. CMS Administration Tool
Page 22
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

<table border="1" cellspacing="0" cellpadding="3">
  <tr>
    <th>Delete?</th>
    <th>Name</th>
    <th>Byline</th>
    <th>Email</th>
  </tr>
We can then use SimpleXML  to load up and loop through the authors one at a time, in order to
create form elements that contain the proper information:
1334027
authortool_edit.php (excerpt)
  <?php
  $authors = simplexml_load_file($fileDir . 'authors.xml');
  foreach ($authors->author as $author) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td><input type=\"checkbox\" name=\"author[" .
        htmlentities($author['id']) . "][delete]\" " .
        "value=\"true\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"author[" .
        htmlentities($author['id']) . "][name]\" value=\"" .
        htmlentities($author->name) . "\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"author[" .
        htmlentities($author['id']) . "][byline]\" value=\"" .
        htmlentities($author->byline) . "\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"author[" .
        htmlentities($author['id']) . "][email]\" value=\"" .
        htmlentities($author->email) . "\" /></td>\n";
    echo "\t</tr>\n";
  }
Note that the form fields are specifically named to produce a PHP array in the processing script,
from which the various values for each existing author may be accessed (e.g. $_POST
['author'][1]['name']).
1334027
Additionally, our form includes three blank rows of fields for new authors to be added:
1334027
authortool_edit.php (excerpt)
  for ($i = 0; $i < 3; $i++) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newauthor[name][]\" /></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newauthor[byline][]\" /></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newauthor[email][]\" /></td>\n";
    echo "\t</tr>\n";
  }
  ?>
  <tr><td colspan="4">
    <input type="submit" value="Update" />
    <input type="reset" value="Reset" />
Appendix B. CMS Administration Tool
Page 23
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

  </td></tr>
</table>
</form>
</body>
</html>
This form posts to doAuthorsUpdate.php  , in which we will use DOM functions to update the
existing authors.xml file. Since more than one administrator may be working with the list of authors
at once, we can't simply rebuild a new authors.xml file based on the form submission, because any
changes submitted by another administrator since the form was generated would be lost.
1334027
So to start, we load our include files and then load up our existing authors.xml file[1] and grab a
reference to the <authors> element. We also create a couple of additional variables, $maxId
and $deleteFailures, that we'll need later on in the script.
1334027
[1] The script assumes such a file exists, so to initialize an empty copy of the CMS, you will need an authors.xml file with no <author> entries.
doAuthorsUpdate.php (excerpt)
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = new DOMDocument::load($fileDir . 'authors.xml');
$root = $doc->documentElement;
$maxId = 0;
$deleteFailures = array();
We can then loop through the existing authors in our XML file:
1334027
doAuthorsUpdate.php (excerpt)
foreach ($root->getElementsByTagName('author') as $xAuthor) {
First up, we'll get the ID of each author in the XML file. Because we may need to add new authors
to the file, we'll take this opportunity to keep track of the highest author ID:
1334027
doAuthorsUpdate.php (excerpt)
  $id = $xAuthor->getAttribute('id');
  if ($maxId < (int)$id) $maxId = (int)$id;
For each author in the file, we'll check for a corresponding submitted set of author details. This
approach neatly avoids attempts to update authors that have just been deleted by another
administrator, and doesn't touch any authors that were just added :
Appendix B. CMS Administration Tool
Page 24
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

1334027
doAuthorsUpdate.php (excerpt)
  if (isset($_POST['author']) and
      isset($_POST['author'][$id])) {
    $author = $_POST['author'][$id];
If the Delete? checkbox was checked for this author, we want to remove the corresponding entry
from the XML data. But before we can do that, we must first check if there is any existing site
content that is attributable to the author. What should happen if existing content is found is up to
you, really: you could simply delete the offending content; you could assign the content to a special
"anonymous" author ID; or you could prompt the user for a course of action. For this example, we'll
skip the deletion and collect the author's ID in an array variable, $deleteFailures, which we'll
present to the user at the end of this script .
1334027
doAuthorsUpdate.php (excerpt)
    if (isset($author['delete']) and $author['delete'] == 'true')
    {
      $okToDelete = TRUE;
      $handle = opendir($fileDir);
      while (($file = readdir($handle)) !== FALSE) {
        if (is_dir($fileDir . $file)) continue;  
        if (!eregi("^(article|news).*\.xml$", $file)) continue;
        $contentItem = simplexml_load_file($fileDir . $file);
        if ((string)$contentitem->authorid == (string)$id) {
          $okToDelete = FALSE;
          break;
        }
      }
      if ($okToDelete) $root->removeChild($xAuthor);
      else $deleteFailures[] = $id;
If Delete? wasn't checked, we simply update the entry with the details that were submitted:
1334027
doAuthorsUpdate.php (excerpt)
    } else {
      $name = $xAuthor->getElementsByTagName('name');
      $name = $name->item(0);
      $name->nodeValue = $author['name'];
      
      $byline = $xAuthor->getElementsByTagName('byline');
      $byline = $byline->item(0);
      $byline->nodeValue = $author['byline'];
      
      $email = $xAuthor->getElementsByTagName('email');
      $email = $email->item(0);
      $email->nodeValue = $author['email'];
    }
  }
}
Appendix B. CMS Administration Tool
Page 25
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

Next up, we must process any new author entries that have been submitted. For a new author entry
to be valid, we'll require that it at least have a name:
1334027
doAuthorsUpdate.php (excerpt)
if (isset($_POST['newauthor'])) {
  foreach ($_POST['newauthor'] as $author) {
    if (isset($author['name'] and trim($author['name']) != '')) {
      $xAuthor = $root->appendChild($doc->createElement('author'));
With the element created and appended to the XML data, all that's left is to set its ID attribute (one
greater than the current maximum ID value) and add the data elements for the submitted name,
byline, and email address:
1334027
doAuthorsUpdate.php (excerpt)
      $xAuthor->setAttribute('id', ++$maxId);
      $xAuthor->appendChild($doc->createElement('name',
          $author['name']));
      $xAuthor->appendChild($doc->createElement('byline',
          $author['byline']));
      $xAuthor->appendChild($doc->createElement('email',
          $author['email']));
    }
  }
}
With all the requested changes to our XML data done, we can overwrite authors.xml with our
updated version:
1334027
doAuthorsUpdate.php (excerpt)
unlink($fileDir . 'authors.xml');
$doc->save($fileDir . 'authors.xml');
If any requested author deletions were unsuccessful , we'll redirect the browser to a page that
displays a relevant error message, passing it the list of failed author IDs in the query string:
1334027
doAuthorsUpdate.php (excerpt)
if (count($deleteFailures) > 0) {
  $qs = '?';
  foreach ($deleteFailures as $id) {
    $qs .= "id[]=$id&";
  }
  header('location: authortool_deletefail.php' . $qs);
Appendix B. CMS Administration Tool
Page 26
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

But if all goes well, then we'll simply redirect the browser back to the main author management
page:
1334027
doAuthorsUpdate.php (excerpt)
} else {
  header('location: authortool.php');
}
?>
That's it for the author update processing script. For the sake of completeness, here's the page that
displays failures to delete authors:
1334027
authortool_deletefail.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Delete(s) Failed</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Delete(s) Failed</h1>
<p>Failed to delete the following authors, who still have content
  on the site. Remove or reassign their content items first, then
  try again.</p>
<ul>
<?php
$authors = simplexml_load_file($fileDir . 'authors.xml');
foreach ($id as $authorId) {
  echo '<li>' . $authors->xpath("author[@id='$authorId']/name") .
      '</li>';
}
?>
</ul>
<p>Any other requested changes have been made.</p>
<p><a href="authortool.php">Back to Author Listing</a></p>
</body>
</html>
B.4.2. Managing Administrators
672274
Here's the administrator listing. As you'll see, its structure is very similar to that of the authors
listing:
Appendix B. CMS Administration Tool
Page 27
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

1334027
admin.xml
<?xml version="1.0" encoding="iso-8859-1"?>
<admins>
  <admin id="1">
    <name>Joe</name>
    <username>joe</username>
    <password>$1$064.HQ..$x912OhlIlHFylTPJmJR/k/</password>
    <email>joe@myerman.com</email>
  </admin>
  <admin id="2">
    <name>Bill</name>
    <username>bill</username>
    <password>$1$Ep5.7h4.$R6iGqy.Wj2Dz8SAE9WG3l0</password>
    <email>bill@myerman.com</email>
  </admin>
  <admin id="3">
    <name>Tom</name>
    <username>tom</username>
    <password>$1$Cl/.j3..$QcjxGtxqYx0VNp3QanGnP0</password>
    <email>tom@myerman.com</email>
  </admin>
</admins>
Note: As you can see, the password values are encrypted for added security. So that you can use the sample
admin.xml file included in the code archive for this book, you need to know that the initial password of all
three administrators stored in that file is password.
We're going to process administrators in much the same way we processed authors.
1334027
admintool.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Admin Index</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Admin Index</h1>
<p><a href="admintool_edit.php">Edit Admin Listing</a></p>
<p><a href="index.php">Cancel</a></p>
<ul>
<?php
$admins = simplexml_load_file($fileDir . 'admin.xml');
foreach ($admins->admin as $admin) {
  echo '<li>' . htmlentities($admin->name) .
      ' (' . htmlentities($admin->email) . ')</li>';
Appendix B. CMS Administration Tool
Page 28
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

}
?>
</ul>
</body>
</html>
admintool_edit.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Edit Admins</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Edit Admins</h1>
<p><a href="admintool.php">Cancel</a></p>
<form method="post" action="doAdminsUpdate.php">
<table border="1" cellspacing="0" cellpadding="3">
  <tr>
    <th>Delete?</th>
    <th>Name</th>
    <th>Username</th>
    <th>New Password</th>
    <th>Email</th>
  </tr>
  <?php
  $admins = simplexml_load_file($fileDir . 'admin.xml');
  foreach ($admins->admin as $admin) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td><input type=\"checkbox\" name=\"admin[" .
        htmlentities($admin['id']) . "][delete]\" " .
        "value=\"true\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"admin[" .
        htmlentities($admin['id']) . "][name]\" value=\"" .
        htmlentities($admin->name) . "\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"admin[" .
        htmlentities($admin['id']) . "][username]\" value=\"" .
        htmlentities($admin->username) . "\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"admin[" .
        htmlentities($admin['id']) . "][password]\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"admin[" .
        htmlentities($admin['id']) . "][email]\" value=\"" .
        htmlentities($admin->email) . "\" /></td>\n";
    echo "\t</tr>\n";
  }
  for ($i = 0; $i < 3; $i++) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newadmin[$i][name]\" /></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newadmin[$i][username]\" /></td>\n";
    echo "\t\t<td><input type=\"text\"
        name=\"newadmin[$i][password]\" /></td>\n";
    echo "\t\t<td><input type=\"text\"
Appendix B. CMS Administration Tool
Page 29
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

        name=\"newadmin[$i][email]\" /></td>\n";
    echo "\t</tr>\n";
  }
  ?>
  <tr><td colspan="5">
    <input type="submit" value="Update" />
    <input type="reset" value="Reset" />
  </td></tr>
</table>
</form>
</body>
</html>
doAdminsUpdate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = DOMDocument::load($fileDir . 'admin.xml');
$root = $doc->documentElement;
$maxId = 0;
foreach ($root->getElementsByTagName('admin') as $xAdmin) {
  $id = $xAdmin->getAttribute('id');
  if ($maxId < (int)$id) $maxId = (int)$id;
  if (isset($_POST['admin']) and
      isset($_POST['admin'][$id])) {
    $admin = $_POST['admin'][$id];
    if (isset($admin['delete']) and $admin['delete'] == 'true') {
      $root->removeChild($xAdmin);
    } else {
      $name = $xAdmin->getElementsByTagName('name');
      $name = $name->item(0);
      $name->nodeValue = $admin['name'];
      
      $uname = $xAdmin->getElementsByTagName('username');
      $uname = $uname->item(0);
      $uname->nodeValue = $admin['username'];
      
      if (isset($admin['password']) and
          trim($admin['password']) != '') {
        $pass = $xAdmin->getElementsByTagName('password');
        $pass = $pass->item(0);
        $pass->nodeValue = crypt($admin['password']);
      }
      
      $email = $xAdmin->getElementsByTagName('email');
      $email = $email->item(0);
      $email->nodeValue = $admin['email'];
    }
  }
}
if (isset($_POST['newadmin'])) {
  foreach ($_POST['newadmin'] as $admin) {
    if (isset($admin['name']) and trim($admin['name']) != '' and
        isset($admin['username']) and
        trim($admin['username']) != '' and
        isset($admin['password']) and
        trim($admin['password']) != '') {
      $xAdmin = $root->appendChild($doc->createElement('admin'));
      $xAdmin->setAttribute('id', ++$maxId);
Appendix B. CMS Administration Tool
Page 30
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

      $xAdmin->appendChild($doc->createElement('name',
          $admin['name']));
      $xAdmin->appendChild($doc->createElement('username',
          $admin['username']));
      $xAdmin->appendChild($doc->createElement('password',
          crypt($admin['password'])));
      $xAdmin->appendChild($doc->createElement('email',
          $admin['email']));
    }
  }
}
unlink($fileDir . 'admin.xml');
$doc->save($fileDir . 'admin.xml');
header('location: admintool.php');
?>
B.4.3. Managing Categories
672274
Finally , here's the category listing, which uses attributes instead of elements to do its job:
1334027
categories.xml
<?xml version="1.0" encoding="iso-8859-1"?>
<categories>
  <category label="xml" status="live" id="1"/>
  <category label="php" status="live" id="2"/>
  <category label="asp" status="live" id="3"/>
  <category label="javascript" status="live" id="4"/>
  <category label="perl" status="live" id="5"/>
</categories>
Despite this structural difference, we handle the information in much the same way we handled
authors and administrators. Again, because there isn't much difference, I'll present the code without
commentary.
1334027
categorytool.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
Appendix B. CMS Administration Tool
Page 31
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Category Index</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Category Index</h1>
<p><a href="categorytool_edit.php">Edit Category Listing</a></p>
<p><a href="index.php">Cancel</a></p>
<ul>
<?php
$cats = simplexml_load_file($fileDir . 'categories.xml');
foreach ($cats->category as $cat) {
  echo '<li>' . htmlentities($cat['label']) .
      ' (' . htmlentities($cat['status']) . ')</li>';
}
?>
</ul>
</body>
</html>
categorytool_edit.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Edit Categories</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Edit Categories</h1>
<p><a href="categorytool.php">Cancel</a></p>
<form method="post" action="doCategoriesUpdate.php">
<table border="1" cellspacing="0" cellpadding="3">
  <tr>
    <th>Delete?</th>
    <th>Label</th>
    <th>Status</th>
  </tr>
  <?php
  $cats = simplexml_load_file($fileDir . 'categories.xml');
  foreach ($cats->category as $cat) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td><input type=\"checkbox\" name=\"cat[" .
        htmlentities($cat['id']) . "][delete]\" " .
        "value=\"true\" /></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"cat[" .
        htmlentities($cat['id']) . "][label]\" value=\"" .
        htmlentities($cat['label']) . "\" /></td>\n";
    echo "\t\t<td><select name=\"cat[" .
        htmlentities($cat['id']) . "][status]\">\n";
    echo "\t\t\t<option value=\"live\"" .
        ((string)$cat['status'] == 'live' ? ' selected="selected"'
        : '') . ">live</option>\n";
    echo "\t\t\t<option value=\"in progress\"" .
        ((string)$cat['status'] == 'in progress' ?
Appendix B. CMS Administration Tool
Page 32
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

        ' selected="selected"' : '') . ">in progress</option>\n";
    echo "\t\t</select></td>\n";
    echo "\t</tr>\n";
  }
  for ($i = 0; $i < 3; $i++) {
    echo "\t<tr valign=\"top\">\n";
    echo "\t\t<td></td>\n";
    echo "\t\t<td><input type=\"text\" name=\"newcat[$i][label]\"
        /></td>\n";
    echo "\t\t<td><select name=\"newcat[$i][status]\">\n";
    echo "\t\t\t<option value=\"live\">live</option>\n";
    echo "\t\t\t<option value=\"in progress\"
        >in progress</option>\n";
    echo "\t\t</select></td>\n";
    echo "\t</tr>\n";
  }
  ?>
  <tr><td colspan="3">
    <input type="submit" value="Update" />
    <input type="reset" value="Reset" />
  </td></tr>
</table>
</form>
</body>
</html>
doCategoriesUpdate.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
$doc = DOMDocument::load($fileDir . 'categories.xml');
$root = $doc->documentElement;
$maxId = 0;
$deleteFailures = array();
foreach ($root->getElementsByTagName('category') as $xCat) {
  $id = $xCat->getAttribute('id');
  if ($maxId < (int)$id) $maxId = (int)$id;
  if (isset($_POST['cat']) and
      isset($_POST['cat'][$id])) {
    $cat = $_POST['cat'][$id];
    if (isset($cat['delete']) and $cat['delete'] == 'true') {
      $okToDelete = TRUE;
      $handle = opendir($fileDir);
      while (($file = readdir($handle)) !== FALSE) {
        if (is_dir($fileDir . $file)) continue;  
        if (!eregi("^(article|news).*\.xml$", $file)) continue;
        $contentItem = simplexml_load_file($fileDir . $file);
        if ((string)$contentItem->categoryid == (string)$id) {
          $okToDelete = FALSE;
          break;
        }
      }
      if ($okToDelete) $root->removeChild($xCat);
      else $deleteFailures[] = $id;
    } else {
      $xCat->setAttribute('label', $cat['label']);
      $xCat->setAttribute('status', $cat['status']);
    }
  }
}
Appendix B. CMS Administration Tool
Page 33
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

if (isset($_POST['newcat'])) {
  foreach ($_POST['newcat'] as $cat) {
    if (isset($cat['label']) and trim($cat['label']) != '') {
      $xCat = $root->appendChild($doc->createElement('category'));
      $xCat->setAttribute('id', ++$maxId);
      $xCat->setAttribute('label', $cat['label']);
      $xCat->setAttribute('status', $cat['status']);
    }
  }
}
unlink($fileDir . 'categories.xml');
$doc->save($fileDir . 'categories.xml');
if (count($deleteFailures) > 0) {
  $qs = '?';
  foreach ($deleteFailures as $id) {
    $qs .= "id[]=$id&";
  }
  header('location: categorytool_deletefail.php' . $qs);
} else {
  header('location: categorytool.php');
}
?>
categorytool_deletefail.php
<?php
include 'security.inc.php';
include_once '../common.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Delete(s) Failed</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Delete(s) Failed</h1>
<p>Failed to delete the following categories, which still contain
  content. Remove or reassign their content items first, then try
  again.</p>
<ul>
<?php
$cats = simplexml_load_file($fileDir . 'categories.xml');
foreach ($id as $catId) {
  echo '<li>' . $cats->xpath("category[@id='$catId']/@label") .
      '</li>';
}
?>
</ul>
<p>Any other requested changes have been made.</p>
<p><a href="categorytool.php">Back to Category Listing</a></p>
</body>
</html>
Appendix B. CMS Administration Tool
Page 34
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

B.5. Updating the Admin Index Page
661753
With all our tools in place, we can now update our administrative index page to link to them:
1334027
index.php
<?php
include 'security.inc.php';
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type"
    content="text/html; charset=iso-8859-1" />
<title>Welcome to the Admin Index Page</title>
<link rel="stylesheet" type="text/css" href="../xmlcms.css" />
</head>
<body>
<h1>Welcome to the Admin Index Page</h1>
<p>
  <a href="webcopytool.php">Manage Web Copy</a><br />
  <a href="articletool.php">Manage Articles</a><br />
  <a href="newstool.php">Manage News Items</a><br />
  <a href="admintool.php">Manage Administrators</a><br />
  <a href="categorytool.php">Manage Categories</a><br />
  <a href="authortool.php">Manage Authors</a>
</p>
<p><a href="logout.php">Log out</a></p>
</body>
</html>
B.6. Summary
661753
Folks, we're done with the administrative tool for our CMS. It can now handle a variety of content
types, categories, administrators, and authors. You've finished the project! 
1334027
Appendix B. CMS Administration Tool
Page 35
Return to Table of Contents
Appendix B. CMS Administration Tool
No Nonsense XML Web Development With PHP By Thomas Myer ISBN: 097524020X Publisher: SitePoint
Prepared for Matias Eli Sie, Safari ID: el.matia@gmail.com
Print Publication Date: 7/1/2005
User number: 672274 Copyright 2006, Safari Books Online, LLC.
Reproduction, transmission and/or redistribution in any form by any means without the prior written permission from the publisher is prohibited.

