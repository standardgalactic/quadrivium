__del__
©2019 MathByte Academy

A Class Finalizer
The garbage collector destroys objects that are no longer referenced anywhere
à hook into that lifecycle event
à use the __del__ method
The __del__ method will get called right before the object is destroyed by the GC
à so the GC determines when this method is called
à __del__ is sometimes called the class finalizer
(sometimes called the destructor, but not entirely accurate, since 
GC destroys the object)
©2019 MathByte Academy

When does __del__ get called?
à that's the basic issue with the __del__ method
à we do not control when it will get called!
called only when all references to the object are gone
à have to be extremely careful with our code
à easy to inadvertently create additional references, or circular references
©2019 MathByte Academy

Additional Issues
If __del__ contains references to global variables, or other objects
à those objects may be gone by the time __del__ is called
If an exception occurs in the __del__ method
à exception is not raised – it is silenced
à exception description is sent to stderr
à main program will not be aware something went wrong during finalization
à prefer using context managers to clean up resources
à personally I do not use __del__
©2019 MathByte Academy

Coding
©2019 MathByte Academy

