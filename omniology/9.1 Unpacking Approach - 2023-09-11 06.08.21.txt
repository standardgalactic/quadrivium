Unpacking Approach

Unpacking Methods
DEBUGGER + BREAKPOINTS
RUN AND DUMP
STATIC UNPACKING
EMULATION
SELF-EXTRACTING PATCH
2

Unpacking Methods
manual form of unpacking
general idea how it is packed is enough
breakpoints on functions that
allocate memory
transport data
execute
DEBUGGER + BREAKPOINTS
3

Unpacking Methods
semi-automated, easy
needs no knowledge how file is packed
tools: mal_unpack, MegaDumper
RUN AND DUMP
4

Unpacking Methods
usually by writing a script
need to understand every detail
easily applicable to many samples
tools: binary refinery, CyberChef, any scripting language
STATIC UNPACKING
5

Unpacking Methods
emulate until malware is done unpacking, then dump
problem: anti-emulation is common
examples: box-js, JSDetox, dumpulator, speakeasy
EMULATION
6

Unpacking Methods
patch that dumps malware after unpacking
often easiest method for scripts: replace execute with write 
instructions
SELF-EXTRACTING PATCH
7

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
8

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
9

Step 1 Identification
YES
YES
NO
NO
IDENTIFY PACKER
SUCCESS?
VIRTUALIZER?
STOP HERE
this is too difficult for 
now
CONTINUE NEXT 
STEP
VMProtect
UNPACK
try same as in 
WinUpack lab
search static 
unpacking tool or 
unpacking tutorials 
for this packer
Use Detect-it-Easy
Google strings you find 
during triage
10

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
11

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
12

Step 2 Skim for Obvious Encryption / Encoding
LARGE INTEGER ARRAYS
often in managed assemblies and scripts
CHECK SPECIFIC AREAS
resources: PE, .NET
overlay
end-of-file
last section
strings
LARGE BASE64 STRINGS
decode them
XORED AREAS
XOR with one byte visible to naked eye in hex 
editor
use XOR bruteforcing
13

Step 2 Skim for Obvious Encryption / Encoding
NO
YES
OBVIOUS/EASY 
ENCRYPTION?
CONTINUE NEXT 
STEP
STATIC UNPACKING
binary refinery
Python script
CyberChef
...
14

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
15

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
mal_unpack.exe /timeout 3000 /exe sample.exe
16

Unpacking Approach
no success
no success
no success
1. IDENTIFICATION
2. SKIM FOR OBVIOUS 
ENCRYPTION
3. RUN AND DUMP
4. DEBUGGER AND 
BREAKPOINTS
4.1 API MONITORING
4.2 BREAKPOINT 
KEY FUNCTIONS
4.3 DUMP AND FIX
17

Debugger and Breakpoints
API MONITORING
BREAKPOINT KEY 
FUNCTIONS
DUMP AND FIX
log API calls, you can use:
* monitoring
* tracing
* emulation
* sandbox reports
purpose: get an idea how the stub 
unpacks
break on functions that 
probably:
* transport target file data
* execute target code
* allocate memory
* create processes
* decrypt target file data
fixes may include:
* PE unmapping
* set original entry point
* import fixing
* fixing erased header
18

Unpacking Methods
DEBUGGER + BREAKPOINTS
RUN AND DUMP
STATIC UNPACKING
EMULATION
SELF-EXTRACTING PATCH
19

We talked about these
DEBUGGER + BREAKPOINTS
RUN AND DUMP
STATIC UNPACKING
EMULATION
SELF-EXTRACTING PATCH
20

What about these?
DEBUGGER + BREAKPOINTS
RUN AND DUMP
STATIC UNPACKING
EMULATION
SELF-EXTRACTING PATCH
21

What about these?
EMULATION
can use instead of debugger 
and breakpoints
personal preference
SELF-EXTRACTING PATCH
script unpacking
22

