Lecture Notes in Electrical Engineering 430
Kurosh Madani
Dimitri Peaucelle
Oleg Gusikhin
 Editors 
Informatics 
in Control, 
Automation 
and Robotics
13th International Conference, ICINCO 
2016 Lisbon, Portugal, 29–31 July, 2016

Lecture Notes in Electrical Engineering
Volume 430
Board of Series editors
Leopoldo Angrisani, Napoli, Italy
Marco Arteaga, Coyoacán, México
Samarjit Chakraborty, München, Germany
Jiming Chen, Hangzhou, P.R. China
Tan Kay Chen, Singapore, Singapore
Rüdiger Dillmann, Karlsruhe, Germany
Haibin Duan, Beijing, China
Gianluigi Ferrari, Parma, Italy
Manuel Ferre, Madrid, Spain
Sandra Hirche, München, Germany
Faryar Jabbari, Irvine, USA
Janusz Kacprzyk, Warsaw, Poland
Alaa Khamis, New Cairo City, Egypt
Torsten Kroeger, Stanford, USA
Tan Cher Ming, Singapore, Singapore
Wolfgang Minker, Ulm, Germany
Pradeep Misra, Dayton, USA
Sebastian Möller, Berlin, Germany
Subhas Mukhopadyay, Palmerston, New Zealand
Cun-Zheng Ning, Tempe, USA
Toyoaki Nishida, Sakyo-ku, Japan
Bijaya Ketan Panigrahi, New Delhi, India
Federica Pascucci, Roma, Italy
Tariq Samad, Minneapolis, USA
Gan Woon Seng, Nanyang Avenue, Singapore
Germano Veiga, Porto, Portugal
Haitao Wu, Beijing, China
Junjie James Zhang, Charlotte, USA

About this Series
“Lecture Notes in Electrical Engineering (LNEE)” is a book series which reports
the latest research and developments in Electrical Engineering, namely:
• Communication, Networks, and Information Theory
• Computer Engineering
• Signal, Image, Speech and Information Processing
• Circuits and Systems
• Bioengineering
LNEE publishes authored monographs and contributed volumes which present
cutting edge research information as well as new perspectives on classical ﬁelds,
while maintaining Springer’s high standards of academic excellence. Also
considered for publication are lecture materials, proceedings, and other related
materials of exceptionally high quality and interest. The subject matter should be
original and timely, reporting the latest research and developments in all areas of
electrical engineering.
The audience for the books in LNEE consists of advanced level students,
researchers, and industry professionals working at the forefront of their ﬁelds. Much
like Springer’s other Lecture Notes series, LNEE will be distributed through
Springer’s print and electronic publishing channels.
More information about this series at http://www.springer.com/series/7818

Kurosh Madani
• Dimitri Peaucelle
Oleg Gusikhin
Editors
Informatics in Control,
Automation and Robotics
13th International Conference, ICINCO 2016
Lisbon, Portugal, 29–31 July, 2016
123

Editors
Kurosh Madani
Images, Signals, and Intelligent Systems
Laboratory
University Paris-EST Créteil (UPEC)
Créteil
France
Dimitri Peaucelle
MAC Team
LAAS-CNRS
Toulouse Cedex 4
France
Oleg Gusikhin
Ford Research and Advanced Engineering
Dearborn, MI
USA
ISSN 1876-1100
ISSN 1876-1119
(electronic)
Lecture Notes in Electrical Engineering
ISBN 978-3-319-55010-7
ISBN 978-3-319-55011-4
(eBook)
https://doi.org/10.1007/978-3-319-55011-4
Library of Congress Control Number: 2017946632
© Springer International Publishing AG 2018
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part
of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations,
recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and transmission
or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar
methodology now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this
publication does not imply, even in the absence of a speciﬁc statement, that such names are exempt from
the relevant protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this
book are believed to be true and accurate at the date of publication. Neither the publisher nor the
authors or the editors give a warranty, express or implied, with respect to the material contained herein or
for any errors or omissions that may have been made. The publisher remains neutral with regard to
jurisdictional claims in published maps and institutional afﬁliations.
Printed on acid-free paper
This Springer imprint is published by Springer Nature
The registered company is Springer International Publishing AG
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland

Preface
The present book includes extended and revised versions of a set of selected papers
from the 13th International Conference on Informatics in Control, Automation and
Robotics (ICINCO 2016), held in Lisbon, Portugal, from 29 to 31 July 2016.
ICINCO 2016 received 183 paper submissions from 47 countries, of which 11%
were selected and invited to submit an extended and revised version for this book.
The papers were selected by the event chairs based on several criteria including
rankings and comments provided by the program committee members, the session
chairs’ assessments and the program chairs’ outlook of maintaining a globally
coherent and balanced assortment of included papers.
The purpose of the 13th International Conference on Informatics in Control,
Automation and Robotics (ICINCO), is to bring together academicians and prac-
titioners interested in the application of informatics to Control, Automation and
Robotics. Following the spirit of the conference, the editors aspire to reﬂect on the
most up-to-date developments in aforementioned ﬁelds. We believe this book will
serve as a source of the latest knowledge and inspiration for researchers, engineers
and Ph.D. students.
The contents of the book cover the topics of the four parallel tracks we had
elaborated for ICINCO 2016 program, namely:
– Intelligent Control Systems and Optimization;
– Robotics and Automation;
– Signal Processing, Sensors, Systems Modelling and Control;
– Industrial Informatics.
Moreover, as editors, we have paid a special attention to covering not only
theoretical aspects of these ﬁelds but also applicative and implementation accom-
plishments. Based on the high quality of the ICINCO contributions, the result is, we
believe, a factual and well-balanced prospect of current achievements in the ﬁeld.
Finally, one might pinpoint our particular attention to emphasizing the trend for
Control of Intelligent Robots that provides a special ﬂavour to the contributions
proposed in this book.
v

We would like to thank all the authors for their contributions, and to address
special acknowledgements to the reviewers who were decisive in pledge of the
quality of this publication.
Créteil, France
Kurosh Madani
Toulouse Cedex 4, France
Dimitri Peaucelle
Dearborn, USA
Oleg Gusikhin
February 2017
vi
Preface

Organizing Committee
Conference Chair
Kurosh Madani
University of Paris-EST Créteil (UPEC), France
Program Co-Chairs
Oleg Gusikhin
Ford Motor Company, USA
Dimitri Peaucelle
LAAS-CNRS, France
Program Committee
Samir Aberkane
Centre de Recherche en Automatique de Nancy (CRAN), France
El-Houssaine
Aghezzaf
Ghent University, Faculty of Engineering and Architecture,
Belgium
Eugenio Aguirre
University of Granada, Spain
Erdinç Altug
Istanbul Technical University, Turkey
Faïz Ben Amar
Université Pierre et Marie Curie, Institut Systèmes Intelligents et de
Robotique, France
Nicolas Andreff
Femto-ST Institute, France
Rui Araujo
University of Coimbra, Portugal
Laurent Arcese,
CReSTIC-URCA, France
Rafael Aroca
Universidade Federal de São Carlos, Brazil
T. Asokan
Indian Institute of Technology Madras, India
Mohamed Amine
Atoui
University of Oulu, Finland
Alfonso Baños
Universidad de Murcia, Spain
Ruth Bars
Budapest University of Technology and Economics, Hungary
Roman Barták
Charles University in Prague, Czech Republic
Johannes Baumgartl
University of Bayreuth, Germany
Carsten Behn
Ilmenau University of Technology, Germany
Lyes Benyoucef
Aix-Marseille University, France
Karsten Berns
University of Kaiserslautern, Germany
Mauro Birattari
Université Libre de Bruxelles, Belgium
Jean-louis Boimond
ISTIA —LARIS, France
Magnus Boman
The Royal Institute of Technology, Sweden
(continued)
vii

(continued)
Richard D. Braatz
Massachusetts Institute of Technology, USA
Glen Bright
University of KwaZulu-Natal, South Africa
Kevin Burn
University of Sunderland, UK
Fernando Caballero
University of Seville, Spain
Kenneth Camilleri
University of Malta, Malta
Angelo Cangelosi
University of Plymouth, UK
Giuseppe Carbone
Shefﬁeld Hallam University, UK
Joao Carvalho
Federal University of Uberlandia, Brazil
Alessandro Casavola
University of Calabria, Italy
Marco Castellani
University of Birmingham, UK
Jaime Cerda
Universidad Michoacana de San Nicolas de Hidalgo, Mexico
Albert Cheng
University of Houston, USA
Xu Cheng
Emerson Electric, USA
Tsung-Che Chiang
National Taiwan Normal University, Taiwan
Paul Christodoulides
Cyprus University of Technology, Cyprus
Chengbin Chu
Ecole Centrale Paris, France
Feng Chu
University of Evry Val d’Essonne, France
Daisuke Chugo
Kwansei Gakuin University, Japan
Carlos Coello
CINVESTAV-IPN, Mexico
James M. Conrad
University of North Carolina at Charlotte, USA
José Boaventura
Cunha
University of Trás-os-montes and Alto Douro, Portugal
Márcio José da Cunha
Federal University of Uberlândia, Brazil
James Dabney
University of Houston, Clear Lake, USA
Prithviraj
(Raj) Dasgupta
University of Nebraska, USA
Kamil Dedecius
Institute of Information Theory and Automation, Academy of
Sciences of the CZ, Czech Republic
Kyriakos
Deliparaschos
Cyprus University of Technology, Cyprus
Mingcong Deng
Tokyo University of Agriculture and Technology, Japan
Guilherme DeSouza
University of Missouri, USA
Daniel Dolz
Universitat Jaume I, Spain
Wenjie Dong
University of Texas Pan American, USA
Xingye Dong
Beijing Jiaotong University, China
Vasile Dragan,
Romanian Academy, Romania
Venky Dubey
Bournemouth University, UK
Ioan Dumitrache
University “POLITEHNICA” of Bucharest, Romania
Marc Ebner
Ernst-Moritz-Arndt-Universität Greifswald, Germany
Mohammed El-Abd
American University of Kuwait, Kuwait
Ali Eydgahi
Eastern Michigan University, USA
Simon G. Fabri
University of Malta, Malta
(continued)
viii
Organizing Committee

(continued)
Christophe Farges
Bordeaux University, IMS—UMR 5218 CNRS, France
Luca Ferrarini
Politecnico di Milano, Italy
Antoine Ferreira
INSA Centre Val de Loire, France
Paolo Fiorini
University of Verona, Italy
Juan J. Flores
University of Michoacan, Mexico
Mauro Franceschelli
Università di Cagliari, Italy
Mattia Frasca
Università degli Studi di Catania, Italy
Georg Frey
Saarland University, Germany
Emanuele Frontoni
Marche Polytechnic University, Italy
Toyomi Fujita
Tohoku Institute of Technology, Japan
Mauro Gaggero
National Research Council of Italy, Italy
Cipriano Galindo
University of Malaga, Spain
Maria I. Garcia-Planas
Universitat Politecnica de Catalunya, Spain
Ryszard Gessing
Silesian University of Technology, Poland
Paolo Di
Giamberardino
Sapienza University of Rome, Italy
Wojciech Giernacki
Poznan University of Technology/Institute of Control and
Information Engineering, Poland
Paulo Gil
Universidade Nova de Lisboa, Portugal
Giuseppina Gini
Politecnico di Milano, Italy
Nils Goerke
University of Bonn, Germany
Luis Gomes
Universidade Nova de Lisboa, Portugal
Arthur Gómez
Universidade do Vale do Rio dos Sinos, Brazil
Amr Goneid
The American University in Cairo, Egypt
Bhaskaran
Gopalakrishnan
West Virginia University, USA
Lucian Teodor
Grigorie
University of Craiova, Romania
Lech Grzesiak
Warsaw University of Technology, Poland
Kevin Guelton
University of Reims Champagne-Ardenne, France
Oleg Gusikhin
Ford Motor Company, USA
Jörg Hähner
Universität Augsburg, Germany
Wolfgang Halang
Fernuniversitaet, Germany
Jennifer Harding
Loughborough University, UK
Dominik Henrich
University of Bayreuth, Germany
Diana Hintea
Coventry University, UK
Yasuhisa Hirata
Tohoku University, Japan
Mathieu Hobon
CEATech Lorraine, France
Wladyslaw Homenda
Warsaw University of Technology, Poland
Jonathan How
Massachusetts Institute of Technology, USA
Chaofang Hu
Tianjin University, China
Mircea Ivanescu
University of Craiova, Romania
(continued)
Organizing Committee
ix

(continued)
Dmitry Ivanov
Berlin School of Economics and Law, Germany
Ivan Ivanov
Soﬁa University “St. Kl. Ohridski”, Bulgaria
Sarangapani
Jagannathan
Missouri University of Science and Technology, USA
Thira Jearsiripongkul
Thammasat University, Thailand
Michael Jenkin
York University, Canada
Myong K. Jeong
Rutgers University, USA
Wootae Jeong
Korea Railroad Research Institute, Korea, Republic of
Imed Kacem
Université de Lorraine, France
Vikram Kapila
NYU Polytechnic School of Engineering, USA
Mansour Karkoub
Texas A&M Universiy, Qatar
Tohru Kawabe
University of Tsukuba, Japan
Rafael Kelly
CICESE Reasearch Center, Mexico
Graham Kendall
University of Nottingham Malaysia Campus, Malaysia
Waree
Kongprawechnon
Thammasat University, Thailand
Israel Koren
University of Massachusetts, USA
Krzysztof Kozlowski
Poznan University of Technology, Poland
Ondrej Krejcar
University of Hradec Kralove, Czech Republic
Masao Kubo
National Defense Academy of Japan, Japan
Kolja Kühnlenz
Coburg University of Applied Sciences and Arts, Germany
Sébastien Lahaye
Istia—LARIS, France
Jimmy Lauber
University of Valenciennes, France
Dimitri Lefebvre
Greah Université Le Havre, France
Kauko Leiviskä
University of Oulu, Finland
Roland Lenain
Irstea, France
Guoshi Li
University of North Carolina at Chapel Hill, USA
Tsai-Yen Li
National Chengchi University, Taiwan
Ke Liao
Kansas University Medical Center, USA
Gordon Lightbody
University College Cork, Ireland
Huei-Yung Lin
National Chung Cheng University, Taiwan
Guoping Liu
University of South Wales, UK
Antonio Mendes Lopes
University of Porto, Portugal
Luís Seabra Lopes
University of Aveiro, Portugal
Sérgio F. Lopes
University of Minho, Portugal
Gonzalo
Lopez-Nicolas
Universidad de Zaragoza, Spain
Ping Lou
Wuhan University of Technology, China
Martin Lukac
Nazarbayev University, Kazakhstan
Danilo Maccio
National Research Council of Italy, Italy
José Tenreiro Machado
Institute of Engineering, Polytechnic of Porto, Portugal
Douglas Macharet
Universidade Federal De Minas Gerais, Brazil
(continued)
x
Organizing Committee

(continued)
Magdi S. Mahmoud
King Fahd University of Petroleum and Minerals, Saudi Arabia
Frederic Maire
Queensland University of Technology, Australia
Om Malik
University of Calgary, Canada
Fabio Marchese
Università degli Studi di Milano-Bicocca, Italy
Konrad Markowski
Warsaw University of Technology, Poland
Philippe Martinet
Ecole Centrale de Nantes, France
Leonardo Mattos
Istituto Italiano di Tecnologia, Italy
Alicja Mazur
Wroclaw University of Technology, Poland
Ross McAree
University of Queensland, Australia
Seán McLoone
Queen’s Unviersity Belfast, Ireland
Luis Merino
Pablo de Olavide University, Spain
Nadhir Messai
CReSTIC, France
Konstantinos Michail
Cyprus University of Technology, Cyprus
Sara Moein
Mount Sinai School of Medicine, USA
Cesar de Prada Moraga
Universidad de Valladolid, Spain
Vladimir Mostyn
VSB—Technical University of Ostrava, Czech Republic
Vassilis C. Moulianitis
University of the Aegean, Greece
George Moustris
National Technical University of Athens, Greece
Angelica
Muñoz-Meléndez
INAOE, Mexico
Riccardo Muradore
University of Verona, Italy
Saeid Nahavandi
Deakin University, Australia
Hugo Vieira Neto
Federal University of Technology—Paraná, Brazil
Shimon Y. Nof
Purdue University, USA
José Valente de
Oliveira
Universidade do Algarve, Portugal
Fernando Osorio
USP—Universidade de Sao Paulo, Brazil
Stamatis Papadakis
University of Crete, Greece
Gordon Parker
Michigan Technological University, USA
Igor Paromtchik
INRIA, France
Ignacio Parra-Alonso
University of Alcalá, Spain
Pushparaj Mani Pathak
Indian Institute of Technology, India
Krishna R. Pattipati
University of Connecticut, USA
Pierre Payeur
University of Ottawa, Canada
Dimitri Peaucelle
LAAS-CNRS, France
D.T. Pham
The University of Birmingham, UK
Aurelio Piazzi
Università degli Studi di Parma, Italy
Angel P. Del Pobil
Universitat Jaume I, Spain
Nirvana Popescu
University Politehnica of Bucharest, Romania
Radu-Emil Precup
Politehnica University of Timisoara, Romania
Renxi Qiu
University of Bedfordshire, UK
(continued)
Organizing Committee
xi

(continued)
José Ragot
Centre de Recherche en Automatique de Nancy, France
Oscar Reinoso
Miguel Hernandez University, Spain
Robert Richardson
University of Leeds, UK
Mihailo Ristic
Imperial College London, UK
Patrick Rives
INRIA—Sophia-Antipolis, France
Juha Röning
University of Oulu, Finland
António Ruano
University of Algarve, Portugal
Yassine Ruichek
Université de Technologie Belfort-Montbeliard, France
Mozafar Saadat
University of Birmingham, UK
Jocelyn Sabatier
IMS Laboratory—Bordeaux University, France
Christophe Sabourin
IUT Sénart, University Paris-Est Creteil (UPEC), France
Priti Srinivas Sajja
Sardar Patel University, India
Antonio Sala
Universidad Politecnica de Valencia, Spain
Abdel-Badeeh
Mohamed Salem
Ain Shams University, Egypt
Nilanjan Sarkar
Vanderbilt University, USA
Jurek Sasiadek
Carleton University, Canada
Hideyuki Sawada
Kagawa University, Japan
Klaus Schilling
University Würzburg, Germany
Daniel Schmidt
SEW Eurodrive GmbH, Germany
Gerhard Schweitzer
ETH Zurich, Switzerland
Gerald Seet
Nanyang Technological University, Singapore
João Sequeira
Instituto Superior Técnico/Institute for Systems and Robotics,
Portugal
Roman Sergienko
Institute of Telecommunications Engineering, Ulm University,
Germany
Jinhua She
Tokyo University of Technology, Japan
Vasile Sima
National Institute for Research & Development in Informatics,
Romania
Dan Simon
Cleveland State University, USA
Daniel Simon
INRIA, France
Olivier Simonin
CITI Laboratory INSA de Lyon, France
Andrzej Sluzek
Khalifa University, United Arab Emirates
Jorge Solis
Karlstad University/Waseda University, Sweden
Stefano Squartini
Università Politecnica delle Marche, Italy
Burkhard Stadlmann
Upper Austria University of Applied Sciences, Wels, Austria
A. Frank Van Der
Stappen
Utrecht University, Netherlands
J.D. Stigter
Wageningen University, Netherlands
Olaf Stursberg
University of Kassel, Germany
Raúl Suárez
Universitat Politecnica de Catalunya (UPC), Spain
Jian Sun
Beijing Institute of Technology, China
(continued)
xii
Organizing Committee

(continued)
Sophie Tarbouriech
LAAS-CNRS, France
Tomasz Tarczewski
Nicolaus Copernicus University, Poland
Daniel Thalmann
Nanyang Technological University, Singapore
Simon Thompson
AIST, Japan
Dan Tiba
Institute of Mathematics Academia Romana, Romania
Sven Tomforde
Intelligent Embedded Systems Group, University of Kassel,
Germany
Wa-Muzemba
Tshibangu
Morgan State University, USA
Avgoustos Tsinakos
University of Kavala Institute of Technology/Athabasca University
of Canada, Greece
Ali Emre Turgut
Middle East Technical University, Turkey
Bartlomiej Ufnalski
Warsaw University of Technology, Poland
Angel Valera
Universidad Politécnica de Valencia, Spain
Cesar Vargas-Rosales
Tecnologico de Monterrey, Campus Monterrey, Mexico
Ramiro Velazquez
Universidad Panamericana, Mexico
Vladan Velisavljevic
University of Bedfordshire, UK
Federico Vicentini
National Research Council of Italy (CNR), Italy
Arnoud Visser
Universiteit van Amsterdam, Netherlands
Damir Vrancic
Jožef Stefan Institute, Slovenia
Bernardo Wagner
Leibniz Universität Hannover, Germany
Mattias Wahde
Chalmers University of Technology, Sweden
Feng Wan
University of Macau, Macau
Jingyu Wang
Northwestern Polytechnical University (NPU), China
Shengwei Wang
The Hong Kong Polytechnic University Kowloon, Hong Kong
Zhenzhen Wang
Chinese Academy of Sciences, China
James Whidborne
Cranﬁeld University, UK
Warren White
Kansas State University, USA
Wenjun Xu
Wuhan University of Technology, China
Xun W. Xu
University of Auckland, New Zealand
Qinmin Yang
Zhejiang University, China
Hui Yu
University of Portsmouth, UK
Ludek Zalud
Brno University of Technology, Czech Republic
Marek Zaremba
Université du Québec (UQO), Canada
Massimiliano Zecca
Loughborough University, UK
Jie Zhang
University of Newcastle, UK
Yuming Zhang
University of Kentucky, USA
Ray Y. Zhong
The University of Auckland, New Zealand
Alois Zoitl
fortiss GmbH, Germany
Argyrios Zolotas
University of Lincoln, UK
(continued)
Organizing Committee
xiii

(continued)
Additional Reviewers
Yousif Elhadi Elsideeg Alhadi
University of Gezira, Sudan
Miguel Aranda
Institut Pascal, France
Giacinto Barresi
Istituto Italiano di Tecnologia, Italy
Jesus Bermudez-Cameo
Universidad de Zaragoza (University of Zaragoza), Spain
Driss Boutat
INSA Centre Val de Loire, France
Nizar Chatti
LARIS EA7315, ISTIA, France
Alexandra Kim
Nazarbayev University, Kazakhstan
Georgiy Krylov
Nazarbayev University, Kazakhstan
Daniele Liciotti
Università Politecnica delle Marche, Italy
Gulnaz Ongalbayeva
Nazarbayev University, Kazakhstan
Nima Shaﬁi
IEETA, University of Aveiro, Portugal
Mark Sterling
Nazarbayev University, Kazakhstan
Tao Yi
Vallution LLC, USA
Invited Speakers
Richard D. Braatz
Massachusetts Institute of Technology, USA
Fumiya Iida
University of Cambridge, UK
Roland Siegwart
ETH Zürich, Switzerland
Houria Siguerdidjane
CentraleSupelec, France
Sethu Vijayakumar
The University of Edinburgh, UK
xiv
Organizing Committee

Contents
Part I
Intelligent Control Systems and Optimization
A Method for the Energy Optimization of a Multisource Elevator . . . .
3
Chloé Desdouits, Mazen Alamir, Rodolphe Giroudeau, and Claude Le Pape
Visual Servoing Path-Planning with Elliptical Projections . . . . . . . . . . .
30
Tiantian Shen and Graziano Chesi
Fractional Models of Lithium-Ion Batteries with Application to State
of Charge and Ageing Estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
55
Jocelyn Sabatier, Franck Guillemard, Loic Lavigne, Agnieszka Noury,
Mathieu Merveillaut, and Junior Mbala Francico
Co-operation of Biology Related Algorithms for Solving Opinion
Mining Problems by Using Different Term Weighting Schemes . . . . . . .
73
Shakhnaz Akhmedova, Eugene Semenkin, and Vladimir Stanovov
Bifurcation Analysis and Active Control of Surge and Rotating Stall in
Axial Flow Compressors via Passivity . . . . . . . . . . . . . . . . . . . . . . . . . .
91
Gholam-Reza Sari, Ouassima Akhrif, and Lahcen Saydy
Task Controller for Performing Remote Centre of Motion . . . . . . . . . .
117
Bassem Dahroug, Brahim Tamadazte, and Nicolas Andreff
Toward an Automatic Fongbe Speech Recognition System:
Hierarchical Mixtures of Algorithms for Phoneme Recognition . . . . . . .
133
Fréjus A.A. Laleye, Eugène C. Ezin, and Cina Motamed
Part II
Robotics and Automation
Spatial Fusion of Different Imaging Technologies Using a Virtual
Multimodal Camera . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
153
Sebastian P. Kleinschmidt and Bernardo Wagner
xv

Fusing LiDAR and Radar Data to Perform SLAM in Harsh
Environments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
175
Paul Fritsche, Simon Kueppers, Gunnar Briese, and Bernardo Wagner
On Redundancy Resolution in Minimum-Time Trajectory Planning of
Robotic Manipulators Along Predeﬁned End-Effector Paths . . . . . . . . .
190
Alexander Reiter, Hubert Gattringer, and Andreas Müller
Parameter Identiﬁcation and Model-Based Control of Redundantly
Actuated, Non-holonomic, Omnidirectional Vehicles . . . . . . . . . . . . . . .
207
Christoph Stöger, Andreas Müller, and Hubert Gattringer
Passivity-Based Control Design and Experiments for a Rolling-
Balancing System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
230
Alejandro Donaire, Martin Crespo, Fabio Ruggiero, Vincenzo Lippiello,
and Bruno Siciliano
Time-Optimal Paths for a Robotic Batting Task . . . . . . . . . . . . . . . . . .
256
Diana Serra, Fabio Ruggiero, Aykut C. Satici, Vincenzo Lippiello,
and Bruno Siciliano
An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit
Interception with Impact Angle Considered . . . . . . . . . . . . . . . . . . . . . .
277
Cheng Zhang, Ke Zhang, and Jingyu Wang
Kinematic and Dynamic Approaches in Gait Optimization for
Humanoid Robot Locomotion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
293
Ramil Khusainov, Alexandr Klimchik, and Evgeni Magid
Part III
Signal Processing, Sensors, Systems Modelling and Control
Identiﬁcation and Control of the Waelz Process Using Infrared Image
Processing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
323
Jörg Matthes, Patrick Waibel, Hubert B. Keller, and Lutz Gröll
Modeling and Calibrating Triangulation Lidars for Indoor
Applications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
342
Anas Alhashimi, Giovanni Pierobon, Damiano Varagnolo,
and Thomas Gustafsson
A Comparison of Discretization Methods for Parameter Estimation of
Nonlinear Mechanical Systems Using Extended Kalman Filter:
Symplectic versus Classical Approaches . . . . . . . . . . . . . . . . . . . . . . . . .
367
Daniel Beckmann, Matthias Dagen, and Tobias Ortmaier
Dynamics Calibration and Real-Time State Estimation of a
Redundant Flexible Joint Robot Based on Encoders
and Gyroscopes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
385
Dennis Schüthe, Felix Wenk, and Udo Frese
xvi
Contents

Mathematical Model for the Output Signal’s Energy of an Ideal DAC
in the Presence of Clock Jitter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
410
Paola Loreti, Sima Sarv Ahrabi, and Pierluigi Vellucci
Stochastic Integration Filter with Improved State Estimate Mean-
Square Error Computation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
423
Jindřich Havlík, Ondřej Straka, Jindřich Duník, and Jiří Ajgl
Author Index. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
440
Contents
xvii

Intelligent Control Systems
and Optimization

A Method for the Energy Optimization
of a Multisource Elevator
Chlo´e Desdouits1,2,3(B), Mazen Alamir1, Rodolphe Giroudeau2, and Claude Le
Pape3
1 GIPSA-lab, UMR 5216 CNRS - Universit´e de Grenoble-Alpes, 11 rue des
Math´ematiques, 38402 Saint Martin d’H`eres, France
chloe@desdouits.fr, Mazen.Alamir@grenoble-inp.fr
2 LIRMM, UMR 5506 - Universit´e Montpellier 2, CC477 - 161 rue Ada, 34095
Montpellier Cedex 5, France
Rodolphe.Giroudeau@lirmm.fr
3 Schneider Electric Industries SAS, 38 TEC - Technopole, 37 quai Paul-Louis
Merlin, 38050 Grenoble Cedex 09, France
claude.lepape@schneider-electric.com
Abstract. In this chapter we investigate the problem of energy opti-
mization of a Multisource Elevator. We propose a large framework includ-
ing a strategic optimizer and a local controller. The roles and inﬂuences
of these systems depend on the time horizon ﬁxed. The ﬁrst one proposes
the strategy for the next hour, where the second tries to re-adapt the long
term strategy to the real-time constraints. We prove the adaptability of
this approach to real-time conditions (e.g.: disruptions of the forecasted
elevator travels). In such a context, a linear programming formulation
has been developed, coupled with a low level rule-based controller. We
propose three main objective functions for the sourcing problem, that
can be studied together or one after each other. Then, we tackle a spe-
cialized sourcing problem: the Multisource Elevator problem in which
the three objectives have to be achieved simultaneously. We show in the
experiments, based on real data sets, that a compromise between reduc-
ing consumption peaks and minimizing the energy bill has to be reached.
Using storage units to reduce consumption peaks does not induce addi-
tional costs, due to the beneﬁt obtained from the electricity peak/oﬀ-
peak tariﬀ.
Keywords: Energy optimization · Control of dynamic systems · Linear
programming · Rule-based algorithms
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_1

4
C. Desdouits et al.
1
Introduction
Reducing energy consumption is a major issue nowadays; not only in order to
restrain the ecological impact on the planet, but also to both respect build-
ing norms and minimize industrial and residential activities’ energy bill. Thus,
everywhere in the world, a new energy market emerges and is called “the demand-
response market”. The keen interest of smaller customers in the demand-response
market induce the emergence of new actors: the aggregators. Aggregators incite
small customers to shift their consumption using incentive mechanisms. Then,
they aggregate multiple customers oﬀers into a bigger block of energy that they
can sell on the demand-response market.
In that context, customers are interested in how to reduce their power con-
sumption peaks. The optimization algorithms needed have to take into account
a variable electricity tariﬀ, but also the other customer’s constraints and objec-
tives. In practice, new optimization problems, or even more complex versions of
previous problems, have to be studied.
We study a use-case where renewable energy sources and storage units are
used to supply an elevator, creating an “energy hub”. Indeed, the newest gen-
erations of elevators are equipped with energy storage to ensure a minimum
autonomy in case of power failure. This is crucial for safety (e.g. to evacuate
people with reduced mobility) and energy storage may also oﬀer ﬂexibility in
power management.
In this context, the energy hub has to decide which energy source to be used
at which moment. We call this problem “the sourcing problem” and formalize
it in Sect. 2. In Sect. 3, the reader is given an glimpse of what can be done for
dealing with energy sourcing issues of those multisource elevators.
Section 4 presents the two coupled controllers proposed to solve the sourcing
problem. First by describing their interactions. Then by explaining the linear
formulation used to compute a sourcing strategy. And ﬁnally by giving some
details on how our low-level rule-based controller takes strategy into account.
Afterwards, experiments are conducted in Sect. 5 to highlight advantages and
drawbacks of this method, as well as parameters inﬂuencing its performances. As
the proposed control method can be used to participate in the demand-response
market, an experiment of interactions with an aggregator is also conducted.
2
Formal Description of the Sourcing Problem
We call “prosumers”, entities that consume and/or produce energy. An energy
hub allows each prosumer to consume power produced by all other prosumers
at the same time.
Deﬁnition 1. Let P be a set of np prosumers, all connected to the same energy
hub h.

A Method for the Energy Optimization of a Multisource Elevator
5
We diﬀerentiate three kinds of prosumers: the set S of storage units, the set
P of controllable prosumers and the set E of the others. Thus, these sets form a
partition of the whole set of prosumers.
Deﬁnition 2. Let S
=
{πS
1, . . . , πS
nS} be the set of storage units, P
=
{πP
1, . . . , πP
nP} be the set of controllable prosumers, and E = {πE
1 , . . . , πE
nE} be
the set of the other prosumers. Then, P = S ∪P ∪E.
Each prosumer can consume and/or produce power, depending on its physical
capabilities.
Deﬁnition 3. For a given prosumer πi ∈P, let pmin
i
≤0 (resp. pmax
i
≥0) be
the minimum (resp. maximum) instantaneous power of πi. Then, at a given time
t, let pmin
i
≤pi[t] ≤pmax
i
be the instantaneous power produced by πi if pi[t] is
positive, or consumed by πi if pi[t] is negative.1
A system composed of an energy hub and its prosumers can be represented
by a star oriented graph.
Deﬁnition 4. Let G = (P ∪h, A) be a star oriented graph rooted in h where
P ∪h are the nodes of the graph and A are the weighted arcs. There is an arc
(πi, h) if pmax
i
> 0 and the weight of the arc is pmax
i
. In the same way, there is
an arc (h, πi) if pmin
i
< 0 and the weight of the arc is pmin
i
.
We suppose that time can be sampled in a regular, uniform way.
Deﬁnition 5. Let τ ∈R be the sampling period (expressed in hours), and
H ∈N be the number of periods considered. Then time-steps are expressed in
the following way: tl = tl−1 + τ = l × τ, ∀l ∈{0, . . . , H}.
Finally, each controllable prosumer has a set of energy cost functions that give
the price associated to an energy consumption or production of this prosumer.
There is a cost function per time bucket; a time bucket being a time period
during which the tariﬀdoes not vary. For example, a peak/oﬀ-peak tariﬀ(0h
- 5h - 19h - 0h) can be represented by three linear cost functions of the power
used.
Deﬁnition 6. ∀πi ∈P, let B be the set of time buckets and {∀b ∈B, costb
πi :
R × [pmin, pmax
i
] →R} be the energy cost functions associated to πi. We will
note b(t) the time bucket containing time t. For example, costb(t)
πi (τ, p) is the
cost incurred when the power is p over a period τ beginning at time t, during
the time bucket b. costb(t)
πi (τ, p) is positive if p is negative and negative if p is
positive.
1 Power is expressed in Watts and energy in Watt hours.

6
C. Desdouits et al.
Then, we can deﬁne the sourcing problem:
Instance: a set of prosumers P = P ∪S ∪E,
a graph G = (P ∪h, A),
a period τ ∈R,
a time horizon H ∈N,
a set of cost functions: 
πi∈P
{∀b ∈B, costb
πi}
Solution: S, a np × H matrix of pi[t]
Quest. 1: given pmax
hub ∈R the allowed quantity of power to be taken or
given outside of the energy hub, does a matrix S exist such
that:
∀ℓ∈{0, . . . , H −1},
−pmax
hub ≤
np

i=1
pi[tℓ] ≤pmax
hub
(1)
Can the energy hub be autonomous?
Quest. 2: given {∀πi ∈P, pmax
Pi
∈R} the allowed power peak of each con-
trollable prosumer πi, does a matrix S exist such that:
∀πi ∈P,
max
ℓ∈{0,...,H−1} pi[tℓ] ≤pmax
Pi
(2)
Can power peaks purchased from controllable prosumers be
upper bounded?
Quest. 3: given costmax
hub ∈R the allowed energy bill, does a matrix S exist
such that:
H−1

ℓ=0

πi∈P
costb(tℓ)
πi
(pi[tℓ] × τ) ≤costmax
hub
(3)
Can the electricity bill be upper bounded?
The multisource elevator is an application of the sourcing problem where
P = {π1, π2, π3, π4, π5, π6} and the partition of P is the following: E = {π1, π5},
P = {π4, π6}, S = {π2, π3}. An illustration of the partition of prosumers P is
given on Fig. 1.
As the multisource elevator problem was suggested by a real-world appli-
cation, the three objectives have to be achieved in that case. The energy hub
autonomy becomes a constraint and the question becomes: given data pmax
P
∈R
and costmax
hub
∈R, can power peaks from and to the grid and the energy bill
remain bounded, respectively by pmax
P
and by costmax
hub ?

A Method for the Energy Optimization of a Multisource Elevator
7
Energy
hub
Elevator
π1
Solar
panels
π5
Grid
π4
Battery
π2
Supercapacitor
π3
Dissipation
resistor
π6
pmin
1
pmax
1
pmax
4
pmax
5
pmin
2
pmax
2
pmin
3
pmax
3
pmin
6
Fig. 1. Prosumers of the elevator sourcing problem. Previously published in [1]
3
Related Work
Energy optimization systems have been widely studied in the literature, espe-
cially in the past few years. In the following state of the art, we present research
works dedicated to energy sourcing of multisource elevators. A summary is given
in Table 1.
A very comprehensive work on energy systems for elevators is proposed by [2].
They have designed a physical multisource system to power an elevator. In the
paper, rules are used to charge or discharge batteries depending on whether the
electrical current is below or above a given reference. This control method may
be reduced to a simple “if, then, else” structure achieved by physical components.
Likewise, [3] presents three rule-based methods to control a battery cou-
pled with an elevator. This method takes into account peak/oﬀ-peak tariﬀs and
reduces energy consumption cost by storing energy recovered from the elevator.
Table 1. References of algorithms for energy sourcing of a multisource elevator
On-line control
Oﬀ-line planning
Design
Refs. [2,3]
Ref. [4]
Ref. [5]

8
C. Desdouits et al.
These methods allow controlling very reactively the system, but cannot take
into account optimally external considerations such as the electricity tariﬀor
battery state of health. Therefore, these control methods may not be eﬃcient
regarding economical objectives.
On the other hand, [4] have proposed a General Energy and Statistical
Description (GESD) of the possible missions of an elevator and an energy man-
ager based on dynamic programming. Their energy manager is inspired by stock
management theory and minimizes the sum of energy (i) absorbed from the
grid, (ii) dissipated in the braking resistor and (iii) not provided to the elevator.
The optimization is done oﬀ-line. This method deduces economically optimal
solutions from consumption probabilities. But elevator usage is unpredictable
by nature and there is no given alternative when the strategy is not applicable.
Finally, in [5], authors summarize diﬀerent ways to optimize choices of ele-
vator physical components (motor, drive, etc.). An appropriate sizing of these
components is a way to optimize energy consumption but it should be coupled
with a good control algorithm of multiple sources of energy.
From these observations, we have decided to propose a two-layer optimiza-
tion that can achieve reactive control of low-level equipment as well as compute
economically optimal sourcing strategy. A ﬁrst description of a linear program
to solve the multisource elevator problem was published in [6]. This linear pro-
gram was improved and completed by a description of the coupled rule-based
algorithm in [1]. Experiments in a deterministic context were also conducted
to evaluate potential savings. The impact of uncertainties on the performances
of this method was studied in [7]. Finally as part of the European Arrowhead
project, we described the interactions between our control method and partner
components in [8]. This book chapter is a synthesis of the deterministic part of
our work.
4
Coupled Optimizer and Controller to Handle Diﬀerent
Time Scales
In this section, we give a centralized rule-based algorithm for the energy hub
controller, but we also could overlay another controller already implemented.
We call these controllers “Local Controllers”, and we abbreviate LC. They have
to be embedded and highly reactive, thus they cannot compute the best sourc-
ing strategy on a long time-frame. Therefore, we decided to compute a sourcing
strategy with a “Strategic Optimizer” (abbreviated SO), and to send next strate-
gic instructions to LC regularly.
Deﬁnition 7. Let us call the plan computed by SO a strategy, and the set-point
computed by LC a tactic.
Hereafter, we start by presenting data that feed components and interactions
between them.

A Method for the Energy Optimization of a Multisource Elevator
9
4.1
Data and Interactions
In this sub-section, we ﬁrst describe how we draw samples of elevator usage. Then
we explain how we compute forecasts used by SO. Finally, we show components
interactions and their dynamic.
Elevator Usage Description. The building considered is a business tower with
nine ﬂoors and the elevator has the following characteristics: standby consump-
tion: 50 W, cabin mass: 750 kg, counterweight mass: 850 kg, nominal velocity:
1.0 ms−1.
We simulate user calls to the elevator with a statistical model. In order to
be close to real application, this model distinguishes multiple types of travels:
morning and afternoon arrivals and departures, lunch breaks, inter-ﬂoor travels,
arrivals and departures of external visitors. Besides, statistical laws are identi-
ﬁed based on historical data. For each travel type and relevant pair of ﬂoors,
these laws provide information on the number of people moving during the day
(depending on day-of-week, week-of-year, etc.), the distribution of their weights,
the distribution of the times of the people movements during the day, and the
probability that two similar movements are grouped (e.g., several people going to
lunch together). A random generator is used on this basis to generate scenarios.
Moreover, we have implemented a tactic to answer user calls to the elevator.
That tactic considers calls in chronological order to choose the destination of the
elevator. But, it stops the elevator along the way if another call destination is
on this way. That seems to be the tactic implemented in the biggest part of the
elevators.
On the other hand, we have an energy model of the elevator that allows us
to compute energy consumption regarding the chosen travel and the weight of
passengers. The data used in this model include the weight of the cabin and
counterweight, the length and weight of the cable, the elevator’s base power and
nominal speed, the altitude of the departure and arrival ﬂoors, and eﬃciency for
both energy-consuming and energy-producing travels.
Forecasts. In this paragraph, we will deﬁne and precise the notion of forecast.
SO is fed by a forecast f, that is a |P ∪E| × H matrix, with H the number of
periods considered by SO. For prosumers in P, the tariﬀis forecasted, while for
prosumers in E, the produced and consumed quantity is forecasted. In this paper,
forecasts are considered exact and deterministic (issues concerning robustness to
forecasts uncertainties will be considered in a forthcoming paper).
In our use case, a forecast is composed of: (i) the predicted amount of energy
consumed/produced by the elevator, (ii) the predicted solar production, (iii) the
predicted grid energy tariﬀ. Although the dissipation resistor is considered as a
controllable prosumer, dissipation is assumed to have no cost.
The ideal solar production prediction uses predicted irradiance data of a typ-
ical sunny day. We consider that two square meters of solar panels are installed
on the roof top of the building, and are dedicated to the elevator. These solar
panels are supposed well oriented towards the sun and having a yield of 15%.

10
C. Desdouits et al.
Runs every hour
Runs every second
Strategic
Optimizer
(Subsection 4.2)
Local
Controller
(Subsection 4.3)
Multisource
system
strategy for the
next hour
Power set-point
for all pro-
sumers
Current state
and ﬂexibilities
Current
state
forecast f (15 mn
timestep, 24 h horizon)
Optional
interaction
Mandatory
interaction
Fig. 2. Software components interactions
The electricity tariﬀconsidered in the experiments is a typical peak/oﬀ-peak
French tariﬀ: 0.00015/0.00010 e/Wh.
Regarding the elevator, we use data described in Sect. 4.1 to simulate sev-
eral daily scenarios and compute the average energy production or consumption
for each SO period. An alternative could be to use standard machine learning
techniques to directly forecast energy production or consumption for each SO
period.
Interactions and Dynamic. LC has to be highly reactive. For the multisource
elevator application, we estimate a relevant time-step is one second, iterated
every seconds. On the other hand, SO has to consider suﬃciently long time-steps
to get relevant forecasts, and a suﬃciently long horizon to take into account
energy price variations. Thus, a ﬁfteen minutes period with a 24 h horizon is
relevant for the multisource elevator, and the problem is resolved every hours.
The dynamic of interactions is illustrated on Fig. 2.
In a real product, LC would probably be embedded into the energy hub,
whereas SO could be proposed as a web service. We can see on the ﬁgure that
LC and SO are separated components that communicate only through a strategic
instruction. An instruction is composed of a target time, and an array of np cells:
one per prosumer connected to the energy hub. For storage units, an instruction
is expressed as a target state of charge. For controllable producers, an instruction
is expressed as mean power. For the other prosumers (that are supposed non
controllable), instructions are empty. An instruction can be sent over a network
or shared by components running into the same computer. That allows ﬂexible
business models.
Moreover, SO needs to know the current state of charge of every storage units
and the current availability of controllable producers.
Finally, LC applies the computed tactic that is a vector of np power values,
on the multisource system. LC is fed with solar radiation, electricity tariﬀand
users’ calls to the elevator.

A Method for the Energy Optimization of a Multisource Elevator
11
4.2
Strategic Optimizer
The aim of SO problem is to determine the best sources of energy to be used
factoring in the storage capacities, during a long time frame. The goal is to
minimize costs related to energy purchasing and battery usage within the time
frame, while ensuring the hub is autonomous.
A Generic Formulation Depending on Prosumers Kind. Let us suppose
that the optimization period is a constant τ, and that the number of periods in
the optimization horizon is denoted H.
Deﬁnition 8. Let ei[t] = pi[t]×τ be the energy amount produced by prosumer
πi over a period τ.
Thereafter decision and state variables are deﬁned, depending on prosumers
kind:
• Storage units: ∀πi ∈S,
• ∀l ∈{0, . . . , H −1}, 0 ≤ech
i [tl] ≤−pmin
i
×τ (resp. 0 ≤edis
i
[tl] ≤pmax
i
×τ)
the amount of energy charged into (resp. discharged from) the prosumer
πi (that is a storage unit) between time tl and time tl+1 = tl + τ. Thus
ei[tl] = edis
i
[tl] −ech
i [tl].
• ∀l ∈{0, . . . , H}, 0 ≤xi[tl] ≤1 the state of charge of the prosumer πi at
time tl.
• Controllable producers: ∀πi ∈P,
• ∀l ∈{0, . . . , H −1}, 0 ≤epurch
i
[tl] ≤pmax
i
× τ (resp. 0 ≤esold
i
[tl] ≤
−pmin
i
× τ) the amount of energy purchased from (resp. sold to) the
prosumer πi (that is a controllable producer) between time tl and time
tl+1 = tl + τ. Thus ei[tl] = epurch
i
[tl] −esold
i
[tl].
• Non-controllable prosumers: ∀πi ∈E,
• ∀l ∈{0, . . . , H −1}, pmin
i
× τ ≤ei[tl] = fi[tl] ≤pmax
i
× τ the forecasted
production (if positive) or consumption (if negative) of the prosumer πi
between time tl and time tl+1 = tl +τ. These ei are not decision variables
but constant data given by an external forecast.
Remark 1. Although storage units charge and discharge could be modeled as a
single variable ei, two variables (ech
i
and edis
i
) are used in our model, because
there are two diﬀerent yields that impact the charge and the discharge. However,
we do not want to charge and discharge the same storage unit at the same time,
consequently both variables are minimized in the objective function.
Lemma 1. In all optimal solutions, ∀l ∈{0, . . . , H −1}, ∀πi ∈S, ech
i [tl] =
0 ∨edis
i
[tl] = 0.
Proof. Assume ˆe, a optimal solution, such that there exists 0 ≤l ≤H −1 such
that both ˆech
i [tl] and ˆedis
i
[tl] are strictly positive.
Let e
′ be another solution in which all decision variables have the same value
except that:
ech′
i
[tl] = ˆech
i [tl] −min(ˆech
i [tl], ˆedis
i
[tl])

12
C. Desdouits et al.
edis′
i
[tl] = ˆedis
i
[tl] −min(ˆech
i [tl], ˆedis
i
[tl])
Since ech′
i
[tl] and edis′
i
[tl] are both penalized in the objective function, then
solution e
′ admits a lower cost than solution ˆe that was optimal by assumption.
The following constraints must be taken into account:
• A minimum energy amount must be kept into storage units.
∀πi ∈S, ∀l ∈{0, . . . , H},
xi[tl] + ρminSOC
i
[tl] ≥cminSOC
i
(4)
For this constraint, a new slack variable is deﬁned: 0 ≤ρminSOC
i
[tl] ≤
cminSOC
i
is the percentage of storage unit state of charge under a given mini-
mum value cminSOC
i
at time tl. Therefore, cminSOC
i
is the ratio of the storage
unit state of charge that the energy hub needs to ensure security in case of
grid failure. The ρminSOC
i
variables must be null except in the case of grid
failure (cminSOC
i
is a lower bound), so they are penalized in the objective
function (cf. Eq. (9)).
• The energy-related equation of the energy hub must be satisﬁed: the sum of
consumed and produced energy between time tl and time tl+1 = tl + τ must
be equal.
∀l ∈{0, . . . , H −1},

i∈P
(ei[tl]) = 0
(5)
• The state of charge of storage units must be updated at each time-step with
the energy charged and discharged.
∀πi ∈S, ∀l ∈{0, . . . H −1},
xi[tl+1] = xi[tl] + ccy
i
cce
i
× ech
i [tl]
−
1
cdy
i
× cce
i
× edis
i
[tl]
(6)
where cce
i
is the energy capacity of the storage unit and ccy
i
(resp. cdy
i ) is the
charging (resp. discharging) yield of the storage unit. Notice that yields are
normalized between 0 and 1.
• Let a new slack variable ∀l ∈{0, . . . H −1}, 0 ≤ρstab
i
[tl] ≤pmax
i
−pmin
i
be
the diﬀerence between the amount of energy purchased from a controllable
producer πi at time tl and the amount of energy purchased from the same
controllable producer at time tl−1. This value has to be penalized in the
objective function. The associated set of constraints are:
∀πi ∈P,∀l ∈{0, . . . H −1},
ei[tl−1] −ei[tl] −ρstab
i
[tl] ≤0
(7)
ei[tl] −ei[tl−1] −ρstab
i
[tl] ≤0
(8)

A Method for the Energy Optimization of a Multisource Elevator
13
Please note that, for the ﬁrst period, ei[tl−1] is set to the instruction computed
for prosumer πi during SO last run. If the current execution is the ﬁrst one,
ei[tl−1] is set to zero.
• Depending on the exact use case, cyclical constraints (or additional cost fac-
tors), such as requiring the battery to be full at the beginning of the morning
can be added.
Given these the overall constraints, our economical objective function is given
by Eq. (9).
Minimize
H−1

l=0


πi∈P

−csold
i
[tl] × esold
i
[tl] + cpurch
i
[tl] × epurch
i
[tl]
+ min
 min
πj∈P(cpurch
j
[tl])
10
,
min
πj∈S(caging
j
)
2

× ρstab
i
[tl]

+

πi∈S

caging
i
2
× ech
i [tl] + caging
i
2
× edis
i
[tl]
+ 2 × max
πj∈P(cpurch
j
[tl]) × ρminSOC
i
[tl]

(9)
where cpurch
i
[tl] is the electricity buying price at time tl and csold
i
[tl] is the elec-
tricity selling price at time tl thus −csold
i
[tl] × esold
i
[tl] + cpurch
i
[tl] × epurch
i
[tl] is
the electricity bill for the lth period and prosumer πi. These constants are given
by the cost function costπi, which is considered linear in the current formulation.
It is necessary to take into account the aging of storage unit. So in the such
context caging
i
is a coeﬃcient that allows to have a linear approximation of the
impact of the storage unit usage on its aging: caging
i
=
cinve
i
ccye
i
×cce
i , the constant cinve
i
represents the investment cost of the storage unit; cce
i
is the energy capacity of
the storage unit and ccye
i
is the mean number of cycles that the storage unit can
bear.
Remark 2. As the battery aging cost is just a way to discourage the controller
from using the battery, a ﬁrst order approximation was chosen. In reality, “small”
charges and discharges further impact storage units but we ignore this eﬀect
here. This cost could be tuned depending on the results of long-term simulations
(typically several years) of the controller and its impact on the battery lifetime.
On the other hand, auto-discharge of storage units is neglected for the moment.
Moreover, a minimum energy amount must be kept into storage units in
order to ensure autonomy in case of grid failure (a safety value). We cannot
ensure that with a hard constraint because we need to allow consuming this

14
C. Desdouits et al.
reserve during a grid failure. Thus, we use the soft constraint (4) with a slack
variable ρminSOC
i
that is minimized in the objective function. We could have
considered that, in case of grid failure, a diﬀerent operating mode that allows
violating this constraint would be set. But a soft constraint, with a soundly
chosen penalization, does the same job in a simpler way.
Finally, in order to reduce the chattering of the energy purchased from con-
trollable producers, a slack variable called ρstab
i
must be minimized.
Note that all variables are weighted with a fraction of the energy tariﬀin order
to ensure the right setting of the objective (reserve for grid failure, electricity
cost, . . . ).
The overall linear formulation is then:
Minimize (9)
Subject to (4) −(8)
The Multisource Elevator Formulation. In the following we will precise
initial condition values for all elements involved in the Sourcing Problem. In the
elevator context, we choose to set cminSOC
2
to 0.2 and cminSOC
3
to 1.0 because the
super-capacitor has to be fully charged in case of grid failure and a 20% charged
battery can supply the super-capacitor for several travels. Moreover, the battery
is a lead-acid battery with an energy capacity of 3000 Wh, an investment cost
of 300 e and a maximum power of 2880 W. The super-capacitor has an energy
capacity of 120 Wh, an investment cost of 2400 e and a maximum power of
57600 W. Thus, storage units aging costs are the following ones:
caging
2
=
cinve
2
ccye
2
× cce
2
=
300
20000 × 3000 = 0.000005
caging
3
=
cinve
3
ccye
3
× cce
3
=
2400
20000 × 120 = 0.001
Table 2 shows the linear program applied to the multisource elevator case, in
vector form.2 Variables in bold are column vectors of dimension H, and matrices.
Let A, B, A
′ and B
′ be H × H-matrices:
A = diag

−ccy
2
cce
2 = −0.9
3000

B = diag

1
cdy
2 ×cce
2 =
1
0.9×3000

A
′ = diag

−ccy
3
cce
3 = −0.9
120

B
′ = diag

1
cdy
3 ×cce
3 =
1
0.9×120

Moreover, the symbol ⊙stands for the Hadamard product (element-wise prod-
uct).
2 Previousy published in [1].

A Method for the Energy Optimization of a Multisource Elevator
15
Table 2. A linear formulation for the multisource elevator sourcing problem
Minimize

−cpurch
4
⊙epurch
4
+5 × 10−6 × e2 + 0.001 × e3
+2 × cpurch
4
⊙ρminSOC
2
+ 2 × cpurch
4
⊙ρminSOC
3
+ min

cpurch
4
10
, 0.0005

⊙ρstab
4

6	
i=1
ei = 0
esold−
4
−esold
4
−ρstab
4
≤0
esold
4
−esold−
4
−ρstab
4
≤0
x+
2 −x2[t1] + Aech
2 + Bedis
2
= 0
−x+
2 −ρminSOC
2
≤−0.2
x+
3 −x3[t1] + A
′ech
3 + B
′edis
3
= 0
−x+
3 −ρminSOC
3
≤−1.0
0 ≤
ech
i
≤−pmin
i
× τ ,∀πi ∈S
0 ≤
ρstab
4
0 ≤
edis
i
≤pmax
i
× τ
,∀πi ∈S
0 ≤
epurch
4
≤50000 × τ
0 ≤
xi
≤1
,∀πi ∈S
0 ≤
e6
0 ≤ρminSOC
i
≤0.2
,∀πi ∈S

16
C. Desdouits et al.
As we choose 15 min periods (τ = 0.25) and a 24 h horizon, H = 24 ÷ 0.25 =
96. That gives us a linear program with 96 periods. In practice, we have 12
vectors of H decision variables each and 10 constraints per time step. Thus
every hour we solve a linear problem with 1152 variables and 960 constraints.
Building and solving the problem with GLPK [9] takes about one second.
4.3
Local Controller
Our LC is a centralized rule-based controller that computes, in real-time and
for a single time-step, a sourcing tactic. The tactic depends on: (1) the relative
priority associated to every prosumer, (2) current ﬂexibility of every prosumer,
(3) the current strategic instruction if any, or a default instruction otherwise. As
SO is based on energy forecasts, some strategic instructions may be infeasible at
some points, and LC has to ﬁnd the best trade-oﬀbetween current instruction
and current situation.
Principles of the Rule-Based Algorithm. Each prosumer connected to the
energy hub is associated with a priority number. A priority list is deﬁned as
a permutation of the prosumers set P: (πl1, . . . , πlnp ), ordered by decreasing
priority numbers. A priority number represents the importance of satisfying a
prosumer relatively to the others and is linked to the quality of service. The
prosumer that has the biggest priority number will get its preferred ﬂexibility,
unless this is impossible. On the other hand, the prosumer that has the smallest
priority number will be used to produce or consume the power needed by the
other prosumers as much as possible.
Moreover each prosumer has a list of ﬂexibilities, that can be discrete power
values:
(p1
i , p2
i , . . . , pm
i )
or power intervals:
([p1,min
i
, p1,max
i
], . . . , [pm,min
i
, pm,max
i
])
Flexibilities are ordered by decreasing preference order of the prosumer. For
example, if an elevator π1 is stopped and empty, it can move to a higher ﬂoor
(ﬂexibility p1
1), or move to a lower ﬂoor (ﬂexibility p2
1), or stay still and consume
standby power (ﬂexibility p3
1). The preferred ﬂexibility p1
1 of the elevator is to
go in the direction that corresponds to the ﬁrst user call and stop on the way
if other calls have been made on intermediate ﬂoors and for the same direction.
On the other hand, some prosumers have no discrete ﬂexibilities but a set of
possible intervals. For example, a battery can consume or produce a power value
bounded by its minimum and maximum power bound.
The third, and last, parameter that inﬂuences LC is the strategic instruction.
If there is no strategic instruction available, LC decides itself of a default instruc-
tion. That allows LC to work alone if its link with SO is broken. Setting the
default instruction inﬂuences performances of the tactic.

A Method for the Energy Optimization of a Multisource Elevator
17
Given these three inputs, LC builds a decision tree for the current time step.
The decision tree has a level per prosumer, ordered by decreasing priority order.
In a given level, every node has as many children as the number of ﬂexibilities of
the prosumer corresponding to the next level. A tactic is obtained by a depth-
ﬁrst search in the tree, and composed of a power value per prosumer. Such a
tactic is also called a “control vector” in this subsection.
During the depth ﬁrst search, if the node holds a single power value, this
value is chosen. Otherwise, a default value is chosen in the given interval. If
a strategic instruction is available for the current prosumer, the value in the
interval, nearest to the instruction value is chosen; otherwise, the value in the
interval, nearest to zero is chosen. When a leaf is reached, the algorithm checks
if the sum of the chosen power values is equal to zero. If not, the diﬀerence is
compensated, as much as possible, by each node through backtracking in the
tree. When the tree root is reached, if the sum of the power values chosen is
null, the solution is kept. If not, the depth ﬁrst search continues. That way, the
ﬁrst found solution is the best one regarding the prosumers priority order, the
preferences of each prosumer and the strategic instruction.
Parameters Values and Objectives. This rule-based algorithm can be tuned
depending on the objective, through parameter values described above. We can-
not inﬂuence prosumers ﬂexibilities but we can choose priority order and default
instruction. There are three versions of LC:
MinPeaks. The goal of the ﬁrst controller considered is to minimize power
peaks purchased from controllable prosumers.
Opportunistic. The second controller considered is supposed to minimize dis-
sipated energy and thus the energy bill.
Secure. The third controller considered minimizes storage units usage while
guaranteeing that storage units will be ready in case of grid failure.
Priority order and default instruction associated with each of these three
controllers are shown in Table 3. For that purpose, storage units are classiﬁed in
three categories:
– those under their minimum state of charge S1 = {πi ∈S | xi < cminSOC
i
},
– those usable to absorb power peaks S2 = {πi ∈S\S1 | pmax
i
≥max
πj∈E(−pmin
j
)},
– the other ones S3 = S \ (S1 ∪S2).
For every LC, the non-controllable prosumers are those with the biggest pri-
ority number, meaning that they should not be used to balance the energy hub,
if it can be avoided. Note that in case they are multiple non-controllable pro-
sumers on the same energy hub, they cannot always be given relative priority
numbers. For example, if diﬀerent actors (two production plants, two diﬀerent
buildings, etc.) need a big amount of energy at the same time, and their is not
enough energy, a compromise has to be found. In that case, a more sophisticated
controller (probably ﬁnding Pareto-optimal solutions) should be used. However,
for rather small energy hubs like the multisource elevator, non-controllable pro-
sumers can easily be prioritized. The elevator has a bigger priority number than

18
C. Desdouits et al.
Table 3. Three LCs and their parameters. Previously published in [1]
a Priority orders
MinPeaks
Opportunistic
Secure
P
3
3
1
S1
4
4
3
S2
2
2
4
S3
1
1
2
E
5
5
5
b Default instructions
MinPeaks
Opportunistic
Secure
P
standby cons
0 W
0 W
S1
cminSOC
i
cminSOC
i
cminSOC
i
S2
100%
xi
100%
S3
100%
xi
xi
E
Let us note that the prosumer with the biggest priority number is the one that has the
highest priority
the solar panels. The elevator would also have a bigger priority number than an
air-conditioner in the same building for example.
Root
Elevator
p1 = −500W
Solar panels
p5 = 20W
Resistor
−inf W ≤p6 ≤0W
Grid
0W ≤p4 ≤6000W
Supercapacitor
−100W ≤p3 ≤100W
Battery
−50W ≤p2 ≤50W
Elevator
p1 = 200W
Solar panels
p5 = 20W
Resistor
−inf W ≤p6 ≤0W
Grid
0W ≤p4 ≤6000W
Supercapacitor
−100W ≤p3 ≤100W
Battery
−50W ≤p2 ≤50W
Elevator
p1 = −50W
Solar panels
p5 = 20W
Resistor
−inf W ≤p6 ≤0W
Grid
0W ≤p4 ≤6000W
Supercapacitor
−100W ≤p3 ≤100W
Battery
−50W ≤p2 ≤50W
Prosumers by
decreasing
priority order
Flexibilities by decreasing preference order
E
P
S2
S3
Fig. 3. An example of the MinPeaks Local Controller decision tree

A Method for the Energy Optimization of a Multisource Elevator
19
The MinPeaks LC attributes the second biggest priority numbers to storage
units under their minimum state of charge, in order to re-ﬁll them if needed.
Then come the controllable prosumers, in order to reduce power peaks from
and to them. Finally come storage units used to absorb power peaks, and lastly
other storage units. That way, the battery absorbs all power demands if possible,
and the supercapacitor can stay fully charged for cases it is needed. Default
instructions are used only when no strategic instruction is available. In this case,
controllable prosumers are supposed to supply the amount of power consumed
by non-controllable prosumers when they are in standby mode. The storage units
are preferred to be fully charged.
The Opportunistic LC uses the same priority orders as the MinPeaks LC,
only the default instructions change. In order to be opportunistic, no power is
taken from the grid by default, and all the storage units shall stay at their current
state of charge. Note that the Opportunistic LC’s behavior is comparable to a
classical rule-based controller.
Finally, the Secure LC gives to controllable prosumers the lowest priority in
order to avoid using storage units if possible. The default instruction of storage
units usable to absorb power peaks is to be fully charged. The other storage
units are supposed to stay at their initial state of charge.
Example of Decision Tree. This rule-based algorithm is based on a decision
tree. We can see in Fig. 3, a decision tree built by LC. Tree nodes represent ﬂex-
ibilities and contain either a possible produced power value, or a power interval
with consumption and production bounds. Tree levels are associated with pro-
sumers, in decreasing priority order. In order to ﬁnd the best tactic, the controller
searches in the tree, depth ﬁrst and builds a control vector p composed of a power
value per node encountered.
5
Results
In order to evaluate the proposed solution, we need to compare SO plans with
the results obtained by LC following the instructions. Then, we have to compare
the diﬀerent tactics between them, without strategic instructions.
For the simulation purpose, we developed in Matlab [10] a simulation engine
with dynamic time steps depending on events occurring. That allows to speed
up the simulation, in order to handle large instances in a reasonable time
5.1
A Typical Strategy
Results obtained by SO, during a typical day, are illustrated on Fig. 4. The
ﬁrst sub-ﬁgure is an energy layers plot where positive power represents power
that is injected in the energy hub (produced by prosumers) and negative power
represents power that is taken from the energy hub (consumed by prosumers).
The second sub-ﬁgure presents the storage units state of charge and the grid
tariﬀ. We can see that, when the electricity is cheap (before 09:00), the energy
is purchased from the grid (in red), and stored in the battery (in green). After

20
C. Desdouits et al.
09:00, no more energy is purchased and the energy needed is discharged from
the battery.
In this situation, SO tries to take advantage of the oﬀ-peak tariﬀto charge
the battery and avoid to purchase energy from the grid during the peak tariﬀ.
Clearly, the battery is charged just enough to achieve this goal (about 40% at
09:00).
5.2
Strategic Controller Error Induced by Aggregating Periods
In this sub-section, the point is to characterize the error made by SO when
computing the objective value (i.e. energy bill and aging costs). This error is
evaluated (on a typical day) by comparing results of the MinPeak LC following
the strategy with results computed by SO before the beginning of the day.
The plan computed before the day by SO is the same as on Fig. 4 and the
corresponding MinPeaks tactic is illustrated on Fig. 5. The ﬁrst sub-ﬁgure rep-
resents the power consumption and production of the diﬀerent prosumers. We
can see that the consumption peaks of the elevator (in blue; that reaches 8 kW)
are absorbed by storage units (in green). While in every cases, the maximum
power peak purchased from the grid is under 400 W, that is far less than 8 kW.
Fig. 4. A typical strategic plan. Previousy published in [1]

A Method for the Energy Optimization of a Multisource Elevator
21
The second sub-ﬁgure shows the evolution of the storage units state of charge
and the grid tariﬀ. In brown, we can see the strategic instructions that are quite
well followed by the battery.
Now, let us3 compare numeric results of LC and SO. As the accuracy of
SO depends on (1) charging and discharging yields of storage units, and (2)
forecasts accuracy. We decided to consider ideal yields (100% and realistic yields
(90%). On the other hand, forecasts are exact as described in Sect. 4.1. Table 4
summarizes the results obtained by SO and by the MinPeaks LC following the
instructions, in three cases.
When storage units yields are ideal, the energy bill and the amount of energy
purchased obtained by the strategy are very close to ones obtained by the tactic.
Both values are less than 3% higher with tactic than with strategy. Though
all parameters are ideal, this small error is due to the energy aggregation in 15
mn periods into forecasts. Indeed, when summing positive and negative energy
values over a period, only the diﬀerence is kept. Then, SO take into account only
this small amount of energy to purchase (or discharge). In reality, if production
occurs before consumption, produced energy is stored and discharged later to
supply consumption. But, if consumption occurs before production, the energy
has to be found elsewhere before the production could be stored. When yields
are ideal and storage units not empty, that has no impact on the energy bill.
But when storage units are empty the energy has to be purchased and that
explains the small diﬀerences observed above. On the other hand, the aging cost
computed by LC is far bigger than those estimated by the SO because the latter
did not take into account power peaks. Indeed, to achieve instructions at the end
of a strategic period, LC cannot always charge storage units with average power
Fig. 5. MinPeaks LC following strategy. Previousy published in [1]
3 Previousy published in [1].

22
C. Desdouits et al.
Table 4. Strategical and tactical results with diﬀerent yields. Previousy published in
[1]
View
point
Yield (%) Forecast
Energy
bill
Aging
costs
Energy purchased
SO
100
exact
0.12 e
0.01 e
1164.3 Wh
LC
100
exact
0.12 e
0.13 e
1187.8 Wh
ratio LC
SO
100
exact
1.03
13.59
1.02
SO
90
exact
0.14 e
0.01 e
1382.2 Wh
LC
90
exact
0.17 e
0.33 e
1640.5 Wh
ratio LC
SO
90
exact
1.26
31.59
1.19
SO
90
exact +
yield
0.17 e
0.01 e
1705.7 Wh
LC
90
exact +
yield
0.17 e
0.10 e
1654.5 Wh
ratio LC
SO
90
exact +
yield
0.97
8.67
0.97
computed from the instruction. It has to absorb consumption and production
peaks, and thus to charge and discharge storage units many times within the
period. The amount of energy charged into and discharged from storage units is
thus far bigger (about 14 times in this case) than computed by SO.
Now let us look at the impact of realistic yields on these results. We can see
that, in the three metrics, results are worse than before. The reason is that non
ideal yields drive non null energy losses. Thus, the above mentioned discrepancy
due to aggregation is emphasized in presence of non ideal yield.
In order to make SO take into account almost all energy has to tran-
sit through storage units, we integrate the impact of storage units yield into
consumption forecasts of prosumers in E. The strategy becomes pessimistic
because not all energy goes through storage units. But the yield taken into
account in forecasts becomes a tunable parameter for the pessimistic predic-
tion. Moreover, re-computing a strategy every hour prevents LC to deviate too
far away from the target, even if the strategy is not perfectly accurate. In this
experiment, we choose a yield value of 0.9, that is the real storage units yield.
We can see that the error of SO is really reduced compared to the previous
experiment. That also improves LC results, especially on aging costs.
The last thing that has to be explained in the table is: why do tactic
aging costs are higher when yields are ideal than when yields are realistic and
when forecasts take yields into account? Aging costs are higher in the former
because, the battery is emptied at the beginning of some periods and the super-
capacitor has to supply the elevator before being reﬁlled by produced energy. On
the other hand, when the strategy is pessimistic, this situation occurs less fre-

A Method for the Energy Optimization of a Multisource Elevator
23
quently. Since supercapacitors are much more expensive than regular batteries,
aging costs in the ﬁrst experiment are higher than in the third one.
5.3
Local Controller Parametrizations
Let us compare results of the diﬀerent LCs, averaged over ﬁfty elevator usage
samples drawn. The initial state of charge of storage units are: 20% for the
battery and 100% for the supercapacitor. The score of a solution is evaluated
according to: the maximum power peak purchased from (or sold to) the grid,
the number of those power peaks over a given power limit and the daily cost
cdaily Key Performance Indicator (KPI). This includes: cebill be the energy bill of
the whole day and caging be the aging cost associated to the storage units usage
that has been done during the day. In addition, depending on the controller, ﬁnal
states of charge can be diﬀerent. Then we note csoc the cost associated to reﬁll
(or to empty) storage units to match their initial state of charge. We consider
that corresponding energy is purchased (or sold) at the cheapest tariﬀ.
Deﬁnition 9. The daily cost is deﬁned as cdaily = cebill + caging + csoc.
First of all, let us look at Fig. 6a, b and c that allow us to compare the three
diﬀerent tactics, without any strategy.
Figure 6a corresponds to the MinPeaks LC and we can see that there are a
few power peaks from the grid at the beginning of the day. This is because not
enough energy was produced before consumption, so energy had to be purchased
to supply the elevator. Moreover at the end of the day, the battery is not at its
minimum state of charge and the supercapacitor is full.
Figure 6b corresponds to the Opportunistic LC. With this tactic, all available
energy is used as soon as possible, thus the supercapacitor supplies the elevator
at the beginning of the day and is emptied. Then, there are many power peaks
purchased from the grid in the morning and in the middle of the afternoon.
Figure 6c corresponds to the Secure LC. This tactic purchases from the grid
all energy needed to preserve storage units from aging. The supercapacitor, that
allows the elevator to travel during grid failures, is maintained full. The bat-
tery, that has to supply supercapacitor during grid failures, is maintained at its
minimum state of charge.
Finally, the MinPeaks Controller following strategy is illustrated on Fig. 5
and commented in the previous subsection.
Now, let us look at numerical results shown in Table 5. First, note that a
LC on its own does not take into account electricity tariﬀat all. On simulated
days, we can see that the only eﬃcient way to reduce the maximum power
peak purchased from the grid is the MinPeaks Controller following the strategy.
That way, the purchasing peak is about 5% of the maximum authorized power
peak. The tactics on their own do not absorb power peaks, because a predictive
strategy is necessary to achieve such a goal. On the other hand, the savings the
MinPeaks Controller makes on the electricity bill are compensated by the aging
costs it occurs. The obtained daily cost is the same as the one of the Secure LC.

24
C. Desdouits et al.
(a) MinPeaks LC.
(b) Opportunistic LC.
(c) Secure LC.
Fig. 6. LC on their owns. Previousy published in [1]

A Method for the Energy Optimization of a Multisource Elevator
25
Table 5. Comparison of numerical results of diﬀerent tactics
Previousy published in [1]
Let us note that, if the gap between on- and oﬀ-peak hourly cost grows, the
daily cost of this MinPeaks LC following the strategy also decreases.
If the MinPeaks LC is on its own (for example during a long network failure),
the daily cost increases dramatically but the number of (and the maximum)
power peaks stay below the other controllers on their own.
However, if the goal is only to minimize cost, without taking into account
power peaks, the Opportunistic LC alone is the best (as far as the ratio between
the high/low prices is moderate).
Finally, the Secure tactic does not use storage units at all and thus, has a
higher energy bill, but no aging cost.
5.4
Interaction with an Aggregator, a Demand-Response Market
Simulation
For an elevator in an oﬃce building, the strategic optimization results gener-
ally show multiple battery charging/discharging “trend periods” during the day.
These trend periods are illustrated on Fig. 7, on which they are separated by
dashed black lines. A trend period is deﬁned as a period over which the bat-
tery state of charge (looked at the time granularity of the SO) monotonically
increases or monotonically decreases. In the late evening and early morning (oﬀ-
peak), electricity is bought to charge the battery; this is the ﬁrst trend period of
the ﬁrst day. During daytime, the battery is discharged as the elevator requires
a lot of energy and the electricity tariﬀis high (on-peak); this if the second
trend period of the ﬁrst day. The next day also has two trend periods follow-
ing the same logic. Let us note that at the end of the second day, the state of
charge of the battery is constant. This is considered being part of the previous
“discharging” trend period.
If we look at each of these trend periods from the elevator point of view, we
see that the exact proﬁle followed to recharge or discharge the battery is not
very important. The important point is to keep the trend (either increasing or
decreasing) and reach the right level at the end of the period. In the SO model,
a term of the objective function favors smoothing of the purchases and sales of
energy. In many cases, the amount of energy purchased or sold is constant or
almost constant over the identiﬁed trend periods. In reality, the grid operator or

26
C. Desdouits et al.
Fig. 7. Trend periods of the battery during a two days period
an aggregator could prefer to sell or buy more or less energy during the trend
period, depending on global production and consumption of many actors.
For example, imagine the weather is such that the utility is expecting a
production of a lot of Aeolian energy between 10pm and midnight. In such as
case, it is more interesting to incite consumers to consume between 10pm and
midnight: the batteries of the elevator could be fully recharged at that time
rather than on the early morning. This could be done in two ways: a change of
tariﬀdecided on the day, or by asking ﬂexible consumers how they could adapt,
deciding how much they shall adapt, and rewarding them for their ﬂexibility.
As part of the Arrowhead project, we collaborated with a team developing a
system usable by an aggregator to receive and manage ﬂexible energy consump-
tion and production oﬀers [11]. We ﬁrst identify trend periods, based on the plan
generated by the SO. For each of these periods, we compute an envelope of the
battery state of charge and grid purchase/sale curves, while guaranteeing:
1. that the battery charging/discharging trend is respected throughout the
trend period;
2. that the planned value of the battery state of charge at the end of the trend
period is attained;
3. that the maximal power of the battery and grid connection are respected.
The envelope of the possible grid power constitutes a ﬂexible oﬀer. To build a
ﬂexible oﬀer object, we iterate over the τ intervals composing the trend period
under consideration. For each such interval, we determine lower and upper
bounds on grid consumption, taking into account the trend, the charging or
discharging yield of the battery, and the power limits of the battery and grid
connection. The ﬂex-oﬀer object is composed of these bounds for each τ inter-
val and a global constraint enforcing that the total energy bought or sold will
remain equal to the initial plan. Let us note that constraints on the minimal and
maximal states of charge of the battery do not need to be taken into account as,

A Method for the Energy Optimization of a Multisource Elevator
27
in any solution, (i) the states of charge at the beginning and end of the trend
period will be the same as in the initial SO plan, and (ii) the state of charge will
monotonically increase or decrease between these two points.
Figure 8 illustrates a plan computed by the SO, the corresponding ﬂexible
oﬀer that can be proposed to the aggregator, and the plan updated with the
aggregator response. The red curve (Grid buy/sell plan) and the dark blue dot-
ted curve (Lead acid battery) constitute the initial plan computed by the SO.
The red shadowed area represents the ﬂexible oﬀer: the envelop within which the
grid power should stay to respect trend periods. Then, the orange curve (Grid
buy/sell plan after ﬂex) is the response of the aggregator regarding its preferred
purchasing curve. The light blue dotted curve (Lead acid battery after ﬂex) is
the evolution of the state of charge of the battery, computed from the aggregator
response. First, let us note that the initial plan is much smoother than the one
proposed by the aggregator. Indeed, the aggregator has to deal with several con-
sumers. Their consumption have to be scheduled at diﬀerent times to minimize
the global consumption peak. In this example the initial plan had an electricity
bill of −1.01e while the plan amended after the ﬂexible oﬀer has an electricity
bill of −0.98e. However, a retribution of −3.47e for our ﬂexibility comes with
the aggregator plan. That would fully compensate storage units usage cost and
make the multisource elevator proﬁtable, even with a simple peak/oﬀ-peak tariﬀ.
Let us note that in practice, computing a ﬂexible oﬀer is equivalent to build
the statement of a sub-problem of the SO problem, (i) limited to the given
trend period, (ii) where all variables except the charging/discharging quantities,
states of charge and purchase/sale quantities have been ﬁxed, and (iii) with no
optimization criterion. This statement can then be sent to the aggregator which
uses it as a sub-problem of a more global problem, and optimizes its global
problem using its own objective function. The solution of the sub-problem can
then be sent back to the SO and used to update the plan. However in practice,
Fig. 8. Initial plan versus ﬂex-oﬀer of the aggregator

28
C. Desdouits et al.
the aggregator from [11] is not expecting a formal sub-problem description, but
is using an object-oriented representation of a ﬂexible oﬀer.
6
Conclusions
We formalized the sourcing problem and its application to a multisource elevator.
We gave a method to solve it, composed of a Local Controller coupled with a
Strategic Optimizer. That allows us to tackle real-time issues while taking into
account long-term objectives based on forecasts. A linear formulation allows us
to compute a strategy and a centralized rule-based algorithm gives us a tactic.
Three Local Controller parametrizations are illustrated, and a customer should
choose the most adapted to its studied energy hub.
Experiments ﬁrst show strategy and tactics on a typical day, then highlight
the impact of aggregating time periods while computing a strategy. Then the
three proposed tactics are compared. The MeanPeaks LC coupled with the SO is
shown to be the only one avoiding power peaks, while keeping the bill unchanged.
The last experiment makes our control method interact with an aggregator and
gives an example of what could be the savings achieved.
A legitimate criticism of this work could be that gains in euros are very low
(if there are any). First, let us recall that these results are for a unique elevator,
while in practice several elevators could share the same battery. Second, reducing
power consumption peaks could be very useful to be demand-response aware and
to respect future energy limitation laws. In those cases, minimizing the energy
bill is only an appreciable addition to the consumption peaks minimization. For
the multisource elevator use case, having storage units allows the elevator to
evacuate disabled people in case of ﬁre. Using these storage units to minimize
the energy bill could dampen the investment. Third, energy prices are going
to increase in future years, as will do storage units performances. That will also
increase the beneﬁt of this solution. Finally, the proposed solution can be applied
to other multisource systems where it can be much more proﬁtable. In fact, as
the consumption increases, the proﬁtability also increases, especially if reselling
energy is possible.
On the other hand, we will have to compare the cost of maintaining our
rather complex solution, regarding the customer value in each use case. If the
maximum power peak purchased from the grid is not an issue and the energy
tariﬀconsidered is a typical French peak/oﬀ-peak tariﬀ, the Opportunistic LC
(or a similar classical rule-based controller) should be used, as it is simpler to
install and maintain.
Having tested this method in a real building (maybe coupled to a Building
Management System) would have been highly valuable, but we did not have
this opportunity. Moreover, comparing results obtained with several elevators
models, or even with a set of several elevators would have been interesting.
Acknowledgements. This work has been conducted as part of the Arrowhead Euro-
pean project and has been partially funded by the Artemis/Ecsel Joint Undertaking,

A Method for the Energy Optimization of a Multisource Elevator
29
supported by the European Commission and French Public Authorities, under grant
agreement number 332987.
References
1. Desdouits, C., Alamir, M., Giroudeau, R., Le Pape, C.: The sourcing problem -
energy optimization of a multisource elevator. In: Proceedings of the 13th Interna-
tional Conference on Informatics in Control, Automation and Robotics (ICINCO
2016), vol. 1, pp. 19–30, Lisbon, Portugal, July 29–31, 2016
2. Paire, D., Simoes, M.G., Lagorse, J., Miraoui, A.: A real-time sharing reference
voltage for hybrid generation power system. In: Industry Applications Society
Annual Meeting (IAS), 2010, pp. 1–8. IEEE, New Jersey (2010)
3. Tominaga, S., Suga, I., Araki, H., Ikejima, H., Kusuma, M., Kobayashi, K.: Devel-
opment of energy-saving elevator using regenerated power storage system. In: Pro-
ceedings of the Power Conversion Conference, 2002. PCC-Osaka 2002, vol. 2, pp.
890–895. IEEE, New Jersey (2002)
4. Bilbao, E., Barrade, P.: Optimal energy management of an improved elevator with
energy storage capacity based on dynamic programming. In: Energy Conversion
Congress and Exposition (ECCE), 2012, pp. 3479–3484. IEEE, New Jersey (2012)
5. Sachs, H.M.: Opportunities for elevator energy eﬃciency improvements. Technical
report, American Council for an Energy-Eﬃcient Economy Washington, DC (2005)
6. Desdouits, C., Alamir, M., Boutin, V., Le Pape, C.: Multi-source elevator energy
optimization and control. In: European Control Conference (ECC), EUCA 2015,
EUCA (2015)
7. Desdouits, C., Alamir, M., Giroudeau, R., Le Pape, C.: Certiﬁcation under uncer-
tainties of control methods for multisource elevators. In: 16th International Con-
ference on Intelligent Systems Design and Applications (ISDA). (in press)
8. Boutin, V., Desdouits, C., Louvel, M., Pacull, F., Vergara-Gallego, M. I., Yaak-
oubi, O., Chomel, C., Crignon, Q., Duhoux, C., Genon-Catalot, D., Lefevre, L.,
Pham, T.H., Pham, V.T.: Energy optimisation using analytics and coordination,
the example of lifts. In: Emerging Technology and Factory Automation (ETFA),
2014, pp. 1–8. IEEE, New Jersey (2014)
9. GNU: GNU Linear Programming Kit, version 4.54 (2014). http://www.gnu.org/
software/glpk/glpk.html
10. The MathWorks Inc.: Matlab 2015b. The MathWorks Inc., Natick, Massachusetts,
United States (2015)
11. ˇSikˇsnys, L., Valsomatzis, E., Hose, K., Pedersen, T.B.: Aggregating and disaggre-
gating ﬂexibility objects. IEEE Trans. Knowl. Data Eng. 27, 2893–2906 (2015)

Visual Servoing Path-Planning
with Elliptical Projections
Tiantian Shen1(B) and Graziano Chesi2
1 Department of Electronic Information Engineering, College of Polytechnic,
Hunan Normal University, Changsha, China
tiantianshen@gmail.com
2 Department of Electrical and Electronic Engineering, University of Hong Kong,
Pokfulam, Hong Kong
chesi@eee.hku.hk
Abstract. This paper proposes a path planning approach for visual ser-
voing with elliptical projections. 3D primitives like circles and spheres
may project onto image plane of a perspective camera as ellipsoids. From
these elliptical projections, moment-based features are constructed. Con-
straints required by the usage of moment-based features will include
camera ﬁeld of view (FOV) limits and occlusion avoidance of all the
observed 3D primitives, a straight or an obstacle dodging path, global
convergence and etc. We propose to parametrize these constraints into
polynomial inequalities in a common path abscise. They share common
variables in polynomial coeﬃcients and these variables will be reassigned
via a multidimensional nonlinear minimization process until a satisfac-
tory path is obtained. Such a planned path is interpolated into several
segments, at the ends of which elliptical projections are tracked by an
image-based visual servoing controller. Two synthetic scenarios demon-
strate excellent performance of the path-planning algorithm and tracking
scheme.
Keywords: Visual servoing · Path-planning · Circles · Spheres
1
Introduction
Visual servoing is a useful, image-based technique for guiding a robot end-eﬀector
to a desired location. Established methods include position-based visual servoing
(PBVS) [24] and image-based visual servoing (IBVS) [13]. Both these methods
give, in practice, satisfactory results in the case of a motionless target, a ﬁxed
desired pose, and a six degrees of freedom (6-DoF) robot with an eye-in-hand
camera system [4]. They diﬀer in the error inputs of their control schemes. Input
errors for PBVS are comprised of 3D parameters estimated from image mea-
surements. Theoretically, this allows the camera to follow an optimal trajectory
in Cartesian space but generally not in image space, since small errors in image
measurements can signiﬁcantly reduce the system accuracy [4]. While in IBVS,
feature errors are directly expressed in the image space, allowing IBVS to be
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_2

Visual Servoing Path-Planning with Elliptical Projections
31
remarkably robust to errors in calibration and image noise; however, when the
servoed displacement is large, the camera may reach a local minimum or may
cross an interaction matrix singularity [4], particularly in the case of large rota-
tions.
Other than the singularity problem, there are many other constraints and lim-
itations aroused in IBVS approaches attract attention of a bunch of researchers.
A signiﬁcant limitation is the transient loss of features caused either by occlu-
sions or by feature departure from the camera ﬁeld of view (FOV) [10], since
vision feedback plays an essential role in IBVS approaches. Other limitations
addressed included joint limits and end-eﬀector collision avoidance. To over-
come these constraints as many as possible, a great amount of work have been
devoted to design VS controllers, or use diﬀerent sensors, various kinds of fea-
tures, or explore high-level control strategies such as path-planning techniques.
Typically, navigation functions were presented in [10] in order to overcome local
convergence in Cartesian space and violation of camera FOV limits. Potential
ﬁeld methods, originally developed for an on-line collision avoidance [14] were
adapted in [16] for robust image-based control while taking into account FOV
constraints and joint limits. Numerical optimization techniques were used for
oﬄine path planning in [6,7] to address joint limits, FOV limits and collision
avoidance. Other useful path-planning methods are presented in a review [15].
The most usual feature errors used in these early work are expressed as
a set of pixel coordinates. Other useful features that have been explored in VS
community include image moments [2] and luminance [9]. Considering the target
consists of generalized objects that can be treated as a combination of some
geometrical primitives (such as segments, circles, spheres and cylinders), image
moments of these primitives are more intuitive features than pixel coordinates
of some representational points, and they have been explored as general and
useful features in visual servoing [3]. In the work of [23], for example, a set of
three-dimensional (3D) features are computed from image moments of a sphere
and used in a classical control law that is proved to perform satisfactorily in a
VS task. These 3D features are structured through spherical projection of the
sphere, and therefore they are applicable to omnidirectional vision systems. High-
level control strategies like path-planning techniques, however, have not yet been
considered to take into account constraints for VS with moment-based feature
errors. This motivates our preliminary work in [19,20] and then formulates the
main focus of this chapter.
The approach of path-planning is here explored for solving constraints prob-
lem that arise in moment-based VS, particularly with feature errors constructed
and extracted from some elliptical projections. Circles and spheres may project
on image plane of a perspective camera as ellipsoids. We ﬁrst propose some new
moment-based feature errors and adopt them in the estimation of camera dis-
placement via a virtual VS (VVS) method, where the target model and position
are approximated as a prior knowledge. The estimation results serve as two ends
of a path in workspace (Cartesian space). No matter which path is taken between
these two ends, the whole target (consists of usually more than one primitive)

32
T. Shen and G. Chesi
has to be all the way visible. This requires the maintenance of camera FOV and
also occlusion avoidance of all the observed primitives. Besides, limitations in
workspace such as target depth, obstacle avoidance, or simply a shortest straight
path are also sometimes compulsory considerations. Constraints required by the
usage of moment-based features are much more demanding than that of pixel
coordinates of some representational points. We propose to transform these con-
straints into a group of polynomial inequalities in a common path parameter,
with a few coeﬃcients of them adjustable to achieve a satisfactory path. Such a
planned path is then interpolated to form a set of segments, elliptical projections
at the ends of which are then one by one followed by an IBVS controller.
This chapter is organized as follows. Section 2 introduces some background
and formulates the problem. Section 3 focuses on pose estimation from moment-
based features. Section 4 proposes path-planning strategies concerning to these
moment-based features. Section 5 shows some simulation results, respectively,
with two circles and three spheres. Section 6 concludes with some ﬁnal remarks.
2
Background
Let R denote the real number set, In the n × n identity matrix, en the n-th
column of n × n identity matrix, 0n the n × 1 null vector, u ∗v the convolution
of vectors u and v, [v]× the skew-symmetric matrix of v ∈R3.
2.1
Camera Frame
Given two camera frames F ◦= {R, t} and F ∗= {I3, 03}, the pose transforma-
tion from F ◦to F ∗is expressed as {R⊤, −R⊤t}. Suppose there is a 3D point
with its coordinates to be H = [xo, yo, zo]⊤in frame F ∗, then its coordinates in
frame F ◦is computed as R⊤(H −t). Image projection of this point is simply
obtained by a division:
[X, Y ] =
xo
zo
, yo
zo

.
(1)
More precisely in the case of a camera, we still need to multiply an camera
intrinsic parameters matrix K ∈R3×3 in a way of K[X, Y, 1]⊤with
K =
⎛
⎝
f1 0 u
0 f2 v
0 0 1
⎞
⎠.
(2)
In the above matrix, f1 and f2 are approximated values of the camera focal
length, u and v are half values of the size of a projected image, respectively along
the horizontal and vertical direction. We use ζx = 2u and ζy = 2v to symbolize
image boundaries, e.g. an image of size ζx × ζy = 800 × 600 pixels. Note that
in the following development, K is usually assumed to be an identity matrix I3
unless otherwise speciﬁed.

Visual Servoing Path-Planning with Elliptical Projections
33
2.2
Elliptical Projections
Circle. A circle can be seen as an intersection of a sphere and a plane:

(x −xo)2 + (y −yo)2 + (z −zo)2 = r2,
α(x −xo) + β(y −yo) + γ(z −zo) = 0,
(3)
where o = [xo, yo, zo]⊤is the sphere center, r the radius, [α, β, γ]⊤normal vector
of the plane with α2 + β2 + γ2 = 1. Image projection of this circle, see Fig. 1, is
in the form of an ellipse:
(X −¯X + E(Y −¯Y ))2
A2(1 + E2)
+ (Y −¯Y −E(X −¯X))2
B2(1 + E2)
= 1,
(4)
where ( ¯X, ¯Y ) is the centroid of the ellipse, A and B are half values of the major
and minor diameters, and ϕ describes the angle between the X-axis and the
major axis of the ellipse and they are computed as
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
¯X = (K1K3 −K2K4)/(K2
2 −K0K1),
¯Y = (K0K4 −K2K3)/(K2
2 −K0K1),
A2 = 2(K0 ¯X2 + 2K2 ¯X ¯Y + K1 ¯Y 2 −K5)
K0 + K1 +

(K1 −K0)2 + 4K2
2
,
B2 = 2(K0 ¯X2 + 2K2 ¯X ¯Y + K1 ¯Y 2 −K5)
K0 + K1 −

(K1 −K0)2 + 4K2
2
,
E = (K1 −K0 +

(K1 −K0)2 + 4K2
2)/2K2,
ϕ = arctan(E).
(5)
Ki, i = 0, . . . , 5 in the above function is in the sense that
K0X2 + K1Y 2 + 2K2XY + 2K3X + 2K4Y + K5 = 0.
(6)
Fig. 1. Elliptical projection of a circle or a sphere [20]

34
T. Shen and G. Chesi
Their values are related to the model parameters in (3):
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
K0 = a2△+ 1 −2ax0,
K1 = b2△+ 1 −2by0,
K2 = ab△−bx0 −ay0,
K3 = ac△−cx0 −az0,
K4 = bc△−cy0 −bz0,
K5 = c2△+ 1 −2cz0.
and
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
a = α/δ, b = β/δ, c = γ/δ,
△= x2
0 + y2
0 + z2
0 −r2,
δ = x0α + y0β + z0γ,
1/z = a ¯X + b ¯Y + c.
(7)
Sphere. When we consider a sphere
(x −xo)2 + (y −yo)2 + (z −zo)2 = r2
(8)
with the same center coordinates and the same radius as in (3), it also project
onto image plane as an ellipse and shares in the image plane expressions (4)–(6).
The diﬀerence lies in the formulation of Ki, i = 0, . . . , 5 from model parameters.
For a sphere. they are computed [1] as:
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
K0 = r2 −y2
o −z2
o,
K1 = r2 −x2
o −z2
o,
K2 = xoyo,
K3 = xozo,
K4 = yozo,
K5 = r2 −x2
o −y2
o.
(9)
Bring (9) into (5), we induce the computation of elliptical parameters in (4)
directly from sphere center and its radius [19]:
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
¯X =
xozo
z2o −r2 ,
¯Y =
yozo
z2o −r2 ,
A =

r2(x2o + y2o + z2o −r2)/(z2o −r2),
B =

r2/(z2o −r2),
ϕ = arccos(yo/xo).
(10)
2.3
Image Moments
Features explored in this chapter are composed of image moments of some solid
objects. We assume I(X, Y ) are pixel intensities of their projected ﬁgures in a
grey-scale image, raw image moments mij and central image moments μij of the
pertinent primitive are deﬁned as:
mij = ΣXΣY XiY jI(X, Y ),
μij = ΣXΣY (X −¯X)i(Y −¯Y )jI(X, Y ),

Visual Servoing Path-Planning with Elliptical Projections
35
Table 1. Possible features of geometrical primitives [1]
Primitives 3D
Primitives 2D
Representation possibles
Circle
Ellipse
( ¯
X, ¯Y , μ20, μ11, μ02)
Sphere
Ellipse
( ¯
X, ¯Y , (μ20 + μ02)/2)
where m00 = πAB calculates the area of the ﬁgure, ¯X = m10/m00 and ¯Y =
m01/m00 are the components of the centroid. The relation between ellipsoid
parameters in (4) and a set of second order central moments are given:
μ20 = (A2 + B2E2)/(1 + E2),
μ11 = E(A2 −B2)/(1 + E2),
μ02 = (A2E2 + B2)/(1 + E2).
(11)
Possible moment-based representations of geometrical primitives [1], mainly
circles and spheres in this chapter, are displayed in Table 1.
Problem. The problem consists of planning trajectories of ellipsoids in order to
steer the camera to a location that gives a desired view of some 3D primitives,
mainly circles or spheres. How to construct moment-based features to enhance
their robustness to errors in image noise? How to maintain target visibility dur-
ing a VS process, including camera FOV and occlusion avoidance of multiple 3D
primitives? How to simultaneously consider constraints in workspace and limita-
tions in image space? How to follow well the planned elliptical trajectories and
ﬁnally convergence to the desired camera view?
3
Pose Estimation from Image Moments
A satisfactory path concerning many constraints and limitations will be planned
in advance of a VS application. We ﬁrst estimate camera displacement from two
perspective target views to form two ends of the path, which will actually serve
as a prerequisite and an additional limitation in the proposed path-planning
algorithm. There are many existing approaches for pose estimation from two
perspective views [8,12,17,25]. The geometric features considered for pose esti-
mation are often points [5], segments [11], contours, conics [18] or image moments
[21]. These approaches have the advantage of estimation accuracy; however, they
may be subject to local minima and, worse, divergence [22], especially for an eye-
in-hand VS application with large camera displacement. Therefore we usually
observe at least two primitives to reduce the occurrence of local minima. In order
to obtain a large convergence domain and high convergence speed for pose esti-
mation with moment-based features, we estimate the camera displacement [22]
via a virtual VS (VVS) based method, similar to moving a virtual camera from
one pose to the other with instant camera velocities computed as
T = −λ1ˆL+(s(t) −s∗),
(12)

36
T. Shen and G. Chesi
where T = [υx, υy, υz, ωx, ωy, ωz]⊤describes camera velocities in translation and
rotation at time t, which decrease along with the falling trends of |s(t) −s∗|. λ1
is a positive gain that controls the iteration progress. s(t) holds current feature
values at time t and s∗the desired feature values. ˆL+ is the pseudo-inverse of
the estimated interaction matrix or image jacobian corresponding to the selected
features. This VVS method is equivalent to nonlinear methods that consist in
minimizing a cost function using iterative algorithms.
When elliptical projections is formed from a circle, we proposed to use the
following features instead of the ones in Table 1:
scircle =
 ¯X, ¯Y , Xmax, Ymax, Xmin, Ymin
⊤,
(13)
where
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩
Xmax = ¯X + √μ20,
Xmin = ¯X −√μ20,
Ymax = ¯Y + √μ02,
Ymin = ¯Y −√μ02
(14)
are extreme values of the projected ellipse. The extraction of these features will
obviously import less noise than the computation of μ20, μ11 and μ02 from (11),
where noise brought by feature extraction of A and B are squared. Interaction
matrices regarding the centroid ¯X, ¯Y are given below:
L ¯
X =

−1/z
0
¯X/z + aμ20 + bμ11
¯X ¯Y + μ11
−1 −¯X2 −μ20
¯Y

,
L ¯Y =

0
−1/z
¯Y /z + aμ11 + bμ02
1 + ¯Y 2 −μ02
−¯X ¯Y −μ11
−¯X

.
(15)
Interaction matrices of μ20, μ11 and μ02 are respectively
Lμ20 =

−2(aμ20 + bμ11)
0
2(1/z + a ¯X)μ20 + 2b ¯Xμ11
2( ¯Y μ20 + ¯Xμ11)
−4μ20 ¯X
2μ11

,
Lμ11 =

−aμ11 −bμ02
−aμ20 −bμ11
a ¯Y μ20 + (3/z −c)μ11 + b ¯Xμ02
3 ¯Y μ11 + ¯Xμ02
−¯Y μ20 −3 ¯Xμ11
μ02 −μ20

,
Lμ02 =

0
−2(aμ11 + bμ02)
2(1/z + b ¯Y )μ02 + 2a ¯Y μ11
4 ¯Y μ02
−2( ¯Y μ11 + ¯Xμ02)
−2μ11

.
(16)
Therefore interaction matrices corresponding to features in (14) are devel-
oped as the following summation:
LXmax = L ¯
X +
1
2√μ20
Lμ20,
LXmin = L ¯
X −
1
2√μ20
Lμ20,
LXmin = L ¯Y +
1
2√μ20
Lμ02,
LXmin = L ¯Y −
1
2√μ20
Lμ02.
(17)

Visual Servoing Path-Planning with Elliptical Projections
37
Interaction matrix regarding feature set in (13) is a stack of matrices in (15)
and (17). The computation of a, b, c and 1/z in (15)–(17) for a circle, please refer
to (7). Afterwards, we refer to (5) and (11) for the estimation of μ20, μ11 and
μ02 in the approximation of these matrices.
When spheres are taken as a target, we consider at least three features for a
sphere. Here we use 1/m00 instead of (μ02 + μ20)/2 in the feature set in order
to reduce the inﬂuence of image noise:
ssphere =
 ¯X, ¯Y , 1/m00
⊤.
(18)
Interaction matrix for ¯X and ¯Y is the same as (15), while matrix for 1/m00
is deduced as follows:
L1/m00 =

a/m00
b/m00
(c −3/z)/m00
−3 ¯Y /m00
3 ¯X/m00
0

.
(19)
Interaction matrix for a sphere is then a concatenation of matrices (15) and
(19). It is noted that sphere is a very special object that projects in the image
plane as an ellipse whose centroid may not correspond to the center of the sphere
but a point on the spherical surface with its depth z as follows:
⎧
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎩
z =
1
a ¯X + b ¯Y + c = zo −r2/zo,
a = xo/(x2
o + y2
o + z2
o −r2),
b = yo/(x2
o + y2
o + z2
o −r2),
c = zo/(x2
o + y2
o + z2
o −r2).
These computation of z, a, b and c for a sphere will be brought into the
approximation of matrices (15) and (19). For further estimation of image
moments in them, please refer to (10) and expressions in Sect. 2.3. Ultimately,
approximation of the interaction matrix will be brought in (12) to generate
instant camera velocities. Given a time interval, camera will move iteration by
iteration until feature error |s(t)−s∗| is smaller than a threshold, usually 1 pixel.
Larger the positive gain, less iterations necessary. The estimation results of cam-
era displacement will serve as pose boundaries for subsequent optimization of a
polynomial parametrized camera path.
4
Polynomial Minimization
4.1
Path Parametrization and Polynomial Model
To describe the camera path with boundaries on both sides, we use a path
abscise w ∈[0, 1] with its value 0 implying one end of the path F o, and value 1
meaning the other end F ∗. Between the above two camera frames, camera path
{R(w), t(w)} is going to be planned according to a lot of servo requirements.

38
T. Shen and G. Chesi
The ﬁrst requirement is pose boundaries given below:
F o :
{R(0), t(0)} = {I3, 03},
F ∗:
{R(1), t(1)} = {R, t},
(20)
where R and t denote pose transformation from F o to F ∗, which can be derived
from the estimation method in Sect. 3. When path abscise w changes from 0
to 1, camera rotation R(w) alters from I3 to R while camera translation t(w)
changes from 03 to t. In order to clearly describe and design the altering process
of R(w), we use quaternion representation of R(w) to describe rotational path,
that is
q(w) =
⎡
⎢⎣
sin θ(w)
2
a(w)
cos θ(w)
2
⎤
⎥⎦
(21)
with θ(w) ∈(0, π) and a(w) ∈R3 are, respectively, rotation angle and axis such
that R(w) = eθ(w)[a(w)]×. Afterwards, we parametrize each coordinate in q(w)
and t(w) as a polynomial in w:
q(w) = U · [wσ, . . . , w, 1]⊤,
t(w) = V · [wτ, . . . , w, 1]⊤.
(22)
Polynomial parametrization of quaternions share the same degree of σ, and
translational coordinates τ. Matrices U ∈R4×(σ+1) and V ∈R3×(τ+1) con-
tain their polynomial coeﬃcients. If a straight camera path in workspace is
demanded, degree τ could be set as 1 leaving only trajectories of quaternion to
be adjusted. In general, we take both of quaternion and translational coordinates
to be quadratic polynomials with σ = 2 and τ = 2. In the following develop-
ment, we assume that the whole camera path is modeled by seven quadratic
polynomials unless otherwise indicated.
Both U and V for quadratic polynomials have totally three columns. Their
last columns are determined by boundaries in (20). Speciﬁcally, condition R(0) =
I3 gives q(0) = e4 that constitutes the last column in U, and condition t(0) =
03 generates the last column in V. Let b ∈R4 and d ∈R3 denote the mid
column, respectively, in U and V. Then their ﬁrst columns are determined by the
other two columns considering conditions {R(1), t(1)} = {R, t} with q(1) = q.
Consequently, U and V for quadratic polynomials are rewritten as:
U = [q −b −e4, b, e4] ,
V = [t −d, d, 03] .
(23)
The above limitation to the entries in U and V matrices, leaving only their
mid columns b and d to be variable, guarantees boundaries in (20). Zero assign-
ment of variables in b and d implies a straight path in workspace and also four
straight quaternion trajectories. Starting from this initial assignment, variables
in b and d will be reassigned and adjusted according to many other requirements
compulsory in a visual servoing application.

Visual Servoing Path-Planning with Elliptical Projections
39
For the convenience of subsequent development, we use u⊤
i
∈R1×3, i =
1, . . . , 4 to denote the i-th row of matrix U and v⊤
j ∈R1×3, j = 1, 2, 3 the j-th
row of matrix V, then we have
U = [u1, u2, u3, u4]⊤,
V = [v1, v2, v3]⊤.
(24)
Each row of U constitutes polynomial coeﬃcients of the pertinent coordinate
in q(w) in the form of
qi(w) = u⊤
i [wσ, . . . , w, 1]⊤,
i = 1, . . . , 4.
The associated rotation matrix is constructed from the above quaternion:
R(w) =
⎛
⎝
q2
1(w) −q2
2(w) −q2
3(w) + q2
4(w)
2 (q1(w)q2(w) −q3(w)q4(w))
2 (q1(w)q2(w) + q3(w)q4(w))
−q2
1(w) + q2
2(w) −q2
3(w) + q2
4(w)
2 (q1(w)q3(w) −q2(w)q4(w))
2 (q2(w)q3(w) + q1(w)q4(w))
2 (q1(w)q3(w) + q2(w)q4(w))
2 (q2(w)q3(w) −q1(w)q4(w))
−q2
1(w) −q2
2(w) + q2
3(w) + q2
4(w)
⎞
⎠.
It can be seen that every entry in rotation matrix R(w) is also a polynomial
in w. Their degrees are doubled from (22), that is 2σ. Let rij ∈R5 (considering
σ = 2) carry polynomial coeﬃcients of the entry in the i-th row and the j-th
column of the rotation matrix. They are related to the rows of matrix U in the
following way [20]:
r11 = u1 ∗u1 −u2 ∗u2 −u3 ∗u3 + u4 ∗u4,
r12 = 2(u1 ∗u2 −u3 ∗u4),
r13 = 2(u1 ∗u3 + u2 ∗u4),
r21 = 2(u1 ∗u2 + u3 ∗u4),
r22 = −u1 ∗u1 + u2 ∗u2 −u3 ∗u3 + u4 ∗u4,
r23 = 2(u2 ∗u3 −u1 ∗u4),
r31 = 2(u1 ∗u3 −u2 ∗u4),
r32 = 2(u2 ∗u3 + u1 ∗u4),
r33 = −u1 ∗u1 −u2 ∗u2 + u3 ∗u3 + u4 ∗u4.
(25)
As a result, rotation matrix can be rewritten as:
R(w) =
⎛
⎝
r⊤
11w5 r⊤
12w5 r⊤
13w5
r⊤
21w5 r⊤
22w5 r⊤
23w5
r⊤
31w5 r⊤
32w5 r⊤
33w5
⎞
⎠,
(26)
where w5 = [w4, . . . , w, 1]⊤.

40
T. Shen and G. Chesi
4.2
Constraints and Limitations
For all possible constraints and limitation, priority will be given to the depth
of the target, which is required to be positive all the way along the camera
path. Second, collision in workspace will be prevented by adjusting mainly the
trajectories of camera translation. Third, camera FOV limit is going to be met
by restraining elliptical projections embraced within the image frame. When the
target consists of two or more primitives, occlusion among them will also be
avoided to maintain their visibility in the course of a VS application.
Target Depth. The target needs to be located in front of the camera with a
certain distance. When the target consists of circles or spheres, it is necessary
to have the distance larger than their body size (mainly the radius). At least,
depth of the target center zo is meant to be greater than the radius, that is the
value of
g1 = zo −r
(27)
needs to be positive during a servo process.
Depth of the target center zo with respect to a camera is determined by cam-
era pose {R(w), t(w)}, taken as the third item in R(w)⊤(o −t(w)). In Sect. 2.2,
camera frame is assumed to be {I3, 03}, coordinates o could be a circle center
or a sphere center. Building on polynomial parametrization of {q(w), t(w)}, we
wish to express g1 into polynomial with some of its coeﬃcients adjustable. Take
a circle for example, it is obvious that its center coordinates and normal vector
in the w-based camera frame are polynomials in the path abscise. To prove it,
we bring (23) into the computation of w-based center coordinates. Firstly, we
have
o −t(w) = {[03, 03, o] −V} · w3
= [d −t, −d, o] · w3.
(28)
where w3 = [w2, w, 1]⊤. Let h⊤
j ∈R1×3, j = 1, 2, 3 denote the j-th row of the
associated coeﬃcient matrix for o −t(w). Center coordinates in both of (3) and
(8) can be computed as:
⎛
⎝
xo(w)
yo(w)
zo(w)
⎞
⎠= R(w)⊤(o −t(w))
=
⎛
⎝
r⊤
11w5 r⊤
21w5 r⊤
31w5
r⊤
12w5 r⊤
22w5 r⊤
32w5
r⊤
13w5 r⊤
23w5 r⊤
33w5
⎞
⎠·
⎛
⎝
h⊤
1 w3
h⊤
2 w3
h⊤
3 w3
⎞
⎠
=
⎛
⎝
w⊤
3 h1r⊤
11w5 + w⊤
3 h2r⊤
21w5 + w⊤
3 h3r⊤
31w5
w⊤
3 h1r⊤
12w5 + w⊤
3 h2r⊤
22w5 + w⊤
3 h3r⊤
32w5
w⊤
3 h1r⊤
13w5 + w⊤
3 h2r⊤
23w5 + w⊤
3 h3r⊤
33w5
⎞
⎠.
(29)
The normal vector in (3) is related to camera rotation:

Visual Servoing Path-Planning with Elliptical Projections
41
⎛
⎝
α(w)
β(w)
γ(w)
⎞
⎠= R(w)⊤
⎛
⎝
α
β
γ
⎞
⎠
=
⎛
⎝
r⊤
11w5 · α + r⊤
21w5 · β + r⊤
22w5 · γ
r⊤
12w5 · α + r⊤
22w5 · β + r⊤
32w5 · γ
r⊤
13w5 · α + r⊤
23w5 · β + r⊤
33w5 · γ
⎞
⎠.
(30)
From (29) and (30), we can see that all of them are polynomials in w, with
their polynomial coeﬃcients expressed as [20]:
pxo = r11 ∗h1 + r21 ∗h2 + r31 ∗h3,
pyo = r12 ∗h1 + r22 ∗h2 + r32 ∗h3,
pzo = r13 ∗h1 + r23 ∗h2 + r33 ∗h3,
pα = αr11 + βr21 + γr31,
pβ = αr12 + βr22 + γr32,
pγ = αr13 + βr23 + γr33.
(31)
The size of w3 and w5 determines the size of the above vectors, that is
pxo, pyo, pzo ∈R7 and pα, pβ, pγ ∈R5, therefore g1 = zo −r is a six order
polynomial with its coeﬃcient to be
pg1 =
 06
−r

+ pzo.
(32)
Local minimum of this six order polynomial within the domain of w ∈(0, 1)
will be found by taking a diﬀerential coeﬃcient of pzo−r. Our algorithm aims at
positivity of this local minimum, so that the target is always located in front of
the camera.
A Straight Line or Collision Avoidance. Either a straight line in Cartesian
space or an obstacle dodging path, realization lies in the regulation of xo(w),
yo(w) and zo(w). If a straight path is required, it can be fulﬁlled simply by taking
the ﬁrst order in translational model in (22). Consequently, coeﬃcient matrix V
has only two columns [20] without any variable, letting variables in U adjusted
by other constraints and limitations. In the usual case of quadratic polynomials,
we can simply assign d in (23) to be zeros, which also gives a straight line.
If an obstacle blocks the way of a camera, a dodging path must be achieved.
Let lobs ∈R3 denote the obstacle location in the frame of {I3, 03}. Camera path
{R(w), t(w)} will keep a safe distance from the obstacle by the positivity of
expression of
g2 = ∥R(w)⊤(lobs −t(w))∥2 −S2,
(33)
where S is a tolerated safe distance. R(w)⊤(lobs−t(w)) contains obstacle coordi-
nates with respect to camera frame of {R(w), t(w)}. These w-based coordinates

42
T. Shen and G. Chesi
are, respectively, symbolized as xobs, yobs and zobs. They are also polynomials in
w with coeﬃcients to be
pxobs = r11 ∗l1 + r21 ∗l2 + r31 ∗l3,
pyobs = r12 ∗l1 + r22 ∗l2 + r32 ∗l3,
pzobs = r13 ∗l1 + r23 ∗l2 + r33 ∗l3,
(34)
where l⊤
j ∈R1×3, j = 1, 2, 3 is the j-th row of matrix [d −t, −d, lobs]. Therefore
g2 is also a polynomial in w, whose coeﬃcients are included in a vector:
pg2 =

012
−S2

+ pxobs ∗pxobs + pyobs ∗pyobs + pzobs ∗pzobs.
(35)
This is a twelve degree polynomial. Similar to the case in (32), our algorithm
searches for the value of coeﬃcient variables that give positivity to the local
minimum of g2 within the limited range of w.
Field of View Limit. Taking into account of intrinsic parameters of a camera,
extreme values of elliptical projections, as shown in Fig. 1, have to be restrained
within image size of ζx × ζy. This limitation is realized by four inequalities:
Xmax < ζx
2f1
,
Xmin > −ζx
2f1
,
Ymax < ζy
2f2
,
Ymin > −ζy
2f2
,
(36)
where f1 and f2 are approximated values of focal length in (2). Bringing (5) and
(11) into (14), Xmax, Ymax, Xmin and Ymin are developed and expressed [20] as
the function of Ki, i = 0, . . . , 5:
Xmax = (K2K4 −K1K3 +

G3)/(K0K1 −K2
2),
Xmin = (K2K4 −K1K3 −

G3)/(K0K1 −K2
2),
G3 = (K1K3 −K2K4)2 −(K0K1 −K2
2)(K1K5 −K2
4),
Ymax = (K2K3 −K0K4 +

G4)/(K0K1 −K2
2),
Ymin = (K2K3 −K0K4 −

G4)/(K0K1 −K2
2),
G4 = (K0K4 −K2K3)2 −(K0K1 −K2
2)(K0K5 −K2
3).
(37)
In order to transform inequalities in (36) into the form of polynomials to
facilitate an uniform optimization of parameterized variables in (23), let
ki = δ2Ki, i = 1, . . . , 5,
(38)

Visual Servoing Path-Planning with Elliptical Projections
43
and we will produce polynomial coeﬃcients of all of ki from (7) and (31) as
follows:
p△= pxo ∗pxo + pyo ∗pyo + pzo ∗pzo + [0⊤
12, −r2]⊤,
pδ = pα ∗pxo + pβ ∗pyo + pγ ∗pzo,
pk0 = pα ∗pα ∗p△+ pδ ∗pδ −2pα ∗pδ ∗pxo,
pk1 = pβ ∗pβ ∗p△+ pδ ∗pδ −2pβ ∗pδ ∗pyo,
pk2 = pα ∗pβ ∗p△−pβ ∗pδ ∗pxo −pα ∗pδ ∗pyo,
pk3 = pα ∗pγ ∗p△−pγ ∗pδ ∗pxo −pα ∗pδ ∗pzo,
pk4 = pβ ∗pγ ∗p△−pγ ∗pδ ∗pyo −pβ ∗pδ ∗pzo,
pk5 = pγ ∗pγ ∗p△+ pδ ∗pδ −2pγ ∗pδ ∗pzo.
(39)
All of the above pki ∈R19 are polynomial coeﬃcients of ki, i = 1, . . . , 5, a
eighteen degree polynomial in w. Let
gd = k0k1 −k2
2
(40)
substitutes the denominator in (37). We have ﬁrst
g3 = (k1k3 −k2k4)2 −gd(k1k5 −k2
4),
g4 = (k0k4 −k2k3)2 −gd(k0k5 −k2
3).
(41)
Positivity of g3 and g4 ensures that the maximum and minimum values along
the same axis are unequal. This will avoid the degenerating case: elliptical pro-
jection boils down to a segment. Building on the positivity of g3 and g4, FOV
limits are developed as follows:
Xmax :
g5 = gd
 ζx
2f1
gd −k2k4 + k1k3
2
−gdg3 > 0,
Xmin :
g6 = gd
 ζx
2f1
gd + k2k4 −k1k3
2
−gdg3 > 0,
Ymax :
g7 = gd
 ζy
2f2
gd −k2k3 + k0k4
2
−gdg4 > 0,
Ymin :
g8 = gd
 ζy
2f2
gd + k2k3 −k0k4
2
−gdg4 > 0.
(42)
Since ki, i = 1, . . . , 5 are polynomials, therefore gj, j = 3, . . . , 8 are also
polynomials in w. Their coeﬃcients are computed from pki, i = 1, . . . , 5 in (39).
Take g3 for example, polynomial coeﬃcients of g3 is computed as:
pk1k3−k2k4 = pk1 ∗pk3 −pk2 ∗pk4,
pk1k5−k4k4 = pk1 ∗pk5 −pk4 ∗pk4,
pgd = pk0 ∗pk1 −pk2 ∗pk2,
pg3 = pk1k3−k2k4 ∗pk1k3−k2k4 −pgd ∗pk1k5−k4k4.
(43)

44
T. Shen and G. Chesi
Similar computation applies to polynomial coeﬃcients of gj, j = 4, . . . , 8.
Provided the initial value of b and d in (23), we derive entries of U and V
and bring them into (22), (24), (25), (31), (32) and (39). As a result, pgj, j =
1, . . . , 8 can be computed. We take the derivative of each pgj and solve for the
corresponding w ∈(0, 1) that give zero derivatives. If such w exist, then a local
minimum of gj can be found at such w values. We expect these local minimums
to be always positive. Take all of these requirements together, we ﬁrst ﬁnd local
minimums for each gj, j = 1, . . . , n and again the minimum of all of these local
minimums and denote it as g∗:
g∗= minn
j=1(minw∈(0,1)(gj)),

b∗
d∗

= min
b,d (−g∗).
(44)
No action will be taken if the value of g∗is initially positive, otherwise a
minimization of −g∗will be conducted until it converts its sign. We search for
appropriate values of b, d by minimizing −g∗with MATLAB tool till g∗> 0.
Once the minimization result is obtained, we denote it as b∗, d∗and bring it
back into (23) and (22). Till this end, a planned path that converges to the
desired camera view while satisfying constraints in both of workspace and image
plane is found.
Target Self-occlusion Avoidance. Here we mainly consider occlusion among
spheres when more than one sphere are taken as a target. One sphere can not
shelter the other from the camera view, otherwise feature extraction will fail to
provide some part of the controller input.
We denote ( ¯X1, ¯Y1) and ( ¯X2, ¯Y2) the center coordinates of two ellipsoids on
the image plane, as shown in Fig. 2. Line that passes through these two ellipsoid
centers is described as:
Y = (X −¯X1)α + ¯Y1,
α =
¯Y2 −¯Y1
¯X2 −¯X1
.
(45)
This line is cut by elliptical contours into three segments, the two of which
are embraced within these elliptical contours and depicted as l1 and l2 in Fig. 2.
Fig. 2. Two elliptical projections on the image plane [19]

Visual Servoing Path-Planning with Elliptical Projections
45
Lengths of l1 and l2 are developed [19] as
l1 =
A1B1
√
α2 + 1

μ021 + α2μ201 −2αμ111
,
l2 =
A2B2
√
α2 + 1

μ022 + α2μ202 −2αμ112
.
(46)
As a result, occlusion between these two spheres will be avoided by imposing
the following inequality:

( ¯X1 −¯X2)2 + ( ¯Y1 −¯Y2)2 −l1 −l2 > 0.
(47)
In order to realize this inequality with the same strategy proposed in (44),
it is necessary to parameterize this condition also in the form of polynomial in
the path abscise, as an additional constraint integrated into the minimization
problem of (44). We ﬁrst deduce that
μ20 = k1(k0 ¯X2 + 2k2 ¯X ¯Y + k1 ¯Y 2 −k5)/gd,
μ11 = k2(k0 ¯X2 + 2k2 ¯X ¯Y + k1 ¯Y 2 −k5)/gd,
μ02 = k0(k0 ¯X2 + 2k2 ¯X ¯Y + k1 ¯Y 2 −k5)/gd.
(48)
where gd is given in (40). Bring (48) in (46) will result in
li =

(1 + α2)υi
k0i + α2k1i + 2αk2i
,
i = 1, 2.
(49)
where υi = k0i ¯X2
i + 2k2i ¯Xi ¯Yi + k1i ¯Y 2
i −k5i. Inequality (47) is then transformed
into

( ¯X1 −¯X2)2 −

υ1
k01 + α2k11 + 2αk21
−

υ2
k02 + α2k12 + 2αk22
> 0.
(50)
Since 2a2 + 2b2 ≥(a + b)2, we realize (50) by
( ¯X1 −¯X2)2 −2
υ1
k01 + α2k11 + 2αk21
−2
υ2
k02 + α2k12 + 2αk22
> 0.
(51)
The left hand side of (51) can be further developed as function of ki, i =
0, . . . , 5 in (38), therefore it is also a polynomial in w. Since it involves parameters
of two elliptical projections, it is quite tedious to derive polynomial coeﬃcients
for the above expression. In order to illustrate it can be polynomial parametrized,
however, we take a simpler form by taking the larger one of l1 and l2 (take l1
for example) instead of the smaller one, then we will have:
( ¯X1 −¯X2)2 −4
υ1
k01 + α2k11 + 2αk21
> 0.
(52)
This will be realized by the positivity of

g9 = g2
d1g2
d2[( ¯X1 −¯X2)2k01 + ( ¯Y1 −¯Y2)2k11 + 2k21( ¯X1 −¯X2)( ¯Y1 −¯Y2)],
g10 = g9 −4g2
d1g2
d2(k01 ¯X2
1 + 2k21 ¯X1 ¯Y1 + k11 ¯Y 2
1 −k51),
(53)

46
T. Shen and G. Chesi
where gd1 = k01k11 −k2
21 and gd2 = k02k12 −k2
22. Considering ¯X1 = (k21k41 −
k11k31)/gd1,
¯X2 = (k22k42 −k12k32)/gd2, ¯Y1 = (k21k31 −k01k41)/gd1 and
¯Y2 = (k22k32 −k02k42)/gd2, we can further develop (53) as:
⎧
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎩
g9 = k01α2
x + k11α2
y + 2k21αxαy,
g10 = g9 −4g2
d2(k01(k21k41 −k11k31)2
+ 2k21(k21k41 −k11k31)(k21k31 −k01k41)
+ k11(k21k31 −k01k41)2 −k51g2
d1),
(54)
with

αx = gd2(k21k41 −k11k31) −gd1(k22k42 −k12k32),
αy = gd2(k21k31 −k01k41) −gd1(k22k32 −k02k42).
(55)
It is obvious that g9 and g10 are also polynomials in w based on the expres-
sions in (39) and (43). Therefore they can be brought into the minimization
problem in (44) with n = 10 to provide additional requirement of occlusion
avoidance.
4.3
Tracking the Planned Elliptical Projections
The planned camera path and the associated elliptical projections are going to
be tracked by an IBVS controller:
T = −λ1ˆL+(s(t) −s∗
i ),
i = 1, . . . , num seg.
(56)
Here, λ1 is a positive gain, usually λ1 = 0.1. The desired feature values
in s∗
i are values extracted from the planned elliptical projections. Actually, we
equally divide the planned camera path into num seg segments, and extract
feature values from elliptical projections at the ends of these segments and assign
sequentially these values into s∗
i . For every s∗
i , controller (56) guides the camera
motion with updated s(t) until the largest element in feature error s(t) −s∗
i is
bellow a threshold, usually set as 1 pixel. In details, we compute the length of
the planned camera path and denoted it as path length, select a segment length
to be denoted as segment length, and then derive the value of num seg in (56)
as the nearest integer to the division of path length/segment length.
Actually, the planned camera path is interpolated with several intermediate
values and then produce a few segments, the end of which corresponds to the
path abscise value computed as wi = i/num seg, i = 1, . . . , num seg. At diﬀerent
stages of visual servoing, planned feature values at wi are computed and treated
as s∗
i . Overall, the tracking performance is mainly dependent on the selection of
segment length and the derived number of segments.

Visual Servoing Path-Planning with Elliptical Projections
47
5
Evaluation Examples
Synthetic scenes are generated using MATLAB. One aims to follow a straight
line in the Cartesian space while keeping camera FOV of two circles. The other
deals with FOV limits and occlusion avoidance of three spheres. In either case,
a reference view and an initial view of the target are generated with camera
calibration errors and image noises. Image noises conforming to uniform distri-
bution on the interval [−1, 1] are piled onto the selected features. Rotational
camera path recorded in iterations is expressed as three trajectories of coordi-
nates in r = [r1, r2, r3]⊤, which is Cayley representation of a rotation matrix R
in the sense that R = e[r]×. Translational camera path is presented along x, y
and z coordinates.
5.1
Following a Straight Line with Two Circles
The ﬁrst example aims to follow a straight line in the Cartesian space while
keeping camera FOV of two intersected circles, see Fig. 3a. A desired camera
view of these circles is given in Fig. 3b as a reference. There are more than one
camera frames, at least two in this case, will produce the desired view. Fig. 3a
draws one possibility, that is camera frame F ∗. Frame F ◦labels the one that
gives an initial view, as plotted in Fig. 3c. Image noises and camera calibration
(a) Two circles and two camera frames
0
200
400
600
800
0
100
200
300
400
500
600
(b) Desired view in camera frame F ∗
0
200
400
600
800
0
100
200
300
400
500
600
(c) Initial view in camera frame F ◦
−35
−30
−25
−20
−15
−10
−5
0
0
5
10
0
5
10
z [cm]
F*
x [cm]
Fo
y [cm]
Fig. 3. Scenery with two circles

48
T. Shen and G. Chesi
(a) Virtually servoed camera path
(b) Virtually servoed translation
0
200
400
600
−1
−0.5
0
0.5
1
iteration
rotation [rad]
r1
r2
r3
(c) Virtually servoed rotation
−35 −30 −25 −20 −15 −10
−5
0
0
5
10
0
5
10
z [cm]
F*
x [cm]
Fo
y [cm]
0
200
400
600
−40
−30
−20
−10
0
10
iteration
translation [cm]
x
y
z
Fig. 4. Virtual visual servoing process with two circles
errors are considered with:
K =
⎛
⎝
448 0 399
0 453 302
0
0
1
⎞
⎠.
From two views of these circles (position and model are approximated to
be known as priori), a virtual visual servoing process is performed to move the
camera frame from F ◦to the one that produces the desired view. Fortunately,
the camera converges to the pose of F ∗. Figure 4 shows the virtually servoed
camera path in the Cartesian space. It ﬂuctuates obviously near the end of the
path F ∗, mainly along the y-axis and r1 coordinate, as shown in the iteration
records plotted in Fig. 4b, c. The estimated camera displacement is:
(r1, r2, r3)⊤= (0.2630, 0.6949, −0.5228)⊤
rad,
(x, y, z)⊤= (−34.9791, 10.0063, 3.9968)⊤
cm.
A straight path is planned when variables in (23) are initialized as zeros.
The corresponding image trajectory is plotted in Fig. 5b. In this ﬁgure, elliptical
projections travel from their initial view ultimately to the desired view with their
trajectories, however, obviously go across image boundary of ζx×ζy = 800×600.
Figure 5b displays this boundary with a rectangle. This severe violation of camera
FOV limits motivates polynomial optimization in (44) with d kept as zeros

Visual Servoing Path-Planning with Elliptical Projections
49
(a) Planned straight path in the Cartesian space
0
200
400
600
800
1000
0
200
400
600
(b) Planned image trajectories satisfying
only a straight path
0
200
400
600
800
0
100
200
300
400
500
600
(c) Planned image trajectories satisfying
FOV limits and a straight path
(d) Planned iteration of translation
0
50
100
150
200
−1
−0.5
0
0.5
1
iteration
rotation [rad]
r1
r2
r3
(e) Planned iteration of rotation
(f) Servoed camera translation
0
500
1000
1500
−1
−0.5
0
0.5
1
iteration
rotation [rad]
r1
r2
r3
(g) Servoed camera rotation
−35
−30
−25
−20
−15
−10
−5
0
0
5
10
0
5
10
z [cm]
F*
x [cm]
Fo
y [cm]
0
50
100
150
200
−40
−30
−20
−10
0
10
iteration
translation [cm]
x
y
z
0
500
1000
1500
−40
−30
−20
−10
0
10
iteration
translation [cm]
x
y
z
Fig. 5. Visual servoing path-planning with two circles

50
T. Shen and G. Chesi
and b varying until appropriate b∗is achieved to give satisfactory trajectories.
Figure 5c shows these well planned image trajectories, which still correspond to a
straight camera path shown in Fig. 5a. Planned iterations of camera translation
and rotation are respectively plotted in Fig. 5d and e. Compared to the virtually
servoed iterations in Fig. 4b, c, the planned ones have no oscillation and have all
of the translational coordinates converge linearly to their destinations.
The proposed strategy calculates the length of the planned camera path in
Fig. 5a, and equally divides it into several segments. Image projections formed at
the end of these segments are inserted and treated as the desired feature value in
(56). Ultimately, the tracking algorithm in Sect. 4.3 with path length = 36.6011
and segment length = 0.2000 results in servoed paths in Fig. 5f, g. Although
it is an image-moment based visual servoing process, the servoed translational
path follows the planned one very well.
5.2
Occlusion Avoidance Among Three Spheres
The scenario for visual servoing path-planning with three spheres is illustrated
in Fig. 6a. Occlusion avoidance among these spheres and the maintenance of
camera view of them are expected to enable a VS application. In Fig. 6a, there
are two exemplary camera frames that give, respectively, a reference and an
original view. Figure 3b shows the desired image projection of these spheres in
F ∗, and Fig. 3c the initial one in F ◦. Image noises are piled and approximated
camera intrinsic parameters are given as:
(a) Three spheres and two camera frames
0
200
400
600
800
0
100
200
300
400
500
600
(b) Desired view in camera frame F ∗
0
200
400
600
800
0
100
200
300
400
500
600
(c) Initial view in camera frame F ◦
−20
−10
0
10
0
10
20
−5
0
5
10
F*
x [cm]
z [cm]
Fo
y [cm]
Fig. 6. Scenery with three spheres

Visual Servoing Path-Planning with Elliptical Projections
51
(a) Virtually servoed camera path
(b) Virtual image trajectories
(c) Occlusion occurrence
0
200
400
600
800
0
100
200
300
400
500
600
0
200
400
600
800
0
100
200
300
400
500
600
−20
−10
0
0
10
20
−2
0
2
4
6
8
F*
x [cm]
z [cm]
Fo
y [cm]
Fig. 7. Virtual visual servoing process with three spheres
K =
⎛
⎝
412 0 411
0 386 295
0
0
1
⎞
⎠.
Given the locations and 3D models of spheres and their two views, camera
pose of F o is estimated using a virtual VS method based on features extracted
from two views. The estimated results are:
(r1, r2, r3)⊤= (0.0087, 0.8442, −0.5209)⊤
rad,
(x, y, z)⊤= (−20.0225, 7.0415, 18.1116)⊤
cm.
In the virtual servo process, F o moves towards F ∗and leaves its track plotted
in Fig. 7a. The related elliptical projections have their tracks displayed in Fig. 7b.
We cut out a small part of these tracks in Fig. 7c with elliptical projections in
a certain step emphasized by their thicker contour lines, it is obvious that, in
this step, there are two spheres have their projections overlap with each other.
This situation will prevent feature extraction of the occluded sphere and fail
immediately a real VS application.
The proposed path-planning strategy aims at a path that avoids image
boundary of ζx × ζy = 800 × 600 as well as occlusion among these spheres.
The resulting camera path is displayed in Fig. 8a, with its translational and rota-
tional iterations plotted in Fig. 8d, e. Related elliptical projections in Fig. 8b and
a selected few of them in Fig. 8c show perfect occlusion avoidance and satisfac-
tion of camera FOV limits. We use the strategy in Sect. 4.3 with path length =

52
T. Shen and G. Chesi
(a) Planned camera path
0
200
400
600
800
0
100
200
300
400
500
600
(b) Planned image trajectories satisfying
occlusion avoidance and FOV limits
0
200
400
600
800
0
100
200
300
400
500
600
(c) Partial image projections showing per-
fect constraints satisfaction
(d) Planned iteration of translation
0
20
40
60
80
100
−1
−0.5
0
0.5
1
iteration
rotation [rad]
r1
r2
r3
(e) Planned iteration of rotation
(f) Servoed camera translation
0
200
400
600
800
−1
−0.5
0
0.5
1
iteration
rotation [rad]
r1
r2
r3
(g) Servoed camera rotation
−15 −10 −5
0
5
0
10
20
0
5
10
F*
x [cm]
z [cm]
Fo
y [cm]
0
20
40
60
80
100
−20
−10
0
10
20
iteration
translation [cm]
x
y
z
0
200
400
600
800
−20
−10
0
10
20
iteration
translation [cm]
x
y
z
Fig. 8. Visual servoing path-planning with three spheres

Visual Servoing Path-Planning with Elliptical Projections
53
36.1924 and segment length = 1.4477 to track the planned trajectories in Fig. 8b
and plot the recorded servo data in Fig. 8f, g. Compared to the planned ones
in Fig. 8d, e, it can been seen that the servoed camera path follow closely the
planned one. Therefore, the servoed image trajectories will also follow up the
planned ones in Fig. 8b, satisfying all of the considered constraints.
6
Conclusions
This chapter proposes a path planning approach for visual servoing with ellip-
tical projections. The problem consists of planning a trajectory that ensures
the convergence of elliptical projections to their desired/reference view while
satisfying target visibility and workspace constraints. Moment-based features
are constructed from these elliptical projections. Constraints required by the
usage of moment-based features are much more demanding than that of pixel
coordinates of some representational points. We propose to parametrize these
constraints into polynomial inequalities with some common variable coeﬃcients
to be optimized. Based on a well-planned path, we introduce a new scheme to
follow closely the planned elliptical trajectories. Simulation results of two main
situations validate the proposed approach. In the ﬁrst situation, two intersected
circles are observed. In the second situation, it is supposed that at least three
spheres are observed. Both of them demonstrate excellent performance. In the
future, it is also worth exploring other primitives such as cylinders. Another
possibility is to compare the robustness of diﬀerent moment-based features to
errors in calibration and image noise.
Acknowledgements. This work is supported by Hunan Provincial Natural Science
Foundation of China (Grant No. 2017JJ3211).
References
1. Chaumette, F.: De la perception `a l’action: l’asservissement visuel; de l’action `a
la perception: la vision active. Habilitation `a diriger les recherches, Habilitation `a
diriger des recherches Universit´e de Rennes 1 (1998)
2. Chaumette, F.: Potential problems of stability and convergence in image-based and
position-based visual servoing. In: Kriegman, D., Hager, G., Morse, A.S. (eds.) The
Conﬂuence of Vision and Control. LNCIS, vol. 237, pp. 66–78. Springer, Heidelberg
(1998)
3. Chaumette, F.: Image moments: a general and useful set of features for visual
servoing. IEEE Trans. Robot. 20(4), 713–723 (2004)
4. Chaumette, F., Hutchinson, S.: Visual servo control, part I: basic approaches. IEEE
Robot. Autom. Mag. 13(4), 82–90 (2006)
5. Chesi, G., Hashimoto, K.: A simple technique for improving camera displacement
estimation in eye-in-hand visual servoing. IEEE Trans. Pattern Anal. Mach. Intell.
26(9), 1239–1242 (2004)
6. Chesi, G., Hashimoto, K. (eds.): Visual Servoing via Advanced Numerical Methods.
Springer, Heidelberg (2010)

54
T. Shen and G. Chesi
7. Chesi, G., Shen, T.: Conferring robustness to path-planning for image-based con-
trol. IEEE Trans. Control Syst. Technol. 20(4), 950–959 (2012)
8. Chum, O., Pajdla, T., Sturm, P.: The geometric error for homographies. Comput.
Vis. Image Underst. 97(1), 86–102 (2005)
9. Collewet, C., Marchand, E.: Luminance: a new visual feature for visual servo-
ing. In: Chesi, G., Hashimotos, K. (eds.) Visual Servoing via Advanced Numerical
Methods. LNCIS, vol. 401, pp. 71–90. Springer, Heidelberg (2010)
10. Cowan, N., Weingarten, J., Koditschek, D.: Visual servoing via navigation func-
tions. IEEE Trans. Robot. Autom. 18(4), 521–533 (2002)
11. Dhome, M., Richetin, M., Lapreste, J.T.: Determination of the attitude of 3d
objects from a single perspective view. IEEE Trans. Pattern Anal. Mach. Intell.
11(12), 1265–1278 (1989)
12. Hartley, R.I.: In defense of the eight-point algorithm. IEEE Trans. Pattern Anal.
Mach. Intell. 19(6), 580–593 (1997)
13. Hashimoto, K., Kimoto, T., Ebine, T., Kimura, H.: Manipulator control with
image-based visual servo. In: 8th IEEE International Conference on Robotics and
Automation, pp. 2267–2272. San Francisco, CA (1991)
14. Latombe, J.C.: Robot Motion Planning. Kluwer Academic Publisher (1991)
15. M. Kazemi, K.G., Mehrandezh, M.: Path-planning for visual servoing: A review
and issues. In: Chesi, G., Hashimotos, K. (eds.) Visual Servoing via Advanced
Numerical Methods. LNCIS, vol. 401, pp. 189–207. Springer, Heidelberg (2010)
16. Mezouar, Y., Chaumette, F.: Path planning for robust image-based control. IEEE
Trans. Robot. Autom. 18(4), 534–549 (2002)
17. Nister, D.: An eﬃcient solution to the ﬁve-point relative pose problem. IEEE Trans.
Pattern Anal. Mach. Intell. 26(6), 756–770 (2004)
18. Safaee-Rad, R., Tchoukanov, I., Smith, K.C., Benhabib, B.: Three-dimensional
location estimation of circular features for machine vision. IEEE Trans. Robot.
Autom. 8(5), 624–640 (1992)
19. Shen, T., Chesi, G.: Visual servoing path-planning with spheres. In: 9th Interna-
tional Conference on Informatics in Control. Automation and Robotics, pp. 22–30.
Italy, Rome (2012)
20. Shen, T., Chesi, G.: Following a straight line in visual servoing with elliptical pro-
jections. In: 13th International Conference on Informatics in Control, Automation
and Robotics. pp. 47–56. Lisbon, Portugal (2016)
21. Tahri, O., Chaumette, F.: Complex objects pose estimation based on image
moment invariants. In: 22th IEEE International Conference on Robotics and
Automation. pp. 438–443. Barcelona, Spain (2005)
22. Tahri, O., Mezouar, Y., Chaumette, F., Araujo, H.: Visual servoing and pose esti-
mation with cameras obeying the uniﬁed model. In: Chesi, G., Hashimotos, K.
(eds.) Visual Servoing via Advanced Numerical Methods. LNCIS, vol. 401, pp.
231–252. Springer, Heidelberg (2010)
23. Tatsambon Fomena, R., Chaumette, F.: Visual servoing from spheres with para-
catadioptric cameras. In: 13th International Conference on Advanced Robotics.
Jeju, Korea (2007)
24. Taylor, C., Ostrowski, J.: Robust vision-based pose control. In: 17th IEEE Inter-
national Conference on Robotics and Automation. pp. 2734–2740. San Francisco,
CA (2000)
25. Triggs, B., McLauchlan, P., Hartley, R., Fitzgibbon, A.: Bundle adjustment-a mod-
ern synthesis. In: W. Triggs, A.Z., Szeliski, R. (eds.) Vision Algorithms: Theory
and Practice, LNCS, vol. 1883, pp. 298–372. Springer, Heidelberg (2000)

Fractional Models of Lithium-Ion Batteries with
Application to State of Charge
and Ageing Estimation
Jocelyn Sabatier2(B), Franck Guillemard1, Loic Lavigne2, Agnieszka Noury1,
Mathieu Merveillaut2, and Junior Mbala Francico2
1 PSA Groupe, 2 Route de Gisy, 78943 V´elizy-Villacoublay, France
2 IMS,
UMR 5218 CNRS, Bordeaux University,351 Cours de la Lib´eration, 33405 Talence,
France
jocelyn.sabatier@u-bordeaux.fr
Abstract. The lithium-ion batteries are currently used for a wide vari-
ety of mobile applications due to their high energy/power density and
operating voltage. However, they also suﬀer from some limitations that
force car manufacturers to associate them to a Battery Management Sys-
tem (BMS) that diagnoses and control the battery pack in real time. To
carry out an accurate battery diagnosis, the BMS uses models of each
cell in the pack. In this paper a two fractional models of lithium-ion
cell are proposed. They result from several simpliﬁcations of an elec-
trochemical model involving several partial diﬀerential equations. The
very low number of parameters in the simpler proposed model permits
their adjustment with a very simple procedure. It is then shown how this
model can be used for State of Charge (SOC) and ageing estimation. As
due to ageing cell and model behavior mismatch, a solution is proposed
to deﬁne if the model parameters adjustment is required.
Keywords: Fractional models · Fractional diﬀerentiation · Lithium-ion
batteries · SOC estimation · Ageing estimation
1
Introduction
Lithium-ion batteries have played a major role in the development of vehicle
electriﬁcation since the 2000s. They are currently considered to be the most
eﬃcient technology in this market. However, they are the cause of a number
of incidents and the safety of batteries presents a very important technical and
societal challenge [1]. To manage this safety problem, but also to keep these new
vehicles which are equipped with in good working order, car manufacturers must
integrate a reliable electrical energy storage management [2]. That is why, state
of charge (SOC) and state of health (SOH) estimators must be designed. To
design these estimators, dynamical models of the battery pack can be a valuable
tool.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_3

56
J. Sabatier et al.
Many models exist in the literature for this kind of batteries such as elec-
trochemical models [3–5], or purely electric models [6] or fuzzy models [7]. An
extensive analysis on lithium ion batteries modeling is proposed in [8]. In this
paper, fractional order models, models that can be described by fractional diﬀer-
ential equations [25,26], are proposed. These models result from simpliﬁcations
of an electrochemical model [4] that describes the battery behavior using partial
diﬀerential equations. Such an approach makes it possible to express the parame-
ters of the simpliﬁed model as a function of the dimensional and electrochemical
constants of the lithium-ion cell. This model has thus an important physical
meaning, unlike purely electric models proposed in the literature. Another inter-
est is the introduction of fractional diﬀerentiation that helps to describe some
parts of the model with a small number of parameters again directly related to
the electrochemical parameters of the battery. As shown on several electrochem-
ical devices [9–20], fractional diﬀerentiation permits to obtain models with a low
number of parameters.
This paper, an extended version of the paper presented at the ICINCO’2016
conference, proposes two models. The ﬁrst one, which is the most complex one,
is no more based on partial diﬀerential equations and permits a description
of the various internal variables of the cell. The second one, simpler, requires
the adjustment of only 3 parameters and a nonlinear law with a very simple
procedure. This last model is used to design a State Of Charge (SOC) and an
ageing estimator. As due to ageing cell and model behavior mismatch, a solution
is proposed to deﬁne if the model parameters adjustment is required.
2
Electrochemical Model Considered
The simpliﬁed model that will be presented in the sequel is based on lithium-ion
electrochemical presented in [3,4] that results in Newman’s modelling approach
[5]. This model is a pseudo 2D based on a representation of the cell such as in
Fig. 1.
In Fig. 1, the electrodes are seen as an aggregation of spherical particles (2D
representation) in which the Li+ ions are inserted. The ﬁrst spatial dimension of
this model, represented by variable x, is the horizontal axis. The second spatial
dimension is the particle radius.
The cell is constituted of three regions (two electrodes and a separator) that
imply four distinct boundaries at:
• x = 0 : negative electrode current collector;
• x
∈
]0; δn[
:
region 1, δn thickness negative carbon electrode (LixC6,
MCMB. . . );
• x = δn : negative electrode / separator interface;
• x ∈⌋δn; δn + δsep⌊: region 2, δsep thickness separator;
• x = δn + δsep : separator / positive electrode interface;
• x ∈⌋δn + δsep; L⌊: region 3, δp thickness positive electrode made of LiCoO2;
• x = L : positive electrode current collector.

Fractional Models of Lithium-Ion Batteries with Application . . .
57
Fig. 1. Pseudo 2D model of a Lithium-ion cell [3,4]
The two electrodes are assumed electrochemically porous. Regions 1 and 3 are
therefore constituted of a solid phase (electrode material) and a liquid phase
(electrolyte).
The cell is supposed supplied by a current I(t). The cell voltage denoted Ubatt(t)
is deﬁned by the relation
Ubatt (t) = φs (L, t) −φs (0, t) −Rf
A I (t)
(1)
where φs (L, t) and φs (0, t) are respectively the positive electrode potential at
abscissa x = L and the negative electrode potential at abscissa x = 0; Rf denotes
the contact resistance and A the electrodes surface. Note that all the parameters
used in the following equations are deﬁned in [3,4].
As described in [3,4], lithium concentration cs(x, r, t) evolution in the spher-
ical particle of radius r = Rs, is supposed described by the diﬀusion law,
∂cs
∂t = Ds
r2
∂
∂r

r2 ∂cs
∂r

 ∂cs
∂r

r=0 = 0
Ds
∂cs
∂r

r=Rs = −jLi
asF
.
(2)

58
J. Sabatier et al.
Lithium concentration ce(x, t) in the electrolyte is modeled by:
∂(εece)
∂t
= ∂
∂x

Deff
e
∂
∂xce

+ 1 −to
+
F
jLi,
(3)
with
∂ce
∂x

x=0
= ∂ce
∂x

x=L
= 0.
(4)
Charge conservation in the solid phase of each electrode is deﬁned by the Ohm’s
law:
∂
∂x

σeff ∂
∂xφs

−jLi = 0
(5)
with the following limit conditions at the current collectors
−σeff
−
∂φs
∂x

x=0
= σeff
+
∂φs
∂x

x=L
= I
A,
(6)
and the null current conditions at the separator:
∂φs
∂x

x=δn
= ∂φs
∂x

x=δn+δsep
= 0.
(7)
If φe(x, t) denotes the electrolyte potential, charge conservation in the elec-
trolyte is deﬁned by:
∂
∂x

κeff ∂
∂xφe

+ ∂
∂x

κeff
D
∂
∂x ln (ce)

+ jLi = 0,
(8)
with the limit conditions
∂φe
∂x

x=0
= ∂φe
∂x

x=L
= 0.
(9)
The four diﬀerential equations (2), (3), (5) and (8) that describe variables
cs,e, ce, φs, φe, variations are linked by the Butler-Volmer equation
jLi = asio

exp
αaF
RT η

−exp

−αcF
RT η
	
.
(10)
In (10), jLi is induced by overvoltage η, deﬁned by the potential diﬀerence
between the solid phase and the electrolyte and equilibrium thermodynamic
potential U:
η = φs −φe −U.
(11)
The equilibrium potential U is a function of the solid phase concentration
at the spherical particles. System input is the current I(t) in Eq. (6). System
output is the cell voltage given by relation (1).

Fractional Models of Lithium-Ion Batteries with Application . . .
59
3
From the Electrochemical Model to a Fractional
Dynamic Model
The electrochemical model previously presented is not real time implementable
in a car microcontroller. To solve this problem, as shown in [17–19], the following
assumptions were proposed:
Assumptions 1.
• the solid phase potentials are supposed constants in the two electrodes (due
to the low resistivity of electrode materials);
• the electrolyte potentials are constants in the two electrodes;
• current density jLi is supposed constant in each electrode;
• Butler-Volmer equation is supposed linear on the cell operating current;
• lithium concentration in the separator is supposed a linear function of x
around the initial value denoted Cei(x,0).
These assumptions have allowed the ﬁrst simpliﬁed model presented in Fig. 2,
in which electrochemical variables and parameters still appear (parameters phys-
ical meaning is often lost with an approach based on model reduction) but only
based on diﬀerential equations. This model is thus easier to implement in a car
controller than the electrochemical model. In Fig. 2 model, the transfer functions
Hcei(s), i ∈{n, p}, link the current I(s) to the electrolyte concentration at the
abscissa δn and δp and are deﬁned by:
Hcei (s) = Ce (δi, s)
I (s)
=
Kcei
1 +
s
ωcei
.
(12)
Transfer functions Hcsi,e (p), i ∈{n, p}, link the mean value of the lithium
current density in electrode, denoted JLi
i mean (s), to the lithium concentration
at the surface of the spherical particles. There are fractional transfer functions
deﬁned by:
Hcsi,e (s) =
csi,e (s)
JLi
i mean (s) =
K1i

1 +
s
ωcsei
0.5
s
.
(13)
Variables Csi 0, i ∈{n, p}, in Fig. 2 denote the initial lithium concentration in
the spherical particles. The linearized Butler-Volmer equation is deﬁned by:
jLi
i mean = asii0iF
RT
(αa + αc) ηi.
(14)
To obtain a simpler model, less microcontroller resources consuming, addi-
tional assumptions were proposed in [19].
Assumptions 2.
• lithium concentration in the electrolyte and in the separator is constant is
supposed constant;

60
J. Sabatier et al.
Fig. 2. Simpliﬁed model obtained
• the electrolyte potential is supposed constant at any SOC and such as:
φe (x, Soc) = φe moy = −0.1V .
Using this last hypothesis, the part of Fig. 2 model that represents the neg-
ative electrode contribution can be removed. The resulting model is a single-
electrode model represented in Fig. 3. This model is obtained by moving and
consolidating some blocks and by introducing the following parameters:
⎧
⎪
⎪
⎨
⎪
⎪
⎩
K1 =
K
Aδpcs max p with
K =
−3
RsF as =
1
F εs
K2 =
RT
AδpF (αa+αc)aspi0p + Rf
ωc = 9Dsp
R2
s
.
(15)
4
Parameters Estimation
According to Fig. 3, only three parameters and a non-linear law are required to
model the behaviour of a lithium-ion cell. These parameters can be obtained
with the unique test represented by Fig. 4. This test consists in a series of dis-
charges of 0.5 A.h since full charge (a decrease of around 7.1% on the SOC
for each discharge from 100%). The interval between two discharges is large

Fractional Models of Lithium-Ion Batteries with Application . . .
61
Fig. 3. Single-electrode model
enough to permit a measure of the open circuit voltage. The parameters estima-
tion method presented in the sequel is repeated for several state of charge and
several temperatures to check the dependence of the parameters to these two
variables.
4.1
Open Circuit Voltage Law Identiﬁcation
We suppose that the open circuit voltage can be described by the relation pro-
posed in [22]:
Up = U 0
p + RT
F ln

1−(Soc(x100p-x0p)+x0p)
(Soc(x100p-x0p)+x0p)

+

Np

k=0
Bk

(2 (Soc (x100p-x0p) + x0p) −1)k+1
−2(Soc(x100p-x0p)+x0p)k(1−(Soc(x100p-x0p)+x0p))
(2(Soc(x100p-x0p)+x0p)−1)1−k

.
(16)
Parameters Bk, x100p, x0p and U 0
p associated to relation (16) are respectively and
for the positive electrode, the interaction parameter in Redlich-Kister equation,
lithium insertion ratios at SOC 100 and 0%, and the standard equilibrium poten-
tial. These parameters are obtained through the minimization of a quadratic cri-
terion on the open circuit voltage measured on Fig. 4. For that, the open circuit
voltage is measured at rest (3600s without any solicitation) after each current
step that appears on Fig. 4. The variations of the open circuit voltage in relation
to SOC are thus obtained and the corresponding curve is ﬁtted by relation (16)
through the minimization of a quadratic criterion.
4.2
Estimation of Parameter K2
Parameter K2 models the instant resistance due to contact resistance and to
activation phenomenon inside the electrodes. As s tends towards inﬁnity, namely
as time tends towards 0, model in Fig. 3 reduces to U(s) = K2I(s) + U0/s (U0
being the open circuit voltage of the cell). As a consequence and as shown in
Fig. 5, if a constant current is applied to the cell, a voltage drop whose magnitude
is liked to parameter K2 appears. This is why Fig. 4 shows that this parameter
can be estimated on the cell voltage drop as a constant current is applied. K2 is
deﬁned as the ratio of the voltage drop by the value of the current applied.

62
J. Sabatier et al.
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
x 10
4
-6
-4
-2
0
Time(s)
Current (A)
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
x 10
4
3.7
3.8
3.9
Time(s)
Voltage (V)
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
x 10
4
60
80
100
Time(s)
SOC (%)
Fig. 4. Discharge test for parameters numerical values estimation of the single-electrode
model (only the ﬁrst discharges are shown on this ﬁgure)
4.3
Estimation of Parameter K1
If I(t) is a current step of amplitude Amp, then Laplace transform of Y (t) signal
(see Fig. 3) is deﬁned by:
Soc (s) = K1
s

1 + s
ωc
0.5 Amp
s
.
(17)
Final value theorem applied to the derivative of Y (t), leads to
lim
t→+∞
d (Y (t))
dt
= lim
s→0 s2 K1
s

1 + s
ωc
0.5 Amp
s
= K1Amp.
(18)
Relation (18) means that after some time characterized by the time constant
1/ωc, (namely in the area in black in Fig. 5), if a constant current is applied to
the cell, diﬀusion rate of Li+ ions in the solid phase becomes suﬃciently constant.
This results in a linear variation of the cell voltage if the input current is not too
high to avoid too rapid SOC variation (the open circuit voltage law can thus be
assimilated to a straight line). This linear variation appears in Fig. 5 and this is
why this ﬁgure deﬁnes the linear part of the step response as the time interval on
which parameter K1 can be estimated. Parameter K1 is thus the slope (divided
by Amp) of function Y (t) on the interval shown in Fig. 5, as a current step is
applied to the cell. Function Y (t) can be estimated using the inverse of the open
circuit voltage curve, parameter K2, and signals I(t) and U(t) being known.

Fractional Models of Lithium-Ion Batteries with Application . . .
63
0
5
10
15
20
25
30
35
40
3.76
3.78
3.8
3.82
3.84
3.86
3.88
3.9
3.92
Voltage (V)
Time (s)
Measure of K2
Measure of
c
Measure of K1
Fig. 5. Cell response to a step current and deﬁnitions of areas used for the identiﬁcation
of parameters K1, K2 and ωc
4.4
Identiﬁcation of Parameter ωc
As shown in [19], if a step input current of magnitude Amp is applied to model
in Fig. 4, variable w(t) is deﬁned by:
w (t) = K1Amp
ωc
⎛
⎝
0.5erf

(ωct)0.5
+tωcerf

(ωct)0.5
+ 0.5642(ωct)
eωct
⎞
⎠.
(19)
Signal w(t) can be obtained with a measure of U(t) using the parameter K2
computed in Sect. 4.2, value of csp0 and using the open circuit law obtained in
Sect. 4.1. Introducing function z (t) = w (t)/t, at a time
t0 = k
ωc
with
k ∈R+,
(20)
then
z (t0) = K1Amp
k
⎛
⎝0.5erf

 1
k
0.5
+ 1
kerf

 1
k
0.5
+
0.5642( 1
k)
e
1
k
⎞
⎠.
(21)
Thus, from the graph of z(t), t0 is the time at which z(t) is given by relation
(21), and from relation (20), the value of ωc is obtained. Note that k must be
chosen such that at time t0 the batteries state of charge is close to its initial
value and in the time interval on which the step response curvature appears (see
Fig. 5).
5
Model Validation
To validate the single electrode model and its associated parameters estimation
method, the charge cycle of Fig. 6 is applied to the model and to a 7 Ah real

64
J. Sabatier et al.
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
5500
-60
-40
-20
0
20
40
60
80
100
Time (s)
Current (A)
Fig. 6. Current cycle
lithium ion cell. During this cycle, state of charge cell varies form 80 to 20%.
Figure 7 shows a comparison of the cell voltage and of the model response. The
relative error between cell voltage and model response is also shown in Fig. 7.
These ﬁgures show that the model is very eﬃcient (less than 1.5% error). When
the state of charge is below 20%, error mean value increases but remains low
(less than 1%). Additional analyses can be found in [19].
6
State-of-Charge Estimation
Li-ion battery packs have to work together with reliable Battery Management
Systems (BMS) to ensure their optimal and safe use. Among the tasks ensured
by the BMS, State-Of-Charge (SOC) estimation is of crucial importance. To
obtain this information that cannot be measured, an output feedback based
observer was used involving the cell model of Fig. 3 is proposed. The Li-ion cell
is parameterized on the basis of a SAFT VL6P lithium-ion cell according to the
techniques exposed in Sect. 4.
For implementation issues, the transfer function K1 (1 + s/ωc)0.5/s in Fig. 3
is split into the sum of two transfer functions K1/s and H(s), with:
H (s) = K1
s

1 + s
ωc
0.5
−1

.
(22)

Fractional Models of Lithium-Ion Batteries with Application . . .
65
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
5500
3.3
3.4
3.5
3.6
3.7
3.8
3.9
Time (s)
Voltage (V)
Battery
Model
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
5500
-1.5
-1
-0.5
0
0.5
1
1.5
Time (s)
Relative error (%)
Fig. 7. Cell voltage variations / model response comparison for a current cycle and
relative error T = 25◦C
In order to adopt a linear approach in the observer design, the OCV is locally
reduced to its ﬁrst order approximation and represented by a SOC depending
gain G0. The controller in the observer is then designed to ensure satisfactory
performance for all the G0 gains. To take into account these gain variations,
a CRONE controller can be designed [23] [24]. The model voltage and SOC
Laplace transforms are thus given by:
U (s) = (SOC (s) + I (s) H (s)) G0 + I (s) K2,
(23)
and:
SOC (s) = I (s) K1
s + SOC0 (s)
where
SOC0 (s) = SOC0 (0)
s
.
(24)
The input I(s) and output U(s) are respectively the cell current and voltage.
The estimation errors are noted εU = Ucell −U for the voltage and εSOC =
SOC −S ˆOC for the SOC.
As shown by Fig. 8, to reduce εSOC, the model/cell output error can be used
to modify the model SOC through the controller CSOC.

66
J. Sabatier et al.
Fig. 8. SOC feedback observer
The estimated voltage and SOC are then given by
⎧
⎪
⎨
⎪
⎩
ˆU (s) =

S ˆOC (s) + I (s) H (s)

G0 + I (s) K2
εU (s) = G0εSOC (s)
S ˆOC (s) = I (s) K1
s + S ˆOC0 (s) + CSOC (s) εU
,
(25)
which gives:
SOC (s) =
1
1 + G0CSOC (s)ΔSOC0 (s) .
(26)
The equation linking the SOC estimation error to the voltage estimation
error in (26) shows that, as long as the model is well parameterized:
εU=0 ⇒εSOC = 0.
(27)
The designed observer has been validated using the cell real SOC and voltage
response to a dynamic hybrid drive cycle. Note that the << real >> SOC results
in coulomb counting validated at the end of each solicitation and after the cell
relaxation, by comparison of the real open circuit voltage versus the simulated
one. The controller CSOC(s) is a CRONE controller [23,24].
Figure 9 shows the estimation produced by the observer of Fig. 8. The initial
SOC for the cell was 80% and the initial SOC in the observer was 0. The mea-
surements were done at temperature T = 25◦C. The resulting SOC estimation
absolute error is represented in Fig. 9. This ﬁgure highlights the accuracy of the
estimated SOC with an absolute error less than 3%.

Fractional Models of Lithium-Ion Batteries with Application . . .
67
0
500
1000
1500
2000
-100
-50
0
50
100
Time (s)
Current (A)
0
500
1000
1500
2000
3.2
3.4
3.6
3.8
4
Time (s)
Voltage (V)
0
500
1000
1500
2000
-3
-2
-1
0
1
2
3
Time (s)
State-Of-Charge
Absolute error (%)
0
500
1000
1500
2000
20
30
40
50
60
70
80
Time (s)
State-Of-Charge (%)
Plant
Estimation
Fig. 9. SOC feedback observer validation, T = 25◦C
7
Aging Monitoring Through Open Circuit Voltage
(OCV) Curve Modelling and Adjustment
At battery aging, the OCV curve changes, as OCV reﬂects battery aging and
performance degradation [27]. The impact of aging on cell equilibrium voltage is
analyzed in [28]. This change distorts the estimator if nothing is done to adjust
the curve law. Taking into the underlying physical phenomenon of lithium-ion
intercalation process, permits an analytical description of the OCV curve and
the implementation of accurate estimation methods for both SOC and State of
Health (SOH).
Expansion of relation (23) shows that OCV can be deﬁned by the following
polynomial:
U =
N

k=0
Dinit
k
SOCk.
(28)
To take into account ageing impact on the OCV, [21][23] demonstrate that a
parameter α (age), depending on cell age, can be introduced thus leading to:
U =
N

k=0
Dk (α (age) SOC (t) + 1 −α (age))k.
(29)
To validate this approach, an OCV curve for a new cell is ﬁrst ﬁtted by relation
(28) (see blue curve in Fig. 10). After ageing, the cell OCV is measured and
ﬁtted, though optimization of parameter ¯α (age), by relation (29) (see orange
curve in Fig. 10). Figure 10 shows the eﬃciency of the parametrization given by
relation (29) and also shows that the proposed optimization leads to a reliable
reconstruction of the OCV curve over a wide range of SOC.

68
J. Sabatier et al.
0
10
20
30
40
50
60
70
80
90
100
3.3
3.4
3.5
3.6
3.7
3.8
3.9
4
SOC (%)
E (V)
Fig. 10. Identiﬁcation of the OCV after two years calendar ageing
Several other tests have been done for various cells at various ageing to evaluate
parameter α (age) variations according to cell aging. These analysis have revealed
that the higher is a cell age, and the higher is α (age). Thus parameter α (age)
permits the OCV curve adjustment as cell aging and can also be viewed as a
SOH indicator or a capacity fade indicator. As parameter K1 is directly linked
to the cell capacity, it can be adjusted with parameter α (age) as cell ageing.
8
Model Parameter Adjustment as Ageing
Model proposed in Sect. 3 allows an accurate characterization of the dynamic
behavior of the cell at a given time. Section 7 has shown that this accuracy is
aﬀected by ageing as OCV curve is modiﬁed by ageing. Parameters K1, K2 and
ωc in this model will also gradually become inadequate, resulting in drifts in the
accuracy of the algorithms using it (for instance SOC estimation). It is therefore
essential to have a method evaluating the validity of the model of a cell and
indicating, the need to recalibrate it.
A method consists in measuring the errors (deviations) between the voltage
cell Ucell(t) and the voltage model U(t) on the same time interval and integrating
this error on all the samples (here N samples at time tk) in order to have
an overall measurement of the error. Numerically, this leads to the following

Fractional Models of Lithium-Ion Batteries with Application . . .
69
Fig. 11. Computation of εU for various behavioural gaps between a cell and its model
calculation:
εU = 1
N
N

k=1
|Ucell (tk) −U (tk)|.
(30)
If this error exceeds a user ﬁxed threshold, the model can be considered as
mismatched and the calibration method described in Sect. 4 must be restarted.
To illustrate the idea, relation (30) is applied using voltages computed from the
single electrode model of Fig. 3 on a time interval of 400 s with a sampling period
of 0.01s. The model parameters are supposed given by:
• α (age) = 1;
• ωc = 2.10−3rd/s ;

70
J. Sabatier et al.
• K1 = 0.00194
• K2 = 2.10−3Ω.
The cell voltage variations are also computed with this model but using the
following parametric variations (to simulate the mismatch of the model and the
cell behaviour):
• α (age) ∈[1, 1.1, 1.2, 1.3, 1.4, 1.5] ;
• ωc = 10−3x [2, 9.6, 17.2, 24.8, 32.4, 40] rd/s;
• K1 = (7 −0.5α (age)) /3600
• K2 = 10−3x [2, 4, 6, 8, 10] Ω;
Figure 11 shows that the higher is the diﬀerence between the dynamic behaviour
of the cell and of the model, and the higher is the value of. It can be considered
as a mismatch indicator, which imposes the model parameter adjustment using
method proposed in Sect. 4, over a user deﬁned level.
9
Conclusion
Fractional diﬀerentiation and fractional models are now widely used to model
systems that exhibits long memory behaviours or systems in which diﬀusion
phenomena take place. This is exactly the case with lithium ion batteries with the
diﬀusion of Li+ ion inside the electrodes. This paper thus proposes two models
for a lithium-ion cell in which fractional transfer functions are used and that are
deduced from an electrochemical model after several assumptions. Due to the
approach used, several internal variables in the ﬁrst model (the most complex),
are real electrochemical variable and its parameters are directly correlated to the
dimensional and electrochemical constants of the lithium-ion cell. The second
model (the simpler one) only requires the tuning of three parameters and a
nonlinear law (to model the cell open circuit voltage). This model can be easily
implemented in a car controller and its accuracy is proved. It is used to design
a state of charge and an ageing indicator.
The authors are now currently working to associate a thermal model to the
proposed models.
Acknowledgements. This work took place in the framework of the Open Lab Elec-
tronics and Systems for Automotive combining IMS laboratory and PSA Groupe com-
pany.
References
1. Farrington, M.D.: Safety of lithium batteries in transportation. J. Power Sources
96(N◦1), 260–265 (2001)
2. Chatzakis, J., Kalaitzakis, K., Voulgaris, N.C., Manias, S.N.: Designing a new
generalized battery management system. IEEE Trans. Ind. Electron. 50(5), 990–
999 (2003)

Fractional Models of Lithium-Ion Batteries with Application . . .
71
3. Kandler, A.S., Rahn, D.C., Wang, C.: Model-Based electrochemical estimation and
constraint management for pulse operation of lithium ion batteries. IEEE Trans.
control Syst. Technol. 18(N◦3), 654–663 (2010)
4. A. S. Kandler, Electrochemical Modeling, Estimation and Control of lithium-ion
batteries, Pennsylvania University Ph.D. thesis (2006)
5. Newman, J., Thomas-Alyea, K.E.: Electrochemical Systems, 3rd edn. Wiley (2004)
6. Buller, S., Thele, M.: De Doncker R. W. A. A., Karden E., Impedance-Based
simulation models of supercapacitors and Li-Ion Batteries for power electronic
Applications. IEEE Trans. Ind. Appl. 11(3), 742–747 (2005)
7. Singh, P., Vinjamuri, R., Wang, X., Reisner, D.: Design and implementation of a
fuzzy logic-based state-of-charge meter for Li-ion batteries in portable deﬁbrilla-
tors. J. Power Sources 162, 829–836 (2006)
8. Sikha, G., White, R.E., Popov, B.N.: A mathematical model for lithium-ion bat-
tery/electrochemical Capacitor hybrid System. J. Electrochem. Soc. A1682–A1693
(2005)
9. Sabatier, J., Aoun, M., Oustaloup, A., Gregoire, G., Ragot, F., Roy, P.: Fractional
system identiﬁcation for lead acid battery sate charge estimation. Signal Process.
J. 86(N◦10), 2645–2657 (2006)
10. Cugnet, M., Laruelle, S., Grugeon, S., Sahut, B., Sabatier, J., Tarascon, J.M.,
Oustaloup, A.: A mathematical model for the simulation of new and aged auto-
motive lead-acid batteries. J. Electrochem. Soc. 156(12), A974–A985 (2009)
11. Cugnet, M., Sabatier, J., Laruelle, S., Grugeon, S., Chanteur, I., Sahut, B.,
Oustaloup, A., Tarascon, J.-M.: A solution for lead-acid battery global state esti-
mation. ECS Trans. 19(n◦25), 77–88 (2009)
12. Bertrand, N., Sabatier, J., Briat, O., Vinassa, J.M.: Fractional Non-Linear mod-
elling of ultracapacitors. Commun. Nonlinear Sci. Numer. Simul. 15(5), 1327–1337
(2010)
13. Sabatier, J., Cugnet, M., Laruelle, S., Grugeon, S., Sahut, B., Oustaloup, A., Taras-
con, J.M.: A fractional order model for lead-acid battery crankability estimation.
Commun. Nonlinear Sci. Numer. Simul. 15(5) (2010)
14. Cugnet, M., Sabatier, J.: S. laruelle, S. Grugeon, B. Sahut, A. Oustaloup, J.M.
Tarascon - Lead-acid battery fractional modeling associated to a model valida-
tion method for resistance and cranking capability estimation. IEEE Trans. Ind.
Electron. 57(3), 909–917 (2010)
15. Bertrand, N., Sabatier, J., Vinassa, J.M., Briat, O.: Embedded fractional nonlinear
supercapacitor model and its parametric estimation method. IEEE Trans. Ind.
Electron. 57(12), 3991–4000 (2010)
16. Bertrand, N., Sabatier, J., Briat, O., Vinassa, J.M.: An implementation solution
for fractional partial diﬀerential equations. Math. Probl. Eng. (2013). available on
line at www.hindawi.com/journals/mpe/aip/795651.pdf
17. Sabatier, J., Merveillaut, M., Francisco, J., Guillemard, F.: Lithium-ion batteries
modelling involving fractional diﬀerentiation. J. power sources, J. Power Sources
262C, 36–43 (2014)
18. J.M. Francisco, J. Sabatier, L. Lavigne, F. Guillemard, M. Moze, M. Tari, M. Mer-
veillaut, A. Noury.: Lithium-ion battery state of charge estimation using a frac-
tional battery model, IEEE International Conference on Fractional Diﬀerentiation
and its Applications, 23–25 (June 2014), Catania, Italy
19. J. Sabatier, J. Francisco, F. Guillemard, L. Lavigne, M. Moze, M. Merveillaut.:
Lithium-ion batteries modelling: a simple fractional diﬀerentiation based model
and its associated parameters estimation method, Signal Processing, pp. 290–301
(2015)

72
J. Sabatier et al.
20. Lavigne, L., Sabatier, J., Mbala Francisco, J., Guillemard, F., Noury, A.: Lithium-
ion open circuit voltage (OCV) curve modelling and its ageing adjustment. J.
Power Sources (n◦324), 694–703 (2016)
21. L. Lavigne, J. Sabatier, J. Mbala Francisco, F. Guillemard, A. Noury.: Lithium-ion
Batteries Aging Monitoring Through Open Circuit Voltage (OCV) Curve Mod-
elling and Adjustment, 12th International Conference on Informatics in Control,
Automation and Robotics, ICINCO 29–31 (July 2016), Lisbon, Portugal
22. Karthikeyan, D.K., Sikha, G., White, R.E.: Thermodynamic model development
for lithium intercalation electrode. J. power sources (N◦185), 1398–1407 (2008)
23. Sabatier, J., Oustaloup, A., Garcia, A., LANUSSE, P.: CRONE control: Princi-
ples and extension to time-variant plants with asymptotically constant coeﬃcients.
Nonlinear Dyn. 29(N◦1–4), 363–385 (2002)
24. Oustaloup, A., Lanusse, P., Sabatier, J., Melchior, P.: Crone control : principles,
extensions and applications. J. Appl. Nonlinear Dyn. 2(N◦3), 207–223 (2013)
25. Agrawal, O.P., Machado, J.A.T., Sabatier, J.: Nonlinear Dynamics: introduction.
Nonlinear Dyn. 38(N◦1–4), 1–2 (2004)
26. Podlubny, I.: Fractional Diﬀerential Equations. Academic Press, Mathematics in
Sciences and Engineering (1999)
27. Roscher, M.A., Assfalg, J., Bohlen, O.S.: Detection of utilizable capacity deterio-
ration in battery systems. IEEE Trans. Veh. Technol. 60, 98–103 (2011)
28. Schmidt, J.P., Tran, H.Y., Richtera, J., Ivers-Tiﬀ´eea, E., Wohlfahrt-Mehrensb, M.:
Analysis and prediction of the open circuit potential of lithium-ion cells. J. Power
Sources 239, 696–704 (2013)

Co-operation of Biology Related Algorithms
for Solving Opinion Mining Problems by Using
Diﬀerent Term Weighting Schemes
Shakhnaz Akhmedova(B), Eugene Semenkin, and Vladimir Stanovov
Reshetnev Siberian State University of Science and Technology, Krasnoyarsk,
Russian Federation
shahnaz@inbox.ru, eugenesemenkin@yandex.ru , vladimirstanovov@yandex.ru
Abstract. Automatically generated data mining tools namely artiﬁcial
neural networks, support vector machines and fuzzy rule-based classi-
ﬁers, using diﬀerent term weighting schemes as data pre-processing tech-
niques for opinion mining problems are presented. Developed collective
nature-inspired self-tuning meta-heuristic for solving unconstrained and
constrained real- and binary-parameter optimization problems called Co-
Operation of Biology Related Algorithms was used for classiﬁers design.
Three Opinion Mining problems from DEFT’07 competition were solved
by proposed classiﬁers. Obtained results were compared between them-
selves and with results obtained by methods which were proposed by
other researchers. As the result, workability and usefulness of designed
classiﬁers were established and best data processing approach for them
was found.
Keywords: Opinion mining · Fuzzy rule-based classiﬁers · Support
vector machines · Neural networks · Bionic algorithms
1
Introduction
Opinion mining problems are the problems of determining the judgement of a
speaker about a particular topic. This kind of problem is also called sentiment
analysis, and for example, can be found in the analysis of a person’s opinion
through a document [1]. The person’s attitude may be described as an emo-
tional state, judgement or evaluation. A typical approach is to use terms which
explicitly express the person’s opinion, for example, a “positive” or “negative”
review.
One of the applications of these opinion smining algorithms is the monitoring
of astronauts’ emotional states and hidden misunderstandings during a long-term
space mission. For this aim, an opinion mining model can be implemented on
Earth using a set of data obtained during experiments and then included in an
on-board and/or ground-based control system for monitoring and controlling the
mission.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_4

74
S. Akhmedova et al.
Nowadays various techniques are developed for solving opinion mining prob-
lems, for example latent semantic analysis, “bag of words” and other machine
learning algorithms [2]. But it is well known that the way that documents are
represented inﬂuences on the performance of the text classiﬁcation (opinion min-
ing problems can also be considered as text categorization problems) algorithms
[3].
In this study the fuzzy rule-based classiﬁers, artiﬁcial neural networks (ANN)
and support vector machines (SVM) generated by a meta-heuristic called Co-
Operation of Biology Related Algorithms (COBRA) [4] and its modiﬁcations
for solving constrained and unconstrained real or binary-parameter optimization
problems are described. The COBRA approach is based on the cooperation of
ﬁve bionic algorithms: Particle Swarm Optimization (PSO) [5], Wolf Pack Search
(WPS) [6], the Fireﬂy Algorithm (FFA) [7], the Cuckoo Search Algorithm (CSA)
[8] and the Bat Algorithm (BA) [9]. The workability and reliability of COBRA
was shown in [4] on a set of benchmark functions.
Thus the mentioned data mining methods were used with eleven diﬀerent
text pre-processing techniques for solving three opinion mining problems which
were taken from the DEFT’07 competition [10]. The best combinations of a
text pre-processing technique and classiﬁer for each problem were found. The
rest of this paper is organized as follows. In the second section developed meta-
heuristic COBRA and its modiﬁcations are presented. Section 3 describes the
fuzzy rule-based [11], ANN-based and SVM-based classiﬁers design by mentioned
optimization tools. In the next section the term relevance estimation for text
categorization problems is explained. Section 5 demonstrates the workability of
the optimization meta-heuristics within the fuzzy rule-based, ANN-based and
SVM-based classiﬁers design for three opinion mining problems from DEFT’07
competition. Conclusion section contains the results discussion and the further
research directions consideration.
2
Co-Operation of Biology Related Algorithms
Existing bionic or nature-inspired algorithms, such as Particle Swarm Optimiza-
tion or Fireﬂy Algorithm, started the demonstration of their power dealing with
tough optimization problems and even NP-hard problems. Five well-known algo-
rithms, which were chosen due to the similarity of their schemes, such as Particle
Swarm Optimization (PSO) [5], Wolf Pack Search (WPS) [6], the Fireﬂy Algo-
rithm (FFA) [7], the Cuckoo Search Algorithm (CSA) [8] and the Bat Algorithm
(BA) [9] were used for the development of the collective meta-heuristic.
Each of the mentioned bionic algorithms was originally developed for solv-
ing real-parameter unconstrained optimization problems and imitates a nature
process or the behavior of an animal group. For example, the Bat Algorithm is
based on the echolocation behavior of bats; the Cuckoo Search Algorithm was
inspired by the obligate brood parasitism of some cuckoo species by laying their
eggs in the nests of other host birds (of other species), and so on.
Thus the meta-heuristic approach Co-Operation of Biology Related Algo-
rithms or COBRA was originally developed for solving unconstrained real-valued

Co-operation of Biology Related Algorithms for Solving . . .
75
optimization problems [4]; and it is based on the collective work of PSO, WPS,
FFA, CSA and BA (hereafter referred to as the component-algorithms). The
basic idea of this approach consists in the generating of ﬁve populations which
are then executed in parallel cooperating with each other.
The algorithm COBRA is a self-tuning meta-heuristic so there is no need
to choose the population size for each component-algorithm. The number of
individuals in the population of each algorithm can increase or decrease depend-
ing on the ﬁtness value. More speciﬁcally, if the overall ﬁtness value has not
improved during a given number of iterations, then the size of each population
increases, and vice versa, if the ﬁtness value has constantly improved during a
given number of iterations, then the size of each population decreases.
There is also one more rule for adjusting the population size, whereby each
population can “grow” by accepting individuals removed from another popu-
lation. The population “grows” only if its average ﬁtness value is better than
the average ﬁtness value of all other populations. Therefore a “winner algo-
rithm” (an algorithm whose population has the best average ﬁtness value) can
be determined on each iteration. The described competition among component-
algorithms allows the largest resource (population size) to be presented to the
bionic algorithm most appropriated on the current generation.
Examples of the process of varying the population sizes for the rotated Schwe-
fel and Rastrigin benchmark functions are presented in the Figs. 1 and 2 respec-
tively. The vertical line “gen” in both ﬁgures demonstrates the iteration, on
which the best function value was obtained for a given benchmark problem by
COBRA.
With the aim of bringing up to date information on the best achievements to
all component-algorithms and preventing their preliminary convergence to their
own local optimum all populations communicate with each other. “Communica-
tion” was determined in the following way: populations exchange individuals in
Fig. 1. Process of varying the population sizes during solving the rotated Schewefel
benchmark problem

76
S. Akhmedova et al.
Fig. 2. Process of varying the population sizes during solving the Rastrigin benchmark
problem
such a way that a part of the worst individuals of each population is replaced
by the best individuals of other populations. Thus, the group performance of all
algorithms can be improved.
However, frequently the applied problems are deﬁned in discrete valued
spaces where the domain of the variables is ﬁnite. Therefore, a modiﬁcation
of COBRA called COBRA-b for solving unconstrained binary-parameter opti-
mization problems was introduced in [12]. Namely its component-algorithms
were adapted to search in binary spaces by applying a sigmoid transformation
[13] to the velocity components (PSO, BA) or coordinates (WPS, FFA, CSA)
to squash them into a range [0, 1] and to force the component values of the
positions of individuals to be 0’s or 1’s:
s (v) =
1
1 + exp (−v).
(1)
So the binarization of individuals in algorithms is conducted using the calcu-
lated value of the sigmoid function. After that a random number rand from the
range [0, 1] is generated and the corresponding component value of the position
of the individual is 1 if rand is smaller than s(v) and 0 otherwise.
Then COBRA’s modiﬁcation called COBRA-c for solving constrained real-
or binary-parameter optimization problems was also developed [14]. Three con-
straints handling methods were used for this purpose: dynamic penalties [15],
Deb’s rule [16] and the technique, which were introduced in [17]. Method pro-
posed in [18] was implemented to the PSO-component of COBRA; at the same
time other components were modiﬁed by implementing Deb’s rule followed by
calculating function values using dynamic penalties.
The performance of the algorithm COBRA and it’s modiﬁcations was eval-
uated on a set of benchmark problems with 5, 10 and 30 variables taken
from [18,19] and the experiments showed that all proposed optimization tech-
niques work successfully and are reliable on diﬀerent benchmarks. Besides,

Co-operation of Biology Related Algorithms for Solving . . .
77
the meta-heuristic COBRA and its modiﬁcation were compared with their
component-algorithms, and simulations and comparison showed that developed
meta-heuristics are superior to these bionic algorithms when the dimension grows
and complicated problems are solved.
3
Data Mining Tools with Co-Operation of Biology
Related Algorithms
3.1
Artiﬁcial Neural Networks
The artiﬁcial neural network (ANN) models have three primary components:
the input data layer, the hidden layer(s) and the output layer. Each of these
layers contains nodes and these nodes are connected to nodes at adjacent layers.
Also each node has its own activation function. Therefore, the number of hidden
layers, the number of nodes, which are also called neurons, and the type of
activation function on each node will be denoted as “ANN’s structure”.
Nodes in network are interconnected and each connection has a weight coef-
ﬁcient; the number of these coeﬃcients depends on the solving problem (number
of inputs) and the number of hidden layers and neurons. So networks with a more
or less complex structure usually have many weight coeﬃcients which should be
adjusted.
Thus, the neural networks’ structure design and weight coeﬃcients tuning
are considered as the solving of two unconstrained optimization problems: the
ﬁrst one with binary variables and the second one with real-valued variables.
Type of variables depends on the representation of the ANN’s structure and
coeﬃcients.
Previously in [20] the artiﬁcial neural network design with the COBRA app-
roach was described as follows. First of all, the maximum number of hidden
layers was equal to 5 and the maximum number of neurons on each hidden layer
was also equal to 5, so the overall maximum number of neurons was equal to 25.
Secondly, each node was represented by a binary string of the length 4. If the
string consisted of zeros (“0000”) then this node didn’t exist on the respective
layer. So, the whole structure of neural network was represented by a binary
string of the length 100 (25 × 4), and each 20 variables represented one hidden
layer. The number of the input neurons depended on the problem in hand, ANNs
had one output neuron.
And ﬁnally 15 well-known activation functions were used for nodes: sigmoidal
function, linear function, hyperbolic tangent function and others (the whole list
of used activation functions is given in [20]). For determining which activation
function will be used on a given node the integer that corresponds to its binary
string is calculated. E.g., if a neuron has the binary string “0110”, then the
integer is
0 × 20 + 1 × 21 + 1 × 22 + 0 × 23 = 6
(2)
and for this neuron we use the sixth activation function from mentioned list.

78
S. Akhmedova et al.
Thus the optimization method for unconstrained problems with binary vari-
ables COBRA-b was implemented for the best ANN’s structure selection and
the optimization method for unconstrained problems with real-valued variables
COBRA was applied for every structure weight coeﬃcients adjustment.
3.2
Support Vector Machines
Support vector machines (SVM) are linear classiﬁcation mechanisms, which rep-
resent examples from a training set as points in space mapped so that the exam-
ples of the separate categories are divided by a clear gap that is as wide as
possible [21]. New examples from a test set are then mapped into the same
space and predicted to belong to a category based on which side of the gap they
fall. So, SVM-based classiﬁers linearly divide examples from diﬀerent classes.
SVM is based on the maximization of the distance between the discriminating
hyper-plane and the closest examples. This maximization reduces the so-called
structural risk, which is related to the quality of the decision function. The
most discriminating hyper-plane can be computed by solving constrained real-
parameter optimization problem described in [21].
However, instances from diﬀerent categories are not always linearly separable,
and in this case SVM as a linear classiﬁer does not provide satisfying classiﬁcation
results. Boser et al. proposed the “kernel trick” approach to resolve this problem
[22]. The general idea is to map the original feature space to a higher-dimensional
feature space where the training set is linearly separable.
Thus, meta-heuristic COBRA and its modiﬁcation COBRA-c were used for
automatically design of the appropriate SVM-based classiﬁers for the problem
in hand.
3.3
Fuzzy Rule-Based Classiﬁers
The classiﬁcation problem can be described as a problem of creating a classiﬁer
C : RN →L, where C is the classiﬁer, RN is the feature space with N variables,
and L is the set of labels. Each vector in the feature space x = [x1, ..., xN]T ∈RN
is an object of the available sample.
The fuzzy logic-based classiﬁer consists of a number of rules Rm, m =
1,. . . ,M; where M is the number of rules:
Rm = IFx1is A1,j(m,1) and . . . and xNis AN,j(m,N) THEN Y is Lm
(3)
where Y is the output, Lm is the label for rule m, AN,j(m,N) is the fuzzy set
for the Nth feature, and j(m,N) is the number of fuzzy set for the mth rule
and the Nth feature. By this, the fuzzy rule base can be written as a matrix
J ∈NM×(N+1).
Matrix J contains only integer values – numbers of fuzzy sets and class labels,
so that the goal of ﬁnding the optimal matrix, encoding the rule base, can be
transformed into the integer or binary optimization problem. This problem can
be solved by a variety of methods, but in this work the modiﬁcation COBRA-b

Co-operation of Biology Related Algorithms for Solving . . .
79
Fig. 3. The graphical representation of the encoding
was used for optimizing the rule base structure. The maximum number of rules
was set to 10, and repeating rules were removed at the end.
To encode the elements of the matrix J into binary string, every element
of the matrix is encoded into several bits. In this study 3 fuzzy sets for each
feature plus the “Don’t Care” condition (DC) were used, so that each number
in the matrix was encoded by 2 bits: “00” means DC condition (feature is not
used), “01” is the ﬁrst fuzzy set, “10” and “11” are the second and third fuzzy
sets respectively. The class label was encoded by a binary string of length l,
which depends on the number of classes. The total number of binary variables,
therefore, is (2 × N + l) × M.
The “Don’t Care” condition (DC) means that for this variable in the partic-
ular rule value of the feature is ignored, i.e. this value does not participate in the
fuzzy inference procedure. Applying DC condition allows signiﬁcant decreasing
of the rule base complexity, as the rules with DC condition are simpler, general
and allow compact description of dependence.
In this study, each fuzzy set was described by a Gaussian function:
f (xi) = exp

−(xi −a)2
2σ2

,
(4)
where a is the mean value and σ is the variance. The graphical representation
of the encoding is presented in Fig. 3:
So, there are 2 parameters for each function and therefore 2 × 3 × N real-
valued parameters that have to be tuned. The original COBRA algorithm was
used to tune the parameters of the Gaussian functions.
The classiﬁcation procedure with a rule base is performed by deﬁning
the winner-rule. To deﬁne the winner-rule, for every rule Rm the minimum
min
i

μjm,n (xn)

of all membership values was calculated. The rule, having the
largest membership value was considered as a winner-rule; and the class number,
assigned to an object is the class number of the winner rule.

80
S. Akhmedova et al.
4
Term Relevance Estimation
Generally, text documents are not classiﬁed as sequences of symbols. They are
usually transformed into vector representation in so-called feature space because
most machine learning algorithms are designed for vector space models. The
document mapping into the feature space remains a complex non-trivial task.
The main aim of the data pre-processing is to reduce the dimensionality
of the feature space by controlling the size of the system’s vocabulary or the
number of terms. In some situations reducing the complexity of the task leads
to the improvement of the performance since this pre-processing makes the data
more uniform.
First during data pre-processing so called “stop-words” and “ignore-words”,
which usually contain prepositions, conjunctions, pronouns (the most frequent
words without semantical importance), are collected. Nowadays, researchers tend
to focus on the text pre-processing techniques which are able to automatically
detect these words and assign to them low enough weights so the machine learn-
ing algorithms would not be aﬀected by them. Second, all terms are normalized,
which means that words are converted into their basic forms and sometimes all
synonyms are replaced by one word.
Standard choice for text pre-processing is to identify terms as words appeared
in the document of train set. Thus text pre-processing techniques can be con-
sidered as term weighting schemes: calculating the weight of each word. The
term weighting methods can be roughly divided into two groups: supervised
and unsupervised methods. Almost all of them use the frequency of the term
occurring.
One of the most popular text pre-processing approaches among researchers
is the TF-IDF technique [23]. TF-IDF is based on multiplication of the term
frequency tfij (ratio between the number of times ith word occurs in the jth
document and the document size) and inverse document frequency idfi, which
were calculated as follows:
tfij =
ti
T
l=1
tl
,
(5)
idfi = log
|D|
ni

.
(6)
In these formulas where ti is the number of times the ith word occurs in the
jth document, T is the document size, |D| is the number of document in train
set and ni is the number of documents which have the ith word. Also another
variant of the idfi calculation was used:
idfi =
|D|
ni
α
, α ∈(0, 1) ,
(7)
where α is the parameter (in this study α = 0.1, α = 0.5,α = 0.9). Moreover
the last two formulas can be used with ni, which is calculated as the number of
times ith word appears in all documents from train set.

Co-operation of Biology Related Algorithms for Solving . . .
81
Maximum Strength (ConfWeight) is an alternative method to ﬁnd the word
weights [24]. This approach is not so common; however, it has an important
advantage: it implicitly does feature selection since all frequent words have zero
weights. The main idea of the method is that the feature f has a non-zero weight
in class c only if the f frequency in documents of the c class is greater than the
f frequency in all other classes. The main drawback of the ConfWeight method
is computational complexity. This method is more computationally demanding
than TF-IDF method because ConfWeight method requires statistical calcula-
tions such as Student distribution calculation and conﬁdence interval deﬁnition
for each word.
Additionally, in this study the term relevance estimation method called C-
values which was proposed and described in [25]. Its basic idea is that every word
that appears in the text has to contribute some value to a certain class. So, the
real number term relevance is assigned for each word; and this number depends
on the frequency of the word occurrence. The term relevance is calculated using
a modiﬁed formula of the fuzzy rule relevance estimation for the fuzzy classiﬁer.
The membership function has been replaced by word frequency in the current
class.
Let L be the number of classes; ni is the number of instances of the ith class;
Nji is the number of the jth word occurrence in all instances of the ith class;
Tji = Nji
ni is the relative frequency of the jth word occurrence in the ith class.
Rj = max
i
Tji, Sj = arg
	
max
i
Tji

is the number of class which we assign to the
jth word. The term relevance, Cj, is calculated in the following way:
Cj =
1
L

i=1
Tji
⎛
⎜
⎜
⎜
⎜
⎜
⎝
Rj −
1
L −1
L

i = 1
i ̸= Sj
Tji
⎞
⎟
⎟
⎟
⎟
⎟
⎠
.
(8)
Thus it was attempted to determine which of the term weighting schemes
mentioned is the most useful for solving Opinion Mining problems.
5
Experimental Results
The DEFT07 (“D´eﬁFouille de Texte”) Evaluation Package [10] has been used
for the application of algorithms and the comparison of results. For the testing of
the proposed approach three corpora were used: “Books”, “Video games” (here-
inafter just “Games”) and “Debates in Parliament” (hereinafter just “Debates”).
Descriptions of corpora are given in Table 1.
These corpora was divided into train (60%) and test (40%) sets by the orga-
nizers of the DEFT’07 competition and this partition has been retained to be
able to directly compare the performance achieved using the developed methods
with the algorithms of participants. The train and test set parameters of all
corpora are shown in Table 2.

82
S. Akhmedova et al.
Table 1. Test corpora
Corpus
Description
Marking scale
Books
3000 commentaries
about books, ﬁlms and
shows
0:unfavorable,
1:neutral, 2:favourable
Games
4000 commentaries
about video games
0:unfavorable,
1:neutral, 2:favourable
Debates
28800 interventions by
representatives in the
french assembly
0:against the proposed
law, 1:for it
Table 2. Corpora sizes
Corpus
Data set sizes
Classes (train
set)
Classes (test
set)
Books
Train size = 2074
0:309,
0:207,
Test size = 1386
1:615,
1:411,
Vocabulary = 52507
2:1150
2:768
Games
Train size = 2537
0:497,
0:335,
Test size = 1694
1:1166,
1:583
Vocabulary = 63144
2:874
2:779
Debates
Train size = 17299
Test size = 11533
0:10400,
0:6572,
Vocabulary = 59615
1:6899
1:4961
In order to apply the classiﬁcation algorithms, all words which appear in the
train set have been extracted. Then words have been brought to the same letter
case: dots, commas and other punctuation marks have been removed. It should
be mentioned that no other information related to the language or domain (no
stop or ignore word lists) has been used in the pre-processing.
The F-score value with β = 1 [26] was used for evaluating the obtained
results. The F-score depends on the “precision” and “recall” of each criterion.
F −score =

β2 + 1

× precision × recall
β2 × (precision + recall)
.
(9)
The classiﬁcation “precision” for each class is calculated as the number of cor-
rectly classiﬁed instances for a given class divided by the number of all instances
which the algorithm has assigned for this class. “Recall” is the number of cor-
rectly classiﬁed instances for a given class divided by the number of instances
that should have been in this class.

Co-operation of Biology Related Algorithms for Solving . . .
83
From the viewpoint of optimization, fuzzy rule-based classiﬁers for these
problems have from 50 to 70 binary variables for the rule base and from 18 to
24 real-valued variables for the membership function parameters [27]. For the
ﬁnal parameter adjustment of membership functions (for the best obtained rule
base) the maximum number of function evaluations was equal to 15000 [27].
From the viewpoint of optimization, the design of ANN-based classiﬁers for
the mentioned corpora requires solving optimization problems having from 115
to 120 real-valued variables for ANN weight coeﬃcients and 100 binary variables
for the ANN structure [28].
The results for all text categorization problems obtained by generated SVM-
based, ANN-based and fuzzy rule-based (FRBC) classiﬁers with diﬀerent term
weighting schemes are presented in Tables 3, 4 and 5.
Results obtained by ANN-based and SVM-based classiﬁers were ﬁrstly pre-
sented in [28], and results obtained by fuzzy rule-based classiﬁers with C-values
pre-processing technique were ﬁrstly presented in [27].
So the best classiﬁcation quality for the problem “Books” was provided with
the C-values approach for text pre-processing and Support Vector Machine gen-
erated with COBRA as a classiﬁcation method. This result is better than the
one obtained by the DEFT’07 participants although no term ﬁltering has been
used in the text pre-processing. The second best result for the “Books” corpora
was obtained by fuzzy rule-based classiﬁers generated by COBRA but with the
ConfWeight term weighting scheme. And ﬁnally the third best result for this
problem was obtained by the ANN-based classiﬁers also with the ConfWeight
data pre-processing technique.
For example, the following structure of the neural network with the best
obtained classiﬁcation result using the C-values pre-processing scheme for the
problem “Books” which had ﬁve hidden layers, three neurons on the ﬁrst layer,
four neurons on the third layer and ﬁve neurons on the other layers was given
in [28]:
Table 3. Results
obtained for corpus
“Books”
Books
SVM
ANN
FRBC
C-values
0.619
0.585
0.601
ConfWeight
0.588
0.613
0.614
Binary SUM
0.558
0.566
0.428
TF-IDF 1
0.580
0.554
0.514
TF-IDF 2
0.563
0.533
0.482
TF-IDF 3 0.1
0.577
0.518
0.465
TF-IDF 3 0.5
0.576
0.460
0.546
TF-IDF 3 0.9
0.558
0.505
0.520
TF-IDF 4 0.1
0.549
0.554
0.442
TF-IDF 4 0.5
0.559
0.551
0.548
TF-IDF 4 0.9
0.561
0.542
0.558

84
S. Akhmedova et al.
Table 4. Results
obtained for corpus
“Games”
Games
SVM
ANN
FRBC
C-values
0.696
0.692
0.705
ConfWeight
0.645
0.727
0.708
Binary SUM
0.682
0.653
0.694
TF-IDF 1
0.669
0.642
0.669
TF-IDF 2
0.661
0.649
0.661
TF-IDF 3 0.1
0.686
0.679
0.698
TF-IDF 3 0.5
0.660
0.643
0.620
TF-IDF 3 0.9
0.604
0.628
0.616
TF-IDF 4 0.1
0.691
0.701
0.685
TF-IDF 4 0.5
0.645
0.679
0.666
TF-IDF 4 0.9
0.657
0.552
0.603
Table 5. Results
obtained for corpus
“Debates”
Debates
SVM
ANN
FRBC
C-values
0.699
0.704
0.680
ConfWeight
0.714
0.709
0.714
Binary SUM
0.642
0.647
0.648
TF-IDF 1
0.638
0.640
0.605
TF-IDF 2
0.641
0.641
0.573
TF-IDF 3 0.1
0.661
0.646
0.658
TF-IDF 3 0.5
0.668
0.612
0.617
TF-IDF 3 0.9
0.669
0.643
0.585
TF-IDF 4 0.1
0.663
0.643
0.664
TF-IDF 4 0.5
0.665
0.601
0.622
TF-IDF 4 0.9
0.661
0.566
0.587
• The ﬁrst layer is (0000 0000 0011 1100 1100), i.e. neurons with the 3rd and
12th activation functions;
• The second layer is (0001 0111 1100 0111 1111), i.e., neurons with the 1st,
7th, 12th, and 15th activation functions;
• The third layer is (1011 0111 1110 1111 0000), i.e., neurons with the 11th,
7th, 14th, and 15th activation functions;
• The fourth layer is (0001 1001 0100 1101 1111), i.e., neurons with the 1st,
9th, 4th, 13th, and 15th activation functions;
• The ﬁfth layer is (0011 0110 1011 0101 1110), i.e., neurons with the 3rd, 6th,
11th, 5th and 15th activation functions.
For the problem “Games” ANN-based classiﬁers showed better results than
fuzzy rule-based and SVM-based classiﬁers. And again the best result achieved

Co-operation of Biology Related Algorithms for Solving . . .
85
by SVM-based classiﬁers was provided with the C-values pre-processing tech-
nique, while the best results achieved by ANN-based and fuzzy rule-based clas-
siﬁers were with the ConfWeight approach.
The best results for the problem “Debates” were obtained by all proposed
classiﬁers with the ConfWeight method. Moreover SVM-based and fuzzy rule-
based classiﬁers demonstrated the same result and outperformed neural net-
works.
It was established that generally the best term relevance scheme for SVM-
based classiﬁers is the C-values technique and the ConfWeight method was more
useful for neural networks and fuzzy rule-based classiﬁers.
Thus, the fuzzy rule-based classiﬁers proposed in this study as with the C-
values text pre-processing technique so with the ConfWeight method demon-
strated some of the best results for all opinion mining problems. An advantage
of the mentioned classiﬁcation technique is the interpretability of the obtained
results. For example, it was established that generally for the problem “Books”
the second attribute of instances is not important and can be ignored if instances
are negative or neutral commentaries.
Examples of the rule base for the problems “Books”, “Games” and “Debates”
obtained with C-values approach during one of the program runs are presented
in Tables 6, 7 and 8 respectively [27]. The presented rule bases are typical for
the solved problems. The following denotations are used: DC – feature does not
appear in a given rule, 1, 2 or 3 – the ﬁrst, the second or the third membership
function for a given feature is used, and the class identiﬁer is given in the last
column.
Let’s consider the problem “Games” as an example to demonstrate the inter-
pretability of the obtained results. Instance for this problem were described by a
class identiﬁer and 3 C-values attributes, namely by the 3 sums of the Cj values
of all words that occurred in this instance for the ﬁrst (“negative”), the second
(“neutral”) and the third (“positive”) classes respectively.
Thus for the given rule base for the “Games” problem the third linguistic
variable of instances was not important and could be ignored if instances were
Table 6. Example of the
rule base for the problem
“Books”
3
2
3
Positive
3
1
2
Neutral
3
DC
3
Negative
1
DC
3
Neutral
3
DC
2
Negative
3
2
1
Positive
DC
1
1
Positive
2
3
3
Neutral
DC
1
DC
Neutral
2
DC
3
Negative

86
S. Akhmedova et al.
Table 7. Example of the
rule base for the problem
“Games”
2
3
2
Neutral
2
2
DC
Negative
3
3
2
Positive
2
2
2
Neutral
2
3
3
Negative
3
1
2
Neutral
3
3
1
Neutral
DC
2
2
Neutral
1
1
3
Positive
3
DC
DC
Positive
Table 8. Example of the
rule base for the problem
“Debates”
2
1
against
DC
2
For
DC
3
For
2
3
For
3
2
Against
1
DC
Against
2
2
For
negative commentaries. Also in general if the third linguistic variable was about
0.3 then the instance was determined by the classiﬁer as “neutral commentary”.
And if the ﬁrst linguistic variable was about 0.7 then the instance was determined
by classiﬁer as “positive commentary”.
Figures 4, 5 and 6 demonstrate the membership functions of rules presented
in Table 7 for the features of the problem “Games” [27].
Table 9 contains the best results obtained with SVM-based, ANN-based
and fuzzy rule-based classiﬁers automatically generated by developed bionic
algorithms. There are also results obtained for the best submission of other
researchers for each corpus. The results for each corpus were ranked and then
the total rank was evaluated as a mean value. So the best results were obtained
by the method with the smallest total rank, and vice versa, and the worst results
were obtained by the method with the largest total rank value.
It should be noted that in Table 9 only the best combinations of text
pre-processing methods for developed algorithms are presented. In [29] results
obtained by k-nearest neighbors algorithm (k varied from 1 to 15) were pre-
sented. The best F-score achieved by k-NN classiﬁers (with kequal to 15) for
corpus “Books” was equal to 0.5593 and for corpus “Debates” it was equal to
0.695. But for problem “Games” k-NN algorithm outperformed SVM-based and
fuzzy rule-based classiﬁers generated by COBRA, its result was 0.7203. Thus the
proposed classiﬁcation methods outperformed almost all alternative approaches.

Co-operation of Biology Related Algorithms for Solving . . .
87
Fig. 4. The membership functions of rules for the ﬁrst feature for the “Games” problem
Fig. 5. The membership functions of rules for the second feature for the “Games”
problem
Fig. 6. The membership functions of rules for the third feature for the “Games” prob-
lem

88
S. Akhmedova et al.
Table 9. Results obtained for all corpora, comparison of the performance
Team or method
Books
(rank1)
Games
(rank2)
Debates
(rank3)
Rank
J.-M. Torres-Moreno
(LIA)
0.603 (4)
0.784 (1)
0.720 (1)
1
G. Denhiere (EPHE)
0.599 (5)
0.699 (7)
0.681 (7)
6
S. Maurel (CELI
France)
0.519 (9)
0.706 (6)
0.697 (6)
7
M. Vernier (GREYC)
0.577 (6)
0.761 (3)
0.673 (8)
5
E. Crestan (Yahoo !
Inc.)
0.529 (8)
0.673 (9)
0.703 (5)
8
M. Plantie (LGI2P)
0.472 (11)
0.783 (2)
0.671 (10)
9
A.-P. Trinh (LIP6)
0.542 (7)
0.659 (10)
0.676 (9)
10
M. Genereux (NLTG)
0.464 (12)
0.626 (11)
0.569 (13)
12
E. Charton (LIA)
0.504 (10)
0.619 (12)
0.616 (11)
11
A. Acosta (Lattice)
0.392 (13)
0.536 (13)
0.582 (12)
13
SVM + COBRA
0.619 (1)
0.696 (8)
0.714 (3)
4
ANN + COBRA
0.613 (3)
0.727 (4)
0.709 (4)
3
FRBC + COBRA
0.614 (2)
0.708 (5)
0.714 (2)
2
6
Conclusions
In this paper the meta-heuristic approach, called Co-Operation of Biology
Related Algorithms, and its modiﬁcations for solving unconstrained optimiza-
tion problems with binary variables (COBRA-b) and constrained optimization
problems (COBRA-c) were described. The proposed algorithms’ usefulness and
workability were established by their testing on sets of benchmark problems.
Then mentioned optimization methods were used for the automated design of
ANN-based, SVM-based and fuzzy rule-based classiﬁers. These approaches were
applied to three Opinion Mining problems which were taken from the DEFT’07
competition. For that purpose diﬀerent text pre-processing techniques were used.
Solving these problems is equivalent to solving big and hard optimization
problems where objective functions have many variables and are given in the
form of a computational program. The suggested algorithms successfully solved
all the problems of designing classiﬁers with competitive performance. A com-
parison with alternative classiﬁcation methods showed that proposed classiﬁers
designed by COBRA outperformed almost all of them.
Acknowledgements. The reported study was funded by Russian Foundation for
Basic Research, Government of Krasnoyarsk Territory, Krasnoyarsk Region Science
and Technology Support Fund to the research project No 16-41-243064\16.

Co-operation of Biology Related Algorithms for Solving . . .
89
References
1. Pang, B., Lee, L.: Opinion mining and sentiment analysis. Found. Trends Inf. Retr.
2(1–2), 1–135 (2008)
2. Pang, B., Lee, L., Vaithyanathan, Sh.: Thumbs up? Sentiment Classiﬁcation using
Machine Learning Techniques. In: Conference on Empirical Methods in Natural
Language Processing, pp. 79–86 (2002)
3. Ko, Y.: A study of term weighting schemes using class information for text clas-
siﬁcation. In: The 35th International ACM SIGIR Conference on Research and
Development in Information Retrieval, pp. 1029–1030 (2012)
4. Akhmedova, Sh., Semenkin, E.: Co-operation of biology related algorithms. In:
IEEE Congress on Evolutionary Computation, pp. 2207–2214 (2013)
5. Kennedy, J., Eberhart, R.: Particle swarm optimization. In: IEEE International
Conference on Neural networks, vol. IV, pp. 1942–1948 (1995)
6. Yang, Ch., Tu, X., Chen, J.: Algorithm of marriage in Honey Bees optimization
based on the wolf pack search. In: International Conference on Intelligent Pervasive
Computing, pp. 462–467 (2007)
7. Yang, X.S.: Fireﬂy algorithms for multimodal optimization. In: 5th Symposium on
Stochastic Algorithms, Foundations and Applications, pp. 169–178 (2009)
8. Yang, X.S., Deb, S.: Cuckoo Search via Levy ﬂights. In: World Congress on Nature
& Biologically Inspired Computing, pp. 210–214. IEEE Publications (2009)
9. Yang, X.S.: A new metaheuristic bat-inspired algorithm. Nat. Inspired Coop.
Strateg. Optim. Stud. Comput. Intell. 284, 65–74 (2010)
10. Actes de l’atelier DEFT’07, Plate-forme AFIA 2007, Grenoble, Juillet (2007).
http://deft07.limsi.fr/actes.php
11. Akhmedova, Sh., Semenkin, E., Stanovov, V.: Fuzzy Rule-based classiﬁer design
with co-operative bionic algorithm for opinion mining problems. In: Proceedings
of the 13th International Conference on Informatics in Control, Automation and
Robotics (ICINCO 2016) - Vol. 1, pp. 68–74, SciTePress, Lisbon, Portugal, 29–31
July 2016 (2016)
12. Akhmedova, Sh, Semenkin, E.: Data mining tools design with co-operation of biol-
ogy related algorithms. Adv. Swarm Intell. LNCS. 8794, 499–506 (2014)
13. Kennedy, J., Eberhart, R.: A discrete binary version of the particle swarm algo-
rithm. In: World Multi-conference on Systemics, Cybernetics and Informatics, pp.
4104–4109 (1997)
14. Akhmedova, Sh, Semenkin, E.: New optimization metaheuristic based on co-
operation of biology related algorithms. Vestnik. Bull. Sib. State Aerosp. Univ.
4(50), 92–99 (2013)
15. Eiben, A.E., Smith, J.E.: Introduction to Evolutionary Computation. Springer,
Berlin (2003)
16. Deb, K.: An eﬃcient constraint handling method for genetic algorithms. Comput.
Methods Appl. Mech. Eng. 186(2–4), 311–338 (2000)
17. Liang, J.J., Shang Z., Li, Z.: Coevolutionary Comprehensive Learning Particle
Swarm Optimizer. In: Congress on Evolutionary Computation, pp. 1505–1512
(2010)
18. Liang, J.J., Qu, B.Y., Suganthan, P.N., Hernandez-Diaz, A.G.: Problem Deﬁni-
tions and Evaluation Criteria for the CEC 2013 Special Session on Real-Parameter
Optimization. Zhengzhou China, and Technical Report, Nanyang Technological
University, Singapore, Technical Report, Computational Intelligence Laboratory,
Zhengzhou University (2012)

90
S. Akhmedova et al.
19. Mallipeddi, R., Suganthan, P.N.: Problem Deﬁnitions and Evaluation Criteria for
the CEC 2010 Competition on Constrained Real-Parameter Optimization. Tech-
nical report, Nanyang Technological University, Singapore (2009)
20. Akhmedova, Sh., Semenkin, E.: Co-operation of biology related algorithms meta-
heuristic in ANN-based classiﬁers design. In: IEEE World Congress on Computa-
tional Intelligence, pp. 462–467. IEEE Publications (2014)
21. Vapnik, V., Chervonenkis, A.: Theory of Pattern Recognition. Nauka, Moscow
(1974)
22. Boser, B., Guyon I., Vapnik, V.: A training algorithm for optimal margin classi-
ﬁers. In: Haussler, D. (ed.) 5th Annual ACM Workshop on COLT, pp. 144–152.
Pittsburgh (1992)
23. Salton, G., Buckley, C.: Term-weighting approaches in automatic text retrieval.
Inf. Process. Manag. 24(5), 513–523 (1988)
24. Soucy, P., Mineau, G.W.: Beyond TFIDF Weighting for Text Categorization in
the Vector Space Model. In: The 19th International Joint Conference on Artiﬁcial
Intelligence, pp. 1130–1135 (2005)
25. Gasanova, T., Sergienko, R., Minker, W., Semenkin, E., Zhukov, E.: A Semi-
supervised Approach for Natural Language Call Routing. In: SIGDIAL 2013 Con-
ference, pp. 344–348 (2013)
26. Van Rijsbergen, C.J.: Information Retrieval, 2nd edn. Butterworth, London (1979)
27. Akhmedova, Sh., Semenkin, E., Stanovov, V.: Fuzzy Rule-Based Classiﬁer Design
with Co-Operative Bionic Algorithm for Opinion Mining Problems. In: the 13th
International Conference on Informatics in Control, Automation and Robotics, pp.
68–74 (2016)
28. Akhmedova, Sh., Semenkin, E., Sergienko, R.: Automatically generated classiﬁers
for opinion mining with diﬀerent term weighting schemes. In: The 11th Interna-
tional Conference on Informatics in Control, Automation and Robotics, pp. 845–
850 (2014)
29. Gasanova, T., Sergienko, R., Akhmedova, Sh., Semenkin, E., Minker, W.: Opinion
Mining and Topic Categorization with Novel Term Weighting. In: 5th Workshop on
Computational Approaches to Subjectivity, Sentiment and Social Media Analysis,
Association for Computational Linguistics, pp. 84– 89 (2014)

Bifurcation Analysis and Active Control
of Surge and Rotating Stall in Axial Flow
Compressors via Passivity
Gholam-Reza Sari1(B), Ouassima Akhrif2, and Lahcen Saydy1
1 Electrical Engineering Department, Polytechnique Montreal, University of
Montreal, 2900 Boul. Edouard-Montpetit, Montreal, QC, Canada
gholam-reza.sari@polymtl.ca, lahcen.saydy@polymtl.ca
2 Electrical Engineering Department, Ecole de Technologie Superieure, University of
Quebec, 1100 Rue Notre-Dame O, Montreal, QC, Canada
ouassima.akhrif@etsmtl.ca
Abstract. Gas turbines are widely used nowadays in industries and
aeronautics. They have always suﬀered however from important aero-
dynamic instabilities, namely, rotating stall and surge which occur in
the compressor stage. These nonlinear instabilities can cause compo-
nent stress, lifespan reduction, noise, and vibration. Despite consider-
able eﬀorts to stabilize axial compressors at eﬃcient operating points,
preventing and suppressing rotating stall and surge are still challeng-
ing problems. In this work, we address issues concerning the modelling,
bifurcation analysis, stability and active control of these performance
limiting phenomena. The nonlinear surge and stall oscillations are simu-
lated using the Moore and Greitzer nonlinear model (the so-called MG3)
for constant speed axial compressors (CSACs) and are further analyzed
via Bifurcation Analysis For control purposes, the MG3 model is then
appended with a closed-couple valve actuator. Due to certain passivity
properties of this model, a robust multi-input multi-output passivity-
based control approach is applied to tackle the stabilization problem.
The main advantage of this approach is that robust stabilization and
high performance control can be achieved by simple control laws and
limited control eﬀorts. Analytical developments and time-domain simu-
lations demonstrate that the developed control laws can eﬀectively damp
out rotating stall and surge limit cycles by throttle and close-coupled
valve actuations. The robust performance of the controller is validated
in the presence of bounded mass ﬂow and pressure disturbances, as well
as model uncertainties.
Keywords: Robust passivity-based control · Axial compressor · Rotat-
ing stall and surge control · Close-coupled valve · Model uncertainty and
disturbance rejection
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_5

92
G.-R. Sari et al.
1
Introduction
Gas turbines are important, widespread, and reliable devices in the ﬁeld of power
generation, petrochemical industry, and aeronautics. Petroleum industries rely
on turbo compressor stations in the transportation of natural gas and chemical
industries require turbo machines to pressurize chemical products. The current
generation of aircraft habitually uses gas turbines to produce mechanical and
electrical power.
Gas turbines employ centrifugal and axial compressors which suﬀer from two
types of nonlinearities with diﬀerent natures: surge and rotating stall. Rotat-
ing stall is a non-axisymmetric perturbation that travels around the annulus of
the compressor, while surge is a violent limit-cycle in compressor characteristic
that can lead to a ﬂow reversal and large axial oscillations (see [1] for more
information). These unsteady aerodynamic nonlinearities are diﬃcult to pre-
dict accurately and can lead to catastrophic failure of the system due to large
mechanical or thermal loads on the diﬀerent parts of compressors. Despite the
considerable eﬀorts that have been made to investigate these phenomena, diﬀer-
ent aspects of the problem such as sensing, actuating and model-based control
are still challenging issues.
The approaches tackle the challenging problems being addressed in the lit-
erature such as: the impact of external perturbations, the lack of detailed para-
meters knowledge, and the absence of full-state feedback. They drive the control
from pressure and mass ﬂow measurements and use throttle and close-coupled
valve actuations.
From a control point of view, the active control of centrifugal compressors is
almost restricted to surge consideration because it is believed that rotating stall
has little eﬀect on centrifugal compressor performance [2]. Axial compressors,
which is the focus of this paper, suﬀer from both rotating stall and surge oscilla-
tions. Active surge control was ﬁrst introduced in the literature by Epstein et al.
[3] in 1989 by using a linear method. The main drawback of the method was the
limited operating region. The next eﬀorts were mostly based on nonlinear control
approaches. In comparison with surge control design in centrifugal compressors,
rotating stall and surge control in axial ﬂow compressors poses a challenging
problem due to several reasons. The ﬁrst key issue is that the precise estima-
tion of axial compressor’s model parameters, especially in the unstable zone,
is diﬃcult. Therefore, control approaches that require the knowledge of model
parameters and set some constraints on them cannot be robustly implemented.
Another issue is that the rotating stall, as a state of axial compressor model,
is experimentally diﬃcult to measure; and control methods that need full-state
feedback cannot practically overcome this problem (see [4] where the amplitude
of rotating stall is used to form feedback laws). Although the measurement of
mass ﬂow, as the second state of compressors’ model, is a challenge, it is sur-
mountable [5] and is frequently used in the literature to develop control design
methodologies [6]. The last, but not least, problem is the eﬀect of external dis-
turbances that can drive axial compressors toward instabilities (see [7] where
external perturbations are not included). Pressure and mass ﬂow disturbances

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
93
were ﬁrst taken into account in a compressor model by Simon and Valavani [8,9].
As demonstrated by Haddad et al., a feedback controller that does not consider
model uncertainties and external perturbations can have adverse eﬀects on com-
pression system performance by driving the compression system to a stalled
equilibrium or a surge limit cycle [10].
In this work, we utilize robust passivity based control (RPBC) to eﬀectively
stabilize nonlinear phenomena in compression systems. Passivity theory, which
provides an energy based perspective in control theory, has been the subject of
much research over the last decades ([11,12])). Basically, passive systems are
a class of processes that dissipate a certain type of physical or virtual energy
described by Lyapunov-like functions [13]. The concept of passivity especially
plays an important role in robust control. Since passive systems are easy to
control, the ﬁrst step in passive system theory is to render a process passive
via either feedback or feedforward. Suﬃcient robustness to model uncertainties,
parameter variations, and external disturbances can be ensured by passivity-
based control (PBC) which guarantees the passivity of the system for the whole
range of parameters. Achieving passivity with feedback is an appealing issue due
to its input-output concept. However, one of the major challenges in feedback
passiﬁcation designs is to make it constructive. The key part of the design pro-
cedure is to select a proper output satisfying the required conditions [12]. In
1991, Byrnes et al. ([11]) derived the conditions under which a nonlinear sys-
tem can be rendered passive via smooth state feedback and in 2009, Tsai and
Wu ([14]) presented a constructive method for robust PBC (RPBC) of a certain
class of weakly minimum phase nonlinear uncertain systems. They proposed a
control law that renders the system passive and asymptotically stabilizes the
closed loop system. We applied this procedure to control surge and stall of an
axial compressor in a preliminary paper [9].
From a modeling point of view, the nonlinear 2D model developed by Moore
and Greitzer ([15]) for constant speed axial compressors (CSACs) dominates
recent studies on rotating stall and surge control ([1]). The lumped parame-
ter Moore and Greitzer model (so-called MG3) is based on the ﬁrst harmonic
approximation of rotating stall. This model was developed using Galerkin proce-
dure applied to the original PDE form. In spite of the simple form of the model,
it can capture surge and rotating stall nonlinearities and qualitative behavior of
the system including bifurcations (see [15] for more information).
Remarkable eﬀorts channeled into augmenting MG3 in diﬀerent ways; among
them obtaining higher order accurate model and including the force of actuators
([16–18]). One of the most promising actuators is the close-coupled valve (CCV).
The early work of Dussourd in 1977 ([19]) and the work of Simon and Valavani
in 1991 ([20]) addressed CCV in compression system control. In 1998, Gravdahl
introduced an augmented MG3 model including CCV in error coordinates ([20]).
Recently, once again, this actuator attracted close attention of researchers in
surge control ([7,21,22]).
Gravdahl demonstrated that the two-state simpliﬁed form of MG3 including
CCV shows certain passivity properties and then applied PBC to develop a

94
G.-R. Sari et al.
surge controller([6]). This simple proportional PBC law eﬀectively stabilized
surge limit cycles. Although the controller was not able to damp out rotating
stall, it showed promise for suppressing this hard-to-control nonlinearity. This
interesting open problem was suggested as future work by Gravdahl.
Here, we address this problem and design a RPBC to suppress surge and
rotating stall in CSACs. The simple proportional and low order form of the
developed controller is the ﬁrst advantage of the applied method. It is not based
on full-state feedback (the square amplitude of rotating stall as the third state
of MG3 is practically hard to measure) and does not require the detailed knowl-
edge of model parameters, which cannot be accurately estimated. The controller
actuates the system with feedback from mass ﬂow and pressure rise by using
both the throttle valve and CCV. Simulation results corroborating the analyt-
ical developments demonstrate that the applied RPBC eﬀectively damps out
the developed rotating stall and stabilizes eﬃcient operating points (OPs) in the
presence of bounded external disturbances and model uncertainties. The utilized
approach eliminates surge limit cycles as well.
The rest of the paper is organized as follows. In Sect. 2, we start by reviewing
the Gravdahl model representing CSACs. We then use this model to study in
detail surge ans stall phenomena via time-domain simulations and bifurcation
analysis. We ﬁnally extend the MG3 model to include CCV actuation. Section 3
presents the control design and Sect. 4 reports time-domain simulations. Finally,
some conclusions about this work are drawn in Sect. 5.
2
Axial Compressors Models
In what follows, we ﬁrst present the model of MG3 for CSACs. Next, surge and
stall time-domain simulations are presented and bifurcation curves of MG3 are
reviewed. We then brieﬂy review Gravdahl model for CSACs including CCV and
throttle actuators.
2.1
MG3 for CSACs
MG3 is a low order state space model capturing rotating stall and surge phenom-
ena in CSACs. A basic compression system is shown in Fig. 3.1 [23]. is the total
upstream pressure of the compressor and is the static pressure in the plenum.
The ﬂow is assumed to be incompressible in the compressor and compressible
in the plenum. It is also assumed that the speed of compressor is constant.
By applying a Galerkin approximation [23], the original model in PDE form is
changed to three ordinary diﬀerential equations given by Eqs. (1)–(3),
˙Φ = 1
lc

−Ψ + ΨC (Φ) −3JH
4
 Φ
W −1

(1)
˙Ψ =
1
4B2lc
(Φ −ΦT (Ψ))
(2)

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
95
Fig. 1. Schematic of a compressor showing non-dimensional lengths
˙J = J

1 −
 Φ
W −1
2
−J
4

ϱ
(3)
where Φ is the annulus averaged mass ﬂow coeﬃcient, Ψ is the non-dimensional
plenum pressure and J is the squared amplitude of rotating stall.
lc =
Lc
R is the eﬀective ﬂow-passage non-dimensional length with respect
to R the mean compressor radius, and ϱ is a positive constant. B (Greitzer
B-parameter) is another model parameter which is related to the constant tan-
gential speed of the compressor U = bB, where b is also a positive constant.
Ψc(Φ) is known as the steady state compressor characteristic (compressor map)
which represents the nonlinear relationship between the pressure rise at the out-
put of the compressor and the mass ﬂow. Typically this map is presented by a
polynomial (assumed cubic in [20]):
ΨC (Φ) = ψc0 + H

1 + 3
2
 Φ
W −1

−1
2
 Φ
W −1
3
(4)
Here, H is the compressor characteristic height factor, W is the compressor
characteristic width factor, and ψc0 is shut-oﬀhead (see Fig. 1). Note that in this
ﬁgure, the compressor map is plotted using typical numerical values of model
parameters given in Table 1. In experiments, compressors should operate in the
negative slope area since in region with positive slope rotating stall or surge
occurs. ΦT (Ψ) is the throttle mass ﬂow coeﬃcient. The throttle can be thought
of as a simpliﬁed model of the power turbine and its characteristic can be given
by:
ΦT (Ψ) = γT
√
Ψ
(5)
where γT is the throttle gain. The physical amount of throttle opening is deter-
mined by the value of γT ; large γT implies an open throttle and small γT means
a closed throttle (Fig. 2).

96
G.-R. Sari et al.
-0.2
-0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Φ Mass Flow Coefficient
Ψ Pressure Rise
Ψc(φ) Compressor Map
2H
2W
c0
Fig. 2. Compressor map, H, W, and ψc0
At equilibrium, we have:
˙Φ = ˙Ψ = 0
(6)
˙J = J

1 −
 Φ
W −1
2
−J
4

= 0
(7)
which lead to two equilibria. The ﬁrst one, Je1 = 0 corresponds to the com-
pressor being in its active operating point (OP). The second one, Je2 =
4

1 −
 Φ
W −1
2	
> 0, corresponds to the system being in a fully developed
rotating stall. For the second Je2, one can obtain the stall characteristic Ψs(φ)
of the compressor by considering Eqs. 2, 3 and 6. Indeed:
⎧
⎪
⎪
⎨
⎪
⎪
⎩
1
lc

−Ψ + Ψc (Φ) −3JH
4
 Φ
W −1

= 0
1
4lcB2 (Φ −ΦT ) = 0
Je = Je2 = 4

1 −
 Φ
W −1
2	
→Ψs (Φ) = ψc0 + H

1 −3
2

 Φ
W −1

+ 5
2

 Φ
W −1
3
(8)
Figure 3 shows the characteristic map of the compressor (4), throttle charac-
teristic (5) and the stall characteristic of the compressor (8) in the same coordi-
nate system. The operating point (OP) of the compressor is the intersection of
compressor map and throttle characteristic.
The Jacobian matrix at an equilibrium point where J = 0 can be calculated
as below:
Jacobian|J=0 =
⎡
⎢⎢⎣
ϱ −ϱ
 Φ
W −1
2
0
0
−3H
4lc
 Φ
W −1

3H
2W lc

1 −
 Φ
W −1
2	
−1
lc
0
1
4B2lc
−
γ
8B2lc
√
Ψ
⎤
⎥⎥⎦

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
97
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Φ Mass Flow Coefficient
Ψ Pressure Rise
Ψc(Φ) Compressor Map
ΦT(Ψ) Throttle Characteristic
Ψs(Φ) Stall Characteristic
Operating Point
Fig. 3. Ψc(Φ), ΦT , (Ψ), and Ψs(Φ)
The ﬁrst eigenvalue of the matrix given by:
λ1 = ϱ

1 −
 Φ
W −1
2
= ϱ Φ
W

2 −Φ
W

It can be seen that λ < 0 for all Φ > 2W and when Φ = 2W, the OP is at the
peak of compressor map (Φ0, Ψ0). With the typical numerical values of model
parameters in Table 1, (Φ0, Ψ0) = (0.5, 0.66) for a throttle gain γT = 0.615.
Other eigenvalues can be found from the following equation:

λ −
3H
2W lc

1 −

 Φ
W −1
2 
λ +
γT
8B2lc
√
Ψ

+
1
4B2l2
c
= 0
λ2 + λ

γT
8B2lc
√
Ψ
−
3H
2W lc

1 −

 Φ
W −1
2
+
1
4B2l2
c

1 −3H
4W

1 −

 Φ
W −1
2 γT
√
Ψ

= 0
Here, if

1 −
 Φ
W −1
2	
< 0 →Re(λ2), Re (λ3) < 0 which means that all of
OPs on the negative slope portion of compressor map (i.e. Φ > 2W) are stable.
It is obvious that the position of λ2, λ3 depend on many factors among them
γT and B. One can use numerical bifurcation packages to trace the variation of
eigenvalues due to the variations of parameters. The locus of λ2 and λ3, which is
aﬀected by the choice of parameters, determines the type of bifurcations and the
developed instabilities (e.g. Hopf bifurcation in deep surge, when γT is small and
B is high enough). Figure 4 shows how the number of OPs and their stability vary
when one closes the throttle (i.e. γT decreases, further information is provided
later).

98
G.-R. Sari et al.
0.3
0.35
0.4
0.45
0.5
0.55
0.6
0.3
0.35
0.4
0.45
0.5
0.55
0.6
0.65
Φ Mass Flow Coefficient
Ψ Pressure Rise
decreasing γT 
Fig. 4. Stable OPs: Bold curves, Unstable OPs: Dashed curves
0.3
0.35
0.4
0.45
0.5
0.55
0.6
0.3
0.35
0.4
0.45
0.5
0.55
0.6
0.65
Φ Mass Flow Coefficient
Ψ Pressure Rise
1
2
3
4
Fig. 5. Rotating stall formation
2.2
Surge and Rotating Stall Simulation
Figure 5 explains the development of rotating stall. Suppose that the system is
initially at a stable OP (1) where J = 0. A disturbance can force the system
to move toward the unstable area (OP (2)) where rotating stall initiates and
the system jumps to fully developed stall OP (3) where J > 0. At this working
point the pressure rise is dramatically reduced. By opening the throttle, the
ﬂow increases but the system cannot immediately return to OP (1) until OP (4)
where the throttle characteristic is tangent to the stall characteristic and the
system then jumps back to OP (1).
There exists a severe hysteresis between the steady axisymmetric ﬂow and
the fully developed rotating stall OPs. The hysteresis can prevent systems from

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
99
-0.4
-0.2
0
0.2
0.4
0.6
0.8
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Φ Mass Flow Coefficient
Ψ Pressure Rise
2
1
3
4
Fig. 6. Deep surge cycle
returning to the stable area when one tries to clear rotating stall by opening
the throttle. This hysteresis is recalled again in greater detail in the bifurcation
analysis of MG3.
Figure 6 shows an example of deep surge: at OP (1) the ﬂow becomes unstable
and cycle starts and the compression system jumps to OP (2) where the ﬂow is
negative. Then, the system descends until OP (3) where the ﬂow is negligible.
At this OP the system jumps very fast to OP (4) with a positive ﬂow and then
moves again toward OP (1) and the cycle continues.
Time domain simulations of MG3 clarify its behavior which depends on the
choice of parameters. If γT < 0.615, by setting B = 0.1, which corresponds to a
low rotor speed, the compressor goes into fully developed rotating stall, but by
setting B = 1, which corresponds to a high rotor speed, the compressor initi-
ates surge. Figures 7 and 8 show simulation results for fully developed rotating
stall and deep surge respectively. As Fig. 7 shows, in the case of rotating stall, J
grows and the output pressure dramatically decreases. This pressure drop spells
operational problems for the compressor. In Fig. 8, the direction of the ﬂow peri-
odically changes and consequently causes the pressure ﬂuctuation at the output
of the compressor. During ﬂow reversal, hot gases return to the compressor and
damage the mechanical parts.
2.3
Bifurcation Analysis of MG3
Most studies on the bifurcation analysis of the Moore-Greitzer model [24] in
open-loop and closed-loop systems point out the eﬀects of the throttle gain as a
bifurcation parameter. Here, the bifurcation diagram of the squared amplitude
of rotating stall J is reviewed. Figure 9 shows the stable and unstable solutions
for low B-parameter values (e.g. B = 0.1). The attracting and repealing zones of

100
G.-R. Sari et al.
Fig. 7. Fully developed rotating stall B = 0.1
manifolds are also emphasized by arrows in the ﬁgure. The bifurcation point (BP)
in this ﬁgure is a subcritical pitchfork bifurcation implying a severe hysteresis
in the behavior of the system. The system behavior in the interval between the
limit point (LP) and the bifurcation point (BP), which takes on a considerable
importance, is explored below.
For all throttle gains greater than LP, starting from every initial stall value
(e.g. an external perturbation) ends up with fully damped out rotating stall. By
decreasing the throttle gain to a value between LP and BP, stall may be gener-
ated or damped out depending on its initial value. Here, OP (A) is an eﬀective
OP but OP (C) is a fully developed rotating stall. OP (B) is an unstable OP.
Figure 3.9b shows how the throttle characteristic intersects with the compressor
map and the stall characteristic in three points (A, B and C). If the throttle
gain is less than BP, stall is generated for all initial stall values.
The LP in the bifurcation curve corresponds to a throttle gain where the
throttle characteristic is tangent to the stall characteristic. BP in the bifurca-
tion curve is a throttle gain in which throttle characteristic intersects with the
compressor map and stall characteristic at two points including OP (D).

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
101
Fig. 8. Deep surge B = 1
The hysteresis can also be seen in the bifurcation curve. Again suppose that
the system has gone into a fully develop stall condition at OP (C) on the upper
solution where J > 0. One may want to remove the stall by opening the throttle.
The ﬂow increases but the system cannot immediately return to the active area
until when the throttle curve is tangent to stall characteristic (LP in bifurcation
curve) where the OP jumps to a fully damped out stall manifold corresponding
to OP (A).
Another important phenomenon is the presence of a Hopf bifurcation point.
This mainly depends on the value of B-parameter. The Hopf bifurcation point
can only be seen for higher values of B (e.g. B = 2) where points appears in
the bifurcation diagrams and shows the inception of surge (see for more details
[15,25,26]).
In Fig. 10, all trajectories starting from an initial point in zone A converge
to the fully developed stall manifold and all trajectories starting from an initial

102
G.-R. Sari et al.
0.35
0.4
0.45
0.5
0.55
0.35
0.4
0.45
0.5
0.55
0.6
0.65
0.7
Φ Mass Flow Coefficient
Ψ Pressure Rise
C
A
D
B
(a)
(b)
Fig. 9. Bifurcation diagram of MG3 for low B-parameter values, (Bold lines Stable
manifolds, Dashed lines Unstable manifolds)
condition in zone C converge to fully damped stall conditions. In zone B, all
trajectories starting from this area converge to a limit cycle reporting deep surge.
2.4
MG3 Model Including CCV
Here, we brieﬂy review Gravdahl model for CSACs including CCV and throttle
actuators. The compressor comprising CCV is shown in Fig. 11. The CCV char-
acteristic that describes the pressure drop over CCV as a function of ﬂow is given
by Ψv (Φ) =
1
γ2
v Φ2 where γv is the gain of CCV. The compressor map of Eq. 4
is replaced by the so-called equivalent compressor map Ψec(Φ) which is the sum
of the pressure rise of the compressor (Eq. 4) and the pressure drop over CCV:
Ψec (Φ) = Ψc (Φ)−Ψv (Φ) The throttle characteristic of (Eq. 5) ΦT (Ψ) = γT
√
Ψ
may also be represented by the inverse ΨT (Φ) =
1
γ2
T Φ2.

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
103
Fig. 10. Bifurcation diagram for MG3 (high values of B-parameter)
The dynamic model of a CSAC with CCV is obtained by replacing the com-
pressor map Ψc(Φ) by the equivalent map Ψec(Φ). For a given operating point
(OP) (φ0, ψ0), the dynamic model is further developed in the form of state-
space equations ˙z = f(z, u) ˙z= f(z,Γt) (Eqs. (9)–(11)), where z ∈R3, u ∈R2.
z = (φ, ψ, J)T represents the state vector of the system and u = (u1, u2) is the
control vector. It is deﬁned in error coordinates with respect to the coordinates
of the operating point (φ0, ψ0). In this model, φ = Φ −φ0, and ψ = Ψ −ψ0. J is
the squared amplitude of the ﬁrst harmonic of rotating stall. Control variables
u1 = γT and u2 = ψv(φ) include the eﬀect of throttle and the pressure drop over
CCV (in error coordinates) respectively. A partially closed CCV during normal
operation of the compressor leads to a bidirectional control law u2.
˙ψ = k1

φ + φ0 −u1

ψ + Ψ0 −Δφ
	
(9)
˙φ = k2

ψc −ψ −u2 + Δψ −3H
4 J
φ + φ0
W
−1

−W 2J
2γ2v

(10)
Fig. 11. Compression system comprising CCV

104
G.-R. Sari et al.
˙J = ϱJ

1 −
(φ + φ0)
W
−1
2
−J
4 −4W (φ + φ0)
3Hγ2v

(11)
The compressor characteristic in global coordinates can be expressed in error
coordinates as:
ψc (φ) = −M3φ3 −M2φ2 −M1φ
(12)
where M1 = 3Hφ0
2W 2 ( φ0
W −2), M2 =
3H
2W 2

φ0
W −1
	
, and M3 =
H
2W 3 > 0
All derivatives are calculated with respect to a normalized time ξ := Ut/R
where t is the actual time, R is the mean compressor radius, and U is the
constant compressor tangential speed. Here, k1 =
1
4B2lc , k2 =
1
lc , and lc is
the eﬀective ﬂow-passage nondimensional length of the compressor and ducts.
B is a positive parameter (so-called Greitzer’s B-parameter). The type of the
developed nonlinear behavior to a great extent depends on the value of this
parameter (small B can lead to rotating stall, and large B can cause surge).
In the model, Δφ = Φd + dφ and Δψ = Ψd + dψ include model uncertainties
and external disturbances. Mass ﬂow disturbance Φd(ξ) and pressure distur-
bance Ψd(ξ) are both considered as deﬁned by Simon and Valavani ([8]). The
disturbances are time varying and bounded (∥Φd∥∞and ∥Ψd∥∞exist). In addi-
tion to time varying disturbances, constant or slow varying oﬀsets dψ and dφ are
also introduced. These can be respectively thought of as an uncertainty in the
compressor and throttle characteristics.
Setting ˙φ = ˙ψ = ˙J = 0 leads to two equilibria: Je1 = 0 where the compressor
is in its active operating point (φ0, ψ0) or Je2 = 4(1−
 Φ
W −1
2−4W Φ
3Hγ2
v ) when the
system is in fully developed rotating stall. By using Je2 above, one can obtain the
equivalent stall characteristic Ψes (Φ), which is aﬀected by pressure drop over
CCV as can be seen in Eq. (13) (see (Gravdahl, 1998) for more information).
Ψes (Φ) = ψc0 + H

1 −3
2
 Φ
W −1

+ 5
2
 Φ
W −1
3
+ 5
H Ψv (Φ) −8W
Hγ2v

1 −
W 2
3H2γ2v

Φ
(13)
Figure 2a plots these characteristics: Ψc (Φ) (compressor map without CCV),
Ψec (Φ) (equivalent compressor map with CCV), Ψv (Φ) (pressure drop over
CCV), ΨT (Φ) (pressure drop over throttle), Ψs (Φ) (stall characteristic without
CCV), and Ψes (Φ) (equivalent stall characteristic with CCV) in (Φ, Ψ) plane.
The OP of the compression system (φ0, ψ0) is the intersection of the throttle
characteristic and the equivalent compressor map. An eﬃcient and stable OP is
normally located near the peak of the equivalent compressor map (corresponding
to a high pressure rise). Moreover, it can be shown that this OP corresponds to
fully damped stall ([15]).
Figure 12a shows how the pressure drop over CCV can modify the equivalent
compressor map and equivalent stall characteristic as well (see ([20]) for more
details). This actuator can therefore be used to stabilize an unstable OP. Roughly
speaking, when an OP is located in the negative slope area of the equivalent
compressor map, it is stable. Figure 12b shows that due to the pressure drop over

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
105
0
0.1
0.2
0.3
0.4
0.5
0.6
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Mass Flow Φ
Pressure Rise Ψ
Ψc(Φ)
ΨT(Φ)
Ψv(Φ)
Ψec(Φ)
Ψs(Φ)
Ψes(Φ)
0
0.1
0.2
0.3
0.4
0.5
0.6
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Mass Flow Φ
Pressure Rise Ψ
ΨC(Φ)
Ψs(Φ)
Ψec(Φ)
Ψes(Φ)
ΨT(Φ)
Initial 
unstable OP
Modified 
stable OP
(a)
(b)
Fig. 12. a Plot of pressure drop over throttle and CCV and compressor and stall
characteristics with and without CCV b Eﬀect of pressure drop over CCV on the
equivalent compressor characteristic and the stability of the OP
CCV an unstable initial OP in the positive slope area of the compressor map is
changed to a stable OP in the negative slope area of the equivalent compressor
map. Furthermore, throttle control can also be applied to move the OP. In this
work, these two actuators are used to stabilize the system and eliminate rotating
stall and surge.
3
Passivity-Based Control
The main objectives of this section are, ﬁrstly, to passiﬁcate the axial compres-
sion system model and, secondly, to achieve both input-to-state stability (ISS,
see [27] for deﬁnition) and disturbance rejection. In [11], conditions under which

106
G.-R. Sari et al.
a nonlinear system can be rendered passive via smooth state feedback are driven.
Based on this work, several authors have proposed to include uncertain terms
(model uncertainties and external disturbances) in order to develop a RPBC).
These works based on assumptions on uncertainties (vanishing perturbation)
or measurable states (full-state feedback with stall as a state-variable), which
are not applicable here. Consequently, we remove certain restrictions that are
imposed on the uncertainties (e.g. output dependency) and propose a new Lya-
punov function stability analysis. We demonstrate that the control law developed
in Theorem 1 below ensures robust asymptotic stabilization of the compression
system model. Furthermore, this easy-to-implement RPBC does not require a
full-state feedback.
Theorem 1. Consider the following disturbed system:
Σ1 :

˙x = f0 (x, 0) + f1 (x, y) y
˙y = b0 (x, y) + a0 (x, y) u + D (x, y) + Δ (x, y)
(14)
where f0(x, y), f1(x, y), b0(x, y), and a0(x, y) are smooth functions and a0(x, y)
is invertible for all x, y. Δ(x, y) is the system uncertainty and D(x, y) is the
external disturbance.
If Δ(x, y) and D(x, y) are bounded and if the zero dynamics of the system
are stable (i.e. there exists a positive storage function S(x) such that: S (0) = 0
and ∂S
∂x f0(x, 0) ≤0) then the following feedback control law
u = −a0 (x, y)−1 {b0 (x, y) + p (y)}
(15)
where p (y) satisﬁes yT p (y) > 0, renders the closed-loop system input-to-state
stable with respect to disturbances and model uncertainties, guarantees global
uniform boundedness of y (t), and ensures the convergence to a residual set. The
size of the residual set can be arbitrarily made small by the choice of design
parameters.
Proof. Given a positive storage function for the system Σ1 as:
V (x, y) = S (x) + 1
2yT y
(16)
Diﬀerentiating V (x, y) gives:
˙V (x, y) = ∂S
∂x (f0 (x, 0) + f1 (x, y) y) + yT b0 (x, y) + yT a0 (x, y) u + yT (D + Δ) (17)
Since ∂S
∂x f0 (x, 0) ≤0, the substitution of the control law Eq. (15) into Eq. (17)
gives that:
˙V (x, y) ≤−yT p (y) + yT η
(18)
where
η = [η1 . . . ηn]T =
∂S
∂x f1 (x, y)
T
+ (D + Δ)
(19)

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
107
Now, we use the simpliﬁed form of Young’s inequality which states that for all
C > 0 and all (q1, q2) ∈R2:
q1q2 ≤Cq2
1 + 1
4C q2
2
(20)
By applying Eq. (20) to each term of yT η, we have:
yiηi ≤Cy2
i + 1
4C η2
i
∀C > 0, i = 1, . . . , n
(21)
Following the boundedness of uncertainties and assuming that
 ∂S
∂x f1 (x, y)

∞
exists, we have:
yT η ≤CyT y + n
4C ∥η∥2
∞
(22)
therefore:
˙V (x, y) ≤−yT p1 (y) + n
4C ∥η∥2
∞
(23)
where
p1 (y) = p (y) −Cy
(24)
Appropriate choice of p (y) can satisfy the condition yT p1 (y) > 0 (e.g. p (y) =
Ky with K −CI positive deﬁnite). Since yT p1(y) and V (x, y) are radially
unbounded and positive deﬁnite, according to the work of Krstic et al. (Lemma
2.26) ([27]), we can demonstrate that the control law of Eq. (15) renders the
closed loop system ISS with respect to the uncertain terms and hence guaran-
tees the global uniform boundedness of y(t) and convergence to residual set UΔ,
outside which ˙V (x, y) < 0.
UΔ =

y : |y| ≤α−1
1 .α2.α−1
3
n
4C ∥η∥2
∞

(18)
where α1, α2, and α3 are class −K∞functions such that:
α1(|y|) ≤V (x, y) ≤α2(|y|)
(19)
α3(|y|) ≤yT p1(y)
(20)
The size of this set depends on ∥η∥2
∞and design parameter C. A smaller size
of UΔ requires a large Cparameter, which implies higher controller gain.
4
PBC Design for MG3
Here, it is supposed that mass ﬂow φ and pressure rise ψ in the error coordinates
can both be measured. Then y = [φ ψ]T and the model (Eqs. (9)–(11)) can be
rewritten in the form of system Σ1 including matched uncertainties. Since J
cannot be practically measured, the idea in this paper is to consider all the term
containing J as part of the disturbances. This simpliﬁes the control design and

108
G.-R. Sari et al.
allows us to have an output feedback strategy. Here, a0 and b0 do not depend on
J and the assumptions of perturbation boundedness of Theorem 1 are satisﬁed.
 ˙J = f0 (J, 0) + f1 (J, y) y
˙y = b0 (y) + a0 (y) u + D (J, y) + Δ (y)
(21)
where
a0 =

0
−k2
−k1
√ψ + ψ0
0

(22)
b0 =
k2(−ψ + ψc)
k1(φ + φ0)

(23)
D =
⎡
⎣
−k1Φd
−k2(3HJ
4
φ + φ0
W
−1

+ W 2J
2γ2v
−Ψd)
⎤
⎦
(24)
Δ =

−k1dφ
k2dψ

(25)
a0 is nonsingular in the operating range of the compressor where ψ +ψ0 > 0.
Furthermore, Gravdahl showed that the squared amplitude of rotating stall and
mass ﬂow have upper bounds ([20]):
∃Jmax < ∞such that J (ξ) ≤Jmax∀ξ > 0, and φmin ≤Φ ≤φchoke,
where φchoke is the choking value of the mass ﬂow and φminis the negative
ﬂow during deep surge. The CCV gain is practically limited as well, in other
words γv ∈[γmin, γmax]. Consequently, D and Δ are both bounded. Similarly,
 ∂S
∂x f1 (x, y)

∞exists since:
f1 (J, y) = ϱJφ

−φ + 2φ0
W 2
+ 2
W −
4
3Hγ2v

(26)
where W, H, and γv are nonzero.
To investigate the stability of zero dynamics, suppose that a nominal OP is
initially located at the peak of the compressor map (which is ideally the case).
It can be seen that the peak of the compressor map in Eq. (12) is located at
(Φ, Ψ) = (2W, 2H + ψc0). Therefore, φ0 = 2W at this OP:
f0 (J, 0) = ϱJ

−J
4 −4Wφ0
3Hγ2v

(27)
Considering S =
1
2ϱJmax J2, one can show that:
∂S
∂J f0 (J, 0) =
J2
Jmax

−J
4 −4Wφ0
3Hγ2v

(28)
In Eq. (28) the parameters (W, H), φ0, and J are all positive. Hence
∂S
∂J f0 (J, 0) ≤0

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
109
This satisﬁes the ﬁrst condition of Theorem 1. By choosing p (y) = Ky,
Theorem 1 states that the following control law Eq. (29) can stabilize the OP in
the presence of the external disturbances and the model uncertainties.
u = [u1, u2]T =
⎡
⎣
φ + φ0 + k−1
1 P2ψ
√ψ + ψ0
−ψ + ψc + k−1
2 P1φ
⎤
⎦
(29)
In the developed control law, K =
P1 0
0
P2

consists of two high enough
positive design parameters (P1 and P2) that guarantee the convergence to UΔ
and limit the size of this residual convergence set.
Note that the control law Eq. (29) cancels all the nonlinearities in the model.
Since the term M3 is always positive in Eq. (12), we propose the following
modiﬁcation to avoid canceling the stabilizing nonlinearities (−M3φ3):
u = [u1, u2]T =
⎡
⎣
φ + φ0 + k−1
1 P2ψ
√ψ + ψ0
−ψ −M2φ2 −M1φ + k−1
2 P1φ
⎤
⎦
(30)
It is worth noting that all uncertainties in the model parameters are consid-
ered in the terms of Δ, therefore the parameter set used in Eq. (30) is only a
reasonable estimation.
Remark. In the case of deep surge, the system does not include the zero dynamics
and the simpliﬁed form of control system can be derived by putting J = 0 in Eq.
(21). It can be seen that J = 0 considerably relaxes the boundedness conditions;
however, the developed control laws Eq. (30) remains eﬀective.
5
Results and Discussion
All of the numerical constants and model parameters, which are used in this
section, are mentioned in Table 1. At ﬁrst, we demonstrate that external distur-
bances and model uncertainties can lead to rotating stall when the controller is
deactivated (B-parameter in this case is 0.1.). The system initially starts from
OP1 (the intersection of throttle characteristic γT = 0.62 and compressor map
at (φi, ψi) = (0.51, 0.66) (see Fig. 13)). This OP is located in the negative slope
area and the system is initially stable. As seen in Fig. 14f, disturbances including
time varying sinusoidal and constant oﬀsets are applied at ξ = 50.
Consequently, the system develops rotating stall (Fig. 14c) and output pres-
sure drops (Fig. 14a). This spells trouble for normal operation of the axial com-
pressor. In Fig. 13, the disturbed trajectory (blue line) settles down at OP2
consisting of the eﬀect of rotating stall and disturbances. The disturbances last
until ξ = 200, but due to the hysteresis in the qualitative behavior of the sys-
tem, rotating stall cannot be automatically removed (see Fig. 14c). When distur-
bances disappear, uncontrolled trajectory (magenta line) ends up in OP3 which
is located on the stall characteristic where pressure is considerably reduced.

110
G.-R. Sari et al.
Table 1. Numerical values used in simulations
lc
3
W
0.25
H
0.18
B for rotating stall
0.1
B for deep surge
2
ϱ
0.425
dφ
−0.05
dψ
0.02
Ψd(ξ)
0.01sin(0.2ξ)
Φd(ξ)
0.01sin(0.2ξ)
0.2
0.3
0.4
0.5
0.3
0.4
0.5
0.6
0.7
0.8
Mass Flow
Pressure Rise
Compressor Map
Throttle Ch.
Stall Ch.
Disturbed Traj.
Uncontrolled Traj.
Controlled Traj.
OP1
OP2
OP3
Fig. 13. Perturbations lead to rotating stall, but RPBC eﬀectively damps it out. OP1:
eﬃcient OP, OP2: developed rotating stall and disturbances, OP3: rotating stall OP
At ξ = 300, the controller starts and rapidly damps out rotating stall and
imposes the controlled trajectory (green line) toward the initial eﬃcient OP1
where output pressure is high. In this simulation, P1 = 10 and P2 = 0.2.
Figure 14d, e respectively report the control laws u1 and u2. trajectory (green
line) toward the initial eﬃcient OP1 where output pressure is high. In this sim-
ulation, P1 = 10 and P2 = 0.2. Figure 4d, e respectively report the control laws
u1 and u2.
To investigate the eﬀectiveness of the controller in the presence of perturba-
tions, long lasting disturbances are applied to the system for ξ > 50 (Fig. 16f).
Again, Figs. 15 and 16 show that the controller, which is activated at ξ = 300,
stabilizes the system at the desired OP1. In Fig. 15, the controlled system trajec-

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
111
0
200
400
0.2
0.4
0.6
0.8
1
Pressure Rise
0
200
400
0.4
0.5
0.6
0.7
Flow
0
200
400
0
1
2
3
4
1t Harmonic of Stall
0
200
400
0.5
0.55
0.6
0.65
0.7
Control Law: U1
0
200
400
-1.5
-1
-0.5
0
Control Law: U2
0
200
400
-0.1
-0.05
0
0.05
Press. (red) & Flow (blue) Dist.
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
(a)
(b)
(c)
(d)
(e)
(f)
Fig. 14. RPBC returns the system to its initial eﬃcient OP and removes rotating stall
0.2
0.3
0.4
0.5
0.3
0.4
0.5
0.6
0.7
0.8
Mass Flow
Pressure Rise
Compressor Map
Throttle Ch.
Stall Ch.
Disturbed Traj.
Controlled Traj.
OP1
OP2
Fig. 15. RPBC removes rotating stall and returns the system to its desired initial OP1.
OP1: initial eﬃcient OP, OP2: OP including rotating stall and disturbances
tory ﬁnally reaches to the initial desired OP1. Figure 16c shows that rotating stall
is rapidly damped out and Fig. 16a reports the corresponding pressure increase

112
G.-R. Sari et al.
0
200
400
0.4
0.5
0.6
0.7
0.8
Pressure Rise
0
200
400
0.4
0.5
0.6
0.7
Flow
0
200
400
0
1
2
3
4
1t Harmonic of Stall
0
200
400
0.6
0.65
0.7
Control Law: U1
0
200
400
-0.1
-0.04
0.02
Control Law: U2
0
200
400
-0.1
-0.05
0
0.05
Press. (red) & Flow (blue) Dist.
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
(a)
(b)
(c)
(d)
(e)
(f)
Fig. 16. RPBC increases the output pressure and eliminates rotating stall
after the activation of the controller at ξ = 300. In this case, P1 = P2 = 20.
These two design parameters also modify the transient response of the system
(e.g. the fall time of rotating stall). The scale of Fig. 16d, e are adjusted to show
the variation of control laws due to the time varying sinusoidal disturbances.
Compressors suﬀer from deep surge as well. For surge simulations, the system
initially starts at an eﬃcient OP at the peak of compressor map. In this case, at
ξ = 50, we apply only the oﬀset disturbances (thought of as model uncertainties)
that move the system toward surge condition. Deep surge can be simulated by
choosing a high enough value of B-parameter (e.g. B = 2 leads to surge).
During deep surge, ﬂow reversal occurs (see Fig. 8b with negative ﬂow values).
Although perturbations are removed at ξ = 2000, the system remains in surge
condition (see Fig. 8f, b). Then at ξ = 3000, the controller starts and quickly sta-
bilizes deep surge as shown in Fig. 18a, b. Control eﬀorts are shown in Fig. 15d, e.
Figure 17 reports disturbed and uncontrolled trajectories showing a limit
cycle. Finally, when the control is applied at ξ = 3000, the controlled system
trajectory settles down at the initial eﬃcient OP1 (green trajectory). This time-
domain simulation shows that the developed control law Eq. (30) can robustly
stabilize deep surge as well (Fig. 18).

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
113
-0.5
0
0.5
1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Mass Flow
Pressure Rise
Compressor Map
Throttle Ch.
Stall Ch.
Disturbed Traj.
Uncontrolled Traj.
Controlled Traj.
Fig. 17. RPBC stabilizes the compression system and eliminates deep surge
0
2000
4000
0.2
0.4
0.6
0.8
1
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
time ξ 
Pressure Rise
0
2000
4000
-0.5
0
0.5
1
Flow
0
2000
4000
0
1
2
3
4
1t Harmonic of Stall
0
2000
4000
-1
-0.5
0
0.5
1
Control Law: U1
0
2000
4000
-1.5
-1
-0.5
0
Control Law: U2
0
2000
4000
-0.1
-0.05
0
0.05
PR(r) & FL(b) Dist.
(a)
(b)
(c)
(d)
(e)
(f)
Fig. 18. Deep surge including ﬂow reversal and pressure oscillation is damped out due
to RPBC activation

114
G.-R. Sari et al.
6
Conclusion
In this paper, the eﬀectiveness of RPBC in stabilizing compression systems is
demonstrated. Here, surge and rotating stall being potentially able to cause
mechanical damages and performance reduction are robustly controlled in the
presence of external disturbances and model uncertainties. The controller derives
the control signal from pressure and ﬂow measurements and applies it to the
system by CCV and throttle actuations. The main contribution of this paper is
to propose a simple and easy-to-implement RPBC algorithm that only relies on
a small number of design parameters and does not require accurate knowledge
of the model parameters.
Analytical developments demonstrate that RPBC accomplishes the ISS prop-
erty of the closed-loop disturbed system. The size of the residual convergence set
and the transient response can be adjusted by control parameters. Time-domain
simulation evaluates the performance of the control system and widely supports
analytical outcomes.
This brings us to the conclusion that by taking advantage of control methods
based on the passivity of compression systems, a wide range of machines using
compressors can obtain higher performance and greater operational reliability.
Among these machines, gas turbines play an essential role both in aerospace and
energy industries.
Appendix
References
1. Gu, G., Sparks, A., Banda, S.S.: An overview of rotating stall and surge control
for axial ﬂow compressors. IEEE Trans. Control Syst. Technol. 7, 639–47 (1999)
2. de Jager, B.: Rotating stall and surge control: a survey. In: 34th IEEE Conference
on Decision and Control, pp. 1857–1862 (1995)
3. Epstein, A.H., Williams, J.E.F., Greitzer, E.M.: Active suppression of aerodynamic
instabilities in turbomachines. J. Propuls. Power 5, 204–211 (1989)
4. Liaw, D., Huang, J.: Robust stabilization of axial ﬂow compressor dynamics via
sliding mode design. J. Dyn. Syst. Meas. Control 123, pp. 488–495 (2001)
5. Krstic, M., Fontaine, D., Kokotovic, P., Paduano, J.D.: Useful nonlinearities and
global stabilization of bifurcations in a model of jet engine surge and stall. IEEE
Trans. Autom. Control 43, 1739–1745 (1998)
6. Gravdahl, J.T., Egeland, O.: Two results on compressor surge control with distur-
bance rejection. In: Conference on Decision and Control, pp. 2563–2568 (1998)
7. Liaw, D., Ren, S.M., Chang, S.: A feedback linearization design for compressor’s
surge control. In: IEEE International Conference on Industrial Technology, pp. 1–6
(2008)
8. Simon, J.S., Valavani, L.: A Lyapunov-based nonlinear control scheme for stabiliz-
ing a basic compression system using a close-coupled control valve. In: Proceedings
of the 1991 American Control Conference, pp. 2398–2406. Boston (1991)

Bifurcation Analysis and Active Control of Surge and Rotating Stall . . .
115
9. Sari, G., Akhrif, O., Saydy, L.: Passivity-Based Control of Surge and Rotating Stall
in Axial Compressors, ICINCO (2016)
10. Leonessa, A., Chellaboina, V., Haddad, W.M.: Robust stabilization of axial ﬂow
compressors with uncertain pressure-ﬂow maps. IEEE Trans. Control Syst. Tech.
8, 466–473 (2000)
11. Byrnes, C.I., Isidori, A., Willems, J.C.: Passivity, feedback equivalence, and the
global stabilization of minimum phase nonlinear systems. IEEE Trans. Autom.
Control 36, 1228–1240 (1991)
12. Sepulchre, R., Jankovic, M., Kokotovic, P.V.: Constructive Nonlinear Control.
Springer, New Yorkn (1997)
13. Bao, J., Lee, P.L.: Process Control, 1st edn. Springer, Berlin (2007)
14. Tsai C., Wu H.: Robust passivity-based control of weakly minimum phase nonlinear
uncertain systems: an application to manipulators. In: Asian Control Conference,
pp. 919–924 (2009)
15. H˝os C., Champneys A., Kullmann L.: Bifurcation analysis of surge and rotating
stall in the Moore-Greitzer compression system. IMA J. Appl. Math. 68, 205–228
(2003)
16. Krstic, M., Wang, H.: Control of deep-hysteresis aeroengine compressors - part II:
design of control laws. In: Proceedings of the American Control Conference, pp.
1003–1007. Albuquerque (1997)
17. Leonessa, A., Chellaboina, V., Haddad W. Globally stabilizing controllers for multi-
mode axial ﬂow compressor models via equilibria-dependent Lyapunov functions.
In: Proceedings IEEE International Conference Control Applications, pp. 63–68.
Hartford (1997)
18. Mansoux, C.A., Gysling, D.L., Setiawan, J.D., Paduano, J.D.: Distributed nonlin-
ear modeling and stability analysis of axial compressor stall and surge. In: Ameri-
can Control Conference, pp. 2305–2316 (1994)
19. Dussourd, J.L., Pfannebecker, G.W.: An experimental investigation of the control
of surge in radial compressors using close coupled resistances. J. Fuids Eng. Trans.
ASME 99, pp. 64–76 (1977)
20. Gravdahl, J.T.: Modeling and control of surge and rotating stall in compres-
sors. Department of Engineering Cybernetics, Norwegian University of Science and
Technology, Trondheim (1998)
21. Bartolini, G., Muntoni, A., Pisano, A., Usai, E.: Compressor surge active control
via throttle and CCV actuators: a second-order sliding-mode approach. In: 10th
IEEE International Workshop on Variable Structure Systems, pp. 274–279. Antalya
(2008)
22. Shehata, R.S., Abdullah, H.A., Areed, F.: Variable structure surge control for
constant speed centrifugal compressors. Control Eng. Pract. 17, 815–833 (2009)
23. Moore, F.K., Greitzer, E.M.: Theory of post-stall transients in axial compression
systems: part I - development of equations. J. Eng. Gas Turbines Power, 108, pp.
68–76 (1986)
24. Gu, G., Chen, X., Sparks, A.G., Banda, S.S.: Bifurcation stabilization with local
output feedback. SIAM J. Control Optim. 37, 934–956 (1999)
25. Gu, G., Sparks, A., Banda, S.S.: An overview of rotating stall and surge control
for axial ﬂow compressors. IEEE Trans. Control Syst. Technol. 7, 639–47 (1999)
26. Ananthkrishnan, N., Vaidya, U.G., Walimbe, V.W.Z: Global stability and control
analysis of axial compressor stall and surge phenomena using bifurcation methods.
Proc. Inst. Mech. Eng. Part A J. Power Energy 217, 279–286 (2003)
27. Krstic, M., Ioannis, K., Petar, K.: Nonlinear and Adaptive Control Design. Wiley,
New Jersey(1995)

116
G.-R. Sari et al.
28. Lin, W., Shen, T.: Robust passivity and feedback design for minimum-phase non-
linear systems with structural uncertainty. Automatica 35, 35–47 (1999)
29. Jiang, Z.P., Hill, D.J.: Passivity and disturbance attenuation via output feedback
for uncertain nonlinear systems. IEEE Trans. Autom. Control 43, 992–997 (1998)

Task Controller for Performing Remote Centre
of Motion
Bassem Dahroug(B), Brahim Tamadazte, and Nicolas Andreﬀ
FEMTO-ST, AS2M Department, University of Bourgogne
Franche-Comt´e/CNRS/ENSMM, 24 Rue Alain Savary, 25000 Besan¸con, France
bassem.dahroug@femto-st.fr, brahim.tamadazte@femto-st.fr,
nicolas.andreff@femto-st.fr
http://www.femto-st.fr/en/
Abstract. The Remote Centre of Motion (RCM) is an essential move-
ment done by the surgeon during a minimally invasive surgery. By apply-
ing the RCM, the surgical tool should be always superposed upon the
centre point of incision hole in order to prevent patient harm. This
chapter presents a geometric modelling of such constrained motion in
task-space (i.e., operational-space) for implementing a velocity controller
with task priority form. The RCM constraints are considered as the high-
est priority while the 3D path following is considered as lower priority.
The proposed controller shows the advantage of accurate motion con-
trol for executing complex movements within the patient body; since the
results shows the mean error of RCM error around 0.156 mm/s and its
standard deviation around 0.112 mm/s. While the mean value and the
standard deviation of path following error were approximately 0.348 and
0.184 mm/s, respectively.
1
Introduction
Recently, the robot-assisted surgeries have been more used and utilized by sur-
geons through minimizing the ergonomic hazards which help increase accuracy
and reduce fatigue. The patients also beneﬁt by having less invasive surgery,
recovery time and costs. The surgical robotic systems enter into the human body
from a small incision (or a trocar point) which presents physical constraints on
the surgical tool’s motion. Such constraints caused by the incision wall lead to the
reduction of the Tool Degrees of Freedom (DOF) to four (three rotations and one
translation). The tool motion can be represented as a spherical joint which can
translate along one axis. This resultant motion is called remote center of motion
(RCM) (or fulcrum eﬀect). This type of motion could be achieved either by a
speciﬁc kinematic robot structure [1] or by a software control [2]. This chapter is
interested in the latter type because it is a generic method that could be applied
regardless the robot structure, in condition that the robot DOF should be greater
than 4-DOF. The latter condition ensures that the robot kinematic structure is
redundant. The redundancy occurs when the manipulator joints number (i.e.,
its DOF) is greater than those required to execute the desired task. Such task
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_6

118
B. Dahroug et al.
could be any kinematic or dynamic goal. The advantages of redundancy are the
increase of the robot manoeuvrability and dexterity which are useful to avoid
singularity, joints limits and workspace obstacles, and to provide the concept of
task priority [3].
Fulcrum eﬀect is necessary during key-hole surgery, such as laparoscopy [4–
6], eye or ear surgeries. The assistant-robot will help the surgeon to decide the
best strategy during the post-operative phase in order to reach the region of
interest (ROI) inside the patient’s body. These decisions are taken with the help
of a planning software which segments the medical images for creating a sur-
face model of ROI and also helps in identifying the optimal path/trajectory [7].
Afterwards, the navigation software starts collecting information regarding the
robot internal state (i.e., the pose of its end-eﬀector with respect to its base)
and its relative pose with respect to organs. The manipulator relative pose is
a very important information during the navigation phase. The most conve-
nient method for assessing such manipulator pose is to use the visual servoing
control approaches [8] which mimic the perception sense for the surgeon. This
method uses real-time imaging (e.g., endoscope, optical coherence tomography or
ultrasound) to detect, track and guide the instrument [9,10]. Eventually, visual
servoing method was combined with either trajectory tracking or path following
controller for implementing an accurate velocity controller.
The diﬀerence between the two approaches is the notion of time. On one
side, trajectory tracking parametrizes the geometric curve with time, where the
velocity along the curve is dependent on how the tool (respectively, the robot)
advances. In case that the tool does not reach the next scheduled point on the
desired curve due to any diﬃculties occurred during the previous points along the
curve. Thereby the controller accelerates or tends to shortcut the deﬁned curve
in order to reduce the time delay. On the other side, path following is time-
independent and it is restricted to maintain the reference velocity proﬁle even in
lag conditions. This kind of controller is useful in medical applications, especially
during tissues ablation or scanning processes. Since the surgeon can change the
instrument velocity independently from the geometric curve and dependent on
tissue-tool interaction. Path following is widely used for mobile robot but it is
not frequently applied in medical applications. A 2D path following proposed
in [11] for laser surgery. Non-holonomic control was proposed for executing a
unicycle path following with high frequency. A 3D path following [12] was also
proposed for guiding a magnetic helical swimmer.
This chapter discusses the problem of 3D path following combined with RCM
constraints. It extends the proposed method in [2] to control the motion of
rigid tool. Therefore, it begins by presenting the controller design of the RCM
constraints and the path following scheme in Sect. 2. After that It discusses the
controller implementation and the results obtained by the simulator in Sect. 3.

Task Controller for Performing Remote Centre of Motion
119
2
Control Design
The proposed controller commands the robot velocity to perform 3D path fol-
lowing with RCM constraints. It achieves the objective with two task: the ﬁrst
prior task is the alignment of the tool with the incision point, and the second
task is the position of tool tip with respect to the required path. It also has
two operation modes: (i) approaching phase where the tool aligns itself with the
trocar point, and (ii) insertion phase where the trocar point should be located
along the tool.
2.1
Remote Center of Motion Constraints
There are diﬀerent reported methods in the literature for modelling and solving
fulcrum problem. The trocar kinematics could be described with Euler angles
representation as proposed in [5] for achieving an analytical solution. A more
generic solution was proposed in [4] to extend the robot Jacobian with quadratic
optimization. Both methods have the objective to implement a Cartesian con-
troller for rigid surgical tool.
An alternative technique is creating a “virtual” RCM [13] and the solution is
derived from an optimized search method based on two heuristic function: (i) the
ﬁrst function (e1) is the distance between the tool tip and the target point inside
the cavity, (ii) the second one (e2) is the cross-product between the rigid tool
vector and the vector from RCM to target point. The weakness of this method
lies in its inability to arrange the heuristic functions in the task priority mode.
Therefore, the system could converge to a solution to satisfy a task function
without respecting the other one (i.e., (e1, e2) = (e1 ̸= 0, 0) or (e1, e2) = (0,
e2 ̸= 0)).
In later work [14], they described the trocar kinematics in vector form for
one rigid link. The trocar point is assumed to be located along the link. This
assumption means that the controller manages the case where the tool is already
inside the incision point, and it neglects the approaching phase where the instru-
ment moves from its initial pose to the incision point. The solution in joint-space
is achieved by gradient projection approach in closed-loop form. This is a good
method to assure the priority between diﬀerent tasks which are the manipulator
kinematic and the trajectory tracking.
In [15], the fulcrum eﬀect is described in geometric way with stereo visual
servoing for controlling the robot position from point-to-point. In the same direc-
tion, [16] formulated the RCM constraints as [14] and the formulation is extended
to serial links. They extended the visual servoing task, which has the highest pri-
ority, by adding the trocar position error. Recent works synthesized the kinematic
motion by using quaternion frameworks [17] or Lie algebra [18] for implementing
a velocity controller.
In the remain of this section, the mathematical formulation is presented for
modelling the robot motion during the approaching and insertion phases, after
that the control solution for deducing the tool tip velocity in order to follow a
desired 3D path.

120
B. Dahroug et al.
Y
X
Z
W
E
R
Path
C
T
Body surface
Robot
end-effector
Incision
point
Medical
imaging
Tool
Mk
Fig. 1. Representation of diﬀerent reference frames used in the modelling of the whole
system
Problem Statement. Figure 1 shows the conceptual system with the diﬀerent
reference coordinate frames. The y-component of RCM frame (ry) is assumed
to be perpendicular to the tissue surface. The RCM constraints consequently
allow the tool translation along the y-component of the current RCM frame
(rv) and angular rotation (rω) around the latter frame axes. Once the tool tip
velocity with respect to the medical imaging system (cvt) is determined by the
position-based path following controller (see Sect. 2.2). Therefore, the problem
becomes to deduce the adequate end-eﬀector velocity (ev and eω) for achieving
the desired motion while maintaining the RCM constraints.
Case 1: Tool Outside Incision Point. This is the ﬁrst phase for approaching
the tool tip to the incision point. It is required to align the rigid tool with
the trocar point. This task is modelled as the geodesic error between the y-
component of end-eﬀector frame (ey) and the unit-vector oriented from the end-
eﬀector origin point to the trocar origin point (euer). This error (1) should be
equal to zero for achieving the latter task:
e1 =
ey ∧euer
(1)
where (∧) is the cross-product between these two vectors. This task tracks the
incision point and the end-eﬀector in order to align both of them. In order to
ensure an exponential error decay, the control form is ˙e1 = −λe1, thereby the
time-derivative of (1) is calculated as:
˙e1 =
ey ∧e ˙uer +
e ˙y

=0
∧euer



=0
(2)

Task Controller for Performing Remote Centre of Motion
121
The derivative of the unit-vector (euer) with respect to time is computed as
follows [2]:
e ˙uer =

I
∥eER∥−
euer euT
er
∥eER∥

e ˙
ER
(3)
where e ˙
ER represents the linear velocity of the trocar point expressed in end-
eﬀector frame (e ˙
ER =
evr). The trocar velocity can be expressed in terms of
end-eﬀector velocity as:
evr = −(eve + eωe ∧eER)
(4)
By putting (4) in (3), the derivative of the unit-vector e ˙uer is represented as:
e ˙uer =
−1
∥eER∥(I −euer
euT
er)[I −[eER]∧]
 eve
eωe
	
(5)
where −[eER]∧is the skew-matrix of the vector eER and I3×3 is the identity
matrix. By substituting (5) in (2), the derivative of the ﬁrst error (1) is redeﬁned
as:
˙e1 =
−1
∥eER∥[ey]∧(I −euer
euT
er)[I −[eER]∧]



LT
e1
 eve
eωe
	
  
eτe
(6)
˙e1 = LT
e1
eτe = −λe1
(7)
where LT
e1 is the interaction matrix of alignment task, (λ) is a gain factor for
alignment task and eτ e is the control twist velocity of end-eﬀector which gather
the linear and angular velocities (eτ e =
 ev
eω
	
). The latter control velocity is
achieved by inverting the interaction matrix (LT †
e1 ) in (7) either by psuedo-inverse
or by singular value decomposition (SVD) as:
eτ e =
−λLT †
e1 e1
(8)
In fact, these heavy computational methods can be avoided; since the null-space
of interaction matrix can be computed analytically as:
ker(LT
e1) = I −LT †
e1 LT
e1
=
 euer
0
∥eR∥∗(euer ∧ue1) −∥eR∥∗ue1
0
euer
ue1
euer ∧ue1
	
(9)
where ∥eR∥is the Euclidean norm of trocar point expressed in end-eﬀector frame,
and ue1 is the unit-vector of e1. Another task can be projected in the null-space of
the ﬁrst task by using Eq. (9). During this phase, the second task (e2 = eR −eT)
is bringing the tool tip (T) to the incision point (R).
Case 2: Tool Inside Incision Point. During this phase, the tool follows a
pre-deﬁned path and its velocity is determined by the operator. The tool tip
velocity (evt) is expressed with respect to end-eﬀector frame as:
evt =
eve + eω ∧eET
(10)

122
B. Dahroug et al.
In the same way, the velocity of RCM frame is formulated with respect to end-
eﬀector frame as:
evr =
eve + eω ∧eER
(11)
Putting (10) in (11), the RCM velocity is described in terms of tool tip velocity
by:
evr =
evt + eω ∧eER −eET



=eTR
(12)
Since the incision wall allows only the tool translation along the y-component
of end-eﬀector frame (Fig. 2), thereby the velocity of RCM frame equals:
evr =
evt + eω ∧eTR = −γey
(13)
where γ is a scalar factor for increasing or decreasing the velocity in y-axis. From
latter Eq. (13), the angular velocity of end-eﬀector is deduced as:
eω ∧eTR = −(evt + γey)
(14)
eω =
−1
∥eTR∥2 (evt + γey) ∧eTR + μeTR
(15)
The second term in the right hand side of Eq. (15) represents the tool rotation
around its axis and it is neglected. Back substituting (15) in (14), we obtain:
eω ∧eTR =
−1
∥eTR∥2 ((evt + γey) ∧eTR) ∧eTR
=
1
∥eTR∥2

eTR eTRT (evt + γey) + (evt + γey)eTRT eTR

=
eTR eTRT (evt + γey)
∥eTR∥2
+ (evt + γey)
(16)
In order to obtain the Eq. (16) equals (14), the choice of γ is determined as:
γ = −
evT
t
eTR
ey eTR
(17)
By placing (17) in (15), the control angular velocity (eω) of the end-eﬀector
is determined. Therefore, the control linear velocity (eve) of the end-eﬀector is
determined by replacing (15) in (10) which gives:
eve =
evt −eω ∧eET
(18)
During this phase, the second task is determined by the path following controller.
The path following error is projected in the null-space of alignment task as
formulated in (9).

Task Controller for Performing Remote Centre of Motion
123
Tool
Body surface
Path
Incision
point
Y
X
Z
W
Robot
end-effector
E
T
Fig. 2. Representation of diﬀerent reference frames used in the path following approach
2.2
3D Path Following
Problem Statement. The desired geometric curve is generally deﬁned by a
planning algorithm [7], for avoiding obstacles and generating the shortest dis-
tance between the initial point and the target one, or simply by the surgeon
drawing on input device,1 such as tablet.
During the robot motion, the perpendicular distance (d) between the tool
tip and the desired path points should be maintained to zero (Fig. 2). Beside
that it is required to determine the tool velocity along the desired path.
Problem Resolution. The projection of tool tip on the path provides the point
(S) and the projected distance (19) which needs to be minimized.
d = T −S
(19)
The time-derivative of previous equation is obtained by [2]:
˙d = vt −vs
= vt −˙sKs
(20)
where (vt) is the linear velocity of tool tip and (vs) is the linear velocity of pro-
jected point which is deﬁned as the speed ( ˙s) in the direction of the instantaneous
unit-vector (Ks) which is tangent to the path. The instantaneous tangential vec-
tor (Ks) is calculated in (21). While (K+
s ) and (K−
s ) are the previous and next
1 μRALP (Micro-technologies and Systems for Robot-Assisted Laser Phonomicro-
surgery). [online]. http://www.microralp.eu/.

124
B. Dahroug et al.
tangential vectors, respectively, and (Mk) is the kth point on the geometric path.
Ks =
Mk+1 −Mk
∥Mk+1 −Mk∥
K+
s =
Mk+2 −Mk+1
∥Mk+2 −Mk+1∥
(21)
K−
s =
Mk −Mk−1
∥Mk −Mk−1∥
The derivative of instantaneous tangential vector is computed as:
˙Ks = dKs
dt
= ∂Ks
∂s
ds
dt = K+
s −K−
s
2 △s
˙s
(22)
The latter time-derivative represents the instantaneous velocity to move from
point Mk to Mk+1. It is also the perpendicular resultant (24) from the unit-
vector Ks and the angular velocity ω which depends on the speed along the
path and its curvature. This angular velocity ω is deﬁned by:
ω = ˙sC(s)
(23)
˙
Ks = ˙sC(s) ∧Ks
(24)
From (22) and (24), the path curvature (C(s)) is calculated as:
C(s) = −Ks ∧K+
s −K−
s
2 △s
(25)
Since the projected distance is perpendicular on the tangential vector
(dT Ks = 0), then the time-derivative of the latter expression is obtained by:
˙dT Ks + dT ˙Ks = 0
(26)
In order to calculate the required speed along the path ( ˙s), the Eq. (20) is mod-
iﬁed to:
˙dKs = vtKs −˙sKsKs
(27)
By putting (24) and (27) in (26), the speed along the path is determined as:
˙s =
vT
t Ks
1 −dT (C(s) ∧Ks)
(28)
Back substituting (28) in (20), the velocity required to bring the tool tip on the
path is deﬁned as following which is the kinematic state-space representation:
˙d =

I −
KsKT
s
1 −dT (C(s) ∧Ks)

vt
(29)
The tool velocity is free to be chosen and a possible solution (30) to describe
it as two components: the ﬁrst one to advance the tool along the path and the
second to reduce the distance between the tool and the path.
vt = αKs + βd
(30)

Task Controller for Performing Remote Centre of Motion
125
Thereby, (30) gets into (29):
˙d = α

1 −
1
1 −dT (C(s) ∧Ks)
	
Ks + βd
(31)
As result, the control problem becomes mainly in determining the gain coeﬃ-
cients (α and β).
3
Validation
A simulator was implemented for testing the proposed controller by deploying
Octave or Matlab Software. It is divided mainly into two phases: (i) ﬁrst phase
is approaching the robot to the incision point and align the tool with the y-
component of RCM frame, (ii) second phase is guiding the robot to perform the
pre-deﬁned 3D path. Figure 3 shows the block diagram of proposed controller
during the second phase. During the ﬁrst phase, the path following block is
replaced by a simple point tracking controller. The desired path should be deﬁned
by the user at the beginning of simulation. During the control loop, the tool pose
is simulated that is estimated by exteroceptive sensor (e.g., camera).
3.1
Implementation
The pseudo code (Algorithm 1 implements the block diagram in Fig. 3). The
diﬀerent reference coordinate frames (i.e., the RCM point, the tool tip and the
end-eﬀector frames with respect to the world frame) are initialize by the function
initial reference frames(). The function generate geometric path() creates
the path with respect to incision point. At the beginning of control loop, the
RCM variables are calculated with the function compute RCM variables(), as
demonstrated previously in (6) and (7), for deducing the twist velocity of end-
eﬀector in order to accomplish the RCM alignment task.
If the control loop is executing the approach phase, the second task will bring
the tool tip to the incision point (e2 =e TR). A simple point tracking controller
is deployed for ensuring the exponential decay of second error and the control
twist velocity of end-eﬀector for performing the second task is deduced as:
evt = −[I3×3 [eR]∧]



LT
e2
 ev
eω
	
  
eτ e2
(32)
Fig. 3. Block diagram of RCM with path following control

126
B. Dahroug et al.
Algorithm 1 Control loop for RCM constraints
wMe ←initial reference frames(W, R, E, T)
Γ ←generate geometric path()
approaching ←true
while not path end do
(e1, LT
e1, eτ e1) ←compute RCM variables(wMe, eur, eT, λ)
if approach & (norm(e2) < 0.0001) then
approaching ←false
end if
if approaching then
e2 ←e TR
LT
e2 ←interactive matrix(I, [eR]∧)
eτ e2 ←control law(λ, γ, e2, LT †
e2 )
else
(e2, wvt) ←path following(wMe, wT, Γ)
wωe2 ←explicit solution(eTR, ey, wvt)
eτ e2 ←control law(evt,e ωe2, eET)
end if
Ker(Le1) ←projection null space(eur, eR, ue1)
ker(eτ e) ←projected velocities(Ker(Le1), eτ e2)
eτ econtrol ←send robot velocities(eτ e + ker(eτ e))
update pose(wMe,e τ econtrol)
end while
eτ e2 = −γLT †
e2 e2
(33)
where γ is a gain factor and LT †
e2 is the inverse of interaction matrix of the
approaching task.
If the control loop is executing the insertion phase, the second task is the
path following error (e2 = d) and the control velocity of the path following task
is considered as mentioned in (30). The geometric solution of end-eﬀector twist
velocity is then calculated as (15) and (18) for accomplishing the second task.
After that, the solution of second task is projected in the null-space of ﬁrst
task (9) and the projected velocity is obtained as:
eτ eker = Le1Ker ∗LT
e1Ker ∗eτ e2
(34)
The latter secondary velocity is added to RCM alignment velocity (8), which
could be chosen as any column of null-space matrix (9). The resultant velocity
is the ﬁnal solution that will be send to the robot.
Algorithm 2 computes the linear velocity of tool tip to follow the desired
path. It begins by projecting the actual position of tool tip on the reference
curve in order to determine the projected distance and the moving direction.
The resultant path following velocity is a combination of velocities in both latter
directions. When the tool is far from the reference curve, this resultant velocity
equals that of the projection direction in order to bring back the tool tip as fast
as possible to the desired path. Otherwise, the resultant path following velocity

Task Controller for Performing Remote Centre of Motion
127
is determined as in (30) and the parameter (α) is obtained in the latter case as
follows:
α =

(β∥d∥)2 + v2
tissue
(35)
Algorithm 2 Control loop for 3D path following
(Mk, Mk+1) ←nearest point(Γ, T)
(Ks, S, d) ←projection(Mk, Mk+1, T)
if (β∥d∥)2 > v2
tissue then
α ←0
else
α ←compute(β, d, vtissue)
end if
vt ←required velocity(α, β, Ks, d)
3.2
Results
A spherical workspace was chosen (Fig. 4a) where the rigid tool navigated inside
it. In fact, the fulcrum eﬀect will produce a conical workspace within the spheri-
cal one. The desired 3D path could be deﬁned in any form and it was constructed
as shown in Fig. 4b which displays the resultant tool tip position (black line) with
respect to the reference path (blue dots).
Figure 5a shows the RCM constraints error (blue star line) and path follow-
ing error (green circular line) during the approaching phase and they decrease
exponentially as designed. Figure 5b presents the same errors during the inser-
tion phase, where the errors are oscillating due to the introduced perturbation
which is introduced for simulating a external disturbance on the robot actua-
tion (e.g., friction between joints). This perturbation was divided into linear and
angular disturbances which are varying randomly within the range ±0.5 mm/s
and ±5 × 10−3 rad/s, respectively. Throughout the insertion phase, the mean
value and the standard deviation of the RCM error were around to 0.156 and
0.112 mm/s. In addition, the mean value and the standard deviation of path
following error were approximately 0.348 and 0.184 mm/s, respectively. These
results are obtained with the parameters values λ = 30, γ = 0.5, β = −5,
vtissue = 0.01 m/s and sampling time 0.1 s, respectively.
The latter coeﬃcients eﬀect the system performances and the problem
becomes to choose the right values for these system variables. Diﬀerent tests
were performed in order to visualize this eﬀect in 3D surface (Fig. 6). Through-
out the simulations, the initial pose of end-eﬀector was ﬁxed and the evaluation
was done by measuring the mean and the standard deviation errors. At the
beginning of each test, two parameters are changed (e.g., β and vtissue) and
the others are ﬁxed (e.g., λ and γ), and vice-versa. In Fig. 6a, the variables β
and vtissue are varied from −1 × 10−6 to −10 and 0.1 m/s to 1 × 10−3 m/s,

128
B. Dahroug et al.
0
0.005
0.01
0.015
0.02
0.025
0.03
0.035
0.04
−0.08
−0.07
−0.06
−0.05
−0.04
−0.03
−0.02
−0.01
 x (m)
 y (m)
 Reference path
 Actual path
(b)
(a)
Fig. 4. a The end-eﬀector motion during approach phase (cyan) and insertion phase
(magenta); b top view to show the diﬀerence between the desired path and the actual
position of tool tip
respectively. In Fig. 6b, the results are obtained by changing λ and γ from 2 to
−0.1 and 2.5 to −0.1, respectively. All the negative values in these ﬁgures are
considered as unacceptable solutions.

Task Controller for Performing Remote Centre of Motion
129
10
20
30
40
50
60
0
0
0.005
0.01
0.015
0.02
0.025
 Approach phase error
iteration
 error (m)
 RCM constraint error
 approach error
0
200
400
600
800
1000
1200
0
1
2
3
4
5
6
7
8x 10
−4
 Inserstion phase error
iteration
error (m)
 RCM constraint error
 path following error
(a)
(b)
Fig. 5. Motion error during a the approach phase and b the insertion phase
(a)
(b)
Fig. 6. Eﬀect of system variables on the error a vtissue versus β and b λ versus γ
4
Conclusion
This chapter proposed a geometric modelling of the RCM constraints and the
path following scheme. The fulcrum eﬀect is also considered as the highest task
priority and the path following scheme as the second priority. This task priority
controller has a great ﬂexibility to be integrated on any type of robot structure;
since it is represented in the task-space. It showed good results in terms of accu-
racy by deploying a straight tool. This controller could be extended to handle a
curved tool. In addition, the RCM constraints may expand to consider unilateral
RCM constraints where the incision hole is bigger than the tool diameter and
the instrument has more space to move before it hits the incision wall.
Appendix
Notation

130
B. Dahroug et al.
Table 1. Symbols summary
Symbol
Description
ℑW
World frame with the origin point W
ℑB
Robot base frame with the origin point B
ℑE
End-eﬀector frame with the origin point E
ℑT
Tool tip frame with the origin point T
ℑR
RCM frame with the origin point R
ℑC
Camera frame with the origin point C
wMe
Homogeneous transformation matrix that describes the pose of ℑE in ℑW
cve
Linear velocity of ℑE that is expressed in ℑC
cωe
Angular velocity of ℑE that is expressed in ℑC
cτ e
Velocity vector of ℑE that groups its linear and angular velocities
I3×3
Identity matrix
ry
The y-component of ℑR
rv
Linear velocity of any point (subscript) that is expressed in ℑR
cτ t
Linear velocity of ℑT that is expressed in ℑC
eER
Vector between the origin points of ℑE and ℑR, expressed in ℑE
euer
Unit vector of eER and expressed in ℑE
evr
Linear velocity of ℑR that is expressed in ℑE
eve
Linear velocity of ℑE that is expressed in its frame
eωe
Angular velocity of ℑE that is expressed in its frame
e1
and
e2
Alignment task error and second task error
LT
e1
Interactive matrix of alignment task error
λ
Gain factor for alignment task error
ue1
Unit vector of alignment task error
γ
Gain factor for second task error
v⊥y
Linear velocity perpendicular on ey
Γ
Geometric path to be followed
Mk
The kth point on the path
d and ˙d
Projection distance between the tool tip and the path, and its time-derivative
S
The projected point on the path
vs
Linear velocity of S along the path
˙s
The speed of S along the path
Ks
Unit vector between two consecutive points along the path
vtissue
Desired linear velocity along the tissue
β
Gain factor for reducing d
α
Gain factor for vtissue
For a better understanding, the notations used within the paper are summarized
in Table 1.

Task Controller for Performing Remote Centre of Motion
131
References
1. Kuo, C.H., Dai, J.S., Dasgupta, P.: Kinematic design considerations for minimally
invasive surgical robots: an overview. Int. J. Med. Robot. Comput. Assist. Surg.
8, 127–145 (2012)
2. Dahroug, B., Tamadazte, B., Andreﬀ, N.: 3d path following with remote center of
motion constraints. In: 13th International Conference on Informatics in Control,
Automation and Robotics, ICINCO (2016)
3. Nakamura, Y., Hanafusa, H., Yoshikawa, T.: Task-priority based redundancy con-
trol of robot manipulators. Int. J. Robot. Res. 6, 3–15 (1987)
4. Funda, J., Taylor, R.H., Eldridge, B., Gomory, S., Gruben, K.G.: Constrained
cartesian motion control for teleoperated surgical robots. IEEE Trans. Robot.
Autom. 12, 453–465 (1996)
5. Mayer, H., Nagy, I., Knoll, A.: Kinematics and modelling of a system for robotic
surgery. On Advances in Robot Kinematics, pp. 181–190. Springer, Berlin (2004)
6. Locke, R.C., Patel, R.V.: Optimal remote center-of-motion location for robotics-
assisted minimally-invasive surgery. In: IEEE International Conference on Robotics
and Automation, pp. 1900–1905 (2007)
7. Gasparetto, A., Boscariol, P., Lanzutti, A., Vidoni, R.: Path planning and trajec-
tory planning algorithms: a general overview. Motion and Operation Planning of
Robotic Systems, pp. 3–27. Springer, Berlin (2015)
8. Azizian, M., Khoshnam, M., Najmaei, N., Patel, R.V.: Visual servoing in medical
robotics: a survey. Part i: endoscopic and direct vision imaging-techniques and
applications. Int. J. Med. Robot. Comput. Assist. Surg. 10, 263–274 (2014)
9. Krupa, A., Doignon, C., Gangloﬀ, J., De Mathelin, M.: Combined image-based
and depth visual servoing applied to robotized laparoscopic surgery. IEEE/RSJ
Int. Conf. Intell. Robot. Syst. 1, 323–329 (2002)
10. Duﬂot, L.A., Krupa, A., Tamadazte, B., Andreﬀ, N.: Towards ultrasound-based
visual servoing using shearlet coeﬃcients. In: IEEE International Conference on
Robotics and Automation (ICRA) (2016)
11. Seon, J.A., Tamadazte, B., Andreﬀ, N.: Decoupling path following and velocity
proﬁle in vision-guided laser steering. IEEE Trans. Robot. 31, 280–289 (2015)
12. Oulmas, A., Andreﬀ, N., R´egnier, S.: Chained formulation of 3d path following for
nonholonomic autonomous robots in a serret-frenet frame. In: American Control
Conference (ACC) (2016)
13. Boctor, E.M., Webster III, R.J., Mathieu, H., Okamura, A.M., Fichtinger, G.:
Virtual remote center of motion control for needle placement robots. Comput.
Aided Surg. 9, 175–183 (2004)
14. Azimian, H., Patel, R.V., Naish, M.D.: On constrained manipulation in robotics-
assisted minimally invasive surgery. In: IEEE RAS and EMBS International Con-
ference on Biomedical Robotics and Biomechatronics (BioRob), pp. 650–655 (2010)
15. Osa, T., Staub, C., Knoll, A.: Framework of automatic robot surgery system using
visual servoing. In: IEEE/RSJ International Conference on Intelligent Robots and
Systems (IROS), pp. 1837–1842 (2010)
16. Aghakhani, N., Geravand, M., Shahriari, N., Vendittelli, M., Oriolo, G.: Task con-
trol with remote center of motion constraint for minimally invasive robotic surgery.
In: IEEE International Conference on Robotics and Automation (ICRA), pp. 5807–
5812 (2013)

132
B. Dahroug et al.
17. Marinho, M.M., Bernardes, M.C., B´o, A.P.: A programmable remote center-of-
motion controller for minimally invasive surgery using the dual quaternion frame-
work. In: 5th IEEE RAS and EMBS International Conference on Biomedical
Robotics and Biomechatronics, pp. 339–344 (2014)
18. Pham, C.D., Coutinho, F., Leite, A.C., Lizarralde, F., From, P.J., Johansson, R.:
Analysis of a moving remote center of motion for robotics-assisted minimally inva-
sive surgery. In: IEEE/RSJ International Conference on Intelligent Robots and
Systems (IROS), pp. 1440–1446 (2015)

Toward an Automatic Fongbe Speech
Recognition System: Hierarchical Mixtures of
Algorithms for Phoneme Recognition
Fr´ejus A.A. Laleye1,2(B), Eug`ene C. Ezin1, and Cina Motamed2
1 Unit´e de Recherche En Informatique Et Sciences Appliqu´ees, Institut de
Math´ematiques Et de Sciences Physiques, Universit´e D’Abomey-Calavi, BP 613,
Porto-novo, B´enin
frejus.laleye@imsp-uac.org
2 Laboratoire D’Informatique Signal Et Image de la Cˆote D’Opale, Universit´e du
Littoral Cˆote D’Opale, 50 Rue F. Buisson, BP 719, 62228 Calais Cedex, France
Abstract. In this paper, we have demonstrated the eﬃcacy of an auto-
matic continuous speech recognition system by mixing fuzzy and neu-
ronal approaches and an acoustic analysis of the sounds of an under-
resourced language. The system we propose integrates the modules such
as extraction module, segmentation and phoneme recognition modules
and whose the core is based on the phoneme detection in continuous
speech. This work oﬀers a complete recipe of algorithms to perform hier-
archically the following tasks: speech segmentation - phoneme classiﬁca-
tion - phoneme recognition. The segmentation task provides as output
phoneme segment which are subsequently classiﬁed according to their
nature (consonant or vowel voiced or unvoiced etc.). The segmentation
and classiﬁcation are based exclusively on a fuzzy approach while the
phoneme recognition task exploits the acoustic features such as the for-
mants for vowels and the pitch and intensity for consonants. Experiments
were per- formed on Fongbe language (an African tonal language spoken
especially in Benin, Togo and Nigeria) and results of phoneme error rate
are reported.
Keywords: Formant analysis · Fuzzy logic · Deep belief networks ·
Phoneme recognition · Continuous speech segmentation · Fongbe lan-
guage
1
Introduction
An automatic speech recognition system is eﬀective when it uses a decoder based
on phonemes. Most large vocabulary automatic speech recognition systems use
several interconnected layers of recognition for optimum performance. The objec-
tive behind each of the layers is the recognition accurately of phonemes contained
in the speech signal. Many methods exist for phoneme recognition which are
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_7

134
F.A.A. Laleye et al.
introduced for generating of phonetic symbols from the extracted feature vec-
tors and calculated on speech signals. These are methods based on approaches
such as Artiﬁcial Neural Network (ANN) [1–3], Hidden Markov Models (HMM)
[4,5], Support Vector Machine (SVM) [6] or some hybrid methods [7,8].
The work, in this paper, focuses on the development of an automatic phoneme
recognition from continuous speech using several interconnected layers starting
from the continuous speech segmentation to phoneme recognition [12]. The over-
all system is the fusion of the recognition layer investigated in this work, the seg-
mentation and the classiﬁcation layers investigated respectively in [9,10] which
were previous works on Fongbe language.
The proposed system was designed to recognize Fongbe’s phonemes through-
out the entire process of speech recognition and the experiments were performed
on a read speech corpus which contains 3117 utterances. For an evaluation, we
calculated the phone error rate score according to the diﬀerent DBN model used
for recognizing each phoneme in its subclass. Experiments have shown a signiﬁ-
cant improvement in the results given by phone error rates (PER).
2
Overview of the Proposed System
Our phoneme recognition system of Fongbe language is performed in several
stages whose processes are carried out according to layers. The various stages
are summarized in Fig. 1.
It includes the segmentation (i), classiﬁcation (ii) and recognition (iii) layers
as explained above and the processing order. To realize (i), we used the time
domain approaches to generate features for detecting phoneme segments and
fuzzy logic approach for a matching phase performed through supervised learn-
ing. Thus, (i) provides the phoneme segments with an accurate in the deﬁnition
of boundaries. The Layer (ii) consists of a discriminatory system of consonants
and vowels using an intelligent classiﬁer combination based on decision-level
fusion. It produces phonemes that are either consonants or vowels whose pho-
netic identity is recognized at (iii). Layer (iii) is based on acoustic analysis of
Fongbe phonemes for identifying with more precision the phonetic content of
the phoneme to its input. Time-domain features and frequency-domain features
are respectively extracted from the speech signal to perform the segmentation
and classiﬁcation tasks. Frequency-domain features are computed on phoneme
segments in step 2 order to constitute the classiﬁcation system inputs. In step 5,
we calculated the formant frequencies to facilitate the recognition of consonants
or vowels.
3
Speech Data
The complete recipe of algorithms proposed in this work has been built for an
automatic recognition of Fongbe phonemes contained in a continuous speech.
Fongbe language is the majority language of Benin, which is spoken by more
than 50% of Benin’s population, including 8 million speakers and also spoken in

Toward an Automatic Fongbe Speech Recognition System . . .
135
#process
step
2
3
4
5
6
7
speech signal
segmentation
phoneme segments
classification
consonant or vowel
recognition
phoneme recognized
Fig. 1. Overview of our automatic phoneme recognition
Nigeria and Togo. Fongbe is an under-resourced language which is characterized
by a series of vowels (oral and nasal) and consonants (unvoiced, fricatives). By
excluding compound words and derived words, the words of Fongbe language can
be grouped into monosyllabic (V and CV), into bisyllabic (VCV; CVV; CVCV
and VV) and trisyllable (VCVCV and CVCVCV). It is written oﬃcially in Benin
with an alphabet derived from the Latin writing since 1975. It has a complex
tonal system, with two lexical tones, high and low, which may be modiﬁed by
means of tonal processes to drive three further phonetic tones: rising low-high,
falling high-low and mid [11]. The Fongbe’s vowel system is well suited to the
vocalic timbre as it was designed by the ﬁrst Phoneticians. It includes twelve
timbres: 7 oral vowels with 4◦of aperture and 5 nasal vowels with 3 degrees of
aperture. Its consonant system includes 22 phonemes in 7 orders and 4 series.
The Fongbe speech corpus is divided into a train and test sets which respectively
contain 2307 and 810 sentences uttered by 56 speakers whose ages are between 9
and 45 years. It contains for the full database approximately 12 thousand words
and more than 96 thousand phonemes.

136
F.A.A. Laleye et al.
4
Continuous Speech Segmentation
The ﬁrst processing layer of our recognition system performs the segmenta-
tion of the input continuous speech signal. The method adopted to achieve this
task is the one proposed in [10] to perform a text-independent segmentation of
Fongbe continuous speech.The segmentation method was performed from non-
linear speech analysis using fuzzy logic approach. It is based on the calculation
of time domain features such as short-term energy, zero crossing rate and the
singularity exponents in each point of signal. As part of our work, we modiﬁed
the calculation of singularity exponents by reducing the frame sizes in the scale-
dependent functional h(t) in order to detect only the boundaries between the
phoneme segments in speech signal. For more details please refer to [10]. The
used algorithm for automatic text-independent segmentation is summarized in
Fig. 2 and includes the following tasks:
Fig. 2. Flow diagram of the segmentation algorithm

Toward an Automatic Fongbe Speech Recognition System . . .
137
a Removal the silence from speech signal: a method based on the signal energy
and the spectral centroid is used to remove the silence areas in the audio signal.
The energy for each frame i is computed thanks to the Eq. (1) where N is the
length of the signal x.
E(i) = 1
N
N

n=1
|xi(n)|2
(1)
The spectral centroid Ci of the ith frame is deﬁned in Eq. (2) as spectrum
mass center. In Eq. (2), Xi(k), k = 1, . . . , N are the Discrete Fourier Transform
(DFT) coeﬃcients of the ith short-term frame, where N is the frame length.
C(i) =
N
k=1(k + 1)Xi(k)
N
k=1 Xi(k)
.
(2)
b Singularity exponents Computation: local distribution of singularity exponents
has been exploited for analyzing the temporal dynamics of speech segments
previously obtained. This leads to the segment candidates. Figure 3 shows
the distribution of singularity exponents calculated on the spoken phrase
“A xa k wεa?” which in English means “Did you count the money?” with the
minimas and maximas which give the candidate silent or phoneme/syllable
segments.
c Short-time energy and zero crossing rate calculation: the features are com-
puted in each candidate segment generated by the local analysis of singularity
Fig. 3. TOP- Original signal and its phonetic transcription with the phoneme bound-
aries, BOTTOM- Curve of change levels of singularity exponents h(t) with minimas
in green and maximas in red

138
F.A.A. Laleye et al.
exponents. Energy reﬂects the amplitude variation. It allows to observe a sig-
niﬁcant variation in the signal peak amplitude and a considerable variation of
fundamental frequency within voiced regions in a speech signal. It is deﬁned
as shows the Eq. (3).
Ek = 1
K
K

n=1
[s(n)wH(k −n)]2
(3)
where s(n) is a discrete-time audio signal and wH is the Hamming window
function. The zero-crossing rate is related to the mean frequency for a given
segment. It is null for a silent segment and has been proven to be useful in
characterizing diﬀerent audio signals. It has been used the short time average
zero crossing rate whose expression is shown in Eq. 4.
Zm =

n
|sign[x(n)] −sign[x(n −1)]|w(m −n)
(4)
where the sign function is:
sign[x(n)] =
1
x(m) ≥0
−1 x(m) < 0
(5)
w(m) =

1/2N 0 ≤m ≥N −1
0
otherwise
(6)
and x(n) is the time domain signal for frame m. Figure 4 shows the time
variation of each calculated feature on the spoken phrase “Axak wεa?.”
d Fuzzy rules application: fuzzy rules have been generated for the matching phase
to improve the accuracy in the phoneme or syllable segments detection and the
boundaries of beginning and the end.
The phoneme segments are properly detected at the matching phase. The
matching phase is performed by using fuzzy logic model which consists of a
number of conditional “if-then” rules. The matching phase inputs are singular-
ity exponents (SE), short-term energy (STE) and zero crossing rate (ZRC) and
the output is the membership degree of silence and phoneme. The input vari-
ables are fuzziﬁed into three complementary sets namely: low, medium, high and
the output variable is fuzziﬁed into two sets: silent and phoneme. The authors
obtained for the diﬀerent coeﬃcients considering the features values:
• STE: low - medium - high
• ZCR: low - medium - high
• SE: low - medium - high
The fuzzy rules generated through supervised learning are presented in Table 2.
In this table, x is a variable that can take the value low, medium or high. The
diﬀerent membership functions were obtained by examining the local distribution

Toward an Automatic Fongbe Speech Recognition System . . .
139
Fig. 4. TOP- Original signal s(t) and its phonetic transcription with the phoneme
boundaries, MIDDLE-1 in blue color, curve of change levels of singularity exponents
h(t), MIDDLE-2 in red color, time variation of Short-Term Energy E(t), BOTTOM-
time variation of Zero Crossing Rate Z(t)
Table 1. Generated fuzzy rules
Rules No
Input
Output
STE
ZCR
SE
1
Low
x
x
Silent
2
x
Low
x
Silent
3
x
x
Low
Silent
4
Medium
Medium
Medium
Phoneme
5
Medium
Medium
High
Phoneme
6
x
High
x
Silent
7
High
Medium
Medium
Phoneme
8
High
Medium
High
Phoneme
of each calculated feature. Local distribution has induced three subsets according
to the variation of input data and output is obtained depending on the nature
of data. Because of the linearity of values in the subsets, a simple triangle curve
(trimf ) is used for the membership functions (Table 1).

140
F.A.A. Laleye et al.
Table 2. Generated fuzzy rules. x is a variable that can take the value low, medium
or high
Rules No
Input
Output
mfcc
rasta
plp
1
Low
Low
Low
Consonant
2
Low
Low
Medium
Vowel
3
x
x
High
Consonant
3
x
x
Very high
Vowel
4
Low
Medium
Low
Vowel
5
Low
High
Low
Consonant
6
Low
Very high
Low
Vowel
7
Medium
Low
Low
Vowel
8
Medium
Very high
Low
Vowel
9
High
Low
Low
Consonant
11
High
High
Low
Consonant
12
Very high
Low
Low
Vowel
13
Very high
Low
Medium
Vowel
14
Very high
Medium
Low
Vowel
15
Very high
Very high
Low
Vowel
16
Very high
Very high
Medium
Vowel
5
Classiﬁcation of the Detected Phonemes
The phoneme classiﬁcation system [9] consist of three modules which are each
subdivided into submodules. The ﬁrst module performs classiﬁcation with Naive
Bayes and Learning Vector Quantization (LVQ) classiﬁer and produces outputs
with the coeﬃcients applied as input. It contains the submodules which are (i)
feature extraction (MFCC, PLP, and Rasta-PLP), (ii) classiﬁcation with Naive
Bayes and LVQ. The second module performs weighted mean calculation of
classiﬁers outputs and contains the submodule which is (iii) normalization for
classiﬁers decisions database. The last module performs the decision fusion with
fuzzy approach. Figure 5 shows the various steps of classiﬁcation.
Nature of the results obtained in the ﬁrst step allows to apply fuzzy logic
on four membership functions. The inputs to fuzzy logic system are MFCC,
PLP and Rasta-PLP and the output obtained is the membership degree of a
phoneme to consonant or vowel class. The input variables are fuzziﬁed into four
complementary sets namely: low, medium, high and very high and the output
variable is fuzziﬁed into two sets namely: consonant and vowel. Table 2 shows
the fuzzy rules which were generated after fuzziﬁcation. First, the input data is
arranged in an interval as [Xmin .. Xmax]. The diﬀerent membership functions
were obtained by examining the local distribution of samples of both classes.

Toward an Automatic Fongbe Speech Recognition System . . .
141
(a) Classiﬁcation and normalization
(b) Decision fusion using fuzzy logic
Fig. 5. Paradigm of our classiﬁcation system
Local distribution has induced four subsets according to the variation of the
input data and the output is obtained depending on the nature of the data. For
example, if we give MFCC, PLP and Rasta as input to the system, the consonant
or vowel output is obtained according to the subsets of the input data. Because
of the linearity of values in the subsets, a simple triangle curve (trimf ) is used
for low and medium membership functions and a trapeze curve (trapmf ) is used
for high and very high membership functions.
This layer described in this section provides a classiﬁcation in consonant or
vowel of phoneme segments obtained in the ﬁrst layer. The following section
explain how our system recognize deﬁnitively the phonemes contained in a spo-
ken speech.
6
Recognition of the Classiﬁed Phonemes
The phoneme detection is the third layer of our system, which is to recognize
each phoneme included in the speech on the basis of the formant frequencies.
We established an acoustic analysis of the phonemes by calculating the formant

142
F.A.A. Laleye et al.
Fig. 6. Tree of consonants and vowels
F1, F2 and F3 from vowels and the fundamental frequency and intensity from
consonants. The recognizer was therefore trained with a Deep Belief Network
(DBN) and a fuzzy logic system with the features calculated for recognizing each
of the consonants and vowels. The acoustic analysis by calculating the frequencies
allowed us to represent the phonemes in a tree according to the values of the
formant, pitch and intensity. Figure 6 shows the tree of the categorization of
consonants and vowels.
6.1
Formant Analysis of Vowels
Articulatory conﬁguration of each vowel lead to speciﬁc formant values corre-
sponding to the shape taken by the vocal tract for each vowel. The shape will
induce a resonant frequency in production of vowels: higher its size is, lower
its frequency is. The ﬁrst three formant have a wide variation in the acoustic
conﬁguration of each vowel. The mandible aperture (F1) varies from 311 Hz
(front. /i/) to 681 Hz (cent. /a/) for oral vowels and from 315 Hz (front. /˜i/) to
610 Hz (cent. /˜a/) for nasal vowels. The second formant (F2) which indicates the
tongue movement in front or rear position takes values from 697 Hz (back. /u/)
to 2238 Hz (front. /i/) for oral vowels and from 406 Hz (back. /˜u/) to 1630 Hz
(back. /˜i/). The third formant inﬂuenced by the rounding of the lips has values
that vary between 2696 Hz (back. /O/) and 3174 Hz (front. / O/) for oral vowels
and between 711 Hz (back. /˜O/) and 2870 Hz (front. /˜E/).
In F1-level, oral vowels (back. and front.) /i/, /u/, /e/ and /o/ have lower
values while oral vowels (back. and front.) /E/, /O/ and the central oral vowels
/a/ have the highest values. In each aperture level, a front vowel has a greater
F1 than a back vowel. Vowels /i/ and /a/ are respectively the low and high
extremities in the frequency range of the mandible aperture (F1). These remarks
are also observed with nasalized vowels. This indicates that front vowels are /i
e E i
˜
E
˜
/ and the listed back vowels are /u o O u
˜
O
˜
/. In F2-level, front vowels
have higher frequencies compared to back vowels that are realized with low
frequencies. The only diﬀerence between the vowels from the same class (front
and back) is the value of the third formant F3. F3 of /u/ (F3 = 3083 Hz)

Toward an Automatic Fongbe Speech Recognition System . . .
143
Table 3. Mean values of formants F1, F2 et F3 for each phoneme of Fongbe vowel
system
F1-average
F2-average
F3-average
Oral
front
i
311
2238
3174
e
353
2042
3096
E
530
1255
3081
back
u
326
697
3083
o
380
822
2727
O
555
1051
2696
cent.
a
681
1404
2789
Nasal
front
i
˜
315
1630
2738
E
˜
405
1362
2870
back
u
˜
325
406
2720
O
˜
501
705
2711
cent.
a
˜
610
1015
2769
and /u
˜
/ (F3 = 2720 Hz) has a lower value than the value of the vowels /i/
(F3 = 3174 Hz) and /i
˜
/ (F3 = 2738 Hz), thereby justifying the rounding of the
lips during the production of vowels /u u
˜
/. Table 3 summarizes the averages of
formant frequencies calculated on all phonemes in the data corpus.
6.2
Fongbe Consonant System
Fongbe consonant system is composed of twenty-two (22) phonemes grouped into
two (2) classes (oral and nasal consonants). Unlike the acoustic conﬁguration of
vowels that is characterized by the presence of formant frequencies, the acoustic
analysis of consonants consisted in calculating of two acoustic markers: funda-
mental frequency (pitch) that materializes the periodic vibration of the vocal
cords and intensity that materializes the sub-glottis pressure. Usually, there are
three main classes for acoustic analysis of consonants: plosives, fricatives and
sonorants. The consonants from French are investigated in the next plosives,
fricatives and consonant vocalic. In Fongbe, in addition to occlusive, fricative
and consonant vocalic, there are two other classes that are nasal consonants and
semi-consonants.
• The Occlusives from Fongbe have the same conﬁguration than most other
languages, including French. We distinguish sound and voiceless stops, which
are mainly composed of voiced (/d g gb j/) and unvoiced (/b ã/) oral con-
sonants. They are characterized by the fundamental frequency (f0) which
vary averagely between the voiced consonants (263 Hz for /j/ and 279 Hz for
/gb/). The unvoiced consonants are realized with lower pitch than voiced con-
sonants except /d/ and /j/. The fundamental frequencies (pitch) calculated

144
F.A.A. Laleye et al.
Fig. 7. Pitch per consonant
Fig. 8. Intensity of each consonant
over all speakers in data corpus are shown in Fig. 7. The smallest average
voice intensity (Fig. 8) during the isolated pronunciation of voiced stops is
obtained with the voiced consonant /d/ (56 db) while the higher is obtained
with the unvoiced /b/ (60 db) voiceless Occlusives of Fongbe are composed
of some voiceless oral consonants such as /c k kp t/ and also /p/ which is
not considered a phonemic consonant but only found in some words bor-
rowed from other languages. The voice intensity during the pronunciation of
voiceless stop varies between 53 db (for /c/) and 59 db (for /p/).
• Articulatory conﬁguration fricatives indicates the presence of noise through-
out their pronunciation. As occlusives, there are sound fricatives (periodic)
and the voiceless fricatives (aperiodic) in Fongbe. The sound fricatives are

Toward an Automatic Fongbe Speech Recognition System . . .
145
composed of sound oral consonants /h v z/ and the voiceless fricatives are
composed of voiceless oral consonants /f s x/. The fundamental frequency of
/h/ (250 Hz) is lower than periodic fricatives /z/ (293 Hz) and /v/ (286 Hz).
Voiceless fricatives are realized with low intensity values compared to the
sound fricatives whose peaks are observed respectively with the consonants
/x/ (54 db) and /z/ (58 db).
• There are three nasals consonants in Fongbe such as /m/, /n/ and /N/. They
are comparable to voiced stops in an articulatory viewpoint. They are realized
with the lowest fundamental frequencies compared to voiced stops. Compared
to other consonants from Fongbe, the nasal consonants are produced with
the lowest intensity of voice and form, with the semi-consonants (/w/ and
/y/) the briefest in the pronunciation. The realization of semi-consonants are
performed with almost the same periodic vibration rhythms of the vocal cords
(pitch values) and the same pressure subglottic (intensity) than the voiced
stops.
6.3
Baseline Phoneme Recognition System
We used two diﬀerent approaches to perform the process of the last layer of our
recognition system: fuzzy logic and DBN approaches. The Computation of the
vowel formants, the fundamental frequency and intensity of consonants provide
additional expert knowledge which can allow us to apply a fuzzy logic system
to eﬀectively recognize consonant or vowel phonemes (the inputs of this layer).
Then, we used several DBNs in a hierarchical architecture based on the phoneme
classiﬁcation (Fig. 6) to achieve recognition. Our recognition system consists of a
mixture of fuzzy rules applied for recognizing subclasses of phonemes and DBN
structures for recognizing the phonemes contained in each subclass. Thus, ini-
tially we used the fuzzy logic model which consist of a number of conditional
“if-then” rules. When the classiﬁcation layer provides a consonant to the recog-
nition layer, the inputs of the fuzzy logic system are fundamental frequency and
intensity and the output is the membership degree of voiceless, voiced, sono-
rant and nasal. In the case of a vowel as input to the third layer, the inputs
are the formants F1, F2 and F3 and the output is the membership degree of
oral front, oral central, oral back, nasal front, nasal central and nasal back. For
a consonant as an input, the fundamental frequency (f0) is fuzziﬁed into four
complementary sets namely: low, medium, high, very high and intensity is fuzzi-
ﬁed into three complementary sets namely: low, medium, high. For a vowel, each
formant is fuzziﬁed into three complementary sets namely: low, medium, high.
The linearity of computed features induced the use of a simple triangle curve
(trimf) for low, medium, high and very high membership functions. The fuzzy
rules generated through supervised learning are presented in Tables 4 and 5.
After having detected the subclasses, we perform a learning step based on
the use of Deep Belief Network. We trained 10 DBN models whose the neuron
number in the output layer varies according on the number of elements in a
subclass. We used three diﬀerent architectures to compare the recognition per-
formance and impact of the layer number of DBN models on the performance
of our recognition system. This is also motivated by diﬀerences in the change

146
F.A.A. Laleye et al.
Table 4. The generated fuzzy rules applied to vowel for identifying its subclass
Rules No
Input
Output
F1
F2
F3
1
Low
Low
Low
Oral front
2
Low
Low
Medium
Nasal front
3
Low
Low
High
Oral front
4
Low
High
Medium
Nasal back
5
Low
High
High
Oral back
6
Medium
Low
Low
Nasal front
7
Medium
Medium
High
Nasal back
8
High
Low
Low
Oral front
9
High
Low
Medium
Nasal central
10
High
Medium
Medium
Oral central
11
High
Medium
High
Oral back
Table 5. The generated fuzzy rules applied to consonant for identifying its subclass
Rules No
Input
Output
f0
Intensity
1
Low
Medium
Sonorant
2
Low
High
Nasal
3
Medium
Medium
Voiced
4
Medium
High
Sonorant
5
High
Low
Voiced
6
High
Medium
Voiced
7
Very high
Low
Voiceless
8
Very high
Medium
Voiced
of phoneme subclasses. Table 6 summarizes the parameters used for each DBN
model
7
Experiments Results
The best performing setting of DBN models (four hidden layer architectures)
was used to compute the phone error rate (PER) for the core test set. PER is
the standard evaluation metric for phoneme recognition systems. It measures
the diﬀerence between the phoneme string returned by the recognizer and the
correct reference transcription. The distance between the two phoneme strings
is computed by the classical minimum edit distance algorithm [13]. Its formula

Toward an Automatic Fongbe Speech Recognition System . . .
147
Table 6. DBN parameters
Model-256 units
Model-512 units
Model-1024 units
RBM Layer 1
256 units
512 units
1024 units
RBM Layer 2
256 units
512 units
1024 units
RBM Layer 3
256 units
512 units
1024 units
RBM Layer 4
256 units
512 units
1024 units
Learning rate
0.01
0.01
0.01
Training Epochs
160
160
160
Batch size
8
8
8
Table 7. Performance metrics per model
Models
DE (%)
IE (%)
SD (%)
PER (%)
Acc (%)
256 units
7.15
4.60
16.30
28.05
71.95
512 units
9.02
3.04
12.5
24.56
75.44
1024
units
10.03
1.30
13.4
24.73
75.27
(Eq. 7) is based on the number of phoneme substitutions (SD), insertions (IE)
and deletions (DE) which are necessary to map between the correct and hypoth-
esized strings. They are computed with the following expressions:
• substitution detection (SD) = number of substitutions/number of automati-
cally obtained phonemes
• insertion error (IE) = number of insertions/number of automatically obtained
phonemes
• deletion error (DE) = number of deletions/number of reference phonemes
PER = 100.SD + IE + DE
N
(7)
where N represents the number of phonemes in the correct transcription.
After calculating the PER metric, we also calculate Acc (recognition accu-
racy) by using:
Acc = 100 −PER
(8)
PER for four-layer architectures with diﬀerent hidden layer sizes are pre-
sented in Table 7.
The best PER is obtained with 512 units as hidden layer sizes and is around
24%. This shows that by adding more hidden layer sizes, from 256 units to 512
units, the recognition system performance has signiﬁcantly improved and has
given the best PER.

148
F.A.A. Laleye et al.
8
Conclusion
We used a mixture of algorithms that we developed to design a system of
Fongbe phonemes recognition. We proposed an algorithm taking into account
the acoustic-phonetic knowledge for performing each stage of the speech recog-
nition process. The result of the eﬀorts reported in this work is a complete recipe
of algorithms whose the output is a set of DBN models trained individually on
2307 sentences of the training set and according to the conﬁguration of each
subclass. Unlike most phoneme recognition systems, we ﬁrst performed a recog-
nition of plosives, fricatives and nasal consonants for consonant phonemes and
recognition of oral and nasal for vowel phonemes. This led to the improvement
of the phone error rate used to evaluate our recognition system. The use of the
subclasses by reducing phoneme set increased approximately with 4% the recog-
nition accuracy. Another important ﬁnding of this work is that we achieved very
good Fongbe phoneme recognition accuracy with 512 units as hidden layer sizes
in our DBN models.
References
1. Palaz, D., Collobert, R., Magimai.-Doss, M.: End-to-end phoneme sequence recog-
nition using convolutional neural networks. Idiap-RR (2013)
2. Yousafzai, J., Cvetkovic, Z., Sollich, P.: Tuning support vector machines for robust
phoneme classiﬁcation with acoustic waveforms. In: 10th Annual conference of the
International Speech communication association, pp. 2359–2362, England, ISCA-
INST SPEECH COMMUNICATION ASSOC (2009)
3. chwarz, P., Matejka, P., Cernocky, J.: Hierarchical structures of neural networks
for phoneme recognition. IEEE International Conference on Acoustics Speech and
Signal Processing Proceedings (2006)
4. Young, S.: Hmms and related speech recognition technologies. Springer Handbook
of Speech Processing. Springer, Berlin (2008)
5. Marani, S., Raviram, P., Wahidabanu, R.: Implementation of hmm and radial basis
function for speech recognition. In: International Conference on Intelligent Agent
and Multi-Agent Systems, pp. 1–4. Chennai (2009)
6. Solera-Urena, R., Martin-Iglesias, D., Gallardo-Antolin, A., Pelaez-Moreno, C.,
Diaz-de Maria, F.: Robust asr using support vector machines. Speech Commun.
49(4), 253–267 (2007)
7. Trentin, E., Gori, M.: A survey of hybrid ann/hmm models for automatic speech
recognition. Neurocomputing 37(1), 91–126 (2007)
8. Anapathy, S., Thomas, S., Hermansky, H.: Modulation frequency features for
phoneme recognition in noisy speech. J. Acoust. Soc. Am. 125(1), EL8–EL11
(2009)
9. Laleye, F.A.A., Ezin, E.C., Motamed, C.: Adaptive decision-level fusion for fongbe
phoneme classiﬁcation. In: Proceedings of the 12th International Conference on
Informatics in Control, Automation and Robotics, Vol. 1, pp. 15–24. Colmar,
Alsace, France, 21–23 July 2015
10. Laleye, F.A.A., Ezin, E.C., Motamed, C.: An algorithm based on fuzzy logic for
text-independent fongbe speech segmentation. In: 11th International Conference on
Signal-Image Technology & Internet-Based Systems, SITIS 2015, pp. 1–6. Bangkok,
Thailand, 23-27 Nov 2015

Toward an Automatic Fongbe Speech Recognition System . . .
149
11. Lefebvre, C., Brousseau., A.: A grammar of fonge, de gruyter mouton, p. 608
12. Laleye F., Ezin E., Motamed C.: Automatic fongbe phoneme recognition from spo-
ken speech signal. In: Proceedings of the 13th International Conference on Infor-
matics in Control, Automation and Robotics, pp. 102–109 (2016)
13. Huang, X., Acero, A., Hon, H-W.: Spoken Language Processing, A Guide to The-
ory, Algorithm and System Development. In Prentice Hall (2001)

Robotics and Automation

Spatial Fusion of Diﬀerent Imaging Technologies
Using a Virtual Multimodal Camera
Sebastian P. Kleinschmidt(B) and Bernardo Wagner
Real-Time Systems Group, Institute for Systems Engineering,
Appelstr. 9A, 30167 Hannover, Germany
kleinschmidt@rts.uni-hannover.de, wagner@rts.uni-hannover.de
http://www.rts.uni-hannover.de
Abstract. To analyze potential relations between diﬀerent imaging
technologies such as RGB, hyperspectral, IR and thermal cameras, spa-
tially corresponding image regions need to be identiﬁed. Regarding the
fact that images of diﬀerent cameras cannot be taken from the same pose
simultaneously, corresponding pixels in the taken images are spatially
displaced or subject to time variant factors. Furthermore, additional spa-
tial deviations in the images are caused by varying camera parameters
such as focal length, principal point and lens distortion. To reestablish
the spatial relationship between images of diﬀerent modalities, additional
constraints need to be taken into account. For this reason, a new inter-
modal sensor fusion technique called Virtual Multimodal Camera (VMC)
is presented in this paper. Using the presented approach, spatially corre-
sponding images can be rendered for diﬀerent camera technologies from
the same virtual pose using a common parameter set. As a result, image
points of the diﬀerent modalities can be set into a spatial relationship so
that the pixel locations in the images correspond to the same physical
location. Additional contributions of this paper are the introduction of
an hybrid calibration pattern for intrinsic and extrinsic intermodal cam-
era calibration and a high performance 2D-to-3D mapping procedure. All
steps of the algorithm are performed parallelly on a graphics processing
unit (GPU). As a result, large amount of spatially corresponding images
can be generated online for later analysis of intermodal relations.
Keywords: Intermodal sensor fusion · Virtual multimodal camera ·
GPU-acceleration
1
Introduction
The aim of sensor fusion is to improve the quality of information compared to
the information observed using just one individual sensor. In case of imaging
sensors, the main step of this process is called spatial alignment. During this
step, local spatial positions are converted into a common coordinate system
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_8

154
S.P. Kleinschmidt and B. Wagner
[17]. Spatial alignment algorithms can be divided into intra- and intermodal
algorithms. The process of spatially aligning two-dimensional images from the
same imaging modality is called intramodal image registration. If the images
discriminate in imaging modality, it is called intermodal image registration [3].
While feature based intramodal sensor fusion is state of the art in image
processing, intermodal image registration is not so common except for medical
applications. In medical applications, intermodal registration is widely used in
many clinical applications as prerequisite of complex radiotherapeutic and neu-
rosurgical procedures and has proven to be useful for advancing the clinical
reliability of using imaging for medical diagnostics [8].
For mainly two reasons applications using multimodality imaging in mobile
robotics are so rare: First, in contrast to typical robotic applications, most med-
ical applications have the advantage of knowing that the images vary in imaging
modality but show the same object of investigation such as the same body part of
a patient. Taking this a priori knowledge into account, possible correspondences
can be limited to a known anatomical atlas for which a large number of images
from diﬀerent modalities are available. Based on the large amount of multimodal
images gathered over time of the same object class, suitable structures for spatial
alignment can be easily identiﬁed and be used to develop application referred
algorithms. In contrast, most applications in mobile robotics are confronted with
a high uncertainty about possible objects occurring in their environment. As a
consequence, only a small number of multimodal images of a speciﬁc object are
available a priori which can be used to develop algorithms for automatic spatial
alignment using object speciﬁc features.
A second closely related reason for the rare use of multimodal images in
robotic applications is the lack of a priori knowledge of corresponding struc-
tures in the observed environment. The recognition of previously seen envi-
ronmental structures is a key element for typical robotic applications such as
image based localization or mapping. To identify corresponding structures across
images, many robotic applications use image features as Features from Acceler-
ated Segment Test (FAST) [21], Scale-Invariant Feature Transform (SIFT) [13]
or Speeded Up Robust Features (SURF) [2]. From the author’s perspective, there
are no publications investigating the general transferability of FAST, SIFT and
SURF features for diﬀerent imaging modalities. Based on the varying represen-
tation of structure elements over diﬀerent imaging modalities, it is challenging
to develop a modality invariant feature descriptor.
As an initial step to research the transferability of image features across imag-
ing modalities, this paper presents a model for a Virtual Multimodal Camera
(VMC). Using this camera, diﬀerent images of varying modalities are converted
into images of a virtual camera, which spatially align as if they were taken not
only by a camera with the same camera parameters but also from the same
pose. As a result, image points of the diﬀerent modalities can be set into a spa-
tial relationship so that the pixel locations in the images correspond to the same
physical location. The resulting images are suited for analyzing corresponding
structures which may be identiﬁed across diﬀerent imaging modalities.

Spatial Fusion of Diﬀerent Imaging Technologies . . .
155
The rest of this paper is organized as follows: Sect. 2 provides an overview of
related scientiﬁc work in the area of intermodal image registration. Techniques
for multimodal image fusion in the area of medical imaging as well as agricultural
robotics are introduced. Afterwards, as a preparation for the introduction of the
VMC, the used notation is introduced in Sect. 3. Subsequently, in Sect. 4 our
approach for a VMC is presented, including intrinsic and extrinsic calibration,
ﬁltering techniques and the mathematical background for 2D-to-3D projection.
Thereafter, the image generation by the VMC is explained. Finally, in Sect. 5 the
full parallel implementation of the algorithm is described. Section 6 provides a
practical implementation of the described approach to collect large datasets. In
addition, the chapter presents the results of the mapping process as well as the
images of the VMC. The paper ends with an evaluation of the shown method
followed by a ﬁnal conclusion and an outlook on further work.
2
Related Work
As mentioned in the introduction, intermodal image fusion is state of the art
in medical applications. Therefore, the chapter begins with a short overview
on state of the art fusion techniques in the area of intermodal medical image
fusion. Multimodal medical image fusion algorithms have shown notable achieve-
ments in improving clinical accuracy of decisions based on medical images [8].
Common imaging modalities for medical applications are Magnetic Resonance
Imaging (MRI), Computerized Tomography (CT), Position Emission Tomog-
raphy (PET), Single-Photon Emission Computed Tomography and Ultrasound.
According to [8], existing medical image fusion approaches can be divided into six
main categories: Morphological, knowledge, wavelet, neural network and fuzzy
logic based methods. Furthermore, [16] divides these six categories into feature
and data-level fusion methods.
Morphological Methods are feature-level based approaches which use
sequences of morphological operators for detecting spatially relevant informa-
tion as scale speciﬁc features. The detected features are then used for image
fusion. A typical application for morphological image fusion, is the fusion of CT
and MR Images [14–16]. Also part of the feature-level category are wavelet based
methods which extract relevant information from one image and inject it into
another using substitution, addition, aggregate functions or data-driven models
[9]. One example for a possible usage of wavelet based methods is the fusion
of CT and PET images [1]. Features obtained from wavelet based methods can
also be used in combination with artiﬁcial neural networks (ANN) as presented
in [26]. Besides, ANNs are successfully used for feature generation, classiﬁca-
tion, image fusion and medical diagnosis. To train a neural network for feature
extraction or intermodal image fusion, a large amount of ground truth data is
necessary. Medical images can also be fused using domain dependent knowledge
of medical experts. As a preprocessing step for other methods, a human expert is
labeling and identifying the relevant structures for the fusion process. Knowledge
based methods are part of data-level approaches.

156
S.P. Kleinschmidt and B. Wagner
Fuzzy Logic approaches are also successfully applied for a feature transform
operator or as a decision operator for image fusion [8,25].
Medical image fusion is an extensive ﬁeld of research. Therefore, only general
methods are mentioned in this chapter. An in depth survey of state of the art
image fusion methods can be found in [8,9].
Multimodal imaging is also relevant for agricultural applications. In [12], a
combination of thermal and visible imagery for estimating canopy temperature
and identifying plant stress is introduced. For aligning the used images, feature
points as the tips of leaves are selected manually from the thermal and visible
image. In [19], images of plants in the thermal and visible spectrum are aligned
as pre-processing step for further analysis. Therefore, the authors extract the
silhouette of diseased plants in the thermal image to register the thermal and
the RGB image with high accuracy. Both publications belong to the area of
multimodal research with a priori knowledge of existing corresponding structures
across the images.
In contrast to the large number of intermodal image fusion approaches, inter-
modal image registration is quite rare in robotic applications where no a priori
knowledge about corresponding structures is available. Supposed reasons for this
asymmetric usage are given in the introduction. Nevertheless, there are some
publications to mention. Reference [20] presents a fusion method to combine
aerial images from a low ﬂying Unmanned Aerial Vehicle (UAV) with images
of a varying imaging modality from sources such as satellites or hyperspectral
imaging. Therefore, a Gaussian Process (GP) framework has been developed
to deﬁne a stochastic prior over the estimated images. Another area for multi-
modal imaging is Human-robot interaction (HRI). Most papers in the area of
multimodal HRI deal with the segmentation of humans using a rigidly mounted
combination of cameras with varying imaging modality [11,29]. This type of
mounting makes both cameras look at the same structure which ensures that
corresponding structures appear in the images. Reference [29] proposes a system
for robust segmentation of human ﬁgures in video sequences by fusing RGB and
thermal images using a blob-wise registration. Reference [11] present a disparity
voting technique for multimodal registration.
One concept used for the VMC presented in this paper is the fusion of depth
information with images of diﬀerent imaging modality. The fusion of RGB images
and depth information is state-of-the-art in many robot applications as presented
in [5–7]. The works presented in [18,23,24] describe a hand-held device built out
of a RGB-D and a thermal camera. The device is used for thermal-to-3D map-
ping which is helpful to monitor the energy eﬃciency of building structures. In
[10], a dynamic, multimodal fusion algorithm is presented which merges images
of an infrared, thermal and RGB camera with depth information of a time of
ﬂight (ToF) camera. Imaging modalities are dynamically selected according to
their expected importance for the operator in search and rescue scenarios. Con-
sequently, a point cloud is created which includes the information of diﬀerent
imaging modalities, in addition to the unimodal projection of image data. The
resulting multichannel point cloud is displayed using a head mounted display to

Spatial Fusion of Diﬀerent Imaging Technologies . . .
157
ease the control of robots in demanding environments. The approach presented
in this paper is based on the work in [10], but uses the multimodal point cloud for
spatially rearranging points into multimodally corresponding images of a virtual,
multimodal camera. Based on the approach presented in this paper, intermodal,
spatially corresponding images are generated which can be used as a starting
point for investigating the intermodal transferability of traditional image fea-
tures. Furthermore, the multimodal camera generates a large amount of ground
truth data which may help to adapt existing methods from the area of medical
imaging to work without a priori knowledge of existing correspondences.
3
Notation
As preparation for the subsequent chapter, the notation used during the rest of
this paper is introduced. A two-dimensional point p given in image coordinates
of a speciﬁc camera C is given as inhomogeneous vector (c)xp:
(c)xp =

(c)xp (c)yp
T ,
(1)
where (c)xp and (c)yp are the screen coordinates, starting in the upper left corner
of the image. The same point can be expressed as augmented vector (c)xp:
(c)xp =

(c)xp (c)yp 1
T .
(2)
Points can also be represented using homogeneous coordinates using the scale
factor (c) wp
(c)xp =(c) wp(c)xp =(c) wp

(c)xp (c)yp 1
T =

(c)xp (c)yp (c) wp
T .
(3)
A three-dimensional, non homogeneous vector (c)Xp pointing at point p given
in the camera coordinate system C is deﬁned as follows:
(c)Xp =

(c)Xp (c)Yp (c)Zp
T ,
(4)
where (c)Xp, (c)Yp and (c)Zp are the three-dimensional coordinates of point p.
The image coordinate system I and the camera coordinate system C are shown
in Fig. 1. The vector (c)Xp can also be written as augmented vector (c)Xp or in
homogeneous coordinates (c) Xp:
(c)Xp =

(c)XT
p 1
T =

(c)Xp (c)Yp (c)Zp 1
T ,
(5)
(c) Xp =(c) wp(C)Xp =

(c) 
Xp (c) Yp (c) Zp (c) wp
T
.
(6)

158
S.P. Kleinschmidt and B. Wagner
Fig. 1. A point p given in the two and three-dimensional coordinate systems I and C
of a camera c
The transformation of an augmented vector (c1)Xp given in coordinate system
C1 into the coordinate system C2 can be performed using the transformation
c2Tc1:
(c2)Xp =c2 Tc1(c1)Xp.
(7)
The homogeneous transformation c2Tc1 is deﬁned as follows:
c2Tc1 =
c2Rc1 (c2)Xc1
0
1

(8)
=
⎛
⎜
⎜
⎝
c2r11,c1 c2r12,c1 c2r13,c1 (C2)Xc1
c2r21,c1 c2r22,c1 c2r23,c1 (C2)Yc1
c2r31,c1 c2r32,c1 c2r33,c1 (C2)Zc1
0
0
0
1
⎞
⎟
⎟
⎠.
(9)
4
Virtual Multimodal Camera
The following section describes the approach used in this paper to create spa-
tially corresponding images for diﬀerent imaging modalities using a Virtual Mul-
timodal Camera (VMC). Perspective imaging technologies, even if they diﬀer in
imaging modality, have at least one thing in common: Images are generated by
the perspective projection of electromagnetic radiation. Electromagnetic radia-
tion is emitted or reﬂected by physical structures. Therefore, images of diﬀerent
modalities are connected through the physical location of the reﬂecting or emit-
ting bodies. To use this dependency for sensor fusion, the images of diﬀerent
modalities are fused into multimodal three-dimensional points using an addi-
tional depth camera. Afterwards, spatially relations between the cameras are
established by performing an image generation process using a virtual camera

Spatial Fusion of Diﬀerent Imaging Technologies . . .
159
for all three-dimensional multimodal points. This requires an intrinsic and extrin-
sic calibration of the used sensors as well as accurate three dimensional input
information. The resulting concept includes the following steps:
1. Preprocessing and Filtering. The quality of the multimodal point cloud
regarding point positions and correct pixel-point assignments depends on the
quality of the depth image. Therefore, measurement noise and errors have to
be ﬁltered before mapping and thus appropriate ﬁlters have to be applied.
2. Hybrid Calibration. To perform mapping, it is necessary to determine the
camera parameters to remove lens distortion. For the mapping process, it
is also essential to know the homogeneous transformation between the used
sensor coordinate systems. Consequently, corresponding points have to be
identiﬁed in the sensor images. As a result of varying working principles
of the sensors (such as RGB and thermal), a special calibration pattern is
required to identify corresponding points.
3. Time Synchronization. To reduce the mapping error based on time diﬀer-
ences due to varying measurement rates, messages are grouped according to
their time stamp.
4. Parallel Mapping. The pixels of the ﬁltered and intrinsically calibrated
depth image are used to generate a set of three-dimensional multimodal
points, the two-dimensional images can be mapped on. Based on the per-
formed extrinsic calibration, the point cloud is transformed into the coordi-
nate system of the cameras as preparation for the mapping. Then, the image
is projected onto the point cloud. The mapping procedure is performed par-
allely on the GPU and is repeated for every imaging modality.
5. Reprojection. The mapped multimodal point clouds are then transformed
into the coordinate system of the VMC and reprojected into the virtual image
plane. As a consequence, new spatially corresponding images are generated
for each imaging modality using a common camera parameter set.
Sections 4.1–4.5 are structured according to the presented order of steps. Even
if the basic concept of this paper is valid for perspective imaging technologies in
general, the focus will be on infrared, RGB, thermal and ToF sensors.
4.1
Preprocessing
To increase the quality of the mapped three-dimensional multimodal point cloud
simultaneously avoiding mapping errors, it is important to preprocess the depth
image which is typically aﬀected by measurement noise and errors.
To prevent an error prone projection caused by image noise in the depth
image, the depth image is ﬁltered using a bilateral ﬁlter as described in [22].
In contrast to a box, bilinear or Gaussian ﬁlter, a bilateral ﬁlter smoothes the
surfaces of the object at the same time preserving edges due to an additional
range component.
To remove single measuring errors appearing as outliers in the free space
(therefore often referenced to as ﬂying pixels), a threshold ﬁlter is applied based

160
S.P. Kleinschmidt and B. Wagner
on the average distance of the surrounding pixels which are unequal to zero. The
mean distance can be determined according to:
p(i, j) = 1
u

l,m
||f(i, j) −k(l, m)||2
(10)
and
k(l, m) =

f(l, m), for f(l, m) ̸= 0
f(i, j), else
,
(11)
where l and m are the x- and y-coordinates of points in the neighborhood of
the examined point and u is the number of surrounding pixels for that k(l, m) is
unequal to zero. With the threshold θ, the ﬁnal value of the ﬁltered depth image
depth(i, j) is given through:
g(i, j) =

f(i, j), for p(i, j) < θ
0,
else
.
(12)
4.2
Intermodal Calibration
Like any other camera, depth, thermal or RGB cameras are aﬀected by lens
distortion and inaccuracies during production and therefore need to be intrinsi-
cally calibrated. Before sensor data can be projected, the cameras need also to
be extrinsically calibrated. State-of-the-art calibration techniques for traditional
two-dimensional cameras are presented in [4,27,28]. Considering that typical
two-dimensional calibration patterns are unsuited for thermal and depth calibra-
tion, a hybrid calibration pattern is presented in this section, which enables inter-
modal sensor to depth calibration for a variety of imaging techniques. Regarding
the diﬀerent working principles of the used sensors, the calibration pattern used
for the calibration of a speciﬁc camera varies. For the intrinsic calibration of a
RGB camera, a typical printed black and white chessboard provides points in
the pattern coordinate system which can be identiﬁed in the camera image. By
using a strong infrared light source, the same pattern can be used to calibrate
the active infrared camera. Since the temperature of a printed pattern is equally
distributed over the pattern after all balancing processes are completed, it is
not possible to identify the necessary amount of calibration points in the ther-
mal image using a printed pattern. To solve this issue, heaters can be applied
at dedicated positions in the calibration pattern coordinate systems to identify
corresponding points for calibration purposes. In case of ToF cameras, the ampli-
tude image (active infrared) can be used for intrinsic calibration based on the
working principle of ToF. Besides using the infrared image, it is also possible
to create a chessboard, where every square of the chessboard not only varies
in height and width but also in depth thus providing points in the calibration
pattern that can be identiﬁed by depth sensors.
If the same calibration pattern is visible in two diﬀerent camera images at the
same time, the transformation between each camera and the chessboard can be

Spatial Fusion of Diﬀerent Imaging Technologies . . .
161
used to compute the transformation between both camera coordinate systems.
This requires, that at least N = 3 points of the pattern given in the chessboard
coordinate system can be identiﬁed in both images at the same time.
According to this constraint and considering the diﬀerent working principles
of depth, IR, RGB and thermal cameras, a typical black and white calibration
pattern is unsuited for an extrinsic calibration for many imaging modalities. In
the image of the thermal camera, a printed structure of a calibration pattern
looks uniform due to the same temperature and material of the chessboard and
could not be identiﬁed. The remaining diﬀerence in the thermal image based on
the diﬀerent emissivity of the black and the white color would not be suﬃciently
large for a calibration as needed for high accurate sensor mapping. A similar
issue takes eﬀect for the depth image, where corresponding points would look
uniform based on a similar depth.
To be able to identify at least three corresponding points in the camera
images, a hybrid chessboard pattern needs to be designed, in which the black
and the white squares diﬀer in material, temperature and depth. If the depth
camera can be calibrated using an intensity image as described in this section,
the pattern does not need to vary regarding depth. For this purpose, the pat-
tern needs to be built of diﬀerent materials such as plastic and metal, whereas
one color is heated to a constant temperature. The theoretical setup for such a
calibration is shown in Fig. 2. It shows a RGB and a thermal camera looking
at a hybrid calibration pattern where every square of the chessboard diﬀers in
color and temperature. The transitions between the chessboard squares can be
identiﬁed in the RGB image due to their variation in color. In contrast, the
transitions in the thermal image can be identiﬁed based on the variation in tem-
perature caused by the heat pads attached to the background of the squares.
Fig. 2. Heated calibration pattern for extrinsic calibration of RGB and thermal camera
[10]

162
S.P. Kleinschmidt and B. Wagner
Fig. 3. Synchronization of cameras working at asynchronous measurement rates [10]
To prevent the heat to spread through the pattern, the squares have to vary
regarding their thermal conductivity to ensure clear temperature transitions in
the thermal image.
The computed transformation between two cameras is limited in accuracy by
the camera resolution and disturbance variables such as image noise. To decrease
the error of the resulting transformation, the transformation is computed for an
array of coincident images. To ﬁnd the local minimum of the reprojection error
for the transformation, the Levenberg-Marquardt iterative algorithm is used for
optimization. The realization of the hybrid calibration pattern is presented in
Sect. 6.2.
4.3
Time Synchronization
Even if the sensors are synchronized regarding a global system time, measure-
ment updates are typically occurring at diﬀerent measurement rates. To reduce
the resulting mapping errors, as they would occur when depth images are regis-
tered to data from a diﬀerent time, the time diﬀerence has to be kept as small
as possible.
Figure 3 shows four input signals at diﬀerent measurement rates of 30 and
50 Hz. The depth, RGB and IR camera are working time-synchronized at fd =
fRGB = fIR = 30 Hz, the measurement rate of the thermal camera diﬀers with a
measurement rate of fth = 50 Hz. The maximum time diﬀerence Δtmax between
a depth, RGB or IR measurement and a thermal measurement is deﬁned by the
faster measurement rate of the thermal camera fth:
Δtmax =
1
2fth
= 10 ms.
(13)
If Δt between two succeeding measurements is less or equal Δtmax, the messages
are used for mapping. If Δt > Δtmax, the ﬁrst measurement is discarded and
the time measurement is repeated for the second measurement.
The resulting update rate for the synchronized signal frs varies according
to Eq. 14 and has an upper bound given by the measurement rate of the depth
camera fd:
fd ≥frs ≥
1
1
fd +
1
2fth
.
(14)

Spatial Fusion of Diﬀerent Imaging Technologies . . .
163
4.4
Mapping
The camera matrix M can be used to reconstruct a three-dimensional point (d)Xp
given (d)xp, the associated point in the image plane in a ﬁltered and intrinsically
calibrated depth image (see Sect. 4.1) by inverting M as shown in Eq. 15:
(d)Xp = (d)M−1
(d)xp (d)Zp.
(15)
In Eq. 15, (d)Zp is given by the depth value in the depth image according to:
(d)Zp = d((d)xp, (d)yp)sd.
(16)
The inverse (d)M(−1) can be computed as follows:
(d)M(−1) =
1
(d)fx(d)fy
⎡
⎣
(d)fy
0
−(d)cx(d)fy
0
(d)fx −(d)cy(d)fx
0
0
(d)fx(d)fy
⎤
⎦.
(17)
In Eq. 16, sd is the scale factor, which relates the depth value in the depth image
to (d)Zp, the depth in the camera coordinate system of the depth camera.
Using Eqs. 15 and 16, the coordinates of a three-dimensional point in the
depth camera’s coordinate system can be computed for every two-dimensional
point in screen coordinates of the depth image. By upscaling the depth image
and therefore the quantity of pixels which can be registered to 3D points.
To perform a mapping between a calibrated two-dimensional image of a cam-
era c and the generated set of three-dimensional points, every point given in the
point cloud (d)Xp needs to be transformed into the coordinate system of the
camera c. This can be done using the extrinsic calibration described in Sect. 4.2:
(c)Xp =c Td(d)Xp.
(18)
To complete the mapping of a point (c)Xp, given in the corresponding coordinate
system of a two-dimensional camera, the point needs to be projected onto the
image plane of the camera c.
(c)xp = (c)M(c)Xp.
(19)
The color of the three dimensional point is given by the color of the image point
(Ic)xp. After merging the point cloud and the image source, the point cloud is
transformed back into the depth camera coordinate system:
(d)Xp =d Tc(c)Xp.
(20)
4.5
Reprojection
Although the camera parameters of the VMC can be chosen freely, they should
not diﬀer too far from the depth camera parameters to maximize the number

164
S.P. Kleinschmidt and B. Wagner
of three-dimensional points which can be reprojected into the image plane. The
camera matrix of the VMC is deﬁned as:
(vmc)M =
⎡
⎢⎣
(vmc)fx
0
(vmc)rx
2
0
(vmc)fy
(vmc)ry
2
0
0
1
⎤
⎥⎦.
(21)
The principal point is chosen to lie in the center of the image with resolution
rx × ry. The image generation is performed using the following equation:
(vmc)xp = (vmc)M(vmc)Xp.
(22)
To form one spatially aligning virtual image of one imaging modality, Eq. 22
has to be applied for each of the three-dimensional points of the same modality.
Because the images are generated artiﬁcially, they are not aﬀected by any lens
distortion.
5
Parallelization
The parallelized mapping procedure is presented in Fig. 4. The mapping proce-
dure is separated into code, which is executed on the CPU (host) and code, which
is executed in parallel on the GPU (device). Therefore, the data necessary to
perform the computations need to be transferred between host and device mem-
ory to be processed. Because host-to-device and device-to-host copies are time
consuming and increase computation time (compared to CPU based approaches,
where all data already are on the device they are processed on), it is necessary
to keep them to a minimal number.
For this reason, the extrinsic and intrinsic calibration parameters are trans-
ferred once during initialization and are kept in GPU memory. After time syn-
chronization, corresponding data are loaded in the host memory. Before parallel
processing, they are transferred to the device memory, which has been allocated
during initialization. Because the resolution of the depth, RGB, IR and thermal
image is known a priori, the size of the allocated memory is static. During run-
time, multiple copies of the program can be executed in parallel on GPU blocks.
The computation of the point cloud is performed in parallel on a ﬁxed number of
blocks given by the resolution of the depth image. According to Sect. 4.4, after
point cloud generation, the points are transformed according to the extrinsic
relation of the cameras and subsequently projected into the image plane. Since
the amount of computations in these steps is high, the involved calculations,
however, are simple and independent of each other, these steps are also well
suited to be performed in parallel blocks on the GPU. After transformation into
the coordinate system of the VMC, the point cloud is reprojected and the out-
put images are written into the host memory. To further optimize the mapping
duration, the practical implementation deviates from the procedure presented in
Fig. 4 and is only performed for the selected output point cloud. Therefore, the
number of host-to-device and device-to-host copies during runtime is decreased

Spatial Fusion of Diﬀerent Imaging Technologies . . .
165
from seven, which are necessary to provide mapping for all point clouds, to
three. Excluded from this number are the host-to-device copies of the extrinsic
and intrinsic calibration parameters, which have only to be performed once on
start.
6
Experiments
The following section describes the experimental setup which is used to evaluate
the results of Sect. 4.
6.1
Experimental Setup
To collect a large number of spatially corresponding multimodal images, a Pio-
neer 2 mobile robot has been equipped with a FLIR A655sc thermal camera
(640 × 480 @ 50 fps) and a Microsoft Kinect v2 depth-sensing camera providing
RGB (1920 × 1080 @ 30 fps), depth (512 × 424 @ 30 fps) and active IR images
(512 × 424 @ 30 fps). In contrast to the Kinect 1, which is based on structured
Fig. 4. Overview of the software architecture (based on ﬁgure presented in [10])

166
S.P. Kleinschmidt and B. Wagner
Fig. 5. Pioneer 2 mobile robot equipped with a Microsoft Kinect v2 depth-sensing
camera and a FLIR A655sc thermal camera [10]
light to estimate depth, the Kinect 2 collects depth information based on ToF
measurements. To enable extrinsic calibration, both cameras are rigidly mounted
on the Pioneer as shown in Fig. 5. The sensor data are compressed and stored
on-board by a Intel quad core i7 CPU and 16 GB RAM running Ubuntu 14.04
64-bit. To power the Pioneer 2 and the connected sensors, the standard power
supply is replaced with a 12 V 50 Ah car battery. The data are preprocessed
and registered according to Sect. 4. Figure 6 gives an overview of the input and
output structure used for the evaluation. Besides, the intrinsic and extrinsic cal-
ibration which only has to be performed once, all parts of the presented method
are programmed to work in parallel taking advantage of the GPU. Spatially
corresponding RGB, IR and thermal images are stored on a hard drive.
6.2
Intrinsic and Extrinsic Calibration
To be able to identify corresponding points for calibration in the RGB, IR, depth
and in the thermal image as mentioned in Sect. 4.2, a hybrid chessboard pattern
has been designed for calibration, in which the black and the white squares
diﬀer in color, depth, material and temperature. For this purpose, the black
squares are made of metal, which is electrically heated to a constant temperature,
whereas the white squares are made of plastic. The pattern used for calibration
is shown in Fig. 7. Besides the diﬀerences in temperature, the black and white
chessboard squares also diﬀer in depth. Because the depth image also provides
intensity images (active IR), the depth diﬀerences were not used for depth camera
calibration. The size of one square is 100 mm × 100 mm with a depth diﬀerence
between a black and a white square of 40 mm.
7
Results
The following section evaluates the results of the presented approach regarding
calibration quality and processing time.

Spatial Fusion of Diﬀerent Imaging Technologies . . .
167
Fig. 6. Overview of the input and output structure (based on ﬁgure presented in [10])
Fig. 7. A three-dimensional, heated calibration pattern for thermo-depth calibration
[10]
7.1
Calibration
The cameras have been calibrated using the calibration pattern described in
Sect. 6.2. For calibration, 40 images have been recorded from diﬀerent poses
around the calibration pattern with every camera. The results of the intrinsic
calibrations are shown in Table 1.

168
S.P. Kleinschmidt and B. Wagner
Table 1. Results of the intrinsic calibration (without distortion parameters) [10]
Camera
fx[px]
fy[px]
cx[px]
cy[px]
rms
RGB
1.063e+03
1.066e+03
9.59e+02
5.541e+02
0.1734
IR and
Depth
3.633e+02
3.631e+02
2.442e+02
2.030e+02
0.6856
Thermal
7.984e+02
7.997e+02
3.140e+02
2.371e+02
1.0351
Table 2. Results of the
extrinsic calibration [10]
Transformation
rms
RGB - Depth
0.323
Thermal - Depth
1.019
The quality of the calibration can be evaluated based on the resulting
root mean square reprojection error (rms), which is calculated for the images
taken after applying the intrinsic calibration. Based on the total pattern size of
700 mm × 500 mm, the pattern was unsuited to be placed in the near ﬁeld in
front of the camera depending on the camera’s ﬁeld of view which aﬀects the
quality of the calibration.
The calibration of the IR camera got a higher rms compared to the RGB
calibration, because the chessboard points could not be reliably detected in the
whole ﬁeld of view due to the limited IR lightning in the outer regions of the
image. Additionally, the IR image is stronger aﬀected by image noise compared
to the RGB image. Furthermore, the resolution of the IR camera is smaller than
the resolution of the RGB camera which reduces the accuracy of the detected
points.
The rms of the thermal camera is higher than the rms of the RGB and the IR
camera. The main reason for the higher rms is the lower depth of focus compared
to the IR camera. This leads to blur and consequently to inaccuracy detecting
the chessboard points. The results of the extrinsic calibration regarding the rms
are presented in Table 2. Based on the results of the mapping, the rms of the
extrinsic calibration can be considered as suﬃcient for visualization.
7.2
Processing Time
To collect large quantities of data, spatially corresponding samples for diﬀer-
ent imaging modalities are computed online. Therefore, the presented algorithm
has been implemented using Compute Uniﬁed Device Architecture (CUDA) to
operate on a NVIDIA GTX 970 GPU with 1664 cores. The CUDA-based GPU
implementation is compared with a single core CPU implementation. Table 3
gives an overview of the average processing time of 10, 000 frames for the pre-
sented algorithm performed on the CPU and the GPU. The processing time on
the GPU has been measured using the CUDA event API; the processing time of

Spatial Fusion of Diﬀerent Imaging Technologies . . .
169
Table 3. Comparison between the processing time performing the mapping for one
image as CPU and GPU implementation. Average value of 10,000 processing steps
with a depth image resolution of 512 × 424 (based on table presented in [10])
Step
Average
time
CPU
[ms]
Percentage
of total [%]
Average
time
GPU
[ms]
Percentage
of total [%]
Acceleration
[%]
Preprocessing
131.69
89, 15
19.26
61.49
85.37
Point cloud
generation
4.07
2.76
3.16
10.09
22.36
Transformation 1.13
0.77
0.60
1.92
46.90
Image plane
projection
4.80
3.25
3.22
10.28
32.92
Transformation 1.14
0.77
0.60
1.92
47.37
Reprojection
4.81
3.26
3.22
10.27
33.06
Memory
operations
–
–
1.26
4.00
–
Total
147.64
100
31.32
100
78.89
the CPU version has been measured using clock ticks elapsed since the algorithm
has been started divided by the clocks per second.
The highest acceleration could be archived by implementing the preprocess-
ing step on the GPU (which includes bilateral ﬁltering and ﬂying pixel detec-
tion as described in Sect. 4.1). The preprocessing step could be accelerated by
112.43 ms which is an acceleration of 85.37 % referred to the former duration
which makes 96.65 % of the total acceleration.
Using the GPU implementation, the complete mapping process could be
accelerated by 78.89 % compared to the CPU implementation which is an accel-
eration of 115.68 ms. While the processing rate of the CPU implementation limits
the possible frame rate to 6.77 fps, the GPU implementation allows a frame rate
of 31.93 fps. Because the frame rate is limited to 30 fps by the depth camera, the
new processing time of 31.32 ms can be considered to be suﬃcient. To perform
the mapping and reprojection on the GPU, all necessary data need to be copied
to the GPU memory for processing. After processing has been completed, the
data need to be copied back to be accessible by the CPU. The time needed for
allocation, deallocation and copying has been pooled as Memory Operations in
Table 3.
7.3
Virtual Multimodal Camera
Example multimodal point clouds generated during the mapping step of the
VMC are shown in Fig. 8a–l. The ﬁrst image of every row shows the raw, unreg-
istered point cloud which is generated according to Sect. 4.4. The following ﬁg-

170
S.P. Kleinschmidt and B. Wagner
(a) Pure depth
(b) RGB-D
(c) IR-D
(d) THERMAL-D
(e) Pure depth
(f) RGB-D
(g) IR-D
(h) THERMAL-D
(i) Pure depth
(j) RGB-D
(k) IR-D
(l) THERMAL-D
Fig. 8. Multimodal point clouds of diﬀerent scenes: 8a–d Diﬀerent image sources
mapped onto the calibration pattern 8e–h Person hidden behind a bookshelf, 8i–l Per-
son lying in the edge of a dark storage room [10]
ures outline the point cloud registered to RGB, active IR and thermal images.
To illustrate the advantages of the diﬀerent sensors, each row shows a diﬀerent
scenario: Fig. 8d, h and l show uncolored, black points in the outer region of
the point cloud caused by a varying ﬁeld of views of the depth and the thermal
camera. Because the thermal camera has a smaller vertical and horizontal ﬁeld
of view, the thermal image provides no information which could be mapped to
the outer points of the point cloud. Due to the high number of points, surfaces
and small details can be recognized. The spatially aligning images Fig. 9a–d are
generated using the presented approach of a VMC. Black regions indicate that
no valid points were available, which could be reprojected into the virtual image
plane.
7.4
Limitations
Like all ToF cameras, the Kinect v2 can be aﬀected by direct sunlight outshining
the light emitted by the ToF camera. To evaluate the performance of the pre-
sented approach, the setup has been tested indoor in a controlled environment.
For this reason, the approach presented in this paper is limited to applications
with no direct sunlight. There are, however, ToF cameras available with addi-

Spatial Fusion of Diﬀerent Imaging Technologies . . .
171
(a) Person sitting in front of a wall
(b) An open door
(c) Workbench with a drill press
(d) Corridor with a glas door
Fig. 9. Every row shows a virtual RGB, IR and thermal image (left to right) of a
speciﬁc scene: a Person sitting in front of a wall. b An open door c Workbench with a
drill press d Person working in a workshop e Corridor with a glas door
tional light sources, which are conﬁrmed to be suited for outdoor application
such as the OI-VS-1000 produced by ODOS Imaging.
Images generated by the multimodal virtual camera are dependent on depth
information for the ﬁeld of view of the diﬀerent cameras which are than repro-
jected into the virtual image plane. Therefore, not all virtual pixel in the image
plane have corresponding points.

172
S.P. Kleinschmidt and B. Wagner
8
Conclusion and Further Work
In this paper, a GPU accelerated virtual multimodal camera has been intro-
duced. The presented approach generates spatially corresponding images from
various imaging modalities. The approach has been evaluated under laboratory
conditions using a Pioneer 2 mobile robot equipped with a depth, RGB, IR
and thermal camera. For intrinsic and extrinsic calibration, a new calibration
pattern has been introduced. It has been shown, that the presented calibration
pattern is well suited for multi-sensor calibration with acceptable root mean
square reprojection errors. It has been shown, that performing the mapping on
the GPU can signiﬁcantly decrease the processing time by 78.89 % compared to
traditional CPU implementation consequently decreasing the delay. It must be
taken into account that the GPU version had been compared against a single
threaded CPU implementation. The relative acceleration of the GPU imple-
mentation would decrease in comparison to a fully optimized, multi-threaded
CPU version of the mapping procedure. The overview of the surrounding struc-
tures can be further improved by building a multimodal map registering the
multimodal point clouds. For such applications, the point cloud can be used to
increase the robustness of correspondence identiﬁcation for scan registration to
avoid ambiguity in scan images. Using this multimodal map, more dense virtual
multimodal images can be generated because of the additional depth informa-
tion. To increase the quality for the intrinsic and extrinsic calibration, the square
size of the calibration pattern could be reduced to be able to calibrate the camera
in the near region. Besides, a multimodal map could increase the robustness of
the virtual multimodal camera by providing full 3D information compared to the
2.5D information provided by the depth camera. The generated corresponding
images of the virtual, multimodal camera presented in this paper can be used
as input for a convolutional neural network to predict possible appearances of
a feature in an image of a diﬀerent modality. Furthermore, using these images,
a convolutional neural network can also be trained to decide, if image parts are
likely to belong to the same feature.
References
1. Alfano, B., Ciampi, M., De Pietro, G.: A Wavelet-Based Algorithm for Multimodal
Medical Image Fusion. Springer, Berlin (2007). pp. 117–120
2. Bay, H., Ess, A., Tuytelaars, T., Van Gool, L.: Speeded-up robust features (surf).
Comput. Vis. Image Underst. 110(3), 346–359 (2008)
3. Birkfellner, W.: Applied Medical Image Processing, 2nd edn. Taylor & Francis,
London (2014)
4. Brown, D.C.: Close-range camera calibration. Photogramm. Eng. 37, 855–866
(1971)
5. Endres, F., Hess, J., Sturm, J., Cremers, D., Burgard, W.: 3D mapping with an
RGB-D camera, vol. 30, pp. 177–187 (2013)
6. Henry, P., Krainin, M., Herbst, E., Ren, X., Fox, D.: RGB-D mapping: using depth
cameras for dense 3d modeling of indoor environments. In: RGB-D: Advanced

Spatial Fusion of Diﬀerent Imaging Technologies . . .
173
Reasoning with Depth Cameras Workshop in Conjunction with RSS, Zaragoza,
Spain (2010)
7. Izadi, S., Kim, D., Hilliges, O., Molyneaux, D., Newcombe, R., Kohli, P., Shotton,
J., Hodges, S., Freeman, D., Davison, A., Fitzgibbon, A.: Kinectfusion: Real-time
3d reconstruction and interaction using a moving depth camera. In: ACM Sym-
posium on User Interface Software and Technology, Santa Barbara, CA, USA, pp.
559–268 (2011)
8. James, A.P., Dasarathy, B.V.: Medical image fusion: a survey of the state of the
art. Inf. Fusion 19, 4–19 (2014)
9. James, A.P., Dasarathy, B.V.: A review of feature and data fusion with medical
images. Clinical Orthopaedics and Related Research (2015)
10. Kleinschmidt, S.P., Wagner, B.: Gpu-accelerated multi-sensor 3d mapping for
remote control of mobile robots using virtual reality. In: 13th International Confer-
ence on Informatics in Control, Automation and Robotics (ICINCO 2016) (2016)
11. Krotosky, S.J., Trivedi, M.M.: Mutual information based registration of multimodal
stereo videos for person tracking. Comput. Vis. Image Underst. 106(23), 270–287
(2007), special issue on Advances in Vision Algorithms and Systems beyond the
Visible Spectrum
12. Leinonen, I., Jones, H.G.: Combining thermal and visible imagery for estimating
canopy temperature and identifying plant stress. J. Exp. Bot. 55(401), 1423–1431
(2004)
13. Lowe, D.G.: Distinctive image features from scale-invariant keypoints. Int. J. Com-
put. Vis. 60(2), 91–110 (2004)
14. Marshall, S., Matsopoulos, G.: Morphological data fusion in medical imaging. In:
1993 IEEE Winter Workshop on Nonlinear Digital Signal Processing (1993)
15. Matsopoulos, G., Marshall, S., Brunt, J.N.H.: Multiresolution morphological fusion
of MR and CT images of the human brain. In: IEE Proceedings - Vision, Image
and Signal Processing, vol. 141, pp. 137–142. IET (1993)
16. Mikoajczyk, K., Owczarczyk, J., Recko, W.: A test-bed for computer-assisted
fusion of multi-modality medical images. In: International Conference on Com-
puter Analysis of Images and Patterns, pp. 664–668. Computer Analysis of Images
and Patterns (1993)
17. Mitchell, H.: Data Fusion: Concepts and Ideas. Springer, Berlin (2010)
18. Moghadam, P., Vidas, S.: Heatwave: the next generation of thermography devices.
In: International Society for Optical Engineering (SPIE), vol. 9105, p. 91050 (2014)
19. Raza, S., Sanchez, V., Prince, G., Clarkson, J., Rajpoot, N.M.: Registration of
thermal and visible light images of diseased plants using silhouette extraction in
the wavelet domain. Pattern Recognit. 48(7), 2119–2128 (2015)
20. Reid, A., Ramos, F., Sukkarieh, S.: Bayesian fusion for multi-modal aerial images.
In: Proceedings of the Robotics: Science and Systems IX (2013)
21. Rosten, E., Drummond, T.: Machine Learning for High-Speed Corner Detection.
Springer, Berlin (2006)
22. Tomasi, C., Manduchi, R.: Bilateral ﬁltering for gray and color images. In: IEEE
International Conference on Computer Vision (ICCV) Washington, DC, USA, pp.
839–846 (1998)
23. Vidas, S., Moghadam, P.: Heatwave: a handheld 3D thermography system for
energy auditing. Energy Build. 66, 445–460 (2013)
24. Vidas, S., Moghadam, P., Bosse, M.: 3D thermal mapping of building interiors using
an RGB-D and thermal camera. In: IEEE International Conference on Robotics
and Automation (ICRA), Karlsruhe, Germany, pp. 2311–2318 (2013)

174
S.P. Kleinschmidt and B. Wagner
25. Wang, Y.P., Dang, J.W., Li, Q., Li, S.: Multimodal medical image fusion using
fuzzy radial basis function neural networks. In: Wavelet Analysis and Pattern
Recognition (2007)
26. Zhang, Q.P., Liang, M., Sun, W.C.: Medical diagnostic image fusion based on fea-
ture mapping wavelet neural networks. In: Proceedings of the Third International
Conference on Image and Graphics ICIG ’04, pp. 51–54. IEEE Computer Society,
Washington, DC, USA (2004)
27. Zhang, Z.: A ﬂexible new technique for camera calibration. IEEE Trans. Pattern
Anal. Mach. Intell. 22, 1330–1334 (2000)
28. Zhang, Z.: Flexible camera calibration by viewing a plane from unknown orienta-
tions. In: IEEE International Conference on Computer Vision, Kerkyra, Greece,
vol. 1, pp. 666–673 (1999)
29. Zhao, J., Cheung, S.C.S.: Human segmentation by geometrically fusing visible-light
and thermal imageries. Multimed. Tools Appl. 73(1), 61–89 (2014)

Fusing LiDAR and Radar Data to Perform
SLAM in Harsh Environments
Paul Fritsche1(B), Simon Kueppers2, Gunnar Briese2, and Bernardo Wagner1
1 Institute of Systems Engineering - Real Time Systems Group, Leibniz Universit¨at
Hannover, Appelstr. 9A, 30167 Hannover, Germany
fritsche@rts.uni-hannover.de, wagner@rts.uni-hannover.de
https://www.rts.uni-hannover.de/
2 Fraunhofer Institute for High Frequency Physics and Radar Techniques FHR,
Fraunhoferstr. 20, 53343 Wachtberg, Germany
simon.kueppers@fhr.fraunhofer.de,
gunnar.briese@fhr.fraunhofer.de
http://www.fhr.fraunhofer.de/
Abstract. LiDAR sensors are very popular for mapping and localisa-
tion with mobile robots, yet they cannot handle harsh environments,
containing smoke, fog, dust, etc. On the other hand, radar sensors can
overcome these situations, but they are not able to represent an envi-
ronment in the same quality as a LiDAR due to their limited range and
angular resolution. In the following article, we present further results
regarding SLAM involving the mechanical pivoting radar (MPR), which
is a 2D high bandwidth radar scanner that was introduced in Fritsche
et al. (Radar and LiDAR sensor fusion in low visibility environments,
2016, [8]). We present two strategies for fusing MPR and LiDAR data
to achieve SLAM in an environment with low visibility. The ﬁrst app-
roach is based on features and requires the presence of landmarks, which
can be extracted with LiDAR and MPR. The second SLAM approach
is based on scan registration and requires a scan fusion between the two
sensors. In the end, we show our experiments, involving real fog, in order
to demonstrate, how our approaches make SLAM possible in harsh envi-
ronments.
Keywords: Radar · LiDAR · Sensor fusion · SLAM · Mobile robots
1
Introduction
In disaster operations, ﬁre and smoke create a dangerous situation for ﬁre ﬁghters
or rescuers. To get a clear picture of the scenario ahead, a mobile platform with
sensors that are able to handle harsh conditions, can be sent in to record a map
useful for operational planning and orientation. But, aerosols like smoke lead to
detections of single particles or full absorption of LiDAR beams. Consequently,
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_9

176
P. Fritsche et al.
it is not possible to exclusivity rely on LiDAR data in such environments. It is
rather necessary to apply other sensor modalities such as radar.
Commercial frequency modulated continuous wave (FMCW) radar sensors
have a limited range resolution due to legal band width restrictions, which make
indoor applications diﬃcult. This is one reason why research groups utilizing
radar in mobile robotics often use self-built sensors.
Fundamental research on feature based SLAM (EKF) in combination with
radar was performed at the Australian Centre for Field Robotics (ACFR) in the
nineties by Clark et al. [2], who built their own radar scanner [3]. Adams et al.
[1] introduced the PHD ﬁlter for robotic mapping with a commercial NavTech
device. Vivet et al. [15] use scan matching through a Fourier-Mellin transform
with the custom made K2PiMMW scanner producing large scale maps. Mapping
of indoor environments was performed by Detlefsen et al. [4] and Marck et al. [10].
We studied the use of simple FMCW sensors for robotic mapping using a rotating
scanner setup with lateration and lope oﬀsets [7]. Sakamoto et al. presented
the application of a modiﬁed version of the inverse boundary scatter transform
(IBST) and Kirchhoﬀmigration, a SAR algorithm, for an environmental imaging
with a mobile robot [14]. A sensor fusion between radar and LiDAR for obstacle
avoidance was realised by Yamauchi [17].
During ICINCO 2016 in Lisbon, we presented our ﬁrst scan fusion approach
between the mechanical pivoting radar from the Fraunhofer Institute for High
Frequency Physics and Radar Techniques (FHR) and a LiDAR scanner [8]. We
evaluated ﬁrst results involving the MPR with a standard SLAM algorithm from
the ROS framework by connecting it to our ﬁrst fusion approach. The presented
fusion was achieved through binary decisions for every single scan point of the
MPR and the LiDAR. In this article, we extend this fusion approach with a
weighted fusion and perform our SLAM, which is based on ICP registrations.
As an alternative, we present a feature based SLAM approach and suitable
landmarks for harsh environments.
2
Methods
The following section explains principles behind the MPR comparing it with
similar sensors. Then, we focus on the integration of radar and LiDAR measure-
ments in order to perform SLAM in harsh environments. We focus on a feature
based approach and on a scan registration based approach.
2.1
The MPR - A 2D FMCW Radar Scanner
The development of the MPR system has been carried out by the Fraunhofer
Institute for High Frequency Physics and Radar Techniques in order to provide
hardware for a radar based approach for two-dimensional scanning. Its principle
function is comparable to a regular laser scanning unit, where a mechanically
rotating element is used to generate a continuously revolving beam. As it can be
seen in Fig. 1 the MPR hardware consists of a compact USB controlled FMCW

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
177
Fig. 1. Picture of mechanically pivoting radar [8]
radar unit based on a custom MMIC with 80 GHz centre frequency and a max-
imum sweep bandwidth of 25 GHz providing a range resolution of about 6 mm
[13]. A slip ring has been used for the the USB data and power lines in order to
allow the FMCW radar beam to be rotated continuously in the azimuth plane.
The rotary movement was realised using stepper motors controlled via a com-
mercially available stepper motor controller. The overall mechanical dimensions
are 250 mm in diameter and 275 mm in height.
In order to present the operation of the USB radar unit, Fig. 2 shows the
basic relationship between the momentary frequency of the transmitted signal
fT X(t) and the received signal fRX(t) in an FMCW based radar system with a
single stationary target reﬂection. As can be seen, the transmitted signal (solid
line) is a linear frequency sweep covering a frequency bandwidth of BWRF over
Tsweep. This signal is radiated using an appropriate antenna structure. Due to the
propagation delay of the emanated electromagnetic waves, the reﬂected signal
(dashed line) of the target is delayed by a time delay of Δt once received by the
radar system. Based on this observation, the basic relationship of target distance
R to time delay Δt can be described as shown in Eq. (1) [8].
R = c
2Δt
(1)

178
P. Fritsche et al.
Fig. 2. Frequency-over-time plots of transmit and receive signal in linear frequency
modulated continuous wave radars [8]
Due to the linear frequency modulation, the frequency oﬀset Δf indicated
in Fig. 2 has a direct relationship to the time delay Δt introduced by the
propagation delay as previously described. It is proportional with a factor of
BWRF /Tsweep. Thus the distance R to a single target can be evaluated from the
frequency diﬀerence Δf as shown in Eq. (2) [8].
R = c · Tsweep
2 · BWRF
Δf
(2)
Through the use of frequency mixing, the frequency oﬀset Δf can be extracted
with little eﬀort. The resulting intermediate frequency (IF) signal is a linear
superposition of the above described relationships for all targets visible to the
radar system. Further processing of the radar information is then done by digi-
tising the IF signal and using algorithms such as Fast-Fourier-Transform and
peak detection in the digital domain to extract range information for multiple
targets.
With a rotary resolution of 1.8◦, a maximum of 200 radar acquisitions can be
resolved during one rotation of the radar unit. At the maximum rotation rate of
2.5 Hz, up to 500 single radar acquisitions are carried out per second, while the
radar is continuously scanning in the azimuth plane. The measurement range of
the MPR is between 0.2 m to about 15 m, depending on the type of target to be
detected.
2.2
Comparing the MPR
As mentioned before, aerosols inﬂuence the measurement quality of LiDAR sig-
niﬁcantly. Radar is not aﬀected by aerosols because the wave length of radar is
larger than most aerosol particles. For example, dust is larger than 0.5 µm and
smoke particles are submicrometre in size [16, p. 5]. Dense fog gets detected by
the Velodyne VLP-16 (used in this work), even if the strongest return echo is
selected.
On the other hand, radar scanners cannot represent an environment in the
same quality as LiDAR scanners. Table 1 summarises the most important sensor

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
179
Table 1. Comparing Velodyne VLP-16, MPR and NavTech MMR radar [8]
Velodyne
VLP-16
MPR
NavTech MMW
radar
Measurement
range
up to 100 m
up to 15 m
up to 200–800 m
Angular
resolution
0.1–0.4◦
1.8◦
0.09◦
Beam width
0.17◦
4.9◦
1.8◦
Wave length
903 nm
3.26–3.41 mm
(88–92 GHz)
3.89–3.95 mm
(76–77 GHz)
Scan rate
5–20 Hz
2.5 Hz
2.5 Hz
properties of the Velodyne VLP-16, the MPR and the NavTech MMW Radar
used by Adams [1, p. 329].
The measurement range depends mainly on the power of the emitted radar
wave, the focusing of the antenna, the radar cross section (RCS) of the object
and the detection algorithm. NavTech radars are meant for airport and vehicle
traﬃc surveillance and work accordingly with a stronger emitting power. The
angular resolution refers to the steps between two measurements. The NavTech
radar has the highest angular resolution, but its wide beam width results in a
blurry scan image. Due to large beam widths, radar scanners usually measure
the same object from more than one angular step, which leads to a sickle-shaped
representation of objects inside a radar scan. The MPR has a sweep bandwidth
of 4 GHz, which corresponds according to Eq. (3) to a distance resolution of
3.75 cm (2) [8].
ΔR =
c
2 · BWRF
(3)
A radar’s resolution is its capability to distinguish objects. Usually, the distance
accuracy is higher. One MPR scan contains 200 single radar acquisitions. Due
to radar’s technical principle, radar scanners have slower scan rates compared
to 2D LiDAR, which even exists with 100 Hz.
2.3
SLAM Based on Features with LiDAR and Radar
Feature based SLAM algorithms, for example, the Extended Kalman Filter
(EKF) SLAM, require reliable landmarks, which can be robustly detected in
several measurements from diﬀerent sensor positions. Wrong detections lead to
an accumulation of non-existing landmark positions inside the state vector and
can result accordingly in a collapsing of the EKF cycle. For the two-dimensional
case, the ﬁrst three values of the state vector present the robot’s position and
orientation Θ. The state vector is updated for every EKF cycle at the time t.
Detected landmarks are either associated to an existing landmark or attached

180
P. Fritsche et al.
as a new one. Typically, the Euclidean or the Mahalanobis distances are used
as criteria for the data association. The EKF-SLAM is divided into a predic-
tion step, where the new state of the robot is calculated via the motion model
and the control input ut from odometry. The predicted covariance matrix ¯
Σt,
which represents the uncertainties in the robot state and landmark position is
predicted via the Jacobian of the system state Gt and the noise of the control
input Rt.
¯μt = g(μt−1, ut)
(4)
¯Σt = GtΣt−1GT
t + Rt
(5)
The correction step includes the measurement in order to correct the prediction.
The observation matrix Ht, the predicted covariance of the state ¯
Σt and the noise
of the measurement Qt, form the Kalman gain K. The Kalman gain weights the
correction of the state μt and the covariance Σt towards the prediction or the
measurement.
Kt = ¯ΣtHT
t (Ht ¯ΣtHT
t + Qt)−1
(6)
μt = ¯μt + Kt(zt −h(¯μt))
(7)
Σt = (I −KtHt) ¯
Σt
(8)
The EKF-cycle must be launched with a given robot position and correspond-
ing covariances. Consequently, we need landmarks, which can be seen in harsh
environments with LiDAR and radar.
Extracting Landmarks with Radar. Radar has the advantage over LiDAR
that it can see through smoke, rain or even snow [6], but comes along with
drawbacks like having worse distance and angle accuracy and resolution pre-
venting radar sensors from representing the structure of an environment in the
same quality as a LiDAR. The principle of the radar used for our experiment
is a mechanical pivoting of a focused beam. Although the integrated lens [12]
permits a high focusing, it still has a larger opening angle of the main beam
than common LiDAR scanners. This results in the eﬀect that objects enter and
leave the main lobe of the radar, while it is pivoting. The entering and leaving
of objects into the main lobe of the radar and their detections depend on the
antenna and the object’s radar cross section (RCS). The RCS represents the
reﬂectivity of an object and depends on the material, shape, size and the facing
direction. If the main lobe of the radar is pivoting over a point target, then the
reﬂected power of this object follows an up-and-down with its maximum when
the antenna is directly facing the object. A point target is an object, where a
constant centre of reﬂection can be assumed. A typical point target is a corner
reﬂector, which is commonly seen on boats to increase the RCS. the graph in
Fig. 3 shows the characteristics of the receiver power, when the main radar lobe
is pivoted over a corner reﬂector.
Another property of point targets is that due to a constant centre of reﬂec-
tions, the determined distance to the object is constant during a scan. Therefore,
point targets appear as a sector of a circle on the scan image. Importantly, we
observed that large corners, large edges and small metallic objects act as point

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
181
P [dB]
Φ [◦]
Fig. 3. Left The opening angle of a radar beam is deﬁned through the drop of the
gain of the main lobe by half of its power, which is equal to 3 dB (red). Nevertheless,
if an object gets detected depends mainly on the RCS and the distance of the object.
Middle The receiver power follows an up-and-down characteristics when the radar
beam is pivoted over a corner reﬂector. In this case, the corner reﬂector is inside the
detection ﬁeld of the main radar lobe for over 10◦. Right This ﬁgure shows a LiDAR
scan (black) and a radar scan (red). The green circles show the detection of radar
landmarks according to the consideration of the characteristics of the receiver power
and the range, which is on a sector of a circle
targets. The detection of a door frame and a corner is shown on the right in
Fig. 3. It can be seen that the radar scan points belonging to a point target,
form a sector of a circle. Every red point represents the strongest reﬂection in a
single measurement, which gets extracted from the receiver spectrum. Accord-
ingly, there are natural landmarks in every indoor environment. Considering
these eﬀects, we implemented an algorithm for extracting natural landmarks
with the MPR.
Extracting Landmarks with LiDAR. Most LiDARs permit a sensor setting
for the detection of the ﬁrst, last or strongest object regarding the intensity.
Certainly, in case of smoke, rain or snow, the sensor should measure the last
object ignoring detected rain drops or smoke particles, which are usually in
front of the object. In order to evaluate the settings, we used a fog machine to
ﬁll a box with fog, since it is more diﬃcult to produce smoke in a controlled
manner. We observed that it is not possible to detect common objects inside or
behind the fog. But, a retro reﬂective paper, which was placed at the end of the
box, could be detected. The histogram in Fig. 4 shows the distribution of the
LiDAR scan points according to their intensities for the experiment with the
box. It can be seen that most measurement points contain an intensity value of
less than 100.
LiDAR scan points, which hit retro reﬂective paper, can be detected even
through dense fog and contain noticeable higher intensity values. Accordingly,
retro reﬂective paper can be used as an artiﬁcial landmark in low visibility
environments and can be extracted with a simple threshold IT hreshold, which is
dynamically calculated with the maximum intensity Imax of a scan, the average

182
P. Fritsche et al.
nLiDAR
I
Fig. 4. Top left Stationary LiDAR scanner in front of a box, which is ﬁlled with fog.
Top right Fog aﬀects the measurement of LiDAR. Nevertheless, retro reﬂective paper
that has been placed at the end of the box can be detected (blue points) [8]. Bottom The
histogram shows the distribution of the measurement points of our 3D laser scanner
according to their intensities for one scan. Under the conditions of the experiment,
most points have an intensity lower than 100, however retro reﬂective paper results in
intensities around 200 even through dense fog
Intensity I∅and a parameter α = 0 . . . 1.
IT hreshold = I∅+ α · (Imax −I∅)
(9)
The remaining scan points have to be clustered to get the positions of the land-
marks.
In order to make the data association inside the EKF more robust, every
feature of the feature map contains a signature, which can be either radar or
LiDAR. This avoids that a radar landmark gets associated to a LiDAR feature
of the map and the other way around.
2.4
SLAM Based on Scan Registration
Feature based SLAM, as it was explained, requires the presence of landmarks
inside an environment. Since the MPR provides a scan SMP R, similar to a LiDAR
scanner, it is suitable for SLAM which is based on scan registration as well.
This method is normally realised by matching consecutive scans or the current

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
183
scan with the map via the iterative closest point algorithm (ICP) iteratively
minimising the least square distance between two sets of points and resulting
in the rotation RICP and the translation TICP for the alignment. Holz and
Behnke [9] investigate two dimensional SLAM based on ICP registration and
recommend the registration of the current scan St with the whole map, because
the registration of consecutive scans tend to larger oﬀsets. In our case, we use a
grid map M for map representation.
xR,t = RICP,tMt−1 + TICP,t
(10)
The scan registration based approach works the best if the used scan is as accu-
rate as possible. As we show in Table 1, the MPR’s or other radar scanner’s
scan quality is less than that of a LiDAR scanner. Consequently, a scan fusion
approach has to give higher priority to LiDAR scan points and should only use
radar points in case of low visibility.
Integrating MPR- and LiDAR-Scans. The fusion of LiDAR and radar scans
to a fused scan SF usion combines the advantages of both sensors. Usually, a scan
message contains an array of range measurements S = [R0, R1, . . . , Rn]. Our
proposed fusion method replaces a LiDAR point RLiDAR of a 2D scan, which
is aﬀected for example by fog, with a corresponding radar points Rradar, for a
sensor setup where both sensors are aligned to the same centre of rotation close
to each other. Consequently, every range measurement of the LiDAR RLiDAR
has a corresponding range measurement of the radar RRadar.
In general, diﬀerent sensors have diﬀerent scan ranges. In our case, the LiDAR
has a larger scan range than the radar. This basically depends on the emitted
power, the focusing of the antenna and the sensitivity of the detection algorithm.
The maximum range of LiDAR and radar is not constant. It depends on the
reﬂectivity of the objects inside the scene. Therefore, a sensor fusion can only
be performed in overlapping scan ﬁelds dynamically determined through the
fusion range RF depending on the average range of a radar scan RRadar,∅, the
maximum range measurement of a radar scan RRadar,max and the parameter
β = [0 . . . 1].
RF = RRadar,∅+ β(RRadar,max −RRadar,∅)
(11)
A fused scan SF usion contains radar scan points RRadar, LiDAR scan points
RLiDAR and fused points RF usion. If corresponding radar and LiDAR points, are
closer to each other than a parameter dF , then they are considered to represent
the distance to the same object. Consequently, they can be fused according to
Eq. (12).
RF usion = RRadar +
σ2
Radar
σ2
Radar + σ2
LiDAR
· (RLiDAR −RRadar)
(12)
We estimate the standard deviations σRadar and σLiDAR for a pair of points
with two error functions. During previous experiments with FMCW radars, we
observed that the standard deviation σRadar gets larger the less receiver power
Pe is obtained. Therefore, our error function is related to the receiver power

184
P. Fritsche et al.
σRadar ∽
1
Pe . The detected receiver power Pe gets lower the farther away an
object is standing in front of the sensor. Since the spot diameter of a LiDAR
measurement gets larger over the distance measurement, we model the error of
the LiDAR σLiDAR ∽RLiDAR. Nevertheless, this case only applies for corre-
sponding points if |RRadar −RLiDAR| < dF .
If corresponding points are inside the fusion range RF yet have a distance
larger than dF to each other, then it is likely that the LiDAR beam hits a fog
particle. Outside the fusion range RF , only the sensor with larger maximum scan
range can contribute to the fused scan. Additionally, we apply a line detection on
the LiDAR scan. If a LiDAR point is on a line, then it is most likely not detecting
smoke or fog and can be used for SF usion. All conditions are summarised as
follows:
SF usion =
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎩
RLiDAR, if
RLiDAR > RF
∨(RLiDAR ∈Line ∧|RLiDAR −RRadar| > dF )
RRadar, if
|RLiDAR −RRadar| > dF ∧(RLiDAR < RF )
∨RLiDAR = inf
RF usion, if
|RLiDAR −RRadar| < dF
(13)
3
Experiments
In order to evaluate the two proposed SLAM approaches for harsh environments,
we conducted an experiment with a Pioneer platform, which we equipped with
the MPR and a Velodyne VLP-16, as displayed in Fig. 5. We created a situation
with low visibility by turning on a fog machine, which we use already in Fig. 4
to demonstrate the inﬂuence of fog on LiDAR scans.
For our feature based SLAM approach, we placed artiﬁcial landmarks into
the environment. We attached several retro reﬂective papers at the walls and
installed three aluminium corner reﬂectors (point targets) in the environment.
The second SLAM approach, which is based on scan registration, does not require
further modiﬁcation of the environment. During the experiment, we turned on
the fog machine while teleoperating the robot in the environment. The goal
of the experiment is to demonstrate the feasibility to integrate the MPR in
environments with low visibility with the two proposed SLAM approaches.
In addition to the experiment involving the fog machine, we wanted to inves-
tigate, whether the proposed feature extraction with the MPR also worked with
natural features which behave as point targets. We performed this experiment
inside our building by driving up and down a corridor collecting odometry and
MPR data.

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
185
Fig. 5. This ﬁgure shows the setup of the experiment. It has been performed in a
yard with a robotic platform, which is equipped with the 2D MPR and a 3D Velodyne
VLP-16 LiDAR. Furthermore, there are aluminium corner reﬂectors (green) and retro
reﬂective papers (blue)
4
Results and Discussion
Fraunhofer FHR have introduced a new radar scanner, for mapping and localisa-
tion in low visibility environments. We are continuing our research from [8] also
taking a look on feature based SLAM in harsh environments. We introduced a
landmark detection for radar scanners and observed that retro reﬂective paper is
suitable for localisation in environments with low visibility. This is interesting for
applications where a radar scanner is not available. Figure 6 shows the results of
the EKF-SLAM. Interestingly, it is also possible to use the point target extrac-
tion to build feature maps from an environment using natural landmarks like
a corner, as we demonstrate in Fig. 6. We achieved this by taking into account
the speciﬁc up-and-down trend of the receiver power Pe and a constant range
RRadar of the MPR while pivoting over a point target. For experimental eval-
uation of suitable landmarks, we implemented an EKF-SLAM, although other
SLAM approaches that are based on features, for example FastSLAM, will work
likewise.
We explained that radar scanners’ scan quality is lower than that of LiDAR
due to their principle of operation. Therefore, a grid map created via SLAM
by a radar scanner, will be more imprecise and contain more outliers, as we
demonstrated in [8]. Therefore, we combine every MPR and LiDAR scan in
order to build a fused scan SF usion, which is shown in Fig. 7c. If an environment
does not contain any smoke, fog or dust, a radar scanner has no advantage over
a LiDAR scanner. The fused scan results in an optimal map quality, in case
no fog is present, since it mainly would contain LiDAR or fused scan points.
On the other side, the SLAM that is based on scan registration would fail in

186
P. Fritsche et al.
Fig. 6. Left This ﬁgure shows the features (black points) and the detection via MPR
(green points) and LiDAR (blue points) at a certain time step. Right This ﬁgure demon-
strates a feature map built only by the MPR by detecting natural landmarks like corners
and door frames inside a corridor environment. The red line represents the corrected
path of the robot
(a) MPR scan.
(b) Velodyne VLP-16 scan.
(c) Fused scan.
Fig. 7. a Scan with the MPR. b 2D scan (horizontal cut of 3D scan) of the Velodyne
VLP-16. The blue circle marks an area, where LiDAR detects fog. c Our sensor fusion
replaces LiDAR points, which are aﬀected by fog, with radar points (green). Yellow
points represent RF usion, which we introduced in this article
environments containing dense fog, if only LiDAR scans are applied. To overcome
this problem, our approach will rely more on radar in such situations and it will
still be possible to continue to map the environment.
The function of our scan fusion method is depicted in Fig. 7. Figure 7a, b
reveal one scan image of the MPR and the Velodyne VLP-16 (horizontal cut)
with the presence of fog, which is marked via a blue circle. As can be seen
from Fig. 7c, the scan fusion replaces LiDAR points which are aﬀected by fog
with radar points, in order to get a clean scan for localisation, mapping or
SLAM, at the same time making structure visible, which is inside or behind
aerosols. Figure 8 shows a grid map which was created by our SLAM based
on ICP registration. We used the FLANN library to create k-d-trees for faster
nearest neighbour searches inside every ICP iteration and the Universal Grid

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
187
Fig. 8. Left Resulting grid map from the ICP SLAM Right Grid map resulting from
EKF-SLAM plus mapping with fused scan SF usion
Map Library from Frankhauser [5] to transfer our points from SF usion into a
grid map. Furthermore, we used the rosaria ROS driver package in order to
control the Pioneer platform and the velodyne ros driver in order to get sensor
reading from the LiDAR.
Both, the proposed EKF-SLAM and the ICP-SLAM have pros and cons.
The feature based SLAM approach will work in harsh environments as well, if
artiﬁcial landmarks, such as the retro reﬂective paper, are placed. This might
be interesting for applications inside a static, well-known environment where no
radar scanner is available. Feature maps are not very readable for humans, there-
fore the correct pose of the EKF-SLAM can be connected to classical occupancy
grid mapping [11]. But, if there exists too dense smoke, fog, dust, etc., then map-
ping with only LiDAR is not possible anymore. On the other side, the fused scan
SF usion allows a grid mapping of a harsh environment based on EKF-SLAM,
which is demonstrated on the right in Fig. 8.
The advantage of the ICP SLAM is its independence from odometry, which
might be quite diﬃcult for example in environments with nonsolid ground. The
predictions step of our EKF-SLAM includes a motion model for a diﬀerential
drive robot, which has to be calibrated depending on the size of the robot. If a
diﬀerent type of robot is used, another motion model needs to be implemented.
The ICP SLAM does not depend on this. But, ICP can tend to wrong local
minima, resulting in wrong mapping. Therefore, our future research will focus
on increasing the robustness of the ICP SLAM as well.
5
Conclusion
With this work we have shown that the MPR is a useful scanning device and
can be used for SLAM in low visibility environments. The best results can be
achieved when fusing a radar scanner with a LiDAR scanner in order to combine
both sensor strengths. Possible applications for our proposed methods are such as
rescue robotics and ﬁeld robotics. In this article, we proposed feature extraction

188
P. Fritsche et al.
of point targets with a radar scanner and its application in SLAM. Furthermore,
we introduced a new fusion strategy in order to reduce the inﬂuence of fog,
smoke, dust, etc. on a single LiDAR scan. Our approach enhances the use for
scan registration based SLAM, where a clean scan is preferred. Of course, more
data sets involving fog or smoke will be needed for further evaluation of our
proposed methods. Future work will focus on further development of our SLAM
approaches, especially by integrating information from both sensor modules.
Acknowledgements. This work has partly been supported within H2020-ICT by the
European Commission under grant agreement number 645101 (SmokeBot).
References
1. Adams, M., Jose, E.: Robotic Navigation and Mapping with Radar. Artech House,
Boston (2012)
2. Clark, S., Dissanayake, G.: Simultaneous localisation and map building using mil-
limetre wave radar to extract natural features. In: International Conference on
Robotics and Automation (1999)
3. Clark, S., Whyte, H.D.: The design of a high performance MMW radar system for
autonomous land vehicle navigation. In: Field and Service Robotics (1998)
4. Detlefsen, J., Rozmann, M., Lange, M.: 94 HGZ 3-d imaging radar sensor for
industrial environments. EARSeL Advances in Remote Sensing (1993)
5. Fankhauser, P., Hutter, M.: A universal grid map library: implementation and use
case for rough terrain navigation. In: Koubaa, A. (ed.) Robot Operating System
(ROS) - The Complete Reference, vol. 1. Springer, Berlin (2016)
6. Foessel, A., Apostolopoulos, D.D.: Short-range millimeter-wave radar perception in
a polar environment. In: Institute, T.R. (ed.) Proceedings of the Field and Service
Robotics Conference (1999)
7. Fritsche, P., Wagner, B.: Scanning techniques with low bandwidth radar for robotic
mapping and localization. Lect. Notes Electr. Eng. 383, 321–335 (2016)
8. Fritsche, P., Kueppers, S., Briese, G., Wagner, B.: Radar and LiDAR sensorfusion
in low visibility environments. In: Proceedings of the 13th International Conference
on Informatics in Control, Automation and Robotics (2016)
9. Holz, D., Behnke, S.: Sancta simplicitas on the eﬃciency and achievable results
of SLAM using ICP-based incremental registration. In: Proceedings of the IEEE
International Conference on Robotics and Automation (ICRA) (2010)
10. Marck, J.W., Mohamoud, A., van Heijster, R., et al.: Indoor radar SLAM a radar
application for vision and GPS denied environments. In: 2013 European Radar
Conference (EuRAD), pp. 471–474. IEEE (2013)
11. Moravec, H., Elfes, A.: High resolution maps from wide angle sonar. In: Proceedings
of the IEEE International Conference on Robotics and Automation (ICRA) (1985)
12. Pohl, N.: A dielectric lens antenna with enhanced aperture eﬃciency for indus-
trial radar applications. In: 2010 IEEE Middle East Conference on Antennas and
Propagation (MECAP), pp. 1–5. IEEE (2010)
13. Pohl, N., Jaeschke, T., Auﬁnger, K.: An ultra-wideband 80 GHz FMCW radar
system using a SIGe bipolar transceiver chip stabilized by a fractional-N PLL
synthesizer. IEEE Trans. Microw. Theory Tech. 60(3), 757–765 (2012)

Fusing LiDAR and Radar Data to Perform SLAM in Harsh Environments
189
14. Salman, R., Willms, I., Sakamoto, T., Sato, T., Yarovoy, A.: Environmental imag-
ing with a mobile UWB security robot for indoor localisation and positioning
applications. In: 2013 European Microwave Conference (EuMC), pp. 1643–1646
(2013)
15. Vivet, D., Checchin, P., Chapuis, R.: Localization and mapping using only a rotat-
ing FMCW radar sensor. Sensors, 13(4), 4527–4552 (2013)
16. Willeke, K., Baron, P., Martonen, T.: Aerosol Measurement: Principles, Techniques
and Applications, vol. 6, pp. c1988–2007. Mary Ann Liebert, Inc., New York (1993)
17. Yamauchi, B.: Fusing ultra-wideband radar and lidar for small UGV navigation
in all-weather conditions. In: Proceedings of the SPIE 7692, Unmanned Systems
Technology XII (2010)

On Redundancy Resolution in Minimum-Time
Trajectory Planning of Robotic Manipulators
Along Predeﬁned End-Eﬀector Paths
Alexander Reiter(B), Hubert Gattringer, and Andreas M¨uller
Institute of Robotics, Johannes Kepler University Linz, Altenberger Straße 69, 4040
Linz, Austria
alexander.reiter@jku.at, hubert.gattringer@jku.at, a.mueller@jku.at
http://www.robotik.jku.at
Abstract. Trajectory planning is a crucial aspect of economically viable
operation of robotic manipulators. For given geometric paths, appro-
priate joint trajectories are required such that their duration is mini-
mized while physical and technological constraints are fulﬁlled. Kine-
matically redundant manipulators are increasingly employed for indus-
trial tasks due to their increased work space and dexterity. In this paper,
a novel inverse kinematics based optimization approach for computing
minimum-time trajectories is introduced that optimally exploits a manip-
ulator’s kinematical redundancy. Using the example of a planar manip-
ulator, the presented method is shown to outperform conventional opti-
mal control approaches regarding robustness and the resulting trajectory
characteristics.
Keywords: Robotics · Optimal control · Trajectory planning · Kine-
matic redundancy · Inverse kinematics
1
Introduction
For many industrial applications, such as transportation, painting, welding, glu-
ing or printing a geometric end-eﬀector (EE) path is deﬁned, leaving only the
problem of ﬁnding a suitable time evolution of the joints of the executing robot.
As a shorter trajectory duration results in a lower task cycle time, minimum-time
trajectories may yield economical advantages. Kinematically redundant manip-
ulators provide favorable properties such as increased work space dexterity and
improved task-speciﬁc adaptiveness compared to conventional, non-redundant
manipulators. The topic of time-optimal trajectory planning has been studied
in a large number of publications. While for non-redundant manipulators this
problem has been solved, e.g. [2,13,17], for redundant robots no satisfying meth-
ods have been proposed yet. Concepts of minimum-time trajectory planning for
kinematically redundant manipulators can be largely separated into two method
families: joint space-based and work space-based techniques. Members of the
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_10

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
191
ﬁrst group assume that the path following problem is solved as an equality con-
straint to the trajectory optimization process. In the second group, the methods
incorporate inverse kinematics (IK). Due to the mathematical representation
of redundant robots’ kinematics, solutions are often obtained numerically [9].
Redundancy allows to augment such solutions with additional objectives such
as maximizing performance measures, e.g. directional dynamic manipulability in
[5]. However, the choice of a performance measure is crucial as it must act as a
local proxy for the minimum-time criterion. IK methods relying on joint space
decomposition (JSD) [19] allows to computate analytic IK solutions for certain
manipulator structures. There are various joint space decomposition approaches,
where some have drawbacks such as the inability to process certain paths, or
boundary conditions, cf. [10]. Others rely on diﬀeomorphisms that may be diﬃ-
cult to obtain, cf. [7]. Summarizing, the unsolved problem is often a kinematic
one, particularly the redundancy resolution in the IK problem poses diﬃculties.
This contribution extends [15] by more detailed explanations and compar-
isons with another IK-based approach, JSD, and the optimization problem for-
mulated as a standard optimal control problem (OCP). In Sect. 2, the prob-
lem of computing minimum-time joint trajectories for tracking a kinematically
redundant serial manipulator’s prescribed EE path is formulated. Section 3 dis-
cusses methods to satisfy the path tracking constraints. The main contribution
of this work is presented in Sect. 3.2. A novel method wherein the path following
requirement is treated using an IK scheme within the trajectory optimization
problem. The numerical IK scheme is augmented by optimally scaled nullspace
basis vectors of the instantaneous diﬀerential velocity Jacobian in order to obtain
time-optimal trajectories. This new approach is applied to the example of a pla-
nar manipulator with two redundant degrees of freedom in Sect. 4. Therein,
the trajectory planning problem is formulated using direct multiple shooting
[3] and solved using a modern interior-point method. Unfavorable properties of
time integration and appropriate countermeasures are also discussed. Compar-
isons with solutions obtained by means of standard OCP and JSD are made.
Section 5 concludes this contribution and gives insight in possible enhancements
to the proposed method.
2
Problem Description
2.1
Kinematically Redundant Manipulators
The conﬁguration of a robotic manipulator is uniquely deﬁned by the generalized
coordinates qi, i = 1 . . . n in the conﬁguration space Vn, i.e. q⊤= (q1, . . . , qn) ∈
Vn. The conﬁguration space Vn is a manifold deﬁned according to the diﬀer-
ent types of joints, e.g. revolute and prismatic joints. The EE pose zE can be
described by its position rE ∈R3 and its orientation, described by the rotation
matrix RE that together represent the EE pose at zE = (RE, rE) ∈SE (3). The
forward (or direct) kinematics mapping f : Vn →SE (3) maps joint conﬁgu-
rations to EE poses. The image may be a subgroup of SE (3), like R3 for pure
translations.

192
A. Reiter et al.
The robot’s work space W is given as the image of the direct kinematics
mapping f, i.e. W = {C ∈imf|h (q) ≤0} ⊂SE (3) wherein only geometrically
admissible conﬁgurations (deﬁned by the inequality constraints h) are consid-
ered. The work space dimension is given as m = dim W.
The task space T of dimension l = dim T lies in the work space of the
manipulator, i.e. T ⊆W.
According to [6], a serial manipulator is considered kinematically redundant
if n > m, i.e. the conﬁguration space is of higher dimension than the work space.
It is considered task redundant if n > l, i.e. the conﬁguration space dimension
is greater than the task space dimension. Thus, a manipulator does not need to
be kinematically redundant to be task redundant.
For non-redundant manipulators (where n = m = l), the inverse kinematics
problem possesses a ﬁnite number of solutions, and is in special cases even given
in closed form, e.g. for standard 6R robots with a spherical wrist. For task
redundant robots, diﬀerent approaches are required, as detailed in Sect. 3.
2.2
Optimal Trajectory Planning for Prescribed End-Eﬀector Paths
The goal of minimum-time trajectory optimization is to ﬁnd the shortest possible
time evolution of the considered manipulator’s joint positions such that a given
EE path is tracked while being restricted to technological limitations. In the
following, it is assumed that the path is given by means of a series of desired
poses, continuously parametrized with a scalar path parameter s ∈[0, 1], i.e.
zE,d (s) = (RE,d (s) , rE,d (s)). The index d denotes desired quantities. This yields
a non-linear optimization problem (NLP) of the form
min
x
tf

0
1 dt
(1a)
s.t.
M (q) ¨q + g (q, ˙q) = Q
(1b)
qmin ≤q ≤qmax
(1c)
˙qmin ≤˙q ≤˙qmax
(1d)
¨qmin ≤¨q ≤¨qmax
(1e)
Qmin ≤Q ≤Qmax
(1f)
0 ≤s ≤1
(1g)
s (0) = 0, s (tf) = 1
(1h)
˙s ≥0
(1i)
zE,d (s) = f (q)
(1j)
q (0) = q0, q (tf) = qf
(1k)
˙q (0) = ˙q0, ˙q (tf) = ˙qf
(1l)
wherein x describes the time evolution of the path parameter s = s (t) and the
n joint positions qi = qi (t) as well as the ﬁnal time tf. The exact form of rep-
resentation of this abstract description depends on the speciﬁc implementation.

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
193
One particular choice is presented in Sect. 4. Declarations of dependencies of x
will be omitted below. The optimization problem accounts for the manipulator’s
(in general non-linear) dynamics, denoted as the equations of motion (1b), with
the vector of minimal coordinates q and its time derivatives ˙q and ¨q. M is the
system’s mass matrix, g represents non-linear terms in the equations of motion,
consisting of the Coriolis, centrifugal, gravitational and dissipative eﬀects. Q
indicates the vector of actuator forces and torques. Limitations of the manipula-
tor’s joint positions in (1c), joint velocities (1d) and possibly higher derivatives
such as joint accelerations (1e) may also be incorporated. Further bounds are
applied to the actuator forces Q in (1f). The desired EE path is prescribed using
the monotonically increasing (1i), bounded (1g) path parameter s. Equation (1j)
represents the aforementioned path tracking requirement that will be further
discussed in Sect. 3. Optionally, there are also initial and terminal constraints of
the robot’s joint positions and their time derivatives, cf. (1k), (1l). Constraints
for cyclic tasks may be formulated as q0 = qf and ˙q0 = ˙qf.
3
Path Following
Equality condition (1j) represents the instantaneous interconnection of the
desired task space path zE,d (s), parametrized with s, and the joint variables q by
a kinematics mapping. While there are approaches that assume the appropriate
joint space parametrization to be known [14], an IK mapping f −1 : T →Vn can
be applied to obtain joint quantities from task space quantities. As mentioned
in Sect. 2.1, no closed-form solution of the IK problem exists for kinematically
redundant manipulators. However, there are approaches such as JSD [10,19] or
Jacobian-based numeric methods [9,20] to resolve the IK problem within an
optimization problem. Section 4 shows that these approaches can be successfully
applied to problems with readily available kinematic and dynamical models.
Another crucial requirement is the continuity of the resulting trajectories.
For systems that require continuous torques (q (t) ∈C2), especially diﬀerentially
ﬂat elastic systems (q (t) ∈C4), cf. [18].
3.1
Diﬀerential Inverse Kinematics
In diﬀerential inverse kinematics, ﬁrstly introduced in [20], a least-squares solu-
tion (w.r.t. an EE error quantity) yields all joint quantities at once. However,
this family of methods needs to be augmented in order to exploit kinematical
redundancy.
The derivations of diﬀerential IK schemes below are well-known but repro-
duced here as an introduction to and a motivation for the main contribution of
this work presented in Sect. 3.2. Subsequently, only position and no orientation
coordinates are treated as work space coordinates for simplicity.
The most simple case is ﬁrst-order diﬀerential onward cinematics,
˙rE = J (q) ˙q ,
(2)

194
A. Reiter et al.
wherein J =
∂˙rE
∂˙q
∈Rm×n denotes the forward kinematics Jacobian, a wide
matrix in case of redundant manipulators. Thus it is not invertible, but a par-
ticular solution for the joint velocities ˙q can be computed minimizing the EE
velocity error in the least-squares sense, i.e.
˙q = J+˙rE,d
(3)
wherein J+ = J⊤
JJ⊤−1 denotes the right Moore–Penrose pseudoinverse.
Alternatively, a generalized inverse can be used. One practicable choice is the
dynamically consistent inverse J+
M = M−1J⊤
JM−1J⊤−1 [8]. It can be shown
that it is not a pseudoinverse according to the Penrose conditions and deﬁnitions
in [11]. Compared to (2), for (3) the index d was added to the EE velocity as
it is now considered a given, desired quantity. For computing the matrix inverse
of

JJ⊤
near singular conﬁgurations, a regularization term can be introduced,
i.e. J+ = J⊤
JJ⊤+ κI
−1 that allows for small deviations from the prescribed
path while minimizing joint velocities. I denotes the identity matrix of appro-
priate dimensions. In general, non-singular conﬁgurations the nullspace of J has
dimension l−m > 0, i.e. the manipulator is capable of internal motion that does
not aﬀect the EE motion. This property can be exploited using an IK scheme
that is augmented to pursue additional goals, [9], i.e.
˙q = J+˙rE,d + Nv
(4)
with the nullspace projector N = (I −J+J). Substituting (4) in (2) shows that
no EE motion results from the additional term. The velocity v = ∂w
∂q points in
the direction of the gradient of a scalar performance measure w and is projected
into the nullspace of the Jacobian. Popular choices for w are the kinematic [22]
or dynamic [21] manipulability. Pose-dependent performance measures such as
kinematic or dynamic manipulability suﬀer from the fact that they only represent
a local, instantaneous property. As a result, they can hardly be exploited in the
course of a trajectory optimization problem minimizing a global property such
as a trajectory time.
Similar IK approaches can be derived for higher time derivatives, simply by
deriving (2) w.r.t. time and isolating the highest time derivative of the joint
positions q, e.g. an acceleration-level approach yields
¨q = J+ 
¨rE,d −˙J ˙q

+ Nv
(5)
wherein v can again represent a performance measure gradient projected into
the Jacobian nullspace.
In trajectory planning tasks, constraints regarding derivatives of the joint
positions q may be imposed, e.g. zero joint accelerations at the EE ﬁnal posi-
tion. By close examination of (5), it can be found that such a constraint is not
necessarily fulﬁlled since the vector v may not have the appropriate magnitude to
cancel all internal accelerations. Thus, a scaling factor γ needs to be introduced
to fulﬁll such requirements, i.e. for the case of an acceleration-level approach
¨q = J+ 
¨rE,d −˙J ˙q

+ γNv.
(6)

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
195
Furthermore, it needs to vary over time in order to satisfy multiple constraints
across the trajectory, i.e. γ = γ (t).
3.2
Optimal Nullspace Basis Scaling
Using the above method, the joint state is changed such that a performance
measure w is maximized locally, i.e. following the instantaneous gradient ∂w
∂q ,
projected to the current Jacobian nullspace. Even if the step size γ is adjusted
properly, this may not yield an optimal joint state evolution across the path. If a
manipulator provides more than one redundant degree of freedom, the projection
of the gradient will be in a subspace of the nullspace, depending on the nullspace
projector N. To make use of remaining free nullspace directions, task priority-
based methods [12] can be used to pursue additional (ideally non-conﬂicting)
goals with lower priorities.
The key idea of the present approach is to compute a basis for the Jacobian
nullspace, i.e. ker J = span {ai} , i = 1, . . . , (n −l). The basis vectors ai are then
scaled by factors γi, i = 1, . . . , (n −l) and added to the IK solution (6), i.e. on
acceleration level
¨q = J+ 
¨rE,d −˙J ˙q

+
n−l

i=1
γi (t) ai .
(7)
For manipulators with a degree of kinematic redundancy of n −l = 1, there
is only one basis vector of the nullspace. Thus, redundancy is fully exploited
by both, conventional performance measure-based methods and nullspace basis
scaling. However, for higher degrees of redundancy, n −l > 1, exploiting the
full nullspace as in (7) enables an optimization process to directly modify the
joint trajectories according to the criteria to be minimized. In contrast to other
approaches, no projection of a performance measure gradient, acting as a proxy
function to pursue the optimization goals, is needed. As for both, performance
measure gradients and the nullspace basis vectors, symbolic expressions can be
obtained beforehand by means of computer algebra systems, the diﬀerence in
computational cost is negligible.
Including the IK law with optimal nullspace basis scaling (ONBS) (7), the
NLP (1) can be rewritten as
min
x
tf

0
1 dt
(8a)
s.t.
M (q) ¨q + g (q, ˙q) = Q
(8b)
qmin ≤q ≤qmax
(8c)
˙qmin ≤˙q ≤˙qmax
(8d)
¨qmin ≤¨q ≤¨qmax
(8e)
Qmin ≤Q ≤Qmax
(8f)

196
A. Reiter et al.
0 ≤s ≤1
(8g)
s (0) = 0, s (tf) = 1
(8h)
˙s ≥0
(8i)
¨q = J+ 
¨rE,d (s, ˙s, ¨s) −˙J ˙q

+
n−l

i=1
γiai
(8j)
q (0) = q0, q (tf) = qf
(8k)
˙q (0) = ˙q0, ˙q (tf) = ˙qf
(8l)
wherein x describes the time evolution of the path parameter s = s (t) and the
(n −l) scaling factors γi = γi (t) as well as the ﬁnal time tf.
3.3
Joint Space Decomposition
In joint space decomposition (JSD), originally developed in [19], the joint vari-
ables qi are explicitly separated in two groups: the l non-redundant joints qnr,
and the (n −l) redundant joints qr.
Rewriting the direct kinematics mapping (2) in terms of this decomposition,
˙rE = J (q) ˙q
(9)
= Jnr (q) ˙qnr + Jr (q) ˙qr ,
(10)
with Jnr = ∂˙rE
∂˙qnr ∈Rl×l and Jr = ∂˙rE
∂˙qr ∈Rl×(n−l) allows for the IK formulation
˙qnr = J−1
nr (˙rE,d −Jr ˙qr)
(11)
wherein no generalized inverse is required as opposed to (3). However, knowledge
of ˙qr is required to perform this operation.
Similarly, by deriving the forward kinematics mapping (10) w.r.t. time,
¨rE = ˙J (q, ˙q) ˙q + J (q) ¨q
(12)
= ˙Jnr (q, ˙q) ˙qnr + ˙Jr (q, ˙q) ˙qr + Jnr (q) ¨qnr + Jr (q) ¨qr ,
(13)
yields the acceleration level IK law
¨qnr = J−1
nr

¨rE,d −˙J ˙q −Jr¨qr

.
(14)
Any evolution of qr can be used that satisﬁes the geometric requirements
such that the prescribed path can be tracked on position level. Such a valid, but
static assumption, fulﬁlling only this basic kinematic requirement, does not yield
a solution that optimally exploits kinematic redundancy w.r.t. the trajectory
optimization goal. Therefore it is practicable to assume that qr can be changed
during the optimization process, i.e. is an optimization variable. Including the
JSD IK law (14), the NLP (1) can be rewritten as
min
x
tf

0
1 dt
(15a)

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
197
s.t.
M (q) ¨q + g (q, ˙q) = Q
(15b)
qmin ≤q ≤qmax
(15c)
˙qmin ≤˙q ≤˙qmax
(15d)
¨qmin ≤¨q ≤¨qmax
(15e)
Qmin ≤Q ≤Qmax
(15f)
0 ≤s ≤1
(15g)
s (0) = 0, s (tf) = 1
(15h)
˙s ≥0
(15i)
¨qnr = J−1
nr

¨rE,d (s, ˙s, ¨s) −˙J ˙q −Jr¨qr

(15j)
q (0) = q0, q (tf) = qf
(15k)
˙q (0) = ˙q0, ˙q (tf) = ˙qf
(15l)
wherein x describes the time evolution of the path parameter s = s (t) and the
(n −l) redundant joint coordinates qr,i = qr,i (t) as well as the ﬁnal time tf.
4
Example
4.1
Kinematic and Dynamic Model
The methods presented in Sect. 3.2 are illustrated using the simple example from
[15]. Therein, the planar manipulator depicted in Fig. 1, moving along straight
line paths. The workspace of this manipulator is a subspace of R2. The robot
consists of four revolute joints (4R), its links with lengths li have masses mL,i
and moments of inertia CL,i (about their respective centers of mass). The joints
are directly actuated by means of motors without mass and inertia. Damping
coeﬃcients di account for viscous joint friction. The system is not inﬂuenced by
gravity. Numerical values used for the simulation can be obtained from Table 1.
A minimal coordinate representation of the manipulator’s conﬁguration
yields q⊤= (q1, q2, q3, q4) ∈V = S4 wherein S represents the 0-sphere of
each joint’s admissible range of positions (qi,min, qi,max). The admissible joint
velocities are given by ˙qi,max/min.
The forward kinematics mapping is given by
rE = f (q)
(16)
=
4

i=1
li
⎛
⎜
⎜
⎝
cos
i
j=1
qj
sin
i
j=1
qj
⎞
⎟
⎟
⎠.
(17)
The equations of motion M (q) ¨q + g (q, ˙q) = Q can be derived using well-
known techniques such as the Lagrange formalism or the Projection Equation
[4]. The vector of generalized forces Q⊤= (M1, M2, M3, M4) consists of the
motor torques which are also constrained.

198
A. Reiter et al.
x in m
y in m
0
0.5
1.5
1
2
2.5
3
−1
−0.5
0
0.5
1
Fig. 1. Planar manipulator with four revolute joints in initial conﬁguration (from [15])
Table 1. Parameters of
planar manipulator
(from [15])
Symbol
Description
Value
mL,i
link mass
10 kg
li
Link length
1 m
CL,i
Link moment of
inertia
mL,il2
i /12
di
Damping
coeﬃcient
0.1 Nm/rad
qi,max/min
Joint position
limits
±π rad
˙qi,max/min
Joint velocity
limits
±2 rad/s
Mi,max/min
Joint torque
limits
±10 Nm
In this example, the EE position, but not its orientation is considered as
work space coordinates, i.e. r⊤
E = (x, y) ∈W = {C ∈imf|q ∈V } ⊂R2. Thus,
the degree of kinematic redundancy is n −m = 2.
The resulting trajectories are required to be C1 continuous, thus an IK app-
roach on acceleration level with piecewise constant controls is suﬃcient.
4.2
Error Stabilization, Jacobian Regularization
Applying the diﬀerential IK laws (7) and (14) require time integration in order
to obtain lower time derivatives, i.e.
¨q (t)
→
ˆ˙q (t) =
t

0
¨q (τ) dτ
→
ˆq (t) =
t

0
ˆ˙q (τ) dτ .
(18)

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
199
Numerical time integration introduces work space drift errors e (t) = rE,d (s(t))−
f (ˆq (t)), ˙e (t) = ˙rE,d (s(t), ˙s(t)) −J (ˆq (t)) ˙ˆq (t). In order to obtain stable error
dynamics ¨e +K1 ˙e +K0e = 0, stabilizing terms are added to the IK schemes (7)
and (14), i.e.
¨q = J+ 
¨rE,d −˙J ˙q + K1 ˙e + K0e

+
n−l

i=1
γiai
(19)
for ONBS, and
¨qnr = J−1
nr

¨rE,d −˙J ˙q −Jr¨qr + K1 ˙e + K0e

(20)
for JSD, respectively. The positive deﬁnite matrices K0 and K1 are used for
pole-placement and were chosen such that all poles of the error dynamics are at
−2. Near singularities, J+ and J−1
nr are computed as robust inverses.
4.3
Task
For this example, the robot’s task is to move its EE along straight line paths
rE,d = r0 + sL
cos ϕ
sin ϕ

(21)
of length L = 1 m wherein s ∈[0, 1] denotes the path parameter. The task
is set to be performed for slopes ϕ = 0, π/4, π/2, . . . , 7π/4, cf. Fig. 1. At the
initial point r⊤
0 = (2, 0) m the manipulator’s conﬁguration is chosen to be q⊤
0 =
(π/3, −2π/3, 0, 2π/3) rad. The task is performed as a minimum-time rest-to-rest
maneuver, i.e. ˙q (t = 0) = ˙q (t = tf) = 0. The ﬁnal joint conﬁguration q (t = tf)
will be a result of the optimization.
4.4
Direct Multiple Shooting Trajectory Optimization
In this section, the NLP (1) is reformulated incorporating the speciﬁcs of the
used manipulator from Sect. 4.1, its IK scheme from Sect. 4.2 and the task deﬁned
in Sect. 4.3. Using direct multiple shooting, originally developed in [3], the time
domain is discretized into N uniform intervals and scaled with the ﬁnal trajec-
tory time tf as a decision variable. In each interval [tk, tk+1] the system’s state
xk is integrated using a fourth-order explicit Runge–Kutta scheme with the sys-
tem’s control uk as input, denoted as the function f (xk, uk). Therein, the state
consists of the path parameter and its time derivative as well as the manipu-
lator’s joint positions and velocities, i.e. x⊤
k =

sk, ˙sk, q⊤
k , ˙q⊤
k

. The piecewise
constant control vector uk depends on the method used. For ONBS, the con-
trol vector consists of the second time derivative of the path parameter and the
scaling factors γk,i, i.e. u⊤
k = (¨sk, γk,1, γk,2), whereas for JSD, the latter are
replaced by the accelerations of the redundant joints, i.e. u⊤
k = (¨sk, ¨qr,1, ¨qr,2).
For the comparison with an NLP using an equality constraint instead of IK for

200
A. Reiter et al.
path following, the control vector consists of the path acceleration and all joint
accelerations, i.e. u⊤
k =

¨sk, ¨q⊤
. The vector of decision variables x consists
of concatenations of the intermediate states xk, k = 0, . . . , N and the controls
uk, k = 0, . . . , N −1, as well as of the trajectory’s ﬁnal time tf, i.e.
x⊤=

x⊤
0 , u⊤
0 , . . . , x⊤
N−1, u⊤
N−1, x⊤
N, tf

.
(22)
The NLP (1) can thus be reformulated as
min
x tf
(23a)
s.t.
0 ≤sk ≤1
(23b)
˙sk ≥0
(23c)
s0 = 0, sN = 1
(23d)
˙s0 = ˙sN = 0
(23e)
qmin ≤qk ≤qmax
(23f)
˙qmin ≤˙qk ≤˙qmax
(23g)
q0 = q0
(23h)
˙q0 = ˙qN = 0
(23i)
Qmin ≤M (qk) ¨qk + g (qk, ˙qk) ≤Qmax
(23j)
xk+1 −RK4 (xk, uk) = 0
(23k)
ONBS:
¨qk = J+
k

¨rE,d (sk, ˙sk, ¨sk) −˙Jk ˙qk

+
2

i=1
γi,kai,k
(23l)
JSD:
¨qnr,k = J−1
nr,k

¨rE,d (sk, ˙sk, ¨sk) −˙Jk ˙qk −Jr,k¨qr,k

(23m)
OCP:
rE,d (sk) = f (qk)
(23n)
with integration stabilization terms omitted. The path parameter is constrained
by (23b)–(23e). The constraints for the joint angles and velocities are denoted
in (23f)–(23i), the ﬁnal joint positions qN are free and obtained as a result of
the NLP. Equations (23l) and (23m) denote the IK schemes used for ONBS
and JSD, respectively. For the comparison with an OCP without IK, the path
following equality constraint (23n) is applied. The inverse dynamics (23j) yields
the motor torques which are also constrained. As the NLP is implemented as
direct multiple shooting, (23k) is required to close the state integration gaps
between adjacent shooting intervals. As integrator function, an RK4 scheme is
utilized, denoted as RK4.
For direct multiple shooting, the structure of the Jacobian matrix of the
(in)equality constraints w.r.t. the decision variables x is blockdiagonal if the
ordering of xk and uk is as described in (22). Block diagonal matrices enable
eﬃcient solution algorithms to be applied. However, in this special case where the
ﬁnal time tf is also a decision variable, an additional dense column reduces the
matrix sparsity as all constraints depend on this variable. The corresponding
sparsity pattern for a discretization into N = 6 time intervals is depicted in
Fig. 2.

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
201
Fig. 2. Sparsity pattern of the constraint Jacobian for N = 6 uniform time intervals
Table 2. Sparsity of
diﬀerent IK approaches
OCP
JSD
ONBS
# variables 2999
2599
2599
# eq.
constr.
2400
2000
2000
# ineq.
constr.
800
800
8000
non-zeros
constr. jac.
0.21
0.38
0.50
non-zeros
Lagr. hess.
0.12
0.31
0.31
Table 2 shows the numbers of optimization variables, equality and inequality
constraints as well as the resulting sparsity.
As this NLP is non-convex, globally optimal solutions cannot be guaranteed.
Solutions obtained for this problem depend on the initial guess for which a
ﬁxed trajectory duration tf = 5 s was assumed. The time evolution of the path
parameter s was assumed to be a B-Spline curve of degree 2 with zero initial
and ﬁnal path velocity, cf. Fig. 3. Using the non-augmented IK scheme
¨q = J+ 
¨rE,d (s, ˙s, ¨s) −˙J ˙q

,
(24)

202
A. Reiter et al.
normalized time
0
0.2
0.4
0.6
0.8
1
−0.2
0
0.2
0.4
0.6
0.8
1
Fig. 3. Initial guess for path parameter s, velocity ˙s, acceleration ¨s
together with time integrator yields the initial guess for the joint quantities q,
˙q and ¨q. It should be noted that this initial guess does not satisfy the ﬁnal rest
condition in (23i).
For eﬃcient numerical solution, the NLP was implemented using MAT-
LAB interface to the optimization framework Casadi 3.1-rc1 [1] and solved with
Ipopt 3.12.3 (HSL ma27 for linear subproblems). A discretization of N = 200
uniform intervals was selected.
4.5
Results
As an example, the obtained trajectories for ϕ = π/2 are shown in Fig. 4 for
the path parameter, and in Figs. 5 and 6 for the normalized joint positions and
velocities, respectively. Figure 7 shows the normalized motor torques. It can be
seen, that the motor torques obtained with ONBS have less large steps. This is
OCP
JSD
ONBS
normalized time
normalized time
normalized time
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
−1.5
−1
−0.5
0
0.5
1
1.5
Fig. 4. Path parameter s, velocity ˙s, acceleration ¨s (ϕ = π/2)

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
203
normalized time
normalized time
normalized time
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
Fig. 5. Normalized joint positions q (ϕ = π/2)
normalized time
normalized time
normalized time
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
Fig. 6. Normalized joint velocities ˙q (ϕ = π/2)
normalized time
normalized time
normalized time
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
0
0.2
0.4
0.6
0.8
1
−1
−0.8
−0.6
−0.4
−0.2
0
0.2
0.4
0.6
0.8
1
Fig. 7. Normalized motor torques Q (ϕ = π/2)
can be regarded as a characteristic property of ONBS results and is not unique
to the particular choice ϕ = π/2.
The resulting trajectories satisfy the constraints posed in (23b)–(23k) and
provide a minimum for tf. It can be seen in Fig. 7, that at all times, at least two
of the constrained joint velocities or joint torques are saturated, which is one

204
A. Reiter et al.
x in m
y in m
0
0.5
1
1.5
2
−1
−0.5
0
0.5
1
Fig. 8. Time evolution along the path with ϕ = π/2 (10 snapshots equally distributed
in time), trajectory obtained using ONBS
of the characteristics of a minimum-time property of the obtained trajectories.
However, this minimum is only local as the NLP is non-convex. Corresponding
snapshots of the manipulator’s optimal motion are depicted in Fig. 8.
Iteration counts, computation times as well as the resulting trajectory end
times for all slopes ϕ can be obtained from Table 3. It can be seen that the
trajectories obtained using ONBS are faster in most cases. The computation
times of OCP are in general faster, which is due to the simple mathematical
structure of the NLP compared to both IK approaches. The computation times
of JSD and ONBS are comparable. It should be noted that not for all tasks OCP
Table 3. Optimization results for all ϕ
OCP
JSD
ONBS
ϕ
tf/s
#it.
CPU
time/s
tf/s
#it.
CPU
time/s
tf/s
#it.
CPU
time/s
0
2.1264 64
4
2.1305 137
27
2.1109 209
64
π/4
2.4802 43
3
no convergence
2.4692 106
33
π/2
2.4298 52
3
2.4321 102
20
2.3376 120
37
3π/4
1.725
62
4
1.7279 101
20
1.7291 106
32
π
1.7353 97
6
1.6804 142
29
1.9189 90
28
5π/4
2.5303 72
5
2.5609 175
36
1.9463 86
26
3π/2
1.5884 43
3
1.5917 93
19
1.5881 89
27
7π/4
no convergence
1.1577 60
12
1.1589 84
23

On Redundancy Resolution in Minimum-Time Trajectory Planning . . .
205
and JSD converged whereas ONBS yielded a valid solution in all cases. ONBS
can be regarded as a more robust approach than OCP or JSD.
5
Conclusion
Based on [15], the present work introduces a method for computing an optimal
solution of the IK in time-optimal path following problems concerning kinemat-
ically redundant manipulators. Therein, the IK is computed such that it fully
exploits redundancy in an optimal way w.r.t. the goal of the trajectory optimiza-
tion problem, i.e. minimum time. It is discussed that this method is valuable for
robots with multiple redundant degrees of freedom.
In the example section of this contribution, the method was successfully
applied to a planar manipulator with two redundant joints moving its EE along
prescribed straight line paths. The optimization results as well as the required
computational eﬀort were compared with those of a standard OCP and another
IK-based approach, namely JSD.
In other works, e.g. [16], the proposed method in this contribution was applied
a spatial example, also incorporating prescribed orientations.
Future research will work towards alleviating the greatest drawback of ONBS,
i.e. the high computational burden. Regarding the implementation, the multi-
ple shooting method from Sect. 4.4 can be reﬁned to use non-uniform shooting
intervals to be included as decision variables instead using uniform time intervals
and only varying tf. This would allow for local adjustment of the time resolution
and will yield a purely blockdiagonal structure in the Jacobian of constraints,
cf. Fig. 2.
Acknowledgements. This work has been supported by the Austrian COMET-K2
program of the Linz Center of Mechatronics (LCM), and was funded by the Austrian
federal government and the federal state of Upper Austria.
References
1. Andersson, J.: A general-purpose software framework for dynamic optimization.
Ph.D. thesis, Arenberg Doctoral School, KU Leuven (2013)
2. Bobrow, J., Dubowsky, S., Gibson, J.: Time-optimal control of robotic manipula-
tors along speciﬁed paths. Int. J. Robot. Res. 4(3), 3–17 (1985)
3. Bock, H.G., Plitt, K.J.: A multiple shooting algorithm for direct solution of opti-
mal control problems. In: Proceedings of the IFAC World Congress, pp. 242–247.
Pergamon Press (1984)
4. Bremer, H.: Elastic Multibody Dynamics. Springer (2008)
5. Chiacchio, P.: Exploiting redundancy in minimum-time path following robot con-
trol. In: Proceedings of the American Control Conference, pp. 2313–2318 (1990)
6. Conkur, E.S., Buckingham, R.: Clarifying the deﬁnition of redundancy as used in
robotics. Robotica 15, 583–586 (1997)
7. Galicki, M.: Time-optimal controls of kinematically redundant manipulators with
geometric constraints. IEEE Trans. Robot. Autom. 16(1), 89–93 (2000)

206
A. Reiter et al.
8. Khatib, O.: Augmented object and reduced eﬀective inertia in robot systems. In:
American Control Conference 1988, pp. 2140–2147. IEEE (1988)
9. Li´egeois, A.: Automatic supervisory control of the conﬁguration and behavior of
multibody mechanisms. IEEE Trans. Syst. Man Cybern. 12, 868–871 (1977)
10. Ma, S., Watanabe, M.: Time optimal path-tracking control of kinematically redun-
dant manipulators. JSME Int. J. 47(2), 582–590 (2004)
11. Nakamura, Y.: Advanced Robotics. Redundancy and Optimization. Addison-
Wesley Publishing (1991)
12. Nakamura, Y., Hanafusa, H., Yoshikawa, T.: Task-priority based redundancy con-
trol of robot manipulators. Int. J. Robot. Res. 6(2), 3–15 (1987)
13. Pfeiﬀer, F., Johanni, R.: A concept for manipulator trajectory planning. In: Inter-
national Conference on Robotics and Automation, pp. 1399–1405. IEEE (1986)
14. Pham, Q.-C.: A general, fast, and robust implementation of the time-optimal path
parameterization algorithm. IEEE Trans. Robot. 30(6), 1533–1540 (2014)
15. Reiter, A., Gattringer, H., M¨uller, A.: Redundancy resolution in minimum-time
path tracking of robotic manipulators. In: 13th International Conference on Infor-
matics in Control, Automation and Robotics (2016)
16. Reiter, A., M¨uller, A., Gattringer, H.: Inverse kinematics in minimum-time trajec-
tory planning for kinematically redundant manipulators. In: Conference of IEEE
Industrial Electronics Society (2016)
17. Shin, K., McKay, N.: Minimum-time control of robotic manipulators with geomet-
ric path constraints. IEEE Trans. Autom. Control 30(6), 531–541 (1985)
18. Springer, K., Gattringer, H., Staufer, P.: On time-optimal trajectory planning for
a ﬂexible link robot. J. Syst. Control Eng. 227(10), 751–762 (2013)
19. Wampler, C.: Inverse kinematic functions for redundant manipulators. In: IEEE
International Conference on Robotics and Automation, pp. 610–617 (1987)
20. Whitney, D.E.: Resolved motion rate control of manipulators and human prosthe-
ses. IEEE Trans. Man-Mach. Syst. 10(2), 47–53 (1969)
21. Yoshikawa, T.: Dynamic manipulability of robot manipulators. In: IEEE Interna-
tional Conference on Robotics and Automation, vol. 2, pp. 1033–1038 (1985)
22. Yoshikawa, T.: Manipulability of robotic mechanisms. Int. J. Robot. Res. 4(2), 3–9
(1985)

Parameter Identiﬁcation and Model-Based
Control of Redundantly Actuated,
Non-holonomic, Omnidirectional Vehicles
Christoph St¨oger(B), Andreas M¨uller, and Hubert Gattringer
Institute of Robotics, Johannes Kepler University, Altenberger Straße 69, 4040 Linz,
Austria
christoph.stoeger@jku.at
Abstract. Vehicles with centered orientable standard wheels are known
to be omnidirectional and precise in their motion. The common decen-
tralized strategy to control the driving velocities and wheel orientations
leads to unnecessary high torques, an increased energy consumption as
well as additional slippage due to the redundant actuation. This paper
introduces a novel model-based control concept that overcomes these.
It uses a minimal set of control variables within a PD control law to
avoid counteractions. An additional inverse dynamics solution comple-
ments the control and further reduces slippage. The resulting generalized
torque demand is optimal distributed among the drives. The paper addi-
tionally shows how the control performance can be further improved by
an additional experiment which identify the inertia parameters of the
vehicle. The overall approach is at the end validated by some experi-
ments.
Keywords: Dynamic modeling and control · Parameter identiﬁcation ·
Redundant actuation · Pseudo-omnidirectional drives
1
Introduction
Mobile robots are already widely used in service robotics and manufacturing.
The applications are manifold but the majority is still used for transportation
purposes. A seemingly simple task that can, however, become arbitrarily com-
plex given the demand from industry for compact and cost-eﬃcient shop ﬂoor
solutions. A result is that a precise locomotion with a mobile base oﬀering the
maximum degree of maneuverability i.e. δM [3], δM = 3, is ever more relevant.
Vehicles with δM = 3 are called omnidirectional since they are able to move
in each direction and independently change their orientation to this motion.
Holonomic omnidirectional vehicles, equipped with n ≥3 Mecanum or Swedish
wheels, are the most popular type of this class. They need a small number
of actuators, since they do not need to steer, and are easy to control. However,
Mecanum wheels possess poor load capacities compared to (non-holonomic) stan-
dard wheels, they additionally introduce vibrations to the actuators and chassis,
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_11

208
C. St¨oger et al.
and lead to higher slippage. Platforms with n ≥2 centered orientable stan-
dard wheels overcome these problems. Center orientable wheels can be steered
about the vertical axis passing through the wheel center. Such platforms are
omnidirectional as well but non-holonomic, i.e. they are able to independently
change position and orientation but may have to reorient their wheels before. For
this reason they are often called pseudo-omnidirectional. The number of driven
wheels depends on the transporter size and/or payload, and is often higher than
2. The rolling motors are driving the chassis in parallel, which means that the
vehicle is not only non-holonomic but also redundantly actuated.
Several publications can be found about the higher-level kinematic control
of such vehicles [5,13,16]. They compute a feasible motion for the locomotion
system which allows the chassis to move to a desired destination. However, there
is hardly any lower-level dynamic control scheme reported in the literature which
stabilizes the achieved motion along this trajectory. It is often indicated that a
simple, decentralized PD controller is used that controls the motion of each wheel
independently. Such a control neither takes the dynamics of the vehicle into
account, nor the redundancy of the actuation. Considerable errors in dynamic
phases and unnecessary high torques due to the actuator counteraction, which
again lead to slip, are the results. This reduces both the up-time of the vehicle
as well as the positioning accuracy.
An alternative to PD controllers is given by sliding mode controllers, see
[8,19]. They are often used to control vehicles with a variable load. The authors
of [8] apply the theory to pseudo-omnidirectional vehicles but again neglect the
redundancy of the actuation. The control is robust to model uncertainties but
due to the chatter of the input torques leads to an increased slippage. Our
approach will therefore focus on PD control structures instead of sliding mode
controllers.
Methods for the PD control of redundantly actuated systems can be found
in the ﬁeld of parallel mechanisms, see [10]. They are adapted in this work to
the needs of mobile robots.
The authors of [8,15] increase the performance of their control strategy by
adding an inverse dynamics based feed forward control. However, the former work
neglects traction forces and the latter the wheel dynamics which both results in
considerable modeling errors. Such models can still be found in the literature
since they bypass the resolution of the singular rolling constraints. Therefore a
novel model is presented in this paper which is redundantly parametrized in order
to result also in singular regions in a valid description. This model is afterward
used for building up an inverse dynamics based feed forward controller. The
redundant parametrization results in additional constraining forces acting on
the model. To eliminate them, the model is projected in unconstrained directions
during runtime using an orthogonal complement [10] of the constraint matrix.
The complement is computed by a novel and computationally eﬃcient semi-
analytic orthogonalization method which takes the structure of the constraints
into account.

Parameter Identiﬁcation and Model-Based Control . . .
209
The idea of this control strategy was originally presented in [17]. This article,
however, goes into greater detail and additionally shows how the performance of
the control strategy can be improved by identifying the inertial parameters of the
underlying model. The identiﬁcation method reformulate the equations of motion
linear w.r.t. a selected set of independent identiﬁable parameters. Afterward a
trajectory is designed which optimally excites the inertia parameters in order to
reduce the variance of the resulting estimation.
The paper is organized as follows. In Sect. 2 the platforms kinematics is
described. In Sect. 3 the redundantly parametrized equations of motion are
derived and an overview about the modeled eﬀects is given. In Sect. 4 the feed
forward control is presented together with the torque distribution. Subsequently,
the control concept is formulated and its asymptotic stabilization is proven. In
Sect. 5 the estimation process of the model parameters is presented. The paper
closes with experiments in Sect. 6 that validate the control concept. A short
summary and some remarks for future research are given in Sect. 7.
2
Platform Kinematics
The current conﬁguration of the platform, see Fig. 1, is parametrized using two
sets of variables [14]. The ﬁrst set describe the vehicle’s posture, i.e. displacement
of the chassis-ﬁxed frame FC = {OC, Cx, Cy} relative to an inertial frame FI =
{OI, Ix, Iy}.
Assumption 1. The motion is assumed to be restricted to the horizontal plane.
With Assumption 1 the chassis pose is parametrized using qC = (x, y, γ)T ∈
SE(2). The vector (x, y) ∈R2 describes the reference point OC in the frame FI
and γ ∈S1 is the angle enclosed by Ix and Cx.
The second set of variables are called shape or internal variables. They
describe the conﬁguration of the locomotion system and are given by n roll
Ix
Iy
Cx
Cy
Wix
Wiy
OI
OC
OWi
chassis
ϕsi
ϕri
x y
γ
li
ϕ0i
Fig. 1. Pseudo-omnidirectional vehicle with n = 4 centered orientable wheels

210
C. St¨oger et al.
angles ϕri and n steer angles ϕsi, with i ∈{1, . . . n}. They are summarized in
qϕ = (ϕr1, . . . ϕrn, ϕs1, . . . ϕsn)T ∈T 2 n.
(1)
Here T 2 n is the 2 n dimensional torus. For later use, additional frames FWi =
{OWi, Wix, Wiy} are attached at each drive unit.
The conﬁguration of the mobile platform is thus described by the vector of
generalized coordinates
q = (qT
C, qT
ϕ )T ∈Q = SE(2) × T 2 n.
(2)
Although ideal rolling is a simpliﬁcation we can use this concept within the
control in order to minimize the resulting slippage and model counteractions.
Ideal rolling means that the longitudinal velocity (Wix direction) of a certain
wheel i is consistent with its rolling speed, i.e.
cos(ϕsi + γ) ˙x + sin(ϕsi + γ) ˙y + li sin(ϕsi −ϕ0 i)˙γ −r ˙ϕri = 0,
(3)
and the lateral velocity (Wiy direction) is zero, i.e.
−sin(ϕsi + γ) ˙x + cos(ϕsi + γ) ˙y + li cos(ϕsi −ϕ0 i)˙γ = 0.
(4)
The polar coordinates li and ϕ0 i describe the position of the ith wheel OWi
observed from FC, see Fig. 1. The following properties directly follow from the
rolling constraints, see Eqs. (3) and (4):
Property 1. The constraints can be written in Pfaﬃan form, i.e. linear in
velocities, as
cos(ϕs1 + γ)
sin(ϕs1 + γ) l1 sin(ϕs1 −ϕ01) −r 0 . . . 0 0 . . . 0
...
...
...
...
...
...
cos(ϕsn + γ)
sin(ϕsn + γ) ln sin(ϕsn −ϕ0n)
0 . . . 0 −r 0 . . . 0
−sin(ϕs1 + γ) cos(ϕs1 + γ) l1 cos(ϕs1 −ϕ01)
0 . . . . . . 0 0 . . . 0
...
...
...
...
...
...
...
−sin(ϕsn + γ) cos(ϕsn + γ) ln cos(ϕsn −ϕ0n) 0 . . . . . . 0 0 . . . 0



=:J (q)
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
˙x
˙y
˙γ
˙ϕr1
...
...
˙ϕrn
˙ϕs1
...
˙ϕsn
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠



˙q
= 0.
Property 2. The n steering velocities ˙ϕsi are unconstrained. Hence, the corre-
sponding columns of J(q) are zero.

Parameter Identiﬁcation and Model-Based Control . . .
211
The rank m of J(q) ∈R2n,3+2n determines the number of independent con-
straints. Hence, the number of independent velocities respecting the constraints,
also referred to as generalized velocities, is
δv = 3 + 2 n −m.
(5)
Another interesting property is that the n lateral constraints (4) only restrict
the chassis twist ( ˙x, ˙y, ˙γ). By considering the corresponding rows in J, one can
easily proof the following property.
Property 3. The number and set of independent lateral constraints depends on
the steering angles and is between 1 and 3.
The minimum diﬀerential DOF, i.e. the minimum number of generalized veloci-
ties, is δv = 3 + 2n −(n + 3) = n. Referring to Property 2, they are given by the
unconstrained steering angles. That is, in the worst case, the vehicle is only able
to reorient the wheels. A motion of the chassis is only possible if the rank of the
constraints is reduced, i.e. the vehicle is in a singular conﬁguration. Singularities
allow the chassis to perform arbitrary fast rotation about one particular point,
the so called instantaneous center of rotation (ICR). Some wheel setups, espe-
cially for n = 2 wheels, permit the alignment of each lateral wheel direction. In
such a conﬁguration, the number m of independent constraints further decreases.
Such conﬁgurations allow the vehicle to rotate about an arbitrary point on the
line speciﬁed by the wheel axes without the need of steering. This is summarized
by the following property.
Property 4. During the motion of the chassis the constraint matrix J(q) is
either permanently singular or can become singular. The number of generalized
velocities during the motion is δv ∈{n + 1, n + 2}.
3
Dynamic Modeling
3.1
Redundantly Parametrized Equations of Motion
The equations of motion are derived using the Projection Equations
N

b=1

∂RvT
c,b
∂˙q
∂RωT
b
∂˙q
 
R ˙pc,b + R ωIR Rpc,b −Rf c,b
R ˙Lb + R ωIR RLb −Rτ b

= 0.
(6)
This method is based on the Newton–Euler equations for body b, that are eval-
uated in a reference frame FR, are projected onto the eﬀective direction of the
generalized coordinates q. Here Rpc,b = mbRvc,b represents the linear momen-
tum of the center of mass (index c) of body b. RLb = RΘb Rωb in turn is the
angular momentum, and Rvc,b and Rωb are corresponding translational and
angular velocities. ω is a skew symmetric matrix representing the cross product,
i.e. ωp = ω × p. Rf c,b and Rτ b are forces and torques acting on the center of

212
C. St¨oger et al.
mass, respectively. Equation (6) is used to model inertia eﬀects, the inﬂuence of
traction and friction forces as well as motor torques.
Inertia eﬀects are considered for N = 2 n+1 bodies including the chassis (c),
and n drive units which are composed of:
• n steer motors (index si), that are mounted on the chassis and rigidly coupled
with a drive unit
• n drive motors (index ri), that are mounted on the drive unit and rigidly
coupled with the wheel.
The velocities of the chassis are given by
cvc,c =

˙x cos(γ) + ˙y sin(γ) −˙x sin(γ) + ˙y cos(γ) 0
	T
and
cωc
=

0 0 ˙γ
	T .
The velocities of the steering axes and the rolling wheels can be computed to
Wivc,si = Wivc,ri =
⎛
⎝
˙x cos(γ + ϕsi) + ˙y sin(γ + ϕsi) + li sin(ϕsi −ϕ0i)˙γ
−˙x sin(γ + ϕsi) + ˙y cos(γ + ϕsi) + li cos(ϕsi −ϕ0i)˙γ
0
⎞
⎠,
Wiωsi =

0 0 ˙γ + ˙ϕsi
	T
and
Wiωri =

0 ˙ϕri ˙γ + ˙ϕsi
	T .
All vectors are expressed in FWi (Fig. 1). It is assumed that the center of mass
of the drive unit coincides with the steering axis OWi.
There are two kinds of friction sources. The ﬁrst kind is bearing friction. It
is commonly modeled as a viscous and Coulomb friction using a static model
[2]. The model is computationally inexpensive and linear w.r.t. the parameters
which simpliﬁes the identiﬁcation of these parameters. The second kind of friction
source is the tire/soil contact. The generalized torque Qt corresponding to the
traction forces can be formulated in terms of the constraints (3) and (4)
Qt = JT λ,
(7)
with the Lagrange multipliers λ ∈R2n. In addition to traction, the ground
contact model should also take the rolling resistance into account. It is caused
by elastic deformation of tire and soil, and can again be modeled (within a
certain velocity range) by a Coulomb and viscous friction model [6]. The applied
driving (r) and steering (s) torques are given by
Wiτ si =

0 0 1
	T (usi −μscisign( ˙ϕsi) −μsvi ˙ϕsi)
(8)
Wiτ ri =

0 1 0
	T (uri −μrcisign( ˙ϕri) −μrvi ˙ϕri) ,
(9)
where μ are friction coeﬃcients for the Coulomb (c) and viscous (v) friction, usi
is the steering torque and uri the rolling torque, respectively. The discontinuous
sign(x) function leads to chattering about zero velocity. In order to avoid that,
this function is replaced in the control law by the smooth tanh(x/ϵ) function.
The parameter ϵ is used to determine the region where the force is reduced due

Parameter Identiﬁcation and Model-Based Control . . .
213
to low speeds. The value of ϵ depends on the application. In the experiment it
was set to 0.01 rad/s, which corresponds to a driving speed of ≈1 mm/s for the
considered system.
The dynamics of the non-holonomic, omnidirectional vehicle can be expressed
by the system of diﬀerential algebraic equations
M(q)¨q + C(q, ˙q) ˙q + f( ˙q) = B(q)u + J(q)T λ
(10a)
J(q) ˙q = 0.
(10b)
Where M ∈R2n+3,2n+3 is the generalized inertia matrix, C ˙q ∈R2n+3 includes
Coriolis and centrifugal forces, f
∈R2n+3 Coulomb and viscous friction,
u =

ur1, . . . urn, us1, . . . usn
	
∈R2n, and B ∈R2n+3,2n are the input torques
and mapping, and JT λ the generalized constraining forces acting on the system.
Assumption 2. It is assumed that each wheel is fully actuated, i.e. each wheel
has a steering and driving motor.
Then, the input matrix has the following structure
B =

Br 0n+3,n
0n,n
In,n

(11)
where 0i,j ∈Ri,j is a zero matrix, In,n ∈Rn,n an identity matrix and
Br =

03,n
In,n

.
(12)
The dimensions slightly change for vehicles where this is not the case but the
method is still valid.
3.2
Elimination of Constraint Forces
Equation (10) form a diﬀerential algebraic system. Their evaluation requires the
determination of the Lagrange multipliers λ. The high expense of this compu-
tation is in particular problematic since the model should be used within the
feed forward control in realtime [10]. Therefore, the constraint reactions are not
computed but eliminated instead. This is commonly done by reformulating the
equations of motion in terms of a set of generalized velocities that form a basis
for locally admissible velocities. However, because of the singular constraints
it is hard to ﬁnd a closed form solution for such velocities. As a consequence,
a conﬁguration dependent set of generalized velocities is often used. But this
strategy is again computationally expensive and leads to issues during the tran-
sition between the corresponding models which can be avoided by the following
approach.
The authors in [10] suggest to use one redundantly parametrized model, as
(10), and eliminate the constraining forces by projecting the equations of motion

214
C. St¨oger et al.
with a orthogonal complement N of the constraint matrix J. N is not unique.
The only requirements are
JN = 0,
(13)
and rank(N) = δv, i.e. N does not eliminate forces acting in admissible direc-
tions. Projecting (10) leads to
N T (M ¨q + C ˙q + f) = N T B
  
=:B
u.
(14)
There are two methods proposed in [10] for the analytic computation of N.
Both, however assume regular constraints and, as a consequence of Property 4,
are not directly applicable. We are using instead a tailored, semi-analytical app-
roach for the computation which is composed of an analytical and a numerical
step. In the analytical step Property 2 is used to determine n columns of N. The
columns k ∈{4+n, . . . 3+2n}, corresponding to the steering velocities, of J are
zero. Hence, unit vectors ek, which are zero but have 1 at the kth component,
lie in the null space of the constraint Jacobian, i.e. Jek = 0. Hence, the full rank
matrix
N a =
0n+3,n
In,n

(15)
satisﬁes J(q)N a = 0. This provides n columns of N.
The remaining δv −n null space directions are computed in the numerical
step of the algorithm. Numerical methods for computing null space directions
are mostly based on a singular value or full QR decomposition. These algo-
rithms, however, compute a basis for both, the n + 2 (or n + 1) constrained
and the remaining 1 (or 2) unconstrained (null space) directions. Hence, they
would add an unnecessary computational eﬀort to the methodology. A method
which avoids this is sketched in Algorithm 1. It is inspired by the Gram-Schmidt
orthogonalization [1].
The algorithm determines a non-trivial vector ˙qr, which is orthogonal to the
constrained directions j, where j are transposed rows of J and hence again
fulﬁlls J ˙qr = 0. The computation starts with ˙q = e1 = (1, 0, . . . 0)T which
correspond to a pure translation in the x-direction of frame FI, see also Fig. 1
and (2). The rolling constraints are obviously violated since the chassis moves
without rotating the wheels. However, since the column space of JT and the
allowed directions form an orthogonal complement, this vector can always be
split into an admissible component and a component in the constrained direc-
tions j. The constrained components are removed in the elimination directions
phase by means of a vector projection. This reveal whether there is a motion
possible which drives the chassis in the x-direction. If not, the y-direction or
ﬁnally a pure rotation is tried. The algorithm still works in the case of aligned
wheel axes, i.e. 2 missing vectors. The only adaption which has to be made is
to continue searching after one direction is computed and additionally remove
former found directions from the current considered motion. The computation
is simple and eﬃcient. The used projections consists only of simple arithmetical

Parameter Identiﬁcation and Model-Based Control . . .
215
Algorithm 1: Gram-Schmidt inspired projection method for the null space com-
putation (from [17]). ∥·∥is the Euclidean vector norm.
1 Function compute remaining null space vectors
input : Constraint matrix J
output: Remaining null space directions N n
2
K = [J T ], Nn = [ ], i = 1;
3
δv = n;
4
for i = 1, . . . 3 do
5
˙q = ei;
6
i = i + 1;
7
eliminate directions( ˙q, K);
8
if
∥˙q∥> ϵ then
9
˙q = ˙q/∥˙q∥;
10
N n = [N n, ˙q];
11
δv = δv + 1;
12
K = [K, ˙q];
13
end
14
end
15 end
16 Function eliminate directions
input : ˙q vector under consideration, K column vectors represent
directions which should be eliminated
output: ˙q: remaining components of ˙q
17
k = 1;
18
repeat
19
j = column(K, k);
20
k = k + 1;
21
˙q = ˙q −

˙qT j
∥j∥2

j
22
until ∥˙q∥< ϵ or k >nr of columns(K);
23 end
operations and the number of projections is in each case limited to 6 n. J has
only zero columns in the last n entries, thus the result has the following structure
N n =

N r
0n,δv−n

(16)
where N r ∈Rn+3,δv−n is computed by this algorithm, so that the columns of
N r are orthonormal.
Combining the analytical N a and numerical N n null space bases ﬁnally
result in
N =
N n N a

=

N r
0n+3,n
0n,δv−n
In,n

.
(17)
Property 5. The columns of the null space projection matrix N are orthonor-
mal. Hence the left inverse of N is given by its transposed.

216
C. St¨oger et al.
4
Model-Based Control
4.1
Inverse Dynamics and Redundancy Resolution
At this point the inverse dynamics can be computed by evaluating (14) with a
desired motion qd(t)
N T M ¨qd + N T C ˙qd + N T f = Qd = B uID,
(18)
which determines the required generalized forces Qd. Resolving the last equation
in (18) yields the inverse dynamics solution uID. The computational eﬀort of this
task can be signiﬁcantly reduced if the structure of B, see (11), (14) and (17),
is taken into account:

N T
r Br 0δv−n,n
0n,n
In,n
 ur
us

=
Qr,d
Qs,d

.
(19)
The special choice of N decouples the driving ur and steering us torques. The
latter are directly given by the last n elements Qs,d of the generalized torques
Qd.
The driving torques must be computed by the remaining equations
Brur = Qr,d.
(20)
By investigating the dimensions of the projected input matrix Br = N T
r Br ∈
Rδv−n,n, where δv −n is in general 1 or 2, it immediately follows that there
exists an arbitrary large number of solutions ur. The system is therefore called
redundantly actuated. To resolve this redundancy, this solution is chosen that
minimizes the following quadratic cost function [9]
u∗
r = arg min
ur
1
2uT
r W ur
(21a)
s.t.
Br ur = Qr,d,
(21b)
with a positive deﬁnite weight matrix W ∈Rn,n. The cost function ensures that
only a minimal amount of torque is used to provide Qr,d. The distribution of this
demand can be inﬂuenced by choosing a proper weight matrix. In our approach
the following diagonal matrix is used
W = diag
1/u2
r,max1, . . . 1/u2
r,maxn
	
,
(22)
whereby ur,max i are the maximum torques w.r.t. the motor and friction limi-
tations. The latter is approximated by the stall torques, that is the maximum
torque which can be applied to a single wheel, while accelerating the chassis
against a stop, that does not result in slippage. They are determined by experi-
ments and should include frictional diﬀerences due to an unbalanced load in the
torque distribution.

Parameter Identiﬁcation and Model-Based Control . . .
217
The solution of (21) is given by
ur = W −1B
T
r

BrW −1B
T
r
−1



=: B
+
r
Qr,d.
(23)
where B
+
r is a right inverse of Br, i.e. BrB
+
r = In,n.
Summarizing, the inverse dynamics yields
uID = B
+Qd,
(24)
with the right inverse
B
+ =

B
+
r
0l−n,n
0n,n+3
In,n

(25)
of the projected input matrix B.
4.2
Augmented PD-Control
The inverse dynamics (24) provides the torque needed to follow a given desired
motion qd. However, there is no feedback stabilization mechanism in this feed
forward law. Thus, model uncertainties and disturbances will inevitably lead to
signiﬁcant errors. The classical approach to eliminate these errors is a decentral-
ized strategy which independently controls the 2n actuated degrees of freedom
uri = Pr
 t
0
( ˙ϕri,d −˙ϕri) dτ + Dr( ˙ϕri,d −˙ϕri)
usi = Ps (ϕsi,d −ϕsi) + Ds( ˙ϕsi,d −˙ϕsi).
(26)
The rolling constraints instantaneously only admit δv ∈{n + 1, n + 2} indepen-
dent velocities, hence application of the feedback control law generally causes a
counteraction of the control torques.
Our approach resolves this problem by a centralized model-based control law
uAPD = B
+ 
N T (M ¨qd + C ˙qd + f) + Dev + P ep

.
(27)
The system matrices and vectors M, C, f are evaluated by the vehicles current
pose/velocity. The arguments of them are suppressed due to the lack of space.
D, P ∈Rδv,δv are positive deﬁnite gain matrices. The idea behind (27) is to use
the projected velocity error and its integral
ev = N T ( ˙qd −˙q)
ep =
 t
0
evdτ
(28)
instead of the individual velocity errors. Hence, no counteractions appear since
the number of control variables is equal to the number of diﬀerential degrees of

218
C. St¨oger et al.
freedom. This is an important point as discussed in [7]. The total torque amount
is ﬁnally again distributed in a minimal fashion over the existing drives.
In the following it is proven that (27) achieves asymptotically stable tracking
of the desired motion ˙qd. It is therefore assumed that the desired velocity ˙qd is
provided by a higher-level controller and respects the constraints. Application of
(14)–(27) and project to the unconstrained subspace, the closed loop dynamic
equations can be formulated as follows
N T M(¨qd −¨q) + N T C( ˙qd −˙q) + Dev + P ep = 0.
(29)
Moreover, ˙q and ˙qd respect the constraints. Hence, their diﬀerence is again
compatible with the constraints and can be expressed by v1, v2 in terms of a
linear combination of the null space basis N
˙qd −˙q = Nv1 −Nv2 = Nev.
(30)
It follows from Property 5 and Eq. (28) that ev = v1 −v2. Inserting (30) in (29),
yields the following error system
M ˙ev + Cev + Dev + P ep = 0
(31)
with the projected system matrices M = N T MN and C = N T M ˙N +
N T CN. The stability can be proven by introducing the following Lyapunov
function
V = 1
2eT
v Mev + 1
2eT
p P ep.
(32)
Diﬀerentiating V w.r.t. time yields
˙V = 1
2eT
v

M −2C
	
ev −eT
v Dev = −eT
v Dev ≤0.
(33)
Thereby, the following properties are used:
Property 6. M is positive deﬁnite,
Property 7.
˙M −2C is skew symmetric.
The proof of them can be found in [11]. Referring to the Krasovskii-LaSalle
invariance principle, for a positive deﬁnite function V > 0 with a negative semi-
deﬁnite derivative ˙V ≤0, the state converges to a rest position in the subset
of ˙V = 0. The only rest position of (31) in this subset is (ev(t), ep(t)) = (0, 0)
which proves the asymptotic stabilization of the control law.
5
Parameter Identiﬁcation
Unknown or only roughly estimated parameters often limit the performance of
a model-based control. The identiﬁcation of model parameters is thereby often
mandatory. Identiﬁcation methods found in the literature [12] follow mainly three

Parameter Identiﬁcation and Model-Based Control . . .
219
steps. In the ﬁrst step a set of unknown parameters is speciﬁed. These parameters
cannot be measured directly in the most cases. Therefore additional mappings
has to be formulated which connect the measurements with the parameters. In
the second step a trajectory is planned which excite the parameters as best as
possible in order to make them visible within the measurements. In the third
and ﬁnal step the experiment is performed and the parameters estimated.
5.1
Parameter Speciﬁcation and Model Reformulation
It is assumed that the geometry of the vehicle is perfectly known and only the
inertia and friction coeﬃcients have to be estimated. The inverse dynamics is
in general a non-linear function of these parameters. However, strategies exist
[12] which simplify the identiﬁcation by reformulating the equations of motion
as equation that are linear in the unknown parameters.
The reformulation starts with expressing the velocity of the center of mass
Rvc,b = Rvo,b + RωIR Rroc,b
(34)
of body b as a function of the velocity of a geometrically known reference point
vo,b and the unknown vector between these two points
Rroc,b =

xb yb zb
	T .
(35)
Velocities Rvo,b(q, ˙q) and RωIR(q, ˙q) can be computed using odometry measure-
ments and kinematic relationships.
Assumption 3. The reference point o and frame R are attached to the corre-
sponding body b.
Assumption 3 is introduced to reduce the complexity of the resulting equations.
Inserting (34) in (6) results
N

b=1

∂vT
o,b
∂˙q
∂ωT
b
∂˙q
 
mbI3,3 mbrT
oc,b
mbroc,b
Θo
b
  ˙vo,b
˙ωb

+

mb ωb
mb ωbrT
oc,b
mbroc,b ωb
ωbΘo
b
 vo,b
ωb

(36)
= Q.
The generalized torques Q represent forces and torques acting on the bodies.
Note that for the sake of simplicity the left index R, specifying the coordinate
frame, is omitted. The inertia tensor
Θo
b = Θc
b + mbroc,brT
oc,b =
⎡
⎣
Ab −Fb −Eb
−Fb
Bb −Db
−Eb −Db
Cb
⎤
⎦
(37)
corresponds to the inertia against rotating body b about reference point o. The
moments of deviation (Db, Eb, Fb) are neglected for the sake of simplicity. Note
that in (36) all parameters
pmb =

mb mbxb mbyb mbzb Ab Bb Cb
	T ∈R7
(38)

220
C. St¨oger et al.
appear linearly. Moreover, pmb consists of all unknown inertia parameters. Equa-
tion (36) can be reformulated, see [12] for details, in the following, parameter
linear form
N

b=1

∂vT
o,b
∂˙q
∂ωT
b
∂˙q
 
˙vo,b + ωbvo,b
˙ωb + ωbωb
0
0
−( ˙vo,b + ωbvo,b)
˙Ω + ωbΩ




=:Φmb
pmb = Q,
(39)
with diagonal matrix Ω = diag(ωb).
A similar strategy can be applied to (7) and (9) in order to reformulate the
forces and torques acting on the system
Q = Bu + J T λ +
n

i=1
−∂Wiωsi
∂˙q
T
⎛
⎜
⎜
⎝
0
0
1
⎞
⎟
⎟
⎠
	
tanh
	 ˙ϕsi
ϵ

˙ϕsi




=:Φsi
psi
−∂Wiωri
∂˙q
T
⎛
⎜
⎜
⎝
0
1
0
⎞
⎟
⎟
⎠
	
tanh
	 ˙ϕri
ϵ

˙ϕri




=:Φri
pri
(40)
with friction coeﬃcients psi =
μsci μsvi
	T and pri =
μrci μrvi
	T .
Combining (39) and (40) ﬁnally yields
Φm1 . . . ΦmN Φs1 . . . Φsn Φr1 . . . Φrn




=:Φ
p = Bu + JT λ
(41)
with the vector of unknown dynamic parameters
p =

pT
m1 . . . pT
mN pT
s1 . . . pT
sn pT
r1 . . . pT
rn
	T ∈R18n+7.
(42)
Both Φ and Bu can be computed using geometry information and odometry and
torque measurements. However, the traction forces are not measured. Hence, the
corresponding Lagrange multipliers are unknown. They can again be eliminate
using the nullspace projector leading to ¯Φp = ¯Bu, with the projected regression
¯Φ = N T Φ and input matrix ¯B = N T B. Finally, this equation is extended by
the modeling and measurement error ep
ep = ¯Φp −¯Bu.
(43)
5.2
Base Parameters and Trajectory Optimization
The idea behind the parameter estimation is to ﬁnd parameters ˆp that mini-
mizes ep. Some parameters are not (independently) identiﬁable in the context
of (43). This means that they either do not appear in (43) (zero column in ¯Φ),
or their eﬀect on ep is not unique (columns are linear dependent). The set of
unidentiﬁable parameters p2 can be identiﬁed using a QR decomposition of the
projected regression matrix, see [12] for details. With the set of remainders, the
identiﬁable parameters p1, (43) can be regularized to
ep = ¯ΦBp1 + ¯ΦBκp2 −¯Bu = ¯ΦBpB −¯Bu
(44)

Parameter Identiﬁcation and Model-Based Control . . .
221
with the vector of (independently identiﬁable) base parameters pB = p1 + κp2.
To ensure a robust estimation, a high number Nm of measurements is used
⎛
⎜
⎝
ep1
...
epNm
⎞
⎟
⎠



=:epm
=
⎡
⎢⎣
¯ΦB(q, ˙q, ¨q)1
...
¯ΦB(q, ˙q,¨q)Nm
⎤
⎥⎦



=: ¯ΦBm
pB −
⎛
⎜
⎝
¯B(q)1u1
...
¯B(q)NmuNm
⎞
⎟
⎠



=: ¯
Bum
.
(45)
The least square solution of
min
pB
1
2eT
pmepm
(46a)
s.t.
epm = ¯ΦBmpB −¯Bum
(46b)
is given by
ˆp =

¯Φ
T
Bm ¯ΦBm




=:H
−1 ¯Φ
T
Bm ¯Bum.
(47)
The quality of the measurements used for evaluating (47) highly inﬂuences the
accuracy of ˆp. It can be shown, see [18], that the variance of ˆp decreases when
the index
w = log (det (H))
(48)
increases. A systematic way to obtain an acceptable value of w is to plan a
trajectory such that this index is maximized
max
qC,bs
w
(49a)
s.t.
ϕs,min ≤ϕs ≤ϕs,max
(49b)
˙ϕmin ≤˙ϕ ≤˙ϕmax
(49c)
umin ≤u ≤umax.
(49d)
The trajectory of the chassis motion qC is thereby formulated as B-spline curve
with a ﬁxed terminal time and parametrized by the vector of B-spline nodes
denoted with qC,bs [4]. For evaluating w, ﬁrst the motion of the locomotion
system is computed on a uniformly distributed time interval such that the con-
straints J ˙q = 0 and its derivative. The motion is afterward inserted into the data
matrix H. The cost function tends to increase the accelerations and velocities.
In order to obtain a feasible motion, the steering angles and velocities, the drive
velocities, and motor torques have to be limited. The latter is roughly estimated
using the inverse dynamics solution evaluated with a priori known or roughly
estimated inertia parameters.
5.3
Estimation Experiment
The considered vehicle is equipped with n = 2 actuated wheels and shown in
Fig. 2. The wheels are diametrically mounted w.r.t the reference point OC. The

222
C. St¨oger et al.
Fig. 2. Non-holonomic omnidirectional manipulator with n = 2 actuated wheels. The
laser scanner marks the front side
front wheel is indexed with i = 1, the rear wheel with i = 2. The driving motors
are DC motors with a maximum torque of 25.6 Nm. They allow for a maximum
driving speed of 4.1 rad/s which equals a linear velocity of ˙ϕri r = 0.41 m/s
assuming a wheel radius r = 0.1 m. The steering motors are brushless DC motors
with a maximum torque of 129 Nm and a maximum steering speed of 195.95◦/s.
With n = 2 steering units the model is described by 43 parameters p. This
number is reduced by neglecting the unknown vector Rroc,b for the steering
units. The corresponding reference point o is placed on the steering axis. The
simpliﬁcation reduces the number of parameters to 31. Subsequently, a set of
NQR = 100 samples is used for the QR decomposition. It further reduces the
number of parameters to 14 base parameters. They are given by pB1 the total
translational inertia of the vehicle including each mass and rolling inertia, pB2/3
the total mass of the vehicle multiplied by the vector between the reference point
of the chassis and the total center of mass, pB4 the total angular inertia of the
chassis, pB5/6 the angular inertia of the steering units, as well as the 8 friction
coeﬃcients pB7...14.
The chassis trajectory is described with a B-spline curve of fourth degree
and parametrized by 60 control points. A solution of (49) is computed using a

Parameter Identiﬁcation and Model-Based Control . . .
223
y in m
x in m
−0.5
0
0.5
−0.8
−0.6
−0.4
−0.2
0
0.2
Fig. 3.
Chassis path used for estimation process with corresponding
chassis
orientations and
trajectory start
Qs1/ max(|Qs1|)
t in s
10
20
30
40
50
−1
−0.5
0
0.5
1
Qr/max(|Qr|)
t in s
10
20
30
40
50
−1
−0.5
0
0.5
1
Fig. 4.
Measured and projected input torque ¯Bu compared with
computed
torque using ˆpB and odometry measurements. The left image compares the ﬁrst gen-
eralized torque (steering torque) and the right ﬁgure shows the generalized torque
corresponding to the rotation speed about the ICR
gradient based active-set solver. The resulting path takes 60 s and is shown in
Fig. 3. It consist of a couple of reversing maneuvers in order to optimally excite
the inertia parameters and still stay within the bounds.
The robot is controlled along this trajectory using (27). Measurements are
taken from the wheel encoders (steering, driving) as well as current sensors. The
torques are computed by multiplying the latter with the corresponding motor
constant. Wheel velocities and accelerations are computed numerically using
a high-pass ﬁlter [12]. The velocity of the chassis is computed by a forward
kinematics considering the wheel velocities. The acceleration is again computed
using numerical diﬀerentiation. The motion is sampled using a sample time of
10 ms. Each of the resulting 6000 data points is used for the resulting parameter
estimation. Selected results of the experiment are imaged in Fig. 4. The model

224
C. St¨oger et al.
Table 1. Selected base parameters
pB1
(pB2, pB3)
pB4
pB5
μrc1
μrv1
μsc1
μsv1
156
kg
(−4.3, −0.3)
kgm
8.32
kgm2
0.08
kgm2
1.12
Nm
0.4
Nms/rad
2.1
Nm
2.7
Nms/rad
as well as estimation ﬁt very well to the measurements. Selected parameters ˆpB
can be found in Table 1.
6
Experimental Results
In this section experimental results of the proposed control method are presented.
For details about the platform see also Sect. 5.3.
Figure 5 visualizes the driven maneuver. It can be divided into two parts. The
ﬁrst part (t = 0 . . . 5s) is a pure rotation by γ = 180 ◦about the reference point
OC. Therefore, the wheel axes have to be aligned, hence it is a motion where the
constraints are singular. In the second part, a mixed motion with translational
and rotational components is done in a regular conﬁguration. The orientation is
chosen to be always tangential to the desired (xd, yd) curve. The corresponding
steering and driving velocities are summarized in Fig. 6. The motion is ﬁrstly
controlled by a classic PD control approach (26) and secondly by the proposed
model-based control (27). A fair comparison between them is ensured by an inde-
pendent optimization of the corresponding control coeﬃcients. The result of this
optimization is summarized in Table 2. The coeﬃcients Pr and Dr corresponds
y in m
x in m
start
0
0.25
0.5
0.75
1
1.25
1.5
1.75
0
0.25
0.5
0.75
1
1.25
1.5
1.75
Fig. 5.
Desired chassis position,
sampled chassis orientation and driving direc-
tion,
points in time ti ∈{0 s, 10 s, 12 s, 16 s, 22 s} (from [17])

Parameter Identiﬁcation and Model-Based Control . . .
225
t in s
0
5
10
15
20
−1
−0.5
0
0.5
1
˙ϕd/ ˙ϕmax
Fig. 6. Driving velocity of
front and
rear wheel normalized by r ˙ϕr,max =0.4m/s,
steering velocity of
front and
rear wheel normalized by ˙ϕs,max =180◦/s (from
[17])
Table 2. Control
coeﬃcients
Symbol
Value
Description
Pr
0.937 Nm/rad
Driving classic
Dr
0.181 Nm s/rad
Driving classic
Pr
0.112 Nm/rad
Driving
model-based
Dr
0.238 Nm s/rad
Driving
model-based
Ps
1.13 Nm/rad
Steering
Ds
0.3 Nm s/rad
Steering
ur,max1
9.6 Nm
Torque weight
front
ur,max2
10.2 Nm
Rear motor
to the error component which is projected by N n while Ps and Ds correspond
to the projection of N a.
Since the steering angles are unconstrained and regularly actuated, both
control concepts result in the same error control laws. Thus, the same control
coeﬃcients can be used. Diﬀerences between the resulting tracking errors, see
Fig. 7, are a result of the inverse dynamics and are apparent in the acceleration
phases t ∈{11, 15, . . . 18}s. There, the model-based control results in a signiﬁ-
cantly lower tracking error. The tracking error of the driving velocities can be
found for the front wheel i = 1 in Fig. 7. Signiﬁcant diﬀerences can again mainly

226
C. St¨oger et al.
t in s
0
5
10
15
20
−40
−20
0
20
40
r(˙ϕr1d −˙ϕr1) in mm/s
(a)
t in s
0
5
10
15
20
−1.5
−1
−0.5
0
0.5
1
ϕs1d −ϕs1 in ◦
(b)
Fig. 7. a Velocity and b steering tracking error of the front wheel (i = 1) resulting
from
classic PD controlled and
model-based controlled vehicle (from [17])
be found at acceleration phases t ∈{0, 3, 16, 20}s. The diﬀerences can also be
seen in the total slip distance (constraint violation)
Δi =
 T
t=0
!
˙Δ2
longi + ˙Δ2
latidt.
(50)
It is computed by integrating the longitudinal
˙Δlongi = cos(ϕsi + γ) ˙x + sin(ϕsi + γ) ˙y + li sin(ϕsi −ϕ0 i)˙γ −r ˙ϕri
(51)
and lateral constraint violation
˙Δlati = −sin(ϕsi + γ) ˙x + cos(ϕsi + γ) ˙y + li cos(ϕsi −ϕ0 i)˙γ.
(52)
Along the 2.595 m long path, the model-based control leads to Δ1+Δ2 = 0.041 m
(1.58% of total path length) slip distance, whereby classic PD control leads
Δ1 + Δ2 = 0.137 m (5.28% of total path length) slip distance.
Signiﬁcant diﬀerences can also be noticed in the resulting driving torques.
They are presented for the classic control in Fig. 8a and for the model-based PD
control in Fig. 8b. Between t = 10 s and 12 s it can be seen that the classic con-
trol result in signiﬁcant higher driving torques than the model-based approach.
Moreover, the torques show an opposite sign. Hence, one motor is accelerating
while the other decelerates. This is a clear result of the counteraction and an
arbitrary distribution of the torque demand. Further investigations show, that
this higher demand can be observed over the whole trajectory. As indicator for
the energy demand, the quadratic average of the torques is used
u2 = 1
T
 T
t=0
u2dt.
(53)
For the model-based control this indicator is ur1 + ur2 = 3.039 Nm which is
14.75% lower than the 3.565 Nm for the classic control. The consequence is a
much lower energy demand for the model-based control, and as a result a much
higher uptime.

Parameter Identiﬁcation and Model-Based Control . . .
227
τ in Nm
t in s
0
5
10
15
20
−5
0
5
10
(a)
τ in Nm
t in s
0
5
10
15
20
−5
0
5
10
(b)
Fig. 8. Driving torques used for the (a) classic PD control compared with torques used
for the (b) decentralized control.
Shows the torque driving the front wheel (i = 1)
while
shows the rear wheel torque (i = 2)
7
Summary and Outlook
In this work a model-based dynamic control concept is introduced for redun-
dantly actuated, non-holonomic and omnidirectional vehicles with n centered
orientable standard wheels.
The ﬁrst part of this paper introduces a framework for the dynamic modeling
of such vehicles, including friction and inertia eﬀects. It turned out, that the
kinematic constraints of the vehicle are permanently singular or can become
singular. Therefore the dynamics is modeled with a redundant set of coordinates.
This formulation does not eliminate unknown traction forces (constraint forces)
in the dynamic equations but is in each conﬁguration, especially in singular
conﬁgurations, valid. The elimination of the constraint forces is done through
projecting the dynamics equation with a null space projector of the constraints.
This projector is computed in a highly eﬃcient manner by a semi-analytical
approach.
The second part uses this model for an augmented PD-control consisting
of an inverse dynamics component as well as a stabilizing feedback PD control
law. The distribution of the computed torque among the diﬀerent actuators is
done through a weighted least square approach. Whereby wheels with a higher
stall torque are less weighted. A PD control is additionally used to asymptotically
stabilize the vehicle along a desired motion. The counteraction is thereby avoided
by using the projected velocity error instead of the individual wheel velocity
errors.
Finally, a method is presented in the third part which accurately estimate
the parameters used in the inverse dynamics model. This step is mandatory since
some parameters, e.g. the friction coeﬃcients, are a priori unknown.
Future work will focus on alternative cost functions for the torque distrib-
ution. A minimization of traction forces or the consideration of the consumed
power could further improve the control concept.

228
C. St¨oger et al.
Acknowledgements. This work has been supported by the Austrian COMET-K2
program of the Linz Center of Mechatronics (LCM), and was funded by the Austrian
federal government and the federal state of Upper Austria.
References
1. Bj¨orck, ˚A.: Numerics of gram-schmidt orthogonalization. Linear Algebra Appl.
197, 297–316 (1994)
2. Bona, B., Indri, M.: Friction compensation in robotics: an overview. In: Conference
on Decision and Control and European Control Conference, pp. 4360–4367. IEEE
(2005)
3. Campion, G., Bastin, G., D’Andr´ea-Novel, B.: Structural properties and classiﬁ-
cation of kinematic and dynamic models of wheeled mobile robots. Trans. Robot.
Autom. 12, 47–62 (1996)
4. De Boor, C.: A Practical Guide to Splines, vol. 27. Springer, New York (1978)
5. Giordano, P.R., Fuchs, M., Albu-Sch¨aﬀer, A., Hirzinger, G.: On the kinematic
modeling and control of a mobile platform equipped with steering wheels and
movable legs. In: International Conference on Robotics and Automation, pp. 4080–
4087. IEEE (2009)
6. Hall, D.E., Moreland, J.C.: Fundamentals of rolling resistance. Rubber Chem.
Technol. 74(3), 525–539 (2001)
7. Hufnagel, T., Muller, A.: A projection method for the elimination of contradicting
decentralized control forces in redundantly actuated pkm. IEEE Trans. Robot.
28(3), 723–728 (2012)
8. Lee, M.H., Li, T.H.S.: Kinematics, dynamics and control design of 4wis4wid mobile
robots. J. Eng. 1. IET (2015)
9. M¨uller, A.: A robust inverse dynamics formulation for redundantly actuated PKM.
In: 13th World Congress in Mechanism and Machine Science, Guanajuato, Mexico,
pp. 19–25 (2011)
10. M¨uller, A., Hufnagel, T.: Model-based control of redundantly actuated parallel
manipulators in redundant coordinates. Robot. Auton. Syst. 60(4), 563–571 (2012)
11. Murray, R.M., Li, Z., Sastry, S.S., Sastry, S.S.: A Mathematical Introduction to
Robotic Manipulation. CRC press (1994)
12. Neubauer, M., Gattringer, H., Bremer, H.: A persistent method for parameter
identiﬁcation of a seven-axes manipulator. Robotica 33(05), 1099–1112 (2015)
13. Oftadeh, R., Ghabcheloo, R., Mattila, J.: A novel time optimal path following
controller with bounded velocities for mobile robots with independently steerable
wheels. In: International Conference on Intelligent Robots and Systems, pp. 4845–
4851. IEEE (2013)
14. Ostrowski, J., Burdick, J.: Geometric perspectives on the mechanics and control
of robotic locomotion. In: Robotics Research, pp. 536–547. Springer (1996)
15. Ploeg, J., van der Knaap, A.C., Verburg, D.J., Automotive, T.: Design, implemen-
tation and evaluation of a high performance AGV. In: Intelligent Vehicle Sympo-
sium. IEEE (2002)
16. St¨oger, C., M¨uller, A., Gattringer, H.: Kinematic analysis and singularity robust
path control of a non-holonomic mobile platform with several steerable driving
wheels. In: International Conference on Intelligent Robots and Systems, pp. 4140–
4145. IEEE (2015)

Parameter Identiﬁcation and Model-Based Control . . .
229
17. St¨oger, C., M¨uller, A., Gattringer, H.: Dynamic model-based control of redun-
dantly actuated, non-holonomnic, omnidirectional vehicles. In: 13th International
Conference on Informatics in Control, Automation and Robotics, pp. 4140–4145
(2016)
18. Swevers, J., Ganseman, C., Tukel, D.B., De Schutter, J., Van Brussel, H.: Optimal
robot excitation and identiﬁcation. IEEE Trans. Robot. Autom. 13(5), 730–740
(1997)
19. Yang, J.M., Kim, J.H.: Sliding mode control for trajectory tracking of nonholo-
nomic wheeled mobile robots. IEEE Trans. Robot. Autom. 15(3), 578–587 (1999)

Passivity-Based Control Design and
Experiments for a Rolling-Balancing System
Alejandro Donaire1(B), Martin Crespo2, Fabio Ruggiero1, Vincenzo Lippiello1,
and Bruno Siciliano1
1 PRISMA Lab, Dipartimento di Ingegneria Elettrica e Tecnologie dell’Informazione,
Universit`a di Napoli Federico II, Via Claudio 21, 80125 Napoli, Italy
alejandro.donaire@unina.it, fabio.ruggiero@unina.it,
vincenzo.lippiello@unina.it, bruno.siciliano@unina.it
2 Departamento de Control, FCEIA, Universidad Nacional de Rosario and
CONICET, Riobamba 245 bis, S2000EKE Rosario, Argentina
crespom@fceia.unr.edu.ar
Abstract. In this chapter we present the design and implementation of
a robust passivity-based controller for a rolling-balancing system known
as the disk-on-disk. The control design aims to asymptotically stabilize
the desired equilibrium of the disk-on-disk by shaping the energy func-
tion of the system and injecting damping. This ﬁrst design is further
augmented by the addition of a nonlinear PID controller to compensate
for disturbances. We incorporate in the nonlinear PID the possibility of
stabilizing either a set-point of angular positions of the disks or their
angular velocities while keeping the balance of the system. Although
the underactuation feature of the system and the disturbances hamper
the control design, we show that the passivity-based framework oﬀers
the necessary tools to prove the desired stability properties of the close
loop. Finally, we evaluate the practical applicability of the control design
by implementing the controller on a real hardware for the disk-on-disk
system and asses the performance of the control system.
Keywords: Rolling-balancing system · Nonlinear control · Passivity-
based control · Integral action
1
Introduction
Control theory has provided a rich variety of methods for control design of non-
linear systems [5,6]. In the context of robotics and mechanical systems, nonlinear
methods have been widely used for control design (see e.g. [17,18]). A class of
mechanical systems posing a particularly challenging control problem is that
of underactuated mechanical systems. Underactuation refers to the fact that
number of the inputs is smaller than the number of the degrees of freedom.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_12

Passivity-Based Control Design and Experiments . . .
231
Passivity-based control (PBC) has shown to be a successful technique for
control design of underactuated systems [11]. A standard constructive method
for stabilization of mechanical system is the so-called interconnection and damp-
ing assignment (IDA) [12]. This technique is based on Lagrange–Dirichlet result
on stability of mechanical systems, which states that an isolated minimum of the
potential energy is Lyapunov stable (see Theorem 3.1 in [9] for further details).
The basic idea of IDA-PBC is to shape the energy of the system and assign
a minimum at the desired equilibrium by using feedback measurements and
the control input. A further injection of damping is needed to ensure asymp-
totic stability [13]. To stabilize a desired equilibrium for fully actuated systems,
only the potential energy of the system is needed to be shaped. However, both
the potential and kinetic energies have to be shaped to stabilize underactuated
systems, a procedure known as total energy shaping. Although passivity-based
controllers are known to be robust against parameter uncertainties, the action
of external disturbances can deteriorate the performance of the closed loop or,
even worse, produce instabilities. To address this problem, a classical addition of
control actions has been proposed in [2,10]. This integral action design has been
specialized for fully actuated and underactuated mechanical system by [3,14],
respectively.
In this work, we consider the control problem of the disk-on-disk (DoD),
which is an underactuated rolling-balancing system [16]. The DoD is a case study
of nonprehensile manipulation and has been used as testbed for control designs in
this context [4,16]. In addition to the stabilization problems of angular position
set-points or tracking constant angular velocity references while keeping balance,
we also consider input disturbances, which complicate the design and extend the
result in [1]. Previous works have considered the stabilization problem of the DoD
using exact-feedback linearization [8], and energy shaping [4], but none of these
works consider disturbances in the design. The work in [15] considers constant
speed tracking but disturbances were no considered. In our work, we explicitly
consider the disturbances and we design a robust IDA-PBC controller following
the approach proposed by [3]. This controller results in a classical IDA-PBC
inner controller plus a nonlinear PID-type outer-loop controller, which rejects
the disturbance. In addition, we implement the control laws in a real hardware
for the disk-on-disk prototype, and run a set of experiments. These experiments
allow assessing the performance of the controllers and evaluating the practical
applicability of the methods provided in the literature of control theory.
The rest of the chapter is organized as follows: Sect. 2 reviews the basic
background on port-Hamiltonian framework and IDA-PBC. The control design
for the disk-on-disk is developed in Sect. 3. Section 4 presents simulations and
experiment results, respectively. Finally, the chapter is wrapped-up with the
conclusions.

232
A. Donaire et al.
2
Port-Hamiltonian Systems
2.1
Hamiltonian Models
A broad class of mechanical systems can be described by the Euler–Lagrange
equations of motion
d
dt [∇˙qL (q, ˙q)] −∇qL (q, ˙q) = G(q)u,
(1)
where q ∈Rn is the generalized position, u the input force, G : Rn →Rn×m is
the input matrix and L the Lagrangian, which has the following form
L (q, ˙q) = 1
2 ˙q⊤M(q) ˙q −V (q),
where V : Rn →R is the potential energy and M : Rn →Rn×n is the mass
matrix and satisﬁes the condition M(q) = M ⊤(q) > 0. Applying the Legendre
transformation and deﬁning the generalized momentum p = M(q) ˙q [7], we can
express the dynamics (1) in the Hamiltonian form as follows

˙q
˙p

=

0n×n
In
−In 0n×n
 
∇qH
∇pH

+

0n×m
G(q)

u,
(2)
where p ∈Rn and H : Rn×n →R is the total energy system given as
H(q, p) = 1
2p⊤M −1(q)p + V (q).
(3)
2.2
Energy Shaping and Damping Assignment
The stabilization problem of the system (2) using IDA-PBC is to ﬁnd a control
input u such that the dynamics of the closed loop can be written as a port-
Hamiltonian system as follows
 ˙q
˙p

=

0n×n
M −1Md
−MdM −1 J2 −R⊤
d
 ∇qHd
∇pHd

,
(4)
where the matrices J2(q, p) = J⊤
2 (q, p) and Rd(q) = G⊤(q)KvG(q) represent the
desired interconnection and damping structures, respectively, and Kv > 0 is a
free symmetric matrix to be chosen. The function Hd : Rn →R is the desired
energy in closed loop which has the form
Hd(q, p) = 1
2p⊤M −1
d (q)p + Vd(q),
(5)
where Md(q) = M ⊤
d (q) > 0 and Vd(q) are the desired mass matrix and the
desired potential energy of the closed loop, respectively. In addition, if q⋆is
a minimum of the potential energy, then the desired energy Hd qualiﬁes as a

Passivity-Based Control Design and Experiments . . .
233
Lyapunov candidate function, and its time derivative along the solutions of (4)
results as follows
˙Hd = −p⊤M −1
d G⊤KvGM −1
d p ≤0,
(6)
which ensures that q⋆is a stable equilibrium of the closed-loop system. Moreover,
asymptotic stability follows if the signal yd = GM −1
d p is detectable [12].
The classical approach to design an IDA-PBC controller is to compute the
control in two steps. First, the energy shaping control uES, and second the damp-
ing injection uDI. Then, the control input is obtained as u = uES + uDI. The
energy shaping controller is computed by matching the open dynamics (2) and
the desired closed loop (4) assuming Rd = 0. This procedure results in the
following matching equation
0n×n
In
−In 0n×n
 ∇qH
∇pH

+
0n×m
G(q)

ues =

0n×n
M −1Md
−MdM −1
J2
 ∇qHd
∇pHd

,
(7)
which should be solve for uES. For the nontrivial case of underactuated systems,
where G(q) is full column rank but non invertible matrix, the solution of (7) can
be found by solving the following two equations:
• Kinetic-energy matching equation (KE-ME)
G⊥
∇q

p⊤M −1p

−MdM −1∇q

p⊤M −1
d p

+ 2J2M −1
d p

= 0.
(8)
• Potential-energy matching equation (PE-ME)
G⊥
∇qV −MdM −1∇qVd

= 0,
(9)
where G⊥∈R(n−m)×n is the full rank left annihilator of G, i.e. G⊥G = 0. Then,
the energy shaping control law is given by
uES = (G⊤G)−1G⊤
∇qH −MdM −1∇qHd + J2∇pHd
	
.
(10)
The second step in the design is the damping injection, which is given by the
control law
uDI = −KvG⊤M −1
d p.
(11)
As discussed by [12], the injection of damping together with the detectability
condition are needed for asymptotic stability.
3
Control Design for the Disk-on-Disk
3.1
Dynamic Model
The DoD is a rolling-balancing system shown in Fig. 1. Disk 1 is actuated by a
controlled torque whilst Disk 2 is non-actuated (see [16] for a detailed modelling
development). We consider two control objectives:

234
A. Donaire et al.
Disk 1
Disk 2
Fig. 1. A schematic of the DoD system
O.1. Stabilization of the Disk 2 at the upright position while driving the angle
of Disk 1 to a target angular reference.
O.2. Tracking of constant angular velocities reference for Disk 1 while keeping
the Disk 2 at the upright position.
The dynamic model of the DoD can be described by the Lagrangian equations
in coordinates (θ, ϕ), where θ is the angle of Disk 1, and ϕ is the deviation angle
of Disk 2 respect to the upright position. The Langrangian for the DoD is given
by
L (q, ˙q) = 1
2

˙θ
˙ϕ
	⊤M11 M12
M21 M22
 
˙θ
˙ϕ
	
−V (q),
(12)
where
V (q) = V0 cos(ϕ),
with V0 = mog(ro + rh). The function V represents the potential energy and M
is the mass matrix whose entries are
M11 = r2
h(mo + mh),
M12 = M21 = −morh(ro + rh),
M22 = 2mo(ro + rh)2.
Equivalently, as explained in Sect. 2, the DoD model can be written in the Hamil-
tonian form as follows

˙q
˙p

=

0 I
−I 0
 
∇qH
∇pH

+

0
G

u,
(13)
where the coordinates q =

θ ϕ
⊤, the momenta p = M ˙q and the input matrix
G =
1 0⊤. The Hamiltonian function is
H(q, p) = 1
2p⊤M −1p + V (q).

Passivity-Based Control Design and Experiments . . .
235
3.2
Energy Shaping and Damping Assignment Control
The objective in this section is to design a IDA-PBC controller for the DoD
system that stabilizes the point q∗= (θ∗, 0), where θ∗is the desired equilibrium
for Disk 1 angle. This control objective corresponds to the task O.1 described in
Sect. 3.1. To solve this problem, we design a controller using energy shaping and
damping injection as described in Sect. 2. That is, we search for the function
Vd and the matrices Md and J2 that solve the KE-ME and PE-ME, (8) and
(9) respectively. Thus, the energy shaping control is obtained from (10) and the
damping injection control from (11).
Since the mass matrix of the DoD is constant and does not depend on the
coordinates q, we select Md as a constant matrix as follows
Md =

N11 N12
N12 N22

,
where N11, N12 and N22 are free constants parameters. To simplify the notation,
we note
MdM −1 =

a b
c d

.
Then, the PE-ME (9) is as follows

0 1


 
0
V0 sin(ϕ)

+
a b
c d
 ∇θVd
∇ϕVd
 
= 0
V0 sin(ϕ) + c ∇θVd + d ∇ϕVd = 0.
(14)
We solve the partial diﬀerential equation (14) for Vd, and we obtain, using a
symbolic software (e.g. Mathematical, Maple), a solution as follows
Vd(q) = 1
dV0 cos(ϕ) + k2
2

θ −c
dϕ −k1
2
,
(15)
where k1 and k2 are free constant parameters to be chosen to assign a minimum
at the desired equilibrium.
From the previous selection of Md, it is clear that the KE-ME (8) is satisﬁed
by choosing J2(q, p) = 0. In addition, we need to ensure that Md > 0 and that
Vd has an isolated minimum at the desired equilibrium q⋆.
The minimum of Vd is assigned by requiring that the Jacobian and Hessian
evaluated at q⋆are zero and positive deﬁnite respectively. Then, we compute
(I) ∇qVd(q)

q=q∗= 0 ⇔

k2

θ −c
dϕ −k1

−V0
d
sin(ϕ) −k2c
d

θ −c
dϕ −k1


q=q∗
= 0,
which is satisﬁed if k1 = θ∗.
(II) ∇2
qVd(q)

q=q∗> 0 ⇔
 k2
−k2 c
d
−k2 c
d
−V0
d
cos(ϕ) + k2
 c
d
2

q=q∗
> 0,
which is satisﬁed provided that k2 > 0 and d < 0 (equivalently N12M12 −
N22M11 > 0).

236
A. Donaire et al.
Fig. 2. Desired potential energy
The positive deﬁniteness of Md is ensured if N11 > 0 and N11N22 −N 2
12 > 0.
Notice that eﬀectively, the potential energy has a minimum at the desired
equilibrium (θ⋆, ϕ⋆) = (0, 0) as shown in Fig. 2, where we have used the values
of the parameters as in Sect. 4.1 for illustrative purpose.
Finally, the control law is computed from (10) and (11) as follows
u = ues + uDI = −b
d∇ϕV −k2
ad −bc
d
 
θ −c
dϕ −θ⋆
−Kv d σ

˙θ −c
d ˙ϕ

,
(16)
where σ = M11M22−M 2
12
N11N22−N2
12 and the free parameters N11, N12, N22, k2 and Kv should
satisfy
N11 > 0,
k2 > 0,
Kv > 0,
N11N22 −N 2
12 > 0,
N12M12 −N22M11 > 0.
Thus, the dynamics of the DoD system (13) in closed loop with the controller
(16) can be written in the Hamiltonian form

˙q
˙p

=

0
M −1Md
−MdM −1 −GKvG⊤
 
∇qHd
∇pHd

.
(17)
To analyse the stability of the closed loop (17), we consider the desired Hamil-
tonian in (5) as a Lyapunov function and we compute its time derivative as
follows
˙Hd(q, p) = p⊤M −1
d
˙p + ˙q⊤˙Vd(q)
= p⊤M −1
d

−MdM −1 ˙Vd −GKvG⊤M −1
d p

+ ˙q⊤˙Vd(q)
= −p⊤M −1
d GKvG⊤M −1
d p ≤0,
which ensures stability of the desired equilibrium. Asymptotic stability follows
from LaSalle’s invariance principle [6], or equivalently from detectability of the
signal yd = KvG⊤M −1
d p [19].

Passivity-Based Control Design and Experiments . . .
237
3.3
Eﬀect of Input Disturbances
Now, we consider the presence of a matched disturbance δ in the closed loop
(17). In this case, the closed-loop dynamics is

˙q
˙p

=

0
M −1Md
−MdM −1 −GKvG⊤
 
∇qHd
∇pHd

+

0
G

(v + δ),
(18)
where δ is the matched constant disturbance and v is a control input that will
be used to reject the unknown disturbance. To obtain the dynamics (18), we use
the control u = ues+uDI+v in (13), and we add the disturbance. Notice that the
disturbance shifts the equilibrium of the closed loop, deﬁned by zero velocities
(equivalently p = 0), from the desired equilibrium q⋆to a new equilibrium ¯q,
which is the solution of
−MdM −1∇qVd + Gδ = 0,
which implies that ¯q = (¯θ, ¯ϕ) with ¯θ = θ⋆+
d
(ad−bc)k2 δ and ¯ϕ = 0. This shows
that the control objective is not achieved by the controller in the presence of
constant disturbances, since θ will not reach the desired value at steady state as
desired. This motivates us to implement outer-loop controllers to reject constant
unknown disturbances.
3.4
Robust Energy Shaping
In this section, we implement three integral based controllers proposed in [3]
to enhance the robustness of the energy shaping controller. We develop these
integral controllers for the disk-on-disk in closed loop with the control (16).
That is, for the closed-loop dynamics (17) we design a control law v to reject
constant disturbances δ. We ﬁrst present the most complex controller which is a
nonlinear PID, and subsequently we present two simpler versions, which results
in a type of PI and PID controllers. We also extend this control design to ensure
the second control objective O.2, which ensures tracking of constant angular
velocities.
Integral control. The fundamental idea proposed in [3] is to ﬁnd a dynamic
control law v(q, p, ζ), where ζ is the state of the controller, and a change of
coordinates such that the closed loop in the new coordinates can be written as
a Hamiltonian system, thus stability is ensured. For the DoD closed loop (18),
we proposed a target Hamiltonian system in new coordinates z ∈R5, where
we have augmented the state vector by adding the controller state. The target
Hamiltonian system is
⎡
⎣
˙z1
˙z2
˙z3
⎤
⎦=
⎡
⎣
−Γ1
M −1Md
−Γ2
−MdM −1 −GKvG⊤−GK3
Γ T
2
KT
3 GT
−Γ3
⎤
⎦
⎡
⎣
∇z1Hz
∇z2Hz
∇z3Hz
⎤
⎦,
(19)
with Hamiltonian
Hz(z) = 1
2z⊤
2 M −1
d z2 + Vz(z1) + 1
2KI(z3 −z⋆
3)2,
(20)

238
A. Donaire et al.
where
Vz(z1) = Vd(q)

q=z1
= 1
dV0 cos(z12) + k2
2

z11 −c
dz12 −k1
2
,
(21)
with z1 =
z11 z12
⊤and constant gains equal to
Γ1 ≜M −1GK1GT M −1,
Γ2 ≜M −1GK2,
Γ3 ≜KT
3 GT M −1
d GK2,
z⋆
3 ≜
δ
KI

KvGT M −1
d GK2 + K3
,
where the new coordinates z = ψ(q, p, ζ) are obtained by the state transforma-
tion
z1 = q −G(α t + β),
(22)
z2 = p + GK1GT M −1∇Vz + GK2KI(ζ −z⋆
3) −MGα,
(23)
z3 = ζ,
(24)
with Kv > 0, KI > 0, K1 > 0, K3 > 0 and K2 =

G⊤M −1
d G
−1. The values of α
and β characterizes the ramp proﬁle of the angle reference that should be tracked
by the Disk 1. Notice that when z1 converge to zero, then q converge to G(αt+β).
Therefore, we look for a control law that render the closed-loop dynamics in the
form (19), and we study the stability properties of such system at the origin. To
obtain such control law, we ﬁrst notice that if we diﬀerentiate (22) and replace
the derivative of the states by their corresponding state equations from (18) and
(19), we obtain
˙z1 = ˙q −Gα
= M −1p −Gα
= M −1 
z2 −GK1GT M −1∇Vz −GK2KI(ζ −z⋆
3) + MGα

−Gα
= −Γ1∇z1Hz + M −1Md∇z2Hz −Γ2∇z3Hz,
(25)
which implies that the dynamics of z1 expressed in the new coordinates z is
exactly the ﬁrst row of (19).
Similarly, to construct the dynamics of z2 as in the second row of (19), we
diﬀerentiate (23) as follows
˙z2 = ˙p + GK1GT M −1∇2Vz ˙z1 + GK2KI ˙z3
= −MdM −1∇Vd −GKvG⊤M −1
d p + Gv + Gδ + GK 1GT M −1∇2Vz( ˙q −Gα) +
GK2KI ˙z3,
(26)

Passivity-Based Control Design and Experiments . . .
239
from where we can see that to obtain the desired dynamics for z2, the control
law should satisfy
Gv = ˙z2 + MdM −1∇Vd + GKvG⊤M −1
d p −Gδ −GK 1GT M −1∇2Vz( ˙q −Gα) −
GK2KI ˙z3.
(27)
Replacing ˙z2 and ˙z3 in (27) for the second and third row of (19), respectively,
and noticing that G⊥[MdM −1∇Vz −MdM −1∇Vd] = 0, then the control law as
a function of (q, p, ζ) results, after some calculations, as follows
v = −

KvG⊤M −1
d GK1G⊤M −1 + K2KI

K⊤
2 + K⊤
3 G⊤M −1
d GK1

G⊤M −1

∇Vd −

K1G⊤M −1∇2VdM −1 + K2KIK⊤
3 G⊤M −1
d

p −

KvG⊤M −1
d GK2 + K3

KIζ +

KvG⊤M −1
d
+ K1G⊤M −1∇2VdM −1 + K2KIK⊤
3 G⊤M −1
d

MGα −
(G⊤G)−1G⊤MdM −1

∇Vz −∇Vd

.
(28)
Finally, the dynamics of z3, or equivalently ζ, can be freely set as in the third
row of (19), which can be written as follows
˙ζ =

K⊤
2 + K⊤
3 G⊤M −1
d GK1

G⊤M −1∇Vd + K⊤
3 G⊤M −1
d p −
K⊤
3 G⊤M −1
d MGα.
(29)
The controller, composed by the control law (28) and the integrator (29), does
not require the information of the constant disturbance δ.
We have shown that the dynamics (18) in closed loop with the nonlinear PID
controller (28)–(29) can be written in the form (19). The Hamiltonian form of
the closed-loop dynamics ensures its stability. Indeed, the Hamiltonian in (20)
has a minimum at the desired equilibrium (z1, z2, z3) = (0, 0, z⋆
3) if k1 = 0, and
it qualiﬁes as a Lyapunov function for the dynamics (19). The time derivative
of Hz is
˙Hz = −∇⊤Vd(z1)M−1GK1G⊤M−1∇Vz −z⊤
2 M−1
d
GKvG⊤M−1
d
z2 −Γ3K2
I (z3 −z⋆
3)2
≤0,
which ensures stability. Asymptotic stability follows using LaSalle argu-
ments and noticing that the maximum invariant set included in S
=
{(z1, z2, z3)|G⊤M −1∇Vz = 0, G⊤M −1
d z2 = 0, z3 = z⋆
3} is the desired equilib-
rium (0, 0, z⋆
3).
Notice that the controller (28) is a nonlinear PID, which we will refer to as
NLPID2. Moreover, two simpler versions of this controller can be obtained by
setting the controller parameters to particular values. Indeed, a simpler nonlinear
PID can be obtained by considering K2 = 0 and K3 = 1, which we will refer

240
A. Donaire et al.
to as NLPID1, and a nonlinear PI controller is obtained by setting K1 = 0 and
K3 = 0, which will refer to as NLPI.
In addition, we point out that a controller with only the integral of the passive
outputs, which are the velocities for mechanical systems, can be obtained by
setting K1 = 0, K2 = 0 and K3 = K−1
I . We will refer to this controller as
IA. It has been shown in [14] that this type of IA controllers does not reject
disturbances, destroys the detectability of the passive outputs and creates a
manifold of equilibrium. Thus asymptotic stability is not achieved, a fact that
is seen in the experiments.
4
Simulations and Experiments
In this section, we present simulation and experiment results to assess the per-
formance of the controllers presented in Sect. 3 and verify their applicability in
a real setup. The simulations are performed using Matlab and the experiments
are carried out on the prototype shown in Fig. 3, available at PRISMA Lab.
The model parameters of the disk-on-disk are mh = 0.335 Kg, mo = 0.22 Kg,
rh = 0.15 m and ro = 0.075 m.
The prototype consists of two disks placed in between two plastic panels.
Disk 1 is actuated by a DC motor (Harmonic Drive RH–8D 3006) equipped
with a harmonic drive whose gearhead ratio is 100 : 1, and a 500 p/r quadrature
encoder. A rubber band of about 1 mm encircles both disks to avoid slipping.
The commands to the motor are provided by an ARM CORTEX M3 microcon-
troller (32 bit, 75 MHz). This microcontroller receives current references from an
external PC through a USB cable. The measurements of Disk 1 are provided by
an encoder while the measurements of Disk 2 are provided by an external visual
Fig. 3. Prototype of the disk-on-disk available at PRISMA Lab

Passivity-Based Control Design and Experiments . . .
241
system. This consists of a uEye UI-122-xLE camera providing (376 × 240) pixel
images to the PC at 75 Hz, that is also the controller sample rate. In order to
speed up computations, a (15 × 15) pixel RoI is employed by the image elabora-
tion algorithm running on the same external PC. The control algorithm, which is
written in C++, runs on the external PC with a Linux-based operating system.
We have tested ﬁve diﬀerent controllers in the prototype: (i) the standard
IDA-PBC controller, (ii) the IDA-PBC controller augmented with the IA, (iii)
the IDA-PBC controller enhanced with the NLPID1, (iv) the IDA-PBC con-
troller enhanced with the NLPID2, and (v) the IDA-PBC controller enhanced
with the NLPI. The experiments are executed under the following scenario: the
initial conditions of the balancing and Disk 1 angles are ϕ(0) = 7 deg and
θ(0) = 0 deg respectively, whilst the angular velocities at starting time are zero.
The set-point reference for the position of Disk 1 position is set to zero (θ⋆= 0),
while Disk 2 has to be stabilized at the upright position. A constant matched dis-
turbance of value δ = 0.01 Nm is added to the system to evaluate the disturbance
rejection properties of the controller.
4.1
Standard IDA-PBC
In the ﬁrst experiment, we evaluate the performance of the IDA-PBC controller
(16) stand alone. The parameters of the controller used in the experiment are
N11 = 0.41, N12 = −0.03, N22 = 0.003, k2 = 0.0005 and Kv = 0.08.
The results of this experiment are shown in Figs. 4, 5 and 6. As expected, the
controller stabilizes Disk 2 at the upright position as shown in Fig. 4. However,
it is unable to ensure convergence of the angle of Disk 1 to the desired reference
due to the disturbance (see Fig. 5). The time history of the control torque is
shown in Fig. 6, which shows that the controller demands a reasonable torque
without large sparks.
0
1
2
3
4
5
6
7
8
9
10
−6
−4
−2
0
2
4
6
8
Time [s]
Balancing position    (t)  [deg]
Fig. 4. Time history of the balancing angle with the IDA-PBC controller

242
A. Donaire et al.
0
1
2
3
4
5
6
7
8
9
10
−180
−160
−140
−120
−100
−80
−60
−40
−20
0
Time [s]
Disk 1 angle     (t)  [deg]
Fig. 5. Time history of Disk 1 angle with the IDA-PBC controller
0
1
2
3
4
5
6
7
8
9
10
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
− δ
Time [s]
Control input
τh
Fig. 6. Time history of the control torque and its value at steady state with the IDA-
PBC controller
4.2
IDA-PBC Plus IA
In the second experiment, we test the performance of the IDA-PBC controller
plus the IA, that is the controller (16) plus (28) with K1 = 0, K2 = 0 and K3 =
K−1
I . The parameters of the controller used in the experiment are N11 = 0.41,
N12 = −0.03, N22 = 0.003, k2 = 0.0005, Kv = 0.08, α = 0, β = 0 and KI = 20.
The results of this experiment are shown in Figs. 7, 8, 9 and 10. Similar to the
previous experiment, the controller balances Disk 2 at the upright position, but
does not make the angle of Disk 1 converge to zero, which approaches a value of
−160 degrees instead (see Figs. 7 and 8). The state of the controller is shown in
Fig. 9, which reaches a value in the equilibrium manifold that has no relation with

Passivity-Based Control Design and Experiments . . .
243
0
1
2
3
4
5
6
7
8
9
10
−6
−4
−2
0
2
4
6
8
 
 
Time [s]
Balancing position    (t)  [deg]
Fig. 7. Time history of the balancing angle with the IDA-PBC plus IA controller
0
1
2
3
4
5
6
7
8
9
10
−180
−160
−140
−120
−100
−80
−60
−40
−20
0
Time [s]
Disk 1 angle     (t)  [deg]
Fig. 8. Time history of Disk 1 angle with the IDA-PBC plus IA controller
the disturbance. Finally, the control torque is plotted in Fig. 10. This experiment
illustrates that the integral action on the velocities does not produce any beneﬁt
when used to reject disturbances, as predicted by the theory.
4.3
IDA-PBC Plus NLPI
In this fourth experiment, we evaluate the performance of the IDA-PBC con-
troller plus the NLPI, that is the controller (16) plus (28) with K1 = 0 and
K3 = 0. The parameters of the controller used in the experiment are N11 = 0.41,
N12 = −0.03, N22 = 0.003, k2 = 0.0006, Kv = 1.5, K2 =

G⊤M −1
d G
−1 and
KI = 1.6.

244
A. Donaire et al.
0
1
2
3
4
5
6
7
8
9
10
−6
−4
−2
0
2
4
6
8
10
12
x 10
−4
Time [s]
Controller state
Fig. 9. Time history of the controller state and its value at steady state with the
IDA-PBC plus IA controller
0
1
2
3
4
5
6
7
8
9
10
−0.2
−0.15
−0.1
−0.05
0
0.05
0.1
0.15
− δ
Time [s]
Control input
τh
Fig. 10. Time history of the control torque and its value at steady state with the
IDA-PBC plus IA controller
The results of this experiment are shown in Figs. 11, 12, 13 and 14. The
plots in Figs. 11 and 12 show that the controller stabilizes Disk 2 at the upright
position and drives Disk 1 to the desired reference angle despite the action of the
disturbance. However, a small error (less than one degree) on the angle ϕ can be
seen in steady state. Figure 13 shows that the state of the controller converges to
the value needed to compensate the disturbance, and Fig. 14 depicts the control
torque, which is bounded between admissible limits.

Passivity-Based Control Design and Experiments . . .
245
0
1
2
3
4
5
6
7
8
9
10
−6
−4
−2
0
2
4
6
8
Time [s]
Balancing position    (t)  [deg]
Fig. 11. Time history of the balancing angle with the IDA-PBC plus the NLPI con-
troller
0
1
2
3
4
5
6
7
8
9
10
−100
−90
−80
−70
−60
−50
−40
−30
−20
−10
0
10
Time [s]
Disk 1 angle     (t)  [deg]
Fig. 12. Time history of Disk 1 angle with the IDA-PBC plus the NLPI controller
4.4
IDA-PBC Plus NLPID1
In the second set of experiments, we evaluate the performance of the IDA-PBC
controller plus the NLPID1, that is the controller (16) plus (28) with K2 = 0
and K3 = 1. The parameters of the controller are as follows: N11 = 0.41, N12 =
−0.03, N22 = 0.003, k2 = 0.00048, K1 = 0.00905, Kv = 0.35, α = 0, β = 0 and
KI = 2.3.
Figures 15, 16, 17 and 18 show the results of this experiment. The time history
of the deviation angle of Disk 2 respect to the upright position is depicted in
Fig. 15. This ﬁgure shows that Disk 2 is balanced as desired. Figure 16 shows

246
A. Donaire et al.
0
1
2
3
4
5
6
7
8
9
10
−0.01
−0.005
0
0.005
0.01
0.015
0.02
0.025
Time [s]
Controller state
ζ
α
Fig. 13. Time history of the controller state and its value at steady state with the
IDA-PBC plus the NLPI controller
0
1
2
3
4
5
6
7
8
−0.1
−0.05
0
0.05
0.1
0.15
Time [s]
Control input [deg]
τh
− δ
Fig. 14. Time history of the control torque and its value at steady state with the
IDA-PBC plus the NLPI controller
that the angle of Disk 1 reaches the reference value, and the controller rejects
the disturbance. Also, it can be seen in Fig. 17 that the controller state produces
an estimate of the disturbance, which is used to compensate it. In addition, the
control input is shown in Fig. 18.
4.5
IDA-PBC Plus NLPID2
In the last experiment, we evaluate the performance of the IDA-PBC controller
plus the NLPID2, that is the controller (16) plus (28). The parameters of the
controller are as follows: N11 = 0.41, N12 = −0.03, N22 = 0.003, k2 = 0.00025,

Passivity-Based Control Design and Experiments . . .
247
0
1
2
3
4
5
6
7
8
9
10
−6
−4
−2
0
2
4
6
8
Time [s]
Balancing position    (t)  [deg]
Fig. 15. Time history of the balancing angle with the IDA-PBC plus the NLPID1
controller
0
1
2
3
4
5
6
7
8
9
10
−80
−70
−60
−50
−40
−30
−20
−10
0
10
20
Time [s]
Disk 1 angle     (t)  [deg]
Fig. 16. Time history of Disk 1 angle with the IDA-PBC plus the NLPID1 controller
K1 = 0.012, K2 =

G⊤M −1
d G
−1, K3 = 0.06, Kv = 0.3, α = 0, β = 0 and
KI = 2.2.
The time history of the most signiﬁcant variables are shown in Figs. 19, 20, 21
and 22. As can be seen in Figs. 19 and 20, the controller is able to balance Disk
2 at the upright position while stabilizing the angle of Disk 1 at the desired set-
point. The controller state and the control torque are shown in Figs. 21 and 22,
respectively. These plots evidence that the controller ensures internal stability,
output regulation and disturbance rejection showing very good performance.

248
A. Donaire et al.
0
1
2
3
4
5
6
7
8
9
10
−0.025
−0.02
−0.015
−0.01
−0.005
0
0.005
0.01
0.015
Time [s]
Controller state
ζ
α
Fig. 17. Time history of the controller state and its value at steady state with the
IDA-PBC plus the NLPID1 controller
0
1
2
3
4
5
6
7
8
9
10
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
τh
− δ
Time [s]
Control input [deg]
Fig. 18. Time history of the control torque and its value at steady state with the
IDA-PBC plus the NLPID1 controller
4.6
Tracking Angle Ramp References for the Disk 1
Finally, we present simulations to assess the performance of the IDA-PBC con-
troller plus the NLPID2 when the reference for the angle of the Disk 1 is a
ramp. The ramp reference is θ⋆(t) = αt + β, where the constants α and β
are chosen to change the shape of the ramp. The controller parameters are
as follows: N11 = 0.41, N12 = −0.03, N22 = 0.003, k2 = 0.25, K1 = 0.012,
K2 =

G⊤M −1
d G
−1, K3 = 0.2, Kv = 0.5 and KI = 3. The disturbance is set
at δ = 0.25 Nm. To increase the realism of the simulations, we have include in
the feedback loop a zero-order hold (75 Hz), a time delay and noise in the mea-

Passivity-Based Control Design and Experiments . . .
249
0
1
2
3
4
5
6
7
8
−6
−4
−2
0
2
4
6
8
Time [s]
Balancing position    (t)  [deg]
Fig. 19. Time history of the balancing angle with the IDA-PBC plus the NLPID2
controller
0
1
2
3
4
5
6
7
8
−80
−70
−60
−50
−40
−30
−20
−10
0
10
20
Time [s]
Disk 1 angle     (t)  [deg]
Fig. 20. Time history of Disk 1 angle with the IDA-PBC plus the NLPID2 controller
surements. We also modify the model parameters up to a 10% of their nominal
values to emulate uncertainties.
The simulation results are shown in Figs. 23, 24, 25, 26 and 27. The ramp
references and the time history of the Disk 1 angle are depicted in Fig. 23. This
ﬁgure shows that the Disk 1 tracks the desired ramp proﬁle, while Fig. 24 shows
that the Disk 2 is kept balanced at the upright position. Figure 25 shows that
the tracking error of the Disk 1 angle converges to zero, as expected. As can
be seen in Fig. 26, the angular velocity of the Disk 1 reaches constant values
when the ramp is active, and converges to zero when the reference of the Disk 1

250
A. Donaire et al.
0
1
2
3
4
5
6
7
8
−0.015
−0.01
−0.005
0
0.005
0.01
0.015
0.02
0.025
Time [s]
Controller state
ζ
α
Fig. 21. Time history of the controller state and its value at steady state with the
IDA-PBC plus the NLPID2 controller
0
1
2
3
4
5
6
7
8
−0.4
−0.3
−0.2
−0.1
0
0.1
0.2
Time [s]
Control input
τh
− δ
Fig. 22. Time history of the control torque and its value at steady state with the
IDA-PBC plus the NLPID2 controller
angle is constant. The same ﬁgure shows that the angular velocity related to the
balancing angle converges to zero. Finally, Fig. 27 shows that the control input
is suﬃciently smooth and bounded between reasonable values.
4.7
Discussion
As shown in the experiments, the IDA-PBC controller presented in Sect. 3.2 may
be robust against parameter uncertainties. The action of disturbance, however,
deteriorate the performance of the control system. Indeed, the experiments in
Sect. 4.1 show that the IDA-PBC controller balances Disk 2, but the steady-state

Passivity-Based Control Design and Experiments . . .
251
−80
−60
−40
−20
0
20
40
60
80
Disk 1 angle     
  [deg]
(t)
0
5
10
15
20
25
30
Time [s]
35
Disk 1 angle
Reference
Fig. 23. Time history of the Disk 1 angle with angular ramp references
0
5
10
15
20
25
30
−4
−2
0
2
4
6
Time [s]
Balancing position    
  [deg]
(t)
35
Fig. 24. Time history of the balancing angle
error of Disk 1 angle is signiﬁcantly large. The classical solution of adding integral
action on the passive output does not improve the performance of the controller
respect to the standard IDA-PBC as shown in Sect. 4.2. This fact was previously
reported in [14], however, no experiment has illustrated this theoretical result
before.
The experiments in Sects. 4.3, 4.4 and 4.5 show that controllers presented in
Sect. 3.4 are able to balance Disk 2 and simultaneously stabilize the angle of Disk
1, thanks to the action of the outer NLPID. However, from the time histories
of the states we can see that the rate of convergence of the DoD variables using
the controller NLPI is faster that the NLPID1, and produces less oscillations.

252
A. Donaire et al.
−40
−30
−20
−10
0
10
20
Disk 1 angular error [deg]
0
5
10
15
20
25
30
Time [s]
35
Fig. 25. Time history of the error on the Disk 1 angel with ramp references
−400
−300
−200
−100
0
100
200
Angular velocities
 
 
0
5
10
15
20
25
30
Time [s]
35
(t)
(t)
[deg/s]
,
.
.
Disk 1 velocity
Balancing velocity
Fig. 26. Time history of the angular velocities
This better transient performance is, however, darken by the steady state error,
which is not present in the NLPID1. Also, the overshoot of Disk 1 angle is greater
when using NLPI compared with the NLPID1 at expense of a more demanding
control torque. On the other side, the last experiment shows that the controller
NLPID2 performs better than the controller NLPI and NLPID1. Indeed, the
transient performance of the NLPID2 is better that the other controllers with
less overshoot in both the balancing angle ϕ related to Disk 2 and the angle
θ of Disk 1. These angles reach their desired values with less oscillations and
with a faster rate of convergency. In addition, the control torque demanded by
the controller NLPID2 looks less demanding and smoother than that of the

Passivity-Based Control Design and Experiments . . .
253
−1.5
−1
−0.5
0
0.5
1
Torque [Nm]
0
5
10
15
20
25
30
Time [s]
35
Fig. 27. Time history of the control torque
controllers NLPI and NLPID1. As one may expect, all these beneﬁts are at
expenses of a more complex controller.
The simulations presented in Sect. 4.6 show that the controller NLPID2 can
also track an angle ramp reference for the Disk 1 while keeping the Disk 2 at
the balancing position. The integral action of the controller reject the action
of constant matched disturbance while ensuring stability. The simulations show
that the control system can follow a continuous proﬁle of ramps and constant
references for the actuated Disk without losing balancing of the non-actuated
Disk.
The experiments of the disk-on-disk prototype described in Sects. 4.3, 4.4 and
4.5 were recorded and are summarize in a multimedia video that can be watched
on https://youtu.be/B0k8JtYZjrY.
5
Conclusion
In this chapter, we present an IDA-PBC controllers for the disk-on-disk system
that is robust to constant matched disturbances. This controller is able to track
ramp references for the angle of the actuated disk while keeping the balance
of the non-actuated disk. The stabilization of constant angles for the actuated
disk can be considered as a particular case of the ramp reference. We also show
simulations and experimental results to evaluate the performance of the control
system and evaluate the applicability of nonlinear control techniques based on
passivity in a real setup. The robust IDA-PBC proposed in this work exhibit very
good performance in both simulations and experiments, which validate the use
of this technique on a practical application. Future research will aim to design
controllers for more complex robotic systems performing more involved tasks.

254
A. Donaire et al.
Acknowledgements. This work was partially supported by the RoDyMan project,
which has received funding from the European Research Council FP7 Ideas under
Advanced Grant agreement number 320992. The authors are solely responsible for the
content of this manuscript. The work of the second author at PRISMA Lab was support
by the National University of Rosario, Argentina, under its internship program.
References
1. Crespo, M., Donaire, A., Ruggiero, F., Lippiello, V., Siciliano, B.: Design, imple-
mentation and experiments of a robust passivity-based controller for a rolling-
balancing system. In: International Conference on Informatics in Control, Automa-
tion and Robotics, Lisbon, Portugal (2016)
2. Donaire, A., Junco, S.: On the addition of integral action to port-controlled Hamil-
tonian systems. Automatica 45, 1910–1916 (2009)
3. Donaire, A., Romero, J.G., Ortega, R., Siciliano, B., Crespo, M.: Robust IDA-
PBC for underactuated mechanical systems subject to matched disturbances. Int.
J. Robust Nonlinear Control (in press, 2016)
4. Donaire, A., Ruggiero, F., Buonocore, L.R., Lippiello, V., Siciliano, B.: Passivity-
based control for a rolling-balancing system: the nonprehensile disk-on-disk. IEEE
Trans. Control Syst. Technol. (accepted, 2016)
5. Haddad, W., Chellaboina, V.: Nonlinear Dynamical Systems and Control. A
Lyapunov-Based Approach. Princeton University Press, New Jersey (2007)
6. Khalil, H.K.: Nonlinear Systems. Prentice Hall (2002)
7. Lanczos, C.: The Variational Principles of Mechanics. University of Toronto Press
(1960)
8. Lippiello, V., Ruggiero, F., Siciliano, B.: The eﬀects of shapes in input-state lin-
earization for stabilization of nonprehensile planar rolling dynamic manipulation.
IEEE Robot. Autom. Lett. 1(1), 492–499 (2016)
9. Merkin, D.: Introduction to the Theory of Stability. Springer, New York (1997)
10. Ortega, R., Romero, J.G.: Robust integral control of port-Hamiltonian systems:
the case of non-passive outputs with unmatched disturbances. Syst. Control Lett.
61(1), 11–17 (2012)
11. Ortega, R., Lor´ıa, A., Nicklasson, P.J., Sira-Ram´ırez, H.: Passivity-Based Control
of Euler-Lagrange Systems: Mechanical, Electrical, and Electromechanical Appli-
cations. Springer, London (1998)
12. Ortega, R., Spong, M.W., Gomez-Estern, F., Blankenstein, G.: Stabilization of a
class of underactuated mechanical systems via interconnection and damping assign-
ment. IEEE Trans. Autom. Control 47(8), 1218–1233 (2002)
13. Ortega, R., Donaire, A., Romero, J.G.: Passivity-Based Control of Mechanical Sys-
tems. Lecture Notes in Control and Information Sciences. Springer, Berlin (2016)
14. Romero, J.G., Donaire, A., Ortega, R.: Robust energy shaping contorl of mechan-
ical systems. Syst. Control Lett. 62(9), 770–780 (2013)
15. Romero, J.G., Ortega, R., Donaire, A.: Energy shaping of mechanical systems via
PID control and extension to constant speed tracking. IEEE Trans. Autom. Control
61(11), 3551–3556 (2016)
16. Ryu, J.C., Ruggiero, F., Lynch, K.M.: Control of nonprehensile rolling manipula-
tion: balancing a disk on a disk. IEEE Trans. Robot. 29(5), 1152–1161 (2013)

Passivity-Based Control Design and Experiments . . .
255
17. Siciliano, B., Sciavicco, L., Villani, L., Oriolo, G.: Robotics. Modelling, Planning
and Control. Springer, London (2009)
18. Spong, M., Hutchinson, S., Vidyasagar, M.: Robot Modeling and Control. Wiley,
USA (2006)
19. van der Schaft, A.J.: L2-Gain and Passivity Techniques in Nonlinear Control.
Springer, Berlin (2000)

Time-Optimal Paths for a Robotic Batting Task
Diana Serra1(B), Fabio Ruggiero1, Aykut C. Satici2, Vincenzo Lippiello1,
and Bruno Siciliano1
1 Department of Electrical Engineering and Information Technology, University of
Naples Federico II, Via Claudio 21, 80125 Naples, Italy
diana.serra@unina.it
2 Electrical Engineering and Computer Science, Massachusetts Institute of
Technology, 32 Vassar Street, Cambridge, MA, USA
Abstract. This paper presents a novel method to optimize the motion
of a paddle within a nonprehensile batting task. The proposed approach
shows that it is possible to online predict the impact time and the con-
ﬁguration of the paddle, in terms of its linear velocity and orientation, to
re-direct a ball towards a desired location, imposing also a desired spin
during the free ﬂight. While exploiting the hybrid dynamics of the task
during the minimization process, the obtained position and orientation
paths are planned by minimizing the acceleration function of the paddle
in SE(3). The batting paths are then tracked by a semi-humanoid robot
through a closed-loop kinematic inversion. Numerical tests are imple-
mented to compare diﬀerent metrics to deﬁne the optimal impact time.
Keywords: Optimal trajectory planning · Robotic batting task ·
Dynamic nonprehensile manipulation
1
Introduction
Research in the ﬁeld of dynamic nonprehensile manipulation is essential to
achieve robots with human-like task execution capabilities. Humans can indeed
perform several nonprehensile manipulation actions everyday, both with and
without hands, such as pushing objects, folding clothes, serving a dish on a tray,
ﬂipping a pancake in a pan, or rolling in a wok. A general taxonomy about
manipulation is presented in [1], where four main categories emerge: kinematic,
static, quasi-static and dynamic manipulation. Kinematic manipulation is often
related to slow tasks: motion of the object can be retrieved by movements of the
robotic hand and its kinematics. Static manipulation, instead, can be studied
using both kinematics and static forces, while quasi-static manipulation makes
use of quasi-static forces (such as frictional forces) in the formulation. Within
dynamic manipulation, instead, a relevant role is played by forces and accelera-
tions which are used together with kinematics, static and quasi-static forces, to
achieve a general description of a manipulation task.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_13

Time-Optimal Paths for a Robotic Batting Task
257
Dynamic nonprehensile manipulation oﬀers some potential advantages, such
as [2]: reduction of the task execution time; extension of the workspace of the
robot; increased dexterity of the robotic system; cheap and simple design of
grippers; minimal deformation of the manipulated objects, and so on. On the
other hand, the complexity of such nonprehensile tasks leads to adopt a “divide
et impera” strategy for motion planning and control. This means to split the
complex task in simpler primitives of motion, and design a motion planner for
each of them separately. A supervisory controller is then assumed to identify
the primitives that compose the task and switch between them. Batting, throw-
ing, catching, rolling, sliding are typical examples of nonprehensile manipulation
primitives [3].
1.1
Overview and Outline of the Paper
In this paper, the focus is on the design of an optimal motion planner for one of
the above mentioned nonprehensile manipulation primitives, the batting one. The
batting primitive is an agile nonprehensile manipulation task that is typically
used by athletes in sports like baseball, cricket, or table tennis. It deﬁnitely repre-
sents an engaging challenge for existing robotic software and hardware resources,
because of its inherent unpredictability, velocity, and complexity. A novel app-
roach to derive the optimal path for a semi-humanoid robot to bat a ball with
a paddle and direct it to a desired location is here proposed. As displayed in
Fig. 1, the considered application is the table tennis game. The same application
is considered in [4], where an algorithm to select position and velocity of the
Fig. 1. Semi-humanoid playing table tennis in the V-Rep simulation environment

258
D. Serra et al.
paddle is designed so as to intercept the upcoming ball. The minimum acceler-
ation path for the paddle accomplishing the batting task is planned considering
a predeﬁned impact time. The technique presented in [4] improves the control
accuracy in comparison to the state of the art by considering a full aerodynamic
model of the ball, and taking into account drag and lift forces; additionally,
it requires a computation time comparable to real-time. In detail, the approach
consists of two main phases. In the former phase, position, orientation and linear
velocity of the paddle are computed at the predeﬁned impact time, such that the
goal of driving back the ball towards the other paddle is satisﬁed. Then, in the
latter phase, an optimization of the path in SE(3) gives the angular and linear
trajectory of the paddle up to the predeﬁned impact time. In this work, instead,
an extension of the algorithm proposed in [4] is presented. The assumption of
having a constant predeﬁned impact time is relaxed, while diﬀerent metrics are
compared to deﬁne the optimal impact time. Numerical tests are implemented
to evaluate the algorithm.
The paper is organized as follows. Section 2 presents the state of the art about
planning methods for the batting motion, typically applied to the robotic table
tennis game. Section 3 introduces the hybrid dynamics of the system. Section 4
presents the workﬂow of the proposed batting algorithm, and describes the
method employed for predicting the state of the ball at the impact time, and
the following computation of the desired conﬁguration of the paddle. The details
about the minimum acceleration planner in SE(3) for the paddle are introduced
in Sect. 5. Section 6 shows the numerical evaluation of the diﬀerent versions of
the algorithm, and its application to a semi-humanoid robot equipped with a
paddle as an end-eﬀector. Finally, Sect. 7 concludes the paper.
2
State of the Art About the Robotic Batting Primitive
One of the ﬁrst real-time table tennis robot prototype is proposed by Andersson
in [5]. It is built on a commercial PUMA 260 robot arm, which is a 5 degrees
of freedom (DoF) industrial robot. In [6], the same author employs ﬁfth-order
polynomials to generate a trajectory for the paddle intercepting the ball. The
trajectory of the arm of the robot is adjusted while the ball is in free ﬂight
through a sensor-driven approach. A low-cost ping-pong player prototype is pro-
posed in [7]. The authors propose to detect the location of the ball combining
the information about the ball and its shadow on the table. An expert module
deﬁnes the desired return point for the ball. A high-speed trajectory planner is
presented in [8], where the authors propose to split the motion in two phases: a
high speed phase and a reactive one, named swing and hitting motion, respec-
tively. The hitting point is estimated before the impact, while the batting task
is accomplished by modifying this point through a visual feedback. An app-
roach to keep stability of a biped humanoid robot while playing table tennis
is presented in [9]. In that work, an optimal momentum compensation method
using lower body joints to cancel the momentum generated by arms is discussed.
The authors of [10] propose an algorithm for returning a table tennis ball to a

Time-Optimal Paths for a Robotic Batting Task
259
desired position with a desired spin. An approximated hybrid aerodynamics of
the ball is exploited to compute the conﬁguration of the paddle at impact time
to accomplish the batting task.
In the ﬁeld of artiﬁcial intelligence, learning techniques exploiting data-driven
perspectives instead of inverse kinematics and physical models are often applied
to the robotic table tennis game, through oﬄine training of the system. The
study shown in [11] predicts the ball trajectory using a fuzzy adaptive resonance
theory network, and self-learns the behavior for each strike using a reinforce-
ment learning network imitating human learning behavior. The work presented
in [12] shows instead some experiments on two humanoid robots playing ping
pong. The approach employs an adjustment of the trajectory prediction from
an oﬄine training of the model parameters based on a neural network. In [13],
the robot ﬁrst learns a set of elementary table tennis hitting movements from
a human teacher, and then it generalizes those movements in a wider range of
situations using a mixture of motor primitives approach. The authors of [14]
present an active learning approach, where the initial parameters of the paddle
are computed through a locally weighted regression method. In [15], the authors
ﬁnd optimal striking points for a table tennis robot. The choice is based on a
reward function, measuring how well the trajectory of the ball and the move-
ment of the paddle coincide. Given the striking point, a stochastic policy over
the reward is derived to evaluate prospective striking points sampled from the
predicted rebound trajectory. In that approach, the resulting learning method
takes into account the amount of experience data and its conﬁdence. The work
in [16] presents an approach for robotic table tennis game consisting in two
stages: a ﬁrst regression phase, in which the joint trajectories are generated to
strike the incoming ball, and a second reinforcement learning phase, where the
joint trajectories are updated to properly return the ball. The authors of [17]
present a probabilistic approach to intercept a table tennis ball in space. A prob-
abilistic representation is employed to ﬁnd the initial time and the duration of
the movement primitive maximizing the likelihood of hitting the ball.
Moreover, aerial robotics researchers have also been interested in planning
the motion of an aerial vehicle to implement the batting motion primitive. An
algorithm to generate an open loop trajectory guiding a prototype quadcopter to
a predicted impact point is proposed in [18] by exploiting a Kalman ﬁlter. The
authors of [19] implement the hitting primitive on a commercial drone. Finally, a
trajectory tracking control strategy for a ball juggling task on a quadrotor, based
on the subspace stabilization approach, is presented in [20]. An optimal trajec-
tory generation method is adopted to obtain a dynamically feasible minimum
jerk trajectory.
3
Hybrid Dynamic Equations of the System
The main methodology employed in this work consists in an optimization based
planning of the robot trajectories using the hybrid dynamic model of the ball
together with the motion of the paddle. The analytic model here considered for

260
D. Serra et al.
the hybrid ball and paddle dynamics is derived in [4]. The hybrid dynamics of
the ball is made up of the free fall and the rebound equations. Since the mass of
the ball is usually smaller than the mass of the paddle, the velocity of the paddle
is assumed to be not aﬀected by the collision: therefore, the rebound equations
are only related to velocity of the ball. Additionally, a point contact is assumed
between the ball and the paddle at impact time. Other assumptions related to
the hybrid model of the ball motion are detailed in [21].
Let ΣW be the world frame, ΣB be the frame placed at the center of the ball,
and ΣP be the frame placed at the center of the paddle, with the z-axis as the
outward normal. Let pB =

pBx pBy pBz
T ∈R3, vB =

vBx vBy vBz
T ∈R3
and ωB =

ωBx ωBy ωBz
T ∈R3 be the position, linear velocity and spin of the
ball, respectively, with respect to ΣW . The spin of the ball is assumed to be con-
stant before and after the rebound. Moreover, let pP =

pP x pP y pP z
T ∈R3,
vP =

vP x vP y vP z
T ∈R3 and ωP =

ωP x ωP y ωP z
T ∈R3 be the position, lin-
ear and angular velocity of the paddle, respectively, all expressed in ΣW . Finally,
let RP ∈SO(3) be the rotation matrix of ΣP with respect to ΣW . Assuming
that the drag and lift coeﬃcients kd and kl, respectively, are represented by
kd =
1
2mρπr2(κd
1 + κd
2μ),
kl = 1
mρ4πr3(κl
1 + κl
2μ),
(1)
where
μ =

1 +
(v2
Bx + v2
Bx)ω2
Bz
(vBxωBy −vByωBx)2
−1
2
,
(2)
while the other symbols are listed in Table 1, the continuous ball and paddle
dynamics is given by
˙pB = vB,
(3a)
˙vB = −g −kd||vB||vB + klS(ωB)vB,
(3b)
˙pP = vP ,
(3c)
˙RP = RP S(ωP ),
(3d)
where g =
0 0 gT is the gravity acceleration, || · || is the Euclidean norm and
S(·) ∈R3×3 is the skew-symmetric matrix operator.
A method to identify the aerodynamic and rebound coeﬃcients for diﬀer-
ent kind of rebound materials is presented in [21]. Within this framework, the
aerodynamics of the ball (3b) models the magnitude of the drag and lift forces,
and the respective parameters depend on the spin of the ball. This last is thus
included in the formulation since it is relevant in the table tennis game, distin-
guishing an expert player form an amateur one. In particular, the type of spin is
identiﬁed by the sign of the components of ωB, i.e. topspin, if ωBy < 0, backspin,
if ωBy > 0, and sidespin, if ωBz > 0.

Time-Optimal Paths for a Robotic Batting Task
261
Table 1. List of symbols
r
Radius of the ball
rp
Radius of the paddle
m
Mass of the ball
ρ
Density of the air at (25 ◦C)
g
Gravity constant
εv
Velocity rebound coeﬃcient
εω
Spin rebound coeﬃcient
εr
Linear rebound coeﬃcient
κd
1
Drag coeﬃcient
κd
2
Drag coeﬃcient
κl
1
Lift coeﬃcient
κl
2
Lift coeﬃcient
ζd
Simpliﬁed drag coeﬃcient
Assuming that the superscripts −and + represent the state before and after
the impact time, respectively, the linear and angular velocity of the ball after
the impact can be retrieved from
v+
B = vP + RP AvvRT
P (v−
B −vP ) + RP AvωRT
P ω−
B,
(4a)
ω+
B = RP AωvRT
P (v−
B −vP ) + RP AωωRT
P ω−
B,
(4b)
where the matrices of rebound parameters are deﬁned as
Avv = diag(1 −εv, 1 −εv, εr), Avω = −εvrS(e3),
(5)
Aωv = εωrS(e3), Aωω = diag(1 −εωr2, 1 −εωr2, 1),
and εv and εw are detailed in Table 1, whereas ei ∈R3 is the unit vector along
the ith-axis, i = {1, 2, 3}.
Notice that the hybrid system (3) and (4) is characterized by the fact that
its input, corresponding to the paddle linear and angular velocities, enters the
ball dynamics exclusively through the rebound Eq. (4) since, as stated above,
the paddle can modify the ball velocity only at impact time.
4
Time-Optimal Prediction
4.1
Workﬂow of the Algorithm
In order to generate the optimal motion for the paddle to bat a table tennis ball
towards a desired position with a desired spin, the paddle has to intercept the
ball with a speciﬁc orientation and velocity. The algorithm to realize such batting

262
D. Serra et al.
Fig. 2. Graphic representation of the stages of the algorithm
motion primitive can be roughly divided in three main phases: the prediction of
the motion of the ball, the selection of the conﬁguration of the paddle at impact
time, and the trajectory planning for the paddle. A graphical representation of
the phases generating the optimal path for the paddle is showed in Fig. 2.
1. In
the
ﬁrst
stage,
the
impact
time
ti,
the
impacting
position
pi
B =
pi
Bx pi
By pi
Bz
T ∈R3 and the pre-impact velocity v−
B of the ball
are predicted assuming to know the initial position of the ball p0
B
=
p0
Bx p0
By p0
Bz
T ∈R3 and its linear and angular velocity, respectively, v0
B =
v0
Bx v0
By v0
Bz
T ∈R3 and ω0
B =
ω0
Bx ω0
By ω0
Bz
T ∈R3. These are produced
by the opponent’s hit and obtained from the visual measurement system. This
step is accomplished by solving forward the model (3a) and (3b). Notice that
the main novelty of the paper is introduced in this ﬁrst stage: the impact time
is not a priori deﬁned, as in [4], but it is predicted online. Afterwards, choos-
ing the goal conﬁguration of the ball given by pd
B =
pd
Bx pd
By pd
Bz
T ∈R3,
ω+d
B ∈R3, and the desired ﬁnal time td, the post-impact velocity of the ball
v+
B ∈R3 is obtained through the backward solution of (3a) and (3b).
2. In the second stage, once the spin and velocity of the ball before and after
the impact are computed from the previous stage, the algorithm selects the
orientation Ri
P and the velocity vi
P of the paddle at impact time through the
solution of the reset map (4).

Time-Optimal Paths for a Robotic Batting Task
263
3. In the third stage, the optimal trajectory planner for the paddle receives
as input the desired conﬁguration of the paddle at impact time. A bound-
ary value problem is solved to compute the linear and angular trajectories
of the paddle without specifying any representation of the angular coordi-
nates. At this point, the linear and angular path of the paddle, namely
pP (t), vP (t), RP (t), ωP (t), can be tracked by the end eﬀector of the semi-
humanoid robot with a classical second order closed loop kinematic inver-
sion [22].
In the following, the accurate description of the ﬁrst two stages will be carried
out. Section 5 is instead entirely devoted to present the third stage.
4.2
Stage 1: Prediction of the Impacting Time, Position
and Velocities of the Ball
In order to predict the impact time and position of the ball, and its linear
pre- and post-impact velocity such that it reaches the desired location after the
batting action, the Eqs. (3a) and (3b) of the aerodynamic model are employed.
However, this model is nonlinear and coupled, thus an analytic solution does not
exist. Other approaches such as in [7] and in [18] employ linearized or simpliﬁed
models with the aim to cut down the elaboration time. For example, the following
simpliﬁed model of (3a) and (3b) is employed in [10] since it directly provides
an analytic solution
˙vBx = −ζd|vBx|vBx,
˙pBx = vBx,
(6a)
˙vBy = −ζd|vBy|vBy,
˙pBy = vBy,
(6b)
˙vBz = −g,
˙pBz = vBz,
(6c)
where ζd =
ρ
2mπr2kd, with kd considered as a suitable constant coeﬃcient. The
approach here proposed goes instead in a diﬀerent direction: it exploits a proper
numerical solver suitable for real-time processing.
Three diﬀerent optimization problems are considered to predict the impact
time and position of the ball, as well as its velocity before the rebound. The
general methodology consists in the solution of nonlinear curve ﬁtting problems.
Prediction with a Predeﬁned Impact Time. A ﬁrst approach to predict
the impact position and the pre-impact velocity of the ball is showed in [4].
By assigning the impact time, the impact conﬁguration of the ball is predicted
according to its initial position and velocity produced by the opponent’s hit. The
following minimization problem is then considered
min
pi
B,v−
B


p0
B
v0
B
	
−

p0
B
v0
B
	 

2
,
(7)
where pi
B and v−
B are the optimizing variables, p0
B = p0
B(pi
B, v−
B) and v0
B = v0
B
(pi
B, v−
B) are the position and the velocity of the ball at the initial time t0, respec-
tively, numerically obtained by backward integrating (3a) and (3b) starting from

264
D. Serra et al.
the optimization variables pi
B, v−
B at the predeﬁned impact time ti. In this case,
the determination of the impact position and pre-impact velocity of the ball is
addressed at run-time, diﬀerently from other approaches in the literature, such
as [10,23].
Prediction of a Variable Impact Time. In a second possible optimization
problem the impact time is predicted as well as the impact position and the
pre-impact velocity of the ball. Starting from the initial state of the ball, the
following minimization problem is equivalent to (7) but it includes the impact
time as a decision variable
min
ti,pi
B,v−
B


p0
B
v0
B
	
−

p0
B
v0
B
	 

2
.
(8)
In this case, the resulting impact time is optimized in the sense that it best ﬁts
the numerical curve.
Prediction of a Variable Impact Time Minimizing the Motion of the
Paddle. The third possible approach consists in the computation of the impact
time minimizing the distance between the initial position of the paddle and its
impact position. The following minimization problem is thus considered
min
ti,pi
B,v−
B
||pi
B −p0
P ||2,
(9)
where pi
B = pi
B(p0
B, v0
B) is the position of the ball at impact time numerically
obtained by forward integrating (3a) and (3b) starting from the optimization
variables p0
B, v0
B at time t0. In this case, the resulting impact time is optimized
in the sense that the paddle travels the shortest distance to intercept the ball.
Therefore, the introduction of this metric in the prediction stage allows not only
to predict the position of the ball and its pre-impact velocity but even, more
interestingly, to optimize the impact time with respect to the length of the path
that the paddle should cover.
Another optimization is considered in order to compute the post-impact
velocity of the ball v+
B such that it reaches the goal pd
B at the desired time
td. The following curve ﬁtting is implemented
min
v+
B
∥pd
B(v+
B) −pd
B∥2,
(10)
where v+
B is the decision variable, and pd
B(v+
B) is the position of the ball at time
td, numerically obtained by forward integrating (3a) and (3b) starting from the
ball position pi
B at impact time ti, computed through one of the metrics given
above. This solution ensures that the post-impact motion of the ball is such that
it reaches the desired location at the time td as close as possible. An initial guess

Time-Optimal Paths for a Robotic Batting Task
265
for the solution of the minimization problem (10) is analytically calculated from
(6) as
v+
Bx = (pd
Bx −pi
Bx)(eζd|pd
Bx−pi
Bx| −1)
ζd|pd
Bx −pi
Bx|(td −ti)
,
(11a)
v+
By =
(pd
By −pi
By)(eζd|pd
By−pi
By| −1)
ζd|pd
By −pi
By|(td −ti)
,
(11b)
v+
Bz = −g(td −ti)
2
+ pd
Bz −pi
Bz
td −ti
.
(11c)
4.3
Stage 2: Desired Conﬁguration of the Paddle at Impact
Once the impact time ti, the impact position pi
B of the ball and its pre- and
post-impact velocities, v−
B and v+
B respectively, are computed as in Sect. 4.2, the
paddle conﬁguration is derived solving the rebound model of the ball.
Consider the YX-Euler angles (θ, φ) as a parametric representation of the
orientation of the paddle, with φ ∈[−π/2, π/2] and θ ∈[0, π], and deﬁne ˜v =

˜vx ˜vy ˜vz
T = v+
B −v−
B and ˜ω =

˜ωx ˜ωy ˜ωz
T = ω+d
B −ω−
B. The velocity and
orientation of the paddle at impact time are respectively computed through
vi
P = v−
B + Ri
P (I3 −Avv)−1(RiT
P ˜v −Avωω−
B),
(12a)
Ri
P = RY (θ)RX(φ),
(12b)
where I3 ∈R3×3 is the identity matrix, Ri(·) ∈SO(3) is the elementary rotation
matrix with i = {X, Y }, representing the rotation of an angle around the i-axis,
and θ, φ are such that
˜vz cos φ sin θ −˜vx cos φ cos θ = ˜ωy,
(13a)
e2
c||˜v||2 sin2 φ −2ece2S(˜v)˜ω sin φ + (e1 + e3)||˜ω||2 −ece2||˜v||2 = 0,
(13b)
where ec = εωr/εv, and the other symbols are listed in Table 1. In order to obtain
a well-posed solution of the reset map, the ball motions must comply with the
Proposition 1 in Sect. III -A of [10].
5
Minimum Acceleration Path in SE(3)
The third stage of the workﬂow of the proposed algorithm is described in this
section. In detail, the generation of an optimal trajectory in SE(3) for the paddle
is addressed. By knowing the initial conﬁguration of the paddle, and after having
computed its desired conﬁguration at the impact (see Sect. 4.3), many diﬀerent
paths and trajectories can be followed to fulﬁll the requirements. A wiser method
would be to found this path such that a certain objective function is optimized.
As in [4], the optimization of the acceleration functional of the paddle along the
path in SE(3) is pursued. In the following, a brief background about diﬀerential
geometry is provided. Afterwards, the theory about the minimum acceleration
planner for the paddle is reported.

266
D. Serra et al.
5.1
Brief Background About Diﬀerential Geometry
Within this context, trajectories for which it is possible to specify both the initial
and ﬁnal position and velocity are of interest. The motion can be speciﬁed in
either the joint space, which is a torus, or the task space, which is SE(3). At this
stage, to be general, it is assumed that the path is generated on an arbitrary
Riemannian manifold M (see [24] for more details).
Let γ : (a, b) −→M be the path, and ⟨⟨·, ·⟩⟩be the metric on M. Let f :
(−ϵ, ϵ) × (a, b) −→M be a proper variation of γ satisfying
f(0, t) = γ(t), ∀t ∈(a, b),
f(s, a) = γ(a),
and
f(s, b) = γ(b).
Two vector ﬁelds are relevant along the path γ. The former is the variation ﬁeld
which is deﬁned by
Sγ(s) := ∂f(s, t)
∂s
= dft(s)
ds
.
The latter is the velocity vector ﬁeld of γ, given by
Vγ(s) := dγ(t)
dt
= ∂f(s, t)
∂t
= dfs(t)
dt
.
Hence, the Levi-Civita connection ∇is introduced to perform calculus on the
curves of M. Therefore, given a curve γ(t) and a connection, there exists a
covariant derivative denoted by
D
dt.
The Levi-Civita connection satisﬁes the following compatibility and symme-
try conditions:
d
dt⟨⟨U, W⟩⟩= ⟨⟨DU
dt , W⟩⟩+ ⟨⟨U, DW
dt ⟩⟩,
(14a)
∇XY −∇Y X = [X, Y ],
(14b)
for any vector ﬁelds U and W, along the diﬀerentiable curve γ, and any vector
ﬁeld X, Y ∈X(M), where X(M) is the set of all vector ﬁelds on M.
The curvature R of a Riemannian manifold M associates to every pair X, Y ∈
X(M) a mapping R(X, Y ) : X(M) −→X(M) given by
R(X, Y )Z = ∇Y ∇XZ −∇X∇Y Z + ∇[X,Y ]Z,
where Z ∈X(M). In the next subsection, the following properties related to the
curvature are employed
D
∂t
D
∂sX −D
∂s
D
∂tX = R
∂f
∂s , ∂f
∂t

X,
⟨R(X, Y )Z, T⟩= ⟨R(Z, Y )X, Y ⟩.

Time-Optimal Paths for a Robotic Batting Task
267
5.2
Optimized Path Planning in SE(3)
Following the theory developed in [25], the following acceleration function along
the path of the paddle in SE(3) is minimized within the proposed framework
J =

 tb
ta
⟨∇V V, ∇V V⟩dt,
(15)
where [ta, tb] is the time interval over which the trajectory is planned, V =
(ωP , vP ) ∈se(3) is the velocity of the paddle along a particular path, and ∇
denotes the Levi-Civita aﬃne connection derived from a particular choice of
metric on SE(3). This latter object allows the diﬀerentiation along curves on
any smooth manifold. In particular, the inner product of the acceleration of a
particular path with itself is expressed in (15): this may also be identiﬁed by the
squared norm of the acceleration of this path at a particular point. Choosing the
metric on SE(3) as
W =

αI3 0
0 βI3
	
,
where α, β > 0 so that for T1, T2 ∈se(3) then ⟨⟨T1, T2⟩⟩= tT
1 Wt2 with t1
and t2 the 6 × 1 components of T1 and T2, the Levi-Civita connection can be
expressed by
∇XY =
 d
dtωy + 1
2ωx × ωy, dvy
dt + ωx × vy

,
where ωx and ωy are the angular components and vx and vy are the linear
components of the rigid body velocities X ∈se(3) and Y ∈se(3), respectively.
In order to have necessary conditions to ﬁnd a path minimizing the acceler-
ation function, the ﬁrst variation of such a cost (15) has to be equated to zero.
This yields a fourth order boundary problem given by
∇V ∇V ∇V V + R (V, ∇V V) V = 0,
(16)
where R is the curvature tensor associated with the Levi-Civita aﬃne connec-
tion [24]. Notice that it is possible to write down (16) in terms of the angular
and linear velocity components of the paddle as
ω(3)
P + ωP × ¨ωP = 0,
(17a)
p(4)
P
= 0,
(17b)
where (·)(n) denotes the nth derivative of (·). The obtained ordinary diﬀerential
equations (17) turn into a well-deﬁned boundary value problem with the addition
of the boundary conditions. Regarding the rotational path (17a), such boundary
conditions are
RP (ta) = R0
P
ωP (ta) = ω0
P ,
(18a)
RP (tb) = Ri
P ,
ωP (tb) = ωi
P ,
(18b)

268
D. Serra et al.
where R0
P and ω0
P are the initial orientation and angular velocity of the paddle,
respectively. On the other hand, regarding the translational path (17b), the
boundary conditions are
pP (ta) = p0
P
vP (ta) = v0
P ,
(19a)
pP (tb) = pi
P
vP (tb) = vi
P ,
(19b)
Notice that in the practice, the optimal translational motion of the paddle
is found by merely solving a small scale linear system of equations obtained
by (17b) and (19): this may be performed very fast from an elaboration time
point of view. Nevertheless, in order to determine the rotary motion of the
paddle, a boundary value problem needs to be solved. In general, a boundary
value problem is nonlinear and time invariant, but the forcing function (17a) is
hardly complicated. The computational burden of the proposed planner for an
optimal trajectory of the paddle is analyzed within Sect. 6.3.
6
Simulations
This section presents a discussion about the numerical evaluation of the batting
algorithm. The three metrics introduced in Sect. 4.2 are taken into account. In
detail, Sect. 6.1 shows an exemplar simulation of the proposed technique with a
predeﬁned impact time. Section 6.2 describes instead the evaluation of the app-
roach with the prediction of a variable impact time using the last two metrics (8)
and (9) in Sect. 4.2. Finally, Sect. 6.3 presents some tests focused on the paddle
motion to underline the properties of the planned trajectories.
The values of the parameters of the dynamic model considered to simulate the
physical system (3) and (4) are listed in Table 2 [4]. The Matlab environment
is used for numerical tests. For the hybrid dynamics, the ode45 solver, with
the events option, is employed. The lsqcurvefit function, which is based on
the Levembert-Marquardt’s algorithm, is adopted to solve the nonlinear curve
ﬁttings. The boundary value problem, for the minimum acceleration planner,
is solved through the bvp4c function. In this work, the Levembert-Marquardt’s
Table 2. Numerical values of the considered parameters of the hybrid dynamic model
r
2e-2 m
rp
1.5e-1 m
m
2.7e-3 kg
ρ
1.184
kg/m3
g
9.81 m/s2
κd
1
5.05e-1
κd
2
6.5e-2
κl
1
9.4e-2
κl
2
-2.6e-2
εv
6.15e-1
εω
2.57e3
εr
7.3e-1
ζd
5.4e-1

Time-Optimal Paths for a Robotic Batting Task
269
algorithm is employed to solve the nonlinear least squares problems (7)–(9) since
it guarantees small elaboration time, as explained in [26,27]. In order to speed up
the convergence of the optimization problems, the initial guess for the solution
is obtained solving analytically the approximated model (11).
6.1
Evaluation of the Batting Motion Planner
with a Predeﬁned Impact Time
In this case study the proposed algorithm, depicted in Fig. 2, is simulated consid-
ering a constant predeﬁned impact time. Then, supposing to have at disposition
the estimated trajectory of the ball from the visual system and the desired ﬁnal
conﬁguration of the ball, the optimal paddle trajectory is derived through the
two minimization problems (7) and (10), and the solution of (12) and (17).
In particular, the initial state of the ball is assumed to be equal to
p0
B =

1.2, 0.7, 0.9

m, v0
B =

−3, 0.2, 1.5

m/s and ω−
B =

0, 150, 0

. The
impact time is ﬁxed to ti = 0.5 s and the goal position of the ball after the
rebound is assigned as pd
B =

1.9, 0.8, 0.02

m. The desired ﬁnal time corre-
sponds to td = 0.6 s, and the post-impact spin of the ball to
ω+
By, ω+
Bz

=
−100, 0
rad/s. The term ω+d
B
derives from the expression ˜vT
B ˜ωB = 0. Notice
that the actual ﬁnal time is evaluated when the third component of the position
vector of the ball corresponds to the radius of the ball.
With these hypothesis, solving (7) yields pi
B =
−0.1394, 0.7892, 0.4820
m
and v−
B =

−2.4156, 0.1570, −2.9788

m/s, while the solution of the minimiza-
tion (10) yields v+
B =

4.0516, 0.0214, 2.0984

m/s. Furthermore, the solution of
the rebound model (12) yields
Ri
p =
⎡
⎣
0.8614 0.0054 0.5080
0
0.9999 −0.0106
−0.5080 0.0092 0.8613
⎤
⎦,
and vi
P =
1.4388, 0.0220, −0.1131
m/s. Afterwards, the minimum acceleration
trajectory for the paddle is planned employing (17).
Let Δti be the error between the predeﬁned impact time and the one obtained
during the simulation through the ode45 solver together with the events option.
Let Δpi
B be the Euclidean norm of the error between the planned and actual
impact position of the ball, Δtd be the error between the predeﬁned and actual
ﬁnal time td, Δpd
B be the Euclidean norm of the error between the goal position
of the ball and the actual one. The ﬁrst row of Table 3 shows these errors in case
of a predeﬁned impact time. Whereas, the resulting plots are depicted in Fig. 3.
In particular, the 3D trajectories of both the ball and the paddle are represented
in Fig. 3a. The solid line represents the motion of the ball, while the trajectory
for the paddle is depicted by a dashed line. The blue cross represents the ﬁnal
desired position of the ball pd
B, while the blue circle is the initial position of the
paddle p0
P . A more detailed evaluation of the proposed batting algorithm with
ﬁxed impact time in case of sidespin, backspin, and topspin can be found in [4].

270
D. Serra et al.
Table 3. Comparison of the ﬁxed and optimized impact time prediction methods
Δti
Δpi
B
Δtd
Δpd
B
Fixed
impact
time
prediction
4.5e-3 s
1.73e-2 m
1.9e-3 s
9.4e-3 m
Optimal impact time
prediction
4e-3 s
1.69e-2 m
1.1e-3 s
1.33e-2 m
Moreover, a video which shows this simulation performed in Matlab in con-
nection with the V-Rep virtual simulation environment can be found in [28]. A 21
DoF semi-humanoid robot is used within this simulation. The 7 DoF right arm
is equipped with a parallel jaw gripper ﬁrmly grasping the paddle (see Fig. 1).
The rebound model of the ball with the table is given by [29], and a second order
closed loop kinematic inversion is implemented to map the planned Cartesian
variables to the joints space of the robot [22].
6.2
Evaluation of the Optimal Impact Time Prediction
In this case study, the same initial conﬁguration of the ball used in Sect. 6.1 is
considered, and the proposed algorithm is evaluated including the online predic-
tion of the impact time. The results obtained with the two prediction metrics
presented in Sect. 4.2 are here reported.
A ﬁrst test is done considering the minimization problem (8). In this case, the
solution of the prediction phase is ti = 0.5051 s, pi
B =

−0.1516, 0.79, 0.4668

m,
and v−
B =
−2.4105, 0.1565, −3.0174
m/s. The obtained result is not substan-
tially diﬀerent from the one got from the simulation considering a pre-deﬁned
impact time. For this reason, ﬁgures for this case are not included.
Whereas, another test is done solving (9), (10), (12), and (17). In
this case, the solution of
(9) is pi
B
=

−0.3141, 0.8, 0.243

m, v−
B
=

−2.34, 0.1498, −3.521

m/s, and ti = 0.5735 s. The predicted impact time guar-
antees that the paddle follows the minimum length path to intercept the ball.
The plots resulting from this test are displayed in Fig. 4. The 3D paths of the
ball and the paddle are reported in Fig. 4a. The solid and dashed lines represent
the motion of ball and paddle, respectively. The blue cross identiﬁes the goal
position of the ball, whereas the blue circle is the initial position of the paddle.
The second row of Table 3 shows the values of Δti, Δpi
B, Δtd, and Δpd
B for this
numerical test. Now, Δti represents the error between the impact time resulting
from the minimization problem and the one obtained during the simulation. The
results point out that, even if the position error is slightly increased with respect
to the constant impact time prediction case, now the impact time and position
are planned online, and the ball hits the table at a time closer to the desired
one.

Time-Optimal Paths for a Robotic Batting Task
271
(a) 3D trajectories of the ball and the paddle (respectively solid and dashed
line) obtained from the predeﬁned impact time method. The blue circle repre-
sents the initial position of the paddle, while the blue cross identiﬁes the goal
position of the ball.
(b) Euclidean norm of the linear (top) and angular (center) velocity paths
planned for the paddle, and evaluation of the acceleration functional J in (15)
between the motion plan devised using the Euler angles and the optimal pro-
posed one (bottom). The red star represents the impact time ti .
Fig. 3. Simulation of the batting task with predeﬁned impact time

272
D. Serra et al.
(a) 3D trajectories of the ball and the paddle (respectively solid and dashed
line) obtained considering the optimal impact time method. The initial position
of the paddle is represented by the blue circle, while the goal position of the
ball is the blue cross.
(b) Euclidean norm of the linear (top) and angular (center) velocity planned
for the paddle, and evaluation of the acceleration functional J in (15) between
the motion plan devised using the Euler angles and the optimal one (bottom).
The red star represents the impact time
 
ti.
Fig. 4. Simulation of the batting task with optimal impact time

Time-Optimal Paths for a Robotic Batting Task
273
6.3
Discussion on the Minimum Acceleration Planner
In this section a discussion on the evaluation of the minimum acceleration
planner presented in Sect. 5 is reported. Without loss of generality, the pad-
dle is supposed to start at the origin of the world frame with initial orientation
R0
P = RY (π/2)RX(0) and zero velocity. The path is planned for the paddle
in the time interval [ta, tb] = [t0, ti −ϵ], with ϵ = 0.02 s. Following the batting
algorithm, the solution of the rebound model presented in Sect. 4.3 produces the
conﬁguration of the paddle at impact time. The Euclidean norm of the linear
and angular velocities of the paddle, planned with the minimum total accelera-
tion for the two above mentioned case studies, are respectively represented by
the top and middle plots in Figs. 3b and 4b.
Once the desired orientation is achieved with zero angular velocity, the angu-
lar acceleration is set to zero so that the orientation of the paddle remains the
same until the impact occurs. As long as one has the control authority at the
torque level, this control strategy, which switches only once, is straightforward
to implement. After the collision with the ball, in order to stop the paddle its
linear velocity is exponentially decreased with the function exp(−μ(t−(ti +δ))),
where μ = 50 and δ = 0.02.
The L2 norm of the acceleration of the paddle is found through the two-
point boundary value problem (17). Moreover, for comparison with these mini-
mum acceleration paths, third-order polynomials for Euler angles, φ and θ, are
considered. Initial and ﬁnal orientation and angular velocity constraints are cor-
respondingly imposed. The diﬀerence of the acceleration functional between the
motion plan devised using the Euler angles and the optimal motion planner is
displayed in the bottom plots of Figs. 3b and 4b. This diﬀerence is positive at
impact time, implying that the optimal motion plan undoubtedly generates a
smaller acceleration than typical polynomial paths on Euler angles.
Regarding computational eﬃciency, an analysis is done coding the algorithm
in C++ and evaluating it on a computer with speciﬁcations Intel Core 2 Quad
CPU Q6600 @ 2.4 GHz, Ubuntu 12.04 32-bit operating system, including the
Levenberg–Marquardt C++ library [30]. The analysis reveals that the boundary
value problem takes less than 30 ms. On account of this, as long as the vision
system provides the ball’s trajectory estimation, about 50 ms are necessary to
calculate the appropriate trajectory for the paddle. If this time constraint is
still excessively tight, after that the desired impact time, position, velocity and
orientation of the paddle are imposed, the paddle can be rapidly controlled
through a classical proportional-derivative controller, and revert to a trajectory
following controller at each time the planner generates the optimal path.
7
Conclusions and Future Work
The presented paper proposes a novel algorithm to plan a robotic batting task. In
this work, the table tennis is considered as application of the batting primitive.
Through the solutions of a two stages curve ﬁtting problem, the prediction of
the impact time, and of the impact state of the ball is implemented. Then, the

274
D. Serra et al.
conﬁguration of the paddle is generated to accomplish the goal of driving back
the ball towards a desired location. Finally, an optimization of the path in SE(3)
gives minimum angular acceleration and linear trajectory of the paddle up to
the impact time. Simulations in the Matlab/V-Rep environment validate the
approach.
Experiments on the real robotic prototype will follow in a short future. The
approach could also be integrated with advanced image processing techniques,
with the aim of increasing the potentiality of the visual measurement system.
Possible extensions of this work could be related to the application of the pro-
posed framework to other nonprehensile manipulation tasks, as in [31]. An evo-
lution of the algorithm could be conceived in combination with machine learning
techniques.
Acknowledgements. The research leading to these results has been supported by the
RoDyMan project, which has received funding from the European Research Council
FP7 Ideas under Advanced Grant agreement number 320992.
References
1. Mason, M.T., Lynch, K.M.: Dynamic manipulation. In: IEEE/RSJ International
Conference on Intelligent Robots and Systems, pp. 152–159. Tokyo, J (1993)
2. Lynch, K.M., Mason, M.T.: Dynamic nonprehensile manipulation: controllability,
planning, and experiments. Int. J. Robot. Res. 18(64), 64–92 (1999)
3. Serra, D.: Robot control for nonprehensile dynamic manipulation tasks. In: Inter-
national Conference on Informatics in Control, Automation and Robotics, Doctoral
Consortium, pp. 3–12. Lisbon, PT (2016)
4. Serra, D., Satici, A.C., Ruggiero, F., Lippiello, V., Siciliano, B.: An optimal trajec-
tory planner for a robotic batting task: the table tennis example. In: International
Conference on Informatics in Control, Automation and Robotics, pp. 90–101. Lis-
bon, P (2016)
5. Andersson, R.L.: A Robot Ping-Pong Player: Experiment in Real-Time Intelligent
Control. MIT Press, Cambridge (1988)
6. Andersson, R.L.: Aggressive trajectory generator for a robot ping-pong player.
IEEE Control Syst. Mag. 9(2), 15–21 (1989)
7. Acosta, L., Rodrigo, J.J., Mendez, J., Marichal, G.N., Sigut, M.: Ping-pong player
prototype. IEEE Robot. Autom. Mag. 10(4), 44–52 (2003)
8. Senoo, T., Namiki, A., Ishikawa, M.: Ball control in high-speed batting motion
using hybrid trajectory generator. In: IEEE International Conference on Robotics
and Automation, pp. 1762–1767. Orlando, FL, USA (2006)
9. Sun, Y., Xiong, R., Zhu, Q., Wu, J., Chu, J.: Balance motion generation for a
humanoid robot playing table tennis. In: IEEE-RAS International Conference on
Humanoid Robots, pp. 19–25. Bled, SI (2011)
10. Liu, C., Hayakawa, Y., Nakashima, A.: Racket control and its experiments for
robot playing table tennis. In: IEEE International Conference on Robotics and
Biomimetics, pp. 241–246. Guangzhou, CN (2012)
11. Lai, C.H., Tsay, T.I.J.: Self-learning for a humanoid robotic ping-pong player. Adv.
Robot. 25(9–10), 1183–1208 (2011)

Time-Optimal Paths for a Robotic Batting Task
275
12. Zhang, Y., Xiong, R., Zhao, Y., Chu, J.: An adaptive trajectory prediction method
for ping-pong robots. Intelligent Robotics and Applications, pp. 448–459. Springer,
Berlin (2012)
13. M¨ulling, K., Kober, J., Kroemer, O., Peters, J.: Learning to select and generalize
striking movements in robot table tennis. Int. J. Robot. Res. 32(3), 263–279 (2013)
14. Huang, Y., Xu, D., Tan, M., Su, H.: Adding active learning to LWR for ping-pong
playing robot. IEEE Trans. Control Syst. Technol. 21(4), 1489–1494 (2013)
15. Yanlong, H., Bernhard, S., Jan, P.: Learning optimal striking points for a ping-
pong playing robot. In: IEEE/RSJ International Conference on Intelligent Robots
and Systems, pp. 4587–4592. Hamburg, D (2015)
16. Huang, Y., B¨uchler, D., Sch¨olkopf, B., Peters, J.: Jointly learning trajectory genera-
tion and hitting point prediction in robot table tennis. In: IEEE-RAS International
Conference on Humanoid Robots, pp. 650–655. Cancun, MX (2016)
17. +8 Gomez-Gonzalez, S., Neumann, G., Sch¨olkopf, B., Peters, J.: Using proba-
bilistic movement primitives for striking movements. In: IEEE-RAS International
Conference on Humanoid Robots, pp. 502–508. Cancun, MX (2016)
18. M¨uller, M., Lupashin, S., D’Andrea, R.: Quadrocopter ball juggling. In: IEEE/RSJ
International Conference on Intelligent Robots and Systems, pp. 5113–5120. San
Francisco, CA, USA (2011)
19. Silva, R., Melo, F.S., Veloso, M.: Towards table tennis with a quadrotor
autonomous learning robot and onboard vision. In: IEEE/RSJ International Con-
ference on Intelligent Robots and Systems, pp. 649–655. Hamburg, D (2015)
20. Wei, D., Guo-Ying, G., Ye, D., Xiangyang, Z., Han, D.: Ball juggling with an
under-actuated ﬂying robot. In: IEEE/RSJ International Conference on Intelligent
Robots and Systems, pp. 68–73. Hamburg, D (2015)
21. Nonomura, J., Nakashima, A., Hayakawa, Y.: Analysis of eﬀects of rebounds and
aerodynamics for trajectory of table tennis ball. In: IEEE Society of Instrument
and Control Engineers Conference, pp. 1567–1572. Taipei, TW (2010)
22. Siciliano, B., Sciavicco, L., Villani, L., Oriolo, G.: Robotics: Modelling, Planning
and Control. Springer Science & Business Media, New York (2010)
23. Nakashima, A., Ito, D., Hayakawa, Y.: An online trajectory planning of struck
ball with spin by table tennis robot. In: IEEE/ASME International Conference on
Advanced Intelligent Mechatronics, pp. 865–870. Besan¸con, F (2014)
24. do Carmo, M.P.: Riemannian Geometry. Mathematics. Birkh¨auser, Boston (1992)
25. Zefran, M., Kumar, V., Croke, C.B.: On the generation of smooth three-
dimensional rigid body motions. IEEE Trans. Robot. Autom. 14(4), 576–589
(1998)
26. Lippiello, V., Ruggiero, F.: 3D monocular robotic ball catching with an iterative
trajectory estimation reﬁnement. In: IEEE International Conference on Robotics
and Automation, pp. 3950–3955. Saint Paul, MN, USA (2012)
27. Cigliano, P., Lippiello, V., Ruggiero, F., Siciliano, B.: Robotic ball catching with
an eye-in-hand single-camera system. IEEE Trans. Control Syst. Technol. 23(5),
1657–1671 (2015)
28. Serra, D., Satici, A.C., Ruggiero, F., Lippiello, V., Siciliano, B.: An optimal tra-
jectory planner for a robotic batting task: the table tennis example (2016). [web
page] https://youtu.be/GXtBvbUHu5s
29. Nakashima, A., Ogawa, Y., Kobayashi, Y., Hayakawa, Y.: Modeling of rebound
phenomenon of a rigid ball with friction and elastic eﬀects. In: IEEE American
Control Conference, pp. 1410–1415. Baltimore, MD, USA (2010)

276
D. Serra et al.
30. Lourakis, M.I.A., levmar: Levenberg-Marquardt nonlinear least squares algo-
rithms in C/C++ (2004). [web page] http://www.ics.forth.gr/∼lourakis/levmar/.
Accessed 31 Jan 2005
31. Serra, D., Ruggiero, F., Lippiello, V., Siciliano, B.: A Nonlinear least squares app-
roach for nonprehensile dual-hand robotic ball juggling. World Congress of the
International Federation of Automatic Control. Tolouse, FR (2017)

An Adaptive Terminal Sliding Mode Guidance
Law for Head Pursuit Interception with Impact
Angle Considered
Cheng Zhang1,2(B), Ke Zhang1,2, and Jingyu Wang1,2
1 School of Astronautics, Northwestern Polytechnical University, Xi’an 710072, China
zcheng@mail.nwpu.edu.cn
2 National Key Laboratory of Aerospace Flight Dynamics, Northwestern
Polytechnical University, Xi’an 710072, China
zhangke@nwpu.edu.cn, jywang@nwpu.edu.cn
Abstract. Head pursuit interception is useful in modern industries.
Because it is diﬃcult to intercept a high-speed target directly, the
head pursuit is frequently used to intercept targets such as re-entry
ﬂight vehicle. This paper proposes an adaptive terminal sliding mode
control method for intercepting a high-speed manoeuver target with
impact angle considered. It introduces the mathematical model of rel-
ative motion between interceptor and target to design the sliding mode
surface so as to meet the critical conditions of head pursuit intercep-
tion. With the dynamic characteristics of both interceptor and target
considered, it designs an adaptive terminal sliding mode guidance law to
compensate for modelling errors and to improve the interception accu-
racy. It uses the Lyapunov method to analyse the theoretical stability.
Finally it carried out numerical simulations to validate the robustness
and eﬀectiveness of the guidance law, thus obtaining good interception
performances.
Keywords: Guidance law · Finite-time convergence · Head pursuit
interception · Terminal sliding mode (TSM) · Sliding mode control
(SMC)
1
Introduction
In recent years, high-speed targets such as re-entry ﬂight vehicle and hyper-
sonic vehicle have caused severe challenges to the traditional interception sys-
tem, requiring the higher accuracy of their interception systems. The challenges
include long-distance target detection, quick response of each interception sub-
system, the ability to withstand the high temperature of a seeker and the ability
of the guidance system to adapt to harsh aerodynamic interference and so on.
Generally speaking, a high-speed target has higher requirements for the speed
of interceptor than a target in its terminal interception process, therefore not
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_14

278
C. Zhang et al.
being suitable for the traditional rear-end interception. However, in case of head-
on interception, the extremely high speed of the target may enlarge the missile-
target’s relative speed, thus more stringently requiring the computational capa-
bility of the computer as well as other hardware devices on board. Since these
requirements cannot be met in a very short time, there is an urgent and practical
need for designing an appropriate control method.
To intercept a high-speed target, the head pursuit (HP) interception is pro-
posed [1]. The use of the HP interception can not only protect the seeker from
the damage eﬀect of high temperature and bad aerodynamic interference but
also reduce the energy consumption of the interceptor. Therefore, the HP inter-
ception has attracted huge attention for research in recent years [2].
The sliding mode control (SMC), which is simple and robust to matched
uncertainties of a system, is used to design the ﬂight vehicle guidance law [3,4].
As the dynamic characteristics of a control system are related to the sliding mode
surface, the quality of the sliding mode surface on which the control system is
running may signiﬁcantly aﬀect the performances of the system.
In fact, as long as the control system can satisfy the stability condition of
the sliding mode surface, the use of the form of sliding mode surface will not
be limited. Therefore, it is critical to study how to design the sliding mode
surface that has a better control performance, which may derive many new
SMC methods [5]. However, traditional SMC methods generally use the linear
sliding mode surface, whose convergence time is inﬁnite. If a target has complex
non-linear properties, good control performance cannot be achieved with the
traditional methods, or even worse, the stability of the control system cannot be
guaranteed.
To achieve the ﬁnite-time convergence and high-precision control of a high-
speed target, the terminal sliding mode (TSM) control was developed [6,7], and a
new SMC research ﬁeld is opened up. Thereafter, the TSM-based control method
has become one of the hot SMC research topics [8,9].
2
Related Work
The key for studying the sliding mode control method is to design the guidance
law. Because equations for relative motion of target and interceptor have strong
nonlinear cross-coupling and parameter uncertainty and external disturbance
inevitably exist, the target interception system is a nonlinear uncertainty system.
To control such a complex system, heavy research has been conducted in
recent years. Liu and Li [10,11] studied two control methods to control the classic
SISO and MIMO nonlinear systems by using the variable structure control and
fuzzy control theories respectively. Though their study results show that their
methods produce good outputs, the target interception system is too simple.
To control the complex interception system in the real world, Gu [12] pro-
posed a fuzzy terminal sliding mode control strategy for the control of a marine
current power system. The control strategy mainly consists of a fuzzy logic con-
troller for generating reference current and a non-singular terminal sliding mode

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
279
(TSM) controller for tracking the aforementioned reference current. Zhao [13]
presented an output feedback terminal sliding mode control framework for the
continuously stirred tank reactor. He studied two novel TSM control algorithms
and analyzed the stability of the tank reactor. His experimental results show
that, if appropriately designed, the TSM controller can eﬀectively control the
nonlinear interception system, while its robustness to external disturbance is
superior to the traditional control methods. However, a high-speed target is
a highly nonlinear system which is far more complicated than any system in
an industrial application scenario. Therefore, these control methods cannot be
applied to target interception.
Behera [14] studied the steady-state behaviour of a TSM controller compre-
hensively, discretized the continuous-time system and analysed its steady-state
behaviour in terms of periodic orbit. By ﬁnding all possible periodic orbits, he
reveals that only period-2 orbit satisﬁes the state evolution and thus retains the
steady state. Though the analysis result is only for a second-order system, it can
be applied to the nth-order SISO system as well. His analysis shows that the
discretization can be used to study the continuous-time system and to design
the TSM controller for a higher order nonlinear complex system.
Madani [15] proposed a non-singular TSM controller for actuated exoskele-
ton, whose target system is actually an active orthosis used for rehabilitation
purpose. Since the target system has a complex dynamical model with no a
priori knowledge, the TSM controller uses the non-singular TSM technique to
obtain the expected performance through convergence within ﬁnite time. With
its theoretical stability proved in a closed loop, the stability of the TSM con-
troller is guaranteed according to the Lyapunov formula. Experimental results
show that smooth motion can be achieved for ﬂexion and extension, indicating
that its potential application to the real world is feasible. However, it should be
pointed out that, the target interception system studied by Madani is still not
as complex as those in the real world.
Lu [16] designed a SMC method for the target control system of a spacecraft,
taking into account the existence of external disturbances and inertia uncertain-
ties. The simulation results show that the SMC method can eﬀectively track
the attitude of the spacecraft. Furthermore, Lee [17] proposed a novel adap-
tive sliding mode control scheme for the spacecraft body-ﬁxed hovering in the
proximity of an asteroid so as to guarantee its asymptotic position and attitude
stability, since the bounds of both parametric uncertainties and disturbances are
not required in advance. The numerical simulation results demonstrate that the
SMC method requires low control inputs and thus is eﬀective. These studies show
that the sliding mode control method is a practically useful tool for controlling
a spacecraft. However, the target to be controlled by these control methods is a
regular spacecraft with normal speed, thus not being applicable to head pursuit
interception.
In particular, Hua [18] introduced a high-speed sliding mode variable struc-
tural guidance law and used deviation and related derivative as switching func-
tions according to the Lyapunov method. Although the guidance law produces

280
C. Zhang et al.
better results for head pursuit interception, it is diﬃcult to obtain the much
more required information on the target interception system. Similar to our
study, Song [19] designed a guidance law for non-decoupling 3D engagement
geometry. By using ﬁnite-time integral sliding mode manifold, he developed an
improved control law to estimate the upper bound of the target acceleration.
Experimental results show that the control law can eﬀectively control the tar-
gets that have both constant speed and varying speed. However, despite the fact
that the control methods can precisely intercept a target, they are developed
speciﬁcally for traditional interception methods which are diﬀerent from head
pursuit interception.
Therefore, this paper considers the target manoeuver of the head pursuit
interception system as bounded uncertainty and designs an adaptive TSM guid-
ance law suitable for head pursuit interception according to the dynamics char-
acteristics of both interceptor and target, with their modelling errors taken into
account as well. The stability of the adaptive TSM guidance law is analysed and
theoretically proved in detail. The simulation results show that the head pursuit
interception is robust and converges within ﬁnite time.
3
Overview of Head Pursuit Interception
3.1
Head Pursuit Interception Principles
As shown in Fig. 1, head pursuit interception can be divided into three phases:
(a) approach; (b) control the orbit direction of a target interceptor for it to enter
the preset orbit within predetermined time; (c) terminal guidance.
Fig. 1. Head pursuit interception

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
281
The major tasks of target interception during terminal guidance are to adjust
the ﬂight errors of the target interceptor’s position and direction, to make the
tail of the interceptor approach the target as closely as possible and ﬁnally to
intercept the target’s head.
3.2
Hp Kinematic Equation
The interceptor ﬂies in the same general direction as that of the target at the
stage of terminal guidance but at a lower speed before the stage of terminal guid-
ance. Because of the relatively short interception time and the overload restric-
tion, the interceptor’s ﬂight direction rarely changes. As a result, the interception
process can be decoupled into two orthogonal planes, namely vertical plane and
horizontal plane, into which the desired guidance law can be designed.
To simplify the HP interception, we assume that the interceptor and the
target can be treated as a particle. The acceleration vectors of both interceptor
and target are vertical with their velocity vectors; thus the acceleration vectors
only change the direction of interceptor and target, while their velocity vectors
do not change.
With the longitudinal plane considered as an example, Fig. 2 shows the planar
geometry. It shows that the target T is located behind the interceptor I which
has lower speed. Here, the velocity, manoeuver acceleration and ﬂight-path angle
are denoted by V , a and γ respectively. The range between the target and the
interceptor is deﬁned as r, while q is the line of sight (LOS) angle relative to
a ﬁxed reference. Meanwhile, the angles θ and δ are the instantaneous ﬂight
directions of the target and the interceptor relative to LOS.
In Fig. 2, Vr denotes the relative speed between the interceptor and the target,
which is deﬁned as
Vr = VI cos δ −VT cos θ
(1)
I
V
T
V
Ta
Ia
T
I
θ
q
q
δ
T
q
γ
θ
=
+
I
q
γ
δ
=
+
Fig. 2. HP planar geometry

282
C. Zhang et al.
and the speed perpendicular to LOS is
Vq = VI sin δ −VT sin θ
(2)
Therefore, the equations of HP interception are derived as follows:
⎧
⎪
⎪
⎨
⎪
⎪
⎩
˙r = Vr = VI cos δ −VT cos θ
˙θ = aT /VT −Vq/r
˙δ = aI/VI −Vq/r
˙q = Vq/r
(3)
Meanwhile, the velocities of interceptor and target are represented by VI and
VT respectively. Thus, the velocities should be constant; the non-dimensional
parameter K can be deﬁned as the following velocity ratio:
K = VI/VT < 1
(4)
Let us assume that the running time is t, the terminal guidance initiates at
t = 0 with ˙r(t = 0) < 0 and terminates at t = tf where
tf = arg
t {r (t) ˙r (t) = 0}
(5)
To successfully intercept a target, the following conditions must be met:
lim
t→tf r (t) = 0
(6)
⎧
⎨
⎩
lim
t→tf θ = 0
lim
t→tf δ = 0
(7)
The purpose of the adaptive guidance law is to guide the interceptor to the
point that satisﬁes the conditions of Eqs. (6) and (7). Therefore, the anglesθ andδ
need to be proportionally changed during design
δ = nθ
(8)
where n is a guidance coeﬃcient.
Nevertheless, in case of real interception, the interceptor may hit the target
in a certain angle, thus having higher requirements for designing the guidance
law. Therefore, a more objective geometric condition for terminal interception
is required; thus Eq. (8) is amended as follows:
δ −δr = n (θ −θr)
(9)
where |θr| < π/2 is selected on purpose, therefore:
δr = sin−1 [sin (θr)/K]
(10)

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
283
4
The Stage of Approach
To design the guidance law, we ﬁrst determine the dynamics of the interceptor
and the target, then use the TSM controller and ﬁnally prove its stability.
In order to compensate for the interference of both modelling errors and
external disturbances, we design the adaptive ﬁnite-time convergence approach
law with the following three steps: ﬁrst, select the proper sliding mode surface;
second, design the adaptive guidance law; ﬁnally, prove the stability of the ﬁrst
two steps in either approach phase or sliding phase.
4.1
Dynamics
Though Eq. (9) describes the geometric conditions of the interceptor and the
target, it does not include the explicit control value. Therefore, it is necessary to
derive relationship between the condition and interceptor acceleration command
aI.
We assume that the closed-loop lateral acceleration of the interceptor and
the target can be represented by the equivalent ﬁrst-order transfer function; with
modelling errors ignored, we have:
˙aI = (aIc −aI)/τI
(11)
˙aT = (aT c −aT )/τT
(12)
where aT c, aIc are the guidance commands of the target and the interceptor;
τT and τI are their time constant values. It is noteworthy that the acceleration
command is restricted to
|ac
T | ≤MT max.
(13)
4.2
Sliding Mode Surface Design
This paper uses the terminal sliding mode surface which can converge within
ﬁnite time.
We deﬁne the HP interception deviation as:
e = δ −δr −n (θ −θr)
(14)
where n is the time constant. Since the interceptor and the target have ﬁrst-order
properties, to derive e requires the acceleration command aIc.
Lemma 1. for any real numbers λ1 > 0, λ2 > 0, 0 < k < 1, the extended
Lyapunov condition for ﬁnite-time stability can be given in the form of TSM
as [20]:
˙V (x) + λ1V (x) + λ2V k (x) ≤0
(15)

284
C. Zhang et al.
where the settlement time can be estimated by:
Tr ≤
1
λ1 (1 −k) ln λ1V 1−k (x0) + λ2
λ2
(16)
Deﬁne the terminal sliding variable as:
s = ˙e + β |e|α sign (e)
(17)
where β > 0, 0 < α < 1. Substituting Eqs. (1)–(3) and (14), we can write the
sliding mode variable as:
s = ˙δ −δr −nθ + n ˙θr + β |P| sign (P)
= aI
VI −n aT
VT + (n −1) Vλ
r + β |P|α sign (P)
(18)
where P = ˙e, and Eq. (18) is diﬀerentiated as:
˙s = aIc−aI
τIVI
−n aT c−aT
τT VT
+ (n −1) aI cos σ−aT cos θ
r
−(n −1) 2Vr
r ˙q + βα |e|α−1 
aI
VI −n aT
VT + (n −1) ˙q

(19)
Substituting Eqs. (1)–(3) into Eq. (19) as:
˙s = GIaI + GT aT + Gλ ˙q + GIcaIc + GT caT c
(20)
where
⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩
GI = −
1
τIVI + (n −1) cos δ
r
+ βα |e|α−1/VI
GT =
n
τT VT −(n −1) cos θ
r
−nβα |e|α−1/VT
Gλ = −2 (n −1) Vr
r + (n −1) βα |e|α−1
GIc =
1
τIVI
GT c = −
n
τT VT
(21)
Therefore, the ﬁrst-order dynamic properties of the sliding mode variable can be
simpliﬁed into:
˙s = GIaI + GT aT + Gq ˙q + GIcaIc + GT caT c
(22)
4.3
Guidance Law Design
According to the terminal sliding mode variable given in Eq. (17), the sliding
mode controller aIc consists of the two parts: aeq and auc.
Speciﬁcally speaking, aeq, as an equivalent part, indicates that if there are no
modelling errors and target manoeuver, the sliding mode controller can continue
to approach the sliding mode surface. auc, as an uncertainty part, means that
it can drive the sliding mode controller to the designed sliding surface s even
though the latter has modelling errors and target manoeuver. In this way, the
sliding mode controller is robust. Therefore, aIc can be written as:
aIc = aeq + auc
(23)

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
285
aeq (t) = −(GIaI + GT aT + Gλ ˙q)/GIc
(24)
In this paper, the uncertainty part of auc is designed based on the following
approach law:
˙sk = −k1s −k2sigρ (s)
(25)
where k1 > 0, k2 > 0, 0 < ρ < 1. According to Eqs. (22)–(25), the approach law
can be written as:
auc (t) =

−
	
ˆk1s + ˆk2sigρ (s)

/fIc ∥s∥≥ε
0
∥s∥< ε
(26)
where ˆk1, ˆk2 are the estimated gain values. For the research purpose of this paper,
it is better to eliminate the interference of external disturbance and accelerate
the convergence speed of the sliding mode surface, thus the adaptive guidance
law can be designed as:
˙ˆk1 =

η1 ∥s∥2
∥s∥≥ε
0
∥s∥< ε
(27)
˙ˆk2 =

η2 ∥s∥ρ+1
∥s∥≥ε
0
∥s∥< ε
(28)
where η1, η2, ε are positive design parameters.
4.4
Stability Proof
We select the following Lyapunov function to prove:
V = 1
2sT s +
1
2η1
−2
k1 + 1
2η2
−2
k2
(29)
With the time derivative of the Lyapunov function, we have:
˙V = sT 	
−ˆk1s −ˆk2sigρ (s) + GT caT c

+
	
ˆk1 −k1

∥s∥2 +
	
ˆk2 −k2

∥s∥
ρ+1
≤−ˆk1s2 −ˆk2 ∥s∥
ρ+1
+
	
ˆk1 −k1

∥s∥2 +
	
ˆk2 −k2

∥s∥
γ+1
+ |GT caT max| ∥s∥
(30)
≤−k1 ∥s∥2 −k2 ∥s∥
ρ+1
+ |GT caT max| ∥s∥
In order to have ˙V < 0, Eq. (30) can be rewritten into the following two forms:
˙V ≤−2

k1−GT caT max
∥s∥

V −2
ρ+1
2 k2V
ρ+1
2
(31)
˙V ≤−k1
2 V −2
ρ+1
2

k2 −GT caT max
∥s∥ρ

V
ρ+1
2
(32)

286
C. Zhang et al.
To have ˙V < 0, the initial values of parameters k1 and k2 should meet the
following conditions:
k1 > |GT caT max|
∥s∥
(33)
k2 > |GT caT max|
∥s∥ρ
(34)
Consequently, Eqs. (31) and (32) can be simpliﬁed into:
˙V + λ1V + λ2V
ρ+1
2
≤0
(35)
whereλ1 = −k1/2, λ2 = 2
ρ+1
2 k2.
According to Lemma 1, we ﬁgure out that the sliding mode surface deﬁned
in Eq. (17) is driven onto the s = 0 plane within ﬁnite time; this can be mathe-
matically described as:
Tr ≤
1
λ1

1 −ρ+1
2
 ln λ1V
1−ρ+1
2
0
+ λ2
λ2
(36)
Equations (14)–(17) show that the s = 0 plane is not qualiﬁed to meet the
condition for head pursuit interception, namely e = 0. Therefore, we prove that
the sliding mode controller can approach the original point from the sliding mode
surface.
When s →0, if ˙e > 0, then β |e|α sign (e) < 0. As a result, e < 0 and the
parameter increases with the increase of time, and ﬁnally tends to zero. If ˙e < 0,
then β |e|α sign (e) > 0, so e > 0, and e decreases until it ﬁnally tends to 0
too. This proves that the sliding mode controller converges to the original point
within ﬁnite time.
5
Numerical Simulations and Their Analysis
We simulate the adaptive TSM guidance law to validate its eﬀectiveness.
We use the targets with constant velocity and constant manoeuver (15g,
−15g) and analyse the changes in interceptor trajectory, overload and sliding
mode surface in multiple attack angles. The simulation parameters are given in
Table 1.
According to Table 1, when the initial LOS angle q is −20◦, the initial dis-
tance between the target and the interceptor is r(0) = 3 km, aT = [−15, 0, 15] g
and θr = 0. Three types of targets are simulated: non-manoeuver target and two
Table 1. Simulation
parameters
Interceptor
Target
Guidance
VI = 1600 m/s
VT = 1900 m/s
n = 2
τI = 0.2 s
τT = 0.2 s
τ = 0.2 s

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
287
0
2000
4000
6000
8000
10000 12000 14000 16000 18000
-6000
-4000
-2000
0
2000
4000
6000
8000
X(m)
Y(m)
 
 
Target
Interceptor
aT=0
aT=15g
aT=-15g
Fig. 3. Response curves of interceptor trajectory
-5
0
5
10
15
20
25
0
500
1000
1500
2000
2500
3000
θ(deg)
r(m)
 
 
aT=15g
aT=0g
aT=-15g
Fig. 4. Response curves of target trajectories in a LOS polar coordinate system, θr = 0◦
constant manoeuver targets. Figure 3 graphically demonstrates the trajectories
of the interceptor and the target:
Figure 3 shows that whether or not there is target manoeuver, the interceptor
trajectory gradually approaches the target trajectory and tracks it until the
target is intercepted. Figures 4 and 5 give the target trajectories in a LOS polar
coordinate system. Figure 4 carries out the simulation with the ﬁxed impact
angle θr = 0 deg and diﬀerent target manoeuver. The simulation results show
that whether or not there is target manoeuver, θ can approach the initially set
impact angle, whose error is very small. When the target manoeuver aT is 15 g,

288
C. Zhang et al.
0
5
10
15
20
25
30
0
500
1000
1500
2000
2500
3000
θ(deg)
r(m)
 
 
θr=0°
θr=10°
θr=20°
Fig. 5. Response curves of target trajectories in a LOS coordinate system, aT = 15 g
0
1
2
3
4
5
6
7
8
9
10
-40
-20
0
20
40
60
80
100
t(s)
aI(g)
 
 
aT=15g
aT=0g
aT=-15g
Fig. 6. Response curves of interceptor manoeuver, θr = 0◦
the impact angular error is 0.367◦; when aT is −15 g, the impact angular error
is 0.189◦.
In Fig. 5, we assume that the target manoeuver is ﬁxed and set the impact
angles as 0, 10 and 20◦. The simulation results show that when the interceptor
approaches the target, the adaptive TSM guidance law can make the ﬁnal impact
angle satisfy the initially set value, with the angular error being only 0.5◦or so,
thus having a satisfactory interception eﬀect.
Figures 6 and 7 give the response curves of interceptor manoeuver when target
manoeuver and impact angles are not ﬁxed. After adjustment within a very small

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
289
0
1
2
3
4
5
6
7
8
-10
0
10
20
30
40
50
60
70
80
90
t(s)
aI(g)
θr=0°
θr=10°
θr=20°
Fig. 7. Response curves of interceptor manoeuver, aT = 15 g
0
0.5
1
1.5
2
2.5
3
3.5
4
-5
-4
-3
-2
-1
0
1
2
3
4
5
t(s)
s(deg)
 
 
aT=15g
aT=0g
aT=-15g
Fig. 8. Response curves of sliding mode volumes, θr = 0◦
period of time and with the approach of the interceptor and the target, the
interceptor manoeuver can track its target manoeuver. The size of interceptor
manoeuver is an important indicator for judging whether or not a guidance law
can be applied to the real scenario of intercepting such targets as a hypersonic
ﬂight vehicle. Our guidance law has better interceptor manoeuver eﬀect than
the pre- interception guidance law proposed in recent years [1,18,21].
Figures 8 and 9 give the response curves of sliding mode volumes when target
manoeuver and impact angles are not ﬁxed. They show that the sliding mode

290
C. Zhang et al.
0
0.5
1
1.5
2
2.5
3
3.5
4
-5
-4
-3
-2
-1
0
1
2
3
4
5
t(s)
s(deg)
 
 
θr=0°
θr=10°
θr=20°
Fig. 9. Response curves of sliding mode volumes, aT = 15 g
Table 2. Comparison of interception time used by two guidance laws
aT
10 g
15 g
20 g
25 g
Our
8.413 s
7.982 s
7.523 s
7.051 s
Dan
13.827 s
13.304 s
12.506 s
11.563 s
controller can adjust its sliding mode volumes to the proximity of zero value
within a very short period of time and keep to the ﬁxed value until the intercep-
tion is successful, namely when the target cannot manoeuver. Our guidance law
can make sliding mode volumes become precisely 0 in the end. When the target
manoeuvers, the shift control functions to enable the sliding mode controller to
stabilise at the proximity of zero value eventually.
In order to prove the eﬀectiveness of our guidance law, we compared it wih
the guidance law proposed by Dan [21]. Table 2 gives the interception time used
by diﬀerent target maneuvers.
Furthermore, in order to evaluate the convergence speed of our guidance law,
we compare the interception time used by our guidance law with that used by
the guidance law proposed by Dan. The comparison results are given in Table 2.
The table shows that our guidance law uses shorter interception time and
has better convergence performance.
6
Conclusions
This paper proposes a ﬁnite-time convergent guidance law for head pursuit inter-
ception by using the sliding mode control theory. With the dynamics character-
istics of target and interceptor considered, an adaptive TSM guidance law is

An Adaptive Terminal Sliding Mode Guidance Law for Head Pursuit . . .
291
theoretically designed based on the interference of target manoeuver and mod-
elling errors. The numerical simulation results show that the guidance law can be
implemented for the head pursuit interception of high-speed targets and achieve
successful interception in diﬀerent impact angles and target manoeuver, though
having smaller interception errors compared with other methods. The guidance
law has lower requirement for methods of manoeuver and is potentially applica-
ble for the real interception of a high-speed ﬂight vehicle. Besides, the sliding
mode variable can quickly converge to the sliding mode surface and has strong
robustness.
Acknowledgements. This research is supported by the National Natural Science
Foundation of China under Grant No. 61502391, the Foundation of National Key Lab-
oratory of Aerospace Flight Dynamics and the China Space Foundation under Grant
No. 2015KC020121.
References
1. Shima, T., Golan, O.M.: Head pursuit guidance. J. Guid. Control Dyn. 30(5),
1437–1444 (2007)
2. Zhang, C., Zhang, K., Wang, J.: The design of ﬁnite-time convergence guidance law
for head pursuit based on adaptive sliding mode control. In: Proceedings of the 13th
International Conference on Informatics in Control, Automation and Robotics, vol.
2, pp. 110–118 (2016)
3. Shtessel, Y.B., Shkolnikov, I.A., Levant, A.: Guidance and control of missile inter-
ceptor using second-order sliding modes. IEEE Trans. Aerosp. Electron. Syst.
45(1), 110–124 (2009)
4. Yang, J., Li, S., Su, J., Yu, X.: Continuous nonsingular terminal sliding mode
control for systems with mismatched disturbances. Automatica 49(7), 2287–2291
(2013)
5. Goyal, V., Deolia, V.K., Sharma, T.N.: Robust sliding mode control for nonlinear
discrete-time delayed systems based on neural networks. Intell. Control Autom.
6(01), 75 (2015)
6. Tang, Y.: Terminal sliding mode control for rigid robots. Automatica 34(1), 51–56
(1998)
7. Zhihong, M., Paplinski, A.P., Wu, H.R.: A robust MIMO terminal sliding mode
control scheme for rigid robotic manipulators. IEEE Trans. Autom. Control 39(12),
2464–2469 (1994)
8. Feng, Y., Yu, X., Han, F.: High-order terminal sliding-mode observer for parameter
estimation of a permanent-magnet synchronous motor. IEEE Trans. Ind. Electron.
60(10), 4272–4280 (2013)
9. Kumar, S.R., Rao, S., Ghose, D.: Nonsingular terminal sliding mode guidance with
impact angle constraints. J. Guid. Control Dyn. 37(4), 1114–1130 (2014)
10. Liu, Y.J., Li, Y.X.: Adaptive fuzzy output-feedback control of uncertain SISO
nonlinear systems. Nonlinear Dyn. 61(4), 749–761 (2010)
11. Li, P., Yang, G.: An adaptive fuzzy design for fault-tolerant control of MIMO
nonlinear uncertain systems. J. Control Theory Appl. 9(2), 244–250 (2011)
12. Gu, Y.J., Yin, X.X., Liu, H.W., Li, W., Lin, Y.G.: Fuzzy terminal sliding mode
control for extracting maximum marine current energy. Energy 90, 258–265 (2015)

292
C. Zhang et al.
13. Zhao, D., Zhu, Q., Dubbeldam, J.: Terminal sliding mode control for continuous
stirred tank reactor. Chem. Eng. Res. Design 94, 266–274 (2015)
14. Behera, A.K., Bandyopadhyay, B.: Steady-state behaviour of discretized terminal
sliding mode. Automatica 54, 176–181 (2015)
15. Madani, T., Daachi, B., Djouani, K.: Non-singular terminal sliding mode controller:
application to an actuated exoskeleton. Mechatronics 33, 136–145 (2015)
16. Lu, K., Xia, Y., Zhu, Z., Basin, M.V.: Sliding mode attitude tracking of rigid
spacecraft with disturbances. J. Frankl. Inst. 349(2), 413–440 (2012)
17. Lee, D., Vukovich, G.: Adaptive sliding mode control for spacecraft body-ﬁxed
hovering in the proximity of an asteroid. Aerosp. Sci. Technol. 46, 471–483 (2015)
18. Hua, W., Chen, X.: Adaptive sliding-mode guidance law for head pursuit. J. Harbin
Inst. Technol. 43(11), 30–33 (2011)
19. Song, J., Song, S.: Three-dimensional guidance law based on adaptive integral
sliding mode control. Chin. J. Aeronaut. 29(1), 202–214 (2015)
20. Yu, S., Yu, X., Shirinzadeh, B., Man, Z.: Continuous ﬁnite-time control for robotic
manipulators with terminal sliding mode. Automatica 41(11), 1957–1964 (2005)
21. Dan, Y.: Research on Variable Structure Terminal Guidance Law of Space Inter-
ception. Shanghai Jiao Tong University (2013)

Kinematic and Dynamic Approaches in Gait
Optimization for Humanoid Robot Locomotion
Ramil Khusainov1, Alexandr Klimchik1(B), and Evgeni Magid2
1 Intelligent Robotic Systems Laboratory, Innopolis University, Innopolis City,
Russian Federation
r.khusainov@innopolis.ru, a.klimchik@innopolis.ru
2 Higher Institute of Information Technology & Information Systems, Kazan Federal
University, Kazan, Russian Federation
magid@it.kfu.ru
Abstract. Humanoid robot related research keeps attracting many
researchers nowadays because of a high potential of bipedal locomotion.
While many researchers concentrate on a robot body movement due to
its direct contribution to the robot dynamics, the optimality of a leg
trajectory has not been studied in details yet. Our paper is targeted to
decrease this obvious gap and deals with optimal trajectory planning for
bipedal humanoid robot walking. The main attention is paid to maxi-
mization of locomotion speed while considering velocity, acceleration and
power limitations of each joint. The kinematic and dynamic approaches
are used to obtain a desired optimal trajectory. Obtained results provide
higher robot performance comparing to commonly used trajectories for
control bipedal robots.
Keywords: Humanoids · Bipedal walking · Optimal trajectory plan-
ning
1
Introduction
Nowadays one of the most challenging tasks in robotics is developing multi-
purpose terrain robot which could perform various tasks, including operations
in diﬃcult and dangerous conditions. Such operations may require humanlike
skills to overcome obstacles and get through environment, which was originally
designed for a human. That is why it is critically important to develop humanoid
robots, which are similar to human body in their size, weight and locomotion
characteristics. Many theoretical and experimental researches have been done
in the ﬁeld of biped robots during three past decades and many notable devel-
opments have been achieved [1]. There are various practically realized systems,
from the simplest cases of planar robots, to the most advanced robots, with
many Degrees of Freedom (DoF) [2–4].
However, we are still very far from widespread use of humanoids. Mainly
this is because biped robots’ poor locomotion abilities and its ability to fall
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_15

294
R. Khusainov et al.
down. Although there are some eﬃcient algorithms for the several application
areas of humanoid robots [5], but it is very diﬃcult to merge all of them into
one eﬃcient system because the overall system’s complexity becomes extremely
high. Especially the problem manifests itself when robot moves on rough terrain,
steep stairs, and in environments with obstacles. Hence, robot stability related
research keeps attracting many researchers nowadays in order to propose good
robot locomotion control algorithms and to prevent a biped robot from falling
down.
Walking stability can be divided into static and dynamic. The static stability
can be veriﬁed through being the center of gravity (COG) in the stability area
(supporting polygon). There are several stability criteria for biped walking but
mostly the dynamic stability is veriﬁed via Zero Moment Point (ZMP) criterion
[6]. ZMP is a point on the ground at which the total moments due to ground
reaction force becomes zero. In other words, the inﬂuence of all ground forces
can be replaced by one force applied in ZMP point. In order to achieve a dynam-
ically stable gait the ZMP should be within the support polygon, at every time
instance. The assumption of ZMP approach is that dynamic biped walking can
be decomposed into two parts, a walking pattern generation and a stabilization
around it. In this paper we discuss the ﬁrst part. The research studies on walk-
ing gate generation can be classiﬁed into three main groups, i.e. robot modeling,
walking pattern generation and gait parameter optimization.
Robot modeling works on reducing complexity of robot motion dynamics
with certain approximation error. Here compromise is required between model
error and computational cost. In many research studies inverted pendulum model
(IPM) utilized, which approximates robot as a single point mass concentrated
at the center of mass (COM) [7]. The model is simple but leads to signiﬁcant
ZMP error since usually legs of the robot are heavy and cannot be neglected. An
alternative here is utilization multiple masses IPM (MMIPM) model robot [8],
which consists multiple point masses. To make model eﬀective it is required to
choose proper number of point masses to ensure optimality from cost/error point
of view. Sato et al. [9] proposed three mass IPM (3MIPM) with point masses
at COM and feet, Ha and Choi [10] proposed virtual height IPM (VHIPM)
that has dynamics form of IPM for multiple mass model. In practice, model
choice highly depends on the gait generation and control methods. There are
two main approaches to generate walking pattern: using online or/and oﬄine
methods. In online methods, computational cost is the main issue and full body
dynamics cannot be processed. Therefore, simpliﬁed methods are used. In oﬄine
path planning we can calculate full or almost full body dynamics that gives more
accuracy for humanoid locomotion.
As it was already mentioned, in order to keep robot stable during locomotion
we should generate such trajectory that keeps ZMP point inside of supporting
polygon. Several techniques for generating walking motion for biped robots were
proposed in the literature. For instance, in [11] polynomial trajectories were used,
in [7] authors employed Fourier series. Katoh and Mori [12] demonstrated that
using a Van der Pol oscillator as generator of the tracking reference would induce

Kinematic and Dynamic Approaches . . .
295
walking trajectories for a biped robot. Furusho and Masubuchi [13] presented the
walking control algorithms by tracking a piecewise-linear joint reference trajec-
tory. Another method for trajectory generation is to mimic the human rhythmic
function by means of a central pattern generator, just as it is reported in [14].
Kajita in [15] proposes ZMP tracking servo controller which adopts the preview
control theory [16] that uses the future ZMP reference.
Gait parameter optimization is another important issue. It is important
to decide optimal foot placements, CoM trajectory or walking speed consid-
ering constraints in joint actuators and energy eﬃciency. Goswami et al. applied
genetic algorithm (GA) to maximize ZMP stability and step length by optimizing
four gait parameters [17]. In addition, Dau et al. [18] planned foot and hip trajec-
tories using polynomial interpolation and used GA to minimize the mechanical
energy by optimizing the seven key parameters for the hip and foot trajectories.
Liu et al. [19] designed ZMP trajectory to minimize an energy related function
using fuzzy logic. In [20] authors applied dynamic programming approach to
optimize walking primitives considering kinematic limits only.
Compared with previous works, our main problem was to estimate maxi-
mum walking speed, that can be achieved with given humanoid robot under
actuator power and joint limit constraints. We used two approaches to solve
the problem. The ﬁrst, kinematic approach, operates only with robot kinematics
and uses maximum joint velocities and accelerations. In dynamic approach we
solved optimization problem with seven key walking parameters and with full
body dynamics calculation.
The reminder of the paper is organized as follows. In Sect. 2 we formulate the
problem. Section 3 focuses on kinematic approach in gait optimization. Section 4
presents dynamic approach for optimization problem. Finally, conclusions are
drawn in Sect. 5.
2
Problem Statement
Majority of the algorithms for stable walking of a bipedal robot usually focus
on balance control and do not take into account joint constraints. There-
fore, calculated trajectories may be not reachable in practice because of veloc-
ity/acceleration/jerk limits in joints and lead to wrong foot positioning. On the
other hand, there are works which study trajectory optimality with joints limits,
but without stability analysis of such trajectories.
Anthropomorphic robot AR-601M [21] (Fig. 1), which is in the focus of our
study, has 41 DoF in total, although during walking only 12 joints are used (6 in
each pedipulator). For simplicity, we take into account that the robot motion
lies in a sagittal plane. In this case, the problem of optimal trajectory can be
reduced to the 5 DoF system.
The problem, which we analyse in our research can be formulated as follow-
ing: ﬁnd the optimal parameters of repeating steps motion such as step length,
step time, hip height and etc., that maximize walking speed under robot con-
straints.

296
R. Khusainov et al.
Fig. 1. Anthropomorphic robot AR-601M and its 5 DoF model in sagittal plane
3
Kinematic Approach
3.1
Dynamic Programming Method for Swing Leg Trajectory
Optimization
In this approach the optimal trajectory problem does not consider trunk motion
and can be is reduced to 2DoF system. Thus, the swing leg could be represented
as a simple two-link system with hip and knee joints. The corresponding to
AR601-M robot leg parameters link lengths are equal to 280 mm each. Since in
our models robot body moves at a constant speed, for simplicity, its movement
is ignored and we assume a ﬁxed position of the hip joint. This means that
considered problem is represented in a moving coordinate system. The trajectory
of the swing leg and principle model parameters are shown in Fig. 1.
Optimization Criteria
There are diﬀerent approaches to deﬁne cost function in optimal trajectory
search problem. For example, Nakamura et.al. in [22] minimized energy con-
sumption, which can be written in the form:
2

i=1

τi ˙θi + γτ 2
i

dt
(1)
where τi is joint i torque, ˙θi is joint i velocity, γ is an empirical constant. The
ﬁrst term in (1) corresponds to mechanical work, which is performed to move
dynamic system. The second term corresponds to heat emission in each joint
due to torque generation. It was shown, that optimal trajectory which could be
found in such a way well agrees with experimental data of human locomotion.
Yet, while obtaining a swing leg trajectory, the authors do not take into account
maximum joint velocity and acceleration limitations, which actually provide crit-
ical constraints for a real robot. A selected trajectory could be energy optimal

Kinematic and Dynamic Approaches . . .
297
in theory, but if the robot’s motors could not supply required by such trajectory
torques, the physical robot will fail to perform such trajectory [23].
In practice, walking speed is one of the most important performance mea-
sures for bipedal robots. Walking speed could be unambiguously calculated, while
energy consumption calculation is not that obvious as it depends on many fac-
tors; e.g., energy is mainly consumed in supporting leg joints, since they have
much higher actuating torques than swing leg joints (in our work only swing leg
motion is considered). In addition, energy consumption strongly correlates with
step time: the faster a swing leg moves for a given step length, the lower is its
energy consumption. Therefore, minimization of each step time is a critical issue
to be considered, and it is the core contribution of our paper. Step time can be
evaluated as
t =

S
(1/V ) dS
(2)
where V is a foot speed in Cartesian space and dS is the foot path. Time t is
calculated numerically by dividing the trajectory into a ﬁnite number of intervals
and further summing up over all intervals.
Search Algorithm.
Diﬀerent techniques can be used to ﬁnd swing leg optimal path of bipedal robot.
For example, spline genetic algorithm (GA) in [22] determined a joint torque
for several trajectory points and interpolated it for other points using third
order spline. A signiﬁcant drawback of this method is the GA algorithms feature
of ﬁnding a global minimum for continues functions. A heuristic optimization
method was used in [24] to ﬁnd optimal trajectory with Harmony Search algo-
rithm for 6 DoF manipulator. Smooth trajectories that comply kinematic con-
straints (velocity and acceleration) were obtained, but only 6 via-points between
start and end points were used.
To overcome above mentions limitations, in this study, the optimal path
is calculated using dynamic programming approach [25]. The key idea of this
approach is to divide a large problem into sub-problems of lower dimensions
corresponding to a transition between two via points, to solve each of these
sub-problems once and to store the solutions. Advantages of this method are its
robustness and computational eﬃciency compared to other methods. Illustration
of this approach for simple case with two via points is shown in Fig. 2. To ﬁnd an
optimal path from node (1,1) to node (4,1) with a minimum total weight (time in
our case) it is required to examine all possible connections between these points.
Dynamic programing approach feature is that via points are not speciﬁed exactly
and can be assigned to any node point of the row. Starting from the left, for every
node minimal total weight W is computed and saved together with the node on
the previous layer, transition from which is optimal. For example, for node (2,2)
the minimal weight is 5 and the only transition from node (1,1) is possible. For
node (3, 3) minimal weight is 10 (5+5), which corresponds to transition from
node (2,2). Finally, we look at end point and ﬁnd its optimal transition. After
that, to get the optimal path, the optimal path from the last layer to the ﬁrst

298
R. Khusainov et al.
Fig. 2. Example of directed graph and building directed graph in search area by cre-
ating 2D grid
layer is constructed. For the provided example the optimal path corresponds to
the following path: (4,1), (3,3), (2,2), (1,1).
To transform optimal path search problem for a bipedal robot into a directed
graph it is required to put evenly distributed nodes pi,j within the search space,
which covers all possible trajectory paths. Here it is required to create a two
dimensional grid with nx+1 points in x direction and ny +1 points in y direction
(see Fig. 2). Since we consider the trajectories with certain height limit ymax and
step length xmax the desired search space size is equal to xmax×ymax area, which
contains nx −1 via points to be assigned.
The algorithm for ﬁnding the optimal path works as follows:
• For each node point pi,j, i = 1, j = 1, ny + 1 calculate the weight (i.e., the
cost), which corresponds to the transition minimum time to that node from
the start point p0,0. In each node save the weight and joints angular velocities
at the end of the corresponding trajectory.
• For each node pi,j where i = 2, nx, j = 1, ny + 1 calculate the weight of
transition from pi−1,k node, where k = 0, ny + 1. Find kmin, for which the
sum of the calculated weight for transition from pi,kmin and total weight of
pi,kmin node is minimal. In each node pi,j save kmin, the total weight and joints
angular velocities, which are calculated for the transition from pi,kminto pi,j.
• For node pnx+1,0 (end point) calculate the weight of the transition from pnx,k,
where k = 0, ny + 1. Find kmin, for which the sum of the calculated weight
and the total weight of pnx,kmin node is minimal.
• Obtain an optimal trajectory by tracking backward kmin values for each node:
pnx+1,ny+1 →pnx,knx+1
min
→pnx−1,knx
min →. . . →p1,k2
min →p0,0
where knx+1
min
is the optimal track for pnx+1,ny+1node.
Since the transition time between two node points is used as a cost function,
it is required to calculate minimal traveling time from node pi−1,k to node pi,j

Kinematic and Dynamic Approaches . . .
299
taking into account velocity and acceleration limits. First of all, joint angles
increments are calculated for each transition between two adjacent nodes. Then
mark a joint as active if it has larger absolute value of angular increment for a
given transition. Without loss of generality let’s assume that joint 1 is active and
joint 2 is passive. Assuming that active joint for each interval move either with
a constant speed or a constant acceleration (depending whether it reaches the
maximum velocity on previous interval), the joint movements can be described
as follows
Δϕ(i) = ω(i)
s t + 0.5a(i)t2
(3)
ω(i)
e
= ω(i)
s
+ a(i)t
(4)
where i=1 for an active joint and i=2 for a passive joint, Δϕ is an angular
increment,ωs and ωe are angular velocities at start and end of the interval respec-
tively, a is an angular acceleration and t is a transition time.
In order to describe all possible relations between active joints on the adja-
cent intervals, three diﬀerent cases for calculating transition time should be
considered:
Case 1: Maximum Velocity. If an absolute angular velocity of an active joint
in pi−1,k node is equal to the maximum value ωmax and its sign is equal to
the sign of angular increment Δϕ, then t =
Δϕ(1) /ωmax, a(1) = 0, ω(1)
e
=
ω(1)
s . Substituting t into equations (3) and (4) we obtain a(2), ω(2)
e . It should be
emphasized that if the sign of angular increment Δϕ is opposite to the current
velocity sign at the beginning of interval than either Case 2 or Case 3 should be
considered.
Case 2: Maximum Acceleration. If an absolute angular velocity of an active
joint in pi−1,k node is below its maximum value ωmax or its sign is opposite to
the sign of angular increment Δϕ, then we substitute Δϕ(1) into equation (3)
with a(1) = sign(Δϕ(1))amax and solve the second order equation with respect
to t:
t =
−w(1)
s
±

(w(1)
s )2 + 2a(1)Δϕ(1)
a(1)
.
(5)
Next, we select the lower positive root of the above equation and calculate ω(1)
e
=
ω(1)
s
+ a(1)t. If
ω(1)
e
 is less than or equal to ωmax, than a(1)and ω(1)
e are equal
to the calculated values. Finally, we substitute t into Eqs. (3)–(4) to obtain a(2),
ω(2)
e .
Case 3: Reaching Maximum Velocity. If Case 1 condition is not satisﬁed
and
ω(1)
e
in Case 2 is greater than ωmax, than ω(1)
e
= sign(Δϕ(1))ωmax, t =
2Δϕ(1)/(ω(1)
e
+ ω(1)
s ), a(1) = (ω(1)
e
−ω(1)
s )/t. We substitute t into Eqs. (3)–(4)
to obtain a(2), ω(2)
e . Figure 3 demonstrates all three cases which are described

300
R. Khusainov et al.
Fig. 3. Three cases of angular velocity behaviour: (1) maximum velocity; (2) maximum
acceleration; (3) reaching maximum velocity
above. For all cases we verify if the calculated joint angular accelerations and
velocities are below their maximal values. If this condition cannot be satisﬁed,
this transition is excluded from a possible path of the swing leg.
Optimization Results.
The simulation of the algorithm was performed within MATLAB/Simulink envi-
ronment. The acceleration and velocity limits were assigned to 1 rad/s2 and
1 rad/s respectively for each joint. First, let us obtain optimal walking primi-
tives for the ﬁxed hip rising height and step length and then compare results
with optimal parameters settings.
For the ﬁrst case hip height was ﬁxed to 0.5 m in order to ensure optimal
locomotion speed of the robot based on our previous empirical studies [23,26].
According to joint limits and link parameters we selected the robot step length to
be 0.4 m. For these parameters hip and knee joint angles in their starting position
were set to 0.1 and 0.55 rad correspondingly; at the end of the trajectory (goal
position) hip and knee joint angles were set to –0.66 and 0.55 rad correspondingly.
These angles deﬁne pi,j and pi,j nodes.
Next, three diﬀerent cases were analyzed:
(i) movement without any trajectory constraints, i.e. in an ideal case without
velocity/acceleration limits the foot may move straightforwardly from a
start point to an end point (Fig. 4 left);
(ii) movement with 0.1 m barrier (with negligible small size in the robot walking
direction) in the middle of the trajectory (Fig. 4 right);
(iii) movement with 0.05 × 0.2 m box barrier in the middle (Fig. 5).
The results demonstrated that for all cases the obtained Cartesian trajec-
tories of a swing leg do not correspond to the shortest path and diﬀer from a
cycloid path, which is traditionally used in bipedal robot locomotion control. To
compare our results with a cycloid path approach, we built the cycloid trajectory
for (ii) case and ensured the same travelling time as for our optimal trajectory
(Fig. 4a right). The corresponding angular velocities are presented in Fig. 6. The
simulation demonstrated that for the cycloid trajectory, the knee angular veloc-
ity exceeds maximum value and the accelerations at the beginning and at the
end of the trajectory are very high. That means that in practice it is impossible

Kinematic and Dynamic Approaches . . .
301
Fig. 4. Optimal trajectory without obstacles for hip height 0.5 m and step length 0.4 m
(left) and trajectories with 0.1 m barrier in the middle for hip height 0.5 m and step
length 0.4 m (right): a foot trajectory in Cartesian space; b angular velocity of joints;
c angular acceleration of joints
to perform such trajectory within the speciﬁed time. In order to move along a
cycloid trajectory, it is required to scale (increase) travelling time according to
the velocity limits. Hence, the proposed algorithm succeeds to suggest a foot
trajectory with a shorter time interval comparing to a typical cycloid trajectory.
In the case without trajectory constraints, the foot rises up to 0.04 m, which is
caused by joint velocity/acceleration limits. It is evident that travel time in such
case is minimum. The particularity of this trajectory is that the joint velocity
limits are not reached (see Fig. 4b left).
Barrier proﬁle essentially eﬀects optimal trajectory (see Figs. 4a and 5a).
Although the (ii) case barrier is two times lower than for case (iii), the height of
the optimal trajectory for case (iii) and its travel time are higher.
To compare eﬃciency of the obtained walking primitives with conventional
cycloids, the joint speed and acceleration proﬁles have been obtained for cycloids
as well. It should be stressed, that these proﬁles do not satisfy velocity and
acceleration limits, and to ensure such trajectory implementation it is required
to increase traveling time. In particular, for free motions without obstacles the
acceleration limits have been exceeded by the factor 6, and to remain within

302
R. Khusainov et al.
Fig. 5. Optimal trajectory with 0.05 × 0.2 m box barrier in the middle for hip height
0.5 m and step length 0.4 m: a optimal foot trajectory in Cartesian space; b angular
velocity of joints; c angular acceleration of joints
Fig. 6. Angular velocities of joints for cycloid trajectory movement with 0.1 m barrier,
case of for hip height 0.5 m and step length 0.4 m

Kinematic and Dynamic Approaches . . .
303
Fig. 7. Robot AR601M speed map for diﬀerent step length and hip height for the
trajectory without obstacles
Fig. 8. Robot AR601M speed map for diﬀerent step length and hip height for the
trajectory with 0.1 m barrier in the middle
the limits traveling time should be over 10 s, which is twice higher that for
the obtained optimal trajectory. Another limitation of conventional trajectory
planning approach is its sensitivity to a swing height and request to provide
traveling time as an input parameter. Our proposed approach does not have
these limitations and automatically estimates minimal traveling time and an
optimal swing leg height.
Now, let us obtain optimal hip heights and step length for all cases considered
above and compare robot performance. Speed maps for diﬀerent step length and
hip height are presented in Figs. 7, 8 and 9. Here, lighter colour corresponds to
higher speed and are preferable for robot locomotion. It is shown that Cartesian
speed highly depends on the step length and hip height and varies from one case
to another. It is also shown that optimal step parameters highly depend on the
size of the obstacle, which appears on the robot path. In particular, for the case
without obstacles optimal settings are hip height of 0.4 m and step length of
0.32 m, while for the case of box barrier the optimal step length is much higher
(0.52 m) and hip height is almost the same (0.45 m).

304
R. Khusainov et al.
Fig. 9. Robot AR601M speed map for diﬀerent step length and hip height for the
trajectory with 0.05 × 0.2 m box barrier in the middle
Table 1. Optimal walking parameters for locomotion of bipedal humanoid robot AR-
601M
Case
Step length
(m)
Hip height
(m)
Speed (m/s)
Fixed param.a Optimal
param.b
(i) without
obstacles
0.32
0.40
0.13
0.16
(ii) with 0.1 m
barrier
0.56
0.43
0.09
0.12
(iii) with 0.05
× 0.2 m box
barrier
0.52
0.45
0.11
0.12
aFixed hip and step length parameters are 0.5 and 0.4 m respectively
bOptimal hip height and step length parameters
Optimisation results are summarised in Table 1. Optimal walking parameters
for locomotion of bipedal humanoid robot AR-601M, where for the three cases
an optimal hip height, a step length and a corresponding robot speed are given.
For comparison purposes it also contains robot speed for the case of a ﬁxed hip
height and step length studied above. It is shown that for the case of optimal
hip and step size parameters robot speed increases by 10–23%, depending how
far initial parameters were from the optimal ones.
For comparison purposes Fig. 10. Optimal trajectory without obstacles for
0.4 m hip height and 0.32 m step length: (a) foot trajectory in Cartesian space;
(b) angular velocity of joints; (c) angular acceleration of joints contain walking
primitives with joint velocities and accelerations for motion without obstacles.

Kinematic and Dynamic Approaches . . .
305
0
0.5
1
1.5
2
-1
0
1
 hip
 knee
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0
2
4
6
10 -3
0
0.5
1
1.5
2
-1
-0.5
0
0.5
hip
knee
,y m
,
/
rad s
ω
,x m
,t s
,t s
2
,
/
a rad s
(a)
(b)
(c)
Fig. 10. Optimal trajectory without obstacles for 0.4 m hip height and 0.32 m step
length: a foot trajectory in Cartesian space; b angular velocity of joints; c angular
acceleration of joints
A rather evident fact that for an optimal robot speed without no obsta-
cles, an optimal trajectory should be close to the ground level was conﬁrmed by
simulation results. It is clear that in practice such trajectory could be hardly
implemented (in fact, it is not possible to have zero step height while loco-
motion), while it demonstrates eﬃciency of the proposed approach. With such
moving primitive the robot can move with 0.16 m/s velocity instead of 0.13 that
is maximal for 0.5 m hip height and 0.4 m step length. Similar tendencies are
observed for all considered cases.
Advantages and Limitations.
In spite of numerous advantages, the proposed walking trajectory optimization
approach has several apparent limitations, and the most signiﬁcant one among
them is ignoring of dynamic and static eﬀects within optimization procedure. In
fact, static eﬀects (compliance errors) are not critical for the trajectory optimiza-
tion since they are relatively small and could be easily compensated by integrat-
ing a feedback control from the feet force sensors. In this case the main limitation

306
R. Khusainov et al.
for the moving primitive is avoiding joint coordinates limits, which may not allow
the robot to compensate induced compliance errors. From another side, if feed-
back control is not available compliance errors should be computed using linear
or non-linear stiﬀness modelling [27,28] and control algorithm should rely on the
elasto-geometric model [29,30]. It should be stressed that stiﬀness parameters for
real robot can be obtained from the dedicated experimental study only [31]. So,
statics eﬀects the control algorithm, but is not critical for optimization walking
primitives.
On the other side dynamic eﬀects directly inﬂuence robot stability [32,33]
and can be hardly compensated, since this will directly aﬀect walking primitive
proﬁle. Since walking proﬁle contains only foot coordinate, humanoid torso and
arms could be used to additionally increase robot balance [34,35]. From another
side, integrating dynamic model into optimization procedure may provide addi-
tional tool for trajectory optimization. It may lead to faster robot movements in
the case when joint acceleration will be induced not only because of actuation
forces, but also by dynamic forces. However, this approach essentially compli-
cates computations and may be hardly implemented for robot control through
joint angles instead of demanded force level control. Besides, swing leg does not
contribute a lot in robot dynamics since it does not eﬀect robot body motion,
which mostly deﬁning robot stability. In contrast, it is a supporting that mainly
deﬁnes CoM trajectory and, consequently, robot stability. From that point of
view supporting leg trajectory could be unambiguously determined from sta-
bility condition while swing leg coordinates are redundant variables that might
be optimised while step trajectory planning is proposed in this work. So, the
suggested approach is a trade-oﬀbetween a model complexity and utilization of
robot total capacities. In practice, to avoid unpredictable robot behaviour, it is
reasonable not to use upper velocity/acceleration boundaries in the optimiza-
tion procedure since they may be higher in real model because of a presence of
dynamic forces and errors in the model parameters.
The most essential limitation of the provided results is related to kinematic
constraints induced to a hip location. It was strictly assumed that the hip height
remains the same along the trajectory, while it is obvious that the best robot
speed will be achieved when the height varies along the trajectory. In our app-
roach, we separate swing and supporting leg movements and consider only a
swing leg trajectory. Since a swing leg travels longer distances in walking, its
joints should apply higher speeds and accelerations. Therefore, optimality due to
kinematic limits is more important for a swing leg. We consider swing leg move-
ment in coordinate system of a hip where the hip is ﬁxed. Another direction for
enhancing optimization eﬃciency is considering hip speed as an additional opti-
mization parameter, which may vary from one via point to another. Providing
reasonable solutions of the above-mentioned drawbacks and their integration
into the optimization algorithm will apparently lead to robot speed increase.
These issues will be addressed in details in our future work.

Kinematic and Dynamic Approaches . . .
307
Fig. 11. Step motion of the swing and supporting legs in the sagittal plane
3.2
Trapezoidal Angular Velocity Proﬁle Method
Method.
In this approach we consider one step motion with a symmetrical position at the
start and end. The hip is located at the middle between two feet, i.e. x0 = L0/2.
L0 in our calculations is equal to 0.3 m, the hip height at start y0 is equal to 0.5
(Fig. 11).
From manipulators theory we know that the actuators best performance is
achieved when velocity proﬁles in joint space have trapezoidal form. In another
words, the joint motion between two positions (in our case joint angles at start
and end) should be done with maximum joint acceleration until maximum joint
speed is reached and with maximum joint deceleration until end point.
Simulation Results.
In the simulation study, the acceleration and velocity limits were assigned to
1 rad/s2 and 1 rad/s for each joint. In addition, we calculated trajectories with
maximum acceleration of 10 rad/s2.
Firstly, we calculated initial angles in joints using an inverse kinematics prob-
lem for a two link manipulator. Hip (q1) and knee (q2) angles are found according
to following formulas:
q2 = arccos
(xfoot −xhip)2 + (yfoot −yhip)2 −l2
1 −l2
2
2l1l2

(6)
q1 = atan2 (xfoot −xhip, yfoot −yhip) −atan2 (l2 sin(q2), l1 + l2 cos(q2))
(7)
where l1 and l2 are upper and lower link lengths accordingly, xfoot, yfoot, xhip,
yhip are foot and hip coordinates. For given initial and ﬁnal parameters, hip and
knee joint angles in the starting position are –0.08 and 0.74 rad, correspondingly,
and at the end of the trajectory, they are –0.66 and 0.74 rad. As we see, the hip
angle decreases, when knee angles are the same at the ﬁnal position. Supposing
that initial angular velocities are zero and that joint velocity proﬁles are sym-
metrically trapezoidal or triangular (the motion with maximum acceleration or

308
R. Khusainov et al.
Fig. 12. Angular velocity proﬁles and joint angle proﬁles of the swing leg. A triangular
case
Fig. 13. Angular velocity proﬁles and joint angle proﬁles of the swing leg. A trapezoidal
case
speed), we can ﬁnd the time needed for hip joint angle change. After that, for
the given time we deﬁne a velocity proﬁle for the knee joint, again taking into
consideration zero initial and ﬁnal velocities, a symmetrical trapezoidal or tri-
angular function with a total zero integral (angle change). Joint angle functions
are found from velocity functions by integration with known initial values. Fig-
ures 12 and 13 show velocity and angle functions for acceleration limits 1 and
10 rad/s2 correspondingly. The motion time is 1.53 s for lower and 0.68 s for
higher acceleration. We see that in the ﬁrst case, the maximum velocities are
not reached, when in the second case, proﬁles are trapezoidal. Since the motion
is symmetrical, which means that ﬁnal angles of the swing leg are initial angles
of the supporting foot, we deﬁne velocity proﬁles of the supporting leg as proﬁles
of the swing leg with an opposite sign.
After joint angle functions are found, we use the forward kinematics solution
to ﬁnd the foot trajectory in Cartesian space. Figure 14 shows foot trajectories
for two acceleration limits. We see that in both cases, the foot is always above
the ground, which is a necessary requirement.
However, the stability analysis of such trajectories shows that this kind of
motion is unstable if there is no additional compensation of ZMP deviation from
the stable one, corresponding to the center of the supporting foot. Therefore,
such optimal trajectories are applicable only if we use the upper body motion
to balance the robot dynamics during walking.

Kinematic and Dynamic Approaches . . .
309
Fig. 14. The trajectory of the swing foot in Cartesian space for the lower (left) and
higher (right) acceleration limit
Fig. 15. Model of biped robot with 5 DoF and 5 links and Stick diagram of half walking
cycle
4
Dynamic Approach
In dynamic approach the optimization problem is solved for 5 link model shown
in Fig. 15. Model has 5 DoF and similar to kinematic approach considered above
for 2D motion in sagittal plane. Length, mass and moment of inertia parameters
of links are given in Table 2. These parameters correspond to the characteristics
of AR601M.
Table 2. Manipulator link parameters
Link
L (m)
d (m)
Mass (kg)
Moment of
inertia (kg*m2)
Trunk
0.65
0.3
44.8
0.72
Thigh
0.28
0.14
6.8
0.055
Shank
0.28
0.12
3.9
0.038

310
R. Khusainov et al.
Dynamic approach for searching optimal motion trajectory can be divided
into following steps:
1. Parametrization of walking gait
2. Calculation of joint torques and velocities that ensure given trajectories
3. Stability investigation of walking pattern.
Search for the maximum motion speed under actuator and stability constraints.
4.1
Walking Gait Parametrization
Walking gait consists of two phases, Single Support and Double Support. If TS
is step time TSS is single support phase time, TDS is double support phase time
than TS = TSS+TDS, and ratio DS = TDS/TS. Figure 15 shows gait parameters.
L0 is step length, so swing foot moves from –L0 to L0 and due to symmetrical
formulation of the problem hip moves from –L0/2 to L0/2. We assume that hip
height during the step is ﬁxed and is equal to H. Swing foot has symmetrical
trajectory with its maximum height h. Trunk orientation is equal to zero. This
means that it is always in vertical direction during walking.
Hip Trajectory.
In the dynamic approach hip trajectory in X direction is modeled with ﬁfth order
polynomial. All six parameters can be calculated given initial and ﬁnal values
for coordinate, velocity and acceleration.
Problem symmetry gives us equal velocity and acceleration in start and end
points. If v0 is initial velocity and a0 is initial acceleration, then
xhip = c5t5 + c4t4 + c3t3 + c2t2 + c1t + c0
xhip(0) = −L0

2 xhip(TS) = L0

2
vhip(0) = vhip(TS) = v0
ahip(0) = ahip(TS) = a0
yhip = H
(6)
Coeﬃcients of polynomial are found from boundary conditions as following
c0 = −L0

2c1 = V0 c2 = a0

2
c5 = (6d2−3d1)
T 2
S
c4 = (d1−3d2−2c5T 2
S)
TS
c3 = d2 −c5T 2
S −c4TS
(7)
where d1 = −2c2
TS , d2 = L0−c1TS−c2T 2
S
T 3
S
Swing Foot Trajectory.
In our work trigonometric functions are used to build trajectory proﬁle, since
they are simple and can provide zero velocities at contact moments. From the
problem symmetry, we conclude that foot stays ﬁxed for 0.5TDS from beginning

Kinematic and Dynamic Approaches . . .
311
and for 0.5TDS before the end, where TDSis double support time. Then foot
trajectory is written as
xfoot = −L0, if t < 0.5TDS
xfoot = −L0cos(πt/TSS), if 0.5TDS < t < TS −0.5TDS
xfoot = L0, if t > TS −0.5TDS
yfoot = 0, if t < 0.5TDS
yfoot = 0.5h(1 −cos(2πt/TSS)), if 0.5TDS < t < TS −0.5TDS
yfoot = 0, if t > TS −0.5TDS
(8)
4.2
Inverse Kinematics
Inverse kinematics problem solution is taken from kinematic approach. The only
diﬀerence is related to angles notation (see Figs. 11 and 15.). Here, we deﬁne qsup
1
and qsup
2
as hip and knee joints of supporting foot and qsw
1
and qsw
2
as hip and
knee joints of swing foot (see Fig. 11), then θ angles in Fig. 15 can be written as
θ1 = qsup
1
+qsup
2
, θ2 = qsup
1
, θ4 = −qsw
1
, θ5 = −qsw
1
−qsw
2
. Angle θ3 is independent
from hip and foot positions and deﬁned separately.
Besides joint angles we also need to ﬁnd joint velocities and accelerations in
each leg by using
˙q = J(q)−1 ˙X
¨q = J(q)−1b
b = ¨X −d
dt(J(q) ˙q)
(9)
where J(q)is Jacobian matrix, which can be computed from forward kinematics
equations for each leg.
4.3
Inverse Dynamics
Inverse dynamics of the robot model is calculated for single support phase.
Figure 15 shows robot parameters. Angles θi (i = 1, 2, 3, 4, 5) are suﬃcient to
deﬁne the conﬁguration. Firstly, we write Lagrange motion equation:
d
dt
	∂K
∂˙qi

−∂K
∂qi
+ ∂U
∂qi
= Qi (i = 1, 2 . . . , 5)
(10)
where K and U are the total kinetic and potential energy respectively, qi = θi.
The equation can be converted to the following form:
D(θ)¨θ + h(θ, ˙θ) + G(θ) = Tθ
(11)
where Tθiis generalized torque corresponding to θi angle. If we want to calculate
driving torques, we should use the angles between links ϕi. The relationships
between θiand ϕi are the following:
θ1 = ϕ1, θ2 = ϕ1 −ϕ2, θ3 = ϕ1 −ϕ2 −ϕ3
θ4 = −ϕ1 + ϕ2 + ϕ3 + ϕ4
θ5 = −ϕ1 + ϕ2 + ϕ3 + ϕ4 −ϕ5
(12)

312
R. Khusainov et al.
Thus, from relation
Tϕi =
5

j=1
Tθi
∂θj
∂ϕi
, i = 1, . . . , 5
(13)
we can calculate driving torques.
4.4
Motion Stability
There are several stability criteria used in bipedal walking. Undoubtedly the
most important stability criterion is based on the ZMP. The ZMP is the point
on the ground where horizontal moments of ground-foot interaction are equal to
zero.
The ZMP criterion says that the walking is stable if ZMP point is located
inside support polygon. In our case ZMP coordinate can be calculated with the
following formula:
xzmp =
5
i=1
mi(¨yi + g)xi −
5
i=1
mi¨xiyi −
5
i=1
Ji¨qi
5
i=1
mi(¨yi + g)
(14)
where summation goes over each link with mass mi, CoM coordinates xiyi,
moment of inertia around CoM Ji and angular acceleration around CoM ¨qi.
4.5
Gait Optimization
The main goal of this optimization is to ﬁnd the best motion gait pattern for
the robot. Four parameters of the gait, initial hip accelerationa0, initial velocity
hip velocity v0, step length L0 and step period TS are optimized in our work.
Method.
There are diﬀerent gradient and non-gradient approaches that can be used to
solve constrained optimization problem. In our work gradient based approach
implemented in the Matlab (Mathworks, Inc.) function fmincon is used. To
improve the robustness of the developed approach a number of initial points
are used, which were randomly chosen within parameter bounds.
Objective Functions and Constraints.
Locomotion speed, which is calculated as V = L0/TS, was used as an objective
function, which was maximized using fmincon function.
Actuator power and the ZMP criteria constraints were used in minimization
problem. Actuator power was calculated as Pi = |Tϕi ˙ϕi|. Its value should be
less than Pmax for each actuator. ZMP point during single support phase should
lie closer to center of supporting foot. Since center of supporting foot has zero
x coordinate, ZMP point coordinate, calculated by (14), should have absolute
value less than zmpmax.

Kinematic and Dynamic Approaches . . .
313
4.6
Optimization Results
Optimization problem was solved for ﬁve diﬀerent double support time ratios:
15, 20, 25, 30, 35%; four diﬀerent hip height: 0.4, 0.45, 0.5, 0.55 m; three dif-
ferent swing foot maximum height: 5, 10, 15 cm. Table 3, 4, 5, 6 and 7 present
optimization results, optimal step length, optimal step time and maximum speed
for each group of parameters.
Tables 8, 9 and 10 present maximum speed dependency on double support
ratio, hip height and foot height. We see that maximum speed increases with
DSR increase up to 25% and then decreases. It can be explained with the fact
that initial increase of DSR improves robot stability and further increase shortens
swing motion time and needs more power in actuators.
As expected, we see the best speed is shown when foot has the lowest tra-
jectory, which means the lowest energy consumption. As for hip height, there is
an optimal value of 0.45 m. Increase of height leads to shorter steps due to kine-
Table 3. Optimization results for double support ratio 15%
Hip height
Foot height
5 cm
10 cm
15 cm
0.4 m
0.58 m/s, 18 cm,
0.3 s
0.64 m/s, 26 cm,
0.40 s
0.58 m/s, 24 cm,
0.42 s
0.45 m
0.59 m/s, 18 cm,
0.3 s
0.58 m/s, 21 cm,
0.36 s
0.59 m/s, 23 cm,
0.39 s
0.5 m
0.57 m/s, 18 cm,
0.31 s
0.63 m/s, 31 cm,
0.49 s
0.51 m/s, 20 cm,
0.39 s
0.55 m
0.4 m/s, 14 cm,
0.34 s
0.28 m/s, 12 cm,
0.45 s
0.23 m/s, 13 cm,
0.57 s
Table 4. Optimization results for double support ratio 20%
Hip height
Foot height
5 cm
10 cm
15 cm
0.4 m
0.65 m/s, 27 cm,
0.42 s
0.59 m/s, 25 cm,
0.42 s
0.54 m/s, 24 cm,
0.44 s
0.45 m
0.64 m/s, 24 cm,
0.38 s
0.59 m/s, 24 cm,
0.41 s
0.61 m/s, 27 cm,
0.44 s
0.5 m
0.62 m/s, 24 cm,
0.39 s
0.57 m/s, 24 cm,
0.42 s
0.57 m/s, 26 cm,
0.45 s
0.55 m
0.37 m/s, 12 cm,
0.34 s
0.25 m/s, 12 cm,
0.5 s
0.2 m/s, 12 cm,
0.6 s

314
R. Khusainov et al.
Table 5. Optimization results for double support ratio 25%
Hip height
Foot height
5 cm
10 cm
15 cm
0.4 m
0.64 m/s, 30 cm,
0.47 s
0.59 m/s, 29 cm,
0.50 s
0.55 m/s, 31 cm,
0.56 s
0.45 m
0.69 m/s, 34 cm,
0.50 s
0.64 m/s, 32 cm,
0.50 s
0.61 m/s, 31 cm,
0.51 s
0.5 m
0.65 m/s, 31 cm,
0.47 s
0.6 m/s, 29 cm,
0.48 s
0.53 m/s, 25 cm,
0.47 s
0.55 m
0.33 m/s, 11 cm,
0.34 s
0.23 m/s, 12 cm,
0.54 s
0.18 m/s, 12 cm,
0.64 s
Table 6. Optimization results for double support ratio 30%
Hip height
Foot height
5 cm
10 cm
15 cm
0.4 m
0.64 m/s, 35 cm,
0.56 s
0.59 m/s, 34 cm,
0.58 s
0.53 m/s, 34 cm,
0.65 s
0.45 m
0.67 m/s, 38 cm,
0.56 s
0.63 m/s, 36 cm,
0.57 s
0.58 m/s, 33 cm,
0.57 s
0.5 m
0.59 m/s, 29 cm,
0.49 s
0.55 m/s, 28 cm,
0.5 s
0.46 m/s, 24 cm,
0.52 s
0.55 m
0.3 m/s, 11 cm,
0.36 s
0.21 m/s, 11 cm,
0.54 s
0.17 m/s, 12 cm,
0.71 s
Table 7. Optimization results for double support ratio 35%
Hip height
Foot height
5 cm
10 cm
15 cm
0.4 m
0.62 m/s, 40 cm,
0.64 s
0.58 m/s, 40 cm,
0.69 s
0.51 m/s, 40 cm,
0.78 s
0.45 m
0.62 m/s, 37 cm,
0.6 s
0.59 m/s, 37 cm,
0.63 s
0.54 m/s, 33 cm,
0.61 s
0.5 m
0.57 m/s, 29 cm,
0.5 s
0.53 m/s, 27 cm,
0.5 s
0.42 m/s, 23 cm,
0.56 s
0.55 m
0.26 m/s, 10 cm,
0.4 s
0.18 m/s, 11 cm,
0.62 s
0.15 m/s, 11 cm,
0.73 s
matic constraints and we see sharp decrease in speed for 0.55 m height. Decrease
of the height results in larger joint angle changes, therefore it is not optimal.

Kinematic and Dynamic Approaches . . .
315
Table 8. Maximum speed for diﬀerent double support ratio
Double support phase
15%
20%
25%
30%
35%
Speed
(m/s)
0.64
0.65
0.69
0.67
0.62
Table 9. Maximum speed for diﬀerent hip height
Y hip (m)
0.4
0.45
0.5
0.55
Speed (m/s)
0.65
0.69
0.65
0.4
Table 10. Maximum speed for diﬀerent foot height
Y hip (cm)
5
10
15
Speed (m/s)
0.69
0.64
0.65
Fig. 16. Coordinate, velocity and acceleration of hip in x direction
Maximum speed of 0.69 m/s was obtained for 0.008 m/s2 initial hip acceler-
ation, 0.8715 m/s initial hip velocity, 0.34 m step length and 0.5 s step time for
25% double support ratio, 0.45 m hip height and 5 cm maximum foot height.
Hip and joint trajectories and actuator power are shown in Figs. 16, 17 and 18.
It might be noted that knee joint of the swing leg has the highest angular
velocity and acceleration. Here, joint acceleration exceeds 200 1/s2, which is
very high value at ﬁrst glance. However, power values of the swing leg knee
actuator are within the limit 300 Watt. Also, we can notice that power values
of supporting ankle and swing hip joints are reached their maximum values (90
and 150 W). It means that these two actuators are subjected to critical loading.

316
R. Khusainov et al.
Fig. 17. Angles, angular velocity and angular acceleration of robot joints
Fig. 18. Motor power in robot actuators
5
Conclusions
In the paper we considered a problem of optimization gait pattern for a bipedal
robot, which maximizes its locomotion speed under joint angular velocity, accel-
eration and actuator power limits. We compared two approaches for deﬁning the
optimal leg trajectory of biped locomotion. The ﬁrst one, kinematic approach,
uses joint kinematic limits and utilizes dynamic programming and trapezoidal
velocity proﬁle methods to ﬁnd trajectories where joints are rotated with possi-
bly the maximum allowed speed or acceleration. However, the ZMP analysis of
such trajectories shows that this kind of motion is unstable if there is no addi-
tional compensation of the ZMP deviation from the stable one, corresponding
to the center of the supporting foot. Therefore, such optimal trajectories are

Kinematic and Dynamic Approaches . . .
317
applicable only if we use the upper body motion to balance the robot dynamics
during walking.
The second approach considers the robot dynamics and solves optimiza-
tion problem to ﬁnd maximum speed under actuator power and stability con-
straints. In contrast to kinematic approach, it allows us to use diﬀerent veloc-
ity/acceleration limits depending on the payload applied to the actuated joint.
This allowed us to reach physical limits for the swing leg. Simulation results
show that robot can achieve speed up to 0.69 m/s.
Future research will be done in several directions. Firstly, the developed app-
roach will be applied to frontal plane motion. Secondly, we will utilize vertical
hip motion to increase our performance. And ﬁnally optimization problem will
be solved not only for straight motion, but also for walking along arbitrary tra-
jectories.
Acknowledgements. This research has been supported by Russian Ministry of Edu-
cation and Science as a part of Scientiﬁc and Technological Research and Devel-
opment Program of Russian Federation for 2014–2020 years (research grant ID
RFMEFI60914X0004) and by Android Technics company, the industrial partner of
the research.
References
1. Wright, J., Jordanov, I.: Intelligent approaches in locomotion - a review. J. Intell.
Robot. Syst. 80, 255–277 (2014)
2. Sakagami, Y., Watanabe, R., Aoyama, C., Matsunaga, S., Higaki, N., Fujimura, K.:
The intelligent ASIMO: System Overview and Integration, pp. 2478–2483. IEEE,
New York (2008)
3. Ogura, Y., Aikawa, H., Shimomura, K., Kondo, H., Morishima, A., Lim, H.-o.,
Takanishi, A.: Development of a New Humanoid Robot WABIAN-2. pp. 76-81.
IEEE, New York (2006)
4. Shamsuddin, S., Ismail, L.I., Yussof, H., Zahari, N.I., Bahari, S., Hashim, H., Jaﬀar,
A.: Humanoid Robot NAO: Review of Control and Motion Exploration. pp. 511–
516. IEEE, New York (2011)
5. Feng, S., Whitman, E., Xinjilefu, X., Atkeson, C.G.: Optimization-based full body
control for the DARPA robotics challenge. J. Field Robot. 32, 293–312 (2015)
6. Vukobratovic, M., Borovac, B.: Zero-moment point - thirty ﬁve years of its life.
Int. J. Hum. Robot. 01, 157–173 (2004)
7. Shaﬁi, N., Abdolmaleki, A., Lau, N., Reis, L.P.: Development of an Omnidirectional
Walk Engine for Soccer Humanoid Robots (2015)
8. Albert, A., Gerth, W.: Analytic path planning algorithms for bipedal robots with-
out a trunk. J. Intell. Robot. Syst. 36, 109–127 (2003)
9. Sato, T., Sakaino, S., Ohnishi, K.: Real-time walking trajectory generation method
with three-mass models at constant body height for three-dimensional biped
robots. IEEE Trans. Indust. Electron. 58, 376–383 (2011)
10. Ha, T., Choi, C.-H.: An eﬀective trajectory generation method for bipedal walking.
Robot. Autonom. Syst. 55, 795–810 (2007)
11. Erik Cuevas, D.Z.: Polynomial Trajectory Algorithm for a Biped Robot (2010)

318
R. Khusainov et al.
12. Katoh, R., Mori, M.: Control method of biped locomotion giving asymptotic sta-
bility of trajectory. Automatica 20, 405–414 (1984)
13. Furusho, J., Masubuchi, M.: Control of a dynamical biped locomotion system for
steady walking. J. Dyn. Syst. Meas. Control 108, 111–118 (1986)
14. Liu, C., Wang, D., Chen, Q.: Central pattern generator inspired control for adaptive
walking of biped robots. IEEE Trans. Syst. Man Cybern. Syst. 43, 1206–1215
(2013)
15. Kajita, S., Kanehiro, F., Kaneko, K., Fujiwara, K., Harada, K., Yokoi, K.,
Hirukawa, H.: Biped walking pattern generation by using preview control of zero-
moment point. In: Proceedings of the IEEE International Conference on Robotics
and Automation, 2003. ICRA ’03, vol. 1622, pp. 1620–1626 (2003)
16. Katayama, T., Ohki, T., Inoue, T., Kato, T.: Design of an optimal controller for a
discrete-time system subject to previewable demand. Int. J. Control 41, 677–699
(1985)
17. Goswami, A.: Postural stability of biped robots and the foot-rotation indicator
(FRI) point. Int. J. Robot. Res. 18, 523–533 (1999)
18. Dau, V.-H., Chew, C.-M., Poo, A.-N.: Achieving energy-eﬃcient bipedal walking
trajectory through GA-based optimization of key parameters. Int. J. Hum. Robot.
6, 609–629 (2009)
19. Liu, Z., Wang, L., Chen, C.L.P., Zeng, X., Zhang, Y., Wang, Y.: Energy-eﬃciency-
based gait control system architecture and algorithm for biped robots. IEEE Trans.
Syst. Man. Cybern. Part C (Appl. Rev.) 42, 926–933 (2012)
20. Khusainov, R., Klimchik, A., Magid, E.: Swing leg trajectory optimization for a
humanoid robot locomotion. In: 2016 13th International Conference on Informatics
in Control, Automation and Robotics (ICINCO) (2016)
21. Khusainov, R., Shimchik, I., Afanasyev, I., Magid, E.: Toward a human-like loco-
motion: modelling dynamically stable locomotion of an anthropomorphic robot in
simulink environment. In: 2015 12th International Conference on Informatics in
Control, Automation and Robotics (ICINCO), pp. 141–148 (2015)
22. Nakamura, M.: Trajectory planning for a leg swing during human walking. IEEE
Int. Conf. Syst. Man Cybern. 1, 784–790 (2004)
23. Khusainov, R., Sagitov, A., Afanasyev, I., Magid, E.: Bipedal robot locomotion
modelling with virtual height inverted pendulum in Matlab-Simulink and ROS-
Gazebo environments. J. Robot. Netw. Artif. Life 3 (2016)
24. Tangpattanakul, P., Artrit, P.: Minimum-time trajectory of robot manipulator
using Harmony Search algorithm. In: 6th International Conference on Electrical
Engineering/Electronics, Computer, Telecommunications and Information Tech-
nology, 2009. ECTI-CON 2009, pp. 354–357 (2009)
25. Si, J., Yang, L., Chao, L., Jian, S., Shengwei, M.: Approximate dynamic program-
ming for continuous state and control problems. In: 17th Mediterranean Conference
on Control and Automation, 2009. MED ’09, pp. 1415–1420 (2012)
26. Khusainov, R., Afanasyev, I., Magid, E.: Anthropomorphic robot modelling with
virtual height inverted pendulum approach in Simulink: step length and period
inﬂuence on walking stability. In: The 2016 International Conference on Artiﬁcial
Life and Robotics (ICAROB 2016), Japan (2016)
27. Klimchik, A., Pashkevich, A., Caro, S., Chablat, D.: Stiﬀness matrix of manipula-
tors with passive joints: computational aspects. IEEE Trans. Robot. 28, 955–958
(2012)
28. Klimchik, A., Chablat, D., Pashkevich, A.: Stiﬀness modeling for perfect and non-
perfect parallel manipulators under internal and external loadings. Mech. Mach.
Theory 79, 1–28 (2014)

Kinematic and Dynamic Approaches . . .
319
29. Klimchik, A., Pashkevich, A., Chablat, D., Hovland, G.: Compliance error compen-
sation technique for parallel robots composed of non-perfect serial chains. Robot.
Comput. Integr. Manufact. 29, 385–393 (2013)
30. Klimchik, A., Bondarenko, D., Pashkevich, A., Briot, S., Furet, B.: Compliance
Error Compensation in Robotic-Based Milling. In: Ferrier, J.-L., Bernard, A.,
Gusikhin, O., Madani, K. (eds.) Informatics in Control, Automation and Robotics:
9th International Conference, ICINCO 2012 Rome, Italy, July 28–31, 2012 Revised
Selected Papers, pp. 197–216. Springer International Publishing, Cham (2014)
31. Klimchik, A., Furet, B., Caro, S., Pashkevich, A.: Identiﬁcation of the manipulator
stiﬀness model parameters in industrial environment. Mech. Mach. Theory 90,
1–22 (2015)
32. Majima, K., Miyazaki, T., Ohishi, K.: Dynamic gait control of biped robot based
on kinematics and motion description in Cartesian space. Electr. Eng. Jpn. 129,
96–104 (1999)
33. Mitobe, K., Capi, G., Nasu, Y.: Control of walking robots based on manipulation
of the zero moment point. Robotica 18, 651–657 (2000)
34. Ude, A., Atkeson, C.G., Riley, M.: Programming full-body movements for
humanoid robots by observation. Robot. Autonom. Syst. 47, 93–108 (2004)
35. Yamaguchi, J., Soga, E., Inoue, S., Takanishi, A.: Development of a bipedal
humanoid robot-control method of whole body cooperative dynamic biped walk-
ing. In: 1999 IEEE International Conference on Robotics and Automation, 1999.
Proceedings, vol. 361, pp. 368–374 (1999)


Signal Processing, Sensors, Systems
Modelling and Control

Identiﬁcation and Control of the Waelz Process
Using Infrared Image Processing
J¨org Matthes(B), Patrick Waibel, Hubert B. Keller, and Lutz Gr¨oll
Institute for Applied Computer Science, Karlsruhe Institute of Technology,
Hermann-von-Helmholtz-Platz 1, Eggenstein-Leopoldshafen 76344, Germany
joerg.matthes@kit.edu, patrick.waibel@kit.edu, hubert.keller@kit.edu,
lutz.groell@kit.edu
Abstract. Today, the recycling of zinc from zinc-bearing residues is
mostly done by the pyro-metallurgical Waelz process in a rotary kiln.
The optimum recovery rate is only achieved, if the temperature of the
slag within the kiln is controlled at optimal values. These optimal tem-
peratures vary and depend on the material mixture. The slag tempera-
ture is measured by pyrometers so far. They yield only pointwise mea-
surements that can be erroneous due to cold slag lumps. The control
of the slag temperature takes place manually by experienced operators,
who adapt the process air to stabilize the process at the desired tem-
perature setpoint. The paper presents a slag temperature measurement
system with an infrared camera and an image processing system. It con-
tains an automatic motion based slag detection. Using the camera based
measurements, a process model for the Waelz process is derived and its
parameters are estimated by a process identiﬁcation. Using the process
model the controller parameters are optimized by minimizing a cost func-
tional. The sensitivity of the cost functional with respect to the controller
parameters is analyzed. The optimized automatic closed-loop control is
ﬁnally demonstrated at an industrial Waelz kiln.
Keywords: Model identiﬁcation · Process control · Infrared camera ·
Image processing · Rotary kiln · Waelz process · Zinc recycling
1
Introduction
The most common technology, that is applied for the recycling of dusty steel
mill residues and in particular of EAF (electric arc furnace) dust is the pyro-
metallurgical Waelz kiln process. This process is characterized by the volatiliza-
tion of non-ferrous metals like zinc, lead, and cadmium from an oxidized solid
mixture through reduction by coke or coal in a rotary kiln. At the same time,
ferrous oxides are reduced also [8].
The Waelz kiln (Fig. 1), which is a rotary kiln [2] operated counter currently
at a rotational speed of ≈1 rpm and a slope of 2–3%, is the main component of the
Waelz process. At the slag discharge end the air enters the kiln. At the feed end
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_16

324
J. Matthes et al.
Fig. 1. Scheme of a Waelz kiln for zinc recycling with SDHL-process air lance and
infrared camera for slag temperature measurement [7]
the solid charge enters the kiln, is ﬁrst dried and then heated up (temperature
ϑ1) until the reaction starts (temperature ϑ2). The maximum temperature of
the slag reaches about 1250 ◦C. The process does not require additional heating
under normal operation conditions.
The reduction of the zinc oxide and iron oxide starts at about 800 ◦C. At this
temperature, the metallic zinc volatilizes into the gas phase of the kiln. Here, it
is reoxidized and together with the counter current air ﬂow it is transported as
solid dust into a dust chamber.
Modern plants additionally make use of the so-called SDHL technique [9].
With this technique, supplemental air, so called process air, is applied to the slag
at the kilns discharge end using an air lance in order to reoxidize the metallic iron.
The produced heat is used to reduce the amount of coal needed. The amount of
process air uair can be used as actuating variable to control the slag temperature
ϑ3 at the end of the kiln additionally.
To achieve an optimum zinc recovery, the slag temperature in the kiln has to
be controlled. The temperatures have to be high enough to reduce and volatilize
the zinc completely. If the temperature gets too high, the material agglutinates
and therefore the surface area of the material is reduced. This prevents the zinc
from reduction and volatilization and thus lowers the zinc recovery. Unfortu-
nately, the optimum temperatures are unknown. Their values depend on the
unknown properties of the raw material. Since the raw material is a waste prod-
uct, these properties vary over time. Thus, the optimum setpoint value for the
slag temperature has to be adapted frequently by operators, who observe the
behavior of the material (slag) at the end of the kiln and then adapt the tem-
perature setpoint manually based on their process experience.
In the paper, an infrared camera based image processing system is described.
It allows for an improved observation, temperature measurement, and control
of the Waelz process. Then a process model is for the Waelz process is pre-
sented using the camera and image processing based temperature measurements.
The model parameter estimation is done by minimizing the model-output-error.
Then, the process model is used for a controller design and tuning to get an
automatic closed loop control [7]. The controller tuning is performed by min-

Identiﬁcation and Control of the Waelz Process . . .
325
imizing a cost functional. A sensitivity of the cost functional with respect to
the controller parameters is analyzed. The new camera based slag temperature
control system is ﬁnally demonstrated at an industrial Waelz plant.
2
Camera Based Temperature Measurement
Unfortunately, the view into the kiln in the visible spectral range (VIS) is poor,
which may lead to a false rating of the current behavior of the slag as shown in
Fig. 2 (left). For this reason, a custom-built infrared (IR) camera (Pyroinc 320F
from Dias-Infrared, an uncooled micro bolometer system) with a spectral ﬁlter
at 3.9 ± 0.1 µm is used for the observation of the Waelz kiln interior. In this
spectral band, all relevant gas components are nearly transparent and negative
inﬂuence of small zinc oxide and coal particles in the kiln’s atmosphere on the
transmissivity is reduced. Figure 2 (right) shows such an IR camera image of the
end of the Waelz kiln. Compared to the VIS camera, the IR camera allows for a
deep insight into the kiln.
Another challenge is the measurement of the slag temperature within the
rotary kiln. Until now, pyrometers are used, which measure a single spot of the
slag only. Cold lumps in the slag at this spot may result in signiﬁcant measure-
ment errors of the slag temperature as demonstrated in Fig. 3. The resulting
temperature signal drops in case of cold lumps and gives a wrong information
about the slag temperature for the plant operator. If an IR camera system is
used, the whole slag region can be used for calculating the mean slag tempera-
ture. Additionally, an image processing algorithm to detect cold lumps allows to
omit the cold lumps for the mean temperature calculation. Thus, a much more
reliable measurement of the slag temperature is possible based on the IR camera
system. This also improves the quality of the slag temperature control.
Fig. 2. Comparison of a standard CCD camera image in the visible spectral range
(left) and of an IR camera with a spectral ﬁlter at 3.9 ± 0.1µm at the end of the Waelz
kiln (right) (Tip of air lance is covered on legal grounds) [7]

326
J. Matthes et al.
Fig. 3. Slag temperature measurement with pyrometer compared to IR camera [7]
3
Image Processing
Deep insight into the Waelz kiln with the IR camera is very useful for the manual
inspection of the process. Control room operators can detect relevant changes in
the process early. However, the application of an IR camera aims at integrating
camera information in the closed loop control of the kiln. For this purpose, a
reliable image processing system is required, which evaluates the quality of the
IR images and then extracts process-relevant information. This information must
be expressed in suitable process parameters which describe the current state of
the process and the slag and can be used directly in the process control system.
Figure 4 gives an overview of the structure of the image processing system. The
single steps will be explained below.
Due to failures of the camera system or temporarily heavy dust loads in the
kiln’s atmosphere, the image quality may be too low for a reliable calculation of
process parameters from the IR images. Since the camera and image processing
system are part of the closed loop control, such failures have to be detected
automatically and reported to the process control system. Accordingly, the ﬁrst
step of image processing is the determination of the image quality. It is based

Identiﬁcation and Control of the Waelz Process . . .
327
IR Images
Image Quality Check
Projection of Inner Lateral Area of Kiln
Segmentation
(Slag and Lump Detection)
Camera-based Signals
for Process Control
Calculation of Process Parameters
Fig. 4. Structure of the image processing system [7]
Fig. 5. Original infrared image and projection of inner lateral area of the kiln [7]
on plausibility checks of temperature and contrast ranges in the image. Only if
these checks are passed successfully, the image processing proceeds.
Then, the geometric projection of the inner lateral area of the kiln is calcu-
lated. The inner lateral area as well as the solid bed area become a rectangle.
This allows for the equal-area calculation of temperatures and other properties
of the kiln’s interior. The original IR image and the projection of the inner lateral
area of the kiln are depicted in Fig. 5.
Since the solid bed (slag) properties are of special interest to the Waelz
process, the next task is to detect the solid bed region in the IR image, i.e.
to segment the image into the solid bed region and the remainder (inner wall

328
J. Matthes et al.
Fig. 6. Vector ﬁeld of mapped kiln’s inner surface motion (left) and averaged horizontal
velocity values with segmentation result (right)
of kiln) [10]. A straight-forward way to detect the solid bed region is to use
the temperature diﬀerence between the solid bed and the inner wall of the kiln.
However, there are process situations with marginal temperature diﬀerences only,
which could cause a wrong segmentation result. For such situations, a motion-
based image segmentation algorithm was developed [10].
The algorithm computes an optical-ﬂow vector ﬁeld [3] out of two successive
mapped images (Fig. 6 left). Each vector speciﬁes the direction and the magni-
tude of the movement of a pixel between two frames. Due to the mapping step
the rotation of the kiln is transformed into a rightward movement. Consequently,
discriminating the solid bed from the kiln’s wall corresponds to detecting the
image region that is not constantly moving to the right in the mapped image.
Since the material of the solid bed is also transported up along the kiln wall
before it collapses respectively slides back in the opposite direction, a discrimi-
nation via movement is not possible at all times. Thus a moving average ﬁlter
was implemented which averages the movements of the last 200 frames. In the so
computed image (Fig. 6 right) brighter gray values correspond to higher average
velocities. Whereas the dark vertical stripe on the right side is due to the air
supply unit, the dark stripe more to the left is caused by the dynamics of the
solid bed. Based on the averaged velocity values the solid bed can be segmented
with a simple threshold operator.
Afterwards the segmented region in the mapped rectangular is mapped back
to the original image as shown in Fig. 7.
The segmentation method can be improved by integrating prior knowledge
about the shape of the slag region within the mapped image. For instance, the
best-ﬁtting rectangular of the segmented region in the mapped horizontal veloci-
ties can be used. This improves the segmentation result in the more distant region
of the solid bed. Additionally, the diﬀerence between the segmented region and
the best-ﬁtting rectangle can be used as an indicator for the particular movement
pattern of the solid bed.

Identiﬁcation and Control of the Waelz Process . . .
329
Fig. 7. Remapping of segmentation result into original image
Fig. 8. Overview of solid bed segmentation algorithm [10]
The single steps of the segmentation ﬁlter chain are illustrated in Fig. 8.
In some process situations, cold lumps in the slag may distort the calcula-
tion of temperature proﬁles of the solid bed. For this reason, image processing
performs an automatic lump detection which is based on the diﬀerence between
the mean slag temperature and the lump temperature. The size and number of
the detected lumps are calculated as additional process parameters. For further
calculations, e.g. for the calculation of the control variable mean solid bed/slag
temperature ϑ3, the detected lump regions are omitted, which improves the reli-
ability of the solid bed temperature measurement compared to a pyrometer (see
Fig. 3). Additionally, information about the rheological behavior of the slag like
repose and ﬁlling angle can be extracted from the IR images [4,6].
For industrial application, the image processing algorithms are integrated
into the software tool Inspect pro control.
4
Camera Based Process Identiﬁcation
The basis for a theoretic modeling of rotary kiln processes are the balance equa-
tions for mass, energy, impulse and materials. They form a system of partial
diﬀerential equations [2]. For a numerical solution they can be discretized in
space and thus transformed into a large system of coupled ordinary diﬀerential

330
J. Matthes et al.
equations. The large number of chemical and physical parameters contained in
this system (here >100) are mostly unknown. An experimental identiﬁcation
of this large number of parameters is not feasible, since only little measurement
information can be obtained from the inner of the rotary kiln. Thus, the complex
material and heat transfer processes as well as the chemical reactions within the
rotary kiln prevent a straight theoretic modeling of the zinc recycling process.
For the design of a closed loop control for the slag temperature ϑ3 at the end
section of the rotary kiln (see Fig. 1) a simpliﬁed process model is suﬃcient. The
simpliﬁed process model should only reﬂect the control relevant dynamics of the
system and contain only a small number of parameters. Here, the structure of
such a simpliﬁed model is deduced from a qualitative theoretic process analysis.
Then, the parameters are identiﬁed based on experiments at an industrial rotary
kiln.
4.1
Model Structure
The input signal of the simpliﬁed model is the process air uair normalized to
the range of 0–100%. The output of the model is the slag temperature ϑ3 at the
end of the rotary kiln (see Fig. 1), which is the control variable and is measured
by means of the IR-camera system as described in the previous sections. The
simpliﬁed model only regards changes Δuair and Δϑ3 with respect to the current
operating point (uair,e, ϑ3,e). To have a better relation to the actual rotary kiln
process, the absolute values Δuair + uair,e and Δϑ3 + ϑ3,e are depicted in the
diagrams. For the sake of readability from now on Δ is omitted for all signals.
Figure 9 shows an experimental step response of the system starting from
operating point (uair,e = 53%, ϑ3,e = 1125 ◦C). Here the process air uair was
increased from 53 to 73% (i. e. by 20 pp) at minute 19. The increase of process
air leads to a rapid decrease of the slag temperature ϑ3 from approx. 1125–
Fig. 9. Step response of the slag temperature when process air changes [7]

Identiﬁcation and Control of the Waelz Process . . .
331
Fig. 10. Signal ﬂow diagram of the simpliﬁed model for slag temperature in the rotary
kiln [7]
1090 ◦C due to the cooling eﬀect of the increased process air. Parallely, the
increase of process air causes an increase in the exothermic oxidation of iron in
the slag, which leads to a slow increase in resulting heating power and thus to
an increase of the slag temperature ϑ3 up to 1200 ◦C.
This is a typical behavior of combustion processes where the increase of a fuel
component (here oxygen) leads to a short-term decrease of temperature before
the exothermic combustion leads to a long-term temperature increase. In control
theory this is known as all-pass behavior.
Figure 10 shows the structure of the simpliﬁed process model. The left part
of the signal ﬂow diagram in Fig. 10 represents the described behavior between
the process air uair and the heating power Pheat, that results from the cooling
and the exothermic oxidation of iron. The PT1-element (ﬁrst-order-lag-element)
with a small time constant Tair = 1 min covers the already known dynamics
of the air lance, since the change of the setpoint for uair does not change the
actual process air u′
air immediately. The short-term cooling eﬀect (Pcool) is only
signiﬁcant when the process air uair is increased. For this reason, in the model
the sign of ˙uair is evaluated. Here the DT1-element with time constants Tcool
and T ′
cool characterizes the dynamic of the short-term cooling eﬀect. The gain
Koxid represents the relation between process air and heating power due to the
iron oxidation.
The long-term increase of heating power due to an increase in process air leads
to a long-term increase of slag temperature ϑ3. In the model this is described
by an PT1-element with time constant T3 and gain K3P shown in the right part
of the signal ﬂow diagram in Fig. 10. The increase of ϑ3 causes an increase of
the gas phase temperature ϑG described by a PT1-element with time constant
TG and gain KG3. Since the gas moves in the opposite direction to the slag (see
Fig. 1), it is heating the slag in zone 2 (ϑ2). The dynamics of the heat transfer is
expressed again by a PT1-element with time constant T2 and gain K2G. Changes
in the slag temperature ϑ2 inﬂuence the slag temperature ϑ3 due to heat and
mass transfer. This eﬀect is covered in the model by an additional virtual heating
power K32 · ϑ2 proportional to temperature ϑ2.

332
J. Matthes et al.
From Fig. 10 the model can be expressed with the following set of Eq. [7].
Process air lance and the iron oxidation:
Tair ˙u′
air = −u′
air + uair
(1)
Pcool = 0
if ˙u′
air ≤0
(2)
Tcool ˙Pcool = −Pcool + T ′
cool ˙u′
air
if ˙u′
air > 0
(3)
Poxid = Koxidu′
air
(4)
Pheat = Poxid −Pcool
(5)
Heating and heat transfer within the rotary kiln:
T3 ˙ϑ3 = −ϑ3 + K3P (K32ϑ2 + Pheat)
(6)
TG ˙ϑG = −ϑG + KG3ϑ3
(7)
T2 ˙ϑ2 = −ϑ2 + K2GϑG
(8)
4.2
Parameter Estimation
The simpliﬁed model presented in the previous section contains only 10 parame-
ters
θ = (T ′
cool, Tcool, Koxid, T3, K32, K3P , TG, KG3, T2, K2G)T
(9)
that have to be estimated based on experimental data.
In Fig. 11 the results of three experiments at an industrial rotary kiln for
zinc recycling are shown for the temperature ϑ3. Each experiment lasts 240 min
and starts in a slightly diﬀerent operating point of the plant. In the experiments
the process air uair was varied to investigate the dynamic behavior of the rotary
kiln. It should be mentioned, that open loop experiments at the industrial plant
are very expensive, since the optimal operating point is left for hours. Even after
each 4-hour-experiment it took a couple of hours to reach an optimal steady
state of the plant again. For this reason, only 3 experiments could be performed,
which are the basis for the parameter estimation.
By numerical simulation (e.g. using Matlab) for a given estimate of the para-
meter vector ˆθ the model can be used to calculate the signal ˆϑ3(t; n, ˆθ) for each
experiment n = 1, . . . , 3 using the corresponding operating point and input sig-
nal uair(t; n). When the same input signals are used for the experiments and the
numerical simulation, then, with a perfect estimate ˆθ the measured output sig-
nal ϑ3(t; n) from experiment n would be approximately the same as the output
signal ˆϑ3(t; n, ˆθ) from the numerical simulation for each t.
Because of the simpliﬁed model structure and disturbances in the experimen-
tal data there will be a model output error for each t [7]:
eM(t; n, ˆθ) = ϑ3(t; n) −ˆϑ3(t; n, ˆθ)
(10)

Identiﬁcation and Control of the Waelz Process . . .
333
Fig. 11. Experimental results for slag temperature ϑ3 (blue) at industrial rotary kiln
resulting from variations in process air uair (green) used for parameter identiﬁcation
and simulation results (red) with optimal parameters ˆθopt [7].

334
J. Matthes et al.
Here, the parameter vector ˆθopt is searched for, that minimizes the integral
squared model output error over all three experiments [7]
ˆθopt = argmin
ˆθ
3

n=1
 240min
0min
eM(t; n, ˆθ)dt
(11)
Minimizing the model output error (also known as simulation error) to ﬁnd
the plant parameters has a number of advantages.
First, the model output error approach can be applied to any kind of model
structure (e.g. nonlinear) as long as a numerical simulation of the model can be
performed.
Second, although for linear models, an equation error based least squares
minimization is computationally faster, it is much more sensitive to measure-
ment noise. The output error approach is more robust and gives the maximum-
likelihood estimate for the parameters. Thus, for an oﬄine parameter estimation,
where computational speed is not in the focus, minimizing the output error is
the best choice.
The search for the optimal parameters is performed by a simplex search
method [5]. It starts at an initial value ˆθ0 and may only give a local solution.
For that reason diﬀerent (technical reasonable) initial values ˆθ0 are applied in
order to ﬁnd the global solution.
As a result, the minimal integral squared output error is obtained for the
following parameter values:
Koxid = 0.4 kW/pp
Tcool = 2 min
T ′
cool = 12 kW min/pp T3 = 20 min
K32 = 0.9 kW/K
K3P = 1.0 K/kW
TG = 1 min
KG3 = 1.0
T2 = 30 min
K2G = 0.5
As expected by process experts, the time constants T2 = 30 min and T3 = 20
min for the slag temperatures ϑ2 and ϑ3 are the dominant time constants of
the process. The cooling of the slag surface due to increased process air and the
change of gas phase temperature ϑG are considerably faster.
4.3
Model Validation
For the validation of the model and its parameters the results of numerical
simulations of the model are compared with the experiments in Fig. 11. For the
simulation, only the operating point at t = 0 and the input signal uair(t) are
known.
The ﬁrst experiment shows a very good match of the simulated temperature
ˆϑ3 (red) with the measured temperature ϑ3 (blue) over the whole 240 min. In
the second and third experiment only after 200 min a slight deviation can be
observed.
This means, that the simulated temperature ˆϑ3 from the model can be used
to forecast the slag temperature ϑ3 for more than three hours and is thus suitable
for a model based controller design.

Identiﬁcation and Control of the Waelz Process . . .
335
5
Camera Based Slag Temperature Control
Using the process model from the previous section the controller is designed,
tuned and tested by numerical simulations of the closed loop. Then, results from
the industrial application of the new camera based controller are presented.
5.1
Model Based Controller Design
To control the slag temperature ϑ3 at its desired setpoint ϑ3,d a PID-controller
uair = KP e(t) + 1
TN
 t
0
e(τ)dτ + TV ˙e(t)
(12)
with control error
e(t) = ϑ3,d(t) −ϑ3(t)
(13)
is applied. Here a PID-controller is the ﬁrst choice, because it is eﬀective, widely
accepted in the industrial environment and can easily be integrated into existing
process control systems. Since the actuating variable process air uair is limited
to 0 . . . 100% an integration wind-up could occure. For that reason, an integrator
stop is implemented as anti-windup method [1].
Additionally, a setpoint ﬁltering using a second order low-pass ﬁlter is imple-
mented to avoid discontinuous courses of the control error and thus the actuating
variable when the setpoint is changed by the operator.
The controller parameters KP , TN, TV are tuned based on the numerical
process model described in Sect. 4 and based on a typical course of the desired
slag temperature.
Figure 12 shows the simulated closed loop behavior with controller parame-
ters KP = 1, TN = 20 min, TV = 16 min. Starting from operating point 900 ◦C,
the setpoint for the desired temperature is increased at t = 30 min to 1000 ◦C.
The slag temperature drops slightly due to the all-pass-behavior and then slowly
follows the setpoint change and reaches the new setpoint after approx. 90 min.
If the setpoint is changed to 800 ◦C at t = 300 min again the slag tempera-
ture slowly follows and reaches the new setpoint after approx. 90 min. With a
slight overshoot a constant slag temperature at the desired value is reached after
approx. 200 min at t ≈500 min. In the lower part of Fig. 12 the corresponding
course of the process air is plotted.
The undesired slow convergence of the slag temperature to new setpoints
can be improved i.e. by increasing the controller gain KP . Figure 13 shows the
simulated closed loop behavior with controller parameters KP = 10, TN =
20 min, TV = 16 min. When the setpoint is increased at t = 30 min the con-
troller yields a fast increase in process air. Due to the all-pass-behavior of the
system, the slag temperature drops and thus, the control error e grows even
more, which yields to a further increase of uair until it reaches its limit at 100%.
As a result the control variable ϑ3 as well as the actuating variable uair start
oscillating unacceptably.

336
J. Matthes et al.
Fig. 12. Simulated closed loop behavior with controller parameters KP = 1, TN =
20 min, TV = 16 min
Fig. 13. Simulated closed loop behavior with controller parameters KP = 10, TN =
20 min, TV = 16 min
The example shows, that due to the all-pass-behavior a careful tuning of the
controller parameters is necessary. A trade-oﬀbetween fast convergence of slag
temperature to new setpoints and stability has to be found. This holds also for
the remaining controller parameters TN and TV .

Identiﬁcation and Control of the Waelz Process . . .
337
5.2
Controller Parameter Optimization
To ﬁnd the optimal set of controller parameters (KP , TN, TV ) the integral of
squared (control) error (ISE) over the whole simulation time
ISE =
 900min
0min
e2(τ)dτ
(14)
is regarded. In contrast to other control performance measures used in optimal
control and model predictive control, the ISE does not take the energy for the
actuating variable uair into account. This is reasonable here, since the energy
consumption for the air lance is marginal.
Figure 14 shows a contour plot of the ISE for a ﬁxed value of the derivative
action time TV = 16 depending on the controller gain KP and the integral time
TN. It can be seen, that there is a minimum ISE at KP ≈3.5 and TN ≈13. For
values TN > 10, the integral time TN has only a small inﬂuence on the controller
performance. The ISE depends highly on the controller gain KP .
Figure 15 shows a contour plot of the ISE for a ﬁxed value of the integral
time TN = 13 with respect to the controller gain KP and the derivative action
time TV . It can be seen, that there is a minimum ISE at KP ≈3.5 and TV ≈16.
From the contour plot it becomes clear, that both parameters KP and TV have
a signiﬁcant inﬂuence on the controller performance.
Fig. 14. Contour plot of the ISE for a ﬁxed value of TV = 16 depending on the
controller gain KP and the integral time TN

338
J. Matthes et al.
Fig. 15. Contour plot of the ISE for a ﬁxed value of TN = 13 depending on the
controller gain KP and the derivative action time TV
Fig. 16. Simulated closed loop behavior with optimal controller parameters KP =
3.6, TN = 13.3 min, TV = 16.1 min
The search for the optimal controller parameters is again performed by a
simplex search method [5] solving
minimize
KP ,TN,TV
 900min
0min
e2(τ)dτ
(15)

Identiﬁcation and Control of the Waelz Process . . .
339
Fig. 17. Comparison of manual control (ﬁrst 4 h) and automatic control using the new
camera based controller (following 4 h) at two diﬀerent days [7]

340
J. Matthes et al.
The optimization yields the controller parameters KP = 3.6, TN = 13.3 min,
TV = 16.1 min (red cross in Figs. 14 and 15, respectively). A closed-loop-control
simulation with these optimal parameters is depicted in Fig. 16. It shows a suf-
ﬁcient fast convergence of the slag temperature to new setpoints as well as no
oscillations.
5.3
Industrial Controller Validation
The PID-controller described in the previous section was implemented in a time-
discrete form and integrated into the Inspect pro control software. Every 5
seconds, a new value for the controller output uair is transfered to the process
control system and then applied to the plant.
So far, the process air uair has been manipulated manually by an experienced
operator to control the slag temperature ϑ3. Now, the operator can change from
manual to automatic control mode to apply the controller calculated process
air to the plant. When switching from manual to automatic control mode the
integrator of the PID-controller is set to the most recent manually set process
air value to obtain a shock-free behavior (process air value does not jump).
To compare the quality of manual control by experienced operators with the
new automatic control, in Fig. 17 two examples are given. Each ﬁgure shows
the course of the desired temperature ϑ3,d, the camera-based measured slag
temperature ϑ3 and the process air uair for approx. 8 h. In each case the ﬁrst
4 h are in manual control mode followed by 4 hours of automatic control mode.
In manual control mode the process air is only changed in time intervals of
at least 10 min. In automatic mode a quasi continuous adaptation of process air
is performed every 5 seconds. At day 1 at 12 pm the camera was removed for
about 10 min which leads to missing temperature measurements.
For both days the automatic control yields a signiﬁcant smaller variation of
the slag temperature around its setpoint. Thus, a higher process eﬃciency is
obtained using the new camera based controller.
6
Conclusion
The paper presents an infrared camera and image processing based closed loop
slag temperature control for the Waelz process. The motion based image process-
ing algorithms allow for an automatic detection of the slag region within the
infrared image of the rotary kiln interior.
Using the camera and image processing based temperature measurements, a
reduced process model is derived. The model gives a time-continuous mathemat-
ical description of the dynamic relation between the actuating variable process
air and the slag temperature under the air lance at the end of the rotary kiln.
The simpliﬁed model reveals an all-pass-behavior of the slag temperature and
contains only 10 parameters which are estimated by a model-output-error mini-
mization. With the resulting model a good slag temperature prediction for more
than three hours is possible.

Identiﬁcation and Control of the Waelz Process . . .
341
Then, the model is used for tuning the parameters of a PID automatic closed
loop control. A careful tuning of the controller parameters is necessary, because
of the all-pass-behavior of the process. The sensitivity of the closed-loop perfor-
mance with regard to the controller parameters is investigated. The optimal set
of parameters is found by a numerical minimization of the integral of squared
error (ISE) for a typical scenario.
Finally, the new closed loop control is applied at an industrial Waelz kiln.
The results show a signiﬁcant improvement compared to the manual control.
Future works will be focused on the development of multiple-input-multiple-
output model predictive control approaches to use additional actuating variables
like the negative pressure within the rotary kiln or the kiln’s rotational speed to
further improve the Waelz process.
References
1. ˚Astr¨om, K., H¨agglund, T.: Advanced PID Control. ISA-The Instrumentation, Sys-
tems, and Automation Society (2006)
2. Boateng, A., Rotary, K.: Transport Phenomena and Transport Processes. Elsevier
Science (2015)
3. Brox, T., Bruhn, A., Papenberg, N., Weickert, J.: High accuracy optical ﬂow esti-
mation based on a theory for warping. In: Computer Vision - ECCV 2004. Lecture
Notes in Computer Science, vol. 3024, pp. 25–36. Springer, Berlin (2004)
4. He, M., Zhang, J., Liu, X.: Determination of the repose angle of stuﬀin rotary
kiln based on imaging processing. In: 9th International Conference on Electronic
Measurement & Instruments (ICEMI) 2009, pp. 4–97–4–101 (2009)
5. Lagarias, J.C., Reeds, J.A., Wright, M.H., Wright, P.E.: Convergence properties of
the nelder-mead simplex method in low dimensions. SIAM J. Optim. 9, 112–147
(1998)
6. Matthes, J., Waibel, P., Keller, H.: A new infrared camera-based technology for the
optimization of the waelz process for zinc recycling. Miner. Eng. 24(8), 944–949
(2011)
7. Matthes, J., Waibel, P., Keller, H., Gr¨oll, L.: Camera based identiﬁcation and con-
trol of the waelz process. In: Proceedings of the 13th International Conference on
Informatics in Control, Automation and Robotics (ICINCO), pp. 291–298 (2016)
8. R¨utten, J.: Application of the waelz technology on resource recycling of steel mill
dust. SEAISI Q. (South East Asia Iron Steel Inst.) 35, 13–19 (2006)
9. Saage, E., Hasche, U., Dittrich, W., Langbein, D.: Method of utilizing secondary
raw materials containing iron, zinc and lead. US Patent 6,494,933. Accessed 17
Dec 2002
10. Waibel, P., Matthes, J., Keller, H.: Segmentation of the solid bed in infrared image
sequences of rotary kilns. In: Proceedings of the 7th International Conference on
Informatics in Control, Automation and Robotics (ICINCO), pp. 217–220 (2010)

Modeling and Calibrating Triangulation Lidars
for Indoor Applications
Anas Alhashimi1,2(B), Giovanni Pierobon3, Damiano Varagnolo1, and Thomas
Gustafsson1
1 Control Engineering Group, Department of Computer Science, Electrical and Space
Engineering, Lule˚a University of Technology, Lule˚a, Sweden
anas.alhashimi@ltu.se, damiano.varagnolo@ltu.se, thomas.gustafsson@ltu.se
2 Department of Computer Engineering, University of Baghdad, Baghdad, Iraq
3 Department of Information Engineering, University of Padova, Padova, Italy
giovanni.pierobon@studenti.unipd.it
Abstract. We present an improved statistical model of the measure-
ment process of triangulation Light Detection and Rangings (Lidars)
that takes into account bias and variance eﬀects coming from two diﬀer-
ent sources of uncertainty: (i) mechanical imperfections on the geometry
and properties of their pinhole lens - CCD camera systems, and (ii) inac-
curacies in the measurement of the angular displacement of the sensor
due to non ideal measurements from the internal encoder of the sensor.
This model extends thus the one presented in [2] by adding this second
source of errors. Besides proposing the statistical model, this chapter con-
siders: (i) specialized and dedicated model calibration algorithms that
exploit Maximum Likelihood (ML)/Akaike Information Criterion (AIC)
concepts and that use training datasets collected in a controlled setup,
and (ii) tailored statistical strategies that use the calibration results to
statistically process the raw sensor measurements in non controlled but
structured environments where there is a high chance for the sensor to
be detecting objects with ﬂat surfaces (e.g., walls). These newly pro-
posed algorithms are thus specially designed and optimized for inferring
precisely the angular orientation of the Lidar sensor with respect to the
detected object, a feature that is beneﬁcial especially for indoor naviga-
tion purposes.
Keywords: Maximum likelihood · Least squares · Statistical inference ·
Distance mapping sensors · Lidar · Nonlinear system · AIC
1
Introduction
Lidars are ubiquitously used for mapping purposes. Diﬀerent types of Lidar
technologies, such as Time of Flight (ToF) and triangulation, have diﬀerent
statistical performances: for example, ToF Lidars have generically lower bias
and measurement noise variances than triangulation ones. At the same time,
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_17

Modeling and Calibrating Triangulation . . .
343
triangulation Lidars are generally cheaper than ToF ones. The market pull is
then to increase the performance of cheaper Lidars in a cost-eﬀective way.
Improving the accuracy and precision of sensors can then be done in diﬀerent
ways, e.g., by improving their mechanical properties. An other strategy is to
improve the performance indexes by opportunely processing their measurements
through opportune statistical manipulations of the raw information coming from
the sensor so to remove biases and artifacts. An example of this strategy is [2],
where we considered the simpliﬁed case of non-rotating Lidars. In this chapter we
extend that manuscript in and considering the case of rotating Lidars speciﬁcally
for that situation where they should be used for indoor applications.
Before stating more clearly our results, we analyze a set of algorithms that
have been presented in the literature and that are related to our aims.
Literature Review: It is convenient to categorize the algorithms in the existing
and relevant literature as:
• procedures for the characterization or calibration of the devices. Here char-
acterization means a thorough quantiﬁcation of the measurement noisiness of
the device, while calibration means an algorithm that aims at diminishing this
noisiness level;
• when dealing with calibration issues, procedures for the intrinsic or extrinsic
calibration. Here intrinsic means that the focus is on estimating the parameters
of the Lidar itself, while extrinsic means that the focus is on estimating the
parameters resulted from sensor positioning and installation.
Characterization Issues: several papers discuss Lidar characterization issues
for both ToF [1,3,18,21,29–31,34,37] and triangulation Lidars [8,22]. Notice
that, at the best of our knowledge, for triangulation Lidars there exist only two
manuscripts: [22], that discusses the nonlinearity of Neato1 Lidars, and [8], that
analyzes the eﬀect of the color of the target on the measured distance. Impor-
tantly, [22] models nonlinear eﬀects on the measurements and the variance of
additive measurement noises as two independent eﬀects that can be modeled
with a second order polynomials on the actual distance. From a statistical per-
spectives the authors, therefore, decouple the learning process into two separate
parts.
Calibration Issues: as for the calibration issues there is a relatively large
number of papers describing how to calibrate extrinsic parameters either using
additional sensors (such as cameras) [17,24,33,39], or just requiring knowledge
on the motion of the Lidar itself [4,23,35,38].
Still considering calibration issues, there has been also a big eﬀort on how
to perform intrinsic calibration for multi-beam Lidar systems, where the results
from one beam is used to calibrate the intrinsic parameters of other beams
[5,9,11–15,25,26,28]. As for single-beam Lidar systems, instead, [25] proposes
a method for the intrinsic calibration of a revolving-head 3D Lidar and the
extrinsic calibration of the parameters with respect to a camera. The technique
involves an analytical method for computing an initial estimate for both the
1 Neato Robotics www.neatorobotics.com.

344
A. Alhashimi et al.
Lidar’s intrinsic parameters and the Lidar-camera transformation, that is then
used to initialize an iterative nonlinear least-squares reﬁnement of all of the
calibration parameters.
We also mention the topic of on-line calibration of sensor parameters for
mobile robots when doing Simultaneous localization and mapping (SLAM), very
useful in navigation tasks. In this category, [20] proposes an approach to simulta-
neously estimate a map of the environment, the position of the on-board sensors
of the robot, and its kinematic parameters. These parameters are subject to
variations due to wear of the devices or mechanical eﬀects like loading. An other
similar methodology for the intrinsic calibration of depth sensor during SLAM
is presented in [32].
Statement of Contributions: We focus speciﬁcally on triangulation Lidars for
indoor robotic applications, and aim to increase their performance in a cost-
eﬀective way through statistical processing techniques that exploit the prior
assumption that in normal built environments the sensor is likely to measure
often ﬂat surfaces like walls. Our long term vision is to arrive at a on-line
automatic calibration procedure for triangulation Lidars like in [20,32]; before
reaching this above long-term goal, we must nonetheless solve satisfactorily the
problem of calibrating triangulation Lidars oﬀ-line.
In this paper we thus:
• summarize, for the sake of self-completeness and in Sect. 3, the model and
statistical procedures proposed in [2] for the case of non-rotating triangulation
Lidars;
• extend the model and statistical calibration techniques proposed in [2] by
adding how to account for eﬀects of angular displacements between the sensor
and the target in the statistical moments of the measurement process;
• develop a dedicated algorithm for improving the estimates returned by the
sensor in the speciﬁc case where the likelihood of detecting ﬂat surfaces (like
walls) is high;
• assess these strategies in real-life conditions.
As reported in (45), the algorithms are then shown to be capable to improve
the normalized Mean Squared Error (MSE) of the raw information for the sensor
from 0.0789 to 0.0046.
Organization of the Manuscript: Section 2 describes the working principles
of triangulation Lidar. Section 3 summarizes the results presented in [2], that
means a statistical model of the measurement process of the device, its valida-
tion, and a dedicated calibration algorithm. Section 4 extends these results by
modelling the measurement process when considering a rotating Lidar sensor,
validating this model, and presenting algorithms for reconstructing ﬂat surfaces
from noisy measurements. Section 5 presents our experimental setups and col-
lects the performance that we measured in real-life conditions, and eventually
Sect. 6 concludes the chapter by reporting our planned future research activities.

Modeling and Calibrating Triangulation . . .
345
Fig. 1. Photo of a triangulation Lidar produced by Neato and the Arduino board for
computer interface
2
Triangulation Lidar Range Sensors
We now describe the functioning principle of the triangulation scanners; this dis-
cussion will be useful for explaining why the moments of the measurement noise
depend on the actual measured distance. More details about the constructive
details of triangulation Lidars can be found in [6,19].
A prototypical triangulation Lidar is the one in Fig. 1. Its working principles
are then explained with the diagrams in Figs. 2 and 3 and their captions.
This simple working principle helps keeping the cost of the sensor low,2 and
making it commercially usable in low-cost devices like robotic vacuum cleaners.
The low cost of the sensor comes nonetheless with some well-deﬁned mechanical
problems [19]:
• low-cost lens, that generate nonlinear distortion eﬀects;
• imprecise pointing accuracy, that is known of at best 6 degrees;
• not rigid physical linkages among lens elements, camera, laser, and laser optics,
that may suﬀer from distortion eﬀects during the life of the device.
As it can be seen in Fig. 4, all these problems induce measurement errors; more
precisely, triangulation Lidars suﬀer from strong nonlinearities in both the bias
and the standard deviation of the measurement noise. This pushes towards ﬁnd-
ing some signal processing tools that can alleviate these problems, and keep the
sensor cheap while improving its performance.
2 Incidentally, the sensor pictured in Fig. 1 was costing around $100.00 as of December
2016 in Ebay. Nonetheless, the original industrial goal was to reach an end user price
of $30.00.

346
A. Alhashimi et al.
Lidar case
laser beam
b
dk
parallel of
m
a
e
b
re
s
al
e
ht
d′
b′
k
laser
object
CCD
sensor
pinhole
lens
Fig. 2. Diagram exemplifying the working principle of a non-rotating triangulation
Lidar. The laser emits an infra-red laser signal that is then reﬂected by the object to
be detected. The beam passes through a pinhole lens and hits a CCD camera sensor.
By construction, thus, the triangles deﬁned by (b, dk) and by (b′
k, d′) are similar: this
means that the distance to the object is nonlinearly proportional to the angle of the
reﬂected light, and as soon as the camera measures the distance b′
k one can estimate
the actual distance dk using triangles similarities concepts
object
Lidar case
direction of rotation
Fig. 3. Diagram exemplifying the working principle of a rotating triangulation Lidar.
The sensor sweeps a plane and takes measurements at pre-speciﬁed angles, and for
each measurement the working principle is as described in Fig. 2. The Lidar pictured
in Fig. 1 has an angular resolution of 1◦and completes an entire rotation in about 0.2 s

Modeling and Calibrating Triangulation . . .
347
0.5
1
1.5
2
2.5
3
3.5
4
4.5
0
0.25
0.5
0.75
1
actual distance [m]
meaurements error [m]
Fig. 4. Realization of the measurement errors committed by the Lidar shown in Fig. 1
before being calibrated with the algorithms proposed in this manuscript. In this exper-
iment the Lidar is moving towards a ﬂat wooden object as in Fig. 8a. The plot shows
the errors committed by the laser in measuring its actual distance from the target, the
latter measured through a Vicon motion-capture system with a nominal precision of
0.1 mm
3
Modelling the Lidar Measurements Under the
Hypothesis of Flat and Perpendicularly Aligned
Obstacles
We start our modelling eﬀorts posing some simplifying assumptions. More specif-
ically, consider the situation as in Fig. 2, where we assume that the detected
object has a ﬂat surface, and that this surface is parallel to the Lidar’s CCD
sensor.
Let thus yk be the k-th measurement returned by the Lidar when the true
distance is dk and under the assumptions of perpendicular alignments stated
above. Physically, yk is computed by the logic of the sensor through a static
transformation of b′
k in Fig. 2; we assume here that this static transformation is
unknown, that b′
k is not available, and that we want to improve the estimation
for dk from just yk.
Our ansatz for the whole transformation from dk to yk is then
yk = f(dk) + f(dk)2ek
(1)
where
• f(·) is an unknown non-linear function;
• ek ∼N(0, σ2
e) is a Gaussian and white additive measurement noise.
In the following Sect. 3.1 we motivate the presence of f(·) from mechanical
considerations, while in the following Sect. 3.2 we motivate the presence of the
f(·)2 multiplying the noise ek starting from physical considerations.
3.1
Motivating the Nonlinear term f(·) in Model (1)
The nonlinear term f(·) in (1) is related to what is called the radial distortion in
camera calibration literature [7,10,36,40]. Indeed camera lenses are notoriously

348
A. Alhashimi et al.
nonlinear at their borders, with this nonlinearity increasing as the light beam
passes closer to the lens edges. In our settings this thus happens when targets
are very close or very far.
Radial distortions are usually modeled in the camera calibration literature
as a series of odd powers, i.e., as
f(dk) =
n

i=0
αid2i+1
k
(2)
where the αi’s are the model parameters.
As numerically shown during the validation of (1) in [2], model (2) does not
describe well the evidence collected in our experiments. Indeed the speciﬁc case
of triangulation Lidars lacks of the symmetries encountered in computer vision
settings (see (4) and the discussion on that identity), and thus in our settings
there is no need for odd symmetries in the model (in other words, doubling d
does not lead to doubling b′). We thus propose to remove this constraint and use
a potentially non-symmetric polynomial, i.e.,
f(dk) =
n

i=0
αidi
k.
(3)
The numerical validations of model (3) shown in [2] conﬁrm then with our phys-
ical intuition.
3.2
Motivating the Multiplicative Term f(dk)2 in Model (1)
Assume for now that there are no lens-distortion eﬀects. The similarity between
the triangles in Fig. 2 then implies
dk
b = d′
b′
k
.
(4)
In (4) dk and b′
k are generally time-varying quantities, while b and d′ are
constants from the geometry of the Lidar. Assume now that the quantity
measured by the CCD at time k is corrupted by a Gaussian noise, so that
zk = b′
k + wk with wk ∼N(0, σ2
CCD) and σ2
CCD constant and independent of dk.
Thus zk ∼N(b′
k, σ2
CCD); since
yk = bd′
zk
,
(5)
assuming a Gaussian measurement noise on the CCD implies that yk is a recip-
rocal Gaussian r.v. This kind of variable is notoriously diﬃcult to treat (e.g.,
their statistical moments cannot be derived from closed form expressions starting
from the original Gaussian variables). For this reason we perform a ﬁrst order
Taylor approximation of the nonlinear map (5) above. In general, if

zk ∼N

b′
k, σ2
CCD

yk = φ (zk)
(6)

Modeling and Calibrating Triangulation . . .
349
then the ﬁrst order Taylor approximation of the distribution of yk is [16, (A.16)]
yk ∼N

φ(b′
k), φ′(b′
k)2σ2
CCD

(7)
where φ′(·) is the ﬁrst derivative of φ(·) w.r.t. zk. Substituting the values of our
speciﬁc problem into formula (7) leads then to the novel approximated model
yk ∼N

bd′
b′
k
,
−bd′
b′2
k
2
σ2
CCD
	
,
(8)
or, equivalently,
yk = dk + d2
kek
ek ∼N

0, σ2
e

(9)
where σ2
e = σ2
CCD
b2d′2 is a scaled version of σ2
CCD independent of dk and to be
estimated from the data.
Consider now that actually there are some lens distortion eﬀects that imply
the presence of the nonlinear term f(dk). We can then repeat the very same
discussion above, and obtain model (1) by substituting dk with f(dk) in (9).
3.3
Calibrating Model (1)
To estimate f(·) and σ2
e from a dataset D = {yk, dk} in which we know dk (e.g.,
thanks to a Motion Capture (MoCap) system).
Given our Fisherian setting, we seek for the ML estimate for both f(·) and
σ2
e, where we recall that (due to the radial distortion hypothesis as the source
of f(·), see Sect. 3.1) f(·) is modeled as a non-symmetric polynomial, i.e., as
f(dk) = 
n
i=0 αidi
k as in (3). Since now model (1) implies
yk −f(dk) ∼N

0, f(dk)4σ2
e

,
(10)
it follows immediately that the corresponding negative log-likelihood is propor-
tional to
L := log (detΣ) +

y −f(d)
T Σ−1
y −f(d)

(11)
where
• y := [y1, . . . , yN]T ;
• d := [d1, . . . , dN]T ;
• f(d) := [f(d1), . . . , f(dN)]T ;
• Σ := diag

f(d1)4σ2
e, . . . , f(dN)4σ2
e

.
Finding the ML estimates in our settings thus means:
1. solving
arg min
θ∈Θ L (θ)
(12)
for several diﬀerent n, with
θ :=

α0, . . . , αn, σ2
e
T
(13)
and Θ the set of θ ∈Rn+2 for which σ2
e > 0;

350
A. Alhashimi et al.
2. deciding which n is the best one using some model order selection criterion,
e.g., AIC.
Unfortunately problem (12) is not convex, so it neither admits a closed form
solution nor it can be easily computed using numerical procedures. Solving prob-
lem (12) is thus numerically diﬃcult. Keeping in mind that our long-term goal
is the development of on-line calibration procedures, where numerical problems
will be even more complex, we strive for some alternative calibration procedure.
3.4
An Approximate Procedure for Calibrating Model (1)
We here propose an alternative estimator that trades oﬀstatistical performance
for solvability in a closed form. We indeed propose to seek an estimate for θ in
(13) by using the alternative model
yk = f(dk) + d2
kek,
(14)
that diﬀers from (1) only for the fact that the noise is multiplied by d2
k instead
of f(dk)2. This approximation is intuitively meaningful, since f(dk) represents
a distortion term induced by the pinhole lens: ideally, indeed, f(dk) should be
equal to dk.
Assuming model (14) it is now possible do derive a ML estimator of θ. Indeed
dividing both sides of (14) by d2
k we get
yk
d2
k
= g(dk) + ek
(15)
where (cf. (3))
g(dk) =
n

i=0
αidi−2
k
.
(16)
This means that the estimation problem can be cast as the problem of estimating
the parameters α := [α0, . . . , αn]T and the noise variance σ2
e describing the linear
system
yk
d2
k
=

d−2
k
. . . dn−2
k

⎡
⎢⎣
α0
...
αn
⎤
⎥⎦+ ek,
(17)
for which the ML solution is directly
α =

HT H
−1 HT y

σ2e = 1
N (y −H α)T (y −H α)
(18)
with
H :=
⎡
⎢⎣
d−2
1
· · · dn−2
1
...
...
d−2
N · · · dn−2
N
⎤
⎥⎦
y :=
⎡
⎢⎢⎢⎢⎣
y1
d2
1...yN
d2
N
⎤
⎥⎥⎥⎥⎦
.
(19)

Modeling and Calibrating Triangulation . . .
351
Notice that the procedure above does not determine the model complexity
n. For inferring this parameter we then propose to rely on classical model order
selection criteria such as AIC.
3.5
Using the Calibrated Model (1) to Estimate dk
Once the sensor has been calibrated, i.e., a α and 
σ2e have been computed,
it is possible to invert the process and use the learned information for testing
purposes. This means that given some measurements yk collected in an unknown
environment we can, through α and 
σ2e, estimate dk.
Computing the ML Estimate of dk Rewriting model (3) as
f(dk) = dT
k α
dk :=
⎡
⎢⎢⎢⎣
d0
k
d1
k...
dn
k
⎤
⎥⎥⎥⎦
(20)
and equating the score of yk parametrized by α and σ2
e to zero leads to the
equation

yk −dkα

yk −dk

I −diag

0, 1
2, . . . , n
2

α

= σ2
ed4
k.
(21)
This means that estimating dk from yk, α and 
σ2e can be performed by solving
(21) in dk after substituting the real values α and σ2
e with their estimates.
Since polynomial (21) is quartic for n = 0, 1, 2, and of order at least 6 for
any other n, the ML estimate for dk must then either rely on complex algebraic
formulas or numerical roots ﬁnding methods.
Computing the Least Squares (LS) Estimate of dk Given our assumption
(3) on the structure of f(·), and given an estimate f for f, the problem of esti-
mating dk from yk is the one of minimizing the squared loss

yk −f (dk)
2. Once
again, the problem is of ﬁnding the roots of a polynomial, since the solutions of
the LS problem above are directly
dk ∈

d s.t. yk −f

d

= 0

.
(22)
Thus if the Lidar has heavy nonlinear radial distortions (that means that it
requires high order polynomials f (·)) then one is again required to compute
polynomial roots.
Notice also that some of the roots above may not belong to the measurement
range of the sensor (e.g., some roots may be negative); these ones can safely be
discarded from the set of plausible solutions. The other ones, instead, are equally
plausible.

352
A. Alhashimi et al.
This raises a question on how to decide which root should be selected among
the equally plausible ones. This question is actually non-trivial, and cannot be
solved by means of the frequentist approach used in this manuscript. We thus
leave this question unanswered for now, and leave it as a future research question.
Bayesian formulations will be explored to see if they solve the multiple plausible
roots problem.
4
Extending Model (1) to Account for Non-null Incident
Angles Eﬀects
As Fig. 3 suggests, the surfaces that are hit by the Lidar laser beam will not be
in general parallel to the Lidar’s CCD sensor.
Since the laser beam emitted by the sensor is not a dimensionless spot but
rather a cone with (at least in our setup) a width of 4 cm after 2 m from the
sensor, two targets at the same distance from the sensor but with diﬀerent inci-
dence angles will be illuminated in diﬀerent ways (the bigger the incidence angle,
the bigger the illuminated area). Eventually this implies that the shape of the
beam returning to the CCD will vary with the incidence angle, something that
at least potentially may aﬀect the statistics of the raw measurement returned
by the sensor. It is then meaningful to guess that model (1) and the relative
training and testing algorithms, originally developed for null incidence angles,
might need to be extended for the non-null incidence angles case Fig. 5.
4.1
Verifying if the Sensor Measurement Process Is Inﬂuenced by
Incidence Angle Eﬀects
To verify if non-null incidence angles aﬀect bias and variance of the measure-
ments collected by a generic triangulation Lidar we performed experiments by
Lidar
object
dk,m+1
φk,m
φk,m+1
δ
dk,m
dk,0
Fig. 5. Each diﬀerent beam of a Lidar can be associated to an index, that we arbitrarily
indicate with the additional subscript m (e.g., m and m+1 in the ﬁgure). When hitting
a ﬂat surface, diﬀerent beams imply diﬀerent incident angles (e.g., φk,m and φk,m+1)
and diﬀerent distances (e.g., dk,m and dk,m+1). With this notation the subscript k
indicates the index of the planar sweep performed by the sensor. Notice also that dk,0
is a quantity that is in general not associated with any physical beam

Modeling and Calibrating Triangulation . . .
353
Fig. 6. The experimental setup used to collect evidence for checking whether incidence
angles aﬀect bias and variance of the measurements collected by a generic triangulation
Lidar
means of the set-up shown in Fig. 6, where both the sensor and the target are
mounted on standard tripods. Results of these experiments are summarized in
Fig. 7, and suggest that this dependence is actual.
4.2
Extending Model (1)
Let then φk,m be the incidence angle at scan k for beam m (see Fig. 5). Inspired
by the experiments shown in Fig. 7, our novel ansatz for the measurement
model is
yk,m =
 n

i=0
αidi
k,m +
n

i=1
ciφi
k,m
	



bias
+
 n

i=0
βidi
k,m +
n

i=1
κiφi
k,m
	



variance
ek,m
(23)
where the parameters αi, ci, βi, and κi are the parameters deﬁning the poly-
nomial maps (for notational simplicity all with the same order), and with

354
A. Alhashimi et al.
2.02
2.04
2.06
mean [m]
−75
−50
−25
0
25
50
75
0
2·10−5
4·10−5
6·10−5
8·10−5
incidence angle φ [deg]
variance [m2]
Fig. 7. Summary of the statistics of the measurements collected as in Fig. 6 for some
speciﬁc incidence angles, clearly indicating that the ﬁrst two moments of the measure-
ment process actually depend on this variable
ek,m ∼N(0, 1) an independent and identically distributed (iid) standard nor-
mal noise. Notice that model (23) extends the original model (1) by adding
polynomial terms to both the bias and the variance of yk,m. More speciﬁcally,
the structure is chosen so that the eﬀects of non-null incident angles are additive
w.r.t. the eﬀects described in Sect. 3, to preserve statistical identiﬁability (as
discussed more extensively later).
4.3
Training Model (23)
To estimate the parameters in model (23) we assume that we are endowed with
M diﬀerent datasets: in each single dataset both the Lidar and the surrounding
environment are ﬁxed, while the environment varies among the various datasets.
This corresponds to assume to be endowed with
Dm :=

yk,m, dm, φm

k=1,...,Km
m = 1, . . . , M
(24)
where we stress that within each Dm the actual distance is the known constant
dm (and thus not dk,m) and (similarly) the incidence angle is the known con-
stant φm (and thus not φk,m). This information is then assumed to be collected
through an opportune MoCap system. Notice that here there is no actual need
to assume that the surface scanned by the sensor is ﬂat: the unique requirement
is to know dm and φm.

Modeling and Calibrating Triangulation . . .
355
For notational convenience, we summarize all the quantities involved in our
setup with the additional notation
dm :=
⎡
⎢⎢⎢⎣
1
dm
...
dn
m
⎤
⎥⎥⎥⎦
φm :=
⎡
⎢⎣
φm
...
φn
m
⎤
⎥⎦
(25)
α :=
⎡
⎢⎣
α0
...
αn
⎤
⎥⎦
T
c :=
⎡
⎢⎣
c1
...
cn
⎤
⎥⎦
T
β :=
⎡
⎢⎣
β0
...
βn
⎤
⎥⎦
T
κ :=
⎡
⎢⎣
κ1
...
κn
⎤
⎥⎦
T
(26)
θ′ :=

α c

θ′′ :=

β κ

θ :=

θ′ θ′′
.
(27)
With this additional notation (but only for this section) we can compactly
rewrite model (23) as
yk,m =
α c  
dm
φm
!



=:μm
+
β κ  
dm
φm
!



=:σm
ek,m
m = 1, . . . , M
(28)
where, due to the way we constructed the datasets, the various μm and σm are
M diﬀerent values, and the yk,m vary only because of the eﬀect of the noise ek,m.
Assuming that we have the datasets Dm in (24), to infer the model parameters
θ in (27) we then follow the steps:
(1) Estimate the σm’s: ﬁrst compute all the possible diﬀerences among the
various
yk,m’s, i.e.,
Δy,m := {yk1,m −yk2,m}
k1 = 1, . . . , Km −1
k2 = k1 + 1, . . . , Km. (29)
Then, since dm is constant within each dataset, it follows immediately from
Eq. (28) that
(yk1,m −yk2,m) = σm (ek1,m −ek2,m) ∼N

0, 2σ2
m

.
(30)
Thus it is possible to estimate each σm as the square root of half of the
empirical variance of the set Δy,m;
(2) Estimate θ′′ :=

β κ

: considering the deﬁnition of σm in (28) we can
immediately estimate θ′′ through LS as
θ′′ = (HT H)−1H
⎡
⎢⎣
σ1
...
σM
⎤
⎥⎦
(31)
with
H :=
⎡
⎢⎣
dT
1 φT
1
...
...
dT
M φT
M
⎤
⎥⎦;
(32)

356
A. Alhashimi et al.
(3) Estimate θ′ :=

α c

: dividing each measured yk,m by the corresponding
σm corresponds to consider the auxiliary homoscedastic measurement process
yk,m =

α c

⎡
⎢⎣
dm
σm
φm
σm
⎤
⎥⎦+ ek,m.
(33)
Deﬁning then
y :=

y1,1 . . . yK1,1, . . . , y1,M . . . yKM,M
T ,
(34)
hm :=
1
σm
⎡
⎢⎣
dT
m φT
m
...
...
dT
m φT
m
⎤
⎥⎦
⎫
⎪
⎬
⎪
⎭
Km times
H :=
⎡
⎢⎣
h1
...
hM
⎤
⎥⎦
(35)
it follows immediately that the ML estimate for θ′ is
θ′ =

HT H
−1 HT y.
(36)
(4) Select the Model Order: the procedure above does not determine the
model complexity n. For inferring this parameter we do the above parameters
estimation for several values of n then rely on classical model order selection
criteria such as AIC to decide the best model order.
4.4
Testing Model (23)
In the testing phase we use the estimated model parameters θ′ and θ′′ in (36)
and (31) from the calibration step to transform the raw distance measurements
into an improved version of it. We are assuming the Lidar is facing a ﬂat surface
with a certain and unknown distance dk,m and incidence angle φk,m, so that, for
practical reasons, we may think that the measurement process is now given by
yk,m =
 n

i=0
αidi
k,m +
n

i=1
ciφi
k,m
	
+
 n

i=0
βidi
k,m +
n

i=1
κiφi
k,m
	
ek,m.
(37)
Our novel target is to estimate dk,m and φk,m from yk,m using the trained model
(37). Notice that, said in this way, the problem is ill-deﬁned from statistical
perspectives: without posing assumptions on how the various angles φk,m1 and
φk,m2 relate (m1, m2 = 1, . . . , M for notational simplicity) then the estimation
process decouples in M independent estimation problems. Unfortunately each
one of these estimation problems suﬀer of statistical non-identiﬁability: it would
be impossible to distinguish the contribution from dk,m and φk,m into yk,m.

Modeling and Calibrating Triangulation . . .
357
We thus assume that the sensor is scanning a ﬂat surface like in Fig. 5, where
for simplicity the ﬁrst beam hitting the object is beam m = 1, the last beam is
m = M, and where dk,0 is a quantity that is in general not associated with any
physical beam. This implies that we can exploit the geometrical relations
dk,m =
dk,0
cos φk,m
φk,m = φk,1 + (m −1)δ
(38)
where δ is angular resolution of the scanner. Notice that in general we assume
that for each sweep the target may be in diﬀerent positions; nonetheless the
derivations below may be easily adapted to the case where it is known that for
some diﬀerent k’s the object remains ﬁxed w.r.t. Lidar.
With this assumption the estimation problem reduces to estimating dk,0 and
φk,1. Implicitly we thus assume that image segmentation problems (i.e., deciding
which laser beams correspond to the same ﬂat object) have already been solved
by using techniques like Split-and-Merge Algorithm [27].
To estimate dk,0 and φk,1 we then extend deﬁnitions (25) as
dk,m :=
⎡
⎢⎢⎢⎣
1
dk,m
...
dn
k,m
⎤
⎥⎥⎥⎦=
⎡
⎢⎢⎢⎢⎢⎢⎢⎣
1
dk,0
cos (φk,1 + (m −1)δ)
...

dk,0
cos (φk,1 + (m −1)δ)
n
⎤
⎥⎥⎥⎥⎥⎥⎥⎦
(39)
φk,m :=
⎡
⎢⎣
φk,m
...
φn
k,m
⎤
⎥⎦=
⎡
⎢⎣
φk,1 + (m −1)δ
...
(φk,1 + (m −1)δ)n
⎤
⎥⎦.
(40)
Given the estimates (31) and (36), the hypothesis (38), and the auxiliary notation
(39) and (40), for every k = 1, . . . , K and m = 1, . . . , M model (37) reduces to
yk,m =
α c  dk,m
φk,m
!
+
&
β κ
'  dk,m
φk,m
!
ek,m.
(41)
Given that both dk,m and φk,m are deterministic functions of the estimands dk,0
and φk,1, it is possible to eventually rewrite model (41) as
yk,m = ψbias,m (dk,0, φk,1) + ψst.dev.,m (dk,0, φk,1) ek,m
(42)
where the maps ψbias,m and ψst.dev.,m are known for every m, while their argu-
ments are the estimands. Computing now the ML estimate of these two quanti-
ties corresponds to solve the optimization problem

358
A. Alhashimi et al.

dk,0, φk,1

:= arg
min
dk,0,φk,1
M

m=1

log (ψst.dev.,m) + 1
2
(yk,m −ψbias,m)2
ψ2
st.dev.,m
	
(43)
where for notational compactness we omitted indicating the arguments of ψbias,m
and ψst.dev.,m.
Solving problem (43) is numerically challenging, given its highly non-convex
nature. To obtain an estimation algorithm that can be implemented in non-
expensive computational hardware we then propose an alternative reduced-
complexity algorithm that decouples the problem of estimating the initial angle
φk,1 and the nominal distance dk,0 in two cascaded estimation problems: ﬁrst,
estimate φk,1 through a simple line ﬁtting, second, estimate dk,0 through the
same approach as before.
More precisely, the steps are as follows:
(1) Transform the Measurements yk,m from their polar representation into
a Cartesian representation (considering that the index m represents an angle);
(2) Estimate the Incident Angle φk,1 using a simple linear regression to
ﬁnd the best straight line that ﬁts the measurements in their Cartesian rep-
resentation3;
(3) Estimate the Nominal Distance dk,0. Here
there
are
two
possible
strategies for coping with this estimation problem:
1. if it is known that there is more than one sweep k for which φk,1 and dk,0
do not change, then proceed to estimate σk as did when estimating σm
in point (1) in the training algorithm in Sect. 4.3, obtain the correspond-
ing auxiliary homoscedastic process like in (33), and then proceed as in
Sect. 3.5. Notice that this strategy leads to some computational issues
when the order of the polynomials are higher than 3, since in this case
one needs to use numerical roots ﬁnding methods;
2. alternatively, one can follow a strategy as in Sect. 3.5, i.e., ignore the
heteroscedastic term in model (37) and ﬁnd directly dk,0 as that value
that minimizes
⎛
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎜
⎝
yk,m −α
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎢⎢⎣
1
dk,0
cos

φk,1 + (m −1)δ

...
⎛
⎝
dk,0
cos

φk,1 + (m −1)δ

⎞
⎠
n
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎥⎥⎦
−cφk,m
⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎟
⎠
2
.
(44)
3 Consider that if we express a line in R2 as x2 = ax1 +b with a the angular coeﬃcient
of the line and b its oﬀset, then from a we can estimate the incident angle as φk,1 as
atan(a) 180
π .

Modeling and Calibrating Triangulation . . .
359
5
Numerical Experiments
5.1
Calibration and Testing Under Null Incidence Angles
Hypotheses
Here we assess whether model (1), that is the starting point for our complete
model, oﬀers accurate representations of reality. Our experiments consist of a
robot with the Lidar mounted on top moving with piecewise constant speeds
towards a target. Datasets for training and testing purposes consist thus of the
raw Lidar measurements and a ground truth information collected by a MoCap
system as in Fig. 8a. Thus used to estimate α and σ2
e as described in (18), while
for the model order selection we always detected that, empirically, n = 2 was
always the best choice when using AIC measures (e.g., for the dataset shown in
Fig. 8b we obtained the AIC scores reported in Table 1.
The estimated α and σ2
e were also used for testing purposes to reﬁne the
estimate of the distances dk in non-controlled environments satisfying the null
incidence angle hypotheses. Notice that the selected model order was always 2,
so it was always possible to solve the LS problem in a closed form and also
discard one of the roots in (22) so that the set of roots was always a singleton.
(a) Experimental setup used for recording
the dataset. The Lidar was mounted over a
Pioneer 3AT robot facing an obstacle; the
photo moreover shows some of the cameras
of the MoCap system.
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
5.5
0
0.25
0.5
0.75
1
actual distance [m]
measurement error [m]
training set
order 1
order 2
order 3
(b) A typical training set collected in our ex-
periments. The plotted quantities correspond to
the measurement errors and to the polynomial
models ﬁtting these errors.
Fig. 8. Experimental setup and estimation performance in the training step
Table 1. AIC scores for the diﬀerent models complexities involved in the training set
of Fig. 8b
Polynomial
order
1
2
3
4
AIC score
−5.774
−7.380
−5.824
−3.890

360
A. Alhashimi et al.
0
1
2
3
4
5
6
0
1
2
3
4
5
6
actual distance [m]
measured distance [m]
test set
MoCap
estimated
Fig. 9. Eﬀects of the estimation procedure on original Lidar measurements satisfying
the null incident angles hypothesis. It can be noticed how the overall strategy removes
the nonlinearities induced by the pinhole lens - CCD camera system
As shown in Fig. 9, dk is much closer to dk than yk. For example, the empirical
normalized MSEs for the test set in Fig. 9 were
1
N
N

k=1
...dk −dk
...
2
∥dk∥2
= 0.0046,
1
N
N

k=1
∥yk −dk∥2
∥dk∥2
= 0.0789.
(45)
5.2
Calibration and Testing Under No Hypotheses on the Incidence
Angles
For the more general case without additional hypotheses we recorded several
datasets for both training and test purposes by means of a ﬁxed Lidar and a
target with adjustable distance and incidence angle as in Fig. 6.
We then performed the calibration of the model parameters αi, ci, βi and κi
as described in Sect. 4.3 by using the raw Lidar measurements yk,m, the actual
values for the target angle φm and the actual values for the distance dm.
The resulting training errors are then graphically shown in Fig. 10; it is imme-
diate to notice how the error committed by the raw measurements (i.e., the upper
manifold) is bigger than the error committed by the calibrated data for every
tested incidence angle, similarly to what was happening in Sect. 5.1. For the
model order selection we ﬁnd that n = 2 was also the best choice when using
AIC measures. For the dataset in Fig. 10 the AIC score is shown in Table 2.
To check the generalization capabilities of the parameters estimated above
we then consider an other dataset of raw Lidar measurements yk,m (the unique
information to be used by algorithms for testing purposes), actual distances dm
and angles φm (the latter two for assessment purposes). As explained in Sect. 4.4,
we then estimate the target angle from diﬀerent beams measurements through
the line ﬁtting strategy coupled with (44), and obtain in this way the angles
estimation errors shown in Fig. 11.

Modeling and Calibrating Triangulation . . .
361
1
2
3
4−60
−40
−20
0
20
40
60
−0.1
0.1
0.3
0.5
actual distance [m]
incidence angle φ [deg]
distance error [m]
calibrated data
raw data
Fig. 10. Calibration error surfaces for the calibration process. The upper surface is for
the raw Lidar data, while the lower surface is for the calibrated data. The calibration
has been done with distances up to 4 m, but the target was not visible for φ = ±80◦
therefore we removed the φ = ±80◦from the plot
Table 2. AIC scores for the diﬀerent models complexities involved in the training set
of Fig. 10
Polynomials
order
1
2
3
4
AIC score
3.2371e+12
7.8134e+11
2.5299e+12
4.6189e+12
2
4−60 −40 −20
0
20
40
60
−10
0
10
actual distance [m]
angle φ [deg] 
estimation error
[deg]
Fig. 11. Empirical expected incidence angle estimation errors for the test datasets
collected in our experiments. The estimation error is calculated as φ −φ at 1, 2, 3 and
4 m and for various incidence angles
Eventually these errors in estimating φk,m led to the errors in estimating
dk,0 plotted in Fig. 12 (for comparison, in this latter ﬁgure we also include the
error curves obtained using an oracle on φ instead of the estimated one φ, to
graphically assess the dependency of the overall estimation strategy on the errors
φ −φ).

362
A. Alhashimi et al.
0
0.2
0.4
0.6
error [m]
30◦
raw data
using φ
using φ
60◦
raw data
using φ
using φ
0
0.2
0.4
error [m]
−30◦
raw data
using φ
using φ
−60◦
raw data
using φ
using φ
1m
2m
3m
4m
1m
2m
3m
4m
Fig. 12. Realizations of the distance estimation errors for the test datasets collected
in our experiments. The estimation error is calculated at 1, 2, 3 and 4 m for various
incidence angles φ
Interestingly, in our datasets the errors φ −φ are suﬃciently small to lead to
overall performances in estimating dm with the following MSE indexes:
1
M
M

m=1
1
km
km

k=1
∥yk,m −dm∥2
∥dm∥2
= 0.0560.
(46)
1
M
M

m=1
1
km
km

k=1
...dk,m(φm) −dm
...
2
∥dm∥2
= 0.0043,
(47)
1
M
M

m=1
1
km
km

k=1
...dk,m( 
φm) −dm
...
2
∥dm∥2
= 0.0046.
(48)

Modeling and Calibrating Triangulation . . .
363
6
Conclusions
In this chapter we extended the statistical models and calibration algorithms
related to triangulation Lidars presented in [2] in two speciﬁc ways:
• ﬁrst, we added to the statistical model of the measurement process ﬁrst devel-
oped in [2] some new considerations on how diﬀerent angular displacements
between the Lidar and a generic detected object may aﬀect the bias and vari-
ance of the sensor readings. This then led to new sensor calibration procedures
that cope with this new model;
• second, we derived tailored object-reconstruction algorithms that cope with
the speciﬁc case of rotating Lidars scanning environments where the detection
of walls or similarly ﬂat surfaces is highly likely, e.g., the built environment.
The novel statistical model (23) is based on several assumptions:
1. pinhole lenses introduce radial distortions that aﬀect the measurement
process through nonlinear bias eﬀects;
2. the nonlinearities induced by the geometry of the laser-CCD system can
be captured by means of heteroscedastic noises which standard deviations
depend in ﬁrst approximation at least quadratically with the measured dis-
tance;
3. angular displacements between the sensor and the targets also contribute to
the bias and the heteroskedasticity of the measurement process with some
nonlinear dependencies.
Model (23), validated through some experiments on real devices, allows to
build tailored triangulation Lidars calibration strategies that follow the classical
training-testing paradigm:
• in the training phase, collect information in a controlled environment and use
it to estimate through ML paradigms the parameters deﬁning the statistical
behavior of the sensor;
• in the test phase, use this information and some statistical inference techniques
such as ML or LS to correct the measurements from the sensor when this is
in a non-controlled environment.
As mentioned before, we also proposed a tailored algorithm for the test phase
when it is known that the targets are ﬂat. It turns nonetheless out that these
estimation strategies may be numerically demanding, specially for sensors suf-
fering from strong radial distortions in the pinhole camera. In this case, indeed,
the estimators may require to use numerical root ﬁnding procedures that may
be computationally demanding.
Irrespectively of these issues, that can in any case be mitigated by limiting
the complexity of the polynomials describing the radial distortions, the esti-
mation strategies above have been proved to be eﬀective in our tests. Real-life
experiments indeed showed that the techniques allow to obtain improvements
of the empirical normalized MSE from 0.0560 to 0.0046 in normal operations
conditions.

364
A. Alhashimi et al.
These improvements are nonetheless not ending the research possibilities
on triangulation Lidars. Among the plethora of potential directions we men-
tion two speciﬁc topics: the ﬁrst is developing recursive estimation schemes that
improve the numerical eﬃciency of the estimation schemes, so to ease their imple-
mentability on low-cost devices. The second direction is to endow the sensors to
undergo continuous learning in non-controlled environment (i.e., learning with-
out ground truth measurement schemes as did here) by performing information
fusion steps, e.g., combining also information from other sensors like odometry,
ultrasonic and accelerometers. In this way sensors which measurement process
characteristics change in time due, e.g., to aging, would beneﬁt of adaptable esti-
mation algorithms that guarantee improved estimation performance throughout
the entire life of the sensor.
References
1. Alhashimi, A., Varagnolo, D., Gustafsson, T.: Joint temperature-lasing mode com-
pensation for time-of-ﬂight LiDAR sensors. Sensors 15(12), 31205–31223 (2015)
2. Alhashimi, A., Varagnolo, D., Gustafsson, T.: Statistical modeling and calibration
of triangulation Lidars. In: ICINCO (2016)
3. Anderson, D., Herman, H., Kelly, A.: Experimental characterization of commercial
ﬂash ladar devices. In: International Conference of Sensing and Technology, vol. 2
(2005)
4. Andreasson, H., Triebel, R., Burgard, W.: Improving plane extraction from 3D
data by fusing laser data and vision. In: 2005 IEEE/RSJ International Conference
on Intelligent Robots and Systems (IROS 2005), pp. 2656–2661. IEEE (2005)
5. Atanacio-Jim´enez, G., Gonz´alez-Barbosa, J.J., Hurtado-Ramos, J.B., Ornelas-
Rodr´ıguez, F.J., Jim´enez-Hern´andez, H., Garc´ıa-Ramirez, T., Gonz´alez-Barbosa,
R.: Lidar velodyne HDL-64E calibration using pattern planes. Int. J. Adv. Robot.
Syst. 8(5), 70–82 (2011)
6. Blais, F.: Review of 20 years of range sensor development. J. Electron. Imaging
13(1) (2004)
7. Brown, D.C.: An advanced reduction and calibration for photogrammetric cameras.
Technical report, DTIC Document (1964)
8. Campos, D., Santos, J., Gon¸calves, J., Costa, P.: Modeling and simulation of a
hacked neato xv-11 laser scanner. In: Robot 2015: Second Iberian Robotics Con-
ference, pp. 425–436. Springer (2016)
9. Chen, C.Y., Chien, H.J.: On-site sensor recalibration of a spinning multi-beam lidar
system using automatically-detected planar targets. Sensors 12(10), 13736–13752
(2012)
10. Duane, C.B.: Close-range camera calibration. Photogramm. Eng. 37(8), 855–866
(1971)
11. Glennie, C.: Calibration and kinematic analysis of the velodyne HDL-64E S2 lidar
sensor. Photogramm. Eng. Remote Sens. 78(4), 339–347 (2012)
12. Glennie, C., Lichti, D.D.: Static calibration and analysis of the velodyne HDL-64E
S2 for high accuracy mobile scanning. Remote Sens. 2(6), 1610–1624 (2010)
13. Glennie, C., Lichti, D.D.: Temporal stability of the velodyne HDL-64E S2 scanner
for high accuracy scanning applications. Remote Sens. 3(3), 539–553 (2011)
14. Gong, X., Lin, Y., Liu, J.: 3D lidar-camera extrinsic calibration using an arbitrary
trihedron. Sensors 13(2), 1902–1918 (2013)

Modeling and Calibrating Triangulation . . .
365
15. Gordon, M., Meidow, J.: Calibration of a multi-beam laser system by using a
TLS-generated reference. ISPRS Ann. Photogramm. Remote Sens. Spat. Inf. Sci.
II–5/W2, 85–90 (2013)
16. Gustafsson, F.: Statistical sensor fusion. Studentlitteratur (2010)
17. Jokinen, O.: Self-calibration of a light striping system by matching multiple 3-
D proﬁle maps. In: Second International Conference on 3-D Digital Imaging and
Modeling, 1999, Proceedings, pp. 180–190. IEEE (1999)
18. Kneip, L., Tˆache, F., Caprari, G., Siegwart, R.: Characterization of the compact
Hokuyo URG-04LX 2D laser range scanner. In: IEEE International Conference on
Robotics and Automation, 2009, ICRA’09, pp. 1447–1454. IEEE (2009)
19. Konolige, K., Augenbraun, J., Donaldson, N., Fiebig, C., Shah, P.: A low-cost laser
distance sensor. In: ICRA 2008, IEEE International Conference on Robotics and
Automation, 2008, pp. 3002–3008. IEEE (2008)
20. K¨ummerle, R., Grisetti, G., Burgard, W.: Simultaneous calibration, localization,
and mapping. In: 2011 IEEE/RSJ International Conference on Intelligent Robots
and Systems (IROS), pp. 3716–3721. IEEE (2011)
21. Lee, K.H., Ehsani, R.: Comparison of two 2D laser scanners for sensing object
distances, shapes, and surface patterns. Comput. Electron. Agric. 60(2), 250–262
(2008)
22. Lima, J., Gon¸calves, J., Costa, P.J.: Modeling of a low cost laser scanner sensor. In:
CONTROLO’2014–Proceedings of the 11th Portuguese Conference on Automatic
Control, pp. 697–705. Springer (2015)
23. McIvor, A.M.: Calibration of a laser stripe proﬁler. In: Second International Con-
ference on 3-D Digital Imaging and Modeling, 1999, Proceedings, pp. 92–98. IEEE
(1999)
24. Mei, C., Rives, P.: Calibration between a central catadioptric camera and a laser
range ﬁnder for robotic applications. In: Proceedings 2006 IEEE International Con-
ference on Robotics and Automation, ICRA 2006, pp. 532–537. IEEE (2006)
25. Mirzaei, F.M., Kottas, D.G., Roumeliotis, S.I.: 3D lidar-camera intrinsic and
extrinsic calibration: identiﬁability and analytical least-squares-based initializa-
tion. Int. J. Robot. Res. 31(4), 452–467 (2012)
26. Muhammad, N., Lacroix, S.: Calibration of a rotating multi-beam lidar. In: 2010
IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS),
pp. 5648–5653. IEEE (2010)
27. Nguyen, V., Martinelli, A., Tomatis, N., Siegwart, R.: A comparison of line extrac-
tion algorithms using 2D laser rangeﬁnder for indoor mobile robotics. In: 2005
IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 1929–
1934. IEEE (2005)
28. Park, Y., Yun, S., Won, C.S., Cho, K., Um, K., Sim, S.: Calibration between color
camera and 3D lidar instruments with a polygonal planar board. Sensors 14(3),
5333–5353 (2014)
29. Reina, A., Gonzales, J.: Characterization of a radial laser scanner for mobile robot
navigation. In: Proceedings of the 1997 IEEE/RSJ International Conference on
Intelligent Robots and Systems, 1997, IROS’97, vol. 2, pp. 579–585. IEEE (1997)
30. Sanz-Cortiella, R., Llorens-Calveras, J., Rosell-Polo, J.R., Gregorio-Lopez, E.,
Palacin-Roca, J.: Characterisation of the LMS200 laser beam under the inﬂuence
of blockage surfaces inﬂuence on 3D scanning of tree orchards. Sensors 11(3),
2751–2772 (2011)
31. Tang, P., Akinci, B., Huber, D.: Quantiﬁcation of edge loss of laser scanned data
at spatial discontinuities. Autom. Const. 18(8), 1070–1083 (2009)

366
A. Alhashimi et al.
32. Teichman, A., Miller, S., Thrun, S.: Unsupervised intrinsic calibration of depth
sensors via slam. In: Robotics: Science and Systems. Citeseer (2013)
33. Tiddeman, B., Duﬀy, N., Rabey, G., Lokier, J.: Laser-video scanner calibration
without the use of a frame store. In: IEE Proceedings-Vision, Image and Signal
Processing, vol. 145, pp. 244–248. IET (1998)
34. Tuley, J., Vandapel, N., Hebert, M.: Analysis and removal of artifacts in 3-D ladar
data. In: Proceedings of the 2005 IEEE International Conference on Robotics and
Automation, 2005, ICRA 2005, pp. 2203–2210. IEEE (2005)
35. Wei, G.Q., Hirzinger, G.: Active self-calibration of hand-mounted laser range ﬁnd-
ers. IEEE Trans. Robot. Autom. 14(3), 493–497 (1998)
36. Weng, J., Cohen, P., Herniou, M.: Camera calibration with distortion models and
accuracy evaluation. IEEE Trans. Pattern Anal. Mach. Intell. 14(10), 965–980
(1992)
37. Ye, C., Borenstein, J.: Characterization of a 2-D laser scanner for mobile robot
obstacle negotiation. In: ICRA, pp. 2512–2518 (2002)
38. Zhang, Q., Pless, R.: Constraints for heterogeneous sensor auto-calibration. In:
CVPRW’04 Conference on Computer Vision and Pattern Recognition Workshop,
p. 38. IEEE (2004)
39. Zhang, Q., Pless, R.: Extrinsic calibration of a camera and laser range ﬁnder
(improves camera calibration). In: 2004 IEEE/RSJ International Conference on
Intelligent Robots and Systems, 2004 (IROS 2004), Proceedings, vol. 3, pp. 2301–
2306. IEEE (2004)
40. Zhang, Z.: A ﬂexible new technique for camera calibration. IEEE Trans. Pattern
Anal. Mach. Intell. 22(11), 1330–1334 (2000)

A Comparison of Discretization Methods for
Parameter Estimation of Nonlinear Mechanical
Systems Using Extended Kalman Filter:
Symplectic versus Classical Approaches
Daniel Beckmann(B), Matthias Dagen, and Tobias Ortmaier
Leibniz Universit¨at Hannover, Institute of Mechatronic Systems,
Appelstr. 11a, 30167 Hannover, Germany
daniel.beckmann@imes.uni-hannover.de
http://www.imes.uni-hannover.de
Abstract. This paper presents two symplectic discretization methods
in the context of online parameter estimation for nonlinear mechanical
systems. The symplectic approaches are compared to established dis-
cretization methods (e.g. Euler Forward and Runge Kutta) regarding
accuracy and computational eﬀort. The methods are compared using
two mechanical simulation models of a real belt-drive system: a nonlinear
two-mass system with two degrees of freedom and a nonlinear three-mass
system with three degrees of freedom. In addition, the inﬂuence of the
discretization method on the performance of an augmented Extended
Kalman Filter (EKF) estimating the parameter of the two-mass system
is analyzed. The simulation shows improved accuracy of the calculated
discrete-time solution using symplectic integrators in comparison to the
conventional methods, with almost the same or lower computational cost.
Additionally, the parameter estimation based on the EKF in combination
with the symplectic integration scheme leads to more accurate values.
Keywords: Online estimation · Symplectic integrators · Kalman ﬁlter ·
Discretization methods · Mechanical system
1
Introduction
Online state and parameter estimation is important in various ﬁelds, e.g. adap-
tive control, predictive maintenance and other engineering areas. Especially for
stochastic state space systems the state-augmented Extended Kalman Filter
(EKF) is a widely used observer to estimate states and parameters in real time
[7].
In particular, it is used in several industrial applications for control, diagnos-
tics, sensor data fusion, and signal processing [1,15]. The EKF uses linearized
system and measurement models at the current estimate using partial derivations
[16]. This can lead to poor performance if models are highly nonlinear because
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_18

368
D. Beckmann et al.
the covariance is propagated through the linearization. Furthermore, using the
EKF as parameter estimator for linear systems can lead to biased parameter
estimates, if covariance values are incorrect [9].
Moreover, accurate state and parameter estimation by the observer also
requires precise system modeling and proper initial values. Traditionally,
mechanical systems are modeled using continuous-time methods (e.g. Lagrange’s
equations) to obtain the equations of motion. The resulting equations (typically
second order ordinary diﬀerential equations) are transformed into continuous-
time state space form. A continuous-discrete Extended Kalman Filter can be
used to solve the continuous-time state space system and its covariance propa-
gation numerically [6,14].
Another approach uses explicit discretization methods to ﬁnd an analytical
expression of a discrete-time model [13]. The most common practice to ﬁnd the
analytical expression is to use the Euler Forward method with the discretization
order one. The Jacobian of the discrete-time model which can be calculated
analytically and evaluated at the current estimate is used to propagate the error
covariance matrix.
However, using explicit discretization methods can lead to unstable discrete-
time models, if the sampling time is too large compared to the time constant of
the continuous model. In many applications, the sampling time is ﬁxed by the
used hardware (e.g. for industrial application usually 1 ms). Therefore, the way
to obtain a stable discrete-time model is to raise the order of the discretization
method. Increasing the order results in higher accuracy of the discrete-time solu-
tion but the computational eﬀort will be increased, too. In general, a trade-oﬀ
between calculation time and accuracy needs to be found. In fact, there are many
other implicit methods to calculate a discrete-time solution (like collocation or
implicit Runge–Kutta methods) but usually all of these methods need an iter-
ative gradient-based optimization algorithm (e.g. Newton–Raphson method) at
each time step. Due to this fact, this paper focuses explicit (and semi implicit)
methods.
As already mentioned, the most common discretization method is the Euler
Forward approach. Higher order methods are Heun method (order two), Simpson
rule (order three), and classical Runge Kutta method (order four). In the context
of online parameter estimation for a mechanical system, this paper presents the
ﬁrst application and results using semi implicit Euler and leapfrog discretization
method. Both approaches belong to the scheme of symplectic integrators [8]. This
paper compares these methods to the conventional methods mentioned above,
in context of accuracy and computing time of the discrete-time model (and its
Jacobian). In addition, the inﬂuence of the discretization method to the accuracy
of estimated parameter using an EKF is analyzed. The model, which is used for
the investigation, is based on a nonlinear belt-drive system for positioning tasks
modeled as a two- as well as a three-mass system. The model parameters are
identiﬁed using Grey-box identiﬁcation methods.
The paper is organized as follows. Section 2.1 shortly presents the algorithm
of EKF and state-augmented EKF. The discretization methods are introduced

A Comparison of Discretization Methods for Parameter Estimation . . .
369
in Sect. 2.2. In Sect. 3 the testbed and its modeling are given. The simulation
results are shown in Sect. 4. The paper closes with a conclusion in Sect. 5.
2
Methods
2.1
Extended Kalman Filter
Consider the following nonlinear discrete-time state space model with additive
noise
xk = f (xk−1, θk−1, uk−1) + wk−1 ,
(1)
yk = h (xk, θk−1) + vk ,
(2)
with the state vector xk ∈Rnx, the unknown parameter vector θk ∈Rnθ, the
input uk ∈Rnu and the output yk ∈Rny. The (non)linear system and measure-
ment functions are described by f and h. Process and measurement noises are
represented by wk−1 ∼N (0, Qx) and vk ∼N (0, Rk), with Qx and Rk the
process and measurement noise covariance matrices, respectively.
The initialization of EKF is deﬁned by setting the start values for the state
vector x0 and its error covariance matrix P 0
ˆx0 = xinit ∈Rnx
and
P 0 = P init ∈Rnx×nx .
(3)
In addition Qx ∈Rnx×nx and Rk ∈Rny×ny need to be set. Here, these matrices
are assumed to be diagonal. The recursion of the EKF starts with the time
update step as follows
ˆx−
k = f (ˆxk−1, θk−1, uk−1) ,
(4)
P −
k = AkP k−1AT
k + Qx ,
(5)
with
Ak = ∂f
∂xk

xk=ˆx−
k ,θk−1,uk−1
∈Rnx×nx .
(6)
After this prediction step, the correction step can be calculated as
Kk = P −
k HT
k

Hk P −
k HT
k + Rk
−1
,
(7)
ˆxk = ˆx−
k + Kk

yk −h(ˆx−
k , θk−1)

,
(8)
P k = (I −KkHk) P −
k ,
(9)
with
Hk = ∂h
∂xk

xk=ˆx−
k ,θk−1
∈Rny×nx .
(10)

370
D. Beckmann et al.
In order to estimate unknown parameters, the state vector can be augmented
to (a)xk = [xT
k , θT
k ]T ∈Rna=nx+nθ which leads to a new nonlinear discrete-time
state space model as

xk
θk

	 
 
(a)xk
=

f (xk−1, θk−1, uk−1)
θk−1

	



˜
f((a)xk−1,uk)
+

wk−1
ωk−1

,
(11)
yk = ˜h

(a)xk

+ vk ,
(12)
with the modiﬁed system and measurement functions ˜
f and ˜h. The dimension
is increased by the number of unknown parameters. Then the initialization of
the EKF is now deﬁned as
(a)ˆx0 =

xT
init, θT
init
T
∈Rna
and
(a)P 0 =

P init
0
0
Θinit

∈Rna×na .
(13)
Furthermore, the dimension of process noise covariance matrix is also increased
to
(a)Q =

Qx 0
0 Qθ

∈Rna×na ,
(14)
where Qθ ∈Rnθ×nθ describes the covariance matrix of pseudo noise ωk−1 for
the parameter estimation and is also assumed to be diagonal.
2.2
Discretization Methods
Consider the following nonlinear continuous-time state equation
˙x = f (x, u) ,
(15)
with the state vector x and the control vector u. Using the Euler Forward method
is the simplest way to obtain a discrete-time state equation which is given by
xk = xk−1 + Tsf (xk−1, uk−1) ,
(16)
where Ts is deﬁned by the sampling time. The order of the Euler Forward method
is one. However, due to the order one, the method is often not accurate enough
to reproduce the true dynamics of the continuous-time model. In addition, the
numerical solution can be unstable, especially for stiﬀequations. To obtain a
stable numerical solution, either the sampling time can be reduced or the order
of the discretization method has to be raised. In many industrial applications

A Comparison of Discretization Methods for Parameter Estimation . . .
371
the sampling time is limited by the hardware. Raising the order leads to Runge
Kutta methods. For example, the Heun method has the order two and is given by
˜xk = xk−1 + Tsf (xk−1, uk−1) ,
xk = xk−1 + Ts
2

f (xk−1, uk−1)
+ f (˜xk, uk)

.
(17)
It is based on the prediction of the state vector ˜xk in the ﬁrst step and a correc-
tion in the second step. A method of order three, is given based on the Simpson
rule (or Runge Kutta three). The calculation is deﬁned by
a1 = f(xk−1, uk−1) ,
a2 = f

xk−1 + Ts
2 a1, uk−1/2

,
a3 = f (xk−1 −Tsa1 + 2Tsa2, uk) ,
xk = xk−1 + Ts
6 (a1 + 4a2 + a3) ,
(18)
where uk−1/2 is given by the mean value between uk−1 and uk. The classical
Runge Kutta method with its order four is given by
a1 = f(xk−1, uk−1) ,
a2 = f

xk−1 + Ts
2 a1, uk−1/2

,
a3 = f

xk−1 + TS
2 a2, uk−1/2

,
a4 = f (xk−1 + Tsa3, uk) ,
xk = xk−1 + Ts
6 (a1 + 2a2 + 2a3 + a4) .
(19)
All these methods are explicit, i.e. only previous values of the state vector x are
used to calculate the actual value. The input variable u is used at time step k
and k −1 which is usually available in many applications.
However, each of the described methods can result in an unstable solution.
Raising the order is an option to obtain a stable equation, but it also increases
the computational time. Hence, a trade-oﬀbetween accuracy and computing
time has to be found. But, there are many other methods for discretization.
Especially for mechanical systems, symplectic integration methods are notable
and are discussed in the following.
The semi implicit Euler method (also called symplectic Euler) is the simplest
way to obtain a symplectic integration [11]. It is a modiﬁcation of the Euler
Forward method to solve Hamilton’s equation and the results are more accurate
than classical approaches. However, this method requires a pair of diﬀerential
equations of the form

372
D. Beckmann et al.
ds
dt = ˙s = Φ (v) ,
dv
dt = ˙v = Ψ (s, v) ,
(20)
where s represents a position vector and v the corresponding velocity vector.
These equations are typical for classical mechanical systems. Using the symplec-
tic Euler method leads to the discrete-time equations
vk = vk−1 + TsΨ (sk−1, vk−1) ,
sk = sk−1 + TsΦ (vk) .
(21)
It is important to note, that the velocity vector is calculated ﬁrst, using only past
values of velocity and position. In the second step, the position is calculated using
the new value of velocity and the former position value. This is the diﬀerence to
the Euler Forward method, where also the former value of the velocity is used.
The symplectic Euler method has order one. A second order method, called
leapfrog integration, is given by two steps of symplectic Euler
vk−1/2 = vk−1 + Ts
2 Ψ (sk−1, vk−1) ,
sk−1/2 = sk−1 + Ts
2 Φ

vk−1/2

,
sk = sk−1/2 + Ts
2 Φ

vk−1/2

,
vk = vk−1/2 + Ts
2 Ψ

sk, vk−1/2

.
(22)
The mentioned discretization methods in combination with the parameter esti-
mation are evaluated based on a mechanical testbed model, which is described
in the following section.
3
Testbed and Modeling
The structure of the testbed is shown in Fig. 1a and consists of a belt-drive for
positioning tasks with variable transporting masses. It is directly driven by a
permanent magnet synchronous motor and a servo inverter. The latter is con-
nected via a real-time EtherCAT R⃝bus to a programmable logic controller
(PLC). The motor is controlled by a conventional cascade structure with P- and
PI-feedback controller for motor position and speed (ﬁltered position derivative).
The main focus in industrial motion design is time optimality, thus accel-
eration trapezoid proﬁles (ATP) are used to calculate the setpoint values for
the motion control. Due to the exploitation of at least one limitation of velocity,
acceleration and jerk (vmax, amax and jmax) at each instant of a movement, these
proﬁles guarantee the shortest possible traveling time [4]. In this context, the
jerk time is deﬁned as tj = amaxj−1
max.

A Comparison of Discretization Methods for Parameter Estimation . . .
373
Fig. 1. Structure and mechanical model of the testbed [3]
A mechanical model is given by a ﬂexible body system with two degrees of
freedom (two-mass system) and the following equations of motion (see Fig. 1b)
F = M¨q + D ˙q + C(q)q + H( ˙q) ,
(23)
with the generalized coordinate vector q2ms = [ϕ, z]T and
M2ms =
Im + I1 0
0
m

, D2ms =
 dr2
1
−dr1
−dr1 d + μv

,
(24)
C2ms(q2ms) =

ceﬀ(z)r2
1 −ceﬀ(z)r1
−ceﬀ(z)r1
ceﬀ(z)

,
(25)
H2ms( ˙q2ms) =

0
μc tanh(k ˙z)

, F2ms =
τm
0

.
(26)
Here, τm is the actual motor torque, r1 is the pulley radius, ϕ and z the motor
angle and load position, respectively. The parameters in the mass matrix M2ms
are the motor inertia Im, the inertia of the connection between motor and belt
drive I1 and the load mass m. The elements of the damping matrix D2ms are
the belt damping d (not shown in the ﬁgure) and a viscous friction coeﬃcient on
the sliding mass μv. The stiﬀness matrix C2ms contains the position depending
belt stiﬀness ceﬀ(z).

374
D. Beckmann et al.
The belt stiﬀness is calculated by the series and parallel connection of the
spring constants of each belt segment (see Fig. 1b):
c(z) = c1(z) +
c2(z)c3
c2(z) + c3
,
(27)
where c1(z) and c2(z) are functions of the load position [10]. An approximation
of (27) is given by:
ceﬀ(z) = cspec

1 +
1
z0 + z

≈c(z) ,
(28)
where cspec is a belt speciﬁc spring constant and z0 a position constant depending
on the initial value of load position z. In addition to the viscous friction at the
sliding mass, an approximation of a static Coulomb friction model (parameter
μc and k) is assumed in the nonlinear term H2ms( ˙q2ms).
Using the state space vector x2ms = [qT
2ms, ˙qT
2ms]T = [ϕ, z, ˙ϕ, ˙z]T, the system
can be transformed into the continuous-time state space equation
˙x2ms =
⎡
⎢⎢⎣
x3
x4
(Im + I1)−1 (τm −r1Fd −r1Fc)
m−1 (Fd + Fc −Ff)
⎤
⎥⎥⎦,
(29)
with
Fd = d (x3r1 −x4) ,
Fc = ceﬀ(x2)(x1r1 −x2) ,
Ff = μvx4 + μc tanh(kx4) .
(30)
The motor angle and its velocity can be measured, which leads to the following
measurement function:
y =

1 0 0 0
0 0 1 0

x .
(31)
Due to the transformation to state space, the pair of equations needed for the
symplectic integration methods is already given.
The parameter values of the continuous-time state space model are identiﬁed
using Grey-box identiﬁcation method [5] with a dynamic ATP (jerk time less
than 10 ms) to excite all system parameters. The identiﬁed parameter values of
the two-mass system are summarized in Table 1.
In some applications, the representation based on a two-mass system is not
accurate enough to reproduce the complete system dynamics. Hence, a three-
mass system (3ms) has to be chosen for simulation. In case of the testbed dis-
played in Fig. 1b, an additional torsion spring is mounted between the motor
shaft and the driving pulley. Now, the resulting model has three degrees of free-
dom, with the motor angle ϕm, the pulley angle ϕ and the cart position z. The

A Comparison of Discretization Methods for Parameter Estimation . . .
375
Table 1. Identiﬁed
parameter values [3]
Parameter
Value
Unit
Im + I1
13.00
kg cm2
m
12.50
kg
cspec
8.94
kN
d
97.66
N s/m
μv
13.67
N s/m
μc
28.13
N
k
50.00
s/m
z0
0.13
m
r1
15.90
mm
new matrices of the equation of motion with the new generalized coordinate
vector q3ms = [ϕm, ϕ, z]T are:
M3ms =
⎡
⎣
Im 0 0
0 I1 0
0 0 m
⎤
⎦, D3ms =
⎡
⎣
dm
−dm
0
−dm dm + dr2
1 −dr1
0
−dr1
d + μv
⎤
⎦,
(32)
C3ms(q3ms) =
⎡
⎣
cm
−cm
0
−cm cm + ceﬀ(z)r2
1 −ceﬀ(z)r1
0
−ceﬀ(z)r1
ceﬀ(z)
⎤
⎦,
(33)
H3ms( ˙q3ms) =
⎡
⎣
0
0
μc tanh(k ˙z)
⎤
⎦, F3ms =
⎡
⎣
τm
0
0
⎤
⎦.
(34)
Here, cm and dm represent the torsion spring constant and the damping constant,
respectively. Again, transforming the system in continuous-time state equation
with the state vector x3ms = [qT
3ms, ˙qT
3ms]T = [ϕm, ϕ, z, ˙ϕm, ˙ϕ, ˙z]T leads to:
˙x3ms =
⎡
⎢⎢⎢⎢⎢⎢⎣
x4
x5
x6
I−1
m (τm −τd −τc)
I−1
1
(τd + τc −r1Fd −r1Fc)
m−1 (Fd + Fc −Ff)
⎤
⎥⎥⎥⎥⎥⎥⎦
,
(35)
with
Fd = d (x5r1 −x6) ,
τd = dm (x4 −x5) ,
Fc = ceﬀ(x3)(x2r1 −x3) ,
τc = cm (x1 −x2) ,
Ff = μvx6 + μc tanh(kx6) .
(36)
The remaining parameter for simulation are taken from datasheets. The inertia
of the motor is 10.6 kg cm 2, the torsion spring constant is 2.103 Nm rad−1 and
the damping is set to 0.05 Nms rad−1.

376
D. Beckmann et al.
Fig. 2. Control structures used in the simulation results [3]
4
Results
The simulation results are divided in two parts. The ﬁrst part in Sect. 4.1 focuses
the comparison of the continuous-time model and the described discretization
methods. In the second part, the inﬂuence of discretization method to parame-
ter estimation based on an augmented EKF is shown (Sect. 4.2). The control
structure for the simulation of both parts are depicted in Fig. 2 schematically.
4.1
Comparison of Continuous- and Discrete-Time Model
First, the simulation results using the mentioned discretization methods (see
Sect. 2.2) are compared to the continuous-time model. The system structure and
the data ﬂow are shown in Fig. 2. The continuous-time solution is calculated
using Dormand-Prince method with order eight (ode8-solver in Simulink R⃝)
with a ﬁxed sampling frequency of 16 kHz. The discrete-time model of the two-
mass system is calculated with a ﬁxed sampling frequency of 1 kHz, while the
sampling frequency of the three-mass system is selected to be 4 kHz, because of
the higher stiﬀness of the torsion spring. The exact analytical expressions for the
discrete-time models are generated and optimized with the symbolic calculation
software Maple R⃝.
The comparison of the two-mass system discrete-time models is shown in
Fig. 3. The ﬁrst plot illustrates the continuous motor velocity for a given tra-
jectory. To compare the discretization methods, the system dynamics need to
be excited by the trajectory. The system vibrations occur in areas where the
acceleration changes with small jerk time, exemplary shown in the detail plots
1 and 2. The ﬁrst detail plot (middle) shows the behavior of the models near
maximum velocity and the second detail plot (bottom) at minimum velocity.
The classical Runge Kutta method (RK4, green line) ﬁts the continuous-time
signal (thick blue line) nearly perfectly. In comparison to the Simpson rule,
nearly no diﬀerence is visible, so this method is not shown in the ﬁgure. Also
not shown is the Euler Forward method (EF), which is immediately unstable in
this case. The Heun method (yellow line) is able to capture the ﬁrst oscillations,

A Comparison of Discretization Methods for Parameter Estimation . . .
377
Fig. 3. Comparison of the two-mass system discrete-time models [3]
but can’t reproduce the correct damping. The symplectic integration methods
are more accurate than the Heun method reproducing the vibrations. In fact,
the RK4 method is still better than the semi implicit Euler (SE, orange) and
the leapfrog (LP, purple), but the oscillations settle earlier in comparison to the
Heun method. It should be noted, that the SE method has the order one and
the classical Heun method has the order two. The normalized root mean square
errors (NRMSE) of the detail plots 1 and 2 are printed in Table 2, while unstable
solutions are marked as inﬁnity.
Furthermore, the number of operations for the numerical evaluation of the
discretization methods is analyzed using the cost-function of Maple, summer-
ized in Table 2. As expected, the methods with order one have the same smallest
number of all numerical evaluations. Methods with second order (Heun and LP)
need one more division plus extra multiplications and additions compared to

378
D. Beckmann et al.
Table 2. Comparison of computing cost and normalized root mean square errors of
discretization methods for the two- and three-mass systems [3]
Two-mass system (see Fig. 3)
Multiplications
Additions
Divisions
NRMSE1
NRMSE2
EF
11
13
1
inf.
inf.
SE
11
13
1
0.18
0.16
Heun
28
33
2
0.29
0.19
LP
22
31
2
0.13
0.14
RK3
53
58
3
0.07
0.08
RK4
64
72
4
0.06
0.07
Three-mass system (see Fig. 4)
Multiplications
Additions
Divisions
NRMSE3
NRMSE4
EF
16
20
1
inf.
inf.
SE
16
20
1
0.042
0.0649
Heun
41
52
2
inf.
inf.
LP
32
49
2
0.0196
0.0630
RK3
78
92
3
0.0076
0.0341
RK4
94
114
4
0.0038
0.0121
order one approaches. To reach the accuracy of the Simpson Rule, the eﬀort is
nearly doubled from methods with order two.
It is important to note, that the symplectic integrators have another char-
acteristic in this scenario. As seen in Fig. 3 (middle plot), the error between
the continuous-time and the discrete-time signal at constant velocity is slightly
higher compared to the established methods. For example, the relative error
of symplectic Euler method at 0.8 s is about 0.05%, while the error of RK4 is
lower than 0.002%. However, due to the lower implementation eﬀort, this error is
acceptable. In context of parameter estimation this error has nearly no negative
eﬀect on the estimated values, which will be shown in Sect. 4.2.
The results of the simulated three-mass system are similar to the results of
the two-mass system. Exemplarily, Fig. 4 shows the velocities of the motor, the
pulley and the moving cart in a deceleration phase. The behavior of the the addi-
tional spring-damper element can be seen in the ﬁrst two plots, where the motor
and pulley velocity are displayed. The Euler Forward solution of the three-mass
system is immediately unstable, similar to the two-mass system. Furthermore, in
this conﬁguration, the Heun method also calculates an unstable solution. Again,
the Runge Kutta method (RK4, green line, RK3 is similar and not shown) ﬁts
the continuous-time signal (thick blue line) nearly perfectly in all velocities. The
symplectic Euler method and the leapfrog method lead to stable solution and
can reproduce the continuous-time signal quite good. The NRMSEs are printed

A Comparison of Discretization Methods for Parameter Estimation . . .
379
Fig. 4. Comparison of the three-mass system discrete-time models
in Table 2 marked as NRMSE3 and NRMSE4 for the motor and the pulley veloc-
ity, respectively. Small errors occur in representing the small oscillations in the
pulley velocity. However, both symplectic methods reach high accurate results
with a fraction of mathematical operators compared to the classical Runge Kutta
method. The resulting numerical operations calculating the discrete-time solu-
tion for the three-mass system is also printed in Table 2. It can be seen, that
the relative enhancement of the count of numerical operations is nearly equal
compared with the two-mass system. In addition, the Heun method has a higher
number of operations than the leapfrog method and still calculates an unstable
discrete-time solution.

380
D. Beckmann et al.
4.2
Parameter Estimation
Next, the discrete-time models are compared in order to estimate parameters of
the two-mass system with an augmented EKF. The parameters to estimate are
chosen to be the speciﬁc spring constant cspec and the belt damping d, because
these parameters mainly determine the oscillation behavior. For example, the
estimated parameters can be used for feedforward control methods to reduce
or eliminate these vibrations (e.g. ﬂatness-based control [2] or input-shaping
technique [12]).
The state space vector is augmented to (a)xk = [ϕ, z, ˙ϕ, ˙z, cspec, d]T. The
discrete-time model from the control structure (see Fig. 2) is changed to an
augmented EKF. The continuous-time model is simulated without process noise,
only the measurement noise is added on the position and velocity. The EKF
parameters are set to
Qx = P init = I 10−10 ,
Qθ = diag(8.10−12, 8.10−12) ,
Θinit = diag(1.10−1, 1.10−6) ,
R = diag(1.10−9, 1.10−2) ,
xinit = [0, 0, 0, 0]T ,
θinit = [0.2cspec,ident, 2dident]T .
(37)
The resulting parameter estimation with the augmented EKF is shown in Fig. 5.
The ﬁrst plot illustrates the behavior of the estimated speciﬁc spring constant
and the second plot shows the belt damping. The true simulated value is repre-
sented by the dashed black line. With the Euler Forward method, the estimates
of both parameter are biased. However, due to the feedback, the Kalman Filter
can stabilize the unstable discrete-time solution. But, especially the belt damp-
ing parameter is highly biased for this scenario (about eight times higher).
The best result for estimating the spring constant is achieved by the RK4
method (RK3 method is similar, therefore not shown in the picture). The relative
error of the mean values of the last two seconds is about 0.58 and 0.67% for the
RK4 and RK3 method. As seen from the results of the symplectic integrators, it
is obvious that the estimates are more accurate than the Heun method. Even the
SE method (which has order one) reaches a slightly better estimate in comparison
to the Heun method (relative error SE: 3.26%, Heun: 3.61%). The relative error
of the leapfrog method is about 2.48%. All relative errors of the speciﬁc spring
constant are printed in Table 3 marked as Error 1 (ﬁfth column).
The belt damping constant is estimated well with the SE, LP, RK3, and
RK4 method (relative error lower than 5%, see lower plot of Fig. 5 and sixth
column of Table 3). Only the estimated value resulting from the Heun method
is higher than 20% compared to the true value. It should be noted, that is EKF
is sub-optimal estimating parameters in the augmented form, so the remaining
parameter errors still depend on the choice of covariance matrices. However, this
paper only compares the inﬂuence of the discretization method to the parameter
estimation.

A Comparison of Discretization Methods for Parameter Estimation . . .
381
Fig. 5. Parameter estimation of the two-mass system with an augmented EKF [3]
Table 3. Comparison of computing cost and relative parameter estimation error of
discretization method with augmented state vector and calculation of the Jacobian for
the two-mass system [3]
Multiplications
Additions
Divisions
Error 1
Error 2
EF
29
25
2
10.84
725.32
SE
44
29
2
3.26
1.18
Heun
147
110
4
3.61
21.90
LP
172
122
4
2.48
3.08
RK3
327
251
6
0.67
4.56
RK4
434
329
8
0.58
2.51

382
D. Beckmann et al.
To sum up, estimating the spring constant is possible with all tested dis-
cretization methods and the augmented EKF. Even the unstable discrete-time
model using EF approach is able to estimate the spring constant with a relative
error of about 10%. Estimating the damping constant is more diﬃcult and the
parameter bias of the Euler Forward method is about 8 times higher than the
real value. Increasing the discretization order by one (Heun method) leads to
better results, but the estimated value is still about 20% higher than the real
value. Only the RK4 (RK3) and the symplectic methods are able to estimate
the real damping constant with a relative error lower than 5%.
However, comparing SE, LP, RK3 and RK4 regarding the computational
costs for the augmented EKF (including the discretization method and calculat-
ing its Jacobian), it is obvious, that the evaluation counts, especially for RK3
and RK4, are highly increased (see Table 3). The ﬁrst reason is the increase of
the state vector and the calculation of the Jacobian. The second reason is the
more complex calculation of the Jacobian for the symplectic integrators, that’s
why the computational cost of ﬁrst order methods diﬀers (compare EF and SE).
But, the parameter estimation with the SE approach is much more accurate
compared to the EF method, especially for the belt damping. Furthermore, the
SE approach reaches even better estimates than the Heun method, which has
second discretization order and needs more than 300% of multiplications. The
multiplications needed for the RK3 method are about 740% higher than the SE
method, but both methods estimate the parameter with a relative error lower
than 5%, therefore in the authors opinion the semi implicit Euler approach is
the best trade-oﬀbetween accuracy and computational cost.
5
Conclusion
In this paper two symplectic discretization methods are compared to estab-
lished schemes in the context of state accuracy of the discrete-time solution and
online parameter estimation with an Extended Kalman Filter. The considered
mechanical system is based on a real belt-drive system which is modeled as
two-mass and a three-mass system. The symplectic integrators are able to solve
the continuous-time equations very accurate and with the same (semi implicit
Euler) or lower computing cost (leapfrog method) for both mechanical mod-
els (see Table 2). In addition, the classical and commonly used Euler Forward
method leads to an unstable discrete-time system of the two- and the three-mass
system, while the SE method with the same numerical evaluations results in a
stable discrete-time solution. For the three-mass system even the Heun method
leads to an unstable solution with more numerical operations than the leapfrog
method. However, if the highest accuracy is needed, Runge Kutta methods still
provide the best results for both models with the drawback of the highest com-
putational cost. Nevertheless, if the mechanical system is poorly damped, the
sampling time is ﬁxed and computing cost should be minimal (e.g. for real time
implementation), the symplectic integrators are a possibility to provide adequate

A Comparison of Discretization Methods for Parameter Estimation . . .
383
discrete-time models. In addition, the symplectic integration methods are scal-
able, so mechanical systems with more than three degrees of freedom can be
calculated.
In the context of online parameter estimation using an augmented EKF, the
advantage of symplectic integration methods increases. The SE method outper-
formed the Euler Forward method, where the estimated parameters are totally
biased, while the results of the SE approach are more accurate (relative error
lower than 5%). Furthermore, the estimation results performed by the SE app-
roach reach similar (and higher) accuracy compared to the conventional Runge
Kutta methods needing a fraction of computational eﬀort.
References
1. Auger, F., Hilairet, M., Guerrero, J.M., Monmasson, E., Orlowska-Kowalska, T.:
Industrial applications of the Kalman ﬁlter: a review. IEEE Trans. Ind. Electron.
60, 5458–5471 (2013)
2. Beckmann, D., Schappler, M., Dagen, M., Ortmaier, T.: New approach using
ﬂatness-based control in high speed positioning: experimental results. In: IEEE
International Conference on Industrial Technology (ICIT). Sevilla (2015)
3. Beckmann, D., Dagen, M., Ortmaier, T.: Symplectic discretization methods for
parameter estimation of a nonlinear mechanical system using an extended kalman
ﬁlter. In: Proceedings of 13th International Conference on Informatics in Control,
Automation and Robotics (ICINCO 2016), vol. 1. Lisbon, Portugal (2016)
4. Biagiotti, L., Melchiorri, C.: Trajectory Planning for Automatic Machines and
Robotics. Springer, Berlin (2008)
5. Bohlin, T.: Practical Grey-Box Process Identiﬁcation. Springer, Berlin (2006)
6. Bohn, C.: Recursive parameter estimation for nonlinear continuous-time systems
through sensitivity-model-based adaptive ﬁlters. Ph.D. thesis, Department of Elec-
trical Engineering and Information Sciences, Ruhr-Universit¨at Bochum (2000)
7. Grewal, M., Andrews, A.: Kalman Filtering: Theory and Practice Using MATLAB.
Wiley, New York (2008)
8. Hairer, E., Lubich, C., Wanner, G.: Geometric Numerical Integration: Structure-
Preserving Algorithms for Ordinary Diﬀerential Equations. Springer, Berlin (2006)
9. Ljung, L.: Asymptotic behavior of the extended Kalman ﬁlter as a parameter
estimator for linear systems. IEEE Trans. Autom. Control 24(1), 36–50 (1979)
10. Nevaranta, N., Parkkinen, J., Lindh, T., Niemela, M., Pyrhonen, O., Pyrhonen, J.:
Online estimation of linear tooth belt drive system parameters. IEEE Trans. Ind.
Electron. 62(11), 7214–7223 (2015)
11. Niiranen, J.: Fast and accurate symmetric Euler algorithm for electromechanical
simulations. In: Proceedings of 6th. International Conference Electrimacs. vol. 1,
pp. 71–78. Lisboa, Portugal (1999)
12. ¨Oltjen, J., Kotlarski, J., Ortmaier, T.: Reduction of end eﬀector oscillations of a
parallel mechanism with modiﬁed motion proﬁles. In: Proceedings of IEEE 10th
Conference on Industrial Electronics and Applications (ICIEA), pp. 823–829 (2015)
13. Riva, M.H., Beckmann, D., Dagen, M., Ortmaier, T.: Online parameter and process
covariance estimation using adaptive EKF and SRCuKF approaches. In: IEEE
Multi-Conference on Systems and Control (MSC 2015). Sydney, Australia (2015)

384
D. Beckmann et al.
14. Sch¨utte, F., Beineke, S., Rolfsmeier, A., Grotstollen, H.: Online identiﬁcation of
mechanical parameters using extended Kalman ﬁlter. In: Proceedings of IEEE
Annual Meeting of Industry Applications Society (1997)
15. Szabat, K., Orlowska-Kowalska, T.: Application of the Kalman ﬁlters to the high-
performance drive system with elastic coupling. IEEE Trans. Ind. Electron. 59(11),
4226–4235 (2012)
16. Welch, G., Bishop, G.: An introduction to the Kalman ﬁlter. Technical Report,
Chapel Hill, NC, USA (2006)

Dynamics Calibration and Real-Time State
Estimation of a Redundant Flexible Joint Robot
Based on Encoders and Gyroscopes
Dennis Sch¨uthe(B), Felix Wenk, and Udo Frese
Multi-sensor Interactive Systems Group, CPS, German Research Center for Artiﬁcial
Intelligence (DFKI), University of Bremen, Bremen, Germany
schuethe@informatik.uni-bremen.de, felix.wenk@dfki.de,
ufrese@informatik.uni-bremen.de
Abstract. We show the identiﬁcation of dynamic parameters for a
redundant ﬂexible joint robot with a ﬂexible bearing in the ﬁrst joint. We
compare a standard model (without ﬂexible bearing) and an extended
model (with ﬂexible bearing). The bearing leads to distortions of the link
velocities measured by gyroscopes. Joint positions measured by encoders.
We show how to pack the calibration problem into the sparse least-
squares on manifolds toolkit (SLOM) and how easy it is to adapt to a
new description – our extended model. In the second part we implement
a Kalman ﬁlter on a microcontroller to estimate the 16 states in real-time
using the extended model.
Keywords: SLOM · Entertainment robot · Kalman ﬁlter · Real-time
estimation · Calibration · Dynamics parameter identiﬁcation
1
Introduction
For model predictive control it is essential to have a good model. One question
is the qualitative structure of the model, i.e. the decision which of the countless
eﬀects happening in reality are modeled and which of them are ignored. This is
usually answered by expert knowledge, i.e. experience and experiment. The other
question is to determine the quantitative parameters governing these modeled
eﬀects, which need to be determined by a calibration procedure.
This is an extended version of our paper [17], where we are concerned with
a specialized ball playing 3-DOF entertainment robot, which has on purpose a
very low-cost design (Fig. 1) being built in large parts from laser cut acrylic.
This design comes with some mechanical problems, most notably a high friction
and high elasticity almost everywhere in the structure and actuator system.
This work has been supported by the Graduate School SyDe, funded by the German
Excellence Initiative within the University of Bremen’s institutional strategy.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_19

386
D. Sch¨uthe et al.
Fig. 1. Ball playing entertainment robot “Doggy”. Left to right The robot’s costume,
its interior, the colored coordinate systems (world coordinate frame lies on ground in
same orientation as 1), and the kinematic chain
We want to illustrate in this paper the calibration of an elastic joint robot
model to this machine using motor encoders and gyroscopes. The encoders are
placed on every motor, i.e. every joint. But, not every joint has a gyroscope.
Thus, the data has to be extracted from the sensors for each joint.
We also show that the obtained model is reasonably precise even though the
robot’s elasticity is not only located in the joints, as assumed by the model, but
also in the whole structure. Most notably the eﬀect is recognized in the ﬁrst
bearing connecting the robot’s body to the base. This eﬀect is included into
our model in a second calibration procedure, given us the opportunity to detect
movements of the robot’s body. We compare both models and will see that the
theoretically more precise model is not the better one.
Based on the model given by the calibration we implemented a real-time
state estimator on a microcontroller to obtain the states for the optimal control
process. This paper only investigates the state estimator implementation and
its simpliﬁcations to make it run on a microcontroller – we will see that this is
necessary as we have to deal with a state space of 16-DOF.
1.1
System
The system under calibration and parameter ﬁnding is a 2.1 m tall ball playing
entertainment robot named “Doggy” (Fig. 1). Its task is to hit balls with its head.
The head is made of a 40 cm Styrofoam sphere and holds one of our two IMU
sensors. Moreover, the heads orientation does not matter when playing a ball –
as it is a sphere, so only the position and velocity matter. The head is connected

Dynamics Calibration and Real-Time State Estimation . . .
387
to the robot’s three revolute jointed system via a carbon rod. The ﬁrst axis
acts like a hip and gives the robot a redundant degree of freedom (DOF). The
redundancy is a result of the common intersection point of all axes. Therefore,
the end-eﬀector (EOF) moves on a partial sphere (due to joint limits) and the two
DOF are controlled by three redundant joints. A stereo camera system for ball
tracking is placed after the ﬁrst joint to turn with the robot’s hip. Additionally,
our circuit board with a microcontroller, motor drivers and another IMU sensor
is placed on the ﬁrst body. Each joint is driven by a DC motor using a tooth
belt as coupling. As the tooth belt is not totally stiﬀ, we get elasticity between
the motor and the link. Each motor has an encoder for the positioning, read by
the microcontroller. The material used to build our robot is mostly acrylic glass
(roughly 80%) and the base plate is made of steel. The rest is made of aluminum.
1.2
Problem Statement
Our goal is to calibrate the parameters of the robot’s dynamics to use them in a
following work for model predictive control (MPC) which we already developed
in simulation [16]. For such an MPC we need the state x of our robotic system
and the dynamic function with known parameters. The states are not measurable
directly. Thus, we will have to build an observer – here we use a Kalman ﬁlter on
our microcontroller – to estimate the states using the dynamic model. Moreover,
the aim is to control the robot using an optimal controller which needs the
model of the controlled system as well. For both we need the dynamics including
its parameters. Another, problem which comes with our robot design is the
ﬂexibility between robot’s body and base, causing the cameras to vibrate. This
has to be overcome by also estimating the state of the body plate, i.e. rotational
speed and position.
Some of the dynamic parameters are known a priori, such as the inertia of
the robot, which is pretty well known from the CAD model. Other parameters,
like the motor inertia b, the motors mutual induction constant kmi and the
voltage to torque constant kpwm are known only approximately, as there is only
few information on the used low-cost motor. However, some parameters are not
known and can only be guessed. These are the motor friction τ fm, the spring
constant ks, and spring damping constant ds.
This also holds for the ﬂexible bearing case, which describes the phenomena
between robot’s body and base. To describe this we have to add additional
parameters for velocity and position of the bearing. This ﬂexible bearing is the
major challenge in the calibration, either if it is modeled or – as we did in the
ﬁrst case – it is not. It is a ball bearing with some kind of ﬂexibility, especially
when moving joint 2 and 3 (see link of Fig. 1). Thus, the IMUs will measure
motions of the motors added with – we could say – “noise”, as a result of the
ﬂexible bearing.
To solve the calibration problem we use the motor encoders’ and the gyro-
scopes’ data, with a 1 kHz sampling frequency. We explicitly relinquish of the
accelerometer data to show that the robots parameters can be calibrated without

388
D. Sch¨uthe et al.
accelerometers. Moreover, our estimator should work on gyroscope data only – to
reduce data computation – and we want to see if it works also for the calibration.
1.3
Contribution
We show that the robots’ parameters can be obtained by using encoders and
only gyroscopes for measurements. We prove that it is also possible to do this
if there is a large error on the gyroscopes’ data. This calibration is extended
to a model which includes the ﬂexible bearing. We compare both models and
discuss the advantages and disadvantages of both models. In the second part we
implement a real-time state estimator based on the extended model with ﬂexible
bearing, as our ball tracking system needs to compensate the vibrations during
movements. To our knowledge the estimation of the link position and velocity
has never been done by using gyroscope data only with additional information
of encoders. Moreover, we explain how to do the calibration with the sparse
least-squares on manifold (SLOM) toolkit and that it is very straightforward to
implement. Additionally, we explain how to simplify our model to get a high
dimensional state space estimated on a microcontroller at a rate of 200 Hz.
2
Related Work
The options for identifying dynamic parameters are summarized in the overview
paper by [21], where the authors distinguish on-line and oﬀ-line identiﬁcation.
The former deals with adaptive control algorithms and neural networks. In adap-
tive control the parameters are adjusted and estimated on-line for using them in
the controller. Neural networks are eﬀectively identifying nonlinear systems. The
parameters are used as weights for the network and are approached by training
the weights in real-time [13]. The latter, oﬀ-line identiﬁcation, has three methods
to name: (1) Physical experiments, such as isolating each link and measure its
mass, the inertia and center of gravity (COG). (2) Computer aided design (CAD)
techniques can be used for inertia and COG measuring. But other parts, such as
the identiﬁcation of friction or the motor parameters, are not possible. (3) The
third possibility is the identiﬁcation by analyzing the input/output behavior on
a well known motion and minimizing the diﬀerence of the real data and the
estimated data of the model. In our identiﬁcation we make use of (2) and (3) in
combination.
In [5,20] the identiﬁcation of dynamic parameters of industrial robots is pre-
sented. In [5] the identiﬁcation does not require the friction model a priori.
Vuong et al. have to deal with highly nonlinear friction and build a model which
overcomes this problem. They also demonstrate the identiﬁcation using an oﬀ-
line method with a least-squares algorithm, which is enhanced by constraints to
adjust the least-squares result [11]. Both have a model for a rigid body robot,
so there is no ﬂexibility.
The identiﬁcation with ﬂexible joints is discussed and demonstrated in [12],
where also the friction is estimated. Additionally, the model is enhanced by
ﬂexible links. To identify the parameters a least-squares oﬀ-line method is used.

Dynamics Calibration and Real-Time State Estimation . . .
389
How accelerometers and gyroscopes can be utilized to obtain the state of
ﬂexible robots and use them for control was shown in [1,19]. However, there is
a combination of both IMU sensors to estimate the state. In our case we only
want to use the gyroscope. We have already been shown in [17] the calibration
using encoders and only gyroscopes.
In the identiﬁcation process the least-squares solver takes a big role. Also for
our identiﬁcation process we make use of a least-squares solver packed into a
framework called SLOM [6], which can be used for mapping problems, but also
for calibration and sensor fusion [7].
3
Model
To identify the parameters for the dynamics we need an appropriate model. Also
the kinematics for transformations between coordinate systems are needed for
our measurement functions – we will explain later.
3.1
Kinematics
The Kinematics describe the relations of coordinate systems. Each joint and
each IMU has its own coordinate system. Additionally, there are the world and
the end-eﬀector (EOF) coordinate system. Transformations from one system
to another can be handled by translations and rotations. In our case we only
transform velocities to create a relation between angular motor velocities ˙θ and
gyroscope measurements ω. Thus, only rotations of the form
to
fromR are needed.
All rotations are rotated on the z-axis moving the correlated body together with
its coordinate system (Fig. 1). The rotations – IMU1
1R and IMU2
EOF R – should be
identiﬁed by our calibration, as they could be misaligned by a few degrees.
3.2
Dynamics - Elastic Joint Model
As mentioned before, the tooth belt coupling produces a not negligible elasticity
between motor and link. This dynamic model is well known and described in [18].
We can simplify this formula by neglecting the Coriolis and centrifugal terms,
which are hardly noticeable in our system. We can also neglect the gravitational
terms as we inserted springs that counteract the gravitational force on the pitch
and yaw axes, i.e. axes 2 and 3. Thus, we can position the robot anywhere in the
working space and it holds its position without any torque input. Additionally,
we neglect the link friction τ ﬂlike in [12]. In some test cases we have seen
that the link friction is close to zero. We assume that the motor parameters
kpwm (voltage to torque constant), kmi (motors mutual induction constant), and
b (motor inertia) are identical, because the motors are of the same type. The
simpliﬁed dynamics are
0 = M(q)¨q + τ c
(1)
τ c = diag(ks) (q −θ) + diag(ds)

˙q −˙θ

(2)
0 = b¨θ −τ c + τ fm −τ m(u, ˙θ) ,
(3)

390
D. Sch¨uthe et al.
where motor angle, velocity and acceleration are θ, ˙θ, and ¨θ respectively. M(q)
is the link inertia. The coupling between motor and link is approximated by a
spring with stiﬀness ks and spring damping ds, each element i of the vectors ks
and ds represents the speciﬁc stiﬀness and damping of the i-th joint. The diag
creates a diagonal matrix of the vector. The motor friction is denoted τ fm. The
motor torque τ m and the motor inertia b have to be transformed to the link side
by our gear ratio nG = 42.092, i.e. b = n2
Gbmotor and τ m = nGτ motor.
We rearrange (1)–(3) to formulate a dynamical state space representation
with the highest derivative placed on the left: ˙x = fdyn(x, u), with the state
x =

qT ˙qT θT ˙θ
T T
.
(4)
The input vector deﬁnes a pwm (pulse width modulation) signal of the voltage
passed to the DC motor. τ m is the torque to the system as result of the voltage.
The transfer function fdyn(x, u) is
fdyn(x, u) =
⎛
⎜
⎜
⎜
⎝
˙q
−M(q)−1τ c
˙θ
(bI)−1 
τ c + τ m(u, ˙θ) −τ fm

⎞
⎟
⎟
⎟
⎠.
(5)
Link inertia. We get the link moment of inertia M(q) as a result of Matlab’s
Spatial V2 library [2], which we fed it with CAD model information of each
joint: i.e. its COG inertia, its mass, and its displacement between axis coordinate
system and COG.
M(q) =
⎛
⎝
m1,1(q) m1,2(q) m1,3(q)
m1,2(q) m2,2(q) m2,3(q)
m1,3(q) m2,3(q) m3,3(q)
⎞
⎠
(6)
The inertia is given in gm2 and depends on the current link angles q which are
contributing to the result in form of sin and cos functions. Exact details are
given in [17].
Motor torque τ m. The torque is given by the pwm Signal u, the maximum
power supply voltage Umax = 32 V, and the gain kpwm which translates voltage
to torque. This torque is countered by a mutual induction (value of kmi) and
depends on the motor velocity ˙θ (second part of the equation).
τ m(u, ˙θ) = kpwmUmaxIu −kmiI ˙θ
(7)
Motor friction τ fm. Motor friction consists of three diﬀerent parts [14]. For
our purposes we neglect static and viscous friction. The further because we
control the robot mostly in motion. The latter as due to the use of tooth belts
– thus we do not have viscosity. We concentrate on the kinetic or Coulomb
friction acting at a constant rate over all velocities, typically described as τ fm =
diag(μfm) sgn( ˙q), where τ fm is the friction torque and μfm the kinetic friction

Dynamics Calibration and Real-Time State Estimation . . .
391
coeﬃcient. The Signum function (sgn) translates the velocity ˙q to a constant
value over all velocities depending on its sign. This has the disadvantage of a
discontinues model unwanted in simulations, e.g. when using an ODE-Solver. We
approximated this by a Sigmoid function, that diﬀers only close to zero velocity,
τ fm = 2 diag(μfm)
⎛
⎜
⎝
1
1+exp(−400 ˙q1) −0.5
1
1+exp(−400 ˙q2) −0.5
1
1+exp(−400 ˙q3) −0.5
⎞
⎟
⎠.
(8)
Our calibration goal is to get μfm.
Not modeled. This ﬁrst model is simpliﬁed and not models motions of the ﬂexible
bearing as our motivation is: First, that in general the simplest model that works
is the best model. Second, that incorporating the elasticity in the Axis 1 bearing
directly would require four additional states, namely position and velocity for
2-DOF of elastic movement, which we will see now.
3.3
Extended Model
As explained before we have to deal with a ﬂexible bearing causing the whole
ﬁrst body to move around its x and y axis, which was not expected by our design.
Therefore, we want to model this behavior and see if it helps to get a better and
more precise model. For the kinematics the adaptation adds the rotations of the
ﬂexible link. For the dynamics its more complicated. To describe this ﬂexibility
we take the same model as for the joints – a spring-damping-system, except that
our motor position remains zero, of course the bearing joints are unactuated.
Moreover, we have to include positions qb and velocities ˙qb for the bearing. The
concatenation of all link positions is qfb = ( qb1 qb1 qT )T and for the velocities
˙qfb = ( ˙qb1 ˙qb1 ˙qT )T , which leads to an adaptation of the coupling torque to
τ cfb =

τ bc
τ c

= diag

kb
ks

  
ksfb

qb
q −θ

+ diag

db
ds

  
dsfb

˙qb
˙q −˙θ

.
(9)
The coupling is also a concatenation of the bearing coupling τbc and the previ-
ously deﬁned coupling τc. We can now redeﬁne our state and replace the links
positions and velocities with those for the ﬂexible bearing, i.e.
xfb =

qT
fb ˙qT
fb θT ˙θ
T T
.
(10)
Thus, the dynamics equation changes to
ffb dyn(xfb, u) =
⎛
⎜
⎜
⎜
⎝
˙qfb
−M(qfb)−1τ cfb
˙θ
(bI)−1 
τ c + τ m(u, ˙θ) −τ fm

⎞
⎟
⎟
⎟
⎠.
(11)

392
D. Sch¨uthe et al.
Note that for the motors – the two bottom rows – nothing changes. Only the
upper part of the dynamics changes and increases the state space to a total
number of 16 DOF. Moreover, the link inertia matrix gets more complex due to
the new bearing and its dimension increases to M(qfb) ∈R5×5. The stimulation
of the bearing is only given by the coupling through the link inertia.
By now, we see that the ﬁrst model is simpler and has less DOF. The eﬀects
of the extended model for the calibration will be discussed after the deﬁnition
of measurement functions needed for the calibration.
4
Measurement Functions
To determine the parameters governing the behavior of the robot, we search for
the parameters which best explain sensor measurements taken while exercising
the degrees of freedom of the robot during a calibration motion. i.e. we search
for the parameters ϑ which result in the least squared diﬀerence of the actual
measurements and the measurements predicted from the parameters. Formally,
we search the least-squares estimate ˆϑ
ˆϑ = arg min
ϑ
1
2∥F(Z, ϑ)∥2
Σ ,
(12)
where Z is the vector of all stacked measurements and Σ the covariance of the
measurement error calculated by F. F computes the diﬀerence between actual
and predicted (using the parameters) measurements.
4.1
Calibration Parameters
ϑ consists of the time-invariant parameters ϑcalib, in which we are interested
primarily, and the parameters ϑstate describing the state of the robot during the
calibration motion at each sensor sampling time tk. For N samples we have
ϑ =

ϑcalib
ϑstate

with ϑstate =
⎛
⎜
⎝
ϑstate1
...
ϑstateN
⎞
⎟
⎠.
(13)
ϑstatek is the state vector as deﬁned in (4) at time tk and the concrete parameters
to be calibrated are
ϑcalib =

kpwm kmi b μT
fm kT
s dT
s ωT
1,0 ωT
2,0
IMU1
1RT IMU2
EOF RT T
(14)
In addition to model quantities, ϑcalib contains parameters pertaining to the
sensors used. These are the rotation of the end-eﬀector frame relative to the IMU
mounted on the end-eﬀector (IMU2
EOF R), the rotation of the coordinate frame of
the ﬁrst axis relative to the IMU mounted after that axis (IMU1
1R, see Fig. 1),
and biases of the gyroscopes (ω1,0 and ω2,0). While not really time-invariant,
the gyroscope biases vary so slowly that we consider them to be constant over
the duration of the calibration motion.

Dynamics Calibration and Real-Time State Estimation . . .
393
The two rotation matrices of ϑcalib have only three DOF each (IMU1
1R,
IMU2
EOF R ∈SO(3)), but do not have a 3-dimensional, singularity-free parame-
trization. The solver we use, SLOM, can perform least squares optimization on
elements of manifolds meeting certain criteria, which are called ⊞-manifolds and
include SO(3), by parameterizing changes to the manifold elements vectorially.
The ⊞-theory is treated very thoroughly by [8]. For the purpose of this particular
calibration problem, we have two operators to apply a vectorially represented
change δ to a rotation matrix R1 and to obtain δ from two rotation matrices
R1, R2, namely
⊞: SO(3) × R3 →SO(3)
with R2 = R1 ⊞δ = R Rot(δ)
(15)
⊟: SO(3) × SO(3) →R3
with δ = R2 ⊟R1 = aRot(R−1
1 R2).
(16)
Rot(v) = exp v× with v×u = v ×u for any u ∈R3 is the rotation matrix whose
scaled axis representation is v and aRot is its inverse.
These operators are best thought of as ‘+’ and ‘−’ operations for rotations,
which encapsulate the structure of the rotation representation. They are easily
extended to the parameter vector by using ordinary ‘+’ and ‘−’ for the vectorial
components and ‘⊞’ and ‘⊟’ for the rotation components.
4.2
Measurements
Sensor measurements. The components related to measurements of (12) are
ﬁlled in here. There are two types of measurements. Sensor measurements and
pseudo-measurements derived from properties we know about the robot.
The sensors are sampled at N time points tk, 1 ≤k ≤N over the duration
of the calibration motion. Each sensor is sampled at each time tk (i.e. when a
measurement is available the time of the microcontroller is used as time stamp),
so for time tk, there is a stack of measurements Zk, which contains a sample of
each sensor,
Zk =

θT
meas,k
IMU1ωT
1,k
IMU2ωT
2,k
T
.
(17)
In (17), θmeas,k ∈R3 are rotary encoder measurements of each axis and
IMU1ω1,k, IMU2ω2,k the gyroscope measurements in their sensor coordinate
frame.
All these measurements build the measurement vector
Z =
Zk
N
k=1 .
(18)
Error function. The error function F of (12) consists of following components.
For each time tk there is a component pertaining to the motor
Fmotor,k = θmeas,k −θk −θ0 ,
(19)

394
D. Sch¨uthe et al.
where θ0 is the known zero-position of the motor and θk the respective compo-
nent of the parameters ϑ as deﬁned in (13) and (4), respectively.
Similarly, there are error components considering the gyroscopes (Fgyro1,k,
Fgyro2,k), which complete
Fk =
F T
motor,k Fgyro1,k F T
gyro2,k
T
.
(20)
The error considering only the gyroscope at the ﬁrst axis is
Fgyro1,k = ˙qk,1 −worldω1,k,2 ,
(21)
with ˙qk,i the i-th link angle velocity, worldω1,k,2 the y-axis of gyroscope one, and
worldω1,k =
1
worldR−1 IMU1
1R−1(IMU1ω1,k −ω1,0),
(22)
with the rotation from world to ﬁrst frame
1
worldR =
⎛
⎝
cos(qk,1) sin(qk,1) 0
−sin(qk,1) cos(qk,1) 0
0
0
1
⎞
⎠.
(23)
i.e. it is the diﬀerence in the angular velocity of the axis as stored in ϑ and the
vertical component of measured angular velocity corrected by the gyroscope bias
and rotated into the world reference frame.
The error function component for the end-eﬀector gyroscope is
Fgyro2,k = IMU2 ˆω2 −IMU2ω2,k
(24)
with
IMU2 ˆω2 = IMU2
EOF R

EOF
1R IMU1
1R−1 IMU1ω1,k
+ EOF ω ˙q2 + EOF ω ˙q3

+ ω2,0 ,
(25)
where
EOF ω ˙q2 =
⎛
⎝
0
sin(qk,3)
0
0 −cos(qk,3) 0
0
0
0
⎞
⎠˙qk ,
(26)
EOF ω ˙q3 =
⎛
⎝
0 0 0
0 0 0
0 0 −1
⎞
⎠˙qk ,
(27)
EOF
1R =
⎛
⎝
c2
0
−s2
−s2s3 −c3 −c2s3
s2c3
s3
c2c3
⎞
⎠.
(28)
This looks more complicated than it is. Fgyro2,k is the diﬀerence between
the sensor measurement of the gyroscope at the end-eﬀector and the expected

Dynamics Calibration and Real-Time State Estimation . . .
395
angular velocity at the location of the end-eﬀector gyroscope, which is the mea-
surement of the gyroscope at the ﬁrst axis plus the angular velocity caused by
the rotations of the second and third axes.
In addition to the sensor measurement, we know that initially, at tk = t1, all
angular velocities of the links and the motors are zero and that the links have
approximately the same angles as the motors. The corresponding component of
the error function is
Finitial =

(q1 −θmeas,1)T ˙qT
1 ˙θ
T
1

.
(29)
We also know that the system behaves approximately according to the
dynamics function fdyn in (5), which relates the states of two successive time
points tk and tk+1. This contributes to the error function N −1 times, with
Ts = tk+1 −tk and the pwm uk,
Fdyn,k = ϑstate,k + Tsfdyn(ϑstate,k, uk) −ϑstate,k+1 .
(30)
With these error functions, the bias concerning the horizontal axis of the
gyroscope at the ﬁrst axis is unobservable. To ﬁx it, we keep the commands of
the ﬁrst M ≤N time steps 0, i.e. uk = 0 for 1 ≤k ≤M. The solver gets this
knowledge by deﬁning the error function components only valid until tM:
Fbias,k =

(ω1,0 −ω1,k)T (ω2,0 −ω2,k)T T
(31)
That is, as long as there is no command to move, the gyroscopes should measure
their bias. In summary, the error function leads to
F(Z, ϑ) =
⎛
⎜
⎜
⎝
Finitial
[Fk]N
k=1
[Fdyn,k]N−1
k=1
[Fbias,k]M
k=1
⎞
⎟
⎟
⎠.
(32)
The corresponding covariance is a block-diagonal matrix. We assumed the
same covariance for all errors of the same kind, so with AP denoting P repetitions
of A, the covariance is
Σ = blkdiag(Σinitial, ΣN
meas, ΣN−1
dyn , ΣM
bias).
(33)
4.3
Extended Calibration
To include the ﬂexible bearing into our model it takes some modiﬁcations,
already shown for the dynamics. Some changes needs also be done to our mea-
surement functions and the gyroscope error (Eqs. (21)–(28)), as by now we have
the ﬁrst joint being able to rotate about all three axes.
First, we rewrite (21) to the new error of the body gyroscope
Fgyro1,k = IMU1ˆω1,k −IMU1ω1,k ,
(34)
IMU1ˆω1,k = IMU1
1R

1
˙qR ˙q +
1
˙qfbR ˙qb

+ ω1,0 .
(35)

396
D. Sch¨uthe et al.
The matrices 1
˙qR and
1
˙qbR transform link velocities from the ﬁrst IMU to coor-
dinate system 1, respectively for link and bearing. They are
1
˙qR =
⎛
⎝
0 0 0
0 0 0
1 0 0
⎞
⎠,
(36)
1
˙qfbR =
⎛
⎝
s1cb2 −c1
c1cb2 s1
sb2
0
⎞
⎠,
(37)
with ci the cosine and si the sine of the i’th component of the link or the bearing
if it as an underscored b. Further, we redeﬁne (25) to
IMU1ˆω2,k = IMU2
EOF R

EOF
˙qR ˙q + EOF
˙qfbR ˙qb

+ ω2,0 ,
(38)
with the rotation matrices
EOF
˙qR =
⎛
⎝
−s2
0 −1
−c2s3 c3 0
c2c3 s3 0
⎞
⎠,
(39)
EOF
˙qfbR =
⎛
⎝
cb2s1c2 −sb2s2
−c1c2
cb2c1c3 −cb2s1s2s3 −sb2c2s3 s1c3 + c1s2s3
cb2c1s3 + cb2s1s2c3 −sb2c2c3 s1s3 −c1s2c3
⎞
⎠.
(40)
The error function for the second gyroscope computes the diﬀerence between
estimated measurement and the current measurement, i.e.
Fgyro2,k = IMU2ˆω2 −IMU2ω2,k .
(41)
That is all we need to modify for the new model and it shows that the calibration
algorithm is easy to use for the adapted and modiﬁed behavior.
Additionally, we also have to adapt the parameter vector ϑ to the extended
model. The parameter state vector ϑstate becomes the extended state vector xfb
(see Eq. (10)). The calibration vector ϑcalib changes only for the spring constant
and damping factor to the new deﬁnition of the ﬂexible bearing. Deﬁned in
Eq. (9).
5
Evaluation
Our identiﬁcation uses an oﬀ-line method based on a trajectory the robot is fol-
lowing. Here we implemented a simple P-controller to move to diﬀerent positions.
The maximum torque set to the motors by the controller can also be adjusted.
For our identiﬁcation we move the robot in two pwm stages, the ﬁrst is slow
with large displacement (u = 0.15). This should help the identiﬁcation of the
friction coeﬃcient μfm. In the second stage we move very fast (u = 0.90). In the
fast stage we implemented a kind of a chirp signal, e.g. between 53 and 56 s in

Dynamics Calibration and Real-Time State Estimation . . .
397
20
30
40
50
60
70
80
90
100
110
−50
0
50
t / s
20
30
40
50
60
70
80
90
100
110
−0.5
0
0.5
t / s
Fig. 2. On top we see the pwm signal u and on bottom the measured motor angle θ
transformed to the link side. The color encoding is red, green, and blue for yaw (1),
pitch (2), and roll (3) axis, respectively
65
70
75
80
85
−40
−30
−20
−10
0
10
20
30
40
t / s
Fig. 3. Gyroscope 1 measurement inﬂuenced by the bearings ﬂexibility. The eﬀect on
the x- and z-axis is shown, which should be 0 in theory by a movement of joints 2 or
3. Where red, green, and blue denotes x, y, and z axis, respectively
Fig. 2. The chirp should be useful to classify the parameters of the spring (ds
and ks, as well as kb and db). The parameters for the motor, i.e. kpwm, kmi, and
b, should be detectable at any time the robot moves. The rotations IMU1
1R and
IMU2
EOF R should be close to the known values from the CAD.
Figure 2 shows the pwm signal together with the measured angles of the
encoders. The movement with the distortion of the bearing can be seen in the
video mentioned in Fig. 1. The eﬀect of the ﬂexible bearing is best seen on the
ﬁrst gyroscope’s x- and z-axis, due to an indirect eﬀect by movements of joints
2 or 3 (Fig. 3). Joints 2 and 3 indirectly aﬀect the ﬁrst gyroscope’s x- and z-axis,
due to the ﬂexibility of the bearing.

398
D. Sch¨uthe et al.
5.1
Initial Guess
The data-sheet of encoders and IMU sensors give us the standard deviations
σencoder = 6.9259 × 10−5 rad and σgyro = 1.745 × 10−3 rad/s, which remains the
same for all measurements. The measurement covariance is given by
Σmeas = blkdiag(σ2
encoderI3×3, σ2
gyroI6×6) .
(42)
For the initial covariance Σinitial only the component regarding the displace-
ment of link and motor angle changes due to the inﬂuence of the spring. Σdyn is
set to a change in the motor velocity in 1000 steps of 15◦/s. The link velocity is
set to change 20◦/s. The covariance for motor and link position is chosen small, as
the position error is mostly given by the velocity error. The dynamic covariance
is time invariant. It emphasizes the main eﬀects and neglects cross-correlations.
i.e. elements on the diagonal are chose conservatively and 0 oﬀdiagonal.
Σdyn = blkdiag(10−12I3×3, 1.21 × 10−4I3×3,
(43)
10−12I3×3, 6.889 × 10−5I3×3)
Σinitial = blkdiag(0.0076I3×3, σ2
encoderI6×6)
(44)
For the identiﬁcation we need to set an initial guess of the parameters. For
the motor we can compute the kpwm and kmi from basic motor data – in our case
this information is limited to the rated current and speed, the voltage supplied,
and the output torque. We approximate the motor inertia by its weight and
radius. The gyroscopes oﬀset ω1,0 and ω2,0 can be measured beforehand and
used as initial guess. All other parameters were hand tuned within a simulation
of the dynamics to get close to the measurement for each axis separately. This
was only done for the ﬁrst slow movements. We took the parameters which ﬁt
quite well as initial guess. The initial guess and the identiﬁed parameters are
given in Table 1. This includes the adaptation to the extended model. We can
see only a slight diﬀerence for kpwm, b, μfm, bias ω1,0 and ω2,0, and for the rota-
tion matrices. This result is, except for μfm, expectable, as we can measure or
compute the parameters with a small tolerance. For μfm we just had a good hand
tuning with the simulation. The divergence of parameter kmi is not a surprise,
as we could only roughly compute this a priori. For the spring parameters we
also expected a low value for the stiﬀness, but for Axis 3 we expected a higher
value than for Axis 2. As one can feel that Axis 3 is more “stiﬀ” than Axis
2 in its spring. On the other hand, we had the idea that the calibration algo-
rithm will pack the bearings ﬂexibility into the spring stiﬀness, which we can
see here. The comparison between basic model (without ﬂexible bearing) and
the extended model (included ﬂexible bearing) indicates our suggestion that the
ﬂexible bearing stiﬀness is packed into the spring of the unmodeled ﬂexible bear-
ing. However, the resultant spring constants of the extended model are far away
of our expectations for the second joint. We will see the consequences in the next
section. We guess that this behavior is the result of on overﬁtting model, i.e. by
extending a model we gave SLOM more degrees of freedom to ﬁt the data to

Dynamics Calibration and Real-Time State Estimation . . .
399
Table 1. Initial guess and identiﬁed parameters for standard and extended model
Initial guess
Parameters
Extended parameters
kpwm/NmV−1
3.487
4.696
4.780
kmi/Nmsrad−1
15.563
31.328
33.30
b/kgm2
2.681
2.428
2.654
μfm/Nm
( 2.0 2.0 2.0 )T
( 1.599 2.565 4.855 )T
( 2.309 1.889 2.951 )T
ks/Nmrad−1
( 400 400 600 )T
( 187.555 120.070 103.056 )T
( 198.855 26.662 100.433 )T
kb/Nmrad−1
( 1000 2000 )T
—
( 273.678 600.990 )T
ds/Nmsrad−1
( 1.0 1.0 1.0 )T
( 5.335 4.143 8.043 )T
( 4.896 1.687 4.881 )T
db/Nmsrad−1
( 5 10 )T
—
( 3.401 5.907 )T
ω1,0/degs−1
( 2.6 0.0 −1.2 )T
( 2.615 0.014 −1.273 )T
( 2.626 0.011 −1.264 )T
ω2,0/degs−1
( 2.7 −0.1 −0.6 )T
( 2.723 −0.103 −0.652 )T
( 2.725 −0.086 −0.664 )T
IMU1
1R
 −1
0
0
0
0
−1
0
−1
0
T
 −0.999 −0.0439 −0.0199
0.0189
0.0219
−0.999
0.044
−0.999
−0.020
T
 −0.999 −0.0424 0.0128
−0.0137
0.0202
−1.0
0.042
−0.999 −0.021
T
IMU2
EOF R
 0
0
1
0 −1 0
1
0
0
T

−0.009
0.027
0.999
0.030
−0.999 0.027
0.999
0.030
0.008
T

−0.009
0.024
1.0
0.030
−0.999 0.024
1.0
0.030
0.008
T
the model. Infect, SLOM can ﬁt the data to the ﬂexible bearing or the second
joint spring, which could lead to the same overall result. Here, it would be very
helpful to give constraints to SLOM to keep some parameters in deﬁned limits.
5.2
Veriﬁcation
Our veriﬁcation follows the same steps as described in [17] and holds for both
models. Therefore, we compare the measured data with predicted data given by
a model. (1) Our initial state is given by the ﬁrst state SLOM optimized x0.
(2) The following states are given by a recursive computation of our dynamic
model where the new state xk = xk−1 + Tsfdyn(xk−1, uk−1) is a result previous
state xk−1 and the commanded input uk−1, like in (30), with Ts = 1 ms. Our
comparison is between measured position and velocity against the predicted
position θ and velocity ˙θ. (3) For the ω1 prediction we can extract the behavior
from the state using (22) or (35) (depending on the model). i.e. a rotation of the
ﬁrst axis leads to a change in ω1. (4) Eqs. (25) or (38) leads to the predicted ω2.
We compare the predicted and measured gyroscope values. For this paper we
concentrate on the comparison of the overall motion and especially the motion
of the second joint, due to its big discrepancies between the two models (see
Table 1) in the spring.
The overall behavior of both models show on the ﬁrst view no diﬀerences (c.f.
Fig. 4a and b). The predicted dashed motor position in the ﬁrst row is deviating
from the solid measured position with increasing time, a well known phenomenon
caused by small deﬂections in the velocity. These deﬂections are integrated and

400
D. Sch¨uthe et al.
20
30
40
50
60
70
80
90
100
110
−50
0
50
20
30
40
50
60
70
80
90
100
110
−200
0
200
20
30
40
50
60
70
80
90
100
110
−200
0
200
20
30
40
50
60
70
80
90
100
110
−200
0
200
(a) Overall motion of the standard model.
20
30
40
50
60
70
80
90
100
110
−50
0
50
20
30
40
50
60
70
80
90
100
110
−200
0
200
20
30
40
50
60
70
80
90
100
110
−200
0
200
20
30
40
50
60
70
80
90
100
110
−200
0
200
(b) Overall motion of the extended model.
Fig. 4. Comparison of measured (solid) and predicted data (dashed). From top to bot-
tom Motor position θ and velocity ˙θ, the second IMU2ω2 and ﬁrst gyroscope IMU1ω1.
For motor angle and velocity red, green, and blue denote yaw, pitch, roll axis respec-
tively. For gyroscopes it denotes x, y, z coordinate axis

Dynamics Calibration and Real-Time State Estimation . . .
401
63
63.5
64
64.5
65
65.5
67
67.5
68
68.5
−50
0
50
63
63.5
64
64.5
65
65.5
67
67.5
68
68.5
−100
0
100
63
63.5
64
64.5
65
65.5
67
67.5
68
68.5
−100
0
100
63
63.5
64
64.5
65
65.5
67
67.5
68
68.5
−40
−20
0
20
40
t / s
Fig. 5. Standard model pitch joint measured (solid) and predicted data (dashed). Top
to bottom Motor position θ and velocity ˙θ, the second IMU2ω2 and ﬁrst gyroscope
IMU1ω1. For motor angle and velocity red, green, and blue denote yaw, pitch, roll axis
respectively. For gyroscopes it denotes x, y, z coordinate axis
causing an error with increasing time. The motor motion itself is good ﬁtted
by both models – better seen in the motor velocity. Additionally, the second
predicted gyroscope data matches well the measured data. The ﬁrst diﬀerences
between the two models can be seen in the last row – the ﬁrst gyroscope data
between 65 and 90 s. In the standard model (Fig. 4a) the motion of pitch and
roll is predicted always zero – we remind that we have not modeled the bearing
here. In the extended model (Fig. 4b) there is motion predicted for gyroscope’s
pitch and roll, allowing us the detection of motions of the plate of body one.
As mentioned, there is only slight diﬀerences in the motions of ﬁrst (yaw)
and third (roll) axis between standard and extended model, these motions are
detailed in [17]. We have a closer look to the movements of the ﬂexible bearing
provoked when the motor turning the pitch axis changes its direction (Fig. 5).
Here, the ﬂexible bearing gets stimulated. After the shock, the joint performs
very little force on the bearing, so it recovers from the impact and returns to
zero position and velocity, where it oscillates. This eﬀect is clearly visible in the
gyroscopes, the motion of the turning axis is still detectable. The motor velocity
ﬁts well to the measured data, but our predicted second gyroscope values does
not ﬁt that well. As we neglect the ﬂexible bearing in this model, the predicted
measurement of the ﬁrst gyroscope is zero. Adjusting the spring stiﬀness is the
solver’s only chance to account for motions of the ﬂexible bearing. Thus, it ﬁnds
a compromise between spring stiﬀness and bearing ﬂexibility to ﬁt the data as
well as possible. Moreover, we see a diﬀerence between the part where the joint’s

402
D. Sch¨uthe et al.
63
64
65
66
67
68
69
70
−50
0
50
63
64
65
66
67
68
69
70
−100
0
100
200
63
64
65
66
67
68
69
70
−200
0
200
63
64
65
66
67
68
69
70
−50
0
50
Fig. 6. Extended model pitch joint measured (solid) and predicted data (dashed). Top
to bottom Motor position θ and velocity ˙θ, the second IMU2ω2 and ﬁrst gyroscope
IMU1ω1. For motor angle and velocity red, green, and blue denote yaw, pitch, roll axis
respectively. For gyroscopes it denotes x, y, z coordinate axis
velocity changes fast and where it moves more constantly in one direction. The
motor velocity is slightly better ﬁtted than the link velocity transferred to the
gyroscope motion.
The extended model turns out to have a worse behavior than the standard
model, also if this extension should be a more detailed description of the model
(Fig. 6). But, why is this the case? The stiﬀness of the pitch joint is lowered
for the extended model to a factor that is very small. A spring constant that
converges to zero gets more ﬂexibility and thus it oscillates much more than a
spring constant that converges to inﬁnity. And additionally for the ﬁrst gyroscope
we see that we get predictions for the pitch motion, but they are also oﬀthe
measured data. The prediction gets better for the cases where there is no change
in the direction (no velocity sign change) and the best ﬁtting is achieved for
constant acceleration.
By extending the model we have given some more degrees of freedom to
SLOM which must choose any possible and plausible parameters to describe the
data best. In this case it is to lower the joints spring constant. Sure, on this
prediction we cannot work on a long horizon. But, we can also see that for some
little time horizons the data ﬁt well (see time around 69 s).
However, for state estimation (next section) we choose the extended model
due to better description of the real system – also if it is not as good as the stan-
dard model in the pitch joint – and for ball detection we need to get information
of the ﬁrst body plate, which is only detectable in the extended model.

Dynamics Calibration and Real-Time State Estimation . . .
403
6
State Estimation
Our overall goal of the calibration was to ﬁnd a good ﬁtting model that can
be used for our optimal controller, which we already presented in [15,16]. The
controller is based on the state and primarily controls the link position and
velocity which need to be estimated. Moreover, the optimal controller runs in
two stages: The ﬁrst stage computes the nonlinear optimization and the feedback
gains on a PC at a 50 Hz frequency. The gains are transferred to the linear stage
running on a microcontroller at a frequency of 200 Hz – the detailed description is
explained in our papers. Due to this controller splitting into two stages, we need
the model on the PC for the nonlinear optimization and on the microcontroller
for a state estimator, because the gains are multiplied on each sample by the
current state. Here, we make use of the extended model, because this model
provides information on the camera pose for each sample, needed for the ball
tracker. We need to simplify the extended model for the state estimator to fulﬁll
real-time behavior.
Before explaining the simpliﬁcations, we brieﬂy describe our state estimator
used. The state estimator is based on the Kalman Filter [9], which uses a linear
model. We assume that θ and ˙θ are well observable by the motor encoder and ˙q
is observable by the gyroscope, thus we know the short-term behavior of q. The
long-term behavior underlies the assumption, that on average q −θ is close to 0.
This assumption keeps the link positions close to the joint positions and prevents
drift of the link positions. The same holds for the ﬂexible bearing positions qb
and velocities ˙qb with the long term behavior given by qb −0.
The Kalman ﬁlter itself runs in two steps. The prediction step, where the
next estimated state ˆxfb and its covariance Σ are predicted. This uses:
ˆxfb k|k−1 = Aˆxfb k−1|k−1
(45)
Σk|k−1 = AΣk−1|k−1AT + Σxfb .
(46)
The update step uses measurements to update the predicted state and its covari-
ance. We can use the same measurements Z as for the calibration process, but
with the diﬀerence that for the calibration we know all measurements and for the
Kalman ﬁlter we only use the current measurement Zk given in Eq. (17). First
of all, we compute the innovation yk from the diﬀerence of real and estimated
measurement ˆZ
yn = Zk −ˆZk ,
(47)
where the estimate is given by Eqs. (35) and (38) for the gyros, the estimate of
the joint position is taken from the state prediction ˆ
xfbk|k−1. The updated state
estimate of the current time k is
Kk = Σk|k−1HT
k

HkΣk|k−1HT
k + Σmeas
−1
,
(48)
ˆxfb k|k = ˆxfb k|k−1 + Kkyn ,
(49)
Σk|k = (I −KkHk) Σk|k−1 .
(50)

404
D. Sch¨uthe et al.
where H maps the current state xfb to the measurement and K denotes the
Kalman gain. We need to adapt our nonlinear dynamics and measurement func-
tions to ﬁt into the linear Kalman ﬁlter. Therefor, we did some simpliﬁcations
that also help to speed up the computation and ﬁnally lead to a Kalman ﬁlter
that runs at 250 Hz on a microcontroller.
Neglecting the dynamics input u of our dynamics (11) is the ﬁrst simpliﬁ-
cation, that is possible as we can treat it as noise added to the system, i.e. we
increase components of the covariance Σxfb that eﬀect the last three rows of the
dynamics. Furthermore, we can simplify the dynamics in the last three rows, i.e.
the motor velocity of the next step, by neglecting the coupling torque τ c and
the motor friction τ fm, as the velocity can be well estimated from the position
measurement.
Finally, the last modiﬁcation is the one with the largest impact and is taking
place on the link side of the dynamics. We assume the link inertia M(qfb)
to be constant, i.e. M 0 = M fb(0). Therefore, we can precompute its inverse,
leading to a faster overall computation. To do so, we need to increase Σxfb for
components that eﬀects the dynamics in parts where the link inertia is used.
Thus, the ﬂexible bearing dynamics gets
fkf dyn(xfb) =
⎛
⎜
⎜
⎝
qfb
−M −1
0 τ cfb
˙θ
0
⎞
⎟
⎟
⎠=

0
I
0
0
−M −1
0
ksfb −M −1
0
dsfb M −1
0
ksfb M −1
0
dsfb
0
0
0
I
0
0
0
0




Ac
xfb .
(51)
Fig. 7. Comparison between states from the oﬄine SLOM calibration and the online
Kalman ﬁlter. It shows the diﬀerence between |xfb,SLOM −xfb,KF|

Dynamics Calibration and Real-Time State Estimation . . .
405
Fig. 8. Motion measured (solid) and Kalman ﬁlter data (dashed). From top to bottom
Motor position θ and velocity ˙θ, the second IMU2ω2 and ﬁrst gyroscope IMU1ω1.
For motor angle and velocity the red, green, and blue denote yaw, pitch, roll joint
respectively. For gyroscopes it denotes x, y, z coordinate axis
The continuous state transition Ac is discretized with the sample time Ts
A = I + TsAc .
(52)
The transition matrix from states to estimated measurements H is basically
the concatenation of Eqs. (19), (35) and (38). With the predicted state the rota-
tion matrices are updated on each time step, i.e.
to
fromRk =
to
fromR(ˆxfb k|k−1)
and plugged into the concatenation. The linearization is the derivative of the
concatenation with respect to xfb, i.e.

406
D. Sch¨uthe et al.
Fig. 9. Estimated online Kalman ﬁlter states for the calibration motion. From top to
bottom Motor positions θ and velocities ˙θ, link positions q and velocities ˙q, and bearing
positions qb and velocities ˙qb. Where red, green, and blue denote yaw, pitch, and roll
joint respectively
Hk =
⎛
⎜
⎝
0
0
0
I 0
0
IMU1
1R
1
˙qfbRk
IMU1
1R 1
˙qRk
0 0
0
IMU2
EOF R EOF
˙qfbRk
IMU2
EOF R EOF
˙qRk
0 0
⎞
⎟
⎠
(53)
6.1
Evaluation
To get a ﬁrst quality description we compare the estimated states of the Kalman
ﬁlter to the estimated states we got during the calibration by SLOM. Thus,
we compare online and oﬄine method. The advantage of the oﬄine method
is, that all measurements are known and so the states can be adapted to that
overall knowledge, whereas the online ﬁlter knows only the measurement at the
current time and not adapts the states before that time nor after that time.
The comparison (Fig. 7) shows only little deviations in positions < 0.041◦and
velocities < 0.2
◦
s . This is due to the very limited knowledge of measurements in
the Kalman ﬁlter. This comparison indicates that our simpliﬁcations made for
the Kalman ﬁlter are feasible.

Dynamics Calibration and Real-Time State Estimation . . .
407
10
15
20
25
30
35
−50
0
50
10
15
20
25
30
35
−200
0
200
10
15
20
25
30
35
−200
0
200
10
15
20
25
30
35
−200
0
200
Fig. 10. Measured (solid) and Kalman ﬁlter data (dashed). From top to bottom Motor
position θ, motor velocity ˙θ, second gyroscope IMU2ω2, and the ﬁrst IMU1ω1. For
motor angle and velocity the red, green, and blue denote yaw, pitch, roll axis respec-
tively. For the gyroscopes it denotes x, y, z axis based on its coordinate system
For the second experiment we use the same motion as for the calibration.
The diﬀerence to the calibration measurements and prediction with the found
model is that the Kalman ﬁlter runs in real-time online on the microcontroller
at a rate of 250 Hz. We do the comparison here to Fig. 4. The result is shown
for the overall behavior (Fig. 8a) and the detailed behavior of the pitch joint
(Fig. 8b). The transformed state into the measurements ﬁts much better as the
predicted data. The motor position drift not present anymore and ﬁrst body
IMU measurements coincide more than for the prediction, which is better seen
in the detailed few. The reason for continuously putting the measurements into
the estimator. One problem we need to be aware of is the drift between motor
and link position due to the integration of the gyroscopes bias’.
In Fig. 9 we see the estimated states of the Kalman ﬁlter and that there is
no drift between link positions compared to motor positions, because the joint
elasticity couples the link to the motor positions by τ cfb (Eq. (51)). Additionally,
the bearings position stays within a range of ±1◦and has no drift, too. The
bearings position increases and shows faster oscillations while moving the pitch
or roll joint – especially when comparing it to motions with limited velocity
between 20 and 53 s.

408
D. Sch¨uthe et al.
6.2
Ball Batting Example
After validating the accuracy of the Kalman ﬁlter, we test the ﬁlter on an exam-
ple motion of intended ball playing we have shown in [16]. Therefore, we moved
along a trajectory handled by a position controller on the microcontroller. The
resultant motion indicates the sportive character of our robotic system (Fig. 10)
and is the last test to see if the Kalman ﬁlter can handle such movements, as
we need this be handled by the ﬁlter for our future steps. In the ﬁgure we still
compute the measurements from the states we get, to make it comparable. The
result ﬁts to our expectations and also shows the detection of motions of the
ﬁrst body plate, necessary to know for our ball tracking system.
7
Conclusion
We have been shown that it is possible to ﬁnd parameters for the dynamics even if
the model takes no ﬂexibility of the bearing into account, which moves the whole
body. The extended model that uses the ﬂexible bearing was also introduced
and compared to the before mentioned model. It turns out that the standard
model without the ﬂexible bearing is more precise during the prediction than the
extended model. Predicted data deviations are larger whenever the velocities of
the second and third bodies change direction, because the bearing’s ﬂexibility
gets stimulated. The overall approximation is ﬁtting to the measurements well
for both models. The extended model might be worse than the standard model
due to some overﬁtting, which gives the SLOM solver the opportunity to tune
some parameters diﬀerently for the same result, especially seen for the spring
stiﬀness of the second joint and the spring stiﬀness of the ﬁrst bearing degree of
freedom. However, for the ﬁnal model we decided to take the extended model,
as we need information on the position and velocity of the base plate of body
1 for the ball tracking algorithm in the future. And we know that the model is
quiet well for prediction if we only use a short horizon, which is true for us as
we need a prediction only for about 1 s.
In the second part of this paper we showed a Kalman ﬁlter that uses the
extended model with some modiﬁcation to run on a microcontroller at 250 Hz.
The modiﬁcations lead to a simpliﬁed model that can be used in the linear
Kalman ﬁlter. The online estimated states were compared to the measurements
taken, where the results we ﬁtting well. Additionally, we compared the found
states by the SLOM algorithm that works oﬄine to the online estimated states
as a measure of quality. That showed only slight deviations. Finally, we tested
the ﬁlter under an intended use example.
In the next steps we need to implement our extended model to the controller
and ﬁnally use this for ball batting tasks. Additionally, the ball tracking needs to
be adapted to take in mind the current position and velocity of the ﬁrst bodies
base plate to get good results for the ball trajectory prediction.

Dynamics Calibration and Real-Time State Estimation . . .
409
References
1. Cheng, P., Oelmann, B.: Joint-angle measurement using accelerometers and gyro-
scopes a survey. IEEE Trans. Instrum. Meas. 59, 404–414 (2010)
2. Featherstone, R.: Spatial Version 2 (2012). http://royfeatherstone.org/spatial/v2/
notice.html
3. Featherstone, R.: A beginners guide to 6-D vectors (Part 2). IEEE Robot. Autom.
Mag. 17, 88–99 (2010)
4. Featherstone, R.: Rigid Body Dynamics Algorithms, vol. 49. Springer, Berlin (2008)
5. Grotjahn, M., Daemi, M., Heimann, B.: Friction and rigid body identiﬁcation of
robot dynamics. Int. J. Solids Struct. 38, 1889–1902 (2001)
6. Hertzberg, C.: A framework for sparse, non-linear least squares problems on man-
ifolds, Masters thesis, Universitat Bremen (2008)
7. Hertzberg, C., Wagner, R., Frese, U.: Tutorial on quick and easy model ﬁtting
using the SLoM framework. In: Stachniss, C., Schill, K., Uttal, D. (eds.) Spatial
Cognition VIII, pp. 128–142. Springer, Berlin (2012)
8. Hertzberg, C., Wagner, R., Frese, U., Schr¨oder, L.: Integrating generic sensor fusion
algorithms with sound state representations through encapsulation of manifolds.
Inf. Fusion 14, 57–77 (2013)
9. Kalman, R.E.: A new approach to linear ﬁltering and prediction problems. J. Basic
Eng. 35–45 (1960)
10. Laue, T., Birbach, O., Hammer, T., Frese, U.: An entertainment robot for playing
interactive ball games. In: RoboCup 2013: Robot Soccer World Cup XVII. Springer
(2013)
11. Mata, V., Benimeli, F., Farhat, N., Valera, A.: Dynamic parameter identiﬁcation in
industrial robots considering physical feasibility. Adv. Robot. 19, 101–119 (2005)
12. Moberg, S.: Modeling and control of ﬂexible manipulators, Ph.D. thesis, Linkoping
University, Automatic Control, The Institute of Technology (2010)
13. Narendra, K.S., Parthasarathy, K.: Identiﬁcation and control of dynamical systems
using neural networks. IEEE Trans. Neural Networks 1, 4–27 (1990)
14. Olsson, H., ˚Astr¨om, K., de Wit, C.C., G¨afvert, M., Lischinsky, P.: Friction models
and friction compensation. Eur. J. Control 4, 176–195 (1998)
15. Sch¨uthe, D., Frese, U.: Task level optimal control of a simulated ball batting robot.
In: 11th International Conference on Informatics in Control (ICINCO), pp. 45–56
(2014)
16. Sch¨uthe, D., Frese, U.: Optimal control with state and command limits for a sim-
ulated ball batting task. In: IEEE/RSJ International Conference on Intelligent
Robots and Systems (IROS), pp. 3988–3994 (2015)
17. Sch¨uthe, D., Wenk, F., Frese, U.: Dynamics calibration of a redundant ﬂexible
joint robot based on gyroscopes and encoders. In: 13th International Conference
on Informatics in Control (ICINCO), pp. 335–346 (2016)
18. Siciliano, B., Khatib, O.: Springer Handbook of Robotics. Springer (2008)
19. Staufer, P., Gattringer, H.: State estimation on ﬂexible robots using accelerometers
and angular rate sensors. Mechatronics 22, 1043–1049 (2012)
20. Vuong, N.D., Ang Jr., M.H.: Dynamic model identiﬁcation for industrial robots.
Acta Polytech. Hung. 6(5), 51–68 (2009)
21. Wu, J., Wang, J., You, Z.: An overview of dynamic parameter identiﬁcation of
robots. Robot. Comput.-Integr. Manuf. 26, 414–419 (2010)

Mathematical Model for the Output Signal’s
Energy of an Ideal DAC in the Presence of
Clock Jitter
Paola Loreti1, Sima Sarv Ahrabi1, and Pierluigi Vellucci2(B)
1 Department of Basic and Applied Sciences for Engineering, Sapienza University of
Rome, Via Antonio Scarpa n. 16, 00161 Rome, Italy
paola.loreti@sbai.uniroma1.it, sima.sarvahrabi@sbai.uniroma1.it
2 Department of Economics, Roma Tre University, via Silvio D’Amico 77, 00145
Rome, Italy
pierluigi.vellucci@uniroma3.it
Abstract. A mathematical model for the output signal’s energy of a
multidimensional ideal DAC is presented considering sampling clock jit-
ter. More speciﬁcally, a new model is formulated to prove one-sided
energy inequality for the output signal, for which the base time is aﬀected
by the jitter. Moreover, a family of annihilate operators is deﬁned and
applied to the ideal (one-dimensional) DAC model to estimate the output
signal energy.
1
Introduction
As DACs play a vital role in measuring and in the presence of a higher sampling
speed, their sampling clock jitter eﬀects could be critical, therefore, a lot of
research has been done on this ﬁeld. Reinhardt [20] investigated the jitter eﬀects
on the digital system functions. It was demonstrated that for DAC and ADC,
sampling clock jitter's noise power is a noteworthy restraint on the bit resolution.
In any case, as it has been thoroughly contended by Angrisani and D’Arco
[3], theories dealing with major aspects of DAC time base jitter, investigation
of quantization noise and nonlinearity are still inadequate. Abrupt behavior of
waveforms produced by DAC is sporadically studied experimentally [5,6,11–13].
Digital-to-Analog converters and the consequences of the sampling clock jit-
ter were examined by Kurosawa et al., in [13] and a digital input with a sam-
pling clock CLK was considered (Fig. 1, [13]). From theoretical point of view,
the period of a sampling clock CLK remains unchanged for every cycle, but in
reality, the timing of the sampling clock CLK ﬂuctuates (Fig. 2, [13]), therefore,
ﬂuctuating phase and frequency have been the big issues of numerous studies.
One could refer, for instance, to well-known references [1,4,7,18].
In this paper, the problem formulation of sampling clock jitter, which we
have introduced in our previous work [16], is diﬀerent from that shown in the
literature. For this reason, in the following we attempt a brief review of the
papers on sampling clock jitter.
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_20

Mathematical Model for the Output Signal’s . . .
411
The DAC sampling clock was supposed by Jeng, in [11], to be phase-
modulated by a deterministic sine wave while, in [12], a periodic ﬁxed-amount
of timing oﬀsets for the DAC sampling clock has been considered.
Souders et al. [22] presented an analysis of the eﬀect of timing jitters in
waveform samples, considering timing jitter as a normally distributed random
variable and developed equations to calculate the systematic errors occurred in
the amplitude estimates of sampled Waveforms.
Time jittering was modelled as a random variable uniformly distributed by
Shi et al. [21] but in [13] a phase-modulated by a random signal was considered
for the DAC sampling clock. Angrisani and D’Arco [3] exhibited how the Inﬂu-
ence of jitter on time base changes the analog output waveform characteristic
by using zero-order-hold DACs and sinusoidal jitter, which it is not always valid
in high-speed applications. Reddy and Shanthi [19] examined clock jitter caused
noise in a single-loop continuous-time delta-sigma modulator with a feedback
DAC. They modeled the eﬀect of jitter as an additive sequence at the input of
an NRZ feedback DAC, considering random clock jitter. A mathematical app-
roach was taken, namely the Bode Sensitivity Integral in order to derive a lower
bound on the jitter caused noise.
Alegria and Serra [2] and Tatsis et al. [24], considered the eﬀect of jitter as a
random variable which was normally distributed. Vercaemer and Rombouts [25]
proposed an expression for the clock jitter caused noise in the output signal of
Self-Oscillating Sigma Delta Modulators. They modeled the clock jitter as an
additive noise in the jittered DAC output in the feedback path. They consid-
ered random jitter with a Gaussian distribution and jitter with a more general
spectrum in addition.
All the listed papers above observe the eﬀects of sampling clock jitter by sim-
ulations, where the sampling clock is modulated by a known random or deter-
ministic signal. In contrast to them, the current article formulates the sampling
clock jitter problem considering an unknown sequence of real numbers ϵn (the
jitter).
The ideal DAC (i.e. Digital-to-Analog Converter, see [17]) is used to imple-
ment the ideal bandlimited interpolation, which is basically founded on the use
of the Cardinal function [23], C(f, h), expounded by
C(f, h)(t) =

n∈Z
f(nh) sinc
 t
h −n

.
(1)
The step size in (1) is denoted by h > 0 and the sinc function is deﬁned as:
sinc(α) =
 sin(πα)
πα
α ̸= 0,
1
α = 0 .
(2)
If the function f(t) is bandlimited in Ωm and the sampling frequency Ωs satisﬁes
Ωs ≥2Ωm, the original signal could be exactly and uniquely reconstructed for all
time from its samples by using the ideal bandlimited interpolation. This process
can be analytically formulated. A function f ∈L2(R) is called bandlimited to

412
P. Loreti et al.
[−Ωm, Ωm] if supp( ˆf) ⊆[−Ωm, Ωm], i.e. ˆf(ξ) = 0 for almost every |ξ| > Ωm,
where ˆf denotes the Fourier transform of f. The convergence of C(f, h) to the
function f(t) could be examined using Paley–Wiener space, which plays a vital
role in signal processing [10]. For a deﬁnition of Paley–Wiener space, one could
refer, for instance, to [9] (p. 270).
Herein the results of a previous paper [16] are widened, particularly for the
output signal of an ideal DAC, one-sided energy inequality is proven considering
the sampling clock jitter eﬀect. The results obtained here are in fact, a gener-
alization of the Parseval’s identity. According to Parseval’s identity, it can be
obviously stated that the signal energy could be expressed as an inﬁnite sum of
coeﬃcients |f(nh)|2. Denoted by f(t) the signal, the energy of f(t) is deﬁned as
the integral Ef :=
 ∞
−∞|f(t)|2dt.
The nth sampling timing of CLK will be nTs + ϵn instead of nTs in the
presence of sampling clock jitter, where the jitter is denoted by ϵn and Ts is
theoretically the sampling period of the sampling clock CLK. In the paper, it is
assumed that Ts = 1, hence the sampling timing of CLK is n + ϵn. Therefore,
Eq. (1) becomes as below:
f(t) =

n∈Z
f(nh) sinc
 t
h −λn

,
(3)
where λn = n + ϵn, λn ∈R. The objective, as mentioned before, is to gener-
alize the Parseval’s identity for the sequence of functions

sinc
 t
h −λn
	
n∈Z.
Obviously, for the signal (1), the energy is deﬁned as Ef = h 
n∈Z |f(nh)|2.
This is the Parseval identity for the sequence of functions

sinc
 t
h −λn
	
n∈Z.
Nevertheless, the Parseval’s identity ceases to be true if n is substitutes with λn.
This will be motivation behind the paper, which are described as the results in
the Sects. 2 and 3.
2
Signal’s Energy at the Output of a d-dimensional Ideal
DAC
In this section we deﬁne an ideal DAC for the d-dimensional case (see [14], p.
495). Then, we say that a d-dimensional ideal DAC implements the following
formula (Fig. 1)
C(f, h1, . . . , hd)(t1, . . . , td) =
=

n1,...,nd∈Z
f(n1h1, . . . , ndhd) sinc
 t1
h1
−n1, . . . , td
hd
−nd

,
where sinc(x1, . . . , xd) = d
k=1 sinc(xk), and thus
C(f, h1, . . . , hd)(t1, . . . , td) =

n1,...,nd∈Z
f(n1h1, . . . , ndhd)
d

k=1
sinc
 tk
hk
−nk

.
(4)
We now deﬁne the energy of the multidimensional signal f(t1, . . . , td).

Mathematical Model for the Output Signal’s . . .
413
t2
t1
n2h2
(n2 + 1)h2
n1h1
(n1 + 1)h1
Fig. 1. Region where f(t1, t2) is interpolated (case d = 2)
Deﬁnition 1. The energy in the signal f(t1, . . . , td) is deﬁned as the multiple
integral
Ed
f :=

Rd |f(t1, . . . , td)|2 dt1 . . . dtd .
The main result of the section is the following.
Theorem 1. Let I = {n |1 ≤n ≤R, R ∈N} be a ﬁnite set of integers, and let
f(t1, . . . , td) =

n1,...,nd∈I
f(n1h1, . . . , ndhd)
d

k=1
sinc
 tk
hk
−λnk

,
(5)
where λnk ∈R and
|λnk −λmk| ≥γk >

1
3 + π2
12,
∀n, m ∈I , ∀k = 1, . . . , d.
Let ¯γ := min{γ1, . . . , γd}. Then
Ed
f ≥

1 −¯γ−1

1
3 + π2
12
d
d

k=1
hk

n1,...,nd∈I
|f(n1h1, . . . , ndhd)|2 .
(6)
Proof. We prove the theorem only for d = 2. For d > 2, the proof is similar.
By Deﬁnition 1,
E2
f =

R2


n1,n2∈I
f(n1h1, n2h2) sinc
 t1
h1
−λn1

sinc
 t2
h2
−λn2

2
dt1dt2 .
Fix t1, λn1 ∈R, and let αn1(t2) = 
n2∈I f(n1h1, n2h2) sinc

t2
h2 −λn2

.

414
P. Loreti et al.
With this notation, the argument of integral above can be written as

n1,n2∈I
f(n1h1, n2h2) sinc
 t1
h1
−λn1

sinc
 t2
h2
−λn2

=
=

n1∈I
sinc
 t1
h1
−λn1
 
n2∈I
f(n1h1, n2h2) sinc
 t2
h2
−λn2

=
=

n1∈I
αn1(t2) sinc
 t1
h1
−λn1

,
and thus
E2
f =

R2


n1∈I
αn1(t2) sinc
 t1
h1
−λn1

2
dt1dt2 .
By Theorem 1.1 in [16], we have E1
f ≥h1

1 −γ−1
1

1
3 + π2
12
 
n1∈I |f(n1h1)|2
and
E2
f =

R

R


n1∈I
αn1(t2) sinc
 t1
h1 −λn1

2
dt1

dt2
≥h1

1 −γ−1
1
	
1
3 + π2
12
 
R

n1∈I
|αn1(t2)|2 dt2
= h1

1 −γ−1
1
	
1
3 + π2
12
 
n1∈I

R


n2∈I
f(n1h1, n2h2) sinc
 t2
h2 −λn2

2
dt2 .
Applying a second time the same inequality from below, we ﬁnally obtain
E2
f ≥
2

k=1
hk

1 −γ−1
k

1
3 + π2
12
 
n1∈I

n2∈I
|f(n1h1, n2h2)|2 .
This inequality yields the (6).
3
Applications of “Annihilate Operators” to the Ideal
DAC Model
The following deﬁnitions and results lead to a generalization of the “annihilate
operators”, a family of operators introduced in [8], which annihilate a ﬁnite
number of terms in the Fourier series.
Deﬁnition 2. Let h > 0, S be a ﬁnite set of integers such that for any sequence
{f(nh)}n∈Z, one has
f(nh) = 0 for any n ∈S .

Mathematical Model for the Output Signal’s . . .
415
Let f(t) = 
n∈Z f(nh) sinc
 t
h −λn
	
. With f|S we denote the signal:
f|S =

n/∈S
f(nh) sinc
 t
h −λn

.
Deﬁnition 3. The energy in the signals f(t) and f|S is denoted by
Ef :=
 ∞
−∞
|f(t)|2 dt
and
Ef|S :=
 ∞
−∞
|f|S|2 dt ,
respectively.
In the following we apply the main results of the paper to Ingham type inverse
inequality for cardinal series, deﬁning here a family of “annihilate operators” in
the spirit of previous works applied to Fourier series ([8,15]).
In [8], the author introduced a family of operators, which annihilate a ﬁnite
number of terms in the Fourier series. Here we follow [15]. For the reader’s
convenience, we then proceed to recall some of their properties. Given δ > 0
and ω ∈C arbitrarily, we deﬁne the linear operator Iδ,ω as follows: for every
continuous function u : R →C the function Iδ,ωu : R →C is given by the
formula
Iδ,ωu(t) := u(t) −1
δ
 δ
0
e−iωsu(t + s)ds,
t ∈R .
The following result states some properties connected with operators Iδ,ω.
Lemma 1. It has:
a If u(t) = eiωt then Iδ,ωu = 0.
b If u(t) = eiω′t with ω′ ̸= ω, then
Iδ,ωu(t) =

1 −ei(ω′−ω)δ −1
i(ω′ −ω)δ

u(t).
c The linear operators Iδ,ω commute, that is
Iδ,ωIδ′,ω′u = Iδ′,ω′Iδ,ωu
for all δ, ω, δ′, ω′ and u.
Getting ideas by [15], we deﬁne here a family of operators which annihilate a
ﬁnite number of terms in the cardinal series.
Since, on L2[−π, π], the Fourier transform of eiωt is
F

eiωt	
= 1
2π
 π
−π
eiωt e−istdt = sinc(s −ω) ,

416
P. Loreti et al.
and given δ > 0 and ω ∈C arbitrarily, we deﬁne the linear operator Jδ,ω as
follows: for every continuous function u : R →C the function Jδ,ωu : R →C is
given by the composition
Jδ,ωu(s) := F ◦Iδ,ω ◦F−1u(s),
s ∈R .
We enunciate now some results on operator Jδ,ω.
Lemma 2. It has:
a If u(s) = sinc(s −ω) then Jδ,ωu = 0.
b If u(s) = sinc(s −ω′) with ω′ ̸= ω, then
Jδ,ωu(s) =

1 −ei(ω′−ω)δ −1
i(ω′ −ω)δ

u(s).
c The linear operators Jδ,ω commute, that is
Jδ,ωJδ′,ω′u = Jδ′,ω′Jδ,ωu
for all δ, ω, δ′, ω′ and u.
Proof. (a) We have that
F−1u(s) = eiωt ,
then
Jδ,ω sinc(s −ω) = F

Iδ,ωeiωt	
,
which is equal to 0 by Lemma 1, point (a).
(b) If u(s) = sinc(s −ω′) and ω′ ̸= ω, we have
Jδ,ω sinc(s −ω′) = F

Iδ,ωeiω′t
.
By Feiω′t = u(s) and point (b) of Lemma 1 it follows that
Jδ,ωu(s) =

1 −ei(ω′−ω)δ −1
i(ω′ −ω)δ

u(s) .
(c) Putting F−1u(s) = v(t), it comes to prove that
F ◦Iδ,ω ◦F−1 ◦F ◦Iδ′,ω′ ◦F−1u(s) =
= F ◦Iδ′,ω′ ◦F−1 ◦F ◦Iδ,ω ◦F−1u(s)
and
F ◦Iδ,ω ◦Iδ′,ω′v(t) = F ◦Iδ′,ω′ ◦Iδ,ωv(t) .
Hence, according to point (c) of Lemma 1, the claim (c) is proved.

Mathematical Model for the Output Signal’s . . .
417
Lemma 3. For any δ > 0, ω, ω′ ∈C and function u as in Lemma 2, point (b),
we have
|Jδ,ωu(s)| ≤
⎛
⎝1 + e
|ℑ(Δω)| δ
2
cosh
ℑ(Δω) δ
2
⎞
⎠|u(s)| ,
(7)
where Δω = ω′ −ω.
Proof. For ω′ ̸= ω, by Lemma 2 and by the deﬁnition of sinc function (2), one
has
Jδ,ωu(s) =

1 −ei Δωδ
2 sinc
Δωδ
2π

u(s) ,
where Δω = ω′ −ω. On the other hand,
sin x
x
=
 1
0
cos(sx)ds .
Then
|Jδ,ωu(s)| ≤
1 + e
|ℑ(Δω)|δ
2
sinc
Δωδ
2π

 |u(s)| ,
but

sin x
x
 ≤
 1
0
cosh(sℑx)ds ≤cosh(ℑx) .
From which, one has
|Jδ,ωu(s)| ≤

1 + e
|ℑ(Δω)|δ
2
cosh
ℑ(Δω) δ
2

|u(s)| .
Theorem 2. Let {λn}n∈Z ⊂R be such that
lim
|n|→∞|λn| = +∞.
(8)
Assume that there exists a ﬁnite set S of integers such that for any sequence
{f(nh)}n∈Z verifying
f(nh) = 0 for any n ∈S ,
(9)
the estimates
c′
1

n/∈S
|f(nh)|2 ≤Ef|S
(10)
Ef|S ≤c′
2

n/∈S
|f(nh)|2
(11)
are satisﬁed for some constants c′
1, c′
2 > 0. Then, there exists c1 > 0 such that
for any sequence {f(nh)}n∈Z the estimate
c1

n∈Z
|f(nh)|2 ≤Ef
(12)
holds.

418
P. Loreti et al.
Proof. Fix h = 1. For h > 0 and h ̸= 1 the proof is similar. Let f(n) := an.
We refer to proof of Proposition 5.4 in [15]. To begin with, we will transform
the function
f(s) =

n∈Z
an sinc(s −λn)
in a series such that the terms corresponding to indices in S are null, so we can
apply assumption (11).
To this end, we ﬁx ε > 0 and choose δ > 0. Let us denote by J the composition
of all linear operators Jδ,λj, where j ∈S; by Lemma 2 (c) the deﬁnition of J does
not depend on the order of the operators Jδ,λj. Therefore, we can use Lemma 2
to get
Jf(s) =

n/∈S
an

j∈S

1 −ei(λn−λj)δ −1
i(λn −λj)δ

sinc(s −λn) .
If we deﬁne, for any n /∈S
cn := an

j∈S

1 −ei(λn−λj)δ −1
i(λn −λj)δ

,
then we have
Jf(s) =

n/∈S
cn sinc(s −λn) .
Therefore, applying estimate (10) to Jf(s) we obtain
 +∞
−∞
|Jf(s)|2 ds ≥c′
1

n/∈S
|cn|2 .
(13)
Next, we choose δ > 0 such that

j∈S

1 −ei(λn−λj)δ −1
i(λn −λj)δ

̸= 0
for any n /∈S .
Now, we note that there exists a constant c′ > 0 such that


j∈S

1 −ei(λn−λj)δ −1
i(λn −λj)δ

2
≥c′,
∀n /∈S .
(14)
Moreover, for any ﬁxed j ∈S we have

ei(λn−λj)δ −1
i(λn −λj)δ
 ≤e−ℑ(λn−λj)δ + 1
|λn −λj|δ
→0 as |n| →∞,
in view of (8). As a result, the product 
j∈S

1 −ei(λn−λj )δ−1
i(λn−λj)δ

tends to 1 as
|n| →∞. Therefore,
 +∞
−∞
|Jf(s)|2 ds ≥c′
1c′ 
n/∈S
|an|2 .
(15)

Mathematical Model for the Output Signal’s . . .
419
On the other hand, by Lemma 3 we have
|Jf(s)| ≤k|u(s)|,
k = 1 + e
|ℑ(Δω)|δ
2
cosh
ℑ(Δω) δ
2

.
To emphasize the dependence of k from δ, we write k = kj(δ), where j ∈S.
Putting aj = |ℑ(Δλj)| and applying |Jf(s)| ≤kj(δ)|u(s)| repeatedly with ω =
λj, j ∈S, and following same steps in [15], we obtain

n/∈S
|an|2 ≤4|S|
c′
1c′
 +∞
−∞
|f(s)|2 ds ,
(16)
where |S| indicates the number of elements in the set S.
In addition, noting
 +∞
−∞


n∈S
an sinc(s −λn)

2
ds =
=
 +∞
−∞
f(s) −

n/∈S
an sinc(s −λn)

2
ds ,
and thanks to the triangle inequality, (11) and (16) we get
≤2
 +∞
−∞
|f(s)|2ds + 2
 +∞
−∞


n/∈S
an sinc(s −λn)

2
ds
≤2
 +∞
−∞
|f(s)|2ds + 2c′
2

n/∈S
|an|2
≤2

1 + c′
2
4|S|
c′
1c′
  +∞
−∞
|f(s)|2ds .
Let us note that the expression
 +∞
−∞


n∈S
an sinc(s −λn)

2
ds
is a positive semideﬁnite quadratic form of the variable {an}n∈S ∈C|S|. More-
over, it is positive deﬁnite, because the functions sinc(s−λn), n ∈S, are linearly
independent. Hence, there exists a constant c′′ > 0 such that
 +∞
−∞


n∈S
an sinc(s −λn)

2
ds ≥c′′ 
n∈S
|an|2
so

n∈S
|an|2 ≤2
c′′

1 + c′
2
4|S|
c′
1c′
  +∞
−∞
|f(s)|2ds .
Finally, from the above estimate and (16) the desired inequality (12) follows.

420
P. Loreti et al.
Remark 1. The constants in Theorem 2 (c1, c′
1 and c′
2) are dependent on the
step size h > 0.
Remark 2. Theorem 2 represents a generalization of Theorem 1.1 stated in [16].
For instance, let N > 0 be an integer and deﬁne S := {n | n ≤N}. If we consider,
for simplicity, only unilateral series, we have f(t) = 
n∈N f(nh) sinc
 t
h −λn
	
and f|S = ∞
n=N+1 f(nh) sinc
 t
h −λn
	
. Theorem 2 states, in this case, that if
we know two constants c′
1, c′
2 > 0, such that
c′
1
∞

n=N+1
|f(nh)|2 ≤Ef|S ≤c′
2
∞

n=N+1
|f(nh)|2 ,
then, from proof of Theorem 2:
Ef ≥
1
2
c′′

1 + c′
2
4N
c′
1c′

+ 4N
c′
1c′

n∈N
|f(nh)|2 .
Thus, Theorem 2 oﬀers us the possibility of knowing an estimation of the lowest
amount of signal’s energy, assessing the constant c′ and c′′.
4
Conclusions
Parseval’s identity asserts that for a signal f(t) such that
f(t) =

n∈Z
f(nh) sinc
 t
h −n

,
(17)
The energy of the signal is equal to
Ef = h

n∈Z
|f(nh)|2.
In the presence of sampling clock jitter, where the jitter is considered as an
unknown sequence of a real numbers ϵn, the Parseval’s identity cannot be applied
to the signal f(t), for which n is substituted with λn = n + ϵn. In this paper, we
have presented one-sided energy inequality for the output signal of an ideal DAC,
in the presence of sampling clock jitter. Mathematically, we have oﬀered a gener-
alization of Parseval’s identity for the sequence of functions

sinc
 t
h −λn
	
n∈Z.
This motivates the result of the paper, which has been expressed in Theorem 2.
Here we have presented a direct proof of the energy inequality based on the sinc
functions, deﬁning a family of annihilate operators and applying to the ideal
DAC model. It represents a generalization of the results shown in a previous
work [16].
In further researches and upcoming works, it is intended that more com-
plicated systems than ideal DACs will be considered. As one could see in [3],
where a zero-order-hold DAC is considered, the main focus is on the changes
occurred in the desired features of the analog output waveform due to the jitter.
In further works, one line of research could be to mathematically investigate the
eﬀect of time jitter in real DACs, as the zero-order-hold DAC, by also means of
experimental activities.

Mathematical Model for the Output Signal’s . . .
421
References
1. Abidi, A.: Phase noise and jitter in CMOS ring oscillators. IEEE J. Solid-State
Circuits 41, 1803–1816 (2006)
2. Alegria, F., Serra, A.: Gaussian jitter-induced bias of sine wave amplitude estima-
tion using three-parameter sine ﬁtting. IEEE Trans. Instrum. Meas. 59, 2328–2333
(2010)
3. Angrisani, L., D’Arco, M.: Modeling timing jitter eﬀects in digital-to-analog con-
verters. IEEE Trans. Instrum. Meas. 58, 330–336 (2009)
4. Demir, A., Mehrotra, A., Roychowdhury, J.: Phase noise in oscillators: a unifying
theory and numerical methods for characterization. IEEE Trans. Circuits Syst. I,
Fundam. Theory Appl. 47, 655–674 (2000)
5. Doris, K., van Roermund, A., Leenaerts, D.: A general analysis on the timing jitter
in D/A converters. In: ISCAS 2002 IEEE International Symposium on Circuits and
Systems. Vol. 1, pp. I–117–I–120 (2002)
6. Doris, K., van Roermund, A., Leenaerts, D.: Mismatch-based timing errors in cur-
rent steering DACs. In: Circuits and Systems, 2003. ISCAS ’03. Proceedings of the
2003 International Symposium on. vol. 1, (2003) I–977–I–980
7. Hajimiri, A., Lee, T.: A general theory of phase noise in electrical oscillators. IEEE
J. Solid-State Circuits 33, 179–194 (1998)
8. Haraux, A.: S´eries lacunaires et contrˆole semi-interne des vibrations d’une plaque
rectangulaire. J. Math. Pures Appl. 68, 457–465 (1989)
9. Heil, C.: A Basis Theory Primer. Birkh¨auser, Basel (2011)
10. Higgins, J.R.: Five short stories about the cardinal series. Bull. Am. Math. Soc.
(N.S.) 12, 45–89 (1985)
11. Jenq, Y.C.: Digital-to-analog (D/A) converters with nonuniformly sampled signals.
IEEE Trans. Instrum. Meas. 45, 56–59 (1996)
12. Jenq, Y.C.: Direct digital synthesizer with jittered clock. IEEE Trans. Instrum.
Meas. 46, 653–655 (1997)
13. Kurosawa, N.: Sampling clock jitter eﬀects in digital-to-analog converters. Mea-
surement 31, 187–199 (2002)
14. Lim, J.S.: Two-dimensional Signal and Image Processing. Prentice-Hall, Inc, Upper
Saddle River (1990)
15. Loreti, P., Sforza, D.: Reachability problems for a class of integro-diﬀerential equa-
tions. J. Diﬀer. Equ. 248, 1711–1755 (2010)
16. Loreti, P., Vellucci, P.: A mathematical model for signals energy at the output of
an ideal dac. In: 2016 13th International Conference on Informatics in Control,
Automation and Robotics (ICINCO), Vol. 1, pp. 347–352 (2016)
17. Manolakis, D.G., Ingle, V.K.: Applied Digital Signal Processing: Theory and Prac-
tice. Cambridge University Press, Cambridge (2011)
18. Razavi, B.: A study of phase noise in CMOS oscillators. IEEE J. Solid-State Cir-
cuits 31, 331–343 (1996)
19. Reddy, K., Pavan, S.: Fundamental limitations of continuous-time delta-sigma
modulators due to clock jitter. IEEE Trans. Circuits Syst. I: Regul. Pap. 54, 2184–
2194 (2007)
20. Reinhardt, V.S.: A review of time jitter and digital systems. In: Proceedings of the
2005 IEEE International Frequency Control Symposium and Expositio, pp. 38–45
(2005)
21. Shi, Q., Gong, Y., Guan, Y.L.: Asynchronous classiﬁcation of high-order qams.
In: WCNC 2008 Wireless Communications and Networking Conference, pp. 1188–
1193. IEEE (2008)

422
P. Loreti et al.
22. Souders, T. M., Flach, D. R., Hagwood, C., Yang, G.: The eﬀects of timing jitter in
sampling systems. In: Instrumentation and Measurement Technology Conference,
1989. IMTC-89. Conference Record., 6th IEEE. (1989) 199–203
23. Stenger, F.: Summary of sinc numerical methods. J. Comput. Appl. Math. 121,
379–420 (2000)
24. Tatsis, G., Votis, C., Raptis, V., Christoﬁlakis, V., Kostarakis, P.: A/D restrictions
(errors) in Ultra-Wideband Impulse Radios. Int. J. Commun. Network Syst. Sci.
3, 425–429 (2010)
25. Vercaemer, D., Rombouts, P.: Analyzing the eﬀect of clock jitter on self-oscillating
sigma delta modulators. IEEE Trans. Circuits Syst. I: Regul. Pap. 63, 200–210
(2016)

Stochastic Integration Filter with Improved
State Estimate Mean-Square Error Computation
Jindˇrich Havl´ık(B), Ondˇrej Straka, Jindˇrich Dun´ık, and Jiˇr´ı Ajgl
European Centre of Excellence - New Technologies for Information Society,
Department of Cybernetics, Faculty of Applied Sciences, University of West Bohemia,
Univerzitn´ı 8, Plzeˇn, Czech Republic
havlikj@kky.zcu.cz, straka30@kky.zcu.cz, dunikj@kky.zcu.cz, ajgl@kky.zcu.cz
Abstract. The paper deals with the Bayesian state estimation of non-
linear stochastic dynamic systems. The focus is aimed at the stochastic
integration ﬁlter, which represents the Gaussian ﬁlters with the state
and measurement prediction moments calculated by the stochastic inte-
gration rule. Besides the value of the integral, the rule also provides the
covariance matrix of the integral value error. In the paper an improved
mean-square error of the state estimate is proposed based on utilization
of the integral error covariance matrix. The improved calculation is illus-
trated using two numerical examples for the stochastic integration ﬁlter
of the third and ﬁfth degrees.
Keywords: State estimation · Bayesian approach · Mean-squared
error · Gaussian ﬁlter · Stochastic integration ﬁlter
1
Introduction
Nonlinear state estimation of discrete-time stochastic dynamic systems is a broad
ﬁeld of study, which has attracted signiﬁcant attention in the last decades. It
plays a crucial role in many areas such as signal processing, target tracking,
satellite navigation, fault detection, and adaptive and optimal control problems.
In general, it is an essential part of any decision-making process. The state esti-
mation problem is usually solved by following either the optimization approach
or the Bayesian approach.
The optimization approach assumes minimization of a certain design crite-
rion, usually the mean-square error (MSE), leading to ﬁlters such as the extended
Kalman ﬁlter [1], the divided diﬀerence ﬁlter [13], or the unscented Kalman ﬁlter
[11]. The optimization is usually feasible by enforcing a linear structure of the
ﬁlter with respect to actual measurement. The ﬁlter product is a point estimate
of the state with a measure of conﬁdence represented by a covariance matrix
(CM) of the estimate error.
On the contrary, the Bayesian approach is built on the Bayesian recursive
relations (BRRs) [15], which provide the state estimate in the form of a condi-
tional probability density function (PDF) of the state conditioned by the mea-
surement. As opposed to the point estimate, the conditional PDF provides full
c
⃝Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4_21

424
J. Havl´ık et al.
information about the unknown state. Due to intractability of the BRRs for
nonlinear and non-Gaussian systems, the closed form solution to the problem
relies on appropriate approximations.
Approximate methods providing an approximate conditional PDF capturing
the complexity of the conditional PDF with a great ﬁdelity are called global
methods. They are represented namely by the Gaussian sum method [14], the
point-mass method [12], and the particle ﬁlter [5]. The practical use of the global
methods is limited especially due to their excessive computational complexity.
By assuming a Gaussian approximation of the conditional PDFs provided by
the BRRs, the methods denoted as Gaussian ﬁlters (GFs) [9] or local Bayesian
methods [2] are formed. The GFs posses the same structure of the algorithm,1
where the speciﬁc GF solution is given by the approximations used for computing
integrals appearing in the algorithm. The GFs are represented namely by the
quadrature Kalman ﬁlter [3] employing a quadrature rule, the cubature Kalman
ﬁlter [2] employing a cubature rule, the cubature quadrature Kalman ﬁlter [4],
the sparse-grid quadrature ﬁlter [10], or the stochastic integration ﬁlter (SIF)
[6], which utilizes a stochastic integration rule (SIR) [7].
The SIR is based on an iterative evaluation and weighting of a quadrature
and cubature rules. As a consequence, the SIR has an advantage compared to
the other numerical rules as it provides an integral error estimate. In [8], features
and possibilities of the SIF were illustrated stemming from this ability. Albeit
the paper dealt with degree 3 SIR only, it was shown that the SIR can be used
to measure the signiﬁcance of nonlinearities present in the model, and that the
total number of iterations to reach desired precision can be anticipated. Above
all, an improved calculation of the MSE of the state estimate was derived.
The goal of this paper is to extend the results of [8] by considering not only
the SIR of the 3rd degree but also the more precise SIR of the 5th degree. For
the SIF of both 3rd and 5th degrees an improved calculation of the MSE of the
state estimate is proposed, which can be used for better self-assessment of the
ﬁlter capabilities in terms of the state estimate error. Additionally, an extended
numerical illustration is provided in the paper.
The rest of the paper is organized as follows: Sect. 2 is devoted to a brief
introduction to the nonlinear state estimation and its solution by the GFs. The
SIR and the SIF are brieﬂy presented in Sect. 3. Section 4 presents the improved
MSE calculation. In Sect. 5 two numerical illustrations are used to picture the
quality of the improved MSE calculation and the paper is concluded by Sect. 6.
2
State Estimation
The aim of this section is to formulate the nonlinear state estimation problem, to
present its general solution, and to describe the GF solution to state estimation.
1 Note that even though the optimization methods and the GFs were derived by
diﬀerent approaches and assumptions, ﬁnally they provide formally same structure
of the algorithm, which is computationally reasonable and often used in practice.

Stochastic Integration Filter with Improved State . . .
425
2.1
Formulation of Nonlinear State Estimation Problem
Let a discrete-time nonlinear stochastic model be considered in the following
state-space form
xk+1 = fk(xk) + wk,
k = 0, 1, 2, . . . ,
(1)
zk = hk(xk) + vk,
k = 0, 1, 2, . . . ,
(2)
where the vectors xk ∈Rnx and zk ∈Rnz represent the state and the measure-
ment at time instant k, respectively, fk : Rnx →Rnx and hk : Rnx →Rnz
are known vector functions, and wk ∈Rnx and vk ∈Rnz are mutually
independent state and measurement white noises. The PDFs2 of the noises
are Gaussian with zero means and known CMs Σw
k
and Σv
k, respectively,
i.e., p(wk) = N{wk; 0nx×1, Σw
k } and p(vk) = N{vk; 0nz×1, Σv
k}, where 0a×b
denotes an a × b matrix of zeros. The PDF of the initial state is Gaussian and
known as well, i.e., p(x0) = N{x0; ¯x0, P0}. The initial state is independent of
the noises.
The state estimation aims at searching for the state xk based on the measure-
ments up to the time instant ℓ, which will be denoted as zℓ△= [zT
0 , zT
1 , . . . , zT
ℓ]T .
Due to the stochastic nature of the system, the state estimate is described by the
conditional PDF p(xk|zℓ). In this paper, the ﬁltering (ℓ= k) and the one-step
prediction (ℓ= k −1) problems will be considered only.
2.2
General Solution to State Estimation and State Estimation
Methods
The optimization approach to ﬁnd the ﬁltering estimate p(xk|zk) is based on
the speciﬁcation of the structure of the ﬁlter and minimization of a certain crite-
rion. Usually, enforcing a linear structure with respect to the measurement and
adopting the minimal mean-square error criterion is preferred. Such assump-
tions enable the solution up to the point, where certain moments have to be
approximated.
On the other hand, the Bayesian approach is built on the following BRRs
providing the the conditional PDF [15]:
p(xk|zk) =
p(xk|zk−1)p(zk|xk)

p(xk|zk−1)p(zk|xk) dxk
,
(3)
where the one-step prediction PDF is
p(xk|zk−1) =

p(xk−1|zk−1)p(xk|xk−1) dxk−1,
(4)
and p(xk|xk−1) = pwk−1(xk −fk−1(xk−1)) and p(zk|xk) = pvk(zk −hk(xk)).
2 For the sake of simplicity all PDFs will be given by their argument, if not stated
otherwise, i.e., p(wk) = pwk(wk).

426
J. Havl´ık et al.
An analytical solution to (3) and (4) is an intricate functional-domain prob-
lem, which can be computed for a few cases only. Such a case is, for example,
given by linear functions and Gaussian PDFs in the model Eqs. (1) and (2).
However, for a nonlinear or a non-Gaussian system approximate solutions are,
typically, sought.
Principal approximations are of two types. The ﬁrst type approximations
involve the numerical solution to the BRRs. The point-mass method [12], or
the particle ﬁlter [5] are signiﬁcant representatives of the numerical approximate
methods.
The second type approximations are based on an analytical solution. This can
be achieved by more restrictive approximations or assumptions. For example, by
approximating the PDFs by a Gaussian mixture PDF the Gaussian sum method
[14] is obtained. The Gaussian mixture representation maintains a global validity
of the results, however simpler methods, assuming Gaussian PDFs are more
frequent. Such ﬁlters are denoted as Gaussian ﬁlters [9].
2.3
Gaussian Filters
The GFs assume the joint predictive PDF p(zk, xk|zk−1) being Gaussian at each
time instant [2]
p(zk, xk|zk−1) = N
zk
xk

;
¯zk|k−1
¯xk|k−1

,

Pzz
k|k−1 PxzT
k|k−1
Pxz
k|k−1 Pxx
k|k−1
	
.
(5)
By adopting the Gaussian assumption, the ﬁltering PDF p(xk|zk) and the one-
step predictive PDF p(xk|zk−1) are also Gaussian
p(xk|zk) = N{xk; ¯xk|k, Pxx
k|k},
(6)
p(xk|zk−1) = N{xk; ¯xk|k−1, Pxx
k|k−1}.
(7)
Since Gaussian distributions are assumed only, calculation of the ﬁrst two
moments of (5) is suﬃcient.
The moments are given by the following general form:
E[γ(x)] =

γ(x)N{x; ¯x, P}dx,
(8)
where γ : Rnx →Rnγ is a vector function (for example fk(x)), ¯x is a mean and
P is a CM of x ∈Rnx.
The particular GFs vary in the way they compute the (approximate)
Gaussian PDF weighted integrals (8). The GFs employ deterministic or sto-
chastic numerical integration rules. The rules approximate the integral by a
sum of weighted points transformed throught γ. The points and corresponding
weights are speciﬁcally selected to provide the approximate sum exact for poly-
nomial functions γ(x) up to a certain degree. The particular ﬁlters are known
as the quadrature Kalman ﬁlter [3], the cubature Kalman ﬁlter [2], the cubature
quadrature Kalman ﬁlter [4], the sparse-grid quadrature ﬁlter [10], or the SIF [6].

Stochastic Integration Filter with Improved State . . .
427
3
Stochastic Integration Filter
The SIF [6] utilizes the SIR [7] for calculating the moments based on integral
evaluations. As a result by the properties of the SIF (within the class of GFs)
are determined by properties of the SIR. The SIR possesses following properties:
(a) The SIR (as well as the quadrature and cubature rules) is exact for certain
polynomial functions.
(b) The SIR is asymptotically exact compared to the quadrature or cubature
rules.
(c) The SIR has faster rate of convergence compared to the simple Monte Carlo
(MC) integration rule.
(d) In addition, the SIR inherently provides an error estimate of the integral
approximate value.
The properties (b) and (d) are crucial for the improved MSE estimation proposed
in the paper.
3.1
Stochastic Integration Rule
The Algorithm 1 illustrates the SIR for computing an approximate value of
the integral I(γ) = E[γ(x)] in (8).
3.2
Stochastic Integration Rule of Third and Fifth Degree
The Algorithm 1 requires speciﬁcation of the degree of the rule deﬁning the
points and weights. This section describes SIR of degrees 3 and 5, which were
derived in [7]. The higher the rule degree is, the higher the precision can be
expected, but also the computational complexity increases.
For the following rules assume that S is a decomposition3 of the CM P so
that P = SST . The following paragraph describes the rule prerequisites and the
points and weights itself are given in Table 1.
Degree 3 consists of p = 2nx + 1 points,
• a sample of a uniformly random orthogonal matrix Q of dimension nx×nx,
• a sample of a random variable ρ from the Chi distribution with (nx + 2)
degrees of freedom, i.e., ρ ∼Chi(nx + 2).
Degree 5 consists of p = 2n2
x + 6nx + 5 points,
• a sample of a uniformly random orthogonal matrix Q of dimension nx×nx,
• a sample of random variables r ∼Chi(2nx + 7) and q ∼Beta(nx + 2, 3
2),
• calculate ρ = r sin( 1
2 arcsin q) and δ = r cos( 1
2 arcsin q),
• calculate ˜vi = Qvi,
where vi are nx-simplex vertices (∀i : i ∈N, i ≤nx + 1),
• compute yk =
˜vi+˜vj
||˜vi+˜vj||,
where k = (i−1)(i−2)
2
+ j, (∀i, j : i, j ∈N, i ≤nx + 1, j ≤i −1).
3 For example, the Cholesky decomposition can be used.

428
J. Havl´ık et al.
Algorithm 1: Stochastic Integration Rule.
Step 1: Select a maximum number of iterations Nmax or an error tolerance ε.
Step 2: Set the current iteration number N = 0, the initial value of the integral
ˆI0(γ) = 0nγ×1, the initial variance of the integral ˆV0 = 0nγ×nγ, and set ζ0 = ¯x.
Step 3: Repeat (until N = Nmax or max( ˆVN) < ε2), where max( ˆVN) < ε2 denotes
the maximum over all elements of ˆVN.
(a) Set N = N + 1.
(b) Generate a set of p points {ζi}p
i=1 depending on ¯x and P with appropriate set
of weights {ωi}p
i=1 using a rule of a particular degree. See Sect. 3.2 for particular
degrees.
(c) Compute the following relations for the approximation of the integral value at
current iteration SIR denoted as SR, the updated integral value ˆIN(γ), and the
corresponding variance estimate ˆVN, i.e.,
SR =
p

i=1
ωiγ (ζi) ,
(9)
DN = SR −ˆIN−1(γ)
N
,
(10)
ˆIN(γ) = ˆIN−1(γ) + DN,
(11)
ˆVN = N −2
N
ˆVN−1 + DNDT
N.
(12)
Step 4: Once the stopping conditions are satisﬁed, the approximate value of the inte-
gral I(γ) is ˆIN(γ) and the estimate of the variance of the integral error I(γ) −ˆIN(γ)
is ˆVN.
3.3
Properties of SIR
This section takes a closer look at the Algorithm 1 and clariﬁes it. The points
and weights are determined by the selected rule degree. The relation (9) repre-
sents a single iteration of the integral evaluation. The total approximate value
of the integral is then given by an average over all iterations
ˆIN(γ) = 1
N
N

j=1
SR

ρ(j), δ(j), Q(j)
= 1
N
N

j=1
p

i=1
ω(j)
i γ

ζ(j)
i

,
(13)
where ω(j)
i
is the weight of the ith point ζ(j)
i
at the jth iteration, where both ω(j)
i
and ζ(j)
i
depend on the samples ρ(j), δ(j), and Q(j) of ρ, δ, and Q generated at the
jth iteration for the 5th degree SIR, or the sample of ρ(j) and Q(j) generated at
the jth iteration for the 3rd degree SIR. For the notational brevity the following

Stochastic Integration Filter with Improved State . . .
429
Table 1. SIR points and weights. Notation {·}i denotes the ith column where i goes
from 1 to number of points
number of
points
points ζ
weights ω
Degree 3
1
¯x
1 −nx
ρ2
2nx
¯x + {±ρSQ}i
1
2ρ2
Degree 5
1
¯x
1 −nx(ρ2+δ2−nx−2)
ρ2δ2
2nx + 2
¯x + {±ρ˜v}i
n2
x(7−nx)(nx+2−δ2)
2(nx+1)2(nx+2)ρ2(ρ2−δ2)
2nx + 2
¯x + {±δ˜v}i
n2
x(7−nx)(nx+2−ρ2)
2(nx+1)2(nx+2)δ2(ρ2−δ2)
n2
x + nx
¯x + {±ρy}i
2(nx−1)2(nx+2−δ2)
(nx+1)2(nx+2)ρ2(ρ2−δ2)
n2
x + nx
¯x + {±δy}i
2(nx−1)2(nx+2−ρ2)
(nx+1)2(nx+2)δ2(ρ2−δ2)
notation will be used
SR(j) △= SR

ρ(j), δ(j), Q(j)
.
(14)
The Algorithm 1 also computes an estimate ˆVN of the variance of the
integral value approximation ˆIN(γ). The error of ˆIN(γ) deﬁned as ˜IN(γ) =
I(γ) −ˆIN(γ) has zero mean and its CM is
E

˜IN(γ)˜IN(γ)T 
= var(˜IN) = var(ˆIN) = 1
N var(SR(j)).
(15)
Its estimate by the SIR given by (12) is
ˆVN = 1
N svar(SR(j)),
(16)
where svar(SR(j)) is the sample variance of SR(j) as
ˆVN = 1
N
1
N −1
N

j=1

SR(j) −ˆIN(γ)

SR(j) −ˆIN(γ)
T
.
(17)
Due to the nature of the SIR, the approximated integral value can be under-
stood as a random variable with the mean value given by the total integral
approximate value ˆIN(γ) and the CM given by the error estimate ˆVN.

430
J. Havl´ık et al.
3.4
Algorithm of SIF
The algorithm of the SIF shares the structure of the GF, which is given in
Algorithm 2.
The structure of the GF requires computation of the moments (23) – (27).
For the SIF, the moments are calculated4 using the SIR (Algorithm 1). The
moment estimates produced by the SIR will be further denoted as the original
quantity with an extra hat over it, i.e., for example ˆ¯zk|k−1 is an estimate of ¯zk|k−1
produced by the SIR of an arbitrary degree and stopping condition. Analogously,
ˆPxz
k|k−1 is an estimate of Pxz
k|k−1.
4
Improved Calculation of MSE by SIF
The variance ˆPxx
k|k of the SIF or the GFs in general can be understood as a ﬁlter
self-assessment of the estimate in terms of the MSE. However, due to the inaccu-
rate evaluation of the moments in the GF algorithm, this MSE estimate can be
also inaccurate. The aim of this section is to propose an improved calculation of
the MSE estimate by using the integral estimate variance ˆVN calculated by the
SIR. An arbitrary degree SIR and an arbitrary stopping condition are assumed.
The diﬀerences between the estimates calculated by the SIR and the original
quantities will be denoted by tilde, i.e., ˜zk|k−1
△= ¯zk|k−1 −ˆ¯zk|k−1 or analogously
˜Pxz
k|k−1
△= Pxz
k|k−1 −ˆPxz
k|k−1.
4.1
Theoretical Values of the MSE
The GFs compute the CM Pxx
k|k, which can be seen as an estimate of the MSE
of the state estimate,
E

(xk −¯xk|k)(xk −¯xk|k)T 
.
(28)
Now, the MSE will be calculated and compared with the CM ˆPxx
k|k calculated by
the SIF.
For convenience, consider the estimate ¯xk|k (20) as an aﬃne function of zk,
i.e.,
¯xk|k = Azk + b,
(29)
where
A = ˆPxz
k|k−1(ˆPzz)−1
k|k−1,
(30)
b = ¯xk|k−1 −Aˆ¯zk|k−1.
(31)
4 Note that the Algorithm 1 computes approximate value of the integral for given
vector functions γ, but Algorithm 2 requires calculation of the predictive CMs
(24), (25), and (27) for given matrix function. This can be resolved by column-wise
stacking of matrix functions to obtain a vector function.

Stochastic Integration Filter with Improved State . . .
431
Algorithm 2: Gaussian Filter.
Step 1: (initialization) Set the time instant k = 0 and deﬁne a priori initial condition
by its ﬁrst two moments
¯x0|−1 ≜E[x0] = ¯x0,
(18)
Pxx
0|−1 ≜E[(x0 −¯x0|−1)(x0 −¯x0|−1)T ] = P0.
(19)
Step 2: (ﬁltering, measurement update) The ﬁltering mean ¯xk|k and CM Pxx
k|k are
computed by means of
¯xk|k = ¯xk|k−1 + Kk(zk −¯zk|k−1),
(20)
Pxx
k|k = Pxx
k|k−1 −KkPzz
k|k−1KT
k ,
(21)
where
Kk = Pxz
k|k−1(Pzz
k|k−1)−1
(22)
is the ﬁlter gain and the measurement prediction ¯zk|k−1 is given by
¯zk|k−1 = E[zk|zk−1].
(23)
The predictive CMs Pxz
k|k−1 and Pzz
k|k−1 are computed as
Pzz
k|k−1 = E[(zk −¯zk|k−1)(zk −¯zk|k−1)T |zk−1]
(24)
= E[(hk(xk) −¯zk|k−1)(hk(xk) −¯zk|k−1)T |zk−1] + Σv
k,
Pxz
k|k−1 = E[(xk −¯xk|k−1)(zk −¯zk|k−1)T |zk−1]
= E[(xk −¯xk|k−1)(hk(xk) −¯zk|k−1)T |zk−1].
(25)
Step 3: (prediction, time update) The predictive mean ¯xk+1|k and CM Pxx
k+1|k are
given by
¯xk+1|k = E[xk+1|zk] = E[fk(xk)|zk],
(26)
Pxx
k+1|k = E[(xk+1 −¯xk+1|k)(xk+1 −¯xk+1|k)T |zk]
= E[(fk(xk) −¯xk+1|k)(fk(xk) −¯xk+1|k)T |zk] + Σw
k .
(27)
Let k = k + 1. The algorithm then continues by Step 2.
Note that for clarity purposes the subscript k|k −1 will be omitted for the
predictive moments.
Substituting (29) into (28) yields
E

(xk −¯xk|k)(xk −¯xk|k)T 
= E[(xk −Azk −b)(xk −Azk −b)T ]



E[ααT ]

432
J. Havl´ık et al.
= E

(xk −¯x −A(zk −¯z)) (xk −¯x −A(zk −¯z))T 



E[(α−¯α)(α−¯α)T ]
+ [¯x −A¯z −b][¯x −A¯z −b]T



¯α¯αT
.
(32)
After applying the expectation operator, the MSE is given by
E

(xk −¯xk|k)(xk −¯xk|k)T 
= Pxx −PxzAT



A
−APzx
  
B
+ APzzAT



C
+ [¯x −A¯z −b][¯x −A¯z −b]T



D
,
(33)
where the estimator-related expressions were labeled as A, B, C, and D. In the
following paragraphs, these expressions will be analyzed separately by substitut-
ing (30) and (31) into the terms:
A = −PxzAT = −Pxz(ˆPzz)−1 ˆPzx = −(˜Pxz + ˆPxz)(ˆPzz)−1 ˆPzx
= −˜Pxz(ˆPzz)−1(Pzx −˜Pzx) −ˆPxz(ˆPzz)−1 ˆPzx
= ˜Pxz(ˆPzz)−1 ˜Pzx −˜Pxz(ˆPzz)−1Pzx −ˆPxz(ˆPzz)−1 ˆPzx,
(34)
B = AT
(35)
C = APzzAT = ˆPxz(ˆPzz)−1(˜Pzz + ˆPzz)(ˆPzz)−1 ˆPzx
= ˆPxz(ˆPzz)−1 ˜Pzz(ˆPzz)−1 ˆPzx + ˆPxz(ˆPzz)−1 ˆPzx,
(36)
D = (¯x −A¯z −b)(¯x −A¯z −b)T = (Aˆ¯z −A¯z)(Aˆ¯z −A¯z)T
= ˆPxz(ˆPzz)−1˜z˜zT (ˆPzz)−1 ˆPzx.
(37)
Hence, (33) can be rewritten as
E

(xk −¯xk|k)(xk −¯xk|k)T 
= Pxx + A + B + C + D
= Pxx −ˆPxz(ˆPzz)−1 ˆPzx



ˆPxx
k|k
+2 ˜Pxz(ˆPzz)−1 ˜Pzx



E
−˜Pxz(ˆPzz)−1Pzx −Pxz(ˆPzz)−1 ˜Pzx



F
+ ˆPxz(ˆPzz)−1˜z˜zT (ˆPzz)−1 ˆPzx



G
+ ˆPxz(ˆPzz)−1 ˜Pzz(ˆPzz)−1 ˆPzx



H
= ˆPxx
k|k + 2E + F + G + H



MSEerr
k|k
,
(38)
which can be understood as the sum of the SIF approximate value ˆPxx
k|k of Pxx
k|k
and a sum of error terms 2E, F, G, and H (denoted as the MSEerr
k|k) caused by
numerical integration. The term MSEerr
k|k thus provides the error in the approxi-
mation of the MSE produced by the SIF.

Stochastic Integration Filter with Improved State . . .
433
4.2
Evaluation of Error Terms
Now, the variances ˆVN of the integral estimate error related to the integral
estimates ˆ¯z, ˆPxz, and ˆPzz are used to approximate the terms E, F, G and H
of the MSEerr
k|k. The variances of the integral estimate errors will be denoted as
ˆVˆ¯z
N, ˆV ˆPxz
N
, and ˆV ˆPzz
N
respectively. Note that the computation of pairs (ˆ¯z, ˆVˆ¯z
N),
(ˆPxz, ˆV ˆPxz
N
) and (ˆPzz, ˆV ˆPzz
N ) should be done in three separate runs of the SIR
algorithm, i.e., for diﬀerent SR(j), such that the mutual independence for fol-
lowing approximations is guaranteed.
The Term E. = ˜Pxz(ˆPzz)−1 ˜Pzx. The term E will be replaced by its expectation.
The idea of its evaluation stems from the fact, that ˜Pxz[˜Pxz]T is calculated as
ˆVPxz
N
using (17). Due to independence of ˆPzz on ˆVPxz
N
, the quantity ˆPzz can be
computed ﬁrst and later used for the evaluation of E as
E[E] = E[˜Pxz(ˆPzz)−1 ˜Pzx] ≈1
N
1
N −1
N

j=1

SR(j) −ˆPxz
(ˆPzz)−1
SRj −ˆPxzT
,
(39)
where the SR(j) approximates Pxz at jth iteration.
The Term F. = −˜Pxz(ˆPzz)−1Pzx−Pxz(ˆPzz)−1 ˜Pzx. This term will be approx-
imated by its expectation as well. The quantity Pxz is constant and ˜Pxz and
ˆPzz are mutually independent. Thus the expectation of F is zero, because the
expectation of ˜Pxz is zero, i.e.,
E[F] = E

−˜Pxz(ˆPzz)−1Pzx −Pxz(ˆPzz)−1 ˜Pzx
= −E
˜Pxz
(ˆPzz)−1Pzx −Pxz(ˆPzz)−1E
˜Pzx
= 0nx×nx.
(40)
The Term G. = ˆPxz(ˆPzz)−1˜z˜zT (ˆPzz)−1 ˆPzx. Again, the operator of expectation
will be applied. All quantities ˆPxz, ˆPzz and ˜z are mutually independent. Then,
E[˜z˜zT ] is the variance of ¯z, which can be approximated by ˆVˆ¯z
N, i.e.,
E[G] = ˆPxz(ˆPzz)−1E[˜z˜zT ](ˆPzz)−1 ˆPzx ≈ˆPxz(ˆPzz)−1 ˆVˆ¯z
N(ˆPzz)−1 ˆPzx.
(41)
The Term H. = ˆPxz(ˆPzz)−1 ˜Pzz(ˆPzz)−1 ˆPzx. Unfortunately, the term cannot
be replaced by its expectation as ˆPzz and ˜Pzz are clearly dependent. Here, the
approach replacing ˜Pzz by its interval estimate will be adopted. The quantity
˜Pzz is assumed to have multivariate Gaussian distribution with zero mean and
matrix of variances given by ˆV ˆPzz
N . The error ˜Pzz in H can be replaced by a
matrix where its each element is a 3-σ interval estimate of the corresponding
element of ˜Pzz. This matrix of 3-σ interval estimates will be denoted as ˜Pzz.
Then, the term H can be approximated as
H ≈ˆPxz(ˆPzz)−1˜Pzz(ˆPzz)−1 ˆPzx.
(42)

434
J. Havl´ık et al.
Hence, the true MSE can be estimated by a 3-σ interval estimate taking into
account all errors of numerical integration being neglected so far. This interval
is given by substituting estimates (39)–(42) into (38), i.e.,
E

(xk −¯xk|k)(xk −¯xk|k)T 
= ˆPxx
k|k + MSEerr
k|k
≈ˆPxx
k|k + 1
N
1
N −1
N

j=1

SR(j) −ˆPxz
(ˆPzz)−1 
SR(j) −ˆPxzT
+ ˆPxz(ˆPzz)−1 ˆVˆ¯z
N(ˆPzz)−1 ˆPzx + ˆPxz(ˆPzz)−1˜Pzz(ˆPzz)−1 ˆPzx.
(43)
The relation (43) represents the improved estimate of the MSE provided by
the SIF. This improvement is facilitated by the SIR, which in addition to the
approximate integration also calculates variance of integral error ˆVN. Note that
this quantity is not inherently provided by any other GF.
5
Numerical Illustrations
This section illustrates the improved MSE estimate computed by the SIF using
two static examples.
5.1
Scalar Example
A simple scalar measurement equation is assumed
z = exp(x) + v,
(44)
where v ∼N{0, R} is the measurement noise with zero mean Gaussian distri-
bution and its variance is R = 10−4, the random variable x is Gaussian with
x ∼N{x; 0.1, P}. In the example, various values of P ∈[0.1, 1] will be con-
sidered with the step of 0.01. For evaluation of the MSE and its corresponding
interval estimates by the SIF, M = 5×106 MC simulations were used. The SIFs
(degree 3 and 5) were run with a ﬁxed number of iterations Nmax = 10. The
MSEs of the SIFs were computed by
MSE = 1
M
M

i=1
(ˆ¯xSIF
i
−xi)2,
(45)
where xi denotes actual value of the state at ith MC run and ˆ¯xSIF
i
denotes state
estimate produced by a SIF at ith MC run.
Figure 1 details the improved MSE estimates by the SIF of degree 3 (left)
and degree 5 (right) for two diﬀerent values of predictive variances P = 0.1
and P = 0.8. The MSE estimates aﬀected by the approximations from the
previous sections are in the form of interval estimates and were depicted as
lower and upper bound histograms. Note that the MSE is positive and interval
lower bounds lower than zero should be projected to zero, but for the sake of

Stochastic Integration Filter with Improved State . . .
435
-0.02
-0.01
0
0.01
0.02
0.03
0.04
MSE
0
20
40
60
80
100
120
140
160
probability
MSE
E[Pxx]
lower bound
upper bound
2.5
3
3.5
4
4.5
5
5.5
6
6.5
7
MSE
10-3
0
500
1000
1500
2000
2500
probability
MSE
E[Pxx]
lower bound
upper bound
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
MSE
0
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
probability
MSE
E[Pxx]
lower bound
upper bound
-0.2
-0.1
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
MSE
0
1
2
3
4
5
6
7
8
9
probability
MSE
E[Pxx]
lower bound
upper bound
Fig. 1. Scalar example: Histograms of 3-σ MSE estimates obtained with the SIF of
degree 3 (left ﬁgures) and 5 (right ﬁgures) for P = 0.1 (top ﬁgures) and P = 0.8 (bottom
ﬁgures). The MSE values of SIFs (blue plus marks) and mean values of variances
provided by the SIFs (red cross marks) are displayed
brevity they remained as computed to illustrate the properties of the interval
estimate. In general, the MSE bounds for SIF degree 5 are much more narrow
and close to each other compared to the degree 3 SIF. The increased precision of
the higher degree of the rule reduces the variance of the integral error estimate.
Figure 2 shows the number of interval estimates of the MSE which did not
contain the MSE value. Note that for smaller values of P the percentage of inter-
val estimates not covering the true MSE is much lower than could be expected
if the term ˜Pzz (approximated by ˜Pzz in (43)) is Gaussian.
5.2
Bearing-Only Tracking Example
In the second considered example, a 2 dimensional state with a scalar measure-
ment is considered. A typical example is bearing-only tracking (BOT) with the
measurement function
z = arctan

x2
x1

+ v,
(46)

436
J. Havl´ık et al.
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
P
0.2
0.4
0.6
0.8
1
1.2
1.4
% of miss
SIF deg. 3 bounds
SIF deg. 5 bounds
Fig. 2. Scalar example: Percentage of interval estimates not covering the true MSE for
various values of P obtained with the SIFs of degree 3 and 5
where the state [x1, x2]T represents a position of a object, which is tracked. A pri-
ori information about the state is [x1, x2]T ∼N{[20, 15]T , P}. In the example,
various CMs P = i × I2 : i = 11, 12, ..., 20 are considered.5 The measurement
noise v is assumed to be Gaussian with v ∼N{0.4 × 10−4}. The scenario is
evaluated for 5 × 106 independent MC runs for diﬀerent degrees of the SIF. The
trace of the MSEs of the SIFs was computed by
MSE = 1
M
M

i=1

(ˆ¯xSIF
1,i −x1,i)2 + (ˆ¯xSIF
2,i −x2,i)2
,
(47)
where x1,i and x2,i denote actual value of the state x1 or x2 at ith MC run and
ˆ¯xSIF
1,i and ˆ¯xSIF
2,i denote state estimate ˆx1 or ˆx2 produced by a SIF at ith MC run.
Figure 3 shows the histograms of the interval estimates for SIFs of degree
3 (left ﬁgures) and degree 5 (right ﬁgures) for two diﬀerent values of predic-
tive CMs. For a comparison the the MSEs and the mean values of CMs traces
produced by the SIFs are added.
Finally, Fig. 4 depicts the percentage of interval estimates not covering the
true MSE. For selected values of P were bounds of the improved MSE estimate
computed by SIF of degree 3 violated in a very low number of occurrences. The
percentage of runs that contained the true MSE is almost constant at 99.98 %
5 Note that I2 denotes 2 × 2 identity matrix.

Stochastic Integration Filter with Improved State . . .
437
10.4
10.6
10.8
11
11.2
11.4
11.6
11.8
12
12.2
12.4
MSE
0
0.5
1
1.5
2
2.5
3
3.5
probability
MSE
E[trace(Pxx)]
lower bound
upper bound
11.35
11.4
11.45
11.5
11.55
MSE
0
5
10
15
20
25
30
35
40
45
probability
MSE
E[trace(Pxx)]
lower bound
upper bound
15.5
16
16.5
17
17.5
18
18.5
19
19.5
20
20.5
MSE
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
probability
MSE
E[trace(Pxx)]
lower bound
upper bound
17.5
17.6
17.7
17.8
17.9
18
MSE
0
2
4
6
8
10
12
14
probability
MSE
E[trace(Pxx)]
lower bound
upper bound
Fig. 3. BOT example: Histograms of 3-σ MSE estimates obtained with the SIF of
degree 3 (left ﬁgures) and 5 (right ﬁgures) for P = 11 × I2 (top ﬁgures) and P =
17 × I2 (bottom ﬁgures). The MSE values of SIFs (blue plus marks) and mean values
of variances provided by the SIFs (red cross marks) are displayed
being much better than what could be expected for 3-σ interval of multivariate
Gaussian distribution. In case of the SIF of degree 5, we faced numerical and
computational problems computing the true MSE. It was necessary to compute
it with greater precision, than employed numerical techniques allow. For this
reason the trajectory of violated percentage is not constant. Despite this fact,
the results are satisfying.
For both illustrations the true MSE was successfully estimated by the interval
estimates provided by the SIF. This information can be readily used for self-
assessment of the error of the state estimates provided by the ﬁlter.

438
J. Havl´ık et al.
22
24
26
28
30
32
34
36
38
40
trace(P)
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
% of miss
SIF deg. 3 bounds
SIF deg. 5 bounds
Fig. 4. BOT example: Percentage of interval estimates not covering the true MSE for
various values of P obtained with the SIFs of degree 3 and 5
6
Conclusions
The paper dealt with the Bayesian state estimation of nonlinear stochastic
dynamic systems with special focus on the Gaussian ﬁlters. In particular, the
stochastic integration ﬁlter with the state and measurement prediction moments
calculated by the stochastic integration rule was treated. Besides the moment
value given by the integral, the rule also provides a covariance matrix of the
integral value error.
In the paper propagation of errors originating in numerical computation of
the moment integrals in the algorithm of the Gaussian ﬁlters was analyzed. Based
on the covariance matrices of the integral, error corrections of state estimate
conditional variance were proposed. Hence, the corrected conditional variance is
closer to the MSE of the state estimate. The improved MSE estimate provided
by the ﬁlter can be used for better self-assessment of the ﬁlter capabilities in
terms of the state estimate error.
Within the numerical illustrations part of the paper, the improved MSE
calculation for the SIF of degrees 3 and 5 was tested in two examples. The
results pictured a very low rate of the true MSEs violating the improved interval
MSE estimates. For certain scenarios, it was even lower than was expected within
the approximations.
The interesting part of the discoveries made in this papers is that it opens a
wide area for a future work. Incorporating such information into predictive step
of the GF algorithm is a great challenge to be solved.

Stochastic Integration Filter with Improved State . . .
439
Acknowledgements. This work was supported by the Czech Science Foundation,
project no. GA 16-19999J.
References
1. Anderson, B.D.O., Moore, J.B.: Optimal Filtering. Prentice Hall, New Jersey
(1979)
2. Arasaratnam, I., Haykin, S.: Cubature Kalman ﬁlters. IEEE Trans. Autom. Control
54(6), 1254–1269 (2009)
3. Arasaratnam, I., Haykin, S., Elliott, R.J.: Discrete-time nonlinear ﬁltering algo-
rithms using Gauss-Hermite quadrature. Proc. IEEE 95(5), 953–977 (2007)
4. Bhaumik, S., et al.: Cubature quadrature Kalman ﬁlter. IET Signal Process. 7(7),
533–541 (2013)
5. Doucet, A., De Freitas, N., Gordon, N.: An introduction to sequential Monte Carlo
methods. Sequential Monte Carlo Methods in Practice. Springer, Berlin (2001)
6. Dun´ık, J., Straka, O., ˇSimandl, M.: Stochastic integration ﬁlter. IEEE Trans.
Autom. Control 58(6), 1561–1566 (2013)
7. Genz, A., Monahan, J.: Stochastic integration rules for inﬁnite regions. SIAM J.
Sci. Comput. 19(2), 426–439 (1998)
8. Havl´ık, J., Straka, O., Dun´ık, J., Ajgl, J.: On nonlinearity measuring aspects of
stochastic integration ﬁlter. In: Proceedings of the 13th International Conference
on Informatics in Control, Automation and Robotics. Lisbon, Portugal (2016)
9. Ito, K., Xiong, K.: Gaussian ﬁlters for nonlinear ﬁltering problems. IEEE Trans.
Autom. Control 45(5), 910–927 (2000)
10. Jia, B., Xin, M., Cheng, Y.: Sparse-grid quadrature nonlinear ﬁltering. Automatica
48(2), 327–341 (2012)
11. Julier, S.J., Uhlmann, J.K.: Unscented ﬁltering and nonlinear estimation. IEEE
Rev. 92(3), 401–421 (2004)
12. Kramer, S.C., Sorenson, H.W.: Recursive Bayesian estimation using piece-wise
constant approximations. Automatica 24(6), 789–801 (1988)
13. Nørgaard, M., Poulsen, N.K., Ravn, O.: New developments in state estimation for
nonlinear systems. Automatica 36(11), 1627–1638 (2000)
14. Ristic, B., Arulampalam, S., Gordon, N.: Beyond the Kalman ﬁlter: Particle ﬁlters
for tracking applications. Artech House (2004)
15. Sorenson, H.W.: On the development of practical nonlinear ﬁlters. Inf. Sci. 7, 230–
270 (1974)

Author Index
A
Ahrabi, Sima, 410
Ajgl, Jiˇrí, 423
Akhmedova, Shakhnaz, 73
Akhrif, Ouassima, 91
Alamir, Mazen, 3
Alhashimi, Anas, 342
Andreff, Nicolas, 117
B
Beckmann, Daniel, 367
Briese, Gunnar, 175
C
Chesi, Graziano, 30
Crespo, Martin, 230
D
Dagen, Matthias, 367
Dahroug, Bassem, 117
Desdouits, Chloé, 3
Donaire, Alejandro, 230
Duník, Jindˇrich, 423
E
Ezin, Eugène C., 133
F
Francisco, Junior Mbala, 55
Frese, Udo, 385
Fritsche, Paul, 175
G
Gattringer, Hubert, 190, 207
Giroudeau, Rodolphe, 3
Gröll, Lutz, 323
Guillemard, Franck, 55
Gustafsson, Thomas, 342
H
Havlík, Jindˇrich, 423
K
Keller, Hubert B., 323
Khusainov, Ramil, 293
Kleinschmidt, Sebastian P., 153
Klimchik, Alexandr, 293
Kueppers, Simon, 175
L
Laleye, Fréjus A. A., 133
Lavigne, Loic, 55
Lippiello, Vincenzo, 230, 256
Loreti, Paola, 410
M
Magid, Evgeni, 293
Matthes, Jörg, 323
Merveillaut, Mathieu, 55
Motamed, Cina, 133
Müller, Andreas, 190, 207
N
Noury, Agnieszka, 55
O
Ortmaier, Tobias, 367
© Springer International Publishing AG 2018
K. Madani et al. (eds.), Informatics in Control, Automation and Robotics,
Lecture Notes in Electrical Engineering 430, https://doi.org/10.1007/978-3-319-55011-4
440

Index
441
P
Pape, Claude, 3
Pierobon, Giovanni, 342
R
Reiter, Alexander, 190
Ruggiero, Fabio, 230, 256
S
Sabatier, Jocelyn, 55
Sari, Gholam-Reza, 91
Satici, Aykut C., 256
Saydy, Lahcen, 91
Schüthe, Dennis, 385
Semenkin, Eugene, 73
Serra, Diana, 256
Shen, Tiantian, 30
Siciliano, Bruno, 230, 256
Stanovov, Vladimir, 73
Stöger, Christoph, 207
Straka, Ondˇrej, 423
T
Tamadazte, Brahim, 117
V
Varagnolo, Damiano, 342
Vellucci, Pierluigi, 410
W
Wagner, Bernardo, 153, 175
Waibel, Patrick, 323
Wang, Jingyu, 277
Wenk, Felix, 385
Z
Zhang, Cheng, 277
Zhang, Ke, 277

