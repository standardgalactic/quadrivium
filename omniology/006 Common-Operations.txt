© 2019 MathByte Academy

len(s)
Cardinality and Membership
à number of elements in s
(cardinality of s)
in, not in
à x in s
à tests if x is in the set s
à like dictionary keys, use equality (==)
not identity (is)
membership testing in sets is fast
membership testing in a list of tuple is slow (in comparison)
à hash table lookup
à linear scan
à but sets have more memory overhead than lists or tuples
à tradeoff – speed vs memory
à we'll look at this in code
© 2019 MathByte Academy

Adding Elements
lists have ordering
à append
à insert
sets have no ordering
à add
s.add('python')
à mutates the set
© 2019 MathByte Academy

Removing Elements
lists have ordering
à can remove element by position
sets have no ordering
à cannot use position
à del l[1]
à can remove specific element
à l.remove(30)
l = [10, 20, 30]
à [10, 30]
à [10]
à can remove specific element
s = {'a', 'b', 'c'}
s.remove('b')
à {'a', 'c'}
s.remove('z')
à KeyError exception
to avoid KeyException
s.discard('a')
s.discard('z')
s à {'c'}
s à {'c'}
s.pop()
à removes and returns an arbitrary element
à KeyError if set is empty
s.clear()
à removes all elements from set
à mutates the set
© 2019 MathByte Academy

Code
© 2019 MathByte Academy

