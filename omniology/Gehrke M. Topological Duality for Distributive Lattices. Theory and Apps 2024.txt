Topological 
Duality for 
Distributive 
Lattices
Theory and 
Applications
Moi Gehrke and 
Sam van Goal

Cambridge Tracts in Theoretical Computer Science 61
Topological Duality for Distributive Lattices
Introducing Stone-Priestley duality theory and its applications to logic and theoretical computer 
science, this book equips graduate students and researchers with the theoretical background necessary 
for reading and understanding current research in the area.
After giving a thorough introduction to the algebraic, topological, logical, and categorical aspects of 
the theory, the book covers two advanced applications in computer science, namely in domain theory 
and automata theory. These topics are at the forefront of active research seeking to unify semantic 
methods with more algorithmic topics in finite model theory. Frequent exercises punctuate the text, 
with hints and references provided.
MAI GEHRKE is directeur de recherches in computer science at the French National Centre for 
Scientific Research (CNRS) working at the department of mathematics of Universite Cote d’Azur in 
Nice. Her main contributions are in Stone duality, canonical extensions, and applications in logic and 
theoretical computer science.
SAM VAN GOOL is maitre de conferences at the Research Institute for Foundations of Computer 
Science (IRIF) at Universite Paris Cite. His main contributions are in duality theory and logic in 
mathematics and computer science.

CAMBRIDGE TRACTS IN THEORETICAL COMPUTER SCIENCE 61
Editorial Board
S. Abramsky, Department of Computer Science, University of Oxford
P. H. Aczel, School of Computer Science, University of Manchester
Y. Gurevich, Microsoft Research
J. V. Tucker, Department of Computer Science, Swansea University
Titles in the series
A complete list of books in the series can be found at
www.cambridge.org/computer- science.
Recent titles include the following:
31. 
T. F. Melham Higher Order Logic and Hardware Verification
32. 
R. Carpenter The Logic of Typed Feature Structures
33. 
E. G. Manes Predicate Transformer Semantics
34. 
F. Nielson & H. R. Nielson Two-Level Functional Languages
35. 
L. M. G. Feijs & H. B. M. Jonkers Formal Specification and Design
36. 
S. Mauw & G. J. Veltink (eds) Algebraic Specification of Communication Protocols
37. 
V. Stavridou Formal Methods in Circuit Design
38. 
N. Shankar Metamathematics, Machines and Godel’s Proof
39. 
J. B. Paris The Uncertain Reasoner’s Companion
40. 
J. Desel & J. Esparza Free Choice Petri Nets
41. 
J.-J. Ch. Meyer & W. van der Hoek Epistemic Logic for AI and Computer Science
42. 
J. R. Hindley Basic Simple Type Theory
43. 
A. S. Troelstra & H. Schwichtenberg Basic Proof Theory
44. 
J. Barwise & J. Seligman Information Flow
45. 
A. Asperti & S. Guerrini The Optimal Implementation of Functional Programming Languages
46. 
R. M. Amadio & P.-L. Curien Domains and Lambda-Calculi
47. 
W.-P. de Roever & K. Engelhardt Data Refinement
48. 
H. Kleine Buning & T. Lettmann Propositional Logic
49. 
L. Novak & A. Gibbons Hybrid Graph Theory and Network Analysis
50. 
J. C. M. Baeten, T. Basten & M. A. Reniers Process Algebra: Equational Theories of Communicating 
Processes
51. 
H. Simmons Derivation and Computation
52. 
D. Sangiorgi & J. Rutten (eds) Advanced Topics in Bisimulation and Coinduction
53. 
P. Blackburn, M. de Rijke & Y. Venema Modal Logic
54. 
W.-P. de Roever et al. Concurrency Verification
55. 
Terese Term Rewriting Systems
56. 
A. Bundy et al. Rippling: Meta-Level Guidance for Mathematical Reasoning
57. 
A. M. Pitts Nominal Sets
58. 
S. Demri, V. Goranko & M. Lange Temporal Logics in Computer Science
59. 
B. Jacobs Introduction to Coalgebra
60. 
S. Mihov & K. U. Schulz Finite-State Technology

Topological Duality for Distributive Lattices
Theory and Applications
MAI GEHRKE
CNRS and Universite Cote d’Azur
SAM VAN GOOL
Universite Paris Cite
W Cambridge
UNIVERSITY PRESS

■ CAMBRIDGE
WF UNIVERSITY PRESS
Shaftesbury Road, Cambridge CB2 8EA, United Kingdom
One Liberty Plaza, 20th Floor, New York, NY 10006, USA
477 Williamstown Road, Port Melbourne, VIC 3207, Australia
314-321, 3rd Floor, Plot 3, Splendor Forum, Jasola District Centre, New Delhi - 110025, India
103 Penang Road, #05-06/07, Visioncrest Commercial, Singapore 238467
Cambridge University Press is part of Cambridge University Press & Assessment, a department 
of the University of Cambridge
We share the University’s mission to contribute to society through the pursuit of 
education, learning and research at the highest international levels of excellence.
www.cambridge.org
Information on this title: www.cambridge.org/9781009349697
DOI: 10.1017/9781009349680
© Mai Gehrke and Sam van Gool 2024
This publication is in copyright. Subject to statutory exception 
and to the provisions of relevant collective licensing agreements, 
no reproduction of any part may take place without the written 
permission of Cambridge University Press & Assessment.
First published 2024
Printed in the United Kingdom by CPI Group Ltd, Croydon CR0 4YY
A catalogue record for this publication is available from the British Library
A Cataloging-in-Publication data record for this book is available from the Library of Congress
ISBN 978-1-009-34969-7 Hardback
Cambridge University Press & Assessment has no responsibility for the persistence 
or accuracy of URLs for external or third-party internet websites referred to in this 
publication and does not guarantee that any content on such websites is, or will 
remain, accurate or appropriate.

Contents
Preface 
page vii
Acknowledgments 
xv
1 
Order and Lattices 
1
1.1 
Preorders, Partial Orders, and Suprema and Infima 
1
1.2 
Lattices 
9
1.3 
Duality for Finite Distributive Lattices 
18
2 
Topology and Order 
29
2.1 
Topological Spaces 
29
2.2 
Topology and Order 
37
2.3 
Compact Ordered Spaces 
42
3 
Priestley Duality 
51
3.1 
Prime Filters and Ideals 
51
3.2 
Priestley Duality 
61
3.3 
Boolean Envelopes and Boolean Duality 
76
4 
Duality Methods 
86
4.1 
Free Distributive Lattices 
87
4.2 
Quotients and Subs 
96
4.3 
Unary Operators 
112
4.4 
Modal Algebras and Kripke Completeness 
121
4.5 
Operators of Implication Type 
130
4.6 
Heyting Algebras and Esakia Duality 
139
4.7 
Boolean Closure and Alternating Chains 
149
5 
Categorical Duality 
154
5.1 
Definitions and Examples of Categories 
154
5.2 
Constructions on Categories 
158
5.3 
Constructions inside Categories 
173

vi
Contents
5.4 
Priestley Duality Categorically 
188
6 
Omega-Point Duality 
196
6.1 
Spectral Spaces and Stone Duality 
196
6.2 
The Omega-Point Adjunction 
200
6.3 
The Omega-Point Duality 
205
6.4 
Duality for Spaces of Relations and Functions 
211
7 
Domain Theory 
227
7.1 
Domains and Hoffmann-Lawson Duality 
230
7.2 
Dcpos and Domains That Are Spectral 
246
7.3 
Bifinite Domains 
256
7.4 
Domain Theory in Logical Form 
265
8 
Automata Theory 
273
8.1 
The Syntactic Monoid as a Dual Space 
274
8.2 
Regular Languages and Free Profinite Monoids 
292
8.3 
Equations, Subalgebras, and Profinite Monoids 
309
8.4 
Open Multiplication 
325
Bibliography 
330
Notation 
339
Index 
346

Preface
This book is a course on Stone-Priestley duality theory, with applications to logic 
and the foundations of computer science. Our target audience includes both graduate 
students and researchers in mathematics and computer science. The main aim of the 
book is to equip the reader with the theoretical background necessary for reading 
and understanding current research in duality and its applications. We aim to be 
didactic rather than exhaustive; however, we do give technical details whenever they 
are necessary for understanding what the field is about.
Distributive lattice structures are fundamental to logic, and thus appear through­
out mathematics and computer science. The reason for this is that the notion of a 
distributive lattice is extremely basic: It captures a language containing as its only 
primitives the logical operators “or,” “and,” “true,” and “false.” Distributive lattices 
are to the study of logic what rings and vector spaces are to the study of classical 
algebra. Moreover, distributive lattices also appear in, for example, ring theory and 
functional analysis.
The mathematical kernel that makes duality theory tick is the fact that the structure 
of a lattice can be viewed in three equivalent ways. A distributive lattice is all of 
the following:
(a) 
a partially ordered set satisfying certain properties regarding upper and lower 
bounds of finite sets;
(b) 
an algebraic structure with two idempotent monoid operations that interact 
well with each other; and
(c) 
a basis of open sets for a particular kind of topological or order-topological 
space.
The first part of the book will define precisely the vague notions in this list (“certain 
properties,” “interact well,” “a particular kind of”), and will prove that these are 
indeed three equivalent ways of looking at distributive lattices. The correspondence 
between algebraic and topological structure in the last two items of the list can be 

viii
Preface
cast in a precise categorical form, and is then called a dual equivalence or simply 
duality. This duality identifies an exciting, almost magical, and often highly useful 
intersection point of algebra and topology.
Historically, Stone showed in the 1930s that distributive lattices are in a dual­
ity with spectral spaces: a certain class of topological spaces with a non-trivial 
specialization order, which are also the Zariski spectra of rings. Stone’s duality 
for distributive lattices is especially well known in the more restrictive setting of 
Boolean algebras, obtained by adding an operator “not” to the lattice signature, 
which satisfies the usual rules of logic: de Morgan’s laws and excluded middle. The 
restriction of Stone’s duality to Boolean algebras shows that they are in a duality 
with compact Hausdorff zero-dimensional spaces. While the spaces associated to 
Boolean algebras are better known than the slightly more general ones associated 
to distributive lattices, the latter are vastly more versatile, having as continuous 
retracts, among others, all compact Hausdorff spaces, including connected spaces 
such as the unit interval of the reals.
Nevertheless, Stone’s duality for distributive lattices was for at least 30 years seen 
by many as a lesser sibling of his duality for Boolean algebras, at least partly due 
to the fact that the spaces that figure in it are not Hausdorff, and the appropriate 
functions between the spaces are not all the continuous ones. Priestley’s seminal 
work in the 1970s lifted this obstacle, by giving a first-class role to the specialization 
order that figures in Stone’s spectral spaces. Priestley reframed Stone’s duality as 
one between distributive lattices and certain partially ordered topological spaces, 
now called Priestley spaces. The first goal in this book is to build up the necessary 
mathematics to prove Priestley’s duality theorem, which we do in Chapter 3;we 
also show there how it easily specializes to the case of Boolean algebras. Building 
up to this first main result, Chapters 1 and 2 will teach the foundations of order 
theory and topology that we rely on in the rest of the book.
A unique feature of this book is that, in addition to developing general duality 
theory for distributive lattices, we also show how it applies in a number of areas 
within the foundations of computer science, namely, modal and intuitionistic logics, 
domain theory, and automata theory. The use of duality theory in these areas 
brings to the forefront how much their underlying mathematical theories have in 
common. It also prompts us to upgrade our treatment of duality theory with various 
enhancements that are now commonly used in state-of-the-art research in the field. 
Most of these enhancements make use of operators on a distributive lattice: maps 
between lattices that only preserve part of the lattice structure.
The simplest kind of operator is a map between lattices that respects the structure 
of “and” and “true,” but not necessarily “or” and “false.” If this notion is understood 
as analogous to a linear mapping in linear algebra, then it is natural to also consider 
more general binary, ternary, and n-ary operators on lattices, which respect the 

Preface
ix
structure of “and” and “true” in each coordinate, as long as the remaining coordi­
nates are fixed. The theory of lattices with operators, and dualities for them, was 
developed in the second half of the twentieth century, roughly in two main chunks. 
First, in the 1950s, by Jonsson and Tarski, in the case of Boolean algebras, with 
immediate applications to relation algebra, and the same theory was used heavily a 
little later and very successfully for modal logic in the form of Kripke’s semantics. 
However, until the end of the 1980s, the duality theory for distributive lattices with 
additional operations developed in the form of a great number of isolated case- 
by-case studies. Starting with the work of Goldblatt, and also of Jonsson and this 
book’s first author, the general theory of distributive lattices with additional opera­
tions came into a mature, more usable, form by the 1990s. This theory is developed 
in Chapter 4, which also contains the first applications of duality theory, to free 
distributive lattices, quotients and subspaces, implication-type operators, Heyting 
algebras, and Boolean envelopes.
In the development of the first four chapters of this book, we keep the use 
of category theory to a minimum. In Chapter 5, we then set the results of the 
earlier chapters in the more abstract and general framework of category theory. 
This development then also allows us to show how Priestley’s duality fits well in a 
more general framework for the interaction of topology and order, which had been 
developed by Nachbin shortly before. In Chapter 6, we show how the various classes 
of topological spaces with and without order, introduced by Stone, Priestley, and 
others, all relate to each other, and how they are in duality with distributive lattices 
and their infinitary variant, frames.
Chapters 7 and 8 contain two more modern applications of duality theory to 
theoretical computer science, namely to domain theory and to automata theory, 
respectively. The domain theory that we develop in Chapter 7 is organized around 
three separate results: Hoffmann-Lawson duality; the characterization of those 
dcpos and domains, respectively, that fall under Stone duality; and Abramsky’s 
celebrated 1991 Domain Theory in Logical Form paper.
The duality-theoretic approach to automata theory that we develop in Chapter 8 
originates in work linking profinite methods in automata theory with duality theory 
(Gehrke et al., 2008). It is organized around a number of related results, namely: 
finite syntactic monoids can be seen as dual spaces, and the ensuing effectivity of 
this powerful invariant for regular languages; the free profinite monoid is the dual of 
the Boolean algebra of regular languages expanded with residuation operations and, 
more generally, topological algebras on Boolean spaces are duals of certain Boolean 
algebras extended by residual operations. As an extended application example, we 
use duality to give a profinite equational characterization for the class of piecewise 
testable languages; and we end by discussing a characterization of those profinite 
monoids for which the multiplication is open.

x
Preface
How to Use This Book
This is a textbook on distributive lattices, spectral spaces, and Stone and Priestley 
dualities as they have developed and are applied in various areas at the intersection 
of algebra, logic, and theoretical computer science. Our aim is to get in a fairly full 
palette of duality tools as directly and quickly as possible, then to illustrate and 
further elaborate these tools within the setting of three emblematic applications: 
semantics of propositional logics; domain theory in logical form; and the theory 
of profinite monoids for the study of regular languages and automata. The text is 
based on lecture notes from a 50-hour course in the Master Logique Mathematique 
et Fondements de I’Informatique at Universite Paris 7, which ran in the winters of 
2013 and 2014. The fact that it is based on notes from a course means that it reaches 
its goals while staying as brief and to the point as possible. The other consequence 
of its origin is that, while it is fully a mathematics course, the applications we aim at 
are in theoretical computer science. The text has been expanded a bit beyond what 
was actually said in the course, reaching research monograph level by the very end 
of the last two, Chapters 7 and 8. Nevertheless, we have focused on keeping the 
spirit of a lean and lively textbook throughout, including only what we need for the 
applications, and often deferring more advanced general theory to the application 
chapter where it becomes useful and relevant.
While the original course on which the book is based covered the majority of all 
the chapters of the book, there are several other options for its use. In particular, 
a basic undergraduate course on lattices and duality could treat just Chapters 1 
through 3 and possibly selected parts of 4, 5, and/or 6. The applications in the 
second part are fairly independent and can be included as wanted, although the 
domain theory material in Chapter 7 requires at least skeletal versions of Chapter 
5, and Chapter 6 in its entirety.
The first part, Chapters 1 through 6, is a graduate-level “crash course” in duality 
theory as it is practiced now. Chapter 1 introduces orders and lattices, and in 
particular the distributive lattices that we will be concentrating on, as well as the 
finite case of Stone duality, where topology is not yet needed. Chapter 2 introduces 
the topological side of the dualities. In this chapter, we elaborate the interaction 
between order and topology, which is so central to the study of spaces coming from 
algebraic structures. For this purpose we have bent our philosophy of minimum 
content somewhat by introducing the class of stably compact spaces and Nachbin’s 
equivalent class of compact ordered spaces. We believe that this setting provides the 
right level of generality for understanding the connection between Stone’s original 
duality for spectral spaces and Priestley duality. The class of stably compact spaces, 
being the closure of spectral spaces under continuous retracts, is also a more robust 
setting than spectral spaces for a number of further applications that we do not cover 

Preface
xi
in this book, such as continuous domain theory and duality for sheaf representations 
of algebras. The basic mathematical content of Priestley duality is given in Chapter 
3. Chapter 4 introduces the most important general methods of modern duality 
theory: duality for additional operations and sub-quotient duality, which then allows 
us to immediately give first applications to propositional logics. Chapter 5 then 
introduces categorical concepts such as adjunctions, dualities, filtered colimits, 
and cofiltered limits, which play a fundamental role in duality theory. This allows 
us to give a full categorical account of Priestley duality by the end of the chapter. 
Chapter 6 treats the Omega-Point duality and Stone’s original duality for distributive 
lattices and makes the relationship between these dualities and Priestley’s version 
clear.
The duality theory developed in the first six chapters of the book is applied to 
two different parts of theoretical computer science in the last two chapters, which 
provide an entry into research-level material on these topics. These two chapters 
are independent from each other, and have indeed traditionally been somewhat 
separate in the literature, but our treatment here shows how both topics in fact can 
be understood using the same duality-theoretic techniques that we develop in the 
first part of the book. When using this book for a course, a lecturer can freely choose 
material from either or both of these chapters, according to interest. Chapter 7,on 
domain theory, contains a duality-theoretic exposition of the solutions to domain 
equations, a classical result in the semantics of programming languages. Chapter 
8 develops a duality theory for algebraic automata theory, and shows in particular 
how finite and profinite monoids can be viewed as instances of the dual spaces of 
lattices with operators that we study in this book.
We have given some bibliographic references throughout the text. We want to 
emphasize here that these references are not in any way meant to give an exhaustive 
bibliography for the vast amount of existing research in duality theory. They are 
rather intended as useful entry points into the research literature appropriate for 
someone learning this material, who will then find many further references there. 
Furthermore, at the end of several chapters, we have added a small number of 
additional notes giving technical pointers pertaining to specific topics discussed 
there - again, we do not mean to imply exhaustivity. When we introduce special or 
less standard notation, we use “Notation” blocks, which are occasionally numbered 
when we need to refer back to them later. The book ends with a listing of the 
most-used notations and an index of concepts.
In each chapter, all numbered items follow one and the same counter, with 
the exception of exercises, which follow a separate numbering, indicating not only 
chapter but also section. On the topic of exercises: this book contains many of them, 
varying greatly in difficulty. In earlier chapters, many of the exercises are routine 
verifications, but necessary practice for a learner who wants to master the material.

xii
Preface
Especially in later chapters, there are exercises that could be viewed as small 
research projects, although we refrain from stating open problems as exercises: for 
the less obvious exercises, we have included hints and references where available.
Comparison to Existing Literature and Innovative Aspects
The first part of this book, Chapters 1 through 6, covers quite classical material 
and may be compared to existing textbooks. The closest are probably Distributive 
Lattices (Balbes and Dwinger, 1975) and Introduction to Lattices and Order (Davey 
and Priestley, 2002). Another classical gentle introduction to the field, but focusing 
more on point-free topologies and frame theory than we do here, is Topology via 
Logic (Vickers, 1989). Of these, Balbes and Dwinger (1975) is probably the closest 
in spirit to our treatment, as it gets to the duality quickly and then applies it. However, 
that book’s applications to algebras of propositional logic focus on varieties that 
are less central today. Davey and Priestley’s textbook has been very successful and 
has in particular managed to attract a theoretical computer science readership to 
these topics. However, it focuses more on the lattices and order per se and the 
duality is covered only as one of the final crowning chapters. Davey and Priestley’s 
book is therefore an excellent way in to ours, and we recommend it as supplemental 
reading in case students need additional details or to build up mathematical maturity. 
The textbooks Introduction to Boolean Algebras (Givant and Halmos, 2008) and 
Duality Theories for Boolean Algebras with Operators (Givant, 2014) are also 
relevant but are of course restricted to the Boolean setting. There are also a number 
of classical references in lattice theory by Gratzer, the most recent versions being 
Lattice Theory: Foundation (Gratzer, 2011) and General Lattice Theory (Gratzer, 
2003), both of which contain material on duality theory and its applications to 
lattice theory.
Here we aim to get the dualities in place as soon as possible and then use them. 
Where we differ the most from the existing books within this first part is with our 
emphasis on the interaction between order and topology in Chapter 2, and in placing 
Priestley duality within the wider context of category theory (Chapter 5) and Omega­
point duality (Chapter 6). Chapter 2 provides a textbook-level didactic account of the 
interaction between topology and order culminating with the equivalence between 
Nachbin’s compact-ordered spaces and stably compact spaces. In Chapter 4 we 
develop duality theory methods for analyzing the structure of distributive lattices 
and operators on them. All of these topics have become central in research in 
recent decades but are so far difficult to access without delving in to the specialized 
literature.
Perhaps the most important omission of this book is the theory of canonical 
extensions, which was central to the previously mentioned work of Jonsson and 

Preface
xiii
others, in addition to duality. While this theory is very close to the hearts of both 
authors of this book, and closely related to duality theory, this book is not about 
that, and canonical extensions thus do not play a big role in this book, at least not 
explicitly. Still, we will occasionally make reference to canonical extensions where 
appropriate. Along with and closely related to this omission, we decided to take 
a point-set rather than a point-free approach to the topics of this book. Point-free 
approaches focus on the algebraic side of duality and thus avoid the point-set world 
of topology, which inherently involves non-constructive principles. Duality is in a 
sense the justification for the point-free approach since it makes the link between 
the algebraic and the point-set worlds. In this book we remain fully anchored in 
the set-theoretic approach to topology, in particular making use of the axiom of 
choice as necessary. We do this as itis more easily accessible for a general audience, 
and because our end applications in denotational semantics and profinite algebras in 
automata theory are, in their currently practiced form, focused on point-set topology. 
That being said, our focus on duality shows the way and familiarizes the reader with 
the dual, point-free approach, thus making them ready to embrace this approach. In 
this direction, one of our hopes with this book is that it will entice some readers to 
learn about canonical extensions and related point-free techniques. We believe the 
technique of canonical extensions to be complementary to, and at least as important 
as, duality, but so far less well established in the literature.
Many research monographs include similar material to that of the first part of 
this book, but are not explicitly targeted at readers who are first learning about the 
field, while this is a primary aim of our book. Classical such monographs, closest 
in content to the first part of this book, are Stone Spaces (Johnstone, 1986) and A 
Compendium of Continuous Lattices (Gierz et al., 1980), re-edited as Continuous 
Lattices and Domains (Gierz et al., 2003). More recently, the monograph Spectral 
Spaces (Dickmann et al., 2019) studies the same class of spaces as we do in this 
book, but comes from a ring-theoretic perspective and emphasizes less the order- 
theoretic aspects. The monograph Non-Hausdorff Topology and Domain Theory 
(Goubault-Larrecq, 2013) is close in spirit to our treatment in Chapter 2, especially 
in its treatment of stably compact spaces, and also addresses a theoretical computer 
science audience. A difference with our treatment here is that Goubault-Larrecq 
(2013) is focused on non-Hausdorff topologies and therefore does not treat the 
(Hausdorff) patch topology as central, as we do here. Related to our Chapter 6 is 
the monograph Frames and Locales (Picado and Pultr, 2012) focused on frames 
and point-free topology, and Chapter 6 of this book can be used as a preparation 
for jumping into that work.
The applications to domain theory and automata theory are treated in Chapters 
7 and 8, respectively. These two applications, and in particular the fact that we 
treat them in one place, as applications of a common theory, are perhaps the most 

xiv
Preface
innovative and special aspects of this book. Domain theory is the most celebrated 
application of duality in theoretical computer science and our treatment is entirely 
new. Automata theory is a relatively new application area for duality theory and 
has never been presented in textbook format before. More importantly, both topics 
are at the forefront of active research seeking to unify semantic methods with more 
algorithmic topics in finite model theory. While previous treatments remained 
focused on the point of view of domains/profinite algebra, with duality theory 
staying peripheral, a shared innovative aspect of the presentations of these topics in 
this book is that both are presented squarely as applications of duality.
Finally, a completely original contribution of this book, which emerged during 
its writing, precisely thanks to our treatment of the two topics as an application 
of a common theory, is the fact that a notion we call “preserving joins at primes” 
turns out to be central in both the chapter on domain theory and in that on automata 
theory. This notion was introduced in the context of automata theory and topological 
algebra in Gehrke (2016); its application to domain theory is new to this book and 
reflects a key insight of Abramsky’s Domain Theory in Logical Form. We believe 
this point to be an exciting new direction for future research in the field that we 
hope some readers of this book will be inspired to take up.

Acknowledgments
We thank Cambridge University Press, in particular David Tranah and Anna 
Scriven, for their trust and help with publishing this book. We thank Angela Valente 
for her very careful copy-editing job, and Vinithan Sethumadhavan for managing 
the production part of the publication process.
We would also like to thank all our colleagues and students who have inspired 
and encouraged us to complete this book. More specifically, many have used and 
commented on early versions and their comments have been immensely useful. 
Samson Abramsky, Jorge Almeida, Achim Jung, Jean Goubault-Larrecq, Jean- 
Eric Pin, and Benjamin Steinberg have all provided us with invaluable advice and 
support on several of the later parts of the book; their reading of parts of our 
manuscript at various stages and their very detailed and useful feedback have been 
of great help. We would also like to thank Jim de Groot and Luca Reggio, who both 
proofread the manuscript very carefully, and also Celia Borlido and Victor Iwaniack 
who made many useful comments. Jeremie Marques has made vital mathematical 
contributions to the book, also acknowledged specifically in Chapter 8.
We are very grateful for the friendship, comments, and support that we have re­
ceived from those already mentioned above, as well as from many other colleagues 
and co-authors with whom we have discussed and worked on several of the topics 
discussed in this book, specifically Clemens Berger, Guram Bezhanishvili, Nick 
Bezhanishvili, Mikoiaj Bojanczyk, Thomas Colcombet, Dion Coumans, Mirna 
Daamonja, Marcel Erne, Wesley Fussner, Silvio Ghilardi, Charles Grellois, Serge 
Grigorieff, John Harding, Tomas Jakl, Andre Joyal, Alexander Kurz, Vincenzo 
Marra, Paul-Andre Mellies, George Metcalfe, Alessandra Palmigiano, Daniela 
Petrisan, Hilary Priestley, Carlos Simpson, Howard Straubing, Yde Venema, and 
Glynn Winskel. We are also very grateful to the many students who attended our 
lectures and worked with the material in this book. This book is primarily written 
for them.

xvi 
Acknowledgments
We dedicate this book to the memory of Bernhard Banaschewski, Bjarni Jonsson, 
and Klaus Keimel.
Finally, we thank our families for their love and support.

1
Order and Lattices
In this chapter, we first introduce basic notions from order theory: preorders, partial 
orders, and lattices. We then zoom in on distributive lattices. In the finite case, 
we prove from first principles a duality theorem, which is a blueprint for the more 
advanced duality theorems that follow later in this text.
1.1 Preorders, Partial Orders, and Suprema and Infima
A binary relation < on a set P is called
• reflexive if p < p for all p e P,
• transitive if p < q < r implies p < r for all p, q, r e P,
• anti-symmetric if p < q and q < p imply p = q for all p, q e P,
• a preorder if it is reflexive and transitive, and
• a partial order if it is reflexive, transitive, and anti-symmetric.
A preordered set is a tuple (P, <) with < a preorder on the set P. A poset (short 
for partially ordered set) is a pair (P, <) with < a partial order on the set P. Two 
elements p and q are comparable in a preorder < if at least one of p < q and 
q < p holds, and incomparable otherwise. The adjective “partial” in “partial order” 
refers to the fact that not all elements in a partial order are comparable. A preorder 
is called total or linear if any two of its elements are comparable. A total order 
or linear order or chain is a total preorder which is moreover anti-symmetric. A 
poset is called an anti-chain if no distinct elements are comparable. The strict part 
of a partial order is the relation < defined by p < q if, and only if, p < q and 
p q. Notice that, if we have access to equality, then to specify a partial order <, 
it suffices to specify its strict part <, from which we can then define p < q if, and 
only if, p < q or p = q. An equivalence relation is a preorder < which is moreover 
symmetric, that is, p < q implies q < p for all p, q e P. In this context, comparable 
elements are called equivalent.

2
1 Order and Lattices
Figure 1.1 The “diamond” poset (D, <).
Example 1.1 The Hasse diagram of the “diamond” poset D = {a, b, c, d}, with 
partial order < whose strict part is {(a, b), (a, c), (a, d), (b, d), (c, d)} is depicted in 
Figure 1.1. This partial order is not linear, because we have neither b < c nor c < b.
Notice that, in the above example, even though a < d , we did not draw an edge 
between a and d in the Hasse diagram. This is due to the fact that a < d can be 
inferred by transitivity from the order relations a < b and b < d, which are depicted 
in the diagram. Thus, we only need to draw the “covering” relations in the diagram.
We now give the general definition of Hasse diagram.
Definition 1.2 For elements p and q of a poset P, we say that q covers p if p < q 
and there is no r e P such that p < r < q. We denote this relation by p -< q. 
The elements of a poset are represented in the Hasse diagram as nodes. An edge 
is drawn from a node p to a node q whenever q covers p. In addition, in order not 
to have to indicate the direction of edges by arrows, the convention is that moving 
up along an edge in the diagram corresponds to moving up in the order. Thus, in 
particular, points drawn at the same height are incomparable.
All finite posets are represented by their Hasse diagrams, as are some infinite 
ones. However, for most infinite posets, the Hasse diagram does not suffice for 
capturing the order. For example, the usual order on the unit interval has an empty 
covering relation.
There are several interesting classes of maps between preordered sets. (We use 
the word “map” interchangably with “function” throughout this book.) Let (P, <P) 
and (Q, <q) be preordered sets and f: P ^ Q a function. The function f is called
• order preserving or monotone if p <P p' implies f (p) <q f (p') forall p, p' e P,
• order reflecting if f (p) <q f (p') implies p < p' for all p, p' e P,
• an order embedding if it is both order preserving and order reflecting, and
• an order isomorphism if it is order preserving and has an order-preserving inverse.
Note that order embeddings between posets are always injective, but not all injective 
order-preserving maps between posets are order embeddings! See Exercise 1.1.4(a). 
A function f between preordered sets is an order isomorphism if, and only if, f is 

1.1 Preorders, Partial Orders, and Suprema and Infima
3
a surjective order embedding, see Exercise 1.1.4(b). If (P, <P) is a preordered set 
and P' is a subset of P, then the inherited order on P' is the intersection of <P with 
P' X P', that is, it is such that the inclusion map i: P' ^ P is an order embedding.
An elementary but important operation on preorders is that of “turning upside 
down.” If P is a preorder, we denote by Pop the opposite of P, that is, the preorder 
with the same underlying set as P, but with preorder <' defined by p <’ q if, and 
only if, q < p, where < denotes the original preorder on P. A function f: P ^ Q is 
called order reversing or antitone if it is order preserving as a function f: Pop ^ Q, 
that is, if for all p, p' e P, if p <P p', then f (p') <q f (p). An anti-isomorphism 
between P and Q is, by definition, an isomorphism between Pop and Q.
Notation 1.3 Throughout this book, when f: X ^ Y and g: Y ^ Z are functions, 
we write g ◦ f for the functional composition of f and g, to be read as “g after f ,” 
that is, g ◦ f is the function X ^ Z defined by (g ◦ f)(x) = g(f (x)) for all x e X. 
We will sometimes omit the symbol ◦ and just write gf. In Notation 4.37, we will 
introduce a slightly different notation for relational composition, as is common in 
the literature.
Example 1.4 For any natural number n, the finite set n := {0, 1,...,n - 1} is 
totally ordered by the usual ordering of natural numbers.
Example 1.5 The sets of natural numbers N, integers Z, rational numbers Q, and 
real numbers R, with the usual orders, are total orders.
Example 1.6 On the set of natural numbers N, define a relation < by
p < q ^^ p = 0 or (p 0 and q 0).
Note that < is a preorder, but not a partial order. We define the poset reflection of this 
preorder as follows (see Exercise 1.1.5 for the general idea). Consider the quotient 
of N by the equivalence relation that identifies all non-zero numbers; denote this 
quotient by P, and equip it with the least preorder such that the quotient map N ^ P 
is order preserving. Then, Pis a poset, and any other order-preserving function from 
N to a poset (Q, <) factors through it.
Example 1.7 LetFbe a set of formulas in some logic with a relation of derivability 
f between formulas of F. More concretely, F can be the set of sentences in a 
first-order signature and f derivability with respect to some first-order theory. 
The relation f is rarely a partial order, as there are usually many syntactically 
different formulas which are mutually derivable in the logic. The poset reflection 
(see Exercise 1.1.5) consists of the F-equivalence classes of formulas in F.
Example 1.8 Denote by 2* the set of finite sequences over the two-element set 
2 = {0, 1}. The binary operation of concatenation is defined by juxtaposition of 

4
1 Order and Lattices
sequences. That is, given sequences p, r e 2* of length n and m, respectively, pr is 
the sequence of length n + m whose ith entry is the ith entry of p if i < n and is the 
(i - n)th entry of r otherwise.
(a) 
For p, q e 2* , define
p <P q ^^ there exists r e 2* such that pr = q.
Note that <P is a partial order on 2* (see Exercise 1.1.2). The poset (2*, <P) 
is called the full infinite binary tree. The partial order <P on 2* is called the 
prefix order.
(b) 
For p = (p1,...,pn) and q = (q1,...,qm) e 2* , define p <lex q if, and only 
if, p is a prefix of q or, at the least index such that pi qi, we have pi < qi in 
2. Note that <lex is a total order on 2* (see Exercise 1.1.3). The partial order 
<lex is called the lexicographic or dictionary order on 2* .
We define the fundamental notions of supremum and infimum.
Definition 1.9 Let (P, <) be a preorder. Let S c P.
• An element 50 of P is called a lower bound of S if 50 < 5 for all 5 e S.
• An element 5 1 of P is called an upper bound of S if 5 < 5 1 for all 5 e S.
• A lower bound 50 of S is called an infimum or greatest lower bound of S if, for 
any lower bound 5' of S, 5' < 50.
• An upper bound 5 1 of S is called a supremum or least upper bound of S if, for 
any upper bound 5' of S, 5 1 < 5'.
In the special case where S = 0, an element 50 which is a supremum of S is called 
a bottom or minimum element of P, meaning that 50 < 5 for all 5 e S. Similarly, an 
element 51 which is an infimum of S is called a top or maximum element of P.
In a poset, any set has at most one infimum and at most one supremum (see 
Exercise 1.1.6). If a unique infimum of a subset S exists, it is denoted by /\ S and 
is also known as the meet of S. The supremum of S, if it exists uniquely, is denoted 
by V S and is known as the join. In the case where S = {a, b}, we also write a A b 
and a V b, and if S = {a 1,..., an} we write a 1 V • • • V an and a 1 A • • • A an. The 
bottom element, if it exists, is denoted by ± or 0, and the top element by T or 1. If 
S is a subset of a poset P, we denote the set of maximal elements in S by max (S); 
that is,
max(S) := {5 e S | for all 5' e P, if 5 < 5' and 5' e S, then 5' = 5}.
Similarly, the set of minimal elements in S is denoted by min(S) . In contrast to 
maximal elements ofa set, the supremum ofa set does not need to belong to the set 
itself. Note that non-empty subsets of a poset may not have any minimal or maximal 

1.1 Preorders, Partial Orders, and Suprema and Infima
5
elements; see the examples below. Also, postulating the existence of maximal or 
minimal elements in certain posets is related to choice principles; see our discussion 
of Zorn’s lemma, Lemma 2.7, in Chapter 2.
Remark 1.10 There are subtle but important differences between the words “max­
imum,” “maximal,” and “supremum.” An element is maximal in a subset S of a 
poset if there is no other element in S that lies strictly above it, while it is a maximum 
element in S if all other elements of S lie below it. Note that in a totally ordered 
set, the concepts maximal and maximum are equivalent, but not in general. Finally, 
an important distinction between these two concepts and that of supremum is that, 
for an element to be a supremum, it is not a requirement that it lies in the set itself, 
while this is part of the definition for maximal and maximum elements, see Exercise 
1.1.7. For this reason, the supremum of a set S depends on the ambient poset, see 
Exercise 1.2.6.
Infima and suprema may fail to exist. There are three different situations in which 
this can happen: a set can either have no lower (or upper) bounds at all; or its set of 
lower (or upper) bounds has incomparable maximal (or minimal) elements; or for 
infinite sets, the set of upper bounds may be non-empty but not have all such above 
a minimal upper bound (or a non-empty set of lower bounds not all witnessed by 
maximal lower bounds).
We illustrate the above ideas with three examples.
Example 1.11 In the poset (P, <) whose Hasse diagram is depicted in Figure 1.2, 
the set S = {a, b} does not have an infimum, because c and d are incomparable 
maximal lower bounds of S, and hence neither is a maximum lower bound.
a
cM
b
d
Figure 1.2 The “butterfly” poset (P, <).
Example 1.12 In the set N of natural numbers with its usual total order, any 
subset has an infimum, which is in fact a minimum, but the only subsets having a 
supremum are the finite subsets. For any finite subset, the supremum is in fact a 
maximum.
Example 1.13 In the set Q of rational numbers with its usual total order, the subset 
{n | n e N >1} has an infimum, 0, but it does not have a minimum. Furthermore 
{q e Q | q < V2} has upper bounds but no least upper bound.

6
1 Order and Lattices
We end this section by introducing the important concepts of adjunction and 
Galois connection between preordered sets.
Definition 1.14 Let (P, <P) and (Q, <q) be preordered sets, and let f: P ^ Q 
and g: Q ^ P be functions. The pair (f, g) is called an adjunction, with f the left 
or lower adjoint and g the right or upper adjoint, provided that for every p e P and 
q e Q,
f (p) <q q if, and only if, p <p g(q).
An adjunction between Pop and Q is called a Galois connection or contravariant 
adjunction.
The notion of adjunction between (pre)orders is very important and will come 
into play in many places in this book. It is also a useful precursor to the concept 
of adjunction between categories that we will encounter later in Definition 5.15. 
Exercises 1.1.8 and 1.2.14 collect some important basic facts about adjunctions 
between preorders, which will be used throughout the book.
Example 1.15 Let f: Z ^ Q be the order embedding which sends each integer 
x e Z to itself, regarded as a rational number. The map f has a right adjoint g, 
which sends each rational y e Q to its floor, that is, g(y) is the largest integer below 
y . The map f also has a left adjoint, which sends a rational y e Q to its ceiling, that 
is, the smallest integer above y .
Contravariant adjunctions occur particularly often in mathematics since, as we 
will see in the following example, they arise naturally any time we have a binary 
relation between two sets.
Example 1.16 Fix a relation R c X x Y between two sets. For any a c X and 
b c Y, define the sets u (a) c Y and t (b) c X by
u(a) := {y e Y | for all x e a, xRy}, 
f,(b) := {x e X | for all y e b, xRy}.
The pair of functions u : P (X) P (Y): f, is a Galois connection between the posets 
(P (X), c) and (P(Y), c), that is, for any a c X and b c Y,wehaveb c u(a) if, 
and only if, a c j(b).
The name Galois connection refers to the work of Galois in the theory of rings 
and fields in which the central object of study is a Galois connection induced by the 
binary relation between elements and automorphisms of a field given by the element 
being fixed by the automorphism. While this example is historically important, it 
is not so central to the topics of this book. So if you are not familiar with Galois 
theory, we provide the following two classical examples, in order theory and logic, 
respectively. First, in the special case when R is a preorder on a set X, u(a) is the 
set of common upper bounds for the elements of a, and f,(b) is the set of common 

1.1 Preorders, Partial Orders, and Suprema and Infima 
7
lower bounds for the elements of b. Second, the Galois connection between theories 
and model classes studied in logic is also a special case of the Galois connection 
(u, {), as follows. Suppose that S is a set of structures, F is a set of logical formulas, 
and suppose we are given a relation of “interpretation,” |= from S to F , where, for 
M e S and ^ e F, the relation M = ^ is read as “^ holds in M.” Then, in the 
Galois connection of Example 1.16, u sends a set of models a to its theory, that 
is, the set of formulas that hold in every model of a, and f, sends a set of formulas 
b to its class of models, that is, the collection of models in which every formula 
from b holds.1 Finally, not only are Galois connections obtained from a binary 
relation as in Example 1.16 omnipresent in mathematics, but, as we will see later, 
by topological duality theory, all Galois connections between distributive lattices 
are of this form; see in particular Proposition 5.39 and Exercise 5.4.1.
Exercises for Section 1.1
Exercise 1.1.1 Sketch the Hasse diagrams for the preorders described in Examples 
1.4, 1.6, and 1.8(a).
Exercise 1.1.2 For any set A, let A * denote the set of finite sequences of elements 
of A. Prove that the relation <P on A * defined by
u <P v ^^ there exists w e A * such that u w = v
is a partial order.
Note. This is a special case of the opposite of the so-called Green preorder <R, 
which exists on any monoid.
Exercise 1.1.3 Consider the relation <lex on 2* defined in Example 1.8(b).
(a) 
Prove that <lex is a total order.
(b) 
Prove that, even though 2* is infinite, the total order <lex is the transitive 
closure of its covering relation. That is, show that p <lex q if, and only if, 
there are r0,...,rn with p -< r0 -< ...rn -< q.
Exercise 1.1.4 (a) Give an example of an injective order-preserving map be­
tween posets which is not an order embedding.
(b) 
Prove that a surjective order embedding between posets is an order isomor­
phism.
Exercise 1.1.5 If (P, <) is a preordered set, define
p = q ^^ p < q and q < p.
(a) 
Prove that = is an equivalence relation on P.
1 Often, in logic, S is not a set but a proper class of models. In this case, the Galois connection is between 
subclasses of the class of models and subsets of the set of formulas.

8
1 Order and Lattices
(b) 
Prove that there is a well-defined smallest partial order < on the quotient set 
P/= such that the quotient map f: P ^ P/= is order preserving.
(c) 
Prove that, for any order-preserving g: P ^ Q with Q partially ordered, there 
exists a unique order-preserving g: P/= ^ Q such that g ◦ f = g.
The partial order P/= defined in this exercise is called the poset reflection of the 
preorder P.
Exercise 1.1.6 Let (P, <) be a preorder and S c P.
(a) 
Prove that if 50 and 50 are both infima of S, then 50 < 50 and 50 < 50.
(b) 
Conclude that in a partial order, any set has at most one supremum and at 
most one infimum.
Exercise 1.1.7 Draw a graph with three nodes labeled “maximum,” “maximal,” 
and “supremum,” and directed edges denoting that the existence of one implies the 
existence of the other. Do any more implications hold in finite posets? In totally 
ordered sets? In finite totally ordered sets?
Exercise 1.1.8 Let (P, <P) and (Q, <q) be preordered sets and f: P Q: g a 
pair of maps between them.
(a) 
Prove that ( f, g) is an adjunction if, and only if, f and g are order preserving 
for every p e P, p <p gf (p), and for every q e Q, f g(q) <q q.
For the rest of this exercise, assume that ( f, g) is an adjunction.
(b) 
Prove that f g f (p) = f (p) and g f g (q) = g (q) for every p e P and q e Q. 
(c) Conclude that, in particular, ifP and Q are posets, then fgf = f andgfg = g. 
(d) Prove that, if P is a poset, then for any p e P, gf(p) is the minimum element 
above p that lies in the image of g.
(e) 
Formulate and prove a similar statement to the previous item about f g(q), for 
q e Q.
(f) 
Prove that, if P and Q are posets, then f is the unique lower adjoint of g and, 
symmetrically, g is the unique upper adjoint of f.
(g) 
Prove that, for any subset S c P, if the supremum of S exists, then f ( V S) is 
the supremum of the direct image f [S].
(h) 
Prove that, for any subset T c Q, if the infimum of T exists, then g( /\ T) is 
the infimum of g[T].
In words, the last two items say that lower adjoints preserve existing suprema and 
upper adjoints preserve existing infima. In Exercise 1.2.14 of the next section we 
will see that a converse to this statement holds in the context of complete lattices.
Exercise 1.1.9 Let f: P Q : g be an adjunction between posets. Show that f is 
injective if, and only if, g is surjective, and that f is surjective if, and only if, g is 
injective. Hint. Part (c) of Exercise 1.1.8 can be useful here.

1.2 Lattices
9
1.2 Lattices
A (bounded) lattice is a partially ordered set L in which every finite subset has a 
supremum and an infimum. In fact, to be a lattice, it is sufficient that the empty set 
and all two-element sets have suprema and infima (see Exercise 1.2.1). A complete 
lattice C is a partially ordered set in which every subset has a supremum and an 
infimum. In fact, for a partially ordered set to be a complete lattice, it is sufficient 
that every subset has a supremum (see Exercise 1.2.2).
An interesting equivalent definition of lattices is the following. A lattice is a 
tuple (L, v, A, ±, T), where v and A are binary operations on L (i.e., functions 
L x L ^ L), and ± and T are elements of L such that the following axioms hold:
(a) 
the operations v andA are commutative, that is, a v b = b v a anda A b = b A a 
for all a, b e L;
(b) 
the operations v and A are associative, that is, (a v b) v c = a v (b v c) and 
(a A b) A c = a A (b A c) for all a, b, c e L;
(c) 
the operations v and A are idempotent, that is, a v a = a and a A a = a for 
all a e L;
(d) 
the absorption laws a A (a v b) = a and a v (a A b) = a hold for all a, b e L; 
and
(e) 
the element ± is neutral for v and the element T is neutral for A, that is, 
± v a = a and T A a = T for all a e L.
Given a lattice (L, v, A, ±, T) according to this algebraic definition, define
a <L b ^^ a A b = a. 
(1.1)
Then the relation <L is a partial order on the set L which makes L into a lattice 
according to the order-theoretic definition, and the binary infimum and supremum 
are given by A and v, respectively. Conversely, given a lattice (L, <) according to 
the order-theoretic definition, it is easy to check that the operations of binary join 
(v), binary meet (A), and the elements T and ± make L into a lattice according to 
the algebraic definition, and that < is given by (1.1), which is then also equivalent 
to a v b = b. The somewhat tedious but instructive Exercise 1.2.4 asks you to verify 
the claims made in this paragraph.
A semilattice is a structure (L, •, 1) where • is a commutative, associative, and 
idempotent binary operation, and 1 is a neutral element for the operation •. The 
operation • can then either be seen as the operation A for the partial order defined 
by a < b if, and only if, a • b = a, or as the operation v for the opposite partial 
order defined by a < b if, and only if, a • b = b. When (L, v, A, ±, T) is a lattice, 
we call (L, v, ±) and (L, A, T) the join-semilattice and meet-semilattice reducts of 
L, respectively.
Remark 1.17 Many authors use the word “lattice” for posets with all binary 
infima and suprema, and then “bounded lattices” are those that also have T and ±.

10
1 Order and Lattices
We require that all finite infima and suprema exist. Note that the non-empty finite 
infima and suprema are guaranteed to exist as soon as binary ones do (Exercise 
1.2.1), while the empty infimum and supremum are just the T and ±, respectively. 
In duality theory bounds are very convenient, if one does not have them, one should 
simply add them. Accordingly, we suppress the adjective “bounded” and use just 
“lattice” for the bounded ones and we will only specify when once in a while we 
have an unbounded lattice, sublattice, or lattice homomorphism.
Homomorphisms, Products, Sublattices, Quotients
We briefly recall a few basic algebraic notions that we will need. For more 
information, including detailed proofs of these statements, we refer the reader 
to a textbook on universal algebra, such as, for example, Burris and Sankap- 
panavar (2000) and Wechler (1992). A function f: L ^ M between lattices 
is called a lattice homomorphism if it preserves all the lattice operations; that 
is, f (±L) = ±M, f (Tl) = Tm, and f (a Vl b) = f (a) Vm f (b), f (a Al 
b) = f (a) AM f (b) for all a, b e L. Lattice homomorphisms are always or­
der preserving, and injective lattice homomorphisms are always order-embeddings 
(see Exercise 1.2.7). We also call an injective homomorphism between lattices a 
lattice embedding. Similarly, bijective lattice homomorphisms are always order 
isomorphisms, and we call a bijective homomorphism between lattices a lattice 
isomorphism.
A simple induction (Exercise 1.2.1) shows that, if a function f: L ^ M between 
lattices preserves ± and v, then it preserves all finite joins; we say that such a 
function preserves finite joins, or also that it is a homomorphism for the join- 
semilattice reducts. Note that the statement that f preserves finite joins does not 
in general imply anything about the preservation of any other suprema that may 
exist in L. As a rule, whenever we write “f preserves joins,” even though we may 
sometimes omit the adjective “finite,” we still only refer to preservation of finite 
suprema, as these are generally the only suprema that exist in a lattice. If we want to 
signal that f preserves other suprema than just the finite ones, then we will always 
take care to explicitly say so. Symmetrically, a function f: L ^ M that preserves 
T and A is called finite-meet-preserving, and the same remarks about the adjective 
“finite” apply here.
The Cartesian product of an indexed family (Li)ieI of lattices is the lattice 
structure on the product set L := ieI Li given by pointwise operations; for 
example, (±L)i = ±L and (Tl)i = TLi for every i e I, and if a = (ai)iei, 
b = (bi)ieI e L, then (a V b)i = ai VLi bi and (a A b)i = ai ALi bi. In this 
way, L becomes a lattice, whose partial order is also the product order, that is, 
a <L b ^^ ai <Li bi for every i e I, and each projection map ni: L 
Li is 

1.2 Lattices
11
a surjective homomorphism (see Exercise 1.2.9). A sublattice of a lattice M is a 
subset M' such that ± and T are in M' and for every a, b e M', both a V b and a A b 
are in M'. In this case, M' is a (bounded) lattice in its own right, and the inclusion 
map i: M' ^ M is a lattice homomorphism. Also, the direct image or forward 
image, denoted f [L], of any lattice homomorphism f: L ^ M is a sublattice of 
the codomain, and if f is moreover an order embedding, then the domain lattice 
L is isomorphic to this direct image f [L]. If L, L' are lattices and there exists a 
surjective homomorphism f: L L', then we say that L' is a homomorphic image 
of L. An unbounded sublattice of a lattice M is a subset M' such that, for any 
a, b e M', both a V b and a A b in M'. Note that an unbounded sublattice may or 
may not have a top and bottom element, and even if it does, these need not coincide 
with the top and bottom elements of M. What we call sublattice here is sometimes 
called bounded sublattice, and the term sublattice then more generally refers to a 
subset closed under binary, but not necessarily empty, joins and meets. We mostly 
consider sublattices with bounds in this book, unless noted explicitly otherwise.
A subset L' of a lattice L may fail to be a sublattice of L, even if it is a bounded 
lattice when equipped with the partial order inherited from L : The value of a join 
or meet may change when moving to a subset. In a similar vein, if L is a complete 
lattice, then a sublattice L' of L may be a complete lattice in itself, while it is 
not necessarily the case that the supremum of any subset of L' coincides with the 
supremum of the same subset in L. These are important distinctions; Exercise 1.2.6 
suggests examples that show the difference. When L is a complete lattice, we will 
reserve the term complete sublattice for a subset L' of L such that, for any subset S 
of L', the supremum of S in L and the infimum of S in L both also belong to L'. 
The above remarks then imply that a sublattice which is a complete lattice may fail 
to be a complete sublattice.
A congruence on a lattice L is an equivalence relation ft c L x L such that, for 
any two pairs (a, a') e ft and (b, b') e ft, the pairs (a V b, a' V b') and (a A b, a 'A b') 
are both also in ft.Ifft is a congruence on a lattice L, then the quotient set L/ft 
carries a unique lattice structure which makes the quotient map p: L ^ L/ft 
into a lattice homomorphism. Indeed, the operations [a]# V [b]# := [a V b]# 
and [a]# A [b]# := [a A b]# give a well-defined lattice structure on the set L/ft, 
with bottom element [±]^ and top element [T]^ .If f: L ^ M is any lattice 
homomorphism, the kernel of f is the equivalence relation defined by
ker f := {(a, a') e L x L | f (a) = f (a')},
which is a congruence on L with the property that the quotient lattice L/ker f is 
isomorphic to the direct image of f. In particular, if f: L M is a surjective 
homomorphism, then the codomain M is isomorphic to L/ker f. In other words, 
the homomorphic images of L are, up to isomorphism, all the quotients of L.

12
1 Order and Lattices
These facts together are known as the first isomorphism theorem for lattices: Any 
lattice homomorphism f: L ^ M can be factored as a surjective homomorphism 
followed by an embedding. Indeed, we have that f = e ◦ p, where p: L ^ L/ker f 
is the quotient, and e: L/ker f ^ M is the embedding of the direct image of f.
Distributivity
A lattice L is called distributive if
for all a, b, c e L, 
a A (b V c) = (a A b) V (a A c), 
(1.2)
or, equivalently,
for all a, b, c e L, a V (b A c) = (a V b) A (a V c). 
(1.3)
The proof that (1.2) and (1.3) are indeed equivalent is left as Exercise 1.2.8. In 
particular, a lattice L is distributive if, and only if, its opposite Lop is distributive; 
we say that distributivity is a self-dual property. Also, products, sublattices, and 
homomorphic images of distributive lattices are again distributive; this is an imme­
diate consequence of the fact that distributivity is described equationally, and can 
also be proved directly (see Exercise 1.2.9 for the product case).
An easy inductive argument shows that in a distributive lattice L, we have:
for any a e L and F c L finite, a A F = 
(a A b),
and, again equivalently,
for any a e L and F c L finite, a V F = 
(a V b) .
If L is a complete lattice, we say that the Join Infinite Distributive law (JID) holds 
in L if
for any a e L and S c L, a A S = 
(a A b). 
(1.4)
A complete lattice in which the JID law holds is called a frame. We will encounter 
frames in Chapter 6 and the chapters following it. Note that a distributive lattice 
may be complete, but fail to be a frame (see Exercise 1.2.6(b)).
A frame is the same thing as a complete Heyting algebra; we will encounter 
Heyting algebras in Section 4.6 in Chapter 4. Note however that the natural structure­
preserving maps for frames and for complete Heyting algebras may differ: A frame 
homomorphism is required to preserve arbitrary joins and finite meets, while a 
Heyting homomorphism is required to preserve finite joins, finite meets, and the 
Heyting implication (see Exercise 4.6.5).

1.2 Lattices
13
There are two “minimal” counterexamples to distributivity, namely, the non­
distributive lattices M3 and N5, depicted in Figure 1.3. Indeed, the following propo­
sition, which you will be asked to prove in Exercise 1.2.10, characterizes distributive 
lattices in terms of “forbidden substructures.”
M3
N5
Figure 1.3 The lattices M3 and N5.
Proposition 1.18 Let L be a lattice. Then, L is distributive if, and only if, L does 
not contain an unbounded sublattice which is isomorphic to M3 or N5 .
Note that Proposition 1.18 does not require the existence of a sublattice (with 
top and bottom) isomorphic to M3 or N5. Stated more explicitly, “L contains an 
unbounded sublattice isomorphic to M3” means: There are five distinct elements 
a, b, c, d, e in L such that a = b A c = b A d = c A d, e = b V c = b V d = c V d, 
but a need not be the bottom element of L ,ande need not be the top element of 
L. We leave it to the reader to similarly spell out the definition of “L contains an 
unbounded sublattice isomorphic to N5.”
Directed and Filtering Sets
Let P be a poset. A subset D c P is called directed if it is non-empty, and for 
any p, q e D, there exists r e D such that r > p and r > q. Equivalently, D is 
directed if any finite subset of D has an upper bound in D (see Exercise 1.2.12). 
A directed join is the supremum of a directed set. Order-dually, a subset F c P is 
called filtering if it is non-empty, and for any p, q e F , there exists r e F such that 
r < p and r < q. Again, equivalently, F is filtering if any finite subset of F has a 
lower bound in F. We will sometimes use the word up-directed as a synonym for 
“directed,” and down-directed as a synonym for “filtering.”
In lattice theory, directed and filtering subsets of a lattice often appear, and 
indeed, certain filtering sets called prime filters are central to the duality theory in 
Chapter 3 (also see Exercise 3.1.2). Directed and filtering sets are also important in 
topology and domain theory, as we will see in Chapters 2, 6, and 7. In particular, 
we will often encounter the notion of a filtering collection of subsets of a set X , 

14
1 Order and Lattices
which is just a filtering subset of the poset (P (X), c). More explicitly, a non-empty 
collection F of subsets of a set X is filtering if, for any S, T & F, there exists 
R &F such that R c S n T.
A poset P is directedly complete if any directed subset of P has a supremum 
in P. Directedly complete posets are called dcpos, for short. Directed joins are 
what is needed to complete a lattice into a complete lattice (see Exercise 1.2.12). A 
categorified version of this result will be proved in Proposition 5.37.
Complements and Boolean Algebras
If a is an element in a lattice, an element b is called a complement of a if a A b = ± 
and a v b = T. A Boolean algebra is a distributive lattice in which every element 
has a complement. The complement of an element in a distributive lattice is unique 
if it exists, see Exercise 1.2.11(a). If L is a Boolean algebra, we denote by ­ a the 
unique complement of an element a.
More directly, a Boolean algebra is a tuple (B, A, v, ±, T, -) such that the tuple 
(B, A, v, ±, T) is a distributive lattice, and for all a & B, a A- a = ± and a v- a = T. 
The term “Boolean algebra” comes from another (the original) equational defini­
tion: A Boolean algebra is term-equivalent to a commutative ring with unit in 
which all elements are idempotent; one only has to change which operations are 
viewed as basic (see Exercise 1.2.13). Power sets are Boolean algebras in which the 
complement is given by the usual set-theoretic complement. Another fundamental 
example of a Boolean algebra is provided by the formulas of classical propositional 
logic modulo logical equivalence. As we will see in Chapter 3, a consequence of 
topological duality is that every Boolean algebra is isomorphic to a subalgebra of 
a power set Boolean algebra.
Regarding maps between Boolean algebras, for any lattice homomorphism f: L ^ 
M , where L and M are Boolean algebras, the function f must also preserve the 
operation -, that is, f (-a) = -f (a) for all a & L (see Exercise 1.2.11(b)). We 
thus have an unambiguously defined notion of homomorphism between Boolean 
algebras. However, a Boolean algebra in general has many sublattices that are not 
themselves Boolean algebras. We call a sublattice L of a Boolean algebra B a 
subalgebra if it is closed under the operation -.
As a subclass of distributive lattices, Boolean algebras take up a very special 
position: Every distributive lattice has a “minimal” Boolean algebra sitting around 
it, called its Boolean envelope or free Boolean extension.2 In categorical terms, 
Boolean algebras form a full reflective subcategory of distributive lattices; see 
Chapter 5. We end this section by spelling out what this means.
Definition 1.19 LetL be a distributive lattice. A Boolean algebra B, together with 
an injective homomorphism e: L ^ B, is called a Boolean envelope of L if, for 
2 In some literature, this object is also called the Booleanization, but this term has also been used with other 
meanings, so we will avoid it.

1.2 Lattices
15
h
every lattice homomorphism h: L ^ A, with A a Boolean algebra, there exists 
a unique homomorphism h: B ^ A such that h ◦ e = h, that is, such that the 
following diagram commutes:
B
e
L.
There are general algebraic reasons why the Boolean envelope of a distributive 
lattice exists, but in this book we choose to give proofs via topological duality. In 
Proposition 1.28, we will construct the Boolean envelope of a finite distributive 
lattice as a small application of the finite duality that we prove there. In fact, any 
distributive lattice has a Boolean envelope, and it is unique up to isomorphism; 
see Propositions 3.32 and 3.34 in Chapter 3. We will denote by L- the (unique 
up to isomorphism) Boolean envelope of a distributive lattice L. We will also see 
there (Corollary 3.35) that the Boolean envelope ofL has a further special property, 
namely, that for any embedding h: L ^ A with A a Boolean algebra, the Boolean 
subalgebra of A generated by the image of h is isomorphic to the Boolean envelope 
of L.Thatis,ifh is injective, then so is h.
Exercises for Section 1.2
Exercise 1.2.1 Prove that, for a poset (P, <) to be a lattice, it is sufficient that 
joins and meets exist for the empty set and for all two-element subsets. Also show 
that, if f: L ^ M is a function between lattices which preserves the empty join 
and joins of two-element sets, then f preserves all finite joins.
Exercise 1.2.2 Prove that, for a poset (P, <) to be a complete lattice, itis sufficient 
that every subset has a supremum. By order-duality, it is also sufficient that every 
subset has an infimum.
Exercise 1.2.3 Let L be a lattice. Prove that ± is an identity element for V, that is, 
a V ± = a for all a e L. By order-duality, T is an identity element for A.
Exercise 1.2.4 (a) Prove that the relation <L defined from a lattice according 
to the algebraic definition is a partial order in which all finite subsets have 
joins and meets. Further, show that the binary and empty meets and joins in 
this partial order agrees with the operations of the original lattice. Hint. Use 
the result of Exercise 1.2.1.
(b) Prove that, if (L, <) is a lattice according to the order-theoretic definition, 
then (L, V, A, ±, T) is a lattice according to the algebraic definition, where the 
operations denote the binary and empty joins and meets with respect to the

16
1 Order and Lattices
partial order <. Further, show that the partial order obtained from the binary 
operations gives back the original partial order.
Exercise 1.2.5 Find at least one example of each of the following:
(a) 
a partial order which is not a total order;
(b) 
a supremum which is not a maximum;
(c) 
a poset in which finite joins exist but which is not a lattice;
(d) 
a lattice which is not a complete lattice;
(e) 
a subset of a lattice which is not a sublattice, even though it is a lattice in the 
inherited partial order; and
(f) 
an order-embedding between lattices that preserves binary joins, but not the 
bottom element.
Exercise 1.2.6 This exercise shows that there are some subtleties with the notion 
of completeness in lattices. Let X be an infinite set. We will consider sublattices of 
the complete lattice P(X), ordered by subset inclusion.
(a) 
Consider the set
L := {f e P(X) | f is finite} U {X}.
Show that L is a bounded sublattice of P (X), and that L is a complete lattice 
in the order inherited from P (X) , but also give an example of a subset E of 
L such that the supremum of E in L is different from the supremum of E in 
P(X).
(b) 
Show that L of the previous item is not a frame.
(c) 
A subset c of X is called co-finite if X - c is finite. Show that the set
L' := {c e P(X) | c is co-finite} U {0}
is a bounded sublattice of P(X), and a complete lattice in the order inherited 
from P (X).
(d) 
Let K be a subposet of P (X) containing both L and L'. Show that if K is a 
complete lattice in the order inherited from P(X), then K = P(X).
Exercise 1.2.7 Let f: L ^ M be a function between lattices. Prove that:
(a) if f is injective and preserves V or A, then f is an order-embedding; and 
(b) if f is bijective and preserves V or A, then f is a lattice isomorphism.
Exercise 1.2.8 Let L be a lattice. Prove that (1.2) and (1.3) are equivalent. Hint. 
You need to use the absorption laws twice.
Note that this gives a proof that L is distributive if, and only if, Lop is distributive; 
the property of distributivity is self-dual.

1.2 Lattices
17
Exercise 1.2.9 Let (Li)ieI be an indexed family of lattices.
(a) 
Prove that n i eI Li, as defined in the text, is indeed a lattice.
(b) 
Prove that the partial order on f] ieI Li is given by the pointwise product of 
the partial orders on the Li.
(c) 
Prove that 
ieI Li is distributive if, and only if, Li is distributive for every
i e I.
Exercise 1.2.10 Prove Proposition 1.18.
Exercise 1.2.11 (a) Prove that, in a distributive lattice, any element has at most 
one complement.
(b) Prove that any lattice homomorphism between Boolean algebras preserves 
the operation ­ .
(c) Prove that any function between Boolean algebras that preserves -, ±, and V 
is a lattice homomorphism.
Exercise 1.2.12 (a) Let P be a poset. Prove that, for any subset D c P, D is 
directed if, and only if, any finite subset of D has an upper bound in D . (Note 
that the empty set is always a subset of D , and that any element of D will be 
an upper bound for it.)
(b) Let L be a bounded lattice. Prove that L is a complete lattice if, and only if, L 
is a dcpo.
(c) Give an example of a dcpo that is not a lattice.
Exercise 1.2.13 Let (B, +, •, 0,1) be a commutative ring with unit in which a2 = a 
for all a e B. Define a < b if, and only if, a • b = a. Prove that < is a distributive 
lattice order on B, and that every element of B has a complement with respect to 
<. Hint. First show that a + a = 0 for all a e B.
Conversely, let (B, A, V, ±, T, -) be a Boolean algebra. Define, for any a, b e B, 
a+b := (a A- b) V (-a A b), a • b := a A b, 0 := ± and 1 := T. Prove that (B, +, •, 0,1) 
is a commutative ring with unit in which a2 = a for all a e B .
Finally, show that the composition of these two assignments in either order yields 
the identity.
Note. The operation + defined in this exercise is known as symmetric difference.
Exercise 1.2.14 This exercise guides you through a proof of the “adjoint functor 
theorem for complete lattices.” Let C, D be complete lattices and f: C ^ D a 
function.
(a) 
Suppose that f preserves all joins. For each d e D, define 
g(d) := ^{c e C | f (c) < d}.
Prove that g is an upper adjoint to f .

18
1 Order and Lattices
(b) 
Conclude from the previous item and Exercise 1.1.8(g) that a function f be­
tween complete lattices possesses an upper adjoint if, and only if, f preserves 
all joins.
(c) 
Conclude from the previous item, applied to Cop and Dop, that a function f 
between complete lattices possesses a lower adjoint if, and only if, f preserves 
all meets.
Exercise 1.2.15 Let f: C D: g be an adjunction between complete lattices, 
with f left adjoint to g.
(a) 
Show that the image of g in C is closed under all meets.
(b) 
Show that the image of g is isomorphic to the image of f in D.
(c) 
Give an example showing that the image of g, despite being a complete lattice 
in its own right, need not be a sublattice of C.
Exercise 1.2.16 (a) Prove that the collection of congruences on a lattice L is a 
complete lattice under the inclusion order.
(b) Prove that this lattice of congruences is always distributive, even if L is not.
1.3 Duality for Finite Distributive Lattices
Lattices were introduced as abstract structures in Section 1.2. In this section, we 
show that finite distributive lattices can be represented in a more concrete way, 
namely, as certain sets of subsets closed under intersection and union equipped with 
the inclusion order. That is, the abstract algebraic operations of meet and join on 
finite distributive lattices are always, up to isomorphism, the set-theoretic operations 
of intersection and union. This representation gives rise to our first example of a 
duality. From it, we will also deduce a duality for finite Boolean algebras.
For any set S, we denote by P (S) the power set of S, that is, the collection 
of all subsets of S. The inclusion order of subsets gives a partial order on P (S) , 
which is in fact a distributive lattice. (Indeed, P (S) is even a Boolean algebra.) Any 
sublattice of P (S) is a distributive lattice, too. Conversely, any distributive lattice 
is a sublattice of a power set lattice, as we will see in Chapter 3. In this section, we 
will prove a stronger result for finite distributive lattices (Proposition 1.21).
Let (P, <) be a preorder. An up-set is a subset U c P such that whenever p e U 
and p < q, we have q e U .A down-set is a subset D c P such that whenever 
p e D and q < p, we have q e D. The collection of up-sets of a preorder is closed 
under arbitrary unions and intersections, and the preorder < thus specifies two 
complete sublattices of P (P), namely, the complete sublattice U (P, <) of up-sets 
with respect to <, and the complete sublattice D (P, <) of down-sets with respect 
to <, see Exercise 1.3.1.

1.3 Duality for Finite Distributive Lattices
19
It follows that, for any subset S of P, there exists a smallest up-set containing 
S, which we denote by tS and call the up-set generated by S. The set tS contains 
those elements p e P for which there exists 5 e S such that 5 < p, that is,
tS = {p e P | 5 < p for some 5 e S} .
The down-set generated by S is defined similarly, and denoted jS. In particular, 
for any p e P, the up-set generated by p, which we denote by tp, is the set of 
elements above p, and the down-set generated by p, which we denote by jp, is 
the set of elements below p. The up-sets of the form tp and the down-sets of the 
form jp are called principal up-sets and down-sets, respectively. By a convex set 
we mean a set that is an intersection of an up-set and a down-set (also see Exercise 
1.3.2). By a finitely generated up-set we mean an up-set of the form tF for F a 
finite (possibly empty) subset, or equivalently, a set that is a finite (possibly empty) 
union of principal up-sets. Similarly, a finitely generated down-set is a finite union 
of principal down-sets; these up-sets will be particularly important in Chapter 7, 
also see Exercise 1.3.8.
Notice that, if U is an up-set, then its complement, P - U, is a down-set, and vice 
versa; therefore, U(P, <) is isomorphic to D(P, <)op, or, said otherwise, U(P, <) 
and D (P, <) are anti-isomorphic.
Notation Throughout this book, when U is a subset of a set P, we often use 
the notation Uc instead of P - U for the complement of a subset U. Note that this 
abbreviated notation Uc assumes that the “ambient” set P is clear from the context.
Let j be an element of a lattice L. Then, j is called (finitely)3 join irreducible 
if, whenever j = V S for a finite S c L, we have j e S. Notice that ± is never 
a join-irreducible element, because ± = V 0. A useful equivalent definition of 
this concept is: An element j of L is join irreducible if, and only if, j ± and, 
whenever j = a V b for a, b e L, we have j = a or j = b (see Exercise 1.3.3). 
We denote by J(L) the poset of join-irreducible elements ofL, where the order is 
the restriction of the order on L. Similarly, m e L is a (finitely) meet-irreducible 
element if m = /\ S implies m e S for any finite S c L, t is never meet irreducible, 
and M(L) denotes the poset of meet-irreducible elements of L. Note that meet 
irreducibles of L are exactly the same thing as join irreducibles of Lop.
3 We will omit the adjective “finitely.” On occasion, we need stronger versions of join-irreducibility, namely 
with respect to arbitrary subsets. In that case we will use the adjective completely, see, for example, Exercise 
1.3.10. As a general rule throughout this book, when no further qualifying adjective is given for a concept 
involving joins and meets, we mean finite joins and meets.
An important and useful fact about finite lattices is that there are “enough” join 
irreducibles to separate elements, in the following sense.

20 
1 Order and Lattices
Lemma 1.20 Let L be a finite lattice. For any a, b e L, if a 
b, then there exists
j e J (L) such that j < a and j 
b.
Proof The set T := (ja) -(jb) of elements that are below a but not below b is 
non-empty, as it contains a. Since L is finite, pick a minimal element j of T . This 
element j must be join irreducible. Indeed, suppose that j = \J S for some finite 
S c L. Then, since V S b, pick c e S such that c b. Since c < j < a, we have 
c e T, so the minimality of j implies that j = c. 
□
For any finite lattice L, consider the function
(——): L •'D(J(L))
a ^ a := {j e J(L) | j <l a},
which sends every element of the lattice to the down-set of join-irreducibles below 
it. This function (-) is obviously order preserving, and Lemma 1.20 says pre­
cisely that (-) is an order-embedding. When is (-) surjective, and hence an order 
isomorphism? We will give the answer in Proposition 1.21.
An element j in a lattice L is called join-prime if, for every finite S c L, j < \J S 
implies j < a for some a e S. Note that any join-prime element in a lattice is in 
particular join irreducible (see Exercise 1.3.5). Meet-prime elements are defined in 
the order-dual way: An element m in a lattice L is meet prime if, for every finite 
S c L, m > S implies m > a for some a e S .A meet-prime element of L is 
again the same thing as a join-prime element of Lop.
Proposition 1.21 Let L be a finite lattice. The following are equivalent:
(i) the lattice L is distributive;
(ii) every join-irreducible element of L is join prime; and 
(iii) the function (-) is surjective, and thus an isomorphism.
Proof (i) ^ (ii). Let j be join irreducible. If j < \ S for some finite S, then 
j = j a (y s) =y (j a a),
where we use the distributive law in the last step. Since j is join irreducible, j = j a a 
for some a e S, which means that j < a.
(ii) ^ (iii). If D e D(J(L)) and j e J(L), then j < \ D if, and only if, there 
exists a e D such that j < a, which in turn is equivalent to j e D because D is a 
down-set. Thus, \/ D = D, showing that (-) is surjective.
Finally, (iii) ^ (i) is clear, because the lattice D(J(L)) is distributive, and 
distributivity is preserved by isomorphism. 
□
Note that the proof of implication (i) ^ (ii) in Proposition 1.21 did not use 
the assumption that L is finite. Therefore, this proposition also implies that in any 

1.3 Duality for Finite Distributive Lattices
21
distributive lattice L, “join prime” and “join irreducible” are synonymous. For a 
bounded lattice L which is not necessarily distributive, one may find in the literature 
the notation J (L) for the poset of join-irreducible elements of L, and Jp (L) for 
the set of join-prime elements L, which will be a strict subset of J (L) if L is not 
distributive. We only consider distributive lattices throughout this book, so that we 
may use the notation J(L) without ambiguity. The order dual of Proposition 1.21 
can be used to characterize the property of distributivity (which is self-dual) in terms 
of meet-prime and meet-irreducible elements. Moreover, for a finite distributive 
lattice L, the posets J(L) and M(L) are isomorphic (see Exercise 1.3.7).
IfL is a finite distributive lattice, then we call J(L) the dual poset of L.IfP is a 
finite poset, we call D (P) the dual distributive lattice of P. With this terminology, 
Proposition 1.21 implies that any finite distributive lattice is isomorphic to its double 
dual, that is,
L = D(J(L)) .
We get a similar “double dual” result if we start from a finite poset P.
Proposition 1.22 Let P be a finite poset and D & D (P). Then, D is join irreducible 
in D(P) if, and only if, D is a principal down-set. In particular, J (D (P)) is a 
poset isomorphic to P.
Proof Suppose D is join irreducible. Since P is finite, we have
D = U Ip.
Since D is join irreducible, we can pick p & D such that D = |p, as required.
Conversely, if D = |p for some p & P, then D is non-empty. Also, if D = A 1 U A2 
for some down-sets A1, A2 of P, then we have p & Ai for some i &{1, 2}. Since Ai 
is a down-set, we then obtain D = |p c Ai c D, so D = Ai. 
□
We thus see that any finite distributive lattice can be represented isomorphically 
as the lattice of down-sets ofa finite poset (Proposition 1.21). Moreover, for a given 
finite distributive lattice L, the finite poset P for which L = D (P) is unique up to 
isomorphism: indeed, Proposition 1.22 implies that if L = D (P) for some finite 
poset P, then J(L) = J(D(P)) = P.
To turn this representation result into a duality, we now consider morphisms. 
If f: P ^ Q is an order-preserving function between preorders, then the inverse 
image map
D (f): D (Q) >D (P)
D ~. f-1 (D )
is a lattice homomorphism. We will prove in Proposition 1.24 that, in the special 
case where P and Q are finite posets, every lattice homomorphism D(Q) ^ D(PP) 

22
1 Order and Lattices
arises in this way. Before we can do so, we need a general lemma about adjunctions 
between finite lattices.
Lemma 1.23 Let g : D E : h be an adjunction between finite lattices, and 
further suppose that h preserves joins. Then, for any join-prime element j in D, the 
element g ( j ) is join prime in E.
Proof Let S c E be any subset such that g (j) < \j S. Then, since h is an upper 
adjoint to g, j < h(V S) = V h[S], where we use that h preserves joins. Since j is 
join prime, pick 5 e S such that j < h(5). Since g is a lower adjoint to h, g(j) < s. 
Thus, g(j) is join prime. 
□
Proposition 1.24 Let P and Q be finite posets. For any lattice homomorphism 
h: D (Q) ^ D (P), there exists a unique order-preserving f: P ^ Q such that 
h = D(f).
Proof Since h preserves all meets, it has a lower adjoint, g, by Exercise 1.2.14(c). 
By Lemma 1.23, since h also preserves all joins, g sends join-prime elements to 
join-prime elements. Now, if p e P, then jp is join prime by Proposition 1.22, 
and thus g(jp) is join prime. By the other direction of Proposition 1.22, pick the 
unique f (p) e Q such that g(jp) = jf (p). Notice that the function f: P ^ Q 
thus defined is order preserving, because g is order preserving, so p < p' implies 
f (p) e jf (p) = g(jp) c g(jp') = jf (p').
Moreover, for any E e D(Q) and p e P, we have, using the adjunction and the 
definition of f , that
p e h(E) <> jp c h(E) <> g(j p) c E <> j f (p) c E <> f (p) e E, 
sothat h (E) = f-1 (E), as required. The uniqueness of f is left as Exercise 1.3.6. □
Summing up, we have associated to every finite distributive lattice L a finite poset 
J (L) , that we called the dual poset of L , and, conversely, to every finite poset P,a 
finite distributive lattice D (P) that we called the dual distributive lattice of P.We 
have proved that:
(a) 
every finite distributive lattice is isomorphic to its double dual (Proposition 
1.21);
(b) 
every finite poset is isomorphic to its double dual (Proposition 1.22); and 
(c) homomorphisms between finite distributive lattices are in one-to-one corre­
spondence with order-preserving functions between their dual posets (Propo­
sition 1.24).
The reversal of direction of arrows when moving to “the other side,” that is, a 
function from P to Q gives a function from D (Q) to D (P) , is what makes the 

1.3 Duality for Finite Distributive Lattices
23
correspondence in (c) “dual.” What all this means, in practice, is that finite distribu­
tive lattices with homomorphisms between them are essentially the same thing as 
finite posets with order-preserving functions between them.
In fancier terms, we have proved the following theorem.
Theorem 1.25 The functors D and J constitute a duality between the category 
DLf of finite distributive lattices with homomorphisms and the category Posf of 
finite posets with order-preserving functions.
We will define the precise meaning of the terms (“category,” “functor,” “duality”) 
used in this theorem in Section 5.2, but the reader who is not yet familiar with 
these terms can rest assured that the mathematical content of the theorem consists 
precisely of items (a), (b), and (c) above. For a precise explanation of why what 
we have proved here shows that the functors form a duality, see Example 5.14 on 
p. 165.
An easy generalization of Birkhoff duality, which does not involve topology, is 
what we call discrete duality for distributive lattices. This generalization starts from 
the observation that for any (not necessarily finite) poset P, one may still recover 
P from the distributive lattice D (P), now as the poset of completely join-prime 
elements. This yields a dual equivalence between the category Pos of posets with 
order-preserving functions and a category DL+ of complete lattices that are join 
generated by their completely join-prime elements; see Exercise 1.3.10, and also 
Example 5.17(d) and Theorem 7.24 later in this book.
Duality for Finite Boolean Algebras
We end this section by describing how Theorem 1.25 specializes to finite Boolean 
algebras. An atom of a lattice L is a minimal non-bottom element, that is, an element 
j e L such that j ± and ± < a < j implies a = ± or a = j for any a e L.
Proposition 1.26 Let L be a finite distributive lattice. The following are equivalent:
(i) 
the distributive lattice L is a Boolean algebra;
(ii) 
every join-irreducible element of L is an atom;
(iii) 
the order on J(L) is trivial: that is, distinct elements are incomparable; and 
(iv) the distributive lattice L is isomorphic to P(J (L)).
Proof (i) ^ (ii). Let j e J (L). Suppose that ± < a < j. Since a v - a = T, we 
have j < a v - a. Since L is distributive, by Proposition 1.21 j is join prime, so 
j < a or j < - a. If j < a, then a = j, and we are done. If j < - a, then a <j <-a, 
so a = a A - a = ±.
(ii) ^ (iii). Clear from the definition of atom.

24
1 Order and Lattices
(iii) ^ (iv). By Proposition 1.21, L is isomorphic to D(J(L)). By (iii), any 
subset of J (L) is a down-set.
(iv) ^ (i). Clear because P(J(L)) is a Boolean algebra. 
□
Proposition 1.26 shows in particular that every finite Boolean algebra L is of the 
form P (S), where S is the finite set of atoms (= join irreducibles) of L.
Note also from (iii) in Proposition 1.26 that, if L is a finite Boolean algebra 
and M is a finite distributive lattice, then any function f: J (L) ^ J (M) is 
order preserving. Thus, the lattice homomorphisms M ^ L are exactly the inverse 
images of functions J (L) ^ J (M). In particular, if both L and M are finite 
Boolean algebras, then homomorphisms from L to M correspond to functions 
J(M) ^ J(L). We conclude:
Theorem 1.27 The functors P and J constitute a duality between the category 
BAf of finite Boolean algebras with homomorphisms and the category Setf of finite 
sets with functions.
As promised at the end of Section 1.2, we end this first chapter by using the 
dualities to give a simple concrete description of the Boolean envelope of a finite 
distributive lattice, defined in the previous section.
Proposition 1.28 Let L be a finite distributive lattice. Then, the finite Boolean 
algebra P(J(L)), with the embedding (-): L ^ P(J(L)), is a Boolean envelope 
ofL.
Proof Let h: L ^ A be a lattice homomorphism, with A a Boolean algebra. By 
the results in this section, we may assume, up to isomorphism, that L = D (P) for 
a poset P, A = P (X) for a set X, and h = f-1 for a function f: X ^ P. The 
function h, defined by sending any u e P(P) to f-1 (u), is clearly a homomorphism 
extending h. The uniqueness is left as Exercise 1.3.9; or see the more general proof 
of Proposition 3.34 in Chapter 3. 
□
This intimate connection between distributive lattices and Boolean algebras, and 
the various dualities for them, will be made more precise in Section 3.3 in Chapter 
3 and further in Section 6.1 in Chapter 6.
As in the case of distributive lattices, the duality between finite Boolean algebras 
and finite sets fairly easily extends to a duality between sets and Boolean algebras 
that are complete and atomic, that is, for any a ±, there is an atom j < a. This 
is called discrete duality between sets and complete and atomic Boolean algebras 
(see Exercise 1.3.11).

1.3 Duality for Finite Distributive Lattices
25
Exercises for Section 1.3
Exercise 1.3.1 LetPbe a poset. Prove that D(P) is a complete sublattice of P(P). 
Use order-duality to deduce that U (P) is also a complete sublattice of P (P) .
Exercise 1.3.2 Prove that a subset C of P is convex if, and only if, for any p, q e C, 
if p < r < q, then r e C.
Exercise 1.3.3 Prove that an element j in a lattice L is join irreducible if, and only 
if, j 
± and for any x, y e L, if j = x V y, then j = x or j = y.
Exercise 1.3.4 (a) Formulate a lemma which says that any finite lattice has 
enough meet irreducibles, and prove it (you may use Lemma 1.20).
(b) 
Give an example of a lattice which does not have enough join irreducibles.
(c) 
Give an example of a complete lattice which has enough join irreducibles, but 
not enough meet irreducibles.
(d) 
Can you find an example as in (c) with the additional requirement that the 
complete lattice is a frame? That it is a Boolean algebra? If not, formulate 
and prove a result about this.
Exercise 1.3.5 (a) Prove that any join-prime element in a lattice is join irre­
ducible.
(b) Give an example of a lattice and a join-irreducible element in it that is not 
join prime.
Exercise 1.3.6 Complete the uniqueness part of the proof of Proposition 1.24 
by showing that, if f, f': P ^ Q are order preserving and D(f) = D(f'), then 
f = f'•
Exercise 1.3.7 Let L be a finite distributive lattice.
(a) 
Prove that, for any j e J(L), the set
L -(Tj) = {a e L | j £ a}
has a maximum. We denote this maximum by k(j).
(b) 
Prove that, for any j e J(L) and a e L, j 
a if, and only if, a < k(j).
(c) 
Prove that k(j) is meet irreducible for any j e J(L).
(d) 
Prove that k : J (L) ^ M (L) is an order isomorphism.
Exercise 1.3.8 This exercise describes a variant of Proposition 1.22 that works 
for posets that are not necessarily finite, and gives a universal property for the 
construction. Also compare this exercise with Exercise 1.3.10. Let P be any 
poset.

26
1 Order and Lattices
(a) Prove that a down-set D of P is finitely generated if, and only if, max(D) is 
finite and D = j max(D).
Denote by Dfin (P) the poset of finitely generated down-sets of P, ordered by 
inclusion.
(a) 
Show that Dfin (P) is a join subsemilattice of D (P) .
(b) 
Prove that the function P ^ J(Dfin(P)), defined by sending p e P to jp, is 
an order isomorphism between P and J (Dfin(P)).
(c) 
Show that, for any join semilattice (L, V, ±) and any order-preserving function 
f: P ^ L, there exists a unique join-preserving function f: Dfin(P) ^ L 
such that f (jp) = f (p) for every p e P.
The last item shows that Dfin(P) is the free join semilattice over the poset P;we 
will revisit this construction in Example 5.17(c) in a more general context.
Exercise 1.3.9 Prove that the function h defined in the proof of Proposition 1.28 
is unique. Hint. It suffices (why?) to prove that the sublattices D(P) and U (P) 
together generate P(P). For this, note first that any singleton {p} can be obtained 
as the intersection of the down-set jp and the up-set Tp; then use that any u e P (P) 
can be written as a (finite) union of singletons.
Exercise 1.3.10 The final two exercises of this first chapter outline a discrete 
duality for distributive lattices, and show how it specializes to Boolean algebras. 
Your solution can essentially follow the same scheme as the proofs for finite duality 
that we gave in this chapter, so it makes for a useful exercise to check that you have 
understood those.
We call an element j of a complete lattice L completely join prime if, for any 
subset S of L, j < V S implies j < 5 for some 5 e S. We denote by J" (L) the set 
of completely join-prime elements of L .WesayL is generated by its completely 
join-prime elements if for every a e L there exists S c J™ (L) such that a = \ S. 
Note that in this case we in fact must have a = \(ja n J“(L)) for every a e L.
Throughout the exercise, P and Q denote arbitrary posets.
(a) 
Recall from Exercise 1.3.1 that, for any poset P, D(P) is a complete sublattice 
of P(P). Show that, for any p e P, jp is completely join prime. Conclude 
that D(P) is generated by its completely join-prime elements.
(b) 
Prove that a complete lattice is generated by its completely join-prime ele­
ments if, and only if, for any a, b e L, if a 
b, then there exists j e Jpp° (LL)
such that j < a and j 
b.
(c) 
Let L be a complete lattice generated by its completely join-prime elements. 
Prove that the function (-), defined by
a := {j eJp^ (L) | j <l a},

1.3 Duality for Finite Distributive Lattices
27
is an order isomorphism between L and D(Jp"(L)). Conclude in particular 
that L is completely distributive.
(d) 
Prove that, for any order-preserving function f: P ^ Q, the inverse image 
map f “1: D (Q) ^ D (P) is a complete lattice homomorphism.
(e) 
Let h: M ^ L be a complete lattice homomorphism between complete 
lattices, and let g be its lower adjoint, which exists by Exercise 1.2.14. Prove 
that, if p is completely join prime in L, then g (p) is completely join prime 
in M .
(f) 
Prove that for any complete lattice homomorphism h: D(Q) ^ D(P), there 
exists a unique order-preserving f: P ^ Q such that h = f-1.
(g) 
Show that, if L is a complete lattice generated by its completely join primes, 
and M is a complete sublattice of L, then M is also generated by its completely 
join primes.
(h) 
Show that the real unit interval [0, 1] has no completely join-prime elements, 
but that it is the image of a complete lattice homomorphism with domain 
D([0, 1]).
Note. This exercise shows that a lattice L is isomorphic to one of the form D (P), 
for P a poset, if, and only if, L is complete and generated by its completely join­
prime elements. An alternative characterization is that L is complete, completely 
distributive, and generated by its completely join-irreducible elements. See Section 
7.1 and Exercise 7.1.7.
Exercise 1.3.11 (a) Prove that, in a complete Boolean algebra, an element is 
completely join prime if, and only if, it is an atom.
(b) Conclude, using Exercise 1.3.10, that every complete and atomic Boolean 
algebra is isomorphic to one of the form P (S).
(c) In contrast with Exercise 1.3.10(h), show that if h: M L is a surjective 
complete lattice homomorphism between complete Boolean algebras and M 
is atomic, then so is L. Hint. Show that if a is an atom of M, then either 
h(a) = 0 or h(a) is an atom of L.
Notes for Chapter 1
We recommend Davey and Priestley (2002) as supplementary reading for a more 
detailed introduction to order and lattice theory. In addition, the classic Balbes and 
Dwinger (1975) remains a good resource for the basics of lattice theory, although 
it is somewhat outdated when it comes to the more advanced theory.
The main results in Section 1.3 are essentially due to Birkhoff (1933) and are 
also consequences of the more general results of Stone (1937b), which we will 
present in Chapter 3 in the form of Priestley duality and then in Section 6.1 in their 

28
1 Order and Lattices
original form. There exist similar, but more involved, results for (finite) lattices 
that are not necessarily distributive. In this text, however, we will limit ourselves to 
distributive lattices. More information and references on duality for general lattices 
can be found, for example, in Davey and Priestley (2002) and in the introduction 
of our paper Gehrke and van Gool (2014); also see Moshier and Jipsen (2014a, 
2014b).

2
Topology and Order
In this chapter we present some material at the interface of topology and order 
theory. We begin by recalling basic material on topology and order, leading up to 
the culminating result of the chapter, Theorem 2.21, which provides an equivalence 
between certain compact Hausdorff topological spaces equipped with orders, which 
were first introduced by Nachbin, and certain non-Hausdorff spaces known as stably 
compact spaces. Nachbin’s thesis of the same title as this chapter was first published 
in Portuguese in 1950 and later translated to English (Nachbin, 1964). It is a nice 
text and we recommend it as supplemental reading.
2.1 Topological Spaces
We expect readers to be familiar with the basic definitions and notions of topology. 
Nevertheless, we give them here in order to fix notation and nomenclature. The 
exact placement of definitions can be located using the index.
A topological space is a pair (X,t), where X is a non-empty set and t is a 
bounded sublattice of P (X) which is closed under arbitrary unions. The elements 
of t are called open sets while their complements are said to be closed sets. We will 
often simply write X for a topological space (if the collection of opens is clear). 
The collection of opens will then be denoted by Q(X). The collection of closed 
subsets of X is denoted C (X). A subset K c X is called clopen if it is both closed 
and open, that is, if both K and Kc are in t. The collection of clopen subsets of a 
space is denoted Clp(X).
A function f: X ^ Y between topological spaces is continuous provided the 
inverse image function f-1: P (Y) ^ P (X) takes opens of Y to opens of X. That 
is, f is continuous if, and only if, there is a restriction of f-1 to Q(Y) which makes 
the following diagram commute:

30
2 Topology and Order
P(Y)
f-1
P(X)
Q(Y)------------- > Q(X).
Example 2.1 For any set X, the set t = P (X) is a topology on X. This topology 
is known as the discrete topology on X . Notice that any function from a discrete 
space to any topological space is continuous.
Example 2.2 For any set X, the set t = {0, X} is a topology on X. This topology is 
known as the indiscrete topology on X. Notice that any function from any topological 
space to an indiscrete space is continuous.
Example 2.3 Let R be the set of real numbers. The usual topology on R consists 
of those sets U c R with the property that, for each x e U, there exists £ > 0 such 
that the interval
(x - £, x + £) = {y e R | x - £<y < x + £}
is entirely contained in U. It is not hard to see that a function f: R ^ R is 
continuous with respect to this topology if, and only if, it satisfies the usual epsilon­
delta definition of continuity (see Exercise 2.1.1).
A subspace of a topological space (X, t) is given by a subset Y c X and is 
equipped with the subspace topology, defined as
t r Y = {U n Y | U e t}.
A continuous function f: X ^ Y between topological spaces is said to be an 
open mapping provided f [U] = {f (x) | x e U} is open in Y for any open U c X. 
Similarly, f: X ^ Yissaidtobeaclosedmappingprovided f [C] = {f (x) | x e C} 
is closed in Y for any closed C c X. Further, f is said to be an embedding provided it 
is injective and f-1: im( f) ^ X is also continuous, where we view f [X] = im( f) 
as a topological space in the subspace topology. Finally, f is a homeomorphism 
provided it is a bijection and both f and f-1 are continuous.
Since open sets are closed under unions, for any subset S of a topological space 
(X, t) , there is a largest open set, int(S) , that is contained in S. The set int(S) is 
called the interior of S; in a formula,
int(S) = 
{U c X | U c S and U e t}.
We note that int is the upper adjoint to the inclusion map Q(X) ^ P(X) (see 
Exercise 2.1.3). Ifx e Xis a point and Sis any subset of X, then Sis a neighborhood 

2.1 Topological Spaces
31
of x if x e int(S), that is, if there exists an open set U c S such that x e U. The 
interior of a set S is sometimes denoted by S◦. Symmetrically, since closed sets 
are closed under arbitrary intersections, any subset S has a closure, cl(S), which is 
defined as the smallest closed set containing S; in a formula,
cl(S) = ^{C C X | S c C and C is T-closed}.
The map cl is the lower adjoint to the inclusion map C (X) ^ P (X). The closure 
of a set S is sometimes denoted by S. A subset S of X is called dense if cl( S) = X.
Notice that arbitrary intersections of topologies on a fixed set X are again topolo­
gies. Accordingly, for any collection S of subsets of X , there is a least topology 
containing S. We call this the topology generated by S and denote it by (S). When 
T is a topology on a set X , a collection S of subsets of X is called a subbase for 
the topology t if t = (S). Note that (S) is the collection of subsets of X that can 
be written as arbitrary unions of finite intersections of elements of S . We say that 
a subbase S for a topology T is a base if, for every x e X and U e T with x e U, 
there is V eSwith x e V c U . Notice that, in this case, finite intersections are not 
needed to generate T, that is, every open of T is simply a union of elements from 
S . An equivalent way of saying this is that a subbase B is a base for the topology 
generated by B if and only if, for every x e X ,
Bx = {V eB|x e V}
is filtering. In particular, the closure of a subbase S under finite intersections is 
always a base, but bases are more general than that; see Exercise 2.1.5.
Let (Xi)i e I be a collection of topological spaces indexed by a set I. The product 
space i e I Xi is the Cartesian product of the sets Xi , equipped with the topology 
generated by the subbase consisting of the sets
n-1 (V), where i e I and V c Xi is open in Xi,
where ni: njeI Xj ^ Xi is the projection onto the ith coordinate for i e I.
Let X be a topological space. We recall the five main separation axioms that may 
hold for X .
• X is T0 (or Kolmogorov) provided, for all x, y e X with x y, there is an open
U c X which contains exactly one ofx and y.
• X is T1 (or Frechet) provided, for all x, y e X with x y, there is an open U c X
with x e U and y £ U.
• X is T2 (or Hausdorff) provided, for all x, y e X with x y there are opens 
U, V c X with x e U and y e V and U n V = 0.
• X is T3 (or regular) provided X is T1 and, for all x e X and closed C c X with 
x C, there are opens U, V c X with x e U and C c V and U n V = 0.

32
2 Topology and Order
• X is T4 (or normal) provided X is T1 and, for all closed C, D c X such that 
C n D = 0, there are opens U, V c X with C c U and D c V and U n V = 0.
Hausdorff spaces may also be characterized as those spaces satisfying a closed 
graph theorem, that is, a space X is Hausdorff if, and only if, the graph of any 
continuous function Y ^ X is closed (see Exercise 2.1.12).
Compactness
Let S c X, where X is a topological space. An open cover U of S is a collection 
of open sets U c Q( X) such that S c J U .A subset K c X is compact provided 
every open cover U of K contains a finite subcover, that is, a finite subset U' c U 
which is also acoverofK. An equivalent definition of compactness using closed sets 
instead of open sets is the following. For a collection AcC(X) of closed sets of 
X, say that A has the finite intersection property with respect to K if for every finite 
subcollection A of A , ( P|A')n K 0.Then, K is compact if, and only if, for every 
collection A c C (X) that has the finite intersection property with respect to K, we 
have ( P| A n K 0. In particular, the space X itself is compact if every open cover 
of X contains a finite subcover, or equivalently, if every collection of closed sets 
with the finite intersection property (with respect to X) has a non-empty intersection 
(see Exercise 2.1.6 for further equivalent definitions of compactness for a space).
Example 2.4 The subspace [0,1] = {x e R | 0 < x < 1} of R with the usual 
topology is compact (see Exercise 2.1.14).
A topological space X is locally compact provided that, for each x e X and each 
U e Q(X) with x e U, there are V e Q(X) and K c X compact such that
xeVcKcU.
Note that, if X is Hausdorff, then compactness implies local compactness, while 
this is not the case in general (see Exercise 2.1.17).
Proposition 2.5 Let X and Y be topological spaces and nY: X x Y ^ Y the 
projection onto the second coordinate. If X is compact, then nY is a closed mapping.
Proof Let C c X x Y be closed and suppose y £ nY [C]. That is, for each x e X, 
we have (x, y) C. Thus, as C is closed, for each x e X, there are Ux open in X 
and Vx open in Y with (x, y) e Ux x Vx and
Cn(Ux xVx) = 0.
Since x e Ux for each x e X , the collection {Ux | x e X} is an open cover of 
X . Also, as X is compact, there is a finite subset M c X such that {Ux | x e M }

2.1 Topological Spaces 
33
covers X. Now, letting V = p| {Vx I x e M} we have y e V, V C Y open, and 
V n nY[C] = 0. 
□
We now recall a result, which requires a non-constructive principle, and is often 
useful for proving compactness.
Theorem 2.6 (Alexander subbase theorem) Let X be a topological space and S 
a subbase for the topology on X. If every cover U c S of X has a finite subcover, 
then X is compact.
Any proof of the Alexander subbase theorem must necessarily use a non­
constructive principle, and we here use Zorn’s lemma, which will also be crucially 
used in Chapter 3 in the proof of the Stone prime filter-ideal theorem (Theorem 
3.10). Note that while the latter has historically been called a “lemma,” we treat it 
here as a postulate, as is common, since it is equivalent in Zermelo-Fraenkel set the­
ory to the axiom of choice. We have made the choice to freely use non-constructive 
principles like Zorn’s lemma in this book, although they could sometimes have 
been avoided. For more information about equivalences between various choice 
principles, see, for example, the books by Jech (1973) and Howard and Rubin 
(1998).
Lemma 2.7 (Zorn’s lemma) Let S be a non-empty partially ordered set such that 
if C c S is totally ordered, then there exists an upper bound c of C in S. Then, S 
has a maximal element, that is, there exists s e S such that for any s' e S, if s' > s, 
then s' = s.
Proof that Zorn’s lemma implies the Alexander subbase theorem. We ask the 
reader to fill in the gaps of this proof sketch in Exercise 2.1.10. We prove the 
contrapositive statement. Suppose that X is not compact. Zorn’s lemma guarantees 
that there exists a maximal open cover C of X which does not have a finite subcover. 
The subcollection CnSof C can be shown to still be a cover of X, using the 
maximality of C .NowCnSis a cover by elements from the subbase, which cannot 
have a finite subcover. 
□
An earlier, equivalent, variation of Zorn’s lemma, that we will sometimes use, is 
the following.
Lemma 2.8 (Hausdorff maximality principle) For any totally ordered subset C of 
a partially ordered set P, there is a totally ordered subset C'2 C which is maximal 
among totally ordered subsets of P, with respect to subset inclusion.

34
2 Topology and Order
Exercises for Section 2.1
Exercise 2.1.1 Consider R equipped with the collection t of subsets U c R 
with the property that, for each x e U, there exists £ > 0 such that the interval 
(x - £, x + £) is entirely contained in U.
(a) 
Show that (R, t) is a topological space.
(b) 
Show that the collection of intervals (r, s) , where both r and s are rational, 
forms a base for the topology t on R.
(c) 
Show that f: R ^ R is continuous if, and only if, for every x e R and every 
£ > 0, there exists S > 0 such that, for all y e R with |x - y | < 8, we have 
| f (x) - f (y)| <£.
Exercise 2.1.2 Give examples of continuous maps which are:
(a) 
neither open nor closed;
(b) 
open but not closed; and
(c) 
closed but not open.
Exercise 2.1.3 Let X be a topological space. Prove that the interior map int: P (X) ^ 
Q(X) is upper adjoint to the inclusion map i: Q(X) ^ P(X), and that the closure 
map cl: P(X) ^ C(X) is lower adjoint to the inclusion i': C(X) c > P(X).
Exercise 2.1.4 Let X and Y be topological spaces and f: X ^ Y a continuous 
injection.
(a) 
Show that f need not be an embedding.
(b) 
Show that f is an embedding if, and only if, the co-restriction of f to im(f) 
is a homeomorphism. Here, the co-restriction of f: X ^ Y to a subspace 
S c Y, where im(f) c S, is the function with domain X, codomain S, and 
the same action as f .
(c) 
Show that if the continuous map f is a bijection, then itis a homeomorphism
if, and only if, it is open and if, and only if, it is closed.
(d) 
Show that if X is a subset of Y and f: X ^ Y is the inclusion map, then X 
is a subspace of Y if, and only if, f is an embedding.
Exercise 2.1.5 Let (X, t) be a topological space and B and S be, respectively, a 
base and a subbase for t.
(a) 
Show that (B) = {U C | C C B}.
(b) 
Let T be the closure of S under finite intersections. Show that T is a base 
for t .
(c) 
Give an example of a base for a topology which is not closed under binary 
intersections.

2.1 Topological Spaces
35
(d) 
Let Y be a topological space. Show that f: Y ^ X is continuous if, and only 
if, f-1 (U) is open in Y for each U eS.
Exercise 2.1.6 Let X be a topological space. Show that all of the following 
statements are equivalent:
(a) 
For all R c Q(X), if |J R = X, then there exists a finite R' c R such that 
u R' = X.
(b) 
For all directed Dc Q(X), if J D = X, then X eD.
(c) 
For all S c C(X), if Q S = 0, then there exists a finite S' c S such that 
n s' = 0.
(d) 
For all filtering F c C(X), if U F = 0, then 0 e F.
(e) 
For all R c Q(X), S c C(X), if f| <S c UR, then there exist finite R' c R 
and finite S' c S such that p| S' c U R'.
(f) 
For all directed D c Q(X) and filtering F c C(X), if p F c D, then there 
exist F eFand U eDsuch that F c U.
Exercise 2.1.7 (a) Let X be a compact topological space and let C c X be 
closed. Show that C is compact.
(b) Find a compact space X with a compact subset K which is not closed.
(c) Show that if a topological space X is Hausdorff and K c X is compact, then 
K is closed.
Exercise 2.1.8 (a) Show that the finite union of compact sets is compact.
(b) Give an example to show that the intersection of two compact sets need not 
be compact.
Exercise 2.1.9 Let X be a compact topological space and let F be a filter of 
clopen subsets of X . Prove that, for any clopen set K in X ,
K e F p|Fc K.
Hint. Use the characterization of compactness given in Exercise 2.1.6.
Exercise 2.1.10 This exercise is based on Engelking (1989, Exercise 3.12.2, 
p. 221) and asks you to fill in the details of the proof of the Alexander subbase 
theorem. Let X be a topological space and S a subbase for the topology on X .
(a) 
Prove that, in the following sub-poset of (P(Q(X)), c),
C := {C c Q(X) : C is a cover of X and C has no finite subcover},
any totally ordered subset (Ci)ieI ofC has an upper bound in C. Hint. Show 
that i eI Ci is in C.
Suppose X is not compact. Then, by Zorn’s lemma we can pick a maximal 
element M of the poset C.

36 
2 Topology and Order
(b) 
Prove that, for any open sets U, V, if V e M and U c V, then U e M.
(c) 
Prove that, for any finite number of open sets U1,..., Un, if Ui £ M for every 
1 < i < n, then Q n=1 Ui <£ M. Hint. Use the maximality of M to get finite 
subcovers F of Mu{ Ui} for every i, and show that F := U n=1 F U {p n=1 Ui} 
is then a finite subcover of M U {pn=1 Ui}.
(d) 
Conclude that M n S is a cover of X that does not have a finite subcover.
Exercise 2.1.11 Show that T4 implies T3, which implies T2, which implies T1, 
which implies T0. Further, show that all these implications are strict.
Exercise 2.1.12 (a) Show that a topological space X is Hausdorff if, and only 
if, the diagonal relation
Ax = {(x, x) | x e X}
is closed in the product topology on X X X.
(b) Let f: Y ^ X be a continuous function and suppose that X is Hausdorff. 
Prove that the graph of f, that is, the relation
{(y, f(y)) | y e Y}
is closed in the product topology on Y X X .
(c) Conclude that a topological space X is Hausdorff if, and only if, the graph of 
any continuous function Y ^ X is closed.
Exercise 2.1.13 Let X and Y be topological spaces.
(a) 
Prove that, for any y0 e Y, the function i: X ^ X X Y defined by i (x) := 
(x, y0 ) is continuous.
(b) 
Prove that the projection maps nX: X X Y ^ X and nY: X X Y ^ Y are open.
Exercise 2.1.14 Show that the subspace [0, 1] = {x e R | 0 < x < 1} of R with 
the usual topology is compact.
Exercise 2.1.15 Show that any compact Hausdorff space is normal. Hint. Show 
first that it is regular.
Exercise 2.1.16 (Tychonoff’s theorem) Show that the product of compact spaces 
is again compact. Hint. A proof can be found in any standard reference on topology, 
for example, Engelking (1989, Theorem 3.2.4, p. 138).
Exercise 2.1.17 (a) 
Show that any compact Hausdorff space is locally compact.
Hint. Use the fact that compact Hausdorff spaces are regular, as proved in 
Exercise 2.1.15.
(b) 
Find a topological space which is compact but not locally compact.

2.2 Topology and Order
37
Exercise 2.1.18 (Quotient space) Let X be a topological space and = an equiva­
lence relation on X. The quotient space of X by = is the space based on X/= whose 
open sets are those U c X/= such that
q-1 (U) = U{[x]= I [x]= e U} = {x e X I [x]= e U}
is open in X, where q: X ^ X/=, x ^ [x]= is the canonical quotient map.
(a) 
Show that the topology on X/= is the finest topology on X/= making q: X ^ 
X/= continuous.
(b) 
Show that X/= is a T1 space if, and only if, every equivalence class of = is 
closed in X .
(c) 
Show that if X/= is a Hausdorff space, then = is necessarily closed as a subset 
of the product space X x X.
(d) 
Show that if the quotient map is open, then X/= is Hausdorff if, and only if, 
= is a closed in X x X .
(e) 
Show that if f: X Y is a continuous surjection, then f factors through the 
canonical quotient map q: X ^ X/ ker( f) by a unique continuous bijection 
f: X/ ker(f) ^ Y.
(f) 
Give an example in which f is not a homeomorphism.
(g) 
Show that if f is open or closed, then f is a homeomorphism. But show by 
giving an example that this condition is not necessary.
2.2 Topology and Order
Let (X, t) be a topological space. The specialization order of t is the binary relation 
<T on X defined by
x <T y ^^ for every U e Q(X), if x e U, then y e U.
This relation <T is clearly reflexive and transitive and thus, for any topological 
space, the specialization order is a preorder on X . It is not hard to see that it is 
a partial order if, and only if, X is T0. Moreover, for any y e X, the principal 
down-set, ly, of y in the specialization order is the closure of the singleton set 
{y } . In particular, T1 spaces can be characterized as those spaces having a trivial 
specialization order. The reader is asked to prove these statements in Exercise 2.2.3.
In analysis and algebraic topology, the spaces studied are almost always Haus- 
dorff, so in these fields the interaction with order theory is minimal. However, in 
applications of topology to algebra and logic, almost all spaces are T0 but not T1, so 
in these areas, as in theoretical computer science, the interaction of topology and 
order plays an important role.
A subset of a topological space X is said to be saturated provided it is an up-set 
in the specialization order, or equivalently, provided it is an intersection of opens.

38
2 Topology and Order
Note that a subset K c X is compact if, and only if, its saturation TK is compact. We 
denote by KS(X) the collection of compact-saturated subsets of X (i.e., subsets 
of X that are both compact and saturated). As we will see later on, beyond the 
Hausdorff setting, but in the presence of compactness, KS(X) is in many aspects 
the right generalization of the closed subsets. The following fact is often useful 
and illustrates the consequence of compactness in terms of the specialization order. 
Recall that, for a subset S of a poset, min S is the (possibly empty) set of minimal 
points of S.
Proposition 2.9 Let X be a T0 space and K c X compact, then K c T min(K), 
where we consider X in its specialization order. In particular, if K is compact 
saturated, then K = T min(K).
Proof We first show that if D c K is down-directed in (X, <T), then there is a 
lower bound of D in K. Let D be a down-directed set in (X, <T) and suppose that 
K contains no lower bounds of D. Then, the directed collection of open subsets 
{(jx)c | x e D} is an open cover of K. Therefore, by compactness, it follows that 
there is x e D with K c (jx)c. In particular, x £ K and thus D £ K.
Now let x e K and, by the Hausdorff maximality principle (Lemma 2.8), let C 
be a maximal chain in K containing x . Then, by the above argument, C has a lower 
bound x' e K. Now by maximality of C, it follows that x' e min(K) and thus 
K cT min(K). 
□
The Lattice of All Topologies on a Set
Let X be a set. Note that the collection
Top(X) := {t e P(P(X)) | t is a topology}
is closed under arbitrary intersections and thus (see Exercise 1.2.2 in Chapter 1)it 
is a complete lattice in the inclusion order. Infima are given by intersections, while 
suprema are given by the topologies generated by unions. The least topology on X 
is the indiscrete topology, while the largest is the discrete topology. We will often 
make use of the binary join of topologies on a given set X .
The interaction of compactness and the Hausdorff separation axiom is illuminated 
by looking at Top(X) as a complete lattice. Indeed, by inspecting the definitions 
(see Exercise 2.2.1), note that
Top2(X) := {t e Top(X) | tisT2}
is an up-set in Top(X), while
TopComp ( X) := {t e Top(X) | (X, t) is compact} 

2.2 Topology and Order
39
is a down-set in Top(X). It follows that the set of compact-Hausdorff topologies on 
asetX is a convex subset of Top( X). The following very useful result tells us that 
it is in fact an anti-chain.
Proposition 2.10 Let X be a set and a and t topologies on X with a c t .If a is 
Hausdorff and t is compact, then a = t.
Proof Since Top2(X) is an up-set and TopComp ( X) is a down-set, the hypotheses 
on a and t imply that both are simultaneously compact and Hausdorff. Note that 
in any T1 space, and thus in particular in a Hausdorff space, any set is saturated. 
Moreover, in compact-Hausdorff spaces, being closed is equivalent to being com­
pact (and saturated), see Exercise 2.2.7. Also, any set which is compact in a bigger 
topology remains so in the smaller topology. Thus, we have the following sequence 
of (bi)implications for any subset U c X :
U e t '-> Uc e C (X, t )
<> Uc e KS (X, t)
=^ Uc e KS(X, a)
'.> Uc e C(X, a) '■.> U e a. 
□
Order-Topologies
From topology we get order, but it is also possible to go the other way. Especially in 
computer science applications where a second-order structure such as a topology is 
difficult to motivate, topologies induced by orders play an important role; see also 
the applications to domain theory in Chapter 7.
As we have seen, for any topological space, the closures of points are equal to 
their principal down-sets for the specialization order. Thus, if a topological space 
X has specialization order <, then at least each set of the form (jx)c, for x e X, 
must be open. We now proceed in the converse direction. Let (P, <) be a partially 
ordered set. We define several topologies on P for which the specialization order 
coincides with <.
• The upper topology on P, i^ (P), is defined as the least topology in which jp is 
closed for every p e P. That is, the upper topology is given by
iT(P) = <(!P)c | P e P).
• The Scott topology on P consists of those up-sets which are inaccessible by 
directed suprema. That is, an up-set U c P is Scott open if, and only if, V D e U 
implies U n D 0 for all directed subsets D c P. We denote the Scott topology 
on P by a(P).

40
2 Topology and Order
• The Alexandrov topology, a (P), on P is the largest topology on P yielding < as 
its specialization order. That is,
a(P) = {U c P | U is an up-set}.
The upper, the Scott, and the Alexandrov topologies all have the original order < 
as their specialization order. In fact, if we denote by Top(P, <) the complete lattice 
of topologies on P yielding < as their specialization order, it is not hard to see that 
this is precisely the closed interval [i^(P), a(P)] in Top(P, <).
Clearly, there are order-dual definitions for each of these topologies, which have 
the reverse of < as their specialization order. For example, the lower topology on P 
is defined by
iX(P) = «rP)c | P e P>.
The dual Alexandrov topology has all down-sets as open sets. One can also consider 
the order-dual of the Scott topology but this is not so common, as the motivation 
for having closed sets which are stable under directed joins comes from a model 
of computing in which a computation is considered as the directed join of all its 
partial computations or finite approximations; more on this in Chapter 7.
Using the above “one-sided” topologies as building blocks, we now also define a 
number of “two-sided” topologies on a partially ordered set (P, <). These two-sided 
topologies are all T1 and thus have trivial specialization order.
• The interval topology on P is the join of the upper and lower topologies. That is,
i(P) := iT(P) v i*(P).
The usual topology on the reals is in fact the interval topology given by the usual 
order on the reals.
• The Lawson topology on P is the join of the Scott and the lower topologies. That 
is,
A(P) := a(P) v i^(P).
• Note that the join of the Alexandrov and dual Alexandrov topologies is the 
discrete topology on P.
Exercises for Section 2.2
Exercise 2.2.1 Prove that Top2(X) is an up-set in Top(X), and that TopComp ( X) 
is a down-set in Top(X).

2.2 Topology and Order 
41
Exercise 2.2.2 Let X be a compact space, Y a Hausdorff space, and f: X ^ Y a 
continuous map.
(a) 
Show that the map f is closed. Hint. Use Proposition 2.10.
(b) 
Show that if f is a bijection, then it is a homeomorphism.
(c) 
Show that the co-restriction of f to its image X 
im( f), x ^ f (x) is a
quotient map. In particular, as soon as f is surjective, it is a quotient map (see 
Exercise 2.1.18).
Exercise 2.2.3 Let X be a topological space.
(a) 
Show that the specialization order on X is a preorder.
(b) 
Show that X is T0 if, and only if, the specialization order on X is a partial 
order.
(c) 
Show that X is T1 if, and only if, the specialization order on X is trivial. Recall 
that a partial order < is called trivial provided that x < y if, and only if, x = y.
(d) 
Show that x < y in the specialization order if, and only if, x e {y}. In other 
words, show that {y} = ^y.
(e) 
Show that a subset S c X is an intersection of open sets if, and only if, it is 
an up-set in the specialization order.
Exercise 2.2.4 Let X be a set and < a partial order on X. Show that a topology t 
on X has < as its specialization order if, and only if,
iT(X, <) c T c a(X, <).
Exercise 2.2.5 Show that if a function f: X ^ Y between topological spaces is 
continuous, then it is order preserving with respect to the specialization orders on 
X and Y . Give an example to show that the converse is false.
Exercise 2.2.6 Show that if P is a finite partially ordered set, then i^ (P) = a (P). 
Conclude that, in a finite T0 space, any up-set is open. Further show that, for any 
two partially ordered sets P and Q, a map F: P ^ Q is order preserving if, and 
only if, it is continuous with respect to the Alexandrov topologies on P and Q.
Note. Using terminology that we will introduce in Definition 5.20, this exercise 
shows that the category of finite partially ordered sets is isomorphic to the category 
of finite T0 topological spaces. For further details, see Example 5.21.
Exercise 2.2.7 Let X be a compact Hausdorff space and K c X . Show that K is 
closed if, and only if, it is compact if, and only if, it is compact saturated.

42
2 Topology and Order
2.3 Compact Ordered Spaces
In this section, we show that there is an isomorphism between certain compact 
spaces equipped with an order, first introduced by Nachbin, and certain T0 spaces 
known as stably compact spaces. These spaces provide a well-behaved general­
ization of compact Hausdorff spaces and also contain the topological spaces dual 
to distributive lattices, which we call spectral spaces, and which are a main ob­
ject of study of this book, together with Priestley spaces, their order-topological 
counterpart.
Definition 2.11 An ordered space is a triple (X, t, <) such that
• (X, t) is a topological space,
• (X , < ) is a partially ordered set, and
• < c X x X is closed in the product topology.
An ordered space is said to be a compact ordered space provided the underlying 
topological space is compact.
Example 2.12 The set 2 = {0, 1}, equipped with the discrete topology and the 
usual order, is a compact ordered space. More generally, any finite poset, equipped 
with the discrete topology, is a compact ordered space.
A morphism from an ordered space (X, tX, <X) to an ordered space (Y, tY, <Y) 
is a function f: X ^ Y that is both continuous as a map from the space (X, tx) to 
(Y,tY) and order preserving as a map from the poset (X, <X) to (Y, <X). An order 
homeomorphism between ordered spaces is a morphism that is both a homeomor­
phism and an order isomorphism; this is sometimes also called isomorphism. For 
an equivalent definition of order homeomorphism, see Exercise 2.3.2.
Proposition 2.13 Let X be an ordered space. Then, the underlying topological 
space is Hausdorff.
Proof Since X is an ordered space, < is closed in X xX equipped with the product 
topology. Thus, > is also closed in X x X with the product topology and it follows 
that AX = < n > is closed in X x X with the product topology. But this is equivalent 
to X being Hausdorff (see Exercise 2.1.12). 
□
The following proposition is an important technical tool in the study of compact 
ordered spaces.
Proposition 2.14 Let X be a compact ordered space and C c X a closed subset 
of X. Then, TC and J,C are also closed. In particular, Tx and Jx are closed for all 
x e X.

2.3 Compact Ordered Spaces
43
Proof If C c X is closed in X, then C x X is closed in X x X equipped with the 
product topology. Now, as X is an ordered space, it follows that < is closed and 
thus (C x X) n < is closed in X x X. Consider the set
n2[(C x X) n <] = TC,
where n2: X x X ^ X is the projection on the second coordinate. By Proposition 
2.5 it follows that it is closed in X. Projecting (C x X) n > on the second coordinate 
shows that jC is closed. Finally, as X is Hausdorff, it is in particular T1 and thus the 
singletons x are all closed. It follows that Tx and jx are closed for all x e X. 
□
We can now derive the following very useful order-separation property for 
compact ordered spaces.
Proposition 2.15 Let X be a compact ordered space. For all x, y e X, if x y, 
then there are disjoint sets U, V c X with U an open up-set containing x and V an 
open down-set containing y.
Proof Let x, y e X with x y. Then, Tx and jy are disjoint. Also, by Proposition 
2.14, the sets Tx and jy are closed. Now, since X is compact ordered, it is compact 
Hausdorff and therefore also normal (see Exercise 2.1.15). Thus, there are open 
disjoint sets U, V c X with Tx C U and jy c V. Finally, let U' = (jUc)c and 
V' = (TVc)c, then one may verify that U' is an open up-set, V' is an open down-set, 
and we have
x e U' and y e V' and U' n V' = 0. 
□
To any compact ordered space, we now associate two T0 spaces. These spaces 
are not T1 as long as the order on X is non-trivial. To be specific, if (X, t, <) is a 
compact ordered space, then we define
tT = t n U(X, <)
and
tj = t n D(X, <) .
In other words, tT is the intersection of the topology t and the Alexandrov topology 
on (X, <) and tj is the intersection of the topology t and the dual Alexandrov 
topology on (X, <). Accordingly, tT and tj are indeed topologies on X. We will 
often denote the topological space underlying the original ordered space (X, t, <) 
simply by X, the space (X, tT) by XT, and the space (X, tj) by Xj.
Note that, if (X, t, <) is a compact ordered space, then so is (X, t, >). Thus, 
any property of the spaces X T and their relation to < implies that the order-dual 
property is true for the spaces X j and we will not always state both.
Proposition 2.16 Let (X, t, <) be a compact ordered space. Then, the specializa­
tion order of X T is < and in particular X T is a T0 space.

44
2 Topology and Order
Proof For each x e X, jx is closed in (X, t) and it is a down-set. Therefore, jx 
is closed in XT and it follows that iT(X, <) c tt. Also, clearly tt c U(X, <) = 
a(X, <) and thus the specialization order of XT is < (see Exercise 2.2.4). 
□
A crucial fact, given in the following proposition, which will enable us to come 
back to a compact ordered space X from X T , is the fact that XT and X j are inter- 
definable by purely topological means without using the data of the original compact 
ordered space.
Proposition 2.17 Let (X, t, <) be a compact ordered space. Then,
V e tj 
Vc e KS (XT).
Proof Note that C(Xj) = C(X,t) n U(X, <). Also, by definition, KS(XT) 
consists of those subsets of X that are both compact with respect to tT and belong 
to U(X, <). Thus, we need to show that if S e U(X, <), then S is closed relative 
to t if, and only if, it is compact relative to tT.
Let S e U(X, <).IfS is closed relative to t, then S is compact relative to t 
(see Exercise 2.1.7). But then it is also compact relative to the smaller topology 
tT as required. For the converse, suppose now that S is compact relative to tT and 
let y £ S. For each x e S, since x y, by Proposition 2.15, there are disjoint 
sets Ux, Vx c X with Ux an open up-set containing x and Vx an open down-set 
containing y . It follows that {Ux }x eS is an open cover of S relative to tT. Thus, by 
compactness, there is a finite subset F c S such that {Ux }x eF covers S. Let
V := Q{Vx | x e F}.
Then, V is disjoint from the union of {Ux}x eF and thus from S. Also, V is open 
relative to tj and y e V. That is, we have shown that S is closed relative to tj. □
We are now ready to introduce a class of (unordered) topological spaces called 
stably compact spaces. Stably compact spaces have a fairly complex definition but, 
as we will see, they are in fact none other than those spaces which occur as X T for 
X a compact ordered space.
Before we give the definition (Definition 2.18), we need to identify two more 
properties of spaces, both related to the interaction of compactness and intersec­
tion. First, we call a compact space coherent provided the intersection of any two 
compact-saturated subsets is again compact. A space is called well filtered provided 
for any filtering collection F of compact-saturated sets and any open set U we have
F c U 
=^ 
there exists K e F such that K c U.
One can show that if X is well filtered, then the collection of compact-saturated 
subsets of X is closed under filtering intersections (see Exercise 2.3.8). Therefore, 

2.3 Compact Ordered Spaces
45
if a space is both coherent and well filtered then the collection of compact-saturated 
sets is actually closed under arbitrary intersections. Also, notice that compact 
Hausdorff spaces are both cohereent and well filtered since the compact-saturated 
sets are just the closed sets.
Definition 2.18 A stably compact space is a topological space which is T0, com­
pact, locally compact, coherent, and well filtered.
Example 2.19 Any finite T0 space is stably compact. A particularly important 
stably compact space is the Sierpinski space
S = ({0,1}, {0, {1}, {0,1}}).
Note that the topology on S is equal to tt, where ({0,1}, t, <) is the compact ordered 
space described in Example 2.12.
Using Proposition 2.17 it is not hard to see that XT is stably compact whenever 
X is a compact ordered space. We will now show that this is in fact one direction of 
a one-to-one correspondence between compact ordered spaces and stably compact 
spaces. To this end we need the notion of the co-compact dual of a topology.
Let t be a topology on a set X. The co-compact dual of t, denoted Td, is the 
topology generated by the complements of compact-saturated subsets of (X, t). 
That is,
rd := {{Kc | K eKS(X,t)}).
The compact-saturated sets are always closed under finite unions, so the collection 
of their complements is closed under finite intersections and is thus a base for t*5. In 
the case of a stably compact space, the compact-saturated sets are also closed under 
arbitrary intersections (see Exercise 2.3.8), so the collection of their complements 
is already a topology and we have
rd = {Kc | K eKS(X,t)}.
Further, we define the patch topology, denoted tp , obtained from t to be
tp 1= t V td.
We can now show how to get back the topology of a compact ordered space X from 
the topology of X T.
Proposition 2.20 Let (X, t, <) be a compact ordered space. Then, (tT)d = t■*• 
and (tt)p = t.
Proof The first equality is a just a restatement of Proposition 2.17 in terms of the 
co-compact dual topology. Once we have this, we may observe that Proposition 
2.15 tells us, among other things, that tt V (tt)d = tT V t^ is a Hausdorff topology 

46
2 Topology and Order
which is contained in t. But, by Proposition 2.10, if a Hausdorff topology is below 
a compact topology, then in fact they are equal, so (tt)p = t as desired. □
Theorem 2.21 The assignments
(X,T, <) W (X,TT)
and
(X ,p) 
w (X ,pp <p)
establish a one-to-one correspondence between compact ordered spaces and stably 
compact spaces.
Proof It is left as Exercise 2.3.11 to show that if (X, t, <) is a compact ordered 
space, then XT is stably compact. Here, we show that if (X, p) is a stably compact 
space, then (X, pp, <p) is compact ordered.
As a first step, we show that <p is closed relative to the product topology induced 
by the patch topology. Let x, y e X with x £p y. Then, by definition of the 
specialization order, there is an open set U e p with x e U and y £ U .By 
local compactness of p there exist V e p and K c X which is compact such that 
x e V c K c U. Since TK is also compact and K c fK c U since U is an 
up-set in the specialization order, we may assume, without loss of generality, that 
K e KS(X, p). It follows that both V and Kc are in pp, that x e V, y e Kc, and, 
because V is an up-set and V n Kc = 0, we have
(V x Kc) n <p = 0.
Thus, we have shown that an arbitrary element (x, y) of the complement of <p lies 
in a basic open of the product topology which is disjoint from <p as required.
Next, we show that (X, pp ) is compact. By the Alexander subbase theorem, it 
suffices to show that covers by subbasic opens have finite subcovers. We use the 
subbase for pp given by
S = {Kc | K eKS(X,p)}u p.
Now, let CcSbe a cover of X . Define
CKS= {K e KS(X, p) | Kc eC}
and
Cp = C n p.
Then, the fact that C covers X implies that
Q Cksc U Cp.

2.3 Compact Ordered Spaces 
47
Notice that U = U Cp is open in (X, p). Let C^s denote the closure of Cks under 
finite intersections, that is,
C-K"S := {Pl L I L - Cks is finite} •
Note that C^s is, by compactness and coherence, a collection of compact-saturated 
subsets of (X, p), which is moreover filtering. Thus, by well-filteredness, it follows 
that there is a finite L-CKs with
n L 
u cp •
Now, this means that Cp is an open cover of the compact-saturated set Q L. By 
compactness there is a finite subcover C'p of Q L. This in turn is equivalent to 
saying that
C := {Kc | K e L} U C'p
is a finite subcover of the original cover C as required.
Thus, it follows that (X, pp, <p) is indeed a compact ordered space whenever 
(X, p) is a stably compact space.
Further, the combination of Proposition 2.16 and Proposition 2.20 implies that 
the composition of the two assignments gives the identity on compact ordered 
spaces. It remains to show that the reverse composition yields the identity on stably 
compact spaces. To this end, let (X, p) be a stably compact space. Since p - pp and 
p - U (X, <p), it follows that p - pp nU (X, <p ).Thefactthat pp nU (X, <p) - p 
follows from Exercise 2.3.13. 
□
While the correspondence of the above theorem provides an isomorphism for 
objects, the natural classes of maps for compact ordered spaces and stably com­
pact spaces are not the same. A natural notion of a structure-preserving map for 
stably compact spaces is that of a continuous function. For compact ordered 
spaces the natural notion of a structure-preserving map is that of a function 
which is simultaneously continuous and order preserving. It is not hard to see 
that every continuous and order-preserving map between compact ordered spaces 
is continuous for the corresponding stably compact spaces. However, the con­
verse is not true in general. In fact, the continuous and order-preserving maps 
between compact ordered spaces correspond to the so-called proper maps be­
tween stably compact spaces (see Exercise 2.3.15). We will show in Example 
5.22 of Chapter 5 that this correspondence formally yields an isomorphism of 
categories.
We finish this section by recording a useful “translation” between various 
properties of subsets of a compact ordered space and its corresponding stably 
compact space. The proof is left as an instructive exercise in applying Theorem 
2.21.

48
2 Topology and Order
Proposition 2.22 Let (X, t, <) be a compact ordered space with (X, t^) and 
(X, tT) the stably compact spaces of t-open up-sets and t-open down-sets, respec­
tively. For any subset S of X,
(a) 
S is saturated in (X, tT) if, and only if, S is an up-set in (X, t, <) if, and only 
if, the complement of S is saturated in (X, t^);
(b) 
S is closed in (X, tT) if, and only if, S is a closed down-set in (X, t, <) if, and 
only if, S is compact and saturated in (X, t^); and
(c) 
S is compact and open in (X, tT) if, and only if, S is a clopen up-set in 
(X, t, <) if, and only if, the complement of S is compact and open in (X, t^).
Exercises for Section 2.3
Exercise 2.3.1 Let (X, t, <) be a triple such that (X, t) is a topological space and 
(X, < ) is a poset. Prove that the following are equivalent:
(a) 
The order < is closed in (X, t) x (X, t).
(b) 
For every x, y e X, if x f y, then there exist open subsets U and V of (X, t)
such that x e U, y e V, and TU nJ,V = 0.
Exercise 2.3.2 Let f: X ^ Y be a morphism between ordered spaces. Prove that 
f is an order homeomorphism if, and only if, there exists a morphism g: Y ^ X 
such that g ◦ f = idX and f ◦ g = idY.
Exercise 2.3.3 Ordered variants of regularity and normality also hold for compact 
ordered spaces. In particular, prove that if C andD are closed subspaces of a compact 
ordered space with
TC niD = 0,
then there are disjoint sets U, V C X with U an open up-set containing C and V an 
open down-set containing D.
Exercise 2.3.4 Let X be a set and denote by 2 the set {0, 1 } .
(a) 
Show that the set 2X of functions from X to 2 is bijective with P(X).
(b) 
Show that the product topology on 2X, where 2 is equipped with the Sierpinski
topology, translates to the topology on P(X) given by the subbase
{nx | x e X},
where nx = {S C X | x e S}, and by the base {nF | F C X is finite}, where 
nF = {S c X | F c S}.
(c) 
Show that the product topology on 2X , where 2 is equipped with the discrete 
topology, translates to the topology on P(X) given by the subbase
{nx,Px | x e X},

2.3 Compact Ordered Spaces
49
where px = {S c X | x S}, and by the base
{nF A pG | F, G c X are finite},
where pG = {S c X | G n S = 0}.
Note. It will follow from Exercise 2.3.6 that the space 2X, equipped with the 
pointwise order, is a compact ordered space. Spaces of the form 2X are known 
as ordered generalized Cantor spaces, and we will encounter them again later 
in the book, see Exercise 3.3.9 and Definition 4.7.
Exercise 2.3.5 Show that R with its usual order and topology is an ordered space.
Show that the unit interval [0, 1] is a compact ordered space.
Exercise 2.3.6 Show that the set 2 = {0, 1}, equipped with the discrete topol­
ogy and the usual order, is a compact ordered space. Also, show that compact 
ordered spaces are closed under an arbitrary Cartesian product, where the product 
is equipped with the product topology and the coordinate-wise order. Conclude in 
particular that for any set X , the space 2X is a compact ordered space.
Exercise 2.3.7 Let (X, t, <) be a compact ordered space.
(a) 
Show that the inclusion U(X, <) ^ P(X) has a lower adjoint given by 
f( ): P(X) 
U(X, <) and an upper adjoint given by S ^ QSc)c.
(b) 
Conclude that Proposition 2.17 implies that the inclusion of KS(X^) into 
KS (X), which is equal to C (X), has a lower adjoint given by C ^ ^C and 
that the inclusion t^ ^ t has an upper adjoint given by U ^ (],Uc)c.
Note. We thank Jeremie Marques for suggesting this reformulation of Proposition 
2.17 in terms of upper and lower adjoints on opens and compact-saturated sets.
Exercise 2.3.8 (a) Show that if X is a well-filtered space, then the intersection of 
any filtering collection of compact-saturated sets is again compact saturated.
(b) 
Show that if a collection F of subsets of P (X) is filtering and closed under 
finite intersections (i.e., for any finite S c F, Q S e F), then F is closed 
under arbitrary intersections.
(c) 
Conclude thatifX is well filtered, compact, and coherent, then any intersection
of compact-saturated sets is again compact saturated.
Exercise 2.3.9 Show that if X is a compact Hausdorff space, then X is stably 
compact.
Exercise 2.3.10 Deduce Proposition 2.22 from Proposition 2.20 and Theorem 
2.21.
Exercise 2.3.11 Show that if X is a compact ordered space, then X^ is stably 
compact.
Exercise 2.3.12 Let (X, t) be a T0 space. Show that <T d = >T .

50
2 Topology and Order
Exercise 2.3.13 Let (X, t ) be a stably compact space, B c t, and K c KS (X ,t) 
such that, for all x, y e X, if x y, then there exist U e B and K e K such that 
x e U and y £ K. Show that B is a subbase for t.
Exercise 2.3.14 Show that continuous retracts of stably compact spaces are again 
stably compact. Here a subspace Y of a topological space X is called a (continuous) 
retract of X provided there exists a continuous function f: X ^ Y satisfying 
f(y) = yforally e Y.
Exercise 2.3.15 Let f: X ^ Y be a continuous function between topological 
spaces. We call f proper provided the following two properties hold:
• i f (C) is closed whenever C c X is closed; and
• f-1[K] is compact for any K e Y which is compact saturated.
Now, let X and Y be compact ordered spaces and denote the corresponding pair of 
stably compact spaces by XT, X^ and YT, Y^, respectively. Further, let f: X ^ Y 
be a function between the underlying sets. Show that the following conditions are 
equivalent:
(i) 
the function f , viewed as a map between compact ordered spaces, is contin­
uous and order preserving;
(ii) 
the function f , viewed as a map between the stably compact spaces XT and 
Y T , is proper; and
(iii) 
the function f , viewed as a map between the stably compact spaces X i and 
Y i , is proper.
Notes for Chapter 2
For readers who need further introduction to topology and for general topology 
references beyond what we have included here, we recommend a classical book 
on general topology such as Engelking (1989). For a comprehensive reference on 
topology and order we recommend Gierz et al. (2003).
The correspondence between stably compact spaces and compact ordered spaces 
in the form given in Theorem 2.21 originates with Gierz et al. (1980). More focused 
sources presenting the correspondence and the relation with the co-compact dual 
of a topology are Jung (2004) and Lawson (2011).

3
Priestley Duality
In this chapter, we show how to extend the duality for finite distributive lattices 
given in Chapter 1 to all distributive lattices. The two key ideas, due to Stone, are 
to generalize the join/meet-prime elements of the finite case to prime filters/ideals 
(Section 3.1), and to introduce topology on the structure dual to a distributive 
lattice (Section 3.2), which leads us to a dual equivalence or duality. The main 
technical tool is Stone’s prime filter-ideal theorem, Theorem 3.10. In this chapter, 
we elaborate a modern variant of Stone’s original duality, Priestley duality. The 
precise connection between Priestley’s duality and Stone’s original duality will be 
made in Theorem 6.4 in Chapter 6. After treating distributive lattice duality, we show 
in the final Section 3.3 how the more widely known duality for Boolean algebras 
follows as an easy consequence. Throughout the chapter, in between introducing 
the general concepts and proving results about them, we show how to compute dual 
spaces of several distributive lattices, as “running examples.” We encourage the 
reader to work through the examples and accompanying exercises in detail, as we 
believe this is crucial for developing an intuition for dual spaces.
3.1 Prime Filters and Ideals
Recall from Section 1.3 that every finite distributive lattice can be represented by 
the poset of its join-irreducible elements. The following example of an infinite 
distributive lattice shows why join-irreducibles cannot be used in general.
Example 3.1 Consider the lattice L = {±} ® (Nop)2, depicted in Figure 3.1. Every 
non-bottom element (m, n) in this lattice is the join of the two elements (m + 1, n) 
and (m, n + 1) strictly below it. Therefore, there are no join-irreducibles in L, 
J (L) = 0.
To find the correct notion that should replace “join-irreducible” in the case 
of infinite distributive lattices, we need to change our perspective from specific

52
3 Priestley Duality
Figure 3.1 A distributive lattice with no join-irreducible elements.
elements of the lattice to specific subsets of the lattice. If L is a distributive lattice 
and j e J (L), then j can be uniquely represented by the collection Fj of elements 
greater than or equal to j . Elements of Fj can be thought of as “approximations” of 
the element j , which grow in precision as one moves downward in the set Fj ; indeed, 
j is the infimum of this set Fj. In the case of infinite lattices, while join-irreducibles 
j themselves may fail to exist (Example 3.1), these “approximating sets” F will still 
exist. In distributive lattices, where join irreducible and join prime are equivalent 
notions, there is a simple notion of such an “approximating set,” namely that of a 
prime filter, defined as follows.
Definition 3.2 Let L be a distributive lattice. A subset F of L is called a filter if it 
is non-empty, an up-set, and for any a, b e L, if a e F and b e F, then a A b e F. 
A filter is called proper if F L, or, equivalently, ± £ F .A filter F is called prime 
provided that F is proper, and, for any a, b e L, if a V b e F, then a e F or b e F.
One way to think of filters in a lattice is that a filter represents an “idealized 
element,” in much the same way as Noether’s ideals in rings. From this point of 
view, a non-principal filter stands for a meet that does not exist in the lattice. Note 
that if S is a subset of a lattice and S c S', if infima of both sets exist, then 
A S' < A S. Thus, since taking a meet over a larger set yields a smaller element, 
it is natural to postulate the reverse inclusion on filters, as we will do here. The 
dual notion of ideal in a lattice is introduced in Definition 3.8; there, the order of 
(non-reversed) subset inclusion is the natural one, since ideals in a lattice stand for 
an idealized join, and taking joins over larger sets yield larger elements.
With the point of view that filters stand for idealized meets, prime filters stand for 
idealized join-prime elements. More precisely, in finite lattices, prime filters are in 
one-to-one correspondence with join-prime elements: To any join-prime element 
j, one may associate the prime filter Fj := t j of elements greater than or equal to 
j (see Exercise 3.1.3). Notice that, also here, j < j' if, and only if, Fj' c Fj. Thus, 
this correspondence is an isomorphism of posets if one equips the set of prime 

3.1 Prime Filters and Ideals
53
filters with the partial order of reverse inclusion. All this motivates the following 
definition of a partial order on the set of filters.
Definition 3.3 If F and F' are filters in a lattice L, we say that F is below F', 
F < F' if, and only if, F' is a subset of F. We denote by Filt(L) the poset of filters 
ofL, and by PrFilt(L) the poset of prime filters of L.
The following examples of infinite distributive lattices and their posets of prime 
filters will be used as running examples in this chapter.
Example 3.4 Write N ® 1 for the total order on the set N U {w} which extends N 
by setting n < w for all n e N U {w}. All prime filters of N ® 1 are principal; they 
are the sets of the form Fn := tn for n e (N ® 1) -{0}. Their order is the same as 
that of N ® 1; this is a highly exceptional case of a distributive lattice that is order­
isomorphic to its poset of prime filters, via the isomorphism that sends w to F(:1 and 
n e N to Fn+1. This lattice and its poset of prime filters are depicted in Figure 3.2.
• w
...
T 2
" 1
A o
• F.
...
F2
A F1
Figure 3.2 The distributive lattice N ® 1 and its poset of prime filters.
Now consider the Cartesian product (N ® 1)2 := (N ® 1) x (N ® 1). Since N ® 1 
is a distributive lattice, so is (N® 1)2. The prime filters of(N® 1)2 are the principal 
filters of the form F(n,m) = t(n, m) , where n = 0orm = 0 and not both. Indeed, 
for any (n, m) e (N ® 1 )2, (n, m) < (n, 0) V (0, m), so if t(n, m) is prime, then we 
must have m = 0orn = 0. The partial order on the prime filters is the order of the 
disjoint union, that is, (n, m) < (n', m') when either n < n’ and m = m’ = 0, or 
n = n' = 0 and m < m'.
The fact that the prime filters of a Cartesian product split as a disjoint union is 
not a coincidence (see Exercise 3.1.9).
Example 3.5 Consider the totally ordered set N ® Nop, the ordered sum of N and 
its opposite; that is, the underlying set is {(n, i) | n e N, i e{0, 1}}, and the order is 
given by (n, i) < (m, j) if, and only if, one of the following holds:
• i < j ;or
• i = j = 0andn < m;or
• i = j = 1andm < n.

54 
3 Priestley Duality
In this distributive lattice, every (n, i) (0,0) is join irreducible, so F(n,i) = T(n, i} 
is a prime filter. Moreover, there is one non-principal prime filter, F(:1 := {(n, 1) | 
n e N}. The order < on prime filters is inherited from the order on the lattice, and 
F(:, < F(n,i) if, and only if, i = 1; see Figure 3.3.
J (0,1)
" (1,1)
A (2,1)
FM
J (2,0)
<• (1,0)
A (0,0)
J F(0,1)
° F(1,1)
• F(2,1)
F(2, 0)
F(1,0)
Figure 3.3 The distributive lattice N © Nop and its poset of prime filters.
The following example shows explicitly that prime filters in distributive lattices 
generalize prime numbers. They are in fact closely related to prime ideals of rings 
(see Exercise 3.1.10).
Example 3.6 Consider the set N, equipped with the partial order | of divisibility, 
defined by n | m iff there exists q e N such that m = qn; in particular, n | 0for 
all n e N. The partial order (N, |) is a bounded distributive lattice: It has 1 as its 
bottom, 0 as its top, and for any m, n e N, m A n is the greatest common divisor of 
m and n, and m V n is the least common multiple of m and n.
The prime filters of (N, |) are F0 := {0}, and the sets Fpk := {n e N : pk | n}, for 
every prime number p and k > 1. It is easy to verify that the Fpk are indeed prime 
filters (see Exercise 3.1.8); we show that every prime filter is of this form. Suppose 
that F is a prime filter of (N, |) and F + F0. Let m be the minimal non-zero element 
of F with respect to the usual total order on N. We show first that F = Tm, where 
the up-set is taken with respect to the divisibility order. Clearly, Tm £ F. For the 
converse inclusion, let n e F be arbitrary, n > 0. Then, n A m e F since F is a 
filter. The greatest common divisor of n and m is non-zero and < m, and therefore 
equal to m, by minimality of m and thus m | n. We now show that m = pk for some 
prime p and k > 1. First, note that m > 1 since F is proper. Pick a prime divisor 
p of m and pick k maximal such that pk | m. Then, m = pk V pm, so, since F is a 

3.1 Prime Filters and Ideals
55
prime filter, we must have either pk e F or pm e F. But pm < m, so it cannot be 
an element of F by minimality of m. Thus, pk e F, and 0 < pk < m, so we get 
m = pk , again by minimality of m.
The partial order on the set of prime filters is given by, for any p, q prime and 
k,t > 1, Fpk < F0, and Fpk < Fqt if, and only if, p = q and k < {; see Figure 3.4.
• Fo
F4 O 
F9o 
F^o 
...
• 
• 
•
F2 
F3 
F5
Figure 3.4 The poset of prime filters of (N, |).
Example 3.7 Consider the set L of those subsets of the real unit interval [0, 1] that 
can be written as a finite union of open rational intervals, that is, as a finite union 
of sets of the form (p, q), [0, q) or (p, 1], with p, q e Q n [0,1]. Note that, since a 
finite intersection of open rational intervals is again an open rational interval, L is a 
sublattice ofP([0, 1]) under the inclusion ordering, and therefore itis in particular 
a distributive lattice. There are three kinds of prime filters in the distributive lattice 
L:
• for every q e [0, 1], Fq := {U e L | 
q e U};
• for every q e [0,1) n Q, Fq := {U e L | for some q' > q, (q, q') c U}; and
• for every q e (0,1] n Q, Fq- := {U e L | for some q' < q, (qq) c U}.
One may prove (see Exercise 3.1.7) that every prime filter of L is of one of the
above forms, that each Fq is maximal in the partial order, while Fq+ and Fq- are 
strictly below Fq . The partial order is depicted in Figure 3.5.
In the rest of this section, we will substantiate the claim that any distributive lattice 
contains “enough” prime filters. For this purpose, and also for other applications 
to follow, it will be convenient to introduce the order-dual notion to prime filters: 
prime ideals.
Definition 3.8 Let L be a distributive lattice. A subset I of L is called an ideal if 
it is non-empty, a down-set, and for any a, b e L, if a e I and b e I, then a V b e I. 
An ideal I is called proper if I L, or, equivalently, T £ I .An ideal I is called

F0
Fq
F- 
q
F+
F0
F+ 
q
56 
3 Priestley Duality
q e Q 
r e R - Q
Fr 
F1
■ •..........................................
F1-
Figure 3.5 The poset of prime filters of the rational intervals in [0, 1].
prime provided that I is proper, and, for any a, b e L, if a A b e I, then a e I or 
beI.
Notice that a subset I c L is a (prime) ideal if, and only if, I is a (prime) filter in 
Lop. Thus, it follows by order-duality from Exercise 3.1.3 that, for a finite lattice L, 
the prime ideals in L are in a one-to-one correspondence with meet-prime elements 
of L . This correspondence associates, to any meet-prime element m of L, the prime 
ideal Im := jm of elements less than or equal to m. Notice that m < m' if, and only 
if, Im c Im,. This motivates the following definition of a partial order on the set 
of ideals. If I and I' are ideals in a lattice L, we say that I is below I', I < I', if, 
and only if I is a subset of I'. We denote by Idl(L) the poset of ideals of L, and by 
PrIdl(L) the poset of prime ideals ofL.
Just as join-prime and meet-prime elements are complementary notions (see 
Exercise 1.3.7 in Chapter 1), prime filters and prime ideals are complementary, in 
the following (literal) sense.
Lemma 3.9 Let L be a lattice and F c L. The following are equivalent:
(i) 
The set F is a prime filter.
(ii) 
The set I := L - F is a prime ideal.
(iii) 
The characteristic function xF : L ^ 2, which sends an element a of L to 1 
if a e F, and to 0 if a £ F, is a lattice homomorphism.
Exercise 3.1.11 asks you to prove Lemma 3.9. We note also that under the 
equivalence given in this lemma, the partial order on prime filters, which is by 
definition the reverse subset inclusion order (Definition 3.3), transfers to the usual 
subset inclusion order on prime ideals. Note also that, for the characteristic functions 
corresponding to prime filters F and F', we have that F' < F if, and only if, F c F' 
if, and only if, xF < XF in the pointwise ordering on functions.
The main result about prime filters and prime ideals, which we will prove now, 
is that there are “enough” of them in any distributive lattice, in the following 
sense.

3.1 Prime Filters and Ideals
57
Theorem 3.10 (Stone’s prime filter-ideal theorem) Let L be a distributive lattice. 
If F is a filter in L and I is an ideal in L such that F n I = 0, then there exists a 
prime filter G in L such that F c G and G n I = 0.
Proof Consider the partially ordered set
S := {G e Filt(L) | F c G and G n I = 0},
ordered by inclusion. This set S is non-empty, because it contains F, and if CcS 
is a non-empty chain in S, then GeCG is a filter (see Exercise 3.1.12), and it 
belongs to S. By Zorn’s lemma (Lemma 2.7), pick a maximal element G in S.We 
prove that G is prime. By Lemma 3.9, we may show equivalently that J := L - G 
is a prime ideal. Since G is a filter disjoint from I, we immediately see that J is 
a down-set containing I, and hence in particular non-empty, and if j 1 A j2 e J, 
then j1 e J or j2 e J . It remains to show that J contains the join of any two of its 
elements. Let a 1, a2 e J. We use the filters generated by G U {a 1} and G U {a2} (see 
Exercise 3.1.13). For i = 1, 2, the set
Gi := <G U {ai})filt = {b e L | there exists g e G such that g A ai < b}
is a filter that strictly contains G. By the maximality of G in S , Gi must intersect I 
non-trivially. Therefore, for i = 1, 2, pick gi e G such that gi A ai e I.
Define g := g1 A g2. Then, using distributivity,
g A (a 1 V a2) = (g A a 1) V (g A a2) < (g1 A a 1) V (g2 A a2).
Since gi A ai e I for i = 1,2, it follows from this that g A (a 1 V a2) e I. Therefore, 
since J contains I,wehaveg A (a1 V a2) e J. Since G is a filter, we have g e J 
or a1 V a2 e J. However, g e J is impossible since g1 e G and g2 e G. Thus, 
a 1 V a2 e J, as required. 
□
We make note of the fact that the proof of Theorem 3.10 relies on Zorn’s lemma, 
which we already encountered in the context of the Alexander subbase theorem in 
Chapter 2. In fact, in Zermelo-Fraenkel set theory without choice, the statement of 
Theorem 3.10 is strictly weaker than the axiom of choice. It is equivalent to both 
the ultrafilter theorem for Boolean algebras and to the Alexander subbase theorem 
(see, for example, Howard and Rubin, 1998).
From Theorem 3.10, we obtain the following representation theorem for dis­
tributive lattices, due to Stone (1937b).
Theorem 3.11 (Stone representation for distributive lattices) Let L be a lattice. 
The function
(-): L ^ D(PrFilt(L))
a ^ a := {F e PrFilt(L) | a e F}

58
3 Priestley Duality
is a well-defined lattice homomorphism. Moreover (-) is injective if, and only if, 
L is distributive. In particular, any distributive lattice L embeds into the lattice of 
down-sets of the poset PrFilt(L).
Proof We leave it as Exercise 3.1.14 to prove that (-) is a well-defined lattice 
homomorphism. If it is moreover injective, then L is distributive, as L is then 
isomorphic to a sublattice of a distributive lattice. Conversely, suppose that L is 
distributive and let a, b e L be such that a b. Then, the filter F := Ta generated 
by a is disjoint from the ideal I := jb generated by b. By Theorem 3.10, pick a 
prime filter G containing F and disjoint from I. Then, G e a -b, so a . 
□
Note that we use the same notation, (-), here as the notation we used in Section 
1.3 for the function from a finite lattice L to the lattice of down-sets of join- 
irreducible elements of L . Indeed, if L is a finite lattice, then for any a e L, the 
set a defined here in Theorem 3.11 and the set a in Section 1.3 correspond to each 
other, under the correspondence between prime filters and join-prime elements that 
holds in finite lattices (see Exercise 3.1.3).
Theorem 3.11 is less satisfactory than the representation theorem for finite dis­
tributive lattices, because it does not give an isomorphism, but only a lattice em­
bedding of a distributive lattice into a lattice of down-sets. In order to get an 
isomorphism, and then a full duality, we will introduce a topology on the set of 
prime filters in the next section.
Exercises for Section 3.1
Exercise 3.1.1 Let L be a lattice and F c L. Prove that the following are 
equivalent:
(a) 
The set F is a filter.
(b) 
For every finite S c L, we have /\ S e F if, and only if, S c F.
(c) 
The characteristic function xF : L ^ 2 of F preserves finite meets.
Exercise 3.1.2 Let L be a lattice.
(a) 
Prove that a subset I of L is an ideal if, and only if, I is a directed down-set.
(b) 
Conclude that F c L is a filter if, and only if, F is a filtering up-set.
Exercise 3.1.3 Let L be a lattice.
(a) 
Prove that, for any a e L, the set Fa := Ta = {b e L | a < b} is a filter.
(b) 
Prove that, for any join-prime element j of L , the set Fj = T j is a prime filter.
(c) 
Prove that, for any prime filter F , if the infimum of F exists in L and belongs
to F, then jF := /\ F is join prime.

3.1 Prime Filters and Ideals
59
(d) 
Prove that, if L is finite, then the assignments j ^ Fj and F ^ jF constitute 
a well-defined bijection between the poset of join-prime elements of L and 
the poset of prime filters of L, ordered by reverse inclusion.
Exercise 3.1.4 Prove that every prime filter of the lattice N ® Nop of Example 3.5 
is either principal or equal to F(:1.
Exercise 3.1.5 Prove that every prime filter of the lattice (N ® 1)2 of Example 3.4 
is principal, and thus, by the argument given in that example, of the stated form.
Exercise 3.1.6 Consider the total order Q n [0,1]. Show that there are three types 
of prime filters in this distributive lattice:
• for every q e Q n (0,1], the principal prime filter Fq = tq;
• for every q e Q n [0,1), the prime filter Gq := tq -{q}; and
• for every irrational r e (0, 1), the prime filter Hr := {q e Q n [0, 1] | r < q}.
Make a diagram of the partial order on these prime filters.
Exercise 3.1.7 Show that the poset of prime filters of the lattice of finite unions 
of rational intervals from Example 3.7 is as stated. You may proceed as follows:
(a) 
Show that, for every q e [0, 1], Fq is a prime filter which is minimal in the 
inclusion ordering (and thus maximal in the poset of prime filters).
(b) 
Show that, for every prime filter F, there exists a unique q e [0, 1] such that 
Fq c F. Hint. For existence, consider the intersection of the closures of the 
U e F and use the compactness of [0, 1] in the topology generated by L. For 
uniqueness, use that any two distinct points in [0, 1] have a rational point in 
between.
(c) 
Show that, for every irrational r e (0, 1) ,ifF is a prime filter and Fr c F, 
then F = Fr .
(d) 
Show that, for every rational q e (0, 1), Fq- and Fq+ are maximal prime filters 
in the inclusion order.
(e) 
Using the previous item, show that, if F is a prime filter and Fq c F for some 
q e (0, 1) , then F = Fq- or F = Fq+ .
Exercise 3.1.8 Prove that, for any prime number p and k > 1, the set {n e N : 
pk | n} is a prime filter in (N, |).
Exercise 3.1.9 Let L and M be distributive lattices. Prove that the prime filters of 
L x M are exactly the filters that are either of the form F x M for some prime filter 
F of L, or of the form L x G for some prime filter G of M. Conclude that the poset 
of prime filters of L x M is the disjoint union of the posets of prime filters of L and 
of M .

60
3 Priestley Duality
Exercise 3.1.10 (This exercise requires familiarity with basic ring theory; see the 
article Banaschewski (1996) and the monograph Dickmann et al. (2019) for more 
about the link between commutative algebra and lattice theory.)
Let R be a commutative ring with unit. Recall that a ring ideal I of R is a subgroup 
of R such that, for every i e I and r e R, ri is in I. For any subset S c R, there is a 
smallest ring ideal containing S, denoted here (S)R, and consisting of all elements 
that can be written as in=1 risi for some r1,...,rn e R and s1,...,sn e S. A ring 
ideal I is called prime if I R and, whenever r, s e R such that rs e I, either r e I 
or s e I. A ring ideal I is called radical if, for every r e R,ifrn e I for some 
n > 1, then r e I. (In this exercise, we use the expressions “(prime) ring ideal” and 
“(prime) lattice ideal” to avoid confusion between the notions. By “radical ideal” 
we always mean radical ring ideal.)
(a) 
Prove that, for any set S, the set
VS := {r e R | rn e {S)R for some n > 1}
is the smallest radical ideal containing S, called the radical ideal generated 
by S.
(b) 
By a finitely generated radical ideal, we mean an ideal of the form VS, where S 
is a finite subset of R. Prove that the collection RIdlf g(R) of finitely generated 
radical ideals of R is a distributive lattice under the inclusion order.
(c) 
Prove that, if P is a prime ring ideal of R, then
<f>(P) := {I e RIdlfg (R) | I c P}
is a prime lattice ideal of RIdlf g(R).
(d) 
Prove that ^ is an order-isomorphism between the prime ring ideals of R and 
the prime lattice ideals of RIdlfg (R).
Exercise 3.1.11 Prove Lemma 3.9.
Exercise 3.1.12 Let D c Filt(L) be a directed collection of filters in the inclusion 
order, that is, D is non-empty, and if G 1, G2 e D, then there exists G0 e D such 
that G 1 U G2 c G0. Prove that IJGeD G is a filter. Conclude in particular that the 
union of a non-empty chain of filters is a filter.
Exercise 3.1.13 Let L be a lattice.
(a) 
Prove that any intersection of a collection of filters is a filter. Conclude that, in 
particular, for any S c L , there exists a smallest filter containing S. We refer 
to this filter as the filter generated by S and denote it by <S )filt.
(b) 
Prove that, for any S c L,
{Sfit = |b e L | there exists finite T c S such that T < b| .

3.2 Priestley Duality
61
(c) 
Prove that, if G is a filter and a e L, then
<G U {a })fiit = {b e L | there exists g e G such that g A a < b}.
Conclude that, if I is a down-set which intersects <G U {a})filt non-trivially, 
then there exists g e G such that g A a e I .
(d) 
Formulate and prove analogous results for the ideal generated by a set S, 
notation <S)idl.
Exercise 3.1.14 Prove that, for any lattice L, the function (-) defined in Theorem 
3.11 is a well-defined lattice homomorphism.
Exercise 3.1.15 Let L := {a c N | a is finite or a = N}, the distributive lattice of 
finite subsets of N and N itself.
(a) 
Show that, for each n e N, the set xn := {a e L | n e a} is a prime filter ofL.
(b) 
Show that x^ := {N} is a prime filter of L.
(c) 
Show thatPrFilt(L) = {xn | n e N} U {xTO}.
(d) 
Explicitly describe the partial order < on PrFilt(L) .
Exercise 3.1.16 A subset a of a set X is called co-finite (in X) if X - a is finite. Let 
M := {a c N | a is finite or co-finite}, the distributive lattice of finite or co-finite 
subsets ofN, and let L be the lattice defined in Exercise 3.1.15.
(a) 
Prove that, for any lattice homomorphism h: L ^ 2, there exists a unique lat­
tice homomorphism h': M ^ 2 that extends h. Hint. Use Exercise 1.2.11(b).
(b) 
Write down an explicit bijection between PrFilt(L) and PrFilt( M). Hint. Use 
item (a) and Lemma 3.9.
(c) 
Describe the partial order < on PrFilt(M). Which of the two directions of the
bijection in the previous item is order preserving?
Exercise 3.1.17 Deduce from Stone’s prime filter-ideal theorem that any filter F 
in a distributive lattice L equals the intersection of all prime filters G that contain F.
3.2 Priestley Duality
In this section, we introduce a topology on the poset PrFilt(L) that makes it into 
a special kind of compact ordered space, called a Priestley space, after H. A. 
Priestley, who introduced this topology in Priestley (1970). We will then show 
that the poset PrFilt(L) , equipped with this topology, completely represents the 
distributive lattice L. Finally, we will also prove that homomorphisms between 
distributive lattices correspond to continuous order-preserving functions between 
their dual spaces.

62 
3 Priestley Duality
The Priestley Dual Space of a Distributive Lattice
Definition 3.12 Let L be a distributive lattice. The Priestley topology, tp, on the 
set PrFilt(L) is the topology generated by the subbase
S := {a | a e L} U {(b)c | b e L}.
This definition makes PrFilt(L) into a special kind of compact ordered space, as 
we prove now.
Proposition 3.13 Let L be a distributive lattice.
(a) 
The topology tp on PrFilt(L) is compact.
(b) 
For any F, G e PrFilt(L), if F 
G, then there exists a clopen down-set U in
PrFilt(L) such that G e U and F <£ U.
In particular, (PrFilt(L), tp, <) is a compact ordered space.
Proof (a) By the Alexander subbase theorem (Theorem 2.6), it suffices to prove 
that any cover C c S of PrFilt(L) by open sets from the subbase has a finite 
subcover. Let S, T c L be such that
PrFilt(L) = J a U J (b)c.
Rephrasing slightly, this equality says that every prime filter G of L that contains 
the set T must intersect the set S non-trivially. In particular, writing F for the filter 
generated by T and I for the ideal generated by S , every prime filter G of L that 
contains F must intersect I non-trivially. By Theorem 3.10, the intersection of F and 
I is non-empty, so pick c e F n I .By Exercise 3.1.13, pick finite T' c T and finite 
S' c S^such that A T' < c and c < V S', In particular, A T' < V S', and hence, 
since (-) is a lattice homomorphism (Theorem 3.11), we have p|beT' b c |JaeS a. 
Rewriting this subset inclusion, we conclude that
PrFilt(L) = J a U J (b)c.
(b) Let F, G e PrFilt( L) be such that F G .By definition, there exists a e L 
such that a e G and a £ F. Thus, U := a is a clopen down-set that contains G but 
not F .
By item (b) and Exercise 2.3.1, (PrFilt(L), <, tp) is in particular a compact 
ordered space. 
□
Proposition 3.13 gives rise to the following definitions.
Definition 3.14 An ordered topological space (X, t, <) is called totally order- 
disconnected (TOD) if, for every x, y e X, whenever x y, there exists a clopen 

3.2 Priestley Duality
63
down-set U in X such that y e U and x £ U .A compact ordered space which is to­
tally order-disconnected is called a Priestley space, sometimes also a CTOD space.
The TOD property yields the following stronger version of the order normality 
property of compact ordered spaces (Exercise 2.3.3) for Priestley spaces.
Proposition3.15 Let C and D be closed sets in a Priestley space X .If J,C nt D = 0, 
then there exists a clopen down-set K c X such that C c K and K n D = 0.
A proof of Proposition 3.5 is outlined in Exercise 3.2.7. We now examine some 
Priestley topologies in our running examples.
Example 3.16 Recall from Example 3.4 the lattice N ® 1 and its poset of prime 
filters X := {F1, F2,...} U {F„}, see Figure 3.2. For any n e N, n is the finite subset 
{Fi | 1 < i < n}, and co = X .It follows that, for every 1 < n < w, the singleton {Fn} 
is equal to n - n - 1, and is therefore clopen in the Priestley topology. Therefore, 
every subset of X -{F„} is open. If, on the other hand S c X and F„ e S, then 
S is open if, and only if, S is co-finite (see Exercise 3.1.16). This topology is 
homeomorphic to the one-point compactification of the discrete countable space 
{F1, F2,...}, also see Exercise 3.2.2 and Example 3.46.
As shown in Example 3.4, the lattice (N ® 1)2 has as its dual poset the disjoint 
union of X with itself. For (n, m) e (N ® 1)2, the clopen down-set (n, m) is equal to
{F(n',0) | n' < n} U {F(0, m<) | m' < m}.
It follows that the topology is also the disjoint union of the topologies on the two 
copies of X , that is, a subset U c X + X is open if, and only if, its intersection with 
both the “left” and “right” copy of X is open (see Exercise 3.2.3).
Example 3.17 We continue Example 3.5 of the lattice N ® Nop, whose dual poset 
was depicted in Figure 3.3. For n e N, we have that
(nT0! = {F(k,0) | k < n}
and
(nV. = {F(k,1) | k > n} U {/,.} U {F(m,0) | m e N}.
It follows that, for n > 1,
{F(n,0)} = (n?0 ) - (^T+TO)
and, for n > 0,
{F(n,1)} = (n, 1) - (n - 1,1),
so that again all the singleton sets except for {F(J,} are open in the Priestley topology. 
As in the previous example, one may again prove that the topology is homeomorphic 

64
3 Priestley Duality
to the one-point compactification of the discrete countable space {F(k,i) | k e N, i e 
{0, 1}}. The only thing distinguishing this space from the space X in the previous 
example is the partial order.
Example 3.18 We continue Example 3.6 of the lattice of divisibility (N, |), whose 
dual poset was depicted in Figure 3.4. Clearly, 0 is the entire space, and for any 
n > 1, we have
n = {Fpk : Pk I n,P prime, k > 1}.
In particular, for any prime p and k > 1, we have that
{Fp k} = Pk - pk-1,
so all singletons except {F0} are clopen. Since n is finite for every n > 1, it follows 
again that a clopen set K in the Priestley topology contains F0 if, and only if, it is 
co-finite, and the topology on the dual poset is again the one-point-compactification 
of a discrete countable space.
Example 3.19 We continue Example 3.7 of the lattice of finite unions of rational 
intervals, whose dual poset was depicted in Figure 3.5. As a useful notation for the 
rest of this example (also see Notation 3.20), for every r e [0, 1], we denote the 
prime filter Fr defined in Example 3.7 simply by r, and we write r+ and r- for the 
prime filters that were denoted by Fr+ and Fr-, respectively, whenever they exist. 
Also, for every r e [0, 1], let us write Xr for the set of prime filters “located” at r, 
that is,
{r} 
if r is irrational,
X = I {r, r+, r-} if r e (0,1) n Q, 
Xr := {0, 0+} 
ifr=0,
{1, 1} if r = 1.
Now, toward describing the Priestley topology on the poset X = 
r e[0,1] Xr, note
that, for any q e Q n [0, 1],
[0T7■ = U Xr U{q-},
O = {q+} U |J Xr, 
q<r
and, hence,
[0, q)c = {q} U (q, 1],
c
(q, 1] = [0, q) U{q}.

3.2 Priestley Duality
65
It follows that, in the Priestley topology, for any q e Q n [0,1], the singleton {q} 
is clopen, since it is equal to [0, q) n (q, 1] . In fact, the collection of clopen sets 
in the Priestley topology is generated as a sublattice of P (X) by the sets [0, q), 
(q, 1], and {q}, for q e Q n [0,1]. To see this, note that the complement of any of 
the generating sets is equal to a finite union of other generating sets: for [0, q) and 
(q, 1] this was already shown above, and for {q}, note that
{q}c = [0T?) U O.
Now note also that the sublattice generated by the sets of these three forms is equal 
to the collection of finite unions of sets (p, q), a finite set of rationals and [0, a) and 
(b, 1]. For an open subset U in the Euclidean topology on [0,1], write
U := 
{I | I a rational open interval in [0,1] such that I c U},
a Priestley open down-set of X . It then follows that any open set of the Priestley 
topology can be written as a union U U V, where U is an open subset of [0,1] in 
the Euclidean topology, and V is a subset of Q n [0, 1]. It is instructive to give a 
direct proof that this is indeed a compact topology on X ; such a proof is outlined 
in Exercise 3.2.10.
In Definition 3.12 we consider a topology on the set of prime filters of a lattice 
L. By Lemma 3.9, this set is in bijection with the set of prime ideals and with 
the set of homomorphisms of the lattice into 2. As a consequence, this topology 
may be translated to any of these three sets. Indeed, in the literature, depending on 
the time period, or the applications to be treated, the dual space of a distributive 
lattice may be based on any of these three sets of points. For some applications, it 
is useful to be able to switch flexibly between these choices. In this book, we will 
see that, for example, in Section 4.2. This is the motivation for working with what 
we will call the neutral dual space, which has a “neutral” underlying set of points 
that comes equipped with named bijections to the prime filters, the prime ideals, 
and the homomorphisms into 2 that are connected as in Lemma 3.9.
Notation 3.20 (The neutral dual space) Let L be a distributive lattice. We fix a 
set XL of the same cardinality as PrFilt(L), PrIdl(L) and HomDL ( L, 2), and we fix 
three bijections:
F(-): Xl ^ PrFilt(L);
I(-): Xl ^ PrIdl(L); and 
h(—): Xl ^ HomDL (L, 2),
so that, for all x e XL and for all a e L , we have
a e Fx 
^ ' a Ix 
^ ' 
h x(a) = T.

66
3 Priestley Duality
Thus, to any element x e XL there corresponds a unique prime filter Fx of L, a 
unique prime ideal Ix of L, which is the set complement of Fx in L, and a unique 
homomorphism hx: L ^ 2, which is the characteristic function of Fx. Elements of 
the set XL are called points of the distributive lattice L, and are usually denoted by 
lowercase letters toward the end of the alphabet.
We define a partial order < on XL by
x < y if, and only if, Fx 2 Fy, 
if, and only if, Ix 2 Iy, and 
if, and only if, hx > hy pointwise.
For any a e L, the set a is defined by
a = {x e X | a e Fx}
= {x e X | a t Ix}
= {x e X | hx(a) = T}.
The Priestley topology, tp, on XL is the topology generated by the subbase {a | a e 
L} U {bc | b e L}.
Definition 3.21 Let L be a distributive lattice. The tuple (XL, <, tp) is called the 
Priestley dual space of L.
Remark 3.22 (On the definition of the order on the dual space) Our definition 
of the order on the Priestley dual space is aligned with the point of view on prime 
filters as idealized join-prime elements of the lattice; also see our remarks preceding 
Definition 3.3. However, in some literature, including the original paper (Priestley, 
1970), the ordering on the Priestley dual space of a lattice is the opposite of the one 
we give here. While this is ultimately a matter of convention, it is also a potential 
source of confusion, that the reader should be aware of, and we now explain in some 
detail why the two choices naturally exist.
Indeed, since for any distributive lattice L, the reverse lattice Lop is also a 
distributive lattice, and the poset of prime filters of Lop is the opposite poset of the 
prime filters ofL, both (XL, <, tp) and (XL, >, tp) are Priestley spaces. To build a 
dual equivalence between distributive lattices and ordered topological spaces, one 
needs to associate one of these two spaces to L and the other to Lop, but there is 
a free choice as to which space is associated to which lattice. With the choice we 
make here, L is isomorphic to the clopen down-sets of its Priestley dual space; with 
the other choice, L will be isomorphic to the clopen up-sets.
While our choice is more natural relative to our view on prime filters and in 
comparison with the case of finite distributive lattices, where the dual is a subset of 
the lattice and is thus already equipped with a partial order, there are settings where 

3.2 Priestley Duality
67
putting the opposite order on the dual space can be a more natural choice. This is 
the case in particular in the more categorical point of view on the points of the dual 
space as the set of homomorphisms into 2, and also relative to the convention for 
the specialization order in topology, where open sets are up-sets.
In this book, we mostly focus on the choice given in the above definition, and we 
notify the reader when we need to diverge from this choice; in particular, this will 
be the case in Chapters 6 and 7, in order to make the link with existing literature on 
frames and domains, where the other choice is more prevalent; see also Remark 7.3.
Priestley Representation
We can use the Priestley topology to exactly identify which down-sets lie in the 
image of the map (-) from the representation theorem for distributive lattices, 
Theorem 3.11.
Proposition 3.23 Let L be a distributive lattice. The image of (-): L ^ D(XL) 
consists exactly of those down-sets in XL that are clopen in the Priestley topology.
Proof It is clear from the definition of the Priestley topology that a is clopen for 
every a e L. Conversely, let A be an arbitrary clopen down-set of XL. For every 
y e A and x £ A, since A is a down-set, we have that x y, so, by definition 
of <, pick an element bx,y e L such that bx,y e Fy and bx,y £ Fx. In particular, 
for every y e A, the collection {(bx,y)c | x £ A} is a cover of Ac. Since A is 
open, its complement, Ac , is closed, and hence compact. For every y e A, pick a 
c 
c 
~n
finite subcover {(bxi,y)c | i = 1,...,n} of Ac. Then, p|n=1 bxi,y £ A, so, defining 
ay := /\n=1 bxi,y, we have y e ay £ A. Doing this for every y e A, we obtain a 
cover {ay | y e A} of A, which is closed, and hence compact. Pick a finite subcover 
{ayi | j = 1,..., m} of A. Defining a := Vn=1 ayj, we have A = a, as required. □
Since (-) was already shown to be a lattice embedding in Theorem 3.11, we 
obtain the following representation result for distributive lattices.
Corollary 3.24 Any distributive lattice is isomorphic to the lattice of clopen 
down-sets of its Priestley dual space.
For a Priestley space X, we denote by ClpD (X) its lattice of clopen down-sets. 
Proposition 3.23 may then be rephrased as: For any distributive lattice L, the map (-) 
is an isomorphism from L to ClpD(X). This is a generalization of Proposition 1.21 
to arbitrary distributive lattices. Indeed, when L is a finite distributive lattice, then 
its Priestley dual space is order-homeomorphic to the finite poset J (L) equipped 
with the discrete topology, so the clopen down-sets are just the down-sets, and 
Corollary 3.24 then gives L = D(J(L)).

68
3 Priestley Duality
Analogously to Proposition 1.22 for finite posets, we will now also prove that 
every Priestley space is order-homeomorphic to its double dual. A basic idea in 
topology1 is that for any T0 topological space (X, p), the set N (x) of open neigh­
borhoods of a point x can be used to uniquely pinpoint x among all the points 
in X. We now apply this idea in the setting of Section 2.3, where p = tj, the 
topology of open down-sets of some ordered topological space (X, t, <). We will 
show that, for a Priestley space, it actually suffices to consider the intersection of 
N(x) with the clopen down-sets of (X, t, <). A crucial step for proving this is the 
following.
Lemma 3.25 Let (X, t, <) be a Priestley space. For any prime filter F of the 
lattice ClpD(X) of clopen down-sets of X, the intersection F is a principal 
down-set in X, that is, there exists a point x e X such that f) F = jx.
Proof Let F be a prime filter of ClpD(X) and write I for the complement of F, 
which is a prime ideal of ClpD (X). We first show that the collection of clopen sets
C := F U {Kc | K e I}
has the finite intersection property. Indeed, if for any finite subsets S c F and 
T c I, we would have p S disjoint from p{Kc | K e T}, then this would give 
Pl S c U T, which is clearly impossible since F and I are disjoint. Since the space 
X is compact, we can therefore (see Exercise 2.1.6) pick a point x e p C. Then, in 
particular x e F, and since F is a down-set, we have jx c F. It remains 
to prove that Fcjx.Lety e F. To show that y < x, by (the contrapositive 
of) total order disconnectedness, it suffices to prove that, for any K e ClpD(X), if 
x e K, then y e K.LetK e ClpD(X). If x e K, then, since x e {Kc | K eI}, 
we have that K £ I .It follows that K e F and thus y e K. 
□
We now get the following “double dual” result for Priestley spaces.
Proposition 3.26 Let (X, t, <) be an ordered topological space. Write L for the 
lattice of clopen down-sets of X, and, for any x e X, define
B(x) := {K e L | x e K} .
We have the following properties:
(a) 
The set B(x) is a prime filter of L for every x e X.
(b) 
The function ft: X ^ XL, defined by sending a point x e X to the unique point
fi (x) e XL with Fp(x) = B (x), is a continuous order-preserving function, 
satisfying ft-1 (K) = K for any K e L.
1 This same idea will again be central, in the setting of sober spaces, in Chapter 6 (see Definition 6.8).

3.2 Priestley Duality 
69
(c) 
The function ft is an order homeomorphism if, and only if, (X, t, <) is a 
Priestley space.
Proof (a) Notice that XL e B (x) and for any K 1, K2 e L, we have K 1 n K2 e B (x) 
if, and only if, both K 1 and K2 are in B (x), so B (x) is a filter. Clearly 0 £ B (x), 
and if K 1 U K2 e B(x), then x e K 1 U K2, so x e Ki for some i e {1,2}. This shows 
that B (x) is prime.
(b) Note first that, for any K e L and x e X we have
ft (x) e K <> K e B (x) <> x e K .
In other words, ft-1 (K) = K. Thus, by the definition of the Priestley topology on XL, 
ft is a continuous function. We now show that ft is order preserving. Let x, y e X 
with x < y. Then, if K is a clopen down-set that contains y , then it also contains x . 
Thus, B (y) c B(x). In light of Notation 3.20, this means that ft (x) < ft (y).
(c) By Proposition 3.13, XL is a Priestley space for any distributive lattice L,soif 
ftis an order homeomorphism, then (X, t, <) is also a Priestley space. For the other 
implication, assume (X, t, <) is a Priestley space. The total order-disconnected ax­
iom says precisely that, for any x,y e X, if x 
y, then B(y) £ B(x), so that
ft (x) ft (y). Since we saw in the previous item that ft is always continuous and 
order preserving, it follows that ft is a continuous order embedding. Now, by the 
previous item, for any K e L we have ft[K] = K, so ft is open. It remains to prove 
that ft is surjective. Let x e XL be arbitrary. By Lemma 3.25, pick x e X such 
that 0 Fx = jx. To finish the proof, we show that ft(x) = x, that is, B(x) = Fx. 
Indeed, for any K e L , we have
K e B (x) <> x e K <> Q F C K <> K e Fx, 
where the last equivalence follows from the compactness of X , using Exercise 
2.1.6. 
□
In the next subsection, we show how this object correspondence between dis­
tributive lattices and Priestley spaces extends to homomorphisms between lattices.
Priestley Duality for Homomorphisms
Let L and M be distributive lattices and denote by X and Y the Priestley dual spaces 
of L and M, respectively. First, let f: X ^ Y be an order-preserving function. We 
have a complete homomorphism f-1: D(Y) ^ D(X), which sends any down-set 
D of Y to the down-set f -1 (D) of X. Now assume that f is moreover continuous. 
This means that the inverse image under f of any clopen down-set in Y is a clopen 
down-set in X. In other words, by Proposition 3.23, f -1 restricts correctly to a 
function between the images of the representation maps (-) for M and L. For any 

70
3 Priestley Duality
b e M, let hf (b) denote the unique element of L such that f 1 (b) = hf (b); that is, 
hf: M ^ L is the restriction of f-1 to M and L, identifying them with their image 
under (-) in the down-set lattices. In other words, hf: M ^ L is defined to be the 
unique function such that the following diagram commutes
f-1
D (Y) —----> D (X)
(-) 
(-)
hf 
M ------------ L L.
Note that hf is a lattice homomorphism, because it is essentially the restriction of the 
complete lattice homomorphism f-1. Thus, we have shown that for any continuous 
and order-preserving f: X ^ Y, there is a homomorphism hf: M ^ L making 
the above diagram commute. In the following proof we will use the description of 
hf in terms of homomophisms into 2. For this purpose, recall that, for any point 
x e X, hx denotes the homomorphism L ^ 2 naturally associated to x. Now note 
that, for any x e X , b e M ,
hf(x)(b) = 1 <> f (x) e b <> x e hf (b) <> hx(hf (b)) = 1,
that is, the homomorphism hf(x) associated to the point f (x) e Y is equal to the 
composition hx ◦ hf .
Crucially, every lattice homomorphism from M to L arises as hf for some 
continuous order-preserving f, as we will now prove.
Proposition 3.27 Let L and M be distributive lattices with Priestley dual spaces 
X and Y, respectively. For any lattice homomorphism h: M ^ L, there exists a 
unique continuous order-preserving function f: X ^ Y such that h = hf.
Proof Let h: M ^ L be a lattice homomorphism. Define f: X ^ Y to be 
the function which associates to each element x e X the element f(x) e Y 
corresponding to the homomorphism hx ◦ h. By the above remarks, this is the only 
function f such that h = hf. In particular, for any a e M, we have f-1 (a) = h(a). 
Hence, f is continuous, by the definition of the Priestley topologies on X and Y. 
Moreover, if x < x', then hx > hx pointwise, so that also hf (x) = hx ◦ h > hx ◦ h = 
hf (xQ pointwise; thus, f (x) < f (x'). 
□
In the situation of Proposition 3.27, we call the unique f such that h = hf the 
dual function of h. Note the similarity of Proposition 3.27 to Proposition 1.24 in 
the finite Birkhoff duality. Indeed, Proposition 1.24 is a special case of Proposition 
3.27, if one takes into account the correspondence between prime filters and join- 
irreducibles in the finite case (see Exercise 3.1.3).

3.2 Priestley Duality
71
Exercise 3.2.11 gives an alternative concrete way of defining the unique map f 
for which h = hf, by working with prime filters or prime ideals. You are asked there 
to prove that, in the situation of Proposition 3.27, for any x e X, the prime filter 
corresponding to f (x) is the inverse image under h of the prime filter corresponding 
to x; that is, Ff (x) = h-1(Fx). Similarly, If (x) = h-1(Ix).
The next proposition highlights two important features of the morphism corre­
spondence given in Proposition 3.27.
Proposition 3.28 Let L and M be distributive lattices with Priestley dual spaces 
X and Y, respectively, and let h: M ^ L be a lattice homomorphism with dual 
continuous order-preserving function f: X ^ Y.
(a) 
The function h is injective if, and only if, f is surjective.
(b) 
The function h is surjective if, and only if, f is an order-embedding.
Proof The first item is left as Exercise 3.2.12. For the second item, suppose first 
that f is an order-embedding. Let a e L. Consider the subsets C := f [a] and 
D := f [ac] of Y, which are both closed because f is a closed map (Exercise 2.2.2). 
We show first that J, C nt D = 0. If there would exist a point y in this intersection, then 
there would exist x e a and x' e ac such that f (x') < y < f (x). Since f is an order­
embedding, we then get x' < x, which is impossible because a is a down-set. Thus, 
JC nt D = 0, and Proposition 3.15 gives an element b e M such that C c b and 
b n D = 0. We show now that h(b) = a. On the one hand, C c b gives that 
a c f-1 (b) = h(b), so a < h(b). On the other hand, if x e h(b), then f (x) e b, 
so f (x) £ D. In particular, x £ ac, so x e a. Thus, h(b) c a, so that h(b) < a, as 
required.
Conversely, suppose that h is surjective. Let x, x' e X be such that x x'. Pick 
a e L such that x' e a and x £ a. Since h is surjective, pick b e M such that 
h(b) = a. Then, x' e h(b) = f-1 (b), so f (x') e b, but by a similar argument, 
f (x) b. We conclude that f (x) f (x') because b is a down-set. 
□
Note that by Exercise 2.2.2 any continuous function between Priestley spaces is 
a closed mapping, and thus by Exercise 2.1.18 any surjective continuous function 
between Priestley spaces is a quotient map of the underlying topological spaces. 
Thus, item (a) of the above proposition says we have a one-to-one correspondence 
between sublattices of a distributive lattice and Priestley quotient spaces, that is, 
the quotient spaces of the underlying topological space equipped with any Priestley 
order which makes the quotient map order preserving. And item (b) tells us that 
we have a one-to-one correspondence between quotient lattices (and thus lattice 
congruences) and Priestley subspaces of the dual Priestley space.
We will refine this result in Section 4.2, which gives concrete methods for 
computing quotients and subs on either side of the duality. Here, we just show how 
the two items in Proposition 3.28, taken together, in fact can be used to understand

72
3 Priestley Duality
Priestley duality for arbitrary lattice homomorphisms. Recall (p. 12) that the first 
isomorphism theorem for lattices says that any homomorphism h: M ^ L can 
be factored as a quotient map p: M M/ft followed by a lattice embedding 
i: M/ft ^ L, where ft = ker(h) is the kernel of h. Writing Z for the Priestley dual 
space of the lattice M/ft, Proposition 3.28 shows that the quotient map p is dual 
to an embedding j: Z ^ Y, and that the lattice embedding i: M/ft ^ L is dual 
to a quotient of Priestley spaces q: X Z. These two maps give a factorization 
of the continuous order-preserving function f: X ^ Y dual to h .In summary, the 
following two triangles are dual to each other.
M ----------------h-------------- L L X ----------- ---------> Y
j^ 
M/ft 
Z.
We give two examples of homomorphisms and their duals, using the examples of 
Priestley spaces that we developed in this chapter.
Example 3.29 Recall the lattices N ® 1 and N ® Nop, whose Priestley dual spaces 
where described in Examples 3.16 and 3.17. Consider the (injective) lattice homo­
morphism h: N ® 1 ^ N ® Nop which sends each n e N to (n, 0), and w to (0,1). 
For a prime filter Fx in the dual space of N ® Nop, the prime filter F- (x) is the inverse 
image under h of Fx (see Exercise 3.2.11). Thus, the continuous order-preserving 
function f from the dual space of N ® Nop to the dual space of N ® 1 sends every 
prime filter F(n,0) to Fn, for n > 1, and sends F„, as well as any prime filter above 
it, to the prime filter F„ of the dual space of N ® 1.
Example 3.30 Consider the lattice (N, |), whose Priestley dual space was de­
scribed in Example 3.18. A natural number n is called square-free ifit is a product 
of distinct primes, that is, for any prime p and k > 1, if pk | n, then k = 1. Note that 
the subset S of square-free or zero numbers is a sublattice of (N, |). A prime filter 
of S is either {0}, or of the form Fp n S for some prime p. Denote by h the inclusion 
homomorphism S ^ N. Note that Fpk n S = {0} for any k > 2. Therefore, the 
Priestley dual of h is the function f defined as follows: f sends F0 to F0, for each 
prime number p, f sends the prime filter Fp of N to the prime filter Fp n S of S , 
and for every k > 2, f sends the prime filter Fpk of N to F0; see Figure 3.6.
Also, consider the function g: N ^ S, which sends any n > 0 to its largest 
square-free divisor, and 0 to 0; concretely, if n = pk1 • • • pkm for distinct primes 
p 1,..., pm and k 1,..., km > 1, then g(n) := p 1 • • • pm. Note that g is an upper 
adjoint to h: for any s e S and n e N, we have that h(s) | n if, and only if, s | g (n) . 
In particular, g is meet-preserving. Note that g is in fact a homomorphism: Clearly 
g(1) = 1, and for any n, n' e N, a prime p divides g(n V n') if, and only if, p | n

3.2 Priestley Duality
73
Figure 3.6 The dual of the homomorphism h: S ^ (N, |).
or p | n', if, and only if, p divides g(n) V g(n'); hence, g(n V n') = g(n) V g(n'). 
The dual of g is the function which sends each prime filter Fp n S of S to the prime 
filter Fp of N, and {0} to {0}. The functions dual to h and g are also an adjoint pair 
between the Priestley posets of prime filters; we will come back to this example in 
Exercise 7.3.4, after we discuss “bifinite domains” in Section 7.3.
As for the finite case in Chapter 1, we now state Priestley’s duality theorem 
without having formally defined what a dual equivalence is. We refer to Chapter 
5 for the precise definitions of the terms that are used, and the reader will then be 
able to deduce this theorem for themselves in Exercise 5.2.7, also see the details 
given in Theorem 5.38. For now, it suffices that the reader understands Corollary 
3.24 and Proposition 3.27, which, we will see, form the content of the theorem.
Theorem 3.31 The category DL of bounded distributive lattices with homo­
morphisms is dually equivalent to the category Priestley of Priestley spaces with 
continuous order-preserving functions.
Exercises for Section 3.2
Exercise 3.2.1 Let L be the lattice of finite subsets of N and N itself, as defined 
in Exercise 3.1.15. Recall from Exercise 3.1.15 the description of PrFilt(L) as 
{xn | n e N} U {xTO}. Consider the Priestley topology on PrFilt(L).
(a) 
Prove that, for every n e N, {xn} is clopen.
(b) 
Prove that a subset K c PrFilt(L) is clopen if, and only if, either K is finite 
and does not contain xTO, or K is co-finite and contains xTO.

74
3 Priestley Duality
Exercise 3.2.2 Let M be the lattice of finite or co-finite subsets of N, as defined 
in Exercise 3.1.16, and let L be the lattice of finite subsets ofN and N itself. Recall 
from Exercise 3.1.16 that there is a bijection between PrFilt(L) and PrFilt(M), 
which is order preserving in only one direction.
(a) 
Prove that the bijection from Exercise 3.1.16 is a homeomorphism between 
PrFilt(L) and PrFilt(M) in their respective Priestley topologies.
(b) 
Write down explicitly the isomorphism (-) between M and the clopen down­
sets of PrFilt( M), and show that it restricts correctly to an isomorphism 
between L and the clopen down-sets of PrFilt(L).
Exercise 3.2.3 Let L and M be distributive lattices with Priestley dual spaces X 
and Y , respectively. Prove that the Priestley dual space of the Cartesian product 
L x M is homeomorphic to the disjoint sum of the Priestley spaces X and Y. Hint. 
Recall Exercise 3.1.9 for the poset part.
Exercise 3.2.4 Let X be a Priestley space and let Y c X be a subset, which we 
consider with the subspace topology and partial order inherited from X . Prove that 
Y is a Priestley space if, and only if, Y is closed as a subset of X . Hint. Use the 
result of Exercise 2.2.7.
Exercise 3.2.5 Let X and Y be Priestley spaces and let X x Y be the ordered 
topological space obtained by equipping the set X x Y with the product topology 
and the pointwise order.
(a) 
Prove that for any clopen down-sets K c X and K’ c Y, the product K x K' 
is a clopen down-set.
(b) 
Prove that for any clopen down-set M c X x Y, there exists a finite collection 
(K1, K1),..., (Kn, Kn) of pairs where, for each 1 < i < n, Ki e ClpD( X) and 
Kii e ClpD(Y), and
n 
M = U Ki x Ki .
Exercise 3.2.6 Prove that the Cartesian product of any family of Priestley spaces, 
defined by equipping the product set with the product topology and the pointwise 
partial order, is again a Priestley space.
Exercise 3.2.7 Let X be a Priestley space, L the lattice dual to X , and let C be a 
closed subset of X .
(a) 
Prove that, for any x £ J,C, there exists a clopen down-set K c X such that 
x K and i C c K.

3.2 Priestley Duality
75
(b) 
Conclude that
JC = p|{a | a e L, C c a} .
(c) 
Prove that
TC = Q{bc | b e L, C c Kc} .
(d) 
Show that, if C, D are closed subsets of X such that JC n TD = 0, then there
exists a clopen down-set K c X such that C c K and K n D = 0.
Exercise 3.2.8 Let L be a distributive lattice and X its dual Priestley space. For 
any subset S of L, define
C(S) := 
{a | a e S},
and for any subset A of X , define
F(A) := {a e L | A c a} .
(a) 
Show that the assignments S ^ C(S) and A ^ F (A) are a Galois connection 
between P(L) and P(X), that is, for any S c L and A c X,
A c C (S) <> S c F (A) .
Hint. You can either prove this directly, or show that C and F arise as in 
Example 1.16.
(b) 
Prove that, for any S e P(L) , C(S) is a closed down-set of X, and that every 
closed down-set of X arises in this way. Hint. Use Exercise 3.2.7(b).
(c) 
Prove that, for any A e P(X), F(A) is a filter of L, and that every filter of L 
arises in this way.
(d) 
Conclude that the lattice of filters of L is anti-isomorphic to the lattice of 
closed down-sets of X .
(e) 
Prove that under this anti-isomorphism, prime filters of L correspond to 
principal down-sets of X. Indeed, for any prime filter p of L, show that the 
closed down-set C(p) is equal to Jx, where x is the unique point of X for 
which Fx = p.
Exercise 3.2.9 Describe the Priestley dual space of the distributive lattice given 
in Example 3.1.
Exercise 3.2.10 Prove directly that the topology on the poset X from Example 
3.19 is compact.
You may proceed as follows. Let C be a cover of X that consists of sets of the 
form [0, q), (q, 1] and {q}, for q e Q n [0,1], that is,
C = {[07^) : a e L} u {(b~1] : b e R} u {{p} : p e P}, 

76
3 Priestley Duality
for some subsets L, R, P c Q n [0,1].
(a) 
Explain why it is enough to prove that any such cover C has a finite subcover. 
Hint. Find the appropriate lemma in Chapter 2.
(b) 
Prove that sup L > inf R.
(c) 
Prove that there exist a e L and b e R such that a > b. Hint. Toward a 
contradiction, if this were false, consider the prime filters around s := sup L, 
which will then equal inf R using the previous item.
(d) 
Conclude that C has a subcover consisting of at most three sets.
Exercise 3.2.11 Let h: M ^ L be a homomorphism between distributive lattices. 
Let X and Y be the Priestley dual spaces of L and M, respectively, and f: X ^ Y 
the continuous order-preserving function dual to h: M ^ L. Prove that, for any 
x e X, the prime filter Ff (x) is equal to h-1 (Fx) , and the prime ideal If (x) is equal 
to h-1(Ix).
Exercise 3.2.12 Let h: M ^ L be a homomorphism between distributive lattices 
and f: X ^ Y the dual continuous order-preserving function. Prove that h is 
injective if, and only if, f is surjective, but that f may be injective without h being 
surjective. Note. We will see the correspondence between sublattices and quotient 
spaces in more detail in Section 4.2.
3.3 Boolean Envelopes and Boolean Duality
We now show how the original duality for Boolean algebras (Stone, 1936) is a 
special case of Priestley duality. In Chapter 6, we will see how, in turn, Priestley 
duality can also be derived and derives from Stone’s original duality for distributive 
lattices (Stone, 1937b).
Recall the definition of Boolean envelope given in Definition 1.19. Toward de­
riving Stone duality for Boolean algebras from Priestley duality, we now prove 
the existence and uniqueness of Boolean envelopes. First, uniqueness is straight­
forward, and in fact a consequence of the more general fact that “free objects are 
unique up to isomorphism.” Compare, for example, Proposition 4.2 in Chapter 4 
on the free distributive lattice, and Example 5.17 in Chapter 5, which puts free 
constructions in the general categorical setting of left adjoints to a forgetful functor.
Proposition 3.32 Let L be a distributive lattice. If e: L ^ B and e': L ^ B' are 
Boolean envelopes of L, then there is a unique isomorphism y: B ^ B' such that 
y> ◦ e = e'.
Proof Let ^ be the unique homomorphism B ^ B' such that ^ ◦ e = e', by the 
existence part of the defining property of the Boolean envelope of e, and similarly

3.3 Boolean Envelopes and Boolean Duality
77
0: B' ^ B such that 0 ◦ e' = e. Since 0 ◦ ^ ◦ e = 0 ◦ e' = e, we must have 
0 ◦ ^ = idB by the uniqueness part of the defining property of the Boolean envelope 
e. Similarly, ^ ◦ 0 = idB. 
□
Note in particular that it follows from Proposition 3.32 that the Boolean envelope 
of a Boolean algebra L is simply L itself. For the construction of the Boolean 
envelope ofan arbitrary distributive lattice, we will use the following lemma, which 
will also be useful later.
Lemma 3.33 Let (X, t, <) be the Priestley space dual to a distributive lattice L. 
The collection
B := {a- b | a, b e L}
is a base for the topology t, and any clopen set of t is a finite union of sets in B .
Proof By the definition of t and Exercise 2.1.5(b), the collection of finite inter­
sections of sets of the form a and bc is a base for t. This collection is equal to B: 
if P, N c L are finite sets, then
—----- .•—:—-
Q a nQ jc = AP - VN.
Any open set is therefore equal to a (possibly infinite) union of sets in B. If the 
open set is moreover closed, then it is compact, so that this union can be taken to 
be finite. 
□
Proposition 3.34 Let L be a distributive lattice. The Boolean algebra L- of clopen 
subsets of the Priestley dual space of L together with the embedding (-): L ^ L- 
is the Boolean envelope of L.
Proof We will prove that the Boolean algebra L-, with the embedding (-), has 
the universal property required of the Boolean envelope (Definition 1.19). Let 
h: L ^ A be a homomorphism, with A a Boolean algebra. We will construct 
the unique homomorphism L- ^ A extending h using duality. Write Y for the 
dual Priestley space of L,andX for the dual Priestley space of A. By Proposition 
3.27, pick the unique continuous order-preserving function f: X ^ Y such that 
h = hf . We will now use this f to define h. Indeed, let b c Y be any clopen 
set. By continuity of f, the set f-1 (b) is clopen in X; define h (b) to be the 
unique element of A such that h(b) = f-1 (b). Note that h is a homomorphism 
of Boolean algebras, because the function f-1 is. Also, for any a e L, we have 
hfa) = f-1 (a) = h(a), showing that h ◦ (-) = h. To see that h is the unique such 
homomorphism, suppose that g: L- ^ A is any homomorphism with g ◦ (-) = h. 
Note that the set E := {b e L- | g(b) = h(b)} is a Boolean subalgebra of L-,

78
3 Priestley Duality
which contains the image of L under (-). By Lemma 3.33, any clopen set of Y 
is a Boolean combination of sets of the form a for a e L; thus, E = L-, so that 
g = h. 
□
We note an interesting corollary to the proof of Proposition 3.34.
Corollary 3.35 Let L be a distributive lattice and e: L ^ A a lattice embedding 
with A a Boolean algebra. Then, the Boolean algebra generated by the image of e 
is isomorphic to L-.
Proof Denote by B the Boolean algebra generated by im(e) . By Proposition 3.34, 
let e: L - ^ A be the unique Boolean algebra homomorphism such that e?(a) = e (a) 
for every a e L. Since im(e) is a Boolean algebra containing im(e), it also contains 
B. By the proof of Proposition 3.34, e is dual to the continuous function f dual 
to e: L ^ A. Since e is injective, f is surjective (see Exercise 3.2.12). Thus, e is 
injective too. 
□
Using our characterization of the Boolean envelope in Proposition 3.34, we now 
in particular deduce the following characterization of Boolean algebras, from which 
we will then further obtain Stone duality for Boolean algebras.
Proposition 3.36 (Nachbin, 1947) A distributive lattice L is a Boolean algebra if, 
and only if, the order on the dual Priestley space of L is trivial.
Proof Note that a distributive lattice L is a Boolean algebra if, and only if, the 
embedding of L into L- is an isomorphism. By Proposition 3.34, this happens if, 
and only if, every clopen subset of the dual Priestley space X of L is a down-set. 
The latter is clearly the case if the order on X is trivial, which shows the right-to-left 
direction. For the left-to-right direction, suppose that the order on X is not trivial: 
pick x, y e X with x < y and y x. Since X is a Priestley space, pick a clopen 
down-set K of X with x e K and y £ K. The set X - K is clopen, but it contains y 
and not x, so it is not a down-set. 
□
Note that Proposition 3.36 implies in particular that the prime filters of a Boolean 
algebra form an anti-chain; in other words, every prime filter is maximal. This is 
the generalized version of the fact (Proposition 1.26) that a finite distributive lattice 
is a Boolean algebra exactly when every join-irreducible element is an atom.
Stone duality for Boolean algebras may - anachronistically, see the notes for this 
chapter - be viewed as Priestley duality “without the order.” We end this section by 
giving the definitions in detail.
Definition 3.37 A proper filter F in a lattice L is called a maximal filter if it is 
inclusion-maximal among the proper filters of L, that is, for any proper filter F' 
such that F c F', we have F = F'.

3.3 Boolean Envelopes and Boolean Duality 
79
We note here an alternative characterization of maximal filters in a Boolean 
algebra: A proper filter F in a Boolean algebra B is prime if, and only if, for every 
a e B, either a or - a is in F. A filter satisfying the latter condition is usually called 
an ultrafilter in the literature. Exercise 3.3.1 asks you to prove that a filter is indeed 
prime if, and only if, it is maximal if, and only if, it is an ultrafilter.
Definition 3.38 A Boolean space2 is a topological space (X, t) which is compact 
and totally disconnected, that is, for any two points x, y e X, if x y, then there 
exists a clopen subset K c X such that x e K and y £ K.
A space is called zero-dimensional if its clopen subsets form a base. An alternative 
characterization of Boolean spaces is that they are exactly the topological spaces 
which are compact, Hausdorff, and zero-dimensional (see Exercise 3.3.4).
Remark 3.39 Note that a topological space (X, t) is Boolean if, and only if, 
(X, t, =) is a Priestley space, see Exercise 3.3.2. Also, a Priestley space is in 
particular a compact ordered space based on a Boolean space. One may ask whether 
all Boolean spaces equipped with a closed order satisfy the TOD property. This is 
not the case, as was shown in Stralka (1980). In Exercise 3.3.10 you are asked to 
work through the example given there.
The dual space of a Boolean algebra L is defined as the dual space of L, viewed 
as a distributive lattice, under Priestley duality. By Proposition 3.36, the partial 
order on the space will be trivial in this case, and, because (a)c = for any a e L, 
the definition of the topology can also be slightly simplified, as follows.
Definition 3.40 Let L be a Boolean algebra. The dual space of L is the set XL of 
ultrafilters of L , equipped with the topology generated by the sets
a := {x e XL | a e Fx} for a e L.
If X is a Boolean space, its dual algebra is the Boolean algebra of clopen subsets 
of X .
We now use Proposition 3.36 to deduce three results from our account of Priestley 
duality in Section 3.2. The first follows immediately from Corollary 3.24:
Corollary 3.41 Let L be a Boolean algebra. Then, (-): L ^ P(XL) is an 
embedding of Boolean algebras, whose image consists of the clopen subsets of XL . 
In particular, any Boolean algebra is isomorphic to the algebra of clopen subsets 
of its dual space.
2 Boolean spaces are also known as “Stone spaces” in the literature (Johnstone, 1986), but in other references, 
the name “Stone space” has been used to refer to the spaces that play a role in Stone’s more general duality 
for distributive lattices, and that we call spectral spaces, see Chapter 6.

80 
3 Priestley Duality
Second, applying Proposition 3.26(c), in the special case where X is a Boolean 
space, we get:
Corollary 3.42 Let X be a Boolean space. Then, the function sending x e X to 
the point fi(x) e XClp(X) associated to the ultrafilter
B(x) := {K e Clp(X) | xeK}
is a well-defined homeomorphism from X to XClp(X).
Finally, for morphisms, one specializes the account from Section 3.2 by dropping 
“order-preserving.” IfX andY are the dual spaces of Boolean algebras L and M, and 
f: X ^ Y is a continuous function, then f -1: P (Y) ^ P (X) restricts correctly to 
the images of M and L under (-). The homomorphism hf: M ^ L is defined by 
the condition that h-f (a) = f -1 (a), for every a e M.
Corollary 3.43 Let L and M be Boolean algebras with dual spaces X and Y, 
respectively. For any Boolean algebra homomorphism h: M ^ L, there is a unique 
continuous function f: X ^ Y such that h = hf.
In summary, just as we saw in Section 3.2 for distributive lattices and in Section 
1.3 for finite distributive lattices and finite Boolean algebras, we have a duality 
between Boolean algebras and Boolean spaces. Again, the categorical terminology 
“dually equivalent” will be defined precisely in Definition 5.12.
Theorem 3.44 The category BA of Boolean algebras with homomorphisms is 
dually equivalent to the category BoolSp of Boolean spaces with continuous func­
tions.
We end this section by giving two well-known examples of Boolean spaces and 
their dual algebras, which will be used in Chapters 4 and 8.
Example 3.45 (Stone-Cech compactification of a discrete space) Let X be an 
infinite set and consider the Boolean algebra P(X) of all subsets of S. The dual space 
Y of P (X) is, up to homeomorphism, the so-called Stone-Cech compactification of 
the topological space obtained by endowing the set X with the discrete topology.
We now explain what this statement means. First of all, Y is a compactification 
of the discrete space X , that is, Y is a compact Hausdorff space, and X , viewed 
as a discrete space, sits inside Y as a dense subspace. To see that X sits densely 
in the dual space Y of P (X) , notice first that, for each x e X, the principal filter 
Fx = T{x} is prime or, in other words, an ultrafilter; indeed, these are exactly the 
principal ultrafilters of P(X), see Exercise 3.3.6. We denote these points ofY by the 
corresponding elements of X and, since distinct points of X give distinct principal 
filters, we thus consider X as a subset of Y. Each point of X is isolated in Y, because 

3.3 Boolean Envelopes and Boolean Duality
81
the clopen corresponding to the element {x} of P(X) contains only x. Furthermore, 
any non-empty basic clopen of Y is of the form
T = {y € Y | T e Fy}
for some non-empty T c X. Since T is non-empty, there is x e T, and thus T e Fx, 
or equivalently, x eT, which shows that X is a dense subspace of Y.
The fact that Y is the Stone-Cech compactification of X further means that any 
other compactification of X is a quotient of Y. In Exercise 3.3.7 you are asked 
to show this for compactifications of X that fall within Stone duality, that is, 
compactifications Z of X that are themselves Boolean spaces.
The Stone-Cech compactification is usually denoted by fi and for this reason, 
we will henceforth denote the dual space of P (X) by fiX. As it is common in the 
literature to view the points of fiX as the ultrafilters of P (X), we will also do that 
here. In the context of our “neutral dual space” notation (Notation 3.20), this means 
that we take our bijection F(_) to be the identity function in this specific case. The 
remainder of fiX is defined as the subspace *X := fiX -X. The points of *X are 
the non-principal prime filters, also known as the free ultrafilters.
Example 3.46 Let X be an infinite set and consider the Boolean algebra M 
of all subsets of X which are either finite or co-finite as introduced in Exercise 
3.1.16. It is easy to see, as above, that each element ofX gives a distinct principal 
ultrafilter of M and that these points are isolated in the dual space Y of M .So, 
again, Y is a compactification of X . However, in this case there is just one non­
principal ultrafilter. To see this, let F be an ultrafilter of M .IfF contains a finite 
set S = {x1,...,xn}, then
{x 1} U • • • U {x n} e F
and thus { xi }eF for some i and F is principal. Thus, if F is non-principal, then F 
does not contain any finite sets. Further, for any finite set S, we have
SUX-S=XeF
and, because F is prime, it follows that X-S e F. That is, F must consist of all the 
co-finite sets and nothing else.
The dual space of M is known as the one-point compactification of X . We will 
denote it by Xm = X U {™}. Its basic clopens are the finite subsets of X and the 
co-finite subsets of XTO that contain ™. Thus, the opens are all the subsets of X and 
the co-finite subsets of Xm that contain ™.

82
3 Priestley Duality
Exercises for Section 3.3
Exercise 3.3.1 Let F be a proper filter in a Boolean algebra B . Prove that F is 
prime (and hence maximal) if, and only if, for every a e B, either a or - a is in F. 
Hint. The left-to-right direction follows easily from a V- a = T. For the right-to-left 
direction, consider the proof of (i) ^ (ii) in Proposition 1.26.
Exercise 3.3.2 Prove that a topological space (X, t) is Boolean if, and only if, 
(X, t, =) is a Priestley space.
Exercise 3.3.3 Let B be a Boolean algebra with dual space (X, t). Deduce from 
Exercise 3.2.8 that filters of B are in a bijection with closed subsets of X, and that, 
in particular, if p is an ultrafilter of B, then p|{a | a e p} is equal to the singleton 
{x}, where x is the unique point in X such that p = Fx.
Exercise 3.3.4 Prove that a topological space (X, t) is Boolean if, and only if, 
(X, t) is compact, Hausdorff, and zero-dimensional (i.e., the clopen subsets form a 
base).
Exercise 3.3.5 Prove that the Boolean envelope of a distributive lattice L is 
isomorphic to the center of the congruence lattice of L, that is, the lattice (which 
is always a Boolean algebra) of those congruences on L that have a complement in 
the complete lattice of congruences on L .
Exercise 3.3.6 Show that the principal ultrafilters of the Boolean algebra P(X) 
are exactly the sets of the form
?{x} = {T e P(X) | x e T},
where x ranges over the elements of X .
Exercise 3.3.7 Let X be a set, ftX the dual space of P (X), and i: X ^ ftX the 
inclusion (see Example 3.45). Further, let B be a Boolean algebra with dual space 
Z and let e: X ^ Z be any function from X to the set underlying Z. Show that 
there is a unique continuous function f: ftX ^ Z so that the following diagram 
commutes.
Note. A generalization of this result allows one to define an ordered compactification 
of a partially ordered set P, by considering the Priestley dual space of the lattice of 
down-sets of P.

3.3 Boolean Envelopes and Boolean Duality
83
Exercise 3.3.8 Again, let X be a set, ftX the Stone-Cech compactification of X 
or, equivalently, dual space of P(X), and i: X ^ ftX the canonical inclusion map.
(a) 
Let S c X and denote by e: S ^ X the corresponding inclusion. By du­
alizing the surjective e-1: P(X) ^ P(S), verify that we get an embedding 
fte: ftS ^ ftX extending e. In other words, ftS may be seen as a closed 
subspace of ftX .
(b) 
Show that, as a closed subspace of ftX, ftS consists of those ultrafilters offtX 
that are up-sets of their intersection with P(X). Conclude that this is precisely 
the clopen subspace S of ftX.
(c) 
Show that the Stone map
D: P(X) ^ Clp(ftX)
is given by T = ft = = T, where ftT is viewed as a subspace of ftX as above, 
and () stands for topological closure in ftX.
Exercise 3.3.9 (Cantor space) The Cantor space C can be constructed as a sub­
space of the unit interval by repeated removal of middle thirds, as follows. We 
define a family of closed subspaces {Cn}“=0 using the following operation on real 
intervals. For a, b e R with a < b define
F([a, b]) = [a, (2a + b)/3] U [(a + 2b)/3, b],
which removes the open middle third of the interval, thus producing a union of 
two closed subintervals. Now consider the following subspaces of the unit interval 
I = [0, 1] of the real line R:
C0 = I = I0,1 and Cn = In,1 U • • • U In,2n ,
where, for each n > 0, the sequence of intervals In+1,1,..., In+1,2n+1 is recursively 
defined by
F(In,k) = In+1,2k-1 U In+1,2k for 1 < k < 2n.
Finally, let
oo
C = = Cn .
Denote by X the topological space 2N, that is, the product of countably many copies 
of the set 2 equipped with the discrete topology.
(a) 
Show that X is homeomorphic to the Cantor space C .
(b) 
Let < denote the lexicographic order on X . Show that it agrees with the order 
inherited from the unit intervals.
(c) 
Show that (X, <) is a Priestley space. Give a description of the dual lattice.

84
3 Priestley Duality
(d) 
Show that the covering relation associated with the order on X is given by 
x -< y if, and only if, there is n e N with xi = yi for i < n, xn < yn (and 
thus, necessarily, xn = 0andyn = 1), while xj = 1andyj = 0 for all j > n. 
Further, describe this covering relation relative to the subspace C of R.
(e) 
Show that, in the case of (X, <), we have that (X, <), where
< := -< U A
with A = {(x, x) | x e X}, is also a partially ordered set. Give an example to 
show that, in general, the reflexive closure of a cover relation associated to a 
partial order need not be a partial order.
Exercise 3.3.10 (Stralka, 1980) Let X be the product space 2N equipped with <, 
the reflexive closure of the cover relation -< associated with the lexicographical 
order < on X obtained from the usual order on 2. For more detail, see Exercise 
3.3.9.
(a) 
Show that < is a closed relation on X. To this end you may proceed as follows. 
Suppose x, y e X with y x. Then, x y and it is not the case that y -< x. 
Since x y and < is a total order on X we have either x < y or y < x.
(1) 
Suppose x < y. Show that there are clopen sets U, V with x e U, y e V, 
and (V x U) n < = 0. Since < c <, we conclude that (V x U) n < = 0.
(2) 
Suppose y < x. Sincexisnotacoverofy by assumption, show that there 
exist z e X with y < z < x ,andz is not part of any covering pair, that 
is, z does not terminate in an infinite tuple of 0s or of 1s (see Exercise 
3.3.9(d)). Further, show that with U = (z, 1] = {w e X | z < w} and 
V = [0, z) = {w e X | w < z}, we have that x e U, y e V, and 
(V x U) n < = 0, and show that U and V are open in X.
(b) 
Show that the compact ordered space (X, <) is not a Priestley space. Here we 
need to show that (X, <) does not have the TOD property. Note that a basic 
non-empty clopen in X is of the form
ieF 
/ 
\jeG
where F and G are disjoint finite subsets of N.
(1) 
Suppose F 0 and let n = max F. Show that there is x e U with xi = 1 
for all i > n. Conclude that x has a cover y that is not in U, thus showing 
that U is not an up-set in (X, <).
(2) 
Suppose that F = 0 and show that U is an up-set of (X, <) if, and only 
if, G is an initial segment of N.

3.3 Boolean Envelopes and Boolean Duality
85
(3) 
Show that a clopen subset of X is a down-set with respect to < if, and 
only if, it is a down-set with respect to < and thus conclude that (X, <) 
is not a Priestley space.
(4) 
Find points x and y in X showing that (X, <) does not have the TOD 
property.
Notes for Chapter 3
The influential American mathematician Marshall H. Stone introduced Stone dual­
ity for both Boolean algebras and bounded distributive lattices in a series of papers 
published in the 1930s (Stone, 1934, 1935, 1936, 1937a, 1937b, 1938). Priestley 
duality (Priestley, 1970) recasts Stone duality for bounded distributive lattices in 
terms of Nachbin’s theory of ordered spaces (Nachbin, 1964), and identifies an 
isomorphic dual category to the one given by Stone (1937b). See also results in 
this direction by Nerode (1959). The connection between Stone’s original duality 
and Priestley’s variant has been explained in several places in the literature, for 
example, Cornish (1975) and Fleisher (2000).
While Stone’s representation theorem and duality for Boolean algebras (Stone, 
1936) are widely known, his results for distributive lattices, which include both 
a representation theorem and a duality, have recently received less attention in 
the literature. One reason for this is the fact that the spaces in Stone’s duality for 
distributive lattices (Stone, 1937b) are non-Hausdorff. Priestley’s work used a much 
nicer class of spaces, at the expense of equipping the space with a partial order. 
In this book, we decided to introduce Priestley’s duality first, as it nicely exhibits 
the interplay between order and topology that is central to the field. We make the 
connection with Stone’s original duality in Chapter 6, see Theorem 6.4.
While the main results of this chapter are well known, the notation of a “neutral 
Priestley dual space” is more recent and originates with the papers Gehrke and 
Priestley (2006, 2007). This notation is particularly useful for studying duality for 
additional operations which are order preserving in some coordinates and order 
reversing in others, as we will begin to do in Chapter 4, as well as for studying 
operations that preserve or reverse both join and meet in each coordinate, which 
was the subject of the aforementioned papers.

4
Duality Methods
In this chapter, we build on the Priestley duality of Chapter 3 to develop methods for 
analyzing distributive lattices and the morphisms between them, with applications 
to logical systems associated to them. We first show in Section 4.1 how Priestley 
duality allows us to easily compute free distributive lattices and Boolean algebras, 
corresponding to normal forms for propositional logic formulas. In Section 4.2, 
we establish correspondences between sublattices of a lattice and quotients of its 
dual space, and also between quotients of a lattice and closed subspaces of its dual 
space. These Galois-type correspondences are often instrumental for computing 
dual spaces of lattices in concrete cases; we will give a few basic examples already 
in this chapter and we will make full use of these correspondences in Chapters 7 and 
8. Sections 4.3 and 4.5 show how duality theory can treat classes of functions that 
are more general than the lattice homomorphisms that appear in Priestley duality: 
operators. We first treat unary operators (i.e., functions preserving only finite meets 
or finite joins, but not both) in Section 4.3, and then in Section 4.5 we focus on a 
particularly relevant case of operators of arity 2, namely operators of implication 
type. This case is sufficiently complex to show the flavor of the fully general case, 
while avoiding notational difficulties when dealing with operators of general arity. 
In Sections 4.4 and 4.6, we give two classical applications of operator duality, 
namely to deduce Kripke models for modal logic, and to obtain Esakia duality 
for Heyting algebras, the algebraic structures for intuitionistic propositional logic. 
Duality for operators will also be applied in both Chapters 7 and 8; in particular, 
Section 4.5 contains some forward pointers to where this theory is relevant in both 
of those chapters. The final section, Section 4.7, contains an application of discrete 
duality which characterizes the Boolean subalgebra generated by a sublattice. This 
result, which is of a more combinatorial flavor, will be used in Chapter 8.
The methods we develop in this chapter can also be viewed in a more ab­
stract categorical form, and we will do so for some of them in the next chapter,

4.1 Free Distributive Lattices
87
Chapter 5. It is useful to first see them “in action:” this chapter shows the use of 
individual instruments, while the next chapter shows how they all fit together in an 
ensemble.
4.1 Free Distributive Lattices
In this section, we apply Priestley duality to give concrete descriptions of free dis­
tributive lattices over sets. We also deduce a description of the free Boolean algebra 
over a set as a corollary. We will point out some connections to propositional logic.
While our discussion here focuses on free distributive lattices, a large part of 
the development in this section is an instance of a much more general universal 
algebra, developed by Birkhoff; a standard reference for this is the textbook by Burris 
and Sankappanavar (2000). This section does not require knowledge of universal 
algebra, but we provide some pointers for the interested reader. In Example 5.17, 
we will relate the definition of free objects to the categorical notion of adjunction, 
to be introduced in Chapter 5.
The construction of free algebras is an important tool in universal algebra. The 
reason for this is Birkhoff’s variety theorem, which links axiomatization by equa­
tions with the model-theoretic constructions of quotients, subalgebras, and Carte­
sian products (see Burris and Sankappanavar 2000, Theorem 11.9). The technical 
crux of this theorem is the fact that if a class of algebras is axiomatized by equations, 
then it contains free algebras over any set (Burris and Sankappanavar, 2000, Theo­
rem 10.12), and any other algebra of the class is a quotient of a free algebra (Burris 
and Sankappanavar, 2000, Corollary 10.11). While this is interesting, free algebras 
are also often notoriously difficult to understand and transferring information to 
quotient algebras may also be challenging. We will see here that, in the specific 
case of distributive lattices, free distributive lattices are quite simple to understand 
dually, as their dual spaces are Cartesian products of the two-element Priestley 
space. Combined with the methods of Section 4.2, which will allow us to describe 
quotients of distributive lattices dually as closed subspaces, the free algebras from 
Birkhoff’s variety theorem provide a powerful tool for distributive-lattice-based 
algebras. We will see this in action, for example, in the applications in Section 7.4.
We now define what it means for a distributive lattice to be free. This definition 
will look familiar if you have previously encountered, for example, free groups or 
free semigroups. It is also similar to the definition of Boolean envelope, Definition 
1.19. The proper general setting for these definitions will be developed in Section 
5.2 in the subsection on adjunctions, see Example 5.17(a) in particular.
Definition 4.1 Let V be a set, F a distributive lattice, and e: V ^ F a function. 
Then, F is said to be free over V via e provided that, for every distributive lattice

88
4 Duality Methods
f
L
L and every function f: V ^ L, there exists a unique lattice homomorphism 
f: F ^ L such that f ◦ e = f, that is, such that the following diagram commutes:
F 
e
V.
The property expressed by the diagram is called a universal property of (F, e) 
with respect to distributive lattices, and a function e: V ^ F as in this definition is 
called a universal arrow. Given a universal arrow e: V ^ F and f: V ^ L with 
L a distributive lattice, we call the homomorphism f: F ^ L the unique extension 
of f along e.
Toward the general construction of free distributive lattices, we make two basic 
observations about its definition, which in particular justify speaking of “the” free 
distributive lattice over a set V.
Proposition 4.2 Let V be a set. A free distributive lattice over V is unique up to 
isomorphism. That is, if e: V ^ F and e': V ^ F' are two universal arrows, then 
there exists a unique lattice isomorphism y: F ^ F' such that y ◦ e = e'.
Proof Suppose e: V ^ F and e': V ^ F' are universal arrows. Denote by 
^: F ^ F' the unique extension of e' along e, and by ^: F' ^ F the unique 
extension of e along e'. Then, the composite function ^ ◦ ^: F ^ F is an extension 
of e along e, that is, it is a homomorphism with the property that ^ ◦ ^ ◦ e = e, 
since, by definition, ^ ◦ e = e' and ^ ◦ e' = e. But idF : F ^ F is also an extension 
of e along e, so by uniqueness, we have ^ ◦ ^ = idF. By symmetry, ^ ◦ ^ = idF/. 
Thus, ^ is a lattice isomorphism, and ^ ◦ e = e' by construction, as required. □
Notation For V a set, we denote by FDL(V) the free distributive lattice over V, 
and by e: V ^ FDL (V) the accompanying universal arrow, if they exist. By Propo­
sition 4.2, this notation is well defined, if we consider isomorphic lattices as the 
same.
Proposition 4.3 Suppose FDL(V) is the free distributive lattice over V, and 
e: V ^ FDL (V) the accompanying universal arrow. Then, FDL (V) is generated by 
e[V].
Proof Denote by L the sublattice of FDL (V) generated by e[V]. Denote by 
p: FDL (V) ^ L the unique extension along e of the function e': V ^ L, de­
fined as the co-restriction to L of the function e. Write i: L ^ FDL (V) for the 

4.1 Free Distributive Lattices
89
inclusion homomorphism; the various morphisms are depicted in the following 
diagram.
Note, similarly to the proof of Proposition 4.2, that i ◦p is an extension ofe along e, 
and therefore i ◦ p = idFDL(V). Hence, i is surjective, proving that L = FDL(V). □
Note that we have not yet established that a free distributive lattice and accom­
panying universal arrow actually exist for every set V. It is possible to give very 
general arguments for the existence, because distributive lattices have a finitary 
axiomatization, see, for example, Burris and Sankappanavar (2000, Section II.10). 
Here we give two different concrete constructions of the free distributive lattice over 
V , one coming from the general algebraic considerations, the other using Priestley 
duality, and thus specific to distributive lattices. The advantage of the second con­
struction is that it gives a concrete representation of the free distributive lattice as 
clopen down-sets of a particular Priestley space. This representation is often useful 
in applications; we will in particular make use of it in Chapters 6 and 7.
For the algebraic construction, let V be a set. Since the free distributive lattice is 
generated by the image under the universal arrow, it makes sense that we can build it 
by making all possible well-formed expressions over V and then take a quotient, as 
we will do now. A lattice term with variables in V is a well-formed expression built 
from V using the operation symbols V, A, T, and ±. For example, a, (a V b) A a, and 
± V a are examples of lattice terms with variables in {a, b}; while these three terms 
are distinct syntactic objects, they clearly should be considered “equivalent” from 
the perspective of (distributive) lattices. In fact, the universal property tells us that 
the free distributive lattice, if it exists, should have every V -generated distributive 
lattice as a quotient. We will now define an equivalence relation = on the set of 
terms which makes this idea precise.
We write T(V) for the set of all lattice terms with variables in V. Note that, given 
a function f: V ^ L with L any structure equipped with operations V, A, T, and 
±, we may inductively define an interpretation function f: T (V) ^ L, by f (v) := 
f (v) for v e V, f (t) := T, f (±) := ±, f (t v t') := f (t) v f (t'), and f (t A t') := 
f (t) A f (t') for any terms t, t'. Now consider the equivalence relation = on T(V), 
defined by t = t' if, and only if, for every function f: V ^ L, with L a distributive 
lattice, we have f (t) = f (t'). The crucial insight is now that the set T(V)/= of 

90
4 Duality Methods
equivalence classes of lattice terms naturally admits the structure of a distributive 
lattice, as follows. First, note that the equivalence relation = is congruential on T(V), 
thatis,if a = a' and b = b ',then a A b = a 'A b' and a V b = a 'V b', as is easily verified 
using the fact that f in the definition of = preserves the operations V and A (see 
Exercise 4.1.4). Therefore, we have well-defined operations on T(V)/= given by
T := [T]=, ± := [±]=, [a]= V [b]= := [a V b]=, and [a]= A [b]= := [a A b]=, 
for any a, b e T(V). To see that (T(V)/=, T, ±, V, A) is a distributive lattice under 
these operations, one may verify that the defining equations from Section 1.2 hold 
in T(V)/= (see Exercise 4.1.4). Finally, define e: V ^ T(V)/= by e(v) = [v]=.
Proposition 4.4 The distributive lattice T(V)/= is free over V via the universal 
arrow e.
Proof Let f: V ^ L be a function to a distributive lattice L. The interpretation 
function f: T(V) ^ L has the property that f ◦ e = f, and, for any t = t', we have 
f(t) = f(t'), by definition of =. Therefore, the function f: T(V) ^ L, defined by 
f([t]=) := f(t) is well defined. Observe that the function f is a homomorphism 
by definition of the operations on T (V)/=, and it is an extension of V. We leave 
uniqueness of f as an exercise (see Exercise 4.1.4). 
□
Remark 4.5 The above construction is essentially that of the Lindenbaum-Tarski 
algebra for a propositional logic without negation over variables V. A completely 
analogous development, replacing DL by BA throughout, gives a construction of 
the free Boolean algebra over a set of variables; also see Corollary 4.12.
Before taking on the general duality-theoretic construction, let’s look at a small 
example.
Example 4.6 Let V = {p, q}. We get lattice terms ±, T, p, q, p A q, and p V q, and 
it is not too difficult to see that, in any distributive lattice, the interpretation of all 
other terms must be equal to one of these. That is, FDL({p, q}) must be the lattice 
depicted on the left in Figure 4.1. There, the four join-primes of FDL({p, q}) are 
identified as the circled nodes.
In the figure on the right, we depict the dual poset as (2, <)! p’q}, that is, the set of 
functions from {p, q} to 2, ordered pointwise, where the order on the set 2 is given 
by 1 < 0. Each function f: {p, q} ^ 2 is denoted as a pair f (p) f (q), for example, 
10 is the function sending p to1andq to 0.
The idea behind this representation of the dual poset of FDL({p, q}) is the fol­
lowing. As we know from Definition 3.21, we may choose to see the dual poset 
of FDL({p, q}) as HomDL(FDL({p, q}), 2) in the reverse pointwise order. Since 
FDL({p, q}) is generated by p and q, each homomorphism h: FDL({p, q}) ^ 2 is

4.1 Free Distributive Lattices
91
Figure 4.1 The free distributive lattice on two generators, and its dual poset.
totally determined by its restriction to {p, q}. Also, by the universal property, every 
function from {p, q} to 2 is the restriction of such a homomorphism.
For example, the element p in the lattice corresponds to the down-set {10, 11} 
of the dual poset while the element ± corresponds to the empty down-set, and the 
element p v q corresponds to the down-set {10,01,11}. Thus, we see that the concrete 
incarnation of FDL({p, q}) obtained via duality is given by the universal arrow
e: {p, q} ^ D((2, <){p,q}), P ^ XXp,
where xp is the characteristic function of the singleton {p} and the order on 2 is 
given by 1 < 0.
From a logic perspective, the elements of the dual poset correspond to lines in a 
truth table for propositional logic on two variables, and the subset associated to a 
formula ^ is the set of lines in the truth table at which ^ is true. This is precisely as 
conceived by logicians going back to the fundamental work by Boole (1847).
We here obtained the universal arrow e as a map to the down-sets of2{p,q} in the 
pointwise order relative to the “upside-down” order on 2, in which 1 < 0. Note that 
this map may alternatively be described using up-sets and the poset (2, <), where 
< is the usual order in which 0 < 1, via the map
{p, q} ^ U (2{p,q}), p ^ ?xp.
These are two alternate descriptions of one and the same concrete incarnation of 
the free distributive lattice over the set {p, q}. Our reason for sticking with the 
“upside-down” version of 2 is that it here plays the role of the poset dual to the 
free distributive lattice on a single generator, which is a three-element chain, see 
Remark 4.10 and Exercise 5.3.13.
We now proceed to make the corresponding argument for an arbitrary set V. For 
asetV,let2V denote the set of functions from V to 2, which may be viewed as 

92
4 Duality Methods
the |V | -fold product of the two-element set 2. Recall that we already encountered 
topologies on the set 2V in Exercises 2.3.4 and 3.3.9. We will show in Proposition 
4.8 that the dual space of FDL(V) is order-homeomorphic to the following ordered 
generalized Cantor space.
Definition 4.7 Let V be a set. We define the topology n on 2V to be the product 
topology, where 2 carries the discrete topology. We define the partial order < on 
2V, for x, y e 2V, by
f < g ^^ for all v e V, if g (v) = 1, then f (v) = 1.
The ordered topological space (2V, n, <) is called the ordered generalized Cantor 
space over V. The topological space (2V, n) is called generalized Cantor space, 
and (2N, n) is the (classical) Cantor space.
Note that, by definition of the product topology, the topology n on 2V has as a 
subbase the sets of the form
Iv ~ a J := {f e 2V | f (v) = a},
where v ranges over the elements of V and a = 0, 1.
Note also that < is the pointwise order on 2V with respect to the order on 2 in 
which 1 < 0, as in Example 4.6; see Remark 4.9 for an alternative description using 
up-sets and the order on 2 in which 0 < 1.
Proposition 4.8 Let V be a set. The Priestley dual space of the free distributive 
lattice over V is order-homeomorphic to the ordered generalized Cantor space over 
V, and the function s: V ^ ClpD(2V), which sends v e V to the clopen down-set 
s(v) := [v ^ 11, is a universal arrow.
Our proof here uses the algebraic fact, already proved above, that there exists a 
free distributive lattice over V. Itis possible to give a proof “from scratch” that does 
not use this fact (see Exercise 4.1.6).
Proof Let e: V ^ F be a free distributive lattice over V and denote by (X, t, <) 
the Priestley dual space of F. We will first exhibit an order-homeomorphism <p 
between X and the ordered generalized Cantor space over V. Note that, for any 
point x e X, the corresponding homomorphism hx : F ^ 2 must be of the form fx 
for some function f x: V ^ 2: indeed, hx: F ^ 2 is equal to fx for fx := hx ◦ e. 
Let us write ^ for the surjective function from 2V to X that sends f: V ^ 2 to the 
element x e X with hx = f.
We now show that ^ is an order-embedding, that is, that for any functions 
f, g: V ^ 2, we have f < g if, and only if, ^( f) < <p(g~) in X. First, if ^( f) < $(g) 
in X, then f > g pointwise, so in particular f = f ◦ e > g ◦ e = g pointwise, which 

4.1 Free Distributive Lattices
93
means f < g by definition. For the other direction, note that, if f < g, then the 
set {u e F | f (u) > g (u)} is a sublattice of F containing V, and must therefore be 
equal to F by Proposition 4.3. It follows that ^ is an order-isomorphism between 
the posets (2V, <) and (X, <).
We now show that ^ is a homeomorphism from (2V, n) to (X, t). Note first that, 
by Proposition 4.3, the set e[V] generates F. It follows that the image ofe[V] under 
the isomorphism (-): F ^ ClpD(X) generates ClpD(X). Thus, by definition of 
the Priestley topology t on X, to establish continuity of ^, it suffices to show that 
^-1 (e(v)) is clopen for every v e V. Let v e V and f e 2V. We then have that 
^(f) e e(v) if, and only if, f (e(v)) = 1, if, and only if, f (v) = 1. Thus, for any 
v e V , we have
^-1 (e(v= [v ~ H 
(4.1)
which is a clopen set in the product topology n. Since the sets [v ^ 1] and their 
complements form a subbase for the clopen sets of the topology n, and ^ is a 
bijection, we also immediately obtain from the equality (4.1) that ^ is an open map. 
Finally, (4.1) shows that the diagram
(—)
A 
> ClpD(X) 
^ 1
e
s
V------> ClpD(2V)
commutes, and therefore the function s is a universal arrow, since the arrow e is 
universal, ^-1 ◦ (-) is an isomorphism, and isomorphisms preserve universal arrows 
(see Exercise 4.1.1). 
□
Remark 4.9 The alternative explanation of the free distributive lattice as up-sets 
instead of down-sets from Example 4.6 carries over to the general case. In particular, 
note that the function s from Proposition 4.8 may also be described as the function 
5: V ^ ClpU(2V) which sends v to [v ^ 1], where now 2 is equipped with the 
order in which 0 < 1.
A different kind of order symmetry in this context is the fact that the free 
distributive lattice is anti-isomorphic to itself. In terms of the concrete representation 
of the free distributive lattice as clopen down-sets of the ordered generalized Cantor 
space, we may consider the function t: V ^ ClpU(2V)op that sends v e V to 
t(v) := [v ^ 0]. Its unique extension t along 5 is an isomorphism from ClpD(2V) 
to ClpU(2V)op, which may be described concretely by sending a clopen down-set 
D to the clopen up-set 2V - D.

94 
4 Duality Methods
Remark 4.10 We outline an alternative, more abstract proof of Proposition 4.8, 
by using some forward references to the categorical language that we will develop 
in Chapter 5 (see also Exercise 5.3.13). First, using the categorical fact that “left 
adjoints preserve colimits” (see Exercise 5.3.12), the free distributive lattice over a 
set V must be the V -fold coproduct of the free distributive lattice over a singleton 
set. Now, the free distributive lattice on one generator p is easily seen to be the three- 
element chain {± < p < T}, whose dual is {p, T}. Using the fact that the category 
of Priestley spaces contains arbitrary products of finite posets (see Example 5.35), 
we may now recover Proposition 4.8 directly from the categorical fact that a dual 
equivalence sends any coproduct of distributive lattices to a corresponding product 
of Priestley spaces.
The free Boolean algebra over a set V can be defined in an entirely analogous way 
to the free distributive lattice: it is a Boolean algebra A, together with a function 
e: V ^ A, such that, for every function f: V ^ B with B a Boolean algebra, 
there exists a unique homomorphism f: A ^ B such that f ◦ e = f. The proofs of 
Propositions 4.2 and 4.3 can be carried out in the same way for the free Boolean 
algebra, as well as the algebraic construction of the free Boolean algebra: this is now 
the Lindenbaum-Tarski algebra of classical propositional logic. Alternatively, we 
may combine the free distributive lattice with the Boolean envelope construction 
(see Section 3.3) to obtain the free Boolean algebra.
Lemma 4.11 Let V be a set. The Boolean envelope of the free distributive lattice 
over V is the free Boolean algebra over V.
Proof Let i: V ^ FDL (V) be the free distributive lattice over V and let j: FDL (V) ^ 
FDL (V)- be the Boolean envelope of FDL (V). We claim that the composite e := 
j ◦ i: V ^ FDL(V)- has the required universal property for the free Boolean 
algebra. Indeed, for any function f: V ^ B with B a Boolean algebra, there is 
first, by definition of the free distributive lattice, a unique lattice homomorphism 
f: FDL (V) ^ B with f ◦ i = f, and then, by definition of the Boolean envelope, 
a unique homomorphism f : FDL (V) ^ B such that f ◦ j = f. We are in the 
situation shown in the following diagram:

4.1 Free Distributive Lattices
95
and we get
f ◦ e = f~ ◦ j ◦ i = f ◦ i = f.
The uniqueness of f - is clear from the uniqueness parts of the universal properties 
of the free distributive lattice and the Boolean envelope. 
□
Corollary 4.12 Let V be a set. The Boolean algebra of clopen sets of the gener­
alized Cantor space, (2V, n), is the free Boolean algebra over V via the function s 
which sends any v e V to the clopen set [v ^ 1].
Proof Combine Proposition 3.34, Proposition 4.8, and Lemma 4.11. 
□
In the case where V is countably infinite, the free Boolean algebra over V is 
countably infinite, and it is atomless, that is, it does not have any atoms. In fact, one 
may use model-theoretic techniques to prove that this is, up to isomorphism, the 
unique countably infinite and atomless Boolean algebra, and it is a central structure 
in several parts of logic, see, for example, Koppelberg et al. (1989, Corollary 5.16). 
Its dual is the classical Cantor space 2N (also see Exercise 3.3.9).
Exercises for Section 4.1
Exercise 4.1.1 Let V be a set, and suppose that e: V ^ F, e': V ^ F' are 
functions to distributive lattices F and F', and ^: F' ^ F is a lattice isomorphism 
such that ^ ◦ e' = e. Prove that e is a universal arrow if, and only if, e' is a universal 
arrow.
Exercise 4.1.2 How many elements does the free Boolean algebra on two gen­
erators have? Draw its Hasse diagram, labeling each of its elements with a corre­
sponding Boolean algebra term.
Exercise 4.1.3 Let L be a distributive lattice and suppose that G c L is a set 
of generators for L. Prove that there is a surjective homomorphism FDL(G) ^ L. 
Conclude that any finitely generated distributive lattice is finite. Formulate and 
prove the analogous result for Boolean algebras.
Note. This exercise is an instance of the general universal algebraic fact that, in 
a variety of algebras, all finitely generated algebras are finite if, and only if, the 
free finitely generated algebras are finite. Such varieties are known as locally finite 
varieties, and the results in this section show in particular that both the varieties of 
distributive lattices and of Boolean algebras are locally finite.
Exercise 4.1.4 This exercise asks you to supply some details of the proof of 
Proposition 4.4.
(a) 
Show that = is congruential on T(V).

96
4 Duality Methods
(b) 
Show that T(V)/=, with operations defined as in the paragraph before Propo­
sition 4.4, satisfies all the defining equations of a distributive lattice. Hint. 
This is almost immediate from the definition of =.
(c) 
Prove in detail that the function f defined in the proof of Proposition 4.4 is a 
homomorphism and that f ◦ e = f .
(d) 
Prove that if g: T(V)/= ^ L is a homomorphism and g ◦ e = f, then g = f.
Exercise 4.1.5 Let V be a set and L a distributive lattice. Show that the poset LV 
of all functions from V to L with the pointwise order is order isomorphic to the 
poset of all homomorphisms from FDL(V) to L also with the pointwise order.
Exercise 4.1.6 This exercise outlines a proof of Proposition 4.8 that does not rely 
on generalities from universal algebra, and gives a more concrete construction of the 
extension homomorphisms. Let V be a set and (2V, <, n) the ordered generalized 
Cantor space over V.
(a) 
Prove that, for each v e V, the set 5(v) := [v ^ 1] is a clopen down-set in 
(2V, <, n).
(b) 
Let K be a clopen down-set of (2V, <, n). Prove, using the compactness of 
2V and the definition of the order, that there exists a finite collection C of 
finite subsets of V such that K = CeC veC 5(v).
(c) 
Give a direct proof that, for any function h: V ^ L, with L a distributive 
lattice, there exists a unique homomorphism h: ClpD(2V) ^ L such that 
— h ◦ s = f.
4.2 Quotients and Subs
In many applications of Priestley duality, including some in Chapters 7 and 8 of this 
book, we use the dual space ofa lattice to study its quotient lattices and sublattices, 
or we use the dual lattice of a space to study its quotient spaces and subspaces. 
Here, closed subspaces of a Priestley space will play an important role, because 
they are exactly the subspaces that are themselves Priestley spaces in the inherited 
order and topology (see Exercise 3.2.4). In this section, we exhibit two Galois 
connections, between relations and subsets, which in particular allow us to prove 
that (a) the quotients of a distributive lattice are in an order-reversing bijection 
with the closed subspaces of its Priestley dual space; and (b) the sublattices of a 
distributive lattice are in an order-reversing bijection with the Priestley quotients of 
its Priestley dual space. While (a) and (b) can also be deduced in a more abstract 
way from Theorem 3.31 using category theory (see Theorem 5.40), the Galois 
connections that we develop in this chapter do a bit more. In concrete applications, 

4.2 Quotients and Subs 
97
these Galois connections are what allow us to define so-called equations on either 
side of the duality.
Let L be a distributive lattice with Priestley dual space X . We will first show how 
to associate with any binary relation R on L a closed subspace [[R J of X. Here, a 
pair that belongs to such a binary relation on a lattice is thought of as an equation, 
and it acts as a constraint defining a subset on the spatial side of the duality. This 
motivates the following notation and definition.
Notation 4.13 When L is a lattice, we will denote, in this subsection, pairs of 
elements by the notation a - b, instead of (a, b).
Definition 4.14 Let L be a distributive lattice with dual Priestley space X .We 
define the binary relation = c X x L2 by, for any pair of elements a - b e L2 and 
x e X,
def
x |= a - b ^^ x e a if, and only if, x e b.
For any binary relation R c L2, we define
def
x = R ^^ for every a - b in R, x = a - b.
Moreover, for any a - b e L2, we define a clopen subset [[a - bJ of X by
Ea - bJ := {x e X | x |= a - b} = (a A b) U (ac A bc),
and we extend this assignment to any binary relation R on L, by defining
[RJ := {x e X | x = R} = Q [a - bJ.
Conversely, for any element x e X, we define a binary relation $(x) on L by
$(x) := ker(hx) = (Fx x Fx) U (Ix x Ix) = {a - b | x = a - b}.
We extend this assignment to subsets S c X by defining
$(S) := ^ $(x) = {a - b | a, b e L such that a A S = b A S}.
Note that the above definitions of [-] and $ are a special case of the functions 
u and t introduced in Example 1.16, in the case of the relation = c X x L2.
Proposition 4.15 Let L be a distributive lattice with dual Priestley space X. The 
two functions [-] : P(L2) 
P(X): $ form a Galois connection, whose fixed
points on the left are the lattice congruences on L, and whose fixed points on the 
right are the closed subspaces of X .

98
4 Duality Methods
Proof The functions indeed form a Galois connection since they are the con­
travariant adjoint pair between the powersets of L2 and X , formed as in Example 
1.16, in the case of the relation |=.
For the statement about fixed points, we need to show that the image of [-] con­
sists of the closed subsets of X, and that the image of $ consists of the congruences 
on L. First, since each [[a - b J is clopen, [[R J is closed for every binary relation R. 
Conversely, let C c X be any closed set. We show that C = [[$(C) J. By adjunction, 
we have C c [[$(C) ]. We prove the other inclusion by contraposition. Let x £ C 
be arbitrary. Using the base for the Priestley topology given in Lemma 3.33, pick 
a, b e L such that x e a -b and C is disjoint from a - b. Note that the latter implies 
that the pair a - a A b is in $(C), since for any y e C, we have y e a if, and only 
if, y e a Rb. However, x e a but x £ a A b, so x £ [[$(C) J, as required.
We now show that the image of $ consists of the congruences on L . Note 
that $(S) is a congruence for any S, as it is an intersection of congruences (see 
Exercise 1.2.16). Let E be a congruence on L. We show that E = $QEJ). The 
left-to-right inclusion holds by adjunction. For the other direction, we reason by 
contraposition, and assume (a, b) £ E. Denote by p: L L/E the lattice quotient 
by the congruence E. Then, p(a) p(b), and we assume without loss of generality 
that p(a) p(b). By Theorem 3.10 applied to L/E, the filter tp(a) and the ideal 
jp(b), we can pick a prime filter G in L/E containing p(a) but not p(b). Then, the 
set
Fx := p-1(G),
the inverse image of G under the homomorphism p, is a prime filter of L which 
contains a but not b. Moreover, for any (c, d) e E,wehavec e Fx if, and only if, 
p(c) e G, if, and only if, d e Fx, since p(c) = p(d) by assumption. Thus, x e [[E], 
and we conclude that (a, b) £ $QE J). 
□
Remark 4.16 An interesting feature of Proposition 4.15 is that we can start, 
on either side of the duality, with an unstructured set. Given an arbitrary subset 
R c L x L or S c X, by applying the Galois connection, we always end up with 
a structured subset, that is, [[R J is not just a subset of X, but it is a closed, hence 
Priestley, subspace of X, and $(S) is not just asubsetofLxL but it is a congruence 
of L .
From Proposition 4.15, we deduce the following theorem, which shows how 
to explicitly compute the subspace dual to a lattice quotient generated by some 
equations.
Theorem 4.17 Let L be a distributive lattice with dual Priestley space X and let 
R be a binary relation on L. Then, the lattice congruence generated by R, (R), is 

4.2 Quotients and Subs 
99
equal to ft([RJ), and the Priestley dual space of L/{R) is order-homeomorphic to 
the closed subspace [[R J of X.
Proof In general, for any adjunction f: P Q: g, for any p e P, g f (p) is the 
minimum of im(g) A tp (see Exercise 1.1.8(d) in Chapter 1). In particular, using 
that im(ft) consists of the congruences on L, ft([RJ) is the smallest congruence 
containing R. Let Y denote the Priestley dual space of the quotient lattice L/{R). 
The dual of the quotient map p: L L/{R) is the continuous order-preserving 
function i: Y ^ X which can be defined by hi(y) := hy ◦ p, for every y e Y. Note 
that i is an order embedding: if y f y' in Y, then we can pick b e L/{R) such that 
y e b and y' £ b, and since p is surjective, we can pick a e L such that b = p(a). 
Then, i(y) e a and i(y') £ a, so i(y) f i(y'). Finally, for any x e X, we have that
x e [[(Rif, and only if, <R) c ft({x}) = ker(hx),
using the Galois connection between [[-J and ft. The latter holds if, and only if, 
there exists y e Y such that hx = hy ◦ p. Therefore, the image of i is equal to 
[{R= Eft(IR1) 1 = IR1, using the general fact that g f g = g for any adjunction 
(f, g), see Exercise 1.1.8(c). Thus, i is a homeomorphism between Y and the closed 
subspace [[R], as required. 
□
A second theorem mirrors the previous one, but on the space side.
Theorem 4.18 Let X be a Priestley space with dual distributive lattice L and let 
S be a subset of X. Then, the closure of S, S, is equal to [ft(S) J, and the lattice 
dual to S is isomorphic to the quotient L/ft(S).
Proof Left as Exercise 4.2.1. 
□
We give a few examples of the duality between lattice quotients and closed 
subspaces. You are asked to verify some details in Exercises 4.2.3 and 4.2.4.
Example 4.19 LetB be the eight-element Boolean algebra; denote its three atoms 
by a, b, and c, and its dual space by X = {x, y, z}, where Fx = ta , Fy = tb, and 
Fz = tc. For the equation b - a V b, we get [b - a V b J = {y, z}, and the generated 
congruence <b - a V b) = ft([b - a V bJ) on B is depicted in Figure 4.2.
Example 4.20 Let X be the poset depicted on the left in Figure 4.3 and let 
S = {x, y}. The dual lattice D(X) and the congruence on D(X) corresponding to 
the subspace S c X are as depicted on the right in the same figure. Furthermore, 
the subspace S is equal to [a - b J, where a is the down-set jz and b is the down-set 
jx = {x}. Note that the quotient of D (X) by the congruence {a - b) is the three- 
element chain, which is indeed the lattice dual to the induced poset on the subset 
S c X.

100
4 Duality Methods
Figure 4.2 A congruence on the eight-element Boolean algebra.
Figure 4.3 A poset, its down-set lattice, and the congruence corresponding to the 
subset {x, y}. Here, a corresponds to the down-set ^z and b corresponds to the 
down-set {x}.
Example 4.21 Recall the Stone-Cech compactification fiX of a set X, introduced 
in Example 3.45. As remarked in Example 3.45, every point of X is isolated in fiX, 
so that X is an open subspace of fiX. Recall also from that example that we identify 
points of X with ultrafilters of P(X). Note that the set *X := 0X - X, known as the 
remainder of the Stone-Cech compactification fiX, is closed. Elements of * X are 
known as free ultrafilters. Since *X is a closed subspace of the dual space ofP(X), 
it corresponds to a quotient B of the Boolean algebra P(X). We will show now that 
this quotient algebra B is given by the following set of equations on P(X) :
{{x} « 0 | x e X}.
(4.2)
Indeed, if p is a free ultrafilter and x e X, then 0 £ p and {x} £ p, so p |= {x} « 0. 
On the other hand, if p is principal, then there is x e X with {x} e p, see Exercise 

4.2 Quotients and Subs
101
3.3.6. Thus, 0 £ p and {x} e p, so p = {x} « 0. We have shown that an ultrafilter 
p of P(X) satisfies all the equations in (4.2) if, and only if, p e *X.
Write ft for the congruence on P(X) generated by the set of equations (4.2). 
Then, ft identifies two elements S and T of P (X) if, and only if, the symmetric 
difference S + T of S and T is finite. Indeed, for any ultrafilter p of P(X), we have 
p |= S & T if, and only if, S + T £ p (Exercise 4.2.4). Thus, S and T will be 
identified by ft if, and only if, S + T does not belong to any free ultrafilter, which 
happens if, and only if, S + T is finite.
The Boolean algebra quotient B = P(X)/ft, which we identified in this example 
as the dual algebra of the closed subspace * X of fiX, is often denoted P (X)/fin in 
the literature, and is well studied in set theory and general topology.
Sublattices and Priestley Quotient Spaces
A very similar story to the one above can be told for sublattices and quotients of 
Priestley spaces that are themselves Priestley spaces. In fact, the ensuing notion 
of Priestley space (in)equations is a very important tool in the theory of automata 
and regular languages, as we will see in Chapter 8. We will now give the necessary 
definitions and statements of the relevant theorems for a general duality between 
sublattices and Priestley quotient spaces. We also note that, in fact, the lattice­
quotient-closed-subspace duality from the previous subsection and the sublattice- 
Priestley-quotient-space duality are, in a sense, dual to each other.
We first introduce the notion of quotient space in the context of Priestley spaces. 
This is an instance of a more general notion of quotient of ordered topological 
spaces, but we only need it in this setting.
Definition 4.22 A preorder < on a Priestley space (X, <X, t) is compatible if 
<X C < and, for any x, y e X, if x y, then there exists a T-clopen <-down-set K 
in X such that y e K and x £ K.
Compatible preorders on X give an intrinsic description of those Priestley spaces 
Y that are quotients of X, that is, for which there exists a continuous order-preserving 
surjective map X Y. We just indicate here what this means, and ask you to fill in 
the details in the exercises, see Exercises 4.2.5 and 4.2.6. First, for any p: X Y, 
the preorder <p on X defined by x <p x' if, and only if, p(x) <Y p(x') is 
compatible. Conversely, if < is a compatible preorder on X, denote by Y the poset 
reflection of the preordered set (X, <), as defined in Exercise 1.1.5. That is, as a 
set, Y is X/= where = := < n >. Let us write q: X Y for the quotient map. 
Then, the partial order <Y on the poset reflection is defined, for any y = q(x) and 
y' = q (x') in Y, by y <Y y' if, and only if, x < x'. The quotient topology on 
Y is defined by tY := {U C Y | q-1 (U) e tX}. Then, the ordered topological 

102
4 Duality Methods
space (Y, <Y, ty) is a Priestley space, and the function q is a continuous order­
preserving map. Moreover, for any Priestley space (Z, <z,tz), any continuous 
order-preserving map f: (X, <,tx) ^ (Z, <z,tz) factors uniquely through the 
map q. We will say that (Y, <Y, ty) is the quotient of the Priestley space X by the 
compatible preorder < and will denote it by X/<.
Example 4.23 Consider a Priestley space (X, t, <) with dual lattice L. Notice 
(see Exercise 3.3.2) that then (X, t, =) is also a Priestley space. In fact, the dual 
lattice of this Priestley space is the Boolean algebra L- of all clopen subsets of X , 
also known as the Boolean envelope of L, see Corollary 3.41. Of course, L is a 
sublattice of L- . The dual of the inclusion of L into L- is simply the identity map 
on X, viewed as a continuous order-preserving map idX: (X, t, =) ^ (X, t, <). 
The corresponding compatible preorder is the partial order < of (X, t, <).
More generally, any injective homomorphism i: L ^ B, with B a Boolean 
algebra, factors as the composition of e: L ^ L and i: L ^ B. Dually, denoting 
by (Y, n) the Boolean space dual to B, this gives a quotient map of Boolean spaces 
f: (Y,n) ^ (X,t), followed by idX: (X,t, =) ^ (X,t, <). This shows that 
sublattices of Boolean algebras can be understood dually by a Boolean equivalence 
relation together with a Priestley order on the quotient.
As before, the correspondence between compatible preorders and sublattices 
allows us to view pairs of elements (x, y) from X as constraints on L yielding 
sublattices. However, as Example 4.23 already shows, equating elements of the 
space is not a fine enough notion to witness all sublattices. In fact, as we will see, 
spatial equations witness Boolean subalgebras, whereas we will need to think of 
pairs (x, y) as spatial inequations in order to be able to witness all sublattices. For 
this reason, we introduce the following notation.
Notation 4.24 LetX be a set. We denote by I(X) the set of all formal inequations 
x < y where x, y e X. That is,
I(X) = {x < y | x, y e X}.
Given a set of inequations T c I (X), we call RT := {(x, y) | x < y e T} the binary 
relation corresponding to T.
Notice that, up to isomorphism, I(X) is just X2, and subsets T c I(X) are just 
binary relations on X . However, when studying quotients of spaces, we need to be 
a bit more careful with our notation than in the analogous setting of Notation 4.13 
for quotients of lattices, because we here need to carefully distinguish whether 
we interpret a pair (x, y) of points in a Priestley space as an inequation or as an 
equation. We begin with the first interpretation. For the second interpretation, see 
Notation 4.29.

4.2 Quotients and Subs
103
Definition 4.25 Let L be a distributive lattice with dual Priestley space X .We 
define the binary relation = c L x I(X) by, for any element a e L and x, y e X,
def 
a |= x < y ^^ y e a implies x e a.
When a = x < y, we will say that a satisfies the (spatial) inequation x < y. 
Similarly, for a subset A c L, we write A = x < y and say that A satisfies x < y 
provided every a e A satisfies x < y.
This relation allows us to define a map <-: P(L) ^ P(X2), by, for a e L and 
x, y e X ,
def 
x <a y (> a = x < y
and for any subset A c L, <A := QaeA <a, that is,
def
x < A y ^^ A = x < y.
We obtain a map [-JI: P(X2) ^ P(L), by, for x, y e X,
[(x, y) Ji := Iy U Fx = {a e L | a = x < y},
and for any R c X2, we define the subset [[RJI of L by
[R Ji := P| [(x, y) Ji = {a e L | for all (x, y) e R, a = x < y}.
(x, y)eR
In order to be able to talk about inequations and sets of inequations directly, we 
will also use, for any (x, y) e X2, the notation [[x < yJ for [[(x, y)JI, and, for any 
T c I(X), the notation [[TJ for the set [[RTJI, where RT is the binary relation 
corresponding to T.
Proposition 4.26 Let L be a distributive lattice with dual Priestley space X. The 
two functions <-: P (L) P (X2): [[-JI form a Galois connection, whose fixed 
points on the left are the sublattices of L, and whose fixed points on the right are 
the compatible preorders on X .
Proof The functions indeed form a Galois connection since they are the con­
travariant adjoint pair between the powersets of L and X2, formed as in Example 
1.16, in the case of the relation |=.
Given x, y e X, it is easy to verify that the set [[x < y J is a sublattice of L 
(see Exercise 4.2.8(a), and thus so is [[R JI, being an intersection of sublattices, for 
any R c X2. Now let M be a sublattice of L.WewanttoshowM = I <m JI. By 
adjunction, we have M c [[<M JI. For the converse inclusion, let a e [[<M JI be 
arbitrary. Note that, for any (x, y) e ac x a, we have a = x < y, so x ^M y, which 

104 
4 Duality Methods
means that we can pick a(xy) e M with x e a(X~y)c and y e a^xy). Now, for any 
fixed x e ac, we get
a c ^|{) I y e a}.
Applying compactness, the union of a finite subcover yields an element bx e M 
with a < bx and x £ bx. Now, a = Q{bx | x e ac} and, again by compactness, 
there is a finite set F c ac with
a = Q bx.
That is, a = /\xeF bx, which is an element of M.
Given a e L, the relation <a = (a X X) U (X X ac) is clearly a preorder which 
contains <X. Also, it is compatible since, if x £a x', then (x, x') e ac X a. That is, 
x' e a while x £ a and the set a is a <a-down-set (see Exercise 4.2.8(b)). Further, 
for A c L, <A is again a compatible preorder since these are closed under arbitrary 
intersections (see Exercise 4.2.8(c)).
Now, to see that all compatible preorders are fixed points of the Galois collection, 
let < be a compatible preorder on X. Again, we have < c <jI by adjunction. 
For the reverse inclusion, suppose x y. Since < is compatible, we have a clopen 
V C X with y e V, x £ V, and V is a <-down-set. Since <X c x, V is also a 
<X-down-set, and thus, since V is also clopen, we can pick a e L with V = a. The 
fact that a is a <-down-set precisely says that a e [[<]I. Also, the fact that y e a 
and x £ a means that x £a y and thus (x, y) 
<jI, as required. 
□
In the same way as for quotient-subspace duality, we now get the following 
duality between sublattices and compatible preorders on its dual space; compare 
Theorems 4.17 and 4.18.
Theorem 4.27 (Schmid, 2002) Let L be a distributive lattice with dual Priestley 
space X .
(a) 
For any subset A of L, the sublattice generated by A is equal to [[ < AJI, and the 
Priestley dual space of this sublattice is order-homeomorphic to the Priestley 
quotient X /<A.
(b) 
For any binary relation R on X , the smallest compatible preorder containing 
R is equal to <[RjI, and the lattice dual to the Priestley quotient by this 
preorder is isomorphic to [[R]I.
Theorem 4.27 allows one to characterize sublattices of a lattice L by sets of 
inequations over the dual space of L. As we will see in Section 8.3, this is a method 
used in automata theory to prove the decidability of the membership problem for 
classes of regular languages. Apart from characterizing sublattices of a lattice L , 

4.2 Quotients and Subs 
105
Theorem 4.27 can also be used to separate sublattices, as identified in the following 
corollary.
Corollary 4.28 Let L be a distributive lattice with dual Priestley space X and let 
M1 and M2 be two sublattices of L. Then, M2 £ M1 if, and only if, there exists an 
inequation x < y over X and a e M2 so that a = x < y but M1 = x < y.
We now spell out the specialization of the subalgebra-quotient-space duality to 
the Boolean case. Recall from Proposition 3.36 that a Priestley space corresponds 
to a Boolean algebra if, and only if, the order of the space is trivial. It follows that a 
compatible preorder < yields a Boolean quotient if, and only if, < is an equivalence 
relation or, equivalently, if it is symmetric. We call symmetric compatible preorders 
compatible equivalence relations, and, in situations where we are interested in 
Boolean subalgebras, we use the stronger notion of spatial equation that we define 
now.
Notation 4.29 For any set X, we denote by E(X) the set of all formal equations 
x = y where x, y e X. That is,
E(X) = {x = y | x,y e X}.
As before, when T c E(X) is a set of formal equations, we denote by RT c X2 the 
corresponding binary relation on X .
Analogously to what we did above, we define a notion of satisfaction for formal 
equations on a space.
Definition 4.30 Let B be a Boolean algebra and X its Priestley dual space. We 
define the binary relation = c B x E (X) by, for any element a e B and x, y e X,
a |= x = y ^^ x e a if, and only if, y e a.
When a = x = y, we will say that a satisfies the (spatial) equation x = y. 
Similarly, for a subset A c B, we write A |= x = y and say that A satisfies x = y 
provided every a e A satisfies x = y .
This relation = allows us to define a map =- : P (B) ^ P (X2), by, for a e B 
and x, y e X ,
x =a y '■■> a = x = y,
and for any subset A c B, =A := aeA =a, that is,
x = A y ^^ A = x = y.
Similarly we obtain a map [[-JE : P(X2) ^ P(B), by, for x, y e X,
[(x, y)IE := (Ix n Iy) U (Fx n Fy) = {a e B | x e a, if, and only if, y e a}, 

106
4 Duality Methods
and for any R c X2, we define the subset [[RJE of B by
[R JE := P| I(x, y) IE = {a e B I for all (x, y) e R, a = x = y}.
(x, y) eR
In order to be able to talk about equations directly, we will also use the notation 
[x = y J for [[(x, y) JE and, for any subset T c E(X), we write [[TJ for [[RT JE, 
where RT is the binary relation corresponding to T.
Proposition 4.31 Let B be a Boolean algebra with dual Priestley space X. The 
two functions =- : P (B) P (X2): [[-JE form a Galois connection, whose fixed 
points on the left are the Boolean subalgebras of B, and whose fixed points on the 
right are the compatible equivalence relations on X .
Proof See Exercise 4.2.9. 
□
Corollary 4.32 Let B be a Boolean algebra with dual space X.
(a) 
For any subset A of B, the Boolean subalgebra generated by A is equal to 
[=AJE, and the dual space of this subalgebra is homeomorphic to the quotient 
space X/=A.
(b) 
For any binary relation R on X, the smallest compatible equivalence relation 
containing R is equal to = RjE, and the Boolean algebra dual to the quotient 
by this equivalence relation is isomorphic to [[R JE.
Proof Deduced from Proposition 4.31 in a similar way to Theorems 4.17 and 4.18.
□
Note that, in part (a) of Corollary 4.32, we could have used [[-JI instead of [[-JE 
since, when applying [[-JI to a compatible equivalence relation, the corresponding 
lattice is a Boolean algebra. Further, [[=AJI and [[=AJE are also equal to [[<AJE. 
Similarly, in part (b) of Corollary 4.32, since the lattice [[R JI generates the Boolean 
algebra [[RJE, the same compatible equivalence relation corresponds to both of 
these subsets of B. Finally, =[RjI and = RjE are both equal to RjE, since an 
inequality is satisfied by a Boolean subalgebra if, and only if, its opposite is also.
Remark 4.33 One problem with compatible preorders, which has sometimes 
hampered their successful application, is that it is difficult to understand intrinsically 
in a Priestley space how to obtain the compatible preorder generated by a binary 
relation on the space. The existence of the Galois connection of Proposition 4.26 
frees us from this problem and allows us to specify sublattices from arbitrary sets 
E of inequality constraints of the form x < y.
This is similar to the fact that, in logic, we do not need to identify the full theory 
of a class of structures that we are interested in, since we may be able to capture it 
by a much smaller set of axioms.

4.2 Quotients and Subs
107
As mentioned above, we will see dual space (in)equations in action in Chapter 8. 
Below, we will already give two elementary examples.
Example 4.34 (Sublattices of the free distributive lattice) Coming back to the 
example of the free distributive lattice on two generators, Example 4.6, consider 
the sublattices L 1 = {±,p, T} and L2 = {±,p V q, T}. One may prove from the 
definitions that the corresponding quotients of 2{p,q} are given by the equivalence 
relations =1 and =2, where =1 has classes {00,01} and {10,11}, while =2 has classes 
{00} and {01, 10, 11}. We leave it as Exercise 4.2.11 to classify the other sublattices 
of this lattice.
Example 4.35 (Equations for a subalgebra) In this example we will see how we 
can use extraneous structure on a dual space and lattice to identify a smaller set of 
equations for a subalgebra of an infinite Boolean algebra; this technique is further 
exploited in Section 8.3.
Consider the set Z of integers, and denote by Z+ the subset of positive integers 
and by Z- the subset of negative integers; so Z = Z- U {0} U Z+. Let M be the 
Boolean subalgebra of P (Z) consisting of all those subsets S of Z such that both 
S n Z+ is either finite or co-finite, and S A Z- is either finite or co-finite. One 
may then show (see Exercise 4.2.12) that the dual space of M is the “two-point 
compactification of Z”
TO := Z U{--to, +to},
which topologically is the disjoint union of the one-point compactification 
Z+ U {+to} of Z+ with the discrete topology, the one-point compactification 
Z- U {-to} of Z- with the discrete topology, and the one point space {0}. (For 
the one-point compactification, see Example 3.46 and Exercise 3.2.2.) Note that, 
since Z is the disjoint union of Z+, Z-, and {0}, every free ultrafilter of P (Z) con­
tains exactly one of Z+ or Z-, because a free ultrafilter clearly cannot contain {0}. 
The dual of the inclusion M ^ P(Z) is the surjective function
P (Z) 
Z-TO,
k
+ TO
-TO
if 
{k} e p where k e Z,
if p free and Z+ e p, 
if p free and Z- e p.
P ^ 1
Thus, the compatible preorder on PZ corresponding to the subalgebra M of P (Z) 
is the equivalence relation in which each k e Z is only related to itself, and two 
free ultrafilters p and v are related provided they either both contain Z+, or both 
contain Z- . That is, the remainder is split into two uncountable equivalence classes 
and each free ultrafilter is related to uncountably many other free ultrafilters.

108
4 Duality Methods
By contrast, we will now show that, by using the successor structure on Z, the 
subalgebra M can be “axiomatized” by a much “thinner” set of equations. The 
successor function Z ^ Z, which sends k e Z to k + 1, has as its discrete dual the 
complete homomorphism P (Z) ^ P (Z) which sends a subset S e P (Z) to the set
S- 1:= {k eZ | k+ 1 e S} = {s- 1 | s e S} .
For p e pZ, write
p + 1 := {S e P(Z) | S - 1 e p} = {S + 1 | S e p}.
This is a well-defined function pZ ^ pZ, as it is the dual function of the homo­
morphism S ^ S - 1 on P (Z); it is also the unique continuous extension of the 
successor function Z ^ Z, when we view the codomain as a subset of pZ. To de­
scribe the equational basis for the sublattice M ofP(Z), consider the set of equations 
p + 1 « p, as p ranges over *Z, where we recall that *Z := pZ -Z, the remainder 
of pZ, see Example 4.21. We will show that the sublattice M of P(Z) contains 
exactly those S e P(Z) that satisfy all of these equations, that is, we will prove that
M = 
[ p + 1 « p | p e'Z J. 
(4.3)
To this end, note first that, for S e P (Z), S satisfies p + 1 « p if, and only if, both 
p and p + 1 contain S, or neither p nor p + 1 contains S. Now, for the left-to-right 
inclusion of (4.3), let S e M and let p be a free ultrafilter of P (Z) . We show that 
S |= p + 1 « p. Since p is prime and Z+ U (Z -Z+) = Z e p, it follows that either 
Z+ e p or Z - Z+ e p. We treat the case Z+ e p and leave the other as an exercise. 
Since S e M, we have that S n Z+ is either finite or co-finite. If S n Z+ is finite, 
then, as p is free, S £ p. Also S n Z+ finite implies that (S - 1) n Z+ is finite and 
thus S - 1 £ p. So S |= p + 1 « p. If, on the other hand, S n Z+ is co-finite, then, as 
(Z+ -S) U (SnZ+) = Z+ e p,andpis free, it follows that SnZ+ e p. Furthermore, 
S nZ+ co-finite implies that (S - 1) nZ+ is also co-finite and by the same argument 
we have S - 1 e p so that S |= p + 1 « p. For the right-to-left inclusion of (4.3), 
we reason contrapositively, and suppose S £ M. Then, S n Z+ is neither finite nor 
co-finite, or S n Z- is neither finite nor co-finite. Again, we treat the first case and 
leave the second as an exercise. If S n Z+ is neither finite nor co-finite it follows 
that there is an infinite set T c Z+ such that, for each k e T,
k £ S but k + 1 e S.
By the prime filter-ideal theorem, Theorem 3.10, here applied to the Boolean alge­
bra P (Z), pick an ultrafilter p of P (Z) which contains the filter ^T and is disjoint 
from the ideal I consisting of all finite subsets of P (Z) . Since p is disjoint from I , 
it is free, and since ^T C p we have T e p. Now as S n T = 0 it follows that S £ p 
and since T + 1 c S, or equivalently, T c S - 1, it follows that S - 1 e p. That is, 

4.2 Quotients and Subs 
109
we have exhibited a free ultrafilter p such that S = p + 1 ~ p and this completes 
the proof of (4.3).
We note that Example 4.35 is related to a well-known language from descriptive 
complexity theory. The monoid of integers under addition is the so-called syntactic 
monoid of the language called “majority,” consisting of all bitstrings with a majority 
of 1s; see Exercise 8.3.6.
In Chapter 8 we will also need the duality between complete Boolean subalgebras 
of a powerset algebra and equivalence relations on the underlying set. This is a 
dicrete version of the duality between spatial equations and Boolean subalgebras 
stated in Proposition 4.31. Like all other correspondences in this section, it is also 
possible to treat this duality via the Galois connection obtained from a relation 
= £ P (S) x P (S X S) defined by a |= 5 = 5' if, and only if, 5 e a ^^ s' e a, 
but we here give an alternative, direct proof, in Theorem 4.36.
Recall that a complete Boolean subalgebra of a complete Boolean algebra B is 
a Boolean subalgebra A such that, for any S £ A, the supremum and the infimum 
of S in B are in A. Note that, using negation, it suffices to assume this for suprema 
or for all infima. Also note that for A to be a complete Boolean subalgebra it is not 
sufficient to merely require that A be a Boolean algebra which is complete in its 
order (see Exercise 1.2.6(a)). In Theorem 4.36, we will consider the poset Subc (B) 
of complete Boolean subalgebras ordered by inclusion, and the poset Eq(S) of 
equivalence relations on a set S, also ordered by inclusion. Both are complete 
lattices. For an equivalence relation = on a set S, we will call a subset u of S 
invariant provided u = s = s' for all s, s' e S and we write [=] for the collection 
of invariant subsets of S.
Theorem 4.36 Let S be a set and let B := P(S) be its Boolean algebra of subsets. 
For any equivalence relation = on S, the set [=] is a complete Boolean subalgebra 
of B. Moreover, the assignment = ^ [=] is an anti-isomorphism between Eq(S) 
and Subc (B).
Proof Let f: S ^ S/= be the quotient function associated to =. Note that, essen­
tially by definition, [=] is exactly the image of the dual complete homomorphism 
f-1: P(S/=) ^ B, which is injective and the upper adjoint of the forward image 
function f [-]: P(S) ^ P(S/=), see Exercise 1.3.10. Conversely, given a com­
plete Boolean subalgebra A of B, the inclusion i: A ^ B is an injective complete 
homomorphism and thus, it has a lower adjoint i': B ^ A which is surjective. As 
in the finite case, see the proof of Lemma 1.23, i' sends completely join irreducibles 
to completely join irredicibles, and thus atoms to atoms. That is, i' restricts to a 
function f: B ^ At(A). Note that since i' preserves arbitrary joins, i' is, up to 
isomorphism, the forward image function f [-]. Therefore, i' is surjective if, and

110
4 Duality Methods
only if, f is, and thus f is the quotient function associated to a uniquely determined 
equivalence relation on S. Clearly these two assignments are order reversing and 
inverse to each other. 
□
Exercises for Section 4.2
Exercise 4.2.1 Prove Theorem 4.18.
Exercise 4.2.2 Consider the unique homomorphism h: FDL (p, q) ^ FBA (p) that 
sends p to p and q to ­ p. Show that h is surjective, and compute the dual injective 
function.
Exercise 4.2.3 Prove the statements made in Examples 4.19 and 4.20.
Exercise 4.2.4 Let $ be a congruence on a Boolean algebra B.
(a) 
Prove that, for any a, b e B, a $ b if, and only if, a + b $ 0. Here, a + b denotes
the symmetric difference of a and b, that is, a + b := (a A -b) v (-a A b).
(b) 
Prove that, for any ultrafilter p of B, we have p |= a & b if, and only if,
a + b £ p.
(c) 
Conclude that, for any binary relation R on B, we have x e [[RJ if, and only 
if, x £ a + b for all (a, b) e R.
Exercise 4.2.5 Let p: X ^ Y be a continuous order-preserving map between 
Priestley spaces. Prove that the relation < := p-1 (<Y) on X is a compatible preorder.
Exercise 4.2.6 Let (X, tx, <X) be a Priestley space and let < be a compatible 
preorder on X. Define = := < n >, let Y := X/=, and denote by q: X Y the 
quotient map.
(a) 
Show that, for any x, x' e X, x <X x' implies x < x'.
(b) 
Prove that the relation <Y on Y defined, for y = q(x) and y' = q (x') in Y, by
y <Y y' if, and only if, x < x', is a well-defined partial order.
(c) 
Prove that, with the quotient topology TY := {U c Y | q-1 (U) e tx}, 
(Y, ty, <Y) is a Priestley space.
(d) 
Prove that q: X ^ Y is continuous and order preserving.
(e) 
Prove that, for any Priestley space Z and any continuous f: X ^ Z such 
that x < x' implies f (x) <Z f (x'), there exists a unique continuous order­
preserving f: Y ^ Z such that f = f ◦ q.
Exercise 4.2.7 Prove the assertions made in Example 4.23.
Exercise 4.2.8 Let L be a distributive lattice and X its Priestley dual space.
(a) 
For x, x' e X, show that [[x < x' J is a sublattice of L.

4.2 Quotients and Subs
111
(b) 
For each a e L, show that <a is a compatible preorder on X, that the 
equivalence classes of the corresponding equivalence relation are a and ac, 
and that a < ac is the only non-trivial relation in the quotient order. Conclude 
that [[<a]I is the three-element sublattice {0, a, 1} of L.
(c) 
Show that compatible preorders on X are closed under arbitrary intersections.
Exercise 4.2.9 (a) Verify that the functions in Proposition 4.31 constitute the 
Galois connection given by the relation a |= x = y.
(b) 
Verify that, for any R c X2, [[RJE is closed under complementation and is 
thus a Boolean subalgebra of B .
(c) 
Prove that, for any subset A c B, =A = < A, where A' = A U { ­ a | a e A} 
and conclude that it is a compatible equivalence relation on X .
(d) 
Using the above and Proposition 4.26 complete the proof of Proposition 4.31 
and its Corollary 4.32.
(e) 
State and prove results analogous to Proposition 4.31 and Corollary 4.32 for 
the discrete duality between complete and atomic Boolean algebras and sets.
Exercise 4.2.10 Let $ be an equivalence relation on a Boolean space X. Prove 
that the following conditions are equivalent:
(i) 
$ is clopen as a subset of X x X;
(ii) 
[x]# is clopen for every x e X; and
(iii) $ has finitely many classes and the corresponding quotient map X ^ X/$ 
is continuous (where X/$ is a finite discrete space).
Hint. (i) =^ (ii): Show that both [x]# = n2[$ n ({x} x X)] and n2[$c n ({x} x X)] 
are closed. (ii) =^ (iii): Use compactness of X. (iii) =^ (i): Consider the 
product map X x X ^ X/$ x X/$ and the inverse image of the diagonal in 
X/$ x X/$.
Exercise 4.2.11 Building on Example 4.34, identify the sublattices of the free 
distributive lattice on two generators and the corresponding compatible quasi-orders 
on 2{p,q}.
Exercise 4.2.12 Let M be the Boolean subalgebra ofP(Z) consisting of all those 
S c Z such that both S n Z+ is either finite or co-finite and S n Z- is either finite or 
co-finite, see Example 4.35.
(a) 
Show that M = M- x P({0}) x M+, where M- and M + are the Boolean 
algebras of all finite or co-finite subsets of Z- and Z+, respectively.
(b) 
Show that the dual space of M is the topological sum (i.e., disjoint union) of the
one-point compactification Z- U {-to} of Z-, the one-point compactification 
Z+ U {+to} of Z+, and the one-point space {0}.

112
4 Duality Methods
Exercise 4.2.13 Let X be a set and 0X the dual space of P(X).
(a) 
Show that there is a one-to-one correspondence between each of
(1) 
the Boolean subalgebras B of P(X);
(2) 
the continuous surjections f: 0X ^ Y with Y a Boolean space; and 
(3) the set functions h: X ^ Y with dense image.
(b) 
In particular, show that for each L c X, we have
L^ X = l? X
and, for a subalgebra B and corresponding continuous surjection f and set 
function with dense image h, we have
L eB <> f [L^X] is open in Y ^^ h [L] is open in Y,
and in this case we have
L Y = f [L?X ] = h[L] Y, 
where () is the Stone map, () is topological closure, and the decorations refer 
to the ambient space in question.
4.3 Unary Operators
In all the dualities discussed in this book so far, the morphisms on the algebraic 
side have been the homomorphisms, that is, the maps preserving all of the lattice 
structure. In this section, we will relax this condition and study maps between 
distributive lattices that only preserve finite meets, but not necessarily finite joins. 
Such functions are also known as unary normal multiplicative operators in the 
literature. The dualities developed in this section originate with the seminal works 
Jonsson and Tarski (1951, 1952); also see the notes at the end of this chapter. 
We show that there is still a dual equivalence of categories if we generalize, on 
the space side, from continuous order-preserving functions to certain relations that 
are compatible with the order and topology of the Priestley space. We begin by 
introducing some necessary notation and defining what this means precisely.
Notation 4.37 Here, and in what follows, we use some common notations for 
composition, forward and inverse image for binary relations: Let R c X x Y 
and S c Y x Z be binary relations. We often use infix notation, writing xRy for 
(x, y) e R. The composition R • S is the relation from X to Z defined by
R • S := {(x, z) | there exists y e Y such that xRySz} .
Note that this left-to-right notation for relational composition differs from the 
right-to-left notation ◦ that we use for functional composition (Notation 1.3). That 

4.3 Unary Operators
113
is, if f: X ^ Y and g: Y ^ Z are functions with graphs Rf c X x Y and 
Rg c Y x Z, respectively, then the relational composition Rf • Rg is the graph of 
the functional composition g ◦ f .
The converse of R is the relation R-1 := {(y, x) e Y x X : xRy}. For any subset 
U ofX, we write R[U] for the relational direct image, that is,
R[U]:= {y e Y | there exists u e U such that uRy} .
The same set is sometimes denoted 3R [U]. For singleton subsets {x} of X, we 
write R[x] instead of R[{x}]. Converse relations allow us, in particular, to define 
relational inverse image R-1[V] for any V c Y, by taking the direct image of the 
converse relation, that is,
R-1[V] = {x e X | there exists v e V such that xRv} .
Finally, we also use the relational universal image, VR, defined, for any U c X, by
VR[U] := {y e Y | for all x e X, if xRy, then x e U}, 
(4.4)
and we note that
VR [U] = {y eY|R-1[y] c U} .
For later use, we note a convenient formula for switching between direct and 
universal relational image:
VR [U] = Y - R[X - U], 
for any U c X. 
(4.5)
The import of the operation VR introduced in (4.4) stems from the fact that if 
R c X x Y is any relation between sets, then the function R-1[-]: P(Y) ^ P(X) 
preserves arbitrary joins, and the function VR [-]: P (X) ^ P (Y) is its upper adjoint 
(see Exercise 4.3.3(a)). Furthermore, we will now define the property of upward 
order-compatibility for a relation R between Priestley spaces, which turns out to be 
equivalent to the fact that the operations R-1 and VR restrict correctly to the sublat­
tices D(X) andD(Y) (see Exercise 4.3.3(b)). As we will see in the proof of Proposi­
tion 4.39, these basic order-theoretic facts, combined with two topological continu­
ity properties for the relation R, are fundamental to the duality for unary operators.
Note that the notion of “compatibility” for an arbitrary relation between Priestley 
spaces, which we introduce now, is distinct from the notions of compatibility for 
preorders and equivalence relations that we saw in Section 4.2.
Definition 4.38 Let X and Y be Priestley spaces and let R c X x Y be a relation. 
We say that R is:
• upward order-compatible if > • R • > c R, that is, for any x, x' e X and y, y' e Y, 
whenever x’ > xRy > y’, we have x’Ry';

114 
4 Duality Methods
• upper Priestley continuous if, for every clopen up-set K c Y, the set R-1 [K] is 
clopen;
• point-closed if, for every x e X, the set R[x] is closed; and
• upward Priestley compatible if R is upward order-compatible, upper Priestley 
continuous, and point-closed.
The first aim of this section is to prove (Proposition 4.39) that the finite-meet­
preserving functions between two distributive lattices are in one-to-one correspon­
dence with the upward Priestley compatible relations between their respective dual 
spaces. This correspondence will generalize the correspondence between homomor­
phisms and continuous order-preserving functions of Priestley duality (see Exercise 
4.3.4). It also yields a new duality theorem, as we will remark at the end of this sec­
tion and prove in Chapter 5 once we have the appropriate categorical terminology 
in place. We will also show at the end of this section how to obtain an analogous 
correspondence between finite-join-preserving functions and downward Priestley 
compatible relations.
The Finite Case
To motivate our proof of the general case (Proposition 4.39), let us proceed as we 
did in Chapters 1 and 3 and first examine the finite case. Let L and M be finite 
distributive lattices. In Chapter 1, we saw that every homomorphism h: M ^ L 
uniquely arises as f-1 for some order-preserving f: J (L) ^ J (M). This function 
f was obtained as the restriction to J (L) of the lower adjoint of h. Crucially, we 
showed in Lemma 1.23 that this lower adjoint sends any element of J (L) to J (M). 
This way of defining a function dual to h first uses that h preserves finite meets for 
the existence of the lower adjoint f, and then uses that h preserves finite joins to 
show that f sends join-primes to join-primes.
Now, when we consider functions between finite distributive lattices that only 
preserve meets, but not necessarily joins, the lower adjoint still exists, but it may 
no longer restrict correctly to join-prime elements. Instead, for a meet-preserving 
function h: M ^ L with lower adjoint f: L ^ M, recall from Proposition 1.21 
that every element a e L is a finite join of join-prime elements. Therefore, since 
f: L ^ M preserves finite joins and J(L) join-generates L, the function f is 
uniquely determined by its restriction to join-prime elements: for any a e L,we 
have f (a) = \ f [ja n J(L)]. Moreover, since J(M) join-generates M, in order 
to dually encode the function f, and therefore h, it suffices to know the value f(p) 
for each p e J(L). To this end, we define
R := {(p, q) e J(L) X J(M) | q < f (p)}, 
(4.6) 

4.3 Unary Operators
115
so that f (p) = \J R[p] for every p e J(L). Note that we can express R in terms of 
h using the adjointness. Indeed, for any p e J(L) and q e J(M), we have
q < f (p) <> V b e M (f (p) < b =^ q < b)
^^ V b e M (p < h (b) 
=^ q < b)
^^ Vb e M (p e h(b) 
=^ q e b),
where we recall that (-) denotes the lattice isomorphism between a finite distributive 
lattice and the down-set lattice of its poset of join-prime elements (Proposition 1.21).
We call the binary relation R c J(L) x J(M) defined by (4.6) the relation dual 
to h. This relation R is upward order-compatible, see Exercise 4.3.1. Moreover, ifwe 
view the finite posets J (L) and J (M) as Priestley spaces by equipping them with 
the discrete topology, then any relation between them is trivially upper Priestley 
continuous and point-closed. The original meet-preserving function h: M ^ L 
can be recovered from R, using the following equality, which holds for any b e M :
h(b) = VR-1[b], 
(4.7)
where we recall that VR is the universal image defined in (4.4). Writing out the 
definitions, (4.7) expresses the fact that, for any p e J(L),
p < h (b) ^^ for all q e J (M), if pRq, then p < b, 
which can be proved using the lower adjoint f of h and the definition of R (see 
Exercise 4.3.1).
This concludes our informal description, in the case of finite distributive lattices, 
of the duality between meet-preserving functions and upward Priestley compatible 
relations. Summing up, we have represented the meet-preserving function h by an 
upward order-compatible relation R between the dual posets J (L) and J (M), 
from which h can be recovered as the upper adjoint of the unique join-preserving 
function f which is defined for p e J (L) by f (p) := V R [p]. As an instructive 
exercise (see Exercise 4.3.1), we invite you to verify the claims that were left 
unproved here, although they are also direct consequences of the general duality 
theorem that we prove below (see Exercise 4.3.3 for details about the relationship). 
A reader familiar with modal logic may have recognized in the equation (4.7) the 
definition of the □ (“box”) operator associated to a Kripke relation R; more on this 
in Section 4.4.
The General Case
In the remainder of this section, we generalize the ideas outlined above to finite- 
meet-preserving functions h between arbitrary distributive lattices that are not 

116
4 Duality Methods
necessarily finite. As in Chapter 3, join-primes have to be replaced by points of the 
dual space, but the underlying ideas are the same as in the finite case.
Proposition 4.39 Let L and M be distributive lattices with Priestley dual spaces 
X and Y, respectively. For any finite-meet-preserving h: M ^ L, there exists a 
unique upward Priestley compatible relation, R c X x Y, such that,
for any b e M, h(b) = VR-1 [b]. 
(4.8)
This relation R may be defined explicitly, for x e X, by
R[x] := 
(b | b e M, x e h(b)}, 
(4.9)
or, equivalently,
R := ((x, y) e X xY | for all b e M, if h(b) e Fx, then b e Fy}. 
(4.10)
Proof Let R c X x Y denote the relation defined in (4.9) and (4.10). We will now 
establish three properties, which suffice to conclude:
(a) 
R satisfies (4.8);
(b) 
R is upward Priestley compatible; and
(c) 
R is the unique relation with properties (a) and (b).
For (a), unfolding the definitions, we need to prove that, for any x e X and b e M, 
x e h(b) <> Vy e Y, if xRy, then y e K. 
(4.11)
The left-to-right direction is clear by definition of R. For the converse, we rea­
son contrapositively. Suppose that x £ h(b); this means that the homomorphism 
hx: L ^ 2 sends h(b) to 0. Since h is finite-meet-preserving, the composite func­
tion k := hx ◦ h: M ^ 2 is finite-meet-preserving. Thus, the set F := k-1 (1) is a 
filter which does not contain b. By the prime filter theorem (Theorem 3.10), pick 
a prime filter Fy containing F and still not containing b. The fact that F c Fy is 
easily seen to be equivalent to xRy, while y £ b, establishing that the right-hand 
side of (4.11) fails, as required.
For (b), we first show that (a) already yields that R is upper Priestley continuous. 
Indeed, any clopen up-set K c Y is equal to Y -b for some b e M, so that 
R-1[K] = X - VR-1 [b], by the formula for switching between universal and direct 
relational image (4.5). This means that R-1[K] is clopen, since by (a) it is equal to 
the complement of the clopen set h(b). Also, R is point-closed, since (4.9) shows 
that, for any x e X, R[x] is a closed down-set in Y. To finish the proof of (b), note 
that upward order-compatibility follows easily from the definitions, or also by an 
application of Exercise 4.3.2.

4.3 Unary Operators
117
We now prove (c). Indeed, we will prove the following stronger fact, namely, that 
for any upward Priestley compatible relations R, S c X x Y, we have
S c R ^^ for every b e M, VR-1[b] CVS-1[b]. 
(4.12)
Note that the uniqueness (c) follows from (4.12), for if S is any upward Priestley 
compatible relation satisfying (4.8), then VS-1[fe] = h(b) = VR-1[b] for every b e M, 
so S = R. The left-to-right direction of (4.12) is immediate from the definition of the 
universal image. For the converse, we will reason by contraposition and use the fact 
that R is point-closed. Suppose that S £ R;pick x e X and y e Y such that y e S[x] 
and y £ R[x]. Since R[x] is closed, and also a down-set by order-compatibility, 
there exists b e M such that R [x] c b and y £ b, as follows from Proposition 
3.15. It now follows from the definition of universal image that x e VR-1 [b], but 
x VS-1 [b] since xSy but y . This concludes the proof of (4.12). 
□
Definition 4.40 The relation R defined in Proposition 4.39 is called the dual 
relation of the finite-meet-preserving function h.
In Exercise 4.3.3 you are asked to use the uniqueness part of Proposition 4.39 to 
derive that, if X and Y are Priestley spaces, then every upward Priestley compatible 
relation R c X x Y is the dual relation of a unique finite-meet-preserving function.
Proposition 4.39 is the crucial new ingredient for the following extension of 
the Priestley duality theorem (Theorem 3.31) to a larger collection of morphisms, 
namely all finite-meet-preserving functions.
Theorem 4.41 The category of distributive lattices with finite-meet-preserving 
functions is dually equivalent to the category of Priestley spaces with upward 
Priestley compatible relations.
The proof uses Proposition 4.39, combined with some techniques from category 
theory, and will be given in Section 5.4, p. 191.
To finish this section, we draw a few further corollaries from Proposition 4.39. 
First, we show how it specializes to the Boolean case.
Definition 4.42 Let X and Y be Boolean spaces. A relation R c X x Y is called 
Boolean compatible if it is point-closed and continuous, that is, for any clopen 
K c Y, the set R-1[K] is clopen.
Since the Priestley order on a Boolean space is trivial, note that a relation between 
Boolean spaces is upward Priestley compatible if, and only if, it is Boolean com­
patible according to Definition 4.42. Combining this observation with Propositions 
4.39 and 3.36 allows us to deduce the following.

118
4 Duality Methods
Corollary 4.43 Let A and B be Boolean algebras with dual spaces X and Y, 
respectively. Finite-meet-preserving functions B ^ A are in a one-to-one corre­
spondence with Boolean compatible relations R c X x Y.
For easy reference and future use, we also record the order-duals of Proposition 
4.39 and Theorem 5.41, and the accompanying definitions.
Definition 4.44 Let X and Y be Priestley spaces and let R c X x Y be a relation. 
We say that R is:
• downward order-compatible if < • R • < c R, that is, for any x, x' e X and 
y, y' e Y, whenever x' < xRy < y', we have x'Ry';
• lower Priestley continuous if, for every clopen down-set K c Y, the set R-1[K] 
is clopen; and
• downward Priestley compatible ifR is downward order-compatible, lower Priest­
ley continuous, and point-closed.
Let X and Y be Priestley spaces and let R c X x Y be a downward Priestley 
compatible relation. We define the following function:
3R-1: ClpD(Y) ^ ClpD(X)
b » R-1[b], 
(4.13)
which we note is the same as X -VR-1[Y - b] by (4.5). Conversely, any finite- 
join-preserving function h: ClpD(Y) ^ ClpD(X) is equal to 3R-1 for a unique 
downward Priestley compatible relation Rh c X x Y , which can be defined 
explicitly by
Rh := {(x, y) e XxY | for every b e ClpD(Y), ify e b, then x e h(b)}. (4.14)
Proposition 4.45 Let L and M be distributive lattices with Priestley dual spaces 
X and Y, respectively. The assignments R ^ 3R-1 (4.13) and h ^ Rh (4.14) form 
a bijection between finite-join-preserving functions from M to L and downward 
Priestley compatible relations from X to Y.
Proposition 4.45 has essentially the same proof as Proposition 4.39. Instead 
of redoing the entire proof, one may also appeal to order-duality to deduce this 
proposition from Proposition 4.39, see Theorem 5.41 in Chapter 5 and the remarks 
following it.
We finish by examining two more special cases that may help elucidate the 
connection between the relations dual to finite-join- and finite-meet-preserving 
functions; in both of these cases, we examine a special setting where the two 
notions of dual relation interact with each other.

4.3 Unary Operators
119
First, if f : L M: g is an adjoint pair between distributive lattices, then 
the left adjoint f is finite-join-preserving and the right adjoint g is finite-meet­
preserving (see Exercise 1.1.8). Denote by X and Y the Priestley dual spaces of L 
and M , respectively. By the results of this section, f has a dual downward Priestley 
compatible relation Rf c Y x X and g has a dual upward Priestley compatible 
relation Rg c X x Y. The two relations are closely related: Rf is the relational 
converse of Rg , see Exercise 4.3.5.
Second, if h: M ^ L is a homomorphism between the distributive lattices L 
and M, then h has both an upward Priestley compatible dual relation Rh , because 
it preserves finite meets, and a downward Priestley compatible dual relation Sh , 
because it preserves finite joins. The intersection of Rh and Sh can be seen to 
be a functional relation, that is, for every x e X, there is a unique y e Y such 
that (x, y) e Rh n Sh. This relation Rh n Sh is in fact equal to (the graph of) the 
continuous order-preserving function f: X ^ Y dual to h, which was defined in 
Section 3.2; see Exercise 4.3.6.
Exercises for Section 4.3
Exercise 4.3.1 Let h: M ^ L be a meet-preserving function between finite 
distributive lattices and let R be the relation defined in (4.6).
(a) 
Prove that R is upward order-compatible.
(b) 
Prove equation (4.7).
(c) 
Show directly (i.e., without referring to Proposition 4.39) that the assignment 
h ^ R is a bijection between meet-preserving functions from M to L and 
upward order-compatible relations from J (L) to J (M).
Exercise 4.3.2 Let X and Y be posets and R c X x Y a relation. Prove that R is 
upward order-compatible if, and only if, R-1 is downward order-compatible if, and 
only if, for any subsets S c X and T c Y, R[S] is a down-set and R-1[T] is an 
up-set.
Exercise 4.3.3 This exercise shows in more detail how the proof of Proposition 
4.39 generalizes the proof sketch for the finite case given in the beginning of 
the section, and how one could naturally arrive at the compatibility conditions of 
Definition 4.38. It also establishes a link between duality for finite-meet-preserving 
maps and the canonical extension of such maps.
Let X and Y be posets and let R c X x Y be a relation.
(a) 
Prove that the pair of functions R[-]: P(X) 
P(Y): VR-1 [-] is an adjoint
pair.

120
4 Duality Methods
(b) 
Using Exercise 4.3.2, show that it then follows that this adjunction restricts to 
a well-defined adjunction R[-]: D(X) 
D(Y): VR-i [-] if, and only if, R is
upward order-compatible.
Further, assume that X and Y are Priestley spaces dual to distributive lattices L 
and M , respectively.
(c) 
Now assume that R is upward order-compatible. Prove that R is upper Priestley 
continuous if, and only if, the function VR-i [-]: D(Y) ^ D(X) factors through 
the embeddings L ^ D(X) and M ^ D(Y), that is, if there exists a function 
h: M ^ L such that h(b) = VR-i [ft] for all b e M. Also show that such a 
function h, if it exists, must preserve finite meets.
(d) 
Assume that R is upward order-compatible and upper Priestley continuous, and 
let h: M ^ L be the function that exists according to item (c). Prove that R is 
point-closed if, and only if, R is the dual relation of h.
(e) 
Show that, even if R is upward Priestley compatible, the function R[-] does not 
necessarily factor through L ^ D (X) and M ^ D (Y).
(f) 
Conclude that, for any finite-meet-preserving function h: M ^ L, the function 
VR-i : D(Y) ^ D(X) is a completely meet-preserving function which extends 
h, that is, VR-i [b] = h(b) for all b e M.
Note. The map VR-i is called the canonical extension of the function h: M ^ 
L. For more information, see, for example, Gehrke and Jonsson (i994). It is 
possible to construct the canonical extension of a finite-meet-preserving function 
by algebraic means. This can then be used to give an alternative proof of Theorem 
4.4i.
(g) 
Explain why the proof for the finite case, outlined earlier in this section, is a 
special case of the previous item.
Exercise 4.3.4 This exercise shows that the correspondence between upward 
Priestley compatible relations and finite-meet-preserving functions generalizes 
Priestley duality for homomorphisms given in Chapter 3.LetX and Y be dual 
Priestley spaces of distributive lattices L and M, respectively.
(a) 
Prove that, if f: X ^ Y is a continuous order-preserving function, then 
Rf := {(x,y) e X X Y | f (x) > y} is an upward Priestley compatible 
relation, which moreover has the property that R[x ] has a maximum for every 
x e X .
(b) 
Prove that, if R c X X Y is an upward Priestley compatible relation and R[x] 
has a maximum for every x e X, then f R : X ^ Y defined by f R (x) := 
max R[x] is a continuous order-preserving function.

4.4 Modal Algebras and Kripke Completeness
121
(c) 
Prove that a finite-meet-preserving function f: M ^ L is a homomorphism 
if, and only if, the dual relation R is such that R[ x] has a maximum for every 
x e X.
Exercise 4.3.5 This exercise shows that “the dual relations of adjoint pairs are 
converse to each other.” Let f: L M: g be an adjoint pair between distributive 
lattices and let X and Y be the Priestley dual spaces of L and M, respectively. Since 
f is a left adjoint, it preserves finite joins; let Rf c Y x X denote the downward 
Priestley compatible relation dual to f. Similarly, let Rg c X x Y denote the 
upward Priestley compatible relation dual to g. Prove that (x, y) e Rg if, and only 
if, (y, x) e Rf . That is, Rf and Rg are converse relations. Hint. The first items of 
Exercise 4.3.3 can also be useful here.
Exercise 4.3.6 Let h: M ^ L be a homomorphism between distributive lattices 
and let X and Y be the Priestley dual spaces of L and M, respectively. Denote 
by Rh c X x Y the upward Priestley compatible relation dual to h, viewed as 
a finite-meet-preserving function, and by Sh c X x Y the downward Priestley 
compatible relation dual to h, viewed as a finite-join-preserving function. Prove 
that the intersection Rh n Sh of the two relations is a functional relation, and that 
this is the continuous order-preserving function dual to h, as defined in Section 3.2.
4.4 Modal Algebras and Kripke Completeness
In this section, we show how the duality results of the previous section relate to 
Kripke’s possible world semantics for classical modal logic. We will see in Theorem 
4.53 that the dual space of the free modal algebra gives a canonical model for the 
basic normal modal logic K. In this view, Kripke semantics for modal logic is 
obtained from the Stone-Jonsson-Tarski duality for operators that we developed in 
Section 4.3 by “forgetting the topology.” We begin by giving a minimal introduction 
to modal logic, limiting ourselves to the parts that are needed for understanding the 
connection to duality theory; for much more material on modal logic and duality we 
refer to classic textbooks in the field, such as Blackburn et al. (2001) and Chagrov 
and Zakharyaschev (1997).
The basic normal modal logic, K, is an extension of classical propositional 
logic by a necessity operator, □. Formally, modal formulas are terms built from 
propositional variables and the constants T and ±, using the binary operations V 
and A, and unary operations - and □; we use the common notational convention that 
unary operators bind more strongly than binary ones, that is, the notation □ p ^ -q 
denotes the formula (□ p) ^ (-q), which is different from the formula □(p ^ -q). 
We also consider the possibility operator as an abbreviation, defined by de Morgan 

122
4 Duality Methods
duality as ^ := —□—^, and implication may be defined by ^ ^ ^ := —y v ^. 
Note that, if one considers modal operators in the setting of positive logic (i.e., 
distributive lattices or Heyting algebras) rather than of classical logic (i.e., Boolean 
algebras), then the interplay between □, ❖, and the lattice operations is more subtle, 
and they are no longer interdefinable by formulas. In this section, for simplicity 
we only treat the classical, Boolean algebra-based case, although it is possible 
to develop dualities for modal algebras based on distributive lattices and Heyting 
algebras (Goldblatt, 1989; Celani and Jansana, 1999; Bezhanishvili, 1999). We will 
consider the distributive case in Example 5.42 and Exercise 5.4.3 in Chapter 5, and 
we also revisit duality for operators on distributive lattices in Section 6.4, where it 
will be related to a function space construction; see in particular Definition 6.21.
A notion of derivability between modal formulas, FK, may be defined by extending 
a Hilbert-style proof calculus for classical logic with one additional axiom, □(p ^ 
q) ^ (□ p ^ □ q), and one additional rule: from FK ^, infer FK n^. We will not 
need to enter into details of the proof calculus here; see, for example, Chagrov 
and Zakharyaschev (1997, Section 3.6) for more details. Crucially for us is the 
characteristic property of K that, for any formulas ^ and ^, FK n(^ A ^) ^ 
(□^ A n^), and FK DT ^ T. In other words, the operation ^ ^ n^ yields a finite- 
meet-preserving function on the set of FK-equivalence classes of modal formulas. 
This leads to the following definition.
Definition 4.46 A modal algebra is a pair (B, □), where B is a Boolean algebra, 
and □: B ^ B is a finite-meet-preserving endofunction on B. A homomorphism 
from a modal algebra (B, nB) to a modal algebra (A, □ A) is a homomorphism 
h: B ^ A such that, for every b e B, h(dBb) = □ Ah(b).
Note that, if (B, □) is a modal algebra and V is a set of variables, and f: V ^ B 
is any function, then any modal formula ^ with propositional variables drawn 
from V has a uniquely defined interpretation f (^) in B, which may be defined 
inductively by setting f (v) := f (v) for v e V, f (t) := T, f (ny>) := □ f (y), 
7/ , , i \ 
7/ \ , , 7/ i \ 7/ 
\ 
7/ \ 
< t i i 
7 • .i
f (<p v ^) := f (<p) v f (^), f ( - ^) := — f (^), etc. In algebraic terms, f is the unique 
extension of f to a homomorphism from the term algebra over V to B.
It may be proved that the set of K-derivable equivalence classes of modal formulas 
in a fixed set of variables V is, up to isomorphism, the free modal algebra over 
V . The proof is a straightforward adaptation to the modal case of the construction 
of the Lindenbaum-Tarski algebra for propositional logic, which we saw when we 
constructed the free distributive lattice in Section 4.1, see Remark 4.5; for all the 
details in the modal setting, see, for example, Chagrov and Zakharyaschev (1997, 
Section 7.5) or Blackburn et al. (2001, Section 5.2). From this fact, one obtains the 
following theorem, which provides the foundation for algebraic modal logic, where 
it is known as the “algebraic completeness theorem for K.”

4.4 Modal Algebras and Kripke Completeness 
123
Theorem 4.47 Let y and 0 be modalformulas with propositional variables among 
x 1,..., x n. Then, i-K y ^ 0 if, and only if, for every function f: {x 1,..., x n} ^ B, 
with B a modal algebra, we have f(y) = f (0). In particular, i-K y if, and only if, 
f (y) = T for every interpretation f.
Proof See, for example, Chagrov and Zakharyaschev (1997, Theorems 7.43 and 
7.44) or Blackburn et al. (2001, Theorem 5.27). 
□
We now show how this algebraic completeness theorem for K may be com­
bined with the duality in Theorem 4.41 of Section 4.3 to obtain easy proofs 
of Kripke completeness theorems for K. We first give the definition of Kripke 
semantics.
Definition 4.48 A (discrete) Kripke frame is a pair (X, R), with X a set and 
R c X x X a relation. A Kripke Boolean space is a triple (X, t, R), with (X, t) a 
Boolean space and R c X x X a compatible relation on X.
For a set of propositional variables V, a valuation to a Kripke frame (X, R) is 
a function c: X ^ 2V. When (X ,t, R) is a Kripke Boolean space, a valuation 
c: X ^ 2V is called admissible if, for every v e V, the set
{x e X | c(x)(v) = 1}
is clopen. A (discrete) Kripke model is a tuple (X, R, c) where c is a valuation, and 
a Kripke Boolean model is a tuple (X, t, R, c) where (X, t, R) is a Kripke Boolean 
space and c is an admissible valuation.
Kripke models can be used to define a concrete, set-based semantics for modal 
logic, generalizing truth tables for propositional logic, as follows. Fix a set of vari­
ables V . For any Kripke model (X, R, c) , a forcing or truth relation, |= is defined 
between points of X and modal formulas with variables in V, as follows. For any 
x e X and v e V, define x |= v if, and only if, c (x)(v) = 1, and also define x |= T 
to always hold. Then, extend |= inductively by defining, for any modal formulas y, 
0, that x |= y V 0 if, and only if, x |= y or x |= 0; x |= -y if, and only if, it is not 
the case that x |= y; and finally,
def
x |= Dy ^^ for every y e X, if xRy, then y |= y. (4.15)
If x |= y, then we say that y holds or is true at x e X. This definition in particular 
applies to a Kripke Boolean model (X, t, R, c), where the further condition that the 
valuation c must be admissible implies that the truth set of y,
[y! := {x e X | x |= <p},
is clopen, for every modal formula y; also see Proposition 4.52 and Exercise 4.4.1. 
If y is a modal formula with variables in V and (X, R, t, c) is a Kripke Boolean 

124
4 Duality Methods
model, then ^ is valid on the model provided that ^ is true at every x e X. The 
formula ^ is valid on a Kripke Boolean space if it is valid for every admissible 
valuation. On the other hand, ^ is valid on a (discrete) Kripke frame (X, R) it is 
valid under every valuation. Clearly, if (X, R, t) is a Kripke Boolean space and <p 
is a formula that is valid on the underlying discrete Kripke frame (X, R), then ^ is 
in particular valid on the Kripke Boolean space (X, R, t). The converse is not true 
in general; for an example, see Exercise 4.4.4.
Example 4.49 Consider the Kripke frame (N, <). Examples of valid formulas on 
this Kripke frame are -n±, since for every n e N there exists m e N with n < m, 
and also □□ p ^ □ p, since < is a transitive relation. We leave it as an instructive 
exercise for the reader unfamiliar with modal logic to check in detail that these 
formulas are indeed valid. An example of a formula that is not valid on this Kripke 
frame is □ p ^ p: for the valuation c which sends 0 e N to (p ^ 0) and any other 
n e N to (p ^ 1), we have that 0 |= □ p but 0 = p, so that 0 = □ p ^ p. Note 
that, under this valuation, □ p ^ p does happen to be true in all n e N-{0}. In fact, 
one may prove as another instructive exercise that the formula □ p ^ p is valid on a 
Kripke frame if, and only if, the relation of the frame is reflexive (see Exercise 4.4.2).
A first connection between Kripke frames and modal algebras is given by Corol­
lary 4.51, a consequence of the results in Section 4.3.
Definition 4.50 For a Kripke Boolean space (X, t, R) , define its dual modal 
algebra to be the pair (B, VR-i), where B is the Boolean algebra dual to (X, t).
The following is now a straightforward application of Proposition 4.39.
Corollary 4.51 Every modal algebra (B, □) is isomorphic to the dual modal 
algebra of a Kripke Boolean space (X, t, R), which is unique up to isomorphism.
Proof By Stone duality, there is an up to isomorphism unique Boolean space (X, t) 
dual to B. By Proposition 4.39, and the fact that “upward Priestley compatible” 
means “Boolean compatible” (Definition 4.42) in the Boolean case, there is a 
unique compatible relation R on X such that □ = VR-i. 
□
We now use Corollary 4.51 to reformulate Kripke’s semantics for modal logic 
in the language of modal algebras. Note first that functions c: X ^ 2V are in a 
bijection with functions f: V ^ P(X), via the “currying” map which sends any 
function c: X ^ 2V to the function f c : V ^ P (X) defined by
fc(v) := {x e X | c(x)(v) = i}.
The relationship between Kripke semantics and homomorphisms of modal algebras 
is now explained by the following proposition. Recall that f denotes the unique in­
terpretation of modal formulas into a modal algebra extending a given interpretation 

4.4 Modal Algebras and Kripke Completeness 
125
f of the variables. Also, note that (P(X), VR-1) is a modal algebra for any Kripke 
frame (X, R) .
Proposition 4.52 Let (X, R) be a Kripke frame and c: X ^ 2V a valuation. For 
any modal formula o and x e X, x |= o if, and only if, x e fc (o).
Proof Let us denote by h the function that sends any modal formula o to its truth 
set, that is, for any modal formula o,
h(o) := {x e X | x = <p}.
The claim may then be rephrased as saying that
h (o) = fc (0)
for all modal formulas o. To prove this, we show first that h respects the interpretation 
in (P (X), VR-1 ) of each of the operations used to construct modal formulas: For 
the Boolean operations, this is straightforward, and for any modal formula o, we 
have
h(d<o) = {x e X | Vy e X, if xRy, then y e h(<p)} = VR-1 (h(o)).
To finish the proof, note that h |V = fc , by definition of |= on variables. Thus, h 
extends f c, and must therefore be equal to fc, as required. 
□
We may now combine Corollary 4.51 and Proposition 4.52 to give a strong 
completeness theorem for the modal logic K. A set of formulas r is called K- 
consistent if for every finite subset F of r, the formula -( /\v eF O is not provable 
in K. A set of formulas r is called satisfiable (in a Kripke model) if there exist a 
Kripke model and a point x in it such that all the formulas in r hold in x.
Theorem 4.53 Any K-consistent set of formulas is satisfiable.
Proof Let r be a K-consistent set of formulas and let V be the set of propositional 
variables that occur in r. Let A denote the free modal algebra on V. For any formula 
0, we denote by [o] the corresponding element of A, that is, its equivalence class 
up to K-provable equivalence. Write (X, t, R) for the Kripke Boolean space dual 
to A, using the duality of Corollary 4.51. Denote by T the filter in A generated by 
{[o] | o e r}. Note that the consistency assumption means exactly that the bottom 
element of A is not in T: Indeed, if we would have [±] e T, then there would have 
to exist a finite set F of formulas in r such that /\v eF [o] = [±], which would 
mean exactly that -( /\veF y) is provable in K. Therefore, using compactness of 
the space (X, t, R), pick a point x that is in the intersection of the sets [<o], for o 
in T. Consider the canonical valuation c: X ^ 2V such that f c (v) = [v] for every 
v e V; explicitly, c(x)(v) = 1 if, and only if, x e [v]. Then, since both [o] ^ [o]

126
4 Duality Methods
and o ^ fc (o) are homomorphisms from A to the dual modal algebra of (X, t, R) 
with the same value on V, they must be equal. In particular, for any o e r c T, we 
have x e [o] = fc (o), so that x |= o by Proposition 4.52. 
□
The Kripke model that we construct in the proof does not depend on the particular 
choice of the set r, but only on the set V of propositional variables that occur in 
r. The Kripke model is then obtained as the dual space of the free modal algebra 
on V. This Kripke model is known in the modal logic literature as the canonical 
model for the logic K, on the set of variables V . In that literature, the points of this 
model are often presented as “maximal consistent sets.” Maximal consistent sets are 
ultrafilters of the free modal algebra in disguise (see Exercise 4.4.3). The Boolean 
algebra with operator (P(X), VR-i) constructed here is known as the canonical 
extension of the modal algebra A, also see the notes at the end of this chapter.
The proof technique for completeness given in Theorem 4.53 is not limited to K. 
In particular, if S is any set of modal formulas, which we think of as axioms, then 
a new modal logic K + S may be defined as the set of formulas that are derivable 
using the rules from K, but allowing in addition an appeal to any substitution 
instance of the formulas in S without proof. Some famous examples include K4 := 
K + {□ p ^ □□ p} and S4 := K + {□ p ^ □□ p, □ p ^ p}. These axioms □ p ^ p and 
□ p ^ □□ p each have the property that, if (A, □) is a modal algebra in which the 
axiom evaluates to T under all interpretations, then this is still the case in the modal 
algebra (P(X), VR-i), where (X, R) is the Kripke Boolean frame dual to (A, □). 
Such axioms are said to be “preserved by canonical extensions,” or “canonical;” 
also see the notes at the end of this chapter.
A further interesting example of a modal axiom is Lob’s axiom
A := □(□ p ^ p) ^ □ p,
which, when added to K, yields the Godel-Lob logic GL. Godel’s name is attached 
to the logic because of its relevance in provability logic, where “□ p” is interpreted 
as the provability of a proposition, encoded in some theory of arithmetic. In duality- 
theoretic terms, the axiom is interesting because it has a non-trivial behavior with 
respect to the topology on its Kripke Boolean spaces, and a proper understanding of 
the logic GL requires using this topology (see Exercise 4.4.4 for more information). 
In other words, the axiom GL is not preserved by canonical extension.
In a slightly different direction, finite model properties, that is, completeness 
with respect to a class of finite models, are often desirable in modal logic, and 
may also be obtained using duality methods. We do not discuss this further here, 
but refer to the already-cited modal logic textbooks (Chagrov and Zakharyaschev, 
1997; Blackburn et al., 2001) for more information.

127
4.4 Modal Algebras and Kripke Completeness
Modal Algebra Homomorphisms and Bounded Morphisms
To end our exploration of duality for modal algebras in this section, we briefly 
discuss duality for homomorphisms between modal algebras and the corresponding 
notion of bounded morphism between the dual Kripke Boolean spaces.
Recall that we defined a homomorphism from a modal algebra (B, DB) to a 
modal algebra (A, □ A) in Definition 4.46 as a Boolean algebra homomorphism that 
preserves the box operation. The dual of such a homomorphism should clearly be 
a continuous function from the dual space XA to the dual space XB which satisfies 
an additional property with respect to the respective Kripke relations RA and RB . 
The following definition and proposition show what this property is.
Definition 4.54 Let (X, R) and (Y, S) be Kripke frames. A function f: X ^ Y is 
called a bounded morphism if it satisfies the following two properties:
(a) 
for every x, x' e X, if xRx', then f (x)Sf (x'); and
(b) 
for every x e X, y e Y, if f (x) Sy, then there exists x' e X such that xRx' 
and f (x') = y.
The first condition in Definition 4.54 is sometimes called the “forth” condition, 
and the second condition the “back” condition. Bounded morphisms are also called 
back-and-forth morphisms in the modal logic literature. We will see in the proof 
of Proposition 4.56 that the two conditions correspond to two subset inclusions. 
We need the following lemma, which, in a slightly more general context, has been 
referred to as “Esakia’s lemma” in the literature.
Lemma 4.55 Let R c X x X be a relation on a Boolean space X such that R[x] 
is closed for every x e X. Let f: X ^ Y be a continuous function from X to a 
Boolean space Y. For every y e Y,
R-1 [ f -1 (y)] = 
{R-1 [ f -1 (K)] I K C Y clopen and y e K}.
Proof The left-to-right inclusion is obvious. For the other inclusion, suppose that 
x e X is not in the left-hand side. Then, f[R[x]] is a closed set that does not contain 
y, so, using Proposition 3.15, there exists a clopen set K c Y which contains y and 
is disjoint from f [R[x]]. The latter means that x £ R-1 [f -1 (K)], as required. □
Proposition 4.56 Let (A, □ A) and (B, nB) be modal algebras with dual Kripke 
Boolean spaces (X, tx, R) and (Y, ty, S), respectively. Let h: B ^ A be a ho­
momorphism of the underlying Boolean algebras and let f: X ^ Y the dual 
continuous function. The following are equivalent:
(i) the function h is a homomorphism of modal algebras; and 
(ii) the function f is a bounded morphism.

128
4 Duality Methods
Proof Recall from Proposition 4.39 that, for any a e A and b e B, aAa = VR-1 [a] 
and DBb = VS-1[b]. Also, for any b e B, h(b) = f-1 (b), by Stone duality for 
homomorphisms. Thus, (i) is equivalent to:
for every b e B, f-1 (Vs-i[K]) = VR-1[f-1 (b)]. 
(4.16)
Using the fact that, for any binary relation R on a set X, VR-1 [U] = X - R-1 [X - U] 
(see equation (4.5)), and making a change of variable b := ­ b, (4.16) is equivalent 
to:
for every b e B, f-1 (S-1[K]) = R-1[f-1 (b)]. 
(4.17)
We will now show that the condition in (4.17) is equivalent to:
for every y e Y, f-1(S-1[y]) = R-1[f-1(y)]. 
(4.18)
The condition in (4.18) is easily seen, by unraveling the definitions, tobe equivalent 
to (ii), so this will conclude the proof of the proposition.
Now, to prove the equivalence of (4.17) and (4.18), note that (4.18) implies 
(4.17), since inverse images preserve unions. Thus, assuming (4.18), we have that 
for any subset U of Y,
f-1 (s-1[U]) = U f-1 (S-1[y]) = U R-1[f-1 (y)] = R-1[f-1 (U)]. 
yeU 
yeU
For the other direction, we use Lemma 4.55 twice. Applying this lemma first to 
the relation S and the identity function on Y, we get S-1[y] = QbeFy S-1[b]. Now, 
assume (4.17) holds. Then, for any y e Y, we have
f-1 (s-1[y]) = f-11 p| S-1[&]
\b eFy 
/
= p| f-1 (s-1[K])
b eFy
= P| R-1[f-1 (b)] = R-1[f-1 (y)], 
b eFy
where we have used Lemma 4.55 again for the last equality. 
□
Remark 4.57 The proof of Proposition 4.56 in fact shows that h is a homomor­
phism of modal algebras if, and only if, for every subset U c Y, f-1 (S-1[U]) = 
R-1[ f -1 (U)]. In other words, the property of being a homomorphism of modal 
algebras lifts from h to the complete homomorphism f-1 from P(Y) to P(X). That 
is, the proposition shows that the property of “preserving the box operation” is a 
canonical property. We will not treat the theory of canonicity in detail in this book; 
see the notes at the end of the chapter for references.

4.4 Modal Algebras and Kripke Completeness
129
Exercises for Section 4.4
Exercise 4.4.1 Let (X, t, R, c) be a Kripke Boolean model. Prove that, for any 
modal formula ^, the set
{x e X | x = <p}
is clopen. Hint. Use the proof of Proposition 4.52.
Exercise 4.4.2 Prove the claims made in Example 4.49.
Exercise 4.4.3 A maximal consistent set of modal formulas with respect to the 
modal logic K is a K-consistent set of formulas that is not properly contained in 
any other K-consistent set. Fix a set of variables V. Prove that the set of ultrafilters 
of the free modal algebra over V is in a bijection with the set MCS(V) of maximal 
consistent sets of modal formulas whose variables lie in V. Further, by the results in 
this chapter, the set of ultrafilters comes equipped with a topology and a compatible 
relation R; describe the corresponding topology and the relation on the set MCS(V). 
Hint. The bijection is “almost” the identity function.
Exercise 4.4.4 This exercise concerns LAub’s axiom, 2 := □(□ p ^ p) ^ □ p. 
We write GL for the logic K+{2}. In particular, the last parts of this exercise outline 
a proof that this axiom is not canonical: There exists a Kripke Boolean space on 
which the axiom is valid (i.e., with respect to admissible valuations), while itis not 
valid on the underlying Kripke frame (i.e., with respect to all valuations).
(a) 
Prove that 2 is equivalent to q ^ (q A -^q), where q := -p.
(b) 
Show that, if2 is valid on a Kripke frame (i.e., true under any valuation), then 
the Kripke frame must be transitive and irreflexive.
(c) 
Let (X, t, R) be a Kripke Boolean space for which R is transitive and irreflex-
ive. Prove that 2 is valid on (X, t, R) if, and only if, for every clopen set K, 
y e K,andx e X such that xRy, there exists y0 e K such that xRy0 and y0Rz 
implies z £ K, for every z e X.
(d) 
Consider the Boolean space X which is the one-point compactification of the 
countable set {n-, n+ : n e N}; write to for the additional point “at infinity.” 
Define the relation R on X to be the smallest transitive relation satisfying 
the following conditions: for any n, m e N, n+ Rto, toRm-, n+R(n + 1)+ and 
(m + 1)-Rm-. Prove that R is a compatible relation. Hint. Drawing a picture 
may help: the relation R makes the elements m- into a descending chain, 
the elements n+ into an ascending chain, and puts to in the middle between 
the two chains, with the m- chain on top and the n+ chain below. Note the 
similarity with Figure 3.3, the dual of the lattice N ® Nop.
(e) 
Show that 2 is valid on the Kripke Boolean space (X, t, R) defined in the 
previous item.

130
4 Duality Methods
(f) 
Prove that A is not valid on the discrete Kripke frame (X, R) underlying the 
space of the previous items; that is, find a (non-admissible!) valuation c and 
a point x in X such that x |= A in the discrete Kripke model (X, R, c) .
4.5 Operators of Implication Type
In this section, we study duality for binary operators between distributive lattices. 
Such operators generalize the finite-join-preserving and finite-meet-preserving 
functions for which we developed a duality in Section 4.3. We focus in this section 
on binary operators that are “of implication type,” in a sense to be made precise 
below. The theory that we develop in this section holds more generally, and can be 
developed for any “order type,” and for operations of any arity, also larger than 2. 
We restrict ourselves here to binary operators of implication type, because these 
are the types of operators that we will use in the applications in Chapters 7 and 8, 
and because the theory for these operators is sufficiently general to see what goes 
on in the general case.
Definition 4.58 Let D, E, and F be distributive lattices. A function h: D x E ^ F 
is called an implication-type operator, if, for any d, d' e D, e, e' e E, the following 
properties hold:
h(d v de) = h(d, e) A h(de) 
and 
h(±, e) = T; and (4.19)
h(d, e A e') = h(d, e) A h(d, e') 
and 
h(d, T) = T. 
(4.20)
The two properties stated in (4.19) together are sometimes referred to as “h 
sends finite joins to meets in the first coordinate,” and the two properties in (4.20) 
as “h sends finite meets to meets or preserves meets in the second coordinate.” As 
mentioned already, variations on this definition are possible. First, when the lattices 
are complete, one can require that h sends all joins to meets in the first coordinate 
and preserves all meets in the second coordinate; this is then called a complete 
implication-type operator. Second, we will sometimes consider monotone versions 
of this definition. We will then say that h is an operator of diamond type if it sends 
finite joins to joins in each of its coordinates, and a complete operator of diamond 
type if it does so for all joins (also see Exercises 4.5.3 and 4.5.7).1
The terminology “implication type” stems from the fact that, in many logical 
theories there is an implication operation and it is typically of implication type as
1 In the literature, the operators that we call “of diamond type” are often called “normal (additive) operators” 
and then operators “of box type” (i.e., preserving finite meets in each coordinate) are called “dual normal 
operators” or “multiplicative operators.” A certain amount of bookkeeping is then required to deal with 
operators that mix the two, so that, for instance, what we call “implication-type operator” would be called a 
“(d, 1)-dual normal operator” in the terminology of, for example, Gehrke and Priestley (2007). While 
variations are possible, the methods developed here are limited to operations for which some order 
dualization of selected input coordinates yields either an operator of box type or of diamond type. For 
example, the methods developed here do not apply to binary operations that only preserve joins in the first 
coordinate, and only meets in the second.

4.5 Operators of Implication Type
131
defined here. However, most commonly, implication operations in logic satisfy a 
stronger property, namely that of being the residual of the conjunction operation 
of the logic. Residuation is a higher arity variant of the very important concept of 
adjunction in order theory. While residuals may be defined relative to functions of 
any arity, for simplicity of notation, we only give the definition in the binary case. 
This notion will play an important role later in the book, in particular in Chapter 8.
Definition 4.59 Let P 1, P2, and Q be preordered sets and let h: P 1 x P2 ^ Q 
be a binary order-preserving function. Suppose that for each p 1 e P1, the function 
hp1: P2 ^ Q, defined by hp1 (p2) := h(p 1,p2) has an upper adjoint rp1: Q ^ P2. 
Then, we obtain a binary function
r: P1 X Q ^ P2, (p 1, q) w rp1 (q).
By the definition of upper adjoint, r is uniquely determined by the property that for 
all p1 e P1, p2 e P2 and q e Q we have
h(p 1,p2) < q -' p2 < r(p 1, q).
We call the function r the right residual of h, and we may similarly define a left 
residual l of h by inverting the roles of P1 and P2. It is uniquely determined by the 
property that for all p1 e P1, p2 e P2, and q e Q we have
h (p 1, p2) < q -' p 1 < l (q, p2).
If both left and right residuals exist, then h is called a residuated operation and r 
and l are called its (upper) residuals.2
From the join and meet preservation properties of adjoints, it follows that a 
residuated operation preserves all existing joins in either coordinate, and, for exam­
ple, the right residual sends existing joins in its first coordinate and existing meets 
in its second to meets. As a consequence, a residuated binary operation between 
lattices is an operator and its right residual is of implication type, as is the oper­
ation obtained by switching the order of the coordinates of the left residual (see 
Exercise 4.5.1).
Note that Definition 4.58 can be equivalently formulated by saying that, for every 
d0 e D, the unary operation e ^ h (d0, e) is finite-meet-preserving when viewed as 
a map from E to F, and for every e0 e E, the operation d ^ h (d, e0) is finite-meet­
preserving when viewed as a map from Dop to F . Implication-type operators can
2 A more complete name for r would be upper right residual, and for l upper left residual. Note that the use of 
“left/right” in the definition of residual refers to the “variable” coordinate of h when considering the existence 
of an upper adjoint; for example, the right residual r is the upper adjoint when the right input coordinate of h 
is variable, and the left input coordinate is fixed. This is a different use of “left/right” than in the definition of 
left/right adjoint, and to avoid confusion, in this context, the lower/upper terminology is preferred for referring 
to adjoints. Since we mostly consider upper residuals in this book, we will usually omit the adjective “upper.” 

132
4 Duality Methods
thus be understood as bilinear maps from the meet-semilattice underlying Dop x E 
to the meet-semilattice underlying F. Note also that, for a function h: D x E ^ F, 
being of implication type is a very different property from preserving finite meets 
as a map from the Cartesian product lattice Dop x E to the lattice F ! (see Exercise 
4.5.4). Pursuing the above analogy, a bilinear map of abelian groups is very different 
from a homomorphism from the direct product group.
Example 4.60 For any Boolean algebra B, the function h: B x B ^ B defined 
by h (a, b) := - a V b is an operator of implication type. This follows from the 
distributive law and the fact that ­  is a homomorphism from Bop to B. Note that 
this is a rather special example because this operation h is in fact uniquely definable 
from the order structure of the Boolean algebra, being the right residual of the meet 
operation. More generally, Heyting algebras are distributive lattices for which the 
meet operation admits a residual (see Exercise 4.5.1). We will discuss this example 
in depth in Section 4.6.
Example 4.61 Consider the lattice L = [0, 1], the real unit interval with the usual 
ordering, and define the operation h: L x L ^ L by h(a, b) := min(1 - a + b, 1). 
The operation h is an operator of implication type, and is known in the literature 
as the Lukaciewicz implication. More generally, if A is any lattice-ordered abelian 
group with identity element e and containing a so-called strong unit u, then an 
operator of implication type h may be defined on the unit interval [e, u] by h(a, b) := 
(u - a + b) A u. These kinds of implication-type operators play a central role in 
the study of multi-valued logic and MV-algebras. We have omitted the precise 
definitions here; see, for example, Cignoli et al. (2000) and Mundici (2011).
Example 4.62 If •: X x X ^ X is a binary operation on a set X, then it induces 
an implication-type operator \ on the power set P(X), defined by
u\v := {y e X I Vx e u, x • y e v}.
This kind of operator of implication type plays an important role in applications 
of duality theory to automata theory, and is actually part of a residuated family 
of operations on P(X), further see Section 8.2. Also, see Exercise 4.5.6 for a 
generalization of this example to ternary relations on a set X , which one may think 
of as multi-valued binary operations.
Later in this book, we will also encounter operators of implication type when we 
construct the lattice dual to a function space construction; see Section 6.4.

4.5 Operators of Implication Type
133
Duality for Operators of Implication Type
As we did with finite-meet-preserving functions in Section 4.3, we will associate to 
every operator of implication type a relation between the dual spaces. The underlying 
ideas are very similar to that unary case: An operator h: D x E ^ F should be 
determined by its action on points of the dual space. Indeed, for a fixed d e D, 
the operation hd: E ^ F defined by hd(e) := h(d, e) is a finite-meet-preserving 
function and thus has an associated dual relation Rd c XF x XE, by the results of 
Section 4.3. We will show in this section how this family of relations (Rd)deD can 
in fact be described by a single ternary relation R c XD x XF x XE . The following 
additional notations for ternary relations will be useful to this end.
Notation Let R c X x Y x Z be a ternary relation between sets X, Y, and Z. Let 
U c X . We use the following notation for the direct image of U under the relation 
R:
R[U, _, _] := {(y, z) e Y x Z | there exists x e U such that R(x, y, z)}.
Analogously, let V c Y and W c Z. Then, the notations R[_, V, _] and R[_, _, W]
are defined in the same way. Similarly, we define the direct image
R[U, V, _] := {z e Z | there exists (x, y) e U x V such that R(x, y, z)}.
In particular, when U is a singleton set {x}, we write R[x, _, _] instead of
R[{x}, _, _], and, similarly, when moreover V = {y}, we write R[x, y, _] for 
the set R[{x}, {y}, _].
In analogy with Section 4.3, we now identify necessary and sufficient conditions 
for a relation R to be a dual relation of an operator of implication type.
Definition 4.63 Let X, Y,andZ be Priestley spaces. A relation R c X x Y x Z is 
compatible (of implication type)3 ifit satisfies the following properties:
• for any x, x' e X, y, y' e Y, z, z' e Z, if x' > x, y' > y, and z' < z, and 
R(x, y, z), then R(x', y', z');
• for any clopen down-set U ofX and any clopen up-set V of Z, the set R[U, _, V] 
is clopen; and
• for every y e Y, the set R[_, y, _] is closed.
We now prove that the compatible relations of implication type between Priestley 
spaces one-to-one correspond to implication-type operators on the dual distributive 
lattices. Analogously to the universal image defined for binary relations, which gave
3 We again use the term “compatible” here, now for a ternary relation. Whenever we need to distinguish it from 
the other types of compatibility considered earlier in this chapter, we will call it “compatible of implication 
type,” but we will sometimes just say “compatible” in order not to make the terminology too heavy. 

134
4 Duality Methods
a finite-meet-preserving function for every binary relation, we will now associate 
an implication-type operator to a ternary relation.
Let X, Y, and Z be Priestley spaces. For any relation R C X x Y x Z, U c X and 
V C Z, define the subset U ^R V of Y as:
U >r V := {y e Y | for all x e U, z e Z, if R(x, y, z), then z e V}. 
(4.21)
Lemma 4.64 If R is a compatible relation of implication type, then ^R defines 
an implication-type operator from ClpD(X) x ClpD( Z) to ClpD(Y).
Proof The set on the right-hand side of (4.21) is equal to Y - R[U, _, Z - V], and 
is therefore a clopen down-set, by the compatibility conditions on R. The required 
equations for an implication-type operator now follow directly from the fact that 
the direct image operation (U, V) ^ R[U, _, V] preserves joins in each coordinate 
(see Exercise 4.5.7 for the details). 
□
We now show how to recover the compatible relation from an implication-type 
operator.
Definition 4.65 Let D, E,andF be distributive lattices with Priestley dual spaces 
XD, XE, and XF, respectively. Let h: D x E ^ F be an operator of implication 
type. We define the dual relation Rh c XD x XF x XE as follows, for any (x, y, z) e 
XD x XF x XE :
def
Rh (x, y, z) ^^ for every d e D, e e E, 
(4.22)
ifd e Fx and h(d, e) e Fy, then e e Fz.
This definition can be given a logical interpretation: If we think of prime filters 
as complete theories, then (x, y, z) is in the relation associated to an implication 
operation ^ if the triple (x, y, z) “respects” a modus ponens rule for the implication, 
that is, when a proposition d is in the theory of x and d ^ e is in the theory of y, 
then e must be in the theory of z .
Proposition 4.66 Let h: D x E ^ F be an implication-type operator. The dual 
relation Rh c XD x XF x XE is a compatible relation of implication type, and it is 
the unique compatible relation R such that, for any d e D, e e E, h(d, e) = d ^R e'.
Proof The proof follows the same general scheme as the proof of Proposition 4.39 
in Section 4.3, but requires a bit more work. It is immediate from the definition of 
Rh that it satisfies the order compatibility condition. We now prove that, for any 
d e D, e e E, we have
h(d^e) = d^Rh e. 
(4.23)

4.5 Operators of Implication Type
135
For the left-to-right inclusion, suppose that y e h(d, e). To prove that y e d ^R e~, 
let x € d and z e XE such that R(x, y, z). Then, by definition of Rh, since y e 
h(d, e), we have z e e.. Thus, y e d ^Rh e.
For the right-to-left inclusion, we reason contrapositively. Suppose that y £ 
h(d, e). Consider the subset of D defined by
I := {d' e D | h(de) e Fy}.
Using the fact that h turns joins into meets in the first coordinate, we note that I 
is an ideal in D , and by assumption it does not contain d . Using the prime filter 
theorem, Theorem 3.10, pick x e XD such that x e d and Fx is disjoint from the 
ideal I . Now, consider the subset of E defined by
G := {e' e E | there exists d' e Fx such that h(de') e Fy}.
Note that G does not contain e: if d' e Fx, then d' £ I, so h (de) £ Fy. We now 
show that G is a filter in E. First, TE e G, because h(TD, TE) = TF e Fy, and 
TD e Fx. Also, G is an up-set: if e 1 e G and e2 > e 1, then h (de2) > h (de 1)
for any d', so if h (de 1) e Fy, then also h (de2) e Fy. Finally, we show G is
closed under binary meets. Suppose that e1, e2 e G. Pick d1, d2 e Fx such that 
h(di, ei) e Fy for i = 1,2. Then, d := d 1 a d2 e Fx and
h(d, e 1 A e2) = h(d, e 1) a h(d, e2) > h(d 1, e 1) A h(d2, e2) e Fy,
where we use in the last inequality that h is order reversing in the first coordinate. 
Using the prime filter theorem, Theorem 3.10, pick z e XE such that z £ e and 
G c Fz. Now, R(x, y, z), using the definition (4.22): if d' e D and e' e E are such 
that d' e Fx and h (de') e Fy, then e' e G by definition of G, so e' e Fz by the
choice of z. But we also have x e d while z £ e, so by the definition of ^Rh (4.21), 
we get y £ d ^Rh e. This concludes the proof of (4.23).
From (4.23), we conclude in particular that Rh satisfies the second condition 
in the definition of compatibility: Indeed, if U is a clopen down-set of XD and 
V is a clopen up-set of XE, then there exist d e D and e e E such that d = U 
and XE - e = V. Now, (4.23) implies that Rh [U, _, V], which is the complement of 
d ^R e~, is clopen.
For the last condition in the definition of compatibility, note that, for any y e XF , 
we may rewrite the definition in (4.22) to get
Rh[_, y, _] = Q{(Xd — d) X e | (d, e) e D x E, h(d, e) e Fy},
which is clearly closed in the product XD X XE.
Thus, Rh is a compatible relation. It remains to prove that Rh is the only compat­
ible relation for which the associated implication-type operator is equal to h. Let 
R c XD x XF X XE be any compatible relation and suppose that d ^R ? = h(d, ee)

136
4 Duality Methods
for every d e D, e e E. We will prove that R = Rh. Let (x, y, z) e XD x XF x XE be 
arbitrary. First, if R(x, y, z), then for any d e Fx and e e E such that h(d, e) e Fy, 
we have y e d ^R e, so that e e Fz; thus, Rh (x, y, z). Conversely, suppose that 
R(x, y, z) does not hold. This means that (x, z) is not in the set C := R[_, y, _], 
which is closed and an up-set in the product space XD x XEop, using the fact that 
R is compatible. By Proposition 3.15 applied to XD x XEop, which is a Priestley 
space by Exercise 3.2.6, there exists a clopen down-set K c XD x XEp such that 
(x, z) e K and K is disjoint from C. Using Exercise 3.2.5, there then also exist 
d e D and e e E such that (x, z) e dx ec and d x ec is disjoint from C. It follows 
that y is in d ^R e: Whenever R(x', y, z') for some x’ e d, we must have z’ e e, 
since z' e ec would contradict that d x ec is disjoint from C = R[ , y, _]. Now, by 
the assumption that d ^R e = h(d, e), we get that y e h(d, e). But then Rh(x, y, z) 
does not hold, since d e Fx and h (d, e) e Fy but e Fz. 
□
Just as in the case of modal algebras (Definition 4.46), one may define a dis­
tributive lattice with implication-type operator to be a pair (D, ^), where D is a 
distributive lattice and ^: D x D ^ D is an implication-type operator on D. Then, 
in the same way as was done for modal algebras in Corollary 4.51, it follows easily 
from Proposition 4.66 that any distributive lattice with implication-type operator 
(D, ^) is isomorphic to (ClpD(X), ^R), where X is the Priestley dual space of D 
and R is the dual relation R^ c X x X x X of the operator ^. Moreover, (X, R) is 
the unique such object, up to relation-preserving isomorphism of Priestley spaces 
(i.e., order-homeomorphisms f such that both f and f -1 preserve the relation). 
Thus, Proposition 4.66 gives an “object correspondence” between distributive lat­
tices with implication-type operators and pairs (X, R) with X a Priestley space and 
R a compatible relation.
In order to turn this object correspondence into a full-fledged duality for dis­
tributive lattices equipped with implication-type operators, one needs to study 
when distributive lattice homomorphisms preserve an implication-type operator, 
and what this says about the dual functions between Priestley spaces. One will then 
obtain a notion of bounded morphism with respect to ternary relations, analogous 
to Definition 4.54 in Section 4.4. Instead of performing this general analysis here, 
we defer it to the specific cases where we need it. In particular, in Theorem 4.74 
we will establish a full dual equivalence for Heyting algebras, which is the special 
case where the implication-type operator on the distributive lattice is the residual 
of the binary operation A of the lattice. Further, in Sections 8.2 and 8.3 of Chapter 
8, we will develop quotient-subspace duality for implication-type operators in the 
special setting of residuation operations on a Boolean algebra, which are in partic­
ular implication-type operators. For a treatment of the fully general n-ary case, we 
refer to the first section of Goldblatt (1989).

4.5 Operators of Implication Type
137
Exercises for Section 4.5
Exercise 4.5.1 Let L 1, L2, and L be lattices and h: L 1 x L2 ^ L a residuated 
binary function.
(a) 
Show that h is a binary operator of diamond type. Hint. Use Exercise 1.1.8.
(b) 
Show that its right residual r is an operation of implication type, and that its
left residual l is an operation of implication type if we reverse the order of the 
input coordinates.
(c) 
Show that if P = P1 = P2 and h is commutative, then the right and left 
residuals are equal, up to switching the order of the input coordinates. That 
is, for p e P and q e Q we have r(p, q) = l(q, p).
(d) 
Show that if B is a Boolean algebra, then the binary meet operation A is 
residuated, and its residual is the logical implication operation ^, defined, 
for a, b e B, by a ^ b := - a V b.
Exercise 4.5.2 Let L 1, L2, and L be lattices and h: L 1 x L2 ^ L a residuated 
binary function. Show that for each a e L, the pair of functions r (-, a): L 1 ^ L2 
and l (a, -): L2 ^ L 1 form a Galois connection.
Exercise 4.5.3 Let L 1, L2, and L be complete lattices and h: L 1 x L2 ^ L an 
order-preserving function. We say that h is a complete operator of diamond type 
provided that it preserves all joins in each coordinate, that is, for any U c L 1, 
b e L2, V c L2, a e L 1 we have
f (V U, b) = 
f (u, b) 
and f (a, 
V) = 
f (a, v) .
(a) 
Show that h is a complete operator of diamond type if, and only if, h is 
residuated.
(b) 
Show that h is residuated if, and only if, h has a right residual that is a complete
operator of implication type.
Exercise 4.5.4 This exercise shows the difference, for a function h: D x E ^ F, 
between “operator of implication-type” and “finite-meet-preserving as a function 
from the product lattice Dop x E to F .” We consider the lattice 2 with the usual 
order 0 < 1, and 2op denotes its opposite.
(a) 
Give an example of a function h: 2 x 2 ^ 2 which is an operator of implication
type, but does not preserve finite meets as a map from the product lattice 
2op x 2 to 2. Hint. Boolean implication is an operator of implication type.
(b) 
Give an example of a function h: 2 x 2 ^ 2 that preserves finite meets as a 
map from 2op x 2 to 2, but which is not an operator of implication type. Hint. 
The only equations that can fail are the ones concerning T and ± in Definition 
4.58.

138 
4 Duality Methods
(c) 
Suppose that h: D X E ^ F is finite-meet-preserving as a function from 
Dop X E to F. Prove that h is an operator of implication type if, and only if, 
h (±, e) = T and h (d, T) = T for all d e D, e e E.
Exercise 4.5.5 Verify that the operations defined in Examples 4.61 and 4.62 are 
indeed operators of implication type.
Exercise 4.5.6 This exercise generalizes Example 4.62, which showed how to use 
a binary operation to obtain an implication-type operator. Here we show how to 
obtain an implication-type operator obtained from any ternary relation. Let X be 
a set and R c X3 be a ternary relation on X. We use R to define three binary 
operations •, /, \ : P(X)2 ^ P(X), as follows:
u • t := {z e X | 3x e u, y e t such that R(x, y, z)};
u\v := {y e X | Vx e u, z e X, if R(x, y, z), then z e v}; and
v/1 := {x e X | Vy e t, z e X, if R(x, y, z), then z e v}.
Note that, when R is the graph of a function •: X2 ^ X, the definitions of \ and 
/ are the same as in Example 4.62. Show that these operations form a residuated 
family, that is, for all s, t, u e P(X) we have
u • t c V ^^ t c u\v ^^ u c v/1.
Exercise 4.5.7 This exercise leads to the verification of Lemma 4.64 and explains 
the origin of the first two conditions of the definition of compatible relation of 
implication type. In particular, it gives a generalization of the discrete duality 
between posets and down-set lattices described in Exercise 1.3.10. For the definition 
of complete operator of diamond type, see Exercise 4.5.3.
(a) Let X , Y ,andZ be posets. Show that under the discrete duality between posets 
and down-set lattices, complete operators of diamond type
f: D (X) XD (Y) ^ D (Z)
correspond to ternary relations R c X X Y X Z satisfying for any x, x' e 
X, y, y' e Y, and z, z' e Z
if x < xy < yz' < z, and R(x, y, z), then R (xyz').
(b) 
Show that for R c X X Y X Z, U e P(X), and W e P(Z), we have
U ^r W = Y - R[U, _, Z - W]

4.6 Heyting Algebras and Esakia Duality
139
and this operation is the right residual of the complete operator of diamond 
type defined by
(U, V) ^ R[U, V, _] for U e P(X) and V e P(Y) .
(c) 
Show that the operation ^R restricts correctly to the down-set lattices when 
R satisfies the property in (a).
(d) 
Verify the details of the proof of Lemma 4.64.
4.6 Heyting Algebras and Esakia Duality
In this section, we introduce the class of Heyting algebras. Using the fact that 
Heyting algebras are a subclass of distributive lattices, equipped with a very special 
operator of implication type, we will derive a duality for them, using Priestley 
duality and the general results of the previous section.
Definition 4.67 Let L be a distributive lattice and let a e L . If the set 
{c e L | a A c = ±} has a maximum in L, we denote it by a *, and we call a * the 
pseudocomplement of a. More generally, if, for a, b e L, the set {c e L | a A c < b} 
has a maximum in L, we denote it by a ^ b, and we call a ^ b the relative 
pseudocomplement of a with respect to b.
A Heyting algebra H is a distributive lattice such that the relative pseudocom­
plement a ^ b exists for any a, b e H.
Let H and K be Heyting algebras. A Heyting homomorphism is a lattice homo­
morphism h: H ^ K which moreover preserves relative pseudocomplements, that 
is, h(a ^ b) = h(a) ^ h(b) for all a, b e H.
Remark 4.68 Pseudocomplement is a weakening of the notion of complement in 
a Boolean algebra. Being a Heyting algebra is a notion of “hereditary” pseudocom- 
plementedness, in the sense that a distributive lattice L is a Heyting algebra if, and 
only if, for each b e L, the lattice Tb, which is an unbounded sublattice of L, but 
is a bounded lattice in its own right, is pseudocomplemented. Also, any Boolean 
algebra is a Heyting algebra in which a ^ b is given by - a V b; see Exercise 4.6.1. 
Finally, there is an order-dual notion to Heyting algebra, that we call co-Heyting 
algebra, in which the set {c e L: b < a V c} has a minimum for every a, b e A; see 
Exercise 4.6.7.
Note that a distributive lattice H is a Heyting algebra if, and only if, for any 
a e H, the function a A (-): H ^ H has an upper adjoint. Indeed, a relative 
pseudocomplement of a with respect to b is an element a ^ b of H such that, for 
any c e H ,
a A c < b ^^ c < a ^ b. 
(4.24)

140
4 Duality Methods
Interestingly, Heyting algebras may also be characterized as those distributive lat­
tices for which the embedding map into their Boolean envelope has an upper adjoint 
(see Exercise 4.6.11).
There is an interesting, and at first potentially confusing, tension in the definition 
of Heyting algebras. While we chose to define a Heyting algebra as a distributive 
lattice with an additional property, we often view it in practice as a distributive 
lattice that comes equipped with the additional structure of a Heyting implica­
tion. It is possible to give an alternative, equivalent definition of Heyting algebras 
that is purely equational, see, for example, Burris and Sankappanavar (2000, II.1, 
Example 11). It is important to remember here that any given distributive lattice 
admits at most one Heyting implication. This situation is analogous to the more 
familiar case of Boolean algebras: A distributive lattice admits at most one Boolean 
negation, which we then often regard as additional structure. However, a difference 
between the two situations is that, while a distributive lattice homomorphism be­
tween Boolean algebras always preserves Boolean negation (see Exercise 1.2.11), 
not every distributive lattice homomorphism between Heyting algebras preserves 
the Heyting implication (see Exercise 4.6.5).
Example 4.69 Any Boolean algebra is a Heyting algebra, with the implication 
definable as a ^ b := - a V b; this example was already mentioned in Example 4.60 
in Section 4.5 (also see Exercise 4.6.1). Any frame (see p. 12) is a Heyting algebra, 
because the functions a A (-) in a frame preserve arbitrary joins, and therefore 
have an upper adjoint by the adjoint functor theorem for complete lattices (see 
Exercise 1.2.14). However, not every homomorphism between frames preserves the 
Heyting implication (see Exercise 4.6.5). The Heyting implication in a frame F can 
be computed explicitly, for any a, b e F, as
a ^ b = \/{c e F I a A c < b}.
In particular, the following are examples of Heyting algebras:
(a) 
Any finite distributive lattice is a Heyting algebra.
(b) 
The open set lattice of any topological space is a Heyting algebra, in which 
a ^ b is naturally interpreted using the interior operator (see Exercise 4.6.2).
(c) 
Let (P, <) be a preorder. The lattice of down-sets D (P) is a complete Heyting 
algebra, as follows from the preceding example, since this is the open set lattice 
of the dual Alexandrov topology on P. Given two down-sets U, V e D(P), 
the relative pseudocomplement of U with respect to V may be calculated as 
follows (see Exercise 4.6.3):
U ^ V = {p e P | Vq e Jp, if q e U, then q e V}. 
(4.25)
Note that equation (4.25) can also be written as U ^ V = P -1(U - V).

4.6 Heyting Algebras and Esakia Duality 
141
Let H be a Heyting algebra. For any a, b e H and S, T c H such that y S and 
A T exist, we have
a A ( y S) = y (a A s), 
(4.26)
b ^ (A T) = /\ (b ^ t), and 
(4.27)
(y T) ^ b = /\ (t ^ b). 
(4.28)
The first two equations follow from equation 
(4.24), because lower adjoints pre­
serve existing suprema, and upper adjoints preserve existing infima (see Exercise 
1.1.8). For a proof of the third equation, see Exercise 4.6.6. Thus, the opera­
tion ^ on any Heyting algebra is an operator of implication type in the sense of 
Section 4.5.
We remark that (4.26) shows that any complete Heyting algebra is a frame. 
Thus, in light of Example 4.69, a lattice is a frame if, and only if, it is a complete 
Heyting algebra. However, we emphasize that the notion of morphism depends 
on whether we view such a lattice as a frame or as a complete Heyting algebra: 
Frame homomorphisms are required to preserve finite meets and arbitrary joins, 
whereas Heyting algebra homomorphisms are required to preserve finite meets, 
finite joins, and the relative pseudocomplement. Exercise 4.6.5 guides you toward 
specific examples showing the difference.
Esakia Spaces
We now derive from the duality for implication-type operators developed in Sec­
tion 4.5 a duality for Heyting algebras. This duality is originally due to Esakia 
(1974) and is known as Esakia duality in the literature. An English transla­
tion of Esakia’s 1985 monograph on the topic has since been published (Esakia, 
2019).
From the perspective of Section 4.5, if a distributive lattice Lis a Heyting algebra, 
then the implication-type operator ^ has a dual ternary relation R^, as defined in 
Definition 4.65. Since ^ is definable from the distributive lattice structure of L, 
the relation R^ ought to also be definable directly from the dual space of L. As a 
first step toward deducing Esakia duality from Priestley’s, we now show that this is 
indeed the case.
Lemma 4.70 Let L be a Heyting algebra and let X be the dual Priestley space of 
L. Then, the ternary relation R^ dual to the Heyting implication ^ is given by
R^ = |( x, y, z) e X3 | z < x and z < y|.

142
4 Duality Methods
Proof Recall that the definition of R^ (Definition 4.65) says: R^ (x, y, z) provided, 
for any a, b e L, if a e Fx and a ^ b e Fy, then b e Fz. We show that this is 
equivalent to the condition that Fx c Fz and Fy c Fz.
First, suppose that R^ (x, y, z). Let a e Fx. Note that T < a ^ a because 
TA a < a. Thus, a ^ a e Fy. Hence, a e Fz. Now let c e Fy. Note that c < T ^ c 
because c at < c. Thus, T ^ c e Fy and also T e Fx. Hence, c e Fz. Conversely, 
suppose that Fx c Fz and Fy c Fz. Let a e Fx and b e L be such that a ^ b e Fy. 
Then, a e Fz and a ^ b e Fz, so a A (a ^ b) e Fz. Now note that a A (a ^ b) < b, 
since a ^ b < a ^ b. Thus, b e Fz. 
□
For the remainder of this section, if X is a Priestley space, we write E for the 
ternary relation defined by
E := { (x, y, z) e X3 | z < x and z < y}.
Lemma 4.70 says that, if X is dual to a Heyting algebra, then E = R^. In this 
case, E is a compatible relation in the sense of Definition 4.63. We now reverse 
the question and ask, when is the relation E , which can be defined on any Priestley 
space, a compatible relation? We note immediately that E satisfies the first, order- 
theoretic, condition in Definition 4.63. Also, for any y e Y, we have
E[_, y, _] = (>x) n (X X iy),
which is always a closed subset of X X X, since in any compact ordered space, the 
(reverse) order is closed, and the downward closure of a point is closed (Proposition 
2.14). Thus, the relation E is compatible if, and only if, it satisfies the second 
condition in Definition 4.63: For any clopen down-set U ofX and any clopen up-set 
V of X, the set E[U, _, V] must be clopen. From the definition of E, we note that 
E[U, _, V] = T(JV n V) = T(U n V) when U is a down-set. With these preliminary 
considerations, we are now ready to characterize the Priestley spaces that are dual 
to Heyting algebras.
Proposition 4.71 Let L be a distributive lattice with dual Priestley space X .The 
following are equivalent:
(i) L is a Heyting algebra;
(ii) for any clopen subset K of X, the generated up-set TK is clopen; and 
(iii) for any open subset U of X, the generated up-set TU is open.
Proof We show that (i) and (ii) are equivalent; the equivalence of (ii) and (iii) is 
left as Exercise 4.6.8. First, if L is a Heyting algebra, then the relation R^ = E is 
compatible. By the remarks preceding the proposition, this means that T(U n V) is 
clopen for any clopen up-set U and clopen down-set V. Now, recall from Lemma 
3.33 that any clopen set of X is a finite union of sets of the form U n V, with U 
a clopen up-set and V a clopen-down-set. Thus, it follows that TK is clopen for 

4.6 Heyting Algebras and Esakia Duality
143
any clopen set K . For the converse, suppose that (ii) holds. By the above remarks, 
the relation E is in particular compatible, and therefore by Lemma 4.64 defines an 
implication-type operator ^E on ClpD(X). Unraveling the definition of ^E in this 
case, we see that, for any down-sets U and V of X ,
U ^E V = {y e X | Vx e U, z e X, if z < x and z < y, then z e V}
= {y e X | Vz e X, if z < y and z e U, then z e V}.
As remarked in Example 4.69(c), this is the Heyting implication on the (com­
plete) Heyting algebra D (X). Since ^E is well defined on the bounded sublattice 
ClpD(X) of D(X), it now follows from Exercise 4.6.9 that ClpD (X) is a Heyting 
algebra. By Priestley duality, L is isomorphic to ClpD(X), and is therefore also a 
Heyting algebra. 
□
A Priestley space X that satisfies the equivalent conditions in Proposition 4.71 is 
called an Esakia space. Note that the proof of Proposition 4.71 in particular implies 
that, if L is a Heyting algebra with dual Esakia space X , then for any a, b e L,
a -^ b = a ^ b;
that is, the function a ^ a is a Heyting homomorphism from L to D(X).
Proposition 4.72 Let L and M be Heyting algebras with Priestley dual spaces X 
and Y, respectively. Let h: M ^ L be a lattice homomorphism with dual Priestley 
morphism f: X ^ Y; that is, for all a e M ,we have h( a) = f-1 (a). The following 
are equivalent:
(i) 
for all y e Y, f-1 (?y) cf f-1 (y);
(ii) 
the homomorphism f-1: D (Y) ^ D (X) is a Heyting homomorphism; and
(iii) 
the homomorphism h is a Heyting homomorphism; that is, preserves ^.
Proof (i) ^ (ii). Since f is order preserving, f-1 sends down-sets to down-sets, 
and thus it is a (complete) lattice homomorphism from D(Y) to D(X). We just need 
to show that f-1 preserves the relative pseudocomplement. Let U, V e D(Y). By 
adjunction, we have U n (U ^ V) c V and thus f-1 (U) n f-1 (U ^ V) c f-1 (V). 
Again by adjunction we obtain f-1 (U ^ V) c f-1 (U) ^ f-1 (V).
For the reverse inclusion, we use the definition of the Heyting implication on 
D(X), see (4.25). Let x e f-1 (U) ^ f-1 (V). We need to show that f (x) e U ^ 
V. To this end, let y < f (x) and y e U .By (i), we then have x e f f-1 (y), so 
pick x' < x such that f (x') = y. Since y e U, we have x' e f-1 (U). Thus, since 
x e f-1 (U) ^ f-1 (V) by assumption, we get x' e f-1 (V). Hence, y = f (x') e V, 
as required.
(ii) ^ (iii). Since (-) is a Heyting homomorphism and f-1 is a Heyting homo­
morphism, their composition is a Heyting homomorphism. By Priestley duality, this

144
4 Duality Methods
composition sends a to h{a). It follows that h itself is a Heyting homomorphism, 
since (-) is a lattice isomorphism between L and the clopen down-sets of X.
(iii) ^ (i). Suppose y < f (x). By the definition of the Priestley topology on Y 
and the fact that it is T0, it follows that
{y}= 0 {bn (c)c । ye b and y •
Therefore,
f—1 (y) = n {f—1 (b) n [f—1 (?)]c I b, c e M, y e b, and y £ c } •
Also,
jx = 
{a I a e L, x e a},
so jx n f—1 (y) is equal to
| a n f -1 (b) n [f -1 (c)]c | a e L, b, c e M, x e a, y e b, and y £ 
.
Note that the family of sets we take the intersection of is down directed. Now, 
showing that x e T f -1 (y) is equivalent to showing that jx n f -1 (y) is non-empty, 
which, by compactness, is equivalent to showing that each set in the family of sets 
we take the intersection of is non-empty.
To this end, let a e L with x e a and b, c e M with y e b and y £ c. Now, 
y < f (x), y e b and y £ 'c implies, by (4.25), that f (x) £ b ^ 'c. That is, by (iii),
x £ f -1 (b ^ c) = h(b ^ c) = h(b) -^ h(c)) = f -1 (b) ^ f -1 (c)•
It follows that a f -1 (b) ^ f -1 (c). By adjunction we obtain a n f -1 (b) f -1 (c) 
or, equivalently, a n f -1 (b) n [f -1 (c)]c + 0 as required. 
□
Order preserving functions satisfying condition (i) in Proposition 4.72 are called 
p-morphisms or bounded morphisms in the literature. Note that the definition is a 
special case of the definition for Kripke frames given in Definition 4.54. This is 
because being a Heyting algebra homomorphism for the lattices of clopen up-sets is 
the same as being a □ homomorphism of the Boolean envelopes of these lattices for 
the modal operation given by < viewed as a Kripke relation (see Exercise 4.6.11).
Definition 4.73 An order-preserving function f: X ^ Y between posets is called 
a p-morphism or bounded morphism if, for any x e X and y e Y,ify < f (x), then 
there exists x' < x such that f (x') = y.
We denote by Esakia the category of Esakia spaces with continuous p-morphisms.
Observe that a function f: X ^ Y between posets satisfies the reverse inclusion 
of (i) in Proposition 4.72, that is, f -1 (Ty) 2 Tf -1 (y) for all y e Y if, and only 

4.6 Heyting Algebras and Esakia Duality
145
if, it is order preserving. Therefore, an equivalent definition of p-morphism is: a 
continuous function f: X ^ Y such that f -1 (Ty) = T f -1 (y) for all y e Y.
The following duality theorem for Heyting algebras is now an immediate conse­
quence of Priestley duality in Chapter 3, Proposition 4.71, and Proposition 4.72.
Theorem 4.74 The category HA of Heyting algebras with Heyting homomor­
phisms is dually equivalent to the category Esakia of Esakia spaces with continuous 
p-morphisms.
Just as duality for modal algebras yields a semantics for modal logic (see Section 
4.4), a similar Kripke-style semantics for intuitionistic propositional logic can be 
obtained from this duality between Heyting algebras and Esakia spaces.
An intuitionistic formula is a term in the signature of Heyting algebras, that is, 
built from propositional variables, using the operations ±, T, ^, V, and A. If <p 
is an intuitionistic formula with variables in a set V, we define |= ^ to mean: For 
every function v: V ^ L, where L is a Heyting algebra, we have v (^) = t. Here, 
v (^) is the unique interpretation of a formula ^ extending the given interpretation 
v of variables.
If (X, <) is a partially ordered set, then an admissible valuation is a function 
v: V ^ D(X), assigning to every variable a down-set of X. We say that an 
intuitionistic formula ^ with variables in V holds at a point x e X if x e v (^). A 
tuple (X, <, v) where (X, <) is a poset and v is an admissible valuation is known 
in the literature as an intuitionistic Kripke model. An intuitionistic formula ^ is 
satisfiable if there exists an intuitionistic Kripke model such that v (^) is non­
empty, and consistent if there exists an interpretation to a Heyting algebra such that 
v(<f>) + ±.
Theorem 4.75 Every consistent intuitionistic formula is satisfiable.
Proof Let ^ be a consistent intuitionistic formula and let v: V ^ H be a valuation 
of the variables occurring in ^ such that v (^) ± ±. Let X be the Esakia space dual 
to H. We define the admissible valuation v': V ^ D (X) by v' (p) := v(p) for every 
p e V. Since (-) is a homomorphism of Heyting algebras, we have v'(<p) = v(^), 
and since (-) is injective, we get v'(<p) 0, as required. 
□
We show now that, with only a little extra work, we may use the above proof 
technique to show that every consistent intuitionistic formula is satisfiable in a 
finite intuitionistic Kripke model. This argument proves the so-called finite model 
property of intuitionistic propositional logic and is due to McKinsey and Tarski 
(1948).
Proposition 4.76 If an intuitionistic formula y is consistent, then there exists a 
valuation v from the variables of y into a finite Heyting algebra such that v (<p) ±.

146
4 Duality Methods
Proof Denote by V the set of propositional variables occurring in ^. Let v0: V ^ 
H be a valuation to a Heyting algebra such that Vo (^) ± ±. Let F be the bounded 
sublattice of H generated by the set of elements Vo(0), where 0 ranges over the 
subformulas of ^, that is, the formulas that occur in the construction tree of ^. Note 
that F is finite since it is a distributive lattice generated by a finite set; thus, F is 
a Heyting algebra. Let v: V ^ F be the co-restriction of v0 to F. We may now 
show by induction that for any subformula 0 of ^, V (0) = Vo (0). The only non­
trivial case is when 0 = 01 ^ 02 for some formulas 01 and 02. By the induction 
hypothesis, V(0i) = Vo(0i) for i = 1,2, and by definition, V(0) = V(01) ^F V(02) 
and Vo(0) = Vo(01) ^H Vo(02). The equality V(0) = Vo(0) now follows from the 
general fact that if a, b e F are such that a ^H b e F, then a ^F b = a ^H b 
(see Exercise 4.6.1Q). In particular, V(<p) = Vo(^) ±, as required. 
□
Corollary 4.77 Every consistent intuitionistic formula is satisfiable in a finite 
model.
Proof In the proof of Theorem 4.75, we may take the Heyting algebra H to be 
finite, by Proposition 4.76. The poset dual to the finite Heyting algebra, equipped 
with the admissible valuation given in Theorem 4.75, gives a finite model in which 
the formula is satisfiable. 
□
Esakia duality may be used to deduce many more results on Heyting algebras 
and Kripke semantics. We refer the interested reader to Gehrke (2o14) for more 
information, as well as more historical information on Esakia duality.
Exercises for Section 4.6
Exercise 4.6.1 (a) Show that in any Boolean algebra, ­  is a pseudocomplement. 
(b) Show that any Heyting algebra is pseudocomplemented with a * defined by 
a ^ ±.
(c) 
Let L be a distributive lattice and b e L .LetLb be the distributive lattice 
whose underlying set is Tb in L with the induced order from L. Show that Lb 
has the same T as L, that A and V are the restrictions of the operations on L, 
but ±Lb = b.
(d) 
Show that if L is a Heyting algebra, then, for each b e L, the distributive lattice
Lb is pseudocomplemented with the pseudocomplement given by a ^ b for 
a e Lb.
(e) 
Conversely, let L be a distributive lattice for which Lb is pseudocomplemented 
for each b e L. Show that L is a Heyting algebra in which a ^ b is given by 
the pseudocomplement in Lb of a V b.

4.6 Heyting Algebras and Esakia Duality
147
(f) 
Show that if L is a Heyting algebra, then (a ^ ±) V b is always an operation 
of implication type.
(g) 
Show that any Boolean algebra is in particular a Heyting algebra, in which 
a ^ b is given by - a V b.
(h) 
Give an example of a Heyting algebra in which the operation (a ^ ±) V b is 
not the relative pseudocomplement.
Exercise 4.6.2 Let X be a topological space and Q(X) its lattice of open sets. 
Prove that, for any open sets U, V c X, the relative pseudocomplement, U ^ V, of 
U with respect to V is the interior of the set (X - U) U V.
Exercise 4.6.3 The aim of this exercise is to prove equation (4.25). Let (P, <) 
be a preorder and let t be the dual Alexandrov topology for < on P (i.e., t is the 
topology of down-sets of <).
(a) 
Prove that, for any S c P, a point p e P lies in the interior of S in the topology 
t if, and only if, jp c S.
(b) 
From item (a) and Exercise 4.6.2, deduce (4.25).
Exercise 4.6.4 Show that a complete distributive lattice may fail to be a Heyting 
algebra. Hint. Explain why this is essentially the same question as Exercise 1.2.6(b).
Exercise 4.6.5 Give examples of the following.
(a) 
A frame (or even complete lattice) homomorphism between complete Heyting 
algebras which is not a Heyting homomorphism. Hint. It suffices to find a 
homomorphism between finite distributive lattices which does not preserve 
^. You may use finite duality to construct such an example.
(b) 
A Heyting homomorphism between frames which is not a frame homomor­
phism. Hint. Consider Nto, the chain of natural numbers with a top added, 
and the map to 2 which sends all natural numbers to 0 and to to 1.
Exercise 4.6.6 The aim of this exercise is to prove the third algebraic property of 
Heyting algebras, namely, that ^ reverses arbitrary joins in the first coordinate into 
arbitrary meets. Let H be a Heyting algebra.
(a) 
Prove that, for any a, b, c e H, c < a ^ b ^^ a < c ^ b.
(b) 
Use the previous item to show that, for any b e H, the function f b : H ^ Hop, 
defined by f b (a) := a ^ b for every a e H, has an upper adjoint.
(c) 
Deduce that, for any b e H and T c H such that V T exists, we have 
(V T) ^ b = AteT(t ^ b).
Exercise 4.6.7 A lattice L is a co-Heyting algebra if, for every a e L the function 
a V (-) has a lower adjoint. We will denote the value of this lower adjoint at b e L 
by a b here.

148
4 Duality Methods
(a) 
Prove that, for any topological space X , the closed set lattice is a co-Heyting 
algebra, with C D = C - D for any closed sets C, D c X.
(b) 
Prove that, for any preorder (P, <), the down-set lattice D(P) is a co-Heyting 
algebra.
Exercise 4.6.8 Show the equivalence of (ii) and (iii) in Proposition 4.71. Hint. 
For (iii) ^ (ii), recall Proposition 2.14. For (ii) ^ (iii), use the fact that T preserves 
arbitrary unions.
Exercise 4.6.9 Let H be a Heyting algebra and let L be a bounded sublattice of 
H with the property that, for any a, b e L, the implication a ^H b is in L. Prove 
that L is a Heyting algebra, with implication given by the restriction of ^H to L.
Exercise 4.6.10 Let L be a bounded sublattice of a Heyting algebra H. Suppose 
that a, b e L and that a ^H b is also in L. Show that a ^H b is a relative 
pseudocomplement of a with respect to b in L. Conclude in particular that, if L is 
finite, and a, b e L are such that a ^H b is in L, then a ^L b = a ^H b.
Exercise 4.6.11 This exercise outlines the algebraic content of the so-called Godel 
translation of intuitionistic logic into the modal logic known as S4, and outlines 
why the bounded morphisms of this section are a special case of those between 
Kripke frames, in Section 4.4. This exercise is based on the results in Gehrke (2014, 
Section 4), and solutions and further references may be found there.
Let L be a distributive lattice and let e: L ^ B be the Boolean envelope of L, as 
defined in Definition 1.19.
(a) 
Prove that L is a Heyting algebra if, and only if, the map e has an upper 
adjoint g.
(b) 
Suppose that L is a Heyting algebra. Prove that the composite function □ := 
e ◦ g: B ^ B preserves finite meets, and satisfies the S4 axioms □ a < □□ a 
and □ a < a for every a e B.
(c) 
Conversely, if □ is a finite-meet-preserving function on a Boolean algebra A 
satisfying the S4 axioms, prove that the image of □ is a (bounded) sublattice 
L of A, which admits a relative pseudocomplement given, for a, b e L ,by 
a ^ b = □(-a V b), where the operations on the right-hand side are those of 
A. Further, show that the inclusion L ^ A has an upper adjoint.
(d) 
Extend the object correspondence to a categorical equivalence: The category 
of Heyting algebras is equivalent to the subcategory of modal algebras con­
sisting of those algebras (A, □) that satisfy the S4 axioms and such that the 
image of □ generates A.
(e) 
Use this result to explain why bounded morphisms as defined in this section 
are a special case of the bounded morphisms of Section 4.4.

4.7 Boolean Closure and Alternating Chains
4.7 Boolean Closure and Alternating Chains
149
In this section, we give an application of discrete duality that we will use in Chapter 
8. The result we present here has a combinatorial flavor, although it also forms the 
kernel of a more general topological principle, explored in much more detail in 
Borlido et al. (2020). In the exercises of this section, we ask the reader to work out 
a few elements of this more general theory.
Let L be a sublattice of a Boolean algebra B. In accordance with Corollary 3.35, 
we denote by L- the Boolean subalgebra of B generated by L. As a Boolean algebra, 
L- is the Boolean envelope of L, and we have an inclusion L- ^ B of Boolean 
algebras. The general aim of the work that we do a piece of here is to give a concrete 
dual characterization of the elements a e B that belong to L-.
A basic idea, going back to Hausdorff (1914), is that L- admits a stratification, 
according to the complexity of describing an element of L- in terms of elements of 
L. More concretely, if a e L-, then a can be written as a = a 1 - (a2 - (• • • (an-1 - 
an) • • •)) for some elements an < an-1 < • • • < a 1 of L; such a sequence is called 
a difference chain for a. This leads to a well-defined notion of degree of a over L 
as the minimum length of such chains. However, in general, there may not always 
be a least difference chain for a e L- , where we compare difference chains for 
a by saying that one difference chain an < an-1 < ••• < a1 is less than another 
difference chain b m < b m-1 < • • • < b 1 if n < m and a i < b i for i < n .In this 
section, we concentrate on a simple situation where there always is a least difference 
chain for elements of L- over L .
In what follows, let (X, <) be a poset and write B = P(X) and L = U(X) for the 
power set Boolean algebra and the sublattice of up-sets of X , respectively. Our aim 
is to describe L- , the collection of subsets of X that can be written as a Boolean 
combination of up-sets of X . The crucial notion that will allow us to do so is the 
following.
Definition 4.78 Let (X, <) be a poset and let a e P(X). An alternating chain for 
a is a chain x 1 < y1 < x2 < y2 ••• < x n < yn of elements of X such that, for every 
1 < i < n, xi e a and yi £ a. We call the number n the height of the chain; an 
alternating chain of height n thus contains 2n elements. The alternation height of 
a, h(a) e N u {™}, is defined as
h(a) := sup{n e N | there exists an alternating chain of height n for a}.
We say an element a e P (X) has bounded alternation height if h (a) < ™.
In particular, the alternation height of a set a e P(X) is by definition 0 when no 
alternating chains exist for it; note that this happens if, and only if, a is an up-set.
The aim of this section is to prove the following theorem.

150
4 Duality Methods
Theorem 4.79 Let (X, <) be aposet. The Boolean subalgebra of P(X) generated 
by U(X) consists of the elements of bounded alternation height.
Denote by A the set of elements of P(X) of bounded alternation height, and 
L = U(X); our aim is to prove that L- = A. The left-to-right inclusion is relatively 
straightforward, as we show in the following proposition.
Proposition 4.80 Let (X, <) be a poset. The set A of elements of P(X) that have 
bounded alternation height is a Boolean subalgebra of P(X) that contains all 
up-sets of (X, <). In particular, U(X)- c A.
Proof As noted above, any up-set has alternation height 0. Now suppose that 
a e A has alternation height h < ™. Note that, if w is an alternating chain for the 
complement ac of a of length n + 1, then removing its first and last element gives 
an alternating chain for a of length n. Thus, the alternation height of ac is at most 
h+ 1.
Let a 1, a2 e A. We claim that the alternation height of a 1 U a2 is less than 
h := 2 max(h(a1), h(a2)) + 1. Indeed, suppose toward a contradiction that x1 < 
y1 < • • • < xh < yh is an alternating chain for a 1 U a2 of height h. Then, we 
have xn e a1 U a2 for every 1 < n < h, so by the pigeon-hole principle, there is 
i e {1,2} such that for k > | indices, we have xn e ai. Consider the subchain 
xn1 < yn11 < • • • < xnk < ynk , where n1 < ••• < nk are the indices such that 
xn e ai . This is clearly an alternating chain for ai , because, for any 1 < n < h,we 
have yn £ a 1 U a2, so in particular yn £ ai. However, the height of this alternating 
chain is k > | > h (ai), contradicting the definition of h (ai).
The “in particular” statement now follows immediately from the fact that U(X)- 
is the Boolean subalgebra of P(X) generated by U(X) (Corollary 3.35). 
□
We now show a somewhat more technically involved lemma, which in particular 
establishes the inclusion A c L-, and thus the equality of Boolean algebras L- = A 
claimed in Theorem 4.79.
Lemma 4.81 Suppose that a e P(X) has alternation height h e N. Then, there 
exist a0,...,ah and b0,...,bh in U(X) such that
,h, 
a = 
(a n — b n).
Proof Throughout this proof, we slightly extend the definition of alternating chain, 
and we will call a sequence x 1 < y1 < • • • < xn < yn < xn+1 of elements of X 
with xi e a for 1 < i < n + 1 and yi £ a for 1 < i < n an alternating chain for a of 
height n + |.

4.7 Boolean Closure and Alternating Chains 
151
We inductively define the following sequence of elements of U (X) :
a0 := ?a; 
b0 := f(a0 n ac);
an+1 := T(bn n a); and bn+1 := ?(an+1 n ac) for 0 < n < h.
We now first show by induction on n that, for any n > 0 and any x e X,
• x e an if, and only if, there exists an alternating chain for a of height n + 2 whose 
last point is < x ,and
• x e bn if, and only if, there exists an alternating chain for a of height n + 1 whose 
last point is < x .
For n = 0, note that an alternating chain of height 2 is just a single element of a, 
which gives the first item. For the second item, unraveling the definition of b0, we 
see that x e b0 if, and only if, there exist y0 £ a and x0 e a with x0 < y0 < x, 
as required. Now, let n > 1 be arbitrary. For any x e X , by definition we have 
x e an if, and only if, there exists x' e bn-1 n a with x' < x. Suppose that x e an. 
By induction, since x' e bn-1, there is then an alternating chain for a of height n 
whose last point is < x'. Since x' e a, extending this sequence by adding x' to 
the end gives an alternating chain for a of height n + 1 and x' < x. Conversely, 
if x 1 < y1 < • • • < xn < yn < xn+1 is an alternating chain for a of height n + 1 
with xn+1 < x, then xn+1 e a, and the alternating chain x 1 < y1 < • • • < xn < yn 
shows, by induction, that xn+1 e bn-1, so that x e f(bn-1 n a) = an, as required. 
The proof of the second item is very similar.
Let us now write c0 := 0 and, for each 1 < n < h + 1,
n-1
C n := L_J ( a i — b i ) . 
i=0
The statement of the lemma is that a = ch+1. Toward proving this, we will show 
that, for each 0 < n < h + 1,
cn C a c cn u an. 
(4.29)
Note that the fact that the alternation height of a is h implies, using the characteri­
zation above, that bh = ah+1 = 0. Thus, (4.29) for k = h + 1 will give the desired 
equality a = ch+1.
For the first inclusion of (4.29), it suffices to show that an - bn C a for every 
0 < n < h. Indeed, if x e an - bn, pick an alternating chain of height n + 2 for a 
whose last point is < x. Since x bn, adding x to the end of this alternating chain 
does not give an alternating chain of height n + 1, so we must have x e a.
For the second inclusion of (4.29), we proceed by induction on n. When n = 0, 
simply note that indeed a C a0. For the inductive step, suppose that x e a.We 
distinguish two cases, according to whether or not x e bn-1.

152 
4 Duality Methods
Case 1: x e bn-1. Then, there exists an alternating chain for a of height n whose 
last point is < x. Since x e a, we can extend this sequence to an alternating chain 
of height n + 2 whose last point is x, so x e an.
Case 2: x £ bn-1. Then, if x e an-1, we are done because an-1 - bn-1 c cn by 
definition. Assume x £ an-1. By the inductive hypothesis, we have a c cn-1 u an-1, 
so x e cn-1. Clearly, cn-1 c cn, so we conclude x e cn. 
□
Exercises for Section 4.7
Exercise 4.7.1 This exercise is about the collection of elements {ai, bi}ieN that 
we construct for an element a e P(X) in the proof of Lemma 4.81.
(a) 
Show that a0 2 b0 2 a 1 2 • • • 2 bn for all n e N.
(b) 
Show that
.n.
(ai -bi) = a0- (b0- (a1 - •••(an -bn) ...)).
i=0
(c) 
For an element a e P(X), we call a0 2 b0 2 a1 2 ••• 2 bn such that 
ai, bi e U(X) and
A 
a = 
(an -bn)
a difference chain for a and we order difference chains for a by coordinate­
wise inclusion (if one is shorter than the other, then we consider it extended 
with empty sets). Show that if a has a difference chain then it has a least such 
and it is the one we define in the proof of Lemma 4.81.
Exercise 4.7.2 Suppose H is a co-Heyting algebra, and X its dual space. Consider 
X with the opposite of the Priestley order so that H is isomorphic to the lattice of 
clopen up-sets via a ^ a. Let V c X be a clopen in X. Show that the difference 
chain for V as defined in Exercise 4.7.1 consists entirely of clopen up-sets of X. 
Conclude that each element of H - has a least difference chain over H .
Exercise 4.7.3 Show that for an arbitrary bounded distributive lattice L, each 
element a e L- is given by a difference chain a0 > b0 > •••an > bn of elements 
of L such that
A
a = a0 - (b0 -(a1 - •••(an - bn) ...)) = 
(an - bn),
and that this gives rise to a well-defined notion of alternation height for elements 
a e L- over L. Hint. If a e L-, then a e F-, where F is some finite sublattice of 

4.7 Boolean Closure and Alternating Chains
153
L . The finite sublattice F is then in particular a co-Heyting algebra, and provides a 
least difference chain for a over F, which is also a difference chain for a over L .
Exercise 4.7.4 Give an example of a distributive lattice L, and an element a e L- 
to show that there is not a least difference chain for a in general.
Exercise 4.7.5 Show that the closed down-sets of the dual Priestley space of 
a distributive lattice L form a co-Heyting algebra H containing L, and that the 
alternation height a e L - is the same over either L or H .
Notes for Chapter 4
The theory of canonical extensions allows one to make more precise the idea, 
mentioned above Proposition 4.39, that the duality for operators treated in this 
chapter is an extension of the finite case; see also Exercise 4.3.1. In that theory, 
any distributive lattice L embeds into a “finite-like” lattice L5 and any finite-meet­
preserving function h: M ^ L is shown to lift to a completely meet preserving 
function h5 : M5 ^ L5, which then yields the dual relation R from the dual space 
of X to the dual space of Y, exactly by the ideas from the finite duality outlined in 
Section 4.3. This algebraic definition of the dual relation was at the core of the work 
in Jonsson and Tarski (1951, 1952) in the case of Boolean algebras. Gehrke and 
Jonsson (1994, 2004) generalize this theory from Boolean algebras to distributive 
lattices and in addition study generalizations of the theory to arbitrary operations 
that do not need to preserve joins or meets.
A property of a lattice of operators is called canonical if it is preserved under 
canonical extension. The study of canonicity and its connections to first order 
definability is a major research theme in modal logic, see, for example, Goldblatt 
et al. (2003) or Hodkinson and Venema (2005). The field of Sahlqvist theory 
provides syntactic conditions on properties of lattices with operators that guarantee 
canonicity, see, for example, Blackburn et al. (2001, Chapter 5), Gehrke et al. 
(2005), Conradie et al. (2014), and Conradie and Palmigiano (2020).
The structures that we call “Kripke Boolean spaces” in Section 4.4 are typically 
presented in the modal logic literature in the form of descriptive general frames, 
which give an isomorphic category. The latter however avoids having to speak 
explicitly about topology, see, for example, Blackburn et al. (2001, Chapter 5) or 
Chagrov and Zakharyaschev (1997, Chapter 8). We prefer to make the Boolean 
topology on general frames explicit, because we think it clarifies the mathematical 
content of the descriptive general frame semantics, and in particular the link with 
Stone duality.

5
Categorical Duality
In this chapter, we introduce notions from category theory and use them to rephrase 
the duality theorems that we have seen so far. For our purposes, category theory 
provides a general language that allows us to talk about duality from a higher 
level viewpoint. We limit ourselves to explaining only those notions from category 
theory that we need in this book; this is by no means a complete introduction to 
category theory. In particular, we do not go into deep connections between the 
topological duality theory developed in this book and the rich category theory of 
frames and toposes; for more on this, see, for example, Johnstone (1986), Makkai 
(1993), Mac Lane and Moerdijk (1992), Hofmann et al. (2014), and Caramello 
(2017). Since we want to keep category-theoretic preliminaries to a minimum, all 
the category theory treated in this chapter is entirely standard and well known, and 
can be found in a lot more detail in, for example, Mac Lane (1971), Awodey (2010), 
and Leinster (2014).
5.1 Definitions and Examples of Categories
A category formalizes a class of mathematical objects, the morphisms between 
them, and how the morphisms compose. For example, the class of sets and functions, 
with usual function composition, is a category, but so is the class of sets and binary 
relations, with relational composition.
A category is a two-sorted structure: it has an objects sort and a morphisms sort. 
Every morphism f in a category has an associated domain object, dom( f ), and 
codomain object, cod( f ). For every “composable” pair of morphisms ( f, g), that 
is, a pair such that dom(g) = cod( f ), there is a morphism, g ◦ f , the composition 
ofg after f, and this operation of composition is required to be associative. Finally, 
every object A in a category has an associated identity morphism 1 A, which acts as 
a neutral element for the composition. We now give the formal definition. Although 

5.1 Definitions and Examples of Categories
155
this definition may look lengthy and abstract at first, the conditions are natural and 
easily seen to be satisfied in the examples that follow.
Definition 5.1 A category C is a tuple (ob C, mor C, dom, cod, ◦, 1(-)), where 
ob C and mor C are classes of objects and morphisms, dom and cod are assignments 
frommorCtoob C, 1(-) is an assignment from ob C to mor C, and ◦ is an assignment 
from { (g, f ) | dom(g) = cod( f )} to mor C, with the following properties:
(a) 
For any f, g e mor C with dom(g) = cod( f),
dom(g ◦ f) = dom(f) and cod(g ◦ f ) = cod(g) .
(b) 
For any f, g, h e mor C, if dom(g) = cod(f) and dom(h) = cod(g), then
h ◦ (g ◦ f) = (h ◦ g) ◦ f.
(c) 
For any A e ob C,
dom(1 A) = A = cod(1 A) .
(d) 
For any f e morC with dom(f) = A and cod(f) = B,
f ◦ 1A = f and 1B ◦ f = f.
While Definition 5.1 gives the official definition of the structure usually called a 
category, alternative definitions are possible. In particular, the definition of category 
does not need to be two sorted, as the structure of a category is entirely determined 
by its class of morphisms: The objects can be encoded in the class of morphisms 
using the identity morphisms; see, for example, Mac Lane (1971, p. 9) or Adamek 
et al. (1990, Definition 3.53, p. 42).
The structure of categories is rich, due to many derived notions, which we begin 
to introduce now. Let C be a category. For any A, B e ob C, the Hom-class from 
A to B in C is the collection of morphisms f with dom(f) = A and cod(f) = B; 
this class is denoted by HomC ( A, B), or simply C(A, B). We also use the notation 
f: A ^ B to mean f e HomC (A, B) when the ambient category is clear. The 
notation ◦ and parentheses are often omitted: For example, we write h g f for the 
morphism h ◦ (g ◦ f) = (h ◦ g) ◦ f. We also sometimes denote the identity morphism 
on an object A by idA instead of 1A. Note that the components defining a category are 
not assumed to be sets. This level of generality is necessary, because, for example, 
the collection of all sets is not a set itself, and we want to be able to consider the 
category of sets. Unless explicitly mentioned otherwise, all the categories we work 
with in this book are locally small, which means that, for any fixed pair of objects 
A, B in the category, the Hom-class from A to B is a set. A category is called small 
if the class of morphisms (and, hence, also the class of objects) is a set, and large 
otherwise.

156
5 Categorical Duality
Example 5.2 The following are examples of categories that we have already seen. 
In each example, we only state what ob C and mor C are; composition and identity 
are what you expect.
(a) 
The category DL of distributive lattices and their homomorphisms.
(b) 
The category Top of topological spaces and continuous functions.
(c) 
The category Priestley of Priestley spaces and continuous order-preserving 
functions.
(d) 
The category BA of Boolean algebras and their homomorphisms.
(e) 
The category BoolSp of Boolean spaces and continuous functions between 
them.
(f) 
The category HA of Heyting algebras and their homomorphisms.
(g) 
The category Esakia of Esakia spaces and continuous p-morphisms.
(h) 
The categories DLf and BAf of finite distributive lattices and finite Boolean 
algebras, respectively, and homomorphisms between them.
(i) 
The category Set of sets and functions; the category Setf of finite sets and 
functions between them.
(j) 
The category Pos of posets and order-preserving functions; the category Posf 
of finite posets and order-preserving functions between them.
The categories described in the above example correspond to the way we moti­
vated categories above, as “mathematical universes.” In technical terms, these are 
large categories that are concrete, meaning intuitively that each object is a set (with 
additional structure) and each morphism is a (special kind of) function between 
the sets underlying the objects. We will be a bit more precise about this concept of 
a “concrete category” in Example 5.9(c). However, there are other, more abstract 
examples of categories.
Example 5.3 We give two classes of typical examples of categories, thin categories 
and monoids.
(a) 
Let (P, <) be a preorder. There is a category P with P as the set of objects 
and < as the set of morphisms; that is, a morphism is a pair (p, q) e P X P 
with p < q, dom((p, q)) := p, and cod((p, q)) := q. Exercise 5.1.1 asks you 
to define the additional structure that makes P into a category. Categories P 
that arise in this way are called thin; they are characterized by the property 
that there is at most one morphism between any pair of objects.
(b) 
Let (M, •, 1) be a monoid, that is, a set with an associative operation • such 
that 1 • m = m = m • 1 for all m e M. There is a category M with a single 
object * and M as the set of morphisms. The domain and codomain of any 
morphism is by definition *, the identity morphism 1* on the object * is 1, 

5.1 Definitions and Examples of Categories 
157
and composition is defined by •. The axioms of a monoid immediately give 
that M is indeed a category.
Both of these examples of categories are in a sense degenerate, but in two 
different directions: few morphisms (preorders) and one object (monoids). A general 
category can thus be thought of as either “a multi-arrow preorder” or “a multi-object 
monoid.”
One more central notion in categories, that we introduce now because we will 
need it throughout this chapter, is that of an isomorphism.
Definition 5.4 Let f: A ^ B be a morphism in a category C. A two-sided inverse 
to f is a morphism g: B ^ A in C such that g ◦ f = 1A and f ◦ g = 1B. The 
morphism f is called an isomorphism if a two-sided inverse exists for it. Two objects 
A and B are called isomorphic if there exists an isomorphism from A to B.
If f is an isomorphism, then the inverse of f is unique, and is denoted by f-1. 
This morphism f-1 is also an isomorphism, and the notion of being isomorphic is 
in fact an equivalence relation on the objects of C (see Exercise 5.1.4).1 A skeleton 
of a category C is a full subcategory S of C such that each object is isomorphic to 
exactly one object of S (see Exercise 5.2.3).
Example 5.5 In any of the concrete categories from Example 5.2, “isomorphism” 
as defined in Definition 5.4 means exactly what one would expect. In particular, an 
isomorphism between sets is just a bijection and an isomorphism between Priestley 
spaces is an order homeomorphism.
In a thin category P asin Example 5.3(a), two objects are isomorphic if, and only 
if, they are equivalent in the sense of Exercise 1.1.5. In a single-object category M 
as in Example 5.3(b), an isomorphism corresponds to an invertible element of the 
monoid. In particular, the monoid M is a group if, and only if, every morphism of 
M is an isomorphism. More generally, a category G is called a groupoid if every 
morphism in G is an isomorphism.
Exercises for Section 5.1
Exercise 5.1.1 Let (P, <) be a preordered set. Define ob P := P and mor P := <. 
For any (p, q) e mor P, let dom((p, q)) := p and cod((p, q)) := q.
(a) 
Why does there exist, for every p e P, a unique morphism 1p with domain 
and codomain p?
1 Note that, since ob C is not necessarily a set, while “equivalence relations” are usually taken to be subsets, 
when we say “equivalence relation” in this chapter, more formally we mean: a binary predicate that satisfies 
reflexivity, symmetry, and transitivity; but we will not need to worry about size issues.

158
5 Categorical Duality
(b) 
For any (p, q), (q, r) e mor P, define (q, r) ◦ (p, q) := (p, r). Why is (p, r) a 
morphism in P?
(c) 
Verify that the structure defined above turns P into a category in which there 
is at most one morphism between any two objects.
(d) 
Conversely, if C is a small category in which there is at most one morphism 
between any two objects, define a preorder < on the set ob C such that C is 
the category associated to the preorder (ob C, <).
Exercise 5.1.2 Let C be a small category with one object. Define a monoid M 
such that C is the category associated to the monoid M, as in Example 5.3(b).
Exercise 5.1.3 For any sets X, Y, Z and relations R c X x Y and S c Y x Z, 
recall that the relational composition of R and S is the relation R • S c X x Z 
defined by
R • S := {(x, z) e X x Z | 3 y e Y such that (x, y) e R and (y, z) e S}.
Verify that the following properly defines a category Rel: let ob Rel be the class of 
sets, and for any sets X, Y, let HomRel ( X, Y) be the set of relations R c X x Y. For 
any set X, let 1X be the diagonal relation on X. Finally, for R e HomRel(X, Y) and 
S e HomRel(Y, Z), define S ◦ R := R • S.
Exercise 5.1.4 Let f: A ^ B be a morphism in a category C.
(a) 
Prove that if g and g' are two-sided inverses to f, then g = g'.
(b) 
Suppose that f is an isomorphism. Prove that its two-sided inverse f-1 is also 
an isomorphism.
(c) 
Define a relation ~ on ob C by: A ~ B if, and only if, A is isomorphic to B. 
Prove that ~ is an equivalence relation.
5.2 Constructions on Categories
Categories can be studied from two different perspectives, both of which are im­
portant; one is external, the other internal. From the external perspective, one 
regards categories themselves as mathematical objects. From this point of view, 
one may consider mappings between categories and constructions on categories. 
For example, in this section we will describe the opposite category, subcate­
gories of a category, functors between categories, adjunctions, isomorphisms, 
and equivalences between categories and, most importantly for our purposes, 
dualities.
From the internal perspective, the structure of a category, viewed as a universe for 
performing mathematical operations, allows us to mimic many natural constructions 
that we know from mathematics within a given, fixed category. In the previous 

5.2 Constructions on Categories
159
section, we already saw in Definition 5.4 that the familiar notion of isomorphism 
between mathematical objects can be defined internally in any category. We will 
see in the next section, Section 5.3, that within many of the categories relevant to 
us, there is an analogue of “injective” and “surjective” map, of product, disjoint 
unions, power sets, and more.
Many interesting results in category theory come from the interplay between the 
two perspectives. As a case in point, duality theory uses an external construction 
(a duality) to obtain knowledge about internal constructions (for example, quotients 
and subobjects) of the categories at hand.
As an aside, we note that many of the constructions that we describe here as 
external constructions on categories can also be viewed as internal constructions 
within a category, namely, the category Cat of categories (to be properly defined 
shortly). This phenomenon, which is both beautiful and a bit jarring, will mostly 
be ignored in this chapter. We recall that our aim in this chapter is not to give the 
reader a complete course in category theory, but to only introduce categories to the 
extent that a working duality theorist needs them.
The Opposite Category
For a category C, the opposite category Cop is the category with the same objects, 
morphisms, and identity as the category C, but the domain and codomain assign­
ments are interchanged, and the order of writing composition is reversed. More 
formally:
Definition 5.6 Let C = (ob C, mor C, dom, cod, ◦, 1-) be a category. The opposite 
category Cop is defined as (ob C, mor C, cod, dom, •, 1-), where, if f: A ^ B, 
g: B ^ C are composable morphisms in C with composite g ◦ f, then the compo­
sition of the corresponding morphisms g: C ^ B and f: B ^ A in Cop, f • g, is 
defined to be the morphism C ^ A in Cop corresponding to g ◦ f. Thus, for any 
objects A, B, we have by definition HomCop (A, B) = HomC ( B, A).
Subcategories
If C and D are categories with ob D c ob C and mor D c mor C and the assignments 
dom, cod, ◦, and 1(-) of D are restrictions of those of C, then D is called a 
subcategory of C.
An important special case of a subcategory is that of a full subcategory. A 
subcategory D of C is called a full subcategory if HomD ( A, B) = HomC ( A, B) for 
every A, B e ob D. If D is a collection of objects in a category C, then we can 
always consider the full subcategory of C whose objects are in D.

160
5 Categorical Duality
For example, the categories Setf,DLf,andBAf are full subcategories of Set, DL, 
and BA, respectively. Also, BA is a full subcategory of DL, using the fact that every 
lattice homomorphism between Boolean algebras is a Boolean homomorphism (see 
Exercise 1.2.11(b)). The category HA is a non-full subcategory of DL: Not every 
lattice homomorphism between Heyting algebras is a Heyting homomorphism (see 
Exercise 4.6.5). A subcategory may only restrict morphisms, while keeping the 
same class of objects. For example, the category Rel introduced in Exercise 5.1.3 
has Set as a non-full subcategory: when moving from Rel to Set, the objects stay the 
same, but the morphisms are those relations that are functions. The category Heyt f 
of finite Heyting algebras is an example of a non-full subcategory of DLf : Every 
finite distributive lattice is a finite Heyting algebra, so the objects are the same, 
but not every distributive lattice homomorphism preserves the Heyting implication 
(see Exercise 4.6.5).
Functors and Natural Transformations
The correct notion of “homomorphism” between categories is that of a functor. We 
have already seen several examples of functors. For example, in Definition 3.21, 
we gave a functor from DL to Priestleyop: We associated to any object L of the 
category DL an object XL of the category Priestley, and, in Proposition 3.27, to 
any morphism h: L ^ M of the category DL a morphism f: XM ^ XL of the 
category Priestley, that is, a morphism f: XL ^ XM in Priestleyop.
Definition 5.7 Let C and D be categories. A functor F from C to D is a pair of 
assignments, ob C ^ ob D and mor C ^ mor D such that the following properties 
hold:
(a) for any f e mor C, dom(F(f)) = F(dom(f)) and cod(F(f)) = F(cod(f)); 
(b) for any A e ob C, F(1 A) = 1FA; and
(c) for any composable pair ( f, g) e mor C, F(g ◦ f ) = F(g) ◦ F( f ).
Note a slight abuse of notation in this definition: Both the object and the morphism 
assignment are denoted by F, even though they are strictly speaking two separate 
components of the functor F . This notation rarely leads to confusion.
Let F: C ^ D be a functor. Then, F is called
• full if, for any two objects A, B of C, the assignment f ^ F(f) is surjective as 
a map from HomC ( A, B) to HomD(F A, FB),
• faithful if, for any two objects A, B of C, the assignment f ^ F(f) is injective 
as a map from HomC ( A, B) to HomD (FA, FB), and
• essentially surjective if for every object B in D, there exists an object A e C such 
that FAis isomorphic to B in D.

5.2 Constructions on Categories
161
Functors can be composed in the obvious way, and on any category C there is an 
obvious identity functor, denoted 1C . In this way, as mentioned above, the collection 
of locally small categories and functors between them is itself again a category, 
Cat. We will not pursue this point any further here.
Example 5. 8 We give some first examples of functors.
(a) 
IfP and Q are preorders, viewed as categories as in Example 5.3, then a functor 
f: P ^ Q is essentially the same thing as an order-preserving function: Given 
a function on the underlying sets, the only non-trivial requirement for it to 
extend to a functor between the associated categories P and Q is that, if 
p < p', then there must be a morphism from f (p) to f (p') in Q, in other 
words, f (p) < f (p').
(b) 
IfM andN are monoids, viewed as categories as in Example 5.3, then a functor 
f: M ^ N is essentially the same thing as a monoid homomorphism.
(c) 
There is a functor U: DL ^ Set that sends any distributive lattice L to its 
underlying set, and any homomorphism h: L ^ M to itself. The functor U is 
clearly faithful, but not full. This functor U is called the forgetful functor, and 
in fact such a functor exists in a much wider setting, including any category 
of “algebraic structures.” While the functor may look rather trivial, it is 
important for defining free objects categorically, as we will see in Example 
5.17(a). Categories that admit a well-behaved forgetful functor to Set are 
sometimes called concrete categories, and enjoy special properties, also see 
Adamek et al. (1990).
Example 5. 9 We recall several examples of functors from a category C to a 
category Dop that we have already seen in Chapters 1, 3, and 4. Such functors are 
sometimes called contravariant functors from C to D, and in this context, an actual 
functor from C to D is called a covariant functor.
(a) 
The functor D: Posf ^ (DLf )op is defined by sending a finite poset to its 
lattice of down-sets, and an order-preserving function f: P ^ Q to the lattice 
homomorphism D(f): D(Q) ^ D(P), D ^ f-1 (D).
(b) 
The functor P: Setf ^ (BAf )op is defined by sending a finite set to its 
Boolean power set algebra and a function f: X ^ Y to the Boolean homo­
morphism P (f): P (Y) ^ P (X), S ^ f-1 (S). If we view the category Setf 
as the full subcategory of Posf consisting of the finite posets with the discrete 
order, then P is the restriction of D to this full subcategory.
(c) 
The functor ClpD: Priestley ^ DLop is defined by sending a Priestley 
space X to the lattice ClpD (X) of clopen down-sets of X and a contin­
uous order-preserving function f: X ^ Y to the lattice homomorphism 
ClpD(f): ClpD(Y) ^ ClpD(X), D w f-1 (D). If we view Posf as the full

162
5 Categorical Duality
(d)
(e)
subcategory of Priestley consisting of the finite Priestley spaces (see Exercise 
5.2.1), then ClpD restricts to the functor D in item (a) above.
The functor Clp: BoolSp ^ BAop is defined by sending a Boolean space 
X to the Boolean algebra Clp(X) of clopen subsets of X and a continuous 
function f: X ^ Y to the Boolean homomorphism f -1: Clp(Y) ^ Clp(X). 
If we view Setf as the full subcategory of BoolSp consisting of the finite 
discrete spaces, then Clp restricts to the functor P in item (b) above. Also, if 
we view BoolSp as a subcategory of Priestley by equipping a Boolean space 
with the trivial partial order, then the functor Clp is the restriction of ClpD of 
item (c) above.
Write PriestleyR? for the category whose objects are Priestley spaces and 
whose morphisms are upward Priestley compatible relations; see Definition 
4.38. Write DLA for the category whose objects are distributive lattices and 
whose morphisms are finite-meet-preserving functions. The results in Section 
4.3 show in particular that there is a functor ClpD: PriestleyR? ^ DLoAp, 
which acts on objects as the functor described under item (c) above, and on 
morphisms sends a relation R c X x Y to the finite-meet-preserving function 
VR—i.
In each of the above examples, there is also a functor in the other direction. For 
example, recall from Theorem 1.25 that there is a functor J: (DLf )op ^ Posf 
which is defined by sending a finite distributive lattice L to its poset of join- 
irreducibles J (L), and a homomorphism h: L ^ M to the restriction of its lower 
adjoint, which is an order-preserving function J (M) ^ J (L).
How are the functors D and J related to each other? A first guess might 
be that they form an isomorphism between categories, in the sense that they are 
mutually inverse to each other, but this is not literally the case. (We give the 
notion of isomorphism of categories at the end of this section.) The composition 
of the functors D and J is “almost” the identity, but only up to an isomorphism 
between objects: For any lattice L, there is an isomorphism aL between L and 
D(J (L)). While the isomorphism aL has the lattice L as a parameter, its definition 
is “consistent” as L varies.
To precisely define an equivalence of categories, we need to make precise what 
we mean by “consistent” in the previous sentence. To this end, we now introduce the 
notion of natural transformation. A natural transformation should be thought of as 
a morphism between two functors, and, as we shall see, the family of isomorphisms 
a := (aL)LeobDLf is an example. The family a is a special kind of natural trans­
formation, because each of its components is an isomorphism; this is not required 
in the general definition of natural transformation.
Definition 5.10 Let F and G be two functors from a category C to a category 
D. A natural transformation from F to G, notation ^: F ^ G, is an (ob C)- 

5.2 Constructions on Categories 
163
indexed collection ^ = (^A)Aeob C of morphisms in D that satisfies the following 
properties:
(a) 
for every A e ob C, dom(^A) = FA and cod(^A) = GA; and
(b) 
for every morphism f: A ^ A' in C, we have Gf ◦ yA = ^A ◦ F f; that is, 
the following square commutes:
Ff
FA -------- » FA'
? A 
^ A'
' Gf "
GA -------- G GA
A natural isomorphism is a natural transformation all of whose components are 
isomorphisms in the category D.
Under this definition, the family a = (aL)L eDLf defined above is an example of 
a natural isomorphism a: 1DLf ^ D ◦ J, where we recall that 1DLf denotes the 
identity functor on the category DLf .
Natural transformations are the morphisms in a (large) category of functors, that 
is, there is a composition of natural transformations and an identity natural trans­
formation 1F : F ^ F, for any functor F. Moreover, when ^: F ^ G is a natural 
transformation and K, L are functors that can be post-composed and pre-composed 
with F, then we also have well-defined natural transformations Ky: KF ^ KG 
and ^L: FL ^ GL. In this category, a natural transformation is a natural isomor­
phism if, and only if, it is an isomorphism in the category, that is, if there exists 
a natural transformation that is its two-sided inverse. For more precise statements, 
see Exercise 5.2.4.
Example 5.11 Let P and Q be preorders. Recall from Example 5.9 that functors 
from P to Q are (given by) order-preserving functions. Since there is at most one 
morphism between any two objects of P,orofQ, there is at most one natural 
transformation between any two functors in this setting. If f, g: P ^ Q are two 
order-preserving functions, viewed as functors, then there exists a natural transfor­
mation a: f ^ g if, and only if, f is pointwise below g, that is, f (p) < g(p) for 
every p e P.
For monoids M and N, a natural transformation between two functors (i.e., 
homomorphisms) f, g: M ^ N is given by an element a e N such that, for every 
m e M, af(m) = g(m)a.
Equivalences and Dualities
Finally, we come to the categorical notion that is central to this book.

164
5 Categorical Duality
Definition 5.12 Let C and D be categories. A pair of functors F : C D: G 
is called an equivalence between C and D if there exist natural isomorphisms 
a: 1C ^ GF and P: FG ^ 1D. An equivalence between C and Dop is called a 
dual equivalence or duality between C and D.
The categories C and D are called equivalent if there exists an equivalence 
between them and C and D are called dually equivalent or simply dual if there 
exists a dual equivalence between them.
In this definition, since the notion of natural isomorphism is symmetric, the 
direction of a and P clearly does not matter, and the asymmetric choice, where a has 
the identity functor as codomain and P has the identity functor as domain, may look 
a bit strange. However, we will see shortly that the notion of equivalence is a special 
case of the notion of adjunction, where the direction of the natural transformations 
does matter. As is common in the literature, we formulated Definition 5.12 to 
resemble the definition of adjunction (Definition 5.15) as much as possible.
The following theorem, whose proof relies on the axiom of choice, is very useful 
when proving that a functor is part of an equivalence, as it allows us to avoid 
explicitly defining natural isomorphisms, but instead to just check three properties 
for one of the two equivalence functors. One may view this theorem as a categorified 
version of the fact that if a function f: C ^ D between sets is bijective, then it has 
a two-sided inverse.
Theorem 5.13 Let F : C ^ D be a functor. The following are equivalent:
(i) There exists a functor G: D ^ C such that (F, G) is an equivalence between 
C and D.
(ii) The functor F is full, faithful, and essentially surjective.
Proof We leave the implication (i) ^ (ii) to the reader (see Exercise 5.2.5). 
Conversely, suppose that F is full, faithful, and essentially surjective. Since F is 
essentially surjective, for every object B in D, pick an object GB in C and an 
isomorphism PB : F(GB) ^ B. Let g: B ^ B' be a morphism in D and define 
g: F(GB) ^ F(GB') to be the composite map (PB)-1 ◦ g ◦ PB. Since F is 
full and faithful, there exists a unique morphism, Gg: GB ^ GB', such that 
F(Gg) = g' = (PB)-1 ◦ g ◦ PB. In other words, applying p'B- to both sides of this 
equality, Gg is the unique morphism GB ^ GB' such that PB' F(Gg) = gPB. (We 
will often omit the symbol ◦ in the remainder of this proof to improve readability.)
We show that the assignment G: D ^ C given by G(B) = GB and G(g) = Gg is 
a functor. For any object B in D, notice that PBF (1GB) = PB 1F(GB) = PB = 1 B PB . 
Thus, by the uniqueness in the definition ofG on morphisms, G(1B) = 1GB. Now, 
let g1: B 1 ^ B2 and g2: B2 ^ B3 be a pair of composable morphisms in D. 
We will prove that G(g2 ◦ g1) = G(g2) ◦ G(g1) by showing that the morphism

5.2 Constructions on Categories
165
G(g2) ◦ G(g1) satisfies the defining property of G(g2 ◦ g1). Indeed, using the fact 
that F is a functor and the defining properties of G(g1) and G(g2), we get
0B3 F (G (g2) G (gi)) = $B3 FG (g2) FG (gi) = g2 0B2 FG (gi) = g2gi £b1.
It is immediate from the definition of G that fi: FG ^ 1D is a natural transforma­
tion, and thus a natural isomorphism.
Finally, we construct a natural isomorphism a: 1C ^ GF. For any object A 
in C, let a A be the unique morphism A ^ GF (A) such that F (a A) = fi^A. We 
leave it as a highly instructive exercise to the reader to check that a is a natural 
isomorphism (see Exercise 5.2.6 for hints). 
□
Example 5.14 All the functors in Example 5.9 are part of a dual equivalence. 
Indeed, consider again the functor D: Posf ^ (DLf )op from Example 5.9(a). We 
check explicitly that D is full, faithful, and essentially surjective. It was shown in 
Proposition i.2i of Chapter i that every finite distributive lattice is isomorphic to 
some lattice of the form D(P), where we can take for P the finite poset of join-prime 
elements of the lattice. Thus, D is essentially surjective. It was shown in Proposition 
1.24 that, for arbitrary finite posets P, Q, the assignment f ^ D(f) := f-1 is a 
bijection between the set of order-preserving functions from P to Q and the set of 
lattice homomorphisms from D (Q) to D(P) . This means exactly that D is full and 
faithful. Therefore, by Theorem 5.13, D is part of a dual equivalence. The functor 
J: (DLf )op ^ Posf gives the (up to natural isomorphism) unique functor in the 
other direction. To see this, one may either trace the proof of Theorem 5.13 in this 
specific case and check that J works as a choice for G in that proof, or directly 
exhibit the required natural isomorphisms. A natural isomorphism a: 1(DLf )op ^ 
DJ is given by the family of maps (-): L ^ D(J(L)), which are isomorphisms 
according to Proposition 1.21. A natural isomorphism fi: 1Posf ^ JD is given 
by the family of isomorphisms fiP : P ^ J(D(P)) that send p e P to jp, given 
by Proposition 1.22. This concludes our detailed proof of Theorem 1.25.
You are asked to supply a similar proof of the Priestley duality theorem, Theorem 
3.31, via Theorem 5.13 in Exercise 5.2.7, also see Theorem 5.38 for a direct proof 
that does not use Theorem 5.13.
Note that, once the functors have been defined, these proofs always follow the 
same pattern, and have very little to do with the precise categories at hand. The 
real work in establishing a (dual) equivalence between two specific categories is in 
defining a full, faithful, essentially surjective functor from one category to another. 
The rest is, as some category theorists like to call it, “abstract nonsense.”
In the next subsection, we will encounter some pairs of functors that do not form 
equivalences, but that do enjoy a looser bond.

166
5 Categorical Duality
Adjunctions
An important weakening of the notion of equivalence is that of an adjunction be­
tween categories. We already encountered adjunctions in the context of preordered 
sets in the very first section of this book (Definition 1.14). We used adjunctions 
between posets several times in Section 4.2, to formulate the correspondence be­
tween quotient lattices and subspaces. Adjunctions between categories generalize 
adjunctions between preorders, if we view a preorder as a category with at most one 
morphism between two objects (see Example 5.3). We have already seen examples 
of such categorical adjunctions “in action:” both the Boolean envelope (Section 3.3) 
and the free distributive lattice (Section 4.1) are examples of adjoint constructions; 
see Example 5.17 for details.
Definition 5.15 Let C and D be categories and let F: C D: G be a pair of 
functors between them. We say that (F, G) is an adjunction if there exist natural 
transformations n:1c ^ GF and e: FG ^ 1d satisfying the following two 
properties:
(a) 
for any object A of C, eFA ◦ F(nA) = 1FA; and
(b) 
for any object B of D, G(eB) ◦ nGB = 1GB.
In this situation, F is called left or lower adjoint to G and G is called right or upper 
adjoint to F; a common notation for this is F d G. When the natural transformations 
n and e are explicitly specified, the natural transformation n is called the unit of the 
adjunction and e is called the co-unit of the adjunction.
Properties (a) and (b) in Definition 5.15 are called triangle identities, as they can 
be expressed by saying that the following two triangles of natural transformations 
commute:
nG
G -------- > GFG
f n
F 
FGF
e f
F
1G
G e
G.
While Definition 5.15 does not make the unit-co-unit pair (n, e) part of the structure 
of an adjunction, and there may exist distinct choices of unit and co-unit for the 
same pair of functors, in the examples we consider in this book, there will always 
be a natural choice for n and e, that we will specify when needed. An adjoint pair 
of functors is an equivalence exactly if the unit and co-unit can be chosen to be 

5.2 Constructions on Categories
167
natural isomorphisms, in the sense that, for any equivalence, there exist natural 
isomorphisms that satisfy the triangle identities (see Exercise 5.2.8).2
The reader may recall that, for preorders P and Q, two order-preserving functions 
f : P Q : g form an adjunction if, for any p e P and q e Q, f (p) <q q if, and 
only if, p <P g (q). An equivalent definition, given in Exercise 1.1.8, says that the 
function 1 P is pointwise below the function gf , and that fg is pointwise below 
1Q , which shows why the notion of adjunction between categories generalizes that 
between preorders. In the setting of categories, we have the following statement, 
which is closer to the original definition of adjunction between preorders.
Proposition 5.16 If F: C D : G is an adjunction, then there exists, for any 
objects A in C and B in D, a bijection between the sets HomD (FA, B) and 
HomC(A, GB).
In other words, the cardinality of the set of morphisms from FA to B in D is 
equal to that of the set of morphisms from A to GB in C. Since, in a preorder, the 
number of morphisms between two objects is at most one, the reader should now 
clearly see the correspondence with the preorder definition of adjunction.
We note here that Proposition 5.16 can also lead to an alternative definition 
of adjunction between categories, by adding the information that the family of 
bijections HomD (FA, B) ^ HomC (A, GB) in fact forms a natural isomorphism 
between HomD(F-, -) and HomC (-, G-), when these assignments are viewed 
as functors from Cop X D to Set. Proving that this definition is equivalent to our 
Definition 5.15 is beyond the scope of this book, and we will work with Defini­
tion 5.15 as the official definition of adjunction. For a treatment of adjunctions 
that takes the Hom-set definition as primitive, see, for example, Mac Lane (1971, 
Chapter 4).
An important property of adjunctions is that they compose: When F : C D : G 
and F': D E: G' are functors such that F is left adjoint to G and F' is left adjoint 
to G', then F'F is left adjoint to GG' (see Exercise 5.2.13).
Example 5.17 (a) Let U: DL ^ Set denote the forgetful functor of Example 
5.9(c). The left adjoint to this forgetful functor is the free distributive lattice 
functor, FDL: Set ^ DL, whose object part was constructed in Section 4.1. 
The universal property allows one to extend this object assignment to a functor 
which is left adjoint to U. You are asked to supply the details of this example 
in Exercise 5.2.9.
2 There is a slight subtlety here: For an equivalence, not every pair of natural isomorphisms 1c ^ GF and 
FG ^ 1D satisfies the triangle identities, but there is always some choice that does. An equivalence together 
with explicit natural isomorphisms that satisfy the triangle identities is sometimes called an adjoint 
equivalence in the literature, to distinguish it from the non-adjoint situation, but for all of the (dual) 
equivalences in this book there is a straightforward choice of natural isomorphisms that do satisfy the triangle 
identities, so we need not make this distinction.

168
5 Categorical Duality
(b) 
Similarly to the previous item, the Boolean envelope of a distributive lattice 
(see Section 3.3) is the image of the left adjoint (-)-: DL ^ BA to the 
forgetful functor U: BA ^ DL. This item, together with the previous one 
and the fact that adjunctions compose, gives a more abstract proof of Lemma 
4.11: The composition of (-)- and FDL gives a left adjoint FBA: Set ^ BA 
to the forgetful functor U: BA ^ Set.
(c) 
The free join-semilattice over a poset P was given in Exercise 1.3.8 as the 
lattice of finitely generated down-sets of P. This can be used to show that the 
forgetful functor U: SL ^ Pos, where SL is the category of semilattices, has 
a left adjoint, Dfin: Pos ^ SL.
(d) 
Let DL+ denote the (non-full) subcategory of distributive lattices that are iso­
morphic to a lattice of the form D(P), for P a poset, with complete homomor­
phisms between them. (The class of distributive lattices that are isomorphic 
to the down-set lattice of some poset may be characterized as “completely 
distributive complete lattices that have enough completely join-irreducible 
elements.” Completely distributive complete lattices will be studied exten­
sively in Section 7.1.) There is a (non-full) inclusion functor I: DL+ ^ DL. 
The functor I has a left adjoint, ()5, which may be constructed as follows. For 
any distributive lattice L, let L5 be the lattice D(XL), where XL is the poset 
underlying the Priestley dual space of L. For any distributive lattice homomor­
phism h: L ^ M, let h5 be the complete homomorphism (fh)-1: L5 ^ M5, 
where f h : XM ^ XL is the (order-preserving) function dual to h. The functor 
()5 is (naturally isomorphic to) the so-called canonical extension functor.
The unit of the adjunction I d ()5 is the function nL: L ^ D(XL) that 
sends a e L to a The co-unit of the adjunction is defined, for C an object 
of DL+, as the map eC: D (XC) ^ C which sends a down-set D c XC to 
VxeD A Fx, where the join and meet are taken in the complete lattice C.
(e) 
Another basic example of a free construction, which will become relevant in 
Chapter 8 of this book, is the free monoid on an input alphabet. A monoid 
is a tuple (M, •, 1) where • is an associative binary operation on M, that is, 
u • (v • w) = (u • v) • w for all u, v, w e M, and 1 is a neutral element, that is, 
1 • u = u = u • 1 for all u e M. In this context, a monoid homomorphism is a 
function f: M ^ N that preserves the multiplication and the identity element. 
We denote the category whose objects are monoids and whose morphisms are 
monoid homomorphisms by Mon. Note that this category Mon is different 
from the category associated to a single monoid M that we saw in Example 
5.3(b). We have an obvious forgetful functor U: Mon ^ Set. This functor 
has a left adjoint, which we denote (-)*: Set ^ Mon, and which sends a set 
X to the collection of finite sequences over X , equipped with multiplication 
given by concatenation of sequences, for which the empty sequence is an 

5.2 Constructions on Categories
169
identity element. Exercise 5.2.10 asks you to show that this indeed yields a 
left adjoint to the forgetful functor.
The similarity between items (e) and (a) in Example 5.17 is no coincidence: 
General results of universal algebra, going back to Birkhoff, show that any so- 
called variety of algebras admits a free construction (see Exercise 5.2.11). In fact, 
any adjunction between categories may be understood as “a universal construction,” 
in the following sense.
Theorem 5.18 Let G : D ^ C be a functor. The following are equivalent:
(i) 
The functor G has a left adjoint.
(ii) For every object A of C, there exist an object F(A) of D and a morphism 
nA: A ^ G(F(A)) of C such that, for any object B of D and any C- 
morphism f: A ^ G(B), there is a unique D-morphism f: F (A) ^ B such 
_ _ —
that (Gf) ◦ nA = f.
This theorem generalizes the characterization of functors that are part of an 
equivalence, Theorem 5.13, in the following sense: If a functor G is essentially 
surjective, then one may always choose an object F(A) and an isomorphism 
nA: A ^ G(F(A)); if G is then moreover full and faithful, then any such choice 
will satisfy the universal property stated in (ii) of Theorem 5.18, and will thus have 
a left adjoint, with which G will then form an equivalence. The proof of Theorem 
5.18 is beyond the scope of this book; see for example Borceux (1994, Section 3.1).
We end our discussion of adjunctions by connecting itto equivalences in a differ­
ent useful way: One may always obtain a (dual) equivalence from a (contravariant) 
adjunction. Indeed, Theorem 5.13 can be applied to prove that any (contravariant) 
adjunction restricts to a maximal (dual) equivalence. This associated duality is ob­
tained by restricting the functors to the full subcategories given by the objects for 
which the natural map between the object and its double dual is an isomorphism. 
We record this fact here and leave the precise proof as Exercise 5.2.15.
Corollary 5.19 Let F: C D: G be an adjunction. Denote by Fix(C) the full 
subcategory of C consisting of those objects A for which the unit n A: A ^ GF A is 
an isomorphism. Similarly, denote by Fix (D) the full subcategory of D consisting 
of those objects B for which the co-unit eB : FGB ^ B is an isomorphism. Then, 
F and G restrict to an equivalence between Fix(C) and Fix(D).
Isomorphisms
Finally, the notion of isomorphism between categories is easy to state, but often too 
restrictive.

170
5 Categorical Duality
Definition 5.20 A functor F : C ^ D is called an isomorphism between categories 
C and D if there exists a functor G: D ^ C such that G ◦ F is equal to the identity 
functor on C and F ◦ G is equal to the identity functor on D. A dual isomorphism 
between C and D is an isomorphism between C and Dop. Two categories C and 
D are called isomorphic if there exists an isomorphism between them and dually 
isomorphic if there exists a dual isomorphism between them.
Note that an isomorphism between locally small categories is, by definition, a 
functor that is an isomorphism, in the sense of Definition 5.4, when viewed as a 
morphism in the (large) category of locally small categories.
Example 5.21 As indicated in Exercise 2.2.6, the category Topf of finite T0 
topological spaces is isomorphic to the category Posf of finite partially ordered 
sets. Indeed, for a finite T0 space (X, t), let F(X, t) := (X, <T) be the specialization 
order of (X, t), and, conversely, for a finite order (X, <), let G(X, <) := (X, a(X)) 
be the set X equipped with the Alexandrov topology induced by <. These object 
assignments F and G extend to functors by sending any function to itself.
Example 5.22 In Section 2.3 in Chapter 2, we studied a bijective correspondence 
between compact ordered spaces and stably compact spaces: To a compact ordered 
space (X, t, <), assign the stably compact space (X, r^), and conversely to a stably 
compact space (X, a), assign the compact ordered space (X, ap, <a). We saw in 
Proposition 2.20 that these assignments are mutually inverse. Compact ordered 
spaces form a category whose morphisms are the continuous order-preserving 
maps. If we equip the class of stably compact spaces with the proper maps defined 
in Exercise 2.3.15, then it will become isomorphic to the category of compact 
ordered spaces; you will be asked to supply the details in Exercise 5.2.16. In the 
next chapter, Section 6.1, we will study the restriction of this isomorphism of 
categories to the full subcategory of Priestley spaces; the image on the side of 
stably compact spaces is the class of spectral spaces.
Exercises for Section 5.2
Exercise 5.2.1 This exercise guides you through the details of identifying Posf 
with a full subcategory of Priestley.
(a) 
Prove that the topology on a finite compact Hausdorff space is discrete.
(b) 
Prove that, if (X, <) is a finite poset, then i(X, <) := (X, t, <), where t is the 
discrete topology on X , is a Priestley space.
(c) 
Prove that a function f: X ^ Y between finite Priestley spaces is a morphism 
in Priestley if, and only if, f is order preserving.

5.2 Constructions on Categories
171
(d) 
Conclude that the object assignment i in item (b) extends to a full and faithful 
functor i: Posf ^ Priestley.
Exercise 5.2.2 A category is called self-dual if C is equivalent to Cop.
(a) 
Verify that the category Rel is self-dual, and in fact, isomorphic to the category 
Relop.
We now outline a proof that Set is not self-dual.
(b) 
Exhibit an object 1 in Set with the property that for any object X there is 
exactly one morphism X ^ 1. (Such an object is called a terminal object in 
a category, and is unique up to isomorphism, as we will see in Section 5.3.)
(c) 
Show that Set has the following property: For any two distinct morphisms 
f, g: X ^ Y, there exists a morphism x: 1 ^ X such that fx f y. A 
category with this property is said to be generated by its terminal object or 
well pointed.
(d) 
What is the terminal object in Setop?
(e) 
Prove that Setop is not generated by its terminal object.
(f) 
Conclude that Set is not self-dual.
Exercise 5.2.3 This exercise outlines a possible construction of a skeleton of a 
category. The special case of preorders was already given in Exercise 1.1.5. Let C 
be a category. Choose a collection of objects S in C such that every object in C is 
isomorphic to exactly one object of S; note that this step uses the axiom of choice for 
the collection ob C, which is in general not a set, but we ignore set-theoretic issues 
here. Prove that the inclusion functor of the full subcategory S on the collection of 
objects S is an equivalence.
Exercise 5.2.4 Let F, G, H: C ^ D be functors and let ^: F ^ G and ^: G ^ 
H be natural transformations.
(a) 
Give a definition of the composition ^ ◦ ^: F ^ H, and show that it is again 
a natural transformation.
(b) 
Show that there is an identity natural transformation 1F : F ^ F.
(c) 
Given a functor K: D ^ E, show that Ky: KF ^ KG, defined at an object 
C of C by (Ky)A := K(yA), is a natural transformation.
(d) 
Given a functor L: B ^ C, show that ^L: FL ^ GL, defined at an object B 
of B by (^L)B := ^LB, is a natural transformation.
(e) 
Prove that, if $: G ^ F is a natural transformation such that $ ◦ ^ = 1F and 
^ ◦ $ = 1G, then ^ and $ are natural isomorphisms.
(f) 
Prove that, if ^ is a natural isomorphism, then defining $ A := (^ A)-1 for 
every A e ob C yields a natural transformation $ that is a two-sided inverse 
for ^.

172
5 Categorical Duality
Exercise 5.2.5 Let F: C D : G be an equivalence of categories. Prove that the 
functors F and G are full, faithful, and essentially surjective.
Exercise 5.2.6 This exercise asks you to complete the proof of the sufficiency 
direction of Theorem 5.13. Consider the family of morphisms (aA)AeobC defined 
at the end of the proof of that theorem in the text.
(a) 
Prove that a: 1C ^ GF is a natural transformation. Hint. For a morphism 
f: A ^ A' in C, show first the equality
Pfa ◦ F (a A ◦ f) = Pfa ◦ F (GF (f) ◦ a A),
and then explain why this is enough to conclude that a A f = GF (f) a A.
(b) 
Prove that aA is an isomorphism for every object A. Hint. Consider a mor­
phism y A: GF A ^ A such that F y a = PF A.
Exercise 5.2.7 Use Theorem 5.13 to show that the results from Chapter 3 imply 
that the functors from Example 5.9(c) form a dual equivalence. In other words, 
prove Theorem 3.31 (Priestley duality).
Note. We will give more details and in particular a somewhat more explicit proof 
of Priestley duality in Section 5.4.
Exercise 5.2.8 Show that every equivalence can be improved to an adjoint equiv­
alence. That is, let F: C D: G be an equivalence of categories. Prove that there 
exist natural isomorphisms n: 1C ^ GF and e: FG ^ 1D satisfying the triangle 
identities. Hint. Consider the proof of Theorem 5.13.
Exercise 5.2.9 This exercise asks you to supply the details omitted in Example 
5.17(a) about the free distributive lattice on a set. For any set X, denote by nX: X ^ 
UFDL (X ) the embedding of X into the free distributive lattice over X .
(a) 
Prove that Fdl extends to a functor Set ^ DL.
(b) 
Explicitly define a co-unit e: FDL U ^ 1DL.
(c) 
Prove that n and e are natural transformations satisfying the triangle identities.
Exercise 5.2.10 Repeat Exercise 5.2.9 for the free monoid functor from Example 
5.17(e) (see Exercise 5.2.11 for a general result of which this exercise and the 
previous one are specific instances).
Exercise 5.2.11 This exercise generalizes Exercises 5.2.9 and 5.2.10. Let V be 
a variety of finitary algebraic structures with at least one constant symbol in the 
signature. Denote by V the category whose objects are the algebras in V , and whose 
morphisms are the homomorphisms, and denote by U: V ^ Set the forgetful 
functor. Prove that U has a left adjoint FV: Set ^ V. Hint. This exercise essentially 
asks to prove a well-known theorem of Birkhoff, namely, that any finitary variety 

5.3 Constructions inside Categories
173
has free algebras. The proof mimics exactly the algebraic construction of the free 
distributive lattice given in Section 4.1. Also see Burris and Sankappanavar (2000, 
Chapter II).
The reason for assuming that the signature has a constant symbol is that, if the 
signature has no constant symbol, then FV(0) has to be empty, and some authors 
do not allow the empty set as an algebra.
Exercise 5.2.12 Prove Proposition 5.16.
Exercise 5.2.13 Let F: C D : G and F': D E: G' be adjunctions. Prove that 
F'F: C D: GG' is an adjunction.
Exercise 5.2.14 Prove that “equivalence” is an equivalence relation on categories. 
That is, show that any category C is equivalent to itself, that C equivalent to D 
implies D equivalent to C, and that if C is equivalent to D and D is equivalent to E, 
then C is equivalent to E.
Exercise 5.2.15 Show that Corollary 5.19 indeed follows from Theorem 5.13.
Exercise 5.2.16 Using the results of Exercise 2.3.15, prove that the bijective 
correspondence of Theorem 2.21 extends to an isomorphism of categories, as 
outlined in Example 5.22 (also see Theorem 6.4 in Chapter 6).
5.3 Constructions inside Categories
We now come to the internal perspective on a category. We will consider many 
types of internal notions and constructions in a category: monomorphisms and 
epimorphisms; products and coproducts; equalizers and coequalizers; and, most 
generally, limits and colimits. The reader will notice that these notions come in 
pairs; why? As we discussed early on in Section 5.2, any notion in a category C can 
also be considered in the so-called opposite category Cop, in which the direction 
of the morphisms is reversed. This means that, for any concept of a categorical 
“gadget,” one can also define a “co-gadget” in C to be “a thing in C that is a gadget 
when viewed in Cop.” The name for the dual notion is often formed by prefixing 
“co-” to the original name: product and coproduct; equalizer and coequalizer; limit 
and colimit.3 In this section, we often explicitly introduce both a notion and its dual. 
While not the most economical, this will allow the reader to see both the formal 
similarity and the fact that these notions can have very different concretizations in 
specific examples of categories.
3 A notable exception to this terminological rule is “covariant” vs “contravariant” functor, defined in the 
previous section, and also “monomorphism” vs. “epimorphism” introduced here.

174
5 Categorical Duality
Recall our convention that we often omit the symbol ◦ for composition within a 
category, and we write strings like “h g f ” as shorthand for “h ◦ g ◦ f .”
Monomorphisms, Epimorphisms, and Coequalizers
We already saw one type of special morphism in a category: an isomorphism, 
defined in Definition 5.4. We now introduce two related, but weaker, notions.
Definition 5.23 Let f: A ^ B be a morphism in a category C. We say that f is a
• monomorphism if, for any g, h: A' ^ A in C such that f g = fh, we have g = h, 
and an
• epimorphism if, for any g, h: B ^ B' in C such that g f = hf, we have g = h.
We often use the abbreviations “mono” and “epi,” omitting the suffix “-morphism.” 
It is not hard to prove that in any category, an iso is both mono and epi. The converse, 
however, fails in many categories (see Exercises 5.3.1 and 5.3.4 for examples).
In the category of sets, monomorphisms are just injective functions and epi­
morphisms are surjective functions. However, this correspondence breaks down 
in most other concrete categories! In particular, categories of algebras often have 
non-surjective epimorphisms; for an example, see Exercise 5.3.1 for the case of 
distributive lattices. An abstract notion that corresponds more closely to “surjec­
tive,” at least in categories of algebras, is that of a regular epimorphism, which we 
introduce now.
Definition 5.24 Let p 1, p2: C ^ A and q: A ^ Q be morphisms in a category C. 
We say that q is a coequalizer of (p1, p2) if (i) qp1 = qp2 and (ii) for any morphism 
q': A ^ Q' in C such that q'p 1 = q'p2, there exists aunique morphism a: Q ^ Q' 
in C such that a q = q'.
A regular epimorphism q: A ^ Q in C is a morphism which is the coequalizer 
of some pair of morphisms.
The terminology suggests that any morphism which arises as a coequalizer is in 
fact an epimorphism; you are asked to prove that this is indeed the case in Exercise 
5.3.5. In the following example, we explicitly compute coequalizers in the category 
Set.
Example 5.25 Let p 1, p2: C ^ A be functions between sets. Define = to be the 
smallest equivalence relation on the set A that contains the pair (p1 (c), p2(c)), for 
every c e C. Let Q := A/= be the quotient and q: A ^ Q the quotient map. We 
show that q is a coequalizer of (p1, p2). Clearly, qp1 = qp2, since = contains all pairs 
(p 1 (c), p 2 (c)). Suppose that q': A ^ Q' is any function such that q' p 1 = q' p 2. Note 
that the equivalence relation ker(q') = {(a, b) e A2 | q' (a) = q'(b)} contains every 
pair (p1(c), p2(c)), and therefore must contain the equivalence relation =, since 

5.3 Constructions inside Categories
175
this is the smallest such. Therefore, there is a well-defined and unique factorization 
a: Q ^ Q' such that a q = q'.
Exercise 5.3.7 outlines a proof that in the category of lattices, the regular epi­
morphisms coincide with the surjective homomorphisms. Dually, we have notions 
of equalizer and regular monomorphism, that we will discuss in more detail below. 
In the category of lattices, a lattice homomorphism is a monomorphism if, and only 
if, it is injective. Not every monomorphism is regular in the category of distributive 
lattices (see Exercise 5.3.1).
The definition of coequalizer is an example of a universal property: It states the 
existence of a “minimal solution” for a configuration of morphisms in a category; 
in this case, a coequalizer q of (p1, p2) “solves for x” the equation xp1 = xp2, 
and does so in a “minimal” way, in the sense that any other solution q' factors 
through q. A coequalizer is a special case of a colimit in a category, as we will 
explain below. Any concept defined by a universal property is unique up to unique 
isomorphism. Concretely, for coequalizers this means that if q1 and q2 are both 
coequalizers of (p1, p2), then the unique maps between the codomains of q1 and q2 
which are guaranteed to exist by the definition must be inverse to each other (see 
Exercise 5.3.6).
We will see several more examples of concepts defined by universal properties 
in this section. In fact, universal properties, limits, and adjunctions are all closely 
related concepts; the interested reader may find, after digesting the definition of 
limit, an indication of the connection in Exercise 5.3.14.
Products and Coproducts
As we saw in Example 5.25, coequalizers are an appropriate categorical general­
ization of “quotient map.” The Cartesian product and disjoint union of sets admit a 
similar generalization, namely as product and coproduct, respectively.
Definition 5.26 Let I be a set and (Di)ieI an I-indexed family of objects in a 
category C. A product of the family (D i )i eI is an object L together with an I - 
indexed family of morphisms (ni: L ^ Di )i eI such that, for any object A and any 
I-indexed family of morphisms (ai: A ^ Di )i eI, there exists a unique morphism 
a: A ^ L such that ni ◦ a = a i for every i e I.
If a family has a product, we often denote it by nieI Di, and, if I = {1,2}, by 
D1 x D2. In the case I = 0, a product of the unique 0-indexed family is called a 
terminal object, and is often denoted by 1.
Note that an object T in a category C is terminal if, and only if, for every object A 
in C, there is a unique morphism from A to T. When a 1: A ^ D 1 and a2: A ^ D2

176
5 Categorical Duality
Figure 5.1 The universal property of binary product in a category.
are morphisms, the unique morphism A ^ D 1 X D2 is often denoted {a 1, a2). The 
universal property can then be expressed in a diagram, as in Figure 5.1. Also, when 
f1: A 1 ^ D 1 and f 2: A2 ^ D2 are morphisms, then there is a unique morphism 
f: A 1 X A2 ^ D 1 X D2 defined by <f1 ◦ n1, f 2 ◦ n2). This morphism f is denoted 
f1 X f2.
It is easy to verify that the Cartesian product of sets gives a product in Set. Any 
one-element set is a terminal object in Set. Products exist in any category of finitary 
algebraic structures and are given by the Cartesian product in such a category; in 
particular, the categorical product in categories of lattices is given as in Set (see 
Exercise 5.3.9). The product in Priestley spaces is also given as in the category of 
ordered topological spaces, because the product of a collection of Priestley spaces 
is a Priestley space (see Exercise 5.3.10).
If a category has finite products, then this allows us to “internalize” algebraic 
structure in the category; this perspective was popularized by Lawvere, giving rise 
to a notion of Lawvere theory. While we do not need to develop this theory here, 
we give an example that will be relevant in Chapter 8 and that gives the flavor of 
the idea.
Example 5.27 A monoid internal to a category C is an object M of C, together 
with two morphisms 1: 1 ^ M and p: M X M ^ M such that the following three 
diagrams commute:
IXidM
1 X M M M X M
id MX I
M X 1 M X M
l"
M
l"
M

5.3 Constructions inside Categories
177
(M x M) x M -------- i-—M---------> M x M
“^ 
p
M x (M x M) ^dM^ M x M —M,
where, in the last diagram, the morphism a is the associator defined by <f1, f 2), 
where f1: (M x M) x M ^ M is the composition of the two projections on the 
first coordinate and f 2: (M x M) x M ^ M x M is n2 x idM. These diagrams 
correspond to the monoid axioms 1 • a = a, a • 1 = a, and (a • b) • c = a • (b • c), 
respectively.
For example, a topological monoid, which we will encounter again in Definition 
8.30, is a monoid internal to Top and a Priestley monoid is a monoid internal 
to Priestley. For these concrete categories, it is easy to see that, for instance, a 
topological monoid (M, I, p) is the same thing as a monoid on the underlying sets 
for which p is continuous, and, in the case of Priestley, order preserving (the 
function I always is because the object 1 is a one-point space). An example of a 
different flavor is a monad, which can be seen as a monoid internal to the category 
of endofunctors; however, properly defining monads in this way requires replacing 
in the above definition the product x by the composition of endofunctors, known 
as monoidal structure on a category.
We now give the dual definition of coproduct.
Definition 5.28 Let I be a set and (Di)ieI an I-indexed family of objects in a 
category C. A coproduct of the family (Di)ieI is an object C together with an 
I-indexed family of morphisms (ii: Di ^ C)i eI such that, for any object B and any 
I-indexed family of morphisms (bi: Di ^ B)i eI, there exists a unique morphism 
P: C ^ B such that fi ◦ ii = bi for every i e I.
If a family has a coproduct, we often denote it by £ieI Di, and, if I = {1,2}, by 
D 1 + D2. In the case I = 0, a coproduct of the unique 0-indexed family is called an 
initial object, and is often denoted by 0.
Remark 5.29 We occasionally used the notation A + B earlier in this book for the 
symmetric difference of two sets A and B, usually as subsets of a common set X as, 
for example, in Example 4.21. Note that this symmetric difference A + B is not in 
general a coproduct of the objects A and B in the category Set, but it is when the 
sets A and B are disjoint.
An initial object in a category is an object 0 such that there exists a unique 
morphism from 0 to any object of the category. Coproducts in Set are given by 
disjoint unions and the initial object is the empty set. However, coproducts are often 
more complicated to compute in other categories of algebras and spaces. For any 

178
5 Categorical Duality
set V , £v eV 3 is the free distributive lattice over the set of generators V, since 3 
is the free distributive lattice on a single generator (see Exercise 5.3.13). Finite 
coproducts in Priestley spaces are disjoint unions, but infinite coproducts involve a 
compactification step (see Exercise 5.3.11).
Example 5.30 Let P be a preorder, viewed as a category, and let (pi )i eI be a 
family of objects in P. A product of (pi)i eI is exactly an infimum and a coproduct is 
exactly a supremum. A terminal object in the category P is a greatest element and 
an initial object is a least element. Note that the convention of drawing a product 
above the objects (as in Figure 5.1) clashes with the convention of Hasse diagrams 
(as, for example, in Figure 1.1), in which an object q of P is depicted above an 
object p if p < q.
As we have seen in Chapter 1, the value of infima and suprema depend on the 
ambient poset they are taken in. Thus, the example above illustrates clearly that 
products and coproducts depend not only on the objects in question, but also on the 
ambient category the product or coproduct is taken in.
Limits and Colimits
In our definition of limit and colimit below (Definition 5.32), the following formal 
notion of diagram plays a central role. We have been drawing diagrams informally 
throughout this book, but a diagram can itself be seen as a categorical object. We 
first give the formal definition.
Definition 5.31 Let C be a category and I a small category. An I-shaped diagram 
in C is a functor D: I ^ C.
As a motivating example for this formal definition, which can look surprising at 
first, let us see how we would describe the following diagram (Figure 5.2) according 
to Definition 5.31.
Figure 5.2 An example of a commutative diagram, formally.
Let I be the category defined by obI := {1, 2, 3, 4}, with the following five 
non-identity morphisms: x 12: 1 ^ 2, x 13: 1 ^ 3, x24: 2 ^ 4, x34: 3 ^ 4, 

5.3 Constructions inside Categories
179
and x14, which is by definition equal to both x24 ◦ x12 and x34 ◦ x13. This indeed 
defines a category I; associativity is trivial because there is no way to compose 
three non-identity morphisms in this category. Now, note that a functor D: I ^ C 
is essentially the same thing as a commutative square in C as depicted in Figure 
5.2, where we note that the value of Dx14 is determined by functoriality of D 
and the equalities x24 ◦ x12 = x14 = x34 ◦ x13 holding in I. Indeed, we have 
Dx14 = D (x24 ◦ x12) = Dx24 ◦ Dx12, and similarly Dx14 = Dx34 ◦ Dx13, showing 
that the diagram commutes.
We are now ready to define limits and colimits. Two instances of this very general 
concept that can be helpful to keep in mind while reading this definition are the 
following:
• Let I be a set and let I be the small category with ob I = I and with only identity 
morphisms, no morphisms between distinct objects - this is called the discrete 
category on I. An I-shaped diagram in C is just given by an I -indexed family of 
objects in C. A product as defined in Definition 5.26 is a limit of an I-shaped 
diagram and a coproduct is a colimit of an I-shaped diagram.
• Let J be the small category with two objects, 1 and 2, and two morphisms from 
1 to 2. A J-shaped diagram in a category C is a pair of objects in C with a 
parallel pair of morphisms between them. A colimit of a J-shaped diagram is a 
coequalizer as defined in Definition 5.24 and a limit of such a diagram is called 
an equalizer. Spelling out the definition of the latter, an equalizer of a pair of 
parallel arrows f1, f2: A ^ B in a category C is an object E and a morphism 
e: E ^ A such that f1 e = f 2 e and, for any morphism a: C ^ A such that 
f1 a = f 2a, there exists a unique a: C ^ E such that a = ea.
We now give the general definition of limit and colimit of a diagram in a category.
Definition 5.32 Let C be a category, let I be a small category, and let D: I ^ C 
be an I-shaped diagram in C.
A cone above the diagram D is an object A together with an ob I-indexed family 
of morphisms in C, (ai: A ^ Di)ieobI, such that, for any morphism x: i ^ j in 
I, we have (Dx) ◦ ai = aj . A limit of the diagram D is a universal cone above 
D. That is, a limit of D is an object L with an ob I-indexed family of morphisms, 
(ni: L ^ Di)ieobI, such that, for any cone (ai: A ^ Di)ieobI above D, there exists 
a unique morphism a: A ^ L in C such that ni a = ai for every i e ob I.
Similarly, a cone below, or also co-cone under, D is an object B together with 
morphisms bi: Di ^ B for every i e ob I such that, for any x: i ^ j in I, 
bj ◦Dx = bi. A colimit is a universal cone below D, that is, an object C together with 
morphisms ii: Di ^ C for every i e ob I such that, for any cone (bi: Di ^ B)i eob I 
below D, there exists a unique fi: C ^ B such that fiii = bi for every i e ob I.

180
5 Categorical Duality
We note here that a cone above a diagram D can be viewed more conceptually 
as a natural transformation from a constant functor A to D and a cone below D as 
a natural transformation from D to a constant functor (see Exercise 5.3.8 for more 
details). Using this observation, one may see a limit of D as a terminal object in a 
category of cones over D .
As we allowed the shape of the indexing category of the diagram to be any 
small category in Definition 5.31, the reader may reasonably worry that limits and 
colimits could have incredibly complicated shapes. While this is true, the relevant 
shapes that we need to consider in practice are rather limited, thanks to a few bits 
of general category theory that we will develop in Proposition 5.37. In particular, 
we will explain why it is enough for our purposes to understand the following three 
types of limits/colimits:
• product and coproduct;
• equalizer and coequalizer; and
• projective limit and directed colimit.
Projective Limits and Directed Colimits
The definitions of a projective limit and directed colimit use the notion of directed 
poset: Recall that a poset P is directed (sometimes called up-directed) if it is non­
empty and any pair of elements p, q has a common upper bound, and down-directed 
if Pop is up-directed (see p. 13).
Definition 5.33 A diagram D: I ^ C is directed if I is the category associated 
to an up-directed partial order and projective if I is the category associated to a 
down-directed partial order. A projective limit is a limit of a projective diagram; a 
directed colimit is a colimit of a directed diagram.4
Some sources are more liberal in their definitions of directed colimit and projec­
tive limit, by allowing the shape of the diagram I to be a directed preorder rather 
than partial order. However, this does not give a more general notion of limit, up 
to isomorphism (see Exercise 5.3.15). A seemingly even more general definition is 
that of a colimit with respect to a filtered category, that is, a non-empty category in 
which any pair of objects admits a morphism to a common object and any parallel 
pair of morphisms has a cone under it. Surprisingly, colimits with respect to filtered 
categories are no more general than colimits with respect to directed posets; the 
proof of this fact is beyond the scope of this book, see, for example, Adamek and 
Rosicky (1994, Theorem 1.5).
4 In algebraic literature, what we call “directed colimit” is sometimes called “direct limit” or “inductive limit.” 
We avoid this terminology because we prefer to emphasize “co-” in the name of this concept, to signal the 
fact that this generalizes a “coproduct.” On the other hand, in category theory, what we call “projective limit” 
is sometimes called “down-directed limit” or “codirected limit.”

5.3 Constructions inside Categories
181
In a concrete category, projective limits and directed colimits of finite-like objects 
are often particularly interesting to look at as they tend to inherit some of the 
properties of finite-like objects. To give one pertinent class of examples, in the 
category of algebras of a finitary variety (see Exercise 5.2.11), a reasonable notion 
of “finite-like object” is that of a finitely presented algebra. Here, an algebra is called 
finitely presented if it is a quotient of a finitely generated free algebra by a finitely 
generated congruence. Then, every algebra is a directed colimit of finitely presented 
algebras. This is essentially the defining property of what is known as an N0- 
accessible category in the literature, see for example Adamek and Rosicky (1994).
In the particular case of distributive lattices, the situation simplifies further since 
any finitely presented distributive lattice is in fact finite, as follows immediately 
from the fact that free distributive lattices are finite. Thus, every distributive lattice 
is a directed colimit of finite distributive lattices. We now sketch a direct proof of 
the latter fact, which should give an impression of the basics of the much more 
general theory.
Example 5.34 Let L be a distributive lattice. Let Subf (L) denote the poset of 
finite sublattices of L, which is up-directed, because if F and G are finite sublattices 
of L, then they are both contained in the sublattice generated by F U G, which 
is still finite. Let D : Subf (L) ^ DL be the diagram defined on objects by 
D (F) := F and sending any sublattice inclusion F c G to the homomorphism 
D (F c G) := iF,G: F ^ G. Note that a co-cone under this diagram D is given by 
the inclusion maps IF : F ^ L. Indeed, this is a colimit: If (jF : F ^ M)F eSubf (L) 
is another co-cone under this diagram, then a unique a: L ^ M may be defined by 
sending a e L to the element jLa (a), where La denotes the (at most three-element) 
sublattice of L generated by a . To prove that a is indeed a homomorphism, one 
may use the fact that any pair of elements generates a finite sublattice of L, and that 
the jF form a co-cone.
Generalizing this example slightly, let P be a directed subset of Subf (L) .One 
may then prove that the union of the finite sublattices in P is a sublattice L' of L and 
that L' is the directed colimit of the restricted diagram D |P. The directed colimit 
of P is (isomorphic to) L itself if, and only if, every a e L lies in some sublattice in 
the collection P. This characterization of directed colimits will be used in Section 
7.3 to give a concrete definition of bifinite distributive lattices.
For an example of the importance of projective limits of finite objects, it is 
interesting to move to the topological side of Priestley duality. Indeed, Priestley 
spaces may be characterized as the profinite posets, in a sense that we make precise 
now in the following example.
Example 5.35 In the category TopOrd of ordered topological spaces with con­
tinuous order-preserving functions, we have a full subcategory isomorphic to the 

182
5 Categorical Duality
category of finite posets. Indeed, for every finite poset P, we have an ordered topo­
logical space, that we still denote by P, by equipping P with the discrete topology. 
With this topology, P is a finite Priestley space, and any order-preserving function 
between finite posets is continuous for the discrete topology, as we saw in Exer­
cise 5.2.1. We denote this category of finite posets with the discrete topology by 
TopOrdf, d . We now use Example 5.34 and Priestley duality to show that every 
Priestley space is a projective limit of finite Priestley spaces.
Let X be a Priestley space and let L be its dual distributive lattice. Since L is 
the colimit of the diagram D: Subf (L) ^ DL given in Example 5.34, it follows 
by a purely formal argument, since DLop is equivalent to Priestley, that X is the 
limit of the diagram D': (Subf (L))op ^ Priestley that sends a finite sublattice F 
of L to the Priestley dual space of F. We may give a more direct description of 
the diagram D' using the sublattice-quotient duality of Section 4.2: The domain of 
D' is (isomorphic to) the poset of compatible preorders < on X for which X/< is 
finite and it sends such a preorder < to the finite Priestley space X/<. Since finite 
Priestley spaces always have discrete topology, an equivalent way to describe D' is 
as the diagram of all continuous surjective maps X P where P is a finite poset 
and X is the limit of this diagram in the category TopOrd. Also, since any limit of 
finite posets is a Priestley space, we conclude that Priestley spaces exactly coincide 
with the projective limits of finite posets in TopOrd.
As a special case, Boolean spaces exactly coincide with the projective limits of 
finite sets with the discrete topology in Top, and are therefore sometimes called 
profinite sets. The “profinite” point of view on Stone-Priestley duality will play an 
important role in Chapter 8, where it is linked to the theory of profinite monoids. 
The categorical definition of profinite monoids is analogous to the ones in this 
example: The category of finite monoids is isomorphic to a full subcategory of the 
category TopMon topological monoids (Example 5.27) by equipping each finite 
monoid with the discrete topology. A profinite monoid is then an object of TopMon 
that is a projective limit of finite monoids. Further, see Definition 8.30.
Remark 5.36 We remark that the arguments given in Example 5.35 can be turned 
around to give a categorical proof of the Priestley duality theorem itself from 
Birkhoff duality for finite distributive lattices, as we now outline, without giving 
all the details. Example 5.34 shows, in categorical terms, that the category DL 
may be obtained by taking directed colimits of objects from the category DLf . 
Therefore, its (formal) dual category DLop can be described by taking projective 
limits of the category (DLf)op. The latter category is equivalent to the category 
of finite posets, by Birkhoff duality, and this is isomorphic to the full subcategory 
TopOrdf,d of TopOrd on the finite posets with the discrete topology. It follows 

5.3 Constructions inside Categories
183
that DLop is equivalent to the closure of TopOrdf,d under projective limits. This 
gives a “formal” version of Priestley duality.
Note that we have not used any choice principles to deduce this duality, only 
Birkhoff duality and abstract category theory. In this point of view on Priestley 
duality, the choice principle needs to be used only in the very last step, namely 
to prove that the closure under projective limits of TopOrd f, d is indeed the same 
as the category of Priestley spaces. This requires in particular showing that any 
product of finite spaces is compact, which is a “finite” Tychonoff theorem, and is in 
fact equivalent over choice-free set theory to the Stone prime ideal theorem.
To understand the importance of products, equalizers, and projective limits for 
understanding general limits, we now first look at a special, finite case, where just 
binary products and equalizers will suffice. A generalization of this result, also 
involving projective limits, will be proved after that, in Proposition 5.37.
Let C be a category and consider two morphisms in C, f1: A 1 ^ B and f2: A2 ^ 
B, with a common codomain B, as in the following diagram.
A1
f1
A 2 
------------> B.
f2
Such a pair of morphisms is called a co-span in category theory, and a limit of 
such a diagram is called a pullback; the dual notions are called span and pushout, 
respectively.
Now, assume that binary products and equalizers exist in C. We show that the 
limit (pullback) of any such co-span can be constructed in C, as follows. First, 
let P = A 1 X A2 be the product of A 1 and A2 in C, and consider two morphisms 
g1, g2: P ^ B defined by gi := fini for i = 1,2, where ni: P ^ Ai is the projection 
morphism. Now, let e: E ^ P be the equalizer of g1 and g2. We may now prove 
that the pair of maps p 1, p2: E ^ Ai, defined by pi := nie for i = 1,2, is a limit 
cone for the co-span. Indeed, using the above definitions, we have that
f1 p 1 = f1 n1 e = g1 e = g2 e = f2 n2 e = f2 p 2,
so that the pi form a cone over the diagram. Furthermore, if a 1: A ^ A 1 and 
a2: A ^ A2 are another cone over the same diagram, then, writing a for the 
morphism {a 1, a2>: A ^ A 1 X A2, we get
g1 a = f1 n1 a = f1 a 1 = f2 a 2 = f2 n2 a = g2 a, 

184
5 Categorical Duality
using the definitions and the fact that the ai form a cone. Thus, there exists a unique 
a: A ^ E such that ea = a. It follows that ai = ni a = ni ea = pi a for i = 1,2. Also, 
such a is unique: If a' is such that a 1 = p 1 a' and a2 = p2athen ni ea' = pia' = ai 
for i = 1,2, so that ea' = ea by the universal property of the product P. Therefore, 
a' = a since equalizers are monomorphisms (see Exercise 5.3.5).
A generalization of the above construction allows one to show that, if all equaliz­
ers and all set-sized products exist in a category, then the limit of any small diagram 
exists. We prove this fact now and further connect it to the construction of projective 
limits in a category.
Proposition 5.37 Let C be a category. The following are equivalent:
(i) 
Any small diagram has a limit in C.
(ii) 
Any finite diagram has a limit in C, and any projective diagram has a limit
in C.
(iii) 
All equalizers and small products exist in C.
Proof It is trivial that the first item implies the second.
For the implication (ii) ^ (iii), since an equalizer is the limit of a finite diagram, 
it suffices to prove that any set-sized product exists in C. Let (Ai)ieI be a family 
of objects of C indexed by a set I . We will show that a product of the Ai can be 
constructed as a limit of a diagram B of shape Pf (I)op, the poset of finite subsets 
of I, ordered by reverse inclusion - this is clearly a down-directed poset, since it is 
a meet-semilattice, so the limit of B will exist by assumption. For each F e Pf (I), 
let B(F) be a product of the finite set of objects {Ai | i e F}, which exists in C 
by assumption, and, for i e F, denote by nF : B (F) ^ Ai the projection of this 
cone on Ai . In the special case where F is a singleton, we choose B({i}) = Ai, 
which is the product of the single object Ai. If F c G, then we have a cone with 
summit B (G) over { Ai | i e F}, since for each i e F,wehavei e G, so we have 
nG: B(G) ^ Ai. Let fiF,G: B(G) ^ B(F) be the unique factorization of this 
cone, so that for every i e F, nFPf,G = nG, and define B(G 2 F) := fiF,G. 
Now, let L be a limit of the diagram B with AF : L ^ B(F) the legs of the limit 
cone for each finite F c I .In particular, for every i e I, write ni for the leg 
A {i}: L ^ B ({i}) = Ai. We claim that ni: L ^ Ai gives a product of the Ai. 
Indeed, if f i: A ^ Ai is any family of morphisms, then we may construct, for each 
finite subset F c I, a unique morphism f F : A ^ B (F) such that nF f F = f i for 
each i e F, using the universal property of the product B(F) . The morphisms fF 
give a cone over the diagram B, because for any morphism G 2 F in Pf (I)op, we 
have nF Pf,g f g = nG f g = f i = nF f f for every i e F, so that Pf, g f g = f f , 
using the uniqueness part of the universal property of the product B(F). The unique 
factorization a: A ^ L satisfies ni a = f i, as required.

5.3 Constructions inside Categories
185
Finally, we sketch a proof that (iii) implies (i); we emphasize that this is an infinite 
generalization of the construction of pullbacks from binary products and equalizers, 
described just above this proposition. Let D: I ^ C be a diagram indexed by a 
small category I. Observe that giving a cone ai: A -^ Di over the diagram is the 
same thing as giving a single morphism a: A fl i eob(I) Di with the property 
that, for all morphisms f: i ^ j in I, A(f) ◦ ai = aj. The latter property, in turn, 
can be more synthetically expressed as follows. Write P for the product n ieot> I Di, 
with projection maps ni: P ^ Di for every object i of I, and write M for the 
product nf emorI D(cod( f)), with projection maps pf : M ^ D(cod( f)) for every 
morphism f of I. Now, the crucial observation is that a: A ^ P is a cone exactly 
if d ◦ a = e ◦ a, where d, e: P ^ Q are two morphisms of C defined, respectively, 
by requiring that for every morphism f ofI:
pf ◦ d := ncod(f), pf ◦ e := D(f) ◦ ndomf).
From this observation, it follows that the equalizer of the parallel pair of maps d, e 
is a limit cone of the diagram D. For more information, we refer to, for instance, 
Adamek et al. (1990, Theorem 12.3) or Leinster (2014, Proposition 5.1.26). 
□
A category is called complete if it satisfies the equivalent properties in Proposition 
5.37 and co-complete if Cop is complete. Observe that the dual of Proposition 5.37 
says that a category has all small colimits if, and only if, all coequalizers and set­
sized coproducts exist, which happens if, and only if, all finite colimits and directed 
colimits exist. Note also that, if we specialize to the case of a thin category, then 
the equivalence of (i) and (ii) in Proposition 5.37 (and its dual version) reduce to 
a familiar characterization of complete lattices: A poset is a complete lattice if, 
and only if, all finite sets and all up-directed sets have a supremum. This fact was 
already stated in Exercise 1.2.12 and also plays an important role in the background 
in domain theory (Chapter 7).
Exercises for Section 5.3
Exercise 5.3.1 Let f: L ^ M be a homomorphism between distributive lattices.
(a) 
Prove that f is a monomorphism if, and only if, f is injective.
(b) 
Prove that if f is surjective, then f is an epimorphism.
(c) 
Consider an order-embedding e of the three-element chain 3 into the four- 
element Boolean algebra, 2 x 2, which is clearly not surjective. Prove that e 
is an epimorphism in the category of distributive lattices.
(d) 
Conclude that in DL there exist morphisms which are both mono and epi, but 
not iso.
(e) 
Also, prove that e is a non-regular monomorphism in DL.

186
5 Categorical Duality
Exercise 5.3.2 This exercise examines epimorphisms in categories of topological 
spaces; note in particular that the notion of “epimorphism” is not stable under taking 
full subcategories.
(a) 
Prove that in the category Top, any epimorphism is surjective.
(b) 
Prove that the epimorphisms in the category of Hausdorff topological spaces 
are exactly the continuous functions whose image is dense in the codomain.
(c) 
Deduce from the previous item that in Priestley, the epimorphisms are exactly 
the surjective continuous functions.
Exercise 5.3.3 This exercise characterizes epimorphisms in the categories DL 
and BA.
(a) 
Prove that in BA, the epimorphisms are exactly the surjective homomor­
phisms. Hint. One direction always holds. For the other, use Stone duality and 
the fact that the dual of a surjective homomorphism is injective.
(b) 
Let L be a distributive lattice and let eL: L ^ L- be its Boolean envelope 
(Definition 1.19). Prove that eL is an epimorphism in DL.
(c) 
Prove that in DL, a homomorphism f: L ^ M is an epimorphism if, and 
only if, the unique extension eM ◦ f: L- ^ M- of eM ◦ f: L ^ M- is 
surjective.
Exercise 5.3.4 Let f: A ^ B be a morphism in a category C.
(a) 
Prove that if f is an isomorphism, then f is both a monomorphism and an 
epimorphism.
(b) 
Prove that if f has a left inverse (i.e., there exists g: B ^ A such that 
gf = 1A), then f is a monomorphism.
(c) 
Formulate the dual statement of (b) and conclude that it is true.
(d) 
Consider the category with one object (i.e., a monoid), a countable set of 
morphisms {f n : n e N}, composition given by f n ◦ f m := f n+m, and identity 
f0. Prove that, for every n > 1, fn is mono and epi, but not iso.
Exercise 5.3.5 Prove that any equalizer is a monomorphism and any coequalizer 
is an epimorphism.
Exercise 5.3.6 Suppose that q 1: A ^ Q1 and q2: A ^ Q2 are both coequalizers 
for the same pair of maps p 1, p2: C ^ A.
(a) 
Show that there exist morphisms a1: Q 1 ^ Q2 and a2: Q2 ^ Q 1 such that 
a1 q 1 = q2 and a2 q2 = q 1.
(b) 
Prove that a2a1 = idQ1 and a1 a2 = idQ2. Hint. Show first that a2a1 is a 
factorization of q 1 through itself, that is, that a2a1 q1 = q 1, and then use the 
uniqueness of a in the definition of coequalizers.

5.3 Constructions inside Categories
187
Exercise 5.3.7 This exercise outlines a proof that the regular epimorphisms in 
Lat are exactly the surjective homomorphisms. To readers with more knowledge 
of universal algebra, it should be clear that the same argument applies in any 
category whose objects are the algebras in a variety and whose morphisms are the 
homomorphisms.
(a) 
Prove that an equivalence relation $ on a lattice A is a congruence if, and only 
if, $ is a (bounded) sublattice of the product algebra A x A.
(b) 
Let p 1, p2: C ^ A be a pair of lattice homomorphisms. Define $ to be the 
smallest congruence on A which contains (p 1 (c), p2(c)) for every c e C. 
Prove that the quotient q: A 
A/$ is a coequalizer of (p 1, p2). Conclude
that regular epimorphisms are surjective.
(c) 
Let $ be a congruence on a lattice L. Prove that the quotient homomorphism 
q: A A/$ is the coequalizer of the pair of maps p 1, p2: $ ^ A, where pi 
is the projection onto the ith coordinate.
(d) 
Conclude that a lattice homomorphism is a regular epimorphism if, and only 
if, it is surjective.
Exercise 5.3.8 Let C be a category and let I be a small category.
(a) 
Show that, for any object C e C, the functor AC, defined by ACi = C for every 
object and ACx = 1C for every morphism, is a diagram, called the I-shaped 
constant diagram at C.
(b) 
Let D be a diagram. Show that a cone above D is essentially the same thing 
as a natural transformation p: AC ^ D for some object C of C.
(c) 
Reformulate the definition of limit purely in terms of natural transformations, 
without ever referring to specific objects and morphisms in I and C.
(d) 
Dualize this exercise for cones below and colimits.
Exercise 5.3.9 Prove that the Cartesian product of posets/lattices/distributive lat­
tices is a product in the categorical sense of Definition 5.26.
Exercise 5.3.10 Recall from Exercise 3.2.6 that the Cartesian product ofa family 
of Priestley spaces, defined by equipping the product set with the product topology 
and the pointwise partial order, is again a Priestley space. Conclude that products 
exist in the category of Priestley spaces.
Exercise 5.3.11 Let (Xi)ieI be a collection of Priestley spaces. For each i e I, 
write Li for the lattice of clopen down-sets of Xi. Prove that the Priestley dual space 
X of the product ieI Li is the coproduct ieI Xi in Priestley spaces. Show that 
there is an injective function from the disjoint union of the sets Xi to X, which is in 
general not surjective.

188
5 Categorical Duality
Exercise 5.3.12 LetF : C ^ D be a functor and suppose that F has a right adjoint. 
Prove that F preserves any colimit that exists in C, that is, if D: I ^ C is a diagram 
in C and C is a colimit of D with a co-cone given by 2i: D(i) ^ C for each object 
i of I, then the image of this co-cone under F, F2i: FD(i) ^ FC, gives a colimit 
of the diagram F ◦ D: I ^ D.
Exercise 5.3.13 This exercise elaborates on the comment made in Example 4.6 
to the effect that the two-element poset (2, <) appearing in the concrete incarnation 
ofFDL(V) derived in Section 4.1 is the poset dual to 3, the three-element lattice.
(a) 
Prove that 3 is a free distributive lattice over {p} by exhibiting a universal 
arrow.
(b) 
Prove that for any set V we have FDL(V) = XveV FDL({v})•
(c) 
Conclude, via duality, that the Priestley dual of FDL(V) is the product space 
(2, <, 6)v, where 6 is the discrete topology on 2, see Proposition 4.8.
Exercise 5.3.14 LetC be a category andletIbe a small category. Denote by [I, C] 
the category of I-shaped diagrams in C, with natural transformations between them.
(a) 
Show that there is a functor A: C ^ [I, C] which sends any object C of C to 
the constant diagram AC (see Exercise 5.3.8) and a morphism f: C ^ C' to 
the natural transformation AC ^ AC' that is f at every component.
(b) 
Suppose that A has a left adjoint, L: [I, C] ^ C. Prove that, for any diagram 
D e [I, C], L(D) is a colimit ofD.
(c) 
Similarly, prove that if R is a right adjoint for A, then R(D) is a limit of D , 
for any I-shaped diagram D in C.
Exercise 5.3.15 Let I be a preordered set that is directed, that is, any finite subset 
of I has an upper bound. Let n: I ^ J be the poset reflection of I (see Exercise 
1.1.5). Let D: I ^ C be a diagram.
(a) 
Prove that J is directed.
(b) 
Prove that there is a diagram D': J ^ C such that D'(n(i)) is isomorphic in 
C to D(i) for every i e I.
(c) 
Suppose that D has a colimit in C. Prove that the same object gives a colimit 
of D' in C.
5.4 Priestley Duality Categorically
In this section, we apply the categorical point of view introduced in this chapter 
to Priestley duality. While the general language of category theory is useful for 
expressing our duality theorem, we will also require some knowledge that seems to 

5.4 Priestley Duality Categorically
189
be rather specific to Priestley duality. In particular, in this section, we further elabo­
rate on what the correspondences between monomorphisms and epimorphisms on 
either side of the duality concretely look like in the case of Priestley duality. This 
yields connections between quotients and sublattices, and between subspaces and 
quotient lattices, which are crucial to some of the applications in Chapters 7 and 8 
of this book. Further, we show how Priestley duality can be used to easily describe 
free distributive lattices.
Priestley’s Dual 2-Equivalence
Recall from Chapter 3 that, to any Priestley space X, we associated a distributive lat­
tice ClpD(X) of clopen down-sets ofX and to any continuous order-preserving map 
f: X ^ Y, the distributive lattice homomorphism f -1: ClpD(Y) ^ ClpD(X). In 
the reverse direction, if L is a distributive lattice, we associate to it the Priestley space 
XL (Definition 3.21), and if h: M ^ L is a distributive lattice homomorphism, 
then Proposition 3.27 showed that there is a unique continuous map f: XL ^ XM 
with the property that h( a) = f -1 (a) for every a e M .In this section, we will write 
X(h) for this unique map f.
With the categorical language developed in this chapter, we can now properly 
state and prove Priestley’s duality theorem.
Theorem 5.38 The assignments L ^ XL and (h: M ^ L) ^ (X (h): XL ^ 
XM) constitute a contravariant functor, X: DL ^ Priestley, and the pair (ClpD, X) 
is a contravariant equivalence of categories.
Proof To see that X is a functor, let k: N ^ M and h: M ^ L be morphisms in 
DL. Note that X (k) ◦ X (h) is a Priestley morphism for which it holds that, for any 
a e N, (X(k) ◦ X(h))-1 (a) = X(h)-1 (X(k)-1 (a)) = X(h)-1 (k(a)) = h(k(a)). 
By the uniqueness of X(h ◦ k) , we must have X(h ◦ k) = X(k) ◦ X (h). The fact 
that X (1L ) = 1XL for any distributive lattice L can be proved similarly.
For any distributive lattice L, let aL: L ^ ClpD(XL) be the homomorphism 
defined by a e L ^ a e ClpD(XL). For any Priestley space X, we recall the 
definition of an order-homeomorphism fiX: X ^ XClpD(L) from Proposition 3.26; 
note that, compared to the notation of Definition 5.12, we here use the notation fi 
for the inverse map. For any x e X, fi(x) is defined as the point associated to the 
prime filter B(x) = {K e ClpD(L) | x e K}, the clopen-down-set neighborhoods 
of x. To see that a: 1DL ^ ClpD ◦ X is a natural transformation, let h: M ^ L be a 
homomorphism between distributive lattices. Then, by definition of X , we have, for 
any a e M, that X(h)-1 (a) = h(a), showing the naturality of a. Finally, to see that 
fi: 1priestiey ^ X ◦ ClpD is a natural transformation, let f: X ^ Y be a continuous 
order-preserving function. We want to show that the following diagram commutes:

190
5 Categorical Duality
f
X
XClpD(X)
X (f-1)
-> Y
JfY
XClpD(Y).
Let x e X be arbitrary. Let us write F1 and F2 for the prime filters of ClpD(Y) that 
correspond to the two points X(f-1)(fiX(x)) and /3Y(f (x)), respectively. We need 
to show that F1 = F2. Recall from Exercise 3.2.11 that, for any homomorphism 
h: M ^ L, the prime filter corresponding to X(h)(x) is h-1 (Fx). Thus, for any 
K e ClpD(Y), we have
K e Fi <> f-1 (K) e px (x) <> x e f-1 (K) <> f (x) e K
which is equivalent to K e F2. 
□
We now also prove that this duality has a further property, which, in categorical 
terms, makes it an equivalence enriched over partially ordered sets. The general 
definition of enriched equivalence is beyond the scope of this book; see, for example, 
Hofmann and Stubbe (2011) and Chikhladze et al. (2015) for more on the relation­
ship between topological dualities and enriched categories, and the recent work 
Hofmann and Nora (2023) which develops Priestley duality in a quantale-enriched 
setting.
In our categories DL and Priestley, the enriched structure amounts to the fact 
that the sets of morphisms are in fact posets. That is, if L and M are distributive 
lattices, then the set HomDL (L, M) is partially ordered by the pointwise order: For 
a parallel pair of homomorphisms h, h': L ^ M, we say h < h' if h (a) <M h' (a) 
for every a e L. Similarly, for any Priestley spaces X and Y, HomPriestley(X, Y) is 
also ordered pointwise. The fact that Priestley duality is poset-enriched now boils 
down to the fact that the equivalence functors are anti-order-isomorphisms between 
the Hom-posets, as we show now.
Proposition 5.39 For any distributive lattices L, M, the function
X: HomDL (M, L) ^ Hompriestiey (Xl, Xm )
is an anti-isomorphism of partial orders.
That is, for any parallel pair of homomorphisms h, h': M ^ L, we have h < h' 
if, and only if, X (h') < X (h), where the symbol < denotes the pointwise order 
between lattice homomorphisms and between Priestley morphisms, respectively.
We note that a similar result to this proposition, in the context of duality for 
relations and finite-meet-preserving functions, was already shown in the proof of 
Proposition 4.39; compare in particular equation (4.12) in that proof.

5.4 Priestley Duality Categorically
191
Proof Recall (see Exercise 3.2.11) that X(h) sends any point x e XL to the point 
X(h)(x) with associated prime filter FX(h)(x) := h-1 (Fx). Suppose that h < h' in 
the pointwise order and let x e XL. For any a e M, h (a) e Fx implies h' (a) e Fx, 
since Fx is an up-set. Hence, FX(h)(x) c FX(h/)(x), which means by definition of 
the order on Priestley spaces that X(h')(x) < X(h)(x). For the converse, suppose 
that h h' in the pointwise order. Pick a e M such that h(a) h(a'). By the 
distributive prime filter-ideal theorem (Theorem 3.10), pick a prime filter Fx in L 
such that h (a) e Fx and h' (a) £ Fx. For the corresponding point x e XL, we have 
h-1 (Fx) (h')-1 (Fx). Thus, X(h')(x) £ X(h)(x). 
□
We note in particular (see Exercise 5.4.1) that it follows from Proposition 5.39 
that, for a pair of homomorphisms between distributive lattices f: L M: g, 
(f, g) is an adjoint pair if, and only if, the pair X(f): XM 
XL : X(g) is an
adjoint pair between the underlying posets of the dual Priestley spaces, where X(f) 
is the lower adjoint and X (g) is the upper adjoint. Essentially this fact (phrased in 
the setting of spectral spaces) will be crucial in Section 7.3.
A Categorical Perspective on Subs and Quotients
Theorem 5.40 Let L be a distributive lattice and XL its dual space. The complete 
lattice of sublattices of L is anti-isomorphic to the complete lattice of quotient 
spaces of XL and the complete lattice of quotients of L is anti-isomorphic to the 
complete lattice of closed subspaces of XL .
Proof By Proposition 3.28, Priestley duality restricts to a dual equivalence be­
tween injective morphism into L and surjective morphisms from XL and also be­
tween surjective homomorphisms out of L and embeddings into XL . These lattices 
are concretely realized as stated in the theorem. To see that these are order-reversing 
bijections, see Proposition 4.26 and Proposition 4.15. 
□
A Categorical Perspective on Operators
We revisit the duality for unary operators described in Section 4.3, giving in par­
ticular the proof of the generalized duality Theorem 4.41, for which we now have 
the required terminology in place. You are invited to fill in some small details in 
Exercise 5.4.2.
Proof of Theorem 4.41 Let us write DLm for the category of distributive lattices 
with finite-meet-preserving functions and PriestleyR? for the category of Priestley 
spaces with upward-compatible relations; the latter is indeed a category under 
relational composition, with the identity morphism on a Priestley space X given 

192
5 Categorical Duality
by the upward Priestley compatible relation > c X x X. We define a functor 
Pa : PriestleyR? ^ DLm by sending an object X to the lattice of clopen down-sets of 
X, and sending an upward Priestley compatible relation R c XxY to the finite-meet­
preserving function P□ (R) := VR-1[-]: ClpD(Y) ^ ClpD(X). It is straightforward 
to verify that Pa is a well-defined functor. Moreover, Proposition 4.39 shows that 
Pa is full and faithful. Finally, Pa is essentially surjective because any distributive 
lattice L is isomorphic (also in DLm) to ClpD (X) where X is its dual Priestley 
space. It follows from Theorem 5.13 that Pa is part of a dual equivalence. □
We also show how a duality theorem for finite-join-preserving functions can be 
deduced from this in a purely abstract way.
Theorem 5.41 The category of distributive lattices with finite-join-preserving 
functions is dually equivalent to the category of Priestley spaces with downward 
Priestley compatible relations.
Proof The category DLj of distributive lattices with finite-join-preserving func­
tions is isomorphic to the category of distributive lattices with finite-meet-preserving 
functions, via the isomorphism which sends a distributive lattice L to its opposite 
Lop, and a morphism to itself. Similarly, the category of Priestley spaces with 
downward Priestley compatible relations is isomorphic to the category of Priestley 
spaces with upward Priestley compatible relations, via the isomorphism which sends 
a Priestley space X to the space with the same topology, and the opposite order. 
The claimed dual equivalence is obtained as the conjugate of the dual equivalence 
of Theorem 4.41 under these isomorphisms. 
□
Since the proof of Theorem 5.41 is very abstract, we also give a more concrete 
description of the action of the dual equivalence functor, P: DLj ^ PriestleyR., 
on morphisms. Fix two Priestley spaces X and Y . The bijection
P* (X, Y): PriestleyR (X, Y) ^ DLj(ClpD(Y), ClpD(X))
may be defined as a composition of four bijections:
PriestleyRi (X, Y) A PriestleyRr (Xop, Yop) 
(5.1)
4.41
-^ DLm(ClpU(Y), ClpU(X))
A DLj (ClpU(Y)op, ClpU(X)op)
c-^ DLj(ClpD(Y), ClpD(X)).
Here, the first and third bijections are identity functions, using the obvious facts 
that a downward compatible relation from X to Y is the same as an upward 

5.4 Priestley Duality Categorically
193
Priestley compatible relation from the opposite Priestley space Xop to Yop, and 
that a finite-meet-preserving function from a lattice L to a lattice M is the same as 
a finite-join-preserving function from Lop to Mop. The second bijection is given by 
the dual equivalence of Theorem 4.41, modulo the fact that a clopen down-set of the 
Priestley space Xop is the same thing as a clopen up-set of X, and similarly for Y. 
The fourth and last bijection is “conjugation by complementation:” c sends a finite- 
join-preserving function h: ClpU(Y)op ^ ClpU(X)op to the finite-join-preserving 
function c(h): ClpD(Y) ^ ClpD(X), defined by c(h)(K) := X-h(Y-K). Un­
raveling the definitions, the bijection P(X, Y) can be seen to send R to 3R-1, as 
defined in (4.13) at the end of Section 4.3.
Example 5.42 This example gives a functorial point of view on unary modal 
operators on a distributive lattice, which we studied in Section 4.3. Recall that 
a meet-semilattice is a poset (M, <) in which every finite set has an infimum; 
equivalently, a meet-semilattice is acommutative monoid (M, A, T) in which a A a = 
a for all a e M. Denote by SL the category of meet-semilattices with functions 
preserving all finite meets. For any meet-semilattice M, we make a set of symbols 
□ M = {□ a | a e M} and define the distributive lattice
Fa (M) := Fdl(□ MWm,
where we recall from Section 4.1 that FDL(V) denotes the free distributive lattice 
over a set V and we define ftM to be the congruence generated by the set of pairs of 
the form
(□ (/\ G) ,/\{□ a | a e G}) ,
where G ranges over the finite subsets of M. Since this equivalence relation ftM 
exactly says that “box preserves finite meets,” the lattice Fa (M) can be thought of 
as the lattice generated by the act of “freely adding one layer of a box operation.” 
The function a ^ [□ a]&M is an order embedding that preserves finite meets (see 
Exercise 5.4.3).
The constructor Fa may be extended to a functor from the category of meet- 
semilattices to the category of distributive lattices, in such a way that, for any finite- 
meet-preserving function h: M ^ M' of meet-semilattices, we have Fn h([□ a]&M) = 
[□ h(a)]#M, (see Exercise 5.4.3). Pre-composing Fa with the forgetful functor from 
distributive lattices to meet-semilattices, we obtain a functor Ta from DL to itself. 
This functor Tn is closely related to the category of positive n-modal algebras, 
where a positive □ -modal algebra is defined as a pair (L, □), with L a distributive 
lattice and □: L ^ L a finite-meet-preserving function. Indeed, there is a one-to- 
one correspondence between □ operations on a distributive lattice L and so-called 
Tn-algebra structures based on L (see Exercise 5.4.3).

194
5 Categorical Duality
The functor Ta : DL ^ DL is one of the program constructors in Abramsky’s 
program logic, which we will study in Chapter 7. It is dual to the Vietoris space 
construction of topology, and is known in domain theory as the Smyth powerdomain, 
see also Definition 6.21, Chapter 6. For a survey of dualities for modal logics in 
a general categorical setting, and the related development of coalgebraic modal 
logic, see Venema (2007).
Exercises for Section 5.4
Exercise 5.4.1 Prove that, for any pair of homomorphisms between distributive 
lattices f: L M: g, (f, g) is an adjoint pair if, and only if, the pair X (f): XM 
XL : X (g ) is an adjoint pair between the underlying posets of the dual Priestley 
spaces, where X (f) is the lower adjoint and X (g) is the upper adjoint. Hint. 
Combine Proposition 5.39 and Exercise 1.1.8 of Chapter 1.
Exercise 5.4.2 This exercise asks you to fill in a few details of the proof of 
Theorem 4.41.
(a) 
Prove that PriestleyR?, the category of Priestley spaces with upward Priestley
compatible relations, is indeed a category.
(b) 
Prove that Pa as defined in the proof of Theorem 4.41 is indeed a well-defined 
functor.
Exercise 5.4.3 For a meet-semilattice M, consider the lattice Fa (M) defined in 
Example 5.42. For every a e M, define e(m) := [□ m]^M.
(a) 
Prove that, for any distributive lattice L and any finite-meet-preserving func­
tion f: M ^ L, there exists a unique DL homomorphism f: Fa (M) ^ L 
such that f ◦ e = f.
(b) 
Prove that e is finite-meet-preserving, injective, and that the image of e gen­
erates Fn (M).
(c) 
Prove that the object assignment Fa extends to a functor SL ^ DL, which is 
left adjoint to the forgetful functor U: DL ^ SL that sends any distributive 
lattice (L, T, ±, A, v) to its meet-semilattice reduct, (L, T, A), and any lattice 
homomorphism to itself, now viewed as a meet-semilattice homomorphism.
Note. It is a general fact in category theory that “universal arrows yield 
left adjoints,” see, for example, Borceux (1994, Section 3.1) for the general 
theory, of which you only prove a specific instance here.
For a functor5 T from C to itself, an algebra for the functor T, or simply T -algebra, 
is defined as a pair (A, h), where A is an object in C and h: T(A) ^ A is a morphism
5 There is a related, but different, notion of algebra for a monad, which we do not treat in this book (at least not 
explicitly).

5.4 Priestley Duality Categorically
195
in C. A morphism of T-algebras, g: (A, h) ^ (A', h'), is defined to be a morphism 
g: A ^ A' in C so that g ◦ h = h' ◦ T(g); that is, the following diagram commutes:
T(g)
T(A)-------------- > T(A')
h 
h h
g g ”
A-------------------- > A
Recall that a positive □ -modal algebra is a pair (A, □) where A is a distributive 
lattice and □: A ^ A preserves finite meets. Write Ta for the composite functor 
U F
DL ^ SL ^ DL. The rest ofthis exercise makes precise the idea that Ta freely adds 
one layer of the unary modal □ operator. For further details, see Abramsky (1988), 
Ghilardi (1995), and Bezhanishvili and Kurz (2007). The analogous construction 
for a binary implication-type operator is discussed and applied in Section 6.4.
(d) 
Show that the category of Ta-algebras is isomorphic to the category of positive 
□-modal algebras.
We will now construct the free positive n-modal algebra over a distributive lattice 
by iterated application of the functor F : = 1DL+Ta. Here, 1DL is the identity functor 
and + is the coproduct computed in DL; more explictly, for any distributive lattice 
L, F(L) is the lattice L + Tn (L), and if h: L ^ M is a lattice homomorphism, then 
F(h): L + Ta(L) ^ M + Ta(M) is given by h + Ta(h).
Let L be a distributive lattice, and consider the countable chain of distributive 
lattices
_eo_ 
_ __  e1 _ 
_ ____ _ e2
L ^ L + Tq(L) ^ L + T□(L + Tq(L)) ^ • • • ,
where the first embedding eo is the inclusion of L in the coproduct L + (-) and the 
subsequent embeddings are defined by en+1 := eo + Tn(en).
(e) 
Show that the colimit of the chain is the free positive n-modal algebra over L. 
(f) Show that, when viewing the chain as a tower of sublattices of the free positive 
□-modal algebra over L, for each n > 0, the nth lattice consists precisely of the 
elements that can be described by a term in which the maximum nesting depth 
of the operation □ is less than or equal to n.

6
Omega-Point Duality
In this chapter, we consider a Stone-type duality that applies to spaces more general 
than the ones dual to distributive lattices. We begin (Section 6.1) by giving Stone’s 
original duality (Stone, 1937b) for bounded distributive lattices with a class of (un­
ordered) topological spaces that we call spectral spaces in this book. In particular, 
we show in Theorem 6.4 that the category of spectral spaces is isomorphic to the 
category of Priestley spaces, establishing exactly how Stone and Priestley duality 
for bounded distributive lattices are two presentations of the same mathematical 
result. This recasting of Priestley duality uses the correspondence between compact 
ordered spaces and stably compact spaces already discussed in Section 2.3. Then, 
we introduce an adjoint pair of functors (Section 6.2) between the category of topo­
logical spaces and a certain category of complete lattices and we show that this 
adjunction restricts to a duality between so-called sober spaces and spatial frames 
(Section 6.3). Throughout these sections, we in particular pay attention to how all 
these dualities fit together. In the final section, Section 6.4, as an application of 
the duality between spectral spaces and distributive lattices, we study two classical 
constructions on spectral spaces: powerdomains and function spaces. This leads us 
to introduce the notion of preserving joins at primes, which will play a role in both 
of the application chapters, Chapters 7 and 8.
6.1 Spectral Spaces and Stone Duality
In the Priestley duality of Chapter 3, we obtain certain compact ordered spaces 
as duals of distributive lattices. However, in the original formulation by Stone, the 
dual spaces of distributive lattices are certain stably compact spaces (Definition 
2.18). In fact, the relationship between Stone’s dual spaces and Priestley spaces is 
given by restricting the bijective correspondence between compact ordered spaces 
and stably compact spaces established in Theorem 2.21 of Chapter 2. The precise 
relationship between distributive lattices, Priestley spaces, and spectral spaces will 
be given in the commutative triangle of equivalences in Figure 6.1. The main 

6.1 Spectral Spaces and Stone Duality
197
technical ingredient needed for establishing these relationships is the following. 
Recall from Section 2.3 that, for any stably compact space (X, t), we write td for 
the co-compact dual topology of t and tp for the patch topology t V Td.
Theorem 6.1 Let (X, t) be a stably compact space. The following statements are 
equivalent:
(i) 
(X, tp, <T) is a Priestley space;
(ii) 
(X, tp, >T) is a Priestley space;
(iii) 
(X, t) has a base of compact-opens; and
(iv) 
(X, rd) has a base of compact-opens.
Proof Since the definition of a Priestley space is self-dual with respect to order­
duality, it follows that (i) and (ii) are equivalent. Since, under the correspondence 
of Theorem 2.21, (X, t) is the stably compact space corresponding to (X, tp, <T) 
and (X, rd) is the stably compact space corresponding to (X, tp, >T), it suffices to 
show that (iii) is equivalent to (i) and/or (ii) in order to show that all four statements 
are equivalent.
So, suppose (X, t) is a stably compact space for which (X, tp, <T) is a Priestley 
space and let x e X and U e t with x e U. We will construct a compact-open set 
V such that x e V c U. Note that C := Uc is a closed down-set which does not 
contain x. Hence, for each y e C we have x y and thus there is a clopen up-set Vy 
of the Priestley space (X, tp, <T) with x e Vy and y e Vyc. It follows that {Vyc }y e C 
is an open cover of C in (X, tp, <T). Since C is closed and thus compact, it follows 
that there is a finite subset F c C so that {Vyc }y eF is a cover of C. Consequently, the 
set V := P|{Vy | y e F} is a clopen up-set of (X, tp, <T) with x e V c U. Finally, 
since V is an open up-set in (X, tp, <T), it is open in the topology (tp)T, which is 
equal to t by Proposition 2.20. Also, since V is closed in (X, tp, <T), it is compact 
in (X, tp, <T), and thus also in the smaller topology of (X, t), since the compact 
topologies are a down-set in Top(X) (see Exercise 2.2.1). We have thus shown that 
(X, t) possesses a base of compact-opens.
For the converse, suppose (X, t) is a stably compact space with a base of compact­
opens, and let x, y e X with x ^T y. By definition of the specialization order, it 
follows that there is an open U e t with x e U and y £ U. Also, since (X, t) 
has a base of compact-opens, it follows that there is a compact-open V c X with 
x e V c U. The fact that V is open in (X, t) implies that it is an open up-set 
in (X, tp, <T). Furthermore, since V is compact and open, and thus in particular 
saturated, it is closed in (X, rd), and thus also in (X, tp, <T). Altogether, we have 
that V is a clopen up-set in (X, tp, <T) and that x e V and y V, as required. □
We recall from Chapter 3 that the morphisms of Priestley spaces are the contin­
uous and order-preserving maps, see also Example 5.2. Thus, in order to obtain a 
(non-full) subcategory of Top that is dual to the category of bounded distributive 

198
6 Omega-Point Duality
lattices, we have to consider the corresponding stably compact spaces with proper 
maps (see Exercise 2.3.15). Finally, ifX and Y are stably compact spaces satisfying 
the equivalent statements of Theorem 6.1, one can simplify the definition of proper 
maps: a map f: X ^ Y is a proper continuous map if, and only if, the inverse 
image of a compact-open is compact-open (see Exercise 6.1.1). In this context, 
proper maps are also known as spectral maps.
The above considerations naturally suggest the following definition of the cat­
egory of spectral spaces. A shorter but more ad hoc definition can be found in 
Exercise 6.1.3; alternative definitions in the literature often also explicitly include 
the statement that a spectral space is sober (see Definition 6.18), but we will derive 
this as a consequence of our definition (see Exercise 6.3.5). The spaces we call 
spectral spaces are also known as coherent spaces or (non-Hausdorff) Stone spaces 
in less recent literature, but these terms have also been used with other meanings, 
so we will avoid using them.
Definition 6.2 A spectral space is a stably compact space satisfying the equivalent 
statements of Theorem 6.1. A spectral map is a continuous function between spectral 
spaces such that the inverse image of any compact-open set is compact (and open). 
We denote by Spec the category of spectral spaces with spectral maps.
Definition 6.3 Let L be a distributive lattice. The Stone dual space of L or 
spectral space of L, denoted St(L), is a topological space (X, t), where X comes 
with bijections F(): X ^ PrFilt( L), I(): X ^ PrIdl( L), h (): X ^ HomDL (L, 2) 
so that for all x e X and all a e L, we have
a e Fx 
^^ a Ix 
^^ 
h x (a) = T
and the topology t is generated by the sets
n (a) = {x e X | a e Fx} = {x e X | a t Ix} = {x e X | hx (a) = T}, 
where a ranges over the elements of L . This object assignment extends to a con­
travariant functor
St: DL ^ Spec,
where a homomorphism h: L ^ M is sent to the function f: XM ^ XL given by 
requiring that Ff (x) = h-1 (Fx), for every x e XM .
Given a topological spaceXwedenotebyKO(X) the collection of compact-open 
subsets of X. Note that, if (X, t) is a spectral space with specialization order <T, then 
K O(X) ordered by inclusion is the distributive lattice which corresponds under 
Priestley duality to the Priestley space (X, tp, >T). Indeed, the clopen down-sets of 
(X, tp, >T) are the clopen up-sets of (X, tp, <T), which are exactly the compact­
open sets of(X, t) by Proposition 2.22(c). By definition, any proper continuous map 

6.1 Spectral Spaces and Stone Duality
199
f: X ^ Y yields a distributive lattice homomorphism f -1: KO(Y) ^ KO(X). 
In summary, we have the following commutative triangle of categorical (dual) 
equivalences, where the equivalence between Priestley and Spec is in fact an 
isomorphism, see Theorem 6.4.
Figure 6.1 A commutative triangle of equivalences. The equivalence between 
Priestley and Spec is an isomorphism of categories, see Theorem 6.4. The dual 
equivalence between DL and Priestley is the one described in Theorem 5.38. 
The functors between DL and Spec have been defined in this section; it is a 
dual equivalence because it is the composition of a dual equivalence with an 
isomorphism.
Theorem 6.4 The categories Spec and Priestley are isomorphic. On objects, 
the isomorphisms are given, respectively, by the restriction of the patch construc­
tion for stably compact spaces, equipped with the reverse of the specialization 
order:
<() p, >()) : Spec ^ Priestley
(X,t) » (X,t v Td, >t )
and by intersecting with the dual Alexandrov topology of the order:
() ^: Priestley ^ Spec
(X,p, <) ~ (X,p nD(X, <)).
On morphisms, the isomorphism of categories is simply the identity.
Proof By Theorem 6.1 and the definition of spectral spaces, it follows that all 
spectral spaces are stably compact spaces and that the correspondence of Theorem 
2.21, applied with a reversal of the orderings, between stably compact spaces 
and compact ordered spaces provides a bijective correspondence between spectral 
spaces and Priestley spaces. Furthermore, Exercise 2.3.15 shows that this bijective 
correspondence extends to an isomorphism of categories between the category

200
6 Omega-Point Duality
Priestley and that of spectral spaces with proper maps. Finally, by Exercise 6.1.1, 
proper maps between spectral spaces are precisely those for which the inverse 
image of a compact-open is compact-open, which in turn, by Definition 6.2, are the 
morphisms of the category Spec. 
□
Exercises for Section 6.1
Exercise 6.1.1 Show that a map between spectral spaces is proper if, and only 
if, the inverse image of a compact-open is compact-open. Further show that a map 
between Boolean spaces is proper if, and only if, it is continuous.
Exercise 6.1.2 Show, by giving an example, that there may exist continuous maps 
f: X ^ Y between spectral spaces X and Y which are not proper.
Exercise 6.1.3 Show that a topological space X is a spectral space if, and only 
if, it is well filtered and KO(X) is a bounded sublattice of P (X) and a base for 
the topology of X . Note. We will derive an alternative characterization of spectral 
spaces, as a subclass of T0 sober spaces, in Exercise 6.3.5 below.
Exercise 6.1.4 Using Priestley duality, Theorem 2.21 of Chapter 2, and Theorem 
6.1, show that:
(a) 
The assignment X ^ KO(X) may be extended to a contravariant functor 
from Spec to DL by sending a proper map f: X ^ Y to the map
KO (f): KO(Y) ^ KO(X), U » f -1 (U).
(b) 
The pair of functors St and KO yield a duality between the categories Spec 
and DL.
Exercise 6.1.5 Show that if (X, t) is a spectral space, then the co-compact dual 
of t is generated by the complements of the compact-opens of (X, t). That is,
Td = {Uc | U eKO(X,r)>.
6.2 The Omega-Point Adjunction
The collection of compact-open subsets of a spectral space is closed under finite 
intersections and finite unions and is thus a distributive lattice. In fact, Stone duality 
tells us, among other things, that any distributive lattice occurs as KO(X) for an, 
up to homeomorphism, unique spectral space X .
Topological spaces that are not spectral spaces will in general not have a base of 
compact-opens, but they will have lots of bases that are sublattices of the power set. 
Using these bases, equipped with certain proximity relations, leads to an alternative 
duality for stably compact spaces (Smyth, 1992; Jung and Sunderhauf, 1996).

6.2 The Omega-Point Adjunction
201
If a compact space has a base of compact-opens, then, by compactness, this is 
necessarily the smallest base which is closed under finite unions. Topological spaces 
that are not spectral spaces will in general also not have a smallest base. To obtain a 
canonical base beyond spectral spaces, we are forced to take the base of all opens. 
But the collection of open subsets of a topological space is closed under arbitrary 
unions and is thus a complete lattice in the inclusion order. As a consequence, if 
we want to extend Stone duality to a duality between certain lattices and spaces 
beyond those with bases of compact-opens, we are forced to consider a category of 
complete lattices.
Definition 6.5 A frame is a complete lattice in which finite meets distribute 
over arbitrary joins, that is, it satisfies the JID law (see (1.4)). A map between 
frames is said to be a frame homomorphism provided it preserves finite meets 
and arbitrary joins. We denote by Frame the category of frames with frame 
homomorphisms.
Example 6.6 Given a topological space X, the collection Q(X) of all opens is 
closed under finite intersections and arbitrary unions. Since, in the power set lattice 
P(X), (arbitrary) intersections distribute over arbitrary unions, Q(X) is a frame. 
Also, by the very definition of continuity, a continuous map f: X ^ Y yields a 
map
Q( f): Q(Y) ^ Q(X)
given by U ^ f -1[U]. Since the inverse image map preserves (arbitrary) intersec­
tions and arbitrary unions, the map Q( f) is a frame homomorphism.
Proposition 6.7 Q: Top ^ Frame is a contravariant functor.
Proof It is straightforward to verify that Q(idX) = idQ(X) for any topological 
space X and that Q( f ◦ g) = Q(g) ◦ Q( f) whenever g: X ^ Y and f: Y ^ Z are 
continuous maps. 
□
If we want a way to recapture a space from its frame of open sets, first, we need 
a way of distinguishing points using open sets. As soon as a space is T0 this is 
possible via neighborhood filters. Note that a similar definition, but restricted to 
clopen down-sets, was already used when we proved Priestley duality (Proposition 
3.26).
Definition 6.8 Let X be a topological space and x e X. The neighborhood filter 
of x is given by
N(x) = {U e Q(X) | x e U}.

202
6 Omega-Point Duality
Definition 6.9 Let L be a frame. A subset F c L is a completely prime filter of L 
if it is a filter satisfying, for all S c L,
if V S e F, then S n F + 0.
Note that a completely prime filter is necessarily proper, since ± is the supremum 
of the empty set, and can therefore never be an element of a completely prime filter. 
We denote by CompPrFilt(L) the set of completely prime filters ofL.
The proof of the following proposition is left as Exercise 6.2.3.
Proposition 6.10 Let X be a topological space and x e X. Then, N (x) is a 
completely prime filter of Q( X). Furthermore, X is T0 if, and only if, the assignment 
x ^ N (x) is injective.
Recall from Chapter 1 that, for any distributive lattice L, M (L) denotes the set 
of (finitely) meet-prime elements of L .
Proposition 6.11 Let L be a frame and F c L. The following statements are 
equivalent:
(i) 
the set F is a completely prime filter of L;
(ii) 
the complement L - F of F is a principal down-set jm, for some m e M (L); 
and
(iii) 
the characteristic function xF: L ^ 2, where xF (a) = 1 if, and only if, 
a e F, is a frame homomorphism.
Proof First suppose F is a completely prime filter of L. Define m := V(L — F)■ 
Clearly, L-F cjm. Since F is completely prime and (L-F) n F = 0, it follows 
that m £ F. Therefore, since L - F is a down-set containing m, we have jm c L — F, 
and thus jm = L - F. Finally, to show that m is meet prime, let M c L be finite 
and suppose that m' m for all m' e M. Then, M c L - jm = F, so, since F is a 
filter, fi M e F, that is, fi M m. Thus, m e M(L), and we have shown that (i) 
implies (ii).
Now, suppose that L - F = jm for some m e M (L). To see that xF preserves ar­
bitrary joins, note that, for any A c L, xF (V A) = 1 if, and only if, V A m, if, and 
only if, a m for some a e A, which is equivalent to V XF [A] = 1. That xF pre­
serves finite meets follows directly from the definition of meet prime: for any finite 
A c L, xF (A A) = 1 if, and only if, fi A m, which, since m e M(L), happens 
if, and only if, a m for every a e A, and this is in turn equivalent to A XF [A] = 1.
For the last implication, suppose that xF : L ^ 2 is a frame homomorphism. 
Since xF preserves finite meets, it follows that F = xF1 (1) is a filter. If A c L 
with V A e F, then xF (V A) = 1 and thus xF (a) = 1 for some a e A. That is, 
A n F + 0 and thus F is completely prime. 
□

6.2 The Omega-Point Adjunction
203
We are now ready to give the definition of the Pt functor which takes us from 
frames back to topological spaces. By Proposition 6.11, there are bijections between 
the set of homomorphisms to the frame 2, the set of completely prime filters, and the 
set of meet primes. The space of points ofL can be based on any of these three sets. 
As we did for the Priestley dual space in Chapter 3, we give a “neutral” description 
here, leaving itas an exercise (Exercise 6.2.4) to check the details of the equivalence 
of the descriptions, since the proofs are very similar to those already given in 
Section 3.2 for Priestley duality. Note, however, that we only obtain a contravariant 
adjunction here; we will show how it restricts to a duality in Section 6.3.
Definition 6.12 Given a frame L, we denote by Pt(L) a topological space which 
is determined up to homeomorphism by the fact that it comes with three bi­
jections F: Pt(L) ^ CompPrFilt(L), m: Pt(L) ^ M(L), and f (-): Pt(L) ^ 
HomFrame ( L, 2) satisfying for any x e Pt(L) and a e L,
a e F (x) ^^ a 
m (x) ^^ f x (a) = 1,
and the opens of Pt(L) are the sets a for a e L, defined, for x e Pt(X), by
def
x e a ^^ a e F (x) ^^ a 
m (x) ^^ f x (a) = 1.
The assignment L ^ Pt(L) extends to a contravariant functor
Pt: Frame ^ Top
by sending a frame homomorphism h : L 
Pt(L) given by
Pt( h)(x) = y 
<>
^ M to the continuous map Pt(h): Pt(M) ^
<>
<>
h-1(F(y)) = F(x)
h-1 (X m (y)) = X m (x) 
fy = fx ◦ h .
Theorem 6.13 The functors Pt: Frame Top: Q form a contravariant adjunc­
tion with corresponding natural transformations given, for L a frame, by
nl : L ^ Q(Pt(L))
a ^ {x e Pt(L) | a e F (x)}
and, for X a topological space,
ex : X ^ Pt(Q(X))
sends a point x of X to the element of Pt(Q(X)) which corresponds to the neigh­
borhood filter of x.
Proof In order to check that the pair (Pt, Q) forms a contravariant adjunction it 
suffices to check that:

204
6 Omega-Point Duality
(a) 
The assignments n and e define natural transformations, that is, for each 
frame homomorphism h: L ^ M and each continuous map f: X ^ Y, the 
following diagrams commute:
L
nL
► Q(Pt( L))
X
«X
> Pt(Q(X))
h
Q(Pt( h))
f
Pt(^( f))
M -
nM
-> Q(Pt(M))
Y -
£y
-Pt(Q( Y)).
(b) 
The triangle identities hold, that is, for each frame L and each space X , the 
following diagrams commute:
«Pt( l ) 
nn<x)
Pt(L)-----Pt(Q(Pt(L))) 
Q(X)----- —* Q(Pt(Q(X)))
1Pt(n l ) 
Q(£ x )
Pt( L) 
Q( X).
We leave these verifications as an exercise for the reader. 
□
Exercises for Section 6.2
Exercise 6.2.1 Give an example of a topological space X such that:
(a) 
Q(X) is not closed under arbitrary intersections;
(b) Q(X) does not satisfy the Meet Infinite Distributive law (that is, the order 
dual of JID); and
(c) 
there is a frame homomorphism from Q(X) into 2 which does not preserve 
arbitrary meets.
Exercise 6.2.2 Let X be a topological space and let L = Q(X). Prove that, for any 
S c L, the infimum of S is the interior of the set QUeS U, that is, /\ S = int(Q S).
Exercise 6.2.3 Prove Proposition 6.10.
Exercise 6.2.4 Show that Pt(L) is well defined and that it is a topological space. 
Also show that the bijection f (): Pt(L) ^ HomFrame(L, 2) embeds Pt(L) as a 
closed subspace of the space SL, where S denotes the Sierpinski space (see Example 
2.19). Further, show that, for any frame homomorphism h, Pt(h) is well defined 
and that it is a continuous map. Finally, show that Pt is a contravariant functor as 
stated in Definition 6.12.
Exercise 6.2.5 Complete the proof of Theorem 6.13.

6.3 The Omega-Point Duality
6.3 The Omega-Point Duality
205
Recall from Corollary 5.19 that any contravariant adjunction, such as the one given 
by the functors Pt and Q in Section 6.2, restricts to a maximal duality. This associated 
duality is obtained by restricting the functors to the full subcategories given by the 
objects for which the component of the natural transformation from the identity to 
the composition of the functors in the appropriate order is an isomorphism.
Accordingly, we want to characterize those frames L for which nL: L ^ 
Q(Pt(L)) is an isomorphism and those topological spaces X for which sX : X ^ 
Pt(Q(X)) is a homeomorphism.
Proposition 6.14 Let L be a frame. The following statements are equivalent:
(i) 
nL: L ^ Q(Pt(L)) is an isomorphism;
(ii) 
nL is injective;
(iii) 
for all a, b e L, if b a, then there is x e Pt(L) with b e F(x) and a £ F(x);
and
(iv) 
for all a e L, a = A(M (L) A ta).
Proof By definition of Pt(L), the opens of this space are precisely the sets in the 
image of nL and thus nL is always surjective. It follows that items (i) and (ii) are 
equivalent since a frame homomorphism is an isomorphism if, and only if, it is 
both injective and surjective.
Since nL is always a frame homomorphism, if it is injective, then it is an order 
embedding (see Exercise 1.2.7). On the other hand, ifitis an order embedding, then 
it is clearly injective. So (ii) is equivalent to saying that nL is an order embedding. 
Further, again because nL is always a frame homomorphism, it is always order 
preserving. So (ii) is equivalent to nL being order reflecting. But (iii) is exactly the 
contrapositive of the statement that nL is order reflecting.
We now use Proposition 6.11 to prove the equivalence of (iii) and (iv).
In order to prove that (iii) implies (iv), we reason by contraposition: Suppose 
that (iv) fails, we show that (iii) also fails. Let a e L be such that (iv) fails. Denote 
by b the element A(M (L) A ta). We must then have b a, since a < b always 
holds. Now, let x e Pt(L) be arbitrary such that b e F(x). To show that (iii) fails, 
we need to show that a e F(x). By Proposition 6.11, pick m e M(L) such that 
F(x) = (im)c. Then, since b e F(x), we have b m, so in particular a m, by 
the very definition of b. Thus, a e F (x) as required.
For the converse, suppose (iv) holds and let a, b e L with b a. Since a = 
A(M (L) A ta), we have b A(M (L) A ta) and thus there is m e M (L) with 
a < m but b m. Again by Proposition 6.11, F = (im)c is a completely prime 
filter of L, and thus there is an x e Pt(L) with F(x) = F. It follows that b e F(x) 
and a F(x) and thus (iii) holds. 
□

206
6 Omega-Point Duality
Remark 6.15 As we saw in Section 1.3, in a finite distributive lattice, each element 
is a finite join of join-irreducible elements and a finite meet of meet-irreducible 
elements. This is not the case for frames in general (see Exercise 6.3.1).
Definition 6.16 A frame is said to be spatial provided it satisfies the equivalent 
conditions of Proposition 6.14. We denote by SpFrame the full subcategory of 
Frame given by the spatial frames.
As we have already observed, the natural morphism EX: X ^ Pt(Q(X)) is 
injective if, and only if, X is a T0 space, see Proposition 6.10.
Proposition 6.17 Let X be a T0 space. The following statements are equivalent:
(i) 
eX: X ^ Pt(Q(X)) is a homeomorphism;
(ii) 
EX is surjective;
(iii) 
for all y e Pt(Q(X)) there exists an x e X so that F(y) = N(x); and
(iv) 
the join-irreducible elements of the lattice C(X) of closed sets in X are 
precisely the closures of points, {x} = j x ,for x e X.
Proof Recall that the opens of Pt(Q(X)) are, by definition, the sets of the form 
U = {y e Pt(L) | U e F(y)}, where U e Q(X). We have, for any x e X and 
U e Q(X),
eX(x) e U ^^ U e F(eX(x)) = N(x) 
^^ x e U.
Thus, EX is always an open continuous embedding of topological spaces and there­
fore it is clear that (i) is equivalent to (ii). Also, by definition of EX , a point x e X is 
sent to the unique point y e Pt(Q(X)) with the property that F(y) = N(x). Thus, 
(iii) is simply spelling out the statement that EX is surjective and therefore (ii) and 
(iii) are equivalent.
To prove that (iii) implies (iv), suppose that (iii) holds and let C e C(X) be join 
irreducible. Then, since the lattice of closed sets of X is order dual to the lattice 
of open sets of X , we have that U = Cc is a meet-irreducible element of the frame 
Q(X). By Proposition 6.11, it follows that the set
FC = (jU)c = {V e Q(X) | V U} = {V e Q(X) | C n V + 0}
is a completely prime filter of Q(X). Now, let y e Pt(Q(X)) be the point of Q(X) 
corresponding to FC, that is, the point with F(y) = FC . Since (iii) holds, there is 
x e X with FC = N (x). That is, for all V e Q(X) we have
CnV + 0 
^^ xeV.

6.3 The Omega-Point Duality
207
We use this to show that C = {x}. To this end, let D be any closed subset of X and 
let V = Dc be the complementary open set. Then, we have the following string of 
equivalences
C c D <> C n V = 0 <> x £ V <> x e D.
Thus, we obtain the desired conclusion
C = Q{D e C(X) | C c D} = Q{D e C(X) | x e D} = {x}
and every join-irreducible closed set is the closure of a singleton. The fact that 
closures of singletons always are join irreducible in the lattice of closed sets is left 
for the reader as Exercise 6.3.4.
To prove that (iv) implies (iii), let y e Pt(Q(X)) and let F = F(y) be the cor­
responding completely prime filter of Q(X). By Proposition 6.11, the complement 
of F is the down-set of some open set U which is meet irreducible in the lattice 
Q(X). It follows that C = Uc is a closed subset of X which is join irreducible in 
the lattice C(X) of closed sets in X. By (iv), there exists x e X with C = {x}. Now, 
let V e Q(X). Then we have
V $ F <> V c U <> C n V = 0 ^^ {x} n V = 0 ^^ x V 
and thus V e F if, and only if, x e V so that F = N (x) as required. 
□
Definition 6.18 A topological space is said to be sober provided it is a T0 space 
and satisfies the equivalent conditions of Proposition 6.17. We denote by Sober the 
full subcategory of Top given by the sober topological spaces.
It now follows, using Corollary 5.19, that the functors Q and Pt, properly restricted 
and co-restricted, yield a duality between the category of spatial frames and the 
category of sober spaces.
Theorem 6.19 The Q-Pt adjunction cuts down to a duality between the category 
of spatial frames with frame homomorphisms and the category of sober topological 
spaces with continuous maps.
Q
SpFrameop 
Sober.
Pt
We end this section with a summary of the relationship between the Q-Pt, the 
Stone, and the Priestley dualities. Recall that we already showed how Stone and 
Priestley duality for distributive lattices relate in Figure 6.1. We now add the Q-Pt 
duality into the mix.
Since the Q-Pt duality is for unordered topological spaces rather than ordered 
spaces, we compare it to Stone duality rather than to Priestley duality. As we ask you

208
6 Omega-Point Duality
to show in Exercise 6.3.5, every spectral space is sober, thus Spec is a subcategory 
of Sober. Note that it is not a full subcategory, since not every continuous map 
between spectral spaces is proper (see Exercise 6.1.2). We will denote by Specc the 
full subcategory of Top based on spectral spaces, that is, the category whose objects 
are spectral spaces and whose morphisms are all continuous functions. Exercise 
6.3.7 outlines a generalization of Stone duality for the category Specc - the dual 
category of distributive lattices then has certain relations as its morphisms. The cat­
egory Specc can be used to give a categorical description of the category of stably 
compact spaces with continuous functions: It is the so-called Karoubi envelope or 
splitting by idempotents of Specc . The topological fact underlying this theorem is 
that every stably compact space is a continuous retract of a spectral space, see for 
example Johnstone (1986, Theorem VII.4.6) and van Gool (2014, Section 2.2) for 
more information.
The Q-Pt duality is not directly a generalization of Stone duality as, under the 
Q-Pt duality, a spectral space is sent to its entire open set lattice rather than just to 
the lattice of compact-opens. However, the category DL embeds into the category 
Frame via the ideal completion A ^ Idl(A), which freely adds directed joins to A. 
A distributive lattice can be recovered from its ideal completion, as follows. We call 
an element k of a frame F compact provided that, for every directed subset S of F, we 
have k < V S implies k < 5 for some 5 e S, also see Section 7.1 for more on compact 
elements in the more general setting of directedly complete posets. In particular, we 
will encounter in Chapter 7 a more general version of this construction, P ^ Idl (P), 
which turns an arbitrary poset into a so-called algebraic domain. For an arbitrary 
frame F, we denote by K(F) the set of compact elements ofF, which always forms 
a join-subsemilattice of F . For any distributive lattice A, the compact elements 
in Idl(A) are the principal ideals, thus we have A = K(Idl(A)). Finally, calling 
coherent frames 1 those frames whose compact elements form a sublattice which 
generates the frame by directed joins, we obtain Figure 6.2, which illustrates how 
to move back and forth between the Stone duality and the Q-Pt duality on objects.
D DL
Idl-K
CohFr c SpFrame
KO-St
Sober 2 Spec
Q-Pt
Figure 6.2 Comparing the Q-Pt and Stone duality on objects.
This diagram is not the whole story as it does not specify what happens with 
morphisms. Stone duality acts on maps in Spec, which is not a full subcategory
1 Coherent frames are also known as arithmetic frames in the literature.

6.3 The Omega-Point Duality
209
of the category Sober of sober spaces with continuous maps. The Q-Pt duality, 
on the other hand, works on the full subcategory Specc of Sober on the spec­
tral spaces. To get the morphisms between coherent frames that are dual to the 
proper maps, we need to restrict to the subcategory of CohFr with the same 
objects, but in which the morphisms are required to send compact elements to 
compact elements; such morphisms are called coherent morphisms. An alterna­
tive way of seeing this restriction of the duality between Specc and CohFr to a 
duality for Spec is bitopological: Coherent morphisms between coherent frames 
correspond precisely to those continuous maps between spectral spaces that are 
also continuous with respect to the co-compact dual spectral topologies. Working 
with spectral spaces equipped with both these topologies and the corresponding 
notion of frames, one gets a natural bitopological description of coherent mor­
phisms between coherent frames, and thus of proper maps between spectral spaces, 
see Picado (1994), Jung and Moshier (2006), and Bezhanishvili et al. (2010). 
As an alternative to restricting the morphisms on spectral spaces and coherent 
frames to fit those of bounded distributive lattices, we can weaken the notion of 
morphism on DL to correspond to lattice homomorphisms A ^ Idl(B), which in 
turn may be seen as certain “join-approximable” relations from A to B (see 
Exercise 6.3.7).
Exercises for Section 6.3
Exercise 6.3.1 Give an example of an infinite frame in which each element is a 
finite meet of meet-irreducible elements and one in which it is not the case.
Exercise 6.3.2 This exercise contains material beyond the scope of this book. It 
is given mainly as an indication of a means of getting one’s hands on non-spatial 
frames.
(a) 
Show that non-atomic complete Boolean algebras are examples of non-spatial 
frames. To this end you may proceed as follows.
(1) 
Every complete Boolean algebra is a frame, that is, it satisfies (JID).
(2) 
A complete Boolean algebra is a spatial frame if, and only if, it is atomic, 
that is, for all a e B, if a 
±, then there exists an atom j e B such that
j < a.
(b) 
Show that there exist non-atomic complete Boolean algebras. Hint. We outline 
two rather distinct ways of proving this. (1) Show that there exist non-atomic 
Boolean algebras (for example, the Lindenbaum-Tarski algebra of Classical 
Propositional Logic on a countable set of primitive propositional variables, 
see Section 4.1, has no atoms at all), and show that the MacNeille completion 
(MacNeille, 1937) of a Boolean algebra is atomic if, and only if, the original 
Boolean algebra is atomic; or (2) Show that the regular open subsets of a

210
6 Omega-Point Duality
Hausdorff space form a complete Boolean algebra, and that this algebra has 
no atoms if the original space has no isolated points. Recall that an open subset 
in a topological space is called regular if it is equal to the interior of its closure.
Exercise 6.3.3 (a) Show that all Hausdorff spaces are sober.
(b) 
Let X be an infinite set equipped with the topology in which a subset is closed 
if, and only if, it is finite or equal to X . Prove that this space is T1 and not 
sober.
Exercise 6.3.4 Let X be a topological space. Prove that the closure of a singleton 
set is join irreducible in the lattice of closed subsets of X .
Exercise 6.3.5 Show that if X is a locally compact T0 space, then X is well filtered 
if, and only if, it is sober. Use this in combination with Exercise 6.1.3 to show that 
a topological space is a spectral space if, and only if, the following three properties 
hold:
(a) 
The collection of compact-open subsets of X forms a bounded sublattice of 
P(X) and a base for the topology of X;
(b) 
X is sober; and
(c) 
X is T0.
Exercise 6.3.6 Let L be a frame.
(a) 
Show that for x, y e Pt(L) we have x < y in the specialization order if, and 
only if, fx < fy if, and only if, F(x) < F(y).
(b) 
Show that binary joins and meets need not exist in the specialization order in 
a sober space.
(c) 
Show that the poset of completely prime filters of a frame is closed under 
directed union. Conclude that any sober space is a dcpo in its specialization 
order.
(d) 
Show that each open of Pt(L) is Scott open with respect to the specialization 
order of Pt(L).
Note. Item (c) of this exercise has a counterpart for distributive lattices and spectral 
spaces (see Exercise 3.1.12). Also, in Proposition 7.6 we give a direct, elementary 
proof of the results in this exercise that does not use Q-Pt duality.
Exercise 6.3.7 Let L and M be distributive lattices. A relation R c L x M is called 
join approximable (see, for example, Abramsky and Jung (1994, Definition 7.2.24)) 
provided that, for any a, a' e L and b, b' e M, the following four properties hold:
• if a' > aRb > b', then a'Rb';
• if aRb and aRb', then aRb V b';

6.4 Duality for Spaces of Relations and Functions
211
• if aRb and a'Rb, then a A a'Rb; and
• if a V a ’Rb, then there exist c, c' e K such that aRc, a’Rc ’, and b < c V c ’.
Denote by X and Y the spectral spaces dual to L and M, respectively.
(a) 
Show that there is a one-to-one correspondence between continuous functions 
f: Y ^ X and DL homomorphisms h: L ^ Idl(M). Hint. Use the fact that 
Q(Y) is isomorphic to Idl(M).
(b) 
Show that there is a one-to-one correspondence between DL homomorphisms 
h: L ^ Idl(M) and join-approximable relations R c L x M.
(c) 
Conclude that the category whose objects are distributive lattices and whose 
morphisms are join-approximable relations is dually equivalent to the category 
Specc of spectral spaces with continuous functions between them.
Note. A related result on algebraic domains will be stated in Exercise 7.1.12.
6.4 Duality for Spaces of Relations and Functions
As an application of the duality between distributive lattices and spectral spaces, 
in this section, we will develop a general duality theory for spaces of relations and 
functions, which we will apply to domains in Chapter 7. We begin in the setting 
of general spectral spaces, and we will start with a class of constructors, on the 
lattice side, which are central in logic applications as already considered in Chapter 
4, namely that of freely adding one layer of a modal box, and of an implication­
type operator. We will see in particular that the dual of a layer of implication-type 
operator gives a “binary relation space” (Theorem 6.28). In order to obtain from 
this binary relation space a function space, we identify (Definition 6.32) a property 
that we call “preserving joins at primes,” which we will encounter again in Chapters 
7 and 8. We prove (Corollary 6.34) that, for certain lattices, this property gives a 
lattice-theoretic description of the function space construction, which will allow us 
to prove in Chapter 7 that bifinite domains are closed under that construction.
Freely Adding a Layer of Unary Modal Operator
An important idea from categorical algebra is that the addition of algebraic structure 
to an object A in a category C can sometimes be understood as a homomorphism 
TA ^ A, where T is an endofunctor on C. In particular, Exercise 5.4.3 spells out 
how a positive modal d-algebra (A, □) can alternatively be specified by giving a 
distributive lattice A and a lattice homomorphism Fa (A) ^ A. Here, we can think 
of Fa as “freely adding one layer of unary □ operator” to a given distributive lattice. 
Thus, an important step in analyzing positive modal d-algebras is to analyze this 
“signature” functor Fa itself. In this subsection, we will identify the topological 

212
6 Omega-Point Duality
dual of this functor, and, in the next subsection, we carry out a similar program 
for the functor F^, which “freely adds a layer of implication-type operator” to a 
distributive lattice.
Before treating general implication-type operators, we first consider the case 
of a unary modal operator, which, as we will see, corresponds to the filter space 
construction. We also show how this construction specializes to the upper Vietoris 
space, which is also known as the Smyth powerdomain in the context of the spectral 
domains that we discuss in Chapter 7.
We recall the construction of the free distributive lattice over a meet-semilattice 
(also see Example 5.42 and Exercise 5.4.3 for more details). Let M be a meet- 
semilattice. The distributive lattice Fa (M) is characterized uniquely by the universal 
property that any finite-meet-preserving function M ^ L, with L a distributive 
lattice, lifts uniquely to a DL homomorphism Fa (M) ^ L. Recall from Example 
5.42 that we may construct Fa(M) as the quotient of the free distributive lattice 
FDL(□ M) over the set of “formal boxes” {□ a | a e M} under the congruence $M 
generated by the set of pairs of the form
aG ~ bG, where aG := □( /\ G and bG := /\{□ a : a e G}, 
(6.1)
and where G ranges over the finite subsets of M. We follow here the same convention 
as in Section 4.2, that the pairs involved in generating a congruence are denoted by 
a & b instead of (a, b). We now give a method for calculating the Stone-Priestley 
dual space of this lattice Fa (M), which we will subsequently generalize to the 
setting of implication-type operators.
Denote by X the Priestley dual space of Fa (M) and by Y the Priestley dual space 
of Fdl(□ M). Recall from Proposition 4.8 that we may regard the space Y as the 
ordered generalized Cantor space over □ M, as given in Definition 4.7; that is, the 
underlying set of Y is 2nM, the partial order <Y on Y is the pointwise order induced 
by the order on 2 in which 1 < 0, that is, for y, y' e Y,
def
y <Y y ^^ for all m e M, if y (□ m) = 1, then y (□ m) = 1,
and the Priestley topology on Y is generated by the subbase of sets of the form 
[[m ^ iJ = {y e 2nM | y(□ m) = i}, where m e M and i e {0,1}. Since Fa(M) 
is the quotient of FDL(□ M) by $M, by Theorem 4.17, the Priestley space X is 
order-homeomorphic to the closed subspace of Y consisting of the points of Y 
that “respect” all the pairs generating $M; using the notation of Theorem 4.17 and 
(6.1), X is order-homeomorphic to [[{aG « bG | G c M finite } J. Now note that, 
for any finite subset G c M, a point y e 2nM satisfies the equation aG ~ bG if, and 
only if,
y (□ (/\ G)) = 
y(□ a).

6.4 Duality for Spaces of Relations and Functions
213
In other words, the points y e Y that satisfy all equations of the form (6.1) are exactly 
the points y e 2nM that preserve finite meets when viewed as functions M ^ 2, 
by precomposing with the bijection a ^ □ a. Finally, note that the meet-preserving 
functions M ^ 2 correspond exactly to the filters of M, by considering the inverse 
image of 1 and using the same definition of “filter,” now for a meet-semilattice, as 
in Definition 3.2. Let us write ^ for the induced bijection X ^ Filt(M), which can 
be defined concretely, for x e X ,by
^(x) := {m e M | x(□ m) = 1}.
Under this bijection ^, the partial order <X on the space X, inherited from the order 
<Y on Y, corresponds to the reverse inclusion on Filt(M), that is, for any x, x' e X, 
x <X x' if, and only if, ^(x) 2 ^(x'). Since the set □ M := {[□ m]&M | m e M} 
generates F (M) as a lattice, the lattice of compact-opens of the spectral topology t ^ 
on X is also generated by the sets of the form Da, as a ranges over the elements of M. 
Note that, for any a e M, the direct image under the bijection ^ of the set Da is the set
a := {F e Filt(M) | a e F}.
Note also that the collection of sets a, as a ranges over the elements of M, is closed 
under finite intersections, since Filt(M) = T and a ^b = a A b for any a, b e M. 
Denote by p the topology on Filt(M) generated by the base {a | a e M}. It then 
follows from the above calculations that the function ^, viewed now as a map be­
tween topological spaces (X, t^) ^ (Filt(M), p), is a homeomorphism. Therefore, 
p is a spectral topology, and Fa (M) is isomorphic to the lattice of compact-opens 
of p, via the unique homomorphism extending the function which sends □ a to <5, 
for a e M .In particular, each set of the form a is compact-open in p. Note also that 
any compact-open set in (Filt(M), p) is a finite union of sets from this base, since 
any open set in p is a union of sets from the base.
We summarize our findings in the following proposition.
Proposition 6.20 Let (M, A, T) be a meet-semilattice. The spectral space dual 
to Fa (M) is homeomorphic to the set of filters Filt (M) of M, equipped with the 
topology generated by the base {a | a e M}. Moreover, the compact-open sets of 
Filt ( M) are exactly the finite unions of sets in this base.
To finish this first subsection, suppose that M, in addition to being a meet- 
semilattice, is itself also a distributive lattice. One may then directly describe the 
space of filters Filt(M) in terms of the spectral space dual to M, using the following 
general construction.
Definition 6.21 Let X be a topological space. The upper Vietoris space on X is 
the topological space V(X) whose points are the compact-saturated subsets of X, 
and whose topology is generated by the base consisting of the sets

214 
6 Omega-Point Duality
□U := {K e VT(X) | K c U}, for U e t.
Note that, for K, K' e V\ we have K < K' in the specialization order if, and 
only if, K' c K.
In the context of general non-Hausdorff topological spaces, the name “Vietoris 
hyperspace” has been associated to various spaces whose points are the subsets of 
a given topological space, with a certain topology induced from that space. Often, 
the points of such a hyperspace are the closed sets, and indeed, in our definition 
here, if X is stably compact, then the points of V (X) are in fact the closed subsets 
of the space Xd, the co-compact dual of X.
Proposition 6.22 Let M be a distributive lattice and let X be the spectral space 
of M. The topological space Filt(M) is homeomorphic to the upper Vietoris space 
VT (X).
Proof Let f: V(X) ^ Filt(M) be the function that sends a compact-saturated 
set K of X to the filter {a e M | K c a}. We will show that this function f is 
continuous and has a continuous two-sided inverse, g: Filt(M) ^ V^ (X), which 
sends a filter F of M to the set f|{a | a e F}, which is indeed compact and 
saturated in X .
Now, to see that g is a two-sided inverse to f,letF be a filter of M and b e M. 
Then, using well-filteredness of the spectral space X, g (F) c b if, and only if, there 
exists a e F such that a c b, which is clearly equivalent to saying that b e F. 
Thus, f g(F) = F. Conversely, for any compact-saturated set K of X, we have 
g f (K) = P|{a | K c a} = K, as can be seen from the fact that Xd is a spectral 
space in which the sets ac form a base for the open sets.
To see that f is continuous, let a e M be arbitrary. For any K e V^(X), we have 
f (K) e a if, and only if, K c a if, and only if, K e □ a, so f-1 (a) = □ a, which is 
open in V (X).
Finally, to see that g is continuous, let nU be a basic open set of V(X), where 
U is an arbitrary open in X. Let F be a filter of M and suppose that g (F) e □ U. We 
show that there exists an open set around F which is mapped entirely inside dU by 
g. By definition of g and of nU, we have g(F) = Q{a | a e F} c U, and since X 
is a spectral space, we may write U as the union I J{b : b e M,b c U}. Using the 
well-filteredness of X, pick some a e F such that a c U. Then, F e a, and for any 
F' e a, we have g(F') c b c U, so g(F') e nU. 
□
Note in particular that it follows from the above results that spectral spaces are 
closed under the upper Vietoris construction. Indeed, for a spectral space X , writing 
M := KO(X), the space V(X) is homeomorphic to Filt(M) by Proposition 6.22, 
which is the dual space of Fa (M), and is therefore a spectral space.

6.4 Duality for Spaces of Relations and Functions 
215
Corollary 6.23 Spectral spaces are closed under the upper Vietoris construction.
Freely Adding a Layer of Implication-Type Operator
The above calculation of the dual space of F (M) suggests the following general 
methodology, which we will follow here to construct function spaces via their dual 
lattices. Suppose that a lattice K is described by a set of generators V and a set of 
equalities R between distributive lattice terms in the generators, and that we want to 
compute its Priestley dual space (X, <, t). One starts from a free distributive lattice 
over V, whose dual space is 2V. Then, every equation a & b e R between generators 
yields a quotient of FDL (V) and thus a closed subspace of 2V . Intersecting all these 
subspaces, as a & b ranges over the equations in R, yields the dual space X of 
the distributive lattice in question. This is an application of the quotient-lattice- 
subspace duality of Section 4.2, where algebraic equations yield subspaces.
An interesting point of this method is that one may prove properties of this 
dual space by examining the corresponding properties of the lattice; for example, 
the space (X, t^) will automatically be a spectral space, by virtue of being the 
dual space of a distributive lattice. This method will be used in our study of domain 
theory in Section 7.4, and has also been used in the study of free algebras in varieties 
of lattice ordered algebras, see for example Ghilardi (1992, 2010), Bezhanishvili 
and Gehrke (2011), or Coumans and van Gool (2012).
We now apply the same methodology to implication-type operators. Let L and 
M be distributive lattices and X and Y their respective dual spaces. We will think of 
the free distributive lattice over the set L x M as generated by “formal implications”
a ^ b
for a e L and b e M . For this reason we will here denote elements of L x M, when 
we consider them as generators of the free distributive lattice, by a ^ b rather 
than the usual (a, b) . We aim to calculate (see Theorem 6.28) the dual space of 
the quotient F^ (L, M) of FDL (L x M) given by the congruence generated by the 
following two sets of equations, which we also refer to as (equational) “schemes” 
in what follows:
a ^ GG "A<a ^ b | b e G}, for each a e L and finite G c M and 
(6.2)
\y F ^ b ~ /\{a ^ b I a e F}, for each finite F c L and b e M. 
(6.3)
Remark 6.24 Notice that the schemes (6.2) and (6.3) together precisely say that 
^, viewed as an operation from L x M to the algebra we are building, is an 
implication-type operator, in the sense of Definition 4.58 in Section 4.5. Note 

216
6 Omega-Point Duality
also that the implication ^ that we build here will not in general be a Heyting 
implication, that is, it will not be adjoint to a meet operation A.
Also, as in the unary case, F^ corresponds to freely adding a layer of implication­
type operator in the sense that the coproduct L + F^ (L, L) is the sublattice of depth 
< 1 terms in the free distributive lattice with an implication-type operator over L 
(see Exercise 5.4.3).
Again using Proposition 4.8, as we did in the case of a unary operator above, we 
identify the points of the dual space of the free distributive lattice on L x M with 
subsets of L x M. Concretely, any prime filter F of FDL (L x M) gives a subset 
SF = F n (L x M) of L x M, and conversely, if S is any subset of L x M, then the 
filter FS ofFDL(LxM) generated by S is prime. Indeed, by Exercise 3.1.13, we have
FS = |u e FDL(L x M) | ^\ T < u for some finite T c S| , 
and this filter is prime: for any T c S finite, /\ T is join prime in FDL (L x M). That 
is, in disjunctive normal form, any u e FDL(L x M) is of the form u = ui, 
where each ui is the meet of a finite set of generators Ui c L x M and we have
n
T < 
Ui 
^^ T 2 Ui for some i with 1 < i < n.
Under this correspondence, if S c L x M is any subset and t, u e FDL (L x M) 
is a pair of lattice terms in the set of generators {a ^ b : a e L, b e M}, then 
we say S satisfies the equation t - u when the prime filter FS is in the subspace 
[[t - u J defined by the equation t - u, in the sense of the quotient-lattice-subspace 
duality of Theorem 4.27. In other words, saying that S satisfies t - u simply means 
that t e FS if, and only if, u e FS . The dual space of the congruence generated by 
a relation R on FDL (L x M) may then be identified with the collection of subsets 
S c L x M that satisfy all the equations in R.
In particular, in the following lemma we calculate the subspaces of 2L x M 
corresponding to the schemes (6.2) and (6.3). For any S c L x M, a e L, and 
b e M, we define Sa := {b e M | a ^ b e S} and Sb := {a e L | a ^ b e S}.
Lemma 6.25 A subset S c L x M satisfies (6.2) if, and only if, for each a e L, 
Sa is a filter of M and S c L x M satisfies schema (6.3) if, and only if, for each 
b e M, Sb is an ideal of L.
Proof We prove just the first statement as the second follows by symmetry and 
order duality. Since a ^ /\ G is a generator, a ^ /\ G e FS if, and only if, 
a ^ A G e S, while A{a ^ b I b e G} e FS if, and only if, {a ^ b | b e G} c S. 
That is, S satisfies all equalities in (6.2) if, and only if, for each a e L, the set Sa 
has the property that, for any finite subset G of S, A G is in Sa precisely when G is 
a subset of Sa. That is, if, and only if, Sa is a filter of M (see Exercise 3.1.1). 
□

6.4 Duality for Spaces of Relations and Functions 
217
We will establish, in Theorem 6.28, a first connection between the implication­
type operator and the function space construction. To do so, we need the following 
general definition of a topology on a function space.
Definition 6.26 Given two topological spaces Z1 and Z2, we denote the set of 
continuous functions from Z1 to Z2 by [Z1, Z2]. The compact-open topology2 on 
[Z1, Z2] is defined to be the topology generated by the subbase consisting of the 
sets
K ^ U := {f e [Z1, Z2] | f [K] c U} for K e KS(Z1) and U e Q(Z2),
where we recall that KS(Z1) denotes the collection of compact-saturated subsets 
of Z 1 and Q(Z2) denotes the collection of open subsets of Z2.
See Exercise 6.4.3 for more detail and some basic properties used in the proofs 
below.
Lemma 6.27 Let L be a distributive lattice with dual spectral space X and let M be 
a meet-semilattice. Then, the compact-open topology on [X, Filt( M)] is generated 
by the subbase consisting of the sets a ^ b for a e L and b e M.
Proof By Proposition 6.20, the space Filt( M) with the topology generated by the 
sets b for b e M is a spectral space, as it is the dual of Fa (M). Thus it follows, 
by Exercise 6.4.3, that the sets a ^ V for a e L and V compact-open in Filt(M) 
form a subbase for the topology on [X, Filt(M)]. The compact-opens of Filt( M) 
are finite unions of sets of the form b for b e M. Thus, we must show that such sets 
are in the topology generated by the a ^ b with a e L and b e M .To this end, let 
a e L and G c M be finite. Define C := {c e LG | a < VgeG cg}. We will prove 
that
a ^ jj g=u 
(cg ^ g) | ce C'.
For the right-to-left inclusion, let c e C be arbitrary and suppose that f e 
PgeG(cg ^ ?). For any x e a, since a < VgeG cg, there is g e G with x e cg, 
and since f e cg ^ g it follows that f (x) e g. Thus, f e a Ug eG g-
For the converse, let f e a 
UgeG g". For every x e a, pick gx e G with
f (x) e gx. Since f is continuous, f-1 (gx) is open. Since X is a spectral space, pick 
ax e L with x e ax c f-1 (gX). Then, a c |Jxea ax, and thus, by compactness of 
a, there is a finite F c a with a c |Jx eF ax.
2 Note that the adjective compact-open in “compact-open topology,” which is common in the literature, refers 
to the fact that the subbase is given by sets of functions determined by a compact and a (different) open set. 
This contrasts with the use of “compact-open set” throughout this book, meaning a single set that is compact 
and open, also common in the literature.

218 
6 Omega-Point Duality
Now, for each g e G, define cg := V{ax I x e F and gx = g}. Then, since each 
gx e G, we obtain
a < \y ax \J {\y {ax | x e F and gx = g}) = \J cg.
That is, c = (cg)geG e C. Also, for each x e a, we have ax c f -1 (gx), or
equivalently, f [ax] c gx, so f e ax ^ gx. Therefore, we obtain 
f e P| (ax ^ gx) p {p{ax ^ g | x e F and gx = g})
= A ([U{*x । x e F and gx = g}] ^ g) = A (cg ^ &’
where the second equality holds since ^, with the second argument fixed, sends 
finite unions in the first argument to finite intersections (see Exercise 6.4.3(b)(1)). 
Note that this is part of saying that ^ is an operation of implication type. □
Using our results above, we will now give a concrete description of the dual 
space of F^ (L, M) for arbitrary distributive lattices. In the following theorem, we 
will show that, viewed on the dual spectral spaces X and Y, the construction F^ 
corresponds to a space of upward Priestley compatible relations from X to Y, also 
see Exercise 6.4.1.
Theorem 6.28 Let L and M be distributive lattices and let X and Y be their 
respective dual spectral spaces. The spectral space dual to the distributive lattice 
F^(L, M) := FDL(L x M)/$, where $ is the congruence generated by the schemes 
(6.2) and (6.3) together, is homeomorphic to the space [X, V^ (Y)], of continuous 
functions from X to the upper Vietoris space of Y, equipped with the compact-open 
topology.
Proof By Proposition 6.22, the space V^(Y) is homeomorphic to Filt(M). It is 
therefore equivalent to prove that the dual space of F^ (L, M) is homeomorphic to 
the space [X, Filt(M)] with the compact-open topology. Also, by Lemma 6.25 and 
the considerations preceding it, the dual space of F^ (L, M) is the subspace Z of 
2LxM consisting of those subsets S of L x M for which Sa is a filter of M for each 
a e L and Sb is an ideal ofL for each b e M.
To prove the theorem, we will define a mutually inverse pair of continuous maps 
^ : Z 
[X, Filt(M)]: 0\ For S e Z, define a function ^(S) by
?(S): X 
> Filt(M), 
x ~ JiSa | a e Fx}.
We need to show that ^(S) is a well-defined, continuous function from X to Filt(M). 
To see that the function ^(S) is well defined - that is, that ^(S)(x) is a filter for 
every x e X - it suffices to show that the collection of filters {Sa | a e Fx} is 
directed, by Exercise 3.1.12. To this end, note that the assignment a ^ Sa is order 

6.4 Duality for Spaces of Relations and Functions 
219
reversing; indeed, if b e Sa, then a' e Sb, so a e Sb since Sb is a down-set, so that 
b e Sa. Thus, since Fx is down-directed, the collection {Sa | a e Fx} is up-directed, 
as required.
We now show that ^(S) is continuous. Let b e M. For every x e X, we have 
x e y(S)-1 (b) if, and only if, there exists a e Fx such that a — b e S; in a formula:
?(S)-1 (b) = U ?. 
(6.4)
c eSb
In particular, ^(S)-1 (b) is open for every b e M, so ^(S) is a continuous function 
from X to Filt(M).
For the inverse function ^, let f: X — Filt(M) be continuous. Define
^(f) := {a — b e L x M | a c f-1 (b)}.
We first show that ^ (f) e Z. Note that, for any b e M,
^(f )b = {a e L | a c f-1 (b)},
which is an ideal because ( ) preserves finite joins. Similarly, for any a e L,
^ (f )a = {b e M | f [a] c b},
and since () preserves finite meets, this is a filter. So, ^(f) e Z.
To show that ^ and ^ are mutually inverse, first note that, for any b e M, 
f e [X, Filt(M)] and x e X, we have
b e <p(^(f))(x) ^^ 3a e L and x e a c f-1 (b) ^^ b e f (x), 
where we use in the second equivalence that f is continuous. Thus, ^(^(f)) = f. 
Also, for any S e Z, a e L,andb e M , we have
a — b e ^(y(S)) ^^ a c ^(S)-1 (b) = 
c,
recalling (6.4). By compactness of X and the fact that () is an order embedding, 
the latter inclusion is equivalent to: There exists a finite subset C of Sb such that 
a < V C. Since Sb is an ideal, this is in turn equivalent to a e Sb, that is, a — b e S, 
as required.
It remains to prove that the bijections ^ and ^ between Z and [X, Filt(M)] are 
homeomorphisms. Observe that a basic open of Z , which is of the form
a —— b = {S e Z | a —— b e S},
is sent by ^ to the set
a — b = {f e [X, Filt(M)] | a c f-1 (b)}.
By Lemma 6.27, these sets form a base for [X, Filt( M)] with the compact-open 
topology, and thus both ^ and ^ are continuous. 
□

220
6 Omega-Point Duality
We may recover the upper Vietoris space construction itself as a special case 
of the “relation space” [X, Vf(Y)] used in Theorem 6.28. Indeed, notice that 
V(X) = [Xd, S] = [Xd, Vf(1)], where S is the Sierpinski space and 1 is the 
one-element space (see Exercise 6.4.2).
Remark 6.29 Let X and Y be spectral spaces with dual lattices L and M , respec­
tively. Then, we have shown that [X, Vf(Y)] is again a spectral space. Even though 
Vf (Y) is dual to the lattice Fa (M), obtained by freely adding a layer of unary dual 
operator to M, notice that the compact-opens are not given by the elements of L 
and Fa (M), but rather by the elements of L and M, see Example 6.35.
Remark 6.30 Notice that in Theorem 6.28 we are considering only operators of 
implication type but, with some order flips, this result may be transposed to other 
types of operators. For example, consider the construction that takes distributive 
lattices L and M and produces a distributive lattice F. (L, M) by freely adding a 
binary operation • that preserves finite meets in both coordinates; that is, keeping the 
analogue for • of scheme (6.2) and replacing (6.3) by (\ F) • b - /\{a • b | a e F} 
for each finite F c L and b e M. The dual space of this construction is then 
[Xd, Vf(Y)], where Xd denotes X equipped with the co-compact dual of the 
topology of X .
Preserving Joins at Primes
Let X and Y be spectral spaces with dual distributive lattices L and M, respec-
tively. We are interested in the space of continuous functions [X, Y], which can be 
regarded as a (generally non-spectral) subspace of the space of compatible relations 
[ X, V (Y)], as we explain now (see Exercise 6.4.4 for more details).
Denote by n: Y ^ Vf(Y) the embedding of Y in Vf(Y) given by y ^ fy. Then,
we have an injective function [X, Y] ^ [X, Vf (Y)] by sending f e [X, Y] to n ◦ f,
and a base for the topology on [X, Y], now viewed as a subspace of [X, V f(Y)], is
given by the sets a ^ b = (a ^ b) n [X, Y], for a e L and b e M. Even though
Y is a Priestley-closed subspace of Vf(Y), it is not in general the case that [X, Y]
is a Priestley-closed subspace of [X, Vf(Y)], reflecting the fact that [X, Y] is not in
general a spectral space; we give an explicit example of this occurrence in Example 
6.35. One would need to move to frames, sober spaces, and geometric theories to 
describe [X, Y] as the dual of a quotient. However, we have a finitary approximation 
of the subspace [X, Y], that we will give in Theorem 6.31. Here, recall from Section 
4.2 that if Z is a closed subspace of a Priestley space P, then the corresponding 
congruence F on the dual lattice A of P is given by
F = {(a, b) e A2 | a n Z = b n Z}, 

6.4 Duality for Spaces of Relations and Functions 
221
so that, for any a, b e A, we have
[a]# < [b]# if, and only if, for every z e Z, if z e a, then z eb. 
(6.5)
We apply this now in the case where P is the Priestley space associated to the 
spectral space [X, V^(Y)], whose topology, we recall, is the patch topology of the 
compact-open topology and its co-compact dual.
Theorem 6.31 Let L and M be distributive lattices, X and Y their respective 
dual spaces, and Z a subset of [X, V^(Y)] which is closed in the patch topology. 
Denote by b the congruence on F— (L, M) corresponding to Z. The following are 
equivalent:
(i) Z is a subset of [X, Y ]; and
(ii) for every x e X, a e Fx, and finite subset G C M, there is c e Fx such that
[ a — V G ], < [V {c — bib 6 G}] „■ 
(6-6)
Proof In light of Proposition 6.22, we will work with Filt(M) instead of V (Y), 
and we may consider Z as a subset of [X, Filt( M)]. As explained above, under 
the identification V (Y) = Filt(M), the subspace Y of V (Y) corresponds to the 
subspace PrFilt(M) of prime filters ofM,so[X, Y] corresponds to [X, PrFilt( M)].
First, suppose that (i) holds, that is, Z c [X, PrFilt( M)]. Let x e X, a e Fx, and 
G c M finite. We need to show that there exists c e Fx such that (6.6) holds. We 
will first show that, for any f e Z with f e a — \J G, there exist cf e Fx and 
bf e G such that f e cf — bf. To see this, let f e Z be arbitrary and suppose 
that f e a — (V G). Then, by definition, f [a] c y G and thus, as x e a, we have 
V G e f (x). Now, since f e Z c [X, PrFilt(M)], the filter f (x) is prime, so we 
may pick bf e G with bf e f (x), or equivalently, f (x) e b. Since f is continuous, 
pick cf e L with x e cf and f [cf ] c bf, or equivalently, f e cf — bf = c/ — bf. 
Now, the sets cf- — bf, for f ranging over the patch-closed set Z n a — (V G), are 
a cover of this set. By compactness of the patch topology, pick a finite subcover, 
indexed by f1,..., fn, say, and define c := /\n=1 cfi. Then, c e Fx since each cfi is 
in Fx. Let us show that for this c, (6.6) holds. Writing d := y{c — b | b e G}, 
we want to show that [a — V G]# < [d]#. For any f e Z, if f e a — y G, then 
f e c/i — bfi for some 1 < i < n .It now follows that f e d, since
cfi — bfi < c — bfi < d,
where we use first that — is order reversing in the first coordinate, and then that 
bfi e G. Thus, we have shown that for any f e Z, if f e a — V G, then f e cl. 
Using (6.5), we thus conclude (6.6).
Conversely, suppose (ii) holds. Let f e [X, Filt(M)] be in Z and x e X.If 
G C M is finite and V G e f (x), then, as f is continuous, there is a e L with

222
6 Omega-Point Duality
f [a] C y G, or equivalently, f e a — V G = a — (V G). Now, using (6.6), it 
follows that there are c e Fx and b e G with f e c — b. Thus, x e 'c and f [c] c b 
and thus b e f(x). That is, we have shown that f (x) is a prime filter and thus that 
f e [X, PrFilt(M)] = [X, Y], as required. 
□
Definition 6.32 Let K, L, and M be distributive lattices and let —: L x M — K be 
an implication-type operator. We say that — preserves joins at primes if, for every 
prime filter F of L, a e F, and finite subset G of M, there exists c e F such that 
a — \J G < \/{c — b | b e G}.
For a congruence $ on F— (L, M), we also say that $ makes — preserve joins at 
primes or — preserves joins at primes modulo $ if the equivalent properties in 
Theorem 6.31 hold.
Remark 6.33 To explain the above terminology, note that the property of preserv­
ing joins at primes modulo $ is equivalent to the property that, for each x e X , the 
following operation preserves finite joins:
x — (-): M — Idl(F—(L, M)/$)
b — ([a — b]^ | a e x)Id.
In a lattice with enough join primes, there is actually a largest congruence that 
makes — preserve joins at primes, see Corollary 6.34. This congruence is used 
crucially in Theorem 7.69 in Chapter 7.
The property of preserving joins at primes is closely related to being determined 
by finite quotients. See Theorem 8.45 in Chapter 8 and Gehrke (2016, Theorem 3.18) 
for another occurrence of this phenomenon in the setting of topological algebras 
on Boolean spaces. For a study of this notion via canonical extensions, see Fussner 
and Palmigiano (2019).
Recall that an element p in a lattice L is said to be join prime provided that, for any 
finite F c L, p < \J F implies that there exists a e F with p < a. Further, we say 
that L has enough join primes provided every element of L is the join of a finite set of 
join-prime elements. Also, recall from Chapter 1 that we denote by J (L) the poset 
of join-prime elements of L , with order inherited from L . The following special 
case of Theorem 6.31, where one of the two lattices is assumed to have enough join 
primes, is central to the treatment of the function space operator in Domain Theory 
in Logical Form (Abramsky, 1991), as we will also see in Section 7.4.
Corollary 6.34 LetLandM be distributive lattices and suppose L has enough join 
primes. Further, let X and Y be the dual spectral spaces of L and M, respectively. 
The space [X, Y] of continuous functions from X to Y equipped with the compact­
open topology, is dual to the congruence $jpp on F—(L, M) that is generated by the 
following set of equations:

6.4 Duality for Spaces of Relations and Functions
223
p ^\/ G «\/{P ^ b । b € G}, 
(6.7)
where p ranges over the join-prime elements of L and G ranges over the finite 
subsets of M.
Proof We first note that it suffices to prove that a congruence ft of F^ (L, M) 
makes ^ preserve joins at primes if, and only if, ftjpp is contained in ft. Indeed, 
by Theorem 6.31, this claim implies that ftjpp is the minimum congruence whose 
dual closed set is contained in [X, Y], and thus the dual Zjpp of F^ (L, M)/ftjpp 
is the maximum patch-closed subspace of [X, Y]. If Zjpp were a proper subset of 
[X, Y], then there would be f e [X, Y] - Zjpp, and Zjpp U {f} would still be patch 
closed, since singletons are closed in the patch topology. Thus, Zjpp must be the full 
subspace [X, Y].
To prove that ftjpp is indeed the minimum congruence that makes ^ preserve 
joins at primes, suppose first that ft is a congruence which makes ^ preserve joins 
at primes and let p e J(L) and G c M finite. Instantiating the condition (6.6) for 
Fx = tp and a = p, pick an element c e tP so that
[ P ^ V G ], < [V< c ^ bib e G}] ,•
Now, p < c implies that c ^ b < p ^ b in F^ (L, M), so the right-hand side of the 
above inequality is at most [V{p ^ b i b e G}]#. We conclude that
[ p ~ V G ], < [V{ p ~ b 1 b e G)] „■
The other inequality holds because ^ is order preserving in its second coordinate. 
Thus, ftjpp is contained in ft.
Conversely, suppose ft is a congruence that contains ftjpp and let x e X , a e Fx , 
and G c M be finite. Since Lhas enough join primes, there is a finite setF c J(L) 
so that a = V F. Also, since a e Fx and Fx is a prime filter, there is p e F with 
p e Fx. Further, as the function ^ from L X M to F^ (L X M) is an implication-type 
operator, we have a ^ \ G < p ^ \ G in F^ (L X M), since p < a .It follows that 
[ a ^ V G ]. < [ p ^ V G ], = [V< p ^ bib e G}]„,
using the assumption that ft contains ftJPP. Now, in the notation of Definition 6.32, 
taking c := p shows that ft makes ^ preserve joins at primes. 
□
We finish this subsection by giving the promised example that [X,Y] itself is not 
always a Priestley-closed subspace of [X, Vt(Y)].
Example 6.35 Let L be ± ® (Nop X 2) and X its dual spectral space, both as 
depicted in Figure 6.3. Here, xi = tai is a principal prime filter for each i e N, 
while x = L -{±} and y = {bi | i e N}. Further, we let Y be the finite spectral space

224
6 Omega-Point Duality
± •
X \
i \ y
x 2 ..
X1
X 0 o
Figure 6.3 The lattice L from Example 6.35 and the specialization order of its 
dual spectral space X .
Figure 6.4 The space Y from Example 6.35.
depicted in Figure 6.4. Note that [X, Y] is not compact since we have the following 
infinite cover, that clearly cannot have a finite subcover:
[X, Y] = (X ^ Tyi) U (X ^ Ty2) U J [(a0 ^ Tyi) n (bi ^ Ty2)] 
ieN
uj [(a0 >^'2) n (bi ^Tyi)].
i eN
This equality is saying that a continuous function f from X to Y either misses yi 
or it misses y2 and otherwise x 0 gets sent to yi or y2 and y gets sent to the other. 
In these last cases, only finitely many of the xi take the same value as x 0 and this 
means that there exists n e N such that the direct image of an under f is {y0}. 
Compare also to the proof of Lemma 6.27.
Exercises for Section 6.4
Exercise 6.4.1 Let M be a distributive lattice with dual Priestley space (X, p, <) 
and let (VT(X), t) be the upper Vietoris space of the spectral space (X, pT). This 

6.4 Duality for Spaces of Relations and Functions 
225
exercise makes a link between the calculation of the dual space of the lattice Fa (M) 
and the duality for unary operators □ of Section 4.3.
(a) 
Prove that Td, the co-compact dual topology of t, is generated by the base 
consisting of finite unions of sets of the form (□ a) c, for a e M.
(b) 
Conclude that the Priestley dual space of Fa (M) is order-homeomorphic to 
(VT(X), tp, <), where tp is the patch topology t V Td and < is the inclusion 
order.
(c) 
Explain how the result from the preceding item, together with Theorem 4.41, 
show that upward Priestley compatible relations R c X x Y are in bijection 
with continuous order-preserving functions f: X ^ V (Y).
Exercise 6.4.2 (a) Let 1 be the one-element space. Show that VT(1) is home­
omorphic to the Sierpinski space S.
(b) 
Let X be a stably compact space. Show that VT(X) is homeomorphic to 
[Xd, S] equipped with the compact-open topology.
Exercise 6.4.3 Let X and Y be topological spaces. Recall that [X, Y] denotes the 
set of continuous functions from X to Y .
(a) 
Give an example to show that the generating family
{K ^ U | K e KS(X), U e Q(Y)}
may fail to be closed under finite intersection and union.
(b) 
Let x e X, K, K1, K2 e KS(X), U, U1, U2 e Q(Y), U c Q(Y) a directed 
family, and C c KS(X) a filtering family. Prove:
(1) 
(K1 ^ U) n (K2 ^ U) = (K1 U K2) ^ U;
(2) 
(K ^ U1) n (K ^ U2) = K ^ (U1 n U2);
(3) 
(Tx ^ U1) U (Tx ^ U2) = Tx ^ (U1 U U2);
(4) 
K ^ (U U) = U{K ^ W | W eU}; and
(5) 
if X is a well-filtered space, then (Q C) ^ U = IJ{K ^ U | K e C}.
(c) 
Suppose that X is a locally compact space, that is, for any open set U and 
x e U, there exists a compact set K such that x e K c U. Prove that the 
specialization order on the space [X, Y] coincides with the pointwise ordering.
(d) 
Suppose G c KS(X) generates KS(X) as a join-semilattice and that B is a 
base for Y which is closed under finite unions. Show that
{K ^ U | K e G, U e B}
is a subbase for the compact-open topology on [X, Y].

226
6 Omega-Point Duality
Exercise 6.4.4 Let M be a distributive lattice and Y its Stone dual space. For every 
y e Y, define n(y) := Ty, which is a compact-saturated subset of Y, and thus an 
element of VT (Y).
(a) 
Prove that n is a spectral embedding.
(b) 
Show that the map n is dual to the quotient of Fa (M) under the congruence 
given by the scheme □(a V b) - □ a V □ b for a, b e M and n± - ±.
(c) 
Prove that, under the isomorphism of VT (Y) = Filt(M) of Proposition 6.22, 
the image of n is mapped to the set of prime filters of Y.
(d) 
Let L be a distributive lattice with Stone dual space X . Using the previous 
items and Lemma 6.27, prove that a base for the (not necessarily spectral!) 
subspace [X, Y] of [X,VT(Y)] is given by the sets
a ^ b := {f e [X, Y] | f [a] c b}, for a e L, b e M.
Note. In the setting of Priestley spaces, the more delicate issue of a two-sided 
version of the Vietoris functor was studied in Palmigiano (2004). Restricted to 
Boolean spaces, the Vietoris functor was also extensively studied in the context of 
modal logic (Kupke et al., 2004). This analysis was recently extended to dualities 
for the category of compact Hausdorff spaces in Bezhanishvili et al. (2022).
Notes for Chapter 6
The name “Stone space” has also been used for the more restricted class of spaces 
that we call Boolean spaces in this book. We prefer to avoid the name “Stone space” 
for a class of spaces, to avoid confusion. We do use the terminology “the Stone dual 
space of a lattice” to refer to the spectral space associated to a distributive lattice 
through Stone’s duality. Our choice of the terminology “spectral spaces” follows 
in particular the monograph Dickmann et al. (2019), the first chapters of which we 
recommend as useful complementary reading to the material in this chapter.

7
Domain Theory
In this chapter, we develop some of the order-topological theory of dcpos and 
domains and provide the key duality-theoretic elements that were used in Abramsky 
(1991) to solve so-called domain equations.
In denotational semantics, one seeks a category of mathematical objects, so- 
called denotational types, whose elements will model programs while the objects 
themselves model the “types” of the programs. In addition, program constructors 
should be modeled by functors, so-called type constructors. In particular, ifX andY 
are program types, then we want to be able to form the type which, given a program 
of type X as input, outputs a program of type Y. In the setting of a concrete category, 
this will mean that we want the set Hom(X, Y) to be endowed with structure in a 
natural way that makes it an object of the category whenever X and Y are; a 
formalization of this idea leads to the categorical definition of a Cartesian closed 
category. 1 In this setting, expressions involving the type constructors correspond 
to formal specifications of a program’s properties. In particular, type equations 
of the form X = F(X) correspond to recursive specifications, and their solutions 
are known as inductive types. The sought-after category should therefore be closed 
under a comprehensive set of type constructions, adequate for the needs of semantics 
of programming languages, as well as under solutions of type equations involving 
the type constructors. Finally, given the algorithmic nature of computing, it should 
also admit a reasonable notion of effective presentability.
1 We do not need to formally define this notion for our purposes in this chapter, the intuition of “Cartesian 
closed” meaning “has internal Hom-objects” suffices. We refer to, for example, p. 46 of Mac Lane and 
Moerdijk (1992) for the precise definition.
Scott and Strachey (1971) proposed to look for such a category within the category 
of dcpos with functions that are continuous with respect to the Scott topology, 
which we already briefly encountered back in Section 2.2 and will study in more 
detail starting in Section 7.1 of this chapter. Indeed, Scott originally considered the

228
7 Domain Theory
equation
X = [ X, X ],
which corresponds to the pure 2-calculus given by the program constructors of 
functional abstraction and composition. Scott’s solution for this equation looks 
within the category of dcpos with Scott continuous functions and seeks a dcpo X 
which is isomorphic to the dcpo of its Scott continuous endomorphisms.
While the category of dcpos is Cartesian closed, the category as a whole fails 
to admit a reasonable notion of effective presentation and the general constructions 
get fairly wild. Domains, which we study in Section 7.1, were introduced precisely 
as a subcollection of dcpos with a notion of relatively finite presentability. Further 
restricting to algebraic domains gives actual finite presentability. Indeed, Scott’s 
solution to X = [X, X] is an algebraic domain. However, neither categories of 
domains or algebraic domains are Cartesian closed, so they do not provide quite 
the right setting either. A further property of Scott’s solution is that it is profinite 
and thus falls within Stone duality.
Much further work by a large number of researchers confirmed that categorical 
methods, topology and in particular topological duality are central to the theory, 
see Scott and Strachey (1971), Plotkin (1976), Smyth and Plotkin (1982), Smyth 
(1983b), and Larsen and Winskel (1991). Abramsky went a step further in his view 
on duality-theoretic methods in this area. Rather than seeing Stone duality and its 
variants merely as useful technical tools for denotational semantics, he put Stone 
duality front and center stage. The centrality of duality and the general principles 
of the theory of domain equations is the subject of the two papers with the common 
title “domain theory in logical form”: while the main ideas are already put forward 
in Abramsky (1987), they come to their full and clear expression in Abramsky 
(1991), for which he won the IEEE Logic in Computer Science Test-of-Time Award 
in 2007. The subject is now commonly referred to by the title of these two papers 
or its acronym, DTLF.
Abramsky casts Stone duality as the mechanism which links programs to their 
models. Thus, Abramsky defines a program logic, in which denotational types 
correspond to theories, and the ensuing Lindenbaum-Tarski algebras of the theories 
are bounded distributive lattices, whose dual spaces yield the domains as types. The 
constructors involved in domain equations have duals under Stone duality which 
are constructors in the program logic, and solutions are obtained as duals of the 
solutions of the corresponding equation on the lattice side. For this purpose, one 
needs a Cartesian closed category of domains that are spectral spaces in their Scott 
topology, and several such had in the meantime been discovered. We will study 
such spectral domains in Section 7.2, and the more general class of spectral dcpos. 
While the latter, larger class, is not directly used in domain theory in logical form, 
its characterization was only previously announced in a conference abstract (Erne, 

7 Domain Theory
229
2009), and for completeness’ sake we give a proof of it in Section 7.2, see Theorem 
7.38. A reader who wants to get quickly to the domain theory in logical form 
material may safely skip that part of Section 7.2.
In Abramsky (1987), duality is restricted to the so-called Scott domains. These 
domains are fairly simple and are closed under many constructors, including func­
tion space, sums, products, and upper and lower powerdomains, but they are not 
closed under the convex powerdomain (corresponding to the two-sided Vietoris 
construction in topology). In Abramsky (1991), it is shown that his program goes 
through for the larger category of bifinite domains, although the mathematics, and 
especially the duality theory, is much more involved. See also the book of Zhang 
(1991) where many of the technical aspects of this theory were developed concur­
rently, albeit without the central focus on Stone duality.
We introduce bifinite domains and study them from a duality-theoretic perspec­
tive in Section 7.3. This category, which was originally introduced by Plotkin, has 
further closure properties. In particular, it is closed under the convex powerdomain 
construction. As shown in Smyth (1983a), this is optimal when restricted to count­
ably based algebraic domains with least element. The PhD dissertation of Jung 
(1989) completely described all Cartesian closed categories of algebraic domains 
and, shortly thereafter, Jung introduced two new categories, of L- and FS-domains, 
respectively, and showed these to be the maximal Cartesian closed categories of 
continuous domains (Jung, 1990).
This however is far from the end of the story as researchers in the area turned 
towards the probabilistic powerdomain, which forces one into the setting of contin­
uous domains. In order to include the unit interval, which is central in probability 
theory, one has to go beyond the profinite setting. This leads to the problem of 
finding a Cartesian closed category of continuous domains which is closed under 
the probabilistic powerdomain. See Jung and Tix (1998) for more on this problem 
and Goubault-Larrecq (2019), which surveys what was known at that time. The 
notes at the end of this chapter give some more bibliographic details on specific 
points.
We finish this extended introduction by giving a short outline of the chapter, in 
particular giving a road map for readers who want to get to Section 7.4, in some 
sense the heart of the chapter, as quickly as possible.
Section 7.1 introduces the notion of a domain, which may be seen either as a 
special kind of poset or as a special kind of sober topological space. In Section 7.2, 
we study the intersection of the class of domains with the class of spectral spaces, 
and show that, under Stone duality, the domains in this intersection correspond 
to a very natural class of distributive lattices (Theorem 7.45). We also establish 
that these domains are exactly the ones satisfying the properties in the “2/3 SFP 
Theorem” of Plotkin, see Abramsky and Jung (1994, Proposition 4.2.17).

230
7 Domain Theory
Each of these first two sections also contains an excursion to a purely duality- 
theoretic result; namely, in Section 7.1, we show that the Q-pt duality of Chapter 6 
restricts to the so-called Hoffmann-Lawson duality between completely distributive 
complete lattices and domains viewed as spaces (Theorem 7.21); in Section 7.2, in 
Theorem 7.38, we characterize the dcpos that are spectral spaces in their Scott topol­
ogy, a theorem first announced in Erne (2009). These two results are not directly 
important for the domain-theoretic applications in the later two sections of the chap­
ter and the rather intricate proofs may be skipped by a reader who wants to get to the 
duality-theoretic view on bifinite domains and domain equations as fast as possible.
In Section 7.3, we introduce and study bifinite domains, which form the category 
of domains in which we will constructively solve domain equations, and which 
moreover are interesting objects for a duality theorist because of their self-dual 
nature. We finish the chapter in Section 7.4 by showing how the duality-theoretic 
analysis of the function space construction done in the previous chapter in Section 
6.4 specializes in the case of bifinite domains, and how this allows one to reconstruct 
solutions to Scott’s equation X = [X, X].
7.1 Domains and Hoffmann-Lawson Duality
In a state space of computations, we may think of order as “further specification.” 
That is, two points p and q satisfy p < q provided q is a further specified state 
of the computation than the state p. A bottom element may then be thought of as 
the state of no specification at all, and often domain theorists will consider posets 
with bottom (called pointed posets) as a convenient set-up. A top element, on the 
other hand, would further specify all computations in the space. Since one usually 
would want to consider states leading toward different computations, it is most 
common in domain theory to consider posets without a top. When a top is added, it 
is often thought of as the inconsistent, overspecified state. Further, since a complex 
program which computes its output by finite approximation may be seen as the 
directed join of the finite approximations, the posets considered in domain theory 
are often assumed to be closed under suprema of directed sets. The final ingredient 
is that any point should be obtainable by directed supremum from “finite” or at least 
“relatively finite” points below it. The pertinent mathematical notions abstracting 
these ideas are as follows.
Definition 7.1 A partially ordered set P is directedly complete provided every 
directed subset of P has a supremum in P. A directedly complete partially ordered 
set is called a dcpo, for short. Let P and Q be dcpos and f: P ^ Q a map. Then, 
f is said to preserve directed joins provided f is order preserving and, for every 
directed set D, we have
f D = 
f [D].

7.1 Domains and Hoffmann-Lawson Duality
231
Note that since f is order preserving, f [D] is directed whenever D is (see Exercise 
7.1.1) and thus, both suprema in this equation exist. We denote by dcpo the non-full 
subcategory of Pos consisting of dcpos with as morphisms those order-preserving 
maps which preserve directed joins.
Remark 7.2 Here, we have included in the property of f preserving directed 
joins that f is order preserving, even though it is a consequence of preservation of 
directed joins. This reflects the fact that we consider dcpo as a subcategory of Pos. 
To avoid confusion, every time we state that a function preserves directed joins, we 
will make sure that it is also clear that this means that it must be order preserving.
While this category is given entirely in order-theoretic terms, as we will see, it 
is actually isomorphic to the full subcategory of Top consisting of (the underlying 
sets of) dcpos equipped with the Scott topology of the dcpo. One significant and 
interesting feature of dcpos is that, viewing them as posets, they are first-order 
structures. This allows access to a class of topological spaces (non first-order) 
based on first-order structures. However, being closed under directed joins is not 
a first-order property. Recall from Section 2.2 that the Scott topology on a poset 
(P, <) is the topology a(P, <) consisting of those sets U c P which are up-sets in 
the order and which are inaccessible by directed joins. That is, an up-set U c P is 
Scott open provided whenever D c P is directed and V D e U then D H U 0. 
Equivalently, we have that a set C c P is Scott closed if, and only if, C is a 
down-set, and whenever D c P is directed and D c C then V D e C• That is, 
a down-set C is Scott closed if, and only if, C is closed under directed joins. The 
specialization order of the Scott topology on a poset Pis equal to the original order 
on P (see Exercise 7.1.1(a)). A function f: P ^ Q between dcpos is said to be 
Scott continuous provided it is continuous with respect to the Scott topologies on 
P and Q.
Remark 7.3 In this chapter, as in the modern literature on domain theory, open sets 
are up-sets. As also noted in Remark 3.22, this clashes somewhat with the choice 
in Priestley duality theory, which we adhered to up until Chapter 6 in this book, 
that represents a distributive lattice L as the clopen down-sets of its Priestley dual 
space X. We already encountered a similar clash in Chapter 6: Recall from Theorem 
6.4 that the lattice of compact-opens of a spectral space (X, p) is isomorphic to 
the the lattice of clopen down-sets of (X, pp, <), where < is the opposite of the 
specialization order <p; see also Figure 6.1. Note that another way of saying this is 
that if L is a distributive lattice with Priestley space (X, t, <), then the associated 
spectral space (X, t^) of open up-sets has Lop as its lattice of compact-open sets.
Using up-sets or down-sets to represent lattice elements is ultimately an arbitrary 
choice, and there are valid arguments for either choice. Being flexible about this type 

232
7 Domain Theory
of “order yoga” is a somewhat cumbersome, but necessary, part of every duality 
theorist’s life. As a consequence, certain order-theoretic arguments in this chapter 
may sometimes look “upside down” from those in the earlier chapters of this book. 
We made the choice to adhere to the conventions from domain theory in this chapter 
and we will take care to warn the reader throughout the chapter when certain orders 
are the opposite of the orders used when we discussed Priestley duality.
As a general remark, for later use in this chapter, we note already that, since 
Priestley duality is order reversing on morphisms, see Proposition 5.39, the duality 
we consider here is order preserving on morphisms. That is, if f, g: X ^ Y are two 
spectral maps between spectral spaces and K and L are the lattices of compact-opens 
of X and Y, respectively, with f *, g*: L ^ K the dual lattice homomorphisms, then 
f < g in the pointwise order on spectral maps with respect to the specialization 
order on Y, if, and only if, f * < g* in the pointwise order on lattice homomorphisms 
with respect to the inclusion order on K .
Proposition 7.4 Let P and Q be dcpos and f: P ^ Q a map. The following 
conditions are equivalent:
(i) f is order preserving and preserves directed joins; and
(ii) f is Scott continuous.
Proof To show that (i) implies (ii), suppose f is order preserving and preserves 
directed joins and let U c Q be Scott open. First, since f is order preserving, 
f -1 (U) is an up-set. Now, suppose D c P is directed and V D e f-1 (U)■ Then, 
f[D] is directed in Q by Exercise 7.1.1(b) and, as f preserves directed joins, it 
follows that V f [D] = f (V D) e U■ Since U is Scott open, it follows that there is 
d e D with f (d) e U and thus d e f—1 (U) and we have proved that f -1 (U) is 
Scott open.
For the converse, suppose f is Scott continuous. By Exercise 2.2.5 in Chapter 2, 
any continuous function is order preserving with respect to the specialization order. 
Now, the specialization order of the Scott topology of a dcpo is equal to the order 
of the dcpo (see Exercise 7.1.1(a)). So, f is order preserving for the original orders 
on P and Q, respectively.
Now, suppose D c P is directed. Since f is order preserving, f[D] is directed 
and thus V f [D] exists in Q. Also since f is order preserving, it follows that 
V f [D] < f (V D)■ Now, consider C = ^(V f [D]). Since it is a principal down­
set, itis closed in the Scott topology. By (ii), f-1 (C) is closed in the Scott topology 
on P. Also note that by the definition of C and as f is order preserving we have 
D c f -1 (C). Therefore, V D e f -1 (C) or, equivalently, f (V D) e C. That is, 
f (V D) < V f [D], as required. 
□

7.1 Domains and Hoffmann-Lawson Duality
233
Corollary 7.5 The category dcpo is isomorphic to a full subcategory of the 
category Top of topological spaces with continuous maps.
Domain theorists often implicitly and harmlessly switch between the two per­
spectives that are provided by Corollary 7.5. However, this practice, combined with 
the practice of suppressing the structure in the denotation of a mathematical struc­
ture may lead to complications: There are topological spaces X which are dcpos in 
their specialization order, even though the original topology on X is not the Scott 
topology. To be able to state our results in this section, it will sometimes be con­
venient to keep the distinction between the two perspectives clear; to do so, when 
(P, <P) is a dcpo, we refer to (P, a(P, <P)) as the space of the dcpo P.
We also note that, despite the isomorphism of categories in Corollary 7.5, un­
expected things can happen in switching perspectives if one is not careful; for 
example, the Scott topology on the Cartesian product of two dcpos with the point­
wise ordering need not be equal to the product topology of the Scott topologies on 
the two dcpos, see Gierz et al. (2003, Exercise II-4.26). From a categorical point of 
view, this means that, if X and Y are dcpos, then X X Y with the pointwise order 
is the product of X and Y in the ambient category of posets, but the space of the 
dcpo X X Y is not necessarily the product in the ambient category of topological 
spaces. When we restrict to the full subcategory of dcpo on the objects that are 
domains, see Definition 7.10, this problem does not occur and finite products of 
Scott topologies equal the Scott topology of the topological products, see Gierz 
et al. (2003, Corollary II-4.14).
The notions of dcpo and of Scott continuity also arise naturally from a purely 
topological point of view, or more specifically, from the point of view of the Q-Pt 
duality, as follows.
Proposition 7.6 If (X, t) is a sober topological space, then (X, <T) is a dcpo and 
t c a((X, <t)).
Thus, any sober topological space X comes with a naturally associated dcpo, that 
we call the dcpo of the sober space X . The above proposition then says that the 
Scott topology of the dcpo of a sober space is always finer than (i.e., has at least as 
many open sets as) the original sober topology itself.
Before giving a proof of this proposition, we note that a proof via Q-Pt duality 
was outlined for spaces of the form Pt(L) where L is any frame in Exercise 6.3.6. 
Essentially, itis a direct consequence of the fact that the specialization order of Pt(L) 
is the inclusion order on completely prime filters and that these are closed under 
directed unions. By the Q-Pt duality, the sober spaces are, up to homeomorphism, 
precisely the spaces of the form Pt(L). Thus, this proves the proposition. Here we 
give a direct proof, not invoking the duality.

234
7 Domain Theory
Proof of Proposition 7.6 Suppose (X, t ) is sober. It suffices to prove the following:
Claim For any closed F c X and for any D c F directed in the specialization 
order <T, the supremum V D exists and belongs to F.
Indeed, this claim implies the proposition, for the following reasons. First of all, 
if D is an arbitrary directed subset of X , then choosing F = X we just get that 
V D exists. Further, since a subset of a poset is Scott closed if, and only if, it is a 
down-set and is closed under directed joins, we will in fact have shown that every 
t-closed set (which is necessarily a down-set in the specialization order) is Scott 
closed. Thus, t is contained in the Scott topology as claimed.
We now prove the claim. Let F be closed and D c F directed in <T. Define
F = {U e t | U n D + 0}.
It is easy to check that F is a completely prime filter; we only show that F is closed 
under binary intersection and leave the other parts to the reader. If U, V eF, then 
there are p, q e D with p e U and q e V . Since D is directed, there is some 
r e D which is above both p and q. Now, since open sets are always up-sets in the 
specialization order, it follows that r e U n V and thus U n V eF thus showing 
that F is closed under binary intersection.
Now, since F is a completely prime filter and X is sober, it follows from the 
definition of sobriety (Definition 6.18) that there exists x e X so that F = N (x). 
Since every open neighborhood of x intersects D c F and thus F and since F is 
closed, it follows that x e F .
Finally, we show that V D = x• Let y e D. We need to show that y <T x. Let 
U e t with y e U. Then, D n U + 0 and thus U e F = N(x). That is, x e U 
and thus we have shown that every open containing y contains x. That is, y <T x 
as required. On the other hand, suppose z e X is an upper bound for D. We show 
that x <T z. Let U e t with x e U, then U e N (x) = F and thus D n U + 0. Pick 
y e D n U. Since z is an upper bound of D, y <T z and thus z e U. That is, x <T z 
as required. 
□
Remark 7.7 The space of a dcpo does not need to be sober, see Johnstone (1981). 
In fact, understanding the frames of Scott open sets of dcpos seems a difficult 
problem, see Ho et al. (2018), in which it is shown that dcpos are not determined 
up to isomorphism by their closed set lattices (which are of course isomorphic to 
the order dual of the frames of Scott open sets). This will not be a problem for us 
here, because we will soon restrict to a class of dcpos all of whose spaces are sober, 
see Proposition 7.19.
Example 7.8 Let X be any set. Then, (X, =) is a dcpo and
a (X, =) = a (X, =) = 6 (X, =) = P (X).

7.1 Domains and Hoffmann-Lawson Duality
235
That is, relative to the trivial order, the Scott topology is equal to the Alexandrov 
topology and these are equal to the discrete topology on X .
In particular, this example shows that the space of the dcpo of any T1 topological 
space is discrete. Thus, the inclusion in Proposition 7.6 may very well be strict.
Example 7.9 The unit interval in its usual order ([0,1], <) is a complete lattice, 
so in particular a dcpo. Its Scott topology is generated by the half-open intervals, 
that is, the sets of the form (a, 1] = {x e [0,1] | a < x}, for a e [0,1], and is 
thus equal to the upper topology; the resulting topological space is in fact a stably 
compact space (see Section 2.3). The reader may verify that the corresponding 
compact ordered space carries the usual compact Hausdorff topology of the unit 
interval inherited from the usual topology on the real line and the order is the usual 
order inherited from the reals.
The following notions are of fundamental importance in computer science appli­
cations of dcpos.
Definition 7.10 An element k in a dcpo X is said to be a compact element provided 
for all directed D c X with k < ff D there is d e D with k < d. We will denote the 
set of compact elements of X by K(X) . Compact elements are sometimes called 
finite elements in the literature.
Let x, y e X. We say that x is way below y and write x y provided that, for all 
directed D c X, if y < y D, then there is d e D with x < d. Further, we denote 
by y the set of all elements of X that are way below y . That is,
ly = {x e X | x ■« y}
and y is defined similarly.
We call a dcpo X a domain, also known as a continuous dcpo, provided each 
element of X is the directed join of the elements way below it. More explicitly, 
for a dcpo X to be a domain, for any x e X , the set x must be directed, and its 
supremum must be x. We call X an algebraic dcpo or an algebraic domain provided 
each element of X is the directed join of the compact elements below it.
As the nomenclature “way below” suggests, x y implies x < y for any elements 
x, y of a dcpo X. Also, an element x in a dcpo X is compact if, and only if, x x 
(see Exercise 7.1.3). We note that, in the definition of a domain, it suffices to assume 
that each element x of the dcpo is the directed join of some directed subset of the 
elements way below x ; every element of the domain will then in fact be equal to 
the directed join of the set x (see Exercise 7.1.5). This fact can be quite useful in 
proofs, as we will see, for example, in the proof of Proposition 7.31.
We highlight an alternative characterization of algebraic domains that will be 
particularly important throughout the chapter, starting from Section 7.2. For a poset

236
7 Domain Theory
P, we call an order ideal of P a down-set that is directed; note that this definition 
generalizes the notion of ideal for a lattice L, see also the remarks following 
Theorem 6.19. We denote by Idl(P) the collection of ideals of P, ordered by 
inclusion. Now, Idl(P) is always an algebraic domain and an algebraic domain X 
is always isomorphic to Idl(K(X)); thus, a domain X is algebraic if, and only if, it 
is isomorphic to Idl(K(X)). Exercise 7.1.11 asks you to prove this equivalence, via 
some other equivalent characterizations of algebraic domains.
Example 7.11 For any set X, all elements of the dcpo (X, =) are compact and 
thus it is an algebraic domain.
Example 7.12 If (P, <) is any finite poset, then it is an algebraic domain; indeed, 
any directed subset of P is also finite, and therefore contains a maximum element. 
From this, it follows that xy if, and only if, x < y, so all elements are compact.
Example 7.13 In ([0,1], <), we have xy if, and only if, x = 0 or x < y. It 
follows that 0 is the only compact element and that the unit interval is a domain 
which is not algebraic.
Example 7.14 Let X be a set. The partial order (P(X), c) is an algebraic domain: 
We have xy if, and only if, x c y and x is finite (see Exercise 7.1.4). Thus, all 
finite subsets are compact elements of P(X) and each subset is the directed union 
of its finite subsets.
Example 7.15 Let (X, t) be a topological space. An open subset K c X is 
compact in the topological sense if, and only if, K is a compact element of the 
frame QX. That is, K(Q(X)) is equal to the set of compact-open subsets of X, 
which was denoted by KO(X) in Chapter 6.
Example 7.16 Let Part(X) denote the poset of partial functions on a set X with 
the order given by f < g if, and only if, g extends f. That is, dom(f) c dom(g) and 
f (x) = g(x) for all x e dom( f). Then again, the finite partial functions (i.e., those 
with finite domain) are the compact elements and Part( X) is an algebraic domain 
which is not a lattice (see Exercise 7.1.4). It does however have the property that 
all principal down-sets are complete lattices; in fact, they are complete and atomic 
Boolean algebras. Note that the total functions on X are the maximal elements of 
Part(X).
Toward proving that the space of a domain is always sober (Proposition 7.19), 
we now examine the way below relation on a domain in more detail.
Definition 7.17 A binary relation R on a set X is called interpolating if R c R • R.
Note that a relation R is idempotent, that is, R • R = R if, and only if, R is transitive 
and interpolating.

7.1 Domains and Hoffmann-Lawson Duality
237
Lemma 7.18 Let X be a domain. Then, is transitive, interpolating and, for each 
x e X, the set^x is Scott open. Furthermore, U c X is Scott open if, and only if,
U = J fx.
Proof Note that is transitive on any dcpo (see Exercise 7.1.3). To see that is 
interpolating, let x, y e X be such that x y. Since X is continuous, we have that 
x is way below
y V ly = V'{z I z e x , z « y}
= V (V zz I z e X, Z«y}
= 
Z,
where Z := UUz | z e X, z « y}. Since ^y is directed, the collection Uz | z e 
X, z y} is a directed family of sets in the inclusion order. Combining this with the 
fact that each z for z y is directed, it follows that the set Z is directed. Thus, there 
exist z, z' e X with x < zz y. It follows that x(^ •«)y (see Exercise 7.1.3).
To show that f x is Scott open, let D c X be directed with xV D. Then, there 
is x' e X with x xV D• Since xV D, there is d e D with x' < d. Now, 
since x x' it follows that x d and thus f x n D 0, showing that f x is Scott 
open. Consequently, any set U satisfying U = x e U x is also Scott open.
Finally, let U c X be Scott open. Clearly, since U is an up-set, in particular 
xeU x c U. For the reverse inclusion, let y e U.AsX is a domain, is the 
directed join of the set y. Since U is Scott open it follows that there is x y with 
x e U. Thus, y e IJxeU^x, as required. 
□
Proposition 7.19 Any domain is sober in its Scott topology.
Proof Let X be a domain and suppose F c X is a join-irreducible closed set for 
the Scott topology. We need to show that F = j.x for some x e X. Consider the set
F = {y e X | 3x e F y^x}
= {y e X | ^y n F + 0}.
We will first show that F is directed, so that it has a supremum, x, and we will 
then show that F = jx. Note first that F, being join irreducible, is non-empty. Pick 
x e F . Then, as X is a domain, x is directed and in particular non-empty. Thus, 
F is not empty. Let y1, y2 e F be arbitrary. Define Fi = ( yi)c for i = 1, 2. Then, 
since yi e F,, there is xi e F with yi xi and thus F Fi for both i = 1,2. Now 
since F1 and F2 are closed in the Scott topology by Lemma 7.18 and since F is a 
join-irreducible closed set, it follows that
F t F1 U F2 = (fy1 n fy2)c.

238
7 Domain Theory
Thus, pick z e F A y1 A y2. Since fyi is open for both i = 1,2, it follows that 
fy1 n fy2 is open. Therefore, since V z = z e ^y1 A y2, there exists zz with 
z' e fy1 n fy2. Thus, in particular, y1 < z' and y2 < z'. Also, since z'«z e F it 
follows that z' e FF and we have shown that FF is directed. Let x = V F. We 
show that F = jx. First, since F c jF c F and since F is closed, it follows that 
x = Vi F e F. Since F is a down-set, we get the containment j x c F. Conversely, 
for any x' e F, we have x' c FF and thus
x' = y ^x' <\J F = x.
That is, F c jx as required. 
□
Hoffmann-Lawson Duality
As a consequence of Corollary 7.5 and Proposition 7.19, the category Domain of 
domains with order-preserving maps that preserve directed joins (or equivalently, 
Scott continuous functions) is (isomorphic to) a full subcategory of the category 
Sober of sober topological spaces. Thus, it is natural to ask which category of spatial 
frames is dual in the Q-Pt duality to the category Domain. The appropriate frames 
are the completely distributive ones and the resulting duality is the Hoffmann- 
Lawson duality, as we will prove now. As noted in the introduction to this chapter, 
while this is an interesting excursion to a classical result in domain theory, it is not 
directly needed for the applications in Section 7.4, and can be skipped by readers 
wanting to get to those applications as quickly as possible.
Definition 7.20 A complete lattice Lis said to be completely distributive provided, 
for any family {Ai}ieI of subsets of L, we have
kn A i=Ma im(o) | O: I ^ L such that O(i) e Ai for each i e A.
ieI
For a family {Ai}ieI of sets, the functions O: I UieI Ai such that O(i) e Ai for 
each i e I are called choice functions on {Ai }ieI.
Since all suprema exist in a frame, any frame is in fact a complete lattice (see Ex­
ercise 1.2.2 and Exercise 6.2.2). Note that a completely distributive complete lattice 
is in particular a frame (Exercise 7.1.8), but not conversely (Exercise 7.1.6(b)).
We will show that Q-Pt duality further restricts to a duality between domains and 
completely distributive complete lattices.
Theorem 7.21 The Q-Pt duality between spatial frames and sober spaces cuts 
down to a duality between the category CDFrame of completely distributive com­
plete lattices with frame homomorphisms and the category of domains, Domain.

7.1 Domains and Hoffmann-Lawson Duality
Q
239
CDFrameop
Domain.
The remainder of this section is dedicated to proving Theorem 7.21. We first give 
an outline of the proof.
Outline of proof of Theorem 7.21 We have that:
(a) 
IfX is a domain, then X is sober (Proposition 7.19).
(b) 
If X is a domain, then Q(X) is completely distributive (Proposition 7.27).
(c) 
If L is completely distributive, then L is spatial (Corollary 7.30).
(d) 
If L is completely distributive, then Pt(L) is a domain and its topology is the 
Scott topology (Proposition 7.31 and Lemma 7.33).
This is precisely what is needed to show that the Q-Pt duality cuts down to a duality 
between domains and completely distributive complete lattices. 
□
Toward proving Proposition 7.27, we begin by studying in slightly more detail 
the class of completely distributive complete lattices. First, we give a simpler 
description of complete distributivity.
Proposition 7.22 A complete lattice L is completely distributive if, and only if, 
for all families (D i )i eI of down-sets of L, we have
Kff d i=v (n d i )• 
i el 
\ i el )
Proof First note that for any family of sets (Ai)ieI, f\ieI Ai = ieI v XAi and, 
for any choice function O: I ^ U i eI XAi, there is a choice function O': I ^ 
UieI Ai with O(i) < O'(i) for every i e I, and thus with /\ im(O) < /\ im(O'). It 
follows that it suffices to consider families of down-sets in the definition of complete 
distributivity.
Now the proposition follows if we can show that, for any family {Di}i eI of 
down-sets of L, we have
Di = 
im(O) | O is a choice function for {Di}ieI . 
(7.1)
ieI
Leta e ieI Di. Then, the constant function Oa on I given by O(i) = a for all i e I 
is a choice function for {Di }ieI and /\ im(Oa) = a. This proves the left-to-right 
containment in (7.1).

240
7 Domain Theory
On the other hand, if O is any choice function for {Di}ieI, then for any i e I, the 
element /\ im(O) is below O(i) e Di, and is thus in QieI Di. 
□
In order to understand completely distributive complete lattices, we introduce a 
strengthened variant of the way below relation, which is a relativized version of 
complete join-primeness in the same way that the way below relation is a relativized 
version of compactness for elements of a dcpo.
Definition 7.23 Let L be a complete lattice and a, b e L. We write b ^ a, or 
equivalently b e a, provided that, for any subset S of L, if a < V S, then there 
exists 5 e S such that b < s.
An element a in a complete lattice is called completely join prime if a ^ a (see 
Exercise 1.3.10). Note that a ^ b clearly implies a b. The following theorem is 
due to Raney (1953).
Theorem 7.24 (Raney’s theorem) A complete lattice L is completely distributive 
if, and only if,
for every a e L, 
a = a. 
(7.2)
Proof Suppose (7.2) holds and let {Di}ieI be a collection of down-sets of L.We 
define
d := e Di,
d"= V ((3 D'I'
We want to show that d = d'. In fact, for each i e I, since Qi eI Di c Di we have 
d' < V Di, so d' < d. We now show the reverse inequality, d < d'. To this end, let 
b ^ d. Then, b ^ V Di for each i e I. By the definition of ^ there is, for each 
i e I, an element di e Di with b < di. Since each Di is a down-set, it follows that 
b e Di for each i e I and thus b e ieI Di. That is,
dd C Q Di
and thus by (7.2) we have the desired inequality d = V id < d'.
For the converse implication, suppose L is completely distributive. Note that, for 
any a e L , we have
a = (y s | s e D(L) and a < 
S} .
This is because a is clearly a lower bound of the collection we are taking the 
infimum of and S := j a is a down-set of L with a = \j S. Now, applying complete 
distributivity we obtain
a = y (Q {S | S e D(L) and a < y S}).

7.1 Domains and Hoffmann-Lawson Duality
241
Finally, observe that
Q{ S | S eD (L) and a < \/ S} = i a. 
□
Corollary 7.25 Any completely distributive complete lattice is continuous.
This is a consequence of the relation between and ^ (see Exercise 7.1.9).
Corollary 7.26 The relation ^ is interpolating on a completely distributive 
complete lattice.
The proof of Corollary 7.26, which we ask you to give in Exercise 7.1.9, is 
a simpler version of the corresponding fact for on a domain (Lemma 7.18). 
For a more substantial consequence of Raney’s result, we prove one direction of 
Hoffmann-Lawson duality.
Proposition 7.27 Let X be a domain. The frame a (X) of Scott open subsets of X 
is completely distributive.
Proof Let U e a(X). Recall Lemma 7.18, in which we showed that, if X is a 
domain then, for each x e X, the set x is Scott open and U = x eU x. Thus, 
by Theorem 7.24, we may conclude that a(X) is completely distributive if we can 
show that f x ^ U for each x e U .To this end, note that if x e U and U = U i eI Ui, 
then there is i e I with x e Ui and thus fx c Tx c Ui and indeed fx^U. 
□
To prove that, conversely, any completely distributive complete lattice L is iso­
morphic to one of the form a(X) for some domain X, we need a few lemmas.
Lemma 7.28 Let L be a frame and let F, G be completely prime filters in L.If 
there is a e L with F c fa c G, then FG.
Proof If {Fi}ieI is a directed family of completely prime filters and G = ieI Fi, 
then a e Fi for some i e I and thus F c Ta c Fi. 
□
Lemma 7.29 Let L be a completely distributive complete lattice and a, b e L, 
then a^ b if, and only if, there exists a completely prime filter F in L such that 
T b c F c Ja.
Proof Suppose a^b. Since ^ is interpolating by Corollary 7.26, there is a se­
quence {bn}neN with a^bn+1 ^bn^b for all n e N. One may verify that F = 
neN Tbn is a completely prime filter (see Exercise 7.1.10) and that Tb c F cTa. 
For the converse, notice that if Tb c F cTa for some completely prime filter F
in L and b < V S, then there is 5 e S with 5 e F and thus a < 5. That is, a ^ b. □
Corollary 7.30 Any completely distributive complete lattice is a spatial frame.
Proof Let L be a completely distributive complete lattice. If a, b e L with a b 
then, by Raney’s Theorem, there is c e L with c ^ a but not c ^ b .By Lemma 
7.29 pick a completely prime filter F ofL with Ta c F c Tc. By Lemma 7.29 and

242 
7 Domain Theory
the fact that not c^b, we must have Tb £ F. That is, a e F and b £ F and thus L 
is spatial. 
□
Recall from Definition 6.12 that we adopt the “neutral space” notation for Pt(L), 
analogously to what we did in Notation 3.20 for the Priestley dual space of a 
distributive lattice. That is, we consider the set underlying Pt(L) as a fresh set of 
“names” that is in bijection with the set of completely prime filters of L. We denote 
elements of Pt(L) by x, y, z,..., and the corresponding completely prime filters 
respectively by Fx, Fy, Fz , et cetera.
Proposition 7.31 If L is a completely distributive complete lattice then the dcpo 
Pt( L ) is a domain.
Proof Let y e Pt(L) and b e Fy. Since V b = b e Fy, there is a e Fy with 
a^b. By Lemma 7.29, it follows that there is xb e Pt(L) with Tb £ Fxb £ Ta. 
Therefore, Fxb £ Ta £ Fy and, by Lemma 7.28, we have xby. Now, notice that
Fy = J{Tb I b e Fy} £ |J{Fxb I b e Fy}
£ J{Fx | 3a e L 
Fx £ Ta £ Fy} £ Fy.
Consequently,
y = 
{x e Pt(L) I3a e LFx £Ta £ Fy}.
By Lemma 7.28, it follows that y is the join of a subfamily of y. If we can show 
that this collection is directed, we can conclude that Pt(L) is a domain by Exercise 
7.1.5. To this end suppose Fx £Ta £ Fy and Fz £Tb £ Fy. Since both a and b 
belong to Fy, we have c = a A b e Fy. Now, since c = V i c, there is d ^ c with 
d e Fy. By Lemma 7.29, it follows that there is s e Pt(L) with Tc £ Fs £Td. Since 
a and b are both above c, it follows that Fx £Ta £Tc £ Fs and Fz £Tb £Tc £ Fs. 
Finally, since d e Fy, we have Fs £ Td £ Fy and thus x, z 5 y. We conclude 
that {x e Pt(L) | 3a e L Fx £ Ta £ Fy} is indeed directed. 
□
Corollary 7.32 If L is a completely distributive complete lattice and x, y e Pt(L), 
then xy if, and only if, there exists an a e L with Fx £ Ta £ Fy.
Proof By Lemma 7.28 the “if” part is always true. For the converse, note that, in 
the proof of Proposition 7.31, we proved that if y e Pt(L), then
y = 
{z e Pt(L) |3a e LFz £Ta £ Fy}
and that this join is directed. Thus, if x y, then there is z e Pt(L) and a e L so 
that Fz £ Ta £ Fy and x < z, but then Fx £ Ta £ Fy. 
□
Lemma 7.33 If L is a completely distributive complete lattice, then the topology 
on Pt(L) is equal to the Scott topology of its specialization order.

7.1 Domains and Hoffmann-Lawson Duality
243
Proof Since any space in the image of the Pt functor is sober, it follows by 
Proposition 7.6 that the topology of Pt(L) is contained in the Scott topology.
For the converse, let U c Pt(L) be Scott open. Recall from Definition 6.12 that 
the topology of Pt(L) consists of the sets a = {x e Pt(L) | a e Fx} for a e L. Let 
a = \/ (A Fx । x e U} •
We claim that U = a. First, if a e Fy, then as Fy is completely prime, there is x e U 
with /\ Fx e Fy .It follows that Fx c Fy or equivalently that x < y and thus y e U. 
That is, a c U .On the other hand, if x e U then, since Pt( L) is a domain, there is 
y e U with y x .By Corollary 7.32, there is b e L with Fy c ^ b c Fx. It follows 
that b < /\ Fy < a. Finally, since b e Fx also a e Fx and x e a. 
□
This concludes the last piece of the proof of Theorem 7.21.
Exercises for Section 7.1
Exercise 7.1.1 Let P and Q be dcpos and f: P w Q a map.
(a) 
Show that the specialization order of the topological space (P, a(P, <)) is the 
original order < on P.
(b) 
Show that if f is order preserving and D c P is directed, then so is f(D) .
(c) 
Show that
S: dcpo w Top
(P, <) w (P,a(P, <))
f w f
is a functor whose image is a full subcategory of Top. Further, show that if 
S(P) and S(Q) are homeomorphic as topological spaces, then P and Q are 
isomorphic as posets.
Exercise 7.1.2 Let (X, <) be a partially ordered set.
(a) 
Show that the Scott topology on the poset D = D(X, <), ordered by subset 
inclusion, is equal to its upper topology.
(b) 
Show that these topologies are generated by the principal up-sets Ux = {V e 
D|x e V }, where x ranges over the elements of X .
(c) 
Show that the resulting space is stably compact.
(d) 
Show that the associated compact ordered space is a Priestley space.
Exercise 7.1.3 Let (X, <) be a dcpo and x e X.
(a) 
Show that x is way below itself if, and only if, x is a compact element of X .

244
7 Domain Theory
(b) 
Show that the way below relation is contained in the order relation.
(c) 
Show that <•«•<= «.
(d) 
Show that the set x is closed under any existing binary joins. That is, if 
y, z e 4;* and y V z exists in X, then y V z e ^x.
Exercise 7.1.4 Let X be a set.
(a) 
Prove that in the dcpo (P(X), c), xy if, and only if, x c y and x is finite.
(b) 
Draw the Hasse diagram of the partial order Part( X) in case X has two 
elements.
(c) 
Characterize the way below relation in the dcpo (Part(X), <) of Example 
7.16.
(d) 
Show that (Part(X), <) is not a lattice when X has at least two elements.
(e) 
Show that, for any f e Part(X), the sub-poset jf is isomorphic to 
(P(dom( f)), c).
Exercise 7.1.5 Prove that if X is a dcpo in which every element is the join of some 
directed set of elements way below it, then X is a domain.
Exercise 7.1.6 Prove each of the following statements:
(a) 
A complete lattice L is completely distributive if, and only if, its order dual 
is completely distributive.
(b) 
There are frames which are not completely distributive.
(c) 
There are completely distributive frames with no completely join-irreducible 
or completely meet-irreducible elements.
(d) 
A complete Boolean algebra is completely distributive if, and only if, it is 
atomic (see Exercise 6.3.2).
Exercise 7.1.7 An element j of a complete lattice L is called completely join- 
irreducible if, for any S c L, if j = y S, then j e S.
(a) 
Show that a completely join-prime element is always completely join irre­
ducible.
(b) 
Show that, if L is a frame, then any completely join-irreducible element is 
completely join prime.
Exercise 7.1.8 This exercise compares the complete distributivity law to the 
strictly weaker frame distributivity law.
(a) 
Prove that a complete lattice L is a frame if, and only if, the complete dis­
tributive law holds in L for finite collections, that is, if for any finite index set 
I and any collection {Ai}ieI of subsets of L,
AV A i = \Z V\ im(°) I °: I ^ L a choice function for {Ai }ieI .
ieI

7.1 Domains and Hoffmann-Lawson Duality
245
(b) 
Formulate a “directed distributive law” (DDL) such that a complete lattice is 
completely distributive if, and only if, it is a frame that satisfies DDL.
Exercise 7.1.9 Let L be a completely distributive complete lattice and a e L.
(a) Show that any finite join of a subset of a is in a. Hint. Use Exercise 7.1.3(d). 
(b) Show that L is continuous.
(c) 
Show that ^ is interpolating. Hint. The proof is similar to the corresponding 
proof for given in Lemma 7.18.
Exercise 7.1.10 Let L be a frame and S c L which is filtering with respect to ^. 
That is, if a, b e S, then there is c e S with c ^ a and c ^ b. Show that F = tS 
is a completely prime filter of L .
Exercise 7.1.11 LetX be a domain. Recall that K(X) denotes the poset of compact 
elements of X, and for a poset P, Idl(P) denotes the collection of order ideals of 
P; that is, down-sets that are up-directed. Show that the following conditions on X 
are equivalent:
(i) 
X is algebraic;
(ii) 
X = Idl(K( X));
(iii) 
the frame of opens of X is isomorphic to U (K(X));
(iv) 
the frame of opens of X is isomorphic to U (P) for some poset P; and
(v) 
X is isomorphic to Idl(P) for some poset P.
Exercise 7.1.12 Let P and Q be posets. A relation R c P x Q is called approx­
imate provided >P • R • >q = R and R[p] = {q e G | pRq} is directed for each 
p e P. Show that the category Alg of algebraic domains is equivalent to the cat­
egory Posapprox of posets with approximable relations via the functors which send 
an algebraic domain to its poset of compact elements and a poset to the algebraic 
domain of its order ideals.
Note. Exercise 6.3.7 is related to this exercise in the case where the Scott topol­
ogy on the algebraic domain is spectral, a situation that we will study in Section 
7.2. The notion of bases and approximable relations between them allows one to 
generalize the equivalence between Posapprox and algebraic domains in this exercise 
to continuous domains in general, see Abramsky and Jung (1994, Section 2.2.6).
Exercise 7.1.13 LetX be an algebraic domain. Show that U c X is compact-open 
in X if, and only if, U = tF for some finite F c K(X). Conclude that the compact­
open subsets of an algebraic domain form a base for the Scott topology on X which 
is closed under finite unions.

246
7 Domain Theory
7.2 Dcpos and Domains That Are Spectral
It is particularly interesting to know which dcpos and domains are such that their 
associated space is spectral. The topological spaces that are simultaneously spec­
tral and Scott topologies of their specialization order have been characterized by 
Marcel Erne. While these spaces originally went by the name hyperspectral spaces, 
we will call them spectral dcpos here, in light of our convention that a dcpo is 
always equipped with its Scott topology. The first result of this section, Theorem 
7.38, characterizes spectral dcpos as the coherent sober spaces which have a base 
of open finitely generated up-sets. While this result is not immediately needed 
for domain theory in logical form, we believe it answers a very natural question 
about the relationship between spectral spaces and dcpos. We therefore include a 
full proof of it here, as far as we are aware for the first time in writing, since the 
statement was so far only available in a conference abstract (Erne, 2009). Again, a 
reader who wants to get to the applications of duality to domain theory in logical 
form as quickly as possible may just read the relevant definitions and statement of 
Theorem 7.38.
An important class of spaces that is directly relevant to the rest of this chapter 
and that we begin to study on p. 251 is obtained by restricting the class of spectral 
dcpos to those that are also domains; we refer to these objects as spectral domains 
here. These spaces have very nice descriptions both as spaces and as posets, which 
we will study in detail in the second part of this section. We will show in Theorem 
7.47 that, in topological terms, these domains are precisely the spectral spaces 
whose compact-opens are finite unions of union-irreducible compact-opens, and 
in order-theoretic terms they are precisely the completions under directed joins of 
so-called finitely MUB-complete posets, see Corollary 7.48.
In Section 7.3, we will introduce a further subcategory of the category of spectral 
domains, namely the bifinite domains. These are central to domain theory in logical 
form as treated in Abramsky (1991). Figure 7.1 gives an overview of the relevant 
classes of spaces and their relationships.
Spectral Dcpos
Our goal in this subsection is to characterize spectral dcpos, defined as follows.
Definition 7.34 A topological space (X, t ) is called a spectral dcpo if the topology 
t is spectral and t is equal to the Scott topology of its specialization order.
The characterization will make crucial use of the following notion of a finitely 
generated up-set.

7.2 Dcpos and Domains That Are Spectral
247
Figure 7.1 The various spaces of interest: Within the sober spaces, stably com­
pact spaces allow a duality between open and compact-saturated sets, and Spec 
is a special case of this (see Chapter 6). Within the dcpos, Domain is a particu­
larly important class of spaces allowing “relatively-finite” approximation. We will 
identify both the spaces in the intersection of dcpo and Spec, namely spectral 
dcpos, and the spaces in the intersection of Domain and Spec, namely spectral 
domains. Bifinite domains form a Cartesian closed category, Bif, of spaces in the 
intersection of Domain and Spec that is the setting of DTLF as elaborated by 
Abramsky.
Definition 7.35 Let X be a poset. A finitely generated up-set is an up-set T c X 
such that T = TF for some finite subset F c X.
In a topological space X , a finitely generated up-set in the specialization order of 
X is sometimes called a hypercompact saturated subset or a tooth of X , but we will 
also use the term finitely generated up-set for this concept, where it is understood 
that we mean finitely generated up-set in the specialization order.
A finitely generated up-set in a topological space X is clearly compact, since only 
finitely many opens are needed to cover a finite set and, since opens are up-sets, 
they cover the up-set generated by any set they contain. Importantly for us, in Scott 
topologies, the converse also holds.
Lemma 7.36 Let X be a poset and V c X a Scott open subset. Then, V is compact 
in the Scott topology on X if, and only if, V is a finitely generated up-set.

248
7 Domain Theory
Proof We only need to show the necessity, as sufficiency holds in any topological 
space. Any compact-saturated subset of a T0 space is the up-set of its minimal points 
(see Exercise 7.2.1). We show that, for each x e min(V), the set
Ux = (V - min(V)) U {x}
is Scott open in X. To this end, let D be a directed subset of X with V D e Ux. 
Then, V D e V and thus there is y e D n V .If y > V D, then y = V D e Ux. 
Otherwise, there is z e D with z y. Now, since D is directed, there is 5 e D with 
y, z < 5. In fact, since z y, y < 5. Thus, 5 e D n (V - min(V)) c Ux as required.
It follows that {Ux | x e min(V)} is an open cover of V. By compactness it has a 
finite subcover. However, this implies that min(V) is finite and thus V is a finitely 
generated up-set. 
□
We note the following immediate corollary, which will be important in the next 
subsection when we characterize spectral domains.
Corollary 7.37 Let X be a spectral dcpo. A subset of X is compact-open if, and 
only if, it is an finitely generated open up-set. In particular, a finite intersection of 
finitely generated open up-sets in X is a finitely generated open up-set.
Proof The first statement holds by Lemma 7.36. The in particular statement fol­
lows because the compact-opens in a spectral space are closed under finite inter­
sections. 
□
Recall from Section 2.3 that a compact space is called coherent provided the 
intersection of any two compact-saturated subsets is again compact. Also recall 
from Exercise 6.3.5 that a topological space is a spectral space provided it is 
compact, T0, coherent, sober, and has a base of compact-open subsets. Our goal 
in this subsection is to prove the following characterization of spectral dcpos, first 
announced in Erne (2009).
Theorem 7.38 Let (X, t) be a topological space. Then, X is a spectral dcpo if, 
and only if, the topology t is coherent, sober, and has a base of finitely generated 
open up-sets.
The proof of Theorem 7.38 will be a relatively straightforward combination of 
things we have already seen, with the notable exception of one crucial step, namely 
Proposition 7.41. We first prove a simple lemma on spaces having a base of finitely 
generated open up-sets.
Lemma 7.39 Let X be a topological space. If X has a base of finitely generated 
open up-sets, then every compact-open in X is a finitely generated up-set.
Proof Let U c X be compact-open. Since itis open, itis the union of all the open 
finitely generated up-sets it contains, and as U is compact, it is the union of finitely 

7.2 Dcpos and Domains That Are Spectral 
249
many such finitely generated open up-sets, TF1,..., TFn. But generating up-sets is 
union preserving and thus
U = T F1 U---UT Fn = T( F1 U ... U Fn). 
□
We also require Rudin’s lemma, which is often useful in topology. Like the 
Alexander subbase theorem, it requires a non-constructive principle. Our statement 
and proof is based on Gierz et al. (1980, Lemma III-3.3).
Lemma 7.40 (Rudin’s lemma) Let X be a poset and F a collection of finite 
non-empty subsets of X with the property that the collection
{TF | F e F}
is filtering. Then, there is a directed set D c |J F so that D n F 0 for each 
FeF.
Proof Consider the collection S consisting of all subsets E c F with the 
following two properties:
(a) 
E n F + 0 for all F e F; and
(b) 
forallF,G eF,ifG cTFthenE n G cT(E nF).
Notice that U F e S and thus S is non-empty. We show that any chain C in S has 
a lower bound in S. To this end, let D := C. We claim that D has the required 
properties. First, we show that D eS.FixF eF. Then, as C is a chain, so is 
{EnF | E eC}. Also, since F is finite, itis a finite chain, and by item (a), it consists 
of non-empty subsets of F. It follows that it has a minimum 0 E0 n F c F, where 
E0 eC. It follows that
D n F = 
{E n F | E e C} = E0 n F + 0.
Now, consider F, G eFwith G cTF. As argued above, there are elements 
E1, E2 eCso that D nF = E1 nF and D n G = E2 n G. Now, since C is a chain E1 
and E2 are comparable, and we let E be the smaller of the two. Then, by minimality, 
we have
D nF = E1 nF = EnF and D n G = E2 n G = E n G.
Finally, since E eS,wehaveDnG = EnG c T(EnF) = T(DnF) as required. It 
follows, by Zorn’s lemma, that S contains minimal elements (i.e., maximal elements 
with respect to the order given by reverse inclusion).
Before concluding, we make the following observation. Let E eSand x e X 
with the following property
VF e F E n F t Tx. 
(7.3)

250
7 Domain Theory
We claim that E' = E n (tx)c is again in S. To this end, first note that (7.3) is 
equivalent to E n F n (tx)c + 0 for all F e F, so that item (a) holds for E'. For 
item (b), first notice that for any S c X we have tS n (tx)c c t[S n (tx)c]. Now, 
if F, G e F with G c t F then we have
E' n G = E n G n (tx)c c t(E n F) n (tx)c 
c t[E n F n (tx)c] = t(E’ n F).
Now, let D eSbe minimal. Then removing elements from D results in a set not 
in S, thus the negation of (7.3) holds for each x e D. That is,
Vx e D 3 F e F D n F c tx. 
(7.4)
We show that this implies that D is directed. Let x, y e D. Pick F, G eF with 
D n F ctx and D n G cty. Since {tH | H eF}is filtering, there is H eFwith 
H ctF ntG. Finally, as D eS, there is z e D n H. It follows that z e D and
z e H ctFntG ctxnty
and thus D is directed. 
□
Proposition 7.41 LetX be a coherent sober space with a base of finitely generated 
open up-sets. Then, any Scott open set in the specialization order of X is open in X .
Proof Let U c X be Scott open. We want to show that for each x e U, there is a 
finitely generated open up-set tF with x etF c U. By contraposition, assume that 
x e X is such that for any finite F c X, if tF is open and contains x, then F £ U. 
We show that x £ U. Consider the collection
F := {F - U | F is finite, tF is open, and x e tF}.
We show that G = {tG | G eF}is filtering. For this purpose let F1, F2 be finite 
subsets ofX with x etFi and tFi open for i = 1, 2. Since tF1 and tF2 are compact­
open and X is coherent, we get that tF1 ntF2 is compact-open. By Lemma 7.39, 
there exists a finite subset F c X such that tF1 ntF2 = tF. It follows from this 
equality that x etF and tF is open. We show that F - U c t(Fi - U) for i = 1, 2. 
Since t F c t Fi we have F - U c t Fi .Let z e F - U and let y e Fi with y < z. Since 
z U and U is an up-set, we have y U .So y e Fi - U and thus F - U c t( Fi - U) 
for i = 1, 2.
Therefore, by Rudin’s lemma, there is a directed subset
Dc FcX-U
with D n (F - U) + 0 for each finite subset F of X with tF open and x e tF. Now, 
on the one hand, since U is Scott open, it follows that V D U, and on the other 
hand, since
D e {tF | F is finite and x etF is open} = tx,

7.2 Dcpos and Domains That Are Spectral
251
it follows that x < V D and thus x £ U as required. 
□
With Proposition 7.41 in hand, we can now prove Theorem 7.38.
Proof of Theorem 7.38 First, assuming X is a spectral dcpo, the compact-open 
sets form a base by definition of spectral spaces, but the compact Scott open sets 
are the finitely generated open up-sets by Lemma 7.36; thus, X has a base of finitely 
generated open up-sets.
Now, assume that X is coherent, sober, and has a base of finitely generated open 
up-sets. The specialization order of a sober space is a dcpo by Proposition 7.6, and 
the topology is spectral because finitely generated up-sets are always compact in 
the Scott topology. Also, by Proposition 7.6, t is contained in the Scott topology of 
<T. But the Scott topology of <T is also contained in t, by Proposition 7.41. □
Spectral Domains
Having characterized the spectral dcpos, we now restrict our attention to domains 
whose associated space is spectral.
Definition 7.42 Let X be a domain. We call X a spectral domain if the Scott 
topology on X is spectral.
If X is a spectral domain, then X is a spectral dcpo, and X is compact, so 
by Corollary 7.37, X can only have a finite number of minimal elements. In any 
poset, it is clear that the union of two finitely generated up-sets is again a finitely 
generated up-set. On the other hand, it is not true in general that the finitely gen­
erated open up-sets of a domain are closed under binary intersection (see Exercise 
7.2.2), while this must be true in a spectral dcpo, and thus in particular in spectral 
domains.
For a general spectral dcpo, itis hard to understand in order-theoretic terms what it 
means for the finitely generated open up-sets to be closed under binary intersections, 
as we do not know which finite subsets F c X generate opens. However, if X is 
not just a dcpo but a domain, then the description of the compact-open subsets 
simplifies substantially, as we show now.
Proposition 7.43 Let X be a spectral domain. Then, U c X is compact-open if, 
and only if, U = TF for some finite set F C K(X) of compact elements of X. In 
particular, X is an algebraic domain.
Proof For any x e K(X), we have Tx = fx, which is a Scott open set by Lemma 
7.18. Thus, for any subset F C K(X), TF = IJ{Tx I x e F} is open. Since 
any finitely generated up-set is compact, it follows that TF is compact-open when 
F C K(X) is finite.
For the converse, suppose that U C X is compact-open. Then, by Corollary 7.37, 
U is a finitely generated open up-set. Write F for the finite set of minimal elements 

252
7 Domain Theory
of U. We show that F c K( X). Let x e F .By Lemma 7.18, since U is open, there 
is y e U with v«x and thus, in particular, y < x. Since x is minimal in U, it follows 
that y = x, so that xx, that is, x is a compact element of X.
For the “in particular” statement, let y e X be arbitrary. We need to prove that 
y = VUy n K(X)). Since X is a domain, we have that y = Viy, so it suffices 
to prove that, for any yy, there exists a compact element xy with y' < x. 
Let yy be arbitrary. Since is interpolating by Lemma 7.18, pick z e X with 
yzy. Since z e ^y', which is open, and since X is a spectral space, there is 
a compact-open set U such that z e U c fy'. Since U is the upward closure of 
finitely many compact elements, there exists a compact element x e K(X) n U such 
that x < z. Since x e U, we have y x, so in particular y' < x. Also, x < zy, so 
xy, as required. 
□
Recall that an element p in a lattice L is said to be join prime provided that, for 
any finite F c L, p < F implies that there exists a e F with p < a. Further, we 
say that L has enough join primes provided every element of L is the join of a finite 
set of join-prime elements.
Also recall that, when X is a spectral space, “the distributive lattice dual to X”is 
by definition the lattice K O(X) of compact-open sets of X, also see Figure 6.1.
Corollary 7.44 Let X be a spectral domain. Then, the distributive lattice L dual 
to X is isomorphic to the poset of finitely generated up-sets of K(X) with the set- 
theoretic operations of intersection and union. In particular, L has enough join 
primes.
Proof Consider the function from the poset of finitely generated up-sets of K(X) 
to KO(X) that sends T c K(X) to the up-set TT of X. By Proposition 7.43, this 
is a well-defined surjective map, and it is clearly an order embedding. The poset of 
finitely generated up-sets of K(X) clearly has enough join primes, as each Tx with 
x e K(X) is join prime, and finitely generated up-sets of K(X) are finite unions of 
such. 
□
Corollary 7.44 shows that, for a spectral domain X, the poset K(X) completely 
determines the lattice L dual to X , and thus also X itself. In particular, the 
poset K(X) is isomorphic to J (L)op, as can be seen from Exercise 1.3.8 (also 
see Exercise 7.2.5). We now show that the spectral domains are in fact precisely 
the duals of the distributive lattices with enough join primes. Even though this 
theorem was first proved through the work of domain theorists in the 1980s and 
1990s, culminating in the duality-theoretic formulation given here, a closely related 
result coming from a model- and set-theoretic tradition is Bekkali et al. (2007, 
Proposition 2.8).

7.2 Dcpos and Domains That Are Spectral
253
Theorem 7.45 Stone’s duality between spectral spaces and distributive lattices 
restricts to a duality between spectral domains and distributive lattices with enough 
join primes.
Proof Corollary 7.44 establishes that the distributive lattice dual to a spectral 
domain has enough join primes. It remains to prove that the spaces of the form 
St(L), where L is a distributive lattice with enough join primes, are precisely the 
spectral domains. Let L be a distributive lattice with enough join primes and X 
its Stone dual. Then, X is clearly spectral. We show that it is a domain in its 
specialization order. Each join prime p of L gives rise to a principal prime filter 
x = tp and any such element x is a compact element of X. Now, let x, y e X with 
x y, then there is a e L with a e x but a £ y. Since a is a finite join of join 
primes and x is a prime filter, there is p e J (L) with p < a and p e x. Since 
a £ y it follows that p £ y. That is, tp < x and tp y and thus each element of 
X is a join of compact elements. It remains to show that this join is directed. Let 
p, q e J (L) and x e X with p, q e x. Then, p A q e x and thus, as above for a, 
there is r e J (L) with r < p A q and r e x .It follows that tp, t q < t r < x in X 
and thus we have shown that X is a spectral domain. 
□
The duality in Theorem 7.45 is centered around the poset P = K(X) associated 
to the spectral domain X . An interesting feature of spectral domains is that there is 
a significant overlap between the space X and its dual lattice L, since this subposet 
P = K(X) of X is isomorphic to the opposite of the poset J(L) of join-prime 
elements of L. It follows that this poset uniquely determines both X and L, since, 
in this case, X = Idl(P) and L = Dfin(Pop) = Ufin(P), the free join-semilattice on 
Pop, which, for this very special type of poset P, is not just closed under finite unions 
but also under finite intersections. We end this section by giving an order-theoretic 
characterization of the domains that are spectral in their Scott topology; that is, in 
Theorem 7.47, we will characterize the spectrality of a domain X entirely in terms 
of the poset P = K(X) . The characterizations of bifinite domains among spectral 
domains that we will give in Section 7.3 also make heavy use of this poset P, which 
lives on both sides of the duality.
Definition 7.46 Let X be a poset, x e X and M c X. Then, we will write M < x 
provided x is a common upper bound of all the elements of M. That is, x belongs 
to the set UB( M) := {x e X | V m e Mm < x}. Further, we denote by MUB( M) 
the set of all minimal upper bounds of M . That is,
MUB (M) := min(UB(M)).
We are now ready to characterize, in order-theoretic terms, the spectral domains 
among the algebraic domains.

254 
7 Domain Theory
Theorem 7.47 Let X be an algebraic domain. Then, the following conditions on 
X are equivalent:
(i) 
the Scott topology on X is spectral;
(ii) 
for all finite subsets F c K(X), the following two properties hold:
(1) 
MUB(F) is finite and contained in K(X) and
(2) 
UB(F) = ?MUB(F); and
(iii) 
the finitely generated Scott-open up-sets of X are closed under finite inter­
sections.
Proof First, suppose X is a spectral domain and let F c K(X) be finite. Then, 
tx = f x is compact-open in X for each x e F and thus the finite intersection
UB(F) = Q t x
xeF
is also compact-open. Thus, by Proposition 7.43, there is a finite antichain G c 
K(X) such that UB(F) = tG. It follows that
MUB(F) = min(UB(F)) = min(tG) = G.
That is, G = MUB (F) is a finite subset of K(X) and UB(F) = tMUB(F), as 
required.
Now, suppose that X is an algebraic domain satisfying the two properties in (ii). 
Recall from Exercise 7.1.13 that, in any algebraic domain, the finitely generated 
open up-sets are precisely the sets tG with G c K(X) finite. Thus, by distributivity, 
it suffices to show that finite intersections of sets of the form tx, with x e K(X), are 
finitely generated open up-sets. Let F c K(X) be finite and U := xeF tx. Then, 
using (ii)(2),
U = UB (F) = tMUB(F)
and by (ii)(1), MUB(F) is a finite subset of K(X), so that U is a finitely generated 
open up-set.
Finally, to see that (iii) implies (i), recall that a topological space X is spectral if, 
and only if, it is sober and the collection of compact-open sets is a bounded sublattice 
ofP(X) which is a base for the topology, see Definition 6.2 and Exercises 6.1.3 and 
6.3.5. Any algebraic domain is sober, and by Exercise 7.1.13, the finitely generated 
open up-sets form a base closed under finite unions, and any compact-open is a 
finitely generated open up-set. Now, since finitely generated open up-sets are closed 
under finite intersections by (iii), it follows that the finite intersection of compact­
opens is a finitely generated open up-set, and thus in particular compact again. 
Thus, the Scott topology on X is spectral. 
□

7.2 Dcpos and Domains That Are Spectral
255
Now, combining Proposition 7.43 and Theorem 7.47, we obtain the following 
order-theoretic characterization of spectral domains, which have also been called 
“2/3 bifinite” or “2/3 SFP” domains in the literature (see for example, Proposi­
tion 4.2.17 in Abramsky and Jung, 1994), because they satisfy two of the three 
properties that characterize bifinite domains, see Corollary 7.64 in Section 7.3.
Corollary 7.48 Let X be a domain. Then, the Scott topology on X is spectral if, 
and only if, X is algebraic, and for all finite subsets F c K(X) the following two 
properties hold:
(a) 
MUB(F) is finite and contained in K(X) and
(b) 
UB( F) = ?MUB( F).
Remark 7.49 Posets P satisfying property (b) for every finite subset F c P are 
called MUB-complete in Abramsky and Jung (1994), and this property is sometimes 
also referred to as “property m.” Combining Corollary 7.48 with Exercise 7.1.11, 
it follows that spectral domains are, up to isomorphism, the posets of the form 
Idl(P), for P a MUB-complete poset in which MUB (F) is finite for any F c P;we 
will call such posets finitely MUB-complete. By Corollary 7.44 the dual bounded 
distributive lattice is Ufin(P) (see also Exercise 7.2.4).
Definition 7.50 Let P be a poset. We say P is finitely MUB-complete if, for any 
finite subset F c P, MUB(F) is finite and UB(F) = tMUB(F).
We note that a poset P is finitely MUB-complete if, and only if, the set Ufin (P) 
is a sublattice of P (P) . To summarize the results in this section: A spectral domain 
X is always the domain of ideals of a finitely MUB-complete poset P, whose lattice 
of finitely generated up-sets is the dual distributive lattice of X .
Exercises for Section 7.2
Exercise 7.2.1 Let X be any T0 space and K c X a compact-saturated subset of 
X. Then, K = t min(K). Hint. Given x e K, use Zorn’s lemma on the collection 
of closed sets jy, as y ranges over elements of jx n K, equipped with the reverse 
inclusion order, to show that every element of K is above a minimal one.
Exercise 7.2.2 Let X be a poset and M, N c X .
(a) 
Show that tM U tN = t(M U N) and conclude that the finitely generated 
open up-sets of any topological space are closed under binary unions.
(b) 
Show that tM n tN = U{UB({m, n}) I m e M and n e N}.
(c) 
Give an example of a topological space, and finitely generated open up-sets 
U and V so that U n V is not a finitely generated up-set.

256
7 Domain Theory
(d) 
Give a domain whose associated space gives an example as in (c).
(e) 
Give examples showing that, even if UB (M) is non-empty, MUB(M) may 
be empty, and even if MUB(M) is non-empty, we may not have UB (M) = 
?MUB( M).
(f) 
Show that if X = Idl(P) and F c P is finite, then MUB(F) c P.
Exercise 7.2.3 Prove that a poset P is finitely MUB-complete if, and only if, any 
finite intersection of finitely generated up-sets of P is finitely generated. Conclude 
that this happens if, and only if, Ufin (P) is a bounded sublattice of P (P) .
Exercise 7.2.4 Let X be a spectral domain. Show that the following three are 
isomorphic distributive lattices.
(a) 
KO(X), the distributive lattice dual to X.
(b) 
Ufin(K(X)), the lattice of finitely generated up-sets of the poset K(X), with
the inclusion order.
(c) 
The poset reflection of the set Pfin(K(X)) of finite subsets of K(X), equipped 
with the preorder given by
F < G <> Vy e G 3 x e F (x < y).
(The poset reflection was defined in Exercise 1.1.5.)
Exercise 7.2.5 Let X be a spectral domain and let L be its lattice of compact 
open subsets. Prove that J (L)op is isomorphic to K(X). Hint. You can describe an 
isomorphism directly: Send p e K(X) to the join-prime element tp of L.
7.3 Bifinite Domains
Bifinite domains2 are mathematical structures obtained as limits of finite “embed­
ding projection pairs,” which we will introduce below. Within domains, one can 
show that these are actually bilimits, that is, simultaneously limits of the projections 
and colimits of the embeddings in the finite embedding projection pairs. Limits of 
finite posets clearly make profinite posets, that is, Priestley spaces (recall Example 
5.35), pertinent to the subject, but it is only over time that the duality-theoretic 
point of view came into focus, fully expressed in Abramsky (1991). Here we intro­
duce bifinite domains as a subclass of spectral spaces, and we consider them from
2 SFP domains were introduced in Plotkin (1976) as certain profinite posets, along with the powerdomain 
construction, under which they are closed. The name “SFP” is an acronym for “sequences of finite posets.” 
SFP domains are further required to be ^-algebraic, that is, the set of compact elements needs to be 
countable, and pointed, that is, it needs to have a least element. Bifinite domains may be viewed as the 
generalization of SFP domains where the ^-algebraicity and pointedness are dropped. The minimal upper 
bounds point of view that we discuss here was developed by Smyth (1983b) and in the thesis of Gunter 
(1985). Smyth showed that SFP is the largest Cartesian closed category of pointed ^-algebraic domains. 

7.3 Bifinite Domains
257
a duality-theoretic point of view. In Corollary 7.64 we give a characterization of 
bifinite domains via MUB-completeness and in Theorem 7.66 we give a dual char­
acterization in terms of a condition of “conjunctive closure” on distributive lattices, 
bringing us full circle, showing that these are precisely the structures studied in 
Abramsky (1991).
A central notion in the definition of bifiniteness is that of a (finite) embedding 
projection pair, which we introduce now. This definition will be applied both to 
distributive lattices and to spectral domains. In the following definition, the category 
C can be thought of as either DL or Spec, or in fact any category equipped with a 
faithful functor to Poset.
Definition 7.51 Let C be a concrete category in which each object is equipped 
with a partial order and each morphism is order preserving. We say that a pair 
g
of morphisms C < 
> D of C is an embedding projection pair (EPP) provided
( f, g ) is an adjoint pair, f is injective, and g is surjective. Here, f is called the 
embedding and g is called the projection of the pair. Further, such an EPP is said to 
be finite if C is finite, and we call it an EPP “of” D.
Recall from Exercise 1.1.9 that, for an adjoint pair between posets, the left adjoint 
is injective if, and only if, the right adjoint is surjective; so, for an adjunction to be 
an EPP, it suffices to check one of the two conditions (also see Exercise 7.3.1).
We start by characterizing the finite EPPs for distributive lattices and spectral 
spaces in terms of substructures, see Propositions 7.54 and 7.55.
Notation In what follows, we often consider pairs of functions between spectral 
spaces and distributive lattices. If X and Y are spectral spaces, then we use the 
p
notation X < e y Y for a pair of spectral maps between these spaces. We then
, h
call the dual pair of homomorphisms the pair of functions K < i > L , where K 
is the lattice dual to X , L is the lattice dual to Y , i is the homomorphism dual to p, 
and h is the homomorphism dual to e.
, p
Lemma 7.52 Let X < e > Y be a pair of spectral maps between spectral spaces 
h h
X and Y and let K 1 i l L be the dual pair of homomorphisms. Then, e is lower 
adjoint to p if, and only if, i is lower adjoint to h.
Proof The function e is lower adjoint to p if, and only if, e ◦ p < idY and idX < p ◦ e 
(see Exercise 1.1.8). The dual of the composite map e ◦ p is i ◦ h and the dual of 
idY is idL, so, using Remark 7.3, e ◦p < idY is equivalent to i ◦ h < idL. Similarly, 
idX < p ◦ e is equivalent to idK < h ◦ i. Thus, e is lower adjoint to p if, and only

258 
7 Domain Theory
if, i ◦ h < idL and idK < h ◦ i. This, in turn, is equivalent to saying that i is lower 
adjoint to h. 
□
We have the following corollary of Lemma 7.52 and Exercise 7.3.1.
Corollary 7.53 The Stone dual of an embedding projection pair on either side 
of the duality is an embedding projection pair on the other side, and the dual of a 
finite EPP is finite.
Note that the dual of the embedding on either side is the projection on the other. 
The following propositions identify the nature of finite EPPs on either side of 
Stone-Priestley duality.
Recall that a map f between topological spaces is said to be an embedding 
provided it is injective and the inverse function f-1: im( f) ^ X is also continuous. 
If Y is a spectral space and X c Y is a subspace of Y which is itself a spectral space 
in the subspace topology, then we call the inclusion map e: X ^ Y a spectral 
subspace embedding. The following proposition allows us to see EPPs on a spectral 
space Y as certain spectral subspaces X of Y. Recall that we view a spectral space 
as a poset in its specialization order.
Proposition 7.54 Let Y be a spectral space and e: X ^ Y a spectral subspace 
embedding. Then, the following two conditions are equivalent:
(i) 
the function e has an upper adjoint p, and p is spectral, and
(ii) the subspace X has the following two properties:
(1) for all y e Y, the down-set ^y n X is principal; and
(2) for all U c X compact-open, the up-set TU is open in Y. If, in addition, 
X is finite, then it suffices that Tx is open in Y for all x e X.
Proof Note first that, essentially by definition, e has an upper adjoint if, and only 
if, for every y e Y, ^y n X has a maximum. Thus, (ii)(1) is equivalent to the 
existence of an upper adjoint. Now, suppose the upper adjoint exists, and consider 
the map p: Y ^ X, y ^ maxQy n X). We show that (ii)(2) is equivalent to p being 
a spectral map.
Notice that, for any up-set U of X we have p-1(U) = TU. Thus, p being spectral 
is the statement that TU is compact-open whenever U c X is compact-open. Also 
note that U compact in X implies U compact in Y, which, in turn, implies that TU 
is compact in Y. Thus, we just need to know that TU is open in Y . If, in addition, 
X is finite, then every compact-open of X is a finite union of principal up-sets TXx 
and thus it suffices to consider these. 
□
Proposition 7.55 Let L be a bounded distributive lattice and i: K ^ L a bounded 
sublattice inclusion. Then, the following conditions are equivalent:
(i) the homomorphism i has an upper adjoint that is also a homomorphism; and

7.3 Bifinite Domains
259
(ii) the sublattice K has the following two properties:
(1) for all b e L, jb n K is a principal down-set; and
(2) for any prime filter F of K the filter TF in L is again prime.
Proof Again, the existence of an upper adjoint is equivalent to (ii)(1) since the 
upper adjoint of the embedding must be given by h(b) = max(jbn K). We show that 
(ii)(2) is equivalent to this upper adjoint being a bounded lattice homomorphism.
Consider the map h: L ^ K, b ^ max(jb n K). Since h is the upper adjoint 
of the inclusion, it preserves all existing meets. Also, clearly h(±) = ±. We show 
that (ii)(2) is equivalent to h preserving binary joins. For this purpose, assume h 
preserves binary joins and let F be a prime filter of K . Then, as F is proper, so is 
TF. If b 1 V b2 e TF in L, then there is a e F with a < h (b 1 V b2) = h (b 1) V h (b2) in 
K. Now, since F is a prime filter, it follows that h(b1) e F or h(b2) e F and, since 
h(bi) < bi, it follows that b1 eTF or b2 eTF, as required. Conversely, suppose 
that (ii)(2) holds. We want to show that h preserves binary joins. Since h is order 
preserving we have h(b1) V h(b2) < h(b1 V b2). Since any filter is the intersection 
of the prime filters containing it (see Exercise 3.1.17), it suffices to show that any 
prime filter ofK containing h(b1 V b2) must contain h(b1) V h(b2). To this end, let 
F be a prime filter of K with h(b1 V b2) e F. Since h (b1 V b2) < b1 V b2, we have 
b1 V b2 eTF and by (ii)(2), it follows that bi eTF for i = 1or2.Now,bi eTF 
implies there is a e F with a < bi,andasa e K, it follows that a < h(bi) and thus 
h (bi) e F. That is, h (b 1) V h (b2) e F as required. 
□
Just as for spectral spaces, Proposition 7.55 allows us to see EPPs on a distributive 
lattice L as certain sublattices K of L, namely those satisfying the two conditions 
of Proposition 7.55(ii). Interestingly, Corollary 7.53 then yields a duality between 
certain subspaces and certain sublattices, rather than the usual matching in duality 
of subs and quotients. This is of course because these subs are also quotients, but 
viewing this as a duality between sublattices and subspaces is interesting relative to 
a phenomenon we will meet in our second application in Chapter 8, where certain 
residuated Boolean algebras are dual to certain profinite algebras, namely profinite 
monoids.
We will be particularly interested in finite EPPs. Since any inclusion of a finite 
(join-semi-)lattice in a lattice has an upper adjoint, and since any prime filter in a 
finite lattice is principal, generated by a join-prime element, we obtain from Propo­
sition 7.55 the following much simpler description of finite EPPs in a distributive 
lattice.
Corollary 7.56 Let L be a distributive lattice and K c L a finite bounded 
sublattice, with i: K c^ L the inclusion map. Then, the following conditions are 
equivalent:

260
7 Domain Theory
(i) there exists a bounded lattice homomorphism h: L ^ K such that (i, h) is 
an EPP in the category DL; and
(ii) J (K) ^J (L).
Definition 7.57 Let L be a distributive lattice. We say that a finite bounded 
sublattice K of L is a finite EPP-sublattice if it satisfies the equivalent conditions of 
Corollary 7.56.
Note that, if K is a finite EPP-sublattice of L, then K has “enough join primes,” 
in the sense that every element of K is a finite join of join-prime elements (see 
Lemma 1.20), and every join prime of K is also a join prime of L. However, an 
infinite lattice L need not have any join-prime elements at all (see Example 3.1), 
and such a lattice does not have any finite EPP. Thus having “enough” finite EPPs 
is special. For L to be bifinite, in addition, we require that the finite EPP-sublattices 
of L form a directed diagram. Here, recall that “directed” means that for any two 
finite EPP-sublattices K1 and K2 of L, there is a finite EPP-sublattice K0 of L which 
contains both K1 and K2.
Definition 7.58 Let X be a spectral space, L its dual lattice. We say that X and L 
are bifinite provided either and then both of the following two equivalent conditions 
are satisfied:
(i) 
X is the projective limit in Spec of the projections of its finite EPPs; and
(ii) L is the directed colimit in DL of the embeddings of its finite EPPs.
In light of Definition 7.57 and the fact that directed colimit of a collection of 
sublattices of a distributive lattice can be computed as a union (see Example 5.34), 
an equivalent definition for a distributive lattice L to be bifinite is that the finite 
EPP-sublattices of L form a directed diagram whose union is equal to L.
Remark 7.59 Definition 7.58 is not identical to any of the standard ones. The 
definition is usually given for algebraic domains, and not for spectral spaces, but as 
we will observe shortly, any bifinite spectral space is an algebraic domain. That is, 
the spaces we call bifinite are exactly the same objects as the bifinite domains of 
the domain theory literature.
Remark 7.60 Given a bifinite lattice or spectral space, we have a directed diagram 
of EPPs for that structure, and thus we can form two different diagrams: the diagram 
consisting of the embedding parts of the diagram of finite EPPs and the diagram 
consisting of the projection parts of the diagram of finite EPPs for the given structure. 
By definition, the colimit of the diagram of embeddings in a bifinite lattice yields 
the bifinite lattice itself. Dually the limit of the diagram of projections of the finite 
EPPs in a bifinite spectral space yields the bifinite space. On the other hand, if we 

7.3 Bifinite Domains
261
take the limit in DL of the diagram of projections in a bifinite lattice, in general, we 
will get a bigger lattice, which has the colimit as a sublattice, and similarly, if we 
take the colimit in Spec of the diagram of embeddings in a bifinite spectral space 
we will get a bigger space, which has the limit as a quotient (see Exercise 7.3.3).
However, if we embed DL in Frame via the ideal completion, as in Figure 6.1, and 
take the full subcategory of Frame it generates, then we get a category equivalent 
to the category DLj-approx of distributive lattices with join-approximable relations 
(see Exercise 6.3.7) and in this category we have a morphism from the limit in DL 
of the diagram of projections in a bifinite lattice to the bifinite lattice L itself. This 
makes it possible to show that we have coincidence of the colimit of the injections 
and limit of the projections, thus showing that in this category the limit object L 
is so-called bifinite, that is, simultaneously the colimit and the limit of its diagram 
of finite EPPs (for more details see Exercise 7.3.3). Finally, by duality, the same 
is true if we consider bifinite spectral spaces with arbitrary continuous functions 
rather than just spectral maps, see also Abramsky and Jung (1994, Section 3.3.2).
Corollary 7.61 Let X be a spectral space and L its dual lattice. If X and L are 
bifinite then X is a spectral domain, or, equivalently, L has enough join primes.
Proof If a distributive lattice L is bifinite, then every element a e L is contained 
in a finite EPP-sublattice K .InK , a is a finite join of join-prime elements, and, 
by Corollary 7.56, these join-prime elements are also join prime in L. Thus, every 
element of L is a finite join of join-prime elements. Now, by Theorem 7.45 this is 
equivalent to X being a spectral domain. 
□
We will now give an order-theoretic characterization of bifinite spectral spaces. 
By Corollary 7.61, if X is bifinite with dual lattice L, then X is a spectral domain. 
That is, by Remark 7.49, the poset P = K(X), which is isomorphic to J (L)op, 
is finitely MUB-complete. We further have X = Idl(P) and L = Ufin(P) (see 
Exercise 7.2.4). In Proposition 7.63, we will characterize bifinite domains in terms 
of order-theoretic properties of P.
Definition 7.62 Let X be a poset and F c X. We say that F is MUB-closed 
provided, for all G c F, we have MUB(G) c F. The MUB-closure of F c X is 
the inclusion-minimal F' c X such that F c F' and F' is MUB-closed.
Proposition 7.63 Let P be a finitely MUB-complete poset and let X := Idl(P) 
be the corresponding spectral domain. Then, a finite subspace F c X gives rise 
to an EPP in the category Spec if, and only if, F c P and F is MUB-closed. 
Furthermore, the spectral domain X is bifinite if, and only if, the MUB-closure of 
any finite subset of P is finite.

262
7 Domain Theory
Proof A finite subspace F c X gives rise to an EPP if, and only if, it satisfies the 
equivalent conditions of Proposition 7.54. The finite case in condition (ii)(2) of that 
proposition is equivalent to F c P. We show that (ii)(1) is equivalent to F being 
MUB-closed.
Let F c P be finite and suppose that max(jx n F) exists for each x e X. Let 
G c F and let p e MUB(G) and consider the set jp n F. By our assumption, 
there is p' = max(jp n F). Also, clearly G c jp n F, so p' e UB(G). Since P is 
MUB-complete, there is p’’ e MUB(G) withp’’ < p'. Thus, we have p’’ < p' < p 
with both p", p e MUB(G). It follows that p ” = p' = p and thus p e F since 
p' e F. That is, F is MUB-closed.
For the converse, again let F c P be finite, suppose F is MUB-closed, and let 
x e X . Further, set G := jx n F. Since x e UB (G), there is a p e MUB (G) c F 
with p < x. But then p e G and thus p = max(G) = max(jx n F) , as required.
Finally, X is bifinite if, and only if, every finite subset F of P is contained in a 
finite subset F' which gives rise to an EPP, which we showed happens if, and only if, 
F' c P and F' is MUB-closed. Thus, X is bifinite if, and only if, the MUB-closure 
of any finite subset of P is finite. 
□
Corollary 7.64 Let X be an algebraic domain. Write P := K(X), so that X = 
Idl(P). Then, X is bifinite if, and only if, for all finite subsets F of P, the following 
three properties hold:
(a) 
MUB (F) is finite,
(b) 
UB(F) = ?MUB(F), and
(c) 
the MUB-closure of F is finite.
A poset P is called a Plotkin order if it satisfies the three properties in Corollary 
7.64 for all finite subsets F of P. Thus, Corollary 7.64 shows that an algebraic 
domain X is bifinite if, and only if, the poset P = K(X) is a Plotkin order. Note 
that the properties (a) and (b) in Corollary 7.64 are equivalent to saying that the 
corresponding domain X = Idl(P) is spectral, see Corollary 7.48.
We finish the subsection with a characterization of the lattices dual to bifinite 
domains. For this purpose, we define the notion of a subset of a lattice being 
conjunctively closed.
Definition 7.65 Let L be a lattice and S c L. We say that S is conjunctively closed 
provided, for each finite subset F c S, there is a finite G c S such that
A F=V G.
Theorem 7.66 Stone’s duality between Spec and DL restricts to a duality between 
bifinite domains and bounded distributive lattices L with enough join primes sat­
isfying the following property: for every finite S c J (L), there exists S’ c J (L) 
finite, such that S'2 S and S' is conjunctively closed.

7.3 Bifinite Domains
263
Proof By Theorem 7.45 spectral domains are dual to bounded distributive lattices 
L with enough join primes, so we just need to verify that the additional property in 
the theorem corresponds dually to condition (c) in the definition of bifinite domains. 
This is left as Exercise 7.3.2. 
□
Example 7.67 We show that (N, |), the divisibility lattice ofN, is a bifinite lattice. 
Recall that we computed the Priestley dual space of (N, |) in Example 3.18. To 
prove that the lattice L := (N, |) is bifinite, let n e N be arbitrary. Denote by Dn 
the subset of natural numbers that are 0 or divisors of n, that is, the down-set of 
n in L , with the top element 0 added. This is a finite bounded sublattice of L ;we 
apply Corollary 7.56 to show that it is an EPP-sublattice. Let j be join prime in Dn. 
Then, j|n and we show that j must in fact be a positive power of a prime number: 
since 1 is the bottom element of Dn, j 1, and we may write j as the join of 
pk1 (ii),..., pkr, for some r > 1, prime numbers p 1,..., pr and k 1,..., kr > 1. Then, 
each piki divides j, and hence, since j e Dn, piki is also an element of Dn. Moreover, 
by the assumption that j is join prime and the fact that each piki is incomparable to 
kj
(i) 
for every finite F c P, the MUB-closure of F is finite; and
(ii) for every finite S c J(L), there exists finite S' c J(L) such that S' 2 S, 
and S' is conjunctively closed.
pjj, we must have r = 1. Thus, j is a power of a prime number, and therefore also 
join prime in L. Recall that we gave an example of a quotient space of the dual of 
(N, |) in Example 3.30. For any n e N, the finite EPP-sublattice Dn defined here 
dually yields a different finite quotient of the Priestley dual space of (N, | ).
Exercises for Section 7.3 
t p
Exercise 7.3.1 Let X < e y Y be a pair of spectral maps between spectral 
h h
spaces X and Y and let X < i > L be the dual pair of homomorphisms. Show 
that all of the following are equivalent:
(i) 
e is injective;
(ii) 
p is surjective;
(iii) i is injective; and
(iv) 
h is surjective.
Further show that, if these hold, then e and i are embeddings.
Exercise 7.3.2 Let X be a spectral domain, P := K(X), and L the lattice dual to
X . Show that the following are equivalent:

264
7 Domain Theory
Hint. Use the isomorphism between J (L)op and P and the fact that, for a finite 
collection F c P, if G = MUB(F), then
UB(F) = p| Tp = (J Tq.
Exercise 7.3.3 Let C be a concrete category in which each object is equipped 
with a partial order and each morphism is order preserving. Let
{ Cf D }
be a directed diagram of EPPs in C . Further, let Cf be the colimit in C of the 
embeddings of the diagram and Cg the limit in C of the projections of the diagram.
(a) 
Show that there is a unique morphism Cf ^ Cg in C.
(b) 
Consider now the particular case C = DL. Let L be a bifinite lattice and let
I , h 1
I.^.K
i
be the associated diagram of finite EPPs. Prove that the colimit Li of the 
embedding parts of the diagram is isomorphic to L, and that the homomor­
phism L ^ Lh, obtained from the previous item by composing with this 
isomorphism is an embedding.
Conclude also that, by Stone duality, if X is a bifinite spectral space and
t . p 1 
X < Y Y
e
is the associated diagram of finite EPPs, then the limit X
p of the projection 
parts is homeomorphic to X, and the spectral map Xe ^ X, obtained from 
the previous item by composing with this homeomorphism, is a quotient map.
(c) 
Prove that, if L is a bifinite lattice and X is the dual spectral space, then with 
the notations of the previous item, Lh is dual to Xe and the morphism L ^ Lh 
is dual to the spectral map Xe ^ X.
(d) 
Now, consider the situation where L = Ufin(P), where P is a Plotkin order. 
Show that Lh = U (P) and conclude that L and Lh are not necessarily 
isomorphic.
(e) 
Still under the assumption that L = Ufin(P), where P is a Plotkin order, show 
that the relation
R = {(U, V) e U (P) x Ufin (P) | U 2 V}
is a join-approximable relation from the lattice Lh = U(P) to the lattice 
L = Ufin (P), and conclude that L = Ufin(P) is the bilimit of the diagram 

7.4 Domain Theory in Logical Form
265
of EPPs for L in the category of distributive lattices with join-approximable 
relations.
Exercise 7.3.4 This exercise is about the lattice N with the divisibility order. We 
already studied this lattice as a running example for Priestley duality in Chapter 
3, see Examples 3.6, 3.18, and 3.30, also see Example 7.67 in this section. Here, 
we consider the spectral space X dual to (N, | ) , and its specialization order. Recall 
from Remark 7.3 that the specialization order on X is the opposite of the order on 
the Priestley space dual to (N, |), depicted in Figure 3.4.
(a) Show that for any x e X, the principal up-set Tx is either finite or equal to X. 
(b) Show that the Scott topology on the spectral space X coincides with the 
Alexandroff topology.
(c) Deduce that X is an algebraic domain in which all elements are compact, and 
that the poset K(X) = X is finitely MUB-complete.
(d) Identify those finite subsets of X which correspond to finite EPPs, and show 
that X is bifinite.
7.4 Domain Theory in Logical Form
In this section, we analyze the DTLF program in the setting of bifinite domains as 
in Abramsky (1991), emphasizing the duality-theoretic aspects. We will illustrate 
DTLF by considering duality for the function space construction and a domain 
equation based on this constructor.
Bifinite Domains Are Closed under Function Space
In this subsection, we use the duality developed for function spaces in Section 6.4 
to show that the category Bif of bifinite domains with Scott continuous functions 
is closed under the function space construction. Recall that, for topological spaces 
X, Y, the set [X, Y] of continuous functions from X to Y is equipped with the 
compact-open topology: A subbase is given by the sets of functions K ^ U := 
{f e [X, Y] | f [K] c U}, for K c X compact and U c Y open, see Definition 
6.26. We aim to prove here (Theorem 7.69) that this space [X, Y] is bifinite if both 
X and Y are. For this purpose, we will make crucial use of the fact that this space is 
given by the smallest congruence that is join preserving at primes, the property that 
we identified in Definition 6.32. Recall that, ifX and Y are bifinite, then in particular 
they are spectral domains by Corollary 7.61 and thus, by Corollary 6.34, [X, Y]is 
a spectral space. We will need to prove that [X, Y] can still be approximated by 
finite EPPs, if both X and Y have this property. To this end, we first prove a lemma 
about lifting finite EPPs to function spaces.

266
7 Domain Theory
Lemma 7.68 Let X, Y be two spectral spaces such that [X, Y] is a spectral 
space and let XY' be finite posets, equipped with the Alexandrov topology. If 
P^ 
„, pYX
X ' < 
> X and Y ' < 
> Y are EPP s, then the functions
e:[XY'] ^ [X, Y ]: p 
f' 
~ eY f'Px
PY feX ^ f
are spectral, and form an EPP between [X', Y'] and [X, Y]. Moreover, for any 
up-sets K' c X', U' c Y', p-1 (K' ^ U') = pX1 (K') ^ p-1 (U').
pX 
p.
Proof Let XM ex X X and YM ey > Y be finite EPPs. We define
e : [ X', Y'] ^ [X, Y]: p
f' 
~ eY f'pX
py fex ^ f.
Note that, for any f ’ e [X', Y'], we have
pe (f') = py e y f ’ p x e x = idY ’ f 'idx' = f
showing that p ◦ e = id[X;Y/]. Also, for any f e [X, Y], we have
ep (f) = eypyfeXpX < idYfidx = f,
showing that e ◦ p < id[X,Y]. Thus, (e, p) is an adjoint pair of order-preserving 
functions between the underlying posets, e is injective, and p is surjective. It remains 
to show that e and p are spectral maps.
In order to prove that e is continuous, and hence spectral because [X’, Y'] is finite, 
it suffices to show that e—1 (K ^ U) is an up-set for every K c X compact and 
U c Y open. Recall that the specialization order on a function space coincides with 
the pointwise order when the domain is locally compact (see Exercise 6.4.3(c)), 
and so certainly in this case. Let K c X be compact and U c Y be open. Suppose 
that e(f') e K ^ U for some f ’ e [X’, Y'], and that f ’ < g for some g e [X’, Y']. 
We show that e (g) = eYgpX e K ^ U. Let x e K be arbitrary. Note that 
f' p X [ K ] c e—1 (U) by assumption, and that f'pX(x) < gpX(x). Thus, since 
eY-1 (U) is an up-set by continuity of eY, it follows that gpX (x) e eY-1(U), that is, 
eYgpX (x) e U, as required.
Note that the fact that p is spectral will follow from the “moreover” statement, 
because both pX and pY are spectral, and the sets of the form K' ^ U', with 
K' and U' up-sets of X' and Y', respectively, form a base for the topology on 
[XY']. To prove the moreover statement, let K' c X' and U' c Y' be up­
sets and let f e [X, Y] be arbitrary. We will show that p (f) e K' ^ U' if, 

7.4 Domain Theory in Logical Form
267
and only if, f e p-1 (K') ^ pY1 (U'). For the left-to-right direction, suppose that 
p (f) e K' ^ U' and let x e X be such that p X (x) e K '.Then, using the adjunction 
between eX and pX , and the fact that f is order preserving,
pYf (x) > pyfexpX(x) = p(f)(pX(x)),
and the latter is an element of U' since p (f) e K' ^ U' by assumption, so that 
pY f (x) e U' since U' is an up-set. Conversely, suppose that f e p-1 (K') ^ 
pY1 (U') and let x’ e K’ be arbitrary. Using the fact that pXeX(x') = x', so that 
e X (x') e p X1 (K'), we get fe X (x') e p-1 (U'), which shows that p (f)(x') e U', as 
required. 
□
Theorem 7.69 LetX and Y be bifinite domains. Then, [X, Y] is a bifinite domain.
Proof Denote by L and M the bifinite distributive lattices of compact-opens of X 
and Y , respectively. Note that L in particular has enough join primes, by Corollary 
7.61. Thus, Corollary 6.34 applies, and we obtain the fact that the space [X, Y]is 
spectral, and its distributive lattice of compact-opens is (up to isomorphism) the 
lattice K := F^(L, M)/$jpp. By duality, it is thus equivalent to show that this lattice 
K is bifinite, that is, that every element of K lies in some finite EPP-sublattice. 
Since the elements of the form a ^ b, with a e L and b e M, generate the lattice 
K, it suffices to show the result for these elements. Let a e L and b e M . Since L 
and M are bifinite, pick finite EPP-sublattices L’ and M’ of L and M, respectively, 
pX 
pY
with dual EPPs X' < ex > X and YM 
> Y . Combining Lemma 7.68 with
Lemma 7.52, the lattice of compact-opens of [X', Y'] is isomorphic to a finite EPP- 
sublattice K' of K, with embedding given by p-1 and projection given by e-1. This 
sublattice K' in particular contains the element a ^ b because p-1 (a ^ b) is 
equal to pX1 (a) ^ pY1 (b). Thus, K is a bifinite lattice. Finally, since X and Y are 
bifinite, they are spectral domains and thus carry their Scott topologies. It follows 
in particular that [X, Y] is the set of Scott continuous functions from X to Y. Finally, 
since [X, Y] is bifinite, it is also a spectral domain by Corollary 7.61, so that the 
spectral topology on [X, Y] coincides with the Scott topology of its specialization 
order. 
□
Variations on a Domain Equation
In the above proof of Theorem 7.69, we proved a fact about the type constructor 
of function spaces of domains by transferring it to a dual construction on the cor­
responding distributive lattices. This is the fundamental idea of DTLF (Abramsky, 
1987, 1991): All of the domain or type constructors of interest (sums, products, 
various forms of power domains, functions spaces, etc.) are dual to endofunctors 
on the category of bifinite lattices that automatically preserve directed colimits 

268
7 Domain Theory
of sequences since they are given “algebraically,” that is, freely by generators 
and relations. It follows that any composition F of these endofunctors also pre­
serves directed colimits. This allows one in particular to build fixed points, that 
is, solutions of equations of the form X = F(X), by iterating F, starting from 
a morphism A a F(A) (i.e., a co-algebra for the functor F). A canonical such 
fixed point is the least fixed point of F , which can be constructed as the colimit 
of the following sequence, starting from the free distributive lattice on the empty 
set, 2:
e0 
e1 
e2
2 -A F(2) -A F2(2) -A • • • . 
(7.5)
Here, F is any directed-colimit-preserving functor on DL, e0 is the unique mor­
phism from 2 to F (2), given by the fact that 2 is initial in DL, and en+1 := F(en). 
If, in addition, the maps of the sequence consist of EPPs then we can conclude that 
the fixed point obtained as the colimit of (7.5) is again bifinite.
We now illustrate these ideas by considering the most classical example of a 
domain equation, namely X = [X, X]. One may first look for the least solution of 
this equation, but, as classical as this case is, it is also an anomaly, in that the least 
solution is not so interesting, since it is the one-element space. On the dual side, this 
is reflected by the fact that the iterative sequence (7.5), applied in the case where 
F is the functor sending a lattice L to FU (L, L)/$jPP, never “gets off the ground,” 
that is, the very first map e0: 2 a FU (2,2)/$jPP is already an isomorphism. This 
follows from the observation that [1,1] = 1 and Corollary 6.34, but it is also not 
hard to give an elementary algebraic proof directly from the definition of the lattice 
FU (2,2)/$jPP: notice first that already in FU (2,2), we have the equalities
o U o = 1, o U 1 = 1, and 1 U 1 = 1
because an implication-type operator by definition sends any pair with ± in the first 
coordinate or T in the second coordinate to T; indeed, these are the “empty set” 
instances of the schemes (6.2) and (6.3) that define FU (L, M). Moreover, since $jPP 
makes U preserve joins at primes, and 1 is a join-prime element in 2, we must have 
1 a 0 = 0 in FU (2,2)/^jPP. Thus, all four generators of FU (2,2)/$jPP are equal to 
oor1.
For the rest of this section, let FEnd denote the functor on bifinite lattices that sends 
L to FU (L, L)/$jPP, which is the dual lattice of the endomorphism type constructor 
X A [X, X] on bifinite domains, by Corollary 6.34. The previous paragraph shows 
that the least fixpoint of FEnd is 2, so we can not directly use the construction in (7.5). 
There are, essentially, two ways around this problem. One is to change the functor 
with which we induct; the other is to start the induction “higher up.” Among the 
amended functors, a minimal and very natural choice is to consider, for X a bifinite 
domain, the domain T(X) = ± ® [X, X], usually denoted [X, X]±, which takes the 

7.4 Domain Theory in Logical Form
269
function space and adds a new bottom. Clearly, the dual is L ^ FEnd (L) ® 1, which 
adds a new top. This functor is natural from the programming languages point of 
view and has been studied extensively, because X = [X, X]± is the domain equation 
corresponding to what is known as the “lazy lambda calculus,” in which lambda 
terms are identified with their so-called weak head normal form (Abramsky, 1990; 
Abramsky and Ong, 1993). In this case, the canonical solution, that is, the least 
fixed point of the sequence (7.5), is non-trivial but its function space is a retract of 
X, and not isomorphic to X. This construction is the subject of Example 7.71.
From the theoretical point of view, it is of course also important to show that 
there exist non-trivial, on-the-nose, solutions to the equation X = [X, X]. The way 
to obtain this is to stick with the original functor FEnd as the functor we iterate, 
but to start the iterative process in (7.5) with a bigger lattice than 2. This is the 
approach taken by Scott at the very start of domain theory, see, for example, Scott 
(1972, 1980). This however inherently involves an ad hoc choice of a starting point 
for the iterative sequence. In Smyth and Plotkin (1982), this approach is cast in a 
general scheme based on solving the domain equation in a comma category. The 
solution of X = [X, X] starting from Sierpinski space, or, on the lattice side, from 
the three-element chain, is the subject of Example 7.70.
Itis also worth mentioning the treatment in the book of Lambek and Scott (1986) 
on categorical logic, which solves a three-way equation X = [X, X] = X x X. More 
generally, modeling the lambda calculus and associated programming languages is 
a vast field in theoretical computer science which goes far beyond the confines of 
duality theory, see, for example, the books Barendregt (2014) and Barendregt and 
Manzonetto (2022), and also see Manzonetto and Salibra (2008) for a survey on 
universal algebra in lambda theories.
Example 7.70 We want a solution to the domain equation X = [X, X], starting 
the iterative process from the Sierpinski space S. In dual form, this means we want a 
solution to the equation L = FEnd (L) within bifinite lattices, starting from the three- 
element chain, which we will denote by 3. As we have explained above, in order to 
get started, we need an embedding 3 ^ FEnd(3) or, dually speaking, a projection 
[S, S] ^ S. Also, as we shall see, it will be important that these morphisms are 
part of embedding-projection pairs. So let’s first see whether this is possible. As 
the calculation is easier on the space side, we look at it there. First, [S, S] is the 
poset of all order-preserving endofunctions on S. There are 22 = 4 functions from 
a two-element set to itself. In the case of a two-element chain, just one is not order 
preserving. That is, [S, S] = {0, idS, 1}, where 0 is the constantly 0 function, idS is 
the identity function, and 1 is the constantly 1 function. Since the projection map 
[S, S] ^ S must be surjective, 0 and 1 must be sent to 0 and 1, respectively. There

270
7 Domain Theory
are now two choices for where to send idS: for k e {0,1}, let p(k) denote the function 
[S, S] 
S that sends 0 to 0,1 to 1, and idS to k, see Figure 7.2.
[S, S] 
S
e (0)'
[S, S] 
S
e (0
Figure 7.2 The two embedding-projection pairs in Example 7.70. The solid lines 
represent the projections p(0) and p(1) and the dotted lines represent the embed­
dings e(0) and e(1) .
Both p(0) and p(1) have lower adjoints, e(0) and e(1), respectively. Note that e(1) 
sends 0 to 0 and 1 to idS, while e(0) sends each element of S to the corresponding 
constant function. Note also that for each k e{0, 1}, the pair (e(k), p(k)) is an 
EPP, since all order-preserving maps between finite sets are spectral maps. We 
now choose to work with (e(0), p(0) ) , because the function e(0) is the more natural 
embedding of S into [S, S]. Using Lemma 7.68, we obtain by induction a sequence 
of spaces
Y0 := S 
and 
Yn+1 = [Yn, Yn] for all n > 0,
and a sequence of EPPs
e0 := e(0),p0 := p(0) 
and 
en+1 := en o_o pn, pn+1 := pn o_o en
and thus we have a sequence of finite EPPs between domains
S [S, S] 
[[S, S], [S, S]] 
•••
and dually a sequence of finite EPPs between finite distributive lattices
3 FEnd (3) 
FEnd (^End (3)) 
• • • .
It remains to show that the inverse limit of the spaces, or equivalently, the colimit 
of the lattices is bifinite. This is easier to do on the lattice side, as we show now.
Write Ln := Fend(3) for every n > 0, denote by en : Ln Ln+1: pn the EPP 
given above, and let L be the colimit of this sequence of EPPs in the category of 
distributive lattices, with en : Ln ^ L, for each n > 0, the colimit cone. As in the 
proof of Theorem 7.69, we use the fact that a directed colimit of inclusions is, up 
to isomorphism, just given by union, so that each en [Ln] is a sublattice of L.We 

7.4 Domain Theory in Logical Form
271
claim that each en[Ln] is in fact an EPP-sublattice of L. The projection pn: L ^ Ln 
is given for a e Lm by pn ◦ ••• ◦ pm-1 (a) if m > n, by the identity if m = n, 
and by en-1 ◦ • • • ◦ em if m < n. We leave it as an exercise to check that this 
is a well-defined embedding-projection pair (see Exercise 7.4.1). Thus, L is again 
bifinite. Now, FEnd(L) also has a colimit cone under the same diagram, which can 
be obtained by applying the functor FEnd to the colimit cone giving L . Therefore, 
Fend(L) is isomorphic to L.
Example 7.71 We want to construct the least solution to the domain equation 
X = [X, X]±, or dually, to the equation L = F'^ (L, L)/fi3PP ® 1 within bifinite 
distributive lattices. The development is precisely the same as in the above example 
once we have an EPP to initialize the process. Again, it is simplest to argue on 
the space side. The terminal bifinite space is the one-element space, which we will 
denote by 1, and [1,1]± is the two-element ordered space ± < 1. The difference 
here, which makes the process canonical, is that we have only one choice for 
p: [1,1]± ^ 1. Its lower adjoint is e: 1 ^ [1,1]±, 1 ^ ±. Once we have this initial 
EPP, the arguments are identical to the ones in Example 7.70. We leave the details 
as an exercise. See Abramsky and Ong (1993, Section 4) for further details and the 
computational intuition behind the equation X = [X, X]±.
Exercises for Section 7.4
Exercise 7.4.1 Denote by BifEPP the category of bifinite lattices with as morphisms 
the EPPs. Let U: BifEPP ^ DL be the functor that is the identity on objects and 
sends a morphism (e, p) to e. Let D: I ^ BifEPP be a directed diagram. Prove that 
the colimit of the diagram U ◦ D is again a bifinite lattice.
Exercise 7.4.2 Fill in the details of the construction in Examples 7.70 and 7.71.
Exercise 7.4.3 Let 2—" be the set of pairs (I, f), where I is a down-set of the 
ordinal w and f is a function I ^ 2. We put the strict prefix ordering on 2—6', that 
is, (I, f) — (J, g) if, and only if, I c J and g |I = f. Show that (2—% —) is a bifinite 
domain.
Notes for Chapter 7
The treatment of domain theory in this chapter focuses on this material as an appli­
cation of Stone-Priestley duality and is based on this book’s authors’ interpretation 
of some of the material in Abramsky (1991). For more insight into denotational 
semantics and domain equations, we refer the interested reader to the specialized 
literature; we recommend in particular Abramsky and Jung (1994). Much more 
on 2-calculus and its models can be found, for example, in Barendregt (2014) or 
Barendregt and Manzonetto (2022).

272
7 Domain Theory
Abramsky (1987) was the first account, based on his PhD dissertation, of domain 
theory in logical form in the setting of Scott domains. Abramsky also already 
announced there the conceptual straightforwardness of extending to the bifinite 
setting modulo some technical intricacies to do with the identification of primes, 
and that this extension was being worked onby Glynn Winskel’s student Guo-Qiang 
Zhang at the time. Indeed, his PhD dissertation (Zhang, 1989), later published as 
Zhang (1991), takes, among others, Abramsky (1987) as starting point and treats the 
extension to the bifinite setting using the prevalent point of view in domain theory 
at the time. Concurrently, Abramsky (1991) also resolved the required intricacies 
based on an improvement of earlier work on bifinite domain theory in the dissertation 
of Gunter (1985).
The Hoffmann-Lawson duality was established independently by Hoffmann 
(1981) and Lawson (1979). Note that this duality is not to be confused with the 
duality between distributive continuous lattices and locally quasi-compact sober 
spaces developed around the same time in Hofmann and Lawson (1978); the one 
for completely distributive complete lattices involved R. E. Hoffmann while the one 
for distributive continuous lattices involved K. H. Hofmann, and both dualities have 
the same J. D. Lawson as their second-named author.
The results on completely distributive complete lattices presented in this chapter 
are due to Raney (1953), who introduced the relation ^ many years before the 
introduction of the relation in Scott (1972). Thus, it is somewhat backward to 
introduce ^ as a more specialized version of as, given the chronology, was 
in fact a generalization of the already existing ^.

8
Automata Theory
In this chapter, we discuss applications of duality theory to automata theory. The 
theory of regular languages and automata is a computer science topic with a rich 
theory and a wide and still growing range of practical and theoretical applications 
(Almeida et al., 2020; Pin, 2021a, 2021b). The availability of sophisticated mathe­
matical tools from algebra and topology is one of the main strengths of the classical 
framework.
Finite algebras were introduced into the theory early on by Myhill, and Rabin 
and Scott, and their power was established by the effective characterization of 
star-free languages by means of syntactic monoids (Schutzenberger, 1955, 1965). 
Syntactic monoids provide an abstract and canonical notion of so-called recognition 
for regular languages. Eilenberg’s theorem (Eilenberg, 1976) supplies a general 
framework in which to apply the strategy of Schutzenberger’s result. The success 
of this so-called algebraic method was greatly augmented by the introduction in 
the 1980s of profinite topology and in particular profinite monoids, see Almeida 
(1995, 2005), Weil (2002), and Pin (2009). A most powerful combination in this 
setting is that of Eilenberg’s and Reiterman’s theorems. Reiterman’s theorem is a 
generalization of Birkhoff’s variety theorem from universal algebra. It states that 
pseudovarieties of finite algebras are precisely the ones given by profinite identities 
(Reiterman, 1982). Thus, Eilenberg-Reiterman theory allows for the equational 
description of certain classes of regular languages. This can lead to decidable 
criteria for membership in the corresponding classes, in case a finite equational 
basis can be found, or, at least, an infinite basis that can be effectively tested on a 
finite algebra (Almeida and Weil, 1998).
In this chapter, we will see the rudiments of this theory from a duality point of 
view. Thus, recognition by monoids, and in particular syntactic monoids, will be 
defined duality-theoretically. We will see that the dual space of the Boolean algebra 
of regular languages over a given alphabet with certain additional operations is 
the so-called free profinite monoid. We will then show that the subalgebra-quotient 

274
8 Automata Theory
duality of Section 4.2, when applied to this pair, leads to the profinite equational 
method of Eilenberg-Reiterman theory. We will not cover the Eilenberg-Reiterman 
theory in full generality, but will see a particular example of it and we provide 
references to the recent research literature throughout the chapter for readers who 
want to get the full general picture. More bibliographic references can also be found 
in the notes at the end of this chapter.
In Section 8.1, after introducing basic notions from automata theory, we show 
how the classical construction of a syntactic monoid for a regular language can 
be understood via duality. In particular, we will see how this is a special case of 
the general duality for implication operators developed earlier in Section 4.5. The 
results in the first section use discrete duality in the case of free monoids and 
finite monoids, from which we then also derive that the collection of all regular 
languages is a Boolean algebra. Section 8.2 shows how to extend these ideas to 
profinite monoids, and establishes as its main result that the free profinite monoid is 
the dual of the Boolean algebra of regular languages, enriched with some additional 
operations. We show also how this result fits in a more general duality theorem 
for Boolean spaces equipped with a binary operation. Sections 8.3 and 8.4 show 
how this allows one to apply the methods of duality theory in the setting of regular 
languages, focusing in particular on characterizations of classes of languages via 
profinite equations. A more detailed outline of the rest of the chapter is given at the 
beginning of Section 8.2, after we introduce some of the basic notions that we will 
need.
8.1 The Syntactic Monoid as a Dual Space
We started our introduction to duality theory back in Chapter 1 with the discrete 
duality for finite distributive lattices, see Section 1.3. The finite case came first 
chronologically and, while it is simpler than the full topological theory, it contains 
many of the central ideas of the subject in embryonic form. A foundational result of 
algebraic automata theory is the fact that one may associate, with each finite state 
automaton, a finite monoid with a universal property. Our first goal in this chapter 
is to show that this foundational result is a case of discrete duality for complete 
and atomic Boolean algebras with additional operations. This will then lead to the 
applications of duality theory to the theory of regular languages that we look at 
later in the chapter.
Automata, Quotienting Operations, and Residuation
We start with automata, and show how they naturally lead us to consider dual 
Boolean algebras equipped with quotienting operations. An automaton is a very 

8.1 The Syntactic Monoid as a Dual Space
275
simple and weak model of computation; it is a machine that reads once over a finite 
sequence of input values and only in the order in which it is entered, and only 
produces one output bit at the end of its computation. Readers who have previously 
encountered notions of computability will notice that automata are very far from 
being Turing complete (see, for example, Exercise 8.1.3(e)). We will typically 
denote the input alphabet by A and will assume throughout that it is finite. In fact, 
profinite input alphabets are also natural in this setting, but we shall not need them 
in what we discuss in this chapter.
Recall that a monoid is a triple (M, •, 1), where • is an associative binary operation 
on M and 1 is a neutral or identity element for •, that is, 1 • m = m = m • 1 for 
all m e M. We will often omit • in the notation, writing simply mn instead of 
m • n, as is common practice in algebra. When multiple monoids M and N are 
in play, we sometimes use the notations 1 M and 1 N to distinguish their neutral 
elements. Note that, for an input alphabet A, the set of all finite sequences over A 
with binary concatenation is the free monoid generated by A, see Example 5.17(e) 
and Exercise 5.2.10. Recall that we denote this algebra by A*. We suppress the 
commas in sequences, so that we think of an element w e A * as a finite A-word, 
often simply called a word. That is, a word is a possibly empty string w = a1 ••• an, 
where n > 0 is a number called the length of w and ai e A for 1 < i < n.
Notation If w e A* is a finite word, as a notational convention, whenever we 
write w = a1 ••• am , we mean that the ai are elements of the alphabet A, and thus 
that m is equal to the length of w .
We now define the notion of automaton, also known as non-deterministic finite 
state automaton in the literature.
Definition 8.1 A (finite state) automaton is a structure A = (Q, A, 6, I, F), where
(a) 
Q is a finite set, whose elements we call states;
(b) 
A is a finite set, called the (input) alphabet;
(c) 
6 is a subset of Q x A x Q, called the transition relation;
(d) 
I c Q is a set, whose elements we call initial states; and
(e) 
F c Q is a set, whose elements we call final or accepting states.
We will call a tuple of the form M = (Q, A, 6) satisfying (a)-(c), without the 
initial and finite states specified, a (finite state) machine. Given an automaton 
A = (Q, A,6,I, F), we call the associated machine M = (Q, A,6) the underlying 
machine of A .
Let w = a1 ••• an e A* with each ai e A. An automaton A accepts w if 
there exists a sequence of states q0,...,qn e Q such that q0 e I , qn e F and 
(qi-1, ai, qi) e 6 for every 1 < i < n; if no such sequence exists, A rejects w.

276
8 Automata Theory
In particular, note that A accepts the empty word e if, and only if, I n F + 0. 
We denote by L(A) the set of words accepted by A, which is also known as the 
language recognized by A. A subset L c A * is called a regular language if there 
exists an automaton A such that L = L(A).1
The above definition allows for non-determinism: When in state q, upon reading 
a letter a e A, the automaton has the possibility to move to any of the states in the 
set S[ q, a, _]. When this set is always non-empty, the automaton is called complete, 
and when this set has cardinality at most 1, and the set of initial states has cardinality 
1, the automaton is called deterministic.2 Any regular language of finite words can 
be recognized by a complete deterministic automaton, as will also follow from the 
characterizations we give in Theorem 8.22. We note, however, that determinism 
does not come for free: Exercise 8.1.2 gives an example of a non-deterministic 
automaton with n states, but for which any deterministic automaton recognizing 
the same language requires at least 2n states. The connection with duality that we 
expose here is natural for the general notion of finite state machine that we defined 
above, and does not require determinism a priori.
When M = (Q, A, S) is a machine, for each a e A, we will write
Sa := {(q, q') e Q X Q | (q, a, q') e 6},
which is a binary relation on Q. We extend this definition to words as follows. For 
any non-empty word w = a 1 • • • a m e A *, let Sx be the relational composition 
Sa1................Sam and also define Se to be the identity relation on Q .A different way to
say this is that w ^ Sw is the unique monoid homomorphism from the free monoid 
A * to the monoid of binary relations on Q extending the assignment a ^ Sa, 
see Exercise 8.1.9. The relation Sw is the reachability relation of the machine 
M when reading a word w e A* .Awordw is then accepted by an automaton 
A = (Q, A,S,I, F) based on M if, and only if, there exist q0 e I and qf e F such 
that (q0, qf ) e Sw .
Example 8.2 Consider the deterministic finite-state automaton
A = (Q, A, S, {1}, {2}),
where Q := {1, 2, 3}, A := {a, b}, and S := {(1, a, 2), (2, b, 3), (3, a, 2)}. We will 
often depict such an automata by a graph, as in the following diagram.
1 The name regular language originates from a different approach, via regular expressions, that is, 
expressions, built up from single letters by finite union, finite concatenation product, and the Kleene star, 
which yields the submonoid of A* generated by a subset of A*. The concept we have defined is more aptly 
called recognizable language. However, it is a non-trivial theorem, proved by Kleene at the very beginning of 
automata theory, that a language is recognizable if, and only if, it is regular (Kleene, 1956), and the adjective 
regular is more commonly used, even if one focuses on recognition as we do here.
2 In some references, the term “deterministic” includes “complete” by definition. Also, note that we can safely 
ignore the case where the set of initial states I is empty.

8.1 The Syntactic Monoid as a Dual Space
277
a
Here, the nodes of the graph are the states and the directed edges are labeled by 
letters and correspond to the elements of the transition relation. The initial states are 
indicated by an entering arrow while the final states are indicated by an arrow out. 
From the definition of acceptance, note that a word w is accepted by this automaton 
A if, and only if, w begins with an a , followed by an arbitrary number of repetitions 
of the string ba. Thus, we have our first example of a regular language,
L(A) = {a(ba)n | n > 0} = {a, aba, ababa, abababa,...}.
The same transition relation 6 on this set of states Q may be used to recognize other 
regular languages; for example, the reader may verify that the automaton
A := (Q, A, 6, {2}, {2,3})
recognizes the language L(A') = {(ba)n, (ba)nb | n > 0}. Other regular languages 
can be obtained by choosing other sets of initial and final states. Crucially, however, 
if we fix any finite state machine M = (Q, A,6) , then there are only finitely many 
choices for a pair of subsets (I, F) e P(Q)2. Thus, only finitely many regular 
languages can be recognized by the automata based on a fixed machine M . This 
essentially trivial observation will be important in what follows.
We will build on the idea of the above example to give an algebraic characteriza­
tion of regular languages as certain special elements of the Boolean algebra P (A *), 
enriched with additional operations.
Definition 8.3 Let A = (Q, A, 6, I0, F0) be an automaton and let L = L (A) and 
M = (Q, A,6) the underlying machine of A. For any pair of subsets (I, F) e P(Q)2, 
denote by L(I, F) the language recognized by the automaton (Q, A,6,I, F) ;in 
particular, L(A) := L (I0, F0). We write
R (M) := {L (I, F) | (I, F) eP (Q )2 }cP (A *)
for the set of languages which can be recognized by automata obtained from A by 
changing its initial and final states. We denote by L (M) the sublattice generated 
by R(M) and by B(M) the Boolean subalgebra generated by R (M) .
Remark 8.4 Let M be a finite state machine. Note that the set R (M) has at most 
22|Q| elements and is thus in particular finite. Therefore, L(M) and B(M) are both 
finite, since finitely generated distributive lattices and Boolean algebras are finite 

278 
8 Automata Theory
(see Exercise 4.1.3). It follows that both L(M) and B(M) are, trivially, complete 
sublattices of P (A *).
The idea that we will develop now is that the finite lattice L (M) and the finite 
Boolean algebra B (M) can be viewed as dual algebraic structures associated to the 
machine M . The dynamic behavior of a machine M is captured by the action of 
the alphabet on the set of states. Taking into account the direction-reversing nature 
of duality, it stands to reason that the appropriate structure to consider on the dual 
collection of languages is given by quotienting operations, defined, for any language 
L c A * and letter a e A, by
a-1 L := {w e A * | a w e L} 
and 
La-1 := {w e A * | w a e L},
or more generally, for any word x e A* ,
x-1L := {w e A* | xw e L}, Lx-1 := {w e A* | wx e L}.
We call the operations L ^ x-1 L and L ^ Lx-1 the left and right quotienting 
operations on the Boolean algebra of languages P(A*). Note that these operations 
are Boolean algebra endomorphisms onP(A*); indeed, each of the operations com­
putes the inverse image of a function from A* to A* . These quotienting operations 
may thus be seen as a biaction of the free monoid A* on the Boolean algebra P(A*); 
we will further explore this in Definition 8.13. For now, we say that a collection of 
languages L c P(A*) is closed under quotienting if, for every x e A* and L eL, 
we have that x-1 L eLand Lx-1 eL.
A key insight is that the collection R(M) of languages recognized by a machine 
M is closed under quotienting, as we will prove now. Recall that, when R is a 
relation from asetX to Y, we write R[U] for the relational direct image ofU under 
R, that is, R[U] = {y e Y | uRy for some u e U}, and similarly R-1 [V] for the
relational inverse image. We apply this notation here to the reachability relations 
6x for x e A * induced by a finite state machine.
Lemma 8.5 Let M = (Q, A, 6) be a machine. For any x, y e A * and (I, F) e 
P (Q)2, we have
x-1L(I, F) = L(6x[I], F) 
and 
L(I, F)y-1 = L(I,6y-1[F]).
In particular, R (M ) is closed under quotienting.
Proof Note that (q, q') e 6x if, and only if, there exists a path from q to q' labeled 
by the letters of the word x . Using this characterization, for any x, w e A* and 
(I, F) e P(Q)2, we now have that
w e x-1 L(I, F) if, and only if, xw e L(I, F), 

8.1 The Syntactic Monoid as a Dual Space 
279
if, and only if, there exist states q0, q 1, q2 e Q such that
q0 e I, (q0, q 1) e Sx, (q 1, q2) e Sw and q2 e F.
This last condition is clearly equivalent to the condition that the word w is in the 
language L (Sx [I], F). This proves the first equality. The proof of the second equality 
is similar. 
□
We have thus associated, with any finite state machine M , the set R (M ) which, 
as Lemma 8.5 shows, is closed under the quotienting operations. We now show that 
it follows from this that the lattice L (M) and the Boolean algebra B (M) are also 
closed under quotienting, which means that they can be considered as algebraic 
structures in and of themselves, independently from the machine M .
Proposition 8.6 Let M = (Q, A, S') be a machine. Then, L (M) and B (M) are 
closed under quotienting.
Proof Let x e A*. We will prove that x-1 L e B(M) for every L e B(M); the 
proofs of the other properties are essentially the same. Let Bx denote the inverse 
image of B (M) under the quotienting operation by x, that is,
Bx := {L e P (A *) | x-1 L e B (M)}.
Then, since the quotienting operation is an endomorphism, Bx is a Boolean subal­
gebra of P (A *) and it contains R (M) by Lemma 8.5. Thus, Bx contains B (M), 
which is what we needed to prove. 
□
Combining Remark 8.4 and Proposition 8.6, we now aim to deduce stronger 
closure properties for L (M) and B (M) , namely, they are not just closed under 
quotienting by single words, but by any set of words. In order to express this closure 
property, which also plays a central role in the more general theory of varieties of 
regular languages alluded to in the introduction of this chapter, we need to introduce 
residuation operations on P(M) for an arbitrary monoid M.
For any monoid M, the Boolean algebra P (M) carries a complex multiplication • 
defined by
u • t := { mn | m e u, n e t}.
Since this operation • is a complete binary operator on a complete Boolean al­
gebra, it has a left and a right residual, which we denote by \ and /, respec­
tively, see Example 4.62 and Exercise 4.5.6. These are the two unique operations, 
\, /: P(M)2 ^ P(M), such that, for any t, u, v e P(M),
u • t C V ^^ t C U\v ^^ U C v/1.
More explicitly, in terms of our duality for implication-type operators of Sec­
tion 4.5, let us write R C M3 for the graph of the multiplication on M, that is,

280
8 Automata Theory
R = {(m 1, m2, m) e M3 | m 1 • m2 = m}. Then, \ and / are the implication-type oper­
ators obtained from the relation R given by the monoid multiplication on M by using 
the first and the third, or, respectively, the second and the third coordinates as inputs:
u\v = M - (R[u, _, M - v]) = {m e M | km e v for all k e u}, 
v/t = M - (R[ , t, M - v]) = {m e M | mf, e v for all f, e t}.
In fact, as we will see below, if we want to witness a monoid operation • on a set 
M on its discrete dual Boolean algebra P(M), then the residual operations \ and / 
are more important than the complex multiplication. This is not so surprising since 
duality should reverse the direction of a map. Note that, starting with the following 
definition, we distinguish between residuated algebras, where the multiplication • is 
present as part of the structure, and residuation algebras, where the multiplication 
• is absent. While the difference is small in this section, we will later consider 
residuation algebras in more generality, see Definition 8.27.
Definition 8.7 Let M be a monoid. We call the Boolean algebra with three 
additional operations (P (M), •, \,/) the (discrete) dual residuated Boolean algebra 
of M. The reduct (P(M), \, /), a Boolean algebra with two additional operations, 
will be called the dual residuation algebra of M .
A residuation ideal is a sublattice L of P(M) such that, for any r e P(M) 
and s eL, both r\s eLand s/r eL. A residuation ideal is said to be Boolean 
provided the underlying sublattice is a Boolean subalgebra and it is said to be 
complete provided the underlying sublattice is a complete sublattice of P (M) .
Residuation ideals are closed under intersections, so that for any collection 
S c P (M), there is a smallest residuation ideal containing S, which we call 
the residuation ideal generated by S . Note also that the collections of Boolean, 
complete, and complete Boolean residuation ideals are also all closed under inter­
sections and thus there are also corresponding notions of generated complete and/or 
Boolean residuation ideals (see Exercise 8.1.6 and Definition 8.11).
Quotienting operations may now be defined for a general monoid M by restricting 
the residual operations to the atoms of P(M) as follows.
Definition 8.8 Let M be a monoid, m e M and s e P(M). We write
m-1s := {m}\s 
and sm-1 := s/{m}.
We call m-1 s and sm-1 the left and right quotients of s by m, respectively. We will 
call the operations 5 ^ m-1 5 and 5 ^ sm-1 quotienting operations on the Boolean 
algebra P (M) .
A subset S c P(M) is closed under quotienting if, for every 5 e S and m e M, 
m-1 5 e S and 5m-1 e S. The closure under quotienting of a subset S c P(M) is 

8.1 The Syntactic Monoid as a Dual Space 
281
defined as the smallest subset Q(S) that contains S and is closed under quotienting; 
concretely,
Q(S) = {m-1 sn-1 | m, n e M, s e S}.
Note in particular that the operations L ^ x-1 L and L ^ L y-1, for x, y e A * 
and L c A*, which we introduced in Lemma 8.5, are the quotienting operations 
on P(A*) given by the monoid A*. Being closed under quotienting is clearly a 
consequence of being a residuation ideal; we now prove that the converse holds in 
the complete setting.
Proposition 8.9 Let M be a monoid and let L be a complete sublattice of P(M). 
Then, L is a residuation ideal if, and only if, L is closed under quotienting.
Proof Suppose L is a complete sublattice of P(M) that is closed under quotient- 
ing. Let s eLand r e P(M). Since r = mer{m}, we have
and the latter is in L because L is closed under quotienting and complete. In the 
same way, s/r e L. 
□
Summarizing what we know about the lattice L (M) and the Boolean algebra 
B (M) associated to a finite state machine M , we have the following.
Proposition 8.10 Let M = (Q, A,S) be any finite state machine. Then, L (M) 
and B(M) are finite residuation ideals of P(A*).
Proof By Proposition 8.6, L(M) and B(M) are closed under quotienting. By 
Remark 8.4, L(M) and B(M) are finite, hence complete, sublattices of P(A*). 
Proposition 8.9 now gives the statement. 
□
Proposition 8.10 will allow us to express regularity of a language Linawaythatis 
independent from any particular machine recognizing L, only using the residuation 
structure on P(A*).
Definition 8.11 For any language L e P(A*), we write L(L) for the residuation 
ideal of P(A*) generated by {L} and B(L) for the Boolean residuation ideal of 
P(A*) generated by {L}.
Corollary 8.12 Let L e P(A*) be regular. Then, L(L) and B(L) are finite 
and thus complete residuation ideals of P(A*). Moreover, both are effectively 
computable from any automaton that recognizes L.

282
8 Automata Theory
Proof Let A be any automaton that recognizes L and write M for its underlying 
machine. Then, L e L(M), so by Proposition 8.10, we must have L(L) c L(M), 
and the latter is finite. In particular, L(L) can be computed effectively by closing 
{L} under quotienting and lattice operations of L(M), which are given by Lemma 
8.5. The argument for B(L) is the same. 
□
We will see in Theorem 8.22 that the conditions in Corollary 8.12 are in fact 
enough to conclude that L is regular. For now, we see that L (L) and B(L) are finite 
algebraic structures canonically associated with a regular language L. We will show 
in the next subsection that B(L) is in fact the Boolean residuation algebra dual to 
the syntactic monoid of the regular language L .
Discrete Duality for Monoid Quotients and Residuation Ideals
We will now need to use some universal algebraic notions for monoids. The general 
definitions of universal algebra apply to monoids just as they apply to lattices or 
Boolean algebras; we briefly recall the basics of these definitions in the case of 
monoids and refer to, for example, Burris and Sankappanavar (2000) or Wechler 
(1992) for more information.
A function f: M ^ N between monoids is called a homomorphism if f (xy) = 
f(x)f(y) for all x, y e M, and f(1M) = 1N . A congruence on a monoid M is 
an equivalence relation ft such that, for any m 1, m1, m2, m22 e M, if mi ft m( for 
i = 1,2, then m 1 m2 ft m1 m2. Note that it is equivalent to say that ft is invariant 
under multiplication on both sides, that is, if m, m' e M with m ft m' and x e M, 
then xm ft xm' and mx ft m'x. The quotient of M by the congruence ft is the 
monoid based on the set of ft-equivalence classes, M/ft, uniquely defined by the 
requirement that [m 1]^ [m2]^ = [m 1 m2]^ for every m 1, m2 e M; its neutral element 
is [1M]#. For any homomorphism f: M ^ N between monoids, the kernel of f,
ker(f) := {(m, m') | f (m) = f (m')},
is a congruence on M and f can be factored as the surjective homomorphism 
M M/ker(f) that sends m to [m]ker(f) followed by an injective homomorphism 
M/ker f ^ N well defined by requiring that [m]ker(f) is sent to f (m), for every 
m e M. This construction is known as the first isomorphism theorem for monoids. 
In particular, for any surjective monoid homomorphism M N, N is isomorphic 
to M/ker( f) , so that surjective homomorphisms with domain M may be identified, 
up to isomorphism, with congruences on M . As in the case of distributive lattices 
(see Exercise 5.3.1), surjective homomorphisms in the category of monoids are 
epimorphisms, but the converse is not true (see Exercise 8.1.8).

8.1 The Syntactic Monoid as a Dual Space
283
A semigroup is a pair (S, •) where • is an associative binary operation on M. Thus, 
“semigroup = monoid minus neutral element.”3 A subsemigroup of a monoid Mis a 
subset of M that is closed under multiplication. A subsemigroup is a submonoid if it 
moreover contains 1. Notice that a subsemigroup of a monoid M may be a monoid 
with a different identity element than M (see Exercise 8.1.5). If M is a monoid 
and S is a subset of M , then there exist a smallest subsemigroup and a smallest 
submonoid of M that contain S. These are called the subsemigroup generated by S 
and the submonoid generated by S .
A cornerstone result in the algebraic theory of regular languages establishes 
a close connection between languages recognized by finite automata and finite 
quotients of free monoids. Our aim in the rest of this section is to show that this 
connection is an instance of discrete duality.
We saw in Section 4.2, Theorem 4.36, that quotients of a set correspond to 
complete Boolean subalgebras of its power set. We are now in a situation where 
the set M additionally carries the structure of a monoid, and we will show in 
Theorem 8.18 that the monoid quotients of M correspond dually to complete 
Boolean residuation ideals of P(M). The first step toward our proof of Theorem 
8.18 will be to view monoid quotients as biactions; see Proposition 8.17. We will 
then use this theorem to characterize regular languages. We first give the necessary 
algebraic definitions.
Definition 8.13 Let M be a monoid and S a set. A left action of M on S is a 
function A: M x S ^ S such that, for every m, m' e M and x e S, we have
A(m'm, x) = A(m', A(m, x)) and A(1M, x) = x.
A left action may also be viewed as a homomorphism from M to the monoid of 
functions S ^ S under composition, by sending m e M to the function Am : S ^ S 
defined by A m (x) := A (m, x); the left action is called faithful if m ^ A m isinjective. 
If the left action is clear from the context, we write m • x for A(m, x), noting that the 
action law then gives that (m'm) • x = m' • (m • x). If M has left actions on two sets S 
and S', then a function h: S ^ S' is a morphism if, for any m e M, x e S, we have 
m •S' h(x) = h(m •S x). The notion of a right action of M on S is defined 
symmetrically.
A biaction of M on S is a pair (A, p), where A is a left action, p is a right action, 
and, for any m, m' e M and x e S, we have
p(A(m, x), m') = A(m, p(x, m')).
This axiom implies that, when the pair (A, p) is clear from the context, we can 
unambiguously write m • x • m ’ for the result of acting on x by m on the left and
3 We will not be concerned much with semigroups in this chapter, although most of the results that we state and 
prove for monoids also hold for semigroups.

284
8 Automata Theory
by m' on the right, with the actions being performed in whichever order. A bi­
action can thus be described alternatively as a function a: M x S x M ^ S for 
which a(-, -, 1M) is a left action, a(1M, -, -) is a right action, and a(m, x, m') = 
a(1M, a(m, x, 1M), m') = a(m, a(1M, x, m'), 1M) for every m, m' e M and x e S. 
A biaction morphism is a function that is an action morphism for both the induced 
left and right actions.
Example 8.14 The Cayley representation of a monoid M is given by letting it 
act on its own underlying set: for any m, x e M, define A (m, x) := mx. This left 
action is faithful, since Am (1M) = Am (1M) implies m = m'. Similarly, the monoid 
M acts on itself on the right, by setting p(x, m) := xm for any x, m e M. The 
associativity axiom of the monoid says that (A, p) is a biaction, and we call this the 
Cayley biaction of M on itself.
Applying discrete duality to the Cayley functions A m and pm , for each m e M , 
we obtain two complete homomorphisms Am1,pm1: P (M) ^ P (M). These two 
functions then give a biaction of M on the set P(M), concretely given by:
M x P (M) x M ^ P (M),
(m, s, n) ^ {x e M | mxn e s}.
This biaction of M on P(M) corresponds to looking at residuation with respect to 
singleton sets. As long as we stick to the discrete duality, it is equivalent whether 
one considers residuation by general sets or the biaction given by residuation 
with respect to singleton sets. This fact is exploited in the development below, in 
particular in the proof of Theorem 8.18.
We now show that biactions, taken through discrete duality, give biactions.
Proposition 8.15 Let M be a monoid and suppose M has a biaction on S. Then, 
M has a biaction on P (S) given, for m1, m2 e M and u e P(S), by
m-1 u m-1 := {x e S | m 1 • x • m2 e u},
and the map u ^ m-1 um-1 is a complete Boolean algebra homomorphism. The 
induced left action is u ^ um-1 and the induced right action is u ^ m-1 u. If M also 
has a biaction on T and h: S ^ T is a biaction morphism, then h-1: P (T) ^ P (S) 
is a biaction morphism for the dual biactions. In particular, for any m1, m2 e M, 
the quotienting operation P(M) ^ P(M) given by u ^ m-1 u m-1 is a complete 
Boolean algebra homomorphism.
Proof The fact that (m, x) ^ m • x is a left action of M on S corresponds via duality 
to the fact that (u, m) ^ m-1 u is a right action of M on P (S), and symmetrically on 
the other side. Note that for this reason we write the dual of the right action on the left 
and the dual of the left action on the right. The compatibility of the two actions on S 

8.1 The Syntactic Monoid as a Dual Space
285
is dual to the compatibility of the two actions on P(S), and likewise the dual h-1 ofh 
is a biaction morphism (see Exercise 8.1.7 for details). The “in particular” statement 
is the application of the proposition to the Cayley biaction of M on itself. □
We note a consequence of Proposition 8.15, which generalizes the argument 
given in Proposition 8.6. Recall from Definition 8.8 that, when M is a monoid and 
S is a subset of P(M), Q(S) denotes the closure under quotienting of S.
Proposition 8.16 Let M be a monoid and S c P (M). The (complete) sublattice 
generated by Q (S) and the (complete) Boolean subalgebra generated by Q (S) are 
all closed under quotienting. In particular, for any regular language L, L(L) is the 
sublattice of P (A *) generated by Q ({L}) and B (L) is the Boolean subalgebra of 
P (A *) generated by Q ({L}).
Proof Denote by L the sublattice generated by Q(S). Let m 1, m2 e M be arbitrary. 
Since the function h: u ^ m-1 um-1 is a lattice homomorphism, the inverse image 
h-1 (L) is a sublattice of P(M). Also, note that Q(S) c h-1 (Q (S)) c h-1 (L), 
and thus Lch-1 (L). We conclude that, for any u eL, m1-1um2-1 eL. Thus, 
L is closed under quotienting. The proofs for the generated complete sublattice, 
the generated Boolean subalgebra, and the generated complete Boolean subalgebra 
are analogous. The “in particular” statement now follows by the proof of Corollary 
8.12. 
□
In the following proposition, we will consider a monoid M,asetS, and a 
surjective function h: M S from M onto a set S. Note that, since h is surjective, 
there is at most one binary operation •S on S with respect to which h becomes 
a homomorphism, namely, whenever s1, s2 e S, we can pick mi e M such that 
si = h(mi), and then s1 •S s2 must be h(m1m2). This operation •S is well defined if, 
and only if, the kernel of h is a monoid congruence. We will now show that this is 
also equivalent to having a biaction of M on S that is respected by the function h.
Proposition 8.17 Let M be a monoid, S a set, and let h: M S be a surjective 
function. The following are equivalent:
(i) there exists a well-defined monoid structure on S such that h is a homomor­
phism; and
(ii) there exists a biaction of M on S such that h is a morphism from the Cayley 
biaction on M to the biaction on S.
Proof Assume (i) holds. Define the biaction of M on S by
ah : M X S X M ^ S and a(m 1, 5, m2) := h(m 1) •S 5 •S h(m2). 
(8.1)
We first show that (m, s) ^ ah (m, s, 1M) is a left action. Indeed, for any m, m' e M 
and 5 e S we have

286 
8 Automata Theory
ah(m'm, s, 1m) = h(m')h(m)s = ah (mah (m, s, 1m), 1m)
and also,
ah (1M, s, 1M) = h(1M)sh(1M) = s.
Symmetrically, (s, m) ^ ah (1M, s, m) is a right action. By a similar calculation, 
ah is a biaction. Finally, h is a morphism of biactions, since, for the left actions, for 
any m, m' e M, we have
h(m •M m') = h(mm') = h(m)h(m') = ah(m, h(m'), 1M),
and similarly for the right action.
Now assume (ii) holds and let (A, p) be such abiaction. Then, for any m 1, m2 e M, 
we have
h(m1m2) = h(Am1 (m2)) = a(m1, h(m2), 1M),
and similarly h(m1 m2) = a(1M, h(m1 ), m2) . From this, it follows that if m1 e M 
and (m2, m2) e ker( h), then we must have
h (m 1 m2) = a (m 1, h (m2), 1M) = h (m 1 m2)
and, symmetrically, we also have h(m2m 1) = h(m2m 1). Thus, ker(h) is a monoid 
congruence, from which (i) follows by the remarks preceding the proposition. □
Propositions 8.17 and 8.15 together imply that surjective monoid homomor­
phisms M N are dual to maps P (N) ^ P (M) that preserve the quotienting 
operations on the power set algebras of M and N . We now characterize the images 
of such maps as the complete Boolean residuation ideals of P(M).
Theorem 8.18 LetM be a monoid and (P(M), •, \,/) its discrete dual residuated 
Boolean algebra. Let h: M N be a surjective function from M to a monoid 
N and denote by B the image of h-1: P (N) ^ P (M). Then, h is a monoid 
homomorphism if, and only if, B is a residuation ideal of P(M). In particular, 
under discrete duality, monoid quotients of M correspond to complete Boolean 
residuation ideals of P(M).
Proof First suppose h is a monoid homomorphism. By Proposition 8.17, h induces 
a biaction of M on N and by Proposition 8.15, h-1 is a morphism for the dual 
biaction of M on P (N) , and thus the image of h-1 is closed under quotienting. By 
Proposition 8.9, it is therefore a residuation ideal.
For the converse, suppose that the image B of h-1 is a residuation ideal. Then, 
in particular we get a biaction of M on P(N), as follows. For any m, m' e M and 
u e P (N), let m • u • m' be the unique element of P (N) such that
h-1 (m • u • m') = m-1 h-1 (u)(m')-1.

8.1 The Syntactic Monoid as a Dual Space 
287
Note that the latter is indeed in B because it is a residuation ideal. The dual of this 
biaction of M on P(N) now gives a biaction of M on N for which h is a biaction 
morphism (see Exercise 8.1.7), so Proposition 8.17 implies that h is a monoid 
homomorphism. 
□
In summary, Theorem 8.18 shows that the anti-isomorphism of Theorem 4.36, 
between equivalence relations on a set M and complete Boolean subalgebras of 
P(M), restricts to an anti-isomorphism between monoid congruences on M and 
complete Boolean residuation ideals of P(M). For any surjective monoid homo­
morphism h: M N, we define the corresponding residuation ideal of P (M) to 
be
B := {h-1 (u) | u c N}.
Conversely, when B is a complete Boolean residuation ideal of P(M), with M a 
monoid, we have a unique congruence $ on M for which B is the corresponding 
residuation ideal; we call $ the congruence dual to B. Recall from the proof of 
Theorem 4.36 that this congruence $ may be defined explicitly, for x, y e M, by
x$y ^^ for all a e B, x e a if, and only if, y e a.
The following definition, namely that of recognition from automata theory, cod­
ifies a slight generalization of the duality relationship of Theorem 8.18, in that h 
need not be surjective.
Definition 8.19 Let M be a monoid, 5 e P (M) and h: M ^ N a monoid 
homomorphism. We say that s is recognized by h provided there is u c N such that 
5 = h-1(u); in this case, we call h a recognizer for 5. That is, 5 is recognized by 
h if, and only if, it belongs to the residuation ideal corresponding to the surjective 
homomorphism M im(h). Further, we say that a monoid N recognizes s provided 
there is a monoid homomorphism h: M ^ N which recognizes s.
When h: M ^ N is a monoid homomorphism, we call the surjective function 
h: M im(h), which is still a homomorphism, now onto the submonoid im(h) of 
N , the surjective co-restriction of the homomorphism h.
It follows from Theorem 8.18, combined with Theorem 4.36, that we always 
have a least recognizer for any s e P(M), namely the dual of the complete Boolean 
residuation ideal generated by s.
Corollary 8.20 LetM be a monoid and let s e P(M). Then, the complete Boolean 
residuation ideal generated by s corresponds to the monoid quotient
hs: M 
M/=s,

288
8 Automata Theory
where m =s m' if, and only if,
for all x, y e M 
(xmy e 5 ^^ xm'y e 5).
This is the least recognizer of s, in the sense that it factors through the surjective 
co-restriction of any other recognizer.
The first statement of Corollary 8.20 follows from the fact that the complete 
Boolean residuation ideal generated by 5 is equal to the smallest complete Boolean 
subalgebra containing Q({5}), by Propositions 8.9 and 8.16. We leave the details of 
the rest of the Corollary as Exercise 8.1.10.
Definition 8.21 Let M be a monoid and 5 e P(M). Then, the congruence =s, 
defined by m =s m' if, and only if,
for all x, y e M, 
xmy e s ^^ xm'y e s
is called the syntactic congruence of 5. The quotient map
h s : M 
M/=s
is called the syntactic homomorphism of 5 and Ms = M/ =s is called the syntactic 
monoid of 5.
We are now ready to prove the main theorem of the section. The equivalence 
of (i), (iv), and (v) in Theorem 8.22 is a classical result in the automata theory 
literature, but our point of view here, via duality for residuation ideals, is more 
recent (Gehrke et al., 2008).
Theorem 8.22 Let L e P (A *). The following conditions are equivalent:
(i) 
the language L is regular;
(ii) 
the residuation ideal L (L) is finite;
(iii) 
the Boolean residuation ideal B(L) is finite;
(iv) 
the syntactic monoid ML of L is finite; and
(v) 
the language L is recognized by a finite monoid.
Moreover, if L is regular then the syntactic monoid is effectively computable from 
any automaton recognizing L.
Proof If L is regular, then, by Corollary 8.12, L(L) is finite. If L(L) is finite, 
then B(L) is finite as it is the Boolean algebra generated by L(L). If B(L) is finite, 
then its dual set is finite, and this is the syntactic monoid ML, by Corollary 8.20. 
Note that this dual of B (L) is indeed effectively computable, since B(L) can be 
computed from any automaton recognizing L by Corollary 8.12, and its dual is 
the set of atoms of B (L) equipped with the multiplication dual to the quotienting 

8.1 The Syntactic Monoid as a Dual Space
289
operations. If ML is finite, then as L is recognized by ML , it is recognized by a 
finite monoid. Finally, if L is recognized by a finite monoid N , then there is a 
monoid homomorphism h: A * ^ N and u c N so that L = h-1 (u). We define an 
automaton A = (N, A, 6, {1N}, u) by setting
(n, a, n') e 6 
^^ 
nh(a) = n
Then, for x = a 1 • • • an e A*, we have that A accepts x if, and only if, h(x) = 
h (a 1) • • • h (an) = 1N h (a 1) • • • h (an) e u if, and only if, x e L. 
□
Definition 8.23 Let A be a finite set. We denote by RegA the subset of P(A*) 
consisting of the regular languages over A.
Using the characterization of regular languages in Theorem 8.22, we can now 
show that the set RegA of all regular languages in fact carries a lot of algebraic 
structure. Apart from its interest in computer science, the infinite Boolean algebra 
RegA is of interest in constructive mathematics as it is a non-trivial countably 
infinite subalgebra of a power set algebra which exists constructively.
Proposition 8.24 The set RegA over A is a Boolean residuation ideal of P(A*).
Proof Let L be a regular language over A. We have seen, in Theorem 8.22, that L 
is recognized by a finite monoid quotient h: A * M. That is, L = h-1 (u) where 
u:= h[L] c M is the direct image of L under h. It follows that the complementary 
language L c = A * — L is also recognized by h ,viatheset u c = M — u. Thus, the set of 
regular languages is closed under complementation. The set RegA clearly contains 
A* . To see that it is closed under intersection, notice that, if L is recognized by 
h: A * 
M and K is recognized by g: A * 
N via v c N, then L n K is
recognized by the product map
{h, g): A * ^ M X N, w ^ (h (w), g (w))
via the subset u X v of M X N.
It remains to show that RegA is a residuation ideal. For any L e RegA, the 
residuation ideal L(L) is finite by Theorem 8.22. Thus, for any language K e 
P(A*), the languages K\L and L/K are in the finite residuation ideal L(L), so that 
the residuation ideals L(K\L) and L(L/K) are contained in L(L) and thus also 
finite. By Theorem 8.22, K\L and L/K are regular, as required. 
□
Notice that, even though we took h and g in the proof of closure under binary 
intersection in Proposition 8.24 to be surjective, the monoid homomorphism {h, g) 
is not necessarily surjective. Of course, we could have gotten a surjective monoid 
morphism by looking at the surjective co-restriction of the product map. This is one 
of the reasons why it is more natural to relax the notion of recognition to monoid 

290
8 Automata Theory
morphisms rather than insisting on surjections. Also note that, by taking products 
of homomorphisms, as in the proof of Proposition 8.24, we obtain the following 
corollary.
Corollary 8.25 If L1,...,Ln are regular languages over A, then there exists a 
finite monoid quotient h: A * M that recognizes all the languages in the Boolean 
subalgebra generated by L1,...,Ln.
In the next section, we will apply topological duality to the Boolean residuation 
algebra (RegA, /, \).
Exercises for Section 8.1
Exercise 8.1.1 Let A be a finite alphabet and u e A*. Show that the singleton {u} 
is a regular language by exhibiting a finite state automaton which recognizes this 
singleton language. Conclude that the Boolean algebra of all finite and co-finite 
subsets of A* is contained in RegA.
Exercise 8.1.2 Let A be a finite alphabet. For w e A*, write c(w) for the set of 
letters that occur in w. Consider the language
L = {w e A * | c (w) c A}.
(a) 
Give a finite automaton with | A| states that recognizes L. Hint. In each state, 
verify that a particular letter does not appear in the word; make all states 
initial.
(b) 
Show that c: A * ^ P (A) is a monoid homomorphism, where the monoid 
operation on P(A) is U, with neutral element 0.
(c) 
Prove that c is, up to isomorphism, the syntactic homomorphism of L.
(d) 
Conclude that L can not be recognized by a monoid that has fewer than 2|A| 
elements.
Note. The syntactic monoid of a regular language L is in general isomorphic to the 
monoid of transitions of the so-called minimal automaton of L, see, for example, 
Pin (2021a, Chapter 1, Section 4.3). Also, see Exercise 8.1.10 below.
Exercise 8.1.3 Let A be a one-element alphabet.
(a) 
Show that A* is isomorphic to the monoid (N, +).
In the rest of this exercise, we will identify the monoid A* with (N, +) .
(b) 
Show that the kernels of surjective monoid homomorphisms (N, +) M, with
M finite, are exactly the monoid congruences $N,q, where, for N, q e N with 
q > 1, we write $N,q for the monoid congruence on N generated by the single 
pair (N, N + q). Also, show that a pair (m, n) e N2 is in $N,q if, and only if, 
m = n or both m and n are > N and m - n is divisible by q.

8.1 The Syntactic Monoid as a Dual Space
291
(c) 
Conclude that if M is a finite monoid that is generated by a single element, then 
M is isomorphic to N/$N, q for some N, q e N.
Note. An important fact in the theory of finite monoids, closely related to the 
preceding two items, is that every finite semigroup generated by a single element 
contains a unique idempotent; see the proof of Proposition 8.39, which contains 
hints for item (c).
(d) 
Show that the collection of regular languages in N is generated as a Boolean 
algebra by the singleton languages and the languages of the form
qN + r := {qn + r | n e N} for q, r e N.
(e) 
Show that the language {2n | n e N} is not regular.
(f) 
Show that RegA is not complete. Hint. Use Exercise 1.2.6.
Exercise 8.1.4 Let A be a finite set and Z2 be the monoid of integers modulo 2 
under addition. Consider the finite state automaton
A = (Z2, A, 6, {0}, {0}), where 6 = {(0, a, 1), (1, a, 0) | a e A}.
Show that A recognizes the language consisting of all words in A * of even length.
Exercise 8.1.5 Prove that the identity element of a monoid is unique. Give an 
example of a monoid M with a subsemigroup N that is not a submonoid of M , but 
such that N is a monoid in its own right.
Exercise 8.1.6 Let M be a monoid. Suppose that J is a collection of residuation 
ideals of P(M). Prove that J is again a residuation ideal. Prove that if, moreover, 
the residuation ideals in J are all Boolean and/or complete, then the same is true 
for n J.
Exercise 8.1.7 This exercise fills in the details of Proposition 8.15. Let M be a 
monoid, S a set, and let 2: M x S ^ S and p: S x M ^ S be functions. For any 
m e M, write 2m(5) := 2(m, s) and pm(s) := p(s, m). Let r: P(S) x M ^ P(S) 
and f,: MxP (S) ^ P(S) be the functions defined, for any m e M and u e P (S),by 
r(u, m) := 2m1 (u), {(m, u) := pm1 (u).
(a) 
Prove that r is a right action of M on P (S) if, and only if, 2 is a left action of 
M on S. Conclude that also f, is a left action if, and only if, p is a right action.
(b) 
Prove that (2, p) is a biaction of M on S if, and only if, (t, r) is a biaction of 
M on P(S).
(c) 
Prove that, if (2p'} is a biaction of M on S' with dual biaction (£r') on 
P(S'), then h: S ^ S’ is a biaction morphism if, and only if, h-1: P(S’) ^ 
P (S) is a biaction morphism.

292 
8 Automata Theory
Exercise 8.1.8 Show that the inclusion (N, +) ^ (Z, +) is an epimorphism in the 
category of monoids and homomorphisms, although this is clearly not a surjective 
function.
Exercise 8.1.9 Prove that the function 6 defined before Lemma 8.5 is a homomor­
phism of monoids.
Exercise 8.1.10 Let M be a monoid and let 5 e P(M).
(a) 
Show that the dual of the complete Boolean residuation ideal generated by s 
is given by
hs: M 
M/ =s,
where m =s m' if, and only if,
Vx, y e M 
(xmy e s ^^ xm'y e s).
(b) 
Further, show that this is the least recognizer of s in the sense that if h: M ^ N 
is a homomorphism of monoids, then there is a unique map h: im(h)
M/ =s such that h ◦ h' = hs, where h': M 
im(h) is the surjective co­
restriction of h to its image.
Exercise 8.1.11 A consequence of (the proof of) Theorem 8.22, which gets a 
bit lost between the lines because the proof is construed as a cycle around five 
conditions, is the following fact which we ask you to prove directly.
Let h: M ^ N be a homomorphism between monoids and let u c N and s c M.
(a) 
Show directly from the definitions that
s\h-1(u) = h-1(h[s]\u).
(b) 
Conclude that, if h is surjective, then for any p c N we have
h-1 (p)\h-1 (u) = h-1 (p\u).
(c) 
Show that, if N is finite, then there exist m1,...,mk e s with
k 
s\h-1(u) = 
mi-1 h-1 (u).
8.2 Regular Languages and Free Profinite Monoids
In Section 8.1, we considered regular languages one at a time, and we saw that the 
dual of the residuation ideal generated by such a language is finite - essentially 
by virtue of the simple fact that any finite state machine can only be equipped 
with finitely many choices of pairs (I, F) of initial and final states. We placed 

8.2 Regular Languages and Free Profinite Monoids
293
this result within discrete duality, and, as a consequence, we were able to see that 
regular languages over an alphabet A are precisely those subsets of P (A *) that 
are recognized by finite monoids, and that the collection of regular languages is a 
Boolean residuation ideal of P(A*).
In the current section, we want to consider the set of all regular languages together 
as a whole. Since the Boolean residuation ideal of regular languages over A is not 
complete (see Exercise 8.1.3), we have to switch from the discrete duality to Stone’s 
topological duality. We will be rewarded by seeing that its dual is a very natural 
object from topological algebra, namely the free profinite monoid over A.
Next, in Section 8.3, we apply the subalgebra-quotient-space duality to the pair 
(regular languages over A, the free profinite monoid over A) focusing in on sub­
algebras of regular languages that are residuation ideals. This subject culminates 
in the pairing of so-called pseudovarieties of regular languages and relatively free 
profinite monoids that is known in automata theory via the combination of Eilen- 
berg’s theorem and Reiterman’s theorem. We will not give the general theory, but 
we will illustrate with the example of so-called piecewise testable languages. In 
particular, we will use the duality to give a proof of Simon’s theorem, which gives 
a decidable characterization of the piecewise testable languages among the regular 
ones via profinite monoid equations.
Finally, in Section 8.4, we again apply the subalgebra-quotient-space duality to 
the pair (regular languages over A, the free profinite monoid over A) but this time 
we focus on subalgebras of regular languages that are closed under concatenation. 
This points in the direction of categorical logic and hyperdoctrines rather than 
automata theory and is beyond the scope of this book. We just give a few elementary 
observations in the short final section.
Duality for the Boolean Residuation Algebra of Regular Languages
Our main focus in this subsection will be to prove the following theorem; the terms 
“Boolean residuation algebra” and “free profinite monoid” will be defined below.
Theorem 8.26 Let A be a finite set. Then, RegA is a Boolean residuation ideal 
of P(A*) and the dual space of the Boolean residuation algebra (RegA, \,/) is the 
free profinite monoid over A.
In order to regard RegA as an algebraic structure in its own right, without nec­
essarily having to refer to its representation inside the algebra P(A*), we now 
introduce the following notion of Boolean residuation algebra, a Boolean algebra 

294 
8 Automata Theory
equipped with two implication-type operators, that are linked to each other via a 
Galois property. 4
Definition 8.27 A Boolean residuation algebra is a tuple (B, \,/) , where B is 
a Boolean algebra and \, / : B2 ^ B are binary operations with the following 
properties:
(a) 
the operation \ preserves finite meets in the second coordinate, that is, a\T = 
T and a\(b 1 A b2) = (a\b 1) A (a\b2) for all a, b 1, b2 e B;
(b) 
the operation / preserves finite meets in the first coordinate, that is, T/b = T 
and (a1 A a2)/b = (a1/b) A (a2/b) for all a1, a2, b e B; and
(c) 
the two operations \ and / are linked by the following Galois property: for all 
a, b, c e B, b < a \ c if, and only if, a < c / b.
Note that, under the assumption of (c), conditions (a) and (b) in Definition 8.27 
are equivalent. The Galois property (c) also implies that \ and / are implication­
type operators, in the sense of Definition 4.58, that is, the following equations 
automatically hold:
• ±\b = T and (a 1 V a2)\b = (a 1\b) A (a2\b) for all a 1, a2, b e B and
• a / ± = T and a/(b 1 V b2) = (a / b 1) A (a / b2) for all a, b 1, b2 e B.
Now, for the following corollary to Proposition 8.24 of the previous section, 
simply note that, since RegA is closed under \ and / with arbitrary denominators 
from P (A *), it is in particular a residuation algebra in its own right.
Corollary 8.28 Let A be a finite set. Then, RegA, the set of all regular languages 
over A, is a Boolean residuation algebra.
Remark 8.29 Recall that P (A*) is a residuated Boolean algebra, that is, a Boolean 
algebra equipped with a monoid operation which preserves join that is residuated 
(see Exercise 4.5.3). In fact, RegA is not only a residuation algebra, but even a resid- 
uated Boolean subalgebra of P(A*). That is, in addition to being closed under the 
residuation operations, it is also closed under concatenation product of languages. 
However, RegA being closed under concatenation is a different phenomenon than 
what we are looking at here. In fact, for any monoid M, the set of all the subsets 
of M recognized by finite monoids is a residuation ideal in P(M) and therefore, in 
particular, closed under the residual operations, but this Boolean subalgebra is in 
general not closed under the concatenation product of P(M) (see Exercise 8.2.11). 
We will study closure under concatenation product in Section 8.4.
4 In this book, for simplicity we only consider the case where the operators are binary, although a more general 
version exists in the literature, see Gehrke (2016).

8.2 Regular Languages and Free Profinite Monoids 
295
Now, we are ready to consider the dual space of the Boolean residuation algebra 
RegA. We will prove that this dual space is equipped with a monoid operation such 
that it is, up to isomorphism, the free profinite monoid on A. We now give the 
necessary definitions.
Definition 8.30 A topological monoid is a tuple (M,t, •), where (M,t) is a 
topological space, (M, •) is a monoid, and the function •: M2 ^ M is continuous. 
A discrete monoid is a topological monoid whose topology is discrete. A topological 
monoid is profinite if it is a projective limit of finite discrete monoids in the category 
of topological monoids. An iso-homeomorphism between topological monoids is a 
function that is both a homeomorphism of the underlying topological spaces and 
an isomorphism of the underlying monoids.
Unless mentioned otherwise, a finite monoid is always equipped with the discrete 
topology.
Let us first give a more concrete characterization of profinite monoids, that is 
often convenient to work with. When M is a topological monoid, we will denote 
by ClpCon(M) the set of clopen congruences on M, that is, congruences $ such 
that $ is clopen as a subset of M x M. Recall from Exercise 4.2.10 that for a 
congruence $ to be clopen, it is equivalent to say that M/$ is finite and M M/$ 
is continuous for the discrete topology on M/$. Note further that, for a congruence 
$ such that M/$ is finite, the continuity condition is equivalent to requiring that 
each equivalence class [m]& is clopen.
Proposition 8.31 A topological monoid M is profinite if, and only if, the space 
underlying M is compact, and, for every x, y e M, if x y, then there exists a 
continuous homomorphism f: M ^ F, with F a finite discrete monoid, such that 
f (x) + f (y).
If M is profinite, then M is isomorphic to the closed submonoid of n & eClpCon(M) 
M/$ consisting of the tuples (x&)&eClpCon(M) such that, whenever $ c $' and 
m e M is such that [m]& = x&, then [m]&/ = x& >.
Proof See Exercise 8.2.8. 
□
Remark 8.32 Recall that Boolean topological spaces are the same thing as profi­
nite sets; see Example 5.35 in Chapter 5. In particular, it is easy to see from 
Proposition 8.31 that the topology of a profinite monoid must be Boolean, since 
it is a closed submonoid of a product of finite spaces. It is less immediate that the 
converse holds true, in the following sense: If • is a continuous associative multi­
plication on a Boolean space M with neutral element 1, then (M, •, 1) is a profinite 
monoid. Toward showing the condition in the first part of Proposition 8.31, if x y, 
there is, by zero-dimensionality of the space, a clopen set separating x from y, but it 
remains to show that this clopen set can be realized as a union of equivalence classes 

296
8 Automata Theory
for some ft e ClpCon(M). This is true in the case of monoids, where it is known as 
“Hunter’s lemma,” but it does not generally hold true for other algebraic structures 
based on Boolean spaces; see Almeida et al. (2023) for a recent analysis of the 
question of what makes a topological algebra based on a Boolean space profinite.
The characterization of Proposition 8.31 in particular allows us to define an ele­
ment of a profinite monoid by giving its value modulo ft, for each ft e ClpCon( M). 
This idea will be crucial below for showing that the dual space of RegA is a free 
profinite monoid over A.
Definition 8.33 Let A be a finite set. A free profinite monoid over A is a profinite 
monoid X together with a function n: A ^ X, such that, for any finite monoid 
M and function f: A ^ M, there exists a unique continuous homomorphism 
f: X ^ M such that f ◦ n = f, as in the following diagram:
A ----- XX
i i _ 
if
M.
In Definition 8.33, the continuity of f is with respect to the discrete topology on 
M and means exactly that f-1 (m) is clopen for every m e M.
If (X, n) and (Xn') are free profinite monoids over A, then there is a unique 
iso-homeomorphism ^ between X and X' such that ^ ◦ n = nz, see Proposition 8.31 
and Exercise 8.2.9. The fact that free profinite monoids exist can be shown with a 
construction in the same vein as the one for profinite ordered sets in Remark 5.36, 
by taking the limit of a diagram of (discrete) finite monoids in the category of topo­
logical monoids. However, our proof that the free profinite monoid exists here will 
be by exhibiting it as the dual space of the Boolean residuation algebra (RegA, \, /).
For the rest of this subsection, let Abe a finite set and let X denote the dual space 
of the Boolean algebra RegA. Toward proving that X is a free profinite monoid 
over A, note first that, since Reg A is a Boolean subalgebra of P (A *), its dual space 
X is a topological quotient of the dual space of P (A *), which is the Stone-Cech 
compactification fi A * of the set A *. In particular, we have a natural map A * ^ X 
given by sending u e A* to the point of X corresponding to the ultrafilter consisting 
of all regular languages that contain the word u. Since the singleton {u} is regular, 
this map is injective and the image consists entirely of isolated points (see Exercises 
8.1.1 and 8.2.2). In other words, the map A * ^ X embeds the discrete space A * in 
X . We will henceforth identify A* with its image in X and consider A* as contained 
in X .
Remark 8.34 In what follows, we will use the following consequence of Stone 
duality, which is the “topological half” of the statement that X is the free profinite

8.2 Regular Languages and Free Profinite Monoids
297
monoid over A (see Exercise 8.2.7 for a proof). Let h: A * 
M be a surjective
homomorphism to a finite monoid M . Viewing the finite set M as a discrete 
topological space, the function h has a unique continuous extension h: X M, 
that is, h-1 (m) is clopen for every m e M and h(w) = h(w) for all w e A*. Further 
note that, if f, e Reg A is recognized by h via P c M, that is, if t = h 1 (P), then the 
corresponding subset f, of X is equal to h-1 (P) = fi-1 (P) (see Exercise 8.2.7(d)).
To properly formulate and prove the “monoid half” of the statement that X is the 
free profinite monoid over A, we first need to construct a monoid operation on X . 
This monoid operation comes from the dual of the residuation operations \ and / of 
the Boolean residuation algebra RegA. Recall that in Definition 4.65 we defined a 
ternary relation dual to any implication-type operator between distributive lattices. 
Instantiating (4.22) in that definition for the specific implication-type operator 
\: Reg A x Reg A ^ Reg A, we obtain the ternary relation R \ on X defined by
R \ (x, y, z) ^^ for all t, k e Reg A, if x e f, and y e f\k, then z e k. 
(8.2)
Lemma 8.35 Let x, y, z e X. Then, R\(x, y, z) if, and only if, for any finite monoid 
quotient h: A * 
M ,we have h (z) = h (x) h (y).
Proof For the left-to-right direction, suppose R \ (x, y, z) and let h: A * M be 
a finite monoid quotient with unique continuous extension h: X ^ M. Write 
p := h(x) and q := h(y); we need to show that h(z) = pq. Consider the regular 
languages f, := h-1 (p) and k := h-1 (pq). Using Remark 8.34, since f, = h-1 (p), 
we have x e t. Also,
C\k = h-1 (p-1 {pq})
by Exercise 8.1.11, using the fact that h is a monoid homomorphism. Since obvi­
ously q e p-1 {pq},weget y e h-1 (p-1 {pq}) = €\k, using Remark 8.34 again. Now, 
because R\ (x, y, z) by assumption, we must have z e k = h-1 (pq), as required.
For the right-to-left direction, suppose h (z) = h (x) h (y) for all finite monoid 
quotients h: A * M .To show R \ (x, y, z), suppose that t, k e Reg A are such 
that x e k and y e k\k; we need to prove z e k .By Corollary 8.25, pick a finite 
monoid quotient h: A * 
M which recognizes both languages k and k, that is,
pick P, Q c M such that k = h-1 (P) and k = h-1 (Q). By Remark 8.34, we have 
k = h-1 (P) and k = h-1 (Q). Since x e k, we have h(x) e P. Also, using Exercise 
8.1.11,
t\k = h-1 (P )\h-1 (Q) = h-1 (p \ Q)
so that k\k = h-1 (P\ Q) and thus h (y) e P\Q. It now follows from the definition 
of P\Q that h(x)h(y) e Q. Now, since h(z) = h(x)h(y) by hypothesis, we get 
z e h-1 (Q) = k, as required. 
□

298
8 Automata Theory
Lemma 8.36 Let x, y e X. The set of regular languages
px, y := {^ e Reg A | there is a finite monoid quotient h: A * 
M which
recognizes C and such that h-1 (h(x)h(y)) c (}
is an ultrafilter of Reg A. Moreover, the point z e X for which Fz = px, y is the 
unique point in the set R\[x, y, _].
Proof Note first that, for any f, e Reg A, if h: A * M is a finite monoid quotient 
which recognizes {, then, for any m e M, exactly one of the following two properties 
holds:
h-1 (m) c £ 
or 
h-1 (m) c A * — (.
Indeed, at most one of the two can hold because h-1 (m) is non-empty, since h is 
surjective. Also, since h recognizes {, we have f, = h-1 (u) for some u c M, so that 
at least one of the two must hold: the first in case m e u and the second in case 
m £ u.
It follows that, for every regular language {, since there exists some finite monoid 
quotient h: A * M recognizing {, we have that either f, or A * — f, is in px,y, 
applying the above argument to m := h(x)fi(y). It is also clear, by the surjectivity 
of h, that 0 £ px,y. It remains to prove that px,y is a filter. To this end, let £1,^2 
be regular languages. If £1 and (2 are both in px,y, then, for i = 1,2, pick finite 
monoid quotients h i: A * Mi,recognizing (i and such that h-1 (h i (x) h i (y)) c (i. 
Define the homomorphism h: A * M as the co-restriction of the homomorphism 
h 1 X h 2: A * ^ M1 X M2 to its image. Then, h is a finite monoid quotient of A * 
that recognizes (1 n £2, as we saw in the proof of Proposition 8.24. Moreover, for 
i = 1, 2, we have
h-1 (h(x)h(y)) c h-1 (hi(x)h((y)) .
Combining this with the assumption that h-1 (hi(x)hi(y)) c £i, we see that 
h-1 (h(x)h(y)) c £1 n £2, so that C\ n C2 e px,y. To see that px,y is an up-set, 
suppose that C\ e px,y and that C\ c £2. Pick a finite monoid quotient h 1: A * M1 
recognizing (1 such that h-1 (h 1 (x)h 1 (y)) c £1 and pick some finite monoid quo­
tient h 2: A * M2 recognizing £2. Defining h: A * M in the same way as before, 
this morphism still recognizes (2 and, since h-1 (h(x)h(y)) intersects non-trivially 
with £1, it also intersects non-trivially with £2.
For the moreover statement, denote by z the unique point of X such that Fz = px,y. 
We use Lemma 8.35 to show that R\(x, y, _) = {z}. To see that R\(x, y, z), let 
h: A * M be a finite monoid quotient. Then, the language f, := h-1 (h (x) h (y)) is 
regular and, clearly, f, e px,y = Fz, which means that z e f, = h-1 (h(x)h(y)). We 
conclude that R\ (x, y, z) by Lemma 8.35. Conversely, if R\(x, y, z') for any point

8.2 Regular Languages and Free Profinite Monoids
299
z' e X, then let € e jux,y be arbitrary. Pick a finite monoid quotient h: A * 
M
recognizing f, with h 1 (h(x)h(y)) C (, Write f,' := h 1 (h(x)h(y)). By Lemma
—
8.35, h(z’) = h(x)hi(y), so z' e c £ Thus, jux,y C Fz,, and the two ultrafilters
must be equal, so z' = z.
□
We summarize Lemma 8.35 and Lemma 8.36 in the following corollary.
Corollary 8.37 The ternary relation R\ dual to \ is a total binary operation 
★: X x X ^ X and the ultrafilter corresponding to x ★ y is jux,y. Moreover, for 
any x, y e X, x ★ y is the unique element of X such that, for every finite monoid 
quotient h: A * M ,we have h (x ★ y) = h (x) h (y).
Of course, we also have the ternary relation R/ dual to the operator /, which is of 
“reverse” implication type, in the sense that it is monotone in the first and antitone 
in the second coordinate and satisfies (4.19) and (4.20) in Definition 4.58 with 
the first and second coordinate swapped. Concretely, we may define, analogously 
to (8.2),
R / (x, y, z) ^^ for all t, k e Reg A, if x e f, and y e k/{, then z e k. 
(8.3)
However, this ternary relation R/ does not add any additional structure to the dual 
space, as it is closely related to R\ above. Indeed, the Galois property in the definition 
of the Boolean residuation algebra RegA (see Definition 8.27) expresses the fact 
that the relations R/ and R\ are related via
R \ (x, y, z) '■-> R / (y, x, z )
for any x, y, z e X, so that R/ essentially contains the same information as R\ . 
This may be proved in a similar way to the case of relations dual to an adjunction 
considered in Exercise 4.3.5 (see Exercise 8.2.3).
Finally, we show that the operation ★ makes X into a topological monoid and 
that it satisfies the universal property of the free profinite monoid over A. Recall 
that we view A * as a discrete subspace of X and we denote the empty word by e.
Lemma 8.38 The triple (X, ★, e) is a free profinite monoid over A.
Proof First we show that (X, ★) is a monoid with neutral element the empty word 
e e A * c X. Let x, y, z e X. In order to prove (x ★ y) ★ z = x ★ (y ★ z), we show 
that the points have the same clopen neighborhoods. Let f, e Reg A be arbitrary and 
suppose that (x ★ y) ★ z e {; we will show that x ★ (y ★ z) e ?. Pick h: A * M 
a finite monoid quotient which recognizes f, via P, so that t = h-1 (P). Repeatedly 
using the defining property of ★ in Corollary 8.37, we have
7 z z 
x 
x 
zTzxTzxxTzx 
,7z 
z 
XX 
TzxzTzxTzxx
h((x * y) ★ z) = (h(x)h(y))h(z) and h(x * (y ★ z)) = h(x)(h(y)h(z)).

300
8 Automata Theory
Now, since M is a monoid, these two elements of M equal, and thus in particular 
we also have x ★ (y ★ z) e h-1 (P) = t. Similar reasoning shows that e is a neutral 
element for ★ (see Exercise 8.2.4).
Next, we need to show that the function ★ is continuous. Suppose x, y e X, 
f, e Reg A and x ★ y e ?. Again, let h: A * M be a finite quotient which 
recognizes f, via P, so that l = h-1 (P). Let 11 = h-1 (h(x)) and £2 = h-1 (h(y)). 
Then, £1, £2 e Reg A and, for any x' e £1 and y' e f2, we have
h (x' ★ y') = h (x') h (y') = h (x) h (y) = h (x ★ y) e P.
That is, x' * y' e f, as required.
We now show that it follows from the characterization in Proposition 8.31 that the 
topological monoid X is profinite. Indeed, if x and y are distinct elements of X , then 
there exists f, e Reg A such that x e t and y £ t. Pick h: A * ^ M a homomorphism 
to a finite monoid that recognizes {, say f, = h-1 (P) for some P c M .By Corollary 
8.37, the unique continuous extension h: A * ^ M is a homomorphism, and since 
h(x) e P and h(x) £ P, we must have that h(x) h(y).
Finally, we show that (X, ★, e) has the universal property of a free profinite 
monoid over A with respect to the function n which sends each letter a e A to the 
one-letter word a in X .To this end, let M be a finite monoid and let f: A ^ M 
be any function. Then, since A* is the free monoid over A, we obtain a unique 
homomorphic extension f *: A * ^ M. Since im( f *) is closed in the discrete space 
M, any continuous extension of f* will map onto im( f *), so it suffices to consider 
the surjective co-restriction h: A * im( f *) of f * to its image. As we have been 
using extensively throughout, see Remark 8.34, h extends uniquely to a continuous 
map h: X im(f *), and, by Corollary 8.37, h is also a monoid morphism with 
respect to ★. In a diagram,
Each of the inner triangles of the diagram commutes and thus so does the outer 
triangular diagram. Finally, the outer vertical arrow X ^ M is the unique such 
continuous homomorphism, since A generates A *, A * is dense in X, and h is both 
a monoid homomorphism and continuous (see Exercise 8.2.5). 
□
This completes the proof of Theorem 8.26. We chose to give a very concrete 
proof of this theorem as this is maybe more hands-on and tangible for the novice 
and because such a proof is not readily available in the literature. Usually, in research 

8.2 Regular Languages and Free Profinite Monoids 
301
papers, a more conceptual proof is given: RegA is clearly the filtered colimit of its 
finite residuation ideals, so, by duality, its dual space is the cofiltered, or projective, 
limit of the duals of these finite residuation ideals, which, by Theorem 8.22, are 
the finite monoid quotients of A *. It remains to check that the projective limit of 
the diagram of finite monoid quotients of A *, taken in the category of topological 
monoids, is indeed a free profinite monoid. This yields a quicker, simpler, but 
maybe somewhat magical proof of Theorem 8.26. See, for example, Gehrke (2016, 
Theorem 4.4) for further details of this alternate proof.
Now that we know that a free profinite monoid over A exists and is unique up 
to iso-homeomorphism, we can speak of the free profinite monoid over A, and we 
will denote it by A *.
We now give one more instance of a definition of an operation on a profinite 
monoid “via the finite quotients,” which we will use in Section 8.3. An element e 
of a monoid is called idempotent if e • e = e.
Proposition 8.39 Let M be a profinite monoid. For any x e M, there is a unique 
idempotent element in the closure of the set {xn | n > 1}.
Proof First note that, for a finite monoid M , there is always a unique idempotent 
element in the set {xn | n > 1}, for every x e M. Indeed, by the pigeon-hole 
principle, pick n, p > 1 such that xn = xn+p. Note that it follows that, for any q > 1, 
we have xn+qp = xn. Let r be the remainder of the division of -n by p, that is, 
choose the unique 0 < r < p such that n + r is a multiple of p. Then, xn+r is 
idempotent, as shown by the computation:
xn+r xn+r = xn+r+qp = xn+qp xr = xnxr = xn+r .
If, for any m > 1, xm is also idempotent, then xm = (xm)n+r = (xn+r)m = xn+r, 
so this idempotent is unique. This establishes the proposition for the special case 
of finite (discrete) monoids.
Now, ifM is a profinite monoid and x e M, let us write P := {xn | n > 1}.Ify is 
an idempotent element in the closure of P, then for any continuous homomorphism 
f: M ^ F, with F a finite discrete monoid, f (y) must be idempotent, and since y 
is in the closure ofP, it must be in the closed set f-1(f [P]), so that f (y) is a power 
off(x). By Proposition 8.31 and the fact that f(x) has a unique idempotent power 
for every f, there can be at most one such element y. Moreover, such an element 
exists, because if $ c ft' and [x]m, is idempotent, then [x]m is idempotent, as well. 
So, using the second part of Proposition 8.31 we have the element x™ of M defined 
by the condition that, for each $ e ClpCon(M), [x™]# is the unique idempotent 
power of [x]# in M/$. 
□
Definition 8.40 Let M be a profinite monoid. For x e M, we denote by x™ the 
unique idempotent element in the closure of {xn | n > 1}.

302
8 Automata Theory
Similarly, there exists, for any x e M, an element x"-1 in the closure of {xn | 
n > 1} which is uniquely determined by the condition that x"-1 • x = x • x"-1 = x" 
(see Exercise 8.2.10).
A General Duality for Boolean Residuation Algebras
Above, we have seen that Stone duality on objects restricts to a correspondence 
between finitely generated free profinite monoids and the Boolean residuation al­
gebras of the form RegA, for A a finite alphabet. In order to show that this is a more 
general phenomenon, we will show here that
(a) 
all binary topological algebras whose underlying space is Boolean are dual 
spaces of Boolean residuation algebras and
(b) 
the residuation algebras dual to binary topological algebras are precisely those 
which preserve joins at primes.
Item (b) is particularly interesting as it makes a link to domain theory in logical 
form as treated in Sections 6.4 and 7.4, where the concept of preserving joins at 
primes is also central, see Corollary 6.34 and Theorem 7.69.
By a binary topological algebra, we mean a pair (X, f),whereX is a topological 
space and f: X2 ^ X is a continuous binary operation on X, with no equational 
axioms assumed on f. A set equipped with a binary operation satisfying no ax­
ioms has also been called magma in the algebraic and categorical literature; from 
that perspective, we here consider magmas internal to the category Top, and in 
particular in the full subcategory BoolSp. The fact that we restrict ourselves to 
binary operations is just for simplicity of notation and a more general theorem for 
arbitrary arity can be proved, see Gehrke (2016, Section 3). We will use the term 
“binary topological algebra on a Boolean space” for one whose underlying space is 
Boolean; these structures could also be called “Boolean-topological magmas.”
Recall from Section 4.5 that implication-type operators on a lattice are dual 
to compatible ternary relations on its dual space. Thus, to show (a), we start by 
showing that a binary operation on a Boolean space is continuous if, and only if, its 
graph is a compatible ternary relation in the sense of Definition 4.63. By the graph 
of a binary operation f: X2 ^ X, we here mean the ternary relation
{(x, y, f (x, y)) | x, y e X}.
Since we are in the special case of Boolean spaces, we will here specialize the 
definition of compatibility for a ternary relation to that setting. Note that a relation 
R c X3 is then compatible of implication type (Definition 4.63) if for any clopen 
subsets U, V of X, R[U, _, V] is clopen and for any y e X, the set R[_, y, _] is 
closed.

8.2 Regular Languages and Free Profinite Monoids
303
Proposition 8.41 Let X be a Boolean space, f: X2 ^ X a binary operation 
on X, and R c X3 its graph. Then, f is continuous if, and only if, its graph is a 
compatible relation on X .
Proof Throughout this proof, for any y e X, we denote by iy: X ^ X2 the 
injective function x ^ (x, y), which is continuous by Exercise 2.1.13, and we write 
fy := f ◦ iy, that is, fy : X ^ X is the function defined by fy (x) = f (x, y) for 
every x e X .
Suppose first f is continuous. Then, fy is also continuous, and for any y e X, 
the binary relation R[ , y, ] is the graph of the function fy : X ^ X. This graph 
is closed because X is Hausdorff (see Exercise 2.1.12). Let U, V c X be clopen. 
First notice that
R[U, _, V] = n2[(U X X) n f-1 (V)],
where we denote by n2: X2 ^ X the projection on the second coordinate. Further, 
since X is compact, the projection n2 is a closed mapping by Proposition 2.5, and 
thus R[U, _, V] is closed. Finally, by Exercise 2.1.13, n2 is always an open mapping, 
and thus R[U, _, V] is clopen, as required.
For the converse, suppose the graph R is compatible. We show first that fy is 
continuous for every y e X . For any S c X , we have
f-1 (S) = n1[R[_, y, _] n (X X S)],
that is, the inverse image of S under f y is the same as the direct image under n1 
of the set R[ , y, ] n (X X S). Again, since n1 is a closed mapping and R[ , y, ] 
is closed, this shows that fy-1 (S) is closed whenever S is closed. Now, let V c X 
be clopen; we show that f-1 (V) is open. Let (x, y) e f-1 (V) be arbitrary. Then, 
x e fy-1 (V), which is open, so pick a clopen U c X satisfying x e U c fy-1 (V) . 
Consider the set
U\V := R[U,_,Vc]c = {w e X | for all u e U, f(u, w) e V},
which is clopen because R is compatible. Note that, since U c fy-1 (V), we have 
y e U\V and, clearly, U X (U\V) c f-1 (V). Thus, U X (U\V) is an open neigh­
borhood around (x, y) contained in f-1 (V) and we conclude that f-1 (V) is open, 
as required. 
□
Notice that by symmetry of assumptions, exactly the same proof with the role of 
the first two coordinates of the relation R switched would work just as well. Thus, 
if f is a continuous operation on X, then its dual Boolean algebra is a residuation 
algebra. We get the following corollary.
Corollary 8.42 Every binary topological algebra on a Boolean space is the dual 
space of a Boolean residuation algebra.

304 
8 Automata Theory
For later use in this section, we now make one direction of the object duality of 
Corollary 8.42 more explicit.
Notation Throughout the rest of this section, in order to simplify notation, when 
B is the Boolean algebra of clopens of a Boolean space X , we will tacitly identify 
ultrafilters of B with points of X; that is, if U e B and x e X then U belongs to the 
ultrafilter corresponding to x if, and only if, x e U.
Let (X, f ) be a binary topological algebra on a Boolean space, let R be the graph 
of f , and let B be the Boolean algebra of clopens dual to X . The algebra dual to 
(X, R) is then the Boolean residuation algebra (B, \,/) where, if U, V e B, then
U\V = R[U, _, V c]c = {y e X | for all u e U, f(u,y) e V}.
Here, we have simply applied the definition of implication-type operator associated 
with a ternary relation (4.21) in the specific case where the relation is the graph of a 
continuous binary function. The definition of the other residual / is similar but with 
the role of the first two coordinates switched. When U = {x}, we will use x-1V as 
a notation for {x}\V.
We now proceed to characterize exactly which Boolean residuation algebras can 
occur as the algebra dual to a binary topological algebra on a Boolean space. This 
is where the notion of preserving joins at primes reappears.
Let (B, \,/) be a Boolean residuation algebra, as defined in Definition 8.27. 
Also, recall from Definition 6.32 what it means for an implication-type operator to 
preserve joins at primes. That definition was given for an implication-type operator 
^: LXM ^ K, which is antitone in the first and monotone in the second coordinate, 
and thus directly specializes to the residual \ on a Boolean residuation algebra: The 
operation \ preserves joins at primes if, for every ultrafilter F of B, a e F ,and 
finite subset G of B, there exists a' e F such that
a\ (V G) < 
(af\g).
The other residual / is of “reverse” implication type. We say that the operation / 
preserves joins at primes if for every ultrafilter F of B, a e F, and finite subset G 
of B, there exists a' e F such that
(V G) /a < y (g/a').
Definition 8.43 Let (B, \,/) be a Boolean residuation algebra and let Xbe its dual. 
We say that the algebra B preserves joins at primes provided that both operations \ 
and / preserve joins at primes.

8.2 Regular Languages and Free Profinite Monoids
305
It will in fact follow from the proof of Theorem 8.45 that the one residual / 
preserves joins at primes if, and only if, the other residual \ preserves joins at 
primes, so it would suffice in Definition 8.43 to assume only one of the two.
Before proving Theorem 8.45, we isolate one lemma that contains an important 
step.
Lemma 8.44 Let (X, f ) be a binary topological algebra on a Boolean space X 
and let (B, \,/) be the dual Boolean residuation algebra of clopen subsets of X. For 
any x e X and V e B, there exists U e B such that x e U and x-1 V = U \V.
Proof Let V e B and x e X. We first show that the following collection of clopen 
subsets of X
C := {K\V | K e B andx e K}
is a cover of the set x-1V. Indeed, if y e x-1V, then f (x, y) e V. Reasoning as in 
the proof of Proposition 8.41, by continuity of the function fy : x ^ f (x, y), since 
x e f-1 (V), there is a clopen set K around x such that K c f-1 (V), which means 
that y e K\V. Now, since all sets in C are clopen, and x-1V is closed (even clopen) 
and hence compact, pick a finite set K c B such that x e K for every K e K and 
x-1V c KeK K\V. Define U := K. Then, clearly x e U, so U\V c x-1V and, 
for every K eK, we have that U c K, so K\V c U\V. Thus,
x-1V c 
K\V c U\V c x-1 V,
from which we conclude that x-1 V = U\V, as required. 
□
Theorem 8.45 The dual algebras of binary topological algebras on Boolean 
spaces are precisely the Boolean residuation algebras preserving joins at primes.
Proof First, suppose that (X, f) is a binary topological algebra and (B, \,/) is its 
dual Boolean residuation algebra. We need to show that (B, \,/) preserves joins 
at primes. We only show this for \, the argument for / is symmetric. Let F be an 
ultrafilter in B, which, by Stone duality, is of the form {U e B | u e U} for some 
u e X. By induction, it suffices to treat just the cases where Gis empty or G contains 
two elements; when G contains one element there is nothing to do. If G is empty, then 
the supremum of G in B is the empty set. Leta e F and suppose that u e a. We have
a\0 c {y e X | f (u, y) e 0} = 0,
so we may take a' := a in the definition of preserving joins at primes.
Now, suppose that G = {V1, V2} and let a e F, so that u e a. Note first that
a\(V1 U V) c u-1 (V1 u V) = u-1 V1 U u-1 V2,
using the fact that V ^ u-1 V is a Boolean algebra homomorphism. By Lemma 
8.44, pick U1, U2 e B such that u e Ui and u-1Vi = Ui\Vi for i = 1, 2. Now define 

306 
8 Automata Theory
a' := U1 n U2, which still contains u. Plugging this into the previous inclusion, 
we get
a\(V1 U V2) c (U1\V1) u (U2\V2) c (a'\V1) u (a'\V2),
using for the second inclusion the fact that \ is antitone in its first coordinate.
For the converse, suppose that (B, \,/) is a Boolean residuation algebra such that 
\ preserves joins at primes and let (X, R) be its dual. We will show that R is the 
graph of a binary function f: X2 ^ X, that is, that R[x, y, _] is a singleton for all 
x, y e X. Let x, y e X be arbitrary. Note that it follows from the definition of R as 
the ternary relation dual to the implication-type operator \ (Definition 4.65) that, 
for any z e X, we have R(x, y, z) if, and only if, z e F, where
F := {V e B | there exists U e B such that x e U and y e U\V}.
We show that F is an ultrafilter, from which it follows that F is a singleton, 
since X is a Boolean space (also see Exercise 3.3.3). Using the fact that, for any 
U e B, the function V ^ U\V preserves finite meets, one may prove that F is a 
filter because it is a directed union of filters (see Exercise 8.2.13). To get that F 
is an ultrafilter, we use the assumption that \ preserves joins at primes. First, we 
show that F is proper. Indeed, for any U e B such that x e U, the definition of 
preserving joins at primes applied in the case G = 0 gives that U\0 = 0, so in 
particular y £ U\0, so that 0 is not in F. Now, let V e B be arbitrary. We show that 
either V or Vc is in F. Applying the assumption that \ preserves joins at primes to 
the element T e B and G = {V, Vc}, since x e T and T\(V U Vc) = t\t = T, we 
can pick U e B with x e U and (U\V) U (U \Vc) = T. Then, either y e U\V or 
y e U\Vc, so one of V and Vc is in F, as required.
Finally, let f: X2 ^ X be the function defined, for x, y e X, by taking f (x, y) 
the unique element in R[x, y, _]. Since the relation R is compatible, it follows from 
Proposition 8.41 that f is continuous. 
□
Exercises for Section 8.2
Exercise 8.2.1 Prove the remarks directly following Definition 8.27.
Exercise 8.2.2 Let W be a set and let B be a Boolean subalgebra of P(W). Denote 
the dual space of B by X, which is a topological quotient of fiW. Consider the 
composition i: W ^ ^W X. Assume further that B contains {w} for every 
w e W . Show that i is injective, that its image is a dense subspace of X , and that the 
subspace topology on i[W] is discrete. Using Exercise 8.1.1, conclude in particular 
that A * is dense in the dual space of Reg A.
Exercise 8.2.3 Let (B, \,/) be a Boolean residuation algebra with dual space X . 
Consider the relations R\ and R/ defined by (8.2) and (8.3), respectively. Prove that, 
for any x, y, z e X ,
R \ (x, y, z) ^^ R / (y, x, z).

8.2 Regular Languages and Free Profinite Monoids
307
Exercise 8.2.4 Prove that e is a neutral element for the operation ★ on X, following 
a similar proof to the first paragraph of the proof of Lemma 8.38.
Exercise 8.2.5 This exercise gives some more details to show the uniqueness of 
the extension constructed in the proof of Lemma 8.38.
(a) 
Let X and Y be Hausdorff topological spaces and D a dense subspace of X . 
Prove that if h, h': X ^ Y are continuous and h |D = h D, then h = h'.
(b) 
Recall from Exercise 8.2.2 that in particular A * is dense in the dual space X 
of Reg A. Use this to conclude that, for any function f: A ^ M with M a 
finite monoid, there can be at most one continuous homomorphism X ^ M 
extending f .
Exercise 8.2.6 Let X and Y be Hausdorff topological monoids and suppose that 
D is a dense submonoid of X. Let f: X ^ Y be a continuous function such that 
f (u) f (v) = f (uv) for every u, v e D. Prove that f is a homomorphism X ^ Y.
Exercise 8.2.7 Let h: A * M be a finite monoid quotient and consider the 
inverse image function h-1: P (M) ^ Reg A. Let X denote the dual space of Reg A. 
(a) Explain why h-1 (P) is regular for every P c M.
(b) 
By applying Stone duality to the Boolean algebra homomorphism h-1, show 
that h extends uniquely to a continuous function h: X 
M.
(c) 
Show that, for any w e A*, h(w) = h(w), that is, the diagram below and 
commutes.
A * --------- > X
— 
hl 
V 
M.
(d) 
Show that if f, e Reg A is recognized by h via P c M, then 
f = h-CP) = h-1 (P).
Exercise 8.2.8 Let M be a topological monoid. As in Proposition 8.31, we write 
ClpCon(M) for the collection of clopen congruences $ on M. We say that the 
clopen congruences separate points if, for every x, y e M, if x y, then there is 
$ e ClpCon(M) such that (x, y) £ $.
(a) 
Prove that if M is the projective limit ofa diagram of finite discrete monoids, 
then M embeds as a closed submonoid of a product of finite monoids, and is 
therefore in particular compact and the congruences in ClpCon( M) separate 
points.
(b) 
Now, assume M is compact and that the clopen congruences separate points. 
Show that the sets of the form
K&,x0 := {x e M | x$xo},

308
8 Automata Theory
where ft e ClpCon(M) and x0 e M, form a base of clopen sets for the 
topology on M .
(c) 
Let us write Q for the diagram whose shape is the poset ClpCon(M) with the 
inclusion order, and which sends ft to M/ft and an inclusion ft c ft' to the 
unique factorization of M M/ft’ through M M/ft. Using the previous 
item, show that if M is compact and the congruences in ClpCon( M) separate 
points, then the collection of maps (M 
M /ft)# eClpCon(M) is a limiting cone
over the diagram Q.
Exercise 8.2.9 Let A be a set and suppose that n: A ^ X and n': A ^ X' 
are both free profinite monoids over A. This exercise shows that there is a unique 
iso-homeomorphism ^: X ^ X' which satisfies ^ ◦ n = n '■ We use the results 
proved in Exercise 8.2.8.
(a) 
Let ft e ClpCon(X') and write F := X'/ft. Consider the function f: A ^ F 
defined by sending a e A to [n' (a)]# ■ By the universal property of X, 
extend f uniquely to a continuous homomorphism f: X ^ F. Prove that if 
^: X ^ X ’ is a continuous homomorphism such that ^ ◦ n = nz, then we 
must have [^(x)]# = /(x) for all x e X. Hint. Use the uniqueness of the 
extension f.
(b) 
Show that there exists a continuous homomorphism ^: X 
fl # ectpCon(X')
X '/ft.
(c) 
Show that ^ is injective.
(d) 
Show that the image of ^ is equal to the image of the embedding 
X' "HI # eClpCon(X') X'/ft.
Exercise 8.2.10 Let M be a profinite monoid and x e M.
(a) 
Show that the closure of {xn | n e N>1} is a commutative subsemigroup of 
M.
(b) 
Analogously to Proposition 8.39, prove that there exists a unique element y 
in the closure of {xn | n e N >1} such that y x = xy = x™.
Exercise 8.2.11 Let M be a monoid. As in the case of A*, we say that a subset 
L of M is recognizable if there exists a homomorphism h: M ^ N with N a 
finite monoid and a subset P c N such that L = h-1 (P) . We denote the set of 
recognizable subsets of M by RecM. Show that the results for A * go through at this 
level of generality and thus, in particular, that:
(a) 
RecM is a Boolean residuation ideal in P(M).
(b) 
The dual space of the Boolean residuation algebra (RecM, \,/) is the profinite 
completion of M. That is, the dual space admits a continuous 

8.3 Equations, Subalgebras, and Profinite Monoids
309
monoid multiplication, and the resulting monoid MI is the projective limit 
of the diagram of finite monoid quotients of M . The profinite completion 
of M may also be identified as the image of M under the left adjoint from 
monoids to topological monoids based on a Boolean space, that is, there is a 
monoid homomorphism n : M ^ M such that, for any topological monoid N
on a Boolean space and any homomorphism h: M ^ N, there exists a unique 
continuous homomorphism h: M ^ N such that h ◦ n = h. Compare this
with Remark 5.36 and Exercise 5.3.14; further see Gehrke (2016, Section 4).
Note that RecM need not be closed under concatenation product in P (M) ,as 
Exercise 8.2.12 shows.
Exercise 8.2.12 This exercise uses the definition of a recognizable set in an 
arbitrary monoid as given in Exercise 8.2.11; it is based on Eilenberg (1974, Exer­
cise III.12.9), also see Sakarovitch (2009, Exercise 2.6).
(a) 
Show that {0} is not recognizable in the monoid (Z, +).
(b) 
Let M be the structure (Z U {e, x}, •), where • is defined by kI = k + I for 
k, l e Z, xk = kx = k for all k e Z, x2 = 0, and em = me = m for all m e M. 
Show that M is a monoid.
(c) 
Consider the equivalence relation on M defined by m = n if, and only if m = n 
or m and n are both in Z. Show that = is a congruence.
(d) 
Prove that L := {x} is recognizable in M but LLis not.
Exercise 8.2.13 Let h: L x L ^ L be a binary operation on a distributive lattice 
that is antitone in the first coordinate and preserves finite meets in the second 
coordinate. Prove that if F1, F2 c L are filters, then the set
F := {b e L | there exists a e F1 such that h (a, b) e F2 }
is a filter in L. Use this to conclude that the set F defined at the end of the proof of 
Theorem 8.45 is a filter.
8.3 Equations, Subalgebras, and Profinite Monoids
As follows from what we have seen in Sections 4.2 and 8.2, given a finite alphabet 
A, the set of all Boolean quotient spaces of the Boolean space underlying the free 
profinite monoid over A is in one-to-one correspondence with the set of Boolean 
subalgebras of RegA. What is more is that these are all given by sets of what we 
called equations, which are really just pairs of elements of the dual space, see 
Definition 4.30 and Corollary 4.32. The interest of these equations is that, in order 
to describe a quotient space-subalgebra pair, one can use sets of equations that do 

310
8 Automata Theory
not satisfy any special properties - in contrast with compatible equivalence relations 
(Definition 4.22 and Corollary 4.32), which are more difficult to understand. We 
recall in particular Example 4.35, which showed that in the presence of additional 
structure, by the use of equations, we may be able to obtain much smaller and simpler 
sets that characterize the subalgebras than the equivalence relations obtained from 
the full compatible preorders. This methodology has been greatly exploited in 
automata and formal language theory, and is in fact behind a great number of 
decidability results in the area. In this section, we want to give you a glimpse of 
the use of equations and inequations in language theory from a duality-theoretic 
perspective.
Profinite Monoid Inequations and Equations
We first recall the definitions connecting sublattices and inequations as given in 
Section 4.2 (Definition 4.25), specialized to our use case here. For any element 
L e Reg A, we define a binary relation <L on A * by
x <L y ^^ y e L implies x e L.
This is a preorder and <L is clopen as a subset of A *. When L c Reg A, we also 
define
~L := L?L”L .
Remark 8.46 In the literature on automata and finite monoids, a syntactic pre­
order is commonly associated with a language L c A* . The classical definition 
(Schutzenberger, 1955, Section 2), still in use today (Pin, 2021a, Section 1.4.4), is 
the following. For any L c A * and x, y e A *, define the syntactic preorder <SL of L 
by: x <L y if, and only if, for every u, v e A*, if x e u-1Lv-1, then y e u-1Lv-1. 
This means that x <SL y if, and only if, y <q(L) x according to our definitions, that 
is, <L =(<q(L))op where we recall that Q(L) denotes the closure under quotienting 
of {L}. The original language L is then up ward closed in the preorder <SL, while it 
is down ward closed in the preorder < L that we obtain from duality theory.
As we have seen throughout this book (see Remarks 3.22 and 7.3), when applying 
duality theory to a different field, some conventions are bound to clash with the 
existing ones in the field, and one needs to choose whether to adapt or coexist. 
We here chose to keep the same definition of preorder associated to a sublattice as 
we did earlier in the book, which is thus the opposite of the definition of syntactic 
preorder. As it happens, this choice fits well with some of the existing literature on 
recognition by ordered monoids, in which the definition of syntactic preorder was 
also reversed, specifically some of the papers that use ordered monoids to analyze 

8.3 Equations, Subalgebras, and Profinite Monoids 
311
the class of piecewise testable languages (Straubing and ThAl’rien, 1988; Pin, 1995; 
Henckell and Pin, 2000). Since piecewise testable languages will also be our focus 
later in this section, this gives another reason to adhere to the convention that we 
choose here.
For any x, y e A*, we define
[ x < y J := {L e Reg A | if y e L, then x e L},
and note that this is a sublattice of RegA. As in Definition 4.25, we also use the 
notation L |= x < y to mean that L e [[x < y J. If E is a set of pairs of A*, we also 
define
[EJ := p| [x < yJ.
(x,y)eE
The content of Proposition 4.26, in this setting, is that we have an adjunction
<-: P(RegA) 
P(A* x A*)op: [-] 
(8.4)
whose fixed points on the left are sublattices of RegA, and whose fixed points on the 
right are compatible preorders on A*; see Definition 4.22. Recall that, for a subset S 
of RegA, Q (S) denotes the closure under quotienting of S. When E is a relation on 
A*, let us denote by m(E) the biaction invariant closure of E, that is, the relation 
defined by
m(E) := {(uxv, uyv) | (x, y) e E, u, v e A*}.
We now prove that the operations of closure under quotienting and closure under 
the biaction are dual to each other, in the following sense.
Proposition 8.47 For any set of pairs E c A * x A * and any subset S c Reg A, we 
have
S c [m(E)J <> Q(S) c |[EJ.
In particular, if [[E J is closed under quotienting, then [[E J = [[m (E) J.
Proof We first show that, for any L e Reg A and x, y e A *, if Q (L) c [[ x < y ], 
then L |= ux v < u yv for every u, v e A *. Indeed, if Q (L) c [[ x < y ], then at least 
for every u, v e A*, we have u-1Lv-1 |= x < y, which means that L |= uxv < 
u yv. To show that this extends to all of A *, consider the function f: A * x A * ^ 
A * x A * defined by f (u, v) := (ux v, u yv). This function is continuous because 
the multiplication on A * is continuous. Denote by C the inverse image of the set 
(Lc x A *) U (A * x L); this set is closed, and the assumption that Q (L) c [ x < y ] 
gives that A * x A * is contained in C. Thus, since A * x A * is dense in A * x A *, we get 

312 
8 Automata Theory
that C = A * X A *, meaning that for any (u, v) e A * X A *, we have L |= ux v < u yv, 
that is, L e [[m({x < y}) J.
This establishes the proposition in case S and E are singletons. For the general 
case, note that S c [[m(E)] if, and only if, L e [[m({x < y}) J for every L e S and 
every (x, y) e E and Q (S) c [[E] if, and only if, Q (L) c [[ (x, y) ] for every L e S 
and every (x, y) e E.
For the “in particular” statement, if [[E J is closed under quotienting, then taking 
S := [[E J in the equivalence gives [[EJ c [[m(E)], and the other inclusion is clear 
because E c m(E) and the map [-] is antitone. 
□
For x, y e A*, let us write L |= x < y if, and only if, L e [[m({x < y}) J, that is, 
L |= ux v < u yv for all u, v e A *. We say in this case that L satisfies the profinite 
monoid inequation x < y, and we write
I x < y 1 := {L e Reg A | L |= x < y}.
Similarly, we write L |= x == y if, and only if, L |= uxv < uyv and L |= uyv < uxv 
for all u, v e A *. In this case, we say that L satisfies the profinite monoid equation 
x =* y. It follows in particular from Proposition 8.47 that, in the adjunction (8.4), the 
sublattices on the left that are closed under quotienting correspond exactly to the 
compatible preorders on the right that are monoid compatible, in the sense of the 
following definition. Note that this notion generalizes the definition of congruence, 
which is just a monoid-compatible equivalence relation.
Definition 8.48 A binary relation R on a monoid M is monoid compatible if, for 
every u, v, x e M, if uRv, then uxRvx and xuRxv.
We now show that profinite monoid equations for a regular language may be 
“tested” on the syntactic monoid. A similar result holds for profinite monoid in­
equations and ordered monoids (see Remark 8.46), but we do not fully develop that 
theory here.
Recall that, when h: A * ^ M is a monoid homomorphism, with M a finite 
monoid, we denote by h: A * ^ M its unique continuous extension, which is also 
a homomorphism.
Theorem 8.49 Let L e Reg A and (x, y) e A * X A *. The following are equivalent:
(i) 
the language L satisfies the profinite monoid equation x =* y;
(ii) 
the (finite) Boolean residuation ideal B (L) is contained in [[x & y J;
(iii) 
for the syntactic homomorphism h L: A * ML of L, we have 
hL (x) = hL (y); and
(iv) 
there exists a homomorphism h: A * ^ M, with M a finite monoid, which 
recognizes L and such that h (x) = h (y).

8.3 Equations, Subalgebras, and Profinite Monoids 
313
Proof By definition, (i) means that L e [[m({x < y, y < x}) J. By Proposition 
8.47, this is equivalent to Q({L}) c [[x ^ yJ. Since [[x ^ y J is a Boolean subal­
gebra of Reg A and B (L) is the Boolean subalgebra of P (A *) generated by Q ({L}) 
(Proposition 8.16), this gives that (i) is equivalent to (ii).
For (ii) =^ (iii), recall that the languages recognized by ML are precisely those 
in B(L) (Corollary 8.20). Thus, in particular the language K := hL1 ({hL(x)}) is 
in B(L) and x e K, so (ii) gives that y e K. Using Exercise 8.2.7, we have that 
K = hL ({hL(x)}), so in particular hL(x) = hL(y), as required.
(iii) =^ (iv) is trivial, since hL recognizes L.
For (iv) =^ (i), note that we have, for any u, v e A *,
7/ 
\ 
7/ x7/ x7/ \ 
7/ x7/ x7/ x 7/ x
h (uxv) = h(u)h(x)h(v) = h(u)h(y)h(v) = h(uyv),
using the fact that h is a homomorphism (Corollary 8.37). Using Exercise 8.2.7 
again, L = h-1 (P), where P is a subset of M such that L = h-1 (P). Hence, for any 
u, v e A *, we have
xuv e L ^^ h(uxv) e P ^^ h(uyv) e P ^^ xyv e L ,
as required. 
□
An important type of question in automata theory is, given a subclass C of the 
class of regular languages, whether the membership problem for C is decidable 
within the class of regular languages. More precisely, the C-membership problem 
asks for an effective procedure that allows one to decide, given a finite automaton, 
whether or not the language recognized by the automaton is in the class C.A 
powerful method, coming from the algebraic approach to language theory, is to 
give an equational criterion on the syntactic monoid of a regular language L for 
belonging to the given class C.
Indeed, Proposition 8.47 shows that profinite monoid quotients of A * correspond 
dually to the Boolean subalgebras of RegA that are closed under quotienting. This 
is the kernel of Eilenberg’s theorem (Eilenberg, 1976) seen from a duality-theoretic 
point of view. Eilenberg considered pseudovarieties of regular languages, which are 
families V = (VA)AeSetf of Boolean subalgebras of RegA closed under quotienting, 
satisfying the further property that the Boolean algebras VA are stable under inverse 
image by homomorphisms between free monoids. An extension of Proposition 8.47 
then shows that the class of syntactic monoids of languages in V is definable by 
profinite equations that are moreover invariant under substitutions. Such classes 
of finite monoids are called pseudovarieties of finite monoids, and, by a finite 
version of Birkhoff’s theorem, are exactly those classes of finite monoids closed 
under homomorphic images, submonoids, and finite products. Eilenberg’s theorem 

314
8 Automata Theory
can thus be viewed as a duality between pseudovarieties of regular languages and 
pseudovarieties of finite monoids; for further details, see Gehrke (2016).
Rather than exposing this general theory any further here, we illustrate the method 
by working out a particular case, namely that of piecewise testable languages. In this 
case, a decidable criterion for membership was first obtained in Simon (1975), who 
showed that the piecewise testable languages are exactly the languages recognized 
by finite J -trivial monoids. Our aim in the rest of this section is to obtain a 
profinite equational characterization of piecewise testable languages by duality- 
theoretic means and we will explain how this shows that the class has a decidable 
membership problem (Corollary 8.68).
Positively Piecewise Testable Languages
In order to define the positively piecewise testable and piecewise testable languages, 
we need the subword ordering. To this end, it is convenient to think of a finite word 
w e A * as a function |w | ^ A, where |w | is identified with the totally ordered set 
1 < 2 < • • • < |w| and the function sends i to the ith letter of w. In this context, we 
often also write w(i) for the ith letter of w. We say that u e A* is a (scattered) subword 
of w if there exists an order embedding ^ from |u| to |w | such that w(^(i)) = u(i) 
for every i e |u|, that is, ifu is a subsequence ofw. For example, the word abbc is a 
subword of acabbac, but not of acaba, and not of abc either. We will write u E w 
if u is a subword of w, and we note that E defines a partial order on A*.
Definition 8.50 Let A be a finite alphabet and L E A * a language. A language is 
called positively piecewise testable5 if it is a finitely generated up-set in the partial 
order (A*, E) and piecewise testable if it is a Boolean combination of positively 
piecewise testable languages. We denote by PT+A the lattice of positively piecewise 
testable languages and by PTA the Boolean algebra of piecewise testable languages.
For the rest of this section, we fix a finite alphabet A and write PT+ and PT 
for PT+A and PTA, respectively. We also write Reg for RegA. In formal language 
theory, a language class is often seen as a fibered collection of lattices, or Boolean 
algebras, where the alphabet may vary and morphisms between alphabets induce 
morphisms between the lattices. We do not need this structure in this section, and 
we only remark here that it is related to the fibrational approach via hyperdoctrines 
that we will point to at the end of Section 8.4.
Any positively piecewise testable language is regular, since it is easy to check 
with a finite automaton whether any of a finite number of subwords appear in a 
word (see Exercise 8.3.1). It follows that any piecewise testable language is regular, 
since Reg is a Boolean algebra (Proposition 8.24).
5 What we call a positively piecewise testable language is also known as a shuffle ideal (Pin, 1995) or as a 
language in the (marked) polynomial closure of {0, A*} (Pin, 2011).

8.3 Equations, Subalgebras, and Profinite Monoids 
315
Toward the equational characterization of piecewise testable languages, we first 
show how the collection PT+ may be identified with an inequational property 
on the free profinite monoid. To this end, first note that the collection PT+ of 
finitely generated up-sets of (A *, E) is a sublattice of P (A *). By Exercise 7.2.3 
this statement is equivalent to the statement that (A*, E) is finitely MUB-complete 
in the sense of Definition 7.50, that is, for any finite set F E A*, there is a finite 
set G E A * such that T G = p w eF Tw- The latter is indeed the case, but in fact 
something much stronger is true. Even though (A*, E) is not bifinite, it is what is 
known as a well-quasi-order, that is, every up-set of (A*, E) is finitely generated. 
Indeed, this was shown early on by Higman (1952). For completeness, we include 
a proof. Note that while the following proof uses the axiom of choice, one can also 
give a constructive proof, for example, by induction on the size of the alphabet, see 
Murthy and Russell (1990).
Theorem 8.51 (Higman, 1952, Theorem 4.4) For any finite alphabet A, the poset 
(A*, E) is a well-quasi-order
Proof Let S = {U e U(A*, E) | min(U) is infinite}. If S is empty, then we are 
done. Suppose S ± 0. Let C be a chain in S. We will show that U C is in S. Clearly, 
u C is an up-set. Notice that every up-set is the up-set of its minimal elements 
since the down-set of any word is finite. Suppose that the set F := min( C) is 
finite. Then, since C is a chain, there is a single V e C with F E V. But then 
V E C = TF E V, which is a contradiction since V eS.So, CeSand by 
Zorn’s lemma (Lemma 2.7), there is a maximal element U eS. We now have
min(U) = 
{min(U) n aA* | a e A}
and thus Ua = min( U )n aA * = aVa is infinite for some a e A .Now, let W = U UT Va. 
Then, Va is infinite and each element in Va is minimal in W. To see this, notice 
that if w e Va, then aw e min(U) and thus w £ U. Further, if v e Va and v E w, 
then av E aw and av, aw e min(U), so v = w. Thus, W e S and Va £ U so that 
U c W, which contradicts the maximality of U. 
□
Since PT+ is the lattice of up-sets of a well-quasi-order, we note that we are in a 
special case of the spectral domains considered in Section 7.2. Thus, by Corollary 
7.48 and Exercise 7.2.4, the spectral space dual to PT+ is isomorphic to the poset 
Idl( A* ) in the Scott topology. Since PT+ is a sublattice of the Boolean algebra of 
regular languages, its dual space Idl(A*, E) can also be characterized by inequations 
on the dual space A * of Reg.
Note also that PT+ is closed under quotienting. Indeed, for any words u, v e A* 
and L e PT+, we have u-1 Lv-1 e PT+ :if uwv e L and w E w', then uwv E uw'v, 
so uw'v e L as well. Thus, in order to obtain a characterization of PT+ via profinite 

316 
8 Automata Theory
inequations, Proposition 8.47 implies that we may look for a characterization via 
profinite monoid inequations.
Proposition 8.52 The lattice PT+ contains exactly the regular languages that 
satisfy the profinite monoid inequation x < e for every x e A *.
Proof Let us first show that any language L in PT+ satisfies the profinite monoid 
equation. Since PT+ is closed under quotienting, it suffices to show that PT+ c 
[[ x < e J, by Proposition 8.47. But if L is in PT+, then e e L clearly implies L = A *, 
since e E w for every w e A *, so that L = A *, and thus x e L for every x e A *.
Conversely, suppose that L |= x < e for every x e A*. Suppose that w E w' and 
w e L .By induction on the difference in length between w' and w, it suffices to 
treat the case where w = u v and w' = ua v for some u, v e A * and a e A. Now, 
since L |= a < e, we also get L |= uav < uv. Therefore, since uv e L, we have 
uav e L. 
□
Propositions 8.47 and 8.52 now yield the following.
Theorem 8.53 The Priestley dual space of PT+ is homeomorphic to the quotient 
space A*/<, where < is the smallest compatible preorder containing the profinite 
monoid inequations x < e for every x e A *.
Note that this result in particular gives an equational way of looking at the spectral 
domain Idl ( A* ) as follows. As noted above, the spectral space dual to PT+ can also 
be described as Idl( A*) equipped with the Scott topology. Thus, using Theorem 
6.4, we also get the following.
Corollary 8.54 The Priestley dual space of PT+ is homeomorphic to 
(Idl( A *), ap, 2), where ap := a v ad and a is the Scott topology on (Idl( A *), E).
We further have a canonical map n: A * 
Idl( A *), dual to the inclusion
PT+ ^ Reg, given by continuously extending the inclusion A * ^ Idl( A *) that 
sends w e A * to the principal ideal fw. Concretely, this map sends u e A * to 
the ideal {w e A * | u e fw} (see Exercise 8.3.3). Theorem 8.53 implies that 
n(u) < n(v) if, and only if, u <PT+ v. Defining an appropriate monoid multiplica­
tion on Idl( A *), the map n becomes a continuous monoid homomorphism (again 
see Exercise 8.3.3 for more details).
Piecewise Testable Languages
Now, moving towards a first characterization of the dual space of PT, recall from 
Proposition 3.34 and Corollary 3.35 that, since PT is the Boolean envelope of PT+, 

8.3 Equations, Subalgebras, and Profinite Monoids 
317
the Stone dual space of PT is simply given by forgetting the order of the Priestley 
dual space of PT+ . We thus also get the following result.
Corollary 8.55 The dual space of PT is homeomorphic to A */(< n >), where < 
is the preorder of Theorem 8.53.
Remark 8.56 It was recently proved that the dual space of the Boolean algebra of 
piecewise testable languages over an alphabet A with | A| = n is homeomorphic to 
the ordinal w"n + 1 with the interval topology (Pouzet, 2023, Theorem 11), based 
on earlier, more general results by Bekkali et al. (2007).
While Corolary 8.54 tells us something about what the dual space of PT+ looks 
like, Corollary 8.55 and Theorem 8.53 tell us something about the (in)equations 
satisfied by PT+ and PT, and the latter type of information is what can lead to 
a decidable characterization. In order to obtain such a decidable equational char­
acterization for piecewise testable languages, we need a better description of the 
congruence < n > of Corollary 8.55. Let us introduce a notation for this congru­
ence.
Definition 8.57 For A a finite alphabet, we write ~PT for the congruence on A * 
dual to the subalgebra PT c Reg.
We first identify two properties of this congruence that will be important for this 
description. These properties take the form of quasi-identities, which is the term 
commonly used in universal algebra for an expression of the form
if (51 = 11 and • • • and 5n = tn), then (50 = t0),
where the si and ti are terms.
Lemma 8.58 Let < be a monoid-compatible preorder on a monoid M such that 
x < 1 for every x e M and denote its associated equivalence relation by &. Then, 
for any x, y, u e M we have
(a) 
if uxy & u, then ux & u, and
(b) 
if y xu & u, then xu & u.
Proof Let x, y, u e M. Note that, since < is monoid-compatible and x < 1 for 
every x e M, we also get ux < u • 1 = u and uxy < ux • 1 = ux. Now, for the first 
item, suppose that uxy & u. Then
u & uxy < ux < u,
so ux & u. The proof of the second item is symmetric. 
□

318 
8 Automata Theory
Using Theorem 8.53, the congruence -PT dual to PT satisfies both of the prop­
erties of Lemma 8.58. We now aim to show that these properties are equivalent to 
profinite monoid equations, and that the topological monoid congruence -PT is in 
fact generated by those equations. This will yield a proof of Simon’s theorem and, 
as we will see, the decidability of the membership problem for piecewise testable 
languages.
Let us first show how the properties of Lemma 8.58 can be written as profinite 
monoid equations. Here, the operations w and w -1 that we introduced in Definition 
8.40 and immediately after (see also Exercise 8.2.10) are important, as they allow 
us to construct profinite terms.
Lemma 8.59 Let - be a closed congruence on a profinite monoid M.
(a) 
The following are equivalent:
(i) 
For any u, x, y e M, if uxy - u, then ux - u.
(ii) 
For any x, y e M, (xy)"x - (xy)".
(b) 
The following are equivalent:
(i) 
For any u, x, y e M, ifyxu - u, then xu - u.
(ii) 
For any x, y e M, x(yx)" - (yx)".
Moreover, if any of these properties hold, then z" +1 - z" for any z e M.
Proof We only prove that (i) and (ii) in (a) are equivalent, and imply that z"+1 - 
z", the proof for (b) is symmetric. Suppose (i) holds. We first show that z"+1 - z" 
for any z e X . Indeed, applying (i) with u = z" , x = z,andy = z"-1, we have 
uxy = z"z" = u, so that z"+1 - z". In particular, (xy)"xy - (xy)", so that (i) 
now gives (xy)"x - (xy)".
Conversely, suppose (ii) holds and suppose that uxy - u. Then, for any n,we 
have u - u(xy)n, so, since - is closed, u - u(xy)" . Thus,
ux - u(xy)"x - u(xy)" - u. 
□
Remark 8.60 The two profinite equations (a)(ii) and (b)(ii) are known in the 
literature as the profinite equations for R-trivial and L-trivial monoids, respectively, 
and it is known that together they characterize the class of J -trivial finite monoids. 
The equation z" - z"+1 that appeared in Lemma 8.59 characterizes the class of 
aperiodic or H -trivial monoids. The letters L, R, J ,andH refer to Green’s 
equivalence relations on monoids, and the adjective “trivial” asserts that these 
relations are equal to the diagonal in the profinite monoid under consideration. We 
will not need to consider these relations in any more detail here, and our development 
is independent of any of the facts mentioned in this remark. We refer the reader who 
wants to know more about Green’s relations to Exercise 8.3.2, and standard texts 

8.3 Equations, Subalgebras, and Profinite Monoids
319
on monoid theory, such as for example Eilenberg (1974, 1976), Almeida (1995), 
Rhodes and Steinberg (2008), and Pin (2022).
We here make a slightly non-standard definition of J -trivial profinite monoid 
which however coincides with the usual definition, see Exercise 8.3.2.
Definition 8.61 Denote by -j the smallest profinite monoid congruence on A * 
that contains, for every x, y e A*, the pairs
((xy)"x, (xy)") and (x(yx)", (yx)") .
Denote the residuation ideal of Reg A dual to -J by Jriv. We call a profinite 
monoid M J - trivial provided for all x, y e M, we have (x y)" x = (x y)" and 
x(yx)" = (y x)", and we call the elements of Jriv the J-trivial languages of Reg.
By Theorem 8.49, a regular language L is J -trivial if, and only if, its syntactic 
monoid is J -trivial if, and only if, it is recognized by some J -trivial monoid.
Our final aim in this section is to prove that PT = Jtriv or equivalently that 
-j = -PT. The inclusion PT c Jriv actually follows immediately from Lemmas 
8.58 and 8.59:
Corollary 8.62 For any x, y e A *, we have
(xy)"x —PT (xy)" and x(yx)" -PT (yx)".
That is, -J c-PT and dually PT c Jtriv.
It now remains to show that J triv c Jtriv. Since PT is defined as the Boolean 
algebra generated by the lattice PT+ = U(A*, E), we are in the situation that we 
discussed in Section 4.7. Theorem 4.79 therefore gives that a language L is in PT 
if, and only if, it has bounded alternation height in the subword order E. We will 
prove that any language L that satisfies the profinite monoid equations defining - J 
(and thus the quasi-identities of Lemma 8.58) has bounded alternation height.
For this final step, we need to develop a small amount of finite monoid theory, 
which gives just a flavor of this rich field. Before giving the formal details of 
the proof, we first give an intuition. Let w = a 1 • • • ak be a finite word and 
let (-): A * ^ M be a homomorphism to a finite monoid. We will analyze how 
w, i.e., the value of w under the homomorphism M can be computed “from left 
to right;” a similar analysis applies by computing the value “from right to left.” 
Reading w from left to right, the value w can be computed, starting from 1M, by 
first computing a 1, then a 1 a2, then a 1 a2a3, and so on. In this computation, which 
takes k steps, only certain steps will change the value; positions where this happens 
will be called “right unstable” below. By definition, only the unstable positions of a 
word contribute to its value, and we may thus reduce a word w to obtain a subword 

320
8 Automata Theory
r (w) that only contains its right unstable positions. The idea of the rest of the proof 
is that, if M is a finite monoid that satisfies the quasi-identities, then the number 
of reduced words is bounded. This will give a bound on the alternation height as a 
subset of the poset (A*, E) of any regular language L that is recognized by M.
Now, more formally, we make the following definitions. A reader familiar with 
finite monoid theory may recognize the similarity of the reduction notion that we 
introduce here with the Karnofsky-Rhodes expansion, see, for example, Rhodes 
et al. (2022, Section 2).
Definition 8.63 Let M be a finite monoid and (-): A * ^ M a homomorphism; 
we write w for the image of w e A * under the homomorphism. For any finite word 
w = a 1 • • • a k e A * with each a i e A and for each 0 < i < k, we write wi for 
the length i prefix of w, that is, w0 := e and wi := wi-1 ai for all 1 < i < k. We 
will say a position i e {1,..., k} is (right) stable if wi = wi-1, and (right) unstable 
otherwise.
Let t1 < • • • < 11 be an enumeration of the unstable positions of w. We define 
r (w) := a t1 •• • a te, the subword of w on the unstable positions. A simple induction 
on the number of unstable positions in w shows that the words w and r(w) have the 
same value, that is, w = r(w). We call r(w) the right reduction of w and we call a 
word in A* right reduced if all of its positions are unstable, that is, if w = r(w) .
The notions of left (un)stable, left reduction, and left reduced are defined 
analogously, using the sequence of suffixes of w. We write f,(w) for the left re­
duction of w .
We begin by showing that the quasi-identity identified in Lemma 8.58(a) implies 
that, if M is finite, then there are finitely many right-reduced words for any homo­
morphism from A* to M . We only state and prove the direction that we need in the 
proof, however, the converse is also true (see Exercise 8.3.4).
Lemma 8.64 Let (-): A * ^ M be a homomorphism to a finite J-trivial monoid 
M. Then, there are finitely many right-reduced words for the homomorphism (-).
Proof We show that, for any right-reduced word w = a1 ••• ak in A* of length 
k , and for any 1 < i < j < k , the prefixes wi and wj have distinct values. This will 
then imply in particular that a right-reduced word can only have length at most |M|, 
and thus there are finitely many right-reduced words.
Let w = a1 ••• ak e A* be a right-reduced word of length k , and suppose, 
towards a contradiction, that there exist 1 < i < j < k such that wi = wj. This 
means that
a1 •••aiai+1 •••aj = a1 •••ai.
Thus, applying the quasi-identity of Lemma 8.59(a)(i) with u := a1 •••ai, x := ai+1, 
y := ai+2 • • • aj, we see that uxy = u, so ux = u. But this means that wi = wi+1, 
so that i + 1 is a right-stable point, contradicting the assumption that w is right 
reduced. 
□

8.3 Equations, Subalgebras, and Profinite Monoids 
321
Lemma 8.65 Let (-): A * ^ M be a homomorphism to a finite monoid M, 
w e A *, a e A, and suppose that the word r (w) a is a subword of w. Then, w a = w.
Proof Let w e A*, a e A and suppose that the word r (w)a is a subword of w. If 
r(w) = £, then 1M = b = w for all b e A occurring in w and thus, in particular, 
wa = w • a = 1M = w. Now, suppose w = a 1 • • • ak with each ai e A and let t 
be an unstable position in w. Further, let t' be the last unstable position preceding 
t. If t is the first unstable position in w, we take t' = 0. We claim that the letter 
at cannot appear anywhere strictly between positions t' and t. To see this, notice 
that, since for every t' < j < t, j is stable, we have wt> = wj = wj-1 aj = wt> aj, 
while wt = wt-1 at = wt'at wt'. Thus, we must have aj at, as claimed. These 
remarks imply that, if ^ is an embedding of r(w) = at1 • • • ate as a subword of w, 
then for every 1 < i < {, y(i) > ti.
Finally, let f be an embedding of r (w) a as a subword of w. Then f must send 
the last position to some position j with j > t(. Then, since all positions after t( are 
stable, we get in particular that wj-1 = wj- = w, so
w a = wj-1 a = wj = w. 
□
Applying the exact same reasoning when starting to read w from right to left, for 
the left reduction f,(w) of w, we have, analogously to Lemma 8.65, that af,(w) E w 
implies aw = w, and, analogously to Lemma 8.64, that the quasi-identity yxu = 
u ^ xu = u implies that there are finitely many left-reduced words.
Proposition 8.66 Let M be a finite J-trivial monoid, (-): A * ^ M a homo­
morphism, and L a regular language recognized by (-). Then, L is piecewise 
testable.
Proof As explained above, by Theorem 4.79, it suffices to prove that L has bounded 
alternation height in the poset (A*, E). The images of the reduction functions 
r: A * ^ A * and t: A * ^ A * obtained from the homomorphism (-) are finite by 
Lemma 8.64 and its symmetric “left” version. Therefore, the set
F := {uav | u e im(r), a e A, v e im(£)}
is also finite. For any word w e A*, denote by f (w) the set of subwords ofw that 
are in F. Clearly, if w E w', then f (w) E f (w').
Claim Suppose w E w'. If w 
w', then f (w) E f (w').
Proof of Claim. Let w E w'. Then, f (w) E f (w'). We prove the claim by 
contraposition. To this end, suppose that f (w) = f (w'). Since w' can be obtained 
from w by inserting a finite number of letters, we can assume w = uv and w' = uav 
for some u, v e A * and a e A; if we prove for this special case that w = w ’, then the 

322 
8 Automata Theory
contrapositive of the claim follows by an easy induction on the length difference 
between w' and w.
Now, since uav = w', we have r(u)af,(v) E w', so r(u)af,(v) e f (w'). Since 
f (w) = f (w'), we also have that r(u)a(v) e f (w), so r(u)af,(v) is a subword of 
w = uv. This implies that either r(u)a E u or af,(v) E v, according to where the 
embedding sends the “middle” position a. Let us assume r (u) a E u; the other case 
is symmetric. Lemma 8.65 gives that ua = u, and thus
w = u v = ua v = w',
and the claim is proved.
Finally, let x 1 E y1 • • • E xn E yn be an alternating chain for L, and let P be the 
image of L by (-). Since L is recognized by (-), we have w e L if, and only if, 
w e P. Since x 1 E y1 • • • E xn E yn alternates in and out of L, no two consecutive 
elements of the chain can have the same image by (-). Therefore, by the claim, we 
have
f (x 1) E f (y1) • • • E f (xn) E f (yn).
Since each inclusion in this chain is strict, the cardinality of the set increases by 
at least 1, so it follows that 2n < | F | + 1, giving a bound on the length n of the 
alternating chain. 
□
Putting the above results together, we get that the profinite equations defining 
~j characterize the congruence ~PT dual to PT.
Theorem 8.67 The Boolean residuation algebra PT of piecewise testable lan­
guages is dual to the smallest profinite monoid congruence & on A * that contains 
((x y)" x, (x y)") and (x (y x)", (y x)") for every x, y e A *, that is,
PT = I(xy)"x = (xy)", x(yx)" = (yx)"J.
Proof Recall that ~j is by definition the smallest profinite monoid congruence 
on A * that contains the equations, and ~PT is the congruence dual to PT; we show 
they are equal. By Corollary 8.62, ~j is contained in ~PT. On the other hand, if L 
is a regular language satisfying the equations defining ~j , then Proposition 8.66 
together with Lemma 8.59 imply that L is piecewise testable. Thus, the Boolean 
algebra associated with ~j is contained in PT, so that ~PT is contained in ~j . □
It follows in particular that the membership problem for piecewise testable lan­
guages is decidable. Indeed, by Theorem 8.22, the syntactic monoid of a regular 
language L is computable from any automaton recognizing it, and Theorem 8.49, 
applied to the profinite monoid equations defining ~j , shows that these equations 
may be tested on the syntactic monoid. We conclude the following.
Corollary 8.68 A regular language L is piecewise testable if, and only if, its 
syntactic monoid ML satisfies the equations (xy)"x = (xy)" and x(yx)" = (yx)" 

8.3 Equations, Subalgebras, and Profinite Monoids 
323
for every x, y e ML. In particular, it is decidable for a given regular language 
whether it is piecewise testable.
Exercises for Section 8.3
Exercise 8.3.1 Let A be a finite alphabet and w e A *. Construct a finite automaton 
that recognizes the language Tw := {v e A * | w E v}. Deduce that any finitely 
generated up-set (and thus, by Theorem 8.51, any up-set) of (A*, E) is regular.
Exercise 8.3.2 Let M be a monoid. For any m, n e M , we define
def
m <l n ^^ there exists x e M such that xn = m,
def
m <r n ^^ there exists y e M such that ny = m, and
def
m <j n ^^ there exist x, y e M such that xny = m.
(a) 
Prove that <L <r, <j are preorders on M and that <l U <r c < j.
The equivalence relations associated to these preorders are denoted L, R, J , 
respectively. In general, a monoid is called L-trivial, R-trivial, or J -trivial if the 
corresponding equivalence relation is equal to the diagonal (also known as “trivial”) 
relation. We show in this exercise that this definition of J -trivial coincides with 
the one given in the main text for profinite monoids, and also that J -trivial is 
equivalent to the conjunction of L -trivial and R-trivial for profinite monoids.
(b) 
Prove that if J is the trivial relation, then L and R are also both the trivial 
relation.
Now, suppose that M is a profinite monoid.
(c) 
Prove that, for any x, y e M, (xy)" = x(yx )"-1 y.
(d) 
Prove that, for any x, y e M ,
(xy)"xR(xy)" and x(yx)"L(yx)".
Conclude that if R is the trivial relation then the equation (xy)"x = (xy)" 
holds in M, and if L is the trivial relation, then the equation x(yx)" = (yx)" 
holds in M .
(e) 
Conversely, prove that if both (xy)"x = (xy)" and x(yx)" = (yx)" for all 
x, y e M , then J is the trivial relation.
Hint. Show first that, if mxy = m in M, then m(xy)" = m. Then, generalize 
this idea and use the given equations.
(f) 
Conclude that, in any profinite monoid M , the following are equivalent:
(i) 
the equivalence relation J is trivial;

324
8 Automata Theory
(ii) 
the equivalence relations L and R are both trivial; and
(iii) 
the equations (xy)"x = (xy)" and x(yx)" = (yx)" hold for all 
x, y e M.
Exercise 8.3.3 Recall that Idl(A*, E) is a spectral domain in the Scott topology, 
whose compact-opens are the sets of the form KF := {I e Idl( A *) | I n F 0}, 
with F a finite subset of A *. Also, recall that a function n: A * ^ Idl( A *) was 
defined by n (u) := {w e A * | u e '|‘w}.
(a) 
Prove that n is well defined, and that in particular for any u e A*, n(u) = [u, 
the principal down-set of u.
(b) 
Prove that n is continuous with respect to the patch topology on Idl (A *). Hint. 
It suffices to prove that n-1 (KF) is clopen in A * for every finite subset F of 
A*.
(c) 
Prove that there is a well-defined continuous monoid multiplication on Idl(A*) 
given, for I, J e Idl( A* ),by
I • J := {ww' | w e I, w' e J}.
(d) 
Prove that n(uv) = n(u) • n(v) for any u, v e A*.
(e) 
Conclude, using Exercise 8.2.6, that n is a continuous monoid homomorphism 
A* ^ Idl( A *).
Exercise 8.3.4 Let (-): A * ^ M be a monoid homomorphism and suppose that 
there exist u, x, y e A * such that ux y = u but ux u. Prove that there exist infinitely 
many right-reduced words for the homomorphism A * ^ M.
Exercise 8.3.5 Prove that the complement of the language L of Exercise 8.1.2 is 
positively piecewise testable.
Exercise 8.3.6 In this exercise we let A = {a, b} and consider the language
L := {w e A* | |w|a > |w|b},
where, for w e A* and x e A, we write |w|x for the number of occurrences of the 
letter x in the word w . The language L is often called “majority” in the literature 
since it contains the set of words in which the majority of letters are a. For any 
k e Z, define the language
Lk := {w e A* | |w|a - |w|b > k}.
(a) 
Show that the closure under quotienting Q(L) of L is equal to {Lk | k e Z}. 
Conclude in particular that L is not regular.

8.4 Open Multiplication
325
(b) 
Show that Z is, up to isomorphism, the discrete dual of the complete Boolean 
algebra generated by Q(L) and that the monoid morphism {a, b}* ^ Z, w ^ 
|w|a - |w|b is the discrete dual of the inclusion of this algebra in the powerset 
of {a, b}*. Verify that the kernel of this monoid morphism is the syntactic 
congruence = L and thus that the morphism is, up to isomorphism, the syntactic 
morphism of L .
(c) 
Deduce that the quotienting Boolean algebra B(L) generated by L is equal 
to the Boolean algebra generated by the languages Lk . Show that it is not a 
complete Boolean algebra.
(d) 
Prove that B(L) is isomorphic to the Boolean subalgebra M ofP(Z), consid­
ered in Example 4.35, consisting of the subsets S of Z such that both S n Z+ is 
finite or co-finite and S n Z- is finite or co-finite. Here, as in Example 4.35, Z+ 
denotes the set of positive integers and Z- denotes the set of negative integers.
(e) 
Write R + for the graph of the addition operation on Z, that is, R + = {(x, y, z) e 
Z3 | x + y = z}, and denote by R + the closure of R + in the space (Z+TO)3. 
Show that, for any u e Z+TO, the elements (-to, +to, u) and (+to, -to, u) are 
in R +; that is, R + contains the set {(-to, +to), (+to, -to)} x Z-TO. Conclude 
that there is no continuous binary function on Z-+toto that extends the addition 
on Z.
(f) 
Using Example 4.35, show that B(L) is given by the following set of spatial 
equations on fi A*:
{px « p, xp « p | p e j8A*, x e A}.
Here, p x and x p denote the left and right action of A * on fi A * induced by the 
biaction dual to the quotienting biaction of A * on P (A *).
8.4 Open Multiplication
What better to end with than something open? This book is just a small sampler 
of the things you can do with duality - even within our two chosen applications of 
domain theory and automata theory, the theory goes much beyond what we have 
touched on here. In Sections 8.2 and 8.3, we saw that the multiplication of a profinite 
monoid can be seen as dual to residuation structure on the dual Boolean algebra, 
or as dual to a biaction structure by quotienting operations. In this final section, we 
consider a third possibility for seeing the multiplication of a profinite monoid as 
the dual of a binary operation on the dual Boolean algebra, which applies only in 
the special case where multiplication is an open map.
Theorem 8.45 establishes a connection between the residual operations (\, /) on 
a Boolean algebra and continuous binary operations f on its dual Boolean space. 
One may wonder what it takes for the forward image map given by the binary 

326 
8 Automata Theory
operation to be the dual of an operation. Using Definition 4.38, we obtain the 
following requirements on f :
(a) 
For all x e X the inverse image f -1 (x) is closed.
(b) 
The forward image of a pair of clopens is clopen.
Without assuming that f is also continuous, these are not very natural conditions 
on a map between topological spaces. However, we do obtain the following useful 
corollary.
Corollary 8.69 Let (X, f ) be a binary topological algebra based on a Boolean 
space and let B be the dual Boolean algebra of clopen sets. The operation f is an 
open mapping if, and only if, B is closed under the forward operation
(U, V) w U • V := {f (u, v) | u e U, v e V},
that is, if, and only if, the complex multiplication of two clopen sets of X is again 
clopen. In this case, the graph of f is the relational dual to the operation • on B.
Proof Since all continuous maps from compact spaces to Hausdorff spaces are 
closed mappings, it follows that B is closed under the complex operation • if, and 
only if, f is an open map. The conditions required for the graph R of f to be the 
dual of this operation • are that f-1 (x) = R[_, _, x] is closed for each x e X and that 
U • V = R[U, V,_] is clopen whenever both U and V are clopen. For f continuous 
and X Hausdorff, the first condition always holds. The second condition holds if f 
is an open mapping. 
□
Note that, in the special case of languages and the free profinite monoid, a 
subtlety arises from the mixing of discrete and topological duality that happens 
there. More precisely, if B is a Boolean algebra of regular languages, then it is 
possible that B fails to be closed under the multiplication in P (A *), even though its 
natural embedding in the powerset of the dual space X of B is a Boolean subalgebra 
closed under complex multiplication. That is, the Boolean subalgebra {L | L e B} 
of P (X) may be closed under complex multiplication, even if B itself is not, see 
Example 8.71.
Example 8.70 One of the, if not the, most famous theorems about regular lan­
guages is Kleene’s theorem (Kleene, 1956) which asserts that RegA is closed under 
concatenation product in P(A*). This fact also has a very natural duality proof in 
categorical logic (Marques, 2021).
Example 8.71 A free profinite group, or in fact any topological group, has open 
multiplication. Indeed, for any element g of a topological group G, the multiplication 
x ^ xg is a homeomorphism of G with inverse x ^ xg-, and it is thus in particular 
an open map. Therefore, for any U, V c G with U open, U • V = |JgeV Ug is open.

8.4 Open Multiplication
327
However, the product of group languages is not necessarily a group language. 
Indeed, let L := (a2)*a. Then L is recognized by the finite group Z2, but it is not 
difficult to see that LL = (a2)+ can not be recognized by a finite group (see Exercise 
8.4.1). We refer the reader to Ribes and Zalesskii (2010) for an extensive survey of 
the theory of profinite groups.
We do have the following sufficient condition for an algebra of regular languages 
to be closed under concatenation product, in the situation of Corollary 8.69.
Proposition 8.72 Let f: A * X be a profinite monoid quotient, B be the Boolean 
subalgebra of Reg A dual to X, () the Stone embedding of B in P (X), and assume 
that the multiplication on X is an open mapping. Then, for L, K e B, the element 
M e B corresponding to the clopen L • K is the least N e B for which LK C N 
holds in P(A*). Ifin addition {u} is in Bfor every u e A*, then B is closed under 
concatenation product in P(A*).
Proof Since the multiplication is open in X, for every L, K e B, there is an M e B 
with L • K = M. We first show that, even if LK £ B, this entails that M is the least
element of B above LK in P(A*). Let N e B. Then, we have
LK c N <> L c N/K 
<> L C N/K = N/ K
<> Mi = L • K C N
<> M C N.
Finally, suppose that {u} e B for every u e A*, then also {u}c e B, and thus u LK 
implies LK C {u}c, which implies M C {u}c, and thus u £ M. By contraposition, 
we have M C LK and thus LK = M. 
□
Openness of the multiplication has been studied in language theory, but it also 
appears in categorical first-order logic. Classical research in categorical first-order 
logic is concerned with extending Stone duality to a setting where the Boolean 
algebras, such as Makkai (1987), are equipped with quantifiers, a topic that is 
also still under development today, see, for example, Lurie (2019) or van Gool 
and Marques (2024). A fundamental structure in that field is that of a Boolean 
hyperdoctrine, which is a functor P valued in Boolean algebras which is required 
to satisfy two algebraic conditions on the morphisms, called the Beck-Chevalley 
and Frobenius conditions, both of which have a natural meaning through duality 
theory.
In one recent result in this direction (Marques, 2021), openness is combined 
with equidivisibility, a notion which has been considered in language theory 
(Almeida and Costa, 2009). A semigroup S is called equidivisible if, for all el­
ements u1, u2, v1, v2 e S such that u1u2 = v1v2, there exists an element k e S such 

328
8 Automata Theory
that either u1 k = v1 and u2 = kv2, or v1 k = u1 and v2 = ku2. Relative to duality 
theory, this condition on the binary operation • to be equidivisible is precisely the 
“back” condition of bounded morphism (Definition 4.54). In Marques (2021, The­
orem 4.3), it is shown that a profinite semigroup S is dual to a first-order theory 
enriching the theory of bounded linear orders if, and only if, the multiplication on S 
is open and equidivisible. To obtain this result, it is shown that, under Stone duality, 
the openness of the multiplication is dual to the Beck-Chevalley condition, and 
the equidivisibility corresponds to the Frobenius condition. This theorem thus es­
tablishes yet another connection between language theory and topological algebra, 
mediated by extended Stone duality.
Exercises for Section 8.4
Exercise 8.4.1 Let A = {a} and L c A * the language of words of odd length.
(a) 
Show that the syntactic monoid of L is the two-element group Z2, so that L is
a group language.
(b) 
Show that the syntactic monoid of L • L, the language of words of non-zero 
even length, is the three-element monoid (Z2)I, that is, the monoid obtained 
from Z2 by adjoining a new neutral element.
(c) 
Deduce that L • L can not be recognized by a finite group.
Notes for Chapter 8
The fact that the Stone dual of the Boolean algebra of regular languages over an 
alphabet is dual to the topological space underlying the free profinite monoid is 
well known but played a small role historically in the area. An early exception is the 
Pippenger (1997) article, see also Almeida (1995), and more recently Rhodes and 
Steinberg (2008), where the connection between profinite semigroups and Boolean 
rings with co-algebraic structure is exploited, and Gehrke et al. (2008, 2010), where 
the connection with modern topological duality as it is applied in logic was first 
developed. The point of these two last approaches is that it is not only the underlying 
space that can be studied via duality but the entire profinite semigroup or monoid 
structure. The duality-theoretic underpinnings of the work in Gehrke et al. (2008, 
2010) were worked out in Gehrke (2016). For other key publications see Pin (2009, 
2017), Branco and Pin (2009), and Gehrke et al. (2016).
Starting with the definitions on page 280 and throughout this chapter, we funda­
mentally view the dual of an additional n-ary operation on a lattice or a Boolean 
algebra as an n + 1-ary relation on the dual space. Such a relation may also be 
seen as so-called co-algebraic structure. Co-algebraic structure is, by definition, 

8.4 Open Multiplication
329
categorically dual to algebraic structure. For this reason, if we start, instead, from 
algebraic structure on the spatial side, then we get co-algebraic structure on the 
dual lattices or Boolean algebras. This formal duality point of view, for monoids, 
is exploited in Rhodes and Steinberg (2008, Section 8.4). What we show in Sec­
tion 8.1 is that, if we restrict ourselves to surjective morphisms, then, in the set­
ting of discrete duality, monoid structure on a set is dual to residuation structure 
on the dual Boolean algebras. This provides a kind of duality between algebras 
and algebras, rather than a duality between algebras and co-algebras, which is 
much more common. This duality between algebras and algebras can be lifted to 
non-surjective morphisms and to general Stone and Priestley duality as well, see 
Gehrke (2016).
The definition of syntactic congruence (Definition 8.21) is classical in the theory 
of regular languages and can be traced back to the works Schutzenberger (1955), 
Myhill (1957), and Nerode (1958). In Section 8.3, we encountered the notion of 
syntactic preorder, which generalizes syntactic congruences to an ordered setting, 
see Remark 8.46. This notion is already present in the work of Schutzenberger 
(1955) and was pioneered by Pin (1995), long before the connection with Priestley 
duality was realized.
We are grateful to Jean-Eric Pin and Howard Straubing for many enlightening 
discussions on the proof of Simon’s theorem discussed in Section 8.3. This proof 
will be the topic of a forthcoming joint paper of this book’s authors with Jeremie 
Marques, who made significant contributions to the proof in this section, in partic­
ular Lemmas 8.64 and 8.65. Similar ideas, although not formulated using profinite 
methods, are present in Stern’s proof of Simon’s theorem (Stern, 1985). Many 
proofs of Simon’s theorem have been published since the original, see in particular 
also Almeida (1991), Higgins (1997), Henckell and Pin (2000), and Khma (2011).

Bibliography
Abramsky, S. 1987. Domain theory in logical form. In Proceedings of the Second Annual 
IEEE Symposium on Logic in Computer Science (LICS 1987). IEEE Computer Society 
Press, pp. 47-53.
Abramsky, S. 1988. A cook’s Tour of the Finitary Non-well-founded Sets. Invited Lecture 
at BCTCS.
Abramsky, S. 1990. The Lazy Lambda Calculus. Addison-Wesley Longman, pp. 65-116.
Abramsky, S. 1991. Domain theory in logical form. Ann. Pur. Appl. Logic, 51(1), 1-77.
Abramsky, S. and Jung, A. 1994. Domain Theory. Vol. 3. Oxford University Press, pp. 
1-168.
Abramsky, S. and Ong, C. H. L. 1993. Full abstraction in the lazy lambda calculus. Inf. 
Comput., 105(2), 159-267.
Adamek, J., Herrlich, H., and Strecker, G. E. 1990. Abstract and Concrete Categories: The 
Joy of Cats. John Wiley and Sons.
Adamek, J. and Rosicky, J. 1994. Locally Presentable and Accessible Categories. LMS 
Lecture Note Series, vol. 189. Cambridge University Press.
Almeida, J. 1991. Implicit operations on finite J -trivial semigroups and a conjecture of I. 
Simon. J. Pure. Appl. Algebra, 69(3), 205-218.
Almeida, J. 1995. Finite Semigroups and Universal Algebra. World Scientific.
Almeida, J. 2005. Profinite semigroups and applications. In Kudryavtsev, V. B., Rosenberg, 
I. G., and Goldstein, M. (eds.), Structural Theory of Automata, Semigroups, and 
Universal Algebra. Springer, pp. 1-45.
Almeida, J. and Costa, A. 2009. Infinite-vertex free profinite semigroupoids and symbolic 
dynamics. J. Pure Appl. Algebra, 213, 605-631.
Almeida, J. and Weil, P. 1998. Profinite categories and semidirect products. J. Pure Appl. 
Algebra, 123(1-3), 1-50.
Almeida, J., Costa, A., Kyriakoglou, R., and Perrin, D. 2020. Profinite Semigroups and 
Symbolic Dynamics. Lecture Notes in Mathematics, vol. 2274. Springer International.
Almeida, J., Goulet-Ouellet, H., and Klima, O. 2023. What makes a Stone topological 
algebra profinite. Algebr. Univ., 84(6).
Amadio, R. M. and Curien, P.-L. 1998. Domains and Lambda-Calculi. Cambridge Tracts 
in Theoretical Computer Science. Cambridge University Press.
Awodey, S. 2010. Category Theory. 2nd ed. Oxford University Press.

Bibliography
331
Balbes, R. and Dwinger, P. 1975. Distributive Lattices. University of Missouri Press. 
(Reprinted by Abstract Space Publishing in 2011).
Banaschewski, B. 1996. Radical ideals and coherent frames. Comment. Math. Univ. 
Carolin., 37(2), 349-370.
Barendregt, H. 2014. The Lambda Calculus: Its Syntax and Semantics. Studies in Logic 
and the Foundations of Mathematics, 2nd ed., vol. 103. North Holland.
Barendregt, H. and Manzonetto, G. 2022. A Lambda Calculus Satellite. College Publica­
tions.
Bekkali, M., Pouzet, M., and Zhani, D. 2007. Incidence structures and Stone-Priestley 
duality. Ann. Math. Artif. Intel., 49, 27-38.
Bezhanishvili, G. 1998. Varieties of monadic Heyting algebras. Part I. Stud. Logica, 61, 
367-402.
Bezhanishvili, G. 1999. Varieties of monadic Heyting algebras. Part II. Duality theory. 
Stud. Logica, 62(1), 21-48.
Bezhanishvili, G. 2000. Varieties of monadic Heyting algebras. Part III. Stud. Logica, 
64(2), 215-256.
Bezhanishvili, G., Bezhanishvili, N., Gabelaia, D., and Kurz, A. 2010. Bitopological 
duality for distributive lattices and Heyting algebras. Math. Struct. Comp. Sci., 20(3), 
359-393.
Bezhanishvili, G., Carai, L., and Morandi, P. J. 2022. The Vietoris functor and 
modal operators on rings of continuous functions. Ann. Pur. Appl. Logic, 173(1), 
103029.
Bezhanishvili, N. and Gehrke, M. 2011. Finitely generated free Heyting algebras via 
Birkhoff duality and coalgebra. Log. Meth. Comput. Sci., 7(2), 1-24.
Bezhanishvili, N. and Kurz, A. 2007. Free modal algebras: A coalgebraic perspective. In 
Mossakowski, T., Montanari, U., and Haveraaen, M. (eds.), CALCO 2007. Lecture 
Notes in Computer Science, vol. 4624. Springer, pp. 143-157.
Birkhoff, G. 1933. On the combination of subalgebras. Math. Proc. Cambridge, 29, 
441-464.
Birkhoff, G. 1967. Lattice Theory. 3rd ed. American Mathematical Society.
Blackburn, P., de Rijke, M., and Venema, Y. 2001. Modal Logic. Cambridge Tracts in 
Theoretical Computer Science, vol. 53. Cambridge University Press.
Boole, G. 1847. An Investigation of the Laws of Thought. Walton. Reprinted by Philisophical 
Library, New York, 1954.
Borceux, F. 1994. Handbook of Categorical Algebra 1: Basic Category Theory. Cambridge 
University Press.
Borceux, F. and Clementino, M. M. 2005. Topological semi-abelian algebras. Adv. Math., 
190(2), 425-453.
Borlido, C., Gehrke, M., Krebs, A., and Straubing, H. 2020. Difference hierarchies and 
duality with an application to formal languages. Topol. Appl., 273, 106975.
Branco, M. J. J. and Pin, J.-E. 2009. Equations defining the polynomial closure of a lattice 
of regular languages. In Aceto, L., et al. (eds.), ICALP 2009, Part II. Lecture Notes 
in Computer Science, vol. 5556. Springer, pp. 115-126.
Burris, S. and Sankappanavar, H. P. 2000. A Course in Universal Algebra: The Millennium 
Edition. www.math.uwaterloo.ca/snburris/htdocs/ualg.html
Caramello, O. 2011. A Topos-Theoretic Approach to Stone-Type Dualities. 
arXiv:1103.3493.
Caramello, O. 2017. Theories, Sites, Toposes. Oxford University Press.

332
Bibliography
Celani, S., and Jansana, R. 1999. Priestley duality, a Sahlqvist theorem and a Goldblatt- 
Thomason theorem for positive modal logic. Log. J. IGPL, 7(6), 683-715.
Celani, S. and Jansana, R. 2005. Bounded distributive lattices with strict implication. Math. 
Logic. Quart., 51(3), 219-246.
Chagrov, A. and Zakharyaschev, M. 1997. Modal Logic. Oxford Logic Guides, vol. 35. 
Clarendon Press.
Chikhladze, D., Clementino, M. M., and Hofmann, D. 2015. Representable (T, V)- 
categories. Appl. Categor. Struct., 23(6), 829-858.
Cignoli, R. L. O., D’Ottaviano, I. M. L., and Mundici, D. 2000. Algebraic Foundations of 
Many-Valued Reasoning. Trends in Logic - Studia Logica Library, vol. 7. Kluwer 
Academic Publishers.
Clark, D. M. and Davey, B. A. 1998. Natural Dualities for the Working Algebraist. Cam­
bridge Studies in Advanced Mathematics. Cambridge University Press.
Conradie, W., Ghilardi, S., and Palmigiano, A. 2014. Unified Correspondence. Outstanding 
Contributions to Logic. Springer International, pp. 933-975.
Conradie, W. and Palmigiano, A. 2020. Constructive canonicity of inductive inequalities. 
Log. Meth. Comput. Sci., 16(3), 8:1-8:39. https://lmcs.episciences.org/6694/pdf
Cornish, W. H. 1975. On H. Priestley’s dual of the category of bounded distributive lattices. 
Matematicki Vesnik, 12(27)(60), 329-332.
Coumans, D. C. S. and Gool, S. J. van. 2012. On generalizing free algebras for a functor. 
J. Logic. Comput., 23(3), 645-672.
Davey, B. A. and Priestley, H. A. 2002. Introduction to Lattices and Order. 2nd ed. 
Cambridge University Press.
Dickmann, M., Schwartz, N., and Tressl, M. 2019. Spectral Spaces. New Mathematical 
Monographs. Cambridge University Press.
Dimov, G., Ivanova-Dimova, E., and Tholen, W. 2022. Categorical extension of dualities: 
From Stone to de Vries and beyond. Appl. Categ. Struct., 30, 287-329.
Dunn, J. M. and Hardegree, G. 2001. Algebraic Methods in Philosophical Logic. Oxford 
University Press.
Dzamonja, M. 2008. Representation theorems for connected compact Hausdorff spaces. 
Sarajevo J. Math., 4(16), 7-21.
Eilenberg, S. 1974. Automata, Languages, and Machines. Vol. A. Academic Press. Pure 
and Applied Mathematics, Vol. 59A.
Eilenberg, S. 1976. Automata, Languages, and Machines. Vol. B. Academic Press. Pure 
and Applied Mathematics, Vol. 59B.
Engelking, R. 1989. General Topology. Sigma Series in Pure Mathematics, vol. 6. Helder- 
menn Verlag.
Erne, M. 2009. Quasicoherent domains and hyperspectral spaces: A missing link in Stone- 
Priestley duality. Abstract of a talk given at Topology, Algebra, and Categories in 
Logic (TACL).
Esakia, L. 1974. Topological Kripke models. Dokl. Akad. Nauk SSSR, 15(1), 147-151.
Esakia, L. 2019. Heyting Algebras: Duality Theory. Trends in Logic, vol. 50. Springer.
Translation of the Russian 1985 original.
Fleisher, I. 2000. Priestley’s duality from Stone’s. Adv. Appl. Math., 25(3), 233-238.
Forssell, H. 2008. First-Order Logical Duality. PhD thesis, Carnegie Mellon University.
Fussner, W. and Palmigiano, A. 2019. Residuation algebras with functional duals. Algebr. 
Univ., 80(4), 1-10.

Bibliography
333
Galatos, N., Jipsen, P., Kowalski, T., and Ono, H. 2007. Residuated Lattices: An Alge­
braic Glimpse at Substructural Logics. Studies in Logic and the Foundations of 
Mathematics. Elsevier Science.
Gastin, P., Manuel, A., and Govind, R. 2021. Reversible regular languages: Logical and 
algebraic characterisations. Fund. Inform., 180(4), 333-350.
Gehrke, M. 2014. Canonical extensions, Esakia spaces, and universal models. In Bezhan- 
ishvili, G. (ed.), Leo Esakia on Duality in Modal and Intuitionistic Logics. Springer, 
pp. 9-41.
Gehrke, M. 2016. Stone duality, topological algebra, and recognition. J. Pure Appl. Algebra, 
220(7), 2711-2747.
Gehrke, M. 2018. Canonical extensions: An algebraic approach to Stone duality. Algebr. 
Univ., 79(3).
Gehrke, M. and Gool, S. J. van. 2014. Distributive envelopes and topological duality for 
lattices via canonical extensions. Order, 31(3), 435-461.
Gehrke, M., Grigorieff, S., and Pin, J.-E. 2008. Duality and equational theory of regular 
languages. In Aceto, L. et al. (eds.), ICALP 2008, Part II. Lecture Notes in Computer 
Science, vol. 5126. Springer, pp. 246-257.
Gehrke, M., Grigorieff, S., and Pin, J.-E. 2010. A topological approach to recognition. In 
Abramsky, S. et al. (eds.), Automata, Languages and Programming (ICALP 2010). 
Lecture Notes in Computer Science, vol. 6199, no. 2. Springer, pp. 151-162.
Gehrke, M. and Jonsson, B. 1994. Bounded distributive lattices with operators. Math. 
Japon., 40(2), 207-215.
Gehrke, M. and Jonsson, B. 2004. Bounded distributive lattice expansions. Math. Scand., 
94, 13-45.
Gehrke, M., Krebs, A., and Pin, J.-E. 2016. Ultrafilters on words for a fragment of logic. 
Theor. Comput. Sci., 610( Part A), 37-58.
Gehrke, M., Nagahashi, H., and Venema, Y. 2005. A Sahlqvist theorem for distributive 
modal logic. Ann. Pur. Appl. Logic, 131(1-3), 65-102.
Gehrke, M. and Priestley, H. A. 2006. Duality for distributive quasioperator algebras via 
their canonical extensions. Stud. Logica, 86(1), 31-68.
Gehrke, M. and Priestley, H. A. 2007. Canonical extensions of double quasioperator alge­
bras: An algebraic perspective on duality for certain algebras with binary operations. 
J. Pure Appl. Algebra, 209(1), 269-290.
Gehrke, M., Jakl, T., and Reggio, L. 2023. A cook’s tour of duality in logic: From quantifiers, 
through Vietoris, to Measures. In Palmigiano, A. and Sadrzadeh, M. (eds.), Samson 
Abramsky on Logic and Structure in Computer Science and Beyond. Springer, pp. 
129-158.
Ghilardi, S. 1992. Free Heyting algebras as bi-Heyting algebras. C. R. Math. Rep. Acad. 
Sci. Canada, 14(6), 240-244.
Ghilardi, S. 1995. An algebraic theory of normal forms. Ann. Pur. Appl. Logic, 71, 189-245.
Ghilardi, S. 2010. Continuity, freeness, and filtrations. J. Appl. Non-Class. Log., 20(3), 
193-217.
Gierz, G., Hofmann, K. H., Keimel, K., et al. 1980. A Compendium of Continuous Lattices. 
Springer-Verlag.
Gierz, G., Hofmann, K. H., Keimel, K., et al. 2003. Continuous Lattices and Domains. 
Encyclopedia of Mathematics and its Applications. Cambridge University Press.
Givant, S. 2014. Duality Theories for Boolean Algebras with Operators. Springer.
Givant, S. and Halmos, P. 2008. Introduction to Boolean Algebras. Undergraduate Texts 
in Mathematics. Springer-Verlag.

334
Bibliography
Goldblatt, R. 1989. Varieties of complex algebras. Ann. Pur. Appl. Logic, 44, 173-242.
Goldblatt, R., Hodkinson, I., and Venema, Y. 2003. On canonical modal logics that are not 
elementarily determined. Log. Anal., 181, 77-101.
Gool, S. J. van. 2014. On Sheaves and Duality. PhD thesis, Raboud University Nijmegen.
Gool, S. J. van, and Marqufes, J. 2024. On duality and model theory for polyadic spaces. 
Ann. Pur. Appl. Logic, 175 (2), 103388.
Goubault-Larrecq, J. 2013. Non-Hausdorff Topology and Domain Theory. Cambridge 
University Press.
Goubault-Larrecq, J. 2019. A probabilistic and non-deterministic call-by-push-value lan­
guage. In 34th Annual ACM/IEEE Symposium on Logic in Computer Science (LICS), 
IEEE, pp. 1-13.
Gratzer, G. 2003. General Lattice Theory. 2nd ed. Birkhauser.
Gratzer, G. 2008. Universal Algebra. 2nd ed. Springer.
Gratzer, G. 2011. Lattice Theory: Foundation. Birkhauser.
Gunter, C. 1985. Profinite Solutions for Recursive Domain Equations. PhD thesis, Univer­
sity of Wisconsin.
Hart, K. P. and van Mill, J. 2022. Problems on £N. arXiv:2205.11204.
Hausdorff, F. 1914. Grundzuge der Mengenlehre. Veit & Comp. Reprinted by Chelsea 
Publishing Company in 1949.
Haviar, M. 2019. On selected developments in the theory of natural dualities. Acta Univ. 
M. Belii Ser. Math., 27, 59-78.
Henckell, K. and Pin, J.-E. 2000. Ordered monoids and J -trivial monoids. In Birget, J-C., 
Margolis, S., Meakin, J., and Sapir, M. (eds.), Algorithmic Problems in Groups and 
Semigroups (Lincoln, NE, 1998). Trends Math. Birkhauser, pp. 121-137.
Higgins, P. M. 1997. A proof of Simon’s theorem on piecewise testable languages. Theor. 
Comput. Sci., 178(1-2), 257-264.
Higman, G. 1952. Ordering by divisibility in abstract algebras. Proc. London Math. Soc., 
3(1), 326-336.
Ho, W. K., Goubault-Larrecq, J., Jung, A., and Xi, X. 2018. The Ho-Zhao problem. Log. 
Meth. Comput. Sci., 14(1).
Hodkinson, I. and Venema, Y. 2005. Canonical varieties with no canonical axiomatisation. 
T. Am. Math. Soc., 357, 4579-4605.
Hoffmann, R.-E. 1981. Continuous posets, prime spectra of completely distributive com­
plete lattices, and Hausdorff compactification. In Banaschewski, B. and Hoffmann, 
R.-E. (eds.), Continuous Lattices, Proceedings Bremen 1979. Lecture Notes in Math­
ematics, vol. 871. Springer Verlag, pp. 159-208.
Hofmann, K. H. and Lawson, J. D. 1978. The spectral theory of distributive continuous 
lattices. T. Am. Math. Soc., 246, 285-310.
Hofmann, K. H., Mislove, M., and Stralka, A. 1974. The Pontryagin Duality of Compact 
0-Dimensional Semilattices and its Applications. Springer.
Hofmann, D. and Nora, P. 2015. Dualities for modal algebras from the point of view of 
triples. Algebr. Univ., 73, 297-320.
Hofmann, D. and Nora, P. 2018. Enriched Stone-type dualities. Adv. Math., 330, 
307-360.
Hofmann, D. and Nora, P. 2023. Duality theory for enriched Priestley spaces. J. Pure Appl. 
Algebra, 227(3), 107231.
Hofmann, D., Seal, G. J., and Tholen, W. 2014. Monoidal Topology: A Categorical 
Approach to Order, Metric, and Topology. Cambridge University Press.

Bibliography 
335
Hofmann, D. and Stubbe, I. 2011. Towards Stone duality for topological theories. Topol. 
Appl., 158(7), 913-925.
Howard, P. and Rubin, J. E. 1998. Consequences of the Axiom of Choice. American 
Mathematical Society.
Jech, T. J. 1973. The Axiom of Choice. North Holland.
Jia, X., Jung, A., and Q., Li. 2016. A note on coherence of dcpos. Topology and its 
Applications, 209, 235-238.
Jipsen, P. 2009. Generalizations of Boolean products for lattice-ordered algebras. Ann. Pur.
Appl., 161, 228-234.
Johnstone, P. T. 1981. Scott is not always sober. In Banaschewski, B. and Hoffmann, R.-E. 
(eds.), Continuous Lattices. Lecture Notes in Mathematics, vol. 871. Springer, pp. 
282-283.
Johnstone, P. T. 1986. Stone Spaces. Cambridge University Press. Reprint of the 
1982 ed.
Jonsson, B. and Tarski, A. 1951. Boolean algebras with operators. I. Am. J. Math., 73(4), 
891-939.
Jonsson, B. and Tarski, A. 1952. Boolean algebras with operators. II. Am. J. Math., 74(1), 
127-162.
Jung, A. 1989. Cartesian Closed Categories of Domains. Tech. Rept. Amsterdam.
Jung, A. 1990. The classification of continuous domains. In Proceedings. Fifth Annual 
IEEE Symposium on Logic in Computer Science. IEEE Computer Society Press, pp. 
35-40.
Jung, A. 2004. Stably compact spaces and the probabilistic powerspace construction. 
Electron. Notes Theor. Comput. Sci., 87, 15.
Jung, A. and Moshier, M. A. 2006. On the Bitopological Nature of Stone Duality. Tech. 
Rept. CSR-06-13. University of Birmingham.
Jung, A. and Sunderhauf, P. 1996. On the duality of compact vs. open. In Andima, S., 
Flagg, R.C., Itzkowitz, G., et al. (eds.), Papers on General Topology and Applications: 
Eleventh Summer Conference at the University of Southern Maine. vol. 806. New York 
Academy of Sciences, pp. 214-230.
Jung, A. and Tix, R. 1998. The troublesome probabilistic powerdomain. Electron. Notes 
Theor. Comput. Sci., 13, 70-91.
Kleene, S. C. 1956. Representation of events in nerve nets and finite automata. In Shannon, 
C. E. and McCarthy, J. (eds.), Automata Studies. Annals of Mathematics Studies, vol. 
34. Princeton University Press, pp. 3-41.
Klima, O. 2011. Piecewise testable languages via combinatorics on words. Discrete Math., 
311(20), 2124-2127.
Koppelberg, S., Monk, J. D., and Bonnet, R. 1989. Handbook of Boolean Algebras. Vol. 
1. North-Holland.
Kupke, C., Kurz, A., and Venema, Y. 2004. Stone coalgebras. Theor. Comput. Sci., 
327(1-2), 109-134.
Lambek, J. and Scott, P. J. 1986. Introduction to Higher Order Categorical Logic. Cam­
bridge University Press.
Larsen, K. G. and Winskel, G. 1991. Using information systems to solve recursive domain 
equations. Inform. Comput., 91(2), 232-258.
Lawson, J. D. 1979. The duality of continuous posets. Houston J. Math., 5, 357-394.
Lawson, J. D. 2011. Stably compact spaces. Math. Struct. Comp. Sci., 21, 125-169.

336
Bibliography
Leinster, T. 2014. Basic Category Theory. Cambridge University Press.
Lurie, J. 2019. Ultracategories. Preprint. https://people.math.harvard.edu/~lurie/papers/ 
Conceptual.pdf
Mac Lane, S. 1971. Categories for the Working Mathematician. Graduate Texts in Mathe­
matics, vol. 5. Springer-Verlag.
Mac Lane, S. and Moerdijk, I. 1992. Sheaves in Geometry and Logic: A First Introduction 
to Topos Theory. Springer.
MacNeille, H. M. 1937. Partially ordered sets. Trans. Amer. Math. Soc., 42, 416-460.
Makkai, M. 1987. Stone duality for first-order logic. Adv. Math., 65, 97-170.
Makkai, M. 1993. Duality and definability in first order logic. Mem. Amer. Math. Soc., 
105(503), 97-170.
Makkai, M., and Reyes, G. 1977. First Order Categorical Logic. Lecture Notes in Mathe­
matics, no. 611. Springer.
Manzonetto, G. and Salibra, A. 2008. Applying universal algebra to lambda calculus. J. 
Logic Comput., 20(4), 877-915.
Marqufes, J. 2021. Polyadic spaces and profinite monoids. In Fahrenberg, U., Gehrke, M., 
Santocanale, L., and Winter, M. (eds.), Relational and Algebraic Methods in Computer 
Science: 19th International Conference, RAMiCS 2021, Marseille, France, November 
2-5, 2021, Proceedings. Springer International Publishing, pp. 292-308.
Marquis, J.-P. and Reyes, G. 2011. The history of categorical logic: 1963-1977. In Gabbay, 
D., Kanamori, A., and Woods, J. (eds.), Handbook of the History of Logic. Elsevier, 
pp. 1-116.
McKinsey, J. C. C. and Tarski, A. 1948. Some theorems about the sentential calculi of 
Lewis and Heyting. J. Symbolic Logic, 13(1), 1-15.
Moshier, M. A. and Jipsen, P. 2014a. Topological duality and lattice expansions, I: A 
topological construction of canonical extensions. Algebr. Univ., 71, 109-126.
Moshier, M. A. and Jipsen, P. 2014b. Topological duality and lattice expansions, II: Lattice 
expansions with quasioperators. Algebr. Univ., 71, 221-234.
Mundici, D. 2011. Advanced Lukasiewicz Calculus and MV-Algebras. Trends in Logic - 
Studia Logica Library. Vol. 35. Springer.
Murthy, C. R and Russell, J. R. 1990. A constructive proof of Higman’s lemma. In 
Proceedings of the Fifth Annual IEEE Symposium on Logic in Computer Science. 
IEEE, pp. 257-267.
Myhill, J. 1957. Finite Automata and the Representation of Events. Tech. Rept. WADD.
Nachbin, L. 1947. Une propriete caracteristique des algfebres booleiennes. Port. Math., 6, 
115-118.
Nachbin, L. 1964. Topology and Order. van Nostrand.
Nerode, A. 1958. Linear automaton transformations. P. Am. Math. Soc., 9(4), 541-544.
Nerode, A. 1959. Some Stone spaces and recursion theory. Duke Math. J., 26, 397-406.
Palmigiano, A. 2004. A coalgebraic view on positive modal logic. Theor. Comput. Sci., 
327(1), 175-195.
Picado, J. 1994. Join-continuous frames, Priestley’s duality and biframes. Appl. Categor. 
Struct., 2, 297-313.
Picado, J. and Pultr, A. 2012. Frames and Locales. Birkhauser.
Pin, J.-E. 1995. A variety theorem without complementation. Izv. Math. (Izvestija vuzov. 
Matematika), 39, 80-90.
Pin, J.-E. 2009. Profinite methods in automata theory. In Albers, S. and Marion, J.-Y. (eds.), 
26th International Symposium on Theoretical Aspects of Computer Science (STACS 
2009), vol. 5556, Schloss Dagstuhl, pp. 31-50.
Pin, J.-E. 2011. Theme and variations on the concatenation product. In Winkler, F. (ed.), 
CAI. Springer, pp. 44-64.

Bibliography
337
Pin, J.-E. 2017. Dual space of a lattice as the completion of a Pervin space. In Hofner, P., 
Pous, D., and Struth, G. (eds.), RAMICS. Lecture Notes in Computer Science, vol. 
10226. Springer, pp. 151-162.
Pin, J.-E. (ed.). 2021a. Handbook of Automata Theory. Volume I. Theoretical Foundations. 
European Mathematical Society (EMS).
Pin, J.-E. (ed.). 2021b. Handbook of Auomata Theory. Volume II. Automata in Mathematics 
and Selected Applications. European Mathematical Society (EMS).
Pin, J.-E. 2022. Mathematical Foundations of Automata Theory. Lecture notes.
https://www.irif.fr/~jep/PDF/MPRI/MPRI.pdf
Pippenger, N. 1997. Regular languages and Stone duality. Theor. Comput. Syst., 30(2), 
121-134.
Plotkin, G. D. 1976. A powerdomain construction. SIAM J. Comput., 5(3), 452-487.
Pouzet, M. 2018. A topological interpretation of de Jongh-Parikh theorem. https://www2 
.cms.math.ca/Events/winter18/abs/pdf/sdr-mp.pdf
Priestley, H. A. 1970. Representation of distributive lattices by means of ordered Stone 
spaces. Bull. London Math. Soc., 2, 186-190.
Raney, G. N. 1953. A subdirect-union representation for completely distributive complete 
lattices. P. Am. Math. Soc., 4(4), 518-522.
Reiterman, J. 1982. The Birkhoff theorem for finite algebras. Algebr. Univ., 14(1), 1-10.
Rhodes, J., Schilling, A., and Silva, P. V. 2022. Holonomy theorem for finite semigroups. 
Int. J. Algebr. Comput., 32(03), 443-460.
Rhodes, J. and Steinberg, B. 2008. The Q-Theory of Finite Semigroups. Springer.
Ribes, L. and Zalesskii, P. 2010. Profinite Groups. Springer.
Sakarovitch, J. 2009. Elements of Automata Theory. Cambridge University Press.
Santocanale, L. 2020. The involutive quantaloid of completely distributive lattices. In Re­
lational and Algebraic Methods in Computer Science: 18th International Conference, 
RAMiCS, Palaiseau, France, October 26-29. Proceedings. Springer, pp. 286-301.
Santocanale, L., and Wehrung, F. 2014. Lattices of regular closed subsets of closure spaces. 
Int. J. Algebr. Comput., 24(07), 969-1030.
Schmid, J. 2002. Quasiorders and sublattices of distributive lattices. Order, 19(1), 11-34.
Schutzenberger, M. P. 1955. Une theorie algebrique du codage. Seminaire Dubreil. Algebre 
et Theorie des Nombres, 9, 1-24.
Schutzenberger, M. P. 1965. On finite monoids having only trivial subgroups. Inform. 
Cont., 8(2), 190-194.
Scott, D. S. 1972. Continuous Lattices. In Lawvere, F. W. (ed.), Toposes, Algebraic 
Geometry, and Logic. Lecture Notes in Computer Science, vol. 274. Springer, pp. 
97-136.
Scott, D. S. 1980. Relating theories of the lambda calculus. In Hindley, J. R. and Seldin, 
J. P. (eds.), To H. B. Curry: Essays in Combinatory Logic, Lambda Calculus and 
Formalism. Academic Press, pp. 403-450.
Scott, D. S. and Strachey, C. 1971. Towards a mathematical semantics for computer lan­
guages. In Fox, J. (ed.), Proceedings of the Symposium on Computers and Automata. 
Microwave Research Institute Symposia Series. Polytechnic Institute of Brooklyn 
Press. Also Tech. Mon. PRG-6, Oxford University Computing Laboratory, pp. 19-46.
Simon, I. 1975. Piecewise testable events. In Brackage, H. (ed.), Proc. 2nd GI Conf. 
Lecture Notes in Comp. Sci., vol. 33. Springer Verlag, pp. 214-222.

338 
Bibliography
Smyth, M. B. 1983a. The largest Cartesian closed category of domains. Theor. Comput. 
Sci., 27, 109-119.
Smyth, M. B. 1983b. Power domains and predicate transformers: A topological view. In 
Diaz, Josep (ed.), Automata, Languages and Programming. Springer, pp. 662-675.
Smyth, M. B. 1992. Stable compactification I. J. London Math. Soc., 45, 321-340.
Smyth, M. B. and Plotkin, G. D. 1982. The C-category-theoretic solution of recursive 
domain equations. SIAM Journal on Computing, 11(4), 761-783.
Steinberg, B. 2013. Topological dynamics and recognition of languages. arXiv:1306.1468.
Stern, J. 1985. Characterizations of some classes of regular events. Theor. Comput. Sci., 
35(1), 17-42.
Stone, M. H. 1934. Boolean algebras and their application to topology. Proc. Natl. Acad. 
Sci. USA, 20(3), 197-202.
Stone, M. H. 1935. Subsumption of the theory of Boolean algebras under the theory of 
rings. Proc. Natl. Acad. Sci. USA, 21(2), 103-105.
Stone, M. H. 1936. The theory of representation for Boolean algebras. T. Am. Math. Soc., 
40(1), 37-111.
Stone, M. H. 1937a. Applications of the theory of Boolean rings to general topology. T. 
Am. Math. Soc., 41, 375-481.
Stone, M. H. 1937b. Topological representations of distributive lattices and Brouwerian 
logics. Cas. Mat. Fys., 67, 1-25.
Stone, M. H. 1938. The representation of Boolean algebras. B. Am. Math. Soc., 44(12), 
807-816.
Stralka, A. 1980. A partially ordered space which is not a Priestley space. Semigroup 
Forum, 20, 293-297.
Straubing, H., and Therien, D. 1988. Partially ordered finite monoids and a theorem of I.
Simon. J. Algebra, 119(2), 393-399.
Venema, Y. 2007. Algebras and coalgebras. In Studies in Logic and Practical Reasoning, 
vol. 3. Elsevier, pp. 331-426.
Vickers, S. 1989. Topology via Logic. Cambridge University Press.
Wechler, W. 1992. Universal Algebra for Computer Scientists. EATCS Monographs on 
Theoretical Computer Science, vol. 25. Springer-Verlag.
Wehrung, F. 2008. Poset representations of distributive semilattices. Int. J. Algebr. Comput., 
18(2), 321-356.
Weil, P. 2002. Profinite methods in semigroup theory. Int. J. Algebr. Comput., 12, 137-178.
Zhang, G.-Q. 1989. Logics of domains. Tech. Rept. UCAM-CL-TR-185. University of 
Cambridge, Computer Laboratory.
Zhang, G.-Q. 1991. Logic of Domains. Progress in Theoretical Computer Science. 
Birkhauser.

Notation
p -< q 
Pop
n
2
g ◦ f
f[S]
q covers p, q is an immediate successor of p,2
the opposite of a poset P,3
the n-element, 3
the two-element, 3
composition of the functions f and g, g after f ,3 
forward image under a function f of a subset s of 
the domain, 10
ker f
—f
kernel of a homomorphism f,11
unique extension of a function f given by a uni­
versal property determined by the context, 14
L-
a+b
Boolean envelope of a distributive lattice L,15 
symmetric difference of two Boolean algebra ele­
ments a and b, 17
D(P) 
U(P)
J s
the complete lattice of down-sets of a poset P,18 
the complete lattice of up-sets of a poset P,18 
the down-set generated by a subset s of a poset 
P,19
T S
Tp
the up-set generated by a subset s of a poset P,19 
the principal up-set generated by an element p of 
a poset P,19
Jp
the principal down-set generated by an element p 
of a poset P,19
Uc
J(L)
the complement of a subset U,19
the poset of (finitely) join-irreducible elements of 
a lattice L , 19
M(L)
the poset of (finitely) meet-irreducible elements 
of a lattice L, 19

340
Notation
a
representation of an element a of a finite distribu­
tive lattice as a down-set of its dual space, 20
f-1(S)
inverse image of a subset S of the codomain under 
a function f ,21
Q( X)
the collection of open subsets of a topological 
space X,29
C(X)
the collection of closed subsets of a topological 
space X,29
Clp(X)
the collection of clopen subsets of a topological 
space X ,29
int(S) 
s ◦ 
cl( S) 
S
<T
interior of a subset S of a topological space, 30 
interior of a subset S of a topological space, 30 
closure of a subset S of a topological space, 31 
closure of a subset S of a topological space, 31 
specialization order associated with a topology 
t,37
KS(X)
the collection of compact-saturated subsets of a
lT (P) 
a ( P ) 
a (P) 
t r
topological space X ,37
the upper topology on a poset P,39
the Scott topology on a poset P,39
the Alexandrov topology on a poset P,40
the open up-set topology associated with an or­
dered space (X, t, <), 43
T ^
the open down-set topology associated with an 
ordered space (X, t, <), 43
Xr
the topological space with open up-set topology 
associated with an ordered space X ,43
X i
the topological space with open down-set topol­
ogy associated with an ordered space X ,43
Td
tp
P ® Q
the co-compact dual of a topology t,45
the patch topology obtained from a topology t,45 
ordered sum of two posets P and Q, with P 
below Q,51
Filt(L) 
PrFilt(L) 
Idl(L) 
PrIdl(L)
a
the poset of filters of a lattice L,53
the poset of prime filters of a lattice L,53
the poset of ideals of a lattice L,56
the poset of prime ideals of a lattice L,56
representation of an element a of a distributive 
lattice as a down-set of its dual space, 58

Notation
341
< 5 filt
< 5 )idl
XL
filter generated by a subset 5 of a lattice L,60 
ideal generated by a subset 5 of a lattice L,61 
the (neutral) dual space of a distributive lattice 
L,65
Fx
prime filter corresponding to a point x of a (neu­
tral) dual space, 65
Ix
prime ideal corresponding to a point x of a (neu­
tral) dual space, 65
hx
homomorphism into 2 corresponding to a point x 
of a (neutral) dual space, 65
P X
Stone-Cech compactification of a discrete space 
X,80
* X
remainder of the Stone-Cech compactification of 
the (discrete) space X ,81
FDL(V) 
a - b
free distributive lattice over a set V,88
pair of lattice elements, seen as equation on the 
dual space, 97
x = a - b
satisfaction relation between an element x of a 
dual space and a pair (a, b) of elements of a lattice, 
viewed as an equation, 97
[ a - b 1
space associated with an equation between lattice 
elements a and b,97
[ R1
space associated with a binary relation R on a 
lattice, 97
ft (x)
congruence on a lattice associated with an element 
x of its dual space, 97
ft (5)
congruence on a lattice associated with a subset 5
of its dual space, 97
< R)
the lattice congruence generated by R,forR a 
binary relation on a lattice L,98
a |= x < y
satisfaction relation between an element a of a 
lattice and a pair (x, y) of elements of the dual 
space viewed as an inequation, 102
^a
preorder on the dual space associated with an ele­
ment a of a lattice, 103
A
preorder on the dual space associated with a subset 
A of a lattice, 103
[(x, y)1i
sublattice associated with a pair of elements of the 
dual space viewed as an inequation, 103

342
Notation
[ R 1i
sublattice associated with a binary relation on the
dual space viewed as a set of inequations, 103
a = x = y
satisfaction relation between an element a of a 
Boolean algebra and a pair (x, y) of elements of 
the dual space, viewed as an equation, 105
A = x = y
satisfaction relation between a subset A of a 
Boolean algebra and a pair (x, y) of elements of 
the dual space, viewed as an equation, 105
=a
equivalence relation on the dual space associated 
with an element a of a Boolean algebra, 105
=A
equivalence relation on the dual space associated 
with a subset A of a Boolean algebra, 105
[(x, y)He
Boolean subalgebra associated with a pair of 
elements of the dual space viewed as an 
equation, 105
[ R He
Boolean subalgebra associated with a binary rela­
tion R on the dual space viewed as a set of equa­
tions, 105
[=]
Boolean subalgebra of P(S) associated with an 
equivalence relation = on a set S, 109
R • S
relational composition of two relations R and S, 
with R before S, 112
R[U]
direct image under a binary relation R of a subset 
tf of the domain, 113
3r [tf ]
direct image under a binary relation R of a subset 
tf of the domain, 113
Vr [tf ]
relational universal image under a binary relation 
R of a subset tf of the domain, 113
l-K
=
derivability in normal modal logic K, 122
forcing relation on Kripke models, 123
^1
truth set of a modal formula ^ in a Kripke 
model, 123
R[tf, _,_]
direct image of a subset tf under a ternary relation 
R, 133
R[tf, V,_]
direct image of subsets tf and V under a ternary 
relation R, 133
^R
operator of implication type associated with a 
ternary relation R, 134

Notation
343
u • v
binary operator associated to a ternary relation R, 
equal to R[u, v, _], 138
u\v
operator of implication type associated to a ternary
relation R, left residual of •, 138
u/v
operator of implication type associated to a ternary 
relation R, right residual of •, 138
a ^ b
relative pseudocomplement of a with respect to b, 
also known as the Heyting implication or Heyting 
arrow, 139
obC
mor C 
HomC ( A, B) 
Cop
y: F ^ G
objects of a category C, 155
morphisms of a category C, 155
morphisms from A to B in a category C, 155
the opposite of a category, 159
a natural transformation ^ from a functor F to a
functor G, 162
A *
KO(X)
free monoid over a set A, 168
the set of compact-open subsets of a topological 
space X , 198
N(x)
the neighborhood filter of a point x in a topological 
space, 201
CompPrFilt(L)
the set of completely prime filters of a 
frame L, 202
Pt(L)
a
the space of points of a frame L , 203
the subset of the filter space defined by an element 
a, 213
[X, Y]
the space of continuous functions from
X to Y , 217
K ^ U
the set of functions f for which the direct image 
of K is contained in U ; a generic open set in the 
subbase for the topology on [X, Y], 217
K(X) 
x « y
the set of compact elements of a dcpo X , 235 
the way-below relation between elements x and y 
of a dcpo, 235
y
y
UB(M)
the set of elements way below y, 235
the set of elements way above y, 235
the set of upper bounds of a subset M
of a poset, 253
MUB(M)
the set of minimal upper bounds of a subset M of 
a poset, 253

344
Notation
1M
Sx
neutral element of a monoid M , 275
reachability relation of a machine with transition 
relation S when reading a word x , 276
L(A)
L(I, F)
language recognized by an automaton A , 277 
language recognized by a finite state machine M 
when taking I as the set of initial states and F as 
the set of final states, 277
R(M)
set of languages recognizable by a finite state ma­
chine M , 277
L(M)
B(M)
lattice of languages generated by R (M), 277
Boolean algebra of languages generated by
R(M), 277
x-1 L
Ly-1
Q(S)
left quotient of a language L by the word x, 278
right quotient of a language L by the word y , 278 
closure under quotienting of a subset S of the 
residuated Boolean algebra dual to a monoid, 281
L(L)
the residuation ideal generated by a 
language L, 281
B(L)
the Boolean residuation ideal generated by a lan­
guage L, 281
=s
syntactic congruence of a subset s of a monoid 
M, 288
Ms
syntactic monoid of a subset s of a monoid 
M, 288
RegA
Boolean algebra of regular languages over a finite
f
alphabet A, 289
the unique continuous homomorphic extension to 
the free profinite monoid of a function f from 
generators to a finite monoid, 295
— h
the unique continuous extension to the free profi­
nite monoid of a homomorphism h from the free 
monoid to a finite monoid, 295
A*
ClpCon(M)
the free profinite monoid over a finite set A, 300 
the set of clopen congruences on a topological 
monoid M, 300
l = x < y
a regular language L satisfies a profinite monoid 
inequation given by the pair (x, y) of elements of 
the free profinite monoid, 312

Notation
345
_ 
* 
_
[ X < y 1
the set of regular languages L which satisfy a profi­
nite monoid inequation given by the pair (x, y) of 
elements of the free profinite monoid, 312
L |= x =* y
a regular language L satisfies a profinite monoid 
equation given by the pair (x, y) of elements of 
the free profinite monoid, 312
E
PT+
the subword partial order, 314
the collection of positively piecewise testable lan­
guages (in a fixed finite alphabet), 314
PT
the collection of piecewise testable languages (in 
a fixed finite alphabet), 314

Index
absorption laws, 9
Boolean algebra, 14
accepting state, 275
dual space of, 79
accepts, 275
Boolean compatible relation, 117
action
Boolean envelope, 14, 24, 76, 94, 148, 168
left, 283
Boolean residuation algebra, 294
right, 283
Boolean space, 79
two-sided, 283
Booleanization, 14
adjoint functor theorem for complete lattices, 17
bottom, 4
adjoint pair, 119
bounded morphism, 127, 136, 144
dual relation, 121
butterfly poset, 5
adjunction
between categories, 166
canonical, 128, 153
between preorders, 6
canonical extension, 126, 168
admissible valuation, 123
canonical model, 126
Alexandrov topology, 40
Cantor space, 49, 83, 92
algebra for an endofunctor, 194
ordered, 92, 212
algebraic dcpo, 235
Cartesian closed category, 227
algebraic domain, 208, 228, 235
Cartesian product, 10
alternating chain, 149
category, 155
alternation height, 149
co-complete, 185
anti-chain, 1
concrete, 156
anti-isomorphism, 3
large, 155
antitone, 3
locally small, 155
aperiodic, 318
monoid as a, 156
approximable, 245
preorder as a, 156
associative, 9
skeleton, 157, 171
atom, 23
small, 155
atomic, 24, 209
thin, 156, 157
atomless, 95
Cayley biaction, 284
automaton, 275
Cayley representation, 284
axiom of choice, 33
chain, 1
choice functions, 238
back-and-forth morphisms, 127
clopen, 29
base, 31
closed mapping, 30
biaction, 283
closed sets, 29
biaction morphism, 284
closed under quotienting, 278, 280
bifinite, 260-262
closure, 31
2/3 bifinite, 255
closure under quotienting, 280
bilinear maps, 132
co-compact dual, 45
binary topological algebra, 302
co-cone, 179
Birkhoff duality, 23, 24
co-finite, 16, 61

Index
347
co-Heyting algebra, 139, 147
co-restriction, 34
co-span, 183
co-unit, 166
coequalizer, 174
is an epimorphism, 186
coherent, 44, 248
coherent spaces, see under spectral space
colimit, 179
commutative, 9
compact element, 235
compact ordered space, 42
compact space, 32
compact-open topology, 217
compact-saturated, 38
compactification, 80
comparable, 1
compatible
downward Priestley, 118
equivalence relation, 105
monoid, 312
preorder, 101
relation of implication type, 133
relation of implication type on a Boolean space, 302
relation on a Priestley space, 118
relation on a Boolean space, 117
relation on a Priestley space, 114
upward order, 113
upward Priestley, 114
complement, 19
complete automaton, 276
complete Heyting algebra, 12
complete implication-type operator, 130
complete lattice, 9
complete operator of diamond type, 130, 137
complete sublattice, 11
completely distributive, 238
completely join irreducible, 244
completely join prime, 26, 240
elements generate, 26
completely prime filter, 202
concatenation, 3
concrete categories, 161
cone, 179
congruence
clopen, 295
on a lattice, 11
on a monoid, 282
conjunctively closed, 262
consistent
intuitionistic formula, 145
constant diagram, 187
continuous, 29
proper, 50
continuous dcpo, 235
contravariant adjunction, 6
converse relation, 119
and adjunction, 119, 121
convex set, 19
coproduct
in categories, 177
special case of colimit, 179
CTOD, 63
dcpo, 14
space of a, 233
spectral, 228
dense, 31
deterministic automaton, 276
diagram
constant, 187
diamond poset, 2
dictionary order, 4
difference chain, 149
direct image, 11
directed, 13
directed join, 13
directedly complete poset, 14
discrete category, 179
discrete duality, 23, 24, 26
discrete monoid, 295
discrete topology, 30, 40
distributivity, 12
failure of, 13
divisibility, 54
domain, 228, 235
algebraic, 235
bifinite, 229
spectral, 228
down-directed, 13
down-set, 18
generated by a subset, 19
principal, 19
down-set lattice, 26
dual Alexandrov topology, 40
dual categories, 164
dual distributive lattice, 21
dual isomorphism, 170
dual poset, 21
dual relation, 134
duality
Birkhoff, 23
for finite Boolean algebras, 24
for finite distributive lattices, 23
Priestley, 73
Stone, 79, 196
dually equivalent categories, 164
dually isomorphic, 170
embedding projection pair, 257
enough join irreducibles, 19
epimorphism, 174
regular, 174
equalizer, 175, 179
is a monomorphism, 186
equations, 97

348
Index
equidivisibility, 327
equivalence of categories, 164
equivalence relation, 1
Esakia space, 143
essentially surjective, 160
faithful, 160
filter, 52
characteristic function of, 58
generated, 60
maximal, 78
prime, 52
filtering, 13
filtering collection, 13
filters
partial order on, 53
final state, 275
finite A-word, 275
finite element, 235
finite intersection property, 32
finite model property, 145
finite-join-preserving, 10
finite-meet-preserving, 10
finitely generated distributive lattice, 95
finitely generated down-set, 19
finitely generated up-set, 19, 247, 256
first isomorphism theorem, 12, 282
forgetful functor, 161, 167
forward image, see under functor
frame, 12, 201
frame homomorphism, 12, 201
free Boolean algebra, 94
free Boolean extension, 14
free distributive lattice, 87, 167, 193
free join semilattice, 26
free join-semilattice, 168
free monoid, 7, 168, 275
free profinite monoid, 295, 296
free ultrafilter, 81, 100
full infinite binary tree, 4
full subcategory, 159
functional composition, 3
functor, 160
contravariant, 161
covariant, 161
forgetful, 161, 167
full, 160
Godel translation, 148
Godel-Lob logic, 126
Galois connection, 6
generalized Cantor space, 92
generated
down-set, 19
submonoid, 283
subsemigroup, 283
up-set, 19
graph, 36
graph of a binary operation, 302 
greatest lower bound, 4
Green’s equivalence relations, 318, 323
H -trivial, 318
Hausdorff maximality principle, 33
Heyting algebra, 132, 139
Heyting homomorphism, 12, 139
Hoffmann-Lawson duality, 238
Hom-class, 155 
homeomorphism, 30 
homomorphic image, 11 
homomorphism
between Boolean algebras, 14
between lattices, 10
dual function, 70, 121
dual relations, 121
of monoids, 282 
hypercompact, 247 
hyperdoctrine, 327 
hyperspectral spaces, 246
ideal, 55
generated, 61
prime, 55
idempotent
element, 301
operation, 9
relation, 236
identity element, 15, 275 
implication type
compatible relation of, 133, 302 
implication-type operator, 130 
inclusion order, 18
incomparable, 1
indiscrete topology, 30
infimum, 4
inherited order, 3
initial object, 177
initial state, 275 
interior, 30 
interpolating, 236 
interval topology, 40 
intuitionistic formula, 145
intuitionistic Kripke model, 145 
inverse image, 21 
isomorphism, 157
between categories, 170
between lattices, 10
isomorphism between ordered spaces, 42
J -trivial, 314, 318
language, 319
join, 4
Join Infinite Distributive law, 12
join irreducible, 19
join preserving at primes, 222, 265 
join prime, 20, 222, 252 

Index
349
join of topologies, 38
join-semilattice, 9
kernel, 11, 282
Kripke Boolean model, 123
Kripke Boolean space, 123
Kripke frame, 123
Kripke model, 123
L-trivial, 318
Lob’s axiom, 126
language recognized by an automaton, 276
lattice
algebraic definition, 9
distributive, 12
first isomorphism theorem, 12
order from operations, 9
order-theoretic definition, 9
lattice embedding, 10
lattice homomorphism, 10
lattice isomorphism, 10
lattice term, 89
Lawson topology, 40
least fixed point, 268
least upper bound, 4
left action, 283
lexicographic order, 4, 7
limit in a category, 179
Lindenbaum-Tarski algebra, 90
linear order, 1
locally compact, 32
locally finite, 95
lower bound, 4
lower topology, 40
M3, 13
machine, 275
magma, 302
map, 2
max, 4
maximal consistent set, 129
maximal vs maximum, 5
meet, 4
meet irreducible, 19
meet prime, 20
meet-semilattice, 9, 193
meet-semilattice reduct, 194
membership problem, 313
min, 4
minimal automaton, 290
minimal upper bounds, 253
modal algebra, 122
positive, 121, 193
modal formula, 121
modal logic
classical, 121
positive, 122
modal operator, 121
monoid, 275
congruence, 282
first isomorphism theorem, 282
internal to a category, 176
on a monoid, 282
quotient, 282
monoid compatible, 312
monoid homomorphism, 168
monomorphism, 174
monotone, 2
morphism between ordered spaces, 42
MUB-closed, 261
MUB-closure, 261
MUB-complete, 255
finitely, 255
MV-algebra, 132
N5, 13
necessity operator, 121
neighborhood, 30
neighborhood filter, 201
neutral dual space, 65
neutral element, 275
one-point compactification, 63, 81
open cover, 32
open mapping, 30
open set, 29
operator
of diamond type, 130
of implication type, 141
opposite category, 159
opposite poset, 3
order embedding
surjective, 7
order homeomorphism, 42
order ideal, 236
order isomorphism, 2
order normality, 63
order preserving, 2
and injective, 7
order reflecting, 2
order reversing, 3
order-separation property, 43
ordered generalized Cantor space, 49
ordered space, 42
morphism, 42
p-morphism, 144
partial order, 1
patch topology, 45
piecewise testable, 314
Plotkin order, 262
point-closed, 114
points, 66
polynomial closure, 314
poset, 1
poset reflection, 3, 8, 256

350
Index
positive n-modal algebra, 193, 195
positively piecewise testable, 314
power set, 18
prefix order, 4
preorder, 1
preserve directed joins, 230
preserve join at primes, 222
modulo a congruence, 222
for a residuation algebra, 304
Priestley compatible relation 
downward, 118
Priestley compatible relation
upward, 114
Priestley duality, 73
Priestley space, 63
is order-normal, 63
prime filter, 52
characteristic function of, 56
complement, 56
prime ideal, 55
characteristic function of, 56
complement, 56
principal down-set, 19
principal up-set, 19
product, 10
in categories, 175
special case of limit, 179
product space, 31
profinite monoid, 182, 295
profinite poset, 181
profinite set, 182
proper, 50
proper map, 50
pseudocomplement, 139
pseudovariety of finite monoids, 313
pseudovariety of regular languages, 313
pullback, 183
pushout, 183
quasi-identity, 317
quotient
of a lattice, 11
of a monoid, 282
of a Priestley space, 102
of a topological space, 37
quotienting operations, 278, 280
R-trivial, 318
reachability relation, 276
recognizer, 287
reduct
semilattice, 9
regular epimorphism, 174
regular language, 276
generates finite residuation ideal, 
288
has finite syntactic monoid, 288
regular monomorphism, 175
rejects, 275
relational composition, 3, 112, 158
relational converse, see under converse relation
relational direct image, 113, 278
relational inverse image, 113, 278
relational universal image, 113
relative pseudocomplement, 139
remainder, 81, 100
residual, 131
residuated Boolean algebra
dual to a monoid, 280
residuated operation, 131
residuation algebra
dual to a monoid, 280
residuation ideal, 280
corresponding to a monoid quotient, 287
generated, 280
right action, 283
Rudin’s lemma, 249
satisfies the (spatial) equation, 105
satisfies the (spatial) inequation, 103
satisfies the profinite monoid equation, 312
satisfies the profinite monoid inequation, 312
saturated, 37
Scott topology, 39, 227, 231
self-dual property, 12
semilattice, 9
semilattice homomorphism, 10
separation axioms, 31
shuffle ideal, 314
Sierpinski space, 45
Simon’s theorem, 293
skeleton, 157, 171
Smyth powerdomain, 194, 212
sober space, 198, 207
dcpo of a, 233
span, 183
spatial, 206
specialization order, 37
spectral dcpo, 246
spectral domain, 228, 246, 251
spectral map, 198
spectral space, 198
spectral subspace embedding, 258
stably compact space, 45
states of an automaton, 275
Stone dual space of a lattice, 198
Stone spaces, 198
Stone’s prime filter-ideal theorem, 57
Stone-Cech compactification, 80
strong unit, 132
subalgebra
of a Boolean algebra, 14
subcategory, 159
sublattice, 11
submonoid, 283
subsemigroup, 283

Index
351
subspace, 30
subword, 314
supremum, 4
vs maximum, 5
surjective co-restriction, 287
symmetric difference, 17, 110, 177
syntactic
congruence, 288
homomorphism, 288
monoid, 288
preorder, 310
term, 89
terminal object, 175
thin, 156
TOD, see under totally order-disconnected
tooth, 247
top, 4
topological monoid, 176, 295
topological space, 29
topology generated by a subbase, 31
total order, 1
totally order-disconnected, 63
transition relation, 275
triangle identities, 166
truth set, 123
ultrafilter, 78, 79
free, 81, 100
unbounded sublattice, 11
underlying machine of an automaton,
275
unit of an adjunction, 166
up-directed, 13
up-set, 18
generated by a subset, 19
principal, 19
upper bound, 4
upper Priestley continuous, 114
upper topology, 39
upper Vietoris space, 212, 213
valid
formula on a Kripke Boolean model, 124
formula on a Kripke model, 124
valuation, 123
admissible, for intuitionistic Kripke models,
145
admissible, for Kripke Boolean models,
123
Vietoris space, 194
way below, 235
well filtered, 44
well pointed, 171
well quasi-order, 315
Zorn’s lemma, 33


