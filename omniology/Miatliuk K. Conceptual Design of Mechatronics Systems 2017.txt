Kanstantsin Miatliuk
Conceptual Design 
of Mechatronic Systems

Kanstantsin Miatliuk
Conceptual Design 
of Mechatronic Systems
°СКА
Ул. 
- V '•
Printing House ofBialystok University of Technology 
Bialystok 2017

Reviewers:
dr hab. eng. Mariusz Giergiel, prof. 
prof. Norbert Kruger
Editorial content:
Olga Turlaj
© Copyright by Printing House of Bialystok University of Technology, Bialystok 2017
ISBN 978-83-65596-31-4 ISBN 978-83-65596-32-1 (eBook)
The publication is available on license Creative Commons Recognition of authorship - 
Non-commercial use - Without dependent works 4.0 (CC BY-NC-ND 4.0)
Full license content available on the site creativecommons.org/licenses/by-nc- 
nd/4.0/legalcode.pl
The publication is available on the Internet on the site of the Printing House of Bialystok 
University of Technology
Technical editing, binding:
Printing House of Bialystok University of Technology
Printing:
„UNI-DRUK” Wydawnictwo i Drukarnia Sp. J.
Edition: 43 copies
Printing House of Bialystok University of Technology 
ul. Wiejska 45C, 15-351 Bialystok
tel.: 85 746 91 37, fax: 85 746 90 12
e-mail: oficyna.wydawnicza@pb.edu.pl
www.pb.edu.pl

CONTENT
Conventional signs and notions ............................................................................ 
5
PREFACE ............................................................................................................. 7
1. INTRODUCTION-OVERVIEW OF DESIGN METHODS AND MODELS . 9
2. GEOMETRIC MODELS IN DESIGN SYSTEMS ........................................ 19
3. THEORETICAL BASIS OF THE DESIGN METHOD ................................ 28
3.1. Formal model of hierarchical mechatronic system ................................. 28
3.1.1. Aggregated dynamic realization.................................................  32
3.1.2. Structure ....................................................................................... 37
3.1.3. Coordinator .................................................................................. 38
3.2. Canonical model of coordinator .............................................................. 44
3.2.1. Presentation of coordinating element ........................................... 47
3.2.2. Process of coordination ................................................................ 51
3.2.3. Description of coordinator environment ...................................... 54
3.2.4. Performance of the design task of mechatronic systems .............. 57
3.3. Metrical characteristics of hierarchical mechatronic systems ................. 59
3.3.1. Levels of mechatronic systems .................................................... 59
3.3.2. Numeric positional system ........................................................... 61
3.3.3. Measuring units of mechatronic objects ........................................71
Preliminary conclusions ...........................................................................  72
4. DESCRIPTION OF THE DESIGN METHOD .............................................. 74
4.1. General geometric characteristics of mechatronic objects ...................... 77
4.2. Numerical characteristics of mechatronic objects ................................... 80
4.3. Hierarchical geometric representation of mechatronic objects ............... 82
4.3.1. Conditional point ......................................................................... 83
4.3.2. Conditional line ........................................................................... 84
4.3.3. Conditional surface...................................................................... 86
4.3.4. 3D Object ..................................................................................... 88
4.3.5. Interconnections coordination of geometric elements 
of mechatronic objects ......................................................... 90
4.4. Procedures of geometric design of mechatronic objects ......................... 91
3

4.4.1. Coordinator actions with geometric elements of mechatronic 
objects ................................................................................ 91
4.4.2. Geometric synthesis ................................................................... 92
4.4.3. Motion design and deformation as analysis tasks ...................... 96
Preliminary conclusions ......................................................................... 103
5. CONCEPTUAL DESIGN OF BIOMECHATRONIC SURGICAL 
ROBOT SYSTEM.................................................................................... 104
5.1. Conceptual formal model of surgical robot system.............................. 105
5.2. Realization of coordination - design and control - tasks...................... 114
Preliminary conclusions................................................................................. 119
6. CONCEPTUAL MODEL OF BIOLOGICALLY INSPIRED ROBOT ....... 121
6.1. Conceptual model of dinosaur robot ...................................................... 121
6.2. Robot motion design .............................................................................. 125
6.3. Assembly of dinosaur robot parts .......................................................... 126
Preliminary conclusions .................................................................................. 129
7. HUMAN MOTON DESIGN USING HIERARCHICAL SYSTEMS 
METHOD..................................................................................................... 130
7.1. Coordination task formulation................................................................ 131
7.2. Definition of human movements and deformations ................................ 133
7.3. Computer design of human motion ........................................................ 134
7.3.1. Algorithm of human motion design...............................................135
7.3.2. Computer design of human sitting-standing-up movements........ 138
7.4. Description of the laboratory experiment............................................... 143
Preliminary conclusions and results............................................................... 149
8. DESIGN AND TESTING OF ELECTRONIC CIRCUIT BOARDS ........... 152
8.1. Geometric construction of circuit board................................................ 153
8.2. Stages of PCB interconnections quality testing...................................... 157
Preliminary conclusions................................................................................... 161
9. DESIGN AND CONTROL OF MCM CUTTING MACHINE ..................... 162
9.1. MCM conceptual model ........................................................................ 163
9.2. Design tasks........................................................................................... 171
9.3. MCM motion design and simulation - Robwork Studio 
integration ......................................................................................... 175
Preliminary conclusions .................................................................................. 179
CONCLUSION ................................................................................................... 180
Acknowledgments ............................................................................................... 187
REFERENCES .................................................................................................... 188
4

Conventional signs and notions
Abbreviations and notions: 
MS 
- mechatronic system,
MO 
- mechatronic object,
MP 
- mechatronic process,
CD 
- conceptual design,
DD 
- detailed design,
CS 
- conceptual studies,
PC 
- personal computer,
GO 
- geometric object,
CAD 
- computer aided design,
CAE 
- computer aided engineering,
CIM 
- computer integrated manufacturing,
KBE 
- knowledge based engineering,
MDE - model-driven engineering,
FBS 
- function-behavior-structure,
FCBS - function-cell-behaviour-structure,
FKC 
- functional knowledge cell,
B-R 
- boundary representation,
CSG 
- constructive solid geometry,
ACS 
- automated computer system,
HS 
- hierarchical system,
DE 
- differential equations,
CG 
- computational geometry,
SRS 
- surgical robot system,
TKA 
- total knee arthoplasty,
MCM - manhole cutting machine,
PCB 
- printed electronic circuit board,
Coordination - systems design and control processes, 
Aed - formal analogous of two-level system with dynamic objects,
5

Sings and variables:
X 
- input,
Y 
- output,
S€ 
- system of level l,
OSe 
- object of level l,
л S’' 
- process of system Se of level l,
E S1 
- environment of system S1,
ст1 
- structure of system S€,
S о 
- coordinator of system S!',
a1 
- aggregated dynamic presentation of system SZ,
p ^ 
- reaction of system S1,
(pz 
- function of states transition of system Sz,
LS 
- numerical positional system,
л 
- output function of coordinator (coordination strategy),
tt’ 
- time interval [t, t’],
У 
- coordination signal and sub-systems connections,
w 
- feedback signal.
6

PREFACE
This book presents the systemic model and coordination technology of hierarchical 
systems for conceptual design of mechatronic and other engineering objects. The 
conceptual model creation of the mechatronic system (MS) being designed is the 
actual task which is performed in the frames of automation and robotics, mecha- 
tronics, engineering design, computer integrated manufacturing (CIM), computer 
aided design (CAD) and other related subject fields. Conceptual model of the de­
signed object is usually created before generating concrete mathematical models 
necessary for design tasks performing at the detailed design phase of the object life 
cycle [1].
Among the widespread models and methods which are usually used at the 
conceptual and detailed design phases are the following ones. Models of classical 
mathematics - discrete and continuous - successfully used to model the dynamics 
or structure of the object being designed, but do not solve the basic problem of 
design: do not link the structure of the object and its function. Models of artificial 
intelligence are most commonly used when describing the structure of the designed 
object and design knowledge representation. Solving some specific design prob­
lems, these models remain one-level at its core and do not take into account the 
dynamics of the object being designed and therefore do not perform the general 
design task in one common theoretical basis. For the case of logical-dynamical 
systems, the dynamical elements of these systems are connected by logical systems 
in a higher-level structure, thus forming a higher-level system. Such systems are 
most useful in the design, but they take into account two levels of the designed 
objects only. Hybrid systems use the models of classic mathematics or artificial 
intelligence in that cases when they work most sufficiently, i.e. use the models of 
classic mathematics for description of systems dynamics or models of artificial 
intelligence for structure description of the object being designed. But it is impos­
sible to represent both models of classic mathematics and artificial intelligence in 
the common formal basis. It complicates the performance of the general design 
tasks. Other methods and models are described in Chapter 1.
In the book presented, the conceptual formal model of mechatronic systems is 
created using construction and technology of hierarchical systems (HS) [2] with 
7

their standard element aed by S.Novikava and K.Miatluk [3-8], dynamic systems 
by M. Mesarovic and Y.Takahara [9, 10], numeric positional systems and hierar­
chical geometry [7, 11, 52]. This conceptual model allows the connected formal 
descriptions of a mechatronic system structure, its aggregated dynamic representa­
tion as a unit in its environment, the system environment, its process and system­
environment interactions; the system coordinator and its coordination, i.e. design 
and control, processes. Besides, the conceptual model takes into account the con­
nected descriptions of mechatronic subsystems of different nature, i.e. mechanical, 
electronic, electromechanical, and computer. Availability of HS coordinator allows 
the realization of inter-level connections of mechatronic system being designed.
In this manuscript, the objects under consideration are designed and controlled 
mecharonic systems described in the theoretical basis of hierarchical systems (HS). 
The design and control process of mecharonic system is realized by HS coordina­
tor. Mechatronic system (3.1) can be presented according to HS model in forms of 
mechatronic object (3.2) and process (3.3) being coordinated, i.e. designed and 
controlled (see Section 3.1). Therefore, mechatronic system (MS) in this book can 
be also called a mechatronic object (MO) or mechatronic process (MP) depending 
on the way of its consideration.
At the beginning, an overview of modern approaches and methods of concep­
tual design and engineering design methods are presented in this book in Introduc­
tion - Chapter 1. An overview of wide-spread geometric models which are used in 
CAD systems is given in Chapter 2. The formal basis of the conceptual model de­
veloped with the help of hierarchical systems, dynamic systems, and numeric posi­
tional systems is presented in Chapters 3. First, the standard block of hierarchical 
systems - aed (ancient Greek word) - a formal analogue of a two-level system 
[3,4] is described in Chapter 3. Formal modes of mechatronic object being de­
signed, its environment and their processes are described using dynamic systems 
[9,10]. The main element - coordinator - which performs design and control tasks 
on its strata is formally presented using its canonic model. Metrical characteristics 
of hierarchical mechatronic systems including numeric positional system are given 
after that. Chapter 4 presents the description of the proposed design method and 
hierarchical geometric representations of mechatronic objects being designed. 
The exemplary tasks of the conceptual design of methatronic objects are presented 
in Chapters 5-9. Among the tasks there are biomechatronic surgical robot system 
(SRS) design, conceptual design of dinosaur Bioloid robot, human motion design, 
design and testing of electronic printed circuit boards (PCB), technological man­
hole cutting machine (MCM) design and control. Conclusive remarks are finally 
presented in the book.
8

1. INTRODUCTION - OVERVIEW OF DESIGN
METHODS AND MODELS
Conceptual model creation of an engineering, e.g. mechatronic system being de­
signed is the actual task for automotive control, robotics and industrial production 
systems which usually operate with modern CAD/CIM systems [1, 12-15]. Nowa­
days, there are a lot of definitions of Conceptual Design (CD) and corresponding 
methods and models which are used at the conceptual design phase. The following 
definitions: “conceptual design or what some call ‘ideation’ defines the general 
description of the product” given by Paul Brown, “the early part of any design 
process, which can occur at any point in the product development cycle” given by 
Bob McNeel, and “conceptual design is about possibilities” given by Fielder Hiss 
are analyzed by Hudspeth [16]. Hudspeth considers conceptual design to be more 
about what a product might be or do, how it would meet the expectations of the 
manufacturer and the customer. M.J. French defines the conceptual design as the 
phase of the design process where the statement of the problem and generation of 
broad solution to it in the form of schemes is performed [17]. In any case before 
giving a definition to Conceptual Design and Conceptual Model of an engineering 
(e.g. mechatronic) object being designed it seems to be reasonable to define the 
place of Conceptual Design in general design process and object’s life cycle. To 
make such a definition, the general design scheme is presented by French [17] in 
the form of a block diagram given in Figure 1.1.
9

Fig. 1.1. Block diagram of the design process [17]
Fig. 1.2. Mechatronic object life cycle [1]
Here circles represent phases and rectangles represent work which is not com­
pleted. In this diagram things that are important but outside of the scope of the 
work, have been omitted by French. For examples, interactions with such activities 
as research and development, inputs of information, etc., were not under considera­
tion. The ‘evaluation’ box was also omitted in the scheme because French believes 
it should be going on continuously in all the rectangles of the diagram [17]. Ac­
cording to Ullman [1], in the object life cycle (Fig. 1.2) the Conceptual Design 
phase is just before the phase of the Detailed Design (DD) where the object’s con­
crete mathematical model is created and numeric calculations are performed. An­
other similar scheme which contains both conceptual and detailed design phases 
in the total design core is presented by P. Childs in [13], see Figure 1.3.
10

Conceptual 
design
Fig. 1.3. The total design core [13]
The main design tasks performed at both CD and DD phases (Fig. 1.3) are 
synthesis and analysis tasks. The places of these tasks in the general design process 
are presented by the scheme in Figure 1.4 given in [13]. Synthesis is defined by 
Childs as the process of combining the ideas developed into a form or concept, 
which offers a potential solution to the design requirement. Analysis task is recog­
nized as involvement of the application of engineering science. In this case, sub­
jects are explored extensively in traditional engineering courses, such as statics and 
dynamics, mechanics of materials, fluid flow and heat transfer. These engineering 
'tools' and techniques are used in analysis tasks to examine the design to give quan­
titative information such as whether it is strong enough or will operate at an ac­
ceptable temperature [13]. Analysis and synthesis invariably go together.
In the frames of the conceptual design model presented in this book and de­
scribed below in aed formal basis of HS (see Chapters 3-4), the synthesis and anal­
ysis tasks are also performed together and defined as coordinator tasks of creating 
(synthesis) and changing (after analysis) mechatronic system construction and 
technology by selecting units of lower levels and settling their interactions to make 
11

the state and activity of the system on higher levels (environment) best coordinated 
with environmental aims.
Fig. 1.4. Synthesis and analysis design steps in the general design process [13]
Another definition of the conceptual design process was given in the Over­
view section of the work titled “Analyzing Requirements and Defining Mi- 
crosoft.net Solution Architectures” [18] where MSF (Microsoft Solutions Frame­
work) process model was presented. It was pointed out here that the planning phase 
of the Model involves three design processes: conceptual, logical, and physical. 
The conceptual design starts during the envisioning phase of the MSF process 
model and continues throughout the planning phase. Because the MSF design pro­
cess is evolutionary as well as iterative, conceptual design serves as the foundation 
for both logical and physical design. The following three steps of conceptual de­
sign and associated baselines are formulated. Conceptual design is an iterative 
process and the steps are repeated as required: 1) research, 2) analysis, 3) optimiza­
12

tion. The optimization baseline leads to the baseline of the conceptual design. Cor­
respondent Figure 1.5 illustrates these steps in the conceptual design.
During the research step of conceptual design, the team gathers more infor­
mation to refine and validate data collected during the envisioning phase. Typical­
ly, the information gathered during the envisioning phase is high level and lacking 
in detail. During the first step of the conceptual design, the design team needs 
to collect detailed information. For example, the team first identifies questions 
raised by the first iteration of information gathering; the team then continues 
to clarify the tasks, business processes, and workflow. As greater detail is discov­
ered, the results are incorporated in the use cases and draft requirements.
Fig. 1.5. Steps in conceptual design [18]
US Department of Transportation [19] formulated that conceptual studies (CS) 
are typically initiated as needed to support the design planning and programming 
process. CS phase identifies, defines and considers sufficient courses of action (i.e., 
engineering concepts) to address the design needs and deficiencies initially identi­
fied during the planning process. This phase advances a project proposed in the 
program to a point where it is sufficiently described, defined and scoped to enable 
the preliminary design and technical engineering activities to begin. The CS and 
preliminary design phases are performed in conjunction and concurrently with the 
environmental process which evaluates environmental impacts of the engineering 
proposals resulting from the conceptual studies and preliminary design phases.
Environmental systems and processes are also taken into account in 
knowledge based engineering (KBE) approach proposed by Pokojski and 
Szustakiewicz in [20]. The main structures for extended KBE application are de­
sign process and design models. The models contain specific aspects such as prod­
uct structure as a whole and its fragments, engineering calculations and analysis 
with ability of integration with external systems, design requirements and decision 
making processes. This object-oriented approach makes it possible to speed up the 
13

process of generating the source code of design models from the extended KBE 
application. KBE approach is also used in [132] to support multidisciplinary design 
optimization. Another approach where the decision support tools in the domain of 
conceptual design are sufficiently developed is model-driven engineering (MDE) 
described in [21]. Here, a prototype software is presented that allows the user to 
specify functional requirements for the designed buildings, and hierarchical graphs 
and graph grammars serve as knowledge representation tool.
In systematic respect, designing is defined in [22] as the optimization of given 
objectives within partly conflicting constraints. Requirements can be changed with 
time, so that a particular solutions can be optimized for a particular circumstances 
set. In organizational respect, design is recognized as a part of the product life 
cycle. This cycle is trigged by a market need or a new idea. Life cycle starts with 
product planning and ends with recycling or environmentally safe disposal. The 
activity on engineering design is placed at the center of two interacting technical 
and cultural streams (Fig. 1.6) in [22].
Fig. 1.6. The central activity of engineering design [22]
Politics 
I 
i
Sociology, 
psychology 
1 
i
Economics
о . 
Engineering
Science---- . 
©
science
i
_ Engineering __ 
design
!
-- Engineering----- Production
ro uc on 
technology
i 
Engineering 
design
Architecture 
i
i
Art
From the point of view of Hierarchical Systems (HS) method proposed in this 
manuscript, both streams belong to the general process of level increasing of the 
object being designed in its life cycle. This process and the life cycle for the case 
of Tractor and Automobile Industry (TAI) were described in [23, 24] and are pre­
sented in Fig. 1.7 below.
14

Figure 1.7 presents the main phases of product life cycle for the case of 
articles of Tractor and Automobile Industry (TAI) and their places in State levels. 
States levels are (Nat) natural (physical, chemical, biological), (Demog) 
demographical (social), (En) engineering, (Kn) knowledge and the level of the 
State power (St.Power). The phases of TAI product life cycle are: (1) 
manufacturing of articles and equipment for TAI; (2) transport networks, the 
delivering of raw materials, details, equipment; (3) trade; (4) field of activity and 
technical service of TAI articles; (5) design of new things (innovations) in TAI, 
financial and juridical service, scientific maintenance. The place of the conceptual 
design phase where HS design technology and correspondent conceptual model 
(presented and described below in this book) are implemented is in the fifth block 
- design of new things, financial and juridical service, scientific maintenance - of 
the scheme (Fig. 1.7).
The connection of the Life Cycle phases (Fig. 1.7) as well as State levels - 
natural, demographic, engineering, knowledge, State power - is realized by aed 
technology of hierarchical system partially described by A^ scheme given in [8]. 
The scheme connects elements of symbol construction of hierarchical system pre­
sented in A^ form of aed and reflects both the design mechanism and the law of 
object’s level increasing in its life cycle.
To represent concept design knowledge, the technology of functional 
modelling was researched and applied by Bryant et al. [25]. Gero and 
Kannengiesser [26] presented an function-behavior-structure (FBS) ontology 
representation process for concept design in different domains, and emphasized the 
reasoning mechanism with the FBS ontology for knowledge representation. Borgo 
et al. [27] suggested an ontological characterization of artefact behavior and 
function to capture the informal meanings of these concepts in the engineering 
practice and to characterize them as part of a foundational ontology. As for 
15

a mechatronic design process, Yan and Zante stated that "mechatronic system de­
sign is normally considered to be a sequential process in which a design solution to 
a given design problem is generated, explored and evaluated following a series of 
prescribed steps" [28]. A mechatronic approach towards designing inspection 
robots using rapid prototyping and real-time simulation is also described by 
Giergiel et al. in [29].
The design methods based on the abstract modelling of PALMERA and the 
DMC model, Design Flow for Reconfigurable Architectures (INDRA) has been 
developed to guide the designer through different implementation steps to create 
a concrete dynamic reconfigurable system architecture. These design methods and 
the design flow are described in [133, 134].
A formal definition of the concept design and a conceptual model linking con­
cepts related to design projects are presented by Ralph P. and Wand Y. [30]. Their 
definition of design incorporates seven elements: agent, object, environment, goals, 
primitives, requirements and constraints. The design project conceptual model 
is based here on the view that projects are temporal trajectories of work systems 
that include human agents who work to design systems for stakeholders, and use 
resources and tools to accomplish this task. Ralph and Wand demonstrate how 
these two conceptualizations can be useful by showing that 1) the definition of 
design can be used to classify design knowledge, and 2) the conceptual model can 
be used to classify design approaches. The analysis performed by Ralph and Wand 
[30] led to defining the design as follows in Fig. 1.8.
Fig. 1.8. Conceptual model of Design as a noun [30]
Here the conceptual model of Design presented as a noun in Fig. 1.8 is recog­
nized as a specification of an object, manifested by an agent, intended to accom­
plish goals in a particular environment using a set of primitive components, satisfy­
ing a set of requirements, subject to constraints. The Design recognized as a verb is 
presented to create a design in an environment where the designer operates.
16

Both noun and verb design definitions correspond to the object and its process 
respectively as the elements of aed model of HS conceptual design method sug­
gested in this book, see aed scheme in Fig. 3.1, Chapter 3.
A systematic approach for the competency-oriented development of learning 
factories integrating the conceptual design levels ‘learning factory’, ‘teaching 
module’ and ‘learning situation’ is given by Tisch et al. in [129]. The presented 
approach enables “an effective competency development in learning factories by 
addressing problems of intuitively designed learning systems. As a result learning 
factories, teaching modules and single teaching-learning situations meeting indus­
tries’ requirements can be realized with less effort and an increased success in ap­
plied competencies in real situations”. A systematic analysis of mechatronic ob­
jects is also presented by Gawrysiak in [104].
The function-cell-behaviour-structure (FCBS) model for better comprehend­
ing representation and reuse of design knowledge in conceptual design was pre­
sented by Gu et al. [31]. Hierarchical two-layer concept is given here, i.e. two 
knowledge representing layers - the principle layer and the physical layer - are 
presented in the FCBS model. The principle layer is utilized here to represent the 
principle knowledge. Case modelling is employed in the physical layer to integrate 
the structural information and behavioural performances of the existing devices, 
which applies the design principles represented by the functional knowledge cells 
(FKCs).
FCBS model presented by Gu et al. [31] and a formal definition of the concept 
design and a conceptual model given by Ralph P. and Wand Y. [30] are close to 
Hierarchical Systems design technology which is described below in this book and 
was chosen in this work as the formal basis of the conceptual model creation.
In the presented book the Conceptual Design (CD) is recognized as a process 
of creation of a systemic model of the object being designed on the early phase of 
its life cycle. To define the conceptual model of a mechatronic system in systemic 
bases it is necessary to describe: mechatronic system structure; its dynamic 
representation as a unit in its environment; the system environment, its process 
and system-environment interactions; the system coordinator and its coordination 
(design&control) processes; processes executed by mechatronic subsystems and a 
general process. Besides, the conceptual model should take into account the con­
nected descriptions of mechatronic subsystems of different nature, i.e. mechanical, 
electromechanical, electronic and computer.
Furthermore, conceptual model of the mechatronic system being designed and 
its coordination (deisgn&control) technology should meet the requirements of the 
general design system which must allow performing the design - synthesis and 
analysis - and control tasks under condition of any information uncertainty, i.e. (1) 
to create and change mechatronic system construction and technology by selecting 
units of lower levels and settling their interactions to make the state and activity of 
17

the system in higher levels (environment) best coordinated with environmental 
aims (selection stratum); (2) to change the ways (strategies) of the design task 
performing when the designed unit is multiplied and the knowledge uncertainty is 
removed (learning stratum); (3) to change the above mentioned strata when new 
knowledge is created (self-organization stratum).
The coordination technology must also cohere with traditional forms of infor­
mation representation in mechatronics, i.e. numerical and geometrical systems. The 
theoretical basis of the design process in agreement with these requirements must 
be a hierarchical construction connecting any level unit with its lower and higher 
levels.
The above mentioned methods used in the conceptual design and well as mod­
els of mathematics based on set theory and methods of artificial intelligence do not 
meet the above formulated requirement. They do not allow the description of 
mechatronic subsystems with their specific characteristic features in common 
formal basis. At the same time they do not describe the mechanism of interlevel 
dynamics of the mechatronic object (MO) being designed since the set theory de­
scribes one-level world outlook only.
To solve the problem, the symbol construction and coordination technology of 
Hierarchical Systems (HSs) [2-8] was chosen in the work as the formal basis of the 
conceptual model creation. HS formal model was constructed with the help of aed 
(Fig. 3.1) - formal analogue of two-level system [3-8], and general dynamic sys­
tems by Mesarovic and Takahara [9,10], numeric positional system codes, geome­
try and cybernetics methods [32].
Among the first attempts of HS technology and aed model application in de­
sign are the results presented in [3-4, 33]. The current version of the conceptual 
model and design technology of mechatronic objects based on the Hierarchical 
Systems approach is partially described in [49] and presented below in this book.
18

2. GEOMETRIC MODELS IN DESIGN SYSTEMS
Geometric models of modern CAD systems which are used for solving the prob­
lems of mechatronics, robotics and automation are overviewed and analyzed in this 
Chapter. The overview covers recent decades, when almost all theoretical geomet­
ric models were realized in design systems and some new ideas were formulated. 
The main attention is paid to the models implemented in the systems which have 
their commercial realization.
There are two main classes of geometric representations in computer aided de­
sign (CAD) systems and other automated systems - Boundary Representation, B-R 
[34] and Constructive Solid Geometry, CSG [35].
An object being constructed is presented by expressions of CSG type in the 
form of a group of connected elementary objects (primitives) - cylinders, prisms, 
spheres, cones etc. The connection can be formally described by algebraic sum, i.e. 
some objects take part in this group with negative signs. CSG expression is graph­
ically presented as a tree, whose root is the whole object. The object unites the 
details at each level, where the terminal tops (leaves) are primitives (Fig. 2.1).
Objects in B-R are represented by the set of parts of surfaces (sides) and the con­
nections between the sides by their boundaries (edges) may be indicated (Fig. 2.1).
It is easy to see that B-R in this case contains the set of boundary elements of 
primitives which are used for uniting in CSG representation. At the same time, B-R 
contains only such boundary elements which are connected with the environment 
directly, and are not connected with each other in the whole object construction. 
Therefore, after defining each primitive in CSG model by its boundary representa­
tion and erasing common parts of their boundaries we obtain B-R of the whole 
object. It means that there is a simple transition from CSG to B-R but the reverse 
process is not so simple.
Primitives and more complex objects can be presented in algebraic form, which 
include patent, parametric [36], polynomial representations [37] and different types of 
splines [37, 38], and also in the form of sequences of Euler operators [39]. Geometric 
representation and parametric model of the object were proposed in the mid 80s of the 
20th century. For geometric representation [40] the set of notions is introduced:
{surface, point, vectors, scalars} .
19

Each of the notions can have a set of meanings in accordance with Table 2.1. 
It is easy to see that the meaning of variable “surface” in Table 2.1 plays the role of 
key and to each meaning of key there corresponds a strictly defined set of other 
variables in the same line in the table.
3D object
Constructive Solid
Geometry expression
Fig. 2.1. Known basic geometric representations of object in CAD [140]
20

Table 2.1. Multitude of geometric characteristics meanings
Surfaces
Points
Vectors
Scalars
Plane
Any point 
on the plane
Unitary 
normal
No
Sphere
Center
No
Radius
Rectilinear 
cycle cylinder
Any point on the 
axis
Unitary vector 
parallel to axis
Radius, length 
of axis
Rectilinear 
cycle cone
Top
Unitary vector 
parallel to axis
Top angle, 
radius
There is a certain mutual concordance between the representation of primitive 
in the space of geometric characteristics and its algebraic definition in form:
Ax2 +By2 +Cz2 +Dxy+Eyz+Fxz+Gx+Hy+Jy+K=0, 
(2.1)
where: x, y, z are coordinates in 3-dimension Euclidean space. That means that 
there are algorithms for transformation of geometric representation to algebraic one 
and vice versa. Calculations presented in [40] show that geometric representations 
require the minimal computer memory in comparison with other forms of represen­
tation. Besides, it is well connected with the natural language, convenient for en­
quiring about searching for elements of the object and forming directives for its 
change. It is sometimes useful to calculate some metrical characteristics, such as 
volumes and squares of surfaces using geometric representation directly. But it is 
necessary to convert the geometric representation to other forms to calculate physi­
cal characteristics, to form graphic images and to determine the technological pro­
cess.
Objects and their primitives can be presented by the sequences of Euler opera­
tors [39]. Therefore, objects are described by the sequence of constructing opera­
tors and inverse sets of destructing operators of geometric objects of a higher (in 
the case of destruction - lower) dimension. For instance, if we have an image of 
polyhedron we can erase one of its apexes (vertex) and save this operation on com­
puter. After that we can erase another top which is located on the same edge. These 
two operations correspond to the operation of the edge erasing. The sequence of 
operations of erasing of all edges which form one polyhedron side corresponds to 
the operation of removal of the whole side and finally, the erasing of all the sides 
destroys the object.
The repetition of the chain of all the operations in the inverse sequence when 
destructing operations are changed by constructing ones allows the object to be 
rebuilt. Such direct and inverse chains are called Euler operators. Their name arose 
from Euler’s formula:
21

v-e+f= 2, 
(2.2)
where: v - number of apexes, e - number of edges, f - number of sides.
Euler’s formula allows correctness of the object construction to be controlled. 
General formula which corresponds to the object of any connectivity is presented 
in the form of the expression:
v-e+f= 2( s-h)+r, 
(2.3)
where: s - general number of untied components, h - number of through holes in 
object, r - general number of cavities in sides.
For the formation of graphic images Euler operators are one of the best ex­
pressions. At the same time their most effective application to computer raster ter­
minal units is achieved by the hybrid connection of Euler operators with Octrees 
[41]. Such trees finally include the white and black leaves only (i.e. empty and 
filled elements of the object corresponding to cube primitives) but initially and in 
the middle state they have the grey leaves as well. Grey leaf corresponds to the 
case when one primitive simultaneously contains empty and filled areas. It is de­
composed according to the general rule for each level till only black and white 
leaves remain.
Octrees is the most acceptable geometric model for raster graphics. The transi­
tion from Euler operators to Octrees is one of the way of transition from vector 
(which is most useful for the output of boundary expressions) to raster representa­
tion [42]. It is necessary to convert Euler operators to other forms in order to calcu­
late functional characteristics of objects and to define technological processes.
The algebraic representations of geometric objects are well investigated 
[40, 43].
They are not practically used in requests to search the objects and are hard for 
their formation with participation of the user. There are some possibilities of con­
nection of created in this way primitives in CAD systems with CSG representation. 
But connection algorithms of objects of various forms are very complex and re­
quire a lot of computer memory and time for calculation.
At the same time such representations are suitable for computer graphics tasks 
(in vector forms), for generation of some programs for automated production and 
are the most effective for calculation of many functional characteristics in many 
tasks of engineering analysis.
The most convenient way of forming an algebraic expression is the case when 
one of the input units of a computer is scanning a physically realized (or simply 
graphically written) object. In this case the unit forms a range of observations dur­
ing a definite period of time which is changed later by corresponding mathematical 
definitions. It allows the information to be compressed and the initial range of ob­
servations to be restored when necessary.
22

Rational parametrical B-spline [38, 44, 45] gives the general form of any ob­
ject’s surface representation in homogeneous, i.e. descriptive, coordinates.
The spline is obtained from common parametric B-spline in the following 
way. C(t) is polynomial B-spline curve in 3D Euclidian space, i.e.
n
C(t) = S Дл (t)Pi,
(2.4)
where: Pi - 3-dimention control points, t - parameter, such as a <t <b & a, b are 
fixed and 0 <a <b; B(t) - polynomial of variable t of k order (power k-1). Bi,n(t) - 
basic functions defined by node vector ^ }” * ^ and a = 11 = 12 = ... = tk < +tk 1 < tk+2 < 
< ... < tn < tn+1 = ... = tn+k = b.
The representation of C(t) in homogeneous (descriptive) space with fourth co­
ordinate hi has the following form:
S Bik (t) hP
C (t) = ^n-------------------
SBi,k(t)hi
i=1 
(2.5)
n
or Ch(t)=SBi,k(t)Pih , 
(2.6)
where Pih is a control point in 4D space.
The corresponding spline representation for surface is defined by the expression:
S(s,t) =
nm
SSBi,k(s)Bj,l(t)hi,jPi 
i=1 j=1
nm
SSBi,k(s)Bj,l(t)hi,j 
i=1 j=1
(2.7)
This approach allows good representation of both the objects which are usual­
ly described by manifest definition (cycles, cones, primitive cubes) and the objects 
which are defined with the help of the parametrical polynomial forms (sculptural 
surfaces) [45]. The exemplary 2D path generated based on p(x, y) points using 
Spline interpolation algorithm is presented in Fig. 2.2. Spline interpolation is used 
in this case to create the 3 degree polynomials for the set of measurement points of 
the cutting path. Technological process of the pipe cutting along the predefined 
path is realized by robot cutter or CNC machine in production environment [46].
23

First, 1D spline for x and y point is created independently. Then the 2D path is 
generated as the composition of 1D x and 1D y splines. The set of measurement 
points in this case is as follows: x = [0 - 0,4 - 0,5 0 0,4 0,5 0,4 0] and
y = [0,5 0,4 0 - 0,4 - 0,5 0,4 0 0,5], see Fig. 2.2.
Fig. 2.2. 2D path generated based on p(x, y) points using Spline interpolation algorithm
The manifest functions require more elementary actions and less computer memory 
for representation of primitive surfaces and lines. But the use of one general expression 
improves the characteristics of the system in general and allows the memory volumes 
for programs location to be reduced, the speed of operations to be increased and the 
dialogue with the engineer to be unified. At the same time the expenses of system 
development, exploitation and the amount of documentation are reduced.
Fig. 2.3. Tetrahedron - an example of a wire-frame model
Vertex list
Edge list
V1(0, 0, 0)
V2(1, 0, 0)
V3(0, 1, 0)
V4(0, 0, 1)
e 1[ V1, V2] 
e 2[ V2, V3] 
e з[ V3, V1] 
e 4[ V2, V4] 
e 5[ V4, V3] 
e 6[ V1, V4]
24

For the case of wireframe modeling [46], the model consists entirely of points, 
lines, arcs and circles, conics, and curves. In 3D wireframe model, an object is not 
recorded as a solid. Instead the vertices that define the boundary of the object, or 
the intersections of the edges of the object boundary are recorded as a collection of 
points and their connectivity (Fig. 2.3).
Wireframe models are most economical in term of time and memory require­
ments, easy to construct, used to model solid object and often used for previewing 
objects in an interactive scenario. At the same time the models have the following 
disadvantages. They do not allow for use of photo realistic rendering tools, have no 
ability to determine computationally information on mass properties (e.g. volume, 
mass, moment, etc.) and line of intersect between two faces of intersecting models 
and do not guarantee that the model definition is correct, complete or manufactura­
ble.
To expand the potential possibilities of traditional boundary representation, the 
connections of dimensions (length, squares, volumes, angles) are added to algebra­
ic expression in the process of forming the representation. It permits the process of 
parametric construction with the use of geometry of variations to be realized.
Parametric model, or which is often used for the representation of objects in 
data bases of design systems, is defined by set {T, D, O, V, R, C}, where: T- set of 
topologies, D - set of possible dimensions, О - set of operations, V - set of varia­
bles, R - set of relations between V and T/O/D, C - set of restrictions of the mean­
ings of variables.
Any class of objects PS can be presented in these terms in the following form:
PS ={t, d, o, v, r, c}, 
(2.8)
ti eT, di eD, О eO, vi eV. Г eR, C eC.
It is possible to create B-R defining T and D only. To create CSG it is neces­
sary to define O.
Therefore, parametric model of the object contains not only traditional repre­
sentations (B-R in its most developed form based on geometry of variations) but 
also the relations between different forms of representations. Declarative definition 
of all the elements of set {T, D, O, V, R, C} ensure flexibility of the system, possi­
bility of its adaptation to different classes of objects and optimization of system 
parameters in its functioning process (for instance, finding more effective opera­
tions, defining new relations, etc.).
Having many characteristic features of systems of artificial intelligence, para­
metric model has a drawback - its relatively weak formalization. Six elements 
presented above are not strictly defined. That makes the creation of such models 
very complicated for the user. In other words, sets of possible meanings (states) 
of objects T, D, O, V, R, C are not defined. Possible connections of these states, i.e. 
25

states of the whole system, and transition operations from one possible state to 
another are not defined either.
A more theoretically grounded from the point of view of realization simplicity 
is the approach (independent from technical realisation) of graphical standard de­
velopment proposed by CGS Associates [47].
This approach is based on the application of mathematical means of formal 
system theory and algebra for the development of data bases. GSC Associates has 
adapted its technology in its commercial software products. Some of these products 
are Computer Graphics Metafile (CGM) generator used by Apple, and CGM inter­
preter used by Microsoft, Apple and Symantec [47].
Geometrical objects are considered in [47] as formal systems which have their 
inputs, outputs, states and actions of state transitions. A set of the actions also con­
tains the ways of obtaining information about the object’s state (states recognition).
Definite data structure of a data base corresponds to the formal system - ab­
stract data type, which can be adapted to any concrete state (any data of this type) 
and the set of state transition functions, i.e. operations which do not take the ele­
ments out the frames of the abstract type being considered. For instance, the struc­
ture of group of integer numbers is defined on computer by a cell organised for 
representation of integer number as a positional number with a definite base and 
actions of adding and subtraction.
The cell can be in any of its states (can contain one of integer numbers pre­
sented in the computer numeric format). Each of the mentioned operations with the 
present number and some other number which goes to the cell input are performed 
with the help of sequence of elementary operations (with bits) and forms the output 
which is also an integer number, i.e. has the same abstract type.
Division operation does not belong to the group of integer numbers because it 
can take the elements out of the frames of this abstract type (it is necessary to have 
one additional cell for the division remainder). The fields of real and complex 
numbers, logical data are also realized in computers in the form of abstract data 
types.
With respect to geometric expressions, this approach means the representation 
of a geometric object in the form of abstract data type with a set of operations of 
states transition which do not take the elements out of the frames of this abstract 
type. For instance, the data structure “segment” can be defined by a set of axioms, 
limits and by the operations of motion on a straight line, rotation and change of 
length. The operation of arbitrary uniting of two segments is not included in the 
data structure “segment” because it can take elements out of the frames of this 
abstract type. For instance, it is possible to obtain the broken line or “+”-like object 
as a result of uniting two segments, i.e. lines.
26

Data structure of “segment” also contains the operations with it. The descrip­
tion of several connected data structures for vector computer graphics with similar 
organization is presented in [47].
In this case the analogy of parametric model set T, D, O, V, R, C is a set of no­
tions of formal system theory which corresponds to the language of abstract data 
types. That means that the notions and their relations from this set are not only 
strictly defined and easy for programming but are realized in many cases as hard­
ware.
So, concluding the overview of traditional ways of geometric information rep­
resentations, it can be pointed out that the possibility of formal system theory and 
abstract data types application for the construction of expressions of geometric 
objects (models) opens new perspectives in CIM systems including robotics and 
CAD.
Both the CSG and B-R have their own advantages and drawbacks. So, the 
CSG models are simply constructed with the participation of a user. CSG model 
also requires less computer memory, is better adapted for definition of technologi­
cal processes (for inst. assembling type) and for imitation of movements of object’s 
details.
On the other hand, B-R models can actually be built without human participa­
tion, allow the sculptural surfaces to be constructed, allow variations methods to be 
used, and are better adapted for calculation of technological processes of continu­
ous deformation and for aerodynamic and hydrodynamic calculations.
The connection of these two approaches is possible, but sub-process of geo­
metric constructions creating and changing for CSG differs in marked degree from 
this sub-process for B-R.
In the existing CAD-systems these are principally different design technolo­
gies. Integration of these approaches in one system can be possible in the case of 
existence of the general formal language which can contain both representations 
and transition operations from one to another. It looks like the hierarchical and 
general systems theory can give an opportunity to create such a formal language. In 
this book, the hierarchical geometry model given in Chapter 4 is used in design 
tasks of mechatronic objects. The exemplary design tasks where HS (aed) geomet­
ric model is used are presented is Sections 4.4.2 and 4.4.3, and Chapters 6-8.
27

3. THEORETICAL BASIS
OF THE DESIGN METHOD
3. 1. Formal model of hierarchical mechatronic system
Theoretical means of the both conceptual and detailed design method, as was stat­
ed in Chapter 1, must present the mathematical apparatus for formal description 
of the designed mechatronic system (MS) structure, its aggregated dynamic repre­
sentation as a unit in its environment and the environment model. All the descrip­
tions should be connected by the coordinator which performs the design&control 
tasks on its selection, learning and self-organization strata. Furthermore, theoreti­
cal means of the proposed mechatronic design method should allow presentation 
of the numerical and geometrical information in its formal basis and be coordinat­
ed with the main requirements to design systems which must:
- carry out the main design and control task for the systems of any level 
under the conditions of any initial knowledge uncertainty, i.e. to create or to 
change the system construction and technology, to make its activity in a higher 
level system (environment) most coordinated with the desired environment states 
on all its levels (selection task);
- change the ways (strategies) of fulfilment of the main design and control 
when designed constructions and technologies are multiplied and knowledge 
uncertainty is removed (learning task);
- change the selection and learning strata when new (higher level) knowledge 
constructions and technologies have been created (self-organisation task).
Traditional one-level mathematic, artificial intelligence and cybernetic models 
and methods used in conceptual and detailed design do not meet all the above men­
tioned requirements, because it is impossible to express interleave relations in their 
terms.
Therefore, the construction of hierarchical system (HS) with its standard block 
aed (formal analog of two-level system) has been chosen as the theoretical basis 
for conceptual and detailed mechatronic design performing. Aed - ancient Greek 
28

are hierarchical systems and can be described by aed S 
structural connections and for the connections of system 
s S^ the laws of their coordinated dynamics, i.e. the dy-
word - is a standard element of design systems [3-7, 33, 49], which realizes the 
general laws of systems organization on each level and the inter-level connections.
The first version ofaed S^ model was described in [3-5, 33], and later in [6-8]. 
Aed contains all the characteristic features of two-level system [2] and also the 
following ones:
1) for inter-level connections modeling aed contains more levels, the block of 
environment s S ^ , in particular;
2) two-level system in [2] is not sufficiently formalized for measuring quanti­
tative characteristics and for investigating dynamic laws of hierarchical systems;
aed S ^ formal model is based mainly on the two particular cases - dynamic 
systems (p,p) [9, 10] and numerical positional systems ЛS by H. Lebesque [48].
3) structural connections in two-level system were explored only for the meth­
od of the general systems synthesis [9, 10], but the nature and the dynamics of the 
connections were not revealed;
connections in S
formal model; for S 
S ^ with environment 
namics of inter-level transition are defined;
4) the coordinator of two-level system does not change its own state; it is con­
nected only with the subsystems being coordinated and cannot construct or change 
the formal model of two-level system;
coordinator S0 of aed is constructed from the interactions of lower level sys­
tems coordinated and directly connected with the coordinator S0+1 of higher level.
The dynamics of S0 states was explored for four periods of time: Tp , Tp , 
, 
, 
, 
, 
,, 
, 
,
1p and T (T , T , 1p , T о T , T — time of level , ). The initial moment 
for each concrete system S ^ and its coordinator S0 is the moment tp = 01' о Tp . 
Moment tp is fixed when the elements Sp of level , p (, p < £) of system S 
have arisen. For time Tp, the formal model S , | T , allows the experimental check­
ing of its coherence only with the systems of lower levels , < , - Tp (Tp Ф 0) 
and cannot be coordinated with the synthesis laws of level , systems. It causes 
improvement of the model. During the process of system S , synthesis its coordi­
29

nator S0 begins to form and contain new system law SQ | TQ. Control of system 
S Q coherence with its model SQ | TQ and SQ | TQ improvement are the tasks of 
the self-organization layer of coordinator S0) .
In addition, aed S ) has some less important differences in comparison with 
two-level system. For instance, formal models of objects and their processes in S) 
are not coincide, entities of coordinating signals and feedback signals were re­
vealed, etc.
Graphical image of any level ) mechatronic system S ) as aed is presented in 
Figure 3.1, where:
Qe Ls , Ls - numerical positional system, defined on the multitude 
Lp = {p'-^ p 
)}, QeL, L — multitude of levels indices, I- finite multitude
of indices on level )(i, t,v e IQ );
oS) is mechatronic object, X ) is input, Y) is output of object oS) ;
®yQ ^ {k {X, C, Y} : ke L}^ — interactions of mechatronic system SQ with 
other systems from its environment 8 SQ, and kek L ^ {o,on,n8,8} are indexes 
of mechatronic object (o), its process (on}, process performer by MS environ­
ment (л8), and environment itself (8) respectively.
{ n S) ,8n S) } are processes, and onS) is the mechatronic process which ob­
ject oS) performs in its environment 8S) , n8S) are actions, which environment 
8 S ) executes with object o S ) ;
S‘-1 = {Si 1 : i e I‘} and nS1“ =jnS/-1 : i e I} - families of subsys­
tems, connected in S) by interconnections .Y'oj’ ={a^i i e Ie} and 
correspondent sub-processes;
C( о CQ“1 = {С^-1 : i e I(}- control signals from oSQ 1 to onS Q 1;
Z1-1 = {Z/-1: i e 11}- feedback from onSe~1 to oSe“1; Z1-1 c Z1 с X1;
S 0) - coordinator;
y^ eT^ - coordinating signals from Sq to subsystems S -1;
WQ о {W^ : i e Iq } - feedback from subsystems S Q“1 to coordinator Sq ;
30

ya е Г1+1 о X1 - coordinating signals for system Sl;
wa е Wl+1 о Yl - feedback from S0 to coordinator S0+1 of higher level. 
Aed Sl is a system which has the following characteristic features:
- environment E S l contains a set of systems of level l е L;
- it is possible to present Sl as object oSl, its interactions with £ Sl cre­
ate a higher level system;
- process ^ Sl contains both the actions o~ Sl which the object o S l per­
forms in environment £ Sl and actions ЕЛ. Sl of environment system £ Sl 
with object o S l ;
- dynamic realization of Sl in Sl is defined by aggregated model 
^ ° {a~,S 0}l , al о {{o a, onO>}, ЮУ,{ПЕ(О,Е(О}}} , where o®, X> and 
o^a,^ea are aggregated dynamic models of object oSl, environment Sl 
and their processes 
Sl , 
Sl respectively;
- structure a1 contains the lower level systems S l-1 with their interac­
tions ayl which create coordinator S0 and in this way connect al with al: 
al ° {So, er}l, al ° {{{ai :i е I}l±r :т е L },a/У ;
- the task of coordinator S0l is to create not only systems S l but also 
(partly) higher levels systems; for solving this task coordinator S0l constructs 
the informational models of concrete systems S1 (l е L); the models are con­
structed from the elements of interconnections of S with other systems S1 of 
level I and must be coordinated both with S and higher levels systems;
- incoherence of the models with concrete systems causes a change of the 
abstract informational model of S l by coordinator S0l .
Definition 3.1. Mechatronic system Sl is expressed by the next aed formal 
system:
Sl o { a,S0 ,a} , 
(3.1)
31

where CO is an aggregated dynamic realization of any level f e L mechatronic 
system in its environment s S , af is a model of the system Sf structure, S0 is 
coordinator, f - index of level, f e Ls, see Fig.3.1.
Fig. 3.1. Structure diagram of aed - standard block of HS. So is the coordinator, bS is the environment, 
Si are subsystems, S are subprocesses, nSl is the process of level f, X and Yl are the input and output 
of mechatronic system Sl; ci, zi, у, wi, ui, y are interactions
3.1.1. Aggregated dynamic realization
Taking into account the necessity of creation of the external functional representa­
tion of any mechatronic object being designed, the aggregated dynamic realizations 
for the elements of aed construction are built in this Section. Reaction 
oRf : Сf x Xf ^ Yf and dynamic realization ор,ф/ of mechatronic object 
(MO) OSf which is described by the ratio oS1 о X1 xY1 are constructed by the 
method proposed in [9]:
o (p,?)': op‘ = {o Pt: C x X, ^ Y & t e T)', 
(3.2)
oy1 = {on,: Ct X Xt, ^ Ct, & t,t’e T & tXt t}', 
32

where Tf is the time of level f, reaction p, state transition function ф, and time 
interval tt ’.
Model of actions, i.e. processes o,Sf which object OSf performs in envi­
ronment e Sf changing its own state сf e Cf differs from the model 
o p, p ) of the object:
- 
object of initial states ,Cf of process o,S'' coincides with the object of 
inputs Xf;
- input , Xf of process o, Sf is defined by states сf e Cf, their altera­
tions are control signals to process o, Sf .
Taking into account the differences, dynamic realization , (p,p)f of mecha­
tronic process o,Sconnected with op,pУ is presented in the following way:
o 
.&,p) : «f = {o.Pt : Xt X Ct ^ Yt & t e T}, 
(3.3)
o 
. p f = {o, Ptt' : Xt x Ctt, ^ Xt, & t, t'e T & t’> t}.
The expression for o,(p,p)^ shows that the input of object OSe is defined 
not only by the environment £ S' but also (partially) by system Sf in process 
o, Sf , i.e. Sf can form its inputs by itself.
Actions e, Sf of environment system e Sf with the object OS' are also 
formalized by dynamic system , (p, p )f :
„ (P,P)': »P' = {„p, : YtXSc, -+ Xt &t e T}', 
(3.4)
.f' = {, Vtt■: Y, xs Ctl^ Y,&,, t' e T & I '> t}',
where C^f is both the state of environment E Sf and inputs of process « Sf;
Ytf is the state of environment process , Sf, tt’ is a time interval.
Aggregated dynamic models of actions , Sf ={o, Sf,, Sf} of systems 
oSand £ S1 are defined as ,(p,p)f:
33

* ipv )X ={ , p,y )X, ЕЛ ip, ф)х }.
(3.5)
The model of environment E SX of system SX is presented as follows:
e р,ф У : Epx ={Ept :E Ct xE Xt >eY, & t e T }X, 
(3.6)
EVx = {Eptt':ECtxEXtt'—e ECt’ &t,t'eT&t' > t}X.
The coherence condition of constructed models with concrete mechatronic 
systems were regarded. As stated in [9], for reaction family 
p = {p : Cf x X ^ Yt & t e T} coherence with the time system S с X x Y it 
is necessary and enough the execution of the following conditions [9]:
(T1) (V с ДУx )(VXt )(Bct )[pf (Ct, xt) = po(c x ° xt )| T\ ], 
(3.7)
(T2) (Vct)(Vxt )(3co )Ox )[p(ct, xt) = po (co, X ° xt)T ] .
Time system is called a dynamic system only when it is possible to find both 
the reaction family p and the family of the state transitions ф coordinated with 
the system, and all functions фи, satisfy the conditions (i)-(iii) [9]:
(i) pt(ct,xt)Tt'= pt(vtt'(ct,xtt'Xxt'X xt = xtt° ° xt'; 
(3.8)
(ii) Qtt'(ct , xtt') = Vt-1' (фа-(ct , xtt- X x"t' X xtt' = xtt- ° xt-1';
(iii) Vtt(ct > xtt) = ct ■
The coherence conditions similar to (Tl) and (T2) (3.7) for the object reac­
tion o p are presented in the following way:
^ 
^\Г X/X 
X/X 
X t 
X\|'7-’/
(оT1) (Vc 0)(Vx )(Vxt )(3 ct )[ opt (ct , xt )=op0( c o, x ° xt )| Tt ] ,(3.9)
( T2) (Vc 1 )(Vx1 )(3c 1 )(3x1 t)[ o((c 1 x1 )= o( (c 1 x1 t ° x1 )lT1 ]
(A A (Vct )(Vxt )(ZIco)(ZIx )[opt (ct,xt )=opo(co,x ° xt )|Tt ].
The conditions for o^p, EK p, Epare constructed similarly taking into 
account the meanings of states, inputs and outputs in the dynamic representations 
of processes o^ SX, Er SX and environment E SX (3.3-3.6). The meanings are 
34

presented in Table 3.1, where TEX' and TEY' are parts of EX' and EY' im­
mediately not dependant on S'.
Reaction families op1, oEp , !Ep , Ep are coordinated with OS> , 
oE S', EE S' and E S' only when corresponding conditions (oT1, oT2), 
(oET1, oET2), (EE T1, EE T2) and (ET1, ET2), which are called coherence 
conditions of CO1 and S1, are realized.
Conditions (i)-(iii) (3.8) for function otp1 of states transition are presented as 
follows:
... 
fz f Мл/ 
f/f/ff\f\
o(i) o Pt (ct , xt )|T = opt (oVtj (ct , xt' X Xf) , 
(3.10)
.'t;
f 
f
x, = x . °x.;
t 
tt
f x f f \ 
f x f x f f \ f \
.(11) оф .(c t , X .)= ф-.(„ ф "(c t , X "), X "'), 
°Ttts t ’ tt ' о Vf t \o Vft \ t ’ tt 
11 7’
xf 
tt =x - 
tt
(> , о о x о
o(iii) oVtt (ct , xtt ) = ct .
° xtt
Table 3.1. Connections of states, inputs and outputs for oSl, o„S£, El S£ and ES£
aYl
Cl
X1
y£
„S'
Cl
X1
y£
SI! 
on S
X£
C£
y£
E Sl
teX£ X Y£ =eX£
Cl 
E^
teY£ X X£ = eY£
E Sl
Cl 
E^
TEXl X Yl = EXl
TEYe X Xе = EYe
The conditions for oлф£, ^p£, Eq>f are constructed similarly taking into 
account the meanings of states, inputs and outputs (Tab. 3.1) in the dynamic repre­
sentations of o^5^, s.S£ and ESe (3.3-3.6).
So, the following qualities of the model being created and correspondent defi­
nition were formulated. If the coherence conditions of ^ with Sl and conditions 
35

o((i)-(iii)) —ffl((i)-(iii)) are realized, systems o(рф)£, o£(p,ф)£, ^(р,ф) and 
,.(р7фare dynamic.
Definition 3.2. Set of dynamic systems {(р,ф)£, рф)£, ер,фУ } con­
nected by connections 0 7 £ and the creating system S£ (coordinator) are called 
dynamic realization 01 of hierarchical system of any level £ е L:
0 £ >{ {{o 0 o^ ('А-ы, 7,{~:: 0,£ 0}/ , S o } > { 0 £ , S 0 } .
Where a>£ is presented in the following form:
0 > {{o 0,ол0},07,{л:е 0,e0}} '>'
> {{ы 
- ,{0■ :т е Ls ,7 * 0}} > {{0' :
and k0£ is as follows: k0> > k(p,ф)', kеkL > {o,ол,ле,:}.
Thanks to the strong connections of 6У£ components through their inputs, 
outputs and states, the ability of 0£ reconstructing from its parts as well as calcu­
lating unknown parts from its known ones was obtained.
The following relations are revealed. Process n S= ={o£ S- ,s^ S} } bonds the 
systems OS£ and £S1. Dynamic realization 
^(p-ф)£ ={ Оя(р,ф)£,
:r (р,ф)£ } as well as 7уare the relations of models др)ф )£ and (Ар>ф>)£ 
in ~£. The difference of (р,ф)£ and o(рфф)£ models (similar to £р>ф>)E
and (p (p,ф)f) is caused by the fact that the processes, i.e. actions, have their own 
sense in the coordination tasks described below.
With regard to the constructed dynamic realization of the system being de­
signed, the main three tasks, which coordinator S£ performs in 0( are singled 
out:
on selection layer S£ receives the coordination signals 7^+1 from higher lev­
el and forms feedback signals w++1 by the way which takes into account the run­
ning level of information uncertainty in 0£ model;
(3.11)
(3.12)
: 7 е Ls Ad},
36

on learning layer S0 adapts models a0 to concrete system S 0 and makes 
concrete the parameters of abstract system a 0 components (removes the uncer­
tainty);
on self-organization layer S0 can change model a0 and both ways of its ad­
aptation to concrete systems and feedback signal w0+1 forming, i.e. the ways of 
solving the tasks of choice and learning layers.
Models o(p,p)! , Др,<p)0 and s (p,p^f are constructed from the infor­
mation about interactions ay0 of system S0 with environment ES0 and can be 
+ 
+ 
+1+ 
C’0+1 
0 
0 0 00+1 
0 
0
obtained by coordinators S0 , S0 and S0z, i GI (S0i ^ £ S ). Therefore, 
coordinator S0) of each system of level 0 can predict changes in system S0+1 
and in part controls them, performing in this way the functions of coordinator 
S0+1 of higher level 0 +1.
Aggregated dynamic realization a0 of each system S0 is constructed from 
the elements of this system by the laws of level 0 . On the other hand, a0 is 
formed from connecting elements of system S0 with environment e S0, i.e. from 
the elements of other systems of level 0 , and contains information about the indi­
vidual characteristics of these systems. Therefore, a0 begins to reflect the general 
laws of higher level systems S++1 and can, therefore, be regarded as a part of 
coordinator S0+1. In this way coordinator S0 is connected with S0+1 and contin­
uous connection of discrete level is obtained.
3.1.2. Structure
The model of mechatronic system structure is introduced for the construction de­
scription of an object being designed. The structure is defined as follows.
Definition 3.3. The next formal system is called a structure a0 :
a0 ^ {S0, a0}, 
(3.13) 
37

and <~0 is as follows:
&1 ^ w\c>: i g I }te :т g Ls}, &y} ^ {{&e±T : т g Ls}, ш "±0/,(3.14) 
where:
S0 is coordinator,
Ш ±Tt are aggregated dynamic models of subsystems,
S т = {S/: : i g I т}, т g Ls,
& уa are connections of the subsystems,
&У1 
у±tt ={юу^ : i g Ie±} .
&0 is the connection of dynamic systems 0± ±±T and their interactions 
&ycoordinated with у= = &y'±TS1 . The dynamics of structural intercon­
nections &y0 illustrates the dynamics of system S 0 organization from moment 
O' g T0 
M ^ . у/ .
Aggregated dynamic models Ш 1 are formed both by coordinators S0~^ of 
systems S ^~1 and coordinator S0 of a higher level, i.e. Ш^-1 are the interlevel 
connections of coordinators S0 and S0 1.
3.1.3. Coordinator
For the description of the design system and its functions in the design process the 
model of coordinator is constructed in this section. The first version of the model 
was initially described in [3] and later improved and presented in [4-8,49].
Coordinator S0 is the main element of hierarchical systems which realizes the 
processes of mechatronic systems design and control. It is defined in the following 
form in accordance with aed representation (3.1).
38

Definition 3.4. The following system 50 is called a coordinator:
S0 ^ { «,S0 a}0 , 
(3.15)
where: «0 is aggregated dynamic realization of S0j,
a0 is the structure of S0 ,
S000 is coordinator control element.
That is S0 has own aggregated dynamical realization «0 and structure af0 . 
S00 is defined recursively. Coordinator constructs its aggregated dynamic realiza­
tion «00 and structure a00 by itself. The development of coordinator formal model 
on each level 0 e L goes from its initial state S0 ^Г^, from moment
00 e Ty = Tt0tо T0 simultaneously with aed formal model S0 |t^ develop­
ment for level 0 .
Dynamic realization «00 of coordinator S00 is constructed from the infor- 
00 
mation about its interactions « у0 with coordinator environment s S 0 :
«у0 = { X0 , ay0 , Y0 }= ay0 7 , T e Ls , T * 0 
(3.16)
where X00 is input of S00 , Y00 is output of S0, a y0 are structural connec­
tions of S00 .
With this aim, the inputs, outputs, both structural a у0, and external « у0 
connections of coordinator were defined on the sets of its coordination signals G0 
and feedbacks W 0 as follows:
X0 ={ G0+1, W0 }, Y, ={ G0, W0+1}, 
(3.17)
J_<w< _0 
„,0|0-1 
< 0+ +1 0^ w++h - 
„Z0|0+1
аУ0 ={ W , a , G }= №У0 
, { G , a , W } = №У0 
, 
39

where: G£ - coordination signals for systems S £ 1, W£ - feedback from S £ 1 
Wt+1 - feedback from S( to coordinator S(+1 of higher level, Gt+1 - coordi­
nation signals from S( +1 to S(0.
The meanings of у0 and wt were revealed. For each moment t e T0 coor­
dination signals y£t e G0 contain the forecast of meanings of structure at pa­
rameters for period Tt t:
Tt = {a e\Tt 1 }0.
(3.18)
t
Feedback signal w£t e W£ transfers to coordinator S0 the actual values of 
all the parameters of structure a£ T £t as well as predictions of a£ Tt£ made by 
the coordinators of systems S £ 1 of lower level:
wtt = {a0 t 0t, a0 Tt0}-1
(3.19)
It is shown, that feedback wt contains the analogue of coordination signals 
у0, i.e. each coordinator S( 1 of lower level I-1, being the part of coordinator 
S0) can fulfil its functions, as stated above.
Signals у0+1 and w(t+1)t of higher level t +1 were presented just as in 
(3.16-3.17):
Tt +1 _ {a +1 t +1}0+1 
w(t+1) t = {a£+1T(t+1) t
t-++1 
, a
Tt 0+1}0. (3.20)
The availability of coordinator control element Sg0 allows evaluation and 
changing of coordinator Sby itself. Let:
A <> t ± t, y <> A ± rv, % <> y ± t%,
(3.21)
V <> % ± Г. , 
? <> V ± T ? ,
L <>{A,p,%,V,?...} .
40

Then S00 opSq & P s Lp; 
PS0 
is contraction of system Sp on the
S1 :PS0' O S7S1 and
’S, о{’d,'S0,CT} 
, 
(3.22)
vS0 о{ dS0,сту ,
*S0 о{ DS0 ,ст} 
, ...
Systems PS0 are strata of coordinator S0 and P is the outlook in the level 
space. Structure of coordinator S0j is presented as a multi-strata hierarchical sys­
tem in agreement with [2]. Functions of each stratum are formulated as presented 
below.
The main design task is performed on the selection stratum ’S0 when the 
strategies of ’S0 (processes o’0 ) connect the structure dynamics ст 'l and 
ст++T with using d P . Coordinator S0 produces actual values of coordination 
signals G++1, G£ and receives feedback signals W£, W++1 on its selection 
stratum. The ways of generation and receptions of signals (coordination strategies) 
depend on coordinator state C0 and state s C0 of its environment e S0. For each 
way there are several levels of information uncertainty and system S , organiza­
tion.
The information uncertainty of S,0 increases with the distance from , . Every 
level pl of uncertainty on every strata P S0 has its own coordination strategy. 
The change of strategies o^S0) is executed by learning layer VS0 (the moment it 
can do it) and it is controlled by the following (self-organization) *S, stratum. At 
the same time the outlook in the level space extends from ’ O± ± тл to 
y O ’ ± i rp. Uncertainty removal in S0 outlook is equivalent of system or­
ganization increasing (the increasing of interactions level), when ’S0) realizations 
are united and multiplied by PS1 (P > ’), which realize the level increasing pro­
cess in hierarchic space S ) .
41

£
0 of the
On the learning stratum coordinator S £ changes the coordination strategies 
removing in this way uncertainty and improving the organization level of system 
S£ . In case when the formal model of aed S£ T£ for level £ is known, the task 
of uncertainty removing is reduced to the task of selection of a concrete variant of 
the formal model which is used for generating signals G£, W++1 and receiving 
information G£+1, W £ .
Formal model S£ T ' is constructed on self-organization stratum '- S, 
coordinator, i.e. this stratum can change the state of both learning and selection strata.
Therefore, the coordination strategies on selection stratum correspond to the 
coordinator S0£ reactions for different states, and the functions of learning and 
self-organization strata correspond to the functions of states transition.
££
Aggregated dynamic representation 00)i} of coordinator S 0 is presented by 
analogy with (3.11) as follows:
£ 
£ 
£ 
~£ 
£
®0 o { {{o &o,ox°0},or0,{xso0,so0}} , S0 } o {o0 ,S0} . 
(3.23)
Where o~0 is presented in the following form:
o£ ° {{o a0,ox^ul’aT 0,{xso0, s°0}}£ ° 
(3.24)
О {00±0 T',{O± : г eLs.г * 0}} О {{o0± : r e Ls},a/}£,
and ka>0 is as follows: k000 o k(pp)0, kekL o {o,ox.xs,s}. Here 
o (P,p)0, x (p, p )0 ={ ox fa^b , sx (pp )0 } and s (p,p )0 are dynamic real­
izations of coordinating element oS0, coordination process x S0 ={ ox S0t,
sx Sfj} which is decomposed into actions ox S0^ which element oS0 performs 
in its environment s S0£ and actions sx S0 of s S0£ with coordinating element 
oS0), and the coordinator environment s S0) respectively. Each component of the 
dynamic representation (3.24) are described just as in (3.2-3.6):
(p, p)0 : p0 = {p01: C01 x XQt ^ Y01 & t e T}£, 
(3.25)
p0 = {o p0 tt' : C01 x X0 tt' ^ C01' & t, t 'e T & t ’> t }£ .
42

The connections of states, inputs and outputs of coordinating element OSJ, 
processes nSQ and coordinator environment sS0 are shown in Table 3.2.
Table 3.2. Connections of states, inputs and outputs of coordinating element oSf, processes *Sf 
and environment s S0, of coordinator
X0
Cf
Xf
Yf
oS0
C1
C 0
C1
C 0
Yf
Y 0
S„' 
on S 0
yf 
X 0
C1
C 0
Yf
Y 0
S f 
sn S 0
Yf 
Y 0
c 
sC 0
yf 
X 0
S f
s S 0
c 
sC 0
X
s X 0
Y £ 
sY 0
Dynamic realization o0 of coordinator is defined on its structure aQ which 
contains a set of coordination strategies { pf } and their connections {pof }, i.e. 
coordination subsystems (p, p)Q in S0 .
Coordination strategies are realized through the elements of coordinator sub­
systems S0 T,T e Ls,i Ф 0 of lower levels which are connected by aY0 . In 
other words each strategy has its own structure which is improved in accordance 
g
with the changes of the organization level of system S and of the level of infor- 
g
mation uncertainty of its coordinator SQ . 
g
Dynamic model Oq is the initial stage of future investigation of coordinator 
g
SQ and is still not concrete enough.
The next step is the introduction of the states space structure on the objects of 
g
initial states of model 0J() components and the transition to the canonical model of 
the coordinator.
g
Canonical model DQ :
fl Z ч it Z * 2 A f z ~ 2 \ f /Л 1 \ f 1 of > Z 4 ~ ~ f of 1 
ZQ tzi
D 0 ^ {{ o ((P, Л )0 , я (P, Xo, s (P, A )0 }, S 0 } ^ { D 0 , S 0 }, 
(3.26) 
43

is constructed on the basis of multi-layer system conception [2], where functions 
{ (р0 } correspond to learning and self-organization strata and functions { Л0 } 
correspond to coordination strategies on selection stratum. The run of the process 
of canonical model constructing is described below in Section 3.2.
3.2. Canonical model of coordinator
To describe the dynamics of both mechatronic object being designed and its design 
system, the different states of system S f and its coordinator S0 canonical model 
are defined in this Section. The descriptions of the states are presented for different 
moments of time, which correspond to the consequent stages of mechatronic sys­
tem creation and elimination of information uncertainty of its coordinator. For each 
state of the system the most rational design and control strategies of coordinator 
are formulated as presented below.
The initial moment of both system S f of level f and its coordinator S0}
arising is t = 0f = tf e Tf ( Tf is time of level f), when at least one system 
f
S f of level f f (f f e L, f f < f) appeared. Index щ corresponds to the low­
est organization of systems of level f .
The initial period of S f and S0 is the period of time Tf = Tff? о Tf , 
where tf is the moment, when the set of elements S are united in system S X 
X
of level f X , f X = f f +1.
For the moment of time t e T?f о T f :
formal model of aed is defined by contraction Sf Tf = S ' f and its con­
formity with concrete systems is approved experimentally for levels f < f f only;
concrete bearers of formal model S^f are systems S X ;
44

synthesis laws of level £ system are unknown but can be defined by the ex­
trapolation S I y |t£ =y S£;
the form of representation of coordination signals у£ е Г£ and feedback sig­
nals w£ е W£ is system y S £ ;
£
system S T£ 
ТУ
is in the state of the weakest organization (the difference
^У = £ — £ y between system level and level of its elements runs up to maximum);
coordinator S0£ Ty is in the state of the highest uncertainty of information;
signals у£ +1 еГ£+1 and w£+1 е W£+1 should be regarded as undefined be­
cause system S£+1 is unknown.
The most rational coordination strategy for such conditions is the coordination 
£ 
£ 
o£o£,„
of interactions when coordinator S0 
allows the systems S y to make a free
£ 
£ 
-£,.,
choice of concrete parameters of interactions my y and, consequently, any dy­
namic realizations (~ £y of systems S £y and its any allowed combinations ст£% .
From moment t£ to t£ (t£ , t£ е T0 = T £ 
о T£) system S£ achieves
/v 
p /* p 
Sv 
t/ ,tp
the state of partial organization. Moment t £ can be fixed when at least one system 
/
S£/ of level £/
( £ % = £ — %/ = (£ + 1)y) reaches the state of complete organization. t£v is 
££
the moment when system S T ( £ ^ = £ — ^p = (£ +1)%) has been formed.
££
For this period of time T coordination strategy in ст is evaluation of in- 
%
£
teractions. While realizing this strategy coordinator S0 defines the coordination 
signals у£ for each new system of level £ by bounds of concrete values and 
standards with the evaluation of belonging to this standard state. Coordination sig­
nals у£+1 and feedback signals w£+1 are formed in T £ by the coordination of 
%
interactions on level £ +1.
45

For the moment tS (И e TA = T C c TA, tA e TS = TA c TA) struc- 
У x А ф ft, 
S A A t 
'
t 
ty, t A 
a A
ture a A of system S A becomes sufficiently organized and S A is regarded as
system SAA of level A ( A = = A = (A +1)y = (A + 2)% = (A + 3)у).
For moment of time T^j, c TA :
formal model SA goes to state SAA a of full certainty with laws of level A of 
synthesis of structures a A ;
concrete bearers of SASa are systems SA ;
the synthesis laws of level A systems become known, and the laws of their 
functioning in SA+1 are known with the accuracy of parameters concrete value;
the form of coordination signals у and feedback signals w representation 
is determined system S ' A
£_ о £
T =A S ;
.. • 
........ 
y . 
о A y _ . 
„ 
. 
,, 
_£
it is possible to find the range of systems S ф sufficiently organized by a ;
coordination systems S 0 are in the state of minimal information uncertainty; 
formal models of systems SA+1 and S0+1 are realized in states ySA+1 and
yS0+1; models of systems SA+2 and Sq+2 are in states %SA+2 and %S0+ 
accordingly; systems у SA+3 and у S 0+3 have been formed.
Coordination strategy in structure a A in this case is interconnections prediction.
For the period of time Tf = TA , which begins from moment t , the task of 
t
-£ , • • . , . .. • , . .
SA TA changing is the task of higher levels.
Summarizing, it should be pointed out that on each level A e L the formal 
model SA is consecutively changed from state у SA to states % SA , y SA, S SA 
and the following quality 5T is true:
46

( S T)
K
e/М 
л '1 
Tt+l\s> tMr 
X+3^ TZ+A^(3 27)
S |T = tfS &Эt fit =^t eфТ fit = xt eXT )t =yt e^T 
)&(3.2I)
^(s * T м = ^s ы )& (s * т 2 = xs £+2 )& (s * т м =w s м)],
where symbol p means the lowest certainty (highest information uncertainty) of 
the corresponding value, and symbol A means the highest certainty.
Abstract system 5T ={ ^ S^, x S^ , yS, yS^ } of states of formal model 
S^ codes the multitude of ways of information representation on each level
I e L and is the basis for canonical model of coordinator S0 .
3.2.1. Presentation of coordinating element
Similar to aed dynamic realization (3.11), which was constructed for mechatronic 
object, its process and object’s environment, the coordinator dynamic realization is 
constructed for coordinating element - design system analogues, coordination pro­
cess and environment of coordinator. The process of the creating of canonic 
presentation of coordinating element is described below.
The canonic representation is constructed on the external interactions ш y0 of 
coordinator. The external connections ш у0 of coordinator S0 depend on the or­
ganization level of mechatronic system S and information uncertainty of its 
coordinator S0 .
First, the following mapping is marked by symbol T R as follows:
TR : aY0 >T' . 
(3.28)
After that, the introduced equivalence relations Er с шу0} x ay0:
( ffl/01, aY02)e Er ^TR( шУ01 )= TR( шУ02), 
(3.29)
make it possible to construct the following multitudes:
47

у) 0) |Ey “{ ц/m y0 , %m У 0 , pm V0, 
.'0}, 
(3.30)
where утУ(°, %ту0, раУа and Ла)У0 are equivalence classes of coordinatorS0
connections by uncertainty levels of information.
Equivalence classes for coordinator states c01 e C0t are introduced to con­
struct the state space of the coordinator.
Set c) = U Cot and equivalence ratio are defined by the following expres­
t cT1 
~ ~~ ^ ~)
sion Ec c C 0 x C 0 :
(c/i,4>0 e Ec ^ 
(3.31)
«[(Vt e T1 )(Vx00)^ тR((oP0(c01,x0)|Tte)0)
=т R ((o pfQ( c02, x0') Tt) )0)]&
& [(Vt' > t)(Vx0tt ) ^ (o ф0м'(c011, x0tt')’ op0tt'(c012,x0tt' )) e Ec ].
~) ~ 
) 
)^ 
)^ 
)^
Factor multitude C0 = C0 |Ec = { w C0, %C0 , ^^0 , V^0 } is called the
states space of coordinating element o5>q , where ^C0), %C0>, pC0), ^C0 are
the classes of states equivalence of oSsq by information uncertainty levels.
The state transition function in the introduced state space C0 is defined by the 
next expression:
op>0tt' :(C0) |Ec ) x X0)tt' ^ (C0) Ec) ),
(3.32)
where op’Qtt'([ c 0],x 0 tt') = [ op>0tt( It([ c 0]),x 0 tt')], and It : C0 Ecc ^ C 01 such 
as:
It ([ c0 ] H
c 01 & c 01 e [ c 0 ] П C 01
I c 0* eC0t & [ c0 ] n C0Qf= 0 ,
(3.33)
where CQ* is an arbitrary element from state space C°t, It is mapping.
48

-)
The composition conditions (i)-(iii) for function o Ф0tt‘ are presented similar­
) 
7X
ly as for conditions (3.10) for function o Ф .
Т-Ч 
. 
. C- . • n .... 
Z^) • 
, 1- ,i 
11 
• n
The output function for states space C0 is presented in the following form:
j) 
~ (f)£\fr 
)) 
~ ~ )
o Л)t : (CC 0 |^C ) X X 0 ^ Y0 ,
(3.34)
Л 
74
1 
Y ) • 
• 
, 
1 1 
1 
~ Y ) • 
, 
, 
1 1 
1 
, ) C1 
1,1 
П11
where: X 0 is input alphabet; Y0 is output alphabet of S0 , and the following 
quality is true:
3) /г )n Y 
Г 0^ / T /Г^Т\ \1 
/о oc\
o ^01([ c 0], x о) — [ o\) t (It([ c 0]), x 0 tt ')]• 
(3.35)
[]x I
Fig. 3.2. Commutative diagram of output o Af01 and state transition o <pl0tt functions
From the execution of the last equation (3.35) and conditions (i)-(iii) for func­
tion o (p0tt‘ it is presumed that the diagram in Figure 3.2 is commutative, and the 
following system:
o^(0tt : C0) x X0tt' ^ C0) , 
(3.36)
;^ 
~) 
~)
АЭ t : C 0 x X 0 ^ Y0 
o
49

is the canonical presentation of the dynamic system in the states space [9, 10]. In 
this particular case o (p), A) 0 is the canonic representation of coordinating element 
oS(} in the space of its states C00 .
After that, there appeared a possibility to consider the coordination ways [2,3] 
as coordinator reaction family o p0 or output functions o A0 defined on the con­
structed states space. Coordination strategies are realized on selection strata. 
Therefore, the formal model of selection strata is defined by family of reactions 
and output functions as follows:
, 
,^ 
,^ 
, ,7 
,^1
О P0 “I О P01 : C01 X X01 ^ ^01 & t G T } , 
(3.37)
T) 
i^C^ ~, 
~, 
, T£\
оЛ) t “{ О Л) t : C 0 X X 0 ^ Y0 & t G T } .
The family of output functions o 2i0, is decomposed by coordination strate­
gies in the following way:
i, 
, 
~i , 
~i ,
yo A0 t-y C 0 X X 0 'YY0 , 
(3.38)
i, 
, 
~i , 
~i ,
%O A) t : % C 0 X X 0 ^ %Y0 , 
~i 
~i
po A t p C 0 X X 0 
>pY‘< ,
~i 
~i
Ao A t :AC 0 X X 0 >aY0 ,
where ,/o A0t corresponds to the strategy of interactions coordination, %o A0t - to 
,
the evaluation of interactions, po A0t - to the prediction of interactions in struc­
ture O' ^ , and Ao yi0 t corresponds to the prediction of interactions in a ^ .
The change of coordinator states is executed on the learning and self­
organization strata which are described by functions of states transition o p0 and 
л, 
j- i
op0 accordingly:
, 
, 
,^ 
, Z~f, 
T"’,
op0 “{o p0 tt': C0 t X X0 tt' > C0 t &t t, t^ T & t> t}, 
(3.39)
o p0 ={ o p0tt : C0 X X0)tt > C0, & t, t ’G T& t ’ > t} .
50

Function o ф0 is decomposed into two functions - ^ ф0 and %o фQ, where 
ф ф0 performs states transition on the learning stratum, and %o ф0 - on the self­
organization stratum. So, only changes of coordination strategies are possible on 
the learning stratum. The form of their representation is fixed. On the self­
organization stratum the forms of information T ^ representation and processing 
ways can be changed.
3.2.2. Process of coordination
Dynamic realization a (р,ф )Q of coordination process oa SQ is decomposed into 
the model of process oa (p, ф )Q which the coordinating element performs in envi­
ronment s SQ and model t (~р,ф)Q of process by which s SQ constructs oSQ :
t (P,ф )0 ={ oa (P,ф )0 , at (P,ф)0 }.
oa (P,ф )O • oaPQ = {oa Po1 • X01 x C01 ^ Y01 & t T TF ,
= 
{oa ф0tt' • X01 x C0tt' ^ X01' & t, t,<E T & t' > t } .
= {aaP01 a X01 xe C01 PY*t & t T TF ,
= {at ф0tt' a X01 xe C0tt'^e X01' & t, t ' T T & t' > tF , 
where a X0 = { Y0 , taX0 } and aY0 ={ X 0 , tP 0 }• taX0 and TaY0 are com­
ponents of inputs and outputs of coordinator environment a SQ which are con­
trolled by coordinator SQ only in part.
Each of the above models is also decomposed into two ones. Dynamic realiza­
tion oa (р,ф )Q is decomposed into the processes in a and ® and aa (р,ф)Q 
into the processes of coordinator SQ construction from lower (from a ^~T, t > 0) 
and from higher (from a^+t, t > 0) levels:
(3.40)
-t 
o~p0
at (p,ф )0 • at Po
—t
at ф0
51

on p,P )0 ={ on p,P Yq ^ ' , on p,P Yq 
T }, 
(3-41)
en (p, p К ={ en (p,p-~T , en (p,p)0/£+T }-
The states of process on SQ are inputs X£ of the coordinator and the process 
inputs are coordinator states C£ . For the coordinator environment process sn S£ 
the inputs are states e C£ and the states are outputs Y£ of the coordinator.
To construct the canonic presentation of the coordination processes, the clas­
ses of equivalence - similarly as for the levels of information uncertainty - are 
obtained by the restriction of interactions ту^1Ey on X£ and Y£ respectively:
y£ / г — Z X //.' 
Г/ У£ — / у£ у £ у £ Y£ 1
X0 /Eyx ( mY01Ey )' X 0 
{ ц/ X 0 , % X 0 , <p X 0 , Л X 0 }, 
(3-42)
y£/r 
= Z 
v£/r А/У£ = f y£ y£ y£ „у/г
Y0 / Eyy 
( mY 0 / Ey )' Y 0 
{ X 0 , %Y 0 , pY 0 , /.‘ 0 }-
It was found out, that from quality 5T (3.27) follows, that the states of pro­
cesses of levels £+ + т and £/ - - т for т = 1 are changed with respect to one 
another and as the result corresponding coordination strategies are also changed. 
Canonic model for coordination process on SQ is described as follows:
/д J\£/£—1. 
л£/£—1 __с 
л£/£—1 . /т~£ / г \ x/ 
~ ~££ /77 м /iqa
on (^P, ^)o 
: onp0 
={ onp0 tt' 
: (W / Eyx ) ^ C 0 tt' 
^ (W / Eyx )},(3-43)
— . л л 
л Z) / Z) 1 
f) f) Л 
0 
0 
0
on^^Q /£—1 ={ o„4t £~1:(^W£ /'-) x C£ ^ G£}.
Canonic models for processes n S£/£+1, sn S£/£-1 and ^^ S£/£+1 are present­
ed in the same form (3.43). The meanings of states, inputs and outputs of the coor­
dination processes are presented in Table 3.3.
52

Table 3.3. Connections of states, inputs and outputs in canonic representation of coordination 
processes of different levels
M Y0
C1
X1
Y1
q) / /-1 
on S 0
W1 /!-.
'•~ /
C 0
G1
q) //+1 
on S 0
Gt+1/ E-
~ /
C 0
W~1+1
q) //-1 
ы S 0
Gl /Ey
~ / / /-1
C0 0
JW0
o) //+1 
ы S 0
W0+1/ Ey
~ ///+1
C0 0
G1+1/ Ey
It was pointed out, that models ы (p, /) 0 are controlled by coordinator S0 
only in part, because they contain components not fully defined.
For the description of coordination processes on different strata, the states 
transition functions of oS0 and e S0 on the learning stratum, which change coor­
dination strategies n / , were marked by index p :
'’■//•'’■/'’■/ч
ynp ~p{onp ,in(P } . 
(3.44)
The functions of states transition of process n S0 caused by self-organization 
of coordinating element o S0 were marked by index x; functions, caused by self­
organization of coordinator environment e S0 - by index у:
/ / 
/ / 
/ /
4'7~P" 
{7”~ p0,Wsnp0}, 
(3.45)
7onP ={ 7nP ' 
xpnft ' 
} ,
WBtP ={yPP01 -.xP ! ^+1}.
Formal models of the processes on selection (n/l(/ ={on/,ы/ }), learn­
ing (^pf) and self-organization (^7^p>i)) strata are constructed in the way 
similar to the corresponding models of the coordinating element (3.37-3.39).
53

3.2.3. Description of coordinator environment
are in direct contact with coordinator S0 of level 
Srespectively) and form its environment E S0 .
i+1
The development of the model of coordinator environment E S0 is conducted in a 
similar way as that of the coordinating element, bearing in mind the following facts. 
Coordinator S0i of each concrete systems Si being designed is the connecting unit 
of lower i — T, T > 0 and higher i + T, T > 0 levels. For T = 1, the both coordina­
tors Sо 1 and coordinator S0+1 
i (trough ai and (Ш = ai +1
Coordinator S0 connections with other coordinators S0i-, i e Ii+1 of level i 
also go through its structural elements ш i and a i , in other words, trough higher 
and lower levels:
шг0 =U0/M,&i,ai}^Y0/i—1},
(3.46)
aT0/'' = {Gi+1,ш,,W'+1}, шГ0/£~1 = {Wi,a,,G}} .
Therefore, canonic representation of coordinator environment E (ф, A)0 is 
decomposed into two classes of models:
— л 0 
~7~ л 0 ! 0 i 1 
“ л 0 ! 0 1
0\i  С /А / \i / i+1 
S 
i \i / i—11 
/о /I '7\
s (<P, A)0 =U ((P,A )0 
, s (<P, A)0 
}, 
(3.47)
and their states spaces were marked as sC0/i+1 and ^Cо/i—1 respectively:
eC 0 ={s C 0 / i+1,EC 0 /i—1}. 
(3.48)
States space sC0i of coordinator environment sS0i is constructed just as the 
states space of the coordinating element (3.31) in the following form (3.49):
i ~i 
i 
i 
i 
i
EC 0 sC 0/ Esc \yrsC 0, XEC 0, фЕ C 0, Ae c 0} 
(3.49)
The elements of the abstract systems ^C0 ={E C0/i+X,EC0/i—1} given in 
(3.48) form represent the following states. sC0i / i—1 represents the states of system 
structure ai e Si and EC0i / i+1 represents the state of aggregated dynamic real­
54

ization (O' e St of the system being coordinated - designed and controlled. Their 
connection is defined as follows by the law aoT which arose from 5T (3.27):
(„ T) 
{[(о ‘\р - ,o1) =• (3t")(t" - t“)&( t" - <“)&( t" - (“)] ^
=■ (a‘ |т/ - :r.a1)} &
+ 
^-a^/ziJv; 
+ +T -
(3.50)
' 
++2
~ 
++3
w г гл,-- t- — ^-a zzuv? — t+i\Srrt — t+2 а я? t l — t +jYi
& {[(° T ^° ) ^ (3t)(t tA )&(t tty )&(t t% Л ^
^ (a1 T = at)}.
Law aoT represents the connection of structural elements О- and a- of 
coordinators 0 , in other words ao Tcoy 0 . ao T means that that level of in­
- 
.■ 
„t 
- 
_t 
„t
formation uncertainty in a is higher than the one in О ; a becomes suffi­
ciently defined only when system S++1 of level t +1 becomes sufficiently de­
fined.
As a result, coordination signal у++1 e G++1 and feedback w++1 e W++1 
become determined for S0, when the system of a higher level has been formed. 
This definition is relative because of the synthesis and functioning laws of systems 
of level t can change the higher levels.
Canonical representation a) ^ 
ified as follows:
ot n 
<■ 
■ 
, ft ■
E S о of coordinator environment E S о is spec-
s (ty, A)0 : 
> =G фОм :£ C0 xTotr ^s Co' & t,t'e T1 & t'> t}, 
(3.51)
11 _<■ ;^ rt v~~. ~t Яг-t^rG 
sA0 -Is 001-E C 0 x Yo ^ X 0& t e T }-
Decomposition of states space ^Cot into ^C0/++T and EC0/t T resulted in 
the corresponding decomposition of canonical representation s (<p, A )0 . For 
T -1, the decomposition is presented in the following form:
гл Tat/1-1.
E (<P, A )0 
:
■yt /1-1 _( t//t-T ft /1-1 
act- 
t/t /-1 
tt
Е<?0 
-{.еФОtt' 
-E C0 
x Gtt' ^E C0 
& t, te T & t > t},
55

— . . л л
£ / /— ~ 1 
( л£ / —~1. £/£ / —~1 
~£ I 
~ ТТ7 I о £ у»£ |
ЕЛ0 
={SX0t 
-S C 0 Х G ^ W & t 6 T } ,
(3.52)
гл зч£/£+1.
s \SP, X)0 
■
f t/£ +1 _i f £/£ +1 f/£/£+1 
tj/£+1 к г х/£+1 w # #< £ т^ я7 г п
s<Pq 
={.Ф0 tt 
-s C 0 
Х Wtt 
>s( 0 
& t, t ' T & t > t},
T£/£+1 
f £/£+1. r£/£+1^T~£+1 
~ ~£+1 B 
, . .
sX0 
={sX01 
-е C 0 Х W ^ G & t e T } .
are decomposed in the same way as for co­
- 
. 
. 
..... „,£
£ 
£ £ / £—1 
, 
Л £ /£+1
Functions s X) 
and s Xq
ordination strategies (3.38) and define the formation ways of feedback W£ and 
coordination signals G£+1 under conditions of different information uncertainty 
indexed by ^L ^ {X,ф,X,y\ . The states transition function S(p£) , similar to 
o ф)) and я ф) functions, contain two strata - learning ( ^.ф^ ) and self- 
£ £ 
£■ 
£ ~z£
organization (^.ф0 ).
The task of the self-organization stratum ^.ф() for coordinator environment 
S SQ is to change the level of system S£ from £ ^ to X x = £ . The task of self­
organization stratum хоф() of coordinating element oSQ is to install the struc­
tural connections ¥£ (¥£ = a£ (S£ )) of formal model S£ T£ for level £ , in 
£ f _ e£ + 
o'
from V S0to X S 0.
other words to change state S £ T
The structural elements of aed formal model S£ are its basic terms S£, SQ , 
a£ , a£ , л S£, £ , etc., which are at the same time connections in S£. For ex­
ample, system S£ connects S0}, a£ and a£ ; coordinator SQ connects a£ and 
a£ in S£ ; dynamic realization at£ connects S Q , я S£ and S S£ ; process 
яS£ connects systems oS£ and S S£ , for which nS£ plays the role of their 
interconnections; oS£ and S S£ are the environment for n S£, and processes 
ол S£ and OT S£ are structural elements of я S£, etc.
56

Each structural element of system 5£ \T £ must be defined on self-organization 
stratum of coordinator 50 by its formal model, i.e. by aed 5£ T£ . In aed model
the following components must be indicated: aed structural elements (with their 
_£
dynamics) and their connections, i.e. structure a of aed, its connections with
£
£ of
other elements of 5£ in general model 5£ T£ , i.e. dynamic realization a
7 
1,1 
. • . • 
7 
I' 
d 1 ■ 1 
1 £ 
.1
aed, and the restriction on aed coordinator 50 which defines the ways of concreti- 
zation of both a£ and a£ .
T-1 
1 
1П 
• 
. 
. 
v , 
n 
,i
In other words, on self-organization stratum coordinator 50 performs the sys­
temic analysis of each element of formal model 5 £ in terms of this model and 
synthesizes the abstract system 5£ T£ . In this way 50} controls the conformity of 
the system model to the laws of synthesis and functioning of an traditional concrete 
system of level £ , which is created by both coordinator 50 and environment s 5£ .
3.2.4. Performance of the design task of mechatronic systems
Design tasks of mechatronic systems and control process are distributed on coordi­
nator 5 £ strata: selection, learning and self- organization (self-coordination). The 
task is partially described in [49] as well.
On the selection stratum at t e T moment of time, predicting the environment 
systems states for moment t'> t, coordinator defines correspondent inputs and 
outputs of the system being designed and creates (p, ф)£ models of the system 
and its process using the obtained predictions. After that, coordinator selects such 
states of subsystems and their interactions which correspond to the standard state 
of system 5£ required for t' , i.e. performs the task of structure a£ synthesis of 
the object 5£ being designed.
The synthesis task is formalized by introducing interlevel relations on infor­
mation resources of abstract aed model У = '/£, x ^a [3, 49-50], where '!£, is a 
£ 
. 
£
relations net on the multitude of dynamic systems (p, ф) , Фа is an analogous net 
of relations a£ x a£ with the types of structures a£. xPa contains, in particular, 
57

equivalence relations on structure a1 types by the connection defects, construc­
tive dimension and way of subprocesses organizations (continuous, parallel con­
nections and feedbacks). Adaptation of structural model a1 to the concrete appli­
cation area, i.e. mechatronic system design, is executed by the indication of con­
crete external model a E Ч',,, and class of structures which contains external 
models a ^-1 of elements (subsystems 5 ^-1) of system 5 under consideration 
being designed.
Structure classes - space of mechatronic system constructions - for the de­
fined elements basis correspond to a certain way of designed system functioning. 
Technical constructions for each way of functioning are selected by changing pa­
rameters of the designed object subsystems 5 M and their interactions o,mYl. The 
change of the parameters causes the change of external model of the mechatronic 
object. It allows finding out if the required state of designed object oS1 is obtained 
(analysis task). We return to the synthesis task if there is incoherence of the ob­
tained and standard states of the object being designed.
The choice of parameters of the designed object structure depends on the un­
certainty level of the coordinator S0 information about the environment e S ^ . For 
each level of information uncertainty the equivalence classes of the coordinator 
states in the design process are introduced. Each class of states of the coordinator 
has its own coordination strategy: coordination of interconnections, evaluation of 
interconnections and the prediction of interconnections (most exact) described in 
Section 3.2.1. Coordination strategies (3.38) are realized on the selection stratum.
On the learning stratum the coordinator fixes the level of information uncer­
tainty. It compares the data about the environment systems received by the feed­
back and the same data contained it its informational resources (data bases). In this 
way the required area Y of informational resources is defined. In the frames of this 
area the selection of required technical construction of mechatronic object will be 
done. Corresponding state of the design process (coordination strategy) at the se­
lection stratum is also defined.
Information resources Y of the coordinator are changed in the design process 
on its self-organization (self-coordination) stratum. The reason of the change could 
be the absence of coherence with the real mechatronic systems model in infor­
mation resources Y. The criteria for including a new model into Y is the exactness 
of the solutions obtained with the help of the model.
58

3.3. Metrical characteristics of hierarchical 
mechatronic systems
Structural-dynamic connections of 5', S', a', G', a> ', Л Т, m^ elements of 
formal model S' of aed - the standard formal element of design and control sys­
tems - realize the main laws of hierarchical systems. Numerical characteristics 
necessary for further investigation of the laws and quantitative measurement of 
particular mechatronic systems being designed are introduced in this Chapter. All 
numerical characteristics of hierarchical mechatronic systems are determined be­
low by the means of positional numeric system Ls .
3.3.1. Levels of mechatronic systems
The most general numerical characteristic of hierarchical mechatronic systems is level 
t G L, where: L G L, Ls is numeric positional system (generally with an unfixed 
base), specified on multitude Lp = {t p : t p = (t, It) & t g L & It о L}, L is 
the multitude of indices of levels, It is the finite set of indexes on level t , the base 
on each level is marked by symbol цt, цt g N+,N+ is the set of natural numbers.
L is determined as L = {t} = Lp\E', Eare relations of equivalence on
Lp x LP:
(V£p, tp)(t'p, tp G Lsp)[(t'p, tp) G Et ^ t' = t"]. 
(3.53)
Abstractive mapping is marked with symbol R :
t R : S' ^ L, t R :{a, S 0, G1} ^ L, 
(3.54)
which sets correspondence of mechatronic system St and the index of its level. 
For dynamic O' g Q£ and structural G1 g Ъ1 representations, the reflections are 
defined as follows:
at R : Q' ^ L, Gt R : Ъ1 ^ L. 
(3.55)
59

To determine dynamic Q/ and structural E,’ presentations as the restrictions 
of Q/ and E/ at time TtP : Q= = ^ Qp , ~= = ^ Ep , the following definition 
t ёТ 
t ёТ
was made.
Definition 3.5. (i) Space of dynamic realizations Q R of hierarchical mecha­
tronic system on levels , e L is called a factor set of system Q, = QJ' \e®, where 
E(m are the relations of equivalence on fle x Q':
(Va/,^2)(ap ,®2 eQe)[(ap,®2) eE®^,,R(ap)=„,R(«2)]. 
(3.56)
(ii) The space of structures of hierarchical mechatronic system on levels 
e e L is called factor set E = = ~\е& , where:
~\J 
E / АГ/'—t —-t\ e zr/ ' Ч p/_t\  /?/у-т-,\1 
/о -x'7\
(Vo1 ,o2)(o1 ,o2 e E )[(o1 ,o 2) e Eo OotR (o1 )=ot R (o 2)]. 
(3.57)
Systems S/ and S/ are considered as equivalent by their level independently 
of the equality of their bases rf and Ll': . In other words, the might be systems 
with different bases on one level. Equivalence Ep is determined on Lsp x Ip 
for their classification:
V(t'p,tp)(/'p,tp e Lsp)[(tp,p) e Ep о (tp = p)]. 
(3.58)
Spaces Qp@ and Ep are constructed as factor sets Qtp = Qe |E(aP and 
E^ = EP Epp by analogy with Q / and Ep as follows:
(Vap, a2)(a1P, a2 e Qt )l(a|! , a2) e Q/p ^pmtR(a1 )=pmtR(a2)] ,(3.59)
/ _/\f _/ _/ E E / ArfxT-t xr-t e 
/
(Vo1 ,o2)(o1 ,a2 e E )[(o1 ,a2) e Etp ^potR(OI )-potR(o2)] , ....
patR : Qt ^ Lp, potR : E P ^ Lp.
Validity of property ^ for state space C follows from 5T and r R :
(/T) 
(tR(S)) = tA о cёёл C))& 
(3.60)
60

& ( R R (S£) = £ v ^ c ■ v C £ & ti =0?)&
& (RR(s°) = i% ^c£e%C£ &t^ =0?)&
& (iR(Si) = iW ^ cW Ci &t% =0?).
Property ^T connects the values of the level of mechatronic system S£ with 
values tL ^ {W,Х,Ф,i} of the levels of system organization and coordinator’s 
S0) information uncertainty. T means that each mechatronic system S£ 
spreads at least over three levels up and down in L . The levels’ indices in interfac­
es with natural languages may be replaced by words (machine part, module, ma­
chine, etc). Levels on which the reference models introduced are adjustable (by the 
change of parameters) to any system of this level are called strata.
Levels {w, %,ty, i} in 0)0) are called:
^ 
_1„,i _,i + l 
..) 
,..i+1
- the levels of information uncertainty - for signals / , / 
, w , w ;
- the levels of system organization - for coordinator’s environment e S0j .
Levels {w, %, ^, i} also encode output functions i0 as coordination strate­
gies on the selection stratum of coordinator.
3.3.2. Numeric positional system
Formal models of aed and coordinator, as a theoretical basis for the design method 
proposed in the book, are constructed with the help of their most important particu­
lar cases - dynamic system (^>,ty) and numeric positional system L . L allows 
determinations of level to be easily introduced.
The dynamic systems are algoristic and sufficiently investigated. But for nu­
meric positional systems there is no formal model in spite of its big importance in 
numeric information processing.
Numbers in a positional code are usually presented as polynomials, which are 
not in coordination with most characteristic features of Ls , i.e. with the realization 
of interlevel transitions in aggregated presentation of numbers. So, addition of 
numbers in a positional code usually leads to the degree of the result being higher 
than that of the items. This is impossible for the group of polynomials of degree n 
which are closed with respect to the addition operation. Furthermore, system Ls 
61

can’t be formalized by the means of any other one-level mathematical model ei­
ther. Being hierarchical by nature Ls is formalized only in terms of hierarchical 
systems theory.
It is sufficient to examine model Ls for one standard block which is repeata­
ble on each of its level. This block is constructed on the following basic system 
~ £
Y T :
~£ 
l~£ 
~£ ~£ 
~£ ~£ 
~£ ~£ 
~
yT <>A = лт ,<p =q)r ,% = %~ ,у =у~ j, 
(3.61)
I r"-'O C\r"-'O i •••/’ I I 
0 
0 
0 I
л£,ч|—л£ U £ £ + £ £ 1 . £ £ / £ 
\ £ ~ £ / 
/i\£>
A < A , A , A )>\A,y,%,у) ,~ ,(у,%,y,A) j, 
' £ 0 ~£ 
£’' £ 0' £ +' £ 
£ 
\ 
•' £ £ 
£
~ > A > ~ , ~ , ~ Jo^o,%,у) ,% ,(у,х,ф) j, 
~£ 
0 ~£ 
/-~£ 0~£ +~£^ 
fz 
£x£ ~£ ™ 
ч£ I
%<0~£ <( % ,0%£, +%£b < j(%,?)£,?£,(?,%) j, 
+p 0~£ I---£ 0 ~£ +-- £\ f--- £ 0 ~£ +-- £ I
'/"<0%£ <>( ~£,0~£, y£X </,</, '/"j,
(A, ^, %,V) =( A, ф, %, у) ,
(у, %,y, A) =(+ у/,+%,+ ^,+A).
The meaning of symbols {A, ^, %, у} in TT £ is coordinated with the mean­
ing which they have in canonic model a)0 of coordinator, where X is the index of 
the most organized system, ф and x are partly organized ones, ^ is an unorganized 
system. Property £TY (Fig. 3.3) sets connections between systems yT ^ , yT1^, 
Y T ^ and Y T£ A (£ A =£ , £^ =£± 1, £% =£± 2 , 
=£± 3). The whole
system yT£ turns into the neutral element A ~£ +1 e yT£+1 of the higher level. 
Element A ~£, which is the connection of positively and negatively oriented ele­
ments A ~£ and a ~£ is decomposed into elements of level £ — 1 in yT£ .
+ 
+ ~£ 
~£
Bilateral symmetry of elements г- T and z T (where i^ L = {у, %, ^, A}) 
corresponds to the direct and reverse states transitions of system S£ in self­
organization cycle.
62

Diagram r^ (Fig.3.3) is in coordination with ш^¥ and ^ . When struc­
ture <y£ is in state X, i.e. the system has level £ ^, aggregated dynamic representa­
tion d£ (for t£%+1 = 0?) is in state ф (level £P). When the state index of <y£ is 
equal to ф (level £P) and t^+1 =0 ?, the index of ш' isx, etc.
o^:
(p x x P) “
(A p x)1+1
(x w w x)ы
(x p A) “
(A p x)£
(ф x x ФУ
(x P Л)£
£-1
(A P x) -1 (x w w x) 
(x P x) ‘^1
(P x x P)£-1
~ ~ ~ 
~ • 
~ 
~£i
Fig. 3.3. Scheme of inter-level relations 
, ioT L = {w, x, P, A}
It is shown that Figure 3.3 is analogous to aed S£ model in its canonical 
presentation. The arrows illustrate the elements’ inter-level connections which go 
through coordinator S0. System dynamics on each level is specified by the se- 
+ + 
+~ 
+ 
+,~ £ 
+ ~ £ + ~ £ + ~£
quence of transitions from w to x , P , A and vice versa, which is for­
malized by canonic model d£ of coordinator.
The change of states {w, x,P, A}£ of level £ of system Ls£ from the state of 
absolute information uncertainty and the weakest organization w£ to relative de­
terministic state Л£ is accompanied by alteration of Ls£ characteristics of its 
higher and lower levels. The relations between the values of numeric characteris- 
s s s££ 
tics of L for different levels are determined in the following (3.62) form.
Here 1£ is a unit of level £; diverse levels have their own bases ^-1, ц£, 
^£+1, ц£+2, ц£+3 are not necessarily equal. Unit of level £ is regarded as 0,!'
63

on level f and unites l = 10 units of level f-1. Each system Sf is connected 
f
through interactions ш у with the other systems of level f which create environ­
ment s Sf of system Sf . a)vf is called a prolongation of system 5f in its envi­
ronment s S f and marked as S f : S f = a)v f .
()
Л 
t 
1f
I
10f—1
Ф
Ф
= 0,^ =
^ ( Lsf)
/+2
Л
Ф
0,0Г2 =
w
Ф
0,001м
(3.62)
a * (LS (f-1))
System Lsf of level f with its prolongation Lsf in environment s S f Lsf is
described and presented in Figure 3.4.
s f
~s 1
X1
+^-i 
i L0
T—
1
1
+ ~ f—1 
iTA,0
+ 
i
1 О
1
0~ f—1 
iT^,0
0 ~ f—1 
■ T ~ 
i l~
— ~ f—1 
iT0
1
1 ~
— ~ f—1 
iT^,0
— ~ f—1
T ~
i l
Y f
~ f—1
y(Lsf, Lsf)
~ f—1
Fig. 3.4. System LS and its prolongation LS in environment s S£ |L5f, where: /~/ 1 - element of
k number of basic system T f 1, i - index i'eT L = {iy, у, ^, Л}; y(LS , LS ) - interaction of 
rS f ~ ~S£ 
systems L and L
64

Theoretical construction of aed-processor which is oriented at the processing 
of numeric and geometric information of mechatronic system being designed is 
defined as a structure of three connected levels of system Ls^. Construction of 
aed-processor is presented in Figure 3.6.
For system L1 in Figure 3.4, ц1 elements of the lower level are determined 
on multitude ^T-1, the base of system Ls^ is equal to ц£ and sometimes may 
not coincide with ц ^ (ц1 characterizes the quantity of Ls^ connections in 
S S£ Ls£). Elements of Ls1 are transferred by system Ls 1 to the other systems of 
its level. In particular, the whole system L s1 can be transferred to only one system 
Ls^, i G I^+1. The relation of Ls^ and Ls^ systems goes through element ЬЦ^“1) 
= L^(^ 1). Number Ц ^ defines the address of interactions ~ (Ls^ , Ls^) in Ls^ , 
which is coordination signal у1 Ls for system Ls^ .
Fig. 3.5. Connection of discrete elements of system Ls continuous in time, where: S0 | Ls - coordinator 
of Ls; SC0 | Ls- states of coordinator environment [140]
65

s ~ s sS f ~s К ......... . 
. . 
. 
. 
. 
. 
. 
.
System { L , L } in its initial state contains non-oriented elements only. The
s s 
s 
s s 
s s 
s s 
s s sSI
uniting of elements with different orientation which come to the input of L gives 
a non-oriented element again. When the quantity of elements with the same orien­
tation is equal to ^ , signal w'+1 |ls (unit 1 of level , , i.e. 0.1 of level € +1) 
goes to higher level 1 +1 informing that system Ls has passed into its organiza­
tion state X, see (3.61).
The further process in Ls is illustrated in Figure 3.5 and described as follows. 
Being in its organization state X (3.61), each system Lis gives its prolongation
~s 
s 
s
Li to system Li+1 and after that Li+1 begins to receive the inputs of level (in 
the moment of prolongation transfer it may occur that L~is contains a certain num­
ber of elements with the same orientation). In this way, discrete systems 1У and 
L(i,t g I++1) become continuously connected.
Fig. 3.6. Aed-processor construction, i.e. three connected levels of L , where: x^, y£ - inputs 
and outputs of level ^ ; if^ - element of basic system T [140]
66

It is necessary to point out that information for higher levels is aggregated and 
the sizes of units of different levels with equal bases are equal.
Each level in Ls has its own inputs and outputs o у£ |l?£ . Interconnections 
myl |LS£ of system Ls£ of level £ go through structural connections ay LSS 
which connects elements Ls(£-1) of system LS£ . The connections in LS have all 
the features of the process of addition in column. When one unit of the higher level 
goes to the left, part of the sum stays in its position in L~S£ for the following addi­
tion operation.
The change of states (2,ty, %,у)l of system L£ is executed by its coordinator 
Sо LS£ through states transition function ^0LS e co0 LS (Fig. 3.5). For the con­
nection of Ls with the fields of real (K1), complex (C1) and with hyper-complex 
(Z1) numbers the multiplying operations on corresponding contractions of l/7T £ 
are considered below.
The multiplication in the field of real numbers is determined by states transition 
function r (<p0LS)*^r(*) (Tab. 3.4) on contraction r^T£ of system ^T ~ :
r'-‘ 0 
•—' _ I •—‘ 0 
_ 0 I •—‘0
RyT£ ^ {-2 ,~p,+2 }&~~V2 ~
(3.63)
where p£ plays the role of zero, and + 2 are the units.
Table 3.4. Multiplication in field of real numbers Rw
Cl
X1
-2
Ф
+2
-2
+2
Ф
-2
Ф
Ф
Ф
Ф
+2
- 2
Ф
+2
Table 3.5 of function of states transition C(*)^C(<P0 LS)
defines the mul-
' /1
f) 
f_ л _ I 
I л !J
£ 
-- 
++
tiplication of complex numbers on the contraction CV1 ^ { 2, ^,%, ^, 2}
67

of system ^T1, where ±Re( 0е )=+ Ap is real and ±Im( a е )=+ (p е is imaginary 
part of the complex number, %l ^ 0е is zero, and aе e Се .
Table 3.5. Multiplication of complex numbers C'"'
\C 1
X l^4^
_
X
_
Ф
%
+
Ф
+X
_
+
_
_
X
X
Ф
%
Ф
X
_
+
_
_
Ф
Ф
X
%
X
Ф
%
%
%
%
%
%
+
_
+ .
_
+
Ф
Ф
X
%
X
Ф
+X
_
X
_
Ф
%
+ 
Ф
+X
Table z(") of hypercomplex number multiplication (Table 3.6) is plotted for 
the example of quaternions (their contraction on the positive area). The table is
XX 0 
p~^ 
p~^
1 е 
1 
iiii 
'/ 1 е . . ~_ p _ 
- га _i_ pp> _i_ pp>_i_ pp> _i_ p -4 p 
1
defined on multitude 
ZV1 ^ {A, p, x, p,?,+ p,+x (,+л}е, where
pе 
„/ 
± pe 
± 
± pе ± pе ±,pе
?е ^ 0е is zero; A are positive and negative real units, and ( , x , p 
are imaginary units.
Table 3.6. Multiplication of hypercomplex numbers Z'"'
C1 
X1
?
V
+x
+(
+A
?
?
?
?
?
?
V
?
A
(
+x
+V
+x
?
(
A
V
+x
(
?
X
+ V
+A
+(
+A
?
V
+x
(
+A
Tables of any numbers multiplication are particular cases of <rT diagram. Its 
fragment is reflected in Figure 3.3.
68

The multiplication law of any elements of system z^T~ (Table 3.6) is im­
plemented as follows:
- index 4 e {Щ, %, Ф, л} of state element -Г C defines Г in the initial state 
of system (/T0X, where (conditional) the origin of coordinates is лт X ;
- index i of input element -~X (coordinating signal) identifies level 
zx e {^, Х,Ф, л} from which system f/ will be considered, i.e. identifies a new 
origin of coordinates;
- -~ X elements in new coordinates are transformed into other elements T*, 
i.e. their indices change, which is illustrated by ГГT diagram and multiplication 
tables r(*) C (*) , Z (*); the process of indices transformation runs in such a 
way that the results of any table line cannot be the same for any other line.
x 
i 
x 
~> 
~ e— t X 
t X + t X^ 
—— t X 0 t + + t X л
For instance, when system R J ^{л T ,v T , л T } ^{л T , л T , л T } 
is multiplied by ЛT ,, its state does not change and both elements лT X (unit) and 
Ф~X (zero) stay in their places. When й(|/ f' is multiplied by ^~X, index Я of the 
origin of coordinates goes into ф, i.e. ф is replaced by Я, and vice versa Я is 
changed by ф (element (pr X on level X ^ comes into л~X and л~X comes into 
ФT X).
It should be pointed out that for the multitude of real numbers in Ls code, 
r (*) table is insufficient and a diagram similar to z(*) is required. The diagram 
is also a particular case of X ГТ . For instance, the real and complex numbers multi­
plication in Ls positional code (which may be also reduced to addition in Ls ) is 
obtained from frT by the following way. The addition of ^ (u = 10) real units 
Л~X 1 of level X — 1 is equivalent to multiplication ЛTX 1 * ^X, i.e. 0.1*10 or 
multiplication +aT X 1 *&T X+1 of units of levels X — 1 and X +1 .
Both indices X — 1 and X +1 of units of level Я are equal to ф and these units 
+ 
1 
1 
+~ X—1 +~ X +~ X+1 +~ X
for X = Л can be recognized as imaginary ones, i.e. л = 
= yT , л = 
= yT
and imaginary numbers + ~ X *+ ~ X are multiplied.
69

The result of multiplication in both cases is unit \~€ of level € . Its sign - the 
symbol of direction in vi - is plus for the case of real numbers, and minus for 
imaginary ones. The connections between the real numbers and imaginary units у 
and x are explained by analogy.
Therefore, in numerical positional system Ls the fundamental difference not 
only between integer and real numbers but also between the real and imaginary 
ones disappears. The difference between adding and multiplication is also lost. 
A real number could be obtained by the addition of imaginary numbers if levels in 
VT€ are taken into account.
The example of arithmetical operations in Ls is reflected in Figure 3.4. When 
on level € — 1 there are elements with the opposite orientation with respect to the 
unit of level € , the unit is decomposed into ft€ units of level € — 1, which are 
later united with the oppositely oriented elements, as a result of which the neutral 
ones are obtained. That number of units of level € — 1 for which there are no oppo­
sitely oriented units on level € — 1 and lower levels becomes a numerical charac­
teristic of level € — 1 with its sign.
To summarize the presented description of numeric positional system Ls , the 
following characteristic features of the system were underlined and it was pointed 
out that properties tTT, €ftT which reflect both the structure and dynamics of L 
on its different levels and interlevel relations do not have analogies in the known 
mathematical models used for mechatronic system design. For instance:
- discrete systems of each level € in Ls are connected in such a way, that the 
system of level € +1 becomes continuous;
- 
the interlevel transitions are also continuous;
- 
information for higher levels is aggregated;
- 
systems of any level € in Ls can be divided;
- relations of real and imaginary numbers in Ls were assigned not only by 
multiplication but also by structural and dynamic uniting of canonic states;
- block of coordinator Sq|L sets values ft€ of the basis on each level of L 
in the process of its adjustment to concrete systems with a natural basis, e.g. meas­
uring systems of time, length, etc.
Therefore, the formal model of standard block Ls€ of system Ls can be con­
structed as aed formal model contraction S€|Ls = Ls€ only. Models of numerical 
s€ 
systems in terms of algebra and automata theory are particular cases of L , which 
70

is caused by the ways of its formalization [3,8-10]. The system for geometrical and 
physical objects measuring in H. Lebesque theory [48] is also a particular case of 
Ls.
The possibility of physical realization of Ls arises from its coordination with 
natural processes of calculation performed in positional codes. That possibility is 
partly illustrated by Figures 3.4-3.6 in which Ls is reflected by analogues of mod­
ern calculating machines.
3.3.3. Measuring units of mechatronic objects
To introduce the measuring units of hierarchical mechatronic objects, the following 
definitions are formulated. Previously, it was pointed out, that states of mechatron­
ic system 5' are indicated by symbols of Ls, i.e. they could be of different levels, 
orientation or neutral on each level. Their interlevel dynamics is defined by scheme 
It T (Fig. 3.3).
Definition 3.6 (i). Any neutral state ict[ e i C , , where t'] e T is the minimal 
element of T' , is called initial state i / ' (the unit from i о' for measuring 5)) 
for any period of time Ti£TT= = {T',T',T,',T%} of system 5'. Multitude
i 
Us 
Us 
f Ш
iH 1 ={i / l}^£iC1 is called the object of initial states for T ' .
(ii) For any period of time Te^ T' any neutral state ict eiC' is called the 
standard state, or measuring unit a', where t~ ' is the maximal element of T'. 
Multitude tH = ={. / f}^. C1 is called the object of standard states for T', ie L.
It follows from T (3.27) that the standard state of each period T' e^ T' is 
the initial state for period Ti^1 e^T ' : i+1H = = iH = = i H1.
Definition 3 7 Set f ft~' Sif ~'\ is called metrical characteristic if
ef^n‘loinii .. / . uei {if ('Is ,^ ),'ls } ^s cai^i mieiticai cinaraciersuc pi_, ,
7s
t 
i~(~' '^' 
' 
' 
' 
' 
' 
•''
5 = ц (/s, 5 ) of mechatronic system 5 in relation to standard ~s,, where
t f ~t 
• tU   
t t^ ■ t ~ t
1f (/s , 5 ) is the measure of 5 in units /s .
Metrical characteristic concerning the initial state is identified by analogy.
71

The representation of metrical characteristics:
i 
~ ~ i 
i\ 
i 
~ ~ i 
И-Х
aV = V (Ла, а ), mV = V (Лш, ш ), 
(3.64)
~ 
~ 
~
c V = V (~c , c ) , x V = V (~x , x ) , y V = V (~y, y ) ,
ш ^ = ^ (~Шх,/ ),
for rn^ or a' , states of object oS , processes „oS'', ns S^ and for environment 
e S^ , respectively, allows a range of state spaces to be constructed in addition.
Metrical characteristics V e Мг are dimensional qualities and are con­
structed from two elements, one of which - measure - is the number in L code 
and the other one is any unit of measurement.
It should be pointed out, that the metrical characteristics of object o S , pro­
cess „ S^ and environment e S^ are connected with one another by relations 
determined by aggregated dynamic realization Ш . Metrical characteristics aVf' 
and а/л(' are connected by interlevel relations realized by coordinator S00 . The 
connections for each particular mechatronic system are defined by its formal model 
S .
Preliminary conclusions
In Chapter 3, the element of theoretical basis of HS design method - the aed for­
mal model of coordinator - was constructed with the help of the dynamic system. 
Coordinator’s state spaces concerning the level of its information uncertainty were 
introduced. Canonical presentation of the coordinating element, the process of 
coordination and the environment of coordinator were built in the state spaces ob­
tained.
The design task of mechatronic systems is performed by coordinator on its 
strata by one of its coordination strategies. Strategies of selection strata were de­
scribed by the output functions of canonical model. Change of states of coordinator 
was described by states transition functions, which correspond to the functions of 
leaning strata (change of coordinator’s strategies) and functions of self­
organization strata (change of the state of the formal model). Coordinator actions 
72

while performing the main design tasks of mechatronic objects - synthesis and 
analysis - were described.
So, the model developed meets the requirements of the design systems formu­
lated in Introduction and Section 3.1 of this Chapter.
With the help of numeric positional system, connections of levels and metrical 
characteristics of the hierarchical mechatronic objects being designed were intro­
duced. The known numeric systems were subsequently described with the help of 
hierarchical systems. All this allows quantitative calculation on the space of levels 
of the designed mechatronic objects to be executed. Such a description causes real­
ization of coordinator in the form of the theoretical construction of aed-processor, 
i.e. cybernetic system oriented to numeric and geometric information processing.
Theoretical basis of the conceptual HS design method, i.e. aed formal model 
presented in this Chapter 3, was improved in comparison with its previous version 
described in [140], and has got the following additional characteristic features: 
general scheme of aed (Fig. 3.1) has improved so that system Sblock became 
included in its environment s S^; all elements of aed model were presented in the 
form of systems with correspondent indexes from the set kL О {o,ол,ле,е}, 
which indicate object (o), environment (e), and their processes (ал) and (ле); 
symbol presentation of systems connections was changed from aU^ to aу^ what 
made it agreed with presentation of coordination signals у0, generated by coordi­
nator while performing systems structures synthesis in design process by arranging 
subsystems structural connection; fundamental aed law of systems levels grows 
was modified by the law of systems outlook increasing in the levels space, i.e. in­
creasing of number T of system levels f ± т being coordinated ‘up’ and ‘down’ in 
regard with current level , of system under consideration; symbols set of levels of 
system organization T L and correspondent basic system TT were changed to 
^ L О {у, %, j, 2} and improved in such a way, that they become coordinated 
with coordinator canonic model (j), 2) and its reactions 2 and functions j per­
formed on selection and learning strata respectively. Furthermore, modified aed 
model presented in this Chapter was further improved. New aed formal model for 
systems design and control was presented and described by Novikava and Miatluk 
in [8], and used after that by Miatluk and Kim in [80].
73

4. DESCRIPTION OF THE DESIGN METHOD
The formal models of hierarchical mechatronic objects and coordinator given 
above in Chapter 3 are used in this Chapter for the description of both mechtronic 
system (MS) being designed and the design process itself. Each mechatronic sys­
tem can be presented at the conceptual design phase according to (3.1) in the fol­
lowing aed form (4.1) of HS:
mS1 ^m {), So,a}e , 
(4.1) 
where: m)1 is the dynamic representation of mechatronic system mS1 as a unit in 
its environment SS1, ma^ is the structure of the system mS1, mS0 is coordina­
tor, which connects mCT1 with n..)), m is the index which indicates the mechatronic 
nature of the object being designed.
The states of a mechatronic system in its )1 and a* forms are detected by its 
metrical characteristics. Aggregated dynamic (functional) representation of mecha­
tronic system (MS) is described in accordance with (3.11):
m a1 = m{ o (p. ФУ , „ fa ФУ , s (p. ФУ }, 
(4.2) 
where: o (p,V У — dynamic description of mechatronic object (MO) itself,
-(р.фУ — description of the mechatronic process (see Subsection 4.4.2), 
(p>, V У — dynamics of the MO environment (external representation).
An examples of the description of MO dynamics by o (p, V У is presented be­
low in Subsection 4.4.2.
Structure ma1 of mechatronic object is presented according to (3.14) in the 
following form (4.3):
ma1 = m {S0.{) ‘-', /„ }},
(4.3)
74

where о1 1 is a set of mechatronic subsystems of lower level € -1 and their struc- 
. 
, 
.• .Я
tural connections ya.
Coordinator mS0 is the system which sets the characteristics of mechatronic 
object elements and coordinates their connections by the sequence of operations 
and the decision-making actions, such as a choice of the decision and the construct­
ing of semantic net on the MO elements set. These actions include the operations 
of MO metric characteristics changing, operations with MO geometric elements 
structures and their connection.
So, to construct an mechatronic object it is necessary to define its structure, its 
function - aggregated dynamic representation as the unit in its environment, its 
environment construction and technology, MO coordinator (design and control 
unit), and their metrical characteristics.
The main design tasks - analysis and synthesis - of mechatronic objects are 
performed by coordinator mSOf on its strata (see Chapter 3) under conditions of 
different information uncertainty. m SOf creates the desired construction of mecha­
tronic object in accordance with its required dynamic functional representation in 
the environment (synthesis task). In its turn, it partly changes the structure parame­
ters of the resultant mechatronic object and analyses its behavior in the environ­
ment (analysis task). All the tasks are performed at both Conceptual Design (CD) 
and Detailed Design (DD) phases of mechatronic object life cycle using HS design 
method, i.e. coordination technology of HS.
So, the main steps of the HS design method realization are the following.
1) Conceptual model creation - description of the mechatronic object being 
designed in aed form of HS; aed is a standard block of hierarchical systems - for­
mal analogue of two-level system with dynamic units.
2) Representation of basic geometric elements (point, line, surface, 3D ob­
ject) of the mechatronic object being designed in the hierarchical form - condition­
al point, line, surface, 3D object.
3) Definition of metric and constructive characteristics - constructive dimen­
sion and connections defect - of the mechatronic object being designed in the 
codes of numeric positional system.
4) Realization of the design process of mechatronic objects - synthesis and 
analysis tasks performing - as the coordination process of aed.
At the first step of the method realization - conceptual model creation - the 
connected formal models of the mechatronic object structure, its dynamic func­
tional representation as a unit in its environment, the object environment and the 
environment processes are developed (see Chapter 3). Formal descriptions of ob­
ject-environment interactions, mechatronic object coordinator and its coordination 
75

(design and control) processes, processes executed by subsystems and general pro­
cess are presented as well.
At the second step, the representation task of basic geometric elements of the 
mechatronic object being designed in the hierarchical form is performed. The rep­
resentations of MO geometric elements in HS forms of conditional point, line, 
surface and 3D object are described in details below in Subsection 4.3.
At the third step, definition of metric and constructive characteristics of the 
mechatronic object being designed is performed with the help of numeric position­
al system Ls. Main numeric characteristics of MO - constructive dimension and 
connections defect - are introduced in Ls basis. Formal definitions of these charac­
teristics are presented below in Section 4.2.
At the fourth step - synthesis and analysis tasks performing - the conceptual 
descriptions of the tasks are presented first. The task of MO structure synthesis is 
given in the following form of the coordinator mapping:
51 Ю>e} ^ae
(4.4)
where MO structure ae which is synthesized from set of sub-subsystems S1 1 
presented in aggregated dynamic forms ю £~1 by establishing of the structural con-
..1 
11-1
nections a7 of these elements S .
1
The steps of the synthesis process л 51 are formally described by reaction of 
dynamic system (p, <p) :
{Pi: Ci x Xi ^ Yi & i e T}, 
(4.5)
where i is a time moment of the synthesis process, initial element (or composition 
of elements previously connected in the synthesis process) is recognized as state 
Ci, at the step i, element to be added to initial one is recognized as input Xi, and the 
composition of the both connected initial and input elements is recognized as out­
put Yi. The output Yi becomes the state Ci+1 at the next step of the synthesis pro­
cess.
The analysis task of MO is performed by coordinator and presented at CD 
phase in the following form of the coordinator mapping:
S О :{ю е~1,аГ1} ^ ^
(4.6)
In this task, coordinator partially changes the structural connections a71 of 
MO by sending its coordination signals to MO structure and observe the variations 
76

of MO behavior - change of MO functioning in its environment caused by MO 
structural variations.
While performing analysis tasks, e.g. kinematics and dynamics tasks, concep­
tual models ш ^ of MO are presented at CD phase in (p, ф)^ form. At the DD 
phase the conceptual models are concretized and presented in forms of DE, State 
Space Equations or algebraic form. The exemplary scheme of MO conceptual mod­
el concretization at the design phase of the object life cycle (Fig. 1.2, Chapter I) 
is presented in Fig. 4.1.
CONCEPTUAL DESIGN phase 2
II
Ordinary DE 
dy
a о-----h ai y + a 2 = u
clt 1 
"
I
Conceptual 
model 
( p, ф )
III
Concrete DE
Tm()) = j—m( ) + B^m(t) + TL(t) 
dt
DETAILED DESIGN phase 3
Fig. 4.1. Steps of conceptual model (p, ф) concretization at the design phases of MO life cycle; con­
ceptual model is transformed to ordinary DE at CD phase and concretized at DD phase by the exem­
plary dynamics equation of object being in rotational motion, where rn(t) is the angular velocity and is 
T(t) is a torque
Synthesis and analysis tasks of geometric constructions of mechatronic objects 
being designed are partially described in Chapters 6-8 as well. The steps of the 
above HS design method are described below in Chapters 5-9 for the cases of the 
exemplary mechatronic objects design tasks. The method is also partially regarded 
in [49, 51-54].
4.1. General geometric characteristics of mechatronic objects
For the description of geometric elements of mechatronic object construction at the 
second step of the HS design method realization the geometric information is pre­
sented according to (4.1) as a set of variables of three classes:
Z = {Z1, Z2, Z3 }={Q Г, S} , 
(4.7) 
77

where: Q = {^ :i g Iq }= Zi is the description of the state of geometric object 
(with the help of metrical characteristics Д which are the coordinates, length, 
squares, volumes, angles) presented in aggregated dynamic form ®£, 
Г = {Yi :i I Ir } = Z2 - is the description of geometric object interconnections 
£
m Y with other objects (boundary of the object defined by the coordinator),
E ’^, :i g 1 s}=Z3 - is the description of object structure о1.
Then, any geometric representation of mechatronic object is presented in form 
of relations S сОхГхЕ on the Cartesian product of variables Q, Г, E . Each 
class of variables has its own structure, i.e. there are the sets:
W1 ={Q W,r W,E W}, 
(4.8)
where: qW is the structure of class Q, r у is structure of Г class, and L у is 
structure of class E .
Besides, there are gluing relations W2 between Q, Г, E . The multitude of all 
the relations on Z is marked as у : W = { Wi , W2 } •
One of the relations from w is Г с E. That means that the boundary Г of 
each geometric object g S£ is included in its structure E • The boundary is the area 
of geometric construction gmS£ of mechatronic object mS£ interconnections with 
its environment s S£ (i.e. Г defines the location of gmS£ in s S£). Each y " Г 
corresponds to the coordination signal from coordinator gm S0£ to the object gmS£ .
Q£ is defined through the interactions of the geometric mechatronic object 
gmS£ with the higher and lower levels, i.e. measured with the help of its structural 
units to be evaluated in its environment, and, inversely, being a unit of the envi­
ronment, it is measured with the help of the other environment units. So, the higher 
and the lower level units for the object are its measuring units.
To construct geometric construction of mechatronic object gmS£ it is 
necessary to define all its variables д y, a In design task any subset of parameters 
from S с Qx ГхЕ must be initially defined. Other parameters are defined in the 
synthesis process (Tab. 4.1).
78

The unknown variable (which is not presented in Z ) is marked in Table 4.1 
by symbol ?. Definition of ? symbol is a task of self-organization strata of the co­
ordinator.
Taking into account the type of the design task and the knowledge level of the 
coordinator, gm!S 0 chooses the strategy of knowledge settlement, i.e. the algorithm 
of the synthesis process.
Therefore, the structure of the design process is defined by:
- the dividing of set Z into known and unknown parameters (inputs and 
outputs), i.e. the type of constructing task,
- by the geometric representation gmS" of the mechatronic object being de­
signed (concrete meanings of variables),
- by the uncertainty level of semantic net relations / (former design expe­
rience).
Coordinator 
S0 in this case plays the role of a system which defines the
characteristics of the elements set and coordinates their interactions with the help 
of a sequence of actions and procedures of decision making.
These action classes include the procedures of the changing of metrical character­
istics as well as actions with boundaries and structures of geometric elements of MO.
Table 4.1. Subsets of parameters Z = {t, Г, X} in design tasks, processes and semantic relations
Design 
process
Known 
parameters 
(input)
Unknown 
parameters 
(output)
Semantic net 
relations
Pnrr.S
А, Y a
S
/ |S
Prr.HS
Y, a
t, S
/rx,o|s
Pnr.rS
А a
Г, S
/KxjIs
Pr.nrS
a
t, Г, S
/х,яг^
Pnr.ES
А Y
x, S
/ЯГ,Х^
Pr.QES
Y
t, X, S
/r,Qx|s
Pn.rrS
А
Г, X, S
(/ЛХ lx|s
P?, nrES
?
t, Г, X, S
0, S1
79

4.2. Numerical characteristics of mechatronic objects
To realize the third step of proposed method, all numerical characteristics of geo­
metric elements of MO (mechatronic object) Sf are described in the work and 
rS
connected with the help of numeric positional system L presented in Section 3.3.
So, metrical characteristic f" G Mf (measure of length, squares, volumes, 
angles) is obtained in units T7f g Hf ={^ 7,x 7,^ 7,% 7}, presented in Subsec­
S S S S 
5,- ■ 
. 5 
,S
tion 3.3.3, with the coefficients from L :
~f f----f o~f 
+—f\ 
т~f f---- f-1 0~f-1 +— f-11 
~H-1 
z.
T~ =T( ^f^, +pf), 
To^ =T( ^ f^ 1, \u 1 )=T~ 1, 
(4.9)
1 
~,~ 
T ~ff 
o 
0~f 
+ , + ~f 
, 
~ ~f
where: TG^L , y - negative, Ц - neutral, Ц - positive parts of /Л ; unit 
0~ f
/./ is at the same time a unit of lower level f-1, etc. Numerical characteristics of 
system Sf organisation - connection defect kf and constructive dimension 8f 
were defined in the following way.
Let the object Sf and the reflection ^R:t Uf ^Sf be as follows:
Sf = ^ = (k, n)t :(k, n)t g L x N&k g L&n g N&N = N+ о {0}},
k R(tTf ) = (k, n t ,^ = f- f]« 
(4.10)
^
Л 
f) 
'fl
(Я»7' ^ar' )(«zf ={«/.':«R(«z/) = f}& n RQ,zf) = n
f 
-f 
-f 
f
f R:®r/ ^ L, n R:®/ ^ N, n - cardinality of ^/ , m Ti - intercon­
nections of Sf-1 in tf; N+ - natural numbers multitude, L g LS.
Then kt is called a connection defect of tf of order k and cardinality n, and
(Vf g L) ^ (kt GIk,Ik = {0,1,2,3}).
(4.11)
The locations of the defects in MO structure tf are defined by parameter 
k : 
kt,T :
80

f, r = (i,т \-к,т )о: 
(4.12)
(Vf£ > 0) ^ [(i, тf = |i, т) (i, т)e 1£ X1& &т Ф i& fR(//,r = - - = = f }]. 
For each system S£ of level £ e L the connection defect f in environment 
s S£ is called the contraction of connection defect f +T of system S++t of higher 
level £ +т , т e Ls on ay£.
rS
In the code of numeric positional system L the connection defect is defined 
as follows:
f£ =(n,...n0f f e{f,f}. 
(4.13)
The formal definition of constructive dimension and the ways of its calculation 
~ 
~ 
~ ~ £
are obtained from the definition of connection defect f .
Constructive dimension 3£ e Д£ of system S£ is called its numeric character­
S
istic, which is presented in L code:
3' =(n3...И0)з,3' e 33},(n)3 = (n3-i)f, 
(4.14)
where: (nt )s e N, i=0,1,2,3; 3® and 3^ are constructive dimensions of c£ and 
ш£, respectively. The instance of constructive dimension 3£ connection with 
Euclidean dimension is presented by Table 4.2.
~£ ~ 
,. 
~ 
~£
Table 4.2. Connection of constructive dimension 0 with Euclidean dimension
Constructive dimension
31
Geometrical object 
S£
0 0 0 1
Point
0 0 1 0
Line
0 1 0 0
Surface
1 0 0 0
3D object
Therefore, the described representation of geometric information allows all 
operations with graphic images in aed-processor (subsection 3.3.2) to be executed 
81

in the design process of MO as operations with numeric codes. It allows increasing 
the efficiency of computational processes while performing the design procedures.
Ls may be recognized as new coordinate space (hierarchic coordinates) which 
has not only habitual transformations of coordinates, but also dimension changes 
(in line with interlevel connections of real, complex and hyper complex numbers).
The records of ^ ^ and 5'" in Ls code allow carry out all Ls tasks with ^ ^ 
and 5'", and change the dimensions and connections of the units with changing 
their scales in T^. The actions with Q^ Y and 5^ 
are executed in the space of
Ls laws.
All geometric characteristics in hierarchical space are changeable. The chang­
es of construction connections in ст~T (changes in t'' T and 5^~T) cause altera­
tion of coordinates a ^ (the movements of Г^ in structure ст) and thereby chang­
es in the construction ст'"+T . Thanks to that a possibility appeared to design the 
connected motions and deformations of mechatronic systems on their different 
levels.
4.3. Hierarchical geometric representation 
of mechatronic objects
In accordance with the second step of HS design method, the following geometric 
elements of mechatronic objects (MOs) are presented in hierarchical form:
0
- points 5 ,
- parts of lines 51,
- surface S2 patches,
- 3D objects 5 3 .
The structure of hierarchical systems is introduced on the multitude of the 
structures of these elements E = {ст0, ст1, ст2, ст3} . Thus, it became possible to op­
erate in design process not with ideal mathematical objects but with their equiva­
lents - conditional 50 , 51 , 52 objects, which have all metrical characteristics of 
3D objects of 5 3 type.
82

4.3.1. Conditional point
The conditional point is described as follows. Conditional point S£, where level £ 
=0, is a minimal element of geometric representation. In comparison with the usual 
point it has all the characteristics of hierarchical systems:
S0 ={ a, /, ® }0. 
(4.15)
Conditional point 50 can be graphically presented by a cube, a sphere, a pyr­
amid, etc.
Metrical characteristics of a° (in case of cube) are: /7(0 - tops coordinates, 
$ - length of edges, ^0 - square of sides, ^0 - cube volume.
The conditional point has the following qualities.
It may be constructed from lower level units (also points):
S£ = {S1,S0,...,Sn,n e If-r, 
(4.16)
but graphically its structure can’t be observed. Points Si 1 of lower level £ -1 have 
the same type of structure but their metrical characteristics are smaller.
Each conditional point Si 1 can be in its turn decomposed into Si-2. The 
sequence of such decomposition operations leads to the ideal point with metrical 
characteristics ^10 = ^0 = A0 =0.
In comparison with the ideal point, the conditional one has more operations of 
coordinator: scaling (which does not take conditional points beyond their class) 
and level lowering. In addition, the points can be united into a higher level system. 
Thanks to that, it is easy to introduce the definitions of conditional line and surface, 
which have all the characteristic features of ideal ones, and in addition, have their 
own qualities.
As in the case of numbers, the point representation contains its positive (+), 
negative (-), i.e. prolongation, and neutral (0) parts. In the coordinates it was pre­
sented as shown in Figure 4.2. In the case of conditional point interconnections in 
the structure of higher level objects, the coordinates (directions of interconnections 
in Fig. 4.2b) are defined by the structural addresses of the other elements of the 
objects.
83

a)
b)
у°,
^1°
<0
5
5 0
+
+
+
Fig. 4.2. a) conditional point 50 with its positive (+), negative (-) and neutral у0 parts and metrical 
characteristic ll'1 - length of the edge; b) directions of point interactions in the structure of a higher level
4.3.2. Conditional line
The part of continuous conditional line 5 1 is defined in hierarchical form as a two- 
level system (aed) which contains the finite number of conditional points 
{Si°,..., S°}= 5 °. The points are ordered in a linear sequence in the structure of 
line 51 , i.e. each point 5i0 , i=1, ..., n has one preceding and one following points.
The main elements of aed definition for conditional lines 51={a, у,®}1 are:
- structure a1 as the finite set of conditional points;
- connections у1 ={ a у,® у }1 which contain structural connections a у1 - the 
sides and angles between conditional points, and external interactions ®у 1 - any 
point (or some points) from line structure, and/or boundary points {51°, 5°} e 51 
included into ®у1 ;
- aggregated representation ®1 - the description of line as a unit with its met­
rical characteristics (for example, //° are the coordinates of the points of the left 
and right ends of the line, ^1 is the length, etc.).
Coordinator 5°1 of line 5 1 can execute all operations with conditional points 
which allow the points interactions to be coordinated in order to meet the require­
84

ments to system S1 , i.e. the line equation. So, coordinator S10 can define all ele­
ments in accordance with the requirements to the system. When the boundary 
points {S10, S^} coordinates ^0, line length ^1 and the distance between the 
centres of two neighbouring points ^° are given, then the number n of elements 
Si0 is precisely defined by the coordinator S01 .
The subset of the line structural points is called the basis of the line points.
The following quality is formulated as follows: in comparison with the ideal 
line, the coordinator of conditional one realises operations of decomposition and 
level rise.
The part of conditional line S 1 in its ®1 form is described by the same equa­
tion as the ideal one. So, the coordinator can execute the same operations with the 
conditional line as with the ideal one:
- parallel transfer;
- rotation;
- continuous deformation (the elements Si0 and their number n are constant, 
but elements interconnections ayl and locations are changed);
- the division into lines of smaller length (in comparison with the similar op­
eration with the ideal line, this operation, after the execution of finite n number of 
steps, leads out of S1 class to class of points S0);
- the continuous connecting of line Si1 with systems of the same class of lines 
(this action leaves a line in class S l in case of saving linear order in the whole 
system structure).
The set of relations ^ on Qx ГхЕ contracted on S 1, (ix I S 1) is a set of 
two-level systems (aed) relations. Thanks to that, the standard way of constructing 
any system Si1 from class S1 was defined and it made possible to introduce new 
variables in {Q, Г, E} .
The part of conditional line S 1 , which is constructed from conditional points 
S0 (cubes) is shown in Figure 4.3. The figure is a screen-shot of the computer 
where geometric construction of the conditional line was synthesised form condi­
tional points, i.e. cubes.
85

S 0
Si
Fig. 4.3. Computer screenshot with conditional line S1 presented in its: a) aggregated dynamic form m ^, 
and b) structural form a1, where: S 10 - the first structural element; S0 - any i structural element; 
S0 - the last structural element, i.e. conditional point
r0
n
One of the important manifestations of conditional line is its part. The part of 
conditional line, as in the case of the ideal one, contains all point Si0 . The coordi­
nates of the points are defined by the following equation:
S0 = a • S10 + (1 - a) • Sn, a>0, a<1, 
(4.17)
where S10 and Sn0 are the boundary points of S1 . Since the number of points Si0 
of line part S1 is finite, parameter a has a discrete set of values (0, 1/n, 2/n, ..., 1).
Coefficients a and (1-a) are called a bury-centric coordinates or weight coef­
ficients of the points in {S10 , Sn0} basis.
4.3.3. Conditional surface
Conditional surface S2 , or patch, is a two-level system which is composed of the 
finite number of conditional lines which have a strictly linear order, i.e. each line 
has only one preceding and one following relative line.
Conditional patch is also presented in form (4.1) as object S2 . Its characteris­
tics in general basis {Q, Г, S) , у are defined as follows:
S = a2 - is a two-level system’s (aed) structure defined above (which is 
composed from the finite number of parts of connected conditional lines) and crite­
ria of lines selection;
86

Г = у2 - a closed segment of conditional line and elements, i.e. conditional 
points, which create the segment;
Q = '(<7 } with their metrical characteristics $, i=1, ..., n connected by the 
interlevel relations with the metrical characteristics Д1 of the set of conditional 
lines 51 which create surface 52.
Coordinator S02 of system S2 can execute all possible actions with condition­
al patches. These actions allow lines 5 1 to be coordinated in the way meeting the 
requirements to the whole system 52 .
The following qualities of the part of conditional surface 5 2 are defined as 
follows.
1. Since each conditional line from 51 has a strictly linear order T, it is neces­
sary to have two parameters for the ordering of conditional points 50 of patch 52, 
i.e. т and t, t for points 50 of lines 51 ordering and т for the ordering of 
conditional lines of the patch 52 .
2. Any subset of conditional lines from 51 containing initial 51 and final 51 
lines is called a linear framework of the patch 5 2 . Interconnection points of any 
two linear frameworks are called the framework of the points. Any framework is 
simply defined by the boundaries and choice criteria of conditional points and 
lines.
3. The contraction ^|52 of the relations set у defined on ОхГхЕ for 52 
class is the set of two-level system relations. Thanks to that the standard way of 
any system constructing from 5 2 class is defined.
22
4. Boundary у of conditional patch 5 2 contains not only conditional lines 
but also elements 5 1 of conditional points which do not take part in these points 
interconections.
5. The interconnections of two patches, or a patch and line, or a patch and 
point and defined similar to the case of line in accordance with the general laws of 
hierachical systems.
87

b)
S1 
Sn
S,1
a)
Fig. 4.4. Computer screenshot with exemplary conditional surface patch S 2 of s-similar form presented
in its: a) structural form &1, where S1 is the first structural conditional line, S1 is any i one, S 1
i
is the last n structural conditional line, and b) aggregated form a
S1
The exemplary image of conditional surface patch of s-similar form construct­
ed from three conditional lines Sn1 , n=3, was obtained from computer monitor 
(Fig. 4.4). It is the result of the MO geometric element, i.e. surface synthesis using 
computer program implementation of HS design method proposed in the book.
4.3.4. 3D Object
3D object S 3 is a real construction (in comparison with mathematical notions of 
ideal point and surface) and therefore it is not necessary to introduce the term 
“conditional” for it.
At the same time the boundary /3 of object S3 can be ideal (y'3) or 
conditional (/3) surface. For instance, when S3 is a polyhedron it can have both 
the ideal and conditional sides, edges and tops (objects from S2 , S1 , S0 classes). 
Each conditional top S 0 is defined by interconnections of a finite number of 
conditional sides S 2 and edges S1 . Each edge S1 is defined by the 
interconnections of two sides S 2 .
88

3D object 53 is defined on the basis of geometric variables {Q, Г, S} and 
their relations ty in the following way:
S = a3 is a two-level system (aed) composed of the finite number of con­
nected surface patches S2 and containing the criteria of patches selection;
3
Г = / is a closed conditional surface;
Q = { ®3 } with their metrical characteristics p3 which are connected by in­
terlevel relations with characteristics pi , i=1 ,...,n of conditional patches S2; the 
patches create object S3 .
Coordinator S03 of system S 3 can execute all the actions necessary for coor­
dinating the interconnections of conditional patches S 2 so as to meet the require­
ments to the whole system S 3 . S03 also executes all the actions necessary to con­
struct S3 from the elements of class S3 but of smaller sizes, e.g. from conditional 
points S 0 which are in reality primitives from the same class S 3 but of smaller 
sizes.
S3 
gms1
s3
Fig. 4.5. Computer screenshot - structural interconnections of geometric elements of MO, where:
S3 is 3D object - cylinder, S2 is conditional surface, S1 is conditional line, connected by
ay^ 2 (conditional line) and ст^2 3 (conditional point)
s2 
gms 2
89

The following qualities of S 3 object were defined.
1. For ordering conditional patches S2 of object S3 it is sufficient to have 
one parameter t; for conditional points S 3 ordering it is necessary to have 3 pa­
rameters (t, t, 0).
2. The construction ^|S3 of the relations set ty of object S3 parameters 
Ox Гх E is defined by standard relations of aed- two-level system.
Exemplary 3D objects synthesized in computer are presented in Figs. 4.5 and 4.7.
4.3.5. Interconnections coordination of geometric elements 
of mechatronic objects
The interconnections у of geometric elements of MO were defined by:
- indication of numbers or signs of interconnected element - geometric objects 
(first interaction);
- indication of quantity and set of numbers or signs of connected systems of a 
lower level (second interaction), etc.
The accuracy of interconnections у grows with the consecutive, step by step 
indication of interacting lower level systems.
If the measure of conditional point S0 is defined as equal to 1, and if n equals 
to 10, then measure of S-1 is equal to 0.1=10-1, measure of S~2 is equal 
0.01=10-2 , etc. Measure of ideal point Si0 ( S-ю) is equal to 10~ж =0.
When a part of line S1 contains n (10) elements S10,..., S100, then its measure 
equals to 101=10. If the quantity of the elements on each level is the same, then 
after the decomposition of the systems into lower level subsystems, the sizes of the 
subsystems are defined by the number of the level - by log with n base.
Metrical characteristics of MO geometric element of gmS of level ^ (object 
gmS ) are defined by metrical characteristics of its elements gmS ^~1 of level M 
taking into account the number of the elements and the metrical characteristics of 
their interconnections / , as presented in Figure 4.6 (subsection 4.4.2).
An example of interconnections of geometric elements of MO is presented in 
Figure 4.5. Constructive dimensions for object 8® = 1_1_1_0, and its structural 
connections ay ^ : 8^ = 0_0_1_1.
90

4.4. Procedures of geometric design of mechatronic objects
Actions with geometric elements of mechatronic objects (MO) in the design pro­
cess executed by the coordinator, its synthesis and analysis algorithms are defined 
in this book to realise the final, fourth step of proposed HS design method.
4.4.1. Coordinator actions with geometric elements 
of mechatronic objects
The following classes of coordinator actions in design process for each type of 
above introduced structures Z = |a 0, a1, a 2,a 3}= {point, line, surface, 3D ob­
ject} are defined as follows.
1) Actions which change the object but do not lead it out of the present struc­
ture type. Due to these actions each type of structures may be regarded as a dynam­
ic system. Operations of linear movement, rotation, changing of size fa and some 
kinds of deformations belong to this class of operations.
2) Actions which cause limited changes of the structure. All the elements of 
the object are changed in this process.
This class of actions includes the above-mentioned (in 1) operations and, in 
addition the following ones:
- adding, erasing, changing of elements (such operations have not to change 
the structure type, i.e. constructive dimension and connections of elements, for 
instance the uniting of several linear elements into a long one);
- 
decomposition of structural elements into elements of lower levels;
- 
changing of elements connections.
3) 
Actions which cause a change of object level.
Such actions contain all the above-mentioned procedures (1 and 2) and also 
the following ones:
- size changing which causes changes of the present structure type of object:
0 
31 
02 
0
a ^^ a ; a —— a , a —— a ;
- erasing and decomposition of elements into the elements of a lower level: 
a3 — a2 — a' — a0;
91

- synthesis of higher level system from lower level elements:
S0 ^ s 1, S0 ^ s 2, S0 ^ s 3,
S 1 ^ s 2, S 1 ^ s 3,
S2 ^ s3.
These operations are performed by coordinator S03 of the most complex geo­
metric object S3 , which contains a set of systems from every level. Coordinators 
of systems S2 , S1 and S0 have less abilities in executing the above-mentioned 
actions.
For instance, the coordinator S00 of conditional point S 0 performs the opera­
tions of linear motion only, which are limited by the changes of size and decompo­
sition into points from lower levels S-1, S ~2, etc.
Geometric elements of mechatronic objects defined on {О, Г, S} and у go to 
the input of the given operations. Object parameters О, Г, S may be changed at the 
output of operations with the changes of relations у (where the transition be­
tween the structures classes takes place) or without it. The scheme of the action R 
of changing point S0 coordinates $ by adding coordinates $ of another 
point S0 is presented in Table 4.3.
Table 4.3. Scheme of adding of two points coordinates
R
State
Input
Output
+
£
0"
^1
0'" 
P1
General representation of any action is similar to that in Table 4.3 but the in­
puts, outputs and states have more complicated descriptions. The description (4.15) 
of coordinator process of exemplary synthesis of simple GO is presented if the 
following subsection 4.4.2.
4.4.2. Geometric synthesis
Synthesis is the basic design task performed at both conceptual and detailed design 
phases. The actions realized by coordinator in the process of geometric synthesis of 
mechatronic object are as follows:
92

1. defines the constructive dimension of the resultant geometric structure of 
mechatronic object (chooses the required structure class ст0,ст1,ст 2,ст3 from L);
2. defines kinds of changes of initial standard element of the defined structure 
which are necessary to perform the constructing of the required object gmS;
3. sets the sequence of the changing actions from the above determined classes 
(subsection 4.4.1);
4. performs these actions (this process corresponds to the calculations of the 
resultant object gmS characteristics ■{□,Г,E} ).
Relations between the basic geometrical structures are presented in the form of 
procedures from the given classes. So, it became possible to choose a class of pro­
cedures for the synthesis of a required output object from the given input object. 
The dynamics of states of input object gmS1 is described with the help of dynamic 
system o (p, ф У .
An example of the dynamics of the object states in the synthesis process is 
given in the following Scheme 4.1. Both the structure and form of GO are continu­
ously changed. The dynamics of the process (two steps) is described by the follow­
ing reactions:
{o pi' Ci x X1 ^ Yi&le T }Z,
(4.18)
{o p2:C2 x X2 ^ Y2&2 e T У.
t=1,
X1:
t=2,
C2: 
X2:
Y2:
Scheme 4.1. Two states of GO synthesis process
That is, at the moment of time t=1 the basic GO is the conditional line (C1), 
the input (X1) is the conditional point and the output (Y1) is a composition of these 
objects. Reaction p1 corresponds to the coordinator action of type 2 (subsection 
4.4.1). At the next moment t=2, the basic element C2=Y1 is the conditional line 
93

constructed in the previous moment t=1, input object (X2) is another conditional 
line, and the output object (Y2) is a composition of two conditional lines which is 
the initial state of a conditional surface. Reaction pp corresponds to the coordinator 
action of type 3 (subsection 4.4.1).
The set of primitives, which are used in the synthesis process is presented in 
Table 4.4.
Table 4.4. Set of primitives of different level systems
Levels
S0
S1
S2
S3
Primitives
Points
parts of lines, 
curves
circles, cubes, 
triangles, rings
spheres, cubes, cones, 
cylinders, pyramids 
(3D simplex)
For instance, coordinator actions Ro.CxX^Y (where С = {S10,...,SQ
0}, 
X = {ст1, j>J, Y = S1) make it possible to synthesise the part of line S1 from 
frame C of points (cubes S10,..., Sn0), when the structure type and additional infor­
mation are received from designer (Fig. 4.6). All the parameters {Q, Г, S} of the 
part of line S 1 are defined in this process as follows: 
■
GO being synthesised S1 is the conditional line S1;
structure type ст^ ^ line; structural connections CTY1 - sides of cubes;
structural elements are conditional point cd ^-1 = S 10 - cubes;
metrical characteristic of the elements p0 = w;
another metrical characteristic of the line l = p1 = n■ p0, is defined by the
number n of structural elements and their sizes w = p10 ;
■ constructive dimension of the line in its aggregated ш1 form is 
8Ш = 0 0 1 0; constructive dimension of the line in its structural ст£ form is 
8^ = 0 0 0 n, etc.
■
■
■
■
94

S1 :
^J-1=c0
a 
S 1
Fig. 4.6. Geometric object (conditional line) S 1 synthesis from the conditional points (cubes)
The result of the computer synthesis of the exemplary 3D geometric objects 
realized using HS design method is presented in Fig. 4.7.
a) 
b)
Fig. 4.7. Computer screenshots with: a) 3D object (chair), synthesized from: b) its structural elements
The constructive dimension of 3D object - the chair - in its initial state (Fig. 
4,7b) is:
^a = 0_1_7_0, 
(4-19)
£ .
and for its structural connections J is:
^4 = 0_0_0_0,
(4.20)
i.e. there are 1 conditional surface and 7 lines which are not connected.
95

In the final state of the chair synthesis (Fig. 4.7a) there are 1 conditional sur­
face and 4 lines connected by conditional 6 points, and constructive dimensions are 
as follows:
3^ = 0_1_4_0 and 3^ = 0_0_0_6. 
(4.21)
One conditional line is constructed form three initial ones. Therefore the 7 
turns into 4 in the second position of 3fi numeric code which is the position of 
lines in the constructive dimension 3c code. All constructive elements of the chair 
in its final state are connected by conditional points. Figs. 4.7a and 4.7b are com­
puter screenshots.
4.4.3. Motion design and deformation as analysis tasks
The tasks of mechatronic object (MO) motion design and deformations - analysis 
tasks - are defined as the coordination tasks of hierarchical system standard block 
31 (aed).
Object mS1 movement in its environment s S1 is called a change of its inter­
connections ay1 with the elements Si (i e Iы) of environment system sS1.
The change of interconnections ст у1 of the elements of MO structure ст fi is 
identified as deformation.
Adding of negative and positive units /'' (elements) to the connections сту^ 
with structure стfi remaining it in the same structures class causes the effect of 
structure стfi deformation. The change of стУ1 causes the external interconnec­
tions ,,,y1 changes which are equivalent to object oS1 movement in its environ­
ment. The accordingly organized deformations - for instance running waves of 
deformations [55] - correspond to the classes of ways of object motion coordina­
tion.
The objects mass measure is defined as the metrical characteristics / e Q 
of system mS' state c e C1, its inputs Xfi and outputs Y'.
0 
0 
0 fit ^‘11 
0 
11 + 
111 
-~~-//1
Neutral element /л 
= у /л , /л , /л ) = /л is the length, square or
volume measure - depending on which object state (i.e. which constructive dimen­
sion ^m(J and connection defect 3lma) is considered as rC1 or тmy,, теL .
96

Movement measures (velocity, impulse, etc.) are presented as the measures of 
state changing of dynamic systems during the time unit T jjT, 
„Л T>£ 
( ^t 
rri£ rri£ тЬ ■ 
~f ./ AT
Tr/TeT1 —{^T ,%1 ,?T ,ZT } in spaces M , ^ , A . Movement measures 
have their directions in accordance with environment s Se element addresses with 
regard to which the movement is considered. The general law of movement and 
deformation was also presented in form of aed .
Geometric and physical values were defined in state spaces Mp, E', Ap, T. 
All calculations are carried out in these spaces with the help of numeric positional 
system LS . The ways of motion design and deformation calculations depend on 
the units '~t, ~, Sp of both structure a and aggregated dynamic realization co' . 
The ways correspond to coordination strategies TAo e Ao — \vAo, xAo, ?Ao, AAo j 
for different levels of information uncertainty of coordinator.
It is possible to define different kinds of movements and deformations by in­
troducing corresponding conditions. For instance, the following relation corre­
sponds to MO physical movement (object’s coordinates changing) at time interval 
1 tt' :
a/ |Tt' = const ,
(4.22)
..'
where structural connections a / are not changed (at this time period) and in this
way structure aP remains in its current state. This movement is conditioned by 
qP
environment process ^ S , which was presented in the following way:
f /n m Y • 
J 
ч, v 
т'^ 1 
(A '')'X\
Ж \P, ^ j : ^P =\^EPt :^Xt ^S Ct ^Y & t ^ T f, 
(4.23)
ш? — Ъе% ':s Xt XsCtt' ^X^t' & t, t e T & t ^ t), 
s X^ =Т5Х^ X Y^, 
eYe —Y X X .
The following relation corresponds to the bio-mechanical type of movements:
(T^e xT£Ye )| Tte,=w/\T„p — const, 
(4.24) 
97

in other words the connections ш у‘ at time interval |Tttl, depend on the structural 
interconnection changes „у1 Trtte, only. This movement is conditioned by process 
o. S1, which was described in form (3.3) as follows:
о. p ФУ : ..P1 = {. Pt : Xt x Ct ^ Yt & & t e T1 }, 
(4.25)
о.Ф -{o.Vtt • : Xt x Ctt '^ Xt' & t tte T & t > t J.
The other classes of movements occupy the positions between the above men­
tioned ones and presented in the basis of S' symbol construction.
The examples of bio-mechanical movements coordination - analysis tasks - 
are given below for snake and caterpillar like robots motion design, as well as for 
other biologically inspired robots [56,57] and human motion design (Chapter 7).
The following analysis algorithm is defined and realised in these and other 
tasks of the work. The coordinator performs the following steps:
1. synthesis of geometrical structure of mechatronic object being designed;
2. definition of the way of interconnection changing of object’s elements;
3. realization of the interconnections changing process at the definite time in­
terval by one of the coordinator operations described in subsection 4.4.1.
4. checking and evaluation of MO position (address) in its environment, or 
MO external representation improved, i.e. geometric form of the mechatronic ob­
ject being designed.
The analysis tasks performing for caterpillar and snake like robots bio­
mechanical movements coordination (motion design) by the suggested method are 
partially described in [55] and presented below. The tasks are performed in accord­
ance with the analysis algorithm presented above.
For the case of caterpillar-like robot at the first step, the geometric construc­
tion в[ of the caterpillar SJS1 which is the conditional line, and structural repre­
sentations ст^+г I e L ,г Ф 0 for the environment SS1 ^ St+T, which is the 
pathway of robot are synthesized. Structural interconnections ТуУ: are defined as 
the common points and angles between the structural elements (primitives) of 
caterpillar robot.
At the second step, definition of the way of the structural interconnections 
сту1 changing to perform the required robot motion o. S is its environment £ S1 
was done. The caterpillar motion mode was selected as linear with constant veloci­
ty. The direction M of robot motion in its environment was also defined. Another 
motion modes can be defined and selected as well.
98

M
AS
Fig. 4.8. Caterpillar robot motion, where: AS - robot body displacement during one motion cycle; 
&Y4 5 — structural connections of 4 and 5 elements of the body, M - direction of the motion
At the third step, the consecutive change of structural interconnections (an­
gles) in the way defined by coordinator at the second algorithm step leads to the 
whole robot movements in its environment f S€ ^ S€+r (Fig. 4.8). The change of
angles aYi,T, i,t g Ls from their maximum value to 0 during one motion circle 
causes displacement equal to AS of the robot body.
At the fourth step, the checking and evaluation of the changes of the both posi­
tion and form, i.e. external representation of caterpillar robot S£ in its envi- 
ronent s S£ are executed in parallel with the actions of the third algorithm step. 
a) b)
Fig. 4.9. Two states of motion design of caterpillar like robot movements, M - motion direction
99

The result of computer performing of motion design task for the caterpillar ro­
bot is presented in Figure 4.9. The figure is a computer screen-short obtained.
Motion design of snake like robot is the another exemplary analysis task. The 
mechanism of snake like robot motion is a combined mechanism of transverse and 
lengthwise waves of structural interconnection change spreading in the snake body. 
For lengthwise waves of deformation the interconnections ay\ volume 
^ (Yn)(t) changes for relative elements i, т and continuous interconnections 
transfer (i=i+1 or i=i-1) depending on the direction of the mass being transferred 
take place (Fig. 4.10). The strength of the structural connections is graphically 
illustrated by their volumes. Robot body displacement during one motion cycle is 
equal to AS. Motion design of snake like robot is performed according to the 
analysis algorithm given above.
Fig. 4.10. Construction of a body of snake-like robot being in motion, where Sj1 is the new position 
of the first element (head) in the moment of time t’, M - direction of the motion
At the first step of the analysis task, geometric construction m a1 of biomech- 
atronic object mS1 - snake like robot - is synthesized in the form of conditional 
line built from conditional points - cubes (Fig. 4.10). Interconnections fYi1 j of 
conditional points i and j are their common edges and angles. The snake robot con­
struction m at at initial t moment is in the state presented in Figure 4.10.
At the second and the third algorithm steps, definition of the way of the snake 
robot structural interconnections CTy1 changing to perform the required robot mo­
tion ox S^ is its environment ES1 was done. The direction M of robot motion in 
its environment was also defined. After that, the coordination of the snake motion 
process was realized in the following way. The character of snake motion is based 
on the principle that each part of the snake body goes the same way in the motion
100

process as all the others. To initiate the motion process the head of the snake S[ 1 
, 
П 
•. 
0^—1
makes one step - moves forward - obtaining in this way its new position Slf, . In 
this case, connection CT^\ between the first structural element Sxt—1 (the head) and 
the second structural element Sof snake body becomes weaker. To remove the 
weakness of the connection, the second element is built on to the head (recon­
structed in a new position) taking the place of the previous head position. In this 
way the interconnection is changed by robot coordinator S ) from state a/1t2t to
the new state ff//2t • The third element S3 1 is built on to the second one S£—x 
taking its previous position, the fourth is built on to the third one, etc. One step of 
the process was finished when the last n element Sn 1 was built to the last but one 
n-1 element S'n_J being in its new position.
Formally, the coordination task of robot motion is presented as reaction p) of 
coordinator, see (4.5), and as function (rft, of states transition for the system, i.e. 
robot:
£ . s~i£ £ 
£ о £ _  тл —£ __ v 
/л огч
^() : C 0 ^ ^t 
^ ^t' & ^t' 
Y0,^t 
X О , 
(4.26)
/ / / /
Vtt': °t*aYtt'^ °t,
where olt and olt are the states of the snake-like robot structures at moments of 
time t and t respectively, t >t; a ytt' is the change of structural connections 
during the period of time tt’; Ct is coordinator state (the state of control pro­
gram).
At the fourth step, the evaluation of the position and form changes - external 
representation of snake robot SmS1 in its environment £S1 - is executed in paral­
lel with the actions of the third algorithm step.
101

a) 
b)
Fig. 4.11. Computer screen shorts obtained in the process of the snake-like robot motion design
In the program realization of snake robot motion design, the coordinator Sf0, 
■ 
which is realized as the main control program, controls the interconnections а/,, j 
change of the body elements S 1Л and reconstructs the elements consecutively in 
their new positions. The wave of the interconnections change runs from the head 
S/"1 to the last structural element S,'' 1. This process of ay^. change causes the 
shake robot motion in the opposite direction M. Two states of the body construc­
tion of the snake robot being in motion are given in Fig. 4.11.
So, in the case of motion design of caterpillar and snake like robots we deal 
with two kinds of geometric design (analysis) processes - deformation (in the low­
er level structure of the biomechatronic object) and motion, i.e. its dynamics in the 
structure of the environment.
The results obtained in performing the given tasks have a general character 
and may be used in an abstract motion design of hierarchical systems. The con­
ducted researches show that the HS design method proposed in this book can be 
used both in the conceptual and detailed design tasks of mechatronic objects mo­
tion, i.e. coordination of biomechanical movements, and deformation analysis of 
the objects constructed.
102

Preliminary conclusions
The HS design method of mechatronic objects (MO) has been described in this 
Chapter 4.
First, the steps of the method realization were defined.
After that, in accordance with the method steps, the basic geometric elements 
of MO were presented in the hierarchical form. The results of this presentation 
are conditional point, line, surface and 3D object.
Later, the geometrical and numeric characteristics of MO were introduced. 
The main numeric characteristics, i.e. constructive dimension and connections 
defect, are presented in the numeric positional code.
Next, coordinator procedures of mechatronic systems design were defined. 
Algorithms of hierarchical objects synthesis and analysis were presented.
Finally, the exemplary computer realizations of the method for solving the 
basic design tasks were described: synthesis of 3D objects and analysis - design of 
caterpillar and snake like robots movements. Program modules have been written 
in Pascal language and work in the frames of standard operation systems. The role 
of coordinator is performed by the main control program unit, which realizes the 
functions of coordinator selection stratum, i.e. solves synthesis and analysis design 
tasks.
The computer realization shows, that the method has the main advantages of 
the wide spread technologies of geometric design. At the same time hierarchical 
representation of geometric elements of MO is free from certain drawbacks of the 
known methods.
103

5. CONCEPTUAL DESIGN
OF BIOMECHATRONIC SURGICAL
ROBOT SYSTEM
The Chapter presents the application of Hierarchical System (HS) technology in 
the task of conceptual design of biomechatronic Surgical Robot System (SRS). 
This task is topical for the systems of Computer Aided Design (CAD) and 
processes of conceptual mechatronic design in particular [1,58]. In design process 
of biomechatronic systems we deal with objects which contain connected 
mechanical, electromechanical, biological, electronic, computer and human­
computer subsystems. It is important to define the common conceptual model 
which will describe all the above mentioned systems of biomechatronic SRS being 
designed in common formal basis.
The model must also be coordinated with numerical and geometrical systems, 
i.e. the traditional forms of information representation in mechatronics. The 
theoretical basis of design process in agreement with these requirements must be a 
hierarchical construction connecting any level unit with its lower and higher levels. 
Mathematical and cybernetic theories based on the set theory are incoherent with 
the above design requirements since the set theory describes one-level outlook.
So, the coordination technology of Hierarchical System with its standard block 
aed described in Chapters 3 and 4 is applied in this Chapter as a theoretical basis 
for the performing of conceptual design task of biomechtronic SR system. Accord­
ing to the definitions - given above in the Introduction and Chapter 1 - Conceptual 
Design (CD) is recognized in this book as a process of creation of the systemic 
model of the object being designed on the early phase of its life cycle which is 
before the Detailed design (DD) phase of object’s concrete mathematical model 
creation and numeric calculations realization. In the frames of the HS method pro­
posed, to create conceptual model for design of biomechatronic object, e.g. Surgi­
cal Robot System (SRS) in our case, means to define SR system structure; its dy­
namic representation as the unit in its environment; SRS environment, its process 
and SRS-Environment interactions; SR system coordinator and its design and con­
trol processes; processes executed by SRS subsystems and general SRS process.
104

Therefore, the conceptual model of biomechatronic surgical robot system (SRS) 
presented in aed formal basis of HS is given first in this Chapter. The exemplary 
tasks performed by SRS subsystems are described after that in frames of HS tech­
nology as well.
5.1. Conceptual formal model of surgical robot system
SR systems, such as commercial ROBODOC system [59] (Integrated Surgical 
Systems, CA, USA), have been widely used recently in TKA (Total Knee Artho- 
plasty) surgery [60]. Total knee arthroplasty is one of the major type of surgery for 
people with severe knee damage to relieve the pain and disability of cartilage inju­
ry, osteoarthritis, rheumatoid arthritis, or psoriatic arthritis [61, 62]. Due to the 
increasing aging population recently, the TKA surgery has been grown rapidly in 
the world. The main surgical procedure of the TKA is removing damaged cartilage 
and bones from the surface of the knee joint and replacing them with femoral and 
tibia components of TKA implant (Fig. 5.4). In order for the surgery to be success­
ful and the longevity of the implant to be achieved, the accurate bone cutting and 
implant alignment along the preoperative planning are required. Conventional sur­
gical planning is performed basing on 2D plane x-rays and bone cutting is per­
formed manually using electric saw, which strongly relies on a surgeon’s experi­
ence. Even for a skilled surgeon, the implant alignment with respect to the bone in 
frontal plane is a very complicated task. So it is necessary to achieve excellent 
implant alignment and bone cutting by utilizing Computer Tomography (CT) based 
3D planning and robot assisted accurate bone cutting. The minimal invasive sur­
gery (MIS) in the knee arthroplasty has been increased since MIS can improve the 
surgical outcomes such as the recovery time and hospital stay by reducing the inci­
sion in surgery.
Recently, commercially available computer-aided surgical robot systems have 
been introduced to enable surgeons to improve the accuracy of cutting and align­
ment in knee and hip arthroplasty. The surgical robot systems could be classified 
into semi-active type and active type. The semi-active robot systems such as the 
MAKOPLASTY® system (MAKO Surgical Co, Fort Luderdale, FL, USA [63]) or 
ACROBOT Sculptor (The Acrobot Co., Elstree, UK [64]) provide a surgeon active 
control over the robot by hands.
These robot systems also protect the cutting tool from moving out of the 
planned cutting space by actively blocking the robot arm attached to the cutting 
tool when the surgeon executes the bone cutting process. The active robot systems 
105

such as ROBODOC® system (Curexo Tech. Co., Anyang, Korea [65]) and CAS­
PAR (URS Ortho GmbH, Rastatt, Germany [60]) move the cutting tool autono­
mously to cut the patient’s bone basing on the results of the pre-operative planning.
Fig. 5.1. Structure of laboratory SRS for TKA
In this Chapter the main attention is paid to laboratory-level SRS with indus­
trial robot and navigation system for TKA (Fig. 5.1) developed in BioMech Lab., 
School of Engineering, Kyung Hee University, South Korea [58, 61]. Conceptual 
systemic model of the SR system is presented in aed formal form as follows:
S1 <> {0,S0 .a}' 
(5.1)
where 0Z is an aggregated dynamic representation of SR system SZ, aZ is the 
SR system structure, S0 is SRS coordinator, i.e. design and control system, Z is 
the index of level.
The SR system structure a1 contains the set of sub-systems 0-1 and their 
Z
structural connections ay . Thus, according to aed model described in Chapter 3, 
SRS structure is presented in the following form:
106

^ = {So,{« [-7 }}, 
(5'2)
where the SRS subsystems presented in aggregated dynamic form « are
: robot system (RS);
: pre-operative planning system (PP);
: navigation system (NS);
: computer control system (CCS).
«11
«2 1
«3 1 
«4-
CCS is presented in the form of SRS coordinator (Fig. 5.7) and contains con­
trol PC of robot, control units of pre-operative planning and navigation subsys­
tems, and communication program developed to integrate the SRS subsystems. 
Therefore, CCS су- partially plays the role of SRS coordinator S0 which per­
forms design and control functions of SRS.
In their turn, each subsystem has its own structural elements - lower level 
1 -1 subsystems. For the robot mechatronic subsystem RS «12-1 they are manipu- 
- 
—2 2 
£-2
lator ш1,1- (mechanical), servomotors ш1,-2 (electromechanical), cutting machine 
2-2 
— 
. 
—22
ш1,з (pneumatic) and its own control system ш1,4 
(computer). All the subsys-
..2-2
tems are connected by their structural connections a у . For instance, cutting 
machine ©/32 and manipulator «11,12 are connected by end effector CTy/j2 of 
robot. By analogy, the higher level subsystems «/-1 are connected by their com­
mon parts - structural connections Gy2-1 - that are the elements of lower levels. 
For instance, navigation system «3-1 and robot «, ' are connected by their com­
mon element - communication program of computer control system CT/| J1 =
•■2 
„2-2 
„2-2 • <
ш1,4 =ш3,4 , where ш1,4 is dynamic representation of the control program being 
the subsystem of robot «1 1, and «J 42 the one of the control program being the 
subsystem of the navigation system ш3 1 .
1 
,11 
. 
,. 
■7t2-1 
• • 
—- —12-1
Aggregated dynamic realizations « 
, i.e. dynamic models i (p, ф) 
of
SRS subsystems S'4, are formed after the definition of subsystems’ inputs- 
outputs concerning each particular sub-process they execute. Thus, for the naviga­
tion system «3 1 concerning its registration process of bone and robot, the input
107

V't—1 • 
• 
• 
1 
• 
11 Л , , 
1 АЛЛЛ 
. 
ZTLT.1 
T-V",1
X3 
is optic signal received by Optotrak 3020 cameras system (Northern Digital
t—1
Inc., Canada) and the output /3 
is the robot instrument and real bone coordinates
t—1
written on control PC. State C3 
in this case is the stage of registration process
completeness. This process is of informational nature. As for the robot subsystem 
t—1
@1 , concerning its mechanical process of cutting instrument motion, the aggre­
gated realization ®1t—2 presented in (p,p)1 form at the conceptual design (CD) 
phase (Fig. 1.2, Chapter 1) can be transformed to differential equations [58] of 
inverse kinematics at the detailed design (DD) phase:
q = J+(q) x
(5.3)
t— 1
Equation (5.3) connects robot joints velocities <7 as the output parameter / 
with velocities x of robot cutting instrument as input X0~—, where J+ is the pseu­
do inverse of the Jacobian matrix.
Object oS^ (SR system), its environment s St, their processes oxS^ and 
^ S^ (TKA and SRS control) and coordinator S0 (design and control system) 
create a general biomechatronic SR system for TKA.
ot
Environment g S of the SR system has its own structure and contains: 
t
@1 : bone (biological system), 
t
@2 : surgeon, who communicates with SRS via video information, 
registration and cutting motion planning system (human-computer system),
0)3 : other biomechatronic systems being in interaction with SRS (e.g. com­
puter tomography (CT) system, which supply PP subsystem of SRS with the CT 
images of bone), 
t
@4 : implant producing system (bioengineering system), 
t
@5 : higher level coordinator (higher level design and control system).
Thus the control interactions between surgeon (operator) @2t and SR system 
are realized through obtaining video information of bone, checking the cutting path 
and robot cutting motion planning. In their turn, the interactions between robot 
cutting instrument and bone @1t are the executive interactions between SR system 
and its environment.
108

The immediate input Xl for the SR system (which is at the same time the 
output ,.Yl = Xl of the environment of SR system) are control actions produced 
by surgeon and the inputs generated by other environment systems, e.g. inserted 
implant presented by a\ . The output Yl of the SR system is the cutting bone. The 
output of the SR system Sl is at the same time the input e Xl = Yl of the envi­
ronment. According to the relations established for the elements of (p, ф) model - 
see Table 3.1, Chapter 3 - the states Ci of SR system S1 are the inputs of TKA 
surgical process.
l
я S4 : cutting path forming in PP and transforming to coordinates system of RS,
Dynamic representation al of SR system and its subsystems are constructed 
in (p,ф) form (3.2) by the inputs Xl, states Cl and outputs Yl mentioned above. 
For example, in the case of description of robot end effector motion, the dynamic 
representation which is given in (р,ф) form at CD phase can be transformed at 
DD phase to the states space equations as follows:
x = Ax + Bu 
(5.4)
y = Cx .
First state equation in system (5.4) corresponds to the state transition function 
ф in (3.2) and the second output equation corresponds to the reaction p . Vectors 
x, y, u and matrices A, B, C must be predefined. In the case of robot end effecter 
motion the elements of states vector x=[x1 x2 x3]T are the displacement x1, velocity 
x2 and acceleration x3.
SR TKA system process ox Sl is part of higher-level process л Sl+1 in SRS 
cl i • i 
. • i • 
i . 
. 
• i i i 
i
environment s S which contains biomechatronic system of higher level - general 
design&control system including surgeon, person being operated, other biomecha- 
tronic systems being in interaction with SRS (e.g. CT system and implant produc­
tion system).
This process contains:
l
я S1 : VM of bone and implant graphic image forming (by PP system),
l
я S2 : real bone image and robot instrument location registration (by NS),
l
я Sз : VM matching to real bone model - bone image,
109

cd
я S 5: allocation of robot instrument in the registration points by surgeon using 
control haptic device, and definition of robot joints angels control law by solving 
inverse kinematics problem,
of
я S6 : sending control signal to AS3 robot system,
of
я S7 : AS3 robot motion and end effector (pneumatic milling instrument) dis­
placement,
я S8 : bone cutting (or milling) and implant inserting.
Fig. 5.2. Stacking process of the bone model creation from CT bone images a) and b), i.e. slices.
For instance, n S\ process of the bone virtual model - bone image - creation 
is described at conceptual design (CD) phase as follows. The model of a bone bio­
logical subsystem of general biomechatronic SR system is constructed in virtual 
space from computer tomography (CT) images, i.e. bone slices (Fig. 5.2). The 
process of the bone model creation is called stacking.
The stacking process nS^ (Fig. 5.2) is formally described at the phase of CD 
in the form of reaction of dynamic system (p, ф)£ :
{p : C x X1 ^ Y1&1e T}e 
(5.5)
where initial slice (or composition of previously connected slices) is recognized as 
state C1, at step 1, slice to be added to the initial one is recognized as input X1, and 
the composition of both the connected initial and input slices is recognized as out­
put Y1. Output Y1 becomes state C2 at the next step of stacking process.
Virtual bone structure is presented at CD phase according to aed model in the 
form:
a1 = {a1 1^71} 
(5.6) 
110

where a1 1 is a set of bone CT slices, and ayare their structural interconnec­
tions, i.e. common surface of neighboring slices.
The general synthesis process of the virtual bone construction is formally de­
scribed as coordinator task according to the HS design method step 4 (See Chapter 
4) in form of (4.4) as follows:
S0 :{a 
■/3}^a1 
(5.7)
a) 
b)
Fig. 5.3. a) top view of tibia bone in matching я S° process, where red and yellow triangles represent 
three corresponding points from PP and robot coordinate systems respectively, b) AS3 Samsung robot 
system, man-operator and fixed bone being operated
Because of the fact that pre-operative planning (PP) system and the robot sys­
tem (RS) have their own coordinate systems, registration process n S2° is required 
to transfer information to RS coordinates about bone cutting trajectory represented 
in coordinates of PP system. A transformation matrix between two coordinate sys­
tems is calculated with three corresponding points - represented by red and yellow 
triangles - from each coordinate system where each point has the same location in 
both coordinates (see Fig. 5.3). After that, the cutting trajectory calculated in the 
pre-operative planning system is transformed into the cutting trajectory in the co­
ordinates of the robot system. This process n S3° is called matching.
111

Human-computer PP system Optotrak NS system AS3 robot RS system Haptic device&surgeon
m, 1И Л
Virtual bone
Real bone 
.
Pre-operating planning
Registration
Bone cutting
Implant inserting
Fig. 5.4. Several steps of SRS TKA process onS8 - bone cutting and implant inserting - executed by
SRS subsystems a 8 1 and a 8
After performing a matching process a bone cutting and implant inserting pro­
cesses лS3 ... ^S8 are realized (see Fig. 5.4). To move the milling tool along the 
cutting trajectory, the values of the robot joint angles at each time step are calculat­
ed for AS3 robot system (Rockwell Samsung Automation Inc., Korea) by per­
forming the inverse kinematics task. For the accuracy of the inverse kinematics 
analysis, first, each length of the robot link from the manufacture specification is 
analyzed and calibrated to match the pre-defined known positions and orientations 
of the end effecter of the robot system by trial-end errors. Then, the exact trans­
formation of the robot links from the origin coordinate to the robot end effecter is 
reconstructed for the calculation of the joint angle profiles for given bone cutting 
trajectory input.
Pre-operative planning (PP) system has to reconstruct the 3D model of a bone, 
choose an implant model, align the bone and the implant models, and calculate the 
cutting trajectory of the tools to allow the appropriate location and orientation of 
the implant with respect to the tibia bone. PP system connects the robot and virtual 
bone spaces to calculate a bone cutting trajectory. Processes % S^ and я S3 are 
associated with PP human-computer system, n S2 and n S5 - with navigation sys­
tem (NS), and nS6 ... nS8 processes are associated with robot system (RS) (Figs. 
5.1, 5.3b and 5.4). NS registers 3D positions of real bone and AS3 robot instrument 
by Optotrak 3020 cameras system (Northern Digital Inc., Canada) to transfer the 
cutting trajectory being planned to robot system. NS also transforms the bone co­
ordinates system in real space to the coordinate system in virtual space in PP sys­
tem. The trajectory calculated in PP is transformed into coordinates of robot sys­
tem. The control signals to robot joints are generated by Robot Control System 
112

and Multi Motion Controller (Rockwell Samsung Automation Inc., Korea) [58] 
to realize the cutting trajectory. The inverse kinematic task is performed before it. 
NS and RS are coordinated by different control PC computers connected by LAN 
network (Fig. 5.1) with correspondent communication program [61] developed to 
integrate the systems.
n S 7 is realized by electromechanical subsystems (AS3 robot servomotors) of 
the general biomechatronics SR system, n S\ - n S4\ are realized by video­
information and computer subsystems, and n S8 is realized by pneumatic and me­
chanical ones. The general process is composed by sub-processes n S8, executed 
by the general biomechatronic system, which includes the SR system oS8 and its 
environment e S8. All the sub-processes n Si are realized by different nature sub­
systems of the general SR biomechatronic system.
So, all the subsystems of general biomechatronic SR system, i.e. mechanical 
(AS3 manipulator S8,2, haptic system), electromechanical (servomotor S'22), 
pneumatic (cutting-milling instrument S^2), computer-electronic (navigation S3 1 
and control system S8-1), human-computer (surgeon and preregistration system) 
have their aggregated dynamic a8 and structural a8 descriptions. The sub­
processes nSi are also presented at CD phase in (p,фУ form (3.5), see Chapter 3. 
All the connected descriptions of the subsystems S8 and processes я S8 are pre­
sented in the informational resources (data bases) of the coordinator which per­
forms the design and control processes, connecting in this way structure a8 and 
the functional dynamic realization a8 of the SRS being coordinated.
Coordinator S0, in our case is realized in the form of human-computer de- 
sign&control system of the SRS, which maintains its functional modes by surgeon 
and control system and realizes the design process by higher level computer aided 
design (CAD) system if necessary. All metrical characteristics of SR subsystems 
and processes are presented at CD phase in the form of numeric positional systems 
Ls (see Chapters 3,4).
113

5.2. Realization of coordination - design and control - tasks
Coordinator S0 tasks in control process я S0 ofSRS are performed by human­
computer system, i.e. surgeon communicating with servers and robot. The main 
control tasks, i.e. functions, are indicated in the graphic user interface (GUI) win­
dow of control program (Fig. 5.5) developed in Biomechanics Lab., School of En­
gineering, Kyung Hee University, Yongin, Korea [61]. The main control processes 
are: 1) bone fixation and its position checking ^S0,2) registration of robot posi­
tion 2Я S0, 3) registration of real-virtual bone relations 3^ S10,4) calculation of the 
cutting path and realization of a bone cutting 4^ S0 .
Fig. 5.5. GUI window of control program of SRS which performs TKA process ..S 0
All the control processes have their sub-processes indicated by correspondent 
buttons on the GUI control panel.
0
1^ S Q control process of bone fixation and its position checking contains the 
sub-processes performed by surgeon:
114

1.1. bone fixation and allocation according to the device position;
1.2. moving robot to the working area and checking the position of the robot 
end effecter;
2~ S0 process of robot position registration contains the sub-processes of:
2.1. robot displacements using haptic device and getting 3 registration points 
coordinates and joint angles by Multi Motion Controller (MMC) - data collecting,
2.2. registration of 3 registration points by Optotrak - collecting coordinates in 
another coordinate system,
2.3. 
loading of the data collected to SRS control program,
2.4. calculating the coordinates matrix transform - setting the relation of coor­
dinate systems of Optotrak and AS3 robot,
2.5. checking the matrix transform - choosing any control point and compari­
son of the coordinates values;
3„ S0 control process of registration of real-virtual bone relations contains the 
sub-processes of:
3.1. loading data of 3 registration points of virtual bone from GUI to program,
3.2. collecting and loading data of real bone using Optotrak cameras,
3.3. performing matching algorithm by calculating matrix transformation and 
setting relation between real and virtual bones,
3.4. checking of matrix transformation;
4^ S0 control process of calculation of cutting path and bone cutting realiza­
tion contains the sub-processes of:
4.1 cutting path loading from PP system - planning program,
4.2. calculation of robot end effecter cutting path by performing matrix trans­
formations and inverse kinematics task,
4.3. realization of cutting - loading of manipulator angular change data to con­
trol MMC unit and execution of the event.
Formally, SRS control processes are described at CD phase in (р,Ф)0 form 
of coordinator functions (see Chapter 3) after definition of the states C0t, inputs 
X0t and outputs Y0t of control subsystems:
(p, ф)0: P0 = pt:C01x X01 ^ Yot & te TУ, 
(5.8)
Ф0 = {o%tt: C01 xX0tt ^ Ct &t,t' e T &t' > t}'.
115

Fig. 5.6. MMC and control PC system presented in the form of coordinator 1S ( 1 of manipulator 
oSS1 1 of robot system S\ 1
As for the control system of robot itself (Fig. 5.6), it is presented by Multi Mo­
tion Control (MMC) system and control PC in the form of coordinator according to 
the scheme presented in Fig. 3.1 (Chapter 3). The inputs and outputs of coordinator 
are defined on the sets of its coordination signals G1 and feedbacks W1 as follows:
X1 ={ GM We} 
Ye ={ Ge Wt+1} 
(5 9)
0 ={ 
, 
}, 
0 ={ 
, 
}, 
( .)
where: G1 are coordination signals for systems S ' 1, W1 is feedback from S 1, 
We+1 is feedback from S( to coordinator S(+1 of higher level, GM are coordina­
tion signals from Sq+1 to S( [58].
Concerning Multi Motion Control (MMC) system [58] of AS3 robot the input 
is the preplanning cutting trajectory of robot’s arm (end effecter) and the output is 
the electronic control signals (manipulator joints angular values) which go to ma­
nipulator servomotors to realize predefined motion of its joints after solving the 
inverse kinematic problem. State of general control system is the state of control 
process in the current moment of time.
For MMC control system 1S0 1 (see Fig. 5.6) input X(t are G^+1 coordi­
nates of cutting trajectory [x(t), y(t), z(t)] and feedback signals W1. W1 signals 
bring the actual values of robot joints current positions from servomotors. Output 
Yqi contains both electronic signals G1 which define manipulator joint angular 
values 0t, i=6 (new position), and feedback signals We+1 to PP system, i.e. posi­
116

tion of robot and cutting instrument, registered by Optotrak system at step 2 of 
surgical control process (button 2 - register robot and robot point data, Fig. 5.5).
i
C0t are the actual positions of the manipulator joints and cutting instrument at t 
moment of time. Concerning positioning and bone cutting process controlled by 
MMC system the input X f~1 of AS3 robot (Rockwell Samsung Automation Inc., 
Korea) are input loads of servomotors. The robot output Y^ -1 are the positioning 
and cutting operations performed, which are the immediate input of the environ­
ment e S^ element sSi, i.e. bone being operated.
Fig. 5.7. Computer control system (CCS) subsystems S £1 interaction in control process of manipulator 
oS1 1 of robot system S1 (RS) which realizes a cutting path
The bone cutting process is executed by surgeon using the control program by 
activating step 4 “Calculate cutting path” of GUI (see Fig. 5.5). The processes of 
PP system are activated at steps 4.1-4.3 by pressing the correspondent GUI but­
tons. The control processes of robot MMC system are activated by steps 4.4 and 
4.5 (Fig. 5.5). Internal control loop flowchart of MMC while executing the motion
117

process of robot end effecter along the cutting trajectory is given in Fig.5.8. 
The control loop flowchart is presented in the form of coordination process 1Я S0 1 
of coordinator 1 S 0”1 (MMC connected with control PC, see. Figs. 5.6 and 5.7) and 
contains the sub-processes U SoV (Fig. 5.8).
Fig. 5.8. a) internal control loop flowchart of coordinator 1S0 1 - sub-processes u S of of Multi 
Motion Controller (MMC), and b) manipulator - AS3 robot being controlled
Control signals of AS3 robot manipulator (Figs. 5.7 and 5.8) are formed as a 
result of inverse kinematic task performing and calculation of robot’s joints angu­
lar change after consequent placing of end effecter of robot to the positions of 3 
registration points. The placement is realizes by operator (surgeon) using haptic 
device connected with manipulator via robot’s control system - man-machine 
mechatronic subsystem.
One of the functions of control PCs of coordination system is the commands 
forming and control of each subsystem while executing general surgical process, 
e.g. for Navigation System (NS), it is control of bone registration process, for Ro­
bot System (RS) - control of manipulator motion along the predefined cutting path 
while executing cutting-milling process. Other functions include creation of virtual 
bone and real bone images, obtaining registration points coordinates, matching, 
cutting path forming according to the shape of implant, etc.
118

Coordinator S0 tasks in the design process, realized by higher level SRS de­
sign system, are distributed on the coordinator’s strata: selection, learning and self­
organization. The design process realized by SRS coordinator correspond to the 
general HS design method performance described in Chapter 4 and Section 3.2 of 
Chapter 3.
On the selection stratum at t e T moment of time, predicting the environment 
systems states for moment t' > t, coordinator defines correspondent inputs and 
outputs of SRS system being designed and creates (p, ф / models of SRS and its 
process using the obtained predictions. After that, coordinator selects such states of 
subsystems and their interactions which correspond to the standard state (required 
for t1 moment of time) of SRS system S1, i.e. performs the task of structure ae 
synthesis of the SRS being designed. Synthesis task - described in Chapter 4 - is 
performed by SRS coordinator realizing its coordination strategies at both concep­
tual (CD) and detailed (DD) design phases. Coordination strategies realized on the 
selection stratum of SRS coordinator are described in aed general form (3.38) in 
Section 3.2.1.
The change of coordination strategies and SRS coordinator states is executed 
on the learning and self-organization strata which are described by functions of 
states transition oy0 and o(p0given in (3.39) form in Section 3.2.1. All metric 
characteristics p of SRS sub-systems being coordinated - designed and controlled 
- and the most significant geometrical signs are defined in the frames of aed for­
mal model of HS in codes of numeric positional system LS , and presented in 
(3.64) and (4.9-4.14) forms in Sections 3.2 and 4.2 respectively.
Preliminary conclusion
The conceptual model of SRS biomechatronic system presented in aed theoretical 
basis of hierarchical systems for the design and control technology realization is 
briefly presented in the Chapter. In comparison with models of mathematics and 
artificial intelligence the proposed SRS formal model contains connected descrip­
tions of the biomechtronic system structure, its aggregated dynamic representation 
as a unit in its environment and SRS environment model. All the descriptions are 
connected by the coordinator which performs the design and control tasks on its 
strata. Exemplary control loop of robot system (RS) coordinator is presented in the 
Chapter in the form of Multi Motion Controller (MMC) which realizes coordina­
tion of AS3 robot notion. Computer control system (CCS) is presented in the form 
of SRS coordinator, and CCS subsystems interaction in control process is revealed. 
Model of SRS design system is given in the form of coordinator of higher level 
119

which performs the design tasks on its strata: selection, learning and self- organiza­
tion. The conceptual SRS model presented in this chapter is coordinated with tradi­
tional systems of information presentation in biomechatronics - numeric and geo­
metrical forms (see Chapter 4). Aed technology of HS is also coordinated with 
general requirements of design and control systems (see Chapter 1), considers the 
elements of SRS conceptual model as well as connected SRS subsystems of differ­
ent nature - mechanical, electromechanical, electronic, human-computer, biologi­
cal - in common aed theoretical basis. It brings new possibilities in creating of a 
formal language for conceptual design of surgical robots and other biomechatronic 
systems.
Besides, the proposed conceptual model facilitates considerably the transfer 
from the conceptual design phase to the detailed design phase in the mechatronic 
object’s life cycle. The presentation of the conceptual model elements in the form 
of the dynamic systems (p, ф)1 - which are the generalization of mathematical 
models (DE, automata, algebra systems [9.10]) - turns the transfer algorithm to the 
detailed design phase into the concretization process of the conceptual (p,p)' 
models. It allows the efficiency of the design processes of the biomechatronic sys­
tems to be enhanced.
120

6. CONCEPTUAL MODEL
OF BIOLOGICALLY INSPIRED ROBOT
In this Chapter, a conceptual model for design of biologically inspired robot - 
Bioloid Dinosaur robot [66] - is presented. Design process of robots - industrial, 
universal, biologically inspired, etc. [56, 67-71, 141] - in general product life cir­
cle (see Fig. 1.2) contains several phases [1], similar to other engineering objects. 
The first conceptual design phase is very important, because the main design con­
cept is generated and evaluated at this phase. According to the Hierarchical Sys­
tems (HS) technology described above (see Chapters 3,4), to create a conceptual 
model of robot being designed it is necessary to take into account its several levels: 
structure of robot (lower level), its aggregated dynamic representation as a unit in 
environment (current level), the environment construction and technology (higher 
level) and robot coordinator, i.e. robot design and control system. Therefore, a 
conceptual model of Dinosaur robot in formal basis of HS technology is given first 
in the Chapter. Examples of conceptual descriptions of assembly design and robot 
motion design are presented after that.
6.1. Conceptual model of dinosaur robot
Conceptual model of Bioloid Dinosaur robot is presented in the frames of HS theo­
retical basis as follows:
S^ О { a,S0,&}} , 
(6.1)
, 
.J. • 
... 
• 
. • . 
.....
where a is aggregated dynamic realisation, which represents the robot as a unit 
in its environment, G ^ is structure of Dinosaur robot, S0 is coordinator which
connects G with a and in this way performs the design tasks, . is index of level.
121

t
Structure a of Dinosaur Bioloid robot is defined in the form of (3.14) - see
Chapter 3 - and contains aggregated representations of lower level elements (head 
t—1 
„t—1 
t—1 
t—1 
t—1 
t-1
<»6 
, arm «5 
, body <»4 
, leg <»3 
, tail <»2 
, foot a 1 
) and their con­
nections ayt - the joints, see Figure 6.1.
t—1 
6
Y 4—51
t—1
5
t—1
4
t—1
3
t—1
1
Fig. 6.1. Structure at of Dinosaur robot, at—1 are structural elements, aY4t,5 is structural connection 
of at—1 and at—1 robot elements
t—1
2
a
For example, common part of the arm a5t—1 and the body at—1 is their 
structural connection, i.e. shoulder aYt which is the structural element of a low­
er level of Dinosaur robot. The shoulder is constructed from servo motor Dy- 
manixel AX-12 [66] presented in Figure 6.3. Being the electromechanical subsys­
tem of robot mechatronic system the servo motor is describe in (p, ф) form at the 
Conceptual Design phase. (p, p) conceptual description is transformed to State 
Space equations at the Detailed Design phase (Fig. 6.2) and can be concretized and 
presented in the following form (6.2):
122

X =
La
ia
Ra
ia
-1
K
- K
®m
-K
+
E
0m
B
B
0
У = [0
ia
(6.2)
®m
Fig. 6.2. Conceptual model transformation at the design phases
1
+ 0
In this case first state equation of (6.2) corresponds to ф function, and output 
equation corresponds to reaction p of (p, ф) representation. State space equa­
tions (6.2) can be transformed at DD phase to the following transfer function (6.3) 
if necessary:
Gm( = ^m (sК Ki
ea (s) 
S^ JLa + sJmRa + KKb
(6.3)
The meaning of the variables given in (6.2), (6.3) and Figure 6.3.are explained 
below.
a)
b)
Fig. 6.3. Dymanixel AX servo motor a), and its equivalent electro-mechanical scheme b)
123

In Figure 6.3b and equations (6.2) and (6.3), ia is armature current, La is arma­
ture inductance, Ra is armature resistance, Va(t) is input voltage, Eb is back emf, Kb 
is voltage constant, Tl is load torque, Tm is motor torque, Om, Ют are motor angular 
change and velocity respectively, Ki is moment constant, J is motor moment of 
inertia, B is friction constant, K is a constant.
Coordinator S0 of robot oS^ is presented in the form of (3.15) (see Section 
3.1) and controls the process of robot motion on its strata of selection, learning and 
self-organisation. Coordinator control functions on selection stratum are realised in 
this case by
t-1
Bioloid CM-5 control unit (Fig. 6.4) placed on the Dinosaur robot body CD 4 . 
Coordinator learning and self-organization strata are realized by the design system. 
Motion process onS^ performed by robot oS£ in its environment sS^ is pre­
sented as a change of robot’s interconnections №X^ with elements Si (i e I^+1) 
of environmental system s Sand described according to (p,ty~) model (3.4). 
Contact state m Xi of robot’s base leg with a pathway surface s S0 is regarded as 
robot’s interconnection юу0 with sub-system e S0 , i.e. the element of robot’s 
environment e S ^ .
Fig. 6.4. Design model of Bioloid CM-5 control unit created in SolidWorks system environment
All the metrical characteristics of robot’s bio-kinetic apparatus (relational an­
gles, length of limbs, etc.) and motion process (displacement, velocity, accelera­
tion) are described in the form of numerical characteristics of HS conceptual mod­
el, similar to the case of human motion design (see Chapter 7).
124

6.2. Robot motion design
Motion design of Dinosaur robot in described in the frames of the suggested con­
ceptual model. In this model, it is possible to present the measures of motion (ve­
locity, acceleration) as a change of measures of the states of dynamic systems in 
elementary time in metrical, structural and boundary (geometric forms) spaces 
[55,72], see Chapter 4. For Dinosaur robot, the velocity, for instance, is defined as 
change Д of its parts interconnections aytt‘ in elementary time interval tt’, t’>t. 
The velocity is directly proportional to the changes of the interconnections a ytt‘. 
The dependence of the interconnections change and the kinds of robot motions is 
presented as follows:
A CT ytt ‘ = 0; 
^ standing phase,
ACT ytt‘ = const; ^ motion with constant velocity,
ACT ytt‘ ^ const; ^ motion with acceleration.
The measures of motion have their directions dependent on the elements’ ad­
dresses in the environment, according to which the present process is considered. 
One of these elements from robot environment e Sf is the pathway e S^ .
Computer program construction for design of Dinosaur robot motion is pre­
sented according to HS conceptual model (see Fig. 3.1, Chapter 3). Coordinator 
S0 is presented in the form of control program, subsystems S ' 1 play the role of 
subprograms, process K S f describes the calculation process, inputs and outputs are 
correspondent interactions of subprograms and calculation processes. One of the 
subsystems of the robot environment sSf is operator e Sf- which observes the 
design process on computer and changes program construction if necessary.
According to the conceptual HS presentation, all parts of body construction of 
Dinosaur robot are presented in the form of the correspondent program units a ' ''. 
Their connections Gy!" are realized as programs’ interactions and are presented in 
the form of parameters, i.e. common program variables changeable in calculation 
process. Control program which coordinates the design process is presented in the 
form of coordinator (3.15). Design process is described as coordinator process 
o%SOf (3.22), see Section 3.1.
The coordinator’s task in the process of design robot movements is to provide 
a coordinated motion of robot in its environment and deformations of its elements,
125

i.e. ayc changing. aya in geometrical sense are angles between robot parts (body, 
foot, leg). So, the coordinator’s task is to continuously change the angles to provide 
the required locomotion process of robot. Formally, the task performing is de­
scribed as reaction pa of the coordinator (6.4). At the same time, it is described 
according to (p, ф) model as state transition function pa> of the system (robot 
bio-kinetic apparatus) in the form (6.5) as follows:
p0 : C0 x at ^ ata, 
(6.4)
qq 
q 
q
Ptt : °txaYtt'^ °f , 
(6.5)
where at is the state of robot bio-kinetic apparatus structure at the moment of 
time t, aYt is the change of angles during the period of time tt’, at\ is the state 
of robot bio-kinetic apparatus structure at the moment of time t’ and t’>t.
As stated above, the connections aya are presented as program variables on 
computer. In motion design the coordinator (control program) changes continuous­
ly the angles, i.e. parameters which are common for two correspondent program 
units, and in this way realizes the required motion process K S a of robot.
6.3. Assembly of dinosaur robot parts
HS conceptual design model is presented in this Section for the design of Bioloid 
robot assembly operations. In the basis of the conceptual model described above, 
the robot being assembled is presented in the form of (6.1), and the assembly oper­
ations are presented as a particular case of synthesis operations considered in 
Chapter 4, and partially described in [73]. The difference between the synthesis 
and the assembling operation is that the common part (structural element) of one of 
the two united objects is an “imaginary” geometric element. For instance, a cylin­
drical hole can be regarded as a geometric object - cylinder - marked with a “mi­
nus”. Such imaginary elements have their structural addresses given in numeric 
codes in (4.12) form.
The exemplary assembling process of Bioloid Dinosaur robot foot from its 
parts, i.e. its two frames, screws and nuts is presented as follows.
126

At the first stage the robot foot parts (geometric objects gSi), which are of 
different constructive dimensions, are not connected objects: g S13 and g S22 are 
frames F1 (3D object) and F3 (conditional surface) respectively, g S31 and g S40 are 
screws S1 (conditional lines) and nuts N1 (conditional points), Fig. 6.5. Coordina­
tor defines the sequence of the parts being assembled and structural addresses of 
their common parts (links). The addresses of the interconnections are defined in a 
numeric positional code in the form similar to the connections defects £^ (4.12).
^
Fig. 6.5. Constructive dimensions of foot parts being assembled: 1. O0)i —1_0_0_0 (one frame F1); 2.
^<я 2 — 0_1_0_0 (one frame F3); 3. S® 3 — 0_0_4_0 (four screws S1); 4. S® 4 — 0_0_0_4 (four nuts N1)
At the second stage, coordinator executes consecutive connections of the foot 
parts. Simultaneously, both the basic element (state C1: part g S22 ) and the input 
element X1 (part S3 ) are indicated. Output (Y1) is a construction of two assem­
bled parts S (Fig. 6.6), which is the basic element (C2) for the next assembling 
step. States dynamics of object gS1 (dinosaur robot) in the assembling process is 
described by (6.5). The reaction is:
{o p1: C1 X X 1 ^ У1&1е T }^. 
(6.6)
127

t
Structure a of the assembled Dinosaur robot foot is presented according to 
(3.14). Structural elements of a lower level are subsystems gS13 and gS22 , i.e. 
frames F1 and F2 respectively. Connections CT/i,2 are presented by elements gS 31 
and gS4, i.e. screws S1 and nuts N1 respectively (Fig. 6.5). After creation of the 
robot foot (Fig. 6.6), the following steps of the assembly process are realized. Two 
of the steps are presented in Figure 6.7. Resultant assembled Dinosaur robot is 
presented in Figure 6.1.
Fig. 6.6. Constructive dimension of resultant assembled robot foot is 8a = 1_1_4_4
Figures 6.1 and 6.4-6.7 are the results of a computer design of Dinosaur Bi- 
oloid robot and its assembling operation in SolidWoks (Dassault Systemes Solid­
Works Corp.) program system environment [74].
Fig. 6.7. Two exemplary steps of the assembling process of Dinosaur robot leg
128

Preliminary conclusions
The conceptual model of Dinosaur Bioloid robot created in theoretical basis of HS 
is presented in this Chapter. In comparison with traditional methods, the formal 
construction of the suggested conceptual model contains connected descriptions of 
the Dinosaur robot structure, its aggregated dynamic representation as a unit in its 
environment, part of the environment model. All the descriptions are connected by 
the coordinator which performs the design and control tasks on its selection, learn­
ing and self-organization strata. Besides, numeric and geometric characteristics of 
the robot being designed are presented in the frames of HS conceptual model in the 
form of numeric positional system. It allows the model to fulfill the general re­
quirements of design and control systems, see Chapters 1 and 3, and CAD systems 
in particular.
Therefore, hierarchical systems technology is applied in the Chapter in the ex­
emplary tasks of conceptual description and mechatronic design of Dinosaur Bi- 
oloid robot, design of robot’s assembly operations and motion design. The exam­
ples of computer realizations of the design tasks in the frames of SolidWorks pro­
gram system are presented. Mechanical, electromechanical and program computer 
subsystems of general robot mechatronic system are partially described in common 
formal bases of the conceptual model suggested. The model dynamics while trans­
ferring from the conceptual to detailed design phases is shown for the case of the 
robot servo-motor.
129

7. HUMAN MOTION DESIGN
USING HIERARCHICAL SYSTEMS METHOD
Realization of Hierarchical Systems (HS) design method and conceptual model in 
design and control of human motion is presented in this Chapter. Design and con­
trol of human motion requires consideration of man’s connected levels and their 
dynamics. Advanced design methods are required for effective problems solving. 
At present there are a lot of models and methods, which are applied in tasks of 
coordination (design and control) of bio-mechanical systems and human motion in 
particular [75-78]. The overview of theories concerning human bipedal walking is 
well presented by Vaughan in [79]. All the methods differ with reference to the 
type of movements they describe and kind of problem being solved. The most pop­
ular mathematical models which are used for biomechanical motion description, 
such as differential equations (DE), integral-differential equations (IDE) are single 
level by nature and useful enough for modeling of mechanical kind of physical 
motion.
In comparison with physical type of movements which are caused by action of 
external forces only, the bio-mechanical one executed by man is characterized by 
structural changes (deformation) of human body elements - muscles compressing 
and limbs angular change - which lead to the man movement in its environment. 
So, the biomechanical movements in general and human motion in particular are 
hierarchical by nature. To design and control human motion it is necessary to take 
into account several levels: 1) human body structure, 2) human dynamic represen­
tation in its environment, 3) the environment structure. Traditional one-level for­
mal models can-not describe human body construction and motion process on mul­
ti-levels. It is also impossible to regard the task of connected motion and defor­
mation within the frames of one common formal model. The most popular Finite 
Elements Method (FEM) is usually used for the deformation tasks performing and 
Integral-Differential Equations (IDE) are used for motion description.
That is why the construction of hierarchical systems (HS), its coordinator 
technology and the design methods described in Chapters 3,4 are applied in this 
Chapter as a theoretical basis for coordination problems solving and conceptual 
design of human motion. The main aim of the study presented here is the develop­
130

ment of a new method for human motion design with the use of coordination tech­
nology, Hierarchical Systems and Dynamic Systems approach (see Chapters 3 and 
4). The method takes into account all the levels mentioned above and provides a 
common theoretical framework for a formal expression of both the human motion 
and design procedures. The aim of the experimental study is to answer the question 
if the computer design method developed corresponds to the real processes of hu­
man motion, in our case to human sitting-standing-up movements, and if it is pos­
sible to predict and coordinate (design and control) human motion using the HS 
design method developed.
To reach the aims: 1) a theoretical basis of the design method proposed is de­
scribed using hierarchical and dynamic systems [9,10] hierarchical mathematics, 
and aed (ancient Greek word) coordination technology of HS [6-8], see Chapters 3, 
4; 2) coordination (design and control) task is formulated, ways of human motion 
design and method steps are defined in this Chapter in Section 7.1, 3) systems 
movements and deformations are defined within the frames of theoretical basis of 
the HS technology in Section 7.2; 4) an algorithm of computer design and steps of 
the method realization for human sitting-standing-up motion are given in Section 
7.3; 5) computer motion design, and 6) an experimental motion study are per­
formed and described in Sections 7.3 and 7.4 respectively; 7) comparison of the 
results of both in vivo laboratory and computer experiments is performed, and de­
sign method analysis is given in Sections 7.4 and 7.5 of this Chapter.
7.1. Coordination task formulation
In the coordination process (design and control) of human motion it is necessary to 
consider several connected levels of the object under consideration. All connected 
levels, i.e. 1) human body structure, 2) human dynamic representation as a unit in 
its environment, 3) the environment structure are taken into account within the 
frames of aed coordination method of HS, described in Chapters 3,4 and sections 
7.1-7.3 of this Chapter.
The main design tasks, i.e. synthesis and analysis, are performed by coordina­
tor of hierarchical system (HS), which connects human body structural change with 
its behavior in the environment and in this way predicts various kinds of human 
movements taking into account the environment construction.
Coordinator of HS is a multilayer system (see Chapter 3). The tasks of various 
layers (strata) in within the frames of general coordination task under conditions of 
any knowledge uncertainty, are as follows:
131

- creation or improvement of the system construction & technology, to make 
its activity in higher level system most coordinated with the desired environment 
states on all its levels; (selection stratum);
- change the ways of main design & control task carrying out when de­
signed constructions & technologies are multiplied and knowledge uncertainty is 
removed; (learning stratum);
- change the selection and learning strata as new (higher level) knowledge 
constructions & technologies are created (self-organization stratum).
Human motion design task is carried out by the coordinator on its selection 
stratum. In this process coordinator S0 creates the desired geometrical construc­
tion of the object under consideration (human bio-kinetic apparatus) according to 
the required object’s representation (form) in its environment (synthesis task). In its 
turn, the coordinator partly changes the structure of the resultant object and anal­
yses the object’s behavior in the environment (analysis task). All the tasks are per­
formed by the means of realization of one of the coordinator’s strategies [3, 80].
The immediate performance of the task is realized at the fourth stage of HS 
design method (see Chapter 4). The main general steps of HS method realization in 
the process of human motion design are the following.
1) Description of the object being designed (human body construction and its 
motion process) in the form of aed (two-level system with dynamic units) - stand­
ard block of hierarchical systems.
2) Representation of basic geometric elements of human bio-kinetic apparatus 
in the hierarchical form as conditional objects - conditional point, line, surface, 3D 
object.
3) Definition of metric and structural characteristics of geometric construc­
tion of human body - constructive dimension of body segments, addresses and 
directions of the segments (limbs) connections (body segments structural connec­
tions) - in the codes of numeric positional system (see Chapters 3, 4).
4) Realization of the design process of human motion - synthesis and analy­
sis - as the coordination process of HS.
Fourth stage of the method realization contains two design sub-tasks, i.e. syn­
thesis of geometric construction of human bio-kinetic apparatus and analysis. 
Analysis tasks are two connected tasks of deformation and motion. Deformation in 
our case means partial change of human body structural connections (joints angles, 
velocities, limbs lengths). Motion is considered to be a change of human interac­
tions with the elements of the environment system (human movements in its envi­
ronment) caused by the structural deformations of human bio-kinetic apparatus. An 
example of the change of human interactions with its environment is the change of 
the contact of human feet with the road while walking. Both synthesis and analysis 
tasks are formulated and described below within the frames of the presented HS 
132

design method (see Sections 7.3). Theoretical basis of the HS method of human 
motion design - aed formal model, coordinator model, numeric and geometric 
characteristics - is described above in Chapters 3, 4.
7.2. Definition of human movements and deformations
The design task of object movements and deformation is defined as a coordination 
task of the hierarchical system. The motion process onS^ of man oS^ in its envi­
ronment E S^ is presented using HS aed technology as changing human intercon­
nections ю у^ with elements S\ (i e I'+l) of the environment system E S ^. Inter­
connections a у1 changing of the elements of human bio-kinetic apparatus struc­
ture a^ is considered to be deformations. Coordinator S0 controls the process of 
human motion by changing structural connections ay'' (joint angles) of human 
structure. Continuous changes in joint angles cause continuous changes of external 
connections ay^ of man in its environment ES^, i.e. human motion. All the tasks 
are performed by coordinator S0 on its layers.
It is possible to define different kinds of movements and deformations by in­
troducing corresponding conditions. For instance, the following relation corre­
sponds to physical movement (object’s coordinates changing) in time interval Ttf :
аУ| Ttt'= const . 
(7.1)
Here structural connections a у^ are not changed (in this time period) and 
structure a 1 state is not changed either. Such movement is conditioned by envi­
ronment process En S^ and described in the following form:
^ 
s^£
sn \Р,Ф) • 
::~P ~{sxPt -sXt Xs Ct ^EYt & t e T }, 
(7.2)
_t 
,J- . 
v^ Ят i i' r- Hr
E^P -{EnVtt :E Xt XE Ctt ^XC' & t, t e 1 & t > }} .
133

For the bio-mechanical movement the following relation is true:
(I£X e xT£Y n )| T=T0)7 n T< = const, 
(7.3)
in other words the external connections ш у n in time interval | Tt7 depend on 
structural interconnections changes О у| Tt7 only. This movement is condi- 
оП
tioned by process onS of the object and is described in the following (7.4) form:
on(p,pJ: 
o^PП ={onPt ■ Xt xC/ X Y & t e Tn}, 
(7.4)
~п 
VL 
T^
oPP 
{on(Ptt' ■ Xt x Ctt' X Xt' & t, t e T & t > t}.
Geometric and physical values of biomechanical objects, e.g. man, are defined 
in state spaces: Mn, Sn, Qn, and Tn which are metrical, structural, dynamical and 
time characteristics of systems respectively (see Section 4.1). All calculations are 
carried out in these spaces with codes of numeric positional system LS . The ways 
of human motion design depend on the characteristics (metrical characteristics // n , 
connection defect ^ n, constructive dimension 8n) of both structural О П and ag­
gregated dynamic ш ^ representations. The ways correspond to coordination strate­
gies T^L e Л^ ={, ^n ,v ^n 
^L ,i^n} for different levels of coordinator S0,
U o 
o 
o s X o p ^P o o
information uncertainty indicated by y, %, p, A indexes.
7.3. Computer design of human motion
Motion process onSn of man (or human-like robot) o8n in its environment eS 
is presented within the frames of HS aed technology as changing the man’s inter­
connections myn with elements Si (i e I^+1) in its environment system sSn. 
The design task of human motion is defined as coordination task of Hierarchical 
System using aed technology. The process of human motion is presented according 
to the formal description given in Section 7.2 and Subsection 7.3.1. The design 
task is performed using aed conceptual design method (see Chapters 3 and 4).
134

7.3.1. Algorithm of human motion design
The design algorithm of human movements is realized according to the steps of HS 
design method (see Chapters 3 and 4). These steps are as follows.
1. Synthesis of the geometrical construction of human bio-kinetic apparatus.
This process corresponds to the calculations of the resultant characteristics 
{Q, Г, S) of the geometrical construction of bio-kinetic apparatus. {Q, Г, S) is 
the set of parameters which describe the geometric construction of mechatronic 
object according to aed presentation (4.7), see Section 4.1 of Chapter 4. 
Q = {®i :i e Iq ) is the description (with the help of metrical characteristics ^£ 
which are the coordinates, length, squares, volumes, angles) of the state of geomet­
ric construction of human bio-kinetic apparatus presented in aggregated dynamic 
form Ш £; Г = { / : i e I г ) is the description of the human body interconnections 
my£ with other objects (boundary of the human body defined by the coordinator); 
S = {vi :i e IS ) is the description of human bio-kinetic apparatus (body) struc­
ture v£. So, human body construction as well as any geometric construction of 
mechatronic object being synthesised can be presented in the form of relations 
Sсй/Г/Е. on the Cartesian product of variables Q,Г,S.
Within the frames of the conceptual design method proposed (see Chapter 4), 
synthesis of human bio-kinetic apparatus structure v£ of level £ from lower level 
elements a 1 (body segments) is realised by coordinator S£ on its selection 
stratum (see 2.2.3) according to the following algorithm. In the synthesis process 
coordinator performs the following actions:
a) defines the constructive dimension of the resultant object, i.e. geometric 
construction of human bio-kinetic apparatus (chooses the required structure class 
0123
v ,v ,v ,v from S);
b) defines kinds of changes of initial standard element of the defined structure 
which are necessary to perform the constructing of human bio-kinetic apparatus 
Si;
c) 
sets the sequence of the changing actions from the determined classes;
d) performs the actions defined in c), - this process corresponds to the calcu­
lations of the resultant bio-kinetic apparatus characteristics {Q, Г, S) .
135

Formally, this synthesis process is presented as follows:
50 :{aе~1,аГ£} ^ а1 
(7.5)
where 50 is coordinator, а£ is structure of human bio-kinetic apparatus of level £ , 
a £-1 are lower level £ -1 elements, i.e. bio-kinetic apparatus segments, from which 
structure a£ is synthesized, ay£ are their structural connections (joints) (see Fig.7.1).
As a result of this synthesis step, structure аГ of human bio-kinetic apparatus 
S0 is synthesised as well as structure a£+1 of environment 5£+1 (e S£) where 
man S£ performs his motion. The process of synthesis goes in such a way that 
elements of structures a£+1 and a£ obtain common parts a у£+1 and a у, and
..£+1 
.
the connections a у include the interconnections a у r of human bio-kinetic 
apparatus S£ with other elements S£ (r ^ i) of environment system S£+1.
Relations between the basic geometrical structures are presented in the form of 
procedures from the given classes. So, it became possible to choose a class of pro­
cedures for the synthesis of a required output object (human bio-kinetic apparatus 
construction) from the given input objects. Both the states of structure and form of 
human bio-kinetic apparatus are continuously changed. The process dynamics is 
described by dynamic system (p,p)£(3.5). As an example, the result of synthesis 
process of the human body geometric construction is given in Figure 7.3.
2. Changing interconnections of segments of human bio-kinetic apparatus.
Usually, the data of the relative joint angles, velocities, trajectories, etc. for a defi­
nite kinds of human movements is obtained from ‘in vivo’ experiments, e.g. using 
motion capture system. Design of a similar motions is executed by changing input 
parameters, such as limb length, mass, etc. Prediction of another kind of move­
ments can be conducted by intuitive setting of arbitrary parameters, such as joint 
angles. The results of computer motion design, for instance obtained trajectories 
and velocities of various points of body segments, can be compared with the exper­
imental results, i.e. trajectories and velocities of various points of markers, placed 
on the human body segments.
3. Realization of human motion (the change of human interactions with the ele­
ments of its environment) by changing the body structural parameters (partial 
structural deformation) on the predefined time interval.
The process is realised in the following way.
136

For biomechanical kind of human motion the changes take place inside the 
human bio-kinetic apparatus structure a without the influence of external effects 
(not taking into account gravitation forces); structural connections a y? are weak­
ened in one place and become stronger in another one, the general metric charac­
teristic 0p? of human bio-kinetic apparatus St remains the same; the change of 
structural connections ay? causes the change of external interconnections ®yt 
(the change of human body S? location in environment structure a?+1, i.e. human 
motion); the consecutive changes of structural connections a у? on time interval 
simulate the deformation evolution in human bio-kinetic apparatus structure a ? 
and correspondent human movement in its environment system, caused by the 
deformations of structure a ? .
The relations between the variations of human structure a ? changes and the 
kinds of human motion are set by the coordinator. So, the task of human motion 
design - coordination task of the connected human movements and its bio-kinetic 
apparatus deformations - is reduced by the proposed conceptual design method to 
the coordination task of standard aed block of hierarchical systems. Formally, human 
motion task performing is presented with the help of (p, p) functions as follows: 
?? 
? 
? 
? ?
P0 : C 0 X ^t ^ ^t '& ^t ' - Y0,at - X0 , 
(7.6)
?? 
? 
?
Vtf : at 'оУи' ^ at,
i.e. in the form of coordinator reaction P0? , and in the form of state transition func­
tion pett< of the human system, where at and at? are the states of human bio- 
kinetic structure at moments of time t and t’ respectively, t’>t; a y? is the change 
?
of structural connections (joint angles) during the period of time tt’; C0 coordina­
tor states, i.e. the states of computer control program. The exemplary task of com­
puter design of human sitting-standing-up motion is described below.
137

7.3.2. Computer design of human sitting-standing-up movements
The following design steps of human sitting-standing-up movements are coordinated 
with the general algorithm of human motion design presented in Subsection 7.3.1.
At the first step, the construction of human bio-kinetic apparatus о1 is synthe­
sized by coordinator from the apparatus elements a l- of lower level ^ -1 (see 
Fig. 7.1). This process is executed according to the first step of the algorithm pre­
sented above in Subsection 7.3.1. During the synthesis process the human 3D ap­
paratus is constructed as a complex of its details af 1 of 8 = =0010 constructive 
dimensions, i.e. conditional lines - limbs, which are created independently from 
conditional points, i.e. cubes (Fig. 7.2). The details have incoherent scales (sizes) 
and locations. Computer HS technology of synthesis in the given case only de­
mands the indication of common (in the resultant bio-kinetic construction) details 
(joints) of the units, i.e. limbs, being united. The other details are restored from the 
indicated ones thanks to their connections defined before. As a result of the uniting 
technology realization, coordinator creates a connected unit of human bio-kinetic 
apparatus with coherent scales and locations of its details. This unit can be recon­
structed by any of its details.
Fig. 7.1. The structure о1 of human body (bio-kinetic apparatus), ®/ 1 are structural elements, fl 
external and ff1 structural connections, part of environment system £Sf is a base-surface
Synthesized human bio-kinetic apparatus structure о1 contains aggregated 
representations a of lower level elements (thigh ®4-1, shank af-1, foot a 2-1, 
138

fingers ©1 1, body ©5-1, arm ©6-1, head ©7-1), and their connections ay^ 
- joints (Fig. 7.1). For example, the common part of the foot Ch 1 and the shank 
©3 1 is their structural connection, i.e. heel ay23 . One element of environment 
e Sfi is the pathway on the base surface. The external connection ffl/j^ of man is 
the contact place of his foot with the pathway on the base surface.
At the second step, sitting-standing-up motion parameters are defined as the 
input data of the computer program. In this process the external connection а y1 of 
man (contact place of its foot with the base surface) is constant value, i.e. ffl/j^ 
=const. Velocity of interaction change (angular velocity of knee joint) is greater 
than ones of heels and other joints. So, joints angular velocities ю are defined in the 
program with the help of weights of joint angels change as follows:
a1(i)=a1(i)+w1*a0,
where: a0 is a minimal angular change on each i step (discrete time moment), w1 is 
weight, a1(i) is a meaning of the value of angle a of 1 joint at i discrete moment of 
time. Acceleration e is presented in the program as a change of velocity w 1(i), i.e. 
weight, at each time step. The inertia moment of the bio-kinetic apparatus n seg­
ment (see Fig. 7.2) is defined as follows:
Ix = S mi hi or Ix = J ph2 dV, 
(7.7)
V
where p is mass density and V is the volume of a segment element, i.e. conditional 
point.
Fig. 7.2. Structure of human body n segment (conditional lines) synthesized from conditional points 
Si (cubes); mi is the mass of i conditional point Si; hi =(i-1)*long[n]+0,5* long[n] is Si distance from 
z axis, k=lip[n] is the number of the conditional points in structure of the body segment n
139

In the computer program the inertia moment is defined as follows:
for i:=1 to lip[n] do
begin
write('enter mass of I element of n body segment?:');
readln(mas[i,n]);
end;
mis[n]:=mas[1,n]*0.5*long[n]*0.5*long[n];
for i:=1 to lip[n] do begin
mis[n]:=mis[n]+(i-1)*mas[i,n]*((i-1)*long[n])*((i-1)*long[n]);
where lip[n] is a number of elements (conditional points) in the construction of 
n segment of the bio-kinetic apparatus, long[n] is the length of the edge of each 
conditional point of n segment, mas[i,n] is a mass of i element of n body segment, 
mis[n] is inertia moment of apparatus segment n.
The torque of each segment of bio-kinetic apparatus is defined in the standard 
form:
Ix£=Mz 
(7.8)
and in the computer program:
Torque:=w1(i)*mis[n].
The other parameters, i.e. way of interconnections (joint angles) changing, ve­
locities, trajectories of segments of human body are also defined. This input data 
for sitting-standing-up kinds of human movements necessary for computer motion 
design was obtained from experiments (see Fig. 7.6), using Optotrak 3020 motion 
capture system (Northern Digital Inc., Canada).
At the third step, a human sitting-standing-up motion for one cycle is realized. 
One cycle contains the change of bio-kinetic apparatus structural parameters, i.e. 
joint angles, from their initial to maximal values (sitting) and vise versa (standing- 
up).
Design of similar sitting-standing-up motions is executed by changing input 
parameters, such as limb length, mass, etc. Design process is visualized, so it is 
possible to make visual control of design process by observing the computer mov­
ie. Prediction of another kind of movements is conducted by setting of arbitrary 
parameters, such as limbs lengths, weights and joint angles. The predicted results 
of computer motion design, e.g. trajectories and velocities of various points of bio- 
kinetic apparatus segments, are compared with the experimental laboratory results, 
i.e. trajectories and velocities of various points of markers placed on the subject’s 
body.
140

The above algorithm is realized as a computer program and is used in the 
computer experiment of human sitting-standing-up movements design. The com­
puter experiment contains the following particular steps:
1) definition of the program input parameters: length of human body seg­
ments (lip[n]*long[n]; lip[n] is a number of elements (conditional points) in the 
construction of the body segment n, long[n] is length of the edge of each condi­
tional point of segment n); mass of the segments elements (lip[n]*m[i] is a mass of 
the body segment n, m[i] is elementary mass of i conditional point of segment n); 
coefficients of joints angels change wi in the elementary time interval;
2) realization of motion design, i.e. simulation of human motion and visuali­
zation of the process;
3) calculation of the trajectories of definite points of human body 3D seg­
ments (hand, arm, leg, head), correspondent displacements, and velocities - analo­
gous of a forward kinematics task;
4) calculation of relative angular velocities of joints of human bio-kinetic ap­
paratus;
5) program simulation of various angular accelerations of joints and calcula­
tion of correspondent inertia moments and toques;
6) comparison of the computer design data with the experimental results ob­
tained from motion capture system in the laboratory environment;
7) 
model validation;
8) computer design of human sitting-standing-up motion for another input 
data;
9) computer design and prediction of other kinds of human motion by defin­
ing other conditions and arbitrary parameters of motion based on previous skills.
The first step corresponds to the coordinator (model) learning process when 
real parameters obtained from in vivo laboratory experiment are introduced to the 
computer model. The last four steps 6-9 presented above correspond to the stages 
of model modification (adaptation) on the self-organization strata of the coordina­
tor. The other steps of the computer design experiment are the selection strata 
functions (see Chapters 3 and 4).
The results of human sitting-standing-up movements design, i.e. four images 
a)-d) of the exemplary four states of geometric construction of human bio-kinetic 
apparatus obtained from a computer monitor in the process of motion design, are 
presented in Figs. 7.3. The forward kinematics task is performed as accompanying 
detailed design task of general task of motion design within the frameworks of one 
common computational model. The data of human arm end-point trajectory is pre­
sented in Fig. 7.4 as a result of exemplary forward kinematics tasks performance. 
In comparison with the traditional forward kinematics tasks the motion parameters 
can be calculated for any point of 3D construction of human body.
141

a)
b)
c) 
d)
Fig. 7.3. Four states a), b), c) and d) of geometric construction of human bio-kinetic apparatus 
in sitting-standing-up motion - obtained from computer monitor in process of motion design
x=[ 280, 
273.946, 
268.011, 
262.224,
256.613, 
251.202, 246.018, 
241.082,
236.416, 
232.039,
227.969, 
224.222, 
220.812, 
217.748
215.041, 
212.696, 210.717, 
209.107,
207.864, 
206.985]
y=[ 220, 
218.356, 
216.543, 
214.57,
212.451, 
210.198, 207.828, 
205.356,
202.802, 
200.187,
197.532, 
194.86, 
192.194, 
189.56,
186.98, 
184.48, 182.087, 
179.82,
177.72, 
175.8]
Fig. 7.4. Data obtained in a computer motion design experiment - the analogous of the classic forward 
kinematics task: x and y are coordinates (mm) of human arm end-point for discrete time moments 
and corresponding trajectory plot for the exemplary motion
142

The graphic user interface (GUI) of the developed computer program is pre­
sented in Fig. 7.5. All computer program modules were developed by Delphi 7 
program system using Pascal language. MATLAB system is used for data analysis 
and graphic presentation of the experimental results. The analysis conducted at the 
last stages of the study shows the coherence of the results of computer motion de­
sign and the data obtained in a laboratory experiment of human sitting-standing-up 
movements registration using Optotrak 3020 motion capture systems, i.e. coher­
ence of joints angular changes, trajectories, and velocities of various points of hu­
man bio-kinetic apparatus. It shows the validity of both the conceptual and com­
puter models developed. The description of the experiment of the human move­
ment fixation and analysis using motion capture system is presented below.
Fig. 7.5. GUI window of human motion design program; the input parameters are human limbs 
lengths Lip(i) given by number of elementary length units (long) of each limb, and joints angular 
changes Alf(i) (deg); the program output parameters are the trajectories and velocities of various 
limbs points; the output parameters are written in corresponding program data files; human motion 
design and visualization processes are accompanied by the performing of forward kinematics task
7.4. Description of the laboratory experiment
The main aim of the laboratory experiment on human motion is to obtain the real 
motion data which can be used in computer design and learning process as input 
data of a computer model. The data is also necessary for model modification (self­
organization) purposes. Therefore, the experiment is performed to obtain the coor­
dinates of trajectories of the human body points selected (indicated by markers) 
during the process of sitting-standing-up motion of different groups of subjects - 
143

people of various height, mass, limb length, definition of relative joint angles 
change, i.e. angular coefficients, which allow calculation of displacements, angular 
velocities and accelerations, and comparison of the data obtained with the results 
of computer human motion design.
Protocol of the laboratory experiment contains the following steps.
1. Choice of the criteria (characteristics are limb length, height, mass, number 
of persons - subjects) for selecting an experimental group.
At this step the criteria for selecting groups of subjects being examined are 
formulated. The following groups G1 and G2 of subjects were chosen according to 
the predefined height criteria: 165-170 cm. for G1, and 175-180 cm. for G2. There 
are 3 subjects in each group.
2: Optotrack
Fig. 7.6. Experiment scheme, where 1 is a subject - person being examined with markers placed 
on his body, 2 is Optotrack camera, 3 is a computer, arrows are interconnections; measured values 
are coordinates of markers; calculated ones: displacements, angles, velocities, accelerations
2. 
Definition of the standard sitting-standing-up posture.
The way of sitting-standing-up motion (way of legs, arms, and back positions 
changing) performed by the subjects being examined was defined. All the experi­
ments were conducted with subjects standing in their initial position upright on the 
floor with heels slightly apart (see Figs. 7.6-7.8) and parallel and elbows held close 
to the torso. Their back was straight vertical. The arms were bent in the elbow 
joints. Sitting-standing-up process was executed uniformly with little delay in low­
er down position. Heels were taken off the floor. Body was slightly bent forward.
144

3. 
Definition of the experiment conditions.
The following conditions of the experiment were defined: time of the sitting­
standing-up process (regulated during the registration process with the help of 
a metronome) is 20 s.; the values being measured are coordinates (trajectories) of 
markers placed on the predefined body points (Fig.7.9); scales of the measure­
ments: discrete moments on the time interval of 1/30 sec., scale of the measured 
space is 3x3 m.; number of observations for each subject is 3.
4. 
Calibration of the Optotrack 3020 motion capture system.
Optotrack motion capture system was set according to the predefined experi­
ment scheme (see Figs. 7.6 and 7.7).
Fig. 7.7. One state of the laboratory experiment process: subject, i.e. person being examined, markers 
placed on the shank, and camera of Optotrack motion capture system
5. 
Choice of the places of markers.
First, markers number 10, 11, and 12 were placed to define sagittal plane and 
floor base surfaces (Fig. 7.8). After that, the other markers were placed in the defi­
nite points of human body to execute further measurements: two markers on foot, 
and two on each limb, i.e. shank, thigh, leg, subject’s body side.
6. 
Execution of the measurements and data obtaining.
Data acquisition of markers coordinates is performed at each predefined mo­
ment of time. The markers trajectories are built after that. The data collected have 
been given to MATLAB program system environment for further processing and 
graphic presentation. Various markers coordinates in numeric format (Fig. 7.9) and 
their trajectories in graphic format (Fig. 7.10) are plotted in MATLAB system.
145

Fig. 7.8. Places of markers and subject being examined
7. 
Measurement results processing.
The representative data is calculated using the dependence:
Xj (t) = XXj (t) i/n, 
(7.9)
where Xj(t) is X coordinate change of j marker, Xj(t)i is the X coordinate change of j 
marker obtained in i observation, n is the number of observations.
8. Calculation of the joint rotation centers, limbs lengths as the distance be­
tween the joints rotation centers of correspondent limbs.
This procedure is executed by using the known mathematical relations. First, 
the rotation centers are defined as the point of intersection of two lines each of 
which is defined by two markers. After that, the limbs lengths are defined as a dis­
tance between the rotation points.
146

Fig. 7.9. Coordinates of various marker presented in the MATLAB table in numeric format
9. Calculations of correspondent displacements, angular velocities and angu­
lar coefficients for each group of subjects being examined.
To perform the calculations, special program functions were written in 
MATLAB. One of the functions for joints angles calculation is presented in the 
following form:
1 for 1=1:593
2 
alphaSL(i)=atan((A(i,10)-A(i,7))/(A(i,ll)-A(i,8)));
3 
betaSL(i)=atan( (A(i,16)-A(i,13) )/(A(i,17)-A(i,14) ) ) ;
4 
fiSL(i)=alphaSL(i)+betaSL(i);
5 
end;
6 
plot(fiSL)
7 
fiSL
where i is the number of registrations of markers coordinates placed on the sub­
ject’s body; A(i, j) are fields of markers coordinates written in correspondent data 
file while performing the laboratory experiment; fiSL is a correspondent ankle joint 
angle between two limbs of human bio-kinetic apparatus - foot and leg in this case. 
The results of relative angles calculation using the function presented above and 
other functions are presented in Fig. 7.10.
147

Foot toe joint angle
(deg)
Ankle joint angle
(deg)
(deg)
(deg)
Femoral joint angle
Knee joint angle
Fig. 7.10. Human joints angular change - while performing sitting-standing-up motion - calculated 
as a result of experimental data processing by program functions developed in MatLab system environment; 
values of Fi angular change for each joint are given in degrees
10. Comparison of experimental and computer design data and prediction, i.e. 
design, of other kinds of human sitting-standing-up motion.
The results of computer motion design and experimental data obtained by 
Optotrack system for human sitting-standing-up motion were compared and ana­
lyzed. Prediction of motion is conducted for virtual subject with other limbs pa­
rameters. The results of prediction are compared with the data obtained from the 
laboratory experiment with real subject with the same parameters (see Fig. 7.11). 
Positive results of the analysis allows the validity to be stated of both conceptual 
and computer models developed within the frameworks of the suggested HS design 
method.
148

a)
b)
Fig. 7.11. Data analysis results: a) results of computer motion design for virtual subject with predefined 
limbs parameters - program output data of exemplary ankle joint angular change of human bio-kinetic 
apparatus, and b) data of ankle joint angular change obtained from laboratory experiment with real 
subject with the same limb parameters - are given in both plots a) and b) after interpolation procedure; 
values of Fi angular change are given in degrees
Preliminary conclusions and results
The main aim of the task described in this Chapter was HS conceptual model and 
design method application in the design and control tasks of human motion. As a 
result, a new HS method for human motion design was developed. The method 
presents all the connected levels, i.e. human body structure (lower level), human 
body dynamic representation as a unit in its environment, the environment struc­
ture (higher level), in common HS formal basis and takes into account geometric, 
numeric, biomechanical and physical characteristics. The method developed allows 
performing of the motion design task more sufficiently in comparison with tradi­
tional methods because of the functional abilities of the HS design method, such as 
reconstructing the whole object being designed from its any structural element, 
coordination of human movements and bio-kinetic apparatus deformations within 
the frameworks of one common formal model, prediction of human motion, learn­
ing and others. The aim of the experimental study was to answer the question if the 
computer design method developed corresponds to the real process of human mo­
tion, in our case to human sitting-standing-up movements, and if it is possible to 
predict and coordinate (design and control) the human motion using the developed 
program modules.
149

To reach these aims, theoretical basis of the method suggested was described 
in the work using hierarchical dynamic systems and aed coordination technology. 
Coordination task of human motion was formulated, ways of motion design and 
the method steps were defined, systems movements and deformations were de­
scribed within the frameworks of the suggested HS theoretical basis. Algorithm of 
computer design and steps of the method realization for human sitting-standing-up 
motion were given. Experimental study of human motion (using motion capture 
system) and computer design with the motion prediction were performed. Compar­
ison of experimental and computer simulation results as well as the method analy­
sis were given.
The computer motion design was performed using a geometric model of hu­
man bio-kinetic apparatus constructed from conditional geometric objects (see 
Chapter 4). The objects were presented according to HS aed model. The design 
process of human sitting-standing-up motion was performed using initial experi­
mental data of one subject with definite parameters - limbs length and weights. 
Prediction of motion was conducted for a virtual subject with other limbs parame­
ters. The results of computer prediction were compared with the data obtained in 
the laboratory experiment with real subject with the same parameters. Coherence 
of computer design and laboratory experiment results shows the efficiency of the 
suggested HS design method. Exemplary analogous task of the traditional forward 
kinematics task have been performed as the accompanying task within the frame­
works of the suggested method as a result of human sitting-standing-up motion 
design and simulation.
As a result, new conceptual formal model and HS design method of human 
motion coordination - design and control - have been created. The design method 
has the following characteristics:
1) describes a human bio-kinetic apparatus as a hierarchical system; it allows 
the design and control task of human motion to be performed as interconnections 
coordination of coordinated structural and dynamic representation of man in its 
environment;
2) makes possible designing (synthesis) of different kinds of human move­
ments, predicts the motion and obtains correspondent motion data using only the 
geometrical or biomechanical data such as limbs length and weights; consecutive 
interactive performing of the analysis design task, i.e. changing human structural 
interactions (joint angles) and its subsystems characteristics - limbs length and 
mass, and observation of the change of motion process being designed executed by 
man in its environment (higher level system) allows obtaining the desired charac­
teristics of this process, i.e. trajectories coordinates, displacements, velocities, etc.;
3) connects three levels in common formal basis, such as the presentation of 
human structure (bio-kinetic apparatus) and structural deformations (limbs motion 
and joints angular change), description of human motion in environment (change 
150

of human interactions with subsystems of environment), and construction of envi­
ronment (set of subsystems of higher level);
4) performs the connected tasks of human body deformations and human mo­
tion in its environment cased by these deformations within the frameworks of one 
common HS aed model not using traditional approaches, i.e. Finite Elements 
method and Integral Differential equations; allows performing of motion synthesis 
and analysis tasks within the frameworks of one common computer model - soft­
ware construction.
5) allows presentation and processing of information of biomechatronic sub­
systems of various nature - mechanical, electronic, biomechanical, computer - in 
frames of one common HS aed formal basis, what is very important in the case of 
bio-mechanical, robotics, medical, rehabilitation and other systems coordination and 
allows avoiding of modelling conflicts of various subsystems of different nature;
6) makes possible the modification of the developed conceptual and computer 
models on the self-organization strata of coordinator, and motion prediction using 
controlled experimental data;
7) presents the parts of human body in computer design as connected 3D ob­
jects due to the operations with HS models of conditional geometric objects (see 
Chapter 4);
8) allows performing geometric design and forward kinematics tasks as a 
common computational task owing to the description of geometric construction of 
bio-kinetic apparatus, coordination (design and control) procedures and kinematic 
characteristics within the frameworks of one common conceptual model.
Computer program created for human motions design has been constructed ac­
cording to HS structure, and the program functioning corresponds to the actions of aed 
coordinator of HS. The design tasks are realized using commercial software Delphi 
(Embarcadero Technologies Inc., CA, USA) and Matlab (The MathWorks Inc., MA, 
USA) systems. All calculations effectively executed on computer as operations with 
systems quantitative characteristics are presented in numeric positional code. During 
the motion design, the dependences of functional parameters (kinds of motions) on 
the structural ones (sizes, angles) of a human body segments were determined.
Creation of the HS theoretical basis, experimental study and computer simula­
tion of human motion are parts of the development process of aed conceptual mod­
el and HS method of human motion design. Theoretical constructions made possi­
ble the development of computer program modules which realize the technology of 
the method. Experimental measurements obtained by the Optotrack motion capture 
system and the results of simulation (computer experiment) of sitting-standing-up 
human motion allowed the data comparison and the model validation. The results 
of the conducted experimental study show the correspondence of the HS design 
method and computer model developed to real processes of human motion and 
wide abilities of HS design method in motion design.
151

8. DESIGN AND TESTING OF ELECTRONIC 
CIRCUIT BOARDS
The conceptual model for design of an electronic Printed Circuit Boards (PCBs) 
and HS technology of PCB quality testing is presented in this Chapter. The pro­
cesses of the PCB conceptual model creation and PCB quality testing take place at 
the design and production phases of the general technological process of PCB life 
cycle (see Fig. 1.2, Chapter 1). PCB conceptual design is realized in the industrial 
PCB production process by human-computer CAD system coordinated by design 
engineer. The quality of circuit boards is usually tested by a visual system - the 
system of machine vision. To perform the PCB design and testing tasks, various 
methods of PCBs synthesis and analysis are used nowadays for each particular case 
[81-87].
The processes of synthesis and visual testing (analysis) of geometric construc­
tions of PCBs conductive pathways is described in this book using the proposed 
conceptual design method using aed formal model and HS technology (see Chap­
ters 3 and 4). The task is also partially described in [88].
In the technological process of PCB production it is a usual situation for PCB 
surface to have topological damages, such as conductive pathways breaks or joints. 
So, the final stage of the technological process is the analysis of the PCBs quality. 
Usually, the testing is realized as a video analysis, which contains the following 
stages:
1) PCB graphic (standard) image creation,
2) obtaining a video-pattern of a tested PCB in one of graphic formats,
3) comparison of the obtained pattern with the standard image,
4) identification of PCB quality in the case of correspondence of a graphic 
image of PCB to its standard and vice versa.
This approach, being based on standard methods of presentation and pro­
cessing of video-information (graphic images), has several drawbacks. The main of 
them is the lack of coincidence between a graphic image of the board and the PCB 
standard, which can occur during the third stage and is not caused by the quality of 
a produced PCB. The reason is the changes of coordinates and the scale of the 
152

graphic image of PCB obtained at the second stage, which is sometimes accidental­
ly caused by:
- the change of product’s (PCB) orientation in relation to the video camera;
- the change of the scale, i.e. distance between the video camera and the tested 
PCB.
In each of these two cases the images of the standard and PCB being tested do 
not coincides. As a result, a lot of PCBs of a good quality are recognized (at the 
fourth stage) as defective goods.
The proposed conceptual design method is implemented in the form of a com­
puter program and allows the mentioned drawbacks to be avoided. It has the fol­
lowing steps:
1) geometric synthesis of standard of PCB - using HS conceptual design 
method - with the formation of its graphic image (this stage is the part of the PCB 
design phase as well),
2) obtaining a video-pattern - graphic image of the PCB being tested - in one 
of graphic formats,
3) matching of the standard to the obtained image of PCB - coordination of 
the PCBs orientation and scale,
4) comparison of the obtained image with PCB standard and pathways quality 
testing,
5) 
PCB quality assessment.
Each of the above steps differs from the steps of a wide-spread technologies 
of the task performing. For example, the task of geometric synthesis of the PCB 
standard (1st step) is a part of the general PCB design task and corresponds to the 
phase of geometric design of circuit boards.
Computer program realization of the PCB conceptual design method was used 
in tasks of circuit boards design and testing at Horizont enterprise (Minsk, Bela­
rus). The scheme of the mechatronic unit - technological stand with machine vi­
sion system - for quality testing of conductive pathways of PCBs is presented in 
Figure 8.1.
8.1. Geometric construction of circuit board
Geometric synthesis of the construction of PCB standard is the PCD design task 
which is performed at both the conceptual design (CD) and detailed design (DD) 
phases of the PCB life cycle (see Fig.1.2, Chapter 1). At the same time, it (geomet­
ric synthesis of PCB standard) is the first stage of the HS design method realiza­
153

tion for visual analysis - quality testing - of conductive pathways of electronic 
printed circuit boards (PCBs).
Fig. 8.1. Technological stand with mashine vision unit for PCB quality testing: 1 - personal computer; 
2 - video camera control board; 3 - controller of coordinates; 4 - video camera; 5 - drive of coordinate X;
6 - drive of coordinate Y; 7 - drive of coordinate Z; 8 - circuit board being tested
Geometric construction of conductive pathways of PCBs is presented in ac­
cordance with (4.1) in the following (8.1) form:
gSe = g{> ,S0,ae}, 
(8.1)
where: ш(- aggregated description of the construction as a unit in its environment, 
a £ - structure of interconnections,
SО - coordinator, which connects a and CO, and therefore the higher and 
lower levels of the PCB construction,
g - index, which shows the geometrical nature of the mechatronic system un­
der consideration.
Structure a1 is defined according to (4.3) as follows:
a' = {S0 ,{ш (~1,аУ*}}, 
(8.2) 
154

and contains aggregated representations a 01 of PCB geometric elements of the 
lower level, their interconnections ay0 and coordinator S0 which sets relations 
between the elements.
Coordinator is presented according to (3.15) in the following (8.3) form:
S0 = {a*, SО ,a 0}o, 
(8.3)
and in this case is implemented by a computer program as a law of interlevel con­
nections and as rules in accordance with which the geometric elements were con­
nected in geometric constructions of PCBs on different levels.
Quantitative and metrical characteristics of elements a0-1, i.e. conductive 
pathways, and the addresses of their connections ay0 are defined in codes of the 
numeric positional system (4.9-4.14).
Geometric construction of PCB conductive pathways is created by S0) using 
one of its coordination strategies (see Chapters 3 and 4). According to (4.4), coor­
dinator synthesizes the structure of pathways from subsystems a 0-1 of three lev­
els:
S0 :{a 
у0} ^a0, 
(8.4)
where 0 = 0 -2, 0 -1, 0 .
On level 0 -2 the parts of conductive pathways are constructed from condi­
tional points a0~3 presented in the form of quadrates (Fig. 8.2). Number n and 
sizes rf° = w of 0 -3 level elements define width ^1 = w and length ^2 = l=wn of 
0 -2 level segment of pathway.
Fig. 8.2. Structure a0 2 of a pathway segment constructed from conditional points a0 3
a
This process is described at conceptual design (CD) phase as follows:
0 = 0 -2, 
S0“2:{a0~3,ar^~2} ^ a0~2. 
(8.5)
155

Structure a£ 1 of each conductive pathway of the PCB standard is construct­
ed from conditional lines - bands Zy e~2 of different length ц\ = l = wn (Fig. 8.3).
The process is presented in the form of coordinator S 0 1 mapping as follows:
£ = £ -1, 
S0—1:{® ' ~-a7 ^-1} ^ a . 
(8.6)
Mapping R is carried out by coordinator of level --1, S0—1 : a——1 ^ ш£-1, 
and realized as a transition from structure a——1 to aggregated pattern co'-1. Simi­
lar transitions take place on each level during the synthesis of the PCB pathways 
structure. On level £ general structure a£ (Fig. 8.4) is formed from set of PCB 
£—1 
conductive pathways ш :
£ = £, 
S0 :{ш— a.' £} ^ a£. 
(8.7)
While performing the synthesis task at the detailed design (DD) phase, the ge­
ometric characteristics of each conductive pathway are interactively defined in 
156

program realization and written in typical computer files. The pathways are also 
defined as a set of parameters which are presented in typical files in the form of 
corresponding numeric codes. While any of the pathway elements is changed, the 
others are automatically reconstructed by coordinator - presented in the form of 
computer control program - with simultaneous change of corresponding pro­
gram codes. That is possible thanks to the availability of the connections between 
the pathways elements - conditional geometric objects (see Figs. 8.2 and 8.3). It 
allows easy correction of the geometric structure of PCB conductive pathways at 
any stage of its synthesis and reconstruction processes.
The availability of mechanism of information aggregation о1 ^ a £ allows 
the reduction of computer memory volumes in the process of transition to a higher 
level of the PCB geometric structure during its formation. The basic result in com­
parison with well known PCB design and testing approaches is that the graphic 
image of PCB is obtained in the process of construction of PCB geometric repre­
sentation. The availability of transition from the graphic image to geometric repre­
sentation and vice versa allows effective adaptation of the PCB geometric structure 
at testing stages 2-5, in particular at the stage of adaptation of the standard to the 
received graphic image, when coordinates and scales are in process of changing.
8.2. Stages of PCB interconnections quality testing
Structure of information in the process of PCB testing is also presented in aed form 
(3.1). But in this case we have a system for which the construction of geometric 
representation gS£ (stage 1) is structural element о£, and a£ is the graphic image 
of interconnections. PCB image a£ is presented as follows:
£
a = {as ,a/,av} , 
(8.8)
where: as is graphic representation of standard; av is received video-image of 
PCB, ay - connections of as and av (for instance, three points of the images, 
by which the coordination of images is determined).
PCB testing process corresponds to 2-5 stages described above, which are ex­
ecuted in a technological process of PCB production. In comparison with the 
known approaches, stage 2 of the proposed method is almost the same as for 
known technologies and realized by using standard video cameras, e.g. Chameleon 
157

[89] or Grasshopper [90] cameras. The exemplary PCB image obtained while task 
performing is presented in Fig. 8.5.
Fig. 8.5. The result of obtaining a PCB video image
The obtained PCB image is preprocessed to be fit for the next steps of the PCB 
quality testing. The results of the image processing - the fragment acquisition and 
edges extracting of conductive pathways are presented in Fig. 8.6 a), and Fig. 8.6 
b) accordingly.
For the PCB fragment acquisition the Matlab imcrop function is used. To ex­
tract the edges of the conductive pathways the edge function of the Matlab Image 
Processing Toolbox is applied.
The matching process of the PCB standard (stage 3) is usually not presented in 
widespread testing technologies. At this stage in frames of the proposed method, 
158

the PCB standard is built on to PCB image by its three basic points, which allow to 
coordinate the orientation and sizes of the standard and the received graphic image 
of PCB thanks to the availability of its HS geometric representation.
a) 
b)
c) 
d)
Fig. 8.7. Images a)-c) of PCB conductive pathways of different orientation and scales obtained 
from computer monitor; d) is the image of the pathways presented in grey format
It permits to avoid disparity between the standard and the image which is 
caused not by damages of PCB but by changes of PCB scale, i.e. camera distance 
from it, and orientation (Fig. 8.7). The matching process of graphic images is real­
ized after definition of matching control points using Matlab functions of Image 
Processing Toolbox and Computer Vision System Toolbox [91]. The results of the 
matching process of the obtained PCB fragment and PCB standard images is pre­
sented in Fig. 8.8.
159

Fig. 8.8. Matching of PCB fragment images of different orientation and scale, axes units are pixels
Standard Matlab procedures allow realization of images fitting by using of im- 
rotate() and imresize() functions, detecting features applying in both images to be 
matched detectSURFFeatures() function, and extract feature descriptors using ex- 
tractFeatures() function. Matching features by using their descriptors is realized 
with help of matchFeatures() function. This function also allows computing the 
transformation from the obtained PCB fragment image to the original PCB stand­
ard image. The matching process of the two PCB images, i.e. original (o) image - 
red, and distorted one (+) - blue, is presented in Fig. 8.8.
PCB image obtaining is performed using standard digital cameras to match the 
image of PCB standard. Exemplary fragment of pathways structure of PCB stand­
ard (Fig. 8.7) was synthesized using Pascal programming language. The images of 
PCB conductive pathways of different orientation and scales presented in Fig. 8.7 
are the screenshots obtained from a computer monitor.
At the fourth stage of PCB quality testing, comparison and detection of PCB 
defects is carried out with regard to the geometric representation of PCB standard 
by checking the conductive pathways for the gaps (Fig. 8.9a) - not by continuous 
scanning of image lines, as in usual technologies, but by scanning along the con­
ductive pathways structures. It allows the time of comparison process and volumes 
of processed information to be reduced.
In the process of pathways soldered joints test, the aperture moves along the 
imaginary construction (Fig. 8.9b) which corresponds to the construction of i inter­
connection (i, i+1 - the neighbouring pathways).
160

a) test of gaps
gap
window
b) test of joints
Fig. 8.9. Schemes of a) gaps and b) soldered joints testing processes
The fifth stage of the PCB quality assessment is a simple logic operation over 
the results of the fourth stage.
Preliminary conclusions and results
The introduced PCB conceptual design method and HS technology of PCBs con­
ductive pathways quality testing yields the following main results:
- a graphic image of PCB standard is a result of formation of geometric repre­
sentation of PCB in the process of synthesis of PCB pathways construction;
- availability of geometric representation allows easy correction of pathways 
topology at each phase of PCB constructing, including conceptual design (CD) and 
detailed design (DD) phases;
- the mechanism of information aggregation permits to avoid the growth of 
computer memory volumes during the growth of the PCB construction level in the 
design and production processes;
- the PCB testing technology gained new qualities: the possibility of scales 
and orientation of PCB pathways geometric construction to change (during PCB 
standard rebuilding on to the obtained graphic image of PCB) allows to avoid the 
identification of PCB quality as defective in a technological process, when the 
PCB orientation and the distance in relation to the video camera are changed;
- the standard and obtained PCB images are compared not by continuous 
scanning of image lines as in usual technologies, but only by scanning along the 
conductive pathways with regard to the pathways geometric representation, which 
allows the reduction of the time of comparison and computer memory volumes.
161

9. DESIGN AND CONTROL
OF MCM CUTTING MACHINE
In this Chapter, the conceptual model, design (synthesis and analysis) and motion 
planning tasks of MCM machine are described. MCM - Manhole Cutting Machine 
- is used in production environment to perform technological operations of pipes cut­
ting and welding [92-94]. At the Conceptual Design (CD) phase of MCM life cycle, 
the systemic formal models of MCM elements and coordination (design and con­
trol) processes were presented in HS theoretical basis (see Chapters 3,4). At the 
Detailed Design (DD) phase, much attention is paid to the MCM analysis - kinemat­
ics tasks, and synthesis - the task of MCM construction creation. Different concrete 
elements which potentially could be used in MCM structure were analyzed to per­
form the synthesis task. Construction and technologies of the control subsystems, i.e. 
Mobile Panel of 5MP050.0653-03 type, ARNCO soft CNC system, Automation 
Studio program environment [95], as well as actuators, e.g. ACOPOS servo drivers 
of B&R [96] were analyzed. Systemic formal models of these systems were also 
given at the CD phase before realizing synthesis task at the DD phase.
According to the definition of the conceptual model given in Chapters 3 and 4, 
the developed conceptual model of MCM machine presented below contains for­
mal descriptions of MCM structure and its environment, dynamic models of struc­
tural elements and their connections, functional model of MCM machine and its 
coordinator. The coordinator is presented as a system which realizes the design and 
control processes and connects in this way structure and functions of MCM ma­
chine. The suggested conceptual model of MCM machine is also partially de­
scribed in [94].
162

9.1. MCM conceptual model
Conceptual model of MCM machine (Manhole Cutting Machine) is given in the 
formal basis of HS using its standard block aed (3.1), see Chapter 3, and is pre­
sented as follows:
Sf • {аf, 50, af }, 
(9.1)
where аf is functional dynamic description of MCM machine in its technological 
environment s Sf, af is MCM structure, S0 is coordinator, f is index of level, 
feLs, Ls is numeric positional system. According to aed scheme (see Fig. 3.1), 
formal description Sf contains the object (MCM) model o Sf and models of 
MCM sub-systems oSi , production environment s Sf model, models of coordina­
tor Sо (design and control system of MCM) and technological process n Sf per­
formed by MCM, i.e. cutting and welding.
Functional descriptions of MCM system o Sf is presented according to (3.2) 
in the following form of dynamic system (p, p ):
o (p, p : op" = { o Pt : Ct x Xt ^ Y & t e T }f, 
(9.2)
ope = {oPtt’ : Ct x Xtt' ^ Ct' & t, t'e T & tf> t}f,
whre Tf is time of f level; Cf, Xf , Yf are state, input and output of MCM oSf 
system respectively; p is state transition function, p is the reaction.
Structure af of MCM is defined according to (3.13) as the following formal 
system:
a1 • •:S0f,{af-1,a/f}}-:S0,af}, 
(9.3)
where S0 is coordinator of MCM, a1 1 are dynamic models (p, p) of MCM 
subsystems S1 = {Sf 1: i e I}, a/are structural connections.
Structure of MCM is created while performing synthesis task at both CD and 
DD phases. In our case, structure of MCM was created within the frames of 
SolidWorks system environment [74], see Fig. 9.1. After that, MCM model was 
163

placed into RobWork program system environment [97, 98] to perform analysis 
tasks - forward and inverse kinematics tasks (Fig. 9.3). The process of analysis 
tasks performance is observed on a computer screen thanks to RobWork system 
interface which illustrates the simulation process - technological process of pipe 
cutting - running within the frameworks of RobWork system environment (Fig. 9.3).
Fig. 9.1. Structure of MCM created within the frames of SolidWorks system - two a) and b) views
Being the elements of MCM structure a2 (see Fig. 9.2) the following subsys­
tems S!t 1 presented in ©/ 1 aggregated dynamic form are:
2-l
©1 : machine base;
© 2-1: MCM arm X with servo-motor which realizes left/right motion;
©3 1: machine arm Z with servo-motor which realizes up/down motion;
©4 1: arm of the cutting torch which makes possible 360o rotation;
©5 1: torch holder which allows its inclination;
©6 1: bracket connecting the machine base with arm X.
Structural connections ay2 (9.3) of MCM subsystems о 2-1 are as follows:
ay16 : bearing and the drive mechanism which allow the rotation of the en­
tire support;
164

^
&Y\2 : rack begin the connection which allows the displacement of X arm 
relative to MCM base;
ay 23: rack begin the connection which allows the displacement of Z arm 
relative to X arm;
^у'з 4 : bearing which makes possible 360o rotation of torch arm;
ay4 5 : bevel gear used for the cutting torch inclination.
Fig. 9.2. Axis and structure of MCM machine
Fig. 9.3. MCM design model placed into RobWork simulation system environment to perform analysis 
- forward and inverse kinematics - tasks while simulating technological process of pipe cutting; 
the MCM environment elements - pipe (grey color) with hole being cut and support (red color) - 
are elements of the technological module
165

Environment e S1 of MCM machine contains the other technological units and 
a man-operator. Elements of environment e S1 structure s& 1 which are in direct 
contact with MCM machine are a pipe being cut so S1 and support soS2 . The 
support allows the piper rotation in the technological cutting process (see Fig. 9.3). 
Pipe being cut so S^ is colored grey in Figure 9.3 and the support Eo S2 is colored red.
Fig. 9.4. General process xoS 1 and sub-processes ^oSi performed by MCM; „s S1 and nf.S1 
are sub-processes executed in MCM environment
166

General process ^oS ^ and sub-processes ^oSj which are executed by MCM 
while performing pipe cutting operations are presented in Figure 9.4. Each of the 
sub-processes ^oS^ is described by (p,p)( dynamic model at CD phase. The 
descriptions are concretized at DD phase.
Within the frameworks of the suggested MCM conceptual model the coordina­
tor is presented in the form of the design and control system of MCM machine. 
MCM coordinator S0 is formally described by (3.15) equation. S0 performs the 
design and control tasks on its selection, learning and self-organization strata.
Dynamic realizations of coordinator strata are presented by canonic models 
a 0 ^{ (p, 2) 0, S 0} (see Chapter 3) in the following form:
P - <■ • C0 x X0tt. ^ C0 & t, t'e T* & t’ > t}, 
(9.4)
7~ t% .r~v ~~ vr/1
Л) t - {201 • C 0 X X 0 ^ Y0 & t e T }.
Canonic model [94] is constructed using the concept of the multilayer (multi­
strata) system, where states transition functions {p0 } correspond to learning and 
self-organization strata, and output functions {20} correspond to the strategies of 
the selection strata.
The developed block-scheme of elements 2 S0 ,2 S0+1 of coordinator S0 being the 
control system of servomotor 2 S of MCM arm is presented in Figure 9.5, where:
G is control signal u_set[v]=e(t) which is realized with the help of B&R 
technology [96] and goes from ACOPOS controller 2S0 to servomotor 2S ;
W is the feedback from controller 2 S0 , realized in the form of impulses 
s_act[inc];
G'+1 is the control signal from PC panel 2 S 0+1 to controller 2 S 0 presented in 
the format {position (s), velocity (v), acceleration (d2s/ dt2), delay (- d2s/ dt2)};
WM feedback to PC panel S0+1 presented in the format {status (ena- 
ble/disable), position (s), velocity (v), error (error)};
X2 is the servomotor input - electromotive force E(t) (Fig.9.5);
Y^ is the servomotor output - torque Tm (t).
167

Canonic model of the controller 2 S0 in the form of (9.4) is built using objects
£ 
£+1 
£ 
£ 
£ 
£+1 
I
of inputs X0 ={ G , W }, outputs Y0 ={ G , W } and states C0 of coordinator
2 S0t , where C0t is state of Acopos 2 S0t controller.
Fig. 9.5. Conceptual scheme of control system of MCM arm servomotor presented in coordinator 
form
Canonic model of the controller 2 S0t in the form of (9.4) is built using objects 
t 
t +1 
t 
t 
t 
t +1 
t
of inputs X0 ={ G + , W }, outputs Y ={ G , W + } and states C0 of coordinator 
2 S0t , where C0t is state of Acopos 2 S0t controller.
At the detailed design phase, control system is created by the selection of con­
crete elements and realization of their structural connections. In this way the syn­
thesis design task is performed. Formal description of this task (9.8) is given be­
low. Concrete system based on ACOPOS servo-motors control and synthesized at 
DD phase for MCM arms motion control is presented in Figure 9.6. Here the ele­
ments, i.e. ACOPOS servo drives, X67 input-output units, X20 control and remote 
I/O systems, visualization and operation system, are connected by the network 
using CAN bus.
The following stuctural elements are presented In Figure 9.6. ACOPOS 1045 
is an intelligent servodrive [99] with very short scan times and communication 
cycles of 400 ^s, which equal to 50 ^s in the control loop. Intelligent ACOPOS 
168

servodrives work with AC three-phase synchronous motors 8JS, 8LS from B&R. 
X67 system is a safe digital and analog I/O module [100] with IP67 protection. In 
addition to its normal I/O tasks, it monitors the signal line as well as the connected 
sensors and actuators. Because X67 systems are integrated within the entire sys­
tem, they initially function in the standard application as normal modules. They 
deliver input signals and process output commands. System X20 is a segments 
based remote I/O system. It is a complete control solution. Depending on the appli­
cation requirements, the X20 system makes it possible to combine the exact com­
ponents necessary. Visualization and operation system - Power Panel 65 - pro­
vides maximum flexibility. It is equipped with 2 USB interface and a Fast Ethernet 
port for exchanging data with higher-level systems.
Host line
communication
Visualization
Control system, 
drive technology
Motion control
and operation
Power Panel 65
CAN bus
X20 system
ACOPOS ACOPOS ACOPOS ACOPOS
X67 
X67
Sensors, actuators
Fig. 9.6. Concrete system synthesized for MCM motion control
The developed conceptual model of MCM in the formal basis of Hierarchical 
Systems allows easy transfer form Conceptual Design phase to Detailed Design 
phase in the life cycle of MCM machine [94] .
While transferring from conceptual to detailed design [94], the systemic mod­
els of MCM subsystems are concretized. For example, (p, ф) model of AC servo 
169

motor 2 S1 (Fig. 9.7) being the element of the machine arm is presented in the 
following form (9.5) of DE:
dy
a 
+ ai y + a 2 = u
dt
(9.5)
which is concretized and presented at the DD phase as follows [101]:
d— i
dt a
d
1
= T7~ (2vab + vbc - 3Rsia + ^p>m (-2Фa + Фb + Фc )) 
3Ls
1 
' 
''
~= =^~ (- vab + vbc - 3 Rsib + Л/>ш (Ф a - 2Ф b +Ф c )) 
dt 
3Ls
d . 
d . .
dt a 
dt °
dt
d
—ib = — ( 
i ^— ih )
dt b 
dt a dt b
(9.6)
Te = рКФ a ’ ia + Ф b ’ ib + Фc ’ ic )
dj/’>:" 
dt
= jTe-Tf - F>m - Tm )
d а в = >
dt
m
where equations (9.6) correspond to the states transition functions ^ of the con­
ceptual model (p,^), (see Fig. 9.8). DEs (9.6) are further transformed at the DD 
phase to the transfer function (9.7):
G (s ) = >"(11
Tem ( S )
(9.7)
a)
b)
Fig. 9.7. CAD model of AC 8BJ motor of B&R (a) [99], and its Matlab simulation scheme (b) [101]
170

In Figure 9.8 and equations (9.6) and (9.7), the variables are as follows: Ls is 
the inductance of the stator; Rs is a resistance of the stator; ia, ib, ic are currents of 
a, b and c phases respectively; Ф^, Фь, Фс are electromotive forces of a, b and c 
phases respectively; vab, vbc are ab and bc phase to phase voltages respectively; Ют 
is angular velocity of the rotor; A is the amplitude of the flux induced by the per­
manent magnets of the rotor in the stator phases; p is number of pole pairs; Tem 
is electromagnetic torque; J is combined inertia of rotor and load; F is combined 
viscous friction of rotor and load; в is rotor angular position; Tm is shaft mechani­
cal torque; Tf is shaft static friction torque; Ют is angular velocity of the rotor - 
mechanical speed.
Fig. 9.8. Steps of conceptual model (p, <p) concretization of AC servo-motor subsystem P 2
at the design phases of MCM life cycle; conceptual model is transformed to ordinary DE and concretized 
at DD phase by transfer function G(s)
9.2. Design tasks
The main design tasks - synthesis & analysis - are performed at both conceptual 
and detailed design phases. The first basic design task which is performed by 
MCM coordinator is the synthesis task. In the basis of the conceptual model de­
scribed above and the general formulation of the synthesis task within the frame­
works of HS technology, the structure of the MCM machine being synthesized is 
presented in form (9.8), and the synthesis operations are described by (p, ф) mod­
els of coordinator processes лS0} . In the process of performing a synthesis task in 
SolidWorks system environment the robot structure d is synthesized from its ele­
ments a1'1 by realizing structural connections <Y• The task is described at CD phase 
within the frameworks of HS conceptual model as coordinator S0 task as follows:
Sl :{a^„ye} ^a1. 
(9.8)
171

Geometric parameters of the MCM structure itself are changeable in the syn­
thesis process. At CD phase the parameters are described by constructive dimen­
sion and connections defect, introduced in Section 4.2 by numerical positional 
system. At DD phase the concrete sizes as well as physical characteristics of 
MCM parts are defined.
In the synthesis process, MCM structure dynamics is described by reaction p 
of (р,ф) model:
P' = {pt: Ct x Xt ^ Yt & t e T}' 
(9.9)
where: Ci is the initial MCM part at t=i moment of time (or composition of previ­
ously connected parts in the synthesis process), Xi is a part to be added, Yi is the 
union (composition) of Ci and Xi parts, t=i - moment of time T. The exemplary 
MCM machine construction synthesized within the frameworks of SolidWorks 
system and placed in RobWork system environment is presented in Figs. 9.3 and 
9.11.
At the detailed design (DD) phase the concrete MCM machine parts were cho­
sen, e.g. the ACOPOS servo drivers of B&R [99], Mobile Panel of 5MP050.0653- 
03 type, ARNCO soft CNC system, Automation Studio program system [95], etc. 
Parts of the MCM mechanical arm were produced in Promotech enterprise (Bi­
alystok, Poland). MCM arm parameters were defined after stress and materials 
analysis performing. The results of the synthesis for the cases of MCM mechanical 
construction and MCM arms motors control system are given in Figs. 9.2-9.3, and 
Fig. 9.6 respectively.
Fig. 9.9. Steps of conceptual model concretization at the design phases of MCM life cycle; conceptual 
model is transformed to object’s reaction opt and concretized at DD phase by kinematics equations
The analysis design tasks are kinematics and dynamics tasks. To perform the 
kinematics task, kinematic scheme of MCM is developed (see Fig. 9.10c ) at the 
CD phase, kinematic model of MCM is presented in (р,ф) form and transformed 
to the form of reaction o pt model. At the DD phase, a mathematical model of 
172

MCM kinematics is created as concretization of the conceptual model and present­
ed in the form of forward kinematics equations [46,93], see Figure 9.9.
The scheme presented in Figure 9.9 shows the dynamics of the object’s kine­
matic model - MCM machine - in its design process. Transformation of the model 
of MCM dynamics is realized in the similar way. The construction and kinematic 
scheme of the MCM machine are given in Figure 9.10, where the pipe being cut, 
MCM axis and both global “G,O” and detail “D” coordinate systems are presented 
as well.
The aim of the kinematics task performed at the DD phase is the definition of 
the locations and orientations of MCM tool - operating point of the cutting torch. 
The equations created at DD phase (Fig. 9.9) which define the MCM end effecter 
(TCP - tool center point) position in global “G,O” coordinates are as follows:
xg = x0 +1 sin r sin a
yg = y0 +1 cos r sin a + x 
(9.10)
zg = z0 -1 cos a - z, 
where
x = 0, 03068
y0 =-2, 40975 
(9.11)
z = 1, 45775
l = 0,113 + offset,
x0, y0, z0 are parameters connected with the machine geometry (m); l is the ef­
fective tool length (m); x, z, r, a, d are the locations of each machine axis (m).
Position of the end effecter in detail coordinate system „D” is described by the 
following equations:
x = x cos d + zo sin d 
gg
yd =-xg sind + zg cosd 
(9.12)
zd =-yg
where xd, yd, zd are coordinates of the end effecter (TCP) in the detail coordinate 
system „D”; xg, yg, zg are coordinates of the end effecter in the global coordinate 
system „ O”.
To perform the forward kinematics task the following algorithm was developed [93].
173

Input:
Actual axes configuration q = {x, z, r, a d}
Output:
Actual global position pg = {xg, ye, г^}
Actual position in the detail coordinate system pa = {xa, ya, za}
(1) 
# Calculate effective tool length:
(2) 
I <— Zo+offset
□)
(4) 
# Calculate position in the global coordinate system “O’
(5) 
xg*—xo+1 sin r sin a
(6) 
y'g«— yo + Z cos r sin a + x
(7) 
Zg*— zo - I cos a - z
(8) 
' _ 
_
(9) 
# Calculate position in the detail coordinate system “D!
(10) 
xd*~~Xgcos d+ zgsin d
(11) 
xd<— -xgcos d + zgcos d
(12) 
zd<--yg
a)
b)
d)
c)
Fig. 9.10. Coordinate systems a) and d) - d) is a computer screen-short, MCM axis b) and d), 
and kinematic scheme c) of MCM, where D is the coordinates system connected with the pipe detail, 
O is the global coordinates system, R is the reference frame of the instrument holder rotation joint, 
A is the reference frame of the tool rotation joint
174

Simulation models were also implemented in program environment of Rob- 
Work system [93, 98].
9.3. MCM motion design and simulation
- Robwork Studio integration
MCM 3D design model was created at DD phase to simulate and control the posi­
tioning process during pipe cutting technological operations performed by MCM 
machine. Correspondent virtual technological module was synthesized at DD phase 
in the form of a workcell for the use with RobWork Studio software [98]. Figure 
9.11 presents the mutual interconnections of simulation program files of MCM 
workcell within the framework of RobWork system environment. At CD phase the 
construction of the MCM workcell and its files interconnections are presented ac­
cording to aed diagram (Fig. 3.1) described in Section 3.1, where the whole system 
Sl is realized by MCM.model.wc.xml unit, subsystems Si are presented by 
MCMarm.model.wc.xml and Tool.xml files, subprocesses nSi and general process 
nSl are simulation processes, coordinator So contains ProximitySetup.xml, 
EasyBotCollisionSetup.xml and Device.xml files, environment eS is presented by 
Environment.wc.xml program unit. All the files are described below and connected 
at DD phase by scheme given in Figure 9.11.
In Figure 9.11 the blue line shows that the given file is contained in the given 
folder. The black line shows the direct dependence of the connected blocks, i.e. 
files. File MCM.model.wc.xml is the main file which describes the given techno­
logical environment, i.e. the scene in which simulation takes place. Workcell file 
MCMarm.model.wc.xml describes the MCM mechanical arm program model 
which is inserted in simulation scene. Device.xml file contains the descriptions of 
interconnections, movements and reference frames for MCM arm. Tool.xml file 
contains the descriptions of interconnections, movements and reference frames for 
MCM end-effector - tool. Workcell file Environment.wc.xml contains the descrip­
tion of MCM technological environment. ProximitySetup.xml and EasyBotColli- 
sionSetup.xml files contain the descriptions which allow the collision avoidance of 
the MCM mechanical arm and other parts of MCM including MCM technological 
environment.
175

Fig. 9.11. Interconnections of simulation program files of MCM workcell in RobWork system
xg= -0.0184987
yg=-1.38508
zg= 0.999839
Xd= -0.456634
yd= 0.889666
zd= 1.38508
Г= 90
a= -26.2436
mix= 1.52687e-15
ro= 1.00001
th= -0.474203
zc= 1.38508
b= -25.7986
c=-1.52687e-15
xg= 0.0791259
yg=-1.53709
zg= 0.996865
Xd= 0.499014
yd= 0.866594
zd= 1.53709
Г=90
a= 25.3262
mix= 1.50412e-15
ro= 1
th= 0.522461
zc= 1.53709
b= 25.3867
c=1.50412e-15
Fig. 9.12. Two states of hole cutting process simulated in RobWork system environment and meanings 
of correspondent parameters
176

Furthermore, to test the obtained kinematics solutions a plugin implemented in 
C++ language was developed. The plugin allows visualization of linear interpola­
tion with the use of the Jacobean inverse method as well as forward and inverse 
kinematics calculations [46,93,102]. The developed MCM design model synthe­
sized within the framework of CAD SolidWorks system [74] with correspondent 
technological module placed into RobWork simulation environment and the plugin 
being in action are shown in Figure 9.3. Two states of hole cutting process simulat­
ed in RobWork system and meanings of correspondent parameters are given in 
Figure 9.12.
Positioning process of MCM machine contains the motion of the tool - cutting 
torch - along the specified linear edge with predetermined angles r and a. The in­
put parameters are predefined goal position of tool and velocity of the tool motion. 
Velocities of each MCM joint are calculated while performing interpolation ac­
cording to equation (9.13). It allows obtaining smooth linear cutting path.
To calculate the joint rates necessary to perform a linear interpolation with 
constant translational and rotational velocities the following equation (9.13) is 
used:
x = — z d
r = r
a = a'
(9.13)
zi 
di
= J -
xi d 
yi d
where Г = (omax /a) • (r^ — r[) and a' = (omax /a) • (a2 -a^) are presented in “D” 
reference frame, and the Jacobian is invertible.
Jacobean from (9.13) is presented in the following form (9.14):
dx d 
dx d
8z 
8d
8yd 
tyd
8z 
8d
— sin d — x sin d + z cosd 
— cosd —xg cosd — zg sind
(9.14)
Algorithm of linear interpolation is presented for MCM tool motion along the 
edge. As an example, the edge between positions p 1 = [p = 1 ф = 0 z = 0 r=0 a = 0] 
and p 2 = [p = 0,9 ф = 45o z = 1 r = 25o a = 45o] was taken under consideration. 
Simulation result is presented in Figure 9.13. The figure shows the variations of 
cylindrical coordinates during the tool motion along (p1, p2) edge.
177

Fig. 9.13. MCM tool position in cylindrical coordinate system of detail
Variations of velocities and coordinates of MCM machine axes while perform­
ing linear displacement of tool along (p1, p2) edge calculated during Jacobian inter­
polation process are presented in Figure 9.14.
(m) 
1
Fig. 9.14. Coordinates of joints (solid lines) and velocities (dashed lines) calculated in interpolation 
process
178

In our case, due to the presented MCM machine design, i.e. the choice of 
joints axes, the joint velocities calculation is simplified in a marked degree. Tool 
orientation is directly correlated to axes motions, and also the motion along z axis 
in ‘D’ coordinate system is governed by the x axis translation. According to these 
considerations, it is only necessary to calculate Jacobian relating (xd, yd) coordi­
nates to z and d joint positions.
Preliminary conclusions
The use of Hierarchical Systems (HS) method in design and control of MCM 
(Manhole Cutting Machine) is presented in this Chapter. Being mechatronic by 
nature, MCM system contains human - man-operator, computer control, visual 
informatics, electronic - sensors, electromechanical - servo drives, and executive 
mechanical (MCM tool, arm and its joints) subsystems. The presented conceptual 
model of the MCM system being designed contains connected systemic models of 
the above mentioned subsystems presented in the general formal basis. Aed (stand­
ard block of HS) model, see Chapter 3, was chosen as the formal basis of MCM 
conceptual model. The MCM system structure, its dynamic presentation as the unit 
in its technological environment, MCM environment - other objects and techno­
logical units of the production process, and MCM control unit - ACOPOS control­
ler - were also described in this basis. MCM design and control functions are taken 
into account owing to HS coordinator availability. Coordinator performs coordina­
tion (design and control) tasks on its selection, learning and self-organization strata.
The presented conceptual formal model of MCM machine is coordinated with 
traditional systems of information presentation in mechatronics [103-112]: numeri­
cal, graphic and natural language forms [8, 127]. Being the formal basis of MCM 
conceptual model, aed technology and HS method are coordinated with general 
requirements of design and control systems and allow easy transfer from Concep­
tual Design to Detailed Design phase in MCM life cycle. It brings new possibilities 
to creating a formal language for MCM and similar technological machines con­
ceptual design. The process of MCM conceptual model creation as well as MCM 
design and control processes were executed within the framework of the R&D 
project maintained by the agreements RO-210.0610/25/2013 - U/WM/7/2013 and 
U/WM/7/2014 - between Bialystok University of Technology and Promotech en­
terprise (Bialystok, Poland).
179

CONCLUSION
The new hierarchical systems (HS) method - theoretical and practical computer 
means - of conceptual design of mechatronic systems based on HS theory and 
oriented towards usage in automation systems including CAD, automatic control, 
robotics and mechatronics is described in the given book. The presented process of 
the method development contains the following phases.
First, the theoretical basis for the design method, i.e. aed theoretical construc­
tion of HS and formal model of its coordinator, was constructed.
Second, after creating the mathematical model, the HS coordinator was pre­
sented in this book in the form of theoretical construction of aed-processor - the 
cybernetic system oriented to numerical and geometric information presentation 
and processing while performing design tasks. It was shown that the processor is 
able to execute operations with real, natural, complex and hyper-complex numbers 
in the frames of one common formal construction. This processor is oriented to­
wards the geometric information processing presented in numerical code.
The theoretical construction of the core element of design systems, i.e. aed 
model created, and its coordinator symbol construction have the following charac­
teristic features:
aed includes the dynamic structure and aggregated models of any system be­
ing coordinated - designed and controlled - and its environment, and allows the 
main design task to be carried out with the help of coordination strategies for the 
different levels of knowledge uncertainty;
coordination strategies are the states of a design and control system, their dy­
namics (like the process of uncertainty removal) reflects the dynamics of that sys­
tem;
the ability of aed for self-organization (with the following alteration of any de­
signed system model and coordination strategies) is ensured thanks to the availabil­
ity of higher strata of the coordinator;
the basic informational constructions, i.e. numerical and geometric systems, 
are presented in formal basis of aed symbol construction; computer program reali­
zations of aed-processor effectively work with number codes and changeable 
180

graphic images and allow design and control tasks, which are complicated or irre­
sistible for one-level theoretical construction, to be performed.
Theoretical basis of the conceptual HS design method, i.e. aed formal model, 
presented in this book in Sections 3 and 4, was improved in comparison with its 
previous version described in [140], and has got the following characteristic fea­
tures:
1) general scheme of aed (two-level system) has improved so that system S £ 
block became included in its environment s S £;
2) all elements of aed model were presented in the form of systems with 
correspondent indexes from the set kL О {o,on,ns,s}, which indicate object (o), 
environment (s), and their processes (on) and (ns);
3) symbol presentation of systems connections was changed from &U£ to 
ay £ what made it agreed with presentation of coordination signals / 0 generated by 
coordinator while performing systems structures synthesis in design process by 
arranging subsystems structural connection.
4) fundamental aed law of systems levels grows was modified by the law of 
systems outlook increasing in the levels space, i.e. increasing of number T of 
system levels £ ± T being coordinated ‘up’ and ‘down’ in regard with current level 
£ of system under consideration.
5) symbols set of levels of system organization ^ L and correspondent basic 
system YT (which indicate levels of system organization and coordinator strata) 
were changed to ^ L О {щ, %, ty, Л} and improved in such a way, that they 
become coordinated with coordinator canonic model (ty, Л) and its reactions Л and 
functions ty performed on selection and learning strata respectively.
Furthermore, modified aed model presented in Chapters 3 and 4 was further 
improved. New aed formal model for systems design and control was presented 
and described by Novikava and Miatluk in [8], and used after that by Miatluk and 
Kim in [80].
Therefore, HS method and the aed formal construction of coordinator (and its 
realization as aed-processor) are coherent with the above-defined requirements to 
conceptual model of mechatronic systems being designed as well as the require­
ments of the general design and control systems (see Chapter 1).
Third, the conceptual design method of hierarchical mechatronic objects has 
been worked out basing on the theoretical means developed and presented above 
(Chapters 3, 4). The main phases of the design method realization - while 
performing both the conceptual and detail design tasks - were defined and 
181

described. After that, the basic geometric elements of mechatronic objects (MO) 
were presented in the hierarchical form as conditional geometric objects. 
Furthermore, the geometrical and numeric characteristics of MO were introduced 
in the numeric positional code. The main numeric characteristics of MO are 
constructive dimension and connections defect.
Later, coordinator procedures of systems design were defined and algorithms 
of hierarchical MO synthesis and analysis were presented. Finally, the exemplary 
computer realizations of the method for performing the basic design tasks were 
described for the synthesis of 3D objects, and analysis - design of caterpillar and 
snake like robots movements (see Chapter 4).
The HS design method presented meets the requirements of conceptual model 
of mechatronic systems, and all the requirements of the CAD systems (Chapter 1) 
are satisfied concerning the strata of selection, learning and self-organization of 
aed coordinator. Requirements of optimal execution of the geometric design tasks, 
i.e. GO synthesis and analysis, object transference in the space, the change of its 
metrical characteristics etc., are met by the actions of coordinator strategies with 
geometric elements of MO which are described in Section 4.4.
Fourth, implementations and assessments of the conceptual design method 
developed in the exemplary design tasks in mechatronics, robotics and automation 
systems were performed. Practical examples of the method realization are 
presented in Chapters 5-9 of this book.
The conceptual design process of the surgical robot biomechatronic system 
(SRS) was described in Chapter 5. Conceptual models of SRS subsystems of dif­
ferent nature - mechanical, electromechanical, electronic, human-computer, and 
biological, i.e. robot manipulator, navigation, computer-control and pre-operating 
planning systems, surgeon-operator and bone being operated - were described in 
the common aed formal basis of HS. All the descriptions are connected by SRS 
coordinator presented in the form of the design and computer control system 
(CCS). Exemplary control loop of coordinator is presented in this chapter in the 
form of Multi Motion Controller (MMC), which realizes coordination of AS3 robot 
motion. Model of SRS human-computer design system is described in the form of 
a higher level coordinator which performs the design tasks on its strata: selection, 
learning and self-organization.
Hierarchical systems technology was applied in Chapter 6 in the exemplary 
tasks of conceptual model creation of biologically inspired robot (Bioloid Dino­
saur robot) in aed theoretical basis, design of Bioloid robot’s assembly operations 
and robot motion coordination. Formal construction of the conceptual model sug­
gested contains connected descriptions of the Bioloid robot structure, its aggregat­
ed dynamic representation as a unit in its environment, and part of the environment 
model. All the descriptions are connected by the coordinator which performs the 
design and control tasks on its selection, learning and self-organization strata. Nu­
182

meric and geometric characteristics of Bioloid robot designed were presented in 
the frames of the developed conceptual model in the form of numeric positional 
system. Mechanical, electromechanical and program computer subsystems of gen­
eral robot mechatronic system were partially described in common aed formal 
basis of the model proposed as well. It allows the conceptual model to fulfill the 
general requirements of design and control systems and mechatronic systems in 
particular (see Chapter 1).
The robot model dynamics while transferring from the conceptual to detailed 
design phases was shown for the case of the robot mechatronic subsystem of 
electromechanical nature, i.e. servo-motor. The examples of computer realizations 
of Bioloid robot design tasks in the frames of SolidWorks program system were 
also presented in Chapter 6.
The dependence between the systemic characteristics and physical parameters 
of motion, i.e. displacement, velocity, acceleration, was established for the case of 
the human motion design (Chapter 7). The main purpose of the task described in 
this Chapter was the application of the developed HS design method in human 
motion design. As a result, new conceptual formal model and HS design 
technology of human motion coordination - design and control - have been 
created. The method has the following characteristics:
1) describes a human bio-kinetic apparatus as a hierarchical system, i.e. takes 
into account the connected levels of human body structure (lower level), human 
body dynamic representation as a unit in its environment, and the environment 
structure (higher level); it allows the design and control task of human motion to be 
performed as interconnections coordination of cohered structural and dynamical 
representation of man in its environment;
2) makes possible the design (synthesis) of different kinds of human move­
ments, predicts the motion and obtains correspondent motion data using only geo­
metric or anatomic data such as limbs length and weight; consecutive interactive 
performing of the analysis design task, i.e. changing of the human structural inter­
actions (joint angles) and subsystems characteristics (length, mass) and observation 
of the change of process being designed (motion) executed by system (man) in its 
environment (higher level systems), allows obtaining the desired characteristics of 
this process (trajectories coordinates, displacements, velocities, etc.);
3) performs the connected tasks of human body deformations and human mo­
tion in its environment cased by these deformations in the frames of one common 
HS aed model not using traditional approaches, i.e. Finite Elements method and 
Integral Differential Equations; allows solving of human motion synthesis and 
analysis tasks in the frames of one common computer model;
4) allows presentation and processing of information about systems of various 
nature - engineering, computer, social, biological, physical - in the frames of one 
common HS aed formal model, which is very important in the case of bio­
183

mechanical, medical, rehabilitation and other biomechatronic systems coordination 
and allows avoiding modelling conflicts between various subsystems of different 
nature;
5) makes possible the modification of the model developed using controlled 
experimental data on the self-organization layer of coordinator and prediction of a 
motion;
6) presents parts of human body in computer design process as connected 3D 
geometric objects due to the conditional geometric objects representation (see 
Chapter 4);
7) allows performing - at CD and DD phases - both the geometrical design 
and forward kinematics tasks as the common computational task owing to the 
description of geometric construction, coordination (design and control) 
procedures and kinematic characteristics in the frames of one common computer 
model.
Computer program modules created for human motion design have been 
constructed according to HS aed structure and the modules functioning correspond 
to the actions of aed coordinator of HS. The design tasks are realized using 
commercial software Delphi (Embarcadero Technologies Inc., CA, USA) and 
Matlab (The MathWorks Inc., MA, USA) systems. All calculations are effectively 
executed on a computer as operations with systems quantitative characteristics 
presented in numeric positional code. It allows increasing the computational 
efficiency of the design procedures. During the motion design, the dependences of 
functional parameters (kinds of motions) on the structural ones (sizes, angles) of 
the human body segments were determined.
The worked out HS design method, hierarchical geometry and coordination 
technology of geometric elements of MO (Chapter 4) were implemented in the 
tasks of electronic Printed Circuit Boards (PCB) design and testing described in 
Chapter 8. The introduced HS design and testing method implemented in this task 
yields the following results and is characterized by the following qualities:
- a graphic image of PCB standard is a result of formation of geometric repre­
sentation of PCB in the process of its conductive pathways construction synthesis;
- availability of geometric representation allows easy correction of PCB con­
ductive pathways, i.e. interconnections topology, at each phase of plate construc­
tion including CD and DD phases;
- the mechanism of information aggregation permits to avoid the growth of 
computer memory volumes in the transition process to a higher level of the PCB 
geometric structure during its synthesis;
- the ability of scales and orientation of geometric construction to change 
(during PCB standard matching to the obtained PCB graphic image) allows the 
identification of PCB as defective one to be avoided in a technological process, 
184

when the PCB orientation and the distance in relation to the video camera are 
changed;
- in the process of pathways quality testing the standard and obtained PCB 
images are compared not by continuous scanning of PCB image lines as in the 
technologies already known, but only by scanning along the interconnection lines - 
conductive pathways - with regard to their geometric representations; it allows the 
reduction of both the comparison time and computer memory volumes.
Aed symbol construction of HS gave a formal basis for the descriptions of the 
PCB geometric structure and the processes of its design and testing presented in 
Chapter 8, and allowed creating the PCB conceptual model. Availability of coordi­
nator allowed performing the decision making tasks on its strata at both PCB con­
ceptual and detailed design phases. Algorithms of the given HS design technology 
was applied in PCB production process of Horizont enterprise (Minsk, Belarus).
The use of Hierarchical Systems (HS) technology in conceptual design and 
control of MCM (Manhole Cutting Machine) is presented in Chapter 9. Developed 
conceptual model of the MCM system contains connected systemic models of 
mechatronic subsystems, i.e. human - man-operator, computer control, visual 
informatics, electronic - sensors, electromechanical - servo drives, and executive 
mechanical (MCM tool, arm and its joints), presented in general aed formal basis 
of HS. The MCM system structure, its dynamic presentation as the unit in its 
technological environment, MCM environment - other objects and technological 
units of the production process, and MCM control unit - ACOPOS controller - 
were also described in this basis. MCM design and control functions were taken 
into account owing to HS coordinator availability. MCM coordinator performs 
coordination - design and control - tasks on its selection, learning and self­
organization strata.
The conceptual formal model of MCM machine presented in Chapter 9 is 
coordinated with traditional systems of information presentation in mechatronics - 
numeric, graphic and natural language forms. It was shown, that MCM conceptual 
model presented in aed formal basis of HS is coordinated with general 
requirements of design and control systems and allows easy transfer from 
Conceptual Design phase to Detailed Design phase in MCM life cycle. It brings 
new possibilities in creating a formal language for MCM and similar technological 
machines conceptual design. Both MCM conceptual model creation and design 
processes described in Chapter 9 were executed in the frames of the R&D project 
maintained by the agreements between Bialystok University of Technology and 
Promotech enterprise (Bialystok, Poland).
Therefore, the conceptual model of mechatronic objects being designed, the 
design system and coordination - design and control - process are presented in aed 
formal basis of HS in this book. In comparison with traditional models of mathe­
matics, artificial intelligence and widespread design methods (see Chapter 1) the 
185

developed conceptual formal model contains connected descriptions of the de­
signed mechatronic object structure, its aggregated dynamic representation as a 
unit in its environment, the environment model and the design&control system. All 
the descriptions are connected by the coordinator which performs the design and 
control tasks on its strata. Besides, the suggested aed technology of HS coheres 
with traditional systems of information presentation in mechatronics: numeric, 
graphic and natural language forms. Aed technology and HS design method are 
also coordinated with general requirements of the design and control systems and 
consider mechatronic subsystems of different nature - mechanical, electromechan­
ical, electronic, computer - in common theoretical basis.
Besides, aed technology and HS design method are an effective means of 
mechatronic objects design and conceptual models creation. These models allow 
an easy transfer from the conceptual design phase to a detailed design phase in the 
mechatronic object’s life cycle and allow description of the design procedures in 
the form of coordination strategies of HS. At the conceptual design phase, the 
mechatronic subsystems of MS being designed are presented in the form of dynam­
ic system (р,ф) which is generalization of DE, automata and algebra systems. So, 
the transition from the conceptual to the detailed design phase in the frames of the 
HS design method suggested is convenient and requires concretization of the ab­
stract dynamic system only.
All the qualities mentioned above make the suggested HS design technology 
more efficient in design tasks performing in comparison with widespread design 
methods (see Chapter 1). The presented HS design method brings new informa­
tional means for the conceptual and detailed design of mechatronic systems.
The conceptual design method presented in this book has been also applied 
to the design and control of other engineering objects [53, 113-117], in robotics [50, 
54-58, 119-125, 141-142], biomechanics [55, 118] and mechatronics [49-51, 58, 
126], in design tasks of industrial knowledge networks [23, 24], written text [127] 
and natural language processing [8], and other tasks.
Some theoretical foundations and application results of the method presented 
in this book were discussed with one of the authors of the theory of hierarchical 
and dynamic systems Prof. Yasuhiko Takahara [2, 10], and one of the authors of 
mathematical and computer aided systems theory Prof. Franz R. Pichler [138, 139].
The described HS conceptual design method was also implemented in R&D 
projects with PROMOTECH enterprise (Bialystok, Poland), MTZ and HORI- 
ZONT enterprises (Minsk, Belarus), EU projects ICIMS-NoE, AMETMAS-NoE, 
DYCOMANS, ACAT Horizont 2020 project, grants and projects maintained by 
KOSEF and NSF (South Korea), and others.
186

Acknowledgements
I would like to give special thanks to my parents Professor Anna Miatluk and Pro­
fessor Mikolaj Miatluk for always supporting and encouraging me.
I owe a great debt of gratitude to Professor Svetlana Novikava and Professor 
Yasuhiko Takahara who put freely at my disposal their immense experience and 
knowledge.
I would like to express my deep gratitude to my colleagues of Automatic 
Control and Robotics department, Mechanical Engineering Faculty, Bialystok Uni­
versity of Technology, as well as to Prof. Jerzy Pokojski, Prof. Marek Gawrysiak 
and Prof. Franz R. Pichler for much wise advice at the planning stage of this book. 
I express my great gratitude to Professors Y.H. Kim, K. Kim, D. Pascault, N. Kru­
ger, H.G. Petersen, M. Diaz-Cabrera - my co-authors of our joint works where 
some ideas of the presented HS design and control method were implemented.
187

References
1. 
Ullman D.G.: The mechanical design process, 4th ed., Singapore: McGraw- 
Hill, 2010.
2. 
Mesarovic M.D., Macko D. and Takahara Y.: Theory of hierarchical multi­
level systems, Academic Press, New York, NY, 1970.
3. 
Miatliuk K.: Formal model of coordinator of two-level system, Belarus Acad­
emy of Science, Minsk, 1987, (in Russian).
4. 
Novikava S., Mialtiuk K., Gancharova S. and Kaliada W.: Aed construction 
and technology in design, Proc. of 7th IFAC LSS Symposium, Pergamon, 
London, 1995, pp. 379-381.
5. 
Novikava S., Miatluk K., et al.: Hierarchical systems in Aed realization, 
Proc. of 9th IMACS Conference, Berkeley, USA, 1993, p. 71.
6. 
Novikava S., Miatliuk K., et al.: Mathematical and cybernetical means of 
Aed theory, IEEE Int. Conference on Systems, Man and Cybernetics, Vol. 1­
4, China, 1996, pp. 2874-2879.
7. 
Novikava S., Miatluk K., et al.: Aed theory in hierarchical knowledge net­
works, Int. Journal Studies in Informatics and Control, Vol. 6 No. 1, 1997, 
pp.75-85.
8. 
Novikava S., and Miatliuk K.: Hierarchical system of natural grammars and 
process of innovations exchange in polylingual fields, Kybernetes, Emerald, 
Vol. 36, No. 5/6, 2007, pp. 736-748.
9. 
Mesarovic, M.D. and Takahara, Y.: General systems theory: mathematical 
foundations, Academic Press, New York, NY, 1975.
10. 
Mesarovic, M. and Takahara, Y.: Abstract Systems Theory, Springer, 1990.
11. Mialtiuk, K.: Coordination processes of geometric design of hierarchical 
systems, Machine building and exploitation, WPB, Vol. 11, 2003, pp. 163­
78. (in Polish)
12. Moulianitis V.C., Aspragathos N.A. and Dentsoras A.J.: A model for concept 
evaluation in design - an application to mechatronics design of robot grip­
pers, Mechatronics, Vol. 14, 2004, pp. 599-622.
13. Childs P.: Mechanical Design Engineering Handbook, Elsevier, Hardbound, 
2013, 856 p.
14. Johnson J.: Designing with the Mind in Mind, Elsevier, 2014.
15. 
Liu C., Hildre H.P., Zhang H., R.olva T.: Conceptual design of multi-modal 
products, Res. Engineering Design, Springer, Vol. 26, 2015, pp. 219-234.
188

16. Hudspeth M.: Conceptual Design in Product Data Management, Design En­
gineering Technology News, Desktop Engineering, February 1, 2008.
17. French M.J.: Conceptual Design for Engineers, Springer, 3rd Edition, 1999.
18. Analyzing requirements and defining 
 solution architectures, 
Microsoft Press, 2003.
Microsoft.net
19. FLH Project Development and Design Manual, Conceptual Studies and Pre­
liminary Design, US Department of Transportation, 2014, 
(
).
http://flh.fhwa.dot.gov/resources/
20. Pokojski J. and Szustakiewicz K.: Towards an aided process of building a 
knowledge based engineering applications, Machine Dynamics Problems, 
Vol.33, No.3, 2009, pp. 91-100.
21. Papiernik K., Grabska E., Borkowski A.: On applying model-driven engi­
neering to conceptual design, Machine Dynamics Problems, Vol.31, No.3, 
2007, pp.58-65.
22. Pahl, G., Beitz, W., Feldhusen, J. and Grote, K.-H.: Engineering design: a 
systematic approach, Springer, 3d edition, 2007.
23. Miatliuk K., et al.: The coordinating system of knowledge network for tractor 
and automobile industry, 5th Int. Conference on Technology, Policy and In­
novation, Delft, Netherland, 2001, pp.292-293.
24. Novikava S., Miatliuk K., Pavlushchenko A.: Knowledge network for ma- 
chine-bulding industry coordination, Proc. of the 16th Int. Conference on 
Systems Science ICSS, Wroclaw, 2007, pp. 413-420.
25. Bryant, C.R., et al.: Concept generation from the functional basis of design, 
Proc. of Int. Conference on Engineering Design (ICED 2005), Melbourne, 
Australia, 2005.
26. Gero, J.S. and Kannengiesser, U.: A function-behaviour-structure ontology 
of processes, Artificial Intelligence for Engineering Design, Analysis and 
Manufacturing, Vol. 21 (4), 2007, pp. 379-391.
27. Borgo, S., et al.: A formal ontological perspective on the behaviors and func­
tions of technical artifacts, Artificial Intelligence for Engineering Design, 
Analysis and Manufacturing, Vol. 23 (1), 2009, pp.3-21.
28. Yan X.T. and Zante R.: A mechatronic design process and its application, 
Mechatronics in Action, ed. D. Bradley and D.W. Russell, Springer, 2010, 
pp.55-70.
29. Giergiel J., Kurc K., Giergiel M.: Mechatronic design of the inspection ro­
bots , WPR, 2010 (in Polish)
30. Ralph P. and Wand Y.: A proposal for a formal definition of the design con­
cept, Design Requirements Workshop, LNBIP, Springer, 2009, pp. 103-136.
31. Gu C., Hu J., Peng Y., Li S.: FCBS model for functional knowledge repre­
sentation in conceptual design, Journal of Engineering Design, Vol.23 (8), 
2012, pp.577-596.
189

32. Takahara, Y and Mesarovic, M.: Organization structure: cybernetic systems 
foundation, Kluwer Academic Publishers, New York, 2003.
33. Novikava S., Miatliuk K., et al.: The Structure and the Dynamics of Infor­
mation in Design Systems, Proc. of the 7th Int. Conference on Engineering 
Design, ICED'90, Dubrovnik, Vol. 2, 1990, pp. 946-953.
34. Stroud I.: Boundary Representation Modelling Techniques, Springer, 2006.
35. Um D.: Solid modeling and applications, Springer Switzerland, 2016.
36. Wang Y., Nnaji B.O.: Geometry-based semantic ID for persistent and in­
teroperable reference in feature-based parametric modeling. Computer Aided 
Design, Vol. 37, Issue 10, Elsevier, 2005, pp. 1081-1093.
37. Baerentzen, J. A., Gravesen, J., Anton, F., and Aanaes, H.: Guide to compu­
tational geometry processing. Polygonal meshes. Springer London, 2012, pp. 
83- 97.
38. Selimovic I.: New bounds on the magnitude of the derivative of rational Be­
zier curves and surfaces, Computer Aided Geometric Design, Vol. 22, Issue 
4, Elsevier, 2005, pp. 321-326.
39. Nizeki M.: The principle of duality in data structures and Euler operators of 
Solid Modelers, 3rd Int. Conf. on Design Engineering and Science, Czech 
Republic, 2014, pp. 41-46.
40. De Floriani L.: Digital geometry algorithms, ed. Brimkov V. and Barneva 
R., Vol. 2, Dordrecht, Springer Netherlands, 2012.
41. Cano P., Torres J.: Representation of polyhedral objects using SP-octrees. 
Journal of WSCG, Vol.10, 2002, pp.95-101.
42. Nemcowa D.: Three-dimensional representation of raster images. Technical 
University of Wien, 2000.
43. Bayro-Corrochano E., Scheuermann G.: Geometric algebra computing, 
Springer London, 2010.
44. Hollig K. and Horner J.: Approximation and modeling with B-splines, SIAM, 
2013.
45. Sederberg T. W.: Computer Aided Geometric Design, BYU, 2014, 262 p.
46. Wolniakowski A., Koziol P., and Miatliuk K.: Generating trajectory for 5 
DoF serial link CNC machine with kinematic constraints, 15th IEEE Int. 
Carpathian Control Conference, Czech Republic, 2014, pp. 689-694.
47. GSC Associates, (
)
www.gscassociates.com
48. Lebesgue H. L.: Measure and the integral, Holden-Day, 1966.
49. Miatliuk K.: Conceptual model in the formal basis of hierarchical systems for 
mechatronic design, Cybernetics and Systems, Taylor& Francis, Vol. 46, Is­
sue 8, 2015, pp.666-680.
50. Miatluk K., Siemieniako F.: Theoretical basis of coordination technology for 
systems design in robotics, Proc. of the 11th IEEE Int. Conference on Meth­
190

ods and Models in Automation and Robotics MMAR, Micdzyzdroje, Poland, 
2005, pp.1165-1170.
51. Mialtiuk K., Kim Y.H., Kim K., Siemieniako F.: Use of hierarchical system 
technology in mechatronic design, Mechatronics, Vol. 20, No.2, Elsevier, 
2010, pp. 335-339.
52. Miatliuk K.: Geometrical representation based on the hierarchical systems 
technology, 14th Int. Conf. on Computer Aided Systems Theory: Eurocast 
2013, Las Palmas, Spain, 2013, pp. 59-62.
53. Miatliuk K., Mystkowski A.: Realization of coordination technology of hier­
archical systems in design of active magnetic bearings system, Journal of 
Theoretical and Applied Mechanics, Vol. 53, 3, 2015, pp. 711-722.
54. Miatliuk K.: Conceptual design of parallel stuart robot using hierarchical 
systems technology, 15th Int. Conf. on Computer Aided Systems Theory: Eu­
rocast 2015, Las Palmas, Spain, 2015, pp.227-228.
55. Miatliuk K., Kim Y. H: Hierarchical systems technology in the coordination 
of biomechanical motion, Proc. IEEE SICE-ICASE International Joint Conf. 
on Control, Automation and Systems ICCAS 2006, Busan, South Korea,
2006, pp. 244-249.
56. Miatliuk K.: Coordination technology in design of biologically inspired ro­
bot, Machine Dynamics Problems, Vol.33, No. 3, 2009, pp.70-78.
57. Miatliuk K., Siemieniako F.: Hierarchical systems technology in design of 
walking robot, Int. J. of Applied Mechanics and Engineering, Vol.15, nr 3, 
2010, pp. 793-797.
58. Miatliuk K., Kim Y.H.: Application of hierarchical systems technology in 
conceptual design of biomechatronic system, Advances in Intelligent Systems 
and Computing, Vol. 240, Springer, 2014, pp 77-86.
59. Bargar, W. L., Bauer A. and Borner M.: Primary and revision total hip re­
placement using the ROBODOC(R) system, Clinical Orthopaedics and Re­
lated Research, Vol. 354, 1998, pp. 82- 91.
60. Catani F., and Stefano Zaffagnini S.: Knee surgery using computer assisted 
surgery and Robotics, ESSKA Luxembourg, 2013.
61. Kim Y.H. and Minh H.L.: A laboratory-level surgical robot system for mini­
mal invasive surgery (MIS) total knee arthroplasty, International Journal of 
Precision Engineering and Manufacturing, 2011, Vol. 12, No 2, pp. 237-242.
62. Tsuji S., Tomita T., Fujii M., Laskin, R., Yoshikawa H., Sugamoto K.: Is 
minimally invasive surgery - total knee arthoroplasty truly less invasive than 
standard total knee arthroplasty? The Journal of Arthroplasty, Vol. 25, No. 6, 
2010, pp. 970-976.
63. Mako Surgical Corp., Makoplasty system, http://www.makosurgical.com
64. Acrobot Sculptor, http://www.acrobot.com
65. Curexo, Inc., ROBODOC system, http://www.curexo.com
191

66. Bioloid Comprehensive Kit, Robotis, Korea, www.robotis.com
67. Buratowski T., Giergiel M., Uhl T.: Mechatronic design of the six legged 
walking robots, 21st Int. Conf. on CAD\CAM, Robotics and Factories of the 
Future, Krakow, 2005.
68. Feczko J., Manka M., Krol P., Giergiel M., Uhl T., Pietrzyk A.: Review of 
the modular self reconfigurable robotic systems, 10th Int. Workshop on Robot 
Motion and Control, RoMoCo 2015, Poznan, Poland, 2015, pp. 182-187.
69. Bartoszewicz A.: Hanging robots - new trend in mechatronics development, 
Mechatronics. Regional Technological Foresight, Lodz, 2008, pp. 133-134 
(in Polish).
70. Pazderski D., and Kozlowski K.: Motion control of a skid-steering robot us­
ing transverse function approach - experimental evaluation, 10th Int. Work­
shop on Robot Motion and Control, RoMoCo 2015, Poznan, Poland, 2015, 
pp. 72-77.
71. Moulianitis V.C., and Aspragathos N. A.: IT and Mechatronics in industrial 
robotic workcell design and operation, in: Encyclopedia of Information Sci­
ence and Technology, IGI Global, 2015, pp. 440-455.
72. Miatliuk K., Kim Y.H., Kim K.: Motion control based on the coordination 
method of hierarchical systems, J. of Vibroengineering, Vol.11, No 3, 2009, 
pp. 523-529.
73. Miatliuk K., Gosiewski Z., Siemieniako F.: Coordination technology in the 
assembly operations design, Proc. IEEE SICE-ICASE International Joint 
Conf. on Control, Automation and Systems ICCAS’2006, Busan, South Ko­
rea, 2006, pp. 2243-2246.
74. SolidWorks, http://www.solidworks.com/
75. Pandy, M.G.: Computer modeling and simulation of human movement, An­
nual review of biomedical engineering, Vol. 3, 2001, pp. 245-273.
76. Park, W., et. al.: A computer algorithm for representing spatial-temporal 
structure of human motion and a motion generalization method, Biomechan­
ics, Vol. 38, 2005, pp. 2321-2329.
77. Azevedo et al.: Bipedal locomotion: toward unified concepts in robotics and 
neuroscience, Biological Cybernetics, Vol. 96, 2007, pp. 209-228.
78. Yu F., Xue Q., Liu M.: Virtual human motion design and ergonomics analy­
sis in maintenance simulation, Advances in Applied Digital Human Modeling 
and Simulation, Springer, Vol. 481, 2016, pp. 65-74.
79. Vaughan, C.L.: Theories of bipedal walking: an odyssey, Biomechanics, Vol. 
36, 2003, pp. 513-523.
80. Miatliuk K., Kim Y.H., Kim K.: Human motion design in hierarchical space, 
Kybernetes, Emerald, Vol.38, No.9, 2009, pp.1532-1540.
81. Steger C., et al.: Machine vision algorithms and applications. Wiley, 2008.
192

82. Laranjeira L. et al.: Tool for Fault Extraction in PCBs, IEEE Test Workshop, 
Portugal, 2000.
83. 
Verma, A.: Optimizing test strategies during PCB design for boards with 
limited ICT access, 27th Annual IEEE/SEMIInternational, IEMTSymposium, 
2002, pp.364-371.
84. McDaniel J., Grissom D., Brisk P.: Multi-terminal PCB escape routing for 
digital microfluidic biochips using negotiated congestion, 22nd IFIP/IEEE In­
ternational Conference on Very Large Scale Integration (VLSI-SoC), Mexi­
co, 2014, pp. 219-224.
85. Duvvury C., Gossner H.: System level ESD co-design, Wiley, 2015.
86. 
Mehri M., Masoumi N.: Statistical Prediction and Quantification of Radiated 
Susceptibility for Electronic Systems PCB in Electromagnetic Polluted Envi­
ronments, IEEE Transactions on Electromagnetic Compatibility, Issue 99, 
2016, pp.1-11.
87. 
Aysu A., Gaddam S., Mandadi H., Pinto C., Wegryn L., Schaumont P.: A 
design method for remote integrity checking of complex PCBs, Design, Au­
tomation and Test in Europe Conference, 2016, pp.1517-1522.
88. 
Miatliuk K., Diaz-Cabrera M.: Application of hierarchical systems technolo­
gy in design and testing of circuit boards, Lecture Notes in Computer Sci­
ence, Springer, Vol. 8112, 2013, pp. 521-526.
89. 
Chameleon video camera, https://www.ptgrey.com/chameleon3-usb3-vision- 
cameras
90. Grasshopper video camera, https://www.ptgrey.com/grasshopper3-usb3- 
vision-cameras
91. Matlab, https://www.mathworks.com
92. MCM machine, http://www.promotech.eu/products/en/welding_cutting/doc/
93. Koziol P., Kuklinski K., Wolniakowski A., Miatliuk K.: Solution for inverse 
kinematics of 5 DoF serial link MCM machine, Solid State Phenomena, 
Trans Tech Publ., 2013, pp. 53-58.
94. Miatliuk K.: Conceptual model for design and control of MCM machine, 
17th IEEE Int. Carpathian Control Conference, Slovakia, 2016, pp. 490-493.
95. 
Automation Studio, http://www.br-automation.com/cps/rde/xchg/br-productcatalogue/
96. B&R automation, www.br-automation.com
97. Ellekilde L.P., J0rgensen J.A.: Robwork: a flexible toolbox for robotics re­
search and education, Int. Symposium on Robotics, 2010, pp. 800-806.
98. RobWork, http://www.robwork.dk/jrobwork/
99. https://www.br-automation.com/en/products/motion-control/acopos/
100. https://www.br-automation.com/pl/produkty/technologia- 
bezpieczenstwa/x67-system/
101. Matlab simulink, https://www.mathworks.com
193

102. Krysiak B., and Kozlowski K.: Kinematic singularities avoidance for the 
planar three-link nonholonomic manipulator, 10th Int. Workshop on Robot 
Motion and Control, RoMoCo 2015, Poznan, Poland, 2015, pp. 252-256.
103. Martowicz A., Ciszewski M., Buratowski T., Gallina A., Rosiek M., Seweryn 
K., Teper W., Zwierzynski A.J., Uhl T.: Mechatronic approach in application 
to solution of research and design problems, Mechatronics, Vol. 36, 2016, 
pp. 1-17.
104. Gawrysiak M.: Systemic analysis of mechatronic devices, WPB, Bialystok 
2003 (in Polish).
105. Petko M., Karpiel G.: Mechatronic design of a parallel robot for milling, Sol­
id State Phenomena, Vol. 198, 2013, pp. 21-26.
106. Awrejcewicz J., Szewczyk R., Trojnacki M., Kaliczynska M. (eds.): Mecha- 
tronics: ideas for industrial applications, Springer, 2015.
107. Ciszewski M., Buratowski T., Giergiel M., Malka P., Kurc K.: Virtual proto­
typing, design and analysis of an in-pipe inspection mobile robot, J. of Theo­
retical and Applied Mechanics, Vol. 52, 2, 2014, pp. 417-429.
108. Jablonski R., Turkowski M., Szewczyk R. (eds.): Recent advances in mecha- 
tronics, Springer, 2007.
109. Brezina T., Jablonski R. (eds.): Recent advances in mechatronics, Springer, 
2010.
110. Zeghloul S., et al. (eds.), Robotics and Mechatronics, Springer, 2016.
111. Van Der Veen G., et al.: Topology optimization for the conceptual design of 
precision mechatronic systems, Proc. 30th Annual Meeting of the American 
Society for Precision Engineering ASPE, 2015, pp.136-141.
112. Bruno S., et al.: The conceptual design of a mechatronic system to handle 
bedridden elderly individuals, Sensors, Vol. 16, Issue 5, 2016.
113. Kulesza Z., Miatluk K., Miatluk M.: Modelowanie i obliczenia dynamiki 
pneumohydraulicznych ukladow napedowych: in; Dynamika pneumatycz- 
nych ukladow napcdowvch, ed. F. Siemieniako, WPB, Bialystok, 2007, pp. 
191-226.
114. Lukaszewicz A., Miatliuk K.: Reverse engineering approach for object with 
free-form sufraces using standard surface-solid paramteric CAD system, Sol­
id State Phenomena, Vol. 147-149, 2009, pp. 706-711.
115. Miatliuk K., Gosiewski Z., Siemieniako F.: Theoretical means of hierarchical 
systems for design of magnetic bearings, 8th IFToMM Int. Conference on 
Rotor Dynamics, Seoul, South Korea, 2010, pp. 1035-1039.
116. Diaz-Cabrera M., Cabrera-Gamez J., Aguasca-Colomo R., Miatliuk K.: Pho­
togrammetric analysis of images acquired by an UAV, Lecture Notes in 
Computer Science, Springer, Vol. 8112, 2013, pp. 109-116.
194

117. Miatliuk K., Holewa K., Nawrocka A.: Conceptual design of BCI in the for­
mal basis of hierarchical system, IEEE 15th Int. Carpathian Control Confer­
ence: ICCC’2014, Czech Republic, 2014, pp. 336-341.
118. Miatliuk K.: Interaction modeling of biomechanical object and its environ­
ment, 4th Int. Symposium of Measurement, Analysis and Modelling of Human 
Functions, Czech University of Life Sciences, Prague, 2010, pp. 57-58.
119. Miatliuk K.: Coordination technology in design of humanoid robots, XII 
Polish - Ukrainian Conference on CAD machinery design, Warszawa, 2009, 
pp. 35-36.
120. Popovic M., Kootstra G., J0rgensen J. A., Kuklinski K., Miatliuk K., Kragic 
D., Kruger N.: Enabling grasping of unknown objects through a synergistic 
use of edge and surface information, International Journal of Robotics Re­
search, SAGE, 31(10), 2012, pp. 1190-1213.
121. Wolniakowski A., Miatliuk K., Kruger N., Rytz J.A.: Automatic evaluation 
of task-focused parallel jaw gripper design, Lecture Notes in Artificial Intel­
ligence, Springer, Vol. 8810, 2014, pp. 77-86.
122. Wolniakowski A., Jorgensen J.A., Miatliuk K., Petersen H.G., Kruger N.: 
Task and context sensitive optimization of gripper design using dynamic 
grasp simulation, 20th IEEE Int. Conference on Methods and Models in Au­
tomation and Robotics, MMAR, Micdzyzdroje, 2015, pp. 29-34.
123. Kuklinski K., Savarimuthu T.R., Fischer K., Beck R., Kruger N., Miatliuk 
K., Kirstein F., Marhenke I., Wieschen M.V., S0lvason D.: A novel tele­
operation device allowing for dynamic switching between control points dur­
ing learning from demonstration, 10th IEEE Int. Workshop on Robot Motion 
and Control: RoMoCo’15, Poznan, 2015, pp. 314-318.
124. Wolniakowski A., Gams A., Chrysostomou D., Madsen O., Miatliuk K., Pe­
tersen H.G., Hageiskj^r F., Buch A.G., Ude A., Kruger N.: Compensating 
pose uncertainties through appropriate gripper finger cutouts, 12th Int. Conf. 
Mechatronic Systems and Materials MSM’2016, Bialystok, Poland, 2016, 
p.27.
125. Miatliuk K., Pascault D.: Control of Stewart parallel structure with concur­
rent learning, 12th Int. Conf. Mechatronic Systems and Materials, Bialystok, 
Poland, 2016, p. 91.
126. Miatliuk K., Kim Y. H., Siemieniako F.: Informational basis for mechatronic 
systems design, Proc. of the 3d Asia Int. Symposium on Mechatronics: 
AISM’2008, Sapporo, Japan, 2008, p. 538-543.
127. Miatliuk K., Diaz-Cabrera M.: Geometrical representation of written text 
elements using hierarchical systems technology, 15th Int. Conf. on Computer 
Aided Systems Theory: Eurocast’2015, 2015, pp.19-20.
195

128. Sapinski B.: Simulation of an MR squeeze-mode damper for an automotive 
engine mounting, 17th IEEE Int. Carpathian Control Conference, ICCC 
2016, Slowakia, 2016, pp. 641-644.
129. Tisch M., Hertle C., Abele E., Metternich J., Tenberg R.: Learning factory 
design: a competency-oriented approach integrating three design levels, Int. 
Journal of Computer Integrated Manufacturing, Vol. 29, Issue 12, 2016, pp. 
1355-1375.
130. Weiss Z., Pankowski M., Kowalski M.: Reverse engineering at VIDA centre. 
Virtual Design and Automation, WPP, Poznan, 2005, pp. 219-226.
131. Ozkan B.: Investigation of the usefulness of the linear homing guidance law 
for the motion planning of mechatronic systems, 17th IEEE Int. Carpathian 
Control Conference, ICCC 2016, Slowakia, 2016, pp.539-544.
132. Sobieszczanski-Sobieski J., Morris A., J.L.van Tooren M.: Multidisciplinary 
design optimization supported by knowledge based engineering, John Wiley 
& Sons, 2015.
133. Gausemeier J., Ramming F.J., Schafer W. (eds.): Design methodology for 
intelligent technical systems, Springer, 2014.
134. Kuhn A., Dumitrescu R., Gausemeier J.: Managing evolution from mechatron- 
ics to intelligent technical systems, Jurnal Teknologi, 76 (4), 2015, pp. 13-18.
135. Petko M., Karpiel G., Gac K., Gora G., Kobus K., Ochonski J.: Trajectory 
tracking controller of the hybrid robot for milling, Mechatronics, Vol. 37, 
2016,pp.100-111.
136. Rohatynski R.: Conceptual design within the product development process. 
Virtual Design and Automation, WPP, Poznan, 2005, pp. 71-82.
137. Wrobiel J., Ruschitzka M., Suchodolski A.: Ontologically-based approach for 
knowledge representation for stamping die applications, Computer Aided De­
sign & Applications, No 6(3), 2009, pp. 281-289.
138. Pichler F.: Mathematical system theory, dynamic structures, Berlin-New 
York, Walter de Gruyter, 1975.
139. Pichler F., Schwartzel H.: Computer-aided systems theory. methods in model­
ling, Springer, 1992.
140. Miatliuk K.: Geometric design of hierarchical objects by coordinator meth­
od, Doctoral thesis, Krakow, 2006.
141. Wolniakowski A., Miatliuk K., Gosiewski Z., Bodenhagen L., Petersen H.G., 
J0rgensen J.A., Kruger N.: Task and context sensitive gripper design learning 
using dynamic grasp simulation, J. of Intelligent and Robotic Systems, 
Springer, Vol, 87, Issue 1, 2017, pp 15-42.
142. Wolniakowski A., Gams A., Kramberger A., Chrysostomou D., Madsen O., 
Miatliuk K., Buch A., Ude A., Petersen H.G., Kruger N.: Compensating pose 
uncertainties through appropriate gripper finger cutouts, Acta Mechanica et 
Automatica, 2017.
196

