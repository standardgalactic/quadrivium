DATA TYPES, INPUT, AND OUTPUT
PLURALSIGHT AUTHOR
@dr_holderness
Practical Python for Beginners
Sarah Holderness

Where Do We Write Python Code?
>>> 10 + 20 + 30 
60
The Python interpreter 
let’s you run Python lines 
of code one at time.
script.py
A Python script is where 
you will create longer 
Python programs.
amount = 10 + 20 + 30 
print(total)
The Python Interpreter
A Python Script

The Python Interpreter
To start the 
Python interpreter 
on a Mac enter 
python3 from the 
Terminal.
To start the 
Python interpreter 
in Windows enter 
py from the 
Command Prompt.

Saving Numbers to Variables
>>> length = 10
Now on your computer 
there is a piece of 
memory labeled length 
that stores the value 10.
10
length 
Assigning the value 10 to 
the variable length.

Saving Numbers to Variables
From the interpreter we can 
enter the name of the variable 
length to see its value and 
see that it’s actually 10.
>>> length 
10
>>> length = 10
10
length 

Saving Numbers to Variables
>>> width = 20
20
width 
Let’s also add the width of the 
rectangle. Now we have another 
variable stored in memory.
10
length 
>>> length = 10

Saving Numbers to Variables
>>> area = length*width
200
area 
>>> width = 20
>>> length = 10
10
length 
20
width 
And now we have another 
variable stored in memory.
Now we can calculate the area with 
the multiplication, * , operator.
The arithmetic operators in Python are mostly the same 
ones you know already from a calculator: +, -, *, / 

Saving Numbers to Variables
>>> area 
200
10
length 
20
width 
200
area 
>>> area = length*width
>>> width = 20
>>> length = 10
The value of area is 
output to the screen.

Primitive Data Types
int 
float 
>>> amount = 10
>>> amount = 10.50
Python infers that 
amount is an int since 
it is a whole number
Python infers that 
amount is a float 
since it is decimal
Python assumes the type of a variable based on the assigned value

Saving an int and a float to Variables
>>> amount = 10 
>>> tax = .06

Calculating the Total with Sales Tax
>>> amount = 10 
>>> tax = .06
>>> total = amount + amount*tax 
>>> total 
10.6
amount = 10 
tax = .06 
total = amount + amount*tax

A Python Script
sales_tax.py
> python3 sales_tax.py 
amount = 10 
tax = .06 
total = amount + amount*tax
A file containing code written in Python
How to run a Python 
script - python followed 
by the ﬁlename.
(The command can also 
be python3 on Mac or 
py on Windows.)

A Python Script
sales_tax.py
> python3 sales_tax.py 
amount = 10 
tax = .06 
total = amount + amount*tax
Notice there’s no output.
How do we output 
a value from a 
Python script?
Just typing the value 
we want doesn’t work 
like in the shell.
total

A Python Script
sales_tax.py
We can call the 
print() function
Now the value of total 
is printed to the screen
> python3 sales_tax.py
10.6
amount = 10 
tax = .06 
total = amount + amount*tax
print(total)

Python print() Function
print(total)
function 
name
argument
You can think of this function 
as a black box machine. 
We don’t know how it works…  
print()
10.6
total 
> 10.6 
But we do know it 
will output the given 
value to the screen.  

Data Type Conversion Functions
int() 
float() 
>>> amount = int(10.6) 
>>> amount 
10
>>> amount = float(10) 
>>> amount 
10.0
Use the int() 
conversion function
Use the float() 
conversion function
What if we want to convert a float to an int? Or vice versa?

A String Stores Text
greeting.py
> python3 greeting.py 
Sarah
name = 'Sarah' 
print(name)
The string 
'Sarah' is saved 
to the variable name
The value of name 
prints without quotes.
The quotes are only 
used tell Python that 
anything inside them 
is a String.
Creating a String 
with single quotes

Create Strings with Single or Double Quotes
greeting.py
store_name = "Sarah's Store" 
print(store_name) 
store_name = 'Sarah's Store' 
print(store_name)
Double quotes can be useful 
if a single quote is literally 
part of the String
This would cause an error because the second 
single quote would end the String and Python 
wouldn’t know what to do with the rest.

String Concatenation
greeting.py
> python3 greeting.py 
HelloSarah
Concatenate two 
Strings with a +
hello = "Hello" 
name = "Sarah" 
greeting = hello + name 
print(greeting)
Notice how the Strings are 
smushed together? We need 
a space between them.

Fixing Our Program
greeting.py
> python3 greeting.py 
Hello Sarah
Concatenate 
a space
hello = "Hello" 
name = "Sarah" 
greeting = hello + " " + name 
print(greeting)

Fixing Our Program
greeting.py
> python3 greeting.py 
Hello Sarah
Let’s ask the user 
for their name.
hello = "Hello" 
name = "Sarah" 
greeting = hello + " " + name 
print(greeting)
How can we customize 
this program for other 
names?

Python input() Function
>>> my_name = input("What’s your name?")
function 
name
The argument 
is a message
What’s your name?
Sarah
The String the 
user types in is 
then saved to 
the variable
The program waits 
for the user to input 
something and press 
enter 
The message gets 
printed to the screen

Console Input
greeting.py
input() prints the statement, then 
waits for a value from the console
hello = "Hello" 
name = 
greeting = hello + " " + name 
print(greeting)
> python3 greeting.py 
  What’s your name? 
  Hello Bob
Bob
 input("What’s your name?")
Notice how the name 
Bob is now printed 
inside of the greeting.

Console Input
greeting.py
hello = "Hello" 
name = input("What’s your name?") 
greeting = hello + " " + name 
print(greeting)
> python3 greeting.py 
  What’s your name? 
  Hello Bob
Bob
This looks bad. Can 
we enter the name on 
the next line?

Improving Our Program
greeting.py
/n is a special 
character for a 
hello = "Hello" 
name = input("What’s your name?\n") 
greeting = hello + " " + name 
print(greeting)
> python3 greeting.py 
  What’s your name? 
  Bob 
  Hello Bob
Now input is entered 
on the next line.

Summary of Primitive Data Types
int 
float 
string 
>>> name = "Sarah"
>>> amount = 10
>>> tax = .06

Summary of Input and Output
Input 
>>> name = input("What’s your name?\n") 
What’s your name? 
Sarah
Output 
>>> print("Hello " + name + "!!") 
Hello Sarah!!

