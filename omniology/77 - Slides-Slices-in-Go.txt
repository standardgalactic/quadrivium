Slices in Go
●
Both a slice and an array can contain only the same type of elements;
●
We can create a keyed slice like a keyed array;
Master Go (Golang) Programming
By Andrei Dumitrescu
Array
Slice
●
Has a ﬁxed length deﬁned at compile 
time;
●
The length of an array is part of its type, 
deﬁned at compile time and cannot be 
changed;
●
By default an uninitialized array has all 
elements equal to zero;
●
Has a dynamic length (it can shrink or 
grow);
●
The length of a slice is not part of its 
type and it belongs to runtime;
●
An uninitialized slice is equal to nil (its 
zero value is nil).

Slice’s Backing (Underlying) Array
●
When creating a slice, behind the scenes Go creates a hidden array called Backing Array.
●
The backing array stores the elements, not the slice. 
●
Go implements a slice as a data structure called slice header. 
Slice Header contains 3 ﬁelds:
1.
the address of the backing array (pointer).
2.
the length of the slice. len() returns it.
3.
the capacity of the slice. cap() returns it.
●
Slice Header is the runtime representation of a slice.
●
A nil slice doesn't a have backing array.
Master Go (Golang) Programming
By Andrei Dumitrescu

