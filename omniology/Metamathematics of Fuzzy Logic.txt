
METAMATHEMATICS OF FUZZY LOGIC

TRENDS IN LOGIC
Studia Logica Library
VOLUME 4
Managing Editor
Ryszard Wojcicki, Institute ofPhilosophy and Sociology,
Polish Academy ofSciences, Warsaw, Poland
Editors
Petr Hajek, Institute ofComputer Sciences,
Academy ofSciences ofthe Czech Republic, Prague, Czech Republic
David Makinson, Ville d'Avray, France
Daniele Mundici, Department ofComputer Sciences, University ofMilan, Italy
Krister Segerberg, Department ofPhilosophy, Uppsala University, Uppsala, Sweden
Alasdair Urquhart, Department ofPhilosophy, University ofToronto. Canada
Assistant Editor
Jacek Malinowski, Box 61, UPT 00-953, Warszawa 37, Poland
SCOPE OF THE SERIES
Trends in Logic is a bookseries covering essentially the same area as the journal
Studia Logica - that is, contemporary formal logic and its applications and relations
to other disciplines. These include artificial intelligence, informatics, cognitive
science, philosophy of science, and the philosophy of language. However, this list
is not exhaustive, moreover, the range of applications, comparisons and sources of
inspiration is open and evolves over time.
The titles published in this series are listed at the end ofthis volume.

PETRHĂJEK 
Institute o/Computer Science, 
Academy of Sciences of the Czech Republic, 
Prague, Czech Republic 
METAMATHEMATICS 
OF FUZZY LOGIC 
SPRINGER-SCIENCE+BUSINESS MEDIA, B.V. 

A C.I.P. Catalogue record for this book is available from the Library of Congress. 
ISBN 978-1-4020-0370-7 
ISBN 978-94-011-5300-3 (eBook) 
DOI 10.1007/978-94-011-5300-3 
Printed on acid-free paper 
AII Rights Reserved 
© 1998 Springer Science+Business Media Dordrecht 
Originally published by Kluwer Academic Publishers in 1998 
Softcover reprint of the hardcover 1 st edition 1998 
No part of the material protected by this copyright notice may be reproduced or 
utilized in any form or by any means, electronic or mechanical, 
incJuding photocopying, recording or by any information storage and 
retrieval system, without written permission from the copyright owner 

To my wife Marie,
to my daughter Marie,
to my son Jonas,
to my grandson Jonas
with love.

CONTENTS
CONTENTS
v
PREFACE
vii
CHAPTER ONE I PRELIMINARIES
1
1.1
Introduction
1
1.2
A survey of Boolean propositional logic
6
1.3
Boolean predicate calculus
10
1.4
Function symbols; varieties of algebras
15
1.5
Lattices and Boolean algebras
20
1.6
Ordered Abelian groups
22
CHAPTER TWO I MANY-VALUED PROPOSITIONAL CALCULI
27
2.1
Continuous t-norms and their residua
27
2.2
The basic many-valued logic
35
2.3
Residuated lattices; a completeness theorem
46
2.4
Some additional topics
56
CHAPTER THREE I LUKASIEWICZ PROPOSITIONAL LOGIC
63
3.1
Getting Lukasiewicz logic
63
3.2
MV-algebras; a completeness theorem
70
3.3
Rational Pavelka logic
79
CHAPTER FOUR I PRODUCT LOGIC, GODEL LOGIC
89
4.1
Product logic
89
4.2
GOdellogic
97
4.3
Appendix: Boolean logic
103
CHAPTER FIVE I MANY-VALUED PREDICATE LOGICS
109
5.1
The basic many-valued predicate logic
109
5.2
Completeness
119
5.3
Axiomatizing GOdellogic
124
5.4
Lukasiewicz and product predicate logic
127
5.5
Many-sorted fuzzy predicate calculi
139
5.6
Similarity and equality
141
v

Vi
CONTENTS
CHAPTER SIX I COMPLEXITY AND UNDECIDABILITY
149
6.1
Preliminaries
149
6.2
Complexity of fuzzy propositional calculi
154
6.3
Undecidability of fuzzy logics
161
CHAPTER SEVEN I ON APPROXIMATE INFERENCE
167
7.1
The compositional rule of inference
168
7.2
Fuzzy functions and fuzzy controllers
177
7.3
An alternative approach to fuzzy rules
189
CHAPTER EIGHT I GENERALIZED QUANTIFIERS AND MODALI-
TIES
195
8.1
Generalized quantifiers in Boolean logic
195
8.2
Two-valued modal logics
205
8.3
Fuzzy quantifiers and modalities
215
8.4
On "probably" and "many"
228
8.5
More on "probably" and "many"
238
CHAPTER NINE I MISCELLANEA
249
9.1
Takeuti-Titani fuzzy logic
249
9.2
An abstract fuzzy logic
261
9.3
On the liar paradox
265
9.4
Concluding remarks
271
CHAPTER TEN I HISTORICAL REMARKS
277
10.1 Until the forties
277
10.2 The fifties
278
10.3 The sixties
279
10.4 The seventies
279
10.5 The eighties
280
10.6 The nineties
281
REFERENCES
283
INDEX
295

PREFACE
This book presents a systematic treatment of deductive aspects and structures
of fuzzy logic understood as many valued logic sui generis. Some impor-
tant systems of real-valued propositional and predicate calculus are defined
and investigated. The aim is to show that fuzzy logic as a logic of imprecise
(vague) propositions does have well developed formal foundations and that
most things usually named "fuzzy inference" can be naturally understood as
logical deduction.
There are two main groups of intended readers. First, logicians: they can
see that fuzzy logic is indeed a branch of logic and may find several very
interesting open problems. Second, equally important, researchers involved in
fuzzy logic applications and soft computing. As a matter offact, most ofthese
are not professional logicians so that it can easily happen that an application,
clever and succcessful as it may be, is presented in a way which is logically
not entirely correct or may appear simple-minded. (Standard presentations
ofthe logical aspects of fuzzy controllers are the most typical example.) This
fact would not be very important if only the bon ton of logicians were harmed;
but it is the opinion of the author (who is a mathematical logician) that a better
understanding of the strictly logical basis of fuzzy logic (in the usual broad
sense) is very useful for fuzzy logic appliers since if they know better what
they are doing, they may hope to do it better. Still more than that: a better
mutual understanding between (classical) logicians and researchers in fuzzy
logic promises to lead to deeper cooperation and new results.
The book has been developed from a series of lectures which I held first in
the Institute of Computer Science of the Academy of Sciences of the Czech
Republic (for postgraduate students) and then also at the Technical University
of Vienna, Austria. My paper [75] was the first draft of the contents of the
book. Later I had the opportunity to give tutorials on fuzzy logic at the Helena
Rasiowa minisemester at Warsaw in winter 1996, for Italian PhD students at
Ravello in spring 1997 and at the IFSA congress in Prague, as well as the
FUZZ-IEEE congress at Barcelona in summer 1997. There is written material
that appeared as ref. [81].
I am indebted to my collaborators Ivan Kramosil, Ms. Dagmar Harman-
cova, Milan Daniel, David Coufal and David Svejda for stimulating com-
ments and cooperation. I have extremely enjoyed long-term cooperation with
my Spanish (Catalan) colleagues F. Esteva and L. Gado. I have learned from
the work of and contact with S. Gottwald, D. Mundici, U. Hohle, M. Baaz,
VB

viii
PREFACE
J. Paris, J. Shepherdson, Ms. Isabel Ferreirim and several other colleagues.
Finally, the criticism of the anonymous referee was helpful in the final stage
of writing this book. The text was typed in LaTex by Ms. Iva Sindelkova,
1. Oliverius and Ms. I. Baranovska. My Tex experts were A. Stedry and R.
Neruda. My thanks go to all of them.
I also recognize partial support by the COST Action 15 and the grant
No A103060111966 of the Grant Agency of the Academy of Sciences of
the Czech Republic; this support has been crucial for attending conferences,
meeting people and buying relevant books.
Finally let me mention two related monographs in preparation: Cignoli,
D'Ottaviano and Mundici [30] and Gottwald [66] (English version of his
[67].) The overlap with the present book is small and the books complement
each other.
Prague, September 1997.

CHAPTER ONE
PRELIMINARIES
1.1.
INTRODUCTION
(l) Fuzzy logic is popular. The number of papers dealing, in some sense, with
fuzzy logic and its applications is immense, and the success in applications is
evident, in particular in fuzzy control. From numerous books written on this
subject we mention at least [224], [68], [134]. As is stated in the introduction
to [134], in 1991 there were about 1400 papers dealing with fuzzy systems.
Naturally, in this immense literature the quality varies; a mathematician (logi-
cian) browsing in it is sometimes bothered by papers that are mathematically
poor (and he/she may easily overlook those that are mathematically excel-
lent). This should not lead to a quick rejection of the domain. Let us quote
Zadeh, the inventor offuzzy sets ([134], Preface): "Although some of the ear-
lier controversies regarding the applicability of fuzzy logic have abated, there
are still influential voices which are critical and/or skeptical. Some take the
position that anything that can be done with fuzzy logic can be done equally
well without it. Some are trying to prove that fuzzy logic is wrong. And some
are bothered by what they perceive to be exaggerated expectations. That may
well be the case but, as Jules Verne had noted at the tum of the century, sci-
entific progress is driven by exaggerated expectations."
I mention a recent paper [49] whose author claimed to prove that fuzzy
logic is impossible (his "proof" was based on an evident misunderstanding;
nevertheless, it had lead to a big discussion, mainly contained in a special
volume [105]). To get insight into the domain let us first ask three questions:
what is logic, what is fuzziness and what meaning(s) does the term "fuzzy
logic"have?
(2) Logic studies the notion(s) of consequence. It deals with propositions
(sentences), sets of propositions and the relation of consequence among them.
The task of formal logic is to represent all this by means of well-defined
logical calculi admitting exact investigation. Various calculi differ in their
definitions of sentences and notion(s) of consequence (propositional logics,
predicate logics, modal propositional/predicate logics, many-valued proposi-
tional/predicate logics etc.). Often a logical calculus has two notions of con-
sequence: syntactical (based on a notion of proof) and semantical (based on
a notion of truth); then the natural questions of soundness (does provability
imply truth?) and completeness (does truth imply provability?) pose them-
selves.
1

2
CHAPTER ONE
(3) Fuzziness is imprecision (vagueness); afuzzy proposition may be true
to some degree. The word "crisp" is used as meaning "non-fuzzy". Standard
examples of fuzzy propositions use a linguistic variable [214] as, for exam-
ple, age with possible values young, medium, old or similar. The sentence
"The patient is young" is true to some degree - the lower the age of the pa-
tient (measured e.g. in years), the more the sentence is true. Truth ofa fuzzy
proposition is a matter ofdegree.
I recommend to everybody interested in fuzzy logic that they sharply dis-
tinguish fuzziness from uncertainty as a degree of belief (e.g. probability).
Compare the last proposition with the proposition "The patient will survive
next week". This may well be considered as a crisp proposition which is ei-
ther (absolutely) true or (absolutely) false; but we do not know which is the
case. We may have some probability (chance, degree of belief) that the sen-
tence is true; but probability is not a degree of truth. (Note that Section 4 in
Chapter 8 is devoted to a discussion of the relation between fuzziness and
probability; see also point (8) below.)
(4) The term "fuzzy logic" has two different meanings - wide and nar-
row. This is a very useful distinction, made by Zadeh; we again quote from
[134], Preface: "In a narrow sense, fuzzy logic, FLn, is a logical system which
aims at a formalization of approximate reasoning. In this sense, FLn is an ex-
tension of multivalued logic. However, the agenda of FLn is quite different
from that of traditional multivalued logics. In particular, such key concepts
in FLn as the concept of a linguistic variable, canonical form, fuzzy if-then
rule, fuzzy quantification and defuzzification, predicate modification, truth
qualification, the extension principle, the compositional rule of inference and
interpolative reasoning, among others, are not addressed in traditional sys-
tems. This is the reason why FLn has a much wider range of applications
than traditional systems. In its wide sense, fuzzy logic, FLw, is fuzzily syn-
onymous with the fuzzy set theory, FST, which is the theory of classes with
unsharp boundaries. FST is much broader than FLn and includes the latter
as one of its branches." Let me add a comment: even if I agree with Zadeh's
distinction between many-valued logic and fuzzy logic in the narrow sense,
I consider formal calculi of many-valued logic (including non-"traditional"
ones, of course) to be the kernel or base of fuzzy logic in the narrow sense
and the task of explaining things Zadeh mentions by means of these calculi
to be a very promising task (not yet finished).
(5) Fuzzy logic (in the narrow sense) is worth studying. We shall under-
stand FLn as a logic with a comparative notion of truth: sentences may be
compared according to their truth values. Our main aim is to elaborate in
detail strictly logical properties of the most important many-valued logics
whose set of truth values is the unit interval [0,1] (both propositonal and

PRELIMINARIES
3
predicate logics) and then discuss some applications from the logical point
of view.
The reader coming from a logician's perspective will (hopefully) be pleas-
ed by seeing that the logical systems of many-valued logic relevant to fuzzy
logic have a depth and beauty comparable with that of classical logic. The
theoretically-minded reader working in soft computing will (hopefully) be
pleased by seeing that fuzzy propositional calculus as well as fuzzy predi-
cate calculus are powerful tools in analyzing topics of Zadeh's agenda, such
as fuzzy modus ponens, compositional rule of inference, fuzzy functions
and fuzzy control, fuzzy generalized quantifiers and modalities (like "many",
"probably" and others). We shall stress the expressive power offuzzy logic as
well as its deductive power: surprisingly, much of the agenda of FLn can be
understood as a truth-preserving deduction. To give just one example, let us
mention properties of fuzzy control expressible and provable in an axiomatic
theory Fe over the basic fuzzy predicate calculus. Furthermore, we shall an-
alyze some paradoxes concerning the notion of truth (the liar's paradox, the
undefinability of truth in arithmetic) and show that fuzzy logic offers new and
non-trivial insights into them.
(6) Where do the truth values comefrom? First, why the unit interval [0,1]?
And second, what does it mean that the truth degree of a proposition is 0.7?
Leaving aside any philosophical discussion, I offer as a typical example ques-
tionnaires: you may be asked, e.g., Do you like Haydn? and you have to se-
lect one of four possible answers: absolutely yes, more or less, rather not,
absolutely not. Or you may have another scale with 11 possibilities, etc. We
shall assume that the truth degrees are linearly ordered, with 1 as maximum
(absolutely yes) and 0 as minimum (absolutely no). Thus truth degrees will
be coded by (some) reals. And even if logics of finitely many truth degrees
can be developed (and have an extensive literature) we choose not to exclude
any real number from the set of truth degrees. We shall always take the set
[0,1] with its natural (standard) linear order; which other structure might be
considered depends on the concrete logical system. On the other hand, we
shall be naturally led to more abstract systems (algebras) of truth values, not
necessarily linearly ordered.
Turning to the second subquestion, what it means that the truth degree of
a proposition is 0.7, we have to distinguisl:l> as in the classical logic, between
the case of an atomic proposition and a compound proposition. Let us take
the former. On the propositional level, we just work with truth evaluations
of atomic propositions as given: if you are asked the question above (about
liking Haydn), you select your answer and you know what it means. (This
is the same situation as if you have only two choices, yes and no.) Imagine
we have two questions: (i) Do you like Haydn? and (ii) Are you old? If you

4
CHAPTER ONE
answer "absolutely yes" to the first and "more or less" to the second, then
this does not mean that you like Haydn more than you are old; it just means
that the truth degree you assigned to (i) is greater than the truth degree you
assigned to (ii). (Again, as in classical logic: imagine you have answered
"yes" to (i) and "no" to (ii).) Thus, on the level of propositional calculi the
assignment of truth degrees to atomic propositions is not analyzed further. (In
predicate calculi such assignment is given by the notion of a model- as in the
classical logic.)
(7) Most many-valued logics are truth-functional. This means that the
truth degree of a compound formula, built from its compounds using a logical
connective (implication, conjunction, etc.) is a function ofthe truth degrees of
the compounds - the truth function of the connective. (The situation is more
complicated for quantifiers.) This answers the second subquestion from the
previous paragraph for compound formulas - and there is nothing wrong in
truth functionality if properly understood. For example, if we take the max-
imum as the truth function of disjunction, then saying that (under some cir-
cumstances) the truth degree of <pV'l/J is 0.7 we say nothing more (and nothing
less) than that the maximum of the truth degrees of <p and of'l/J is 0.7, thus we
impose some constraints on the respective truth degrees. Observe that this is
exactly the same situation as in classical logic: in saying that <p V 'l/J is true
(has the value 1) we say only that at least one of <p, 'l/J is true, thus constraining
the truth values of <p, 'l/J (exclude the pair (0,0)).
(8) The frequentist's temptation. Needless to say, there are real-valued
functions on formulas that are not truth-functional, e.g. probability: the prob-
ability of <p V 'l/J is not a function of the probabilities of <p and of 'l/J. Thus
probability is not directly grasped by truth-functional systems of many-valued
logics; as mentioned above, probability is a particular measure of degrees of
belief, and beliefs (mostly) are not truth functional. There have been attempts
to explain non-extremal truth degrees as some relative frequencies. For ex-
ample, take the sentence "Sagrada Familia is beautiful" and ask n people "Is
Sagrada Familia beautiful?" allowing them to say only "yes" or "no". Imag-
ine 70% of them say "yes". Can you take 0.7 to be the truth degree of our
sentence? This causes problems, because "beautiful" in your question was
two-valued (yes-no, say, "beautifub") whereas in your sentence you deal with
fuzzy "beautiful" ("beautiful!,', say). Strictly speaking, 0.7 can be perfectly
taken to be the truth degree of the (fuzzy) sentence "Many people consider
Sagrada Familia to be beautifub" or "The relative frequency of answers 'yes'
to the question if Sagrada Familia is beautiful (with the possibility of an-
swers 'yes' or 'no') is HIGH". Compare this with the sentence "The patient
is YOUNG": this is the same structure.
(9) Mathematical expertise assumed. The reader is assumed to be able

PRELIMINARIES
5
to follow mathematical arguments and to have at least a basic mathemat-
ical knowledge of undergraduate level (for example to know most impor-
tant properties of continuous functions of one or several real arguments). The
reader is further assumed to have at least a partial experience with the clas-
sical (Boolean) propositional logic; some knowledge of predicate calculus
is very helpful. But we do not assume any deep knowledge of mathematical
logic or algebra. For the reader's convenience, basic facts about classical logic
and algebra are surveyed in the rest of the present chapter, with reference to
monographs where the reader may find details if required. (Note that several
results of the classical logic summarized below in this chapter will later be
proved as corollaries of results on many valued systems.) Note also that there
will be three survey sections in other chapters: Chapter 6 Sec. I (computa-
tional complexity and arithmetical hierarchy), Chapter 8 Sec. 1 (generalized
quantifiers in Boolean logic) and Chapter 8 Sec. 2 (modal logics). The expe-
rienced reader may just skip these surveys, returning to them if necessary.
(10) Things to come. Chapters 2 - 4 deal with fuzzy propositional calculi.
Chapter 2 elaborates on the approach to fuzzy propositional calculi, based on
the notion of a t-norm (as semantics of conjunction) and the corresponding
implication. It turns out that there are three basic t-norms and hence three cor-
responding logics, named Lukasiewicz logic, GOdellogic and product logic;
the first one is presented in Chapter 3, the second and third in Chapter 4.
Chapter 5 deals with fuzzy predicate calculi and Chapter 6 with the com-
plexity of fuzzy propositional calculi and problems of undecidability offuzzy
predicate calculi. Further chapters are devoted to an analysis of various points
from the agenda of fuzzy logic (Zadeh's generalized modus ponens and fuzzy
control in Chapter 7, fuzzy quantifiers and modalities in Chapter 8). Chapter
9 contains miscellanea, among them an analysis of the liar's paradox as well
as concluding remarks.
I hope that the book shows the following:
Fuzzy logic is neither a poor man's logic nor poor man's probability.
Fuzzy logic (in the narrow sense) is a reasonably deep theory.
Fuzzy logic is a logic. It has its syntax and semantics and notion of con-
sequence. It is a study of consequence.
There are various systems offuzzy logic, notjust one. We have one basic
logic (BL) and three ofits most important extensions: Lukasiewicz logic,
GOdellogic and the product logic.
Fuzzy logic in the narrow sense is a beautiful logic, but is also important
for applications: it offers foundations.

6
CHAPTER ONE
1.2. A SURVEY OF BOOLEAN PROPOSITIONAL LOGIC
1.2.1 In Boolean (classical) propositional logic,1 propositions are true or fal-
se. One takes "true" and "false" for two truth values. Almost always one
identifies the truth value "true" with the number I and "false" with the num-
ber O. One works with propositioTUlI variables Pi, P2, ... (finitely or infinitely
many). A truth evaluation (or just evaluation) is a mapping e assigning to
each propositional variable P its truth value e(p). Formulas are the formal
counterpart of the intuitive notion of a proposition. They are built from propo-
sitional variables and two propositional constants 0, I using connectives: im-
plication -+, conjunction 1\ (in Boolean logic this may be alternatively de-
noted by &), disjunction V, equivalence == and negation '. The definition
of a formula reads as follows: Propositional variables and propositional con-
stants are formulas; if cp, 'ljJ are formulas then (cp -+ 'ljJ), (cp1\'ljJ), (cpV'ljJ), (cp ==
'ljJ), ,cp are formulas. There are no other formulas.
The principle of truth functionality says that the truth-values of com-
pounds of a formula uniquely determine the truth value of a compound for-
mula. This is achieved by defining the truth functions of connectives as fol-
lows:
~
~
1
0
I
0
I
I
0
o
I
0
I
1
n
1
0
U
1
0
{:}
I
0
1
I
0
1
I
1
I
I
0
0
0
0
0
I
0
0
0
I
(Here (-) is the truth function of" ~ of -+ etc.) Using this, each evalu-
ation e extends uniquely to an evaluation of all formulas (denoted also bye)
as follows:
e(,cp) = (-)e(cp),
e(cp -+ 'ljJ) = (e(cp) ~ e('ljJ»,
e(cp 1\ 'ljJ) = (e(cp) n e('ljJ» ,
e(cp V 'ljJ) = (e(cp) U e('ljJ» ,
e(cp == 'ljJ) = (e(cp) {:} e('ljJ».
This may be visualised by constructing a table like this.
1 There are many monographs on classical mathematical logic, e.g. [189,48].

PRELIMINARIES
7
P
q
p-tq
(p -t q) -t q
1
1
1
1
1
0
0
1
0
1
1
1
0
0
1
0
Each row corresponds to one possible evaluation of variables occurring in
a given formula, each column gives the truth values of the formula naming
the column in dependence of the respective evaluations of variables.
1.2.2 A formula ep is a tautology if e(ep) =
I for each evaluation ep (thus
ep is identically true). Formulas ep,'l/J are semantically equivalent if e(ep) =
e('l/J) for each e. Note that ep, 'l/J are semantically equivalent iff (ep == 'l/J) is a
tautology. Also observe that if ep and 'l/J are semantically equivalent then so
are -'ep and -,'l/J; also (ep -t X) and ('l/J -t X); also (X -t ep) and (X -t 'l/J);
and similarly for other connectives.
We shall present some examples of tautologies. They are well known and
easy to verify by constructing the corresponding truth tables.
Lemma 1.2.3 The following formulas are Boolean tautologies, for each
ep,'l/J:
-'ep == (ep -t 0),
T == (0 -t 0),
(ep 1\ 'l/J) == -,(ep -t -,'l/J),
('I' V 'l/J) == ((ep -t 'l/J) -t'l/J),
(ep == 'l/J) == ((ep -t 'l/J) 1\ ('l/J -t ep)).
Corollary 1.2.4 In Boolean propositional calculus, each formula is semanti-
cally equivalent to a formula built from propositional variables and the built
constant 0 using only the connective -t.
Clearly, the equivalences of the previous lemma show how to successively
eliminate negation, T, conjunction, disjunction and equivalence.
Lemma 1.2.5 The following formulas are Boolean tautologies, for each
ep,'l/J, X:
ep -t ('l/J -t ep)
(ep -t ('l/J -t X)) -t ((ep -t 'l/J) -t (ep -t X))
(-,ep -t -,'l/J) -t ('l/J -t ep)
(BooII)
(BooI2)
(BooI3)

8
CHAPTER ONE
We take these formulas for axioms of the deductive system Baal of the
Boolean logic. Due to 1.2.4 we restrict ourselves to formulas built from propo-
sitional variables and 0 using only -+. Other connectives are understood as
abbreviations, in particular -'cP is cP -+ o.
Definition 1.2.6 Axioms of Baal are the formulas (B0011), (B0012), (Bool3)
(for any formulas cP, 'ljJ, X). The deduction rule is modus ponens: from cP and
cP -+ 'ljJ infer'ljJ.
A proof in Baal is a sequence CPI, ... ,CPn of formulas such that each CPi
either is an axiom of Baal or follows from some preceding CPj, CPk (j, k <
i) by modus ponens. A formula is provable (notation: f- cp) if it is the last
member of a proof in Baal.
Lemma 1.2.7 (Soundness.) Each formula provable in Bool is a Boolean tau-
tology. (This is because axioms are tautologies and modus ponens preserves
tautologicity.)
Definition 1.2.8 A theory is a set of formulas, called special axioms of the
theory. A proofin a theory T is a sequence CPI, ... ,CPn of formulas such that
each CPi either is an axiom of Baal or is special axiom of T or follows from
some preceding CPj, CPk by modus ponens. cP is provable in T (notation T f- cp)
if it is the last member of a proof. An evaluation e is a model of T if e(cp) = 1
for each cP E T (all special axioms are true in e).
Lemma 1.2.9 (Strong soundness.) If T f- cP then cP is true in each model of
T (i.e. whenever e is a model ofT then e(cp) = 1).
Theorem 1.2.10 Deduction theorem. Let T be a theory, cP, 'ljJ formulas.
T U {cp} f- 'ljJ iffT f- (cp -+ 'ljJ).
Note that T U {cp} f- 'ljJ means the existence of a proof that may use all
axioms ofT and also the axiom cP, and whose last member is 'ljJ. T f- (cp -+ 'ljJ)
means the existence of a proof that may use all axioms of T (but not cp) and
whose last member is (cp -+ 'ljJ).
Theorem 1.2.11 (Completeness.) (1) For each formula cP, cP is provable in
Baal iff it is a Boolean tautology.
(2) (Strong completeness.) Let T be a theory, cP a formula. T f- cP iff cP is
true in each model of T.
We shall not present here proofs of the deduction and completeness the-
orem. The reader may find them in most textbooks of logic. Moreover, we

PRELIMINARIES
9
obtain the proofs of these theorems on Bool as corollaries of theorems on
more general logics. Section 3 of Chapter 4 contains details.
*
Lemma 1.2.12 The following formulas are Boolean tautologies:
(cp /\ 'l/J) == ('l/J /\ cp)
(cp /\ ('l/J /\ X)) == ((cp /\ 'l/J) /\ X)
(cp V'l/J) == ('l/JVcp)
(cp V ('l/J VX)) == ((cp V'l/J) VX)
(commutativity and associativity of conjunction and disjunction).
1.2.13 This shows that we may freely speak about the disjunction Vi=l CPi
(or conjunction /\i=l CPi) of finitely many formulas CPI, ... ,CPn: their order
and bracketting are immaterial. It is technically suitable to allow n = 0, Le.
empty conjunction and disjunction: V0 is 0 and /\ 0 is T. Moreover, V;=l CPi
is CPI and /\;=I CPi is also CPl·
A literal is a formula of the form Pi or 'Pi where Pi is a propositional
variable. An elementary conjunction of length n is a formula /\i=l Li where
Li are literals and the variable of Li is Pi. For example if n = 3 then PI /\
'P2 /\ P3 is an elementary conjunction.
Lemma 1.2.14 (Normal form.) Each formula not containing any proposi-
tional variables except PI, ... ,Pn is semantically equivalent to a disjunction
of finitely many elementary conjunctions.
The proof is easy: the number of elementary conjunctions in the normal
form of cP equals to the number of values 1 in the column of cP in the truth
table of cpo If there are no l's then the normal form is V0, Le. 0. For example,
for the formula (cp -+ 'l/J) -t 'l/J (Le. cP V'l/J) see the table above; the normal
form is
(p /\ q) V(p /\ ,q) V(,p Vq).
Remark 1.2.15 Dually we may define elementary disjunctions and show that
each formula is semantically equivalent to a conjunction of finitely many el-
ementary disjunctions.

10
CHAPTER ONE
1.3.
BOOLEAN PREDICATE CALCULUS
In propositional calculus, atomic formulas have no structure, they are just
propositional variables. In predicate calculus atomic formulas do have struc-
ture: each atom consists of a predicate and some terms forming the argu-
ments of the predicate. Object variables are particular terms; variables may
be quantified using quantifiers V - "for all" and :3 -"there is". Exact defini-
tions follow:
Definition 1.3.1 A predicate language consists of a non-empty set of pred-
icates, each together with a positive natural number -
its arity - and a
(possibly empty) set of object constants. Predicates are mostly denoted by
P, Q, R, .. . , constants by c, d, . .. Logical symbols are object variables
x, y, .. . , the connective ~, truth constants 0, I and the quantifier V. Other
connectives (1\, V,..." =) are defined as in the propositional calculus; the ex-
istential quantifier :3 is defined as ...,V...,. Terms are object variables and object
constants.
Atomicformulas have the form P(tl,'" ,tn ) where P is a predicate of ar-
ity n and tl, ... , t n are terms. If cp, 'I/; are formulas and x is an object variable
then cp ~ '1/;, (Vx)'1/;, 0, I are formulas; each formula results from atomic
formulas by iterated use of this rule.
Let.J be a predicate language. A structure M = (M, (rp )p, (me)e) for
.J has a non-empty domain M, for each n-ary predicate P an n-ary relation
r p
~ M n on M (associating to each n-tuple (ml, ... , m n ) of elements of
M) and for each object constant c, me is an element of M).
Example 1.3.2 .J has one binary predicate D (read: divides) and one object
constant 1. M
= {I, 2, 3, 4, 5, 6, 7, 8, 9}; ml = 1 and rD is given by the
following matrix.

PRELIMINARIES
11
I I
2
3
4
5
6
7
8
9
1
1
1
1
1
1
1
1
1
1
2
0
1
0
1
0
1
0
1
0
3
0
0
1
0
0
1
0
0
1
4
0
0
0
1
0
0
0
1
0
5
0
0
0
0
1
0
0
0
0
6
0
0
0
0
0
1
0
0
0
7
0
0
0
0
0
0
1
0
0
8
0
0
0
0
0
0
0
1
0
9
0
0
0
0
0
0
0
0
1
Definition 1.3.3 Let .:r be a predicate language and M a structure for .:r.
An M-evaluation of object variables is a mapping v assigning to each object
variable x an element v(x) E M. Let v, v' be two evaluations. v =x v' means
that v(y) = v'(y) for each variable y distinct from x.
The value of a term given by M, v is defined as follows: IlxllM,v
=
v(x); IlcllM,v = me' We define the truth value IlcpllM,v of a formula. =}
denotes the truth function of the implication.
IIP(tl,' .. ,tn)llM,v = rp(lItdIM,v, .. . ,lItnIIM,v);
Ilcp -+ 1/JIIM,v = IlcpllM,v =} 1I1/JIIM,v;
IIOIIM,v = 0; IIIIIM,v = 1;
II(Vx)cpIIM,v = min{lIcpIlM,v,lv =x v'}.
The last line obviously means that
II (Vx )cpIIM,v is 1 iff for all v' =x v,
IIcpllM,v' is 1; otherwise II (Vx) cpllM,v is O.
Definition 1.3.4 Free and bound variables of a formula are defined as fol-
lows:
-
No variable is freefbound in a truth constant.
-
If cp is atomic, say P(tI, ... ,tn ), then x is free in cp if x is one of
tl, ... ,tn; no variable is bound in cp.
-
A variable x is free in cp -+ 1/J if it is free in cp or free in 1/J; x is bound
in cp -+ 1/J if it is bound in cp or bound in 1/J.
-
A variable x is bound in (Vx)cp and is not free in (Vx)cp. For any
variable y distinct from x, y is freefbound in (Vx) cp if it is freefbound in
cp.

12
CHAPTER ONE
Remark 1.3.5 (1) For example, take (Vx)(3y)P(x, y) ----+ (3y)P(x, y). Here
y is bound and not free, but x is both free and bound.
(2) Observe that if x is not free in cp then the value IIcplIM,v does not
depend on v(x), i.e. if v =x v' then IlcpllM,v =
IlcpIlM,v,.This justifies the
following convention: If cp is a formula with free variables x, ... ,y, M is a
model and a, ... , b E M then IlcpIlM[a, ... ,b] stands for IlcpllM,v for any v
such that v(x) = a, . .. ,v(y) = b.
Definition 1.3.6 We define the result of substitution of a term t for a variable
x in cp, denoted by cp(xjt).
-
If cp is atomic then cp(xjt) results from cp by replacing all occurrences
of x in cp, by t. O(xjt) = 0 (and similarly for I).
-
(cp ----+ 'ljJ)(xjt) is cp(xjt) ----+ 'ljJ(xjt)
-
[(Vx)cp](xjt) is (Vx)cp (no change); for each variable y distinct from
x, [(Vy)cp](xjt) is (Vy)[cp(xjt)]. (For example, substituting c for x into
the formu!a in 1.3.5 (1) we get (Vx) (3y)P(x, y) ----+ P(c, y).)
Similarly we may define the (intuitively clear) notion of a subformula:
-
Each formula cp is a subformula of itself.
-
If cp is a subformula of'ljJ or of X then cp is a subformula of 'ljJ ----+ x. If
cp is a subformula of'ljJ then cp is a subformula of (Vx)'ljJ (x any variable).
We may distinguish several occurrences of a variable x in a formula cp,
some being free in cp and some bound. In our example (Vx) (3y)(P(x, y) ----+
P (x, y) ), the variable x occurs three times; the first two occurences are bound
and the third one is free. 2
When substituting a variable y for x into cp, the unwanted situation may
happen that a free occurrence of x in cp becomes a bound occurrence of y.
For example, take (3y)P(x, y) (i.e. (Vx)(P(x, y)
----+ 0)
----+ 0) and observe
that [(3y)P(x, y)](xjy) is (3y)P(y, y). To eliminate such "pathologies" one
makes the following definition:
Definition 1.3.7 A variable y is substitutable for x in cp if no subformula of
cp of the form (Vx)'ljJ contains an occurrence of x free in cp. A constant is
substitutable for any variable in any formula.
Definition 1.3.8
(1) Let cp be a formula of a language :1 and let M be a
structure for :1. The truth value of cp in M is
IIcpliM = min{lIcpIlM,vl v M-evaluation}.
(Thus IIcpliM is 1 iff IlcpllM,v = 1 for all evaluations v, otherwise it is 0.)
---::--
2 To get a formal definition it is useful to think of formulas as being finite se-
quences of symbols.

PRELIMINARIES
13
(2) A fonnula cp of a language .:J is a tautology if IIcpllM
1 for each
structure M, i.e.llcpIIM,v = 1 for each structure M and each M-valuation
of object variables.
Definition 1.3.9 The logical axioms of the Boolean predicate calculus are
the axioms of the Boolean propositional calculus (with the present notion of
a fonnula) plus the following logical axioms on quantifiers:
(VI) (Vx)cp(x) -+ cp(t) (t substitutable for x in cp(x))
("12) (Vx)(v -+ cp) -+ (v -+ (Vx)cp) (x not free in v)
The deduction rules are modus ponens (see above) and generalization
(from cp infer (Vx)cp).
This completes the definition of the Boolean predicate calculus; we shall
denote it by BooN.
Given this, the notions of proof, provability, theory, proof/provability in a
theory over BooN are defined in the obvious way; in particular, a proof in a
theory T is a sequence CPl, ... ,CPn of fonnulas such that for each i, CPi is a
logical axiom of BooN or an axiom of Tor CPi follows from some preceding
members of the sequence by one of the deduction rules.
Definition 1.3.10 Let T be a theory over BooN, let M be a structure for
the language of T. M is a model of T if all axioms of T are true in M, i.e.
IIcpllM = 1 in each cP E T.
Theorem 1.3.11 (Strong completeness) (1) For each fonnula cP, BooN proves
cP iff cP is a tautology.
(2) For each cP and each theory T, T r Bool cP (i.e. T proves cp over BooN
iff IlcpliM = 1 for each model ofT.
This is Gbdel's celebrated completeness theorem; its proof can be found
in any textbook of logic and we get it (by a big detour) as a corollary of a
more general completeness result (cf. 5.2.10).
Definition 1.3.12 A theory T is contradictory if for some cp, T proves cp and
T proves .cp. T is consistent if it is not contradictory.
Corollary 1.3.13 T is consistent iff T has a model.
We shall now survey some examples of theories and their models. The
examples concern the notions of equality and order.

14
CHAPTER ONE
Example 1.3.14 The (Boolean, first-order) theory ofpreorder has one binary
predicate::; and the following axioms x 2: x (reflexivity),
x ::; Y --+ (y ::; z --+ x ::; z) (transitivity).
The theory of linear preorder has in addition the axiom x ::; Y V Y ::; x
(dichotomy).
Models ofthe theory of (linearly) ordered sets are called (linearly) ordered
sets. Each such model consists of a set M and a binary relation r:s: satisfying
the axioms. We often take the liberty of writing ::; instead of r:s:; thus the
fact that (M, ::;) is a preorder means that a ::; a for each a E M and, for
a, b, c E M, whenever a ::; band b ::; c then a ::; c. Linearity means that
a ::; b or b ::; a for each a, b E M.
Definition 1.3.15 The axioms ofequality for a binary predicate = are
x = x
(reflexivity)
x = Y --+ (y = z --+ x = z)
(transitivity)
x = Y --+ Y = x
(symmetry).
(M, r) is a model of these axioms iff r is an equivalence on M, i.e. a
reflexive, symmetric and transitive relation.
Let J be a predicate language containing the binary predicate =. The
axioms of equality for =, J are the above axioms (reflexivity, transitivity,
symmetry) plus the following congruence axioms: for each n-ary predicate
P (distinct from =), (Xl =
YI 1\ ... 1\ xn = Yn)
--+ (P(XI, ... , xn) ==
P(YI, ... ,Yn))·
A theory T with the language J is called a theory with the equality =if T
proves all axioms of equality for =,J.
A model M of T has absolute equality if it interprets = absolutely, i.e. r =
is ((a, a)la EM).
One easily shows that, T being a theory with equality =, and <p(XI, ... , xn)
a formula,
n
TI-I\(Xi =Yi) --+ (<p(XI,""Xn) ==<P(YI, .. ·,Yn)).
i=l
Example 1.3.16 Continuing 1.3.14. In the theory of a preorder we may de-
fine an equality predicate =by
x = Y == (x ::; Y 1\ Y ::; x).
With this =, axioms of equality for = and ::; are easily provable. Futhermore,
we may define strict preorder ::; by
x < Y == (x ::; Y 1\ Y 1: x)

PRELIMINARIES
15
(where y ~ x stands for....,(y ::; x).
A model M of the theory of preorder is an ordered set if M interprets the
equality =above as identity, i.e. whenever a ::; b and b ::; a then a coincides
with b. Similarly for a linearly ordered set.
1.4.
FUNCTION SYMBOLS; VARIETIES OF ALGEBRAS
Here we survey Boolean predicate logic with function symbols (like +). In
this logic we have formulas like x + y = y + x. On the one hand, this logic
fully reduces to the logic BooN of the previous section; on the other hand,
formulas like the above (equalities of terms) are extremely useful in defining
various useful classes of algebras.
Definition 1.4.1 A predicate language I with function symbols consists of a
non-empty set of predicates P, Q, ... (each with its arity, a (possibly empty)
set of object constants c, d, ... and a (non-empty) set of function symbols
F, G, ... , each having a positive natural number as its arity. Terms are defined
as following object variables and object constants are terms; if F is an n-
ary function symbol and tl,' .. ,tn are terms then F(tl,'" ,tn) is a term;
there are no other terms. Formulas are defined exactly as in Definition 1.3.1.
Free and bound variables are defined similarly as in 1.3.4, only saying: if
y is atomic, P(tl,' .. tn), then x is free in cp if it occurs in one tl,' .. ,tn'
A structure for I has the form
where each iF is an n-ary operation on M (F n-ary, i.e. a mapping iF
M n ---+ M).
Given M and an evaluation v of object variables, the value IltllM,v of t
given by M, v is defined as follows:
IlxllM,v = v(x) for each variable x,
IlcIIM,v = me for each constant c,
IIF(tl,"" tn)IIM,v = iF(lltlIIM,v,.' ·lltnIlM,v).
Having this, the value IIcplIM,v ofa formula cp is defined exactly as in 1.3.3.
Remark 1.4.2 There are some useful farons de parler:
First if F is binary then we often write xFy instead of F(x, y). Sec-
ond, observing that if t(XI' ... ,xn ) is a term containing no variables besides

16
CHAPTER ONE
Xl,
0
0
0' Xn then the value IItlIM,v depends only on the values v(xd,
0
0
0 ,v(xn )
of these variables, we may write, for aI,
0
o. ,an EM,
t(al,' .. ,an)
to mean the value of t in M for any valuation with v(xd = ai
(i =
1, ... ,m). For example if t is (x + y) + z, M is clear from the context
and a, b, c E M then (a + b) + c obviously means the value of t in M for
v(x) = a,
v(y) = band v(z) = c.
Definition 1.4.3 Logical axioms are as in 1.3.9, with the definition of substi-
tutability modified as follows:
A term t is substitutable for X into <p if for each variable y occurring in t, no
subformula of <p of the form (Vy)'l/J contains an occurrence of x free in <po
Remark 1.4.4 (1) Thus e.g. x + y is not substitutable for x into (3y)P(x, y).
(2) Note that for each <p, x is substitutable for x in <po
Definition 1.4.5 The equality axioms for a predicate =and a language I with
function symbols are those of 1.3.15 (reflexivity, symmetry, transitivity, con-
gruence for predicates) plus the following congruence axiom for each n-ary
function symbol F of I:
n
(/\ Xi = yd ---+ F(XI' o'
0 ,xn) = F(YI, ..
0 ,Yn).
i=l
A theory T in the language I (over BooN) is a theory with the equality =
if it proves all equality axioms for =, I.
Example 1.4.6 The theory of semigroups. The language consists of the bi-
nary predicate =and the binary function symbol *. Axioms are equality ax-
ioms for =, * plus the axiom of associativity:
Example 1.4.7 Arithmetic. Language: binary predicates =, :S, constant Q,
unary function symbol S (successor), binary function symbols +, * (addi-
tion, multiplication) axioms ofRobinson arithmetic QA: equality axioms plus
Sx ~Q
Sx = Sy -t X = Y
Y ~ Q-t (3x)(y = Sx)

PRELIMINARIES
17
x+Sy=S(x+y)
x+Q=x
x*Sy=(x*y)+x
x*Q=Q
x $ y == (3z)(z + x = y)
Peano arithmetic PA: Robinson arithmetic with the additional axiom sche-
me of induction for each cp(x):
(cp(xjO) 1\ (V'x)(cp(x) --t cp(xjSx))) --t (V'x)cp(x).
The standard model of both PA and QA is the structure
N = (N,ON,SN,+N,*N,$N)
where N is the set of natural numbers, ON is zero, +N and *N are addition
and multiplication of natural numbers, SN (m) = m + 1 for each m and $ N
is the natural ordering of N (e.g. 3 <N 7, etc.). = is interpreted absolutely.
Using the convention above we write e.g. +, * instead of +N,*N,etc.3
*
Next we shall indicate that function symbols are redundant and may be
replaced by predicates. (Therefore we have good reasons to develop the fuzzy
predicate logic as a logic without function symbols.) On the other hand, using
function symbols is useful in particular when studying classes of algebras;
this will also be shown in this section.
Definition 1.4.8 Let I
be a predicate language with function symbols and
equality =. A formula cp is without compound terms if each function symbol
F (n-ary) occurring in cp occurs in the context
where y is a variable and ti are variables or constants.
Remark 1.4.9 (1) One can define a transformation assigning to each cp a for-
mula cp# without compound terms and for each theory T over I with equal-
ity=, T I- cp == cp#. For example let cp be (x + y) + z = x + (y + z); then cp#
maybe
(3u, v, w, q)(u = x + Y 1\ v = u + z 1\ w = Y + z 1\ q = x + w 1\ v = q).
3 For more information on metamathematics of arithmetic see [91].

18
CHAPTER ONE
Note that in T this formula is equivalent to
(V'u, v, w, q)((u = x +Y 1\ v = u + z 1\ w = Y+ z 1\ q = x + w) --+ v = q).
(2) Having this one may construct a new language I' replacing each n-ary
function symbol F ofI by a new (n+l)-ary predicate F';for each T-formula
ep let (ep#)' be the formula resulting from ep# by replacing each subformula
ofthe form y = F(tl' ... , tn) (ti variables or constants) by F'(tl, ... ,tn, y).
Let T' be the theory over I' with the following axioms:
equality axioms for =and I',
(ep#) I for each axiom ep of T distinct from the equality axioms
functionality axioms for the new predicates:
(F'(Xl,'" ,xn , y) 1\ F'(Xl,"" xn , z)) --+ Y = z.
(3) It is not difficult to show that T ' is equivalent to T in the following
sense: each T'-formula has the form (ep#)' for some T-formula ep; and for
each T-formula ep,
T /- ep iffT' /- (ep#)'.
Example 1.4.10 The following is the function-free counterpart ofRobinson's
arithmetic QA: language - predicates =,::;, S (binary), A, B (ternary), con-
stant Q. Axioms: equality axioms for this language, functionality axioms for
S,A,B, and
S(x, y) --+ y i- Q
(S(x,u) 1\ S(y,u)) --+ x = y
y i- Q--+ (3x)S(x, y)
(S(y, u) 1\ A(x, u, v) 1\ A(x, y, z) 1\ S(z, w)) --+ v = w
A(x,Q,x)
((S(y, u) 1\ B(x, u, v) 1\ B(x, y, z) 1\ A(z, x, w)) --+ v = w
B(x,Q,Q)
x::; y == (3z)A(z, x, y).
PA - the induction schema becomes
[ep(xjQ) 1\ ("Ix, y)((S(x, y) 1\ ep(x)) --+ ep(xjy))] -+ (V'x)ep(x).
We shall use these forms of arithmetic occasionally in the book.

PRELIMINARIES
*
19
1.4.11 Algebras are structures of the form (M, h, ... ,In) where Ji are oper-
ations on M. Such an algebra is naturally a structure for a predicate language
I having the equality predicate =(interpreted absolutely) and function sym-
bols F l , ... Fn of corresponding arities. Many important classes of algebras
are defined as classes of all models of a theory T over I with the equality =
(see the example 1.4.6 - semigroups). In particular, the axioms of F (other
than the equality axioms) may be just some atomic formulas, i.e. identities
t = s (for some terms t, s). This leads us to the following definition:
Definition 1.4.12 Let I be a language (=, Fl , ... ,Fn ) with n function, let
J( be a class of structures for I (interpreting =as identity). J( is a variety if
there is a set T of identities (atomic formulas of I) such that J( is the class of
all structures M for I (interpreting =identically) such that all identities from
T are true in M.
Remark 1.4.13 Thus semigroups form a variety. We shall investigate the va-
rieties of lattices, Boolean algebras and Abelian groups in subsequent sec-
tions.
Definition 1.4.14 Let M l = (Ml , h,· .. ,In), M2 = (91, ... ,9n) be struc-
tures for the language I as in 1.4.12 (with absolute identity).
(1) M l is a subalgebra of M 2 if M l ~ M 2 and for each i = 1, ... , n, Ii
is the restriction of 9i to Mr(fi) (hence M l is closed under all 9/S).
(2) M l is a homomorphic image of M 2 if there is a mapping h of M 2
onto M l commuting with the operations, i.e. for each i = 1, ... ,n, and any
al, .. . ,ak E M, h(Ji(al," . ,ak) = 9i(h(ad, . .. ,h(ak»
(where k is the
arity of Ji and 9i).
(3) Now let I ::j 0be a set and for each AE I let M A = (MA,hA'" . ,InA)
be a structure for I. The direct product fhE! M A is the algebra M = (M,
h, .. .,In) where M is the set of all functions a whose domain is I and for
each A E I, a(A) E MA (selectors). The operations are defined coordinate-
wise, i.e. for al, ... ,an E M and Ii k-ary, Ji(al,"" ak) = b iff for each
A E I, b(A) = JiA (al (x), ... ,an(x». Note that in general the non-emptiness
of M follows from the set theoretical axiom of choice.
(4) An algebra M is a subdirect product of a system {MAlA E I} of
algebras if M is a subalgebra of [hE! M A.
Theorem 1.4.15 Birkhoff's theorem (see e.g. [69]). A class J( of structures
for I is a variety iff it is closed under subalgebras, homomorphic images and

20
CHAPTER ONE
direct products, i.e. K contains with each M all its subalgebras and homo-
morphic images and will each system (MAlA E I) of elements of K contains
its direct product ThE! M A.
Note that it is easy to prove that a variety is closed under these three things;
the converse is much deeper but we shall not need this difficult part.
1.5.
LATTICES AND BOOLEAN ALGEBRAS
Here we present main notions concerning lattices and Boolean algebras and
survey their most important properties. We shall give (almost) no proofs; the
reader may consult Chapter XIV of the monograph [128] if necessary.
Definition 1.5.1 The language of lattices has two binary function symbols n
and U (meet and joint) plus equality =, (interpreted as identity). An algebra
L = (L, n, U) is a lattice if the following identities are true in L:
xnx=x
xny=ynx
x n (y n z) = (x n y) n z
xn(xuy)=x
xUx=x
xUy=yUx
x U (y U z) = (x U y) U z
xu(xny)=x
(idempotence)
(commutativity)
(associativity)
(absorption)
Remark 1.5.2 (1) Evidently, lattices form a variety.
(2) To get an example of a lattice take a linearly ordered set (L, ~) and
put x n y = min(x, y), x U y = max(x, y). Verify that this is a lattice.
(3) Using the easy part of Birkhoff's theorem, produce other examples as
direct products of some lattices.
(4) Each set X gives us the lattice whose domain L is the power set (set of
all subsets) of X, n is set theoretic intersection and U is set theoretic union.
Lemma 1.5.3 Let L = (L, n, U) be a lattice.
(1) For any a, bEL, an b = a iff aU b = b.
(2) Define x ~ y to mean x n y = x (equivalently, xU y = y).
Then (L,~) is an ordered set, xny = x is the infimum of x, y (greatest lower
bound) and x U y is the supremum of x, y, i.e. the following is true in L:
x n y ~ x,
x n y ~ y,
(Vz)((z ~ x !\ z ~ y) -+ z ~ x n y);
x ~ x U y,
y ~ x U y,
(Vz)( (x ~ z !\ Y ~ z) -+ x UY ~ z).
(3) On the other hand, if (L,~) is an ordered set in which each pair of
elements has its supremum and its infimum then putting x n y = inf(x, y),
xU y = sup(x, y) we get an algebra (L, n, U) which is a lattice.

PRELIMINARIES
21
Definition 1.5.4 For each lattice L = (L, n, U), the ordering 5 from the
preceding lemma is called the ordering determined by L or just the ordering
ofL. We shall identify (L, n, U) with (L, n, u, 5).
Lemma 1.5.5 In each lattice L, n and U are non-decreasing w.r.t. 5, i.e. the
following is true in L:
(Xl 5 X2 1\ YI 5 Y2) -+ (Xl n YI 5 X2 n Y2),
(Xl 5 X2 1\ YI 5 Y2) -+ (Xl U YI 5 X2 U Y2).
Definition 1.5.6 A lattice L is distributive if the identity
X n (y U z) = (x n y) U (x n z)
is true in L.
Lemma 1.5.7 L is distributive iff the identity
xU (y n z) = (x U y) n (x U z)
is true in L; in other words, the two forms ofthe distributivity axiom (distribu-
tivity of n w.r.t. U, distributivity of U w.r.t.n) are equivalent in each lattice.
Remark 1.5.8 (1) If L is linearly ordered (i.e. the ordering 5 of L is linear)
then L is distributive. Note that the linearly ordered lattice [0,1] (real unit
interval with min, max and the standard order of reals) will play a central
role in our investigations.
(2) Note that L is linearly ordered iff the formula (xny = x) V(xny = y)
is true in L. This is a disjunction of two atomic formulas. It is easy to prove
that linearity cannot be expressed by a system of atomic formulas (identities),
i.e. the class of linearly ordered lattices is not a variety. To show this just
observe that the direct product of two linearly ordered lattices need not be
linearly ordered.
Definition 1.5.9 The language of Boolean algebras is the extension of the
language n, u, = of lattices by two constants 0,1 (least and greatest element,
bottom and top) and one unary operation - of complement. An algebra L =
(L, n, U, 0,1, -) is a Boolean algebra if (L, n, U) is a distributive lattice, 0 is
the least element of L, 1its greatest element and - is complementation i.e. in
addition to the identities defining distributive lattices, the following are true
inL:
x n 0 = 0,
xU 1 = 1,
xU -x = 1,
xn -x = O.

22
CHAPTER ONE
Remark 1.5.10 (1) Thus Boolean algebras fonn a variety.
(2) The most obvious example is that of all subsets of a given set (of
1.5.2(4»: Here°is 0(empty subset) 1 is X (the whole set) and, for Y ~ X,
- Y is X - Y (set-theoretical complement).
(3) Lindenbaum algebra of classes offormulas. Let T be a theory over
Bool (or over BooN). For each fonnula cP, let [cp]T be the set of all 'l/J such
that T I- cP == 'l/J. Let L be the set of all [cp]T (classes of equivalent fonnulas)
and define 0 = [O]T, 1 = [I]T, [cp]Tn['l/J]T = [cpA'l/J]T, [cp]TU['l/J]T = [cpV'l/J]T,
-[cp]T = [-'CP]T. These are sound definitions (not depending on the choice of
the representative cP of a class [cp]T) and this (L, n, U, -,0,1) is a Boolean
algebra. This method of algebras of classes of equivalent fonnulas is very
fruitful also in other logics (but then one gets different algebras, not Boolean
ones).
Definition 1.5.11 Let L be a lattice and X
~ L (possibly infinite subset).
The supremum of X is an element a E L which is the least upper bound of
X, i.e. b ::; a for all b E X and whenever b ::; c for all b E X then a ::; c. We
write sup X for the supremum of X. Similarly, a is the infimum of X if it is
the greatest lower bound.
Remark 1.5.12 It is possible that X has no supremum; but if it exists it is
uniquely detennined. Similarly for infimum. A lattice L is complete if each
X
~ L has its sup and inf. Note that the real interval [0,1] is a complete
lattice.
1.6.
ORDERED ABELIAN GROUPS
We already defined semigroups in 1.4.6 and linearly ordered sets in 1.3.14,
1.3.16. We shall investigate structures having both a semigroup operation and
a linear order, related in some way. The structures of ultimate interest in this
section are ordered Abelian groups. We shall present their definition and basic
properties. They will play an important role in the characterization of algebras
of some logics. Everything except results related to the Gurevich-Kokorin
theorem can be found in Fuchs's monograph [54]. We shall give references
concerning the last named theorem later.
Definition 1.6.1 (1) A semigroup (G, *) is Abelian (or commutative) if it sat-
isfies the axiom of commutativity x * y = y * x (for all x, Y).
Remark 1.6.2 It is usual to denote the operation of an Abelian semigroup by
+ (or another symbol resembling addition) rather than *. Thus from now on,
we shall denote Abelian semigroups by (G, +) or (G, +c) and similar.

PRELIMINARIES
23
Definition 1.6.3 (1) An element 0 EGis the zero element of the Abelian
semigroup (G, +) if x + 0 = x for each x E G. (Evidently, each Abelian
semigroup has at most one zero element.)
(2) Let (G, +) be an Abelian semigroup with a zero element 0, let x, y E
G. The element y is the inverse of x if x + y = o. (Evidently, each x has at
most one inverse.)
(3) (G, +) satisfies cancellation if for each x, y, z E G, x + z = Y + z
implies x = y. (Thus the formula ("'Ix, y, z)(x + z = y + z --+ x = y) is true
in (G, +}.)
Definition 1.6.4 (1) A linearly ordered Abelian semigroup is a structure
(G, +, $) such that (G, +) is an Abelian semigroup, (G, $) is a linearly
ordered set and the following monotonicity axiom is true in (G, +, $):
x $ y --+ (x + z $ y + z).
(2) An Abelian group is a structure (G, +, 0, -) (where + is a binary
operation, 0 E G and - is a unary operation) such that (G, +) is an Abelian
semigroup, 0 is its zero element and - is the operation of inverse, i.e. x +
-x = 0 for each x.
(3) A linearly ordered Abelian group (in brief, an o-group) is a structure
(G, +,0, -, $) such that (G, +, 0, -) is an Abelian group and (G, +, $) is a
linearly ordered Abelian semigroup.
Remark 1.6.5 Thus (G, +,0, -, $) is an o-group iff the following axioms
are true in if:
x + (y + z) = (x + y) + z
x+y=y+x
x+Q=x
x + -x =Q
x$yVy$x
(x $ y 1\ Y $ z) --+ x $ z
(x $ y 1\ Y $ x) --+ x = y
x $ y --+ (x + z $ y + z)
The first four axioms are axioms of an Abelian group, the following three are
axioms oflinear preorder, the last is the monotonicity axiom (= is interpreted
absolutely).
Since the zero element 0 and the operation of inverse are definable from
the group addition + we often present an o-group brifely as (G, +, $).

24
CHAPTER ONE
Example 1.6.6 Let Re be the set of all real numbers, + the addition of reals,
* the multiplication of reals. Let N, Z denote the set of natural numbers and
integers respectively. (We assume N
~ Z
~ Re and use +, * also for ad-
dition and multiplication restricted to N or Z.) Let ~ be the standard linear
order on Re (N ,Z).
(i) N = (N, +,~) is an ordered Abelian semigroup with zero element 0
but no non-zero element has an inverse.
(ii) Z = (Z, +,~) and Re = (Re, +,~) are o-groups; Z is a subgroup
of Re (in the obvious sense). These groups are called the additive o-group of
integers and reals respectively.
(iii) (N, *, ~) is a linearly ordered Abelian semigroup whose zero element
is 1; no element different from 1 has an inverse.
Lemma 1.6.7 (1) If G = (G, +,~) is a linearly ordered Abelian semigroup
with cancellation then G satisfies strict monotonicity:
x + z < y + z implies x < y.
(2) Each o-group G = (G, +, 0, -,~) satisfies cancellation.
(3) Each o-group satisfies subtraction: for each x, y there is a unique z
such that x + z = y.
(Very easy proofs)
Definition 1.6.8 The positive cone of an o-group G = (G, +,~) is the set
{x E G/O ~ x}, endowed with the restrictions of +,~.
Lemma 1.6.9 A linearly ordered Abelian semigroup S = (8, +, O,~) is the
positive cone of an o-group iff it satisfies the following:
-
positive subtraction: for each x
~ y there is a unique z such that
x +z = y,
-
positive ordering: x ~ x + y for each x, y.
To verify that the positive cone of an o-group satisfies the two conditions
is immmediate. Conversely, given S satisfying the two conditions one may
construct G exactly as integers are constructed from natural numbers.
Definition 1.6.10 (1) An o-group G is discrete if for each x E G there is a
smallest y E G such that x < y (upper neighbour).
(2) G is dense if for each x, y E G such that x < y there is a z E G such
that x < z and z < y.
Lemma 1.6.11 (1) There is a trivial o-group having just one element.
(2) Each non-trivial o-group is infinite.
(3) Each non-trivial o-group is either discrete or dense.

PRELIMINARIES
25
(Note that if x
=I- 0 then x > 0 or -x > O. Assume the former; then
x,
x + x
x + x + x, ... nx(= x +... + x, n times) are pairwise different
thanks to strict monotonicity.)
Definition 1.6.12 An o-group G = (G, +,0, -,:S:) is Archimedean if for
each pair x, y of positive elements (x > 0, y > 0) there is a natural number
n such that nx ~ y.
Example 1.6.13 (1) The additive groups of reals and of integers are Archi-
medean.
(2) The following group Z x Z (lexicographic product of Z, Z) is not
Archimedean: the domain is Z x Z (ordered pairs); (mI, nl) + (m2, n2) =
(ml + m2, nl + n2), (ml' nd :s: (m2' n2) iff ml < m2 or [ml = m2 and
nl :s: n2]' (Define zero and inverse explicitly.)
Observe that if x = (0,1) and y = (1,0) then for each n, nx = (0, n) <
(1,0) = y.
Theorem 1.6.14 Holder's theorem. An o-group G is Archimedean iff it has
an isomorphic embedding into the additive o-group Re of reals, i.e. there is
a one-one mapping f of G into Re such that, for each x, y E G,
f(x +a y) = f(x) + f(y)
x :S:a y iff f(x) :s: f(y)
(+a, :S:a are the operation and the ordering of G; +, :s: are those of Re).
Note that the two conditions imply the following
f(Oa) = 0,
f( -ax) = -af(x).
This is a non-trivial theorem; for a proof see [54].
Definition 1.6.15 An o-group G is partially embeddable into Re if for each
finite X
~ G there is a finite Y
~ Re and a one-one mapping f of X onto Y
which is a partial isomorphism, i.e. for each x, y, z E G,
z = x +a Y iff f(z) = f(x) + f(y)
x :S:a y iff f(x) :s: f(y)·
Theorem 1.6.16 Each o-group is partially embeddable into Re.
A full proof of this theorem may be found in [86], Lemma 7.3.20. The
theorem is a direct consequence of the following theorem of Gurevich and
Kokorin [70].

26
CHAPTER ONE
Theorem 1.6.17 Let <p(x, ... ,y) be a quantifier-free fonnula in the language
of o-groups. If the fonnula (\:Ix, ... , y)<p(x, ... , y) is true in the o-group Re
then it is true in all o-groups.
Indeed, if Xl, ... ,Xn are evaluated by all the elements aI, ... ,an of X
and <p(XI, ... ,xn) is the conjuction of all fonnulas Xi = x y + XZ , Xi ~ Xy ,
Xi # Xy + x z , -'(Xi ~ x y ), satisfied in G then (:lxi,'" ,xn ) <P(XI, ... ,xn )
is true in G, hence (\:Ixi, .. ,)-,<p is not true in all o-groups, hence not true in
Re and (:lxI, .. .)<p is true in Re. Thus some bl , ... ,bn ERe, satisfy <p in
Re. Put f(ai) = bi .
Remark 1.6.18 We shall need the following easy generalization of 1.6.16:
we may assume that G is an o-group with some additional operations FI , ...
. . . ,Fk definable by open fonnulas from the group operation and ordering,
i.e. there are open fonnulas <Pi such that
z = Fi(x, .. . ,y) == <pdx, ... ,y, z)
is true in G and in Re. The partial isomorphism f may be found in such a
way that it preserves all Fi .
Indeed, the sketched proof of 1.6.17 from the Gurevich-Kokorin theorem
generalizes immediately to the present case (and so does the direct proof of
1.6.16 in [86]).
Example 1.6.19 As a very simple example on may show that the operation of
inverse is preserved, i.e. if x, y E X then y = -aX iff f(y) = - f(x) since
y = -x is equivalent to X + Y = 0 (and z = 0 is equivalent to z + z = z).

CHAPTER TWO
MANY-VALUED PROPOSITIONAL CALCULI
2.1.
CONTINUOUS T-NORMS AND THEIR RESIDUA
Now we are going to start our work with many-valued logic. We have already
made several choices. First, as indicated in the title of the present chapter,
we shall deal with propositional logic. Second, we take the real unit interval
[0,1] for our set of truth values, 1 being absolute truth, 0 absolute falsity.
The natural ordering::; of reals will playa very important role; thus our truth
values are linearly ordered, the ordering is dense and complete (each set of
truth values has its supremum and infimum). In some basic considerations we
shall deal with lattice valued logics too.
The third choice we have made for the main part of the book is truth
functionality: we shall deal with logical calculi in which each connective c
(say, binary) has a truth function Ie : [0, IF -t [0,1] (thus Ie(x, y) E [0,1]
for each x, y E [0,1]) determining, for any pair of formulas cp, 'ljJ, the truth
degree of the compound formula c(cp, 'ljJ) (or cpc'ljJ if you prefer) from the truth
degrees of cp and of'ljJ. (Similarly for connectives of other arity.) This is a very
common and technically useful assumption.
When choosing truth functions of connectives we shall obey very strictly
the principle saying that each many-valued logic must be a generalization
of classical two-valued logic, i.e. for the values 0,1 the truth functions must
behave classically. For example, if we call a connective & conjunction its
truth function * must satisfy, besides other things, the equalities 1 * 1 =
1, 1*0 = 0*1 = 0*0 = O. Similarly for other connectives ofclassical logic.
The last choice we make is: we start our investigation of good candidates
for truth functions of connectives by formulating our requirements on a truth
function for the conjuction. We shall see that a proper choice of the semantics
of a conjunction determines a whole propositional calculus.
Our intuitive understanding of the conjunction is as follows: a large truth
degree of cp&'ljJ should indicate that both the truth degree of cp and the truth
degree of'ljJ is large, without any preference between cp and 'ljJ. Thus it is
natural to assume that the truth function of conjunction is non-decreasing in
both arguments, 1 its unit element and 0 its zero element. These requirements
are met by the following definition:
27

28
CHAPTER TWO
Definition 2.1.1 A t-norm4 is a binary operation * on [0, 1] (i.e. t : [0, IF -+
[0, 1]) satisfying the following conditions:
(i) * is commutative and associative, i.e., for all x, Y, z E [0,1],
Y * x,
x * (y *z),
(ii) * is non-decreasing in both arguments, i.e.
implies
implies
Xl *Y ::; X2 *Y,
X * YI ::; X * Y2,
(iii) 1 * X = X and°* X = °for all X E [0,1].5
*is a continuous t-norm if it is a t-norm and is a continuous mapping of [0, 1F
into [0, 1] (in the usual sense).
Example 2.1.2 The following are our most important examples of continu-
ous t-norms:
(i) Lukasiewicz t-norm: x *Y = max(O, x + Y - 1),
(ii) Godel t-norm: x * Y = min(x, y),
(iii) Product t-norm: x *Y = x . Y (product of reals).
It is elementary to verify conditions (i)-(iii) from 2.1.1; for comments on the
names see Historical Remarks.
Note that the dual notion of a t-conorm (replace (iii) in 2.1.1 by (iii'):
1 * x = 1 and°* x = x) will not play any important role in this book. This
is because conjunction and disjunction do not have any dual relation to the
implication.
2.1.3 Now let us discuss the implication. In two-valued logic, the implication
cp -+ 'l/J is true iff the truth-value of cp is less than or equal to the truth-value
of'l/J. Let us generalize by saying that a large truth-value of cp -+ 'l/J should
indicate that the truth value of cp is not too much larger than the truth value
of'l/J. This leads us to require (besides the principle of classical behaviour
4 See Historical Remarks.
5 It is easy to show that the condition 0 * x = 0 is redundant.

· MANY-VALUED PROPOSITIONAL CALCULI
29
on 0, 1) that a truth function x => y of implication should be non-increasing
in x and non-decreasing in y. Moreover we shall require soundness offuzzy
modus ponens: from (a lower bound of) the truth degree x of <p and (a lower
bound of) the truth degree x => y of (<p -+ 'I.jJ) one should be able to compute
a lower bound of the truth degree y of 'I.jJ. The operation computing the lower
bound for y should clearly be non-decreasing in both arguments (the more
true the antecedent is the more true the succedent is) and similarly we can
argue that 1 is the unit and°the neutral element of the operation in question.
It may be difficult to justify commutativity or associativity; nevertheless it is
useful to take just at-norm *(i.e. a truth function ofconjunction), which gives
IF a :::; x and b :::; x => y, THEN a * b :::; y,
thus in particular, taking a = x and writing z instead of b we get
IF z :::; x => y, THEN x * z :::; y.
On the other hand, we would like to define x => y as large as possible (to
make the rule powerful); thus whenever x * z :::; y, then z is a possible candi-
date for x => y (in the sense that the inference of a * b :::; y from a :::; x and
b :::; x => y would be sound); thus we may require, conversely,
IF x * z :::; Y THEN z :::; x => y,
and hence
x * z :::; y IFF z :::; (x => y).
Then it follows that x => y is the maximal z satisfying x * z :::; y.
Lemma 2.1.4 Let * be a continuous t-norm. Then there is a unique operation
x => y satisfying, for all x, y, z E [0, IJ, the condition (x * z) :::; y iff z :::;
(x => y), namely x=> y = max{z Ix * z :::; y}.
Proof
For each x, y E [0,1], let (x => y) = sup{z I x * z :::; y}. Let,
for a fixed z, f (x) = x * z; f is continuous and non-decreasing and hence
commutes with sups. Thus
x * (x => y) = x * sup{z I x * z :::; y} = sup{x * z Ix * z :::; y} :::; y.
Hence x => y = max{z I x * z :::; y}. Uniqueness is obvious. Note that
it would suffice to assume that * is left continuous. But we shall work with
continuous t-norms.
0
Definition 2.1.5 The operation x => y from 2.1.4 is called the residuum of
the t-norm. (We shall learn more about residuation below.)
Lemma 2.1.6 For each continuous t-norm * and its residuum =>
(i) x :::; y iff (x => y) = 1.

30
(ii) (1 => x) = x
Proof
Obvious.
Lemma 2.1.7 .6
CHAPTER TWO
o
(1) If x S y, then x = y * (y => x).
(2) If x SuS y and u is idempotent then x * y = x.
Proof
(1) Let f(z) = z *y; f is continuous on [0,1], f(O) = 0 and f(1) = y. Thus
for some z with 0 S z S 1, f (z) = x. For the maximal z satisfying
x = z * y we get z = y => x.
(2) First assume u = y. Then x = u * (u => x), x * u = u * (u => x) * u =
u * (u => x) = x. Now let uS y.Then x *y ~ x *u = x and obviously
x * Y S x, thus x * y = x.
o
Theorem 2.1.8 The following operations are residua of the three t-norms of
2.1.2: For x S y, x => y = 1. For x > y,
(i) Lukasiewicz implication: x => y = 1 - x + Y
(ii) Godel implication: x => y = y
(iii) Goguen implication: x => y = y/ x (residuum of product conjunction).
Proof
Assume x > y.
(i) Then x * z = y iff x + z - 1 = y iff z = 1 - x + y; thus 1 - x + Y =
max{z I x * z S y}.
(ii) Then x * z = y iff min(x, z) = y iff z = y.
(iii) Similarly; x.z = y iff z = y/x (since x > 0).
o
6 Cf. [98] 2.6.

MANY-VALUED PROPOSITIONAL CALCULI
31
Definition 2.1.9 In the sequel we shall consider the unit interval [0,1] as an
algebra endowed with the operations min and max, a fixed t-norm * and its
residuum =}, as well as the elements 0,1. This algebra will be denoted by
L (*). We shall use n and U to denote min and max.
Note that the ordering::; is definable: x ::; y iff x n y = x. We show that
min and max are definable from * and =}.
Lemma 2.1.10 7 For each continuous t-norm *, the following identities are
true in L(*):
(i) x n y = x * (x =} y),
(ii) x U Y = ((x =} y) =} y) n ((y =} x) =} x).
Proof
(i) If x ::; y then x
=} y =
1 and x * (x
=} y) = x; if x > y then
x * (x =} y) = y by 2.1.7.
(ii) Assume x ::; y; then (x =} y) = 1 and (x =} y) =} y = (1 =} y) = y.
Furthermore, y ::; (y =} x) =} x since y*(y =} x) ::; x (by residuation);
thus ((x
=} y)
=} y) n ((y
=} x)
=} x) = y. The case y ::; x is
completely symmetric.
o
Remark 2.1.11 Observe that Lukasiewicz implication is continuous but Go-
del and Goguen are not; but it is easy to show that the residuum of each
continuous t-norm is left continuous in the first (antecedent) variable and right
continuous in the second (succedent) variable.
Definition 2.1.12 The residuum =} defines its corresponding unary operation
ofprecomplement (-)x = (x =} 0) (future truth function of negation).
Lemma 2.1.13 The following operations are precomplements of our three
distinguished t-norms:
(i) Lukasiewicz negation (-)x = 1 - x,
(ii) Godel negation (-)0 = 1, (-)x = 0 for x > O.
7 Cf. [98] 2.5.

32
CHAPTER TWO
(iii) The precomplement given by Goguen implication coincides with GOdel
negation.
Proof'
by elementary computation.
o
In the rest of this section we show that the three t-norms above are funda-
mental continuous t-norms, i.e. each continuous t-norm is a combination of
them (in a sense we are going to make precise).
In the sequel, * will denote a continuous t-norm; we shall investigate the
commutative ordered semigroup ([0,1], *, ~). ReGall-that an element r is
idempotent, if x * x = x. Thus both°and 1 are idempotents; a t-norm may
and may not have other idempotents. (For example if * is minimum, then each
element is idempotent.) An element x is nilpotent if there is an n such that
x *... * x (n factors) equal 0. We write x m for x * ... *x with n factors.
Definition 2.1.14 A continuous t-norm is Archimedean if it has no idempo-
tents except°and 1. An Archimedean t-norm is strict if it has no nilpotent
elements except 0; otherwise it is nilpotent.
Remark 2.1.15 Observe that for each continuous t-norm the set E of all its
idempotents is a closed subset of [0,1] and hence its complement is a union
of a set Iopen(E) of countably many non-overlapping open intervals. Let
[a, b] E I(E) iff (a, b) E Iopen(E) (the corresponding closed intervals, con-
tact intervals of E). For [ E I(E) let (*!I) be the restriction of * to [2. The
following theorem characterizes all continuous t-norms.
Theorem 2.1.16 8 If *, E,I(E) are as above, then
(i) for each [ E I (E), (*II) is isomorphic either to the product t-norm (on
[0,1]) or to Lukasiewicz t-norm (on [0,1]).
(ii) If x, Y E [0,1] are such that there is no [ E I(E) with x, y E [, then
x * y = min(x, y).
Proof'
It is easy to see that for each [ E I(E), [ = (a, b), the linear map-
ping f sending [a, b] increasingly to [0, 1] makes the restriction of*to [a, b) an
Archimedean continuous t-norm. Indeed, for a < x < b we get a*x = a and
b*x = x by 2.1.7. If x < y andx, yare not from the same interval [ E I(E)
then there is an a, x
~ a ~ y, a idempotent; thus by 2.1.7, x * y = x. To
8 See [143].

MANY-VALUED PROPOSITIONAL CALCULI
33
prove our theorem it suffices to show that each strict Archimedean continuous
t-norm is isomorphic to the product t-norm and each nilpotent Archimedean
continuous t-norm is isomorphic to Lukasiewicz t-norm. This will be done in
the rest of this section.
0
Until the end of the section we assume * to be an Archimedean continuous
t-norm, i.e. having no idempotents except 0, 1.
Lemma 2.1.17 For each positive x < 1,
lim x m = O.
n-.+oo
If * is nilpotent then each x < 1 is nilpotent. If 1 > x m > 0 then m > n
implies x*m < x m .
Proof
Since the sequence x*n is non-increasing (and bounded by 0 from
below), x = limn x m exists; moreover, x is an idempotent:
x *x = limxm * limx*m =
lim
x*(m+n) = X.
n
m
m,n----too
Thus x = O. Ifx*m = x m puty = x*n,z = x*(m-n)iY = y*z = y*z*k for
all k, hence y = y *0 = O. If 0 < z is nilpotent and 0 < x < z then x is also
nilpotent; if z < x < 1 then for some m > 0, x*m < z (since limm x*m = 0)
thus if z*n = 0 then x*mn = 0 too.
0
Remark 2.1.18 This lemma can be used to show that a continuous t-norm *
is Archimedean iff for each 0 < x, Y < 1 there is an n such that x*n
~ y.
This justifies the name "Archimedean".
Lemma 2.1.19 For each positive x < 1 and each positive n, there is a unique
y such that y*n = x.
Proof
Assume n > 1. The existence follows from continuity of the func-
tion f(y) = y*n (since f(O) = 0 and f(l) = 1). Clearly if y*n = x then
o < x < Y < 1. Now let x < z < y and z*n = y*n; by 2.1.7, z = y * t
for some t, thus y*n = z*n = y*n * t*n = y*n * t*(kn) for each k > 0; but
by 2.1.17, limk t*(kn) = 0 and, by continuity, x = y*n = y*n * 0 = 0, a
contradiction.
0
Definition 2.1.20 For each x E [0, 1], x*~ is the unique y E [0,1] with yn =
x. For a rational number r = !f!:,

34
CHAPTER TWO
m _
m'
*.!!!.
_
*~
Lemma 2.1.21
(1) If n - nr then x
n
-
X
n
.
(2) x*r * x*s = x*(r+s) for all x E [0,1], r, s positive rational.
(3) If x > 0 then
.
*1.
hmx
n = 1.
n
Proof
(1) We may assume m' = km, n' = kn (common denominator). Then
(2) r = IT!
S = !s.. then
n'
n'
1
(3) If x > 0 then the sequence {x* n In} is increasing and its limit is an
idempotent; thus the limit is 1.
o
Lemma 2.1.22
(1) If * is strict, then ([0,1], *) is isomorphic to ([0,1], *rr)
where x *rr Y = x· y (product).
(2) if *is nilpotent, then ([0, 1], *) is isomorphic to ([~, 1]' *cp) where X*cp
y = max(~, x . y) (product cut at ~).
Proof
We construct an isomorphism between dense subsets of the respec-
tive algebras. For each rational number r with 0 :s; r :s; 00, let Cr = (~y =
21r (in the sense of exponentiation of real numbers). Clearly the set C = {cr I
r} is a dense subset of [0,1], Cr <
Cs for r > s and Cr.Cs = cr+s for all
r, s. If * is strict, let d =
~; if it is nilpotent let d be the maximal x such that
x *x = O. Clearly d exists and 0 < d < 1. Now let dr = d*r (exponentiation
in the sense of *, cf. 2.1.20). We have dr *ds = dr+s, for all r, s. If * is strict,
then r > s implies dr < ds for all r, s; if * is nilpotent, then the implication
holds for 2 2: r > s (note that d2 = 0) whereas for r 2: 2, dr = O. Indeed,
assume 00 > r > s > 0, let ml, m2, n be such that r =
~, r2 =
~
1
and let x = d*n; then dr = x*m1,ds = x*m2,0 < X < l,ml > m2 and
hence if x*m2 > 0, then x*ml < x*m2 (by 2.1.17). For * nilpotent observe

MANY-VALUED PROPOSITIONAL CALCULI
35
that dr = 0 iff r 2: 2, i.e. iff Cr :S i. Now it remains to prove that the set
D = (dr I dr > 0) is dense in [0,1]. Let 0 < x < 1. We shall approximate x
from above by elements dr where r has the form ;:.. For typographical rea-
sons, write r(m, n) for :;.; take an no such dr(l,no) 2: x (remembering that
limn dr(l,n) = 1) and let. for n 2: no. rn be r(m, n) for the largest m such
that dr(m,n) 2: x (remembering that for fixed n. limm dr(m,n) = 0). Observe
dr(m+l,n) = dr(m,n) * dr(l,n) < x :S drn . Going to the limit and recalling
again
li~ dr(l,n) = 1
we get limn (drn * dr(l,n») = limn drn = x.
Lemma 2.1.23 The ordered semigroup ([i, 1], *cp) is isomorphic to
([0,1], *L) where *L is Lukasiewicz t-norm x *L Y = max(O, x + y - 1).
o
Proof
For x E [0,1] let f(x) = 22(x-l); then f maps [0.1] increasingly to
[i, 1] and induces on [0,1] Lukasiewicz t-norm:
1
x *Y = f-l(J(X) f(y)) = _log(22(x-l) . 22(Y-l») + 1 = x + y - 1
.
2
if x + y - 1 2: 0, otherwise x * y = O.
2.2. THE BASIC MANY-VALUED LOGIC
o
If we fix a continuous t-norm * we fix a propositional calculus (whose set of
truth values is [0,1j): * is taken for the truth function of the (strong) conjunc-
tion &. the residuum =? of * becomes the truth function of the implication. In
more details, we have the following
Definition 2.2.1 The propositional calculus PC(*) given by * has proposi-
tional variables Pl,P2, .... connectives &. -t and the truth constant°for 0.
Formulas are defined in the obvious way: each propositional variable is a for-
mula;°is a formula; if c.p, 'ljJ are formulas. then c.p&'ljJ, c.p -t 'ljJ are formulas.
Further connectives are defined as follows:
c.p 1\ 'ljJ
is
c.p V 'ljJ
is
-'c.p
is
c.p = 'ljJ
is
c.p&(c.p -t 'ljJ),
((c.p -t 'ljJ) -t 'ljJ) 1\ (('ljJ -t c.p) -t c.p),
c.p -t 0,
(c.p -t 'ljJ)&('ljJ -t c.p).

36
CHAPTER TWO
An evaluation of propositional variables is a mapping e assigning to each
propositional variable p its truth value e(p) E [0,1]. This extends uniquely to
the evaluation of all formulas as follows:
e(O) = 0,
e(cp --t 'ljJ) = (e(cp) ::::} e('ljJ)),
e(cp&'ljJ) = (e(cp) * e('ljJ)).
Lemma 2.2.2 For any formulas cp, 'ljJ
e(cpl\'ljJ)
e(cpV'ljJ)
=
min(e(cp), e('ljJ)),
max(e(cp), e('ljJ)),
Proof
This follows immediately from 2.1.10.
o
Definition 2.2.3 A formula cp is a I-tautology of PC(*) if e(cp) = 1 for each
evaluation e.
Thus a I-tautology is a formula that is absolutely true under any evalu-
ation. In the present section we are going to choose some formulas that are
I-tautologies of every PC(*) (for any continuous t-norm *) for our axioms
and develop a logic that is a common base of all the logics PC(*). The first
goal will be to prove several important formulas in our basic logic. The logic
is sound, thus each provable formula will be a I-tautology of each PC(*)
and thus also a tautology of the classical two-valued logic. Needless to say,
for different t-norms tl, t2, the sets ofl-tautologies of PC(td and of PC(t2)
may well be different sets.
Definition 2.2.4 The following formulas are axioms of the basic logic BL:
(AI) (cp --+ 'ljJ) --t (('ljJ --t X) --+ (cp --+ X))
(A2) (cp&'ljJ) --t cp
(A3) (cp&'ljJ) --t ('ljJ&cp)
(A4) (cp&(cp --+ 'ljJ)) --t ('ljJ&('ljJ --+ cp))
(A5a) (cp --+ ('ljJ --t X)) --t ((cp&'ljJ) --+ X)
(A5b) ((cp&'ljJ) --t X) --t (cp --+ ('ljJ --t X))
(A6) ((cp --t 'ljJ) --t X) --t ((('ljJ --t cp) --+ X) --t X)

(A7) 0 -+ <p
MANY-VALUED PROPOSITIONAL CALCULI
37
The deduction rule of BL is modus ponens. Given this, the notions of a proof
and of a provable formula in BL are defined in the obvious way (cf. 1.2.6).
Remark 2.2.5 Let us comment on these axioms. (AI) is transitivity of impli-
cation. (A2) says that &-conjunction implies its first element and (A3) says
that &-conjunction is commutative. (A4) expresses the commutativity of 1\-
conjunction. (AS) expresses residuation. (A6) is a variant of the proof by
cases: if X follows from <p -+ "l/J then if X also follows from "l/J -+ <p then X.
Finally (A7) says that 0 implies everything (ex falso quodlibet).9
Lemma 2.2.6 All axioms of BL are I-tautologies in each PC(*). If <p and
<P -+ "l/J are I-tautologies of PC(*) then "l/J is also a I-tautology of PC(*).
Consequently, each formula provable in BL is a I-tautology of each PC(*).
Proof
(A2}-(A4) and (A7) are obviously I-tautologies. To verify (AI) we
have to prove
1 ~ (x:::} y) :::} ((y :::} z) :::} (x:::} z)),
Le., using residuation three times
(x:::} y) * (y:::} z) *x:S z;
but this follows from the fact that x*(x :::} y) = min(x, y) ~ y and similarly
y * (y :::} z) :S z. (AS) expresses residuation -
the following are equivalent.
t ~ x :::} (y :::} z),
t*x~ (y:::}z),
t * x * y ~ z,
t ~ (x * y) :::} z.
To verify (A6) observe that [x :::} y = 1 or (y :::} x) = 1] and that 1 :::} y = y
(since z ~ 1 :::} Y iff z :S y). For modus ponens observe that if x = 1 and
x :::} y = 1 then necessarily y = 1 (since 1 :::} y = y as above).
0
We shall now verify provability of several groups of formulas in BL. Note
that the connectives 1\ V -, == are defined as above.
Lemma 2.2.7 10 BL proves the following properties of implication:
9 Our BL is stronger than Hoble's monoidallogic [98].
10 Cf. [98] 3.1.

38
CHAPTER TWO
(1) ep -+ (1/; -+ ep)
(2) (ep -+ (1/; -+ X)) -+ {1/; -+ (ep -+ X))
(3) ep -+ ep
Proof
(1) By (A2), f- (ep&1/;) -+ ep;
by (A5), f- ((ep&1/;) -+ ep) -+ (ep -+ (1/; -+ ep)). Thus f- ep -+ (1/; -+ ep) by
modus ponens.
(2) By (AI), f- ((1/;&ep) -+ (ep&1/;)) -+ ((ep&1/;) -+ X) -+ (1/;&ep) -+ X))
thus f- ((ep&1jJ) -+ X) -+ (1/;&ep) -+ X). Applying (A5) twice we get the
following provable chain of implications.
f- [ep -+ (1/; -+ X)] -+ [(ep&1/;) -+ X] -+ [(1/;&ep) -+ X] -+ [1/; -+ (ep -+ X)]·
(3) Applying (2) to (1) we get f- 1/; -+ (ep -+ ep); take any axiom for 1/; and
apply modus ponens.
0
Lemma 2.2.8 BL proves the following properties of strong conjunction:
(4) (cp& (ep -+ 1/;)) -+ 1/;
(5) cp -+ (1/; -+ (ep&1/;))
(6) (cp -+ 1/;) -+ ((ep&X) -+ (1/;&X))
(7) ((CPl -+ 1/;1)&(cp2 -+ 1/;2)) -+ ((CPl&CP2) -+ (1/;1&1/;2))
(8) (ep&1/;)&X -+ cp&(1/;&X), (cp&(1/;&X)) -+ ((ep&1/;)&X)·
Proof
(4) BL f- (cp -+ 1/;) -+ (cp -+ 1/;) by (3), hence
BL f- cp -+ ((cp -+ 1/;) -+ 1/;) by(2) and
BL f- (cp& (cp -+ 1/;)) -+ 1/; by (A5).
(5) BL f- (cp&1/;) -+ (cp&1/;) by (3), thus
BL f- ep -+ (1/; -+ (cp&1/;)) by (A5).
(6) BL f- (cp&(ep -+ 1/;)) -+ 1/; and
BL f- 1jJ -+ (X -+ (1/;&X)), thus
BL f- (cp&(cp -+ 1/;)) -+ (X -+ (1/;&X)) by (AI). Thus
BL f- cp -+ ((ep -+ 1/;) -+ (X -+ (1/;&X))),
BL f- cp -+ (X -+ ((ep -+ 1/;) -+ (1/;&X))),
BL f- (cp&X) -+ ((cp -+ 1/;) -+ (1/;&X)),
BL f- (cp -+ 1/;) -+ ((cp&X) -+ (1/;&X))·

MANY-VALUED PROPOSITIONAL CALCULI
39
(7) BL f- (<PI -+ 'fiJI) -+ ((<PI&<p2) -+ ('liJI&<P2)),
BL f- ((<PI -+ 'ljJd&(<P2 -+ 'ljJ2)) -+ ((<PI &<p2) -+ ('ljJI&<p2))&(<P2 -+'ljJ2),
BL f- [((<PI&<p2) -+ ('ljJI&<P2))&(<P2 -+ 'ljJ2)J -+
[( (<PI &<p2) -+ ('ljJI&<p2))&(('ljJI &<p2) -+ ('ljJI&'ljJ2))J,
BL f- [((<PI&<p2) -+ ('ljJI&<P2))&(('ljJI&<P2) -+ ('ljJI&'ljJ2))] -+ [(<PI&<p2)-+
-+('ljJI&'ljJ2)].
Thus BL f- (<PI -+ 'ljJd -+ ((<P2 -+ 'ljJ2) -+ ((<PI&<p2) -+ ('ljJI&'ljJ2))).
(8) For each 8, the following chain of implications is provable in BL by
repeated use of (AS), (AI):
[((<p&'ljJ)&X) -+ 8] -+ [(<p&'ljJ) -+ (X -+ 8)J
-+ [(<p -+ ('ljJ -+ (X -+ 8)))] -+
[(<p -+ (('ljJ&X) -+ 8)J -+ [(<p&('ljJ&X)) -+ 8J
This elegant proof is from [2].
Lemma 2.2.9 BL proves the following properties of min-conjunction:
(9) (<p 1\ 'ljJ) -+ <P, (<p 1\ 'ljJ) -+ 'ljJ, (<p&'ljJ) -+ (<p 1\ 'ljJ)
(10) (<p -+ 'ljJ) -+ (<p -+ (<p 1\ 'ljJ))
(11) (<pI\'ljJ) -+ ('ljJI\<p)
(12) ((<p -+ 'ljJ) 1\ (<p -+ X)) -+ (<p -+ ('ljJ 1\ X))
Proof'
(9) BL f- (<p 1\ 'ljJ) -+ <P by the definition of 1\ and by (A2);
BL f- (<p 1\ 'ljJ) -+ 'ljJ is just (4).
BL f- (<p&'ljJ) -+ (<p&(<p -+ 'ljJ)) follows by (1) and (6).
(10) BL f- (<p -+ 'ljJ) -+ (<p -+ (<p&(<p -+ 'ljJ))) follows from
BL f- (<p&(<p -+ 'ljJ)) -+ (<p&(<p -+ 'ljJ)) using (AS) and (2).
o
(11) This is just (A4).
(12) Observe the following:
BL f- ('ljJ -+ X) -+ ('ljJ -+ ('ljJ 1\ X)) and
BL f- ('ljJ -+ ('ljJ 1\ X)) -+ [((<p -+ 'ljJ) 1\ (<p -+ X)) -+ (<p -+ ('ljJ 1\ X))J,
thus
BL f- ('ljJ -+ X) -+ (12); similarly,
BL f- (X -+ 'ljJ) -+ (12), therefore
BL f- (12) using (the first time) the axiom (A6).

40
CHAPTER TWO
o
Lemma 2.2.10 BL proves the following properties of max-disjunction:
(13) <p -+ (<p V 'l/J), 'l/J -+ (<p V 'l/J), (<p V 'l/J) -+ ('l/J V <p),
(14) (<p -+ 'l/J) -+ ((<p V 'l/J) -+ 'l/J),
(15) (<p -+ 'l/J) V ('l/J -+ <p),
(16) ((<p -+ X) 1\ ('l/J -+ X)) -+ ((<p V 'l/J) -+ X)·
Proof"
(13) BL I- (<p V 'l/J) -+ ('l/J V <p) is obvious from the definition of V and from
(11). To prove <p -+ (<p V 'l/J), observe BL I- <p -+ ((<p -+ 'l/J) -+ 'l/J) and
BL I- <p -+ (('l/J -+ <p) -+ <p); thus
BL I- <p -+ (<p V 'l/J) by (12).
(14) By the definition of V,
BL I- (<p V 'l/J) -+ ((<p -+ 'l/J) -+ 'l/J); apply (2).
(15) We have BL I- (<p -+ 'l/J) -+ (15),
BL I- ('l/J -+ <p) -+ (15), thus
BL I- (15) using (A6).
(16) Observe: BL I- (<p -+ 'l/J) -+ ((<p V 'l/J) -+ 'l/J) and
((<p V 'l/J) -+ 'l/J) -+ [((<p -+ X) 1\ ('l/J -+ X)) -+ ((<p V'l/J) -+ X)], thus
BL I- (<p -+ X) -+ (16); similarly, BL I- ('l/J -+ <p) -+ (16) and hence
BL I- (16) by (A6).
o
Corollary 2.2.11 BL proves
(12') ((<p -+ 'l/J)&(<p -+ X)) -+ (<p -+ ('l/J 1\ X)),
(16') ((<p -+ X)&('l/J -+ X)) -+ ((<p V 'l/J) -+ X)·
Lemma 2.2.12 BL proves the following properties of negation.
(17) <p -+ (--'<p -+ 'l/J), in particular, <p -+ --'--'<p and (<p&--'<p) -+ o.
(18) (<p -+ ('l/J&--,'l/J)) -+ --,<p
(18') (<p -+ 'l/J) -+ (--,'l/J -+ --'<p)

MANY-VALUED PROPOSITIONAL CALCULI
41
Proof
(17) BL f- cp --+ ((cp --+ 0) --+ 0) and BL f- 0 --+ 1./;, thus
BL f- ((cp --+ 0) --+ 0) --+ ((cp --+ 0) --+ 1./;), hence
BL f- cp --+ ((cp --+ 0) --+ 1./;).
Thus BL f- cp --+ (-.cp --+ 0), which gives BL f- cp --+ -.-.cp and BL
f- (cp&-.cp) --+ 0using (AS).
(18) BL f- (1./;&(1./; --+ 0)) --+ 0, thus
BL f- (cp --+ (1./;&-.1./J)) --+ (cp --+ 0).
(18') Evidently, BL proves (cp --+ 1./;) --+ ((1./; --+ 0) --+ (cp --+ 0)). (18")
follows from (18') and (17).
o
Definition 2.2.13 I stands for 0 --+ O.
Lemma 2.2.14 BL proves the following:
(19) 1,
(20) 'P --+ (l&cp),
(20') (I --+ cp) --+ cpo
Proof
(19) Trivial by (3).
(20) BL f- I --+ (cp --+ (l&cp)); thus BL f- (20) by (19).
(20') BLf- I --+ ((I --+ cp) --+ cp); use (19).
o
Lemma 2.2.15 BL proves the following additional properties of 1\, V:
(21) (cp 1\ (1./; 1\ X)) --+ ((cp 1\ 1./;) 1\ X)
((cp 1\ 1./;) 1\ X) --+ (cp 1\ (1./; 1\ X))
(associativity of 1\),
(22) analogous associativity for V,

42
(23) <p ~ <p 1\ (<p V 'ljJ)
(<p V (<p 1\ 'ljJ)) ~ <p
CHAPTER TWO
Proof
(21) BL f- (<pI\('ljJI\X)) ~ / for/being <p, 'ljJ1\X, 'ljJ, X, (<pI\'ljJ), ((<pI\'ljJ)I\X)
using (12').
Similarly for the other direction and dually for (22) using (16').
(23): BL f- (<p 1\ (<p 1\ 'ljJ)by (13), thus
BL f- <p ~ (<p 1\ (<p V 'ljJ)) by (12).
o
Now we prove some properties of equivalence:
Lemma 2.2.16 BL proves
(24) <p == <p,
(<p == 'ljJ) ~ ('ljJ == <p),
((<p == 'ljJ)&('ljJ == X)) ~ (<p == X),
(25) (<p == 'ljJ) ~ (<p ~ 'ljJ),
(<p == 'ljJ) ~ ('ljJ ~ <p)
(26) (<p == 'ljJ) ~ ((<p&X) == ('ljJ&X)),
(27) (<p == 'ljJ) ~ ((<p ~ X) == ('ljJ ~ X)),
(28) (<p == 'ljJ) ~ ((X ~ <p) == (X ~ 'ljJ)),
(29) (<p == 'ljJ) ~ ((<p ~ 'ljJ) 1\ ('ljJ ~ <p)).
Proof
(24)-(28) are immediate consequences of the preceding provabili-
ties. For example to prove (26) we reason as follows:
BL f- (<p == 'ljJ) ~ ((<p ~ 'ljJ)&('ljJ ~ <p)),
BL f- ((<p ~ 'ljJ)&('ljJ ~ <p)) ~ (((<p&X) ~ ('ljJ&X))&(('ljJ&X) ~ ('ljJ&X)))
(using (6) and (7»; thus we get (26) applying transitivity brimplicfttion. To
prove (29) observe that the implication ~ follows from (9).
Conversely, BL f- ((<p ~ 'ljJ) 1\ ('ljJ ~ <p)) ~ ('ljJ ~ <p), thus
BL f- (<p ~ 'ljJ) ~ (((<p ~ 'ljJ) 1\ ('ljJ ~ <p)) ~ ('ljJ == <p)),
similarly BL f- ('ljJ ~ <p) ~ (((<p ~ 'ljJ) 1\ ('ljJ ~ <p)) ~ ('ljJ == <p)),
thus BL (29) by axiom (A6).
0
Definition 2.2.17 A theory over BL is a set of formulas. A proof in a theory
T is a sequence <Pl, ... , <Pn of formulas whose each member is either an ax-
iom of BL or a member ofT (special axiom) or follows from some preceding
members of the sequence using the deduction rule modus ponens.

MANY-VALUED PROPOSITIONAL CALCULI
43
T f- VJ means that VJ is provable in T, i.e. is the last member of of a proof
in T. The following is a variant of the deduction theorem:
Theorem 2.2.18 Let T be a theory and let VJ, 'ljJ be formulas. T U {VJ} f- 'ljJ
iff there is an n such that T f- VJn -t 'ljJ (where again VJn is VJ& ... &VJ, n
factors).
Proof'
First note that we may impose any bracketting on VJ& ... &VJ thanks
to commutativity and associativity of & (and properties of -t and == ). Thus if
n> 1 and T f- VJn -t 'ljJ then T f- (VJ&VJn-l) -t 'ljJ, T f- VJ -t (VJn- 1 -t'ljJ),
hence T U {VJ} f- VJn- 1 -t 'ljJ. Replacing this we get T U {VJ} f- VJ -t 'ljJ and
hence T U {VJ} f- 'ljJ.
Conversely assume T U {VJ} f- 'ljJ and let 11, ... ,'k be a corresponding
T U {VJ}-proof of 'ljJ. We prove by induction that, for each j = 1, ... ,k, there
is an nj such that T
f- VJnj -t Ij. This is clear for Ij being an axiom of
BL or of T U {VJ}. If Ij results by modus ponens from previous members
Ii, hi -t ,j) then, by the induction hypothesis we assume T f- VJn -t Ii,
T f- VJm -t hi -t ,j), thus by (7), T f- (VJn&VJm) -t hi&hi -t ,j)), thus
T f- VJn+m -t Ij (cf. (4)). This completes the proof.
0
Remark 2.2.19 Note that in general we can not prove the deduction theorem
in the form 1.2.10 valid for classical logic; we shall see below that only one
of our logics (G6del logic) will have the classical deduction theorem. Also
note that the formula VJn -t 'ljJ may be replaced by VJ -t (VJ -t ... -t (VJ -t
'ljJ) ...) (n copies of VJ).
Definition 2.2.20 A theory T is contradictory (or inconsistent) if T
f- 0;
otherwise it is consistent.
Lemma 2.2.21 T is inconsistent iff T f- VJ for each VJ.
Proof'
If T proves each formula, then it proves O. Conversely, if T f- 0 then
T f- VJ since T f- 0 -t VJ (axiom A7).
0
Lemma 2.2.22 If T U {VJ} is inconsistent, then for some n, T f- -,(VJn).
Proof'
If T U {VJ} f- 0, then, by the deduction theorem, there is an n such
that T f- VJn -t O.
0
Lemma 2.2.23 11 BL proves the following distributive laws:
11 Cf. [98] 2.6.

44
CHAPTER TWO
(30) ep&('IjJ v X) == (ep&'IjJ) v (ep&X)
ep&('IjJ 1\ X) == (ep&'IjJ) 1\ (ep&X)
(31) (ep 1\ ('IjJ v X)) == ((ep 1\ 'IjJ) V (ep 1\ X))
(ep v ('IjJ 1\ X)) == ((ep V 'IjJ) 1\ (ep v X))
Proof
(30) (a) Let us first prove the first fonnula.
BL f- ((ep&X) V ('IjJ&X)) -+ ((ep V'IjJ)&X) using (13) and (16) in 2.2.10;
we prove the converse implication. This means to prove
BL f- ((ep V 'IjJ)&x) -+ [((ep&x) -+ ('IjJ&x)) -+ ('IjJ&x)]
and the same fonnula with ep, 'IjJ in [...] exchanged (by the definition of
V). After obvious transfonnations we have to prove
BL f- ((ep&X) -+ ('IjJ&X)) -+ [((ep V 'IjJ)&X) -+ ('IjJ&X)]·
i.e. BL f- (ep -+ (X -+ ('IjJ&X))) -+ [(ep V 'IjJ) -+ (X -+ ('IjJ&X))];
but this follows from BL f- 'IjJ -+ (X -+ ('IjJ&X)) and (16') in 2.2.10.
(b) Now let us prove the second fonnula.
f- (ep 1\ 'IjJ)&X -+ ((ep&X) 1\ ('IjJ&X)) by (9) and (12) in 2.2.8; we prove
the converse,
i.e. f- ((ep&X) 1\ ('ljJ&X)) -+ ((ep 1\ 'IjJ)&X) , i.e.
f- [(ep&X)&((ep&X) -+ 'ljJ&X)] -+ ((ep 1\ 'ljJ)&x),or
f- ((ep&X) -+ ('ljJ&X)) -+ [(ep&X) -+ ((ep 1\ 'IjJ)&X)]·
Denote the last fonnula by (*); we prove
f- (ep -+ 'ljJ) -+ (*) and f- ('IjJ -+ ep) -+ (*) (this suffices by axiom (A6».
BL f- (ep -+ 'IjJ) -+ (ep -+ (ep 1\ 'ljJ)) by the definition of 1\,
BL f- (ep -+ (ep 1\ 'IjJ)) -+ ((ep&X) -+ ((ep 1\ 'IjJ)&X)) (by 2.2.8 (6», thus
BL f- (ep -+ 'IjJ) -+ (anything -+ ((ep&X) -+ ((ep 1\ 'ljJ)&X))); on the
other hand,
BL f- ('IjJ -+ ep) -+ (('ljJ&X) -+ ((ep 1\ 'IjJ)&X)) ,thus
BL f- ('IjJ -+ ep) -+ ([('ljJ&X) -+ ('ljJ&X)] -+ [('ljJ&X) -+ ((ep 1\ 'IjJ)&X)]·)
Using (A6) we get (*). (30) is proved.
(31) Since BL f- (ep 1\ 'ljJ) -+ (ep 1\ ('IjJ V X)) and similarly (ep 1\ X) -+
(ep 1\ ('IjJ V X)) we get BL f- ((ep 1\ 'ljJ) V (ep 1\ X)) -+ (ep 1\ ('ljJ V X)). We
prove the converse implication by applying the definition of 1\ and the
distributing of & with respect to V (see (30»:
BL f- (('IjJ V X) 1\ ep) == [('ljJ V X)&(('ljJ V X) -+ ep)] == (('IjJ&(('ljJ V X) -+
ep)) 1\ (X&(('IjJ V X) -+ ep))];
in BL, the last fonnula implies ['ljJ&(X -+ ep)] 1\ [X&(X -+ ep)], i.e.

MANY-VALUED PROPOSITIONAL CALCULI
45
('ljJ 1\ <p) 1\ (X 1\ <p).
It remains to prove
BL f- ((<p V 'ljJ) 1\ (<p V X)) == (<p V ('ljJ 1\ X)).
But this can be obtained from the dual distributivity as is usual in lattice
theory: the following chain of equivalences is provable:
[(<pV'ljJ)I\(<pVX)] == [((<pV'ljJ)I\<p)V((<pV'ljJ)I\X)] == [<pV((<pVX)I\X)] ==
[<p V (<p 1\ X) V ('ljJ 1\ X)] == [<p V ('ljJ 1\ X)]·
o
Lemma 2.2.24 BL proves:
(32) (<p V 'ljJ)&(<p V 'ljJ) -+ ((<p&<p) V ('ljJ&'ljJ))
(<p 1\ 'ljJ)&(<p 1\ 'ljJ) -+ ((<p&<p) 1\ ('ljJ&'ljJ))
(33) (<p -+ 'ljJ)n V ('ljJ -+ <p)n, for each n.
Proof
(32) We write again <p2 for<p&<p etc.; we have to prove (<pV'ljJ)2 == (<p2 V'ljJ2).
Now, by (30), f- (<p V 'ljJ)2 == (<p2 V 'ljJ2 V <p&'ljJ), thus it suffices to prove
f- (<p&'ljJ) -+ (<p2 V 'ljJ2) to get (<p2 V 'ljJ2 V <p&'ljJ) == <p2 V 'ljJ2. Prove
by cases (<p -+ 'ljJ), ('ljJ -+ <p): f-
(<p -+ 'ljJ) -+ (<p&'ljJ -+ 'ljJ2), thus
f- (<p -+ 'ljJ) -+ (<p&'ljJ -+ <p2 V'ljJ2), and dually, f- (<p -+ 'ljJ) -+ (<p&'ljJ -+
<p2 V 'ljJ2), which gives the result.
(33) First show that (15) and (5) give f- [(<p -+ 'ljJ) V ('ljJ -+ <p)f. By (32)
we get (<p -+ 'ljJ)2 V ('ljJ -+ <p)2. Iterate and use ((<p -+ 'ljJ)n+l V ('ljJ -+
<p)n+l) -+ ((<p -+ 'ljJ)n V ('ljJ -+ <p)n), which comes easily from f-
<pn+l -+ <pn and monotonicity of V (see (22)).
o
To close this section we show that BL proves de Morgan laws.
Theorem 2.2.25
(34) (-'<p 1\ -,'ljJ) == -'(<p V 'ljJ),
(35) (-'<p V -,'ljJ) == -'(<p 1\ 'ljJ).

46
CHAPTER TWO
Proof
(34) Since BL I- (cp /\ 'l/J) -+ cp we have BL I- -'cp -+ -,(cp /\ 'l/J).
Similarly, BL I- -,'l/J -+ -,(cp /\ 'l/J); thus BL I- (-,cp V -''l/J) -+ -,(cp /\ 'l/J)
(see (16')).
Conversely, BL I- (cp -+ 'l/J) -+ (cp -+ (cp /\ 'l/J)) (see (10)), thus
BL I- (cp -+ 'l/J) -+ (-,(cp /\ 'l/J) -+ -,cp) and BL I- (cp -+ 'l/J) -+ (-,(cp /\
'l/J) -+ (-,cp V -,'l/J)).
Similarly, BL I- ('ljJ -+ cp) -+ (-,(cp /\ 'ljJ) -+ (-,cp V -,'l/J)), thus applying
axiom (A6) we get BL I- -,(cp /\ 'ljJ) -+ (-,cp V -''l/J).
(35) BL f-- cp -+ (cp V'ljJ), thus BL f-- -, (cp V 'ljJ) -+ -'cp; analogously,
BL f-- -,(cp V 'l/J) -+ -,'ljJ and hence BL f-- -,(cp V 'l/J) -+ (-,cp /\ -,'l/J).
Conversely, we show BL f-- ((-,cp /\ -''l/J)&(cp V'l/J)) -+ 0, which gives
BL I- (-,cp /\ -,'l/J) -+ -,(cp V'ljJ). First work with the assumption (cp -+ 'ljJ).
BL f-- (cp -+ 'ljJ) -+ ((cp V 'ljJ) == 'l/J) (see (14)), analogously using BL I-
(cp -+ 'ljJ) -+ (-,'ljJ -+ -,cp) we get BL I- (cp -+ 'l/J) -+ ((-'cp /\ -,'l/J) == -,'ljJ)
(see (10)), thus
BL f-- (cp -+ 'ljJ) -+ (("cp /\ -,'ljJ)&(cp V 'ljJ) == ('ljJ&-,'ljJ)) and 'ljJ&-,'ljJ may
be replaced by O. Analogously we get
BL I- ('l/J -+ cp) -+ ((-,cp /\ -''ljJ)&(cp V 'ljJ) == (cp&-,cp)), thus using (A6)
we get
BL f-- (-,cp /\ -,'l/J)&(cp V 'ljJ) -+ 0, which completes the proof.
0
2.3.
RESIDUATED LATTICES; A COMPLETENESS THEOREM
2.3.1 In the two preceding sections, we studied continuous t-norms as can-
didates for truth functions of the conjunction, corresponding residua as truth
functions of the implication and showed definability of other truth functions
(the corresponding negation, minimum and maximum). For each fixed con-
tinuous t-norm * we get a corresponding propositional calculus PC(*); we
formulated logical axioms that are I-tautologies in each PC(*), defined prov-
ability and showed many formulas to be provable in the basic logic BL. The
logic is sound: each provable formula is a I-tautology of each PC(*).
Now we are in the proper place to start an algebraization of BL. We shall
introduce a variety of algebras called BL-algebras and show that
(i) for each t-norm *, the unit interval [0, 1] endowed with the truth functions
of connectives is a linearly ordered BL-algebra,
(ii) BL is sound even for each linearly ordered BL-algebra, i.e. each provable
formula is a I-tautology over each such lattice (in an obvious meaning
explicitly stated below),

MANY-VALUED PROPOSITIONAL CALCULI
47
(iii) the set of all formulas, factorized by provable equivalence (i.e. the set
of classes of provably equivalent formulas), endowed with operations
given by connectives, is a BL-algebra (not linearly ordered), and
(iv) a formula which is a tautology over all linearly ordered BL-algebras is
a tautology over all BL-algebras (linearly ordered or not).
This will give us the desired completeness theorem. BL-algebras will be
defined as particular residuated lattices.
Granted this, the theorem 2.3.16 on subdirect product will immediately give
us a completeness theorem, stating that the implication in (ii) can be reverted.
This is the task of the present section. In the next three sections we shall
investigate calculi based on three particular choices of at-norm (cf. 2.1.5)
and exhibit completeness theorems for them.
Definition 2.3.2 A residuated lattice12 is an algebra
(L, n, U, *,::::}, 0,1)
with four binary operations and two constants such that
(i) (L, n, U, 0,1) is a lattice with the largest element 1 and the least element
°(with respect to the lattice ordering :S),
(ii) (L, *, 1) is a commutative semigroup with the unit element 1, i.e. * is
commutative, associative, 1 * x = x for all x.
(iii) * and ::::} form an adjoint pair, i.e.
(1) z :S (x ::::} y) iff x * z :S y for all x, y, z.
Definition 2.3.3 A residuated lattice (L, n, U, *,::::}, 0,1) is a BL-algebra iff
the following two identities hold for all x, y E L:
(2)xny=x*(x::::}y)
(3) (x ::::} y) U (y ::::} x) = 1.
(The last axiom will be called the axiom of prelinearity from reasons that
become apparent later.)
Lemma 2.3.4 In each BL-algebra, the following hold in each x, y, z:
12 See [34].

48
CHAPTER TWO
(4) x * (x ~ y) ~ y and x ~ (y ~ (x * y));
(5) x ~ y implies x *z ~ y * z, (z ~ x) ~ (z ~ y), (y ~ z) ~ (x ~ z);
(6) x ~ y iff x ~ y = 1;
(7) (x U y) * z = (x * z) U (y *z);
(8) x U y = ((x ~ y) ~ y) n ((y ~ x) ~ x)
Proof"
(4) x * (x ~ y) ~ y follows from (x ~ y) ~ (x ~ y) by the adjointness
condition (iii) in 2.3.2; similarly x ~ y ~ (x*y) follows from (x*y) ~
(x * y).
(5) Assume x
~ y; by (4), Y ~ (z ~ y * z), thus x
~ (z ~ y * z) and
x * z ~ y * z by adjointness.
Furthermore, assuming x
~ y we have z * (z ~ x)
~ x
~ y, thus
(z ~ x) ~ (z ~ y), and also x * (y ~ z) ~ y * (y ~ z) ~ z, thus
(y ~ z) ~ (x ~ z).
(6) x ~ y iff 1 * x ~ y iff! ~ (x ~ y) iff! = (x ~ y).
(7) Since x ~ xUywegetx*z ~ (xUy)*z. Similarly, y*z ~ (xUy)*z;
thus (x*z)U(y*z) ~ (xUY)*Z. Conversely, X*Z ~ (x*z)U(y*z), thus
x ~ (z ~ [(x*z)U(y*z)]); similarly, y ~ (z ~ [(x*z)U(y*z)]), hence
(xUy) ~ z ~ [(x*z)U(y*z)] and therefore (xUy)*Z ~ (x*Z)U(y*z).
(8) [((x ~ y) ~ y) n ((y ~ x) ~ x)] =
= [.. ·]*((x ~ y)U(y ~ x)) = ([···]*(x ~ y))U([·· .]*(y ~ x)) ~
~ [((x ~ y) ~ y) *(x ~ y)] U [((y ~ x)] ~ x) *(y ~ x)] ~ y U x =
xUy.
On the other hand,
(x ~ y) * (x U y) = (x * (x ~ y)) U (y * (x ~ y))) ~ y U Y = y,
thus x U y ~ (x ~ y) ~ y,
similarly x U y ~ (y ~ x) ~ x,
and hence x U y ~ ((x ~ y) ~ y) n ((y ~ x) ~ x).
D
Definition 2.3.5 A residuated lattice (L, n, u, *,~, 0,1) is linearly ordered
if its lattice ordering is linear, i.e. for each pair x, y
x n y = x or x n y = y (equivalently, xU y = x or xU y = y).

MANY-VALUED PROPOSITIONAL CALCULI
49
Note that the class of linearly ordered residuated lattices is not a variety
(not closed under direct products).
Lemma 2.3.6 A linearly ordered residuated lattice is a BL-algebra iff the
identity x n y = x * (x ::::} y) is true in it.
Proof
Just check that the proof of 2.3.3 (2) (for t-norms) in 2.1.10 works.
Prelinearity is evident.
0
Remark 2.3.7
(i) Show that the condition (2) (x n y = x * (x ::::} y)) is
satisfied provided the linearly ordered residuated lattice is divisible, i.e.
for each x, y such that x > y there is a z such that y = x * z.
(ii) Clearly each continuous t-norm determines a BL-algebra on the unit in-
terval [0, 1] with its standard linear ordering.
Definition 2.3.8 Let L=(L, n, U, *,::::}, 0,1) be a BL-algebra. In an analogy
to 2.2.2 we define an L-evaluation of propositional variables to be any map-
ping e assigning to each propositional variable p an element e(p) of L. This
extends in the obvious way to an evaluation of all formulas using the opera-
tions on L as truth functions, i.e.
e(O)
e(ep --+ 'ljJ)
e(ep&'ljJ)
°
e(ep) ::::} e('ljJ)
e(ep) * e('ljJ)
(and hence e(ep 1\ 'ljJ) =
e(ep) n e('ljJ),e(ep V 'ljJ) = e(ep) U e('ljJ),e(--,ep)
e(ep) ::::} 0.)
A formula ep is an L-tautology if e(ep) = 1 for each L-evaluation e.
Theorem 2.3.9 The logic BL is sound with respect to BL-tautologies: if ep
is provable in BL, then ep is an L-tautology for each BL-algebra L. More
generally, if T is a theory over BL and T proves ep, then, for each BL-algebra
L and each L-evaluation e of propositional variables assigning the value 1 to
all the axioms of T we have e(ep) = 1.
Proof
We have to show that all axioms of BL are L-tautologies and also
that the definition of xU y from =} is an L-tautology. All axioms except (A6)
immediately verify as in 2.2.6. We verify (A6):
((x::::} y) =} z) * ((y ::::} x) ::::} z) =

50
CHAPTER TWO
[((x =} y) =} z) * ((y =} x) =} z] * ((x =} y) U (y =} x)) =
[...] * (x =} y) U [...] * (y =} x) ~
~ [((x =} y) =} z) * (x =} y)] U [((y =} x) =} z) * (y =} x)] ~ z U z = z.
Finally, tautologicity of the definition of x U y was proved as (8) above.
0
Lemma 2.3.10 The class of all BL-algebras is a variety of algebras.
Proof
As we know from chapter 1, the class of all lattices is a variety;
also the conditions on 0,1 are expressible by identities (x n 1 = x, x no =
0). Similarly the conditions on * (commutativity, associativity, 1 is a unit)
are identities. We verify that the adjointness condition is expressed by the
following:
(9)xn(y=} (x*y)) =x,
(10) ((x =} y) * x) U y = y,
(11) (x =} (x U y)) = 1,
(12) ((z =} x) =} (z =} (x U y))) = 1,
(13) (x n y) * z = (x * z) n (y * z).
First observe that they are true in each BL-algebra: (9) is equivalent to x
~
Y =} (x * y) and (10) to (x =} y) * x ~ y - see (4) above.
(11) follows from x
~ x U y by (6). (12) is a particular case of the fact
y
~ z implies (x
=} y)
~ (x
=} z) [=} is non-decreasing in the second
argument -
indeed, if y
~ z, u
~ (x
=} y) implies x * u
~ y implies
x *u =} z implies u ~ (x =} z)].
(13) is one of distributivities; it follows from the corresponding provability
2.2.23 (30) by 2.3.9
Conversely, replace in the definition of a BL-algebra the adjointness con-
dition by (9)-{13); we prove the adjointness.
(14) x ~ y implies x * z ~ y * z.
Indeed, if x ~ y, then x = x n y, thus x * z = (x n y) * z = (x *z) n (y * z)
by (13), hence x * z :s: y * z.
(15) x ~ y iff (x =} y) = 1.
On the one hand, x ~ y implies (x U y) = y, hence x=} y = 1 by (12).
On the other hand, if (x =} y) = 1, then x n y = x * (x =} y) = x * 1 = x,
thus x ~ y.
(16) x ~ y implies (z =} x) ~ (z =} y).
This follows directly from (12) since x ~ y gives y = x U y.
(17) z ~ (x =} y) iff x *z ~ y.

MANY-VALUED PROPOSITIONAL CALCULI
51
Using (14)-(16), reason as follows: z ::; x =? (x * z), thus if x *z ::; y, then
z ::; x =? y. Similarly, if z ::; x =? y then x * z ::; x * (x =? y) ::; y. This
proves adjointness.
0
We shall now show that classes of provably equivalent formulas form a
BL-algebra.
Definition 2.3.11 Let T be a fixed theory over BL. For each formula ep, let
[ep]T be the set of all formulas 'ljJ such that T I- ep == 'ljJ (formulas T -provably
equivalent to ep). LT is the set of all the classes [ep]T. We define
o =
1
[ep]T * ['ljJ]T
[ep]T =? ['ljJ]T
[ep]T n ['ljJ]T
=
[ep]T U ['ljJ]T
=
[O]T,
[I]T'
[ep&'ljJ]T'
[ep -+ 'ljJ]T,
[ep 1\ 'ljJ]T,
[epV'ljJ]T,
(This is correct due to the provabilities (26)-(28) in 2.2.16.) This algebra is
denoted by LT.
Lemma 2.3.12 LT is a BL-algebra.
Proof
For lattice properties of n, U see the provabilities (9), (13), (21),
(22), (23) and, for idempotence, (11) or (16); for semigroup properties of
* see axioms (A3) and provabilities (8), (20). Now observe that the lattice
ordering ::; satisfies the following:
[ep]T ::; ['ljJ]T iff
T I- ep -+ 'ljJ.
Indeed, if T I- ep -+ 'ljJ then T I- ep == (ep 1\ 'ljJ) (by obvious proof), thus
[ep]T =
[ep]T n ['ljJ]T and [ep]T ::; ['ljJ]T. Conversely, if [ep]T ::; ['ljJ]T, thus
T I- ep == (ep 1\ 'ljJ) then T I- ep -+ 'ljJ (since over BL, T I- ep 1\ 'ljJ -+ 'ljJ).
We show the adjointness property.
[X]T::; [ep]T =? ['ljJ]T iffT I- X-+(ep-+'ljJ) iffT I- (X&ep)-+'ljJ iff [X&ep]T::;
['ljJ]T. Thus LT is a residuated lattice.
The validity ofconditions (2), (3) in the definition of a BL-algebra follows
from the definition ofthe conjunction 1\ and from the provability of (15). This
completes the proof.
0
Now we shall show how filters on residuated lattices determine homomor-
phisms and characterize homomorphisms to linearly ordered lattices.

52
CHAPTER TWO
Definition 2.3.13 Let L = (L, n, U, *, *,0,1) be a residuated lattice. Afil-
ter on L is a non-empty set F
~ L such that for each x, Y E L,
a E F
and
b E F
implies
a * b E F,
a E F
and
a::; b
implies
b E F.
F is a prime filter iff for each x, Y E L,
(x*y)EF
or
(y*x)EF.
Lemma 2.3.14 Let L be a BL-algebra and let F be a filter. Put
X""FY
iff
(x*y)EF
and
(y*X)EF.
Then
(i) ""F is a congruence and the corresponding quotient algebra L/ ""F is a
BL-algebra.
(ii) L/ ""F is linearly ordered iff F is a prime filter.
Proof
To show that""F is an equivalence we just observe that""F is tran-
sitive: this follows from the fact that the formula ((<p -+ 'lj;)&('lj; -+ X)) -+
(<p -+ X) is a I-tautology over L, thus ((x *
y) * (y *
z)) ::; (x *
z)
for each x, y, z; if (x * y), (y * z) E F then (x * z) E F. Thus we may
define equivalence classes [X]F = {y I x ""F y}. One verifies that ""F is a
congruence, i.e. preserves the operation, by imitating the proof of 2.3.12, i.e.
proving [X]F ::; [Y]F iff (x * y) E F and verifying that [X]F = [Y]F implies
[x * Z]F = [y * Z]F, [x * Z]F = [y * Z]F and [z *
X]F = [z * Y]F. Thus
we may induce the operations *,* (and n, U) on the set L/ ""F of equiva-
lence classes setting [X]F * [Y]F = [x * Y]F etc.; the mapping assigning to
each x its class [X]F is then a homomorphism and L/ ""F under the induced
operation is a BL-algebra (since BL-algebras form a variety of algebras and
hence is closed under homomorphisms: a homomorphism preserves validity
of identities).
Now assume F to be a prime filter and let x, Y E L; then either (x *
y) E F and, then [X]F ::; [Y]F or (y * x) E F and, then [Y]F ::; [X]F; ::;
is linear. Conversely, if L/ ""F is linearly ordered and x, Y E L, then either
[X]F ::; [Y]F and (x * y) E For [Y]F ::; [X]F and (y * x) E F; F is a
prime filter.
0

MANY-VALUED PROPOSITIONAL CALCULI
53
Lemma 2.3.15 Let L be a BL-algebra and let a E L, a i= 1. Then there is a
prime filter F on L not containing a.
Proof
There are filters not containing a, e.g. Fa = {I}. We shall show that
if F is any filter not containing a and x, y E L are such that (x =} y) rt. F and
(y =} x) rt. F, then there is a filter F' 2 F not containing a but containing
either (x
=} y) or (y =} x). Note that the least filter F' containing F as a
subset and z as an element is F' = {u I (3v E F)(3nnatural)(vun ::; un·
Indeed, if F" 2 F is a filter and z E F then for each v E F and n natural,
v *zn E F"; on the other hand, F' itself is a filter since it is obviously closed
under * and contains with each z all z' ~ z.
Thus assume (x =} y) rt. F, (y =} x) rt. F and let Fl , F2 be the smallest
filters containing F as a subset and (x
=} y), (y
=} x) respectively as an
element. We claim that a rt. F l or a rt. F2 . Assume the contrary; then for
some v E F and natural n, v * (x =} y)n ::; a and v * (y =} x)n ::; a, thus
a ~ v* (x =} y)nUv*(y =} x)n = v*((x =} y)nU(y =} x)n) = v*l = v,
thus a E F, a contradiction. (We use here the provabilities 2.2.24 (33).) Thus
a rt. Fl or a rt. F2·
Now if L is countable (which will be our case in the proof of complete-
ness), then we may arrange all pairs (x, y) from L2 into a sequence {(xn,Yn) I
n natural }, put Fa = {l} and having constructed Fn such that a rt. Fn we
take Fn+l 2 Fn such that a rt. Fn+l according to our construction; if pos-
sible we take Fn+l such that (xn =} Yn) E Fn+l , if not, we take that with
(Yn =} xn) E Fn+l' Our desired prime filter is the union
n
If L is uncountable, then one has to use the axiom of choice and work
similarly with a transfinite sequence of filters.
0
Lemma 2.3.16 Each BL-algebra is a subalgebra of the direct product of a
system of linearly ordered BL-algebras.
Proof
Let U be the system of all prime filters on L. For FEU let Lp =
L/F and let
L* = II Lp.
PEU
L* is the direct product of linearly ordered residuated lattices {Lp I FEU}
of L*. For x E L let i(x) be the element {[x]pIF E U} of L*. Clearly
this embedding preserves operations; it remains to show that it is one-one. If

54
CHAPTER TWO
x, Y E F and x =I- y then x i
y or y i x. Assume the former; then (x ::::}
y) =I- 1 in L. By 2.3.15 let F be an prime filter on L not containing (x ::::} y);
then in LjF, [X]F i [Y]F' hence [X]F =I- [Y]F and therefore i(x) =I- i(y).
0
Definition 2.3.17 Associate with each formula tp of BL a term tpe of the
language of residuated lattices by replacing the connectives -+, &, /\, V, 0, I
by function symbols and constants ::::}, *, n, U, 0,1 respectively and replacing
each propositional variable Pi by a corresponding object variable Xi.
Lemma 2.3.18
(1) Each formula which is an L-tautology for all linearly
ordered BL-algebras is an L-tautology for all BL-algebras.
(2) tp is an L-tautology iff the identity tpe = 1 is true in L.
Proof
(1) follows from (2) and the subdirect product representation;
(2) is evident since the value of the term tpe given by an evaluation e is just
eL(tp).
o
Theorem 2.3.19 (Completeness) BL is complete, i.e. for each formula tp the
following there things are equivalent:
(i) tp is provable in BL,
(ii) for each linearly ordered BL-algebra L, tp is an L-tautology;
(iii) for each BL-algebra L, tp is an L- tautology.
Proof
The implications from (i) to (ii) and from (ii) to (iii) have been estab-
lished. Thus assume (iii) and prove (i). To this end recall 2.3.12 saying, among
other things, that the algebra LBL of classes of equivalent formulas of BL is
a BL-algebra; thus, a tp satisfying (iii) is an LBL-tautology. In particular, let
e(Pi) = [Pi]BL for all propositional variables; then e(tp) = [tp]BL = [1]BL,
thus BL I- tp = 1, hence BL I- tp.
0
We shall generalize this completeness theorem as follows:
Definition 2.3.20
(1) An axiom schema given by a formula 4I>{P1, ... ,Pn)
is the set of all formulas 41>(tpI,
,tpn) resulting by the substitution of
tpi for Pi(i = 1, ... ,n) in 41>(PI,
,Pn).

MANY-VALUED PROPOSITIONAL CALCULI
55
(2) A logical calculus C is a schematic extension of BL if it results from
BL by adding some (finitely or infinitely many) axiom schemata to its
axioms. (The deduction rule remains modus ponens.)
(3) Let C be a schematic extension of BL and let L be a BL-algebra. L is a
C-algebra if all axioms of Care L-tautologies.
Remark 2.3.21 Note that axioms of BL are given by axiom schemata. Note
furthermore that each schematic extension of BL has the substitution prop-
erty: if cP is an axiom and 'I/J results from cP by a substitution (of formulas for
propositional variables), then 'I/J is also an axiom.
Theorem 2.3.22 (Completeness) Let C be a schematic extension of BL and
let cP be a formula. The following are equivalent:
(i) C proves cP,
(ii) cp is an L-tautology for each linearly ordered C-algebra L,
(iii) cp is an L-tautology for each C-algebra L.
Proof
The implication (i) =? (ii) is soundness and is proved as usual. (ii)
=? (iii) follows by the lemma 2.3.16 and its proof: an arbitrary C-algebra
is embedded into a direct product of its linearly ordered factor algebras -
and the factor algebras are also C-algebras. To prove (iii) =? (i) observe that
the algebra Lc of classes of mutually C-equivalent formulas is itself a C-
algebra: if.p(CPI, ... , CPn) is an instance of the axiom schema .p(PI, ... ,Pn)
and e(Pi) = ['l/Ji]c then e(.p(cpI, ... , CPn)) =
[.p(cp~, ... , cp~)]c where cP~ re-
sults from CPi by substituting 'l/Ji for Pi, thus .p( cP~, ..• ,cp~) is also an instance
of the schema and therefore [.p(cP~ , ..• , cp~)]c = [1]c.
0
Remark 2.3.23 We know that each continuous t-norm on [0,1] determines
a BL-algebra (see 2.3.7). Call algebras determined by continuous t-norms t-
algebras and call a formula cP a t-tautology if it is an L-tautology for each
t-algebra L. Clearly, if BU- cP then cP is a t-tautology. We have the following
interesting problem (of t-completeness of BL). Is each t-tautology provable
in BL? Thus is BL a complete axiomatization of the intersection of all logics
given by continuous t-norms? Or can one find a formula which is at-tautology
but is unprovable in BL, thus for some BL-algebra L that is not at-algebra, cP
is not an L-tautology?
This problem is a subject of intensive research. Presently an extension of
BL by two (not too simple) axioms is known which is complete with respect
to t-tautologies; but it is unknown whether the additional axioms are provable
in BL or not.

56
CHAPTER TWO
2.4.
SOME ADDITIONAL TOPICS
We shall discuss two additional topics. A strong completeness theorem, re-
lating provability in a theory to truth in all models of the theory, and exten-
sion of the language of basic propositional logic by a connective 6. which is
two-valued (has value 1 for 1 and 0 otherwise). This connective proves to be
useful and we shall meet it from time to time in further chapters. We show
that the completeness theorems obtained till now hold also for the enriched
logic. Throughout the section we work with a fixed schematic extension C of
BL as a given logic. Generalizing 2.2.17 in the obvious way we get
Definition 2.4.1
(1) A theory over C is a set T of formulas; elements of T
are axioms of T. T I-
<p (or, more precisely, T I-c <p) means that <p
is provable in T, i.e. there is a C-prooj of <p in T (a sequence each of
whose members either is an axiom of C or an element of T or follows
from some preceding members by modus ponens).
(2) Let L be a C-algebra. An L-evaluation e is an L-model of T if eL(a) =
1L for each axiom a E T.
(3) T is complete if for each pair <p, 7.j; of formulas, T I- (<p -+ 7.j;) or T I-
(7.j; -+ <p).
Lemma 2.4.2
(1) T is complete iff the C-algebra LT is linearly ordered.
(2) If T is a theory and T If <p, then there is a consistent complete superthe-
ory T' 2 T such that T' If <po
Proal
For LT see 2.3.11-2.3.12 (they readily generalize for theories over
C). The proof of (1) is a direct analogy of the proof of 2.3.14 (ii); and that of
(2) to the proof of 2.3.15. For the reader's convenience we sketch the proof
of (2).
Let (an, (3n) be a sequence of all pairs offormulas; put To = T and having
Tn If <p observe that T U {an -+ ,6n} If <p or T U {,6n -+ an} If <p (otherwise
for some k, T I- (an -+ ,6n)k V ({3n -+ an)k I- <p, thus T I- <p). Take Tn+! to
be T U {an -+ ,6n} if this theory does not prove <p, Tn+1 = T U {,6n -+ an}
otherwise; put
T' = UTn .
n
o
Theorem 2.4.3 (Strong completeness.) Let T be a theory over C and let <p be
a formula. Then the following are equivalent:

MANY-VALUED PROPOSITIONAL CALCULI
57
(i) T I-c cp;
(ii) For each linearly ordered C-algebra L and each L-model e ofT, eL(cp) =
lL·
(iii) For each C-algebra L and each L-model e of T, eL(cp) = lL.
Proof
Soundness is clear: by 2.3.21 all axioms of C are true in all C-models
of T, axioms of T are true in all models of T by the definition of a model;
and formulas true in a model are evidently closed under modus ponens (see
2.3.4 (8).
Conversely, assume T If cp, and let T'
:;;2 T be complete and T' If cp.
Thus setting, for each 'IjJ, e('IjJ) =
['IjJ]T we get an LT-model of T in which
e(cp) < 1LT ; LT is a linearly ordered C-algebra.
0
*
Definition 2.4.4 In each linearly ordered BL-algebra L introduce the opera-
tion 6 by postulating 6(1) = 1, 6(a) =°for a f= 1. Expand the language
of BL by the corresponding new unary connective (denoted also by 6).
We shall exhibit an axiom system for the enriched language and isolate a
variety of (expanded) BL-algebras for which we have completeness.
Definition 2.4.5 The language of the basic logic BL,0, is the language of BL
expanded by the connective 6. Axioms of BL,0, are those of BL plus13
(61) 6<p V -, 6 cp
(62) 6(cp V 'IjJ) ~ (6cp V 6'IjJ)
(63) 6cp ~ cp
(64) 6<p ~ 66 cp
(65) 6(cp ~ 'IjJ) ~ (6cp ~ 6'IjJ).
Deduction rules of BL,0, are modus ponens and generalization: from cp
derive 6cp.
Definition 2.4.6 A 6-algebra is a structure L
=
(L, *, =}, n, U, 0,1,6)
which is a BL-algebra expanded by an unary operation 6 in which the fol-
lowing formulas are true:
13 The 6-axioms are from [8].

58
CHAPTER TWO
6x U (-) 6 x = 1
6(xUy)::; 6xU6y
6x ::; x
6x::; 66 x
(6x) * (6(x =? y)) ::; 6y
61 = 1
Remark 2.4.7
(1) The axioms evidently resemble modal logic with 6 as
necessity; but in the axiom on 6 (cp V 'tjJ), 6 behaves as possibility rather
than necessity.
(2) The definitions 2.3.7 of L-evaluation, L-tautology etc. generalize triv-
ially to BLL::. and 6-algebras.
Lemma 2.4.8
(1) Linearly ordered 6-algebras are exactly algebras from
2.4.4.
(2) The class of all D.-algebras is a variety of algebras.
(3) If BLL::. proves cp, then cp is an L-tautology for each linearly ordered
D.-algebra and hence for each 6-algebra.
Proof
(1) One easily verifies that a linearly ordered BL-algebra expanded by 6
such that 61 = 1 and D.a = 0 for a =I 1 satisfies the axioms of 2.4.6; on
the other hand if a 6-algebra is linearly ordered then the first axiom says
max(6x, (-) 6 x) = 1, thus either x = 1 and 6x = lor x < 1, then
6x ::; x < 1, hence (-) 6 x = 1 and therefore 6x = O. (a -+ 0 = 1
implies 1 ::; a -+ 0, hence 1 * a ::; 0, a = 0).
(2) is evident from the definition (::; is a lattice ordering, i.e. a ::; b is an b =
a).
(3) is also easy: for the linearly ordered case prove by induction of proofs.
(Cf. 2.2.6, concerning necessitation: if a =
1, then 6a =
1 by the
last axiom 61 = 1. Then use preservation by subdirect products as in
2.3.18.)
o
Remark 2.4.9 Before we prove completeness let us mention some useful
properties of 6.

MANY-VALUED PROPOSITIONAL CALCULI
59
(1) The formula .0.(-,ep) defines in each linearly ordered .0.-algebra GOdel
negation, i.e. .0.(x =} 0) is 1 for x = 0 and is 0 otherwise. Indeed,
if .0.(x =} 0) =
1 then x=}O =
1, hence 1
~ x
=} 0, x = 0;
thus .0.((-)x) = 1 iff x = 0, hence for x > 0 we get .0.((-)x) = O.
Setting \7(ep) = .0.(-, .0. (-,ep)) we get double GOdel negation: it has
value 1 for a positive value of ep, and value 0 for ep having the value O.
More generally, the formula 'ljJ V .0.(ep --+ 'ljJ) evidently defines GOdel
implication in BLD,. Thus BLD, extends GOdellogic G. We shall prove
more on this embedding in Chapter 4.
(2) The mapping I assigning to each formula ep of classical (Boolean) logic
the formula I (ep) which results by replacing each variable p by .0.(p)
is obviously a faithful embedding of Boolean logic into BLD,: ep is a
Boolean tautology iffBLD, proves I(ep).
Definition 2.4.10 Let C be a schematic extension of BL; the calculus CD, is
defined in an analogy to BL as an extension of C by the connective .0., the
axioms .0.1-.0.5 from 2.4.6 and by the deduction rule of necessitation. CD,-
algebras are expansions of C-algebras that are .0.-algebras (i.e. BL-algebras
expanded by .0., satisfying identities given by C and the identities of 2.4.6).
Lemma 2.4.11 CD, proves the following:
(1) .0.ep == .0.(ep&t.p) ,
(2) .0.ep == .0.ep& .0. ep,
(3) .0.ep --+ epn (for each n),
(4) .0.(ep&'ljJ) == .0.ep&.0. 'ljJ.
Proof
(1) CD, proves (ep&ep) --+ ep, thus .0.((ep&ep) --+ ep) (by generaliza-
tion), thus .0.(ep&ep) --+ .0.ep; conversely,
CD. f- .0.ep --+ (.0.ep --+ .0.(ep&ep))
since it proves ep --+ (ep --+ (ep&ep)) ,
CD, f- -, .0. ep --+ (.0.ep --+ .0.(ep&ep))
since -,a --+ (a --+ anything) is provable, cf. 2.2.12 (18), thus CD, f- (.0.ep V
-,.0. ep) --+ (.0.ep --+ .0.(ep&ep)),
CD. f- .0.ep --+ .0.(ep&ep) by (.0.1).
The proof of (2) is similar but simpler. From (1) we get CD, f- .0.t.p --+ .0.epn
for each n, so that we get (3) by (.0.3). For (4) use .0.(ep&'ljJ) --+ (.0.(ep&'ljJ)&.0.
(ep&'ljJ)) --+ (.0.ep& .0. 'ljJ)); the converse is obvious.
0

60
CHAPTER TWO
Theorem 2.4.12 (Completeness.)
(1) The following are equivalent
(i) CL':, I- cp
(ii) cp is an L-tautology for each linearly ordered CL':,-algebra
(iii) cp is an L-tautology for each CL':,-algebra.
(2) Let T be a theory over CL':,. The following are equivalent:
(i) T I-CL:; cp
(ii) For each linearly ordered CL':,-algebra L, cp is true in each L-model
ofT,
(iii) the same for all CL':,-algebras L.
Proof
This is again a variant of preceding completeness proofs; we indicate
the important point. This concerns the notion of a filter for CL':,-algebras. The
necessary modification of the definition of a filter on a CL':,-algebra results by
adding the condition
x E F implies 6 x E F
to 2.3.13. Then carefully read 2.3.14; show that for a filter F, x '"F Y implies
6x "'F 6y (since (x => y) E F implies 6(x => y)
E F and hence
(6x => 6y) E F). Thus L / '"F is a CL':,-algebra for each filter; it is linearly
ordered if F is a prime filter.
Then inspect 2.3.15 -
construction ofa prime filter F on L not containing
an a < 1. Observe that given a filter F the least filter containing F as a subset
and z as an element is
F' = {u I (3v E F)(u ~ v *6z)}.
(Indeed, if Ui ~ Vi *6z then Ui * U2 ~ Vi * V2 *6z *6z = Vi * v2 * 6z;
if U ~ V * 6z, then 6u ~ 6(v * 6z) = 6v * 6 6 z = 6v * z.) Now if
Pi, F2 extend F by (x => y), (y => x) respectively and a E Fi,a E F2, then
for some V E F,
a ~ (v * 6(x => y)) V (v * 6(y => x)) = v * (6(x => y) V 6(y => x)) ~
v * 6((x => y) V (y => x)) = v * 61 = v * 1 = v and a E F. Thus the
construction of a prime filter not containing a is O.K. In this way we get the
subdirect product representation 2.3.16 and the rest is routine.
0
Remark 2.4.13 Note that in CL':, the deduction theorem 2.2.18 fails, since
cp I- 6cp but for each n, If cpn -t 6cp. (Show as a small exercise using the

MANY-VALUED PROPOSITIONAL CALCULI
61
theorem on intermediate values of a continuous function that, given at-norm
* and a natural n ~ l,there is an x < 1 such that x n > 0.) But we get the
following form:
Theorem 2.4.14 Let T be a theory over C,0,and let cP, 'ljJ be formulas. T U
{cp} f- 'ljJ iffT f- 6cp -+ 6'ljJ.
Proof
Assuming T
f- 6cp -+ 6'ljJ we prove the following formulas in
T U {cp}: cP, 6cp (generalization), 6'ljJ (using 6cp -+ 6'ljJ), 'ljJ (by 63).
Conversely, if CPI, ... ,CPn is a (T U {cp})-proof of 'ljJ, then show T
f-
6cp -+ 6CPi by induction. We check the deduction rules. IfT f- 6cp -+ 6cpj
and T f- 6cp -+ 6(cpi -+ CPj), then T f- (6cp)2 -+ 6cpj (see the proof of
2.2.18); but by 2.4.11 (2), T f- (6cp)2 == 6cp, thus T f- 6cp -+ 6cpi. This
verifies modus ponens. Now assume T f- 6cp -+ 6cpj; then T f- 6(6cp -+
6cpj), T f- 66 cP -+ 6cpj (by 65), thus T f- 6cp -+ 6cpj (by 64). This
verifies generalization.
0

CHAPTER THREE
I:..UKASIEWICZ PROPOSmONAL LOGIC
In this chapter we are going to investigate the propositional logic given by
I:..ukasiewicz t-nonn (and the corresponding I:..ukasiewicz implication), and
some of its extensions. Clearly, we want to find a complete axiomatization.
It turns out that it is enough to add just one I-tautology of this logic to the
axioms of BL, namely the following axiom (--.--.) of double negation14
We shall call the theory BL +(--.--.) Lukasiewicz propositional logic and
denote it by I:... We first derive I:..ukasiewicz's original famous set of axioms
(U) - (1:..4) from I:.. and then make a digression showing that all axioms of I:..
are provable from (U) to (U).
This will be done in Sec. 1. In Sec. 2 we shall study BL-algebras satis-
fying the condition given by (--.--.) and show that these are algebras known
as MV-algebras. To get completeness of I:..ukasiewicz logic with respect to 1-
tautologies over [0,1] it will be sufficient to show that each such I-tautology
is a I-tautology over all linearly ordered MV-algebras. This will be obtained
from a characterization of linearly ordered MV-algebras with the help of or-
dered Abelian groups due to Chang and the Gurevich-Kokorin theorem.
Section 3 is devoted to the extension of I:..ukasiewicz logic by truth con-
stants for rational truth values; this extension is extremely important since
it enables us to deduce partially true consequences from partially true pre-
misses, which seems to be very proper for fuzzy logic. We shall obtain some
variants ofthe completeness theorem for theories in this extended logic (called
Rational Pavelka Logic).
3.1. GETTING I:..UKASIEWICZ LOGIC
We investigate the propositional calculus PC(*L) where *L is the Lukasie-
wicz t-nonn taken as the truth function of conjunction, i.e.
x *y = max(O, x + y - 1).
14 My original treatment added the axiom (L4); the present elegant axiomatization
was conjectured by Nicola Olivetti and proved by Agata Ciabattoni and Fernando
Cicalese.
63

64
CHAPTER THREE
Lemma 3.1.1
(1) L I- -'-'<p == <p,
(2) L I- (<p --+ 'l/J) == (-,'l/J --+ -'<p),
(3) L I- (<p --+ 'l/J) == -'(<p&-''l/J).
(4) LI- ((<p --+ 'l/J) --+ 'l/J) --+ (('l/J --+ <p) --+ <p)
Proof
(1) Obvious.
(2) Is proved easily from 2.2.12(18') and (1).
(3) BL I- <p --+ (-,'l/J --+ -,(<p --+ 'l/J»
since
BL I- <p --+ ((<p --+ 'l/J) --+ 'l/J); hence
BL I- (<p&-''l/J) --+ -'(<p --+ 'l/J). On the other hand,
BL I- <p --+ (-,'l/J --+ (<p&-''l/J»,
BL I- <p --+ (-'(<p&-''l/J) --+ -,-,'l/J),
BL I- -'(<p&-''l/J) --+ (<p --+ -,-,'l/J),
L I- -,(<p&-''l/J) --+ (<p --+ 'l/J),
L I- -,(<p --+ 'l/J) --+ (<p&-''l/J).
(4) BL I- (-'<p&(-'<P --+ -''l/J»
--+ (-,'l/J&(-,'l/J --+ -'<p»
(by A4),
L I- (-'<p&('l/J --+ <p»
--+ (-,'l/J&(<p --+ 'l/J»,
L I- -'((<p --+ 'l/J)&-,'l/J) --+ -,(('l/J --+ <p)&-'<p),
L I- ((<p --+ 'l/J) --+ 'l/J) --+ (('l/J --+ <p) --+ <p).
Corollary 3.1.2 For Lukasiewicz implication,
((x::::} y) ::::} y) = max(x, y).
Definition 3.1.3 The following are Lukasiewicz's axioms: 15
(Ll) <p --+ ('l/J --+ <p),
(L2) (<p --+ 'l/J) --+ (('l/J --+ X) --+ (<p --+ X»,
(L3) (-,<p --+ -,'l/J) --+ ('l/J --+ <p),
(U) ((<p --+ 'l/J) --+ 'l/J) --+ (('l/J --+ <p) --+ <p).
15 See [127] and Historical Remarks.
o

LUKASIEWICZ PROPOSITIONAL LOGIC
Lemma 3.1.4 L proves (Ll),(L2),(L3), (L4).
65
Proof
For (LI) see 2.2.7; (L2) is axiom (AI). For (L3) see 3.1.1(2) and for
(L4) see 3.1.1(4).
0
*
The main task of the rest of this section is to show that Lukasiewicz axioms
prove axioms of BL. The reader uninterested in this result may skip the rest of
the section except for 3.1.11-3.1.13 when we define a strong disjunction and
show some ofits properties. The reader in a hurry will read this as information
on the logic L (i.e. BL + ("».
Definition 3.1.5 We shall be slightly more specific on the system investi-
gated: the only basic connective is an implication -t, then there is the truth
constant O. Negation and conjunction are defined as follows:
'c.p
is
c.p -t 0,
c.p&'l/J
IS
,(c.p -t ''l/J).
(Further connectives will be defined later.) Axioms are (Ll)-(L4); this system
is denoted by L'.
To prove axioms of BL we shall have to develop L' a little.
Lemma 3.1.6 The following formulas are provable in I:..':
(I) c.p -t ((c.p -t 'l/J) -t'l/J)
(2) (c.p -t ('l/J -t X)) -t ('l/J -t (c.p -t X))
(3) c.p -t c.p
(4) 0 -t c.p
(5) "c.p -t c.p
(6) (c.p -t ,'l/J) -t ('l/J -t ,c.p)
(7) c.p -t "c.p.

66
CHAPTER THREE
Proof'
(1) L' f- cp -t ((1/J -t cp) -t cp) by (LI), thus L' f- cp -t ((cp -t 1/J) -t 1/J) by
(L4) and (L2).
(2) First, L' f- (cp -t (1/J -t X)) -t (((1/J -t X) -t X) -t (cp -t X)) by
(L2) (transitivity); also L' f- (1/J -t ((1/J -t X) -t X)) -t [(((1/J -t
X) -t X) -t (cp -t X)) -t (1/J -t (cp -t X))] from transitivity and L'
f- (1/J -t ((1/J -t X) -t X) by (1); thus L' f- [...]. But from the first
provability in this paragraph and from the last one we get L' f- (cp -t
(1/J -t X)) -t (1/J -t (cp -t X)) again by transitivity.
(3) From L' f- cp -t (1/J -t cp) and from (2) we get L' f- 1/J -t (cp -t cp); take
an axiom for 1/J and get L' f- cp -t cp.
(4) We have L' f- 0 -t 0, i.e. L' f- ,0, thus L' f- ,cp -t ,0, L' f- 0 -t cp by
(L3).
(5) L' proves "cp -t [(cp -t 0) -t 0] -t [(0 -t cp) -t cp] -t cp; the middle
implication by (L4), the last by (4).
(6) L' I- (cp -t '1/J) -t ("cp -t ,1/J) by (5) and transitivity; and L' I-
("cp -t '1/J) -t (1/J -t ,cp) by (L3).
(7) L' I- ,cp -t ,cp, thus L' cp -t "cp by (6).
o
Definition 3.1.7 In the rest of this section, cp +-+ 1/J stands for the pair of
formulas (cp -t 1/J), (1/J -t cp); L' I- cp +-+ 1/J means L' I- (cp -t 1/J) and
L' f- (1/J -t cp). We could introduce the connective == of equivalence but
proving its properties would be unnecessarily losing time; after we show that
L' proves all axioms of BL we shall have == introduced in BL at our disposal.
Remark 3.1.8 Note that using transitivity we may show that L' f- (cp +-+ 1/J)
implies L' f- (cp -t X) +-+ (1/J -t X) and also L' f- (X -t cp) +-+ (X -t 1/J)
(thus also L' f- (,cp +-+ '1/J)); hence provably equivalent subformulas can be
replaced by each other.
Lemma 3.1.9 L' proves the axioms (Al)-(A3), (AS) and (A7) ofBL as well
as the axiom (,,).
Proof'
(AI) is (L2): (A7) was proved in 3.1.6 (4). (A2): in the presence of
(A3) (see below) it suffices to prove L' f- (cp&1/J) -t 1/J. Now L' f- '1/J -t

LUKASIEWICZ PROPOSITIONAL LOGIC
67
(<p -+ -,'ljJ), thus L' f-- -,(<p -+ -,'ljJ) -+ -,-,'ljJ, L' f-- (<p&'ljJ) -+ 'ljJ.
(A3): L' f-- (<p&'ljJ) -+ -,(<p -+ -,'ljJ) -+ -,('ljJ -+ -'<p) -+ ('ljJ&<p) (using 3.1.6 (6».
We prove (AS): L' f-- [<p -+ ('ljJ -+ X)] f-7 [<p -+ (-'X -+ -,'ljJ)] f-7 [-'X -+
(<p -+ -,'ljJ)] f-7 [-'X -+ -'(<p&'ljJ)] f-7 [(<p&'ljJ) -+ X]. For (-,-,) see 3.1.6 (5).
This completes the proof.
0
*
Remark 3.1.10 Before we show L' f-- (A4),(A6) we shall prove in L' (and
hence in L) some few things on defined connectives V, 1\ and on a new con-
nective Y... of strong disjunction, dual to &. Its existence is typical of L' and
possible due to the provable equivalence <p f-7 -'-'<p.
Definition 3.1.11 New connectives 1\, V and Y... are introduced in L' as fol-
lows:
<p 1\ 'ljJ
stands for
<p&(<p -+ 'ljJ),
<p V 'ljJ
stands for
(<p -+ 'ljJ) -+ 'ljJ,
<py"''ljJ
stands for
-'<p -+ 'ljJ.
Remark 3.1.12 In L, <p 1\ 'ljJ was defined as here; L proves (<p V'ljJ) f-7 ((<p -+
'ljJ) -+ 'ljJ); and the definition of <py"''ljJ is new. Note that (U) just expresses the
commutativity of V. Observe also that the truth function EB corresponding to
the connective Y... satisfies
x EB Y = min(l, x + y).
Indeed, x EB y = [(x => 0) => y] = [(1 - x) => y]; thus if x + y S; 1, then
I-x ~ yandx EB y = 1-(I-x)+y = x+y; ifx+y ~ 1, then I-x S; y
and x EB y = 1.
Lemma 3.1.13 L' proves the following properties of 1\, V, Y... (note that (8)-
(11) are de Morgan rules):
(8) -,(<p 1\ 'ljJ) f-7 (-,<p V -,1/J)
(9) -,(<p V 'ljJ) f-7 (-'<p 1\ -,1/J)
(10) -'(<p&'ljJ) f-7 (-'<pY...-''ljJ)
(11) -'(<py"''ljJ) f-7 (-'<p&-''ljJ)
(12) 1/J -+ (<py"''ljJ)
(13) (<pY...1/J) -+ (1/JY...<P)

68
CHAPTER THREE
(14) (CPY"('ljJY..X)) t-t ((CPY"'ljJ)Y"X)
(15) (cp 1\ 'ljJ) t-t (cpY..-,'ljJ) &'ljJ
(16) (cp V 'ljJ) t-t (cp&-,'ljJ)Y..'ljJ
(17)cpY..-,cp
(18) ((cp&-,'ljJ)Y..'ljJ) t-t (cpY..('ljJ&-,cp))
(19) ((cpY..-''ljJ)&'ljJ) t-t (cp&('ljJy"-,cp))
Proof
The proofs are easy applications of basic t-t-equivalences we already
have proved (and could be left to the reader as exercises). We always present
a chain of provable t-t-equivalences.
(8) -,(cp 1\ 'ljJ) t-t -,(cp&(({J --+ 'ljJ)) t-t -'(({J&-'(({J&-''ljJ)) t-t (({J --+ (({J&-''ljJ))
t-t (-,(({J&-,'ljJ) --+ -,({J) t-t ((({J --+ 'ljJ) --+ -,({J) t-t ((-,'ljJ --+ -,({J) --+
-,({J) t-t (-,'ljJ V -,({J) t-t (-,({J V -,'ljJ).
(Note that from (8) we easily get commutativity of 1\ in L': we get (({J 1\
'ljJ) t-t -,(-'({J V -,'ljJ) t-t -,(-,'ljJ V -'({J) t-t ('ljJ 1\ cp).)
(9) -'(({J V 'ljJ) t-t -'((({J --+ 'ljJ)
--+ 'ljJ) t-t -,(-,'ljJ --+ -,(cp --+ 'ljJ)) t-t
(-,'ljJ&(({J --+ 'ljJ)) t-t (-,'ljJ&(-,'ljJ --+ -'({J)) t-t (-,'ljJ 1\ -'({J) t-t (-'({J 1\ -,'ljJ).
(10) -'(({J&'ljJ) t-t -,('ljJ&({J) t-t ('ljJ --+ -'({J) t-t (-'-'({J --+ -,'ljJ) t-t (-'({JY..-''ljJ).
(11) -,(({JY..'ljJ) t-t -,(-'({J --+ 'ljJ) t-t (-'({J&-,'ljJ)
(12) 'ljJ --+ (-'({J --+ 'ljJ) --+ (({JY..'ljJ)
(13) (({JY..'ljJ) t-t (-'({J --+ 'ljJ) t-t (-,'ljJ --+ ({J) t-t ('ljJY..({J)
(14) (({JY..('ljJY..X))
t-t
(-'({J
--+
(-,'ljJ
--+ X))
t-t ((-,cp&-,'ljJ)
--+ X)
t-t
(-'(({Jy"'ljJ) --+ X) t-t ((({JY..'ljJ)Y..X)
(15) (({J 1\ 'ljJ) t-t ('ljJ 1\ ({J) t-t ('ljJ&('ljJ --+ ({J)) t-t ((-'({J --+ -,'ljJ)&'ljJ) t-t
((({JY..-''ljJ)&'ljJ) (For commutativity of 1\ see the remark in (8).)
(18) and (19) follows immediately from commutativity of V and 1\ and from
expressions (15),(16).

LUKASIEWICZ PROPOSITIONAL LOGIC
Lemma 3.1.14 L' proves the following:
(20) (ep V ep) -+ ep
(21) (ep -+ X) -+ (('ljJ -+ X) -+ ((ep V 'ljJ) -+ X))
Proof'
69
o
(20) L' proves ((ep V ep) -+ ep) f-7 (( (ep -+ ep) -+ ep) -+ ep) f-7 ((ep -+
(ep -+ ep) -+ (ep -+ ep)) (the last equivalence follows by (L4» and the
last formula is provable since L' f- (ep -+ ep).
(21) By repeated use of transitivity we get L' f- (ep -+ X) -+ (((ep -+ 'ljJ) -+
'ljJ) -+ ((X -+ 'ljJ) -+ 'ljJ)), thus L' f- (ep -+ X) -+ ((ep V 'ljJ) -+ ('ljJ V X))·
Similarly, L' f- ('ljJ -+ X) -+ (('ljJ V X) -+ (X V X)), thus L' f- ('ljJ -+
X) -+ (('ljJ V X) -+ X)· From this we get L' f- (ep -+ X) -+ (('ljJ -+
X) -+ ((ep V 'ljJ) -+ X)) by repeated use of transitivity. (The pattern is as
follows: For appropriate a, {3, 'Y, 0, 10, we have proved L' f- a -+ {3, 'Y -+
0, {3 -+ (0 -+ E); we want to show f- a -+ (r -+ E). We proceed as
follows: L' f- (a -+ (3) -+ (({3 -+ (0 -+ E)) -+ (a -+ (0 -+ E))], thus L'
f- a -+ (0 -+ E)) by double modus ponens. This means L' f- 0 -+ (a -+
E) and since L' f- (r -+ 0) -+ [({3 -+ (a -+ E)) -+ (r -+ (a -+ E))] we
get L' f- 'Y -+ (a -+ E), thus L' f- a -+ (r -+ E).)
o
Theorem 3.1.15 L' proves (ep -+ 'ljJ) V ('ljJ -+ ep).
Proof'
We shall start with the formula (ep -+ 'ljJ) V ('ljJ -+ ep) and repeatedly
make f-7-equivalent transformations using the expression of V, -+ by Y... and
&, commutativity and associativity of Y..., &, de Morgan rules and similar; in
particular, (18) will be repeatedly used. Finally we arrive at a formula of the
form (epY...-,epY... ...) which is L'-provable.
The proof consists of a sequence of equivalent transformations below. We
use some abbreviations, e.g. a abbreviates (ep&-,'ljJ )Y...ep; these abbreviations
are easy to detect.
(ep -+ 'ljJ) V ('ljJ -+ ep) f-7
f-7 ((ep -+ 'ljJ)&-,('ljJ -+ ep))Y...('ljJ -+ ep) f-7
f-7 ((ep -+ 'ljJ)&'ljJ&-,ep)y"'-,'ljJy"'ep f-7
f-7 (((ep -+ 'ljJ)&-,ep) V -,'ljJ)y"'ep f-7

70
CHAPTER THREE
B
((cp --+ 'IjJ)&-,cpy(-,'IjJ&-,((cp --+ 'IjJ)&-,cp))ycp B
B
((cp --+ 'IjJ)&-,cp)ycpy(-,'IjJ&((cp&-,'IjJ)Ycp)) B
B
((cp --+ 'IjJ) V cp)y(-,'IjJ&a) B
B
(cp&-'(cp --+ 'IjJ))Y(cp --+ 'IjJ)y(-,'IjJ&a) B
B (3y-,cpy'IjJy(-,'IjJ&a) B
B (3y-,cpyaY('IjJ&-,a) B
B -,cpyay, B
B -'CPYCPy(cp&-,'IjJ)y, B
B
(cpy-,cp)YO.
Corollary 3.1.16 L' proves the axioms (A4) and (A6) of BL.
o
Proof
For (A4) see 3.1.13 (8) (proof) and the definition of /\. We prove
(A6). By 3.1.14 (21),
L'I-- ((cp --+ 'IjJ) --+ X) --+ [(('IjJ --+ cp) --+ X) --+ (((cp --+ 'IjJ) V ('IjJ --+ cp)) --+
X)],
L'I-- [((cp --+ 'IjJ) --+ X)&(('IjJ --+ cp) --+ X)] --+ [((cp --+ 'IjJ) V ('IjJ --+ cp)) --+ X];
but by 3.1.15,
L'I-- [((cp --+ 'IjJ) --+ X)&(('IjJ --+ cp) --+ X)] --+ X,
i.e. we get (A6).
0
We have completed our proof of the fact that L' proves all the axioms
of BL. From now on we know that L and L' are equivalent theories (prove
the same formulas); thus L will denote either of them. Besides this, we have
introduced a new connective (strong disjunction) and proved several of its
properties.
3.2.
MV-ALGEBRAS; A COMPLETENESS THEOREM
3.2.1 As we have seen, Lukasiewicz propositional calculus L can be under-
stood as a schematic extension of the basic logic BL by the schema -,-,cp --+
cpo Thus 2.3.22 gives us completeness with respect to L-algebras, i.e. BL-
algebras in which the identity x = ((x=} 0) =} 0) is valid. L-algebras have
been broadly investigated under another name, which we adopt:
Definition 3.2.2 An MV-algebra is a BL-algebra in which the identity x =
((x =} 0) =} 0) is valid (MV stands for "many-valued").
Remark 3.2.3 Recall that each formula cp determines the corresponding term
cp. of the language of residuated lattices; the completeness above implies that

LUKASIEWICZ PROPOSITIONAL LOGIC
71
(i) L I- cp iff the identity cp. = 1 is valid in each (linearly ordered) MV-
algebra;
(ii) L I- cp == 'ljJ iff the identity cp. = 'ljJ. is valid in each linearly ordered MV-
algebra. (Note that in an MV-algebra ((x ~ y) = 1 and (y ~ x) = 1)
iff (x ~ y and y ~ x) iff x = y.)
Our definition of an MV-algebra is natural in the context of residuated
lattices; but there are equivalent simpler definitions. We elaborate one such
definition based on Lukasiewicz's original axioms (LI-fA). To prevent any
confusion we shall call the algebras satisfying the new definition Wajsberg
algebras. (After we show their relation to MV algebras we shall forget the
new name.)
Definition 3.2.4 A Wajsberg algebra16 is an algebra A =
(A,~, 0) in which
the following identities are valid:
Put (-)x = x ~ 0, 1 = (0 ~ 0). Then
(WI) (1 ~ y) = y,
(W2) (x ~ y) ~ ((y ~ z) ~ (x ~ z)) = 1,
(W3) (((-)x ~ (-)y) ~ (y ~ x)) = 1,
(W4) ((x ~ y) ~ y) = ((y ~ x) ~ x).
Lemma 3.2.5 The following is true in each Wajsberg algebra:
(i) (x ~ x) = 1
(ii) x = y iff (x ~ y) = 1 and (y ~ x) = 1
(iii) (x ~ 1) = 1
(iv) (x ~ (y ~ x)) = 1
(v) ((x ~ y) ~ y) ~ ((y ~ x) ~ x) = 1
Proof
(i) 1 ~ 1 = 1 by (WI); thus, again by (WI), (x ~ x) = [1 ~ (x ~ x)J =
= [1 ~ IJ ~ ([1 ~ xJ ~ [1 ~ xl) = 1
by (W2) (transitivity).
16 See [52].

72
CHAPTER THREE
(ii) The implication from left to right follows by (i); conversely, if (x
=}
y) = (y =} x) = 1 then x =
(1 =} x) = ((y =} x)
=} x) = ((x =}
y) =} y) = (1 =} y) = y.
(iii) x =} 1 = x =} (x =} x) =
= (1 =} x) =} ((1 =} x) =} x) =
= (1 =} x) =} ((x =} 1) =} 1) =
= (1 =} x) =} ((x =} 1) =} (1 =} 1)) = 1 by transitivity (W2).
(iv) x=} (y =} x) = [1 =} (x =} (y =} x))] =
= 1 =} ((1 =} x) =} (y =} x)) =
= (y =} 1) =} ((1 =} x) =* (y =} x)) = 1
(by (iii) and transitivity (W2».
(v) follows by (W4) and (ii).
o
Lemma 3.2.6 For arbitrary formulas cp, 'l/J and each Wajsberg-algebra A,
(i) L f-- cp implies that the identity cpe = 1 is valid in A;
(ii) L f-- cp == 'l/J implies that the identity cpe = 'l/Je is valid in A.
Proof
(i) Check by the induction on proofs observing that if x = 1 and x=} y = 1,
then (1 =} y) = 1, thus Y = 1.
(ii) follows immediatelly by 3.2.5 (ii).
o
Theorem 3.2.7
(i) If A is an MV-algebra then (A, =}, 0) is a Wajsberg-
algebra.
(ii) If A = (A, =}, 0) is a Wajsberg-algebra and if *, n, U, 1 are defined in
the obvious way, i.e.
x*y
xny
xUy
=
(-)(x =} (-)y),
x * (x =} y),
(x =} y) =} y,
then A' = {A, n, U, *, =}, 0,1} is an MV-algebra.
(In other words, the restriction of an MV-algebra to =}, 0 is a Wajsberg-
algebra; each Wajsberg-algebra expands to an MV-algebra.)

LUKASIEWICZ PROPOSITIONAL LOGIC
73
Proof
(i) follows from the fact that counterparts ofthe axioms (Ll-L4) are prov-
able and so are (1 '* x) = x and ((x '* y) '* y) = ((y '* x) '* x).
(ii) follows by observing that MV-algebras are characterized by finitely many
identities and that the corresponding formulas are L provable; thus if A
is a Wajsberg algebra and A' is its expansion by the obvious definitions
of *, n, U, then the identities in question are valid in A'. Thus from now
on we may identify Wajsberg algebras with MV-algebras.
o
*
Now our interest turns to linearly ordered MV-algebras. Our aim is to
prove a completeness theorem for L with respect to I-tautologies over the
"standard" MV-algebra [0,1] with truth functions of connectives. To this end
we prove a famous characterization of linearly ordered MV-algebras by (lin-
early) ordered Abelian (semi)groups. Recall Section 1.6 when we discussed
ordered Abelian groups and semigroups .
Definition 3.2.8 Let G = (G, +c, ~c) be a linearly ordered Abelian group
(o-group) and let e E G,°<c e be a positive element. MV(G, e) is the
algebra A = (A, '*, Oc) whose domain A is the interval [0, e]c = {g E G I
o~c 9 ~c e}, x '* y = e if x ~c Y and x '* y = e - x + y otherwise.
Lemma 3.2.9 MV (G, e) is a linearly ordered MV-algebra.
Proof
Check that the four identities in the definition 3.2.4 (of an Wajsberg-
algebra) are valid in MV(G, e) (cf. 3.1.4). Then define *, n, U and observe
that for x, y E [0, e]c,
xny=min(x,y)
xUy=max(x,y)
so that the ordering
~ induced by n (or U) coincides with
~c. Thus
MV(G, e) is a linearly ordered MV-algebra.
0
Theorem 3.2.10 For each linearly ordered MV-algebra A there is a linearly
ordered Abelian group G and a positive element e E G such that A
=
MV(G,e).
Before we elaborate the proof of this theorem (below in this section) let us
show how it gives the desired completeness theorem for Lukasiewicz logic.

74
CHAPTER THREE
Lemma 3.2.11
(1) If an identity CT =
7 in the language of MV-algebras is
valid in the standard MV-algebra [0, 1] with truth functions, then it is
valid in each linearly ordered MV-algebra.
(2) Consequently, if a formula 'P is a I-tautology over the standard MV-alge-
bra, then 'P is an A-tautology for each linearly ordered MV-algebra A.
(3) More generally, if T is a finite theory and 'P is true in each [0, I]L-model
of T, then for each linearly ordered MV-algebra A, 'P is true in each
A-model ofT.
Prool
Recall the Gurevich-Kokorin theorem 1.6.17 saying that a V-senten-
ce of ordered Abelian groups is true in the additive o-group of reals iff it is
true in all o-groups. By 1.6.18 we know that the same is true if we introduce
new operations by open definitions. In particular, expand the theory of 0-
groups by the ternary operation x =:}e y defined as follows:
x ::::}e Y = e if x .s y, otherwise x ::::}e Y = e - x + y.
(Clearly, for e > °this just defines the operation =:} in MV(G, e).) Now to
each term CT of MV-algebras (assume it is constructed from variables using
O,::::} only) we associate a term CT; ofo-groups putting xie = Xi, 0; = 0,
(CTI
::::} CT2); =
(CTd;
=:}e (CT2);' Now let A be an MV-algebra and CT,7
terms such that CT = 7 is not valid in A, i.e. for some a = aI, ... ,an E A,
A F CT(a) # 7(a). Let G be an o-group such that A = MV(G, e) for
an appropriate e E G; thus G F CT;(a) # 7;(a), G F °.s a :::; e. By
Gurevich-Kokorin, there are reals e > 0,°< all"" an < e such that
Re F CT;(a) # 7;(a); by dividing bye we get b1,.·., bn such that Re F
CTi(b) # 7i (b), hence the standard MV-algebra over [0, 1] satisfies CT(b) #
7(b).
The proof of (3) is obtained in a similar way, just observing that A is a
linearly ordered MV-algebra and a is a tuple of its elements such that A F
CTl(a) = 71(a), ... , A F CTn(a) = 7n (a) but A F CT(a) # 7(a), then the
Gurevich-Kokorin theorem gives a tuple b of elements of [0, 1] such that
[0, IlL F CTl(b) = 71(b), ... , CTn(b) = 7n(b), CT(b) # 7(b).
Thus ifT = {'PI, ... ,'Pn} and 'P is not true in an A-model J-t of T (A an MV-
algebra, J-t an A-evaluation 'P containing propositional variables PI, ... ,Pn)
then for ai = e(Pi), a = (al, ... ,an) we get 'Pi(a) = lA ... 'P~(a) =
lA, 'P*(a) # lA. The above gives b =
(b1 , ... , bn) such that 'Pi(b)
=
1 (i =
1, ... , n) and 'P* (b) # 1, thus any [0, 1] evaluation J-t' such that
J-t'(pd = bi is a [0, I]L-model of T in which 'P is not I-true.
0

LUKASIEWICZ PROPOSITIONAL LOGIC
75
Corollary 3.2.12 Let [0, I]L denote the standard MV-algebra on [0, 1] with
truth functions of Lukasiewicz logic.
(1) A fonnula <p is a I-tautology of Lukasiewicz logic L (i.e. a [0, IlL-
tautology) iff it is an A-tautology for each linearly ordered MV-algebra
A.
(2) Let T be a finite theory over L. The following are equivalent.
(2i) <p is true in each [0, I]L-model ofT,
(2ii) for each linearly ordered MV-algebra A, <p is true in each A-model
ofT.
(3) The claims (1), (2) remain valid if L is replaced by Lt>, [0, IlL by
[0, IlL,t> and MV-algebras by MV-algebras with 1::::..
Theorem 3.2.13 (Completeness.)
(1) A fonnula <p is provable in Lukasiewicz logic L iff it is a I-tautology of
Lukasiewicz logic.
(2) Let T be a finite theory over L, <p a fonnula. T proves <p over Lukasiewicz
logic iff <p is true in each model of T (in the sense of L).
(3) The claims (1), (2) remain valid if L is extended by the connective I::::.
(1::::.(1) =
1, I::::.(x) = 0 otherwise) and by the corresponding axioms
(1::::.1)-(1::::.5).
Proof
This follows immediately from 2.4.3, 2.4.12 by the preceding corol-
~
0
Remark 3.2.14 It is easy to show that we cannot omit the assumption of
finiteness of T. For example, take variables p, q and
T = {np -+ q In natural} U {-,p -+ q}(where np is p'::!... . .. '::!...p)
thus the axioms are
p -+ q, (p'::!...p) -+ q, (p'::!...p'::!...p) -+ q, ... , -,p -+ q.
Obviously, q is true in each model of T: if e(p) = °the last axiom gives
e(q) = 1, if e(p) > ~, the the axiom np -+ q does the job. But for each finite
subtheory To ~ T we can find a model e of To (with e(p) sufficiently small
positive) in which e(q) < 1. (One expresses this by saying that the semantic
consequence is not compact.)

76
CHAPTER THREE
On the other hand, any T -proof uses only finitely many axioms of T, thus
if a formula is provable in T it is true in all models of each sufficiently large
finite subtheory of T. Thus T does not prove q.
*
The rest of this section elaborates a proof of Theorem 3.2.10. For this
purpose we first introduce an operation in MV-algebras (corresponding to the
connective.Y'.) and prove some of its properties (cf. Remark 3.1.12).
Definition 3.2.15 In each MV-algebra A, define
x $ Y = (-)((-)x * (- )y) = ((-)x ::::} y).
Lemma 3.2.16 The following holds in each MV-algebra.
(I)
(2)
(3)
(4)
(5)
(6)
(7)
(8)
(9)
(10)
(-)(x * y) = (-)x $ (-)y
(-)(x $ y) = (-)x * (-)y
x~x$y
x$y=y$x
x $ (y $ z) = (x $ y) $
Z
xny=(x$(-)y)*y
xU y = (x *(-)y) $ Y
x $ (-)x = 1
(x *(-)y) $ Y = x $ (y *(-)x)
(x $ (- )y) * y = x * (y $ (- )x)
Proof
This follows from the provability of formulas (10)-(19) in 3.1.13 0
Lemma 3.2.17 The following holds in each linearly ordered MV-algebra:
(11) If x $ y < 1, then y < (-)x and x * y = °
(12) If x $ y = 1 and x * y = 0, then x = (-)y
(13) If x $ Y = x $
Z < 1 or if x *Y = x * Z > 0, then y = z
(14) If x $ y = x $ z and x * y = x * z, then y = z

LUKASIEWICZ PROPOSITIONAL LOGIC
(15) If x ffi y = x, then x = 1 or y = 0
(16) If x ffi y = 1 and x ffi z < 1, then (x * y) ffi z = (x ffi z) *y.
77
Proof
(11) By the assumption, ((-)x ~ y) < 1, thus (-)x 1:. y, hence
y < (-)x; x * (-)x = 0 (e.g. by 2.2.12), thus x *y = O.
(12) The assumption gives ((-)x ~ y) = 1 and (y ~ (-)x) = 1, thus
(-)x = y.
(13) Since x ffi y, x ffi z < 1 we get (-)x > y, (-)x > z, thus (-)x ny =
y, (-)x n z = z. But, then
y = y n (-)x = (y ffi x) * (-)x = (z ffi x) * (-)x = z n x = z.
Ifx*y = x*z > 0, then (-)xffi(-)y = (-)xffi(-)z < 1, thus (-)y = (-)z
and y = z.
(14) follows from (13) and (12).
To prove (15) observe that if xffiy = x = xffiO and x < 1, then y = 0 by (13).
Finally we prove (16). We have (-)y :::; x, thus
(-)yffi(x*y)ffiz
=
((-)yUx)ffiz
(-)yffi(y*(xffiz))
=
(-)yU(xffiz)
x ffi z,
x ffi z,
thus (x * y) ffi z = Y * (x ffi z) by cancellation (see (12».
0
We are now going to prove Theorem 3.2.10 using the original method of
Chang [25].
Definition 3.2.18 Let A = (A, n, U, *,~, 0,1) be a linearly ordered MV-
algebra, let ffi and (-) have the obvious meaning. We associate with A the
structure G = OG(A) defined as follows: G = (G, +,:::;) where G is the set
of pairs (m, x) where m is an integer and x E A, with each (m, 1) identified
with (m + 1,0) (pedantically, G is the Cartesian product Z x A, Z being the
set of integers, factorized by the obvious equivalence).
(m, x) + (n, y) = (m + n, x ffi y) if x ffi y < 1,
(m,x) + (n,y) = (m + n + l,x * y) otherwise,
(m,x) :::; (n,y) if(m,x) = (n,y) orm < nor [m = n and x < y]
(Caution: Recall that (m, 1) = (m + 1,0).)
Theorem 3.2.19 For each linearly ordered MV-algebra A, the structure G =
OG(A) is an a-group and A is isomorphic to MV(G, (0, 1)).
Proof
First observe that the operation + and the ordering :::; respect the
equality imposed to our ordered pairs. Clearly, + is commutative, (0,0) is

78
CHAPTER THREE
the neutral element and for each (m,x), its inverse is (1 - m, (-)x). Also
monotonicity is easy to check. The only property whose verification is rather
laborious is associativity. Let a = (m, x), b = (n, y), c = (k, z) be given; we
shall investigate 6 cases.
Case 1. xEByEBz < 1. Then a+(b+c) = (a+b)+c = (m+n+k, xEByEBz).
In all remaining cases, x EB y EB z = 1.17
Case 2. x EB y < 1, y EB z < 1, y EB z < 1 (but x EB y EB z = 1, thus
z ~ (-)(xEBy) and x ~ (-)(yEBz». Then zEBx = (zV (-)(xEBy)) EBx =
(z * (x EB y)) EB (-)(x EB y) EB x = (x EB y) * z EB «-)x * (-y)) EB x =
(x EB y) * z EB x * y EB (-)y = (x EB y) * z EB (-)y since x EB y < 1 and thus
x * y = O. (We use Lemma 3.2.16 freely.)
On the other hand, z EB x = z EB (x V (- )(y EB z)) = z EB x * (y EB z) EB
(-)(YEBz) = x*(yEBz)EBzEB«-)y*(-)z) = x*(yEBz)EBy*zEB(-)y =
x * (y EB z) EB (-)y since y EB z = O.
We have proved (x EB y) *z EB (-)y = x * (y EB z) EB (-y) = z EB x < 1;
thus by 3.2.17 (13) we get (x EB y) * z = x * (y EB z), hence a + (b + c) =
(m + n + k, x * (y EB z)) = (m + n + k, (x EB y) * z) = (a + b) + c.
Case 3. x EB y < 1, Y EB z < 1, x EB z = l.Then using 3.2.17 (16) we get
x * (y EB z) = y EB x * z = (x EB y) * z and hence a + (b + c) = (a + b) + c
as in Case 2.
Case 4. xEBy < 1, yEBz = 1. Then (a+b)+c = (m+n+k+l, (xEBy)*z),
a+(b+c) = (m,x)+(n+k+l,y*z) = (m+n+k+l,xEBy*z) since
x EB y * z ::; x EB y < 1 By (18) we get (x EB y) * z = x EB y *z.
Case 5. x EB y = 1, y EB z < 1. This case is fully analogous to the preceding
case.
Case 6. x EBy = yEB z = 1 Now (a+ b) +c = (m+n + 1, x *y) + (k, z),
a + (b + c) = (m, x) + (n + k + 1, Y* z).
Subcase 6(i). x * y EB z = 1. We have to prove x EB y * z = 1. Then
a+(b+c) = (a+b)+c = (m+n+k+l,x*y*z). Indeed, x*yEBz = 1 implies
z ~ (-)(x * y) = (-)x EB (- )y; furthermore, x EB y = 1 implies y ~ (-)x,
thus 1 = x EB (-)x = x EB «-)x Ay) = xEBy *«-)x EB (-)y) ::; x EBy *z.
Subcase 6(ii). x *Y EB z < 1. Then x EB y *z < 1 (otherwise Case 1 would
apply to z,y,x and would get x * y EB z = 1) and we get a + (b + c) =
(m + n + k + 1, x EB y *z) = (m + n + k + 1, x *y EB z) = (a + b) + c. This
G is an o-group. It remains to observe that the mapping i associating with
each x E A the pair (0, x) is an isomorphism ofA onto MV(G, (0, 1)). This
completes the proof.
0
17 In expressions containing EB and * we use the same convention concerning
brackets as is usual in expressions with + and·, thus x * y EB z stands for (x * y) EB z
etc.

LUKASIEWICZ PROPOSITIONAL LOGIC
79
We have finished the presentation of Chang's representation of linearly
ordered MV-algebras. This also completes the proof of the completeness the-
orem 3.2.13 ofLukasiewicz logic with respect to I-tautologies of the standard
MV-algebra of truth functions over [0, 1].
3.3.
RATIONAL PAVELKA LOGIC
Until now we have been interested in absolute truth, Le. in I-tautologies and
in what formulas have the value 1 if axioms of a theory have the value 1; we
succeeded to axiomatize this. But one may ask: can we also prove partially
true conclusions from partially true premisses? (This seems to fit well into
the intuitive notion of a fuzzy logic.) We shall show that for Lukasiewicz
logic it is indeed possible. The key observation is that, for any evaluation e,
if e(cp) = r, then, for any formula 'ljJ, e('ljJ) 2': riff e(cp -* 'ljJ) = 1. Thus
it appears useful to introduce, for each rational r E [0, 1], a truth constant
if -
a special formula whose truth value under each evaluation is r. (We
already have truth constants 0, 1; why not have O.7? We could introduce if for
each real number from [0, 1]' but this would make our language uncountable.)
Thus we shall have e('ljJ) 2': riff e(if -* 'ljJ) = 1; e('ljJ) :::; riff e('ljJ -* if) = 1.
The formalism follows.
Definition 3.3.1 The language of Rational Pavelka Logic, RPL,18 results from
the language of L by adding truth constants if for each rational r. Each truth
constant is a formula; formulas are built from propositional variables and
truth constants using connectives -*,"" (as well defined connectives of L:
&, '{, 1\, V, ==).
An evaluation e of propositional variables by reals from [0,1] extends to
an evaluation of all formulas using truth functions of L extended by the clause
e(if) = r for each e, r.
The axioms of RPL are the axioms of L (thus (Ll)-(L4)) plus the follow-
ing bookkeeping axioms for truth constants:
(if -* s)
...,if
=
1- r
(e.g. 0.8 -* 0.7 == 0.9, ...,0.4 == 0.6). The deduction rule is modus ponens.
A theory is a set of formulas -
special axioms. Proofs and provability are as
usual; T f-- cp means that T proves cp (cp is provable in T). An evaluation e is
a model of T if e(a) = 1 for all axioms of T.
18 See [163, 74].

80
CHAPTER THREE
A graded formula is a pair (<p, r) where <p is a fonnula and r a rational
element of [0, 1]; it is just another notation for the fonnula (1' -+ <p).
Lemma 3.3.2 The following is a derived deduction rule in RPL:
(<p, r), (<p -+ 'l/J, s)
('l/J,r*s)
i.e. whenever a theory T proves (<p, r) and (<p -+ 'l/J, s) it proves ('l/J, r * s)
where * is Lukasiewicz t-norm.
Proof
Compare this with the discussion following 2.1.15. If T f- l' -+ <p
and T f- 8 -+ (<p -+ 'l/J) then T f- (1'&8) -+ (<p&(<p -+ 'l/J)), thus T f- r * s-+ 'l/J.
o
Remark 3.3.3 Note that the deduction theorem 2.2.18 remains valid for RPL:
T U {<p} f- 'l/J iff for some n, T f- <pn -+ 'l/J.
Two main notions will be introduced now. The idea is that the truth of the
axioms of T may fail to guarantee that <p is true but it may guarantee that <p
is not too false, i.e. may entail that the truth value of <p must be at least r. In
other words, truth ofT may imply truth of (1' -+ <p). Similarly, for provability.
Our definitions follow.
Definition 3.3.4 Let T be a theory over RPL, <p a fonnula.
(1) The truth degree of <p over Tis 1I<pIIT = inf{e(<p) Ie is a model of T}.
(2) The provability degree of <p over T is l<pl = slip{r IT f- (<p, r)}.
Theorem 3.3.5 (Completeness.) For each theory T and each fonnula <p, the
provability degree equals the truth degree, i.e.
1<pIT = 11<pIIT.
We shall elaborate a proof. First some useful notions.
Remark 3.3.6 Recall definitions 2.2.20 of a consistent theory T (T If 0) and
2.4.1 of a complete theory T (T f- (<p -+ 'l/J) or T f- ('l/J -+ <p) for each pair
(<p, 'l/J). Recall also 2.4.2 (2) implying that each consistent theory T has a
consistent complete supertheory T' (the proof is not violated by the presence
of truth constants).
Lemma 3.3.7 If T does not prove (1' -+ <p) then T U {<p -+ 1'} is consistent.

LUKASIEWICZ PROPOSITIONAL LOGIC
81
Proof'
Assume T U {cp -+ f} inconsistent, thus T U {cp -+ f} I- 0, and, by
the deduction theorem, there is an n such that T I- (cp -+ f)n -+ O. Recall
2.2.24 (33): T I- (cp -+ f)n V (1' -+ cp)n, thus T I- on V (1' -+ cp)n, T I-
oV (1' -+ cp)n, T I- (1' -+ cp)n, a contradiction.
0
Lemma 3.3.8 Let T be consistent and complete.
(1) For each cp, IcplT = sup{rlT I- l' -+ cp} = inf{slT I- cp -+ s}.
(2) The provability degree commutes with connectives, i.e.
Thus the evaluation e(pi) = IPilT is a model ofT.
Proof'
(1) Since for each r either T I- cp -+ l' or T I- l' -+ cp it suffices to show
that T I- l' -+ cp and T I- cp -+ s implies r
~ s. Assume r > s; we
would get T I- f -+ s, Le. T I- ~. but r =} s < 1, thus T would be
inconsistent since for some n, (r =} s)n = O.
(2) We just omit the index T. I.cp 1 = sup{tiT I- t -+ .cp} = sup{tiT I-
cp -+ 1-l} = sup{1 - siT I- cp -+ s} = 1 - inf{slT I- cp -+ s} =
1 -Icpl.
Icpl =} 11/;1 = inf{rl T I- cp -+ f} =} sup{sl T I- s -+ 1/;} =
= sup{r =} sup{sl T I- s -+ 1/;}1 T I- cp -+ f} =
= sup{r =} siT I- cp -+ 1', T I- s -+ 1/;} ~ sup{tlT I- t -+ (cp-+
1/;)} =
=
Icp -+ 1/;1 (since T I- ~ -+ (1' -+ s), thus if T I- cp -+ l' and
T I- s -+ 1/;, then T I- ~ -+ (cp -+ 1/;). Note that we have heavily
used the continuity of =}.
Conversely, assume (lcpl =} 11/;1) < t < t' < Icp -+ 1/;1 for some rational
t, t'. Express t as r =} s for some r < Icpl, s > 11/;1; then T I- l' -+
cp, T I- 1/; -+ S, thus T I- (cp -+ 1/;) -+ (1' -+ s), T I- (cp -+ 1/;) -+
t, T I- t' -+ (cp -+ 1/;), hence T I- it -+ t. T I- t' =} t, but t' =} t < 1
and thus T is inconsistent. We have proved Icpl
=}
11/;1
~
Icp -+ 1/;1,
which completes the proof.
3.3.9 (Proof of completeness of RPL.) Showing IcplT
~
IIcpllT is routine
(soundness). To prove the converse one has to show that for each r < Ilcpll, T l-
f -+ cpo This is to show that if T does not prove l' -+ cp, then r
~ Ilcpll. But

82
CHAPTER THREE
if T If r -+ cP, then T U {cp -+ r} is consistent by 3.3.7, thus has a consis-
tent complete extension T' by 3.3.6 and, by 3.3.8, the evaluation e defined
bye(Pi) = IPilT is a model ofT' and e(cp -+ r) = 1, thus e(cp) ::; r. This
completes the proof.
0
*
In the rest of this section we shall discuss three additional topics: (1) we
show a formulation of compactness true for RPL (and for L), (2) we reduce
RPL to L and gain a variant of strong completeness for RPL and, finally, (3)
show how RPL may be extended by some connectives (product conjunction),
but not by some others (as l::, or a non-continuons implication).
We showed in the preceding section that the usual formulation of com-
pactness (for each T, if cp is true in each model of T, then there is a finite
To ~ T such that cp is true in each model ofTo) jails for L and hence fails for
RPL. In Boolean logic this a equivalent to say that for each T, if each finite
To ~ T has a model, then T has a model. But these two formulations are not
equivalent for L and (since IcplT = 0 is not the same as IcplT < 1 !); and in
fact, the latter formulation is true for RPL:
Theorem 3.3.10 Let T be a theory over RPL. If each finite To
~ T has a
model, then T has a model.
Proof
Assume T has no model; then, by the proof of the completeness
theorem, T is inconsistent, hence a finite subtheory To
~ T is inconsistent
and hence To has no models.
0
We tum to our second additional topic. We show that if desired we can
get rid of truth constants, replacing them by some special axioms over L. (In
fact, it is more elegant to keep the constants; the reduction is useful for some
future proofs.)
Lemma 3.3.11 Associate with each rational r E [0,1] a propositional vari-
able Pro For each r there is a formula CPr of L (i.e. not containing truth con-
stants) built from Pr and at most two other propositional variables Ps, Pt such
that for each evaluation e, e(CPr) =
e(cps) =
e(cpt)
=
1 iff e(Pr) = r,
e(ps) = s and e(pt) = t.
Proof
Let CPo be Po == po&'Po, CPI be PI == PI';L'PI and CPl be Pi == 'Pl·
2
2
2
Let n 2: 2; then let CP..L be np..L == Pi (recall that ncp is cP';L . .. ';LcP, n times).
2n
2n
2
For arbitrary r = ~ =
~r;: let CPr be Pr == (2m)p..L' The rest is obvious.
0
2n

LUKASIEWICZ PROPOSITIONAL LOGIC
83
Definition 3.3.12 Let CPr be as in the preceding proof. Let cP be a fonnula
not containing any variable Pr, let cp* result from cp by replacing any truth
constant f by the variable Pr and let T be the theory in L whose axioms are
all the axioms CPr.
Lemma 3.3.13
(1) Let qI, ... be variables distinct from all Pro Each eval-
uation e of the q-variables extends uniquely to the evaluation eof Pr's
which is a model ofT; for each fonnula cP built from q-variables, e(cp) =
e(cp*).
(2) For each theory T in the q-variables, let T** = T* U T where T*
{a* Ia E T}. For each q-formula cp, T 'rRPL cp iff T** 'rL cp*; thus
theories in RPL reduce to theories in L.
Proof
(1) is evident; we prove (2). To show that if cp is provable in T (over
RPL), then cp* is provable in T** it is enough to observe that the *-translations
of bookkeeping axioms are provable in T. But this follows by finite strong
completeness; e.g. --PO.3 == PO.? is true in each model of CPO.3, CPO.?, cp!, CP.l.
2
20
(see the definitions of these fonnulas) and hence the latter formulas prove
--PO.3 == PO.? over L.
Conversely, if T** 'rL cp* then take a corresponding proof CPl, ... , CPn
and substitute f for Pr at each occurence. Check that each CPi is T -provable
over RPL: axioms of T* go back to axioms of T and axioms of T become
RPL-provable after our substitution.
0
We shall use our (cumbersome) analysis to prove the following strong
completeness theorem for RPL:
Theorem 3.3.14 19 Let T be a finite theory over RPL, let cP be a formula. If
cp is true in all models of T, then T 'r cp.
Proof
This is because using the above techniques we can construct afinite
subtheory To of T* UT such that cp* is true in all models of To (only truth
constants occurring in T, cp have to have counterparts in To); hence, by the
finite strong completeness for L, To I-L cp* and thus T 'r cp.
0
Corollary 3.3.15 If T is as above and IIcpllT = r (rational) then T I- (cp, r),
thus IlcpIIT is in fact maximal r such that T I- f -+ cp.
19 See [93).

84
CHAPTER THREE
We can improve this by showing the following:
Theorem 3.3.16 If T is a finite theory over RPL and cp is a formula then
Ilcplir is rational; thus for r = IIcplir we have T f-- f -+ cpo
Proof'
This follows by the preceding from the following lemma.
0
Lemma 3.3.17 Assume T finite, cp a formula. Then there is an evaluation e
taking only rational values and such that e is a model ofT and e(cp) = Ilcpllr.
Proof'
Since a full proof requires some familiarity with polyhedra and sim-
plexes we first present a proof for the particular case that T and cp involves
just two propositional variables; then we sketch a full proof for the reader
knowing the necessary notions and properties. (or for the reader willing to
learn them, e.g. from [223]). Such a reader may of course skip the particular
proof for two variables.
Note that each condition kx+hy+q 2:: a(k, h, q integers, k # aor h # 0),
defines a closed half-plane (call it an r-half plane). The unit square [0, IF is
the intersection offourr-halfplanes (x 2:: O,y 2:: O,-x+l2:: O,-y+l2:: 0).
We shall consider systems of r-halfplanes containing the four just mentioned;
for the sake of this proof call the set defined as the intersection of such a
system an r-set.
Claim 1. Each r-set is a subset of the unit square which is empty, or a sin-
gleton {(x, y)} with x, y rational, or a segment whose endpoints have rational
coordinates or a convex polygon whose vertices have rational coordinates.
This is true for the starting unit square; and it is easily verified that if an r-
set has the property stated in Claim 1 then its intersection with an r-halfplane
has the same property.
Claim 2. For each (x, y) E [0, IF and each formula cp, there is an r-set
Arp containing (x, y) such that on Arp the truth function of cp is linear with
integer coefficients (let eu,v(p) = u, eu,v(q) = v; the function in question is
eu,v (cp)).
Indeed, for cp atomic Arp =
[0, IF; for any cp, 'ljJ, A..,rp =
Arp, and if
ex,y(cp) ~ ex,y('ljJ) then Arp-t1f; = Arp nA1f; n {(u, v)leu,v('ljJ) - eu,v(cp) 2:: a}
(the last set in the intersection being an r-halfplane); similarly for ex,y(cp) 2::
ex,y ('ljJ).
Claim 3. For each (x, y) E [0, IF and each cp such that ex,y(cp)
=
i
where i = aor 1, there is a r-set Brp, containing (x, y) such that eu,v(cp) = i
constantly on Brp. If ex,y(cp) # 0,1 we put Brp = 0.
Generalize the proof of Claim 2: for y = i Brp = [0, 1] x {i}, analogously
for x = i. For any cp, B..,rp = Brp. If ex,y(cp -+ 'ljJ) = 1 then Brp-t,p =

LUKASIEWICZ PROPOSITIONAL LOGIC
85
Arp---t1/! n {(u, v)leu,v(cp) ~ eu,v('¢')}; if ex,y(cp ~ '¢') = 0 then ex,y(cp) = 1,
ex,y('¢') = 0 and Brp---t1/! = Brp n B1/!'
Now assume that T has just one axiom a (take the conjunction of all
axioms). If T has a model (x, y) such that ex,y(a) = 1 then the set of all
such models is compact and hence contains a model (x, y) in which ex,y(cp)
has the least value among all models of a. Take Arp n B o ; this is an r-set
containing (x, y). We claim that (x, y) may be taken rational.
This is clear if ArpnBo is a singleton. If ArpnBo is a segment with rational
endpoints then either eu,v(cp) is constant on the segment and either endpoint
is a model of a with minimal value of cp. or eu,v (cp) is not constant and then
it is either increasing or decreasing on the segment and thus one endpoint has
the desired properties.
Finally if Arp n Bo is a polygon then one of the vertices gives the min-
imal value of cp. Indeed, if (x, y) is a point in the interior of Arp n B o then
take any segment containing (x, y) and having endpoints on the boundary of
Arp n B o . Show that the minimum of eu,v(cp) on our segment is taken in one
of the endpoints. Finally if (x, y) is on the boundary but not a vertex take
the corresponding two neighboured vertices and the segment having them as
endpoints. Show that the minimum of eu,v (cp) on the segment is taken in one
of the endpoints. Thus the minimum over Arp n B o is taken in one of the
vertices and therefore is rational.
This was the proof for two variables; now we present a general proof
(which is a generalization of the present proof) for the reader knowing the
necessary notions and facts20 .
Observe that the truth functions of L are continuous and piecewise linear
with integer coefficients and so is the truth function of each formula of L.
Note that we may get rid of truth constants in T and cp adding finitely many
axioms (see above). Let PI, .. . ,Pm be propositional variables occurring in T
and cp; let aI, ... ,ah be axioms of T.
Call the truth functions of al, ... ,ah (as functions of m variables) II, ...
. . . ,fh and denote the truth function of cp by g. Let us split their domain into
a complex of rn-dimensional polyhedra PI, ... ,Pk such that each function
is linear over each Pi. Indeed, by a suitable generalization of the triangula-
tion process for a polygon, where no new vertices are added, we can assume
that each Pj is in fact an m-simplex. The faces of the simplexes PI, ..., Pk
can safely be thought of as zerosets of linear polynomials with integer coef-
ficients, whence the vertices of each Pj are solutions of systems of n linear
equations with integer coefficients. Thus these vertices are rational points.
20 Thanks are due to Professor D. Mundici for communicating this proof to me.
For an extremely deep investigaton of Lukasiewicz propositional logic and MV-
algebras see [30].

86
CHAPTER THREE
Upon restriction to Pj, each Ii. as well as g, will reach its maximum and its
minimum on some vertex of Pj .
The set A where all the Ii equal 1 is compact; thus there is a point in A
in which 9 is minimal. Our aim is to show that there is such a point with
rational coordinates. A is a union of some simplexes, say QI, ..., Qm in the
above collection PI, ..., Pk. If 9 is not constantly equal to lover A (i.e., if
a formula corresponding to 9 does not logically follow from the formulas
corresponding to the Ji) then the minimum of9 over A is attained at the vertex
v of some such m-simplex Qk. By the above discussion the coordinates of v
are rationals.
0
*
We tum to our last additional topic -
expanding the language. As an
example we show that RPL may be expanded by the product conjunction.
Definition 3.3.18 RPL(0) stands for RPL whose language results from that
of RPL by adding a new binary connective 0, interpreted as the product con-
junction. The axioms are extended by the following:
(cp -+ 'l/J) -+ ((cp 0 X) -+ ('l/J 0 X))
(cp -+ 'l/J) -+ ((X 0 cp) -+ (X 0 'l/J))
f 0 S == r.s (for all rational r, s E [0, 1D.
Theorem 3.3.19 (Completeness.) For each theory T over RPL(0) , IcplT =
IlcplIT.
Proof
Soundness (lcplT ~ IIcpIlT) is obvious. To prove IcplT ~ IIcpliT just
read the proof of 3.3.5 for the expanded logic. The crucial point is 3.3.8 (2):
we have to prove Icp 0 'l/JI == Icpl.I'l/JI. This is proved analogously to the case of
-+ (again using continuity and monotonicity). Indeed, Icpl.I'l/J1 = sup{rl T l-
f -+ cp}.sup{sIT I- s -+ 'l/J} = sup{r.sIT I- f -+ cp,T I- s -+ 'l/J} =
Icp 0 'l/JI. (All three axioms above used.)
Conversely, assume Icpl.I'l/J1 < t < t' < Icp 0 'l/JI; let t = r.s, r > Icpl, s >
I'l/JI, then T I- cp -+ f, T I- 'l/J -+ S, T I- cp0'l/J -+ t, but T I- tI -+ cp0'l/J, thus
T I- t -+ tI, T I- t => tf , t => t
f < 1, thus T is inconsistent, a contradiction.
o
Remark 3.3.20 Continuity was crucial; e.g. one cannot have this style of
completeness when adding the non-continuous implication of product logic
(cf. 2.1.8) or the connective 6.. Example: Let T = {f -+ pi r < I}; then
II 6. piiT = 1, but under any finitary axiomatization (each proof uses only
finitely many axioms), I6. piT = °(verify easily).

LUKASIEWICZ PROPOSITIONAL LOGIC
87
Example 3.3.21 Let us close this section by an example (or exercise). We are
going to discuss the notion of a large natural number. Using crisp logic we
obtain a paradox (called the sorites paradox). There are two assumptions:
(A) One million is a large number. (Instead one million you may substitute
any other number you consider to be large.)
(B) If a large number is diminished by 1 then the result is again large.
But then applying (B) one million times you get that 0 is a large number,
which is not what you want.
We may immediately object that largeness is a fuzzy notion and each num-
ber is large in a certain degree. Let Pi be a sentence "i is large". Then even if
we admit that PlOOOOOO is true (truth degree 1) we shall say that (B) is only par-
tially true. Let us discuss various possibilities ofexpressing this in L (or RPL).
We work with Pi for i = 0, ... , 106; To is the theory {pi -t Pi+Iii < 106}
("if i is large then so is i + 1").
(1) Let r = 0.999999; let TI be the extension of To by PlOOOOOO ("one
million is large"), 'Po ("0 is not large"), and by each axiom r -t (Pi+! -t Pi)
for i < 106. The last axiom is true iff the truth degree of (Pi+! -t pd is at
least 0.999999; thus an evaluation e is a model of T I if e(PlOoooOO) =
1,
e(po) = 0 and for each i < 106, e(pi+d ::; e(Pil + 0.000001; thus e(pi) =
O.OOOOOli. Now take r < 0.999999 (e.g. r = 0.999); what, then, are models
of our TI ?
(2) Now let T2 be the extension of TI by 'Po and for each i < 106,
(Pi+!&Pi+I) -t Pi· Here Pi+!&Pi+1 (or p~+! in brief) may be read "(i + 1)
is very large" thus we assume that if (i + 1) is very large then i is large. If
e is a model of T2 and we put Xi = e(pi) then we get 2Xi+1 - 1 ::; Xi, thus
Xi+! ::; Xi + I"2Xj
• Thus the maximal model of T2 has Xo = 0, Xl = ~,X2 =
i, X3 = ~, ... Xi = (2i - 1)/2i, . .. , i.e. we have never Xi = 1 (but of course
letting i go to infinity we get liIlli-+oo Xi = 1).
(3) Alternatively, we may use PiY..Pi as saying "i is more or less large". Let
T3 be To extended by PlOOOOOO and for each i < 106, by Pi+! -t 2pi. Each
model e of T2 satisfies Xi+! ::; 2Xi; then Xo = 0 is impossible. For example
taking Xo = 0.001 and choosing Xi for i > 0 as large as possible we get the
sequence
0.001,0.002,0.004,0.008,0.016,0.032,0.064, ... ,0.512, 1, 1, ....
Similarly, for each rational r = ~, we may modify T3 to 1'3 by postulating
npi+l -t mpi
(i < 106 ). Then Xi = min(1, Xo . r i) and the corresponding
evaluation is a model of 1'3 iff Xo . rlOOOOOO 2: 1.
We shall continue this example in Ch. 4 for product logic and in Ch. 5 for
predicate calculus.

CHAPTER FOUR
PRODUCT LOGIC, GODEL LOGIC (AND BOOLEAN LOGIC)
4.1.
PRODUCT LOGIC
We are going to investigate the second of the three most important proposi-
tional calculi, namely PC(*rr) where *rr is the product t-norm; we shall call
this logic just the product logic and denote it by II. Recall that the correspond-
ing implication is Goguen and the corresponding negation is G6del negation
(cf. 2.1.11,2.1.17). We present an axiom system (extension of BL by two ax-
ioms) and show its completeness21 by relating linearly ordered II-algebras
-
called product algebras -
to ordered Abelian groups, similarly as in the
case of MV-algebras (but now the proof is much simpler than in the case of
MV-algebras). We also show that Lukasiewicz logic L has a faithful inter-
pretation in II.22 We shall close the section by discussing some additional
topics. Convention: In this section -+ (without any subscript) will be Goguen
implication; the product conjunction will be denoted by 0.
Definition 4.1.1 The axioms of II are those of BL plus
(III) -'-'X -+ ((cp 0 X -+ 'I/J 0 X) -+ (cp -+ 'I/J)),
(II2) cp /\ -'cp -+ O.
Lemma 4.1.2 The axioms are I-tautologies over the algebra [O,I]rr of the
truth functions.
Proof'
(III) Let e be an evaluation; if e(x) = 0 then e(-,-,X) = 0 and e(-'-'X -+
anything)= 1. If e(x) > 0 then e(-,-,X) = 1, and either e(cp 0 X) S
e('I/J 0 X), thus e(cp).e(x) S e('I/J).e(x) and e(cp) S e('I/J), hence e((cp 0
X) -+ ('I/J 0 X)) = e(cp -+ 'I/J) = 1, or e(cp 0 X) > e('I/J 0 X) then
e(cp) > e('I/J) and e((cp 0 X) -+ ('I/J 0 X)) = e(cp -+ 'I/J) =
:~~~.
(II2) Since in II -, is Godel negation, either e(cp) or e(-,cp) must be O.
o
21 See [80].
22 See [9].
89

90
CHAPTER FOUR
Lemma 4.1.3 TI proves the following fonnulas:
(1) ---,(cp 0 'ljJ) -t ---,(cp 1\ 'ljJ)
(2) (cp -t ---,cp) -t ---'cp
(3) ---'cp V ---'---'cp
Proof
(1) The following are equivalent fonns of the fonnula to be proved:
((cp 0 'ljJ) -t 0) -t ((cp 1\ 'ljJ) -t 0),
[(cp -t ('ljJ -t 0)) 0 (cp 1\ 'ljJ)] -t 0,
[(cp -t ---,'ljJ) 0 (cp 1\ 'ljJ)] -t O.
Now, we following chains of implications are provable:
[(cp -t ---,'ljJ) 0 (cp 1\ 'ljJ)] -t [(cp -t ---,'ljJ) 0 cp] -t ---,'ljJ,
[(cp -t ---,'ljJ) 0 (cp 1\ 'ljJ)] -t [(cp -t ---,'ljJ) 0 'ljJ] -t 'ljJ,
[(cp -t ---,'ljJ) 0 (cp 1\ 'ljJ)] -t ['ljJ 1\ ---,'ljJ] -t O.
(We have used various provabilities of BL, see (9), (4), axiom (A2), (11)
and finally axiom (TI2).)
(2) We have ---,(cp 0 cp) -t ---'cp by(1), thus (cp 0 cp -t 0) -t (cp -t 0),
(cp -t (cp -t 0)) -t (cp -t 0), thus (cp -t ---,cp) -t ---'cp.
(3) The following implications are provable:
(---,cp -t ---,---,cp) -t ---,---'cp (by (2) here),
---'---'cp -t (---,cp V ---,---,cp) (by BL), thus
(---,cp -t ---,---,cp) -t (---,cp V ---,---,cp).
On the other hand,
(---,---,cp -t ---,cp) -t (---,---,cp -t ---,---,---,cp) (by BL), thus
(---,---,cp -t ---,---,---,cp) -t ---'---'---'cp (by (2) here),
---,---'---'cp -t ---'cp (by BL), thus
(---,---,cp -t ---,cp) -t ---'cp,
(---,---,cp -t ---'cp) -t (---,cp V ---'---'cp).
We get (---,cp V ---,---,cp) applying axiom (A6) to ---'Cp, ---'---'Cp, ---'Cp V ---'---'cp.
o
Lemma 4.1.4 The axiom (TI2) can be equivalently replaced by each of the
following fonnulas:
---,(cp 0 cp) -t ---'cp, (cp -t ---,cp) -t ---,cp, ---,cp V ---'---'cp.

PRODUCT LOGIC, GODEL LOGIC
91
Proof
We have justseen that all three formulas are provable in II. We prove
that each of them, together with BL+(II1), proves (II2).
(I) Take (cp -+ --,cp) -+ --'cp together with BL+(IT1). We have the following
chain of provable implications:
(ep 1\ --,ep) -+ [cp 0 (ep -+ --.ep)J -+ rep 0 --.ep] -+ O.
(2) Now take --,(cp 0 cp) -+ --.ep; we get (cp 0 ep -+ 0) -+ (ep -+ 0), and hence
(cp -+ (cp -+ 0)) -+ ep -+ 0, which is (cp -+ --.cp) -+ --'ep. This was (I).
(3) Finally take --.cp V --.--.cp. Then the following are provable:
--,--'ep -+ (((cp 0 cp) -+ (cp 0 0)) -+ (ep -+ 0)) (axiom (ITI),
--'cp -+ (anything -+ (cp -+ 0)),
thus (--.--.ep V --.cp) -+ ((cp 0 ep -+ 0) -+ (ep -+ 0))
(observing that 0 is equivalent to ep 0 0 in BL), hence we get (cp 0 ep -+
0) -+ (ep -+ 0) i.e. --.(cp 0 cp) -+ --,ep; this was (2).
0
Definition 4.1.5 Following the general approach we define a IT-algebra (or
product algebra) to be a BL-algebra satisfying
(-)(-)z ::; ((x * z =} Y * z) =} (x =} y)),
x n (-)x = O.
Remark 4.1.6 Trivially, the class of all product algebras is a variety and IT is
sound with respect to product algebras, i.e. each formula provable on II is a
L-tautology for each product algebra L.
Lemma 4.1.7 The following holds in each linearly ordered product algebra:
(1) if x > 0 then (-)x = 0,
(2) if z > 0 then x *z = y * z implies x = y,
(3) if z > 0 then x *z < y *z implies x < y.
Proof
(1) 0 = x n -x = min(x, -x), hence if x> 0 then -x = O.
(2)Ifz > othen -(-z) = 1, thusifx*z::; y*zthen (x*z) ~ (y*Z) = 1
and x ~ y = 1, hence x::; y. Thus x *z = y *z implies x = y. On the
other hand, evidently x ::; y implies x * z S y * z, thus if x * z < y * z
(i.e. x * z ::; y * z and not x * z ::; y * z then x < y. This gives (3).
o

92
CHAPTER FOUR
Theorem 4.1.8 LetL = (L, *, =>, n, U, OL, lL) be a linearly ordered prod-
uct algebra.
Then there is a linearly ordered Abelian group G
=
= (G,+G,OG,::;G) such that L -
{O} = NegG = {g E Gig ::;G OG}
such that, for all g, hE L - {O},
OG = 1£
9 +G h = 9 * h
9 ::;G h iff 9 ::; h
Furthermore, for 9 2: h, 9 => h = h -G g.
Proof
Observe that L - {Od is a linearly ordered commutative semigroup
and lL is its greatest and neutral element. (It is closed under *due to 4.1.3 (1),
which gives: x *y = 0 implies min(x, y) = 0.) Observe further that L - {Od
satisfies "dual subtraction": for each OL < x ::; y the equation x * z = x has
a solution (namely y => x; recall that y * (y => x) = min(x, y)) and this
solution is unique due to 4.1.7 (2). Hence, by 1.6.9, L - {Od (with * and ::;)
is the non-positive part of a unique (up to an isomorphism) linearly ordered
Abelian group G.
0
Definition 4.1.9 For each linearly ordered Abelian group G let II(G) be the
algebra L = (L, *, =>, n, U, OL, lL) where L = N egG U{-oo}, where -00
is a new element, less than all x E N egoo ,
x * y = x +G y for x,y E NegG,
(-00) * x = x * -00 = (-00) for x E L,
x=> y = 1 for x ::; y, x, y E L,
x => y = Y -G x for x > y, x, Y E L - {-oo},
x => -00 = -00 for x > -00;
x n y = min(x, y), xU y = max(x, y),
OL = -00, lL = OG.
Lemma 4.1.10 Under the notation of the previous definition, II(G) is a lin-
early ordered product algebra and the group corresponding to II(G) by 4.1.8
is just G.
Proof
by elementary checking.
o
Corollary 4.1.11 If an identity T =
(J in the language of product algebras
is valid in the standard product algebra [0, l]rr with truth functions then it is
valid in all linearly ordered product algebras.

Proof
as in 3.2.11.
PRODUCT LOGIC, aODEL LOGIC
93
o
Remark 4.1.12 This representation evidently extends to the representation of
linearly ordered II6 -algebras, i.e. product algebras with the projection added
(.6(1) = 1, .6(x) = 0 otherwise). Thus we immediately get the following.
Theorem 4.1.13 (Completeness.)
(1) A formula rp is provable in the product logic II iff it is a I-tautology of
the product logic.
(2) Let T be a finite theory over II, rp a formula. T proves rp over the product
logic iff it is true in each model of T (in the sense of II).
(3) The claims (1)-(2) remain valid if II is extended by the connective .6
and by the corresponding axioms (.61)-(.65), together with the rule of
necessitation.
*
We now show that Lukasiewicz logic L has a faithful interpretation in II.
The main idea is that of 2.1.23: Lukasiewicz conjunction on [0, 1] is isomor-
phic to restricted product max(a,x· y) on [0,1] for each 0 < a < 1. More
than that:
Lemma 4.1.14 For each a such that 0 < a < 1, the standard MV-algebra on
[0, 1] is isomorphic to the algebra ([a, 1], *a, =}a, na,Ua,Oa, l a) where, for
all a ~ x, y ~ 1,
x *a Y = max(a,x· y),
X =}a Y =
X =}rr y, (Goguen implication),
na , Ua are min and max on [a, 1],
Oa = a, l a = 1.
Proof
The isomorphism is
fa(x) = a1- x (= (*)X-l); f;;l(y) = 1-logay. We compute:
fa(x).fa(Y)
2: a iff a2- x- y 2: a iff 2 - x - y
~ 1 (note a < I!) iff
x + y - 1 2: O. If this holds then
fa(x + y - 1) = a-x- y+2 = a1-x.a1- y = fa(x)·fa(Y)·
For x2:Y, fa(l - x + y) = aX - Y = a1-Yja1- x = fa(y)j fa(x) = fa(Y) =}n
fa (x). The rest is evident.
0

94
CHAPTER FOUR
Definition 4.1.15 Let Po be a propositional variable. For each formula tp of
L not containing Po, define its translation tpIT as follows: (O)IT is Po, for each
propositional variable q different from Po, qIT is q VPo; (tp -+ 'ljJ)IT is (tpIT -+
'ljJIT); (tp&'ljJ)IT is Po V (tpIT 0 'ljJIT).
Lemma 4.1.16
(1) Under the previous notation, tp is a I-tautology of L iff
-'-'Po -+ tpIT is a I-tautology of II.
(2) Furthemore, let T be a theory and let TIT = {-,-'po} u {aITla E T}.
Then tp is true in all L-models ofT iff tpIT is true in all II-models of TIT.
Proof
e runs over evaluations, tp over formulas not containing the variable
Po. For each e such that 0 < e(po < 1 we define its shift et and its cut e-t
as follows: et(po) = e-t(po) == e(po) = a; for each variable q different from
Po, et(q) = fa(e(q)), e-t(q) = max(e(q), a). The following properties are
evident from the preceding (still assuming 0 < a < 1):
(i) edtp) = eh(tpIT),
(ii) eIT(tpIT) = en(tpIT)
(iii) there is an evaluation esuch that e-t = et .
Now let tp be an L-tautology. If e(po)
=
0 then e(-,-,po)
=
0 and
e(-'-'Po -+ tpIT) = 1 If e(po) = 1 then e(tpIT) = 1 for each tp. Thus let
0< e(po) < 1. Then eIT(tpIT) = en(tpIT) = eh(tpIT) = eL(tp) = 1. Thus the
formula -'-'Po -+ tpIT is a II-tautology.
Conversely let -'-'Po -+ tpIT be a II-tautology; take an arbitrary e and
assume 0 < e(po) < 1 (this does not affect edtp)). Nowedtp) = eh(tpIT) =
1 since eh(-,-,po) = et (-,-,po -+ tpIT) = 1. This completes the proof of (1).
The proof of (2) is similar.
0
Corollary 4.1.17 The mapping assigning the formula -'-'Po -+ tpIT to each
formula tp not containing Po is a faithful embedding of L into II: I-L tp iff
I-IT -'-'Po -+ tpIT for each tp. Moreover, if TIT is as above then T I-L tp iff
TIT I-IT tpIT.
Proof
This is an immediate consequence of the preceding lemma and the
completeness theorem.
0
Corollary 4.1.18 II does not satisfy strong completeness for infinite theories.
Immediate from Example 3.2.14 and the faithful embedding.

PRODUCT LOGIC, OODEL LOGIC
95
Remark 4.1.19 The reader may show as an easy exercise that linearly or-
dered MV-algebras are exactly all algebras of the fonn MV'(L, a) where L
is a linearly ordered product algebra, a ELand OL < a < IL, the domain of
MV'(L, a) is the interval [a,IL] and the operations are defined analogously
to 4.1.15.
Lemma 4.1.20 Let T be a theory over Il.
(1) IfT U {<p} is inconsistent then T f- '<p.
(2) For each <p, at least one of the theories T U {<p}, T U {'<p} is consistent.
Proof
(1) If T U {<p} is inconsistent then for some n, T
f- <pn -+ 0; but then
T f- <p -+ 0 by iterated use of 4.1.3 (Il f- (<p <:) <p -+ 0) -+ (<p -+ 0)).
(2) Assume both theories are inconsistent, then T f- ,<p and T f- ,,<p, thus
T f- ,<p <:) ,,<p, and T f- 0; by 2.2.12.
o
Corollary 4.1.21 For each consistent theory T (over II) and each fonnula <p,
there is a model e of T such that e(<p) = 1 or there is a model e of T such
that e(<p) = O. Consequently, there is no fonnula <p defining a non-extremal
truth constant (e.g. !). This contrasts with Lukasiewicz logic (cf. 3.3.11).
Remark 4.1.22 A direct analogy of Rational Pavelka logic over Il is impos-
sible: the corresponding Completeness theorem fails badly due to the discon-
tinuity of Goguen implication. Indeed, take the system analogous to RPL but
over II, let T = {p -+ 1'1 T positive}, r.p = p -+ 0(= ,p). Then evidently
11<pIIT = 1; but on the other hand, T If p -+ 0since then p -+ 0would be
provable from a finite subtheory To of T but this is impossible: if TO is the
smallest number r such that the axiom p -+ l' is in To then To has a trivial
model e with e(p) = roo Moreover, 1<pITo = 0 since if for some s > a T
proved 8 -+ (p -+ 0) then T f- p -+ (8 -+ 0), thus T f- P -+ 0 by the defini-
tion of Goguen implication. (Exercise: but show that over RPL, 1<pIT would
be 1.)
The question remains if there is another way of proving partially true con-
clusions in II. One simple (lazy) way is as follows:

96
CHAPTER FOUR
Definition 4.1.23 Let r be a non-extremal rational number (0 < r < 1);
enrich II6 by the single truth constant f and axioms saying that f is non-
extremal:
The semantics is as in II6, with e(f) = r for each evaluation e. (Note that
this gives infinitely many formulas with constant semantics, namely fn =
f 8 ... 8 f; you may call then r n .) Call this calculus II6(f).
Lemma 4.1.24 Let T be a theory over II6(f) and ep a formula of II6(f); let
Po be a variable not occuring in T, ep and for each formula a not containing
po,let a~ result from a by replacing f by Po. Let T~ be the theory (over II6)
such that T~ = {"po} U {a~Ia E T}. Then ep is true in each model of T
(over IIdf)) iff ep is true in each model ofT~ (over II6 ).
Proof
The implication (-¢=) is obvious; to prove the converse just observe
that for any non-extremal r, s (0 < r, S < 1) there is an automorphism f of
[0, l]rr such that f(r) = s (f(x) = xd for an appropriate real d); thus if ep(f)
is true in all models ofT(f) then ep(s) is true in all models ofT(s) and hence
ep(Po) is true in all models of T (Po).
0
Corollary 4.1.25 (Completeness.)
(1) A formula ep is provable in II6 (f) iff it is a I-tautology of II6 (f).
(2) Let T be a finite theory over IIdf); a formula ep is provable in T over
II6 (f) iff it is true in all II6 (f)-models ofT.
Remark 4.1.26
(1) Note that over II6 , T may be consistent whereas both
TU{ep}, TU{.ep} may be inconsistent. For example, let T = {••p,.6-
p}; then e is a model ofT iff 0 < e(p) < 1, but (T,p)l-6-p and (T, .p) I-
.p which shows that both theories are inconsistent (since T proves .6-p
and ••p).
(2) Note also that over II6, TU{ep} is inconsistent iffT I- .6-ep (Exercise.)
Example 4.1.27 Recall Example 3.3.21 on large numbers. Let us discuss the
same situation in II (probably with an added truth constant f with 0 < r < 1.
Again we have propositional variables Po, .. . ,PIOOOOOO and To =
{pi --+
Pi+lli < 106}.

PRODUCT LOGIC, GODEL LOGIC
97
(1) T1 is the extension of To by PI000000 and if
4
(PHI
4
Pi) (for
i < 106), i.e. by r 0 Pi+! 4 Pi. Tl proves (r)i 0 Pi 4
Po, i.e. r i 0 Pi 4
Po,
thus if e is a model of T1, e(pi) = Xi then Xi ~ XO· (:)i. Hence either Xo = 0
and then all Xi = 0 (unwanted!) or Xo > 0 and the maximal model satisfies
Xi = min(l,xo· (:)i). This e is a model ofTI iff (:)1000000 > Xo. (We
imagine r slightly less than 1, thus: slightly bigger than 1.)
(2) Now let T2 result from To by adding the axioms (Pi+d 2 ---+ Pi. Let e
be a model of T2 and Xi = e(pi) as above; then xl+! ~ Xi (here the square
is in the sense of reals!). Thus in a non-trivial case, Xo > 0, XlOOOOOO < 1 and
for the maximal model e with Xo = z we get Xi = z2-
i
. The sequence of Xi'S
for i 4
00 has the limit 1, but Xi < 1 for all i. Compute (some) members of
the sequence of xi's for various choices of z.
4.2.
GOOEL LOGIC
The last (but not least) of our three most important logics given by a contin-
uous t-norm is Godellogic G interpreting & as minimum. We shall subject it
to the same analysis as the previous two.
Definition 4.2.1 The axiom system of G is the extension of the axiom system
of BL by the single axiom
(G)
ep ---+ (ep&ep)
stating (together with (ep&ep) ---+ ep) the idempotence of &.
Lemma 4.2.2 G proves (ep&7/;) == (ep 1\ 7/;).
Proof
Clearly, BL I- (ep&7/;) ---+ (epl\7/;); on the other hand, BL I- (epl\7/;) ---+
ep, BL I- (ep 1\ 7/;) ---+ 7/;, hence BL I- [(ep 1\ 7/;)&(ep 1\ 7/;)] 4
(ep&7/;) and G
I- (epl\7/;) 4
[(ep 1\ 7/;)&(epl\ 7/;)].
0
Thus we may get rid in G of one conjunction, say &; thus we may present
GOdellogic equivalently as follows:
Definition 4.2.3 The axiom system G' has the connectives 1\, ---+, 0 and ax-
ioms (Al)-(A3), (A5)-(A7) ofBL, with & replaced by 1\ plus the axiom (G4):
ep ---+ (ep 1\ ep).
Other connectives are defined as follows:
-'ep is ep ---+ 0, (ep == 7/;) is (ep 4
7/;) 1\ (7/; 4
ep),
(ep V 7/;) is ((ep ---+ 7/;) 4
7/;) 1\ ((7/; 4
ep) 4
ep).

98
CHAPTER FOUR
We have to verify that the definition of /\ from & gives nothing new here:
Lemma 4.2.4 (I) G' proves (ep /\ (ep -t 'ljJ)) -t ('ljJ /\ ('ljJ -t ep)).
(2) G' proves (ep /\ 'ljJ) == ep /\ (ep -t 'ljJ).
Proof
Clearly, if BL proves a formula a (using only connectives -t, &, 0)
then G' proves the result a' of replacing each & by /\. Thus checking that (A4)
was not used in the proofs of 2.2.7,2.2.8, we get G' I- (ep /\ (ep -t 'ljJ)) -t'ljJ
(by (4) there), G' I- (ep /\ (ep -t 'ljJ)) -t ('ljJ -t ep) (by (1), (A2) and (AI», and
hence (ep /\ (ep -t 'ljJ) -t ('ljJ /\ ('ljJ -t ep)) by (7), using the axiom (G4) for the
formula ep /\ (ep -t 'ljJ). This proves our (1).
To get our (2) observe that G' I- 'ljJ -t (ep -t 'ljJ), G' I- (ep /\ 'ljJ) -t
(ep /\ (ep -t 'ljJ)). Conversely, G' I- (ep /\ (ep -t 'ljJ)) -t 'ljJ, thus G' proves
[ep /\ (ep -t 'ljJ)] -t [ep /\ ep /\ (ep -t 'ljJ)] -t [ep /\ 'ljJ].
0
Corollary 4.2.5 G and G' are equivalent in the sense that G I- a iff G' I- a'
(where a' results from a by identifying &, /\). Thus in the sequel we shall not
distinguish between G and G'.
GOdellogic is closely related to a famous logical system called intuitionist
logic; we shall describe it precisely.
Definition 4.2.6 The intuitionist logic I has the connectives -t, /\, V, -, and
the following axioms:
(11) (ep -t 'ljJ) -t (('ljJ -t X) -t (ep -t X))
(12) ep -t (ep V 'ljJ)
(13) 'ljJ -t (ep V 'ljJ)
(14) (ep -t X) -t (('ljJ -t X) -t ((ep V 'ljJ) -t X)))
(15) (ep /\ 'ljJ) -t ep
(16) (ep /\ 'ljJ) -t 'ljJ
(17) (X -t ep) -t ((X -t 'ljJ) -t (X -t (ep /\ 'ljJ)))
(18) (ep -t ('ljJ -t X)) -t ((ep /\ 'ljJ) -t X)
(19) ((ep /\ 'ljJ) -t X) -t (ep -t ('ljJ -t X))
(110) (ep /\ -,ep) -t 'ljJ

PRODUCT LOGIC, GODEL LOGIC
(111) (<p -+ ('ljJ /\ -,'ljJ)) -+ -,'ljJ
Lemma 4.2.7 G proves all axioms of I.
99
Proof
In fact, BL proves (I1)-{I7) and (110), (111) as they stand and (18),
(19) with & instead of /\.
0
Remark 4.2.8 Conversely, it can be shown that I extended by the axiom (A6)
(or, alternatively, by (<p -+ 'ljJ) V ('ljJ -+ <p» proves all axioms of G plus
(<p V 'ljJ) =((<p -+ 'ljJ) -+ 'ljJ) /\ (('ljJ -+ <p) -+ <p) (the definition of V in BL).
Indeed, I I- <p -+ ((<p -+ 'ljJ) -+ 'ljJ), I I- <p -+ (anything -+ <p), similarly for 'ljJ;
thus
I I- (<p V'ljJ) -+ [((<p -+ 'ljJ) -+ 'ljJ) /\ (('ljJ -+ <p) -+ <p)]. Conversely,
I I- (<p -+ 'ljJ) -+ [((<p -+ 'ljJ) -+ 'ljJ) -+ 'ljJ], thus
I I- (<p -+ 'ljJ) -+ [((<p -+ 'ljJ) -+ 'ljJ) /\ (('ljJ -+ <p) -+ <p)] -+ (<p V'ljJ);
similarly, I I- ('ljJ -+ <p) -+ [...] -+ (<p -+ 'ljJ), thus, by (A6), I I- [...] -+
(<p V 'ljJ).
Hence G is just the extension of I by (A6). Caution: in I the connective V
is not definable from the others.
Lemma 4.2.9 G proves the formula
(<p -+ ('ljJ -+ X)) -+ ((<p -+ 'ljJ) -+ (<p -+ 'ljJ)).
Proof
This is because evidently
BL I- (<p -+ ('ljJ -+ X)) -+ ((<p -+ 'ljJ) -+ ((<p&<p) -+ X)·
o
Theorem 4.2.10
(1) G has the classical deduction theorem: for each theory
T over G and formulas <p, 'ljJ,
TU{<p}I-'ljJ
iff
TI-(<p-+'ljJ).
(2) G is the only logic PC(*) having the classical deduction theorem; i.e. if
PC(*)has the classical deduction theorem then * is minimum.
Proof
(1) follows from the deduction theorem 2.2.18 for BL, observing that in G
for each n
<pn is equivalent to <po (An alternative proof is by observing
that the proof of the deduction theorem in classical logic works here; but
this is almost the same proof.)

100
CHAPTER FOUR
(2) Assume PC(*) has the classical deduction theorem; since evidently {ep} f-
ep&ep (thanks to f- ep -+ (ep -+ (ep&ep))), we get f- ep -+ (ep&ep), which
means that * is idempotent. Thus let x, Y E [0,1] and assume x
~ y;
then x *y ~ x *x = x and obviously x *y ~ x * 1 = x, thus x *y = x.
D
Lemma 4.2.11 G proves (ep -+ -,ep) -+ -'ep.
Proof"
Indeed, G proves
rep -+ (ep -+ 0)] -+ [(ep 1\ ep) -+ 0] -+ rep -+ 0].
D
*
Definition 4.2.12 BL-algebras satisfying the identity x * x
idempotent multiplication) are called G-algebras.
x (i.e. with
Remark 4.2.13 For the reader knowing the notion of a Heyting algebra we
mention that a G-algebra is just a Heyting algebra satisfying prelinearity:
(x =? y) U (y =? x) = 1.
To get the completeness theorem we need some lemmas.
Lemma 4.2.14 Let H be a linearly ordered G-algebra.
(1) For each x, y, x > y implies (x =? y) = y.
(2) Each subset of H containing OH and IH is a subalgebra.
Proof"
(1) z ~ (x =? y) implies xnz ~ y; thus ifx> y we getxnz < x, xnz = z,
thus z ~ y. Hence (x =? y)
~ y; conversely y
~ (x =? y) in each
residuated lattice.
(2) follows: in a linearly ordered H, x n y = x or x n y = y, similarly for
U, (x =? y) = lor (x =? y) = y.
D
Corollary 4.2.15
(1) If HI, H2 are two finite linearly ordered G-algebras of
the same cardinality then they are isomorphic.

PRODUCT LOGIC, GODEL LOGIC
101
(2) Each at most countable linearly ordered G-algebra is isomorphic to a
subalgebra of the standard linearly ordered G-algebra [0, 1]G; moreover,
it is isomorphic to a subalgebra of the G-algebra of rational elements of
[O,I]G.
Proof
(1) They are isomorphic as linearly ordered sets; but the linear order deter-
mines all the operations.
(2) Again this follows immediately from the fact that each countable l;near
order can be isomorphically embedded to rationals from [0,1].
o
Lemma 4.2.16 If an identity T = CJ in the language of G-algebras is valid in
the standard Heyting algebra [O,I]G of truth functions then it is valid in all
linearly ordered G-algebras.
Proof
Let T =
CJ be violated by al, . .. , an E H;. thus it is violated in
HI = {a, aI, ... ,an, I} as a subalgebra of H. Take an isomorphic copy H 2
which is a subalgebra of [0, I]G; T =
CJ is violated in H2 and hence in [O,I]G.
o
This can be used for a completeness theorem as in L and II; but here we
may do better -
we get a strong completeness for arbitrary, not necessarily
finite, theories.
Theorem 4.2.17 (Completeness.y23
(1) A formula cp of Godellogic G is provable in G iff it is a I-tautology of
G.
(2) For each theory T over G and each formula cp, T proves cp (over G) iff cp
is true in each model of T (over G).
(3) This generalizes for G/:'; -
the extension of G by the connective 6. and
the axioms (6.1-6.5).
23 See [46].

102
CHAPTER FOUR
Proof
Soundness is routine; to prove completeness we show that if T If cP
then there is a model e of T over the rationals from [0, 1] such that e(cp) < 1.
By 2.4.3, T has a model e over Lt (where T is a completion of T) such that
e(cp) < It; by 4.2.15, Lt can be isomorphically embedded into the rationals
from [0,1] (as a Heyting algebra), which gives the result. This proves (1),(2).
To get (3) use 2.4.12 instead of 2.4.3.
0
*
We shall now discuss the behaviour of GOdel logic with respect to partial
truth.
Theorem 4.2.18 For each theory T over G, each formula cp and each rational
r such that 0 < r ::; 1, T f- cp iff each evaluation e such that e(a)
~ r for
each axiom a E T satisfies e(cp) ~ r (i.e. if e makes all axioms r-true then it
makes cp r-true).
Proof
Assume T f- cp and e(a)
~ l' for each a E T; if CPl,'"
,CPn is a
proof of cP then show e(cpi) ~ a by induction, observing that if e(cpd ~ a
and e(CPi -7 CPj) ~ a then e(CPj) ~ a /\ a = a (cf. 2.1.3).
Conversely, if 1'0 is such that 0 < 1'0 < 1 and each e making T ro-true
makes cP ro-true then for each 0 < l' < 1, each e making T r-true makes
cP r-true (just take any monotone one-one mapping of [0, 1] onto itself such
that i (1') =
1'0 and observe that assigning to each e a valuation e' such that
e'(p) = i(e(p)) we map the set of all evaluations onto itself, and for each
formula'lj.;, e('lj.;) ~ riff e'('lj.;) ~ 1'0. Thus for each l' < 1 we get: if e makes
T r-true then it makes cP r-true. It follows easily that this must also hold for
l' = 1 and hence T I- cP by the above completeness theorem.
0
It is easy to show that the theorem generalizes for G/':,..
Remark 4.2.19 Observe that Lemma 4.1.20 and corollary 4.1.21 also holds
for G instead of II. Thus if T U {cp} is inconsistent then T f- -'cP; and if T
is consistent then T U {cp} or T U {-,cp} is also consistent. Thus no formula
defines a non-extremal truth-constant over G. Over G /':,. we may use finitely
many rational truth constants, as the next theorem shows.
Definition 4.2.20 Fix finitely many rationals 0 < 1'1 < ... < l'n < 1. The
logic G /':,. (1'1, ... ,rn ) has the language with b., 1'1, ... ,1';;
ri /\ rj
ri -7 rj
~-7fj
min(ri,rj),
I for i ::; j,
rj for j < i,
-, !:::. rio

PRODUCT LOGIC, GODEL LOGIC
103
Semantics over [0, l]a is obvious, if we postulate e(rd = ri, i = 1, ... , n.
Theorem 4.2.21 Let T be a theory over G I:::. (rl , ... , r n), <p a formula. T I-- <p
iff e(<p) = 1 for each model e ofT.
Proof
Let T' consist of the axioms of T plus all additional axioms of
G I:::. (rl' ... , r n) (not being axioms of G 1:::.). Over G 1:::., consider rdust as new
formulas. By 4.2.17, there is a complete extension T of T and a model e of
T over Lf such that e(<p) < 1. Moreover, 0 < e(rl) < ... < e(rn ) < 1
thanks to the bookkeeping axioms. Now you may clearly embed Lf isomor-
phically into rationals from [0,1] by an isomorphism i such that i(fi) =
rl,""
i(r~) = rn . This produces the desired model over [0, l]a.
0
Remark 4.2.22 But we cannot have Pavelka-style completeness (provabili-
ty degree = satisfiability degree) for infinite theories over RPG due to the
non-continuity of Godel implication. Let T = {p -+ rl r > O}; we show
II-,pIIT = 1, l-,plT = O. Indeed, T If P -+ 0 by compactness. Moreover, if
r > 0 and T I-- r -+ (p -+ 0) then T
I-- p -+ (r -+ 0), T I-- p -+ r ~ 0 and
hence T I-- p -+ 0(note r ~ 0 = 0 for> 0). Thus sup{rlT I-- r -+ -,p} = O.
4.3.
ApPENDIX: BOOLEAN LOGIC
Having developed our basic propositional logic as well as its three most im-
portant strengthenings L, II and G, let us now ask how this relates to the
classical (Boolean, two-valued) propositional logic.
Definition 4.3.1 BL2 is the extension of BL by the single axiom
<p V -'<p
Note that this axiom is known under the name tertium non datur; BL2 stands
for Basic logic with tertium non datur.
Lemma 4.3.2 BL2 proves <p -+ <p&<p, i.e. BL2 extends G.
Proof
Clearly,
BLI-- <p -+ (<p -+ (<p&<p)) and
BLI-- -'<p -+ (<p -+ (<p&<p)), thus
BLI-- (<p V -'<p) -+ (<p -+ (<p&<p)), hence
BL21-- <p -+ (<p&<p).
o

104
CHAPTER FOUR
Remark 4.3.3 Thus BL2 extends intuitionistic logic, proves tertium nod datur
and is sound for evaluations by zeros and ones. This implies that BL2 is a
sound and complete axiomatization of classical propositional calculus Boot
by properties of intuitionistic and classical logic known to experts. For the
reader's convenience, we provide BL2-proofs of the usual axioms of Boot
(cf. 1.2.5, 1.2.6) and show how completeness ofBL2 w.r.t. {O, l}-evaluations
quickly follows from what we already have made.
Lemma 4.3.4 BL2 proves the following formulas:
(1) <p -t ('ljJ -t <p)
(2) "<p -t <p
(3) (<p -t ('ljJ -t X)) -t ((<p -t 'ljJ) -t (<p -t X))
(4) (.<p -t .'ljJ) -t ('ljJ -t <p)
Proo!'
(1) is provable in BL and (3) is provable in G. To prove (2) observe
the following:
BU- <p -t (••<p -t <p) by (1),
BLI-.<p -t (••<p -t cp) (cf. 2.2.12), thus
BLI- (<p V .cp) -t (••cp -t <p) and hence
BL21- "<p -t <po
Thus BL21- "<p == <p and (4) follows by 2.2.12(18/) by removing double
negations.
0
Lemma 4.3.5 (i) Bool proves the following formulas:
<p-t<p
(<p -t 'ljJ) -t (('ljJ -t X) -t (<p -t X))
(cp -t ('ljJ -t X)) -t ('ljJ -t (<p -t X))
"<p -t <p
(<p -t 'ljJ) -t ((<p -t .'ljJ) -t .<p)
O-t<p
(<p -t 'ljJ) -t (.'ljJ -t .<p)
'<p -t (<p -t 'ljJ)
(1)
(2)
(3)
(4)
(5)
(6)
(7)
(8)
(9)

PRODUCT LOGIC, GODEL LOGIC
ep ---+ (-,'ljJ ---+ -,(ep ---+ 'ljJ))
(ep ---+ 'ljJ) ---+ ((-'ep ---+ 'ljJ) ---+ 'ljJ)
((ep ---+ 'ljJ) ---+ 'ljJ) ---+ (('ljJ ---+ ep) ---+ ep)
(ii) Bool has the deduction theorem (cf. 1.2.10):
(T U {ep}) I- Eool 'ljJ iffT I- Eool (ep ---+ 'ljJ).
105
(10)
(11)
(12)
Proof
(1) (ep ---+ ((ep ---+ ep) ---+ ep)) ---+ ((ep ---+ (ep ---+ ep)) ---+ (ep ---+ ep))
(Bool2)
ep ---+ ((ep ---+ ep) ---+ ep)
(B ooll)
(ep ---+ (ep ---+ ep)) ---+ (ep ---+ ep)
(modus ponens)
ep ---+ (ep ---+ ep)
(Booll)
ep ---+ ep
(modus ponens)
Having (1) we prove the deduction theorem: If T I- (ep ---+ 'ljJ) then trivially
(T U {ep}) I- 'ljJ (prolong a T-proof of (ep ---+ ep) by ep, 'ljJ). Conversely, given
a (T U {ep} )-proof (Xl, •.• ,(Xn of'ljJ, show by induction that T I- ep ---+ (Xi (for
(Xi a logical axiom or a T-axiom using (Booll), for (Xi being ep using our (1)
and for (Xi resulting by modus ponens using (Bool2)).
Now we prove the formulas (2)-(12) with the help of the deduction theo-
rem.
(2) (ep ---+ 'ljJ), ('ljJ ---+ X), 'ljJ I- X (by modus ponens), thus (ep ---+ 'ljJ), (ep ---+
X) I- ep ---+ X, (ep ---+ 'ljJ) I- ('ljJ ---+ X) ---+ (ep ---+ X), and finally I- (ep ---+ 'ljJ) ---+
(('ljJ ---+ X) ---+ (ep ---+ X))·
(3) Similarly using the Deduction theorem.
(4) ep, ep ---+ 0 I- 0, thus I- ep ---+ ((ep ---+ 0) ---+ 0), i.e. I- ep ---+ -'-'ep.
(5) I- -'ep ---+ -'-'-'ep by (4), thus I- -'-'ep ---+ ep by (Bool3).
(6) Use (ep ---+ 'ljJ), (ep ---+ ('ljJ ---+ 0)), ep I- 0 and the Deduction theorem.
(7) I- 0 ---+ 0 by (1), thus I- -,0,
I- -'ep ---+ -,0 by (Booll), and hence
I- 0 ---+ ep by (Bool3).
(8) I- (ep ---+ 'ljJ) ---+ (('ljJ ---+ 0) ---+ (ep ---+ 0)) by (2).
(9) I- (ep ---+ 0) ---+ (ep ---+ 'ljJ) by (2), (3) and (7)
(10) I- ep ---+ ((ep ---+ 'ljJ) ---+ 'ljJ) by (3) and (1); then I- ep ---+ (-,'ljJ ---+ -,(ep---+
'ljJ)) by (8) and (2).
(11) (ep ---+ 'ljJ), (-,cp ---+ 'ljJ), -,'ljJ I- 'ljJ by (8), thus
(cp ---+ 'ljJ), (-,cp ---+ 'ljJ), -,'ljJ I- 0 (since ... 'ljJ ---+ 0)), then
(cp ---+ 'ljJ), (-,cp ---+ 'ljJ) I- -,-,'ljJ and
I- (cp ---+ 'ljJ) ---+ ((-'cp ---+ 'ljJ) ---+ 'ljJ) by (5) and Deduction.
(12) cp, (cp ---+ 'ljJ) ---+ 'ljJ I- ('ljJ ---+ cp) ---+ cp by (Booll);
'ljJ, (cp ---+ 'ljJ) ---+ 'ljJ I- ('ljJ ---+ ep) ---+ cp since 'ljJ, ('ljJ ---+ cp) I- ep;
-'cp, -,'ljJ, (ep ---+ 'ljJ) ---+ 'ljJ I- 'ljJ, -,'ljJ by (9), thus ... I- 0 and

106
CHAPTER FOUR
-'cp, -,7jJ, (cp -t 7jJ) -t 7jJ I- (7jJ -t cp) -t cp by (7).
The second and last line give, by (11),
-'cp, (cp -t 7jJ) -t 7jJ I- (7jJ -t cp) -t cp,
which with the first line, using again (11), gives
(cp -t 7jJ) -t 7jJ I- (7jJ -t cp) -t cpo
o
Corollary 4.3.6 BL2 is equivalent to the classical propositional calculus Bool
as described in 1.2.5, 1.2.6.
Proof
The items (1), (3), (4) above are just the axioms of Bool. The def-
inition of 1\ in Bool, (cp 1\ 7jJ) == -, (cp -t -,7jJ) is provable in BL2 by the
same proof as in 3.1.1 and so is the definition of Vfrom 1\ (i.e. from &) since
BL2 proves the law of double negation and therefore extends L. Thus BL2
extends Bool. Conversely, by 4.3.5, Bool proves all the axioms of the original
Lukasiewicz's system L' (see 3.1.3) and hence proves all the axioms of BL
(see 3.1.9, 3.1.16). Finally, Bool proves cp V -'cp (i.e. (cp -t -,cp) -t -,cp)) by
4.3.5 (6) and (1).
0
Lemma 4.3.7 BL2-algebras are just Boolean algebras. Thus there are exactly
two linearly ordered BL2-algebras: the (degenerate) one-element algebra and
the two-element Boolean algebra {a, I}.
Proof
BL2-algebras are particular G-algebras, satisfying tertium non datur,
thus distributive complementary lattices, i.e. Boolean algebras. If a Boolean
algebra has a non-extremal element a (different from 0 and 1) then a and
(- )a are incomparable, hence the algebra is not linearly ordered.
0
Theorem 4.3.8 (Completeness.) BL2 proves cp iff cp is a {a, 1}-tautology.
More generally, for each theory T over BL2, T I- cp iff cp is true in each
{a, l}-model ofT.
Proof
Since there is just one non-trivial linearly ordered BL2-algebra, the
theorem is a direct consequence of the completeness theorem 2.4.3 for
schematic extensions of BL.
0
To close this minisection, we show that the union of any two of our three
logics L, G, II gives BL2.

PRODUCT LOGIC, GODEL LOGIC
Theorem 4.3.9
(1) LUG is equivalent to BL2.
(2) LUll is equivalent to BL2.
(3) Gull is equivalent to BL2.
107
Proof
We already know that BL2 extends G and L and it is easy to show
that it extends II. Indeed, BL2 proves (cp 1\ -,cp)
~ 0 since G proves it;
and since BL2 proves -'-'cp == cp, BL2-provability of the second axiom of II
reduces to
BL2f- X ~ (((cp 1\ X) ~ ('ljJ 1\ X)) ~ (cp ~ 'ljJ)), i.e.
BL2f- X ~ (cp ~ (((cp 1\ X) ~ ('ljJ 1\ X)) ~ 'ljJ)), i.e.
BL2f- (cp 1\ X) ~ (((cp 1\ X) ~ ('ljJ 1\ X)) ~ 'ljJ), which is evident.
Let us prove the converse. (1) G proves the first two axioms of classical
logic and L proves the third.
(2) II proves -'cp V -'-'cp and L proves -'-'cp == cp, thus their union proves
tertium non datur.
(3) II f- -'-'cp ~ (((1&cp) ~ (cp&cp)) ~ (1 ~ cp)) and Gf- (I&cp) ~
(cp&cp), thus GUll proves -'-'cp ~ cp. Thus continue as in (2).
0

CHAPTER FIVE
MANY-VALUED PREDICATE LOGICS
We are now ready to start our investigation offuzzy predicate logics (or first-
order logics, quantification logics). We shall develop logics broadly analo-
gous to the classical predicate logic; in particular, we shall deal only with
two quantifiers, V and 3 (universal and existential). Generalized quantifiers
will be studied in later chapters. In Section 1 we shall develop the predicate
counterpart BLV of our basic propositional logic BL; in Section 2 we prove
a rather general completeness theorem for predicate logics (with respect to
semantics over residuated lattices). Sections 3 and 4 are devoted to GOdel
and Lukasiewicz predicate logics respectively; we show that Godel predi-
cate logic has a recursive axiomatization that is complete with respect to the
semantics over [0,1], whereas for Lukasiewicz we only present a variant of
Pavelka logic. (We show in the next chapter that Lukasiewicz does not have
a recursive complete axiomatization.) We close Sec. 4 with some for remarks
on the predicate product logic. Sec. 5 discusses many-sorted calculi and Sec.
6 introduces and studies similarity (fuzzy equality). This notion will be cru-
cial for our analysis of fuzzy control in Chap. 7.
5.1.
THE BASIC MANY-VALUED PREDICATE LOGIC
Definition 5.1.1 A predicate language consists of a non-empty set of predi-
cates, each together with a positive natural number -
its arity and a (possibly
empty) set of object constants. Predicates are mostly denoted by P, Q, R, ... ,
constants by c, d, ... Logical symbols are object variables x, y, . .. , con-
nectives &, -+, truth constants 0, I and quantifiers "1,3. Other connectives
(1\, V,..." =) are defined as in the previous chapters. Terms are object vari-
ables and object constants.
Atomicformulas have the form P(tl, ... , tn ) where P is a predicate of ar-
ity n and tl, ... , t n are terms. If cp, ?jJ are formulas and x is an object variable
then cp -+ ?jJ, cp&'IjJ, ("Ix)?jJ, (3x)cp, 0, I are formulas; each formula results
from atomic formulas by iterated use of this rule.
Let J be a predicate language and let L be a linearly ordered BL-algebra.
An L-structure M
=
(M, (rp )p, (mc)c) for J has a non-empty domain
M, for each n-ary predicate PaL-fuzzy n-ary relation rp : M n -+ Lon
M (associating to each n-tuple (ml,' .. ,mn ) of elements of M the degree
109

110
CHAPTER FIVE
rp(ml,.'"
m n ) E L of the membership of (ml, ... ,m n ) to the fuzzy rela-
tion) and for each object constant c, me is an element of M.
Example 5.1.2 J has one binary predicate like and one object constant
Mary. L is the lattice [O,I]L' M = {I, 2, 3}, mMary = 1, rlike is given
by the following matrix.
I 1
2
3
1
1
0.3
0.7
2
0.9
0.9
0
3
0.9
0.1
0.8
Definition 5.1.3 Let J be a predicate language and M an L-structure for J.
An M-evaluation!of object variables is a mapping v assigning to each object
variable x an element v(x) E M. Let v, v' be two evaluations. v =x v' means
that v(y) = v'(y) for each variable y distinct from x.
The value of a term given by M, v is defined as follows: IlxllM,v
=
v(x); IIclIM,v = me' We define the truth value IIcplI~,v of a formula. Clearly,
=} and * denote the operations of L.
IIP(tl, ... , tn)II~,v = rp(lltIIIM,v, ... , IItnIlM,v);
IIcp ~ 1/J1I~,v =
IIcplI~,v =} 1I1/J1I~,v;
IIcp&1/JII~,v = Ilcpll~,v * 1I1/J1I~,v;
1I01lM,v = 0; IIIIIM,v = 1;
II (V'x )cpll~ v =
inf{llcpll~ vtlv =x v'};
,
,
1I(3x)cpll~,v =
sup{llcpll~,vllv =x v'}
provided the infimum/supremum exists in the sense of L; otherwise the
truth value of the formula in question is undefined.
The structure M is L-safe if all the needed infima and suprema exist, i.e.
Ilcpll~ v is defined for all cp, v.
,
Example 5.1.4 In particular, each finite structure (with finite domain) is safe.
Verify in the trivial example above that II (V'x)like(x, Mary)lI~ v = 0.9 (in-
dependently from v); what is II (3x).like(Mary, x)ll~ v? (Rec~ll that in the
example we work with [0, IlL -
the standard MV-algebra.)
Remark 5.1.5
(1) You will certainly find all these definitions to be rather di-
rect generalizations of the coresponding definitions in the classical pred-
icate calculus. Indeed, if L is the two-element Boolean algebra then we
just give the classical definitions.

MANY-VALUED PREDICATE LOGICS
111
(2) We shall not introduce function symbols, even if this is possible; but
either we can introduce crisp semantics of them (and this is not particu-
larly interesting) or we would have to discuss fuzzy equality. This would
be interesting but we shall not go into it now. (But see Sec. 5.6.)
(3) We shall not repeat the definitions of free and bound variables of a for-
mula neither of substitutability of a term for a variable in a formula (we
only roughly recall that a constant is always substitutable; and a variable
y is substitutable into cp for x if the substitution does not make any free
occurence of x in cp into a bound occurence of y). For precise definitions
see 1.3.6, 1.3.7.
Definition 5.1.6
(1) Let cp be a formula of a language J and let M be a safe
L-structure for J. The truth value of cp in M is
Ilcpll~ =
inf{llcpll~,vl v M-evaluation}.
(2) A formula cp of a language J is an L-tautology if IIcpllM = lL for each
safe L-structure M, i.e. IlcpllM,v = 1 for each safe L-structure M and
each M-valuation of object variables.
Definition 5.1.7
(1) The following are logical axioms on quantifiers:
(VI) (Vx)cp(x) ~ cp(t) (t substitutable for x in cp(x»
(31) cp(t) ~ (3x)cp(x) (t substitutable for x in cp(x)
(V2) (Vx)(v ~ cp) ~ (v ~ (Vx)cp) (x not free in v)
(32) (Vx)(cp ~ v) ~ «3x)cp ~ v) (x not free in v)
(\13) (Vx)(cp V v) ~ «Vx)cp V v) (x not free in v)
(2) Let C be a schematic extension of the basic propositional logic BL. We
associate with C the corresponding predicate calculus CV (over a given
predicate language J) by taking as logical axioms
all formulas resulting from the axioms of C by substituting arbi-
trary formulas of J for propositional variables, and
the axioms (VI), (V2), (V3), (31), (32) for quantifiers
and taking as deduction rules
-
modus ponens (from cp, cp ~ 'l/J infer 'l/J) and
generalization (from cp infer (Vx )cp).
(3) Given this, the notions of proof, provability, theory, proof/provability in
a theory over CV are obvious.

112
CHAPTER FIVE
Remark 5.1.8 In particular, we shall be interested in the basic fuzzy predi-
cate logic BLV and three stronger logics: LV (Lukasiewicz), GV (Gooel), IN
(product). For example, axioms of BLV are (Al)-(A7) of 2.2.4 (with cp, 0/, X
being formulas of predicate logic) and the present five quantifier axioms (\11)-
(32).
Lemma 5.1.9 The axioms (\11),(\12),(\13), (31),(32), are L-tautologies for
each linearly ordered BL-algebra L.
Proof
To verify (\11), (31) show that if Y is substitutable for x to cp then
IIcp(Y)lIkI,v = IIcp(x)lIkI,vlI where v" =x v and v"(x) = v(y) (Caution: a
pedantic proof shows that the assumption of substitutability is indispensable.)
II(Vx)cp(x)llkI v = infv'=:xv IIcp(x)lIkI v' ~ IIcp(Y)lIkI v" ~
~ SU~VI IIcp(x)lIkI v' =
II (3x)cp(x) IlkI v·
'
,
,
We consider (Vx)(v -+ cp(x)) -+ (v -+ (Vx)cp(x)). We have to show
(indices M, L deleted, w runs over all evaluations =x v). Put IIvll v = IIvllw =
a (note that x is not free in v!), IIcpllw = bw ; thus we must prove infw(a ~
bw) ~ (a ~ infwbw). We even prove equality. On the one hand, infwbw ~
bw, thus a ~ bw 2:: a ~ infwbw for each w, thus infw(a ~ bw) 2:: (a ~
infwbw). On the other hand if z
~ (a ~ bw) for each w, then z * a ~ bw
for each w, z *a ~ infwbw, z ~ (a ~ infwbw). Thus (a ~ infwbw) is the
infimum of all (a ~ bw ).
Similarly, we verify infw(aw ~ b) = (suPw aw ~ b). Indeed, sUPw aw 2::
aw, thus (suPw aw ~ b) ~ (aw ~ b), hence (suPwaw ~ b) ~ infw(aw ~
b). If z ~ aw ~ b for all w then aw ~ (z ~ b) for all w, sUPw aw ~ (z ~
b), z ~ (suPw aw ~ b); thus sUPwaw ~ b is the infimum.
Finally we verify (V3); we even prove infw(a Vbw ) = a Vinfwbw . Indeed,
a ~ a V bw, thus a ~ infw(a V bw); similarly, infwbw ~ infw(a V bw), thus
a V infwbw ~ infw(a V bw ). Conversely, let z ~ a V bw for all w; we prove
z ~ a V infwbw •
Case 1. Let a
~ infwbw. Then z
~ bw for each w, z
~ infwbw and
z ~ a V infwbw .
Case 2. Let a > infwbw • Then for some wo, a 2:: bwo , thus z
~ a and
z ~ a V infwbw .
0
Lemma 5.1.10 (Soundness of deduction rules)

MANY-VALUED PREDICATE LOGICS
(1) For arbitrary fonnulas cp, 'ljJ, safe L-structure M and evaluation v,
113
11'ljJ11~,v ~ IIcpll~,v * IIcp -t 'ljJ1I~,v;
thus in particular, if IIcpll~,v = IIcp -t 'ljJ11~,v = 1L then 11'ljJ11~,v = lL·
(2) Consequently,
thus if cp, cp -t 'ljJ are lL-true in M then 7/J is lL-true in M.
(3) IIcpll~ =
11('v'x)cpll~;
thus if cp is lL-true in M then ('v'x)cp is.
Proof
(1) is just as in propositional calculus (from the basic property of residua-
tion). To prove (2) put IIcpllw = aw, 117/Jllw = bw, infwaw = a. We have
to prove infw(aw => bw) ~ infw aw => infw bw. Observe the following:
inf(aw => bw) ~ aw => bw ~ a => bw, thus
inf(aw => bw) ~ infw(a => bw)·
It remains to prove infw(a => bw) ~ a => inf bw, but this is exactly as
in 5.1.9.
(3) is evident from the definition of IIcpll~ (in fact, if X, ... y are the free
variables of cp then IIcpll~ = II ('v'x) ... ('v'y)cpll~.
o
Definition 5.1.11 Let C be a schematic extension of BL, let T be a theory
over C, let L be a linearly ordered C-algebra and M a safe L-structure for the
language of T. M is an L-model of T if all axioms ofT are lL-true in M, i.e.
IIcpllkt = lL in each cp E T.
Theorem 5.1.12 (Soundness of provability.) Let C be a schematic extension
of BL, let T be a theory in the language of T over C'v', let cp be a fonnula of
T. If T I- cp (cp is provable in T) then Ilcpll~ = lL for each linearly ordered
C-algebra L and each L-model M ofT.
Proof
This follows by the obvious induction on the length of a proof.
0

114
CHAPTER FIVE
Remark 5.1.13
(1) Note that if there is a proof of ep (in T, over C) not using
the rule of generalization then we also have the following variant of
soundness: IfL is a linearly ordered C-algebra, M a safe L-structure and
v an M-evaluation of object variables such that lIallt v = 1L for each
axiom a E T then Ilepllt,v = lL·
'
(2) In the rest of this section we shall show several formulas with quantifiers
to be in BDl. Note that the axiom (V'3) will not be used.
*
Theorem 5.1.14 Let ep be an arbitrary formula, v a formula not containing x
freely. Then BLV' proves the following:
(1) (V'x)(v --+ ep) == (v --+ (V'x)ep)
(2) (V'x)(ep --+ v) == ((3x)ep --+ v)
(3) (3x)(v --+ ep) --+ (v --+ (3x)ep)
(4) (3x)(ep --+ v) --+ ((V'x)ep --+ v)
Proof
The implications --+ in (1), (2) are axioms.
(1) f- (V'x)ep --+ ep by (V'1), thus
f- (v --+ (V'x)ep) --+ (v --+ ep) by transitivity. Generalize:
f- (V'x)[(v --+ (V'x)ep) --+ (v --+ ep)), hence
f- (v --+ (V'x)ep) --+ (V'x)(v --+ ep) by (V'2).
(2) f- ep --+ (3x )ep,
f- ((3x)ep --+ v) --+ (ep --+ v),
generalizing and applying (V'2) we get
f- ((3x)ep --+ v) --+ (V'x)(ep --+ v)
(3) f- (v --+ ep) --+ (v --+ (3x)ep),
generalize and apply (32):
f- (3x)(v --+ ep) --+ (v --+ (3x)ep)
(4) f- (ep --+ v) --+ ((V'x)ep --+ v), thus by (32),
f- (3x)(ep --+ v) --+ ((V'x)ep --+ v).
D

MANY-VALUED PREDICATE LOGICS
115
Remark 5.1.15 The converse implications in (3), (4) are not provable in BL.
We shall see later that neither of them is a tautology of G\i; the converse of
(3) is, but the converse of (4) is not a tautology of IN; and both converses are
tautologies of L\i.
Theorem 5.1.16 For arbitrary formulas <p, 'ljJ, BL\i proves the following:
(5) (\ix)(<p ---t 'ljJ) ---t ((\ix)<p ---t (\ix)'ljJ)
(6) (\ix)(<p ---t 'ljJ) ---t ((3x)<p ---t (3x)'ljJ)
(7) ((\ix)<p&(3x)'ljJ) ---t (3x)(<p&'ljJ)
Proof
(5) From f- (\ix)(<p ---t 'ljJ) ---t (<p ---t 'ljJ) and f- (\ix) <p ---t <p we get, using
transitivity,
f- (\ix)(<p ---t 'ljJ) ---t ((\ix)<p ---t 'ljJ).
Generalizing and applying (\i2) twice we get
f- (\ix)( <p ---t 'ljJ) ---t ((\ix)<p ---t (\ix)'ljJ).
(6) Analogously, we get
f- (\ix)(<p ---t 'ljJ) ---t (<p ---t (3x)'ljJ),
from which we get
f- (\ix)(<p ---t 'ljJ) ---t ((3x)<p ---t (3x)'ljJ)
using (\i2) and (32).
(7) Generalize in
f- <p ---t ('ljJ ---t (<p&'ljJ))
and then apply (5); you get
f- (\ix)<p ---t (\ix)('ljJ ---t (<p&'ljJ))
and using (6) you get
f- ((\ix)<p ---t ((3x)'ljJ) ---t (3x)(<p&'ljJ))
o
Theorem 5.1.17 If y is substitutable for x in <p(x) then BL\i proves
(8) (\ix)<p(x) == (\iy)<p(y) and (3x)<p(x) == (3y)<p(y).
Proof
From f- (\ix)<p(x) ---t <p(y) we get (\ix)<p(x) ---t (\iy)<p(y) by gener-
alization and (\i2). We get (\iy)<p(y) ---t (\ix)<p(x) in the same way. The proof
of f- (3x)<p(x) == (3y)<p(y) is analogous.
0

116
CHAPTER FIVE
Theorem 5.1.18 For arbitrary ep and for v not containing x freely, BLV proves
(9) (:3x)(ep&v) == ((:3x)ep&v),
(10) (:3x)(ep&ep) == ((:3x)ep&(:3x)ep).
Proof"
(9) f- (ep&v) -+ ((:3x)ep&v) (using (:31»; generalize and use (:32) to get
f- (:3x)(ep&v) -+ ((:3x)ep&v). Conversely observe that f- (Vx)(v -+ v)
gives f- v -+ (Vx)1I by (VI); thus
f- ((:3x )ep&v) -+ ((:3x)ep&(Vx)v),
which gives
f- ((:3x)ep&lI) -+ (:3x)(ep&v)
by (7).
(10) Write <1> for ep(x) -+ (:3x )ep(x) (an instance of (:31); then
f- (<1>&<1» -+ (ep(x)&ep(x)) -+ (:3x)ep(x)&(:3x)ep(x)).
Delete <1>&<1> by modus ponens, generalize and apply :32; you get
f- (:3x)(ep(x)&ep(x)) -+ ((:3x)ep(x)&(:3x)ep(x)).
This can be written as
f- (:3x)ep2(x) -+ ((:3x)ep(x))2.
Conversely, observing the propositional tautology (p&q) -+ (p2 V q2)
we have
f- (ep(x)&ep(y)) -+ (ep2(x) Vep2(y)),
f- (ep(x)&ep(y)) -+ ((:3x)ep2(x) V (:3y)ep2(y)) (by (:31»,
f- (ep(x)&ep(y)) -+ ((:3z)ep2(z) V (:3z)ep2(z)) (by (8»,
f- (Vy)(Vx)[(ep(x)&ep(y)) -+ (:3z)ep2(z)]
f- (Vy)(Vx)[ep(x) -+ (ep(y) -+ (:3z)ep2(z))]
f- (:3x)ep(x) -+ (Vy)(ep(y) -+ (:3z)ep2(z))
f- (:3x)ep(x) -+ ((:3y)ep(y) -+ (:3z)ep2(z))
f- (:3x)ep(x) -+ ((:3x)ep(x) -+ (:3x)ep2(X))
f- ((:3x)ep(x))2 -+ (:3x)ep2(x).
o
Remark 5.1.19 The reader may ask ifthe formula (Vx)(ep&v) == ((Vx )ep&v)
(where v does not contain x freely) is provable in BLV. We are unable to
answer this question; we only show that the formula in question is a lL-
tautology for each linearly densely ordered BL-algebra L (in particular, in
each such lattice over [0, 1], thus e.g. [0, l]b [0, l]G, [0, 1]IT).

MANY-VALUED PREDICATE LOGICS
117
Indeed, let L be such that infw aw and infw (aw * b) exist; obviously,
((infw aw) *b) ::; (aw * b) for each w, thus (infw aw) * b::; infw(aw *b). To
prove the converse inequality we have to show that (infwaw) *b is the infi-
mum of all aw *b, i.e. if z ::; aw *bfor all w then z ::; (infw aw) *b. Assume
z > (infwaw) * b. Since z ::; aw * b for all w we get z ::; b (note that here
we use the assumption that the domain of each structure is non-empty) hence
z = z n b = b* (b -+ z). From this we get (comparing with z > b*infw aw )
infwaw < b -+ z, hence for some Wo we have aWQ
::; b -+ z; thus aWQ *b ::; z,
which together z ::; aWQ * bgives aWQ *b = z. Thus we get infw(aw * b) = z;
but z was arbitrary such that (infw aw) * b < z ::; infw(aw * b). Hence if the
ordering ::; is dense we get a contradiction.
Theorem 5.1.20 BLV proves the following:
(11) (3x)cp -+ .(Vx).cp
(12) .(3x)cp == (Vx).cp
Proof
(11) f- (3x)cp -+ ((Vx).cp -+ (3x)(cp&.cp)) by (7); but f- (cp&.cp) -+ 0,
thus f- (Vx)((cp&.cp) -+ 0) and f- (3x)(cp&.cp) -+ 0; hence
f- (3x)cp -+ ((Vx).cp -+ 0).
(12) f- .(3x)cp(x)&cp(x) -+ .(3x)cp(x)&(3x)cp(x) thus,
f- (.(3x)cp(x)&cp(x)) -+ 0,
f- .(3x)cp(x) -+ (cp(x) -+ 0); generalize and apply (V2) to get
f- .(3x)cp(x) -+ (Vx)(cp(x) -+ 0).
The converse implication follows from (11) by BL.
o
Lemma 5.1.21 BLV proves the following:
(13) (3x)(v 1\ cp) == (v 1\ (3x)cp),
(14) (3x)(v V cp) == (v V (3x)cp).
(15) (Vx)(v 1\ cp) == (v 1\ (Vx)cp)
Here again v is a formula not containing x freely.

118
CHAPTER FIVE
Proo!'
(13) BLY proves (3x)(v /I. cp) -t (3x)v -t v and (3x)(v /I. cp) -t (3x)cp;
thus BLY ~ (3x)(v /I. cp) -t (v /I. (3x)cp.
Conversely, BLY proves (v -t cp(x)) -t (v -t (v /I. cp(x))) -t (v -t
(3x)(v /I. cp(x)) -t «v /I. (3x)cp(x)) -t (3x)(v /I. cp(x))),
(cp(x) -t v) -t (cp(x) -t (v /I. cp(x)) -t (cp(x) -t (3x)(v /I. cp(x))) -t
«v /I. (3x)cp(x) -t (3x)(v /I. cp(x))),
thus we get BLY ~ (v /I. (3x)cp(x)) -t (3x)(v /I. cp(x)).
(14) BLY proves v -t (3x)(v V cp(x)), (3x)cp(x) -t (3x)(v V cp(x)), thus
BLY ~ (v V (3x)cp(x)) -t (3x)(v V cp(x)). Conversely, BLY proves
(3x)(v V cp(x)) -t (3x)(v V (3x)cp(x)) -t (v V (3x)cp(x)).
(15) Evidently, BLY ~ (Yx)(v /I. cp) -t v, BLY ~ (Yx)(v /I. cp) -t (Yx)cp,
thus BLY ~ (Yx)(v /I. «Yx)cp) -t (v /I. (Yx)cp. Conversely,
BL'v'r- [v /I. (Yx)cp] -t [('v'x)(v /I. ('v'x)cp)] -t [('v'x)(v /I. cp)].
o
Corollary 5.1.22 BLY proves the following:
(16)
(3x)(cp V 'I/J) == «3x)cp V (3x)'I/J),
(17)
('v'x)(cp /I. 'I/J) == «'v'x)cp /I. (Yx)'I/J).
Proof'
(16) Evidently, BL'v' ~ (3x)cp -t (3x)(cp V'I/J) and BL'v' ~ (3x)'I/J -t
(3x)(cp V 'I/J), which gives the implication f-. Conversely, BL'v' proves
[(3x)(cp V 'I/J)] -t [(3x)(cp V (3x)'I/J)] -t [(3x)cp V (3x)'I/J] by (14).
(17) Here -t is easy; conversely, BL'v' proves
[«Yx)cp /I. ('v'x)'I/J)] -t [('v'x)(cp /I. ('v'x)'I/J)] -t [('v'x)(cp /I. 'I/J)] by (15).
0
To close this section we prove the deduction theorem for C'v'.
Theorem 5.1.23 Let T be a theory over C'v' and let cp, 'I/J be closed formulas
of the language of T. Then (T U {cp})
~ 'I/J iff there is an n such that T
~
cpn -t 'I/J.
Proo!'
The proof is an extension of the proof of the analogous deduction
theorem for propositional logic 2.2.18: we have to discuss the case of gen-
eralization. Thus assume T r- cpn -t 'Yj and let 'Yi be ('v'xhj; then T r-
(Yx)(cpn -t 'Yj) and since cp is closed it follows that T r- cpn -t ('v'xhj, thus
T ~ cpn -t 'Yi by the axiom ('v'2).
0

MANY-VALUED PREDICATE LOGICS
5.2.
COMPLETENESS
119
Recall 2.3.20-2.4.3 where we introduced schematic extensions C of BL and
proved their completeness with respect to evaluations in linearly ordered C-
algebras. In the preceding section we introduced a predicate logic counterpart
CV of each schematic C; now we are going to investigate its completeness.
First let us make some definitions (a fixed schematic extension C of BL is
supposed to be given).
Definition 5.2.1 Let T be a theory over C.
(1) T is consistent if there is a formula cp unprovable in T.
(2) T is complete if for each pair cp, 'l/J of closed formulas, T I- (cp -+ 'l/J) or
T I- ('l/J -+ cp). (Cf. 2.4.1.)
(3) T is Henkin if for each closed formula of the form (Vx)cp(x) unprov-
able in T there is a constant c in the language of T such that cp(c) is
unprovable in T.
Lemma 5.2.2 T is inconsistent iff T I- O.
Proof
Obvious.
o
Lemma 5.2.3 T is complete iff for each pair cp, 'l/J of closed formulas such
that T I- cp V 'l/J, T proves cp or T proves 'l/J.
Proof
If the condition holds apply it to (cp -+ 'l/J) V('l/J -+ cp): this formula is
provable in BL, hence in T, thus T I- (cp -+ 'l/J) or T I- ('l/J -+ cp). Conversely,
assume T complete and T I- cp V 'l/J. Either T I- cp -+ 'l/J and then T I-
(cp V 'l/J) -+ 'l/J, thus T I- 'l/J, or T I- 'l/J -+ cp and then similarly T I- cpo
0
Remark 5.2.4
(1) Observe that in the case that CV is the Boolean predicate
calculus T is complete in the sense of 5.2.1 iff for each closed cp, T I- cp
or T I- "'cp. Indeed, if T is complete then T I- cp or T I- "'cp since
T I- cp V "'cp; conversely, if the condition holds then T I- (cp -+ 'l/J) or
T I- ..,(cp -+ 'l/J), but in the latter case T I- ('l/J -+ cp).
(2) Furthemore, for classical logic and a complete theory T, the condition
for T to be Henkin is clearly equivalent to the following: for each closed
formula (3x)cp(x), ifT I- (3x)cp(x) then for some constant c, T I- cp(c).
This will also be the case for LV as we shall see later.

120
CHAPTER FIVE
Definition 5.2.5 For each theory T over CV we let LT be the algebra of
classes of T -equivalent closed fonnulas (caution: do not overlook that we re-
strict ourselves to closed fonnulas) with the usual operations ([<P]T '* [1/J]T =
[<p -+ 1/J]T etc.). Clearly, LT is a C-algebra.
Lemma 5.2.6
(1) If T is complete then LT is linearly ordered.
(2) If T is Henkin then for each fonnula <p(x) with just one free variable x,
[(VX)<p]T = infc[<p(c)]T,
[(3X)<p]T = sUPc[<p(C)]T
(C running over all constants of T).
Proo!'
(1) is obvious since [<p]T ~ [1/J]T iffT f- (<p -+ 1/J).
We prove
(2).
Clearly,
[(Vx)<p(X)]T
~
[<p(C)]T
for each c, thus
[(Vx)<p(X)]T
~ infc[<p(c)]T. To prove that [('v'x)<p(X)]T is the infimum
of all [<p(C)]T' assume ["Y]T
~ [<p(C)]T for each c; we have to prove
b]T
~ [(Vx)<p(X)]T (which means that [(Vx)<p(X)]T is the greatest
lower bound of all [<P(C)]T). But if ["Y]T i [('v'x)<p(X)]T then T If "Y -+
(Vx)<p(x), thus T If (Vx)("'f -+ <p(x)), thus by the Henkin property,
there is a constant C such that T If "Y -+ <p(c), thus b]T i
[<p(C)]T, a
contradiction.
Similarly, [<p(C)]T ~ [(3x)<p(X)]T for each c. Assume [<p(C)]T
~ b]T
for each c; we prove [(3x)<p(X)]T
~ b]T. Indeed, if [(3x)<p(X)]T i
["Y]T then T If (3x)<p(x) -+ "Y, thus T If (Vx)(<p(x) -+ "Y) and for some
c, T If <p(c) -+ "Y, thus [<p(C)]T i b]' a contradiction. This completes
the proof.
o
Lemma 5.2.7 For each theory T and each closed fonnula a, if T If a then
there is a complete Henkin supertheory T of T such that T If a.
Proo!'
First observe that if T' is an extension of T, T' If a, and (<p,1/J) is
a pair of closed fonnulas then either (T' U {<p -+ 1/J}) If a or (T' U {1/J -+
<p}) If a; This is proved easily using the deduction theorem (5.1.20). (Indeed,
ifT', (<p -+ 1/J) f- a and T', (1/J -+ <p) f- a for some n, T' f- (<p -+ 1/J)n -+

MANY-VALUED PREDICATE LOGICS
121
a, T' f- ('l./J -+ cp)n -+ a, thus T' f- ((cp -+ 'l./J)n V ('l./J -+ cp)n) -+ a and
T f- a.) Put Til = T' U {cp -+ 'l./J} in the former case and Til = T' U {'l./J -+
cp} in the latter; Til is the extension of T' deciding (cp, 'l./J) and keeping a
unprovable.
We shall construct T in countably many stages. First extend the language
J of T to J' adding new constants co, Cl , Cz, ... In the construction we have
to decide each pair (cp, 'l./J) of closed J'-formulas and ensure the Henkin prop-
erty for each closed J'-formula of the form (Vx)X(x). These are countably
many tasks and may be enumerated by natural numbers (e.g. in even steps we
shall decide all pairs (cp, 'l./J), in odd ones process all formulas (Vx)X(x) -
or
take any other enumeration).
Put To = T and ao = a; then To I( aD. Assume Tn, an have been con-
structed such that Tn extends To, Tn f- a -+ an, Tn I( an; we construct
Tn+1,an+l in such a way that Tn+1 f- an -+ an+l, Tn+! I( an+l and Tn+1
fulfils the n-th task.
Case 1 n-th task is deciding (cp, 'l./J). Let Tn+1 be the extension ofTn deciding
(cp, 'l./J) and keeping an unprovable; put an+l = an'
Case 2 n-th task is processing (Vx)X(x). First let C be one of the new con-
stants not occuring in Tn.
Subcase (a) Tn I( an V X(c), thus Tn I( (Vx)X(x). Put Tn+!
=
Tn, an+! = an V X(c).
Subcase (b) Tn
f- an V X(c), thus Tn
f- an V X(x) by the stan-
dard argument (in the proof of an V X(c) replace c by a new
variable x throughout). Hence Tn f- (Vx)(an V X(x)) and, us-
ing the axiom (V3) for the first time, Tn f- an V (Vx)X(x). Thus
Tn U {(Vx)X(x) -+ an} f- an so that Tn U {an -+ (Vx)x(x)}
does not prove an but it does prove (Vx)X(x). Thus put Tn+! =
Tn U {an -+ (Vx)x(x)} and an+l = an'
Now let T be the union of all Tn. Then clearly T is complete and T I( a
(since for all n, T I( an)' We show that T is Henkin. Let T I( (Vx)X(x) and
let (Vx)X(x) be processed in step n. Then Tn+! I( (Vx)X(x), thus subcase
(a) applies and T I( an+l. an+! being an V X(c). Hence T I( X(c). This
completes the proof.
0
Lemma 5.2.8 For each complete Henkin theory T and each closed formula
a unprovable in T there is a linearly ordered C-algebra L and L-model M of
T such that lIall~ < 1L.

122
CHAPTER FIVE
Proof
Take M to be the set of all constants of the language of T; me = C
for each such constant. Let L be the lattice of classes of T -equivalent closed
formulas, i.e. put [<p]T = {'l/JI T f- <P ='l/J}, [<p]T * ['l/J]T = [<p&'l/J]T, [<p]T '*
['l/J]T =
[<p -+ 'l/J]T. Using the methods of Section 2.3 prove that L is a C-
algebra and is linearly ordered (since T f- <P -+ 'l/J or T f- 'l/J -+ <P for each
pair (<p, 'l/J)).
For each predicate P of arity n, let rp(CI, ... ,cn) = [P(C1,"" Cn)]T;
this completes the definition ofM. It remains to prove 11<p11k-r = [<p]T for each
closed <po Then for each axiom <p of T we have 1I<p1lk-r = [<p]T = [I]T = IL,
but lIallk-r = [a]T :j:. [l]T = IL· For atomic closed <p the claim follows by
definition; the induction step for connectives is obvious. We handle the quan-
tifiers. Let (Vx )<p(x), (3x)<p(x) be closed. Then, by the induction hypothesis,
II(Vx)<p(x)lI~ = iufe 1I<p(c)ll~ = iufe [<p(C)]T = [(Vx)<P(X)]T,
1I(3x)<p(x)IIM = sUPe II<p(c) 11M = sUPe[<p(C)]T = [(3x)<p(X)]T.
Here we use lemma 5.2.6 and the fact that in our M, each element c of M
is the meaning of a constant (namely itself); this gives II(Vx)cp(x)lIk-r
iufe IIcp(c)llk-r and the dual for 3.
0
Theorem 5.2.9 (Completeness.) Let CV be the predicate calculus given by a
schematic extension C of BL, let T be atheory over CV let <p be a formula of
the language of T. T proves <p iff for each linearly ordered C-algebra L and
each safe L-model M of T, 11<p1lk-r = lL.
Proof
This is a direct corollary of the preceding two lemmas.
0
Remark 5.2.10 Note that this theorem immediately gives the classical strong
completeness of Boolean predicate logic since if C is Bool (equivalently,
BL2), then the only non-trivial linearly ordered C-algebra (Boolean algebra)
is the two-element Boolean algebra.
*
We shall now present some simple consequences of the completeness theo-
rem, concerning extension of theories.
Definition 5.2.11 (1) Let .Ji be a language, ':12 a richer language (resulting
by adding some new predicates and/or constants); let T1 be a theory in CV
over .11, T2 :2 T1 its extension in CV over .12. T2 is a conservative extension
of T1 if for each formula cp of .11, T2 f- <p implies T1 f- cp (a formula of

MANY-VALUED PREDICATE LOGICS
123
the poorer language provable in the richer theory is provable in the poorer
theory).
(2) An L-structure M 2 for .12 is an expansion of an L-structure M 1 for
.100 ifM1and M 2have the same domain and the same interpretation ofpred-
icates and constants of .II. (M2 results from M 1 by adding the interpretation
of new symbols.)
Lemma 5.2.12 Let.J1 ~ .12 be languages, Ti, theories in C'<:I over .Ie, T1 ~
T2. If each safe model of M 1 has an expansion to a safe model of T2 then T2
is a conservative extension of T1.
Proof
Let cp be a (closed) .II-formula and let T1 ff cpo Then by 5.2.8 there
are L, M 1 such that M 1 is a safe L-model of T1 and IlcpllXt-1 < lL. Now take
an expansion M 2 of M 1 which is a safe L model of T2 . Clearly, IlcpllXt-2 <
lL, thus cp is unprovable in T2.
0
Remark 5.2.13 We can use the last lemma to quickly show that increasing
the language of a theory T without adding any new axiom is a conservative
extension: expand each safe model M of T over .II to a safe model of T
over .12 by interpreting all new constants by an arbitrary m E M and all new
predicates e.g. the empty relation of the respective arity: r(ml,'"
,mn ) =
0L for all arguments. Observe that this is a safe L-model ofT over .12.
Definition 5.2.14 Let T be a theory in C'<:I over a language .II.
(1) Let P be an n-ary predicate not in .II and CP(X1' ... ,xn ) a formula of
.II with n free variables Xl, ... ,Xn . The definition of P by cp is the formula
('<:lXI, ... ,Xn )(P(X1, ... ,xn ) == cp(X1' ... ,xn )).
(2) Let c be a constant not in .II and let (3x )cp(x) be a closed formula of
.II provable in T. The witnessing ofcp by c in T is the formula cp(c).
Theorem 5.2.15 (1) If T2 results from T1 by adding a definition of P then T2
is a conservative extension of T1.
(2) If T2 results from T1 by adding witnessing of cp(x) (provided T1 f-
(3x)cp(x)), then T2 is a conservative extension ofT1.
Proof
Use lemma 5.2.12. (1) Given a safe L-model of T1, expand it by rp
defined as follows:
rp(ml,'"
,mn ) = IlcpllXt-,v
for an arbitrary v such that V(Xi) = mi, (i = 1, ... , n); an easy proof by
induction shows that (M, rp) is a safe L-model. Indeed, for any formula 'IjJ

124
CHAPTER FIVE
containing P construct the formula 'l/J* resulting from 'l/J by replacing each
atom P(t1, . .. ,tn ) by <p(t1,"
. ,tn ), assuming that variables bound in <p do
not occur in 'l/J; then show that II'l/JIIXr v = 11'l/J*IIXrv for each r.
(2) Expand M by me where me i~ any eleme~t such that for v(x) = m,
11<pIIXr v = 1. Again it is easy to show that (M, me) is L-safe. Now 'l/J* results
from ;p by replacing c by a variable z not occuring in 'l/J. Then show that
11'l/JIIXr,v = 11'l/J*IIXr,v' where v* =z v and v*(z) = me·)
0
5.3.
AXIOMATIZING GODEL LOGIC
In this short section we show that tautologies of GV (over all linearly ordered
G-algebras) coincide with tautologies over the standard G-algebra [0, l]G of
truth functions; thus GV is recursively axiomatized. Note that we shall show
in the next chapter that a similar result for LV and IIV is impossible; but in
the next section we present a Pavelka-style axiomatization for Lukasiewicz
predicate logic with truth constants.
We shall continue to assume throughout that all languages considered are
at most countable (so that the set of all formulas is countable and so is the
lattice L T for each theory T).
Lemma 5.3.1 Let L be a countable linearly ordered G-algebra. Then there is
a countable densely linearly ordered G-algebra L' such that L ~ L' and the
identical embedding of L into L' preserves all infinite suprema and infima
existing in L.
Proof
L' results from L by inserting a copy of the rational open unit inter-
val into each "hole" (a pair (x, y) of elements of L such that y is a successor
of x - there is no z E L with x < z < y). In more detail, for u E L put
Cu = {(u, O)} if u has no successor in L,
Cu = {(u, r) 10 ::; r < 1, r rational} otherwise.
Let L' = U{Culu E L} and for (u,r), (v,s) E L' put (u,r) ::; (v,s) iff
u <L v or (u = v and r ::; s) (lexicographic product). Clearly (L',::;) is a
densely ordered set with a least and greatest element; the mapping f(u) =
(u,O) embeds L isomorphically to L'. (Call the image Ld If X
~ L1 and
y = sup X in L 1 then there are two possibilities:
Case 1. y E X, then y = max X in L 1 and also in L.
Case 2. y f/. X, then for each z E L 1, Z < y, there is a z' E L 1 such that
z < z' < y. Assume now tEL' - L 1, t < y. Then t = (u, r) for an u E L
and r > 0, thus (u,O) E L1, (u,O) < y and for some v, (v,O) E L1,(u, 0) <
(v,O) < y; but then t = (u,r) < (v,O) < y.
0

MANY-VALUED PREDICATE LOGICS
125
Lemma 5.3.2 Let L be a countable densely linearly ordered G-algebra. There
is an isomorphism f of L onto the G-algebra Q n [0, I]G of rationals from
[0,1]. As an embedding into [0, I]G f preserves all sups and infs existing in
L.
Proof
It is well known that any two countable densely linearly ordered
sets are isomorphic (as ordered sets); let f be an order isomorphism of L
onto Q n [O,I]G (Q is the set of all rational numbers). Then f is also an
isomorphism ofL and Qn [0, I]G as G-algebras since the operations * (min)
and ~ are definable from the order. Thus f is an isomorphic embedding of
L into [0, I]G as Heyting algebras. And since Q n [0,1] is dense in [0,1] f
preserves infinite infima and suprema. Indeed, if A ~ [0,1] n Q and r E Q is
such that r = sup A in [0, 1] n Q then clearly r = sup A in [0, 1].
0
Theorem 5.3.3 (Completenessp4 Let T be a theory over GV. T
f-
<P iff
11<pIIM = 1 for each [0, I]G -model M ofT. <I1<pIIM stands for II<pII~l]G.)
Proof
IfT f- <p then 11<pIIM = 1 for each [0, I]G -model ofT by soundness;
conversely, if T If <p then there is a countable dense linearly ordered G-
algebra L and an L-model M of T such that II<pllM < 1. By the preceding
lemma we may assume that L is in fact [0, I]G (or, if we want, [0, I]G n Q).
This is completes the proof.
0
Corollary 5.3.4 The following are equivalent:
(i) T f- <p (pedantically, T f-G\;I <p),
(ii) 11<pIlM = 1 for each [0, I]G -model of T,
(iii) For each [0, I]G -structure M and each r E [0,1], if IlailM ~ r for each
axiom a E T then II<pllM ~ r,
(iv) For each [0, I]G -structure M there is an axiom a E T such that IlailM :::;
II<pIIM.
Proof
Clearly,
(iv)~(iii)~(ii)~ (i); and
(i)~(iv) is soundness. Let
ai, ... ,an E T be all axioms of T used in a proof of <p; we claim that
for each M,
24 [103] and [195] are predecessors of this theorem; [193] has a completeness
theorem very similar to ours.

126
CHAPTER FIVE
This is verified by induction on the proof of <po
o
Recall 5.1.19 where we discussed the formula (\fx)(ep(x)&v)
_
== ((\lx)ep(x)&v); we now prove this formula (with 1\ instead of &) in G\I (in
fact, in BL\I).
Lemma 5.3.5 BL\I proves
(\lx)(<p(x) 1\ v) == ((\lx)<p(x) 1\ v)
(v not containing x freely).
Proof
Evidently, I- ((\Ix )ep(x) 1\ v) -+ (\Ix )ep(x) and I- (\Ix) (<p(x) 1\ v) -+
v; thus we get the implication -+. Conversely, I- ((\Ix )ep(x)I\v) -+ (ep(x) I\v)
(by (VI) and properties of 1\); generalizing and using (\12) we get
I- ((\lx)ep(x) 1\ v) -+ (\lx)(<p(x) 1\ v).
o
To close this section recall 5.1.14 where we proved the following formu-
las, assuming that v does not contain x freely:
(\lx)(v -+ ep) == (v -+ (\lx)ep),
(3x)(v -+ <p) -+ (v -+ (3x)ep),
(\lx)(ep -+ v) == ((3x)<p -+ v),
(3x)(ep -+ v) -+ ((\lx)<p -+ v).
Now we prove that in GOdellogic this cannot be strengthened.
Lemma 5.3.6 The formulas
(v -+ (3x)<p) -+ (3x)(v -+ <p),
((\lx)ep -+ v) -+ (3x)(<p -+ v)
are not I-tautologies of GOdel predicate logic.
Proof
(1) Assume°< Y < 1 and let {xn / n E N} be a sequence of positive
numbers strictly less than y and such that supXn = y. Then
sup(y ::::} xn ) = supxn = Y < 1,
y ::::} sup Xn = Y -+ Y = 1.
Thus if M = N (the set of natural numbers) rp(n) = xn , rQ(n) = y
for all n, me = 0, and v = Q(c) we get IIv -+ (3x)<p(x)IIM = 1 but
II (3x)(v -+ ep(x)) 11M = Y < 1.

MANY-VALUED PREDICATE LOGICS
127
(2) Similarly, let Xn be positive, infn Xn = °= y; then Xn ~ Y = 0,
sUPn(xn ~ y) = 0, but (infnxn) ~ y =°~°= 1.
o
5.4.
LUKASIEWICZ AND PRODUCT PREDICATE LOGIC
The main goal of this section is to present a predicate logic version of RPL
-
Rational Pavelka logic. This is because Lukasiewicz logic is not axiom-
atizable in the usual sense -
there is no recursive system of axioms and
deduction rules for which provability would equall-tautologicity over [0,1].
We shall prove this (and much more) in the next chapter. The main thing
we have is Pavelka-style completeness, saying, besides other things, that 1-
tautologies are exactly all formulas with provability degree 1. (This has some
variants to be mentioned below.) For product logic we have only the come
pleteness of Section 2, (w.r.t. safe models over all linearly ordered product
algebras) -looking for a sort of completeness relative to models over [0, l]n
remains as a promising research task. We show how the embeddability result
of Lukasiewicz into product logic extends to predicate calculus. (This gives
immediately that predicate product logic is not axiomatizable (in the above
sense.)
Let us investigate Lukasiewicz predicate logic LV. First we present one
provability.
Lemma 5.4.1 Let ep be a formula. The logic LV proves
(3x)ep == -.(Vx)-.ep
Proof
By 5.1.20, BLV I- (:3x)ep -+ -.(Vx)-.ep and BLV I- -.(:3x)ep -+
(Vx)-.ep. Now LI- (-.a -+ (3) -+ (-.{3 -+ a) (see 3.1.1 (1), (2)), thus LV I-
-.(Vx)-.ep -+ (3x)ep.
0
Remark 5.4.2 It follows that :3 is definable in LV from V. Thus an alterna-
tive presentation of LV is to allow only connectives -., -+ and the quantifier
V (taking 0, &,y.., 1\, v,:3 as defined symbols), take axioms (Ll)-(U) for the
propositional calculus and (Vl),(V2) for predicate calculus; (:31), (:32) and
(V3) become provable as the following chains of equivalences and implica-
tions show:
(ep(t) -+ (:3x)ep(x)) == (ep(t) -+ -.(Vx)-.ep(x)) == ((Vx)-.ep(x) -+ -.ep(t));
(Vx)(ep -+ v) == (Vx)(-.v -+ -.ep) == (-.v -+ (Vx)-.ep) == (-.(Vx)-.ep -+
v) == ((:3x)ep -+ v).

128
CHAPTER FIVE
(Vx)(<p(x) V v) -+ (Vx)((v -+ <p(x)) -+ <p(x)) -+
-+ [(Vx)(v -+ <p(x)) -+ (Vx)<p(x)) -+
-+ [(v -+ (Vx)<p(x)) -+ (Vx)<p(x)) -+ [((Vx)<p(x)) V v). (As always, v is a
formula not containing x freely. Note that we have used 5.1.14, but this was
proved in BLV without using (V3).)
We now present a predicate logic variant of Rational Pavelka logic and
prove Pavelka-style completeness. Then we obtain some further results for
LV.
Definition 5.4.3 An MV-algebra A is said to contain the rational unit interval
ifthe MV-algebra Qn [0, IlL of rational numbers from [0, 1] (with the usual
truth functions) is a subalgebra of A. (More generally, A may contain an
isomorphic copy of Q n [0, IlL; but then we may assume, without loss of
generality, that A contains the unit interval, Le. that the isomorphism is just
identity.)
Definition 5.4.4 The logic RPLV - Rational Pavelk£z predicate logic. Extend
(in 5.1.1) logical symbols by truth constants f for each rational r E [0, 1) and
extend the definition of formulas by adding the clause saying: for each r, f is
a formula. In 5.1.3, add the condition
Ilfll~v = r,
,
assuming that L contains the rational unit interval.
The logic RPLV (over a predicate language .]) has formulas, L-structures
and truth definition as above (L containing the rational unit interval), axioms
are:
-
axioms of RPL (with the present notion of a formula), i.e. (Ll)-(L4)
and the bookkeeping axioms, of 3.3.1
-
and the axioms (VI),(V2) as above.
The deduction rules are modus ponens and generalization.
Definition 5.4.5 A theory over RPLV is (of course) a set of formulas -
spe-
cial axioms of T. We may assume all special axioms to be closed. In an anal-
ogy to 3.3.4 we define
(1) the truth degree of <p over T to be
11<pIIT = inf{II<pIIM IM a model of T}
("model" meaning "model over the standard MV-algebra [0, IlL" and
1I<pIIM meaning 11<p1l~1!L);

MANY-VALUED PREDICATE LOGICS
(2) the provability degree of cp in T to be
IcplT = sup{rl T f- (1' -+ cpn.
129
Lemma 5.4.6 (Soundness.) For each theory T over RPLV and each formula
cp, IcplT S; IIcpIiT.
Proof
This immediately follows from the usual formulation of soundness
saying that ifT I- 'l/J then lI'l/JIlM = I for each model M of cp, cf. 5.1.12
0
Lemma 5.4.7 If a theory T over RPLV is consistent then it has a model over
the standard MV-algebra [0, IlL.
Proof
An easy inspection of 5.2.7 shows that that lemma is also valid for
any consistent theory T over RPLV: there is a consistent complete Henkin
extension T of T. This gives a model of T over an MV-algebra L containing
the rational unit interval as in 5.2.9; but we want a model over [0, I]L' To this
end we take M to be the set of all constants ofT and interpret each constant
by itself (as in 5.2.8) but modify the interpretation of predicates as follows:
rp(cl,"" cn) = IP(cl,"" cn)lt = sup{rl T I- l' -+ P(Cl,"" cn)}.
Then inspect Lemma 3.3.8 to show that, for each closed formula cp,
Icplt = sup{rlT f- (1' -+ cpn = inf{1'IT f- (cp -+ 1'n
and that the provability degree commutes with connectives and quantifiers,
I.e.
I--cplt = I - Icplt, Icp -+ 'l/Jlt = Icplt => I'l/Jlt,
I(Vx)cplt = inf Icp(c)lt (c varying over all constants).
e
For connectives the proof is as in 3.3.8; for quantifiers we have to present a
proof now.
Clearly, T f- l' -+ (Vx)cp(x) implies T f- l' -+ cp(c) for each c; thus
I(Vx)cp(x)lt S; infe Icp(cnr' Conversely, if r < infe Icp(c)lt, i.e. T I- l' -+
cp(c) for all c, then T I- l' -+ (Vx)cp(x); otherwise we would have T 'I
l' -+ (Vx)cp(x), T 'I (Vx)(1' -+ cp(x)) and hence, by the Henkin property,
T 'I l' -+ cp(c) for some c -
a contradiction. Thus if r < infe Icp(c)lt
then r S; I(Vx)cp(x) It, which gives, together with the above, I(Vx)cp(x)lt =
infe Icp(c)lt·
This shows that IIcpliM = Icplt for each closed formula cp; thus M is a
model ofT.
0

130
CHAPTER FIVE
Remark 5.4.8 We can use the preceding proof to show that if an MV-algebra
A
contains
the
rational
unit
interval
then
the
mapping f (a)
=
= sup{rIr rational, r :S a} is a homomorphism of A into [0, I]L preserving
all sups (and infs) existing in A. The interested reader may elaborate details.
Lemma 5.4.9 If T If r -+ <p then the theory T U {<p -+ r} is consistent.
Prool
See lemma 3.3.7.
o
Theorem 5.4.10 (Completeness.) For each theory T over RPLV and for each
formula <p,
1<pIT = 11<pIIT,
i.e. the provability degree of <p equals the truth degree of <po
Prool
Since we have soundness, 1<pIT :S 11<pIIT' it remains to prove 1I<pIIT :S
1<pIT. For this purpose let 1<pIT < r; it is enough to show that there is a model
M of T such that 1I<pIIM :S r. But since 1<pIT < r, T does not prove r -+ <p,
hence by the preceding lemma, T U {<p -+ if} is consistent and by 5.4.7 has a
model M; then 1I<p -+ rilM = 1, thus 1I<pIIM :S r and hence 11<pIIT :S r.
0
In particular, <p is true in each model of T iff for each r < 1, T f- r -+ <po
We can get a similar characterization not mentioning truth constants.
Theorem 5.4.11 For each theory T and formula <p, <p is I-true in each model
of T iff for each natural n ~ 1,
Prool
By soundness, T
f-
<py"'<pn implies that for each model M of T,
1I<pIIM ~
n~l' (Indeed, let 1I<pIIM = x. Then either x n = 0 and x + xn =
x+O = 1, thus x = l,orotherwisexn = nx-(n-l) and 1:S x+nx-n+l,
hence x ~
n~l') Thus if for each n, T f- <py"'<pn then for each model M of T,
1I<pIIM = 1.
Conversely assume that for some n, T If <py"'<pn, i.e. T If -'<p ---7 <pn. Then
the theory T U {<pn -+ -'<p} is consistent (by the same argument as in 3.3.7),
hence it has a model M. Then lI<pn ---7 -'<pIIM = 1, thus lI<pnllM:S 1I-'<pIIM,
hence 11<pIIM < 1. (If 11<pIlM = 1 then II<pnll = 1 and 1I'<pIlM = 1, which is
absurd.)
0
We shall come back to Lukasiewicz logic and show that the same theorem
holds for it.

MANY-VALUED PREDICATE LOGICS
*
131
First we show some further formulas to be provable in LV. We are going
prove the formula (Vx)(<p&v)
== «Vx)<p&v) (v riot containing x freely).
Recall that by 5.1.19 we know that it is a tautology over [0, I]l,; thus we shall
know that it is a I-tautology over each linearly ordered MV-algebra.
Lemma 5.4.12 LV proves
(Vx)(a(x) V (3) == «(Vx)a(x)) V (3),
f3 not containing x freely.
Proof
Evidently, f- (Vx)a(x) --+ (Vx)(a(x) V (3) and f- f3 --+ (Vx)(a(x) V
(3); thus f- «Vx)a(x) V (3) --+ (Vx)(a(x) V (3)). The converse implication
(the axiom ('13» has been proved in 5.4.2.
0
Lemma 5.4.13 The following are propositional I-tautologies of L:
(i) (--,q --+ p) --+ [«p&q):£--,q) == p],
(ii) (p --+ q) --+ [«p:£--,q)&q == p].
Proof
Recall that by 3.1.13, in L, (p&q):£--,q is equivalent to p V --'q and
(p:£--,q)&q is equivalent to p /\ q; thus we claim
L f- (--,q --+ p) --+ «p V --,q) == p),
L f- (p --+ q) --+ «p /\ q) == p),
which is obvious.
o
Lemma 5.4.14 LV proves (Vx)(<p(x)&v) == «Vx)<p(x)&v), v not contain-
ing x freely.
Proof
f- is easy; use f- «Vx)<p&v) --+ (<p&v), generalize and shift V.
Conversely, let (Vx)(<p(x)&v) be ,; we prove, --+ «Vx)<p&v). We have
(1) f- (Vx)(, --+ (<p(x)&v)).
Now, by 5.4.13 (i) and (1),
(2) f- (--,v --+ <p(x)) --+ [(,:£--,v) --+ <p(x)],

132
CHAPTER FIVE
(3) f- (cp(x) -+ 'II) -+ ((cp(X)&II) -+ 0), thus
(4) f- (cp(x) -+ 'II) -+ (-r -+ 0).
Thus by (2) and (4)
(5) f- [(-r:Y::'II) -+ cp(x)] V (-r == 0).
Generalize and use 5.4.12:
(6) f- (VX)[(-r:Y::'II) -+ cp(x)] V (-r == 0),
thus
(7) f- [(-r:Y::'II) -+ (Vx)cp(x)] V (-r == 0).
But since f- (-r -+ II) by (1), we can use 5.4.13 (ii) and get
(8) f- b -+ ((Vx)cp(X)&II)] V, == 0,
thus we get f-, -+ ((Vx)cp(X)&II) as desired.
Lemma 5.4.15 LV proves the following:
(i) (II -+ (::Ix)cp) -+ (:JX)(II -+ cp),
(ii) ((Vx)cp -+ II) -+ (:Jx)(cp -+ II).
Proof
(i) LV proves the following chain of implications (the first using 5.4.14):
,(:JX)(II -+ cp) -+ (VX)(II&'cp) -+ [1I&(VX)'<p] -+
-+ '[II -+ ,(Vx)--,cp] -+ '[II -+ (::Ix)cp]. Thus LV proves
,(:Jx)(II -+ cp) -+ '[II -+ (::Ix) cp] and hence it proves
[11-+ (::Ix)cp] -+ (:JX)(II -+ cp).
(ii) The following is provable, using the preceding provability (i):
((Vx)cp -+ II) -+ (--'11 -+ ,(Vx)cp) -+ (,II -+ (::Ix)--,cp) -+
-+ (::IX)('II -+ ,cp) -+ (:Jx)(cp -+ II).
Lemma 5.4.16 For each natural n 2: 1,
(1) LV f- (:Jx)cpn == ((:Jx)cp)n,
(2) LV f- (:Jx)ncp == n((:Jx)cp).
o
o

MANY-VALUED PREDICATE LOGICS
133
Proof'
(1) is proved in the same way as 5.1.18 (10) (the case n = 2). We
prove (2) also for n = 2, letting the reader generalize for arbitrary n. From
f- cp -+ (3x)cp we get
f- (cp,::£cp) -+ ((3x)cp,::£(3x)cp) (thus f- 2cp -+ 2(3x)cp),
and by generalization and 5.1.13 (2) we get
f- (3x)2cp -+ 2(3x)cp.
Conversely, f- (3x)cp -+ (3x)cp gives f- (3x)((3x)cp -+ cp) by 5.4.15 (ii).
Moreover,
f- ((3x)cp -+ cp)2 -+ (2(3x)cp -+ 2cp) by propositional L25,
generalizing and applying 5.1.16 (6) we get
f- (3x) ((3x)cp -+ cp)2 -+ (3x) (2(3x)cp -+ 2cp)
and by modus ponens, 5.1.18 and 5.1.14 (3) we get
f- 2(3x)cp -+ (3x)2cp.
0
Lemma 5.4.17 Let T be a theory over LV, let (3x)cp(x) be a closed formula
in the language of T, let c be a new constant (not in the language of T). If
T f- (3x)cp(x) then the theory T' = T U {cp(c)} is consistent (moreover, T'
is a conservative extension of T).
Proof'
Let, be closed and let T' f-" thus for some n, T f- (cp(c))n-+
,. Replacing c by a variable y and inspecting the last T -proof we get T f-
(cp(y)n -+ ,), thus by generalizing and moving V to the antecedent as 3,
we get T
f- (3y)(cp(y))n -+ "
thus T
f- ((3y)cp(y))n -+ ,. But since
T f- (3y)cp(y) we get T f- ((3y)cp(y))n and hence T f-,.
0
Definition 5.4.18 A theory T is maximal if for each closed cp, T If cp implies
that T U{cp} is inconsistent (i.e. for some n, T f- cpn -+ 0, thus T f- ..,(cpn)).
Lemma 5.4.19 If T is maximal then T is complete.
Proof'
Assume T maximal and cp, 'ljJ closed. If T If (cp -+ 'ljJ) and T If
('ljJ -+ cp) then T f- (cp -+ 'ljJ)n -+ 0 and T f-
('ljJ -+ cp)n -+ 0 (for a
suitable n), hence T f- ((cp -+ 'ljJ)n V ('ljJ -+ cp)n) -+ 0 and thus T f- 0; T is
inconsistent), a contradiction.
0
Definition 5.4.20 A linearly ordered MY-algebra is Archimedean if for each
a > 0 there is a natural n ~ 1 such that na = 1.
Lemma 5.4.21 Each Archimedean linearly ordered MY-algebra A is isomor-
phic to a subalgebra of the standard MY-algebra [0, IlL.
25 Show that (p -+ q)2 -+ (2p -+ 2q) is a tautology.

134
CHAPTER FIVE
Proof
Construct the Chang linearly ordered Abelian group G such that (for
a positive e, A is MV(G, e) (see 3.2.9 and its proof). It is easy to show that
G is an Archimedean o-group, due to archimedicity of A. Indeed, for each
positive bEG, there is an n such that ne > b -
this follows directly from
the construction. Thus if a ~ e we get na > b; if 0 < a < e then for some m
we get ma = e) in A, thus ma ~ e in G and (mn)a ~ b. By HOlder theorem
1.6.14, G is isomorphic to a subgroup of the additive group of reals -
and
we may assume that the isomorphic embedding Lsends e to 1, thus L(e) = 1.
Thus L makes A a subalgebra of [0, IlL.
0
Lemma 5.4.22 If T is a consistent theory (over LV) then T has a maximal
consistent Henkin extension.
Proof
Put T = To and let CPo, CPl, ... be a sequence enumerating all closed
formulas. Assume Tn has been constructed and construct Tn+1.
(Case 1) If Tn U {CPn} is consistent put Tn+! = Tn U {CPn}.
(Case 2) IfTnU{CPn} is inconsistent and CPn does not have the form ("Ix)f3(x)
then put Tn+1 = Tn; if CPn is (Vx)f3(x) then take an m such that T f-
-,(cp~), i.e. T f- m(:Jx)-,f3(x), consequently T f- (:Jx)m(-,f3(x)) (by
5.4.16 (2». Take a new constant c and put Tn+l = Tn U {m(-,f3(c))}.
Finally put
n
Clearly, T is a consistent maximal extension of T. IfT Ii ("Ix) f3(x) and
("Ix )f3(x) = CPn then Tn U {CPn} was inconsistent (Case 2) and we put
m(-,f3(c)) into Tn+! and hence into T; since T is consistent, T does not
prove f3(c). We have shown T to be Henkin.
o
Lemma 5.4.23 If T is a consistent maximal Henkin theory (over LV) then T
has a model over the standard MV-algebra [0, I]L'
Proof
By 5.2.8 T has a model over LT -
the linearly ordered MV-algebra
of classes of equivalent formulas. We show that LT is Archimedean; this will
give the result using 5.4.21.
Indeed, let [cp]T > OLT' i.e. T Ii cP -+ O. By maximality ofT, T U {-,cp}
is inconsistent, thus for some n, T f- -,(-,cp)n, T f- n(-,-,cp), T f- ncp. This
gives n[cp]T = ILT' which is archimedicity.

MANY-VALUED PREDICATE LOGICS
135
To get the statement of the lemma, one has to strengthen Lemma 5.4.21:
the isomorphism of an Archimedean linearly ordered MV-algebra A to a sub-
algebra of the standard MV-algebra must be proven to preserve all infinite
sups and infs existing in A. But this can be done as follows: Either A is dis-
cretely ordered and then the statement is trivial, or it is densely ordered and
then it suffices to show that its image A' - a subalgebra of the standard MV-
algebra - is dense (not only in itself but) in [0,1]. But this is clear: since A'
has no least positive element, elements of A' have an accumulation point,
hence differences of elements of A' (that themselves are elements of A') are
arbitrarily small. And knowing that A' is dense in [0,1] it is easy to show that
if X is a subset of A' and x is its sup (inf) in A' then x is sup(X) (inf(X»
also in the sense of [0,1] (cf. 5.3.2).
0
Theorem 5.4.24 26 Each consistent theory over LV has a model over [0, I]L'
Proof
Immediate from 5.4.22 and 5.4.23.
o
Theorem 5.4.25 (Completeness.;27 Let T be a theory over LV; let <p be a closed
formula <p is I-true in each model of T over [0, I]L iff for each n
~ 1, T
proves <py"'<pn. (Cf. 5.4.11.)
Proof
From 5.4.24 exactly as in 5.4.11.
o
Remark 5.4.26 Let <p be a closed formula of LV. <p is provable in LV iff it is
provable in RPLV. This was recently proved and will appear as [90].
We shall now characterize I-tautologies ofVI using finitely valued Lukasie-
wicz logics. We shall use this result in Chapter 7.
Definition 5.4.27 . Let, for a moment, Ln(n
~ 2) be the subalgebra of
the standard MV-algebra [O,I]L with the domain {O, n~l'"
. , ~=i, I} (n-
element MV-algebra).
Clearly, each [0, I]L-tautology is a Ln-tautology for each n. We are going
to show the converse: if for each n, <p is a Ln-tautology then <p is a [0, I]L-
tautology. We need some preparation.
26 See [13].
27 See [95].

136
CHAPTER FIVE
Definition 5.4.28 (1) Assume a fixed language with n predicates P,"', Q.
Let M = (M, rp,"', rQ), M ' = (M, r~, ... ,rQ) be two models with the
same domain. Put
d(rp, r~) = sup{lrp(a) -
r~(a)lla E Mar(P)} (ar being the arity),
analogously for other predicates;
d(M,M/) =
d(rp,r~) + ... +d(rQ,rQ).
(Clearly, d is a metric on the set of all models with the domain M.)
(2) Define the complexity of a formula cp as follows: for atomic cp, r(cp) =
0; r(O) = 0; r(cp -+ 'l/J) = max(r(cp),r('l/J)) + 1; r((Vx)cp) = r(cp). (Recall
that other connectives are definable.)
Lemma 5.4.29 28 Let t > 0, let M, M ' be as above and let, let cp be a for-
mula. If d(M, M /) < t/2T (CP) then for each evaluation v
IlIcpllM,v -lIcpIIM',vl < t.
Proof
Assume that M ' differs from M only by the interpretation of P (thus
d(M, M /) = d(rp, r~). (The general result then follows by n-fold use of this
particular case, using the triangle inequality.)
We show by induction that IlIcpllM,v -lIcpIIM,vl :S d(rp, r~) . 2
T (cp).
The assertion is obvious for atomic cp and for cp being O. Assume the as-
sertion for cp and 'l/J and observe that
I(x => y) - (Xl => yl)1 :S Ix - xII + Iy - y/l.
Thus Illcp -+ 'l/JIIM,v -
Ilcp -+ 'l/JIIM',vlll :S IlIcpllM,v -
IIcpIIM',vl +
111'l/JIIM,v -11'l/JIIMI,vl :S d(rp,r~)· (2
T (cp) + 2
T (7/J)) :S
:S d(rp,r~)· 2max(T(cp),T(7/J))+1 =
d(rp,r~). 2T(cp--t7/J).
Finally we investigate (3x )cp. Since II (3x )cpIlM,v =
sUPw=xv IIcplIM,w
we get 111(3x)cpIIM,v - 11(3x)cpIIM/,vl :S sUPw=xv IlIcpllM,w -
IIcpIIM/,wl :S
d(rp,r~)· 2T (cp) = d(rp,r~)' 2T ((3x)cp).
Thus if d(rp, r~) :S t/2
T (CP) we get IllcpllM,v -llcpMI ,vi < t.
0
Theorem 5.4.30 A formula cp of LV is a [0, IlL-tautology iff for each n ~ 2,
cp is a L n -tautology.
Proof
Assume cp is not a [0, IlL-tautology. Thus there is a model M and
an evaluation v such that IIcplIM,v < 1 - t for some t > O. Let k be such that
1
t
k < n· 2T (cp) .
28 See [68].

MANY-VALUED PREDICATE LOGICS
137
For each a E Mar(P), let r~(a) be a value i where i is such that i is near-
est to rp(a). Thus d(rp, r~) :s c/(n· 2T (<p)). Similarly for other predicates;
we get a structure M' = (M, r~, ... ,rQ) such that d(M, M') < c/2T (<p) ,
thus IllepllM,v - lIepIIM/,vl < c, and consequently lIepIIM/,v < 1. M' is a
Lk-structure. This completes the proof.
0
*
In the rest of this section we investigate the product logic IIV. Recall that its
axioms are the axioms of the product propositional logic (BL plus III, II2)
and the axioms (VI), ('12), ('13), (31), (32) for quantifiers. Recall also 5.1.14
and 5.1.15 where we proved in BLV two equivalences and two implications
on "moving quantifiers over an implication"; we know that in LV, both impli-
cations can be converted (and are provable in LV) but none of the converted
implications is a GV-tautology.
Lemma 5.4.31 Assume x not free in v.
(1) The formula (v -+ (3x)ep) -+ (3x)(v -+ ep) is a I-tautology ofilV.
(2) The formula ((Vx)ep -+ v) -+ (3x)(ep -+ v) is not a I-tautology ofilV.
Proof'
(1) Take a [O,I]o-model M and a fixed evaluation Wo; let w vary over
all evaluations ==x
woo Put IIv llwo = a, Ilepllw = bw. Then Ilv -+
(3x)epllwo = a ~ sUPw bw = supw(a ~ bw) since the Goguen im-
plication is left continuous (in fact, it is continuous in all points except
(0,0); thus IIv -+ (3x)epllwo = II (3x)(v -+ ep)llwo'
(2) The counter-example for GV in 5.3.6 (2) also works for IIV.
o
Remark 5.4.32 Note that by 5.1.19 the formula (Vx)(ep&v) == ((Vx)ep&v)
is a I-tautology (over [0,1]0). It appears to be an open problem whether this
formula and the formula from 5.4.31 (1) is provable in IIV.
We now extend the embedding of L into II to an embedding of LV into
IIV. We just generalize 4.1.15-4.1.17.

138
CHAPTER FIVE
Definition 5.4.33 Given a predicate language, extend it by a new unary pred-
icate Q and a new constant Co (thus Q(co) is a new closed formula). For each
LV-formula not containing Q, Co, define its translation 'PIl as follows:
(O)Il is Q(co);
(P(tl, ... ,tn))Il is P(tl, ... ,tn) V Q(co) for each atomic formula P(tl, ...
. .. ,tn );
('P --+ 1jJ)Il is 'PIl --+ 1jJIl; ('P&1jJ)Il is Q(co) V ('PIl 01jJIl);
((Vx)'P)Il is (Vx) ('PIl ).
Lemma 5.4.34
(1) Under the previous notation, 'P is a I-tautology of LV iff
-,-,Q(c) --+ 'PIl is a I-tautology ofIIV.
(2) Furthemore, let T be a theory and let TIl = {-,-,Q(co)} U {allla E T}.
Then 'P is true in all LV-models of Tiff 'PIl is true in all IIV-models of
TIl (all models over [0, I]b [0, I]Il respectively).
Proof'
Let fa(x) = a1- x as in 4.1.14. For each [0, I]-model M =
= (M, (rp )p, (me)e) define a new [0, I]-model of the extended language by
a letting mco E M be arbitrary (but fixed), rQ(meo ) = a, rQ(m) = °for
mEM,m¥me;
M~ = (M, rQ, (rp)p, (me)e, m co),
where rp(ml,"') = max(a, rp(ml," .)),
fa(M) = (M, rQ, (r'J,)p, (me)e, meo),
where r'J,(ml,"" mn) = fa(rp(ml,"" mn)).
Then show, for each evaluation w of object variables, that
=
This gives the conclusion as in 4.1.16.
o
Corollary 5.4.35 The mapping assigning to each formula 'P not containing
Q, co, the formula
-,-,Q(co) --+ 'PIl
is a faithful embedding of LV into IIV with respect to l-tautologicity: 'P is
an LV-tautology (over [0, IlL) iff -,-,Q(CO) --+ 'PIl is a IIV-tautology (over
[O,I]Il). (The reader may formulate a generalization for truth in models of
theories.)

MANY-VALUED PREDICATE LOGICS
5.5.
MANY-SORTED FUZZY PREDICATE CALCULI
139
In this short section we describe an inessential but useful modification of
the systems developed. The aim is to have a means to distinguish objects of
various sorts like points and lines in geometry or pressures, temperatures and
colours in some applied field. We shall carefully define all necessary notions
and then inspect the previous parts of this chapter, verifying that everything
remains true after very minor modifications. We shall make substantial use of
many-sorted logic later on when analyzing fuzzy inference.
Definition 5.5.1 Paraphrasing Definition 5.1.1, we define a many sorted lan-
guage as given by the following: a non-empty finite set of sorts; each non-
empty finite sequence of sorts is a type; for each sort 8i an infinite set of vari-
ables of the sort 8i, a non-empty (possibly infinite) set of predicates, each
having a type, and a (possibly empty, possibly infinite) set of constants, each
having a sort. (As always, all infinite sets are assumed countable.) Having
such a language, one defines terms to be variables and constants; atomic for-
mulas have the form P (tl' ... ,tn ), P being a predicate of a type (81, ... ,8n )
and each ti having the sort 8i. Formulas are built from atomic formulas and
truth constants 0, I using connectives and quantifiers by the same rules as in
5.1.1.
Given a language :r and a BL-algebra L, a L-structure
((Ms)s sort, (rp)p predicate' (me)e constant)
consists of the following (cf. 5.1.3).
-
for each sort 8, a non-empty domain M s of objects of this sort,
-
for each predicate P of a type (81, ... ,8n ) a fuzzy relation rp on
M S1 x ... x Msn , i.e. a mapping rp associating with each tuple
(ml,""
m n ) such that mi E M Si for i
=
1, ... , n, a truth value
rp(ml,""
m n ) E L,
-
for each constant c of a sort 8, an element me EMs.
A valuation v of object variables assigns to each variable x of a sort 8 an
element v(x) E Ms. The definition of Ilcpll~v remains the same. We modify
the definition of substitutability of t for x into cp by adding the condition
saying that t and x must be of the same sort (cf. 5.1.5).
Remark 5.5.2 The definition of an L-tautology is the same as in 5.1.6 (and so
is the notion of a safe interpretation). The axioms of msBLV are as axioms of
BLV (with the new notion of formulas and substitutability). The facts 5.1.9-
5.1.12 remain as they stand; and so do the proofs of (l)-{12).

140
CHAPTER FIVE
The definition 5.2.1 is trivially modified by demanding that ifT If (Yx)cp(x)
then there is a constant c of the same sort as x such that T 17 cp(c). In 5.2.6
we shall now have c running over all constants of T having the same sort as
x. Thus we get the following theorem, analogous to 5.2.7-5.2.9:
Theorem 5.5.3 Let msCY be a many-sorted predicate calculus given by a
schematic extension C of BL and by a many-sorted predicate language .:J.
(1) For each theory T and each closed formula a, if T 17 a then there is a
complete Henkin supertheory T of T such that T 17 a.
(2) For each complete Henkin theory T and each closed formula a unprova-
ble in T there is a linearly ordered C-algebra L and a safe L-model M of
T such that IlaliM < lL·
(3) (Completeness) T proves cp iff for each linearly ordered C-algebra L and
each safe L-model M ofT, IlcplikI = IL.
*
We similarly paraphrase Section 3 and 4 of the present chapter; but let us
proceed more quickly, letting the reader to check details. Thus we get strong
completeness for msGY:
Theorem 5.5.4 (Completeness of msGY) Let T be a theory over msGY and
let cp be a formula. T proves cp iff for each [0, I]G-model M ofT, IIcpliM = 1.
The rest of Section 3 generalizes as it stands. Finally we define the many-
sorted rational Pavelka logic msRPLY in the obvious way and get the follow-
ing (cf. 5.4.7-5.4.14).
Theorem 5.5.5
(1) If a theory T over msRPLY is consistent then it has a
model over the standard MV-algebra [0, IJL.
(2) For each theory T over msRPLY and for each formula cp,
i.e. the provability degree of cp equals to the truth degree of cp.
And the rest of Sec. 4 generalizes easily. This completes our inspection.

MANY-VALUED PREDICATE LOGICS
5.6.
SIMILARITY AND EQUALITY
141
Similarity is fuzzified equality29; we shall use the sign ~ for similarity and
read the formula x ~ y "x is similar to y". The axioms characterizing simi-
larity are direct analogies of the classical axioms of equality.
Definition 5.6.1 The following are axioms of similarity:
(Vx)(x ~ x)
(reflexivity),
(Vx, y)(x ~ Y --T Y ~ x)
(symmetry),
(Vx, y, z)((x ~ y&y ~ z) --T x ~ z)
(transitivity).
Lemma 5.6.2 If (M, r) is a model of the axioms of similarity (over a BL-
algebra L) then the fuzzy relation r is a similarity (or afuzzy equivalence), i.
e. for each a, b, c EM,
r(a, a) = 1,
r(a, b) = r(b, a),
r(a, b) *r(b, c) :::; r(a, c).
Proof
Obvious.
o
Example 5.6.3 Let us discuss similarities in our three favorite logics, with
respect to their standard algebras of truth values
(1) LV. Let r be a similarity on M and put p(u, v) = 1 - r(u, v) for u,
v EM. Then p(u, v) is a (pseudo)metric (reflexive, symmetric, p(u, u) = 0,
triangle inequality: p(u, w) :::; p(u, v) + p(v, w)). Moreover, p(u, v) :::; 1 for
each u, v. Conversely, each pseudometric on M with p(u, v) :::; 1 for all u, v
determines a similarity.
(2) IN. Let r be a similarity on M and first assume that r(u, v) > 0 for
all u, v E M. Put p(u, v) = -logr(u, v). Then p(u, v) E [0, +00) is a
metric on M (since p(u,v) = -logr(u,v) :::; -log(r(u,w)· r(w,v)) =
-logr(u, w) + (-logr(w, v)) = p(u, w) + p(w, v)). In the general case
r(u, v)
=
0 is not excluded define a relation G
~ M x M as follows:
(u, v) E G iff r(u, v) > O. G is an equivalence and determines its equiv-
alence classes. On each class, p defines a metric; for elements of different
components p(u, v) = +00. Conversely, each partition of M into disjoint
29 See Zadeh [212], Trillas and Valverde [202], Hbhle [97], Ruspini [178], Ovchin-
nikov [157] and Kruse et al. [118, 119].

142
CHAPTER FIVE
sets, each bearing a metric and defining p(u, v) = +00 for u, v from differ-
ent sets defines a similarity in the sense of IIV.
(3) GV. Again let r be a similarity. Here we have
r(u,w)
~ min(r(u,v),r(v,w)); thus for each a, the crisp relation rCt =
{(u, v)Ir(u, v) ~ a} is a crisp equivalence. Moreover, a :S {3 implies rf3 ~
rCt and r O = M x M. Conversely, each system {rCt la E [0, I]} ofcrisp equiv-
alences on M satisfying the last two conditions determines a fuzzy equiva-
lence on M in the sense of GV.
Lemma 5.6.4 Let x
>::::;k y abbreviate (x
>::::; y)& ... &(x
>::::; y) (k times).
(Formally, x >::::;0 y is 1.) Over BLV, the theory of similarity with the axioms
5.6.1 proves the same axioms with>::::; replaced by >::::;k. Consequently, if r is
the similarity (over L) then so is the relation rk such that rk(u, v) = r(u, v) *
... *r(u, v) (k times).
Proof
Clearly, over BLV, x >::::; Y f- X >::::;k y, (x >::::; y) -+ (y >::::; x) f- (x
>::::;k
y) -+ (y
>::::;k x) and, finally, (x
>::::; y&y >::::; z) -+ x
>::::; z f- (x
>::::;k y&y >::::;k
z) -+ (x >::::;k z). (We repeatedly use the fact that BL proves the formula
o
Definition 5.6.5 (1) The congruence axiom (or extensionality axiom) for a
predicate P of arity n with respect to >::::; is the formula
(2) A fuzzy relation s : M n -+ [0, 1] is extensional w. r. 1. a similarity r
on M iff, for each Ul,' .. ,Un, VI,··· , Vn EM,
Lemma 5.6.6 Let M = (M, r, s) be an interpretation of the predicates >::::;, P
(r, >::::; binary, s, P n-ary) which is a model of the axioms of similarity. M is a
model of the congruence axiom for P iff s is extensional w. r. 1. r.
Proof
If s is extensional and r(u, v) abbreviates r(ul' vt} *... *r(un , vn )
then we have r(u, v)
:S s(u)
:::} s(v), r(u, v)
:S s(v) :::} s(u), thus
r(u, v) :S [(s(u) :::} s(v)) 1\ (s(v) :::} s(u))], thus the axiom of congru-
ence is I-true. The converse is obvious.
0

MANY-VALUED PREDICATE LOGICS
143
Definition 5.6.7 We define the syntactic degree of each fonnula. dg(ep) = 1
if ep is atomic; dg(ep) = 0 if ep is a truth constant. dg((Vx)ep) =dg((3x)ep)
= dg(--,ep) = dg(ep), dg(ep -+ 'ljJ) =dg(ep&'ljJ) =dg(ep)+dg('ljJ). Furthermore,
dg(ep 1\'ljJ) =dg(epV'ljJ) = max(dg(ep), dg('ljJ». (Caution: 1\ and V are express-
ible by & and -+; but if you use the clauses for 1\ and V you get a syntactic
degree less than that given by using only &,-+. The only use is for the fol-
lowing lemma.)
Lemma 5.6.8 Let T be a theory (over BLV) containing the similarity axioms
for ~ and the congruence axioms for PI, ... ,Pn w.r.t ~. Let ep be a for-
mula built from the predicates PI,· .. ,Pn and possibly ~, let k = dg(ep).
Let Xl,·' . ,Xn be variables including all free variables of ep and let Yi be
substituable for Xi in ep (i = 1, ... ,n). Then
Proof
The assertion is true for ep atomic by definition (and is vacuous for
truth constants). Let ep, 'ljJ be fonnulas for which the assertion is true; put
dg(ep) = k, dg('ljJ) = h, let x ~k y stand for Xl ~k YI&··· &Xn ~k Yn.
Then
T f- [x ~k Y -+ ep(x) == ep(y)]&[x ~h y -+ 'ljJ(x) == 'ljJ(y)],
T f- (x ~k y&x ~h y) -+ [(ep(x) == ep(y))&('ljJ(x) == 'ljJ(y))]
T f- x ~k+h Y -+ [(ep(x)&'ljJ(x)) == (ep(y)&'ljJ(y))],
as well as
T f- X ~k+h Y -+ [(ep(x) -+ 'ljJ(x)) == (ep(y) -+ 'ljJ(y))]
(Cf. 2.2.10 (7),2.2.16 (26).)
Moreover, let k :s; h; then
T f- (x ~h y) -+ [(ep(x) == ep(y)) 1\ ('ljJ(x) == 'ljJ(y))]
and hence
T f- (x ~h y) -+ [(ep(x) 1\ 'ljJ(x)) == (ep(y) 1\ 'ljJ(y))]
as well as
T f- (x ~h y) -+ [(ep(x) V'ljJ(x)) == (ep(y) V'ljJ(y))].
(Cf. 2.2.12 (11), 2.2.16 (16).)

144
CHAPTER FIVE
Now assume only T
I- (x
-;::;:,k y) -+ (<p(x)
== <p(y»; then evidently
T
I- (x
-;::;:,k y) -+ ('<p(x)
== '<p(y». Moreover, write x'
-;::;:,k y' for
Xl -;::;:,k YI&'" &Xn-l -;::;:,k Yn-l (thus X -;::;:,k Y is x' -;::;:,k y'&xn -;::;:,k Yn). Our
assumption implies (substituting Xn for Yn), T I- x' -;::;:,k y' -+ (<p(x', xn) ==
<p(y', xn», thus T I- x' -;::;:,k y' -+ ((V'xn)<p(x', xn) == (V'Xn)<p(y',xn)) by
usual handling quantifiers. This completes the proof.
0
*
We shall now be interested in crisp similarities (crisp equivalences). For this
purpose we shall use the following lemma, useful in various other places in
the book, notably in Chap. 9 Sec. 3 (liar's paradox).
Lemma 5.6.9 Let r p be the interpretation of a predicate P of arity n in a
structure M. The relation rp is crisp (i.e. its range is included in {O, I}) iff
the formula (V'XI ... Xn)(P(XI' ... ,xn) V ,P(XI, ... ,xn)) is I-true in M.
Proof
Clearly, if rp is crisp then the above formula is I-true. On the other
hand, if°< rp(a) < 1 (in a given L, then (rp(a) *
0) < 1, thus if
V(Xi) = ai then IIP(XI,.") V ,P(XI," .)IIM,v < 1 and hence
II(V'XI," ,)(P(XI'''') V ,P(XI, .. .)IIM < 1.
0
Definition 5.6.10 Let J be a language whose predicatvs are =, PI, ... , Pn
(= binary). The equality axioms for I, = are
similarity axioms for =,
-
congruence axioms for PI, ... ,Pn w.r.t =,
-
the crispness axiom (V'x, y)(x = Y V ,(x = y» for =.
Remark 5.6.11 (1) Note that the congruence axiom for =, i.e.
(Xl = X2&YI = Y2) -+ (Xl = YI == X2 = Y2), follows by transitivity.
(2) Observe also that X =k Y is provably equivalent to X = Y due to
crispness:
BLV'I- X = Y -+ (x = Y -+ X =2 y),
BLV'I- x =1= Y -+ (x = Y -+ X =2 y),
BLV'I- (x = Y V x =1= y) -+ (x = Y -+ X =2 y).
Thus 5.6.8 has the following corollary:
Corollary 5.6.12 Let T be a theory (over BLV') containing the equality ax-
ioms for the language ofT and =; let <p(XI,
,xn) be a formula ofT. Then
T I- (Xl = YI&'" &xn = Yn) -+ (<p(XI,
,xn) == <p(YI, ... ,Yn».

MANY-VALUED PREDICATE LOGICS
145
In the rest of the section we present the role of similarity relations for
defining fuzzy sets from crisp examples. We show that if X is a crisp subset
of M and r is a similarity on M then there is a smallest fuzzy set s which is
extensional w.r.t. r and s(m) = 1 for all m E X (s is the fuzzy set ofelements
similar to elements from X). Moreover, we show that s is definable in the
corresponding language and the assumption that X is crisp is superfluous.
Theorem 5.6.13 Let T be a theory (over BUt) containing axioms of similar-
ity for ;:::;;;, let P, P be n-ary predicates of T and let the following formula be
provable in T:
P(Xl,""Xn) = (3Yl,· .. ,Yn)(Xl ;:::;;;Yl&".&Xn ;:::;;;Yn&P(Yl, .. ·,Yn))·
Then T proves the congruence axiom for P and proves
(\Ix ...)(P(x, ...) -7 p(x, .. .)); moreover, if Congr(Q,;:::;;;) is the congru-
ence axiom for another n-ary predicate Q then T proves
[Congr(Q, ;:::;;;)&(\lx, ... )(P(x, ...) -+ Q(x, . ..)J -+
-7 (\Ix, ...)(p(x, ...) -+ Q(x, .. .)).
(This formula evidently says that if Q is extensional and contains P then it
also contains P.)
Proof
For simplicity assume n = 1. Thus T proves the formula p(x) =
(3y)(y ;:::;;; x&P(y)). Consequently,
T f- (3y)(y ;:::;;; x&P(y) -+ p(x)),
T f- (\ly)(y;:::;;; x&P(y) -+ p(x)),
T f- x ;:::;;; x&P(x) -+ p(x),
T f- P(x) -+ p(x).
Furthemore, T proves the following chain of implications:
[(p(x)&x
;:::;;; z)J -+ [(3y)(y
;:::;;; x&P(y))&x
;:::;;; z)J -+ [-+ (3y)(y
;:::;;;
z&P(y))J -+ p(z). (Note that we have used 5.1.18 (9).) Thus T proves the
congruence axiom.
Finally, let Qbe as above; write Congr for Congr(Q,;:::;;;) and P ~ Qfor
(\lx)(P(x) -+ Q(x)). Then
T f- P ~ Q -+ [(x;:::;;; y&P(y)) -7 (x;:::;;; y&Q(y))],
T f- Congr -7 [(x;:::;;; y&Q(y)) -+ Q(x)J,

146
CHAPTER FIVE
T I- (P ~ Q&Congr) -+ (\lx)(\ly)((x ~ y&P(y)) -+ Q(x)),
T I- (P ~ Q&Congr) -+ (\lx)(F(x) -+ Q(x)).
This completes the proof.
0
Note that each unary predicate defines a similarity as follows.
Lemma 5.6.14 Let T be a theory containing a unary predicate P and a binary
predicate ~ and proving
(\Ix, y)(x ~ y == (P(x) == P(y))).
Then T proves similarity axioms for~.
Proof
Easy; just use BL\I I- [(P(x)
=
P(y))&(P(y)
-+ (P(x) == P(z)).
P(z))] -+
o
Remark 5.6.15 Note that our investigation generalizes immediately to the
many-sorted case in such a way that each sort s may have its similarity (equal-
ity) predicate of the type (s, s). A variant having one similarity predicate
across all sorts is also possible but needs some changes in our basic defini-
tions (of a language, etc.)
Example 5.6.16 To give simple examples of theories in fuzzy predicate cal-
culus, let us reexamine our examples concerning large numbers 3.3.21,4.1.27.
Consider a theory To with one binary predicate S (successor), the equality
predicate =, a constant 0for zero and a unary predicate L (large). Axioms are
as follows:
crispness axioms for S and =, Le.
reflexivity, symmetry and transitivity of =;
congruence for S, L:
(Xl = XZ&YI = yz) -+ (S(XlYI) == S(xz, yz)),
Xl = Xz -+ (L(xI) == L(xz))
functionality for S:
(S(x,yI)&S(x,yz)) -+ YI = yz
Axioms of successor (cf. 1.4.10)
-,S(x, O)
(S(XI, y)&S(xz, y)) -+ Xl = Xz
y:f:. 0 -+ (3x)S(x, y).
Monotonicity for L: (S(x, y)&L(x)) -+ L(y).

MANY-VALUED PREDICATE LOGICS
147
A standard model of To is the set N of natural numbers with absolute
equality , S interpreted by the successor relation {(m, n) In = m + I} and
some (fuzzy) interpretation of L, (rL : N -+ [0,1], non-decreasing). Note
the existence of non-standard models, e.g. a copy of the standard model to-
gether with a disjoint copy of integers with the successor relation and some
interpretation of L. More formally:
M = {(i, m)l(i =°and mEN) or (i = 1 and mE Z)} (where Z is the
set of integers); rs = {((i, m), (i, n))ln = m + I}.
Now look at how we may express our assumption on L:
Tl is To plus (r&S(x, y)&L(y)) -+ L(x) (think ofr = 0.999999). Note that
in LV' this is equivalent to (S(x, y)&L(y)) -+ (L(x) V 1 - r).
A standard model of To is a model of T1 over LV' iff for each n E N,
rr:+ 1 ~ rL(n) + (1 - r); for example, rL(n) = O.OOOOOln for n
~ 106 ,
rL(n) = 1 for n ~ 106.
T2 is To plus S(x, y)&L2(y) -+ L(x). A standard model of T2 over LV'
satisfies, for each n, rL(n + 1) ~ rL(n) + l-r~(n); thus if rL(n) < 1 for
some n then for all n. Note that non-standard model of To above is a model
ofT2 e.g. if rL(O, 0) = 0, rL(O, n + 1) = rL(O, n) + l-rL
2(O,n) , rL(l, k) = 1
for all k. (All non-standard elements are large in degree 1.) T3 is To plus
S(x, y)&L(y) -+ 2L(x) etc. Discuss the models of T3 over LV'. Discuss the
models of T1, T2 over ITv'.
Note that we shall investigate less simple examples of theories in Ch. VII
(theories of fuzzy control, FC) and Ch. IX Sec. 3 (arithmetic with a fuzzy
truth predicate).

CHAPTER SIX
QUESTIONS OF COMPUTATIONAL COMPLEXITY AND
UNDECIDABILITY
The present chapter is devoted to an analysis of computational complexity of
fuzzy propositional calculi and to the determination of the degree of unde-
cidability of fuzzy predicate calculi. The results are important but will be
only rarely used in other chapters, so the reader unfamiliar with the the-
ory of (polynomial) complexity and/or arithmetical hierarchy may skip the
chapter as a whole. On the other hand, in Section 1 we summarize all nec-
essary material so that the non-expert in complexity or arithmetical hierar-
chy may also read the chapter and understand the results. In Section 2 we
study the computational complexity of L, G, II (propositional Lukasiewicz,
Godel and product logic) and show, among other things, that their sets of 1-
tautologies T AUT!-", TAUT?, T AUTP are all co-NP-complete. In Section
3 we study the corresponding predicate calculi LV, GV, IIV. We show that
the set T AUT?1f of Godel predicate logic is E1-complete, T AU7}1f is II2-
complete and T AUTplf is Ih-hard (thus not in E2; it remains open if it is in
II2 or is still more complex). Hence all these predicate calculi are undecid-
able.
6.1.
PRELIMINARIES ON COMPLEXITY AND ARITHMETICAL HIERARCHY
In the present section we are going to survey basic facts on polynomial com-
putational complexity and recursive (un)decidability. All necessary details are
available in standard monographs on complexity theory (as e.g. [158] and on
recursion theory (e.g. [173]). The reader may also consult [91]. The first part
of the section deals with complexity and the second with undecidability and
arithmetical hierarchy. They may be read independently.
6.1.1 The notion of a multitape Turing machine in supposed to be known:
it has finitely many tapes, one being the input tape, finite alphabet, finitely
many internal states and a finite set of instructions. Given a word (finite se-
quence of elements of the alphabet) the machine puts the word in its input
tape and starts to work in discrete steps. In each step the machine either stops
or changes the content of the tapes. This is done in dependence on the ac-
tual content of the tapes, the actual internal state and the set of instructions.
The mechanism M is deterministic if the next content of the tapes (and the
149

150
CHAPTER SIX
next internal state) is uniquely determined by all these; or it may have finitely
many possibilities from which it can choose - then it is nondeterministic.
Any sequence of successive steps determined by the machine is a computa-
tion with the input word given. It may be finite (stop after finitely many steps)
or infinite (the machine runs forever). We ignore the details: either the reader
knows them or he/she just gets only preliminary information. M is total if
each computation is finite.
6.1.2 Each deterministic Turing machine M defines a function f M assigning
to each word x understood as the input a word f M (x) uniquely determined by
the last content of a tape called output tape - if the computation determined
by x is finite; otherwise f M (x) is undefined. This easily extends to a function
from N n into N (N is the set of all natural numbers) by coding numbers e.g.
by their dyadic representations and using an additional symbol as a marker. A
function from N n into N is partial recursive if it is computed by a determin-
istic Turing machine; it is recursive if it is partial recursive and total. (This
may be taken as a definition; if you prefer another definition you get this as a
theorem.)
6.1.3 Let M be a Turing machine (deterministic or not) and let e be one of its
internal states called accepting state. The language accepted by M, e is the
set of all words x such that there is a finite computation with input x such that
when stopping the machine is in the accepting internal state.
6.1.4 A machine M runs in polynomial time if there is a polynomial p(n)
such that for each word x of length n, each computation with the input x
stops after :s p(n) steps. P is the class of all languages L accepted by a
deterministic Turing machine running in polynomial time, similarly for NP
and non-deterministic. Clearly, P ~ NP; note that the problem whether P =
NP is one of most famous open problems of computational complexity. A
language is in co-NP if its complement is in NP.
A language L is NP-complete if it is in NP and each L' E NP is polyno-
mially reducible to L, i.e. there is a function f computed by a deterministic
Turing machine running in polynomial time such that for each word x in the
alphabet of L', x E L' iff f (x) E L. Similarly for co-NP.
6.1.5 Let SATBool be the set of all satisfiable formulas cp if the Boolean
propositional calculus (i.e. there is an evaluation e of propositional variables
such that e(cp) = 1). Note that for complexity considerations we understand
formulas of propositional calculus as words in the finite alphabet p, 0,1,-+
, .." [possibly also /\, V]; the n-th propositional variable is coded as the word
consisting of p followed by the dyadic representation of n (e.g. Ps is pIOI).

COMPLEXITY AND UNDECIDABILITY
151
Theorem 6.1.6 (Cook's theorem.) SATBool is NP-complete.
Remark 6.1.7 Let T AUTBool be the set of all tautologies ofBoolean propo-
sitionallogic. Clearly, T AUTBool is co-NP complete since
<p E T AUTBool iff (.<p ~ SATBool ).
Finally we present a fact on the computational complexity of linear pro-
gramming; we shall use it in determining the complexity of Lukasiewicz
logic.
Definition 6.1.8 The LP-problem. Assume the following to be given: a ra-
tional matrix A having m rows and n columns, a rational column vector b,
a rational row vector C and a rational number d. (Thus A = (akl)i:t::~, b =
(bl , ... , bn), C = (CI, ... , cm), akl, bl' Ck all rational.)
(A, b, c, d) is a particular LP-problem. The size of (A, b, c, d) is the num-
ber of bits necessary to represent all these rationals as fractions of dyadic
numbers (using some few additional markers as j, comma, end-of-line etc.,
details unimportant).
The general LP-problem reads: given A, b, c, d as above, does the system
Ax ~ b, ex > d have a solution, i.e. is there a vector x = (Xl,'" ,xm) such
that
L
aklxk ~ bl for each t,
k
LCkXk > d.
k
Theorem 6.1.9 The general LP-problem is in NP.
For a proof and a detailed exposition see [182]): (see p. 121, Corollary
1O.la). Note that more is known (and can be found in [182]): there is a func-
tion f in P assigning to each (A, b, c, d) a solution or saying that no solution
exists, Le. the LP-problem is in P. But we shall not need this stronger result.
On the other hand, we may assume that Xl,'"
,Xn vary over [0, 1] since this
is achieved by adding just new inequalities Xi ~ 1, -Xi ~ O.
*
6.1.10 Our next topic is arithmetical hierarchy. It concerns sets of natural
numbers (or things coded by natural numbers) definable by formulas of arith-
metic. Recall 1.4.7 where we defined the language ofarithmetic with function

152
CHAPTER SIX
(2)
symbols for successor, addition and multiplication and predicates =,~. In
1.4.10 we defined its counterpart without function symbols, with the binary
predicate S «(S(x, y)) saying "y is the successor of x") and ternary pred-
icates A, B for addition and multiplication. Recall also the standard model
N of the language of arithmetic - the structure of natural numbers. We shall
use the same symbol N whether it is the structure of natural numbers with
operations or with the corresponding relations. The reader may consult [91]
for a more detailed survey (Chapter 0 and 1).
We shall formulate our survey in such a way that it is meaningful in both
presentations of arithmetic - with function symbols or without. (When used
in fuzzy logic we shall need the version without function symbols.)
Definition 6.1.11 (1) Bounded quantifiers (VX ~ y), (3x
~ y) are defined
as abbreviations: (VX ~ y)<p stands for (V'x)(x ~ y ,. <p) and (3x ~ y)<p
stands for (3x)(x ~ y 1\ <p). A formula is bounded if all quantifiers occuring
in it are bounded.
A formula is Iif it has the form
E I
(3u)1/J
III
(V'u)1/J
E2
(3u)(V'v)1/J
II2
(V'u)(3v)1/J
for some bounded formula 1/J. For each n > 0 we may define En formulas
as formulas of the form (3ud(V'U2) ... 1/J with n alternating quantifiers and
similarly lIn; but we shall need only those in the table above.
(3) A set A
~ N is Ei (IIi respectively) if there is a Edormula (IIi-
formula) <p(x) with one free variable defining A in N, i.e. for each n,
n E A iff 11<pIlN[n] = 1.
Similarly for a relation, i.e. a subset of N k , k > 1. The set A is ~i if it is
both Ei and IIi, i.e. has two definitions, one being a Edormula and the other
a IIi-formula.
6.1.12 (1) A ~ N is a recursive set iff it is ~l' (This is in fact a theorem; the
definition was presented in 6.1.2).
(2) A ~ N is recursively enumerable if it is EI. (Take this for a definition.)
Definition 6.1.13 A
~ N is recursively reducible to B
~ N if there is a
recursive function f such that A = {nlf(n) E B}. (Compare this with 6.1.4).
A is Ei-complete if A is a Ei-set and each Ei-set is recursively reducible to
A. Similarly for IIi-complete.

COMPLEXITY AND UNDECIDABILITY
153
Lemma 6.1.14 (1) For each i > 0 there is a Ei-complete set and a IIi-
complete set. A El-complete set is not recursive; the same for a IIi-complete
set. A Ei+I-COmplete set is neither in Ei nor in IIi; the same for a IIi+I-
complete set.
(2) On the other hand, each Ei-set and each IIi-set is obviously both L:i+l
and IIiH ; each recursive set is both L:I and III.
6.1.15 We mentioned above the coding of numbers by words; conversely,
we can code words of a finite alphabet by numbers, e.g. if the alphabet has
n numbers we can understand them as non-zero digits in the (n + 1)-adic
representation of numbers. Given this we have the following classical result
oflogic:
Lemma 6.1.16 Let I
be a predicate language having at least one at least
binary predicate. Then the set of all formulas of I provable in BooN is a
L:l-complete set.
Similarly, the set of all formulas provable in the arithmetic QA is E I-
complete; the same for PA.
Lemma 6.1.17 There is a L:l-relation C ~ NZ such that, if we define Cm =
{nl(m,n) E C} then the set Fin = {mlCm is finite} is a L:z-complete set
(thus N - Fin is a lIz-complete set).
Lemma 6.1.18 Let us investigate Robinson arithmetic QA. It has finitely
many axioms so that we may replace them by one - the conjuction of all
of them - and call it also QA. We have the standard model N of QA; but it
is a result of mathematical logic that QA also has non-standard models dif-
ferent from N: in each model of QA, all formulas provable in QA are true,
but there is a model M of QA and formula cp true in N but false in M. The
same for each recursively axiomatized consistent theory T 2 QA (i.e. T as
the set of special axioms is a recursive set). This is G6del's celebrated first
incompleteness theorem.
For each model M of QA there is a unique isomorphic embedding of
N onto an initial sequent of M; i.e. M has a zero (interpretation of !D, the
successor of zero, the successor of the succcessor of zero etc.; this gives a
copy of N - standard elements of M. All nonstandard elements (if any) are
only behind the standard ones.
The n-th standard element (copy of n) is defined in each M by the formula
n
(3xo, ... ,xn)(xo = QI\ 1\ S(xi,xi+d I\xn = x);
i=l

154
CHAPTER SIX
we call it numn(x). We can define, inside QA, the n-th numeral to be a
constant 11 by postulating numn(11). 30
Lemma 6.1.19 (~l-completeness ofarithmetic) (1) Each closed ~l-fonnula
true in N is provable in QA and hence true in each model of QA.
(2) More generally if <p(x, .. . , y) is ~l,
m, . .. ,n E Nand
1I<pIIN[m, ... ,nJ = 1 then for each model M of QA, 11<pIIM[m', ... ,n'J
1 where m', . .. , n' are isomorphic copies of m, ... ,n (interpretations of
m, ... ,11).
6.2.
COMPLEXITY OF FUZZY PROPOSITIONAL CALCULI
Definition 6.2.1 Let C stand for L, G, or II.
SATf
SATffos
TAUTf
TAUTffos
{<pI for some [0,1J-evaluation e, ec(<p) = I},
{<pI for some [0, IJ-evaluation e, ec(<p) > O},
{<pI for each [0, 1J-evaluation e, ec(<p) = 1},
{<pI for each [O,lJ-evaluation e, ec(<p) > O}.
Clearly, SATI stands for I-satisfiable, SATpos for positively satisfiable and
similarly TAUT for tautologies.
Definition 6.2.2 Let PI, ... ,Pn
be
propositional
variables
and
I
~
~ {PI, ... ,Pn}. I is understood as the set of variables evaluated by O. We
define, for each fonnula <p built from PI, ... ,Pn, its translation <pI as fol-
lows:31
-I
-
o = 0,
I
O-·f·
I
Pi =
I
2 E
,
(0 -+ <p)I
(<p -+ 0)1
(<p -+ 7/J)I
(<p&7/J)1
(<p&7/J)I
-I
-
1
= 1,
p{ = Pi otherwise;
I for all <p,
=
0 if <pI is not 0,
<pI -+ 'l/JI otherwise
=
0 if at least one of <p, 7/J is 0;
<pI&7/JI otherwise.
30 When dealing with function symbols we write Xi+! = S(Xi) and may under-
stand 11 to be the term S(S(S ... (Q) ...)) (n copies of S).
31 See [9].

COMPLEXITY AND UNDECIDABILITY
155
Lemma 6.2.3 Let C be G or II. For each formula cp, and set I ~ {PI, ... ,Pn},
either cpI is 0 or cpI is a formula not containing O. For each evaluation e such
that e(Pi) = 0 iff Pi E I, ec(cp) = ec(cpI). Moreover ec(cpI) = 0 iff cpI is O.
Proof
easy by induction.
o
Remark 6.2.4 Recall that in 6.1.7 we defined SATBool to be the set of all
formulas cp satisfiable in Boolean (two-valued) logic, i.e. such that form some
{O,I}-evaluationv(v(pi) = lorv(pd = O),v(cp) = l.SimilarlyTAUTBool .
Lemma 6.2.5 The following are equivalent:
(1) cp E SATp~s;
(2) cp E SATp~s;
(3) for some I, cpI is not 0;
(4) cp E SATBool .
Proof
Evidently, (4) implies both (1) and (2). We prove (l)::::}(3), (2)::::} (3)
and (3) ::::} (4).
Let C be G or II, let cp E S ATffos. Thus for an evaluation e and for I =
{piIe(Pd = O} we get ec(cpI) = ec(cp) > 0 and hence <pI is not O.
Now assume (3) and let V(pi) = 0 for Pi E I, v(pd = 1 otherwise. Since
<pI does not contain 0 we get v(<pI) = 1 and hence v(cp) = 1 (compute
v(cp), v(<p)I using Boolean truth tables or, which is the same, in G or II-
they coincide for values 0, 1).
0
Corollary 6.2.6 The sets
SAT?, SATp~s, SAT?, SAT~s, SATBool
are all equal; hence they are NP-complete.
*
We now tum to the problem of tautologicity.
Lemma 6.2.7 TAUTp~s = TAUT~s = TAUTBool, thus all there sets are
co-NP-complete.

156
CHAPTER SIX
Proof
Clearly, T AUTBoo! ;2 T AUTffos for C = G, II. On the other hand,
recall that Boolean logic in axiomatized by BL+(cp V -,cp). Now for C = G, II,
(cp V -,cp) E T AUTffos and T AUTffos is closed under modus ponens (since *
has no zero divisors in G, II). This gives the result. (Note: for L, T AU~s is
not closed under modus ponens: (pv -,p) belongs to T AU~s' but (PV -,p)2
~)
0
Lemma 6.2.8 Let C be G or II. For each formula cp, let cp""'''''' be the formula
resulting from cp by replacing each propositional variable Pi by its double
negation -'-'Pi. Then cp E T AUTBoo! iff cp""'''''' E T AUTf.
Proof
Clearly, for each e, ec(-'-'Pi) is 1 or 0. And if e'(pd = (-)(- )e(pd
then e(cp""'''''') = e'(cp).
0
Corollary 6.2.9 For C being G or II, T AUTf is co-NP-hard.
Theorem 6.2.10 32 TAUT? is co-NP.
Proof
To show that T AUT? is in co-NP observe that cp ~ TAUT? iff
there is an evaluation e of PI, ... ,Pn (variables of cp) taking only values in
the set Dn =
{O, n~l"'"
n~l' I} such that ea(cp) < 1. Indeed, the set
{e(PI), ... ,e(Pn)} contains at most n elements different from 0,1. And there
is a trivial order isomorphism f of [0,1] sending e(pI), ... ,e(pn) into Dn.
And in [0, l]a each order isomorphism is an isomorphism of the G-algebra
[O,I]a.
Thus an algorithm showing cp ~ TAUT? guesses an evaluation e, e(Pd E
D n , and computes the truth value. This shows that the complement of
T AUT? is in NP and thus T AUTIG is co-NP-complete.
0
We shall obtain co-NP-completeness of TAUT? later, as a consequence
of our investigation of L (and of our embedding of L into II). Note that for
C = G or II, cp E T AUTffos iff -,cp ~ SATffos'
*
Remark 6.2.11 Let us consider L. Recall that in L, e(cp) = 1 iff e(-,cp) = 0;
likewise, e(cp) = °iff e(-,cp) = 1. Thus
cp E T AUTr
iff
(-,cp) ~ SAT~s,
cp E T AUT~s
iff
(-,cp) ~ SArro
32 See [9].

COMPLEXITY AND UNDECIDABILITY
Lemma 6.2.12
(1) SATBool C SATL C SATL .
I
pas'
(2) T AUTBool => T AUTL
=> T AUTL
pos
I .
All these inclusions are strict.
157
Proof"
Non-strict inclusions are obvious from definitions; strictness is showed
by simple examples. Indeed,
(p /\ -,p) E SA~s - SATr,
(p == -,p) E SATr - SATBool ,
(p V -,p)&(p V -,p) E T AUTBool - T AUrJ:os,
(p V -,p) E T AUrJ:os - T AUTr.
o
Lemma 6.2.13 SATr and SAThs are NP-hard; thus T AUT-r and T AUThs
are co-NP-hard.
Proof"
For each formula ep, let ep* , ep** be the formulas
(PI V -'PI)&
&(pn V -'Pn)&ep
(PI V -'PI)2&
&(Pn V -'Pn)2&l.{i
respectively (a2 is a&a). Thus ep** is equivalent to (ep*)2. Clearly, both
lh(ep*) and lh(ep**) depend polynomially on lh(ep) (the length of ep). First
observe that
ep E SATBool iff ep* E SATr
(since e(p V -,p) = 1 implies that e(p) = lor e(p) = 0). Second we show,
assuming that ep contains only connectives /\, V, -',
ep E SATBool iff <p** E SArJ:os.
To prove this observe first that e((p V -,p)2) > 0 is equivalent to e(p) -#
~.
Furthemore, if e(pd -#
~ for all i = 1, ... ,n and e'(Pi) = 1 iff e(pi) >
~,
e'(Pi) = 0 iff e(pi) < ~ then for each <p containing only connectives /\, V, -,
we get e'(<p) = 1 iff e(ep) > ~ iff e(<p2) > O. (Verify this by an easy induction
on the construction of <p.) Thus if e(ep**) > 0 then e(pi) > 0 for all i and
e(<p2) > 0, and e'(<p) = 1.
0
Lemma 6.2.14 SATf:os is in NP and so is SATr.

158
CHAPTER SIX
The proof is postponed to the end of this section.
Corollary 6.2.15 SA~s' SATf- are NP-complete. Thus TAU'!} and
T AUT~s are co-NP-complete. 33
Lemma 6.2.16 TAUT? is co-NP-complete.
Proof
It remains to prove that TAUT? is in co-NP, which in turn is equiv-
alent to the statement saying that the set {cpl for some e, err (cp) < I} is in
NP. Recall the embedding of Lukasiewicz logic into II (cf. 4.1.14) and the
mapping cpI from 6.2.2. The following are equivalent:
(3e)(err(cp) < 1),
(31 ~ {PI, . .. ,Pn})(3e' positive) (eil(cpI) < 1)
(e'(Pi) > 0 for Pi occuring in cpI),
(3I)(3e" positive) (eL(cpI) < 1) (thanks to the embedding),
(3I) (1\ Pi A -,(cpI) E SATi:os) .
Pi!iI
This reduces polynomially the complement of TAUT? to SA~s and
hence TAUT? is in co-NP.
0
Theorem 6.2.17 Summarizing, we have the following:
(1) SATG = SATG
= SATIl = SATIl
= SATBool is NP-complete
I
pos
I
pos
.
(2) T AUTp~s = T AUTp~s = T AUTBool, is co-NP-complete.
(3) TAUT?, TAUT?, T AUTBool are pairwise distinct and all co-NP com·
plete.
(4) SA~s =:> SA'!} =:> SATBool , all NP-complete.
(5) T AUTf- c T AUT~s C T AUTBool, all co-NP-complete.
33 See [150]; for the following lemma see [9]

COMPLEXITY AND UNDECIDABILITY
*
159
6.2.18 We now present a proof of SAT!-, SAT!:os being in NP (this is the
only thing remaining to be proved).34 We shall need the following definition:
a particular MIP-problem (mixed integer programming), is a tuple (A, b, c, d, k)
where (A, b, c, d) is a particular LP-problem, cf. 6.1.8 and k represents the ad-
ditional condition saying that Xk,'"
,Xn must be Boolean (zeros or ones). It
is immediately seen that the general MIP-problem is in NP: given (A, b, c, d, k)
guess Xk, ... ,Xn nondeterministically (zeros or ones) and then solve the re-
sulting particular LP-problem.
We shall construct functions h, fpos, both in P, such that for each formula
cp, h (cp) is a particular MIP-problem which has a solution iff cp E SAT/-;
similarly for fpos and SAT!:os' The following is the key lemma:
Lemma 6.2.19 For any formulas cp, 'ljJ, any i E [0,1] and any evaluation e,
(1) e(cp -t 'ljJ) ~ i iff there are iI, i2 E [0,1] such that
e(cp) S iI,
e('ljJ) ~ i2,
i + il - i2 = 1.
(2) e(cp -t 'ljJ) S i iff there are iI, i2 E [0,1] and y E {a, 1} such that
e(cp)
>
iI,
e('ljJ)
<
22,
Y - 2
<
0,
Y + il
<
1,
Y
<
i2,
Y + i + il - i2
1.
Proof"
(1) Assume the condition; then either e(cp) S e('ljJ) and e(cp -t 'ljJ) = 1 ~ i
or e(ep)
~ e('ljJ), e(cp -t 'ljJ) = 1 - e(cp) + e('ljJ)
~ 1 - il + i2 =
i. Conversely, let e(cp -t 'ljJ)
~ i. Assume i < 1. If z ~ e(cp) then
34 The first proof is due to Mundici [150]; our prooffollows Hahnle's [71].

160
CHAPTER SIX
(z => e('ljJ)) ::; e(cp --+ 'ljJ); thus if there is an il 2: e(cp) such that
(il => e('ljJ)) = i then put i2 = e('ljJ); you have e(cp) ::; iI, e('ljJ) = i2
andi = 1- il +i2. If (1 => e('ljJ)) = e('ljJ) > i thenputil = 1, i2 = i;
you have e(cp) ::; iI, e('ljJ) 2: i2, i + il - i2 = i + 1 - i = 1. Finally if
i = 1 and e(<p --+ 'ljJ) = 1 then e(cp) ::; e('ljJ); put il = i2 = e(cp).
(2) Assume the condition and let y = 0; we get e(cp) 2: iI, e('ljJ) ::; i2, i =
1 - il + i2 ::; 1, i2 ::; iI, thus (e(cp) => e('ljJ)) ::; 1 - il + i2 = i.
Now assume the condition and let y = 1, then we get i = 1, il =
0, i2 = 1, e(cp) 2: 0, e('ljJ) ::; 1, which is true for all cp, 'ljJ; and also
e(cp --+ 'ljJ) ::; 1 is always true. Thus the condition implies e(cp --+ 'ljJ) ::; i
in both cases for y. Conversely, assume e(cp --+ 'ljJ) ::; i. If i = 1 then
choose y = 1, il = 0, i2 = 1 and check that all the conditions are
satisfied. If i < 1 then choose y = 0; you have 1 - e(cp) + e('ljJ) ::; i,
thus for some il 2: e(cp) and i2 ::; e('ljJ) you get 1 - il + i2 = i.
o
6.2.20 (Construction). Let us work with finite lists of conditions of the fol-
lowing kinds: at most one condition io > 0, where io is a variable ranging
over [0, 1]; conditions of the forms e(cp) ::; i, e(cp) 2: i where cp is a formula
and i a variable ranging over [0, 1]; linear inequalities whose left hand side
is a linear polynomial in some variables il , ... over [0,1] and some variables
yl, ... over {O, I} with integer coefficients, the inequality sign is ::; and the
right hand side is an integer. For testing cp E SATr the starting list consists
just of e(cp) 2: 1; for cp E SAT~s it consists of (e(cp) 2: io, io > 0). Using
lemma 6.2.19 we may replace each such list containing at least one condition
on e(a --+ (3) by another, which results by replacing this condition by some
conditions on e(a), e({3) and some new linear inequalities with some new
variables: at most 5 new inequalities (an equality expressed as two inequali-
ties) with at most 2 new real variables and 1 boolean variable. This reduction
preserves satisfiability: there is a choice of values of propositional variables
and of the i's and y's satisfying all the conditions of the starting list iff the
same is true for the resulting list.
Iterating this we process each subformula of cp exactly once (distinct oc-
curences of the same formula as a, subformula in cp understood as different
subformulas; conditions e(Pk) 2: i and e(pk) ::; i are replaced by jk 2:
i, jk ::; i where jk is a new variable over [0,1] corresponding to e(pk)' We
finally get a list containing no conditions on formulas, thus consisting only
of inequalities; thus we get a particular MIP-problem which has a solution iff
the starting list is satisfiable. In the case of starting list e(cp) 2: 1 satisfiabily
means that cp E SArr; in the case of the list (e(cp) 2: io, io > 0) this means
cp E SAT~s'

COMPLEXITY AND UNDECIDABILITY
161
Thus we have reduced both SATf and SAT'f:os to the general MIP prob-
lem; a pedantic analysis shows that the reduction is achieved in deterministic
polynomial time (and the size of the constructed MIP problem is polynomial
in the size ofthe starting formula). This completes the proof of Lemma 6.2.14
saying that both S ATf and S AT~s are in NP.
6.3.
UNDECIDABILITY OF FUZZY LOGICS
In this section we shall investigate the position of the set of I-tautologies of
LV, GV, IIV respectively in the arithmetical hierarchy. We denote these sets
by T AUY!-v, T AUTGV, T AUTIIV respectively. We assume that a predicate
language I is fixed throughout and that K is recursive in the usual sense, so
that e.g. the set ofall formulas, proofs is recursive etc. (This is in particular the
case ifI is finite, i.e. has finitely many predicates and object constants.) The
results are as follows: T AUTGV is ~l-complete, T AUY!-v is II2-complete
(and so is T AUTRPLV -
Pavelka predicate logic); T AUTIIV is II2-hard
(and it is an open problem if it is in II2). Thus GV is as undecidable as the
classical predicate calculus; LV and IIV are more undecidable (are not recur-
sively axiomatizable). We start with a simple lemma.
Lemma 6.3.1 The logics GV, IIVare undecidable, i.e. the sets T AUTGV,
T AUTIIV are not recursive.
Proof:
For G and II extend the definition 6.2.8 to the predicate calculus
(tp-'-' results by attaching double negation to each atomic formula). Clearly,
tp is a Boolean tautology iff tp-'-' is in T AUTGV iff tp-'-' is in T AUTIIV.
0
We shall prove undecidability of LV (and much more) below.
Corollary 6.3.2 T AUTGV is a ~l-complete set.
Proof:
Indeed, T AUTGV is ~l-hard by the preceding lemma; on the other
hand, T AUTGV is in ~1 since by the Completeness Theorem 5.3.3, tp E
E T AUTGV iff tp is provable in GV.
0
Lemma 6.3.3 T AUY!-v is in II2.
Proof:
This follows immediately from the (Pavelka style) completeness of
RPLV: tp E TAUY!-v iff the provability degree /tpIRPLV of tp equals 1, i.e.

162
CHAPTER SIX
(Vr < 1 rational)(3d)(d is a RPL-proof of (1' ~ cp».
Clearly, this condition is Ih
Theorem 6.3.4 T AUTLV is a TI2-complete set.
o
This needs a rather complicated proof35 ; before we start it we show the
following consequence:
Lemma 6.3.5 T AUTIN is Ih-hard (thus not in ~2).
Proof
We recursively reduce T AUTLv to T AUTIN using the embedding
of L into TI. Extend the given language by a new constant c and a new unary
predicate Q; this gives a new closed formula Q(c). For each formula cp of the
original language define cp* as follows:
P(X1," .)* is Q(c) V P(X1, ...)
0* = Q(c), 1* = I,
(cp ~ 'ljJ)* = (cp* ~ 'ljJ*),
(cp&'ljJ)* = Q(c) V (cp* 8 'ljJ*),
((Vx)cp)* = (Vx)(cp*).
Put cp** to be -,-,Q(c) ~ cp*. Now it is easy to show that cp E T AUTLV iff
cp**
E
T AUTIN in an analogy to 4.1.16 (For each model M
=
=
(M, (rp )p, (me)e)
define M
0 fa
to be (M, (rp)p, (me)e)
where
r'(u, ... ,v)
fa(r(u,
,v));
further
let
Mta
be
the
model
(M, (r~)p, (me)) where r'}(u,
,v) = max(a, r(u, ... ,v)). Then prove
fa(IICPII~V:V) = IIcp*ll~ofa,v,
Ilcp* II~v = IIcp* lI~ta,v'
thus
fa(IICPII~)
=
IIcp*lI~
as in the proof of 4.1.16.)
Ilcp* II~ofa'
IICP*II~ta
o
Theorem 6.3.6 The set of all formulas of LV true in all finite models is TI1.
35 Due to Ragaz [167].

COMPLEXITY AND UNDECIDABILITY
163
Proof
This is because by the proof of Theorem 5.4.30 a formula is true in
all finite models iff it is true in all rational-valued finite models (all relations
rp take only rational values).
0
*
Now we elaborate the proof of T AUTLV' being II2-complete.
Definition 6.3.7
(1) Call a formula classical ifall connectives it contains are
among 1\, V,...,.
(2) A model M is predefinite if for each classical formula c.p and each evalu-
ation v, 1Ic.pIIM,v i= !.
(3) For an n-ary predicate P, o{P) is the formula
[('IxI, ... ,Xn)(P{XI, ... ,xn) V ""P{XI, ... ,xn)j2.
Lemma 6.3.8 A model M is predefinite iff lIo{P) 11M > 0 for each predicate
P.
Proof
If for some P Ilo{P)IIM = 0 then 11{'Ix)(P(x) V ...,P(x) 11M ::; !'
thus II ('Ix)(P(x) V""P{x))IIM = ! (since IIP(x) V ...,P(x) IIM,v ~ ! for
all v), which means that M is not predefinite. On the other hand, assume
Ilo(P)IIM > 0 for all P and let c.p be a classical formula containing no
predicates except PI,
,Pn; let t = min(lIo(PdIIM, ... , Ilo(Pn)IIM). This
means that for i = 1,
, n, 1I('Ix)(P(x) V ...,P(x)) 11M ~ (1 + t)/2 (since
((1 +t)/2)*((1 +t)/2) = t). It follows that for each a E M n , rp(a) > !+ ~
or r p (a) < ! - &. This extends to an arbitrary classical formula c.p built from
PI, ... ,Pn : for each v, 11c.pIIM,v > ~ + ~ or 1Ic.pIlM,v <
~ -
~. Hence M is
predefinite.
0
Definition 6.3.9 For each predefinite structure M = (M, {rp )p, (mc)c) the
corresponding Boolean structure is M/2 = (M, (rp)p, (mc)c) where rp(a) =
1 iffrp(a) > ~,otherwise rp(a) = O.
Lemma 6.3.10 Let M be predefinite, c.p a classical formula. Then

164
CHAPTER SIX
Proof
This is clear for atomic formulas and follows by an easy induction
for all classical formulas (elaborate the induction step for -',1\, V using the
estimate L from 6.3.8).
0
Lemma 6.3.11 The logic LV is undecidable.
Proof
Generalizing 6.2.13 show that, for each classical closed formula <p
containing predicates PI, .. ' ,Pn , <p is satisfiable in classical predicate logic,
iff the formula o(Pt}& ... &o(Pn )&<p2 is positively satisfiable for LV (there
is a model M in which the above formula has a positive value). Thus <p is a
Boolean tautology iff
[-.(o(Pt}&··· &o(Pn )&(-.<p)2)] E T AUTLV, Le.
[(O(Pt}&··· &o(Pn )) ~ 2<p] E TAUTLV.
o
Definition 6.3.12 Let ,(x, y) be a ~l-formula defining in N the relation C
from 6.1.17, Le. for each m, n EN,
(m, n) E C
iff
IbIIN[m, n] = 1.
Let Prede! stand for o(=) 1\ o(S) 1\ o(A) 1\ o(B) (expressing predefiniteness
of the interpretation of arithmetical language) and let, for each m, ,:n stand
for the formula
Predel 1\ (QA)2 1\ (Vx, y, z)(2numm (z)1\2,(z, x)1\2,(z, y)1\2(x i= y) ~
-t (U(x) ¢ U(y)))
where U is a new unary predicate.
Remark 6.3.13 To understand ,:n imagine a crisp ({O, l}-valued) model M
of it: then all squarings and doublings are superfluous and M is a model of
QA in which, for any two elements a, b such that both the pair (m, a) and the
pair (m, b) satisfies" IIUIIM[aJ i= IIUIIM[b]; thus exactly one of a, bsatisfies
U. Thus in this case (of a crisp model of,:n), Cm has at most two elements
since for each n E Cm we have IhIlN[m,nJ = 1 and hence (, being ~l),
1I,IIM[m', n'] = 1 and Ilnumm(m')IIM = 1 for m', n' being the isomorphic
copies of m, m in M.
Lemma 6.3.14 Under the above relation, Cm is finite iff,:n E SATf:o~.

COMPLEXITY AND UNDECIDABILITY
165
Proof
First assume Cm finite, Cm = {nI, ... ,nd. Take N and expand it
by defining ru(ni) = ilk, ru(j) = 0 for j distinct from nI, ... ,nk. Verify
easily that for the resulting model M, II'Y~IIM ~ i. Indeed, IIPredefllM =
1, IIQAIIM = 1. Take a,b E N and assume that the value 112numm (u) 1\
2'Y(u, x)1\2,(u, y) 1\2(x f= y) IIM[m, a, b] is positive (otherwise there is noth-
ing to prove). This means that the values of numm (u), 'Y(u, x), ,(u, y), x f=
yare > ~ and hence = 1 (since in M everything except ru is crisp). But then
a f= b and a, b E Cm; thus for some i, j :::; k we have a = ni, b = nj, i f= j
i
.
1
*
1
and IIU(x) ¢ U(y)IIM[ni,nj] = Ik - fl ~ k' Thus il'YmllM ~ k'
Conversely, let Cm be infinite, Cm = {ni} ~I' We show that 'Y~ is not
positively satisfiable. Assume it is, let
iI'Y~ 11M =
t > O. Delete ru from
M; you get a predefinite model M' of the language of QA, hence Mil =
M'/z is a model of QA. We may assume that N is an initial segment of Mil.
Since il'YIIN[m, nil = 1 for i = 1,2, ..., we have II'YIIM" [m, nil = 1, thus
lI'YIIM/[m,nd >
~. Hence 112'YIIM/[m,ni] = 1. For i f= j we get 112(x f=
y)IIM' [ni, nj] = 1. Come back to M (returning ru). Since iI'Y~IIM = t we get
IIU(x) ¢ U(y)IIM[ni,nj] ~ t, thus putting IIUIIM[ni] = ti we get [ti-tjl ~
t for i f= j. But this is a clear contradiction, because i, j runs over all natural
numbers and ti, tj, t are positive reals. This completes the proof.
0
Corollary 6.3.15 The set SA~~ is Ez-complete and the set T AUT!-v is
IIz-complete.
We have not yet discussed TAU~~. The next theorem contains the an-
swer (and much more).
Definition 6.3.16 Let, for each r, T AUrtj] be the set of all formulas cp such
that IIcpliM > r for all M; similarly, T AU~il is the set of all cp such that
IIcpliM ~ r for all M.
Theorem 6.3.17 36
(1) For each r < 1, T AUT(~j] is a EI-complete set.
(2) For each r > 0, T AUT[~i] is a IIz-complete set.
36 (1) is due to Mostowski [145]; Chang proved the set in (2) not to be recursively
enumerable - see [12].

166
CHAPTER SIX
Prool
(1) Let r > 0; if <p E T AUrf;-j] then <p -+ l' has no model and therefore is
contradictory (cf. 5.4.9); thus (<p -+ 1') r O. Conversely, if (<p -+ 1') r 0
then (<p -+ 1') has no model. Clearly (<p -+ 1') r 0is a ~1 condition; thus
T AUT(~j] is in ~1. We reduce T AUTBool'V to T AUrf;-j]: <p is a tautol-
ogy of Boolean predicate logic (written using 1\, V,"") iff Predej -+ 2<p
is in T AUrt'oj] (as above), iff 1'Y...(Predej -+ 2<p) is in T AUrf;-j].
(2) <p E T AUT[~i] iff (1' -+ <p) E T AUTf"V'; this reduces T AUT[~i] to
T AUTf"V'. Conversely, <p E TAU1fV' iff (<p&1')
E T AUT[~i]; this
gives the converse reduction (assuming r > 0). Hence T AU1fV' and
T AUT[~il are recursively equivalent.
o
Remark 6.3.18 It is easy to check that in the last theorem LV may be replaced
by RPLV.

CHAPTER SEVEN
ON APPROXIMATE INFERENCE
In chapters 2 - 6 we developed and investigated real-valued (or lattice-valued)
propositional and predicate calculi based on the notion of a (continuous) t-
norm and its residuum. Now our understanding of these calculi is reasonably
advanced: we have obtained several completeness theorems etc. But now we
must ask: how does this relate to fuzzy logic (in the narrow sense, obviously)?
Let us again quote from Zadeh [221]:
"In a narrow sense, fuzzy logic (FLn) is a logical system which aims at a
formalization of approximate reasoning. As such, it is rooted in multivalued
logic but its agenda is quite different from that of traditional multivalued log-
ical systems, e.g., Lukasiewicz logic. In this connection, it should be noted
that many of the concepts which account for the effectiveness of fuzzy logic
as a logic of approximate reasoning are not a part of traditional multival-
ued logical systems. Among these are the concepts of a linguistic variable,
canonical form, fuzzy rule, fuzzy graph, fuzzy quantifiers and such modes of
reasoning as interpolative reasoning, syllogistic reasoning and dispositional
reasoning."
In this chapter and also in some further chapters we shall investigate some
items from Zadeh's agenda of questions or topics typical of fuzzy logic in this
meaning: without denying that they do not belong to the "classical" questions
of many-valued logic we shall try to show that these topics admit a strictly
logical analysis in the sense of formal logic. It will turn out that much of
approximate inference may be presented as deduction in a suitably chosen
logic, i.e. in a truth-preserving way. This does not mean that we claim to
reduce fuzzy logic to many valued logic; but it does mean that the role of
many-valued logic as a base (foundation) of fuzzy logic is much greater and
more important than one would guess at the beginning. It goes without saying
that fuzzy logic indeed has aspects that are not grasped by classical many-
valued logic (as control aspects of fuzzy control); but, I repeat, the deductive
aspect (with its corresponding semantical counterpart) is very important.
Section 1 analyses Zadeh's compositional rule of inference and two par-
ticular cases of it: generalized modus ponens and a (less known) generalized
conjunctive rule. We also comment on some dangers in certain popular but
questionable uses of fuzzy logic in expert systems. Section 2 analyzes logical
aspects of fuzzy control. Section 3 presents an alternative formalization of
the two generalized rules and the corresponding alternative formalization of
fuzzy control.
167

168
CHAPTER SEVEN
7.1.
THE COMPOSITIONAL RULE OF INFERENCE
7.1.1 We start with the notion of a variate.37 A variate is given by its name
X and its domain D. X is just a symbol; D is a non-empty set. Examples
are: age with the domain of integers::; 120 (say), temperature (with some
domain), etc. Fuzzy logic notoriously uses expressions of the form "X is A"
where A is (the name ot) a fuzzy subset of D, e. g. "the age is high". These
expressions typically occur infuuy rules, to be analyzed later.
It is not automatically clear how this fits into our formalism of predicate
calculus, and, in fact, we shall present two ways of doing it. In this and the
next section, we shall proceed as follows: having n variates (Xl, D 1), ... ,
... (Xn , Dn ) we understand the D's as domains of a many-sorted structure
interpreting a predicate language; fixed fuzzy subsets of a domain interpret
some unary predicates. Besides we may have predicates of higher arity and
their interpretation in our many-sorted structure. The most important thing
comes now: the name of a variate is taken to be an object constant, interpreted
in each situation as the actual value of the variate. The expression "X is A"
becomes an atomic closed formula A(X) (once again: A is a unary predicate,
X is an object constant). A typical rule "IF X is A THEN Y is B" may be
interpreted as A(X) -+ B(Y). (Caution: this is not the only possible reading
of a "fuzzy IF - THEN rule", as we shall see later.)
Summarizing: We have understood an n-tuple of variates (Xi, Ddi=l as
determining a language 'I with sorts 81,' .. , 8 n and with object constants
Xl,'" ,Xn , Xi of the sort 8i. Besides our language may contain arbitrary
predicates of any type and any other object constants. Any 'I-structure
((Di)i" (rp)Ppred.,mXl'··· ,mxn "')
(where the dots stand for the interpretation of additional constants, if any) is
understood as a fuzzy structure over the given variates, with Xi denoting the
actual value of the i-th variate.
Given this, we may start our analysis of Zadeh's compositional rule of
inference.38
7.1.2 The compositional rule of inference in its traditional formulation can
be stated as follows:
From "X is A" and "(X, Y) is R" infer "Y is B" if for all v E Dy,
rB(v) =
sup (rA(U) *rR(u, v)).
uEDx
37 Similarly to [86] we reserve the tenn "variable" for variables of a logical cal-
culus (propositional variable, object variable) and use the tenn "variate" for what
several people call variable.
38 See [213].

ON APPROXIMATE INFERENCE
169
where * is a continuous t-norm. The relation rB is sometimes called the com-
position of r A and rR, or the image of r A under the relation rR.
7.1.3 We ask: what does this mean? What is inferred? Is this any deduction?
First observe that the rule is semantical: given any structure D of domains
of variates, it formulates a semantical condition on the fuzzy set r B inter-
preting the predicate B in terms of rA (fuzzy set) and rR (fuzzy relation).
Typically, no more explanation is given. The rule is stated more or less as
self-evident.
But observe that in fact the definition of rB in terms of r A and rR is ex~
pressible in BLV': The condition above just means that the formula
(V'y) (B(y)
== (3x)(A(x)&R(x,y)) is I-true in D. Call the last formula
Camp (or Comp(A, R, B), the composition); thus the rule demands (as-
sumes) IIComplln = 1.
Lemma 7.1.4 Under the present notation,
BLV' f- Camp -+ ((A(X)&R(X, Y)) -+ B(Y)).
Consequently, for each structure D such that IIGomplin = 1,
IIA(X)&R(X, Y)lIn
:<:::: IIB(Y)lIn
Proof
By 5.1.14,
BLV' f- (V'y)([(3x)(A(x)&R(x, y)) -+ B(y)] -+ (V'x)[(A(x)&R(x, y)) -+
B(y)]) and
BLV' f- (V'y)(V'x)((A(x)&R(x, y)) -+ B(y)) -+ [(A(X)&R(X, Y)) -+
B(Y)].
Thus
BLV' f- Camp -+ ((A(X)&R(X, Y)) -+ B(Y}}
by transitivity of implication. The rest is evident.
0
We also show that Camp is the best condition making the above inference
possible.
Lemma 7.1.5 Let B' be a unary predicate of the same sort as B. Then
BLV' f- Camp & (V'y) (V'x)((A(x}&R(x, y)) -+ B'(y}} -+ (V'y)(B(y) -+
B'(y))
(thus in each model D, if Camp is true then rB is the smallest fuzzy subset
of Dy making the inference of the composition rule sound).
Proof
Evidently,
BLV'
f-
(V'y)(V'x) ((A(x}&R(x, y})
B'(y))

170
CHAPTER SEVEN
-+ (Vy)[(3x)(A(x)&R(x, y)) -+ B'(y)],
but assuming Comp,the formula (3x)(A(x)&R(x, y)) is equivalent to B(y),
thus we get the desired implication.
Proof"
0
We shall now discuss two important particular cases. For this purpose we
replace the atomic formula R(x, y) by an arbitrary formula cp(x, y).
Corollary 7.1.6 (1) Let Comp be the formula
(Vy)(B(y) == (3x)(A(x) &Ip(x, y)). Then
BLV f- (Comp&A(X) &1p(X, Y)) -+ B(Y).
Proof"
Evident modifications of the above.
o
7.1.7 Now we shall consider Zadeh's Generalized Modus Ponens as a par-
ticular case of the Compositional Inference rule. To this end let us slightly
change notation: we replace A by A*, B by B* and then take cp(x, y) to be
A(x) -+ B(y) for some predicates A,B. Then 7.1.4 gives the following the-
orem.
Theorem 7.1.8 Let CompMP be the formula
(Vy)(B*(y) == (3x)(A*(x) & (A(x) -+ B(y))).
Then BLV proves
(CompMP &A*(X) &(A(X) -+ B(Y))) -+ B*(Y).
Remark 7.1.9 (1) This may be visualized as a deduction rule:
ComPMP, A*(X), A(X) -+ B(Y)
B*(Y)
The obvious reading is: if ComPMP, A*(X), A(X) -+ B(Y) are I-true
(in a given structure D) then B*(Y) is I-true. But 7.1.8 gives more:
IIComPMP &A*(X) & (A(X) -+ B(Y))lln ~ IIB*(Y)lIn,
in particular, if CompMP is I-true (B* is defined as above), A*(X) is r-true
and A(X) -+ B(Y) is s-true then B*(Y) is at least (r * s) - true (where * is
the truth function of &).
(2) We stress that we have shown provability in BLV. Thus the above rule
may be read for implication and conjunction in LV, GV, llV and any other
predicate calculus given by a continuous t-norm.

ON APPROXIMATE INFERENCE
171
(3) Furthermore, observe that you may replace & by /\ in 7.1.8 and make
the obvious modifications, e.g. if the (modified) ComPMP is I-true, A*(X)
is r-true and A(X) --+ B(Y) is s-true then B*(Y) is min(r, s)-true.
(4) Let us mention that the use of A, A*, B, B* should suggest that A* is
similar to A in some sense - and then ComPMP should say that B* is similar
to B in some other sense.39 But be careful: If A, B, A* are interpreted by
crisp (0, 1 - valued) subsets of the respective domains then the interpretation
of B* is also crisp and
(i) either r A' ~ r A and r A' t= 0and rE' = rE,
(ii) orrA' ~ r A and r A' = 0 and rB' = 0,
(iii) or r A' is not a subset of r A and then rB' = Dy (the full set). (This
can be formulated and proved in BL\i - exercise.) See Figure 7.1.
(5) In general, if ComPMP is defined as in 7.1.8 then
CompMP f- (\iy)[((3x)(A*(x) & -,A(x)) --+ B*(y)].
Thus for each v E D y ,rB(v) 2: sUPuEDx (q. (u) *(-)rA(U)).
B
Figure 1.
The grey domain is the set of pairs satisfying A*(x)&(A(x) -t B(y)).
(6) Observe that, under the present notation, and over BL\i,
ComPMP f- (3x)A*(x) --+ (\iy)(B(y) --+ B*(y)).
Indeed, the following formulas are provable:
39 The notorious example is: If the colour is red then the tomato is ripe; the colour
is very red - what follows?

172
CHAPTER SEVEN
B(y) -+ (A(x) -+ B(y)),
A*(x) &B(y)) -+ (A*(x) &(A(x) -+ B(y)),
(3x)(A*(x) & B(y)) -+ (3x)(A*(x) & (A(x) -+ B(y)),
(3x)(A*(x) &B(y)) -+ B*(y),
[(3x)A*(x) &B(y)] -+ B*(y),
(3x)A*(x) -+ (B(y) -+ B*(y)) (by 5.1.18, (9)),
(3x)A*(x) -+ (Vy)(B(y) -+ B*(y)).
Thus in particular, if for some u E Dx, T A' (u) = 1, then for all v E Dy,
TB(V) ~ TE' (v).
*
7.1.10 Now let us have predicates A, A* (of the same sort), B, B* (of the
same sort) and take A(x) & B(y) for cp(x, y). (Note that we could also take
A(x) /\ B(y).) We automatically get a BUt- provable tautology and hence a
sound deduction rule. We shall ask what it means and how it relates to classi-
cal logic. In the next section we shall use our analysis of Generalized Modus
Ponens and the present Generalized Conjunctive Rule to an analysis of the
logical background of fuzzy controllers. As above, 7.1.4 gives the following
Theorem 7.1.11 Let ComPCR be
(Vy)(B*(y) == (3x)(A*(x) & A(x) & B(y))).
Then BUt proves
CampCR & A*(x) & A(x) & B(y) -+ B*(y)
Remark 7.1.12 (1) As above, we get a sound deduction rule
ComPCR, A*(X), A(X) & B(Y)
B*(Y)
Soundness means: for each domain structure D,
IIComPCR,A*(X)&A(X)&B(Y)lln ~ IIB*(Y)lln.
In the language of "fuzzy rules": From "X is A and Y is B" and "X is A*"
infer "Y is B*". This is not a frequently used "fuzzy rule", but we get it
naturally from the Compositional rule.
(2) There are at least two particular cases in the classical (Boolean) case.
First, the usual rule for conjunction, second a rule of contradiction:
A(X) &B(Y)
B(Y)
-,A(X), A(X) & B(Y)
-,B(Y) &B(Y)

ON APPROXIMATE INFERENCE
173
(3) In general, for A, B, A* crisp, we get the picture for A*(x) & A(x) &
& B(y) given in Fig. 7.2:
B
A
Figure 2.
(i)eitherrAUrA* f0(forsomeu,rA(u) =rA*(u) = l)andrB =rB*
(ii) or r AU r A* = 0and then rB* = 0 (rB* (v) = 0 for all v E Dy).
(4) In full generality, the following is provable over BUt: (for the present
meaning of CampcR):
(i) CompcR f- (Vy)(B*(y) -+ B(y)),
(ii) CampCR
~- (Vy)(B*(y) -+ (3x)(A(x) & (A*(x))).
Indeed, assuming CampcR we prove
B*(y) -+ (3x)(A*(x) &A(x) &B(y)) -+ [(3x)(A* (x) & A(x)) &B(y)]
(by 5.1.18 (9».
From (ii) we also get
CompCR f- (3y)B*(y) -+ (3x)(A(x) &A*(x)).
and hence
CompcR f- -,(3x)(A(x) & A*(x) -+ -,(3y)B*(y).
(5) We again stress that all provabilities are over BLV. These are valid over

174
CHAPTER SEVEN
LV, GV, IIV and any other t-norm logic. Moreover, the reader may check that
everything remains valid if we replace & by /\ throughout.
Example 7.1.13 We shall present here a critical analysis of the use of the
compositional rule of inference in some fuzzy expert systems like CADIAG-
2 (developed by KP. Adlassnig and his group; see [3,4,5, 117] or, for a short
description, [115]; for a detailed analysis see [32]). We have three sets: M -
the set of patients, 8 - the set of symptoms and D - the set of diagnoses. Fur-
ther we have three fuzzy binary relations: P : (M x 8) -+ [0,1] expressing
for each pair (p, s),p E M, s E 8, how much p has the symptoms s, further
R : (8 x D) -+ [0,1] expressing for each s E 8 and d E D how much s
confirms d, and P' : (M x D) -+ [0,1] expressing how much a patient p has
the diagnosis d. Thus we have a structure with three domains M, 8, D and
three binary relations. Let Has, Conf, Has' be binary predicates naming
P, R, P' respectively; thus Has(x, s) says "x has the symptom s", similarly
Has'(x, d); and Conf(s, d) says "s confirms d". Using the compositional
rule (for an arbitrary but fixed x) one defines
Diag(x, d) == (3s)(Has(x, s)&Conf(s, d)).
This defines over LV or other logic a relation C : (P x D) -+ [0,1],
expressing for each p and d how much d is confirmed for p.
So far so good; but what does this mean? Clearly, the answer depends
on the definition of the meaning of Conf, Le. of the relation R. Here our
warning comes: In CADIAG and similar systems, one defines R from some
data. R(s, d) is taken to be the relative frequency Fr(dis) of presence of d
among objects (patients) having d (for implicity, symptoms and diagnoses are
assumed to be crisp). What does Diag(x, d) mean in this case? This is diffi-
cult to say; but one thing is clear. Let p be a patient and let SI, ... , Sk be the
symptoms he has. We would be interested in knowing, or at least estimating
Fr(dls l •.. Sk) - the relative frequency of d among object having SI ... , Sk
- as a possible estimate of the value of H as'(x, d). But it must be clearly
said that Diag does not estimate this relative frequency; Diag just defines
max(Fr(dlst}, ... ,Fr(d(sk))' And observe that it can happen, for example,
that (k = 2), Fr(dlst} = Fr(dls2 ) = 0.9 but Fr(dls l , S2) = 0.2. (See the
following frequency table)

ON APPROXIMATE INFERENCE
175
Sl
S2 dl
1
1
1
1
1
0
1
44
0
1
1
44
0
0
1
5
1
1
0
4
1
0
0
1
0
1
0
1
0
0
0
3
Note that it does not help to allow S to contain conjunctions of symptoms -
see [32] for details.
Let us offer one possible interpretation of Conf with desirable proper-
ties (without any claim that this is the only right interpretation). Assume the
relations P, P' interpreting Has, Has' to be fuzzy and let
Conf(s,d) == (Vx)(Has(x,s) ---+ Has'(x, d)).
Thus the truth degree of Conf(s, d) is the minimum, over all patients x, of
the truth degrees of the implication Has(x, s) ---+ Has'(x, d). Caution. For
example, in LV, IIConf(s, d)11
=
0.9 means that for each patient,
IIHas(x,s)11 ::; min(l,Has'(x,d)1I + 0.1). (All truth values in the given
structure.) Then for each patient p, the following formulas are true:
(Has(p, s)&Conf(s, d)) ---+ Has'(p, d), thus
(3s)(Has(p, s)&Conf(s, d)) ---+ Has'(p, d),
i.e. Diag(p, d) ---+ Has' (P, d). Consequently, the truth degree of Diag(p, d)
is a lower bound of the degree in which p has the diagnosis d. This is surely
pleasing; the question remains if e.g. the physician can supply knowledge
necessary to evaluate Conf in the present meaning.
7.1.14 In the rest of this section we shall discuss the question of what are
"the present (actual) values of variables X, Y" and sketch a formalism for
this. The present discussion will be used in an example in Ch. 8 and may be
skipped now if desired.
We can imagine a new domain M of objects (situations, time elements,
persons) interpreting a new sort of variables; denote the new variables by
Z, Zl,···. We assume that for each object m E M, each variate X takes
a value fx(m) E Dx (temperature, colour, etc. ofm). Thus X becomes
a function symbol; X (z) is a term. Fixing an mo E M as a meaning of a
new constant c for actual object, X(c), Y(c) are terms for the values of the
corresponding variates for the actual object.

176
CHAPTER SEVEN
Definition 7.1.15 Formally, this leads to a many-sorted many-valued calcu-
lus whose language consists of a sort of So objects, sorts Sl,"
. ,Sn for do-
mains of variates,
-
unary function symbols Xl,' .. ,Xn for variates and an object con-
stant c for "the actual object" (possibly other constants),
variables for each sort,
-
predicates of various types.
The language is called the ground language. A structure for this language
has the form
M = (M, DXll"', Dxn , fl,"', in, (rp)ppredieate, me,"')
(dots for possible meanings for other constants) where each Ii maps Minto
D Xi' M is called aground structure.
Terms are variables, constants and expressions Xi (z) where Xi is the
name of the i-th variate and z is a variable of the sort So. Everything else
is as usual;
7.1.16 We may now formulate axioms like (Vz) (A(X(z)) -+ B(Y(z)), say-
ing "for each object z (situation etc.), if the value of the variate X (on the ob-
ject z, in the situation z etc.) is A (big, etc) then the value of Y (on z) is B".
Then e.g. the Generalized Modus Ponens with the old condition ComPMP
saying (Vy)(B*(y) == (3x)(A*(x) & A(x) -+ B(y)) can be formulated as
ComPMP -+ (Vz)((A*(X(z)) & (A(X(z)) -+ B(Y(z))) -+ B*(Y(z))
and shown to be provable in the corresponding obvious modification of BLV
(with a limited use of function symbols). You may derive various corollaries,
e.g.
CompMP, (Vz)(A(X(z)) -+ B(Y(z)), A*(X(c))
B*(Y(c))
saying that if B* is defined as CompMP demands, if for all situations, [X
is A implies Y is B] and if in the actual situation X is A* then in the actual
situation Y is B*. Soundness of the rule guarantees e.g. that ifComPMP and
[for all z, X is A implies Y is B] are true (i.e. I-true) in a given ground
structure and [X is A*] is r-true in the actual situation then [Y is B*] is at
least r-time in this situation.
This appears to be the the way that the Generalized Modus Ponens is ac-
tually used.

ON APPROXIMATE INFERENCE
7.2. Fuzzy FUNCTIONS AND FUZZY CONTROLLERS
177
7.2.1 Fuzzy control is apparently the most broadly used application of fuzzy
logic. Various books explaining fuzzy control, written by non-logicians, suf-
fer by logical mismatch caused by the fact that "fuzzy IF-THEN rules" are
presented as implications but then used to construct a fuzzy relation having
little to do with any implication, at least at first glance (the relation is defined
by a disjunction of conjunctions). Attempts to call e.g. the min-conjunction
a "Mamdani implication" (see e.g. [35]) must be strictly rejected since we
insist that the fuzzy truth function of a connective must behave classicaly for
extremal values 0, 1 - and this is not the case for minimum as implication. It
has slowly become clear that fuzzy control deals with approximation offunc-
tions on the basis of pieces of fuzzy information of the kind "for arguments
approximately equal Ci the image is approximately equal to di ".40
It is illuminating to analyze the crisp situation. Assume we have two do-
mains M 1, M 2 and a crisp, possibly partial, function j from M 1 to M 2 . More-
over, let us have distinct elements (Ul' vr), . .. ,(un, vn) E M 1 X M 2 such that
for each i = 1, ... ,n, j (Ui) =
Vi. Let us have a two-sorted language with
equality (denoted = for both domains) and a binary predicate F interpreted
by j, let M = (M1, M 2 , j, =1, =2) where =i is identity on Mi, x-variables
range on Ml, y-variables on M2. The fact that j is a partial mapping is exp-
resed by the sentence ('v'x, Yl, Y2)((F(x, yr) f\ F(x, Y2)) --+ Yl = Y2). Let Ci
be the constants for Ui, and di for Vi respectively.
(1) The formula
just expresses the fact that j(Ui) = Vi; it is true in M.
(2) The formula
!\((x = Ci) --+ (y = di))
i
defines a relation r ~ M 1 X M 2 whose restriction to {Ul' ... ,un} coincides
with the restriction of j to {Ul' ... ,un} and containing all pairs (u, v) where
U is distinct from all Ul,' .. ,Un and V E M 2 ; thus j ~ r.
(3) The formula
defines a relation s ~ Ml X M2 which is the restriction of j to {Ul, ... , un};
i.e. no pair (u, v) with U distinct from all Ul, ... ,Un belongs to s. Thus s ~ j.
40 For analyses ofIF-THEN rules see [43, 118, 119, 155, 198]. Our presentation is
a free elaboration of Kruse et al. [118] Sec. 4.4-4.5; and Godo and Hajek [61, 63, 62];
but our notion of a fuzzy function seems to be new.

178
CHAPTER SEVEN
Compare this, in the fuzzy case, with the deduction rules of the last sec-
tion. We shall develop a general theory of fuzzy functions and "partial knowl-
edge" on them and then apply it to describe (the logical aspect of) fuzzy
control. We shall systematically develop the theory in BL'v' (showing various
statements to be provable); thus this will give, in particular, sound results for
any t-norm logic C'v'. To simplify matters, we shall deal only with unary func-
tions (having one argument); a generalization to functions of several variables
is easy.
After having discussed fuzzy functions we shall investigate the general
logical structure of fuzzy controllers, not using fuzzy functions. The hurrying
reader, not interested in fuzzy functions, may skip to 7.2.17.
Definition 7.2.2 Let T be a theory with a binary predicate F of a type (tl, t2),
let ~i be a similarity predicate in T for the sort ti. (We shall write ~ both for
~I and ~2 without any danger ofconfusion.) We say that F defines a (partial)
fuzzy function in T with respect to ~ if T proves the following:
(x ~ x/ &y ~ y/) -+ (F(x, y) == F(x', y/»,
(F(x, y) &F(x, y/» -+ y ~ y/.
The first formula is the congruence axiom (cf. 5.6.5); the second says that any
two images of x are similar.
Lemma 7.2.3 Let F define a partial fuzzy function in T w.r.t. ~. Let c, d be
constants such that T f- F(c, d).
(l) Then T f- (x ~ c & F(x, y»
-+ y ~ d.
(2) Moreover, if A(x) is the formula x ~ c and B(y) is the formula given
by the condition Camp of the compositional rule of inference from F and A
(cf. 7.1.6 (2», i. e. B(y) is (3x)(x ~ c& F(x, y» then T f- (B(y) == y ~ d).
(Thus the compositional rule transforms x ~ c and F(x, y) to Y ~ d.)
Proof
(1) In T, x ~ c&F(x,y) implies F(c,y) which, due to the prov-
ability of F (c, d) gives y ~ d.
(2) Clearly, T f- y ~ d -+ [c ~ c&F(c,y)] -+ [(3x)(x ~ c&F(x,y»].
On the other hand, T f- (3x)(x ~ c&F(x,y»
-+ y ~ d follows from (1).
o
Definition 7.2.4 Let n be a similarity on Mi (i = 1, 2). A fuzzy relation
s: (MI x M2) -+ [0,1] is afuzzy mapping from MI into M2W.r.t. rl, r2 if s
is extensional, i. e. for all x, x' E M I , y, y/ E M 2 ,
rl(x,x/) *r2(Y,y/) *s(x,y) ::; s(x/,y/)

and functional, i. e.
ON APPROXIMATE INFERENCE
s(x, y) * s(x, y') S r2(Y, y')
179
Lemma 7.2.5 Let F define a function w.r.t. ::::; in T. If (Ml , M 2,rl, r2, s) is
a model ofT then s is a fuzzy mapping from M l into M 2 w.r.t. rl, r2.
Proof
Obvious.
o
Example 7.2.6 (1) Assume that s is a fuzzy mapping from M l into M2 w.r.t.
rl, r2 and let rl, r2, s be crisp (0, I-valued). Then ri is an equivalence on
M i and if we factorize, i. e. put M[ = Mdri (in more details: [uh = {u' E
Mllrl(u, u') = I}, analogously [vh then putting f([uh) = [vh iff s(u, v) =
1 we get a crisp mapping from M{ into M~ - see Fig. 7.3.
Figure 3.
(2) Now let ri be similarities on Mi (i = 1,2) and let f be a crisp partial
mapping from M l into M 2 . Take the least extensional relation s containing
f (cf. 5.6.13). Our question is under which conditions s is a fuzzy mapping
from M l into M 2. The condition is that f respects the similarities rl, r2, i. e.,
for all Xl, X2 E M l ,
Indeed, consider M = (Ml, M2, rl, r2, f, s) and let ::::;1, ::::;2, F, F be names
of rl, r2, f, s; thus the formula
h
" " ,
,
(V .. ·)(F(x,y) == (:Jx,y)(x::::; X &y::::; y &F(x,y))
(*)

180
CHAPTER SEVEN
is I-true in M. Our condition reads
(\7"")((XI ~ x2&F(XI,YI)&F(X2,Y2)) -7 YI ~ Y2)
(**)
Clearly, if the axioms of a fuzzy function are I-true for :::::i, F in M then (**)
is I-true. Conversely, assume (*) I-true; we have to show that the formula
(\7' ...)((F(x, yt} &F(x, Y2)) -7 YI ~ Y2)
is I-true. Let T contain axioms of similarity for ~i and (*).
T I- [x ~ x' &YI ~ Y' &x ~ x" &Y2 ~ Y" &F(x',y') & F(x", y")] -7
YI ~ Y2 (since the left-hand side implies x' ~ x" & F(x', y') & F(x", y") &
YI ~ Y' & Y2 ~ y", which in tum implies y' ~ Y" & Yl ~ Y' & Y2 ~ Y" (by
(**)), and this implies YI ~ Y2). Thus
T I- (:lx', y',x", y")[...] -7 YI ~ Y2
(cf. 5.1.14 (2))),
T I- [(:lx', y')(x ~ x' & YI ~ y' & F (x', y')) &
(:lx", y")(x
~ x" & Y2
~ y" & F(x", y"))] -7
which gives
YI
~ Y2 (cf. 5.1.18 (9)),
See Fig. 7.4.
(3) We give an example of the meaning of the previous condition for
Lukasiewicz logic. Assume Mi = [ai, bi ] are real intervals; let for u, v E mi,
ri(u, v) = max(O, 1 - cilu - vi). Then a sufficient condition for a mapping
f of M I into M 2 is to satisfy the Lipschitz condition
*
Our next task is to investigate the situation described as follows: there is a
fuzzy mapping s from M I into M2 (w.r.t. rl, r2), that is not at our disposal as
a whole; but we know finitely many examples Ui, Vi (i = 1, ... , n) such that
S(Ui,Vi) = 1, i. e. if F names s, Ci name Ui and di name Vi then F(Ci,di)
is I-true in M = (MI,M2, rl, r2, s, Ui, Vi). It follows immediately that each
formula
x ~ Ci &F(x, y) -7 Y ~ di
is I-true; and this resembles an "IF- THEN rule"
IF x is similar to Ci THEN y is similar to di.

ON APPROXIMATE INFERENCE
181
0:1·.:
0.6· .
OA I
0.2
o
1
y
. . . . . ' .. .
,', .
' ..'
x
1
Figure 4.
A fuzzy mapping given by the crisp function y = x2 .
What more can we say?
Definition 7.2.7 We say that, in a theory T, F defines a ,;:::!-function with ex-
amples (Ci, di) (i = 1,
n) if F defines a fuzzy function in T w.r.t. a simi-
larity ';:::! and for i = 1,
,n, T proves F(Ci, di).
Repeating once more, the definitions say that the following formulas are
provable in T: Similarity axioms for ';:::!,
extensionality of F: (F(x, y) & x';:::! x' & y ';:::! y') --t F(x', y'),
functionality of F: (F(x, y) &F(x, y')) --t Y ';:::! y'),
examples of F: /\7=1 F(Ci' di).
Let us agree that in the sequel Ai(x) will stand for x
';:::! Ci and Bi(y) for
y ';:::! di , unless stated otherwise.
Theorem 7.2.8 Let T be a theory over BUt and assume that in T, F de-
fines a ';:::!-function with examples (Ci' dd (i = 1", . ,n). Then T proves the
following formulas:
F(x,y) --t !\(Ai(x) --t Bi(y)),
i

182
CHAPTER SEVEN
V(Ai(x) &Bi(y)) -+ F(x,y).
i
Proof
(1) T ~ (F(x, y) & x ~ Ci) -+ F(Ci, y) (from extensionality),
T ~ F(Ci, y) -+ y ~ di (from functionality and T ~ F(Ci, di)).
Thus T ~ (F(x, y) & Ai(x)) -+ Bi(y),
T ~ F(x, y) -+ (Ai(X) -+ Bi(y)),
T ~ F(x,y) -+ 1\(Ai(x) -+ Bi(Y))' (cf. 7.2.3 (1).)
(2) T ~ (x ~ Ci &y ~ di) -+ F (x, y) from extensionality, thus
T ~ (Ai(x) & Bi(y)) -+ F(x, y),
T ~ Vi(Ai(x) &Bi(y)) -+ F(x, y).
0
Remark 7.2.9 Given predicates Ai, Bi' we let RULES(x, y) stand for the
formula
1\(Ai (x) -+ Bi(y))
i
and MAMD(x, y) (resembling the name Mamdani, see his [131, 132, 133])
for the formula
V(Ai(x)&Bi(y))
i
We shall prove various results on the relation of these two formulas. In par-
ticular, Theorem 7.2.8 says that under the assumptions made,
T ~ MAMD(x,y) -+ F(x,y) -+ RULES(x,y).
Lemma 7.2.10 Let T, F,~, Ci, di' Ai, Bi
be
as
above
and
let T
~
~ MAMD(x,y) == Vi(Ai(x)&Bi(y)). Then MAMD defines in T a~­
function with examples (Ci, di)'
Proof
Extensionality:
T ~ (x ~ Ci & y ~ di) -+ ((x' ~ x & y' ~ y) -+ (x' ~ Ci & y' ~ di)),
T ~ (Ai(x) & Bi(y)) -+ ((x' ~ x & y' ~ y) -+ (Ai (x') & Bi(y'))),
T ~ (Ai(x) &Bi(y)) -+ ((x' ~ x&y' ~ y) -+ MAMD(x',y')),
T ~ Vi(Ai(x) &Bi(y)) -+ ((x' ~ x &y' ~ y) -+ MAMD(x', y')),
T ~ (MAMD(x,y) &x' ~ x&y' ~ y) -+ MAMD(x',y').
Functionality:
T ~ MAMD(x, y) -+ F(x, y); thus
T ~ (MAMD(x,y) &MAMD(x,y')) -+ (F(x,y) &F(x,y')), hence
T ~ MAMD(x,y) &MAMD(x,y')) -+ y ~ y', by the functionality of F.
Examples: Clearly, T ~ Ai(Ci) &Bi(di),hence T ~ M AMD (Ci, di).
0

ON APPROXIMATE INFERENCE
183
Remark 7.2.11 Thus the formula MAMD(x,y), i. e. Vi(Ai(x)&Bi(y))
defines in T the least ::::::-function with examples (Ci, di ). Caution: The for-
mula RULES(x,y), i. e. Ai(Ai(x) ---+ Bi(y)) (with our fixed assumptions,
Ai(x) is x =
Ci etc.) need not define a ::::::-function! This can be seen al-
ready in the crisp case: for x non-equivalent to any of Cl, ... , Cn, our formula
gives no restriction to the value of y. In more details, if T is as above and
T f- RULES(x, y) == Ai(Ai(X) ---+ Bi(y)) then
T f- (Ai --'(A(x))
---+ RULES(x,y) (since T f- --,Ai(x)
---+ (Ai(X)
---+
Bi(y))). see Fig.7.S.
Figure 5.
Thus keeping our assumptions on T we may ask under which conditions
the two formulas, RULES(x, y) and M AMD(x, y) are equivalent. The fol-
lowing lemma gives the answer:
Lemma 7.2.12 Let T,F,::::::,Ci,di,Ai,Bi be as above, let MAMD(x,y)
stand for Vi(Ai (x) &Bi(y)) (i. e. for Vi(x
:::::: Ci&y
:::::: di)) and let
RULES(x, y) stand for Ai(Ai(x) ---+ Bi(y)) i. e. for Ai(x :::::: Ci ---+ Y :::::: di).
Then
T f- (V A;(x)) ---+ (MAMD(x, y) == RULES(x, y)).
i
Proof
T f- (Ai (x) ---+ Bi(y)) ---+ [(Ai (x) &Ai(X)) ---+ (Ai (x) &Bi(y) )],
T f- A[(x) ---+ [(Ai(x) ---+ Bi(y)) ---+ (Ai(X) & Bi(y))],

184
CHAPTER SEVEN
T f- Ay(x) -+ [Ai(Ai(x) -+ Bi(y)) -+ Vi(Ai(x) & Bi(y))],
T f- Vi Ay(x) -+ [MAMD(x,y) == RULES(x,y)] (by 7.2.9; recall that in
propositional calculus, P == q is equivalent to (p -+ q) 1\ (q -+ p), cf. 2.2.16
(29».
0
Corollary 7.2.13 Under the present notation,
TU {(V'x)(ViAi(x))} f- (V'x,y)(MAMD(x,y) == RULES(x,y)).
(Note that if M is a model of the theory in question then for each U E M
there is an i such that if Ci denotes Ui in M, Uis similar to Ui in degree 1.)
Proof
This follows from facts on the propositional calculus: we know that
ViPi f- (ViPi)2 (since q -+ (q -+ q2) is BL-provable); and (ViPi)2 f-
Vi(py) by 2.2.24.
0
What we have done up to now may be described (or interpreted) as follows:
We have two domains M I , M2 (you could write Dx, Dy instead), similarities
rl, r2 on M I , M2 respectively and a partial fuzzy mapping S from MI to M2,
thus a model M = (MI , M2, rl, r2, s). We introduce the language ~I, ~2, F
and assume we have n examples (Ui' Vi) named (Ci' dd such that F(Ci' di) is
I-true in M (i. e. S(Ui' Vi) = 1). This can be expressed by saying "F sends Ci
to d/', or, "F sends (x similar to Ci) to (y similar to diY', or "IF x is similar
to Ci (and F(x, y)
THEN Y is similar to d/'. We know that in each model
M as above the formula (V'x, y)(F(x, y) -+ Ai((x ~ Ci) -+ (y ~ di)))
is I-true, thus S is a subrelation of the fuzzy relation defined by Ai(x
~
Ci -+ Y ~ di) (which itself need not be a ~ mapping); on the other hand, the
formula Vi(x ~ Ci) &y ~ di) defines in M a ~-fuzzy mapping h which is a
subrelation of S and satisfies h(Ui, vd = 1.
Lemma 7.2.12 says that for each U E M I , V E M 2 , the degree in which
Usatisfies Vi(x ~ Ci)2 (i. e. which U is very similar to an Ui, i = 1, ... , n)
is a lower bound for the degree in which (u,v) satisfies MAMD(x,y) ==
RULES(x,y).
We should ask the following: What if we just have Mi' similarities ri and
(potential) examples (Ui, Vi)? What must be assumed to be sure that there is
a fuzzy mapping S (w.r.t. ri) such that s(Ui, Vi) = I? The following lemma
gives the answer.
Lemma 7.2.14 Let T be a theory with two sorts and similarity predicates
~I, ~2 of the respective sorts; let C1, ... ,Cn be constants of the first sort and
dl , ... , dn constants of the second sort. If T f- Ci ~ Cj -+ di ~ dj for each
i,j (indices at ~ deleted) and T f- MAMD(x,y) == Vi(x ~ Ci&Y ~ dd

ON APPROXIMATE INFERENCE
185
then MAMD defines a ~-function in T and T I- MAMD(Ci,di) for i =
1, ... ,n.
Proof"
Extensionality as above.
Functionality: T proves the following chain of implications.
[MAMD(x, yI) & MAMD(x, Y2)] -+
[(Vi X ~ Ci &Yl ~ di) & Vj(x ~ Cj &Y2 ~ dj )] -+
[Vi,j(x ~ Ci&X ~ Cj &Yl ~ di &Y2 ~ dj)]-+
[Vi,j(Ci ~ Cj & Yl ~ di & Y2 ~ dj )] -+
[Vi,j(di ~ dj &Yl ~ di & Y2 ~ dj )] -+ Yl ~ Y2·
Examples: Obviously, T I- (Ci ~ Ci &di ~ di), thus T I- M AMD(Ci, dd.
o
*
Proof"
Let us be still more modest: let us have M 1, M2 and fuzzy subsets
r Ai of Ml, rEi of M2. We ask under which conditions we may assume
-
similarities 81 on M1 and 82 on M2 with respect to which r Ai' rEi are
extensional,
-
elements U1, ... ,Un E M 1, VI, ... ,Vn E M2 such that such that r Ai
are "fuzzy singletons given by Ui with respect to 81" and similarly for
rEi' Vi, 82,
-
a 81, 82-fuzzy mapping rF "sending Ui to vi".
We shall answer these questions.
Lemma 7.2.15 41 Let T be a theory, Ai unary predicates of the same sort
(i=I, ... ,n).
(1) Define a binary predicate.~ as follows:
(\fx,x')(x ~ x' == I\(Ai(x) == Ai(x')).
i
The resulting extension T' ofT is conservative, ~ is a similarity in T' and T'
proves all Ai to be extensional.
(2) Add new constants Ci and axioms (\fX)(Ai(X) == x ~ cd). The result-
ing theory T" is a conservative extension of T' iff T' proves all formulas
(3x)Ai(x),
(3x)(Ai(x) &Aj(x)) -+ (\fx)(Ai(x) == Aj(X)).
41 See [118] 4.13.

186
CHAPTER SEVEN
Proof"
(1) T' is a conservative extension of T by 5.2.15; the proof that in
T' :::::: is a similarity making all Ai extensional is an easy variant of 5.6.14.
(2) First assume Til to be a conservative extension of T'; then it suffices
to prove the above formulas in Til.
Til ~ Ci :::::: Ci thus Til ~ (3x)(x :::::: Ci) and Til ~ (3x)Ai (x). Furthermore,
Til
~ (3x)(Ai (x) & Aj(x)) = (Ci
:::::: Cj) (since Til
~ Ci
:::::: Cj -+ (Ci
::::::
Ci &Ci
:::::: Cj) and Til
~ (x :::::: Ci &x :::::: Cj) -+ Ci
:::::: Cj); and Til
~ Ci
::::::
Cj -+ (x:::::: Ci = x :::::: Cj). Thus Til ~ (3x)(Ai(X)&Aj(x)) -+ (V'x)(Ai(x) =
Aj(x)).
Conversely, assume that T' proves the above formulas. Then we may ex-
tend T' conservatively by all axioms Ai(Ci); call the resulting theory Till.
Till
~ x :::::: Ci -+ Ai(x) immediately from the definition of::::::; on the other
hand, Till ~ Ai(x) -+ (Ai(Ci) =Ai(X)) (since Ai(Ci) is provable),
Till ~ (Ai(x) &Aj(x)) -+ (V'z)(Ai(z) = Aj(z)),
Till ~ Ai(X) -+ (Aj(x) -+ (Ai(Ci) =Aj(Ci))),
Til' ~ Ai(x) -+ (Aj(x) -+ Aj(Ci)) (since Till ~ Ai(Ci)
and also
Till f- (Ai(Ci)&Aj(Ci) -+ (Ai(x) = Aj(x))
Till ~ Aj(Ci) -+ (Ai(x) -+ Aj(x))
thus all together,
Till ~ Ai(x) -+ /\j(Aj(x) = Aj(Ci)), hence
Til' ~ Ai(x) -+ x :::::: Ci.
Thus Til' is stronger than Til (in fact equivalent to Til) and hence Til is a
conservative extension of T'.
0
Theorem 7.2.16 Let T be a theory, Ai unary predicates of one sort, Bi unary
predicates of another sort. Assume
T ~ (3x)Ai(x),
T ~ (3y)Bi(y),
T ~ (3x)(Ai(x)&Aj (x)) -+ (V'x)(A(x) = Aj(x)),
T ~ (3y)(Bi(y)&Bj (y)) -+ (V'y)(Bi(y) = Bj(y)).
Add definitions Xl :::::: x2 = /\i(Ai(xd = Ai(X2)), Yl :::::: Y2 = /\i(Bi(Yl) =
Bi(Y2)), new constants Ci, di and axioms
Ai(x) =x :::::: Ci,
Bi(y) =Y :::::: di.
Finally add the definition
MAMD(x,y) =VAi(x)&Bi(y).
i
The resulting theory T M is a conservative extension of T and ::::::1,::::::2 are
similarities.

ON APPROXIMATE INFERENCE
187
M AMD defines in T M a fuzzy mapping w.r.t. ~1, ~2 with the examples
(Ci, dd iff
Proof
We only put things together. Adding ~i, Ci, di and the axioms con-
cerning them to T is conservative and the extension proves similarity ax-
ioms by the preceding lemma. Also recall that Ci
~
Cj is equivalent to
(3x)(Ai(x)&Aj (x))
and similarly for di
~
dj . Thus the fact that
M AMD(x, y) defines a fuzzy mapping follows by 7.2.14.
0
*
7.2.17 After having discussed fuzzy functions at large, let us ask what we
can say about the (logical) principles of fuzzy control in general, without
relating it to the notion of similarity. (We again restrict ourselves to just one
"input" variate X, a generalization to more input variates being easy.) The
heartof the matter is as follows: We have n rules "IF X is Ai THEN Y is
B/' ri = 1", . ,n, Ai unary predicates of the same sort, Bi predicates, all of
the same sort (possibly different from the former sort). Let us write the rules
as Ai(x) ~ Bi(y) cf. 7.1.1). We use Ai and Bi to define a binary predicate
MAMDby
(Mamd)
and, given another unary predicate A* of the first sort, define a B* from A*,
via the compositional rule of inference, i. e.
(Vy)(B*(y) == (3x)(A*(x)&MAMD(x,y))).
(B*)
Given a model M = (Dx, Dy, rAi' rBi) this defines a functional associating
to each fuzzy subset rA. of Dx the corresponding fuzzy subset r B. of Dy.
(Note that in fuzzy control this is used to define a crisp mapping of Dx into
D y : one first uses a fuzzification operation, associating to each u
E Dx
a fuzzy set r A. ("approximately u"), then applies the functional to get rB.
and finally applies a defuzzification procedure converting the fuzzy set rB.
into a crisp output v. We shall disregard the operations of fuzzification and
defuzzification.)
Our question now reads: is there any logic here? Let us try a positive
answer, as general as possible. To this end we shall make the above formulas
axioms of a theory of fuzzy control:

188
CHAPTER SEVEN
Definition 7.2.18 FC is a two-sorted theory having unary predicates AI, ... ,
... An, A* of sort 1, unary predicates B I , ... ,Bn,B* of sort 2 a binary pred-
icate MAMD of the type (1,2). The axioms are the formulas (Mamd), (B*)
above (defining MAMD from Ai, Bi and defining B* from A*,MAMD).
In addition, FC has two constants: X of sort 1 and Y of sort 2.
Theorem 7.2.19 FC proves the following (over BLV):
V\(Ai(X) --t Bi(Y»& V(Ai)2(X)] --t (A*(X) --t B*(Y»
:
i
7.2.20 Before we prove the theorem let us discuss its meaning. It says that,
under the asumptions as how B* is obtained, if the current value of the vari-
ate X (denoted by the constant X) satisfies, together with the current value
the variate Y, all the rules Ai(X) --t Bi(Y) and (sharp and) X satisfies
Vi Ai2(X) then A*(X) implies B*(Y). In particular, assume [...] to be 1-
true in M. Then IIAi (X)IIM ::; IIBi (Y)IIM for all i and IIAi (X)IIM = 1 for
at least one i. The conclusion is IIA*(X)IIM ::; IIB*(Y)IIM.
But this is not all. Assume the value of the antecedent [...] to be 2 r,
i.e. the rules are sufficiently true and X sufficiently satisfies one of Ai's. The
conclusion is that IIB*(Y)IIM is not much less than IIA*(X)IIM. For example,
if the rules are I-true then IIB*(Y)IIM 2 IIA*(X)IIM * II VA;(X»IIM (*
being the interpretation of &). We shall come back to this discussion in a
moment.
7.2.21 Proofof 7.2.19.
FCf- (Ai(X)&(Ai(X) --t Bi(Y») --t Bi(Y), thus
FCf- (A;(X)& !\i(Ai(X) --t Bi(Y») --t (Ai(X)&Bi(Y)), thus
FCf- [A;(X)& !\i(Ai(X) --t Bi(Y»&A*(X)] --t A*(X)&MAMD(X, Y).
Consequently,
FCf- (A;(X)&RULES(X, Y»
--t (A*(X) --t
--t (3x)(A*(x)&MAMD(x, Y»),
which gives the result by the definition of B*.
Now let us see what happens if we assume A* to be equivalent to A(
Theorem 7.2.22 FC proves (over BLV) the following:
[(Vx)(A*(x) == Ai (x»&(3x)Ay(x)] --t (Vy)(Bi(Y) --t B*(y»,
[(Vx)(A* (x) == Ai(x) )&(Vx)( /\ -.(Ai(x)&Aj (x»)] --t
if:.j
--t (Vy)(B*(y) --t Bi(y».

ON APPROXIMATE INFERENCE
189
Proof
(i)
FCf- (A;(x)&(Ai(x) == A*(x))&Bi(y)) --+ A*(x)&Ai(x)&Bi(y),
FCf- [(:3x)(A;(x)&(Ai (x) == A*(x))&Bi(y)) --+
--+ (:3x)(A* (x)& Vj(Aj (x )&Bj(Y))),
FCf- [(:3x)A;(x)&(Vx)(Ai (x) == A*(x)] --+ (:3x)(A;(x)&(A(x) == A*(x))),
FCf- [(:3x)A;(x)&(Vx)(Ai (x) == A*(x))&Bi(Y)] --+
--+ (:3x)(A*(x)&MAMD(x, y)),
FCf- [(:3x)A;(x)&(Vx)(Ai (x) == A*(x))] --+ (Bi(y) --+ B*(y)).
Now we prove (ii).
Write Dsjnt(Ai ) for (Vx) Ajii -,(Ai(x)&Aj(x)),
Equiv(Ai , A*) for (Vx)(A*lx) == Ai(x)).
FCf- (B*(y)&Equiv(A*, Ai)) --+ (:3x)(Ai (x)& Vj(Aj(x)&Bj(y))),
FCf- Dsjnt(Ai ) --+ [(Ai(x)& Vj(Aj~x)&Bj(Y))--+ A;(x)&Bi(Y)]
(since Ai(x)&Aj(x)&Bj(Y) implies 0 for i i- j), i. e.
FCf- [Dsjnt(Ai)&Equiv(A*, A)&B*(y)] --+ (:3x)(A;(x)&Bi(Y))'
FCf- [Dsjnt(Ai)&Equiv(A*, A)) --+ (B*(y) --+ Bi(Y)),
which gives the result by generalizing (by (Vy)) and moving (Vy).
0
Remark 7.2.23 (1) Again read the formulas as true in a model- first with the
antecedent I-true and then with the antecedent sufficiently true. We see that
(i) if A*(x) is sufficiently near to Ai and Ai is (sufficiently) non-empty
then Bi is sufficiently included in B*;
(ii) if Ai is sufficiently disjoint from all the other Aj's and A* is suffi-
ciently near to Ai then B* is sufficiently included in Bi. Obviously, these are
fuzzy readings; the precise meaning is given by the formulas proved and may
be expressed in greater detail again as an exercise.
(2) Let us repeat once more that instead of antecedent of the form Ai(X)
we could investigate Ail(X1)& ... &Aik(Xk) or AidX1) /\ ... /\ Aik(Xk);
this brings no problems but is more cumbersome.
(3) On the other hand, replacing & by /\ in the definition on M AMD does
bring additional problems (unless your logic is GV - Godel). We shall not go
into them here.
7.3.
AN ALTERNATIVE APPROACH TO FUZZY RULES
7.3.1 Up to now, we have worked with two variates X, Y with domains
Dx, Dy respectively; syntactically, we had just two sorts, predicates Ai, A*

190
CHAPTER SEVEN
of the first sort and Bi,B* of the second. X and Y were understood as object
constants (for the actual value of the respective variate) and we had rules of
the form Ai(X) -+ Bi(Y) saying "if the actual value of X is Ai then the
actual value of Y is B/'. X and Y thus denoted possibly unknown but crisp
elements of the respective domains.
Let us now try to be still more fuzzy and let X, Y denote fuzzy subsets of
the respective domains, giving some vague information on the actual values of
our variates. Syntactically this means that X and Y become unary predicates
ofthe respective sorts. Then it is natural to formalize the assertation "X is Ai"
to be just the formula (\fx)(X(x) -+ Ai(x)) (briefly, X
~ Ai). Indeed, the
formula is I-true if for each element m of Dx, the degree in which m satisfies
X is a lower bound of the degree in which m satisfies Ai. (The reader may
state in words the meaning of X
~ Ai if this formula is r-true.) We shall
reconsider the generalized modus ponens and the inference in fuzzy control
in this new setting.42
Definition 7.3.2 (l) If X, A are unary predicates of the same sort then X
~
A stands for (\fx)(X(x) -+ A(x)). Similarly, if cp, 'IjJ are formulas with ex-
actly one free variable x then cp ~ 'IjJ stands for (\fx)(cp(x) -+ 'IjJ{x))
(2) Given A*, A, B, B** ofthe obvious sort, CompMPA (alternative com-
position for generalized modus ponens) stands for the formula
(\fy)(B**(y) == [(\fx)(A*(x) -+ A(x)) -+ B(y)]))
or, briefly,
B**(y) == [(A* ~ A) -+ B(y)].
Remark 7.3.3 Recall CompMP, i. e. the formula
(\fy)(B*(y) == (3x)(A*(x)&(A(x) -+ B(y)))
and observe that, over BL\f, ComPMP, CompMPA I- B*
~ B**. Indeed,
assuming B*,B** to be defined by CompMP,CompMPA respectively, we
can prove the following:
B**(y) == ((\fx)(A*(x) -+ A(x)) -+ B(y)),
B**(y) == (3x)((A*(x) -+ A(x)) -+ B(y)),
B*(y) == (3x)(A*(x)&(A(x) -+ B(y))),
[A*(x)&(A(x) -+ B(y))] -+ [(A*(x) -+ A(x)) -+ B(y)]
42 Cf. [63,62].

ON APPROXIMATE INFERENCE
(note that the last formula is equivalent to the provable formula
[A*(x)&(A*(x) -t A(x))&(A(x) -t B(y))] -t B(y)),
(3x)(A*(x)&(A(x) -t B(y)) -t (3x)((A*(x) -t A(x)) -t B(y)),
B*(y) -t B**(y).
191
Theorem 7.3.4 Let ComPMPA be as in 7.3.2, i. e. (Vy)(B**(y) == (A*
~
A) -t B(y))). Then BLV proves
[CompMPA&(X ~ A*)&((X ~ A) -t (Y ~ B))] -t Y ~ B**
Proof
Observe that it suffices to prove, in BLV, the formula
[(X ~ A*)&((X ~ A) -t (Y ~ B))] -t Y ~ [(A* ~ A) -t B]
(1)
Indeed, having (l) we get
[(X ~ A*)&((X ~ A) -t (Y ~ B))&CompMPA -t (Y ~ [(A* ~ A) -t
B]&[(A* ~ A) -t B] ~ B** which gives the result by (provable) transitivity
of~. Thus we prove the formula (1).
First observe that, by our axiom on quantifiers, the following chain of
implications is provable:
[(Vx)(X(x) -t A(x)) -t (Vy)(Y(y) -t B(y))J -t
-t
(Vy)[(Vx)(X(x) -t A(x)) -t (Y(y) -t B(y))] -t
-t (Vy)[Y(y) -t ((Vx)(X(x) -t A(x)) -t B(y))].
(2)
on the other hand, by the (provable) properties of implication,
(X(x) -t A*(x)) -t [((X(x) -t A(x)) -t B(y)) -t
-t ((A*(x) -t A(x)) -t B(y))],
thus
X ~ A* -t [(3x)((X(x) -t A(x)) -t B(y)) -t
-t (3x)((A*(x) -t A(x)) -t B(y))],
and
X ~ A* -t [((Vx)(X(x) -t A(x)) -t B(y)) -t
-t ((Vx)(A*(x) -t A(x)) -t B(y))];
in short,
X ~ A* -t ([(X ~ A) -t B] ~ [(A* ~ A) -t BD
(3)

192
CHAPTER SEVEN
The implications in (2) prove
((X ~ A) -+ (Y ~ B)) -+ (Y~ [(X ~ A) -+ BD;
(4)
and (3) and (4) give
[(X ~ A -+ Y ~ B)&(X ~ A*)]-+
-+ (Y ~ [X ~ A) -+ B] & ([(X ~ A) -+ B] ~ [(A* ~ A) -+ BD;
by transitivity of ~ we get our formula (1); this completes the proof of the
theorem.
0
Remark 7.3.5 (1) This remark is analogous to 7.1.9: we may visualize the
result as a rule
ComPMPA,X ~ A*, (X ~ A) -+ (Y ~ B)
Y ~ B**
Thus if the assumptions are I-true in a structure M then so is the conclu-
sion. But again, let us stress that 7.3.4 gives more:
IICompMPA&(X ~ A*)&((X ~ A) -+ (Y ~ B))IIM :S IIY ~ B**IIM
(2) Observe that taking A for A* CompMPA becomes equivalent to B ~
B**, thus we get the trivial rule (modus ponens)
X~A-+Y~B,X~A
Y~B
as a particular case.
(3) More generally, assume M to be a model; iff IIA* ~ AIIM = 1 then
in M, CompMPA is equivalent to B
~ B**, if IIA* ~ AIIM = r < 1 then
IICompMPAil M = 1 iff for each m from the common domain of Y, B, B** ,
rB** (m) ?: min(l, rB(m) + 1 - r).
(4) Furthermore, we show that the rule in (1) becomes ill (non-sound) if
we replace CompMPA (the alternative composition for modus ponens) by
CompMP (see 7.3.3) and B** by B*. We exhibit the simple example of a
structure in which CompMP, X
~ A*, X
~ A -+ Y
~ B are I-true but
Y ~ B* is not. Let D x = {xo, xd, Dy = {Yo}. (The example works in any
of the logics LV, GV, rrv.)
The following tables give the interpretation of X, A, A* and Y, B, B* :
A
I
o
A*
1
2"
Yo I I
B
1
2"
B*
1
2"

ON APPROXIMATE INFERENCE
193
1
2'
One trivially verifies IIComPMPl1 = IIX ~ A*II = 1, IIX ~ All =
IIY ~ BII = !' thus /I(X ~ A) ~ (Y ~ B)/I =
1, but IIY ~ B*II
Note also 11(3x)X(x)1I = 1.
Thus the rule
CompMP, (3x)X(x), (X ~ A*), (X ~ A) ~ (Y ~ B)
Y~B*
is not sound (in LV, av, IN). The reader may show as an exercise that the
last rule is sound in the Boolean logic BooN.
(5) Finally, observe that if ~ a similarity predicate in T and T proves
A, B, A*, B* to be extensional (i.e. proves congruence axioms for them) and
for some constants c, d, the theory T proves (Vx)(X (x)
== x
~ c) and
(Vy)(Y(y) == y ~ d) i.e. X, Y define fuzzy singletons) then T I- (X
~
A) == A(c), T I- (X
~ A*) ~ A*(c), T I- (Y
~ B) == Y(d) etc. and
T I- (ComPMPA&(X ~ A*)&((X ~ A) ~ Y ~ B))] --t (Y ~ B*). Thus
we get, in this particular case, again the result of 7.1.8.
*
Let us now tum to fuzzy control. We just restrict ourselves to one result (re-
lating the Mamdani formula to the rules in our new sense).
Theorem 7.3.6 Let Ai, A*, X be unary predicates of one sort, Bi , B*, Y
unary predicates of another sort. Let M AMD (x, y) stand for the formula
Vi(Ai(X)&Bi(Y)) (as above) and let ComPMAMD be the formula
(Vy)(B*(y) == (3x)(A*(x)&MAMD(x,y))
Then BLV proves
[CompMAMD&X ~ A*& /\((X ~ Ai) ~ Y ~ Bi))&
i
&(3x)X2(x)& V(X ~ Ai )2] ~ Y ~ B*.
i
Remark 7.3.7 Before we prove the theorem let us comment on its meaning.
The inference pattern of the Mamdani-like fuzzy control mechanism can be
formulated as
"if X is A*, B* is defined from Ai, Bi using the Mamdani formula, and
Y corresponds to X then Y is B*".

194
CHAPTER SEVEN
We have analyzed this pattern as a sound deduction rule (or, better, as a
provable implication) in the preceding section. The question is what it means
that Y corresponds to X. In the theorem this is understood as the assumption
that the pair (X, Y) satisfies all the rules (!\i((X ~ Ai) -+ (Y ~ Bi)). Al-
ternatively we replace this assumption by the assumption that (X, Y) satisfies
an analogon of the Mamdani formula Vi(x ~ Ai&Y ~ Bi). We shall do this
in the next lemma and then show how this gives our Theorem.
Lemma 7.3.8 Under the assumptions of7.3.6, BL'v' proves
Proof
BL'v' proves
[(3x)(X(x)&X(x)&(X ~ A*)&(X ~ Ai)] -+ (3x)(A*(x)&Ai (x)), thus
(Xi ~ Ai&Y ~ Bi ) -+
-+ [(X ~ A*&(3x(X*2(x)&Y(y)) -+ (3x)(A*(x)&Ai(x)&Bi(Y))], and
(3x) (A* (x)&Ai(x)&Bi(Y)) -+ (3x )(A* (x)& Vi(Ai(x)&Bi(y)), thus
Vi((X ~ Ad -+ [((X ~ A*)&(3x)X2(x)&Y(y)) -+
-+ (3x)(A*(x)&MAMD(x, y))] thus
[CompMAMD&X ~ A*&(3x)X2(x)& Vi(X ~ Ai&Y ~ Bi )] -+
-+ (Y(y) -+ B*(y)),
which gives the result.
0
7.3.9 Proofof7.3.6. The theorem follows from our lemma by observing the
provability of
[V(X ~ Ai )2&1\(X ~ Ai -+ Y ~ Bi )] -+ V((X ~ Ai)&(Y ~ Bi))
i i i
(which is an easy exercise in propositional calculus).

CHAPTER EIGHT
GENERALIZED QUANTIFIERS AND MODALITIES
We are going to study, from the logical point of view, expressions as "usually
tp", "tp is probable", "for many x, tp" and similar. We shall handle them both
as generalized quantifiers and as modalities. This should not look unnatural
since in general modalities can be viewed as hidden quantifiers. We shall try
to show how the theory of generalized quantifiers and modal logic can be
applied to the above expressions (stressed by Zadeh as items of the specific
agenda of fuzzy logic in the narrow sense) and that they admit "classical"
logical analysis. We shall offer a logical apparatus, precise definitions, some
results and various problems: here much study and development is still neces-
sary. To be able to use and generalize the results and approaches of Boolean
logic, we shall have to review and summarize several notions and facts on
generalized quantifiers, some modal logics, and also on measures of uncer-
tainty (that will be used to define various quantifiers and modalities). Thus
we shall have two preliminary sections in this chapter: Section 1 on gener-
alized quantifiers (with an appendix on uncertainty measures) and Section 2
on modal logics, both sections in the frame of Boolean (two-valued) logic.
Generalized quantifiers in fuzzy logic and fuzzy modal logics are studied in
Sections 3, 4.
8.1.
GENERALIZED QUANTIFIERS IN BOOLEAN LOGIC; MEASURES OF
UNCERTAINTY
8.1.1 We stress again that this is a survey section, dealing with two-valued
logic. The primitive quantifier is V (universal); the existential quantifier 3 is
definable as -N...,. We may also define binary quantifiers applicable to two
formulas, e.g.
(Inclx)(tp,~) may stand for (Vx)(tp ---t
~) (tp is included
in ~). We may read this formula also as "all x satisfying tp satisfy ~" and
denote by (VxItp)'lj!. In the particular case of a binary atomic tp, e.g. tp being
x < y, we write (Vxlx < y)~ also as (Vx < y)~ (and call this a formula
with a bounded quantifier). Similarly we may define (NDisjnt x) (tp, ~) to be
195

196
CHAPTER EIGHT
(3x)(<p&'ljJ) and also write (3xl<p)'ljJ or (3x < y)'ljJ. A quantifier always binds
a variable (or more variables).43
8.1.2 Towards a general definition. The above quantifiers were definable, i.e.
may be considered to be only abbreviations. We shall deal with quantifiers
extending the expressive capability in an essential way. We describe three
syntactic types of quantifiers (and it will be apparent how to define infinitely
many other types). These will be unary quantifiers (giving formulas of the
form (qx)<p), unary parametric quantifiers (giving (qxly)<p) and binary (giv-
ing (qx) (<p, 'ljJ)). Our above examples are of these types.
What determines the truth value of a quantified formula, say a formula
resulting from <p by applying a quantifier q binding a variable x? Clearly, the
relevant object is
SatM,v(<p,X) = {m E MIII<pIIM,v(x/m) = I},
i.e. the set of all m satisfying <p in M (the meaning of variables different from
<p being given by v). The truth value of (qx)<p in M is a function of this set.
Thus there is a family F ~ P(M) of subsets of M such that II (qx)<pIIM,v = 1
iff SatM,v(<p, x) E F; otherwise II(qx)<pIIM,v = O.
For example, if q is V then F has just one element, namely M. If q is 3
then F consists of all non-empty subsets of M.
If q is binary then we have an F
~ (P(M) x P(M)), e.g. for (Vxl<p)'ljJ
we have F = {(X, Y)IX
~ Y
~ M} and for (3xl<p)'ljJ we have F
=
{(X, Y)IX, Y ~ M and X n Y '" 0}.
We are ready for a general definition.
Definition 8.1.3 A (Boolean) predicate calculus with a unary generalized
quantifier q is given by the following things:
-
a predicate language 'I
-
a class K of structures of the form (M, F) where M is an interpreta-
tion of'I and F is a set of subsets of the domain M of M. Elements of
K are called models of the calculus.
Logical symbols are those of predicate calculus plus q. The definition of
a formula is extended by the clause "if <p is a formula and x is a variable
then (qx)<p is a formula (and the notion of a bound variable is changed corre-
spondingly).
43 The pioneering paper on generalized quantifiers is [144]; for the present state
of the art see [120].

GENERALIZED QUANTIFIERS AND MODALITIES
197
The definition of satisfaction is extended by the clause
lI(qx)cpllcM,F),v = 1iff SatCM,F),v(CP, x) E F
A formula cP is true in (M, F) iff IlcpllcM,F),v = 1 for all v. cp is a tautology
if it is true in each model.
The reader will produce with ease the corresponding definitions of a cal-
culus with a binary quantifier ((SatCM,F),v(CP, x), SatCM,F),v('ljJ, x)) E F)
and will be able to extend to an n-ary quantifier if desired.
Note that we shall often write M instead of (M, F) if F is clear from the
context.
8.1.4 We shall now offer the reader various examples of (types of) calculi
with generalized quantifiers and information on relevant references. First we
discuss cardinality quantifiers. These may be considered to be generalized ex-
istential quantifiers: for each cardinal number,.. we have the quantifier (3I1:x )
such that (3 K x)cp means "there are at least,.. objects such that cp". The models
of the calculus are in one-one correspondence with interpretations M of the
corresponding language; for each such M, FM is the set of all subsets of M
having cardinality at least ,... Let us discuss some particular cases.
(i) ,.. is finite (think of ,.. = 4). If the calculus has an equality predicate
= (interpreted absolutely) then (3I1:x ) is definable: (34x)cp is equivalent to
(3Xl,X2,X3,X4)(A{=1 cp(xi)&A{Xi -=I xjli -=I j, 1 ~ i,j ~ 4}. Thus if all
interpretations of the language are taken as models, the calculus is axioma-
tized by the usual axioms of the Boolean predicate logic with equality.
(ii) ,.. is ~o (the countable cardinality). This calculus is not recursively
axiomatizable (see 8.1.10). This fact is related to (and easily follows from)
the known fact that the set of all formulas of the classical predicate calculus
true in allfinite models is not recursively enumerable. (Note that cp is true in
all finite models iff the formula -,(3Nox) (1) -T cp is a tautology of the present
calculus.)
(iii) ,.. is ~l (the first uncountable cardinality). There is an elegant recursive
axiom system complete for this logic [205], [107].
8.1.5 Note that the quantifiers 3K for infinite,.. make sense only if the calculus
has (finite and) infinite models. But we may have calculi having only finite
models (by definition, i.e. the class K of models is defined to contain only
finite models of a certain kind). We shall discuss calculi of this type (having
great importance in database theory and data analysis) later in this section.

198
CHAPTER EIGHT
8.1.6 Now let us investigate quantifiers in Boolean logic given by numerical
characteristics of subsets of a given set. We shall restrict ourselves to quan-
tifiers given by measures of belief (probability, possibility, Dempster-Shafer
belief functions). The necessary definitions are contained in the Appendix of
this section. Note that if M is an interpretation of a language I
and J.L is a
real-valued function defined on (some or all) subsets of M then we may use
J.L at least in two ways to define a quantifier.
(i) Threshold quantifiers. Take an a from the range of J.L and define :F to
be the set of all X
~ M such that (J.L(X) is defined and) J.L(X) 2: a. Thus
II(qx)<pII(M,F),v = 1 iff J.L(SaiM,v(<p, x)) 2: a
II(qx)<pII(M,F),v = 0 iff J.L(SaiM,v(<p, x)) < a
and is undefined otherwise. Call M safe for J.L if all necessary sets are in the
domain of J.L, thus satisfaction of all formulas is defined. For safe models our
definition agrees with that using :F. (Note that we could define:F using sharp
inequality J.L(x) > a as well; this gives a different quantifier.)
(ii) Comparative quantifiers. Introduce a binary quantifier <J (write <P <Jx
'l/J instead of (<J x)(<P, 'l/J) and define :F to be the set of all pairs (X, Y) where
X, Y
~ M, J.L(X) and J.L(Y) is defined and J.L(X) ::; J.L(Y). Then <P <Jx 'l/J
says "'l/J is at least as much believed as <p" and for safe models the definition
using :F applies. Note that both possibilistic measures and Dempster-Shafer
measures are total, i.e. each structure is safe; but, as commonly known, a a-
additive probability is defined just on a a-algebra of subsets of M and there
may be non-measurable subsets.
Probabilistic threshold quantifiers have been extensively studied; Rakovic
[170] is an excellent survey and so is Keisler's [108] (older). Since a-additivity
is stressed these approaches use logical systems admitting infinite countable
conjunctions 1\~1 <Pi as formulas or deduction rules with infinitely many as-
sumptions.
Little seems to be known about possibilistic and Dempster-Shafer belief
quantifiers (but see the next section on modal logics).
8.1.7 We mention also quantifiers given by a similarity (as studied in Chap.
S Sec. 6).
These are threshold quantifiers giving formulas of the form (\:Ix simay)<p,
(3x simay)<p. Evidently, if a model M and an evaluation v are given and
v(y) = b then SaiM,v(x simay, x) consists of all a E M whose degree of
similarity to b is at least a.
We shall meet similarities again in the next section.
8.1.8 Furthermore, let us mention that all we have said generalizes for many
sorted calculi: a quantifier and the sort and the corresponding system :F is a
system of subsets for the corresponding domain (if q is non-parametric unary;

GENERALIZED QUANTIFIERS AND MODALITIES
199
obvious modification for other kinds). This will be very important for our
treatment of modal logic.
8.1.9 We are going to comment onfinite model theory. As mentioned above,
this means a study of predicate calculi (with or without generalized quanti-
fiers) whose class of models consists of all finite interpretations of the given
language (i.e. interpretations whose domain is a finite set). Ref. [73] is one of
early papers on the subject, for a modern treatment see e.g. [130,47]. Traht-
enbrot [201] was the first to prove that for a .sufficiently rich language the
predicate calculus with finite models cannot be recursively axiomatized. The
final result (probably proved by various authors, is as follows):
Theorem 8.1.10 Let J be a language containing at least one at least binary
predicate, let K be the class of all finite interpretations of J. The set of tau-
tologies of the predicate calculus with the language J, classical quantifiers
and K as the class of models is ITI-complete (hence not recursively enumer-
able).
See [16] for a detailed treatment of Trakhtenbrot's theorem. The very
rough idea of a proof is to simulate initial segments of the structure of natu-
ral numbers by finite models satisfying appropriate axioms and show, in this
way, that the set of all formulas having a model is El-complete. We mention
in passing one more property of classical predicate calculus:
Theorem 8.1.11 Let J be any language and cp a formula of J (with classical
quantifiers). If for each natural n > 0 there is a model M of cardinality ~ n
in which cp is true (i.e. IIcpllM = I) then there is an infinite model M with
IIcpllM = 1.
This follows by completeness of classical predicate logic and definability
of quantifiers (3nx): if for each n the theory with axioms cp and (3n x)I is
constant then so is {cp} U {(3nx)I In E N}.
8.1.12 Let us now study quantifiers given by frequencies. Given a finite model
M and a formula cp(x) with one free variable x (or with more variables, all
except x being interpreted by an evaluation v), we have two complemen-
tary subsets of M: that of objects satisfying cp (i.e. SatM,v(cp, x)) and that
of object satisfying 'cp. The cardinalities of these two sets may be denoted
by FrM,v(cp(X)) and FrM,v('cp(x)) or simply FrM(cp) and FrM('cp) (if
v, x are clear from the context) or also aM, bM. Needless to say, FrM(cp) +
FrM (,cp) is the cardinality of M.
If we have two formulas cp(x) and "ljJ(x) we get four frequencies:
FrM(cp&'ljJ), FrM(cp&,"ljJ), FrM(,cp&'ljJ),FrM('cp&,"ljJ). We often denote
them aM, bM, eM, dM respectively and represent them as a 2 x 2 matrix

200
CHAPTER EIGHT
8.1.13 A unary statistic is a real-valued function t(a, b) defined for all pairs
(a, b) of natural numbers such that a + b ~ 1. A binary statistic is a real-
valued function t(a, b, c, d) defined for all quadruples (a, b, c, d) of natural
numbers such that a + b+ c + d ~ 1.
Caution: This term is borrowed from statistics but as such does not have
any a priori relation to probability theory: it is just a numerical characteristics
given by frequencies.
Example 8.1.14 Unary: relative frequency t(a, b) = a/(a+b) for a+b > 0;
t(O,O) = 1, say.
Binary: cross product
ad
ad + bc'
More sophisticated statistics are used in statistical hypothesis testing; but we
shall not go into this.
8.1.15 Clearly statistics may be used to define threshold quantifiers in finite
modal calculi. Ref. [85] contains much material about such quantifiers (called
observational). We recall some definitions. Observe that the definitions for-
malize intuitive notions of measures of association or measures of high rel-
ative frequency. If normalized between 0, 1 they may be taken as possible
semantics of the fuzzy quantifiers meaning "cp, 'IjJ are associated" or "'IjJ is
highly frequent in cp". This will be analyzed in more detail in Section 3 of
this chapter.
Definition 8.1.16 (1) A binary statistic t(a,b,c,d) is associational if a :s;
a',b ~ b',c ~ c' and d :s; d' implies t(a,b,c,d) :s; t(a',b',c',d'). (2) t is
multitudinal44 if a :s; a' and b ~ b' implies t(a, b, c, d) :s; t(a', b', c', d') (i.e.
t does not depend on c, d).
Definition 8.1.17 A quantifier q in a given finite model predicate calculus is
associational (multitudinal) if there is an associational (multitudinal) statistic
t(a, b, c, d) and a number 0: such that for each model M, pair of formulas
cp,7jJ and the corresponding frequencies aM,bM,cM,dM, lI(qx)cpIIM,v = 1
iff t(aM, bM, CM, dM) ~ 0: (alternatively, > 0:).
44 In [85] and other literature on the GUHA method multitudinal quantifiers are
called implicational; but I find the term "multitudinal" (referring to "many") more
appropriate.

GENERALIZED QUANTIFIERS AND MODALITIES
201
Definition 8.1.18 A statistic is symmetric if t(a, b, c, d) = t(a, c, b, d) for
each a, b, c, d. A threshold quantifier is symmetric if it is given by a symmetric
statistics.
Remark 8.1.19 We usually denote a multitudinal quantifier by:J;
cp :Jx 'ljJ can be read"many objects x satisfying cp satisfy 'ljJ." (Caution: this is
a crisp, non-fuzzy "many": cp :Jx 'ljJ is either true or false. The fuzzy "many"
will be discussed in Sec. 3.
A symmetric associational quantifier may be denoted by'""'; ('"'" x) (cp, 'ljJ)
(or cp '""'x 'ljJ, if desired) is read "cp and 'ljJ are associated'.
We shall offer two examples of tautologies, but no systematic attempt to
find a complete axiomatization is made.
Lemma 8.1.20 If:J is a multitudinal quantifier then
is a tautology.
(This should resemble the propositional Boolean tautology ((cp&'ljJ) -+
X) -+ (cp -+ (-,'ljJ V X)); the converse implication is also a Boolean tautology,
but our formula with :J, if -+ converted, is not more a tautology.)
Prool
Let mijk be the number of objects m such that IlcpllM,m
=
i,
11'ljJIIM,m = j, IIXIIM,m = k (i,j, k E {a, I} ). Then the frequencies a, b
from the four-fold table given by cp /\ 'ljJ and X are mIll,mllO whereas the
corresponding frequencies a', b' given by cp, -,'ljJ VX are mIll +mlOI +mlOO,
mllO. Thus t(a,b) ~ t(a',b'). Note that this proves much more than stated;
we shall recall this when presenting fuzzy quantifiers on crisp finite struc-
tures.
0
Lemma 8.1.21 If '"'" is a symmetric associational quantifier then
[(cp '""'x 'ljJ) /\ (Vx)((cp /\ 'ljJ) -+ X)] -+ ((cp /\ X) '""'x 'ljJ)
is a tautology.
Prool
similar: if a, b, c, d are the four frequencies given by cp, 'ljJ and a', b',
c', d' those given by (cp /\ X), 'ljJ and if(Vx)((cp /\ 'ljJ) -+ X) is true in M then
a = a', b 2:: b', c 2:: c', d ~ d' thus t(a, b, c, d) ~ t(a', b', c', d') as desired.
0

202
CHAPTER EIGHT
8.1.22 See [85] for more information on observational quantifiers (given by
statistics).
*
Appendix: measures of belief - a short survey.
Definition 8.1.23 Afield ofsubsets of a set M "I- 0 is a system F of subsets
of M containing M and 0 and closed under union U and complement -.
(Then F is a Boolean algebra with respect to set-theoretical operations.) F
is a a-field if for each sequence {Xnln E N} of elements of F, its union
UnEN X n is an element of :F. A belief measure on (M, F) is a function
f-J, : F -+ [0, 1] such that
f-J,(M) = 1,
x, Y E F and X
~ Y implies f-J,(X) ::; f-J,(Y).
(Note that this is sometimes called afuzzy measure but we shall avoid this
term.)
We shall survey definitions and basic properties of probability, possibility
and Dempster-Shafer belief functions. 45
8.1.24 A belief measure f-J, on (M, F) is a finitely additive probability if
X, Y
E F and X n Y = 0 implies f-J,(X U Y) = f-J,(X) + f-J,(Y). f-J, is a
a-additive probability (or simply probability) if its domain F is a a-field
and for each sequence {XnIn E N} of pairwise disjoint elements of F (i.e.,
Xi n X j = 0for i "I- j), f-J,(UnEN X n) = L.nENf-J,(Xn).
Lemma 8.1.25 (1) Let f-J, be a finitely additive probability on (M, F). Then
for each finite sequence Xo, ... ,Xn of pairwise disjoint elements of F,
n
f-J,(U Xi)) = L.f::lf-J,(Xi ).
i=O
(2) Let f-J, be a probability on (M, F) and let {Xnln E N} be a sequence
of elements of:F. If the sequence is increasing (i.e. Xi
~ X i+1 for each i)
then f-J,(UiEN Xd = sUPiEN f-J,(Xi ). If it is decreasing (Xi 2 Xi+l for each
i) then f-J,(niEN Xi) = infiEN f-J,(Xi).
45 The classical monograph on possibility theory is [40], that on belief functions
is [186]. For the state of the art of belief function theory see [188].

GENERALIZED QUANTIFIERS AND MODALITIES
203
Proof'
Obvious.
o
Lemma 8.1.26 Let M be finite and let F be the set P(M) of all subsets of
M.
(1) Each finitely additive probability on (M, F) is a-additive.
(2) Each probability f.L on (M, F) is uniquely given by its values of single-
tons: if f.Lo : M -+ [0,1] is such that ~mEMf.Lo(m) = 1 then there is a unique
probability f.L on (M, F) such that f.L({m}) = f.Lo (m) for each m EM.
Proof'
obvious.
o
Remark 8.1.27 Note that the assertion (2) from the preceding lemma gen-
eralizes to the case that M is countable, F = P(M) and f.L is a a-additive
measure.
Definition 8.1.28 Let F = P(M). A possibility on M is a belief measure
II: F -+ [0,1] such that for any system {Xa:la E I} of subsets of M (I any
non - empty index set),
II(UXa:) = supII(Xa:).
a:EI
a:EI
A necessity is a belief measure N : F -+ [0,1] such that for any {Xa:la E
I} as above,
Lemma 8.1.29 (1) If II is a possibility on M then the function N defined as
N = 1-II(M - X) is a necessity measure on M. Conversely, each necessity
N defines a possibility II(X) = 1 - N(M - X).
(2) Each possibility is uniquely determined by its values on singletons: if
1r : M -+ (0,1) is a normalized fuzzy subset of M (i.e. sUPmEM 1r(m) = 1)
then
II(X) = sup 1r(m)
mEX
is a possibility. (And ofcourse, ifII is a possibility and 1r(m) = II({m}) then
1r is a normalized fuzzy subset of M determining II by the above formula.)
Proof'
obvious
o

204
CHAPTER EIGHT
Definition 8.1.30 (1) Let f : P(Md -* P(M2 ) (for each X ~ MI, f(X) ~
M2). f is a n-homomorphism (or meet homomorphism) if f(Md = M2 ,
f(0) = 0 and f(X n Y) = f(X) n f(Y) for all X, Y ~ MI.
A function bel : P(M) -* [0,1] is a Dempster-Shafer belieffunction
(briefly, a OS-belief function or just belief function) if there is a finitely ad-
ditive probability f.J, on some (M',:F' and a n - homomorphism h mapping
P(M) into:F' such that bel(X) = f.J,(h(X)) for each X
~ M. (We say that
h allocates the probability f.J,(h(X)) to X - see [187]).
Remark 8.1.31 Show that the n - homomorphism is monotone, i.e. X
~ Y
implies h(X) ~ h(Y); thus X ~ Y implies bel(X) ~ bel(Y). Also bel(0) =
0, bel(M) = 1, thus bel is a belief measure.
Definition 8.1.32 If bel is a OS-belief function on M then the function
pl(x) = 1 - bel(M - X) is the corresponding plausibility.
We mention without a proof the following characterization of belief func-
tions (see [187]):
Lemma 8.1.33 A function bel: P(M) -* [0,1] is a OS-belief function iff
bel(0) = 0, bel(M) = 1 and bel is monotone of order 00, i.e. for each n ~ 1,
each A ~ M, AI, ... , An ~ M, Ai ~ A for i = 1, ... ,n,
bel(A) ~ 2:{(-l)III+lbel(n A)10 i- I ~ {I, ... ,n}}.
iEI
Forfinite M OS-functions have a nice alternative characterization:
Lemma 8.1.34 Let M be finite. A function bel: P(M) -* [O,lJ is a OS
- belief function iff there is a function m : P(M) -* [0,1] (called a basic
belief assignment) such that m(0) = 0, E {m(X) IX ~ M} = 1 and, for
each X
~ M,
bel(X) = 2: m(Y).
y~X
Proof:
Hint: If bel is given by h and f.J, define m({x}) = bel({x}) =
f.J,(h({x})) for each singleton; if m(X) has been defined for all Y ~ M with
IYI = k define, for X
~ M, IXI = k+ 1, m(X) = bel(X) - E{m(Y)IY C
X, IYI ~ k}.
Conversely, if bel is defined by the basic belief assignment m, let MI =
P(M),:fi = P(P(M)) and let, for Z
~ P(M),f.J,(Z) = E{m(Y)IY E
Z}. For X ~ M let h(X) = {YIY ~ X}.
0

GENERALIZED QUANTIFIERS AND MODALITIES
205
Definition 8.1.35 Let m be a basic belief assignment on P(M). F ~ M is a
focal element if m(F) > O.
Theorem 8.1.36 Let M be finite.
(1) J..l : P(M) -+ [0,1] is a probability iff it is a DS-belief function whose
all focal elements are singletons.
(2) N : P(M) -+ [0,1] is a necessity iff it is a DS-belief function whose
focal elements are linearly ordered by inclusion.
The reader may prove this theorem as a (moderately difficult) exercise.
Remark 8.1.37 There are lots of monographs on probability theory. For pos-
sibility theory, the "classical" book is [40], for belief functions [186], [187].
The literature is numerous; see e.g. [192]. Recall our sharp distinction be-
tween degrees of truth and degrees of belief; the latter play only an auxiliary
role in our considerations of fuzzy logic, in relation to generalized quantifiers
(and modal logic).
8.2.
TWO-VALUED MODAL LOGICS
8.2.1 This is a second survey section of this chapter. Classical modalities are
necessity 0 and possibility <>. We can extend the propositional calculus as
well as the predicate calculus by these modalities and generalize the notion
of a formula by adding the formation rule "if <p is a formula then O<p and <><p
are formulas." They are usually read "necessarily <p" and "possibly <p" respec-
tively; but there are various other (O<p may be understood as"<p is known",
"<p is believed", "always in the future <p will hold", "<p is provable" etc; this
leads to various semantics of modal logic. We shall mainly deal with modal
propositional logic but shall also present some information on modal predi-
cate logic. We shall stress the fact that modal logic (propositional and pred-
icate) can be seen as a sublogic of predicate logic (possibly with many sorts
and generalized quantifiers). This will be useful in introducing new modali-
ties.46
Definition 8.2.2 A (two-valued) Kripke model of a propositional language
Pl,PZ,'"
(propositional variables) is a structure K = (W, e, r) where W i=
ois a set of possible worlds (or states), e is a mapping associating with each
w E Wand each variable Pi the truth value (0 or 1) ofPi in w and r ~ W x W
is a-binary relation on W. If (u, w) E r we say that w is accessible for u. We
46 Ref. [104] is a good monograph on modal logic. See also [55, 56].

206
CHAPTER EIGHT
write IlpillK,w for e(w,pd (as defined in K) and extend this to all formulas,
defining lIep -t 1/JIIK,w, lIepl\1/JIIK,w, lI-,epIlK,w from lIepIlK,w, 111/JIIK,w by truth
functions (truth tables, e.g. lIep 1\ 1/JIIK,w = 1 iff IlepllK,w = 1I1/JIIK,w = 1 etc.)
and defining II oepllK,w = 1 iff lIepllK,v = 1 for each v such that (w, v) E r
(Le. Oep is true in w iff ep is true in all worlds accessible for w.) 1I0ep1lK,w = 1
iff IlepllK,v = 1 for some v accessible for w. Thus Oep is equivalent to -,o-'ep.
Definition 8.2.3 A semantics of modal logic is given by a class K of Kripke
structures for a given propositional language. The definition in particular de-
termines properties of the accessibility relation r and possibly also the cardi-
nality of W (our finite structures, or also infinite ones etc). A K- tautology is
a formula true in each world of each structure K E K.
Example 8.2.4 (1) KS5 is the class of all Kripke structures with r = W x W
(i.e. any world is accessible for any world). For structures from KS5 the rela-
tion r is uniquely given by W and therefore is superfluous; we may present
models of this class just as pairs (W, e). Note that in such a model the value
lIepllK,w is independent of w : lIoepliK = 1 iff IlepllK,v = 1 for all v E W.
KS5 will be the semantics of a logic 55 called the logic ofknowledge.
(2) KKD45 is the class of all Kripke structures K
= (W, e, r) such that
for some 0 i- Wo ~ W, r = W x Woo Worlds from W o are called believ-
able worlds; w is accessible for u iff w is believable. Also here IloepllK,w is
independent from w. KD45 (historical notation) is called the logic ofbelief
(3) There are very many tense logics (logics of time); we restrict our-
selves just to one example.47 Our Ktense consists of all Kripke structures
K = (W, e, r) where r is a reflexive linear preorder, Le. r is reflexive, tran-
sitive and dichotomic: for each u,v E W, (u,v) E r or (v,u) E r. In the
corresponding logic we shall investigate two necessities: G (for all worlds
from now on) and H (for all worlds up to now). The semantics is:
IIGepIlK,w = 1 iff lIepllK,v = 1 for all v such that (w, v) E r,
IIHepIlK,w = 1 iff IlepllK,v = 1 for all v such that (v, w) E r.
The corresponding possibilities are F and P; Fep is equivalent to -,G-,ep,
Pep to -,H-'ep (in some world from now on, in some world up to now).
The reader surely expects that we shall select some K-tautologies as ax-
ioms and produce some deductive system complete for the semantics given
by the chosen K. This will indeed be the case; but before we go into this it will
(we hope) be illuminating to clarify the relation of modal logic to predicate
calculus. The key observation is that a modality is in fact a hidden quantifier
on possible worlds. Let us make it explicit.
47 Pioneering papers are those of Gabbay [57, 58]. For a good survey of tense
logics see [19].

GENERALIZED QUANTIFIERS AND MODALITIES
207
Definition 8.2.5 Associate with a given propositional language I a predicate
language I* having for each Pi a unary predicate Pi and, in addition, a binary
predicate R. For each modal formula cp and each object variable x, define
cp* (x) as follows:
-
pi(x) is Pi(X); * commutes with connectives (i.e. (cp&'ljJ)* is cp*&'ljJ*
etc.);
-
given cp*(x) and object variable y not occuring in cp*(x) let (ocp)*(x)
be the formula (Vy)(R(x, y) -+ cp*(y)) (where cp*(y)) results from
cp*(x) by replacing all (free) occurences of x by y).
Finally, associate with each Kripke model K = (W, e, r) an interpretation
K* of our predicate language such that
K*=W,
rpi(W) = e(w,Pi) foreachi,
rR = r.
Lemma 8.2.6 Under the above notation,
for each cp and K (the left hand value being computed by the rules of modal
logic, the right hand according to predicate logic ). Moreover, the mapping *
of Kripke models is a one-one mapping of all Kripke structure for I onto all
interpretations ofI* .
Proof
routine
o
Remark 8.2.7 Observe that in the above examples, the condition on the re-
lation r was expressible by a formula <P of predicate calculus with classical
quantifiers (and no condition has been made on the cardinality ofthe models).
Whenever this is the case, the above definition and lemma shows that cp is a
tautology of K iff cp* is true in all models of <P (in the sense of the predicate
calculus), thus, by Godel's completeness theorem, cp is a tautology of K iff
<P f- cp* (cp* is provable from <P in the predicate calculus). We can conclude
that the set of K-tautologies is recursively enumerable. But this does not give
us any elegant axiomatization of K-tautologies, to find one is another task.
We shall present complete axiomatizations of our above examples.
Definition 8.2.8 The deduction rules of a two-valued modal logic (with the
modality 0, 0 being defined as .0.) are modus ponens and necessitation:
from cp deduce Ocp.

208
CHAPTER EIGHT
Logical axioms consist ofaxiom ofthe underlying (Boolean) propositional
calculus plus some modal axioms. In particular:
(1) S5 - the logic ofknowledge. Modal axioms
D(cp -+ 'ljJ) -+ (Dcp -+ D'ljJ),
Dcp -+ DDcp,
Ocp -+ DOcp,
Dcp -+ cp
(2) KD45 - the logic of belief As S5, with the last axiom (Dcp -+ cp)
replaced by Dcp -+ Ocp.
(3) RTL - reflexive tense logic. Recall that we have two necessities G, H
(always from now on, always up to now) and two corresponding possibilities
F, P. Modal axioms:
G(ep -+ 'ljJ) -+ (Gcp -+ G'ljJ)
PGcp -+ cp
Fcp -+ G(Pcp V Fcp)
Gcp -+ GGcp
Gep -+ ep
H(cp -+ 'ljJ) -+ (Hep -+ H'ljJ)
FHep -+ ep
Pep -+ H(Pcp V Fcp)
Hcp -+ HHcp
Hep -+ ep
We have two necessitations; "from ep deduce Gep" and "from cp deduce Hep".
Lemma 8.2.9 For all three examples (55, KD45, RTL), each axiom is a tau-
tology with respect to the corresponding class of models; and deduction rules
preserve tautologicity.
Proof
mechanical checking; in particular, observe that the axiom 0 (cp -+
'ljJ) -+ (Dep -+ D'ljJ) (called K) is true in each Kripke model; Dip -+ DDcp is
true if r is transitive etc.
0
Theorem 8.2.10 (Completeness). (1) The above logics 55, KD45, RTL are
complete, Le. a formula is a tautology (with respect to the corresponding class
of models) iff it is provable from the axioms.
(2) Moreover, all these three logics have the finite model property: if there
is a model K and its world w such that Ilepl\K,w = 1 then there is a finite
model K (Le. where set W of possible worlds is finite) and its world w such
that Ilepl\K,w = 1.

GENERALIZED QUANTIFIERS AND MODALITIES
209
Theorem 8.2.11 In RTL we may define a modality 0 : O<p stands for (G<p /\
H <p). With this definition, RTL is a conservative extension of 85: a formula
of 85 is provable in 85 iff it is provable in RTL.
These are non-trivial results and we shall not attempt to provide proofs
(see for example [104], [19]). But we shall use common techniques of these
proofs in proving completeness of some fuzzy modal logics.
Remark 8.2.12 Let us also mention that 85 and KD45 are sound and com-
plete with respect to broader classes. Let ICS5 be the class of all Kripke struc-
tures K = (W, e, r) where r is an equivalence, i.e. reflexive, symmetric and
transitive relation. Let IC~D45 be the class of Kripke models K = (W, e, r)
such that r is transitive, serial (each world has at least one accessible world)
and Euclidean (if u, v are accessible for w then they are accessible for each
other). It is easy to check soundness; and completeness follows trivially from
the preceding completeness, since ICs5 ~ ICS5 and the same for KD45.48
*
8.2.13 We shall now comment on the (two-valued) predicate modal logic.
Formulas are built from predicates, variables, constants, connectives, modali-
ties and quantifiers in the standard way. (We may take -t, -', "1,0 to be prim-
itive and consider the other connectives/quantifier/modality) as defined.)
8.2.14 A (two-valued) predicate Kripke model has the form
IC = (W, M, (rp,w)p,w, (me)e, r),
where W ::f 0 =I M, W is the set of possible worlds, M a common domain
of objects, for each predicate P of arity n and each w E W, rp,w is an n-
ary relation on M (interpretation of P in the world w), for each constant e,
me E M, and r is a binary relation on W.
The specific assumption we make here is that the set of objects is fixed,
independently of possible worlds. This admits generalizations, but we shall
disregard them.
In particular, for 85 the relation r is W x W and hence superfluous; models
have the form IC = (W, M, (rp,w)p,w, (me)e). They could be easily seen as
two-sorted structures in predicate calculus; if Pis n-ary then P* is (n + 1)-
ary, n arguments being of sort M (objects) and one of the sort W (possible
world).
48 For more information on the belief logic KD45 see [207].

210
CHAPTER EIGHT
8.2.15 Given a Kripke model K = (W, M, (rp )p, (mc)c) and an evaluation
a of object variables by elements of M, we define the value lIepIIK,u[w] of a
formula ep in a world w under the evaluation a. Our definition is standard by
induction on the complexity of formulas.
(P(XI, ... , x n ) is satisfied if the tuple of values of Xl, ... , x n is in the rela-
tion interpreting P in the world w);
lI-,epIIK,u[w] = 1
lIep -+ ~IIK,u[w] = 1
lIoepIlK,u[w] = 1
II(Vx)epIIK,u[W] = 1
differing
iff
IlepIlK,u[w] = 0,
iff
IlepIlK,u[w] =°or
11~IIK,u[W] = 1,
iff
IlepIlK,u[v] = 1 for all v E W,
iff
IIepllK ,u' [w] = 1 for all evaluations a'
from a at most in the value of x.
8.2.16 A formula ep is true in K if lIepllKAw] = 1 for all a, w. Furthermore,
ep is a tautology (of predicate Boolean S5) if ep is true in each Kripke model
(of predicate Boolean S5).
One can easily verify that all axioms of propositional S5 are tautologies of
predicate Boolean S5; moreover, the usual axioms for quantifiers in predicate
logic, i.e.
(Vx)ep(x) -+ ep(t) (ift is free for X in ep)
(Vx)(X -+ ep) -+ (X -+ (Vx)ep) (if x is not free in X)
are tautologies of our logic. Modus ponens and necessitation preserve tauto-
logicity; and so does generalization (from ep deduce (Vx)ep). Thus, with the
obvious notion of proof and provability, this logic is sound: each provable
formula is a tautology. Moreover, we have completeness:
8.2.17 A formula ep is provable in predicate Boolean S5 iff it is a tautology
ofS5.
8.2.18 In particular, the following formula, called the Barcan formula, is
provable in our logic:
(B)
O(Vx)ep == (Vx)Oep.
Thus Vcommutes with o.
8.2.19 For predicate Boolean KD45 we change the notion of a Kripke model
by adding a non-empty set Wo ~ W of believable worlds:

GENERALIZED QUANTIFIERS AND MODALITIES
211
K = (W, M, (rp,w)p,w, (mc)c, Wo) and change the definition of satisfaction
as follows:
110~llw = 1 iff 11~lIv = 1 for all v E Woo
The corresponding axiom system of predicate Boolean K045 consists of
axioms of predicate calculus, axioms of KD45 plus the Barcan formula. One
can show that this system is sound and complete with respect to tautologies
of predicate Boolean KD45, i.e. formulas true in each Kripke model K
=
(W, M, (rp)p, Wo) in the sense of our modified definition of satisfaction.
*
8.2.20 Up to now, our modalities were generalized quantifiers on possible
worlds and they were all of the same form: Ocp ment "in all worlds accessible
for the given world, cp holds". Let us now use our investigation of generalized
quantifiers to introduce modalities given by measures of belief (threshold or
comparative) or by similarities. Then we shall investigate modalities "With
probability ~ p, cp" etc.
Definition 8.2.21 A (two-valued) Kripke model with a belief measure has
the form K = (W, e, J.L) where W =f:- 0, e is an evaluation (e(w,p) E {O, 1})
for w E W, p propositional variable and J.L is a belief measure on a field of
subsets of W. Given an a E [0,1] we may define a modality 00< interpreted
in K as follows:
1100<cp11K,w = 1 iff (SatK(cp) = {vlllcpIIK,v = 1} is in the domain of p, and)
p,(Satx:(cp)) ~ a.
Remark 8.2.22 Let ICprob, ICpos s , ICDB be the class of all Kripke models with
a probability, possibility, or OS-belief function respectively. It would be very
interesting to have reasonable axiomatizations of modal logics with one of
these classes as semantics and with one or several threshold modalities 00<
(for one or several a). For the modality (modalities) "a-probably cp" the work
on probabilistic quantifiers mentioned in the preceding section would be use-
ful. For necessity some attempts were made by Dubois and Prade and their
school [41]. Note that if 00< means "the necessity of cp is ~ a" then 0aCP
means "the possibility of cp is ~ 1 - a". Similarly for OS - belief func-
tions. This appears to be a rather promising field of research, with few results
to date. But we shall not go into more details since the present survey of
modalities in Boolean logic is primarily a preparation for our investigation of
modalities in fuzzy logic.

212
CHAPTER EIGHT
8.2.23 We now tum to comparative quantifiers: we continue to work with the
classes lCprob, lCposs,lCDS; in each structure K = (W, e, tL) we may evalu-
ate formulas of the form cp <J 1/J such that IIcp <J 1/JIIK = 1 iff (tL(cp),tL(1/J)
are defined and) tL(ep) S tL(1/J). Not much is known on the modality compar-
ing probabilities; but we quickly describe systems with modalities comparing
possibilities and OS - belief functions.
Definition 8.2.24 The comparative possibilistic modal propositional logic
(CPMPL, see [14]) has formulas built from propositional variables, logical
connectives and one binary modality <J (if cp, 1/J are formulas then cp <J 1/J is
a formula). Models are Kripke structures K = (W, e, 7r) where 7r is a pos-
sibility on W (once more: 7r : W --+ [0,1], sUPwEW 7r(w) = 1). Semantics
is standard: II cp <J 1/JIIK = 1 iff 7r (cp) S 7r (1/J) (possibility of cp is less than
or equal to the possibility of 1/J). We define a new modality 0: Dcp stands for
(-'Cp <J 0). Thus IIDepliK = 1 iff cp holds in all worlds of positive possibility.
Definition 8.2.25 The axioms of CPMPL are
axioms of Boolean propositional calculus,
(cp <J 1/J) --+ ((1/J <J X) --+ (cp <J X))
(transitivity)
(cp <J 1/J) V (1/J <J cp)
(linearity)
-.(1 <J 0)
(non-triviality)
(cp <J 1/J) --+ ((cp V X) <J (1/J V X))
(disjunction)
(cp <J 1/J) --+ 0 (cp <J 1/J)
(boxing 1)
-.(cp <J 1/J) --+ D-'(cp <J 1/J).
(boxing 2)
Deduction rules are modus ponens and necessitation: from ep --+ 1/J infer
cp <J 1/J.
Theorem 8.2.26 CPMPL is complete with respect to the given semantics, i.e.
CPMPU- cp iff cp holds in each world of each K E lCposs.
A proofis obtained by combining the completeness proof in [14] with that
of[94].
Theorem 8.2.27 CPMPL is a conservative extension of K045, i.e. a formula
of K045 is provable in KD45 iff it is provable in CPMPL.
(Proof easy.)
Definition 8.2.28 CPMPL+ is CPMPL extended by the axiom Dcp --+ ep
(thus (-'Cp
<J 0) --+ cp). lC"toss is the class of possibilistic Kripke models
K = (W, e, 7r) with a positive 7r, i.e. 7r(w) > 0 for all W > O.

GENERALIZED QUANTIFIERS AND MODALITIES
213
Theorem 8.2.29 CPMPL+ is complete with respect to Ktoss' Furthermore,
CPMPL+ is a conservative extension of S5.
(Proof by a modification of the preceding.)
Remark 8.2.30 (1) We may define a translation of CPMPL-formulas into
formulas of the reflexive tense logic RTL as follows: p# is p, # commutes
with connectives, (cp <l 'ljJ)# is o(cp# -+ F'ljJ#). One easily shows that this
is a faithful embedding of CPMPL+ into RTL, i.e. a CPMPL+ - formula cp is
provable in CPMPL+ iff cp# is provable in RTL. (See [14] again.)
(2) We can dually develop a comparative necessity logic CNMPL with the
same class Kposs (or Ktoss) of models and the same formulas but i~terpreting
cp <l 'ljJ as saying N (cp) :=; N ('ljJ). Then Ocp is to be defined as 1 <l cp and
the disjunction axiom has to be changed to a conjunction axiom (cp <l 'ljJ) -+
((cp 1\ X) <l ('ljJ 1\ X)). We leave the details to a diligent reader. (Compare
also with the following axiomatization for OS-belief functions, recalling that
necessity is a particular OS-belief function.)
Theorem 8.2.31 The comparative belieffunction modal logic. CBMPL has
the same language as CPMPL i.e. the only binary modality <l; models are
elements of KDS, i.e. structure K = (W, e, bel) where bel is a belief func-
tion (bel: P(W) -+ [0,1]). Thus IIcp <l 'ljJIlK = 1 iff bel(cp) :=; bel('ljJ)
(pedantically, bel{wlllcpIlK,w = I} :=; bel{wlll'ljJIIK,w = I}, as always).
Axioms of CBMPL result from the axioms of CPMPL by replacing the
disjunction axiom by the following two:
-
O(cp -+ 'ljJ) -+ (cp <l'ljJ)
-
[o(cp -+ 'ljJ) 1\ o-,('ljJ 1\ X)J -+ [(('ljJ V X) <l (cp V X)) -+ ('ljJ <l cp)]
The remaining axioms on <l are transitivity, linearity, non-triviality and the
two boxing axioms.
Deduction rules are modus ponens and necessities "from cp -+ 'ljJ infer
cp <l 'ljJ" (as in CPMPL). (Note: alternatively you could take the necessitation
"from cp infer Ocp".)
Theorem 8.2.32 (1) CBMPL is complete, Le. CBMPLI- cp iff cp holds in each
world of each model K E KDS.
(2) CBMPL extends KD45 conservatively, i.e. a KD45 - formula is prov-
able in K045 iff it is provable in CBMPL.
For a proofsee [94].

214
CHAPTER EIGHT
8.2.33 To close this section we shall discuss Kripke models with a similarity:
K = (W, e, r) where r : W x W -t [0, 1] is a similarity. This enables us to
define modalities 00 that are parametric quantifiers on possible worlds: Docp
says, in a world w: "cp is true in all worlds at least a-similar to me." Thus r
gives a system of relations
(w,v) E ro
iff
r(w,v) ~ a.
These modalities were investigated in detail by Esteva and Godo [50]; we
comment on their results.
It is easy to verify that the following formulas are valid in each Kripke
model K E K;im where K;im is the class of all Kripke models with a simi-
larity with respect to the i-norm * as above:
Do(cp -t 'ljJ) -t (Docp -t Do'ljJ),
Docp -t cp
cp -t Oo<>oCP
Dox,BCp -t DoD,BCp,
Docp -t 0.oCP
(for f3 :S a).
In fact, Esteva and Godo investigate a different definition of modalities,
i.e.
II<>ocpIIK,w = 1 iffsup{r(w,w')lllcpIlK,w' = I} ~ a,
which gives lIoocpllK,w = 1 iffsup{r(w,w')llIcpIlK,w' = O} < a.
This is equivalent to the above definition for the case that the range of r is
finite and a > O. Apparently no complete system of axioms for the logic
of K;im is known; but the paper of Esteva and Godo contains completeness
result for reasonable subclasses of K;im (e.g. K;~m - the class of similarity
models whose similarity is strong, i.e. r(w, w') < 1 for w :/= w', and the
range of r is included in a fixed finite G ~ [0,1], G containing 0 and 1).
8.2.34 Concluding remark. Let us stress that in the previous and the present
section we have dealt with Boolean, two-valued logics and studied gener-
alized quantifiers and modalities in them. Thus values of formulas were al-
ways 0 or 1. We did use some real-valued entities (probabilities, possibili-
ties/necessities, DS-belief functions/plausibilities) as well as various statis-
tics on finite models to define quantifiers and modalities; but we obtained
two-valuedness by comparing a real value assigned to a formula either with
a threshold or with the value of another formula. In the next two sections
we shall elaborate a theory of generalized quantifiers and modalities in fuzzy
logic.

GENERALIZED QUANTIFIERS AND MODALITIES
215
8.3. Fuzzy QUANTIFIERS AND MODALITIES
From now on we shall study fuzzy quantifiers and modalities.49 The present
section is devoted to quantifiers definable in fuzzy logic from the "classical"
quantifiers V, 3, their relation to generalized possibility theory (possibilities
and necessities of fuzzy events) as well as to fuzzy modal logics generalizing
S5. We start with some general definitions.
Definition 8.3.1 Let 'I be a predicate language, L a linearly ordered BL-
algebra, M an L-structure for'I and cp a formula such that for each evaluation
v of object variables in M, IIcpllk.. v is defined. Then, for each mE M,
,
satk..,v(cp,x)(m) = Ilcpllk,.,v(x/m);
Thus Satk.. v(cp, x) is an L-fuzzy subset of M assigning to each mE M the
degree in which m satisfies cp(x) (all other variables being evaluated by v).
Remark 8.3.2 Observe that if L is the two-element Boolean algebra then
this definition reduces to 8.1.2. We shall mostly be interested in the case of
L being a t-algebra, notably [0, l]b [0, l]c, [0, l]rr. Now we shall generalize
8.1.3.
Definition 8.3.3 A C-fuzzy predicate calculus with a unary generalized quan-
tifier q is given by the following things:
-
a predicate language 'I
-
a class J( of structures of the form (M, L, F) where M is an L-
interpretation of 'I, L is a C-algebra and F is a mapping defined for
some fuzzy subsets f of M and assigning to each such f (for which
F(f) is defined) an element F(f) E L.
Again here we shall often write M instead of (M, L, F) if L and F will
be clear from the context.
Elements of J( are called models ofthe calculus. Logical symbols are those
of the predicate calculus plus the symbol q. The definition of formulas is
extended by the clause "if cp is a formula and x a variable then (qx)cp is a
formula". The definition 5.1.3 of the truth value of a formula is extended by
the clause
lI(qx)cpllk.. = F(Satk..(cp,x)),
where for each m E M, Satk..(cp, x)(m) = IIcp11rM,F),v(x/m)' In words, to
get the truth value of (qx)cp, one takes the fuzzy subset f of M such that
49 Preliminary results were obtained by Thiele et al. [197, 199,200].

216
CHAPTER EIGHT
for each m, f(m) is the truth degree of cp for m as the value of x (all other
variables being evaluated using v); the desired truth degree is F(f).
Note also that II (qx )cplltM,F),v may be undefined if the fuzzy set f (i.e.
Satk:t (cp, x)) is not in the domain of F. We call (M, F) safe if IIcplltM,F) is
defined for each cp.
8.3.4 The definition of a binary quantifier is fully analogous, F is now a map-
ping associating to some pairs (f, g) L-fuzzy subsets of M a value F(f, g) E
L; and we put
II (qx)(cp, VJ)lltM,F),v = F(Satk:t(cp, x), Satk:t(VJ, x)).
Example 8.3.5 Let us discuss the quantifiers (Vxlcp)VJ and (:Jxlcp)VJ. As in
Boolean logic, (Vxl'P)VJ stands for (Vx)(cp -+ VJ) and (:Jxl'P)VJ stands for
(:Jx)(cp&VJ). We may read these formulas "all cp's are VJ's" and "some cp's are
VJ's" as was usual in the syllogisms. Observe that the corresponding F's are
as follows: given L and M, and f, 9 : M -+ L, for the restricted V we have
F(f, g) =
inf (f(m) => g(m)),
mEM
and for restricted :J
F(f,g) = sup (f(m) *g(m)).
mEM
Lemma 8.3.6 For the quantifiers just defined, the following formulas are L-
tautologies for each L (i.e. the formulas have the truth value 1L for each safe
model:
(Vxl'P)VJ -+ .(:Jxlcp)·VJ
(:Jxlip)VJ -+ .(Vxlcp)·VJ
((Vxl'P)VJ&(Vxl'P)(VJ -+ X)) -+ (Vxlcp2)x
(1)
(2)
(3)
Proof
ShowthatBLV f- ((Vx)('P -+ VJ)&(:Jx)('P&'VJ)) -+ (:Jx)(VJ&'VJ),
(:Jx)(VJ&'VJ) -+ 0, thus it proves (Vx)('P -+ VJ) -+ ((:Jx)(cp&.VJ) -+ 0),
which is (1). The proof of (2) in BLV is the same.
We prove (3) in BLV:
((cp -+ VJ)&(cp -+ (VJ -+ X))) -+ ((cp&'P) -+ X) by propositional calculus,
from which the result follows by generalizing and distributing V.
0
Caution: The converse implications of (1) and (2) are provable in LV but
not in BLV (find counterexamples).

GENERALIZED QUANTIFIERS AND MODALITIES
217
*
8.3.7 Let us now show how restricted classical quantifiers can be used to de-
fine quantitative necessity and possibility in fuzzy logic. To this end assume
that our language contains a specific unary predicate 1r (for possibility) and
investigate, over BLV, the theory Tposs with the only axiom (3x)1r(x). M
is an L-model of Tposs if 11(3x)1r(x)IIM = 1, i.e. if sUPmEM T7r (m) = lL.
(Think e.g. of [0, IlL etc.) Define, for each formula cP with just one free vari-
able,
IIM(CP) = 11(3xl1r)cpIIM,
NM(cp) =
II (Vxl1r)cpIIM.
IIM(cp) is the possibility of cP (in M), NM (cp) the necessity of cp.
Lemma 8.3.8 Assume L linearly ordered, M is model ofTposs , cP, 'l/J formu-
las with one free variable.
IIM(cp V'l/J) = max(IIM(cp), IIM('l/J)),
NM(cp 1\ 'l/J) = min(NM(cp),NM('l/J)).
(1)
(2)
Proof
(1) The following chain of equivalences is provable in BLV:
(3xl1r)(cp V 'l/J) == (3x)(1r&cp) V (1r&'l/J)) == [(3XI1r)cp V (3xl1r)'l/JJ by 2.2.23,
5.1.22.
(2) The proof is fully analogous.
0
Remark 8.3.9 We see that our definition of numerical possibility/necessity
of formulas of fuzzy logic has some basic properties of possibilities of crisp
formulas. But some care is necessary:
(1) Unlike the crisp case, we may have NM(cp) > °and NM(-,cp) > 0
(take [0, IlL and assume that in SatM(cp, x) constantly equals !).
(2) Unlike the crisp case, we may have IIM(cp) < 1 and IIM(-'cp) < 1
(the same example).
We shall now investigate necessity and possibility in the frame of fuzzy
modal propositional calculus.
*
Our aim is now to study the modal logics that are fuzzy analogues of the
logic S5. Such an analogue is specified by the underlying propositional logic
C and the BL-algebra(s) allowed as the structure(s) of truth degrees. Given
this we have the usual notion of tautologies and may ask whether they are
axiomatizable and, if so, how.

218
CHAPTER EIGHT
Definition 8.3.10 Let C be a fuzzy propositional logic (schematic extension
of BL). Formulas of the logic S5(C) are built from propositional variables,
connectives (&, -r), the truth constant°and the two modalities 0, O. Let
L be a C-algebra. A Kripke L-model of S5(C) has the form K = (W, e, L)
(or just (W, e) if L is clear from the context) where W is a non-empty set of
possible worlds and e is an L-evaluation of pairs (w, p) where w E W and p
is a propositional variable, i.e. e : (W x Prop) -r L, Prop being the set of
all propositional variables. The truth degree 1I<p11* w is defined in the obvious
,
way.
Ilpll* w = e(w,p),
11011* w = OL·
,
,
11'P&~llkw = 11<p1l*,w * 1I~1I*,w,
analogously for -r,
110'1'11* w = inf 1I<p1l* v'
,
vEW
'
1I 0 'Pllkw = sup 1I<p1l*,v
vEW
(if this inf/sup exists, otherwise indefined).
Definition 8.3.11 We associate with our propositional language a predicate
language (with only unary predicates) and associate with each modal propo-
sitional formula <P its translation <p* and with each Kripke L-model K of
S5(C) its counterpart K* literally as in Definition 8.2.5. In more detail, pi
is Pi(x), * commutes with connectives, (O<p)* is ('l:/x)<p*, (O<p)* is (:Jx)<p*.
For each Kripke L-structure K = (W, e), we define a predicate L-structure
K*
=
(W,(rpJd where rpi(W)
= e(pi'w). We call K L-safe if K* is
L-safe in the sense of predicate calculus. A formula <p is an L-tautology of
S5(C) if II <pIli<: w = lL for each safe Kripke L-model of S5(C). Finally, <p is
a S5(C)-tautol~gy, if for each C-algebra L, <p is a L-tautology for S5(C). The
class of all safe Kripke L-models in an arbitrary C-algebra may be denoted
by K S5(c).
Lemma 8.3.12 For a safe K and each modal formula <p,
11<p1l*,w = 1I<p* 11**,w'
(Strictly speaking, on the right hand side the w should be replaced by an
evaluation of object variables assigning w to x and otherwise arbitrary, but
this is an obviousfaron de parler.)
The mapping * of L-Kripke models is a one-one mapping of all L-Kripke
structures for our propositional language I onto all L-structures for the pred-
icate language I*. (Proof obvious.)
Corollary 8.3.13 Given C and L, a formula <p is an L-tautology of S5(C) iff
<p* is an L-tautology of C'I:/.

GENERALIZED QUANTIFIERS AND MODALITIES
219
Corollary 8.3.14 For C = BL, L, G, II, the set of all S5(C)-tautologies is
recursively enumerable.
Proof
Due to the respective completeness theorems for CV, cp is a S5(C)-
tautology iff CV proves cp*. Observe that the mapping * is recursive and re-
duces the set of all S5(C)-tautologies to the ~l-set of all sentences provable
inCV.
0
Remark 8.3.15 By a trick (due to Craigh) we may use the above to produce
a recursive set of axioms for S5(C) complete with respect to proofs using
modus ponens as the only deduction rule. Indeed, given a usual encoding of
formulas and proofs by natural numbers (Gooel numbering), we put
Ax(S5(C)) =
{!\~l cp Ifor some d < n, d is a CV-proof of cp*}.
Here !\~l cp stands for cp /\ ... /\ cp (n conjuncts, min-conjunction). Now take
elements of Ax(S5(C)), together with all axioms of C, for your axioms. The
only rule you need is "from Ni=l cp derive !\f~l cp" (n > 1) - and this is
clearly a derived rule of C.
Needless to say, this is an extremely artificial and ugly axiomatization.
One would like to have an elegant axiom system, complete with respect to
modus ponens and necessitation. Unfortunately, this remains a research task.
Remark 8.3.16 Note that axioms of BLV give us natural tautologies of
S5(BL) (and hence of each S5(C), namely (v stands for a propositional com-
bination of formulas of the form 00:, 00:):
(01) Ocp -+ cp
(01) cp -+ Ocp
(02) o(v -+ cp) -+ (v -+ Ocp)
(02) o(cp -+ v) -+ (Ocp -+ v)
(03) o(cp V v) -+ (ocp V v)
Check that from these axioms, using modus ponens and necessitation, you
may prove modal analoga of all formulas in Chapter 5 Sections 1, 2 except
for (10). (10) can be taken as a new axiom:
(03) (Ocp&Ocp) == O(cp&cp)

220
CHAPTER EIGHT
Unfortunately, the completeness proof in 5.2.9 cannot be automatically
used for modal logic (or for the predicate calculus with just one variable),
thus we have the following
Problem. Is the system of axioms of C, together with the axioms (01) -
(03), (01) - (03), modus ponens and necessitation, complete for S5(C)?
(For L see remarks below.)
Remark 8.3.17 (1) Tautologies for a concrete C = L, G, II may be obtained
from formulas proved in CV in the corresponding section ofChapter 5. For ex-
ample, Ocp == --,O--'cp is an S5(L)-tautology, but it is not an S5(G)-tautology,
neither a S5(II)-tautology.
(2) This has concerned S5(C)-tautologies, i.e. Kripke L-models for arbi-
trary C-algebras L. Clearly, for C being L, G, II we are interested in [0, 1]c-
tautologies of S5(C), i.e. tautologies with respect to the respective standard
truth algebra. Let us investigate them now.
First we investigate [0, 1]c-tautologies of S5(G), briefly S5([0, l]c )-tauto-
logies.
Theorem 8.3.18 The set of all S5([0, l]a)-tautologies is recursively enumer-
able.
Proof'
This is because, by our interpretation and by the completeness theo-
rem 5.3.3 , S5([0, l]a)-tautologies coincide with S5(G)-tautologies and thus
with formulas cp such that GV I- cp*.
0
Definition 8.3.19 (1) A modal fuzzy calculus with the truth set [0, 1] has the
finite model property if each formula I-true in all finite Kripke models (mod-
els with a finite set of possible worlds) is I-true in all Kripke models.
(2) The calculus in question has the finite rational model property if each
formula I-true in all Kripke models (W, e) with W finite and e rational-
valued is I-true in all Kripke models.
Lemma 8.3.20 S5([0, l]c) does not have the finite model property.
Proof'
It is easy to show that the formula
(op ~ Oq) ~ O(Op ~ q)
is true in each finite [0, l]c-Kripke model K = (W, e): Let Ii0pliK = y,
IIqllK,w =
Xw; then since W is finite, II0qllK =
maxwEW Xw =
xwo'

GENERALIZED QUANTIFIERS AND MODALITIES
221
Ilop -+ OqllK = Y => xwo ' Furthermore, 1I0(op -+ q)IIK = maxwEw(Y =>
xw) = (y => maxwEW xw) = (y => xwo )' On the other hand, the example in
5.3.6 directly yields a Kripke model in which the above formula is not I-true.
o
8.3.21 Problem. Is the set of 55([0, I]G) - tautologies recursive, i.e. is logic
decidable?
Theorem 8.3.22 55([0, I]L) has the finite rational model property.
Proof'
Let <p be a modal formula and let K be a Kripke model over [0, IlL
such that 1I<pIIK,w < 1 for some w. Assume PI, ... ,Pn are the proposi-
tional variables of <po Then 11<p* 11K- ,w < 1 and, by 5.4.30 there is a k and
a model Ki of LV such that Ki takes values only from {O, k, ~, ... ,I}
and 1I<p*IIKi,w < 1. This gives us a Kripke model K l with all truth val-
ues in {O, k, ~, ... ,I} and such that 11<pIlK1,w < 1; K I = (W, ed. Let
C(v) = (el (v,pd,.··, el (v,Pn)) (the card of v). Each C(v) is an element
of {O, k, ~, ... ,I}n and the latter set is finite. Let W2 be a finite subset of W
such that for each v E W there is a Vi E W2 with C(v) = C (Vi). It is easy to
show that K 2 = (W2, ed is the desired finite rational-valued model. (Show
by induction that 111/JIIK2,v = 1I1/JIIK1,v for each formula 'ljJ and each v); since
1I<pIIKl,w < 1 we get 11<pIIK2,W < 1.)
0
Corollary 8.3.23 The set of all 55([0, I]L)-tautologies is in Ill.
Proof'
Let f be the function deciding for each finite rational-valued Kripke
model K = (W, e) (where W is an initial segment of integers) and for each
modal formula <p whether <p is I-true in K (if yes then f (K, <p) = 1, if not
then f(K, <p) = 0). Clearly, f is recursive. Moreover, <p is a 55([0, I]L)-
tautology iff for all K, f (K, <p) = 1; thus the set of all such <p is II1.
0
*
Remark 8.3.24 We shall show that the set of all 55([0, llL)-tautologies is
recursive, i.e. that the logic is decidable. We shall do this by showing, simi-
larly as in propositional calculus (and differently from LV), that 55([0, llL)-
tautologies coincide with 55(L)-tautologies, i.e. that a formula is [0, llL-
tautology iff it is a L-tautology for each linearly ordered MV-algebra L.
Unfortunately we shall not prove completeness with respect to any concrete

222
CHAPTER EIGHT
axiom system. Note that Rutledge in his dissertation [179] presents such a
complete axiom system (he considers predicate calculus with unary predi-
cates and just one object variable but this is evidently equivalent to modal
logic through our translation *). But his proof is extremely demanding and
rather long; we shall not present it here.
Lemma 8.3.25 Let T be a theory over LV', let (V'x) cp be a sentence and let
c be a new constant. Let T' be the extension of T by the constant c and the
axiom cp(c) -+ (V'x)cp(x). Then T' is a conservative extension ofT.
Proof"
Let a be a closed formula not containing c. Let T' I- a. Then for
some n,
T I- (cp(c) -+ (V'x)cp(x))n -+ a
(by Deduction theorem),
T I- (cp(y) -+ (V'x)cp(x))n -+ a
(for a new variable y),
T I- (3y)(cp(y) -+ (V'x)(cp(x))n -+ a
(by generalization and (32)),
T I- [(3y)(cp(y) -+ (V'x)cp(x))]n -+ a
(see 5.1.18(10)),
T I- [(V'y)cp(y) -+ (V'x)cp(x)]n -+ a
(see 5.4.15(ii)),
T I- a
(by 5.1.17(8)).
0
Corollary 8.3.26 Each theory T over LV' has a conservative extension T'
with possibly infinitely many new constants such that for each sentence
(V'x)cp(x) there is a constant c such that T' I- (V'x)cp(x) = cp(c). Moreover;
for each sentence (3x)cp(x), there is a constant d such that T' I- (3x)cp(x) =
cp(d).
Remark 8.3.27 (1) In each model M ofT',
1I(V'x)cpIlM,v = min{lIcpIlM,wlv =x w} = IIcp(c)IIM,v
and similarly for 3 and max (inf and sup are attained).
(2) T' is Henkin in the sense of Definition 5.2.1.
Lemma 8.3.28 If cp is not an S5(L)-tautology then there is a finite [0, IlL-
structure K 1 such that IIcpllK 1 < 1.
Proof"
By the assumption, if cp is not an S5(L) tautology then LV' If cp*;
by the previous lemma, To If cp* where To is a conservative extension of
LV' as in the Corollary above. Thus there is an L-model K* of To in which
IIcp* 11K- < 1, L being an MV-algebra, linearly ordered. Note that cp* con-
tains just one variable x; we may assume cp* closed. Let C be a set containing

GENERALIZED QUANTIFIERS AND MODALITIES
223
for each subformula of cp of the form (Vx)'ljJ or (:Jx)'ljJ a corresponding wit-
nessing constant c (so that To I- (Vx)'ljJ(x) == 'ljJ(c), To I- (:Jx)'ljJ(x) == 'ljJ(c)
respectively). Clearly, C is finite; let Wo be the set of meanings of constants
from C, i.e. Wo = {mclc E C}. Let KG be the substructure of K* with the
domain Woo Let v vary over evaluations of x by elements of Wo and show,
by induction, that lIaIlK(j,v = lIallK* ,v' (Trivial for atoms and connectives;
for quantifiers use witnessing constants.) Thus Ilcpl!K(j = IIcpIlK* < 1.
Now recall the local embedding theorem 3.2.11 for linearly ordered MV-
algebras; using it we may replace the finite L-structure Ko by a correspond-
ing [0, IlL-structure K I which results by replacing each value e(p, w) by its
isomorphic image e'(p, w) = f(e(p, w)). Here f embeds the set of all values
IlaI!K(j,v (a a subformula of cp, v evaluates x by one of the elements of Wo)
- which is a finite subset ofL - into [0, IlL. This completes the proof.
0
Corollary 8.3.29 55([0, IlL) is decidable (and so is 55(L».
Proof
By 8.3.28, the set of all 55([0, IlL-tautologies equals to the set of
all 55(L)-tautologies and thus by 8.3.14 is ~l. By 8.3.23 it is Ill; thus it is
recursive (see 6.1.12).
0
*
We shall now present a Pavelka-style axiomatization for 55([0, I]L).50 It
is sufficiently elegant, but only expresses the set of all tautologies as a II2-set
(even if we know it is recursive).
Definition 8.3.30 The logic of the logic RPLo results from that of RPL by
adding the modality 0 (0 is defined as -,0-,). Kripke models are as above;
IlfllK,v = r. Axioms of RPLO are
axioms of RPL (with the new notion of a formula)
axioms of 55 (with the new notion of a formula)
Fitting style axioms:
(1' -+ ocp) == 0(1' -+ cp),
(1' -+ Ocp) == 0(1' -+ cp).
Last axiom:
(Ocp & Ocp) == O(cp & cp)
50 See [82].

224
CHAPTER EIGHT
Deduction rules: Modus ponens and generalization: from cp infer ocp.
A proof is a sequence of formulas CPl, ..., CPn such that for each j
=
1, ...n, CPj is an axiom or follows from some previous ones by one of the
deduction rules.
This completes the definition of the logic.
Lemma 8.3.31 (Soundness). Each provable formula is a [0, IlL-tautology.
Definition 8.3.32 The provability degree of cP is Icpl = sup{r II- (1' -+ cpn·
The truth degree of cP is Ilcpli = inf{llcpllK I K Kripke model and wE W}.
Lemma 8.3.33 (Strong soundness). Icpl :::; Ilcpll, i.e. whenever I- l' -+ cp then
IlcpllK,w ~ r for each K, w.
The easy proofis left to the reader as an exercise.
Lemma 8.3.34 MVS5 proves the following duals of Fitting-style axioms:
(<>cp -+ 1') = o(cp -+ 1'),
(ocp -+ 1') = <>(cp -+ 1').
Proof
We show the provability of the former formula. This is done by the
following chain of provable equivalences: (<>cp -+ 1') = (-,o-,cp -+ 1') =
(1 - r -+ o-,cp) = 0(1 - r -+ -,cp)
o(cp -+ 1'). The latter formula is
proved in the same manner.
0
Theorem 8.3.35 Completeness Theorem. For each cp, Icpl = Ilcpli. In particu-
lar, cp is a I-tautology iff, for each r < 1, I- l' -+ cp.
We elaborate a proof. It is enough to prove that if for some s < r, If s -+
cp then there is a "counterexample" model K
= (W, e) such that for some
W E W, II cp IIw< r. This can be equivalently expressed as follows: for each
s < 1, if If s -+ cp then IIcpllw < 1 for some K
=
(W, e) and W E W.
Indeed, let t < 1 be such that s = t&r. If If s -+ cp then If t -+ (1' -+ cp),
thus 111' -+ cpll < 1 and hence IIcpll < r. We apply the usual construction of a
"canonical model".
We shall use the following definitions: Let e be the set of all formulas
provable on our logic, e = {cp I I- cp}. A theory is a set T of formulas con-
taining all elements ofe and closed under modus ponens. (Caution: closed-
ness under necesitation is not requested; theories correspond to truth in one
possible world.) T is complete if for each r, (1' -+ cp) E Tor (cp -+ 1') E T.

GENERALIZED QUANTIFIERS AND MODALITIES
225
T is consistent if (1' -+ 0)
r:f. T for each r > 0 (cf 3.3.7). B-formulas are
fonnulas resulting from truth constants and from boxed fonnulas (begin-
ning by D) using connectives. (Note that if <p is a B-fonnula then for each
K = (W, e), II <p IIw is independent from w.)
Lemma 8.3.36 If Ifs -+ 'l/J then there is a theory To such that To U {'l/J -+ s}
is consistent and for each B-fonnula <p and each r, (1' -+ <p) E To or (<p -+
1') E To (To is complete for B-fonnulas).
Proof
If If s -+ 'l/J then s -+ 'l/J fJ. 8 and 8 is a theory. It follows that the
closure 8' of 8 U {'l/J -+ s} under modus ponens is a consistent theory - the
proof is exactly as in [74] . Having this we may arrange all B-fonnulas into
a sequence f3o,[31, ... and apply the completion technique of 2.4.2 (quoted
lemma) to get a desired To.
0
Lemma 8.3.37 For To as above, if (O'l/J) E To then there is a consistent
complete T' 2 To such that 'l/J E T'.
Proof
Let T1 be the closure of To U {'l/J} under modus ponens. It is enough
to show that T1 is consistent. Note that by the last axiom, 0 ('l/Jm) E To for
each m > O.
Assume T1 is inconsistent; thus by 2.2.13 , for some m > 0, To proves
'l/Jm -+ 0, thus To proves -,'l/Jm (by a modus-ponens proof, no generalization!).
Hence there is a proofof -,'l/Jm from finitely many elements 81, ... , 8n ofTo; by
the above deduction theorem again, for some natural k
f- (81&....&8n )k -+
-,'l/Jm, thus f- 8f -+ (... -+
(c5~ -+ -,'l/Jm) and 8i are either logically provable
or are B-fonnulas; thus for each i, To f- oOf. On the other hand, f- 08f -+
(... -+ (0c5~ -+ o-,'l/Jm) ...) thus using modus ponens we get o-,'l/Jm E To,
which is a contradiction. This proves the lemma, using the fact that each
consistent theory has a consistent complete extension.
8.3.38 Construction of the model. Let {Tw I w E W} be the system of all
consistent complete extensions of To, indexed by a set W; define e(p, w) =
IplTw = sup{r I (1' -+ p) E Tw }; put K = (W; e). Let Wo be an element of
W such that ('l/J -+ s) E Two ('l/J, s as at the beginning of the proof).
We prove, for each a and w, that lalTw = IlaliTw '
This is clear for a atomic and the induction step for connectives is proved
as in 3.3.8. It remains to prove the induction step for o. On the one hand,
10alTw = sup{r I (1' -+ Oa) E Tw } = sup{r I 0(1' -+ a) E Tw }
:::;

226
CHAPTER EIGHT
sup{r 1(1' -+ a) E Tw} = jaITw;ontheotherhand,ifr > joalTw then
T If (1' -+ oa), To If (1' -+ oa), To f- (oa -+ 1'), To f- (-,1' -+ O-,a),
thus To f- 0 (-,1' -+ -,a), thus there is a Tw' such that Tw' f- -,1' -+ -,a, Tw' f-
a -+ r, thus lalTw'
::S r. This gives infwlalTw
::S loalTw and together we
have infwlajTw = IOalTw = loalTo'
Now lIoall = infwllallTw=infwlalTw = joalTw ' as we claimed.
Completeness follows: we have assumed s < 1 and If s -+ 'l/J and con-
structed a model K = (W, e) and Wo E W such that 1I'l/Jll wo ::S s.
0
Remark 8.3.39 (1) We can say rather little about S5([O, l]rr), S5 over the
product logic. Similarly as S5([O, l]a), S5([O, l]rr) does not have the finite
model property; this can be shown using the example in 5.3.6
(2) Problem: Is this logic axiomatizable or even decidable?
*
We shall now discuss the fuzzification of the logic of belief, KD45. We shall
present no definitive results, just some observations.
Definition 8.3.40 Given a propositional logic C,formulas of the fuzzy modal
belief logic (call it FMBEL(C)
are built from infinitely many modalities
On, On (n
~ 1). Kripke models have the form K
=
(W, e, 1T) where 1T
is a normalized non-empty fuzzy subset of W; i.e.
1T
: W
-+ [0, 1] and
sUPwEW 1T(W) = 1. Semantics of modalities is as follows (1rn (v) stands for
1r(v) *... *1r(v) - n times)
lIonepll~ w = inf (1rn(v) => lIepll~ v),
'vEW
'
Definition 8.3.41 (1) We define a translation x of FMBELC-formulas into
formulas of predicate logic (modifying 8.3.11 and 8.2.5). Each propositional
variable Pi is attached the atomic formula Pi(x) = pi; * commutes with
connectives; for a fixed new unary predicate Q,
(onep)* = (\fx)(Qn(x) -+ ep*),
(Onep)* = (3x)(Qn(x)&ep*).
(Here Qn(x) stands for Q(x)&··· &Q(x) - n times.)

GENERALIZED QUANTIFIERS AND MODALITIES
227
(2) Similarly we define an interpretation ofFMBEL(C)-formulas in S5(C)-
formulas as follows: P~ = Pi. Ucommutes with connectives, and for a fixed
new propositional variable q,
(OnCP)U = o(qn(x) -+ cpU),
(Oncp)U = O(qn&cpU).
(Here qn is q& ... &q - n times.) We generalize in the obvious manner defi-
nition 8.3.10 of an L-tautology for FMBEL(C) and an FMBEL(C)-tautology.
Lemma 8.3.42 (1) cp is a FMBEL(C)-tautology iff cpU is true in each safe
model M ofCV such that 11(3x)Q(x)IIM = 1.
(2) cp is a FMBEL(C)-tautology iff cpU is I-true in each Kripke model K
of S5(C) such that IIOqllK = 1.
Proof obvious.
Lemma 8.3.43 The following analogues of axioms KD45 are FMBEL(C)-
tautologies (for each C):
OnCP == OmOnCP
OnCP == OmOnCP
OnCP -+ 0nCP
(1)
(2)
(3)
(4)
(5)
Proof"
Possibly the quickest way is to consider the corresponding formulas
of the predicate calculus,
(1) By propositional calculus
BLV f- (Q -+ cp) -+ ((Q' -+ (cp -+ 'ljJ)) -+ (Q&Q') -+ 'ljJ), thus
BLV f- (Vx)(Qn -+ cp) -+ [(Vx)(Qm -+ (cp -+ 'ljJ)) -+ (Vx)((Qn&Qm) -+
'ljJ)J
and, of course BLV f- Qn&Qm = Qn+m.
(2) On the one hand,
BLV f- (Vx)(Qn -+ cp) -+ (Qm -+ (Vx)(Qn -+ cp));
generalizing and shifting the outmost V, we get (OnCP -+ OmOnCP)*. Con-
versely,
BLV f- (Vx)(Qm -+ (Vx)(Qn -+ cp)) -+ [(3x)Qm -+ (Vx)(Qn -+ cp)].
Let T be the theory with the only axiom (3x)Q (over BLV». Then

228
CHAPTER EIGHT
T f- (3x)Qm, T f- (\ix)(Qm -+ (\ix)(Qn -+ cp)) -+ (\ix)(Qn -+ cp), i.e.
T f- (DmDnCP -+ Dncp)*. This suffices by 8.3.20.
(3) The proof is similar and uses 5.1.18 (9)
(4) Let T be as above; T f- (3x)(Qn&Qn). Thus
T f- [(\ix)(Qn -+ cp)&(3x)(Qn&Qn)J -+ (3x)(Qn&Qn&(Qn -+ cp)),
which gives
T f- (\ix)(Qn -+ cp) -+ (3x)(Qn&cp), i.e. T f- (Dncp -+ OnCP)*.
(5) Clear from BL\i f- (\ix)(Qn+1 -+ Qn).
0
8.3.44 Problem. Find an elegant axiomatization for FMBEL with models
over all C-algebras). For models over [0, IJ the situation is similar as for S5.
8.4.
ON "PROBABLY" AND "MANY"
8.4.1 Introduction In the last section we considered quantifiers and modali-
ties that were, in one way or another, definable from the universal and existen-
tial quantifier. In the present and next section we shall focus our attention on
modalities and quantifiers related to probability or to relative frequence. We
may use probability (relative frequence) to define fuzzy modalities and fuzzy
quantifiers in various natural ways, in accordance with the use of "probably",
"many" in the natural language ("Probably it will rain tomorrow"; "Many
students pass the exam without any problems".) In particular, we may have
calculi with crisp or fuzzy models, [both finite and infinite] or [only finite]
models, with unary or binary quantifiers (unconditional or conditional prob-
ability) etc. We shall just make a choice of some few (typical and important)
systems and shall try to present some results on them (not just a panopticum
of definitions). In particular, in the present section, we shall investigate
-
the modality probably on crisp models,
-
the modality many on crisp finite models.
In this context we shall present fuzzy multitudinal quantifiers (for finite crisp
models).
In the next section, we shall deal with
-
the quantifier probably on fuzzy models,
-
the quantifier many on fuzzy finite models.
Throughout both sections, we shall formulate various open problems and re-
search topics.

GENERALIZED QUANTIFIERS AND MODALITIES
229
First we shall assume Kripke models like in 8.2.15, i.e. of the form
(W, e, J.L) where W # 0 is a set of possible worlds, e(p, w) E {O, 1} for
each propositional variable and J.L is a finitely additive probability on a field
of subsets of W such that for each p, the set {w E Wle(p) = 1} is measur-
able (is in the domain of J.L). We call the class of all such models Kprob.
Definition 8.4.2 Let C be a propositional logic given by a continuous t-norm
*. The fuzzy probability modal logic over C (shortly, the fuzzy probability
logic, FP(C)) has the connectives and truth constants &,~, /\, V, -,,0, I of
C, one unary modality P (for "probably") and two kinds of formulas:
-
Boolean formulas resulting from propositional variables and 0, I us-
ing only connectives /\, V, -', and
-
modalformulas resulting from atoms of the form Pcp, cp any Boolean
formula and truth constants 0, I using all the connectives of C.
For the special case of C being RPL we modify this definition by adding truth
constants f (r rational from (0,1» to atomic modal formulas.
Models are structures from Kprob. For each Boolean formula cp, the truth
value IlcpllK,w (w E W) is defined in the obvious way and is 0 or 1. Further-
more,
IIPcpllK = J.L({w E WlllcpllK,w = I})
and 114>IIK for a non-atomic modal formulas is defined using the truth func-
tions of C (over the BL-algebra given by the t-norm *).
Remark 8.4.3 (1) Observe the distinction between cp and Pcp: cp is a Boolean
formula and, given K, has its probability (probability of the set of all w E W
in which cp is true). This probability is taken to be the truth degree of Pcp, the
formula saying "cp is probable."
(2) Even if we have defined the probability logic for any t-norm *, we shall
restrict ourselves to Lukasiewicz logic L (or RPL) since its truth functions
are ell suited to expressing basic properties of probability. From now on, FP
stands for the fuzzy probabilistic modal logic FP(L) or FP(RPL).51
Definition 8.4.4 The following are axioms of FP:
axioms of Boolean propositional logic Bool for Boolean formulas,
axioms of L (or of RPL) for modal formulas,
axioms on P:
51 See [79].
Pcp ~ (P(cp ~ 'l/J) ~ P'l/J),
P(-,cp) == -,P(cp),
(FPl)
(FP2)

230
CHAPTER EIGHT
P(tp V 'ljJ) == [(Ptp -+ P(tp f\ 'ljJ)) -+ P'ljJ]
for arbitrary Boolean fonnulas tp, 'ljJ.
(FP3)
Deduction rules are modus ponens and necessitation: "from tp deduce
Ptp" (tp Boolean).
Lemma 8.4.5 (Soundness). The axioms (FPI)-(FP3) are I-true in each model
K E JCprob.
Proof
GivenK = (W,e,JL),writeJL(tp) = JL({w E WllltpllK,w = I})
for each Boolean fonnula tp. To verify II(FPI)!lK = I we show JL(tp -+
'ljJ) :::; (JL(tp) => JL('ljJ)). Put JL(tp f\ 'ljJ) = a,JL(tp f\ -.'ljJ) = b,JL(-'tp f\ 'ljJ) =
c, JL(-.tp f\ -.'ljJ) = d; then JL(<P -+ 'ljJ) = I - b whereas (JL(<p) => JL('ljJ)) = I
(if JL(<p) :::; JL('ljJ)) or (JL(<p) => JL('ljJ)) = I - (a + b) + (a + c) = I - b+ c.
In either case, JL(<p) => JL('ljJ) ~ t-t(<p -+ 'ljJ).
IIFP211K = I trivially follows from JL(-'<p) = 1- JL(<p). Let us verify
II F P311K = I keeping the above notation. We have JL(<P V'ljJ) = a+b+c and
(JL(<p) => JL(<p f\ 'ljJ)) => JL('ljJ) = [((a + b) => a) => (a + c)] = ((1 - b) =>
(a+c)) = a+b+c; thus !lP(cpV'ljJ)!lK = !I(P<p -+ P(cpf\'ljJ)) -+ P('ljJ)IIK.
The rest is evident.
0
Definition 8.4.6 In the present context a modal theory is a theory whose all
axioms are modal fonnulas.
Corollary 8.4.7 Let T be a modal theory over FP.IfT I- <I> then 11<I>!lK = I
for each FP-model K ofT.
Remark 8.4.8 We shall prove Pavelka-style completeness for FP over Pavelka
logic RPL. To this end recall the provability degree of <I> over T.
I<I>IT = sup{rlT I- if -+ <I>}
and the truth degree of <I> over T.
II <I>!IT = inf{II<I>IIKIK FP-model ofT}.
Here <I> is any modal fonnula; provability is understood as provability in the
sense of the modal logic FP(RPL) and models are understood also in the sense
of FP(RPL), i.e. crisp Kripke models with probability.
Theorem 8.4.9 (Completeness.) For each modal theory T over FP(RPL) and
each modal fonnula <I>,
I<I>IT = 11<I>!lT.

GENERALIZED QUANTIFIERS AND MODALITIES
231
Proof
The inequality I<I>IT :::; II<I>IIT follows directly from soundness 8.4.7.
To prove the converse we represent the modal part of T as a theory T* over
the propositional logic RPL.
For each Boolean formula cp, let Pcp be a propositional variable corre-
sponding to the formula Pcp. We write Pcp = (Pcp)* and define if* = if,
(<I> ~ w)* =
<1>* ~ w* and (<I>&W)* = <I>*&W*. Let T* be a theory (over
RPL) whose axioms are
atoms Pcp for cp being a Boolean tautology,
-
formulas of the form (FPl)*, ... , (FP3)*
(for (FPi) see 8.4.4)
-
formulas a* for a E T.
First observe that for each modal formula <1>,
T rpP(RPL) <I>
iff
T* rRPL <1>*.
Indeed, each RPL-proof of <1>* in T* has the form wi, ... , w~ where Wi are
modal formulas. The sequence WI, ... ,wn is converted into an FP(RPL)-
proof in T by adding, for each Wi of the form Pcp (cp Boolean tautology) a
proof of cp in Boolean propositional logic and then applying generalization to
obtain Pcp.
Conversely, a FP(RPL)-proof WI, ... ,wn of <I> in T is made to an RPL-
proof of <1>* in T* by deleting all Boolean formulas and taking for each modal
Wi the formula W;. (Note that, by the definition of a FP(RPL)-proof, each
Boolean formula provable in a model theory T is a Boolean tautology.)
Now by 3.3.5, I<I>IT =
1<1>*IT'
=
II<I>*IIT"
Thus it remains to prove
II<I>*IIT* = II<I>IIT, i.e. that for each model E of T* (evaluation of proposi-
tional variables) there is a model K of T such that E(<I>*) = II<I>IIK (and
consequently, each K determines an E but this is easy).
Thus let us have such an E. Let W be the set of all evaluations w of
Boolean propositional variables ofT (Le. w(p) = 0 or 1 for each Boolean p);
let e(p, w) = w(P) and for each Boolean cp put
/-l(cp) = /-l({wlw(cp) = I}) = E(pcp).
(In words: the probability of the set of all worlds satisfying cp is set to be the
truth degree of the atom Pcp in the model E of T*). This defines our K.
We have to prove that /-l is indeed a finitely additive probability in the
Boolean algebra of sets of the above form. Clearly, /-l(W) = /-l(I) = E(py) =
1. Since E(p..,cp) = 1 - E(pcp) (due to the axiom (FP2)*) we get /-l(0) =
/-l(O) =
O. Now take arbitrary Boolean cp,1./J and put a =
/-l(cp V 1./J), b =
/-l(cp) ,c = /-l(1./J) ,d = /-l(cp /\ 1./J). By (FP3)*, a = ((b =? d) =? c) and b 2: d
(since (cp /\ 1./J) ~ cp is a Boolean tautology, hence E(p(cpI\'I/J)---+cp} = 1 and by
(FP1)*, E(PcpA'lj;) :::; E(pcp)). Hence a = ((1 - b+ d) =? c). Furthermore,

232
CHAPTER EIGHT
'ljJ -+ (cp -+ (cp 1\ 'ljJ)) is a Boolean tautology, hence, by a similar argument,
c = E(Pt/J) ~ E(pip -+ Pip/\t/J) = 1-b+d. Summarizing, a = ((1-b+d) =>
c) = 1- (1-b+d) +c = b+c-d, i.e./1-(cpV'ljJ) = /1-(cp) +/1-('ljJ) -/1-(cpl\'ljJ),
which is finite additivity. This completes the proof.
0
Example 8.4.10 As an example of a proof in FP we show that FPI- P(cp) ==
(P(cp 1\ 'ljJ)-YP(cp 1\ -,'ljJ)). Indeed
FP I- P(cp) == P((cp 1\ 'ljJ) V (cp 1\ -,'ljJ)),
FP I- P((cp 1\ 'ljJ) V (cp 1\ -,'ljJ)) ==
== P(cp 1\ 'ljJ) -+ P((cp 1\ 'ljJ) 1\ (cp 1\ -,'ljJ))) -+ P(cp 1\ -,'ljJ)
(by (FP3»,
FP I- P ((cp 1\ 'ljJ) 1\ (cp 1\ -,'ljJ)) == 0
(since FP I- p(I), FPI- p(I) == I, FPI- -,p(I) == 0, FPI- P(O) == 0), thus
FP I- (P(cp 1\ 'ljJ) -+ P((cp 1\ 'ljJ) 1\ (cp 1\ -,'ljJ))) == -,P(cp 1\ 'ljJ),
FP I- P(cp 1\ 'ljJ) V (cp 1\ -,'ljJ)) == -,P(cp 1\ 'ljJ) -+ P(cp 1\ -,'ljJ),
FP I- P(cp) == P(cp 1\ 'ljJ)-YP(cp 1\ -,'ljJ).
Remark 8.4.11 (l) Analogously, we may develop a fuzzy logic of necessities
FN (with crisp models); the axioms are
N(cp -+ 'ljJ) -+ (Ncp -+ N'ljJ)
-,N(O)
N(cp 1\ 'ljJ) == (Ncp 1\ N'ljJ).
(FN1)
(FN2)
(FN3)
The reader may verify completeness as an exercise.
(2) Is FP(L) complete in the usual sense, i.e. is FP(L) + <I> equivalent to
tl<I>IIK = 1 for all models K? Is it strongly complete for finite theories? We
shall show that a careful analysis of our presentation yields a positive answer.
Recall 3.3.14 according to which we do have strong completeness (in the
usual sense) forfinite theories over RPL. The problem is that if we start with a
finite modal theory over FP(RPL) then the corresponding theory T* over RPL
is infinite since it contains infinitely many instances of (FP1)* - (FP3)*.
Our aim is to show that they can be replaced by finitely many axioms.

GENERALIZED QUANTIFIERS AND MODALITIES
233
Definition 8.4.12 In the sequel, T is a fixed finite modal theory over FP(RPL);
we fix n Boolean propositional variables ql, . .. ,qn containing at least all
variables in T. In each Boolean formula cp built from ql, ... , qn, N F(cp) is
the disjunctive normal form of cp (1.2.14); note that there are 2n different
normal forms. For each modal formula <P, its normal translation <PNF results
from <p* by replacing each atom P<p by PNF(<p) (cp varies over Boolean for-
mulas from the q's).
TNF is the set of all 'lJNF where 'lJ is an axiom of T. Note that TNF is
finite (since T is finite and there are only finitely many formulas of the form
(FPi)NF).
Lemma 8.4.13 (1) T* f- <p* iffTNF f- <PNF (both provabilities over RPL).
(2) II<PNF IITNF = 1 iff 1I<p*IIT* = 1
Proof
(1) Note that if cp, 7./J are equivalent in Boolean propositional logic
then T* f- P<P = P7jJ. If 'lJi, ... , 'lJ~ is a RPL-proof in T* (where all Boolean
variables in the 'lJ's are among ql,···
l qn) then 'lJi NF,··· l 'lJ~ NF is aproof
in TNF. Conversely observe that T* proves each axiom of TNF ; thus if
TNF f- <PNF then T* f- <PNF since T* f- <p* = <PNF.
(2) Let E be an evaluation of all p<p-variables which is a model of T*
such that E(<p*) < 1. Then E restricted to PNF(<p)-variables is a model of
TNF such that E(<PNF) < 1. Conversely, if Eo is a model of TNF such that
Eo (<pNF) < 1 then extend Eo to an evaluation of all p<p-variables putting
E(p<p) = EO(PNF(<p)) and observe that E is a model of T* with E(<p*) =
EO(<PNF) < 1. (In particular, E('lJ*) = 1 for'lJ being (FPl), (FP2), (FP3).)
o
Theorem 8.4.14 Under the present notation
T f- <P
iff
11<pIIT = 1
(i.e. <P is provable in T iff <P I-true in all Kripke models of T).
Proof
By the preceding lemma, by 3.3.14 and by the above, T
f- <P iff
T* f- <p* iffTNF f- <PNF iff II<pNFIITNF = 1 iff 1I<p*IIT* = 1 iff 1I<pIIT = 1.
o
*
Now let us tum to the modality Many in the present setting. This means:
we consider finite Kripke models and probability is replaced by relative fre-
quency.

234
CHAPTER EIGHT
Definition 8.4.15 The fuzzy modal logic of "many" FMany(RPL) with crisp
models has the same formulas as the corresponding probabilistic logic
FP(RPL) (the formula Pep being read "for many worlds, ep" or ''usually ep").
Models are finite models K = (W, e) of the modal logic S5. Satisfaction of
Pep is defined as follows
FrK(ep)
IIPepliK = card(W) '
i.e. the truth value of "usually ep" is the relative frequency of worlds satisfying
ep among all worlds in W.
Axioms are those of FP(RPL); in particular, we have the axioms (FPi), i =
1,2,3.
Theorem 8.4.16 (Completeness). Let T
be a finite model theory over
FMany(RPL), <P a modal formula. Then
TI-<p
iff II <PliT = 1
(11<pIIT = 1 meaning that <P is I-true in all finite Kripke models ofT).
Proof"
Soundness is trivial (since it follows from the soundness of the logic
FP(RPL». On the other hand, if T If <P then by 8.4.14 and by the proof of
8.4.9, there is a RPL-model E of T* such that E(<P*) < 1. Furthermore
apply 3.3.17 to get such an E taking only rational values. Now inspect the
part of the proof of 8.4.9 where E is used to produce a Kripke model K =
(W, e, J.L). Let ql, ... , qn be all Boolean variables in T, <P and let rl, ... ,r2n
be the J.L-measures of the 2n elementary conjunctions of ql, ... , qn. Clearly
L:r:1 ri = 1 and J.L is fully determined by the ri's. Let k be the common de-
nominator of these rationals; i.e. ri = ailk. Now produce a Kripke model of
S5 K ' = (WI, e
l
) such that in K ' exactly ai objects satisfy the i-th elemen-
tary conjunction. Observe that for each Boolean ep, FrK' (ep) = J.LK (ep), thus
K' is a model ofT and 1I<pIIK' = 1I<pIIK < 1 (K' is a model ofFMany, K a
model of FP). This completes the proof.
0
*
Let us now turn to binary modalities corresponding to conditional prob-
ability and relative frequence. We continuous to work with crisp (Boolean)
interpretation of propositional variables. The underlying fuzzy logic is RPL0
- RPL extended by the product conjunction (see 3.3.18 - 3.3.19). In this logic
we may express basic properties of the above notions e.g.
111' 0 P(ep) --t P(ep 1\ 'ljJ)IIK = 1

GENERALIZED QUANTIFIERS AND MODALITIES
235
iff the conditional probability J.L('ljJlcp) is at least r. Similarly, the formula
P (cp 1\ 'ljJ) == P(cp) 0 P ('ljJ) expresses independence of cp, 'ljJ; and one can
easily write formulas expressing conditional independence.
But we may directly introduce P(cpl'ljJ)) as a binary modality.
Definition 8.4.17 The modal logic FP(RPL0) has the same class J(prob of
models as FP(RPL); the language is extended by the connective E9 and the
binary modality P(-1-). The definition of formulas is extended by the two
clauses
-
if cp, 'ljJ are Boolean formulas then P(cpl'ljJ) is a modal formula,
-
if <P, lIt are modal formulas then <P 0 lIt is a modal formula.
The axioms are the following (cf. 8.4.4): axioms of Boolean logic for
Boolean formulas, axioms of RPL0, axiom (FPl) - (FP3) for P and the ax-
iom
P(cpl'ljJ) 0 P('ljJ) = P(cp 1\ 'ljJ).
(FP4)
Deduction rules: modus ponens and necessitation (from cp infer Pcp).
The definition of truth values of formulas is extended by the following
clauses:
-
Ilcp 0 'ljJIIK,w = IIcplIK,w . 11'ljJIIK,w
-
IIP(cpl'ljJ)IIK =
"[jf;)t~K if IIP('ljJ) 11K :I 0, otherwise IIP(cpl'ljJ) 11K is
arbitrary (0, say).
Theorem 8.4.18 (Soundness and completeness.) (FP4) is I-true in each model
K E J(prob. For each modal theory T over FP(RPL0) and each modal for-
mula <P,
11<pIIT = 1<pIT.
Proof
Check the proof of 8.4.9, define P(cpl'ljJ)* to be a propositional vari-
able Pcp,'I/J' Replace RPL by RPL0 and FP(RPL) by FP(RPL0). Refer to the
completeness theorem 3.3.19.
0
Remark 8.4.19 (1) Recall 8.4.14 - the strong completeness theorem for
FP(RPL) (for a finite modal theory T, T I- <P iff q> is true in all models
ofT). That theorem depends heavily on Theorem 3.3.14 (strong completenes
for finite theories over RPL) which, in tum, depends on our reduction ofRPL
to L. To get a strong completeness for FP(RPL0) one would have to exhibit
a reduction of RPL0 to an extension of L by 0. To elaborate this remains an
open problem.
(2) Now let us tum to finite models and relative frequencies: we shall
investigate the binary modality Many.

236
CHAPTER EIGHT
Definition 8.4.20 The modal logic FMany(RPL0) has the same class ofmod-
els as FMany(RPL) (i.e. finite models of 55). The language of FMany(RPL)
(i.e. that of FP(RPL)) is expanded by the connective 0 and binary modality
::J. The formula 'I.{; ::J <P is read "many objects satisfying 'I.{; satisfy <P" (or just
"many 'I.{;'s are <p's"). The semantics is
11'1.{; ::J <pIIK = FrK(<pI'l.{;) = FrK(<p&'I.{;)/FrK('I.{;)
if FrK('I.{;) > 0 (frequence in K), otherwise 11'1.{; ::J <pIIK = O. Axioms and
rules are as in FP(RPL0), with P(<pl'l.{;) replaced by 'I.{; ::J <p.
Remark 8.4.21 Clearly, the deductive system of FMany(RPL0) is sound.
An attempt to prove Pavelka-style completeness (in an analogy to 8.4.16)
- by showing that if T is a finite theory over FMany(RPL0) and <I> a for-
mula unprovable in T then there is a FMany(RPL0)-model K of T such that
II<I>IIK < 1 - fails because we do not have an analogy of 3.3.17 for RPL0.
Thus the problem of completeness of FMany(RPL0) seems to be open. On
the other hand, we have the following (more or less evident) theorem.
Theorem 8.4.22 The set of I-tautologies of FMany(RPL0) is a Ih-set (and
so is the set of I-tautologies of FMany(RPL)).
Proof
Just observe that finite (Boolean) models of 55 are finite objects eas-
ily coded by natural numbers in such a way that the function assigning to each
model K the value II <I>11K (in the sense of FMany(RPL0)) is recursive. <I> is
a I-tautology iff for all K, II<I>IIK = 1.
0
Remark 8.4.23 From modalities to quantifiers. In our survey sections on
generalized quantifiers and modalities in Boolean logic speaking on proba-
bilistic threshold quantifiers, given by statistics (see 8.1.6 - 8.1.22); in 8.2.29
we only mentioned corresponding modalities. But in the present section, we
have dealt with (many-valued) modalities related to probability and frequen-
cies. We have elaborated calculi with crisp interpretation of propositional
variables as an important intermediate class ofcalculi (between fully Boolean
and fully fuzzy ones). Thus we had two kinds of formulas: Boolean and modal
(the latter being fuzzy - many-valued). Clearly, one may develop, in parallel,
predicate calculi with crisp interpretation of predicates and generalized quan-
tifiers
(Px)<p (where II(Px)<pIlM,v = J.L({m E MIII<pIlM,v(x/m) = I}
and the corresponding calculi with finite models. In fact we did use such cal-
culi with unary predicates and just one object variable - they are equivalent to
respective modal calculi. Note that such and similar calculi seem to be useful
in databases with crisp data but fuzzy queries and in data mining. To illustrate
this we present the notion of many-valued multitudinal quantifiers.

GENERALIZED QUANTIFIERS AND MODALITIES
237
Definition 8.4.24 A predicate calculus C'r:/ :J-fincrisp with finite crisp mod-
els and a fuzzy multitudinal quantifier :J is given by the following:
a propositional fuzzy logic C,
-
a predicate language I,
-
a multitudinal statistic f (cf. 8.1.16) with range included in [O,lJ.
(Thus f assigns to each four-fold table (a, b, c, d) a real f (a, b, c, d) E
[O,lJ such that a' ~ a and b' ~ b imply f(a', b', c', d') ~ f(a, b, c, d).)
Boolean formulas are built from atomic formulas using connectives
(/\, V, -., say) and 'r:/, 3. If cp, 'l/J are Bolean formulas and x is a variable then
cp :Jx 'l/J using connectives and 'r:/, 3.
Semantics is clear for Boolean formulas, Ilcp :Jx 'l/JIIM,v = f(a, b) where
a = FrM,v(cp /\ 'l/J,x) (number of object in M satisfying cp(x) /\ 'l/J(x), all
other variables being fixed by v) analogously for b and cp /\ -.'l/J. Needless to
say, f is the statistic introduced above. Semantics of other (general) formulas
is as in C'r:/.
Example 8.4.25 (1) Relative frequence: f(a, b) = a/(a + b) (and = °if
a = b = 0). This corresponds to the modality "many" above.
(2) The statistic LIMPLa used in GUHA (a small positive e.g. a
0.05)
LIMPLa(a, b) = max{pl
~f;~(a; b)pi(l - py-i ~ a}.
This relates to statistical hypothesis testing: LIMPL(a, b) is the maximal p
such that on the base of the data we reject, on significance level a, the null
hypothesis P('l/Jlcp) ~ p. See [85] for details and for a proof that LIMPLa
is implicational. Note that LIMPLa(a, b) is always' strictly less than 1 (but
can be arbitrarily near to 1). The formula cp
:J~ 'l/J may be read "it is likely
that the conditional provability P('l/Jlcp) is high" (on significance level a).
Theorem 8.4.26 If:J is a multitudinal fuzzy quantifier then the formula
is a I-tautology.
Proof
See the proof of 8.1.20; it even proves the present theorem.
0

238
CHAPTER EIGHT
8.5.
MORE ON "PROBABLY" AND "MANY"
We now switch to the general case of the quantifier "probably" in a calcu-
lus with fuzzy models (i.e. predicates are interpreted by fuzzy relations as
usual). We shall elaborate rational Pavelka predicate logic with integrals as
a generalization of our investigations earlier in this section. Note that the re-
sults (a completeness theorem) mainly show a direction of necessary research
and cannot be considered to be final results. Nevertheless, the results below
contribute (we hope) to our understanding of how one can speak on probabil-
ity in fuzzy logic and, more than that, how one can deduce fuzzy statements
containing the quantifier "probably" in an extension of RPL, complete in a
(weak) sense.
Definition 8.5.1 We extend the Lukasiewicz-Pavelka rational predicate logic
RPLV by a new quantifier J (integral, read "probably,,)52 and extend the defi-
nition of a formula by the clause saying that if cp is a formula and x a variable
then Jcpdx is a formula; x is closed in Jcpdx. The intended semantics is as
follows: We consider a structure
M = (M, (rp )ppredicate' (mc)cconstant,jt)
where M is a non-empty countable or finite domain, rp, m c interpret predi-
cates and constants as usual (over the real unit interval [0, 1]) and jt is a prob-
ability measure on M, Le. a function assigning to each singleton m E M
a real jt(m) E [O,IJ such that L:mEM jt(m) = 1. This extends to an arbi-
trary subset A ~ M: jt(A)=L:mEA jt(m). More generally, if A ~ Mn then
jt(A) = L:{jt(mt} . jt(m2) ... jt(mn)l(ml,' .. ' m n ) E A} (product mea-
sure). M is called a probabilistic model for the given language.
For each function f
: M
-+ [O,IJ, the integral J fdjt is defined as
L:mEM f(m)· jt(m), written also J f(x)dx. It can be also called the expected
value of f or the probability of the fuzzy set f. Observe that if f is two-
valued, range(J) ~ {O, I} then J fdx = jt(J-l(I)) = jt({mlf(m)} = 1)
(probability of the set whose characteristic function is f).
Given M we extend the definition of the value IIcplIM,v of cp E M and the
evaluation v as follows:
II JcpdxllM,v = JSatM,v(cp, x)dx
where SatM,v (cp, x) is the function assigning to each m E M the truth-value
IlcpIIM,v(m/x) (v(mjx) means, of course, the evaluation v' coinciding with v
for all arguments except x, and such that v'(x) = m). Thus: all arguments
except x are fixed, x runs over m.
52 See [218] for Zadeh's definition of the probability of a fuzzy event.

GENERALIZED QUANTIFIERS AND MODALITIES
239
Lemma 8.5.2 The following fonnulas are I-true in each probabilistic model:
(J.£I)
J vdx = v for v not containing x freely,
(J.£2)
J(-'<p)dx = -. J <pdx,
(J.£3)
J(<p -+ 'l/J)dx -+ (J <pdx -+ J'l/Jdx),
(J.£4)
J(<pY'l/J)dx =((J <pdx -+ J(<p&'l/J)dx) -+ J'l/Jdx),
(J.£5)
(Vx)<p -+ J <pdx,
(J.£6)
J(J <pdx)dy=J(J <pdy)dx
(Fubini).
Proof
Write fep instead of SaiM,v(<p, x) if there is no danger of misun-
derstanding. If v does not contain x freely then fv is constant (and equal to
IlvIIM,v), which proves (J.£I) to be a I-tautology. Similarly, f-,ep =
1 -
fep,
thus II J -'<pdxIIM,v = J(1 - fep)dx = J Idx - J fepdx = 1 - J fepdx =
11-. J <pdxIIM,v. This is (J.£2).
Let us now verify (J.£4). First, (<pY'l/J) = (<p -+ (<p&'l/J)) -+ 'l/J is a 1-
tautology (as one easily verifies). Thus, for each argument m, fcepy-'ljJ)
=
(Jep =} fep&'IjJ)
=} f'IjJ = [(1 -
fep + fep&'IjJ) :::} f'IjJ] since fep
~ fep&'IjJ; fur-
thennore 1 -
fep + fep&'IjJ
~ 1 -
fep + fep + f'IjJ - 1 =
f'IjJ, hence [...] =
1 -
(1 -
fep + fep&'IjJ) + f'IjJ =
fep + f'IjJ -
fep&'IjJ· This gives J f<pY-'ljJdx =
J f<pdx + J f'IjJdx - J fep&'ljJdx = (J f<pdx :::} J fep&'ljJdx) :::} J f'IjJdx, hence
II J(<pY'l/J)dxIIM,v = II(J <pdx -+ J(<p&'l/J)dx) -+ J 'l/JdxIlM,v. This proves
(J.£4).
Now return to (J.£3), observing that if II(Vx)(a =,8)IIM,v = 1 then obvi-
ously II J adxllM,v = II J ,6dxIIM,v. Thus II J(<p -+ 'l/J)dxll = II J(-'<pY'l/J)dxll
= II(J -'<pdx -+ J(-.<p&'l/J)dx) -+ J'l/Jdxll = II (J(<py-.'l/J)dx -+ J <pdx) -+
J'l/Jdxll :'S II J <pdx -+ J 'l/Jdxll· (We have deleted the indices M, r.) The last
inequality follows from II J <pdxll :'S Ilx -+ J <pdxll for X being J <py-.'l/J)dx.
(J.£5):Put
~
=
II(Vx)<p(x)ll; then for each m,
~
:'S fep(m), thus
~
=
J ~dx :'S J f<pdx, hence II(Vx)<p(x)11 :'S II J <pdxll·
Finally we prove (J.£6). This follows immediately from the fact that if f :
M 2 -+ [0,1] then J(J f(x, y)dx)dy = L:aEM(L:bEM f(a, b)J.£(b))J.£(a) =
= L:a,bEM f(a, b)J.£(a)J.£(b) = L:bEM(L:aEM f(a, b)J.£(a))J.£(b) =
= J J f(x, y)dydx. This completes the proof.
D
Remark 8.5.3 Try to read the fonnulas, reading J <pdx as "probably <p" For
example (J.£3) reads "If (<p -+ 'l/J) is probable then if <p is probable then'l/J is
probable". Note that (J.£4) is a generalization of finite additivity, see below.

240
CHAPTER EIGHT
Definition 8.5.4 The logic RPLV'J(rational Pavelka predicate logic with in-
tegrals) has the language as above, the axioms of RPLV' (with the present no-
tion of a formula) and the axioms (JLl) - (J.L6); the deduction rules are modus
ponens and generalization (as in RPLV', no new deduction rule).
Lemma 8.5.5 The following are derived deduction rules:
ep
J epdx
Jepdx -t J 'l/Jdx
Proof"
(1) If f-- ep then f-- (V'x)ep and hence f-- J epdx by (J.L5). (2) If f-- ep -t 'l/J
then f-- (V'x)(ep -t 'l/J), thus f-- J(ep -t 'l/J)dx and hence f-- J epdx -+ J'l/Jdx by
(J.L3).
0
Lemma 8.5.6 (Deduction theorem). Let T be a theory, ep and 'l/J formulas, ep
closed. T U {cp} f-- 'l/J iff fore some n, T f-- epn -+ 'l/J.
Proof"
Just check the usual proof.
o
Definition 8.5.7 Let M be a non-empty set and let F be an algebra of [0, 1]-
fuzzy subsets of M containing each rational constant function with the value
r E [0,1] and closed under => (if f,g E F and h(a) = f(a) => g(a) for all
a E M then hE F). Note that then F is closed under" &, 1\, V, y.
A weak integral on F is a mapping I associating to each f E F its "inte-
gral" Ifdx E [0,1] and satisfying the following (f, 9 E F, kr is the constant
function with the value r, h : M x M -+ [0, 1] is such that for each a, b E M,
the functions fb(X) = hex, b) and ga(Y) = h(a, y) are both in F:
1(1 - J)dx = 1 - Ifdx,
l(f => g)dx ~ (Ifdx => Igdx),
l(f EB g)dx = Ifdx + Igdx - l(f&g)dx,
1(lhdx)dy = 1(lhdy)dx if both sides defined.
Definition 8.5.8 A weak probabilistic model is a structure

GENERALIZED QUANTIFIERS AND MODALITIES
241
where M is countable or finite, (M, (rp )p, (me)e) interprets the given lan-
guage over [0, 1] and I is a weak integral on an algebra F of fuzzy subsets of
M. Define truth values of formulas extending the usual definition by
II JcpdxllM,v = ISatM,v(cp, x)dx)
if SatM,v (cp, x) is in F (otherwise undefined). M is safe ifall the truth values
are defined.
Remark 8.5.9 Observe that a safe weak probabilistic model defines a (finitely
additive) probability on definable subsets of M: if f<p is two-valued and
A <;;;; M is the set whose characteristic function is f<p then put P(A) = If<pdx.
It follows easily, using the axiom (/1A), that P(A U B) = P(A) + P(B) -
P(A n B) (and P(M) = 1, P(0) = 0), so that P is indeed a finitely additive
probability. (But we do not claim more.)
8.5.10 Now check the proof ofTheorem 5.2.7 saying that each consistent the-
ory T such that T If a (a a closed formula) has a consistent Henkin complete
extension T not proving a: everything goes through. Our task is to construct
a model of T from the theory T. We shall not construct a probabilistic model
but only a weak probabilistic model.
Definition 8.5.11 Let T be a consistent complete Henkin theory. The weak
probabilistic model M corresponding to T is defined as follows: M is the set
of all constants, me = c, rp(cl ... cn) = IP(CI ... cn)lt; for each formula
cp(x) with just one free variable, f<p(c) = Icp(c)lt and If<pdx = IJcpdxlt.
Lemma 8.5.12 The preceding definition is sound, i.e. I is a mapping.
Proof
If f<p =
ft/J' i.e. Icp(c)lt = 11jJ(c)lt for each c then 1(V'x)(cp(x) ==
1jJ(x))lt = 1, (see below) hence IJcpdx == J1jJdxlt = 1 and IJcpdxlt =
IJ1jJdxlt· We elaborate the step stating that if Icp(c)lt =
11jJ(c)lt for all
c, then 1(V'x)(cp(x) == 1jJ(x))lt = 1. Let r be rational and e rational small
positive such that r < Icp(c)lt = 11jJ(c)lt < (r + c). (If Icp(c)lt = 0 take
r = 0; if Icp(c)It = 1 take r + e = 1.) Then, since T is complete,
T I- cp(c) -+ (r + c),
T I- l' -+ 1jJ(c),
thus T I- cp(c) -+ (ry£"), T I- (((1 - e)&cp(c)) -+ 1', T I- (1 - c) -+
(cp(c) -+ 1'), hence T I- (1 - e) -+ (cp(c) -+ 1jJ(c)) for each e > 0 and each
c. Since T is Henkin this gives T I- (1 - c) -+ (V'x)(cp(x) -+ 1jJ(x)) for each
e > 0; similarly T I- (1 - e) -+ (V'x)(1jJ(x) -+ cp(x)) for each e > 0 and
hence I(V'x)(cp(x) == 1jJ(x)lt = 1. Thus If<pdx is uniquely determined.
0

242
CHAPTER EIGHT
Lemma 8.5.13 Under the above notation, IIcpllM = Icplt for each closed for-
mula cp.
Prool
We extend the proof of the corresponding theorem 5.4.10 for RPVf;
we investigate the induction step for f cp(x)dx. By definition, II f cpdxllM =
f fcpdx = If cpdxlt so that the step is obvious.
0
Corollary 8.5.14 (Completeness.) Let T be a theory over RPLVf and cp a
formula. Then IcplT = IlcplIT; in particular, IcplT = 1 (over RPLVf) iff cp
is I-true in all safe weak probabilistic models of T. (of course, IcplT is the
provability degree of cp in T, i.e. {riT I- (1' --+ cp) over RPLV f}).
Remark 8.5.15 The question if we can improve this completeness by replac-
ing countable weak probabilistic models by countable probabilistic models
needs further investigation. Ref. [101] could be relevant. Apparently, to en-
force countable additivity we would have to extend our language by count-
ably infinite conjunctions/disjunctions or by infinitary deduction rules (with
infinitely many assumptions). We shall not go into this. Instead, we shall
make several comments that should make the quantifier f better understood
(and might be useful in deciding the completeness problem). We assume that
our language contains an equality predicate = interpreted absolutely (i.e.
r=(a, b) = 1 iff a = b, r=(a, b) = 0 otherwise). Then we may speak on
the measure of a singleton: II f(y = x)dyIIM,v = j1-(a) where v(x) = a.
(1) The following rule is sound over probabilistic (at most countable) mod-
els:
(Vx) (f((y = x)&cp(y))dy --+ 0)
f cp(y)dy --+ 0
Indeed, the assumption is I-true in M iff, for each bE M,j1-(b) 'lIcp(y) IIM[b] =
O. (The truth value of cp in M for any evaluation assigning bto y.) Then clearly
(f cpdy --+ 0) is I-true.
(2) But the implication
(Vx)(f«y = x)&cp(y))dy --+ 0) --+ (f cp(y)dy --+ 0)
or, equivalently,
(8.1)
f cp(y)dy --+ (3x)(f(y = x)&cp(y))dy)
is not necessarily true in each probabilistic (countable) model; imagine IIcpliM
crisp and IlcpllM[aiJ = 1 for at least two elements al ;j; a2 of positive mea-
sure: j1-(al) ;j; 0 ;j; j1-(a2)' Then the formula (8.1) is not I-true.

GENERALIZED QUANTIFIERS AND MODALITIES
243
(3) Observe the fonnula
(8.2)
(Vx)(J(y = x)dy -+ 0)
This fonnula is I-true in a weak probabilistic M ifffor each a EM, f.l-(a) = °
(the finitely additive measure given by the model). Thus p, is then not a-
additive and M is not a probabilistic model.
(4) The negation of the formula (8.2), i.e. the fonnula (3x) (J (y = x)dy)
is I-true in a weak probabilistic model M iff there is an a E M such that
p,(a) = 1. Take care to distinguish this from the fact that 11(8.1)IIM < 1
which means that for some a E M, p,(a) > 0.
(5) If M is a countably infinite probabilistic model then 113x)(J (y =
x)dy -+ 0Il
= 1 since infaEM f.l-(a) = 0, thus sUPaEM(1 - f.l-(a)) =
1.
(Note that all p,(a) may be positive!)
(6) We could express more by introducing the triangle connective t::. (cf.
2.4.5) - but then the proof of completeness does not work any more. For
example, 11(3x)t::.(J(y = x)dy -+ O)IIM = 1 iff there isana withf.l-(a) = 0.
(7) Let us give an example of a weak probabilistic model which is not a
probabilistic model. An ultrafilter on N is a system U of subsets of N such
that U i- 0, 0 ¢ U, (A
~ B and A E U implies B
~ U) and (A E U
iff (N - A) ¢ U) for all A, B
~ N. An ultrafilter U is non-principal if all
elements of U are infinite. (Existence follows from the set-theoretical axiom
of choice.) Put f.l-(A) = 1 if A E U, otherwise p,(A) = 0. Observe that p, is a
finitely additive (but not a additive) probability on N (defined for all subsets
of N). Let M
=
(N, (rp )p, (me)e, f.l-) be such that f.l- is our present two-
valued probability and assume that each r p takes only finitely many values
(the range of rp is a finite subset of [0,1]). Then for each formula 'P, the
range of 11'PIIM,v (with varying v) is also finite. Define, for a finitely valued
function f : M -+ [0,1], Ifdx = a iff the set {n E Nlf(n) = a} is inU.
You may check that this is a weak probabilistic model.
(8) The reader with a more advanced knowledge of the metamathematics
ofarithmetic can easily show a theory T in the language extended by .6. whose
models are isomorphic to the standard model N of QA with the probability
p, such that p,(n) = 2n\r for each n (write an axiom saying that there are no
elements of measure 0). T can be taken as finitely axiomatized. This shows
that the set of all fonnulas of the extended language I-true in all models ofT
is not axiomatizable (even not arithmetical).
(9) On the other hand, the problem remains of whether the set ofall formu-
las of the original language of RPLV J in all (countable) probabilistic models
satisfies Pavelka style completeness (I'PIT = II'PIIT) with respect to all prob-
abilistic models (with a possibly enriched set of logical axioms). No direct
answer seems to be contained in the literature.

244
CHAPTER EIGHT
*
Remark 8.5.16 We may investigate the corresponding probabilistic modal
logic with the modality J and axioms like
J(J<p)==J<P
(more generally J'IjJ == 'IjJ for'IjJ being a propositional combination offormulas
beginning by J and truth constants),
J(<p -+ 'IjJ) -+ (J <p -+ J 'IjJ),
J '<p == • J <p,
J(<py.'IjJ) == [(J <p -+ J(<p&'IjJ)) -+ J 'IjJ]
Remark 8.5.17 Since I-tautologies of RPLVJ not containing the quantifier
J are exactly all I-tautologies of Lukasiewicz predicate logic LV it immedi-
ately follows from results of Chapter 6 (6.3.4) that I-tautologies of RPLVJ
are not recursively axiomatizable; moreover the set of these formulas is Ih-
hard. Problem. Is the set in II2, i.e. is it II2-complete?
*
Let us tum to the calculus with the quantifier "probably" andfinite fuzzy mod-
els. Then we get rid of problems with (7-additivity and have relative frequency
as a prominent particular case (the quantifier "many").
Definition 8.5.18 The calculus RPLV J-fin has the same language, formulas,
axioms and deduction rules as RPLJ V. Models are structures
(M, (rp )p, me)e, J-L)
where M is a non-empty finite set, r p and me are as usual, and J-L is a probabil-
ity on M, i.e. a function mapping of Minto [0,1] such that 2:mEM J-L(m) =
1.
Note that II J <pdxIIM,r = 2:mEM J-L(m)·SatM,v(<p, x)(m) (weighted sum
oftruth values of <p for x running over elements mE M).
Remark 8.5.19 (1) Evidently the deductive system is sound, i.e. each prov-
able formula is a I-tautology. It was a problem whether RPLV J-fin is re-
cursively axiomatizable (it is not); but we shall at least show, generalizing
Corollary 6.3.6, that the set of all tautologies of RPLV J-fin is in III.
(2) Observe that in a finite model as above, J-Lbehaves as the interpretation
of a unary fuzzy predicate. Then we modify the definition of the distance of
two models M, M' with the same domain 5.4.28 as follows:

GENERALIZED QUANTIFIERS AND MODALITIES
245
Definition 8.5.20 Let M, M' be two models of RPLVI -fin with the same
finite domain M = {m1' ... ,mn }. Let the language in question have predi-
cates P, ... , Q and let J-L, J-L' be the probabilities of M, M'. We set
d(rp, rp') = sup{lrp(a) - rp,(a)1
I
a E Mar(P)}, ...
d(J-L,J-L') = mp{IJ-L(a) - J-L(a)I I
a EM},
d(M,M') = d(rp,rp,) + ... + d(rQ,rQ') + d(J-L,J-L').
Lemma 8.5.21 There is a function U(<P, c, n) associating with each formula
<P of RPLVI -fin, each c > 0 and each natural n > 0 a positive real number
U(<p, c, n) such that if M, M' are two models with the same domain M of
cardinality nand d(M, M') < U(<p, c, n) then 11I<pIIM,v -1I<pIIM',vl < c.
Proof"
Adapt the proof of 5.4.29: if <P does not contain I then U(<p, c, n) =
c/2T (cp). The induction steps are as in 5.4.29, we only have to discuss J. Let <p
beI'l/'dxandletC(c) > Obesuchthatiflx-x'I+ly-y'l < C(c) then Ixy-
x'y'l < c (such C(c) exists since product is uniformly continuous on [0,1]2).
Let u(<p,c,n)
=
U('l/',C(c/n),n); we may assume U('l/',C(c/n),n) <
C(c/n). If d(M, M')
<
U(<p, c, n)
and we put SatM,v('l/', x)
= f1jJ,satM',v('l/', x) =
f~ then, for each m
E M, If1jJ(m) -
f~(n)1 <
C(c/n), IJ-L(m) - J-L'(m)I < C(c/n), thus If1jJ(m)· J-L(m) - f~(m). J-L'(m) I <
c/n and I
il I 'l/'dxIIM,v-11 I'l/'dxIlM',vl = l2:m f1jJ(m)'J-L(m)-2:m f~(m).
J-L'(m) I :S 2:m If1jJ(m) . J-L(m) -
f~(m) . J-L'(m)I :S n· (c/n) = c.
0
Theorem 8.5.22 The set of all I-tautologies ofRPLV I-fin (Le. all formulas
I-true in all finite probabilistic models) is II1.
Proof"
Using the preceding lemma we may easily show that if <p, M, v are
such that 11<pIIM,v < 1 (M of cardinality n) then there is a M' rational-valued
with the same domain such that lI'l/'IIM',v < 1. (Cf. the proof of 5.4.29.)
0
Definition 8.5.23 The calculus RPLVMany has the same language as
RPLVI -fin but models are just finite models of the underlying predicate
language M
=
(M, (rp )p, (mc)c). Each such model determines the cor-
responding probability with equiprobability elements J-L(m) =
~ where the
cardinality of Mis n, thus for A ~ M, J-L(A) = card(A)/n (relative fre-
quence). Thus
II I <pdx IIM,v = 2:mE M 11<pIIM,v.
I <pdx is read "many objects satisfy <p".

246
CHAPTER EIGHT
Theorem 8.5.24 RPLVMany has the same I-tautologies as RPLV J-fin.
Proof
We have to show that if IlcpllM,v < 1 for some finite probabilistic
M then there is a model M' of RPLVMany (with equiprobable elements)
and a v' such that IlcpllM' ,v' < 1. By the last theorem we may assume M to
be rational valued; let k be the least common denominator of all the finitely
many values (of interpretations of predicates occuring in cp). To produce M'
replace each element mj E M with J.L(m) = ~ by i elements m{, . .. ,mi-
This produces a set Mil of cardinality k and a mapping f of M' to M with
f (mi) = ... = f (m;) = mj. Now define, for each tuple (m', . .. ,mil) of
elements of M', r~(m', ... ,mil) = rp(f(m'), ... ,f(m")), i.e. induce the
model M' by M and f. Verify by induction that for each cp and each M'-
evaluation v, lI'l/JIIM',v' = 11'l/JIIM,v where v(y) = f(v'(y)) for each variable
y. This completes the proof.
0
*
Now we only add some remarks.
Remark 8.5.25 (1) We could now tum to the binary fuzzy quantifier:::J (many
cp's are 'l/J's). There are several competing definitions in the literature, no-
tably [210], [199]; unfortunately these papers contain few results on (non)-
axiomatizability or arithmetical complexity. To investigate various candidates
(and
classes of candidates) for the binary fuzzy modality "many" - Le. fuzzy mul-
titudinal quantifiers - from a strictly logical point of view, remains a very
promising problem.
(2) There are other classes of fuzzy quantifiers (and modalities) deserving
logical analysis, as cardinality quantifiers (for finite models, see [39]), tem-
poral quantifiers (cf. [200]) and others. Let us mention also the following:
our interpretation of V and :3 is based on inf and sup, i.e. infinite 1\ and V.
It is also possible to investigate, at least in LV, quantifiers based on infinite
analysis of & and y... (in IIV' we do not have a dual for 0). See [199] for some
hints.
(3) In parallel to fuzzy probabilistic logic one may develop fuzzy possi-
bilistic and fuzzy belief function logic. For comparative fuzzy possibilistic
logic see [84, 83]; to construct a fuzzy possibilistic (belief function) logic
analogous to our RPLVJ seems to be an open problem.

GENERALIZED QUANTIFIERS AND MODALITIES
247
Example 8.5.26 We shall comment on fuzzy quantifiers in the GUHA method
of hypothesis formation. This method, the main principle of which was for-
mulated in 1965, is a method of explorary data analysis or, to use a fashion-
able term, data mining. The principle consists in generating automatically all
hypotheses that are interesting on the basis of given data or, more concretely,
all statements of a certain formal language expressing interesting associa-
tions, dependences etc. and true on the data. We shall be very sketchy; for
details see [85], [92] and references therein.
The data form a rectangular matrix whose rows correspond to objects and
columns to variates. The element in the i-th row and j-th column is the value
of the j-th variate for the i-th object. Assume the domain of the j-th variate
is Dj and let M be the set of objects; then the data may be represented as a
structure
(M,Dl , ... ,Dn,fl,··· ,In)
where Ij : M -+ Dj associates with each object x the value of the j-th
variate for x. (See 7.1.14.) We introduce the names Xj of variates as function
symbols.
With each Dj we associate a finite number of subsets ajl, . .. ,ajkj (crisp
or fuzzy) and introduce unary predicates Ajl ,... , Ajkj to name them. (Think
e.g. of Xj to name temperature and Ajl , Aj2 , Aj3 to name the sets of temper-
atures :S 36.5, between 36.5 and 37.5 and above 37.5 (crisp) - or the fuzzy
sets of low, medium and high temperatures. The latter resembles Zadeh's lin-
guistic variables.) We have just one object variable x. Atomic formulas have
the form Ajk(Xj(x)) (read: for x, the value of X j is Ajk) and are called
literals. Conjunctions of finitely many literals having pairwise different vari-
ates are called elementary conjunctions. Hypotheses (or relevant sentences)
are some formulas of the form (qx)(cp(x),-ljJ(x)) where cp, 'If; are elementary
conjunctions and q is a quantifier (modality).
The input of a GUHA procedure consists of (1) the data matrix
with domains indicated (Dj may be reals, integers, a finite set of integers,
{a, I} etc.), (2) for each variate Xj, the meanings ajl, . .. of the predicates
for X jko (3) furthermore parameters determining the semantics of the quan-
tifier "', syntactic restrictions for cp, 'If; (variates that may occur, maximum
number of conjuncts, etc). The output is the list of all sentences q(cp, 'If;) satis-
fying the syntactic restrictions, true (or sufficiently true) in the data and strong
- not immediately following from preceding ones via some simple deduction
rules. Typically, q is a multitudinal quantifier or an associational quantifier
«(qx)(cp, 'If;) says "many x having cp have 'If;" and "cp, 'If; are associated" re-
spectively).

248
CHAPTER EIGHT
The case of crisp meaning of predicates and fuzzy quantifiers was repeat-
edly implemented and used; for examples of quantifiers see 8.4.24, 8.1.16.
(Note that in the original literature one speaks of a crisp quantifier given by
a statistic; II (qx) (ep, 'ljJ) II = 1 iff the value of the corresponding statistic is
larger than or equal to a threshold. Alternatively, one may speak of a fuzzy
quantifier and identify II (qx)(ep, 'lfl) II with the value of the statistic, cf. 8.1.6.)
The case offuzzy predicates in GURA (i.e. work with linguistic variables)
remains to be elaborated (and implemented).

CHAPTER NINE
MISCELLANEA
This chapter is devoted to three mutually unrelated topics showing three di-
rections of further development of fuzzy logic. (Needless to say, several other
directions are possible.) In Section 1 we present a rather strong fuzzy logic,
based on the work of Takeuti and Titani, and containing Lukasiewicz, Godel
and product predicate logics LV, GV, IIV as its sublogics. We show complete-
ness with respect to a non-finitary notion of provability. In Section 2 we show
how to develop fuzzy logic that is not necessarily truth-functional. This sec-
tion is based on work by Pavelka. Section 3 is based on recent work by Hajek,
Paris and Shepherdson and discusses the Liar paradox in the frame of fuzzy
logic. The final Section 4 contains some conclusions.
9.1.
TAKEUTI-TITANI FUZZY LOGIC
We have developed three important fuzzy predicate logics LV, GV, IIV, based
on an analysis of continuous t-norms as truth functions of the conjunction
and their residua as truth functions of the implication. The choice of a con-
tinuous t-norm has automatically given the corresponding choice of the truth
function of negation. This was a clean and fruithful approach; nevertheless,
the reader may feel not fully satisfied since in the practice of informal fuzzy
logic one sometimes likes to combine e.g. GOdel and product conjunction
with Lukasiewicz negation (in particular when one wants to have a duality
between t-norms and t-conorms). Logical research in this direction appears
to be possible; we demonstrate this by elaborating a logic having three con-
junctions and three implications and extending each of LV, GV, IIV. The pre-
sentation is heavily dependent on the paper [196] ofTakeuti and Titani and we
shall call the logic TT\i (Takeuti-Titani predicate logic). But we have to stress
the fact that our system is far from identical with that of [196]. Nevertheless,
the basic idea and the method of proof of completeness are taken from the
work of Takeuti and Titani, which justifies our name. It should also be clear
from the beginning that since TT\i extends LV we cannot expect recursive
axiomatization: TT\i will have an infinitary deduction rule (with countably
many premisses).
249

250
CHAPTER NINE
Definition 9.1.1 The logical symbols of TN are as follows:
-
connectives - three conjunctions &,1\,0 (called Lukasiewicz, GOdel
and product conjunction respectively), three implications -+b -+G, -+Il
(Lukasiewicz, Godel and Goguen implication),
truth constants r for each rational r E [0, 1];
-
quantifiers V, 3;
-
object variables.
The connectives have their usual semantics over [0, 1].
A language I is given by predicates (with arities) and object constants.
The notion of a structure for I
is as in BLV (cf. 5.1.1); but we restrict our-
selves to [0, 1]-structures. Thus a structure for TN has the form M
=
= (M, (rp)p, (me)e) where M f- 0, rp : Mar(P) -+ [0,1] for each predi-
cate P and me E M for each constant c.
Atomic formulas have the form P(tl,"" tn) where P is a predicate of
arity n and tl, ... ,tn are terms or have the form r (truth constant). If tp, 't/J
are formulas then cp&'t/J, tp 1\ 't/J, cp 0 't/J, cp -+L 't/J, tp -+G 't/J, tp -+Il 't/J are
formulas; if tp is a formula and x a variable then (Yx )tp, (3x)tp are formulas.
We introduce the following abbreviatons:
,tp is tp -+L 0,
":"tp is tp -+G°
CP'i..'t/J is ,tp -+L 't/J
tp V 't/J is (tp -+L 't/J) -+L't/J,
t::"tp is ":",tp,
tp =L 't/J is (cp -+L 't/J)&('t/J -+L cp),
similarly for =G, =n·
Convention: -+ will denote any of -+b -+G, -+n (but the same in all
occurences in a formula); similarly for =.
The definition of the truth value IItpllM,v (where v is an M-evaluation of
object variables) is the obvious modification of 5.1.3; for the reader's conve-
nience, we display it in full.
IIP(tl,"" tn)IIM,v = rp(lltlIIM,v,"" IItnIlM,v)
IIrllM,v = r,
IItp&'t/JIIM,v = max(O, IItpllM,v + 11't/JIIM,v - 1),
Ilcp 1\ 't/JIIM,v = min(llcpIlM,v, lI't/JIIM,v),
Iltp 0 't/JIIM,v = IItpllM,v . lI't/JIIM,v,
IIcp -+ 't/JIIM,v = 1
iff
IIcpIlM,v:::; lI't/JIIM,v;
otherwise
Ilcp -+L 't/JIIM,v = 1 - IIcpllM,v + lI't/JIIM,v,

MISCELLANEA
Ilcp -*c 1/JIIM,v = 111/JIIM,v,
IIcp -*n 1/JIIM,v = 1I1/JIIM,v/llcpIIM,v;
II(Vx)cpIlM,v = inf{llcpIlM,v,lv ==x v'};
1I(3x)cpIIM,v = sup{lIcpIIM,v,lv ==x v'}.
251
Remark 9.1.2 One easily checks that this gives the following rules for the
defined connectives:
II·cpIlM,v = 1 - IIcpIlM,v;
II-:'cpIIM,v = 1
for
IIcpllM,v = 0,
lI-:'cpIIM,v = ° otherwise
II 6 cpllM,v = 1
forllcpllM,v = 1,
116 cpllM,v = ° otherwise, (ef.2.4.4),
IIcp.Y'.1/JIIM,v = min(l, IlcpllM,v + 111/JIIM,v)
Ilcp V 1/JIIM,v = max(llcpIIM,v, 111/JIIM,v),
Ilcp == 1/JIIM,v = min(llcp -* 1/JIIM,v, 1I1/J -* cpIIM,v)
(== being the equivalence corresponding to -*).
Definition 9.1.3 Logical axioms of TN are as follows:
-
axioms ofBL for each ofthe pairs (&, -*L), (1\, -*c), (0, -*n) (e. g.
(A2) is (cp&1/J) -*L cp, (cp 1\ 1/J) -*c cp, (cp 0 1/J) -*n 1/J, etc.)
-
additional axioms of L, G, II:
cp -*c (cp 1\ cp),
-:.-:.X -*n (((cp 0 X) -*n (1/J 0 X)) -*n (cp -*n 1/J)),
cp 1\ -:'cp -* 0
-
axioms for connectives from different groups:
-:'cp == (cp -*n 0)
(cp 1\ 1/J) == (cp& (cp -*L 1/J)),
(cp 1\ 1/J) == (cp 0 (cp -*n 1/J))
(cp V 1/J) == (((cp -* 1/J) -* 1/J) 1\ ((1/J -* cp) -* cp))
(cp&1/J) -* (cp 0 1/J),
(cp 0 1/J) -* (cp 1\ 1/J)
(cp -*c 1/J) -* (cp -*n 1/J),
(cp -*n 1/J) -* (cp -*L 1/J)

252
CHAPTER NINE
bookkeeping for truth constants:
(1'&s) = r *L s,
(1' ---tL s) = r =>L S
and similarly for (1\, ---tG, *G, ::::}G), (0, ---tn, *n, ::::}n) (e.g. (1' 0 s) =
r· s, (1' ---tL s) = min(l, 1 - r + s) etc.)
axioms for 6. (cf. 2.4.4), i.e.
6.ep V --, 6. ep,
6.(ep V 1jJ) ---t (6.ep V 6.1jJ),
6.ep ---t ep,
6.ep ---t 6. 6. ep,
6.(ep ---t 1jJ) ---t (6.ep ---t 6.1jJ),
6.(ep ---tL 1jJ) ---t 6.(ep ---tG 1jJ),
axioms for quantifiers (VI), ('12), (V3), (31), (32) (cf.5.I.7).
Deduction rules are modus ponens (for any our three implications), gen-
eralization, the 6.-necessitation: from ep derive 6.ep and finally the following
infinitary rule:
b V (ep ---t (1jJ:£1'))lr > O}
, V (ep ---t 1jJ)
This means: if for each rational positive r E [0, 1J the formula, V (ep ---t
(1jJ V f)) is provable then, V (ep ---t 1jJ) is provable. In particular, taking, to
be 0 and ep to be 1, we get: if for each positive r, 1jJ:£1' is provable, then 1jJ is
provable.
We could define proofs as some possibly infinite countable trees; but it
may be simpler not to define proofs at all and only define what provability
means.
A theory over Tf'v' is a set of closed formulas. The set Cntt(T) of all for-
mulas provable in T is the smallest set T' containing T as a subset, containing
all axioms of Tf'v' and closed under all deduction rules (i.e. such that if all
premisses of the rule are in T' then so is the conclusion ofthe rule). A theory
T is consistent if 0 ¢ Cntt(T). T f- ep means ep E Cntt(T).
Lemma 9.1.4 (Soundness). The logic Tf'v'is sound, i.e. if M is a model of
T and T f- ep then IlepllM,v = 1 for each M-valuation v.
Proof'
It follows from our investigations of BLV, LV, GV, IIV and of the
connective 6. that all axioms except [those for connectives from different

MISCELLANEA
253
groups and the last .6.-axiom] are I-tautologies and all rules except the infinite
rule are truth-preserving (if all assumptions are I-true in M then so is the
conclusion). To verify the remaining axioms is an easy exercise, e.g. for the
conjunctions we have
max(O, x + y - 1) ::; x . y ::; min(x, y)
which gives I-truth of (cp&'ljJ) -+ (cp 0 'ljJ) -+ (cp 1\ 'ljJ); knowing that the
negation of the product logic is the same as that of Godel logic gives l-truth
of ';cp == (cp -+Il 0) etc.
Soundness of the infinite rule follows immediately from the fact that (even
if Godel and Goguen implication are not continuous) all three implications
are continuous from above in the second argument i.e. x
::::}
y
= limc>o,c-to x ::::} (y + E).
0
Lemma 9.1.5 Let i, j run over L, G, II.
(1) Then
I- 6(cp -+i 'ljJ) == .6.(cp -+j 'ljJ)
I- .6.(cp ==i 'ljJ) == .6.(cp ==j 'ljJ)
(2) The following rule is a derived rule of TN:
cp -+i 'ljJ
Cp-+j'ljJ'
i.e. ifT I- (-ip -+i 'ljJ) then T I- (cp -+j 'ljJ).
(3) Similarly,
,V (cp-+i'ljJ)
,V (cp -+j 'ljJ)'
(i.e. ifT 1-, V (cp -+i 'ljJ) then T 1-, V (cp -+j 'ljJ).
Proof
(1) For (i, j), being (G, II) or (II, L) we have
I- (cp -+i 'ljJ) -+ (cp -+j 'ljJ), thus, by .6.-necessitation,
I- .6.[(cp -+i 'ljJ) -+ (cp -+j 'ljJ)], thus, by 6-axioms
I- .6.(cp -+i 'ljJ) -+ .6.(cp -+j 'ljJ).
For (i, j) being (L, G) see the last .6.-axiom.
(2) 1fT I- cp -+i 'ljJ then T I- .6.(cp -+i 'ljJ), thus T I- .6.(cp -+j 'ljJ) by (1)
and hence T I- (cp -+j 'ljJ) by a .6.-axiom.
(3) is proved similarly using the provability of .6.(/ V (cp -+i 'ljJ)) -+
(.6., V .6.(cp -+i 'ljJ)).
0

254
CHAPTER NINE
I- 6.(cp == 'ljJ) -7 (~(cp) == ~(7jJ))
Thus if T I- cp == 'ljJ then T I- ~(cp) == ~(7jJ).
Corollary 9.1.6 IfT I- cP ==i 7jJ then T I- cP ==j 7jJ. T I- -,cp iff T I- ';cp.
Remark 9.1.7 (1) These results are in fact not surprising assuming complete-
ness (to be proved): provability of cp -7i 'ljJ means that cp -7i 'ljJ is true in all
models, i.e. Ilcpli ::; 117jJ1I, whatever i is. But be careful: this does not mean
that one may arbitrarily replace -7i by -7j in formulas; we only say that
T I- cp -7i 7jJ is the same as T I- cp -7j 7jJ. Even this is very useful.
(2) We have chosen the axioms oflTv' in a form suitable for remembering
and there can be redundant axioms. The reader may care to try to identify
redundant axioms as an exercise.
(3) The following lemma shows in which sense we can replace a subfor-
mula by an equivalent one.
Lemma 9.1.8 Let cp, 7jJ be formulas with the same free variables and let ~(7jJ)
be formula resulting from a formula ~(cp) by replacing the subformula cp by
7jJ.
(1)
(2)
Proof
(1) Recall that I- 6.(cp ==i 'ljJ) -7 6.(cp ==j 'ljJ) for each i,j. The
assertion is trivial if ~(cp) is cp or ~(cp) does not contain cp as a subformula.
To prove the induction step for a connective, say -7b we assume
and by the above we may understand == as ==b thus we have
I- (6.(cp ==L 7jJ)& 6. (cp ==L 7jJ)) -7
-7 [(~l(cp) ==L ~1(7jJ))&(~2(CP) ==L ~2(7jJ))],
I- [...J -7 ((~l(cp) -7 ~2(cp)) ==L (~1(7jJ)
-7L~2('ljJ))),
I- 6.0. -7 (6.0.& 6. a.)
(see 2.4.11), thus
Similarly for other connectives. The induction step for quantifiers is easy.
0
Lemma 9.1.9 Let T be a theory over lTv' and c a constant not occuring in
the axioms of T; let cp be a formula possibly containing c. If T I- cp then for
all but finitely many variables x, T I- cp(cjx) (where cp(cjx) is the result of
substituting x for c in cp).

MISCELLANEA
255
Proof'
Let Cn'(T) be the set of all formulas a such that T I- a and for all
but finitely many variables x, T I- a(e/x). One easily shows that Cn'(T)
contains all axioms of TI, all axioms of T, and is closed under deduction
rules. (For example check modus ponens: if a E Cn'(T) call a variable x
exceptional if T If a(e/x). Clearly if a E Cn'(T) and (a -t f3) E Cn'(T)
then each variable x exceptional for 13 is either exceptional for a or for (a -t
13); thus the set of variables exceptional for 13 is finite and 13 E Cn'(T).) Thus
Cn'(T) = Cntt(T) (since Cntt(T) is the smallest set containing logical
axioms, axioms of T and closed under deduction rules). This completes the
proof.
0
*
Theorem 9.1.10 Completeness. For each theory T over TN and each for-
mula cp, T I- cp iff IlcpllM,v = 1 for all models of T and all valuations v.
9.1.11 The proof is elaborated in the rest of this section. For this purpose let
T be a fixed theory and cp a formula such that T If cpo Furthermore let en, n
natural, be constants not occuring in T and let ao, a1,'"
be a sequence con-
taining all (closed) formulas of the enriched language. Remember our proof
of Lemma 5.2.7, crucial for the proof of completeness of BL\i: in each step
we made some formula(s) provable in a future theory T ;2 T and guaran-
teed some formula(s) to be unprovable in T, among them the formula cpo
The idea of Takeuti and Titani is that the second half is sufficient: we shall
construct, in countably many steps, a set <I> of formulas such that for any
finite subset b1,' .. ,In}
~
<I>, the disjunction 11 V ... V In is unprov-
able in T. In particular, for each closed formula I we may construct the real
inf{r E [0, 1]1 (of -t I) E <I>}; this will be the truth degree 11111M in the model
we shall construct from our <I>.
First, since T If cp we may take a r -1 > 0 such that T If CP'Y..T-1 (due to
the infinitary deduction rule). Put <I>o = {cp, cpy"r-I}. Clearly T If V<I>o (for
a finite set r of formulas Vr is the disjunction of the members ofr).
Now let <I>k have been constructed such that T If V<I>k. If T I- V<I>k Vak
then let <I>H1 = <I>k. Otherwise there is an rk > 0 such that T If V<I>k V
(akY..n); let <I>~+1 = <I>k U {ak' aky"rd· Clearly, T If V<I>1c+1'
If ak has the form (\ix)f3(x) take a constant e from the list of new constants
such that e does not occur in <I>~+1; by 9.1.9, T If V<I>~+1 V f3(e). (For I =
V<I>~+1' if T I- I V f3(e) then T I- I V f3(y) for each non-exceptional y,
thus T I- (\iy)(, V f3(y)) and T I- I V (\iy)f3(y) by (\7'3); now for a suitable
non-exceptional y, T I- (\ix)f3(x) == (\iy)f3(y) and T I- I V (\ix)f3(x), a
contradiction.) Let <I>H1 be <I>ic+1 U {f3(e)}.

256
CHAPTER NINE
If ak has the form f3 -+ , (for one of our three implications) then for a
suitable r~ > 0, T If V~~+1 V (f3 -+ (,Yr~) ) (due to the infinitary rule); let
~k+l = ~~+1 U {f3 -+ (ry rAJ}· Again, T If V ~k+l·
Finally, put ~ = Uk ~k. In the next series of lemmas we shall prove
several properties of ~.
Lemma 9.1.12 (f3 V,) E ~ iff f3 E ~ and, E ~,for each f3, f.
Proof"
Let f3 = ak"
= al, (f3 V,) = am, n > max(k, l, m). If(f3 V,) E
~ then (f3 V,) E ~n, T If V~n, T If V ~n V (f3 V,), hence T If V ~k V f3
and T If V ~l V,. Therefore f3 E ~k+l and, E ~l+l.
Conversely, iff3 E ~ and, E ~ then f3 E ~k+l,' E ~l+1 thus f3"
E ~n
and T If V ~n. Hence T If V~m V (f3 V,) and (f3 V,) E ~m+l.
0
Lemma 9.1.13 f3 ¢ ~ iff there exists, E ~ such that T f- f3 V,.
Proof"
If f3 ¢ ~ then T f- V~k V f3; take, = V ~k' On the other hand,
if f3 E ~ and, E ~ then (f3 V,) E ~ by the preceding lemma and hence
T If (f3 V ,).
0
Lemma 9.1.14 If T f- , V (a -+ (3), " f3 E ~ then a E ~. (Here again -+
stands for any of -+b -+e, -+n.)
Proof"
Assume T f- , V (a -+ (3)", f3 E ~ and a ¢
~. Then by the last
lemma there is an a' E ~ such that T f- a Va'.
NowT f- a -+ (rVf3),thusT f- a -+ (a'V,Vf3);aisoT f- a' -+ (a'V,Vf3),
hence T f- (a Va') -+ (a' V, V(3) and T f- a' V, Vf3. But this contradicts
the fact that a'," f3 E ~.
0
Lemma 9.1.15 The following are mutually equivalent:
(f3/\,) E ~,(f3&,) E ~,(f3 0,) E ~,[f3 E ~ or, E ~].
Proof"
If f3 E ~ then (f3&,) E ~ follows from T f- (f3&,) -+L f3 (i.e.
T f- I V [(f3&,) -+L f3]) by the last lemma. Similarly for, E ~ and other
conjunctions.
Conversely, if f3 ¢
~ and, ¢
~ then for some f3',,' E
~ we have
T f- f3 V f3', T f- , V,', thus T f- (f3 Vf3')&(r V,'), hence
T f- (f3&,) V (f3&,') V (f3'&,) V (f3'&,')

MISCELLANEA
257
(cf. 2.2.23 (30». Thus the last fonnula is not in <P; since ((3&"('), ((3'&"(),
((3'&"(') E <P, we conclude ((3&"() E <P.
The same proof works for 1\, 0 too.
0
Lemma 9.1.16 If (a -+ (3) E <P and ((3 -+ "() E <P then (a -+ "() E <P.
Proof
Since T I- (a -+ (3) V ((3 -+ a) we get
T I- (a -+ "() -+ [(a -+ (3) V ((3 -+ "()].
Since (a -+ (3) V ((3 -+ "() E <P by 9.1.12, we get (a -+ "() by 9.1.14.
0
Lemma 9.1.17 For i,j ranging over L, G, II,
iff
((3 -+j "() E <P.
Proof
If ((3 -+i "() (j. <P then there is an a E <P such that T I- a V((3 -+i "();
thus by 9.1.5 (3), T I- a V ((3 -+j "() and ((3 -+j "() (j. <P.
0
Lemma 9.1.18 If (a -+ a') (j. <P and ((3 -+ (3') (j. <P then
(and the same for 1\, 0),
(a&(3) -+ (a'&(3') (j.<P
(i)
(a' -+ (3) -+ (a -+ (3') (j. <P.
(ii)
Proof
(i) If (a -+ a'), ((3 -+ (3') (j. <P then (a -+ a')&((3 -+ (3') (j. <P by
9.1.15; since
T I- [(a -+ a')&((3 -+ (3')] -+ [(a&(3) -+ (a'&(3')],
we get the result using 9.1.14.
(ii) is proved in the same way.
Lemma 9.1.19 For r < 1, l' E <P.
o
Proof
Assume not, then for some "( E <P, T I- "( V 1', T I- 6("( V f),
T I- 6"( V 61'. Thus it suffices to show T I- 61' -+ ato get T I- 6"(, T I- "(,
a contradiction.
Indeed, T I- 61' == ':"1' == ':"(1 - r) == 0, since 1 - r > O. This completes
the proof.
0

258
CHAPTER NINE
Lemma 9.1.20 For each formula a,
inf{rl(r -+ a) E <1>} = sup{r'l(a -+ r') E <1>}.
Proof'
If (r< -+ a) E <.I> and (a -+ r') E <1> then (r< -+ r') E <1> by 9.1.16,
thus T r r -+ r' and hence r > r'. Therefore inf{rI(r< -+ a) E
<1>} 2:
sup{r'l (a -+ r') E <1>}. We want to prove equality. Assume not; take r, r'
such that
inf{rl(r< -+ a E <1>} > r > r' > sup{r'l(a -+ r') E <1>};
Thus for this r, r', (r -+ a) tJ. <1>, (a -+ r') tJ. <1>; consequently, (r -+ r') tJ. <1>
(by 9.1.18) and hence s tJ. <1> for s = (r ~ r'). But s < 1 and thus s E <1> by
9.1.19, a contradiction.
0
Definition 9.1.21 The model M given by <1> is defined as follows:
-
The domain M consists of all constants of the extended language;
each such constant c, me = c (c denotes itself).
For each n-ary predicate P and constants c, ... , d,
rp(c, .. . ,d) = inf{rl(r< -+ P(c, ... ,d)) E <1>}
Lemma 9.1.22 For each closed formula a,
IlaliM = inf{rl(r< -+ a) E <.I>}
Proof'
The assertion is immediate for a atomic closed directly by the defini-
tion ofrp. For s rational in [0, 1], IIsllM = s. It follows from our investigation
that (r -+ s) E <1> iffr > s; thus s = inf{rl(r -+ s) E <1>}. We shall verify
the induction step for conjunction(s), implication(s) and quantifiers.
Assume the assertion for f3", i.e. 1If3I1M = inf{rl(r -+ (3) E <.I>} and
similarly for ,. We omit the subscript M. If rl < 11f311 and r2 < 11I11 then
(rl -+ (3) tJ. <1> and (r2 -+,) tJ. <1>, thus, by 9.1.18, ((rl&r2 -+ (f3&,))) tJ. <1>
and (rl * r2 -+ (f3&,)) tJ. <1> where * is the corresponding t-norm.
Sublemma 1.!!f311 * 11I11 :S inf{rl(r< -+ (f3&,)) E <1>}.
This is trivial if 11f311 = 0 or 11I11 = 0, thus assume 1If311, 11I11 > O. Then,
thanks to the continuity and monotonicity of *,
11f311 * 11I11 =
sup
sup (rl * r2) :S inf{rl(r< -+ (f3&,)) E <1>},
rl <111311 r2<1I'Y1l
since by the above for each such rl, r2, (rl *r2 -+ (f3&,)) tJ. <1>.

MISCELLANEA
259
Sublemma 2. 11,811 * 11,11 2 sup{rl((,8&,) --t f) E (f>}.
First assume 11,811, IITII < 1. If rl >
11,811 and r2 > lITII then (,8 --t
rd, (r --t r2) f/. (f>, thus ((,8&,) --t rl *r2) f/. (f>. Then similarly as above
we get
11,811 * Ihll =
inf
inf (rl *r2) 2 sup{rl((,8&,) --t r<) E (f>}.
rl>1I1111 r22:lh'lI
If e.g. 11,811
=
1 then II.BII * IITII
= lIT II
= sup{rl (r
--t
r<)
E
(f>} 2
sup{rl((,8&,)
--t r<)
E (f>} (since f- (r
--t r<)
--t ((,8&,)
--t r<), thus
((,8&,) --t r<) E (f> implies (r --t r<) E (f».
Since 11,8&,11 = 1I.B11 * 11,11 we get, using 9.1.20,
11,8&,11 = inf{rl(r --t (,8&,)) E (f>}.
Observe that the same proof works for 1\ and 0. We tum to the implication,
continuing to assume the assertion for ,8, ,.
Sublemma 3. If 11,811 > IITII then
11,811 => 11,11 ::; inf{r<I(r --t (,8 --t ,)) E (f>}.
Recall that => is non-increasing in the first variable, non-decreasing in the
second, and if x > y then => is continuous in the point (x, y). Thus we may
proceed analogously as above. First assume 11,811 < 1, 11,11 > O. If rl > 11,811
and r2 < II, II then (,8 --t rl f/. (f>, (r2 --t ,) f/. (f>, thus ((rl --t r2) --t (,8 --t
,)) f/. (f> by 9.1.18 (ii). Hence 11,811 => 11,11
= SUPrt>111111 sUPr2<11"YII(rl =>
r2) ::; inf{rI(r< --t (,8 --t ,)) E (f>}.
Sublemma 4. If 11,811 > 11,11 then
11,811 => Ihll 2 sup{rl((,8 --t ,) --t r<) E (f>}.
Our assumption implies 11,811 > 0 and Ihll < 1. Similarly as above we get
11,811 => 11,11 =
inf
inf (rl => r2) 2 sup{rl((,8 --t ,) --t r<) E (f>}.
rl <11.811 r2>11"Y1l
Sublemma 5. If 11,811 ::; 11,11 then 11,811 =} IITII = inf{rl(r< --t (,8 --t ,)) E
(f>}=1.
Here we can encounter non-continuity, thus special care is necessary. We
show inf{rl(r< --t (,8 --t ,))
E (f>} =
1. First assume lITII =
1. Then
for all r < 1, (r --t ,) f/. (f> and therefore (r< --t (,8 --t ,)) f/. (f> (since
f- (r< --t ,) --t (r< --t (,8 --t ,))). Hence inf{r I(r< --t (,8 --t ,)) E (f>} = 1.
Now assume 11,11 < 1. We claim that for each r, (r< --t (,8 --t ,)) f/. (f>.
If r< --t (,8 --t ,) E (f> for some r then ((,8 --t ,) E (f> by 9.1.14, and hence
by the construction of (f>, (,8 --t (ryrk)) E (f> for some rk. Take an r' such

260
CHAPTER NINE
that 111'11 < r' < 11,11 + rk = 1I,.y'Tkll· Then ((r':l.n ~ r') E <1> and thus,
by 9.1.16, (13 ~ r') E <1>, hence 111311 > r' 2:: "'" which contradicts our
assumption 111311 ~ 11,11· Thus inf{rl(r ~ (13 ~,)) E <1>} = inf<1> = 1.
Thus we have verified the induction step for implications. We still have to
handle quantifiers. Let j3(x) be a formula with one free variable and assume
the assertion for each instance j3(c). (This is a good inductive assumption:
for a natural notion of complexity of a formula we prove our assertion by
induction of the complexity of the formula - and all instances j3(c) of j3(x)
have the same complexity.)
Sublemma6.
II (\ix)j3(x) II = inf{rl(r ~ (\ix)j3(x)) E <1>}.
Clearly,
11(\ix)j3(x)1I = inf IIj3(c)ll,
cEM
let II (\ix)j3(x) II = z. If r < z then for each constant c, r < IIj3(c) II, hence
(r ~ j3(c)) ¢
<1>. By the construction of <1> we conclude that (\ix)(r ~
j3(x)) ¢ <1>, thus (r ~ (\ix)j3(x)) ¢ <1>.
If r > z then for some c, r > Ilj3(c)ll, thus (r ~ j3(c)) E <1> and hence
(r ~ (\ix)j3(x)) E <1>. Consequently, z = inf{r Ir ~ (\ix)j3(x)) E <1>}.
Sublemma 7.
IIC3x)j3(x)11 = inf{rl(r ~ (:Jx)j3(x)) E <1>}.
Let now z =
II (:Jx)j3(x) II. If r < z then for some c, r < Ilj3(c)ll, thus
(j3(c) ~ f) E <1>, thus ((:Jx)j3(x) ~ r) E <1> (again by 9.1.14).
If r > z then (f3(c)
~ r) ¢
<1> for all c, thus, by the construction
of <1>, (\ix)(j3(x)
~ r) ¢
<1> and hence ((:Jx)j3(x)
~ r) ¢
<1> (since r
(\ix) (j3(x)
~
r)
~
((:Jx)j3(x)
~
r) - axiom(:J2». Thus z
=
= sup{r I((:Jx)j3(x)
~ r) E <1>}. This completes the proof of the lemma.
o
9.1.23 Proof of the completeness theorem. Recall our cp such that T If cp.
Since cp E <1>, there is an rk > 0 such that (cp':l.n) E <1>, thus (((1 - rk) ~
cp) E <1>. (Take ~L for~,) Hence IIcpli ~ 1 - rk < 1.
On the other hand, for each a E T and each r, T r r ~ a. Thus for each
r, (r ~ a) ¢ <1> and lIall = inf{rl(r ~ a) E <1>} = 1. Hence M is a model
ofT in which cp is not true. This proves the completeness theorem of TT\i.

MISCELLANEA
9.2.
AN ABSTRACT FUZZY LOGIC
261
In this section we present, more or less in passing, some selected material
from Pavelka's [163] Part I. The approach is rather abstract and the main thing
to stress is that it covers also logical systems that are not truth-functional;
formulas are treated as abstract objects, possibly without any structure. On
the other hand, it gives some light to truth-functional systems: we shall see,
among other things, the origin of rational Pavelka logic RPL.
Definition 9.2.1 In the sequel, L is a complete lattice (each subset ofL has its
infimum and supremum). We do not assume L to be linearly ordered, but our
favorite example will be the ordered unit interval [0, 1]. Form is a non-empty
set; its elements are called formulas. L Form denotes the set of all mappings
f : Form -+ L; in other words, all L-fuzzy subsets of Form.
Definition 9.2.2 An L-semantics for Form is a non-empty subset S
~
~ LForm. Each element E E S is called an (admissible) evaluation. For
each cp E Form, IIcpllE = E(cp) is the truth value of cp in the evaluation
E. An element X
E LForm (not necessarily in S) may be understood as a
theory; E E S is a model ofX iffor each cp E Form, E(cp) ~ X(cp). (Thus
the fuzzy set X assigns to each formula a lower bound for its truth degree.)
is the truth degree of cp in the theory X.
Example 9.2.3 (1) For each propositional calculus C given by a continuous
t-norm, the predicate calculus CV determines the above notion as follows:
Form is the set of all formulas of CV, L E [0,1]. E E S iff there is an
interpretation M of the language of CV such that E(cp) = IIcpllM for each cp.
Similarly for RPLV.
(2) Let Form be the set of all formulas of Boolean propositional logic
with propositional variables PI, ... ,Pn and let S be the set of all probabil-
ities on Form. In more details, E E S if there is a probabilistic Kripke
model K = (W, e, J.L)
E Kprob (cf.8.2.22) such that for each formula cp,
E(cp)
=
J.L{w E WlllcpllK,v = I}. Thus here we may afford what was
forbidden in truth-functional systems: we take the probability of cp and un-
derstand it as the truth value of cp. Similarly for such other belief measures as
possibilities/necessities, belief/plausibility functions.
Definition 9.2.4 (1) Let Form, L be as above. An n-aryfuzzy deduction rule
for (Form, L) consists of two (crisp) functions R 1, R 2. RI is a partial map-
ping from Formn into Form (i.e. the domain of RI is a subset of Formn

262
CHAPTER NINE
and for each (<PI, ... , <Pn) in the domain, RI (<PI, ... , <Pn) E Form) and R2
is a total mapping of Ln into L. The rule may be visualized as follows:
<PI,··· , <Pn
RI(<PI ... <Pn)
(
al,···, an
)
R2(al,"" an)
The intuitive meaning is: if each <Pi is at least ai-true then the formula
RI (<PI, ... , <Pn) is at least R2(aI, ... , an) true.
(2) R2 preserves non-empty suprema if for each i = 1, ... , n and each
non-empty U ~ L, al,.··, ai-I, ai+l,· .. ,an E L,
= sup R2(al, ... ,ai-l,ai,ai+I, ... ,an).
aiEU
(3) A fuzzy set X E LForm is closed under the rule (RI ,R2) iffor each
(<PI,""
<Pn) E dom(Rd
X(RI (<PI, ... , <Pn)) ~ R2(X(<pd, ... , X (<Pn))
(In other words, if X demands the assumptions <Pi to be at least ai-true for
i =
1, ... , n then it demands the conclusion RI (<p, ... ,<Pn) to be at least
R2(al,'" ,an)-true.)
X is closed under a non-empty set R of rules if it is closed under each
memberofR.
(4) A fuzzy deductive system for Form, L consists of a fuzzy set A :
Form -+ L called the fuzzy set of logical axioms and of a non-empty set R
of fuzzy deduction rules, each preserving non-empty suprema; X is closed
under (A, R) iff X
~ A (i.e. for each <P, X(<p)
~ A(<p)) and X is closed
under R.
Lemma 9.2.5 (1) If (RI ,R2) is a deduction rule preserving non-empty
suprema then R2 is non-decreasing in each argument.
(2) Under the same assumption, let X be a non-empty set offuzzy theories,
each closed under (Rl, R2) and let X = inf X, i.e. for each <P let X(<p) =
inf{Y(<p)IY E X}. Then X is closed under (R I , R 2 ).
Proof
(1) Let a ~ b, a, bEL; then a U b = band
R2('" b...) = R2(
a ...) U R2(... b... ) ~ R2(... a .. .).
(2) Evidently, X(RI(<PI,
)) =
inf{<p(RI(<PI,.' ·))I<p E X} ~ inf{R2(Y(<PI)'" Y(<Pn)IY E X}

MISCELLANEA
263
due to the closedness of each Y E X. Now since for each such Y, Y(<Pi) 2:
X(<pd for each i, we get from our (I)
thus
and hence
X(RI (<PI, ... <Pn)) 2: R2(X(<PI), ... ,X(<Pn))·
This proves that X is closed under (RI, R2)'
o
Theorem 9.2.6 Let (A, R) be a fuzzy deduction system for (Form, L). Then
for each fuzzy theory X : Form --+ L there is a uniquely determined least
theory Y : Form --+ L containing X (i.e. Y 2: X) and closed under (A, R).
Proof
Let W be the set of all Z : Form --+ L containing X and closed
under (A, R). Note that W =I- 0 since the Z such that Z(cp) = IL for all cP is
in W. Put
Y(cp) = inf{Z(cp)IZ E W};
by the above, Y contains X and is closed under (A, R). Clearly Y is the least
theory with this property.
0
Definition 9.2.7 (1) The unique Y in the preceding theorem is called the de-
ductive closure of X with respect to (A, R) and denoted by Cn~;R..
(2) A weighted proo/from X on the base of (A, R) is a finite sequence of
pairs
(cpI' wd,···, (cpk, Wk)
where for each i <Pi E Form and Wi ELand, moreover, at least one of the
following conditions holds:
A(<pd = Wi
(<Pi treated as a logical axiom)
-
X(CPi) = Wi
(<Pi treated as a special axiom)
-
for some n-ary rule (RI ,R2) E R there are il,'" ,in < i such that
RI(CPi,···,CPin ) = CPi andR2(wi, ... ,Win ) =Wi
(3) The provability degree of cP from X in (A, R) is
Icpl~,n) = slip{wl there is a weighted proof of (<p, w)}.
Clearly, the proofs are from X in (A, R); saying "a proof of (cp, w)" we mean
that (cp, w) is the last member of the proof.

264
CHAPTER NINE
Theorem 9.2.8 Let (A, R) be a deductive system for (Form, L). Then for
each cP E Form and X E L Form ,
I j(A,R) - c
A,R(
)
cP x
-
nx
cp.
Proof
On the one hand, if (CPI,WI), ... , (CPn, wn) is a weighted proof from
X in (A, R) and Y is closed under (A, R) and Y
~ X then it follows
easily by induction on the length of the proof that Y (CPi)
~ Wi for each
i. For example, assume CPi results from CPj, CPk (j, k < i) by a binary rule
(RI,R2), i.e. CPi = RI(cpj,CPk) and Wi = R2(wj,Wk). By the induction
assumption, Y(cpj) ~ Wj, Y(CPk) ~ Wk; thus, by closedness ofY, Y(CPi) ~
R2(Wj, Wk)
=
Wi. This completes the induction step. Thus
Icpl~,R ::;
::; Cn~,R(cp).
To prove the converse inequality it suffices to show that Icpl~,R) under-
stood as a fuzzy theory (assigning to each formula cP the value Icpl~,R)) is
closed under (A, R). Here we need preservation of suprema. For simplicity,
delete all indices. First, clearly Icpl
~ A(cp), Icpl
~ X(cp) (thanks to triv-
ial one-element proofs of axioms). Now let cP = RdcpI,'"
CPn); we have to
prove R2(lcpII,···, ICPnl) ::; Icpl·
Now R2(1CPII,·· .ICPnl) =
= R2 (sup{aliX I- (cpI' ad},· .. ,sup{anlX I- (CPn, an)} =
= Sup{R2(al,'" ,an)IX I- (cpi' ad
for
i = 1, ... n} ::; Icpl.
Here X I- (cp, ai) obviously means that there is a proof of (cp; ai) from X in
(A, R). The last inequality holds since for each choice ofal,' .. an such that
X I- (cpi' ai) for all i, we get X I- (cp, R2(al,'" an)) by concatenating the
proofs and applying the rule.
0
Definition 9.2.9 Let 5 be a semantics for (Form, L) and let (A, R) be a
deduction system for (Form, L). Call, for a moment, (Form, L, 5, A, R)
an abstractfuzzy logic and denote it by .c.
(1) .c is sound if for each cP and X,
Icpl~,R ::; IIcpll~
(equivalently, whenever X I- (cp,w) then IIcpll~ ~ w).
(2)L is Pavelka-complete if Icpl~,R =
Ilcpll~ for each cP, X.

MISCELLANEA
265
Remark 9.2.10 Here we stop our "visit" with the old seminal Pavelka's work.
Needless to say, much of the material presented in his [163] Parts II, III has
been extremely influential at several places in previous chapters. But it should
be stressed that the original presentation in these last-mentioned papers was
repeatedly and substantially simplified over the course of time.
Things presented in this section may be further developed in at least two
directions:
(1) First, finding natural Pavelka-complete abstract fuzzy logics for par-
ticular semantics, e.g. for probabilities on logical formulas. See [59] for such
an investigation.
(2) Second, following Pavelka, investigating abstract fuzzy logics given by
a continuous t-norm, with the language extended by truth constants. Pavelka
always deals with truth constants for all reals from [0, 1]. We have seen in the
case of RPLV, i.e. extended LV, that rational constants are sufficient. This is
true in general; the diligent reader may elaborate details. For any logic CV
given by a continuous t-norm we get a sound abstract fuzzy logic.
As far as completeness is concerned, we have Pavelka-completeness for
RPLV and it is an easy exercise that the same is true for each t-norm isomor-
phic to Lukasiewicz. We showed that we cannot have Pavelka-completeness
for GV, nor for IIV', and the general result is: if the truth-function => of im-
plication in CV is not continuous then there is no (A, R) making the logic
Pavelka-complete. One easily shows, using the characterization of continu-
ous t-norm by Mostert and Shields (see 2.1.17), that the only t-norms with
continuous residuum are those isomorphic to Lukasiewicz. (Hint: if * is not
isomorphic to *L then either it is isomorphic to product and its residuum is
Goguen, which is not continuous in (0,0), or *has at most one internal idem-
potent u, 0 < u < 1; then => is not continuous in (u, u).) This analysis also
shows how to prove Pavelka incompleteness of such fuzzy deductive system,
in an analogy to 4.1.22.
This fact just shows the limitation of this approach: even if very general,
it fails to yield Pavelka-complete axiomatization e.g. for GV and IIV, i.e. We
cannot incorporate truth-constants as easily as in LV. We showed, on the one
hand, some limited possibilities (cf. 4.1.23, 4.2.22); on the other hand, in the
previous section we presented a more general logic TN with an infinitary
deduction rule, for which we do have completeness.
9.3.
ON THE LIAR PARADOX
One of the most well-known "paradoxes" of logical semantics consists in
the fact that a sentence asserting its own falsity (I say: "The sentence I am

266
CHAPTER NINE
just stating is false.") can be neither true (since it would then be false) nor
false (since it would then be true). Thus in a two-valued logic this sentence
cannot have any truth value. In the context of fuzzy logic it is natural to ask
how many-valuedness can change the situation. Zadeh [216] (see also [116])
investigated the liar paradox in the context of possibility theory and among
other things came to the (natural) conclusion that the truth-value of the liar
sentence is ~. Interestingly, a similar investigation was done by Skolem [190]
in the context of paradoxes of set theory.
A deeper analysis ofthe paradox needs technical means that enable discus-
sion of sentences like the above as parts of a formal deductive system. Such
means are at our disposal in the metamathematics of arithmetic, as initiated
by GOdel's celebrated incompleteness theorems. I shall survey the necessary
things and refer to [91] for all necessary details. The expert in metamathemat-
ics of arithmetic will easily be able to fill in all detaills; on the other hand, the
presentation here shouldalso give the non-expert reader enough information
on the results obtained and some feeling for the methods of proof.
The whole section is based on the recent paper [89].
9.3.1 Recall Robinson's arithmetic QA described in Section 6.1., thus a weak
crisp arithmetic with predicates = (equality), S (successor), A (addition), B
(multiplication), numeral 11 for each natural n E N. Recall that we have
identified formulas with some natural numbers (formulas are numbers), thus
in particular for each formula cp we have the corresponding numeral cp. The
following is the famous diagonal lemma, which is the essence of G6del's
incompleteness result and of self-reference in arithmetic:
Lemma 9.3.2 Let T ~ QA be a theory (one-sorted, in Boolean logic, possi-
bly with a language richer than that of QA). For each formula 'ljJ(x) with one
free variable x there is a closed formula cp such that T I- cp == 'ljJ(cp).
The formula cp is usually paraphrased as saying "I have the property 'ljJ."
Definition 9.3.3 The theory QATr
(QA with a truth predicate Tr) has the
language of QA extended by a unary predicate Tr and axioms of QA plus the
following dequotation schema:
cp == Tr(,:£)
where cp is any closed formula of the language of QATr, i.e. Tr may occur
inside cp.
Remark 9.3.4 The term "dequotation" is used by philosophers and relates to
the notion of truth illustrated by the celebrated example of Tarski:
The sentence "it's snowing" is true ijJit's snowing.

MISCELLANEA
Theorem 9.3.5 As a theory in Boolean logic, QATr is contradictory.
267
Proof
We construct the liar sentence: apply the diagonal lemma to ..,Tr(x).
We get QATr f-
.A ==
..,Tr(~), thus, by dequotation, QATr f-
.A == ",.A,
which is contradictory over BooN (e.g. since BooN extends GV, thus proves
(.A -+ ..,.A) -+ ..,.A, QATr proves ..,.A as well as ..,..,.A, i.e. .A).
Before we turn to the question of how this is in fuzzy logic, let us state
one more definition and make one more remark.
0
Remark 9.3.6 We recall and slightly modify the definition 1.4.10 of Peano
arithmetic:
Peano arithmetic PA is the extension, in Boolean logic, of QA by the fol-
lowing additional inference rule:
cp(Q) , (Vx, y)((cp(x) 1\ S(x, y)) -+ cp(y))
(Vx)cp(x)
This is the rule of induction: if you have proved that Qsatisfies cp and if x
satisfies cp then also the successor of x satisfies cp then you may conclude that
all x satisfy cp.
Recall that the standard model ofarithmetic is the crisp structure of natural
numbers, i.e. N with = interpreted as equality, S interpreted as successor
(rs(m, n) = 1 iff n = m + 1, otherwise = 0), analogously A is interpreted
as addition of natural numbers (rA (m, n, k) = 1 iff k = m + n, otherwise 0)
and B as multiplication. Each 11 is interpreted by n.
Peano arithmetic is the most famous axiomatic arithmetic. Note that over
BooN, the deduction rule of induction may be replaced by the induction
axiom schema:
[<p(Q) 1\ (Vx, y)((cp(x) 1\ S(x, y)) -+ cp(y))] -+ (Vx)cp(x).
But in fuzzy logic we have to work with the rule (since the induction schema
is not generally sound in fuzzy logic). QA is our weak arithmetic and PA our
strong arithmetic; needless to say, they may be replaced by various related
systems. PATr has the clear meaning. Obviously, it is a contradictory theory.
Our question now reads: can we keep arithmetic (as a theory of successor,
addition and multiplication) crisp but endow it with a fuzzy truth predicate?
Can we have then dequotation? This is the main problem to be answered in
this section.
Definition 9.3.7 Let CV be a fuzzy predicate calculus. (1) QA(CV) is the the-
ory in CV with the language of QA, whose axioms are

268
CHAPTER NINE
crispness axioms for =, S, A, B, i.e.
('v'x,y)(x = y V -.(x = y))
('v'x, y, z)(A(x, y, z) V -.A(x, y, z))
and similarly for S, B,
-
all the axioms of QA.
PA(C'v') is defined analogously.
(2) QA(C'v')Tr is the extension, over C'v', ofQA(C'v') by a new unary pred-
icate Tr and by the dequotation scheme
cp == Tr(,£)
for each sentence cp of the language of QA(C'v')Tr. PA(C'v')Tr is defined
analogously.
Lemma 9.3.8 QA(C'v') proves cp over C'v' iff QAf- cp over BaalV'.
Proof
BaalV' proves the additional axioms of QA(C'v') and is stronger than
C'v'; thus QA(C'v') f- cp implies QAf- cpo Conversely, one easily shows by in-
duction that the crispness axiom ('v'x ...)(a(x ... ) V -.a(x .. .)) is provable
in QA(C'v') for each a in the language of QA. (Induction step for 'v': if we
can prove ('v'x)(a(x) V-.a(x)) then also ('v'x)(a(x) V-.('v'x)a(x)) and hence
('v'x)a(x) V -.('v'x)a(x) by Axiom ('v'3). Similarly, for 3.) Thus QAf- cp im-
plies QA(C'v') f- cpo
0
Theorem 9.3.9 The theories QA(G'v')Tr, QA(II'v')Tr are contradictory, i.e.
they do not allow a truth predicate with dequotation for (crisp) arithmetic.
We shall prove this theorem later in this section.
Thus of our favourite theories only L'v' still resists. We shall formulate two
results - one negative and one positive. (Later we add a third negative result.)
But let us stop for one definition.
Definition 9.3.10 PA(L'v')Tr2 is PA(L'v')Tr extended by the rule of induction
for all formulas (possibly containing Tr).
Theorem 9.3.11 (1) The standard model N cannot be expanded by any fuzzy
relation rTr such that (N, rTr) would be a model of QA(L'v')Tr (a fortiori,
of PA(L'v')Tr, PA(L'v')Tr2' etc). Thus there is no standard model of full de-
quotation.
(2) On the other hand, the theory PA(L'v')Tr2 is consistent over L'v' and
hence has a model. Each model of PA(L'v')Tr2 is non-standard, i.e. its crisp
(arithmetical) part is not isomorphic to N.

MISCELLANEA
269
We shall prove this theorem below. First we shall have to recall the tech-
nique of arithmetization of metamathematics. The hurrying reader may skip
the rest; but it is of some general interest that we shall prove our (1) by a
rather natural fuzzy variant of the liar paradox. We construct a sentence that
may be paraphrased as saying "I am at least a little false" and leads to a para-
dox that might be called "the modest liar paradox": it is absolutely true iff it
is at least a little false. On this informal level it is admittedly not too clear;
thus let us go into a formalization.
*
9.3.12 (Survey of arithmetization of metamathematics.) We already know
that for us formulas are particular numbers and the set of all formulas is de-
fined in N by a formula Form ofPA. We get the following: tp is a formula iff
PAf- Form(p). More than that, reasonable logical operations are definable
by such formulas and their properties are formally provable. For example, let
us take the operation assigning to each pair tp, 'ljJ of formulas their implication
(tp -+ 'ljJ). There is a formula Impl(x, y, z) ofPA such that
-
PAf-
('ix, y)((Form(x) /\ Form(y))
-+
(:3!z) (Form(z) /\
/\Impl(x, y, z))) (here (3!x) means, as usual, "there is a unique x such
that..."); thus in PA, Impl defines a function assigning to each pair of
formulas-in-the-sense-of-PA another such formula, and
for each pair tp, 'ljJ of (actual) formulas,
PA f- Impl(':E.,7£,z) == (z = tp -+ 'ljJ).
In particular, in N Impl defines just the operation we started with. Infor-
mally we shall denote, inside PA, the unique z satisfying Impl(x, y, z) by
x~y. Then the last formula can be written as
PA f- ':E.~7£ = tp -+ 'ljJ.
The same holds for other connectives and similar operations; in particular
for substitution Subst(tp, t) of a term t for the first variable in a formula tp,
PA f- Subsf(':E.' i) = Subst(tp, t).
Note that all this take place in the crisp arithmetic PA or, equivalently, in
PA(L'i). The expert knows and the non-expert will believe that our infor-
mal use of function symbols 'iL, xetc. is tolerable and can be eliminated,
but simplifies the presentation. Next we show that GOdel's diagonal lemma
generalizes for PA(C'i)Tr:

270
CHAPTER NINE
Lemma 9.3.13 For each formula cp(x) of PA(CV)Tr with exactly one vari-
able x there is a sentence (closed formula) 'l/J such that
PA(CV)Tr f- 'l/J == cp('!k).
Proof"
We use the notation above; in addition, inside PA(CV)Tr, xdenotes
the x-th (formalized) numeral. We just check the usual proof. Let X(x) be
'l/J(Subst"(x, x)), i.e. 'l/J applied to the result of substituting the x-th numeral
for the first variable of x. Let cp be X(K), i.e. Subst(X, K). Then
PA(CV)Tr f- cp == X(K) == 'l/J(Subst"(K, i) == 'l/J(Subst(X, X)) == 'l/J(p).
o
9.3.14 Proof of 9.3.9. For each CV we can construct the usual liar formula
(using the diagonal lemma for QA(CV)Tr, see below), i.e. we get a sentence
>. such that our theory proves>. == -,>.. But this is contradictory over both GV
and IIV since they both prove (>. --+ -,>.) --+ -,>. (and hence (...,>. --+ >.) --+
...,...,>.).
Remark 9.3.15 In the rest of the section we shall deal with PA(LV)Tr (and
its strengthenings).We shall use the dot notation for the following operations:
strong disjunction cpY...'l/J: PAf- f£Y...'!k = cpY...'l/J;
iterated strong disjunction ncp (i.e. cpY... . .. f£' n times):
PA f- n.xf£ = ncp;
Definition 9.3.16 The modest liar formula is the formula>. (existing by the
diagonal lemma) such that
PA(LV)Tr f- >. == (3x)Tr(xx-:,5.).
(Thus>. says: for some x, the x-th multiple of my negation is true.)
Now we are ready to prove Theorem 9.3.11.
9.3.17 Proofof9.3.ll.
Proof"
(l) Suppose on the contrary that M was an expansion of N to a
model of PA(LV)Tr. If II>.IIM = 1, then II...,>'IIM = °and for each k, Ilk x
...,>.IIM = 0, so IITr(kx-:'~)IIM =°and 1I(3x)Tr(xx-:'~)IIM = 0, giving
II>.IIM = 0, a contradiction.

MISCELLANEA
271
Thus it must be the case that II..\IIM < 1. But then II-,..\IIM > 0, say
II-,..\IIM 2: kfor some k. Hence Ilk x -,..\IIM = 1, IITr(l£x';A)IIM = 1, so
11(3x)Tr(xx';A)IIM = 1 and II..\IIM = 1, a contradiction. Therefore there is
no such M.
(2) We show that each finite subtheory of PA(LV)Tr2 has a (standard)
model. Let <PI, ... ,<Pm be sentences of PA(LV)Tr2. Define IITr(rr) 11M = °
for each n # <PI,'"
,<Pm; let IITr(<pi)IIM = Xi (to be determined shortly).
We denote by M(x) the model given by x = (Xl, ... ,xm ). By 5.4.29,
II<piIIM(x) is a continuous function, fi(x) say, ofx. Obviously, Ii : [0, 1]m -+
[0,1]. By Brouwer's fixed point theorem ([18],[191]), there is a fixed point
el,""
em such that for each i, ei = Ii(e). Thus M(e) is the desired model:
it satisfies PA(LV), <Pi == Tr(<pi) and, by standardness, the sentences true in
M are closed under the induction rule.
Thus PA(LV)Tr2 is consistent, i.e. does not prove falsity Q.
Therefore PA(LV)Tr2 has a model by 5.4.24.
0
Remark 9.3.18 It follows from the dequotation that for concrete formulas
<P, '1/;, Tr commutes with connectives, i.e.
PA(LV)Tr f- Tr(<p -+ '1/;) == (Tr(~) -+ Tr('!l!..)) ,
Tr(<p&'I/;) == (Tr(~)&Tr('!l!..)),
and therefore also
PA(LV)Tr f- Tr(<p':L'I/;) == (Tr(~)y"Tr('!l!..))
etc. The corresponding formal axioms
Tr(x-;'y) == (Tr(x) -+ Tr(y))
Tr(x&y) == (Tr(x)&Tr(y))
are NOT provable in PA(LV)Tr2, moreover:
Theorem 9.3.19 PA(LV)Tr2 extended by the axioms (*), (**) is inconsis-
tent.
The interested reader may consult the proof of this in [89].
9.4.
CONCLUDING REMARKS
Let us now summarize what we have achieved, recall some open problems
and indicate some further directions of research.

272
CHAPTER NINE
9.4.1 Propositional calculus. We have developed logical systems with se-
mantics based on a continuous t-nonn as the truth function of the conjunction
& and the residuum of the t-nonn as the truth function of the implication
-7. We have fonnulated the basic logic BL, sound for all those systems, and
shown that BL is rather rich in consequences. We have introduced a variety of
BL-algebras and shown that BL is sound and strongly complete for semantics
based on all BL-algebras. We have developed the logics L, G, II extending
BL (Lukasiewicz, GOdel, product logic) and shown their completeness with
respect to the corresponding standard semantics given by the corresponding
particular continuous t-nonn. (Strong standard semantics for G; for L and
II only strong standard completeness for finitely axiomatized theories.) We
have investigated several variants and extensions, notably Rational Pavelka
logic RPL, extending L by rational truth constants. It satisfies Pavelka-style
completeness (provability degree equals truth degree). We have detennined
the computational complexity of the set of I-tautologies, positive tautologies,
I-satisfiable and positively satisfiable fonnulas for each of the three logics
and shown that everything is as expected (NP-complete, co-NP-complete).
9.4.2 Predicate calculus. For each predicate language I and each BL-algebra
L we have L-interpretations M of I; predicates are interpreted as fuzzy re-
lations on a given domain M and constants as some elements of M. An in-
terpretation is safe if the truth value 1I<pIIM,v is defined (by Tarski-style con-
ditions) for each fonnula <P and each evaluation v of object variables. We
have five axioms for quantifiers; together with the axioms of BL they fonn
the axiom system of BLV' (basic predicate logic). Similarly for LV', GV', IIV'.
The logic BLV' is strongly complete with respect to safe L-interpretations
over arbitrary BL-algebras L. Standard strong completeness (with respect to
interpretations over the standard semantics) holds for GV'; by contrast, nei-
ther LV' nor IIV' has a recursive axiomatization that would be complete with
respect to the corresponding standard semantics. Rational Pavelka predicate
logic RPLV' has Pavelka-like strong completeness. This shows that the set of
all its I-tautologies (over the standard semantics) is a II2 set in the sense of
the arithmetical hierarchy; moreover, it is II2-complete. Several other results
on the position of various important sets of fonnulas in the arithmetical hier-
archy were obtained. We have presented the many-sorted variant of all these
systems and also the axiomatic theory of similarity (fuzzy equality).
9.4.3 Applications to approximate reasoning and fuzzy control. We fonnal-
ized the popular expression "X is A" as A(X) (A unary predicate, X con-
stant); and later as X
~ A, i.e. (V'x)(X(x) -7 A(x)), where now X, A are
predicates). An "IF-THEN RULE" becomes an implication A(X) -7 B(Y).
First we investigated Zadeh's generalized modus ponens (and similar things).

MISCELLANEA
We presented it in a purely syntactic form, as an implication
[(A(X) -+ B(Y)&A*(X)&Comp]-+ B*(Y)
273
provable in BLV, where Camp is a formula defining B* from A, B, A*. Here
and on similar places we stressed the fuzzy reading: the formula says much
more than just "if [... ] is true then B*(Y) is true too" namely "the degree of
truth of [... ] is a lower bound of the degree of truth of B*(Y)".
Then we turned to systems of "IF-THEN rules". We first based our for-
malism on the notion of a fuzzy function F (using the notion of a similarity)
and n examples F (Ci' di) (Ci arguments, di images). Ai(x) said x rv Ci, Bi(y)
said Y rv di. We defined Mamdani's formula MAMD as V(Ai(X)&Bi(Y))
and the system RULES of rules as ;\(Ai(x) -+ Bi(y)). We showed the in-
clusion M AMD <;; F <;; RULES (also to be read fuzzily!). We showed that
Vi A;(x) (saying that x very much satisfies some Ai) implies MAMD ==
RULES. We defined a theory Fe (fuzzy control) over BLV containing Ai,
Bi,A*, B* and having several axioms, among them a definition of B* from
the other predicates. We showed things like
FC r- (RULES& VA;(x)&A*(x)) -+ B*(y)
FC r- (A* = Ai&At i= 0) -+ Bi <;; B*
FC r- (A* = Ai&Ai pairwise disjoint) -+ B* <;; Bi
(Here we are rather informal; e.g. A* = Ai stands for (Vx)(A*(x) =
Ai(x)) etc. Read fuzzily!) This shows that fuzzy control indeed has logical
aspects.
9.4.4 Generalized quantifiers and modalities. We understood modalities as
hidden quantifiers. Four types of calculi were investigated, in dependence
on the semantics: crisp or fuzzy models, and finite models or model of both
finite and infinite cardinality. For all four types we investigated analogs of
the logics 55 (of knowledge), KD45 (of belief) and then the logics with the
modality /quantifiers "probably" (read "many" in the case of finite models).
We focused our attention on the question of complete axiomatizability.
9.4.5 Miscellanea. We developed the Takeuti-Titani system TTV with three
conjunctions and three implications (the system has an infinitary deduction
rule), Pavelka's non-truth-functional fuzzy logics, and finally we presented
an analysis of the liar's paradox and undefinability of truth in arithmetic. This
last investigation has shown that fuzzy logic can be well understood as a
branch of "philosophical logic"; it does not make the old questions and para-
doxes trivial but brings new insight and understanding.

274
CHAPTER NINE
The reader is advised to have a look at the conclusion of Ch. 1 Sec. 1 and
see if the claims made for fuzzy logic are now justified.
Let us now tum to open problems and topics of future research. First note
that the index contains an entry "problem" referring to pages containing some
open problems. Here we list both problems occuring explicitly in the text
together with some other problems and topics.
9.4.6 Propositional calculus.
(1) Is BL complete with respect to t-tautologies? (See 2.3.23 and [72].) If
not find an elegant axiomatization BLt of the set of all t-tautologies.
(2) Characterize the intersection of our logics L, G, n (Le. formulas prov-
able in all these three logics) as well as the intersection of any two of them.53
(It is clear that the intersection of G and n is stronger than BL - e.g. (<p 1\
-'<p) ---t 0 is provable both in G and in n but not in BL.)
(3) Investigate logics given by a particular t-norm different from the three
famous ones (Lukasiewicz, GOdel, product). This is currently the topic of a
Master's thesis.
(4) Investigate the extension of basic logic with a new negation satisfying
the double negation axiom (intended semantics: any t-algebra expanded by
the involutive negation 1 - x), i.e. the logic of continuous t-norms and t-
conorms. Note that the forthcoming paper [51] contains important results of
this kind.
(5) Investigate logics with implications that are not R-implications (residua
of continuous t-norms), e.g. so-called S-implications: one has a continuous t-
norm * a continuous involutive negation n (Le. satisfying n(n(x)) = x and
decreasing) and the corresponding t-conorm x E9 y = n(n(x) * n(y)). One
defines x=? y as n(x) E9 y. Note that such a logic may have no I-tautologies
if x * y is min(x, y) and n(x) is 1 - x then the evaluation giving
~ to all
variables gives ~ to all formulas. This is not inviting; but note that this logic
does have positive tautologies (never taking the value 0) and these are exactly
all tautologies of classical propositional calculus. See [204], [112], [20] for
details.
9.4.7 Predicate calculus
(6) A formula <p is a [0,1]L-tautology of Lukasiewicz predicate logic LV
iff 1<pIRPL = 1; but thanks to the non-axiomatizability of LV there are [0, 1lL-
tautologies of LV not provable in LV. Give a natural example.
(7) Is the set of all [0, 1]rr-tautologies of TIV a TI2-set? (cf. the beginning
of Ch. 6 Sec. 3)
53 This question was asked by the anonymous referee.

MISCELLANEA
275
(8) Let <p, v be formulas, x a variable not free in v. Is the formula
(Vx)(<p&v) == ((Vx)<p&v) provable in lTv' or even in BLV? It is provable
in GV and LV (see 5.1.19, 5.3.5,5.4.14,5.4.32).
(9) Investigate predicate calculi corresponding to propositional calculus
mentioned above in (3),(4) as well as various subsystems of the logic TIV
(see Ch. 9 Sec. 1).
9.4.8 Approximate reasoning. We have two rather general problems.
(10) Investigate deductive properties of M AMD with & replaced by 1\
(cf.7.2.23).
(11) Apply the framework of Ch. 7 to investigate the theory FC (of fuzzy
control) over logics stronger than BLV - i.e. LV, GV, IN. What specific results
can one obtain? (Admittedly, this is a long-term task.)
Modal logics
(12) Do the axioms (01) - (03), (<>1) - (<>3) completely axiomatize the
modal logic S5(C)? See 8.3.16.
(13) Is the logic S5([0,I]a) decidable (8.3.21)? And what can be said
about 85([0, 1]IT) (8.3.39)?
(14) Investigate the fuzzy logic of belief FMBEL, fuzzifying KD45 (see
8.3.43).
9.4.9 Generalized quantifiers.
(15) Do we have Pavelka-like strong completeness for FP(RPL0) (see
8.4.19)? The same question for FMany(RPL0) (8.4.21).
(16) Is the fuzzy logic RPLVJ Pavelka complete with respect to proba-
bilistic (not just weak probabilistic) models? See 8.5.15.
(17) Is the set of [0,1]-tautologies of RPLVJ in 112? See 8.5.17.
(18) Is RPLVJ -fin axiomatizable? See 8.5.19.(Solved: It is not.)
(19) Investigate fuzzy multitudinal quantifiers (see 8.5.25).
(20) Investigate an alternative semantics of V, :3 based on infinitely iterated
t-form diffrent from min (t-conorm diffrent from max). See 8.5.25.
9.4.10 Comparative truth. As mentioned above our investigation of the liar's
paradox in Sec. 3 of the present chapter appears to show the importance of
fuzzy logic as philosophical logic. This book offers no philosophical discus-
sion (since the author is not a philosopher);54 but hopefully offers foundations
for a philosophical discussion on fuzzy logic as a formal system of deduction
54 The reader may be interested in some informal discussion on fuzzy logic pre-
sented in [88], [78]. The latter paper is a reaction to an earlier criticism of fuzzy logic
by Parikh, see [159, 160].

276
CHAPTER NINE
under vagueness and on a comparative notion of truth. Such a discussion,
based on the formal results presented here, remains a topic for further re-
search. The paper [135] may be relevant; see also the discussion in [22]. To
close let me call the reader's attention to two quotations from Aristotle [7]
tempting us to ask whether Aristotle was the first fuzzy logician.55
(1) Categories Ch. 8, lOb. "Qualities admit of variation of degree. White-
ness is predicated of one thing in a greater or less degree than of another. This
is also the case with reference to justice. Moreover, one and the same thing
may exhibit a quality in a greater degree than it did before: if a thing is white,
it may become whiter."
(2) Metaphysics Bk. 4, Ch. 4, 1008. "Again, however much all things may
be 'so and not so', still there is a more and a less in the nature ofthings; for we
should not say that two and three are equally even, nor is he who thinks four
things are five equally wrong with him who thinks that they are thousand. If
then they are not equally wrong, obviously one is less wrong and therefore
more right. If then that which has more of any quality is nearer the norm,
there must be some truth to which the more true is nearer."
55 I am grateful to Ms. K. Bendova for calling my attention to the first quotation;
the second is found in [22].

CHAPTER TEN
HISTORICAL REMARKS
Here I refer to important works concerning the topics of the present book.
Even if I have tried to be as complete as possible, I cannot hope to have cov-
ered everything; I apologize for all omissions. On the other hand, an attempt
to collect all publications concerning fuzzy logic (in both broad and narrow
senses) would lead to a special publication; note that e.g. the book of Klir and
Yuan [115] contains 1731 references! We thus only select references that are
relevant to fuzzy logic in the narrow sense.
10.1.
UNTIL THE FORTIES.
Even if there are some papers in the XIX century that are more or less rele-
vant to many-valued logic, as [164] and [129] and, as Lukasiewicz mentions
in [126], even Aristotle admitted that statements about the future may be nei-
ther true nor false, the real beginning of many-valued logic is the work of
Jan Lukasiewicz; the first mention of a three-valued logic is in his speech
published as [123]; this was elaborated in [124]56. The first occurence of
an infinitely valued logic seems to be in [125]; this is further discussed in
[127], where the authors also refer to Lukasiewicz's conjecture that the set
of five axioms (our (Ll) to (L4) plus the prelinearity axiom) is complete
for I-tautologies of the infinitely-valued (Lukasiewicz) logic. Wajsberg [208]
proves completeness of an axiom system of the three-valued Lukasiewicz
logic and claims to have a completeness proof for the infinitely valued one;
but his proof has been never published. In [126] Lukasiewicz discusses philo-
sophical problems of his many-valued logic; it is interesting that his motiva-
tion for the third truth value was modal, Le. he understood it as "possible"; he
defined the formula "possibly cp" (Mcp in his symbolism) to be -'Cp -+ cp and
verified sOlJle classical formulas like cp -+ M cp. This may appear naive today
since we know that modality is not a truth-functional connective; but do not
forget that Kripke models came only 40 years later. Another remarkable thing
is that the only connectives Lukasiewicz uses are implication and negation; in
particular, what we call "Lukasiewicz's conjunction" seems never to appear
explicitly in his writings. But note that Frink [53] uses the term "Lukasiewicz
arithmetical conjunction" for what we call Lukasiewicz conjunction.
56 See [17] for English versions ofLukasiewicz's works.
277

278
CHAPTER TEN
Moisil began the algebraic study ofLukasiewicz many-valued logics in the
early forties. The work of Moisil (including his contributions to intuitionism
and residuated lattices) is collected in the volume [142].57
Independently of Lukasiewicz, Post investigated finitely-valued calculi
[166], apparently without any philosophical aims, but with an interest in func-
tional completeness.
Heyting [96] introduced a three-valued propositional calculus related to
intuitionistic logic. G6del [60] has an infinite hierarchy of finitely-valued sys-
tems; his aim is to show that there is no finitely valued propositional calculus
that is sound and complete for intuitionistic logic. What we call GOOel logic
is just the infinite-valued version of his systems.
We mention two papers not related to logic but important for historical
reasons. Menger [137] defines t-norms (in a way different from the presently
used definition); and Dilworth and Ward [34] is an early paper on residuated
lattices.
Finally we mention three papers of lesser importance for us, just since
they are rather old: Bochvar [15], Reichenbach [171] and, surprisingly, Zich's
paper in Czech [222].
10.2. THE FIFTIES
McNaughton's paper [136] characterizes functions definable by formulas of
infinitely valued Lukasiewicz logic (as continuous mappings of [O,l]n to
[0,1] that are piecewise linear with integer coefficients). The paper [143]
contains the first proof (known to the author) of the characterization of con-
tinuous t-norms (our 2.1.16), in a more general context of semigroups on a
compact manifold. The representation of Lukasiewicz's t-norm by restricted
product in [143] is crucial for our 2.1.22 (2) and through this for our em-
bedding of Lukasiewicz into product logic (4.1.16). The year 1958 was very
fruitful: Rose and Rosser [177] gave the first (published) proof of the com-
pleteness of Lukasiewicz propositional logic (this was preceded by [175],
[176]) and Chang started a series of papers [24] (proving the axiom of pre-
linearity to be redundant as an axiom of Lukasiewicz logic; the same result
appears to be obtained by Meredith [138]), [23] (introducing the notion of an
MV-algebra), [25] (giving an algebraic completeness proof of Lukasiewicz
propositional logic).
In 1959, Dummett publishes his [46], proving completeness of infinite-
valued Gooellogic.
57 I am grateful to R. Cignoli and Ms. L. Iturrioz for calling my attention to the
work of Moisil.

HISTORICAL REMARKS
279
Let us mention some other papers: Kleene [111] uses a three-valued logic
in his discussion ofrecursive functions; Church [29] uses some finitely valued
logics in proofs of independence of axioms of systems of two-valued logic.
Skolem [190] works with infinitely valued set theory (!). Rose [174] has an
eight-valued logic and Takekuma [194] a nine-valued.
10.3. THE SIXTIES
The series of Chang's works continued with joint works with Keisler [26, 27].
The latter is a book on general model theory of infinitely-valued predicate
calculi satisfying certain conditions of continuity (e.g. Lukasiewicz predicate
calculus). Scarpellini [181] showed that the latter calculus is not recursively
axiomatizable; Hay [95] gave a non-finitary syntactic characterization of of
its I-tautologies. See also Mostowski [145], Belluce-Chang [13]58, Belluce
[12]. Let us also mention Rutledge [180] as an early paper on infinitely valued
predicate calculi. Hom [103, 102] presented a completeness result for Gooel
predicate logic; he explicitly formulated the axiom that we call(V3).
The notion of t-norms, in the presently used meaning, was introduced by
Schweizer and Sklar in [183]; Ling [122] (re)proved the characterization of
continuous t-norms.
1965 is the year when fuzzy sets were born: Zadeh published his [211].
Goguen [65] seems to be the first paper on fuzzy logic; note that in that paper,
residuated lattices (under the name closgs) are introduced in the context of
fuzzy logic (or, as Goguen nicely says, the logic of inexact concepts). In [64]
Goguen studied fuzzy sets with values in a lattice.
The monograph of Rasiowa and Sikorski [169] contains much material
on algebraic structures relevant for many-valued logics, notably on algebras
we (and others) call Heyting algebras; Rasiowa and Sikorski prefer the name
pseudo-boolean algebras. I mention also Ackermann's monograph [1]. Ref.
[165] is on the deduction theorem.
lOA.
THE SEVENTIES
In 1970, selected works of Lukasiewicz appeared [17] edited by Borkowski.
Rasiowa [168] worked with an infinite valued predicate calculus. Scott [185]
discussed possible meaning of many truth values and gave an alternative com-
pleteness proof of Lukasiewicz logic.
58 Shepherdson proved that the soundness theorem as presented in this paper is
incorrect

280
CHAPTER TEN
Of Zadeh's publications we mention [214] (on linguistic variables) and
[215] (on fuzzy logic). In his [213] he introduces generalized modus ponens
and compositional rule of inference. Chang and Lee [28] discuss the proposi-
tional calculus with max-disjunction, min-conjunction and the negation 1 - x
and call it fuzzy logic.
Pavelka's series of papers [163] is a very important contribution to the
syntax and semantics of fuzzy logic, starting on a very abstract level and
ending by a completeness theorem for his system of graded Lukasiewicz-
style logic with real truth constants. The work is pioneering in many aspects;
the only disadvantage is the fact that the author did not know of the work
on completeness of Lukasiewicz propositional logic which made his system
unnecessarily complicated.
Also note that in 1979 Rodriguez [172] introduced the notion ofWajsberg
algebras. Johnstone [106] discusses the axiom of prelinearity in the context
of deMorgan rules. Lee [121] it the first paper on resolution in fuzzy logic.
10.5.
THE EIGHTIES
Ragaz's dissertation [167] contained many results on arithmetical complexity
of many-valued (Lukasiewicz) logic, notably the result on the Il2-completeness
of I-tautologies of Lukasiewicz predicate calculus, improving Scarpellini's
result. Font et al. [52] elaborates the theory of Wajsberg algebras. The paper
of Takeuti and Titani [195] presented a very important contribution to GOdel
logic (even if the name GOdel is not mentioned); our presentation of the ax-
iomatizability of GOdellogic is an elaboration of [195]. I note that Professor
H. Ono has informed me on Takano's [193] where the author proved strong
completeness of GOdel predicate logic with an axiom system equivalent to
ours, namely intuitionist logic, prelinearity and ('13). Mundici's [149] started
a series of his papers related to MV-algebras and Lukasiewicz logic; here
he introduced the notion of a good sequence, crucial for his proof of Chang's
representation oflinearly ordered MV-algebras as intervals in linearly ordered
Abelian groups. We refer also to [150] where Mundici proves the set of all
I-tautologies of Lukasiewicz propositional calculus to be co-NP-complete.
Of the extensive work of Dubois and Prade we refer to [36, 37, 38]; from
the work ofBandler and Kohout [10,11]. Zadeh discussed the notion offuzzy
logic in [217, 219]. Alsina, Trillas and Valverde [6, 203] discussed fuzzy
connectives. Mukaidono's [146, 147] are basic papers for fuzzy Prolog (see
also [148].
Gottwald's monograph [67] has long been the basic work on many-valued
logics. Other important monographs: Schweizer and Sklar [184]; Klir and
Folger [114]; for the history of Polish logic Wolenski [209]. Finally I mention

HISTORICAL REMARKS
281
Novak's [153], his first paper on Pavelka-style predicate calculus (see the next
subsection).
10.6. THE NINETIES
Of Zadeh's writings see [220,221]. Dubois and Prade [41,42] offer a broad
survey of the understanding of fuzzy logic in the fuzzy community. Also the
monograph Klir-Yuan [115] brings detailed information. Of the numerous
literature on fuzzy IF-THEN rules let us cite [44]. There are several papers
on fuzzy logic programming; see e.g. Klawonn-Kruse [110], Vojt£-Paulik
[206].
From the work of Mundici and his group we refer to [151], [31] (our proof
of Chang's representation theorem is based on the latter paper) and to the
book in preparation by R. Cignoli, I. d'Ottaviano and D. Mundici [30]. In
[152], Mundici studies analogues of probability on MV-algebras.
Novak's attempt [153] to develop Pavelka-style predicate calculus suf-
fered from a mistake, improved in [154], but the system was similarly compli-
cated as Pavelka's approach. I obtained a simplification of Pavelka's proposi-
tional logic (by eliminating irrational truth constants, making use of
Lukasiewicz's axioms and by some small tricks) in [74] and of its predi-
cate logic version in [77] (see also [75]). Independently, Novak presented a
simplification of his system in [156]
Hohle's paper [98] was very inspiring in our development of the Basic
logic BL. Proofs of several formulas in Chapter 2 Section 2 have their coun-
terparts in [98]. See also his [99, 100]. The propositional product logic was
axiomatized in [80]; [79] discusses the relation of fuzzy logic to probability. I
also refer to [83, 84] for logics of both vagueness and uncertainty (many-
valued modal logics). Baaz's paper [8] is a very valuable contribution to
GOdel logic; I have made extensive use of his .6.-connective in Chapters 2,
3. Hahnle's [71] proves the NP-completenes of satisfiability in Lukasiewicz
logic using Mixed Interger Programming; our presentation is based on his.
Hajek-Kohout [87] elaborate [10] in relation with multitudinal quantifiers
(see also [76]). The theory of t-norms is developed e.g. in Butnariu-Klement
[21], De Baets-Mesiar [33], Mesiar [139, 141, 140]; the forthcoming mono-
graph [113] by Klement, Mesiar and Papp will be extremely informative.
Gottwald's second monograph [68] pays much attention to fuzzy control
and relational equations but also contains material about t-norms and corre-
sponding logics; it is well written and can be fully recommended (caution:
Proposition 1.27 is wrong, see here 5.3.6).
The monograph [118] by Kruse et al. (English translation [119]) contains,
among other things, an analysis of fuzzy control in terms of similarity rela-

282
CHAPTER TEN
tions; our presentation is partially dependent on theirs. See also Klawonn-
Castro [109].
Paris's monograph [162] concentrates on probabilistic theories of belief
but has a chapter on "truth-functional belief' containing basic information
on continous t-norms and related connectives. Its criticism oftruth-functional
belief is fully justified; we have stressed repeatedly that for us fuzzy logic is
a logic of degrees of truth, not of degrees of belief. For a recent discussion on
fuzzy logic (in the narrow sense) see [88] and [161].
The second paper by Takeuti and Titani on fuzzy logic [196] is the base of
our Chapter 9 Section 1. Baaz et al. [9] study the embedding of Lukasiewicz
logic into product logic.
Dubois, Prade and Yager published an excellent anthology [45] of im-
portant older papers on fuzzy sets and fuzzy logic. Klir and Yuan published
collected papers by L.Zadeh [116].

REFERENCES
1.
ACKERMANN, R. J. An Introduction to Many-valued Logics. Dover, New
York,1967.
2.
ADILLON, R. J., AND VERDU, V. Product logic and the deduction theorem.
Math. Preprint Series 232, Universitat de Barcelona, 1997.
3.
ADLASSNIG, K.-P.
Approaches to computer-assisted medical diagnosis.
Computers in Biology and Medicine 15 (1985), 315-335.
4.
ADLASSNIG, K.-P. Fuzzy set theory in medical diagnosis. IEEE Transaction
on Systems, Man, and Cybernetics SMC-16, 2 (1986),260-265.
5.
ADLASSNIG, K.-P. Update on CADIAG-2: a fuzzy medical expert system
for general internal medicine. In Progress in Fuzzy Sets and Systems (1990),
W. H. Janko, M. Roubens, and H.-I. Zimmermann, Eds., Kluwer Academic
Publishers, pp. 1-6.
6.
ALSINA, C., TRILLAS, E., AND VALVERDE, L. On some logical connectives
for fuzzy set theory. Journal ofMathematical Analysis and Applications 93,
1 (1983), 15-26.
7.
ARISTOTLE. The Basic Works ofAristotle, edited and with an introduction by
Richard McKeon. Random House, New York, 1941.
8.
BAAZ, M. Infinite-valued GOdellogics with 0-I-projections and relativiza-
tions. In GODEL'96 - Logical Foundations ofMathematics, Computer Sci-
ence and Physics; Lecture Notes in Logic 6 (1996), P. Hajek, Ed., Springer-
Verlag, pp. 23-33.
9.
BAAZ, M., HAJEK, P., KRAJiCEK, J., AND SVEJDA, D. Embedding logics
into product logic. Studia Logica (to appear).
10.
BANDLER, W., AND KOHOUT, L. J. Semantics of implication operators and
fuzzy relational products. Int. Journal of Man-Machine Studies 12 (1980),
89-116.
11.
BANDLER, W., AND KOHOUT, L. J. Unified theory of multiple-valued log-
ical operators in the light of the checklist paradigm. In Proc. of the 1984
IEEE Conference on Systems, Man and Cybernetics (New York, 1984), IEEE,
pp. 356-364.
12.
BELLUCE, L. P. Further results on infinite valued predicate logic. J. Symb.
Logic 29 (1964), 69-78.
13.
BELLUCE, L. P., AND CHANG, C. C.
A weak completeness theorem on
infinite valued predicate logic. Jn. Symb.Logic 28 (1963),43-50.
14.
BENDOVA, K., AND HAJEK, P. Possibilistic logic as a tense logic. In Quali-
tative Reasoning and Decision Technologies (Proceedings ofQUARDET'93)
(Barcelona, 1993), N. P. Carrete et aI., Eds., CIMNE, pp. 441-450.
15.
BOCHVAR, D. A. Ob odnom trehznacnom iscislenii i ego primenenii k anal-
izu klassiceskogo rassirennogo funkcional'nogo iscislenia (On a three-valued
283

284
BIBLIOGRAPHY
calculus and its application to the analysis ofthe extended functional calculus,
in Russian). Matem. Sbomik n.s. 4 (1938), 287-308.
16.
BORGER, E., GRADEL, E., AND GUREVICH, Y.
The Classical Decision
Problem. Springer-Verlag, 1997.
17.
BORKOWSKI, L.
J. Lukasiewicz: Selected Works. Studies in logic and the
foundations of Mathematics. North-Holland PubI. Compo Amsterdam and
PWN Warszawa, 1970.
18.
BROUWER, L. E. J. Uber Abbildungen von Mannigfaltigkeiten. Math. Ann.
71 (1910),97 -115.
19.
BURGESS, J. P. Basic tense logic. In Handbook ofPhilosophical Logic, Vol.
II (Dordrecht, 1984), F. G. D. Gabbay, Ed., Reidel, pp. 89-133.
20.
BUTNARIU, D., KLEMENT, E. P., AND ZAFRANY, S. On triangular norm-
based propositional fuzzy logics. Fuzzy Sets andSystems 69 (1995), 241-255.
21.
BUTNARIU, D., AND KLEMENT, P. Triangular Norm-Based Measures and
Games with Fuzzy Coalitions. Kluwer, 1993.
22.
CASARI, E. Conjoining and disjoining at different levels. In Logic and Sci-
entific Methods, Volume One of the Tenth Intemational congress of Logic,
Methodology and Philosophy ofScience (Florence, 1997), M. L. dalla Chiara
et aI., Ed., Kluwer, pp. 261-288.
23.
CHANG, C. C. Algebraic analysis of many-valued logics. Trans. A.M.S. 88
(1958),467-490.
24.
CHANG, C. C. Proof of an axiom of Lukasiewicz. Trans. A.M.S. 87 (1958),
55-56.
25.
CHANG, C. C. A new proofofthe completeness ofthe Lukasiewicz's axioms.
Trans. A.M.S. 93 (1959), 74-80.
26.
CHANG, C. C., AND KEISLER, H. J. Model theories with truth values in an
uniform space. Bull. Amer. Math. Soc. 68 (1962), 107-109.
27.
CHANG, C. C., AND KEISLER, H. J. Continuous Model Theory. Princeton
Univ. Press, 1966.
28.
CHANG, C. L., AND LEE, R. C. T. Some properties of fuzzy logic. Infor-
mation and Control 19 (1975), 417-431.
29.
CHURCH, A.
Introduction to Metamathematics I.
Princeton Univ. Press,
1956.
30.
CIGNOLI, R., D'OTTAVIANO, I. M. L., AND MUNDICI, D. Algebraic foun-
dations of many-valued reasoning, book in preparation.
31.
CIONOLI, R., AND MUNDICI, D. An elementary proof of Chang's complete-
ness theorem for the infinite-valued calculus of Lukasiewicz. Studia Logica
58 (1997), 79-97.
32.
DANIEL, M., HAJEK, P., AND NGUYEN, P. H. CADIAG-2 and MYCIN-like
systems. Artificial Intelligence in Medicine 9 (1997), 241-259.
33.
DE BAETS, B., AND MESIAR, R. Residual implicators with respect to con-
tinuous t-norms.
In Proceedings of EUFIT'96 (Aachen, Germany, 1996),
pp.27-31.
34.
DILWORTH, R. P., AND WARD, M. Residuated lattices. Trans. A.M.S. 45
(1939),335-354.

BffiLIOGRAPHY
285
35.
DRIANKOV, D., HELLENDOORN, H., AND REINFRANK, M. An Introduction
to Fuzzy Control. Springer-Verlag, Berlin Heidelberg, 1993.
36.
DUBOIS, D., AND PRADE, H. Fuzzy Sets and Systems: Theory and Applica-
tions. Academic Press, New York, 1980.
37.
DUBOIS, D., AND PRADE, H. Fuzzy logics and the generalized modus po-
nens revisited. Cybernetics and Systems 15 (1984), 293-331.
38.
DUBOIS, D., AND PRADE, H. Evidence measures based on fuzzy informa-
tion. Automatica 31 (1985),547-562.
39.
DUBOIS, D., AND PRADE, H. Fuzzy cardinality and the modelling of impre-
cise quantification. Fuzzy Sets and Systems 16 (1985), 199-230.
40.
DUBOIS, D., AND PRADE, H. Possibility Theory. Plenum Press, New York,
1988.
41.
DUBOIS, D., AND PRADE, H. Fuzzy sets in approximate reasoning, part 1:
Inference with possibility distribution.
Fuzzy Sets and Systems 40 (1991),
143-202.
42.
DUBOIS, D., AND PRADE, H. Fuzzy sets in approximate reasoning, part 2:
Logical approaches. Fuzzy Sets and Systems 40 (1991), 203-244.
43.
DUBOIS, D., AND PRADE, H.
Fuzzy rules in knowledge-based systems
- modelling gradedness, uncertainty and preference. In An Introduction to
Fuzzy Logic Applications in Intelligent Systems, R. R. Yager and L. A. Zadeh,
Eds. Kluwer, 1992.
44.
DUBOIS, D., AND PRADE, H. Possibility theory as a basis for preference
propagation in automated reasoning. In IEEE Int. Conf on Fuzzy Systems
FUZZ-IEEE'92 (San Diego, 1992), pp. 821-832.
45.
DUBOIS, D., PRADE, H., AND YAGER, R. R., Eds. Readings in Fuzzy Sets
for Intelligent Systems (1993), Morgan Kaufman Publishers.
46.
DUMMETT, M. A propositional calculus with denumerable matrix. J. Symb.
Logic 24 (1959), 97-106.
47.
EBBINGHAUS, H. D., AND FLUM, J. Finite Model Theory. Perspectives in
Math. Logic. Springer-Verlag, 1995.
48.
EBBINGHAUS, H. D., FLUM, J., AND THOMAS, W. Mathematical Logic.
Springer-Verlag, New York, 1984.
49.
ELKAN, C. The paradoxical success of fuzzy logic. In Proceedings of the
Eleventh National Conference on ArtijicialIntelligence AAAr93 (1993), MIT
Press, pp. 203-244.
50.
ESTEVA, E, GARCIA, P., GODO, L., AND RODRIGUEZ, R. A modal ac-
count of similarity-based reasoning. International Journal of Approximate
Reasoning (1997). To appear.
51.
ESTEVA, E, GODO, L., AND HAJEK, P.
Residuated fuzzy logics with an
involutive negation. Submitted.
52.
FONT, J., RODRIGUEZ, A. J., AND TORRENS, A.
Wajsberg algebras.
Stochastica 8 (1984), 5-31.
53.
FRINK, O. New algebras oflogic. Amer. Math. Monthly 45 (1938),210-219.
54.
FUCHS, L. Partially Ordered Algebraic Structures. Pergamon Press, Oxford,
1963.

286
BffiLIOGRAPHY
55.
GABBAY, D., AND GUENTHNER, F. Handbook ofPhilosophical Logic, Vol.
II. Reidel, Dordrecht, 1994.
56.
GABBAY, D., AND GUENTHNER, F. Handbook ofPhilosophical Logic, Vol.
Ill. Reidel, Dordrecht, 1996.
57.
GABBAY, D. M. Tense logics with discrete moments oftime. Journ. Philos.
Logic 1 (1972),35-45.
58.
GABBAY, D. M. Model theory of tense logics. Annals ofPure and Applied
Logic 8 (1975),185-236.
59.
GERLA, G. Inferences in probability logic. Artificial Intelligence 70 (1994),
33-52.
60.
GODEL, K. Zum intuitionistischen Aussagenkalkiil. Anzeiger Akademie der
Wissenschaften Wien, Math. - naturwissensch. Klasse 69 (1932), 65-66. Also
in Ergebnisse eines matematischen Kolloquiums 4 (1933),40.
61.
GODO, L., AND HAJEK, P. On deduction in Zadeh's fuzzy logic. In IPMU'96
Information Processing andManagement ofUncertainty in Knowledge-Based
Systems (Granada, Spain, 1996), pp. 991-996.
62.
GODO, L., AND HAJEK, P.
Fuzzy inference as deduction. Int. Journal of
Applied Non-Classical Logic «to appear)).
63.
GODO, L., AND HAJEK, P. A note on fuzzy inference as deduction. In Proc.
Linz Seminar 1997 on fuzzy logic (Linz, Austria, to appear), D. Dubois et al.,
Ed.
64.
GOGUEN, J. A. L-fuzzy sets. 1. Math. Anal. and Applications 18 (1967),
145-174.
65.
GOGUEN, J. A. The logic of inexact concepts. Synthese 19 (1968-9),325-
373.
66.
GOTTWALD, S. Many-valued Logic. revised English version of Mehrwertige
Logik (to appear).
67.
GOTTWALD, S. Mehrwertige Logik. Akademie-Verlag, Berlin, 1988.
68.
GOTTWALD, S. Fuzzy Sets and Fuzzy Logic. Vieweg, Wiesbaden, 1993.
69.
GRATZER, G. Universal Algebra. Springer, Berlin, Heidelberg, New York,
1979.
70.
GUREVICH, Y. S., AND KOKORIN, A. I. Universal equivalence of ordered
Abelian groups (in Russian). Algebra i logika 2 (1963), 37-39.
71.
HAHNLE, R. Many-valued logic and mixed integer programming. Annals of
Mathematics and Artificial Intelligence 12, 3,4 (Dec. 1994),231-264.
72.
HAJEK, P. BL-logic and BL-algebras. submitted.
73.
HAJEK, P. Generalized quantifiers and finite sets. In Proc. Set Theory and
Hierarchy Theory 74. Politechnika Wroclav, 1977, pp. 91-104.
74.
HAJEK, P. Fuzzy logic and arithmetical hierarchy. Fuzzy Sets and Systems
73,3 (1995),359-363.
75.
HAJEK, P.
Fuzzy logic from the logical point of view.
In SOFSEM'95:
Theory and Practice ofInformatics; Lecture Notes in Computer Science 1012
(Milovy, Czech Republic, 1995), M. Bartosek, J. Staudek, and J. Wiedermann,
Eds., Springer-Verlag, pp. 31-49.

BIBLIOGRAPHY
287
76.
HAJEK, P. A remark on Bandler-Kohout products of relations. International
Journal ofGeneral Systems 25,2 (1996), 165-166.
77.
HAJEK, P. Fuzzy logic and arithmetical hierarchy II. Studia Logica 58 (1997),
129-141.
78.
HAJEK, P. Ten questions and one problem on fuzzy logic. Annals of Pure
and Applied logic (to appear).
79.
HAJEK, P., ESTEVA, E, AND GODO, L.
Fuzzy logic and probability. In
Uncertainty in Artificial Intelligence; Proceedings ofthe Eleventh Conference
(1995) (Montreal, Canada, 1995), P. Besnard and S. Hanks, Eds., pp. 237-
244.
80.
HAJEK, P., ESTEVA, E, AND GODO, L. A complete many-valued logic with
product-conjunction. Archivefor Math. Logic 35 (1996), 191-208.
81.
HAJEK, P., AND GODO, L. Deductive systems of fuzzy logic. In Fuzzy Struc-
tures Current Trends, R. Mesiar and B. Riecan, Eds., vol. 13 of Tatra Moun-
tains Mathematical Publications. Math. Inst. Slovak Acad. Sci. Bratislava,
1997, pp. 35-68.
82.
HAJEK, P., AND HARMANCOVA, D.
A many-valued modal logic.
In IPMU'96 Information Processing and Management of Uncertainty in
Knowledge-Based Systems (Granada, Spain, 1996), pp. 1021-1024.
83.
HAJEK, P., HARMANCOVA, D., ESTEVA, E, GARCIA, P., AND GODO, L.
On modal logics for qualitative possibility in a fuzzy setting. In Uncertainty
in Artificial Intelligence; Proceedings of the Tenth Conference (Seattle, WA,
1994). R. LOpez de Mantaras and D. Poole, Eds., pp. 278-285.
84.
HAJEK, P., HARMANCOVA, D., AND VERBRUGGE, R. A qualitative fuzzy
possibilistic logic.
International Journal of Approximate Reasoning 12
(1994),1-19.
85.
HAJEK, P., AND HAVRANEK, T. Mechanizing Hypothesis Formation (Math-
ematical Foundations for a General Theory).
Springer-Verlag, Berlin-
Heidelberg-New York, 1978.
86.
HAJEK, P., HAVRANEK, T., AND JIROUSEK, R. Uncertain Information Pro-
cessing in Expert Systems. CRC Press, Boca Raton, Florida, 1992.
87.
HAJEK, P., AND KOHOUT, L. Fuzzy implications and generalized quanti-
fiers. International Journal of Uncertainty, Fuzziness and Knowledge-Based
Systems 4,3 (1996),225-233.
88.
HAJEK, P., AND PARIS, J.
A dialogue on fuzzy logic. Soft Computing 1
(1997),3-5.
89.
HAJEK, P., PARIS, J., AND SHEPHERDSON, J. The liar paradox and fuzzy
logic, 1997. submitted.
90.
HAJEK, P., PARIS, J., AND SHEPHERDSON, J. Rational Pavelka predicate
logic is a conservative extension of Lukasiewicz predicate logic. Submitted.
91.
HAJEK, P., AND PUDLAK, P. Metamathematics of First-order Arithmetic.
Springer-Verlag, 1993. 460 pp.
92.
HAJEK, P., SOCHOROVA, A., AND ZVAROVA, J. GUHA for personal com-
puters. Computational Statistics & Data Analysis 19 (1995),149-153.

288
BIBLIOGRAPHY
93.
HAJEK, P., AND SVEJDA, D.
A strong completeness theorem for finite
theories in Lukasiewicz's logic. Tatra Mountains Mathematical Journal 12
(1997),213-219.
94.
HARMANEC, D., AND HAJEK, P. A qualitative belief logic. International
Journal ofUncertainty, Fuzziness and Knowledge-Based Systems 2, 2 (1994),
227-236.
95.
HAY, L.
Axiomatization of the infinite-valued predicate calculus.
Journ.
Symb. Logic 28 (1963), 77-86.
96.
HEYTING, A. Die formalen Regeln der intuitionistischen Logik. In Sitzungs-
berichte der Preussischen Akademie der Wissenschaften zu Berlin, Math. Kl.
Berlin, 1930, pp. 42-56.
97.
HOHLE, U.
The Poincare paradox and the cluster problem. In Trees and
Hierarchical Structures, Lect. Notes in Biomathematics 84, A. Dress and A. v.
Haeseler, Eds. Springer, 1990,pp. 117-124.
98.
HOHLE, U. Commutative residuated monoids. In Non-classical Logics and
their Applications to Fuzzy Subsets (A handbook of the mathematical foun-
dations ofthe fuzzy set theory), U. Hohle and P. Klement, Eds. Kluwer, Dor-
drecht, 1995.
99.
HOHLE, U. Enriched MY-algebras. Mathware & Soft Computing 2 (1995),
167-180.
100.
HOHLE, U. On the fundamentals of fuzzy set theory. J. Math. Analysis and
Applications 201 (1996),786-826.
101.
HOOVER, D. Probability logic. Ann. Math. Logic 14 (1978),287-313.
102.
HORN, A. Free L-algebras. J. Symb. Logic 34 (1969), 475-480.
103.
HORN, A. Logic with truth values in a linearly ordered Heyting algebra. J.
Symb. Logic 34 (1969), 395-408.
104.
HUGHES, G., AND CRESSWELL, M.
An Introduction to Modal Logic.
Methuen, London, 1968.
105.
IEEE Expert, August 1994. (special issue "A fuzzy logic symposium").
106.
JOHNSTONE, P. T. Conditions related to de Morgan's law. In Applications of
Sheaves. Lecture Notes in Math. 753 (1979), M. Fourman et al., Ed., Springer-
Verlag, pp. 479-491.
107.
KEISLER, J. Logic with the quantifier "there are uncountably many". Annals
Math. Log. 1 (1970), 1-93.
108.
KEISLER, U. J. Probability quantifiers. In Model-Theoretic Logics, 1. Bar-
wise and S. Feferman, Eds. Springer-Verlag, New York, 1985, pp. 539-556.
109.
KLAWONN, E, AND CASTRO, J. L. Similarity in fuzzy reasoning. Mathware
& Soft Computing 2 (1995), 197-228.
110.
KLAWONN, E, AND KRUSE, R. A Lukasiewicz logic based Prolog. Math-
ware & Soft Computing 1 (1994),5-29.
111.
KLEENE, S. C. Introduction to metamathematics. D. van Nostrand Company,
Inc., 1952.
112.
KLEMENT, E. P.
Operations on fuzzy sets and fuzzy numbers related to
triangular norms. In Proceedings ofthe Eleventh International Symposium on
Multiple-Valued Logic (Oklahoma, 1981), IEEE, New York, pp. 218-225.

BIBLIOGRAPHY
289
113.
KLEMENT, P., MESIAR, R., AND PAPP, L. Triangular norms. in preparation.
114.
KLIR, G. J., AND FOLGER, T. A. FuzzY Sets, Uncertainty, and Information.
Prentice-Hall, Englewood Cliffs, NJ, 1988.
115.
KLIR, G. J., AND YUAN, B. FuzzY Sets and FuzzY Logic: Theory and Appli-
cations. Prentice Hall PTR, Upper Saddle River, NJ, 1995.
116.
KLIR, G. J., AND YUAN, B., Eds. FuzzY Sets, FuzzY Logic, and FuzzY Sys-
tems: Selected Papers by Lotfi A. Zadeh. World Scientific, Singapore, 1996.
117.
KOLARZ, G., AND ADLASSNIG, K.-P. Problems in establishing the medi-
cal expert systems CADIAG-1 and CADIAG-2 in rheumatology. Journal of
Medical Systems 10, 4 (1986), 395-405.
118.
KRUSE, R., GEBHART, J., AND KLAWONN, F. FUzzY-Systeme. B. E. Teub-
ner, Stuttgart, 1993.
119.
KRUSE, R., GEBHART, J., AND KLAWONN, F. Foundations ofFuzzY Sys-
tems. John Willey, 1994.
120.
KRYNICKI, M., MOSTOWSKI, M., AND SZCZERBA, L. W., Eds.
Quan-
tifiers: Logics, Models and Computing, vol. I Surveys.
Kluwer Academic
Publishers, 1995.
121.
LEE, R. C. T. Fuzzy logic and the resolution principle. Jour. Assoc. Comput-
ing Machinery 19 (1972), 109-119.
122.
LING, C. H. Representation of associative functions. Publ. Math. Debrecen
12 (1965), 182-212.
123.
LUKASIEWICZ, J. Farewell lecture at Warsaw University. Warszawa, March
7 1918.
124.
LUKASIEWICZ, J. 0 logice tr6wartosciowej (on three-valued logic). Ruch
filozoficzny 5 (1920), 170-171.
125.
LUKASIEWICZ, J. Zagadnienia prawdy (the problems of truth). In Ksi{!ga
pami{l!kowa XI zjazdu lekarzy i przyrodnik6w polskich (1922), pp. 84-85,87.
126.
LUKASIEWICZ, J. Philosophische Bemerkungen zu mehrwertigen Systemen
der Aussagenlogik. Comptes Rendus de la Siciete des Sciences et des Letters
de Varsovie, ct.iii 23 (1930), 51-77.
127.
LUKASIEWICZ, J., AND TARSKI, A.
Untersuchungen tiber den Aus-
sagenkalktil.
Comptes Rendus de la Siciete des Sciences et des Letters de
Varsovie, ct. iii 23 (1930),1-21.
128.
MAC LANE, S., AND BIRKHOFF, G. Algebra. The Macmillan Company,
1967.
129.
MACCOLL, H. The calculus of equivalent statements. Proc. London Math.
Society (1896-7),156-183.
130.
MAKOWSKY, J. A., AND PNUELI, Y. B. Computable quantifiers and logics
over finite structures. In Krynicki et al. [120].
131.
MAMDANI, E. H. Application of fuzzy algorithms for the control of a simple
dynamic plant. In Proc IEEE (1974), pp. 121-158.
132.
MAMDANI, E. H. Advances in the lingvistic synthesis of fuzzy controllers.
Int. J. Man-Machine Studies 8 (1976), 669.
133.
MAMDANI, E. H. Application of fuzzy logic to approximate reasoning using
linguistic synthesis. IEEE Trans. Computer 26 (1977), 1182-1191.

290
BffiLIOGRAPHY
134.
MARKS-II, R. J. Fuzzy logic technology and applications, 1994. IEEE Tech-
nical Activities Board.
135.
MARTIN, J. N. Existence, negation and abstraction in the neoplatonic hierar-
chy. History and Philosophy ofLogic 16 (1995), 169-196.
136.
McNAUGHTON, R. A theorem about infinite-valued sentential logic. Journ.
Symb. Logic. 16 (1951),1-13.
137.
MENGER, K. Statistical metrics. Proc. Nat. Acad. Sci. U.S.A. 8 (1942), 535-
537.
138.
MEREDITH, C. A.
The dependence of an axiom of Lukasiewicz.
Trans.
A.M.S. 87 (1958), 54.
139.
MESIAR, R.
Compensatory operators based on triangular norms and
conorms.
In Proceedings of EUFIT'95 (Aachen, Germany, August 1995),
pp.131-135.
140.
MESIAR, R. Fuzzy sets, difference posets, and MV-a1gebras. In Fuzzy Logic
and Soft Computing (Singapore, 1995), B. Bouchon-Meunier, R. Yager, and
L. Zadeh, Eds., World Scientific, pp. 345-352.
141.
MESIAR, R. On some constructions of new triangular norms. Mathware &
Soft Computing 2, 1 (1995).
142.
MOISIL G. C.
Essais sur les logiques non-chrysippiennes.
Editions de
l'Academie de la R. S. de Roumaine, Bucharest, 1972.
143.
MOSTERT, P. S., AND SHIELDS, A. L. On the structure of semigroups on a
compact manifold with boundary. Annals ofMath. 65 (1957),117-143.
144.
MOSTOWSKI, A. On a generalization of quantifiers. Fundamenta mathemat-
icae 44 (1957), 12-36.
145.
MOSTOWSKI, A. Axiomatizability of some many valued predicate calculi.
Fund. Math. 50 (1961),165-190.
146.
MUKAIDONO, M.
Fuzzy inference in resolution style. In Fuzzy Sets and
Possibility Theory, R. Yager, Ed. Pergamon, New York, 1982, pp. 224-231.
147.
MUKAIDONO, M. Towards a fuzzy Prolog. In 27th National Congress ofthe
Information Processing Society of Japan (Japanese, 1983), IN-2, pp. 289-
290.
148.
MUKAIDONO, M., SHEN, Z. L., AND DING, L. Y. Fundamentals of fuzzy
Prolog. Int. Journal ofApproximate Reasoning 3 (1989), 179-193.
149.
MUNDICI, D. Interpretation of AF C*-algebras in Lukasiewicz's sentential
calculus. Journal ofFunctional Analysis 65 (1986), 15-63.
150.
MUNDICI, D. Satisfiability in many-valued sentential logic is NP-complete.
Theoretical Computer Science 52 (1987), 145-153.
151.
MUNDICI, D. Ulam's game, Lukasiewicz logic and AF C*-algebras. Fund.
Informaticae 18 (1993),151-161.
152.
MUNDICI, D. Averaging the truth-value in Lukasiewicz logic. Studia Logica
55 (1995),113-127.
153.
NovAK, V. First-order fuzzy logic. Studia Logica 46 (1987), 87-109.
154.
NOVAK, V. On the syntactico-semantical completeness of first-order fuzzy
logic I, II. Kybernetika 26 (1990), 47-26,134-152.

BIBLIOGRAPHY
291
155.
NOVAK, V. Fuzzy control from the logical point of view. Fuzzy Sets and
Systems 66 (1994),159-173.
156.
NOVAK, V.
A new proof of completeness of fuzzy logic and some
conclusions for approximate reasoning.
In Proc. Int. Conference FUZZ-
IEEElIFES'95 (Yokohama, 1995), pp. 1461-1468.
157.
OVCHINNIKOV, S. Similarity relations, fuzzy partitions and fuzzy orderings.
Fuzzy Sets and Systems 40 (1991), 107-126.
158.
PAPADIMITRIOU, C. H. Computational Complexity. Addison Wesley, 1994.
159.
PARIKH, R. A test for fuzzy logic. SIGACT NEWS 22,3 (1991),49-50.
160.
PARIKH, R. Vagueness and utility: the semantics of common nouns. Linguis-
tics and Philosophy I7 (1994),521-535.
161.
PARIS, J. A semantics for fuzzy logic. Soft Computing 1,3 (1997), 143-147.
162.
PARIS, J. B. The uncertain reasoner's companion - a mathematical perspec-
tive. Cambridge University Press, 1994.
163.
PAVELKA, J. On fuzzy logic I, II, III. Zeitschr. f Math. Logik und Grundl.
der Math. 25 (1979), 45-52,119-134,447-464.
164.
PEIRCE, C. S. On the algebra of logic: A contribution to the theory of nota-
tion. Amer. J. Math. 7 (1885),180-202.
165.
POGORZELSKI, W. A. The deduction theorem for Lukasiewicz many valued
propositional calculi. Studia Logica 15 (1964), 7-23.
166.
POST, E. L.
Introduction to a general theory of elementary propositions.
Amer. Joum. ofMath. 43 (1921), 163-185.
167.
RAGAZ, M. E.
Arithmetische Klassifikation von Formelnmengen der un-
endlichwertigen Logik. ETH ZUrich, 1981. Thesis.
168.
RASIOWA, H. On generalized Post algebras oforder w+ and w+-valued pred-
icate calculi. Bull. Acad. Polon. Sci. Ser. Math., Astr., Phys. 21 (1973),209-
219.
169.
RASIOWA, H., AND SIKORSKI, R. The Mathematics of Metamathematics.
Panstwowe Wydawnictwo Naukowe, Warszawa, 1963.
170.
RASKOVIC, M., AND DORDEVIC, R. Probability quantifiers and operators.
Series in pure and applied mathematics. Vesta, Belgrade, 1996.
171.
REICHENBACH, H. Philosophical Foundations of Quantum Mechanics. Uni-
versity of California Press Berkeley, Los Angeles, 1944.
172.
RODRIGUEZ, A. J. El algebra de Wajsberg de las partes difusas de un con-
junto. Rev. Univ. Santadei 2 (1979), II 927-929.
173.
ROGERS JR., H. Theory ofRecursive Functions and Effective Computability.
McGraw-Hill,1967.
174.
ROSE, A. Eight-valued geometry. Proc. London Math. Soc. Ser. 32 (1952),
30-44.
175.
ROSE, A. A Gbdel theorem for an infinite-valued erweiterter Aussagenkalkiil.
Zeitschr. Math. Log. Grundlagen Math. I (1955),89-90.
176.
ROSE, A. Some formalizations of No-valued propositional calculi. Zeitschr.
Math. Log. Grundlagen Math. 2 (1956),204-209.
177.
ROSE, A., AND ROSSER, J. B. Fragments of many-valued statement calculi.
Trans. A.M.S. 87 (1958),1-53.

292
BffiLiOGRAPHY
178.
RUSPINI, E. H. On the semantics of fuzzy logic. International Journal of
Approximate Reasoning 5 (1991),45-88.
179.
RUTLEDGE, J. D. A preliminary investigation of the infinitely-valued predi-
cate calculus. Cornell University, 1959. Thesis.
180.
RUTLEDGE, J. D. On the definition of an infinitely-valued predicate calculus.
1. Symb. Logic 25 (1960), 212-216.
181.
SCARPELLINI, B.
Die Nichtaxiomatisierbarkeit des unendlichwertigen
Pradikatenkalkiils von Lukasiewicz. J. Symb. Log. 27 (1962), 159-170.
182.
SCHRIJVER, A. Theory ofLinear and Integral Programming. John Willey &
Sons, 1986.
183.
SCHWEIZER, B., AND SKLAR, A. Statistical metric spaces. Pacific J. Math.
10 (1960), 313-334.
184.
SCHWEIZER, B., AND SKLAR, A. Probabilistic Metric Spaces. North Hol-
land, Amsterdam, 1983.
185.
SCOTT, D. Completeness and axiomatizability in many-valued logic. In Pro-
ceedings ofthe Tarski symposium (1974), L. Henkin et al., Eds., Proceedings
of symposia in pure and applied mathematics Vol XXV, American Math. Soc.
186.
SHAFER, G. A Mathematical Theory ofEvidence. Princeton University Press,
Princeton, New Jersey, 1976.
187.
SHAFER, G. Allocations ofprobability. The Annals ofProbability 7,5(1979),
827-839.
188.
SHAFER, G. Perspectives on the theory and practice of belief functions. In-
ternational Journal ofApproximate Reasoning 4,5/6 (1990),323-362.
189.
SHOENFIELD, J. R. Mathematical Logic. Addison-Wesley, 1967.
190.
SKOLEM, T. A. Mengenlehre gegrundet auf einer Logik mit unendlich vielen
Wahrheitswerten.
Sitzungsberichte Berliner Math. Gesellschajt 58 (1957),
41-56.
191.
SMART, D. R. Fixed Point Theorems. Cambridge Univ. Press, 1974.
192.
SMETS, P., MAMDANI, E. H., DUBOIS, D., AND PRADE, H., Eds. Non-
Standard Logicsfor Automated Reasoning (London, 1988), Academic Press.
193.
TAKANO, M. Another proof of the strong completeness of the intuitionistic
fuzzy logic. Tsukuba Journal ofMathematics 11, 1 (1987), 101-105.
194.
TAKEKUMA, R.
On a nine-valued propositonal calculus.
J. Compo Syst 1
(1954),225-228.
195.
TAKEUTI, G., AND TITANI, S. Intuitionistic fuzzy logic and intuitionistic
fuzzy set theory. J. Symb. Logic 49 (1984), 851-866.
196.
TAKEUTI, G., AND TITANI, S. Fuzzy logic and fuzzy set theory. Arch. Math.
Logic 32 (1992),1-32.
197.
THIELE, H. On the definition of modal operatos in fuzzy logic. In Proc. 23.
Int. Symp. on multiple-valued logic (Sacramento, California, 1993), pp. 62 -
67.
198.
THIELE, H. InvestigationofIF-THEN rule bases by methods ofmathematical
logic. In Proc. Int. Joint Cont of the Fourth IEEE Int. Cont on Fuzzy Sys-
tems and Second Int. Fuzzy Engineering Symp. (Yokohama, 1995), pp. 1391
-1396.

BIBLIOGRAPHY
293
199.
THIELE, H.
On fuzzy quantifiers. In Fuzzy Logic and its Applications to
Engineering, Information Ssciences and Intelligent Systems, Bien and Min,
Eds. Kluwer, 1995.
200.
THIELE, H., AND KALENKA, S. On fuzzy temporal logic. In Proceedings
FUZZ-IEEE'93 (San Francisco, California, 1993), IEEE Neural Networks
Council, pp. 1027 - 1032.
201.
TRAKHTENBROT, B. A. Impossibility of an algorithm for the decision prob-
lem on finite classes. Doklady Akademii Nauk SSSR 70 (1950), 569-572. in
Russian.
202.
TRILLAS, E., AND VALVERDE, L. An inquiry on t-indistinguishability op-
erator. In Aspects ofVagueness, H. Skala et al., Ed. Reidel, Dordrecht, 1984,
pp.231-256.
203.
TRILLAS, E., AND VALVERDE, L. On implication and indistinguishability
in the setting of fuzzy logic. In Management Decision Support Systems Using
Fuzzy Sets and Possibility Theory, 1. Kacprzyk and R. R. Yager, Eds. Verlag
TOV, Rheinland, Koln, 1985, pp. 198-212.
204.
TRILLAS, E., AND VALVERDE, L.
On mode and implication in approxi-
mate reasoning. In Approximate Reasoning in Expert Systems, M. M. Gupta,
A. Kandel, W. Bandler, and J. B. Kiszka, Eds. North Holland, Amsterdam,
1985, pp. 157-166.
205.
VAUGHT, R. The completeness of logic with the added quantifier "there are
uncountably many". Fundamenta mathematicae 54 (1964),303-304.
206.
VOJTAS, P., AND PAULIK, L. Soundness and completeness of non-classical
SLD resolution. In Proc. ELP'96 Leipzig, Lect. Notes in Compo Sci. (Leipzig,
1996), R. Dyckhoff et al., Ed., Springer Verlag, pp. 298-301.
207.
VOORBRAAK, F. As Far as I Know. Epistemic Logic and Uncertainty. De-
partment of Philosophy Utrecht University, 1993. dissertation.
208.
WAJSBERG, M. Beitrage zum Metaaussagenkalktil I. Monatsheftefti.r Math-
ematik und Physik 42 (1935), 221-242.
209.
WOLENSKI, J. Filozoficzna szkola Lwowsko-Warszawska (The philosophical
school ofLwow and Warsaw, in Polish). Panstwowe wydawnictwo naukowe,
Warsaw, 1985.
210.
YAGER, R. R. Quantified statements and database fuzzy querying. In Fuzzi-
ness in Database Management Systems, P. Bosc and J. Kacprzyk, Eds. Physica
Verlag, 1995,pp.275-308.
211.
ZADEH, L. A. Fuzzy sets. Information and Control 8, 3 (1965),338-353.
212.
ZADEH, L. A. Similarity relations and fuzzy orderings. InformationSciencies
3 (1971),177-200.
213.
ZADEH, L. A. On the analysis oflarge scale systems. In Systems approaches
and environmentprocesses (Gottingen, 1974), H. Gabbinger, Ed., Vanderhoek
and Ruprecht, pp. 23-37.
214.
ZADEH, L. A.
The concept of a lingustic variable and its application to
approximate reasoning. Information Sciences 8 (1975),199-245,301-357.
215.
ZADEH, L. A. Fuzzy logic and approximate reasoning. Synthese 30 (1975),
407-428.

294
BIBLIOGRAPHY
216.
ZADEH, L. A. Liar's paradox and truth-qualification principle. ERL Memo-
randum M79/34, University of California, Berkeley, 1979.
217.
ZADEH, L. A. The role of fuzzy logic in the management of uncertainty in
expert systems. Fuzzy Sets and Systems 11 (1983), 199-227.
218.
ZADEH, L. A. Is probability theory sufficient for dealing with uncertainty in
AI: A negative view. In Uncertainty in Artificial Intelligence (1986), L. N.
Kanal and J. F. Lemmer, Eds., Elsevier Science Publishers B.Y. North Hol-
land, pp. 103-115.
219.
ZADEH, L. A. Fuzzy Logic, vol. 1. IEEE Computer, 1988.
220.
ZADEH, L. A. The birth and evolution of fuzzy logic.
Int. J. of General
Systems 17 (1990), 95-105.
221.
ZADEH, L. A. Preface. In Fuzzy Logic Technology and Applications (1994),
R. I. Marks-II, Ed., IEEE Technical Activities Board.
222.
ZICH, O. V. Vyrokovy pocet s komplexnfmi hodnotami (Sentential calculus
with complex values). Ceskd mysl34 (1938), 189-196.
223.
ZIEGLER, G. M. Lectures on polytopes, vol. 152 of Graduate Texts in Math-
ematics. Springer-Verlag, 1995.
224.
ZIMMERMANN, H.-I.
Fuzzy Set Theory and Its Applications, second ed.
Kluwer Academic Publisher, BostonIDordrechtILondon, 1991.

INDEX
absorption, 20
algebras, 19
BL-algebras, 46
Boolean, 21
containing the rational unit interval,
128
G-algebras, 100
Lindenbaum, 22
MV-algebras, 70
Archimedean, 133
product algebras, 91
Wajsberg algebra, 71
arithmetic, 16
Peano,17,267
Robinson, 16
associativity, 16,20
axioms
Lukasiewicz's original, 63
axiom schema, 54
Boolean predicate calculus, 13
logical, 8
on quantifiers, 111
of basic propositional logic, 36
of congruence, 142
of equality, 14, 16, 144
of GOdel propositional logic, 97
of prelinearity, 47
of product propositional logic, 89
of similarity, 141
on quantifiers, 13
special,8
belief functions Dempster-Shafer, 204
belief measure, 202
cancellation, 23
commutativity, 20
completeness, 8, 54, 55, 75,93,96,101,
106
Ih completeness, 162
I:1-completeness, 154
co-NP completeness, 155, 158
Haye style, 135
NP-completeness, 151, 155
Pavelka style, 80, 86, 130
strong, 8, 13, 56, 60, 83, 122, 125,
140
compositional rule of inference, 168
conjunction, 6
elementary, 9
connectives, 6, 10, 109
constant witnessing, 123
de Morgan laws, 45
deduction rules, 8, 13
fuzzy (abstract), 261
of Takeuti-Titani logic, 252
deduction theorem, 43
deductive system (abstract), 262
definition of a predicate, 123
dequotation, 266
direct product, 19
disjunction, 6
strong, 65
distributive laws, 43
equivalence, 6, 14
evaluation
of propositional variables, 36
of object variables, 11
evaluation of object variables, 110
filter, 52
prime, 52
finite model theory, 199
formulas, 6
atomic, 109
classical, 163
graded, 80
predicate calculus, 10
provable, 8
in a theory, 8

296
INDEX
sematically equivalent, 7
function (partial) recursive, 150
function symbols, 15
fuzzy function, 178
fuzzy mapping, 178
generalization, 13, 57
ground language, 176
ground structure, 176
groups Abelian
linearly ordered, 23
groups Abelian, 23
linearly ordered
Archimedean, 25
homomorphic image, 19
idempotence, 20
idempotent, 32
identities, 19
implication, 6
Lukasiewicz, 30
Godel,30
Goguen, 30
infimum, 20
of a set, 22
inverse, 23
language
accepted by a Turing machine, 150
NP-complete, 150
predicate, 10, 109
lattices, 20
residuated,47
lemma diagonal, 266
literal,9
logic
fuzzy abstract, 264
fuzzy probability logic, 229
fuzzy Takeuti-Titani, 249
Godel propositional logic, 97
modal comparative, 213
modal two-valued, 205
of belief, 206
of knowledge, 206
predicate basic, 112
predicate GOdel, 112
predicate product, 112
predicate rational Pavelka, 128
predicate Lukasiewicz, 112
product propositional, 89
propositional given by at-norm, 35
propositional Boolean, 6, 103
propositional intuitionist, 98
propositional Lukasiewicz, 63
rational Pavelka, 79
with integrals (logic of"probably),
240
tense, 206
LP-problem, 151
model,56
Kripke,205
predicate, 209
propositional, 211
of a theory, 8, 13
predefinite, 163
standard of arithmetic, 17
weak probabilistic, 240
with absolute equality, 14
modus ponens fuzzy, 29
modus ponens generalized (Zadeh), 170
necessity, 203, 205
negation, 6
normal form, 9
object constants, 10, 109
object variables, 10
partially embeddable, 25
plausibility, 204
polynomial time, 150
possibility, 203, 205
precomplement, 31
predicates, 10, 109
probability, 202
problem, 55, 137, 161, 189, 220, 221,
226,228,235,236,243,244,
246
proof
in a theory, 8

INDEX
297
logical,8
weighted, 263
propositional constants, 6
propositonal variables, 6
provability degree, 80, 129
quantifiers, 10, 109
cardinality quantifiers, 197
comparative qantifiers, 198
generalized, 196
generalized fuzzy, 215
threshold quantifiers, 198
residuum of at-norm, 29
semantics (abstract), 261
semigroups Abelian, 22
linearly ordered, 23
set
complete in arithmetical hierarchy,
152
recursively enumerable, 152
recursively reducible to another, 152
similarity relation, 141
soundness, 8
statistic, 200
associational, 200
multitudinal, 200
structures, 10, 109
subalgebra, 19
subdirect product, 19
substitution, 12
supremum, 20
of a set, 22
t-norm,28
Lukasiewicz, 28
Archimedean, 32
strict, 32
continous, 28
GOdel,28
product, 28
tautology, 7, 139
I-tautology, 36
terms, 10, 109
tertium non datur, 103
theorem Birkhoff, 19
theory, 8, 42, 56
complete, 56, 119
consistent, 13,43, 119
contradictiory, 13
contradictory, 43
Henkin, 119
iconsistent, 43
maximal, 133
ofpreorder, 14
of semigroups, 16
truth constants, 10, 109
truth degree, 80, 128
truth evaluation, 6
truth functionality, 6, 27
truth functions, 6
truth value, 12, 110, III
Turing machine, 149
deterministic, 149
variables bound, 11
variables free, 11
variables substitutable, 12
variate, 168
variety, 19
zero, 23

TRENDS IN LOGIC
1. G. Schurz: The Is-Ought Problem. An Investigation in Philosophical Logic.
1997
ISBN 0-7923-4410-3
2. E. Ejerhed and S. Lindstrom (eds.): Logic, Action and Cognition. Essays in
Philosophical Logic. 1997
ISBN 0-7923-4560-6
3.
H. Wansing: Di.l'pluyil1R Modul Logic. 1998
ISBN 0-7923-5205-X
4. P. Hajek: Metamathematics ofFuZZ)' Logic. 1998
ISBN 0-7923-5238-6
KLOWER ACADEMIC PUBLISHERS - DORDRECHT / BOSTON / LONDON

