Jonathan C. Roberts
Christopher J. Headleand
Panagiotis D. Ritsos
Five Design-Sheets: 
Creative Design 
and Sketching 
for Computing 
and Visualisation

Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation

Jonathan C. Roberts • Christopher J. Headleand
Panagiotis D. Ritsos
Five Design-Sheets: Creative
Design and Sketching for
Computing and Visualisation
123

Jonathan C. Roberts
Bangor University
Bangor, UK
Panagiotis D. Ritsos
Bangor University
Bangor, UK
Christopher J. Headleand
University of Lincoln
Lincoln, UK
ISBN 978-3-319-55626-0
ISBN 978-3-319-55627-7
(eBook)
DOI 10.1007/978-3-319-55627-7
Library of Congress Control Number: 2017940639
© Springer International Publishing AG 2017
This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of
the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations, recitation,
broadcasting, reproduction on microﬁlms or in any other physical way, and transmission or information
storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology
now known or hereafter developed.
The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication
does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant
protective laws and regulations and therefore free for general use.
The publisher, the authors and the editors are safe to assume that the advice and information in this book
are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or
the editors give a warranty, express or implied, with respect to the material contained herein or for any
errors or omissions that may have been made. The publisher remains neutral with regard to jurisdictional
claims in published maps and institutional afﬁliations.
Printed on acid-free paper
This Springer imprint is published by Springer Nature
The registered company is Springer International Publishing AG
The registered company address is: Gewerbestrasse 11, 6330 Cham, Switzerland

Preface
One of the many challenges that programmers face is knowing how to start, when
setting out to solve a computing problem. For instance, when we give our computing
students programming assignments, many of them leave the development of their
code until the last minute, just because they do not know how or where to start.
Starting a project, or a programming assessment, is often the hardest part to the
problem. When we (the authors) are faced with problems ourselves, whether for
work or at home, we have often found ourselves reaching for sheets of paper to
make sketches, draw a rough plan and take some notes down. The very act of putting
pen to paper helps us think through the problem in a deeper way. It is these initial
sketches, done on a back of an envelope (so to speak), that help us get our creative
juices starting; they help us to quickly express our ideas and also quickly reject
them.
Each of us is different in how we do this creative thinking. Jonathan will get
his drawing pens out of his bag, reach for his pad of A3 sheets of drawing paper,
write down words to explore the landscape and draw a quick diagram. Chris, on the
other hand, will jump to the wipe board, clean it off from the previous conversation
and draw large pictures on the board, while Panos will pull up a mind-mapping or
graphical editor on his computer, type in a few categories and brainstorm different
phrases, and draw a picture on the screen. While we are different with regard to the
tools that we use, we all are planning and thinking creatively, trying to work through
the problem in our minds, using different depictions to externalize and perpetuate
our thoughts. We are considering alternative solutions and ascertaining which is the
best one to follow. We are organizing our thoughts into our courses of actions or
grouping them into strategies.
Any of our methods could be used on its own or in combination with the
others. These tools (sketching, wipe board or graphics program) help us, not only
to work our ideas through but also to share them and communicate them to others.
Indeed, group work can often be beneﬁcial because you can collectively draw upon
everyone’s knowledge and ideas. Other times this can be problematic, with some
people pushing their idea for their own interest or itinerary, rather than working
toward the common, collective good.
v

vi
Preface
Fig. 1
Working through an algorithm to manipulate three-dimensional data
The challenge with these techniques being used on their own, however good they
may be, is that they are ad hoc. There is no speciﬁc structure for drawing on a
wipe board or for sketching. An empty wipe board or a sheet of paper is merely a
blank starting point. But structure is very important for group activities, as it allows
the group to follow the same guidelines. Structure is also especially beneﬁcial to
students who are learning – as a method can be taught, the students know what
to do by repeating the steps of the method and they can be assessed on how well
they implemented it. So, how can we provide a structure over the sketching and
critical design process? What would it look like? What information will the structure
contain? We believe that such a structure will help students learn how to plan and
think through alternatives for building software interfaces. It will help learners to
have a method that they can apply and reapply. It will help companies, who are
building interfaces, exchange and compare ideas and different solutions.
Drawing and sketching have always been an important part of human expression.
Just consider Leonardo da Vinci who created many beautiful notebooks of his
ideas. These books are still inspiring researchers and inventors today, in art and
design of tools and mechanical devices. Likewise, we have used sketchbooks to
record events and develop our thoughts. We start our story in October 1992 when
Jonathan was studying for his PhD. It was during this time that he started to use
research notebooks. These were A4 glue-bound hardback notebooks that were
ruled. Jonathan can remember walking to every meeting with his notebook and
pen. Every page started with the date of that meeting and every event started on
a new page. Meetings, conferences, thoughts, ideas, concepts, diagrams, etc. all

Preface
vii
made it into the notebooks. Importantly, sketches formed an important part of the
recording process. At the time, Jonathan was investigating methods to render and
explore three-dimensional datasets, such as those from magnetic resonance imaging
(MRI) or computed tomography (CT) scans. It was only a few years earlier that
Lorensen and Cline had published the marching cubes1 algorithm. Jonathan can
remember drawing many sketches of how to visualise and render three-dimensional
data (Fig. 1). These algorithms were eventually included into the Waltz visualisation
system, to manipulate and analyze three-dimensional data. An early sketch of the
Waltz interface (dated March 1995) is shown in Fig. 2a. This was used as a “plan”
to help design the interface (Fig. 2b). It was used not only to work out the ﬁnal
appearance but also to help plan the individual aspects of the code.
Drawing, sketching and design are always featured in all our teaching and
work. We pick up the story, once again, in 2007. Jonathan had just moved to
Bangor University and set up a graduate module on information visualisation. It
was during this module that Jonathan started to develop the Five Design-Sheet
sketching methodology. We needed a method to allow students to plan their data
visualisation tools. At ﬁrst, the methodology was informal and merely encouraged
students to make sketches to plan their goals. But after reﬁning the module and
the technique over several years, the format and advice of sketching and planning
interfaces were gradually developed. At the same time, Chris completed a degree
in education and design. He joined Harlech College, where he developed and led
a creative technologies course. Panos was working for the industry as a software
engineer, having completed his PhD in 2006. From 2011 and over the next few
years, we see the coming together of many events. The ﬁrst Five Design-Sheets2
paper was published; Panos moved to Bangor to work with Jonathan, and then
Chris followed. Working collaboratively, we started to generalise and develop the
Five Design Sheet further. The outcome of this process was our journal paper on
“Sketching Designs Using the Five Design-Sheet Methodology”3 that was presented
at the IEEE Visualisation Conference in 2015.
Collectively we realised that together we had a common interest in design,
sketching, professional development and encouraging others to develop good
software. It is these aspects that have motivated us to write this book. Not only
does the Five Design-Sheet methodology provide a useful structure for students and
learners to follow in an academic setting, but it can also be helpful for those doing
research and development of new software tools and those developing software in
companies. Moreover, it is not only the mere act of sketching that is important, but
it is the thinking that surrounds the sketching of an idea. What is often difﬁcult
1Lorensen, W.E. and Cline, H.E., 1987, August. Marching cubes: A high resolution 3D surface
construction algorithm. In ACM SIGGRAPH computer graphics (Vol. 21, No. 4, pp. 163–169).
ACM.
2Roberts, J.C., 2011. The Five Design-Sheet (FdS) Approach for Sketching Information Visualiza-
tion Designs. Proc. Eurographics Education Papers, pp. 27–41.
3Roberts, J.C., Headleand, C. and Ritsos, P.D., 2016. Sketching designs using the Five Design-
Sheet methodology. IEEE transactions on visualization and computer graphics, 22(1), pp. 419–428.

viii
Preface
Fig. 2
The Waltz visualisation tool. (a) Sketches were ﬁrst made that plan and explain the
interface. (b) The sketches provide a vision for the completed tool. Both sketch and the Waltz
tool were created by Jonathan Roberts while studying for his doctor of philosophy (PhD) thesis,
University of Kent, 1995

Preface
ix
is knowing where ideas are initiated from or how to think through ethical and
professional issues that surround a problem. We have experienced this ﬁrsthand.
We have each worked on projects and developed software where we have had to
think through the challenges, grapple with ethical issues and develop appropriate
solutions. We see this everyday in our students, especially those who are doing
projects and ﬁnd it difﬁcult to ideate different concepts and think through the
problem. Creative thinking is not a skill that many have. But it is a skill that
we believe can be learned, especially with some help and advice. We do feel,
however, that there should be more design thinking within the curriculum and a
wider adoption of creative thinking alongside critical thinking in education and
at every level. Things are starting to change, and we are gradually seeing more
sketching, creativity, and planning by design in difﬁcult curricula.
Furthermore, we feel that ethical concerns should be looked at more closely, and
that being ethical and professional in school and academia and in the workplace
is becoming increasingly multifaceted while always remaining important. For
instance, the threat of cybercrimes and cyberbullying is increasing. It is therefore
beneﬁcial for programmers to understand and appreciate how such issues may
affect their designs. While professionalism is part of the curriculum in many
higher education computing courses, students often ignore the related concepts and
implications and do not engage with the material in a truly thoughtful manner. One
challenge they face is that there are few resources that integrate design thinking
with professional considerations. Signiﬁcantly, we believe that along with design
thinking, professional thinking should be incorporated into the design phase and
especially considered from the start. Consequently, we include chapters that discuss
a range of such issues faced by the developer.
To write the book, we have drawn upon our wide range of knowledge and
skills and many years of experiences within education, teaching and industry.
Collectively, we have experience in leading and mentoring undergraduate, master,
and research (PhD) students and leading and evaluating different computing
modules (from computer programming, graphics and information Visualisation
modules, algorithms, Web design, and Web programming to artiﬁcial intelligence
and professional perspectives). We have developed degree programs and led them
through accreditation. We have been external examiners, examining courses and
PhD students at different universities. We also draw upon the experience and
knowledge of many authors, from related literature. As you read, take a note of
related work that you can follow and read at a later stage.
Through our reﬁnement of the Five Design-Sheet method (over the past 8 years
or more), we have also generalised the techniques from being totally focused on
information visualisation tools to also using the method for interactive software
development. We need to be true to the past of the FdS, and so we will include many
examples focusing on the development of data visualisation tools. But we also think
(actually we hope) that the methods and ideas we discuss here could be used for
new applications. We hope that you will be able to take the method and adapt it

x
Preface
for your purpose. Finally, we take this opportunity to acknowledge and thank all the
students who have helped us develop the Five Design-Sheet method and have trailed
our processes throughout the years. Without you, this book would not be possible.
Bangor, UK
Jonathan C. Roberts
Lincoln, UK
Christopher J. Headleand
Bangor, UK
Panagiotis D. Ritsos

Contents
Part I
Think
1
Introduction: Think, Prep, Sketch........................................
3
1.1
Introduction...........................................................
3
1.2
Think, Prep, Sketch ..................................................
5
1.3
Focused Learning ....................................................
9
1.4
What Software Tools Can You Build, as a Result
of this Process? .......................................................
10
1.5
Think: In Your Minds-Eye ...........................................
14
1.6
Design by Sketching .................................................
17
1.7
Developing Your Skills ..............................................
21
1.8
How to Read this Book ..............................................
23
References....................................................................
25
2
Overview of the Five Design-Sheets (FdS) ...............................
27
2.1
Introduction to the FdS...............................................
27
2.2
The Design By-Sketching Process ..................................
29
2.3
Take Time and Develop Your Skills .................................
32
2.4
Thinking Holistically.................................................
34
2.5
History of the FdS ....................................................
35
2.6
Who Has Used the FdS? .............................................
36
2.6.1
Teachers Can Use the FdS in an Assessment..............
36
2.6.2
Project Students, Creating a Chapter on Their
Dissertation .................................................
37
2.6.3
In a Company Setting ......................................
38
2.7
Will It Work for Non-Visual Interface Development? ..............
38
References....................................................................
41
3
Thoughts, Ideas, Problems and Solutions................................
43
3.1
Types of Thinking ....................................................
43
3.2
On Problems ..........................................................
45
3.3
Fast and Slow Thinking of Problems ................................
48
xi

xii
Contents
3.4
The Importance of Reﬂection........................................
51
3.5
Reﬂection, Metacognition and Critical Thinking ...................
53
3.6
Problem Solving Stages..............................................
57
3.7
Characterising Problems (Well-Structured vs. Ill-Structured) .....
61
3.8
Being a Convergent and Critical Thinker ...........................
69
3.9
Divergent Thinking...................................................
73
3.10
Enthusiasm and Attitude to Thinking, Problem Solving and
Creativity .............................................................
76
3.11
Thinking, Problem Solving and the FdS ............................
79
3.12
Exercises ..............................................................
80
References....................................................................
83
4
Social, Ethical and Other Considerations to Interface Design ........
85
4.1
Our Self, Our Identity and Foresight ................................
85
4.2
Triage: Making a Quick Judgment ..................................
88
4.3
Can You Do It? Resources, Utility, Authority ......................
92
4.3.1
Can You: Do You Have the Resources? ...................
93
4.3.2
Can You: Is There Utility? .................................
97
4.3.3
Can You: Do You Have Authority? ........................
98
4.4
Should You Do It? – Is It Ethical?................................... 100
4.5
What If You? – Any Ramiﬁcations?................................. 106
4.5.1
Business Response: Is There a Product? .................. 107
4.5.2
Emotive Response: How Will People View It? ........... 111
4.6
Thinking Through Issues, Use an Acronym! ....................... 112
4.7
Exercises .............................................................. 117
References.................................................................... 118
Part II
Prep
5
Sketching Design Skills .................................................... 121
5.1
Sketching as a Way to Plan .......................................... 121
5.2
But I Cannot Draw! .................................................. 122
5.3
Getting a Kit Together ............................................... 124
5.4
Pens, Ink and Colour Washes ........................................ 127
5.5
Why Is Sketching Useful? ........................................... 133
5.6
Techniques: Bold Lines and Faint Lines ............................ 135
5.7
Improving and Enhancing Your Sketches ........................... 138
5.8
Other Mediums: Different Types of Low-Fidelity Prototyping .... 141
5.9
Sketching Alone or in a Group? ..................................... 142
5.10
Sketching Alternatives ............................................... 143
5.11
Exercises .............................................................. 144
References.................................................................... 149
6
Graphical Marks and Semiology for Sketching ......................... 151
6.1
Developing a Visual (Sketching) Language......................... 151
6.2
Graphical Marks and Gestalt Laws .................................. 153

Contents
xiii
6.3
Graphical Semiotics: Arbitrary Symbols............................ 159
6.4
Graphical Semiotics: Sensory Signals............................... 162
6.5
Graphical Forms...................................................... 166
6.6
Graphical Encapsulation and Environment ......................... 169
6.7
Exercises .............................................................. 170
References.................................................................... 174
7
Creative Thinking, Creativity and Ideation ............................. 175
7.1
Aim to Generate Many Ideas ........................................ 175
7.2
Telling a Story with Sketches ........................................ 182
7.3
Idea Generation: And Getting in the Right Mindset ................ 186
7.4
Encouraging a Creative Mindset and Environment ................. 191
7.5
The Importance of Sleep and Resting the Mind .................... 193
7.6
Ideas from Nature: Mimicking and Bioinspiration ................. 195
7.7
Ideas from Man-Made Structures and Models ...................... 197
7.8
Techniques to Help Find Alternative Ideas.......................... 200
7.9
Exercises .............................................................. 204
References.................................................................... 206
Part III
Sketch
8
Sheet 1 of the Five Sheets .................................................. 211
8.1
Get Prepared .......................................................... 211
8.2
Framing the Vision ................................................... 212
8.3
How to Frame the Problem? ......................................... 218
8.4
The Journey of Sheet 1............................................... 220
8.5
Ideas (Start with the Salient Features)............................... 223
8.6
Ideas (Using Other Frameworks: Top-Down Thinking)............ 227
8.7
Ideas (Focusing on Tasks: Bottom-Up Thinking)................... 229
8.8
Filter .................................................................. 233
8.9
Categorise............................................................. 234
8.10
Combine and Reﬁne.................................................. 236
8.11
Question .............................................................. 238
8.12
Exercises .............................................................. 242
References.................................................................... 244
9
Sheets 2, 3 and 4 (The Middle Sheets) .................................... 245
9.1
Pause and Deliberate on the Designs ................................ 245
9.2
Starting Sheets 2, 3 and 4 ............................................ 247
9.3
The Big Picture of the Puzzle Game Example ...................... 249
9.4
Examples of the Big Picture Panel .................................. 256
9.4.1
Technologies and Devices.................................. 257
9.4.2
User Interfaces .............................................. 258
9.4.3
Designs That Focus on Animation......................... 265
9.5
Operations and Components of the System ......................... 266
9.6
The Parti (The Main Focus).......................................... 271

xiv
Contents
9.7
Pros and Cons of Each Design Sheet................................ 274
9.8
Exercises .............................................................. 278
References.................................................................... 281
10
Sheet 5 (Design Realisation) ............................................... 283
10.1
Which Alternative Design? .......................................... 283
10.1.1
Goals ........................................................ 284
10.1.2
Fit............................................................ 285
10.1.3
Usable ....................................................... 285
10.1.4
Useful ....................................................... 286
10.1.5
Aesthetics ................................................... 287
10.1.6
Cost.......................................................... 289
10.1.7
Eco-Friendly and Sustainable .............................. 289
10.1.8
Unique....................................................... 290
10.1.9
Buildable .................................................... 290
10.2
Creating the Final Design Realisation Sheet ........................ 291
10.3
Delivering and Using the Realisation Sheet......................... 295
10.4
Exercises .............................................................. 296
References.................................................................... 297
11
Five Design-Sheet Examples and Applications .......................... 299
11.1
Worked Example of the FdS (Heritage Scenario) .................. 299
11.1.1
Heritage Example: Sheet 1 ................................. 301
11.2
Heritage Example: Sheets 2, 3, 4 and 5 ............................. 307
11.3
Worked Example of the FdS
(Explanatory Visualisation Scenario) ............................... 312
11.4
Visualisation Example: Sheet 1...................................... 314
11.5
Visualisation Example: Sheets 2, 3, 4 and 5 ........................ 317
11.6
Conclusion............................................................ 318
References.................................................................... 325
Index............................................................................... 327

Part I
Think

Chapter 1
Introduction: Think, Prep, Sketch
Abstract There are many situations when you need to plan and think through
a range of different ideas, strategies, or courses of action. Often, your task is to
ﬁnd the right tools, or approach for a job and plan a solution to the problem at
hand. In other situations is it useful to work through different permutations in your
mind and decide which idea is the best to implement. Often though, it is initially
difﬁcult to know which design is best and how to proceed. This certainly applies to
programmers, when they design and develop visual computer interactive interfaces,
or visualisation tools that display big data. In particular, software engineers need
often to consider various alternative designs and layouts, before they even think
about beginning to program. In this book we present a method that will enable
you to contemplate, decide upon and communicate different approaches and ideas.
We call it the Five-Designs Sheet methodology, as it is based around sketching
alternative designs in ﬁve structured sheets. Through presenting this method, we
discuss techniques to help you contemplate your ideas, combine them to devise
more complex plans and depict them in sketches. These sketches can them be
implemented as interface solutions. This chapter covers the main concepts explored
in the book and the different skills that we wish you to learn, including: (1) thinking
through ideas, (2) preparing to sketch and (3) sketching different ideas and using the
Five Design-Sheet methodology for design-thinking.
1.1
Introduction
When in the early stages of designing an interface for a software application, it
is often difﬁcult to envision what it will look like. There may be many possible
layouts, or a number of different ways that a user could interact with your tool. Any
of these possible alternatives could be implemented and each may have potential as
a usable system. Some designs will end up being more popular and the users will
go back and use them again-and-again, whereas other tools may be used once and
never again open. Coming up with those designs and possibly building more than
one alternatives will take much time and require effort, cost you (or the company
you are working for) lots of money. Obviously, when you are planning to build
something, you want to make the end result useful, worthwhile, ﬁt for its purpose,
while keeping overall costs minimum. It would seem sensible to plan as much as
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_1
3

4
1
Introduction: Think, Prep, Sketch
you can before you proceed with the (usually expensive) implementation of the
solution. But there is a balance to maintain. You do not want to limit development
in deadline sensative applications, but you want to spent as much time in the
planning process as possible so as to maximise the efﬁciency, and success of the
development process. Furthermore, you do not want to get into a situation where
your designs are impossible to build, due to unconsidered technical constraints from
an immature design concept. There is a compromise to be made. You need to have
a well considered plan that can be used by you (or other people) to build your idea.
Many of today’s software engineers use Agile techniques, where the software is
built in close collaboration with users or client. The software development moves
forward at a fast pace, and the outputs are rigorously and frequently tested. Yet,
software engineers still need to get to a situation where they can start this building
process. If you are the developer, you need to know what the end-product may look
like, how users will interact with it, and how it should connect with other software.
You need, at least, to create a vision document, which records the ideas that you
have had, ideas that you have rejected (for whatever reasons) and ideas that you
have explored in great detail. In fact, not only is it useful to record these ideas, but
you will need to have elements of it down on paper, such to conﬁrm the design idea
to your client or supervisor.
Systematic planning of what to build, and thinking over the advantages and
disadvantages of alternative design solutions is essential in many ﬁelds. Not only is
design-thinking useful for software engineers, but it is beneﬁcial when you design
and prototype a new piece of hardware, using bread-boards or printed-circuit boards.
It can be useful when you are looking to re-design a product, or look to adapt and
improve existing products. We do acknowledge that throughout this book we focus
on the creation of interactive software tools, and use the case study of building data-
visualisation tools. However, we have tried to keep the techniques general enough
such that this book would be useful for a wide range of people, with different
challenges and different situations, and for different applications.
This book explores design by sketching and describes the Five Design-Sheet
(FdS) methodology [8]. By following the methodology you will produce ﬁve sheets
which develop designs from initial ideation through to a ﬁnal concept. Sheet 1
provides a workﬂow to explore the idea space, where creativity can ﬂow and where
lots of different ideas are generated. Sheets 2, 3 and 4 develop these ideas further,
while Sheet 5 is used to reﬁne a implementable solution. It is through sketching
that you will understand more about the issues, opportunities and challenges of the
design task.
The book follows the general structure of the methodology, supported by
additional material. In Part I – Thinking, after a discussion and overview of the
methodology we present aspects that you need to consider before tackling the FdS.
Then Part – Preparation, and in Part III – Sketching, where we present chapters that
discuss each of the sheets (sheets 1 then 2, 3 and 4 together, followed by a chapter
on sheet 5).

1.2
Think, Prep, Sketch
5
1.2
Think, Prep, Sketch
At the start of any project you need to have a vision; a concept of where you are
heading. In your mind you have an idea of what the tool you develop could look
like in the end, and your imagination allows you to envision how it could ﬁt in
with other software and tools. Often at the start of any development, this vision is
not concrete, it is approximate and abstract. But even a rough, approximate vision
affords us many features. It allows us to extrapolate the ideas and work through any
problems. It allows us to plan out different aspects of the programming task, which
could be given to other people.
Many ideas start off small. Indeed back-of-an-envelope sketches are often the
starting point to a new endeavour. These sketched ideas could be initiated by a brief
encounter and discussion with someone over (say) a meal. In this situation your
mind is free-wheeling, it is relaxing, you are talking about your day, your friends,
sports, politics and how cool your new gadget is. It is during these times that you
come up with an idea. You apply it to a problem that your subconscious mind has
been working on in the background. This idea may actually be an amalgamation
of many other ideas. It may be bringing together different concepts. Your brain
merely puts different parts of those ideas into order. Sketching down these ideas, or
anything that assists your thought process and brainstorming is important. Indeed,
many designers suggest that you should have a pad of paper and a pen with you at
all times, such that you can write down the ideas when you have them, on the spot.
In fact, we highly support this form of sketching. It is timely and necessary, and
these sketches can be developed further. We will talk further about where and how
ideas are created in Chap. 7 about Idea creation.
Other times the ideas come to fruition because you have worked hard and focused
on a problem. This is a deliberate form of thinking. Leonardo de Vinci wrote “It
has long since come to my attention that people of accomplishment rarely sat back
and let things happen to them. They went out and happened to things” [11]. It is
deliberate thinking because you have spent conscious effort and time, pondering
and considering the idea, and working through all possibilities. In this situation you
can afford be more systematic and rigorous over the design process. For instance,
you can ﬁrst do some research into your challenge, and see what other people have
done and achieved. You would need to take notes from this research, start to write
(or sketch) the main concepts, and work through different ideas. You are systematic
in how you have written these ideas, and you would put thought into how these can
be placed into a categorisation. You start off with a categorisation of ﬁve parts (for
instance) and then reﬁne this category into (say) three categories.
These two types of thought represent fast and slow thinking (see Kahneman [6]).
If you are thinking fast then you are most likely acting intuitively. You draw on your
experience and your knowledge to make decisions and choices. Kahneman calls this
“System 1” thinking. The thoughts associated with system 1 are automatic. They
are routine. We make decisions based on the available information. The second type
of thinking is slow, and Kahneman labels this as “System 2”. It is deliberate and

6
1
Introduction: Think, Prep, Sketch
requires more effort. Slowing down and being more deliberate can deter us from
making rash and unfortunate decisions. System 2 thinking is rational and is focused
on critical-thinking. We need to concentrate hard on ﬁnding solutions to a particular
problem. In creative discovery we need both. We need to be fast in our thinking, to
ﬁnd the easy and quick answers, but also we need to put effort into our thinking,
such to classify and organize our thoughts and ideas appropriately.
However these ideas have been initiated – whether they started as back-of-an-
envelope sketches, or through sustained effort – you will still need to further reﬁne
them. You will need to ascertain how they ﬁt in with current practices, and make
judgements to decide whether the chose solution is going to be appropriate and
useful. These ideas will need to be further planned, ﬂeshed-out and elaborated.
Additional detail will have to be added. If you are to give a sketch of your idea
to a developer, to build, then you will be probably required to add additional detail,
to explain your idea.
This is a process. You will start off with ideas, make preparation and do further
research, and then create the ﬁnal design documents. In this book, the ﬁnal output
we will be creating is a set of sketches. Indeed, for any project you will have three
stages: you will make steps to think through different ideas, you will then need to
plan and make preparation of what you are building to conﬁrm to you (and others,
that your ideas are suitable), and ﬁnally you will need to sketch your plans to make
them concrete, such that you can implement the software or commission it (for
example). Consequently, this book is split into these three parts: Think, Prep, Sketch,
see Fig. 1.1.
Thinking. There are many aspects to thinking. Some thoughts are creative and
enable new ideas to be generated. Other thoughts we have are critical, and help
us question our ideas. Different types of thinking are required at different stages.
Whatever type of thinking we are referring to at a particular time, enables us,
as software developers to consider many different aspects of the engineering
process. Often, programmers are too keen to get started, which can lead them
to head off on a wrong path. Especially some student learners are so keen to
just get coding that they end-up missing what the main functionality of the tool
should be, ending up with low marks in related assessments. But a little thought
up-front can help a great deal with the appropriateness and effectiveness of the
Fig. 1.1 The book is divided into three parts. Part I covers the vision, where you need to think
and imagine what the idea could look like consider the advantages and disadvantages of an idea
in comparison with others. Part , details what speciﬁc preparation you should make, such to create
good designs. Part III covers the Five Design-Sheet methodology in detail, with separate chapters
for each sheet, and looks to further reading and examples of people using the FdS approach

1.2
Think, Prep, Sketch
7
end result. Towards this goal, we explore how we can initiate new ideas, and how
we can engender creative thinking. In this part we also discuss ethical issues and
any ramiﬁcations of you doing the work. We ask “can you?”, “should you?”, and
“what if you?” do the work and build the tool.
Prep. The second part covers speciﬁc actions that you should do in preparation
before the FdS. The ﬁrst skill we will investigate is sketching. We will cover more
detail on why sketch, skills to improve your sketching, and also different medium
for sketching or low-ﬁdelity planning. As authors, we have been researching
(among other things) how to develop visualisation tools and create new data-
visualisation algorithms. An important aspect of thinking about new visualisation
tools is to make sure that you understand the data that you have. Therefore
as preparation for doing the FdS we will look at data analysis. We will cover
questions such as: What requirements are there on the tool? What does the client
want? What is the task of the tool? What data do you have or require to implement
the tool?
Sketching. While we can think about the ideas in our mind, we need a way to
record them. It is often through this very act of recording of our ideas that we
realise how these can be improved or whether they are ﬁt for purpose. One way
to display the ideas is to create a fully-rendered, picture of our vision. Such
computer-rendered images are useful, because they can be used to see exactly
what an interface, object or building may look like. However, these full-rendered
versions often look too ﬁnished, making people who see them less likely to
question the depicted ideas and their suitability in tackling the problem at hand.
On the contrary, what we want is a way to record our ideas yet still be
able to tweak on them, reﬁne and improve them, and allow people to readily
contribute and challenge them. Sketching our designs provides this half-way-
house. It enables us to record our ideas and exchange them with others, while
its approximate and unﬁnished state invites people to contribute, making it
more that they will question, reﬁne and adapt them. Following the Five Design-
Sheet method we work through sketching initial design ideas, planning them in
more detail, and ﬁnally presenting the realisation design sheet that can be then
implemented by yourself or given to someone else to build.
Throughout these three stages we are not advocating that you should do all the
thinking ﬁrst and then do sketching. Instead, we strongly suggest that sketching
becomes part of the thought process, and that you will need to contemplate about
your solution throughout each part of the FdS. The thinking that we are advocating
at the ﬁrst stage is more about preparing your mind and thinking through different
issues that could possibly occur. We are trying to get you to make ‘what if’
questions. For example, “if I build this tool, would it be usable?”, “if I build this
tool, how will it be integrated into current systems that the company uses?”. We are
encouraging you to be critical about your ideas. We are asking you to perform a
critical analysis of what could be. We are thinking through different combinations
and different possibilities in our minds-eye.

8
1
Introduction: Think, Prep, Sketch
Naturally, when you start a project you will have many questions in your mind.
These questions will be vague and general. You will be thinking over the challenge,
what to build, and how you can gather your thoughts together. Indeed, if you
have been tasked with building the tool – for instance, you could be a student
doing an assessment – then some of these questions may already be posed by the
requirements document that your teacher has given you. Some of these could include
the following:
•
So what are you going to build?
•
What have you been asked to build?
•
What ideas do you have in your mind?
•
What challenge are you trying to solve?
•
Where do ideas come from?
When you have decided what idea you are working through, then you need to
start to be more speciﬁc. Here you need to make ﬁrm the requirements of the tool.
Consider where it will be used by the user. You especially need to consider questions
over ethical considerations of the tool. Questions such as the following come to
mind:
•
What will the tool look like in the end?
•
What have other people done? (research)
•
Do you already have a solution to your challenge?
•
Are the ideas ethical?
•
Are the ideas suitable?
•
Will they make a good product?
•
Will they work with existing software?
•
Do you have any speciﬁc requirements to the solution?
•
Where will the tools be used, what environment and location?
Finally, you will need to work through the ideas that you have in your mind and
make them into usable plans. We use sketching and sheets of paper to articulate the
designs. At the end of the process you should be able to take your ideas and build
the tool; the concepts should be valid, ﬁt the requirements and have been properly
considered for their worth and value.
•
How will you record your ideas?
•
How will you work with clients?
•
How will you plan out your idea solutions?
•
How many component parts are there to your solution?
•
Is it actually possible to build the ideas?
•
How can you take your ideas and implement them?
•
Can you give your ideas to others to implement?
All these are relevant questions, and all need you to have a vision (or many) of
what the tool will look like. This book will lead you through contemplating this
vision (or visions), and help you make suitable plans to build the tool.

1.3
Focused Learning
9
1.3
Focused Learning
As educators we support focused learning and deliberate practice [2]. We want you
to focus on design, particularly design-by-sketching, and deliberately direct your
thoughts to consider different solutions. We wish you to pro-actively learn new skills
and to purposefully practice these skills as you go through this book. We help you
on this journey by providing a set of exercises at the end of every chapter. These
exercises help you to focus your knowledge and deliberately practice the skills that
we have been discussing in that chapter. We also want you to develop your critical
thinking skills, help you to better prepare and develop your sketching abilities. The
more you perform a Five Design-Sheet plan, the better you understand what to put
on the sheets and how to record your ideas.
There has been much talk about how long it takes to become an expert. For
example, Erricson [2] and colleagues presented some excellent work describing a
basic rule of 10 years of involvement needed, for becoming an expert. Likewise,
Malcolm Gladwell [4] in his book titled “Outliers” talks about the need for 10;000 h.
It may seem obvious, regarding some skills, where this would be true. Musicians
need to practice long hours to improve their skills and to master playing a particular
instrument. In other situations there may also be an advantage from genetics. For
example, we can imagine that basketball players may be generally advantaged if
they are taller. One counter argument is they may developed physically earlier than
most of their peers, and thus, because of their physique, were selected early as being
promising individuals in basketball. Therefore they may had more time to practice
and become experts sooner than others!
Superior performance by very young children without prior instruction may suggest excep-
tional promise, leading to the early onset of training. This in turn leads to a consistently
greater accumulation of practice (and hence, by our framework, performance) relative to
later-starting individuals. Ericsson et al. [2]
As a reader, you may be feeling that you will not be able to give over 10;000 h
to developing your design and sketching skills, and in fact, you did sketching as a
child and found it difﬁcult. But, the ﬁgure of 10;000 h somewhat masks the main
point: that it is not about putting hours and hours into mindless practice, rather it
is being focused on the task. What we want is for you to try to stay focused on
the target and make time count. Deliberate practice is also about being mindful and
understanding the process, knowing what you are doing and for what reason. In
our case, we are getting you to learn and develop your skills in design, sketching,
considering new ideas and critical thinking. It means that you understand how you
are improving as a learner yourself. Indeed, we suggest that you keep your ideas and
sketches together in a book or a folder, or you could scan them in to a computer and
keep them electronically. You can look back over previous sketches and see how
you have improved your skills in sketching, have developed your style, and have
ideated new concepts.
As authors, and educators ourselves, we wish to empower you to have the right
knowledge and right skills to do the job. We want you to be an empowered learner.

10
1
Introduction: Think, Prep, Sketch
Where you feel motivated to learn and develop the necessary skills, feel conﬁdent in
what you do and how to apply the techniques that you learn to different (and new)
situations. Throughout this book we want you to think about yourself personally
and how you are learning. To be a self-aware learner. We want you to be passionate
about design, and excited about developing your skills. We want you to be conﬁdent
to use the Five Design-Sheet methodology in your own problem solving. To be
self-assured in creating new ideas and work through different solutions that you
are confronted with. We also believe in a constructivist approach, where you as a
learner are involved in your own development. We wish to develop your critical
thinking skills and motivate you to become independent thinkers who are active
learners . This is why we encourage you to pick up a pencil and a pad, and start
taking notes. Start sketching and planning ideas, and work through the exercises at
the end of each chapter. Especially when we discuss design thinking, rather than
merely reading the text, we want you to start sketching. Grab a pad of plain paper
and a black pen and start making notes. Keep your own notebook and put your notes
and sketches in the book. Start sketching different ideas. Turn your imagination to
the challenges or projects that you are working on and do some sketching!
1.4
What Software Tools Can You Build, as a Result of this
Process?
It is useful at this stage to say what visions are possible: what tools can be built, and
what kind of software can be built as a result of this book. Actually, as authors we
do not want to dictate what can (or even what cannot) be built, because there are an
inﬁnite number of possibilities in computer interface design. Also, we acknowledge
that interface development is rapidly changing. The use of non-WIMP1 interfaces is
growing fast [9]. Computer interfaces that use pens (styluses), touch or gestures are
deﬁnitely on the rise. We do not exclude any of these interfaces, in fact we embrace
these new types of interaction, and (as researchers) we encourage developers to
develop more tools speciﬁcally suitable for these interfaces. Whatever style of
interface you are considering to build, we believe you should still go through the
stages of Thinking, Preparation and Sketching.
The data-visualisation tool is one type of interface that can be built. Figure 1.2
shows a sketch of a visualisation interface that was designed by a student. The sketch
shows a plan of their idea, alongside the completed tool that reads in historic rainfall
data. The user can load the data which is displayed at several levels of aggregation,
from one year, individual weeks in the year, to several years. The visualisation
shows data in several panels, and demonstrates the quantity of rainfall in Britain
from 1911 to 1933. The visualisation tool allows a user to display rainfall from a
speciﬁc regions in Britain. This ﬁgure shows the quantity of rainfall in Wales, which
1WIMP – Windows Icons Menus Pointers

1.4
What Software Tools Can You Build, as a Result of this Process?
11
Fig. 1.2
On the left, a sketch of the ﬁnal design taken from Sheet 5 of the FdS. On the right an
implementation using the Processing.org Java library to display rainfall in Britain. It is clear to see
that there are similarities, but also there are differences in the ﬁnal implementation of the tool
is shown by the colour highlighted in the map at the top. This work was submitted
as part of the Information Visualisation Masters module, and demonstrates how a
student has taken their early sketch ideas and changed them into a working prototype
tool. If we were being critical, then there are several places where the tool could be
made better. For instance, the colour combinations could be improved, the summary
information at the top of the page is extremely small and could be made bigger, and
there is no clear scale or tick marks to indicate the actual quantities of rainfall.
However, it is an excellent example to demonstrate several lessons that we are
expressing. Namely it demonstrates that a student has thought through the challenge,
come up with a design sketch, and then interpreted how to implement the tool.
Data-visualisation tools are not the only type of interactive systems that can
be built. In a web-technology course, students are asked to develop an interactive
tool that will manipulate geometric patterns through an interface. Figure 1.3 shows
the sketch that a student made on their realisation design sheet. The image on the
right shows a picture of their ﬁnal tool. They chose to focus on geometric patterns
that looked like ﬂowers. It is interesting to see what types of patterns can easily be
generated by very few basic shapes. While each of the results are somewhat similar –
they are circular, and are symmetric – there are still many contrasting visual patterns
that can be created with the tool (see Fig. 1.4).
The tool works in a web browser, uses HTML5 and CSS for the slider controls,
JavaScript for the functionality and interaction, and the graphics is rendered using
Scalable Vector Graphics (SVG). Sure it is a simple tool, but it is an excellent
example of an interactive tool. In fact we can clearly see some basic principles.

12
1
Introduction: Think, Prep, Sketch
Fig. 1.3
The left image shows a sketch of the layout of a ﬂower pattern generator program that
was sketched by a third-year (ﬁnal year) computing undergraduate student. They then implemented
a version of their tool (as shown on the right) which allows a user to change different parameters
Fig. 1.4
Examples of geometric patterns created by the pattern-generator tool. While this is
basically a simple interface the ﬂower-pattern tool can still create some interesting patterns
There are buttons to control the interface (the sliders), a position where the results
are placed (the SVG output), and while not visible, there is some underpinning
model that holds the state of the system parameters. In this case the state is a set
of numbers that represent the properties of the petals.

1.4
What Software Tools Can You Build, as a Result of this Process?
13
The pattern generator has been designed with three columns of controllers: colour
controls (on the left of the view), with opacity controls and size controls to the
right. These sliders and buttons control the appearance of the petals, two back, two
middle and two front. The parameter values are stored as variables and represent
the state of the system. The JavaScript code creates the SVG geometry, which is
displayed in the centre. The geometry gets created when the user releases their
mouse click, after sliding a slider or selecting a button. The implementation connects
the interface (the buttons and sliders etc.) to the rendering of the geometry via the
Document Object Model (DOM). The DOM model treats the HTML document
as a tree structure, to allow the program to access and individual elements of the
page. There are certainly many ways to implement this tool. For instance, the
student could have used different JavaScript libraries (such as HTML5 Canvas,
Raphael.js, processing.js, etc.). However the implementation provides us with a
good demonstrator to investigate interfaces in more detail, and to explore general
principles and structures of computer interfaces.
Most interfaces have a similar structures. In a simplistic view, the buttons on the
screen (or the gestures we make) are used to call functions (which provide the logic
and the operations), that then perform some result. Obviously, in reality, there are
many different interaction elements that can be created (such as sliders, buttons,
radio buttons, drag-and-drop etc.). But these interactive elements all share similar
traits. Let us consider a few example interfaces. In a computer driving game the
input could be from the AZ and NM keys to control the car up/down and left/right,
respectively. The program needs to ascertain whether the user wants the car to move
forward, and if it is free to move forward then the outcome is to play the moving
forward animation. If an obstacle is hit, the car crash animation needs to be played.
In another tool, the user wishes to display data (data visualisation), the developer
has created menus to load the data, and buttons to determine how the data is ﬁltered
and mapped onto the output in graphical patterns.
Whatever the interface, similar structures exist. These, in computer science, are
software patterns.2 These patterns are strategies that have been found to be useful
and are generalised, such that they can be applied to many different situations. A
useful pattern for many interfaces is the Model View Controller (MVC) pattern.
(We do acknowledge that there are many variants of the MVC pattern, but for now
let’s keep it simple.) The MVC pattern is useful for user-interface development. The
ﬂower-pattern generator uses the MVC model, and is shown in Fig. 1.5. The Model
is the underlying data that the user is storing or adapting. The View enables the
information to be displayed. It is the actual result of the tool. The Controller part
of the model represents buttons, sliders and other components that manipulate and
control the underpinning model. The driving game can be considered with a similar
pattern. The user controls the car, and the program then needs to decide whether the
2To look further on software design patterns, see “Design patterns: elements of reusable object-
oriented software” by Gamma et al. [3] and also for data-visualisation “Software design patterns
for information visualisation” by Heer and Agrawala [5]

14
1
Introduction: Think, Prep, Sketch
CONTROLLER
VIEW
MODEL
manipulates
observes
graphical
display
of model
Variables
Stroke            TRUE
Back petals 1     #7ED7E6
Back petals 2     #F56170
Middle petals 1   #D937CD
Middle petals 2   #60FF31
Front petals 1    #B0108D
Front petals 2    #901DDA
Fig. 1.5
The ﬂower-pattern tool uses the Model View Controller software design pattern, where
the Controller updates the Model, the Viewer reﬂects the state of the Model, and the controller
generates the graphics
car crashes or moves forward. For the data-visualisation example the user needs to
have several menus and buttons to control how that information is mapped from the
data elements onto the graphical elements. Maybe a suite of buttons could be used
to change the colourmap of the data, whereby the button switches the view from
showing data in a greyscale colourmap, to that of a white to blue scale.
The idea of patterns is useful and relevant to us in this book. When learning
computing programming and developing interactive systems it is often useful to
follow a pattern. Many interface developers follow the MVC pattern (or a variant)
to create suitable interfaces. The structure enables developers to work separately,
yet together on the same problem. The structure enables code to be more easily
re-used, and new people (who need to pick up your code at a later stage) can easily
understand how components are connected. While we are not necessarily advocating
that the MVC pattern is useful for all situations, it is a good starting point.
The Five Design-Sheet method, that we discuss in great detail in Chap. 2, is also
a pattern: it is a general method, which can be applied to a wide range of situations.
The FdS has a series of steps to help you think about the problem at hand, in small
steps. It can be re-used and once learned can be exchanged and applied as a model
with other people. Sheets 2, 3, 4 and 5 all have a similar structure, that enable you to
detail the Vision (Big Picture), Components (and operations of the functions), and
what the main functions do and how they are created. By doing this planning you
are able to think through the functionality of the interfaces, what they would look
like, and how they could perform.
1.5
Think: In Your Minds-Eye
While the act of imagining new design solutions can be demanding, it can also be
a fun and rewarding experience. Such solutions can be insightful designs, futuristic,
unconventional or unusual. They can be made out of any material, include any

1.5
Think: In Your Minds-Eye
15
components, and work in any way that your imagination can handle! In your mind
there are no limits, no one to stop you from imagining the impossible. This my
sounds like a thought experiment. On the one hand it is – we are actually advocating
the use of creative visualisation. We are asking you to use your imagination, and to
consider in your mind what the idea will look like and what it will do.
Let us do a little exercise now. Imagine that you have a two-dimensional white
square that is hovering just in front of your head. Now, along with the square,
imagine that you have a round drill bit. The drill is quite large, yet not too sharp. Use
the drill to carve holes, with their vertical axis in parallel to the square plane, into
the four sides of the square. This shape now looks like an idealized jigsaw piece.
Now you can easily duplicate this shape. Make a 2  5 grid of these shapes, and
place them next to each other. In this grid formation, colour them in different shades
of grey, from a light grey on the left to a dark grey on the right. Once you have done
this, you can open your eyes and look to the Fig. 1.6. Look at the picture that we
drew and see if it matches with the picture held in your imagination.
The picture you have considered in your mind may be slightly different, but
hopefully not much. You would have needed to create a virtual plane in three-
dimensional space to put your two-dimensional square. You would have needed
to make assumptions over how large the square is – but probably you would have
Square
Drill-bit
Result
Intersections
Fig. 1.6
Imagine that you have a two-dimensional white square that is hovering just in front of
your head. Now cut into the square with a small drill. Now duplicate the result 10 times, placing
them in a grid 2  5, color each one a darker shade of grey

16
1
Introduction: Think, Prep, Sketch
automatically scaled the image to make it ﬁt into your minds-eye! Sure, there will be
differences. Your drill bit may have been sharp. The depth of how much the drill has
entered into the square would be different. As soon as we have mentioned drilling
your mind may have also considered the material that you were cutting into. Maybe
you had imagined wood, or metal. You may have even considered what happened
to the swarf (the remaining material that comes off the object when it is drilled).
Maybe in your imagination you still have the swarf in the picture. The depth of
the cuts could have been different. There are many possible interpretations of this
vision, and in fact, there is no wrong answer. It is just that one persons imagination
is different to another person. What we are doing here is creative visualisation. We
are telling a story, explaining a situation, and in your mind you are painting the
picture.
Creative visualisation is thus a cognitive process, where you generate a visual
mental image of something (with your eyes open or closed). You are forming a
mental image in your mind. You can rotate and manipulate that image in your brain.
At this point, we do note that we are using the word visualisation to refer to the
creation of a mental image of these stories, and that the pictures are not made explicit
in the real world, but rather they are merely imagined by yourself. By forming a
mental image, you can manipulate the idea in your mind, turn it around and look
at it from different angles. You can also start to work out whether it is feasible and
how it could interact with other things. For example, considering the adapted square
that you imagined before. You can now rotate it, overlap it with other versions, cut
out a circle in the centre etc. There are endless possibilities.
These are mental images that you have in your mind. You form such pictures
when you give directions to help someone ﬁnd a building, when you try to recall
what a person looked like ten years ago, or what they were wearing last week. Many
of the pictures we have in our mind are created from events that happen to us as
individuals. As such, we can remember places, people, buildings, trees and positions
of objects. We often remember these as pictures. While we can recall images, as we
have seen, we can create new thoughts.
These thoughts and ideas are obviously shaped by who we are, our experiences
and knowledge and the environment that we live. In fact, gaining new ideas may
require us to push out of our comfort zone, move us into a new environment, or get
us to meet new people. We will discuss methods that help us create new concepts in
Chap. 7 when we discuss the generation of ideas for interface design. Yet, this book
is more than a methodology for thinking. Yes, we cover idea creation and look where
ideas can be inspired from, but we also cover detail of acting upon and drawing your
ideas such that you and others can use them. By placing the ideas on paper you are
working through the ideas, moulding them and helping them take shape. You are
committing the concepts that are running through your mind on paper. These sheets
of paper then be exchanged and shared with others.

1.6
Design by Sketching
17
1.6
Design by Sketching
As mentioned above, we advocate sketching as a methodology, not only for
planning, but for exploring ideas and deciding on their potential validity and
usefulness. By using pen and paper, ideas can easily ﬂow from your mind to a
medium that forces you to consider (at least some of) the important issues. These
sketches are low-ﬁdelity prototypes. They represent, and stand-in, for the original.
Indeed, the mere act of conveying the idea to paper can help you decide on the
validity of that concept.
Lo-Fi prototyping works because it effectively educates developers to have a concern for
usability and formative evaluation, and because it maximizes the number of times you get
to reﬁne your design before you must commit to code. Marc Retig [7]
Low ﬁdelity prototypes are not meant to be true-to-life fully ﬂedged ideas, rather
they are meant to have enough detail to demonstrate the idea and to express the main
concepts. These prototypes help you consider different approaches in designing that
product, and they help you familiarize yourself with big issues and challenges that
you could face when you build the ﬁnal version. They also help you evaluate a
speciﬁc idea and judge whether it is a sensible one, how it could work in practice.
Finally, they encourage you to start planning some of the detail necessary to put
together the ﬁnal product. Indeed you may have ideas in your mind that would not,
actually, be suitable or in fact possible. It is certainly possible to imagine solutions
that would be impossible with today’s technology, or ideas that you would not be
able to technically build, or too expensive to build. But by working through them in
a sketchy form, you are able to ﬁlter out the ideas that are not suitable.
Figure 1.7 shows some simple sketches: a cube, a spherical shape and a cone.
As humans, we realise that these sketches represent three-dimensional objects.
Predominantly, it is by the shadows, and the light and dark areas that we realise that
they constitute 3D entities. We can also start to imagine that they can stand-in for
something more complex. The cube could be a house, the spherical shape a chicken
egg, and the cone an ice-cream-cone. Each of these sketches now take on different
Fig. 1.7
Sketched images of a cube, sphere and cone. We instantly understand that these are
three-dimensional objects, but we can also imagine that they represent (stand-in for) other three-
dimensional objects

18
1
Introduction: Think, Prep, Sketch
interpretations. Our mind starts to extrapolate and make several assumptions. For
example, the house is heavy, it may be made from bricks, it is big and protects
people from the elements. The egg is small, it is fragile, you can hold about three in
your hand, if you drop one it will break and the yolk will be spilled, and it can be
used to make cakes. The cone is crispy, it can be eaten and can hold ice-cream.
Our imagination takes these simple pictures and extrapolates the concepts to ﬁll-
in-the-gaps with stories and images. It is our brain that builds a deeper story. We
perceive these pictures in our mind, and our brain interprets the pictures, along with
the knowledge and experiences that we have had. As humans we have a model of
how the world works and our mind starts to make assumption over how we could
interact with these objects. Likewise, we are not proposing that everyone is an artist
and that the drawings you create are works-of-art. Rather, we need to have sketches
that look good-enough such that our brains can understand them and interpret them.
It is the story around them that helps them to be relevant.
Therefore, the objects that we sketch must be interpreted in context. In other
words, the sketched concepts must be read by someone who has a grasp of the task
in hand. The sketches form an important part of storytelling. You are recording your
thoughts in sketch form to tell the story of how the idea must be implemented. The
story gives the person who needs to read the sketches an understanding of what to
expect. For example, we discussed how our mind makes a model of the world, and
we have already explained that our three sketches potentially represent a house, an
egg and cone. But the model in our mind will go further. We will make assumptions
(in our mind) that depend on our own experiences.
For example, you will have made a slightly different picture in your mind of
the colour of the egg shell. It will depend on what colour eggs are most familiar to
you. The colour that your mind imagines probably depends on where you live in the
world. The actual colour of egg shells depend on the breed of chicken. In the USA
the majority of eggs are white; they have been produced by White Leghorn, Rhode
Island Red, or New Hampshire breeds. Whereas in Britain most eggs are brown
and have been produced by Warrens. This is a historical situation. You will paint a
picture in your mind of the colour of egg that is most familiar to you.
The context of the work is therefore very important. The context gives the
reader an understanding of how to interpret the sketches. We build up a more
complete story in our mind, and our mind ﬁlls in the missing gaps appropriately.
In our example, it was our written words that helped you think through the story.
You may have already had an idea of what they could represent, but the words
conﬁrmed the context and the models in your mind became clearer. This idea is
similar to the backstory in ﬁlm or television. The backstory describes the historical
background of the character and elements that are required to understand the plot.
These backstories could be revealed to the audience, such as through a narrative, text
or scenes in the ﬁlm, or could be used by the creator for their own use. In sketching,
various elements could be used to create such a context, such as written text, titles
and other labels, which can help to better explain the images. Alternatively, the
creator could make an oral presentation of the ideas to give the sketches their
backstory.

1.6
Design by Sketching
19
The sketches themselves are merely devices to help us make our vision explicit.
The purpose of the sketches is to articulate the ideas in your mind to enable someone
else to understand them. The act of putting these ideas on paper provides a record
of your thoughts. In fact, after several sketches the set of ideas demonstrate how
your thoughts have developed and how the ideas have changed. This is a process
of reﬁnement where you are gradually honing your ideas into something that will
work. In other words, what you are doing is to turn the ideas in your head into more
reﬁned versions, that are committed to paper and that can then be crafted into a
product or a tool.
Application of the design is important. The designs and products that you are
creating have a purpose. There is a reason for producing them. In fact, many
developers (who create computer software, especially who make data visualisation
tools) adopt a design-study approach. This is a problem-driven approach, where
developers discuss challenges with potential users or clients. The approach allows
users to tackle real-world challenges. Often the study is done in association with a
client. The prototype that they build is appropriate for the particular client.
The design-study approach is therefore a process, which starts by talking to the
client, discussing their current solutions and products. You explore different aspects
that they wish to improve, or challenges that they do not currently have solutions
for. Moreover, your design process should be based on the requirements set by the
client, so that the solutions you end up building are ﬁt-for-purpose. Who decides on
this ﬁtness will depend on many factors, and especially the relationship you have
with your client.
On the other hand, you may actually not have a client. Then your designs are
motivated by other factors. You may be doing research on your own, or have been
asked to create a solution as part of a taught course. Whether you are someone who
has a client, or a teacher asked you to create something as part of an assignment,
the challenge is somewhat the same: you need to think through different possible
outcomes, use your knowledge and experience to develop something new and
original, and something that ﬁts a pre-deﬁned set of requirements.
There are many other factors that affect the design process. Pressures and
inﬂuences can come from a variety of sources and situations. For example, the
physical location and environment that you are working in can change the results.
Some environments inspire, while others may possibly inhibit creativity. Your
experience and background can have a bearing on what type of designs you imagine.
The resources that you have available, as well as, the conversations that you have
with friends and colleagues, and the words you share with other people, all have an
impact on the types of designs you create. Merely the act of talking through your
problem with someone else can inspire you and direct your thought process to a
suitable solution.
The environment and situation where you work is unique to you. Your expe-
riences make you different to other people, and your knowledge and even under-
standing of the problem, all help to shape your design ideas and the solution that

20
1
Introduction: Think, Prep, Sketch
you develop. It is clear that some of these situations are under your control,
whereas others are impossible to change. So there are many conﬂicting demands
and constraints that would shape the design outcome and how it can be applied.
In this book we also look at some of these pressures and inﬂuences on the design
process. There are many considerations to make even before you sit down and sketch
(see Chap. 4). You should think about the requirements and needs of the solutions.
There are many dimensions to explore, from looking at legal issues to investigating
whether it has been done before. Then after you have created your design-solutions
you need to question whether they are any good. You need to also contemplate
where and how they will be used.
In your design engineering we wish you also to be consistent and comprehensive.
Every time you do a design-study you need to follow the same method. You should
build up your skills in design and sketching. Then, you get better, you improve
your knowledge and understanding of the process, and realise how to use it more
effectively and integrate it with your current practices. Going to a client and saying
that you are going to follow the Five Design-Sheet methodology could be unusual
at ﬁrst. It will most likely be unfamiliar to them. However when you meet with that
client again you won’t need to explain the concept, but you can get straight down to
the design process.
Likewise if you are a student, you can use the method for your dissertation project
(for example). At the start of a design chapter you can explain the methodology
and then use it to perform your designs. As the result of the process you have a
plan (the ﬁfth sheet, which is the realisation sheet) that then can be built. If you
are developing a software tool, then you may need to work out how to speciﬁcally
divide the code into smaller parts. The FdS process will get you some of the way of
the design process. It will help you think through the ideas and put them on paper
in a structured way. You will need to think how the ideas are relevant, and whether
there are any implications for the design, and also you will need to consider how to
apply it and act upon it at the end. But once learned, you could apply it to different
projects. We have used it in many situations, including Masters courses, for PhD
research, and with companies to consider different solutions. The FdS is therefore
a kit; a resource; a process to help you consistently think through many possible
solutions and record your design ideas.
It is within this design ideation space that the Five Design-Sheet methodology
works well. Each chapter develops the concepts further and discuses issues that you
should consider. We encourage you to Think through different ideas and ascertain
what is important and what is feasible, Sketch ideas to reﬁne them and record them,
and use this methodology to Act to help you work out what you are going to build
or create.

1.7
Developing Your Skills
21
1.7
Developing Your Skills
The main question that comes to mind is: how do you turn your ideas and sketches
into fully operational tools? Often the sketches that you have created need to be
interpreted by a developer. Depending on who the plans are for (whether yourself
or someone else to program) you may need to make some more formal plans, after
these sketchy plans have been created. For instance, if you are working with Object
Oriented programming techniques you may wish to produce a Uniﬁed Modelling
Language (UML) model [10] to express the main Objects and their respective
interaction. We will discuss this process more in Part III. See Chap. 11 on Five
Design-Sheet Examples and Applications, where we present various pieces of
related work for you to study the ideas further and advance your skills.
Another question you may be pondering is: what techniques are similar? There
are certainly other methods that help you think through problems and develop tools.
We have already mentioned about the Model View Controller (MVC) pattern, and
indeed there are other such patterns that may be useful. Thought the book we are
referring to various additional references, listed at the end of each chapter. You
are encouraged to refer to them and use them, in order to complement this book.
Obviously we have covered many topics within this book, and so it is impossible to
include related work from every domain. We have tried to make it relevant to a broad
range readers, and covered a broad range of subjects from psychology, visualisation
design, design-ideation and in fact Human Computer Interaction.
There are certainly many skills that we are wishing you to develop. We will
go through each of these skills in turn. We believe that you do need to practice.
The more you do something then the more you get better at it. This is experiential
learning. You are learning as you are doing, and you are developing your skills as
you work through the book. At the end of each chapter, we include a set of exercises,
which are designed to help you work through the ideas explored in that chapter and
to develop your skills further. We encourage you to do these exercises as you read
the book.
Sketching is deﬁnitely the main skill that we are advocating. But we understand
that not everyone thinks that they can use a pen or pencil well, or that they can make
good designs. Maybe the only place you feel comfortable with sketching is at a party
and doing one of those sketchy games. We will discuss sketching in more detail in
Fig. 1.9. At this stage, we do not want you to be worried about your sketching skills
(or lack of). We are not expecting you to draw fantastic pictures, rather we are only
asking you to draw pictures that are suitable for communicating the ideas. They are
exactly what they are: sketches!
Another skill that we are looking at is idea generation and getting you to think
up new ideas. We will encourage you to conjure many alternative ideas. In fact, we
believe that considering alternatives is a powerful strategy. Forcing yourself to think
through many solutions helps you to consider what is the best solution, and possible
trade-offs. You are learning whilst working through alternatives. The Nobel prize
winning chemist Linus Pauling said “The best way to have a good idea is to have a

22
1
Introduction: Think, Prep, Sketch
lot of ideas” [1]. Having lots of concepts allows users to consider what is suitable
and maybe what the best solution is. In fact, it is to these imaginative solutions that
we focus in this book.
Throughout this book, we are certainly encouraging you to think divergently. The
goal of divergent thinking is to generate as many ideas as you can. Convergent
thinking, on the other hand, is a method that arrives at a single (one and only)
solution. For example, considering all the uses of a brick is divergent thinking,
whereas considering what week day is today, is convergent thinking. However, we
acknowledge that it is not easy to create lots of different ideas on demand. You will
ﬁnd it a challenge to think up 50 solutions now, and even more difﬁcult to create
several life-changing product designs in ﬁve seconds. However, each of these tasks
are possible, and you can create novel solutions, and products that are unique. While
no technique is panacea, there are methods that can help you consider new ideas,
and to contemplate new solutions.
Apart from creating many concepts, you also need to decide which is the optimal,
bearing in mind a set of requirements. Making appropriate judgements and the
right decisions along the way is again another skill that needs to be developed.
The Five Design-Sheet methodology is a complete solution, in the sense that it
encourages you to think divergently, work through ideas, decide whether they are
useful and possible, and then develop some of the detail that would be required to
implement it into a product or prototype. Consequently, it is not only a matter of
creating new ideas, but these ideas need to be placed into context. You will need
to consider the reason for these multiple views. You will need to contemplate the
goal of the tool, how it is going to work and what its key selling point is. You will
need to consider the whole pathway from concept to use. This again requires you to
provide mental pictures. We are asking you to not only create the idea, but to project
how this interacts with other products and then could be used in the future. It is a
similar mental agility task to giving directions to someone in the street. You have to
visualise in your mind the route and abstract the key points. Likewise you will think
of a solution and then project how it ﬁts in with other ideas, and how it could be
used.
Subsequently, another skill is being critical. We need to learn not only how to
consider a range of alternative ideas, but also make decisions over which is better or
worse. We will explore ideas of thinking and critical evaluation of these ideas. The
act of discussing these ideas with others also can help. So, with a client you may then
bounce off each other different potential ideas, and take your three main designs and
discuss how they could each be implemented. It is often through conversation that
you realise which is the best idea and how it can be adapted to make it even better,
or how it can be applied to a new (and up until now) unforeseen situation. Being
critical is not only about being negative, rather it is making a balanced argument
over the situation. To perform critical analysis and make judgements on these mind-
generated visions, you need a few things. You need a goal of what your product
or solution will solve. You will need to guide your thoughts onto solutions that
work and make judgements over what will work and what won’t. In order to make

1.8
How to Read this Book
23
these decisions, you will importantly need to understand the problem domain, and
evaluate that your solution is new, and that it is something someone actually wants.
So you may need to perform research over the domain before you can start the
design process. When you are researching the domain, and ﬁnding out what other
people have built or achieved, then you may come up with your own ideas. If you
are creating a computer interface it will be good to ﬁnd what other interfaces there
are, and what functionality they achieve. How much they are being sold for, and who
are using them. Indeed, this information would be required to understand how the
product could make money and how it could be marketed and sold. For example, to
create an interface that visualises data you will need to understand what data you are
going to display, how big the data is, how frequently it is updated etc. Performing a
detailed data-analysis is a requirement before starting to work out how to display it,
and how to interact with it.
Thinking up new ideas is certainly a skill in itself, but while they are ideas in
your mind, you need to think about how they can be exchanged and shared with
other people. Sketching these ideas on paper is often the easiest way to explore
these concepts. In fact, we advocate that there are many beneﬁts to putting the ideas
on paper. It helps you to think through the different potential solutions. The act of
putting pen to paper helps you to contrast different and help you decide whether the
idea is workable. You are forcing yourself to consider the big picture and the vision,
to think about the main selling point and to work through some of the ﬁner details.
You are making explicit the ideas in your mind.
1.8
How to Read this Book
You can obviously read this book from start to ﬁnish. The book is designed to
demonstrate the design-by-sketching process and the chapters follow the method-
ology in order (see Fig. 1.8). First you would need to think about the problem you
are going to solve. This is covered in Part I. Then you will need to prepare and think
about the reason for the tool, what it is supposed to do (covered in Part ). Here you
can get a kit of pens/paper together, work out the task and speciﬁc requirements
of the problem and consider the data or input to your system. Finally you need to
sketch the design ideas and work through alternative design solutions, covered in
Part III, and we ﬁnish the book by working through the Five Design-Sheets method
in full.
Another way to use the book is to focus on one of the parts. You may have already
done some designs using the Five Design-Sheet method, but wish to develop your
skills in idea generation. In which case you could jump to Part I. Alternatively, you
may wish to merely focus on the Five Design-Sheet methodology itself; then ﬁrst
read the summary chapter on the Overview of the Five Design-Sheet Sect. 2.1 and
then jump to Part III. Finally, the chapters can be read individually. This may be
useful, for instance, if you have an assessment on ethical issues for User Interface

24
1
Introduction: Think, Prep, Sketch
Fig. 1.8 The sections of the book. Showing the three parts. Part I covers introductory material and
provides an overview of the whole methodology. Part covers sketching skills, graphical marks and
further creative thinking. Finally, Part III works through each sheet in turn, ﬁnishing with some
worked examples
design, or to perform a STEEPLE analysis. If this is the case, then jump to Chap. 4
on Social, Ethical and other considerations to interface design.
This book has been designed with learners in mind. We want you to develop
your skills and abilities and be able to plan better interface developments. Whatever
learner you are, this book is for you! You may be a student at a University, or
someone at a company who wishes to use the methodology as a way to articulate
your design ideas. You may be an educator who wishes to use this to teach design
principles and structured design processes. You may be an individual who wishes
to develop their own skills and learn more about divergent thinking and sketching
alternative designs. Learn more and develop your skills further by:
•
Going through the exercises at the end of chapters, where available.
•
Reading the Application chapter, (Chap. 11), and applying the technique in
different projects and situations.
•
Doing the FdS many times (the more you do it, the better you get!)
•
We suggest also that you read around the subject and look at related work that
we have placed in each chapter.
For your ﬁrst task, we suggest that you assemble a kit (Fig. 1.9). In your kit,
include the following items:
•
sheets of drawing paper (we suggest A3)
•
black drawing pens
•
a small set of coloured pens
•
(optional) access to scanner
•
(optional) ruler may be useful

References
25
Fig. 1.9 Assemble your kit
of paper and pens. We
encourage you to use pens,
rather than pencils. We do not
think that using erasers is
useful, you can merely put a
line through the sketch if it
went wrong. This is because,
the act of making mistakes
helps you reﬁne your ideas
When you read the rest of the book, make sure that you take notes and make
sketches. Put your thoughts down on paper through sketch form. Even put your
thoughts online on social media. You could make some sketches using the FdS
process and put your sketches on social media. For instance, you could use
microblogging and place reference the FdS method using #ﬁvedesignsheet. We even
suggest that you research to see how other people are using and creating designs
using the FdS. By looking at other peoples’ work you can start to get ideas of how
you can improve your design sheets.
References
1. Crick F (1996) The impact of Linus Pauling on molecular biology. In: The Pauling symposium:
special collections, The Valley Library, Oregon State University
2. Ericsson KA, Krampe RT, Tesch-Römer C (1993) The role of deliberate practice in the
acquisition of expert performance. Psychol Rev 100(3):363
3. Gamma E, Helm R, Johnson R, Vlissides JM (1995) Design patterns: elements of reusable
object-oriented software, 1st edn. Addison-Wesley Longman Publishing Co., Inc., Boston

26
1
Introduction: Think, Prep, Sketch
4. Gladwell M (2008) Outliers: the story of success. Penguin, London
5. Heer J, Agrawala M (2006) Software design patterns for information visualization. IEEE Trans
Vis Comput Graph 12(5):853–860. doi:10.1109/TVCG.2006.178
6. Kahneman D (2011) Thinking, fast and slow. Farrar, Straus and Giroux, New York
7. Rettig M (1994) Prototyping for tiny ﬁngers. Commun ACM 37(4):21–27
8. Roberts JC, Headleand C, Ritsos PD (2016) Sketching designs using the ﬁve design-sheet
methodology. IEEE Trans Vis Comput Graph. doi:10.1109/TVCG.2015.2467271
9. Roberts JC, Ritsos PD, Badam SK, Brodbeck D, Kennedy J, Elmqvist N (2014) Visu-
alization beyond the desktop–the next big thing. IEEE Comput Graph Appl 34(6):26–34.
doi:10.1109/MCG.2014.82
10. Rumbaugh J, Jacobson I, Booch G (2005) The uniﬁed modeling language reference manual,
2nd edn. Pearson Higher Education. Boston, United States.
11. da Vinci L (2005) Da Vinci notebooks. Proﬁle Books, England, UK.

Chapter 2
Overview of the Five Design-Sheets (FdS)
Abstract Planning by sketching is a powerful strategy. It allows you to think
through different ideas and explore them on paper. The Five Design-Sheet (FdS)
methodology provides a helpful structure for planning and designing interfaces.
Ideas are brainstormed and sketched on the ﬁrst sheet. Sheets 2, 3 and 4 capture
three principal designs, and sheet 5 presents the design that will be implemented.
You can use the methodology to plan data-visualisation tools, business applications,
games and other interactive interfaces. This chapter presents an overview of the
method. We introduce each sheet in turn and explain how it can be applied to a
variety of interfaces.
2.1
Introduction to the FdS
The Five Design-Sheets methodology [6] is a process which helps you sketch
prototype designs of interfaces, think through many alternative solutions, and create
a ﬁnal realisation plan. The plans can then be interpreted and used by you (or
someone else) to create an interactive computer tool. The method is ideal for
designers and computer programmers who wish to plan, design and implement
interactive interfaces, such as data-visualisation tools. The FdS enables you to think
and contemplate what the tool will do and explore its main functions. It encourages
you to consider alternative design ideas, and think through the advantages and
disadvantages of those ideas. It could be possible to use the method to design non-
interactive computer systems, or even to design physical products. However, the
main focus of the FdS methodology, in this book, is the planning and creation of
interactive computer systems.
The method has ﬁve stages, each corresponding to one out of ﬁve sheets of paper.
Information that should be placed on each sheet is shown in Fig. 2.1 and the whole
process is depicted in Fig. 2.2. Each sheet of paper has ﬁve parts and is used for
a different purpose. By using ﬁves throughout it is easier to remember the process
and the individual concepts. The process will help you think through your challenge
and make an appropriate solution. Unfortunately we are unable to guarantee that
the solutions you produce will either make your money, or be successful! We can
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_2
27

28
2
Overview of the Five Design-Sheets (FdS)
Fig. 2.1 The ﬁve sheets. Sheet 1 is the ideas sheet. Sheets 2, 3, 4 show three alternative designs.
Sheet 5 is the ﬁnal realisation sheet
Fig. 2.2
Before this process is started you should THINK, and consider the ideas. The design-by-
sketching process consists of ﬁve core stages (1) preparation and considering the task and meeting
with a client (if there is one), (2) IDEATE (and generate individual designs, recorded on Sheet 1 of
the FdS). (3) THREE DESIGNS are created (on sheets 2, 3, 4), (4) REFLECT on the ideas of sheets
2, 3, 4. (5) Create the ﬁnal REALISATION DESIGN (sheet 5). After the process you would use the
plans and build the system
say, however, that the method will help you think through the different ideas and
consider which of those ideas are best for the task. The thoughts and challenges are
yours, but we provide the structure for you to follow.
Sheet 1 is the ideas sheet, where you to think and sketch different design concepts,
and consider many possible outcomes.
Sheets 2, 3 and 4, where you create three main designs. These are alternative
designs; three different solutions to the same problem. Each one of these
solutions could be implemented, and each have advantages and disadvantages

2.2
The Design By-Sketching Process
29
for their potential use. The positive and negative aspects of those designs are
used to help decide which is the best solution for the task in hand. The sketches
contain enough detail to describe what the system would do and what it would
look like.
Sheet 5 is the ﬁnal sheet. This sheet contains a realisation of the design to enough
detail that would allow someone to understand your visions and implement what
you have designed.
Figure 2.1 shows a sketch of the ﬁve sheets and the type of information that is
placed on each of them. There are two types of sheet: (i) the structure for sheet 1,
and (ii) the structure for sheets 2, 3, 4, and 5 which is similar. The ﬁrst sheet has a
different structure, a more informal layout, to allow greater ﬂexibility in exploring
different ideas. The informal structure does not constrain creativity and the ideas
can be sketched on the sheet as they are formed in your mind. By using this strategy,
sheet 1 therefore becomes a record of how the ideas were initiated and came about.
We do encourage you however to use the whole page, to start at the top with more
general ideas, and work down the sheet by thinking over the ﬁve categories (Filter,
Categorisation, Combine & Reﬁne and ﬁnally Question). By following this layout
strategy it is easier for an observer to understand how the ideas have been formed
and how they were reﬁned throughout the sheet.
2.2
The Design By-Sketching Process
It is important to highlight that we are talking about an iterative process, the whole
of which is shown in Fig. 2.2. Processes contain several parts, each of which may
need different skills, and each of the parts follow from one to another. Part of the
design-by-sketching process is thinking – you need to consider and work through
different scenarios in your mind. You’ll need to consider whether you can do the
task, whether you should do it, and what the ramiﬁcations would be if you do
implement it! You’ll also need to make preparation, by thinking about the task,
what the client requires, and also by considering and preparing any data that will be
used. Finally, you will need to wear your creative thinking-cap, and try to come up
with new ideas, consider different alternative designs, and commit those on paper
using sketching. Indeed, the act of sketching the ideas helps you work through them,
complete them, help them mature. On the one hand, you may come to realise that
one idea is not clear for fully ﬂedged, because you cannot work out how to sketch
it. Or on the other hand, you may feel some ideas can be further enhanced, after you
have sketched them down on paper. An important part of the process is reﬂection
and critical analysis. Here you will need to consider what is good and what is bad,
with regards to your idea. Through this reﬂection stage you can start to reﬁne you
many ideas, and gradually group them down to a few workable solutions.
We have, intentionally, designed the methodology to be general. We are not
prescribing what type of computer interface or system you will (or could) build.

30
2
Overview of the Five Design-Sheets (FdS)
In fact we believe that you can use the Five Design-Sheet method in a wide range of
scenarios. The structure of the method has been created to help you think through
the design process carefully, and create an appropriate solution for your tool. The
sheets guide you to record your ideas in a structured way and the sketched drawings
help to externalise the ideas from your mind. The end realisation sheet can then be
used by yourself, or given to someone else to code, and develop into the tool.
At the end of the process you will have thought about the challenge, prepared
any necessary data, sketched different solutions, considered each of these solutions
for their suitability and made a ﬁnal design-plan that you can implement. You may
also need to do the process again. The suitability of each design depends on many
aspects, such as the purpose of the tool and the environment that it will be used
in. Moreover, what is best is often, in practice, a compromise of various factors
including time to build, cost of product, resources available etc. We will discuss
questions about ethics in Chap. 4 and information about where ideas come from in
Chap. 7.
For now though, we just need to remember that we are brainstorming, consid-
ering and sketching different designs, so that we create a acceptable solution, with
which we are satisﬁed. In fact, if you are creating a computer interface then you
also need to consider the task it fulﬁls or facilitates. It is imperative to make sure
that your design-solution allows users to complete their task effectively. Therefore,
task suitability should be at the back of your mind when you consider and question
the different design solutions.
If you are collaborating with a client then you will need to closely interact with
them, and create something that everyone agrees is a suitable solution. Both you and
the client(s) would need to be happy with the ﬁnal design. Lets consider an example.
You have a client. He has a requirement to build a new website. He wishes to sell
specialist cheeses. As the developer of this site you will need to meet with him and
ascertain his requirements. You come up with different designs (at least three) and
sketch them, so that you can discuss these alternative solutions. You then have a
meeting with him, to decide on which to build. This then becomes the requirements
design, that deﬁnes the vision of the end product that you (or someone) would then
build.
As mentioned, each of the ﬁve-sheets are used in turn and for different purposes.
Sheet 1 allows you to explore a variety of ideas and question their suitability,
whereas the middle three sheets further reﬁne the ideas into solutions that then
could potentially be built. These three sheets have and additional role. They act
as discussion points – enabling you and your clients(s) to peruse and discuss the
ideas you have created. Then from this discussion with the client you can then hone
your ideas further, and then sketch sheet 5, the realisation sheet. This ﬁnal sheet then
includes more detail and helps you to consolidate your ideas even more. Maybe you
are a student and do not have a client. This idea will still work just as well in other
situations. For example, if you do not have a client, you could ask a friend to act
as your client, who can help you critique and evaluate your designs. Or you could
merely reﬂect and question your own designs. Figure 2.3 shows the whole process,
and the stages are as follows:

2.2
The Design By-Sketching Process
31
Fig. 2.3
You work round the ﬁve stages, by thinking through the problem, making designs and
discussing these with the client (or on your own), with ﬁnally making the ﬁnal realisation design
S1
Consider the task. Meet with your client and discuss the requirements of the
design task. Ascertain if there is a challenge, or whether the problem has
already been solved. Discuss and record any particular requirements with
them.
S2
Think up many different ideas. This is divergent thinking, where you consider
many possible alternative ideas. Sketch these ideas (this is sheet 1). Probably
this stage will be done alone; but it is possible to brainstorm and create ideas
with other people.
S3
Consider all your design ideas, and work out three principle designs. Sketch
these in three separate sheets (following the deﬁned layout). These become
sheets 2, 3 and 4.
S4
Meet back with the client, reﬂect and discuss the three different designs. From
this discussion you may decide that the ideas need to be re-drawn, or you may
wish to combine several designs together.
S5
Sketch the ﬁnal design. This becomes the realisation sheet – sheet 5, that will
be implemented.
As shown in Fig. 2.1, each of the sheets use a particular layout, and each have
ﬁve parts. The ﬁve parts on Sheet 1 help you to think divergently. They are:
1. Ideas – think of different ideas, as many as possible, ignoring that they may feel,
initially, simple, rough and trivial. You should try to create many of these ideas.

32
2
Overview of the Five Design-Sheets (FdS)
2. Filter – consider whether the ideas are suitable (given the requirements) and
maybe put a line through (crossing out) some of the designs that do not work so
well, or are duplicates.
3. Categorise – put together designs that are similar; try to consider the overarching
design ideas. Maybe there are three or four major types of design solutions. These
then are potential candidates for the three principle designs.
4. Combine & Reﬁne – think how designs could be combined, or other stand-alone
ideas tweaked.
5. Question – reﬂect upon your ideas. Decide whether you have enough designs.
Do they answer the original design criteria? Do you have enough ideas to create
the three alternative designs? etc.
Sheets 2, 3 and 4 are the main design sheets. These three sheets, along with the
realisation sheet (sheet 5), all have a similar structure. They contain ﬁve panels,
positioned on the paper so as to form two cells on the left and three cells on the
right.
1. Information – in this panel you write information about the authors, title, date
and sheet number.
2. Big Picture – draw a sketch of the whole design, or the complete user-interface.
This is an imagination of what it would look like.
3. Components – describe the operations and functions of the system; in a
computer interface this could be Action and Result pairs. For example, press
a button (an action) to start the simulation (result).
4. Parti – there are going to be important aspects of the design. Sketch them in this
panel.
5. Positives & Negatives – ﬁnally describe both positives and negatives of the
described design.
In sheet 5, the only difference is that the last panel contains Detail, rather than
Positives & Negatives.
2.3
Take Time and Develop Your Skills
Getting familiar with creative processes, such as the FdS, takes time. The ﬁrst step
is to expand your skills and work though the exercises of this book. You also need
to spend time to prepare your kit, with resources such as pads, drawing pens etc.
Every time you use the FdS methodology you will get better, you will gain deeper
understanding of the issues it deals with, you will start to appreciate what you ﬁnd
easy or more difﬁcult. You will also start to have a bank of ideas that you have
already committed to paper, along with more creative concepts in your mind. Maybe
they were not suitable for one of your previous project, but exactly what you need
for your current project.

2.3
Take Time and Develop Your Skills
33
Spending time to learn how to do something better is what psychologists call
Deliberate Practice. Deliberate practice is persistent repetition of an activity with
a goal and a set of actions that are speciﬁcally designed to improve a skill [1].
There is obviously a difference between work, play and training. Play is often
experimentation; a child will explore their environment through playing and making
up stories. They may elicit a particular talent, but it is through tuition and persistent
practice that the child will develop into a skilled individual in that topic.
The distinction between work and training (deliberate practice) is generally recognised.
Individuals given a new job are often given some period of apprenticeship or supervised
activity during which they are supposed to acquire an acceptable level of reliable perfor-
mance. Thereafter individuals are expected to give their best performance in work activities
and hence individuals rely on previously well-entrenched methods rather than exploring
alternative methods with unknown reliability. Ericksson et al. [1]
You only have a short amount of time to master your skills, so the aim would
be to maximise attainment in the shortest possible time. This is where deliberate
practice comes in. Not only will this book help you achieve your goals, but by
doing the exercises you will develop your skills in planning and sketching designs
for interface development.
You are already relying on skills that you have learned through deliberate
practice. You probably learned to read through performing many exercises, spelling
and grammar tests. In addition, we are also relying on your ability to use a
pen/pencil. This is important, because you are already skilled at using a pen, we
can develop these skills further, not only improving your sketching ability, but also
to use it to capture ideas.
Sure, when creating user interfaces it is possible to just start coding, but your
result may not be good enough. Spending time to plan before coding can help
you create better interfaces. With a little planning, a better tool can be made. The
design process needs you to think creatively. Again, it is important to re-iterate: the
creative process takes both time and effort. While you may have a eureka moment,
that moment is actually based on hard work and much determination. The idea has
evolved, it has developed and been reﬁned in your mind. Even if you think that the
idea has just come about – it is actually something that has been bouncing around
your mind. It is a culmination of lots of little ideas.
With the FdS methodology, we wish you to get the best results. So you will need
to dedicate the necessary time, in getting to grips with the methodology. You will
need to make space in your schedule to learn the methodology. You will get better
as you use it, and you will ﬁnd how to express your ideas more effectively on paper.
You will be able to help others with their plans, and you will be able to use it with
your clients or in groups. By the end of this process, you may only have ﬁve sheets
of paper (at least) but you will have a better worked design, and many ideas. Some of
those ideas may get implemented in the current project, while others may be useful
for future ones.

34
2
Overview of the Five Design-Sheets (FdS)
2.4
Thinking Holistically
The end goal of the Five Design-Sheet methodology is to consider a challenge and
develop potential solutions. To do this, we are advocating that you create many
different solutions. By considering many possible outcomes you are able to decide
which are the best. To do this you need to consider the big picture of your use-
case. You need to react emotionally to the different designs and consider many
(potentially) conﬂicting goals and criteria. You need to perform holistic thinking.
This is in comparison to analytic thinking where you consider the individual parts
and how these parts can work together to produce larger-scale effects.
There are three actions that the FdS is requiring you to do. First to think. You
need to consider and think about the idea, to visualise it in your mind’s eye. Second,
you need to sketch to plan the idea on paper. Draw the ideas down on the ﬁve sheets.
Following the instructions and formatting of each of the sheets carefully. Third, you
need to question and reﬁne your ideas. To work out whether the concepts will work,
and to decide whether you are going to need to create another design, or whether
this is suitable for your endeavours and that you can then build it, or create it based
on these plans.
Obviously, at the end of the day, the created FdS sheets are merely plans. They
still need to be interpreted by a developer or software engineer. It may be that
you are the one who is going to implement the ﬁnal code. Or you may give these
outline plans to someone else to create the product. Whichever way there needs to
be enough detail on the FdS sheets for someone to understand it. And also someone
(whether that is you or not) will probably need to create a more detailed plan to
get it to the next stage. In software engineering terms, the user may then need to
perform further planning, such as to create a Uniﬁed Modelling Language diagram.
The Uniﬁed Modelling Language (UML) is a modelling language for software
engineers. The purpose is to specify a standard way to represent the design of a
computer system. The diagram is used to ascertain how the individual parts map to
components of the system.
In design terms, someone will need to work out the dimensions, elements,
libraries, materials, cost etc. and ascertain how it will actually be created. The FdS
methodology allows you to think about some of these speciﬁc requirements in the
realisation sheet (sheet 5), but – just to give advance notice – work still needs to
be done to take the ﬁnal idea into something workable. Indeed, the FdS is a tool
in your design toolbox. It is a method to help you to consider different ideas, and
to describe them in a consistent manner (such to use the same methodology from
project to project).
So, to summarise what does the FdS methodology provide? Well, the methodol-
ogy provides two foundational things:
1. A set of guidelines that help you work through different stages. The FdS process
acts as an aide-mémoire. It helps you to remember what to consider.

2.5
History of the FdS
35
2. A structured approach to designing alternatives. It deﬁnes a process. Once
learned, it can be used again and again, so several projects can be compared,
and ideas can be reused. The more you do the FdS, the better you become at
considering different ideas and sketching them on paper!
2.5
History of the FdS
The FdS methodology has been used by a wide range of people. It has been used by
students, designers and developers from companies. We ﬁrst publicly presented the
FdS in 2011 at the computer graphics conference (Eurographics) in the education
stream [3]. In fact, we had used the method two years earlier, to teach design to
Computer Science students. We acknowledge that methodologies such as the FdS
are improved over the duration of many years. In the early years of its use we merely
encouraged students to sketch their ideas and focus on the ﬁnal realisation sheet. But
we realised that it was just as important to focus on the early ideas, and help users to
think through the task of the took, pose ethical questions and imagine how the tool
would be used. The FdS method, soon developed into the formal methodology that
we are presenting in this book.
There are many methodologies that can be useful for all stages of the computer
design and implementation process. From methodologies that help with design, and
ideation, to those focused on structuring the code, working with other codes, to
testing and evaluation of the end product. However, most of the methodologies that
are currently taught in Computer Science Schools – used in industry, or used by
researchers – focus on implementation and evaluation and not the design process.
As teachers ourselves, we noticed that our students, who were learning to code,
found it difﬁcult to sketch designs of the tool that they want to build. It was
challenging for them to: (i) think through the task and to consider any social or
ethical reasons of the tool, (ii) contemplate how the tool will look in the end, (iii)
imagine what the tool will look like, (iv) explore many alternative designs, (v)
consider what interaction components are required, and (iv) how to plan and sketch
the idea in enough detail such that they would have a vision of what the tool would
look like. This is where the FdS ﬁts in. It encompasses a set of techniques and
strategies to help developers think through issues and make plans of what they are
going to build.
Since the early publication in 2011, the FdS method has been used by hundreds of
students, developers in companies and researchers. This gave us a huge opportunity
to evaluate how it was, and where it could be, potentially used. We published a new
more detailed publication titled “Sketching Designs Using the Five Design-Sheet

36
2
Overview of the Five Design-Sheets (FdS)
Methodology”, which was presented at the IEEE1 conference on visualisation in
October 2015, and appeared in Transactions of visualisation and Computer Graphics
(TVCG) in January 2016 [6].
2.6
Who Has Used the FdS?
In this section we brieﬂy introduce several places where the FdS have been
successfully used. We will expand these uses further in Sect. 11. The Five Design-
Sheet methodology has been used by a wide range of people. From developers, data
scientists, visualisation educators, students, tool builders and interface designers. It
has been used in University courses for students doing their ﬁnal year computing
projects and across several teaching subjects. In particular, we know that it has been
used in the following situations:
•
To help guide students in their design-chapter when studying for their individual
third year (undergraduate) Computer Science project, on a variety of project
types.
•
For the consideration of design alternatives in several undergraduate courses,
including second year Computer Graphics module, Third year Computer Graph-
ics Rendering module, Masters Information visualisation module where students
develop appropriate data-visualisation tools.
•
For Masters dissertations in Computer Science, where students need to write a
Design Chapter.
•
For PhD research doctoral students, especially to create new visualisation tools.
•
At workshops, for a group design activity. It has been used in the 2010, 2012 and
2013 Visual Analytic Summer Schools.
•
For interaction and collaboration between companies and University
•
For the consideration of design alternatives within companies.
2.6.1
Teachers Can Use the FdS in an Assessment
It is possible to use the FdS method as part of an assessment. One way this could
work is that the teacher ﬁrst gives a live demonstration of the FdS in a class, by
taking a scenario and sketching the whole process. The learners can see how one is
done. Within the class the students can start sketching their own ideas and receive
formative feedback from the teacher. The students can complete the work in their
own time, maybe gaining further feedback at other sessions.
1The IEEE (Institute of Electrical and Electronics Engineers) is an association that focuses on
advancing innovation and technological excellence. It is a professional society involved in aspects
of electrical, electronic and computing ﬁelds. See http://ieee.org

2.6
Who Has Used the FdS?
37
Not only has the FdS been used at different levels of Higher Education but it has
been used for several different subjects. For example, we (as authors) have used it in
an Information Visualisation module. In the course students learn how to manipulate
and display data effectively. As part of their assessment they sketch alternative
design ideas (using the FdS) and then implement the tool. The tool needs to perform
the following roles: (i) load data from a ﬁle, (ii) map the data to graphical patterns,
(iii) allow the user to interact with the tool and change what is being displayed. The
purpose of the tool is to allow the user to explore the data. The student then uses the
tool to discover new insight into the data.
In an evaluation of the visualisation module one student wrote:
The main advantage of the FdS process for me was this: Normally when designing a
visualisation tool, the process by which ideas are formed is very unstructured. This means
that the main focal points of said tool are often blurred or missed entirely as the design
develops. The FdS approach keeps the key ideas of the end result central to the design
process so that nothing is overlooked. [Student on the Information Visualisation Module].
2.6.2
Project Students, Creating a Chapter on Their
Dissertation
Learners often ﬁnd themselves having to carry-out a longer project. Projects are used
throughout computing education, and mean different things in different educational
levels and institutions. Project work in our context the focused study on a more open-
ended question, where students need to research a particular use-case, do design
work, implement the solution and evaluate and reﬂect on what they have achieved.
Project work is often a major component of the course, and the work usually attracts
a higher credit score. The student then write-up the work in a long technical report
or dissertation. Such projects are found throughout the curriculum, and particularly
in the ﬁnal-year, Masters dissertation, or PhD dissertation. In particular, ﬁnal year
students on a Computer Science bachelor degree have to study and create a scientiﬁc
project.
Project work also implies that the task is more open-ended and that the student(s)
need to draw upon a wide range of skills. They need to research ideas and see what
other people have done, use their imagination to imagine new design solutions, as
well as write the code that implements their idea. In a computer science degree,
the students are all expert coders by the time they take their third year project. But
they ﬁnd it difﬁcult to consider alternative designs. Students often struggle with
the design aspects of project work. Through experience, some computing students
struggle merely because considering design alternatives is something new, and do
not know where to start with this challenge.
The FdS provides a simple solution. Students can follow the methodology and
sketch different solutions. The FdS not only helps the students to ideate alternative
solutions, but it also helps them structure their Design chapter. At the start of the
chapter they can explain that they are using the FdS methodology, present a short

38
2
Overview of the Five Design-Sheets (FdS)
summary of what the methodology involves, and then use the ﬁve sheets of the
FdS to structure the remaining part of the chapter. In other words, they include ﬁve
further subsections, each that focus on a sheet of the FdS, discussing alternative
designs and solutions. This provides them a solid frame, within which they can
discuss their design decisions.
I really liked the FdS model. It added a lot of structure to an otherwise unstructured section.
Usually my designs lack detail and just end up as a big mess of thoughts. Using the FdS I
could put my ideas in an order. This was especially true for sheet 1 where you could see the
ideas being reﬁned as you went down the page. I found that the other design sheets ended
up being better versions of the previous sheet. E.g., sheet 3 took ideas from sheet 2 and
made them better. This helped work towards a ﬁnal design. The main sheet for considering
drastically different designs was sheet 1 as this held all of the initial and reﬁned ideas rather
than a complete picture. writes a student on completing their Computer Science degree.
2.6.3
In a Company Setting
The FdS has been used in industry on different projects, to create applications and to
plan website designs. In one case a company used the FdS for three years, applying
this technique alongside a more traditional design approach. The more traditional
approach enabled the company to develop ideas into designs, which the client
would critique and give feedback on. This is a simpliﬁed version of the well used
Design Process. The FdS on the other hand, proposes alternatives to the client from
the outset. Both methods allow the client and the designer to discuss the designs,
however the FdS methodology reduced the amount of iterations, by exposing the
client to the main idea sooner. With the traditional approach the client considered
the proposed changes for longer.
It is the structure of the approach that is helping to save time. The FdS starts with
a broad range of diverse concepts. These are then ﬁltered, reduced and reﬁned into
a set of three good quality conceptual ideas. The client can then make a decision as
to which design is the most appropriate, and tweak and adjust the design. This is a
bottom-up approach, where the client can mentally consider and discard various
considerations. By being involved in the process early, the client can consider
and discard different conﬁgurations without the need to see them fully implement.
Traditional methods are often linear. So the client must see multiple conﬁgurations
and suggest changes, which has the challenge that sometimes such designs are
variations on a single theme.
2.7
Will It Work for Non-Visual Interface Development?
In this book we often use the case-study example of a data-visualisation developer
who wishes to create some code to display data in a new way. In other words, this
is someone who has a dataset and they wish to create a visual depiction of that
data. The developer would need to think about the data, think about the important

2.7
Will It Work for Non-Visual Interface Development?
39
parts of the data, and work out how best to display the information using computer
graphics. It works especially well for the development of data-visualisation tools [6]
and helps developers to create novel visualisation designs. Data visualisation tools
makes a good use-case for the Five Design-sheet methodology.
However, the technique can be used for a wide range of types of design. In fact,
the FdS has been applied to a range of design ideas and for a variety of end-goals.
There are many situations where this methodology is appropriate. The method helps
you manage your ideas and focus your mind on the important aspects of the design.
It helps you strategically think through the creative process. In this book we have
kept the terminology general, and we explain how it can be applied to a wide range
of tasks.
It works well when you are building something visual. It is then clear that the
quick sketches that makeup sheet 1, and then get expanded in the following sheets,
are representations that directly apply to the prototype that will be created. The “Big
picture” panel of sheets 2, 3, 4 and 5 provides a (draft) impression of the ﬁnal tool.
You can imagine it being a sketch of a snapshot of the ﬁnal tool. It is clear that the
Components on the same sheets, represent buttons and User Interface commands
that get clicked by a user. For this part, we talk about Action C Result pairs, where
you need to discuss (on the FdS sheet) what Action the user will make and what
the computer will do in Result. The Parti section then allows you to focus on an
underpinning algorithm, or how one key aspect of the “Big Picture” can be created.
You can imagine that this is more about the detail of the underlying processes.
In software engineering, developers need to think carefully of many aspects
to make the tools usable. Certainly, you need to consider the user interface
components, but you also need to consider the overall functionality of the system. It
is no good if you only have a attractive interface – the interface needs to be efﬁcient
in performing the core functions. If the interface does not fulﬁll the requirements
of the intended user then it is not suitable for the task. Even with an interface that
you judge to be good, if the underlying usability is lacking then the user will become
frustrated with the tool. The FdS helps you think through each of these parts: the Big
Picture shows what the interface and the results would look like. The Components
panel helps you consider how the user will control the program and what it will
do. The Parti helps you plan more about how it will do it, and what it will do. It it
clear, though, that not every computer program is visual. Command-line interfaces
are still useful (especially if they are to be integrated into other programs). Certainly
a developer may be using the FdS to plan a new computer library; again this is not
necessarily visual.
Can the FdS be used to plan non-visual interfaces? Yes, it is possible to use the
FdS to plan something that is not visual. In these cases there is still a need to plan
and discuss alternatives. There still would be many decisions to make, you would
need to plan different ways to implement it and several underpinning algorithms to
explore. To perform such an analysis using the FdS you, however, need to interpret
what the panels mean to you in that situation. Sketches would still be appropriate
and necessary, components of the system would still need to be considered, the
underpinning (unique selling point) would still need to be considered, and a

40
2
Overview of the Five Design-Sheets (FdS)
discussion of advantages and disadvantages would still be relevant. The difference
here is that the sketches would probably represent abstract concepts. But the sheets
still help you to consider the whole system.
What if you are not developing computer software, is the FdS still relevant?
Yes, the FdS can be applied and used for non-computing applications. When you
are designing something it is still wise to consider many alternatives. You then
need to reﬁne these ideas into more speciﬁc products, which can be done in the
middle three sheets. Here also you can think what the Big Picture will be, what
the Components of the system, and what the Parti is (the key selling points), and
the discussion panel is still relevant. Then you still need to plan a ﬁnal version,
that can subsequently be built. The overarching stages would still be relevant. In
fact, the thought process that you would need to go through is still suitable. The
ways to generate new ideas, and different methodologies and strategies to get you
to ideate new solutions are still appropriate. So are many other aspects of this book.
We discuss skills of sketching, which would be relevant to a wide range of design
applications. We discuss legal, social, ethical, professional (etc.) issues that should
to be considered, which certainly has a wide application to a broad range of topics.
Are all interfaces the same? Yes and no! From one point of view, interfaces have
similar traits (e.g., they are all there to enable interaction with a human). So, general
principles of user interaction can be extracted. This is clearly demonstrated by the
very existence of software design patterns [2]. However, it would be impossible for
someone to envisage every possible type of interface. In fact, it is readily evident
that computing interfaces are rapidly changing. We notably observe this change
in smartphones; we are seeing more interfaces that integrate additional sensory
channels2; more touch input, vibrotactile feedback and the phone is now being used
for whole-body interaction within Head-Mounted Displays (HMDs). These new
devices are changing how we interact with computers. In addition, researchers are
still creating new software patterns, which indicates the need to devise new styles
of interaction. Moreover, some interfaces form very speciﬁc roles. For example, to
develop effective data-visualisation interfaces developers not only need to consider
the interaction, but also the underpinning analysis functions. Developers need to
think jointly about loading the data, cleaning and processing the data, mapping
it into some visual form that can be viewed by the user, and also how the user
will interact with that data. For instance, while you may not wish to build a data-
visualisation tool you will still need to perform an analysis of your situation. Such
that you understand the main issues and challenges of your goals, so the general
principles that we apply in that chapter should be relevant and applicable to your
challenges. We also discuss Action C Result pairs, where interface builders need to
consider what the user can control and what will happen when the user does (say)
2One of the current hot-topics is that interfaces are moving us away from desktop interactions. See,
for example, “Using All Our Senses: the need for a Uniﬁed Theoretical Approach to Multi-sensory
Information Visualisation” [4] and “Visualisation Beyond-the-desktop”, Roberts et al. [5]

References
41
click that button. However, even if you are not building an interactive interface,
you’ll still need to consider what a user will do and think about the results of
performing an action.
References
1. Ericsson KA, Krampe RT, Tesch-Römer C (1993) The role of deliberate practice in the
acquisition of expert performance. Psychol Rev 100(3):363
2. Gamma E, Helm R, Johnson R, Vlissides JM (1995) Design patterns: elements of reusable
object-oriented software, 1st edn. Addison-Wesley Longman Publishing Co., Inc., Boston
3. Roberts JC (2011) The ﬁve design-sheet (FdS) approach for sketching information visualization
designs. In: Maddock S, Jorge J (eds) Proceedings of Eurographics 2011 – education papers.
The Eurographics Association, pp 27–41. doi:10.2312/EG2011/education/029-036
4. Roberts JC, Walker R (2010) Using all our senses: the need for a uniﬁed theoretical approach to
multi-sensory information visualization. In: Kosara R, Jankun-Kelly TJ, Weaver C (eds) IEEE
VisWeek 2010, workshop on the role of theory in information visualization
5. Roberts JC, Ritsos PD, Badam SK, Brodbeck D, Kennedy J, Elmqvist N (2014) Visual-
ization beyond the desktop – the next big thing. IEEE Comput Graph Appl 34(6):26–34.
doi:10.1109/MCG.2014.82
6. Roberts JC, Headleand C, Ritsos PD (2016) Sketching designs using the ﬁve design-sheet
methodology. IEEE Trans Vis Comput Graph. doi:10.1109/TVCG.2015.2467271

Chapter 3
Thoughts, Ideas, Problems and Solutions
Abstract When we are trying to solve a problem we often produce lots of ideas,
for ways to solve it. Usually, we think through those alternative different ideas and
the problem at hand, in order to get the best solution. Other times we may have
an idea and we are trying to see if it could solve other problems. But what is a
problem? What types of problems are there? How can we work through a problem
and carefully contemplate each solution? Can we start with a possible solution
and workout what other problems it may solve? Are problems constant? These are
questions that have been asked, and attempted to be answered, by early philosophers
to modern computer scientists. This chapter explores these concepts from a both a
philosophical and practical viewpoint.
3.1
Types of Thinking
Every moment of our waking day we are thinking. Whether this is to solve a
problem, or to day dream of what our summer holiday may be like, or to plan for
the future. We are thinking, when using our creative imagination we lay on the grass
and look at clouds imagining different shapes, resembling animals. We are thinking,
when we make internal mental representations and devise mental maps when we
give someone directions of how to get from here to the nearest coffee house. We are
thinking, when recalling pictures of when we meet someone, after a few years of
not seeing them; we are using our mind to recall where we met them last and what
that place looked like. We are thinking, when trying to plan the solutions, when we
are given a puzzle to solve. We are thinking when we are wondering what to write
in our essay and how to structure it.
We commonly use the word thinking in our everyday language. On meeting a
colleague in the morning, we may say “I think I saw your daughter on my way to
work today”. We are not only starting a conversation, and trying to remember a fact,
but we are also implying our uncertainty of the situation. We may also use the word
thinking when we reprimand a child, saying “why did you not think before you
acted?”. This implies that thinking can act as some kind of predictor to the future
ahead. We are expecting the child to envision in advance, what would happen as
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_3
43

44
3
Thoughts, Ideas, Problems and Solutions
a result of a particular action, and reprimand them when they do not foresee the
consequences of their deeds. Thinking is therefore part of our everyday life that is
deeply ingrained in our language and behaviours
In modern life, and especially when using a computer, we are thinking and
working through problems constantly. “I think that button will load the next page”,
so I press it. If it does do what I expect, then I move on, making a mental note of
what that button does. A positive action conﬁrms our intuition. “I think that I can
ﬁnd more information on this topic through a web search”. We are predicting that
there is more information to ﬁnd. So I go and try a different set of keywords into
a web search engine. If we do not receive enough information or feel that we have
a complete set of results, then we will alter our keywords and try again. We are
making decisions and adapting our behaviour based on the feedback that we have.
“I think that there is a better way to present this tabular data”. So I go and research
different ways to display the data. We are making judgements not only when we
press the button but on the information that is returned, and we are critical of the
information we receive. We judge what is being returned to us, and make a decision
as to its relevance, suitability, completeness, correctness etc. A useful explanation
of thinking is given by Holyoak and Morrison, who write:
Thinking is the systematic transformation of mental representations of knowledge to
characterise actual or possible states of the world, often in service of goals. Holyoak and
Morrison [18].
We are working out, in advance, what the world would look like with a particular
action. We try to predict how we would be better off. We try to work out how to
achieve our goals. We are also systematic in our approach to solving the problem.
We try to ascertain all the component parts to workout how to solve the problem.
Or we make a list of the resources that we required, and check them off when we
have collected them. We often deliberately organise our thoughts through writing
them on paper, or drawing a picture. All this to achieve a goal. If we look closer
to the quote, however, we see uncertainty in the goal oriented nature of thinking,
“. . . often in service of goals”. When our minds wonder and freewheel we do not
have a speciﬁc goal to solve. Our thinking is spontaneous and independent of a
particular end. We can, therefore, consider that there are two types of thinking:
Directed and Undirected [9].
•
Directed thinking takes place when you think about something and have goal.
You may be coming up to the end of the day and start to think about going to
visit a friend. You start to plan and visualise in your mind how you will go to
their house, where you could grab a snack on your way there, and whether you
have enough fuel to reach your destination. You are using your mind to plan the
action. Two distinct types of processes can be considered for directed thinking:
reproductive and productive. Reproductive thinking draws on knowledge that
you already have. As a child you learned how to write with a pen, now as
an adult you are using that skill and implicitly write shopping lists, study
notes, or essays. You are using the knowledge that you have developed over a
long time. Productive thinking rearranges knowledge to make new relationships

3.2
On Problems
45
and associations. You are doing more than just remembering facts, you are
associating ideas and being creative in how you solve the problems.
•
Undirected thinking occurs when your mind is free. You do not have any goals,
per se. Rather your mind is freewheeling and wandering to different ideas and
concepts. This type of thinking therefore can help your creativity, because your
mind is free to roam and create new ideas that have not been thought before.
It also can act as a time of reﬂection, where your mind is actually working on
solutions to the challenges you are facing.
Productive thinking was distinguished from reproductive methods by the Gestalt
psychologists during the early twentieth century [9]. The word gestalt is generally
translated to mean organised whole. That is that integrated made up of parts, where
the sum of the parts is greater than the whole. We can think of a square made up
from matches. The matches are individual, but our mind sees the shape of a square.
Likewise we when we look at a human face, the whole is so much more informative
than the eyes, the nose or the jawline on their own.
To achieve results and solve problems we often need to apply both types of
thinking. We cannot rely on directed thinking alone to help us work out the steps
to achieve our goals. We we will also need to apply undirected thinking to come up
with new solutions. We need our imagination, our intuition, and often to make leaps
of faith, when we try to solve problems.
3.2
On Problems
It is worth, at this stage, thinking brieﬂy about problems. Let us start with a simple
(but perhaps difﬁcult to answer) question. What is a problem? Indeed, researchers
in psychology, philosophy and computing have posed this question over many years.
It is easy to become very philosophical with this type of question and to ponder the
very existence of ourselves and how we humans think or how we work out the
problems. There are certainly many philosophical ethical, legal, social implications
to consider when you work through solutions to problems. In Chap. 4 we will expand
upon these questions. We will focus on questions such as should we make the
solution, as well as considerations over resources available to us, by asking could we
make the solution and ﬁnally, what are the ramiﬁcations for building that solution
by asking what if we make the solution.
Putting the philosophical debate aside for now, we need to break down a problem
into individual parts to try to deﬁne it. Gestalt psychologist Karl Duncker in 1945,
wrote a relevant monograph “on problem-solving”. While his work was written over
seventy years ago, his deﬁnition is still relevant today. He writes:
A problem arises when a living creature has a goal but does not know how this goal is to be
reached. Whenever one cannot go from the given situation to the desired situation simply
by action, then there has to be a recourse to thinking ...the ‘solution’ of a practical problem
must fulﬁll two demands: in the ﬁrst place, its realisation [embodiment] must bring about
the goal situation, and in the second place one must be able to arrive at it from the given
situation simply through action. Karl Duncker [6]

46
3
Thoughts, Ideas, Problems and Solutions
Fig. 3.1
We may have a puzzle. The light switch is on, but there is no light. What do you do?
How do you solve this puzzle? What do you check ﬁrst?
Let us consider a simple problem: we have a light switch that is switched on, but
the light bulb does not work Fig. 3.1. To solve this problem we may perform several
actions. First we could see if the light switch does not really work, by switching
it up and down. It could be, even, that the switch is labelled wrongly. Or we may
go to check that we have power to our house by viewing the position of the circuit
breaker switch, or we try to switch on another light switch to test that we do have
power. But why do we bother? Do we really need the light to be on? We could think
that this problem does concern me, because I want to read with the light on and
it is dark outside. However, someone else may not want to read, so they may not
want to have the light switched on. So, it may not actually be a puzzle for another
person. They may be happy with the light that they have. It may not be a puzzle for
someone else, who was the person who switched off the mains power to perform an
electrical test somewhere else in the house. They already know the answer to your
puzzle!
With Karl Duncker’s deﬁnition and our simple dilemma of the non-working
light bulb, we can start to unravel some of the characteristics of a problem. The
Gestalt psychologists focused on perception, and especially on the challenge of how
problems were represented. That is, how humans perceive, understand and organise
information, especially to separate the representation of the information in human
minds to the generation of any solutions [18]. One of the ﬁrst points we notice
from Duncker is that he mentions that “a problem arises when a living creature
has a goal”. Many of the early Gestalt theorists posited that if the problem could
be carried out to animals, and proven to be approachable in a certain way, then no
doubt would it also be the case in humans. However, problem solving has not only
focused on animals, and human problem solving was also investigated.

3.2
On Problems
47
Firstly, we have a starting state. It is clear that if the goal motivates us to move
(albeit conceptually) from one state to another, then there must have been an initial
state. Whether we are still on that initial state or we moved, we also have a present
state and wish to move to a desired state. Reaching the desired state is the main
driver for the problem to be solved. If the desired state is the same position as the
starting state – there would be no need to solve the problem. There would, in fact, be
no problem! The present state encapsulates our knowledge, say the experience of a
programmer, the skills of the employees etc. Inevitably, part of solving the problem,
i.e., reaching the desired state, may require that we increase our knowledge, learn
new skills, or indeed built something, in order to facilitate our solution of the
problem.
Secondly, a problem has a goal. This goal is effectively the ultimate desired
state and reaching it motivates us through solving the challenge at hand. The goal
also permits us to ascertain when it has been achieved. We have some idea that our
task has been completed, because we can make a judgment whether the goal has
been reached. What if the goal changes? Can the goal disappear? Sure, the goal can
change, especially in explorative solutions, which in fact results into a new problem
to tackle. Such a change may make our challenge more complex or may simplify
our task to complete the goal. Indeed, the goal could change so much that actually
it becomes impossible for us to achieve at this time, or it could even disappear
altogether. Consider a situation where we need to build a software library, to help
our company make a 3D graphics game. The game follows the theme of a Japanese
character, who goes on adventures with his two sisters. The producer wishes for
the game to be rendered in three-dimensions but each character should only use
two colours. Such a graphics library would enable us (in the company) to create a
rendering framework for the animators to make their creative stories. If, for instance,
during the early development stage another company released a library, as Open
Source software, that provided the same functionality then we (in our company)
would need to decide whether we need to continue with the development, or whether
we can use their library. We may still believe that there are beneﬁts for us to develop
a bespoke library, because we would own the code and be able to easily update it etc.
But we could alternatively decide that it would be cheaper to merely use that other
library. Then our goal (the task of developing the new library) would disappear.
Thirdly, the action of aiming at the goal may provide us with many beneﬁts
and spin-off activities. By doing the task we may actually learn about associated
processes, develop wider knowledge about issues, understand scientiﬁc or techno-
logical mechanisms better etc. – in fact we may need to learn and develop our own
skills in order to accomplish the task. Indeed, this is often the hope of teachers and
educators, who set goals and tasks for students to achieve. The activity of working
through an assessment, provides the encouragement for the learner to do the work,
and discover the necessary solutions for their own beneﬁt. In this situation, it is often
the journey of learning which is more important than the speciﬁc activity that the
learner was tasked to perform. In this case, the journey is just as important as the
outcome (if not more important from the teacher and learner’s point of view).

48
3
Thoughts, Ideas, Problems and Solutions
3.3
Fast and Slow Thinking of Problems
Let us go back to the speciﬁc challenge of solving problems and think through some
more examples. For example, in computing you may set out to address a problem
that requires you to develop a new graphical interface. In education you are asked to
do an assignment for a course, that requires you to solve a problem. Your company
needs to make more money and needs you to solve problems at work. You have a
problem when you missed your last bus home and need to ﬁnd an alternative way to
get home that night.
It is clear already that there are many different names to describe a problem
and the most suitable word may depend on the context in which they are used.
Sometimes in our everyday language the word problem can have a negative
connotation, it can mean a difﬁculty, issue, complication or nuisance. However, we
are not suggesting that problems are bad, or that they are awkward situations to be
overcome. Rather, the meaning we adopt is closer to the thoughts of arithmetical
problems in education; we can think that they are challenges, assignments, conun-
drums, issues, questions, puzzles, tasks, undertakings, enigmas, mysteries, riddles
or queries. We will holistically use the word problem.
Some problems are simple, while others are vast. We can think of many
humanitarian Grand Challenges that seek to solve national or global problems that
have the potential to make huge differences, such as “how to solve world hunder”, or
“how to end every war in the world”. Researchers have discussed grand challenges
on weather and climate prediction, ecosystems and the environment, global health,
disaster reduction, etc. These are inspirational and would have a huge impact to
society and the world, should they be solved. Many governments and research
councils use such grand challenges as frontier visions to both enthuse and energise
researchers into ﬁnding solutions. Naturally, these are not easy challenges to solve,
and are often visionary to such an extent that solutions seem – initially – impossible
to ﬁnd. However their existence galvanises researchers to come together and through
attempting to solve them, produce new research and make new discoveries.
In particular, many scientiﬁc and computing grand challenges [14], have been
studied and posed by groups of expert scientists. Computer challenges include how
to develop dependable and robust systems that never fail. We can think of other
beneﬁcial grand challenges, such as enhancing healthcare through technological
progress and innovation, or recreating in virtual reality events from our past, to
explore and learn the history of humanity in more engaging ways. We can think of
developing some kind of memories for life, where all our thoughts actions and words
are recorded and stored for posterity. We can even think about developing artiﬁcial
intelligence that is capable of having the same functionality and complexity as a
human brain.
While few of us face such grand challenges directly, we all have to deal with
problems of varying complexity every day. Some are personal, some related to our
work, our hobbies or interests. Some may feel huge to deal with, others trivial
and easier to solve. Everyday we are faced with a variety of questions. When we

3.3
Fast and Slow Thinking of Problems
49
wake up in the morning we ask ourselves what we want for breakfast. We decide
what direction to drive to work, we make judgements on how to avoid trafﬁc and
pedestrians without causing an accident, and decide where to park our car. We
work out problems, such as whether we have the correct money for our luncheon
sandwich, and we work out how much money to give the seller. As a student, we
may start to calculate our marks obtained to date, and also calculate what percentage
score we need to achieve in a particular exam to gain an overall grade (or grade point
average). We look at our bank balance and decide whether we have enough money
to purchase that electric guitar that we have been viewing every morning as we
walk to work. When writing an essay, or an academic paper, we work out and plan
what sections we will cover, and then work out what words to use. When writing
a poem we need to think up words that rhyme, such to both tell a story but also
retain a rhythm. Throughout our life we make decisions, use judgements and solve
questions. But not every problem is the same.
From our list of examples above, it is clear that we address many problems
quickly and sometimes subconsciously. Our brain works out what directions to use,
and instructs our body, within fractions of a second, to make adjustments of our
steering wheel, whether we turn left or right. In fact, we are most often not conscious
of us making many of these decisions. Occasionally this happens so implicitly that
we have no recollection of those choices, such as when we get to work and wonder
“how did I get to work, I don’t remember driving here”. The decisions that we have
made here are implicit and quick. They are snap judgements
On the other hand, many of the answers that we wish to ascertain in our day-to-
day lives actually require a lot of effort and time. Not only to calculate and formulate
the answer, but to gather information required to solve them, and then to work out
the method required to do so. We are slow to work out a decision – because they are
hard and take a lot of thought process. We may even need to research the topic to
understand it better, such that we can make the right choices. Even once we make
some decisions we often contemplate and reﬂect on them.
Solving problems also requires us to combine different types of understanding,
often fundamental and basic, such as reading and writing. For example, to calculate
the average grade of our course assessment we are relying on our understanding
of numbers, knowledge and the structure of the course (where, it may be that
some parts are weighted differently to others) and our ability to make calculations.
We may use a spreadsheet (to make the calculation easier), which requires an
understanding of suitable computer software.
Likewise, if you are a researcher, or a student needing to write a literature review,
or a state-of-the-art report, you need to examine prior work and investigate what
other people have done to solve the same (or similar) set of questions. You will
probably search through digital libraries to locate published works on the topic,
make judgements on whether the resultant papers are of interest to you, keep notes,
save copies of interesting papers, and certainly do a lot of reading. When conducting
the bulk of your research you will apply skills and knowledge that you have just
gained by reading the aforementioned papers. You will also need to organise the
material in a meaningful way.

50
3
Thoughts, Ideas, Problems and Solutions
We notice from these examples, that we are very much, reliant on background
knowledge to achieve our goals. Some of these skills we have learned in the
classroom (whether as a child in primary School, or as an adult through reading)
and other skills we have learned from life experiences. Sometimes we are thinking
quickly (applying fast forms of intuitive thinking), while other times we are applying
deliberate and considered thoughts to a problem.
Generally, when we are thinking fast we are being intuitive. We make quick and
implicit judgements. When making conscious and deliberate thought we are, mostly,
Daniel Kahneman, is an Israeli-American psychologist who was awarded the 2002
Nobel Memorial prize in Economic Sciences (shared with Vernon L. Smith). With
Amos Tversky and other researchers, they conducted much research on how the
human mind works, investigating especially decision making and uncertainty that
arise through different types of challenges. Kahneman described our cognitive
processes as being divided into two systems. System 1 thinking is fast, routine and
automatic. We make decisions based on our own experiences, past decisions and the
knowledge that we have. We can train ourselves to answer quickly. We can quickly
recall multiplications because we have learned the times-table, or we remember
capital cities because we have memorised them. On the contrary, with System-2
(slow) thinking, we are being more deliberate; we put more effort into solving the
problems.
System 1 and 2 thinking work in harmony together. For example, our attention
may be drawn instantly to someone who shouts out loud in a crowded party
(system 1) and thereafter we try to ascertain who the person is, and whether you
know them. Or sometimes they can work against each other. If you are an American
who needs to drive in England. When you get off the plane, you need to keep telling
yourself to drive on the other side of the road. This takes effort and requires you
to concentrate more. Something now that was intuitive in your own country is
now unnatural, and requires you to think more deeply and make more conscious
decisions. Daniel Kahneman [16] writes:
When System 1 runs into difﬁculty, it calls on System 2 to support more detailed and
speciﬁc processing that may solve the problem of the moment. System 2 is mobilised when
a question arises for which System 1 does not offer an answer ...You can also feel a surge
of conscious attention whenever you are surprised. System 2 is activated when an event is
detected that violates the model of the world that System 1 maintains ...System 2 is also
credited with the continuous monitoring of your own behaviour. Daniel Kahneman [16]
Most of the time we will make right estimates and will be able to rely on our
intuition. It will give us a suitable answer. The models that our mind uses are usually
accurate and we can rely upon our short-term predictions. However under certain
circumstances our mind makes mistakes and biases appear in System 1 thinking.
One of the problems with System 1 thinking is that it cannot be switched off, and
even when we tell our conscious mind that our intuition is wrong, we still cannot
persuade ourselves to believe the answer. Sometimes, although we may be aware
of a particular illusion, our System 1 thinking still tricks our mind into coming to
the wrong decision. However much we try, we cannot train ourselves to correct the
behavior.

3.4
The Importance of Reﬂection
51
Fig. 3.2
Muller-Lyer
illusion. Are the lines the
same length?
For instance, consider the Müller-Lyer optical illusion (see Fig. 3.2), where two
lines of the same length are perceived to have different lengths, due to one line
having arrow-tails and the other arrow-heads at their ends. Even if we are aware that
the two lines are the same length, our System 1 thinking says that they are not the
same, and that the lower line – the one with the arrow-tails – is longer. Therefore,
when we make decisions, whether we do so quickly and subconsciously (System 1)
or slowly and consciously (System 2), we need to be weary of how we answer
problems and often need to question our own decisions.
3.4
The Importance of Reﬂection
Whether we have one or many answers to our questions, we often need to make
judgements on whether our calculations, logical deductions and assumptions, are in
fact correct. We perhaps estimate, or anticipate, what an answer should be, and then
use this to check that we have the correct answer. We may just reﬂect on the possible
result. Dewey in his book titled “how we think” writes:
Reﬂection thus implies that something is believed in (or disbelieved in), not on its own direct
account, but through something else which stands as witness, evidence, proof, voucher,
warrant; that is, a ground of belief. At one time, rain is actually felt or directly experienced;
at another time, we infer that it has rained from the looks of the grass and trees, or that
it is going to rain because of the condition of the air or the state of the barometer. John
Dewey [5].
Consider you are a traveller on a vacation. You take a walk in the wilderness,
but become lost. When you reach a fork in the road you need to make a decision
to take the left or right path. Or indeed walk back the way you came. How do you
make that decision? You may just make a choice; and merely choose one or the
other route. Maybe you start walking down one path, to gain some idea where it
leads, or whether it is the right one. Or you may look for clues to help you make
that decision. You start to see how much grass has been trampled, to ﬁgure out
whether more people have walked down the left or the right path. You may look to
see footprints in the mud, or whether close-by branches have been broken. Without
a map, or signpost, you are making your own surrogate signiﬁer to help you make
an informed decision.
With a journey in the wilderness, there are certain facts that are useful to know.
For example, it is helpful to know how long we have walked, as we could probably

52
3
Thoughts, Ideas, Problems and Solutions
turn back. It can also help us to know where we are in the world, because we can
draw on prior knowledge about the region, such as whether it gets cold at night or
how populated the region is, such that someone may ﬁnd us. We know we have
to make a decision on the fork in the road. We know that we can see the grass
more trampled in one side of the fork. These facts can then hint at reasons. Maybe
we don’t know exactly which fork has been walked the most, but the quantity of
trampled grass provides us with an indicator. We will not know for certain how
many people have traveled, but we may have a stab at a ﬁgure, to help us decide
which way to travel. We are reﬂecting upon the facts. Maybe the original data was
confusing (rain has trampled all the grass down, or the grass is so dry it is unclear
where people have trodden). So it may not be clear where people have walked.
For some of our questions we can ﬁnd answers in have a map, whether this is
a geographical map, or a metaphorical map (such as a formula of some kind) that
will help us answer our problem. We know how to work out the equation of a line
by using the formula y D mx C c. We can instantly remember hours of learning
the times tables, to help us answer simple maths questions. Or we remember the
instructions of how to reach a destination, given by someone else. These can be
signposts to help us ﬁnd the answer.
However, often when we are looking to solve many problems, we do not have a
signpost. Problems such as to organise the detail of a ﬁctional novel, may not have
a road map. There are no instructions to say “name the character Steve” or “your
character should live in a ﬂat on the seventh ﬂoor”. No one is telling us the answer.
However we do still have clues and hints. We need to look toward the clues we have
found, to help us come to a speciﬁc decision. These clues can come from advice
from others, helpful hints, instructions, books, advisers, teachers etc. For example,
in order to write an essay, there are standard structures one can follow, there are
guides and written help that will give a structure that has worked for other people.
Experience and knowledge also play a signiﬁcant role. An experienced tracker, in
the aforementioned walking example, may also take into consideration other facts,
such as known landmarks, position of the sun etc. And these will give the tracker
more knowledge to make the decision. They also may suggest a different solution
or action and give the traveller the conﬁdence to walk away from the given path,
and go straight down the hill, because they can hear the sound of ﬂowing water and
would decide to follow the river bank instead. The strength of their cues and their
experience given them conﬁdence and wisdom. The tracker, like us in any decision
making task, needs to make the right decision by applying appropriate principles
and making judgements to whether the solution is good or bad.
Thinking is therefore multi-staged and goal-oriented. Lost in the wilderness, we
gather clues, and then move forward one step at a time, while we have an overall
goal (to get home for dinner). John Dewey [5] proposed a process of thinking and
reﬂection, saying that
1. Felt difﬁculty. First there is a recognition of the problem, and an understanding
of a felt difﬁculty that provides us with a drive to want to set our mind to a
probable solution.

3.5
Reﬂection, Metacognition and Critical Thinking
53
2. Location and deﬁnition. Deﬁne the problem and isolation of any relevant
features.
3. Suggestion of possible solution. Formulate alternative and possible solutions.
4. Reasoning. Reason and consider each of the various possibilities to determine
the most suitable solution.
5. Belief or disbelief. Observation and experiment that leads to the rejection or
acceptance of a solution.
3.5
Reﬂection, Metacognition and Critical Thinking
Reﬂection enables us to think about a situation and relate the thoughts of now
to those from prior experiences. Reﬂection can come at the end of a thought
process, where you are reasoning, and deciding whether you belief or disbelieve the
outcome. Reﬂection can also take place while you are performing a task. In any case,
reﬂection can help us personally develop our skills. We can achieve this personal
development by reﬂecting on the ideas, concepts and models that we have learned.
Even on our own personal needs and objectives as a learner. Learners perform
metacognitive [8] activities when they contemplate their own learning strategies
or processes that they have used to create a particular assessment. Metacognition
can be considered as thinking about thinking. As a learner we may read an essay,
and then ask ourselves “did we understand that?” or “what have I learned from this
essay?” We achieve metacognition when we apply high-level cognitive thought to
the strategies and processes that we have used. When we ask questions of ourselves,
to ascertain whether the goals (of that learning) have been met, and to reﬂect on
the processes that we have followed. In one respect it is like our mind performs an
executive review of what we have done.
In this book we are predominantly thinking about techniques and processes to
help you plan and design new interfaces or new data visualisation tools. As you
sketch your designs and follow the Five Design-Sheet method, you are learning. It is
good to stop for a moment and start to think about the processes you have just done.
Think about the structure and how you can better your designs. Reﬂection can also
help us use our time wisely. It may be that you sketch a picture of an interface. You
brieﬂy reﬂect on this drawing. You need to decide at that point whether it expresses
your thoughts. If it does, then you may move onto another idea. The sketch, however,
may not express your idea. It may look like a mistake, so what do you do? Do you
erase it? Do you scribble lines over it? Do you try to adapt it, or modify it by adding
more lines, or making it bigger? Do you move down the page and draw it again (and
hopefully better)? Do you ignore that whole sheet and start again? Each of these
options may be suitable (it really depends upon your goals, your situation, the time
you have left for the task, etc.). We advice that you should make a quick decision
and move on. Most of the times, when this happens to us (as authors) we will either:
(i) try to adapt it, and carry on, or (ii) we draw another version, slightly below. But it
depends. The decision really hangs on how crucial that design is to the overarching

54
3
Thoughts, Ideas, Problems and Solutions
challenge. If it is crucial, then it may be suitable to start over. If it is only a small
part, it may be better to ignore the mistake and carry on.
At the end of the design process, it is also good to reﬂect on the whole process.
Look at the designs, not only from a point of view of suitability, but also think
about the process you followed. The skills you used. The skills that you need to
improve. Now you are entering into the metacognition process. Maybe consider
why the drawing went wrong (if it did). Think over the suitability of your pens.
Think on the decisions that you made, and the organisation of the sketches on the
page. Maybe you squashed all the pictures together and they look untidy. Why did
you do this? Why do they look untidy? How could you have done it better? Try to
think back and consider the decisions you made throughout the sketching process.
Also think about your own skills. Maybe you think that you could improve your own
sketching skills. How can you do this? Where can you go for help? Maybe re-read
our chapter on sketching (Chap. 5) or maybe you need to look to other resources.
Look for online tutorials, or online videos for help.
By reﬂecting on our experiences and evaluating how we have achieved our goals,
we will be able to understand better how to apply our knowledge next time we are
faced with a similar problem. Metacognitive reﬂection also can help to reafﬁrm the
pathways in our mind, such that we remember the processes and knowledge that
we have just learned or achieved. We (as educators) want you to be self-directed
and learner autonomously. Whether you are at a University, College, School etc. or
whether you are at a company, or individual reading this book, you are learning and
improving your own skills. Being able to sit down and reﬂect on what you have
achieved, and evaluate your own learning pathways, is a good skill to have. John
Flavell [8] divides metacognition into four parts:
•
Person. What beliefs do we have that will affect this task? What skills? What
abilities? What weaknesses do we have?
•
Task. Do we know the task? Are we conﬁdent to gain an answer? Are we familiar
with the problem domain? Do we have the right skills? Do we believe that we
can ﬁnd a good solution?
•
Strategy. Do we know the answer to the problem already? Have we already
performed a similar task? Have we a strategy? Could we adapt a strategy that we
are familiar with? Are we conﬁdent in using the strategy?
•
Experiences. Were our previous experiences positive or negative? Did we ﬁnd
suitable results? Were our previous answers, achieved faster or slower than other
people?
Past experiences can certainly affect the way that we tackle a problem. For
instance, if you remember feeling lost in similar problems before, then you would
be more apprehensive when faced with a similar problem. Maybe you would be
more cautious, which may hinder your creativity. If, as a child, you had struggled
with drawing skills at School, then you may be uneasy about sketching now. Maybe
if you had a bad experience with sketching, it may stop you now from attempting to
sketch ideas. Alternatively, sometimes past experiences (whether good or bad) can
enhance your ideas, and help you to push yourself further. Maybe a bad experience
before makes you more bold, and help you to move out of your comfort zone

3.5
Reﬂection, Metacognition and Critical Thinking
55
and learn more skills, or a back experience can stymie your ability to perform.
In addition, your new experiences can change your current perception of those
experiences in your memory. After trying sketching as an adult, you may now say “I
now enjoy sketching”, or you may conﬁrm the previous view “that this experience
has reconﬁrmed that I hate sketching”.
We know from personal experience that past experiences can hinder our progress.
We have a student (Tom) who was faced with thinking through different ideas in his
PhD research. As authors (and supervisors of Tom) we suggested that he should
begin using the Five Design-Sheet method and start sketching his ideas. His instant
reaction was “but I am no good at sketching, I have never been any good with
drawing as a kid, and I don’t see why this would be different”. We probed a bit
further and it seems that he had a teacher who was overly critical of his work. The
teacher had made negative comments of his work as a child, and he had decided that
he would sidestep any need to do sketching. This had the bad consequence that he
had not improved his own skills and was fearful of sketching today. We encouraged
him to start drawing. Showed him some basic techniques. We encouraged his ﬁrst
few sketches, and helped him to focus on the parts of the drawing that could be
easily improved. It took a few weeks, but now he comes to us, nearly everyday with
a new sketch that he has drawn. These are relatively simple block diagrams, ﬂow
charts, mind maps etc. but they are useful sketches to help him explore his research.
His desk is now full of sketches and plots. He seems much more comfortable in his
pictures and they are becoming useful tools for him to express his thoughts.
While being critical of others can be hurtful and demotivating, being critical in
the right way is needed to develop and help skills improve. We need to be constantly
critical of the input data, such to make appropriate decisions, as well as the output
that we create. Critical thinking embodies our ability to reason and make judgments
over the arguments, ideas and ﬁndings. Critical thinking draws upon many skills,
including being organised in your materials, notes and thoughts, importantly it
draws upon our ability to have foresight and make predictions and judgments over
potential outcomes. Peter Facione writes:
We understand critical thinking to be purposeful, self-regulatory judgment with results in
interpretation, analysis, evaluation, and inference, as well as explanation of the evidential,
conceptual, methodological, criteriological, or contextual considerations upon which that
judgment is based ...while not synonymous with good thinking, CT is pervasive and self-
rectifying human phenomenon. Peter Facione [7].
Critical thinking can be applied to every part of solving a problem. Especially,
when faced with big problems, we will often need to divide it into smaller challenges
and work to solve each of the smaller chunks. We need to apply critical thinking over
these individual parts, but still be concerned that each of the separate goals ﬁt in with
the main overarching goal. We need to consider the small parts, while keeping our
sights on the big picture. Especially when we are creating many solutions, we need
to critically analyse which solution is best. Linus Pauling (the Nobel prize winning
chemist) said:
The way to get good ideas is to get lots of ideas, and throw the bad ones away. Linus
Pauling [3].

56
3
Thoughts, Ideas, Problems and Solutions
This is a twofold strategy. First to think about many different concepts and second
sift through them to make a decision whether to keep, delete, change, improve or
reﬁne. Therefore being creative is not only about thinking up different ideas, but it
is also about being a critical thinker. We will consider being a creative thinker in
Sect. 7, but for now we will focus on critical thinking skills.
The idea critical thinker is habitually inquisitive, well-informed, trustful of reason, open-
minded, ﬂexible, fair-minded in evaluation, honest in facing personal biases, prudent in
making judgements, willing to reconsider, clear about issues, orderly in complex matters,
diligent in seeking relevant information, reasonable in the selection of criteria, focused
in inquiry, and persistent in seeking results, which are as precise as the subject and the
circumstances of inquiry permit. Peter Facione [7].
Solving big problems, like the Grand Challenge mentioned before, often requires
breaking the problem in several smaller challenges. Along the way, though, you
need to not only think up individual solutions – and be critical as to whether each of
the solutions are sensible – but importantly you need to think holistically and keep
your eye on the goal. So, you would not only need to design each stage, and be
critical as to whether they are suitable solutions on their own right, but make sure
that together they are suitable for solving the overall challenge. Critical thinking
skills enables you to consider the problem with your head and not your heart. You
are using reason rather than emotion and are requiring evidence (as much as is
possible) to conﬁrm (or deny) your ideas. You weighing-up positives and negatives
of the ideas and thoughts that you are having, and are self-aware such that you
know your limitations, checking your thoughts against any known biases that you
have. You are trying to be neutral in your thinking and not to apply (or force) your
views onto others. It also means that you need to be comprehensive. You need to
think through each of the solutions that you create. You are sceptical over your own
conclusions and that you try to justify your decisions. Peter Facione describes six
core skills for critical thinking.
1. Interpretation. Understanding the problem and the ability to communicate the
meaning of the problem to other people. To be able to categorise the information,
decode its signiﬁcance and clarify the meaning of the challenge.
2. Analysis. To be able to scrutinise the ideas and recognise different viewpoints,
arguments and issues surrounding the problem. Being able to understand the
intended meaning of the information you are presented with. Being able to
analyse the challenge and break it down into meaningful parts.
3. Evaluation. To be able to assess the meaning of any claims. To make judgements
over the arguments and decide whether you believe one is more correct (or
believable) than another.
4. Inference. To be able to reason with the information that is presented to you.
To query and question the evidence proposed and to postulate and conjecture
alternative solutions. To also draw together the information to make conclusions
are presented.

3.6
Problem Solving Stages
57
5. Explanation. To be able to share the results and restate the problem and your
conclusions. To justify any procedures that you have used and clearly present
arguments.
6. Self-regulation. To be able to reﬂect on your own skills and limitations and be
able to correct your thinking skills such that next time you will be better.
One of the most important skills in critical thinking is foresight. We need to be
able to consider what the ramiﬁcations for an action will be. By thinking what could
happen will enable us to make a judgment over our speciﬁc action. We will discuss
more about the implications of our decision making in Sect. 4.
Nonetheless, critical thinking is not easy! To do it effectively you need to be
motivated. It also takes discipline to self-evaluate and to be honest to ourselves over
our own abilities and thoughts. Critical thinking has long been linked to motivation.
If you are unmotivated in your learning, or your thinking, then you are probably less
likely to apply the full gamut of critical thinking skills. Learners should develop
a disposition for critical thinking [11]. Also the level of difﬁculty may have a
detrimental affect on someone’s ability to perform critically. We live in a day where
it is very easy to ﬁnd materials on the Internet. These online resources can be easily
copied and ideas can be taken from the Web. While this does provide us with a huge
unending encyclopedia it can be far too easy to copy the material. In fact, the easier
it is to copy, then less critical analysis is applied. On the contrary, though, we need
to apply more critical thought to the material. To make judgments ourselves whether
the information in indeed correct and whether it is useful to our ends.
3.6
Problem Solving Stages
We may be a critical thinker, and understand what a problem is – indeed, Duncker’s
statement is ﬁne: “a problem arises when a living creature has a goal but does
not know how this goal is to be reached” – but we need to look to strategies of
how to solve problems. John Dewey’s ﬁve-part model is one such strategy [5].
Where problems are solved by ﬁrst recognising the problem, deﬁning the problem,
suggesting solutions, reasoning over them, and ﬁnally believing or disbelieving
them. In fact, several researchers and philosophers have tried to express strategies
for problem solving. For example, the mathematician George Polya in his book
“How to solve it” [19] explains a similar set of stages to John Dewey. George Polya’s
four stage method to solve problems is:
•
Understanding the problem.
•
Devising a plan from the experience that you’ve had from related problems
•
Carrying out the plan.
•
Looking back and ask whether you believe in the answer
It goes without saying that, in order to solve a problem, ﬁrst you need to
understand it. If you cannot understand what you are meant to be doing, then

58
3
Thoughts, Ideas, Problems and Solutions
obviously it will be rather difﬁcult to develop a suitable solution. Graham Wallas
(a social psychologist and educationalist who co-founded the London School of
Economics) writes:
Our mind is not likely to give us a clear answer to any particular problem unless we set
it a clear question, and we are more likely to notice the signiﬁcance of any new piece of
evidence, or new association of ideas, if we have formed a deﬁnite conception of a case to
be proved or disproved. Graham Wallas [27].
One strategy to understand a problem is to generalise it. In fact, there may
already be many strategies to solve a problem and so you should look to ﬁnd
or develop an appropriate action plan. There may be a general formula, or there
may be an established method to help you solve your problem, or there may be
no known solution and you will need to create your own plan. George Polya was a
mathematician who placed a huge emphasis on investigation and analogy. It is often
useful to restructure a problem into a way that you know how to solve. Harry Harlow
called the use of our past experience the “learning set” [12], today we would think
of this technique as educational transfer. Educational transfer involves transferring
the skills and knowledge that someone has developed for solving one problem, to
another. Harlow’s learning theory expresses that, for example, someone who knows
two languages can learn another foreign language easier. Someone who can play
one instrument may learn to play another easier.
Computer programmers often use analogy as a powerful method to solve
problems. We already discussed the idea of software design patterns. For example,
if we look to modern web frameworks, we see that there are certainly design patterns
that can be helpful when putting together websites and web applications. Often these
are explained as being Web templates, or design styles. Programmers can easily take
one off-the-shelf design, to do the preliminary outline concepts, and then at a later
stage skin the interface with different of appearances or use a different templates to
present the information with an alternative layout. As a programmer also, you can
use experience that you have acquired from other projects that may be suitable to
help you approach a problem. We are using our past-experiences to help us solve
new problems.
While transferring ideas or ﬁnding similarities can be a suitable technique, it
is not always easy to understand what analogy can be applied to solve a speciﬁc
problem. In particular, using analogy and investigation relies on the solver to have
lots of knowledge of the area and try to pull all those different ideas together. It also
needs the person to have a good understanding of potential solutions, and therefore
a good memory for all these techniques, which is often difﬁcult for the novice, or
early learner of a subject domain. Especially the use of analogy can be problematic
if you are investigating a problem (of a type) that you have not faced before, where
there may not be no analogous solution. John Sweller writes:
...domain speciﬁc knowledge in the form of schemas is the primary factor distinguishing
experts from novices in problem solving skills ...and that conventional problem solving in
the form of means-ends analysis requires a relatively large amount of cognitive processing
capacity which is consequently unavailable for schema acquisition. John Sweller [26]

3.6
Problem Solving Stages
59
Fig. 3.3
Karl Duncker [6] found that participants were more likely to use the box as a table to
set the candle on, and pin the box to the wall, when the tacks were not contained within the box.
By putting the tacks in the container, the box has a pre-deﬁned function, which inhibits some
participants from using it as a stand for the candle
Experts build up many schema and ideas in their minds. They can draw upon this
knowledge to great use when they are solving problems. They will pull on ideas that
they heard about a long time ago. They will not only be able to abstract the ideas,
but draw upon skills that they have developed over a long period of time. This will
certainly put the expert in a more advantageous position than a novice.
There are also circumstances where past-experiences can cloud our thoughts and
hinder us to get to a particular solution. Analogy can be restrictive and constrain
us to only consider a smaller set of ideas, and miss-out on potential novel and
ground-breaking concepts. Karl Duncker [6] called this functional ﬁxedness where
a person’s past experience can limit the imagination of the potential functions that
a device has. He explained an experiment where participants were given some
matches, a candle, some tacks and a small box (Fig. 3.3). The participants were
told to place the candle on the wall, such that it could be lit and the light would
shine down in the room. Some participants would pin the box to the wall and put
the candle on top. Others may try to melt the wax to afﬁx it to the wall. Duncker
found that the participants were more-or-less likely to arrive at the ideal answer,
depending on whether the tacks were given to the participants contained within the
box, or separate to the box. While participants could experiment with the kit, if the
tacks were in the box, they seemed to ﬁx the functionality of the box to that of a
container rather than to an alternative use, such as being a candle holder.
In synergy with the technique of analogy George Polya also encouraged investi-
gation as a strategy for learning and especially that students (learners) should focus

60
3
Thoughts, Ideas, Problems and Solutions
on investigating problems for themselves. In fact this is similar concept of problem-
based learning [13], where students work out authentic problems with the guidance
of a facilitator (tutor). The tutor assists the students to direct and apply their prior
knowledge, express different hypotheses and develop solutions for the problem.
The students need to ascertain what knowledge they have and what they need to
research in order to expand their knowledge. The tutor acts as a supporter and
helps direct the learning of the participants, perhaps discussing focused problems
to help scaffold the strategy and lead the learners in developing a solution. This is a
constructivist approach, based on encouraging the learner to take responsibility for
their own learning journey and allowing them to actively engage with all aspects of
the process. In these environments the learners are encouraged to explore different
solutions and develop their problem solving skills, and explore the problem in more
depth. Cindy Hmelo-Silver [13] explains that there are ﬁve goals of problem-based
learning:
1. Knowledge. That learners construct an extensive knowledge base that can be
applied in a variety of ways.
2. Skills. Develop problem-solving skills that are effective.
3. Self-directed. That they become self-directed. learners, and develop skills that
would be appropriate lifelong.
4. Collaborators. Become effective collaborators.
5. Intrinsically motivated. That they become self-motivated to learn.
There are many important aspects that we can learn from a problem-based
strategy. First, the tutors facilitation will diminish as the learners gain more
experience with solving problems. Whether collaboration between a tutor and a
student, or supervisor and student (such as in a PhD supervision), this approach
can help the novices develop their own skills and enable unknown problems to
be solved. Secondly, collaboration in this learning style is therefore an important
aspect of the problem-solving, which not only helps learners to progress through
the challenge, but helps to share and exchange knowledge and experiences between
tutor and several learners. Thirdly, analogy is an important technique to help develop
similar ideas. Yet, although past knowledge and previous experiences can help you
initiate solutions to problems, there may times it is a hindrance, as it can mislead
when developing appropriate solutions for the problem at hand. Finally, reﬂection
plays an important part of both learning and problem-solving. Indeed, learners need
to understand what they are learning (metacognition) and realise that the problem
is a means by which they are learning these ﬁve skills, rather than an end in itself.
After the plan has been carried out, the person who is trying to solve the problem
then needs to look back and reﬂect over what has been achieved. Indeed, through
reﬂection they may realise a better or more efﬁcient way to solve the problem (and
so they may need to start the process again). The person trying to solve the problem
certainly needs to decide if the answer they achieved is suitable. And any tool and
interface will need to be tested with users, to see whether users think it is a usable
system with appropriate utility.

3.7
Characterising Problems (Well-Structured vs. Ill-Structured)
61
Reﬂection should therefore be an intrinsic part of the problem-solving process. It
is often our subconscious mind that puts different aspects of the problem together.
Sometimes we need to rush and quickly jot down all our ideas, while other times it
is suitable for us to take time out, and to reﬂect on the problem (and maybe also to
reﬂect on various solutions). In 1926 Graham Wallas [27] proposed one of the ﬁrst
models of creative thinking, with reﬂection as being key to the creative problem-
solving process: preparation, incubation, illumination and veriﬁcation:
1. Preparation. The collection and putting together of information relevant to solve
the problem. Learning and understanding the ﬁeld better and planning. The
expectation here is also to enter into the right frame of mind.
2. Incubation. A period where you can consider and ruminate the ideas and
potential solutions. Spend time away from the problem doing other things.
Resting the mind.
3. Illumination. The conception of the solution and how it may be relevant to solve
your problem.
4. Veriﬁcation. The veriﬁcation that the solution works and is the correct solution
for your purpose.
However, incubation is often not effective unless you have put a lot of determined
effort into the problem, and looked at many solutions, researched what other people
have done, articulated the problem through different means.
3.7
Characterising Problems (Well-Structured vs.
Ill-Structured)
We have discussed thinking, the nature of problems, strategies to solve problems,
and we have hinted that not all problems are alike. Indeed, there are many types
of problems, but we separate them into two groups: those problems that are
well-structured and well-deﬁned and those that are ill-structured and ill-deﬁned.
George Polya’s model presents a set of key stages to solve a problem, that problem-
solvers need to “understand the problem, devise a plan and carry out the plan”.
However, one of the challenges with this model itself is that, while it may be easy to
say “devise a plan” it is another matter to actually ﬁnd a suitable plan. Just consider
problem-based learning; the whole essence of this style of learning is that it is
problem driven. The teacher wants to detail a question that has a balance between
being solvable, motivational and allowing choice. It needs to be a question that is
suitable for learners to solve, given their abilities, their background knowledge and
given their knowledge and skills. It needs to be at the right level for the learner.
On a maths paper, the teacher could include some simple arithmetic calculations,
such as:
3  3 D 9
3  4 D 12
3  5 D 15

62
3
Thoughts, Ideas, Problems and Solutions
With these types of questions the teacher can easily mark the work, there is clearly a
right (or wrong) answer. In fact, the students are able to work out the questions easily
and (depending on the level of the learner) the answers may be quick responses,
when the student has memorised their times-tables. These types of questions are
well-structured. There are two sides to these types of questions. First the teacher
can make an easy set of these questions, which often an be pulled from a bank of
questions, and are also usually easy for the teacher to mark. The student, on the
other hand, needs to know the formula to understand how solve them. They also do
not allow for error or uncertainty from the learner. Perhaps the learner gets a close
answer, or maybe they get to the wrong answer, yet their method was generally
correct. Unless the teacher also collects information of the learners’ process, and
workings, the learner will only receive feedback on a right (or wrong) answer and
not about the method they used.
Let us consider another type of question. You have a swimming pool measuring
20 m long by 10 m wide. How much would it cost to ﬁll a swimming pool of
lemonade to 2 m in height, considering that a 1 l bottle of lemonade costs you £1:00.
This type of question is now a little more complex, but again quite straight-forward.
It is again well-deﬁned. It certainly relies on more knowledge, because students need
to understand how to generate a volume (width  height  depth) and understand
that a cubic metre is equal to 1000 litres. But it is still quite easy to calculate. In our
case we have a volume of 400 cubic meters (20  10  2). With an overall volume
of 400; 000 litres, which would cost us £400; 000 towards the lemonade.
Now let us make it a little harder and less certain. Consider the same swimming
pool. This time we are going to ﬁll it with ping-pong balls! How many balls are
needed to ﬁll the pool to a height of 2 m? This question is now a little uncertain.
Some parts we know already. We know the volume of the pool (we have done that
calculation already), we may already know the equation to calculate the volume of
a sphere (V D 4=3r3). But we would need to ask ourselves a few questions: “how
big is a ping-pong ball?”, “how do ping-pong balls pack together?”, “how accurate
do we need to be?” Even with the vague amount of information in the question, we
would be able to make some assumptions. We know that ping-pong balls are solid
and that they can pack next to each other (they do not overlap). Just by imagining
a ball, we may hazard a guess that they pack together closer than merely assuming
cubed volumes.
In most cases, the domain knowledge implied or required by a question depends
on the context of the question and who it is aimed towards. For example, if the
question is aimed at a student studying a physics course, then they may have studied
packing algorithms, they would already know some of the equations and percentages
of dense packing spheres on lattices. On the other hand if the question was posed to
a student on a class studying estimation, because the whole essence of the question
is to approximate, different assumptions can be made. Sitting in the estimation
class, the student would guess the size of the ball. Maybe they would even make
an assumption that the ball takes up a volume the same as a cube, and pack them in
regularly. This would certainly get a rough estimate, but would not be accurate.

3.7
Characterising Problems (Well-Structured vs. Ill-Structured)
63
Staying with the swimming pool storyline, let us now consider that you are a
landscape designer and need to design a new outdoors swimming pool, for a client’s
back garden. The client wants the pool to ﬁt within their garden, be in-keeping with
the design of the house, be an inground pool and easy to maintain. However, you are
free to imagine different pool designs, expecting what the client will choose. In fact,
there are different ways to tackle this problem. You may look to other designs and
get lots of photographs to show the client. Or you may start to sketch different ideas
and show them these concepts, to get them to choose the main features of the design,
such as the structure and shape of the pool. Then you may look to how one would
enter the pool (e.g., steps, ladder), then investigate aspects of its environment such
as decking, stone or pavement. Finally, you may focus on additional aspects such
as fountains, waterfalls, lights, water jets etc., and heating and safety equipment. Or
you could start to design the pool, choose some components yourself and draw a few
sketched plans that could demonstrate three of your main ideas. Figure 3.4 shows
some ideas of sketches. What is clear, however, is that there are many different
possibilities and choices that the client can potentially choose.
The task to design a pool is a creative question. It is an example of an ill-
structured problem. These are problems that are “vague, ﬂuid and not susceptible
Fig. 3.4
There are many different designs that could be used for a swimming pool. While there
are some constraints (size of back yard, or trees) the problem is still ill-structured because there
are many potential answers; each as valid as the next

64
3
Thoughts, Ideas, Problems and Solutions
to formalisation” [25]. The pool may look modern and have square corners, or
Mediterranean with Greek or Roman shapes, arches and colourful ceramic tiles,
or maybe a tropical style with mosaic ﬁsh, waterfalls, boulders and palm trees. The
decisions come from the designer working with the client. Often, with these kinds of
questions, the designer needs to work closely with the client, and ask many questions
to obtain suitable potential solutions.
Imagination is also required to consider different conﬁgurations. It requires the
designer to think about the problem in a new way. If you are the pool designer and
have many years experience of designing pools, then you already know what works
well, and what clients may like. You start to judge the client and their style, when
you ﬁrst meet them; you assume their expectations. You have honed your foresight
skills and are better at creating designs that may be accepted by your client. You
also know what colours work well together, you know more about the practicalities
of placing the pool away from trees, away from the house, and the techniques for
building the pool and making the appropriate foundations. But, from one respect,
the challenge to build a pool in the back yard is still quite constrained. There are
only a few ideas that could be possible. This is because the problem has a very
speciﬁc context. Perhaps you could imagine a huge water slide that provides a lift to
the top and then helter-skelter down to the pool. However, because the client wants
something to closely match with the design of the house your need to restrain those
imaginative ideas.
If we were to now say, “imagine to build a new water-park”, then you would
be less constrained. This question is even more open-ended and you would need
to consider many different ideas. It also gives you imaginative freedom to be bold,
controversial and outrageous. You need to break the main problem (build a water
park) into many sub-questions or smaller parts. Maybe you ﬁrst consider that the
park will have different zones. A Relaxing zone, Kids area and Adrenaline seekers
zone. We can now reconsider the idea of the helter-skelter pool, and this would ﬁt
in with your design.
Ill-structured problems need different strategies to solve. They are often creative
and do not have a speciﬁc answer. No one can really say “your choice of an earthy
colour palate for a painting is wrong”. But, we could say that the colour choice
could be improved by using a brighter colour palate. Likewise you may make a
design decision to layout the buttons in a speciﬁc way. Again, no-one can really say
“your layout is wrong”. However they could say, “it would probably be clearer if it
was positioned differently”. Creative thinking and answering problems that do not
have a deﬁned goal are strategically more difﬁcult. This is why we developed the
Five Design Sheet method. What you need to do is to think through many different
ideas and consider each of them in turn. Maybe some ideas are clearly unacceptable,
while for other ideas it is less clear whether they are useful. It deﬁnitely takes time
and effort to generate new ideas that will solve a particular problem.
Well-structured and ill-structured questions are, by their nature, difﬁcult to
differentiate. From our discussion of the pool, it is clear that the earlier set of
scenarios were more structured. For example, calculating the quantity of ping-pong
balls in a pool requires a set of known formula and processes to be applied. There

3.7
Characterising Problems (Well-Structured vs. Ill-Structured)
65
is one answer. Answers from students may certainly differ, but not by much. We
could put an error rate on the answer, or a range, whereby the answer needs to be
between two numbers. On the other hand, the later ones were less-structured (design
a backyard swimming pool, or design a water-park). These are obviously creative
questions, which imply that there are many solutions, and the solutions depend on
the creative ability of the person doing the designing.
Subsequently, there is a continuum from well-structured to ill-structured. We can
gain an idea that one question is more (or less) structured than another. In addition,
we may come across well-structured questions when we subdivide ill-structured
problems down into further sub-problems. For instance, considering the backyard
pool, we could calculate the volume of water required for the pool, to estimate the
cost of ﬁlling it and heating it (well-structured questions). It is difﬁcult to precisely
deﬁne well-structured and ill-structured questions, and several researchers have
instead focused on the characteristics for both types of questions (e.g., Herbert
Simon [25] and David Jonassen [15]). Well-structured questions have a well-deﬁned
initial state, a known and clear goal state and a constrained set of logical instructions
that will be able to take us from the initial state to the goal state [15], whereas ill-
structured questions have more uncertainty.
Characteristics of well-structured questions:
•
All elements of the problem are presented.
•
The solution can be found by applying a small set of rules (or principles) that can
be organised in a predetermined order.
•
The solution to the problem is predictable, or that there is a correct convergent
answer.
•
A preferred (or correct) solution can be prescribed.
•
To solve the problem knowledge is required, and there is a clear relationship
between the starting state, the choices used to solve the challenge, and the
predictable result.
•
The information to solve the problem is given in the problem description, or
knowledge that the learners/developers already have.
Ill-structured questions have the following characteristics:
•
They are ill-structured because the goals are unclear or vague.
•
They can have unstated constraints.
•
Multiple solutions exist, and it is unclear which one will be the best solution, and
there is no consensus on an appropriate solution.
•
There are several ways to evaluate each of the solutions.
•
There is uncertainty over which of the parameters (or rules) are useful or required
to answer the problem.
•
The solutions would be different to previous versions. There is no general
prototype to create an answer.
•
It is difﬁcult to predict the outcome in advance.
•
Beliefs and personal experiences have huge impact on the outcomes.
•
Judgements are required to determine whether the results are useful, applicable
or appropriate.

66
3
Thoughts, Ideas, Problems and Solutions
Ill-structured questions do not mean that there is no goal. On the contrary, there
is often a clear goal. “Build a pool for my backyard”. “Design a building to hold an
Olympic sized swimming pool”. “Work out the best way to travel to Rome for my
summer vacation”, or “how could I get rubbish down from the twentieth ﬂoor of a
building under construction?” The problems still have requirements, they can still
have a speciﬁc end-goal, however there is no deﬁned way to get from the start to the
end. Much more uncertainty also surrounds the questions, the knowledge required
and the goal. To solve these questions we need to bring back structure. One method
is to divide the problem into smaller parts (subdivide or analyse) and then synthesise
the solutions to make the whole. We, who are ﬁnding the solution, need to create,
provide and deﬁne the structure. Herbert Simon writes:
The whole design, then begins to acquire structure by being decomposed into various
problems of component design, and by evoking, as the design progresses, all kinds of
requirements to be applied in testing the design of its components. During any given short
period of time, the [designer] will ﬁnd himself working on a problem which, perhaps
beginning in an ill structured state, soon converts itself through evocation from memory into
a well structured problem. ...the problem is well structured in the small, but ill structured
in the large. Herbert Simon [25].
Often when we are designing a user-interface, we have a clear starting position.
For instance, this could be a problem, or challenge, that we wish to solve, or a
problem that the teacher has set. Probably, on the whole, this is an ill-structured
problem. It is ill-structured because no one is telling you exactly how to design the
interface, how to layout the buttons, or what functionality the tool will actually need
or have. The teacher can advice and give some hints as to a suitable solution. For
instance, a PhD adviser may have a vision of how the tool could look-like. They
are drawing on their knowledge of previous systems, and good practice that they
have built-up over many years of working in the area. To design a new interface we
therefore need to be creative. This is especially true if you are needing to create a
new data-visualisation tool. No one is telling you that you need to use a bar-chart,
or a line graph, or that you need to develop a new kind of visualisation layout. And
if you do decide to make a new visualisation layout, then no one is telling you
what it would look like. These are clearly ill-structured questions. However there
is clear structure along the way. Especially when this large problem is subdivided
into smaller chunks. Just consider the challenge of laying out buttons. This can be
achieved by a layout manager class, such as by using the GridBagLayout manager
to layout buttons in a Java Graphical User Interface. Now we have turned this part
of the problem into a well-structured problem. Because there would be only a few
ways to layout the buttons.
We can consider that the FdS method as an approach to bring back structure to
ill-structured problems. We are dividing the challenge into smaller parts, and getting
you to think about these smaller components. By doing so, something that may be
daunting at the start (develop a user-interface, from a set of open-ended criteria)
now becomes tangible and solvable. David Jonassen [15] provides eight stages that
a learner could use to help them address ill-structured problems:

3.7
Characterising Problems (Well-Structured vs. Ill-Structured)
67
1. Articulate goals and verify the problem.
2. Relate problem goals to problem domain.
3. Generate alternative perspectives.
4. Generate problem solutions.
5. Gather evidence to support or reject positions.
6. Determine the validity of the arguments.
7. Implement and monitor solution.
8. Adapt solutions.
Along with bringing back the structure, the idea of re-structuring the problem
domain is a useful way to tackle ill-structured problems. Re-structuring often helps
you to consider new (perhaps unseen) solutions. For instance, let us think about the
problem of removing rubbish from the second ﬂoor of a building. You could re-
structure the question about removing rubbish, by asking a similar (but opposite)
question of “how would you destroy rubbish on a twentieth ﬂoor of a building under
construction?” An obvious answer to this question is to burn it. Now when we go
back to the actual question we posed, we could say, a solution would be to burn the
rubbish ﬁrst and then compress the waste into cubes of ash, which would only then
be transported down the stairs. This may make it lighter to move down the stairs,
and more economical. Probably we would not have thought of burning the rubbish
(as answer to the initial question) if we had not thought of the second question. So
re-structuring can be a useful technique to solve problem.
Memory also is another key factor to understanding how to tackle these types of
problems. It is often suitable to rely on previous experience to tackle the problem.
So, by understanding and reading this technique (of thinking about the opposite),
you are more likely to use this idea when you are asked to answer a different ill-
structured problem. In fact, research has shown that learners, after using problem-
based learning techniques are more likely to apply these skills to new and unknown
questions [13]. Therefore in a similar way, by using the FdS multiple times, your
skills and knowledge of how to explore the design-space should improve, and you
should be able apply the techniques you have learned from one problem to another,
even if the problems are different.
Several research domains have similar concepts, social policy research discusses
wicked and tame problems [20]. The name wicked is used, not as they are evil
or bad, but because they are difﬁcult to resolve and solve. Let us pose a question.
How do you decrease crime in an area of a city? Maybe there is a problem with
poverty in the area, while poverty and crime are probably linked, the question
of how to decrease poverty is another wicked problem. We could think about a
solution of using education, but then probably truancy and lack of motivation within
education are other wicked problems. We can think of challenges with immigration,
deprivation, identity and pride within the city all as issues. Maybe policing (or lack
of) affects the situation. But then putting more police may inﬂame the situation
and make it worse. There are potentially many solutions, but while each question
and a potential solution may not be good or bad in their own right, it is difﬁcult to
know what would happen when one is implemented. With wicked problems, often

68
3
Thoughts, Ideas, Problems and Solutions
the problem domain is unknown and maybe even the end result is unknown. Just
by the very act of investigating the problem we may change our understanding
of the problem. These types of problems are highly inter-connected. Add some
additional characteristics – such as that they need to be done quickly, or that no
central authority is trying to solve them – and we get super-wicked problems. Rittel
and Webber [20] deﬁne ten aspects to wicked problems:
1. There is no deﬁnitive way to formulate a wicked problem;
2. There is no way to decide that the problem has been completed;
3. Solutions to the wicked questions are not good or bad, nor are they right or
wrong.
4. No test exists to decide that a solution is a solution;
5. We cannot solve them by learning about previous solutions, every solution is
unique, and the ramiﬁcations are huge and cannot be undone, e.g., changing a
curriculum affects every student for years to come, and cannot be re-done;
6. We cannot enumerate all possible solutions, nor can we make a list of
permissible operations;
7. Each of the wicked questions are intrinsically unique;
8. Wicked problems can be a symptom of another problem. For instance, we can
consider crime in an area of a city to be a symptom of poverty, lack of morals
etc. There may be many reasons, each of which are more wicked problems.
9. There are different viewpoints on the wicked problems, which are likely to
make it harder to agree on how the wicked problems be represented, and thus
solved.
10. Wicked problems are often social that affect people’s lives, and consequently
society is often unforgiving with a wrong answer. Whatever change is made
(could be wrong), but no change could also be wrong.
Ill-structured problems are often used to motivate the design of computer
interfaces. “Create an interesting educational game”. “Develop a tool to help doctors
save time on their rounds”. “Develop a tool to help learners interact with their
peers”. “Develop a Website to promote your research”. “Visualise security data to
help mitigate against cyber attacks”. While motivational problems, each of these
questions are actually ill-deﬁned. There is no way to ascertain that the tool you build
is actually the right one. There are different solutions and designs that are possible,
and any would make suitable solutions. Some are however more wicked. Developing
a tool to help learners interact with peers, may improve performance, but may
increase plagiarism, it may help with communication within the department, but
may also increase rumouring and gossip, that could be detrimental to the School
as a whole. Some wicked problems can be highly interconnected. Metaphorically
speaking we can have a situation whereby by initiating a solution along one street
can force out a problem down another street. Russell Ackoff called these highly-
connected systems messes. These systems often have humans-in-the-loop, have
high complexity, a signiﬁcant amount of uncertainty and often can have several
goals. The challenge with these type of questions can be that they contain both
hard and soft factors [22] or hard-data and soft-data. Hard data is explicit and is

3.8
Being a Convergent and Critical Thinker
69
Fig. 3.5
The formulation and the solution to puzzles, problems and messes can be either agreed
or are arguable
easily measured and proved, metrics can be used to measure various quantities.
Whereas soft-data is intangible, often human related, it lacks rigour, does not have
a well deﬁned form, and can consist of quotes or anecdotes. For instance, socially
represented data can be collected with a questionnaire. Such polls require a sample
or selection of the population, and any opinions sought or conclusions found depend
on the population that was used in the research.
There are several different types of problem and many words in the literature
to deﬁne them. Indeed, it can be confusing how all these ﬁt together. Following
from Russell Ackoff [1] and Rittel and Webber [20] we can consider three types:
puzzles, problems and messes, see Fig. 3.5. Puzzles are well-deﬁned problems that
also have a speciﬁc outcome or solution, which can be worked out. Problems, have
well-deﬁned issues, but it is unclear what the solution would be the best. Finally,
messes are the wicked problems, which are complex, ill-structured, ambiguous and
can be trying to address an issue that is unstable.
While we have considered how to categorise problems, puzzles and messes, we
can likewise consider the types of thinking that needs to be performed to solve
each of these problems. Either we are narrowing down the solution space, and are
converging onto an answer. Or we are creating many alternatives and are thinking
divergently.
3.8
Being a Convergent and Critical Thinker
When you are considering a problem or challenge with one solution or maybe
a few solutions then you are performing convergent thinking. Consider a well-
structured problem such as “calculate the multiplication of two numbers”, 243, for
instance. The thinker needs to apply knowledge that they have learned and perhaps
also to draw upon many examples that they have worked through to calculate the
answer. When the answer is given, it is then clear whether it is right or wrong.
Unquestionably the answer of 86 is something that is accepted as the correct

70
3
Thoughts, Ideas, Problems and Solutions
result and the correct answer cannot be refuted. With convergent thinking we are
heading towards a reduced set of outcomes. The results are absolutely clear (such
as often the case with mathematical calculations) and there is no ambiguity. With
mathematical problems, however, one of the challenges can be to ﬁrst work out
which equation to use, know how to apply it, and ﬁnally calculate the answer.
Critical thinking is required to consider the appropriateness of different solutions,
and foresight is needed to ascertain which technique would be the best, or the
most productive. For more complex mathematical problems there may be several
equations (or many ways to tackle the problem) so the thinker often needs to have
insight into the overarching challenge to work towards the goal. This is where a
broad understanding of many different techniques can help the thinker solve these
problems. Convergent thinking is also required to address each types of problems
(whether puzzles, problems or messes).
When solving puzzles the thinker sometimes needs to apply leaps of faith. They
do not necessarily have foresight to understanding the outcome, or the implications
of their actions, so they take a chance or make an informed decision (they make a
guess). Let us consider some match based puzzles. Figure 3.6 shows a sketch of two
puzzles made from matches. On the left we see a ﬁsh that appears to be swimming
to the left. By only moving 3 matches make the ﬁsh appear to be swimming to the
right. On the right, we see a set of 16 matches that describe ﬁve squares. By using
all the 16 matches, and by only moving 2 matches, make a pattern that shows only
four squares. Take a moment to try to solve these patterns. Use a pen and paper to
try out different answers. Or even use a box of matches, if you have one easily to
hand. When you have had a try you can turn over to see the solution (see Fig. 3.7).
As you think through the puzzles and attempt different moves you are taking leaps
of faith. It is easy to think that you will be rotating the ﬁsh and so your thoughts
could be ﬁxed on a particular solution, however the answer really reﬂects the ﬁsh
and moves it slightly upwards. After trying a few combinations without ﬁnding a
solution, you may start to think that there is no answer. So to persevere with the
Fig. 3.6
Two matchstick puzzles. (Left) With the ﬁsh puzzle, change only three matches to make
the ﬁsh swim to the right. (Right) There are 16 matches that describe ﬁve squares. Again using the
full 16 matches, and by only moving 2 matches, make a pattern of only 4 squares

3.8
Being a Convergent and Critical Thinker
71
Fig. 3.7
The answers to the match puzzles of Fig. 3.6. (Left) The ﬁsh puzzle; by only changing
three matches the ﬁsh now swims to the right. (Right) By only moving two matches we can change
the pattern from ﬁve squares to four
Fig. 3.8 Try to join the nine
dots with four straight lines.
The lines must connect all
dots, and you are not allowed
to take the pen of the page
puzzle you need to trust us that there is a solution and believe that we have not
tricked you. As you try-out different combinations hopefully you will ﬁnd a the
solution. With the squares puzzle we can actually apply some logic to help us get to
the solution quicker. Because we need to reduce one of the squares, we can deduct
that we will need to have the squares with less intersection and each square being
more independent. Therefore through this deduction we may be quicker to ﬁnd the
right solution. Also, if you have seen these puzzles before, or have done other similar
puzzles, you will be faster at getting to the solution.
Although only one answer, these insight problems still require you to perform
lateral thinking to itemise and categorise different potential solutions and try out
answers to explore whether they may be correct. Let us consider the nine-dots puzzle
(see Fig. 3.8). There are nine dots on the page [28] laid in a 3  3 grid. Your task
is to use four straight lines (only) to connect all the dots. When you start drawing a
line you are not allowed to take the pen off the page or re-trace your steps, or return
to a dot. If you have not seen this puzzle before, we suggest you have a go. Draw
the nine dots on a sheet of paper and see if you can place four straight lines over the
dots.

72
3
Thoughts, Ideas, Problems and Solutions
The nine-dots problem is convergent because most of the (potential) solutions
would not be correct. There are only a few solutions to this challenge. However
you also need to think creatively. This insight challenge requires you to think out
of the box. In fact, this is often taken literally, because one of the solutions to the
nine-dots challenge is in fact to draw lines that are outside of the square of the dots.
The phrase “thinking out of the box” is also believed to originate from this nine-dot
puzzle. So why do we ﬁnd this so difﬁcult? Maybe it is because we see foreground
dots and the white page as a background. The colour contrast means that we focus
on the dots and are ﬁxated by the dots themselves (remember Karl Duncker [6]
called this functional ﬁxedness whereby we often ﬁx on a function rather than seeing
how it could be potentially used for something else). It may be, however, that we
have a disposition to exactly join the dots (and not draw extended lines outside the
perimeter of the dots). This focus has perhaps come from our love for dot-to-dot
books as children.
If we relax some of the constraints further, such as the size of a dot (assuming it
is not an inﬁnitely small point) and the planarity of the page (such by thinking it to
be three-dimensional) then there are also other solutions to this problem. We have
included three solutions on the next page (see Fig. 3.9). Especially if we loosen our
belief that the dots represent inﬁnitely small points in two-dimensional space we
can imagine a solution of the dots being located on a sphere, then we can join the
dots with one (albeit curved) line.
Fig. 3.9 There are several solutions to the nine-dots puzzle. We include a few for your interest.
Lower left, the traditional answer with the extended lines outside the dots. Lower right, treating the
nine dots in three-dimensions and drawing a continuous spiral. Top, treating the dots as having a
larger size, and drawing three straight lines as a zigzag

3.9
Divergent Thinking
73
3.9
Divergent Thinking
When you are not constrained by rules and there is no particular answer that you
are heading towards, and you are thinking through many potential ideas, you are
performing divergent thinking. Hereby your thinking is more free. It is less guarded,
less constrained. We need to be divergent in our thinking as we consider any creative
question. Let us consider a less structured question: “list all uses of a brick”. We
suggest and encourage you to stop for a moment, before you read any further, and
have a go at this task yourself. Take a sheet of paper, a pen and give yourself 1 min
to write down on the page as many uses for a brick as you can think about [10]. Be
creative in your approach. Make sure you relax as you do this task. But do remember
to be as quick as you can. In one respect your mind is bouncing around and going
from one thought to another. Put all your thoughts down on paper, as there will be
no wrong answers. Even if you have done this task before, we encourage you to do
it again. Try to beat your previous score! Now you have done that task. Consider
your concepts for a moment. How many ideas do you have? What types of concepts
have you considered? How diverse are your ideas? Are some of them impossible?
Are others repeats?
Joy Paul Guilford used this exercise along with other common household and
ofﬁce items such as newspaper or paper-clip to evaluate creativity in people. In fact,
when writing this book, we performed the same task. Subsequently, we include our
list of uses for a brick, below. But only turn to our list, when you have had a go
at this task. In our list here, we have 16 ideas. Probably (and actually hopefully)
you would have many more ideas listed on your sheet of paper. Some of your ideas
will common, but also there will be differences between our list and yours. When
considering the “uses of a brick” thought problem, we can start to imagine a huge
range of potential solutions (Fig. 3.10). Some of your ideas will be sensible, others
may not even be practical, while others may be out of character – and you would not
carry them out. This is divergent thinking. There is no right answer and in fact there
is also no wrong answer. Sure, some of the answers may be negative or useless,
while others may be completely impracticable. But, they are still valid ideas and
still relevant answers to the question!
This task is actually the alternative uses task by Joy Paul Guilford [10]. It relies
on several skills. First that you understand written English – that you can both read
and also comprehend what the words mean. You also need to be able to visualise
the brick and imagine in your mind what it could be used for. It also relies on you
thinking original thoughts and to keep going, even if you think the same thought
again. It is often too easy to get stuck on a particular idea. If you had the same
thought already then you may have put it down. So the process also needs you
to quickly move on. You also need to be ﬂexible and cover as many ideas as you
can in the quickest possible time. You also can push your thoughts to the extreme
and create wacky or unusual ideas and there is no limitation to considering weird
and wonderful ideas. When you are thinking in an unconstrained way, you are
performing what Edward de Bono [4] calls lateral thinking. It is not only about

74
3
Thoughts, Ideas, Problems and Solutions
Build house.
Build a bungalow.
Build flats.
Throw.
Break a window.
Use to display flowers (one per hole).
Use as stand.
Use to prop up a table.
Use instead of a table.
To test if a feather or brick fall faster (physics experiment).
Use as ballast.
Use as a pendulum weight.
As a work of art.
To crush and make into roads.
Use for a decorative sculpture.
Sell and make money.
Fig. 3.10 Our list of answers to the “list all uses of a brick” problem
generating new ideas, but we need to make new associations and merge different
facets of the problem together. Maybe mix several ideas together to create something
new, or start by thinking of one idea and elaborating it.
Let us give you a behind-the-scene glimpse into our thinking. Hopefully this will
give you an insight into our thoughts! First the ideas start with the traditional use for
a brick – one of building. Then we elaborate the idea into other building uses. From
there we start to move laterally away from that idea, and metaphorically we throw
the idea away. This mental throwing then gets us to consider the idea of throwing
the brick. Again we elaborate consider that the brick could break a window. Then
get back to positive aspects and think that it could be used as a stand or a prop. Then
we are ﬂexible and try to consider what type of propping device we would have. We
end up with something that could display ﬂowers. Our thoughts therefore bounce
from one idea to another.
The alternative task can be measured on several axis. The ﬂuency of your
responses – in other words, how many alternatives you have written. In our example
above we have 16 results. The originality of the ideas and especially demonstrating
unusual ideas. For example, in a group you may have written different ideas to other
people, and no one else had written “use as a pendulum weight”. That your mind was
ﬂexible and that you covered different categories. In our example we have several
examples of building or using the brick as building materials. Finally, the last axis
is elaboration, which measures how much detail or elaborate the ideas were. In our
example, we could have written “drop a brick” but we have elaborated on the idea
and in fact wrote “to test if a feather or brick would fall faster”.
Based on Guilford’s work, Torrance developed the Torrance Tests of Creative
Thinking (TTCT), which has been used to measure creative thinking. But, we
suggest that these concepts (especially ideas around the TTCT) should be used as a

3.9
Divergent Thinking
75
method to encourage and develop creative thinking, not as a test for it. If you wish to
read more about the TTCT then we suggest you look at the paper by Kyung Kim [17]
who provides a comprehensive review of the issues and experiments around the
TTCT. We agree that some people are more creative than other people. But we also
believe that everyone has capability to create their own visual designs, and there
is therefore little worth in evaluating a score of creativity in this regard. Especially
the Five Design-Sheets, we feel that everyone can think and consider different ideas
and can sketch them down on paper. In fact, the original development of these tests
were to improve creativity rather than the merely evaluate it. In fact, Guilford wrote
positively about evaluation factors saying:
Evaluation factors have to do with decisions concerning the goodness, suitability, or
effectiveness of the results of thinking. After a discovery is made, after a product is
achieved, is it correct, is it the best that we can do, will it work? Joy Paul Guilford [10].
The two aspects of divergent and convergent thinking ﬁts with the Design Coun-
cil’s Double Diamond model (see Fig. 3.11). The council created this model after
contemplating the design process of 11 companies [2]. Divergent and convergent
thinking can occur at different parts of the design process.
Fig. 3.11
Double diamond design strategy from the Design Council [2], reproduced with
permission. Where users discover, deﬁne, develop and deliver solutions. The design process is
often complex, however this model helps us to understand that divergent and convergent thinking
occurs throughout the whole process

76
3
Thoughts, Ideas, Problems and Solutions
•
Discover. The ﬁrst stage is all about discovering what the users’ needs are.
Ascertaining what the project should focus on, and what the innovation should
be.
•
Deﬁne. The second phase is to work out important issues to tackle, deﬁne with
the problems are, and how to interpret them.
•
Develop. Explore different ways to tackle the problems and consider how to
design alternative potential solutions.
•
Deliver. Work on producing the solutions and developing prototypes that will
demonstrate your ideas.
The double diamond model of creative thinking explains that divergent and
convergent thinking happens at different times of the design process. Not only do
you need to consider all possible outcomes (divergent thinking) but you need to
work out which ideas are the best (convergent thinking). Ideas need to be reﬁned
several times. Weaker ideas are therefore dropped during the process, with stronger
ideas percolating through to the end.
We can see both divergent and convergent thinking taking place in the Five
Design-sheet methodology. Sheet 1 is where much of the divergent thinking takes
place. We are asking you to think up many different ideas. But there is still
convergent thinking here too. The idea of ﬁltering out the weak or ineffective ideas
requires convergent thinking. Then working out how the ideas are combined or
reﬁned, needs both convergent and divergent thought. In addition, the very act of
combining two (or more) ideas together can help you think up new ideas. It can help
spark you into considering a brand new idea. Categorising the ideas likewise aims
to reduce the quantity of ideas, but also can help you think up new ideas too. The
categorisation process also helps to push your mind to start thinking about the three
candidate designs, that will then be placed on sheets 2, 3 and 4.
3.10
Enthusiasm and Attitude to Thinking, Problem Solving
and Creativity
Having the right attitude as you approach solving the problem (whether it is a
puzzle, problem or mess) is of utmost importance. If you do wish to develop an
appropriate tool, to sketch different potential solutions, and work through different
ideas: then you will! Being motivated means that you have the right mental drive
to accomplish the goal. On the other hand, if you do not want to get the task done,
then it won’t get done! Approaching problem solving and creativity with the right
attitude is a very important skill to have.
Remember the matchstick puzzles, with perseverance you have a greater chance
to ﬁnd the correct answer. Much of learning is perspiration and attitude. As learners,
from an early age, you are given many exercises to do, to learn the subject. Probably
you can remember memorising the times-tables, or learning by heart equations
necessary for an exam. Learning a new skill requires you to put effort into the task.

3.10
Enthusiasm and Attitude to Thinking, Problem Solving and Creativity
77
Likewise through problem solving, we need to persist and try and try again. Also,
having the right attitude to learning, helps you to be more continue, even when
the learning gets tough. Ben Shneiderman, reﬂecting on models from Edward de
Bono [4] and George Polya [19] and others writes:
The inspirationalists also recognise that creative work starts with problem formulation and
ends with evaluation plus reﬁnement. They acknowledge the balance of 1% inspiration and
99% perspiration – a ﬂash of insight followed by much hard work to produce a practical
result. Ben Shneiderman [24].
There are different circumstances and situations that can motivate us as humans.
We may have a personal desire to do well and be genuinely interested in the area.
Perhaps we want to learn about creativity, about designing interfaces and we wish
to improve our own sketching and planning skills. This will motivate us to read the
book, try out the exercises and work through the problems that we have. We will be
intrinsically motivated. In this case, we are not relying on any external pressures,
or extrinsic rewards, rather we are doing the work because we want to. Because
it is both fun and enjoyable then we will more likely to do it. Indeed, we believe
that sketching can be fun, whatever your ability. And thinking through problems
and coming up with new ideas that no one else has considered is rewarding. As
authors, we are passionate about sketching and idea creation. We hope you will be
too. On the other hand, motivation can also come extrinsically. We can be rewarded
for solving the problem, through trying to beat another person, reward of money,
grades or other incentives. Assessments are extrinsically motivated because they
offer grades at the end of the assessment. However, as a learner it is important to
want to do something, and have own personal drive and the want to learn, rather
than merely being motivated by grades.
Ill-structured questions by their nature provide open-ended goals, which mean
that they are useful in education to get students to be creative and encourage students
to work hard. They allow students to have freedom of expression, as well as doing
something that is (hopefully) interesting and fun for the student to be intrinsically
motivated. In a second-year computer science module on computer graphics, we
motivate the learners to understand pixel plotting algorithms by getting them to
implement a diffusion limited aggregation simulation (DLA) [21].
This active learning exercise gets the students to learn about simulation models
and ways to implement them in software. They need to consider a way to store
the state of the system (as a grid, or a two-dimensional array). Students are led
through the challenge through hands-on practical sessions. They demonstrate every
week how they are progressing through the challenge. We give them hints if they
get stuck. For example, we suggest that they use a model-view-controller pattern,
to separate the model (data) from the viewer (the way to display the data), and the
interface to control the parameters and setup the simulation. We also give students
feedback on how they could improve their work. Students develop an interface that
can change how the diffusion-limited aggregation pattern appears. The interface
can change the quantity of particles added, the colourmap, or the deﬁnition of
neighbourhood (4-connectivity or 8-connectivity). Importantly, we use sketching

78
3
Thoughts, Ideas, Problems and Solutions
Fig. 3.12
Student submissions to the problem-based learning assessment, where they design and
build a computer program that simulates and visualises a diffusion limited aggregation model
to explain concepts, such as 4 and 8 connectivity, and to help students understand
the main ideas. Figure 3.12 shows two screenshots of students’ work. The systems
that the students have created are simple, but they enjoyed the problem, and learnt
more about pixel manipulation, computer graphics and how to create a simulation.
Intrinsic motivation occurs when learners feel that they have control over their
own destiny and that they have autonomy. If the students also are motivated to
master the subject then they are more inclined to work hard. Finding your passion,
and discovering what you love to do, is obviously a good starting point to being
creative and to initiate new designs. Not only does the type of question help to
motivate you to do the work, but it also beneﬁts the solutions that are created. If you
are motivated by implicit reasons – you want to do it, because you are interested in
it naturally and it is exciting to you – then you will probably work harder, longer
and make more revisions and thus reﬁne the outcomes to make them better.
Hopefully you will (or already do) love to sketch, and that by doing more and
more sketching you will get better at it. It is clear that there are many reasons that
motivate people to do designs, and make new interfaces, and look at data in new
ways. Indeed, you will have your own set of motivations (or distractions). We do
acknowledge that it is not always easy to be creative. There are many distractions
that come to us every day, and many aspects of life that will take us away from
our goals. you probably will have different motivations to tackling new ideas and
because it is often difﬁcult to think creatively, in the next section we will describe
many ideas to help you create alternatives. Ken Robinson writes:
The world is changing faster than ever in our history ...We need to create environments –
in our schools, in our workplaces, and in our public ofﬁces – where every person is inspired
to grow creatively. Ken Robinson [23]
It therefore stands to reason that the more design sheets you do: the better you
become. The more sketching you do: the more conﬁdent you become. The more

3.11
Thinking, Problem Solving and the FdS
79
you start to think divergently and consider alternatives: the better and easier it
becomes! You start to realise and understand tricks (quick techniques to help you get
to alternatives quicker). In fact, methods that you can employ time and time again.
We also need self-control to perform well. Within the design sheets sometimes
we need to act quickly and ignore detail, where maybe our tendency would be to
slow down and articulate all the detail. While other times, we wish to speed through,
but we need to overcome our natural pull, and slow down to list all the ﬁnite detail.
When we work on a problem for a long time, we can easily get distracted. Our
computer or smart phone sounds and we need to check that email! However it may
be better to continue with the project that we are doing. Self control also takes much
energy. It is often difﬁcult to resist temptation to switch tasks and check that email.
It is difﬁcult to stop having another coffee break.
3.11
Thinking, Problem Solving and the FdS
In this chapter we have thought about problems and how there are different types
of problem. We have looked at ill-structured and well-structured problems and
presented ideas of convergent and divergent thinking. But why is this relevant to
the FdS methodology? Hopefully, it is clear! That by understanding the type of
question that we have, and different ways to think around the problem, we will
be better at trying to answer them. By discussing different theories and views
on problem-solving, we will have more knowledge to tackle different types of
problems. Probably the challenges that we will be facing are ill-structured (at least
to some extent) and that the very nature of these types of challenges requires us to
be creative in our solution-ﬁnding. They will probably have an aim, yet we will not
necessarily know all the parts (in advance) and so will need to use lateral thinking
to enable us to ﬁnd suitable solutions. We need to apply divergent thinking, as well
as convergent thoughts, to get creative ideas. When we have looked at one type of
problem, and then do it again we may be able to use similar techniques to the next
problem. The skills and ideas that we have discovered one time (when developing a
suitable interface) will be useful to help us develop the next. The feedback that we
have gained from building a data-visualisation tool will be useful for us to apply for
the upcoming tool.
It is also clear that we need to work hard at improving our skills. We need to
persist in our learning, such that we get better at thinking though problems; get
better at crafting solutions. We need to apply our thinking to the problem and persist
with the goal of ﬁnding solutions; even when it seems impossible that a solution will
be found. Through hard work, persistence and re-working we will be able to create
new, and useful, solutions.

80
3
Thoughts, Ideas, Problems and Solutions
3.12
Exercises
The purpose of these exercises are to help you think through problems, especially
think divergently. The ﬁrst two activities can be done alone, whereas the last exercise
is best done in a group. Divergent thinking is the process of generating a range of
creative concepts by exploring various possible solutions. One of the challenges is
that it is often difﬁcult to know where to start, and some people ﬁnd it difﬁcult to
consider a range of possibilities.
Ex. 3.1 —
Thinking divergently
For the ﬁrst exercise you will need a pen, a blank sheet of paper (printer paper
will be ﬁne) and a countdown timer (e.g., you could use your mobile phone or
online application). Set it to 1 min countdown. Make sure that you have a pen that
ﬂows easily and you can write quickly. The aim of this exercise is to help you think
divergently. Prepare the sheet of paper by folding it in half, along the centre of the
short edge. You now should have a folded sheet of paper that is long and thin. Put
each of the answers down a new column. Do not look ahead to the next question,
but read each of the questions in turn and set yourself a minute to do the ﬁrst one,
then read the next one and set the 1-min timer again. With each, try to write down
as many answers as you can. Yes, we want lots and lots of answers. You can write a
word, or short sentence for each solution that comes into your mind.
1. Write a list of places where you can eat a hotdog.
2. Write a list of uses for a sheet of paper.
3. Write a list of methods to give someone a bunch of ﬂowers.
4. Write a list of purposes for a pencil.
Now look at all your answers. You should have four columns of different words. We
would expect you to get better as you thought through each word. You may ﬁnd that
you got tired on the last question and struggled to answer it well. This also shows
that you need to rest, and that thinking is actually tiring.
Ex. 3.2 —
Parallel Critique Map
It is often difﬁcult to criticise your own work. But, such that we can learn from our
successes and failures, we need to reﬂect on our own work. However it is probably
one of the most challenging tasks that we will undertake. When faced with this
challenge, many of us will resort to a shallow evaluation, focusing on challenges or
negatives, or being overtly positive without getting into depth or detail. This exercise
is intended to help you recognise a spectrum of strengths and weaknesses and realise
how each are interconnected.

3.12
Exercises
81
You will need a large sheet of paper, or possibly a whiteboard and some different
colour pens. The activity works much like a mind mapping exercise, and it helps
to keep things as visual as possible. Second, you will need a case-study. Think of
a project you are doing at the moment, or a challenge that you are facing. It could
be a programming assessment, or a design assignment, or something of your job.
Quickly choose something now. In this exercise, you will need to consider whether
the aspects are positive or negative, based on the following categories: strength,
weakness, beneﬁt, risk, opportunity, or hazard. We have suggested a colour for you
to use (although you are welcome to use different colours, just make sure they are
distinguishable and that you are consistent in your colour use).
Blue
Strength
(positive)
An aspect of the system that represents an improvement
over alternative systems currently available.
Red
Weakness
(negative)
An aspect of the system that would beneﬁt from further
development, maturation or improvement.
Orange
Beneﬁt
(positive)
An aspect of the system that works ﬁne independently,
but where value could be added through activities, which
you have no control over. For example, an ice-cream
parlour may do steady business during summer, but a
unexpected heat wave could increase demand.
Pink
Risk
(negative)
An aspect of the system that should be ﬁne in normal
circumstances, but could become problematic due to sit-
uations out of your direct control. For example, a system,
which requires access to a dataset, hosted elsewhere that
could go down without notice.
Green
Opportunity
(positive)
An aspect of the system, which is designed to be robust to
future changes, and could be adapted quickly to respond
to new developments or technologies.
Black
Hazard
(negative)
An aspect of the system that works well with the current
state of technology, but is not robust to possible future
changes. For example, something that requires access to
a speciﬁc software version of an API, which may be
deprecated.
1. Spacing them on separate parts of the page, write down ﬁve aspects of develop-
ment that you are most concious of. These aspects could come from any of the
six critique categories; and will be referred to as nodes.

82
3
Thoughts, Ideas, Problems and Solutions
2. Now start to think about all links between these nodes. For example, a strength
created by a speciﬁc visualisation may be directly linked to the risk of an
unreliable application programmers interface (API). Draw lines between the
connected aspects. If the links are one way then add an arrow to the line to
reﬂect this relationship.
3. Consider aspects that you are missing. For each node in turn, ask yourself “if
there are other aspects of the system which are directly linked to this node?” If
there are, they should be added to the paper (in the correct colour to represent
the category of the aspect) creating a new node in the diagram. Again draw lines
between this new node and the others in the current sketch.
4. This process is continued until you believe you have identiﬁed all the important
nodes and links.
You have created a map of the strengths, weakness, beneﬁts, risks, opportunities
and hazards of your problem. Beyond simply identifying the aspects of their system
worth critiquing, you should also now have an understanding of how these items
relate. Nodes that contain many links may be more system critical than others; if
these are currently negative nodes (weakness, risk, hazard) then it may represent
something that needs immediate attention. Furthermore, the direction of links may
demonstrate positive aspects that could be turned into negatives, or negatives, which
may be mitigated by positives.
Ex. 3.3 —
Group exercise on divergent thinking: Locked in a room
The aim of this exercise is to help you to step outside preconceptions. The exercise
“locked in a room” works best with a group of three or more (but less than 10)
participants. The purpose of this exercise is to encourage lateral thinking whilst
working within constraints. You will often be surprised by the range of novel and
creative solutions that someone can come up with to this hypothetical problem.
1. In this activity the group is presented with the scenario of an secret agent waking
up to ﬁnd themselves locked in a room with no memory of how they got there.
Each member of the group is then asked to say one object that is locked in the
room with the agent. Each participant is allowed to say any object that comes
to mind, as long as it is conceivable that the item could be found within a
building. For example, a group of three individuals could say, “chair”, “pencil”,
and “lamp”. These items should all be written up on a board for the group to see.
2. Secondly, the facilitator tells the group that the agent can see a single locked
door. They then ask each member of the group to volunteer another quality about
the room (such as windows, carpet, ﬂoral wallpaper, air-conditioning etc.) Again
these items should be written down somewhere that everyone in the group can
see them.
3. Once these steps have been completed each member of the group is asked
to provide a response to the following two challenges. The group should be

References
83
informed that the winning response will be picked based on the creative use
of the resources (the content) and the environment (the room).
•
The items are actually clues as to how they became locked in the room . . . solve
the puzzle and explain what happened!
•
How can they escape using only the contents of the room?
The facilitator should leave the group with 10 min to devise answers to the
challenges. Each individual is then asked to provide their answers in turn.
References
1. Ackoff RL (1981) The art and science of mess management. Interfaces 11(1):20–26
2. Council D (2007) Eleven lessons: managing design in eleven global companies desk research
report. www.designcouncil.org.uk
3. Crick F (1996) The impact of Linus Pauling on molecular biology. In: The Pauling symposium:
special collections, the Valley Library, Oregon State University
4. De Bono E (2016) Lateral Thinking: A Textbook of Creativity. Penguin. London, England.
5. Dewey J (1910) How we think. D. C. Heath & Co., Boston/New York/Chicago
6. Duncker K, Lees LS (1945) On problem-solving. Psychol Monogr 58(5):i
7. Facione PA (1990) Critical thinking: a statement of expert consensus for purposes of educa-
tional assessment and instruction. Research ﬁndings and recommendations. ERIC ED315423
8. Flavell JH (1979) Metacognition and cognitive monitoring: a new area of cognitive–
developmental inquiry. Am Psychol 34(10):906
9. Gilhooly KJ (1988) Thinking: directed, undirected and creative. Academic, London
10. Guilford JP (1956) The structure of intellect. Psychol Bull 53(4):267
11. Halpern DF (1999) Teaching for critical thinking: helping college students develop the skills
and dispositions of a critical thinker. New Dir Teach Learn 1999(80):69–74
12. Harlow HF (1949) The formation of learning sets. Psychol Rev 56(1):51
13. Hmelo-Silver CE (2004) Problem-based learning: what and how do students learn? Educ
Psychol Rev 16(3):235–266
14. Hoare T, Milner R (2005) Grand challenges for computing research. Comput J 48(1):49–52
15. Jonassen DH (1997) Instructional design models for well-structured and ill-structured problem-
solving learning outcomes. Educ Technol Res Dev 45(1):65–94
16. Kahneman D (2011) Thinking, fast and slow. Farrar, Straus and Giroux, New York
17. Kim KH (2006) Can we trust creativity tests? A review of the torrance tests of creative thinking
(TTCT). Creat Res J 18(1):3–14
18. Morrison RG, Holyoak KJ (2005) The Cambridge handbook of thinking and reasoning.
Cambridge University Press, Cambridge
19. Pólya G (1973) How to solve it: a new aspect of mathematical method. Princeton University
Press, Princeton. Republished 2014
20. Rittel HW, Webber MM (1973) Dilemmas in a general theory of planning. Policy Sci 4(2):
155–169
21. Roberts J (2010) Computer graphics education and the understanding of pixel plot-
ting algorithms
using growth
aggregation
models.
In:
Collomosse
J,
Grimstead I
(eds)
Theory
and
practice
of
computer
graphics.
The
Eurographics
Association.
doi:10.2312/LocalChapterEvents/TPCG/TPCG10/115-122
22. Roberts JC, Keim D, Hanratty T, Rowlingson R, Walker R, Hall M, Jackobson Z, Lavi-
gne V, Rooney C, Varga M (2014) From ill-deﬁned problems to informed decisions. In:
Pohl M, Roberts J (eds) EuroVis workshop on visual analytics, Eurographics, pp 7–11.
doi:10.2312/eurova.20141138

84
3
Thoughts, Ideas, Problems and Solutions
23. Robinson K (2009) The element – how ﬁnding your passion changes everything. Viking
Penguin, New York
24. Shneiderman B (2000) Creating creativity: user interfaces for supporting innovation. ACM
Trans Comput-Hum Interact 7(1):114–138. doi:10.1145/344949.345077
25. Simon HA (1973) The structure of ill structured problems. Artif Intell 4(3–4):181–201
26. Sweller J (1988) Cognitive load during problem solving: effects on learning. Cogn Sci
12(2):257–285. doi:10.1207/s15516709cog1202_4
27. Wallas G (1926) The art of thought. J. Cape, London
28. Weisberg RW, Alba JW (1981) An examination of the alleged role of ﬁxation in the solution
of several insight problems. J Exp Psychol: Gen 110(2):169

Chapter 4
Social, Ethical and Other Considerations
to Interface Design
Abstract Before, while and after putting pen to paper we need to think through
the problem. There are a few very important questions as preparation that we need
to consider: Can you? Should you? What if you? These are key questions that any
software engineer and visualisation designer should be asking. For instance, we may
ask ourselves whether there any ethical implications to developing this software.
What could be the ramiﬁcations of my design? What methodologies are there to
help me work through these questions? We discuss these questions and provide
useful guidelines to help developers produce suitable software.
4.1
Our Self, Our Identity and Foresight
As we think about a problem, sketch different solutions and even build the software,
we should be mindful of any practical and ethical considerations. Not only should
we be thinking critically to solve the problem and ﬁnd a solution or a design that
will ﬁt our needs, but we should think how our software will be considered and used
by other people. In fact, this is why we are doing sketches in the ﬁrst place – we
are making plans such that software can be created. Indeed, software that will be
useful and beneﬁt the user. So, even before we create the software we should reﬂect
on whether we do have the required resources to achieve the necessary outcome.
We probably do not want our software to hurt others, we do not want it to break
any laws, and we do not want the software to insight malpractice in our users. To
understand any ramiﬁcations of our design we need to use our innate human ability
of foresight. We need to predict and analyse the situation to enough detail that we
can understand what implications there could be. Unfortunately, we are not able to
predict the future with certainty. But through experience, by applying our knowledge
of the situation, and employing our understanding of human behaviour we can make
the right decisions.
Humans have the ability to contemplate the past, the present and the future.
We use this information to work through different scenarios and ascertain the
acceptability of each idea. We can imagine in our brain different situations and
outcomes. We can build complex worlds and walk through each scenarios as if it had
actually happened to us. We can also imagine some potential event, that may occur
in the future. We have the ability to imagine various outcomes and conceptualise
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_4
85

86
4
Social, Ethical and Other Considerations to Interface Design
what the world would look like with the choices that we have made along the way.
We can virtually work through different visions. By building these complex models
in our mind, we can work out which of the many potential solutions would be best.
Endel Tulving [10] proposed a theory that describes how we, as humans, have
several memory systems to contemplate the past. Tulving’s theory is that we have
different subtypes of memory, that distinguishes from recalling something that is
familiar, from remembering something that happened to us personally. The three
types of memory are procedural, semantic and episodic, and these correspond
respectively to different consciousness: anoetic, neotic and autonoetic [10].
Implicit memory happens when we recall something without realising that we
have remembered the fact. For instance, we are using procedural memory when
we are apply learned motor skills and when perceiving and recognising objects we
have seen in the past. We are remembering how to do things and our consciousness
is anoetic. Every day we use procedural memory, to help us perform actions without
consciously thinking about speciﬁc actions. On the other hand when remembering
things explicitly we either recall symbolic representations of the world or draw upon
personal experiences. Our semantic memory is long-term and deals with memories
that are not drawn from our own personal experience of the world. For example,
we see colours and work out the names for these colours, or hear different sounds
of letters we associate them with the letters they represent, or when we recall
general facts. On the other hand when we remember events (that we have personally
experienced) we are using episodic memory.
But more than merely remembering facts and events, we have the ability to
imagine new concepts and imagine different futures. Autonoetic consciousness is
the ability that we have as humans to place ourselves in the past, present of future.
We can reﬂect on the contents of episodic memories and can relive past scenarios
and our feelings at the time. This mental time-travel enables us to have future-
vision: not only vision the different scenarios, but reﬂect-upon the plausibility of
each idea and every solution and discern each idea. We can even analyse our
own thoughts (metacognitively) and think about our thinking. Reﬂecting upon, and
making judgements over our own thoughts, such to try to analyse whether we are in
fact being 100% honest with our selves and the judgements that we have made. We
can do this even without needing to build anything, we can do all this thinking in
our minds.
So why are theories of memory and cognition useful to us for planning and
sketching interfaces for the FdS? Well, even before we start sketching we need to
ask whether we are able to create the interface. We therefore need to apply foresight.
And to apply foresight we need to have built (in our mind) a model of how the
world would look like with that solution. We then will need to apply reasoning
over these visions. We have not built anything nor made any sketches, but we have
envisioned the ideas in our mind. In addition, we are making ethical judgements
over the visions, based on our own identity. We as humans are conscious of our own
existence and have an awareness of self.

4.1
Our Self, Our Identity and Foresight
87
The thoughts we have depend on who we are. Our identity is unique. It comes
from our upbringing, experiences and from our genes. Our physical form, our
human makeup determines who we are and how we react to given situations and
stimulus. Sometimes, other people may be able to summarise the traits of our
identity better than we can understand our own characteristics. Other people more
easily understand how we may react in a situation, and what moral standpoint
we would have, better than ourselves. Sometimes it is more difﬁcult to be honest
with ourselves and understand our own idiosyncrasies. That said, we each have
a consciousness and therefore we can be aware of how we make decisions, and
reﬂect on our own standpoints. Maybe we are a person who makes quick and
brash decisions. Or someone who is more concerned with others’ viewpoints
and empathise with other people. As researchers, developers or designers, we are
therefore concerned, not only, with creating visions of the future (in our minds) but
making moral, ethical and foresight decisions over them. We need to empathise with
our visions, such that we can decide how they will be approached and accepted by
other users. We need to project our ideas and feelings onto others, to decide how our
designs and tools will be received.
With the FdS methodology, we suggest that you try to answer, in your mind,
three fundamental questions (see Fig. 4.1):
1. Can you?
2. Should you?
3. What if you?
The ﬁrst question is predominantly practical: “can you”? Can you think up a new
design? Can you build it with the resources that you have? We are considering
whether we are able to make the solution, based on the given information. We should
be able to make a quick (gut) instinct decision over whether it is possible to do it,
with the resources that we have available. The “should you” question now deals
with ethical decisions. We need to apply foresight to our problems and solutions, to
ascertain whether they are morally, ethically or professionally suitable. Finally, the
“what if you” question concerns us with autonoetic memory. We need to provide a
detailed vision of the problems and solutions, and start to imagine what the world
would look like with any (or all) of these solutions. Is it going to be a suitable
product? Is it going to be proﬁtable? Is it going to bring a positive outcome? Would
it (or could it) hurt someone? Could it be misused? etc.
Fig. 4.1 Can you do it? Should you do it? What if you? Use this to think through the challenge
and ascertain whether it is suitable for you to continue

88
4
Social, Ethical and Other Considerations to Interface Design
4.2
Triage: Making a Quick Judgment
At the early stage of decision making and design thinking we want you to think
fast. We call this stage the triage. A triage is a medical term that considers how to
treat patients in order, based on the severity of their condition. We are using the
word triage to decide whether we continue with the design and what impact the
decision to continue could have. It is a quick decision, but it is an important step
in the development of a new idea. Just by doing a little research we may realise
that someone else has done the work already. A quick Internet search may bring
up a highly-cited paper. Is this a show-stopper? Will this stop us from creating
a new program? Maybe someone has recently released an application that does
exactly what we want to do. Will their application affect what we do? Previously
(in Sect. 3.3) we discussed thinking fast and slow. System 1 thinking is implicit and
we are often not conscious that we have made a choice. System 2 thinking is longer,
more time consuming and is more organised. In one respect, we are not asking you
to make an implicit choice over the problem domain, or set of solutions that you
have created. We are, however, suggesting that you make a decision over a few
aspects of the project, within a few minutes.
We are using the word triage here in a non-medical way. Basically there may be
some situations where we can decide that it may not be worth continuing. One such
situation could be that the problem has already been addressed and solved – so we
need not continue. It may be something that is common knowledge. Alternatively
you may just not have the resources available to you at this time, so whatever you
decide to build you would not be able to do so! You need to make a (reasonably)
quick decision. It may be that you will need to do a little research. Find out, using an
Internet search for instance whether there are similar ideas in the public domain. Or
ask someone who you can trust, for their opinion. Within a few minutes of searching
on the Internet, you should be in a good decision to decide whether it has been done
before, if it is novel, or whether it is worthwhile continuing on with the project,
or adapting it in some way At this stage, it will be impossible to make a complete
search of the literature, especially one that has been done within a few minutes. And
it is clear that you will not be able to make a certain decision that no other work
had been done, or that the design world work, etc. But you will be able to take a
quick judgement on the problem domain and question to hand and an idea of the
suitability and potential of individual solutions.
So how do you make a quick decision? What do you need to think about?
The more experience you have, the better and quicker you will be at making this
decision. As you get to know the literature, domain, previous research, previous
designs, current thinking in the subject etc. so you will be better at making these
judgements One of the challenges with this type of decision making is that it needs
to be practised The more often you do a triage the better you become. Nurses in the
accident and emergency room, who need to perform the medical triages, are better
when they have seen a similar case before, or have performed many exercises [3].
Through experience they know what to ask of the patient and how to ascertain the

4.2
Triage: Making a Quick Judgment
89
real problem, and whether is is a medical emergency or something that can be
treated more slowly. They can drill down faster into the ideas and concepts that
help them make the decision effectively and correctly. Nursing educators talk about
active learning. They also suggest using think-aloud, as a strategy when learning.
Where the leader expresses their thoughts aloud, as they perform the actions and
make decisions. Think-aloud can be useful, especially in a mentor/mentee situation,
where the mentor verbally expresses their your thoughts are the decisions that they
are making, and why they are performing a particular action. As you talk aloud, you
make explicit and clear to others, how you are thinking and how you are making
decisions as you try to solve the problem.
Let us consider a situation, whereby a second year computing major student
meets with their project supervisor. The student has a visualisation design idea for
their individual project. The meeting could go like this:
Professor: Good morning Fred.
Fred: I have an idea to visualise data within a square. Each square is within a
smaller one.
Professor: Ok, let’s do a design triage and I will talk-aloud as I do it.
Professor: First, let me load a search engine and do an Internet search for
“square visualization”. If we start by this type of search, we can get an
idea of the work other people are doing. Well the results show two types
of answer, the Cubism.js JavaScript library, and also the Wikipedia page to
the computer graphics Diamond-square algorithm. But, this is probably not
what you were suggesting.
Fred: Here is a quick sketch of my idea. [Professor loads another window and
performs another Internet search]
Professor: It looks like you want to visualise hierarchical data. I will open
another tab and this time search for “square hierarchical visualisation”,
We can see that other researchers have made various visual depictions,
most focus around the Treemap idea. Looking down the top 10 results,
we see results for “Treemaps for space-constrained visualisation of hierar-
chies”, “ordered treemaps”, “squariﬁed treemaps”, the Wikipedia page on
“Treemapping”. [Professor opens a new tab and does the same search for images]
Professor: Let us have a look at the picture results, because this gives us a
quick idea of what the designs look like. As I scroll down the page it is
easy to notice that the ﬁrst few designs focus on the treemap idea, then the
lower designs start to concentrate on the depiction of hierarchical data. We
start seeing pictures of trees and other images that demonstrate hierarchy.
As we look down we also see a summary picture. Clicking on the link
then connects to the IEEE digital library and a review paper on hierarchical
visualisations. Take a look at that survey paper and see how your idea ﬁts
in with the prior work.
Professor: Also as part of the triage process it is good to know that you have
the data to hand. What data were you thinking to visualise? Do you have
the data already stored?

90
4
Social, Ethical and Other Considerations to Interface Design
Fred: Yes, I have the data already downloaded onto my computer. I was going
to use the data from the National Student Surveys over the past four years.
For each year there is data for more than one hundred Universities, and each
University has tens of departments. With each department having individual
results.
Through doing a quick Internet search and looking at a few websites we have
a good idea whether the concept is novel and what other people have done. Expe-
rienced researchers would know of the Treemap concept and probably squariﬁed
treemaps [2]. And it was quite quick to ﬁnd the survey paper on hierarchical
visualisation techniques [8]. Fred, in the scenario, now knows that he has to look
at the survey paper and work out how his idea would ﬁt in with the ones that have
already been published. He would also be able to look at the Treemap design and he
would also need to look at different layout algorithms (such as slice-and-dice and
squariﬁed).
We can also reﬂect on the results and especially the type of the information that
we have just found. By making judgements over the types of data that we retrieve
gives us an indication of (say) the maturity of the ﬁeld. Maybe we can also guess to
the quantity of funding that the ﬁeld receives or even how the public views the topic.
To make explicit this idea, let us consider a scenario. A surveyor prospecting for oil
may say “we need to get the lay of the land”, meaning that they need to ascertain the
general situation and how features are organised, such to perform the right action. In
oil and gas prospecting there may be general features on the landscape that indicate
oil may be underground. Or we may know something about the land already. For
instance, we may know that the area is known to have porous type rocks, such as
sandstone or limestone where oil and gas could reservoir. There may be other crude
oil pumps (commonly known as nodding donkeys) already strewn in the landscape.
Seismic surveys may already have taken place and some mapping of the geology of
the region. Test drill holes would tell us something more about the land.
Metaphorically, Professor and Fred, in the above example, have looked at the
landscape, and have made discoveries that tell them how the topic lays. The results
from their Internet search has given them a set of indicators. For instance, the
discovery of a state-of-the-art paper suggests that the area is maturing. It signiﬁes
that there a sufﬁcient examples to provide the need for a review paper, and especially
that there are enough complexities between the techniques to necessitate the need
for a review paper that would be able to discern and discuss the advantages and
disadvantages of each technique. If the subject was not mature, or that there were
only a few ways of doing something, then there would be no need for a review paper.
Additionally, the existence of a Wikipedia page can help to give an indication that
the work has a better visibility in the public domain and that it has perhaps been
widely accepted.
Indicators are not perfect. We are making assumptions and quick decisions over
the subject area. But they do help us to make a quick triage decision. Fred (in the
above example) can now study more about the different techniques. He may wish to
look at some speciﬁc designs in more detail. He now has a better understanding of

4.2
Triage: Making a Quick Judgment
91
the ﬁeld. He also knows whether to continue with his design idea, or do something
different. It may be that implementing a treemap would be a suitable exercise for
his assessment. Although the Professor, along with the student, may decide that Fred
should focus on another idea, and think again what his project would be.
We do not prescribe how the triage should be done. Certainly an Internet search
would be one way to achieve the triage, but asking another person is another way to
achieve a similar result. The goal is to get a quick understanding of the domain,
the challenges that may unfold and whether there could be a suitable solution.
We do acknowledge that doing a triage, at the very beginning of a project, can be
challenging. And it is exceptionally clear that it is impossible to ﬁnd all the pieces of
the puzzle. But the point of the exercise is not to gain all the detail, but to understand
the lay of the land. Understanding the domain in this way provides us with better
knowledge. We then have more information, such to make better judgements of the
three questions: can you, should you, and what if you.
Earlier we mentioned that it is sometimes easier for other people to understand
your identity. It is often easy to deceive ourselves, or convince our mind to interpret
the results in a way that suits our purpose, or that the results of the triage are not
relevant for us. We choose to understand what we want to. Therefore, we need
to be conscious of this possibility and therefore we need to approach the triage
(and any reﬂection and evaluation) with the right attitude. How we approach the
triage exploration is important, especially we need to be rational and unbiased in
our approach, to get the best understanding.
•
Rational. You need to be logical in our approach and make decisions that will
help achieve your goals. Being rational means that you are logical in your
approach and you are reasoning in an intelligent way. You are reasonable in
your approach and thoughts and are not making irrational thoughts. You are
not making big unreasonable assumptions or denying yourself the truth of the
situation, or deliberately misinterpreting the results such that you get a desired
outcome.
•
Unbiased. You need to try to separate your emotions from the goal and tackle
the problem with an open mind. It is no good going into the triage with yourself
being convinced of a speciﬁc outcome already, then, try to ignore the results
when you do ﬁnd some information that does not ﬁt your views. You would be
deluding yourself of a particular outcome. In another situation, it would be bad
to only look to receive results that you know will support your pre-determined
ideas or views. You need to use your intelligence and be wise as you look at the
problem to hand and do it in an unbiased way.
•
Logical. Understand your ﬁeld and the problem to hand. Make sure you know
where you will look for quick answers. Understand how to analyse the results,
and how to judge whether they are useful. Given the question, your time
allowance, and the situation, how long is long-enough such to gain a good enough
idea of the immediate answers to your questions? What would determine a quick
look for you, and this question to hand? What would be a show-stopper for your
problem (some event or feature that is found in someone else’s work that would
stop you from continuing with this research or development).

92
4
Social, Ethical and Other Considerations to Interface Design
•
Consistent. You should be consistent in your approach. Especially to be fair and
accurate. Each time you do a triage, try to spend about the same amount of time
on the process. Be fair in your treatment of the material and try not to contradict
yourself or your actions.
•
Quick. The idea is that after a short amount of time you should have reasonable
understanding of the domain and the problem to hand. We are not saying how
quick you need to be. Though you need to spend enough time to decide that you
have enough information to make a reasoned decision. Probably about 2–3 min
would be sufﬁcient to understand the relevant information.
•
Realistic. You need to be reasonable in your approach and have realistic goals.
It is clear that it would be impossible to ﬁnd 500 references, or do a complete
survey of all the literature. But it would be possible to gain an understanding of
the main researchers in the ﬁeld, and make an interpretation of the key areas that
you will need to perform further research in a later stage.
4.3
Can You Do It? Resources, Utility, Authority
There are many reasons why you can or cannot do something. We may be think
of the knowledge that we required to perform some act, or the skills necessary to
complete the task. Can we pass the driving test? Can we do well in this exam? We
also may think of the ﬁnances that we currently have. Can we buy this meal out,
do we have enough money? Or we may consider the need of the solution. Can we
do something, and does it fulﬁl a need. Alternatively, we can think of whether we
actually have authority to do the task. Can we build this tool, have we got permission
from our boss to spend the time on this development? We separate these concerns
into resources, utility and authority.
Resources. We need to question ourselves whether we have the right and relevant
resources to perform the task. We can consider resources from several perspec-
tives: Human, technological and innovation and ﬁnancial. Resources can be
personal and are to do with our own abilities and our own skills. Or they can
be technological, where we may be thinking about the necessary hardware that
will be required to perform the software development. Or they may be ﬁnancial,
where we are thinking about the resources from a monetary standpoint.
Utility. Is there a need to tackle this problem? Is there a need for this piece of
software? Is there a need to develop this data-visualisation? Is there a need to
create a new tool in this ﬁeld? If there is no need, then we may need to decide
that it is not worth continuing with the project. However needs change, and it
may be that we decide that in the future there will be a need. Subsequently we
take a risk, in developing the tool and initiating the project, with the hope that it
will be required in the future.

4.3
Can You Do It? Resources, Utility, Authority
93
Authority. Do you have the authority, or permission to solve this problem, or spend
the time on this work. This could be something that dependent on your company,
or it could be that you would be breaking rules or laws of the country. (We will
expand the ethical questions in the section on “should you”, Sect. 4.4).
4.3.1
Can You: Do You Have the Resources?
We can think about the resources as being tangible or intangible. Either something
that is physical and can be easily counted or calculated, in comparison to something
that is virtual, and less easy to calculate or quantify. The quantity of staff that
we have available to help on this project is something that is tangible. We can
easily count the number of staff, and we can calculate how staff numbers increase
or decrease at the company over the duration of a year. On the other hand,
knowledge skills and enthusiasm are all resources that we have available, but are
less quantiﬁable. They are not tangible assets, rather they are virtual. We can use the
grid (Fig. 4.2) as a guide to create a whole series of questions that we can pose at
the beginning of a project.
Fig. 4.2
There are many resources that would enable (or perhaps) hinder the development of
some software. Do we have the human resources, or the required technology infrastructure and
hardware, or the necessary ﬁnancial backing to complete the work?

94
4
Social, Ethical and Other Considerations to Interface Design
•
Can you do it with the people you have?
•
Do you have enough time to perform the work?
•
Do you have the required knowledge in the team?
•
Do you have the skills necessary to complete the job?
•
Do you have enthusiasm to allow you to continue with the work even when it
becomes difﬁcult?
•
Do you have the emotional energy to do all the work necessary?
•
Do you have ideas that can be applied?
•
Do you have energy to and a love for this subject?
•
Have you got the required hardware? Is the hardware available? Is the hardware
powerful enough to perform what you wish to achieve?
•
Do you have the necessary equipment to support your development?
•
Do you have the software (libraries) to complete the work? Do you have the skills
in the software development that are required? Do you have the right software
knowledge?
•
Do you have the available data? Is the data in an easily accessible database? Is
the data cleaned? Is the data of suitable quality and validity? Is the license on the
data suitable for your project? Is the data complex enough to be used in the way
that you hope?
•
Is the branding and respect of the company suitable to market the product at the
end?
•
Do you have the right funds to support the work?
•
Have you protected your ideas? Will you protect your ideas? Are the ideas worth
protecting? Do you have the right infrastructure to be able to sell what you create?
Do you have a marketing team to market your product suitably to receive relevant
revenue.
It is clear that both tangible and intangible resources can be improved. For
example, we can employ another person with the right skills to address a skills-
shortage. We can purchase new computing hardware, such that the program will be
able to operate on faster computers. We can improve the marketing of the company,
such to increase the awareness of the brand. However, each of these ‘ﬁxes’ take both
time and money. It is possible to purchase more hardware, but at a cost. We can get
more people on our team, but recruitment takes time, it costs the company more
money in salaries, and the new person will take some time to settle in and be trained
in the company processes.
Resources are also time dependent. People can leave, and therefore they take their
skills and knowledge with them. Hardware can break down, or become obsolete,
and software can change from (say) being freely available to a paid-for-use model.
Other products and different news events can positively or negatively affect branding
and perception of the company, which in turn affects stock value, and subsequently
the possibilities of loan or grants. Many of these intangible resources are, by their
very nature, difﬁcult to quantify and difﬁcult to predict. Emotions, especially, are
challenging to predict. For instance, students who are driven to a goal, demonstrate
huge energy, and are naturally enthusiastic for the work, tend to perform better.

4.3
Can You Do It? Resources, Utility, Authority
95
Especially when being creative, it is often necessary to do several versions of the
same design. Having positive emotional energy can help drive you on to completing
the design sheets, and be careful over the designs you create. Being persistent in
the design process, and having the right attitude over re-drawing and re-thinking of
what you create is very important.
In fact, the environment that you work in, is also a resource. Working for a
company where the environment has a negative vibe, is not good on performance or
generating quality code. But, working alongside other people who are enthusiastic
and demonstrate a positive work-ethic, can really help that company to become
productive. And to use the small quantity of resources that they may have, to
develop the best possible outcome. Living and working in a situation and with
colleagues where you can discuss the problems that face you, can really help you
think through the problems and ﬁnd ideal solutions. The very act of discussing the
problems with someone else (another like-minded and empathetic individual) can
help you solve your problems. Maybe the other person, you talk with, will not, or
cannot, give you the answer. But merely the act of you articulating your thoughts can
help you work out the answers and the design ideas. Working at a company where
your colleagues are working on different problems, but you are discussing your
challenges with them, can help you develop your own solutions. Working alongside
other PhD students (say) who are also trying to research, and ﬁnd new ideas, delving
deeply into their own topic, can help you work through your own ideas. You can
share problems of structuring the research ideas, learn from their structures and
methodologies, share experiences together, work though and lament over issues
from the University. Therefore the environment is another intangible asset.
Not only is it appropriate to calculate which resources are necessary to complete
the project. But it is also suitable to grade these assets, in order to ascertain what is
critical and what can be ignored or what can be rectiﬁed. The challenge, is that you
need to consider what is critical to the development of the tool, or the creation of
the design. For example, if there is something that is critical to the implementation
of the tool (such as the availability of a software library), yet we know that no such
software library exists, then probably it is not worth continuing with the design study
because we would need to ﬁrst write the software library.
Because resources can improve and degrade, we can consider how they can
change over time. And therefore we need to determine whether something is critical
to the completion of our task at a given time. Obviously the critical nature of these
resources can likewise change. There are certainly many stages from considering
the idea, iterating different design solutions to creating a product or a software
tool. We can determine the required resources at a given time, and for a given
action. For example, through the FdS, we may contemplate three designs. However
only one of these three designs may be possible to be implemented based on the
current resources. One may be too expensive to implement, while another could
be impossible to implement because we merely do not have the skills to build the
solution. We can articulate these questions in the advantages and disadvantages part
of sheets 2, 3 and 4. Also any resource requirements can be discussed in the panel
labelled “Detail” on sheet 5. See Chaps. 9 and 10.

96
4
Social, Ethical and Other Considerations to Interface Design
Consider you wish to build a data visualisation tool for a client to visualise some
of their data. One of the major can you questions that you should ask your client is:
“can you build the tool with the given data?” In fact, it would be beneﬁcial to ask a
more pertinent question: “do you have data that is suitable and available for you to
use in this project?” Additionally, if you are working with a client then one of the
ﬁrst questions you should ask is “do you have the data available to do the analysis
that you wish to perform?” If they do not have the data available then probably it
is not suitable to continue with the task. However, through discussion with you, it
could be that the client wishes to capture the data, as part of the collaboration. You
have the possibility and option to get involved in helping them capture the correct
data. However, the project then changes from a data-visualisation design, into a task
to capture new data.
It is important to realise that while we can imagine that any data could be
captured and stored, in practice it may be a different situation. Let us consider an
example. We know that it is impossible to get the heights of everyone in the world –
there are just too many people, and we would be unable to measure their heights in a
timely fashion. We could decide that the problem is just unattainable and we would
just stop there. However there may be several ways to mitigate this situation:
•
We could use a sample of the population. This would therefore be a simpler
dataset and (depending of the size of the sample) we would probably be able to
get enough money to calculate the heights of the people. In this case, it is clear
that we do not have the full dataset, but we can continue because we would have
a simpler dataset that would be somewhat equivalent. We hope that averages and
statistical measures that we apply would be representative of the full data.
•
Another solution could be to estimate the data. It is suitable in some instances
to deal with estimated data. Obviously the level of suitability depends on the
accuracy that is needed in an interpretation.
•
Finally, another solution would be to create an artiﬁcial dataset. We could apply
a growth model to generate a dataset that is totally fabricated, but it would ‘look’
convincing. The goal would be to generate something that reacts and appears like
original data. Probably it would have real sampled data as input to the model. This
technique also needs to have a suitable underlying model. When the underpinning
model is accurate, and the assumptions made with the model are correct, then the
data looks similar to a real-life or sampled dataset.
Another reason why you may not have the data is that you do not have
permission. This could be because you do not have the right licenses or there are
too many restrictions surrounding the data. For instance, medical data can only be
used by speciﬁc people and for very certain tasks. Alternatively it could be owned
by another company and would be only available for them to use. Another reason
could be that it is too expensive to purchase and there may be ongoing license
arrangements around the data. Subsequently, with any of these reasons it is not
suitable to continue with the task. Without the data it would be difﬁcult to build
a data visualisation tool!

4.3
Can You Do It? Resources, Utility, Authority
97
The question over data availability can also change over time. We can imagine
a situation where the necessary data is not currently available, but the company is
working on capturing and gathering the data on a sister project. It may be suitable,
in this case, to create some demonstration (or test) data, that could be used by the
visualisation design, in the time being. This would allow you to create the designs
and build the tool to work on the test dataset. You can iron out all the problems
before applying your design solution to the real data when it is available. On the
other hand, data that once was available could become unavailable. We can imagine
a situation where a Government changes the laws over data capturing, and perhaps
even change what can be done with the stored data. So on one day, it would be legal
to use some data (captured from your users) and then on the next day it would be
illegal to use this data.
This consideration – of whether it is feasible to continue with the design idea –
draws upon many different aspects and viewpoints. There may be a ﬁnancial
constraint. It may be too costly to take the idea forward. There may be a time
constraint. It may be unsuitable to do the design now, as it is not the right time,
or maybe the world is not ready for the idea. There may be a resource constraint.
You may not have the resources available to complete the project, such as relying
on a code developer, who is planning to leave, or the developer may not have the
right skills and would need to take time to develop those skills (etc.) There may be
other situations where it is not possible to continue with the design idea, and such
a decision depends on many factors, such as yourself, your skills. Your colleagues
(or team) and the capacity, ﬁnances and skills available within the team at this time.
Your company and their goals, priorities and ﬁnances etc.
The idea itself, or at least its novelty, may have a particular bearing on whether
you continue or not. For example, from the triage decision you may realise that the
idea had already been done before. Consequently, it may not be worth continuing.
This may not be a complete show stopper, because it may be possible to consider a
new solution. Something that no one has conceptualised before. Or you may decide
that the process (the act of doing a design) may be more important than its novelty.
You can learn many skills by doing the FdS design process. It obviously depends on
the situation and the reason for doing the task. If you are a student taking a degree
in computing and wanting to perform a ﬁnal year project then the novelty (or lack
of) of the situation may not be an issue. The act of doing the work yourself, may
be deemed to more important than imagining a new idea and creating a completely
novel product.
4.3.2
Can You: Is There Utility?
There are several questions that we could ask, that may help us to create something
that will be useful. Is there a reason for doing the work? Would it beneﬁt someone?
Is there a situation that would be able to use the tool that you create? It may be that
there is a simple reason to create the tool – because someone has asked for a solution

98
4
Social, Ethical and Other Considerations to Interface Design
to be crafted. For instance, you may be a student taking a class in data-visualisation
and have been asked to create a new tool that will display health data. There is a
clear utility for doing this assessment. When you do it, you will get a grade that will
count towards your ﬁnal result. Alternatively, you may want to do the work because
you are hoping that it will be used, or taken up by a company or the user group.
You are prospecting that your solution could be made into a product. In this case, it
would be good to perform some research and explore the cost of similar products, or
you could see what your competitors are doing, etc. Overall, you still need foresight
to decide whether the tool you will create, will actually be useful and be used.
Along with usefulness, another aspect of utility is need. Is there a need, or a
reason for the tool? Is it essential? Here we are thinking about the importance of the
solution. Certainly there may be a requirement to perform well. In some education
classes there is a need to pass the course with a grade of 40% or more. If the student
does not obtain that grade then they need to resit the class. In this situation the
student needs to do well. On the other hand, there may be several reasons why
something needs to be done, or why the tool needs to be created in a speciﬁc way.
Maybe there are requirements that the tool has to function in a speciﬁc way. It has to
involve certain functions, or be developed in a speciﬁc computing language. There
is an obligation to include some functionality or to solve the problem in a certain
way.
Another aspect to utility is want. Do we have the desire and the emotional energy
to create the tool? Do we wish to do the work? Is there a desire for the tool to be
created? If we do not have desire, or if we do not want to do do something, or if
we do not have an inclination for the work, then often we will not do the work. If a
student does not want to study, they then will will not put the effort into doing the
background reading and the research necessary to achieve the results. However, if
you do want to do something then this will help you drive towards your goal. Having
enthusiasm is important in research and development. If you are doing something
that you want to do, and love to do, then you will do it with the right attitude, you
will push through the difﬁcult times, and you will proactively ask for help, and push
yourself to learn. Yes your company may have a new design idea, and yes you have
sketched some designs, but is there a desire to implement it. Is there a vision for
this idea? Yes, you may be a student who is doing an assessment. But do you have
a desire to do well? Do you crave over a good mark, or just want to pass?
4.3.3
Can You: Do You Have Authority?
One of the challenges that we need to contemplate, before tackling any new project
is whether you have the authority to do the work. There are many aspects authority,
we think through three of them. First the mandate and reason over doing the work;
second any infrastructure of license issues that may inhibit you having authority,
and ﬁnally your situation, and whether you have the leverage to complete the work.

4.3
Can You Do It? Resources, Utility, Authority
99
Permission and approval.
It may be that you have been asked to do the work as part of a class, then you
would have been given the authority to do the work. In fact, there is actually a
deﬁnite need for you to do the work. If you do not do the work you will not get
the grade. However, even with this situation – and while there would be a speciﬁc
goal for you to complete – many academics give still their students much freedom
to investigate different solutions and to use various methodologies to create the
work. It is therefore still important to ask yourself different questions. And one
that would be good to ask is “do you have permission and approval to do this?”
We can think about approval during different stages of the design process. From
thinking about the question and the task, to making designs for the FdS, to then
implementing these designs and ﬁnally maintaining the tools. At each stage we
can contemplate whether we have permission and approval to do something.
If you do not have authority to do the implementation, this may not stop
you from continuing, because there may be a need to do the work. Actually,
not having the authority to do something does not necessarily stop you from
creating possible visualisation designs. We can still use our imagination to create
something that has potential. For instance, you may not have the authority to
visualise all data on a network, but you could easily do a design that would
visualise it. If the outcome itself was the design (maybe for an assignment for
a class) then you have met the outcomes and it would fulﬁl the goals of that
task. However you may need to get permission to get the actual data, or do
the implementation. Furthermore permissions can change, for example, when
personnel change or when policies alter in the company.
At the stage of contemplating the original problem or task, it is prudent to
consider authority issues. We can imagine some questions would not be possible
from the very start. Let us think of a situation where you wish to visualise all
phone trafﬁc of people on your network. As a University student you would
not probably have authority, let alone accessibility to the type of data that you
would need. You would not have the permission to get the required data. In
fact, holding such data may mean that you infringe certain laws of the land and
data protection laws could be broken. So, it is probably impossible to request
a visualisation of all phone trafﬁc of people who are on a network unless you
have a police warrant or work for an intelligence organisation. However, may
be we could change the question, and then something similar would be possible.
Researchers have created test datasets from volunteer phone users. Such a dataset
could be used and so we could ask “how can we visualise the test mobile phone
communication data?” In this case, by changing the question slightly we can
overcome the problem of authority.
For the implementation stage, we can imagine a situation where, as part of
an assignment, you wish to put information live on a website. This could be
for a company or for a University. It may be, however, that while you can put
a website online, you do not have authority to edit or change all parts of the
site. Often websites at companies are controlled, whereby they need to meet
company policies, formats and designs. You may be able to change some content,

100
4
Social, Ethical and Other Considerations to Interface Design
but not the design or style of the display. Therefore, for the Five Design-Sheet
methodology, we should ask ourselves whether we have the authority to deliver
the ideas that we are creating. Maybe your solution necessitates you to get the
right permission such to deliver the solution.
Licenses and infrastructure.
One instance where (may be) you do not have permission, is to use other people’s
code and make it out to be your own. Plagiarising code would obviously not be
suitable; probably the course leader would give you a mark of zero. But also in
a company setting making sure you own and have created all the lines of code is
important. Understanding what you own, and what you can use, and what needs
a license to use is useful knowledge. A student writing a report should attribute
the origin of the information. As an academic we should acknowledge image
sources and cite relevant literature. In a company, we should be aware of the
different licensing rules over use and re-use of software libraries, for instance.
Situation and prestige.
Finally, another aspect to authority is situation and prestige. Does the company
you are working for have the respect of the community, such that it would be
possible to sell your idea as a product? Are you in the right situation to do the
work? Do you have full support of the company you are working for? Have you
the eminence to carry the work out? It may be the case that you will need to
partner with a company, or another individual such that you have the right status,
together.
4.4
Should You Do It? – Is It Ethical?
There are many reasons why you should not do something. It could go against your
morals, disadvantage someone else or be unethical. In this section, we are asking
you to be professional. To have integrity. To critically consider different reasons.
We obviously wish you to move quickly onto the ﬁrst design sheet and to sketch
your ideas. But it is worth just thinking through professional issues before you
continue. There are several different strategies that can help you think critically and
logically through the various reasons. The aim of this exercise is to quickly decide
that everything is all right to continue, and that it is going to be something positive
and beneﬁt society in some way.
There are many situations where it would be useful to make deep ethical
consideration of your thoughts, decisions and ﬁnal developed tool. Especially if you
are a student studying on a computer science course, you may be asked to perform a
computing project. In the project one of the chapters, that is often requested, should
discuss ethical and professional issues. If you are studying a course at a University
you may be already be registered for a class on professionalism. For example, to
achieve British Computer Society accreditation on a University course, the Society
asks the Department how the students learn about (and get assessed on) social, legal,

4.4
Should You Do It? – Is It Ethical?
101
ethical and political issues (LSEPI). In fact, the British Computer Society (www.bcs.
org) provides guidance to students and professionals to think through these different
categories.
There are different ways to teach LSEPI’s in an education program. Teaching and
assessment of the concepts of LSEPI could appear within one specialist module,
it could be an integral and required part of your individual computing project,
or the ideas may be interspersed throughout the whole program. As authors, we
believe that it is of utmost importance that you understand and contemplate different
aspects of ethics within computing. We believe that ethics can be applied to all
areas of computing and to all assignments, and suggest that it should actually
be part of every module or subject that is taught. Therefore we would support a
situation, whereby ethics is integrated in every aspect of the curricula. It is possible
to consider ethical considerations within computer programming, design, human-
computer interaction, artiﬁcial intelligence, computer graphics and virtual reality,
web technologies, information visualisation, scientiﬁc visualisation, etc.
•
Computer programming. Would the computer program you develop hurt
anyone? Is the computer program correct? Does it produce the right answer?
How do you know it will produced the right answer?
•
Human-computer interaction. Can people use the interface to produce the
desired output? Does the interface mislead the users? Does it enable the user
to create the right output?
•
Artiﬁcial Intelligence. Will a robot controlled by the AI hurt anyone? How
will the AI decide to make the right decision? Indeed, what would be the right
decision at the time?
•
Computer Graphics. Is the image that is displayed correct, and does it mislead?
Computer graphics have been used with Virtual Reality to produce medical
simulators, so an ethical question would be to decide if the simulator trains the
right skills.
•
Web technologies. As the Internet continues to evolve, so ethical concerns
should be at the heart of every developer. Not only should the site be made
accessible with clear navigation, alternatives for audio and visual content,
documents are understandable (see initiatives such as the Web Accessibility
Initiative – WAI) but the author should hold copyright for the information they
present, keep personal data private, avoid identity theft etc.
•
Information and Scientiﬁc Visualisation. Questions arise such as: does the data
display the information accurately? Does it misrepresent the data, are people
misled?
It is easier to see how ethical considerations can be made in some subjects. And
deﬁnitely some domains have been discussing ethical issues for a long period of
time. This is especially true for the ﬁelds of Artiﬁcial Intelligence and Robotics. We
can easily imagine health and safety concerns for robotic hardware. It is necessary
to design safe-guards into the hardware, such to make sure that the moving robot
does not hurt or crush anyone. These design decisions need to be placed at the very
heart of the design process. If you were to use the Five Design-Sheets method to

102
4
Social, Ethical and Other Considerations to Interface Design
develop a robotic interface, then it is of utmost important that the robot you design
is safe for any operators, and also does not destruct itself (it will probably be an
expensive piece of kit, and you would not want the robot to break itself apart on
the ﬁrst run!) However, at the start of the initial idea exploration phase it could be
suitable to imagine any design, whether or not it would be destructive, per se. But we
would only wish to take designs to completion that were safe and ﬁt for purpose. So,
as a developer you will need to decide when to add or consider safety measures and
to contemplate such questions. On the ﬁrst sheet, at ﬁlter stage, we could ﬁlter out
designs that were not safe. We should also contemplate at the same time as removing
the designs, how the ideas can be changed into ideas that would be safe. You take
one out (ﬁlter something that does not work), but put a corrected design back into
the pool of ideas. In addition, it is suitable to consider these ethical concerns at the
end of sheet 1 – when three ideas are chosen to be discussed and designed in more
detail – you would need to make sure that the design is suitable and is safe for users.
In AI there are many other ethical questions that we could raise. We could ask
moral questions, such as “who would be to blame if the robot does cause injury?”
The software developer, hardware engineer, operator at the time, or even the robot
itself? Who would have permission to override the robot? How does the fail-safe
work, e.g., human intervention, robotic sensors or third-party robot sensing. Are
we able to predict all potential uses of the tool, or all possible outcomes of the AI
algorithms, such to predict how a robot will behave in all situations? In fact, we
believe that each of these issues will become more pertinent in the future.
The area of Artiﬁcial General Intelligence is emerging, where the developed
algorithms are more applicable to a wider set of challenges. In the past AI developers
have created specialised hardware that focus on one type of problem, and specialist
software to perform the calculations. We can consider IBM’s Deep Blue computer
as a good example. Developed by IBM in the late 1960s it was a parallel computer
that was capable of calculating 200 million moves per second, it used a brute-force
approach and so was not a learning system [9]. Although by today’s understanding
of Artiﬁcial Intelligence it was not really an intelligent system, but it still was
capable of beating a chess grandmaster, Garry Kasparov. Even if we admire Deep
Blue’s exceptional ability to play a game of chess, it is unable to play a game of
“go”, solve maze problems, and deﬁnitely is unable to autonomously drive a car
around a city. The vision for researchers is to create a computer that would have
general intelligence. A machine that would be indistinguishable from a human, and
react in a way to convince the user that actually it was a person. We can think of
testing this hypothesis with a Turing test [11]. In fact, Alan Turing rather changed
the question from asking if computers can think, to another similar question, if the
computer can imitate a human successfully. In a Turing Test player C plays the part
of the interrogator who needs to ascertain whether user A or user B is a computer or
a human. The interrogator, however, can only ask written questions, receives written
answers and cannot see the setup of either A or B. He writes:
Let us ﬁx our attention on one particular digital computer C. Is it true that by modifying this
computer to have an adequate storage, suitably increasing its speed of action, and providing

4.4
Should You Do It? – Is It Ethical?
103
it with an appropriate programme, C can be made to play satisfactorily the part of A in the
imitation game, the part of B being taken by a man? Alan Turing [11]
The development towards general artiﬁcial intelligence puts us on a route
towards the potential for artiﬁcial human intelligence. Researchers are trying to
codify self-aware systems. But then we certainly need to contemplate ethics for
robots and AI. Let us consider an example, where ethics for intelligent robots would
need to be applied. Let us envisage a kitchen robot that cooks food. The robot would
have senses to understand the environment, cameras for eyes, the ability to move
freely around the room, can cut up and prepare food and put the prepared food in
the oven. We could teach the robot to choose foods and to cook a ﬁsh dinner, for
instance. The robot would need to make its own decisions of how to prepare the
food, what recipe to follow and eventually put it in the dish and cook it. There are
however, many ethical concerns with this situation. But let us consider a speciﬁc
question: How could we, for example, teach the robot that the ﬁsh on the table is
suitable to be used, but those in the ﬁsh tank are just for observing?
In fact, the area of morals and ethics for artiﬁcial intelligence is a growing and
developing ﬁeld. Popular science has put many of these ethical and AI humanistic
concepts into the public psyche. Several of these ideas have been around in the
literature for many years. Popular science ﬁction writer Isaac Asimov developed
three laws of robotics for his books. These appear in his robot based ﬁctional stores.
(1) A robot must not hurt or injure a human or cause any harm. (2) The robot must
obey the rules given by a human, unless it contradicts with the ﬁrst law. (3) A robot
must protect the existence of itself, unless it contradicts with the second law. While
these ideas are in science ﬁction, there is certainly a serious side to these ideas.
And the morality, and ethics of artiﬁcial computing is becoming more relevant.
In the United Kingdom the Engineering and Physical Sciences Research council
developed Principles for Robotics. They were meant as a set of guidelines and views
for discussion, as follows:
1. Robots are tools that can be used for different purposes. They should not kill or
harm humans, except when used in interests of national security.
2. It is humans who are responsible for the robots. The robots must comply with
existing human laws, rights and freedoms.
3. Robots are products that should be created such to keep their own safety, and be
secure (e.g.,) from hackers.
4. Robots are manufactured, and we as humans need to be clear, and able to
understand what their original purpose was: their machine nature must be
transparent.
5. The person who has legal responsibility for the robot should be clearly attributed.
Much the same way as we own a car, so we may think that there could be a
registered owner of a robot.
Internet and Web computing are other areas where ethics have been discussed and
contemplated in great detail. As the Internet continues to evolve researchers realise
that there is a ﬁne line between (say) marketing to try to attract someone to your

104
4
Social, Ethical and Other Considerations to Interface Design
site and tricking someone to visit your site. Issues such as phishing of personal data,
or spamming of emails are areas for concern. Especially, with the global growth
of the Internet, and the always-on society that we live in, it is exceedingly easy to
download software from the Internet. Some of this software will be free to use (and
Open Source) while other tools can be downloaded that are not freely available,
not free to use, and should be paid for use. Another growth area (and equally area
for concern) is the ease at which assessments can be downloaded from the Internet.
With so many essay banks, it is also easy to purchase some work and use it as
your own. However, we need to ask ourselves whether this is professional. Essays,
and assessments are designed to improve skills. Therefore, if we want to learn and
develop our own skills, then we need to question ourselves whether this practice is
suitable for our own development. In addition, by doing so, we are misleading the
University or College over our abilities and skills. We need to search our own minds
and ask ourselves if these such actions are suitable, positive and whether it would
make our company, college or university proud of our work.
Being professional, moral and following good ethical practices, is something
that should appear in every topic. And permeate throughout all your life and be
a signiﬁcant part of all your computing activities. We can merely look at the
computing organisations for their ethical guides, to give us advice of how we should
behave in the world of computers. Organisations such as Institute for Electrical
and Electronics Engineers (IEEE), Association for Computing Machinery (ACM),
Association of Information Technology Professionals (AITP) all have code of ethics
or standards of conduct. The ACM guide [1] was adopted by the ACM council
in 1992 and therefore has a long history within the society. Their general code of
conduct is split into four parts: (1) general moral conduct, (2) speciﬁc professional
responsibilities, (3) imperatives for leadership and (4) compliance with the code
itself. Part four deals with membership of the ACM, and being a responsible
member, subsequently we focus on the ﬁrst three sections of the code. This Code
and the supplemental Guidelines were developed by the Task Force for the Revision
of the ACM Code of Ethics and Professional Conduct, copyright Association for
Computing Machinery, as such we include the headlines unchanged in the text
below:
1. General moral conduct
(a) Contribute to society and human well-being.
(b) Avoid any harm to others.
(c) Be honest and trustworthy.
(d) Be fair and take action not to discriminate.
(e) Honour property rights including copyrights and patent.
(f) Give proper credit for intellectual property.
(g) Respect the privacy of others.
(h) Honour conﬁdentiality.

4.4
Should You Do It? – Is It Ethical?
105
2. Professional responsibilities
(a) Strive to achieve the highest quality, effectiveness and dignity in both the
process and products of professional work.
(b) Acquire and maintain professional competence.
(c) Know and respect existing laws pertaining to professional work.
(d) Accept and provide appropriate professional review.
(e) Give comprehensive and thorough evaluations of computer systems and their
impacts, including analysis of possible risks.
(f) Honour contracts, agreements, and assigned responsibilities.
(g) Improve public understanding of computing and its consequences.
(h) Access computing and communication resources only when authorised to
do so.
3. Leadership
(a) Articulate social responsibilities of members of an organisational unit and
encourage full acceptance of those responsibilities.
(b) Manage personnel and resources to design and build information systems that
enhance the quality of working life.
(c) Acknowledge and support proper and authorised uses of an organisation’s
computing and communication resources.
(d) Ensure that users and those who will be affected by a system have their needs
clearly articulated during the assessment and design of requirements; later the
system must be validated to meet requirements.
(e) Articulate and support policies that protect the dignity of users and others
affected by a computing system.
(f) Create opportunities for members of the organisation to learn the principles
and limitations of computer systems.
While these codes are useful and they can provide us with a set of guidelines that
we can reference, they are not a panacea. There may be situations where they do not
provide guidelines nor do they include an answer to our particular situation. Making
moral and ethical judgements is being professional. We have a responsibility to live
ethically in our modern world and make our own decisions, which should respect
ourselves and others. While these lists are comprehensive, we do acknowledge that
it is difﬁcult to create a list of shoulds and should nots. In fact, we believe that the
codes should not be a set of rules. Rather we feel that the codes must be understood
and internalised into our own moral critical decision functioning.
Because, in this book we are focusing on developing sketched plans to develop
computer software, we must mention the Software Engineering Code of Ethics
and Professional Practice [5]. Again this list has a wide set of considerations,
from (1) acting in the public interest, (2) acting in a manner that is suitable for
client and employer, (3) ensure products meet highest professional standards, (4)
maintain integrity and independence in their own professional judgements, (5)
managers should subscribe to and promote ethical approaches to their management,
(6) software engineers should advance the integrity of their profession, (7) be fair to

106
4
Social, Ethical and Other Considerations to Interface Design
colleagues, and ﬁnally (8) participate in life long learning and professionalism. We
refer the reader to the online guides and lists of these codes of ethics.
For our case of the FdS, we will focus on the morals of creating an artefact
Speciﬁcally, artefacts and outputs are included in part (3) of the Software Engi-
neering Code. In our case, our artefact is a suite of design sketches. These designs
will be used by yourself or someone else to develop an appropriate tool. Therefore,
our designs need to follow professional practices and be of the highest quality. We
should ensure that (especially in the ﬁnal realisation sheet) are artefacts and tools
that are actually achievable. Keith Miller [6] presents ﬁve rules for creating moral
and responsible computing artefacts. Especially when creating any computer tool,
we have a moral responsibility to create artefacts that are correct (to the best of our
knowledge), positive, and helpful. With our sketches (from the Five Design-Sheet)
method we have a responsibility to make sure that these are correct, clear and useful.
We also need to take ownership of these artefacts and be answerable to them. With
this in mind, we adapt Milner’s ﬁve rules to the outcomes of the Five Design-Sheets.
Rule 1 As designers and developers of the Five Design-Sheets we have a moral
responsibility to create clear and usable designs. We are responsible for the
artefacts and for foreseeable effects of that artefact
Rule 2 Whatever role you play (from designing, implementing, deployment or
using) you need to take individual responsibility, be moral and professional, and
make sure that you are doing your role with professionalism, upstanding morals
and due care and attention. Shared responsibility must be made, meaning that
you can not lower the value of your moral compass just because more people are
included in the process.
Rule 3 Users and adopters of your designs need to take on moral responsibility
themselves. The developer (interpreter of the designs) cannot only blame the
designer, they need to take responsibility too.
Rule 4 Developers and designers need to take responsibility for and understand the
environment where the tool could be deployed. Being professional means that
you understand the sociotechnical system where the tool will be deployed.
Rule 5 You need to be honest, and deﬁnitely do nothing to deceive users about the
results, potential of your artefact, possible side effects, or the (sociotechnical)
environment where the system will be potentially deployed.
4.5
What If You? – Any Ramiﬁcations?
Would there be any ramiﬁcations (either positively or negatively) with your design?
Many of the tools that you build (if you are building some computer software) would
be used by people, so we need to consider how they would feel, and how they would
be effected by our decisions. We do not want to build something that would insight
violence, or encourage someone to be immoral. The FdS is a plan, and we need to
make sure that our outcomes are appropriate, ﬁt for use, and appreciated by humans.

4.5
What If You? – Any Ramiﬁcations?
107
We need to consider, among other things, the appearance of the work, how the tool
will be used, how it could be used, how it will effect people etc. We are not only
focusing on issues but we are considering the implications of using the tool when
it has been built. We are using foresight to ask the question “what ramiﬁcations are
there when my product has been built and is being used by other people?”
We can consider several types of responses. There is probably a business
response and set of questions, such as how does the business beneﬁt, is there a
need, would a proﬁt be made? There would be a human emotive response, such as if
the user likes it or not, and whether it is usable. Thirdly, there is also an environment
response, would it be sustainable, would it be eco-friendly?
4.5.1
Business Response: Is There a Product?
We can imagine someone speaking. In our mind we se a manager saying to a product
designer: “so you want to make this design, and build the product; so where does
it ﬁt with our business?”. We could imagine that the manager then goes on to ask
many other questions: Is it part of our core business plan? Is there a need for it?
How will it ﬁt in with our product line? What other competitors are there? How
much will it sell for? What is the expected proﬁt? Depending on your reason for
doing the design, you may think that these are (or not) valid questions and may be
sensible for you to ask. If you are a student, then the whole reason for you to do the
work for an assessment would be to get the grade. Then each of the grades count
towards your ﬁnal qualiﬁcation. But even within this situation, the teacher and even
when the setter of the task has made-up the scenario, these questions are relevant.
It still may be sensible to ask these business type questions and play-along with the
scenario.
Let us give thought to an example scenario. Consider you are developing a
visualisation tool to display personal health tracking information. The tool would
collect data from a wrist-band, store it on a remote server and then provide a
dashboard visualisation of a user’s health data. A user can also add the types of
food that they have eaten, and the system automatically calculates the quantity of
calories that were consumed per day.
We can think through this scenario using different management tools. One useful
strategy is to perform a Strengths, Weaknesses, Opportunities and Threats (SWOT)
analysis. The SWOT values are placed in a table and enable you to consider different
problems and opportunities. We can use this type of thinking in the design process
to help us initiate new designs, or to help us decide which design we should take
through to the realisation stage. If we can argue that our design is different to others,
and that there is an opportunity to do something new and that our ideas are new, then
this will (hopefully) create a product that is novel, in comparison with competitors.
Let us walk through the health tracking scenario.

108
4
Social, Ethical and Other Considerations to Interface Design
•
Strengths. It is clear that there are already several companies capturing and
analysing health and sporting data. So we would need to ask several questions,
such as “how would your solution be different?” “What makes your dashboard
design unique?” We are using foresight here to imagine what our tool or product
would look like and then how it would be different to current solutions. Thinking
about the potential strengths of the tool can help to create something that is
different.
•
Weaknesses. One clear weakness to this proposal is that the health market is
already awash with many different trackers; there are already many companies
doing similar things. So the challenge would be to create something new.
Something that was better than competitors. Perhaps the focus here is to create
a new dashboard, which can add in extra information (such as health and dietary
facts). Perhaps you can turn a weakness into an opportunity
•
Opportunities. While many companies have developed digital health applica-
tions with tracking dashboards, there could be an opportunity to do something
different. So the next question should be, “what are those opportunities?”
•
Threats. Not only is there threats from current companies creating similar
devices and applications, but there are potential future threats – new companies
are coming up with better ways to monitor and track health information.
There are different forces that pull and push on ideas and products within a
company. Perhaps you cannot get the raw materials necessary to build the product –
this will in inhibit your company from creating them. Even if there is a market for
the product, and people are crying out for the item. If you cannot make it, you cannot
sell it! Maybe at the other end, there are rivals that mean the market is swamped by
that product. Yours will just be another item in on a shelf. What makes yours stand-
out? What makes your product special? Why would someone buy your product, and
choose yours over another? Michael Porter’s ﬁve forces analysis [7] (Fig. 4.3) allows
you to think whether it is beneﬁcial to continue with the idea, by thinking through
these different forces. In one way, it is similar in functionality to the SWOT analysis,
because it helps you think logically through a set of criteria However, Porter’s ﬁve
forces focus on business threats and opportunities. To achieve this analysis you need
to think about different aspects of suppliers and buyers and then about substitute
products or ideas.
•
Entrants. Consider if there is threat of new entrants. Is there a threat that a rival
will be able to develop the tool before you? Can they get it to market quicker?
•
Substitutes. Think about the threat of substitutes (something that is similar in
concept to your idea). Perhaps another company is developing something that is
different but fulﬁls the same end-goal, and ﬁts with the same set of users. Maybe
people, work environments or products are changing such that there is no need
for your product (in the future). There may be room for only one product in the
market place. Or perhaps you may consider that there the market would be able
to sustain many such products.
•
Suppliers. Next consider the bargaining power of both the suppliers and the
buyers. What do you rely on? Is there anything that your product requires to

4.5
What If You? – Any Ramiﬁcations?
109
Fig. 4.3
Porter’s ﬁve competitive forces. Consider the competitive nature of your company or
product, by considering the threat of new entrants, the power of buyers and of suppliers, and threats
of substitutes being created
work, that comes into your company? E.g., can you get the raw material supplied
at the right cost, or is there enough supply? Are there potential issues or pitfalls
with supply?
•
Buyers. Is there demand for the product? Is it needed? Are there buyers willing
to purchase it, at the price you wish to sell it at?
Another method that could be useful is to consider who, what, where, when and
why (Fig. 4.4). The ﬁve W’s strategy starts by considering who will use the tool and
how they will use it. This information should start to frame your ideas sheet (sheet
1). In many of these W’s there are different interpretations of each of the w words
that can be considered. Just by considering the word who, we can think about the
person who is using the tool (i.e., current users), or someone who will be using the
tool in the future (i.e., potential users), or people who are not using the tool (i.e., non
users). By thinking through these different temporal concerns, we can think about
different aspects of the the user themselves. Additionally, another aspect could be
roles. We can consider not only who is using the tool, but who asked for the tool,
or who is going to develop the tool. For example, by considering the roles, while it
may be possible to require the tool (the manager asked for the product) it may not
be feasible or even possible to build the tool (the developer cannot create it).

110
4
Social, Ethical and Other Considerations to Interface Design
Fig. 4.4
Consider any
ramiﬁcations using the ﬁve
w’s mnemonic. Who, what,
where, when and why
Who. Who is the product for? Who has asked for it? Who is the customer? Who
will be using the designs? Who will be creating the designs (yourself, someone
else, a group of people)?
What. What is the task? What is it trying to solve? What is the person asking for
the task is expecting? What constraints are there on the design? What resources
are available? What resources could become available in the future? What data is
there to visualize? What does the data look like? What resources (time, money,
people etc.) do we have to design it?
Where. Where will it be used? Where is it expected to be used? Where will it be
located when it is used? Does this location bring any constraints or issues that
we need to design for? Where are the resources that we need to use, such to build
the tool? Where are the users?
When. When is it needed by? When will it be used until? When are the resources
available to build it?
Why. Why is it needed now? What incentives have happened to make this happen?
We acknowledge that there are other strategies to get you to think about the
implications of your work. And to consider whether it is actually worthwhile you

4.5
What If You? – Any Ramiﬁcations?
111
continuing with this challenge. For instance, problem solving strategies such as
Bono’s six thinking hats [4], could be used to help you think through the challenge
from different perspectives. His six thinking hats is a method of parallel thinking,
which enables groups to plan the consider the process in a practical way. Different
colours are aligned to different humanistic traits. Therefore the methodology can be
used to think through the problem from different viewpoints. Blue is management
which seeks to look at the goals of the challenge. White is information and facts.
Red takes an emotional look at the world. Black applies logic and reasons to be
cautious. Yellow is optimism, and seeks to identify beneﬁts and works to harmonise
discussions. Green, seeks to provoke and seeks to follow thoughts through.
4.5.2
Emotive Response: How Will People View It?
Because you are probably designing a product, the product will affect human
beings emotionally. Users will naturally make an emotive response, they will look
at the designs and instantly form opinions over the design styles, the look of the
designs, and also the functionality and concepts that are they contain. It is therefore
worth starting to consider how the product idea will be used, by whom and what
environment it will be used within. We will consider this information in more
detail, while we go through the individual FdS sheets. But there are some important
contextual considerations to be made at the outset of any project. Which provide
an emotional response. We want people to love your designs, to empathise with the
concepts, and to draw alongside you to agree with your ideas. We need to consider
how we can be persuasive, without contradicting or challenging your morals, and
keeping your ﬁnal designs ethical.
This ﬁrst attitude, in essence, is being professional. If we are professional in our
conduct then we are more likely to be trusted and consequently our work will be
believed. If we are positive about our design ideas, and encouraging of the ideas
that we have created, then naturally other people will act similarly. We could also
say the opposite: that if you are not positive about your ideas, then who else will be
be encouraging of them? If we see the potential of our own sketches, then we should
be able to win other people over with our ideas, even if the quality of the sketching
is poor. Obviously we should not delude ourselves, we need to be realistic over the
ideas that we have created. But if we have been professional in our conduct, diligent
in our research, careful in our sketches, then the results are created to the best of our
ability, and therefore we should be proud of what we have created.
Another aspect is that you should consider is to be neat and tidy. We are not
saying that your drawings need to be exact and artistic, rather we are saying that
your works need to clearly demonstrate that you have spent time and effort on them.
If the designs look-like they have been created quickly, with little thought and in a
few seconds before you met with your client, then probably other people will not
have much trust over them. Likewise, it is usually clear to a teacher how much effort
has been put into the assessments. It is usually clear to give a good mark, because the

112
4
Social, Ethical and Other Considerations to Interface Design
work is comprehensive, complete, rigorous, sensible, consistent etc. In other words,
all the i’s have been dotted and the t’s crossed, and that you have paid attention to
the detail.
Understanding your audience is obviously necessary for you to create the right
emotive response, and such that you can create a set of sketches that will be accepted
by others. You need to be able to empathise with your client, or work out what
style and what aspects are important to your teacher. Ascertain what requirements
have been requested. You also hope that the speciﬁcation of the assessment (or
task) contains enough details of the task. Requirements also may come indirectly.
For instance, a company may have a design policy that will put requirements on
any product. There may be a set of rules for application development that must
be followed. There may be a language policy, that stipulates all products need to
support multi-languages. We suggest that you make a list of these requirements and
make sure that you tick them off when you have completed them. Also, you should
review them at the end to make sure that your work includes all the required parts.
When you are doing the sketches for the FdS reﬂect on your work, and try to project
how your client (or teacher) would view your work. By doing this, you will keep
being professional, and keep your focus on a high quality output. Think through
questions, and reﬂect how the user (or assessor) will view your work. How would
they react to your work? Is it clear? Does it contain acronyms that only you know
about? Is it complete? Does it follow necessary conventions? Does it look good? Is
it neat? All these questions can help you reﬂect on your work make something that
is professional, of high quality and generate a positive encouraging response from
the user or viewer.
4.6
Thinking Through Issues, Use an Acronym!
One of the challenges with ethics is to contemplate all the issues. In practice it can
be difﬁcult to make sure that you have covered every idea, and thought through
all the ethical and moral issues. In fact, how can we make sure and prove to your
line-manager, or teacher, that you have considered ethical questions in great detail.
Indeed, you may need to demonstrate that you have been comprehensive in your
approach, write it in your project portfolio. The best strategy is to follow a known
strategy. In fact, there are several acronyms that can help you contemplate moral
and professional issues. We have already mentioned the British Computer Society’s
Legal, social, ethical and professional issues (LSEPI). But there are many other
acronyms that can help you comprehensively contemplate all the issues.
Acronyms such as PEST provide a useful framework. This acronym helps
you consider in turn Political, Economic, Socio-cultural and Technological issues.
There are many similar mnemonics that can help you think through these issues.
LONGPEST adds Local, National and Global Factors to the PEST list. Add Legal,
International, Environmental and Demographic issues to PEST and you end up with
the PESTLIED acronym. A further acronym, STEEPLE is useful (in particular)

4.6
Thinking Through Issues, Use an Acronym!
113
because it includes a wider set of dimensions: Social, Technological, Economic,
Ethical, Political, Legal and Environmental. In our examples we use the STEEPLE
acronym with the Five Design-Sheet methodology (see Fig. 4.5). Consider the
following:
•
Social. Would the tool or design have a positive impact on society? Does it help
develop a good lifestyle or enhance safety? Does it discriminate?
•
Technological. Is the technology required, can current systems be used just as
effectively?
•
Economic. Is it going to be too expensive? Does it have a positive economic net
gain? Is it going to be proﬁtable?
•
Ethical. Is it Utilitarian? Does it follow Intellectual Property agreements and
practices. Is it being moral, and following best practice within the domain. Would
it throw the business reputation into disrepute?
•
Political. Are there any trade regulations, safety or employment rules that would
be broken because of this design?
•
Legal. Are you following laws appropriately? Such as health and safety, con-
sumer protection, discrimination and copyright/patent laws.
•
Environmental. Are there any situations where policies such as waste manage-
ment could have an impact in the design. Does it, or can it, use eco-friendly and
green products?
Each of these acronyms are meant to help you consider the issues. They act as
mnemonics to provide a useful strategy. We suggest that you either work through
the concepts in list, putting each word at the top of the page and list (in a bulleted
list) words or short phrases that address that issue. Or draw a spider diagram of
professional issues (may be those that fulﬁl and those that do not) each of the
STEEPLE categories.
For each of the areas of concern (social, technological, economic etc.) there are
also two viewpoints for each of these words. First, think of these issues in terms of
the personal standpoint. This is the should you question. In other words, how do
these issues affect you? Second, think from a projective point of view. This is the
what if you question. So think how your actions and decisions would affect other
people. We can therefore ask questions such as “how could these issues affect other
people or future users of your system?”
Let us re-consider the example where we are developing a visualisation tool to
display personal health tracking information. In this tool, the data is collected by
the user from a wrist-band device. This information could be stored on the wrist-
band and then loaded to a laptop or desktop computer, or could wireless technology
connect directly to a mobile phone to store the data on the app, and connect to the
server to store the information on the user’s proﬁle. A website would then display a
dashboard visualisation of a user’s health data.
As a developer we should think through social, technological, economic, ethical,
political, legal and environmental issues of this problem. By doing this analysis will
be able to consider different designs; hopefully the design ideas we create will be
ethical, legal and perhaps they will be environmentally friendly.

114
4
Social, Ethical and Other Considerations to Interface Design
Fig. 4.5 STEEPLE acronym. Think through each of the issues, asking yourself whether these you
should do it! Try to think about serious risks or critical issues that would inhibit you implementing
the solution or people using your designs

4.6
Thinking Through Issues, Use an Acronym!
115
Can you?
What if you?
Social
Can we analyse all people’s data to gain
an understanding of health? Because the
application is collecting personal data,
what do I have to share with other peo-
ple?
How will other people use the data of
an individual user? Is there an oppor-
tunity to share different people’s data,
maybe anonymised? When other people
use the tool will they be able to see
many people’s data results, can we make
a competition from exercising?
Technological
Do I have the required environment to
develop the tool? Can I use the hardware
that I have to code the work? Is there a
risk that a larger company will be doing
something similar in the future, do I have
the edge now? What are the technologi-
cal issues of operating a wrist-band and
relying on a user having a mobile phone
or computer to connect the data to?
Will other users have the necessary hard-
ware to run the application? Is there a
risk that the hardware will change in the
future? Am I relying on software libraries
that will continue in the future, especially
if another developer takes the project
over?
Economic
Have I paid for the required develop-
ment licenses? Do I need to purchase any
licenses to deliver the work? Are there
any patents that I need to be aware of?
Would there be any ﬁnancial costs in
the future because of my development?
How would the app make money for the
company?
Ethical
How is the data stored? What rules do
I need to follow that govern the storage
of personal data? Am I abiding by these
rules?
If we discover health issues, and potential
life-threatening conditions, what is our
position about telling the person? What
end-user license will I need? Will users
be able to download their own data?
Who owns the data, the company or the
individual? What safe-guards will be in
place governing the analysis of personal
information?

116
4
Social, Ethical and Other Considerations to Interface Design
Political
Health data may be useful for gov-
ernments or regional government, what
is the standpoint of the company for
publishing such information? Could the
information be passed onto the authori-
ties?
Will the application promote speciﬁc
policies (such as healthy eating cam-
paigns by governments) will it be biased
to one viewpoint? Will alternative strate-
gies be shown to the user?
Legal
What laws govern the saving and storing
of personal health data? How do I make
the users aware over the laws and how the
data is to be stored and processed?
Is there a risk that the law will change,
and impinge on the functionality of the
tool?
Environmental
Is
the
application
environmentally
friendly? Will it encourage people to be
friendly to the environment? Is there a
risk that my development will harm the
environment?
If other people took over the develop-
ment of my application, will they under-
stand the sustainable features that are
integral to my development? Is there a
risk that many people using the applica-
tion will be detrimental to the environ-
ment?
Often businesses use these analysis techniques to consider future business oppor-
tunities of a company. We are using them here to consider different dimensions;
such to make a triage decision of whether to continue with your design. It may not
be suitable or possible to do a complete STEEPLE analysis. There could be many
unanswered questions at this pre-consideration stage of the design. Many of these
questions would be answered, or even perhaps ignored, as a result of the design
solution that is generated.
We do not suggest that a huge amount of time is spent on doing a STEEPLE
analysis – because we wish you to quickly get to the design stage. However it may be
at least good to make certain that you have considered legal and ethical issues of the
design build. Especially if you are using the FdS to design and plan a software tool,
then it is imperative that your development is professional. Considering the ethical
nature of your design is therefore of high priority. You would need to consider
aspects such as Intellectual Property, conﬁdentiality of any data used, data privacy,
liability, risks of software not working, conﬂicts of interest and the fairness of the
product that is going to be produced.

4.7
Exercises
117
4.7
Exercises
Ex. 4.1 —
Can you do it?
In this exercise we will get you to consider different aspects of why it would be
possible for you to do your task. If you have something that you wish to build or
design, then brilliant. You can use that idea. However, if not, then use one of the
following ideas. But do remember that these tasks are merely exercises. So, you if
you are choosing one of these challenges then you will need to imagine different
answers. In other words, you will need to role-play the questions.
(i) Design a new bag for a small tablet computer. Consider that you have a small
tablet that is about 7 in screen. It needs to be portable, carry a charger, be able
to take it with you to (say) a conference of meeting. Is safe for your tablet and
yet would ﬁt into a larger laptop bag.
(ii) Design a computer game that is both fun and educational for Science Technol-
ogy Engineering and Maths (STEM) subjects.
1. Consider the most critical aspect of your design. Write down things that you
think are critical. E.g., Is there something that you need that you don’t have
access to? Do you have a developer who can code and program the solution.
Do you have access to someone who can fabricate a prototype?
2. Think about other factors, such as ﬁnancial constraints. Is it ﬁnancially
feasible? How much could it cost the company? Would it bring money into
the company?
3. Think about time constraints. Do you have a deadline? Can you do the work
in that time? What is important to achieve by a certain date?
Ex. 4.2 —
Should you do it?
For the second exercise you should think about the moral standpoint, in particular.
We suggest you use the STEEPLE acronym to ask yourself questions, whether there
are any reasons that you should not continue.
1. Write the letters for STEEPLE (Social, Technological, Economic, Ethical,
Political, Legal and Environmental) on the side of a blank sheet of paper.
2. Now consider aspects of the project for each of these words. For example,
beneﬁts for you and beneﬁts for others. Or critical issues for you and critical
issues that your work would have for other people.
3. Reﬂect on your notes and see if there is any major aspect that would stop you
from continuing. Try to think if there is a work-around, or way to overcome this
situation. You may wish to re-visit these exercises after you have sketched each
sheet. Often some ideas may become infeasible, or may start to impinge on some
of these issues listed under STEEPLE.

118
4
Social, Ethical and Other Considerations to Interface Design
Ex. 4.3 —
What if you?
In this exercise you will consider different ramiﬁcations. Under the ﬁve w’s try to
consider what and who would be disadvantaged or would beneﬁt from your work.
Hopefully your work would beneﬁt society in a good way, and be advantageous to
your company or organisation.
1. Take a blank sheet of paper and a pen. Draw a line vertically to separate the page
into two parts. On the left hand side of the page write down the words Who,
What, Where, When and Why. Make sure that they are placed evenly down the
left hand side of the page.
2. Consider implications of your idea for each of the ﬁve w’s. Write negative
ramiﬁcations on the left hand side of your vertical line, and positive on the right.
3. Reﬂect on these notes. Consider if there are any aspects that would be of
disadvantage people or have a negative impact. Identify also aspects that would
have a strong impact. These strong aspects would be things to make sure that
you cover in your design sketches, especially on sheet 1.
References
1. Anderson RE, Johnson DG, Gotterbarn D, Perrolle J (1993) Using the new ACM code of ethics
in decision making. Commun ACM 36(2):98–107
2. Bruls M, Huizing K, Van Wijk JJ (2000) Squariﬁed treemaps. In: Data visualization 2000.
Springer, Wien, pp 33–42
3. CiofﬁJ (1999) Triage decision making: educational strategies. Accid Emerg Nurs 7(2):106–
111
4. De Bono E (2009) Six thinking hats. Penguin, London
5. Gotterbarn D, Miller K, Rogerson S (1999) Computer society and ACM approve software
engineering code of ethics. Computer 32(10):84–88. doi:10.1109/MC.1999.796142
6. Miller KW (2011) Moral responsibility for computing artifacts: “the rules”. IT Prof 13(3):57–
59. doi:10.1109/MITP.2011.46
7. Porter ME (1980) Competitive strategy: techniques for analyzing industries and competitors.
Free Press, New York
8. Schulz HJ, Hadlak S, Schumann H (2011) The design space of implicit hierarchy visualization:
a survey. IEEE Trans Vis Comput Graph 17(4):393–411. doi:10.1109/TVCG.2010.79
9. Seirawan Y, Simon HA, Munakata T (1997) The implications of kasparov vs. deep blue.
Commun ACM 40(8):21–25. doi:10.1145/257874.257878
10. Tulving E (1985) Memory and consciousness. Can Psychol/Psychologie Canadienne 26(1):1
11. Turing AM (1950) Computing machinery and intelligence. Mind 59(236):433–460

Part II
Prep

Chapter 5
Sketching Design Skills
Abstract Sketching is a powerful technique. Just the act of putting pen to paper,
and working through many different design concepts helps you to work through the
ideas in your mind. The sketches act as mini plans. They help you iron out some
glitches before you spend time (and even waste time) to build the solution. It is an
important part of the Five Design-Sheets (FdS) method. While sketching is a useful
tool many users do, however, say that they cannot sketch. Sketching is a skill and as
such can be improved through exercises. The sketched sheets in the FdS are used to
help you plan, they are not meant to be works of art! This chapter presents sketching
as a tool for design planning, explains the sketching method and what resources you
will need and explores techniques to improve your skills of sketching for design.
5.1
Sketching as a Way to Plan
Sketching designs has been used as a planning strategy for many years. Various
creative industries use sketching as a way to explore and possibly reject different
possible solutions. Architects or product designers work through several design
alternatives. Sketches are used to explore the design space, much as the same way
that we are suggesting to explore the design space of computing and visualisation
interfaces. There are many reasons for using sketching. Tovey et al. write:
[designers use sketches to] generate concepts, to externalise and visualise problems, to
facilitate problem solving and creative effort, revising and reﬁning ideas. Michael Tovey
et al. [6].
Industries such as product design, graphic design, fashion, ﬁlm makers and
architects all use sketching as a way to explore possible solutions. For example,
Steven Heller and Rick Landers [1] provide an insight into the practices of 50
designers. They all keep a sketch book and pen with them at all times, such that
they can capture their thoughts whenever and wherever they are. From books such
as these, it is clear that there are different styles and several ways to sketch the
designs. Many use pen and ink, others use pencils. Some use colour, while others
just black and white. Some are bold with clear distinct lines, while others contain
many faint lines.
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_5
121

122
5
Sketching Design Skills
In computing and interface design sketching has been less formally used. While,
for example, interface builders have used sketching to plan their ideas, they have
not followed a particular method. This is where the Five Design-Sheet method
steps in. The FdS provides a structure for you to follow, it is less ad hoc. Interface
designers and programmers will make plans, and do in fact often sketch simple
designs. It is easier to think through something graphical (an interface) by using a
graphical representation (a sketch). It is much harder to write down notes of what
the interface would look like. Additionally, the result of sketching becomes a way
to communicate. It is easy for an academic or teacher to draw on the board some
pictures, to explain how an algorithm works. It is good for students to make sketches
of what they want to build, to show to their mentors. It is easy to sketch a note to
make sure you remember your brilliant idea, just before you fall to sleep, such that
you can recollect that idea in the morning. In our journal paper on the FdS we write:
Sketching designs has been shown to be a useful way of planning and considering
alternative solutions. The use of lo-ﬁdelity prototyping, especially paper-based sketching,
can save time, money and converge to better solutions more quickly. However, this design
process is often viewed to be too informal. Consequently users do not know how to manage
their thoughts and ideas (to ﬁrst think divergently, to then ﬁnally converge on a suitable
solution). We present the Five Design Sheet (FdS) methodology. The methodology enables
users to create information visualisation interfaces through lo-ﬁdelity methods. Jonathan
Roberts, Christopher Headleand and Panagiotis Ritsos [5]
We provided an overview of the method in Chap. 2. Remember, for each project
we will use ﬁve sheets of paper and you will sketch your ideas onto these sheets.
Sheet 1 helps you think through the task and initiate many different design ideas.
Sheets 2, 3 and 4 focus on three principle designs, while Sheet 5 allows you to focus
on one design, and plan the idea in more detail.
5.2
But I Cannot Draw!
It is clear that not everyone likes to sketch or draw. You may be someone who says
“I cannot draw”. However do not worry. You can use simple geometric shapes such
as lines, rectangles and circles. You just need to put quick lines on the paper, such
to get across the ideas that you have in your mind. Your sketches are not meant to
be ﬁne works of art, or exact pictures. The lines and marks on the page are meant
for the purpose of communicating and recording your ideas.
There are a few reasons why people say they cannot draw. First, it may be that
when they were young they had a bad experience in their art class in School. They
may have even been told explicitly that they were “no good at art, yet they excelled
at sports”. Second, sometimes they are their own worst critic. It is as much of an
internal battle, as it is to put pen to paper. This battle can play havoc with conﬁdence.
The lack of self conﬁdence can lead to people not being able, or not knowing
where, or how, to start. Following from the self-critic problem, other people struggle
because they label their drawings. For example, someone may wish to draw a cup.

5.2
But I Cannot Draw!
123
They realise they are drawing a cup, and so label their drawing (in their mind) as a
cup. Again the critic inside speaks up and suggests that it is not a good cup, and so
they lose their conﬁdence. Usually, the picture is actually good enough. It is suitable
for the purpose of recording the concept.
We are all different and you may be more or less familiar with, or skilled at
sketching. Or in fact, frightened of sketching. We want to provide some guidelines
and some simple tasks to help you improve your sketching abilities. In this chapter
we cover some simple techniques that will help you sketch to the best of your ability,
and follow some exercises to enhance your skills. We do believe that the more you
sketch the better you become. Whatever age you are, situation you are in your life,
if you have been told that you cannot sketch, or if you have been doodling all your
life, everyone can improve their sketching abilities through practice. We want you to
develop your own style. It is clear that we have our own style of sketching. However
you need to ﬁnd a style that works for you. We do encourage you to look to online
classes. There are many online videos, tutorials or classes that you can view for free
or for payments. Most of these will follow a particular style or topic. For instance,
we have seen online classes on storyboarding, journaling, landscape sketching,
cartooning etc. While many of these are slightly off-topic, we do encourage you
to follow some that interest you. They will increase your conﬁdence in sketching,
give you new techniques and help you develop your skills.
It does not matter that your sketches do not look like works of art, in fact they
serve a bigger purpose: that they record ideas, you can use them yourself to explore
different possibilities, and ﬁnally that you can use them as a device to communicate
your ideas. Rather, turn any negative thoughts around and start saying that “I can
draw”. We believe that everyone can draw, it just takes time and effort to master
the skills. In fact, drawing and sketching are skills. The more you do, the better you
become. So, when you are doing these sketches and contemplating different designs,
think positively. It is an enjoyable experience.
There are other beneﬁts to drawing. In fact, recently there has been a resurgence
of colouring books, especially for adults. Colouring has been presented as being art
therapy. Whether it is actually a therapy is another matter and there is much debate
in the press whether it is or is not actually a therapy. Certainly colouring can be fun,
and we agree that it is therapeutic and can help wind-down and de-stress at the end
of a long day. However, what we are proposing is different. It is you who create
the drawings. Your pictures are new and original, you are doing more than merely
colouring-in other peoples’ art or patterns.
The sketching medium we are advocating is physical. Pens or pencils are natural
tools (because we have learned to use to them through childhood). It is easy to draw
simple charts, lines arrows and other drawings (see Fig. 5.1). They are familiar to us
and they are relatively cheap and widely available. Because, as kids, we are trained
how to hold a pen and pencil. Therefore they are convenient for us to use and explore
different ideas.

124
5
Sketching Design Skills
Fig. 5.1 It is easy to sketch
different ideas. They do not
have to be complex or exactly
drawn. Their purpose is to
communicate your ideas.
Examples of sketching data
visualisation solutions are
shown
5.3
Getting a Kit Together
So to get started, we encourage you to gather a kit of resources together. In short,
you will require some pens and paper. We suggest that you use A3 paper (ISO 216
standard paper sizes) or Ledger/Tabloid paper sizes (ANSI/ASME Y14.1 standard).
The larger piece of paper will enable you to have a little more space to be creative
and to focus on the ideas rather than worrying how your ideas ﬁt onto a page. A3
scanners are also becoming more readily available, and therefore it is possible to
scan the whole page to store an electronic version. The scanned images can easily
be scaled down to create and share A4 or US Letter size pages of your design sheets.
It is equally possible to sketch directly on A4 or US Letter sized paper (and probably
this format is more readily available) you just have to be a bit neater, to use the space
efﬁciently.
We also encourage you to use drawing paper. While drawing paper is more
expensive it is usually acid free, thicker and longer lasting, etc. Acid free paper
has a basic pH value, such that it lasts longer and does not fade or colour with age.
However we have had successful results with cheaper A3 printer paper. Although
one problem with using cheaper paper is that it is usually thinner, and if you draw
multiple lines (on top of each other), or use water colour pencils, or ink wash to add
colour and shadows then the paper will tear, hole or buckle.
Use sheet paper, rather than bound sketch books. It is not only convenient to
put all the information together but it is sensible to do so. The single sheet can
be scanned and easily shared. You will end up with ﬁve sheets of paper full of
sketched designs. We do acknowledge that, in some cases, it may be useful to use
more physical sheets. Especially, we can imagine using more pages for sheet 1.
Especially when you have lots of alternative ideas that need to be whittled down
into a few ideas, it seems sensible to have more design sheets. We have experience
of using several physical pages to explore different ideas. In fact, we encourage you
to think through many different possible solutions at the beginning of the process
and reﬁne them. So, the quantity of sheets (at this outline stage) should not be a
limiting factor.
We suggest that you use permanent, pigment ink that is water and fade proof,
which is sometimes named Indian ink. Get yourself some black drawing-pens. We

5.3
Getting a Kit Together
125
also suggest that both the ink and the paper are acid free, such that the sketches will
last longer, be light safe, and provide a more permanent record of your designs. Use
pens, rather than pencils, because they provide a permanent record of your ideas.
We actively discourage you from using pencils, because the temptation to erase
the drawn pencil lines is very strong. You could use pencil to draft the sketches
and then use black ink to make them permanent. But again we discourage this
practice. We want you to be conﬁdent and to sketch the ideas straight down on paper.
Fade-resistant drawing pens will enable the document to last longer. Such pens are
affordable and would improve the quality of your work. Maybe your sketches only
will have a short life, however if the sketches are shown to light over a few weeks –
and you have used non-light-fast pens – they may fade and change colour. The ink
type can impact on the style and appearance of your drawings.
Some ink is water-soluble which can be drawn and then watered down later.
These water soluble pens can create a beautiful artistic effect. The pen line can
be brushed with clean water, make an ink wash effect. However, if you use the
black outline (in water soluble ink) and then later add a further colour wash to add
subtle effects, where the colour you are adding is water based, the results can be
problematic, because the inks will run into each other. When doing the artwork in
this book we have used permanent black markers to deﬁne the edges and water based
ink to create the colour wash effect (using water soluble ink pens). Ink washes can
be used to make shadows or add subtle effects to the drawings. We will talk more
about ink washes in the section on effects Fig. 5.7.
We know that some people say that they do not like pen and ink drawing. The
problem may be that they are reluctant, or hesitant, to start drawing. Probably they
would want to use pencils instead. There are certainly many reasons to use pencil,
and we ourselves have used them in the past to plan out drawings, make outline
marks and guides. Then use drawing pens to go over the lines and rub out the pencil
lines at a later stage. However, often the problem becomes that some people end-up
spending all their time putting one line onto the page and rubbing that same line
out. We want you to be bold and courageous to put lines down onto the page in ink,
in one go. This does require that you use a little foresight in your mind, to envision
what the object would look like, and plan the scale and outline of what you wish
to express in your mind ﬁrst. And it also does mean that you will make mistakes
in ink and these ﬂaws will be permanently on the page. But, this is also the point!
Your drawings act as records of your thoughts, including all your mistakes. All your
sketched faults should be kept (including any outline and idea stages of the process).
They act as a history of your thoughts.
To emphasise our point of being courageous and directly sketching lines on the
page, we ask you to perform a simple exercise. First look for a suitable object to
copy. A pot plant or a branch of a tree, something that is natural, makes a good
starting study. The aim of this ﬁrst exercise is to keep looking at the object and draw
it on your page with a continuous line. You should keep your eyes on the subject
as much as you can, and also keep the line on your page continuous as much as
possible. Deﬁnitely you will make mistakes, you may not go back to the same point

126
5
Sketching Design Skills
Fig. 5.2
Sketches of a stem of variegated ivy. A continuous line is drawn, while looking
constantly at the plant. Try not to look back at the sketch itself, rather focus your eyes on the
object that you are drawing. The original ivy leaf is shown top left, with three different attempts at
the continuous line study
again, you may walk your pen around and it may not look good. It will probably not
look the same as the plant that you are trying to draw. But when you have ﬁnished
you will have some lines on your page that look leaf-like and stem-like.
Figure 5.2 shows three versions of a continuous line study of variegated ivy.
That is, ivy which has a two tone green. The picture shows that the variety had a
lighter (nearly yellow) colour on the outer part of the leaf, with a darker green in the
internal part. It is clear that there are mistakes with our line sketch. Lines go over
each other, the leaf is not completed in some cases, while other leaves overlap. But
it is still possible to tell that they are leaves, and that they probably are a variety
that is variegated. In the ﬁgure we show a photograph of the piece of ivy that we
were sketching for the ﬁrst two line studies. Two of the sketches have a border
added and are coloured with water-based ink wash. The border further enhances the
sketches, by enclosing them. The title (in the ﬁnal picture) gives it a sketched journal
appearance.
It does not matter if you make a mistake, in fact we want you to get to a stage
where, when you sketch a wrong line you are able to adapt this error, and make it
an important feature of your sketch. You therefore include the problem in the design
that you are making. You turn your error into an integral part of the sketch, or into

5.4
Pens, Ink and Colour Washes
127
something new. These errors can also help you consider new ideas. When you have
done a mistake you should consider “how can I adapt the design to incorporate this
error” or “can I leave it”, or “how can I use this problem as a way to spark off a
new idea?” Obviously it does depend on where, and on what sheet, the error occurs.
On the ideas sheet (Sheet 1) we can make the error a new idea, or change it. While
on Sheets 2, 3, 4 and 5 you will have more text, where you may make a spelling
mistake or write the wrong word. In these cases it is better to merely put a single
line through these mistakes. Do not do a school-kid error and scribble lots of lines
over the error. This not only draws attention to the error but it looks messy. Merely
cross out the problem word with one line through the middle.
5.4
Pens, Ink and Colour Washes
There are many different types of pens and pencils that could get. All the major
pen manufacturers make drawing pens, they may be named different things, though,
including drawing pen, ﬁneliner, pigment liner, sketching pens or technical drawing
pens. They come as individual pens or a set, in a range of sizes including 0.05, 0.1,
0.2, 0.3, 0.4, 0.5, 0.8, to 1.5 mm, (see Fig. 5.3). It is also possible to get a range
of colours, including blacks, shades of grey and sepia. You may already have your
own preference. But, we suggest that you purchase (at least) two black fade-resistant
drawing pens, of sizes 0.5 and 0.8 mm. In other words, one that is smaller and
another that is slightly thicker. The thicker pen can be used to deﬁne boundaries
and emphasise parts of interest (because it will create a darker line). Whereas the
thinner pen can be used for hatching and more subtle lines. Many earlier drawing
or technical pens were ﬁllable pens with an ink reservoir. With these technical pens,
the nib is a very thin tube, with a thinner inner needle. They can create very thin and
Fig. 5.3
By using thin or thicker pen nibs, you can create different effects. Thicker pens can be
used to highlight, whereas detail can be easily created with thinner nibs

128
5
Sketching Design Skills
precise lines, also they can be used with a range of coloured and types of inks.
Before the rise and availability of cheaper disposable technical pens, we would
certainly have recommended them. However, now there are many excellent (and
cheap) technical pens and would recommend these instead.
There are different ways to add colour. We encourage you to purchase a few
coloured pens. We suggest that red, blue, green and yellow pens would be useful.
We are not suggesting a huge kit of lots of pens, because we do not want you to get
distracted by the medium and/or waste time choosing colours or rubbing out ideas.
Rather we wish you to focus on idea creation and the generation of the different
concepts. But we do suggest that it would be useful to add a few colours to your
sketches. A little colour can help to brighten up your designs, clarify some concepts,
and can highlight different parts. There are several ways to add colours, including
using:
Everyday felt tips. Cheap felt tip coloured pens can be used. While they are easy
to purchase and do not cost very much, they do dry-up quickly. So, throw away
your old cheap felt pens and start with some new ones. There is nothing more
frustrating than trying to use felt pens which are dry. Another disadvantage with
these pens is that they fade over time, it is also difﬁcult lay down a large block of
one colour that appears smooth and even. The problem is that the ink dries fast
and each stroke is often noticeable on the page, appearing as individual lines.
Another issue is that blocks of bold colour can bleed through the paper easily
and it is also easy to make holes in the paper by colouring over the same part too
much. However, some nice effects can be achieved with these types of pens and
often they are ﬁt for purpose.
Alcohol markers. Cartoonists, illustrators, card makers and scrapbookers often
use alcohol markers. The pens produce translucent ink on the page, such that the
colour becomes more bold with the more strokes. Colours can be mixed and it is
possible to create large areas to be uniformly and consistently coloured, with no
noticeable brush stroke. They are obviously more expensive than the everyday
felt tip pens. But will produce a higher quality, consistent and uniform result.
Manufacturers produce these pens in hundreds of colour tones, and because it
can be difﬁcult to understand what to buy it may be good to purchase tone packs,
which consist of sympathetic pen colours, such as warm summer, cool winter or
light skin tone tones. Blender pens allow the colours to be mixed and lightened.
An acrylic block can be useful to mix the colours, or you can colour a patch of
colour onto the acrylic block and use the blender marker to pick up the pigment
to draw lighter shades onto your work, which can create gradation or lighting
effects. But, these pens work best on bleed-proof paper. Various thicknesses of
bleed-proof paper are available. With the thin paper you will not be able to use it
for any water-based inks or paints, because it will wrinkle.
There are several brands of alcohol markers and hundreds of colour shades can
be purchased. It can get very expensive to buy a large colour range. Enthusiasts
purchase special boxes or wallets to hold and organise all their pens. The markers

5.4
Pens, Ink and Colour Washes
129
come in a variety of sized nibs, from ﬁne, paintbrush to chisel nibs. Some
varieties can be reﬁlled, and even new nibs added.
Colour pencils. Colour pencils can be very effective. They are easy to carry, do
not dry out, can be readily sharpened, and subtle effects easily added. If colour
pencils are your choice, then we do suggest you get a good quality set. Go for
an artists set of pencils, rather than everyday pencils. They will be smoother to
use, and produce bold, consistent colours. Cheaper pencils are more brittle and
we ﬁnd that it is more difﬁcult to use them to get a good quality ﬁnish.
Water soluble pens. With these pens water can be used to thin the pigments or
spread the pigments already on the paper. Different techniques can be used.
Either the coloured pens can be used throughout, where the black pen is used
to deﬁne outlines (however with this method, care needs to be taken if water is
added to the picture, because all the colours will wash). Another method is to
outline the objects in water-resistant ink (i.e., using the drawing pens) and then
using the coloured pens. Finally, (and our preferred method) is to ﬁrst draw the
images with the drawing pen, put the pen ink on an acrylic block, and lift the
colour off the block with a wet paintbrush, to wash the colour onto the page.
This method produces lighter and more subtle colours in the page. We show it in
the centre sketch on Fig. 5.4.
Watersoluble/Watercolour pencils. Water soluble pencils can be useful. This
technique is easy to master and the page can be coloured in dry, and at a later
stage a wet brush can be used to smooth over the coloured areas to create
watercolour effects. Either colour in the areas using the pencils, or use the wet
paintbrush to pull out the paint from the drawn lines. One of the challenges with
this medium, though, is that the underlying pencil strokes can be still seen when
the paint is dried.
Other watermedia, including watercolour tubes or pans and water-based
acrylic gauche. There are many other types of watermedia products. Traditional
watercolour painting is where the pigment is suspended in water, they are
translucent colours and hence colour can be painted on top to make the deeper
colours. They come wet (in tubes) or dry in pans; more expensive artist grade
paints contain more pigment and quality mostly goes with price. We do not
recommend watercolour paints for these drawings. While they could be used,
we feel that it will take too long to paint the whole design and they need more
practice to achieve good results. Other mediums such as water based acrylic
gauche paints are also available. These create strong opaque colours. Again,
while they could be used, we think that they are not suitable for our purpose,
because they take too long to dry, and it is more difﬁcult to lay down smooth and
continuous bold colours, without it looking blotchy.
As with any new tools, colouring using alcohol pens or ink wash (for instance)
takes time to practice. When you start, it is often difﬁcult to get large bold blocks of
even colour and mistakes will happen, but persist and ﬁnd what works for you. When
you are adding colour to enhance your sketches, we encourage you to do it fast. We

130
5
Sketching Design Skills
Fig. 5.4
There are many different ways to add effects and colour to your sketches. From water
everyday felt tip pens, to water soluble pencils, water based felt tip pens, to using ink washes. Each
of these different mediums have their advantages and disadvantages
do not want you to spend too long on these effects, rather you need to concentrate
on the ideas. However, some colour can enhance the picture, changing it from a set
of lines into an actual object. For instance, putting a little blue, makes an uneven
circle into an island. Putting some shadow on a circle makes it into a sphere. Also,
if you ﬁrst lay down a black border, it can be effective to not necessarily to paint the
whole inside of an object. Indeed, it may appear more effective if the colour bleeds
over the boundary of the object, or leaves some uncoloured areas.

5.4
Pens, Ink and Colour Washes
131
When you are using watercolour pens or any watermedia, you will need to use
a brush, a pot of water and a towel. Many artists are starting to use water brushes,
where water is contained in the body of the brush and can be squeezed out. However
we prefer to us a high quality traditional style brush. For any watermedia we highly
suggest that you purchase a sable paint brush, or a brush with sable mixed with
another ﬁbre (such as camel hair) or synthetic sable. The advantage of these brushes
are that it is easy to create a point in the brush shape, there are no stray bristles and
they hold the water (and pigment) well. With cheaper brushes it is difﬁcult to create
a point on the brush (which is needed to colour in small areas) and difﬁcult to get a
ﬁne point. You will (probably) only need one brush, it will last for a lifetime so it
is better to get a more expensive brush with higher quality bristles. For its size, we
encourage a sable size eight brush.
Some people ﬁnd watermedia difﬁcult to use, especially you need to wait for
the water/pigment mix to dry and if it is not try then it can be easily smudged.
In addition, there are many different techniques that could be used. We present
several techniques that each could be useful, depending on the equipment you have
available, see Fig. 5.5.
Watersoluble pen techniques. With watersoluble pens you can put the pen down
onto the paper, and then use a wet paintbrush to colour in the centre. This gives
the edge a bold colour, and the centre is lighter. Another method is to use a
waterproof marker (i.e., drawing pens that we have mentioned before) to make
the outlines. Then a small amount of watersoluble pen can be added in the
contours. A wet paintbrush can be used to mix the colour. This gives a bold
ﬁnish to your sketches. However, be careful not to put too much water on the
brush (use a cloth to take off the water) otherwise the pigment will wash and it
will run out of the contours you have drawn. And it can be difﬁcult to mix the
pigment well, and you may ﬁnd that the line of the drawn pen can still be seen.
The way the pen holds to the paper, and how it can be mixed thereafter, depends
on the type of paper that is being used. It is better to use watercolour paper, in
this case, because it will be tougher and control the water better.
Ink Wash techniques. Ink wash is our favoured method. Again we are using
watersoluble pens, but instead of drawing the ink directly onto the page we draw
it onto an acrylic block. We lift the colour from the block onto the paintbrush. It
helps that the paintbrush is sable, as it will lift the pigment better than cheaper
brushes. You need to be careful that there is not too much water on the brush.
Therefore when the paint is lifted onto the brush it is best to wipe off most of
the water/pigment mixture before using it on your work. It is deﬁnitely a skill to
learn, but we have found that it creates the best colour on the page, and it is easy
to ﬁll in the borders. Also, it allows us to put subtle effects on the page, rather
than putting colour everywhere.
Watersoluble pencil techniques. There are a few techniques. Using only water-
soluble pencils enables everything to be washed, and all colours merged.
However we do not think that this produces neat colours Another way is to use
the pencils to draw outlines. Then pull the colour away from the edges with a wet

132
5
Sketching Design Skills
Fig. 5.5
In this study we run through a few techniques that may be useful to add colour to your
sketches

5.5
Why Is Sketching Useful?
133
brush.This is better, but neighbouring colours will run into each other when wet.
Our second favoured method (for sketching and visual design) is to outline with
a black pen, then scribble lightly with the pencil a few coloured lines and then
wash the colour together. Sometimes, however, the original watersoluble pencil
line can still be seen. But this has the advantage that the colour can be added and
then water applied at a later stage.
Watercolour techniques. There are many watercolour techniques. We do not
suggest using techniques such as wet-on-wet, but one way is to use a lot of
pigment with little water. This produces a bold colour that is suitable for these
design sketches. However, another way would be to put the page vertically and
use make the paint quite thin. Starting at the top paint horizontal lines, keeping a
bead of paint on each line, and drawing the paint down. This technique produces
less pigment, but a more consistent end result.
5.5
Why Is Sketching Useful?
There are many beneﬁts to sketching. In fact sketching provides a way for you to
explore several different ideas. By putting your thought down on pieces of paper
helps you to reﬁne them and make them better. The act of drawing helps you to ﬁrm
up (in your mind) whether the idea is good and if the idea will work. Thinking about
the sketching process conceptually is a useful activity. Consequently, in this section
we discuss (1) Who is the sketcher? (2) What is the sketching medium? (3) What
the appearance of the sketch represents? (4) What is the purpose of the sketch? (5)
what is the nature of these sketches?
Who is the sketcher? Almost likely you will be the sketcher. Often the best person
to do the sketching will be the person who will actually create the product or
develop the code.
Certainly, it would be possible for different people to do separate aspects of
the work. Someone to be the client and have the challenge, another person to
perform the sketching and the planning, and yet another person (or a in fact a
group of people) to do implementation. It could be possible to have an extremely
talented artist to do the sketching (on behalf) or say a group. While this would
create some excellent artist impressions of the ideas – it would miss out on the
other beneﬁts of the sketching process. Reﬁning ideas, getting the developers
involved, generating a rough copy, recording the process etc.
Indeed there is much beneﬁt to the developers getting involved with the
sketching process. And for the client to discuss the three main designs with
the person who has been sketching the pictures. By involving each party in the
process each will be able to directly inﬂuence the outcome, and hopefully the
ﬁnal outcome will capture and express the important aspects of the design.
What is the sketching medium? The sketching medium is physical. Pen and
paper creates a tangible asset. It is tactile, disposable and shareable – it is

134
5
Sketching Design Skills
something that can be easily passed from person to person. It can be scanned,
stored as a PDF and then swapped electronically. It is certainly possible to be
virtual – and there are many different types of software that could be used
to create pictures. For instance, wireframe tools help users make pictures of
different interface designs. Some also allow interactive functionality. These can
be useful to create mockups of your designs and are useful when you have
worked through the problem and focused on one design. But sketching helps
you contemplate different ideas before you commit to a speciﬁc solution.
What is the appearance of the sketch? The sketch itself represents something
that is unﬁnished. Something that can be questioned. Something that was created
quickly and so can be readily discussed, accepted or rejected.
There are alternatives, such as producing a three-dimensional rendering of
your design. Such realistic renderings have shadows, reﬂections, stochastic
effects etc. While these renderings provide a high-quality photorealistic picture,
which is fully lit and shaded, and they are used in profession brochures. However
they do not afford questioning. An observer would see the picture, and if it does
look realistic, they may believe that it is a picture of a ﬁnished product. Observers
then perceive this to be ﬁnished and complete and are less likely to question the
design. They see it as a completed project, rather than some outline ideas. If
they still believed that it was a model and an inspiration, they would then think
that it had taken you a considerable time to create (irrespective of how long it
had actually taken you). Probably, they would be less comfortable to query your
ideas. If they did query your design, they would probably focus on some minute
detail, rather than saying that the whole idea could be changed and adapted.
It is the sketchy nature of the pages that encourage viewers to discuss. To not
be embarrassed that they question and query the idea. They have nothing to lose –
the idea is only at the beginning of development. It is an outline representation.
Something that is rough, an impression and not strict.
What is the purpose of the sketch? The sketch itself has many purposes.
1. Evidence. The sketch provides evidence that the work has been done. That
you have thought through different possible outcomes. It is a demonstration
of alternatives.
2. Discovery process. The sketching process itself is important. The process of
drawing and putting the ideas on paper, helps you the sketcher, to reﬁne your
ideas. The very nature of writing something externalises images in your mind
and helps you to reﬁne your thoughts.
3. Communication. Sketches provide a way to communicate your mental pic-
tures. You need to record these on paper, such that they can be referenced and
discussed. Without this evidence it is difﬁcult for clients and other viewers to
comment on your ideas.
4. Record. Sketches provide a record of your progress and how your ideas have
changed. By using a pen, you are committing your thoughts to paper. Early
conceptions are often half-baked and need to be reﬁned. The pages thereby
record your progress and how the ideas have been reﬁned.

5.6
Techniques: Bold Lines and Faint Lines
135
5. Organisational. The sketched pages act to help you to organise your ideas. It
gives you the opportunity to think through several concepts. The FdS method
provides the structure for you to follow.
6. Aids conversation. The sketching process enables you to mediate your ideas.
When working with a client you are the expert developer, or product creator.
Therefore you need to input into the process whether it is possible (or not) to
create the tool. Indeed, it may not be possible to create the product or code
the software that the client wants. It may be too difﬁcult, too expensive, or
you do not have the right skills (etc.) But you can help develop that process,
and mediate appropriately, such that you can develop a plan that will be both
possible and suitable for the client.
The sketch allows change to occur. There is a temporal nature to the sketches.
Because they are sheets of paper, they won’t stay forever. They are tools to
get a job done. The ideas on the pages also develop. They present information
that describes how you came up with the idea, and demonstrate how it has
developed. The sheets are organic. They can be edited and annotated. They
represent something where there is ‘no’ wrong answer. They are quick, forgiving
and transitive in nature. Indeed, in our technologically rich society, they could be
explained as being playful. They are deﬁnitely creative and forgiving.
5.6
Techniques: Bold Lines and Faint Lines
There are many different techniques that can be used to sketch the design and even
draw a line, see Fig. 5.6. We prefer a single, well deﬁned line style, which has a clear
start and end point. Lines that abut each other when forming a shape, such that there
is no gap at the end of the line. This is our preferred technique. We will use drawing
pens to achieve the line and then ink wash to shade. To achieve these lines:
•
Plan in your mind where the line is going to be placed. You could even try the
movement with the pen (just above the page) before you put the pen down on the
paper. You are practising the start and the end of the line in the air. This helps you
get the idea of the movement that your arm is going to go through, before you
put the pen down. You could place a faint dot for the end of the line. This helps
you to have a target which you can aim for. When we are creating the sketches,
we plan in our mind where the line is going to go, before committing to the line.
Lines that are not straight will follow a path. Plan that path in your mind, before
putting the pen down, and consider where the key positions where the line will
go through.
•
Move your arm more than your wrist. Especially when you are creating long
lines it is easier to move your arm. You can move the pen cleanly across the
page.

136
5
Sketching Design Skills
Fig. 5.6
Different line styles can be used to create different appearances. From bold lines, sketchy
to lots of faint lines
•
Curve lines with the arc of your arm. Pushing the pen up and awy from your
body, will probably create a shaky and uneven line.
•
Reorient the page rather then drawing a line or curve away from our bodies. For
instance, drawing a line as a border round the page is easier to physically move
the page rather than drawing a line right, down, left and up. By moving the page
the line will look crisp and determined.
Another style is created when the end of the lines overlap with the end of a
previous line. This deﬁnitely gives an unﬁnished appearance to the design. The
advantage with this style is that some objects are easier to form. We feel that
three-dimensional objects is easier to create with this technique, such as the cube
in Fig. 5.6.
Finally gesture drawing using many faint lines can be used to make a sketchy
appearance. After a few faint lines they become bold (more lines in the same place
means that there is more ink and they appear bold). When you understand the form
of the object, you can go over it in a bold pen. Start off with a general idea or
an outline shape and use more lines to deﬁne the shape. We ﬁnd it easy to create
circular shapes using this strategy because the pen readily follows the ﬂow of your
hand, and it is easy to change the form. If you make a mistake with an early faint
line then you can merely make another faint line next to the ﬁrst one. We can use
gesture sketched lines to give us a structure and outline of an object. As the ideas

5.6
Techniques: Bold Lines and Faint Lines
137
Fig. 5.7
A study of a coffee mug shows several stages of the same object. First an outline is
drawn in faint pen, then later versions are sketched on top. The study sketched ﬁve outlines, then
progressed the next mug in turn with more detail and thicker lines, ﬁnally adding shadows and ink
wash
Fig. 5.8
Thicker lines emphasise that the edge is in darkness. Thinner lines depict edges that are
closer to the light source
or concepts evolve you can make them more bold and complete. The early sketched
lines are still there in the ﬁnal drawing, they are just less clear, because the bolder
lines are more noticeable by the eye. Figure 5.7 shows a study of a coffee mug. We
start off with a set of outline, which are then gradually made more bold. In this case
we used three pens, 0:2, 0:5 and 1:5 mm pigment-ink drawing pens. Get a piece of
paper and start sketching some objects!
If you are drawing three-dimensional objects then often the thickness of the line
changes depending on the orientation of the light source, see Fig. 5.8. First think
where the light is coming from (such as the top left hand corner of the page), then
the top left parts of your object will be lighter and the darker places will be down the
bottom far right. Also, where the object sits on a table (even if the table is not drawn)
sketch an accent line to express the weight of the object. There are different ways to
draw three-dimensional objects. The challenge is to place lines in such a way that it
gives the perception that the lines represent something solid. The orientation of the
lines give the impression that it is solid, while other cues (such as shadows) help to
reinforce the illusion.

138
5
Sketching Design Skills
Three-dimensional drawing is an illusion. We are convincing our mind that the
object is solid. If you wish to learn more about three-dimensional drawing, we
suggest that you look to the many resources of books, online classes and free
tutorials. Isometric projection is a good starting point. The lines are marked at an
angle of 30ı. When getting started it is good to draw an isometric grid, then the lines
are easy to draw. With isometric projections the lines are parallel to each other. On
the other hand, a one point perspective projection requires a vanishing point, such
that the objects (or parts thereof) that are further away are drawn smaller than those
in the foreground. Two-point perspective uses a horizon and two vanishing points.
There are other ways to sketch a three dimensional object or world. We can separate
the views into front, side or plan, or just concentrate on the plan view, or we can
separate the drawing into its component parts and provide an exploded or assembly
diagram see Fig. 5.9.
5.7
Improving and Enhancing Your Sketches
Simple effects can be added to your sketches. Techniques such as hatching, cross-
hatching, stippling, lines or even ink wash, see Fig. 5.10, can enhance your overall
sketch. But be aware, too any lines or effects can be detrimental to the overall design.
So, we do not encourage you to add too many effects and highlights to your sketches.
Not only is it easy to spend all your time on the effects rather than on the ideas. But
it can distract the viewer from the real content, and the actual ideas that you are
trying to present. You should be concentrating on the ideas, rather than focusing on
making the pictures look pretty!
Drawings often look more convincing with the addition of some carefully placed
lines (see Fig. 5.11). The lines provide visual cues. They are subtle marks that when
added to the drawing helps to make the picture more convincing. A few curving
lines on a sphere can make it appear spherical. An axis on a set of dots makes it
into a scatter plot. A cross and a square at the top of a rectangle can instantly turn
it into a window on a computer screen. While the addition of some dashed lines
by the side of a stick ﬁgure can make it run or move. In fact, these subtle cues can
help give your pictures expression, they can also help to clarify what you mean.
What you are doing is to communicate your intent and your ideas, through subtle
changes. Shading and shadows provide cues that the object is three-dimensional.
Buttons may give the impression that they are meant to be pressed and so help the
reader to understand what type of interaction your interface may have. Arrows can
provide an idea that two objects are connected. For example, the arrows can express
that the user ﬁrst presses on a button, which opens a new window. It would mean
that something happens as a result of the button press: the events are synchronised
in some way.

5.7
Improving and Enhancing Your Sketches
139
Fig. 5.9
Different ways to project three-dimensional objects or worlds

140
5
Sketching Design Skills
Fig. 5.10 Different effects
can be easily applied to your
sketches, to give highlights or
shading. Sure make them
neat, and tidy and clear for
someone else to understand.
But do not spend too long on
each sketch – they are meant
to be quick drawings

5.8
Other Mediums: Different Types of Low-Fidelity Prototyping
141
Fig. 5.11
The addition of some well-placed subtle lines can change the understanding of the
object
5.8
Other Mediums: Different Types of Low-Fidelity
Prototyping
Other physical mediums, such as whiteboards and dry-wipe pens, may be suitable
for some purposes. For example, when you work with a group of people you may
ﬁnd it easier to use wipe-boards with dry-wipe-marker pens or big ﬂip-charts. It is
much easier to see the designs and also the pen can be handed around. You could
have a rule, whereby whoever holds the pen has the right to speak. Working with
others can be a useful way for you to express your ideas, see how they are understood
by other people, and instantly get feedback on those ideas.
Other low-ﬁdelity prototyping methods are useful and have their place in
interface design. Mediums such as paper, cardboard, modelling clay, or children’s
play sets could be used to create mockups. In fact, there is a growing trend to use
cardboard to create mockups. These become tangible objects that users can handle.
It is also possible to create full-scale mockups in cardboard, where people can
walk into, through or even sit-on life size models of different tools, buildings or
artefacts These dioramas can help to explain and communicate the concepts. They
are especially useful to display object relationships because often they are designed
to scale.
It is possible to use computer software to create digital art. For instance, there has
been a growing popularity of wire-frame generation software. Also, it is possible
to use drawing software to create these designs. However, from our experience,
these tools can inhibit and restrict the creative process, rather than engender the
creation of different ideas. It is too easy to spend more time changing parameters

142
5
Sketching Design Skills
and choosing operations on the application rather than being creative. We are not
saying that wire-frame generation software is bad. But we are saying that the early
design work should be done by pen and paper and not on a computer.
Moreover, there has been a recent growth of pen-based and ﬁnger-based inter-
faces. The rise in popularity of tablet computers, as well as laptops with detachable
keyboards and touch screens, have all started a new wave of natural computer
interfaces. In fact, touch is now an integrated part of many operating systems. For
example Microsoft’s Windows 10 now allows users to draw and annotate on top of
popular programs such as PowerPointTM. It is certainly getting easier to draw on the
computer screen! We are deﬁnitely moving to a new era of computing, and moving
“beyond the desktop” [4]. However at the moment, we still believe that pen and
paper are more natural interfaces and they are the most suitable resources to quickly
draw and sketch ideas.
5.9
Sketching Alone or in a Group?
Another question you may ask is: “do you sketch and work ideas with other people?”
There are deﬁnitely different ways to work. You can work alone and capture your
own ideas, or work with others together to capture a cohesion of ideas. Usually, you
will be working alone and then sharing your ideas with others. But the very act of
discussing and explaining your concepts can actually help you conﬁrm in your mind
what the idea really is. In education people often say “see one, do one, teach one”.
You start to learn when you see the concept, when you do it yourself you get a better
idea of the advantages and limitations of the concept, but it is when you teach it that
you really need to understand it. Teaching and talking with others will force you to
understand it better.
At this stage, it is worth talking more about brainstorming [3]. Brainstorming
is traditionally a group activity, where a group of people gather together to
discuss a problem, and work out (brainstorm) different solutions. Brainstorming
has advantages and disadvantages with working as a group, compared with working
alone. It depends on the goals of the work, and working in a company may be best
to work as a team. However, on most occasions we suggest you work alone and then
share your ideas with others. While there are different advantages and disadvantages
to working alone versus a group of people, there is also much discussion over the
worth of brainstorming [2].
Working alone.
•
When you work alone, you work at your own pace. You also can work in your
own environment. Whether your location is a quiet ofﬁce, or a coffee shop with
day-to-day noise, or you work in your room with headphones listening to your
favourite music. Whatever the situation, working alone can be good. If you are
a reserved person, you do not need to ﬁght to get heard, and you do not need to
worry about what other people may think of your ideas.

5.10
Sketching Alternatives
143
•
However there are problems with working on your own. Working on your own
can get lonely! It is sometimes difﬁcult to initiate new ideas, and other people
can motivate you and encourage you to complete the work.
Group working.
•
People working in groups can get sidetracked and spend more time talking about
the football over the weekend (for example) rather than focusing on thinking and
talking about solutions to the problems. Good ideas can also be hidden or lost [7].
For example, someone who is quiet may suggest a fantastic idea that merely gets
lost in the mêlée of ideas, or hidden by someone else who is shouting louder.
The ideas that bubble to the foreground can also depend on how the group is
run. Without a good strategy and an enthusiastic and organised leader, the group
activities may focus on one particular idea, or get sidetracked. Consequently
some ideas may be lost.
•
However, there are beneﬁts with working as a team. It is possible to have ideas
bounce around the group. Ideas that are spoken out loud, may be repeated by
other people, or changed. In fact, there could be a situation where someone in the
group says something that is weird, wacky or cheeky. And the act of them saying
this unusual concept may actually spark off a useful idea in someone else.
There are therefore beneﬁts for using both strategies (brainstorming alone or
with a group). However, we suggest that much of the idea creation is done on
your own. Then when you have some ideas completed, these should be shared with
someone else. It is the same situation as writing an essay. You know the plot and the
storyline well, but may have missed out some important detail in your words. So, by
giving the text to someone else to read, they can help you reﬁne and improve your
wording. Similarly with design. You get the core ideas down on paper, and work
through different possible design solutions. Then you go and share your ideas with
someone else. Rather than using the phrase see one, do one, teach one, in our case
it is probably better expressed as: design them, sketch them, explain them, critique
them.
But we do encourage you to collaborate with other people. In fact, you will
probably be creating new design ideas because someone else has requested different
solutions. Whether this is from a company, client or teacher setting an assessment.
Sp, it is important to share your designs, and to get other people to critique your
ideas. In fact, merely the action of presenting your results to someone else, helps
you to reﬁne the ideas in your mind. The ideas become more concrete in your mind,
when you have to explain them to someone else.
5.10
Sketching Alternatives
Sometimes when you sketch something, you will have a very speciﬁc vision in mind.
You will just want to get the picture of that idea correct, and exactly recreated on
the page. With the FdS we are, however, encouraging you to look at the problem
differently, and to create many alternative design ideas.

144
5
Sketching Design Skills
Let us think up a scenario. Consider that you have been given the task to create
a new chair. This object fulﬁls a certain role, and has a particular function: that it
must permit someone to sit on it, and it must not break when the person sits on
it. But what is a chair? What does it look like? You may have a particular idea of
what chair you would sketch. Indeed, what are you sitting on now? What does that
look like? Is it sturdy? Is it wooden, or covered in material and a cushion, or is it
a computer chair with wheels? Even through this last sentence we have suggested
many alternative designs.
Let us start thinking about the chair by counting the number of legs. Most chairs
have four legs, but what would it look like with three, would it work with one or two
legs? Perhaps one legged chairs would work if they could be stuck into something.
For example you could think about a garden chair that could be stuck into a grass
slope. Could you have a chair without legs? Possibly What about a hanging chair –
it does not have legs, or a storage chest. Then you could consider the material that
the chair was made from. Soft, hard, natural, man-made, and so on. What colour is
your chair? Is it plain, painted, stripy? Is it luxurious, basic, comfortable, simple,
hard, soft. You may even start to think about the purpose of the chair. It could
be a computer chair, lounge sofa, dining chair. A chair for a car, truck, Combine
Harvester. Who is the chair for? Is it for a fully grown human, a small child or a
baby?
Figure 5.12 shows some concept sketches of different chairs. We start off by
sketching a picture of a standard chair, and then start to think about one leg, three
then start to change different aspects. We create a sloped back, then remove the back
completely and create a stool and a chest. We create hanging chairs, ones that swivel
and those with different back supports.
5.11
Exercises
The aim of these exercises is to help you become more conﬁdent with sketching
and to run through basic skills. There are many books and courses available. If you
wish to explore particular styles or improve your skills further, we suggest that you
seek out these courses. When basic skills have been mastered, it is often one of
conﬁdence, practice and critical evaluation. By practising and reﬂecting on your
work you can improve. But remember, these are sketches with a purpose. And that
purpose is to record, explore and explain. You are not aiming for drawings that
would become works of art. So the pressure is off, just go and sketch!
Ex. 5.1 —
Sketching a straight line
In the ﬁrst exercise we start by drawing a straight line. This may sound simple, but
lines are the basic sketched shapes that you will need to perform. When you draw a
line, look to where you want the line to end and draw the line to that position.

5.11
Exercises
145
Fig. 5.12 Exploring alternative shape designs for a chair
1. First draw a dot on the page on the right hand side of the page. Now use this as
your target. Start the pen about 3 cm to the left of the dot, and aim your line at the
dot. Try to do it fast, but also accurately. If you are too slow when, you draw the
line, then it will look wobbly. Also make sure you end at the dot. Do this several
times, to practice ending at a speciﬁc point. For this line use a reasonably thick
pen, about 0.8 mm nib will work well.
2. Draw a square. The square should be about 2 cm by 2 cm. Start by drawing a
line about 2 cm long from left to right on the page. You can label the start of the
line 1, and end 2. Now turn the page about 30ı anticlockwise. Now draw two

146
5
Sketching Design Skills
parallel lines, the ﬁrst about 2 cm long that starts from point labelled 1, and the
other from the label 2. Now you can orientate the page to be planar to yourself,
and draw the last line to complete the square.
Ex. 5.2 —
Basic sketching lines
In the second exercise we start exploring different strokes and start considering
alternatives. What is required are strokes that are bold, smooth and continuous. It
is good to have pen strokes that are neat and tidy, and that you place on the page
quickly and efﬁciently.
1. First draw a series of parallel lines using (say) the 0:8mm nib at 45ı. Then
horizontal. Finally vertical. See Fig. 5.13. If you are right handed, it is often
easier to draw lines at an angle of 45ı.
2. Draw the same set of lines, this time closer, and using the thinner nib. Get used
to drawing lines quickly, and conﬁdently. It does not matter if they do not look
perfect. Try to create parallel lines, that are drawn fast, yet are drawn neatly.
Fig. 5.13 Draw some
parallel lines, ﬁrst at an angle
(if you are right handed then
these should be easy, if you
are left handed then do them
oriented the other way). Then
draw horizontal lines, and
ﬁnally vertical lines. Next
draw them in a thinner nib,
and ﬁnally draw some circles,
triangles and overlapping
squares

5.11
Exercises
147
3. Draw a set of overlapping circles, triangles and squares, using both the ﬁne and
the larger nibbed pen.
Ex. 5.3 —
Three-dimensional shapes
Start drawing other shapes and make some of them three-dimensional (Fig. 5.14).
Drawing three-dimensional shapes on a two-dimensional piece of paper requires
us to project the shape onto a ﬂat plan. There are different ways to achieve a 3D
drawing; one of the easiest is the isometric projection (see Fig. 5.16). This is a
parallel projection technique where objects are drawn with a constant depth; objects
that are close are the same size as objects that are further away.
1. First draw some simple shapes, such as square, circle and triangle. Now turn
them into three-dimensions.
2. Draw a shape that looks like a capital ‘L’. Now turn this into a three-dimensional
object. Try with the letter ‘T’ or other shapes.
Ex. 5.4 —
Sketching alternatives
One of our main goals, is to get you to consider design alternatives. Figure 5.12
shows alternative sketches of a chair. In this exercise we want you to consider
different alternative design ideas. In fact, this is one of the main goals of the FdS:
Fig. 5.14 Start drawing
some three-dimensional
shapes

148
5
Sketching Design Skills
Fig. 5.15 Exploring alternative shape designs for the letter N
Fig. 5.16 Isometric grid. Perspective projections and the parallel isometric projection of a cube
to help you manage your thoughts and to structure your work as you consider
alternatives. In this exercise you will start to consider different alternative concepts.
1. Choose a letter. It could be the ﬁrst letter of your name. We have chosen the letter
‘N’ as shown in Fig. 5.15. We suggest you choose another letter. Now draw it in
different fonts. In other words, make up your own font. Make it straight, out of
dots, curved lines, smooth etc.
2. Take an every-day object. Something like a mug. It needs to be a simple object
with some interesting facets. For example, objects such as a fork, lamp or jug
would also be suitable. First sketch it as you would expect to see it. Now explore

References
149
different conﬁgurations. You could make one more curvy, another very tall,
another small, perhaps remove the handle, put two together, put one on stand, etc.
3. Sketch some three-dimensional objects. Start off with a cube in an isometric
projection. You may wish to start by drawing an isometric grid and then draw
your object. Now draw a chair and ﬁnally an open laptop computer. You may also
like to explore using perspective drawings with one or two vanishing points, see
Fig. 5.16.
References
1. Heller S, Landers R (2014) Infographics designers’ sketchbooks. Princeton Architectural Press,
New York
2. Isaksen SG, Gaulin JP (2005) A reexamination of brainstorming research: implications for
research and practice. Gift Child Q 49(4):315–329
3. Lamm H, Trommsdorff G (1973) Group versus individual performance on tasks requiring
ideational proﬁciency (brainstorming): a review. Eur J Soc Psychol 3(4):361–388
4. Roberts JC, Ritsos PD, Badam SK, Brodbeck D, Kennedy J, Elmqvist N (2014) Visu-
alization beyond the desktop–the next big thing. IEEE Comput Graph Appl 34(6):26–34.
doi:10.1109/MCG.2014.82
5. Roberts JC, Headleand C, Ritsos PD (2016) Sketching designs using the ﬁve design-sheet
methodology. IEEE Trans Vis Comput Graph. doi:10.1109/TVCG.2015.2467271
6. Tovey M, Porter S, Newman R (2003) Sketching, concept development and automotive design.
Des Stud 24(2):135–153
7. Wiseman R (2009) 59 seconds: think a little, change a lot. Pan Macmillan, London

Chapter 6
Graphical Marks and Semiology for Sketching
Abstract As we sketch and draw our different solutions it is good to think how
information can be communicated effectively. Each of the marks and graphics that
we place on the page need to convey the ideas that we have in our mind. How
do we display information effectively? How do we know that things are related?
This chapter investigates how we as humans understand information. We look to the
Gestalt psychologists and explain principles of design, and look to Jacques Bertin
and his graphics semiology.
6.1
Developing a Visual (Sketching) Language
There are several reasons why we are sketching. First we are thinking through our
ideas while we sketch. This helps us to work out size, shape, organisation of objects
and features, placement, relative position etc. It also helps us to consider alternative
design ideas. We can start with a simple concept and over the duration of a few
sketches we can elaborate upon the simple idea to change it into something new.
Second, the sketches help us communicate our ideas to other people. Sketching is
the language that we are using to share our ideas with other people.
Let us consider the written language. We have marks that are made by letters and
punctuation, which are organised to generate words. The words then communicate
the meaning of the writer. As we read we do not see the individual letters, rather
we see the words. This is similar to graphical communication. However the marks
on the page are lines, circles, dots. In fact all we need is a line. Many lines together
can be made into a thicker line, curved lines make a circle, wavy lines can appear
as trees. Our sketches use the language to communicate meaning. We have already
used graphical language. We have included shadows on three-dimensional objects.
These shadows provide you with cues that the object is three-dimensional. We have
introduced the idea of accents, which provides a cue that the object has ridges and
valleys, and that one object comes into contact with another (such as the cube that
is on the table deﬁnes a contact where the cube meets the table).
Let us think a little more about languages. Within the English language, the words
are made from letters. In English we have 26 letters that can be put together to form
words, which are separated by spaces to delineate each word. The words themselves
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_6
151

152
6
Graphical Marks and Semiology for Sketching
have different meanings and uses. Nouns are the things (objects, people or places),
which can be big, small, old, red etc. (adjectives), others are verbs, etc.
We start our graphic communication with a series of lines, these lines will be
straight, long or short, parallel, abut other lines, circular etc. and together they form
various shapes. We can think that the lines and marks on our page are like letters,
that when put together become words. Consider a bar chart diagram of four bars.
The axis is made from two perpendicular lines, one bar is made from four lines,
which is repeated at a distance. When we look at the graphic we instantly recognise
it as a bar chart. If we separate the individual lines then it does not look like a
bar chart any more! We recognise the bar chart as a graphical object, because it is
something we know, and we have seen it before. The individual parts may be very
simple concepts such as squares, circles or rectangles, or could be more detailed set
of lines that make up a texture or tapestry of colour Whatever the construction of
these objects, a viewer will easily recognise them.
We can also communicate other aspects such as time, progression of time and
position. A few dashed lines at the side of a person could imply that they are running
fast, lines emanating from a point indicates an explosion, whereas lines can show
the bounce of a ball (see Fig. 6.1). Our interpretation of size can depend on what is
around it. Let us consider drawing a window pane with a person standing outside
the window, yet very close to the window. We will draw this person large. If they
are drawn smaller then we would assume they are further away in the distance.
We would not assume that they are a small person hovering in the window. We
understand, and assume the size of a window and the size of an average human and
estimate their position in the scene. In our mind we have a model of how the world
works. For instance, when we were young we played catch with a ball. 8The ﬁrst
few times we tried to catch the ball we missed it, but after a while we learned how
to catch the ball. Our eyes and brain cannot work fast enough to see the ball, rather
we need to predict where the ball will land, and therefore position our hand at the
right place and time to catch the ball. We have a model of gravity and how the ball
ﬂies through the air.
Consequently, just as a written language, we can break down our sketched
communication into individual parts. Starting at the low-level parts of marks, lines
and symbols we consider how we perceive these marks as one unit and explore
Fig. 6.1 By adding a few lines it is possible to give an object movement, to describe aspects such
as running fast, an explosion and a bouncing ball

6.2
Graphical Marks and Gestalt Laws
153
the Gestalt laws of similarity; think about how symbols convey meaning, explore
different graphical forms (such as houses, barns, cars, bar charts, line graphs etc.),
and ﬁnally consider their environment and the scenery that provides the context.
•
Graphical marks and Gestalt laws. As humans we tend to see the graphics as
units rather than individual lines or parts, the Gestalt scientists evaluated how we
perceive individual elements, they presented several laws.
•
Graphical semiotics is the study of signs and symbols and how they communi-
cate meaning.
•
Graphical forms. Many of the drawings and sketches we will sketch are made
up of several parts. A bar chart, line graph or scatter plot are known graphical
forms and are uniquely identiﬁable. We may create new forms and these may
not readily be identiﬁable, but because of the spacing and separation of these
graphical forms, they can be identiﬁed as being separate concepts.
•
Graphical scenery/encapsulation. Finally, many of the components will be
put together into larger designs. For instance, we can consider a table that is
shown alongside a line-graph. These two objects may be contained within a
single window. This window then can be moved in the computer screen. The
window is an encapsulating object, it deﬁnes that the graphical components are
placed within a particular will be design. It provides the scenery that gives all the
other parts contextual meaning. The individual components will be made from
individual lines to make the forms, but they are so recognisable in our minds as
one unit (a user interface) that we will not see individual lines, rather we will
notice the scene that they represent.
6.2
Graphical Marks and Gestalt Laws
We can imagine different marks that we can make to the page. A thin line, thick line,
circle, curve, wiggly line and a dot. These then can be easily formed into shapes.
With three lines we view a triangle, and four lines we observe a square. Put the
square to one side and we see a diamond. The word Gestalt means the sum of its
parts. Draw three circles and they appear to be grouped together. Draw another set of
three circles further away and similarly they are grouped together, yet they appear as
two distinct groups. The two sets of dots are not connected. These patterns naturally
appear. We have not told you how to view them, nor have we trained our minds to
see these connections. They happen, because of the way our minds work and the
models that we have innate in our genes, and also our learned experience of the
world.
The Gestalt scientists discovered that there were several key ways which we
perceive these objects. One principle idea is that we see objects as a whole. We
do not see curves, lines, circles and ridges, rather we see the face of a human. This
is named emergence. We do not consciously look at a friend and think through all
the traits of that person’s face (such as glasses, grey hair, beard etc.) and think that

154
6
Graphical Marks and Semiology for Sketching
Fig. 6.2 (A) separate lines do not appear connected. (B) Put the lines together and they appear
connected as a triangle. (C) Four lines make a square, but when the square is on its side, it looks
like a diamond (D). Finally, separate dots do not look connected (E) but appear grouped together
when they are close (F)
Fig. 6.3 Our eyes easily notice the word FIGURE on a white background. But we will also see
the small square as ﬁgures even on a checker pattern or different background textures
is our father, rather we instantly and implicitly recognise him. We see the whole
picture and not the individual parts.
Another aspect that the Gestalt scientists discovered is that information appears
as ﬁgure or ground. That is, in a simplistic view, we can think of the black pen, as
ﬁgure, with the white paper as ground. The three black circles in Fig. 6.2 appear as
dots because they are black and on a white background. How does the human brain
know about ﬁgure and ground? How do we know to concentrate on some parts
and ignore (or lesson the perceived value for other parts) of the scene? Generally
there are differences between the characterisation of the ground and ﬁgure [7],
as Danish psychologist Edgar Rubin discovered in his 1915 doctoral thesis titled
“Synsoplevede Figurer” (visually experienced ﬁgures). We can see from Fig. 6.3 that
the smaller object is probably classiﬁed as the ﬁgure and the larger as the ground.
While the simplistic view gives us a clear contour that deﬁnes a boundary
between ﬁgure and ground, in reality it is not necessarily that easy. The ground is
not always well deﬁned, it is often less clear what is the ground and what the ﬁgure
should be. Perhaps the ﬁgure does not have a precise shape. However, the ﬁgure

6.2
Graphical Marks and Gestalt Laws
155
usually has a character that stands out. As humans, it is much easier to describe
the ﬁgure, and easier to recognise it, in comparison with the ground. Colour is
another factor. Often the ﬁgure is darker, or has brighter colours, whereas the ground
is dull, with softer more subtle colours Another trait is that the ﬁgure is smaller
and likely to be surrounded by the ground. However in some circumstances (and
what end up being illusions) it is not necessarily clear to which is the ﬁgure or the
ground. This ﬁgure/ground problem is highlighted most effectively by the picture
(commonly known as) Rubin’s face, of silhouette faces that also could be perceived
as a vase.
In addition there are several other principles of perception that likewise form
ambiguities. One challenge is called multistability, where some objects are unstable
and several potential (and equally suitable) interpretations can be created. Our minds
merely cannot decide whether it is one object or another. Researchers and artists
have used this principle (and others) to create illusions and trick the user. For
example, Escher’s impossible stair picture, or his perpetual motion machine contain
several viewpoints. When they are taken individually, and the viewer looks at one
small part of the scene, the drawings are perceived to be normal. But when the
picture is taken as a whole, it is clear that the physics in the picture are impossible
to achieve. Some people are walking up the stairs, while others appear to be walking
under the stairs. These pictures work against our natural understanding of gravity.
They provide impossible physics.
Another perception illusion occurs when objects are close together and shapes
or objects are formed in our mind that are not part of the original picture. This
illusory effect is known as reiﬁcation. We perceive more information than is actually
printed on the page, Fig. 6.4. Our mind is using our memory and our understanding
of shapes to make conclusions over the shapes. In other words, our minds ﬁll in the
gaps.
The Gestalt scientists discovered many principles. These discoveries help us
understand how we see objects. Each of these principles have implications for our
designs (see Fig. 6.5). We need to make designs that are clear and communicate what
we wish to say. Our eyes, or another person, will implicitly see our lines as objects
and we will try to make sense of what we have sketched. We abut lines against each
other, to make them look connected in a single object. We draw lots of alternatives
and the reader can assume that they are all doing the same job.
Similarity.
If things are similar, or share some common aspects (such as size, shape or
texture) then they appear to be connected. We can think of a grid of circles,
with some of them painted blue. The blue ones appear to be connected. We can
achieve the same result with size, where the larger ones appear to be related.
On the other hand, when something is different it can act as a focal point and
stand-out.
Proximity.
Things that are nearer and closer together appear to belong together. This is
the explanation to our three-dots example (Fig. 6.2). A good example in a user

156
6
Graphical Marks and Semiology for Sketching
Fig. 6.4 With reiﬁcation, our minds are perceiving more information than the sensory symbols
are presenting
interface is a radio button setup. Whatever the quantity of buttons is shown that
are close together, which imply that they are connected. By clicking on them
(and getting feedback that button is the only one chosen) reinforces the proximity
principle.
Continuity.
We, as humans, have a preference for items that are continuous. If we imagine
our everyday life, then we can think of a ball travelling through the air. It would
be unusual that the ball suddenly stopped and hovered mid air. Rather it is
continuous, until it hits a hard surface, then it may stop. We would notice the ball
hitting the hard surface, because we would see the surface it was going to drop
onto and predict what will happen. Moreover, the ball would probably bounce
and eventually come to a rest. It is being continuous. We prefer continuous
shapes. We can imagine a situation where four lines are being animated towards
each other. They come together in a form of a cross. As the lines come together
they appear as individual lines, but when they meet together we perceive a cross.
We can also think of situations where our eye is drawn through the picture. We
will see a straight line and a curved line, and our eye is drawn through the curves
of the curved line.
Closure.
Our minds will try to perceive complete objects. We can think of a dashed
wavy line. Our minds will think that this is a continuous smooth curve. Or a
set of dashes that make up a line, our mind will consider a triangle rather than
individual dashes.

6.2
Graphical Marks and Gestalt Laws
157
Fig. 6.5 Pictorial examples for each of the Gestalt principles

158
6
Graphical Marks and Semiology for Sketching
Common fate.
If we see something moving together then we assume that they are connected.
This is equivalent to the principle of continuity but for movement. If we observer
birds moving together, we see them as a unit. On the other hand, if we see two
groups of ﬁve people walking towards each other but passing each other (they
come together, ignore and walk past each other) then we see them as being two
separate groups of ﬁve people each. In a user interface we often create connected
items. A scroll bar is coordinated with the content, when we move the scroll bar
up so the content of the window is also moved up. Or when we select something
on the screen it is highlighted with a colour When we physically move the mouse
interface on our desktop, the mouse on our screen moves in a similar way.
Symmetry.
As humans we not only prefer symmetry but we will perceive the objects as a
whole. Even if the objects are not connected, our mind can pull them together
such to make a symmetrical object. In the physical world we never see an object
that is broken with a space between it, yet it is hovering in the air. In our everyday
lives, objects are solid and they obey laws of gravity.
Good form, good ﬁgure, or simplicity.
Humans have a tendency to prefer good form. Things that appear neat, tidy and
well organised. When we observe the world we try to simplify the world, we try
to organise it and understand it, we may even wish to downplay unfamiliarity
and chaos. Therefore we will try to organise the scenes in our mind and start to
categorise the objects that we observe.
Common regions.
One way to make a connection between elements is to enclose them. All items
within a contour describes that they are related. Those items outside (or within
another enclosed region) are separate.
Uniform connectedness.
We can make explicit the connectedness between objects by placing lines
between them. They are visually connected, such that our mind assumes they
are conceptually connected too.
Past experience.
If we are familiar with some visual form, then our minds will assume that it
is the same as it always has been. We can easily misread something that we
have written, because we are familiar with the words, our mind merely assumes
what we have written is familiar to us. For example, when proof reading some
paragraphs, it is possible to miss repeated words (our mind has removed the
repeated words). If we see red, orange green circles we instantly think of trafﬁc
lights
Parallel lines
When we see sets of parallel lines we assume that they are connected together,
whereas irregular lines are not connected. The lines could be curved or wavy and
the same effect occurs.

6.3
Graphical Semiotics: Arbitrary Symbols
159
When you are sketching your designs in the FdS, we encourage you to think
about similarity in your design. For example, similarity can be used to make it
appear that every idea is the same priority and when there is consistency (maybe
size and style) between the ideas it is easier to understand that these are equivalent
yet alternative design concepts. Proximity is important because we can use spacing
to separate different concepts, or let the user perceive that they are similar ideas.
6.3
Graphical Semiotics: Arbitrary Symbols
The graphical marks that we put on the paper convey meaning and can tell
stories. As we develop sketches for interface design, we can consider how the
interface would be laid out. Let us consider looking at hotel or bed-and-breakfast
accommodation. We might design an interface, which has a menu along the top,
properties menu down the left hand side, with two panels to the right. One to hold a
map and the other to present a bar chart of prices (one per accommodation). As
we sketch this picture we are assuming that our observer will know what it is.
But how will they know? They may realise that it is an interface design because
of the context. A title or some description that says “accommodation prices”.
Or understand through verbal description. There may be other clues that it is an
interface. You have drawn a box around the graphics, and it is drawn as the close,
zoom and minimise buttons. These symbols are communicating to the observer that
you have drawn a user interface. There may be other components that are unknown,
where, for instance, you have created a new visualisation layout, or projected the
map differently. But the overall graphic still tells the viewer that you have sketched
an interface.
Now we are communicating meaning. The symbols have come together to
present a story. There are other meanings that you could present implicitly. For
example, perhaps the map display is the most important, therefore this will take up
the most space in your design (although probably in reality the user could adapt the
size of the frames). If something needs to happen in synchronicity then you could
use a lone (or maybe an arrow) to connect these two items together. We are using
the principle of uniform connectedness.
Some of the information we sketch will be implicit. We will instantly know what
it means, whoever we are, and whatever skills or knowledge we have. While other
ideas, concepts and sketched items will need to be learned. You may know them
already, because you have seen the concept before, or you may need to learn them.
This is the difference between arbitrary and sensory symbols.
Arbitrary symbols are those that need to be learned. We need to be told what
they mean, or deduce what they imply by their context. Logos, many road signs and
even the letters that we use to write our language, are all arbitrary symbols. These
symbols do not demonstrate any similarity to the object, place, location, action etc.
that they represent. On our accommodation map, we could use circles to represent
the location of each hotel and squares for each bed-and-breakfast. Why circles and

160
6
Graphical Marks and Semiology for Sketching
squares? No particular reason, other than they are easy to locate, differentiate and
can be plotted using any graphical library. Circles do not have any meaning to hotels,
nor squares to bed-and-breakfast places. This decision is arbitrary.
The power of these signs comes from culture, our own knowledge or customs.
Ferdinand de Saussure said that the sign is the result of the association between
the signiﬁer and the signiﬁed. In other words, the signiﬁer is the form that the
sign takes, and how it presents itself, whereas the signiﬁed is the meaning. We can
imagine a sign on a door of a building that reads “Exit”. It is clear that this sign
represents an escape route that should be used in case of an emergency. On a shop
front, the word “Open” may be shown, signifying that the store is currently open.
A dove can be used to represent peace. The radioactive sign is easily recognisable,
which represents potential radioactivity hazard. An arrow pointing upwards means
to keep the box upright.
The signiﬁer can be something physical such as a symbol, but it can also be
a sound, an image or a word. We can generalise the signiﬁer and signiﬁed to
stimulant and meaning. The signs may be simple or complex, but these are arbitrary
conventions so are hard to learn and easy to forget. They are embedded in our culture
and the conventions of the society that we live in. They also can change over time,
pictures that we would have known in the past are no longer relevant and are less
familiar. Similar to the change of language, so the understanding of these signiﬁers
can change or be lost. While they are arbitrary, they can be very powerful. Just by a
few symbols can we explain very complex concepts.
Working contemporary to Saussure, Charles Sanders Peirce developed a triadic
model consisting of Interpretant (Signiﬁed) which is the meaning or the sense of
the sign; Representamen (Signiﬁer) which is the form of the sign, and the Referent
(Object) what the sign represents or stands for. Peirce also deﬁned three different
types of signs: icon, index and symbol. We can think of a calculator (Fig. 6.6) which
could be depicted in several ways. If it looks like the calculator then it is an iconic
representation. The sums on a sheet of paper indicate that calculations have been
made (an indexical representation) ﬁnally symbolic representation could be a given
by any of the mathematical signs, such as plus, minus, times etc.
An icon enables resembles or imitates the object. There is a clear and direct
relationship between itself and the object. It could be a picture that is simpliﬁed
or idealised, but it is readily recognisable with distinct features to notify that it is
the object (there are physical similarities between the image and the object). For
example, on a computing interface we may see an icon of a person to represent
the user, a magnifying glass to do a search, a telephone to contact the person,
a folder to store the ﬁles, and a shopping cart to pay for the goods. In other
situations we may see a no-smoking sign with an explicit picture of a cigarette
which has been crossed out, or a cup with a cross through it to tell attendees not
to drink in the conference centre, or a train in a red triangle to make ramblers
aware of the railway line.

6.3
Graphical Semiotics: Arbitrary Symbols
161
Fig. 6.6 We can consider different ways to present the sketched information. An iconic view
presents something similar to the original. Indexical implies the object. The symbolic represen-
tation is a summary view that we understand due to culture or convention
Index is a sign that implies the object. We know what season it is because we notice
the brown leaves on the trees. We know a plane has ﬂown through the sky because
we see the vapour trail. We know that it has rained because there is water on the
road. that it is the fall It looks like the object that it is representing. A picture of a
person emptying their pockets means that they do not have any money on them.
Symbolic representations do not necessarily resemble the object they are totally
arbitrary, but we understand their meaning through conventions and learning
what they mean.
When we are sketching designs to develop an interface we will know the context
of our problem. You may be developing a transport application, or a visualisation for
political data, or a game. Whatever the problem is, developers have already created
a rich tapestry of graphics and symbols. Some of these symbols may already be
deﬁned in standard font tables. In fact, many common symbols are already listed
in the unicode standard. scissors, music notes, stars, pencil, envelope, telephones,
weather symbols and many arrow types are all deﬁned. Making up your own
symbols is also possible, especially when the context of the problem makes it clear
to do so. A rectangle with two wheels could easily represent a automobile vehicle
for a transport design.
To achieve the best communication we need to contemplate a few questions, such
as are there standard icons that could be used? Are there designs or conventions that
the topic will expect? Is the icon simple? Is it understandable? We suggest you
also follow the Gestalt principles, and try not to make ambiguous communication.
For example, something bold should look bold, something big should look BIG
– in comparison with other things. Remember how we perceive the objects as a
whole. The lines that you draw on the page determine the object. A closed polygonal

162
6
Graphical Marks and Semiology for Sketching
shape hints to the observer that the objects represent complete, or a solid, or perhaps
a group of objects. Proximity also plays an important part. Objects that are close
together are probably related. If the objects are not drawn in close proximity, you
can speciﬁcally associate them together by drawing lines or arrows that connect
them together.
The topology of the object is also important. Representing a cup with an open
handle hints that you can place your hand in the handle and pick up the mug.
It affords to be picked up. Topology is a mathematical concept, which relates to
the properties of space. Objects are said to hold the same topology if they can be
stretched or bent into the other shape.
6.4
Graphical Semiotics: Sensory Signals
Sensory symbols (in comparison to arbitrary symbols) are implicit. We understand
them because we are human. Our eyes are sensitive to light, our brain notices edges
of objects, we see things that move fast in comparison to those that move slowly,
we can visually search and locate the red fruit of a mulberry bush. These inputs are
from our senses. Our eyes sense light and colour, our ears sense sound, we feel,
touch, taste and smell all through our senses. Each input we associate a value. We
can estimate the wattage of a light bulb by the brightness it emits. We estimate how
much water is left in a kettle by its weight. Likewise the symbols we see and sketch,
can give help us perceive value.
The French cartographer Jacques Bertin in 1967 presented Sémiologie Graphique
(semiology of graphics), later translated to English in by William J. Berg [1]. In his
work Bertin articulates the ﬁrst comprehensive description of how graphical marks
and symbols can represent value. We use the word value to mean worth. As we view
the graphical marks, our minds can interpret these symbols as a quantity, magnitude
or perhaps a speciﬁc value. While Bertin focused on two-dimensional maps, because
he was foremost a cartographer, he certainly thought about projections and different
ways to present three (and higher) dimensions into two dimensional print. And
while his ideas have been subsequently extended by researchers, his body of work
provides a foundation for the information visualisation community. The essence of
Bertin’s work was to organise and understand the concepts of graphical marks. We
can think of his ideas as a toolbox of concepts that a designer can choose from to
visually encode information. Bertin described the marks as retinal variables, that
are organised as a point, line or area.
The retinal variables (also known as visual variables) are the graphical entities
that give us value. They are sensory symbols that encode some kind of information.
Let us consider a bar chart. We can imagine that one person in our database is
presented by the length of a rectangle. Then we can change the size of each rectangle
depending on how many emails that person receives per day. It would be easy to
locate the employees that have receive the most emails. This is a bar chart. In fact
we could organise the bar chart by the quantity of emails, or order it alphabetically

6.4
Graphical Semiotics: Sensory Signals
163
by employee surname. In this example we are using size as the retinal variable to
encode the value of the quantity of emails received. Bertin described seven retinal
variables: location, shape, orientation, colour hue, colour value, texture and size
(shown in Fig. 6.7). Many researchers since Bertin have added to the list, and
included features such as curvature, intersection, intensity, motion velocity, motion
direction, ﬂicker frequency, ﬂicker phase, three-dimensional depth cues, etc. We
focus on the list from Bertin:
Location. Position and layout are important for any visual display. We position
our marks on the page, whether they encode meaning or not. There are obviously
many ways to present information on a space. Let us start with a scatter plot. The
points on the plot are positioned along a common scale [4]. The axis is linear and
the values are plotted perpendicular to the line. We can also plot several values
in identical yet non-aligned scales. An example of non-aligned scales is several
scatterplots of the same data. The ﬁrst showing the relationship between A and B,
then B and C, and ﬁnally A and C. The axis are identical but not aligned. We can
also consider non-linear projections of space. There are many map projections
which distort the layout of the land such to present it in a two-dimensional space.
Planet Earth is a sphere, yet is projected to two-dimensional space.
Shape. The symbol representing the information. This can be from simple geomet-
ric shapes to complex iconic representations, to abstract designs. Shapes should
be uniquely distinguishable. When navigating a city using a map, we should be
able to look at a key and then discover where all the landmarks are located.
The shape has a 1 to 1 mapping. One unique signiﬁer with a single associated
concept (the signiﬁed). However this can cause ambiguities. It is easy to get to a
situation where the symbol means many things, or there is one concept presented
by different symbols (perhaps because different developers have created similar
computing software). Why does CRTL  S mean save, and not search? How has
it become a universal signiﬁer? These symbols have been created by a developer
and are now conventions that are universally applied.
Orientation. If we have an analogue clock, then we use orientation to estimate the
time. Weathervane on the top of a building tells us which direction the wind is
coming from. This is explicit orientation, and is created by rotating the object.
Unless the object has a natural direction (such as a line with an arrow head) it
may not be possible to perceive 360ı of angle. Related to orientation is ﬂow.
By rendering many lines, all pointing in the same direction, we can indicate a
ﬂow.
Colour hue, value and saturation. There are several ways to consider colour We
can consider the primary hues of red, green or blue (the RGB model) add
transparency and we have the RGBA model. The Hue, Saturation, Value model
is a useful way to think about colour for design. We can choose the colour pen
(hue), how deep the colour is through how much ink we put down (saturation)
and how dark it is (value). Choosing the right colour combinations and colour
scales in a data-visualisation tool can be challenging. Tools such as ColorBrewer
can be useful to help choose colour combinations [5].

164
6
Graphical Marks and Semiology for Sketching
Fig. 6.7 Retinal variables from Jacques Bertin [1]. Shape, orientation, colour hue, colour value,
texture and size

6.4
Graphical Semiotics: Sensory Signals
165
Texture. Textures are created with different types of ﬁll patterning. This can be
created through points, lines, colour etc. We are not only noticing the type of
texture and how the pattern is formed, but also the perceptive colour and value of
the texture.
Size. Size is commonly used to present value such as the size of the bars within a
bar chart.
It is clear that each of the retinal variables have different properties. This is most
noticeable if we look at shape. A shape can be allocated a meaning (this is simple
semiotics, where the signiﬁer has a meaning). The value that we attach to the symbol
is a single meaning. Let us map people to symbols. Every person in our database
is presented on our plot using a unique symbol. One is a circle, another a square,
a star etc. While we can order the data by surname order, or by a random order,
however, there is no meaning attached to the order of symbols. Why should a circle
come before a square and then a star? Maybe we are thinking about the quantity of
edges could help us order these symbols. A square (quadrilateral) with four sides
comes before, a pentagon, before a hexagon, heptagon and an octagon. But, then is
a circle a high value or a low value. Maybe it is inﬁnity or maybe zero. What if we
add another shape to our list, then counting the edges would not help us organise
the shapes. While it follows that symbols can be easily selected, it is less clear how
they are ordered. For each of the retinal variables they afford different properties.
These properties are associative, selective, order and quantitative. Figure 6.8 shows
the properties which are explained below.
Association. The ﬁrst property is association. When we have a symbol or a colour
etc. can we ﬁnd similar items. With each of the retinal variables this is the case.
We can look for all the squares, or ﬁnd all the orange circles, or the textures that
look crossed etc.
Selective. If we have several retinal variables displayed on our plot, and add one
with a different value will we be able to select it? If so, the variable is selective.
Shape is not selective, as if we have several different shapes plotted on the screen
and add a different shape,it would be difﬁcult to select it. However with colour
we would be able to select it.
Order. Can we put the items in order? We have already presented that symbols are
not generally orderable, apart from some special types of symbol. Colour hue
is generally not orderable, because it is unclear what type of organization this
should take (there are several ways to organise colour), however colour value,
and the amount of blackness in the colour can be ordered.
Quantitative. Finally, it is really only position and size where we can perceive
quantity. Position is commonly used for many tasks, such as (x,y) position of
points on a scatterplot, and size is used for lengths of bar charts, for example.

166
6
Graphical Marks and Semiology for Sketching
Fig. 6.8 Each retinal variable affords different properties
6.5
Graphical Forms
We have now considered the individual marks, but as we discussed earlier (with the
Gestalt principles) we perceive the graphic images as a whole. Jacques Bertin [1]
in his semiology named these different data-visualisation forms as Representational
Styles and explained they could be classiﬁed as diagrams, networks or maps. Bertin
made this classiﬁcation in the late 1960s, Jerry Lohse asked people to classify
different pictures. Their results are similar to Bertin, but add graph-plots and
tabular presentations. Their experiment was recently rerun by Francis Williams and
Jonathan C. Roberts [10] who discovered that although many more types of visual
representation have been created we still acknowledge these general classiﬁcations.
In addition to these types we also add pictures, glyphs and composites. We give a
pictorial summary of different representational styles in Fig. 6.9 and explain them
below:
Diagrams show a process or a set of concepts. We can consider a set of pictures
that describe how to fold an origami swan as a diagram, or a schematic that
demonstrates the different types of rock inside of the Earth as a diagram. A set
of boxes and labels that show the process and steps of getting a bill through
Government is a diagram. Many highly abstract or artistic infographics could be
included here, because often they are simplistic visual representations of data.

6.5
Graphical Forms
167
Fig. 6.9 Different representational forms. Diagrams, networks, maps, graph-plots, tabular, pic-
tures, symbols and glyphs and composites, with examples for each

168
6
Graphical Marks and Semiology for Sketching
Networks. We classify any picture that shows connection as a network. Mathemat-
ical graphs where A is connected to B is connected to C, etc. is named a network
in this scheme. A picture of all the connections on an underground tube map is
a network, because it shows how the stations are connected and how to get from
A to B. We use the word network to describe connection rather than the word
graph. It would be possible to use the word graph instead because mathematical
graph theory which explains how nodes are connected together by edges, but
the general meaning of a graph is something that shows a relationship between
variables along axis at right angles. As such, we prefer to clearly separate
these different concepts by the terms networks (explicit relationships) and plots
(presentation of data relative to an axis).
Maps. When the image encodes real-world position data we call it a map. A picture
that shows how to navigate a city can be classiﬁed as a map. But also, we include
an X-Ray image (it is a map of the body), a ﬂoor plan (because it represents
something in the real world), distorted maps such as cartograms, choropleth, etc.
Graph-plots demonstrate relationships between two or more variables by plotting
graphic marks. It is possible to read quantitative values from the display. The
relationships are implicit because they emerge from the quantity of the points
being plotted (rather than explicitly as with networks). There are many names
for these plots, from scatterplots, line graphs, treemaps, histograms, box plots
etc.
Tabular. Much data comes in spreadsheets, and consequently the table of data
itself could be considered a visual depiction. Tabular visual depictions range
from Jacques Bertin’s use of the reorderable matrix [1] (see Fig. 6.10), Ed Chi’s
use of a spreadhseet methodology [3] which displays renderings of their data in
each cell, under different parameter conditions, or Ramana Rao and Stuart Card’s
table lens [8] which extends the functionality of a traditional spreadsheet where
the data in small cells is shown summarised and other cells can be expanded to
show the visual depiction larger.
Pictures. Photographs, pictures, scenes, models, dioramas, have a likeness of the
objects and worlds they are representing, such as, a rendering of a house,
photograph of people or sketch of a face.
Symbols and Glyphs. Symbols are used as marks within the other presentation
types, however glyphs speciﬁcally can be displayed on their own. They are
symbols that have multiple parts, each part can present a different value. Hermon
Chernoff [2] presented 18 values in a single glyph face. Chernoff’s faces encode
value by length of nose, shape of the face and curvature of mouth. Matthew Ward
provides a useful overview of different types of glyphs and how they can be used
in visualisation [9].
Composites. There are many plots and charts that mix and match these styles. It
is difﬁcult to be too prescriptive and separate all visual presentations into one
or other of these presentation styles. For instance, we can see network diagrams
that show how the backbone of the internet works, with the physical locations of
particular server infrastructure, a depiction that mixes network (connected data)

6.6
Graphical Encapsulation and Environment
169
Fig. 6.10 Photograph of a reorderable matrix that was on display at the Jacques Bertin exhibition,
at the IEEE VIS conference, 2014, created by Perin et al. [6]
with map (geographic information). There are many instances where the tabular
form encapsulates other information. In statistics we often see a scatterplot
matrix, where a tabular (matrix) encapsulates many plots.
6.6
Graphical Encapsulation and Environment
The ﬁnal part of the sketch is to think how it is going to be displayed, and how
are you to explain the context. Every image has a backstory, it can be used to set
the scene, make assumptions over the problem that the drawings are tackling, give
explanation over the ideas, and explain any conventions. Sometimes you will be
able to give this backstory by talking about the ideas. You could provide a written
report alongside the graphical sketches, so to give a little more information about
your decisions and thoughts. Here are some suggestions:
Draw a frame. One of our main goals of this book is to provide structure that
you can design interactive tools and systems. These could be data-visualisation
tools, or games or educational interfaces, whatever they are you will need to
display your tool in an interface. If it is on a desktop computer then probably your
interface will appear inside a window. It may be inside a tab of a browser window,

170
6
Graphical Marks and Semiology for Sketching
or take over complete control of the whole screen. If it is for a tablet computer
then the frame itself is not visually evident. When you are sketching you will
know the environment where it will be used. We suggest therefore that you frame
your drawings with a box that looks like a window. This then gives your picture
an immediate context. Observers can see instantly that it is a computer window,
and that everything inside is going to be shown. If you have many windows,
or many stages that the user needs to complete, then these may also need to be
drawn in a storyboard.
Add titles. While the Five Design-Sheet itself will have a title, it may be useful to
add some titles to individual parts of your sketches. Especially if you have many
storyboards, it would be best to appropriately label each panel in the storyboard.
Add annotations and labels. There are different ways to add labels to your sketch.
You could write some words and draw lines to the desired place (you are using the
Gestalt principle of uniform connectedness) or label some parts and then provide
a key to what they mean.
Highlight parts of interest. Where should the viewer be looking? What is impor-
tant in your design? Is it clear and are the important parts visually in the
foreground? This is the ﬁgure/ground Gestalt challenge. If the ﬁgure is not clear
in your sketch then make it more bold, or highlight it in some way.
Include a legend. Are lengths signiﬁcant? Are the acronyms understandable? Are
conventions clear? Perhaps use a legend to make some of this information clearer.
6.7
Exercises
These exercises help you to apply the knowledge of this chapter. Start by thinking
about different graphical marks, then how these information can be connected
together, and ﬁnally we suggest a group activity of considering Pierce’s three sign
modes.
Ex. 6.1 —
Symbols and shapes
In the chapter we introduced you to Chernoff faces. These are glyphs, where
different parameters of the design are mapped to values from the dataset. Different
parts of a face can present values from the dataset, aspects can depend on the data
values such as the length of the nose, width of the face, height of the face, width of a
smile, etc. A longer nose would mean a larger value than a smaller nose, or a wider
face is a bigger value than a narrow face. In this exercise you will create your own
glyph and use it to show different data values.
Consider you are creating a hotel website, and wish to compare attributes of
different hotels in a speciﬁc region using glyphs. For this exercise let us merely
consider three types of hotel. First, the Royal Georgian Grand, a big 5 luxury hotel,
with 300 rooms, Olympic sized swimming pool (50 m in length), large conference
centre, and a night room would cost £500 per night. Second the Shoreline Hotel

6.7
Exercises
171
a smaller 4 hotel, with 150 rooms, 25 m swimming pool, but with only a small
conference suite of rooms. Finally the Rainy Day Hotel, which has 20 rooms, and is
a budget accommodation for £70 per night, but does not have a swimming pool or
conference centre.
For this exercise you will need a plain sheet of paper and a black drawing pen.
1. We are not asking you to sketch a face, rather we ask you to sketch a simple
house. Make it from a square, include a door, and some windows with curtains.
Put on a sloping roof and a chimney. You could add some simple trees, some
bricks or some roof tiles, etc. This is your reference sketch.
2. Now you will sketch three separate houses. One to represent each of the Royal
Georgian Grand, Shoreline Hotel and Rainy Day Hotel. Start off by sketching
something that will demonstrate the quantity of rooms. E.g., you could use the
size of the whole house to be proportional to the quantity of rooms. Choose
another aspect of the house to demonstrate the price of the hotel (e.g., you could
use the size of the door). So far, you will probably have a square (to represent
the main walls) with a rectangle (the door) to represent cost. Choosing different
aspects of your reference house sketch, add the other variables of swimming
pool and conference centre. You will end up with three different sketches of a
building with different sized windows, doors, chimney, etc.
3. You will need to make your own assumptions over different amenities, distances
from beaches and satisfaction ratings, for each hotel, etc. Sketch solutions to
display the following data:
•
Value for money, based on stars, price and amenities.
•
Distance from the beach.
•
User satisfaction rating.
Ex. 6.2 —
Connecting items together
In this exercise you will consider different ways to use the symbols and create
sketches that demonstrate different Gestalt principles.
Consider the sketch in Fig. 6.11 that shows letters A, B, C, D and E. To prepare for
this exercise you will need a clean sheet of paper (such as printer paper) and some
pens. You may ﬁnd it useful to have pens with different colours.
1. Draw on the page the ﬁve letters. Now assume that A, B and C are one group
and D is grouped with E. Using any strategy, sketch some lines to demonstrate
that these items are grouped in this way. Do this exercise four times, each using
different strategies to group the parts together. (When you have done this four
times, see note #1 at the end of this chapter).
2. Again consider the ﬁve letters. Now make a sketch that explains that A and B
are moving upwards, while C, D and E are moving to the right of the page.

172
6
Graphical Marks and Semiology for Sketching
Fig. 6.11 Simple ﬁgure of
ﬁve letters, used in the
exercises
3. Again consider the ﬁve letters. Now make a new sketch that describes that A is
moving faster than B, and C, D and E are moving to the right of the page, but C
is slow and D and E are moving extremely fast.
4. Either adapt your previous task, or make a new sketch copying the position of
the letters A, B, C, D and E. Make it clear that B is slower because it is much
heavier than A, and that C is slow because it is being hold back by a strong
magnet.
Remember your sketches do not need to be works-of-art, they are meant to be
functional representations to explain the concepts. Using well placed lines can help
you to describe your thoughts effectively.
Ex. 6.3 —
Group activity – Symbological!
Peirce’s three sign modes can be a useful tool in a designer’s arsenal as they provide
a way to think about how information is presented to a user, see Sect. 6.3. However,
while an iconic sign (as an imitation of the signiﬁed object) can be straightforward
to determine, the indexical or symbolic sign may be trickier to deﬁne. This exercise
helps you to think about these ideas. It is a quick (party) game that can be played
with groups of four or more (even numbers work best) which we call Symbological.
To prepare to play Symbological, you ﬁrst need a dictionary of words. Either
you could use a published dictionary. such as the Oxford dictionary and the online
Wiktionary’s random word function. Or you could use index cards, with individual
words written on them. If you are working within a speciﬁc domain you may ﬁnd
that creating your own set of words is more useful. However, making your own
cards takes time to prepare and if you use it with the same group more than once

6.7
Exercises
173
they will begin to learn the words. Also, it inherently means that the person who
created the dictionary is unable to play (as they know what the dictionary contains).
Also prepare a set of sign cards. On each of these cards you will need to write iconic,
indexical, or symbolic. You want to have enough cards such that you can shufﬂe a
deck to make it difﬁcult to predict the next card. We suggest at least three cards for
each sign, nine cards in total. Finally you will need something to draw on, such as a
wall chart or (ideally) a large whiteboard.
1. Split the group into teams of two. The ﬁrst member of each team stands up and
moves to the whiteboard, we call this group the signers, the team members that
remain seated are called the interpreters. As a group, the signers draw both a
dictionary word, and a sign card. If you are using a common dictionary simply
open at a random page, and select a random word on that page. However, if using
a common dictionary, if the group collectively agrees that the selected word is
too abstract or complex, we suggest that a new word is picked. Once the word has
been selected, each of the individuals must draw a sign, of the type determined
by the sign card for the interpreter their team. The challenge is to create a sign
that is appropriate enough for the interpreter to correctly guess the word being
represented.
2. The team that gets to the correct word ﬁrst gains one point. However, as soon
as the word has been guessed, the other teams can challenge the outcome, if
they believe that the sign that has been drawn is of the correct type (e.g., the
person draws symbolic, when they should have drawn indexical). This activity
of challenging and defending is part of the learning process, encouraging critical
evaluation, and peer supported learning.
3. If there are no challenges, or once the challenges have been resolved the group
should spend a few minutes discussing why the sign was successful, and what
aspects of it reﬂect good practice. Once this has been completed, the signer, and
interpreter from each team should change places, and the next round of the game
begins.
If you have played this game a number of times we have used second variant of the
game which included another set of cards referred to as medium cards. The medium
cards contained a medium by which the sign has to be presented, for example, we
included “arm movements”, “drawing”, “noise”, and “dance”. For this version of
the game remove the iconic options from the sign cards.
Notes.
#1 The simplest way is to circle the elements together. You probably did this ﬁrst!
However, other ways are possible, such as to use symbols, lines to connect them
together, or colour to associate the same element.

174
6
Graphical Marks and Semiology for Sketching
References
1. Bertin J (1983) Semiology of graphics. University of Wisconsin Press, Madison/London
2. Chernoff H (1973) The use of faces to represent points in k-dimensional space graphically. J
Am Stat Assoc 68(342):361–368
3. Chi EH, Barry P, Riedl J, Konstan J (1997) A spreadsheet approach to information visualiza-
tion. In: IEEE symposium on information visualization, pp 17–24
4. Cleveland WS, McGill R (1984) Graphical perception: theory, experimentation, and applica-
tion to the development of graphical methods. J Am Stat Assoc 79(387):531–554
5. Harrower M, Brewer CA (2013) Colorbrewer.org: an online tool for selecting colour schemes
for maps. Cartogr J 40(1). doi:10.1179/000870403235002042
6. Perin C, Goc ML, Vozzo RD, Fekete JD, Dragicevic P (2015) DIY Bertin matrix. In:
Proceedings of the CHI workshop: exploring the challenges of making data physical, Seoul
7. Pind JL (2013) Edgar Rubin and psychology in Denmark: ﬁgure and ground. Springer Science
& Business Media, Switerland
8. Rao R, Card SK (1994) The table lens: merging graphical and symbolic representations in an
interactive focus+context visualization for tabular information. In: Proceedings of the SIGCHI
conference on human factors in computing systems. ACM, pp 318–322
9. Ward MO (2002) A taxonomy of glyph placement strategies for multidimensional data
visualization. Inf Vis 1(3/4):194–210. doi:10.1057/palgrave.ivs.9500025
10. Williams FC, Roberts JC (2013) Classifying visual knowledge representations: 23 years on.
In: Proceedings visualization, Atlanta. IEEE, poster presentation

Chapter 7
Creative Thinking, Creativity and Ideation
Abstract Especially for sheet 1, you need to articulate many alternative ideas. But,
where do design ideas come from? How can you create something novel? What
helps you be creative? All these are questions that psychologists, philosophers,
artists and inventors have pondered in the past. While there may be no single answer
to all these questions there are things that can help generate creative ideas. This
chapter explores creativity and ideation and provides a list of techniques to help you
get started with thinking up new designs.
7.1
Aim to Generate Many Ideas
The ﬁrst sheet of the FdS helps you focus your mind on the challenge and generate
many ideas. On this sheet you will sketch different possible concepts that will fulﬁl
your task. These sketches act as quick preliminary drawings and your aim is to
generate lots of different ideas. We suggest that you articulate about 20 to 30 ideas.
In your mind, you may be having many doubts, or are thinking several questions,
such as why do you need to articulate many designs, especially when you actually
think that one design is the right one, and how do you think up so many designs?
There are many beneﬁts to looking at several alternative design ideas. It helps you
think through the problem, discuss in your mind different potential ways, maybe
argue in your mind as to which is the better design. You can discuss and present
these ideas to other people and exchange your ideas. A solution that you think is
right, someone else, however, may think that it is not suitable. In addition, one of
the challenges with assuming the beneﬁt of one design (especially at the start) is
that you may miss potentially good design ideas that would be better. Linus Pauling
(the Nobel prize winning chemist) said:
The way to get good ideas is to get lots of ideas, and throw the bad ones away. Linus
Pauling [4].
This is a twofold strategy. First you think about many different concepts and
second you sift through them to make a decision whether to keep, delete, change,
improve or reﬁne. Therefore being creative is not only about thinking up different
ideas, but it is also about being a critical thinker. You need to use your foresight
and work out how these ideas would be implemented and how they could work in
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_7
175

176
7
Creative Thinking, Creativity and Ideation
practice. In your mind you can think how they will be used, who will use them, and
how they will use the tools or techniques that you create.
But how can you go about thinking and generating many ideas? Indeed, it still
seems a daunting task to generate many ideas, and in fact, you may still be thinking
that you are not good at lateral thinking. So, to answer these questions and to allay
your fears at the start let us consider an example scenario:
Tour guide Scenario: Consider that you work for a tour guide operator. You
have been given the task to create a visual interface that would display the amount
of rainfall from different locations. Your objective is to arrange tour for ramblers,
where you wish to plan the best set of locations around the world, based on
the weather conditions at those locations throughout the year. Your data contains
location information of interesting places to ramble, and the volume of rainfall over
the past 40 years.
If we think about the data that we have available, we can consider three aspects
to this data: (i) location information, (ii) the quantity of rainfall and (iii) time. In
particular, there are different ways to consider time. We can regard time as how
it progresses over a particular calendar year, or we can think how one month has
changed over the course of 40 years. In this scenario speciﬁcally, we will need to
examine the rainfall over past years to help us predict what the weather would be
like in a given year, on a given month. A visualisation tool could focus on each
(or all) of these three aspects, consequently there are different ways to display the
data. And this is where our alternative designs can come from. Not only do we have
different ways to display the data (from bar charts, line graphs etc.) but we have three
different emphasis (location, rainfall, time). In addition, we can tackle the problem
by using modelling and simulation, intelligent algorithms, or visualisation.
Modelling and simulation techniques could help us to forecast what the weather
would be at a given location and time. While we could use this to generate a more
accurate understanding of what the weather would be like during the tour, this
solution may have problems. For instance, weather simulations work well for the
near days or maybe weeks ahead and less accurate over longer times. But more
importantly, we are not really solving the problem through these thoughts but rather
creating a new one! This solution merely gives us more data to work with. We still
need to investigate ways to work out the tour routes. Instead, our goal is to narrow
down the potential set of possible routes, such to make a decision over the best
possible tour, rather than to add more data.
An intelligent algorithm could be written to work plan the best tour for us. Let
us stand back for a moment and look at the problem. The ﬁrst thing to notice is that
there would be no one correct answer. We would not actually know what the weather
would be like at a given location at a speciﬁc time of year (we would only have an
estimate, based on previous information). In addition, our overarching goal is to
make a trip that would be enjoyable, memorable, practical, leave the participants
wanting to come back next year and probably not be too expensive. Practicality is a
useful condition to add. For instance, we would not wish the ramblers to travel back
and forth between venues that were far apart. Indeed it would be more practical

7.1
Aim to Generate Many Ideas
177
to (say) go to one location and then walk to another, stay there for a night and then
walk to another location etc. Maybe a two-stop or three-stop tour would be practical,
whereby a coach takes the participants from between three close cities. Probably, the
more cities that were visited the greater the cost would be for the group.
We also notice that not only is a routing problem, but there is also many potential
answers. In fact, no answer would be perfect. And no answer would be wrong,
although some answers would be less than perfect, impractical and probably too
expensive to attract any participants. So to address the tour guide scenario we
would need to look at different possible routes and work out what we think would
be best. We can view this problem as a specialist form of the travelling salesman
problem (TSP). The travelling salesman problem is to work out the shortest possible
route, that moves from one city to another and visits each city exactly once. In
our scenario we are interested in visiting a location exactly once, but in the best
possible way to achieve the nicest weather in each location. This is therefore an
optimisation problem. One way to solve this challenge would be to create some
code to implement a decision heuristic. In this type of problem solving the method
is not necessarily going to produce an ideal or perfect result, rather it is sufﬁcient
for the needs of the project and immediate goals. This software would load the
data and decide on the best order for the ramblers. While we could possibly code a
heuristic to ﬁnd the best solution, in this book we are focusing on visual methods
and so we will not focus on the optimisation solution. What the heuristic function
does give us, though, is a way to make a decision as to whether one route is better
than another and that the tour would be good enough (if not exactly perfect). Let
us ignore optimisation functions and simulations for this scenario, focus on the data
that is available for us to use focus on a visual solution. Let us assume that the user
will be the judge af which route would be best, they would make the decision based
on the visual display and controls that are presented to them, it will be a human
being who will choose the right tour route, rather than a computing heuristic.
There are several visual solutions that should spring to mind. Merely focusing
on the three parts of the data we can consider three principle visualisation types that
could be used. Each emphasise different aspects of location, rainfall and date. The
sketches in Fig. 7.1 show how the ideas can be created. Starting with designs that
focus on location (1) then about date (3), and ﬁnally rainfall (3).
1. Focus on location. One clear visualisation would be to plot the geographic
locations on a map. The map view would show each sporting location. Perhaps
the regions could be coloured by the quantity of the rainfall. However a challenge
with this is that we would be only displaying the weather at each of the locations
at a speciﬁc date. Although a solution could be that we animate the date variable
such to run through the data and colour the locations per rainfall per the current
animated date.
2. Focus on rainfall. We could create a bar-chart of rainfall. Each bar would
represent a speciﬁc location, and the length of bars could show the quantity of
rain, with the longest bar representing the most rainfall. We could either display
12 bar-charts (one for each month) or we could put the data of several months on
several bars next to each other.

178
7
Creative Thinking, Creativity and Ideation
Fig. 7.1 Sketch showing three focuses that could help to inspire different views. To explore the
tour guide scenario we look to ideas focused on location, other concepts focusing on date, and
ﬁnally on rainfall. It is clear that not only can we produce visual depictions focusing on one aspect,
but an interface can be built that integrates two or three of these concepts. Producing a multiple-
coordinated view interface

7.1
Aim to Generate Many Ideas
179
3. Focus on the date. We could use a calendar view, where different zones in the
calendar are mapped to rainfall. But the challenge here would be to create a
strategy that would allow many locations to be overlaid on a month (which could
be done through interaction, animation or by dividing the month into several
segments). Another suggestion would be to use a timeline. Such a view would
depict the quantity of rainfall over time. A continuous lines could be used to
show how rainfall increases during winter and then decreases during the summer.
Maybe each of the locations could be displayed in a different coloured line. By
making the timeline depict the data over many years, we could also see a historic
view of the data. The name of the location could be presented in a legend.
Even from this simple challenge, and very simple dataset, we can see that there
are many different alternative designs. It is also possible to see that there are many
design variations that can be applied to each of these visual forms. We can use
different colour ranges to demonstrate the data. We can start to use several chart
types together and have a bar chart next to a map interface, such that one can
update the information in the other view (choose a location and the rainfall of that
location is displayed in the bar-chart). In addition, we can start to consider different
types of interaction. From pull-down menus to control the interface, or drag-and-
drop functionality, or a pen and gesture interaction (especially if the application is
running on a tablet).
We can also see that no one solution is perfect. While each of these three types of
view focus on different parts of the data (on location, rainfall and time) it would be
difﬁcult to understand what route would be best. In fact, we have not really provided
a tool that could be built to answer the question. It would be difﬁcult to make a tool
from these designs that would help the company plan their tours. Certainly it gives
us an understanding to the problem, and we are heading in the right direction. But
we need to delve into more of the subtleties and nuances of the challenge.
Let us take the tour guide scenario a little further. In particular we should consider
(and further imagine) more detail about the problem domain. We remember that
the original objective is to develop a rambling tour. We can start to make up the
backstory to this scenario. We could assume that the phrase “You have been given
the task” implies that you have the right skills to build the tool. We can also assume
that it is important that the participants enjoy themselves. In fact, as the travel agent,
we would want them to enjoy the trip such that they tell their friends about the
tour, or go on another one that we organise. Yes, the tour could be educational, but
ramblers probably focus more on scenery and the outdoors rather than having guided
tours around touristic sites, per se. They are people who probably would still have
fun in poor weather, but would prefer better weather to ramble. But they would like
to have local knowledge and be guided on the routes by an expert. In other words,
we can release the pressure on us ﬁnding a place with the right weather. So what
other important (maybe un-written) aspects need to be considered? Transporting the
group around different venues would also be a signiﬁcant factor. The use of buses,
trains or planes would determine where and how the trip is organised. Moreover, the
end-user of the tool is probably ‘you’ or members in the company. We could imagine

180
7
Creative Thinking, Creativity and Ideation
that the tool would be used also to develop other types of tours, maybe bird-spotting,
trips on trains, etc. It is clear that the participants on the tour would not wish to make
a trip that jumps huge distances in a short period of time. They would not wish to
travel from London to Paris and back to Wales in a week, rather they would wish
to focus the tour over a smaller geographical distance. Consequently, location and
route-planning are two important aspects to making a good tour and the end-users
(in this case) are experts – they are travel agent employees, rather than being the
general public.
From this backstory information, our sketches now start to focus on speciﬁc
aspects of develop tours in a smaller region, see Fig. 7.2. We can focus on different
layouts of the route information, from geographic routing to abstract and linear route
visual depictions. We can mimic rectangular transport maps (such as the London
Underground map). We also may wish to have some interaction, to determine the
possible transport options (e.g., plane, train, coach, ship). We can also start to think
more about the user-interface components that would be required for this tool. Such
as how to determine transport, cities of interest, alternative routes etc. as well as
enabling the user to see potential implications of the local weather, throughout the
year.
From the tour guide scenario we can hopefully start to think how we could create
20 to 30 design ideas. We started with simple ideas and then elaborated them. We
mixed together ideas to generate something new. We thought more deeply about
the problem, and tried to ﬁll-in some of the missing detail. We started to make
assumptions. We put ourself into the shoes of the rambler and took ourselves on a
rambling tough holiday that had been created by our tool. We started to empathise
with the product and see the challenge not only from a users point of view, but
someone who would beneﬁt from the tool (the rambler themselves).
Hopefully it is now clear that generating multiple designs is possible. It helps you
work through the problem and think through the challenges from different angles.
You may think that the rambling challenge is easy and that it would be easy to create
a tool to plan such vacations. Indeed many challenges may be seen as being more
complex than our tour guide scenario. They may contain many more parts and stages
to them. Indeed multi-stage problems are certainly harder because there is no one
clear solution to the challenge. It may need more thought and research before the
ideas ﬂow, and you would require deeper thoughts to create new ideas. Later in this
chapter we will look at different techniques to help to inspire you. But for now, let
us summarise some key lessons learned.
•
Sketches are not perfect! We have made mistakes, you can make mistakes. Do
not worry if you do make mistakes. When drawing Fig. 7.1 it would have been
better that the position of the sketches labelled (d) and (e) were swapped. This
would mean that the arrows would not need to overlap. And it would potentially
be clearer and deﬁnitely neater. But this is what happened when we made the
sketches, and so we left them as they are.
•
Commit to the page, and keep going. When we made these sketches we did
so directly with a black ink-pen, and sketched them as they came into our mind.

7.1
Aim to Generate Many Ideas
181
Fig. 7.2 Continuing with the rambler tour example, we investigate different ways that the routes
can be visualised

182
7
Creative Thinking, Creativity and Ideation
When we had committed to drawing a line, we kept going with our line. In fact,
this is a good principle – just keep going with your sketching.
•
Use any mistakes to your advantage. You could draw over them, make them
bigger, make them into an emphasis etc. In fact, mistakes and errors can be
actually helpful to engender new ideas. The mistakes may be interpreted as
meaning something and hence could help you to create something that is new.
•
Spend just enough time on the sketch and don’t ﬁddle. It is important to spend
enough time on the sketch and no more. The sketches are meant to be illustrative,
and are used to help you articulate your thoughts, they are not works-of-art, but
are purposeful.
•
Use emphasis appropriately. Notice also that we have not coloured everything,
but have used colour and shading to empathise different aspects of the designs.
We have labelled some aspects, but left others without words. So include enough
text and labelling Some text is going to be useful to help you remember what you
were doing, and also to help others interpret your ideas.
•
Start with an idea and systematically work through different potential
solutions. As you can see from our sketch of an answer to the tour guide scenario,
we started with three principle ideas and then started to expand upon alternative
potential designs. We systematically worked through different ideas.
7.2
Telling a Story with Sketches
It is good to explore all possible concepts at the start. You can reason about that
design and predict how the design could be developed, used and applied. While
one design may be clear to you, it may not be clear to others. So, by sketching the
idea you are able to work though the design space and therefore prove, not only to
yourself but to others too, that the design space has been comprehensively explored.
While we say that we are suggesting you create 20 to 30 initial designs, each of
these sketches are not complete. They are not fully explored. Let us name them mini
ideas, because they are only partially complete. They are thumbnails and draft ideas
sketched quickly. In fact, some of the sketched drawings you do may be actually
very ‘sketchy’ and may have an unﬁnished appearance. They merely reﬂect the very
start of an idea that you have in your mind.
Let us consider that your drawings are conversations. This is sensible, because
we often talk about the sketches as being aids for your storytelling. When we
start an oral conversation with a friend we need to both understand the context,
introduce the characters and explain what happened to them. However, it may be
that we are unable to ﬁnish the sentence. Our mind blanks out and we cannot
express what we are thinking. We stutter and start a sentence, stop the words,
try another few words etc. Whatever we do, we cannot express the right words
in the right order, to create the descriptive phrase that we require. It may be that
our mind actually is clear over the ideas. And we can clearly imagine the nature
of the topic that we are trying to express, but the vocabulary just won’t appear in

7.2
Telling a Story with Sketches
183
the right order. With such a conversation, it may be that your friend actually does
understand what you are expressing. Sometimes our conversations are completed by
the person we are speaking with. In the art of conversation anticipatory completion
is achieved because each of the participants know the topic, the context of your
conversation and can predict what you are saying. Our brains are already working on
the punchline whilst the story unfolds. While interaction in this way is useful to help
the conversation to progress, we do acknowledge that it also can be annoying for the
speaker and sometimes the involving participant makes the wrong assumption and
jumps to the wrong conclusions.
In a similar way, we are using the sketched page as the way to communicate our
ideas. They ﬂow from your mind onto paper. In a conversation, it may be that you
stutter in your communication. On page, you may also stumble. It may be unclear
how you should draw lines to express what is in your mind. Starting off can be
difﬁcult and many people hesitate to draw. They think it may be wrong or may be in
the wrong place. But you need to overcome these fears and worries, to just start the
best way you can. Another problem perhaps is that while you do have an idea you
are unable to fully articulate it in a drawing. You may draw a few lines, then draw
some more, look at what you have drawn and want to improve it, or to start again
thinking that it is wrong and does not express what you are thinking. It may be that
after adding other concepts to your sheet of paper that you can go back to this initial
idea and extend it and make it into something that may actually work. It becomes
more complete as your mind works through the problems.
Another reason to articulate many solutions is that problems change over time.
It may be that what started off as a simple problem, is now more complex.
There may be many reasons why the problem changes, perhaps one of the skilled
workers or colleagues left, or maybe your computing infrastructure was upgraded,
or perhaps you ﬁnd that the challenge has already been implemented by someone
else. Whatever the situation, something has changed. Consequently you may need
to go back to your notes and look at different solutions to the problem. If you had
not articulated the different ideas then you would have nothing to fall back onto. But
by articulating many different ideas, you should be able to take another look at your
ideas and work through other solutions, and make produce innovative ideas.
We use sketching to tell a story. But what story are we telling? Much artwork is
narrative art. A couple looking into each other’s eyes, tells a story of two people in
love. A lion running towards some meat, tells us that the lion is hungry and not to get
in his way. A group of people laughing together with glasses in their hands, shows
friends having an evening together relaxing. People in a car, with windows down
and sweat pouring off their brows, tells us that it is a hot day and they maybe going
on their vacation. A family at a beach with ice creams in their hands says that they
are now on vacation. We can tell a lot from the images we see. Our minds will try
to work out the situation and we will make assumptions. We have already discussed
how symbols and signs can communicate different meanings, see Sect. 6.2. Items
that are close together seem connected, or items that are in a continuous line appear
to be organised, etc. But while these demonstrate how individual parts ﬁt together

184
7
Creative Thinking, Creativity and Ideation
and can be interpreted, telling stories is more about the whole page, or the whole
image, and how small nuisances ﬁt together.
We can tell a lot from the picture. In our minds we can ﬁll in the gaps of the
story. Let us imagine a picture of a man and women together. The darkness of the
picture tells us that the scene is held at night. We may also be able to see if it had
rained. Are there wet puddles on the ground? The location, between buildings, may
tell us that they are walking home from a concert. But are they happy? Are they in
love? How close are they walking? The closer they are walking, perhaps the closer
they are as a couple. Are they moving their hands around, perhaps jumping? If so,
they may be happy and content. If they are walking with low arms, look like they
are moving slowly they are possibly upset.
What are your sketches telling someone? What do they convey? Do they
communicate quality? Do they say that time and effort have been put into this
work? Do they express good practices and that you have considered all potential
ideas as fully as possible? In a similar vein, we make snap judgements and quick
decisions when we meet someone for the ﬁrst time. Are they wealthy, do they like
fashion, are they artistic, are they fun to be with? We make quick decisions and
snap judgements Likewise when someone looks at your sketches they will make
similar quick decisions over the quality and worth of your work. They will make
snap judgements to your ideas and start to assume how much effort you have placed
into the work. If they seem that the work was only achieved ﬁve minutes before
you met with the client, then they may assume that you do not care about the work
and that you are not interested in delivering well-considered, well-crafted pieces of
software. In one respects this is unwritten communication. It is not really about the
explicit marks that you put on the page, but it is how they are used and how they are
formed.
Messy sheets of paper, ink blotches, creases in the paper or holes due to an
overuse of water used for colouring or an excessive amount of rubbing out, gives
a bad impression. The observer will instantly think that this looks untidy and start to
make assumptions that your work and your ideas are similarly chaotic, confused or
untidy. There is clearly a difference between being messy and being artistic. Often
(perhaps unwisely) there is a generalisation that artists are untidy. This is a serious
exaggeration and whether it is true or not, it is not an excuse for being messy and
unprofessional. The work that you create tells a lot about you and in turn, this tells
the viewers about the quality of the ideas. If it looks neat and clearly laid out, then
the observer will have a positive feeling about your work.
There are many traits that your sketches should be communicating. In fact, clients
and/or teachers who will perhaps assess your work are bound to look for signs that
you have spent time and attention to the work. They will look for evidence that
you your ideas have developed, that perhaps you are proposing incomplete ideas,
or partial ideas, ideas which include interactive or temporal components, equivalent
ideas, and that you have considered unworkable designs. Here is a list of traits that
your sketches should be communicating:

7.2
Telling a Story with Sketches
185
Care and attention to detail.
Do the sketches communicate quality. Do they look neat? Are they well
organised? Does the work provide a good ﬁrst impression?
Comprehensive coverage of ideas.
Is it clear that you have covered all the design ideas. We suggest that 20 to 30
designs are created, have you sketched many different ideas and are they clearly
presented.
Development of ideas.
Is it clear that you have developed ideas from initial stages, and that the later ones
are more complete and detailed? Perhaps the earlier sketches on the top left are
earlier ones, whereas those on the bottom right are the later ones. Is it clear how
you have laid out the page of ideas?
Incomplete ideas.
Are there incomplete ideas? It is ﬁne to have ideas that are incomplete and not
complete, because they could be completed at a later stage. However, is it clear
which designs are complete, and which designs are incomplete?
Parts of an idea.
It is good to demonstrate individual concepts. These may be individual critical
components to the design. In fact, it is useful to articulate and iterate through key
components of the design. But is it clear that the reader understands that these
are only parts of an idea? Can they work out which sketches are complete and
which are only parts of an idea?
Temporal aspects of the design solutions.
Especially if you are designing a new user-interface or a data-visualisation tool,
you will need to communicate how the user will interact with the system. And
consequently explain the result of that user-interaction. How does your design
illustrate the temporal nature of your design? Is it clear to an observer how a
user would interact with your tool, and what result would happen when they do
interact with it?
Equivalent ideas.
Many of the ideas will be equivalent, in that any of the ideas would be ﬁt for
purpose. Is it clear that some ideas would be better at solving the problem and
others worse? Does it express that many designs are equivalent?
Unworkable/impossible ideas.
Some ideas are not useful. They are preliminary ideas that in fact would not
solve the problem. Does your design make it clear which ones are impossible
designs, and which could be possible? If they are possible solutions, then you
could consider how they would be made into something that would be suitable.
While it is good to understand the underlying story that your work is communi-
cating, we need to ask how you can tell an appropriate story. We can use space to
demarcate one unit (one idea) from another, or we can put a circle around each idea.
Each of these techniques would say a similar message – that there are individual
parts of the design. Perhaps each of these ideas are different interfaces, or may
be they are stages in a storyboard, which tells how the user can interact with the

186
7
Creative Thinking, Creativity and Ideation
tool. There are different design elements, and many concepts to communicate. There
are clearly different design elements that will allow us to communicate a positive
message. These include, but are not limited to the following ideas:
•
Clean lines and marks. Putting lines that look deliberate can help it look neat
and tidy. Although they are still drawn by hand and may not be exactly straight,
they give an impression of conﬁdence and knowledge of what you are doing!
•
Clear structure and organisation. Especially on sheet 1, it should be clear that
there is a ﬂow of ideas from the beginning to the end of the page. Use space
to separate ideas, rather than using lines. In fact, use lines sparingly because
they merely add confusion. Using space, you are encoding the Gestalt separation
concept: things that are different are separate, things that are similar are close
together. If you are developing lots of interface designs, then each interface could
be enclosed in a rectangle (which would mimic a computer window or frame),
but individual concepts do not need to be placed within rectangles, because it
would start to look too busy.
•
Limited use of effects. It may be good to underlying or make bold some of the
main labels. But keep colour, underline, arrows and other effects to a minimum.
Lines could be used to make effects, such as water around Islands can be sketched
as wiggly lines, or dashed lines to show a button being pressed, or radial lines to
represent movement and action.
•
Labels and annotations. Labels and annotations can help. For instance, in
sheet 1 you may need to label the three important ideas, that will then be
developed on sheets 2, 3 and 4. You could label these as 1
2 3 . Arrows could
be used to enhance the sketches and show how movement may happen.
•
Add legend or keys. Sometimes it is useful to use acronyms. If it is not clear
what these mean, then put a key somewhere that will describe these acronyms.
It may be useful to cross-out some ideas that are not workable. Put a single line
through them to indicate that they have been considered by they do not fulﬁl the
goals.
7.3
Idea Generation: And Getting in the Right Mindset
So how do you think up new thoughts? How can you think through the problem and
consider new ideas? Where do ideas come from? How can you think up ten, twenty
or a hundred ideas? In fact, how do new concepts get born? Unfortunately, there is
no single answer to these questions. We cannot give you a method that is guaranteed
to create new ideas. However there are several techniques that can help you think
through the problem and consider new ideas.
Steven Johnson’s book “Where good ideas come from” [10] presents many ideas
of where the ideas come from. He says “it is a slow process . . . a slow hunch”. We
often hear that someone had a eureka moment. However, while that single moment
in time allows us to understand something is possible, we should focus more on

7.3
Idea Generation: And Getting in the Right Mindset
187
the connections and associations of ideas that our mind has had running up to that
event. We should think about the networking, chance meetings and discussions in
the corridors with several people that has provided various ideas in our minds.
We should think about our knowledge and the things that we have learned and
read over the past few years. We should think about the time spent relaxing and
ruminating over different ideas in our heads. We should focus more about our
historic happenings and thoughts, rather than the eureka moment itself!
So are there any techniques that we can use to help us consider different ideas.
James Webb Young’s [23] small but excellent book, presents a clear technique for
producing ideas (see Fig. 7.3). He suggests ﬁve steps:
Gather materials.
Get all your materials together. Both speciﬁc and general. Start to organise and
index the material. Make a scrapbook or put them together into a folder. This
is good advice. It is extremely important to gather all the material that you
need. Doing the necessary research, background reading and understanding the
problem domain will help us understand the situation. We will not only realise
how to go about solving the problem but we will know what other ideas have
been done before. Then when a new idea comes into our mind, we will actually
know whether it is a new idea, or not.
Organising all your notes will help you retrieve them when you need to. In
fact, with today’s computers we do not need to rely on our memory to remember
all the facts, but we can store our notes electronically and then use online search
functionality to ﬁnd the notes when we need them. Understand what notes and
information you need to store. If you are doing some research on a topic and
collecting many references then ﬁnd a tool that will store PDF versions of papers
and their citations. If you are mainly taking notes, urls and other thoughts then
use a cloud based note taking tool. Some note taking tools also include OCR
software that interprets notes from photographs or scans of pictures, which also
can be searched.
Think.
Try to make connections with your ideas. Write down every possibility on sheets
of paper. Thinking through the challenge is an important step. We have already
discussed thinking through problems and problem solving in Chap. 3.
Relax.
Make sure that you take some breaks. Perhaps go for a run, take a walk or visit
the gym. Move around. Watch a ﬁlm or some television. Not only being prepared
and thinking through the problem but the act of relaxing is an important skill to
learn when thinking creatively [20]. We need to be able to relax and forget about
the challenge for a moment. In fact, it is often through relaxing and thinking of
other thoughts that our mind starts to work out solutions and make connections.
We hear people say “let your subconscious mind sort out that problem” meaning
to mull over the ideas and concepts to see how things can be put together. Sleep
can also help us in our learning. By sleeping on the ideas your brain starts to
organise the ideas and concepts; consequently the concepts you have learned
become clearer [13].

188
7
Creative Thinking, Creativity and Ideation
Fig. 7.3 First we should gather all the resources that we need, we need to be organised and put
them into order and categorise them. Next we should think how ideas connect. It is important
to relax such to allow our subconscious to think through ideas. Hopefully new ideas are formed.
Finally we need to think about the ideas we have created and rework them appropriately

7.3
Idea Generation: And Getting in the Right Mindset
189
Ideas appear, write them down.
Carry a notebook with you at all times. Make sure you have something to take
notes whenever and wherever you are located. Put a notepad by the side of your
bed, so that when you wake up you can immediately put the ideas down on
paper – so that you do not forget those ideas.
Rework.
Adapt the ideas. Fine tune them. Rework them into different ideas. Expand and
even contract the ideas to strengthen them. Best ideas are those that have been re-
worked and evaluated and worked again. They have been reﬁned by time. Ideas
mature and develop over time and you become more clever at ways to describe
them to other people after explaining the concepts a few times.
James Webb Young’s method is clear, but is less straight-forward in practice. The
process somewhat assumes that the ideas merely appear. Such ﬂashes of inspiration
can be hard to ﬁnd. In practice ideas do not just appear, rather they become realised
because of hard work and determination, and because we have a deep understanding
of the domain. We need to make connections between several concepts and draw on
a wide variety of skills and knowledge. Therefore having an excellent knowledge of
past ideas, a good understanding of the end-users, and the environment where the
software will run, will enable us to create the best creative ideas. Often the point
of noticed inspiration, the eureka moment, will creep up on you. But if you do not
have the deep knowledge then it will be difﬁcult to know whether it is a good idea
or not.
So ideas are formed though your own experience and knowledge, but can be
reﬁned through connections and conversations with other people. It can be very
productive to talk and discuss your ideas with other people you trust. The act of
speaking about your ideas forces you to articulate the concepts in a way that will be
understood by others. They can help you make sense and organise the ideas in your
head. They may be able to adjust your direction and stop you from going down a
blind avenue. This is where the role of a mentor is useful. The adviser, supervisor
or coach can assist you to focus on the ideas that matter. With a few positive words
they can encourage you to continue and help to assist you though a mental blockage.
Good mentors will assist you in your learning, development or solution ﬁnding.
They will not give you the answers (or necessarily push their viewpoints) rather
they will lead you onto the next stage in problem solving and design.
In Sect. 3.10 we presented that to be effective in creativity we need to have the
right attitude. We need to have the right mindset to not only be persistent in the
pursuit of our goals, but also to spend time and effort to understand fully the domain.
Sure it will take time to put the ideas down on paper, but we need to also realise that
sometimes we must throw ideas away and start again. But we acknowledge it can be
difﬁcult to throw ideas away. We get attached to our work, and the time and effort
that we have put into the work can be signiﬁcant. However, if you decide that they
concepts will not be ﬁt for purpose, it is much better to realise this situation early
rather than later. At the early stage all you have created are sketches and concepts,

190
7
Creative Thinking, Creativity and Ideation
whereas in the later stages you would have spent time implementing unsuitable
tools. Sure drawings take time to create, but not as long as performing a more in-
depth implementation.
So, what is the right mindset anyhow? Well, a good creative mindset is something
that will help you be creative. Your mind is personal to you! So it is actually difﬁcult
for us to say what aspects help you become more creative. Your situation and
problem domain is individual. However there are some states of mind that do help
most people be more creative:
Have curiosity.
Ask people about their design ideas, ask them how they did their drawings. Look
at different art pieces and try to understand the structure, methods or techniques.
Look at design ideas and try to work out how it was put together. Try to learn
new techniques. Try out different ideas on paper and try to explore different ways
of doing something.
Willingness to forget and start again.
This is sometimes very hard to do. We may need to impose mind over matter,
where we need to force ourselves to move on, and to realise that while we had
put a lot of effort into something it was time to move onto something else.
Know when it is suitable to stop working on the idea, and change to another
idea completely.
Self belief.
Believe in your own abilities. That your ideas are suitable, and that you have
the right skills to perform the task. Self believe is needed when you start off
a project. It can be very difﬁcult to start something because you do not know
where the ideas will take you, or what constitutes a useful solution. You may be
worried that your ﬁrst ideas are wrong. They may be wrong, but believe that you
can either make them right, or ﬁnd other ideas that will work.
Suspend any doubt.
Push away any doubt in your mind. You have the abilities and skills to do the
project and implement the solution. Do not worry or doubt the designs you are
putting on paper. They may be wrong, or right, it does not matter – especially at
the early stages.
Persistent.
Keep going with the ideas. Keep trying to do better sketches. Your skills will
improve. It is a matter of persistent learning and bettering your techniques. If
you have to do the work again, then sure do it again. But be careful that you do
not spend all your time redoing the work, because you might end up spending all
your time on re-working the ideas, rather than ideating new concepts.
Be joyful.
Having a cheerful attitude can really help you to be creative. Being positive about
the work and the sketching can help you create new ideas. on the other hand,
being negative about sketching, and against sketching itself can be detrimental
to you creating good work. You need to turn your mind around and be positive
about your task.

7.4
Encouraging a Creative Mindset and Environment
191
See fun in the task.
Like being joyful, it is best to have fun with your task. even being playful with the
ideas can help. It can help you open your mind to new ideas. Play around with the
ideas on paper, try to invert ideas, turn them around, make them into something
that will not work, such to try to ascertain the breadth of possible concepts (from
those that clearly are unworkable, to those that will be suitable).
7.4
Encouraging a Creative Mindset and Environment
How do we get the right mindset? Many of the aspects boil down to our cognitive
state of mind. Often it can be a situation where we need to change our own mental
state. For example, perhaps by doing a few simple things we can help ourselves be
more happy. If we are feeling better with ourselves, more conﬁdent and in a happier
mood, then we may be more creative. For example, researchers have found that there
is a link between our perception of other people after holding a hot cup of coffee.
That we view someone as having a warmer personality. In other research, people
were more likely to give a gift to someone else rather than buy one for themselves
after holding a cup of coffee [21]. It is clear that some of these techniques are
being used for marketing products [12]. Retail outlets realise that if we are happier
shoppers (and feel warmer) then we are more likely to buy more products and spend
more money in their stores. This is why some shops are giving away free coffees.
Or have bread ovens, such that the smell of fresh bread excites our senses and gives
us a warm feeling throughout the store. We can easily think that the product is fresh
and tasty, even without eating the product, by our expectations, which could be by
spell, or even cleverly used words. Much of how we taste sometime is about our
expectations for that experience. If we expect the food to taste nice (it is a well rated
restaurant) or labelled as “sweet and juicy” then often it will taste nice and will be
sweet and juicy!
We are not necessarily advocating you to drink coffee, per se. Although coffee
was one of the hot beverages that we consumed while writing this book! However,
we are suggesting that there may be actions that you could perform to make you
happier, more content, and subsequently be better creative people.
We could look to several behavioural therapies for inspiration and help to give
us a better mindset. Techniques such as Cognitive Behaviour Therapy (CBT) has
been successful with many people. The idea of CBT is to help you examine the
things that you think about (cognitive therapy) with the things that you do (your
actions), and how to change them (behaviour therapy). While we are not advocating
any particular form of action, because different therapies or actions will be useful for
different people, we are suggesting to become more positive minded about the work
and the creative task that we will perform. If you are relaxed as an individual, and
your mind is not thinking about life problems (and you are at peace with problems
or issues in your life) then you will probably be better at thinking about the creative

192
7
Creative Thinking, Creativity and Ideation
problems to hand. Your mind will be fully on the goals of the project, rather than
thinking about any challenges you have with your living.
We want you to be passionate about the design that you are creating. Being
passionate about a topic drives us on to work hard and smarter. If we are passionate
about learning then we will learn better and more deeply. If we are curious about
learning then using our own energy and gumption, we will seek out solutions and
develop a better understanding of a topic. If we are curious in creativity then we
will investigate different ideas, and use our energies to initiate new concepts. As
teachers at University we want to have positive and passionate students. Students
who are keen to learn [16] and want to be at the class, and want to do well. Passionate
students ask questions, learn about the topic, take notes (without being asked to do
so) and seek to learn more about the topic in their own time. Students who read
around the topic and come back to the next meeting trying to quiz us (teachers) on
the topic that we have just taught them. The are passionate and keen individuals who
are active learners [3]. In the book “Out of our minds: learning to be creative”, Ken
Robinson writes:
Imagination is the source of our creativity, but imagination and creativity are not the same
thing. Imagination is the ability to bring to mind things that are not present to our senses
...[and] anticipate many possible futures. ...Creativity is a step further. Being creative
involves doing something. ...People are not creative in the abstract; they are creative
in something: in mathematics, in engineering, in writing, in music, in business.” Ken
Robinson [15]
So what activities can you do to get the creative juices ﬂowing? Most of these
activities we propose are orthogonal to the main aim of our work. They will not help
us to get to our goal per se (of developing a user interface through sketching) but will
help us be in the right frame of mind and be in an environment that is susceptible
to creativity. Maybe these will become rituals before you do any creative work!
Potentially there are many other aspects that can act positively or negatively on our
creative ability.
•
Do something creative. Perhaps build something from cardboard. Make a paper
origami bird (there are many tutorials online). Play with LegoTM. Do some
painting with children, they see the world differently to you, and create more
simplistic drawings that view the world from different perspectives. Babies like
colour, while young children use simple shapes and join lines together to tell their
stories.
•
Play games. Such as computer games, card games, word association. Do
something different and unrelated. Being playful and being in a playful mood
can help be more creative. When you are playful you are, among other things,
cheerful, happy, fully of enjoyment, good spirited and ﬂexible. These are positive
attributes.
Playful play contributes to having fun and the sense of feeling good about oneself.
The beneﬁt of coming up with new ideas or actions in the course of such play either
immediately or in the future is an additional beneﬁt. The beneﬁts are not inevitable but,
given the value attached to creativity, they should be taken seriously. Patrick Bateson [1]

7.5
The Importance of Sleep and Resting the Mind
193
•
Doodle and sketch. Keep a sketching journal of your life; you don’t need to
share the pictures. Keep a doodle diary of different shapes and structures of your
doodles. Use colouring-in books.
•
Walk. Walking the dog, or just taking a walk in the countryside helps you turn
your mind off the topic.
•
Read books. Reading not only gives you stories, but helps with structure and
different words. It can help to spark your imagination.
•
Collect inspirational pictures. When you ﬁnd something that inspires you,
perhaps a picture that has an interesting structure, or a place with some beautiful
colours, put them together in a folder. Or maybe make a photographic blog.
•
Listen to music. This is really about relaxing and resting, while being inspired
by the notes and the creativity within the music itself.
•
Move to a conducive environment. Improve the quality of your environment.
Having a window where you can see the outside world, or even bringing plants
indoors has been suggested to help you be more creative [17]. Researchers
Shibata and Suzuki discovered that task performance can be improved by the
very nature of having a plant with foliage in the room.
•
Schedule time. You need to be comfortable in your surroundings and give
yourself enough time to be creative. So it is good to plan in advance when you
may do the creative activities. This helps you to keep your mind active on the
problem and gives you a deadline for you to start work on the project. In the
meantime, if you have any thoughts, ideas or solutions then make a note or a
sketch of these ideas as they appear.
•
Meditation. Focus your mind on something speciﬁc. There are many meditation
audio streams that can help you relax. In addition to meditation sleep important
to rest your mind.
7.5
The Importance of Sleep and Resting the Mind
There are many anecdotes of famous people being creative through relaxing, or even
being creative at the cusp of sleeping. Salvador Dali was said to take micro naps. He
would hold something metal, such as a spoon, over a metal bowl. When he would
just go off to sleep the spoon would fall and wake him up as it crashed into the
bowl. It is during these moments that he would have his most creative thoughts.
Paul McCartney wrote the song “Yesterday” in his sleep [18]. Waking up the next
morning and immediately playing it on the piano before he forgot the song.
In the article “sleep inspires insight” researchers Ullrich Wagner and colleagues
report an experiment that they carried out [20]. They trained participants to solve
a number puzzle by comparing a series of digits. What they did not explain, was
that there was a much easier way to solve the puzzle after two steps (a hidden
rule). Participants were given a series of challenges, a break, followed by another
session. Some researchers slept during the break. In fact, the participants were
put into three groups of either nocturnal sleep, nocturnal wakefulness or daytime

194
7
Creative Thinking, Creativity and Ideation
wakefulness for the eight hour break. Those who slept were twice as likely to
solve ﬁnd the hidden rule. Interestingly, they also found that without the initial
training, sleep did not enhance insight, and so conclude “sleep, by restructuring new
memory representations, facilitates extraction of explicit knowledge and insightful
behaviour” [20].
Sleep obviously can help us to trigger insights. It can help us work through
problems, make connections and solve patterns. During sleep the unconscious mind
is working on the problem. Our minds are making connections and trying to organise
and reorganise. We know this situation ﬁrst hand. When writing this book we had
written about half of the text on problem solving, but it did not ﬂow. The ideas
did not follow from one section to another. We took a rest, slept on the ideas, and
woke up the following morning with a new structure to the sections. The act of
sleeping helped us to rejuvenate and rest our body. But also it helped us to organize
our thoughts into a more coherent organisation. As academics, we often encourage
our students to study hard, but likewise to have an earlier night the day before an
exam. It is much better to go into the exam with, what maybe, slightly less crammed
material, yet a clearer mind.
In addition to sleep doing other activities can help us take our mind of the
problem and let the subconscious mind take over the problem solving. Going for
a run, taking the dog for a walk, and even watching a ﬁlm: are ideas that all can help
us relax. By doing these activities we are turning our active mind to something else,
and letting our subconscious mind take over on the problem solving. Indeed, helping
the body to slow down is a useful strategy to help our mind be more creative. In his
book “In praise of slow”, Carl Honoré writes
To avoid burnout, and to promote creative thinking, business gurus, therapists and psychol-
ogists increasingly prescribe doses of slowness for the workplace ...in How to Succeed in
Business Without Working So Damn Hard, Robert Kriegel suggested taking regular ﬁfteen-
to twenty-minute timeouts during the day. Dr. Donald Hensrud, director of the Mayo Clinic
Executive Health program, advises, try shutting your ofﬁce door and closing your eyes for
ﬁfteen minutes. Lean back and breathe deeply. Carl Honoré [7].
While sleep can help us develop our creative thoughts the lack of sleep can also
diminish our ability to think creatively [8]. Without sleep we become slow, and our
mind does not think through the ideas carefully. We are all different and some people
ﬁnd it more productive to work at nights, or early in the morning. While other people
ﬁnd it difﬁcult to sleep, whatever the time of day they try to sleep. Worryingly
in some organisations the lack of sleep becomes a bragging point, which aims to
glorify hard work at the expense of sleep. However this may not be the best strategy,
because the lack of sleep can have a huge detrimental affect on our productivity
and creativity. One of the challenges, when we are tired, is that we tend to be more
cautious, going back to strategies that we know worked in the past. Tiredness can
hinder the quantity of ideas that we initiate, where we start to repeat the ideas that
we have had already, instead of initiating new concepts. In “Sleep loss and divergent
thinking ability”, James Horne writes:

7.6
Ideas from Nature: Mimicking and Bioinspiration
195
“Thirty-two hours without sleep had a substantial impact on most aspects of divergent
thinking measured ...sleep loss made them [participants] ﬁxate on previously successful
strategies when attempting solutions to the next problem (which generally required a new
approach); i.e., they seemed to perseverate unduly.” James Horne [8].
7.6
Ideas from Nature: Mimicking and Bioinspiration
Inspiration can come from different walks of life. From aspects such as nature,
man-made forms, and even the ideas of other researchers and friends. In fact,
researchers and innovators have looked to nature for a very long time. Especially
humans have made use of biological and natural substances in their tools, clothing
and food. Bioutilisation integrates natural elements into our products. Wool is a
natural product to protect the sheep from the wet and to keep them warm. Humans
have long used wool to make clothes. There are many words with the bio preﬁx.
From bioinspirational design, biomimicry to bioclimatic. In fact, nature has many
tried and tested ways of solving problems. It seems sensible and prudent for us
(as humans) to try and build products that mimic biological and natural systems. If
nature has found this way, then probably it is a good way of achieving the result.
Most of the systems and processes in the wild are efﬁcient. Nature does not want
to waste effort. Creatures do not want to waste food, energy and resources, they
want to be more efﬁcient. In fact, inefﬁcient creatures that use up their resources or
constantly pollute their environment would not survive many generations.
Nature is therefore extremely inspirational. We see symmetry, patterns, relation-
ships, spirals and other geometric shapes in nature. We can directly apply these
structures to our work. In nature we see processes and procedures that can be
analysed. We can apply these processes to our computing algorithms. In nature we
see colour combinations and size relationships. We can learn from these natural
occurrences and apply similar principles to our work.
There are different words that describe this idea. biomimicry is a general term
that deﬁnes a system, structure or techniques that are modelled on ideas from nature.
bioinspiration or bio-inspired design is a method to take ideas from nature and use
it in our design ideation process. Bio-utilisation integrates directly natural elements.
On the other hand biomimetics takes a systems thinking approach to the idea that
inspiration can come from nature. Whatever and however we deﬁne the words, the
ideas are similar, that the structures, methods, systems, chemicals can inspire us to
build new systems.
If we speciﬁcally consider the computing domain, there are many algorithms
that have their origins from ideas in nature. Intelligent algorithms such as ﬂocking,
iterative and generative systems such as genetic computing algorithms are taken
directly from theories of evolution and nature, while even data-structures in
computing (such as trees and other hierarchical models) can be seen in nature ﬁrst.
But there are a huge range of other – perhaps less well known algorithms – that were

196
7
Creative Thinking, Creativity and Ideation
inspired, at least in name, by biological systems. Algorithms such as ant-colony
optimisation, particle swarm, cuckoo search, ﬁreﬂy algorithm or bat algorithm [11].
If we look to computer interfaces then we should discuss the idea of developing
natural user interfaces (NUI). The idea is however somewhat different. With
NUI’s users wish to develop interfaces that are invisible. Perhaps they are simpler
interfaces, that necessitate in less complex interactions, or maybe the interface is
transparent, such that it is not explicitly displayed. The system may need to learn
the commands from the user. The word natural means more about how a user would
interact with the system rather than that it is nature inspired. But we could argue that
there are similarities with bioinspiration. In natural interfaces we are being inspired
by the human. For example, nature has given us hugely successful tactile abilities.
We touch, we feel heat, cold, roughness, smoothness, water and solid, we notice
whether something deforms or whether it is stiff. We naturally pick up a glass an
instantly realise that it contains hot water, without even looking at the glass. We feel
the heat of the glass and the movement of the water inside. So why not interact with
computers in this way? Why cannot we learn from how we naturally interact with
everyday objects? In one respect natural user interfaces are inspired by humans and
developed by humans! To be precise, NUI’s are not about the fact that (say) it is a
multi-touch display, rather that the device is effortless and natural to use.
So, how do we get inspired from nature for our designs? There are obviously
different ways to answer this question. We can just look out of our window and
see the tree in the park, or the shape of the clouds and become inspired. The subject
matter and the way we analyse the objects also depends on our goal. Are we looking
for structures, processes, procedures or techniques? If we are looking for structures
then one method could be to perform an analysis of the structures of the natural
objects. Figure 7.5 shows an object study of an orchid. We have looked ad different
aspects of the ﬂower, and repeated different parts of it. It may give us inspiration to
create natural shapes. Perhaps we could learn from the colours, or use it to inspire
the shape of a design. There are many aspects we could gleam from nature, these
include:
•
colour
•
shape
•
form
•
structure
•
function
•
process
•
environment
•
symbiosis
•
species
•
growth
•
organisation

7.7
Ideas from Man-Made Structures and Models
197
7.7
Ideas from Man-Made Structures and Models
While we can gain inspiration from natural phenomenon we can also consider
man-made structures, models and processes. Not only will designers and structural
engineers themselves look to nature, but they will have put much creative thought
and effort into these objects. There is often substantial detail within the everyday
objects we ﬁnd around our home. Likewise to the nature study, it is possible to
take one of these objects and make an in-depth study to analyse all the component
parts of the object. Let us take a sewing machine (Fig. 7.4). It is possible to start to
analyse the individual component parts. We can take a holistic look at the object to
understand the curves and outlines of the whole product, or we can investigate the
patterning on a smaller scale and look at labels or symbols that the developer has
used. Different parts of the object may inspire us.
Another way to learn from man-made aspects is to transfer the principles from
one domain to another. For example, we can look at business processes and see how
they can be applied to computer programming. Or look at artwork and see how it
can be applied to develop a new computing interface. Or we could look to marketing
and learn about colour combinations and use them in our data visualisation tools.
As a researcher it is often useful to achieve a literature review of the area we
are investigating. We would try to ﬁnd related work and produce a state-of-the-art
report. Researching prior work and looking at the work of other people is obviously
a good starting point. It not only gives you an understanding of the ﬁeld, but it gives
you a wide range of ideas that have already solved the problem.
Sometimes it is then difﬁcult to get out of your head these already-published
ideas. However, if you are going to implement something novel, you at least need
to know the competition! If you are a student, then performing a literature review of
the area obviously helps you to frame in your mind the previous ideas. This is useful.
You now have a list, or preferably a table of related work. You can now sit down,
relax and consider where the holes are. Try to consider the whole domain and start to
develop a categorisation of the main ideas. Then you will start to realise (hopefully)
where the new ideas could lie. There is no substitute to hard work. By doing all this
research, you are in a better situation. You know the competitors, and you also know
exactly where the new research could lie. You could even list this, and then start to
merge, divide, join dissimilar ideas together to try to ﬁnd something that is novel.
Even relaxing and sleeping on your classiﬁcation, can help your subconscious mind
put together a new idea.
Not only looking at prior work in your own ﬁeld but looking at other ﬁelds is
a useful technique to gain new ideas. In fact, the transference of ideas from one
domain to another is an important scientiﬁc principle. For example, the traditional
desktop human computer interface is a metaphor and idea that has its origin from our
daily work activities. We borrowed the idea from one domain (the traditional way
of working within a paper-full ofﬁce). It seemed a useful model to appropriate at the
time. However, maybe we need a new model of working and thinking about how we
interact with a computer and whether the desktop metaphor is still useful [14].

198
7
Creative Thinking, Creativity and Ideation
Fig. 7.4 Take a look at a sewing machine, for instance, there are many structures, symbols and
parts that we can analyse. We can separate them into component parts. These parts may be
inspirational to the design that we are trying to create
Collaboration with others is also a good strategy. Meeting with other like
minded individuals is very powerful. There are many clubs and societies that enable
you to learn from and discuss challenges that you are facing within that domain.
These groups often work because everyone in the group is interested in obtaining
the same goal. For example, slimming groups bring together people from all walks
of live. They work because everyone there wants to lose weight. It is not only a social
club, but it an environment to share and support each other. Church groups work,
because everyone (roughly) believes the same things. Chess or Bridge clubs work,

7.7
Ideas from Man-Made Structures and Models
199
Fig. 7.5 Focus on a natural subject and generate a picture that looks at individual parts of that
object. In this study we looked at detail at an orchid
because everyone wants to play those games. Likewise, research collaborations
work because you wish to discover the same facts and explore the same ideas. Like
any group, research collaborations bring together people with different skills and
backgrounds. Often these groups work well, when there are people with various

200
7
Creative Thinking, Creativity and Ideation
experiences and personalities. You need a mixture, such that ideas can get reﬁned.
But you also need people to like, respect and trust each other. The idea of discussing
the idea with people with different personalities, and looking at the problem from
different angles is explicitly highlighted by Edward De Bono’s Six thinking hats [6].
In his methodology, a person takes on a particular personality based on the colour
of the hat that they are wearing.
Another good example, that demonstrates a group of individuals working
together with different backgrounds, is the Lunar Society [19], who met between
1765 and 1813 in Birmingham. This group was made up of several well known
engineers, industrialists, intellectuals and philosophers of the 17th Century and early
18th Century. The members included Matthew Bolton who was a manufacture and
business partner of the Scottish engineer James Watt. James Watt was an inventor
and mechanical engineer who developed and improved steam engine designs;
Erasmus Darwin, an English physician, philosopher and poet; Josiah Wedgwood
who founded the Wedgwood company and industrialised the manufacturing process
of pottery; Joseph Priestly clergyman, chemist and philosopher. As the Lunar
Society they met regularly together. They wrote letters to each other. Exchanged
ideas. Demonstrated their work to each other. Listened to feedback and worked
together on solutions. They philosophised about their work and about nature, ideas,
chemistry etc. In fact, they did not treat subjects as separate entities, rather they
thought themselves as scientists in the broader sense of someone who is engaging
in a systematic activity to acquire knowledge. We should be doing more of this. We
should be talking with like-minded individuals, sharing ideas (without any worry of
Intellectual Property) and being free to discuss what you are working on, with the
aim that someone else will be able to help you with your problem.
7.8
Techniques to Help Find Alternative Ideas
The Sheet 1 of the Five Design-Sheets method is itself a technique to help you ﬁnd
new ideas. We can think of the ﬁrst page as a way to capture your thoughts and ideas.
Metaphorically, we can think of this sheet as a journey through different concepts
and a way to explicitly place our ideas on paper. Starting at the top of the page ideas
are sketchy, incomplete, and less certain. But when you draw the last few marks on
the this page you have a clear idea of the three principle concepts that you will then
reﬁne further in the following sheets. Chapter 8 explains this in more detail, but in
brief, the technique is as follows:
1. Ideas. Generate many concepts and potential solutions to your problems.
2. Filter. Remove ideas that would not work. Try to replace them with ideas that
could work. In other words, make the unworkable ideas into workable ideas.
3. Categorise. Probably the ideas that you have placed on the page are practically
different things. Some may be objects, some interaction techniques, others

7.8
Techniques to Help Find Alternative Ideas
201
may be input data, perhaps output data. Try to bring together these ideas and
categorise them into similar elements, or make a categorisation that would
include all these concepts.
4. Combine & Reﬁne. Merge ideas together. Mix up the ideas by taking parts of
one idea and adding it to a part of another idea. Change and adapt the ideas,
perhaps stand back and reﬁne the ideas into something a bit more complete.
5. Question. This is the ﬁnal part. You have been reﬂecting and critiquing your
ideas throughout, but now we need to take a holistic view of all the ideas and
try to ascertain what are the three principle concepts. Which will then be further
worked to create the three main designs (on Sheets 2, 3 and 4).
However, there are many other techniques that could help you imagine new
solutions. One of the features of most of these techniques is that they rely upon
the existence of a starting idea. In fact, with the FdS method we are asking you
to sketch your initial ideas. These are mini ideas, often not well formed, certainly
not complete ideas, and in need of improvement. Likewise, most other creative
methodologies too need you to start from one idea and then change or adapt it.
Perhaps you have an inkling of an idea, but need to expand it into something new,
then by thinking of opposites or connecting different ideas together, for instance,
you can create a new idea. One useful method is the acronym SCAMPER. The
method is attributed to Bob Eberle. Who wrote books about creativity for children,
but aimed at teachers.
Substitute.
Change some part of the item. Perhaps swap a small part or all of the concept.
Combine.
Put things together. You could combine small features, or merge the whole idea.
Adapt.
Change a part of the idea. Or alter the idea in some way.
Modify.
Think about the individual parts that are used to makeup the whole idea, and start
to change some of those ideas. There are many attributes that could be changed
from, size, shape, texture, colour to position.
Purpose.
The concept has a particular purpose or intention. Perhaps you could think what
other purpose the concept could be used for, or the current purpose could be
challenged.
Eliminate.
Assuming that the concept has many sub parts, you could remove some of those
parts. Maybe these sub parts could be removed at random.
Reverse.
Inverse or reverse some aspects of the concept. Think how the following terms
could be applied: up-side-down, inside out, backwards, sideways etc.
Rearrange.
Move or alter the organisation and order of individual parts. If the objects can be
considered as a hierarchy then perhaps arrange them linearly.

202
7
Creative Thinking, Creativity and Ideation
Table 7.1 Words with opposite meanings could be useful to help take an idea and adapt it. For
instance, we could take the words separate and merge to change some aspect of a potential solution
to make a new concept that may work better
Accept
Decline
All
Nothing
Apart
Together
Broaden
Narrow
Appear
Disappear
Build
Destroy
Clockwise
Counterclockwise
Cool
Warm
Expand
Contract
Begin
End
Far
Near
Fast
Slow
Full
Empty
High
Low
Increase
Decrease
Join
Separate
Smooth
Roughen
Separate
Merge
Take
Add
Lengthen
Shorten
Loosen
Tighten
Major
Minor
Open
Close
Over
Under
Plural
Singlular
Right
Left
Slow
Fast
Tall
Wide
Weak
Strong
Wide
Narrow
One method that can help you think through different possible ideas, and to adapt
the ideas that you have already, is to look to opposites. Such antonyms can help you
think through the ideas. For example, using the words “accept” or “decline” may
help you to think how you can separate the ideas into individual parts, and then
accept or decline distinctive parts of the design. Taking the words “expand” and
“contract” could help you expand an idea further, or simplify another idea to its
component parts. Table 7.1 includes a list vocabulary words that may be useful for
the design ideas on the Five Design-Sheet.
Throughout the book we have discussed several different ways that can help us
consider new or different idea. We have presented the importance providing an
environment in your ofﬁce or workplace that is conducive to creativity. A place
that will enable you to have a creative mindset by encouraging positive thinking.
We proscribed sleep and rest, such that your subconscious mind can work on the
problem. We got you to look at nature and man-made structures for inspiration.
We have also suggested that talking with others is a useful strategy. In fact, some
people suggest that new ideas can be created by forcing you into a situation which
is unfamiliar, difﬁcult or where you do not feel at ease. Go and meet new people,
try not to sit next to the same person in the conference that you are attending, or
speak with people on the bus or train into work. These encounters help you to hear
a broad set of opinions, listen to experiences that people have had in their lives.
Through meeting with other people and discussing ideas in general you may start to
think about the problem in a different way, perhaps you may project your thoughts
to view the problem through the eyes of that person. You may also be able to glue
dissimilar ideas together. For example, Steve Johnson [9] suggests that new ideas
can be created by joining dissimilar ideas together.

7.8
Techniques to Help Find Alternative Ideas
203
Good ideas can come from serendipity. Perhaps if we fail, or make a mistake,
then this error could be turned into something that would work. There are many
examples in the literature where researchers have made a mistake, or perhaps had a
fortuitous accident and as a consequence they ﬁnd a new solution that will help solve
a problem. Accidents can be a useful way to engender new insight. For example, the
creation of sticky-note glue was a fortuitous accident, likewise was the discovery of
penicillin [22]. While we could wait for a chance moment to beset us, we can use
randomness to help us create or spark new ideas. We do this all the time. We browse
the items on the shelves in a store such to see if there is anything that is of interest.
We may even go out down the shopping street such to see if there is anything
that grabs your attention. We are probably not going into a store for anything in
particular. We may choose the stores that we enter based on previous information –
we have bought from them before, or someone had mentioned that this store had
interesting goods for sale. When inside, we are making chance encounters with
the information in the store. From adverts, sounds to smells, our senses drive us
towards some products and not others. In fact, the reason we are in the store and
in the downtown area, is merely to ﬁnd something that takes our interest, we are
browsing.
Let us walk through a few examples. When entering the book shop we look
around. Our eyes notice the books on the bookshelf. We see an advert for a book
and go over to those shelves near the advert. We start to look at the books along
the shelf, ﬂicking our eyes from one book to another. We read titles, notice colours
and different sizes of various books. We select a book (based on the picture on
the cover) and ﬂick through its pages. When looking through pages that catch our
attention. Perhaps it is a picture, or a title. We look at the page and understand a
new fact. From this information we then may decide to speciﬁcally look for a book
that covers just that topic. We are using serendipity, in this case, to drill down and
triangulate onto things that interest us and are relevant. We use a similar technique
on a car journey with the radio. We scan the radio through the channels, stopping
on something that catches our ear. There may be a story or an argument that is
taking place on the radio. The presented information then gets into our mind. We
then use these stories or the information that we have learned in a conversation with
our colleagues. We listen, adapt and re-tell the stories and information that we have
collected. In Edwards de Bono’s six-thinking-hat method [5], he encourages us to
think about the problem from different perspectives, to look at different possibilities
and new ideas. To achieve this, one idea that he suggests is to look randomly through
a book. Choose a page number from your head. Turn to that page and choose a
random line number. Then choose a random word. Use this word to encourage
you to think differently. A modern method, perhaps would be to jump to a random
website. There are even some applications that will take you to a random website.
You can then use this page, or the subject of this site as a way to help you initiate
new thoughts.

204
7
Creative Thinking, Creativity and Ideation
7.9
Exercises
Creative thinking and considering many alternative ideas can be a daunting task, it
is too easy to ﬁxate on a single idea early in the design process. While ideas can
look diverse at face value, they often stem from a single core theme, limiting their
possible creativity. The problem generally is not one of generating new ideas, but
getting rid of the old ones. An exercise we use to help you get through this process,
and encourage you to think laterally is PIP Poker, a brainstorming poker game.
Ex. 7.1 —
PIP Poker
To create a suitable deck for PIP Poker, collect playing card sized pieces of paper
of three different colours. The actual number of cards you use for each colour is
at your discretion, and will be explained in greater detail later in this section. For
the purpose of explanation, we will use blue cards, green cards and yellow cards,
but you can use whatever colour you have available. If you do not want to go to
the effort of making your own cards, different coloured sticky notes, or index cards
work great.
To prepare the game, you will now need to write a keyword and a number. The
number should be picked at random between 0 and 10, and written in the top left
corner of the card, this will be used to play the game later. The keyword we write
is determined by the colour of the card, which denotes one of three categories.
The key-word categories are, Problem, Implementation and Participation, which
are explained in greater detail in the subsections below.
Part I
—
Problem
The Problem keywords represent general, or speciﬁc challenges in the task we
are brainstorm towards. For example, if we were developing a robot, the problem
keyword could be “opening doors”, or “navigation”. If we were designing a
visualisation, these may be “comparing data points” or “identifying outliers”. Using
speciﬁc challenges is ﬁne if everyone is working towards the same task, but this isn’t
always the case, so keeping general usually works better. It also means the cards can
be re-used in multiple exercises.
Part II
—
Implementation
The Implementation cards contain keywords relating to how the problem will be
tackled. In a visualisation context you could use retinal variables [2] such as shape
or orientation, or methods of presentation such as bar or cluster. The important
point about implementation cards is that they should not contain a whole solution,
but a building block.
Part III
—
Participation
The Participation cards have keywords relating to how the user will affect, or be
affected by what has been implemented. This can range from a fully interactive

7.9
Exercises
205
application to something that has minimal user interaction. For example, on a
software application we may use keywords such as “drag and drop” or “swipe with
ﬁnger”. These cards can also include keywords relating to how the participation
will be facilitated. For example, in a visualisation context we may use multiple
coordinated views, in robotics we may use radio-control.
Part IV
—
Playing PIP Poker with a group of people
Playing PIP Poker in a group is a simple way of encouraging lateral, divergent
thinking and getting instant feedback on ideas at the same time. Simply follow this
process to play.
(i) Shufﬂe the all the coloured cards into a single pile.
(ii) Deal each player 5 cards, and give them time to evaluate their hand.
(iii) Each player should loosely combine the keywords they have in their hand to
quickly come up with a ﬂedgling idea.
(iv) Each player in turn selects two cards from their hand to discard. They should
pick the two with either (a) the lowest number, or (b) a keyword that they cant
use in their idea. Each player must discard two cards, even if they are happy
with their current hand.
(v) Once each player has discarded two cards, the dealer provides them with two
new ones from the shufﬂed deck. Each player should now have ﬁve cards in
their hand again.
(vi) All players are now given one minute to evaluate their cards and generate an
idea. If one, or more of their keywords does not ﬁt within their idea then they
can choose to not include it in their hand, but they do not get another card in
return. So they are encouraged to use all the cards available to them.
(vii) In turn, each player presents their hand, and lays their cards up-turned on the
table in-front of them. They then have a maximum of 30 s to pitch their idea
to the other players and explain how the keyword on each card factors into
their idea. They should also add up the numbers on their cards into a total
(called the value), which the dealer should keep note of.
(viii) After each player has pitched their idea all the other players are asked to give
a small amount of feedback. At the end of their feedback they should give the
idea a score, between 0 and 10 representing how good/suitable they think the
idea is to the task being brainstormed.
(xi) The dealer then collates all these scores and provides the player with their
average evaluation score,It can be useful to keep a calculator available for
this part of the game.
(x) The player then multiplies their card value by the evaluation score to produce
their ﬁnal tally. The player with the highest tally wins the round.
(xi) At the end of each round each player should quickly sketch out, or write down
their idea.
(xii) The game can be played for as many rounds as necessary, with the deck
shufﬂed at each round. The player that won the most rounds in total wins
the game.

206
7
Creative Thinking, Creativity and Ideation
The game works by forcing the participants to combine seemingly random concepts
into a ﬁnal proposition.
Part V
—
Individual Exercise:
Situations where there is no group available, or each member is working on a unique
task, the game can be adapted for individual usage. In this variant the individual
simply draws 5 cards from the shufﬂed deck, and uses the keywords to generate an
idea. Once they have generated an idea, the process is repeated. While the individual
exercise loses the multiplayer experience of the group task, it can still be a useful
technique for getting an individual to think laterally.
Also, by getting the player to sacriﬁce two cards you force them to make a
strategic decision. Do they keep the cards with the highest value (which may not
form a good idea) or, do they keep cards that form a clearer proposition (and
possibly lose the cards that may have a higher value) in the hope of getting a better
evaluation? Either way, the player is put in a position where they need to structure
disparate concepts into a single idea relating to their project, forcing them to evaluate
the task from multiple viewpoints. The evaluation phase of the game provides a
quick sanity check, and the process of working in a group allows these ﬂedgling
ideas to be shared, inspiring each member.
References
1. Bateson
P
(2015)
Playfulness
and
creativity.
Curr
Biol
25(1):R12–R16.
doi:10.1016/j.cub.2014.09.009
2. Bertin J (1983) Semiology of graphics. University of Wisconsin Press, Madison
3. Biggs JB (2011) Teaching for quality learning at university: what the student does. McGraw-
Hill Education, New York
4. Crick F (1996) The impact of Linus Pauling on molecular biology. In: The pauling symposium:
special collections. The Valley Library, Oregon State University
5. De Bono E (2009) Lateral thinking: creativity step by step. Panguin, London
6. De Bono E (2009) Six thinking hats. Penguin, London
7. Honoré C (2004) In praise of slow – how a worldwide movement is challenging the cult of
speed. Orion
8. Horne JA (1988) Sleep loss and divergent thinking ability. Sleep 11(6):528–536
9. Johnson S (2010) Where good ideas come from: the natural history of innovation. Penguin,
London
10. Johnson S (2011) Where good ideas come from: the seven patterns of innovation. Penguin,
London
11. Kar AK (2016) Bio inspired computing a review of algorithms and scope of applications.
Expert Syst Appl 59:20–32. http://dx.doi.org/10.1016/j.eswa.2016.04.018
12. Krishna A (2012) An integrative review of sensory marketing: engaging the senses to affect
perception, judgment and behavior. J Consum Psychol 22(3):332–351. http://dx.doi.org/10.
1016/j.jcps.2011.08.003
13. Mednick SC, Cai DJ, Kanady J, Drummond SP (2008) Comparing the beneﬁts of caffeine,
naps and placebo on verbal, motor and perceptual memory. Behav Brain Res 193(1):79–86.
doi:10.1016/j.bbr.2008.04.028

References
207
14. Roberts JC (2015) Windows 95 turns 20 – and new ways of interacting show up desktop’s age.
The Conversation Bangor University
15. Robinson K (2001) Out of our minds: learning to be creative. Capstone, Oxford
16. Robinson K (2009) The element – how ﬁnding your passion changes everything. Viking
Penguin, New York
17. Shibata S, Suzuki N (2002) Effects of the foliage plant on task performance and mood.
J Environ Psychol 22(3):265–272. doi:10.1006/jevp.2002.0232
18. Turner S (2010) A hard day’s write: the stories behind every beatles song. Carlton Books Ltd,
Pymble
19. Uglow J (2003) Lunar men: the friends who made the future. Faber and Faber, London
20. Wagner U, Gais S, Haider H, Verleger R, Born J (2004) Sleep inspires insight. Nature
427(6972):352–355. doi:10.1038/nature02223
21. Williams LE, Bargh JA (2008) Experiencing physical warmth promotes interpersonal warmth.
Science 322(5901):606–607
22. Wiseman R (2010) 59 seconds: think a little, change a lot. Pan, London
23. Young JW (2003) A technique for producing ideas. McGraw-Hill, New York

Part III
Sketch

Chapter 8
Sheet 1 of the Five Sheets
Abstract The ideology behind the ﬁrst sheet is to explore many ideas, discover
alternative solutions and deﬁne three potential ideas that will be further reﬁned in
the next three sheets. Through following the ﬁve stages of sheet 1, metaphorically
you go on a journey. You will start with simple and undeveloped ideas and ﬁnish
with three potential solutions that you can develop further in the subsequent sheets.
You start with immature concepts, even partially formed ideas, that will mature
through the act of sketching and thinking through the solutions. In fact, the very
act of sketching helps you work through the ideas in a concrete way. At this stage
of design it is more about generating ideas and exploring the design possibilities
rather than focusing on one ﬁnal solution. This chapter will help you work through
the ideas and eventually you will decide upon three potential solutions that you will
further develop on the next sheets.
8.1
Get Prepared
The ﬁrst goal is to make sure that you have everything ready to get started on the
design ideas. At this stage of contemplation, we are assuming a few things:
1. That “you have a kit” together, consisting of pens and paper (Chap. 1).
2. That “you can” do the work. That it is feasible, ﬁnancially possible, and that
the dataset and other resources (say) are available for you to complete the work
(Chap. 4).
3. That “you should” do the task. That it has a beneﬁt to society and is generally
positive. That you are not doing anything immoral and that it is going to be
something professional (Chap. 4).
4. That the work has “positive ramiﬁcations”. That it impacts positively on society
that humans would (or potentially could) beneﬁt from the work or design created.
That the work has utility (Chap. 4).
By now you have started to think through the problem. If you have not done so
before, we now ask that you think more deeply over the problem and to understand
what you are trying to achieve.
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_8
211

212
8
Sheet 1 of the Five Sheets
•
Consider the goals and the overarching vision of the idea. What are you trying
to solve? What is the reason for the design? What is the most important concept
that needs to be included in the design? One way that we feel is useful, is to sit
down, close your eyes and try to visualise in your mind what the tool would look
like. Draw a picture in your mind that depicts the ﬁnal tool and someone sitting
at a desktop using your tool. Imagine the environment and situation where the
tool would be used. Imagine the backstory of the user, and how the tool would
beneﬁt them in their daily activities. With the vision we also need to think about
the parts of the tool. Interfaces have menus, options, properties, results, graphics,
icons and glyphs, etc. These components are put together to make a working
interface.
•
Second, you need to think about the user interface. And empathise with your
users, as to what they will be doing with the tool that you create. You need to
think about the task (or tasks) that the use will do with your system, tool or
product.
8.2
Framing the Vision
It is important to clarify the overall vision of the work. You should try to imagine,
even visualise in your mind, what the tool or product would look like at the end of
the process. How it would be used by someone in the real world? Where it would ﬁt
in and work alongside existing tools that the user already has? By keeping this frame
clear and simple, you will be able to go back to it constantly to check whether your
design ideas ﬁt within your goals and vision. The vision helps you keep to focused
on your goals and keep moving forward in your design process. It is far too easy to
get bogged down in the complexities of all potential ideas; so by framing the idea in
a simple way, you can concentrate on the important aspects of the design. Here are
some questions to help you ascertain this overarching vision:
•
What is the design meant to achieve?
•
What is the purpose of the tool?
•
What is the most important result that the tool will produce?
•
What is the type of interaction that the tool needs to make?
•
What job does the tool need to do?
•
What data does the tool operate on?
Understanding the big vision is an important step to discerning what you are
going to design. To get a good vision you need to know what is important. But
trying to logically consider what are actually the important aspects of the design
can be a difﬁcult task to perform. Getting the big idea often comes through many
acts of reﬁnement. You try out some ideas, check them, ask others about them,
consider them, reﬂect upon them, and they improve. We will further discuss the

8.2
Framing the Vision
213
idea of reﬁnement later in this chapter; especially in regard to reﬁning the ideas
from Sheet 1 into sheets 2, 3 and 4, and then improving the ideas further to create
the realisation sheet 5.
You may think that we have a chicken-and-egg situation here. On the one hand
we are asking you (at the very start of the project) to know what you are going to
build. But on the other hand you won’t really know exactly what you will create
until you have done some investigation and started to sketch out possible solutions.
However, we feel that you should have a general idea of what you want to create,
and the direction you need to head, otherwise you will not know what you are going
to do! You should know something about the challenge that you are trying to solve,
or at least have in your mind a headline thought that describes what you are trying
to design. For example, if you are developing a game on a mobile device, you will
know something about the technology that will display the game, you will know
who your main user would be, and even what type of game that you were interested
in building. Perhaps you wish to create a puzzle game or maybe a word game. By
saying that you will be building a game, and by specifying what type of game to
create, you are starting to deﬁne the problem.
What we are doing here is framing the vision. We are focusing on some aspects of
the idea and making some parts of the vision more salient and important. Basically,
we are trying to boil down the ideas into the main indicative aspects and put those
into a context that we know. If we can understand the essence of our vision we will
be able to explain it better, promote it to our peers, and also be able to gain the
support of other people. For instance, if we are creating our FdS for someone else to
build, if they do not understand the overarching vision of our designs, then they will
not know how or what to build, or how to interpret our designs. We could frame the
ideas in terms of the knowledge of the user who will use it. For example, we may
wish to explore different designs that expand a current product. Rather than going
back to basics, we may frame the project in terms of “improving the old product A”,
or “adapting the old product A, for a new technology”. By doing this we are saving
ourselves time, because we are not starting from scratch, we are also not questioning
the validity and functionality of the current product (which may be a good thing or a
bad!) Our colleagues will understand the issues of the product, they will know what
they wish to improve, they will realise the ﬂaws of the current product.
To frame is to select some aspects of a perceived reality and make them more salient in
a communicating text, in such a way as to promote a particular problem deﬁnition causal
interpretation, moral evaluation, and/or treatment recommendation for the item described.
Robert Entman [5].
Let us consider a similar situation. As academics we need to write research
proposals. These are outline documents that explain the work to be achieved. You
also may need to write such proposal documents. The documents need to be written
in such a way that they convince the reader that you know what you wish to do,
that there is a need for it and that you know how to do it. Again this is a similar
situation, because at the time of writing that proposal document you have not done

214
8
Sheet 1 of the Five Sheets
the work. If you had done the work then you would not need the money, and thence
there would be no reason for the proposal itself.
The better (and successful proposals) that we have written have had a clearer
vision, that is framed in a simple way, and excites the reader’s imagination.
Therefore, as we write the research proposal we need to keep in our mind the
principle reasons for doing the work, and what we are trying to achieve. Sure we
may have some ideas of potential solutions, and while we need to explain what these
could be, it would not be wise to show completed tools that demonstrate the work
has been done – as that would remove any need for us to win the grant money. But,
through our experience (as researchers) we do have a good idea whether the problem
is achievable or not, and how long it would take to build, and therefore some idea of
the costs required to achieve it. Certainly we get things wrong with the proposal. Our
estimates of cost and workload may be incorrect, and indeed the research may not be
possible to achieved. But at this stage the document only represents a proposal, and
the funders do understand that practice may be different. But that is why the proposal
usually needs to demonstrate a good-enough plan to make the ideas convincing, and
a convincing plan to mitigate against any delays or changes to the research when it
actually is performed.
The idea of such written proposal is to communicate the vision and to convince
the readers that you know different ways to solve the challenge. As researchers we
need to ﬁnd the right words to express our vision. We need to frame our research
in such a way that the reviewers will understand the potential of the research. Sure,
it is horrible, as a researcher, to receive negative feedback on your grant proposal,
and to read that your grant has not been successful. When you have gotten over the
emotional anger, you read that one reviewer writes “..it is well written, but I just did
not get it”. They are referring to the vision, and how the information is framed. They,
with their background knowledge, experience and skill-set, did not understand what
your main vision is saying.
Similarly for the ﬁrst sheet, you need to have a clear vision in your mind, such
that you can explore the different ideas. You may even need to convince someone
(such as your teacher or boss) that you have considered the range of all alternative
potential designs. This ﬁrst sheet provides the evidence that you have considered
many different ideas and explored many solutions. On Sheet 1 you need to express
the challenge in a way that people will understand. The frame needs also to excite
the observers. It should galvanise the developer such that they would want to build
the tool and see how it will work. It needs to be exciting to encourage others to be
drawn to the challenge, rather than putting them off. At the end of this sheet you will
need to have three designs that excite the observer to want to take the ideas further.
By framing the problem in a way that your users, clients or developers would
understand, you are managing the meaning of the concept. Rob Haitani who was
working for Handspring, and was the lead designer of the PalmPilot project (an
early hand held personal organiser) was interviewed by Eric Bergman from Sun
Microsystems, Inc. He explained how Jeff Hawkins carved a block of wood, and

8.2
Framing the Vision
215
carried it around in his pocket, such to get a feel of the size of the potential device.
The use of the simple block of wood is a metaphor that frames the challenge. It
acts as a reminder to the designers to focus on both the size and simplicity of the
handheld device. The block of wood is a tangible object, can be passed around, is
smooth and therefore feels good to hold, can be put into a bag to see if it can be
easily located and selected from other objects in the bag. Rob Haitani explains:
.. our founder, Jeff Hawkins, was lamenting the fact that the hardware companies didn’t
know how to build the right product. One of the board members turned around and asked
him if Jeff knew what the ‘right product’ was. Jeff answered yes: : : and that’s how the Pilot
started. Jeff believed that we had to make the product considerably smaller.. He carved up
a piece of wood in his garage and said this is the size he wanted. He’d walk around with
this block in his pocket to feel what it was like. Rob Haitani in an interview with Eric
Bergman [2].
There are many beneﬁts to focusing on the salient features of the vision,
expressing it in terms that we understand, and clearly presenting the ideas to the
people who will be using our designs. This is what the block of wood does. It
frames the vision to keep the mind of the developers on a few important key aspects.
Likewise, it is prudent for us as designers to focus on a few salient features. We
need to realise, however, that such parsimony may not always be a good thing.
As humans we can quickly become lazy thinkers and follow the easiest path to
get to the result. Perhaps, in the long term, it may be much better to make deep
thought over the challenges, and completely re-think the old product. By going back
to ﬁrst principles we may be able to contemplate new ways to solve the problem
and therefore create a much better product. But, this can take time and certainly
takes much careful effort. In addition, it is often challenging to frame the topic
in an unbiased way. It is too easy to emphasise one outcome (maybe our desired
outcome) rather than being neutral in our presentation of the goals. Let us consider
again the frame of our example product. We said that we would frame the product
in terms of “improving the old product A”. While it is clear that there are beneﬁts
to framing the problem in this way, the phraseology that we have used, however,
is biased. We have led the listener to assume that product A is not good – it is old
and we must make it relevant for today by adapting it to new technology. Such
priming [6] can have a negative effect on the interpretation of the ideas, which
can infect the design creativity stage. However, let us focus on the positive aspects
of framing, and work out how we can use it to both conﬁne and reﬁne the idea
space.
There are many beneﬁts to framing the vision and focusing on a few core
concepts. As human beings we can easily focus on a few objects and understand
them in huge detail. We ﬁnd it more difﬁcult to think about many objects and keep
them in our mind at the same time. Let us think through an example. When we scan
a blank page of paper and see three dots on the page, we instantly see three parts.
Our brain easily notices that there are three objects, we do not need to count the
dots, the quantity is implicit in our mind. We see the three dots as a triangle shape,

216
8
Sheet 1 of the Five Sheets
and instantly know that there are three parts. However, increase the quantity of dots
to nine or ten and we are unable to instantly see how many objects there are on the
page. We need to count all of those objects, or estimate the quantity of objects on
the page. Interestingly we do not need to increase the number of dots too high for
the task to become challenging. One solution to estimating the quantity of a large
number of objects is to chunk these parts together into smaller visual groups or
clusters of elements. When we know how much space ten items utilise, we can then
use this to estimate a larger area.
Likewise, when we are designing something, it is much better to focus on a few
principle ideas and to reduce the large set of potential variables into something more
manageable, rather than trying to address every request and aspect of the system.
Indeed it is much harder to create designs that will address every goal and satisfy a
larger set of criteria. Rob Haitani says:
[If we] assume we want to stuff everything in this product. You’re not bothering to prioritise
or distil, or ask the question about what really matters. Rob Haitani [2].
It is usually wise to spend some time thinking about the problem and deciding
what is important, rather than rushing into trying to solve the problem. Albert
Einstein is quoted to say:
If I had an hour to solve a problem I’d spend 55 minutes thinking about the problem and
5 minutes thinking about solutions, (attributed to Albert Einstein).
Framing, at the vision stage, implies that we are putting constraints on the
outcome of the tool that we are building. We can think of these constraints as
general system requirements. Such that we are deﬁning aspects of the tool that it
must achieve or perform. Certainly by framing the ideas we are limiting the possible
set of designs, but we are also making our lives easier because we only then need to
consider solutions that abide within our frame. This type of constraint gives structure
to our thoughts, and while it can limit the range of possible outcomes it also helps
us to keep focused on the task. Framing also gives us an ability to check whether we
have reached the goal, or test the suitability of individual solutions. We need to be
practical. There are certainly designs, or computing systems that we could build ‘in
our minds eye’ that would not be feasible in our lifetime. While it is good to have
these ultimate visions, and they can be part of the design space, at some stage we
need to be pragmatic and work out what is actually feasible. This critical analysis
of design happens throughout the ﬁrst sheet, and most importantly at the last stage
of the sheet where we consider and question what are the three principle designs to
explore further.
At this stage of visioning, and framing the design goal, we need to be clear what
the main aspects of the design should be. At the very heart of the design is a goal,
a simple idea that sends blood to the rest of the design idea. So, we need to reduce
the distractions that may obscure our design goals or take us away from the truth of
the design idea. In conversation with Eric Bergman [2], Rob Haitani says:
the vision of what a product offers its user is its heart, and every facet of the design must be
fashioned to clothe and strengthen and give visibility to that heart. Features and distractions

8.2
Framing the Vision
217
that obscure the designer’s vision of the product lead to mediocrity. When the user can see
and appreciate the core value in a product, the designer has realised his vision with integrity
and can do no more to ensure its success. Rob Haitani in an interview with Eric Bergman [2]
This then can be matched with the designs themselves. Often it is best to focus
on simple designs that fulﬁl the objects of the simple criteria. Dieter Rams, in the
late 1970s considered the whole aspect of good design and proposed ten principles
of design, that are often named the Ten Commandments of design [9]. Rams’ last
commandment is the most relevant: “good design is as little design as possible”.
The idea is that less is better because the design focuses on the essential aspects,
whether this is the functionality, task or beauty. It is something that is simple and
the product is not burdened by anything that is not essential. But not only as a
designer or developer, but as a user too, we need to understand, and be clear in our
mind, over the main reason and core vision of that product.
1. Good design is innovative.
2. Good design makes a product useful.
3. Good design is aesthetic.
4. Good design makes a product understandable.
5. Good design is unobtrusive.
6. Good design is honest.
7. Good design is long-lasting.
8. Good design is thorough down to the last detail.
9. Good design is environmentally friendly.
10. Good design is as little design as possible.
But designing can be paralysing. It is so easy to be confused over the appeared
complexity of the problems, not knowing where or how to start the design process.
We may be confused as to which questions are useful and pulled in all kinds of
directions by different viewpoints, users or clients. Also, the potential of a huge
range of possible solutions or too many prospective strategies to employ, can cause
paralysis. Indeed, the idea of the ﬁrst sheet of the FdS is to try to tackle this
challenge; not only to generate ideas but also to reduce the set of potential concepts.
So at the start we need to have a vision, framed in such a way that, while it constrains
the set of potential ideas, it remains exciting and can be successful.
When we talk about complexity here, there is no way to measure the complexity
of the challenge, problem or design task [11]. In fact, complexity is not a ﬁxed or
measurable value, rather it is perceived complexity by the person doing the work.
Some people may ﬁnd one problem much easier to solve, whereas someone else
will ﬁnd it more difﬁcult. Likewise, you may ﬁnd it easy to design a tool to display
some data, but ﬁnd it difﬁcult to create a game. The reason why we ﬁnd one thing
more challenging that something else is because we have different knowledge of the
domain, understanding of the challenge or previous experience.

218
8
Sheet 1 of the Five Sheets
8.3
How to Frame the Problem?
There is no single way to frame the problem. It is, in fact, difﬁcult to describe how
this should take place. And suitable strategies may be different depending on what
type of project you are trying to build. But there are several models, patterns or
principles that could be used to help you work through the task. One way is to
base your thoughts on a model or framework that has been created by someone
else. Researchers have crafted these models after much deliberation and possibly
discussion. By aligning your work with a well-known framework it can be easier
for others to understand what you are building. There is beneﬁt to make your work
ﬁt with well-known ideas and pre-deﬁned models. Do note however, this can be
a disadvantage. Sometimes, considering how your ideas ﬁt within an established
framework, may limit the breadth and novelty of your ideas. Furthermore, by
following standard models you are persisting current ideas, or impeding the range of
new potential solutions. Indeed, going against current thinking or doing something
different can help you to imagine better and more novel solutions.
We need to frame the problem such that it is at the right level of abstractness.
Something that is too narrow may not give you an opportunity to build something
new. It may be too constricting. However, something that is too broad is going to
be too challenging, too complex and you will not know how or what to solve, or
whether you have solved it once you have built something! So when you are thinking
about framing the problem, consider:
•
Is there a clear goal? How are we going to become aware the work is ﬁnished?
Or will it never be ﬁnished?
•
Is it emotive and motivational, such that it will encourage you to do the work
and perform the task?
•
Is it too constraining or too open-ended?
•
Is it clear who it is for? Knowing the end-user is key. It will bring a whole set
of speciﬁc concepts to the problem.
•
Does the question have a clear context? What is the location or environment
where the tool will be used? Is there an understanding of the technology in use?
Often focusing on a single concept or using a metaphor can provide the backbone
of our problem solving, and give us a way to frame the problem. Let us look again to
the data-visualisation domain. People can create many different types of tools, that
have sliders, buttons, lasso selection, point selection etc. While each of the programs
may be different, there are three types of tools that are generally accepted.
•
Exploratory tools enable discovery.
•
Explanatory and conﬁrmatory tools present the results such that others can
conﬁrm the relationships that you have found.
•
Presentation tools display results that have already been discovered.

8.3
How to Frame the Problem?
219
Frederick Brooks [4] suggested a useful way to think about these three types of
tools: “what can I see?”,“what can you see?”, and “see what I see!”, respectively. If
you were to build an exploratory tool, then it would be different to something that is
explanatory, and different again to a presentation tool. Each of the tools are equally
valid, but they are motivated by a different challenge. By choosing one of these
tools we are framing the problem to a speciﬁc task that the user will be performing.
With exploratory tools the task of the user is to explore. They will need sliders and
buttons, maybe a query interface to allow them to make discoveries of the data. They
do not know what the results are, and even may not understand what questions they
should be asking of the data. Metaphorically the users are in-the-dark, and need to
use the tool to shed light on the problem. At at the other end, presentation tools are
used to explain the ﬁnal results. A good example is an infographic, where a designer
would craft the display speciﬁcally to demonstrate their ﬁndings, or to tell a speciﬁc
story. By thinking about the type of tool, we are framing the problem. In fact, we
are starting to constrain what type of tool would be built, and what task the users
will perform.
Exploratory tools tend to be used by an expert scientist. That person may be you,
and it may even be you creating the tool. They will be able to work around some
of the tools limitations. Maybe there are some bugs, and the tool may crash. Do
not worry, providing the tool does a good job at visualising the data and adds
value to the user.
Tools that are explanatory or conﬁrmatory are used to help users explore some data.
It could be that one tool was created to display personal data. Therefore an
individual may load up their own data, to display and understand their own
activities. Personal ﬁtness data is a good example, where you can load up your
own data, that has been gathered from a wrist-band or smart watch (for example).
Tools that are presentation based, are created to display the information in the
simplest way. This information is going to be viewed by many people. It must be
clear, honest, and easy to understand. It must be quick to use and to gain value
from. So there would be less controls, less user-interaction, and the tool would
have gone through much user-testing, to make it extremely user friendly.
So having an idea of what type of tool you will be building is important. It frames
the design process. It makes the design more focused and goal-led. It provides the
motivation for building the tool, and starts to get you thinking about the core aspects
and core feature of the system. At this stage, you are not deﬁning the individual
parts (they will come later) or describing the steps that you would need to develop
the program and create the design. But there are other models that can be useful to
frame the initial vision.
Let us consider another example. Consider you wish to design a new teapot.
You know that a typical teapot has a spout, a handle, and be some kind of vessel
that could hold some liquid, such as hot tea. A teapot is often covered, to keep the
beverage hot while it steeps, before it is served. Why do we use an example of a
teapot? Donald Norman uses the example of a teapot in his book “The Design of

220
8
Sheet 1 of the Five Sheets
Everyday Things” [7]. He speciﬁcally discusses the impossible pot. A pot with a
curved spout facing the user of the pot. Such a teapot is deﬁnitely not practical, but
the discussion of teapots helps us make our point: that there are different ways to
think about the same design, and that different designs may fulﬁll separate purposes.
So it is easy to imagine three types of teapot. First, something that is practical that
can be used by a tea drinker. Second, an ornament, something that looks beautiful as
a decorative piece, and is not meant to be used frequently because it is fragile. And
third, something that is abstract, conceptual and not at all practical. It may be nice
to look at but would not hold hot tea. While we are considering teapots, it is worth
noting that teapots have also been used as an standard model in computer graphics.
In 1975 Martin Newell generated a computer model of a teapot, which is known as
the Utah teapot. Rendering a teapot in computer graphics is somewhat equivalent to
the ﬁrst hello world program for computer graphics learner programmers.
A high-level thought model can help you frame your design. If you are
considering a practical and functional teapot, we can imagine the material it is
made from, or how to make it durable, perhaps consider how the teapot would be
indestructible. For the beautiful teapot, the emphasis is on aesthetics. Maybe we can
imagine a teapot made from the very ﬁnest porcelain and with a gold lid. For the
impossible teapot (like Donald Norman [7]) we could imagine several reasons why
it would be impossible. Perhaps it is made from paper, or chocolate. Subsequently
the design work can start to consider these different alternatives.
•
Focus on functionality.
•
Focus on aesthetics.
•
Focus on the impossible or abstract.
So one question you could ask yourself is “whether you should follow a pre-
deﬁned model?” We cannot answer this question for you. However, we advice you
to make this decision based on whether you are more or less experienced at ideating
different solutions. If you are a learner, then we would advice you to align your
work with current practices. By doing so, you are working with (rather than against)
common theories and models. Your solutions would be easily understandable in the
context of other ideas. Your work would be easy to explain, because you can use
examples from other peoples’ work. There is a huge range of such models, many of
which are speciic to particular domains (e.g., business). So the choice of a suitable
model therefore depends on your domain.
8.4
The Journey of Sheet 1
The ﬁve sections of the ﬁrst sheet are ideas, ﬁlter, categorise, combine & reﬁne and
question. We can conceptualise the process of this ﬁrst sheet as a journey. We may
start off with some very vague ideas, but by the end of the ﬁrst sheet (at the end
of the journey) we will have a much better idea of what we want to develop and
a good understanding of the concepts that could be turned into a ﬁnal design. We

8.4
The Journey of Sheet 1
221
Fig. 8.1 The ﬁve parts of sheet 1. Metaphorically you are on a journey. You start with some
sketchy, unﬁnished and partial ideas, and by the end of the sheet you need to have focused on
three potential solutions, which are then taken further in sheets 2, 3 and 4
may start off with many different ideas, and be very uncertain over which three to
take forward, but by the end of this sheet we should be in a good position to make a
decision on three different ideas. As the designer, you utilise this sheet to help you
make this journey. There are four distinct landmarks in this journey. First you can
ﬁlter the ideas, then categorise them, thirdly combine and reﬁne them, and ﬁnally
question their relevance to the task and ascertain which ideas you should develop
further in the next stage (Figs. 8.1 and 8.2).
Ideas. The ﬁrst stage is to sketch ideas. These are mini-ideas, perhaps incomplete
or under-developed concepts. You should be aiming for about 15 to 20 of these
concepts.
Filter. Consider what may not work in its current design, but importantly how you
can make an unfeasible design into something that will be possible.
Categorise. Group your ideas into categories that are similar. Think how the
different ideas are alike. Remember you are working towards three ideas that
can be reﬁned further on sheets 2, 3 and 4.
Combine & Reﬁne. Put dissimilar ideas together to create new ideas. Separate the
current ideas into individual parts and try to see how they can be mixed and
matched into new conceptual solutions. How can current designs be improved?

222
8
Sheet 1 of the Five Sheets
Fig. 8.2 Through the ﬁrst sheet, we start off with small ideas and make them into more complete
ideas. Until at the end of the sheet we choose what three designs we will think through in more
detail

8.5
Ideas (Start with the Salient Features)
223
Question. You should now have about seven to ten principle ideas. Take a look at
the ideas that you gave put into categories. Now you will need to work out which
three ideas are the best ones to take through to the next three design sheets.
8.5
Ideas (Start with the Salient Features)
One of the challenges with starting sheet 1 can be to know where to, or how to start.
It can be daunting to put pen on paper, especially when there is a blank page in
front of you. But our advice is to just go-for-it and put some marks down. Keep in
your mind that the marks are there to help you work through your thoughts, so it
does not matter if you make a mistake. And anyway, your mistakes can be made
into solutions that will actually work. Your errors will help you ﬁnd new ideas and
solutions. Our advice is to start with the salient features of the design. Work out the
components of the system, discuss the users and the environment. If you are doing
a data-visualisation tool, you will also need to perform an in-depth analysis of the
data to articulate different data types.
Start by considering: what makes the vision special? What makes it stand out?
What are the principal features? Sketch an idea of what these are. Then start to
articulate the main components of the system. Remember at the start of the design
sheet these are mini-ideas, they are not meant to be complete designs or ﬁnal
systems. Do not sketch pictures (at this stage) that look like the end application,
rather start off with sketching what the key aspects would be. We should not be
worried about the appearance of a ﬁnal product, instead we need to be concerned
with exploring the principal ideas, that can later be pulled together to make a full
application.
Let us work through an example of building a puzzle game for mobile devices
with which we can have puzzle competitions. We could think of this exercise as an
assessment that a teacher may give to their students. The teacher may describe the
problem in the following way:
You are tasked with designing a mobile based, puzzle game app with different levels of
difﬁculty, inter-user competitions and in-app add-on content. The puzzle game must be fun,
engage the user, have increasing gameplay difﬁculty, scoring mechanisms and a way to
make in-app purchases to help you progress through the game faster.
Our ﬁrst task would be to identify the main keywords, and to work out what
is salient and what frames the vision. We can do this by highlighting the main
keywords in the paragraph.
You are tasked with designing a mobile based, puzzle game app with different levels of
difﬁculty, inter-user competitions and in-app add-on content. The puzzle game must be fun,
engage the user, have increasing gameplay difﬁculty, scoring mechanisms and a way to
make in-app purchases to help you progress through the game faster.
From working through the paragraph we can highlight the principal words
of mobile, puzzle, game, levels, competitions, add-on, and scoring. We could

224
8
Sheet 1 of the Five Sheets
(potentially) concentrate on other words such as fun and engaging or even gameplay,
however these words are perhaps difﬁcult to quantify, or sketch. There are some
additional words that are worth contemplating, such as progress(ion) or faster,
and add-in which are secondary and clarify the primary concepts of levels and
purchases. But at this stage we need to consider the salient words, so that we can
concentrate on the primary keywords.
We mentioned at the start of this section that it can be difﬁcult to know where to
start, and what information is expected on the ﬁrst sheet, indeed, it can be difﬁcult to
judge how much information is required on each sheet. While there is no one answer
to these questions, what is required is enough information, and enough sketches to
demonstrate clear and deep thought over the challenges. But, to give you a good
idea of where we are heading for these sheets, and for the puzzle game scenario,
we ﬁrst show the completed sheet 1, Fig. 8.3. We are not expecting you to read all
the individual parts, but instead we ask you to notice how the sheet is laid out and
how the different parts are positioned. You should be able to see the categorisation
of the ideas (because some parts of the design are circled). You should also see
how the ideas are summarised after being categorised, because they are located near
the centre of the page and include text words. You should also be able to see three
chosen designs, sketched at the bottom of the page.
Figure 8.4 shows sketches that start exploring this design space. There is no right
(or wrong) answer. We started thinking about the ﬁrst keyword, and made a sketch
of a mobile device. Our sketch of a phone is not anything fancy, just a simple outline
that indicates that we are dealing with a mobile-based application. We could have
sketched a tablet device, or something with a keyboard. Remember from Sect. 6.3
and Fig. 6.6 where we discussed Charles Sanders Peirce’s triadic model of a sign
ways to present the sketched information. The sketch we made is iconic, however
we could have sketched something that is indexical or symbolic, perhaps something
that demonstrates the result of a conversation or a phone number, or perhaps two
people talking.
The word mobile, although looking quite unremarkable, will start to frame the
context and the type of game we are proposing. Here is the interpretation of the
frame. Because it is on a mobile device, we are not anticipating a fast processor,
a strong graphics card or even a big screen. However we are making expectations
that the game will work on a mobile device, and will be able to be used casually (to
be able to be used for a few minutes on a bus journey to work, say) and then the
device would be switched to another application (this means it must readily save the
progress to be re-started from the last position). Typically modern mobile devices
are touch devices. So users would also expect that this application will work in a
touch interface and there would not be a mouse attached to the device. However,
the user would expect that all the other interface capabilities of the device, such
as zooming or swiping, muting of the sound, screen autorotation when tilted etc.,
would work in this application.
After sketching a picture of the phone, and taking on-board all these assumptions
that frame the vision, we can quickly move onto the other keywords. We know that
it is a puzzle (so we sketch a typical puzzle), we have levels (so put a sketch of some

8.5
Ideas (Start with the Salient Features)
225
Fig. 8.3 The completed sheet 1 of the puzzle game

226
8
Sheet 1 of the Five Sheets
Fig. 8.4 Working through the keywords on the speciﬁcation we can start to sketch some ideas
names and scores), we may also start to think how these scores are created and that
there are different algorithms to calculate the score (so we sketch some idea of a
scoring mechanism based on moves). We then move to competitions and purchases.
In this way, we are brieﬂy exploring the main components of the system. We are
contemplating the different keywords and putting indicative drawings. These are
not complete ideas, they do not represent full applications. There is still a long way
to go in the design process – but they provide a good starting point. They provide
a way that we can get over the apprehension of not knowing what to put down. We
are also using the framing of the vision to help guide our thoughts.
If you are unsure what these features are, then start with what you know. Perhaps
you know a lot about your users and what their skills and experiences would be. Or
maybe you know that it is an extension or a re-design of a current tool. Whatever is
familiar to you, start there. Here are some suggestions. Start by thinking about:
The users.
Novice users will want a simple interface that is clear and easy to pick
up and use an intuitive interface. They may be casual users who would use the
too l for a few days, not use it for a while, and then return to it at a later stage.
Expert users want to have something that they can easily use to begin with, and
then explore and control the system in a complex way. Expert users will want to
have a way to change many different parameters.
The environment.
You can also think where the user would use that tool. A
desktop tool is used in an ofﬁce or by a user in their house, a mobile application is
used on the go, and a large display used as a public billboard or on a company’s
display wall. The suitability and functionality of the application, that you are
designing, depends on where it will be used.
Functionality.
Think about the main functions that will be required. What are the
key tasks that the user needs to perform?
Aesthetics.
What should it look like? Does it need to look like a current tool that
your company has already built?

8.6
Ideas (Using Other Frameworks: Top-Down Thinking)
227
Component parts.
Try to break down the system into component parts, and work
out how these then ﬁt together. Consider drawing a ﬂow diagram of these parts,
to show how they ﬁt together.
There are different approaches that could guide you as you consider different
aspects of the initial design. You could use a framework to help you consider
different parts. Most of the frameworks would be considered to be higher level
models where you can use a top-down approach to think through different ideas.
With top-down thinking you ﬁrst consider the overarching goal and then drill down
onto the smaller individual tasks. Alternatively, if you start to break down the ideas
into how they individually deal with different tasks and glue them together (to create
whole systems) in the lower stages of Sheet 1, then you are using a bottom-up
approach.
8.6
Ideas (Using Other Frameworks: Top-Down Thinking)
What other frameworks or models could be useful? Well, earlier in the book we
have already discussed some other models. We have explained the idea of using
software patterns or Object Oriented programming. Each of these methods could
be used to help you guide you through this idea-generation phase. Software design
patterns, in particular, such as the Model-View Controller pattern, are useful to help
you consider different parts of an interface. By using this framework, we can use it
to guide our design ideation phase. For example, it is possible to work through each
of the parts thinking and considering what alternatives there could be.
•
Model. We can ﬁrst think how the data would be stored. What type of data we
need? What data structure we would need to store all the information?
•
View. Then consider how the information will be viewed by the user. What will
it look like? How will the information be presented to the user? What layout
algorithms will be used to present the information? These types of questions will
help us work through alternative design ideas.
•
Controller. Finally, we can consider how the user will control the information.
Will they use a mouse, a set of slider bars on the page, use direct manipulation
to control the information directly on the screen. Or perhaps they could use a
touch screen. Maybe you could develop an interactive display that uses gestures
to control the program.
Usually these frameworks idealise the process into a set of principle parts. For
example, the dataﬂow paradigm separates the parts into: Data – Filter – Map –
Display. The dataﬂow paradigm is a way to think about the data visualisation
process. Start by inputting the data, then enhance it, map this data into graphical
attributes, then display the result. This model was originally presented to frame the
methodology of the Advanced Visualisation System [12], and then was used in other
Module Visualisation Environments (MVEs) such as the IBM Data Explorer [1].

228
8
Sheet 1 of the Five Sheets
The model works well with the MVEs because different functions can be placed into
individual modules, which provides a visual programming environment where users
can graphically connect different modules together to program the system. The data
ﬂows from the start (a load operation), through various operations (ﬁlter to reduce
data, other operations to smooth the data and map it into geometry etc.) before
displaying the data as a picture in a renderer module. This paradigm is very relevant
today, not only as a model to teach visualisation concepts and to help programmers
develop visualisation systems, but also as a way to think through different design
concepts.
The dataﬂow paradigm can be a useful way to start Sheet 1. You can think
through each of the parts of the model, considering how to address the ideas in
turn. By exploring different possibilities in each of the categories of the model, you
are exploring the dimensions of the system. You are breaking the whole challenge
down into individual parts. These are certainly incomplete ideas. It is not a full
system, because you are only considering the small components and you will need
to work out how they work together later down Sheet 1. Consider each of the parts
of the dataﬂow paradigm in turn, such as:
•
Load/save data. How does your system load the data? How will it save any state
information? Can a user go back to a previous version or state?
•
Filter and enhance. How does the system select the data? Is there a data-
mining algorithm? Does the user control the ﬁltering? How is the data enhanced,
averaged or processed?
•
Map. What does the visual display look like? What visual marks are going to
present the data? How will a user understand what is important? How does a user
read the visual display?
•
Display. How is the information displayed? Where is it presented (a large screen,
desktop or mobile phone?)
•
Interact. Does the user interact by WIMP (Windows, Interaction, Mouse, Point-
ers) or follow other ideas such as voice- and gesture-recognition.
•
Data ﬂow. How much does control does the user have versus the computer. E.g.,
An interface that completely is controlled by the user has many buttons, sliders
and value components that can be altered by the user, whereas other systems may
be more autonomous, where an agent acts on behalf of the user.
Peter Pirolli and Stuart Card’s [8] sensemaking model includes processes that
help the user to consider external data – foraging loop to generate evidence –
reality and policy loop – and the sensemaking loop to generate hypothesis. The
sensemaking paradigm [8] evokes the user to consider different tasks, including
searching for external data, wrangling the data into a form that then can be used,
investigating who and what information is required, searching for relations, adding
structure to the data and searching for evidence to support the problem at hand,
building a case and searching for evidence to understand how we know that
information is correct, evaluating the given evidence, and making a presentation
and ﬁnally telling that story.
In fact, by using the models in this way, we can systematically consider
alternative design solutions. It gives us a way to logically list individual concepts

8.7
Ideas (Focusing on Tasks: Bottom-Up Thinking)
229
and our mind can concentrate on one part of the challenge without the need to
think of all the possibilities at once. We are dividing the challenge into smaller
parts to conquer the task. You can use these models to help you consider different
ideas. Think about the tasks at each stage, what would the solution be? How would
a user control the information? What would an appropriate design look like? For
example, you may wish to develop a tool that loads data, ﬁlters and enhances the
information, maps the information onto some graphics that ﬁnally can be displayed
as a visualisation. But at each stage there would be alternative design solutions to
load data, such as to control where the data is collected from, is it live or is it stored
in a database, for instance. We can consider different designs on controlling how the
data is ﬁltered and reduced. Perhaps we could use a graphical depiction to draw a
funnel, and the picture of the funnel controls a parameter to ﬁlter the data. Or we
could use slider bars, or a menu, or a dial, for instance. And so on, for each of the
other parts of the model. In addition, there may be interaction tasks, that enable the
user to change some of the parameters.
8.7
Ideas (Focusing on Tasks: Bottom-Up Thinking)
From the overarching vision we can start to think about individual requirements
of the tool or product that you are designing. It is therefore useful to start to
consider speciﬁc tasks that the user must perform. In data visualisation the task
is the interaction that the user carries out, to achieve a particular outcome. In
creative design, the task is the purpose of the product that design represents. The
tool, algorithm, or product that you are creating may in fact perform many tasks.
Exploratory tools would enable the user to manipulate the data, and change system
parameters to see the data visualised in different ways. Therefore the user may be
able to perform many different tasks, such as to make comparisons or search for
speciﬁc objects.
One place to start could be on the speciﬁcation. You may need to build a system
that requires to perform several tasks, such as:
1. Image load. If you are designing an image processing tool, the user will expect a
few functions to be present. You will need to enable some mechanism for an
image to be loaded into the tool. This could be through some kind of menu
system. Perhaps you could only allow the system to load the image through a
camera picture. Maybe it only works on ﬁles that are placed in a speciﬁc folder.
However, or whatever the functionality is, we know that somehow an image will
be loaded into the tool.
2. Image manipulation. We could also assume that the image processing tool
would need to do some image-manipulation (such as making the image black
and white, or pixelating the image). Indeed, this is the whole reason for the tool.
While at the creation of the speciﬁcation we may not stipulate all the features
of the tool, we would know, however, that there are many different options and

230
8
Sheet 1 of the Five Sheets
features that we could add. We could imagine some fun functionalities such as
to add ears, hats, glasses and distortions to photographs, or a serious tool that
removes red-eye and changes the balance of the colours.
3. Image delivery. Third, we also know that the processed images will need to be
sent somewhere. Again there are choices. We can imaging having an application
that saves it to a ﬁle (through a traditional menu system), we could consider
alternatively that the system merely emails the new version to the user. Possibly
it is loaded into another program. Whatever the solution, though, we do know
that the result should be depicted somewhere. In abstract terms, we can think of
the system loading an image, doing some action and then placing it somewhere.
If we are making a data-visualisation tool then a good place to start is by
considering the data. Think carefully about the input data. We suggest that you
perform a data analysis, such that you fully understand the type of data that you
wish to visualise. For example, you should think carefully about:
1. The type of data that we have available.
2. The individual components of the system.
3. Is the data categorical or quantitative?
4. Is the data ordinal, nominal, interval or ratio.
5. Is the data big or small?
6. Does the data change rapidly or slowly?
7. Is there text data, or is it all numerical?
8. Is the data spatial, such to plot points over a geographical area, does it contain
ZIP code data (for instance), or can it be mapped on a two-dimensional plane,
such as a image from an x-ray.
9. How do you envisage the user interacting with the visualisation?
10. The ﬁnal visualisation that you create could be explanatory (it explains a
principle or some underlying data), descriptive (that describes the principles
that have been found), or exploratory (a tool that enables the user to discover
and explore interesting facts about the data).
Another model that can help you think through the tasks is Ben Shneider-
man’s [10] information seeking mantra.
Overview ﬁrst, zoom and ﬁlter, then details-on-demand
Overview ﬁrst, zoom and ﬁlter, then details-on-demand
Overview ﬁrst, zoom and ﬁlter, then details-on-demand
Overview ﬁrst, zoom and ﬁlter, then details-on-demand
Overview ﬁrst, zoom and ﬁlter, then details-on-demand
The overview would allow the user to see the whole data collection. The second task
a user should be able to do is to be able to interact with the information such to zoom
into particular items of interest, and maybe ﬁlter out some of the less interesting
parts. Third, the user should be able to select some items to query them further
and so to get more details on demand. To Overview, Zoom, Filter and Details-on-

8.7
Ideas (Focusing on Tasks: Bottom-Up Thinking)
231
demand we can add Relate, History and Extract. That is, the user should be able to
relate elements from one view to another, or be able to relate and group together
elements within a single view. The system should provide a task to save a list of
operations, and enable the user to go back to previous versions (undo, replay and
reﬁne). Finally, operations should be provided to extract sub-collections and sup-
parts of any query operations used.
Bottom-up methods consider smaller tasks. The classic work by Stephen
Wehrend
and
Lewis
Clayton
on
the
classiﬁcation
of
data
visualisation
techniques [13] is one suitable starting point. They provide a set of tasks that
the user may wish to perform. Other researchers have also added to this list. Below
is a list of suitable tasks that you could perform in a data-visualisation tool. These
individual tasks can help you think through the processes.
identify
locate
distinguish
categorise
cluster
determine
distribution
rank
compare between
compare within
associate
correlate
look up
index an element
Recently other researchers have considered different tasks the user would want to
perform. Matthew Brehmer and Tamara Munzner [3] propose a hierarchical model
that breaks down the tasks into two main factors of why and how:
Why
How
present
discover
encode
select
enjoy
lookup
navigate
arrange
browse
locate
change
ﬁlter
explore
identify
aggregate
annotate
compare
summarise
import
derive
record
You can use these verbs to think about the tasks of your system. To help you think
about the main functionality of the system. What it is meant to do. What aspects are
required (etc).
Continuing with the puzzle game scenario (see Fig. 8.5), we need to expand
the outline ideas. If we look at the sketches that have been made so far, then we
could conclude that our ideas represent traditional types of games. Sliding blocks
or jigsaw puzzles. Possibly this is alright, and they are suitable types of games. But
probably you would want to be more inventive and create some ideas that are more
imaginative. We need to move our mind into abstract ideas. We talked earlier in the
book (Chap. 7) on ways to encourage your mind to be more creative. It is time now
to put those ideas into action. Take a walk, look to nature, ask a colleague and go
for a coffee, start looking at opposites etc. whatever works for you.

232
8
Sheet 1 of the Five Sheets
Fig. 8.5 Continuation of the puzzle game scenario by adding more ideas to the initial sketches
We could star off with expanding the types of games. A maze, Sudoku, or sliding
blocks, or word games such as Hangman or word-searches. Perhaps try to mix two
ideas together. For instance, you could try to think what a game would look like if
it mixed a ﬁrst-person-shoot-out with a jigsaw. For example, you may need to shoot
the jigsaw pieces to select them, and then shoot the position to place them. Or think
how a puzzle would mix with nature. You could think about ants, and placing down
pheromone to get other ants to follow the trail. The ants will move faster when there
is more pheromone. But pheromone costs game coins.
Following from the ant-trail idea, you may remember similar games that can
already be planed. You look to current puzzle games for inspiration. A favourite
game of the authors is the Disney game “Where’s my water”. That depicts the
character Swampy the crocodile who wants to have a shower. As the player, you
have to swipe out sand to make a path for water to ﬂow in the right direction and
through pipes to give Swampy a shower. As the levels progress you have to turn
gates with water, kill the algae with disinfectant (and not getting it to Swampy’s
bath!) and get bonus points with retrieving ducks. Such a game could be a good
inspiration to our puzzle game. Perhaps get a hyaena through a maze by burning
down a trail (without burning the whole forest). Or imagine a construction game,
where you make sand castles. The quicker you place the sand castles the weaker
they are, but you need to be a fast builder such that you can get the highest tower.

8.8
Filter
233
However, do note, each of the ideas at this stage of design ideation are
incomplete. There are many uncertainties with these ideas, and many missing
parts to make it into a full solution. For example, the cannon/shoot jigsaw idea
would require further thought to make it work. The competition sliding blocks
concept would need to synchronised between users, something that we have not
yet discussed. However, we should have some idea of how this could be done. Also,
we have not described how the user would operate this game. What user-interface
features would be required? For the jigsaw cannon/shoot, how would the cannonball
actually select a piece? How would one be put into place? All these questions are
valid, and you should have an inkling of how they could be done. But should not
(at this stage, anyway) sketch solutions to all of these. The aim at this stage is to
explore the full range of possible ideas – and you do not have the luxury to fully
design every idea.
8.8
Filter
When you have created about 15–20 ideas you should start to consider the validity
or suitability of each of the concepts. Let us think again of our solutions in the
puzzle game scenario. We currently have some basic ideas: sliding puzzles, mazes,
word games, jigsaws, and some different styles such as burning forests, ant trails
and construction of sand castles. Are any of these ideas unworkable? Are any of
these ideas poor and need replacing (or improving) with alternative ones?
Do not think about the Filter task as merely a mission to remove bad ideas. But
rather, ﬁlter should be thought as a mechanism to help you improve the current
ideas. It is more about getting better ideas and more ideas, rather than removing and
deleting ideas you have already. Within the ﬁlter operation, turn your bad ideas into
better ideas! If they do not work then think how they could be made to work. If they
are broken, see how they can be ﬁxed. If they are a half baked idea, try to make it
into a more complete idea.
With the ﬁlter operation in your mind you start to question the ideas. Conse-
quently, you may start to think that the jigsaw idea is not good enough. First, a
simple jigsaw is not an original idea, it is not exciting and as it stands there is
no competition element (a requirement of the system). So the next question you
should ask yourself is “How can I make the jigsaw idea better, be competitive and
exciting?”
How about a jigsaw creator? Each opponent makes up their own jigsaw (within
constraints) and then sets it as a challenge to their opponent. The person fastest
to solve it wins. This means that the competition does not have to be live or
synchronously; it could be done asynchronously. With the cannon/shoot at the
jigsaw it is difﬁcult to choose a puzzle piece. So, how about changing it into a jigsaw
space-invaders game, where all the pieces move across the screen and the player can
shoot at the pieces to select them to build the puzzle. Turning our attention to the

234
8
Sheet 1 of the Five Sheets
idea of burning the forest down, we would need to reﬁne and change this idea. As it
stands, it is not a good idea. It is very incomplete and the idea perhaps does not make
sense. So to reﬁne it further, we can draw more pictures. With the game “where’s
my water” the player rubs the sand away. Whereas here, the player needs to dampen
the grass, such that it does not burn when the forest is set on ﬁre. Perhaps burning
forests does not create a positive vibe, so we could change it to burning grasses
down. Then the hyaena (or other animals) can follow the burnt path. They could
collect food or coins, which would help through the game-play.
Turning our attention to the sand-castle idea, we can imagine that this idea
is not clear. So this is another candidate for ﬁltering. We would need to have a
simulation of sand, such that it can be constructed as sand-castles. Possibly the
idea could be made to work, but we got thinking about the idea of construction,
and imagined a bridge-building construction game. Where the player constructs
bridges, constrained by the cost of the build and to build strong bridges such that
trafﬁc can pass across.
Practically, on the sheet, it is usually good to indicate your current thinking. We
have used bold arrows to indicate that we are creating a new idea from an old. You
may like to sketch a single line, such to cross out, a non-working design. A subtle
(yet simple and clear) indication is required. Do not take the pen and obliterate the
idea with lots of ink. This not only looks messy, but also you would not be able to
see the original idea. Sheet 1, in particular, is meant to demonstrate your thought
process. It is a record of your usefull (and not so) thoughts. So, just use a simple
line. You could annotate the designs using different ways, such as highlighting the
better ideas, or using different colours for the less-workable solutions. Usually, a
simple line through the unworkable idea, and an arrow to indicate where the better
idea is sketched, is a suitable method. Figure 8.6 shows more sketches of the puzzle
game, and explores a variety of diverse ideas.
8.9
Categorise
By the end of Sheet 1, you need to have arrived at three possible ideas, that will
be considered in more detail on Sheets 2, 3 and 4. In particular, we wish to have
three ideas that are different. It would not be suitable to have three ideas that are
similar because we are trying to explore the full range of possible solutions to our
problem. How you make the decision as to what is similar, is up to you, taking into
consideration the goal, requirements of the project and aspects of the design, etc.
The Categorise operation will help you start to ascertain what aspects of the design
are similar. We suggest that you categorise the work into ﬁve to ten categories. Too
few, and you do not have anything to combine/reﬁne in the next section. Too many
categories and you are not performing a categorisation!
Conceptually, we can think of the designs as being points in an N-dimensional
space. Similar designs would be positioned close together, whereas designs that are
dissimilar would be further apart. See Fig. 8.7. As we consider how to categorise

8.9
Categorise
235
Fig. 8.6 Sheet 1 of the puzzle scenario. With the Filter operation, not only consider what would
not work, or is not suitable; but rather focus on how to make these impossible ideas work better or
be useful
Fig. 8.7 In a conceptual space, each idea is represented by a dot. Similar ideas are placed close
together, whereas dissimilar ideas are further apart

236
8
Sheet 1 of the Five Sheets
the design, we need to be aware of the whole design space. In our mind, we need to
consider what all the potential designs are, and start to estimate what is similar and
what designs are not. We need to think how similar the designs are, in comparison
to the quantity of overall designs. It may be that you do not have enough design
ideas. Indeed, if you only have one or two different design ideas, then you would
not be able to categorise them into groups of ﬁve or more. Consequently, you may
need to go back to the original goals, and think about new ideas and sketch some
more design solutions. If you have lots and lots of design ideas, then clearly you
will need to put more into each category, otherwise you end up with 50 classes with
each design being too similar.
There are different ways to annotate your design, in order to describe that you are
putting them into categories. One way that we have found to be convenient is to ring
similar designs. Often the designs are located together on the sheet, because as you
think through the concepts one idea sparks another (probably similar) idea. We also
suggest that you name these ideas. The names do not have to be anything special
and do not spend too long thinking about the names, you will merely use them to
reference each idea. Probably the name that is instinctive, and comes quickly to your
mind would be the best word, and one that is also memorable. These names should
be simple. It is not useful to have sentences or long phrases, just one word that
indicates the type of concept behind the design idea. For example, for the puzzle
game, we categorise the ideas into Word, Maze, Number, Slide, Mosaic, Jigsaw,
Mechanic, Trail (Burn/water), Cube words 3D, see Fig. 8.8.
As you think through your design sketches so far, and think how they are similar
to each other, you must also think about the appropriateness and relevance of each
idea. Have you got enough design ideas? Are you able to start to see which idea
would be a candidate for design sheets 2, 3 or 4? Are you exploring the whole range
of designs. Are you being comprehensive in the coverage of your design ideation?
As teachers ourselves, we have seen hundreds of people do the FdS methodology.
One of the challenges that learners face with the Categorise operation is that they
simply do not create enough design ideas. Without many design sketches and a
thorough consideration of the problem, it is impossible to categorise the ideas. If you
do not have enough design ideas it will create challenges later. Lacking sufﬁcient
quantity of ideas, and with only few categories, it is difﬁcult to combine those ideas
together. This then has a further problem, that often the ideas are too similar and
therefore the three middle design ideas are not different enough. It is therefore worth
considering the design space and making sure that there are enough ideas, before
continuing.
8.10
Combine and Reﬁne
The fourth part of the ﬁrst sheet is to combine and reﬁne the ideas further. Going
back to the idea of the journey of sheet 1 we can remind ourselves that we need to
not only create new (and many) ideas through divergent thinking, but also we need

8.10
Combine and Reﬁne
237
Fig. 8.8 Categorising the ideas of Sheet 1 on the puzzle game. Place the ideas into groups of ﬁve
to ten categories. Do this by circling similar ideas and giving them a unique (one word) name
to converge onto some speciﬁc designs that will not only answer the question, but
be suitable candidates for the middle sheets. Suitable, such that each addresses the
goals and provides a solution to the problem, but also are three separate designs (in
a conceptual design space). By putting the ideas into categories, we are expressing
that they are similar. Remember, we are on a journey to get three ideas. This
categorisation helps us get closer to converging to three designs. The next stage,
though, is to think divergently, such to explore more potential solutions.
With Combine and Reﬁne, we start to mix and match different ideas from
previous parts of the design sheet. Perhaps each of your design ideas (so far)
addresses different aspects of the problem. Some parts of the sheet could be more
focused on the type of puzzle, while other parts of the design could focus on
competition or scoring aspects of the game. Now we need to draw these ideas
together. As a result of Combine & Reﬁne process, you should have more sketches,

238
8
Sheet 1 of the Five Sheets
but better designs. They will be more complete and start to look like the ﬁnal
product. Try to think how different categories can be put together, or take parts
from different design ideas.
To generate new ideas, from your current ones, you could mix (combine)
different categories together. Consider questions, such as: if I mix category X with
Y, what do I get? Can I get a better design if I mix aspects of two designs in different
categories? Again let us consider the puzzle game (see Fig. 8.9). We could think of
the two categories Maze and Mechanic, and consider what a game would involve
if it was a building-maze game. Conceivably the player could construct mazes by
putting component parts together. Or Slide C Trail could become a game where the
player slides the blocks in a certain way to make a trail, for the animal to follow.
Similarly we could create a Mosaic C Trail game. Or Number C Mosaic, such that
the player needs to crack the code in the mosaic to make the trail. The Cube Words
idea could be mixed with the Mechanic idea, such that word trees could be built.
Reﬁning means to make the ideas more complete. We could go through the
previous ideas and add annotations or clarify some ideas with more sketches. We
could add some words to make some of the sketches clearer, or we could sketch
some new ideas. One of the unusual ideas is that of the Trail (Burn/Water) game.
Here we have sketched four screens that could be used in the game-play. The 3D
geometric puzzle idea could also be reﬁned. These are similar to the traditional
metal puzzles, that usually consist of two parts, where the player tries to separate the
geometry. We can consider this to be a virtual world, whereby the player virtually
moves each part to try to separate different geometrical shapes. We could go on, but
at some point, we need to determine that we have got enough ideas, so we need to
move onto question to take our ideas through to the next sheets.
8.11
Question
The ﬁnal task of the ﬁrst sheet is to question and reﬂect on the designs. There are a
few questions that we need to ask at this stage. Not only you do need to reﬂect over
what you have achieved, but you need to think about the designs that will be taken
to the following stage. It is difﬁcult to exactly specify the types of questions that
you should ask, because it will depend on the type of challenge that you are trying
to address. But you should be thinking critically over your designs, and at least be
in a situation to decide upon three principle designs.
Have you created good-quality designs? For instance, if you are a student doing
an assessment, you should ask yourself “do the designs that I have made address
the requirements of the assessment task?” If your designs are not suitable for the
assessment, then you will need to reﬁne your sketches, ideas and create new designs,
or adapt ideas that you have already sketched. Another similar question you may
ask is “is the design sheet suitable to get the highest mark?” This is a pragmatic
question, and requires you to be able to critically analyse your own work, not only

8.11
Question
239
Fig. 8.9 When you combine and reﬁne, make sure that you are sketching new concepts
over the quantity but quality of the ideas. We could also change this question slightly
to “would the sheet be high enough quality to show to a client?” We are reﬂecting
on our own designs, and the quality of our design sheet. If you do not think it is tidy
and clear, then you may need to do the sheet again. But do remember, the sketches
that you put on the page, are merely sketches. They are not meant to be works of
art, but they are meant to be clear and suitable to be understood.

240
8
Sheet 1 of the Five Sheets
Are the designs exciting? You are creating sketches for a reason. They are not
merely picture or artwork for enjoyment, rather they represent something that will
be (hopefully) built. Consequently, the designs should be inspiring and should
encourage someone to want to implement them. Do your designs motivate? Do they
inspire? Are they novel? Are they new? Will they excite someone to drop everything
and wish to implement it now? Once you have put the pen down (so to speak) that
you have completed the designs, and if the next thought is “I must implement this
now, this is exciting”, then the design is good. A good design would excite the
develop and encourage them to build it, without delay.
Do you have enough designs? Another set of questions that you should ask must
concentrate on the choice of the three middle designs. Especially you should ask
yourself: do you have enough design ideas, to be comfortable that you have explored
the whole design space? Do you have enough designs to make a consideration of
three principle designs? Do you have three candidate designs? If you do not have
suitable designs then you should reﬁne the sheet, and add more design ideas. If you
have enough space to add some sketches, then you could add these in between your
current ideas. However if you have not enough space then you may need to consider
to do the sheet again, focusing on the important aspects of your solutions.
Do the designs fulﬁl the goals of the brief? Are the designs empathetic? Are they
suitable for the user? Have you really gotten to the heart of what the client wants?
Are the designs something that the client will like? Do they address the need, enable
users to perform the necessary tasks, and would it be something that is positive and
would beneﬁt society?
Hopefully by contemplating these different questions, you are now in a position
to decide on the three principle designs. Hopefully, you will have many potential
candidates. Any of the designs would be suitable, and would fulﬁl the goals of the
brief.
Let us go back to the puzzle game (Fig. 8.10). We have sketched ideas, and
explored whether the game is a jigsaw, maze, word or number game, we have
considered each of the ideas through the Filter operation, and reduced the quantity
and added more ideas to the sheet. We have grouped the ideas together in the
Categorise task, and then mixed the concepts together with the Combine & Reﬁne
operation. It is clear that we have too many ideas, but not all the ideas would be
suitable for sheet 2, 3, 4. For instance, the ant pheromone trail idea is unclear, the
sand-castle idea we ﬁltered out, and exchanged it for the Mechanic (build a bridge
idea). In addition, we need to make sure that the ﬁnal three ideas that we choose
are different. We have ﬁve(ish) main ideas: (1) The Trail/burning maze game, (2)
sliding puzzles to build a pattern, (3) mechanic games (such as the building bridge),
and (4) jigsaw games. In addition, there are several word-type games that we could
choose, but we decide against these because there are many types of these games
that can be downloaded and played already. We also decide that the jigsaw type
games would not be taken to the next stage, because likewise there are many jigsaw
games available.

8.11
Question
241
Fig. 8.10 You need to question whether you have sufﬁcient design ideas, that the design solutions
address the needs/goals of the task, and whether you have (at least) three principle design concepts,
that cover a wide range of the alternative designs

242
8
Sheet 1 of the Five Sheets
To complete this section, we summarise the questions you could reﬂect over:
1. Do the designs address the requirements of the assessment task?
2. What design will get the highest mark?
3. Is the sheet high enough quality to show a client?
4. Do your designs motivate?
5. Do they inspire?
6. Are they novel or new?
7. Will they excite someone to drop everything and wish to implement it now?
8. Do you have enough design ideas, to be comfortable that you have explored the
whole design space?
9. Do you have enough designs to make a consideration of three principle designs?
10. Do you have three candidate designs?
11. Are the designs empathetic?
12. Are they suitable for the user?
13. Have you really gotten to the heart of what the client wants?
14. Do the designs fulﬁl the goals of the brief?
15. Are the designs empathetic?
16. Are they suitable for the user?
17. Have you really gotten to the heart of what the client wants?
18. Are the designs something that the client will like?
19. Do they address the need, enable users to perform the necessary tasks?
20. Are the designs positive and would beneﬁt society?
8.12
Exercises
The ﬁrst sheet of the FdS enables you to consider many alternative designs. In these
exercises we want you to start thinking through the sheet and sketch designs.
Ex. 8.1 —
Sheet 1
We suggest you start with the puzzle game scenario. Think about what puzzles you
could explore, and what you may like to implement. To prepare for these exercises
you will need a pen and a sheet of large paper. We suggest also that you have some
coloured pens.
1. Ideas. Start by sketching different puzzle games. Start by looking to nature or
man-made objects for inspiration. Perhaps look on the internet, and search for
different puzzles or board-games to gain inspiration. Sketch about 15 mini ideas
on the page.
2. Filter. Think through your ideas, and see if any are unworkable, If so, then try
to consider how they could be made to work. What aspect was it that needed to

8.12
Exercises
243
be Filtered? Can you change it around into a feature? Can you improve that idea
so it does work?
3. Categorise. Put circles around ideas that are similar. Make sure you have enough
ideas. If you do not have enough ideas, then you will need to return to the Ideas
and ﬁlter stages. Make a summary list of these categories. By this time, you will
be about half way down the page.
4. Combine and Reﬁne. Look at the categories you have, and try to combine
different ones together. What ideas are sparked from this mixing? Look at the
current ideas and try to reﬁne and improve them.
5. Question. Now you need to reﬂect over the design sheet, to decide which
concepts you will take through to the next stage. Sketch about ﬁve different
ideas, to summarise them, and then decide which three ideas you will choose.
Ex. 8.2 —
Design different applications
Now that you have done one sheet, you will be able to do the sheets faster and neater.
You will know where to place the information, and be able to space the individual
designs close enough such that you get everything on the page, but with enough
separation to make it look neat. Here is a list of other topics that you could perform
the FdS on:
1. Develop an application to visualise graphically different search results.
2. Develop a game that judges the users’ estimation skills. For example, you could
get them to click a button to start, and get them to press it again when they
believe 10 s has elapsed. Or they could guess how many balls are in a jar. Or
they could guess how many words are in a long paragraph.
3. Develop a website that challenges users to cook food from a random set of
ingredients. The algorithm will need to work off a list of produce, with the
system allowing users to upload their recipes and photos of what they have made.
The public then vote on the best.
Ex. 8.3 —
Use the sheet in your work
Use the FdS method in a project of your own choosing. Perhaps this could be
for an assessment at College or University, or it could be for a project at a
company.

244
8
Sheet 1 of the Five Sheets
References
1. Abram G, Treinish L (1995) An extended data-ﬂow architecture for data analysis and
visualization. In: Proceedings of the 6th conference on visualization (VIS’95). IEEE Computer
Society, Washington, DC, pp 263–269
2. Bergman E (2000) Information appliances and beyond: interaction design for consumer
products. Morgan Kayfmann, San Diego
3. Brehmer M, Munzner T (2013) A multi-level typology of abstract visualization tasks. IEEE
Trans Vis Comput Graph 19(12):2376–2385
4. Brooks FP Jr (1993) Keynote address: a vision for visualization. In: Proceedings of 4th IEEE
visualization conference, San Jose, p 2
5. Entman RM (1993) Framing: toward clariﬁcation of a fractured paradigm. J Commun
43(4):51–58
6. Kahneman D (2011) Thinking, fast and slow. Farrar, Straus and Giroux, New York
7. Norman DA (2013) The design of everyday things, revised and expanded, reprint paperback
edn. MIT Press, New York
8. Pirolli P, Card S (2005) The sensemaking process and leverage points for analyst technology
as identiﬁed through cognitive task analysis. In: Proceedings of international conference on
intelligence analysis, vol 5, pp 2–4
9. Rams D (1970) Ten principles for good design. www.vitsoe.com
10. Shneiderman B (1996) The eyes have it: a task by data type taxonomy for information
visualizations. In: Proceedings of the IEEE symposium on visual languages. IEEE, pp 336–343
11. Stolterman E (2008) The nature of design practice and implications for interaction design
research. Int J Des 2(1):55–65
12. Upson C, Faulhaber T, Kamins D, DSchlegel, Laidlaw D, Vroom F, Gurwitz R, vanDam
A (1989) The application visualization system: a computational environment for scientiﬁc
visualization. IEEE Comput Graph Appl 9(4):30–42. doi:10.1109/38.31462
13. Wehrend S, Lewis C (1990) A problem-oriented classiﬁcation of visualization techniques. In:
Proceedings of the 1st conference on visualization (VIS’90). IEEE Computer Society Press,
Los Alamitos, pp 139–143

Chapter 9
Sheets 2, 3 and 4 (The Middle Sheets)
Abstract The second, third and fourth sheets (the middle sheets) of the Five
Design-Sheet method allow three designs to be explored in detail. Each sheet
contains ﬁve parts: textual and reference information, sketches of what the tool or
system would look like (the Big Picture), details of the components and operations
of the design, and the Parti (the unique-selling point and principle ideas that
underpin the design to make it special), ﬁnally advantages and disadvantages of
the design.
9.1
Pause and Deliberate on the Designs
At the end of sheet 1 you should have sketched a few summary pictures that
represent the three main design ideas that you will now work through in more detail.
In your mind you will certainly have unanswered questions, where some parts of the
chosen ideas will be less deﬁned than others. So now, this is where those ideas are
ﬂeshed out. The goal of these middle sheets is to describe three different alternative
solutions in enough detail such that someone could (potentially) implement them.
We do acknowledge that even at the end of completing these middle sheets there
will be things to plan further. Indeed, at the end of the whole design process there
will be aspects of the design that need to be further explored, and this detail will be
added on the realisation sheet 5. Even at the end of sheet 5 the person/team doing
the implementation will need to interpret the sketches and there may be aspects still
to work out. But by the end of the whole process we do expect that most of the core
detail will have been considered, and sketched on paper.
At this stage, you may be asking yourself “why three designs” and “why not more
designs?” Well, three is a sweet spot. One or two designs would be too few, and four
and ﬁve (or more) designs would be too many. The sketches that you make on each
of these middle sheets will take you time. The sweet spot of three designs means
that you both have a choice of designs to take into realisation, while not having to
sketch too many, which will take long to create, or discuss with a client. Especially,
if you are working with a client you will need to take to them three design sheets
to discuss. After discussion, they may conclude that none of the design ideas on the
three middle sheets are suitable (for whatever reason). Perhaps you have made some
critical design errors or wrong assumptions, or possibly the company has changed
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_9
245

246
9
Sheets 2, 3 and 4 (The Middle Sheets)
their goals somehow. In that case you will need to create new sheets and discuss
those with the client. But in most situations three middle sheets, covering three
different design ideas, are sufﬁcient.
So, let us assume that (from the process of sheet 1) you have created three suitable
and potential designs. Now, you need to add detail to these ideas and sketch what
they will look like. You will also need to consider how a user will interact with your
system and be clear (in your mind) over the uniqueness of the idea (its Parti). It
is evident that you will need to organise your thoughts: you are taking something
that is (basically) sketchy and un-clear (as sketched on sheet 1) and making it more
concrete, more complete.
What you need to do is contemplate each of the three design ideas in turn. The
best way to achieve this is to sit down, close your eyes and ﬁrst think deeply about
one design idea. Mull over the detail, and meditate on the functionality of each
idea. Start to think what the sketches would look like on the page. Begin to imagine
what the end design-sheet would look like, and what type of graphics you will need
to sketch, such as to describe the design efﬁciently. For each design you need to
conceptualise what the tool could look like, if it was built. You will need to imagine
in your mind to how the user would interact with the completed tool. Perhaps even
think how a user would use the tool everyday.
We are suggesting that you do not rush into sketching the designs on this sheet,
but you actually take a step back and reﬂect on, not only, the design ideas, but also
how they will appear on the sketched page. Remember James Webb Young’s [8]
process of Gather Materials, Think, Relax, Ideas, Rework (as detailed in Sect. 7.3
and Fig. 7.3). He emphasised deep contemplation and relaxation such to get the
thoughts organised in your mind.
There is no prescriptive way to achieve this visioning. However, we have found
that better design sheets are created when you slow down, close your eyes and think
carefully about each design. So we suggest you follow the subsequent plan:
1. Think deeply about each design. Take a holistic view of the idea and try to
imagine what it would look like if it was in use. Consider how a user would
interact with the system or the location of where the tool will be used. What does
the location look like? How would the tool be used everyday by a user? How
does it integrate with other tools that the user already has. Etc.
2. Imagine what the whole sheet would look like. Ponder over what content is
needed on the sheet and how it is positioned. Try to imagine what sketches would
be needed, and how they are positioned on the page.
3. Imagine the appearance of the ﬁnished tool. Consider how it would look, if it
was built. Reﬂect on what indicative sketches you will need to explain the idea. Is
one interface (picture) required to explain the system, or are there several screens
that need sketching?
4. Imagine a user actually using the tool/software. What commands do they
press? How do they interact with the tool? What buttons, sliders, menus or
controls do they use?

9.2
Starting Sheets 2, 3 and 4
247
5. Consider the uniqueness of each design. Obviously you have chosen this
design because it is different, why? What stands out about this design? Why
is it different? What makes it special?
6. Think why this design is different. Or perhaps consider what aspects of
this design are better than the other two designs. What are the advantages or
disadvantages of this design idea?
It is clear to see that we are starting to consider, what are we going to sketch on
each of the panels on the middle three sheets. By imagining what the sheet would
look like, and what the main interface would look like, you are starting to plan the
Big Picture panel. By thinking about how the user would interact with the tool, you
are starting to consider Components and Operations. As you consider the uniqueness
about the design, you are thinking about the Parti section and the unique selling
point of that particular design. Finally, as you start to think over why this design
is different and how it compares with other designs, you are considering the Pros
and Cons of this design. By using your imagination and creating these thoughts and
pictures in your mind, you are starting to plan what sketches will need to place on
the sheet, and how the sheet will be laid out.
9.2
Starting Sheets 2, 3 and 4
In Chap. 8 we talked about the journey of sheet 1, where you start off with vague
ideas and reﬁne the concepts as you sketch down the page. The journey for the
middle sheets is all about exploring the details and making sketches that describe
how the tool or system would work. Each sheet must be stand-alone and represent
a different design. One design per sheet. You will need to work through each of the
three designs in turn. One challenge people have is knowing which to do ﬁrst. It
does not matter which design to work through ﬁrst, you just need to choose one.
Indeed you would have already narrowed the designs to three. Just pick the ﬁrst one
and work on that idea.
The ﬁrst task is to sketch lines to delineate the structure of the page. Always
use the 2 by 3 layout, of two larger parts on the left to three parts to the right.
This structure creates ﬁve distinct panels. We do not suggest that you stray off
this structure. Not only does this structure act as a memory aide for you as the
designer, but also provides a way for someone to instantly recognise a design sheet
of the FdS. If all the design sheets look the same, in terms of structure, then it
will appear neat and tidy. Moreover, someone who uses this method will be able to
easily read the sheets. They will know where to look to ﬁnd the pros and cons, for
example. Someone who is learning this methodology, likewise, will start to know
what information gets placed in each panel. The structure is shown in Fig. 9.1.
It would be possible to complete the panels in any order. But we suggest that
you complete the panels in this order: (1) complete the meta-information, (2) make
sketches that describe the Big Picture. (3) write the Operations that the user will
perform, (3) detail the uniqueness of the design in the Parti panel, and ﬁnally
(4) detail the pros and cons of the design, as shown in Fig. 9.2.

248
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.1 Sample sheet
structure for sheets 2, 3, 4 and
5, showing the two-by-three
format
Fig. 9.2 We suggest you
complete the panels by ﬁrst
completing the information,
sketching the Big Picture,
considering the Components,
sketching the Parti and ﬁnally
working through Pros and
Cons

9.3
The Big Picture of the Puzzle Game Example
249
Let us consider again the puzzle game. Remember from the previous chapter the
description:
You are tasked with designing a mobile based, puzzle game app with different levels of
difﬁculty, inter-user competitions and in-app add-on content. The puzzle game must be fun,
engage the user, have increasing gameplay difﬁculty, scoring mechanisms and a way to
make in-app purchases to help you progress through the game faster.
We can see from Figs. 9.3, 9.4 and 9.5 three sheets that represent sheet 2, 3 and
4. These sketches give you an idea of what you are working towards. You may not
be able to read all the text on the sheet, this is ok, we will explain these panels in
more detail in the following sections. But for now, just look at the whole sheet to
gain an understanding of what content is required on the sheets. The middle sheets
contain both sketched shapes and brief phrases. The left two panels show pictures
with circled numbers, these numbers refer to the components of the system. By
labelling the components it is easy to refer to the right part of the design. You can
label based on the position in the page, or you can label individual buttons, sliders
or other interface components.
Start the sheet by completing the information panel (top right), include your
name, date, title of the project and any reference data. This will allow you (or
someone else) at a later stage to understand the subject, author and reason for
making these sketched plans. The author, date, sheet number and title is the
minimum quantity of information that should be included here, but it may be that
you are working in a larger organisation and so many of these design sheets could
be created over many years. Therefore, you may wish to add a reference code in this
space.
9.3
The Big Picture of the Puzzle Game Example
Within the top left panel we need to sketch indicative pictures that help the reader
understand what the principle and main concepts of the design are. To help you
consider what to sketch, you may think through several questions: What would the
system look like? Are there multiple key screens that need to be explained? Is the
tool used within a speciﬁc environment? If there are multiple parts of the design,
then each of these parts need to be sketched.
For the puzzle game example, it is clear from the ﬁrst sheet that there are many
different types of puzzle games that can be created. So, the sketches that we make on
sheets 2, 3 and 4 need to explain the three chosen ideas in more detail. The complete
sheets are shown in Figs. 9.3, 9.4 and 9.5. So that we can focus on the big picture
panel, we enlarge just the Big Picture panel in Figs. 9.6, 9.7 and 9.8. From these
sketches, you can see that we have shown, what we think to be, the main screens
of the application. We include just enough text to support the sketches, but not too
much that would make the sketched pictures to busy to understand. We also add
numbered labels, which we will use in the Components panel. To provide insight
into our thinking process we explain each sheet in turn:

250
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.3 Sketch of sheet 2 of the puzzle game. The sheet follows the same structure as sheet 3 and
4: mostly sketches on the left of the page, with mostly text on the right. Labels (e.g., numbers)
are added to the sketches (especially the Big Picture panel) that are used to reference the content
between panels

9.3
The Big Picture of the Puzzle Game Example
251
Fig. 9.4 Sheet 3 for the puzzle game. The sheet follows the same structure as sheet 2 and 4

252
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.5 The fourth design sheet. The sheet shows the bridge building puzzle game scenario

9.3
The Big Picture of the Puzzle Game Example
253
Fig. 9.6 Big Picture design of the puzzle game, sheet 2. The bigger pictures are the more important
screens – the main game screen, the top sketches then represent the stages of the game. With the
two images on the bottom-right showing player data (credit, fuel, animals saved, etc.) and the
competition screen. These sketches give an idea of the main concepts and also provide an indication
how the game is played

254
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.7 Big Picture design of the puzzle game, sheet 3. The sketches show a game, where players
slide blocks to make patterns. The blocks are constrained in their movement, such that every time
they are moved to an adjacent square they cost the player one move

9.3
The Big Picture of the Puzzle Game Example
255
Fig. 9.8 Big Picture design of the puzzle game, sheet 4. The last puzzle game focuses on the
concept of building bridges. Exact forces are calculated, with the quantity of materials used.
Stronger bridges will be able to carry more vehicles and last longer, and will deliver higher point
scores
•
Sheet 2 – Big Picture panel (Fig. 9.6). When thinking about the Trail Burn
simulation solution we considered that ﬁrst we could explain the process, and
secondly we need to explain what the main screens look like. So, at the top
we sketch four individual smart-phones with different screen shots. These are
slightly smaller as they represent a mini storyboard. Second, we need to explain
some of the main screens, and for that we sketch three larger designs. In
sequence, the ﬁrst represents the main game page, second the score screen
and third information about competitions. It is clear that there are unanswered

256
9
Sheets 2, 3 and 4 (The Middle Sheets)
questions. How are the competitions held? How do people join? What does their
screen look like, and how is it different to yours? But these questions are more
about implementation, rather than the big design questions. Through our colour
choice we also demonstrate what potential colour combinations could be, also
our designs explain the organisation of the main screen, and what the buttons and
main user-interface components would be.
•
Sheet 3 – Big Picture panel (Fig. 9.7). For the sliding blocks pattern builder, we
take a slightly different approach. Here we focus on the two users, and what they
would see. In fact, their views are very similar. There may be difference in their
scores or levels, but they would see the same puzzle and try to get the answer
faster then their friend. So we show two side-by-side views. We also include
some sketches that explain in more detail how different levels could be achieved.
•
Sheet 4 – Big Picture panel (Fig. 9.8). Our third chosen design is the bridge
building game. We use a different design approach for this solution. First we
rotate the tablet computer on its side. This gives the application a larger area for
the output (the bridge itself) and also allows the controls to be neatly positioned
to the right. Potentially you could minimise the controls, and see the bridge in
full screen, perhaps when you are testing it with model cars! We also took the
decision that the main screen would be bigger, with two supplementary screens
sketched slightly smaller. To achieve this, we had imagined what the output
would look like before starting to sketch the designs. For the map view, we can
imagine building bridges around a town, and creating the necessary infrastructure
to bring people into the town. We can imagine having competitions, whereby
different game players try to make stronger town with better infrastructure of
roads and bridges.
9.4
Examples of the Big Picture Panel
One of the questions that learners often ask is: what should the sketches look like
in the Big Picture panel? The sketches do not need to be complex and can be made
from simple lines, squares and other geometric shapes. But, importantly, within this
panel you will need to place enough sketched lines to get the concept across. If it is a
device that is being explored, then you will need to sketch something that resembles
the device. If it is user interface you are designing then you will need to both sketch
something that explains what device this is for, and also what the interface looks
like. Certainly if there are many parts, modes or screen changes, then you will need
to explain (at least) the main ones.
It is also clear that there are many different types of interfaces – a user need not
control the computer through a mouse interface, instead they can use their body or
move a sensor device. For example, we could imagine a mobile app game, whereby
the user controls the game through the accelerometer sensor on the smartphone.
Players move the phone up to make the character jump, or turn the phone left to

9.4
Examples of the Big Picture Panel
257
move the character left. Not only should a sketch of the game be shown, but also
how the user interacts with the game, using the smartphone.
There is no one way to sketch the designs, and we encourage you to develop
your own style. What is clear, though, is that there are many different types of
outputs that could be created. It would be impossible for us to illustrate every type
of interface and tool that could be created with the FdS method, and as discussed
before, the FdS can be used for a range of tools and interfaces. But, to inspire and
encourage you in your design work, we present several examples and sketches;
covering technologies, graphical user interfaces (websites, smart phone applications
and those with coordinated windows), virtual reality interfaces and those that focus
on animation.
9.4.1
Technologies and Devices
Technologies and devices are designed to ﬁt a clearly deﬁned purpose and will be
used in a speciﬁc environment. You will not only need to explain the environment,
but you will also need to sketch what the interface will look like. Especially, if you
are creating a new device with different component parts, then pictures that explain
the inner workings may also be useful. Consequently, there are different abstractions
that will need to be displayed, see Fig. 9.9.
At the highest abstraction level, start off by sketching something that explains
the environment. The context of where the device will be used should be clear to
the observer. For example, if the device is going to be used outside, then sketch a
picture of a tree and a park bench, say. Or if it is to be used in an ofﬁce environment
then sketch a work desk, chair and desktop computer. Consider you are designing
a mobile shopping platform, where users take a handheld device and attach it to a
shopping cart. The device helps the user navigate and locate the items to buy within
Fig. 9.9 Shopping cart application. Showing three levels of abstraction for the Big Picture. The
shopping cart with the mounted device, the device and its mount, and ﬁnally the device itself

258
9
Sheets 2, 3 and 4 (The Middle Sheets)
the superstore. The cart would be on wheels, such that it could be pushed round the
shop, and the device would be attached to it. Along with sketches that demonstrated
the whole concept, you would also need to explain (in sketches) how the device was
attached to the wheeled cart. It would not need to be a work of art, merely sketches
that explain the idea, and give the observer an understanding of the key elements.
At the next abstraction level you would then need to explain the interface. Several
operations may be required. A login stage, to let the device know who is going
shopping; a ﬁnd a product map stage, and maybe a purchase item stage. A bar-code
reader may be on the device such as to allow the user to add that item to their virtual
shopping basket, when they add the physical product to the shopping cart.
At the ﬁnal level of abstraction, you would consider the underlying workings
of the device. Maybe it is actually a smartphone that runs an application, and it
connects to the store’s computer via Wi-Fi, such that the store can track the position
of all such devices. Thinking about this idea, it feels that it would be this feature that
stands it apart from the other two designs. Therefore, it maybe that this abstraction
idea is expanded in the Parti panel of this design sheet.
9.4.2
User Interfaces
There are many different styles of user interfaces that have been created and used
in the past. We would not be able to explain and describe how the Big Picture
should be designed for each of these different types of interface However, what
is clear, especially in the past 10 years, is that interfaces are changing. There is a
trend to move away from command-line and menu driven interfaces, and even from
graphical user interfaces (GUIs) to transparent interfaces [3] and in other situations
to those which are controlled through verbal commands. Indeed, natural language
interfaces are sure to become more prevalent. And with the new technologies of
today, such as games controllers, wearable devices, and head mounted displays, we
need to think differently and work out how a user would interact with the computer.
For instance, when we are wearing a head mounted display, it is difﬁcult to use a
mouse and select some window icon. Therefore gestures or whole-body interfaces
may be better to control and interact with the computer. You could gesture at the
computer to save the ﬁle, or move your body left to control the game character to
move left.
What you are doing in this panel is telling a story. Sure, you are communicating
the story in sketched form, but it is still a story. It describes different aspects of
the system and how parts will work together. Because the story will be different,
depending on the technologies used and the type of system you are building, you will
need to employ various strategies, and emphasise one aspect over another. Sketching
command-line interfaces requires you to think about the textual controls that will
be need, whereas sketching a picture that describes a GUI interface requires you to
think what screens and windows are needed. In contrast, sketching how a user would
control an invisible interface requires you to think how you can sketch pictures that

9.4
Examples of the Big Picture Panel
259
explain what operations the user would perform, and indeed what the user would
see when they are looking at the screen.
Below we describe some of these interfaces and include some sketches to
demonstrate different styles of sketched design. We start these examples by looking
at Graphical User Interfaces (GUIs). There are several styles of GUI interface, and
different control parts (choice buttons, sliders, radio buttons, text input etc.) that
could be included. You may be designing a menu bar to play an audio playlist.
Or, re-designing a form for clients to enter their personal details. Or designing a
new website for a company. With these types of interface you will not only need
to sketch what the system looks like, and even include the colour choices and other
design elements, but you will also need to identify how the user will interact with
the interface. Where about on the screen are the interface components? Do you have
a side panel with all the buttons and sliders, etc. or are they included throughout
the screen? You will therefore need to add words to the panel to explain you ideas,
but obviously there is a balance to be made, too much text and the words take over,
whereas with too few words it can be difﬁcult to understand what is being shown.
Websites
Let us consider you are designing a new website. First, think what does the landing
page look like, what other key pages are required. Second, consider how the user
navigates from one page to another. Aspects of the interaction will be added in the
Components panel (panel 3) but you will need to include in the Big Picture panel
details of what the interface looks like. Finally, consider design elements and the
appearance of the site. Where will the logo be displayed? What colour combinations
ﬁt in with the theme of the site? Are the colours accessible to a wide range of users?
Figure 9.10 shows a sketch of the landing page for heritagetogether.org. The site
allows users to upload photographs of heritage monuments, the server attached to
the site then turns these two-dimensional pictures into three-dimensional models.
The site focuses on prehistoric monuments, such as standing stones, burial cairns
and dolmen (megalithic tombs with a stone laid on each upright).
Smart Phone Application
Smart phone applications are somewhat similar to websites in their structure. They
often contain many screens and the user can navigate between the screens. A major
difference, though, is that because it is a handheld and touch device, we would wish
that the user could control the interface by using their thumb. In Fig. 9.11 we show
some sketches of a note taking application, where the user can add and delete notes
in journals and that the journals (folders) are depicted to the user as if they were
leather-bound books. The user can then select to add a new note, add the content,
and add photographs (which launches the camera application on the smartphone).

260
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.10 Sketch of the website for heritagetogether.org. The site allows participants to upload
photographs, that the server then turns into three-dimensional graphical models. The user can
explore these three-dimensional pictures
Another aspect of smartphone interfaces that is becoming more common is
that because the devices have positional sensors (such as GPS or can estimate the
location based on which network the device is connected to) new context-aware
applications can be built. Weather applications can provide information relevant to
your locality; games can be created that make use of your immediate locality; maps
can be annotated with local sights of interest; or advertisements and offers on goods
can be delivered to you that are relevant to nearby shops.

9.4
Examples of the Big Picture Panel
261
Fig. 9.11 Example of a note taking smartphone application, where a user can add/delete notes and
add photographs to notes. The notes are stored in virtual journals
Interfaces with Multiple Coordinated Windows
Interfaces often contain many windows and frames. Not only is this seen in graphical
operating systems (WindowsTM, IOSTMetc.) but in data-visualisation there are many
beneﬁts of displaying several graphical views of the data [5]. Each of the forms
of view (scatterplot, line graph, bar chart etc.) provide the user with a alternative
way of looking at the data. Some are good at displaying continuous data, others
aggregate the data into separate bins to show summary information, while others are
good at showing outliers. It is also beneﬁcial to coordinate user interaction between
windows, such that any operation that is made in one window is reﬂected in other
windows. A user can select a group of points on a scatter plot, the appearance of

262
9
Sheets 2, 3 and 4 (The Middle Sheets)
these values is changed (e.g., they are changed from black circles to red circles).
Then any associated window, that also displays the same data, can change the
appearance of those values in that window. This works well with a matrix of
scatterplots in a statistical data visualisation tool, or can be used across any type
of views.
When sketching such coordinated multiple view systems [5], you will need to not
only represent how the information is displayed (and show that it is a scatterplot,
line graph or bar chart, etc.) but you will also need to explain how the windows
are linked together. In addition, you will need to sketch and add labels to explain
what operations the user can do. For example, oceanographic researchers look to
explore how ﬂooding occurs over an estuary. Figure 9.12 shows a sketch of the
Vinca oceanographic tool [2] that we created in collaboration with ocean scientists.
The domain scientists wish to analyse the extent of potential ﬂooding as well as
exploring catastrophic ﬂooding events. They will analyse tidal ﬂows and look at
directions of the ﬂow of water at a point, and calculate how much water passes
across a particular cross section of the estuary. It is clear that the users wish to
look at the problem using different views. They wish to see the cross-section and
bathymetry of the estuary. They wish to see an overview of the whole estuary and
see where the maximum tide would reach, or the maximum ebb, and perhaps a tidal
average. They wish to see how the estuary changes across tides, and also over the
course of a year or perhaps several years. They wish to be able to ﬁlter the data to
select places perhaps which have high saline, low saline or high mixing.
Virtual Reality and Tangible Interfaces
Interfaces do not need to be only on a two-dimensional screen. It is possible to
create interfaces that are three-dimensional, and where users can interact directly
with their hands, arms and bodies. In fact, tangible interfaces are becoming more
prevalent and widely accepted, where physical objects are used to interact with the
computer. Figure 9.13 shows a picture of the SamsungTMSUR40 PixelSense table,
which is running a heritage application, where users can place tangible objects onto
the surface, and the table recognises these objects and displays additional related
information. In this demonstration the tangible objects are heritage monuments,
and the returned data describes the heritage sites and their signiﬁcance [4]. This is
table-top archaeology, where people can explore historic events. We can imagine
expanding this idea to include other three-dimensional renderings of the scene,
perhaps adding in round houses and prehistory people, plus linking this information
with other views, maps and statistics of the sites, as sketched in Fig. 9.14.
Not only can we start to interact with the data through touch and by using tangible
devices, but it is possible to create interfaces that excite any or all of our senses.
In fact, these different interfaces are moving us away from, so called, desktop
environments, into systems where a user can see, touch, hear, and possibly smell

9.4
Examples of the Big Picture Panel
263
Fig. 9.12 Multiple coordinated view systems enable the user to see the data in different ways. The sketch depicts the oceanographic visualisation tool Vinca [2].
In this tool, operations are coordinated. The user can choose the location on the map, which displays the rose plots and ﬂow plots. The user can change the
ﬁltering of the Parallel Coordinate Plot, to reduce select speciﬁc data to be displayed in all windows. The whole plots animate through time, and every graph
updates data depending on the current date being displayed

264
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.13 The SamsungTMSUR40 PixelSense showing two 3D printed tangible objects that
represent different standing stones. Additional information is displayed to the user when the objects
are placed on the table
Fig. 9.14 An imagined virtual desktop application, where users can add tangible objects onto the
table to interact with heritage objects within an immersed three-dimensional environment

9.4
Examples of the Big Picture Panel
265
Fig. 9.15 With touch screen applications you may need to describe different touch operations.
Simple sketches of individual ﬁngers will be suitable in this case
and taste [6, 7]. Such interfaces are called multi-sensory, multi-modal or natural UIs
(NUIs).
These interfaces are often transparent to the user. The touch surface on our
smartphone does not explicitly indicate how to control it, however we still all know
intuitively that we need to touch and slide the screen to scroll something up the
page. The action of zooming in or out, by ﬁrst touching the screen with two ﬁngers
and moving them together, is both intuitive and transparent and natural to the user.
There are no buttons, no sliders, no additional graphical elements that a user must
touch. When you are sketching the controls of these types of interfaces, it may be
suitable to explain how the user interacts with the touch screen. In Fig. 9.11 we
sketch a thumb to illustrate a swipe action, and there are other actions that we can
perform. Your sketches do not need to be complex, and do not need to include the
whole hand: simple sketches that depict one ﬁnger will sufﬁce, such as illustrated in
Fig. 9.15.
9.4.3
Designs That Focus on Animation
Other tools and systems rely heavily on animation. With these type of tools you will
need to explain several aspects. First there will be many assets and models that will
be used in the animation. Maybe you are animating a robot character. The robot is
initially shy, and then starts to explore the world and become more conﬁdent. We
are telling a story with the robot, therefore you will need to sketch the story or at
least explain the key moments in time to tell your story. This will give the animator
and idea of how the robot moves, how it explores and what it looks at.

266
9
Sheets 2, 3 and 4 (The Middle Sheets)
One way to tell this story, is to sketch the key frames of the animation. These
become storyboards that explain the key steps in the animation. Each of the boards
within a storyboard are represent snapshots of the data within time. You will need
to consider what the assets are, how they are positioned in one frame, and where
they are located in the subsequent frame, and indeed what the key frames are. There
will obviously be a limited amount of space on the design sheet, and practically you
will only be able to include about twelve key frames. Therefore if your animation
includes more frames then you will need to continue on separate sheets of paper.
Animation can be used, not only to entertain, but to inform. In fact, a growing
sub-area of data visualisation is to explore how animation can be used to explain
data, algorithms or processes. Potentially these explanatory visualisations can
be used to explain any concept. For example, generating contours from two
dimensional data can be achieved through a piecewise linear algorithm such as the
marching-squares algorithm. First we see the data in a grid of data points, we can
then merely consider four points (a square) and work out how the contour traverses
through this square. It may proceed through one of the faces and out of the opposite
side, or it comes in through one face and goes out an adjacent face. We could also
consider two contours going through one square. So to create a contour we can
explain how the algorithm moves through a series of key steps. Figure 9.16 shows
storyboards that can be used in the Big Picture panel.
9.5
Operations and Components of the System
In the next panel, you need to consider the operations or components of the
system. Operations describe the interaction that the user will need to achieve.
While components represent the key parts of the system (any assets) and their
relationships.
Probably most of the designs you will want to build will include some kind of
user-interface. Whether they are graphical interfaces, tangible interactions, mobile
phone applications, or virtual reality systems, they will need to have mechanisms
for the human to interact with the computer. Therefore, in most instances you will
need to consider both what the interaction components are and what happens when
you operate them. You will have already sketched (on the Big Picture panel) what
these interface components look like. Now you need to explain how they operate.
You have already thought whether the user will press, swipe, slide or click, now you
need to consider exactly what happens when the user does this action.
In summary, you need to consider action and result pairs. Let us think about a
few examples. Perhaps you need to ask the user whether they agree to your terms
and conditions. There will be a single tick box next to some text. You label the tick
box in the Big Picture panel (we use the convention that the labels are numbers that
are circled), and against the same label in the Component panel you write “user

9.5
Operations and Components of the System
267
Fig. 9.16 Sketch storyboard of the marching-squares algorithm, in a storyboard showing key frames of an animation to help explain this algorithm

268
9
Sheets 2, 3 and 4 (The Middle Sheets)
checks the box to agree our terms and conditions; can only save user data when box
is ticked”. Most of these action/result pairs are expressed by saying what the user
does, and then what the computer actions as a result of the user interaction. We can
consider others: “swipe the screen up, with two ﬁngers, to change the screen into
the camera mode”, or “double click with the mouse on any location, a popup panel
appears showing more detail”. In this last case, you may also reference back to the
Big Picture panel to the sketch that shows the popup.
If you are not describing an interactive tool, then you will need to consider
what are the assets and components of the system. For example, with a computer
animation you will need to include a list of the main assets and their relationships.
These assets are the objects that will be animated in the scene. Consider, what are
and how they react and move around the world. What operations can you perform on
the whole animation? E.g., can it be played, replayed, fast-forwarded? If there is no
speciﬁc interface, such as you when you are developing a text command language,
then you would include the key language elements, and what they do.
In summary, the Big Picture panel is used to explain what the tool will appear
like (should it be built), whereas in this panel you are considering what the system
does and how the user controls those actions. Perhaps you have many functions
within the system. It may be not possible to describe all of them. Indeed, you
probably will not be able to list all of the functions of the system, but you should
(at least) explain the main functions. Often, in interface design, the functions can
be considered hierarchically, such that most can be broken into many smaller sub-
functions. You will not need to explain all the minute detail, but make sure you
explain the main functions of the system within this panel. For example, you
will probably have a function that loads up a previous session. We can merely
say, “select menu, from pull-down list, to load a stored session, opens popup
ﬁle browser”. You will not need to explain the full details of the ﬁle browser –
as the information is well known and someone will know exactly what you are
meaning.
Let us consider the puzzle game again. You may need to reference the complete
sheets, which were shown in Figs. 9.3, 9.4 and 9.5. But it is clear to say that
there is a close link between the information in the Big Picture panel and the
Operations/Components panel. We take each sheet in turn, provide a transcript of
the wording, and show how the components panel relates to the Big Picture panel.
Through this description we explain our thought process.
When sketching the Big Picture for the Trail Burn game we were thinking at the
same time, about what the tool will look like, and how a user will interact with it. In
fact, it is impossible to separate these two concerns. You will need to sketch buttons,
sliders etc. (i.e., interface components) and so you will already have a good idea of
what to write in the Operations/Components panel. In one respect, what you need
to do is merely to label the components and then write summary text of what they
do. For this game we write:

9.5
Operations and Components of the System
269
Fig. 9.17 Operations and components panel of the puzzle game, for sheet 2. Showing Main menu,
Game play and Sub-menu parts of the design
1
2
3 Swipe screen to change between play, score or competition screen.
4 In play screen. Swipe on the screen to deposit the water. Need to leave a trail
for the animals to follow. The ﬁre burns down the grass to make the trail.
5 Press the ﬁre icon to select ﬁre, to burn path.
6 Time counts duration of ﬁre burning.
7 Press home to release animals that walk to new home. If dead-end then they
stop. Some may get lost. Animals counted at end (new home reached).
8 Score-screen stats. Press to purchase more.
9 Select to see rank and XP. Competitions etc.
It is wise to think logically through the parts. Early on in the design, we realised
that there are three main parts to the user-interaction. First, a main menu that allows
the user to change between the different screens. They can change between the main
game mode, or look to the competition screen, or purchase items etc. Second, the
game play screen would allow users to play the game. Finally, there are sub-menus
that control aspects of the competition or gem purchase, etc. We demonstrate these
schematically in Fig. 9.17.
This is done similarly for the other two sheets. In sheet 3 (Fig. 9.18) we have
two main aspects of the interface. First, interactive components that help the user
play the game, and secondly other settings to make the game more interesting,
such as levels, hints etc. For sheet 4, the bridge building game, we again have
three main screens and have a range of operations for each part of that screen.
On Fig. 9.19 we show the map screen, main game-play screen, and competition
screen. For each of these sheets the operation and components panel are similar.
They contain action/result pairs. For example, on sheet 3 we have “ 1 slide blocks

270
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.18 Operations and components panel of the puzzle game, sheet 3. The sliding blocks game
has two principle interaction sections (Game play and Other settings). The operations are written
in note form (on the right) and reference the Big Picture panel (on the left)
Fig. 9.19 Operations and components panel of the puzzle game for sheet 4 (the Bridge Building
game). In the Big Picture panel three main screens are shown (left) with the relevant interactions
written on the right panel

9.6
The Parti (The Main Focus)
271
to make pattern, moves counted and displayed”, and “ 6 Press to enter settings. To
change music, sound effects, buy extra packs”, and for sheet 3: “ 3 Construction
screen. Drag resources from menu. Resources are limited, can be purchased with
gems; stronger build made from metal, but costs more”.
9.6
The Parti (The Main Focus)
At the start of this chapter we asked you to pause, and deliberate over your designs.
You needed to think about each of the ideas in turn. As well as thinking through the
ideas placed on sheet 1, and imagining in your mind what the design sheet will look
like on sheet 2, 3 and 4, we asked you to consider the uniqueness of each design,
(see Sect. 9.1). We were starting to get you to think about the parti, or the main focus
of the design. We wrote:
Obviously you have chosen this design because it is different, why? What stands out about
this design? Why is it different? What makes it special?. from Sect. 9.1.
The Parti is one of the most important panels of the design. It presents the main
concept that will underpin your whole of your design. It is the idea that guides your
design, and keeps your ideas on track. It signposts your decisions, and permeates
through all your thoughts and details of all other aspects of the design. You can
consider the Parti to be a philosophy, or an ideal. If we think of the Parti for a
political party, then we can think of different ideologies. One party could have an
ideal that as a Government they would borrow money, spend it on people, with a
plan to grow the economy. Whereas another party could have an ideal to make cuts
in Government spending and get the people to invest. It is the underpinning ideology
that all policies within the party are derived. Hopefully, you are already clear why
your designs are unique, why they are different, and understand what makes those
ideas stand apart from others.
If you do not know what this idea is, or what makes this particular concept stand
out from other ideas, then you will not be able to motivate you work. It will be
difﬁcult for you to explain your idea to someone in a succinct way, and it will be
difﬁcult for you to continue. Without knowing this particular focus, you will not be
able to clearly express your ideas and your goals to someone else. You will need to
sit down and rethink your designs. We are not getting you to do something that is an
intellectual exercise. It should not be challenging, rather the opposite, it should be
something created implicitly. It should come easily. Indeed, often it will be the ﬁrst
thing that comes into your mind: the big idea. The Parti, however, is the essence, the
inspiration, the principle idea, or the key aspect that will frame your design.
Let us can consider a few similar situations to help you think through the idea of
the Parti. Imagine you are in an interview and the interview panel asks you to explain
your principal skills, you will need to answer succinctly. In another situation, we can
imagine a student at a University being asked “explain what your project is about”.
In your answer you will need to be able to explain your answer clearly. We can take

272
9
Sheets 2, 3 and 4 (The Middle Sheets)
this a little further, and think if your boss, perhaps the Director of the company, or
Vice Chancellor of the University meets you in a lift, and asks you “what are you
working on?” You will need to give a quick answer that explains your topic simply
and in an interesting way. You will need to explain the main research question, or the
concept that underpins your project. Or perhaps we may meet someone on the train,
who asks you: “what do you do for a living?” In each of these questions, you could
give an hour long presentation of all the nitty gritty details, but really what you want
is to present a succinct summary. While these are useful examples of summarisation,
they are not physical, and most of the interfaces we will be creating will outcome
something tangible.
Let us consider a few more examples that will help us explore the Parti concept
further.
•
Eco-friendly house. Consider you are building an eco-friendly house. You
decide to build the house out of straw bales. The Parti, in this case are the straw
bales. It is the thing that stands it apart from other houses. If you remove the straw
bale then you would not have an eco-friendly house. Perhaps there are other ways
to make it into an eco-friendly house, but the straw is the concept that makes your
house different from other houses. In the Parti panel you will need to sketch the
bale, and start to explain how the bale are stacked, how you bind them together to
make a strong load-bearing wall, you can think how you will put waterprooﬁng
on the straw, etc.
•
Image manipulation application. Perhaps you are designing a new image
processing application. One of the challenges is to quickly edit photographs
and upload them to your favourite social media application, all with one hand.
The design on the middle sheet should express that it is a one-handed image
processing application. In the Big Picture panel you draw what the interface will
look like (with all the buttons and menus), in the Components panel you detail
the main operations of the system, whereby in the Parti panel you will sketch this
main idea: one-handed image processing. You will need to sketch what makes it
operable by one hand, how users can easily upload the photo to the social medial
tool. There will be one main concept that will make this one-handed application
work.
•
Visualising hierarchical data. Another example could be to visualise hierarchi-
cal data. Here you may have an idea of an inﬁnite zoomable interface. Where
you can zoom into the data, and then open it up further, and further. A sketch
of this is shown in Fig. 9.20. In the Big Picture panel, you would need to draw
the actual interface, including all the individual menu parts; there may be other
visualisations (other views) of the data, such as scatterplots or line graphs, that
shows the data in a different way.
•
Tabletop tangible interface. Let us consider a tabletop interface, see Fig. 9.21.
We could vision a system where anything placed onto the table is instantly
recognised by the computer. For instance, when a hot cup of coffee is placed on
the table, the temperature of the coffee is given to the user and the screen shows
that it is coffee. When pens or pencils are placed on top, the table recognises

9.6
The Parti (The Main Focus)
273
Fig. 9.20 Consider the example of an inﬁnite zoom. In this example, the Parti is a sketch of the
idea, where users can zoom into the content and then zoom to gain more information
Fig. 9.21 A tangible tabletop idea, where anything placed on the table is instantly recognised by
the computer. The mug of coffee is recognised, along with the temperature of the contents. Letters
are recognised and the table interface loads the email application so that you can reply to the letter
the brand and could automatically tell you where to purchase some more. When
papers are put onto the table it recognises who sent the letter, and suggests to
write an email in response.
So how do you express the Parti? Whatever your vision you will need to sketch
something that represents the signiﬁcance of the idea in a succinct way. Matthew
Frederick in his book titled “101 things I learned at Architecture School” wrote:
A parti can be expressed several ways but it is most often expressed by a diagram depicting
the general ﬂoor-plan organisation of a building and, by implication, its experiential and
aesthetic sensibility. Matthew Frederick [1].

274
9
Sheets 2, 3 and 4 (The Middle Sheets)
Instead of designing a building, you are probably designing a user interface.
There is no one particular answer to what the Parti will look like. For instance,
if you are developing an algorithm, it make that it is the algorithm itself that is the
main aspect of the design, and therefore explaining this concept would be suitable
to be sketched. You may be developing something that is more tangible as a user
interface, therefore you may wish to focus on the technology used. Perhaps, you are
designing a racing game, then you may sketch something that explains how the cars
move around the circuit; whatever stands this game apart from other racing games.
Let us look again at the Puzzle game scenario. We have already chosen the three
scenarios for Sheets 2, 3 and 4. The trail-burn simulation game, sliding blocks to
build a pattern and bridge building. Just by explaining these ideas in three or four
words we are actually presenting the Parti. It is something that makes it special, and
determines the uniqueness of that idea.
Trail-burn simulation game. The design idea on sheet 2 of the puzzle game,
describes a game whereby the user needs to drop virtual water on the map to
wet the grass. Players start ﬁre to burn away the grass; it burns every part of the
grass where the water was not placed. That is, it burns the dry grass. Therefore,
the main selling point of this game is the idea of burning a trail. We will need a
simulation to model this concept, therefore we can imagine that the Parti needs
to describe the burning idea, and how the water stops the grass from burning.
We can imagine (as a programmer) that we will need to have a data structure to
hold the state of the grass (whether wet, dry or burnt). One way to achieve this
is through a two-dimensional array that holds different types of data. We sketch
this detail in the Parti panel, see Fig. 9.22.
Sliding blocks to build a pattern. The sliding blocks game works because the
blocks are constrained, see Fig. 9.23. A user cannot move a block diagonally. We
would need to work out how to constrain the movement, as game players move
the blocks around. Also we would need to have a pattern library, or some way
to create different patterns, and a way to decide whether the pattern has been
created.
Bridge building. The ﬁnal idea is to look at the bridge builder game Fig. 9.24.
Within the Parti panel you would need to sketch the principle concept, which
is a mechanical correct application that calculates forces and bending moments
of a bridge, and allows different vehicles to cross. If the vehicle is too heavy then
the bridge would collapse.
9.7
Pros and Cons of Each Design Sheet
Reﬂection is an important aspect of any design. Sit down, look through your designs
and ascertain what is good and what is bad. What works and what does not? What
are the positives and what are the negatives? What do you like, and what do you
not like? You should be able to perform a balanced review of your design sheets.

9.7
Pros and Cons of Each Design Sheet
275
Fig. 9.22 The Parti panel of the Trail-burn simulation game is shown. This is from sheet 2 of the
puzzle game, and shows two core aspects: the data-structure and simulation of the game
There should be aspects of the design that are positive and probably other parts that
are less so. To write the pros and cons, you will need to put down aspects that are
good (and positive about the design) and things that are bad (and negative towards
the solutions). One way to consider the pros and cons, is to think through the design
in terms of:
Goals. Do the ideas fulﬁl the goals of the project? Has the initial intention of the
idea been accomplished in the design? Is the solution all that was wished for?
Fit. Does the solution ﬁt the brief? Is it something that fulﬁls the aims of the original
meeting with the client? If you are doing this for an assessment, then consider if
the solution will give you the best marks!

276
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.23 Parti panel sketch of the puzzle game, sheet 3 – the sliding blocks game
Usability. Are the ideas something that would turn into a usable product? Is the
interface that has been designed usable? Would it be suitable for the users to
operate?
Useful. Is it something that will be used every day? Are the products going to be
helpful for humans?
Aesthetics. Does it look good? Would the product (if it were built) look pleasing
to the user? Is it geometrically well-balanced? Does it follow good-design
principles? Is it beautiful?
Cost. Is it something that could be built, or would it be too costly? How much would
it cost to build? Would the manufacturing or building of the product/tool take too
long and be too costly?

9.7
Pros and Cons of Each Design Sheet
277
Fig. 9.24 Parti panel sketch of the puzzle game, sheet 4 – the bridge building idea. The main idea
is that the geometry and mechanics of the bridge are calculated, such to ascertain if the built bridge
is strong enough for a vehicle to pass
Eco-friendly. Would the product be eco-friendly? Is it something that harms the
environment or supports the environment to be healthier?
Unique. Is the idea unique? Is it something that stands out from other ideas? Would
the product (if it was built) going to be different from other products, or merely
another version of the same idea?
Buildable. Can it be built? Is there a way to build the concept? Can it actually be
built within the timescale and funding given to the project?
For sheet 2, we have written three positives and three negatives. You need to add
enough positives and negatives to demonstrate that you have considered the good

278
9
Sheets 2, 3 and 4 (The Middle Sheets)
and bad points of the idea. The trail burn game requires the user to tackle a quest,
albeit a short task. They would receive victory points when the task is completed
successfully. On the sheet we discuss that while it is a simple game it also may be
confusing for new users. As a programmer, we would also need to do some research
to discoverer how the simulation will work in practice. Therefore we write:
C
New game (although inspired from current games). So users may ﬁnd it
interesting.
C
Simple game play. But needing strategy to play and work through puzzle.
Different levels could introduce new puzzle elements, such as things to pick
up, or enemies to dodge.
C
Work asynchronously Potentially synchronous for speed challenges.

Unclear how simulation would work.

Need server (and online communication) for competitions.

May be too complex rules and puzzle elements too simple.
Now you have completed sheets 2, 3 and 4, you should be in a situation to decide
which is the best design to take forward into the realisation stage. If you have a
client, you will need to arrange a meeting to discuss the three design ideas. The
purpose of the meeting will be to discuss each of the three design sheets and work
out which is the best design to take forward. Moreover, you should be able to look
at the positive and negative points on each sheet to decide which solution is the most
suitable idea to take forward. But, if you do decide that none of the three ideas are
suitable, then you will need to create another design sheet that does contain the best
idea. You will need to do more work improving or changing the designs. Moreover,
you may decide that none of the solutions are best on their own, but that ideas could
be taken from each of the designs from the middle sheets. In other words, you are
mixing together (somehow) different parts of sheets 2, 3 and 4 to create a new, and
hopefully better design solution.
9.8
Exercises
Ex. 9.1 —
Determining the Parti
The parti is the signiﬁcant concept that your design is built on; in marketing you may
call it the unique selling point (USP). The problem with these concepts is that while
some have an implicit understanding of what they are, explaining them to others
is not always as easy. Also, sometimes the parti requires a level of nuance that is
hard to articulate, as the signiﬁcant feature may not be the most obvious feature or
principle requirement.
For this scenario, consider going out to buy a jacket; you decide that you want
one that is black, waterproof, and warm. When you ﬁnally get to the shop you
ﬁnd twenty jackets from different manufactures that ﬁt that speciﬁcation. Your core
requirements have been met, so how do you determine which jacket that you will

9.8
Exercises
279
take home? Beyond the core functionality there a multitude of other features which
you may not have considered, but which may ultimately make one jacket stand out
as unique amongst the rest. This is the important, distinct feature that will make this
jacket stand out from the others; this is the parti. So, how do we determine what the
parti of our design is? Especially in cases where a number of features could claim
that particular honour. We recommend two methods to help ascertain what the parti
is, the unique method and the network method.
Part I
—
Unique Method
The unique method focuses on trying to identify the quality that makes your design
stand out from the competition. Firstly, begin by listing each signiﬁcant feature of
your design. By signiﬁcant features we mean qualities that the concept could not
exist without. If you removed any of them, the design would be something radically
different to what you are proposing. Call this ﬁrst list design features.
Now consider two alternative designs which try to solve a similar problem.
These designs may come from your domain knowledge, a competitor’s product for
example. However, if you do not have any direct competition you could consider
other designs of your own, from your other design sheets. Now write down a list of
the signiﬁcant features of these designs. Call this second list the domain features.
Now return to your design features list and cross out any items which appear on
your domain features list. You will probably ﬁnd that there are a number of items
which are common across both. This should leave you with a smaller subset, one of
which could be the parti.
Part II
—
Network Method
The network method takes a different approach and attempts to determine which
feature is the most functionally important. We sometimes call this the keystone
feature, it is the one the design relies on, the one that holds everything together.
As with the unique method, start off by writing down all the signiﬁcant features
of your design. However, instead of writing these down as a list, you will write them
down in random positions on a piece of paper, giving space between each word.
Once you have done this, start drawing links between each of the features,
highlighting essential dependencies with arrows. For example, consider a tool that
displays a graph based on an algorithm that pulls speciﬁc data from a dataset. In
this example, we would write down three features “graph”, “algorithm”, “dataset”.
The graph requires the algorithm to work, so we would draw a line between the two,
with an arrow pointing from the algorithm to the graph. We would also draw a line
between the dataset and the algorithm. However, in this example (for illustration)
there are a number of alternative datasets we could use, so this is not an essential
dependency, so we would not add an arrow to the line.
Once you have completed this process you should have a diagram that resembles
a spider’s web, connecting the different features of your concept. The most
important feature may be instantly obvious at this stage, it could be one feature
that many other features are linked to, this may be visually evident. However, the

280
9
Sheets 2, 3 and 4 (The Middle Sheets)
Fig. 9.25 Seven features that are connected. Image for the exercise
keystone feature can also be ascertained by counting the essential dependencies that
lead away from it. For each feature, count any arrows lead away from it (highlighting
the essential dependency). If there is an arrow leading away to a dependent feature,
you should count any arrows that lead away from that dependent feature.
Let us consider Fig. 9.25. Features 3 and 5 are directly dependent on feature 4;
feature 7 is directly dependent on feature 5. In this example, feature 4 would have a
score of 3 (the sum of all the dependent features). Conversely, feature 3 would have
a score of 0, as there are no connected features which are essentially dependent
on it.
Part III
—
Summary
Both the unique and the network method rely on a subtly different deﬁnition of what
the parti it. The unique method assumed it was the feature that sets the concept apart
from other ideas, the network method assumed that it was the keystone feature of
the design. This is a deliberate distinction, as how you deﬁne the parti feature will
depend largely on your application and what you are trying to achieve. However,
employing a couple of different methods will help you to better understand the
important features of your design, which will beneﬁt your ongoing evaluative
process.
Ex. 9.2 —
The middle sheets
We suggest you continue with the puzzle game scenario. Think about what designs
you will choose from the ﬁrst sheet, and start to consider how you will create these
middle sheets.

References
281
1. Information. Start by sketching what the application would look like. Add
some text to annotate the sketches, and add labels to the interactive buttons,
sliders, etc.
2. Components. Consider the action-result pairs. What does the user press, swipe
or choose (say) and what happens by the computer as a result of the users’
action?
3. Parti.
Sketch and write in the parti panel, describing the salient vision of the
idea.
4. Pros and cons. Add a list of advantages and disadvantages for the game.
5. Continue with sheets 3 and 4. Now that you have completed sheet 2, now you
can turn your attention to the other two ideas.
Ex. 9.3 —
Design different applications
If you sketched other sheet 1, then sketch the middle sheets for all the examples
that you tackled. We include a summary of the three design ideas from the previous
chapter:
1. An application to visualise graphically different search results.
2. A game that judges the users’ estimation skills.
3. A website that challenges users to cook food from a random set of ingredients.
Ex. 9.4 —
Use the middle sheets in your work
Use the FdS method in a project of your own choosing. Perhaps this could be for an
assessment at College or University, or it could be for a project at a company.
References
1. Frederick M (2007) 101 things I learned in architecture school. MIT Press, Cambridge
2. George
RL,
Robins
PE,
Davies
AG,
Ritsos
PD,
Roberts
JC
(2014)
Interactive
visual analytics of hydrodynamic ﬂux for the coastal zone. Environ Earth Sci 1–14.
doi:10.1007/s12665-014-3283-9
3. Harrison BL, Ishii H, Vicente KJ, Buxton WA (1995) Transparent layered user interfaces: an
evaluation of a display design to enhance focused and divided attention. In: Proceedings of
the SIGCHI conference on Human factors in computing systems. ACM Press/Addison-Wesley
Publishing Co., New York, pp 317–324
4. Miles HC, Wilson AT, Labrosse F, Tiddeman B, Grifﬁths S, Edwards B, Ritsos PD, Mearman
JW, Möller K, Karl R, Roberts JC (2015) Alternative representations of 3D-reconstructed
heritage data. J Comput Cult Herit 9(1):4:1–4:18. doi:10.1145/2795233

282
9
Sheets 2, 3 and 4 (The Middle Sheets)
5. Roberts JC (2007) State of the art: coordinated & multiple views in exploratory visualization.
In: Andrienko G, Roberts JC, Weaver C (eds) Proceedings of the international conference on
coordinated & multiple views in exploratory visualization (CMV2007). IEEE Computer Society
Press, Los Alamitos, pp 61–71
6. Roberts JC, Walker R (2010) Using all our senses: the need for a uniﬁed theoretical approach to
multi-sensory information visualization. In: Kosara R, Jankun-Kelly TJ, Weaver C (eds) IEEE
VisWeek 2010, Workshop on the role of theory in information visualization
7. Roberts JC, Ritsos PD, Badam SK, Brodbeck D, Kennedy J, Elmqvist N (2014) Visu-
alization beyond the desktop–the next big thing. IEEE Comput Graph Appl 34(6):26–34.
doi:10.1109/MCG.2014.82
8. Young JW (2003) A technique for producing ideas. McGraw-Hill, New York

Chapter 10
Sheet 5 (Design Realisation)
Abstract This chapter focuses on developing the ﬁnal design. The next steps are to
decide on which of the three design ideas (from sheets 2, 3 and 4) to take forward,
then develop the ideas further and add details to create a design realisation sheet.
This sheet needs to include enough details to allow someone to understand the needs
of the products and include enough information to judge that a tool (when built)
fulﬁls the goals of the design. We lead the reader through ways to make precise
thoughts over each of the designs and provide examples of the whole process.
10.1
Which Alternative Design?
After considering alternative design ideas, on sheet 1, and developing three ideas
within the middle sheets, you have achieved something special. You have already
thought deeply about the problem. You have broken the problem into individual
components and put together these ideas to make three potential solutions to your
problem. There are clearly different aspects to your solution and several elements
that you have considered. Indeed, you have sketched what it would look like (the
Big Picture), how a user would use it and operate it (in the Components panel)
and also you have explained the underpinning vision (the Parti). In fact, you have
already made a critical analysis of each of your ideas through the Pro and Cons
panel. You should be pleased with your work and satisﬁed that you have consider
all parts necessary to take the ideas forward into a solution that will be useful and
can be built. So, what do you do now? Well, there is a clear pathway to progress
your design.
Decide on the which design (or what aspects) will become the ﬁnal design
realisation.
Develop the ﬁnal sheet that draws all the ideas together and adds enough detail for
someone to build the product.
Deliver your design sheets, to whoever needs them.
To make the ﬁnal decision of what design to take forward (from the middle
sheets) you need to take a holistic view. You need to consider the bigger picture
of the vision, how each deign fulﬁls the requirements and how it will be received
by your peers or your client. You have been making decisions all along this process,
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_10
283

284
10
Sheet 5 (Design Realisation)
Fig. 10.1 Think through the designs using a series of questions. Does the design fulﬁl the goals,
does it ﬁt with current systems? Is it usable? Is is it beautiful, cost effective or Unique? Is the
presented idea eco-friendly, and ﬁnally whether it is useful and is it buildable?
and you have indeed written some of these pros and cons on each middle sheet.
Now you need to work out the essential and key advantages and disadvantages. You
should put aside some of the ﬁne detail of the designs, and think about the bigger
issues, and whether the designs are ﬁt for purpose. (You can always ﬁx some of
problems with the ﬁner detail in this ﬁnal design realisation sheet).
At the end of Sect. 9.7 we asked you to decide on the pros and cons of each
design by working through a list of nine topics. We can use this list again, this
time for the purpose of taking an overarching view of each design. Think about the
goals, ﬁt, usability and usefulness of the idea, what it looks like, cost, whether it is
a unique and novel design, if it is an eco-friendly design and ﬁnally if is buildable
(see Fig. 10.1).
10.1.1
Goals
Whether the design fulﬁls the goals is one of the most important thoughts you need
to consider. Initially, at the start of the project, there will be a reason for posing the
design challenge. You need to go back to this reason, reﬂect over each of the middle
designs and how they achieve the goals. These goals could include improving a
current product, developing a new product line, or creating a new product that will be
more cost efﬁcient and cheaper to run. There could be other goals, such as increasing
sales, expanding into new markets or improving customer services. Finally, there

10.1
Which Alternative Design?
285
may be a more pragmatic reason. It may merely be a task that someone has set
you to do. Perhaps you have been given an design assessment, as part of a College
or University course, or possibly it is part of a larger design project. Whatever the
reason, you need to reﬂect upon them and ascertain which design best fulﬁls the
goals.
10.1.2
Fit
There are several aspects to consider with ﬁt. We can ﬁrst think how the design
ﬁts with the market. Is there a market for the product and are there real potential
customers? Indeed, products or tools that have a strong ﬁt within a market are more
likely to succeed. Scott Edgett [5] writes
Superior new services exhibiting a high level of synergistic ﬁt combined with a strong
product/market ﬁt and having high quality launches with well-executed marketing activities
were more likely to be successful than were new products that scored poorly on any of these
traits. Scott Edgett [5].
When we think about the goals of the project (as we have done above) and the ﬁt
of our solutions to the goals we are making a decision whether there is a solution
ﬁt. Whereas now we are working out whether there is a product/market ﬁt. Talking
in 2007 on a blog post, Marc Andreessen, of Andreessen Horowitz, published a
post (available on the internet archive) titled “the only thing that matters for a new
startup”. In his post, he explains that product/market ﬁt means “being in a good
market with a product that can satisfy that market”. There is a clear sweet spot,
where the product ﬁts the needs of people. He continues:
...you can always feel product/market ﬁt when it’s happening. The customers are buying
the product just as fast as you can make it – or usage is growing just as fast as you can
add more servers. Money from customers is piling up in your company checking account.
You’re hiring sales and customer support staff as fast as you can. Reporters are calling
because they’ve heard about your hot new thing and they want to talk to you about it. Marc
Andreessen, of Andreessen Horowitz.
We can consider other aspects of ﬁtness. Is the solution something that fulﬁls the
aims of the original meeting with the client? Is it something that will stand the test
of time and work over a long period?
10.1.3
Usable
If the tool is given to a user, would they be able to use it? Would it be clear to them
how to operate the tool. If something is not usable, then people will not continue
to choose to use the tool. They will not come back to your webpage. Or they
will delete the application from their phone. Usability can be considered by two

286
10
Sheet 5 (Design Realisation)
important dimensions: is it something that is easy to use, and is it something that
is pleasant for people to use? If it is enjoyable and people can operate it, then it
is usable. Usability can be improved through user-testing. First, you would need
to get representative users to evaluate your idea, and second ask them to achieve
representative tasks, ﬁnally you would need to observe how they perform those
tasks, and whether they succeed in achieving the tasks to a suitable level. Many
books and scientiﬁc papers have been written on evaluating and improving usability.
In fact, one of the most important aspects of making something usable is through
iterative design and reﬁnement. You have already done some of that, with creating
several design ideas from sheet 1 and have reﬁned those ideas further in sheets 2, 3
and 4. You have thought through the tasks that the users need to perform and have
iterated those designs. One additional aspect that is often achieved is to measure
how well users perform [6].
There are many ways to measure how users perform with the given tools. Indeed
it is possible to make these measurements on paper-based designs. Especially after
the realisation design sheet has been created, it would be possible to sketch each
interface screen on a separate sheet and get users to play the system (albeit on paper),
to see whether, in principle, the tool is usable. It would be also possible to get users
to use a think-aloud evaluation method, whereby they use the paper-based system
and speak out loud all the thoughts and interactions that they make as they use the
tool. By doing these types of evaluation it is possible to explore whether a system
may be usable or not.
10.1.4
Useful
While usability is concerned with whether the tool will be easy to use, the question
of usefulness prompts you to ask whether the tool will ﬁt a need. Does it have any
value? Does it enable a positive gain? It may be alright to consider what the product
will look like, and certainly people would say “oh that looks nice”. But at the end-of-
the day if it is not going to be used and then there is little worth as a tool. Actually it
is a little more complex than this! Usefulness is context, time and person dependent.
We can think of an application that takes pictures and adds tiger ears and whiskers
to the selﬁe picture. To a professional photographer the tool is not useful. It has little
place in their tool box of photography applications. But to a ten-year-old child it is
fun, and it is an important tool on their design shelf.
What we are discussing here is perceived usefulness. Fred Davis [4] wrote
“perceived usefulness is . . . the degree to which a person believes that using a
particular system would enhance his or her job performance”, and that if the tool
is useful then it is “capable of being used advantageously”. The emphasis is on the
perception of usefulness. It is clear that perceptions can change, as the context or
the situation alters. Subsequently, something that was perceived to be useful, may
not, in the future, be in our toolbox. Especially to decide what of the three middle
designs we need to take forward, we need to make a judgement over their perceived

10.1
Which Alternative Design?
287
usefulness. You are projecting forward and deciding whether (should the tool was
actually built) it could be a useful and beneﬁcial tool or system.
You should consider usefulness in contrast to the word ease. Ease of use is how a
user believes that when using a system they would not need to put effort into using
or understanding it. For example, you could consider how much the user would need
to expend, or how much time that person would need to allocate to learn the tool.
Or what other activities need to be performed, such to operate the tool to its full
capability.
10.1.5
Aesthetics
Design aesthetics plays an important role in our perception of the system. Noam
Tractinsky, Adi Katz and Dror Ikar wrote a paper on “What is beautiful is
usable” [11], where they investigated how aesthetics, or rather its perception,
affected perceived usability. One conclusion they made was that when people
were asked about systems afterwards, that when they had deemed a system to be
more aesthetically pleasing they remembered it to be more usable (whereas the tools
were equal, and had not been evaluated to be more usable than the other). Beauty
can therefore be a reasonable predictor of how people will perceive and be satisﬁed
with a given product. Everyday we make decisions of whether we like or dislike
something, we make instant judgements as we shop and look at products that we are
considering to purchase, we make assessments of love or dislike when we look at
objects or even nature. Does it look good? Would the product (if it were built) look
pleasing to the user? Is it geometrically well-balanced? Does it follow good-design
principles? Is it beautiful?
We make this judgement through many of our senses, not only our vision.
Especially, if we are shopping, our decision of whether like the product enough
to purchase it, will depend on how it feels in our hand, whether it feels heavy, solid,
well constructed. We even may smell the product and see whether it has a pleasing
aroma. We start to think if it is something we would want to use, or see everyday if
it was placed on our work desk. Aesthetics provides us with an emotional response,
which may be unique for each individual. However, one hopes that potential users
of a system will have a positive response towards it.
In terms of vision speciﬁcally, we can consider different aspects for the design.
Starting with colour, we can consider that some colour combinations work better
than others. In data-visualisation it is well known that the use of colour is powerful,
but also can be problematic. Sometimes the use of colour is so misleading in data-
visualisation that it would have been better to use a continuous greyscale colourmap
[8]. Colourmaps such as the rainbow colourmap are widely used and applied to data-
visualisation tools. However, the human visual system is less sensitive in response
to the variation in colour than it is to brightness. In addition users be misled because
the rainbow colourmap creates false features, especially where the different colours

288
10
Sheet 5 (Design Realisation)
are merged together. Particularly, colour-blind users can ﬁnd it difﬁcult to make
judgements of the colours used in the system from the use of the legend [3].
The rainbow colourmap confuses viewers through its lack of perceptual ordering, obscures
data through its uncontrolled luminance variation, and actively misleads interpretation
through the introduction of non-data-dependent gradients. D. Borland and R. Taylor [3].
Michelle Borkin [1] and colleagues performed research on the use of colour to
help doctors diagnose heart disease cases. Initially the medics preferred the rainbow
colourmap, because it was familiar and they felt that it was more pleasing. However
after introducing an alternative, and perceptually appropriate colour map the medics
diagnosed fewer mistakes.
In the ﬁeld of data-visualisation design and aesthetics play an important role.
However there is a balance between what is beautiful and what is practical. What
is pleasant to see, and what information actually can be comprehended from the
display. Edward Tufte, in his book “The Visual Display of Quantitative Information”
[12] wrote about chartjunk. Chartjunk represents those parts of the display that could
distract a user from their visualisation task, and could be removed from the screen.
This design guideline encourages simpler and perhaps less glamorous approaches
to visualisation. Certainly the idea of simplifying the visual display, and providing
clear visual depictions should be the goal of every designer. However, again, it is not
so simple. Making something elementary, could be making it less interesting, and
possibly less beautiful. There could be design elements that improve the operation
of that visual depiction. Especially if one of the tasks is to remember a visualisation,
then by adding chartjunk users are more likely to remember the visual depiction of
that data. Don Norman, when discussing if attractive things do actually work better,
wrote:
A short summary is that good human-centered design practices are most essential for
tasks or situations that are stressful: distractions, bottlenecks, and irritations need to be
minimised. In pleasant, positive situations, people are much more likely to be tolerant of
minor difﬁculties and irrelevancies. In other words, although poor design is never excusable,
when people are in a relaxed situation, the pleasant, pleasurable aspects of the design will
make them more tolerant of difﬁculties and problems in the interface. Don Norman [9].
The display of data through computer graphics and design is an area that
is becoming widespread and accepted by the public. This democratisation of
data-visualisation is meaning that many new and creative people are developing
visualisations of various datasets. This is an exciting time for the subject of
data-visualisation, and also for human computer interfaces. We should, and must,
embrace different design styles, and encourage imaginative and novel visual
designs. Highly aesthetic designs are certainly emotional [7], and as such will help
us to remember the data-visualisation analysis. In fact, the existence of human
recognisable pictures or cartoons (which could be labelled as chartjunk), can help a
user to remember the data-visualisation [2]. Consequently, if the task is to remember
the visualisation, then adding memorable chartjunk may be a good design solution.

10.1
Which Alternative Design?
289
10.1.6
Cost
Evaluating a design and a solution based on cost can be difﬁcult. Merely considering
the ﬁnancial cost of product development can be challenging. It is often difﬁcult
to calculate in advance how much the tool will be sold for, as some markets can
be quite volatile and competitive, and competitors could readily create a cheaper
product. When considering the designs you also need to see a cost-beneﬁt to each
design idea, such that the cost of development of the tool is outweighed by the
income from it. In other words, that the product would make money in the long term,
even if it lost money over the short term. There are trade-offs: you could decide that
by putting a little more time and effort into the product design, which would pay
off in the future, because you would probably gain more users and potentially could
sell the product at a higher value.
But there are other costs to consider. Each solution will take you time to build,
therefore there is a time-cost. If it takes longer then it will cost more, especially in
terms of the salaries of developers. Pragmatically, you may be creating the solution
as part of an assessment at College or University. You need to estimate the quantity
of time that it will take you to develop each tool. Possibly you may need to compare
something that could be a better or more complex design, that may take you too long
to create, against a simpler design solution that you can create in a shorter timescale
given. From experience, learners often tackle designs that are far too complex for
them to complete in the timescale allocated, and it would have been far better to
choose a simpler design, fully complete the implementation and reﬂect upon the
work achieved.
Effort is another cost. Some designs may need you to learn a new programming
language, or learn a new concept, or perform research about a topic, such that
you can understand enough of the ideas to implement them suitably. Effort is also
emotional. You will have a quantity of emotional energy. If the product takes too
much effort, then you may not be keen to complete it or you may think that it is just
too much for you, and so give up on the project.
10.1.7
Eco-Friendly and Sustainable
Every idea and implementation (whatever it is) takes up resources from the
environment. The product or solution may not directly have impact on the envi-
ronment, but it will still have an indirect impact. We can think through some
consequences: each of the ideas will take humans time to build; each are created
by programmers; programmers need to consume food; they use computers, live
in buildings and travel to work in cars, all of which uses resources from the
environment. We can consider the idea of eco-friendly and sustainable development
as low impact. Therefore we can contemplate how our tool, product or development
will impact on a variety of aspects. How will they impact on energy usage? How

290
10
Sheet 5 (Design Realisation)
does it impact on the carbon footprint? How does it impact on the users? Is it
something that has a low emotional impact? Does it produce waste or undesirable
bi-products of its use? Is it something that is emotionally durable, that reduces any
impact on the relationships of its users?
As designers, coders and developers we need to think about the consequence of
our designs. Not only how they impact upon the environment, per se, but also how
they will be used in the future. So another aspect of being sustainable, is to consider
if the design ideas will survive the test of time? Are they sustainable ideas? Are
they created with materials that will last? Are they put-together well? In computer
science terms, we can consider aspects such as: are they designed such that they
can be expanded? Can they be extended easily? Can we easily adapt the tools to
new hardware? Would it be possible to use the tool in a new market? Can we use
algorithms or parts of the tool in another project?
10.1.8
Unique
The penultimate question we ask of you, is to consider the uniqueness of the idea.
Is it a solution that is different to other solutions? Is it something that will stand
this idea apart from its competitors? There is a balance to be decided here too. It
is not necessarily good that something is novel or unique. Users may not ﬁnd it
easy to use, because it does not do the things that they are expecting it should do. If
you are developing a new piece of technology, then this may require a new way of
interacting with it. Dieter Rams [10] writes “Innovative design always develops in
tandem with innovative technology, and can never be an end in itself”. We can see
this concept in action if we consider the mouse interface. The ﬁrst computer mouse
was deﬁnitely innovative and provided a new way to interact with the computer. The
device pervaded all our computer pointing tasks, and in some application areas is
now being overtaken by a touch screen or track pad.
10.1.9
Buildable
The ﬁnal thought that you should make on the design ideas is to consider whether
you are able to build the idea, or that someone else can build it. Certainly,
you will need to put enough information on this sheet to make it possible that
someone (possibly you) can build the product. But the idea itself may possibly
be impossible to create, with current technologies, time available, effort required,
resources etc.

10.2
Creating the Final Design Realisation Sheet
291
10.2
Creating the Final Design Realisation Sheet
Sheet 5 in appearance is very similar to the middle sheets. There are two main
differences: the ﬁrst obvious one is that instead of writing pros and cons, we now
include a section named detail, where you consider how the ideas will be taken
forward, and give thought to any requirements that will be need to be met, to
implement the tool. Second, (the less noticeable difference) is that there is generally
more detail on this sheet. All the ideas are improved, reﬁned and include more
detail. The sheet demonstrates that the ideas have matured into something that can
be implemented.
When you were sketching the middle sheets you probably realised at the time
that some of the ideas were less formed in your mind. Possibly you were struggling
to sketch them on the page. One indication, that an idea was less formed, is that they
took you longer to sketch. If you look back over your sketches, you should be able
to reﬂect over each part of the page, and (in your mind) imagine how long each part
took to sketch. You may even have thought about this problem at that time. Perhaps
you may remember thinking to yourself: “I know these are less deﬁned, but this is
good enough for the time being”. But now the time has come for these ill-deﬁned
ideas to be made more deﬁned! You will need to take these ideas and express them
in a way that someone else will be able to take them forward. If you are unclear
(in your mind) what these ideas really are, and what they achieve, it will be very
difﬁcult (if not impossible) for someone else to implement that idea.
Now you have chosen your design, you need to vision what the realisation sheet
will look like. Sit for a few minutes and contemplate the chosen middle sheet,
considering:
•
Where do you need to add more detail?
•
What detail do you need to add?
•
What parts can you leave alone, and only keep to bear minimum information?
•
What is important to emphasise if you were to build the tool?
Let us work through each of the panels by looking again at the puzzle-game
scenario. Remember, the story so far: we had decided on three middle designs, and
sketched the trail-burn simulation (sheet 2), the sliding blocks pattern game (on
sheet 3) and ﬁnally the bridge-building game (on sheet 4). To make the decision of
which game to take forward, we need to develop our scenario a little further. In this
case, let us assume that we are building the game for a third year project. We have
about three weeks to build the game completely, because will have to use our time
to do other assignments and other tasks. The three weeks development period will
take place over the whole academic year, so we will not be able to spend a huge
quantity of continuous time. Now, let us consider each design idea in turn.
1. Trail-burn. Merely by looking holistically at each of the ideas, we can make
a quick judgement, and see that the trail-burn idea is probably the least mature
of the ideas. There are many unknowns. We would still need to discover how
the simulation would work, and although we have some idea about the data-

292
10
Sheet 5 (Design Realisation)
structure we may use, it is not really that clear how it would work in practice. We
also would need to create a simulation. Unless we have access to a code-library
that will create an appropriate simulation, it will probably be too much work to
achieve within the timescale given. Sure, there are advantages with this game: it
is novel, it could be aesthetically pleasing, and the game idea would interesting
to users. But we decide not to take this idea forward, because of the complexities
involved.
2. Sliding-blocks. The sliding-blocks pattern is not necessarily novel. But it is
something that we can readily see how it can be coded. The input and user-
operations are also simple (slide the blocks and switch between menus). Each of
these commands are easy to implement, and a user would know instantly what to
do. This is a strong plus point to this design. In comparison with the other two
ideas, this also looks like it could be implemented within the timescale given. It
could be possible even to consider different levels of implementation, such that
we can build an early working prototype and then improve that prototype. For
instance, we could ﬁrst build the puzzle slider game (working to create simple
patterns), in the next prototype we could incorporate more complex patterns
which include ﬁxed blocks. A third prototype could then include a competition
mode. By dividing the coding into separate parts it is clear that it would be
possible to build a simple version and then expand it (should we have time).
It is always better to get something completed, and a workable system built,
rather than to start on the development of something really complex and yet never
ﬁnish it.
3. Bridge-building. This idea does meet the goals of the project: it is a puzzle, and
it would be suitable for the users. It would ﬁt the market and it could create a
usable design. We could imagine that it has a beautiful interface and so would
look pretty. However, this bridge-building puzzle is also less reﬁned as an idea;
we would need to really sit own and ascertain how the user creates the bridges:
so the cost to deliver this idea is just too high. We also can consider that this is
not so unique as an idea (there are other similar games on the market). The idea
could be sustainable, in that when we have created code for the underpinning
mechanics we could use it for another project. But we would need to have access
to a library that will enable the forces to be calculated. Like the trail-burn idea,
this concept seems too complex to ﬁnish within the timescale given, it is also
not so novel (there are other bridge building games that are already available
to download). Finally, we also conclude that it is not buildable in the timescale
given.
By working logically through each of the three designs, using the nine concepts,
we conclude that the best idea, for our situation and our scenario, is to develop
the sliding-blocks idea further. Figure 10.2 shows the ﬁnal sketches of the puzzle
game. It is clear from this sheet that it includes more detail, and the idea is more
mature, since the sketches on sheet 3.
Information Panel. The information panel contains the same information in com-
parison to the three middle sheets, see Figs. 9.3, 9.4 and 9.5.

10.2
Creating the Final Design Realisation Sheet
293
Fig. 10.2 The ﬁnal sheet of the puzzle game scenario. Showing the block puzzle in more detail.
The orientation of the screen is rotated since the design on sheet 3, and it is clear that much more
detail is included in this sheet. Furthermore, the ﬁnal panel includes details of how to take the
sketched ideas and turn them into reality

294
10
Sheet 5 (Design Realisation)
The Big Picture Panel. You will need to be update and improve the sketches from
sheets 2, 3 and 4. It is not good-enough to merely copy the designs across.
They need to look better and be more reﬁned. By looking at Fig. 10.2 it is clear
that it has improved from the previous sheet 3 (Fig. 9.4). In fact, the realisation
design sheet must introduce more detail. It is clear from these sketched sheets
that there are some aspects that are more important, and so they are made
bigger in the sketch, while other parts are deemed to be less important, and are
therefore sketched in a smaller space. The ﬁrst obvious improvement, when we
compare the sketches in Figs. 9.5 and 10.2, is that the application is rotated. When
planning this gives the game a better layout and more space to see the puzzle
that the user is trying to obtain. Let’s name this the puzzle-goal. If the player is
unable to locate and understand what arrangement of puzzle they are trying to
work towards, then they will not be able to play the game and so it will not be a
fun game! So, because the main screen design is clearly more important it takes
up more space on the page. In contrast, the idea of the competitions and multiple
players is de-emphasised, as shown by the smaller picture for player 2. It would
be clear to a developer that they need to allow the game to be played with multiple
people, and probably that the screens for every user would be the same (so it is
de-emphasised by taking less space). Another improvement is that the buttons
are now clearer and better positioned. Overall, the whole sketch demonstrates
evidence of deeper thought into how a player would use the tool and what menus
and buttons are actually required.
Components Panel. Again it is clear that more thought has been made onto the
concepts and the interface. In this case, the components panel shows two parts:
ﬁrst it describes detail on Action/result pairs. In other words, descriptions are
included that ﬁrst say what the user will do (touch, swipe, click, choose etc.) and
what happens by the computer program as a result. For example, “slide blocks
up/down/left/right to make the patterns. Moves are counted per block moved.
Blocks snap to grid and animate as they move between positions.” Likewise in
your designs you will need to include enough information, such that a developer
would know what the operation does. In the second part, the sheet explains how
some of the operations will cause an animation to occur. The animations will
give the user something to look at, it will make the game visually interesting.
Parti Panel. What is the main idea? What concepts underpin your design and will
keep the develop on track as they implement the tool? In the block-puzzle game,
the principle idea are that patterns are created by putting blocks together. There
is an adjacency of the squares, and by putting the blocks together they make a
4-connected pattern. This overarching concept can be interpreted in two ways.
First that the user needs to create the patterns by moving (sliding) blocks around
the screen. These squares therefore need to be constrained to only move 4-ways
(up, down, left and right) and that they animate as they move from one grid
position to another. Second, there must be away for the computer program to
create these connected puzzles. It could be that a list of puzzles is pre-created
and then given to the user as they progress through the game. Alternatively, we

10.3
Delivering and Using the Realisation Sheet
295
may be able to consider an algorithm to automatically create different puzzles of
varying difﬁculty.
Detail. The ﬁnal panel is the only part of the sheet that contains completely
different information, in comparison to sheets sheets 2, 3 and 4. On the middle
sheets you considered different pros and cons, whereas here you need to think
what aspects, resources or requirements are needed to turn this realisation design
sheet into a product. It is difﬁcult to be prescriptive as to what information you
need to place here, the idea though is that you place information to help you (or
someone else) to develop the ideas on this sheet into a tool or product. Therefore,
you could include a number of different aspects, such as:
•
Requirements on the libraries that must be used to implement the tool.
•
Requirements on any architectures (e.g., client/server)
•
Requirements on computing languages.
•
Underpinning maths or algorithms that would be useful for the tool.
•
Dependencies on tasks that must be done ﬁrst (e.g., setup server, cleaned data).
•
References or related material (books, papers etc.) that would help someone
to implement it.
•
Measurements or detail that is not included elsewhere.
•
Data structures that will help someone to create the tool.
•
Colour maps and any aesthetic requirements.
•
Skills and people required to implement the tool/product or needed to be
employed.
•
Detail of how to divide the tool into individual components (e.g., classes for
object-oriented design).
•
Estimate of any costs relevant to develop the tool.
•
Roadmap to build the tool.
•
Estimates of time to build.
•
Relationship with other projects or tools, and/or inspirations of design.
10.3
Delivering and Using the Realisation Sheet
You have now successfully completed all the ﬁve sheets. You have thought deeply
about the problem, considered and generated new ideas, you have detailed three
potential solutions, and on the realisation sheet you have provided more details of
the design. After completing this realisation sheet you will need to have a discussion
with your client, to make sure that the realisation design is the one that they do want
you to implement. There will probably be areas of this sheet that are unclear, and
still need to be interpreted by the coder. However, sheet 5 should be the culmination
of your design process (for now).
Hopefully both you and your client (if you have one) are satisﬁed with this
design, and now you can go to implementation stage. It is clear that to develop
this into some code you will need to do some more planning. If you are going to

296
10
Sheet 5 (Design Realisation)
follow an object oriented programming paradigm then you will need to consider
how the program will be segmented into different Classes. You may also consider a
design pattern to help you think through this process.
There are many different design strategies to help you code such interfaces,
especially the Model View Controller pattern is a useful implementation strategy
for the development of interfaces. Let us think through the parts. The Model is
one of the most important parts, it holds the state of the system and any data.
The Parti panel may help you to consider how the Model will be constructed. For
instance, in our slide-blocks puzzle example we expressed that the Parti was all
about the position and organisation of the blocks. How they were connected (e.g.,
4-connection) and how the patterns were created from putting squares together. This
hints at an underlying data structure that needs to hold, not only the position of the
blocks, but how they are adjacent to each other. You already have a picture that
depicts the View – you can use your sketch from the Big Picture panel on sheet 5.
In addition, you already have an idea of what types of controls are required for
the Controller – you have this information captured in (i) the Big Picture panel
(your labelled interface elements) and (ii) a description of the outcomes in the
Component panel. By considering each of the panels you should be able to translate
the information into individual parts of a Model View Controller pattern.
10.4
Exercises
The ﬁfth sheet of the FdS is the realisation design, which is the ﬁnal sheet. It includes
all information that will enable someone to build the tool. In these exercises, we
suggest that you complete the ﬁfth sheets of the tasks that you performed in previous
chapters.
Ex. 10.1 —
Realisation sheet
We suggest you complete the ﬁfth sheet for the puzzle game scenario. Think what
details you need to include on the ﬁfth sheet. What information you need to place
on this sheet, such that someone could implement it.
Ex. 10.2 —
Design different applications
Following on from the exercises in the previous chapter, sketch the ﬁnal sheet for
all the examples that you tackled. We include a summary of the three design ideas
from the previous chapter:
1. An application to visualise graphically different search results.
2. A game that judges the users’ estimation skills.
3. A website that challenges users to cook food from a random set of ingredients.

References
297
Ex. 10.3 —
Use the ﬁnal sheet in your work
Use the Five Design-Sheet method in a project of your own choosing.
References
1. Borkin M, Gajos K, Peters A, Mitsouras D, Melchionna S, Rybicki F, Feldman C, Pﬁster H
(2011) Evaluation of artery visualizations for heart disease diagnosis. IEEE Trans Vis Comput
Graph 17(12):2479–2488
2. Borkin MA, Vo AA, Bylinskii Z, Isola P, Sunkavalli S, Oliva A, Pﬁster H (2013) What makes
a visualization memorable? IEEE Trans Vis Comput Graph 19(12):2306–2315
3. Borland D, Ii RMT (2007) Rainbow color map (still) considered harmful. IEEE Comput Graph
Appl 27(2):14–17. doi:10.1109/MCG.2007.323435
4. Davis FD (1989) Perceived usefulness, perceived ease of use, and user acceptance of
information technology. MIS quarterly, pp 319–340
5. Edgett S (1994) The traits of successful new service development. J Serv Mark 8(3):40–49.
doi:10.1108/08876049410065606
6. Gould JD, Lewis C (1985) Designing for usability: key principles and what designers think.
Commun ACM 28(3):300–311. doi:10.1145/3166.3170
7. Kostelnick C (2016) The re-emergence of emotional appeals in interactive data visualization.
Tech Commun 63(2):116–135
8. Light A, Bartlein PJ (2004) The end of the rainbow? Color schemes for improved data graphics.
Eos Trans Am Geophys Union 85(40):385–391. doi:10.1029/2004EO400002
9. Norman D (2002) Emotion & design: attractive things work better. Interactions 9(4):36–42.
doi:10.1145/543434.543435, http://doi.acm.org/10.1145/543434.543435
10. Rams D (1970) Ten principles for good design. www.vitsoe.com
11. Tractinsky N, Katz AS, Ikar D (2000) What is beautiful is usable. Interact Comput 13(2):
127–145
12. Tufte ER, Graves-Morris P (1983) The visual display of quantitative information, vol 2.
Graphics Press, Cheshire

Chapter 11
Five Design-Sheet Examples and Applications
Abstract The Five Design-Sheet method can be used to plan a huge variety of
interactive tools, interfaces and algorithms. It would be impossible to run through
examples of every type. In this chapter, we focus on two example scenarios
to demonstrate the full process. The ﬁrst example explores different ways to
capture and display heritage monuments. The second example explores how data
visualisation and animation can be used to explain the stages of a computer
algorithm.
11.1
Worked Example of the FdS (Heritage Scenario)
Let us consider an example of investigating prehistory monuments. There are
many prehistoric moments that are scattered in the landscape. Especially along
the Western coast of Europe there are thousands of Standing Stones,
portal
Dolmens (Megalithic tombs with ﬂat stones on top), Cairns and Passage Graves (see
Fig. 11.1). These monuments and megaliths were built during the late Neolithic or
early Bronze Age, about 2800 to 1800 BC. Across Europe there are probably over
10,000 remaining standing stones. Famous sites such as Stonehenge in Wiltshire,
England, are believed to be constructed between 2000 and 3000 BC and are one
of the most complex, and complete, Bronze Age monuments in England. But
throughout Atlantic Europe, and especially on the west coast of Europe, through
Portugal, Spain, France and the British Isles, there are huge quantities of Bronze
Age and cultural monuments.
Heritage conservators and archaeologists wish to capture three-dimensional
models of these sites. These three-dimensional models act as digital surrogates, and
can be used to not only record the site, but also to monitor ageing and deterioration
of each monument. To create the three dimensional models, we can either use
scanning technologies such as laser scanners, or photogrammetry, where a three
dimensional modal can be created from many photographs. The technique of stereo-
photogrammetry is useful, in this situation, because three-dimensional models can
be created by processing many individual two-dimensional photographs taken from
a cheap camera or mobile phone. Stereo-photogrammetry involves estimating the
three-dimensional coordinates of points on a speciﬁc object, taken from adjacent
photographs taken of the same object. To capture a Standing Stone, for instance,
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7_11
299

300
11
Five Design-Sheet Examples and Applications
Fig. 11.1 Different types of prehistoric monuments can be seen in the landscape, especially
throughout the Atlantic countries in Europe. Different types of monuments can be found, such
as Standing Stones, portal Dolmens (Megalithic tombs with ﬂat stones on top), Cairns and Passage
graves
about twenty photographs are needed. More photographs can be used to create a
better image, while less photographs would mean that some parts of the monument
can be missed (and therefore the three-dimensional model is not fully built).
These photos need to be taken by walking around the stone to capture images
of every part of the stone. Capturing standing stones is relatively easy, because
one can walk around the stone itself. There are often separate monuments in the
landscape with nothing stopping the user walk around them. The process of stereo-
photogrammetry needs photographs that overlap by approximately 20%. In other
words, the next photograph must show about 20% of the previous image. If there
is not enough overlap then the photogrammetry process will not be able to create a
good reconstruction and holes in the models may appear.
One of the challenges though, for conservationists, is to capture all the models.
There are hundreds and thousands of these prehistory monuments in remote
locations throughout the world. It would take too long for one individual to drive
to each site, take the required photographs and then drive to the next site. One
solution, therefore, would be to get members of the public to take the required
photographs. This is the very essence of citizen science – to use members of
the general community to go out, perhaps on a Saturday afternoon, enjoy the
countryside, walk to a monument and take lots of photos. But who are the public? In
fact, we can think of many questions that we need to ask about the user. What skills
would they have? Would they have a quality camera? What resources would they
have to take photographs? How would they ﬁnd the right monuments to photograph?
From these questions we can start to consider ideas and solutions.
The users here may be a retired couple walking with their dog. They may be
grandparents walking with their grandchildren, a family walking together to explore
the outdoors. Or they maybe a young couple who are enjoying time away from
the fast pace of the city. Some of the users will have high quality digital cameras.
Some may have cameras that can be connected to the internet. Others may be
wishing to use their mobile phones (they do not own a separate camera). Perhaps
the solution we develop should not rely on one technology but be able to work with
many. Or possibly we should focus on one device, and look to sponsorship from
that manufacture. Another solution could be to focus on a smart-phone application,
which would certainly have the advantage that we can capture photographs and

11.1
Worked Example of the FdS (Heritage Scenario)
301
Fig. 11.2 Images and three-dimensional model from Lligwy Burial Chamber on Anglesey Island,
UK. Top left is an aerial picture of the site. The top right three photographs are used in the three-
dimensional stereo-photogrammetry process. Finally the lower two images are screen-shots of the
three-dimensional models
upload them directly to the server to be processed by stereo-photogrammetry into
three-dimensional models. In any case, the user would, most likely, be a casual user,
so the interface needs to be simple and easy to use. This raises several additional
research questions, such as how do we capture and process the photographs and
display the models? How can we assist the user to take the photographs? What
computer program do we need to process the photographs? How can a user upload
the photographs to the server?
The heritagetogether.org project is one such project that focuses on capturing
prehistoric monuments and converting them to three-dimensional models. The user
uploads the individual photographs to the website, the server then processes the
models into three-dimensional graphical models. People explore these models and
view them in an online virtual gallery. Figure 11.2 shows pictures from Lligwy
Burial Chamber in Anglesey, UK.
11.1.1
Heritage Example: Sheet 1
First, we need to generate (and sketch) alternative ideas. Thinking about this
heritage application, we can start by sketching what we know about the project
and the user, see Fig. 11.3. For example, at least twenty photographs need to be
taken, and you must take them from all sides of the Standing Stone. The stones
are outside in the landscape and directions to these historic places can be placed
on a website. Let us assume that a webserver has already been setup, to receive
individual photographs and process them (through stereo-photogrammetry) into
three-dimensional models. So, we start thinking of different ways to capture the

302
11
Five Design-Sheet Examples and Applications
Fig. 11.3 Idea generation. Ideas of how to capture twenty photographs and upload them to a
server, which will stitch these photographs together, through a process of stereo-photogrammety,
to create a three-dimensional model of the monument
images. We know that the public will take the photographs, so let us assume
they have a Single Lens Reﬂex (SLR) camera. The volunteers can upload their
photographs when they get home. Our mind now moves from thinking about
uploading when they are home, to uploading the photographs when they are on-site.
We need a smart-phone application. Therefore, we sketch a picture of a smart-phone.
However, this would need the volunteers to both have a smart-phone and there
to be broadband on site. It is probably unusual that the phone connection will reach
to the remote location of the stone. Our mind starts to imagine a solution to this
problem. Either we bring the wireless broadband to the remote site (unlikely) or
maybe we have a convenient position close to the site. Perhaps we could build a
shed, where there was power, internet connection and the ability for people to upload
their photographs to our server. We are starting to think through the problem, and
as we consider different ideas, there is a ﬂow of thoughts and one idea sparks off
another. At each stage we sketch a picture of our thoughts.
When we have about twenty or so sketches and pictures, or perhaps we feel that
we have exhausted all the main ideas we would move onto ﬁlter. Just by looking
at the sketches that we have put onto the page, it is clear that some are better than
others. The phone application, albeit there would be problems with connectivity in
the remote landscape, it is a very good solution – smart-phones are increasing in
popularity, and they all come with good resolution cameras. It would be convenient
for us to create an application that uses the functionality of the phone. Whereas, the
idea of a shed placed in the landscape, or even the idea of installing wireless (or

11.1
Worked Example of the FdS (Heritage Scenario)
303
other communication) technology is not practical and can be costly. Therefore, our
thoughts turn to how we can ﬁx or change these problems. Remember, we do not
want to merely delete an idea, we are really looking to expand the range of possible
ideas. In Fig. 11.4 we show how we have ﬁltered. In this design, we demonstrate the
ﬁlter operation by ﬁrst adding a red crosses and the word “no”, and then adding an
arrow. The arrow points to the new idea, that hopefully ﬁxes or improves the initial
poor idea, or is a new idea that was sparked from the original unworkable idea.
Our thought process is as follows: So we start thinking: how can we ﬁx the shed
problem? What are sheds good for? Our thoughts then move to an idea of using the
shed as a social space. We could get people to come together, exchange ideas and
even learn about the heritage or photogrammetry techniques, or possibly get lessons
in photography. There would be many side beneﬁts. We sketch a second shed and
add ideas of Training events. From considering the word training we get thinking
that it would be possible to create training videos and sketch a little image of some
photography ﬁlm. From the word social we also get thinking more about social
spaces and how that actually a mobile phone itself can be used to help people be
sociable. We sketch a picture of two mobile phones with an arrow going through
a cloud symbol, to designate that it is being communicated through the cloud. Our
mind is bouncing from one idea to another: one concept inspires a further idea.
Categorising the concepts is an important step towards generating three alterna-
tive designs (that are placed on sheets 2, 3 and 4). Using the sketches in Fig. 11.5
we demonstrate a three part process: First, we circle ideas that are similar, such to
visually identify them as explaining the same idea, second we name them, and third
we provide a list of these names at the bottom of this section. When we get to the
categorisation stage we hope that the concepts are sketched in a similar location,
which will mean that we can put a simple circle around many concepts. But this
is obviously not always possible and there will be many times when you will need
to circle ideas (to group them together) that are actually all over the page. If they
are located apart, it will look too messy to put a ring around all of these far-ﬂung
sketches. In this situation, our strategy then is to not circle them. Again, turning to
Fig. 11.4 you notice that we have sketched the idea of cloud server in two places, but
have only circled one of them. The reason we do it this way is because circling the
ideas helps us to make explicit what the main ideas are and by circling one of them
we are describing that it is a separate category (we do not need to circle both). By
circling them, we are grouping the ideas together visually. This strategy is merely a
technique to help us progress, rather than being a perfect categorisation of the work.
When choosing names to identify the concepts you should choose words that
are both simple and short. While longer phrases could be used, it is much more
difﬁcult to create a list of them, they take longer to summarise and are not easy
to ﬁnd on the page. We have used words including: Photogrammetry, Traditional,
Social, Server and App. These words on their own also imply additional meanings.
What these words represent is really the Parti. They summarise the idea, and are
indicative of the underpinning concepts. The words frame the vision and help an
observer to understand the aim of a particular small sketch. The words provide an

304
11
Five Design-Sheet Examples and Applications
This idea is filtered.
We sketch a new
(better) idea nearby.
Fig. 11.4 Applying the ﬁlter operation. Some initial ideas are not so good, in this part we can
ﬁlter them out. However, when we consider that something is not so good, we must also think how
to improve it, ﬁx it, or replace it with a better idea
Circle similar
concepts to make
the categories.
Name the
categories with a
simple, indicative
word.
Create a summary
list of all the
categories.
Fig. 11.5 Categorise the ideas. By putting the ideas into categories we can ascertain what ideas
are unique. We are working towards three ﬁnal ideas, and here we can start to work out what
concepts we have currently explored

11.1
Worked Example of the FdS (Heritage Scenario)
305
Use the available 
space to sketch the 
new ideas.
Summary of the 
new ideas.
Mixing traditional 
with the mobile 
application idea.
Fig. 11.6 Combine and reﬁne the ideas. Combine different ideas, which hopefully will create
new ideas. Sketch these ideas. The ﬁgure shows the sketch of the heritage application, we show a
picture trying to mix the traditional way of working with the smart-phone application
insight into the concept, and help to ﬁll in the gaps of the ideas (without the need to
do more sketching to clarify the idea). For example, in our sketch we used the term
traditional. Here, we are using it to imply that a Single Lens Reﬂex camera is used
to take the photographs, that are then uploaded to the website. The word traditional
pushes our mind to think about similar concepts. It implies that the idea has been
used over a long-term, it has a historic context and that most people understand how
to use the camera. It also may help you to imagine some other concepts: we may
picture an older-user operating the tool, or that the tool will have a high reliability,
be secure, safe, solid or be something that is well known to most people. Adding the
names to the pictures not only helps you to group the ideas together, but to think a
little more deeply about the ideas. They also can be used when you are combining
and reﬁning the concepts.

306
11
Five Design-Sheet Examples and Applications
The next step is to Combine and Reﬁne the ideas. The process of putting (or
even forcing) different concepts together will help us create new ideas. In addition,
by reﬂecting on the current ideas we will be able to improve them. At the end of
this stage we have more sketches on the page, showing new ideas. One way to
achieve this is to look to the categories and to merely join the words together. Think
of a concept that mixes two (or more) of the categories together. For example, in
Fig. 11.6 we look at the idea of a traditional site (where photographs have been taken
already and uploaded to the site) mixed with a mobile application. We can imagine,
what does it mean to have a traditional technique applied with a mobile application.
By thinking through these concepts together, we could imagine a system that shows
models that were created by traditional methods, and then allows people with smart-
phones to add new models. Or we could use it to show both types of models together,
and compare models created with one technique in comparison with those already
saved. By continuing our way down the sheet, one idea sparks off new solutions.
Again our mind turns to volunteers who do not own a smart-phones, what
solutions could be possible here? Perhaps we could lend them a phone; so possibly
we can develop a lending library of devices. This may have another beneﬁt: to bring
people together in one place to lend kit and collect it back, as well as creating a
social environment where volunteers will meet like-minded people. So, our mind
turns back to contemplating about a social space. What would happen at the social
space? Who would need to be there? What added beneﬁts could we have? We could
imagine training sessions being delivered at the social space, and people talking
about their experiences and sharing their routes to get to these heritage monuments
in the wild. Possibly they will also start to compete, that one person has better
quality images than another. Subsequently, our mind turns to gamiﬁcation, whereby
the capturing of photographs and model creation becomes a game, where more
photographs taken, more monuments visited, and better quality models created,
all maps onto a higher score. Another idea that jumps in our mind is that because
most sites need to be waked or hiked to, the volunteers are probably doing a lot of
exercise. Possibly we could mix the idea with a health-application – such to help
people get healthier. Consequently, from our mixing of different ideas, and reﬁning
those ideas we already have, we now have added a few more categories: Training,
Lending, Game and Health.
The ﬁnal completed sheet (see Fig. 11.7) now includes sketches that summarise
the decision making process. We decided to choose three ideas: First a mobile
phone system that intelligently checks whether enough photographs have been taken
(which will be expanded on sheet 2). Second a traditional approach whereby users
take photographs on a regular camera and upload them to the server at a later stage
(detailed on sheet 3). Third, a mobile application where the photogrammetry is
achieved on the smartphone (detailed on sheet 4). We develop the ideas further
through the three middle sheets 2, 3 and 4, as shown in Figs. 11.8, 11.9 and 11.10. In
our sketches we use black drawing pens to make the outlines of the ideas and write
the words, then use ink-wash to add colour and effects to the picture.

11.2
Heritage Example: Sheets 2, 3, 4 and 5
307
Summarise the 
potential ideas.
Add information 
about other 
alternatives. 
Provide evidence 
that you have made 
in-depth thought 
over the three 
chosen designs.
Fig. 11.7 Questions. The full sketched sheet of the heritage application. See the questioning
phase, where we have decided which three designs we will take forward, and also some information
about alternative (unsuccessful ideas)
11.2
Heritage Example: Sheets 2, 3, 4 and 5
The ideology behind sheet 2 (Fig. 11.8) is that the application helps the user to know
whether they have taken enough photographs around the standing stone, such to get
a good resolution. This outline presents the Parti, which we sketch in that panel. The
idea is that photographs need to be taken from the front, back and both sides of the
heritage monument. When taking photographs, it is quite easy to miss parts of the
standing stone. To achieve this judgement, the tool will need to run photogrammetry
modelling process on the phone. This will probably need to be low quality, because
the processing power of the phone is not currently fast enough to create a high-

308
11
Five Design-Sheet Examples and Applications
Information
Big Picture panel,
showing the smart-
phone application.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: a 
validation algorithm 
that calculates if 
more photographs 
need to be taken.
Pros and Cons
Fig. 11.8 Sheet 2 of the heritage scenario showing the smart phone application, with a map view
(to allow users to navigate to the site) and a menu screen to provide setup and other information
quality rendering in a reasonable time. Also we will need to have a way to suggest
to the user where they should take more photographs. For all this to happen we also
must know where the phone is, in relation to the standing stone.
The second design is a traditional approach (Fig. 11.9), where photographs
are taken, stored on a memory card, uploaded to the server (when the user gets
back to their main Internet connected computer) and the server processes a three-
dimensional model. It is clear that this is a standard approach and is not necessarily
novel. But, it does provide an alternative, and different, design idea, and therefore is
included.
The third design Fig. 11.10 pushes the capability of modern phones, by wanting
to render the picture on the phone. While this is a huge ask of the current phone
technology, it has many advantages and adds many additional possible beneﬁts. Not

11.2
Heritage Example: Sheets 2, 3, 4 and 5
309
Information
Big Picture panel,
showing the 
traditional 
application with
website.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: the
process of taking
photographs and
making a three-
dimensional model.
Pros and Cons
Fig. 11.9 Sheet 3 of the heritage scenario, showing the traditional idea. The user uses a printed
map to navigate to the site, they can also look on a website for additional information. They take
photographs from the site and upload them to the server when they return home to their Internet
connected desktop computer
only can it help the user to realise when they have taken enough photographs to
create a complete model, but potentially the application can visualise information to
the user about the site, or give advice about how to take best photos. It is this design
that we take into the design realisation stage (Fig. 11.11).
The realisation design (sheet 5) as shown in Fig. 11.10 demonstrates how we
have taken the idea principally from sheet 4 (the idea of rendering on the screen) and
parts of the idea from sheet 2 (an intelligent algorithm on ascertaining that enough
photographs have been taken). The ﬁnal design sheet draws all these ideas together,
and reﬁnes them even further. It is clear that, by this stage, we have been deeply

310
11
Five Design-Sheet Examples and Applications
Information
Big Picture panel,
showing smart-
phone version that
renders the 3D
picture on the
phone.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: the
full algorithm, where
in situ data can be
added to feedback
(say) size of the
object.
Pros and Cons
Fig. 11.10 Sheet 4 of the heritage scenario showing an application that helps the user to take the
right quantity of photographs. The idea is that users are provided with a visualisation that shows
them where to take additional photographs, such to get the best coverage
thinking about the problem. And in our minds we have ﬁxed some of the issues with
earlier potential solutions. We also are in a good situation to know what is possible
to be built, and how a user could actually build it. This is exactly where we need to
be, and one of the main aims of doing the FdS. It helps us reﬁne and hone our ideas.
It helps us remove impossible or unworkable ideas, and forces us to deeply think
about the topic and alternative potential solutions. We also now have a clear vision
of what we want to build. We can guide a developer (or even keep ourselves focused)
on the development process. It is far to easy, in tool development, to start adding

11.2
Heritage Example: Sheets 2, 3, 4 and 5
311
Information
Big Picture panel,
showing smart-
phone application
that intelligently
visualises the data
to help the user.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: the
algorithm not only
calculates the
coverage but also
guides the user.
Detail of how to
take the idea
forward to
implemetation.
Fig. 11.11 Sheet 5 of the heritage scenario. This realisation design shows the smart-phone
application along with several screens which help the user plan where to visit (through a map),
guides of how to take the photographs, and then the on site view, which helps the user takes the
best possible photographs
extra functionality that is not required. So the requirement design and the framing
of the idea through the Parti can help the developer to keep within the boundary of
the idea. Plus it helps to provide an end result for the tool to be judged against. We
will know when we have ﬁnished the project because it fulﬁls the vision outlined in
the requirements design.

312
11
Five Design-Sheet Examples and Applications
11.3
Worked Example of the FdS (Explanatory Visualisation
Scenario)
As educators we have to explain many different algorithms to our students, and often
the explanation of the concepts can be aided through animations and interactive
tools. The goal of this exercise is to understand a particular algorithm, and to
use computer graphics and visualisation techniques to explain it. For our scenario
we will assume that this explanation is to be used within a ﬁnal year computer
graphics and visualisation class. The students are in their ﬁnal year and all studying
a computer science major. The unit of study covers a broad range of computer
graphics rendering techniques from Z-buffer, ray tracing, radiosity to popular
scientiﬁc visualisation algorithms including Marching Squares, Marching Cubes
and Volume Rendering. For our scenario we will focus on the Marching Squares
algorithm. Subsequently, the task is as follows:
The aim is to create an explanatory visualisation of the marching squares algorithm. The
visual explanation is to be used to explain the concepts to ﬁnal year students studying for a
computer science undergraduate degree.
Let us start this process by getting into the right mindset! First we need to gather
materials, think, relax and reﬂect, then ideas will come to us, and ﬁnally we will
need to rework and reﬁne our ideas. We discussed these stages in Sect. 7.3. What
materials do we need to gather? Where do we go to ﬁnd them? We can divide the
problem into individual parts, as before, let us highlight the key words:
The aim is to create an explanatory visualisation of the marching squares algorithm. The
visual explanation is to be used to explain the concepts to ﬁnal year students studying for a
computer science undergraduate degree.
We know some requirements. It is going to be shown to ﬁnal year students, they
are on a computer science major, so they would understand in-depth knowledge
of computer science. The phraseology of the task also implies that it will be used
as a small part of the course. The students will not be given the work on their
own, but it will be used alongside other teaching materials and methods. This
means that when we are designing the work, we can make some assumptions in
the design. Because there will always be an expert there to answer any questions
that students have. There are some aspects, though, that we may need to research
(gather materials) over. What is a visualisation, and more speciﬁcally what is an
explanatory visualisation? We would also need to research and learn more about the
marching squares algorithm, if we do not know already what it is. Furthermore, we
would probably need to understand how that algorithm is related to others. We could
go and discover more about contour algorithms, or even look to three-dimensional
algorithms and explore more about the Marching Squares algorithm.
The marching squares algorithm is a contouring algorithm. In fact it is a piece-
wise linear contouring algorithm. In other words, it contours a dataset by working
through each group of four points (a square) in turn. So, for every unit square it
decides how the contour line cuts through it. It can work this out independently

11.3
Worked Example of the FdS (Explanatory Visualisation Scenario)
313
Fig. 11.12 An overview of the marching squares algorithm. (1) The data is loaded, (2) a threshold
applied to turn the data into a binary set (3), the individual cases can be then looked up in the index
(4). Sixteen major cases can be used, and placed within a lookup table
Fig. 11.13 From the 16 cases, and by symmetry and rotation we can consider four major case
types
of other squares, hence the term piecewise. It also makes an assumption that the
contour segment that is placed, is a straight line. This is an approximation of the
contour, but through this divide-and-conquer approach all the contours of the page
can be placed. The other interesting fact is that there is only a limited number of
ways that a line can cut through a square. By looking at Fig. 11.12, we can see
that there are 16 individual cases, which through symmetry and rotation can be
summarised into ﬁve major cases (Fig. 11.13). Considering that there are only four
corners (vertices) of a square and each can be in a state of off or on, we can have
24 D 16 cases. The 16 cases are stored in a lookup table, which is ordered based
on their decimal value, created from an ordering of the vertices of the square. The
base-10 version of this binary number becomes our index into the lookup table (as

314
11
Five Design-Sheet Examples and Applications
Fig. 11.14 The index, for the lookup table, can be organised least signiﬁcant bit to most-signiﬁcant
Fig. 11.15 The ambiguous
case of the marching squares
algorithm
shown in Fig. 11.14). Another aspect is that the exact intersection of the contour
line can be interpolated precisely based on the threshold value and the two vertices
across an edge. We also need to note that wherever there is an alternate on/off binary
state at the corners of a square (or in three-dimensions across a face) this case is
actually ambiguous. We can either consider that it makes two separate contours, or
that the contours are joined along a small tube-like structure. Several researchers
have discussed this challenge and have proposed various solutions [1, 3]. For our
purpose, let us merely consider whether the centre point is lower or greater than
the threshold, and use this value to decide the fate of this ambiguous case. We also
understand that there are many other algorithms that work in a similar way, so part
of the course may also cover algorithms that are similar to the Marching Squares.
In fact, the three-dimensional version, authored by William Lorensen and Harvey
Cline [2] is most well known; in addition to two and three-dimensional versions it
is possible to apply the idea to higher dimensional hypersurfaces [4] (Fig. 11.15).
11.4
Visualisation Example: Sheet 1
Now we have enough information to look at different methods and strategies to
explain this algorithm. Sheet 1 is included in Fig. 11.16. We start by thinking
about the cases and then consider the whole process of taking the data, applying a
threshold, generating the binarised version before marching through each case. We
start to explore the different aspects that we need to explain. We need to keep our

11.4
Visualisation Example: Sheet 1
315
Through
questioning the
different solutions,
five main ideas are
whittled to three
ideas.
This idea is filtered.
We sketch a new
(better) idea nearby.
Ideas of alternative
solutions
Categories are
circled and
summarised.
Combine and
refine to create new
ideas.
Fig. 11.16 Sheet 1 of the marching squares algorithm showing different ideas that can be used to
explain the algorithm
mind on the overall goal, which is to explain the algorithm. Therefore we explore
strategies such as animation and user exploration and interaction. We ﬁlter ideas of
multiple contours, but then get thinking that there are different types of cells, so add
a new idea of visualising the type of the cell by using colour.
At the end of the ideas and ﬁlter stages we have used about half of the page.
We then need to group the ideas into similar categories. Such to ascertain what key
ideas we have created, we circle some sketches. This will help us clearly identify
individual ideas, and also help us decide what is a separate idea or what is really
the same as another. Remember, we are working towards the end-goal, of trying to
eventually decide on three principle ideas. So, at this stage we need to quite a few
ideas. To help us further we name the ideas (with a simple one-word identiﬁer) and
write them down as a list of concepts.

316
11
Five Design-Sheet Examples and Applications
By the end of the third stage (Categorise) of sheet 1, we now have a lot of ideas,
but we need to Combine and Reﬁne the ideas to create more complete solutions.
Near the end of the sheet you can see (in Fig. 11.16) that the ideas are becoming
more complete. Now we need to question our ideas and ascertain which are the best
three to develop further. Such to help us in our decision making we spend some
time thinking over the ideas of the sheet. After deliberation we decide that there are
probably about ﬁve ideas that could be suitable. We sketch these ideas at the bottom
of the page, such that we can conﬁrm in our minds what they are and how they
work. In our minds these are most suitable for our purposes, which is to explain
the concepts, and they each fulﬁl the aims. Sure we have many more ideas, but
remember we are heading towards three ideas, to detail on the middle sheets. From
these ﬁve, we need to choose three designs. Our thought process is as follows:
1. Stages to animate. This idea uses animation to explain the algorithm. The
thought is to break the algorithm into several stages and animate the concepts
at each stage, animate to the next stage. We are storytelling. On deliberation we
think that this is one of the strongest ideas, so we decide to accept it and we will
expand this concept on sheet 2,
2. Exploration. In this solution, we allow the user interact with a tool such to
explore different concepts. Exploration is a really good way to help people
understand the concepts. For example, users can quickly understand correlations,
when (say) one value increases another decreases. Therefore, an exploratory tool
would be suitable, and so we choose to expand this potential solution on sheet 3.
3. Statistics. This solution focuses on visualising statistical information of the input
data. Data is loaded, cases analysed, contours visualised and shown where each
case is used. While this is a speciﬁc idea, and is focused on one aspect of the
design, it is something that is not well known. It is also interesting, and we could
imagine how this idea would be used by a teacher in one of their classes. So, we
choose to expand this idea on sheet 4.
4. Index and Ambiguous case. This idea focuses on how the index is created, and
how to disambiguate the ambiguous cells. Like the statistics viewer, this design
focuses on a particular challenge (namely the ambiguous case). Our decision that
we need to make is really between the statistics viewer or the ambiguous case
viewer. Both ideas focus on a particular aspect of the algorithm. Our logic and
belief is that we feel that it would be alright to have one specialist solution (in
our bunch of three) along with two more general versions, but two specialist
solutions would not be suitable. In addition, one of the challenges with this
solution is that most of the algorithmic solutions to the ambiguous face are either
very simple (such to use the centre point to decide which case to choose) or are
in fact completely different algorithms. So, we conclude that we will drop this
idea, as it is not so suitable for our scenario.
5. Quiz. Our ﬁfth shortlisted idea is a quiz. It is clear that this is a different type
of solution. However, when we go back to the outline requirements we start to
realise that this does not quite ﬁt with the scenario. We need something that can

11.5
Visualisation Example: Sheets 2, 3, 4 and 5
317
be used as part of the taught class. We decide, in this situation, that a quiz does
not really explain concepts, rather it evaluates knowledge. While assessment is
an important part of education, it is not the main focus of the task, so we reject
this idea.
11.5
Visualisation Example: Sheets 2, 3, 4 and 5
We continue demonstrating the sketches for the explanatory marching squares
algorithm by working though the three middle sheets, as shown in Figs. 11.17,
11.18 and 11.19. While the sketches on each sheets focus on a different solution
the structure of each sheet remains consistent. This helps us to read the sheets
and understand what information to expect in each panel. Also, notice that we
label parts of the sketch in the Big Picture panel, and then reference these points
in the Components panel. Furthermore, each of the Parti panels reﬂect the core
ideas of each solution: from storytelling (sheet 2), user exploration and interaction
(sheet 3), to a statistics visualiser (sheet 4). In the sheets 2 and 3, we have included
components that describe interaction and description of animation.
To take the decision of which design idea to choose for sheet 5, we reﬂected on
the task and also the solutions that we have created. Each of the ideas have their
merits, and each have their problems. The storytelling design ﬁts the task and could
be used in a class with students, and it would also allow users to explore some
of the cases. However the story is ﬁxed by the developer. On the other hand, the
exploration design solution from sheet 3 allows the learner to view the stories in any
order. While this can be viewed as an advantage, it could also be a disadvantage,
where it may be difﬁcult for a user to know where to start and what subject to
understand ﬁrst. The ﬁnal design, on sheet 4, focuses on one speciﬁc story. On
reﬂection, however, we feel that while this makes an interesting story, it does not
completely fulﬁl the overall goals. Therefore, after weighing up the positives and
negatives of each design solution, we deicide that the storytelling idea on sheet 2
was the most suitable and ﬁtted best with the outline speciﬁcation.
The realisation design of the Explanatory Visualisation exercise is show in
Fig. 11.20. Notice that every panel is sketched in-depth, and that the ﬁnal panel
includes details that would help someone to implement the solution. We have
implemented this example. Our implementation is shown in Fig. 11.21. The tool
allows the user to create a dataset. Rather than being totally random data, we
use a growth-generation algorithm to create a dataset with single large area and
smaller outline areas. We name the large area the mainland which has many smaller
Islands. Our solution steps through the different stages, and uses animation to
explain how the index is calculated on a cell-by-cell basis. So to give the observer
an understanding of the complexities of the marching process, but without taking
too long, the animation starts off slow and then gets quicker.

318
11
Five Design-Sheet Examples and Applications
Information
Big Picture panel,
showing different
parts of the story in
each panel A..G
Components of the
system, with Action/
result pairs.
Parti  panel showing
the main idea:
stages of the story,
with animation for
each part.
Pros and Cons
Fig. 11.17 Sheet 2 of the marching squares algorithm showing the storytelling solution
11.6
Conclusion
Our technological world is changing fast. New technologies and computing devices
are being designed daily. As interface developers we need to be creative and design
new systems that utilise these technologies. In fact, this change is huge. Mobile
devices are becoming ubiquitous, they are altering the way we communicate, work
and keep in touch with our friends. Tablets and even our desktop computers now
allow us to control them through touch or swipe actions. Head mounted displays
immerse us in our own personal, yet virtual world, and the mouse interface that
has pervaded all our computer operations is gradually being swapped for the

11.6
Conclusion
319
Information
Big Picture panel,
showing the many
aspects to learn
(each in a new
window).
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea:
focusing on one of
the main aspects
(marching of the
cases).
Pros and Cons
Fig. 11.18 Sheet 3 of the marching squares algorithm that shows how a user could explore to learn
about different aspects of the algorithm
convenience of our ﬁngers, with touch based devices becoming the normal way
to interact with computer interfaces.
With these changes in technology, we need to think differently about human-
computer interface design. No longer can we rely on old methods of interacting
with the computers. In fact, we may need to question the whole underpinning
assumptions and metaphors we use in our interfaces. We can even imagine that,
for today’s computing technologies and methods, the desktop metaphor is now
not suitable [5]. The way we drag and drop icons into the waste bin, or load an
application by double-clicking on an icon, are interaction techniques of the past.
Making an assumption that the interface device a user will use is a mouse, is
not possible now. We cannot make assumption over the size of the screen or the

320
11
Five Design-Sheet Examples and Applications
Information
Big Picture panel,
showing the
interactive statistical
viewer to visualize
the quantity of
different marching
squares cases.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: the
full algorithm, the
process of
calculating the
statistics with
multiple coordinated
visualization.
Pros and Cons
Fig. 11.19 Sheet 4 of the marching squares algorithm showing the statistics viewer solution
resolution that the device will work on. Webpages have had to adjust to this changing
work, especially. Originally most websites were designed for a large screen and did
not work very well on the small screen real-estate of mobile phones, but with the rise
of Internet ready mobile devices so the technology and method of browsing has had
to adapt. We now have mobile and small-screen ready websites, that automatically
modify the size of the screen to ﬁt the device that is rendering it. We are also seeing
new applications and new types of computer systems. We have smart meters in our
homes to allow us to remotely change the temperature of our heating, or turn on
our kettle, multiplayer games that are played in towns using augmented reality, and
complex computer-controlled interfaces on our washing machines and household
technology. Computing interfaces will continue to develop.

11.6
Conclusion
321
Information
Big Picture panel,
showing the
storytelling
application.
Components of the
system, with Action/
result pairs.
Parti panel showing
the main idea: the
process through the
story.
Detail of how to
take the idea
forward to
implemetation.
Fig. 11.20 Sheet 5 of the marching squares explanation task. This is the realisation design sheet,
includes a more complete plan of the design and details that will be needed for someone to
implement the tool
As developers, therefore, we should be investigating and imagining novel
applications, and different software interfaces. There is no doubt that many new
computer-human technologies are in research centres of Universities and companies
today, and will soon be the devices we will use everyday. We will have to adapt
the applications that we build for these devices. History tells us that some of these
technologies will fall by the wayside, whereas others will survive. Only time will
tell us, which ones we will be using in ten or twenty years time. But, what we do
know is that the devices will be smaller, they will be faster and more capable than
we have today. And these computing devices will deﬁnitely be more connected to
servers and will be always connected to the Internet. We are already seeing always

322
11
Five Design-Sheet Examples and Applications
Fig. 11.21 The implementation of the marching squares explanatory visualisation, showing the
main stages of the algorithm. The user can generate test data, explore different threshold values
before seeing the binary version of the data. At the end of the animation, the user can explore the
different cases by brushing over points on the data
on and always connected applications. In fact, we use many applications that only
work when connected to the server. But we should not view these challenges as
issues and problems, rather they are opportunities. These features therefore give us,
as developers and designers, huge opportunities to develop new applications.
Companies will always need designers and developers who are able to explore,
craft and develop new forms of interactive devices and develop appropriate inter-
faces that will go on these devices. Therefore, knowing a design methodology
should put you in good stead. What is also true is that designers will always need to
be able to ideate and discuss alternative solutions. There will inevitably be the need
to design new computing interfaces and explore many alternative possible strategies,
and to critically consider each design for its relative positives and negatives.

11.6
Conclusion
323
The FdS is one such strategy. It helps you think through the task and ascertain
what is important. It helps you work through the idea stage and initiate alternative
design solutions. Then narrow these all the potential solutions, to three main
concepts, before ﬁnalising on one speciﬁc design. The method can be applied to
develop any interactive interface and animation. While it has been used in a wide
range of application areas, we have no doubt that there are many more that we have
not used it on; we believe it can be applicable to design a wide range of interfaces
and computing tools. While, in this book, we have focused on the development of
human-computer and visualisation interfaces it is clear that it would be possible to
adapt it to your needs. What we are suggesting is that you interpret the panels. We
deliberately use the term Big Picture because it is a general term. But you should
think what would the interface look like, if it were built, and sketch whatever is
appropriate.
We, however, are not suggesting that you change the structure of the FdS. The
structure has been created after much deliberation and use, since its inception in
2009. We do not encourage adding more panels, or more sheets. Five sheets will
help you consider all aspects of the design, ﬁve panels per sheet will help you to
keep focused on the important aspects of the design, and the ﬁfth sheet will help
you understand what to implement. If the ﬁfth sheet is not suitable, then sure, you
can create another (and better) design sheet, that is better focused on your challenge.
But do not think, from the outset, that you will create six or more sheets. Start with
ﬁve sheets and only, if there is no other alternative, develop a replacement ﬁfth
sheet. Our choice of the word replacement is important. Because, if you are creating
a duplicate realisation sheet then you are actually replacing the current ﬁfth sheet
with the new design solution.
Every project has deadlines, whatever its purpose, and your projects are no
different. Therefore it is clear that you will be pushed for time and you will have
to create the design sheets under pressure. However, while it may seem counter-
intuitive, we suggest that you slow down in your design sketching and making of
the ﬁve sheets. It is much better to spend time working out the hitches and problems
with your design ideas early. Especially when you are working with paper. Rather
than afterwards when you have spent much time on the implementation and realise
that it does not fulﬁl the design speciﬁcation or task. In our experience, too many
developers have a tendency to rush into programming; they would be better if they
thought about the problem longer, looked at alternative solutions and tried to explore
different design solutions. Sure, we are living in a fast-paced society, but is that not a
good reason in itself to slow down and put some time in contemplating the problem
and making effective design sketches? Actually, through your design process you
must slow down and consider your concepts in great detail. Not only does this
reﬂection help you to more deeply consider the ideas, but it also smooths out or
removes problems, early in the design cycle. That may have caused problems later
when you perform the implementation. It is extremely important to slow down, and
reﬂect upon the ramiﬁcations of your decisions or designs that we make. To achieve
this, you must factor into your schedule a time for reﬂection; a time to slow down

324
11
Five Design-Sheet Examples and Applications
and be critical on your actions and your work. Slowing down also helps you to enjoy
the experience better. Happier designers probably means better designs.
Sketching can be a pleasant and exhilarating experience. But, it is clear that some
people do not like to sketch and subsequently do not ﬁnd it enjoyable. However, if
you can get to a place of acceptance and even enjoyment, then you will use the FdS
method much more effectively. Try to sketch, even doodle a little everyday. Follow
our exercises and try to improve your sketching skills. There is certainly a learning-
curve. You need to understand where to put the information on the ﬁve sheets and
how to use the sheets to their full potential. The more you do the design sheets, the
better you will become, the more conﬁdent you will be in creating effective designs
that communicate your thoughts. Get some nice pens, good quality paper, to help
you be excited over the prospect of sketching designs and it will be much more an
enjoyable experience.
It is exceptionally important that you are in the right frame-of-mind. If you are
angry, upset, or frustrated then you will not be able to sketch designs to the best of
your ability. Try to solve these issues ﬁrst before starting the design sheets. Go out
for a walk, pay off debt, apologise to your neighbour! Realise the beneﬁt of making
careful thought on the problem before rushing into coding. But make sure it is a
pleasant and happy experience. But approaching the work with the right attitude
will help you succeed.
Make sure you have time to do all the sketches. Fitting it in a 10 min slot between
meetings is not good. The short time is pressured by the meetings, and probably
your mind will be actively remunerating on the topics of the previous meeting and
preparing for the next one. Give yourself time to think about the challenge, and to
contemplate the design ideas. Make sure you have space (a location) whereby you
can spread out the paper, place the pens down, and not worry that someone will
move your work. Having a safe space to work will help you relax and think on the
challenge, rather than worrying about the environment.
We hope you make sketching a part of your life and turn to the FdS methodology
for your projects and make it an integral part of your development processes. We
hope that you get to a stage whereby you are not frightened to use sketches in
meetings, presentations and assignments. The more you sketch, the better you will
become. Not everyone in your group, company, College or University will know
about the FdS methodology. So you may need to explain what it is. But when your
colleagues, peers, clients or partners understand how to perform sketching by design
using ﬁve sheets, then at the start of the project you will be able to say: “let us
perform a Five Design-Sheet sketch of the problem”.

References
325
References
1. Hill S, Roberts JC (1995) Surface models and the resolution of n-dimensional cell ambiguity.
In: Paeth AW (ed) Graphics gems V. Academic Press, Boston, pp 98–106
2. Lorensen WE, Cline HE (1987) Marching cubes: a high resolution 3D surface construction
algorithm. SIGGRAPH Comput Graph 21(4):163–169. doi:10.1145/37402.37422
3. Nielson GM, Hamann B (1991) The asymptotic decider: resolving the ambiguity in marching
cubes. In: Proceedings of the 2nd conference on visualization’91. IEEE Computer Society Press,
Los Alamitos, pp 83–91
4. Roberts JC, Hill S (1999) Piecewise linear hypersurfaces using the marching cubes algorithm.
In: Electronic imaging’99: International society for optics and photonics, pp 170–181
5. Roberts JC, Mearman JW, Ritsos PD (2014) The desktop is dead, long live the desktop! –
towards a multisensory desktop for visualization. In: Death of the desktop workshop, IEEE
conference on visualization (VIS), Paris, 9–14 Nov 2014

Index
Five Design Sheet (FdS), 3
A
acid free paper, 124
acronym
LONGPEST, 112
LSEPI, 112
PEST, 112
PESTLIED, 112
STEEPLE, 112, 113
action/result pairs, 266
active learning, 10, 77, 89
ad hoc, 122
aesthetics, 287, 288
Agile, 4
alcohol markers, 128
altering the structure, 323
alternatives, 3, 79
analytic thinking, 34
animation, 265
application, 223
arbitrary symbols, 159
architects, 121
art therapy, 123
artiﬁcial general intelligence, 102
artiﬁcial intelligence, 101
Association for Computing Machinery (ACM),
104
attitude, 91, 95
authority, 92, 98
autonoetic consciousness, 86
B
back-of-an-envelope, 5
background knowledge, 50
backstory, 18, 179, 212
Bangor University, vii
BCS, 101
big picture panel, 249
bioinspiration, 195
biomimicry, 195
bioutilisation, 195
block of wood, 214
bottom-up thinking, 227
box plot, 168
brainstorm, 142
buildable, 290
C
cartogram, 168
cartooning, 123
categorise, 221
chartjunk, 288
Chernoff faces, 168
choropleth, 168
citizen science, 300
client working, 246
code of ethics, 104
cognitive behaviour therapy (CBT), 191
cognitive processes
System 1 and 2, 5, 50, 88
thinking fast and slow, 88
collaboration, 198
© Springer International Publishing AG 2017
J.C. Roberts et al., Five Design-Sheets: Creative Design and Sketching
for Computing and Visualisation, DOI 10.1007/978-3-319-55627-7
327

328
Index
colour, 287
colour hue, 163
colour map, 288
colour tones, 128
colouring books, 123
combine and reﬁne, 221, 305
command-line, 258
command-line interfaces, 39
Computed Tomography (CT), vii
computer graphics, 101
computer science degree, 312
consciousness
anoetic, 86
autonoetic, 86
neotic, 86
construction game, 234
constructivist, 10
context, 18
contouring, 312
convergent thinking, 22, 69, 72
cost, 289
creative environement, 191
creative mindset, 191
creative thinking, ix
creative visualisation, 15, 16
critical analysis, 7, 22, 29
critical thinking, 9, 10, 55, 70
CSS, 11
cyber-bullying, ix
cyber-crimes, ix
D
dashboard visualisation, 107
data
availability of, 97
fabricated, 96
ﬁlter, 228
wrangling, 228
data visualisation, 4, 96, 98, 272, 287
dataﬂow paradigm, 227
deadlines, 323
decide, develop, deliver, 283
deliberate practice, 9, 33
design by sketching, 17
design council, 75
design patterns, 13, 40, 296
design process, 38
design thinking, 4
design-study, 19
desktop metaphor, 319
developer skills, 97
diagrams, 166
directed thinking, 44
Disney, 232
disposition for critical thinking, 57
divergent thinking, 22, 73
Document Object Model (DOM), 13
dolmen, 299
doodle, 193
double diamond model, 75, 76
drawing, 122
E
eco-friendly, 289
emotional energy, 289
emotional impact, 290
emotional response, 111
emotions, 94
empathetic, 95
empowered learner, 9
environment, 95
ethical, 23
ethics, 100
ethics mnemonics
LSEPI, 101
eureka, 186
Eurographics, 35
example
accomodation prices, 159
bridge building game, 274
construction game, 234
continuous line study, 126
diffusion limited aggregation, 77
driving game, 13
eco-friendly house, 272
explanatory visualisation, 312
ﬂower pattern generator, 11
health tracking dashboard, 107, 113
heritage scenario, 299
heritagetogether website design, 259
image processing tool, 229
marching squares, 266, 312
multiple view system, 261
oceanographic visualisation, 262
one-handed image manipulation, 272
puzzle game, 223, 231, 238, 274
rainfall visualisation, 10
rambling tour, 176
seismic survey, 90
shopping cart app, 258
sliding-blocks pattern game, 274
smart phone app, 259
swimming pool, 62, 63
table-top archaeology, 262

Index
329
tour for ramblers, 176
trail-burn simulation game, 274
website, 259
experiential learning, 21
explanatory visualisation, 312
F
fade proof, 124
FdS
FdS introduction, 27
history of FdS, 35
ﬁlter, 221
ﬁt, 285
ﬁve rules for moral computing, 106
ﬂower-pattern generator, 11
focused learning, 9
foresight, 57
fortuitous accidents, 203
frameworks, 227
framing the vision, 212
functional ﬁxedness, 59, 72
G
games, 192
gaphical user interfaces, 258
gather materials, 187, 246
general artiﬁcial intelligence, 103
Gestalt, 45
closure, 156
common fate, 158
common regions, 158
continuity, 156
good form, 158
parallel lines, 158
past experience, 158
proximity, 155
similarity, 155
symmetry, 158
uniform connectedness, 158, 159
gestures, 10
get prepared, 211
glyphs, 168
goals, 284
grand challenges, 48, 56
group working, 143
Group working., 143
H
hard data, 68
Harlech College, vii
head mounted displays, 318
heuristic, 177
histogram, 168
holistic thinking, 34
holistic view, 246
how to frame the problem?, 218
HTML5, 11
human intelligence, 103
human visual system, 287
Human-Computer Interaction (HCI), 21
I
IBM Data Explorer, 228
IBM Deep Blue, 102
idea generation, 21, 186
ideate, ix
identity, 87
idiosyncrasies, 87
IEEE, 35, 89, 104
ill-structured problems, 61
illumination, 61
image manipulation, 229
imagination, 18
impossible teapot, 220
incubation, 61
indexical, 161, 224
infographic, 219
information seeking mantra, 230
information visualisation, vii, 37, 101
ink wash, 124, 131, 138
insight problems, 71
inspiration from man-made, 197
inspiration from nature, 195
interfaces, 13
Internet, 103
J
journaling, 123
journey of sheet 1, 220
judgements, 22
L
lateral thinking, 73
lazy thinkers, 215
learner empowerment, 10
learning set, 58
Leonardo da Vinci, vi
Leonardo’s notebooks, vi
line graph, 168
listen to music, 193
lo-ﬁdelity prototyping, 122
low-ﬁdelity prototypes, 17, 141
LSEPI, 101

330
Index
M
Magenetic Resonance Imaging (MRI), vii
mandate, 98
Marching Cubes, vii
marching cubes, 312
marching squares, 312
Megalithic tombs, 299
memory
episodic, 86
procedural, 86
semantic, 86
mental representation, 43
mentee, 89
mentor, 89
messes, 68
metacognition, 53, 60
metacognitively, 86
microblogging, 25
middle sheets, 245
minds-eye, 14
mistakes, 203
mobile phone, 224
mockups, 134
Model View Controller, see pattern, 13
Module Visualisation Environments, 227
motivation, 77
extrinsic, 77
intrinsic, 77
multiple coordinated views, 261
multiple designs, 180
N
natural user interface (NUI), 265
natural user interfaces (NUI), 196
neat and tidy, 111
need for a tool, 98
networks, graphical, 166
O
object oriented programming (OO), 21, 227,
296
Open Source, 104
optimisation problem, 177
overview, zoom and ﬁlter, details, 230
P
PalmPilot, 214
paralysing design, 217
parameter state, 11
parti, 39, 247, 271, 273
pattern, 13
Model View Controller, 13, 77, 227, 296
software design patterns, 58, 227
patterns, 195
pens and pencils, 123
people
Guilford, Joy Paul, 73
Tulving, Endel, 86
Watt, James, 200
Andreessen, Marc, 285
Asimov, Isaac, 103
Bergman, Eric, 215
Bertin, Jacques, 162, 168
Bolton, Matthew, 200
Borkin, Michelle, 288
Brooks, Frederick, 219
Card, Stuart, 168, 228
Chernoff, Hermon, 168
Cline, Harvey, 314
Dali, Salvador, 193
Darwin, Erasmus, 200
de Bono, Edward, 73, 111, 203
Dewey, John, 51, 52
Duncker, Karl, 45, 59
Edgett, Scott, 285
Einstein, Albert, 216
Entman, Robert, 213
Facione, Peter, 55
Frederick,Matthew, 273
Guilford, Joy Paul, 75
Haitani, Rob, 214
Hawkins, Jeff, 215
Honoré, Carl, 194
Johnson, Steve, 202
Johnson, Steven, 186
Kahneman, Daniel, 50
Kasparov, Garry, 102
Lohse, Jerry, 166
Lorensen, William, 314
McCartney, Paul, 193
Miller, Keith, 106
Munzner, Tamara, 231
Newell, Martin, 220
Norman, Donald, 220, 288
Pauling, Linus, 55, 175
Peirce, Charles S., 224
Pirolli, Peter, 228
Polya, George, 57, 61
Porter, Michael E, 108
Rams, Dieter, 217, 290
Rao, Ramana, 168
Roberts, Jonathan C, 166
Robinson, Ken, 78, 192

Index
331
Shneiderman, Ben, 77, 230
Tractinsky, Noam, 287
Tufte, Edward, 288
Turing, Alan, 102, 103
Wallace, Graham, 58
Wallas, Graham, 61
Ward, Matthew, 168
Wedgwood, Josiah, 200
Williams, Francis, 166
Young, James Webb, 187, 246
perceived complexity, 217
permission and approval, 99
perseverance, 76
persistent, 190
persistent practice, 33
phishing, 104
photogrammetry, 299, 303
photorealistic picture, 134
pigment, 127
pigment ink, 124
ping-pong balls, 62
play, 33
popular science, 103
poverty, improving, 67
preparation, 7, 61
priming, 215
problem driven, 61
problem-based learning, 60, 61
problems, 45
ill-structured, 79
well-structured, 79
product, 107
product/market ﬁt, 285
professional conduct, 111
professional development, vii
programming, 14
pros and cons, 247
puzzle, 70, 223
ﬁsh in matches, 70
matches squares, 71
nine dots, 71
Q
question
can you?, 87
ill-structured, 61
should you?, 87
well-structured, 61
what if you?, 87
questions
ill-structured, 65
well-structured, 65
R
rainbow colourmap, 288
rainfall visualisation, 10
read books, 193
realisation design, 309
realisation sheet, 291
reﬂect, 51, 90
reﬂection, 29
reiﬁcation, 155
relax, 187, 246
reorderable matrix, 168
reproductive, 44
requirements, 295
research, 23
resources, 92, 93
intangible, 93
tangible, 93
retinal variables, 162
rework, 189, 246
risk, 92
robot ethics, 102
robots, 103
S
sable brush, 131
salient features, 215, 223
Scalable Vector Graphics (SVG), 11
scatterplot, 163
scatterplot matrix, 169
scatterplots, 168
scrap booking, 128
self-control, 79
semiology, 166
semiotics, 159
sensemaking, 228
senses, 40
sensory symbols, 159
serendipity, 203
sheets 234, 247
why three sheets, 245
signiﬁed, 160
signiﬁer, 160
six thinking hats, 111, 200, 203
sketch book, 121
sketching, 7, 17, 121
animation interfaces, 265
beneﬁt of, 134
multiple views, 261
smart phone apps, 259
techniques, 135
technologies, 257

332
Index
sketching (cont.)
user interfaces, 258
virtual reality, 262
websites, 259
sketching, alone or in group, 142
sleep, 194
sliding blocks game, 232
slow down, 323
slow hunch, 186
smart phone, 259, 302
smartphones, 40
social space, 306
social spaces, 303
sociotechnical, 106
soft data, 68
software engineers, 4
spamming, 104
standards of conduct, 104
standing stones, 299
starting sheet 1, 223
STEEPLE, 24
storyboard, 266
storyboarding, 123
storytelling, 18, 182, 258
stylus, 10
sudoku, 232
Sun Microsystems, 214
super-wicked problems, 68
supervisor, 4
sustainable, 289
swipe the screen, 268
SWOT analysis, 107
symbolic, 224
symbols, 168
T
tabletop interface, 272
tame problems, 67
tangible interfaces, 262
task, 30
team, 97
teapot, 219
ten commandments of design, 217
think, 246
think-aloud, 89
thinking, 6, 43
bottom-up, 227
fast and slow, 5, 50, 88
top-down, 227
three-dimensional drawing, 138
time and money, 94
torrance tests of creative thinking, 74
touch devices, 224
touch input, 40
transfer (educational), 58
transparent interfaces, 258, 265
traveling salesman problem, 177
treemap, 90, 168
triadic model, 224
triage, 88
turing test, 102
U
UML, 21
undirected thinking, 44
Uniﬁed Modelling Language (UML), 21, 34
uniform connectedness, 170
unique design, 290
usability, 285
useful, 97
useful design, 286
user interface, 39, 258
users
environment, 226
novice, 226
Utah teapot, 220
utility, 92, 97
V
veriﬁcation, 61
vibrotactile, 40
virtual reality, 262
vision, 5, 212
visual programming, 228
visualisation, 16
explanatory, 219, 312
exploratory, 219
presentation, 219
rainfall visualisation example, 10
volume rendering, 312
W
waltz visualisation tool, vii
wash, 125
water soluble pencils, 129
watercolour, 125, 129
watermedia, 129
web accessibility iniative (WAI), 101
web computing, 103
websites, 259

Index
333
well-structured problems, 61
where’s my water, 232
who what where when why, 109
wicked problems, 67, 69
WIMP, 10
Windows Icons Menu Pointers (WIMP), 10
wireframe, 134
workﬂow, 4
X
x-ray image, 168

